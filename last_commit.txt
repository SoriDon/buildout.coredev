Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-12-29T12:18:14+01:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/plone.restapi/commit/176d99b07c6fd08de72f477d64487d19b44dc438

Fix No such index: 'sort_on' warnings (#1558)

Fix: No such index: 'sort_on' warnings

When we have sort_on or sort_order in the query passed to ZCatalogCompatibleQueryAdapter, warnings should not be issued in the log.

Skip test_zcatalogcompatiblequeryadapter_log in Python &lt; 3.10

Authored-by: wesleybl &lt;wesleybl@gmail.com&gt;

Files changed:
A news/1558.bugfix
M src/plone/restapi/search/query.py
M src/plone/restapi/tests/__init__.py
M src/plone/restapi/tests/test_search.py

b'diff --git a/news/1558.bugfix b/news/1558.bugfix\nnew file mode 100644\nindex 000000000..cb05b0b7c\n--- /dev/null\n+++ b/news/1558.bugfix\n@@ -0,0 +1,2 @@\n+Fix mistaken warnings about sort_on and sort_order parameters in the @query\n+service. [davisagli]\ndiff --git a/src/plone/restapi/search/query.py b/src/plone/restapi/search/query.py\nindex 976143730..ded16393e 100644\n--- a/src/plone/restapi/search/query.py\n+++ b/src/plone/restapi/search/query.py\n@@ -102,12 +102,13 @@ def parse_multiple_types_param(self, idx_name, idx_query):\n     def __call__(self, query):\n         for idx_name, idx_query in query.items():\n             if idx_name in self.global_query_params:\n-                # It\'s a query-wide parameter like \'sort_on\'\n+                # It\'s a query-wide parameter like \'sort_limit\'\n                 query[idx_name] = self.parse_query_param(idx_name, idx_query)\n                 continue\n \n             if idx_name in self.multiple_types_global_query_params:\n                 query[idx_name] = self.parse_multiple_types_param(idx_name, idx_query)\n+                continue\n \n             # Then check for each index present in the query if there is an\n             # IIndexQueryParser that knows how to deserialize any values\ndiff --git a/src/plone/restapi/tests/__init__.py b/src/plone/restapi/tests/__init__.py\nindex e69de29bb..73c4fe71d 100644\n--- a/src/plone/restapi/tests/__init__.py\n+++ b/src/plone/restapi/tests/__init__.py\n@@ -0,0 +1,5 @@\n+import sys\n+\n+\n+# BBB: Remove when drop Python 3.9 support.\n+PY3_10 = sys.version_info[0:2] >= (3, 10)\ndiff --git a/src/plone/restapi/tests/test_search.py b/src/plone/restapi/tests/test_search.py\nindex 4a78d22f7..e238dec9c 100644\n--- a/src/plone/restapi/tests/test_search.py\n+++ b/src/plone/restapi/tests/test_search.py\n@@ -11,8 +11,10 @@\n from plone.app.textfield.value import RichTextValue\n from plone.dexterity.utils import createContentInContainer\n from plone.registry.interfaces import IRegistry\n+from plone.restapi.search.query import ZCatalogCompatibleQueryAdapter\n from plone.restapi.testing import PLONE_RESTAPI_DX_FUNCTIONAL_TESTING\n from plone.restapi.testing import RelativeSession\n+from plone.restapi.tests import PY3_10\n from plone.restapi.tests.helpers import result_paths\n from plone.uuid.interfaces import IMutableUUID\n from Products.CMFCore.utils import getToolByName\n@@ -817,3 +819,22 @@ def test_search_use_site_search_settings_with_vhm(self):\n \n         noLongerProvides(self.folder, INavigationRoot)\n         transaction.commit()\n+\n+    # BBB: Remove condition when drop Python 3.9 support.\n+    @unittest.skipUnless(PY3_10, "assertNoLogs is only in Python >= 3.10")\n+    def test_zcatalogcompatiblequeryadapter_log(self):\n+        """When we have sort_on or sort_order in the query passed to\n+        ZCatalogCompatibleQueryAdapter, warnings should not be issued in the\n+        log.\n+        """\n+        query_adapter = ZCatalogCompatibleQueryAdapter(self.portal, self.request)\n+        with self.assertNoLogs("plone.restapi.search.query", level="WARN"):\n+            query_adapter(\n+                {\n+                    "b_size": "50",\n+                    "metadata_fields": "_all",\n+                    "path": {"depth": "1", "query": "/Plone"},\n+                    "sort_on": "getObjPositionInParent",\n+                    "sort_order": "ascending",\n+                },\n+            )\n'

