Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2016-04-08T15:22:37+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/47ca719967936a69301bb2c0c905216fa62754ae

Moved ./utils/validate_json to the only place where it was used in order to avoid circular imports between ./interfaces/* and ./utils. Now relocated to ./interfaces/controlpanel.py

Files changed:
M Products/CMFPlone/interfaces/controlpanel.py
M Products/CMFPlone/utils.py

diff --git a/Products/CMFPlone/interfaces/controlpanel.py b/Products/CMFPlone/interfaces/controlpanel.py
index 7fe1766..4845774 100644
--- a/Products/CMFPlone/interfaces/controlpanel.py
+++ b/Products/CMFPlone/interfaces/controlpanel.py
@@ -1,15 +1,15 @@
 # -*- coding: utf-8 -*-
-import json
-
-from Products.CMFPlone import PloneMessageFactory as _  # NOQA
-from Products.CMFPlone.utils import validate_json
 from basetool import IPloneBaseTool
 from plone.supermodel import model
+from Products.CMFPlone import PloneMessageFactory as _  # NOQA
 from zope import schema
-from zope.interface import Interface, implements
+from zope.interface import Interface
+from zope.interface import implementer
 from zope.schema.vocabulary import SimpleTerm
 from zope.schema.vocabulary import SimpleVocabulary
 
+import json
+
 
 ROBOTS_TXT = u"""Sitemap: {portal_url}/sitemap.xml.gz
 
@@ -47,6 +47,20 @@
 """
 
 
+def validate_json(value):
+    try:
+        json.loads(value)
+    except ValueError, exc:
+        class JSONError(schema.ValidationError):
+            __doc__ = _(u"Must be empty or a valid JSON-formatted "
+                        u"configuration â€“ ${message}.", mapping={
+                            'message': unicode(exc)})
+
+        raise JSONError(value)
+
+    return True
+
+
 class IControlPanel(IPloneBaseTool):
     """ Interface for the ControlPanel """
 
@@ -240,7 +254,9 @@ class ILanguageSchema(Interface):
                 default=(u"Use cookie for manual override")),
         description=_(
             u"description_cookie_manual_override",
-            default=(u"Required for the language selector viewlet to be rendered.")
+            default=(
+                u"Required for the language selector viewlet to be rendered."
+            )
         ),
         default=False,
         required=False,
@@ -263,7 +279,11 @@ class ILanguageSchema(Interface):
             default=(u"Set the language cookie always")),
         description=_(
             u"description_set_language_cookie_always",
-            default=(u"i.e. also when the 'set_language' request parameter is absent")),
+            default=(
+                u"i.e. also when the 'set_language' request parameter is "
+                u"absent"
+            )
+        ),
         default=False,
         required=False,
     )
@@ -301,10 +321,9 @@ class ITagAttrPair(Interface):
     attributes = schema.TextLine(title=u"attributes")
 
 
+@implementer(ITagAttrPair)
 class TagAttrPair(object):
 
-    implements(ITagAttrPair)
-
     def __init__(self, tags='', attributes=''):
         self.tags = tags
         self.attributes = attributes
@@ -1117,7 +1136,7 @@ class ISiteSchema(Interface):
             SimpleTerm('authenticated', 'authenticated',
                        _('For authenticated users only'))]),
         required=True)
-    
+
     thumb_visibility = schema.Choice(
         title=_(u'Thumb visibility'),
         description=_(u'Show thumbs in listings'),
@@ -1128,7 +1147,7 @@ class ISiteSchema(Interface):
             SimpleTerm('authenticated', 'authenticated',
                        _(u'For authenticated users only'))]),
         required=True)
-    
+
     toolbar_position = schema.Choice(
         title=_(u'Position where the toolbar is displayed'),
         description=_(
diff --git a/Products/CMFPlone/utils.py b/Products/CMFPlone/utils.py
index 4f0bd60..01ff8c4 100644
--- a/Products/CMFPlone/utils.py
+++ b/Products/CMFPlone/utils.py
@@ -40,6 +40,7 @@
 import pkg_resources
 import re
 import transaction
+import warnings
 import zope.interface
 
 deprecated_import(
@@ -629,6 +630,11 @@ def ajax_load_url(url):
 
 
 def validate_json(value):
+    warnings.warn(
+        'Moved to the only place where it was used in order to avoid circular '
+        'imports between ./interfaces/* and ./utils. Now relocated to '
+        '"./interfaces/controlpanel.py"',
+        DeprecationWarning)
     try:
         json.loads(value)
     except ValueError, exc:


