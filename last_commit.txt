Repository: mockup


Branch: refs/heads/master
Date: 2022-06-08T19:03:38+03:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/mockup/commit/918071087c650f9c575c0c488bb08467f26fa8aa

init

Files changed:
M src/pat/tinymce/js/links.js
M src/pat/tinymce/tinymce--implementation.js

b'diff --git a/src/pat/tinymce/js/links.js b/src/pat/tinymce/js/links.js\nindex 155d6290e..2c6bf38c5 100644\n--- a/src/pat/tinymce/js/links.js\n+++ b/src/pat/tinymce/js/links.js\n@@ -515,7 +515,8 @@ export default Base.extend({\n             enableImageZoom: this.options.text.enableImageZoom,\n             captionText: this.options.text.caption,\n             scaleText: this.options.text.scale,\n-            imageScales: this.options.imageScales,\n+            // imageScales: this.options.imageScales,\n+            imageSrcsets: this.options.image_srcsets\n             cancelBtn: this.options.text.cancelBtn,\n             insertBtn: this.options.text.insertBtn,\n         });\ndiff --git a/src/pat/tinymce/tinymce--implementation.js b/src/pat/tinymce/tinymce--implementation.js\nindex 4b4f74cf7..5f15fb932 100644\n--- a/src/pat/tinymce/tinymce--implementation.js\n+++ b/src/pat/tinymce/tinymce--implementation.js\n@@ -192,7 +192,7 @@ export default class TinyMCE {\n         // tiny needs an id in order to initialize. Creat it if not set.\n         var id = utils.setId(self.$el);\n \n-        if (self.options.imageScales && typeof self.options.imageScales === "string") {\n+        if (self.options.image_srcsets && typeof self.options.imageScales === "string") {\n             self.options.imageScales = JSON.parse(self.options.imageScales);\n         }\n \n'

Repository: mockup


Branch: refs/heads/master
Date: 2022-06-08T19:03:38+03:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/mockup/commit/c6f879c996314828244ee49a5edd5bbdc137704b

Use imageSrcset in pat-tinymce

Files changed:
M src/pat/tinymce/js/links.js
M src/pat/tinymce/templates/image.xml
M src/pat/tinymce/tinymce--implementation.js
M src/pat/tinymce/tinymce.js

b'diff --git a/src/pat/tinymce/js/links.js b/src/pat/tinymce/js/links.js\nindex 2c6bf38c5..a81a544ff 100644\n--- a/src/pat/tinymce/js/links.js\n+++ b/src/pat/tinymce/js/links.js\n@@ -184,7 +184,10 @@ var ImageLink = InternalLink.extend({\n     trigger: ".pat-imagelinktype-dummy",\n     toUrl: function () {\n         var value = this.value();\n-        return this.tinypattern.generateImageUrl(value, this.linkModal.$scale.val());\n+        return this.tinypattern.generateImageUrl(\n+            value,\n+            this.linkModal.getScaleFromSrcset(this.linkModal.$scale.val())\n+        );\n     },\n });\n \n@@ -515,8 +518,7 @@ export default Base.extend({\n             enableImageZoom: this.options.text.enableImageZoom,\n             captionText: this.options.text.caption,\n             scaleText: this.options.text.scale,\n-            // imageScales: this.options.imageScales,\n-            imageSrcsets: this.options.image_srcsets\n+            imageSrcsets: this.options.imageSrcsets,\n             cancelBtn: this.options.text.cancelBtn,\n             insertBtn: this.options.text.insertBtn,\n         });\n@@ -643,6 +645,11 @@ export default Base.extend({\n         this.tiny.nodeChanged();\n     },\n \n+    getScaleFromSrcset: function (srcset) {\n+        let srcsetConfig = this.options.imageSrcsets[srcset];\n+        return srcsetConfig.sourceset[srcsetConfig.sourceset.length - 1].scale;\n+    },\n+\n     updateImage: function (src) {\n         var self = this;\n         var title = self.$title.val();\n@@ -651,14 +658,13 @@ export default Base.extend({\n \n         self.tiny.focus();\n         self.tiny.selection.setRng(self.rng);\n-        var cssclasses = ["image-richtext", self.$align.val(), "scale-" + self.$scale.val()];\n+        var cssclasses = ["image-richtext", self.$align.val(), "image-size-" + self.$scale.val()];\n         if (captionFromDescription) {\n             cssclasses.push("captioned");\n         }\n         if (enableImageZoom) {\n             cssclasses.push("zoomable");\n         }\n-\n         var data = $.extend(\n             true,\n             {},\n@@ -668,7 +674,8 @@ export default Base.extend({\n                 "alt": self.$alt.val(),\n                 "class": cssclasses.join(" "),\n                 "data-linkType": self.linkType,\n-                "data-scale": self.$scale.val(),\n+                "data-srcset": self.$scale.val(),\n+                "data-scale": self.getScaleFromSrcset(self.$scale.val()),\n             },\n             self.linkTypes[self.linkType].attributes()\n         );\n@@ -937,6 +944,7 @@ export default Base.extend({\n     guessImageLink: function (src) {\n         if (src.indexOf(this.options.prependToScalePart) !== -1) {\n             this.linkType = "image";\n+            // TODO: use data-scale attribute instead:\n             this.$scale.val(this.tinypattern.getScaleFromUrl(src));\n             this.linkTypes.image.set(this.tinypattern.stripGeneratedUrl(src));\n         } else {\ndiff --git a/src/pat/tinymce/templates/image.xml b/src/pat/tinymce/templates/image.xml\nindex f94a018a1..19134b344 100644\n--- a/src/pat/tinymce/templates/image.xml\n+++ b/src/pat/tinymce/templates/image.xml\n@@ -18,12 +18,11 @@\n           <div class="scale mb-2">\n             <label><%- scaleText %></label>\n             <select name="scale" class="form-select">\n-              <option value="">Original</option>\n-                <% _.each(imageScales, function(scale) { %>\n-                  <option value="<%- scale.value %>" <% if (scale.value === options.defaultScale) { %>selected<% } %> >\n-                    <%- scale.title %>\n-                  </option>\n-                <% }); %>\n+              <% _.each(Object.keys(imageSrcsets), function(key) { %>\n+                <option value="<%- key %>" <% if (key === options.defaultSrcset) { %>selected<% } %> >\n+                  <%- imageSrcsets[key].title %>\n+                </option>\n+              <% }); %>\n             </select>\n           </div>\n         </div>\ndiff --git a/src/pat/tinymce/tinymce--implementation.js b/src/pat/tinymce/tinymce--implementation.js\nindex 5f15fb932..d93631f2d 100644\n--- a/src/pat/tinymce/tinymce--implementation.js\n+++ b/src/pat/tinymce/tinymce--implementation.js\n@@ -62,6 +62,7 @@ export default class TinyMCE {\n         var self = this;\n         var part = data[self.options.linkAttribute];\n         return self.options.prependToUrl + part + self.options.appendToUrl;\n+\n     }\n     generateImageUrl(data, scale_name) {\n         var self = this;\n@@ -192,8 +193,8 @@ export default class TinyMCE {\n         // tiny needs an id in order to initialize. Creat it if not set.\n         var id = utils.setId(self.$el);\n \n-        if (self.options.image_srcsets && typeof self.options.imageScales === "string") {\n-            self.options.imageScales = JSON.parse(self.options.imageScales);\n+        if (self.options.imageSrcsets && typeof self.options.imageSrcsets === "string") {\n+            self.options.imageSrcsets = JSON.parse(self.options.imageSrcsets);\n         }\n \n         var tinyOptions = self.options.tiny;\ndiff --git a/src/pat/tinymce/tinymce.js b/src/pat/tinymce/tinymce.js\nindex eb8b83a17..f0a929433 100644\n--- a/src/pat/tinymce/tinymce.js\n+++ b/src/pat/tinymce/tinymce.js\n@@ -79,16 +79,58 @@ export default Base.extend({\n         prependToScalePart: "/imagescale/",\n         appendToScalePart: "",\n         appendToOriginalScalePart: "",\n-        defaultScale: "large",\n-        imageScales: [\n-            { title: "Mini", value: "mini" },\n-            { title: "Thumb", value: "thumb" },\n-            { title: "Listing", value: "listing" },\n-            { title: "Preview", value: "preview" },\n-            { title: "Tile", value: "tile" },\n-            { title: "Icon", value: "icon" },\n-            { title: "Large", value: "large" },\n-        ],\n+        // defaultScale: "large",\n+        defaultSrcset: "medium",\n+        imageSrcsets: {\n+            large: {\n+                "title": "Large",\n+                "preview": "++theme++barceloneta/static/preview-image-large.png",\n+                "use-in-editor": true,\n+                "sourceset": [\n+                    {\n+                        scale: "teaser",\n+                        media: "(min-width:768px) and (orientation:portrait)",\n+                    },\n+                    {\n+                        scale: "large",\n+                        media: "(min-width:768px)",\n+                    },\n+                    {\n+                        scale: "larger",\n+                        media: "(min-width:992px)",\n+                    },\n+                    {\n+                        scale: "great",\n+                        media: "(min-width:1200px)",\n+                    },\n+                    {\n+                        scale: "huge",\n+                        media: "(min-width:1400px)",\n+                    },\n+                    {\n+                        scale: "huge",\n+                    },\n+                ],\n+            },\n+            medium: {\n+                title: "Medium",\n+                preview: "++theme++barceloneta/static/preview-image-medium.png",\n+                sourceset: [\n+                    {\n+                        scale: "larger",\n+                    },\n+                ],\n+            },\n+            small: {\n+                title: "Small",\n+                preview: "++theme++barceloneta/static/preview-image-small.png",\n+                sourceset: [\n+                    {\n+                        scale: "preview",\n+                    },\n+                ],\n+            },\n+        },\n         imageClasses: {\n             "image-inline": _t("Inline"),\n             "image-right": _t("Right"),\n@@ -138,14 +180,11 @@ export default Base.extend({\n         inline: false,\n     },\n     init: async function () {\n-\n-        const implementation = (\n-            await import("./tinymce--implementation")\n-        ).default;\n+        const implementation = (await import("./tinymce--implementation")).default;\n         this.instance = new implementation(this.el, this.options);\n         this.instance.init();\n     },\n     destroy: function () {\n-        this.instance.destroy()\n+        this.instance.destroy();\n     },\n });\n'

Repository: mockup


Branch: refs/heads/master
Date: 2022-06-08T19:03:38+03:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/mockup/commit/777dd305d3e791ed775b64a5b17375a1273e7ee8

set the correct image size/srcset for existing image

Files changed:
M src/pat/tinymce/js/links.js

b'diff --git a/src/pat/tinymce/js/links.js b/src/pat/tinymce/js/links.js\nindex a81a544ff..b895dcbb7 100644\n--- a/src/pat/tinymce/js/links.js\n+++ b/src/pat/tinymce/js/links.js\n@@ -903,8 +903,9 @@ export default Base.extend({\n                 if (linkType) {\n                     self.linkType = linkType;\n                     self.linkTypes[self.linkType].load(self.imgElm);\n-                    var scale = self.dom.getAttrib(self.imgElm, "data-scale");\n-                    self.$scale.val(scale);\n+                    // set scale selection in link modal:\n+                    var srcset = self.dom.getAttrib(self.imgElm, "data-srcset");\n+                    self.$scale.val(srcset);\n                     $("#tinylink-" + self.linkType, self.modal.$modal).trigger("click");\n                 } else if (src) {\n                     self.guessImageLink(src);\n'

Repository: mockup


Branch: refs/heads/master
Date: 2022-06-08T19:03:38+03:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/mockup/commit/6fb2b3141f1b8f0a21aafaf0409e57a233b65957

refacture pat-tinymce captioning support, to rely on outputfilters

Files changed:
M src/pat/tinymce/js/links.js
M src/pat/tinymce/templates/image.xml
M src/pat/tinymce/tinymce.js

b'diff --git a/src/pat/tinymce/js/links.js b/src/pat/tinymce/js/links.js\nindex b895dcbb7..7d2316e22 100644\n--- a/src/pat/tinymce/js/links.js\n+++ b/src/pat/tinymce/js/links.js\n@@ -519,6 +519,7 @@ export default Base.extend({\n             captionText: this.options.text.caption,\n             scaleText: this.options.text.scale,\n             imageSrcsets: this.options.imageSrcsets,\n+            imageCaptioningEnabled: this.options.imageCaptioningEnabled,\n             cancelBtn: this.options.text.cancelBtn,\n             insertBtn: this.options.text.insertBtn,\n         });\n@@ -655,11 +656,12 @@ export default Base.extend({\n         var title = self.$title.val();\n         var captionFromDescription = self.$captionFromDescription.prop("checked");\n         var enableImageZoom = self.$enableImageZoom.prop("checked");\n+        var caption = self.$caption.val();\n \n         self.tiny.focus();\n         self.tiny.selection.setRng(self.rng);\n         var cssclasses = ["image-richtext", self.$align.val(), "image-size-" + self.$scale.val()];\n-        if (captionFromDescription) {\n+        if (captionFromDescription || caption) {\n             cssclasses.push("captioned");\n         }\n         if (enableImageZoom) {\n@@ -679,9 +681,18 @@ export default Base.extend({\n             },\n             self.linkTypes[self.linkType].attributes()\n         );\n+        if (caption && !captionFromDescription){\n+            data["data-captiontext"] = caption;\n+        }\n         if (self.imgElm && !self.imgElm.getAttribute("data-mce-object")) {\n-            data.width = self.dom.getAttrib(self.imgElm, "width");\n-            data.height = self.dom.getAttrib(self.imgElm, "height");\n+            const imgWidth = self.dom.getAttrib(self.imgElm, "width");\n+            const imgHight = self.dom.getAttrib(self.imgElm, "height");\n+            if(imgWidth){\n+                data.width = imgWidth;\n+            }\n+            if(imgHight){\n+                data.height = imgHight;\n+            }\n         } else {\n             self.imgElm = null;\n         }\n@@ -696,30 +707,11 @@ export default Base.extend({\n         if (self.imgElm) {\n             self.dom.remove(self.imgElm);\n         }\n-        if (self.captionElm) {\n-            self.dom.remove(self.captionElm);\n-        }\n-        if (self.figureElm) {\n-            self.dom.remove(self.figureElm);\n-        }\n \n         data.id = "__mcenew";\n         var html_inner = self.dom.createHTML("img", data);\n-        var caption = self.$caption.val();\n         var html_string;\n-        if (caption && !captionFromDescription) {\n-            // clean up img class, as we will have them on the firgure tag\n-            var dummyDiv = document.createElement("div");\n-            dummyDiv.innerHTML = html_inner\n-            dummyDiv.querySelector("img").removeAttribute("class")\n-            html_inner = dummyDiv.innerHTML\n-\n-            html_inner += "\\n" + self.dom.createHTML("figcaption", {}, caption);\n-            //html_inner += \'\\n\' + self.dom.createHTML(\'figcaption\', { class: \'mceNonEditable\' }, caption);\n-            html_string = self.dom.createHTML("figure", {class: data.class}, html_inner);\n-        } else {\n-            html_string = html_inner;\n-        }\n+        html_string = html_inner;\n         self.tiny.insertContent(html_string);\n         self.imgElm = self.dom.get("__mcenew");\n         self.dom.setAttrib(self.imgElm, "id", null);\n@@ -860,64 +852,47 @@ export default Base.extend({\n \n         var linkType;\n         if (self.isImageMode()) {\n-            var figure;\n             var img;\n-            var caption;\n-            if (self.selectedElm.nodeName === "FIGURE") {\n-                figure = self.selectedElm;\n-                img = figure.querySelector("img");\n-                caption = figure.querySelector("figcaption");\n-            } else if (self.selectedElm.nodeName === "IMG") {\n-                figure = $(self.selectedElm).closest("figure");\n-                figure = figure.length ? figure[0] : undefined;\n-                img = self.selectedElm;\n-                caption = figure ? figure.querySelector("figcaption") : undefined;\n-            } else if (self.selectedElm.nodeName === "FIGCAPTION") {\n-                figure = $(self.selectedElm).closest("figure");\n-                figure = figure.length ? figure[0] : undefined;\n-                img = figure ? figure.querySelector("img") : undefined;\n-                caption = self.selectedElm;\n-            }\n-\n             self.imgElm = img;\n-            self.figureElm = figure;\n-            self.captionElm = caption;\n \n-            if (self.imgElm) {\n-                var src = self.dom.getAttrib(self.imgElm, "src");\n-                self.$title.val(self.dom.getAttrib(self.imgElm, "title"));\n-                self.$alt.val(self.dom.getAttrib(self.imgElm, "alt"));\n+            var src = self.dom.getAttrib(self.imgElm, "src");\n+            var captionText = self.dom.getAttrib(self.imgElm, "data-captiontext");\n+            self.$title.val(self.dom.getAttrib(self.imgElm, "title"));\n+            self.$alt.val(self.dom.getAttrib(self.imgElm, "alt"));\n \n-                if ($(self.imgElm).hasClass("zoomable")) {\n-                    self.$enableImageZoom.prop("checked", true);\n-                }\n-                if ($(self.imgElm).hasClass("captioned")) {\n-                    self.$captionFromDescription.prop("checked", true);\n-                    self.$caption.prop("disabled", true);\n-                }\n-                if (self.captionElm) {\n-                    self.$caption.val(self.captionElm.innerHTML);\n-                }\n+            if ($(self.imgElm).hasClass("zoomable")) {\n+                self.$enableImageZoom.prop("checked", true);\n+            }\n+            if ($(self.imgElm).hasClass("captioned") && !captionText) {\n+                self.$captionFromDescription.prop("checked", true);\n+                self.$caption.prop("disabled", true);\n+            }else if($(self.imgElm).hasClass("captioned") && captionText){\n+                self.$captionFromDescription.prop("checked", false);\n+            }else{\n+                self.$captionFromDescription.prop("checked", false);\n+            }\n+            if (captionText) {\n+                self.$caption.val(captionText);\n+            }\n \n-                linkType = self.dom.getAttrib(self.imgElm, "data-linktype");\n-                if (linkType) {\n-                    self.linkType = linkType;\n-                    self.linkTypes[self.linkType].load(self.imgElm);\n-                    // set scale selection in link modal:\n-                    var srcset = self.dom.getAttrib(self.imgElm, "data-srcset");\n-                    self.$scale.val(srcset);\n-                    $("#tinylink-" + self.linkType, self.modal.$modal).trigger("click");\n-                } else if (src) {\n-                    self.guessImageLink(src);\n-                }\n-                var className = self.dom.getAttrib(self.imgElm, "class");\n-                var klasses = className.split(" ");\n-                for (var i = 0; i < klasses.length; i = i + 1) {\n-                    var klass = klasses[i];\n-                    for (var availClass in self.options.imageClasses) {\n-                        if (availClass.indexOf(klass) !== -1) {\n-                            self.$align.val(klass);\n-                        }\n+            linkType = self.dom.getAttrib(self.imgElm, "data-linktype");\n+            if (linkType) {\n+                self.linkType = linkType;\n+                self.linkTypes[self.linkType].load(self.imgElm);\n+                // set scale selection in link modal:\n+                var srcset = self.dom.getAttrib(self.imgElm, "data-srcset");\n+                self.$scale.val(srcset);\n+                $("#tinylink-" + self.linkType, self.modal.$modal).trigger("click");\n+            } else if (src) {\n+                self.guessImageLink(src);\n+            }\n+            var className = self.dom.getAttrib(self.imgElm, "class");\n+            var klasses = className.split(" ");\n+            for (var i = 0; i < klasses.length; i = i + 1) {\n+                var klass = klasses[i];\n+                for (var availClass in self.options.imageClasses) {\n+                    if (availClass.indexOf(klass) !== -1) {\n+                        self.$align.val(klass);\n                     }\n                 }\n             }\ndiff --git a/src/pat/tinymce/templates/image.xml b/src/pat/tinymce/templates/image.xml\nindex 19134b344..00a4e1e96 100644\n--- a/src/pat/tinymce/templates/image.xml\n+++ b/src/pat/tinymce/templates/image.xml\n@@ -59,6 +59,7 @@\n         <label><%- altText %></label>\n         <input type="text" name="alt" class="form-control" />\n       </div>\n+      <% if(imageCaptioningEnabled){ %>\n       <div class="captionFromDescription form-check mb-2">\n         <input type="checkbox" name="captionFromDescription" class="form-check-input" />\n         <label for="captionFromDescription" class="form-check-label">\n@@ -69,6 +70,7 @@\n         <label><%- captionText %></label>\n         <textarea name="caption" class="form-control"></textarea>\n       </div>\n+      <% } %>\n       <div class="align mb-2">\n         <label><%- imageAlignText %></label>\n         <select name="align" class="form-select">\ndiff --git a/src/pat/tinymce/tinymce.js b/src/pat/tinymce/tinymce.js\nindex f0a929433..45ebc5087 100644\n--- a/src/pat/tinymce/tinymce.js\n+++ b/src/pat/tinymce/tinymce.js\n@@ -81,6 +81,7 @@ export default Base.extend({\n         appendToOriginalScalePart: "",\n         // defaultScale: "large",\n         defaultSrcset: "medium",\n+        imageCaptioningEnabled: true,\n         imageSrcsets: {\n             large: {\n                 "title": "Large",\n'

Repository: mockup


Branch: refs/heads/master
Date: 2022-06-08T19:03:38+03:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/mockup/commit/d43f76c2b84d87e45ffbc7671c19fbf74d166a03

init

Files changed:
M src/pat/tinymce/tinymce--implementation.js

b'diff --git a/src/pat/tinymce/tinymce--implementation.js b/src/pat/tinymce/tinymce--implementation.js\nindex d93631f2d..5d2e4cc92 100644\n--- a/src/pat/tinymce/tinymce--implementation.js\n+++ b/src/pat/tinymce/tinymce--implementation.js\n@@ -193,8 +193,13 @@ export default class TinyMCE {\n         // tiny needs an id in order to initialize. Creat it if not set.\n         var id = utils.setId(self.$el);\n \n+<<<<<<< HEAD\n         if (self.options.imageSrcsets && typeof self.options.imageSrcsets === "string") {\n             self.options.imageSrcsets = JSON.parse(self.options.imageSrcsets);\n+=======\n+        if (self.options.image_srcsets && typeof self.options.imageScales === "string") {\n+            self.options.imageScales = JSON.parse(self.options.imageScales);\n+>>>>>>> dc8a0dca (init)\n         }\n \n         var tinyOptions = self.options.tiny;\n'

Repository: mockup


Branch: refs/heads/master
Date: 2022-06-08T19:03:38+03:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/mockup/commit/bbe08c04b2ede694c87aedcb549e445b34a43b93

Use imageSrcset in pat-tinymce

Files changed:
M src/pat/tinymce/js/links.js
M src/pat/tinymce/tinymce--implementation.js

b'diff --git a/src/pat/tinymce/js/links.js b/src/pat/tinymce/js/links.js\nindex 7d2316e22..e39697c0c 100644\n--- a/src/pat/tinymce/js/links.js\n+++ b/src/pat/tinymce/js/links.js\n@@ -661,7 +661,11 @@ export default Base.extend({\n         self.tiny.focus();\n         self.tiny.selection.setRng(self.rng);\n         var cssclasses = ["image-richtext", self.$align.val(), "image-size-" + self.$scale.val()];\n+<<<<<<< HEAD\n         if (captionFromDescription || caption) {\n+=======\n+        if (captionFromDescription) {\n+>>>>>>> 202169e0 (Use imageSrcset in pat-tinymce)\n             cssclasses.push("captioned");\n         }\n         if (enableImageZoom) {\ndiff --git a/src/pat/tinymce/tinymce--implementation.js b/src/pat/tinymce/tinymce--implementation.js\nindex 5d2e4cc92..d93631f2d 100644\n--- a/src/pat/tinymce/tinymce--implementation.js\n+++ b/src/pat/tinymce/tinymce--implementation.js\n@@ -193,13 +193,8 @@ export default class TinyMCE {\n         // tiny needs an id in order to initialize. Creat it if not set.\n         var id = utils.setId(self.$el);\n \n-<<<<<<< HEAD\n         if (self.options.imageSrcsets && typeof self.options.imageSrcsets === "string") {\n             self.options.imageSrcsets = JSON.parse(self.options.imageSrcsets);\n-=======\n-        if (self.options.image_srcsets && typeof self.options.imageScales === "string") {\n-            self.options.imageScales = JSON.parse(self.options.imageScales);\n->>>>>>> dc8a0dca (init)\n         }\n \n         var tinyOptions = self.options.tiny;\n'

Repository: mockup


Branch: refs/heads/master
Date: 2022-06-08T19:03:38+03:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/mockup/commit/b22b57021f63f2aca6ca697e40143a2b48d3e25b

refacture pat-tinymce captioning support, to rely on outputfilters

Files changed:
M src/pat/tinymce/js/links.js

b'diff --git a/src/pat/tinymce/js/links.js b/src/pat/tinymce/js/links.js\nindex e39697c0c..7d2316e22 100644\n--- a/src/pat/tinymce/js/links.js\n+++ b/src/pat/tinymce/js/links.js\n@@ -661,11 +661,7 @@ export default Base.extend({\n         self.tiny.focus();\n         self.tiny.selection.setRng(self.rng);\n         var cssclasses = ["image-richtext", self.$align.val(), "image-size-" + self.$scale.val()];\n-<<<<<<< HEAD\n         if (captionFromDescription || caption) {\n-=======\n-        if (captionFromDescription) {\n->>>>>>> 202169e0 (Use imageSrcset in pat-tinymce)\n             cssclasses.push("captioned");\n         }\n         if (enableImageZoom) {\n'

Repository: mockup


Branch: refs/heads/master
Date: 2022-06-08T19:03:38+03:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/mockup/commit/9ce3ca0e1d7fd4e332572620e247777c568eef1d

fix TinyMCE not loading existing image in edit

Files changed:
M src/pat/tinymce/js/links.js

b'diff --git a/src/pat/tinymce/js/links.js b/src/pat/tinymce/js/links.js\nindex 7d2316e22..39c84967e 100644\n--- a/src/pat/tinymce/js/links.js\n+++ b/src/pat/tinymce/js/links.js\n@@ -38,7 +38,8 @@ var LinkType = Base.extend({\n     },\n \n     load: function (element) {\n-        this.getEl().attr("value", this.tiny.dom.getAttrib(element, "data-val"));\n+        let val = this.tiny.dom.getAttrib(element, "data-val");\n+        this.getEl().attr("value", val);\n     },\n \n     set: function (val) {\n@@ -853,6 +854,7 @@ export default Base.extend({\n         var linkType;\n         if (self.isImageMode()) {\n             var img;\n+            img = self.selectedElm;\n             self.imgElm = img;\n \n             var src = self.dom.getAttrib(self.imgElm, "src");\n'

Repository: mockup


Branch: refs/heads/master
Date: 2022-06-08T19:03:38+03:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/mockup/commit/9d155d99345bef25526e61d55fccc37eb2894da9

Use imageSrcset in pat-tinymce

Files changed:
M src/pat/tinymce/js/links.js

b'diff --git a/src/pat/tinymce/js/links.js b/src/pat/tinymce/js/links.js\nindex 39c84967e..47960fb22 100644\n--- a/src/pat/tinymce/js/links.js\n+++ b/src/pat/tinymce/js/links.js\n@@ -520,7 +520,10 @@ export default Base.extend({\n             captionText: this.options.text.caption,\n             scaleText: this.options.text.scale,\n             imageSrcsets: this.options.imageSrcsets,\n+<<<<<<< HEAD\n             imageCaptioningEnabled: this.options.imageCaptioningEnabled,\n+=======\n+>>>>>>> d58a56f8 (Use imageSrcset in pat-tinymce)\n             cancelBtn: this.options.text.cancelBtn,\n             insertBtn: this.options.text.insertBtn,\n         });\n'

Repository: mockup


Branch: refs/heads/master
Date: 2022-06-08T19:03:38+03:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/mockup/commit/ce0bf362d1a7065f305b12c639a023d9eb23e6a7

refacture pat-tinymce captioning support, to rely on outputfilters

Files changed:
M src/pat/tinymce/js/links.js

b'diff --git a/src/pat/tinymce/js/links.js b/src/pat/tinymce/js/links.js\nindex 47960fb22..9b5187177 100644\n--- a/src/pat/tinymce/js/links.js\n+++ b/src/pat/tinymce/js/links.js\n@@ -520,10 +520,14 @@ export default Base.extend({\n             captionText: this.options.text.caption,\n             scaleText: this.options.text.scale,\n             imageSrcsets: this.options.imageSrcsets,\n+<<<<<<< HEAD\n <<<<<<< HEAD\n             imageCaptioningEnabled: this.options.imageCaptioningEnabled,\n =======\n >>>>>>> d58a56f8 (Use imageSrcset in pat-tinymce)\n+=======\n+            imageCaptioningEnabled: this.options.imageCaptioningEnabled,\n+>>>>>>> 1ad5fe41 (refacture pat-tinymce captioning support, to rely on outputfilters)\n             cancelBtn: this.options.text.cancelBtn,\n             insertBtn: this.options.text.insertBtn,\n         });\n@@ -857,7 +861,10 @@ export default Base.extend({\n         var linkType;\n         if (self.isImageMode()) {\n             var img;\n+<<<<<<< HEAD\n             img = self.selectedElm;\n+=======\n+>>>>>>> 1ad5fe41 (refacture pat-tinymce captioning support, to rely on outputfilters)\n             self.imgElm = img;\n \n             var src = self.dom.getAttrib(self.imgElm, "src");\n'

Repository: mockup


Branch: refs/heads/master
Date: 2022-06-08T19:03:38+03:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/mockup/commit/5bb29ccc6707bad3f2c065e8f5b40db4e39ac93f

init

Files changed:
M src/pat/tinymce/tinymce--implementation.js

b'diff --git a/src/pat/tinymce/tinymce--implementation.js b/src/pat/tinymce/tinymce--implementation.js\nindex d93631f2d..5d2e4cc92 100644\n--- a/src/pat/tinymce/tinymce--implementation.js\n+++ b/src/pat/tinymce/tinymce--implementation.js\n@@ -193,8 +193,13 @@ export default class TinyMCE {\n         // tiny needs an id in order to initialize. Creat it if not set.\n         var id = utils.setId(self.$el);\n \n+<<<<<<< HEAD\n         if (self.options.imageSrcsets && typeof self.options.imageSrcsets === "string") {\n             self.options.imageSrcsets = JSON.parse(self.options.imageSrcsets);\n+=======\n+        if (self.options.image_srcsets && typeof self.options.imageScales === "string") {\n+            self.options.imageScales = JSON.parse(self.options.imageScales);\n+>>>>>>> dc8a0dca (init)\n         }\n \n         var tinyOptions = self.options.tiny;\n'

Repository: mockup


Branch: refs/heads/master
Date: 2022-06-08T19:03:38+03:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/mockup/commit/b50fd0820edae70c0b318dc1416621d36aa1a20e

Use imageSrcset in pat-tinymce

Files changed:
M src/pat/tinymce/js/links.js
M src/pat/tinymce/tinymce--implementation.js

b'diff --git a/src/pat/tinymce/js/links.js b/src/pat/tinymce/js/links.js\nindex 9b5187177..91b783ed2 100644\n--- a/src/pat/tinymce/js/links.js\n+++ b/src/pat/tinymce/js/links.js\n@@ -669,7 +669,11 @@ export default Base.extend({\n         self.tiny.focus();\n         self.tiny.selection.setRng(self.rng);\n         var cssclasses = ["image-richtext", self.$align.val(), "image-size-" + self.$scale.val()];\n+<<<<<<< HEAD\n         if (captionFromDescription || caption) {\n+=======\n+        if (captionFromDescription) {\n+>>>>>>> 202169e0 (Use imageSrcset in pat-tinymce)\n             cssclasses.push("captioned");\n         }\n         if (enableImageZoom) {\ndiff --git a/src/pat/tinymce/tinymce--implementation.js b/src/pat/tinymce/tinymce--implementation.js\nindex 5d2e4cc92..d93631f2d 100644\n--- a/src/pat/tinymce/tinymce--implementation.js\n+++ b/src/pat/tinymce/tinymce--implementation.js\n@@ -193,13 +193,8 @@ export default class TinyMCE {\n         // tiny needs an id in order to initialize. Creat it if not set.\n         var id = utils.setId(self.$el);\n \n-<<<<<<< HEAD\n         if (self.options.imageSrcsets && typeof self.options.imageSrcsets === "string") {\n             self.options.imageSrcsets = JSON.parse(self.options.imageSrcsets);\n-=======\n-        if (self.options.image_srcsets && typeof self.options.imageScales === "string") {\n-            self.options.imageScales = JSON.parse(self.options.imageScales);\n->>>>>>> dc8a0dca (init)\n         }\n \n         var tinyOptions = self.options.tiny;\n'

Repository: mockup


Branch: refs/heads/master
Date: 2022-06-08T19:03:38+03:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/mockup/commit/983c154fd1e8ca2d294a54435eabf76b6bb3ac6c

refacture pat-tinymce captioning support, to rely on outputfilters

Files changed:
M src/pat/tinymce/js/links.js

b'diff --git a/src/pat/tinymce/js/links.js b/src/pat/tinymce/js/links.js\nindex 91b783ed2..9b5187177 100644\n--- a/src/pat/tinymce/js/links.js\n+++ b/src/pat/tinymce/js/links.js\n@@ -669,11 +669,7 @@ export default Base.extend({\n         self.tiny.focus();\n         self.tiny.selection.setRng(self.rng);\n         var cssclasses = ["image-richtext", self.$align.val(), "image-size-" + self.$scale.val()];\n-<<<<<<< HEAD\n         if (captionFromDescription || caption) {\n-=======\n-        if (captionFromDescription) {\n->>>>>>> 202169e0 (Use imageSrcset in pat-tinymce)\n             cssclasses.push("captioned");\n         }\n         if (enableImageZoom) {\n'

Repository: mockup


Branch: refs/heads/master
Date: 2022-06-08T19:03:38+03:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/mockup/commit/1133ecb7c34ec70ace2bee191640db651b7e2cd2

fix TinyMCE not loading existing image in edit

Files changed:
M src/pat/tinymce/js/links.js

b'diff --git a/src/pat/tinymce/js/links.js b/src/pat/tinymce/js/links.js\nindex 9b5187177..39c84967e 100644\n--- a/src/pat/tinymce/js/links.js\n+++ b/src/pat/tinymce/js/links.js\n@@ -520,14 +520,7 @@ export default Base.extend({\n             captionText: this.options.text.caption,\n             scaleText: this.options.text.scale,\n             imageSrcsets: this.options.imageSrcsets,\n-<<<<<<< HEAD\n-<<<<<<< HEAD\n             imageCaptioningEnabled: this.options.imageCaptioningEnabled,\n-=======\n->>>>>>> d58a56f8 (Use imageSrcset in pat-tinymce)\n-=======\n-            imageCaptioningEnabled: this.options.imageCaptioningEnabled,\n->>>>>>> 1ad5fe41 (refacture pat-tinymce captioning support, to rely on outputfilters)\n             cancelBtn: this.options.text.cancelBtn,\n             insertBtn: this.options.text.insertBtn,\n         });\n@@ -861,10 +854,7 @@ export default Base.extend({\n         var linkType;\n         if (self.isImageMode()) {\n             var img;\n-<<<<<<< HEAD\n             img = self.selectedElm;\n-=======\n->>>>>>> 1ad5fe41 (refacture pat-tinymce captioning support, to rely on outputfilters)\n             self.imgElm = img;\n \n             var src = self.dom.getAttrib(self.imgElm, "src");\n'

Repository: mockup


Branch: refs/heads/master
Date: 2022-06-08T19:03:38+03:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/mockup/commit/33aa2b1c1f2ea40f585807916e60d2ae090a1459

use picture-variant-* as CSS marker on figure/picture tags

Files changed:
M src/pat/tinymce/js/links.js

b'diff --git a/src/pat/tinymce/js/links.js b/src/pat/tinymce/js/links.js\nindex 39c84967e..a17dd5fb8 100644\n--- a/src/pat/tinymce/js/links.js\n+++ b/src/pat/tinymce/js/links.js\n@@ -661,7 +661,7 @@ export default Base.extend({\n \n         self.tiny.focus();\n         self.tiny.selection.setRng(self.rng);\n-        var cssclasses = ["image-richtext", self.$align.val(), "image-size-" + self.$scale.val()];\n+        var cssclasses = ["image-richtext", self.$align.val(), "picture-variant-" + self.$scale.val()];\n         if (captionFromDescription || caption) {\n             cssclasses.push("captioned");\n         }\n'

Repository: mockup


Branch: refs/heads/master
Date: 2022-06-08T19:03:38+03:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/mockup/commit/a9fc08368ed9cab58159e9d634b079e9a2a5772e

rename image_srcsets to picture_variants

Files changed:
M src/pat/tinymce/js/links.js
M src/pat/tinymce/templates/image.xml
M src/pat/tinymce/tinymce--implementation.js
M src/pat/tinymce/tinymce.js

b'diff --git a/src/pat/tinymce/js/links.js b/src/pat/tinymce/js/links.js\nindex a17dd5fb8..925f0851b 100644\n--- a/src/pat/tinymce/js/links.js\n+++ b/src/pat/tinymce/js/links.js\n@@ -519,7 +519,7 @@ export default Base.extend({\n             enableImageZoom: this.options.text.enableImageZoom,\n             captionText: this.options.text.caption,\n             scaleText: this.options.text.scale,\n-            imageSrcsets: this.options.imageSrcsets,\n+            pictureVariants: this.options.pictureVariants,\n             imageCaptioningEnabled: this.options.imageCaptioningEnabled,\n             cancelBtn: this.options.text.cancelBtn,\n             insertBtn: this.options.text.insertBtn,\n@@ -647,9 +647,9 @@ export default Base.extend({\n         this.tiny.nodeChanged();\n     },\n \n-    getScaleFromSrcset: function (srcset) {\n-        let srcsetConfig = this.options.imageSrcsets[srcset];\n-        return srcsetConfig.sourceset[srcsetConfig.sourceset.length - 1].scale;\n+    getScaleFromSrcset: function (pictureVariant) {\n+        let pictureVariantsConfig = this.options.pictureVariants[pictureVariant];\n+        return pictureVariantsConfig.sourceset[pictureVariantsConfig.sourceset.length - 1].scale;\n     },\n \n     updateImage: function (src) {\n@@ -677,7 +677,7 @@ export default Base.extend({\n                 "alt": self.$alt.val(),\n                 "class": cssclasses.join(" "),\n                 "data-linkType": self.linkType,\n-                "data-srcset": self.$scale.val(),\n+                "data-picturevariant": self.$scale.val(),\n                 "data-scale": self.getScaleFromSrcset(self.$scale.val()),\n             },\n             self.linkTypes[self.linkType].attributes()\n@@ -882,8 +882,8 @@ export default Base.extend({\n                 self.linkType = linkType;\n                 self.linkTypes[self.linkType].load(self.imgElm);\n                 // set scale selection in link modal:\n-                var srcset = self.dom.getAttrib(self.imgElm, "data-srcset");\n-                self.$scale.val(srcset);\n+                var pictureVariant = self.dom.getAttrib(self.imgElm, "data-picturevariant");\n+                self.$scale.val(pictureVariant);\n                 $("#tinylink-" + self.linkType, self.modal.$modal).trigger("click");\n             } else if (src) {\n                 self.guessImageLink(src);\ndiff --git a/src/pat/tinymce/templates/image.xml b/src/pat/tinymce/templates/image.xml\nindex 00a4e1e96..6aac98001 100644\n--- a/src/pat/tinymce/templates/image.xml\n+++ b/src/pat/tinymce/templates/image.xml\n@@ -18,9 +18,9 @@\n           <div class="scale mb-2">\n             <label><%- scaleText %></label>\n             <select name="scale" class="form-select">\n-              <% _.each(Object.keys(imageSrcsets), function(key) { %>\n+              <% _.each(Object.keys(pictureVariants), function(key) { %>\n                 <option value="<%- key %>" <% if (key === options.defaultSrcset) { %>selected<% } %> >\n-                  <%- imageSrcsets[key].title %>\n+                  <%- pictureVariants[key].title %>\n                 </option>\n               <% }); %>\n             </select>\ndiff --git a/src/pat/tinymce/tinymce--implementation.js b/src/pat/tinymce/tinymce--implementation.js\nindex d93631f2d..de5d8dc5a 100644\n--- a/src/pat/tinymce/tinymce--implementation.js\n+++ b/src/pat/tinymce/tinymce--implementation.js\n@@ -193,8 +193,8 @@ export default class TinyMCE {\n         // tiny needs an id in order to initialize. Creat it if not set.\n         var id = utils.setId(self.$el);\n \n-        if (self.options.imageSrcsets && typeof self.options.imageSrcsets === "string") {\n-            self.options.imageSrcsets = JSON.parse(self.options.imageSrcsets);\n+        if (self.options.pictureVariants && typeof self.options.pictureVariants === "string") {\n+            self.options.pictureVariants = JSON.parse(self.options.pictureVariants);\n         }\n \n         var tinyOptions = self.options.tiny;\ndiff --git a/src/pat/tinymce/tinymce.js b/src/pat/tinymce/tinymce.js\nindex 45ebc5087..adb2d7307 100644\n--- a/src/pat/tinymce/tinymce.js\n+++ b/src/pat/tinymce/tinymce.js\n@@ -82,7 +82,7 @@ export default Base.extend({\n         // defaultScale: "large",\n         defaultSrcset: "medium",\n         imageCaptioningEnabled: true,\n-        imageSrcsets: {\n+        pictureVariants: {\n             large: {\n                 "title": "Large",\n                 "preview": "++theme++barceloneta/static/preview-image-large.png",\n'

Repository: mockup


Branch: refs/heads/master
Date: 2022-06-16T18:54:32+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/mockup/commit/4374961ec839b800fccc079242b6dc36998cbf05

Merge pull request #1156 from plone/mrtango-tinymce-image-srcset-config

Mrtango tinymce image srcset config WIP

Files changed:
M src/pat/tinymce/js/links.js
M src/pat/tinymce/templates/image.xml
M src/pat/tinymce/tinymce--implementation.js
M src/pat/tinymce/tinymce.js

b'diff --git a/src/pat/tinymce/js/links.js b/src/pat/tinymce/js/links.js\nindex 155d6290e..925f0851b 100644\n--- a/src/pat/tinymce/js/links.js\n+++ b/src/pat/tinymce/js/links.js\n@@ -38,7 +38,8 @@ var LinkType = Base.extend({\n     },\n \n     load: function (element) {\n-        this.getEl().attr("value", this.tiny.dom.getAttrib(element, "data-val"));\n+        let val = this.tiny.dom.getAttrib(element, "data-val");\n+        this.getEl().attr("value", val);\n     },\n \n     set: function (val) {\n@@ -184,7 +185,10 @@ var ImageLink = InternalLink.extend({\n     trigger: ".pat-imagelinktype-dummy",\n     toUrl: function () {\n         var value = this.value();\n-        return this.tinypattern.generateImageUrl(value, this.linkModal.$scale.val());\n+        return this.tinypattern.generateImageUrl(\n+            value,\n+            this.linkModal.getScaleFromSrcset(this.linkModal.$scale.val())\n+        );\n     },\n });\n \n@@ -515,7 +519,8 @@ export default Base.extend({\n             enableImageZoom: this.options.text.enableImageZoom,\n             captionText: this.options.text.caption,\n             scaleText: this.options.text.scale,\n-            imageScales: this.options.imageScales,\n+            pictureVariants: this.options.pictureVariants,\n+            imageCaptioningEnabled: this.options.imageCaptioningEnabled,\n             cancelBtn: this.options.text.cancelBtn,\n             insertBtn: this.options.text.insertBtn,\n         });\n@@ -642,22 +647,27 @@ export default Base.extend({\n         this.tiny.nodeChanged();\n     },\n \n+    getScaleFromSrcset: function (pictureVariant) {\n+        let pictureVariantsConfig = this.options.pictureVariants[pictureVariant];\n+        return pictureVariantsConfig.sourceset[pictureVariantsConfig.sourceset.length - 1].scale;\n+    },\n+\n     updateImage: function (src) {\n         var self = this;\n         var title = self.$title.val();\n         var captionFromDescription = self.$captionFromDescription.prop("checked");\n         var enableImageZoom = self.$enableImageZoom.prop("checked");\n+        var caption = self.$caption.val();\n \n         self.tiny.focus();\n         self.tiny.selection.setRng(self.rng);\n-        var cssclasses = ["image-richtext", self.$align.val(), "scale-" + self.$scale.val()];\n-        if (captionFromDescription) {\n+        var cssclasses = ["image-richtext", self.$align.val(), "picture-variant-" + self.$scale.val()];\n+        if (captionFromDescription || caption) {\n             cssclasses.push("captioned");\n         }\n         if (enableImageZoom) {\n             cssclasses.push("zoomable");\n         }\n-\n         var data = $.extend(\n             true,\n             {},\n@@ -667,13 +677,23 @@ export default Base.extend({\n                 "alt": self.$alt.val(),\n                 "class": cssclasses.join(" "),\n                 "data-linkType": self.linkType,\n-                "data-scale": self.$scale.val(),\n+                "data-picturevariant": self.$scale.val(),\n+                "data-scale": self.getScaleFromSrcset(self.$scale.val()),\n             },\n             self.linkTypes[self.linkType].attributes()\n         );\n+        if (caption && !captionFromDescription){\n+            data["data-captiontext"] = caption;\n+        }\n         if (self.imgElm && !self.imgElm.getAttribute("data-mce-object")) {\n-            data.width = self.dom.getAttrib(self.imgElm, "width");\n-            data.height = self.dom.getAttrib(self.imgElm, "height");\n+            const imgWidth = self.dom.getAttrib(self.imgElm, "width");\n+            const imgHight = self.dom.getAttrib(self.imgElm, "height");\n+            if(imgWidth){\n+                data.width = imgWidth;\n+            }\n+            if(imgHight){\n+                data.height = imgHight;\n+            }\n         } else {\n             self.imgElm = null;\n         }\n@@ -688,30 +708,11 @@ export default Base.extend({\n         if (self.imgElm) {\n             self.dom.remove(self.imgElm);\n         }\n-        if (self.captionElm) {\n-            self.dom.remove(self.captionElm);\n-        }\n-        if (self.figureElm) {\n-            self.dom.remove(self.figureElm);\n-        }\n \n         data.id = "__mcenew";\n         var html_inner = self.dom.createHTML("img", data);\n-        var caption = self.$caption.val();\n         var html_string;\n-        if (caption && !captionFromDescription) {\n-            // clean up img class, as we will have them on the firgure tag\n-            var dummyDiv = document.createElement("div");\n-            dummyDiv.innerHTML = html_inner\n-            dummyDiv.querySelector("img").removeAttribute("class")\n-            html_inner = dummyDiv.innerHTML\n-\n-            html_inner += "\\n" + self.dom.createHTML("figcaption", {}, caption);\n-            //html_inner += \'\\n\' + self.dom.createHTML(\'figcaption\', { class: \'mceNonEditable\' }, caption);\n-            html_string = self.dom.createHTML("figure", {class: data.class}, html_inner);\n-        } else {\n-            html_string = html_inner;\n-        }\n+        html_string = html_inner;\n         self.tiny.insertContent(html_string);\n         self.imgElm = self.dom.get("__mcenew");\n         self.dom.setAttrib(self.imgElm, "id", null);\n@@ -852,63 +853,48 @@ export default Base.extend({\n \n         var linkType;\n         if (self.isImageMode()) {\n-            var figure;\n             var img;\n-            var caption;\n-            if (self.selectedElm.nodeName === "FIGURE") {\n-                figure = self.selectedElm;\n-                img = figure.querySelector("img");\n-                caption = figure.querySelector("figcaption");\n-            } else if (self.selectedElm.nodeName === "IMG") {\n-                figure = $(self.selectedElm).closest("figure");\n-                figure = figure.length ? figure[0] : undefined;\n-                img = self.selectedElm;\n-                caption = figure ? figure.querySelector("figcaption") : undefined;\n-            } else if (self.selectedElm.nodeName === "FIGCAPTION") {\n-                figure = $(self.selectedElm).closest("figure");\n-                figure = figure.length ? figure[0] : undefined;\n-                img = figure ? figure.querySelector("img") : undefined;\n-                caption = self.selectedElm;\n-            }\n-\n+            img = self.selectedElm;\n             self.imgElm = img;\n-            self.figureElm = figure;\n-            self.captionElm = caption;\n \n-            if (self.imgElm) {\n-                var src = self.dom.getAttrib(self.imgElm, "src");\n-                self.$title.val(self.dom.getAttrib(self.imgElm, "title"));\n-                self.$alt.val(self.dom.getAttrib(self.imgElm, "alt"));\n+            var src = self.dom.getAttrib(self.imgElm, "src");\n+            var captionText = self.dom.getAttrib(self.imgElm, "data-captiontext");\n+            self.$title.val(self.dom.getAttrib(self.imgElm, "title"));\n+            self.$alt.val(self.dom.getAttrib(self.imgElm, "alt"));\n \n-                if ($(self.imgElm).hasClass("zoomable")) {\n-                    self.$enableImageZoom.prop("checked", true);\n-                }\n-                if ($(self.imgElm).hasClass("captioned")) {\n-                    self.$captionFromDescription.prop("checked", true);\n-                    self.$caption.prop("disabled", true);\n-                }\n-                if (self.captionElm) {\n-                    self.$caption.val(self.captionElm.innerHTML);\n-                }\n+            if ($(self.imgElm).hasClass("zoomable")) {\n+                self.$enableImageZoom.prop("checked", true);\n+            }\n+            if ($(self.imgElm).hasClass("captioned") && !captionText) {\n+                self.$captionFromDescription.prop("checked", true);\n+                self.$caption.prop("disabled", true);\n+            }else if($(self.imgElm).hasClass("captioned") && captionText){\n+                self.$captionFromDescription.prop("checked", false);\n+            }else{\n+                self.$captionFromDescription.prop("checked", false);\n+            }\n+            if (captionText) {\n+                self.$caption.val(captionText);\n+            }\n \n-                linkType = self.dom.getAttrib(self.imgElm, "data-linktype");\n-                if (linkType) {\n-                    self.linkType = linkType;\n-                    self.linkTypes[self.linkType].load(self.imgElm);\n-                    var scale = self.dom.getAttrib(self.imgElm, "data-scale");\n-                    self.$scale.val(scale);\n-                    $("#tinylink-" + self.linkType, self.modal.$modal).trigger("click");\n-                } else if (src) {\n-                    self.guessImageLink(src);\n-                }\n-                var className = self.dom.getAttrib(self.imgElm, "class");\n-                var klasses = className.split(" ");\n-                for (var i = 0; i < klasses.length; i = i + 1) {\n-                    var klass = klasses[i];\n-                    for (var availClass in self.options.imageClasses) {\n-                        if (availClass.indexOf(klass) !== -1) {\n-                            self.$align.val(klass);\n-                        }\n+            linkType = self.dom.getAttrib(self.imgElm, "data-linktype");\n+            if (linkType) {\n+                self.linkType = linkType;\n+                self.linkTypes[self.linkType].load(self.imgElm);\n+                // set scale selection in link modal:\n+                var pictureVariant = self.dom.getAttrib(self.imgElm, "data-picturevariant");\n+                self.$scale.val(pictureVariant);\n+                $("#tinylink-" + self.linkType, self.modal.$modal).trigger("click");\n+            } else if (src) {\n+                self.guessImageLink(src);\n+            }\n+            var className = self.dom.getAttrib(self.imgElm, "class");\n+            var klasses = className.split(" ");\n+            for (var i = 0; i < klasses.length; i = i + 1) {\n+                var klass = klasses[i];\n+                for (var availClass in self.options.imageClasses) {\n+                    if (availClass.indexOf(klass) !== -1) {\n+                        self.$align.val(klass);\n                     }\n                 }\n             }\n@@ -936,6 +922,7 @@ export default Base.extend({\n     guessImageLink: function (src) {\n         if (src.indexOf(this.options.prependToScalePart) !== -1) {\n             this.linkType = "image";\n+            // TODO: use data-scale attribute instead:\n             this.$scale.val(this.tinypattern.getScaleFromUrl(src));\n             this.linkTypes.image.set(this.tinypattern.stripGeneratedUrl(src));\n         } else {\ndiff --git a/src/pat/tinymce/templates/image.xml b/src/pat/tinymce/templates/image.xml\nindex f94a018a1..6aac98001 100644\n--- a/src/pat/tinymce/templates/image.xml\n+++ b/src/pat/tinymce/templates/image.xml\n@@ -18,12 +18,11 @@\n           <div class="scale mb-2">\n             <label><%- scaleText %></label>\n             <select name="scale" class="form-select">\n-              <option value="">Original</option>\n-                <% _.each(imageScales, function(scale) { %>\n-                  <option value="<%- scale.value %>" <% if (scale.value === options.defaultScale) { %>selected<% } %> >\n-                    <%- scale.title %>\n-                  </option>\n-                <% }); %>\n+              <% _.each(Object.keys(pictureVariants), function(key) { %>\n+                <option value="<%- key %>" <% if (key === options.defaultSrcset) { %>selected<% } %> >\n+                  <%- pictureVariants[key].title %>\n+                </option>\n+              <% }); %>\n             </select>\n           </div>\n         </div>\n@@ -60,6 +59,7 @@\n         <label><%- altText %></label>\n         <input type="text" name="alt" class="form-control" />\n       </div>\n+      <% if(imageCaptioningEnabled){ %>\n       <div class="captionFromDescription form-check mb-2">\n         <input type="checkbox" name="captionFromDescription" class="form-check-input" />\n         <label for="captionFromDescription" class="form-check-label">\n@@ -70,6 +70,7 @@\n         <label><%- captionText %></label>\n         <textarea name="caption" class="form-control"></textarea>\n       </div>\n+      <% } %>\n       <div class="align mb-2">\n         <label><%- imageAlignText %></label>\n         <select name="align" class="form-select">\ndiff --git a/src/pat/tinymce/tinymce--implementation.js b/src/pat/tinymce/tinymce--implementation.js\nindex 4b4f74cf7..de5d8dc5a 100644\n--- a/src/pat/tinymce/tinymce--implementation.js\n+++ b/src/pat/tinymce/tinymce--implementation.js\n@@ -62,6 +62,7 @@ export default class TinyMCE {\n         var self = this;\n         var part = data[self.options.linkAttribute];\n         return self.options.prependToUrl + part + self.options.appendToUrl;\n+\n     }\n     generateImageUrl(data, scale_name) {\n         var self = this;\n@@ -192,8 +193,8 @@ export default class TinyMCE {\n         // tiny needs an id in order to initialize. Creat it if not set.\n         var id = utils.setId(self.$el);\n \n-        if (self.options.imageScales && typeof self.options.imageScales === "string") {\n-            self.options.imageScales = JSON.parse(self.options.imageScales);\n+        if (self.options.pictureVariants && typeof self.options.pictureVariants === "string") {\n+            self.options.pictureVariants = JSON.parse(self.options.pictureVariants);\n         }\n \n         var tinyOptions = self.options.tiny;\ndiff --git a/src/pat/tinymce/tinymce.js b/src/pat/tinymce/tinymce.js\nindex eb8b83a17..adb2d7307 100644\n--- a/src/pat/tinymce/tinymce.js\n+++ b/src/pat/tinymce/tinymce.js\n@@ -79,16 +79,59 @@ export default Base.extend({\n         prependToScalePart: "/imagescale/",\n         appendToScalePart: "",\n         appendToOriginalScalePart: "",\n-        defaultScale: "large",\n-        imageScales: [\n-            { title: "Mini", value: "mini" },\n-            { title: "Thumb", value: "thumb" },\n-            { title: "Listing", value: "listing" },\n-            { title: "Preview", value: "preview" },\n-            { title: "Tile", value: "tile" },\n-            { title: "Icon", value: "icon" },\n-            { title: "Large", value: "large" },\n-        ],\n+        // defaultScale: "large",\n+        defaultSrcset: "medium",\n+        imageCaptioningEnabled: true,\n+        pictureVariants: {\n+            large: {\n+                "title": "Large",\n+                "preview": "++theme++barceloneta/static/preview-image-large.png",\n+                "use-in-editor": true,\n+                "sourceset": [\n+                    {\n+                        scale: "teaser",\n+                        media: "(min-width:768px) and (orientation:portrait)",\n+                    },\n+                    {\n+                        scale: "large",\n+                        media: "(min-width:768px)",\n+                    },\n+                    {\n+                        scale: "larger",\n+                        media: "(min-width:992px)",\n+                    },\n+                    {\n+                        scale: "great",\n+                        media: "(min-width:1200px)",\n+                    },\n+                    {\n+                        scale: "huge",\n+                        media: "(min-width:1400px)",\n+                    },\n+                    {\n+                        scale: "huge",\n+                    },\n+                ],\n+            },\n+            medium: {\n+                title: "Medium",\n+                preview: "++theme++barceloneta/static/preview-image-medium.png",\n+                sourceset: [\n+                    {\n+                        scale: "larger",\n+                    },\n+                ],\n+            },\n+            small: {\n+                title: "Small",\n+                preview: "++theme++barceloneta/static/preview-image-small.png",\n+                sourceset: [\n+                    {\n+                        scale: "preview",\n+                    },\n+                ],\n+            },\n+        },\n         imageClasses: {\n             "image-inline": _t("Inline"),\n             "image-right": _t("Right"),\n@@ -138,14 +181,11 @@ export default Base.extend({\n         inline: false,\n     },\n     init: async function () {\n-\n-        const implementation = (\n-            await import("./tinymce--implementation")\n-        ).default;\n+        const implementation = (await import("./tinymce--implementation")).default;\n         this.instance = new implementation(this.el, this.options);\n         this.instance.init();\n     },\n     destroy: function () {\n-        this.instance.destroy()\n+        this.instance.destroy();\n     },\n });\n'

