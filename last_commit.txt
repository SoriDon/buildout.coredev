Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-03-04T07:41:30+01:00
Author: tschorr (tschorr) <t_schorr@gmx.de>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/af2f8e99926da23f469059616262276ca33b350b

enter log files

Files changed:
M setup.py
M src/plone/recipe/zope2instance/recipe.py
M src/plone/recipe/zope2instance/tests/wsgi.txt

b'diff --git a/setup.py b/setup.py\nindex 4b17783..f3d9669 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -43,6 +43,7 @@\n         \'Zope >= 4.0b1\',\n         \'ZODB >= 5.1.1\',\n         \'ZEO\',\n+        \'Paste\',\n     ],\n     extras_require={\n         \'test\': [\ndiff --git a/src/plone/recipe/zope2instance/recipe.py b/src/plone/recipe/zope2instance/recipe.py\nindex b9abe8b..810f895 100644\n--- a/src/plone/recipe/zope2instance/recipe.py\n+++ b/src/plone/recipe/zope2instance/recipe.py\n@@ -661,10 +661,40 @@ def build_wsgi_ini(self):\n         listen = options.get(\'http-address\', \'0.0.0.0:8080\')\n         if \':\' not in listen:\n             listen = \'0.0.0.0:{}\'.format(listen)\n+\n+        default_eventlog = os.path.sep.join(\n+            (\'var\', \'log\', \'{}.log\'.format(self.name),))\n+        eventlog_name = options.get(\'event-log\', default_eventlog)\n+\n+        if eventlog_name.lower() == \'disable\':\n+            root_handlers = \'console\'\n+            event_handlers = \'\'\n+        else:\n+            root_handlers = \'console, eventlog\'\n+            event_handlers = \'eventlog\'\n+\n+        default_accesslog = os.path.sep.join(\n+            (\'var\', \'log\', \'{}-access.log\'.format(self.name),))\n+\n+        accesslog_name = options.get(\n+            \'z2-log\',\n+            options.get(\'access-log\', default_accesslog))\n+\n+        if accesslog_name.lower() == \'disable\':\n+            pipeline = \'\\n    \'.join([\'egg:Zope#httpexceptions\', \'zope\'])\n+            event_handlers = \'\'\n+        else:\n+            pipeline = \'\\n    \'.join(\n+                [\'translogger\', \'egg:Zope#httpexceptions\', \'zope\'])\n         options = {\n             \'location\': options[\'location\'],\n             \'http_address\': listen,\n             \'threads\': options.get(\'threads\', 4),\n+            \'eventlog_name\': eventlog_name,\n+            \'root_handlers\': root_handlers,\n+            \'event_handlers\': event_handlers,\n+            \'accesslog_name\': accesslog_name,\n+            \'pipeline\': pipeline,\n         }\n         wsgi_ini = wsgi_ini_template % options\n         with open(wsgi_ini_path, \'w\') as f:\n@@ -1197,35 +1227,61 @@ def render_file_storage(self, file_storage, blob_storage,\n use = egg:Zope#main\n zope_conf = %(location)s/etc/zope.conf\n \n+[filter:translogger]\n+use = egg:Paste#translogger\n+setup_console_handler = False\n+\n [pipeline:main]\n pipeline =\n-    egg:Zope#httpexceptions\n-    zope\n+    %(pipeline)s\n \n [loggers]\n-keys = root, plone\n+keys = root, plone, waitress, wsgi\n \n [handlers]\n-keys = console\n+keys = console, accesslog, eventlog\n \n [formatters]\n keys = generic\n \n [logger_root]\n level = INFO\n-handlers = console\n+handlers = %(root_handlers)s\n \n [logger_plone]\n level = INFO\n-handlers =\n+handlers = %(event_handlers)s\n qualname = plone\n \n+[logger_waitress]\n+level = INFO\n+handlers = %(event_handlers)s\n+qualname = waitress\n+\n+[logger_wsgi]\n+level = INFO\n+handlers = accesslog\n+qualname = wsgi\n+propagate = 0\n+\n [handler_console]\n class = StreamHandler\n args = (sys.stderr,)\n level = NOTSET\n formatter = generic\n \n+[handler_accesslog]\n+class = FileHandler\n+args = (\'%(accesslog_name)s\',\'a\')\n+level = INFO\n+formatter = generic\n+\n+[handler_eventlog]\n+class = FileHandler\n+args = (\'%(eventlog_name)s\', \'a\')\n+level = NOTSET\n+formatter = generic\n+\n [formatter_generic]\n format = %%(asctime)s %%(levelname)-5.5s [%%(name)s:%%(lineno)s][%%(threadName)s] %%(message)s\n """  # noqa: E501\ndiff --git a/src/plone/recipe/zope2instance/tests/wsgi.txt b/src/plone/recipe/zope2instance/tests/wsgi.txt\nindex cd38a87..968b75f 100644\n--- a/src/plone/recipe/zope2instance/tests/wsgi.txt\n+++ b/src/plone/recipe/zope2instance/tests/wsgi.txt\n@@ -83,41 +83,68 @@ The buildout has also created an INI file containing the waitress configuration:\n     use = egg:Zope#main\n     zope_conf = .../sample-buildout/parts/instance/etc/zope.conf\n     <BLANKLINE>\n+    [filter:translogger]\n+    use = egg:Paste#translogger\n+    setup_console_handler = False\n+    <BLANKLINE>\n     [pipeline:main]\n     pipeline =\n+        translogger\n         egg:Zope#httpexceptions\n         zope\n     <BLANKLINE>\n     [loggers]\n-    keys = root, plone\n+    keys = root, plone, waitress, wsgi\n     <BLANKLINE>\n     [handlers]\n-    keys = console\n+    keys = console, accesslog, eventlog\n     <BLANKLINE>\n     [formatters]\n     keys = generic\n     <BLANKLINE>\n     [logger_root]\n     level = INFO\n-    handlers = console\n+    handlers = console, eventlog\n     <BLANKLINE>\n     [logger_plone]\n     level = INFO\n-    handlers =\n+    handlers = eventlog\n     qualname = plone\n     <BLANKLINE>\n+    [logger_waitress]\n+    level = INFO\n+    handlers = eventlog\n+    qualname = waitress\n+    <BLANKLINE>\n+    [logger_wsgi]\n+    level = INFO\n+    handlers = accesslog\n+    qualname = wsgi\n+    propagate = 0\n+    <BLANKLINE>\n     [handler_console]\n     class = StreamHandler\n     args = (sys.stderr,)\n     level = NOTSET\n     formatter = generic\n     <BLANKLINE>\n+    [handler_accesslog]\n+    class = FileHandler\n+    args = (\'.../sample-buildout/var/log/access.log\',\'a\')\n+    level = INFO\n+    formatter = generic\n+    <BLANKLINE>\n+    [handler_eventlog]\n+    class = FileHandler\n+    args = (\'.../sample-buildout/var/log/event.log\', \'a\')\n+    level = NOTSET\n+    formatter = generic\n+    <BLANKLINE>\n     [formatter_generic]\n     format = %(asctime)s %(levelname)-5.5s [%(name)s:%(lineno)s][%(threadName)s] %(message)s\n-    <BLANKLINE>\n \n Custom WSGI options\n-=================\n+==================\n \n Let\'s create another buildout configuring a custom port and a custom number of workers::\n \n@@ -155,3 +182,110 @@ The buildout has updated our INI file:\n     <BLANKLINE>\n     [app:zope]\n     ...\n+\n+Custom logging\n+==============\n+\n+We want file based logging, i.e. event.log and access.log (ZServers Z2.log).\n+Let\'s create a buildout:\n+\n+    >>> write(\'buildout.cfg\',\n+    ... \'\'\'\n+    ... [buildout]\n+    ... parts = instance\n+    ... find-links = %(sample_buildout)s/eggs\n+    ...\n+    ... [instance]\n+    ... recipe = plone.recipe.zope2instance\n+    ... eggs =\n+    ... access-log = var/log/foo.log\n+    ... event-log = var/log/bar.log\n+    ... \'\'\' % options)\n+\n+The buildout has updated our INI file:\n+\n+    >>> instance = os.path.join(sample_buildout, \'parts\', \'instance\')\n+    >>> wsgi_ini = open(os.path.join(instance, \'etc\', \'wsgi.ini\')).read()\n+    >>> print(wsgi_ini)\n+    ...\n+    [handler_accesslog]\n+    class = FileHandler\n+    args = (\'.../sample-buildout/var/log/foo.log\',\'a\')\n+    level = INFO\n+    formatter = generic\n+    <BLANKLINE>\n+    [handler_eventlog]\n+    class = FileHandler\n+    args = (\'.../sample-buildout/var/log/bar.log\', \'a\')\n+    level = NOTSET\n+    formatter = generic\n+    ...\n+\n+Next we want to disable access logging (but keep an event log file):\n+\n+    >>> write(\'buildout.cfg\',\n+    ... \'\'\'\n+    ... [buildout]\n+    ... parts = instance\n+    ... find-links = %(sample_buildout)s/eggs\n+    ...\n+    ... [instance]\n+    ... recipe = plone.recipe.zope2instance\n+    ... eggs =\n+    ... access-log = disable\n+    ... \'\'\' % options)\n+\n+The buildout has updated our INI file:\n+\n+    >>> instance = os.path.join(sample_buildout, \'parts\', \'instance\')\n+    >>> wsgi_ini = open(os.path.join(instance, \'etc\', \'wsgi.ini\')).read()\n+    >>> print(wsgi_ini)\n+    ...\n+    [pipeline:main]\n+    pipeline =\n+        egg:Zope#httpexceptions\n+        zope\n+    <BLANKLINE>\n+    ...\n+\n+Now we also want to disable event logging:\n+\n+    >>> write(\'buildout.cfg\',\n+    ... \'\'\'\n+    ... [buildout]\n+    ... parts = instance\n+    ... find-links = %(sample_buildout)s/eggs\n+    ...\n+    ... [instance]\n+    ... recipe = plone.recipe.zope2instance\n+    ... eggs =\n+    ... access-log = disable\n+    ... event-log = disable\n+    ... \'\'\' % options)\n+\n+The buildout has updated our INI file:\n+\n+    >>> instance = os.path.join(sample_buildout, \'parts\', \'instance\')\n+    >>> wsgi_ini = open(os.path.join(instance, \'etc\', \'wsgi.ini\')).read()\n+    >>> print(wsgi_ini)\n+    ...\n+    [pipeline:main]\n+    pipeline =\n+        egg:Zope#httpexceptions\n+        zope\n+    <BLANKLINE>\n+    ...\n+    [logger_root]\n+    level = INFO\n+    handlers = console\n+    <BLANKLINE>\n+    [logger_plone]\n+    level = INFO\n+    handlers =\n+    qualname = plone\n+    <BLANKLINE>\n+    [logger_waitress]\n+    level = INFO\n+    handlers =\n+    qualname = waitress\n+    ...\n'

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-03-04T07:41:30+01:00
Author: tschorr (tschorr) <t_schorr@gmx.de>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/472a3db67dfd160aab8b4dc05f68ab8740beaeeb

update readme, fix tests

Files changed:
M README.rst
M src/plone/recipe/zope2instance/recipe.py
M src/plone/recipe/zope2instance/tests/wsgi.txt

b"diff --git a/README.rst b/README.rst\nindex 0acdc6a..f22ab93 100644\n--- a/README.rst\n+++ b/README.rst\n@@ -224,12 +224,11 @@ log levels or configure `mailinglogger`.\n event-log\n   The filename of the event log. Defaults to ${buildout:directory}/var/log/${partname}.log\n   Setting this value to 'disable' will make the <eventlog> section to be omitted,\n-  disabling logging events by default to a .log file. Used for ZServer only, not WSGI.\n+  disabling logging events by default to a .log file.\n \n event-log-level\n   Set the level of the console output for the event log. Level may be any of\n   CRITICAL, ERROR, WARN, INFO, DEBUG, or ALL. Defaults to INFO.\n-  Used for ZServer only, not WSGI.\n \n event-log-max-size\n   Maximum size of event log file. Enables log rotation.\n@@ -258,14 +257,15 @@ mailinglogger\n \n   You will need to add `mailinglogger` to your buildout's egg section to make this work.\n \n-z2-log\n-  The filename for the Z2 access log. Defaults to var/log/${partname}-Z2.log.\n+access-log, z2-log\n+  The filename for the Z2 access log. Defaults to var/log/${partname}-Z2.log\n+  (var/log/${partname}-access.log) for WSGI).\n   Setting this value to 'disable' will make the <logger access> section to be omitted,\n-  disabling logging access events to a .log file. Used for ZServer only, not WSGI.\n+  disabling logging access events to a .log file.\n \n-z2-log-level\n+access-log-level, z2-log-level\n   Set the log level for the access log. Level may be any of CRITICAL, ERROR,\n-  WARN, INFO, DEBUG, or ALL. Defaults to WARN. Used for ZServer only, not WSGI.\n+  WARN, INFO, DEBUG, or ALL. Defaults to WARN (INFO for WSGI).\n \n access-log-max-size\n   Maximum size of access log file. Enables log rotation.\ndiff --git a/src/plone/recipe/zope2instance/recipe.py b/src/plone/recipe/zope2instance/recipe.py\nindex 810f895..f8c6d4f 100644\n--- a/src/plone/recipe/zope2instance/recipe.py\n+++ b/src/plone/recipe/zope2instance/recipe.py\n@@ -333,7 +333,9 @@ def build_zope_conf(self):\n             }\n \n         z_log_name = os.path.sep.join(('log', self.name + '-Z2.log'))\n-        z_log_name = options.get('z2-log', z_log_name)\n+        z_log_name = options.get(\n+            'z2-log',\n+            options.get('access-log', z_log_name))\n         if z_log_name.lower() == 'disable':\n             access_event_log = ''\n         else:\n@@ -662,9 +664,12 @@ def build_wsgi_ini(self):\n         if ':' not in listen:\n             listen = '0.0.0.0:{}'.format(listen)\n \n+        base_dir = self.buildout['buildout']['directory']\n+        var_dir = options.get('var', os.path.join(base_dir, 'var'))\n         default_eventlog = os.path.sep.join(\n-            ('var', 'log', '{}.log'.format(self.name),))\n+            (var_dir, 'log', '{}.log'.format(self.name),))\n         eventlog_name = options.get('event-log', default_eventlog)\n+        eventlog_level = options.get('event-log-level', 'INFO')\n \n         if eventlog_name.lower() == 'disable':\n             root_handlers = 'console'\n@@ -674,11 +679,14 @@ def build_wsgi_ini(self):\n             event_handlers = 'eventlog'\n \n         default_accesslog = os.path.sep.join(\n-            ('var', 'log', '{}-access.log'.format(self.name),))\n+            (var_dir, 'log', '{}-access.log'.format(self.name),))\n \n         accesslog_name = options.get(\n             'z2-log',\n             options.get('access-log', default_accesslog))\n+        accesslog_level = options.get(\n+            'access-log-level',\n+            options.get('z2-log-level', 'INFO'))\n \n         if accesslog_name.lower() == 'disable':\n             pipeline = '\\n    '.join(['egg:Zope#httpexceptions', 'zope'])\n@@ -695,6 +703,8 @@ def build_wsgi_ini(self):\n             'event_handlers': event_handlers,\n             'accesslog_name': accesslog_name,\n             'pipeline': pipeline,\n+            'eventlog_level': eventlog_level,\n+            'accesslog_level': accesslog_level,\n         }\n         wsgi_ini = wsgi_ini_template % options\n         with open(wsgi_ini_path, 'w') as f:\n@@ -1245,21 +1255,21 @@ def render_file_storage(self, file_storage, blob_storage,\n keys = generic\n \n [logger_root]\n-level = INFO\n+level = %(eventlog_level)s\n handlers = %(root_handlers)s\n \n [logger_plone]\n-level = INFO\n+level = %(eventlog_level)s\n handlers = %(event_handlers)s\n qualname = plone\n \n [logger_waitress]\n-level = INFO\n+level = %(eventlog_level)s\n handlers = %(event_handlers)s\n qualname = waitress\n \n [logger_wsgi]\n-level = INFO\n+level = %(accesslog_level)s\n handlers = accesslog\n qualname = wsgi\n propagate = 0\n@@ -1273,7 +1283,7 @@ class = StreamHandler\n [handler_accesslog]\n class = FileHandler\n args = ('%(accesslog_name)s','a')\n-level = INFO\n+level = %(accesslog_level)s\n formatter = generic\n \n [handler_eventlog]\ndiff --git a/src/plone/recipe/zope2instance/tests/wsgi.txt b/src/plone/recipe/zope2instance/tests/wsgi.txt\nindex 968b75f..e71b7a9 100644\n--- a/src/plone/recipe/zope2instance/tests/wsgi.txt\n+++ b/src/plone/recipe/zope2instance/tests/wsgi.txt\n@@ -130,13 +130,13 @@ The buildout has also created an INI file containing the waitress configuration:\n     <BLANKLINE>\n     [handler_accesslog]\n     class = FileHandler\n-    args = ('.../sample-buildout/var/log/access.log','a')\n+    args = ('.../sample-buildout/var/log/instance-access.log','a')\n     level = INFO\n     formatter = generic\n     <BLANKLINE>\n     [handler_eventlog]\n     class = FileHandler\n-    args = ('.../sample-buildout/var/log/event.log', 'a')\n+    args = ('.../sample-buildout/var/log/instance.log', 'a')\n     level = NOTSET\n     formatter = generic\n     <BLANKLINE>\n@@ -198,25 +198,58 @@ Let's create a buildout:\n     ... [instance]\n     ... recipe = plone.recipe.zope2instance\n     ... eggs =\n+    ... user = me:me\n     ... access-log = var/log/foo.log\n     ... event-log = var/log/bar.log\n+    ... z2-log-level = DEBUG\n+    ... event-log-level = ERROR\n     ... ''' % options)\n \n+Let's run it::\n+\n+    >>> print(system(join('bin', 'buildout'))),\n+    Uninstalling instance.\n+    Installing instance.\n+    Generated script '.../sample-buildout/bin/instance'.\n+    ...\n+\n The buildout has updated our INI file:\n \n     >>> instance = os.path.join(sample_buildout, 'parts', 'instance')\n     >>> wsgi_ini = open(os.path.join(instance, 'etc', 'wsgi.ini')).read()\n     >>> print(wsgi_ini)\n+    [server:main]\n+    use = egg:waitress#main\n+    ...\n+    [logger_root]\n+    level = ERROR\n+    handlers = console, eventlog\n+    <BLANKLINE>\n+    [logger_plone]\n+    level = ERROR\n+    handlers = eventlog\n+    qualname = plone\n+    <BLANKLINE>\n+    [logger_waitress]\n+    level = ERROR\n+    handlers = eventlog\n+    qualname = waitress\n+    <BLANKLINE>\n+    [logger_wsgi]\n+    level = DEBUG\n+    handlers = accesslog\n+    qualname = wsgi\n+    propagate = 0\n     ...\n     [handler_accesslog]\n     class = FileHandler\n-    args = ('.../sample-buildout/var/log/foo.log','a')\n-    level = INFO\n+    args = ('var/log/foo.log','a')\n+    level = DEBUG\n     formatter = generic\n     <BLANKLINE>\n     [handler_eventlog]\n     class = FileHandler\n-    args = ('.../sample-buildout/var/log/bar.log', 'a')\n+    args = ('var/log/bar.log', 'a')\n     level = NOTSET\n     formatter = generic\n     ...\n@@ -232,20 +265,30 @@ Next we want to disable access logging (but keep an event log file):\n     ... [instance]\n     ... recipe = plone.recipe.zope2instance\n     ... eggs =\n+    ... user = me:me\n     ... access-log = disable\n     ... ''' % options)\n \n+Let's run it::\n+\n+    >>> print(system(join('bin', 'buildout'))),\n+    Uninstalling instance.\n+    Installing instance.\n+    Generated script '.../sample-buildout/bin/instance'.\n+    ...\n+\n The buildout has updated our INI file:\n \n     >>> instance = os.path.join(sample_buildout, 'parts', 'instance')\n     >>> wsgi_ini = open(os.path.join(instance, 'etc', 'wsgi.ini')).read()\n     >>> print(wsgi_ini)\n+    [server:main]\n+    use = egg:waitress#main\n     ...\n     [pipeline:main]\n     pipeline =\n         egg:Zope#httpexceptions\n         zope\n-    <BLANKLINE>\n     ...\n \n Now we also want to disable event logging:\n@@ -259,21 +302,31 @@ Now we also want to disable event logging:\n     ... [instance]\n     ... recipe = plone.recipe.zope2instance\n     ... eggs =\n+    ... user = me:me\n     ... access-log = disable\n     ... event-log = disable\n     ... ''' % options)\n \n+Let's run it::\n+\n+    >>> print(system(join('bin', 'buildout'))),\n+    Uninstalling instance.\n+    Installing instance.\n+    Generated script '.../sample-buildout/bin/instance'.\n+    ...\n+\n The buildout has updated our INI file:\n \n     >>> instance = os.path.join(sample_buildout, 'parts', 'instance')\n     >>> wsgi_ini = open(os.path.join(instance, 'etc', 'wsgi.ini')).read()\n     >>> print(wsgi_ini)\n+    [server:main]\n+    use = egg:waitress#main\n     ...\n     [pipeline:main]\n     pipeline =\n         egg:Zope#httpexceptions\n         zope\n-    <BLANKLINE>\n     ...\n     [logger_root]\n     level = INFO\n"

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-03-04T07:43:06+01:00
Author: tschorr (tschorr) <t_schorr@gmx.de>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/f69c3998274306c92ed5317d2c0e5918f3f4e25c

update changelog

Files changed:
A news/76.bugfix
M CHANGES.rst

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex dbe445c..4878925 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -24,7 +24,6 @@ Breaking changes:\n \n Bug fixes:\n \n-\n - log level for Plone WSGI logger changed to INFO making the logging less\n   verbose [ajung] (#66)\n - Improve debugging of run scripts by providing the source code for the\ndiff --git a/news/76.bugfix b/news/76.bugfix\nnew file mode 100644\nindex 0000000..4d1da26\n--- /dev/null\n+++ b/news/76.bugfix\n@@ -0,0 +1,2 @@\n+Restore log files for waitress.\n+[tschorr]\n\\ No newline at end of file\n'

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-03-04T15:52:23+01:00
Author: tschorr (tschorr) <t_schorr@gmx.de>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/be6f98d513f87eb4db67a03262bfe3a1a18777af

change log format

Files changed:
M src/plone/recipe/zope2instance/recipe.py
M src/plone/recipe/zope2instance/tests/wsgi.txt

b'diff --git a/src/plone/recipe/zope2instance/recipe.py b/src/plone/recipe/zope2instance/recipe.py\nindex f8c6d4f..70fdbbe 100644\n--- a/src/plone/recipe/zope2instance/recipe.py\n+++ b/src/plone/recipe/zope2instance/recipe.py\n@@ -1293,5 +1293,5 @@ class = FileHandler\n formatter = generic\n \n [formatter_generic]\n-format = %%(asctime)s %%(levelname)-5.5s [%%(name)s:%%(lineno)s][%%(threadName)s] %%(message)s\n+format = %%(asctime)s %%(levelname)-7.7s [%%(name)s:%%(lineno)s][%%(threadName)s] %%(message)s\n """  # noqa: E501\ndiff --git a/src/plone/recipe/zope2instance/tests/wsgi.txt b/src/plone/recipe/zope2instance/tests/wsgi.txt\nindex e71b7a9..0c14ff7 100644\n--- a/src/plone/recipe/zope2instance/tests/wsgi.txt\n+++ b/src/plone/recipe/zope2instance/tests/wsgi.txt\n@@ -141,7 +141,7 @@ The buildout has also created an INI file containing the waitress configuration:\n     formatter = generic\n     <BLANKLINE>\n     [formatter_generic]\n-    format = %(asctime)s %(levelname)-5.5s [%(name)s:%(lineno)s][%(threadName)s] %(message)s\n+    format = %(asctime)s %(levelname)-7.7s [%(name)s:%(lineno)s][%(threadName)s] %(message)s\n \n Custom WSGI options\n ==================\n'

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-03-04T21:14:54+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/0997e5a2ebc2f7930e8972a77f4d953606b21375

Merge pull request #76 from plone/fix-file-logging-wsgi

Restore file based logging for waitress

Files changed:
A news/76.bugfix
M CHANGES.rst
M README.rst
M setup.py
M src/plone/recipe/zope2instance/recipe.py
M src/plone/recipe/zope2instance/tests/wsgi.txt

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex dbe445c..4878925 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -24,7 +24,6 @@ Breaking changes:\n \n Bug fixes:\n \n-\n - log level for Plone WSGI logger changed to INFO making the logging less\n   verbose [ajung] (#66)\n - Improve debugging of run scripts by providing the source code for the\ndiff --git a/README.rst b/README.rst\nindex 0acdc6a..f22ab93 100644\n--- a/README.rst\n+++ b/README.rst\n@@ -224,12 +224,11 @@ log levels or configure `mailinglogger`.\n event-log\n   The filename of the event log. Defaults to ${buildout:directory}/var/log/${partname}.log\n   Setting this value to \'disable\' will make the <eventlog> section to be omitted,\n-  disabling logging events by default to a .log file. Used for ZServer only, not WSGI.\n+  disabling logging events by default to a .log file.\n \n event-log-level\n   Set the level of the console output for the event log. Level may be any of\n   CRITICAL, ERROR, WARN, INFO, DEBUG, or ALL. Defaults to INFO.\n-  Used for ZServer only, not WSGI.\n \n event-log-max-size\n   Maximum size of event log file. Enables log rotation.\n@@ -258,14 +257,15 @@ mailinglogger\n \n   You will need to add `mailinglogger` to your buildout\'s egg section to make this work.\n \n-z2-log\n-  The filename for the Z2 access log. Defaults to var/log/${partname}-Z2.log.\n+access-log, z2-log\n+  The filename for the Z2 access log. Defaults to var/log/${partname}-Z2.log\n+  (var/log/${partname}-access.log) for WSGI).\n   Setting this value to \'disable\' will make the <logger access> section to be omitted,\n-  disabling logging access events to a .log file. Used for ZServer only, not WSGI.\n+  disabling logging access events to a .log file.\n \n-z2-log-level\n+access-log-level, z2-log-level\n   Set the log level for the access log. Level may be any of CRITICAL, ERROR,\n-  WARN, INFO, DEBUG, or ALL. Defaults to WARN. Used for ZServer only, not WSGI.\n+  WARN, INFO, DEBUG, or ALL. Defaults to WARN (INFO for WSGI).\n \n access-log-max-size\n   Maximum size of access log file. Enables log rotation.\ndiff --git a/news/76.bugfix b/news/76.bugfix\nnew file mode 100644\nindex 0000000..4d1da26\n--- /dev/null\n+++ b/news/76.bugfix\n@@ -0,0 +1,2 @@\n+Restore log files for waitress.\n+[tschorr]\n\\ No newline at end of file\ndiff --git a/setup.py b/setup.py\nindex 4b17783..f3d9669 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -43,6 +43,7 @@\n         \'Zope >= 4.0b1\',\n         \'ZODB >= 5.1.1\',\n         \'ZEO\',\n+        \'Paste\',\n     ],\n     extras_require={\n         \'test\': [\ndiff --git a/src/plone/recipe/zope2instance/recipe.py b/src/plone/recipe/zope2instance/recipe.py\nindex b9abe8b..70fdbbe 100644\n--- a/src/plone/recipe/zope2instance/recipe.py\n+++ b/src/plone/recipe/zope2instance/recipe.py\n@@ -333,7 +333,9 @@ def build_zope_conf(self):\n             }\n \n         z_log_name = os.path.sep.join((\'log\', self.name + \'-Z2.log\'))\n-        z_log_name = options.get(\'z2-log\', z_log_name)\n+        z_log_name = options.get(\n+            \'z2-log\',\n+            options.get(\'access-log\', z_log_name))\n         if z_log_name.lower() == \'disable\':\n             access_event_log = \'\'\n         else:\n@@ -661,10 +663,48 @@ def build_wsgi_ini(self):\n         listen = options.get(\'http-address\', \'0.0.0.0:8080\')\n         if \':\' not in listen:\n             listen = \'0.0.0.0:{}\'.format(listen)\n+\n+        base_dir = self.buildout[\'buildout\'][\'directory\']\n+        var_dir = options.get(\'var\', os.path.join(base_dir, \'var\'))\n+        default_eventlog = os.path.sep.join(\n+            (var_dir, \'log\', \'{}.log\'.format(self.name),))\n+        eventlog_name = options.get(\'event-log\', default_eventlog)\n+        eventlog_level = options.get(\'event-log-level\', \'INFO\')\n+\n+        if eventlog_name.lower() == \'disable\':\n+            root_handlers = \'console\'\n+            event_handlers = \'\'\n+        else:\n+            root_handlers = \'console, eventlog\'\n+            event_handlers = \'eventlog\'\n+\n+        default_accesslog = os.path.sep.join(\n+            (var_dir, \'log\', \'{}-access.log\'.format(self.name),))\n+\n+        accesslog_name = options.get(\n+            \'z2-log\',\n+            options.get(\'access-log\', default_accesslog))\n+        accesslog_level = options.get(\n+            \'access-log-level\',\n+            options.get(\'z2-log-level\', \'INFO\'))\n+\n+        if accesslog_name.lower() == \'disable\':\n+            pipeline = \'\\n    \'.join([\'egg:Zope#httpexceptions\', \'zope\'])\n+            event_handlers = \'\'\n+        else:\n+            pipeline = \'\\n    \'.join(\n+                [\'translogger\', \'egg:Zope#httpexceptions\', \'zope\'])\n         options = {\n             \'location\': options[\'location\'],\n             \'http_address\': listen,\n             \'threads\': options.get(\'threads\', 4),\n+            \'eventlog_name\': eventlog_name,\n+            \'root_handlers\': root_handlers,\n+            \'event_handlers\': event_handlers,\n+            \'accesslog_name\': accesslog_name,\n+            \'pipeline\': pipeline,\n+            \'eventlog_level\': eventlog_level,\n+            \'accesslog_level\': accesslog_level,\n         }\n         wsgi_ini = wsgi_ini_template % options\n         with open(wsgi_ini_path, \'w\') as f:\n@@ -1197,35 +1237,61 @@ def render_file_storage(self, file_storage, blob_storage,\n use = egg:Zope#main\n zope_conf = %(location)s/etc/zope.conf\n \n+[filter:translogger]\n+use = egg:Paste#translogger\n+setup_console_handler = False\n+\n [pipeline:main]\n pipeline =\n-    egg:Zope#httpexceptions\n-    zope\n+    %(pipeline)s\n \n [loggers]\n-keys = root, plone\n+keys = root, plone, waitress, wsgi\n \n [handlers]\n-keys = console\n+keys = console, accesslog, eventlog\n \n [formatters]\n keys = generic\n \n [logger_root]\n-level = INFO\n-handlers = console\n+level = %(eventlog_level)s\n+handlers = %(root_handlers)s\n \n [logger_plone]\n-level = INFO\n-handlers =\n+level = %(eventlog_level)s\n+handlers = %(event_handlers)s\n qualname = plone\n \n+[logger_waitress]\n+level = %(eventlog_level)s\n+handlers = %(event_handlers)s\n+qualname = waitress\n+\n+[logger_wsgi]\n+level = %(accesslog_level)s\n+handlers = accesslog\n+qualname = wsgi\n+propagate = 0\n+\n [handler_console]\n class = StreamHandler\n args = (sys.stderr,)\n level = NOTSET\n formatter = generic\n \n+[handler_accesslog]\n+class = FileHandler\n+args = (\'%(accesslog_name)s\',\'a\')\n+level = %(accesslog_level)s\n+formatter = generic\n+\n+[handler_eventlog]\n+class = FileHandler\n+args = (\'%(eventlog_name)s\', \'a\')\n+level = NOTSET\n+formatter = generic\n+\n [formatter_generic]\n-format = %%(asctime)s %%(levelname)-5.5s [%%(name)s:%%(lineno)s][%%(threadName)s] %%(message)s\n+format = %%(asctime)s %%(levelname)-7.7s [%%(name)s:%%(lineno)s][%%(threadName)s] %%(message)s\n """  # noqa: E501\ndiff --git a/src/plone/recipe/zope2instance/tests/wsgi.txt b/src/plone/recipe/zope2instance/tests/wsgi.txt\nindex cd38a87..0c14ff7 100644\n--- a/src/plone/recipe/zope2instance/tests/wsgi.txt\n+++ b/src/plone/recipe/zope2instance/tests/wsgi.txt\n@@ -83,41 +83,68 @@ The buildout has also created an INI file containing the waitress configuration:\n     use = egg:Zope#main\n     zope_conf = .../sample-buildout/parts/instance/etc/zope.conf\n     <BLANKLINE>\n+    [filter:translogger]\n+    use = egg:Paste#translogger\n+    setup_console_handler = False\n+    <BLANKLINE>\n     [pipeline:main]\n     pipeline =\n+        translogger\n         egg:Zope#httpexceptions\n         zope\n     <BLANKLINE>\n     [loggers]\n-    keys = root, plone\n+    keys = root, plone, waitress, wsgi\n     <BLANKLINE>\n     [handlers]\n-    keys = console\n+    keys = console, accesslog, eventlog\n     <BLANKLINE>\n     [formatters]\n     keys = generic\n     <BLANKLINE>\n     [logger_root]\n     level = INFO\n-    handlers = console\n+    handlers = console, eventlog\n     <BLANKLINE>\n     [logger_plone]\n     level = INFO\n-    handlers =\n+    handlers = eventlog\n     qualname = plone\n     <BLANKLINE>\n+    [logger_waitress]\n+    level = INFO\n+    handlers = eventlog\n+    qualname = waitress\n+    <BLANKLINE>\n+    [logger_wsgi]\n+    level = INFO\n+    handlers = accesslog\n+    qualname = wsgi\n+    propagate = 0\n+    <BLANKLINE>\n     [handler_console]\n     class = StreamHandler\n     args = (sys.stderr,)\n     level = NOTSET\n     formatter = generic\n     <BLANKLINE>\n-    [formatter_generic]\n-    format = %(asctime)s %(levelname)-5.5s [%(name)s:%(lineno)s][%(threadName)s] %(message)s\n+    [handler_accesslog]\n+    class = FileHandler\n+    args = (\'.../sample-buildout/var/log/instance-access.log\',\'a\')\n+    level = INFO\n+    formatter = generic\n     <BLANKLINE>\n+    [handler_eventlog]\n+    class = FileHandler\n+    args = (\'.../sample-buildout/var/log/instance.log\', \'a\')\n+    level = NOTSET\n+    formatter = generic\n+    <BLANKLINE>\n+    [formatter_generic]\n+    format = %(asctime)s %(levelname)-7.7s [%(name)s:%(lineno)s][%(threadName)s] %(message)s\n \n Custom WSGI options\n-=================\n+==================\n \n Let\'s create another buildout configuring a custom port and a custom number of workers::\n \n@@ -155,3 +182,163 @@ The buildout has updated our INI file:\n     <BLANKLINE>\n     [app:zope]\n     ...\n+\n+Custom logging\n+==============\n+\n+We want file based logging, i.e. event.log and access.log (ZServers Z2.log).\n+Let\'s create a buildout:\n+\n+    >>> write(\'buildout.cfg\',\n+    ... \'\'\'\n+    ... [buildout]\n+    ... parts = instance\n+    ... find-links = %(sample_buildout)s/eggs\n+    ...\n+    ... [instance]\n+    ... recipe = plone.recipe.zope2instance\n+    ... eggs =\n+    ... user = me:me\n+    ... access-log = var/log/foo.log\n+    ... event-log = var/log/bar.log\n+    ... z2-log-level = DEBUG\n+    ... event-log-level = ERROR\n+    ... \'\'\' % options)\n+\n+Let\'s run it::\n+\n+    >>> print(system(join(\'bin\', \'buildout\'))),\n+    Uninstalling instance.\n+    Installing instance.\n+    Generated script \'.../sample-buildout/bin/instance\'.\n+    ...\n+\n+The buildout has updated our INI file:\n+\n+    >>> instance = os.path.join(sample_buildout, \'parts\', \'instance\')\n+    >>> wsgi_ini = open(os.path.join(instance, \'etc\', \'wsgi.ini\')).read()\n+    >>> print(wsgi_ini)\n+    [server:main]\n+    use = egg:waitress#main\n+    ...\n+    [logger_root]\n+    level = ERROR\n+    handlers = console, eventlog\n+    <BLANKLINE>\n+    [logger_plone]\n+    level = ERROR\n+    handlers = eventlog\n+    qualname = plone\n+    <BLANKLINE>\n+    [logger_waitress]\n+    level = ERROR\n+    handlers = eventlog\n+    qualname = waitress\n+    <BLANKLINE>\n+    [logger_wsgi]\n+    level = DEBUG\n+    handlers = accesslog\n+    qualname = wsgi\n+    propagate = 0\n+    ...\n+    [handler_accesslog]\n+    class = FileHandler\n+    args = (\'var/log/foo.log\',\'a\')\n+    level = DEBUG\n+    formatter = generic\n+    <BLANKLINE>\n+    [handler_eventlog]\n+    class = FileHandler\n+    args = (\'var/log/bar.log\', \'a\')\n+    level = NOTSET\n+    formatter = generic\n+    ...\n+\n+Next we want to disable access logging (but keep an event log file):\n+\n+    >>> write(\'buildout.cfg\',\n+    ... \'\'\'\n+    ... [buildout]\n+    ... parts = instance\n+    ... find-links = %(sample_buildout)s/eggs\n+    ...\n+    ... [instance]\n+    ... recipe = plone.recipe.zope2instance\n+    ... eggs =\n+    ... user = me:me\n+    ... access-log = disable\n+    ... \'\'\' % options)\n+\n+Let\'s run it::\n+\n+    >>> print(system(join(\'bin\', \'buildout\'))),\n+    Uninstalling instance.\n+    Installing instance.\n+    Generated script \'.../sample-buildout/bin/instance\'.\n+    ...\n+\n+The buildout has updated our INI file:\n+\n+    >>> instance = os.path.join(sample_buildout, \'parts\', \'instance\')\n+    >>> wsgi_ini = open(os.path.join(instance, \'etc\', \'wsgi.ini\')).read()\n+    >>> print(wsgi_ini)\n+    [server:main]\n+    use = egg:waitress#main\n+    ...\n+    [pipeline:main]\n+    pipeline =\n+        egg:Zope#httpexceptions\n+        zope\n+    ...\n+\n+Now we also want to disable event logging:\n+\n+    >>> write(\'buildout.cfg\',\n+    ... \'\'\'\n+    ... [buildout]\n+    ... parts = instance\n+    ... find-links = %(sample_buildout)s/eggs\n+    ...\n+    ... [instance]\n+    ... recipe = plone.recipe.zope2instance\n+    ... eggs =\n+    ... user = me:me\n+    ... access-log = disable\n+    ... event-log = disable\n+    ... \'\'\' % options)\n+\n+Let\'s run it::\n+\n+    >>> print(system(join(\'bin\', \'buildout\'))),\n+    Uninstalling instance.\n+    Installing instance.\n+    Generated script \'.../sample-buildout/bin/instance\'.\n+    ...\n+\n+The buildout has updated our INI file:\n+\n+    >>> instance = os.path.join(sample_buildout, \'parts\', \'instance\')\n+    >>> wsgi_ini = open(os.path.join(instance, \'etc\', \'wsgi.ini\')).read()\n+    >>> print(wsgi_ini)\n+    [server:main]\n+    use = egg:waitress#main\n+    ...\n+    [pipeline:main]\n+    pipeline =\n+        egg:Zope#httpexceptions\n+        zope\n+    ...\n+    [logger_root]\n+    level = INFO\n+    handlers = console\n+    <BLANKLINE>\n+    [logger_plone]\n+    level = INFO\n+    handlers =\n+    qualname = plone\n+    <BLANKLINE>\n+    [logger_waitress]\n+    level = INFO\n+    handlers =\n+    qualname = waitress\n+    ...\n'

