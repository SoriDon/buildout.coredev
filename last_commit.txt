Repository: plone.app.textfield


Branch: refs/heads/master
Date: 2018-09-20T18:42:55+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.textfield/commit/9eb4e9e61a05144e3a9347058240a2ee37d3d136

fix tests in py3

Files changed:
M plone/app/textfield/field.rst
M plone/app/textfield/tests.py

b'diff --git a/plone/app/textfield/field.rst b/plone/app/textfield/field.rst\nindex d608170..5c70591 100644\n--- a/plone/app/textfield/field.rst\n+++ b/plone/app/textfield/field.rst\n@@ -170,7 +170,7 @@ MIME types if the allowed_mime_types property is set.\n     >>> field.validate(value)\n     Traceback (most recent call last):\n     ...\n-    WrongType: (RichTextValue object. (Did you mean <attribute>.raw or <attribute>.output?), (\'text/html\',))\n+    zope.schema._bootstrapinterfaces.WrongType: (RichTextValue object. (Did you mean ...\n \n     >>> field.allowed_mime_types = (\'text/plain\', \'text/html\',)\n     >>> field.validate(value)\n@@ -182,7 +182,7 @@ if a max_length is set.\n     >>> field.validate(long_value)\n     Traceback (most recent call last):\n     ...\n-    Invalid: msg_text_too_long\n+    zope.interface.exceptions.Invalid: msg_text_too_long\n \n Field validation will also check field constraints.\n \n@@ -190,7 +190,7 @@ Field validation will also check field constraints.\n     >>> field.validate(value)\n     Traceback (most recent call last):\n     ...\n-    ConstraintNotSatisfied: ...\n+    zope.schema._bootstrapinterfaces.ConstraintNotSatisfied: ...\n \n \n Default value\ndiff --git a/plone/app/textfield/tests.py b/plone/app/textfield/tests.py\nindex e487a5e..a48386f 100644\n--- a/plone/app/textfield/tests.py\n+++ b/plone/app/textfield/tests.py\n@@ -350,18 +350,18 @@ class Py23DocChecker(doctest.OutputChecker):\n     def check_output(self, want, got, optionflags):\n         if six.PY2:\n             want = re.sub("b\'(.*?)\'", "\'\\\\1\'", want)\n-        else:\n-            want = re.sub("u\'(.*?)\'", "\'\\\\1\'", want)\n-            want = re.sub(\'u"(.*?)"\', \'"\\\\1"\', want)\n-            got = re.sub(\n+            want = re.sub(\n                 \'zope.schema._bootstrapinterfaces.WrongType\',\n-                \'WrongType\', got)\n-            got = re.sub(\n+                \'WrongType\', want)\n+            want = re.sub(\n                 \'zope.interface.exceptions.Invalid\',\n-                \'Invalid\', got)\n-            got = re.sub(\n+                \'Invalid\', want)\n+            want = re.sub(\n                 \'zope.schema._bootstrapinterfaces.ConstraintNotSatisfied\',\n-                \'ConstraintNotSatisfied\', got)\n+                \'ConstraintNotSatisfied\', want)\n+        else:\n+            want = re.sub("u\'(.*?)\'", "\'\\\\1\'", want)\n+            want = re.sub(\'u"(.*?)"\', \'"\\\\1"\', want)\n \n         return doctest.OutputChecker.check_output(self, want, got, optionflags)\n \n'

Repository: plone.app.textfield


Branch: refs/heads/master
Date: 2018-09-21T07:36:31+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.textfield/commit/994bdb8773712d19500b59c6c826da3d0f5abdc1

add changenote

Files changed:
M CHANGES.rst

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 497c825..1fc5a16 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -15,7 +15,8 @@ New features:\n \n Bug fixes:\n \n-- *add item here*\n+- Fix doctests tests in py3\n+  [pbauer]\n \n \n 1.2.12 (unreleased)\n'

Repository: plone.app.textfield


Branch: refs/heads/master
Date: 2018-09-21T07:37:04+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.textfield/commit/315c133fc974a96fbe8125bf4b9ce7c6160dcae9

Merge pull request #31 from plone/python3

fix doctests tests in py3

Files changed:
M CHANGES.rst
M plone/app/textfield/field.rst
M plone/app/textfield/tests.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 497c825..1fc5a16 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -15,7 +15,8 @@ New features:\n \n Bug fixes:\n \n-- *add item here*\n+- Fix doctests tests in py3\n+  [pbauer]\n \n \n 1.2.12 (unreleased)\ndiff --git a/plone/app/textfield/field.rst b/plone/app/textfield/field.rst\nindex d608170..5c70591 100644\n--- a/plone/app/textfield/field.rst\n+++ b/plone/app/textfield/field.rst\n@@ -170,7 +170,7 @@ MIME types if the allowed_mime_types property is set.\n     >>> field.validate(value)\n     Traceback (most recent call last):\n     ...\n-    WrongType: (RichTextValue object. (Did you mean <attribute>.raw or <attribute>.output?), (\'text/html\',))\n+    zope.schema._bootstrapinterfaces.WrongType: (RichTextValue object. (Did you mean ...\n \n     >>> field.allowed_mime_types = (\'text/plain\', \'text/html\',)\n     >>> field.validate(value)\n@@ -182,7 +182,7 @@ if a max_length is set.\n     >>> field.validate(long_value)\n     Traceback (most recent call last):\n     ...\n-    Invalid: msg_text_too_long\n+    zope.interface.exceptions.Invalid: msg_text_too_long\n \n Field validation will also check field constraints.\n \n@@ -190,7 +190,7 @@ Field validation will also check field constraints.\n     >>> field.validate(value)\n     Traceback (most recent call last):\n     ...\n-    ConstraintNotSatisfied: ...\n+    zope.schema._bootstrapinterfaces.ConstraintNotSatisfied: ...\n \n \n Default value\ndiff --git a/plone/app/textfield/tests.py b/plone/app/textfield/tests.py\nindex e487a5e..a48386f 100644\n--- a/plone/app/textfield/tests.py\n+++ b/plone/app/textfield/tests.py\n@@ -350,18 +350,18 @@ class Py23DocChecker(doctest.OutputChecker):\n     def check_output(self, want, got, optionflags):\n         if six.PY2:\n             want = re.sub("b\'(.*?)\'", "\'\\\\1\'", want)\n-        else:\n-            want = re.sub("u\'(.*?)\'", "\'\\\\1\'", want)\n-            want = re.sub(\'u"(.*?)"\', \'"\\\\1"\', want)\n-            got = re.sub(\n+            want = re.sub(\n                 \'zope.schema._bootstrapinterfaces.WrongType\',\n-                \'WrongType\', got)\n-            got = re.sub(\n+                \'WrongType\', want)\n+            want = re.sub(\n                 \'zope.interface.exceptions.Invalid\',\n-                \'Invalid\', got)\n-            got = re.sub(\n+                \'Invalid\', want)\n+            want = re.sub(\n                 \'zope.schema._bootstrapinterfaces.ConstraintNotSatisfied\',\n-                \'ConstraintNotSatisfied\', got)\n+                \'ConstraintNotSatisfied\', want)\n+        else:\n+            want = re.sub("u\'(.*?)\'", "\'\\\\1\'", want)\n+            want = re.sub(\'u"(.*?)"\', \'"\\\\1"\', want)\n \n         return doctest.OutputChecker.check_output(self, want, got, optionflags)\n \n'

