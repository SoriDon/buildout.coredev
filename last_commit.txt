Repository: plone.theme


Branch: refs/heads/master
Date: 2023-04-25T00:00:56+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.theme/commit/1c40deeed5f846f997f548ffcc751369ea649c4c

Configuring with plone/meta

Files changed:
A .editorconfig
A .meta.toml
A .pre-commit-config.yaml
A news/2a4ba395.internal
A tox.ini
M pyproject.toml
M setup.cfg

b'diff --git a/.editorconfig b/.editorconfig\nnew file mode 100644\nindex 0000000..b4158b8\n--- /dev/null\n+++ b/.editorconfig\n@@ -0,0 +1,39 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+#\n+# EditorConfig Configuration file, for more details see:\n+# http://EditorConfig.org\n+# EditorConfig is a convention description, that could be interpreted\n+# by multiple editors to enforce common coding conventions for specific\n+# file types\n+\n+# top-most EditorConfig file:\n+# Will ignore other EditorConfig files in Home directory or upper tree level.\n+root = true\n+\n+\n+[*]  # For All Files\n+# Unix-style newlines with a newline ending every file\n+end_of_line = lf\n+insert_final_newline = true\n+trim_trailing_whitespace = true\n+# Set default charset\n+charset = utf-8\n+# Indent style default\n+indent_style = space\n+# Max Line Length - a hard line wrap, should be disabled\n+max_line_length = off\n+\n+[*.{py,cfg,ini}]\n+# 4 space indentation\n+indent_size = 4\n+\n+[*.{yml,zpt,pt,dtml,zcml}]\n+# 2 space indentation\n+indent_size = 2\n+\n+[{Makefile,.gitmodules}]\n+# Tab indentation (no size specified, but view as 4 spaces)\n+indent_style = tab\n+indent_size = unset\n+tab_width = unset\ndiff --git a/.meta.toml b/.meta.toml\nnew file mode 100644\nindex 0000000..99342b2\n--- /dev/null\n+++ b/.meta.toml\n@@ -0,0 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[meta]\n+template = "default"\n+commit-id = "2a4ba395"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nnew file mode 100644\nindex 0000000..fdafec1\n--- /dev/null\n+++ b/.pre-commit-config.yaml\n@@ -0,0 +1,42 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+ci:\n+    autofix_prs: false\n+    autoupdate_schedule: monthly\n+\n+repos:\n+-   repo: https://github.com/asottile/pyupgrade\n+    rev: v3.3.1\n+    hooks:\n+    -   id: pyupgrade\n+        args: [--py38-plus]\n+-   repo: https://github.com/pycqa/isort\n+    rev: 5.12.0\n+    hooks:\n+    -   id: isort\n+-   repo: https://github.com/psf/black\n+    rev: 23.3.0\n+    hooks:\n+    -   id: black\n+-   repo: https://github.com/collective/zpretty\n+    rev: 3.0.3\n+    hooks:\n+    -   id: zpretty\n+-   repo: https://github.com/PyCQA/flake8\n+    rev: 6.0.0\n+    hooks:\n+    -   id: flake8\n+-   repo: https://github.com/codespell-project/codespell\n+    rev: v2.2.4\n+    hooks:\n+    -   id: codespell\n+        additional_dependencies:\n+          - tomli\n+-   repo: https://github.com/mgedmin/check-manifest\n+    rev: "0.49"\n+    hooks:\n+    -   id: check-manifest\n+-   repo: https://github.com/regebro/pyroma\n+    rev: "4.2"\n+    hooks:\n+    -   id: pyroma\ndiff --git a/news/2a4ba395.internal b/news/2a4ba395.internal\nnew file mode 100644\nindex 0000000..c08f539\n--- /dev/null\n+++ b/news/2a4ba395.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 05b615d..639f77a 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,3 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [tool.towncrier]\n filename = "CHANGES.rst"\n directory = "news/"\n@@ -18,3 +20,65 @@ showcontent = true\n directory = "bugfix"\n name = "Bug fixes:"\n showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "internal"\n+name = "Internal:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "documentation"\n+name = "Documentation:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "tests"\n+name = "Tests"\n+showcontent = true\n+\n+[tool.isort]\n+profile = "plone"\n+\n+[tool.black]\n+target-version = ["py38"]\n+\n+\n+[tool.dependencychecker]\n+Zope = [\n+  # Zope own provided namespaces\n+  \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n+  \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n+  \'Zope2\', \'webdav\', \'zmi\',\n+  # ExtensionClass own provided namespaces\n+  \'ExtensionClass\', \'ComputedAttribute\', \'MethodObject\',\n+  # Zope dependencies\n+  \'AccessControl\', \'Acquisition\', \'AuthEncoding\', \'beautifulsoup4\', \'BTrees\',\n+  \'cffi\', \'Chameleon\', \'DateTime\', \'DocumentTemplate\',\n+  \'MultiMapping\', \'multipart\', \'PasteDeploy\', \'Persistence\', \'persistent\',\n+  \'pycparser\', \'python-gettext\', \'pytz\', \'RestrictedPython\', \'roman\',\n+  \'soupsieve\', \'transaction\', \'waitress\', \'WebOb\', \'WebTest\', \'WSGIProxy2\',\n+  \'z3c.pt\', \'zc.lockfile\', \'ZConfig\', \'zExceptions\', \'ZODB\', \'zodbpickle\',\n+  \'zope.annotation\', \'zope.browser\', \'zope.browsermenu\', \'zope.browserpage\',\n+  \'zope.browserresource\', \'zope.cachedescriptors\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.contentprovider\',\n+  \'zope.contenttype\', \'zope.datetime\', \'zope.deferredimport\',\n+  \'zope.deprecation\', \'zope.dottedname\', \'zope.event\', \'zope.exceptions\',\n+  \'zope.filerepresentation\', \'zope.globalrequest\', \'zope.hookable\',\n+  \'zope.i18n\', \'zope.i18nmessageid\', \'zope.interface\', \'zope.lifecycleevent\',\n+  \'zope.location\', \'zope.pagetemplate\', \'zope.processlifetime\', \'zope.proxy\',\n+  \'zope.ptresource\', \'zope.publisher\', \'zope.schema\', \'zope.security\',\n+  \'zope.sequencesort\', \'zope.site\', \'zope.size\', \'zope.structuredtext\',\n+  \'zope.tal\', \'zope.tales\', \'zope.testbrowser\', \'zope.testing\',\n+  \'zope.traversing\', \'zope.viewlet\'\n+]\n+\'Products.CMFCore\' = [\n+  \'docutils\', \'five.localsitemanager\', \'Missing\', \'Products.BTreeFolder2\',\n+  \'Products.GenericSetup\', \'Products.MailHost\', \'Products.PythonScripts\',\n+  \'Products.StandardCacheManagers\', \'Products.ZCatalog\', \'Record\',\n+  \'zope.sendmail\', \'Zope\'\n+]\n+\'plone.base\' = [\n+  \'plone.batching\', \'plone.registry\', \'plone.schema\',\'plone.z3cform\',\n+  \'Products.CMFCore\', \'Products.CMFDynamicViewFTI\',\n+]\n+python-dateutil = [\'dateutil\']\ndiff --git a/setup.cfg b/setup.cfg\nindex 2a9acf1..0da8f8f 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -1,2 +1,23 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [bdist_wheel]\n-universal = 1\n+universal = 0\n+\n+[flake8]\n+doctests = 1\n+ignore =\n+    # black takes care of line length\n+    E501,\n+    # black takes care of where to break lines\n+    W503,\n+    # black takes care of spaces within slicing (list[:])\n+    E203,\n+    # black takes care of spaces after commas\n+    E231,\n+\n+[check-manifest]\n+ignore =\n+    .editorconfig\n+    .meta.toml\n+    .pre-commit-config.yaml\n+    tox.ini\ndiff --git a/tox.ini b/tox.ini\nnew file mode 100644\nindex 0000000..0c00406\n--- /dev/null\n+++ b/tox.ini\n@@ -0,0 +1,76 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[tox]\n+# We need 4.4.0 for constrain_package_deps.\n+min_version = 4.4.0\n+envlist =\n+    format\n+    lint\n+    test\n+\n+[testenv]\n+allowlist_externals =\n+    sh\n+\n+[testenv:format]\n+description = automatically reformat code\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a pyupgrade\n+    pre-commit run -a isort\n+    pre-commit run -a black\n+    pre-commit run -a zpretty\n+\n+[testenv:lint]\n+description = run linters that will help improve the code style\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a\n+\n+[testenv:dependencies]\n+description = check if the package defines all its dependencies\n+skip_install = true\n+deps =\n+    build\n+    z3c.dependencychecker==2.11\n+commands =\n+    python -m build --sdist --no-isolation\n+    dependencychecker\n+\n+[testenv:dependencies-graph]\n+description = generate a graph out of the package\'s dependencies\n+deps =\n+    pipdeptree==2.5.1\n+    graphviz  # optional dependency of pipdeptree\n+commands =\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+\n+[testenv:test]\n+use_develop = true\n+constrain_package_deps = true\n+set_env = ROBOT_BROWSER=headlesschrome\n+deps =\n+    zope.testrunner\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    zope-testrunner --all --test-path={toxinidir} -s plone.theme {posargs}\n+extras =\n+    test\n+\n+[testenv:coverage]\n+use_develop = true\n+constrain_package_deps = true\n+set_env = ROBOT_BROWSER=headlesschrome\n+deps =\n+    coverage\n+    zope.testrunner\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    coverage run {envbindir}/zope-testrunner --all --test-path={toxinidir} -s plone.theme {posargs}\n+    coverage report -m --format markdown\n+extras =\n+    test\n'

Repository: plone.theme


Branch: refs/heads/master
Date: 2023-04-25T00:03:22+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.theme/commit/f3fd509660f38e8ba215e52e1a4ddd655c32a3ff

chore: pyupgrade

Files changed:
M plone/theme/layer.py
M plone/theme/testing.py

b'diff --git a/plone/theme/layer.py b/plone/theme/layer.py\nindex 70c2195..fb87485 100644\n--- a/plone/theme/layer.py\n+++ b/plone/theme/layer.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n from plone.theme.interfaces import IDefaultPloneLayer\n from Products.CMFCore.utils import getToolByName\n from zope.component import queryUtility\ndiff --git a/plone/theme/testing.py b/plone/theme/testing.py\nindex 5da83ca..6770052 100644\n--- a/plone/theme/testing.py\n+++ b/plone/theme/testing.py\n@@ -1,5 +1,3 @@\n-# -*- coding: utf-8 -*-\n-\n from plone.app.testing import PloneSandboxLayer\n from plone.app.testing.layers import FunctionalTesting\n from plone.app.testing.layers import IntegrationTesting\n'

Repository: plone.theme


Branch: refs/heads/master
Date: 2023-04-25T00:03:42+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.theme/commit/4169241866be0e3ef26d2126588b8a69a9ba2178

chore: isort

Files changed:
M plone/theme/layer.py
M plone/theme/tests/testBrowserLayerPrecedence.py
M plone/theme/tests/test_doctest.py
M setup.py

b'diff --git a/plone/theme/layer.py b/plone/theme/layer.py\nindex fb87485..1095983 100644\n--- a/plone/theme/layer.py\n+++ b/plone/theme/layer.py\n@@ -1,10 +1,12 @@\n from plone.theme.interfaces import IDefaultPloneLayer\n from Products.CMFCore.utils import getToolByName\n from zope.component import queryUtility\n-from zope.interface import directlyProvides, directlyProvidedBy\n+from zope.interface import directlyProvidedBy\n+from zope.interface import directlyProvides\n from zope.publisher.interfaces.browser import IBrowserSkinType\n from zope.publisher.interfaces.browser import IDefaultBrowserLayer\n \n+\n default_layers = [\n     IDefaultPloneLayer,\n     IDefaultBrowserLayer,\ndiff --git a/plone/theme/tests/testBrowserLayerPrecedence.py b/plone/theme/tests/testBrowserLayerPrecedence.py\nindex 327d502..39db4fe 100644\n--- a/plone/theme/tests/testBrowserLayerPrecedence.py\n+++ b/plone/theme/tests/testBrowserLayerPrecedence.py\n@@ -3,13 +3,14 @@\n \n from plone.theme.interfaces import IDefaultPloneLayer\n from plone.theme.testing import PLONETHEME_INTEGRATION_TESTING\n-\n-from zope.event import notify\n-from zope.interface import Interface, directlyProvides, directlyProvidedBy\n from zope.component import getGlobalSiteManager\n+from zope.event import notify\n+from zope.interface import directlyProvidedBy\n+from zope.interface import directlyProvides\n+from zope.interface import Interface\n+from zope.publisher.browser import setDefaultSkin\n from zope.publisher.interfaces.browser import IBrowserSkinType\n from zope.publisher.interfaces.browser import IDefaultBrowserLayer\n-from zope.publisher.browser import setDefaultSkin\n from zope.traversing.interfaces import BeforeTraverseEvent\n \n import unittest\n@@ -103,7 +104,8 @@ class TestPrecedenceWithNoThemeLayer(LayerPrecedenceTestCase):\n \n \n def test_suite():\n-    from unittest import TestSuite, makeSuite\n+    from unittest import makeSuite\n+    from unittest import TestSuite\n     suite = TestSuite()\n     suite.addTest(makeSuite(TestPrecedenceWithAdditiveLayerExtendingInterface))\n     suite.addTest(makeSuite(TestPrecedenceWithAdditiveLayerExtendingDefault))\ndiff --git a/plone/theme/tests/test_doctest.py b/plone/theme/tests/test_doctest.py\nindex a3c6411..1338a62 100644\n--- a/plone/theme/tests/test_doctest.py\n+++ b/plone/theme/tests/test_doctest.py\n@@ -1,9 +1,8 @@\n-import unittest\n-import doctest\n-\n+from plone.testing import layered\n from plone.theme.testing import PLONETHEME_FUNCTIONAL_TESTING\n \n-from plone.testing import layered\n+import doctest\n+import unittest\n \n \n def test_suite():\ndiff --git a/setup.py b/setup.py\nindex 576089b..b9b4316 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,5 +1,7 @@\n+from setuptools import find_packages\n+from setuptools import setup\n+\n import os\n-from setuptools import setup, find_packages\n \n \n def read(*rnames):\n'

Repository: plone.theme


Branch: refs/heads/master
Date: 2023-04-25T00:04:46+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.theme/commit/17d1ca288f9748422a234867163ea5e9430c3c55

chore: black

Files changed:
M plone/__init__.py
M plone/theme/interfaces.py
M plone/theme/layer.py
M plone/theme/testing.py
M plone/theme/tests/__init__.py
M plone/theme/tests/interfaces.py
M plone/theme/tests/testBrowserLayerPrecedence.py
M plone/theme/tests/test_doctest.py
M setup.py

b'diff --git a/plone/__init__.py b/plone/__init__.py\nindex f48ad10..05f0beb 100644\n--- a/plone/__init__.py\n+++ b/plone/__init__.py\n@@ -1,6 +1,7 @@\n # See http://peak.telecommunity.com/DevCenter/setuptools#namespace-packages\n try:\n-    __import__(\'pkg_resources\').declare_namespace(__name__)\n+    __import__("pkg_resources").declare_namespace(__name__)\n except ImportError:\n     from pkgutil import extend_path\n+\n     __path__ = extend_path(__path__, __name__)\ndiff --git a/plone/theme/interfaces.py b/plone/theme/interfaces.py\nindex 359f8ee..dc06a69 100644\n--- a/plone/theme/interfaces.py\n+++ b/plone/theme/interfaces.py\n@@ -2,5 +2,4 @@\n \n \n class IDefaultPloneLayer(IDefaultBrowserLayer):\n-    """A Zope 3 browser layer corresponding to Plone defaults\n-    """\n+    """A Zope 3 browser layer corresponding to Plone defaults"""\ndiff --git a/plone/theme/layer.py b/plone/theme/layer.py\nindex 1095983..20c4ecb 100644\n--- a/plone/theme/layer.py\n+++ b/plone/theme/layer.py\n@@ -10,18 +10,18 @@\n default_layers = [\n     IDefaultPloneLayer,\n     IDefaultBrowserLayer,\n-    ]\n+]\n \n \n def mark_layer(site, event):\n     """Mark the request with a layer corresponding to the current skin,\n     as set in the portal_skins tool.\n     """\n-    if getattr(event.request, \'_plonetheme_\', False):\n+    if getattr(event.request, "_plonetheme_", False):\n         return\n     event.request._plonetheme_ = True\n \n-    portal_skins = getToolByName(site, \'portal_skins\', None)\n+    portal_skins = getToolByName(site, "portal_skins", None)\n     if portal_skins is not None:\n         skin_name = site.getCurrentSkinName()\n         if skin_name is None:\n@@ -41,5 +41,11 @@ def mark_layer(site, event):\n                     continue\n                 else:\n                     layer_ifaces.append(layer)\n-            ifaces = [skin, ] + layer_ifaces + default_ifaces\n+            ifaces = (\n+                [\n+                    skin,\n+                ]\n+                + layer_ifaces\n+                + default_ifaces\n+            )\n             directlyProvides(event.request, *ifaces)\ndiff --git a/plone/theme/testing.py b/plone/theme/testing.py\nindex 6770052..b804385 100644\n--- a/plone/theme/testing.py\n+++ b/plone/theme/testing.py\n@@ -4,17 +4,18 @@\n \n \n class PloneThemeLayer(PloneSandboxLayer):\n-\n     def setUpZope(self, app, configurationContext):\n         import plone.theme.tests\n-        self.loadZCML(\'tests.zcml\', package=plone.theme.tests)\n+\n+        self.loadZCML("tests.zcml", package=plone.theme.tests)\n+\n \n PLONETHEME_FIXTURE = PloneThemeLayer()\n \n PLONETHEME_FUNCTIONAL_TESTING = FunctionalTesting(\n-    bases=(PLONETHEME_FIXTURE,),\n-    name="PloneTheme:Functional")\n+    bases=(PLONETHEME_FIXTURE,), name="PloneTheme:Functional"\n+)\n \n PLONETHEME_INTEGRATION_TESTING = IntegrationTesting(\n-    bases=(PLONETHEME_FIXTURE,),\n-    name="PloneTheme:Integration")\n+    bases=(PLONETHEME_FIXTURE,), name="PloneTheme:Integration"\n+)\ndiff --git a/plone/theme/tests/__init__.py b/plone/theme/tests/__init__.py\nindex 4287ca8..792d600 100644\n--- a/plone/theme/tests/__init__.py\n+++ b/plone/theme/tests/__init__.py\n@@ -1 +1 @@\n-#\n\\ No newline at end of file\n+#\ndiff --git a/plone/theme/tests/interfaces.py b/plone/theme/tests/interfaces.py\nindex 74abe3b..315b745 100644\n--- a/plone/theme/tests/interfaces.py\n+++ b/plone/theme/tests/interfaces.py\n@@ -6,5 +6,4 @@\n \n \n class IMyTheme(IDefaultPloneLayer):\n-    """Marker interface used in the tests\n-    """\n+    """Marker interface used in the tests"""\ndiff --git a/plone/theme/tests/testBrowserLayerPrecedence.py b/plone/theme/tests/testBrowserLayerPrecedence.py\nindex 39db4fe..2c50a56 100644\n--- a/plone/theme/tests/testBrowserLayerPrecedence.py\n+++ b/plone/theme/tests/testBrowserLayerPrecedence.py\n@@ -29,25 +29,23 @@ class IAdditiveLayerExtendingDefault(IDefaultPloneLayer):\n \n \n class LayerPrecedenceTestCase(unittest.TestCase):\n-\n     layer = PLONETHEME_INTEGRATION_TESTING\n \n     additive_layer = None\n     theme_layer = None\n \n     def setUp(self):\n-        self.portal = self.layer[\'portal\']\n+        self.portal = self.layer["portal"]\n         gsm = getGlobalSiteManager()\n         if self.theme_layer is not None:\n             self._skin_name = self.portal.portal_skins.getDefaultSkin()\n-            self._old_theme_layer = gsm.queryUtility(IBrowserSkinType,\n-                                                     name=self._skin_name)\n-            gsm.registerUtility(self.theme_layer,\n-                                IBrowserSkinType,\n-                                self._skin_name)\n+            self._old_theme_layer = gsm.queryUtility(\n+                IBrowserSkinType, name=self._skin_name\n+            )\n+            gsm.registerUtility(self.theme_layer, IBrowserSkinType, self._skin_name)\n \n     def _get_request_interfaces(self):\n-        request = self.layer[\'request\']\n+        request = self.layer["request"]\n         setDefaultSkin(request)\n         orig_iro = list(directlyProvidedBy(request).__iro__)\n         directlyProvides(request, [self.additive_layer] + orig_iro)\n@@ -79,13 +77,12 @@ def testLayerPrecedence(self):\n     def beforeTearDown(self):\n         gsm = getGlobalSiteManager()\n         if self.theme_layer is not None:\n-            res = gsm.unregisterUtility(provided=IBrowserSkinType,\n-                                        name=self._skin_name)\n+            res = gsm.unregisterUtility(provided=IBrowserSkinType, name=self._skin_name)\n             self.assertTrue(res)\n             if self._old_theme_layer is not None:\n-                gsm.registerUtility(self._old_theme_layer,\n-                                    IBrowserSkinType,\n-                                    self._skin_name)\n+                gsm.registerUtility(\n+                    self._old_theme_layer, IBrowserSkinType, self._skin_name\n+                )\n \n \n class TestPrecedenceWithAdditiveLayerExtendingInterface(LayerPrecedenceTestCase):\n@@ -106,6 +103,7 @@ class TestPrecedenceWithNoThemeLayer(LayerPrecedenceTestCase):\n def test_suite():\n     from unittest import makeSuite\n     from unittest import TestSuite\n+\n     suite = TestSuite()\n     suite.addTest(makeSuite(TestPrecedenceWithAdditiveLayerExtendingInterface))\n     suite.addTest(makeSuite(TestPrecedenceWithAdditiveLayerExtendingDefault))\ndiff --git a/plone/theme/tests/test_doctest.py b/plone/theme/tests/test_doctest.py\nindex 1338a62..4ea28aa 100644\n--- a/plone/theme/tests/test_doctest.py\n+++ b/plone/theme/tests/test_doctest.py\n@@ -7,7 +7,14 @@\n \n def test_suite():\n     return unittest.TestSuite(\n-        [layered(doctest.DocFileSuite(\'README.rst\', package=\'plone.theme\',\n-         optionflags=doctest.ELLIPSIS | doctest.REPORT_ONLY_FIRST_FAILURE),\n-         layer=PLONETHEME_FUNCTIONAL_TESTING)]\n+        [\n+            layered(\n+                doctest.DocFileSuite(\n+                    "README.rst",\n+                    package="plone.theme",\n+                    optionflags=doctest.ELLIPSIS | doctest.REPORT_ONLY_FIRST_FAILURE,\n+                ),\n+                layer=PLONETHEME_FUNCTIONAL_TESTING,\n+            )\n+        ]\n     )\ndiff --git a/setup.py b/setup.py\nindex b9b4316..dd6661c 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -7,61 +7,63 @@\n def read(*rnames):\n     return open(os.path.join(os.path.dirname(__file__), *rnames)).read()\n \n-version = \'3.0.8.dev0\'\n+\n+version = "3.0.8.dev0"\n \n long_description = (\n-    read(\'README.rst\')\n-    + \'\\n\' +\n-    read(\'plone\', \'theme\', \'README.rst\')\n-    + \'\\n\' +\n-    read(\'CHANGES.rst\')\n-    + \'\\n\'\n-    )\n+    read("README.rst")\n+    + "\\n"\n+    + read("plone", "theme", "README.rst")\n+    + "\\n"\n+    + read("CHANGES.rst")\n+    + "\\n"\n+)\n \n \n-setup(name=\'plone.theme\',\n-      version=version,\n-      description="Tools for managing themes in CMF and Plone sites",\n-      long_description=long_description,\n-      classifiers=[\n-          "Development Status :: 5 - Production/Stable",\n-          "Environment :: Web Environment",\n-          "Framework :: Plone",\n-          "Framework :: Plone :: 5.0",\n-          "Framework :: Plone :: 5.1",\n-          "Framework :: Plone :: 5.2",\n-          "Framework :: Plone :: Core",\n-          "Framework :: Zope2",\n-          "Framework :: Zope :: 4",\n-          "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",\n-          "Operating System :: OS Independent",\n-          "Programming Language :: Python",\n-          "Programming Language :: Python :: 2.7",\n-          "Programming Language :: Python :: 3.6",\n-          "Programming Language :: Python :: 3.7",\n-          "Programming Language :: Python :: 3.8",\n-      ],\n-      keywords=\'plone theme manage\',\n-      author=\'Plone Foundation\',\n-      author_email=\'plone-developers@lists.sourceforge.net\',\n-      url=\'https://pypi.org/project/plone.theme\',\n-      license=\'GPL version 2\',\n-      packages=find_packages(),\n-      namespace_packages=[\'plone\'],\n-      include_package_data=True,\n-      zip_safe=False,\n-      extras_require=dict(\n-          test=[\n-              \'plone.app.testing\',\n-          ]\n-      ),\n-      install_requires=[\n-          \'setuptools\',\n-          \'zope.component\',\n-          \'zope.interface\',\n-          \'zope.publisher\',\n-          \'zope.traversing\',\n-          \'Products.CMFCore\',\n-          \'Zope2\',\n-      ],\n-      )\n+setup(\n+    name="plone.theme",\n+    version=version,\n+    description="Tools for managing themes in CMF and Plone sites",\n+    long_description=long_description,\n+    classifiers=[\n+        "Development Status :: 5 - Production/Stable",\n+        "Environment :: Web Environment",\n+        "Framework :: Plone",\n+        "Framework :: Plone :: 5.0",\n+        "Framework :: Plone :: 5.1",\n+        "Framework :: Plone :: 5.2",\n+        "Framework :: Plone :: Core",\n+        "Framework :: Zope2",\n+        "Framework :: Zope :: 4",\n+        "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",\n+        "Operating System :: OS Independent",\n+        "Programming Language :: Python",\n+        "Programming Language :: Python :: 2.7",\n+        "Programming Language :: Python :: 3.6",\n+        "Programming Language :: Python :: 3.7",\n+        "Programming Language :: Python :: 3.8",\n+    ],\n+    keywords="plone theme manage",\n+    author="Plone Foundation",\n+    author_email="plone-developers@lists.sourceforge.net",\n+    url="https://pypi.org/project/plone.theme",\n+    license="GPL version 2",\n+    packages=find_packages(),\n+    namespace_packages=["plone"],\n+    include_package_data=True,\n+    zip_safe=False,\n+    extras_require=dict(\n+        test=[\n+            "plone.app.testing",\n+        ]\n+    ),\n+    install_requires=[\n+        "setuptools",\n+        "zope.component",\n+        "zope.interface",\n+        "zope.publisher",\n+        "zope.traversing",\n+        "Products.CMFCore",\n+        "Zope2",\n+    ],\n+)\n'

Repository: plone.theme


Branch: refs/heads/master
Date: 2023-04-25T00:06:33+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.theme/commit/d9c81bc22d461036dbacf416cba28d44fe3fd1e1

chore: zpretty

Files changed:
M plone/theme/configure.zcml
M plone/theme/tests/default.pt
M plone/theme/tests/mytheme.pt
M plone/theme/tests/tests.zcml

b'diff --git a/plone/theme/configure.zcml b/plone/theme/configure.zcml\nindex f534397..0254d0f 100644\n--- a/plone/theme/configure.zcml\n+++ b/plone/theme/configure.zcml\n@@ -1,11 +1,12 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n-    xmlns:five="http://namespaces.zope.org/five">\n+    xmlns:five="http://namespaces.zope.org/five"\n+    >\n \n-    <subscriber\n-        for="Products.CMFCore.interfaces.ISiteRoot\n-             zope.traversing.interfaces.IBeforeTraverseEvent"\n-        handler=".layer.mark_layer"\n-        />\n+  <subscriber\n+      for="Products.CMFCore.interfaces.ISiteRoot\n+           zope.traversing.interfaces.IBeforeTraverseEvent"\n+      handler=".layer.mark_layer"\n+      />\n \n </configure>\ndiff --git a/plone/theme/tests/default.pt b/plone/theme/tests/default.pt\nindex 5973a37..19961f8 100644\n--- a/plone/theme/tests/default.pt\n+++ b/plone/theme/tests/default.pt\n@@ -1 +1,3 @@\n-<tal:block define="dummy python:request.response.setHeader(\'Content-Type\', \'text/plain\')" />Default\n\\ No newline at end of file\n+<tal:block define="\n+             dummy python:request.response.setHeader(\'Content-Type\', \'text/plain\');\n+           " />Default\ndiff --git a/plone/theme/tests/mytheme.pt b/plone/theme/tests/mytheme.pt\nindex 0768e3d..bd91ffc 100644\n--- a/plone/theme/tests/mytheme.pt\n+++ b/plone/theme/tests/mytheme.pt\n@@ -1 +1,3 @@\n-<tal:block define="dummy python:request.response.setHeader(\'Content-Type\', \'text/plain\')" />My Theme\n\\ No newline at end of file\n+<tal:block define="\n+             dummy python:request.response.setHeader(\'Content-Type\', \'text/plain\');\n+           " />My Theme\ndiff --git a/plone/theme/tests/tests.zcml b/plone/theme/tests/tests.zcml\nindex 41ea611..923d633 100644\n--- a/plone/theme/tests/tests.zcml\n+++ b/plone/theme/tests/tests.zcml\n@@ -1,26 +1,27 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n-    xmlns:browser="http://namespaces.zope.org/browser">\n+    xmlns:browser="http://namespaces.zope.org/browser"\n+    >\n \n-    <interface\n+  <interface\n       interface=".interfaces.IMyTheme"\n       type="zope.publisher.interfaces.browser.IBrowserSkinType"\n       name="My Theme"\n       />\n \n-    <browser:page\n-        name="layer-test-view"\n-        for="*"\n-        template="default.pt"\n-        permission="zope2.View"\n-        />\n+  <browser:page\n+      name="layer-test-view"\n+      for="*"\n+      template="default.pt"\n+      permission="zope2.View"\n+      />\n \n-    <browser:page\n-        name="layer-test-view"\n-        for="*"\n-        layer=".interfaces.IMyTheme"\n-        template="mytheme.pt"\n-        permission="zope2.View"\n-        />\n+  <browser:page\n+      name="layer-test-view"\n+      for="*"\n+      template="mytheme.pt"\n+      permission="zope2.View"\n+      layer=".interfaces.IMyTheme"\n+      />\n \n </configure>\n'

Repository: plone.theme


Branch: refs/heads/master
Date: 2023-04-25T00:07:00+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.theme/commit/1ae824d77c95b9d98fd12a4e305d918eb9fc14bc

fix: drop pkgutil fallback

Files changed:
M plone/__init__.py

b'diff --git a/plone/__init__.py b/plone/__init__.py\nindex 05f0beb..5284146 100644\n--- a/plone/__init__.py\n+++ b/plone/__init__.py\n@@ -1,7 +1 @@\n-# See http://peak.telecommunity.com/DevCenter/setuptools#namespace-packages\n-try:\n-    __import__("pkg_resources").declare_namespace(__name__)\n-except ImportError:\n-    from pkgutil import extend_path\n-\n-    __path__ = extend_path(__path__, __name__)\n+__import__("pkg_resources").declare_namespace(__name__)\n'

Repository: plone.theme


Branch: refs/heads/master
Date: 2023-04-25T00:08:08+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.theme/commit/0c6c94594eea252eb502f99a1d7a9097f5f9fc48

chore: update trove classifiers

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex dd6661c..5dd7df6 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -29,19 +29,16 @@ def read(*rnames):\n         "Development Status :: 5 - Production/Stable",\n         "Environment :: Web Environment",\n         "Framework :: Plone",\n-        "Framework :: Plone :: 5.0",\n-        "Framework :: Plone :: 5.1",\n-        "Framework :: Plone :: 5.2",\n+        "Framework :: Plone :: 6.0",\n         "Framework :: Plone :: Core",\n-        "Framework :: Zope2",\n-        "Framework :: Zope :: 4",\n+        "Framework :: Zope :: 5",\n         "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",\n         "Operating System :: OS Independent",\n         "Programming Language :: Python",\n-        "Programming Language :: Python :: 2.7",\n-        "Programming Language :: Python :: 3.6",\n-        "Programming Language :: Python :: 3.7",\n         "Programming Language :: Python :: 3.8",\n+        "Programming Language :: Python :: 3.9",\n+        "Programming Language :: Python :: 3.10",\n+        "Programming Language :: Python :: 3.11",\n     ],\n     keywords="plone theme manage",\n     author="Plone Foundation",\n'

Repository: plone.theme


Branch: refs/heads/master
Date: 2023-04-25T00:08:15+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.theme/commit/13dba1cf3934ea1e2bb5e61e65793de99d218e67

feat: pyroma

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex 5dd7df6..88828a6 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -49,6 +49,7 @@ def read(*rnames):\n     namespace_packages=["plone"],\n     include_package_data=True,\n     zip_safe=False,\n+    python_requires=">=3.8",\n     extras_require=dict(\n         test=[\n             "plone.app.testing",\n'

Repository: plone.theme


Branch: refs/heads/master
Date: 2023-04-25T00:11:04+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.theme/commit/5ae24a78c4bdc639a7f98a71ad0687eadd7c4c7a

feat: declare dependencies

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex 88828a6..5c53341 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -53,15 +53,12 @@ def read(*rnames):\n     extras_require=dict(\n         test=[\n             "plone.app.testing",\n+            "plone.testing",\n         ]\n     ),\n     install_requires=[\n         "setuptools",\n-        "zope.component",\n-        "zope.interface",\n-        "zope.publisher",\n-        "zope.traversing",\n         "Products.CMFCore",\n-        "Zope2",\n+        "Zope",\n     ],\n )\n'

Repository: plone.theme


Branch: refs/heads/master
Date: 2023-04-25T00:17:42+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.theme/commit/9366da336e0e03262aa7a2c0823d48193bc71eca

fix: adjust tests

Files changed:
M plone/theme/README.rst

b"diff --git a/plone/theme/README.rst b/plone/theme/README.rst\nindex 8d67edb..1abe23e 100644\n--- a/plone/theme/README.rst\n+++ b/plone/theme/README.rst\n@@ -68,6 +68,7 @@ Before we turn on the skin, we will get the default view.\n     >>> from __future__ import print_function\n     >>> print(browser.contents)\n     Default\n+    ...\n \n However, if we turn the skin on, we should see the effects of the marker\n interface being applied.\n@@ -79,6 +80,7 @@ interface being applied.\n     >>> browser.open(layer['portal'].absolute_url() + '/@@layer-test-view')\n     >>> print(browser.contents)\n     My Theme\n+    ...\n \n And if we switch back:\n \n@@ -88,3 +90,4 @@ And if we switch back:\n     >>> browser.open(layer['portal'].absolute_url() + '/@@layer-test-view')\n     >>> print(browser.contents)\n     Default\n+    ...\n"

Repository: plone.theme


Branch: refs/heads/master
Date: 2023-04-25T00:18:09+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.theme/commit/753d2a4ff12f0e2e53d24c73477f48796e8819b6

chore: bump version

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex 5c53341..905f6cc 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -8,7 +8,7 @@ def read(*rnames):\n     return open(os.path.join(os.path.dirname(__file__), *rnames)).read()\n \n \n-version = "3.0.8.dev0"\n+version = "4.0.0.dev0"\n \n long_description = (\n     read("README.rst")\n'

Repository: plone.theme


Branch: refs/heads/master
Date: 2023-04-25T16:18:21+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.theme/commit/0abd902c27c79847c6844112f90a1062d03d7c2e

Merge pull request #9 from plone/config-with-default-template-dfa2de6e

Config with default template

Files changed:
A .editorconfig
A .meta.toml
A .pre-commit-config.yaml
A news/2a4ba395.internal
A tox.ini
M plone/__init__.py
M plone/theme/README.rst
M plone/theme/configure.zcml
M plone/theme/interfaces.py
M plone/theme/layer.py
M plone/theme/testing.py
M plone/theme/tests/__init__.py
M plone/theme/tests/default.pt
M plone/theme/tests/interfaces.py
M plone/theme/tests/mytheme.pt
M plone/theme/tests/testBrowserLayerPrecedence.py
M plone/theme/tests/test_doctest.py
M plone/theme/tests/tests.zcml
M pyproject.toml
M setup.cfg
M setup.py

b'diff --git a/.editorconfig b/.editorconfig\nnew file mode 100644\nindex 0000000..b4158b8\n--- /dev/null\n+++ b/.editorconfig\n@@ -0,0 +1,39 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+#\n+# EditorConfig Configuration file, for more details see:\n+# http://EditorConfig.org\n+# EditorConfig is a convention description, that could be interpreted\n+# by multiple editors to enforce common coding conventions for specific\n+# file types\n+\n+# top-most EditorConfig file:\n+# Will ignore other EditorConfig files in Home directory or upper tree level.\n+root = true\n+\n+\n+[*]  # For All Files\n+# Unix-style newlines with a newline ending every file\n+end_of_line = lf\n+insert_final_newline = true\n+trim_trailing_whitespace = true\n+# Set default charset\n+charset = utf-8\n+# Indent style default\n+indent_style = space\n+# Max Line Length - a hard line wrap, should be disabled\n+max_line_length = off\n+\n+[*.{py,cfg,ini}]\n+# 4 space indentation\n+indent_size = 4\n+\n+[*.{yml,zpt,pt,dtml,zcml}]\n+# 2 space indentation\n+indent_size = 2\n+\n+[{Makefile,.gitmodules}]\n+# Tab indentation (no size specified, but view as 4 spaces)\n+indent_style = tab\n+indent_size = unset\n+tab_width = unset\ndiff --git a/.meta.toml b/.meta.toml\nnew file mode 100644\nindex 0000000..99342b2\n--- /dev/null\n+++ b/.meta.toml\n@@ -0,0 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[meta]\n+template = "default"\n+commit-id = "2a4ba395"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nnew file mode 100644\nindex 0000000..fdafec1\n--- /dev/null\n+++ b/.pre-commit-config.yaml\n@@ -0,0 +1,42 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+ci:\n+    autofix_prs: false\n+    autoupdate_schedule: monthly\n+\n+repos:\n+-   repo: https://github.com/asottile/pyupgrade\n+    rev: v3.3.1\n+    hooks:\n+    -   id: pyupgrade\n+        args: [--py38-plus]\n+-   repo: https://github.com/pycqa/isort\n+    rev: 5.12.0\n+    hooks:\n+    -   id: isort\n+-   repo: https://github.com/psf/black\n+    rev: 23.3.0\n+    hooks:\n+    -   id: black\n+-   repo: https://github.com/collective/zpretty\n+    rev: 3.0.3\n+    hooks:\n+    -   id: zpretty\n+-   repo: https://github.com/PyCQA/flake8\n+    rev: 6.0.0\n+    hooks:\n+    -   id: flake8\n+-   repo: https://github.com/codespell-project/codespell\n+    rev: v2.2.4\n+    hooks:\n+    -   id: codespell\n+        additional_dependencies:\n+          - tomli\n+-   repo: https://github.com/mgedmin/check-manifest\n+    rev: "0.49"\n+    hooks:\n+    -   id: check-manifest\n+-   repo: https://github.com/regebro/pyroma\n+    rev: "4.2"\n+    hooks:\n+    -   id: pyroma\ndiff --git a/news/2a4ba395.internal b/news/2a4ba395.internal\nnew file mode 100644\nindex 0000000..c08f539\n--- /dev/null\n+++ b/news/2a4ba395.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/plone/__init__.py b/plone/__init__.py\nindex f48ad10..5284146 100644\n--- a/plone/__init__.py\n+++ b/plone/__init__.py\n@@ -1,6 +1 @@\n-# See http://peak.telecommunity.com/DevCenter/setuptools#namespace-packages\n-try:\n-    __import__(\'pkg_resources\').declare_namespace(__name__)\n-except ImportError:\n-    from pkgutil import extend_path\n-    __path__ = extend_path(__path__, __name__)\n+__import__("pkg_resources").declare_namespace(__name__)\ndiff --git a/plone/theme/README.rst b/plone/theme/README.rst\nindex 8d67edb..1abe23e 100644\n--- a/plone/theme/README.rst\n+++ b/plone/theme/README.rst\n@@ -68,6 +68,7 @@ Before we turn on the skin, we will get the default view.\n     >>> from __future__ import print_function\n     >>> print(browser.contents)\n     Default\n+    ...\n \n However, if we turn the skin on, we should see the effects of the marker\n interface being applied.\n@@ -79,6 +80,7 @@ interface being applied.\n     >>> browser.open(layer[\'portal\'].absolute_url() + \'/@@layer-test-view\')\n     >>> print(browser.contents)\n     My Theme\n+    ...\n \n And if we switch back:\n \n@@ -88,3 +90,4 @@ And if we switch back:\n     >>> browser.open(layer[\'portal\'].absolute_url() + \'/@@layer-test-view\')\n     >>> print(browser.contents)\n     Default\n+    ...\ndiff --git a/plone/theme/configure.zcml b/plone/theme/configure.zcml\nindex f534397..0254d0f 100644\n--- a/plone/theme/configure.zcml\n+++ b/plone/theme/configure.zcml\n@@ -1,11 +1,12 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n-    xmlns:five="http://namespaces.zope.org/five">\n+    xmlns:five="http://namespaces.zope.org/five"\n+    >\n \n-    <subscriber\n-        for="Products.CMFCore.interfaces.ISiteRoot\n-             zope.traversing.interfaces.IBeforeTraverseEvent"\n-        handler=".layer.mark_layer"\n-        />\n+  <subscriber\n+      for="Products.CMFCore.interfaces.ISiteRoot\n+           zope.traversing.interfaces.IBeforeTraverseEvent"\n+      handler=".layer.mark_layer"\n+      />\n \n </configure>\ndiff --git a/plone/theme/interfaces.py b/plone/theme/interfaces.py\nindex 359f8ee..dc06a69 100644\n--- a/plone/theme/interfaces.py\n+++ b/plone/theme/interfaces.py\n@@ -2,5 +2,4 @@\n \n \n class IDefaultPloneLayer(IDefaultBrowserLayer):\n-    """A Zope 3 browser layer corresponding to Plone defaults\n-    """\n+    """A Zope 3 browser layer corresponding to Plone defaults"""\ndiff --git a/plone/theme/layer.py b/plone/theme/layer.py\nindex 70c2195..20c4ecb 100644\n--- a/plone/theme/layer.py\n+++ b/plone/theme/layer.py\n@@ -1,26 +1,27 @@\n-# -*- coding: utf-8 -*-\n from plone.theme.interfaces import IDefaultPloneLayer\n from Products.CMFCore.utils import getToolByName\n from zope.component import queryUtility\n-from zope.interface import directlyProvides, directlyProvidedBy\n+from zope.interface import directlyProvidedBy\n+from zope.interface import directlyProvides\n from zope.publisher.interfaces.browser import IBrowserSkinType\n from zope.publisher.interfaces.browser import IDefaultBrowserLayer\n \n+\n default_layers = [\n     IDefaultPloneLayer,\n     IDefaultBrowserLayer,\n-    ]\n+]\n \n \n def mark_layer(site, event):\n     """Mark the request with a layer corresponding to the current skin,\n     as set in the portal_skins tool.\n     """\n-    if getattr(event.request, \'_plonetheme_\', False):\n+    if getattr(event.request, "_plonetheme_", False):\n         return\n     event.request._plonetheme_ = True\n \n-    portal_skins = getToolByName(site, \'portal_skins\', None)\n+    portal_skins = getToolByName(site, "portal_skins", None)\n     if portal_skins is not None:\n         skin_name = site.getCurrentSkinName()\n         if skin_name is None:\n@@ -40,5 +41,11 @@ def mark_layer(site, event):\n                     continue\n                 else:\n                     layer_ifaces.append(layer)\n-            ifaces = [skin, ] + layer_ifaces + default_ifaces\n+            ifaces = (\n+                [\n+                    skin,\n+                ]\n+                + layer_ifaces\n+                + default_ifaces\n+            )\n             directlyProvides(event.request, *ifaces)\ndiff --git a/plone/theme/testing.py b/plone/theme/testing.py\nindex 5da83ca..b804385 100644\n--- a/plone/theme/testing.py\n+++ b/plone/theme/testing.py\n@@ -1,22 +1,21 @@\n-# -*- coding: utf-8 -*-\n-\n from plone.app.testing import PloneSandboxLayer\n from plone.app.testing.layers import FunctionalTesting\n from plone.app.testing.layers import IntegrationTesting\n \n \n class PloneThemeLayer(PloneSandboxLayer):\n-\n     def setUpZope(self, app, configurationContext):\n         import plone.theme.tests\n-        self.loadZCML(\'tests.zcml\', package=plone.theme.tests)\n+\n+        self.loadZCML("tests.zcml", package=plone.theme.tests)\n+\n \n PLONETHEME_FIXTURE = PloneThemeLayer()\n \n PLONETHEME_FUNCTIONAL_TESTING = FunctionalTesting(\n-    bases=(PLONETHEME_FIXTURE,),\n-    name="PloneTheme:Functional")\n+    bases=(PLONETHEME_FIXTURE,), name="PloneTheme:Functional"\n+)\n \n PLONETHEME_INTEGRATION_TESTING = IntegrationTesting(\n-    bases=(PLONETHEME_FIXTURE,),\n-    name="PloneTheme:Integration")\n+    bases=(PLONETHEME_FIXTURE,), name="PloneTheme:Integration"\n+)\ndiff --git a/plone/theme/tests/__init__.py b/plone/theme/tests/__init__.py\nindex 4287ca8..792d600 100644\n--- a/plone/theme/tests/__init__.py\n+++ b/plone/theme/tests/__init__.py\n@@ -1 +1 @@\n-#\n\\ No newline at end of file\n+#\ndiff --git a/plone/theme/tests/default.pt b/plone/theme/tests/default.pt\nindex 5973a37..19961f8 100644\n--- a/plone/theme/tests/default.pt\n+++ b/plone/theme/tests/default.pt\n@@ -1 +1,3 @@\n-<tal:block define="dummy python:request.response.setHeader(\'Content-Type\', \'text/plain\')" />Default\n\\ No newline at end of file\n+<tal:block define="\n+             dummy python:request.response.setHeader(\'Content-Type\', \'text/plain\');\n+           " />Default\ndiff --git a/plone/theme/tests/interfaces.py b/plone/theme/tests/interfaces.py\nindex 74abe3b..315b745 100644\n--- a/plone/theme/tests/interfaces.py\n+++ b/plone/theme/tests/interfaces.py\n@@ -6,5 +6,4 @@\n \n \n class IMyTheme(IDefaultPloneLayer):\n-    """Marker interface used in the tests\n-    """\n+    """Marker interface used in the tests"""\ndiff --git a/plone/theme/tests/mytheme.pt b/plone/theme/tests/mytheme.pt\nindex 0768e3d..bd91ffc 100644\n--- a/plone/theme/tests/mytheme.pt\n+++ b/plone/theme/tests/mytheme.pt\n@@ -1 +1,3 @@\n-<tal:block define="dummy python:request.response.setHeader(\'Content-Type\', \'text/plain\')" />My Theme\n\\ No newline at end of file\n+<tal:block define="\n+             dummy python:request.response.setHeader(\'Content-Type\', \'text/plain\');\n+           " />My Theme\ndiff --git a/plone/theme/tests/testBrowserLayerPrecedence.py b/plone/theme/tests/testBrowserLayerPrecedence.py\nindex 327d502..2c50a56 100644\n--- a/plone/theme/tests/testBrowserLayerPrecedence.py\n+++ b/plone/theme/tests/testBrowserLayerPrecedence.py\n@@ -3,13 +3,14 @@\n \n from plone.theme.interfaces import IDefaultPloneLayer\n from plone.theme.testing import PLONETHEME_INTEGRATION_TESTING\n-\n-from zope.event import notify\n-from zope.interface import Interface, directlyProvides, directlyProvidedBy\n from zope.component import getGlobalSiteManager\n+from zope.event import notify\n+from zope.interface import directlyProvidedBy\n+from zope.interface import directlyProvides\n+from zope.interface import Interface\n+from zope.publisher.browser import setDefaultSkin\n from zope.publisher.interfaces.browser import IBrowserSkinType\n from zope.publisher.interfaces.browser import IDefaultBrowserLayer\n-from zope.publisher.browser import setDefaultSkin\n from zope.traversing.interfaces import BeforeTraverseEvent\n \n import unittest\n@@ -28,25 +29,23 @@ class IAdditiveLayerExtendingDefault(IDefaultPloneLayer):\n \n \n class LayerPrecedenceTestCase(unittest.TestCase):\n-\n     layer = PLONETHEME_INTEGRATION_TESTING\n \n     additive_layer = None\n     theme_layer = None\n \n     def setUp(self):\n-        self.portal = self.layer[\'portal\']\n+        self.portal = self.layer["portal"]\n         gsm = getGlobalSiteManager()\n         if self.theme_layer is not None:\n             self._skin_name = self.portal.portal_skins.getDefaultSkin()\n-            self._old_theme_layer = gsm.queryUtility(IBrowserSkinType,\n-                                                     name=self._skin_name)\n-            gsm.registerUtility(self.theme_layer,\n-                                IBrowserSkinType,\n-                                self._skin_name)\n+            self._old_theme_layer = gsm.queryUtility(\n+                IBrowserSkinType, name=self._skin_name\n+            )\n+            gsm.registerUtility(self.theme_layer, IBrowserSkinType, self._skin_name)\n \n     def _get_request_interfaces(self):\n-        request = self.layer[\'request\']\n+        request = self.layer["request"]\n         setDefaultSkin(request)\n         orig_iro = list(directlyProvidedBy(request).__iro__)\n         directlyProvides(request, [self.additive_layer] + orig_iro)\n@@ -78,13 +77,12 @@ def testLayerPrecedence(self):\n     def beforeTearDown(self):\n         gsm = getGlobalSiteManager()\n         if self.theme_layer is not None:\n-            res = gsm.unregisterUtility(provided=IBrowserSkinType,\n-                                        name=self._skin_name)\n+            res = gsm.unregisterUtility(provided=IBrowserSkinType, name=self._skin_name)\n             self.assertTrue(res)\n             if self._old_theme_layer is not None:\n-                gsm.registerUtility(self._old_theme_layer,\n-                                    IBrowserSkinType,\n-                                    self._skin_name)\n+                gsm.registerUtility(\n+                    self._old_theme_layer, IBrowserSkinType, self._skin_name\n+                )\n \n \n class TestPrecedenceWithAdditiveLayerExtendingInterface(LayerPrecedenceTestCase):\n@@ -103,7 +101,9 @@ class TestPrecedenceWithNoThemeLayer(LayerPrecedenceTestCase):\n \n \n def test_suite():\n-    from unittest import TestSuite, makeSuite\n+    from unittest import makeSuite\n+    from unittest import TestSuite\n+\n     suite = TestSuite()\n     suite.addTest(makeSuite(TestPrecedenceWithAdditiveLayerExtendingInterface))\n     suite.addTest(makeSuite(TestPrecedenceWithAdditiveLayerExtendingDefault))\ndiff --git a/plone/theme/tests/test_doctest.py b/plone/theme/tests/test_doctest.py\nindex a3c6411..4ea28aa 100644\n--- a/plone/theme/tests/test_doctest.py\n+++ b/plone/theme/tests/test_doctest.py\n@@ -1,14 +1,20 @@\n-import unittest\n-import doctest\n-\n+from plone.testing import layered\n from plone.theme.testing import PLONETHEME_FUNCTIONAL_TESTING\n \n-from plone.testing import layered\n+import doctest\n+import unittest\n \n \n def test_suite():\n     return unittest.TestSuite(\n-        [layered(doctest.DocFileSuite(\'README.rst\', package=\'plone.theme\',\n-         optionflags=doctest.ELLIPSIS | doctest.REPORT_ONLY_FIRST_FAILURE),\n-         layer=PLONETHEME_FUNCTIONAL_TESTING)]\n+        [\n+            layered(\n+                doctest.DocFileSuite(\n+                    "README.rst",\n+                    package="plone.theme",\n+                    optionflags=doctest.ELLIPSIS | doctest.REPORT_ONLY_FIRST_FAILURE,\n+                ),\n+                layer=PLONETHEME_FUNCTIONAL_TESTING,\n+            )\n+        ]\n     )\ndiff --git a/plone/theme/tests/tests.zcml b/plone/theme/tests/tests.zcml\nindex 41ea611..923d633 100644\n--- a/plone/theme/tests/tests.zcml\n+++ b/plone/theme/tests/tests.zcml\n@@ -1,26 +1,27 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n-    xmlns:browser="http://namespaces.zope.org/browser">\n+    xmlns:browser="http://namespaces.zope.org/browser"\n+    >\n \n-    <interface\n+  <interface\n       interface=".interfaces.IMyTheme"\n       type="zope.publisher.interfaces.browser.IBrowserSkinType"\n       name="My Theme"\n       />\n \n-    <browser:page\n-        name="layer-test-view"\n-        for="*"\n-        template="default.pt"\n-        permission="zope2.View"\n-        />\n+  <browser:page\n+      name="layer-test-view"\n+      for="*"\n+      template="default.pt"\n+      permission="zope2.View"\n+      />\n \n-    <browser:page\n-        name="layer-test-view"\n-        for="*"\n-        layer=".interfaces.IMyTheme"\n-        template="mytheme.pt"\n-        permission="zope2.View"\n-        />\n+  <browser:page\n+      name="layer-test-view"\n+      for="*"\n+      template="mytheme.pt"\n+      permission="zope2.View"\n+      layer=".interfaces.IMyTheme"\n+      />\n \n </configure>\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 05b615d..639f77a 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,3 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [tool.towncrier]\n filename = "CHANGES.rst"\n directory = "news/"\n@@ -18,3 +20,65 @@ showcontent = true\n directory = "bugfix"\n name = "Bug fixes:"\n showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "internal"\n+name = "Internal:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "documentation"\n+name = "Documentation:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "tests"\n+name = "Tests"\n+showcontent = true\n+\n+[tool.isort]\n+profile = "plone"\n+\n+[tool.black]\n+target-version = ["py38"]\n+\n+\n+[tool.dependencychecker]\n+Zope = [\n+  # Zope own provided namespaces\n+  \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n+  \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n+  \'Zope2\', \'webdav\', \'zmi\',\n+  # ExtensionClass own provided namespaces\n+  \'ExtensionClass\', \'ComputedAttribute\', \'MethodObject\',\n+  # Zope dependencies\n+  \'AccessControl\', \'Acquisition\', \'AuthEncoding\', \'beautifulsoup4\', \'BTrees\',\n+  \'cffi\', \'Chameleon\', \'DateTime\', \'DocumentTemplate\',\n+  \'MultiMapping\', \'multipart\', \'PasteDeploy\', \'Persistence\', \'persistent\',\n+  \'pycparser\', \'python-gettext\', \'pytz\', \'RestrictedPython\', \'roman\',\n+  \'soupsieve\', \'transaction\', \'waitress\', \'WebOb\', \'WebTest\', \'WSGIProxy2\',\n+  \'z3c.pt\', \'zc.lockfile\', \'ZConfig\', \'zExceptions\', \'ZODB\', \'zodbpickle\',\n+  \'zope.annotation\', \'zope.browser\', \'zope.browsermenu\', \'zope.browserpage\',\n+  \'zope.browserresource\', \'zope.cachedescriptors\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.contentprovider\',\n+  \'zope.contenttype\', \'zope.datetime\', \'zope.deferredimport\',\n+  \'zope.deprecation\', \'zope.dottedname\', \'zope.event\', \'zope.exceptions\',\n+  \'zope.filerepresentation\', \'zope.globalrequest\', \'zope.hookable\',\n+  \'zope.i18n\', \'zope.i18nmessageid\', \'zope.interface\', \'zope.lifecycleevent\',\n+  \'zope.location\', \'zope.pagetemplate\', \'zope.processlifetime\', \'zope.proxy\',\n+  \'zope.ptresource\', \'zope.publisher\', \'zope.schema\', \'zope.security\',\n+  \'zope.sequencesort\', \'zope.site\', \'zope.size\', \'zope.structuredtext\',\n+  \'zope.tal\', \'zope.tales\', \'zope.testbrowser\', \'zope.testing\',\n+  \'zope.traversing\', \'zope.viewlet\'\n+]\n+\'Products.CMFCore\' = [\n+  \'docutils\', \'five.localsitemanager\', \'Missing\', \'Products.BTreeFolder2\',\n+  \'Products.GenericSetup\', \'Products.MailHost\', \'Products.PythonScripts\',\n+  \'Products.StandardCacheManagers\', \'Products.ZCatalog\', \'Record\',\n+  \'zope.sendmail\', \'Zope\'\n+]\n+\'plone.base\' = [\n+  \'plone.batching\', \'plone.registry\', \'plone.schema\',\'plone.z3cform\',\n+  \'Products.CMFCore\', \'Products.CMFDynamicViewFTI\',\n+]\n+python-dateutil = [\'dateutil\']\ndiff --git a/setup.cfg b/setup.cfg\nindex 2a9acf1..0da8f8f 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -1,2 +1,23 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [bdist_wheel]\n-universal = 1\n+universal = 0\n+\n+[flake8]\n+doctests = 1\n+ignore =\n+    # black takes care of line length\n+    E501,\n+    # black takes care of where to break lines\n+    W503,\n+    # black takes care of spaces within slicing (list[:])\n+    E203,\n+    # black takes care of spaces after commas\n+    E231,\n+\n+[check-manifest]\n+ignore =\n+    .editorconfig\n+    .meta.toml\n+    .pre-commit-config.yaml\n+    tox.ini\ndiff --git a/setup.py b/setup.py\nindex 576089b..905f6cc 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,65 +1,64 @@\n+from setuptools import find_packages\n+from setuptools import setup\n+\n import os\n-from setuptools import setup, find_packages\n \n \n def read(*rnames):\n     return open(os.path.join(os.path.dirname(__file__), *rnames)).read()\n \n-version = \'3.0.8.dev0\'\n+\n+version = "4.0.0.dev0"\n \n long_description = (\n-    read(\'README.rst\')\n-    + \'\\n\' +\n-    read(\'plone\', \'theme\', \'README.rst\')\n-    + \'\\n\' +\n-    read(\'CHANGES.rst\')\n-    + \'\\n\'\n-    )\n+    read("README.rst")\n+    + "\\n"\n+    + read("plone", "theme", "README.rst")\n+    + "\\n"\n+    + read("CHANGES.rst")\n+    + "\\n"\n+)\n \n \n-setup(name=\'plone.theme\',\n-      version=version,\n-      description="Tools for managing themes in CMF and Plone sites",\n-      long_description=long_description,\n-      classifiers=[\n-          "Development Status :: 5 - Production/Stable",\n-          "Environment :: Web Environment",\n-          "Framework :: Plone",\n-          "Framework :: Plone :: 5.0",\n-          "Framework :: Plone :: 5.1",\n-          "Framework :: Plone :: 5.2",\n-          "Framework :: Plone :: Core",\n-          "Framework :: Zope2",\n-          "Framework :: Zope :: 4",\n-          "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",\n-          "Operating System :: OS Independent",\n-          "Programming Language :: Python",\n-          "Programming Language :: Python :: 2.7",\n-          "Programming Language :: Python :: 3.6",\n-          "Programming Language :: Python :: 3.7",\n-          "Programming Language :: Python :: 3.8",\n-      ],\n-      keywords=\'plone theme manage\',\n-      author=\'Plone Foundation\',\n-      author_email=\'plone-developers@lists.sourceforge.net\',\n-      url=\'https://pypi.org/project/plone.theme\',\n-      license=\'GPL version 2\',\n-      packages=find_packages(),\n-      namespace_packages=[\'plone\'],\n-      include_package_data=True,\n-      zip_safe=False,\n-      extras_require=dict(\n-          test=[\n-              \'plone.app.testing\',\n-          ]\n-      ),\n-      install_requires=[\n-          \'setuptools\',\n-          \'zope.component\',\n-          \'zope.interface\',\n-          \'zope.publisher\',\n-          \'zope.traversing\',\n-          \'Products.CMFCore\',\n-          \'Zope2\',\n-      ],\n-      )\n+setup(\n+    name="plone.theme",\n+    version=version,\n+    description="Tools for managing themes in CMF and Plone sites",\n+    long_description=long_description,\n+    classifiers=[\n+        "Development Status :: 5 - Production/Stable",\n+        "Environment :: Web Environment",\n+        "Framework :: Plone",\n+        "Framework :: Plone :: 6.0",\n+        "Framework :: Plone :: Core",\n+        "Framework :: Zope :: 5",\n+        "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",\n+        "Operating System :: OS Independent",\n+        "Programming Language :: Python",\n+        "Programming Language :: Python :: 3.8",\n+        "Programming Language :: Python :: 3.9",\n+        "Programming Language :: Python :: 3.10",\n+        "Programming Language :: Python :: 3.11",\n+    ],\n+    keywords="plone theme manage",\n+    author="Plone Foundation",\n+    author_email="plone-developers@lists.sourceforge.net",\n+    url="https://pypi.org/project/plone.theme",\n+    license="GPL version 2",\n+    packages=find_packages(),\n+    namespace_packages=["plone"],\n+    include_package_data=True,\n+    zip_safe=False,\n+    python_requires=">=3.8",\n+    extras_require=dict(\n+        test=[\n+            "plone.app.testing",\n+            "plone.testing",\n+        ]\n+    ),\n+    install_requires=[\n+        "setuptools",\n+        "Products.CMFCore",\n+        "Zope",\n+    ],\n+)\ndiff --git a/tox.ini b/tox.ini\nnew file mode 100644\nindex 0000000..0c00406\n--- /dev/null\n+++ b/tox.ini\n@@ -0,0 +1,76 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[tox]\n+# We need 4.4.0 for constrain_package_deps.\n+min_version = 4.4.0\n+envlist =\n+    format\n+    lint\n+    test\n+\n+[testenv]\n+allowlist_externals =\n+    sh\n+\n+[testenv:format]\n+description = automatically reformat code\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a pyupgrade\n+    pre-commit run -a isort\n+    pre-commit run -a black\n+    pre-commit run -a zpretty\n+\n+[testenv:lint]\n+description = run linters that will help improve the code style\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a\n+\n+[testenv:dependencies]\n+description = check if the package defines all its dependencies\n+skip_install = true\n+deps =\n+    build\n+    z3c.dependencychecker==2.11\n+commands =\n+    python -m build --sdist --no-isolation\n+    dependencychecker\n+\n+[testenv:dependencies-graph]\n+description = generate a graph out of the package\'s dependencies\n+deps =\n+    pipdeptree==2.5.1\n+    graphviz  # optional dependency of pipdeptree\n+commands =\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+\n+[testenv:test]\n+use_develop = true\n+constrain_package_deps = true\n+set_env = ROBOT_BROWSER=headlesschrome\n+deps =\n+    zope.testrunner\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    zope-testrunner --all --test-path={toxinidir} -s plone.theme {posargs}\n+extras =\n+    test\n+\n+[testenv:coverage]\n+use_develop = true\n+constrain_package_deps = true\n+set_env = ROBOT_BROWSER=headlesschrome\n+deps =\n+    coverage\n+    zope.testrunner\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    coverage run {envbindir}/zope-testrunner --all --test-path={toxinidir} -s plone.theme {posargs}\n+    coverage report -m --format markdown\n+extras =\n+    test\n'

