Repository: mockup


Branch: refs/heads/master
Date: 2019-09-16T01:50:43+02:00
Author: mauro (mamico) <mauro.amico@unibo.it>
Commit: https://github.com/plone/mockup/commit/dde092b7174de21ac80c94417dd8847f23a06346

Tinymce pattern: Link popup looses tab selection on active link type refs #921

Files changed:
M mockup/patterns/autotoc/pattern.js
M mockup/patterns/tinymce/js/links.js
M mockup/tests/pattern-autotoc-test.js
M mockup/tests/pattern-tinymce-test.js

b'diff --git a/mockup/patterns/autotoc/pattern.js b/mockup/patterns/autotoc/pattern.js\nindex a80fdf29d..4c30ca376 100644\n--- a/mockup/patterns/autotoc/pattern.js\n+++ b/mockup/patterns/autotoc/pattern.js\n@@ -122,6 +122,9 @@ define([\n         if(window.location.hash === \'#\' + id){\n           activeId = id;\n         }\n+        if(activeId===null && $level.hasClass(self.options.classActiveName)){\n+          activeId = id;\n+        }\n         $level.data(\'navref\', id);\n         $(\'<a/>\')\n           .appendTo(self.$toc)\n@@ -161,6 +164,7 @@ define([\n               }\n             }\n           });\n+        $level.data(\'autotoc-trigger-id\', id);\n       });\n \n       if(activeId){\ndiff --git a/mockup/patterns/tinymce/js/links.js b/mockup/patterns/tinymce/js/links.js\nindex 17a7985ff..38c893b08 100644\n--- a/mockup/patterns/tinymce/js/links.js\n+++ b/mockup/patterns/tinymce/js/links.js\n@@ -790,7 +790,11 @@ define([\n         if (linkType) {\n           self.linkType = linkType;\n           self.linkTypes[self.linkType].load(self.anchorElm);\n-          $(\'#tinylink-\' + self.linkType, self.modal.$modal).trigger(\'click\');\n+          var $panel = $(\'#tinylink-\' + self.linkType, self.modal.$modal);\n+          // $(\'#tinylink-\' + self.linkType, self.modal.$modal).trigger(\'click\');\n+          if ($panel.length === 1) {\n+            $(\'#\'+$panel.data(\'autotoc-trigger-id\')).trigger(\'click\');\n+          }\n         }else if (href) {\n           self.guessAnchorLink(href);\n         }\ndiff --git a/mockup/tests/pattern-autotoc-test.js b/mockup/tests/pattern-autotoc-test.js\nindex 3d6bdcf30..3c099c370 100644\n--- a/mockup/tests/pattern-autotoc-test.js\n+++ b/mockup/tests/pattern-autotoc-test.js\n@@ -85,6 +85,17 @@ define([\n       expect($(\'div.placeholder\', this.$el).children().eq(0).attr(\'class\')).to.equal(\'autotoc-nav\');\n       expect($(\'div.placeholder\', this.$el).children().eq(1).attr(\'id\')).to.equal(\'first-elem\');\n     });\n+    it(\'by default the first element is the active one\', function() {\n+      Registry.scan(this.$el);\n+      expect($(\'> nav > a.active\', this.$el).text()).to.equal(\'Title 1\');\n+    });\n+    it(\'the first element with `classActiveName` will be the active\', function() {\n+      $(\'h1:eq(1)\', this.$el).addClass(\'active\');\n+      // the second element with `classActiveName` will be ignored as active\n+      $(\'h1:eq(2)\', this.$el).addClass(\'active\');\n+      Registry.scan(this.$el);\n+      expect($(\'> nav > a.active\', this.$el).text()).to.equal(\'Title 2\');\n+    });\n     it(\'custom className\', function() {\n       this.$el.attr(\'data-pat-autotoc\', \'className:SOMETHING\');\n       Registry.scan(this.$el);\ndiff --git a/mockup/tests/pattern-tinymce-test.js b/mockup/tests/pattern-tinymce-test.js\nindex 7a7ebc43d..86bcde764 100644\n--- a/mockup/tests/pattern-tinymce-test.js\n+++ b/mockup/tests/pattern-tinymce-test.js\n@@ -11,6 +11,10 @@ define([\n   window.mocha.setup(\'bdd\');\n   $.fx.off = true;\n \n+  function sleep(ms) {\n+    return new Promise(resolve => setTimeout(resolve, ms));\n+  }\n+\n   var createTinymce = function(options) {\n     return registry.patterns.tinymce.init(\n       $(\'<textarea class="pat-tinymce"></textarea>\').appendTo(\'body\'),\n@@ -398,6 +402,10 @@ define([\n       pattern.addLinkClicked();\n \n       expect(pattern.linkModal.linkTypes.external.getEl().val()).to.equal(\'foobar\');\n+      sleep(100).then(() => {\n+        expect($(\'fieldset.active\', pattern.linkModal.modal.$wrapper).size()).to.equal(1);\n+        expect($(\'fieldset.active\', pattern.linkModal.modal.$wrapper).data(\'linktype\')).to.equal(\'external\');\n+      });\n     });\n \n     it(\'test loads existing link email values\', function() {\n@@ -409,6 +417,10 @@ define([\n       pattern.addLinkClicked();\n \n       expect(pattern.linkModal.linkTypes.email.getEl().val()).to.equal(\'foo@bar.com\');\n+      sleep(100).then(() => {\n+        expect($(\'fieldset.active\', pattern.linkModal.modal.$wrapper).size()).to.equal(1);\n+        expect($(\'fieldset.active\', pattern.linkModal.modal.$wrapper).data(\'linktype\')).to.equal(\'email\');\n+      });\n     });\n \n     it(\'test anchor link adds existing anchors to list\', function() {\n@@ -419,6 +431,10 @@ define([\n       pattern.addLinkClicked();\n \n       expect(pattern.linkModal.linkTypes.anchor.anchorNodes.length).to.equal(1);\n+      sleep(100).then(() => {\n+        expect($(\'fieldset.active\', pattern.linkModal.modal.$wrapper).size()).to.equal(1);\n+        expect($(\'fieldset.active\', pattern.linkModal.modal.$wrapper).data(\'linktype\')).to.equal(\'anchor\');\n+      });\n     });\n \n     it(\'test anchor link adds anchors from option\', function() {\n@@ -471,6 +487,10 @@ define([\n       pattern.addLinkClicked();\n \n       expect(pattern.linkModal.linkTypes.external.getEl().val()).to.equal(\'foobar\');\n+      sleep(100).then(() => {\n+        expect($(\'fieldset.active\', pattern.linkModal.modal.$wrapper).size()).to.equal(1);\n+        expect($(\'fieldset.active\', pattern.linkModal.modal.$wrapper).data(\'linktype\')).to.equal(\'external\');\n+      });\n     });\n \n     it(\'test guess anchor when no data- attribute present\', function() {\n@@ -482,6 +502,10 @@ define([\n       pattern.addLinkClicked();\n \n       expect(pattern.linkModal.linkTypes.anchor.toUrl()).to.equal(\'#foobar\');\n+      sleep(100).then(() => {\n+        expect($(\'fieldset.active\', pattern.linkModal.modal.$wrapper).size()).to.equal(1);\n+        expect($(\'fieldset.active\', pattern.linkModal.modal.$wrapper).data(\'linktype\')).to.equal(\'anchor\');\n+      });\n     });\n \n     it(\'test inline tinyMCE roundtrip\', function() {\n'

Repository: mockup


Branch: refs/heads/master
Date: 2019-09-16T09:28:27+02:00
Author: mauro (mamico) <mauro.amico@unibo.it>
Commit: https://github.com/plone/mockup/commit/ee15705fce247e98e8eb3b08232177fbb0660b70

changelog

Files changed:
A news/922.bugfix

b'diff --git a/news/922.bugfix b/news/922.bugfix\nnew file mode 100644\nindex 000000000..f85872c7a\n--- /dev/null\n+++ b/news/922.bugfix\n@@ -0,0 +1,4 @@\n+Fix Tinymce pattern: Link popup looses tab selection on active linktype\n+[mamico]\n+Fix autotoc pattern: activate the element link with active class during initialization\n+[mamico]\n'

Repository: mockup


Branch: refs/heads/master
Date: 2019-09-16T10:09:20+02:00
Author: mauro (mamico) <mauro.amico@unibo.it>
Commit: https://github.com/plone/mockup/commit/8eff603ea588fec0b23e39e29504103cf9709866

fix tests

Files changed:
M mockup/tests/pattern-tinymce-test.js

b'diff --git a/mockup/tests/pattern-tinymce-test.js b/mockup/tests/pattern-tinymce-test.js\nindex 86bcde764..4eacb73b8 100644\n--- a/mockup/tests/pattern-tinymce-test.js\n+++ b/mockup/tests/pattern-tinymce-test.js\n@@ -11,10 +11,6 @@ define([\n   window.mocha.setup(\'bdd\');\n   $.fx.off = true;\n \n-  function sleep(ms) {\n-    return new Promise(resolve => setTimeout(resolve, ms));\n-  }\n-\n   var createTinymce = function(options) {\n     return registry.patterns.tinymce.init(\n       $(\'<textarea class="pat-tinymce"></textarea>\').appendTo(\'body\'),\n@@ -402,10 +398,10 @@ define([\n       pattern.addLinkClicked();\n \n       expect(pattern.linkModal.linkTypes.external.getEl().val()).to.equal(\'foobar\');\n-      sleep(100).then(() => {\n+      setTimeout(function() {\n         expect($(\'fieldset.active\', pattern.linkModal.modal.$wrapper).size()).to.equal(1);\n         expect($(\'fieldset.active\', pattern.linkModal.modal.$wrapper).data(\'linktype\')).to.equal(\'external\');\n-      });\n+      }, 100);\n     });\n \n     it(\'test loads existing link email values\', function() {\n@@ -417,10 +413,10 @@ define([\n       pattern.addLinkClicked();\n \n       expect(pattern.linkModal.linkTypes.email.getEl().val()).to.equal(\'foo@bar.com\');\n-      sleep(100).then(() => {\n+      setTimeout(function() {\n         expect($(\'fieldset.active\', pattern.linkModal.modal.$wrapper).size()).to.equal(1);\n         expect($(\'fieldset.active\', pattern.linkModal.modal.$wrapper).data(\'linktype\')).to.equal(\'email\');\n-      });\n+      }, 100);\n     });\n \n     it(\'test anchor link adds existing anchors to list\', function() {\n@@ -431,10 +427,10 @@ define([\n       pattern.addLinkClicked();\n \n       expect(pattern.linkModal.linkTypes.anchor.anchorNodes.length).to.equal(1);\n-      sleep(100).then(() => {\n+      setTimeout(function() {\n         expect($(\'fieldset.active\', pattern.linkModal.modal.$wrapper).size()).to.equal(1);\n         expect($(\'fieldset.active\', pattern.linkModal.modal.$wrapper).data(\'linktype\')).to.equal(\'anchor\');\n-      });\n+      }, 100);\n     });\n \n     it(\'test anchor link adds anchors from option\', function() {\n@@ -487,10 +483,10 @@ define([\n       pattern.addLinkClicked();\n \n       expect(pattern.linkModal.linkTypes.external.getEl().val()).to.equal(\'foobar\');\n-      sleep(100).then(() => {\n+      setTimeout(function() {\n         expect($(\'fieldset.active\', pattern.linkModal.modal.$wrapper).size()).to.equal(1);\n         expect($(\'fieldset.active\', pattern.linkModal.modal.$wrapper).data(\'linktype\')).to.equal(\'external\');\n-      });\n+      }, 100);\n     });\n \n     it(\'test guess anchor when no data- attribute present\', function() {\n@@ -502,10 +498,10 @@ define([\n       pattern.addLinkClicked();\n \n       expect(pattern.linkModal.linkTypes.anchor.toUrl()).to.equal(\'#foobar\');\n-      sleep(100).then(() => {\n+      setTimeout(function() {\n         expect($(\'fieldset.active\', pattern.linkModal.modal.$wrapper).size()).to.equal(1);\n         expect($(\'fieldset.active\', pattern.linkModal.modal.$wrapper).data(\'linktype\')).to.equal(\'anchor\');\n-      });\n+      }, 100);\n     });\n \n     it(\'test inline tinyMCE roundtrip\', function() {\n'

Repository: mockup


Branch: refs/heads/master
Date: 2019-09-16T12:46:11+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/mockup/commit/0126041d2b810473886d33544c18ea8d01f2a892

Merge pull request #922 from mamico/master

Fix Tinymce pattern: Link popup looses tab selection on active linktype

Files changed:
A news/922.bugfix
M mockup/patterns/autotoc/pattern.js
M mockup/patterns/tinymce/js/links.js
M mockup/tests/pattern-autotoc-test.js
M mockup/tests/pattern-tinymce-test.js

b"diff --git a/mockup/patterns/autotoc/pattern.js b/mockup/patterns/autotoc/pattern.js\nindex a80fdf29d..4c30ca376 100644\n--- a/mockup/patterns/autotoc/pattern.js\n+++ b/mockup/patterns/autotoc/pattern.js\n@@ -122,6 +122,9 @@ define([\n         if(window.location.hash === '#' + id){\n           activeId = id;\n         }\n+        if(activeId===null && $level.hasClass(self.options.classActiveName)){\n+          activeId = id;\n+        }\n         $level.data('navref', id);\n         $('<a/>')\n           .appendTo(self.$toc)\n@@ -161,6 +164,7 @@ define([\n               }\n             }\n           });\n+        $level.data('autotoc-trigger-id', id);\n       });\n \n       if(activeId){\ndiff --git a/mockup/patterns/tinymce/js/links.js b/mockup/patterns/tinymce/js/links.js\nindex 17a7985ff..38c893b08 100644\n--- a/mockup/patterns/tinymce/js/links.js\n+++ b/mockup/patterns/tinymce/js/links.js\n@@ -790,7 +790,11 @@ define([\n         if (linkType) {\n           self.linkType = linkType;\n           self.linkTypes[self.linkType].load(self.anchorElm);\n-          $('#tinylink-' + self.linkType, self.modal.$modal).trigger('click');\n+          var $panel = $('#tinylink-' + self.linkType, self.modal.$modal);\n+          // $('#tinylink-' + self.linkType, self.modal.$modal).trigger('click');\n+          if ($panel.length === 1) {\n+            $('#'+$panel.data('autotoc-trigger-id')).trigger('click');\n+          }\n         }else if (href) {\n           self.guessAnchorLink(href);\n         }\ndiff --git a/mockup/tests/pattern-autotoc-test.js b/mockup/tests/pattern-autotoc-test.js\nindex 3d6bdcf30..3c099c370 100644\n--- a/mockup/tests/pattern-autotoc-test.js\n+++ b/mockup/tests/pattern-autotoc-test.js\n@@ -85,6 +85,17 @@ define([\n       expect($('div.placeholder', this.$el).children().eq(0).attr('class')).to.equal('autotoc-nav');\n       expect($('div.placeholder', this.$el).children().eq(1).attr('id')).to.equal('first-elem');\n     });\n+    it('by default the first element is the active one', function() {\n+      Registry.scan(this.$el);\n+      expect($('> nav > a.active', this.$el).text()).to.equal('Title 1');\n+    });\n+    it('the first element with `classActiveName` will be the active', function() {\n+      $('h1:eq(1)', this.$el).addClass('active');\n+      // the second element with `classActiveName` will be ignored as active\n+      $('h1:eq(2)', this.$el).addClass('active');\n+      Registry.scan(this.$el);\n+      expect($('> nav > a.active', this.$el).text()).to.equal('Title 2');\n+    });\n     it('custom className', function() {\n       this.$el.attr('data-pat-autotoc', 'className:SOMETHING');\n       Registry.scan(this.$el);\ndiff --git a/mockup/tests/pattern-tinymce-test.js b/mockup/tests/pattern-tinymce-test.js\nindex 7a7ebc43d..4eacb73b8 100644\n--- a/mockup/tests/pattern-tinymce-test.js\n+++ b/mockup/tests/pattern-tinymce-test.js\n@@ -398,6 +398,10 @@ define([\n       pattern.addLinkClicked();\n \n       expect(pattern.linkModal.linkTypes.external.getEl().val()).to.equal('foobar');\n+      setTimeout(function() {\n+        expect($('fieldset.active', pattern.linkModal.modal.$wrapper).size()).to.equal(1);\n+        expect($('fieldset.active', pattern.linkModal.modal.$wrapper).data('linktype')).to.equal('external');\n+      }, 100);\n     });\n \n     it('test loads existing link email values', function() {\n@@ -409,6 +413,10 @@ define([\n       pattern.addLinkClicked();\n \n       expect(pattern.linkModal.linkTypes.email.getEl().val()).to.equal('foo@bar.com');\n+      setTimeout(function() {\n+        expect($('fieldset.active', pattern.linkModal.modal.$wrapper).size()).to.equal(1);\n+        expect($('fieldset.active', pattern.linkModal.modal.$wrapper).data('linktype')).to.equal('email');\n+      }, 100);\n     });\n \n     it('test anchor link adds existing anchors to list', function() {\n@@ -419,6 +427,10 @@ define([\n       pattern.addLinkClicked();\n \n       expect(pattern.linkModal.linkTypes.anchor.anchorNodes.length).to.equal(1);\n+      setTimeout(function() {\n+        expect($('fieldset.active', pattern.linkModal.modal.$wrapper).size()).to.equal(1);\n+        expect($('fieldset.active', pattern.linkModal.modal.$wrapper).data('linktype')).to.equal('anchor');\n+      }, 100);\n     });\n \n     it('test anchor link adds anchors from option', function() {\n@@ -471,6 +483,10 @@ define([\n       pattern.addLinkClicked();\n \n       expect(pattern.linkModal.linkTypes.external.getEl().val()).to.equal('foobar');\n+      setTimeout(function() {\n+        expect($('fieldset.active', pattern.linkModal.modal.$wrapper).size()).to.equal(1);\n+        expect($('fieldset.active', pattern.linkModal.modal.$wrapper).data('linktype')).to.equal('external');\n+      }, 100);\n     });\n \n     it('test guess anchor when no data- attribute present', function() {\n@@ -482,6 +498,10 @@ define([\n       pattern.addLinkClicked();\n \n       expect(pattern.linkModal.linkTypes.anchor.toUrl()).to.equal('#foobar');\n+      setTimeout(function() {\n+        expect($('fieldset.active', pattern.linkModal.modal.$wrapper).size()).to.equal(1);\n+        expect($('fieldset.active', pattern.linkModal.modal.$wrapper).data('linktype')).to.equal('anchor');\n+      }, 100);\n     });\n \n     it('test inline tinyMCE roundtrip', function() {\ndiff --git a/news/922.bugfix b/news/922.bugfix\nnew file mode 100644\nindex 000000000..f85872c7a\n--- /dev/null\n+++ b/news/922.bugfix\n@@ -0,0 +1,4 @@\n+Fix Tinymce pattern: Link popup looses tab selection on active linktype\n+[mamico]\n+Fix autotoc pattern: activate the element link with active class during initialization\n+[mamico]\n"

