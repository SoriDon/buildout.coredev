Repository: plone.z3cform


Branch: refs/heads/master
Date: 2022-03-17T17:10:19+01:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/plone.z3cform/commit/26a913a95a60b6ad93bbba5286ad5b1a3a3d8beb

fixes for z3c.form &gt;= 4

Files changed:
M setup.py
M src/plone/z3cform/fieldsets/README.rst
M src/plone/z3cform/fieldsets/utils.py
M src/plone/z3cform/tests.py
M src/plone/z3cform/traversal.txt

b'diff --git a/setup.py b/setup.py\nindex b7afcd4..e26ec40 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -37,6 +37,7 @@ def description():\n         "Programming Language :: Python",\n         "Programming Language :: Python :: 3.7",\n         "Programming Language :: Python :: 3.8",\n+        "Programming Language :: Python :: 3.9",\n     ],\n     keywords=\'Plone CMF Python Zope CMS Webapplication\',\n     author=\'Plone Foundation\',\n@@ -52,7 +53,7 @@ def description():\n         \'setuptools\',\n         \'plone.batching\',\n         \'six\',\n-        \'z3c.form\',\n+        \'z3c.form>=4.0\',\n         \'zope.i18n>=3.4\',\n         \'zope.browserpage\',\n         \'zope.component\',\ndiff --git a/src/plone/z3cform/fieldsets/README.rst b/src/plone/z3cform/fieldsets/README.rst\nindex b9a4ab6..de065d4 100644\n--- a/src/plone/z3cform/fieldsets/README.rst\n+++ b/src/plone/z3cform/fieldsets/README.rst\n@@ -49,7 +49,7 @@ request::\n \n   >>> form = TestForm(context, request)\n   >>> form.update()\n-  >>> form.fields.keys()\n+  >>> list(form.fields.keys())\n   [\'title\']\n \n Now let\'s register an adapter that adds two new fields - one in the\n@@ -146,7 +146,7 @@ With this in place, let\'s update the form once again::\n At this point, we should have a set of default fields that represent the\n ones set in the adapter::\n \n-  >>> form.fields.keys()\n+  >>> list(form.fields.keys())\n   [\'extra.fub\', \'title\', \'extra.foo\']\n \n And we should have one group created by the group factory::\n@@ -163,5 +163,5 @@ canonical name::\n \n This should have the group fields provided by the adapter as well::\n \n-  >>> form.groups[0].fields.keys()\n+  >>> list(form.groups[0].fields.keys())\n   [\'extra.bar\', \'extra.qux\', \'extra.baz\']\ndiff --git a/src/plone/z3cform/fieldsets/utils.py b/src/plone/z3cform/fieldsets/utils.py\nindex dd6bfb9..db3a50a 100644\n--- a/src/plone/z3cform/fieldsets/utils.py\n+++ b/src/plone/z3cform/fieldsets/utils.py\n@@ -29,7 +29,7 @@ def add(form, *args, **kwargs):\n         if index is None or index >= len(source.fields):\n             source.fields += new_fields\n         else:\n-            field_names = source.fields.keys()\n+            field_names = list(source.fields.keys())\n             source.fields = source.fields.select(*field_names[:index]) + \\\n                 new_fields + \\\n                 source.fields.select(*field_names[index:])\n@@ -101,7 +101,7 @@ def move(\n     index = None\n \n     if relative in form.fields:\n-        index = form.fields.keys().index(relative)\n+        index = list(form.fields.keys()).index(relative)\n     elif orig_relative == \'*\' and relative_prefix is None:\n         if before:\n             index = 0\n@@ -110,7 +110,7 @@ def move(\n     else:\n         for group in form.groups:\n             if relative in group.fields:\n-                index = group.fields.keys().index(relative)\n+                index = list(group.fields.keys()).index(relative)\n                 break\n             elif orig_relative == \'*\' and relative_prefix == group.prefix:\n                 if before:\ndiff --git a/src/plone/z3cform/tests.py b/src/plone/z3cform/tests.py\nindex 493a18f..69e60d2 100644\n--- a/src/plone/z3cform/tests.py\n+++ b/src/plone/z3cform/tests.py\n@@ -225,7 +225,6 @@ def test_suite():\n         doctest.DocFileSuite(\'fieldsets/README.rst\', checker=Py23DocChecker()),\n         layer=FUNCTIONAL_TESTING,\n     )\n-\n     traversal_txt = layered(\n         doctest.DocFileSuite(\'traversal.txt\', checker=Py23DocChecker()),\n         layer=FUNCTIONAL_TESTING,\n@@ -243,10 +242,6 @@ def test_suite():\n         ),\n         layer=zca.UNIT_TESTING,\n     )\n-    traversal_txt = layered(\n-        doctest.DocFileSuite(\'traversal.txt\', checker=Py23DocChecker()),\n-        layer=FUNCTIONAL_TESTING,\n-    )\n     suite = unittest.defaultTestLoader.loadTestsFromTestCase(Z2TestCase)\n     suite.addTests(\n         [\ndiff --git a/src/plone/z3cform/traversal.txt b/src/plone/z3cform/traversal.txt\nindex c8596f9..e9c412a 100644\n--- a/src/plone/z3cform/traversal.txt\n+++ b/src/plone/z3cform/traversal.txt\n@@ -214,13 +214,13 @@ We can find this object widget\n And traverse through to the form within\n \n     >>> traverser = get_traverser(Bar(),u"test-parent-form")\n-    >>> list_widget = traverser.traverse(\'obj_field.widgets.list_field\', [])\n+    >>> list_widget = traverser.traverse(\'obj_field.list_field\', [])\n     Updating test form\n     >>> list_widget\n     <MultiWidget \'form.widgets.obj_field.widgets.list_field\'>\n \n     >>> traverser = get_traverser(Bar(),u"test-parent-form")\n-    >>> age_widget = traverser.traverse(\'obj_field.widgets.list_field.0\', [])\n+    >>> age_widget = traverser.traverse(\'obj_field.list_field.0\', [])\n     Updating test form\n     >>> age_widget\n     <TextWidget \'form.widgets.obj_field.widgets.list_field.0\'>\n@@ -230,7 +230,7 @@ And traverse through to the form within\n Missing widgets are LocationErrors\n \n     >>> traverser = get_traverser(Bar(),u"test-parent-form")\n-    >>> list_widget = traverser.traverse(\'obj_field.widgets.camel_field\', [])\n+    >>> list_widget = traverser.traverse(\'obj_field.camel_field\', [])\n     Traceback (most recent call last):\n       File "<stdin>", line 1, in ?\n     zope.location.interfaces.LocationError: \'camel_field\'\n'

Repository: plone.z3cform


Branch: refs/heads/master
Date: 2022-03-18T12:20:17+01:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/plone.z3cform/commit/36aad585cdefeea5e98dfc3b45352e9b3abfc30c

fix iterating over widgets

Files changed:
M src/plone/z3cform/pagetemplates/macros.pt

b'diff --git a/src/plone/z3cform/pagetemplates/macros.pt b/src/plone/z3cform/pagetemplates/macros.pt\nindex c5561e1..622a294 100644\n--- a/src/plone/z3cform/pagetemplates/macros.pt\n+++ b/src/plone/z3cform/pagetemplates/macros.pt\n@@ -35,7 +35,7 @@\n           <metal:fields-slot define-slot="fields">\n             <metal:define define-macro="fields">\n \n-              <tal:widgets repeat="widget view/widgets/values">\n+              <tal:widgets repeat="widget python:view.widgets.values()">\n                 <div class="row"\n                      tal:define="hidden python:widget.mode == \'hidden\'"\n                      tal:omit-tag="hidden">\n'

Repository: plone.z3cform


Branch: refs/heads/master
Date: 2022-03-21T12:09:21+01:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/plone.z3cform/commit/47886bd7ec27738716ec314c68fb4450c2a1216b

add changelog

Files changed:
A news/20.feature

b'diff --git a/news/20.feature b/news/20.feature\nnew file mode 100644\nindex 0000000..16362fa\n--- /dev/null\n+++ b/news/20.feature\n@@ -0,0 +1,2 @@\n+compatibility with z3c.form >= 4.x\n+[petschki]\n'

Repository: plone.z3cform


Branch: refs/heads/master
Date: 2022-03-22T09:49:47+01:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/plone.z3cform/commit/0cbef33ce26f710d3b2e21b139044d472c31ab02

backport ObjectSubForm and SubformAdapter from z3c.form 3.6.x

Files changed:
A src/plone/z3cform/subform.py
M src/plone/z3cform/configure.zcml
M src/plone/z3cform/interfaces.py

b'diff --git a/src/plone/z3cform/configure.zcml b/src/plone/z3cform/configure.zcml\nindex f283d17..46b5cd5 100644\n--- a/src/plone/z3cform/configure.zcml\n+++ b/src/plone/z3cform/configure.zcml\n@@ -35,4 +35,7 @@\n   <adapter factory=".traversal.FormWidgetTraversal" name="widget" />\n   <adapter factory=".traversal.WrapperWidgetTraversal" name="widget" />\n \n+  <!-- subform adapter backport -->\n+  <adapter factory=".subform.SubformAdapter" />\n+\n </configure>\ndiff --git a/src/plone/z3cform/interfaces.py b/src/plone/z3cform/interfaces.py\nindex 932ca9a..b05ac9b 100644\n--- a/src/plone/z3cform/interfaces.py\n+++ b/src/plone/z3cform/interfaces.py\n@@ -1,6 +1,7 @@\n from z3c.form.interfaces import IForm\n from zope import schema\n-from zope.interface import Interface, Attribute\n+from zope.interface import Attribute\n+from zope.interface import Interface\n from zope.pagetemplate.interfaces import IPageTemplate\n \n \n@@ -56,3 +57,13 @@ class IDeferSecurityCheck(Interface):\n     This can be used by other code that wants to skip security\n     checks during traversal.\n     """\n+\n+\n+class ISubformFactory(Interface):\n+    """Factory that will instantiate our subforms for ObjectWidget.\n+       BBB: backported from z3c.form 3.6.x\n+    """\n+\n+    def __call__():\n+        """Return a default object created to be populated.\n+        """\ndiff --git a/src/plone/z3cform/subform.py b/src/plone/z3cform/subform.py\nnew file mode 100644\nindex 0000000..20fc3a1\n--- /dev/null\n+++ b/src/plone/z3cform/subform.py\n@@ -0,0 +1,89 @@\n+from plone.z3cform.interfaces import ISubformFactory\n+from z3c.form import form\n+from z3c.form import interfaces\n+from z3c.form.field import Fields\n+\n+import zope.component\n+import zope.interface\n+\n+\n+@zope.interface.implementer(interfaces.ISubForm)\n+class ObjectSubForm(form.BaseForm):\n+\n+    def __init__(self, context, request, parentWidget):\n+        self.context = context\n+        self.request = request\n+        self.__parent__ = parentWidget\n+        self.parentForm = parentWidget.form\n+        self.ignoreContext = self.__parent__.ignoreContext\n+        self.ignoreRequest = self.__parent__.ignoreRequest\n+        if interfaces.IFormAware.providedBy(self.__parent__):\n+            self.ignoreReadonly = self.parentForm.ignoreReadonly\n+        self.prefix = self.__parent__.name\n+\n+    def _validate(self):\n+        for widget in self.widgets.values():\n+            try:\n+                # convert widget value to field value\n+                converter = interfaces.IDataConverter(widget)\n+                value = converter.toFieldValue(widget.value)\n+                # validate field value\n+                zope.component.getMultiAdapter(\n+                    (self.context,\n+                     self.request,\n+                     self.parentForm,\n+                     getattr(widget, \'field\', None),\n+                     widget),\n+                    interfaces.IValidator).validate(value, force=True)\n+            except (zope.schema.ValidationError, ValueError) as error:\n+                # on exception, setup the widget error message\n+                view = zope.component.getMultiAdapter(\n+                    (error, self.request, widget, widget.field,\n+                     self.parentForm, self.context),\n+                    interfaces.IErrorViewSnippet)\n+                view.update()\n+                widget.error = view\n+\n+    def setupFields(self):\n+        self.fields = Fields(self.__parent__.field.schema)\n+\n+    def update(self):\n+        if self.__parent__.field is None:\n+            raise ValueError("%r .field is None, that\'s a blocking point" % self.__parent__)\n+        #update stuff from parent to be sure\n+        self.mode = self.__parent__.mode\n+\n+        self.setupFields()\n+\n+        super(ObjectSubForm, self).update()\n+\n+    def getContent(self):\n+        return self.__parent__._value\n+\n+\n+@zope.interface.implementer(ISubformFactory)\n+class SubformAdapter(object):\n+    """Most basic-default subform factory adapter"""\n+    zope.component.adapts(zope.interface.Interface, #widget value\n+                          interfaces.IFormLayer,    #request\n+                          zope.interface.Interface, #widget context\n+                          zope.interface.Interface, #form\n+                          interfaces.IObjectWidget, #widget\n+                          zope.interface.Interface, #field\n+                          zope.interface.Interface) #field.schema\n+\n+    factory = ObjectSubForm\n+\n+    def __init__(self, context, request, widgetContext, form,\n+                 widget, field, schema):\n+        self.context = context\n+        self.request = request\n+        self.widgetContext = widgetContext\n+        self.form = form\n+        self.widget = widget\n+        self.field = field\n+        self.schema = schema\n+\n+    def __call__(self):\n+        obj = self.factory(self.context, self.request, self.widget)\n+        return obj\n'

Repository: plone.z3cform


Branch: refs/heads/master
Date: 2022-03-22T13:38:47+01:00
Author: Peter Mathis (petschki) <petschki@users.noreply.github.com>
Commit: https://github.com/plone/plone.z3cform/commit/32e1ebff1e84e8665138056e013db7645a4cd52a

Merge pull request #20 from plone/z3c-form-latest

use latest z3c.form

Files changed:
A news/20.feature
A src/plone/z3cform/subform.py
M setup.py
M src/plone/z3cform/configure.zcml
M src/plone/z3cform/fieldsets/README.rst
M src/plone/z3cform/fieldsets/utils.py
M src/plone/z3cform/interfaces.py
M src/plone/z3cform/pagetemplates/macros.pt
M src/plone/z3cform/tests.py
M src/plone/z3cform/traversal.txt

b'diff --git a/news/20.feature b/news/20.feature\nnew file mode 100644\nindex 0000000..16362fa\n--- /dev/null\n+++ b/news/20.feature\n@@ -0,0 +1,2 @@\n+compatibility with z3c.form >= 4.x\n+[petschki]\ndiff --git a/setup.py b/setup.py\nindex b7afcd4..e26ec40 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -37,6 +37,7 @@ def description():\n         "Programming Language :: Python",\n         "Programming Language :: Python :: 3.7",\n         "Programming Language :: Python :: 3.8",\n+        "Programming Language :: Python :: 3.9",\n     ],\n     keywords=\'Plone CMF Python Zope CMS Webapplication\',\n     author=\'Plone Foundation\',\n@@ -52,7 +53,7 @@ def description():\n         \'setuptools\',\n         \'plone.batching\',\n         \'six\',\n-        \'z3c.form\',\n+        \'z3c.form>=4.0\',\n         \'zope.i18n>=3.4\',\n         \'zope.browserpage\',\n         \'zope.component\',\ndiff --git a/src/plone/z3cform/configure.zcml b/src/plone/z3cform/configure.zcml\nindex f283d17..46b5cd5 100644\n--- a/src/plone/z3cform/configure.zcml\n+++ b/src/plone/z3cform/configure.zcml\n@@ -35,4 +35,7 @@\n   <adapter factory=".traversal.FormWidgetTraversal" name="widget" />\n   <adapter factory=".traversal.WrapperWidgetTraversal" name="widget" />\n \n+  <!-- subform adapter backport -->\n+  <adapter factory=".subform.SubformAdapter" />\n+\n </configure>\ndiff --git a/src/plone/z3cform/fieldsets/README.rst b/src/plone/z3cform/fieldsets/README.rst\nindex b9a4ab6..de065d4 100644\n--- a/src/plone/z3cform/fieldsets/README.rst\n+++ b/src/plone/z3cform/fieldsets/README.rst\n@@ -49,7 +49,7 @@ request::\n \n   >>> form = TestForm(context, request)\n   >>> form.update()\n-  >>> form.fields.keys()\n+  >>> list(form.fields.keys())\n   [\'title\']\n \n Now let\'s register an adapter that adds two new fields - one in the\n@@ -146,7 +146,7 @@ With this in place, let\'s update the form once again::\n At this point, we should have a set of default fields that represent the\n ones set in the adapter::\n \n-  >>> form.fields.keys()\n+  >>> list(form.fields.keys())\n   [\'extra.fub\', \'title\', \'extra.foo\']\n \n And we should have one group created by the group factory::\n@@ -163,5 +163,5 @@ canonical name::\n \n This should have the group fields provided by the adapter as well::\n \n-  >>> form.groups[0].fields.keys()\n+  >>> list(form.groups[0].fields.keys())\n   [\'extra.bar\', \'extra.qux\', \'extra.baz\']\ndiff --git a/src/plone/z3cform/fieldsets/utils.py b/src/plone/z3cform/fieldsets/utils.py\nindex dd6bfb9..db3a50a 100644\n--- a/src/plone/z3cform/fieldsets/utils.py\n+++ b/src/plone/z3cform/fieldsets/utils.py\n@@ -29,7 +29,7 @@ def add(form, *args, **kwargs):\n         if index is None or index >= len(source.fields):\n             source.fields += new_fields\n         else:\n-            field_names = source.fields.keys()\n+            field_names = list(source.fields.keys())\n             source.fields = source.fields.select(*field_names[:index]) + \\\n                 new_fields + \\\n                 source.fields.select(*field_names[index:])\n@@ -101,7 +101,7 @@ def move(\n     index = None\n \n     if relative in form.fields:\n-        index = form.fields.keys().index(relative)\n+        index = list(form.fields.keys()).index(relative)\n     elif orig_relative == \'*\' and relative_prefix is None:\n         if before:\n             index = 0\n@@ -110,7 +110,7 @@ def move(\n     else:\n         for group in form.groups:\n             if relative in group.fields:\n-                index = group.fields.keys().index(relative)\n+                index = list(group.fields.keys()).index(relative)\n                 break\n             elif orig_relative == \'*\' and relative_prefix == group.prefix:\n                 if before:\ndiff --git a/src/plone/z3cform/interfaces.py b/src/plone/z3cform/interfaces.py\nindex 932ca9a..b05ac9b 100644\n--- a/src/plone/z3cform/interfaces.py\n+++ b/src/plone/z3cform/interfaces.py\n@@ -1,6 +1,7 @@\n from z3c.form.interfaces import IForm\n from zope import schema\n-from zope.interface import Interface, Attribute\n+from zope.interface import Attribute\n+from zope.interface import Interface\n from zope.pagetemplate.interfaces import IPageTemplate\n \n \n@@ -56,3 +57,13 @@ class IDeferSecurityCheck(Interface):\n     This can be used by other code that wants to skip security\n     checks during traversal.\n     """\n+\n+\n+class ISubformFactory(Interface):\n+    """Factory that will instantiate our subforms for ObjectWidget.\n+       BBB: backported from z3c.form 3.6.x\n+    """\n+\n+    def __call__():\n+        """Return a default object created to be populated.\n+        """\ndiff --git a/src/plone/z3cform/pagetemplates/macros.pt b/src/plone/z3cform/pagetemplates/macros.pt\nindex c5561e1..622a294 100644\n--- a/src/plone/z3cform/pagetemplates/macros.pt\n+++ b/src/plone/z3cform/pagetemplates/macros.pt\n@@ -35,7 +35,7 @@\n           <metal:fields-slot define-slot="fields">\n             <metal:define define-macro="fields">\n \n-              <tal:widgets repeat="widget view/widgets/values">\n+              <tal:widgets repeat="widget python:view.widgets.values()">\n                 <div class="row"\n                      tal:define="hidden python:widget.mode == \'hidden\'"\n                      tal:omit-tag="hidden">\ndiff --git a/src/plone/z3cform/subform.py b/src/plone/z3cform/subform.py\nnew file mode 100644\nindex 0000000..20fc3a1\n--- /dev/null\n+++ b/src/plone/z3cform/subform.py\n@@ -0,0 +1,89 @@\n+from plone.z3cform.interfaces import ISubformFactory\n+from z3c.form import form\n+from z3c.form import interfaces\n+from z3c.form.field import Fields\n+\n+import zope.component\n+import zope.interface\n+\n+\n+@zope.interface.implementer(interfaces.ISubForm)\n+class ObjectSubForm(form.BaseForm):\n+\n+    def __init__(self, context, request, parentWidget):\n+        self.context = context\n+        self.request = request\n+        self.__parent__ = parentWidget\n+        self.parentForm = parentWidget.form\n+        self.ignoreContext = self.__parent__.ignoreContext\n+        self.ignoreRequest = self.__parent__.ignoreRequest\n+        if interfaces.IFormAware.providedBy(self.__parent__):\n+            self.ignoreReadonly = self.parentForm.ignoreReadonly\n+        self.prefix = self.__parent__.name\n+\n+    def _validate(self):\n+        for widget in self.widgets.values():\n+            try:\n+                # convert widget value to field value\n+                converter = interfaces.IDataConverter(widget)\n+                value = converter.toFieldValue(widget.value)\n+                # validate field value\n+                zope.component.getMultiAdapter(\n+                    (self.context,\n+                     self.request,\n+                     self.parentForm,\n+                     getattr(widget, \'field\', None),\n+                     widget),\n+                    interfaces.IValidator).validate(value, force=True)\n+            except (zope.schema.ValidationError, ValueError) as error:\n+                # on exception, setup the widget error message\n+                view = zope.component.getMultiAdapter(\n+                    (error, self.request, widget, widget.field,\n+                     self.parentForm, self.context),\n+                    interfaces.IErrorViewSnippet)\n+                view.update()\n+                widget.error = view\n+\n+    def setupFields(self):\n+        self.fields = Fields(self.__parent__.field.schema)\n+\n+    def update(self):\n+        if self.__parent__.field is None:\n+            raise ValueError("%r .field is None, that\'s a blocking point" % self.__parent__)\n+        #update stuff from parent to be sure\n+        self.mode = self.__parent__.mode\n+\n+        self.setupFields()\n+\n+        super(ObjectSubForm, self).update()\n+\n+    def getContent(self):\n+        return self.__parent__._value\n+\n+\n+@zope.interface.implementer(ISubformFactory)\n+class SubformAdapter(object):\n+    """Most basic-default subform factory adapter"""\n+    zope.component.adapts(zope.interface.Interface, #widget value\n+                          interfaces.IFormLayer,    #request\n+                          zope.interface.Interface, #widget context\n+                          zope.interface.Interface, #form\n+                          interfaces.IObjectWidget, #widget\n+                          zope.interface.Interface, #field\n+                          zope.interface.Interface) #field.schema\n+\n+    factory = ObjectSubForm\n+\n+    def __init__(self, context, request, widgetContext, form,\n+                 widget, field, schema):\n+        self.context = context\n+        self.request = request\n+        self.widgetContext = widgetContext\n+        self.form = form\n+        self.widget = widget\n+        self.field = field\n+        self.schema = schema\n+\n+    def __call__(self):\n+        obj = self.factory(self.context, self.request, self.widget)\n+        return obj\ndiff --git a/src/plone/z3cform/tests.py b/src/plone/z3cform/tests.py\nindex 493a18f..69e60d2 100644\n--- a/src/plone/z3cform/tests.py\n+++ b/src/plone/z3cform/tests.py\n@@ -225,7 +225,6 @@ def test_suite():\n         doctest.DocFileSuite(\'fieldsets/README.rst\', checker=Py23DocChecker()),\n         layer=FUNCTIONAL_TESTING,\n     )\n-\n     traversal_txt = layered(\n         doctest.DocFileSuite(\'traversal.txt\', checker=Py23DocChecker()),\n         layer=FUNCTIONAL_TESTING,\n@@ -243,10 +242,6 @@ def test_suite():\n         ),\n         layer=zca.UNIT_TESTING,\n     )\n-    traversal_txt = layered(\n-        doctest.DocFileSuite(\'traversal.txt\', checker=Py23DocChecker()),\n-        layer=FUNCTIONAL_TESTING,\n-    )\n     suite = unittest.defaultTestLoader.loadTestsFromTestCase(Z2TestCase)\n     suite.addTests(\n         [\ndiff --git a/src/plone/z3cform/traversal.txt b/src/plone/z3cform/traversal.txt\nindex c8596f9..e9c412a 100644\n--- a/src/plone/z3cform/traversal.txt\n+++ b/src/plone/z3cform/traversal.txt\n@@ -214,13 +214,13 @@ We can find this object widget\n And traverse through to the form within\n \n     >>> traverser = get_traverser(Bar(),u"test-parent-form")\n-    >>> list_widget = traverser.traverse(\'obj_field.widgets.list_field\', [])\n+    >>> list_widget = traverser.traverse(\'obj_field.list_field\', [])\n     Updating test form\n     >>> list_widget\n     <MultiWidget \'form.widgets.obj_field.widgets.list_field\'>\n \n     >>> traverser = get_traverser(Bar(),u"test-parent-form")\n-    >>> age_widget = traverser.traverse(\'obj_field.widgets.list_field.0\', [])\n+    >>> age_widget = traverser.traverse(\'obj_field.list_field.0\', [])\n     Updating test form\n     >>> age_widget\n     <TextWidget \'form.widgets.obj_field.widgets.list_field.0\'>\n@@ -230,7 +230,7 @@ And traverse through to the form within\n Missing widgets are LocationErrors\n \n     >>> traverser = get_traverser(Bar(),u"test-parent-form")\n-    >>> list_widget = traverser.traverse(\'obj_field.widgets.camel_field\', [])\n+    >>> list_widget = traverser.traverse(\'obj_field.camel_field\', [])\n     Traceback (most recent call last):\n       File "<stdin>", line 1, in ?\n     zope.location.interfaces.LocationError: \'camel_field\'\n'

