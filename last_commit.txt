Repository: five.intid


Branch: refs/heads/master
Date: 2018-06-10T12:35:33+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/five.intid/commit/188e258e8e95ea79b7cd731bc699d60bc6e0eabc

Fix doctests in Python3

Files changed:
M CHANGES.rst
M five/intid/tests.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 99642fc..2902f45 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,6 +14,8 @@ New features:
 
 Bug fixes:
 
+- Fix doctests in Python 3.
+  [ale-rt]
 - Adapt raised errors to changes in zope.intid.
   (This makes the tests incompatible with Zope 2.13.)
   [pbauer]
diff --git a/five/intid/tests.py b/five/intid/tests.py
index 6de5cc4..fb8cc00 100644
--- a/five/intid/tests.py
+++ b/five/intid/tests.py
@@ -1,10 +1,13 @@
 # -*- coding: utf-8 -*-
 from persistent import Persistent
 from Testing.ZopeTestCase import placeless
-from zope.site.hooks import setHooks
 from Zope2.App import zcml
+from zope.site.hooks import setHooks
 
 import doctest
+import re
+import six
+
 
 optionflags = doctest.NORMALIZE_WHITESPACE | doctest.ELLIPSIS
 NOTIFIED = [None]
@@ -36,6 +39,28 @@ def tearDown():
     placeless.tearDown()
 
 
+class Py23DocChecker(doctest.OutputChecker):
+    def check_output(self, want, got, optionflags):
+        if six.PY2:
+            want = re.sub("b'(.*?)'", "'\\1'", want)
+        else:
+            want = re.sub("u'(.*?)'", "'\\1'", want)
+            # translate doctest exceptions
+            for dotted in (
+                'zope.interface.interfaces.ComponentLookupError',
+                'zope.keyreference.interfaces.NotYet',
+                'zope.intid.interfaces.IntIdMissingError',
+                'zope.intid.interfaces.ObjectMissingError',
+            ):
+                if dotted in got:
+                    got = re.sub(
+                        dotted,
+                        dotted.rpartition('.')[-1],
+                        got,
+                    )
+        return doctest.OutputChecker.check_output(self, want, got, optionflags)
+
+
 def test_suite():
     import unittest
     from Testing.ZopeTestCase import FunctionalDocFileSuite
@@ -44,5 +69,6 @@ def test_suite():
             'README.rst',
             package='five.intid',
             optionflags=optionflags,
+            checker=Py23DocChecker(),
         )
     ])


Repository: five.intid


Branch: refs/heads/master
Date: 2018-06-10T22:14:27+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/five.intid/commit/a0e19950f884677068ceb8019ce751ac862de3ad

Merge pull request #5 from plone/python3

Fix doctests in Python 3

Files changed:
M CHANGES.rst
M five/intid/tests.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 99642fc..2902f45 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,6 +14,8 @@ New features:
 
 Bug fixes:
 
+- Fix doctests in Python 3.
+  [ale-rt]
 - Adapt raised errors to changes in zope.intid.
   (This makes the tests incompatible with Zope 2.13.)
   [pbauer]
diff --git a/five/intid/tests.py b/five/intid/tests.py
index 6de5cc4..fb8cc00 100644
--- a/five/intid/tests.py
+++ b/five/intid/tests.py
@@ -1,10 +1,13 @@
 # -*- coding: utf-8 -*-
 from persistent import Persistent
 from Testing.ZopeTestCase import placeless
-from zope.site.hooks import setHooks
 from Zope2.App import zcml
+from zope.site.hooks import setHooks
 
 import doctest
+import re
+import six
+
 
 optionflags = doctest.NORMALIZE_WHITESPACE | doctest.ELLIPSIS
 NOTIFIED = [None]
@@ -36,6 +39,28 @@ def tearDown():
     placeless.tearDown()
 
 
+class Py23DocChecker(doctest.OutputChecker):
+    def check_output(self, want, got, optionflags):
+        if six.PY2:
+            want = re.sub("b'(.*?)'", "'\\1'", want)
+        else:
+            want = re.sub("u'(.*?)'", "'\\1'", want)
+            # translate doctest exceptions
+            for dotted in (
+                'zope.interface.interfaces.ComponentLookupError',
+                'zope.keyreference.interfaces.NotYet',
+                'zope.intid.interfaces.IntIdMissingError',
+                'zope.intid.interfaces.ObjectMissingError',
+            ):
+                if dotted in got:
+                    got = re.sub(
+                        dotted,
+                        dotted.rpartition('.')[-1],
+                        got,
+                    )
+        return doctest.OutputChecker.check_output(self, want, got, optionflags)
+
+
 def test_suite():
     import unittest
     from Testing.ZopeTestCase import FunctionalDocFileSuite
@@ -44,5 +69,6 @@ def test_suite():
             'README.rst',
             package='five.intid',
             optionflags=optionflags,
+            checker=Py23DocChecker(),
         )
     ])


