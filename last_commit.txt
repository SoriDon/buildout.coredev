Repository: Products.CMFDynamicViewFTI


Branch: refs/heads/master
Date: 2019-01-05T22:04:27+01:00
Author: Gil Forcada (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/Products.CMFDynamicViewFTI/commit/fefdd985b061766f9f6711be7c3a251ba78a9537

feat: fix some deprecation warnings

Files changed:
A news/18.bugfix
M Products/CMFDynamicViewFTI/tests/test_browserdefault.py
M Products/CMFDynamicViewFTI/tests/test_fti.py

b'diff --git a/Products/CMFDynamicViewFTI/tests/test_browserdefault.py b/Products/CMFDynamicViewFTI/tests/test_browserdefault.py\nindex 1c3ed91..d94d9fb 100644\n--- a/Products/CMFDynamicViewFTI/tests/test_browserdefault.py\n+++ b/Products/CMFDynamicViewFTI/tests/test_browserdefault.py\n@@ -24,11 +24,11 @@ class TestBrowserDefault(CMFDVFTITestCase.CMFDVFTITestCase):\n \n     def test_doesImplementISelectableBrowserDefault(self):\n         iface = ISelectableBrowserDefault\n-        self.failUnless(iface.implementedBy(BrowserDefaultMixin))\n-        self.failUnless(verifyClass(iface, BrowserDefaultMixin))\n+        self.assertTrue(iface.implementedBy(BrowserDefaultMixin))\n+        self.assertTrue(verifyClass(iface, BrowserDefaultMixin))\n \n     def test_extendsInterface(self):\n-        self.failUnless(ISelectableBrowserDefault.extends(IBrowserDefault))\n+        self.assertTrue(ISelectableBrowserDefault.extends(IBrowserDefault))\n \n \n class TestAvailableLayouts(CMFDVFTITestCase.CMFDVFTITestCase):\n@@ -44,13 +44,13 @@ def test_Zope3View(self):\n         dfolder.REQUEST = TestRequest()\n         view_methods = dfolder.getAvailableLayouts()\n         view_ids = [view_id for view_id, foo in view_methods]\n-        self.failIf(dfolder.layout in view_ids)\n+        self.assertNotIn(dfolder.layout, view_ids)\n \n         # Mark the object with interface connected to the zope 3 view\n         directlyProvides(dfolder, IDummy)\n         view_methods = dfolder.getAvailableLayouts()\n         view_ids = [view_id for view_id, foo in view_methods]\n-        self.failIf(dfolder.layout not in view_ids)\n+        self.assertIn(dfolder.layout, view_ids)\n \n     def test_Zope3ViewTitle(self):\n         dfolder = self.dfolder\ndiff --git a/Products/CMFDynamicViewFTI/tests/test_fti.py b/Products/CMFDynamicViewFTI/tests/test_fti.py\nindex da646b9..a8e4a51 100644\n--- a/Products/CMFDynamicViewFTI/tests/test_fti.py\n+++ b/Products/CMFDynamicViewFTI/tests/test_fti.py\n@@ -22,19 +22,19 @@ def _makeOne(self):\n \n     def test_doesImplementITypeInformation(self):\n         iface = ITypeInformation\n-        self.failUnless(iface.providedBy(self.fti))\n-        self.failUnless(verifyObject(iface, self.fti))\n+        self.assertTrue(iface.providedBy(self.fti))\n+        self.assertTrue(verifyObject(iface, self.fti))\n \n     def test_doesImplementIDynamicViewTypeInformation(self):\n         iface = IDynamicViewTypeInformation\n-        self.failUnless(iface.providedBy(self.fti))\n-        self.failUnless(verifyObject(iface, self.fti))\n+        self.assertTrue(iface.providedBy(self.fti))\n+        self.assertTrue(verifyObject(iface, self.fti))\n \n     def test_meta_type(self):\n-        self.failUnlessEqual(self.fti.meta_type, fti_meta_type)\n+        self.assertEqual(self.fti.meta_type, fti_meta_type)\n \n     def test_paranoid_subclass_test(self):\n-        self.failUnless(isinstance(self.fti, DynamicViewTypeInformation))\n+        self.assertTrue(isinstance(self.fti, DynamicViewTypeInformation))\n \n     def test_CreateDynFolder(self):\n         dynfolder = self._makeOne()\ndiff --git a/news/18.bugfix b/news/18.bugfix\nnew file mode 100644\nindex 0000000..6141fd5\n--- /dev/null\n+++ b/news/18.bugfix\n@@ -0,0 +1,2 @@\n+Fix some deprecation warnings.\n+[gforcada]\n'

Repository: Products.CMFDynamicViewFTI


Branch: refs/heads/master
Date: 2019-02-06T11:38:33+01:00
Author: Gil Forcada (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/Products.CMFDynamicViewFTI/commit/f5eb5678ee8304fcd56656f74b2877425490be9c

Avoid deprecated imports

Files changed:
M Products/CMFDynamicViewFTI/browserdefault.py
M Products/CMFDynamicViewFTI/fti.py
M Products/CMFDynamicViewFTI/permissions.py

b'diff --git a/Products/CMFDynamicViewFTI/browserdefault.py b/Products/CMFDynamicViewFTI/browserdefault.py\nindex 48f8396..53decad 100644\n--- a/Products/CMFDynamicViewFTI/browserdefault.py\n+++ b/Products/CMFDynamicViewFTI/browserdefault.py\n@@ -8,7 +8,7 @@\n """\n from AccessControl import ClassSecurityInfo\n from Acquisition import aq_base\n-from App.class_init import InitializeClass\n+from AccessControl.class_init import InitializeClass\n from ExtensionClass import Base\n from Products.CMFCore.permissions import View\n from Products.CMFCore.utils import getToolByName\ndiff --git a/Products/CMFDynamicViewFTI/fti.py b/Products/CMFDynamicViewFTI/fti.py\nindex 2d2cb51..c5f2294 100644\n--- a/Products/CMFDynamicViewFTI/fti.py\n+++ b/Products/CMFDynamicViewFTI/fti.py\n@@ -1,7 +1,7 @@\n # -*- coding: utf-8 -*-\n from AccessControl import ClassSecurityInfo\n from Acquisition import aq_base\n-from App.class_init import InitializeClass\n+from AccessControl.class_init import InitializeClass\n from Products.CMFCore.permissions import View\n from Products.CMFCore.TypesTool import FactoryTypeInformation\n from Products.CMFCore.utils import getToolByName\ndiff --git a/Products/CMFDynamicViewFTI/permissions.py b/Products/CMFDynamicViewFTI/permissions.py\nindex 4a56d90..fd86b13 100644\n--- a/Products/CMFDynamicViewFTI/permissions.py\n+++ b/Products/CMFDynamicViewFTI/permissions.py\n@@ -1,5 +1,5 @@\n # -*- coding: utf-8 -*-\n-from Products.CMFCore.permissions import setDefaultRoles\n+from AccessControl.Permission import addPermission\n \n ModifyViewTemplate = "Modify view template"\n-setDefaultRoles(ModifyViewTemplate, (\'Manager\', \'Owner\'))\n+addPermission(ModifyViewTemplate, (\'Manager\', \'Owner\'))\n'

Repository: Products.CMFDynamicViewFTI


Branch: refs/heads/master
Date: 2019-02-08T13:38:29+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/Products.CMFDynamicViewFTI/commit/283ffa8579c7d2fdbf49963fc7d24d53429a97da

Merge pull request #19 from plone/gforcada-fix-warnings

feat: fix some deprecation warnings

Files changed:
A news/18.bugfix
M Products/CMFDynamicViewFTI/browserdefault.py
M Products/CMFDynamicViewFTI/fti.py
M Products/CMFDynamicViewFTI/permissions.py
M Products/CMFDynamicViewFTI/tests/test_browserdefault.py
M Products/CMFDynamicViewFTI/tests/test_fti.py

b'diff --git a/Products/CMFDynamicViewFTI/browserdefault.py b/Products/CMFDynamicViewFTI/browserdefault.py\nindex 48f8396..53decad 100644\n--- a/Products/CMFDynamicViewFTI/browserdefault.py\n+++ b/Products/CMFDynamicViewFTI/browserdefault.py\n@@ -8,7 +8,7 @@\n """\n from AccessControl import ClassSecurityInfo\n from Acquisition import aq_base\n-from App.class_init import InitializeClass\n+from AccessControl.class_init import InitializeClass\n from ExtensionClass import Base\n from Products.CMFCore.permissions import View\n from Products.CMFCore.utils import getToolByName\ndiff --git a/Products/CMFDynamicViewFTI/fti.py b/Products/CMFDynamicViewFTI/fti.py\nindex 2d2cb51..c5f2294 100644\n--- a/Products/CMFDynamicViewFTI/fti.py\n+++ b/Products/CMFDynamicViewFTI/fti.py\n@@ -1,7 +1,7 @@\n # -*- coding: utf-8 -*-\n from AccessControl import ClassSecurityInfo\n from Acquisition import aq_base\n-from App.class_init import InitializeClass\n+from AccessControl.class_init import InitializeClass\n from Products.CMFCore.permissions import View\n from Products.CMFCore.TypesTool import FactoryTypeInformation\n from Products.CMFCore.utils import getToolByName\ndiff --git a/Products/CMFDynamicViewFTI/permissions.py b/Products/CMFDynamicViewFTI/permissions.py\nindex 4a56d90..fd86b13 100644\n--- a/Products/CMFDynamicViewFTI/permissions.py\n+++ b/Products/CMFDynamicViewFTI/permissions.py\n@@ -1,5 +1,5 @@\n # -*- coding: utf-8 -*-\n-from Products.CMFCore.permissions import setDefaultRoles\n+from AccessControl.Permission import addPermission\n \n ModifyViewTemplate = "Modify view template"\n-setDefaultRoles(ModifyViewTemplate, (\'Manager\', \'Owner\'))\n+addPermission(ModifyViewTemplate, (\'Manager\', \'Owner\'))\ndiff --git a/Products/CMFDynamicViewFTI/tests/test_browserdefault.py b/Products/CMFDynamicViewFTI/tests/test_browserdefault.py\nindex 1c3ed91..d94d9fb 100644\n--- a/Products/CMFDynamicViewFTI/tests/test_browserdefault.py\n+++ b/Products/CMFDynamicViewFTI/tests/test_browserdefault.py\n@@ -24,11 +24,11 @@ class TestBrowserDefault(CMFDVFTITestCase.CMFDVFTITestCase):\n \n     def test_doesImplementISelectableBrowserDefault(self):\n         iface = ISelectableBrowserDefault\n-        self.failUnless(iface.implementedBy(BrowserDefaultMixin))\n-        self.failUnless(verifyClass(iface, BrowserDefaultMixin))\n+        self.assertTrue(iface.implementedBy(BrowserDefaultMixin))\n+        self.assertTrue(verifyClass(iface, BrowserDefaultMixin))\n \n     def test_extendsInterface(self):\n-        self.failUnless(ISelectableBrowserDefault.extends(IBrowserDefault))\n+        self.assertTrue(ISelectableBrowserDefault.extends(IBrowserDefault))\n \n \n class TestAvailableLayouts(CMFDVFTITestCase.CMFDVFTITestCase):\n@@ -44,13 +44,13 @@ def test_Zope3View(self):\n         dfolder.REQUEST = TestRequest()\n         view_methods = dfolder.getAvailableLayouts()\n         view_ids = [view_id for view_id, foo in view_methods]\n-        self.failIf(dfolder.layout in view_ids)\n+        self.assertNotIn(dfolder.layout, view_ids)\n \n         # Mark the object with interface connected to the zope 3 view\n         directlyProvides(dfolder, IDummy)\n         view_methods = dfolder.getAvailableLayouts()\n         view_ids = [view_id for view_id, foo in view_methods]\n-        self.failIf(dfolder.layout not in view_ids)\n+        self.assertIn(dfolder.layout, view_ids)\n \n     def test_Zope3ViewTitle(self):\n         dfolder = self.dfolder\ndiff --git a/Products/CMFDynamicViewFTI/tests/test_fti.py b/Products/CMFDynamicViewFTI/tests/test_fti.py\nindex da646b9..a8e4a51 100644\n--- a/Products/CMFDynamicViewFTI/tests/test_fti.py\n+++ b/Products/CMFDynamicViewFTI/tests/test_fti.py\n@@ -22,19 +22,19 @@ def _makeOne(self):\n \n     def test_doesImplementITypeInformation(self):\n         iface = ITypeInformation\n-        self.failUnless(iface.providedBy(self.fti))\n-        self.failUnless(verifyObject(iface, self.fti))\n+        self.assertTrue(iface.providedBy(self.fti))\n+        self.assertTrue(verifyObject(iface, self.fti))\n \n     def test_doesImplementIDynamicViewTypeInformation(self):\n         iface = IDynamicViewTypeInformation\n-        self.failUnless(iface.providedBy(self.fti))\n-        self.failUnless(verifyObject(iface, self.fti))\n+        self.assertTrue(iface.providedBy(self.fti))\n+        self.assertTrue(verifyObject(iface, self.fti))\n \n     def test_meta_type(self):\n-        self.failUnlessEqual(self.fti.meta_type, fti_meta_type)\n+        self.assertEqual(self.fti.meta_type, fti_meta_type)\n \n     def test_paranoid_subclass_test(self):\n-        self.failUnless(isinstance(self.fti, DynamicViewTypeInformation))\n+        self.assertTrue(isinstance(self.fti, DynamicViewTypeInformation))\n \n     def test_CreateDynFolder(self):\n         dynfolder = self._makeOne()\ndiff --git a/news/18.bugfix b/news/18.bugfix\nnew file mode 100644\nindex 0000000..6141fd5\n--- /dev/null\n+++ b/news/18.bugfix\n@@ -0,0 +1,2 @@\n+Fix some deprecation warnings.\n+[gforcada]\n'

