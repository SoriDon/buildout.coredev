Repository: plone.app.textfield


Branch: refs/heads/master
Date: 2023-03-18T00:41:16+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.textfield/commit/216c49d56e78de72a4c7051aa3066c1cd8b9374d

Configuring with plone/meta

Files changed:
A .editorconfig
A .meta.toml
A .pre-commit-config.yaml
A news/80cf330f.internal
A tox.ini
M pyproject.toml
M setup.cfg

b'diff --git a/.editorconfig b/.editorconfig\nnew file mode 100644\nindex 0000000..b4158b8\n--- /dev/null\n+++ b/.editorconfig\n@@ -0,0 +1,39 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+#\n+# EditorConfig Configuration file, for more details see:\n+# http://EditorConfig.org\n+# EditorConfig is a convention description, that could be interpreted\n+# by multiple editors to enforce common coding conventions for specific\n+# file types\n+\n+# top-most EditorConfig file:\n+# Will ignore other EditorConfig files in Home directory or upper tree level.\n+root = true\n+\n+\n+[*]  # For All Files\n+# Unix-style newlines with a newline ending every file\n+end_of_line = lf\n+insert_final_newline = true\n+trim_trailing_whitespace = true\n+# Set default charset\n+charset = utf-8\n+# Indent style default\n+indent_style = space\n+# Max Line Length - a hard line wrap, should be disabled\n+max_line_length = off\n+\n+[*.{py,cfg,ini}]\n+# 4 space indentation\n+indent_size = 4\n+\n+[*.{yml,zpt,pt,dtml,zcml}]\n+# 2 space indentation\n+indent_size = 2\n+\n+[{Makefile,.gitmodules}]\n+# Tab indentation (no size specified, but view as 4 spaces)\n+indent_style = tab\n+indent_size = unset\n+tab_width = unset\ndiff --git a/.meta.toml b/.meta.toml\nnew file mode 100644\nindex 0000000..697a54c\n--- /dev/null\n+++ b/.meta.toml\n@@ -0,0 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[meta]\n+template = "default"\n+commit-id = "80cf330f"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nnew file mode 100644\nindex 0000000..582f8ac\n--- /dev/null\n+++ b/.pre-commit-config.yaml\n@@ -0,0 +1,42 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+ci:\n+    autofix_prs: false\n+    autoupdate_schedule: monthly\n+\n+repos:\n+-   repo: https://github.com/asottile/pyupgrade\n+    rev: v3.3.1\n+    hooks:\n+    -   id: pyupgrade\n+        args: [--py38-plus]\n+-   repo: https://github.com/pycqa/isort\n+    rev: 5.12.0\n+    hooks:\n+    -   id: isort\n+-   repo: https://github.com/psf/black\n+    rev: 23.1.0\n+    hooks:\n+    -   id: black\n+-   repo: https://github.com/collective/zpretty\n+    rev: 3.0.2\n+    hooks:\n+    -   id: zpretty\n+-   repo: https://github.com/PyCQA/flake8\n+    rev: 6.0.0\n+    hooks:\n+    -   id: flake8\n+-   repo: https://github.com/codespell-project/codespell\n+    rev: v2.2.2\n+    hooks:\n+    -   id: codespell\n+        additional_dependencies:\n+          - tomli\n+-   repo: https://github.com/mgedmin/check-manifest\n+    rev: "0.49"\n+    hooks:\n+    -   id: check-manifest\n+-   repo: https://github.com/regebro/pyroma\n+    rev: "4.2"\n+    hooks:\n+    -   id: pyroma\ndiff --git a/news/80cf330f.internal b/news/80cf330f.internal\nnew file mode 100644\nindex 0000000..c08f539\n--- /dev/null\n+++ b/news/80cf330f.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 05b615d..9eb73f3 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,3 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [tool.towncrier]\n filename = "CHANGES.rst"\n directory = "news/"\n@@ -18,3 +20,43 @@ showcontent = true\n directory = "bugfix"\n name = "Bug fixes:"\n showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "internal"\n+name = "Internal:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "documentation"\n+name = "Documentation:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "tests"\n+name = "Tests"\n+showcontent = true\n+\n+[tool.isort]\n+profile = "plone"\n+\n+[tool.black]\n+target-version = ["py38"]\n+\n+[tool.dependencychecker]\n+Zope = [\n+  # Zope own provided namespaces\n+  \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n+  \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n+  \'Zope2\', \'webdav\', \'zmi\',\n+  # Zope dependencies\n+  \'Acquisition\', \'DateTime\', \'transaction\', \'zExceptions\', \'ZODB\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.deferredimport\', \'zope.event\',\n+  \'zope.exceptions\', \'zope.globalrequest\', \'zope.i18n\', \'zope.i18nmessageid\',\n+  \'zope.interface\', \'zope.lifecycleevent\', \'zope.location\', \'zope.publisher\',\n+  \'zope.schema\', \'zope.security\', \'zope.site\', \'zope.traversing\', \'AccessControl\',\n+]\n+\'plone.base\' = [\n+  \'AccessControl\', \'Products.BTreeFolder2\', \'Products.CMFCore\',\n+  \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n+]\n+python-dateutil = [\'dateutil\']\ndiff --git a/setup.cfg b/setup.cfg\nindex 000ba69..0da8f8f 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -1,15 +1,23 @@\n-[check-manifest]\n-ignore =\n-    *.cfg\n-    bootstrap.py\n-\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [bdist_wheel]\n universal = 0\n \n-[isort]\n-# black compatible Plone isort rules:\n-profile = black\n-force_alphabetical_sort = True\n-force_single_line = True\n-lines_after_imports = 2\n+[flake8]\n+doctests = 1\n+ignore =\n+    # black takes care of line length\n+    E501,\n+    # black takes care of where to break lines\n+    W503,\n+    # black takes care of spaces within slicing (list[:])\n+    E203,\n+    # black takes care of spaces after commas\n+    E231,\n \n+[check-manifest]\n+ignore =\n+    .editorconfig\n+    .meta.toml\n+    .pre-commit-config.yaml\n+    tox.ini\ndiff --git a/tox.ini b/tox.ini\nnew file mode 100644\nindex 0000000..eca8603\n--- /dev/null\n+++ b/tox.ini\n@@ -0,0 +1,50 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[tox]\n+envlist =\n+    format\n+    lint\n+    test\n+\n+[testenv]\n+allowlist_externals =\n+    sh\n+\n+[testenv:format]\n+description = automatically reformat code\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a pyupgrade\n+    pre-commit run -a isort\n+    pre-commit run -a black\n+    pre-commit run -a zpretty\n+\n+[testenv:lint]\n+description = run linters that will help improve the code style\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a\n+\n+[testenv:dependencies]\n+description = check if the package defines all its dependencies and generate a graph out of them\n+deps =\n+    z3c.dependencychecker==2.11\n+    pipdeptree==2.5.1\n+    graphviz  # optional dependency of pipdeptree\n+commands =\n+    dependencychecker\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+\n+[testenv:test]\n+usedevelop = true\n+deps =\n+    zope.testrunner\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    zope-testrunner --test-path={toxinidir} -s plone.app.textfield\n+extras =\n+    test\n'

Repository: plone.app.textfield


Branch: refs/heads/master
Date: 2023-03-18T00:53:01+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.textfield/commit/8b2189e38b76475b03afd853f155ebcd48b761fa

chore: black

Files changed:
M plone/app/textfield/__init__.py

b'diff --git a/plone/app/textfield/__init__.py b/plone/app/textfield/__init__.py\nindex e8e39e0..18a8735 100644\n--- a/plone/app/textfield/__init__.py\n+++ b/plone/app/textfield/__init__.py\n@@ -29,7 +29,7 @@ def __init__(\n         allowed_mime_types=None,\n         max_length=None,\n         schema=IRichTextValue,\n-        **kw\n+        **kw,\n     ):\n         self.default_mime_type = default_mime_type\n         self.output_mime_type = output_mime_type\n'

Repository: plone.app.textfield


Branch: refs/heads/master
Date: 2023-03-18T00:53:28+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.textfield/commit/18305899b775b01aef375e77a84edd5aa7910dd8

chore: zpretty ZCML

Files changed:
M plone/app/textfield/browser.zcml
M plone/app/textfield/configure.zcml
M plone/app/textfield/editor.zcml
M plone/app/textfield/handler.zcml
M plone/app/textfield/marshaler.zcml
M plone/app/textfield/transform.zcml
M plone/app/textfield/widget.zcml

b'diff --git a/plone/app/textfield/browser.zcml b/plone/app/textfield/browser.zcml\nindex 63727c8..1f20f39 100644\n--- a/plone/app/textfield/browser.zcml\n+++ b/plone/app/textfield/browser.zcml\n@@ -1,14 +1,15 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:browser="http://namespaces.zope.org/browser"\n-    i18n_domain="plone.app.textfield">\n+    i18n_domain="plone.app.textfield"\n+    >\n \n   <!-- Generic transform browser view -->\n   <browser:page\n-      for="*"\n       name="text-transform"\n-      permission="zope2.View"\n+      for="*"\n       class=".browser.Transform"\n+      permission="zope2.View"\n       />\n \n </configure>\ndiff --git a/plone/app/textfield/configure.zcml b/plone/app/textfield/configure.zcml\nindex e3bb0f6..eee27de 100644\n--- a/plone/app/textfield/configure.zcml\n+++ b/plone/app/textfield/configure.zcml\n@@ -1,31 +1,37 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:zcml="http://namespaces.zope.org/zcml"\n-    i18n_domain="plone.app.textfield">\n+    i18n_domain="plone.app.textfield"\n+    >\n \n   <!-- Configure plone.supermodel support if available -->\n-  <include zcml:condition="installed plone.supermodel"\n+  <include\n       file="handler.zcml"\n+      zcml:condition="installed plone.supermodel"\n       />\n \n   <!-- Configure PortalTransforms based transformer if available -->\n-  <include zcml:condition="installed Products.PortalTransforms"\n+  <include\n       file="transform.zcml"\n+      zcml:condition="installed Products.PortalTransforms"\n       />\n \n   <!-- Configure z3c.form widget if z3c.form is installed -->\n-  <include zcml:condition="installed z3c.form"\n+  <include\n       file="widget.zcml"\n+      zcml:condition="installed z3c.form"\n       />\n \n   <!-- Configure plone.rfc822 marshaler if installed -->\n-  <include zcml:condition="installed plone.rfc822"\n+  <include\n       file="marshaler.zcml"\n+      zcml:condition="installed plone.rfc822"\n       />\n \n   <!-- Configure plone.schemaeditor field factory if installed -->\n-  <include zcml:condition="installed plone.schemaeditor"\n+  <include\n       file="editor.zcml"\n+      zcml:condition="installed plone.schemaeditor"\n       />\n \n   <!-- Configure transform invocation browser view -->\ndiff --git a/plone/app/textfield/editor.zcml b/plone/app/textfield/editor.zcml\nindex e5f54d6..8ea3a6d 100644\n--- a/plone/app/textfield/editor.zcml\n+++ b/plone/app/textfield/editor.zcml\n@@ -1,6 +1,7 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n-    i18n_domain="plone.app.textfield">\n+    i18n_domain="plone.app.textfield"\n+    >\n \n   <class class=".RichText">\n     <implements interface=".editor.IRichText" />\ndiff --git a/plone/app/textfield/handler.zcml b/plone/app/textfield/handler.zcml\nindex d8a15c4..8a99d37 100644\n--- a/plone/app/textfield/handler.zcml\n+++ b/plone/app/textfield/handler.zcml\n@@ -1,14 +1,13 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n-    i18n_domain="plone.app.textfield">\n+    i18n_domain="plone.app.textfield"\n+    >\n \n   <!-- plone.supermodel configuration -->\n   <utility\n-      component=".handler.RichTextHandler"\n       name="plone.app.textfield.RichText"\n+      component=".handler.RichTextHandler"\n       />\n-  <adapter\n-      factory=".handler.RichTextToUnicode"\n-      />\n+  <adapter factory=".handler.RichTextToUnicode" />\n \n </configure>\ndiff --git a/plone/app/textfield/marshaler.zcml b/plone/app/textfield/marshaler.zcml\nindex 06f20c8..f014b26 100644\n--- a/plone/app/textfield/marshaler.zcml\n+++ b/plone/app/textfield/marshaler.zcml\n@@ -1,6 +1,7 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n-    i18n_domain="plone.app.textfield">\n+    i18n_domain="plone.app.textfield"\n+    >\n \n   <adapter factory=".marshaler.RichTextFieldMarshaler" />\n \ndiff --git a/plone/app/textfield/transform.zcml b/plone/app/textfield/transform.zcml\nindex f1d6cc1..82533f7 100644\n--- a/plone/app/textfield/transform.zcml\n+++ b/plone/app/textfield/transform.zcml\n@@ -1,6 +1,7 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n-    i18n_domain="plone.app.textfield">\n+    i18n_domain="plone.app.textfield"\n+    >\n \n   <adapter\n       factory=".transform.PortalTransformsTransformer"\ndiff --git a/plone/app/textfield/widget.zcml b/plone/app/textfield/widget.zcml\nindex a477660..c695d2f 100644\n--- a/plone/app/textfield/widget.zcml\n+++ b/plone/app/textfield/widget.zcml\n@@ -1,13 +1,14 @@\n <configure\n-    i18n_domain="plone.app.textfield"\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:browser="http://namespaces.zope.org/browser"\n     xmlns:z3c="http://namespaces.zope.org/z3c"\n-    xmlns:zcml="http://namespaces.zope.org/zcml">\n+    xmlns:zcml="http://namespaces.zope.org/zcml"\n+    i18n_domain="plone.app.textfield"\n+    >\n   <include\n-      file="meta.zcml"\n       package="z3c.form"\n-  />\n+      file="meta.zcml"\n+      />\n   <include package="z3c.form" />\n   <!--\n     register data converter for RichTextWidget\n@@ -16,7 +17,7 @@\n       factory=".widget.RichTextConverter"\n       for=".interfaces.IRichText\n            .widget.IRichTextWidget"\n-  />\n+      />\n   <!--\n     also register a data converter for the basic z3c.form ITextAreaWidget,\n     so it can be used without tinymce, i.e. in order to convert from\n@@ -26,28 +27,28 @@\n       factory=".widget.RichTextAreaConverter"\n       for=".interfaces.IRichText\n            z3c.form.interfaces.ITextAreaWidget"\n-  />\n+      />\n   <!--\n       register new widget\n   -->\n   <class class=".widget.RichTextWidget">\n     <require\n-        interface=".widget.IRichTextWidget"\n         permission="zope.Public"\n-    />\n+        interface=".widget.IRichTextWidget"\n+        />\n   </class>\n   <z3c:widgetTemplate\n+      widget=".widget.IRichTextWidget"\n+      template="widget_display.pt"\n       layer="z3c.form.interfaces.IFormLayer"\n       mode="display"\n-      template="widget_display.pt"\n-      widget=".widget.IRichTextWidget"\n-  />\n+      />\n   <z3c:widgetTemplate\n+      widget=".widget.IRichTextWidget"\n+      template="widget_input.pt"\n       layer="z3c.form.interfaces.IFormLayer"\n       mode="input"\n-      template="widget_input.pt"\n-      widget=".widget.IRichTextWidget"\n-  />\n+      />\n   <adapter factory=".widget.RichTextFieldWidget" />\n   <!--\n     register alternative template for ITextAreaWidget display in order to\n@@ -58,16 +59,16 @@\n   -->\n   <configure zcml:condition="installed plone.app.z3cform">\n     <z3c:widgetTemplate\n-      layer="plone.app.z3cform.interfaces.IPloneFormLayer"\n-      mode="display"\n-      template="widget_textarea_display.pt"\n-      widget="z3c.form.interfaces.ITextAreaWidget"\n-    />\n+        widget="z3c.form.interfaces.ITextAreaWidget"\n+        template="widget_textarea_display.pt"\n+        layer="plone.app.z3cform.interfaces.IPloneFormLayer"\n+        mode="display"\n+        />\n     <z3c:widgetTemplate\n-      layer="plone.app.z3cform.interfaces.IPloneFormLayer"\n-      mode="display"\n-      template="widget_display.pt"\n-      widget=".widget.IRichTextWidget"\n-    />\n+        widget=".widget.IRichTextWidget"\n+        template="widget_display.pt"\n+        layer="plone.app.z3cform.interfaces.IPloneFormLayer"\n+        mode="display"\n+        />\n   </configure>\n </configure>\n'

Repository: plone.app.textfield


Branch: refs/heads/master
Date: 2023-03-18T00:53:45+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.textfield/commit/fc3367dff3ea3988029e859feae7e6e4df23cb21

chore: zpretty PT

Files changed:
M plone/app/textfield/widget_display.pt
M plone/app/textfield/widget_input.pt
M plone/app/textfield/widget_textarea_display.pt

b'diff --git a/plone/app/textfield/widget_display.pt b/plone/app/textfield/widget_display.pt\nindex e7c6911..3052ac8 100644\n--- a/plone/app/textfield/widget_display.pt\n+++ b/plone/app/textfield/widget_display.pt\n@@ -1,18 +1,25 @@\n-<div id="" class=""\n-      tal:attributes="id view/id;\n-                      class view/klass;\n-                      style view/style;\n-                      title view/title;\n-                      lang view/lang;\n-                      onclick view/onclick;\n-                      ondblclick view/ondblclick;\n-                      onmousedown view/onmousedown;\n-                      onmouseup view/onmouseup;\n-                      onmouseover view/onmouseover;\n-                      onmousemove view/onmousemove;\n-                      onmouseout view/onmouseout;\n-                      onkeypress view/onkeypress;\n-                      onkeydown view/onkeydown;\n-                      onkeyup view/onkeyup"><tal:block\n-      define="value view/value" condition="nocall:value" content="structure python:value.output_relative_to(view.context)"\n-/></div>\n+<div class=""\n+     id=""\n+     tal:attributes="\n+       id view/id;\n+       class view/klass;\n+       style view/style;\n+       title view/title;\n+       lang view/lang;\n+       onclick view/onclick;\n+       ondblclick view/ondblclick;\n+       onmousedown view/onmousedown;\n+       onmouseup view/onmouseup;\n+       onmouseover view/onmouseover;\n+       onmousemove view/onmousemove;\n+       onmouseout view/onmouseout;\n+       onkeypress view/onkeypress;\n+       onkeydown view/onkeydown;\n+       onkeyup view/onkeyup;\n+     "\n+><tal:block define="\n+               value view/value;\n+             "\n+             condition="nocall:value"\n+             content="structure python:value.output_relative_to(view.context)"\n+  /></div>\ndiff --git a/plone/app/textfield/widget_input.pt b/plone/app/textfield/widget_input.pt\nindex 9063160..640938d 100644\n--- a/plone/app/textfield/widget_input.pt\n+++ b/plone/app/textfield/widget_input.pt\n@@ -1,72 +1,90 @@\n-<div lang="en"\n-     xml:lang="en"\n-     xmlns="http://www.w3.org/1999/xhtml"\n-     xmlns:tal="http://xml.zope.org/namespaces/tal"\n-     xmlns:metal="http://xml.zope.org/namespaces/metal"\n+<div xmlns="http://www.w3.org/1999/xhtml"\n      xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+     xmlns:metal="http://xml.zope.org/namespaces/metal"\n+     xmlns:tal="http://xml.zope.org/namespaces/tal"\n+     lang="en"\n+     xml:lang="en"\n+     tal:attributes="\n+       class view/klass;\n+       style view/style;\n+       title view/title;\n+       lang view/lang;\n+       onclick view/onclick;\n+       ondblclick view/ondblclick;\n+       onmousedown view/onmousedown;\n+       onmouseup view/onmouseup;\n+       onmouseover view/onmouseover;\n+       onmousemove view/onmousemove;\n+       onmouseout view/onmouseout;\n+       onkeypress view/onkeypress;\n+       onkeydown view/onkeydown;\n+       onkeyup view/onkeyup;\n+     "\n      i18n:domain="plone"\n-     tal:attributes="class view/klass;\n-                     style view/style;\n-                     title view/title;\n-                     lang view/lang;\n-                     onclick view/onclick;\n-                     ondblclick view/ondblclick;\n-                     onmousedown view/onmousedown;\n-                     onmouseup view/onmouseup;\n-                     onmouseover view/onmouseover;\n-                     onmousemove view/onmousemove;\n-                     onmouseout view/onmouseout;\n-                     onkeypress view/onkeypress;\n-                     onkeydown view/onkeydown;\n-                     onkeyup view/onkeyup">\n+>\n \n-    <tal:define define="fieldName view/name;\n-                        mimeType view/value/mimeType | view/field/default_mime_type;\n-                        allowedMimeTypes view/allowedMimeTypes">\n+  <tal:define define="\n+                fieldName view/name;\n+                mimeType view/value/mimeType | view/field/default_mime_type;\n+                allowedMimeTypes view/allowedMimeTypes;\n+              ">\n \n-        <div class="fieldTextFormat" tal:condition="python: len(allowedMimeTypes) > 1">\n-            <label i18n:translate="label_text_format">Text Format</label>\n+    <div class="fieldTextFormat"\n+         tal:condition="python: len(allowedMimeTypes) &gt; 1"\n+    >\n+      <label i18n:translate="label_text_format">Text Format</label>\n \n-            <select tal:attributes="id   string:${fieldName}_text_format;\n-                                    name string:${fieldName}.mimeType;">\n-                <option selected=""\n-                    tal:repeat="item allowedMimeTypes"\n-                    tal:attributes="selected python:item == mimeType and \'selected\' or None;\n-                                    value item;"\n-                    tal:content="item" />\n-            </select>\n-        </div>\n+      <select tal:attributes="\n+                id   string:${fieldName}_text_format;\n+                name string:${fieldName}.mimeType;\n+              ">\n+        <option selected\n+                tal:repeat="item allowedMimeTypes"\n+                tal:content="item"\n+                tal:attributes="\n+                  selected python:item == mimeType and \'selected\' or None;\n+                  value item;\n+                "\n+        ></option>\n+      </select>\n+    </div>\n \n-        <tal:hidden condition="python: len(allowedMimeTypes) == 1">\n-            <input type="hidden" tal:attributes="id string:${fieldName}_text_format;\n-                                                 name string:${fieldName}.mimeType;\n-                                                 value python:allowedMimeTypes[0]"/>\n-        </tal:hidden>\n-    </tal:define>\n+    <tal:hidden condition="python: len(allowedMimeTypes) == 1">\n+      <input type="hidden"\n+             tal:attributes="\n+               id string:${fieldName}_text_format;\n+               name string:${fieldName}.mimeType;\n+               value python:allowedMimeTypes[0];\n+             "\n+      />\n+    </tal:hidden>\n+  </tal:define>\n \n-    <tal:editor define="context            view/wrapped_context;\n-                        object             python:(not view.ignoreContext) and context or None;\n-                        here               nocall:context;\n-                        portal_url         nocall:context/portal_url;\n-                        portal             portal_url/getPortalObject;\n-                        text_format        view/value/mimeType | view/field/default_mime_type;\n-                        force_wysiwyg      python:True;\n-                        inputname          view/name;\n-                        inputvalue         view/value/raw | nothing;\n-                        here_url           request/getURL;\n-                        member context/portal_membership/getAuthenticatedMember;\n-                        isAnon context/@@plone_portal_state/anonymous;\n-                        editor view/getWysiwygEditor;\n-                        support_path string:nocall:here/@@${editor}_wysiwyg_support|here/${editor}_wysiwyg_support|here/${editor}/wysiwyg_support|here/portal_skins/plone_wysiwyg/wysiwyg_support;\n-                        support python: path(support_path);\n-                        tabindex           nothing;\n-                        rows               python:view.rows or 25;\n-                        cols               python:view.cols or 80;\n-                        maxlength          python:view.field.max_length or None;\n-                        field              view/field;">\n-        <div metal:use-macro="support/macros/wysiwygEditorBox">\n+  <tal:editor define="\n+                context            view/wrapped_context;\n+                object             python:(not view.ignoreContext) and context or None;\n+                here               nocall:context;\n+                portal_url         nocall:context/portal_url;\n+                portal             portal_url/getPortalObject;\n+                text_format        view/value/mimeType | view/field/default_mime_type;\n+                force_wysiwyg      python:True;\n+                inputname          view/name;\n+                inputvalue         view/value/raw | nothing;\n+                here_url           request/getURL;\n+                member context/portal_membership/getAuthenticatedMember;\n+                isAnon context/@@plone_portal_state/anonymous;\n+                editor view/getWysiwygEditor;\n+                support_path string:nocall:here/@@${editor}_wysiwyg_support|here/${editor}_wysiwyg_support|here/${editor}/wysiwyg_support|here/portal_skins/plone_wysiwyg/wysiwyg_support;\n+                support python: path(support_path);\n+                tabindex           nothing;\n+                rows               python:view.rows or 25;\n+                cols               python:view.cols or 80;\n+                maxlength          python:view.field.max_length or None;\n+                field              view/field;\n+              ">\n+    <div metal:use-macro="support/macros/wysiwygEditorBox">\n             The WYSIWYG code\n-        </div>\n-    </tal:editor>\n+    </div>\n+  </tal:editor>\n \n </div>\ndiff --git a/plone/app/textfield/widget_textarea_display.pt b/plone/app/textfield/widget_textarea_display.pt\nindex 6298c41..ba5aa84 100644\n--- a/plone/app/textfield/widget_textarea_display.pt\n+++ b/plone/app/textfield/widget_textarea_display.pt\n@@ -1,28 +1,32 @@\n <html xmlns="http://www.w3.org/1999/xhtml"\n       xmlns:tal="http://xml.zope.org/namespaces/tal"\n+      tal:define="\n+        safe_structure python:getattr(view.field, \'output_mime_type\', None) == \'text/x-html-safe\';\n+      "\n       tal:omit-tag=""\n-      tal:define="safe_structure python:getattr(view.field, \'output_mime_type\', None) == \'text/x-html-safe\'">\n-    <span id="" class=""\n-          tal:attributes="id view/id;\n-                          class view/klass;\n-                          style view/style;\n-                          title view/title;\n-                          lang view/lang;\n-                          onclick view/onclick;\n-                          ondblclick view/ondblclick;\n-                          onmousedown view/onmousedown;\n-                          onmouseup view/onmouseup;\n-                          onmouseover view/onmouseover;\n-                          onmousemove view/onmousemove;\n-                          onmouseout view/onmouseout;\n-                          onkeypress view/onkeypress;\n-                          onkeydown view/onkeydown;\n-                          onkeyup view/onkeyup"><tal:block\n-          condition="view/value"><tal:block\n-            tal:condition="safe_structure"\n-            content="structure view/value"\n-          ></tal:block><tal:block\n-            condition="not: safe_structure"\n-            content="view/value"\n-          ></tal:block></tal:block></span>\n+>\n+  <span class=""\n+        id=""\n+        tal:attributes="\n+          id view/id;\n+          class view/klass;\n+          style view/style;\n+          title view/title;\n+          lang view/lang;\n+          onclick view/onclick;\n+          ondblclick view/ondblclick;\n+          onmousedown view/onmousedown;\n+          onmouseup view/onmouseup;\n+          onmouseover view/onmouseover;\n+          onmousemove view/onmousemove;\n+          onmouseout view/onmouseout;\n+          onkeypress view/onkeypress;\n+          onkeydown view/onkeydown;\n+          onkeyup view/onkeyup;\n+        "\n+  ><tal:block condition="view/value"><tal:block tal:condition="safe_structure"\n+                 content="structure view/value"\n+      /><tal:block condition="not: safe_structure"\n+                 content="view/value"\n+      /></tal:block></span>\n </html>\n'

Repository: plone.app.textfield


Branch: refs/heads/master
Date: 2023-03-18T00:54:31+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.textfield/commit/0994d3610e8715ba36115f8d10e3be62b4aac414

feat: codespell

Files changed:
M CHANGES.rst

b"diff --git a/CHANGES.rst b/CHANGES.rst\nindex fc643d7..931499a 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -188,7 +188,7 @@ Fixes:\n   while still supporting normal portal_properties access for Plone < 5.\n   [thet]\n \n-- Resolved an interesting circular import case, which wasnt effective because\n+- Resolved an interesting circular import case, which wasn't effective because\n   of sort order of imports\n   [thet]\n \n"

Repository: plone.app.textfield


Branch: refs/heads/master
Date: 2023-03-18T01:18:06+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.textfield/commit/eded6f2ba84d398db232fc3026409b83e9004b21

fix(tox): adapt extra name

Files changed:
M tox.ini

b'diff --git a/tox.ini b/tox.ini\nindex eca8603..ca6fe32 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -47,4 +47,4 @@ deps =\n commands =\n     zope-testrunner --test-path={toxinidir} -s plone.app.textfield\n extras =\n-    test\n+    tests\n'

Repository: plone.app.textfield


Branch: refs/heads/master
Date: 2023-03-18T01:23:19+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.textfield/commit/4b167a2f67666681bb55e82487e2a180f823b7de

fix: adapt tests

Files changed:
M plone/app/textfield/field.rst
M plone/app/textfield/handler.rst
M plone/app/textfield/marshaler.rst
M plone/app/textfield/richtext_widget.rst
M plone/app/textfield/tests.py

b'diff --git a/plone/app/textfield/field.rst b/plone/app/textfield/field.rst\nindex 5c70591..939f2cb 100644\n--- a/plone/app/textfield/field.rst\n+++ b/plone/app/textfield/field.rst\n@@ -101,12 +101,12 @@ Products.PortalTransforms, which in turn comes with Plone.\n Let\'s now access the output of our previously constructed value object again:\n \n     >>> value.output\n-    u\'SOME PLAIN TEXT\'\n+    \'SOME PLAIN TEXT\'\n \n It is of course possible to get the raw value:\n \n     >>> value.raw\n-    u\'Some plain text\'\n+    \'Some plain text\'\n \n Or to get the value encoded:\n \n@@ -151,11 +151,11 @@ default MIME types set on the field.\n     >>> value.outputMimeType\n     \'text/x-uppercase\'\n     >>> value.raw\n-    u\'A plain text string\'\n+    \'A plain text string\'\n     >>> value.raw_encoded\n     b\'A plain text string\'\n     >>> value.output\n-    u\'A PLAIN TEXT STRING\'\n+    \'A PLAIN TEXT STRING\'\n \n Validation\n ----------\n@@ -211,7 +211,7 @@ MIME types.\n     RichTextValue object. (Did you mean <attribute>.raw or <attribute>.output?)\n \n     >>> default_field.default.raw\n-    u\'Default value\'\n+    \'Default value\'\n     >>> default_field.default.outputMimeType\n     \'text/x-uppercase\'\n     >>> default_field.default.mimeType\ndiff --git a/plone/app/textfield/handler.rst b/plone/app/textfield/handler.rst\nindex ca8c17f..6680f04 100644\n--- a/plone/app/textfield/handler.rst\n+++ b/plone/app/textfield/handler.rst\n@@ -47,7 +47,7 @@ Then, let\'s test the field\n     ...     allowed_mime_types=(\'text/plain\', \'text/html\',))\n     >>> fieldType = IFieldNameExtractor(field)()\n     >>> handler = getUtility(IFieldExportImportHandler, name=fieldType)\n-    >>> element = handler.write(field, u\'dummy\', fieldType) #doctest: +ELLIPSIS\n+    >>> element = handler.write(field, \'dummy\', fieldType) #doctest: +ELLIPSIS\n     >>> print(prettyXML(element))\n     <field name="dummy" type="plone.app.textfield.RichText">\n       <allowed_mime_types>\n@@ -90,15 +90,15 @@ To import:\n     >>> reciprocal.__name__\n     \'dummy\'\n     >>> reciprocal.title\n-    u\'Test\'\n+    \'Test\'\n     >>> reciprocal.description\n-    u\'Test desc\'\n+    \'Test desc\'\n     >>> reciprocal.required\n     False\n     >>> reciprocal.readonly\n     True\n     >>> reciprocal.default.raw\n-    u\'Test default\'\n+    \'Test default\'\n     >>> reciprocal.missing_value is None\n     True\n     >>> reciprocal.default_mime_type\ndiff --git a/plone/app/textfield/marshaler.rst b/plone/app/textfield/marshaler.rst\nindex 4b6d694..e4b857e 100644\n--- a/plone/app/textfield/marshaler.rst\n+++ b/plone/app/textfield/marshaler.rst\n@@ -40,7 +40,7 @@ we\'ll simply provide the output value directly::\n     >>> from zope.interface import implementer\n     >>> @implementer(ITestContent)\n     ... class TestContent(object):\n-    ...     _text = RichTextValue(u"Some \\xd8 plain text", \'text/plain\', \'text/html\', \'utf-8\', u\'<p>Some \\xd8 plain text</p>\')\n+    ...     _text = RichTextValue(u"Some \\xd8 plain text", \'text/plain\', \'text/html\', \'utf-8\', \'<p>Some \\xd8 plain text</p>\')\n \n     >>> t = TestContent()\n \n@@ -57,7 +57,7 @@ The other way around::\n \n     >>> decoded = marshaler.decode(b\'Some nei\\xc3\\x9f plain text\', charset=\'utf-8\', contentType=\'text/plain\')\n     >>> decoded.raw\n-    u\'Some nei\\xdf plain text\'\n+    \'Some nei\\xdf plain text\'\n     >>> decoded.mimeType\n     \'text/plain\'\n     >>> decoded.outputMimeType\n@@ -76,7 +76,7 @@ the field\'s default type is used::\n \n     >>> decoded = marshaler.decode(b\'Some nei\\xc3\\x9f plain text\')\n     >>> decoded.raw\n-    u\'Some nei\\xdf plain text\'\n+    \'Some nei\\xdf plain text\'\n     >>> decoded.mimeType\n     \'text/plain\'\n     >>> decoded.outputMimeType\n@@ -110,7 +110,7 @@ Let\'s now use this message to construct a new object::\n     >>> from plone.rfc822 import initializeObjectFromSchema\n     >>> initializeObjectFromSchema(newContent, ITestContent, inputMessage)\n     >>> newContent._text.raw\n-    u\'Some \\xd8 plain text\'\n+    \'Some \\xd8 plain text\'\n     >>> newContent._text.mimeType\n     \'text/plain\'\n     >>> newContent._text.outputMimeType\ndiff --git a/plone/app/textfield/richtext_widget.rst b/plone/app/textfield/richtext_widget.rst\nindex ea12d85..18cf977 100644\n--- a/plone/app/textfield/richtext_widget.rst\n+++ b/plone/app/textfield/richtext_widget.rst\n@@ -48,12 +48,13 @@ We also need to register the template for at least the widget and request:\n If we render the widget we get the HTML:\n   >>> widget.update()\n   >>> print(widget.render())\n-  <div xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" class="richTextWidget">\n-    <input type="hidden" id="text_text_format" name="text.mimeType" value="text/html"/>\n-    <div>\n-      <textarea name="text" rows="25" class="pat-tinymce" id="text">&lt;p&gt;Hello world&lt;/p&gt;</textarea>\n-    </div>\n-  </div>\n+  <div xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" class="richTextWidget" >\n+  ...<input type="hidden" id="text_text_format" name="text.mimeType" value="text/html" />\n+  ...<div>\n+  ...<textarea name="text" rows="25" class="pat-tinymce" id="text">&lt;p&gt;Hello world&lt;/p&gt;</textarea>\n+  ...</div>\n+  ...</div>\n+\n   >>> from zope.component import getGlobalSiteManager\n   >>> gsm = getGlobalSiteManager()\n   >>> gsm.unregisterAdapter(factory,\ndiff --git a/plone/app/textfield/tests.py b/plone/app/textfield/tests.py\nindex 5fca07c..8fdbe53 100644\n--- a/plone/app/textfield/tests.py\n+++ b/plone/app/textfield/tests.py\n@@ -3,7 +3,6 @@\n \n import doctest\n import plone.app.textfield\n-import re\n import unittest\n \n \n@@ -346,14 +345,6 @@ def test_getSize(self):\n         self.assertEqual(3, value.getSize())\n \n \n-class Py23DocChecker(doctest.OutputChecker):\n-    def check_output(self, want, got, optionflags):\n-        want = re.sub("u\'(.*?)\'", "\'\\\\1\'", want)\n-        want = re.sub(\'u"(.*?)"\', \'"\\\\1"\', want)\n-\n-        return doctest.OutputChecker.check_output(self, want, got, optionflags)\n-\n-\n class TestTextfield(unittest.TestCase):\n     def test_getWysiwygEditor(self):\n         from plone.app.textfield.utils import getWysiwygEditor\n@@ -380,7 +371,6 @@ def test_suite():\n                 doctest.DocFileSuite(\n                     doctestfile,\n                     optionflags=doctest.ELLIPSIS,\n-                    checker=Py23DocChecker(),\n                 ),\n                 layer=testing.PLONE_FIXTURE,\n             )\n'

Repository: plone.app.textfield


Branch: refs/heads/master
Date: 2023-03-21T16:15:43+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.textfield/commit/bed29990ec13a904d9ec80fe2b9b6cbdebd8fff9

Merge pull request #49 from plone/config-with-default-template-ac42cf74

Config with default template

Files changed:
A .editorconfig
A .meta.toml
A .pre-commit-config.yaml
A news/80cf330f.internal
A tox.ini
M CHANGES.rst
M plone/app/textfield/__init__.py
M plone/app/textfield/browser.zcml
M plone/app/textfield/configure.zcml
M plone/app/textfield/editor.zcml
M plone/app/textfield/field.rst
M plone/app/textfield/handler.rst
M plone/app/textfield/handler.zcml
M plone/app/textfield/marshaler.rst
M plone/app/textfield/marshaler.zcml
M plone/app/textfield/richtext_widget.rst
M plone/app/textfield/tests.py
M plone/app/textfield/transform.zcml
M plone/app/textfield/widget.zcml
M plone/app/textfield/widget_display.pt
M plone/app/textfield/widget_input.pt
M plone/app/textfield/widget_textarea_display.pt
M pyproject.toml
M setup.cfg

b'diff --git a/.editorconfig b/.editorconfig\nnew file mode 100644\nindex 0000000..b4158b8\n--- /dev/null\n+++ b/.editorconfig\n@@ -0,0 +1,39 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+#\n+# EditorConfig Configuration file, for more details see:\n+# http://EditorConfig.org\n+# EditorConfig is a convention description, that could be interpreted\n+# by multiple editors to enforce common coding conventions for specific\n+# file types\n+\n+# top-most EditorConfig file:\n+# Will ignore other EditorConfig files in Home directory or upper tree level.\n+root = true\n+\n+\n+[*]  # For All Files\n+# Unix-style newlines with a newline ending every file\n+end_of_line = lf\n+insert_final_newline = true\n+trim_trailing_whitespace = true\n+# Set default charset\n+charset = utf-8\n+# Indent style default\n+indent_style = space\n+# Max Line Length - a hard line wrap, should be disabled\n+max_line_length = off\n+\n+[*.{py,cfg,ini}]\n+# 4 space indentation\n+indent_size = 4\n+\n+[*.{yml,zpt,pt,dtml,zcml}]\n+# 2 space indentation\n+indent_size = 2\n+\n+[{Makefile,.gitmodules}]\n+# Tab indentation (no size specified, but view as 4 spaces)\n+indent_style = tab\n+indent_size = unset\n+tab_width = unset\ndiff --git a/.meta.toml b/.meta.toml\nnew file mode 100644\nindex 0000000..697a54c\n--- /dev/null\n+++ b/.meta.toml\n@@ -0,0 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[meta]\n+template = "default"\n+commit-id = "80cf330f"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nnew file mode 100644\nindex 0000000..582f8ac\n--- /dev/null\n+++ b/.pre-commit-config.yaml\n@@ -0,0 +1,42 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+ci:\n+    autofix_prs: false\n+    autoupdate_schedule: monthly\n+\n+repos:\n+-   repo: https://github.com/asottile/pyupgrade\n+    rev: v3.3.1\n+    hooks:\n+    -   id: pyupgrade\n+        args: [--py38-plus]\n+-   repo: https://github.com/pycqa/isort\n+    rev: 5.12.0\n+    hooks:\n+    -   id: isort\n+-   repo: https://github.com/psf/black\n+    rev: 23.1.0\n+    hooks:\n+    -   id: black\n+-   repo: https://github.com/collective/zpretty\n+    rev: 3.0.2\n+    hooks:\n+    -   id: zpretty\n+-   repo: https://github.com/PyCQA/flake8\n+    rev: 6.0.0\n+    hooks:\n+    -   id: flake8\n+-   repo: https://github.com/codespell-project/codespell\n+    rev: v2.2.2\n+    hooks:\n+    -   id: codespell\n+        additional_dependencies:\n+          - tomli\n+-   repo: https://github.com/mgedmin/check-manifest\n+    rev: "0.49"\n+    hooks:\n+    -   id: check-manifest\n+-   repo: https://github.com/regebro/pyroma\n+    rev: "4.2"\n+    hooks:\n+    -   id: pyroma\ndiff --git a/CHANGES.rst b/CHANGES.rst\nindex fc643d7..931499a 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -188,7 +188,7 @@ Fixes:\n   while still supporting normal portal_properties access for Plone < 5.\n   [thet]\n \n-- Resolved an interesting circular import case, which wasnt effective because\n+- Resolved an interesting circular import case, which wasn\'t effective because\n   of sort order of imports\n   [thet]\n \ndiff --git a/news/80cf330f.internal b/news/80cf330f.internal\nnew file mode 100644\nindex 0000000..c08f539\n--- /dev/null\n+++ b/news/80cf330f.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/plone/app/textfield/__init__.py b/plone/app/textfield/__init__.py\nindex e8e39e0..18a8735 100644\n--- a/plone/app/textfield/__init__.py\n+++ b/plone/app/textfield/__init__.py\n@@ -29,7 +29,7 @@ def __init__(\n         allowed_mime_types=None,\n         max_length=None,\n         schema=IRichTextValue,\n-        **kw\n+        **kw,\n     ):\n         self.default_mime_type = default_mime_type\n         self.output_mime_type = output_mime_type\ndiff --git a/plone/app/textfield/browser.zcml b/plone/app/textfield/browser.zcml\nindex 63727c8..1f20f39 100644\n--- a/plone/app/textfield/browser.zcml\n+++ b/plone/app/textfield/browser.zcml\n@@ -1,14 +1,15 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:browser="http://namespaces.zope.org/browser"\n-    i18n_domain="plone.app.textfield">\n+    i18n_domain="plone.app.textfield"\n+    >\n \n   <!-- Generic transform browser view -->\n   <browser:page\n-      for="*"\n       name="text-transform"\n-      permission="zope2.View"\n+      for="*"\n       class=".browser.Transform"\n+      permission="zope2.View"\n       />\n \n </configure>\ndiff --git a/plone/app/textfield/configure.zcml b/plone/app/textfield/configure.zcml\nindex e3bb0f6..eee27de 100644\n--- a/plone/app/textfield/configure.zcml\n+++ b/plone/app/textfield/configure.zcml\n@@ -1,31 +1,37 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:zcml="http://namespaces.zope.org/zcml"\n-    i18n_domain="plone.app.textfield">\n+    i18n_domain="plone.app.textfield"\n+    >\n \n   <!-- Configure plone.supermodel support if available -->\n-  <include zcml:condition="installed plone.supermodel"\n+  <include\n       file="handler.zcml"\n+      zcml:condition="installed plone.supermodel"\n       />\n \n   <!-- Configure PortalTransforms based transformer if available -->\n-  <include zcml:condition="installed Products.PortalTransforms"\n+  <include\n       file="transform.zcml"\n+      zcml:condition="installed Products.PortalTransforms"\n       />\n \n   <!-- Configure z3c.form widget if z3c.form is installed -->\n-  <include zcml:condition="installed z3c.form"\n+  <include\n       file="widget.zcml"\n+      zcml:condition="installed z3c.form"\n       />\n \n   <!-- Configure plone.rfc822 marshaler if installed -->\n-  <include zcml:condition="installed plone.rfc822"\n+  <include\n       file="marshaler.zcml"\n+      zcml:condition="installed plone.rfc822"\n       />\n \n   <!-- Configure plone.schemaeditor field factory if installed -->\n-  <include zcml:condition="installed plone.schemaeditor"\n+  <include\n       file="editor.zcml"\n+      zcml:condition="installed plone.schemaeditor"\n       />\n \n   <!-- Configure transform invocation browser view -->\ndiff --git a/plone/app/textfield/editor.zcml b/plone/app/textfield/editor.zcml\nindex e5f54d6..8ea3a6d 100644\n--- a/plone/app/textfield/editor.zcml\n+++ b/plone/app/textfield/editor.zcml\n@@ -1,6 +1,7 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n-    i18n_domain="plone.app.textfield">\n+    i18n_domain="plone.app.textfield"\n+    >\n \n   <class class=".RichText">\n     <implements interface=".editor.IRichText" />\ndiff --git a/plone/app/textfield/field.rst b/plone/app/textfield/field.rst\nindex 5c70591..939f2cb 100644\n--- a/plone/app/textfield/field.rst\n+++ b/plone/app/textfield/field.rst\n@@ -101,12 +101,12 @@ Products.PortalTransforms, which in turn comes with Plone.\n Let\'s now access the output of our previously constructed value object again:\n \n     >>> value.output\n-    u\'SOME PLAIN TEXT\'\n+    \'SOME PLAIN TEXT\'\n \n It is of course possible to get the raw value:\n \n     >>> value.raw\n-    u\'Some plain text\'\n+    \'Some plain text\'\n \n Or to get the value encoded:\n \n@@ -151,11 +151,11 @@ default MIME types set on the field.\n     >>> value.outputMimeType\n     \'text/x-uppercase\'\n     >>> value.raw\n-    u\'A plain text string\'\n+    \'A plain text string\'\n     >>> value.raw_encoded\n     b\'A plain text string\'\n     >>> value.output\n-    u\'A PLAIN TEXT STRING\'\n+    \'A PLAIN TEXT STRING\'\n \n Validation\n ----------\n@@ -211,7 +211,7 @@ MIME types.\n     RichTextValue object. (Did you mean <attribute>.raw or <attribute>.output?)\n \n     >>> default_field.default.raw\n-    u\'Default value\'\n+    \'Default value\'\n     >>> default_field.default.outputMimeType\n     \'text/x-uppercase\'\n     >>> default_field.default.mimeType\ndiff --git a/plone/app/textfield/handler.rst b/plone/app/textfield/handler.rst\nindex ca8c17f..6680f04 100644\n--- a/plone/app/textfield/handler.rst\n+++ b/plone/app/textfield/handler.rst\n@@ -47,7 +47,7 @@ Then, let\'s test the field\n     ...     allowed_mime_types=(\'text/plain\', \'text/html\',))\n     >>> fieldType = IFieldNameExtractor(field)()\n     >>> handler = getUtility(IFieldExportImportHandler, name=fieldType)\n-    >>> element = handler.write(field, u\'dummy\', fieldType) #doctest: +ELLIPSIS\n+    >>> element = handler.write(field, \'dummy\', fieldType) #doctest: +ELLIPSIS\n     >>> print(prettyXML(element))\n     <field name="dummy" type="plone.app.textfield.RichText">\n       <allowed_mime_types>\n@@ -90,15 +90,15 @@ To import:\n     >>> reciprocal.__name__\n     \'dummy\'\n     >>> reciprocal.title\n-    u\'Test\'\n+    \'Test\'\n     >>> reciprocal.description\n-    u\'Test desc\'\n+    \'Test desc\'\n     >>> reciprocal.required\n     False\n     >>> reciprocal.readonly\n     True\n     >>> reciprocal.default.raw\n-    u\'Test default\'\n+    \'Test default\'\n     >>> reciprocal.missing_value is None\n     True\n     >>> reciprocal.default_mime_type\ndiff --git a/plone/app/textfield/handler.zcml b/plone/app/textfield/handler.zcml\nindex d8a15c4..8a99d37 100644\n--- a/plone/app/textfield/handler.zcml\n+++ b/plone/app/textfield/handler.zcml\n@@ -1,14 +1,13 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n-    i18n_domain="plone.app.textfield">\n+    i18n_domain="plone.app.textfield"\n+    >\n \n   <!-- plone.supermodel configuration -->\n   <utility\n-      component=".handler.RichTextHandler"\n       name="plone.app.textfield.RichText"\n+      component=".handler.RichTextHandler"\n       />\n-  <adapter\n-      factory=".handler.RichTextToUnicode"\n-      />\n+  <adapter factory=".handler.RichTextToUnicode" />\n \n </configure>\ndiff --git a/plone/app/textfield/marshaler.rst b/plone/app/textfield/marshaler.rst\nindex 4b6d694..e4b857e 100644\n--- a/plone/app/textfield/marshaler.rst\n+++ b/plone/app/textfield/marshaler.rst\n@@ -40,7 +40,7 @@ we\'ll simply provide the output value directly::\n     >>> from zope.interface import implementer\n     >>> @implementer(ITestContent)\n     ... class TestContent(object):\n-    ...     _text = RichTextValue(u"Some \\xd8 plain text", \'text/plain\', \'text/html\', \'utf-8\', u\'<p>Some \\xd8 plain text</p>\')\n+    ...     _text = RichTextValue(u"Some \\xd8 plain text", \'text/plain\', \'text/html\', \'utf-8\', \'<p>Some \\xd8 plain text</p>\')\n \n     >>> t = TestContent()\n \n@@ -57,7 +57,7 @@ The other way around::\n \n     >>> decoded = marshaler.decode(b\'Some nei\\xc3\\x9f plain text\', charset=\'utf-8\', contentType=\'text/plain\')\n     >>> decoded.raw\n-    u\'Some nei\\xdf plain text\'\n+    \'Some nei\\xdf plain text\'\n     >>> decoded.mimeType\n     \'text/plain\'\n     >>> decoded.outputMimeType\n@@ -76,7 +76,7 @@ the field\'s default type is used::\n \n     >>> decoded = marshaler.decode(b\'Some nei\\xc3\\x9f plain text\')\n     >>> decoded.raw\n-    u\'Some nei\\xdf plain text\'\n+    \'Some nei\\xdf plain text\'\n     >>> decoded.mimeType\n     \'text/plain\'\n     >>> decoded.outputMimeType\n@@ -110,7 +110,7 @@ Let\'s now use this message to construct a new object::\n     >>> from plone.rfc822 import initializeObjectFromSchema\n     >>> initializeObjectFromSchema(newContent, ITestContent, inputMessage)\n     >>> newContent._text.raw\n-    u\'Some \\xd8 plain text\'\n+    \'Some \\xd8 plain text\'\n     >>> newContent._text.mimeType\n     \'text/plain\'\n     >>> newContent._text.outputMimeType\ndiff --git a/plone/app/textfield/marshaler.zcml b/plone/app/textfield/marshaler.zcml\nindex 06f20c8..f014b26 100644\n--- a/plone/app/textfield/marshaler.zcml\n+++ b/plone/app/textfield/marshaler.zcml\n@@ -1,6 +1,7 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n-    i18n_domain="plone.app.textfield">\n+    i18n_domain="plone.app.textfield"\n+    >\n \n   <adapter factory=".marshaler.RichTextFieldMarshaler" />\n \ndiff --git a/plone/app/textfield/richtext_widget.rst b/plone/app/textfield/richtext_widget.rst\nindex ea12d85..18cf977 100644\n--- a/plone/app/textfield/richtext_widget.rst\n+++ b/plone/app/textfield/richtext_widget.rst\n@@ -48,12 +48,13 @@ We also need to register the template for at least the widget and request:\n If we render the widget we get the HTML:\n   >>> widget.update()\n   >>> print(widget.render())\n-  <div xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" class="richTextWidget">\n-    <input type="hidden" id="text_text_format" name="text.mimeType" value="text/html"/>\n-    <div>\n-      <textarea name="text" rows="25" class="pat-tinymce" id="text">&lt;p&gt;Hello world&lt;/p&gt;</textarea>\n-    </div>\n-  </div>\n+  <div xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" class="richTextWidget" >\n+  ...<input type="hidden" id="text_text_format" name="text.mimeType" value="text/html" />\n+  ...<div>\n+  ...<textarea name="text" rows="25" class="pat-tinymce" id="text">&lt;p&gt;Hello world&lt;/p&gt;</textarea>\n+  ...</div>\n+  ...</div>\n+\n   >>> from zope.component import getGlobalSiteManager\n   >>> gsm = getGlobalSiteManager()\n   >>> gsm.unregisterAdapter(factory,\ndiff --git a/plone/app/textfield/tests.py b/plone/app/textfield/tests.py\nindex 5fca07c..8fdbe53 100644\n--- a/plone/app/textfield/tests.py\n+++ b/plone/app/textfield/tests.py\n@@ -3,7 +3,6 @@\n \n import doctest\n import plone.app.textfield\n-import re\n import unittest\n \n \n@@ -346,14 +345,6 @@ def test_getSize(self):\n         self.assertEqual(3, value.getSize())\n \n \n-class Py23DocChecker(doctest.OutputChecker):\n-    def check_output(self, want, got, optionflags):\n-        want = re.sub("u\'(.*?)\'", "\'\\\\1\'", want)\n-        want = re.sub(\'u"(.*?)"\', \'"\\\\1"\', want)\n-\n-        return doctest.OutputChecker.check_output(self, want, got, optionflags)\n-\n-\n class TestTextfield(unittest.TestCase):\n     def test_getWysiwygEditor(self):\n         from plone.app.textfield.utils import getWysiwygEditor\n@@ -380,7 +371,6 @@ def test_suite():\n                 doctest.DocFileSuite(\n                     doctestfile,\n                     optionflags=doctest.ELLIPSIS,\n-                    checker=Py23DocChecker(),\n                 ),\n                 layer=testing.PLONE_FIXTURE,\n             )\ndiff --git a/plone/app/textfield/transform.zcml b/plone/app/textfield/transform.zcml\nindex f1d6cc1..82533f7 100644\n--- a/plone/app/textfield/transform.zcml\n+++ b/plone/app/textfield/transform.zcml\n@@ -1,6 +1,7 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n-    i18n_domain="plone.app.textfield">\n+    i18n_domain="plone.app.textfield"\n+    >\n \n   <adapter\n       factory=".transform.PortalTransformsTransformer"\ndiff --git a/plone/app/textfield/widget.zcml b/plone/app/textfield/widget.zcml\nindex a477660..c695d2f 100644\n--- a/plone/app/textfield/widget.zcml\n+++ b/plone/app/textfield/widget.zcml\n@@ -1,13 +1,14 @@\n <configure\n-    i18n_domain="plone.app.textfield"\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:browser="http://namespaces.zope.org/browser"\n     xmlns:z3c="http://namespaces.zope.org/z3c"\n-    xmlns:zcml="http://namespaces.zope.org/zcml">\n+    xmlns:zcml="http://namespaces.zope.org/zcml"\n+    i18n_domain="plone.app.textfield"\n+    >\n   <include\n-      file="meta.zcml"\n       package="z3c.form"\n-  />\n+      file="meta.zcml"\n+      />\n   <include package="z3c.form" />\n   <!--\n     register data converter for RichTextWidget\n@@ -16,7 +17,7 @@\n       factory=".widget.RichTextConverter"\n       for=".interfaces.IRichText\n            .widget.IRichTextWidget"\n-  />\n+      />\n   <!--\n     also register a data converter for the basic z3c.form ITextAreaWidget,\n     so it can be used without tinymce, i.e. in order to convert from\n@@ -26,28 +27,28 @@\n       factory=".widget.RichTextAreaConverter"\n       for=".interfaces.IRichText\n            z3c.form.interfaces.ITextAreaWidget"\n-  />\n+      />\n   <!--\n       register new widget\n   -->\n   <class class=".widget.RichTextWidget">\n     <require\n-        interface=".widget.IRichTextWidget"\n         permission="zope.Public"\n-    />\n+        interface=".widget.IRichTextWidget"\n+        />\n   </class>\n   <z3c:widgetTemplate\n+      widget=".widget.IRichTextWidget"\n+      template="widget_display.pt"\n       layer="z3c.form.interfaces.IFormLayer"\n       mode="display"\n-      template="widget_display.pt"\n-      widget=".widget.IRichTextWidget"\n-  />\n+      />\n   <z3c:widgetTemplate\n+      widget=".widget.IRichTextWidget"\n+      template="widget_input.pt"\n       layer="z3c.form.interfaces.IFormLayer"\n       mode="input"\n-      template="widget_input.pt"\n-      widget=".widget.IRichTextWidget"\n-  />\n+      />\n   <adapter factory=".widget.RichTextFieldWidget" />\n   <!--\n     register alternative template for ITextAreaWidget display in order to\n@@ -58,16 +59,16 @@\n   -->\n   <configure zcml:condition="installed plone.app.z3cform">\n     <z3c:widgetTemplate\n-      layer="plone.app.z3cform.interfaces.IPloneFormLayer"\n-      mode="display"\n-      template="widget_textarea_display.pt"\n-      widget="z3c.form.interfaces.ITextAreaWidget"\n-    />\n+        widget="z3c.form.interfaces.ITextAreaWidget"\n+        template="widget_textarea_display.pt"\n+        layer="plone.app.z3cform.interfaces.IPloneFormLayer"\n+        mode="display"\n+        />\n     <z3c:widgetTemplate\n-      layer="plone.app.z3cform.interfaces.IPloneFormLayer"\n-      mode="display"\n-      template="widget_display.pt"\n-      widget=".widget.IRichTextWidget"\n-    />\n+        widget=".widget.IRichTextWidget"\n+        template="widget_display.pt"\n+        layer="plone.app.z3cform.interfaces.IPloneFormLayer"\n+        mode="display"\n+        />\n   </configure>\n </configure>\ndiff --git a/plone/app/textfield/widget_display.pt b/plone/app/textfield/widget_display.pt\nindex e7c6911..3052ac8 100644\n--- a/plone/app/textfield/widget_display.pt\n+++ b/plone/app/textfield/widget_display.pt\n@@ -1,18 +1,25 @@\n-<div id="" class=""\n-      tal:attributes="id view/id;\n-                      class view/klass;\n-                      style view/style;\n-                      title view/title;\n-                      lang view/lang;\n-                      onclick view/onclick;\n-                      ondblclick view/ondblclick;\n-                      onmousedown view/onmousedown;\n-                      onmouseup view/onmouseup;\n-                      onmouseover view/onmouseover;\n-                      onmousemove view/onmousemove;\n-                      onmouseout view/onmouseout;\n-                      onkeypress view/onkeypress;\n-                      onkeydown view/onkeydown;\n-                      onkeyup view/onkeyup"><tal:block\n-      define="value view/value" condition="nocall:value" content="structure python:value.output_relative_to(view.context)"\n-/></div>\n+<div class=""\n+     id=""\n+     tal:attributes="\n+       id view/id;\n+       class view/klass;\n+       style view/style;\n+       title view/title;\n+       lang view/lang;\n+       onclick view/onclick;\n+       ondblclick view/ondblclick;\n+       onmousedown view/onmousedown;\n+       onmouseup view/onmouseup;\n+       onmouseover view/onmouseover;\n+       onmousemove view/onmousemove;\n+       onmouseout view/onmouseout;\n+       onkeypress view/onkeypress;\n+       onkeydown view/onkeydown;\n+       onkeyup view/onkeyup;\n+     "\n+><tal:block define="\n+               value view/value;\n+             "\n+             condition="nocall:value"\n+             content="structure python:value.output_relative_to(view.context)"\n+  /></div>\ndiff --git a/plone/app/textfield/widget_input.pt b/plone/app/textfield/widget_input.pt\nindex 9063160..640938d 100644\n--- a/plone/app/textfield/widget_input.pt\n+++ b/plone/app/textfield/widget_input.pt\n@@ -1,72 +1,90 @@\n-<div lang="en"\n-     xml:lang="en"\n-     xmlns="http://www.w3.org/1999/xhtml"\n-     xmlns:tal="http://xml.zope.org/namespaces/tal"\n-     xmlns:metal="http://xml.zope.org/namespaces/metal"\n+<div xmlns="http://www.w3.org/1999/xhtml"\n      xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+     xmlns:metal="http://xml.zope.org/namespaces/metal"\n+     xmlns:tal="http://xml.zope.org/namespaces/tal"\n+     lang="en"\n+     xml:lang="en"\n+     tal:attributes="\n+       class view/klass;\n+       style view/style;\n+       title view/title;\n+       lang view/lang;\n+       onclick view/onclick;\n+       ondblclick view/ondblclick;\n+       onmousedown view/onmousedown;\n+       onmouseup view/onmouseup;\n+       onmouseover view/onmouseover;\n+       onmousemove view/onmousemove;\n+       onmouseout view/onmouseout;\n+       onkeypress view/onkeypress;\n+       onkeydown view/onkeydown;\n+       onkeyup view/onkeyup;\n+     "\n      i18n:domain="plone"\n-     tal:attributes="class view/klass;\n-                     style view/style;\n-                     title view/title;\n-                     lang view/lang;\n-                     onclick view/onclick;\n-                     ondblclick view/ondblclick;\n-                     onmousedown view/onmousedown;\n-                     onmouseup view/onmouseup;\n-                     onmouseover view/onmouseover;\n-                     onmousemove view/onmousemove;\n-                     onmouseout view/onmouseout;\n-                     onkeypress view/onkeypress;\n-                     onkeydown view/onkeydown;\n-                     onkeyup view/onkeyup">\n+>\n \n-    <tal:define define="fieldName view/name;\n-                        mimeType view/value/mimeType | view/field/default_mime_type;\n-                        allowedMimeTypes view/allowedMimeTypes">\n+  <tal:define define="\n+                fieldName view/name;\n+                mimeType view/value/mimeType | view/field/default_mime_type;\n+                allowedMimeTypes view/allowedMimeTypes;\n+              ">\n \n-        <div class="fieldTextFormat" tal:condition="python: len(allowedMimeTypes) > 1">\n-            <label i18n:translate="label_text_format">Text Format</label>\n+    <div class="fieldTextFormat"\n+         tal:condition="python: len(allowedMimeTypes) &gt; 1"\n+    >\n+      <label i18n:translate="label_text_format">Text Format</label>\n \n-            <select tal:attributes="id   string:${fieldName}_text_format;\n-                                    name string:${fieldName}.mimeType;">\n-                <option selected=""\n-                    tal:repeat="item allowedMimeTypes"\n-                    tal:attributes="selected python:item == mimeType and \'selected\' or None;\n-                                    value item;"\n-                    tal:content="item" />\n-            </select>\n-        </div>\n+      <select tal:attributes="\n+                id   string:${fieldName}_text_format;\n+                name string:${fieldName}.mimeType;\n+              ">\n+        <option selected\n+                tal:repeat="item allowedMimeTypes"\n+                tal:content="item"\n+                tal:attributes="\n+                  selected python:item == mimeType and \'selected\' or None;\n+                  value item;\n+                "\n+        ></option>\n+      </select>\n+    </div>\n \n-        <tal:hidden condition="python: len(allowedMimeTypes) == 1">\n-            <input type="hidden" tal:attributes="id string:${fieldName}_text_format;\n-                                                 name string:${fieldName}.mimeType;\n-                                                 value python:allowedMimeTypes[0]"/>\n-        </tal:hidden>\n-    </tal:define>\n+    <tal:hidden condition="python: len(allowedMimeTypes) == 1">\n+      <input type="hidden"\n+             tal:attributes="\n+               id string:${fieldName}_text_format;\n+               name string:${fieldName}.mimeType;\n+               value python:allowedMimeTypes[0];\n+             "\n+      />\n+    </tal:hidden>\n+  </tal:define>\n \n-    <tal:editor define="context            view/wrapped_context;\n-                        object             python:(not view.ignoreContext) and context or None;\n-                        here               nocall:context;\n-                        portal_url         nocall:context/portal_url;\n-                        portal             portal_url/getPortalObject;\n-                        text_format        view/value/mimeType | view/field/default_mime_type;\n-                        force_wysiwyg      python:True;\n-                        inputname          view/name;\n-                        inputvalue         view/value/raw | nothing;\n-                        here_url           request/getURL;\n-                        member context/portal_membership/getAuthenticatedMember;\n-                        isAnon context/@@plone_portal_state/anonymous;\n-                        editor view/getWysiwygEditor;\n-                        support_path string:nocall:here/@@${editor}_wysiwyg_support|here/${editor}_wysiwyg_support|here/${editor}/wysiwyg_support|here/portal_skins/plone_wysiwyg/wysiwyg_support;\n-                        support python: path(support_path);\n-                        tabindex           nothing;\n-                        rows               python:view.rows or 25;\n-                        cols               python:view.cols or 80;\n-                        maxlength          python:view.field.max_length or None;\n-                        field              view/field;">\n-        <div metal:use-macro="support/macros/wysiwygEditorBox">\n+  <tal:editor define="\n+                context            view/wrapped_context;\n+                object             python:(not view.ignoreContext) and context or None;\n+                here               nocall:context;\n+                portal_url         nocall:context/portal_url;\n+                portal             portal_url/getPortalObject;\n+                text_format        view/value/mimeType | view/field/default_mime_type;\n+                force_wysiwyg      python:True;\n+                inputname          view/name;\n+                inputvalue         view/value/raw | nothing;\n+                here_url           request/getURL;\n+                member context/portal_membership/getAuthenticatedMember;\n+                isAnon context/@@plone_portal_state/anonymous;\n+                editor view/getWysiwygEditor;\n+                support_path string:nocall:here/@@${editor}_wysiwyg_support|here/${editor}_wysiwyg_support|here/${editor}/wysiwyg_support|here/portal_skins/plone_wysiwyg/wysiwyg_support;\n+                support python: path(support_path);\n+                tabindex           nothing;\n+                rows               python:view.rows or 25;\n+                cols               python:view.cols or 80;\n+                maxlength          python:view.field.max_length or None;\n+                field              view/field;\n+              ">\n+    <div metal:use-macro="support/macros/wysiwygEditorBox">\n             The WYSIWYG code\n-        </div>\n-    </tal:editor>\n+    </div>\n+  </tal:editor>\n \n </div>\ndiff --git a/plone/app/textfield/widget_textarea_display.pt b/plone/app/textfield/widget_textarea_display.pt\nindex 6298c41..ba5aa84 100644\n--- a/plone/app/textfield/widget_textarea_display.pt\n+++ b/plone/app/textfield/widget_textarea_display.pt\n@@ -1,28 +1,32 @@\n <html xmlns="http://www.w3.org/1999/xhtml"\n       xmlns:tal="http://xml.zope.org/namespaces/tal"\n+      tal:define="\n+        safe_structure python:getattr(view.field, \'output_mime_type\', None) == \'text/x-html-safe\';\n+      "\n       tal:omit-tag=""\n-      tal:define="safe_structure python:getattr(view.field, \'output_mime_type\', None) == \'text/x-html-safe\'">\n-    <span id="" class=""\n-          tal:attributes="id view/id;\n-                          class view/klass;\n-                          style view/style;\n-                          title view/title;\n-                          lang view/lang;\n-                          onclick view/onclick;\n-                          ondblclick view/ondblclick;\n-                          onmousedown view/onmousedown;\n-                          onmouseup view/onmouseup;\n-                          onmouseover view/onmouseover;\n-                          onmousemove view/onmousemove;\n-                          onmouseout view/onmouseout;\n-                          onkeypress view/onkeypress;\n-                          onkeydown view/onkeydown;\n-                          onkeyup view/onkeyup"><tal:block\n-          condition="view/value"><tal:block\n-            tal:condition="safe_structure"\n-            content="structure view/value"\n-          ></tal:block><tal:block\n-            condition="not: safe_structure"\n-            content="view/value"\n-          ></tal:block></tal:block></span>\n+>\n+  <span class=""\n+        id=""\n+        tal:attributes="\n+          id view/id;\n+          class view/klass;\n+          style view/style;\n+          title view/title;\n+          lang view/lang;\n+          onclick view/onclick;\n+          ondblclick view/ondblclick;\n+          onmousedown view/onmousedown;\n+          onmouseup view/onmouseup;\n+          onmouseover view/onmouseover;\n+          onmousemove view/onmousemove;\n+          onmouseout view/onmouseout;\n+          onkeypress view/onkeypress;\n+          onkeydown view/onkeydown;\n+          onkeyup view/onkeyup;\n+        "\n+  ><tal:block condition="view/value"><tal:block tal:condition="safe_structure"\n+                 content="structure view/value"\n+      /><tal:block condition="not: safe_structure"\n+                 content="view/value"\n+      /></tal:block></span>\n </html>\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 05b615d..9eb73f3 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,3 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [tool.towncrier]\n filename = "CHANGES.rst"\n directory = "news/"\n@@ -18,3 +20,43 @@ showcontent = true\n directory = "bugfix"\n name = "Bug fixes:"\n showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "internal"\n+name = "Internal:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "documentation"\n+name = "Documentation:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "tests"\n+name = "Tests"\n+showcontent = true\n+\n+[tool.isort]\n+profile = "plone"\n+\n+[tool.black]\n+target-version = ["py38"]\n+\n+[tool.dependencychecker]\n+Zope = [\n+  # Zope own provided namespaces\n+  \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n+  \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n+  \'Zope2\', \'webdav\', \'zmi\',\n+  # Zope dependencies\n+  \'Acquisition\', \'DateTime\', \'transaction\', \'zExceptions\', \'ZODB\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.deferredimport\', \'zope.event\',\n+  \'zope.exceptions\', \'zope.globalrequest\', \'zope.i18n\', \'zope.i18nmessageid\',\n+  \'zope.interface\', \'zope.lifecycleevent\', \'zope.location\', \'zope.publisher\',\n+  \'zope.schema\', \'zope.security\', \'zope.site\', \'zope.traversing\', \'AccessControl\',\n+]\n+\'plone.base\' = [\n+  \'AccessControl\', \'Products.BTreeFolder2\', \'Products.CMFCore\',\n+  \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n+]\n+python-dateutil = [\'dateutil\']\ndiff --git a/setup.cfg b/setup.cfg\nindex 000ba69..0da8f8f 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -1,15 +1,23 @@\n-[check-manifest]\n-ignore =\n-    *.cfg\n-    bootstrap.py\n-\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [bdist_wheel]\n universal = 0\n \n-[isort]\n-# black compatible Plone isort rules:\n-profile = black\n-force_alphabetical_sort = True\n-force_single_line = True\n-lines_after_imports = 2\n+[flake8]\n+doctests = 1\n+ignore =\n+    # black takes care of line length\n+    E501,\n+    # black takes care of where to break lines\n+    W503,\n+    # black takes care of spaces within slicing (list[:])\n+    E203,\n+    # black takes care of spaces after commas\n+    E231,\n \n+[check-manifest]\n+ignore =\n+    .editorconfig\n+    .meta.toml\n+    .pre-commit-config.yaml\n+    tox.ini\ndiff --git a/tox.ini b/tox.ini\nnew file mode 100644\nindex 0000000..ca6fe32\n--- /dev/null\n+++ b/tox.ini\n@@ -0,0 +1,50 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[tox]\n+envlist =\n+    format\n+    lint\n+    test\n+\n+[testenv]\n+allowlist_externals =\n+    sh\n+\n+[testenv:format]\n+description = automatically reformat code\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a pyupgrade\n+    pre-commit run -a isort\n+    pre-commit run -a black\n+    pre-commit run -a zpretty\n+\n+[testenv:lint]\n+description = run linters that will help improve the code style\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a\n+\n+[testenv:dependencies]\n+description = check if the package defines all its dependencies and generate a graph out of them\n+deps =\n+    z3c.dependencychecker==2.11\n+    pipdeptree==2.5.1\n+    graphviz  # optional dependency of pipdeptree\n+commands =\n+    dependencychecker\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+\n+[testenv:test]\n+usedevelop = true\n+deps =\n+    zope.testrunner\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    zope-testrunner --test-path={toxinidir} -s plone.app.textfield\n+extras =\n+    tests\n'

