Repository: plone.app.layout


Branch: refs/heads/master
Date: 2022-05-13T16:42:13+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/c4436fbae1be6a3de3a47282455680a96c6f87f2

Fix a regression happening when a creator or a contributor is not a user id

Fixes https://github.com/plone/Products.CMFPlone/issues/3526

Files changed:
M news/304.fixed
M plone/app/layout/viewlets/content.py
M plone/app/layout/viewlets/document_byline.pt
M plone/app/layout/viewlets/document_contributors.pt
M plone/app/layout/viewlets/tests/test_content.py

b'diff --git a/news/304.fixed b/news/304.fixed\nindex ea6235ab..351b19e2 100644\n--- a/news/304.fixed\n+++ b/news/304.fixed\n@@ -1 +1,3 @@\n-Display all the creators if they are more than one [ale-rt]\n+Display all the creators if they are more than one.\n+Make the byline and the contributor viewlet markup consistent.\n+[ale-rt]\ndiff --git a/plone/app/layout/viewlets/content.py b/plone/app/layout/viewlets/content.py\nindex 23b13ac3..f52c4faf 100644\n--- a/plone/app/layout/viewlets/content.py\n+++ b/plone/app/layout/viewlets/content.py\n@@ -111,14 +111,23 @@ def authorname(self):\n         author = self.author()\n         return author and author["fullname"] or self.creator()\n \n+    @memoize\n+    def get_member_info(self, user_id):\n+        return self.portal_membership.getMemberInfo(user_id)\n+\n     def get_url_path(self, user_id):\n+        if self.get_member_info(user_id) is None:\n+            return ""\n         if "/" in user_id:\n             qs = urlencode({"author": user_id})\n             return f"author/?{qs}"\n         return f"author/{user_id}"\n \n     def get_fullname(self, user_id):\n-        return self.portal_membership.getMemberInfo(user_id).get("fullname") or user_id\n+        info = self.get_member_info(user_id)\n+        if info is None:\n+            return user_id\n+        return info.get("fullname") or user_id\n \n     def show_modification_date(self):\n         return not self.context.effective_date or (\ndiff --git a/plone/app/layout/viewlets/document_byline.pt b/plone/app/layout/viewlets/document_byline.pt\nindex af1736c2..d1d4f267 100644\n--- a/plone/app/layout/viewlets/document_byline.pt\n+++ b/plone/app/layout/viewlets/document_byline.pt\n@@ -1,14 +1,28 @@\n-<section id="section-byline" i18n:domain="plone" tal:condition="view/show">\n-  <tal:creators\n-      tal:define="creator_ids here/creators"\n-      tal:condition="python:creator_ids and view.show_about()"\n+<section id="section-byline"\n+         tal:condition="view/show"\n+         i18n:domain="plone"\n+>\n+  <tal:creators tal:define="\n+                  creator_ids here/creators;\n+                  navigation_root_url context/@@plone_portal_state/navigation_root_url;\n+                "\n+                tal:condition="python:creator_ids and view.show_about()"\n   >\n     <tal:i18n i18n:translate="">by</tal:i18n>\n-    <tal:creator repeat="creator_id creator_ids">\n-      <a class="badge rounded-pill bg-light text-dark fw-normal fs-6"\n-         href="${context/@@plone_portal_state/navigation_root_url}/${python: view.get_url_path(creator_id)}"\n-      >${python:view.get_fullname(creator_id)}</a>\n-    </tal:creator>\n+    <tal:for repeat="user_id creator_ids">\n+      <tal:user define="\n+                  url_path python: view.get_url_path(user_id);\n+                  fullname python:view.get_fullname(user_id);\n+                ">\n+        <a class="badge rounded-pill bg-light text-dark fw-normal fs-6"\n+           href="${navigation_root_url}/${url_path}"\n+           tal:condition="url_path"\n+        >${fullname}</a>\n+        <span class="badge rounded-pill bg-light text-dark fw-normal fs-6"\n+              tal:condition="not:url_path"\n+        >${fullname}</span>\n+      </tal:user>\n+    </tal:for>\n     \xe2\x80\x94\n   </tal:creators>\n \ndiff --git a/plone/app/layout/viewlets/document_contributors.pt b/plone/app/layout/viewlets/document_contributors.pt\nindex c187feae..bf633533 100644\n--- a/plone/app/layout/viewlets/document_contributors.pt\n+++ b/plone/app/layout/viewlets/document_contributors.pt\n@@ -1,11 +1,31 @@\n-<section id="section-contributors" class="text-muted" i18n:domain="plone" tal:define="contributors context/Contributors" tal:condition="contributors">\n+<section class="text-muted"\n+         id="section-contributors"\n+         tal:define="\n+           contributors context/Contributors;\n+           navigation_root_url context/@@plone_portal_state/navigation_root_url;\n+         "\n+         tal:condition="contributors"\n+         i18n:domain="plone"\n+>\n \n-    <header class="section-heading" i18n:translate="section_contributors_heading">\n+  <header class="section-heading"\n+          i18n:translate="section_contributors_heading"\n+  >\n       Contributors\n-    </header>\n-    <a class="badge rounded-pill bg-light text-dark fw-normal fs-6"\n-       href="${context/@@plone_portal_state/navigation_root_url}/${python: view.get_url_path(contributor)}"\n-       tal:repeat="contributor contributors"\n-    >${python:view.get_fullname(contributor)}</a>\n+  </header>\n+  <tal:for repeat="user_id contributors">\n+    <tal:user define="\n+                url_path python: view.get_url_path(user_id);\n+                fullname python:view.get_fullname(user_id);\n+              ">\n+      <a class="badge rounded-pill bg-light text-dark fw-normal fs-6"\n+         href="${navigation_root_url}/${url_path}"\n+         tal:condition="url_path"\n+      >${fullname}</a>\n+      <span class="badge rounded-pill bg-light text-dark fw-normal fs-6"\n+            tal:condition="not:url_path"\n+      >${fullname}</span>\n+    </tal:user>\n+  </tal:for>\n \n </section>\ndiff --git a/plone/app/layout/viewlets/tests/test_content.py b/plone/app/layout/viewlets/tests/test_content.py\nindex 9df8fe79..cb8f6201 100644\n--- a/plone/app/layout/viewlets/tests/test_content.py\n+++ b/plone/app/layout/viewlets/tests/test_content.py\n@@ -10,6 +10,7 @@\n from plone.registry.interfaces import IRegistry\n from plone.base.interfaces import ISecuritySchema\n from plone.base.interfaces import ISiteSchema\n+from Products.CMFCore.utils import getToolByName\n from z3c.relationfield import RelationValue\n from zope.component import getUtility\n from zope.interface import Interface\n@@ -57,6 +58,35 @@ def _get_viewlet(self):\n         viewlet.update()\n         return viewlet\n \n+    def test_get_memberinfo(self):\n+        viewlet = self._get_viewlet()\n+        self.assertIsNone(viewlet.get_member_info("bogus"))\n+        self.assertIsInstance(viewlet.get_member_info("test_user_1_"), dict)\n+\n+    def test_get_url_path(self):\n+        viewlet = self._get_viewlet()\n+        self.assertEqual(viewlet.get_url_path("bogus"), "")\n+        self.assertEqual(viewlet.get_url_path("test_user_1_"), "author/test_user_1_")\n+\n+        # users with a slash in the userid will have a different URL\n+        portal_membership = getToolByName(self.portal, "portal_membership")\n+        portal_membership.addMember("foo/bar", "secret", ["Member"], "")\n+        self.assertEqual(viewlet.get_url_path("foo/bar"), "author/?author=foo%2Fbar")\n+\n+    def test_get_fullname(self):\n+        viewlet = self._get_viewlet()\n+        # For non existent user we return the user id\n+        self.assertEqual(viewlet.get_fullname("bogus"), "bogus")\n+        # If the fullname is not set we return the user id\n+        self.assertEqual(viewlet.get_fullname("test_user_1_"), "test_user_1_")\n+\n+        # otherwise we will return the fullname property\n+        portal_membership = getToolByName(self.portal, "portal_membership")\n+        portal_membership.addMember(\n+            "foo/bar", "secret", ["Member"], "", properties={"fullname": "Foo Bar"}\n+        )\n+        self.assertEqual(viewlet.get_fullname("foo/bar"), "Foo Bar")\n+\n     def test_pub_date(self):\n         # configure our portal to enable publication date on pages globally on\n         # the site\n'

Repository: plone.app.layout


Branch: refs/heads/master
Date: 2022-05-13T17:53:08+02:00
Author: Alessandro Pisa (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/b87984bfff0cf6094a128c883c67ea2500e1bfda

Merge pull request #307 from plone/fix-304-305-fixup

Fix a regression happening when a creator or a contributor is not a valid user id

Files changed:
M news/304.fixed
M plone/app/layout/viewlets/content.py
M plone/app/layout/viewlets/document_byline.pt
M plone/app/layout/viewlets/document_contributors.pt
M plone/app/layout/viewlets/tests/test_content.py

b'diff --git a/news/304.fixed b/news/304.fixed\nindex ea6235ab..351b19e2 100644\n--- a/news/304.fixed\n+++ b/news/304.fixed\n@@ -1 +1,3 @@\n-Display all the creators if they are more than one [ale-rt]\n+Display all the creators if they are more than one.\n+Make the byline and the contributor viewlet markup consistent.\n+[ale-rt]\ndiff --git a/plone/app/layout/viewlets/content.py b/plone/app/layout/viewlets/content.py\nindex 23b13ac3..f52c4faf 100644\n--- a/plone/app/layout/viewlets/content.py\n+++ b/plone/app/layout/viewlets/content.py\n@@ -111,14 +111,23 @@ def authorname(self):\n         author = self.author()\n         return author and author["fullname"] or self.creator()\n \n+    @memoize\n+    def get_member_info(self, user_id):\n+        return self.portal_membership.getMemberInfo(user_id)\n+\n     def get_url_path(self, user_id):\n+        if self.get_member_info(user_id) is None:\n+            return ""\n         if "/" in user_id:\n             qs = urlencode({"author": user_id})\n             return f"author/?{qs}"\n         return f"author/{user_id}"\n \n     def get_fullname(self, user_id):\n-        return self.portal_membership.getMemberInfo(user_id).get("fullname") or user_id\n+        info = self.get_member_info(user_id)\n+        if info is None:\n+            return user_id\n+        return info.get("fullname") or user_id\n \n     def show_modification_date(self):\n         return not self.context.effective_date or (\ndiff --git a/plone/app/layout/viewlets/document_byline.pt b/plone/app/layout/viewlets/document_byline.pt\nindex af1736c2..d1d4f267 100644\n--- a/plone/app/layout/viewlets/document_byline.pt\n+++ b/plone/app/layout/viewlets/document_byline.pt\n@@ -1,14 +1,28 @@\n-<section id="section-byline" i18n:domain="plone" tal:condition="view/show">\n-  <tal:creators\n-      tal:define="creator_ids here/creators"\n-      tal:condition="python:creator_ids and view.show_about()"\n+<section id="section-byline"\n+         tal:condition="view/show"\n+         i18n:domain="plone"\n+>\n+  <tal:creators tal:define="\n+                  creator_ids here/creators;\n+                  navigation_root_url context/@@plone_portal_state/navigation_root_url;\n+                "\n+                tal:condition="python:creator_ids and view.show_about()"\n   >\n     <tal:i18n i18n:translate="">by</tal:i18n>\n-    <tal:creator repeat="creator_id creator_ids">\n-      <a class="badge rounded-pill bg-light text-dark fw-normal fs-6"\n-         href="${context/@@plone_portal_state/navigation_root_url}/${python: view.get_url_path(creator_id)}"\n-      >${python:view.get_fullname(creator_id)}</a>\n-    </tal:creator>\n+    <tal:for repeat="user_id creator_ids">\n+      <tal:user define="\n+                  url_path python: view.get_url_path(user_id);\n+                  fullname python:view.get_fullname(user_id);\n+                ">\n+        <a class="badge rounded-pill bg-light text-dark fw-normal fs-6"\n+           href="${navigation_root_url}/${url_path}"\n+           tal:condition="url_path"\n+        >${fullname}</a>\n+        <span class="badge rounded-pill bg-light text-dark fw-normal fs-6"\n+              tal:condition="not:url_path"\n+        >${fullname}</span>\n+      </tal:user>\n+    </tal:for>\n     \xe2\x80\x94\n   </tal:creators>\n \ndiff --git a/plone/app/layout/viewlets/document_contributors.pt b/plone/app/layout/viewlets/document_contributors.pt\nindex c187feae..bf633533 100644\n--- a/plone/app/layout/viewlets/document_contributors.pt\n+++ b/plone/app/layout/viewlets/document_contributors.pt\n@@ -1,11 +1,31 @@\n-<section id="section-contributors" class="text-muted" i18n:domain="plone" tal:define="contributors context/Contributors" tal:condition="contributors">\n+<section class="text-muted"\n+         id="section-contributors"\n+         tal:define="\n+           contributors context/Contributors;\n+           navigation_root_url context/@@plone_portal_state/navigation_root_url;\n+         "\n+         tal:condition="contributors"\n+         i18n:domain="plone"\n+>\n \n-    <header class="section-heading" i18n:translate="section_contributors_heading">\n+  <header class="section-heading"\n+          i18n:translate="section_contributors_heading"\n+  >\n       Contributors\n-    </header>\n-    <a class="badge rounded-pill bg-light text-dark fw-normal fs-6"\n-       href="${context/@@plone_portal_state/navigation_root_url}/${python: view.get_url_path(contributor)}"\n-       tal:repeat="contributor contributors"\n-    >${python:view.get_fullname(contributor)}</a>\n+  </header>\n+  <tal:for repeat="user_id contributors">\n+    <tal:user define="\n+                url_path python: view.get_url_path(user_id);\n+                fullname python:view.get_fullname(user_id);\n+              ">\n+      <a class="badge rounded-pill bg-light text-dark fw-normal fs-6"\n+         href="${navigation_root_url}/${url_path}"\n+         tal:condition="url_path"\n+      >${fullname}</a>\n+      <span class="badge rounded-pill bg-light text-dark fw-normal fs-6"\n+            tal:condition="not:url_path"\n+      >${fullname}</span>\n+    </tal:user>\n+  </tal:for>\n \n </section>\ndiff --git a/plone/app/layout/viewlets/tests/test_content.py b/plone/app/layout/viewlets/tests/test_content.py\nindex 9df8fe79..cb8f6201 100644\n--- a/plone/app/layout/viewlets/tests/test_content.py\n+++ b/plone/app/layout/viewlets/tests/test_content.py\n@@ -10,6 +10,7 @@\n from plone.registry.interfaces import IRegistry\n from plone.base.interfaces import ISecuritySchema\n from plone.base.interfaces import ISiteSchema\n+from Products.CMFCore.utils import getToolByName\n from z3c.relationfield import RelationValue\n from zope.component import getUtility\n from zope.interface import Interface\n@@ -57,6 +58,35 @@ def _get_viewlet(self):\n         viewlet.update()\n         return viewlet\n \n+    def test_get_memberinfo(self):\n+        viewlet = self._get_viewlet()\n+        self.assertIsNone(viewlet.get_member_info("bogus"))\n+        self.assertIsInstance(viewlet.get_member_info("test_user_1_"), dict)\n+\n+    def test_get_url_path(self):\n+        viewlet = self._get_viewlet()\n+        self.assertEqual(viewlet.get_url_path("bogus"), "")\n+        self.assertEqual(viewlet.get_url_path("test_user_1_"), "author/test_user_1_")\n+\n+        # users with a slash in the userid will have a different URL\n+        portal_membership = getToolByName(self.portal, "portal_membership")\n+        portal_membership.addMember("foo/bar", "secret", ["Member"], "")\n+        self.assertEqual(viewlet.get_url_path("foo/bar"), "author/?author=foo%2Fbar")\n+\n+    def test_get_fullname(self):\n+        viewlet = self._get_viewlet()\n+        # For non existent user we return the user id\n+        self.assertEqual(viewlet.get_fullname("bogus"), "bogus")\n+        # If the fullname is not set we return the user id\n+        self.assertEqual(viewlet.get_fullname("test_user_1_"), "test_user_1_")\n+\n+        # otherwise we will return the fullname property\n+        portal_membership = getToolByName(self.portal, "portal_membership")\n+        portal_membership.addMember(\n+            "foo/bar", "secret", ["Member"], "", properties={"fullname": "Foo Bar"}\n+        )\n+        self.assertEqual(viewlet.get_fullname("foo/bar"), "Foo Bar")\n+\n     def test_pub_date(self):\n         # configure our portal to enable publication date on pages globally on\n         # the site\n'

