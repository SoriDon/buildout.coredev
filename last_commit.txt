Repository: plone.i18n


Branch: refs/heads/master
Date: 2019-02-19T16:04:09+01:00
Author: Steffen Allner (sallner) <sa@gocept.com>
Commit: https://github.com/plone/plone.i18n/commit/1447b62db6b9051489a5c7cc7926898bbf39a866

Break circular reference by moving interface to this package.

Explicitly declare dependencies which have been there implicitly by depending on Products.CMFPlone.

Files changed:
A news/29.feature
M plone/i18n/interfaces.py
M plone/i18n/tests/test_languageutility.py
M plone/i18n/tests/test_negotiation.py
M plone/i18n/utility.py
M setup.py

b"diff --git a/news/29.feature b/news/29.feature\nnew file mode 100644\nindex 0000000..a755cb7\n--- /dev/null\n+++ b/news/29.feature\n@@ -0,0 +1,3 @@\n+Move the interface `ILanguageSchema` from `Products.CMFPlone.interfaces` to\n+this package to avoid install dependency on `Products.CMFPlone` and the whole\n+Plone stack. This also breaks the circular reference between those packages.\ndiff --git a/plone/i18n/interfaces.py b/plone/i18n/interfaces.py\nindex eddc393..e3d6d77 100644\n--- a/plone/i18n/interfaces.py\n+++ b/plone/i18n/interfaces.py\n@@ -1,6 +1,13 @@\n # -*- coding: utf-8 -*-\n from zope.interface import Attribute\n from zope.interface import Interface\n+from zope import schema\n+from plone.supermodel import model\n+# Definition of Import PloneMessageFactory to create messages in the plone\n+# domain. We do a fresh re-definition here as to break the dependency on\n+# `Products.CMFPlone.PloneMessageFactory`.\n+from zope.i18nmessageid import MessageFactory\n+_ = PloneMessageFactory = MessageFactory('plone')\n \n \n class ILanguageUtility(Interface):\n@@ -15,3 +22,177 @@ class INegotiateLanguage(Interface):\n     language = Attribute('Language to use')\n     default_language = Attribute('Default language')\n     language_list = Attribute('List of language preferences in order')\n+\n+\n+class ILanguageSchema(Interface):\n+    model.fieldset(\n+        'general',\n+        label=_(u'General'),\n+        fields=[\n+            'default_language',\n+            'available_languages',\n+            'use_combined_language_codes',\n+            'display_flags',\n+            'always_show_selector'\n+        ],\n+    )\n+\n+    default_language = schema.Choice(\n+        title=_(u'heading_site_language', default=u'Site language'),\n+        description=_(\n+            u'description_site_language',\n+            default=u'The language used for the content and the UI of '\n+                    u'this site.'\n+        ),\n+        default='en',\n+        required=True,\n+        vocabulary='plone.app.vocabularies.AvailableContentLanguages'\n+    )\n+\n+    available_languages = schema.List(\n+        title=_(u'heading_available_languages',\n+                default=u'Available languages'),\n+        description=_(u'description_available_languages',\n+                      default=u'The languages in which the site should be '\n+                              u'translatable.'),\n+        required=True,\n+        default=['en'],\n+        missing_value=[],\n+        value_type=schema.Choice(\n+            vocabulary='plone.app.vocabularies.AvailableContentLanguages'\n+        )\n+    )\n+\n+    use_combined_language_codes = schema.Bool(\n+        title=_(\n+            u'label_allow_combined_language_codes',\n+            default=u'Show country-specific language variants'\n+        ),\n+        description=_(\n+            u'help_allow_combined_language_codes',\n+            default=u'Examples: pt-br (Brazilian Portuguese), '\n+                    u'en-us (American English) etc.'\n+        ),\n+        default=True,\n+        required=False\n+    )\n+\n+    display_flags = schema.Bool(\n+        title=_(\n+            u'label_display_flags',\n+            default=u'Show language flags'\n+        ),\n+        description=u'',\n+        default=False,\n+        required=False\n+    )\n+\n+    always_show_selector = schema.Bool(\n+        title=_(\n+            u'label_always_show_selector',\n+            default=u'Always show language selector'\n+        ),\n+        description=u'',\n+        default=False,\n+        required=False\n+    )\n+\n+    model.fieldset(\n+        'negotiation_scheme',\n+        label=_(u'Negotiation scheme', default=u'Negotiation scheme'),\n+        fields=[\n+            'use_content_negotiation',\n+            'use_path_negotiation',\n+            'use_cookie_negotiation',\n+            'authenticated_users_only',\n+            'set_cookie_always',\n+            'use_subdomain_negotiation',\n+            'use_cctld_negotiation',\n+            'use_request_negotiation',\n+        ],\n+    )\n+    use_content_negotiation = schema.Bool(\n+        title=_(u'heading_language_of_the_content',\n+                default=u'Use the language of the content item'),\n+        description=_(u'description_language_of_the_content',\n+                      default=u'Use the language of the content item.'),\n+        default=False,\n+        required=False,\n+    )\n+\n+    use_path_negotiation = schema.Bool(\n+        title=_(\n+            u'heading_language_codes_in_URL',\n+            default=u'Use language codes in URL path for manual override'),\n+        description=_(\n+            u'description_language_codes_in_URL',\n+            default=u'Use language codes in URL path for manual override.'),\n+        default=False,\n+        required=False,\n+    )\n+\n+    use_cookie_negotiation = schema.Bool(\n+        title=_(u'heading_cookie_manual_override',\n+                default=(u'Use cookie for manual override')),\n+        description=_(\n+            u'description_cookie_manual_override',\n+            default=(\n+                u'Required for the language selector viewlet to be rendered.'\n+            )\n+        ),\n+        default=False,\n+        required=False,\n+    )\n+\n+    authenticated_users_only = schema.Bool(\n+        title=_(u'heading_auth_cookie_manual_override',\n+                default=u'Authenticated users only'),\n+        description=_(\n+            u'description_auth_ookie_manual_override',\n+            default=(u'Related to: use cookie for manual override')\n+        ),\n+        default=False,\n+        required=False,\n+    )\n+\n+    set_cookie_always = schema.Bool(\n+        title=_(\n+            u'heading_set_language_cookie_always',\n+            default=(u'Set the language cookie always')),\n+        description=_(\n+            u'description_set_language_cookie_always',\n+            default=(\n+                u'i.e. also when the \\'set_language\\' request parameter is '\n+                u'absent'\n+            )\n+        ),\n+        default=False,\n+        required=False,\n+    )\n+\n+    use_subdomain_negotiation = schema.Bool(\n+        title=_(u'heading_use_subdomain',\n+                default=u'Use subdomain'),\n+        description=_(u'description_use_subdomain',\n+                      default=u'e.g.: de.plone.org'),\n+        default=False,\n+        required=False,\n+    )\n+\n+    use_cctld_negotiation = schema.Bool(\n+        title=_(u'heading_top_level_domain',\n+                default=u'Use top-level domain'),\n+        description=_(u'description_top_level_domain',\n+                      default=u'e.g.: www.plone.de'),\n+        default=False,\n+        required=False,\n+    )\n+\n+    use_request_negotiation = schema.Bool(\n+        title=_(u'heading_browser_language_request_negotiation',\n+                default=u'Use browser language request negotiation'),\n+        description=_(u'description_browser_language_request_negotiation',\n+                      default=u'Use browser language request negotiation.'),\n+        default=False,\n+        required=False,\n+    )\ndiff --git a/plone/i18n/tests/test_languageutility.py b/plone/i18n/tests/test_languageutility.py\nindex 1c59527..e7b71dc 100644\n--- a/plone/i18n/tests/test_languageutility.py\n+++ b/plone/i18n/tests/test_languageutility.py\n@@ -1,13 +1,13 @@\n # -*- coding: utf-8 -*-\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n+from plone.i18n.interfaces import ILanguageSchema\n from plone.i18n.interfaces import ILanguageUtility\n from plone.i18n.tests import base\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.interfaces import IDublinCore\n from Products.CMFCore.utils import getToolByName\n from Products.CMFCore.utils import getToolInterface\n-from Products.CMFPlone.interfaces import ILanguageSchema\n from zope.component import getUtility\n from zope.interface import alsoProvides\n \ndiff --git a/plone/i18n/tests/test_negotiation.py b/plone/i18n/tests/test_negotiation.py\nindex 8b1df54..ce0670c 100644\n--- a/plone/i18n/tests/test_negotiation.py\n+++ b/plone/i18n/tests/test_negotiation.py\n@@ -3,11 +3,11 @@\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import TEST_USER_NAME\n from plone.app.testing import TEST_USER_PASSWORD\n+from plone.i18n.interfaces import ILanguageSchema\n from plone.i18n.tests import base\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.interfaces import ILanguage\n-from Products.CMFPlone.interfaces import ILanguageSchema\n from zope.component import getUtility\n \n \ndiff --git a/plone/i18n/utility.py b/plone/i18n/utility.py\nindex 7b73e5b..2782311 100644\n--- a/plone/i18n/utility.py\n+++ b/plone/i18n/utility.py\n@@ -4,13 +4,13 @@\n from operator import itemgetter\n from plone.i18n.interfaces import ILanguageUtility\n from plone.i18n.interfaces import INegotiateLanguage\n+from plone.i18n.interfaces import ILanguageSchema\n from plone.i18n.locales.interfaces import ICcTLDInformation\n from plone.i18n.locales.interfaces import IContentLanguageAvailability\n from plone.i18n.locales.interfaces import ICountryAvailability\n from plone.i18n.negotiate.ptsnegotiator import registerLangPrefsMethod\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.interfaces import IDublinCore\n-from Products.CMFPlone.interfaces import ILanguageSchema\n from Products.SiteAccess.VirtualHostMonster import VirtualHostMonster\n from ZODB.POSException import ConflictError\n from zope.component import getMultiAdapter\ndiff --git a/setup.py b/setup.py\nindex 553edd7..e43b0c4 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -31,19 +31,27 @@\n     include_package_data=True,\n     zip_safe=False,\n     install_requires=[\n+        'AccessControl',\n         'Products.CMFCore',\n-        'Products.CMFPlone',\n+        'Products.SiteAccess',\n+        'plone.supermodel',\n         'setuptools',\n         'six',\n         'Unidecode',\n+        'ZODB',\n         'zope.component',\n         'zope.i18n',\n+        'zope.i18nmessageid',\n         'zope.interface',\n         'zope.publisher',\n-        'Zope2',\n+        'zope.schema',\n+        'zopezope.globalrequest',\n+        'Zope',\n     ],\n     extras_require=dict(\n         test=[\n+            'plone.app.contenttypes',\n+            'plone.app.testing',\n             'plone.registry',\n             'zope.browserresource',\n             'zope.component [zcml]',\n"

Repository: plone.i18n


Branch: refs/heads/master
Date: 2019-02-19T16:20:46+01:00
Author: Steffen Allner (sallner) <sa@gocept.com>
Commit: https://github.com/plone/plone.i18n/commit/c120cf92a7da8df5988615cd7ffdc40d28a90493

Fix dependency declaration.

Files changed:
M setup.py

b"diff --git a/setup.py b/setup.py\nindex e43b0c4..e789873 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -33,7 +33,6 @@\n     install_requires=[\n         'AccessControl',\n         'Products.CMFCore',\n-        'Products.SiteAccess',\n         'plone.supermodel',\n         'setuptools',\n         'six',\n@@ -45,7 +44,7 @@\n         'zope.interface',\n         'zope.publisher',\n         'zope.schema',\n-        'zopezope.globalrequest',\n+        'zope.globalrequest',\n         'Zope',\n     ],\n     extras_require=dict(\n"

Repository: plone.i18n


Branch: refs/heads/master
Date: 2019-02-20T19:00:47+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.i18n/commit/0ef76b4066b3e3449bccd73feb0b5699601c81c8

Merge pull request #30 from plone/re-29-circular-dep

Break circular reference by moving interface to this package.

Files changed:
A news/29.feature
M plone/i18n/interfaces.py
M plone/i18n/tests/test_languageutility.py
M plone/i18n/tests/test_negotiation.py
M plone/i18n/utility.py
M setup.py

b"diff --git a/news/29.feature b/news/29.feature\nnew file mode 100644\nindex 0000000..a755cb7\n--- /dev/null\n+++ b/news/29.feature\n@@ -0,0 +1,3 @@\n+Move the interface `ILanguageSchema` from `Products.CMFPlone.interfaces` to\n+this package to avoid install dependency on `Products.CMFPlone` and the whole\n+Plone stack. This also breaks the circular reference between those packages.\ndiff --git a/plone/i18n/interfaces.py b/plone/i18n/interfaces.py\nindex eddc393..e3d6d77 100644\n--- a/plone/i18n/interfaces.py\n+++ b/plone/i18n/interfaces.py\n@@ -1,6 +1,13 @@\n # -*- coding: utf-8 -*-\n from zope.interface import Attribute\n from zope.interface import Interface\n+from zope import schema\n+from plone.supermodel import model\n+# Definition of Import PloneMessageFactory to create messages in the plone\n+# domain. We do a fresh re-definition here as to break the dependency on\n+# `Products.CMFPlone.PloneMessageFactory`.\n+from zope.i18nmessageid import MessageFactory\n+_ = PloneMessageFactory = MessageFactory('plone')\n \n \n class ILanguageUtility(Interface):\n@@ -15,3 +22,177 @@ class INegotiateLanguage(Interface):\n     language = Attribute('Language to use')\n     default_language = Attribute('Default language')\n     language_list = Attribute('List of language preferences in order')\n+\n+\n+class ILanguageSchema(Interface):\n+    model.fieldset(\n+        'general',\n+        label=_(u'General'),\n+        fields=[\n+            'default_language',\n+            'available_languages',\n+            'use_combined_language_codes',\n+            'display_flags',\n+            'always_show_selector'\n+        ],\n+    )\n+\n+    default_language = schema.Choice(\n+        title=_(u'heading_site_language', default=u'Site language'),\n+        description=_(\n+            u'description_site_language',\n+            default=u'The language used for the content and the UI of '\n+                    u'this site.'\n+        ),\n+        default='en',\n+        required=True,\n+        vocabulary='plone.app.vocabularies.AvailableContentLanguages'\n+    )\n+\n+    available_languages = schema.List(\n+        title=_(u'heading_available_languages',\n+                default=u'Available languages'),\n+        description=_(u'description_available_languages',\n+                      default=u'The languages in which the site should be '\n+                              u'translatable.'),\n+        required=True,\n+        default=['en'],\n+        missing_value=[],\n+        value_type=schema.Choice(\n+            vocabulary='plone.app.vocabularies.AvailableContentLanguages'\n+        )\n+    )\n+\n+    use_combined_language_codes = schema.Bool(\n+        title=_(\n+            u'label_allow_combined_language_codes',\n+            default=u'Show country-specific language variants'\n+        ),\n+        description=_(\n+            u'help_allow_combined_language_codes',\n+            default=u'Examples: pt-br (Brazilian Portuguese), '\n+                    u'en-us (American English) etc.'\n+        ),\n+        default=True,\n+        required=False\n+    )\n+\n+    display_flags = schema.Bool(\n+        title=_(\n+            u'label_display_flags',\n+            default=u'Show language flags'\n+        ),\n+        description=u'',\n+        default=False,\n+        required=False\n+    )\n+\n+    always_show_selector = schema.Bool(\n+        title=_(\n+            u'label_always_show_selector',\n+            default=u'Always show language selector'\n+        ),\n+        description=u'',\n+        default=False,\n+        required=False\n+    )\n+\n+    model.fieldset(\n+        'negotiation_scheme',\n+        label=_(u'Negotiation scheme', default=u'Negotiation scheme'),\n+        fields=[\n+            'use_content_negotiation',\n+            'use_path_negotiation',\n+            'use_cookie_negotiation',\n+            'authenticated_users_only',\n+            'set_cookie_always',\n+            'use_subdomain_negotiation',\n+            'use_cctld_negotiation',\n+            'use_request_negotiation',\n+        ],\n+    )\n+    use_content_negotiation = schema.Bool(\n+        title=_(u'heading_language_of_the_content',\n+                default=u'Use the language of the content item'),\n+        description=_(u'description_language_of_the_content',\n+                      default=u'Use the language of the content item.'),\n+        default=False,\n+        required=False,\n+    )\n+\n+    use_path_negotiation = schema.Bool(\n+        title=_(\n+            u'heading_language_codes_in_URL',\n+            default=u'Use language codes in URL path for manual override'),\n+        description=_(\n+            u'description_language_codes_in_URL',\n+            default=u'Use language codes in URL path for manual override.'),\n+        default=False,\n+        required=False,\n+    )\n+\n+    use_cookie_negotiation = schema.Bool(\n+        title=_(u'heading_cookie_manual_override',\n+                default=(u'Use cookie for manual override')),\n+        description=_(\n+            u'description_cookie_manual_override',\n+            default=(\n+                u'Required for the language selector viewlet to be rendered.'\n+            )\n+        ),\n+        default=False,\n+        required=False,\n+    )\n+\n+    authenticated_users_only = schema.Bool(\n+        title=_(u'heading_auth_cookie_manual_override',\n+                default=u'Authenticated users only'),\n+        description=_(\n+            u'description_auth_ookie_manual_override',\n+            default=(u'Related to: use cookie for manual override')\n+        ),\n+        default=False,\n+        required=False,\n+    )\n+\n+    set_cookie_always = schema.Bool(\n+        title=_(\n+            u'heading_set_language_cookie_always',\n+            default=(u'Set the language cookie always')),\n+        description=_(\n+            u'description_set_language_cookie_always',\n+            default=(\n+                u'i.e. also when the \\'set_language\\' request parameter is '\n+                u'absent'\n+            )\n+        ),\n+        default=False,\n+        required=False,\n+    )\n+\n+    use_subdomain_negotiation = schema.Bool(\n+        title=_(u'heading_use_subdomain',\n+                default=u'Use subdomain'),\n+        description=_(u'description_use_subdomain',\n+                      default=u'e.g.: de.plone.org'),\n+        default=False,\n+        required=False,\n+    )\n+\n+    use_cctld_negotiation = schema.Bool(\n+        title=_(u'heading_top_level_domain',\n+                default=u'Use top-level domain'),\n+        description=_(u'description_top_level_domain',\n+                      default=u'e.g.: www.plone.de'),\n+        default=False,\n+        required=False,\n+    )\n+\n+    use_request_negotiation = schema.Bool(\n+        title=_(u'heading_browser_language_request_negotiation',\n+                default=u'Use browser language request negotiation'),\n+        description=_(u'description_browser_language_request_negotiation',\n+                      default=u'Use browser language request negotiation.'),\n+        default=False,\n+        required=False,\n+    )\ndiff --git a/plone/i18n/tests/test_languageutility.py b/plone/i18n/tests/test_languageutility.py\nindex 1c59527..e7b71dc 100644\n--- a/plone/i18n/tests/test_languageutility.py\n+++ b/plone/i18n/tests/test_languageutility.py\n@@ -1,13 +1,13 @@\n # -*- coding: utf-8 -*-\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n+from plone.i18n.interfaces import ILanguageSchema\n from plone.i18n.interfaces import ILanguageUtility\n from plone.i18n.tests import base\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.interfaces import IDublinCore\n from Products.CMFCore.utils import getToolByName\n from Products.CMFCore.utils import getToolInterface\n-from Products.CMFPlone.interfaces import ILanguageSchema\n from zope.component import getUtility\n from zope.interface import alsoProvides\n \ndiff --git a/plone/i18n/tests/test_negotiation.py b/plone/i18n/tests/test_negotiation.py\nindex 8b1df54..ce0670c 100644\n--- a/plone/i18n/tests/test_negotiation.py\n+++ b/plone/i18n/tests/test_negotiation.py\n@@ -3,11 +3,11 @@\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import TEST_USER_NAME\n from plone.app.testing import TEST_USER_PASSWORD\n+from plone.i18n.interfaces import ILanguageSchema\n from plone.i18n.tests import base\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.interfaces import ILanguage\n-from Products.CMFPlone.interfaces import ILanguageSchema\n from zope.component import getUtility\n \n \ndiff --git a/plone/i18n/utility.py b/plone/i18n/utility.py\nindex 7b73e5b..2782311 100644\n--- a/plone/i18n/utility.py\n+++ b/plone/i18n/utility.py\n@@ -4,13 +4,13 @@\n from operator import itemgetter\n from plone.i18n.interfaces import ILanguageUtility\n from plone.i18n.interfaces import INegotiateLanguage\n+from plone.i18n.interfaces import ILanguageSchema\n from plone.i18n.locales.interfaces import ICcTLDInformation\n from plone.i18n.locales.interfaces import IContentLanguageAvailability\n from plone.i18n.locales.interfaces import ICountryAvailability\n from plone.i18n.negotiate.ptsnegotiator import registerLangPrefsMethod\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.interfaces import IDublinCore\n-from Products.CMFPlone.interfaces import ILanguageSchema\n from Products.SiteAccess.VirtualHostMonster import VirtualHostMonster\n from ZODB.POSException import ConflictError\n from zope.component import getMultiAdapter\ndiff --git a/setup.py b/setup.py\nindex 553edd7..e789873 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -31,19 +31,26 @@\n     include_package_data=True,\n     zip_safe=False,\n     install_requires=[\n+        'AccessControl',\n         'Products.CMFCore',\n-        'Products.CMFPlone',\n+        'plone.supermodel',\n         'setuptools',\n         'six',\n         'Unidecode',\n+        'ZODB',\n         'zope.component',\n         'zope.i18n',\n+        'zope.i18nmessageid',\n         'zope.interface',\n         'zope.publisher',\n-        'Zope2',\n+        'zope.schema',\n+        'zope.globalrequest',\n+        'Zope',\n     ],\n     extras_require=dict(\n         test=[\n+            'plone.app.contenttypes',\n+            'plone.app.testing',\n             'plone.registry',\n             'zope.browserresource',\n             'zope.component [zcml]',\n"

