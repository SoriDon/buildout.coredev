Repository: plone.app.caching


Branch: refs/heads/master
Date: 2023-01-09T21:30:27+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.caching/commit/da84b9db535e9917c08aaaf8c339cb0981de8f91

Revert changes to tests to work with the Zope security fix.

We must have an empty byte, not text, otherwise it is an indication that we get a possibly wrong Content-Type in a 304 status.
See https://github.com/zopefoundation/Zope/issues/1089.

This reverts commit e6941fdfe6c8a3c98af98f4986e6932739adfca6.

Files changed:
A news/1089.bugfix
M plone/app/caching/tests/test_profile_with_caching_proxy.py
M plone/app/caching/tests/test_profile_without_caching_proxy.py

b'diff --git a/news/1089.bugfix b/news/1089.bugfix\nnew file mode 100644\nindex 0000000..250e4b4\n--- /dev/null\n+++ b/news/1089.bugfix\n@@ -0,0 +1,4 @@\n+Revert changes to tests to work with the Zope security fix.\n+We must have an empty byte, not text, otherwise it is an indication that we get a possibly wrong Content-Type in a 304 status.\n+See `Zope issue 1089 <https://github.com/zopefoundation/Zope/issues/1089>`_.\n+[maurits]\ndiff --git a/plone/app/caching/tests/test_profile_with_caching_proxy.py b/plone/app/caching/tests/test_profile_with_caching_proxy.py\nindex c58947f..4eeef45 100644\n--- a/plone/app/caching/tests/test_profile_with_caching_proxy.py\n+++ b/plone/app/caching/tests/test_profile_with_caching_proxy.py\n@@ -199,7 +199,11 @@ def test_composite_viewsxx(self):\n         browser.open(self.portal["f1"]["d1"].absolute_url())\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual("", browser.contents)\n+        # We MUST have an empty byte, not text, otherwise it is an indication that we\n+        # get a possibly wrong Content-Type in a 304 status.\n+        # See https://github.com/zopefoundation/Zope/issues/1089.\n+        self.assertEqual(b"", browser.contents)\n+        self.assertFalse(browser.headers["Content-Type"])\n \n         # Request the anonymous folder\n         now = stable_now()\n@@ -274,7 +278,8 @@ def test_composite_viewsxx(self):\n         )\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual("", browser.contents)\n+        self.assertEqual(b"", browser.contents)\n+        self.assertFalse(browser.headers["Content-Type"])\n \n         # Edit the page to update the etag\n         testText2 = "Testing... body two"\n@@ -369,7 +374,8 @@ def test_content_feeds(self):\n         )\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual("", browser.contents)\n+        self.assertEqual(b"", browser.contents)\n+        self.assertFalse(browser.headers["Content-Type"])\n \n         # Request the authenticated rss feed\n         now = stable_now()\n@@ -504,7 +510,8 @@ def test_content_files(self):\n         )\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual("", browser.contents)\n+        self.assertEqual(b"", browser.contents)\n+        self.assertFalse(browser.headers["Content-Type"])\n \n         # Request an image scale\n         now = stable_now()\n@@ -560,7 +567,8 @@ def test_resources(self):\n         )\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual("", browser.contents)\n+        self.assertEqual(b"", browser.contents)\n+        self.assertFalse(browser.headers["Content-Type"])\n \n         # Request a large datafile (over 64K) to test files that use\n         # the "response.write()" function to initiate a streamed response.\ndiff --git a/plone/app/caching/tests/test_profile_without_caching_proxy.py b/plone/app/caching/tests/test_profile_without_caching_proxy.py\nindex 1960738..256b7ab 100644\n--- a/plone/app/caching/tests/test_profile_without_caching_proxy.py\n+++ b/plone/app/caching/tests/test_profile_without_caching_proxy.py\n@@ -177,7 +177,11 @@ def test_composite_views(self):\n         browser.open(self.portal["f1"]["d1"].absolute_url())\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual("", browser.contents)\n+        # We MUST have an empty byte, not text, otherwise it is an indication that we\n+        # get a possibly wrong Content-Type in a 304 status.\n+        # See https://github.com/zopefoundation/Zope/issues/1089.\n+        self.assertEqual(b"", browser.contents)\n+        self.assertFalse(browser.headers["Content-Type"])\n \n         # Request the anonymous folder\n         now = stable_now()\n@@ -245,7 +249,8 @@ def test_composite_views(self):\n         )\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual("", browser.contents)\n+        self.assertEqual(b"", browser.contents)\n+        self.assertFalse(browser.headers["Content-Type"])\n \n         # Edit the page to update the etag\n         testText2 = "Testing... body two"\n@@ -334,7 +339,8 @@ def test_content_feeds(self):\n         )\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual("", browser.contents)\n+        self.assertEqual(b"", browser.contents)\n+        self.assertFalse(browser.headers["Content-Type"])\n \n         # Request the authenticated rss feed\n         now = stable_now()\n@@ -421,7 +427,8 @@ def test_content_files(self):\n         )\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual("", browser.contents)\n+        self.assertEqual(b"", browser.contents)\n+        self.assertFalse(browser.headers["Content-Type"])\n \n         # Request an image scale\n         now = stable_now()\n@@ -471,7 +478,8 @@ def test_resources(self):\n         )\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual("", browser.contents)\n+        self.assertEqual(b"", browser.contents)\n+        self.assertFalse(browser.headers["Content-Type"])\n \n         # Request a large datafile (over 64K) to test files that use\n         # the "response.write()" function to initiate a streamed response.\n'

Repository: plone.app.caching


Branch: refs/heads/master
Date: 2023-01-09T22:45:00+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.caching/commit/c3ee243e2c14b4e04be8e043f25ed0fc7b8357db

Merge pull request #109 from plone/maurits-fix-tests-again

Revert changes to tests to work with the Zope security fix. [master]

Files changed:
A news/1089.bugfix
M plone/app/caching/tests/test_profile_with_caching_proxy.py
M plone/app/caching/tests/test_profile_without_caching_proxy.py

b'diff --git a/news/1089.bugfix b/news/1089.bugfix\nnew file mode 100644\nindex 0000000..250e4b4\n--- /dev/null\n+++ b/news/1089.bugfix\n@@ -0,0 +1,4 @@\n+Revert changes to tests to work with the Zope security fix.\n+We must have an empty byte, not text, otherwise it is an indication that we get a possibly wrong Content-Type in a 304 status.\n+See `Zope issue 1089 <https://github.com/zopefoundation/Zope/issues/1089>`_.\n+[maurits]\ndiff --git a/plone/app/caching/tests/test_profile_with_caching_proxy.py b/plone/app/caching/tests/test_profile_with_caching_proxy.py\nindex c58947f..4eeef45 100644\n--- a/plone/app/caching/tests/test_profile_with_caching_proxy.py\n+++ b/plone/app/caching/tests/test_profile_with_caching_proxy.py\n@@ -199,7 +199,11 @@ def test_composite_viewsxx(self):\n         browser.open(self.portal["f1"]["d1"].absolute_url())\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual("", browser.contents)\n+        # We MUST have an empty byte, not text, otherwise it is an indication that we\n+        # get a possibly wrong Content-Type in a 304 status.\n+        # See https://github.com/zopefoundation/Zope/issues/1089.\n+        self.assertEqual(b"", browser.contents)\n+        self.assertFalse(browser.headers["Content-Type"])\n \n         # Request the anonymous folder\n         now = stable_now()\n@@ -274,7 +278,8 @@ def test_composite_viewsxx(self):\n         )\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual("", browser.contents)\n+        self.assertEqual(b"", browser.contents)\n+        self.assertFalse(browser.headers["Content-Type"])\n \n         # Edit the page to update the etag\n         testText2 = "Testing... body two"\n@@ -369,7 +374,8 @@ def test_content_feeds(self):\n         )\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual("", browser.contents)\n+        self.assertEqual(b"", browser.contents)\n+        self.assertFalse(browser.headers["Content-Type"])\n \n         # Request the authenticated rss feed\n         now = stable_now()\n@@ -504,7 +510,8 @@ def test_content_files(self):\n         )\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual("", browser.contents)\n+        self.assertEqual(b"", browser.contents)\n+        self.assertFalse(browser.headers["Content-Type"])\n \n         # Request an image scale\n         now = stable_now()\n@@ -560,7 +567,8 @@ def test_resources(self):\n         )\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual("", browser.contents)\n+        self.assertEqual(b"", browser.contents)\n+        self.assertFalse(browser.headers["Content-Type"])\n \n         # Request a large datafile (over 64K) to test files that use\n         # the "response.write()" function to initiate a streamed response.\ndiff --git a/plone/app/caching/tests/test_profile_without_caching_proxy.py b/plone/app/caching/tests/test_profile_without_caching_proxy.py\nindex 1960738..256b7ab 100644\n--- a/plone/app/caching/tests/test_profile_without_caching_proxy.py\n+++ b/plone/app/caching/tests/test_profile_without_caching_proxy.py\n@@ -177,7 +177,11 @@ def test_composite_views(self):\n         browser.open(self.portal["f1"]["d1"].absolute_url())\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual("", browser.contents)\n+        # We MUST have an empty byte, not text, otherwise it is an indication that we\n+        # get a possibly wrong Content-Type in a 304 status.\n+        # See https://github.com/zopefoundation/Zope/issues/1089.\n+        self.assertEqual(b"", browser.contents)\n+        self.assertFalse(browser.headers["Content-Type"])\n \n         # Request the anonymous folder\n         now = stable_now()\n@@ -245,7 +249,8 @@ def test_composite_views(self):\n         )\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual("", browser.contents)\n+        self.assertEqual(b"", browser.contents)\n+        self.assertFalse(browser.headers["Content-Type"])\n \n         # Edit the page to update the etag\n         testText2 = "Testing... body two"\n@@ -334,7 +339,8 @@ def test_content_feeds(self):\n         )\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual("", browser.contents)\n+        self.assertEqual(b"", browser.contents)\n+        self.assertFalse(browser.headers["Content-Type"])\n \n         # Request the authenticated rss feed\n         now = stable_now()\n@@ -421,7 +427,8 @@ def test_content_files(self):\n         )\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual("", browser.contents)\n+        self.assertEqual(b"", browser.contents)\n+        self.assertFalse(browser.headers["Content-Type"])\n \n         # Request an image scale\n         now = stable_now()\n@@ -471,7 +478,8 @@ def test_resources(self):\n         )\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual("", browser.contents)\n+        self.assertEqual(b"", browser.contents)\n+        self.assertFalse(browser.headers["Content-Type"])\n \n         # Request a large datafile (over 64K) to test files that use\n         # the "response.write()" function to initiate a streamed response.\n'

