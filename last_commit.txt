Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2017-06-13T17:30:15+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.z3cform/commit/e01d4293900eb109c62e109b4861b56d2a375c55

fixes #64

Files changed:
A plone/app/z3cform/templates/singlecheckboxbool_display.pt
A plone/app/z3cform/templates/singlecheckboxbool_hidden.pt
A plone/app/z3cform/templates/singlecheckboxbool_input.pt
M CHANGES.rst
M plone/app/z3cform/configure.zcml
M plone/app/z3cform/converters.py
M plone/app/z3cform/interfaces.py
M plone/app/z3cform/templates.py
M plone/app/z3cform/templates/singlecheckbox.pt
M plone/app/z3cform/templates/widget.pt
M plone/app/z3cform/widget.py
M setup.py

diff --git a/CHANGES.rst b/CHANGES.rst
index a1e0223..06ab3a8 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -23,6 +23,11 @@ Bug fixes:
 - Related Items Widget: In search mode, when no basePath was set, search site-wide.
   Fixes: https://github.com/plone/mockup/issues/769
   [thet]
+- Fixes #64: SingleCheckBoxFieldWidget does not render value in view mode.
+  In order to fix this issue the hacky view was removed.
+  It is replaced by a new widget to render a single checkbox with bool values.
+  An appropiate data converter was added as well.
+  [jensens]
 
 
 3.0 (2017-03-28)
diff --git a/plone/app/z3cform/configure.zcml b/plone/app/z3cform/configure.zcml
index eed91e2..d6394dd 100644
--- a/plone/app/z3cform/configure.zcml
+++ b/plone/app/z3cform/configure.zcml
@@ -39,13 +39,6 @@
       class=".templates.RenderContentProvider"
       permission="zope.Public"
       />
-  <browser:page
-      name="ploneform-render-widget"
-      for="z3c.form.interfaces.ISingleCheckBoxWidget"
-      layer="plone.app.z3cform.interfaces.IPloneFormLayer"
-      class=".templates.RenderSingleCheckboxWidget"
-      permission="zope.Public"
-      />
 
   <adapter factory=".templates.layout_factory" />
   <adapter factory=".templates.form_factory" />
@@ -99,9 +92,34 @@
       />
 
   <adapter
-      factory="z3c.form.browser.checkbox.SingleCheckBoxFieldWidget"
+      factory=".widget.SingleCheckBoxBoolFieldWidget"
       for="zope.schema.interfaces.IBool
-           plone.app.z3cform.interfaces.IPloneFormLayer"
+           .interfaces.IPloneFormLayer"
+      />
+  <adapter
+      factory=".converters.BoolSingleCheckboxDataConverter"
+      />
+
+  <z3c:widgetTemplate
+      mode="display"
+      field="zope.schema.interfaces.IBool"
+      widget=".interfaces.ISingleCheckBoxBoolWidget"
+      layer=".interfaces.IPloneFormLayer"
+      template="templates/singlecheckboxbool_display.pt"
+      />
+  <z3c:widgetTemplate
+      mode="input"
+      field="zope.schema.interfaces.IBool"
+      widget=".interfaces.ISingleCheckBoxBoolWidget"
+      layer=".interfaces.IPloneFormLayer"
+      template="templates/singlecheckboxbool_input.pt"
+      />
+  <z3c:widgetTemplate
+      mode="hidden"
+      field="zope.schema.interfaces.IBool"
+      widget=".interfaces.ISingleCheckBoxBoolWidget"
+      layer=".interfaces.IPloneFormLayer"
+      template="templates/singlecheckboxbool_hidden.pt"
       />
 
   <z3c:widgetTemplate
diff --git a/plone/app/z3cform/converters.py b/plone/app/z3cform/converters.py
index 21d7174..dda31c1 100644
--- a/plone/app/z3cform/converters.py
+++ b/plone/app/z3cform/converters.py
@@ -1,6 +1,7 @@
 # -*- coding: utf-8 -*-
 from datetime import date
 from datetime import datetime
+from plone.app.z3cform import utils
 from plone.app.z3cform.interfaces import IAjaxSelectWidget
 from plone.app.z3cform.interfaces import IDatetimeWidget
 from plone.app.z3cform.interfaces import IDateWidget
@@ -8,7 +9,7 @@
 from plone.app.z3cform.interfaces import IQueryStringWidget
 from plone.app.z3cform.interfaces import IRelatedItemsWidget
 from plone.app.z3cform.interfaces import ISelectWidget
-from plone.app.z3cform import utils
+from plone.app.z3cform.interfaces import ISingleCheckBoxBoolWidget
 from plone.uuid.interfaces import IUUID
 from Products.CMFCore.utils import getToolByName
 from Products.CMFPlone.utils import safe_callable
@@ -19,6 +20,7 @@
 from z3c.relationfield.interfaces import IRelationList
 from zope.component import adapter
 from zope.component.hooks import getSite
+from zope.schema.interfaces import IBool
 from zope.schema.interfaces import ICollection
 from zope.schema.interfaces import IDate
 from zope.schema.interfaces import IDatetime
@@ -351,3 +353,21 @@ def toWidgetValue(self, value):
             else:
                 result['external'] = value
         return result
+
+
+@adapter(IBool, ISingleCheckBoxBoolWidget)
+class BoolSingleCheckboxDataConverter(BaseDataConverter):
+    """Special converter between boolean fields and single checkbox widgets.
+    """
+
+    def toWidgetValue(self, value):
+        """Convert from Python bool to token sequence representation."""
+        if value:
+            return ['selected']
+        return ['unselected']
+
+    def toFieldValue(self, value):
+        """See interfaces.IDataConverter"""
+        # consider all different from true as false,
+        # this way it works with one checkbox
+        return bool(value and value[0] == 'selected')
diff --git a/plone/app/z3cform/interfaces.py b/plone/app/z3cform/interfaces.py
index 0243ca7..cd7a7b0 100644
--- a/plone/app/z3cform/interfaces.py
+++ b/plone/app/z3cform/interfaces.py
@@ -2,14 +2,14 @@
 from plone.app.textfield.widget import IRichTextWidget as patextfield_IRichTextWidget  # noqa
 from z3c.form.interfaces import ISelectWidget as IBaseSelectWidget
 from z3c.form.interfaces import IFormLayer
+from z3c.form.interfaces import ISingleCheckBoxWidget
 from z3c.form.interfaces import ITextWidget
 from zope.schema.interfaces import IDate
 from zope.schema.interfaces import IDatetime
 
 
 class IPloneFormLayer(IFormLayer):
-    """Request layer installed via browserlayer.xml
-    """
+    """Request layer installed via browserlayer.xml"""
 
 
 class IDateField(IDate):
@@ -50,3 +50,7 @@ class IRichTextWidget(patextfield_IRichTextWidget):
 
 class ILinkWidget(ITextWidget):
     """Marker interface for the enhanced link widget."""
+
+
+class ISingleCheckBoxBoolWidget(ISingleCheckBoxWidget):
+    """Marker interface for the SingleCheckboxBoolWidget."""
diff --git a/plone/app/z3cform/templates.py b/plone/app/z3cform/templates.py
index 55c455b..5837b39 100644
--- a/plone/app/z3cform/templates.py
+++ b/plone/app/z3cform/templates.py
@@ -9,6 +9,7 @@
 import plone.z3cform.interfaces
 import plone.z3cform.templates
 import z3c.form.interfaces
+import zope.deprecation
 
 
 def path(filepart):
@@ -47,6 +48,7 @@ class RenderWidget(ViewMixinForTemplates, BrowserView):
     index = ViewPageTemplateFile('templates/widget.pt')
 
 
+@zope.deprecation.deprecate('No longer used, see widget.py for new solution')
 class RenderSingleCheckboxWidget(ViewMixinForTemplates, BrowserView):
     index = ViewPageTemplateFile('templates/singlecheckbox.pt')
 
diff --git a/plone/app/z3cform/templates/singlecheckbox.pt b/plone/app/z3cform/templates/singlecheckbox.pt
index 84e51f4..1961f86 100644
--- a/plone/app/z3cform/templates/singlecheckbox.pt
+++ b/plone/app/z3cform/templates/singlecheckbox.pt
@@ -1,3 +1,4 @@
+<!-- DEPRECATED -->
 <div
    metal:define-macro="widget-wrapper"
    tal:define="widget nocall:context;
@@ -9,7 +10,6 @@
    tal:attributes="class string:field pat-inlinevalidation ${fieldname_class}${error_class};
                    data-fieldname widget/name;
                    id string:formfield-${widget/id};">
-
     <input type="text" tal:replace="structure widget/render"
            metal:define-slot="widget" />
 
diff --git a/plone/app/z3cform/templates/singlecheckboxbool_display.pt b/plone/app/z3cform/templates/singlecheckboxbool_display.pt
new file mode 100644
index 0000000..11d8004
--- /dev/null
+++ b/plone/app/z3cform/templates/singlecheckboxbool_display.pt
@@ -0,0 +1,21 @@
+<html xmlns="http://www.w3.org/1999/xhtml"
+      xmlns:tal="http://xml.zope.org/namespaces/tal"
+      tal:omit-tag="">
+  <span tal:attributes="id view/id;
+                        class view/klass;
+                        style view/style;
+                        title view/title;
+                        lang view/lang;
+                        onclick view/onclick;
+                        ondblclick view/ondblclick;
+                        onmousedown view/onmousedown;
+                        onmouseup view/onmouseup;
+                        onmouseover view/onmouseover;
+                        onmousemove view/onmousemove;
+                        onmouseout view/onmouseout;
+                        onkeypress view/onkeypress;
+                        onkeydown view/onkeydown;
+                        onkeyup view/onkeyup">
+    <span tal:content="python:view.displayValue[0] if view.displayValue else ''" />
+  </span>
+</html>
diff --git a/plone/app/z3cform/templates/singlecheckboxbool_hidden.pt b/plone/app/z3cform/templates/singlecheckboxbool_hidden.pt
new file mode 100644
index 0000000..df70d83
--- /dev/null
+++ b/plone/app/z3cform/templates/singlecheckboxbool_hidden.pt
@@ -0,0 +1,36 @@
+<html xmlns="http://www.w3.org/1999/xhtml"
+     xmlns:tal="http://xml.zope.org/namespaces/tal"
+     tal:omit-tag="">
+<span class="option"
+      tal:repeat="item view/items">
+  <input id="" name="" value="" class="hidden-widget" title=""
+         tabindex="" accesskey=""
+         type="hidden"
+         tal:attributes="id item/id;
+                         name item/name;
+                         class view/klass;
+                         value item/value;
+                         style view/style;
+                         title view/title;
+                         lang view/lang;
+                         onclick view/onclick;
+                         ondblclick view/ondblclick;
+                         onmousedown view/onmousedown;
+                         onmouseup view/onmouseup;
+                         onmouseover view/onmouseover;
+                         onmousemove view/onmousemove;
+                         onmouseout view/onmouseout;
+                         onkeypress view/onkeypress;
+                         onkeydown view/onkeydown;
+                         onkeyup view/onkeyup;
+                         disabled view/disabled;
+                         tabindex view/tabindex;
+                         onfocus view/onfocus;
+                         onblur view/onblur;
+                         onchange view/onchange;
+                         readonly view/readonly;
+                         alt view/alt;
+                         accesskey view/accesskey;
+                         onselect view/onselect" />
+</span>
+</html>
diff --git a/plone/app/z3cform/templates/singlecheckboxbool_input.pt b/plone/app/z3cform/templates/singlecheckboxbool_input.pt
new file mode 100644
index 0000000..5502b6b
--- /dev/null
+++ b/plone/app/z3cform/templates/singlecheckboxbool_input.pt
@@ -0,0 +1,86 @@
+<html xmlns="http://www.w3.org/1999/xhtml"
+     xmlns:tal="http://xml.zope.org/namespaces/tal"
+     tal:omit-tag=""
+     tal:define="items view/items;
+                 items python:list(items);
+                 single_checkbox python:len(items) == 1">
+<span tal:attributes="id view/id"
+      tal:omit-tag="single_checkbox"
+      tal:condition="python:len(items) > 0">
+ <span class="option"
+       tal:repeat="item items"
+       tal:attributes="id python:single_checkbox and view.id or None">
+  <input type="checkbox" id="" name="" class="" alt="" title=""
+         tabindex="" disabled="" readonly="" accesskey="" value=""
+         checked="checked"
+         tal:condition="item/checked"
+         tal:attributes="id item/id;
+                         name item/name;
+                         class view/klass;
+                         value item/value;
+                         style view/style;
+                         title view/title;
+                         lang view/lang;
+                         onclick view/onclick;
+                         ondblclick view/ondblclick;
+                         onmousedown view/onmousedown;
+                         onmouseup view/onmouseup;
+                         onmouseover view/onmouseover;
+                         onmousemove view/onmousemove;
+                         onmouseout view/onmouseout;
+                         onkeypress view/onkeypress;
+                         onkeydown view/onkeydown;
+                         onkeyup view/onkeyup;
+                         disabled view/disabled;
+                         tabindex view/tabindex;
+                         onfocus view/onfocus;
+                         onblur view/onblur;
+                         onchange view/onchange;
+                         readonly view/readonly;
+                         alt view/alt;
+                         accesskey view/accesskey;
+                         onselect view/onselect"
+  /><input id="" name="" class="" alt="" title="" tabindex=""
+           disabled="" readonly="" accesskey="" value=""
+           type="checkbox"
+         tal:condition="not:item/checked"
+         tal:attributes="id item/id;
+                         name item/name;
+                         class view/klass;
+                         value item/value;
+                         style view/style;
+                         title view/title;
+                         lang view/lang;
+                         onclick view/onclick;
+                         ondblclick view/ondblclick;
+                         onmousedown view/onmousedown;
+                         onmouseup view/onmouseup;
+                         onmouseover view/onmouseover;
+                         onmousemove view/onmousemove;
+                         onmouseout view/onmouseout;
+                         onkeypress view/onkeypress;
+                         onkeydown view/onkeydown;
+                         onkeyup view/onkeyup;
+                         disabled view/disabled;
+                         tabindex view/tabindex;
+                         onfocus view/onfocus;
+                         onblur view/onblur;
+                         onchange view/onchange;
+                         readonly view/readonly;
+                         alt view/alt;
+                         accesskey view/accesskey;
+                         onselect view/onselect" />
+  <label for=""
+         tal:attributes="for item/id">
+    <span class="label" tal:content="item/label">Label</span>
+    <span class="required horizontal"
+          title="Required"
+          tal:condition="item/required"
+          i18n:attributes="title title_required;">&nbsp;</span>
+    <span class="formHelp" tal:content="item/description">Description</span>
+  </label>
+ </span>
+</span>
+<input name="field-empty-marker" type="hidden" value="1"
+       tal:attributes="name string:${view/name}-empty-marker" />
+</html>
diff --git a/plone/app/z3cform/templates/widget.pt b/plone/app/z3cform/templates/widget.pt
index bbed533..e1ba798 100644
--- a/plone/app/z3cform/templates/widget.pt
+++ b/plone/app/z3cform/templates/widget.pt
@@ -14,7 +14,7 @@
                    id string:formfield-${widget/id};">
     <label for="" class="horizontal"
         tal:attributes="for widget/id"
-        tal:condition="not:hidden">
+        tal:condition="python: not hidden and widget.label">
         <span i18n:translate="" tal:replace="widget/label">label</span>
 
         <span class="required horizontal" title="Required"
@@ -22,7 +22,7 @@
               i18n:attributes="title title_required;">&nbsp;</span>
 
         <span class="formHelp"
-            tal:define="description widget/field/description"
+            tal:define="description python: getattr(widget, 'description', widget.field.description)"
             i18n:translate=""
             tal:content="structure description"
             tal:condition="python:description and not hidden"
@@ -31,7 +31,7 @@
     </label>
 
     <div class="fieldErrorBox"
-        tal:content="structure error/render|nothing">
+         tal:content="structure error/render|nothing">
         Error
     </div>
 
diff --git a/plone/app/z3cform/widget.py b/plone/app/z3cform/widget.py
index 966f7a7..0409d44 100644
--- a/plone/app/z3cform/widget.py
+++ b/plone/app/z3cform/widget.py
@@ -3,6 +3,7 @@
 from lxml import etree
 from plone.app.textfield.value import RichTextValue
 from plone.app.textfield.widget import RichTextWidget as patext_RichTextWidget
+from plone.app.vocabularies.terms import TermWithDescription
 from plone.app.widgets.base import SelectWidget as BaseSelectWidget
 from plone.app.widgets.base import dict_merge
 from plone.app.widgets.base import InputWidget
@@ -22,10 +23,12 @@
 from plone.app.z3cform.interfaces import IDatetimeWidget
 from plone.app.z3cform.interfaces import IDateWidget
 from plone.app.z3cform.interfaces import ILinkWidget
+from plone.app.z3cform.interfaces import IPloneFormLayer
 from plone.app.z3cform.interfaces import IQueryStringWidget
 from plone.app.z3cform.interfaces import IRelatedItemsWidget
 from plone.app.z3cform.interfaces import IRichTextWidget
 from plone.app.z3cform.interfaces import ISelectWidget
+from plone.app.z3cform.interfaces import ISingleCheckBoxBoolWidget
 from plone.app.z3cform.utils import call_callables
 from plone.app.z3cform.utils import closest_content
 from plone.registry.interfaces import IRegistry
@@ -33,6 +36,7 @@
 from Products.CMFPlone.interfaces import IEditingSchema
 from Products.CMFPlone.utils import safe_unicode
 from UserDict import UserDict
+from z3c.form.browser.checkbox import SingleCheckBoxWidget
 from z3c.form.browser.select import SelectWidget as z3cform_SelectWidget
 from z3c.form.browser.text import TextWidget as z3cform_TextWidget
 from z3c.form.browser.widget import HTMLInputWidget
@@ -40,17 +44,23 @@
 from z3c.form.interfaces import IFieldWidget
 from z3c.form.interfaces import IForm
 from z3c.form.interfaces import NO_VALUE
+from z3c.form.term import BoolTerms
+from z3c.form.term import Terms
 from z3c.form.widget import FieldWidget
 from z3c.form.widget import Widget
+from zope.component import adapter
 from zope.component import ComponentLookupError
 from zope.component import getUtility
 from zope.component.hooks import getSite
 from zope.i18n import translate
 from zope.interface import implementer
 from zope.interface import implementer_only
+from zope.schema.interfaces import IBool
 from zope.schema.interfaces import IChoice
 from zope.schema.interfaces import ICollection
 from zope.schema.interfaces import ISequence
+from zope.schema.vocabulary import SimpleTerm
+from zope.schema.vocabulary import SimpleVocabulary
 
 import json
 
@@ -721,7 +731,10 @@ def extract(self, default=NO_VALUE):
             if not subject:
                 url = email
             else:
-                url = '{}?subject={}'.format(email, subject)
+                url = '{email}?subject={subject}'.format(
+                    email=email,
+                    subject=subject
+                )
         else:
             url = external   # the default is `http://` so we land here
         if url:
@@ -779,3 +792,75 @@ def QueryStringFieldWidget(field, request, extra=None):
 @implementer(IFieldWidget)
 def LinkFieldWidget(field, request):
     return FieldWidget(field, LinkWidget(request))
+
+
+@implementer_only(ISingleCheckBoxBoolWidget)
+class SingleCheckBoxBoolWidget(SingleCheckBoxWidget):
+    """Single Input type checkbox widget implementation."""
+
+    klass = u'single-checkbox-bool-widget'
+
+    @property
+    def label(self):
+        if self.mode == 'input':
+            return u''
+        return getattr(self, '_label', u'')
+
+    @label.setter
+    def label(self, value):
+        self._label = value
+
+    @property
+    def description(self):
+        if self.mode == 'input':
+            return u''
+        return getattr(self, '_description', u'')
+
+    @description.setter
+    def description(self, value):
+        self._description = value
+
+    def updateTerms(self):
+        if self.mode == 'input':
+            # in input mode use only one checkbox with true
+            self.terms = Terms()
+            self.terms.terms = SimpleVocabulary((
+                TermWithDescription(
+                    True,
+                    'selected',
+                    getattr(self, '_label', None) or self.field.title,
+                    getattr(
+                        self,
+                        '_description',
+                        None
+                    ) or self.field.description
+                ),
+            ))
+            return self.terms
+        if not self.terms:
+            self.terms = Terms()
+            self.terms.terms = SimpleVocabulary(
+                [
+                    SimpleTerm(*args) for args in [
+                        (True, 'selected', BoolTerms.trueLabel),
+                        (False, 'unselected', BoolTerms.falseLabel)
+                    ]
+                ]
+            )
+        return self.terms
+
+    @property
+    def items(self):
+        result = super(SingleCheckBoxBoolWidget, self).items
+        for record in result:
+            term = self.terms.terms.getTermByToken(record['value'])
+            record['description'] = getattr(term, 'description', '')
+            record['required'] = self.required
+        return result
+
+
+@adapter(IBool, IPloneFormLayer)
+@implementer(IFieldWidget)
+def SingleCheckBoxBoolFieldWidget(field, request):
+    """IFieldWidget factory for CheckBoxWidget."""
+    return FieldWidget(field, SingleCheckBoxBoolWidget(request))
diff --git a/setup.py b/setup.py
index c099ae8..c0a6ef6 100644
--- a/setup.py
+++ b/setup.py
@@ -56,6 +56,7 @@ def read(*rnames):
         'z3c.formwidget.query',
         'zope.browserpage',
         'zope.component',
+        'zope.deprecation',
         'zope.globalrequest',
         'zope.i18n',
         'zope.i18nmessageid',


Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2017-06-13T18:58:39+02:00
Author: agitator (agitator) <agitator@users.noreply.github.com>
Commit: https://github.com/plone/plone.app.z3cform/commit/87bbebe6a609f9b4287cbba512bf3a3300b7105b

Merge pull request #65 from plone/fix-64

fixes #64: SingleCheckBoxFieldWidget does not render value in view mode

Files changed:
A plone/app/z3cform/templates/singlecheckboxbool_display.pt
A plone/app/z3cform/templates/singlecheckboxbool_hidden.pt
A plone/app/z3cform/templates/singlecheckboxbool_input.pt
M CHANGES.rst
M plone/app/z3cform/configure.zcml
M plone/app/z3cform/converters.py
M plone/app/z3cform/interfaces.py
M plone/app/z3cform/templates.py
M plone/app/z3cform/templates/singlecheckbox.pt
M plone/app/z3cform/templates/widget.pt
M plone/app/z3cform/widget.py
M setup.py

diff --git a/CHANGES.rst b/CHANGES.rst
index a1e0223..06ab3a8 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -23,6 +23,11 @@ Bug fixes:
 - Related Items Widget: In search mode, when no basePath was set, search site-wide.
   Fixes: https://github.com/plone/mockup/issues/769
   [thet]
+- Fixes #64: SingleCheckBoxFieldWidget does not render value in view mode.
+  In order to fix this issue the hacky view was removed.
+  It is replaced by a new widget to render a single checkbox with bool values.
+  An appropiate data converter was added as well.
+  [jensens]
 
 
 3.0 (2017-03-28)
diff --git a/plone/app/z3cform/configure.zcml b/plone/app/z3cform/configure.zcml
index eed91e2..d6394dd 100644
--- a/plone/app/z3cform/configure.zcml
+++ b/plone/app/z3cform/configure.zcml
@@ -39,13 +39,6 @@
       class=".templates.RenderContentProvider"
       permission="zope.Public"
       />
-  <browser:page
-      name="ploneform-render-widget"
-      for="z3c.form.interfaces.ISingleCheckBoxWidget"
-      layer="plone.app.z3cform.interfaces.IPloneFormLayer"
-      class=".templates.RenderSingleCheckboxWidget"
-      permission="zope.Public"
-      />
 
   <adapter factory=".templates.layout_factory" />
   <adapter factory=".templates.form_factory" />
@@ -99,9 +92,34 @@
       />
 
   <adapter
-      factory="z3c.form.browser.checkbox.SingleCheckBoxFieldWidget"
+      factory=".widget.SingleCheckBoxBoolFieldWidget"
       for="zope.schema.interfaces.IBool
-           plone.app.z3cform.interfaces.IPloneFormLayer"
+           .interfaces.IPloneFormLayer"
+      />
+  <adapter
+      factory=".converters.BoolSingleCheckboxDataConverter"
+      />
+
+  <z3c:widgetTemplate
+      mode="display"
+      field="zope.schema.interfaces.IBool"
+      widget=".interfaces.ISingleCheckBoxBoolWidget"
+      layer=".interfaces.IPloneFormLayer"
+      template="templates/singlecheckboxbool_display.pt"
+      />
+  <z3c:widgetTemplate
+      mode="input"
+      field="zope.schema.interfaces.IBool"
+      widget=".interfaces.ISingleCheckBoxBoolWidget"
+      layer=".interfaces.IPloneFormLayer"
+      template="templates/singlecheckboxbool_input.pt"
+      />
+  <z3c:widgetTemplate
+      mode="hidden"
+      field="zope.schema.interfaces.IBool"
+      widget=".interfaces.ISingleCheckBoxBoolWidget"
+      layer=".interfaces.IPloneFormLayer"
+      template="templates/singlecheckboxbool_hidden.pt"
       />
 
   <z3c:widgetTemplate
diff --git a/plone/app/z3cform/converters.py b/plone/app/z3cform/converters.py
index 21d7174..dda31c1 100644
--- a/plone/app/z3cform/converters.py
+++ b/plone/app/z3cform/converters.py
@@ -1,6 +1,7 @@
 # -*- coding: utf-8 -*-
 from datetime import date
 from datetime import datetime
+from plone.app.z3cform import utils
 from plone.app.z3cform.interfaces import IAjaxSelectWidget
 from plone.app.z3cform.interfaces import IDatetimeWidget
 from plone.app.z3cform.interfaces import IDateWidget
@@ -8,7 +9,7 @@
 from plone.app.z3cform.interfaces import IQueryStringWidget
 from plone.app.z3cform.interfaces import IRelatedItemsWidget
 from plone.app.z3cform.interfaces import ISelectWidget
-from plone.app.z3cform import utils
+from plone.app.z3cform.interfaces import ISingleCheckBoxBoolWidget
 from plone.uuid.interfaces import IUUID
 from Products.CMFCore.utils import getToolByName
 from Products.CMFPlone.utils import safe_callable
@@ -19,6 +20,7 @@
 from z3c.relationfield.interfaces import IRelationList
 from zope.component import adapter
 from zope.component.hooks import getSite
+from zope.schema.interfaces import IBool
 from zope.schema.interfaces import ICollection
 from zope.schema.interfaces import IDate
 from zope.schema.interfaces import IDatetime
@@ -351,3 +353,21 @@ def toWidgetValue(self, value):
             else:
                 result['external'] = value
         return result
+
+
+@adapter(IBool, ISingleCheckBoxBoolWidget)
+class BoolSingleCheckboxDataConverter(BaseDataConverter):
+    """Special converter between boolean fields and single checkbox widgets.
+    """
+
+    def toWidgetValue(self, value):
+        """Convert from Python bool to token sequence representation."""
+        if value:
+            return ['selected']
+        return ['unselected']
+
+    def toFieldValue(self, value):
+        """See interfaces.IDataConverter"""
+        # consider all different from true as false,
+        # this way it works with one checkbox
+        return bool(value and value[0] == 'selected')
diff --git a/plone/app/z3cform/interfaces.py b/plone/app/z3cform/interfaces.py
index 0243ca7..cd7a7b0 100644
--- a/plone/app/z3cform/interfaces.py
+++ b/plone/app/z3cform/interfaces.py
@@ -2,14 +2,14 @@
 from plone.app.textfield.widget import IRichTextWidget as patextfield_IRichTextWidget  # noqa
 from z3c.form.interfaces import ISelectWidget as IBaseSelectWidget
 from z3c.form.interfaces import IFormLayer
+from z3c.form.interfaces import ISingleCheckBoxWidget
 from z3c.form.interfaces import ITextWidget
 from zope.schema.interfaces import IDate
 from zope.schema.interfaces import IDatetime
 
 
 class IPloneFormLayer(IFormLayer):
-    """Request layer installed via browserlayer.xml
-    """
+    """Request layer installed via browserlayer.xml"""
 
 
 class IDateField(IDate):
@@ -50,3 +50,7 @@ class IRichTextWidget(patextfield_IRichTextWidget):
 
 class ILinkWidget(ITextWidget):
     """Marker interface for the enhanced link widget."""
+
+
+class ISingleCheckBoxBoolWidget(ISingleCheckBoxWidget):
+    """Marker interface for the SingleCheckboxBoolWidget."""
diff --git a/plone/app/z3cform/templates.py b/plone/app/z3cform/templates.py
index 55c455b..5837b39 100644
--- a/plone/app/z3cform/templates.py
+++ b/plone/app/z3cform/templates.py
@@ -9,6 +9,7 @@
 import plone.z3cform.interfaces
 import plone.z3cform.templates
 import z3c.form.interfaces
+import zope.deprecation
 
 
 def path(filepart):
@@ -47,6 +48,7 @@ class RenderWidget(ViewMixinForTemplates, BrowserView):
     index = ViewPageTemplateFile('templates/widget.pt')
 
 
+@zope.deprecation.deprecate('No longer used, see widget.py for new solution')
 class RenderSingleCheckboxWidget(ViewMixinForTemplates, BrowserView):
     index = ViewPageTemplateFile('templates/singlecheckbox.pt')
 
diff --git a/plone/app/z3cform/templates/singlecheckbox.pt b/plone/app/z3cform/templates/singlecheckbox.pt
index 84e51f4..1961f86 100644
--- a/plone/app/z3cform/templates/singlecheckbox.pt
+++ b/plone/app/z3cform/templates/singlecheckbox.pt
@@ -1,3 +1,4 @@
+<!-- DEPRECATED -->
 <div
    metal:define-macro="widget-wrapper"
    tal:define="widget nocall:context;
@@ -9,7 +10,6 @@
    tal:attributes="class string:field pat-inlinevalidation ${fieldname_class}${error_class};
                    data-fieldname widget/name;
                    id string:formfield-${widget/id};">
-
     <input type="text" tal:replace="structure widget/render"
            metal:define-slot="widget" />
 
diff --git a/plone/app/z3cform/templates/singlecheckboxbool_display.pt b/plone/app/z3cform/templates/singlecheckboxbool_display.pt
new file mode 100644
index 0000000..11d8004
--- /dev/null
+++ b/plone/app/z3cform/templates/singlecheckboxbool_display.pt
@@ -0,0 +1,21 @@
+<html xmlns="http://www.w3.org/1999/xhtml"
+      xmlns:tal="http://xml.zope.org/namespaces/tal"
+      tal:omit-tag="">
+  <span tal:attributes="id view/id;
+                        class view/klass;
+                        style view/style;
+                        title view/title;
+                        lang view/lang;
+                        onclick view/onclick;
+                        ondblclick view/ondblclick;
+                        onmousedown view/onmousedown;
+                        onmouseup view/onmouseup;
+                        onmouseover view/onmouseover;
+                        onmousemove view/onmousemove;
+                        onmouseout view/onmouseout;
+                        onkeypress view/onkeypress;
+                        onkeydown view/onkeydown;
+                        onkeyup view/onkeyup">
+    <span tal:content="python:view.displayValue[0] if view.displayValue else ''" />
+  </span>
+</html>
diff --git a/plone/app/z3cform/templates/singlecheckboxbool_hidden.pt b/plone/app/z3cform/templates/singlecheckboxbool_hidden.pt
new file mode 100644
index 0000000..df70d83
--- /dev/null
+++ b/plone/app/z3cform/templates/singlecheckboxbool_hidden.pt
@@ -0,0 +1,36 @@
+<html xmlns="http://www.w3.org/1999/xhtml"
+     xmlns:tal="http://xml.zope.org/namespaces/tal"
+     tal:omit-tag="">
+<span class="option"
+      tal:repeat="item view/items">
+  <input id="" name="" value="" class="hidden-widget" title=""
+         tabindex="" accesskey=""
+         type="hidden"
+         tal:attributes="id item/id;
+                         name item/name;
+                         class view/klass;
+                         value item/value;
+                         style view/style;
+                         title view/title;
+                         lang view/lang;
+                         onclick view/onclick;
+                         ondblclick view/ondblclick;
+                         onmousedown view/onmousedown;
+                         onmouseup view/onmouseup;
+                         onmouseover view/onmouseover;
+                         onmousemove view/onmousemove;
+                         onmouseout view/onmouseout;
+                         onkeypress view/onkeypress;
+                         onkeydown view/onkeydown;
+                         onkeyup view/onkeyup;
+                         disabled view/disabled;
+                         tabindex view/tabindex;
+                         onfocus view/onfocus;
+                         onblur view/onblur;
+                         onchange view/onchange;
+                         readonly view/readonly;
+                         alt view/alt;
+                         accesskey view/accesskey;
+                         onselect view/onselect" />
+</span>
+</html>
diff --git a/plone/app/z3cform/templates/singlecheckboxbool_input.pt b/plone/app/z3cform/templates/singlecheckboxbool_input.pt
new file mode 100644
index 0000000..5502b6b
--- /dev/null
+++ b/plone/app/z3cform/templates/singlecheckboxbool_input.pt
@@ -0,0 +1,86 @@
+<html xmlns="http://www.w3.org/1999/xhtml"
+     xmlns:tal="http://xml.zope.org/namespaces/tal"
+     tal:omit-tag=""
+     tal:define="items view/items;
+                 items python:list(items);
+                 single_checkbox python:len(items) == 1">
+<span tal:attributes="id view/id"
+      tal:omit-tag="single_checkbox"
+      tal:condition="python:len(items) > 0">
+ <span class="option"
+       tal:repeat="item items"
+       tal:attributes="id python:single_checkbox and view.id or None">
+  <input type="checkbox" id="" name="" class="" alt="" title=""
+         tabindex="" disabled="" readonly="" accesskey="" value=""
+         checked="checked"
+         tal:condition="item/checked"
+         tal:attributes="id item/id;
+                         name item/name;
+                         class view/klass;
+                         value item/value;
+                         style view/style;
+                         title view/title;
+                         lang view/lang;
+                         onclick view/onclick;
+                         ondblclick view/ondblclick;
+                         onmousedown view/onmousedown;
+                         onmouseup view/onmouseup;
+                         onmouseover view/onmouseover;
+                         onmousemove view/onmousemove;
+                         onmouseout view/onmouseout;
+                         onkeypress view/onkeypress;
+                         onkeydown view/onkeydown;
+                         onkeyup view/onkeyup;
+                         disabled view/disabled;
+                         tabindex view/tabindex;
+                         onfocus view/onfocus;
+                         onblur view/onblur;
+                         onchange view/onchange;
+                         readonly view/readonly;
+                         alt view/alt;
+                         accesskey view/accesskey;
+                         onselect view/onselect"
+  /><input id="" name="" class="" alt="" title="" tabindex=""
+           disabled="" readonly="" accesskey="" value=""
+           type="checkbox"
+         tal:condition="not:item/checked"
+         tal:attributes="id item/id;
+                         name item/name;
+                         class view/klass;
+                         value item/value;
+                         style view/style;
+                         title view/title;
+                         lang view/lang;
+                         onclick view/onclick;
+                         ondblclick view/ondblclick;
+                         onmousedown view/onmousedown;
+                         onmouseup view/onmouseup;
+                         onmouseover view/onmouseover;
+                         onmousemove view/onmousemove;
+                         onmouseout view/onmouseout;
+                         onkeypress view/onkeypress;
+                         onkeydown view/onkeydown;
+                         onkeyup view/onkeyup;
+                         disabled view/disabled;
+                         tabindex view/tabindex;
+                         onfocus view/onfocus;
+                         onblur view/onblur;
+                         onchange view/onchange;
+                         readonly view/readonly;
+                         alt view/alt;
+                         accesskey view/accesskey;
+                         onselect view/onselect" />
+  <label for=""
+         tal:attributes="for item/id">
+    <span class="label" tal:content="item/label">Label</span>
+    <span class="required horizontal"
+          title="Required"
+          tal:condition="item/required"
+          i18n:attributes="title title_required;">&nbsp;</span>
+    <span class="formHelp" tal:content="item/description">Description</span>
+  </label>
+ </span>
+</span>
+<input name="field-empty-marker" type="hidden" value="1"
+       tal:attributes="name string:${view/name}-empty-marker" />
+</html>
diff --git a/plone/app/z3cform/templates/widget.pt b/plone/app/z3cform/templates/widget.pt
index bbed533..e1ba798 100644
--- a/plone/app/z3cform/templates/widget.pt
+++ b/plone/app/z3cform/templates/widget.pt
@@ -14,7 +14,7 @@
                    id string:formfield-${widget/id};">
     <label for="" class="horizontal"
         tal:attributes="for widget/id"
-        tal:condition="not:hidden">
+        tal:condition="python: not hidden and widget.label">
         <span i18n:translate="" tal:replace="widget/label">label</span>
 
         <span class="required horizontal" title="Required"
@@ -22,7 +22,7 @@
               i18n:attributes="title title_required;">&nbsp;</span>
 
         <span class="formHelp"
-            tal:define="description widget/field/description"
+            tal:define="description python: getattr(widget, 'description', widget.field.description)"
             i18n:translate=""
             tal:content="structure description"
             tal:condition="python:description and not hidden"
@@ -31,7 +31,7 @@
     </label>
 
     <div class="fieldErrorBox"
-        tal:content="structure error/render|nothing">
+         tal:content="structure error/render|nothing">
         Error
     </div>
 
diff --git a/plone/app/z3cform/widget.py b/plone/app/z3cform/widget.py
index 966f7a7..0409d44 100644
--- a/plone/app/z3cform/widget.py
+++ b/plone/app/z3cform/widget.py
@@ -3,6 +3,7 @@
 from lxml import etree
 from plone.app.textfield.value import RichTextValue
 from plone.app.textfield.widget import RichTextWidget as patext_RichTextWidget
+from plone.app.vocabularies.terms import TermWithDescription
 from plone.app.widgets.base import SelectWidget as BaseSelectWidget
 from plone.app.widgets.base import dict_merge
 from plone.app.widgets.base import InputWidget
@@ -22,10 +23,12 @@
 from plone.app.z3cform.interfaces import IDatetimeWidget
 from plone.app.z3cform.interfaces import IDateWidget
 from plone.app.z3cform.interfaces import ILinkWidget
+from plone.app.z3cform.interfaces import IPloneFormLayer
 from plone.app.z3cform.interfaces import IQueryStringWidget
 from plone.app.z3cform.interfaces import IRelatedItemsWidget
 from plone.app.z3cform.interfaces import IRichTextWidget
 from plone.app.z3cform.interfaces import ISelectWidget
+from plone.app.z3cform.interfaces import ISingleCheckBoxBoolWidget
 from plone.app.z3cform.utils import call_callables
 from plone.app.z3cform.utils import closest_content
 from plone.registry.interfaces import IRegistry
@@ -33,6 +36,7 @@
 from Products.CMFPlone.interfaces import IEditingSchema
 from Products.CMFPlone.utils import safe_unicode
 from UserDict import UserDict
+from z3c.form.browser.checkbox import SingleCheckBoxWidget
 from z3c.form.browser.select import SelectWidget as z3cform_SelectWidget
 from z3c.form.browser.text import TextWidget as z3cform_TextWidget
 from z3c.form.browser.widget import HTMLInputWidget
@@ -40,17 +44,23 @@
 from z3c.form.interfaces import IFieldWidget
 from z3c.form.interfaces import IForm
 from z3c.form.interfaces import NO_VALUE
+from z3c.form.term import BoolTerms
+from z3c.form.term import Terms
 from z3c.form.widget import FieldWidget
 from z3c.form.widget import Widget
+from zope.component import adapter
 from zope.component import ComponentLookupError
 from zope.component import getUtility
 from zope.component.hooks import getSite
 from zope.i18n import translate
 from zope.interface import implementer
 from zope.interface import implementer_only
+from zope.schema.interfaces import IBool
 from zope.schema.interfaces import IChoice
 from zope.schema.interfaces import ICollection
 from zope.schema.interfaces import ISequence
+from zope.schema.vocabulary import SimpleTerm
+from zope.schema.vocabulary import SimpleVocabulary
 
 import json
 
@@ -721,7 +731,10 @@ def extract(self, default=NO_VALUE):
             if not subject:
                 url = email
             else:
-                url = '{}?subject={}'.format(email, subject)
+                url = '{email}?subject={subject}'.format(
+                    email=email,
+                    subject=subject
+                )
         else:
             url = external   # the default is `http://` so we land here
         if url:
@@ -779,3 +792,75 @@ def QueryStringFieldWidget(field, request, extra=None):
 @implementer(IFieldWidget)
 def LinkFieldWidget(field, request):
     return FieldWidget(field, LinkWidget(request))
+
+
+@implementer_only(ISingleCheckBoxBoolWidget)
+class SingleCheckBoxBoolWidget(SingleCheckBoxWidget):
+    """Single Input type checkbox widget implementation."""
+
+    klass = u'single-checkbox-bool-widget'
+
+    @property
+    def label(self):
+        if self.mode == 'input':
+            return u''
+        return getattr(self, '_label', u'')
+
+    @label.setter
+    def label(self, value):
+        self._label = value
+
+    @property
+    def description(self):
+        if self.mode == 'input':
+            return u''
+        return getattr(self, '_description', u'')
+
+    @description.setter
+    def description(self, value):
+        self._description = value
+
+    def updateTerms(self):
+        if self.mode == 'input':
+            # in input mode use only one checkbox with true
+            self.terms = Terms()
+            self.terms.terms = SimpleVocabulary((
+                TermWithDescription(
+                    True,
+                    'selected',
+                    getattr(self, '_label', None) or self.field.title,
+                    getattr(
+                        self,
+                        '_description',
+                        None
+                    ) or self.field.description
+                ),
+            ))
+            return self.terms
+        if not self.terms:
+            self.terms = Terms()
+            self.terms.terms = SimpleVocabulary(
+                [
+                    SimpleTerm(*args) for args in [
+                        (True, 'selected', BoolTerms.trueLabel),
+                        (False, 'unselected', BoolTerms.falseLabel)
+                    ]
+                ]
+            )
+        return self.terms
+
+    @property
+    def items(self):
+        result = super(SingleCheckBoxBoolWidget, self).items
+        for record in result:
+            term = self.terms.terms.getTermByToken(record['value'])
+            record['description'] = getattr(term, 'description', '')
+            record['required'] = self.required
+        return result
+
+
+@adapter(IBool, IPloneFormLayer)
+@implementer(IFieldWidget)
+def SingleCheckBoxBoolFieldWidget(field, request):
+    """IFieldWidget factory for CheckBoxWidget."""
+    return FieldWidget(field, SingleCheckBoxBoolWidget(request))
diff --git a/setup.py b/setup.py
index c099ae8..c0a6ef6 100644
--- a/setup.py
+++ b/setup.py
@@ -56,6 +56,7 @@ def read(*rnames):
         'z3c.formwidget.query',
         'zope.browserpage',
         'zope.component',
+        'zope.deprecation',
         'zope.globalrequest',
         'zope.i18n',
         'zope.i18nmessageid',


