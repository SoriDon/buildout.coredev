Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2019-07-10T21:15:00+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/7a129a5d33474bb35b9483be5861953258e3c3c0

Speedup stats during migration by not waking up all objects

Files changed:
M plone/app/contenttypes/migration/browser.py

b"diff --git a/plone/app/contenttypes/migration/browser.py b/plone/app/contenttypes/migration/browser.py\nindex 2332aabb..483fe938 100644\n--- a/plone/app/contenttypes/migration/browser.py\n+++ b/plone/app/contenttypes/migration/browser.py\n@@ -180,7 +180,8 @@ def __call__(self,\n                 'object_provides': v['iface'].__identifier__,\n                 'meta_type': v['old_meta_type'],\n             }\n-            amount_to_be_migrated = len(catalog(query))\n+            amount_to_be_migrated = len(\n+                catalog.unrestrictedSearchResults(query))\n             starttime_for_current = datetime.now()\n             logger.info(\n                 'Start migrating {0} objects from {1} to {2}'.format(\n@@ -267,12 +268,9 @@ def __call__(self,\n     def stats(self):\n         results = {}\n         catalog = self.context.portal_catalog\n-        for brain in catalog():\n-            try:\n-                classname = brain.getObject().__class__.__name__\n-            except (KeyError, NotFound):\n-                continue\n-            results[classname] = results.get(classname, 0) + 1\n+        for brain in catalog.getAllBrains():\n+            descriptor = '{} ({})'.format(brain.portal_type, brain.meta_type)\n+            results[descriptor] = results.get(descriptor, 0) + 1\n         return results\n \n \n"

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2019-07-10T21:15:00+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/7314364780398e4e30e3052c8f39981e0069be34

add changenote

Files changed:
A news/529.bugfix

b'diff --git a/news/529.bugfix b/news/529.bugfix\nnew file mode 100644\nindex 00000000..dfcc22e0\n--- /dev/null\n+++ b/news/529.bugfix\n@@ -0,0 +1,2 @@\n+Speedup stats during migration by not waking up all objects.\n+[pbauer]\n\\ No newline at end of file\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2019-07-10T21:15:00+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/87b15be8748e326cb9cab15ca1ad307f8c2399f6

fix tests

Files changed:
M plone/app/contenttypes/migration/browser.py
M plone/app/contenttypes/tests/test_migration.py

b'diff --git a/plone/app/contenttypes/migration/browser.py b/plone/app/contenttypes/migration/browser.py\nindex 483fe938..b36cb9fc 100644\n--- a/plone/app/contenttypes/migration/browser.py\n+++ b/plone/app/contenttypes/migration/browser.py\n@@ -268,7 +268,7 @@ def __call__(self,\n     def stats(self):\n         results = {}\n         catalog = self.context.portal_catalog\n-        for brain in catalog.getAllBrains():\n+        for brain in catalog():\n             descriptor = \'{} ({})\'.format(brain.portal_type, brain.meta_type)\n             results[descriptor] = results.get(descriptor, 0) + 1\n         return results\ndiff --git a/plone/app/contenttypes/tests/test_migration.py b/plone/app/contenttypes/tests/test_migration.py\nindex 8da6ce76..17241d6a 100644\n--- a/plone/app/contenttypes/tests/test_migration.py\n+++ b/plone/app/contenttypes/tests/test_migration.py\n@@ -1424,15 +1424,15 @@ def test_stats(self):\n         applyProfile(self.portal, \'plone.app.contenttypes:default\')\n         migrationview = MigrationView(self.portal, None)\n         stats = migrationview.stats()\n-        self.assertEqual(str(stats), "{\'ATDocument\': 2}")\n+        self.assertEqual(str(stats), "{\'Document (ATDocument)\': 2}")\n         migrator = self.get_migrator(at_doc1, DocumentMigrator)\n         migrator.migrate()\n         stats = migrationview.stats()\n-        self.assertEqual(str(stats), "{\'Document\': 1, \'ATDocument\': 1}")\n+        self.assertEqual(str(stats), "{\'Document (ATDocument)\': 2, \'Document (Dexterity Item)\': 1}")  # noqa: E501\n         migrator = self.get_migrator(at_doc2, DocumentMigrator)\n         migrator.migrate()\n         stats = migrationview.stats()\n-        self.assertEqual(str(stats), "{\'Document\': 2}")\n+        self.assertEqual(str(stats), "{\'Document (ATDocument)\': 1, \'Document (Dexterity Item)\': 2}")  # noqa: E501\n \n     def test_migration_atctypes_vocabulary_registered(self):\n         name = \'plone.app.contenttypes.migration.atctypes\'\n@@ -2111,13 +2111,15 @@ def test_pac_installer_with_content(self):\n         self.assertTrue(IDexterityFTI.providedBy(portal_types[\'News Item\']))\n         self.assertTrue(qi.is_product_installed(\'plone.app.contenttypes\'))\n         self.assertIn(\'Migration control panel\', self.browser.contents)\n-        self.assertIn(\'You currently have <span class="strong">1</span> archetypes objects to be migrated.\', self.browser.contents)  # noqa\n+        self.assertIn(\'You currently have <span class="strong">1</span> archetypes objects to be migrated.\', self.browser.contents)  # noqa E501\n \n     def test_atct_migration_form(self):\n         # add some at content:\n         self.portal.invokeFactory(\'Document\', \'doc1\')\n         self.portal.invokeFactory(\'News Item\', \'news1\')\n         self.portal.invokeFactory(\'News Item\', \'news2\')\n+        self.portal.invokeFactory(\'Folder\', \'folder\')\n+        self.portal[\'folder\'].invokeFactory(\'Document\', \'doc2\')\n         transaction.commit()\n         from zExceptions import NotFound\n         self.assertRaises(\n@@ -2129,16 +2131,19 @@ def test_atct_migration_form(self):\n         self.browser.getControl(\'Install\').click()\n         # check statistics before\n         self.assertIn(\n-            \'You currently have <span class="strong">3</span> archetypes \'\n+            \'You currently have <span class="strong">5</span> archetypes \'\n             \'objects to be migrated.\',\n             self.browser.contents,\n         )\n         widget = \'form.widgets.content_types:list\'\n         ct_widget = self.browser.getControl(name=widget)\n-        self.assertEqual(ct_widget.options, [\'Document\', \'News Item\'])\n+        self.assertEqual(\n+            ct_widget.options,\n+            [\'Document\', \'Folder\', \'News Item\'])\n         # all types are auto-selected\n-        self.assertEqual(ct_widget.value, [\'Document\', \'News Item\'])\n+        self.assertEqual(ct_widget.value, [\'Document\', \'Folder\', \'News Item\'])\n         widget = \'form.widgets.content_types:list\'\n+        # we only migrate Documents\n         self.browser.getControl(name=widget).value = [\'Document\']\n         widget = \'form.widgets.migrate_references:list\'\n         self.assertEqual(\n@@ -2148,13 +2153,37 @@ def test_atct_migration_form(self):\n         self.browser.getControl(name=\'form.buttons.migrate\').click()\n         from plone.app.contenttypes.interfaces import IDocument\n         from plone.app.contenttypes.interfaces import INewsItem\n+        from plone.app.contenttypes.interfaces import IFolder\n         self.assertTrue(IDocument.providedBy(self.portal[\'doc1\']))\n         self.assertFalse(INewsItem.providedBy(self.portal[\'news1\']))\n+        self.assertFalse(IFolder.providedBy(self.portal[\'folder\']))\n+        self.assertTrue(IDocument.providedBy(self.portal[\'folder\'][\'doc2\']))\n         self.assertIn(\n             \'Congratulations! You migrated from Archetypes to Dexterity.\',\n             self.browser.contents\n         )\n-        msg = \'<td>ATDocument</td>\\n      <td>Document</td>\\n      <td>1</td>\'\n+        msg = \'<td>ATDocument</td>\\n      <td>Document</td>\\n      <td>2</td>\'\n+        self.assertIn(msg, self.browser.contents)\n+        msg = \'<td>Document (ATDocument)</td>\\n      <td>2</td>\'\n+        self.assertIn(msg, self.browser.contents)\n+        msg = \'<td>News Item (ATNewsItem)</td>\\n      <td>2</td>\'\n+        self.assertIn(msg, self.browser.contents)\n+        msg = \'<td>Document (Dexterity Item)</td>\\n      <td>2</td>\'\n+        self.assertIn(msg, self.browser.contents)\n+        msg = \'<td>News Item (Dexterity Item)</td>\\n      <td>2</td>\'\n+        self.assertNotIn(msg, self.browser.contents)\n+        msg = \'<td>Folder (Dexterity Container)</td>\\n      <td>1</td>\'\n+        self.assertNotIn(msg, self.browser.contents)\n+\n+        # we only migrated Document, now we migrate the rest\n+        self.browser.getLink(\'Back to the Migration-Form\').click()\n+        widget = \'form.widgets.content_types:list\'\n+        ct_widget = self.browser.getControl(name=widget)\n+        self.assertEqual(ct_widget.options, [\'Folder\', \'News Item\'])\n+        self.browser.getControl(name=\'form.buttons.migrate\').click()\n+        self.assertTrue(INewsItem.providedBy(self.portal[\'news1\']))\n+        self.assertTrue(IFolder.providedBy(self.portal[\'folder\']))\n+        msg = \'<td>News Item (Dexterity Item)</td>\\n      <td>2</td>\'\n         self.assertIn(msg, self.browser.contents)\n-        msg = \'<tr>\\n      <td>ATNewsItem</td>\\n      <td>2</td>\\n    </tr>\'\n+        msg = \'<td>Folder (Dexterity Container)</td>\\n      <td>1</td>\'\n         self.assertIn(msg, self.browser.contents)\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2019-07-10T21:15:00+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/ea0f645d5061cc442849094433018eac045de96a

fix test

Files changed:
M plone/app/contenttypes/tests/test_migration.py

b'diff --git a/plone/app/contenttypes/tests/test_migration.py b/plone/app/contenttypes/tests/test_migration.py\nindex 17241d6a..709945ed 100644\n--- a/plone/app/contenttypes/tests/test_migration.py\n+++ b/plone/app/contenttypes/tests/test_migration.py\n@@ -1428,11 +1428,11 @@ def test_stats(self):\n         migrator = self.get_migrator(at_doc1, DocumentMigrator)\n         migrator.migrate()\n         stats = migrationview.stats()\n-        self.assertEqual(str(stats), "{\'Document (ATDocument)\': 2, \'Document (Dexterity Item)\': 1}")  # noqa: E501\n+        self.assertEqual(str(stats), "{\'Document (ATDocument)\': 1, \'Document (Dexterity Item)\': 1}")  # noqa: E501\n         migrator = self.get_migrator(at_doc2, DocumentMigrator)\n         migrator.migrate()\n         stats = migrationview.stats()\n-        self.assertEqual(str(stats), "{\'Document (ATDocument)\': 1, \'Document (Dexterity Item)\': 2}")  # noqa: E501\n+        self.assertEqual(str(stats), "{\'Document (Dexterity Item)\': 2}")\n \n     def test_migration_atctypes_vocabulary_registered(self):\n         name = \'plone.app.contenttypes.migration.atctypes\'\n'

