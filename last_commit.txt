Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2017-11-03T11:20:11+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/059620958e475f872e5f81503884b69e06d054b9

Fix exception view when called on Zope-root. Fixes #2203.

Files changed:
M CHANGES.rst
M Products/CMFPlone/browser/exceptions.py
M Products/CMFPlone/browser/templates/basic_error_message.pt

diff --git a/CHANGES.rst b/CHANGES.rst
index fa23bd4f6..fe602778e 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -28,6 +28,9 @@ New Features:
 
 Bug Fixes:
 
+- Fix exception view when called on Zope-root. Fixes #2203.
+  [pbauer]
+
 - added CSS hyphenation support for toolbar for avoiding ugly text wrapping
   Fixes `issue 723 <https://github.com/plone/Products.CMFPlone/issues/723>`_.
   [ajung]
diff --git a/Products/CMFPlone/browser/exceptions.py b/Products/CMFPlone/browser/exceptions.py
index edbe44b63..7a03a14d0 100644
--- a/Products/CMFPlone/browser/exceptions.py
+++ b/Products/CMFPlone/browser/exceptions.py
@@ -1,7 +1,10 @@
+# -*- coding: utf-8 -*-
 from AccessControl import getSecurityManager
+from OFS.interfaces import IApplication
 from Products.Five import BrowserView
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
 from zExceptions.ExceptionFormatter import format_exception
+
 import json
 import sys
 
@@ -31,13 +34,17 @@ def __call__(self):
                 'error_type': error_type,
             })
 
-        # Use a simplified template if main_template is not available
-        try:
-            self.context.unrestrictedTraverse('main_template')
-        except:
+        if IApplication.providedBy(self.context):
+            # The context is the Zope-root, so we cannot render our template
             template = self.basic_template
         else:
-            template = self.index
+            # Use a simplified template if main_template is not available
+            try:
+                self.context.unrestrictedTraverse('main_template')
+            except:
+                template = self.basic_template
+            else:
+                template = self.index
 
         # Render page with user-facing error notice
         request.set('disable_border', True)
diff --git a/Products/CMFPlone/browser/templates/basic_error_message.pt b/Products/CMFPlone/browser/templates/basic_error_message.pt
index 3eb3a9f3e..80539837e 100644
--- a/Products/CMFPlone/browser/templates/basic_error_message.pt
+++ b/Products/CMFPlone/browser/templates/basic_error_message.pt
@@ -10,6 +10,8 @@
 </head>
 
 <body>
+
+  <h1>${options/error_type}</h1>
   <p>We're sorry, but there seems to be an error.</p>
 
   <tal:block condition="view/is_manager"


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2017-11-03T15:02:26+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/80072d8f744f88edee523f6aebfba7a62873d402

check if we can get the site. improve template

Files changed:
M Products/CMFPlone/browser/exceptions.py
M Products/CMFPlone/browser/templates/basic_error_message.pt

diff --git a/Products/CMFPlone/browser/exceptions.py b/Products/CMFPlone/browser/exceptions.py
index 7a03a14d0..581543cd2 100644
--- a/Products/CMFPlone/browser/exceptions.py
+++ b/Products/CMFPlone/browser/exceptions.py
@@ -1,9 +1,9 @@
 # -*- coding: utf-8 -*-
 from AccessControl import getSecurityManager
-from OFS.interfaces import IApplication
 from Products.Five import BrowserView
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
 from zExceptions.ExceptionFormatter import format_exception
+from zope.component.hooks import getSite
 
 import json
 import sys
@@ -34,8 +34,8 @@ def __call__(self):
                 'error_type': error_type,
             })
 
-        if IApplication.providedBy(self.context):
-            # The context is the Zope-root, so we cannot render our template
+        if getSite() is None:
+            # We cannot get the site, so we cannot render our nice template
             template = self.basic_template
         else:
             # Use a simplified template if main_template is not available
diff --git a/Products/CMFPlone/browser/templates/basic_error_message.pt b/Products/CMFPlone/browser/templates/basic_error_message.pt
index 80539837e..11acb313e 100644
--- a/Products/CMFPlone/browser/templates/basic_error_message.pt
+++ b/Products/CMFPlone/browser/templates/basic_error_message.pt
@@ -5,17 +5,33 @@
       lang="en"
       i18n:domain="plone">
 
+<tal:def define="isManager python:view.is_manager()">
+
 <head>
-  <title>${options/error_type}</title>
+  <title tal:condition="not:isManager">Error</title>
+  <title tal:condition="isManager">${options/error_type}</title>
 </head>
 
 <body>
 
-  <h1>${options/error_type}</h1>
-  <p>We're sorry, but there seems to be an error.</p>
+  <h1 class="documentFirstHeading"
+      i18n:translate="heading_site_error_sorry">
+      We&#8217;re sorry, but there seems to be an error&hellip;
+  </h1>
+
+  <h2 class="documentFirstHeading"
+      tal:condition="isManager">${options/error_type}</h2>
 
-  <tal:block condition="view/is_manager"
+  <tal:block condition="isManager"
              replace="structure options/error_tb" />
-</body>
 
+  <tal:noentry condition="not:isManager">
+      <p i18n:translate="description_site_error_mail_site_admin">
+      If you are certain you have the correct web address but are encountering an error, please
+      contact the <span i18n:name="site_admin" i18n:translate="label_site_admin">site administration</span>.
+      </p>
+  </tal:noentry>
+
+</body>
+</tal:def>
 </html>


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2017-11-06T14:00:06+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/a3b5417c0551c5b2e471d850c858ca1adc19abde

Merge branch 'master' into fix_exceptionview_for_root

Files changed:
M Products/CMFPlone/URLTool.py
M Products/CMFPlone/patches/gtbn.py
M Products/CMFPlone/tests/robot/robodoc/README.rst

diff --git a/Products/CMFPlone/URLTool.py b/Products/CMFPlone/URLTool.py
index fc5bddc62..e77e07483 100644
--- a/Products/CMFPlone/URLTool.py
+++ b/Products/CMFPlone/URLTool.py
@@ -4,9 +4,11 @@
 from App.class_init import InitializeClass
 from plone.registry.interfaces import IRegistry
 from posixpath import normpath
+from Products.CMFCore.interfaces import ISiteRoot
 from Products.CMFCore.URLTool import URLTool as BaseTool
 from Products.CMFPlone.interfaces import ILoginSchema
 from Products.CMFPlone.PloneBaseTool import PloneBaseTool
+from Products.CMFPlone.patches.gtbn import rewrap_in_request_container
 from urlparse import urlparse, urljoin
 from zope.component import getUtility
 import re
@@ -84,8 +86,11 @@ def isURLInPortal(self, url, context=None):
         return False
 
     def getPortalObject(self):
-        # Make sure portal is wrapped properly
-        return aq_parent(aq_inner(self))
+        portal = aq_parent(aq_inner(self))
+        if portal is None:
+            portal = getUtility(ISiteRoot)
+        # Make sure portal can acquire REQUEST
+        return rewrap_in_request_container(portal, context=self)
 
 
 URLTool.__doc__ = BaseTool.__doc__
diff --git a/Products/CMFPlone/patches/gtbn.py b/Products/CMFPlone/patches/gtbn.py
index 9d679c64c..6a9205126 100644
--- a/Products/CMFPlone/patches/gtbn.py
+++ b/Products/CMFPlone/patches/gtbn.py
@@ -1,5 +1,27 @@
 # -*- coding: utf-8 -*-
+from Acquisition import aq_parent, aq_base, aq_inner
+from Acquisition import IAcquirer
 from Products.CMFCore import utils
+from zope.globalrequest import getRequest
+from ZPublisher.BaseRequest import RequestContainer
+
+
+def rewrap_in_request_container(obj, context=None):
+    '''Fix an object's acquisition wrapper to be able to acquire the REQUEST.'''
+    request = getattr(context, 'REQUEST', None) or getRequest()
+    if IAcquirer.providedBy(obj) and request is not None:
+        chain = []
+        parent = obj
+        while 1:
+            chain.append(parent)
+            parent = aq_parent(aq_inner(parent))
+            if parent in chain or parent is None or isinstance(
+                    parent, RequestContainer):
+                break
+        obj = RequestContainer(REQUEST=request)
+        for ob in reversed(chain):
+            obj = aq_base(ob).__of__(obj)
+    return obj
 
 # Check return value of getToolByName
 # this used to be step 5 in earlypatches, but was moved to avoid
@@ -8,12 +30,8 @@
 # rather than the entire function, to make sure that aliases to the function
 # that were imported prior to this patch will still run the patched code.
 code = """
-from Acquisition.interfaces import IAcquirer
-from Acquisition import aq_base, aq_chain, aq_inner
 from persistent.interfaces import IPersistent
 from OFS.interfaces import IItem
-from ZPublisher.BaseRequest import RequestContainer
-from zope.globalrequest import getRequest
 try:
     from Products.ATContentTypes.tool.factory import FauxArchetypeTool
 except ImportError:
@@ -32,22 +50,7 @@ def check_getToolByName(obj, name, default=_marker):
             result.__class__.__module__ == 'mock' or \
             result is _marker or \
             result is default:
-
-        # Rewrap in request container
-        request = getattr(obj, 'REQUEST', None) or getRequest()
-        if IAcquirer.providedBy(result) and request is not None:
-            chain = []
-            parent = result
-            while 1:
-                chain.append(parent)
-                parent = aq_parent(aq_inner(parent))
-                if parent in chain or parent is None or isinstance(parent, RequestContainer):
-                    break
-            result = RequestContainer(REQUEST=request)
-            for ob in reversed(chain):
-                result = aq_base(ob).__of__(result)
-
-        return result
+        return rewrap_in_request_container(result, context=obj)
     else:
         raise TypeError("Object found is not a portal tool (%s)" % (name,))
     return result
@@ -57,6 +60,8 @@ def check_getToolByName(obj, name, default=_marker):
                     "with Products.PloneHotfix20121106, the fixes are "
                     "included already in Products.CMFPlone, please remove "
                     "the hotfix")
+utils.getToolByName.func_globals[
+    'rewrap_in_request_container'] = rewrap_in_request_container
 exec code in utils.getToolByName.func_globals
 utils._getToolByName.func_code = utils.getToolByName.func_code
 utils.getToolByName.func_code = utils.check_getToolByName.func_code
diff --git a/Products/CMFPlone/tests/robot/robodoc/README.rst b/Products/CMFPlone/tests/robot/robodoc/README.rst
index b210a3f62..225c445d9 100644
--- a/Products/CMFPlone/tests/robot/robodoc/README.rst
+++ b/Products/CMFPlone/tests/robot/robodoc/README.rst
@@ -73,3 +73,13 @@ This option will be faster for subsequent runs.
 Environment variable ``APPLY_PROFILES`` can be set to a comma separated list of Generic Setup profiles and is used by the very special test fixture ``PLONE_ROBOT_TESTING`` to prepare a Plone site with those profiles installed. There's also an another special variable ``CONFIGURE_PACKAGES`` that can be set to a comma separated list of package names (e.g. to ``plone.app.iterate``) to configure more profiles to be available for ``APPLY_PROFILES``.
 
 A special variable ``ROBOT_SERVER:True`` must be set for Robot Framework test runner to fix the test suite to be aware of being executed against long-running robot server.
+
+Screenshots for documentation
+=============================
+
+The screenshots are meant for the Plone documentation.
+
+As there are still browser bugs, it is good to visually inspect them before they are uploaded in the repository
+https://github.com/plone/documentation-roboshots
+
+In there, the tagged releases should contain known-good-sets of screenshots for a particular Plone version.


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2017-11-06T14:00:37+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/a08de8f0f20742bb2a8b2a690775b766ca2a07a7

Merge pull request #2204 from plone/fix_exceptionview_for_root

Fix exception view when called on Zope-root

Files changed:
M CHANGES.rst
M Products/CMFPlone/browser/exceptions.py
M Products/CMFPlone/browser/templates/basic_error_message.pt

diff --git a/CHANGES.rst b/CHANGES.rst
index fa23bd4f6..fe602778e 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -28,6 +28,9 @@ New Features:
 
 Bug Fixes:
 
+- Fix exception view when called on Zope-root. Fixes #2203.
+  [pbauer]
+
 - added CSS hyphenation support for toolbar for avoiding ugly text wrapping
   Fixes `issue 723 <https://github.com/plone/Products.CMFPlone/issues/723>`_.
   [ajung]
diff --git a/Products/CMFPlone/browser/exceptions.py b/Products/CMFPlone/browser/exceptions.py
index edbe44b63..581543cd2 100644
--- a/Products/CMFPlone/browser/exceptions.py
+++ b/Products/CMFPlone/browser/exceptions.py
@@ -1,7 +1,10 @@
+# -*- coding: utf-8 -*-
 from AccessControl import getSecurityManager
 from Products.Five import BrowserView
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
 from zExceptions.ExceptionFormatter import format_exception
+from zope.component.hooks import getSite
+
 import json
 import sys
 
@@ -31,13 +34,17 @@ def __call__(self):
                 'error_type': error_type,
             })
 
-        # Use a simplified template if main_template is not available
-        try:
-            self.context.unrestrictedTraverse('main_template')
-        except:
+        if getSite() is None:
+            # We cannot get the site, so we cannot render our nice template
             template = self.basic_template
         else:
-            template = self.index
+            # Use a simplified template if main_template is not available
+            try:
+                self.context.unrestrictedTraverse('main_template')
+            except:
+                template = self.basic_template
+            else:
+                template = self.index
 
         # Render page with user-facing error notice
         request.set('disable_border', True)
diff --git a/Products/CMFPlone/browser/templates/basic_error_message.pt b/Products/CMFPlone/browser/templates/basic_error_message.pt
index 3eb3a9f3e..11acb313e 100644
--- a/Products/CMFPlone/browser/templates/basic_error_message.pt
+++ b/Products/CMFPlone/browser/templates/basic_error_message.pt
@@ -5,15 +5,33 @@
       lang="en"
       i18n:domain="plone">
 
+<tal:def define="isManager python:view.is_manager()">
+
 <head>
-  <title>${options/error_type}</title>
+  <title tal:condition="not:isManager">Error</title>
+  <title tal:condition="isManager">${options/error_type}</title>
 </head>
 
 <body>
-  <p>We're sorry, but there seems to be an error.</p>
 
-  <tal:block condition="view/is_manager"
+  <h1 class="documentFirstHeading"
+      i18n:translate="heading_site_error_sorry">
+      We&#8217;re sorry, but there seems to be an error&hellip;
+  </h1>
+
+  <h2 class="documentFirstHeading"
+      tal:condition="isManager">${options/error_type}</h2>
+
+  <tal:block condition="isManager"
              replace="structure options/error_tb" />
-</body>
 
+  <tal:noentry condition="not:isManager">
+      <p i18n:translate="description_site_error_mail_site_admin">
+      If you are certain you have the correct web address but are encountering an error, please
+      contact the <span i18n:name="site_admin" i18n:translate="label_site_admin">site administration</span>.
+      </p>
+  </tal:noentry>
+
+</body>
+</tal:def>
 </html>


