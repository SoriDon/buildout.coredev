Repository: plone.restapi


Branch: refs/heads/master
Date: 2019-06-13T11:38:39+02:00
Author: Lukas Graf (lukasgraf) <lukas.graf@4teamwork.ch>
Commit: https://github.com/plone/plone.restapi/commit/e57ce75619cc5954046e542a518e93f6098789cd

Order imports according to Plone styleguide.

Files changed:
M src/plone/restapi/tests/test_types.py
M src/plone/restapi/types/adapters.py

b'diff --git a/src/plone/restapi/tests/test_types.py b/src/plone/restapi/tests/test_types.py\nindex 546c2480..08b765c1 100644\n--- a/src/plone/restapi/tests/test_types.py\n+++ b/src/plone/restapi/tests/test_types.py\n@@ -1,24 +1,23 @@\n # -*- coding: utf-8 -*-\n from datetime import date\n from decimal import Decimal\n-from unittest import TestCase\n-\n-from zope.component import getMultiAdapter\n-from zope import schema\n-from zope.schema.vocabulary import SimpleVocabulary, SimpleTerm\n from plone.app.textfield import RichText\n from plone.autoform import directives as form\n from plone.dexterity.fti import DexterityFTI\n-from plone.supermodel import model\n-from Products.CMFCore.utils import getToolByName\n-\n from plone.restapi.testing import PLONE_RESTAPI_DX_INTEGRATION_TESTING\n from plone.restapi.types.interfaces import IJsonSchemaProvider\n from plone.restapi.types.utils import get_fieldsets\n from plone.restapi.types.utils import get_jsonschema_for_fti\n from plone.restapi.types.utils import get_jsonschema_for_portal_type\n from plone.restapi.types.utils import get_jsonschema_properties\n+from plone.supermodel import model\n+from Products.CMFCore.utils import getToolByName\n+from unittest import TestCase\n from z3c.form.browser.text import TextWidget\n+from zope import schema\n+from zope.component import getMultiAdapter\n+from zope.schema.vocabulary import SimpleTerm\n+from zope.schema.vocabulary import SimpleVocabulary\n \n \n class IDummySchema(model.Schema):\ndiff --git a/src/plone/restapi/types/adapters.py b/src/plone/restapi/types/adapters.py\nindex d26c2b25..c5dc0e8f 100644\n--- a/src/plone/restapi/types/adapters.py\n+++ b/src/plone/restapi/types/adapters.py\n@@ -1,6 +1,10 @@\n # -*- coding: utf-8 -*-\n """JsonSchema providers."""\n from plone.app.textfield.interfaces import IRichText\n+from plone.restapi.types.interfaces import IJsonSchemaProvider\n+from plone.restapi.types.utils import get_fieldsets, get_widget_params\n+from plone.restapi.types.utils import get_jsonschema_properties\n+from plone.restapi.types.utils import get_vocabulary_url\n from plone.schema import IJSONField\n from zope.component import adapter\n from zope.component import getMultiAdapter\n@@ -28,11 +32,6 @@\n from zope.schema.interfaces import ITextLine\n from zope.schema.interfaces import ITuple\n \n-from plone.restapi.types.interfaces import IJsonSchemaProvider\n-from plone.restapi.types.utils import get_fieldsets, get_widget_params\n-from plone.restapi.types.utils import get_jsonschema_properties\n-from plone.restapi.types.utils import get_vocabulary_url\n-\n \n @adapter(IField, Interface, Interface)\n @implementer(IJsonSchemaProvider)\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2019-06-13T11:38:39+02:00
Author: Lukas Graf (lukasgraf) <lukas.graf@4teamwork.ch>
Commit: https://github.com/plone/plone.restapi/commit/8a4061a44bb9c75160b6d87a3bd9f1201ff77a7c

Add failing test for context aware default factories.

Files changed:
M src/plone/restapi/tests/test_types.py

b'diff --git a/src/plone/restapi/tests/test_types.py b/src/plone/restapi/tests/test_types.py\nindex 08b765c1..eed2f5ba 100644\n--- a/src/plone/restapi/tests/test_types.py\n+++ b/src/plone/restapi/tests/test_types.py\n@@ -16,6 +16,8 @@\n from z3c.form.browser.text import TextWidget\n from zope import schema\n from zope.component import getMultiAdapter\n+from zope.interface import provider\n+from zope.schema.interfaces import IContextAwareDefaultFactory\n from zope.schema.vocabulary import SimpleTerm\n from zope.schema.vocabulary import SimpleVocabulary\n \n@@ -200,6 +202,32 @@ def dummy_source_vocab(self, context):\n             ]\n         )\n \n+    def test_context_aware_default_factory(self):\n+        folder = self.portal[self.portal.invokeFactory(\n+            "Folder", id="folder", title="My Folder")]\n+\n+        @provider(IContextAwareDefaultFactory)\n+        def uppercased_title_default(context):\n+            return context.title.upper()\n+\n+        field = schema.TextLine(\n+            title=u"My field", description=u"My great field",\n+            defaultFactory=uppercased_title_default\n+        )\n+        adapter = getMultiAdapter(\n+            (field, folder, self.request), IJsonSchemaProvider\n+        )\n+\n+        self.assertEqual(\n+            {\n+                "type": "string",\n+                "title": u"My field",\n+                "description": u"My great field",\n+                "default": u"MY FOLDER",\n+            },\n+            adapter.get_schema(),\n+        )\n+\n     def test_textline(self):\n         field = schema.TextLine(\n             title=u"My field", description=u"My great field", default=u"foobar"\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2019-06-13T11:38:39+02:00
Author: Lukas Graf (lukasgraf) <lukas.graf@4teamwork.ch>
Commit: https://github.com/plone/plone.restapi/commit/bf399fb87b4e83f38c327632c3b337fb5ccb31c0

types endpoint: Fix support for context aware default factories

by using a field bound to a context in DefaultJsonSchemaProvider.

Files changed:
M src/plone/restapi/types/adapters.py

b'diff --git a/src/plone/restapi/types/adapters.py b/src/plone/restapi/types/adapters.py\nindex c5dc0e8f..32281cd9 100644\n--- a/src/plone/restapi/types/adapters.py\n+++ b/src/plone/restapi/types/adapters.py\n@@ -37,7 +37,7 @@\n @implementer(IJsonSchemaProvider)\n class DefaultJsonSchemaProvider(object):\n     def __init__(self, field, context, request):\n-        self.field = field\n+        self.field = field.bind(context)\n         self.context = context\n         self.request = request\n \n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2019-06-13T11:38:39+02:00
Author: Lukas Graf (lukasgraf) <lukas.graf@4teamwork.ch>
Commit: https://github.com/plone/plone.restapi/commit/2aa888783884eab683056873c55b929daf81a2e6

Add changelog entry.

Files changed:
A news/748.bugfix

b'diff --git a/news/748.bugfix b/news/748.bugfix\nnew file mode 100644\nindex 00000000..b4bbe96b\n--- /dev/null\n+++ b/news/748.bugfix\n@@ -0,0 +1,2 @@\n+@types endpoint: Fix support for context aware default factories.\n+[lgraf]\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2019-06-15T10:38:00+02:00
Author: Timo Stollenwerk (tisto) <tisto@users.noreply.github.com>
Commit: https://github.com/plone/plone.restapi/commit/fa165c335b7a030d35f90b5d5081035bd49fc623

Merge pull request #750 from plone/lg-bind-field-for-determining-defaults

types endpoint: Fix support for context aware default factories

Files changed:
A news/748.bugfix
M src/plone/restapi/tests/test_types.py
M src/plone/restapi/types/adapters.py

b'diff --git a/news/748.bugfix b/news/748.bugfix\nnew file mode 100644\nindex 00000000..b4bbe96b\n--- /dev/null\n+++ b/news/748.bugfix\n@@ -0,0 +1,2 @@\n+@types endpoint: Fix support for context aware default factories.\n+[lgraf]\ndiff --git a/src/plone/restapi/tests/test_types.py b/src/plone/restapi/tests/test_types.py\nindex 546c2480..eed2f5ba 100644\n--- a/src/plone/restapi/tests/test_types.py\n+++ b/src/plone/restapi/tests/test_types.py\n@@ -1,24 +1,25 @@\n # -*- coding: utf-8 -*-\n from datetime import date\n from decimal import Decimal\n-from unittest import TestCase\n-\n-from zope.component import getMultiAdapter\n-from zope import schema\n-from zope.schema.vocabulary import SimpleVocabulary, SimpleTerm\n from plone.app.textfield import RichText\n from plone.autoform import directives as form\n from plone.dexterity.fti import DexterityFTI\n-from plone.supermodel import model\n-from Products.CMFCore.utils import getToolByName\n-\n from plone.restapi.testing import PLONE_RESTAPI_DX_INTEGRATION_TESTING\n from plone.restapi.types.interfaces import IJsonSchemaProvider\n from plone.restapi.types.utils import get_fieldsets\n from plone.restapi.types.utils import get_jsonschema_for_fti\n from plone.restapi.types.utils import get_jsonschema_for_portal_type\n from plone.restapi.types.utils import get_jsonschema_properties\n+from plone.supermodel import model\n+from Products.CMFCore.utils import getToolByName\n+from unittest import TestCase\n from z3c.form.browser.text import TextWidget\n+from zope import schema\n+from zope.component import getMultiAdapter\n+from zope.interface import provider\n+from zope.schema.interfaces import IContextAwareDefaultFactory\n+from zope.schema.vocabulary import SimpleTerm\n+from zope.schema.vocabulary import SimpleVocabulary\n \n \n class IDummySchema(model.Schema):\n@@ -201,6 +202,32 @@ def dummy_source_vocab(self, context):\n             ]\n         )\n \n+    def test_context_aware_default_factory(self):\n+        folder = self.portal[self.portal.invokeFactory(\n+            "Folder", id="folder", title="My Folder")]\n+\n+        @provider(IContextAwareDefaultFactory)\n+        def uppercased_title_default(context):\n+            return context.title.upper()\n+\n+        field = schema.TextLine(\n+            title=u"My field", description=u"My great field",\n+            defaultFactory=uppercased_title_default\n+        )\n+        adapter = getMultiAdapter(\n+            (field, folder, self.request), IJsonSchemaProvider\n+        )\n+\n+        self.assertEqual(\n+            {\n+                "type": "string",\n+                "title": u"My field",\n+                "description": u"My great field",\n+                "default": u"MY FOLDER",\n+            },\n+            adapter.get_schema(),\n+        )\n+\n     def test_textline(self):\n         field = schema.TextLine(\n             title=u"My field", description=u"My great field", default=u"foobar"\ndiff --git a/src/plone/restapi/types/adapters.py b/src/plone/restapi/types/adapters.py\nindex d26c2b25..32281cd9 100644\n--- a/src/plone/restapi/types/adapters.py\n+++ b/src/plone/restapi/types/adapters.py\n@@ -1,6 +1,10 @@\n # -*- coding: utf-8 -*-\n """JsonSchema providers."""\n from plone.app.textfield.interfaces import IRichText\n+from plone.restapi.types.interfaces import IJsonSchemaProvider\n+from plone.restapi.types.utils import get_fieldsets, get_widget_params\n+from plone.restapi.types.utils import get_jsonschema_properties\n+from plone.restapi.types.utils import get_vocabulary_url\n from plone.schema import IJSONField\n from zope.component import adapter\n from zope.component import getMultiAdapter\n@@ -28,17 +32,12 @@\n from zope.schema.interfaces import ITextLine\n from zope.schema.interfaces import ITuple\n \n-from plone.restapi.types.interfaces import IJsonSchemaProvider\n-from plone.restapi.types.utils import get_fieldsets, get_widget_params\n-from plone.restapi.types.utils import get_jsonschema_properties\n-from plone.restapi.types.utils import get_vocabulary_url\n-\n \n @adapter(IField, Interface, Interface)\n @implementer(IJsonSchemaProvider)\n class DefaultJsonSchemaProvider(object):\n     def __init__(self, field, context, request):\n-        self.field = field\n+        self.field = field.bind(context)\n         self.context = context\n         self.request = request\n \n'

