Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2023-01-31T22:13:41+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.upgrade/commit/48c66b3d3336ee98e59e770720ed2a4b322e1290

Add two missing upgrades steps to Plone 5.2.10 and 5.2.11.

I copied and adapted some code from the plone.app.upgrade branch used in Plone 5.2.

Files changed:
A news/5211.bugfix
M plone/app/upgrade/v52/configure.zcml
M plone/app/upgrade/v52/final.py

b'diff --git a/news/5211.bugfix b/news/5211.bugfix\nnew file mode 100644\nindex 00000000..cffceb63\n--- /dev/null\n+++ b/news/5211.bugfix\n@@ -0,0 +1,2 @@\n+Add two missing upgrades steps to Plone 5.2.10 and 5.2.11.\n+[maurits]\ndiff --git a/plone/app/upgrade/v52/configure.zcml b/plone/app/upgrade/v52/configure.zcml\nindex ff59e47c..8991ea52 100644\n--- a/plone/app/upgrade/v52/configure.zcml\n+++ b/plone/app/upgrade/v52/configure.zcml\n@@ -208,4 +208,69 @@\n \n     </gs:upgradeSteps>\n \n+    <gs:upgradeSteps\n+        source="5214"\n+        destination="5215"\n+        profile="Products.CMFPlone:plone">\n+        <!-- Plone 5.2.7 -->\n+\n+        <gs:upgradeStep\n+            title="Miscellaneous"\n+            handler="..utils.null_upgrade_step"\n+            />\n+\n+    </gs:upgradeSteps>\n+\n+    <gs:upgradeSteps\n+        source="5215"\n+        destination="5216"\n+        profile="Products.CMFPlone:plone">\n+        <!-- Plone 5.2.8 -->\n+\n+        <gs:upgradeStep\n+            title="Miscellaneous upgrades to Plone 5.2.8"\n+            handler="..utils.null_upgrade_step"\n+            />\n+\n+    </gs:upgradeSteps>\n+\n+    <gs:upgradeSteps\n+        source="5216"\n+        destination="5217"\n+        profile="Products.CMFPlone:plone">\n+        <!-- Plone 5.2.9 -->\n+\n+        <gs:upgradeStep\n+            title="Miscellaneous upgrades to Plone 5.2.9"\n+            handler="..utils.null_upgrade_step"\n+            />\n+\n+    </gs:upgradeSteps>\n+\n+    <gs:upgradeSteps\n+        source="5217"\n+        destination="5218"\n+        profile="Products.CMFPlone:plone">\n+        <!-- Plone 5.2.10 -->\n+\n+        <gs:upgradeStep\n+            title="Add a timezone property to portal memberdata if it is missing."\n+            handler=".final.add_the_timezone_property"\n+            />\n+\n+    </gs:upgradeSteps>\n+\n+    <gs:upgradeSteps\n+        source="5218"\n+        destination="5219"\n+        profile="Products.CMFPlone:plone">\n+        <!-- Plone 5.2.11 -->\n+\n+        <gs:upgradeStep\n+            title="Add GET application/json for content to weak caching."\n+            handler=".final.add_get_application_json_to_weak_caching"\n+            />\n+\n+    </gs:upgradeSteps>\n+\n </configure>\ndiff --git a/plone/app/upgrade/v52/final.py b/plone/app/upgrade/v52/final.py\nindex 4f63d23f..9d297208 100644\n--- a/plone/app/upgrade/v52/final.py\n+++ b/plone/app/upgrade/v52/final.py\n@@ -260,3 +260,42 @@ def secure_portal_setup_objects(context):\n         return\n     _recursive_strict_permission(context.snapshots)\n     logger.info("Made portal_setup snapshots only available for Manager and Owner.")\n+\n+\n+def add_the_timezone_property(context):\n+    """Ensure that the portal_memberdata tool has the timezone property."""\n+    portal_memberdata = getToolByName(context, "portal_memberdata")\n+    if portal_memberdata.hasProperty("timezone"):\n+        return\n+    portal_memberdata.manage_addProperty("timezone", "", "string")\n+\n+\n+def add_get_application_json_to_weak_caching(context):\n+    """Add GET application/json for content to weak caching.\n+\n+    See https://github.com/plone/plone.rest/issues/73#issuecomment-1384298492\n+    We want to get this in the templateRulesetMapping setting of the registry:\n+\n+        <element key="GET_application_json_">plone.content.folderView</element>\n+    """\n+    registry = getUtility(IRegistry)\n+    try:\n+        from plone.app.caching.interfaces import IPloneCacheSettings\n+    except ImportError:\n+        # plone.app.caching is optional.\n+        return\n+\n+    try:\n+        settings = registry.forInterface(IPloneCacheSettings)\n+    except KeyError:\n+        # It is available, but not activated.  Nothing to do.\n+        return\n+    mapping = settings.templateRulesetMapping\n+    key = "GET_application_json_"\n+    if key in mapping:\n+        # already set, do not change\n+        return\n+    mapping[key] = "plone.content.folderView"\n+    # Note: if we edit templateRulesetMapping, our change will not be persisted,\n+    # because it is a simple dict.  We have to set the entire mapping.\n+    settings.templateRulesetMapping = mapping\n'

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2023-02-01T11:54:44+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.upgrade/commit/4dbc8ac6c0987a11577bce3a5d5f873424efa898

Merge pull request #310 from plone/maurits-add-upgrades-5211

Add two missing upgrades steps to Plone 5.2.10 and 5.2.11.

Files changed:
A news/5211.bugfix
M plone/app/upgrade/v52/configure.zcml
M plone/app/upgrade/v52/final.py

b'diff --git a/news/5211.bugfix b/news/5211.bugfix\nnew file mode 100644\nindex 00000000..cffceb63\n--- /dev/null\n+++ b/news/5211.bugfix\n@@ -0,0 +1,2 @@\n+Add two missing upgrades steps to Plone 5.2.10 and 5.2.11.\n+[maurits]\ndiff --git a/plone/app/upgrade/v52/configure.zcml b/plone/app/upgrade/v52/configure.zcml\nindex ff59e47c..8991ea52 100644\n--- a/plone/app/upgrade/v52/configure.zcml\n+++ b/plone/app/upgrade/v52/configure.zcml\n@@ -208,4 +208,69 @@\n \n     </gs:upgradeSteps>\n \n+    <gs:upgradeSteps\n+        source="5214"\n+        destination="5215"\n+        profile="Products.CMFPlone:plone">\n+        <!-- Plone 5.2.7 -->\n+\n+        <gs:upgradeStep\n+            title="Miscellaneous"\n+            handler="..utils.null_upgrade_step"\n+            />\n+\n+    </gs:upgradeSteps>\n+\n+    <gs:upgradeSteps\n+        source="5215"\n+        destination="5216"\n+        profile="Products.CMFPlone:plone">\n+        <!-- Plone 5.2.8 -->\n+\n+        <gs:upgradeStep\n+            title="Miscellaneous upgrades to Plone 5.2.8"\n+            handler="..utils.null_upgrade_step"\n+            />\n+\n+    </gs:upgradeSteps>\n+\n+    <gs:upgradeSteps\n+        source="5216"\n+        destination="5217"\n+        profile="Products.CMFPlone:plone">\n+        <!-- Plone 5.2.9 -->\n+\n+        <gs:upgradeStep\n+            title="Miscellaneous upgrades to Plone 5.2.9"\n+            handler="..utils.null_upgrade_step"\n+            />\n+\n+    </gs:upgradeSteps>\n+\n+    <gs:upgradeSteps\n+        source="5217"\n+        destination="5218"\n+        profile="Products.CMFPlone:plone">\n+        <!-- Plone 5.2.10 -->\n+\n+        <gs:upgradeStep\n+            title="Add a timezone property to portal memberdata if it is missing."\n+            handler=".final.add_the_timezone_property"\n+            />\n+\n+    </gs:upgradeSteps>\n+\n+    <gs:upgradeSteps\n+        source="5218"\n+        destination="5219"\n+        profile="Products.CMFPlone:plone">\n+        <!-- Plone 5.2.11 -->\n+\n+        <gs:upgradeStep\n+            title="Add GET application/json for content to weak caching."\n+            handler=".final.add_get_application_json_to_weak_caching"\n+            />\n+\n+    </gs:upgradeSteps>\n+\n </configure>\ndiff --git a/plone/app/upgrade/v52/final.py b/plone/app/upgrade/v52/final.py\nindex 4f63d23f..9d297208 100644\n--- a/plone/app/upgrade/v52/final.py\n+++ b/plone/app/upgrade/v52/final.py\n@@ -260,3 +260,42 @@ def secure_portal_setup_objects(context):\n         return\n     _recursive_strict_permission(context.snapshots)\n     logger.info("Made portal_setup snapshots only available for Manager and Owner.")\n+\n+\n+def add_the_timezone_property(context):\n+    """Ensure that the portal_memberdata tool has the timezone property."""\n+    portal_memberdata = getToolByName(context, "portal_memberdata")\n+    if portal_memberdata.hasProperty("timezone"):\n+        return\n+    portal_memberdata.manage_addProperty("timezone", "", "string")\n+\n+\n+def add_get_application_json_to_weak_caching(context):\n+    """Add GET application/json for content to weak caching.\n+\n+    See https://github.com/plone/plone.rest/issues/73#issuecomment-1384298492\n+    We want to get this in the templateRulesetMapping setting of the registry:\n+\n+        <element key="GET_application_json_">plone.content.folderView</element>\n+    """\n+    registry = getUtility(IRegistry)\n+    try:\n+        from plone.app.caching.interfaces import IPloneCacheSettings\n+    except ImportError:\n+        # plone.app.caching is optional.\n+        return\n+\n+    try:\n+        settings = registry.forInterface(IPloneCacheSettings)\n+    except KeyError:\n+        # It is available, but not activated.  Nothing to do.\n+        return\n+    mapping = settings.templateRulesetMapping\n+    key = "GET_application_json_"\n+    if key in mapping:\n+        # already set, do not change\n+        return\n+    mapping[key] = "plone.content.folderView"\n+    # Note: if we edit templateRulesetMapping, our change will not be persisted,\n+    # because it is a simple dict.  We have to set the entire mapping.\n+    settings.templateRulesetMapping = mapping\n'

