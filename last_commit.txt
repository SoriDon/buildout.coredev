Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-05-25T02:53:18+02:00
Author: Miu Razvan (razvanMiu) <miu.razvan28@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/a80b3371a8f10e3797f542a9a2f9a4033cee6a89

Added 'View comments' and 'Reply to item' permission to discussion (#1327)

* Added 'View comments' and 'Reply to item' permission to discussion

* Changelog

* Black format

* Use permissions from plone.app.discussion for discussion endpoints

* Revert use of permissions from plone.app.discussion

* Update tests

* Update tests

* Update tests

* Use permissions from plone.app.discussion for update and delete

Co-authored-by: Alin Voinea &lt;contact@avoinea.com&gt;

Files changed:
A news/1327.feature
M src/plone/restapi/serializer/discussion.py
M src/plone/restapi/services/discussion/configure.zcml
M src/plone/restapi/services/discussion/utils.py
M src/plone/restapi/tests/http-examples/comments_get.resp
M src/plone/restapi/tests/test_comments.py
M src/plone/restapi/tests/test_services_comments.py

b'diff --git a/news/1327.feature b/news/1327.feature\nnew file mode 100644\nindex 000000000..7346890e3\n--- /dev/null\n+++ b/news/1327.feature\n@@ -0,0 +1 @@\n+- Added \'View comments\' and \'Reply to item\' permission to discussion [@razvanMiu]\ndiff --git a/src/plone/restapi/serializer/discussion.py b/src/plone/restapi/serializer/discussion.py\nindex c4fc8ff5a..f66898f2a 100644\n--- a/src/plone/restapi/serializer/discussion.py\n+++ b/src/plone/restapi/serializer/discussion.py\n@@ -5,7 +5,9 @@\n from plone.restapi.interfaces import ISerializeToJson\n from plone.restapi.services.discussion.utils import can_delete\n from plone.restapi.services.discussion.utils import can_delete_own\n+from plone.restapi.services.discussion.utils import can_view\n from plone.restapi.services.discussion.utils import can_edit\n+from plone.restapi.services.discussion.utils import can_reply\n from plone.restapi.services.discussion.utils import delete_own_comment_allowed\n from plone.restapi.services.discussion.utils import edit_comment_allowed\n from Products.CMFCore.utils import getToolByName\n@@ -24,6 +26,7 @@ def __init__(self, context, request):\n \n     def __call__(self):\n         # We\'ll batch the threads\n+        view_comments = can_view(self.context)\n         results = list(self.context.getThreads())\n         batch = HypermediaBatch(self.request, results)\n \n@@ -31,13 +34,21 @@ def __call__(self):\n         results["@id"] = batch.canonical_url\n \n         results["items_total"] = batch.items_total\n+        results["permissions"] = {\n+            "view_comments": view_comments,\n+            "can_reply": can_reply(self.context),\n+        }\n         if batch.links:\n             results["batching"] = batch.links\n \n-        results["items"] = [\n-            getMultiAdapter((thread["comment"], self.request), ISerializeToJson)()\n-            for thread in batch\n-        ]\n+        results["items"] = (\n+            [\n+                getMultiAdapter((thread["comment"], self.request), ISerializeToJson)()\n+                for thread in batch\n+            ]\n+            if view_comments\n+            else []\n+        )\n \n         return results\n \n@@ -87,6 +98,7 @@ def __call__(self, include_items=True):\n             ),  # noqa\n             "is_editable": edit_comment_allowed() and can_edit(self.context),\n             "is_deletable": can_delete(self.context) or delete_own,\n+            "can_reply": can_reply(self.context),\n         }\n \n     def get_author_image(self, username=None):\ndiff --git a/src/plone/restapi/services/discussion/configure.zcml b/src/plone/restapi/services/discussion/configure.zcml\nindex af608d91e..635872d23 100644\n--- a/src/plone/restapi/services/discussion/configure.zcml\n+++ b/src/plone/restapi/services/discussion/configure.zcml\n@@ -35,7 +35,7 @@\n       method="PATCH"\n       factory=".conversation.CommentsUpdate"\n       for="*"\n-      permission="zope2.View"\n+      permission="plone.app.discussion.EditComments"\n       name="@comments"\n       />\n \n@@ -43,7 +43,7 @@\n       method="DELETE"\n       factory=".conversation.CommentsDelete"\n       for="*"\n-      permission="zope2.View"\n+      permission="plone.app.discussion.DeleteComments"\n       name="@comments"\n       />\n \ndiff --git a/src/plone/restapi/services/discussion/utils.py b/src/plone/restapi/services/discussion/utils.py\nindex 92d4dce87..2bae3aa8b 100644\n--- a/src/plone/restapi/services/discussion/utils.py\n+++ b/src/plone/restapi/services/discussion/utils.py\n@@ -28,6 +28,13 @@ def permission_exists(permission_id):\n     return permission is not None\n \n \n+def can_view(context):\n+    """Returns true if current user has the \'View comments\' permission."""\n+    if not permission_exists("plone.app.discussion.ViewComments"):\n+        return bool(getSecurityManager().checkPermission("View", context))\n+    return bool(getSecurityManager().checkPermission("View comments", context))\n+\n+\n def can_review(comment):\n     """Returns true if current user has the \'Review comments\' permission."""\n     return bool(\n@@ -35,6 +42,13 @@ def can_review(comment):\n     )\n \n \n+def can_reply(comment):\n+    """Returns true if current user has the \'Reply to item\' permission."""\n+    return bool(\n+        getSecurityManager().checkPermission("Reply to item", aq_inner(comment))\n+    )\n+\n+\n def can_delete(comment):\n     """Returns true if current user has the \'Delete comments\'\n     permission.\ndiff --git a/src/plone/restapi/tests/http-examples/comments_get.resp b/src/plone/restapi/tests/http-examples/comments_get.resp\nindex 851331ea1..29b41b487 100644\n--- a/src/plone/restapi/tests/http-examples/comments_get.resp\n+++ b/src/plone/restapi/tests/http-examples/comments_get.resp\n@@ -11,6 +11,7 @@ Content-Type: application/json\n             "author_image": null,\n             "author_name": null,\n             "author_username": null,\n+            "can_reply": true,\n             "comment_id": "1400000000000000",\n             "creation_date": "1995-07-31T13:45:00",\n             "in_reply_to": null,\n@@ -30,6 +31,7 @@ Content-Type: application/json\n             "author_image": null,\n             "author_name": null,\n             "author_username": null,\n+            "can_reply": true,\n             "comment_id": "1400000000000001",\n             "creation_date": "1995-07-31T13:45:00",\n             "in_reply_to": "1400000000000000",\n@@ -43,5 +45,9 @@ Content-Type: application/json\n             "user_notification": null\n         }\n     ],\n-    "items_total": 2\n+    "items_total": 2,\n+    "permissions": {\n+        "can_reply": true,\n+        "view_comments": true\n+    }\n }\ndiff --git a/src/plone/restapi/tests/test_comments.py b/src/plone/restapi/tests/test_comments.py\nindex 90507f108..a62c483d1 100644\n--- a/src/plone/restapi/tests/test_comments.py\n+++ b/src/plone/restapi/tests/test_comments.py\n@@ -57,7 +57,7 @@ def test_conversation(self):\n         )\n \n         output = serializer()\n-        self.assertEqual(set(output), {"@id", "items_total", "items"})\n+        self.assertEqual(set(output), {"@id", "permissions", "items_total", "items"})\n \n     def test_conversation_batched(self):\n         self.request.form["b_size"] = 1\n@@ -88,6 +88,7 @@ def test_comment(self):\n             "modification_date",\n             "is_editable",\n             "is_deletable",\n+            "can_reply",\n         ]\n         self.assertEqual(set(output), set(expected))\n \ndiff --git a/src/plone/restapi/tests/test_services_comments.py b/src/plone/restapi/tests/test_services_comments.py\nindex 9422b4dbd..e7eac9171 100644\n--- a/src/plone/restapi/tests/test_services_comments.py\n+++ b/src/plone/restapi/tests/test_services_comments.py\n@@ -62,7 +62,7 @@ def test_list_datastructure(self):\n \n         self.assertEqual(200, response.status_code)\n         data = response.json()\n-        self.assertEqual({"items_total", "items", "@id"}, set(data))\n+        self.assertEqual({"items_total", "items", "permissions", "@id"}, set(data))\n \n     def test_list_batching(self):\n         url = f"{self.doc.absolute_url()}/@comments"\n'

