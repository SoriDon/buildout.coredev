Repository: plone.app.portlets


Branch: refs/heads/master
Date: 2017-06-12T22:32:53+02:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/plone.app.portlets/commit/cd21ea3f9b50896bc00f894480680abbd8cb6f3c

Cleanup of PLIP #1734

Files changed:
M CHANGES.rst
M plone/app/portlets/portlets/navigation.py
M plone/app/portlets/portlets/navigation_recurse.pt
M plone/app/portlets/portlets/news.pt
M plone/app/portlets/portlets/news.py
M plone/app/portlets/portlets/recent.pt
M plone/app/portlets/portlets/recent.py
M plone/app/portlets/portlets/review.pt
M plone/app/portlets/portlets/review.py
M plone/app/portlets/tests/profiles/testing/portlets.xml
M plone/app/portlets/tests/test_configuration.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 62ddb0f..69a3438 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -12,7 +12,7 @@ Breaking changes:
 New features:
 
 - navigation-, news-, recent-,review-portlets: add options to supress icons,
-  read thumbsize from registry plus  option to override thumbsize individually
+  read thumb_scale from registry plus  option to override thumb_scale individually
   or suppress thumbs.
   Replace paper clip (fontello icon) with mimetype icon
   from mimetype registry for files
diff --git a/plone/app/portlets/portlets/navigation.py b/plone/app/portlets/portlets/navigation.py
index e9c4fe5..e29816a 100644
--- a/plone/app/portlets/portlets/navigation.py
+++ b/plone/app/portlets/portlets/navigation.py
@@ -1,5 +1,7 @@
 # -*- coding: utf-8 -*-
-from Acquisition import aq_inner, aq_base, aq_parent
+from Acquisition import aq_base
+from Acquisition import aq_inner
+from Acquisition import aq_parent
 from ComputedAttribute import ComputedAttribute
 from plone.app.layout.navigation.interfaces import INavigationQueryBuilder
 from plone.app.layout.navigation.interfaces import INavigationRoot
@@ -28,11 +30,16 @@
 from Products.MimetypesRegistry.MimeTypeItem import guess_icon_path
 from zExceptions import NotFound
 from zope import schema
-from zope.component import adapts, getMultiAdapter, queryUtility
+from zope.component import adapts
+from zope.component import getMultiAdapter
 from zope.component import getUtility
-from zope.interface import implementer, Interface
+from zope.component import queryUtility
+from zope.interface import implementer
+from zope.interface import Interface
+
 import os
 
+
 class INavigationPortlet(IPortletDataProvider):
     """A portlet which can render the navigation tree
     """
@@ -99,29 +106,31 @@ class INavigationPortlet(IPortletDataProvider):
             required=False)
 
     no_icons = schema.Bool(
-        title=_(u"Suppress Icons "),
+        title=_(u"Suppress Icons"),
         description=_(
-            u"If enabled, the portlet will not show document type icons"),
+            u"If enabled, the portlet will not show document type icons."),
         required=True,
         default=False)
 
-    ov_thumbsize = schema.TextLine(
-        title=_(u"Override thumb size "),
-        description=_(u"<br><ul><li> Enter a valid scale name"
-             u"(see 'Image Handling' control panel) to override"
-             u" e.g. icon, tile, thumb, mini, preview, ... )  </li>"
-             u"<li>leave empty to use default "
-             u"(see 'Site' control panel)</li></ul>"),
+    thumb_scale = schema.TextLine(
+        title=_(u"Override thumb scale"),
+        description=_(
+            u"Enter a valid scale name"
+            u" (see 'Image Handling' control panel) to override"
+            u" (e.g. icon, tile, thumb, mini, preview, ... )."
+            u" Leave empty to use default (see 'Site' control panel)."
+        ),
         required=False,
         default=u'')
 
     no_thumbs = schema.Bool(
-        title=_(u"Suppress thumbs "),
+        title=_(u"Suppress thumbs"),
         description=_(
-            u"If enabled, the portlet will not show thumbs"),
+            u"If enabled, the portlet will not show thumbs."),
         required=True,
         default=False)
 
+
 @implementer(INavigationPortlet)
 class Assignment(base.Assignment):
 
@@ -133,12 +142,21 @@ class Assignment(base.Assignment):
     topLevel = 1
     bottomLevel = 0
     no_icons = False
-    ov_thumbsize = ''
+    thumb_scale = None
     no_thumbs = False
 
-    def __init__(self, name="", root_uid=None,
-         currentFolderOnly=False, includeTop=False, topLevel=1, bottomLevel=0,
-         no_icons = False, ov_thumbsize = '', no_thumbs = False):
+    def __init__(
+            self,
+            name="",
+            root_uid=None,
+            currentFolderOnly=False,
+            includeTop=False,
+            topLevel=1,
+            bottomLevel=0,
+            no_icons=False,
+            thumb_scale=None,
+            no_thumbs=False
+    ):
         self.name = name
         self.root_uid = root_uid
         self.currentFolderOnly = currentFolderOnly
@@ -146,8 +164,8 @@ def __init__(self, name="", root_uid=None,
         self.topLevel = topLevel
         self.bottomLevel = bottomLevel
         self.no_icons = no_icons
-        self.ov_thumbsize = ov_thumbsize
-        self.ov_thumbsize = ov_thumbsize
+        self.thumb_scale = thumb_scale
+        self.no_thumbs = no_thumbs
 
     @property
     def title(self):
@@ -310,39 +328,40 @@ def getNavTree(self, _marker=None):
     recurse = ViewPageTemplateFile('navigation_recurse.pt')
 
     @memoize
-    def thumb_size(self):
-        ''' use  overrride value or read thumb_size from registry
-            image sizes must fit to value in allowed image sizes
-            none will suppress thumb!
-        '''
-        if getattr(self.data,'no_thumbs',False):
-            #individual setting overrides
-            return 'none'
-        thsize=getattr(self.data,'ov_thumbsize','')
-        if thsize > ' ':
+    def thumb_scale(self):
+        """Use override value or read thumb_scale from registry.
+        Image sizes must fit to value in allowed image sizes.
+        None will suppress thumb.
+        """
+        if getattr(self.data, 'no_thumbs', False):
+            # Individual setting overrides
+            return None
+        thsize = getattr(self.data, 'thumb_scale', None)
+        if thsize:
             return thsize
         registry = getUtility(IRegistry)
         settings = registry.forInterface(
             ISiteSchema, prefix="plone", check=False)
         if settings.no_thumbs_portlet:
             return 'none'
-        thumb_size_portlet = settings.thumb_size_portlet
-        return thumb_size_portlet
+        thumb_scale_portlet = settings.thumb_scale_portlet
+        return thumb_scale_portlet
 
-    def getMimeTypeIcon(self,node):
+    def getMimeTypeIcon(self, node):
         try:
             if not node['normalized_portal_type'] == 'file':
                 return None
             fileo = node['item'].getObject().file
             portal_url = getNavigationRoot(self.context)
-            mtt = getToolByName(self.context,'mimetypes_registry')
+            mtt = getToolByName(self.context, 'mimetypes_registry')
             if fileo.contentType:
                 ctype = mtt.lookup(fileo.contentType)
-                return os.path.join(portal_url,
-                     guess_icon_path(ctype[0])
-                    )
-        except (AttributeError):
-                return None
+                return os.path.join(
+                    portal_url,
+                    guess_icon_path(ctype[0])
+                )
+        except AttributeError:
+            return None
         return None
 
     def update(self):
@@ -351,6 +370,7 @@ def update(self):
     def render(self):
         return self._template()
 
+
 class AddForm(base.AddForm):
     schema = INavigationPortlet
     label = _(u"Add Navigation Portlet")
diff --git a/plone/app/portlets/portlets/navigation_recurse.pt b/plone/app/portlets/portlets/navigation_recurse.pt
index 2e46517..f022048 100644
--- a/plone/app/portlets/portlets/navigation_recurse.pt
+++ b/plone/app/portlets/portlets/navigation_recurse.pt
@@ -3,7 +3,7 @@
                     bottomLevel options/bottomLevel | nothing;
                     supress_icon    view/data/no_icons;
                     supress_thumb   view/data/no_thumbs;
-                    thumb_size python:view.thumb_size();"
+                    thumb_scale view/thumb_scale"
             i18n:domain="plone">
 
 <metal:main define-macro="nav_main"
@@ -39,8 +39,8 @@
                              tal:attributes="href node/getURL;
                                              src python:view.getMimeTypeIcon(node);">
 
-            <img tal:condition="python:has_thumb and ( thumb_size !='none' )"
-                 tal:replace="structure python:image_scale.tag(item, 'image', scale=thumb_size, css_class='pull-right image-'+thumb_size)">
+            <img tal:condition="python:has_thumb and thumb_scale"
+                 tal:replace="structure python:image_scale.tag(item, 'image', scale=thumb_scale, css_class='pull-right image-'+thumb_scale)">
 
             <span tal:replace="node/Title">Selected Item Title</span>
         </a>
@@ -55,4 +55,4 @@
 </li>
 </tal:navitem>
 </metal:main>
-</tal:master>
\ No newline at end of file
+</tal:master>
diff --git a/plone/app/portlets/portlets/news.pt b/plone/app/portlets/portlets/news.pt
index 718ea25..de7c05e 100644
--- a/plone/app/portlets/portlets/news.pt
+++ b/plone/app/portlets/portlets/news.pt
@@ -14,15 +14,15 @@
            i18n:translate="box_news">News</a>
   </header>
   <div 
-      tal:define="thumb_size python:view.thumb_size();
-                  supress_thumb   view/data/no_thumbs;"
+      tal:define="thumb_scale view/thumb_scale;
+                  supress_thumb view/data/no_thumbs;"
        class="portletContent">
     <ul>
       <tal:newsitems  tal:define="toLocalizedTime nocall:context/@@plone/toLocalizedTime;
                                   plone_layout context/@@plone_layout;
                                   portal context/@@plone_portal_state/portal;
                                   image_scale portal/@@image_scale;
-                                  thumb_size view/thumb_size;"
+                                  thumb_scale view/thumb_scale"
                       tal:repeat="obj view/published_news_items">
       <li tal:define="oddrow repeat/obj/odd;"
           tal:attributes="class python:oddrow and 'portletItem even' or 'portletItem odd'">
@@ -31,8 +31,8 @@
             class="tile"
             tal:attributes="href obj/getURL;
                             title obj/Description">
-           <img tal:condition="python: obj.getIcon and (view.thumb_size()!='none')"
-                tal:replace="structure python:image_scale.tag(obj, 'image', scale=thumb_size, css_class='pull-right image-'+thumb_size)" />
+           <img tal:condition="python:obj.getIcon and thumb_scale"
+                tal:replace="structure python:image_scale.tag(obj, 'image', scale=thumb_scale, css_class='pull-right image-'+thumb_scale)" />
 
            <span tal:replace="obj/pretty_title_or_id">
              Plone 5.1 announced!
@@ -56,4 +56,4 @@
   <footer class="portletFooter" tal:condition="not:view/all_news_link">
   </footer>
 </aside>
-</html>
\ No newline at end of file
+</html>
diff --git a/plone/app/portlets/portlets/news.py b/plone/app/portlets/portlets/news.py
index 4a9c6c5..5f1341c 100644
--- a/plone/app/portlets/portlets/news.py
+++ b/plone/app/portlets/portlets/news.py
@@ -38,18 +38,19 @@ class INewsPortlet(IPortletDataProvider):
             vocabulary="plone.app.vocabularies.WorkflowStates")
         )
 
-    ov_thumbsize = schema.TextLine(
-        title=_(u"Override thumb size "),
-        description=_(u"<br><ul><li> Enter a valid scale name"
-             u"(see 'Image Handling' control panel) to override"
-             u" e.g. icon, tile, thumb, mini, preview, ... )  </li>"
-             u"<li>leave empty to use default "
-             u"(see 'Site' control panel)</li></ul>"),
+    thumb_scale = schema.TextLine(
+        title=_(u"Override thumb scale"),
+        description=_(
+            u"Enter a valid scale name"
+            u" (see 'Image Handling' control panel) to override"
+            u" (e.g. icon, tile, thumb, mini, preview, ... )."
+            u" Leave empty to use default (see 'Site' control panel)."
+        ),
         required=False,
         default=u'')
 
     no_thumbs = schema.Bool(
-        title=_(u"Suppress thumbs "),
+        title=_(u"Suppress thumbs"),
         description=_(
             u"If enabled, the portlet will not show thumbs"),
         required=True,
@@ -59,12 +60,16 @@ class INewsPortlet(IPortletDataProvider):
 @implementer(INewsPortlet)
 class Assignment(base.Assignment):
 
+    thumb_scale = None
+    no_thumbs = False
+
     def __init__(self, count=5, state=('published',),
-                 ov_thumbsize = '', no_thumbs = False):
+                 thumb_scale=None, no_thumbs=False):
         self.count = count
         self.state = state
-        self.ov_thumbsize = ov_thumbsize
+        self.thumb_scale = thumb_scale
         self.no_thumbs = no_thumbs
+
     @property
     def title(self):
         return _(u"News")
@@ -113,24 +118,24 @@ def _data(self):
                        sort_order='reverse',
                        sort_limit=limit)[:limit]
 
-    def thumb_size(self):
-        ''' use  overrride value or read thumb_size from registry
-            image sizes must fit to value in allowed image sizes
-            none will suppress thumb!
-        '''
-        if getattr(self.data,'no_thumbs',False):
-            #individual setting overrides ...
-            return 'none'
-        thsize=getattr(self.data,'ov_thumbsize','')
-        if thsize > ' ':
+    def thumb_scale(self):
+        """Use override value or read thumb_scale from registry.
+        Image sizes must fit to value in allowed image sizes.
+        None will suppress thumb.
+        """
+        if getattr(self.data, 'no_thumbs', False):
+            # Individual setting overrides ...
+            return None
+        thsize = getattr(self.data, 'thumb_scale', '')
+        if thsize:
             return thsize
         registry = getUtility(IRegistry)
         settings = registry.forInterface(
             ISiteSchema, prefix="plone", check=False)
         if settings.no_thumbs_portlet:
-            return 'none'
-        thumb_size_portlet = settings.thumb_size_portlet
-        return thumb_size_portlet
+            return None
+        thumb_scale_portlet = settings.thumb_scale_portlet
+        return thumb_scale_portlet
 
 
 class AddForm(base.AddForm):
diff --git a/plone/app/portlets/portlets/recent.pt b/plone/app/portlets/portlets/recent.pt
index 115d313..c9492fd 100644
--- a/plone/app/portlets/portlets/recent.pt
+++ b/plone/app/portlets/portlets/recent.pt
@@ -16,9 +16,9 @@
         tal:define="plone_layout context/@@plone_layout;
                     portal context/@@plone_portal_state/portal;
                     image_scale portal/@@image_scale;
-                    supress_icon    view/data/no_icons;
-                    supress_thumb   view/data/no_thumbs;
-                    thumb_size      python:view.thumb_size();">
+                    supress_icon view/data/no_icons;
+                    supress_thumb view/data/no_thumbs;
+                    thumb_scale view/thumb_scale">
       <ul>
         <tal:items tal:define="plone_view context/@@plone;
                            normalizeString nocall:plone_view/normalizeString;
@@ -40,9 +40,8 @@
                              tal:attributes="href obj/getURL;
                                              src python:view.getMimeTypeIcon(obj);">
 
-           <img tal:define="thumb_size view/thumb_size;"
-                tal:condition="python: obj.getIcon and (view.thumb_size()!='none'and not supress_thumb and image_scale is not None)"
-                tal:replace="structure python:image_scale.tag(obj, 'image', scale=thumb_size, css_class='pull-right image-'+thumb_size)" />
+           <img tal:condition="python:obj.getIcon and thumb_scale and not supress_thumb and image_scale"
+                tal:replace="structure python:image_scale.tag(obj, 'image', scale=thumb_scale, css_class='pull-right image-'+thumb_scale)" />
 
                   <span tal:content="obj/pretty_title_or_id">
                      Title
@@ -72,4 +71,4 @@
     </footer>
 
 </aside>
-</html>
\ No newline at end of file
+</html>
diff --git a/plone/app/portlets/portlets/recent.py b/plone/app/portlets/portlets/recent.py
index 89f9b8d..93b2341 100644
--- a/plone/app/portlets/portlets/recent.py
+++ b/plone/app/portlets/portlets/recent.py
@@ -17,8 +17,10 @@
 from zope.component import getMultiAdapter
 from zope.component import getUtility
 from zope.interface import implementer
+
 import os
 
+
 class IRecentPortlet(IPortletDataProvider):
 
     count = schema.Int(title=_(u'Number of items to display'),
@@ -34,33 +36,35 @@ class IRecentPortlet(IPortletDataProvider):
         required=True,
         default=False)
 
-    ov_thumbsize = schema.TextLine(
-        title=_(u"Override thumb size "),
-        description=_(u"<br><ul><li> Enter a valid scale name"
-             u"(see 'Image Handling' control panel) to override"
-             u" e.g. icon, tile, thumb, mini, preview, ... )  </li>"
-             u"<li>leave empty to use default "
-             u"(see 'Site' control panel)</li></ul>"),
+    thumb_scale = schema.TextLine(
+        title=_(u"Override thumb size"),
+        description=_(
+            u"Enter a valid scale name"
+            u" (see 'Image Handling' control panel) to override"
+            u" (e.g. icon, tile, thumb, mini, preview, ... )."
+            u" Leave empty to use default (see 'Site' control panel)."
+        ),
         required=False,
         default=u'')
 
     no_thumbs = schema.Bool(
-        title=_(u"Suppress thumbs "),
+        title=_(u"Suppress thumbs"),
         description=_(
-            u"If enabled, the portlet will not show thumbs"),
+            u"If enabled, the portlet will not show thumbs."),
         required=True,
         default=False)
 
+
 @implementer(IRecentPortlet)
 class Assignment(base.Assignment):
     no_icons = False
-    ov_thumbsize = ''
+    thumb_scale = None
 
     def __init__(self, count=5, no_icons=False,
-                ov_thumbsize=u'', no_thumbs=False):
+                 thumb_scale=None, no_thumbs=False):
         self.count = count
         self.no_icons = no_icons
-        self.ov_thumbsize = ov_thumbsize
+        self.thumb_scale = thumb_scale
         self.no_thumbs = no_thumbs
 
     @property
@@ -119,33 +123,35 @@ def _data(self):
                             sort_limit=limit)[:limit]
 
     @memoize
-    def thumb_size(self):
-        ''' use  overrride value or read thumb_size from registry
-            image sizes must fit to value in allowed image sizes
-            none from both sources will suppress thumb!
-        '''
-        if getattr(self.data,'no_thumbs',False):
-            #individual setting overrides ...
-            return 'none'
-        thsize=getattr(self.data,'ov_thumbsize','')
-        if thsize > ' ':
+    def thumb_scale(self):
+        """Use override value or read thumb_scale from registry.
+        Image sizes must fit to value in allowed image sizes.
+        None will suppress thumb.
+        """
+        if getattr(self.data, 'no_thumbs', False):
+            # Individual setting overrides ...
+            return None
+        thsize = getattr(self.data, 'thumb_scale', None)
+        if thsize:
             return thsize
         registry = getUtility(IRegistry)
         settings = registry.forInterface(
             ISiteSchema, prefix="plone", check=False)
-        thumb_size_portlet = settings.thumb_size_portlet
-        return thumb_size_portlet
+        thumb_scale_portlet = settings.thumb_scale_portlet
+        return thumb_scale_portlet
 
-    def getMimeTypeIcon(self,obj):
+    def getMimeTypeIcon(self, obj):
         fileo = obj.getObject().file
         portal_url = getNavigationRoot(self.context)
-        mtt = getToolByName(self.context,'mimetypes_registry')
+        mtt = getToolByName(self.context, 'mimetypes_registry')
         if fileo.contentType:
             ctype = mtt.lookup(fileo.contentType)
-            return os.path.join(portal_url,
-                 guess_icon_path(ctype[0])
-                )
-        return None 
+            return os.path.join(
+                portal_url,
+                guess_icon_path(ctype[0])
+            )
+        return None
+
 
 class AddForm(base.AddForm):
     schema = IRecentPortlet
diff --git a/plone/app/portlets/portlets/review.pt b/plone/app/portlets/portlets/review.pt
index ebbfcee..8e7f1f9 100644
--- a/plone/app/portlets/portlets/review.pt
+++ b/plone/app/portlets/portlets/review.pt
@@ -20,7 +20,7 @@
                    
                    supress_icon    view/data/no_icons;
                    supress_thumb   view/data/no_thumbs;
-                   thumb_size python:view.thumb_size();
+                   thumb_scale python:view.thumb_scale();
                    ">
     <ul>
       <tal:items tal:repeat="obj view/review_items">
@@ -38,8 +38,8 @@
                                  title obj/description;
                                  class string:$review_state_class tile $item_class">
                                  
-            <img  tal:condition="python:hasImage and thumb_size!='none' and imagescale is not None"
-                   tal:replace="structure python:image.scale('image', scale=thumb_size).tag(css_class='pull-right image-'+thumb_size)"/>
+            <img  tal:condition="python:hasImage and thumb_scale!='none' and imagescale is not None"
+                   tal:replace="structure python:image.scale('image', scale=thumb_scale).tag(css_class='pull-right image-'+thumb_scale)"/>
 
                   <span tal:replace="obj/title">
                       Title
diff --git a/plone/app/portlets/portlets/review.py b/plone/app/portlets/portlets/review.py
index b27f637..442c302 100644
--- a/plone/app/portlets/portlets/review.py
+++ b/plone/app/portlets/portlets/review.py
@@ -12,11 +12,12 @@
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
 from zope import schema
 from zope.component import getMultiAdapter
-from zope.component import queryUtility
 from zope.component import getUtility
+from zope.component import queryUtility
 from zope.interface import implementer
 from zope.interface import Interface
 
+
 class IReviewPortlet(IPortletDataProvider):
 
     no_icons = schema.Bool(
@@ -26,33 +27,35 @@ class IReviewPortlet(IPortletDataProvider):
         required=True,
         default=False)
 
-    ov_thumbsize = schema.TextLine(
-        title=_(u"Override thumb size "),
-        description=_(u"<br><ul><li> Enter a valid scale name"
-             u"(see 'Image Handling' control panel) to override"
-             u" e.g. icon, tile, thumb, mini, preview, ... )  </li>"
-             u"<li>leave empty to use default "
-             u"(see 'Site' control panel)</li></ul>"),
+    thumb_scale = schema.TextLine(
+        title=_(u"Override thumb size"),
+        description=_(
+            u"Enter a valid scale name"
+            u" (see 'Image Handling' control panel) to override"
+            u" (e.g. icon, tile, thumb, mini, preview, ... )."
+            u" Leave empty to use default (see 'Site' control panel)."
+        ),
         required=False,
         default=u'')
 
     no_thumbs = schema.Bool(
-        title=_(u"Suppress thumbs "),
+        title=_(u"Suppress thumbs"),
         description=_(
-            u"If enabled, the portlet will not show thumbs"),
+            u"If enabled, the portlet will not show thumbs."),
         required=True,
         default=False)
 
+
 @implementer(IReviewPortlet)
 class Assignment(base.Assignment):
     no_icons = False
-    ov_thumbsize = ''
+    thumb_scale = None
     no_thumbs = False
 
-    def __init__(self,  no_icons=False,
-                 ov_thumbsize=u'', no_thumbs=False):
+    def __init__(self, no_icons=False,
+                 thumb_scale=None, no_thumbs=False):
         self.no_icons = no_icons
-        self.ov_thumbsize = ov_thumbsize
+        self.thumb_scale = thumb_scale
         self.no_thumbs = no_thumbs
 
     @property
@@ -131,22 +134,23 @@ def _data(self):
         return items
 
     @memoize
-    def thumb_size(self):
-        ''' use  overrride value or read thumb_size from registry
-            image sizes must fit to value in allowed image sizes
-            none from both sources will suppress thumb!
-        '''
-        if getattr(self.data,'no_thumbs',False):
-            #individual setting overrides ...
-            return 'none'
-        thsize=getattr(self.data,'ov_thumbsize','')
-        if thsize > ' ':
+    def thumb_scale(self):
+        """Use override value or read thumb_scale from registry.
+        Image sizes must fit to value in allowed image sizes.
+        None will suppress thumb.
+        """
+        if getattr(self.data, 'no_thumbs', False):
+            # Individual setting overrides ...
+            return None
+        thsize = getattr(self.data, 'thumb_scale', '')
+        if thsize:
             return thsize
         registry = getUtility(IRegistry)
         settings = registry.forInterface(
             ISiteSchema, prefix="plone", check=False)
-        thumb_size_portlet = settings.thumb_size_portlet
-        return thumb_size_portlet
+        thumb_scale_portlet = settings.thumb_scale_portlet
+        return thumb_scale_portlet
+
 
 class AddForm(formhelper.AddForm):
     schema = IReviewPortlet
@@ -162,4 +166,3 @@ class EditForm(formhelper.EditForm):
     label = _(u"Edit Review Portlet")
     description = _(u"displays a queue of documents awaiting "
                     u"review.")
-
diff --git a/plone/app/portlets/tests/profiles/testing/portlets.xml b/plone/app/portlets/tests/profiles/testing/portlets.xml
index 4aa86ad..e1a89a5 100644
--- a/plone/app/portlets/tests/profiles/testing/portlets.xml
+++ b/plone/app/portlets/tests/profiles/testing/portlets.xml
@@ -106,7 +106,7 @@
         <property name="bottomLevel">0</property>
         <property name="root"></property>
         <property name="no_icon">False</property>
-        <property name="ov_thumbsize"></property>
+        <property name="thumb_scale"></property>
         <property name="no_thumbs">False</property>
     </assignment>
 
diff --git a/plone/app/portlets/tests/test_configuration.py b/plone/app/portlets/tests/test_configuration.py
index 835cce3..1db2053 100644
--- a/plone/app/portlets/tests/test_configuration.py
+++ b/plone/app/portlets/tests/test_configuration.py
@@ -482,8 +482,8 @@ def testExport(self):
     manager="test.testcolumn2" type="portlets.Navigation" visible="True">
   <property name="name"></property>
   <property name="root_uid"/>
+  <property name="thumb_scale"></property>
   <property name="no_thumbs">False</property>
-  <property name="ov_thumbsize"></property>
   <property name="topLevel">1</property>
   <property name="currentFolderOnly">False</property>
   <property name="includeTop">False</property>


Repository: plone.app.portlets


Branch: refs/heads/master
Date: 2017-06-14T14:41:51+02:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/plone.app.portlets/commit/2c411224389b86c1c2b19adaa32f1ef5b3c6348e

Merge pull request #99 from plone/thet-1734-cleanup

Cleanup of PLIP #1734

Files changed:
M CHANGES.rst
M plone/app/portlets/portlets/navigation.py
M plone/app/portlets/portlets/navigation_recurse.pt
M plone/app/portlets/portlets/news.pt
M plone/app/portlets/portlets/news.py
M plone/app/portlets/portlets/recent.pt
M plone/app/portlets/portlets/recent.py
M plone/app/portlets/portlets/review.pt
M plone/app/portlets/portlets/review.py
M plone/app/portlets/tests/profiles/testing/portlets.xml
M plone/app/portlets/tests/test_configuration.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 62ddb0f..69a3438 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -12,7 +12,7 @@ Breaking changes:
 New features:
 
 - navigation-, news-, recent-,review-portlets: add options to supress icons,
-  read thumbsize from registry plus  option to override thumbsize individually
+  read thumb_scale from registry plus  option to override thumb_scale individually
   or suppress thumbs.
   Replace paper clip (fontello icon) with mimetype icon
   from mimetype registry for files
diff --git a/plone/app/portlets/portlets/navigation.py b/plone/app/portlets/portlets/navigation.py
index e9c4fe5..e29816a 100644
--- a/plone/app/portlets/portlets/navigation.py
+++ b/plone/app/portlets/portlets/navigation.py
@@ -1,5 +1,7 @@
 # -*- coding: utf-8 -*-
-from Acquisition import aq_inner, aq_base, aq_parent
+from Acquisition import aq_base
+from Acquisition import aq_inner
+from Acquisition import aq_parent
 from ComputedAttribute import ComputedAttribute
 from plone.app.layout.navigation.interfaces import INavigationQueryBuilder
 from plone.app.layout.navigation.interfaces import INavigationRoot
@@ -28,11 +30,16 @@
 from Products.MimetypesRegistry.MimeTypeItem import guess_icon_path
 from zExceptions import NotFound
 from zope import schema
-from zope.component import adapts, getMultiAdapter, queryUtility
+from zope.component import adapts
+from zope.component import getMultiAdapter
 from zope.component import getUtility
-from zope.interface import implementer, Interface
+from zope.component import queryUtility
+from zope.interface import implementer
+from zope.interface import Interface
+
 import os
 
+
 class INavigationPortlet(IPortletDataProvider):
     """A portlet which can render the navigation tree
     """
@@ -99,29 +106,31 @@ class INavigationPortlet(IPortletDataProvider):
             required=False)
 
     no_icons = schema.Bool(
-        title=_(u"Suppress Icons "),
+        title=_(u"Suppress Icons"),
         description=_(
-            u"If enabled, the portlet will not show document type icons"),
+            u"If enabled, the portlet will not show document type icons."),
         required=True,
         default=False)
 
-    ov_thumbsize = schema.TextLine(
-        title=_(u"Override thumb size "),
-        description=_(u"<br><ul><li> Enter a valid scale name"
-             u"(see 'Image Handling' control panel) to override"
-             u" e.g. icon, tile, thumb, mini, preview, ... )  </li>"
-             u"<li>leave empty to use default "
-             u"(see 'Site' control panel)</li></ul>"),
+    thumb_scale = schema.TextLine(
+        title=_(u"Override thumb scale"),
+        description=_(
+            u"Enter a valid scale name"
+            u" (see 'Image Handling' control panel) to override"
+            u" (e.g. icon, tile, thumb, mini, preview, ... )."
+            u" Leave empty to use default (see 'Site' control panel)."
+        ),
         required=False,
         default=u'')
 
     no_thumbs = schema.Bool(
-        title=_(u"Suppress thumbs "),
+        title=_(u"Suppress thumbs"),
         description=_(
-            u"If enabled, the portlet will not show thumbs"),
+            u"If enabled, the portlet will not show thumbs."),
         required=True,
         default=False)
 
+
 @implementer(INavigationPortlet)
 class Assignment(base.Assignment):
 
@@ -133,12 +142,21 @@ class Assignment(base.Assignment):
     topLevel = 1
     bottomLevel = 0
     no_icons = False
-    ov_thumbsize = ''
+    thumb_scale = None
     no_thumbs = False
 
-    def __init__(self, name="", root_uid=None,
-         currentFolderOnly=False, includeTop=False, topLevel=1, bottomLevel=0,
-         no_icons = False, ov_thumbsize = '', no_thumbs = False):
+    def __init__(
+            self,
+            name="",
+            root_uid=None,
+            currentFolderOnly=False,
+            includeTop=False,
+            topLevel=1,
+            bottomLevel=0,
+            no_icons=False,
+            thumb_scale=None,
+            no_thumbs=False
+    ):
         self.name = name
         self.root_uid = root_uid
         self.currentFolderOnly = currentFolderOnly
@@ -146,8 +164,8 @@ def __init__(self, name="", root_uid=None,
         self.topLevel = topLevel
         self.bottomLevel = bottomLevel
         self.no_icons = no_icons
-        self.ov_thumbsize = ov_thumbsize
-        self.ov_thumbsize = ov_thumbsize
+        self.thumb_scale = thumb_scale
+        self.no_thumbs = no_thumbs
 
     @property
     def title(self):
@@ -310,39 +328,40 @@ def getNavTree(self, _marker=None):
     recurse = ViewPageTemplateFile('navigation_recurse.pt')
 
     @memoize
-    def thumb_size(self):
-        ''' use  overrride value or read thumb_size from registry
-            image sizes must fit to value in allowed image sizes
-            none will suppress thumb!
-        '''
-        if getattr(self.data,'no_thumbs',False):
-            #individual setting overrides
-            return 'none'
-        thsize=getattr(self.data,'ov_thumbsize','')
-        if thsize > ' ':
+    def thumb_scale(self):
+        """Use override value or read thumb_scale from registry.
+        Image sizes must fit to value in allowed image sizes.
+        None will suppress thumb.
+        """
+        if getattr(self.data, 'no_thumbs', False):
+            # Individual setting overrides
+            return None
+        thsize = getattr(self.data, 'thumb_scale', None)
+        if thsize:
             return thsize
         registry = getUtility(IRegistry)
         settings = registry.forInterface(
             ISiteSchema, prefix="plone", check=False)
         if settings.no_thumbs_portlet:
             return 'none'
-        thumb_size_portlet = settings.thumb_size_portlet
-        return thumb_size_portlet
+        thumb_scale_portlet = settings.thumb_scale_portlet
+        return thumb_scale_portlet
 
-    def getMimeTypeIcon(self,node):
+    def getMimeTypeIcon(self, node):
         try:
             if not node['normalized_portal_type'] == 'file':
                 return None
             fileo = node['item'].getObject().file
             portal_url = getNavigationRoot(self.context)
-            mtt = getToolByName(self.context,'mimetypes_registry')
+            mtt = getToolByName(self.context, 'mimetypes_registry')
             if fileo.contentType:
                 ctype = mtt.lookup(fileo.contentType)
-                return os.path.join(portal_url,
-                     guess_icon_path(ctype[0])
-                    )
-        except (AttributeError):
-                return None
+                return os.path.join(
+                    portal_url,
+                    guess_icon_path(ctype[0])
+                )
+        except AttributeError:
+            return None
         return None
 
     def update(self):
@@ -351,6 +370,7 @@ def update(self):
     def render(self):
         return self._template()
 
+
 class AddForm(base.AddForm):
     schema = INavigationPortlet
     label = _(u"Add Navigation Portlet")
diff --git a/plone/app/portlets/portlets/navigation_recurse.pt b/plone/app/portlets/portlets/navigation_recurse.pt
index 2e46517..f022048 100644
--- a/plone/app/portlets/portlets/navigation_recurse.pt
+++ b/plone/app/portlets/portlets/navigation_recurse.pt
@@ -3,7 +3,7 @@
                     bottomLevel options/bottomLevel | nothing;
                     supress_icon    view/data/no_icons;
                     supress_thumb   view/data/no_thumbs;
-                    thumb_size python:view.thumb_size();"
+                    thumb_scale view/thumb_scale"
             i18n:domain="plone">
 
 <metal:main define-macro="nav_main"
@@ -39,8 +39,8 @@
                              tal:attributes="href node/getURL;
                                              src python:view.getMimeTypeIcon(node);">
 
-            <img tal:condition="python:has_thumb and ( thumb_size !='none' )"
-                 tal:replace="structure python:image_scale.tag(item, 'image', scale=thumb_size, css_class='pull-right image-'+thumb_size)">
+            <img tal:condition="python:has_thumb and thumb_scale"
+                 tal:replace="structure python:image_scale.tag(item, 'image', scale=thumb_scale, css_class='pull-right image-'+thumb_scale)">
 
             <span tal:replace="node/Title">Selected Item Title</span>
         </a>
@@ -55,4 +55,4 @@
 </li>
 </tal:navitem>
 </metal:main>
-</tal:master>
\ No newline at end of file
+</tal:master>
diff --git a/plone/app/portlets/portlets/news.pt b/plone/app/portlets/portlets/news.pt
index 718ea25..de7c05e 100644
--- a/plone/app/portlets/portlets/news.pt
+++ b/plone/app/portlets/portlets/news.pt
@@ -14,15 +14,15 @@
            i18n:translate="box_news">News</a>
   </header>
   <div 
-      tal:define="thumb_size python:view.thumb_size();
-                  supress_thumb   view/data/no_thumbs;"
+      tal:define="thumb_scale view/thumb_scale;
+                  supress_thumb view/data/no_thumbs;"
        class="portletContent">
     <ul>
       <tal:newsitems  tal:define="toLocalizedTime nocall:context/@@plone/toLocalizedTime;
                                   plone_layout context/@@plone_layout;
                                   portal context/@@plone_portal_state/portal;
                                   image_scale portal/@@image_scale;
-                                  thumb_size view/thumb_size;"
+                                  thumb_scale view/thumb_scale"
                       tal:repeat="obj view/published_news_items">
       <li tal:define="oddrow repeat/obj/odd;"
           tal:attributes="class python:oddrow and 'portletItem even' or 'portletItem odd'">
@@ -31,8 +31,8 @@
             class="tile"
             tal:attributes="href obj/getURL;
                             title obj/Description">
-           <img tal:condition="python: obj.getIcon and (view.thumb_size()!='none')"
-                tal:replace="structure python:image_scale.tag(obj, 'image', scale=thumb_size, css_class='pull-right image-'+thumb_size)" />
+           <img tal:condition="python:obj.getIcon and thumb_scale"
+                tal:replace="structure python:image_scale.tag(obj, 'image', scale=thumb_scale, css_class='pull-right image-'+thumb_scale)" />
 
            <span tal:replace="obj/pretty_title_or_id">
              Plone 5.1 announced!
@@ -56,4 +56,4 @@
   <footer class="portletFooter" tal:condition="not:view/all_news_link">
   </footer>
 </aside>
-</html>
\ No newline at end of file
+</html>
diff --git a/plone/app/portlets/portlets/news.py b/plone/app/portlets/portlets/news.py
index 4a9c6c5..5f1341c 100644
--- a/plone/app/portlets/portlets/news.py
+++ b/plone/app/portlets/portlets/news.py
@@ -38,18 +38,19 @@ class INewsPortlet(IPortletDataProvider):
             vocabulary="plone.app.vocabularies.WorkflowStates")
         )
 
-    ov_thumbsize = schema.TextLine(
-        title=_(u"Override thumb size "),
-        description=_(u"<br><ul><li> Enter a valid scale name"
-             u"(see 'Image Handling' control panel) to override"
-             u" e.g. icon, tile, thumb, mini, preview, ... )  </li>"
-             u"<li>leave empty to use default "
-             u"(see 'Site' control panel)</li></ul>"),
+    thumb_scale = schema.TextLine(
+        title=_(u"Override thumb scale"),
+        description=_(
+            u"Enter a valid scale name"
+            u" (see 'Image Handling' control panel) to override"
+            u" (e.g. icon, tile, thumb, mini, preview, ... )."
+            u" Leave empty to use default (see 'Site' control panel)."
+        ),
         required=False,
         default=u'')
 
     no_thumbs = schema.Bool(
-        title=_(u"Suppress thumbs "),
+        title=_(u"Suppress thumbs"),
         description=_(
             u"If enabled, the portlet will not show thumbs"),
         required=True,
@@ -59,12 +60,16 @@ class INewsPortlet(IPortletDataProvider):
 @implementer(INewsPortlet)
 class Assignment(base.Assignment):
 
+    thumb_scale = None
+    no_thumbs = False
+
     def __init__(self, count=5, state=('published',),
-                 ov_thumbsize = '', no_thumbs = False):
+                 thumb_scale=None, no_thumbs=False):
         self.count = count
         self.state = state
-        self.ov_thumbsize = ov_thumbsize
+        self.thumb_scale = thumb_scale
         self.no_thumbs = no_thumbs
+
     @property
     def title(self):
         return _(u"News")
@@ -113,24 +118,24 @@ def _data(self):
                        sort_order='reverse',
                        sort_limit=limit)[:limit]
 
-    def thumb_size(self):
-        ''' use  overrride value or read thumb_size from registry
-            image sizes must fit to value in allowed image sizes
-            none will suppress thumb!
-        '''
-        if getattr(self.data,'no_thumbs',False):
-            #individual setting overrides ...
-            return 'none'
-        thsize=getattr(self.data,'ov_thumbsize','')
-        if thsize > ' ':
+    def thumb_scale(self):
+        """Use override value or read thumb_scale from registry.
+        Image sizes must fit to value in allowed image sizes.
+        None will suppress thumb.
+        """
+        if getattr(self.data, 'no_thumbs', False):
+            # Individual setting overrides ...
+            return None
+        thsize = getattr(self.data, 'thumb_scale', '')
+        if thsize:
             return thsize
         registry = getUtility(IRegistry)
         settings = registry.forInterface(
             ISiteSchema, prefix="plone", check=False)
         if settings.no_thumbs_portlet:
-            return 'none'
-        thumb_size_portlet = settings.thumb_size_portlet
-        return thumb_size_portlet
+            return None
+        thumb_scale_portlet = settings.thumb_scale_portlet
+        return thumb_scale_portlet
 
 
 class AddForm(base.AddForm):
diff --git a/plone/app/portlets/portlets/recent.pt b/plone/app/portlets/portlets/recent.pt
index 115d313..c9492fd 100644
--- a/plone/app/portlets/portlets/recent.pt
+++ b/plone/app/portlets/portlets/recent.pt
@@ -16,9 +16,9 @@
         tal:define="plone_layout context/@@plone_layout;
                     portal context/@@plone_portal_state/portal;
                     image_scale portal/@@image_scale;
-                    supress_icon    view/data/no_icons;
-                    supress_thumb   view/data/no_thumbs;
-                    thumb_size      python:view.thumb_size();">
+                    supress_icon view/data/no_icons;
+                    supress_thumb view/data/no_thumbs;
+                    thumb_scale view/thumb_scale">
       <ul>
         <tal:items tal:define="plone_view context/@@plone;
                            normalizeString nocall:plone_view/normalizeString;
@@ -40,9 +40,8 @@
                              tal:attributes="href obj/getURL;
                                              src python:view.getMimeTypeIcon(obj);">
 
-           <img tal:define="thumb_size view/thumb_size;"
-                tal:condition="python: obj.getIcon and (view.thumb_size()!='none'and not supress_thumb and image_scale is not None)"
-                tal:replace="structure python:image_scale.tag(obj, 'image', scale=thumb_size, css_class='pull-right image-'+thumb_size)" />
+           <img tal:condition="python:obj.getIcon and thumb_scale and not supress_thumb and image_scale"
+                tal:replace="structure python:image_scale.tag(obj, 'image', scale=thumb_scale, css_class='pull-right image-'+thumb_scale)" />
 
                   <span tal:content="obj/pretty_title_or_id">
                      Title
@@ -72,4 +71,4 @@
     </footer>
 
 </aside>
-</html>
\ No newline at end of file
+</html>
diff --git a/plone/app/portlets/portlets/recent.py b/plone/app/portlets/portlets/recent.py
index 89f9b8d..93b2341 100644
--- a/plone/app/portlets/portlets/recent.py
+++ b/plone/app/portlets/portlets/recent.py
@@ -17,8 +17,10 @@
 from zope.component import getMultiAdapter
 from zope.component import getUtility
 from zope.interface import implementer
+
 import os
 
+
 class IRecentPortlet(IPortletDataProvider):
 
     count = schema.Int(title=_(u'Number of items to display'),
@@ -34,33 +36,35 @@ class IRecentPortlet(IPortletDataProvider):
         required=True,
         default=False)
 
-    ov_thumbsize = schema.TextLine(
-        title=_(u"Override thumb size "),
-        description=_(u"<br><ul><li> Enter a valid scale name"
-             u"(see 'Image Handling' control panel) to override"
-             u" e.g. icon, tile, thumb, mini, preview, ... )  </li>"
-             u"<li>leave empty to use default "
-             u"(see 'Site' control panel)</li></ul>"),
+    thumb_scale = schema.TextLine(
+        title=_(u"Override thumb size"),
+        description=_(
+            u"Enter a valid scale name"
+            u" (see 'Image Handling' control panel) to override"
+            u" (e.g. icon, tile, thumb, mini, preview, ... )."
+            u" Leave empty to use default (see 'Site' control panel)."
+        ),
         required=False,
         default=u'')
 
     no_thumbs = schema.Bool(
-        title=_(u"Suppress thumbs "),
+        title=_(u"Suppress thumbs"),
         description=_(
-            u"If enabled, the portlet will not show thumbs"),
+            u"If enabled, the portlet will not show thumbs."),
         required=True,
         default=False)
 
+
 @implementer(IRecentPortlet)
 class Assignment(base.Assignment):
     no_icons = False
-    ov_thumbsize = ''
+    thumb_scale = None
 
     def __init__(self, count=5, no_icons=False,
-                ov_thumbsize=u'', no_thumbs=False):
+                 thumb_scale=None, no_thumbs=False):
         self.count = count
         self.no_icons = no_icons
-        self.ov_thumbsize = ov_thumbsize
+        self.thumb_scale = thumb_scale
         self.no_thumbs = no_thumbs
 
     @property
@@ -119,33 +123,35 @@ def _data(self):
                             sort_limit=limit)[:limit]
 
     @memoize
-    def thumb_size(self):
-        ''' use  overrride value or read thumb_size from registry
-            image sizes must fit to value in allowed image sizes
-            none from both sources will suppress thumb!
-        '''
-        if getattr(self.data,'no_thumbs',False):
-            #individual setting overrides ...
-            return 'none'
-        thsize=getattr(self.data,'ov_thumbsize','')
-        if thsize > ' ':
+    def thumb_scale(self):
+        """Use override value or read thumb_scale from registry.
+        Image sizes must fit to value in allowed image sizes.
+        None will suppress thumb.
+        """
+        if getattr(self.data, 'no_thumbs', False):
+            # Individual setting overrides ...
+            return None
+        thsize = getattr(self.data, 'thumb_scale', None)
+        if thsize:
             return thsize
         registry = getUtility(IRegistry)
         settings = registry.forInterface(
             ISiteSchema, prefix="plone", check=False)
-        thumb_size_portlet = settings.thumb_size_portlet
-        return thumb_size_portlet
+        thumb_scale_portlet = settings.thumb_scale_portlet
+        return thumb_scale_portlet
 
-    def getMimeTypeIcon(self,obj):
+    def getMimeTypeIcon(self, obj):
         fileo = obj.getObject().file
         portal_url = getNavigationRoot(self.context)
-        mtt = getToolByName(self.context,'mimetypes_registry')
+        mtt = getToolByName(self.context, 'mimetypes_registry')
         if fileo.contentType:
             ctype = mtt.lookup(fileo.contentType)
-            return os.path.join(portal_url,
-                 guess_icon_path(ctype[0])
-                )
-        return None 
+            return os.path.join(
+                portal_url,
+                guess_icon_path(ctype[0])
+            )
+        return None
+
 
 class AddForm(base.AddForm):
     schema = IRecentPortlet
diff --git a/plone/app/portlets/portlets/review.pt b/plone/app/portlets/portlets/review.pt
index ebbfcee..8e7f1f9 100644
--- a/plone/app/portlets/portlets/review.pt
+++ b/plone/app/portlets/portlets/review.pt
@@ -20,7 +20,7 @@
                    
                    supress_icon    view/data/no_icons;
                    supress_thumb   view/data/no_thumbs;
-                   thumb_size python:view.thumb_size();
+                   thumb_scale python:view.thumb_scale();
                    ">
     <ul>
       <tal:items tal:repeat="obj view/review_items">
@@ -38,8 +38,8 @@
                                  title obj/description;
                                  class string:$review_state_class tile $item_class">
                                  
-            <img  tal:condition="python:hasImage and thumb_size!='none' and imagescale is not None"
-                   tal:replace="structure python:image.scale('image', scale=thumb_size).tag(css_class='pull-right image-'+thumb_size)"/>
+            <img  tal:condition="python:hasImage and thumb_scale!='none' and imagescale is not None"
+                   tal:replace="structure python:image.scale('image', scale=thumb_scale).tag(css_class='pull-right image-'+thumb_scale)"/>
 
                   <span tal:replace="obj/title">
                       Title
diff --git a/plone/app/portlets/portlets/review.py b/plone/app/portlets/portlets/review.py
index b27f637..442c302 100644
--- a/plone/app/portlets/portlets/review.py
+++ b/plone/app/portlets/portlets/review.py
@@ -12,11 +12,12 @@
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
 from zope import schema
 from zope.component import getMultiAdapter
-from zope.component import queryUtility
 from zope.component import getUtility
+from zope.component import queryUtility
 from zope.interface import implementer
 from zope.interface import Interface
 
+
 class IReviewPortlet(IPortletDataProvider):
 
     no_icons = schema.Bool(
@@ -26,33 +27,35 @@ class IReviewPortlet(IPortletDataProvider):
         required=True,
         default=False)
 
-    ov_thumbsize = schema.TextLine(
-        title=_(u"Override thumb size "),
-        description=_(u"<br><ul><li> Enter a valid scale name"
-             u"(see 'Image Handling' control panel) to override"
-             u" e.g. icon, tile, thumb, mini, preview, ... )  </li>"
-             u"<li>leave empty to use default "
-             u"(see 'Site' control panel)</li></ul>"),
+    thumb_scale = schema.TextLine(
+        title=_(u"Override thumb size"),
+        description=_(
+            u"Enter a valid scale name"
+            u" (see 'Image Handling' control panel) to override"
+            u" (e.g. icon, tile, thumb, mini, preview, ... )."
+            u" Leave empty to use default (see 'Site' control panel)."
+        ),
         required=False,
         default=u'')
 
     no_thumbs = schema.Bool(
-        title=_(u"Suppress thumbs "),
+        title=_(u"Suppress thumbs"),
         description=_(
-            u"If enabled, the portlet will not show thumbs"),
+            u"If enabled, the portlet will not show thumbs."),
         required=True,
         default=False)
 
+
 @implementer(IReviewPortlet)
 class Assignment(base.Assignment):
     no_icons = False
-    ov_thumbsize = ''
+    thumb_scale = None
     no_thumbs = False
 
-    def __init__(self,  no_icons=False,
-                 ov_thumbsize=u'', no_thumbs=False):
+    def __init__(self, no_icons=False,
+                 thumb_scale=None, no_thumbs=False):
         self.no_icons = no_icons
-        self.ov_thumbsize = ov_thumbsize
+        self.thumb_scale = thumb_scale
         self.no_thumbs = no_thumbs
 
     @property
@@ -131,22 +134,23 @@ def _data(self):
         return items
 
     @memoize
-    def thumb_size(self):
-        ''' use  overrride value or read thumb_size from registry
-            image sizes must fit to value in allowed image sizes
-            none from both sources will suppress thumb!
-        '''
-        if getattr(self.data,'no_thumbs',False):
-            #individual setting overrides ...
-            return 'none'
-        thsize=getattr(self.data,'ov_thumbsize','')
-        if thsize > ' ':
+    def thumb_scale(self):
+        """Use override value or read thumb_scale from registry.
+        Image sizes must fit to value in allowed image sizes.
+        None will suppress thumb.
+        """
+        if getattr(self.data, 'no_thumbs', False):
+            # Individual setting overrides ...
+            return None
+        thsize = getattr(self.data, 'thumb_scale', '')
+        if thsize:
             return thsize
         registry = getUtility(IRegistry)
         settings = registry.forInterface(
             ISiteSchema, prefix="plone", check=False)
-        thumb_size_portlet = settings.thumb_size_portlet
-        return thumb_size_portlet
+        thumb_scale_portlet = settings.thumb_scale_portlet
+        return thumb_scale_portlet
+
 
 class AddForm(formhelper.AddForm):
     schema = IReviewPortlet
@@ -162,4 +166,3 @@ class EditForm(formhelper.EditForm):
     label = _(u"Edit Review Portlet")
     description = _(u"displays a queue of documents awaiting "
                     u"review.")
-
diff --git a/plone/app/portlets/tests/profiles/testing/portlets.xml b/plone/app/portlets/tests/profiles/testing/portlets.xml
index 4aa86ad..e1a89a5 100644
--- a/plone/app/portlets/tests/profiles/testing/portlets.xml
+++ b/plone/app/portlets/tests/profiles/testing/portlets.xml
@@ -106,7 +106,7 @@
         <property name="bottomLevel">0</property>
         <property name="root"></property>
         <property name="no_icon">False</property>
-        <property name="ov_thumbsize"></property>
+        <property name="thumb_scale"></property>
         <property name="no_thumbs">False</property>
     </assignment>
 
diff --git a/plone/app/portlets/tests/test_configuration.py b/plone/app/portlets/tests/test_configuration.py
index 835cce3..1db2053 100644
--- a/plone/app/portlets/tests/test_configuration.py
+++ b/plone/app/portlets/tests/test_configuration.py
@@ -482,8 +482,8 @@ def testExport(self):
     manager="test.testcolumn2" type="portlets.Navigation" visible="True">
   <property name="name"></property>
   <property name="root_uid"/>
+  <property name="thumb_scale"></property>
   <property name="no_thumbs">False</property>
-  <property name="ov_thumbsize"></property>
   <property name="topLevel">1</property>
   <property name="currentFolderOnly">False</property>
   <property name="includeTop">False</property>


