Repository: plone.app.layout


Branch: refs/heads/master
Date: 2021-08-11T18:29:51+02:00
Author: Peter Holzer (agitator) <peter.holzer@agitator.com>
Commit: https://github.com/plone/plone.app.layout/commit/e1f33e495d32b632d58de62f4b3a57666bd6777f

fix documentby date display logic

Files changed:
M plone/app/layout/viewlets/content.py
M plone/app/layout/viewlets/document_byline.pt

b'diff --git a/plone/app/layout/viewlets/content.py b/plone/app/layout/viewlets/content.py\nindex 5740f8b6..be56c8e5 100644\n--- a/plone/app/layout/viewlets/content.py\n+++ b/plone/app/layout/viewlets/content.py\n@@ -70,6 +70,14 @@ def update(self):\n         self.has_pam = HAS_PAM\n \n     def show(self):\n+        registry = getUtility(IRegistry)\n+        settings = registry.forInterface(\n+            ISiteSchema,\n+            prefix="plone",\n+        )\n+        return not self.anonymous or settings.display_publication_date_in_byline\n+\n+    def show_author(self):\n         registry = getUtility(IRegistry)\n         settings = registry.forInterface(\n             ISecuritySchema,\n@@ -88,6 +96,11 @@ def authorname(self):\n         author = self.author()\n         return author and author["fullname"] or self.creator()\n \n+    def show_modification_date(self):\n+        return not self.context.effective_date or (\n+            self.context.effective_date.Date() < self.context.modification_date.Date()\n+        )\n+\n     def isExpired(self):\n         if base_hasattr(self.context, "expires"):\n             return self.context.expires().isPast()\ndiff --git a/plone/app/layout/viewlets/document_byline.pt b/plone/app/layout/viewlets/document_byline.pt\nindex e7da135e..9dbfa59e 100644\n--- a/plone/app/layout/viewlets/document_byline.pt\n+++ b/plone/app/layout/viewlets/document_byline.pt\n@@ -1,6 +1,7 @@\n <section id="section-byline" i18n:domain="plone" tal:condition="view/show">\n \n-  <tal:creator tal:define="creator_short_form view/creator;" tal:condition="creator_short_form">\n+  <tal:creator tal:define="creator_short_form view/creator;" \n+      tal:condition="python:creator_short_form and view.show_author()">\n \n   <tal:name tal:define="creator_long_form string:?author=${creator_short_form};\n                         creator_is_openid python:\'/\' in creator_short_form;\n@@ -21,13 +22,15 @@\n   </tal:name>\n   </tal:creator>\n \n-  <tal:dates define="published view/pub_date; modified context/ModificationDate">\n+  <tal:dates define="published view/pub_date; \n+                     modified context/ModificationDate;\n+                     show_modification_date python:view.show_modification_date()">\n   <span class="documentPublished" tal:condition="published">\n     <span i18n:translate="box_published">published</span>\n-    <span tal:content="python:context.toLocalizedTime(published)">Published</span><tal:sep condition="modified">,</tal:sep>\n+    <span tal:content="python:context.toLocalizedTime(published)">Published</span><tal:sep condition="show_modification_date">,</tal:sep>\n   </span>\n \n-  <span class="documentModified" tal:condition="modified">\n+  <span class="documentModified" tal:condition="show_modification_date">\n     <span i18n:translate="box_last_modified">\n       last modified\n     </span>\n'

Repository: plone.app.layout


Branch: refs/heads/master
Date: 2021-08-11T18:29:51+02:00
Author: Peter Holzer (agitator) <peter.holzer@agitator.com>
Commit: https://github.com/plone/plone.app.layout/commit/a6333f293a7e2d4c44e30c98936fdc85d795ea98

add news

Files changed:
A news/258.fix

b'diff --git a/news/258.fix b/news/258.fix\nnew file mode 100644\nindex 00000000..e916edc7\n--- /dev/null\n+++ b/news/258.fix\n@@ -0,0 +1,2 @@\n+Show document_byline to public if `display_publication_date_in_byline` in site controlpanel is active. Only show author if `allow_anon_views_about` in security controlpanel is active. Show `modification_date` if not published or `modification_date` is greater that `effective_date`.\n+[agitator]\n\\ No newline at end of file\n'

Repository: plone.app.layout


Branch: refs/heads/master
Date: 2021-08-11T19:30:23+02:00
Author: Peter Holzer (agitator) <peter.holzer@agitator.com>
Commit: https://github.com/plone/plone.app.layout/commit/7e972561c8dce00a7e49dcc8a28cf3740e20d386

use show_about according to permission

Files changed:
M plone/app/layout/viewlets/content.py
M plone/app/layout/viewlets/document_byline.pt

b'diff --git a/plone/app/layout/viewlets/content.py b/plone/app/layout/viewlets/content.py\nindex be56c8e5..88ef00fb 100644\n--- a/plone/app/layout/viewlets/content.py\n+++ b/plone/app/layout/viewlets/content.py\n@@ -77,7 +77,7 @@ def show(self):\n         )\n         return not self.anonymous or settings.display_publication_date_in_byline\n \n-    def show_author(self):\n+    def show_about(self):\n         registry = getUtility(IRegistry)\n         settings = registry.forInterface(\n             ISecuritySchema,\ndiff --git a/plone/app/layout/viewlets/document_byline.pt b/plone/app/layout/viewlets/document_byline.pt\nindex 9dbfa59e..0e215dc5 100644\n--- a/plone/app/layout/viewlets/document_byline.pt\n+++ b/plone/app/layout/viewlets/document_byline.pt\n@@ -1,7 +1,7 @@\n <section id="section-byline" i18n:domain="plone" tal:condition="view/show">\n \n   <tal:creator tal:define="creator_short_form view/creator;" \n-      tal:condition="python:creator_short_form and view.show_author()">\n+      tal:condition="python:creator_short_form and view.show_about()">\n \n   <tal:name tal:define="creator_long_form string:?author=${creator_short_form};\n                         creator_is_openid python:\'/\' in creator_short_form;\n'

Repository: plone.app.layout


Branch: refs/heads/master
Date: 2021-08-11T19:30:53+02:00
Author: Peter Holzer (agitator) <peter.holzer@agitator.com>
Commit: https://github.com/plone/plone.app.layout/commit/38832ac6bc579a1fc7c4a3073a6e3ddb4adb6d2c

update tests

Files changed:
M plone/app/layout/viewlets/tests/test_content.py

b'diff --git a/plone/app/layout/viewlets/tests/test_content.py b/plone/app/layout/viewlets/tests/test_content.py\nindex edc877cf..26b837f6 100644\n--- a/plone/app/layout/viewlets/tests/test_content.py\n+++ b/plone/app/layout/viewlets/tests/test_content.py\n@@ -43,6 +43,10 @@ def setUp(self):\n         self.context = self.folder["doc1"]\n \n         registry = getUtility(IRegistry)\n+        self.site_settings = registry.forInterface(\n+            ISiteSchema,\n+            prefix="plone",\n+        )\n         self.security_settings = registry.forInterface(\n             ISecuritySchema,\n             prefix="plone",\n@@ -58,9 +62,9 @@ def test_pub_date(self):\n         # configure our portal to enable publication date on pages globally on\n         # the site\n         registry = getUtility(IRegistry)\n-        settings = registry.forInterface(ISiteSchema, prefix="plone")\n+        # settings = registry.forInterface(ISiteSchema, prefix="plone")\n \n-        settings.display_publication_date_in_byline = True\n+        self.site_settings.display_publication_date_in_byline = True\n \n         logout()\n         viewlet = self._get_viewlet()\n@@ -76,31 +80,53 @@ def test_pub_date(self):\n \n         # now switch off publication date globally on the site and see if\n         # viewlet returns None for publication date\n-        settings.display_publication_date_in_byline = False\n+        self.site_settings.display_publication_date_in_byline = False\n         self.assertEqual(viewlet.pub_date(), None)\n \n     def test_anonymous_users_see_byline_if_show_enabled(self):\n-        self.security_settings.allow_anon_views_about = True\n+        self.site_settings.display_publication_date_in_byline = True\n         logout()\n         viewlet = self._get_viewlet()\n         self.assertTrue(viewlet.show())\n \n     def test_anonymous_users_dont_see_byline_if_show_disabled(self):\n-        self.security_settings.allow_anon_views_about = False\n+        self.site_settings.display_publication_date_in_byline = False\n         logout()\n         viewlet = self._get_viewlet()\n         self.assertFalse(viewlet.show())\n \n     def test_logged_users_see_byline_if_show_enabled(self):\n-        self.security_settings.allow_anon_views_about = True\n+        self.site_settings.display_publication_date_in_byline = True\n         viewlet = self._get_viewlet()\n         self.assertTrue(viewlet.show())\n \n     def test_logged_users_see_byline_if_show_disabled(self):\n-        self.security_settings.allow_anon_views_about = False\n+        self.site_settings.display_publication_date_in_byline = False\n         viewlet = self._get_viewlet()\n         self.assertTrue(viewlet.show())\n \n+    def test_anonymous_users_see_about_if_show_enabled(self):\n+        self.security_settings.allow_anon_views_about = True\n+        logout()\n+        viewlet = self._get_viewlet()\n+        self.assertTrue(viewlet.show_about())\n+\n+    def test_anonymous_users_dont_see_about_if_show_disabled(self):\n+        self.security_settings.allow_anon_views_about = False\n+        logout()\n+        viewlet = self._get_viewlet()\n+        self.assertFalse(viewlet.show_about())\n+\n+    def test_logged_users_see_about_if_show_enabled(self):\n+        self.security_settings.allow_anon_views_about = True\n+        viewlet = self._get_viewlet()\n+        self.assertTrue(viewlet.show_about())\n+\n+    def test_logged_users_see_about_if_show_disabled(self):\n+        self.security_settings.allow_anon_views_about = False\n+        viewlet = self._get_viewlet()\n+        self.assertTrue(viewlet.show_about())\n+\n \n class TestHistoryBylineViewletView(ViewletsTestCase):\n     """\n'

Repository: plone.app.layout


Branch: refs/heads/master
Date: 2021-08-11T23:57:24+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.layout/commit/063e8b6b4108100e123b07488ca6f5946cc06296

Merge pull request #258 from plone/fix-documentby-date-logic

fix documentby date display logic

Files changed:
A news/258.fix
M plone/app/layout/viewlets/content.py
M plone/app/layout/viewlets/document_byline.pt
M plone/app/layout/viewlets/tests/test_content.py

b'diff --git a/news/258.fix b/news/258.fix\nnew file mode 100644\nindex 00000000..e916edc7\n--- /dev/null\n+++ b/news/258.fix\n@@ -0,0 +1,2 @@\n+Show document_byline to public if `display_publication_date_in_byline` in site controlpanel is active. Only show author if `allow_anon_views_about` in security controlpanel is active. Show `modification_date` if not published or `modification_date` is greater that `effective_date`.\n+[agitator]\n\\ No newline at end of file\ndiff --git a/plone/app/layout/viewlets/content.py b/plone/app/layout/viewlets/content.py\nindex 5740f8b6..88ef00fb 100644\n--- a/plone/app/layout/viewlets/content.py\n+++ b/plone/app/layout/viewlets/content.py\n@@ -70,6 +70,14 @@ def update(self):\n         self.has_pam = HAS_PAM\n \n     def show(self):\n+        registry = getUtility(IRegistry)\n+        settings = registry.forInterface(\n+            ISiteSchema,\n+            prefix="plone",\n+        )\n+        return not self.anonymous or settings.display_publication_date_in_byline\n+\n+    def show_about(self):\n         registry = getUtility(IRegistry)\n         settings = registry.forInterface(\n             ISecuritySchema,\n@@ -88,6 +96,11 @@ def authorname(self):\n         author = self.author()\n         return author and author["fullname"] or self.creator()\n \n+    def show_modification_date(self):\n+        return not self.context.effective_date or (\n+            self.context.effective_date.Date() < self.context.modification_date.Date()\n+        )\n+\n     def isExpired(self):\n         if base_hasattr(self.context, "expires"):\n             return self.context.expires().isPast()\ndiff --git a/plone/app/layout/viewlets/document_byline.pt b/plone/app/layout/viewlets/document_byline.pt\nindex e7da135e..0e215dc5 100644\n--- a/plone/app/layout/viewlets/document_byline.pt\n+++ b/plone/app/layout/viewlets/document_byline.pt\n@@ -1,6 +1,7 @@\n <section id="section-byline" i18n:domain="plone" tal:condition="view/show">\n \n-  <tal:creator tal:define="creator_short_form view/creator;" tal:condition="creator_short_form">\n+  <tal:creator tal:define="creator_short_form view/creator;" \n+      tal:condition="python:creator_short_form and view.show_about()">\n \n   <tal:name tal:define="creator_long_form string:?author=${creator_short_form};\n                         creator_is_openid python:\'/\' in creator_short_form;\n@@ -21,13 +22,15 @@\n   </tal:name>\n   </tal:creator>\n \n-  <tal:dates define="published view/pub_date; modified context/ModificationDate">\n+  <tal:dates define="published view/pub_date; \n+                     modified context/ModificationDate;\n+                     show_modification_date python:view.show_modification_date()">\n   <span class="documentPublished" tal:condition="published">\n     <span i18n:translate="box_published">published</span>\n-    <span tal:content="python:context.toLocalizedTime(published)">Published</span><tal:sep condition="modified">,</tal:sep>\n+    <span tal:content="python:context.toLocalizedTime(published)">Published</span><tal:sep condition="show_modification_date">,</tal:sep>\n   </span>\n \n-  <span class="documentModified" tal:condition="modified">\n+  <span class="documentModified" tal:condition="show_modification_date">\n     <span i18n:translate="box_last_modified">\n       last modified\n     </span>\ndiff --git a/plone/app/layout/viewlets/tests/test_content.py b/plone/app/layout/viewlets/tests/test_content.py\nindex edc877cf..26b837f6 100644\n--- a/plone/app/layout/viewlets/tests/test_content.py\n+++ b/plone/app/layout/viewlets/tests/test_content.py\n@@ -43,6 +43,10 @@ def setUp(self):\n         self.context = self.folder["doc1"]\n \n         registry = getUtility(IRegistry)\n+        self.site_settings = registry.forInterface(\n+            ISiteSchema,\n+            prefix="plone",\n+        )\n         self.security_settings = registry.forInterface(\n             ISecuritySchema,\n             prefix="plone",\n@@ -58,9 +62,9 @@ def test_pub_date(self):\n         # configure our portal to enable publication date on pages globally on\n         # the site\n         registry = getUtility(IRegistry)\n-        settings = registry.forInterface(ISiteSchema, prefix="plone")\n+        # settings = registry.forInterface(ISiteSchema, prefix="plone")\n \n-        settings.display_publication_date_in_byline = True\n+        self.site_settings.display_publication_date_in_byline = True\n \n         logout()\n         viewlet = self._get_viewlet()\n@@ -76,31 +80,53 @@ def test_pub_date(self):\n \n         # now switch off publication date globally on the site and see if\n         # viewlet returns None for publication date\n-        settings.display_publication_date_in_byline = False\n+        self.site_settings.display_publication_date_in_byline = False\n         self.assertEqual(viewlet.pub_date(), None)\n \n     def test_anonymous_users_see_byline_if_show_enabled(self):\n-        self.security_settings.allow_anon_views_about = True\n+        self.site_settings.display_publication_date_in_byline = True\n         logout()\n         viewlet = self._get_viewlet()\n         self.assertTrue(viewlet.show())\n \n     def test_anonymous_users_dont_see_byline_if_show_disabled(self):\n-        self.security_settings.allow_anon_views_about = False\n+        self.site_settings.display_publication_date_in_byline = False\n         logout()\n         viewlet = self._get_viewlet()\n         self.assertFalse(viewlet.show())\n \n     def test_logged_users_see_byline_if_show_enabled(self):\n-        self.security_settings.allow_anon_views_about = True\n+        self.site_settings.display_publication_date_in_byline = True\n         viewlet = self._get_viewlet()\n         self.assertTrue(viewlet.show())\n \n     def test_logged_users_see_byline_if_show_disabled(self):\n-        self.security_settings.allow_anon_views_about = False\n+        self.site_settings.display_publication_date_in_byline = False\n         viewlet = self._get_viewlet()\n         self.assertTrue(viewlet.show())\n \n+    def test_anonymous_users_see_about_if_show_enabled(self):\n+        self.security_settings.allow_anon_views_about = True\n+        logout()\n+        viewlet = self._get_viewlet()\n+        self.assertTrue(viewlet.show_about())\n+\n+    def test_anonymous_users_dont_see_about_if_show_disabled(self):\n+        self.security_settings.allow_anon_views_about = False\n+        logout()\n+        viewlet = self._get_viewlet()\n+        self.assertFalse(viewlet.show_about())\n+\n+    def test_logged_users_see_about_if_show_enabled(self):\n+        self.security_settings.allow_anon_views_about = True\n+        viewlet = self._get_viewlet()\n+        self.assertTrue(viewlet.show_about())\n+\n+    def test_logged_users_see_about_if_show_disabled(self):\n+        self.security_settings.allow_anon_views_about = False\n+        viewlet = self._get_viewlet()\n+        self.assertTrue(viewlet.show_about())\n+\n \n class TestHistoryBylineViewletView(ViewletsTestCase):\n     """\n'

