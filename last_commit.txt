Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2019-04-15T22:35:06+02:00
Author: Érico Andrei (ericof) <ericof@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/1a32a3d19787a927e60f6652174284c6bfd46117

Fix #2842: malformed url when redirecting to external login

Files changed:
A news/2842.bugfix
M Products/CMFPlone/browser/login/login.py
M Products/CMFPlone/tests/test_login_form.py

b'diff --git a/Products/CMFPlone/browser/login/login.py b/Products/CMFPlone/browser/login/login.py\nindex 4114e1711..7534e0029 100644\n--- a/Products/CMFPlone/browser/login/login.py\n+++ b/Products/CMFPlone/browser/login/login.py\n@@ -68,14 +68,17 @@ def render(self):\n     def _handle_external_login(self, url):\n         """Handle login on this portal where login is external."""\n         next_ = self.request.get(\'next\', None)\n+        came_from = self.request.get(\'came_from\')\n         portal_url = getToolByName(self.context, \'portal_url\')\n+        params = []\n         if next_ is not None and not portal_url.isURLInPortal(next_):\n             next_ = None\n         if next_ is not None:\n-            url = \'{0}?next={1}\'.format(url, next_)\n-        came_from = self.request.get(\'came_from\')\n+            params.append(\'next={0}\'.format(next_))\n         if came_from:\n-            url = \'{0}&came_from={1}\'.format(url, came_from)\n+            params.append(\'came_from={0}\'.format(came_from))\n+        qs = \'?{0}\'.format(\'&\'.join(params)) if params else \'\'\n+        url = \'{0}{1}\'.format(url, qs)\n         self.request.response.redirect(url)\n \n     def _get_auth(self):\ndiff --git a/Products/CMFPlone/tests/test_login_form.py b/Products/CMFPlone/tests/test_login_form.py\nindex f1a3a6849..6e4260641 100644\n--- a/Products/CMFPlone/tests/test_login_form.py\n+++ b/Products/CMFPlone/tests/test_login_form.py\n@@ -79,7 +79,7 @@ def test_login_external(self):\n             form.request.response.getHeader(\'Location\'),\n         )\n \n-    def test_login_external_with_params(self):\n+    def test_login_external_with_all_params(self):\n         registry = self.layer[\'portal\'].portal_registry\n         registry[\'plone.external_login_url\'] = \'http://testurl/extlogin\'\n         self.request[\'came_from\'] = \'foo\'\n@@ -87,11 +87,22 @@ def test_login_external_with_params(self):\n         form = self.portal.restrictedTraverse(\'login\')\n         form()\n         self.assertIn(\n-            \'came_from=foo\',\n+            \'&came_from=foo\',\n             form.request.response.getHeader(\'Location\'),\n         )\n         self.assertIn(\n-            \'next=bar\',\n+            \'?next=bar\',\n+            form.request.response.getHeader(\'Location\'),\n+        )\n+\n+    def test_login_external_without_next_param(self):\n+        registry = self.layer[\'portal\'].portal_registry\n+        registry[\'plone.external_login_url\'] = \'http://testurl/extlogin\'\n+        self.request[\'came_from\'] = \'foo\'\n+        form = self.portal.restrictedTraverse(\'login\')\n+        form()\n+        self.assertIn(\n+            \'?came_from=foo\',\n             form.request.response.getHeader(\'Location\'),\n         )\n \ndiff --git a/news/2842.bugfix b/news/2842.bugfix\nnew file mode 100644\nindex 000000000..d65b47082\n--- /dev/null\n+++ b/news/2842.bugfix\n@@ -0,0 +1 @@\n+Fix malformed url when redirecting to external login. [ericof]\n\\ No newline at end of file\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2019-04-16T12:21:42+02:00
Author: Érico Andrei (ericof) <ericof@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/4eb14052752cbe6bd5aeae5631ebdffe1313b01a

Use urllib parse functions to manipulate the url

Files changed:
M Products/CMFPlone/browser/login/login.py
M Products/CMFPlone/tests/test_login_form.py

b'diff --git a/Products/CMFPlone/browser/login/login.py b/Products/CMFPlone/browser/login/login.py\nindex 7534e0029..2ceda2300 100644\n--- a/Products/CMFPlone/browser/login/login.py\n+++ b/Products/CMFPlone/browser/login/login.py\n@@ -69,17 +69,17 @@ def _handle_external_login(self, url):\n         """Handle login on this portal where login is external."""\n         next_ = self.request.get(\'next\', None)\n         came_from = self.request.get(\'came_from\')\n+        urlparts = [part for part in parse.urlparse(url)]\n+        qs = dict(parse.parse_qsl(urlparts[4]))\n         portal_url = getToolByName(self.context, \'portal_url\')\n-        params = []\n         if next_ is not None and not portal_url.isURLInPortal(next_):\n             next_ = None\n         if next_ is not None:\n-            params.append(\'next={0}\'.format(next_))\n+            qs[\'next\'] = next_\n         if came_from:\n-            params.append(\'came_from={0}\'.format(came_from))\n-        qs = \'?{0}\'.format(\'&\'.join(params)) if params else \'\'\n-        url = \'{0}{1}\'.format(url, qs)\n-        self.request.response.redirect(url)\n+            qs[\'came_from\'] = came_from\n+        urlparts[4] = parse.urlencode(qs)\n+        self.request.response.redirect(parse.urlunparse(urlparts))\n \n     def _get_auth(self):\n         try:\ndiff --git a/Products/CMFPlone/tests/test_login_form.py b/Products/CMFPlone/tests/test_login_form.py\nindex 6e4260641..49e20620c 100644\n--- a/Products/CMFPlone/tests/test_login_form.py\n+++ b/Products/CMFPlone/tests/test_login_form.py\n@@ -81,17 +81,22 @@ def test_login_external(self):\n \n     def test_login_external_with_all_params(self):\n         registry = self.layer[\'portal\'].portal_registry\n-        registry[\'plone.external_login_url\'] = \'http://testurl/extlogin\'\n+        registry[\'plone.external_login_url\'] = \'http://testurl/extlogin?level=debug\'\n         self.request[\'came_from\'] = \'foo\'\n         self.request[\'next\'] = \'bar\'\n         form = self.portal.restrictedTraverse(\'login\')\n         form()\n         self.assertIn(\n-            \'&came_from=foo\',\n+            \'came_from=foo\',\n+            form.request.response.getHeader(\'Location\'),\n+        )\n+        self.assertIn(\n+            \'next=bar\',\n             form.request.response.getHeader(\'Location\'),\n         )\n+        # Keep the original query string\n         self.assertIn(\n-            \'?next=bar\',\n+            \'level=debug\',\n             form.request.response.getHeader(\'Location\'),\n         )\n \n@@ -102,7 +107,7 @@ def test_login_external_without_next_param(self):\n         form = self.portal.restrictedTraverse(\'login\')\n         form()\n         self.assertIn(\n-            \'?came_from=foo\',\n+            \'came_from=foo\',\n             form.request.response.getHeader(\'Location\'),\n         )\n \n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2019-04-16T20:14:48+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/032a7753165a39f67d17fab5a9a9707fcda30b38

Merge pull request #2843 from plone/issue-2842-fix-malformed-url-in-login

Fix #2842: malformed url when redirecting to external login

Files changed:
A news/2842.bugfix
M Products/CMFPlone/browser/login/login.py
M Products/CMFPlone/tests/test_login_form.py

b'diff --git a/Products/CMFPlone/browser/login/login.py b/Products/CMFPlone/browser/login/login.py\nindex 4114e1711..2ceda2300 100644\n--- a/Products/CMFPlone/browser/login/login.py\n+++ b/Products/CMFPlone/browser/login/login.py\n@@ -68,15 +68,18 @@ def render(self):\n     def _handle_external_login(self, url):\n         """Handle login on this portal where login is external."""\n         next_ = self.request.get(\'next\', None)\n+        came_from = self.request.get(\'came_from\')\n+        urlparts = [part for part in parse.urlparse(url)]\n+        qs = dict(parse.parse_qsl(urlparts[4]))\n         portal_url = getToolByName(self.context, \'portal_url\')\n         if next_ is not None and not portal_url.isURLInPortal(next_):\n             next_ = None\n         if next_ is not None:\n-            url = \'{0}?next={1}\'.format(url, next_)\n-        came_from = self.request.get(\'came_from\')\n+            qs[\'next\'] = next_\n         if came_from:\n-            url = \'{0}&came_from={1}\'.format(url, came_from)\n-        self.request.response.redirect(url)\n+            qs[\'came_from\'] = came_from\n+        urlparts[4] = parse.urlencode(qs)\n+        self.request.response.redirect(parse.urlunparse(urlparts))\n \n     def _get_auth(self):\n         try:\ndiff --git a/Products/CMFPlone/tests/test_login_form.py b/Products/CMFPlone/tests/test_login_form.py\nindex f1a3a6849..49e20620c 100644\n--- a/Products/CMFPlone/tests/test_login_form.py\n+++ b/Products/CMFPlone/tests/test_login_form.py\n@@ -79,9 +79,9 @@ def test_login_external(self):\n             form.request.response.getHeader(\'Location\'),\n         )\n \n-    def test_login_external_with_params(self):\n+    def test_login_external_with_all_params(self):\n         registry = self.layer[\'portal\'].portal_registry\n-        registry[\'plone.external_login_url\'] = \'http://testurl/extlogin\'\n+        registry[\'plone.external_login_url\'] = \'http://testurl/extlogin?level=debug\'\n         self.request[\'came_from\'] = \'foo\'\n         self.request[\'next\'] = \'bar\'\n         form = self.portal.restrictedTraverse(\'login\')\n@@ -94,6 +94,22 @@ def test_login_external_with_params(self):\n             \'next=bar\',\n             form.request.response.getHeader(\'Location\'),\n         )\n+        # Keep the original query string\n+        self.assertIn(\n+            \'level=debug\',\n+            form.request.response.getHeader(\'Location\'),\n+        )\n+\n+    def test_login_external_without_next_param(self):\n+        registry = self.layer[\'portal\'].portal_registry\n+        registry[\'plone.external_login_url\'] = \'http://testurl/extlogin\'\n+        self.request[\'came_from\'] = \'foo\'\n+        form = self.portal.restrictedTraverse(\'login\')\n+        form()\n+        self.assertIn(\n+            \'came_from=foo\',\n+            form.request.response.getHeader(\'Location\'),\n+        )\n \n     def test_failsafe_login_external(self):\n         registry = self.layer[\'portal\'].portal_registry\ndiff --git a/news/2842.bugfix b/news/2842.bugfix\nnew file mode 100644\nindex 000000000..d65b47082\n--- /dev/null\n+++ b/news/2842.bugfix\n@@ -0,0 +1 @@\n+Fix malformed url when redirecting to external login. [ericof]\n\\ No newline at end of file\n'

