Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2015-12-08T20:28:48-06:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/f2f4c33aad84af41a5a7ec460fcb4cb7e58cdf2e

fix issue in migration where source or target uuid could not
  be found

Files changed:
M CHANGES.rst
M plone/app/contenttypes/migration/utils.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 79171eb..f3045e2 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,9 @@ New:
 
 Fixes:
 
-- *add item here*
+- fix issue in migration where source or target uuid could not
+  be found
+  [vangheem]
 
 
 1.2.7 (2015-11-28)
diff --git a/plone/app/contenttypes/migration/utils.py b/plone/app/contenttypes/migration/utils.py
index d15328c..69044b4 100644
--- a/plone/app/contenttypes/migration/utils.py
+++ b/plone/app/contenttypes/migration/utils.py
@@ -323,7 +323,12 @@ def restore_references(context):
         source_obj = uuidToObject(ref['from_uuid'])
         target_obj = uuidToObject(ref['to_uuid'])
         relationship = ref['relationship']
-        link_items(context, source_obj, target_obj, relationship)
+        if source_obj and target_obj:
+            relationship = ref['relationship']
+            link_items(context, source_obj, target_obj, relationship)
+        else:
+            logger.warn('Could not restore reference from uid "%s" to uid "%s" on the context: %s' % (  # noqa
+                ref['from_uuid'], ref['to_uuid'], '/'.join(context.getPhysicalPath())))
     del IAnnotations(context)[key]
 
 


Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2015-12-08T20:42:23-06:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/f8315df896b8b19dd45867ed5891dcc93a785f40

check object has field

Files changed:
M plone/app/contenttypes/migration/utils.py

diff --git a/plone/app/contenttypes/migration/utils.py b/plone/app/contenttypes/migration/utils.py
index 69044b4..9549464 100644
--- a/plone/app/contenttypes/migration/utils.py
+++ b/plone/app/contenttypes/migration/utils.py
@@ -419,6 +419,9 @@ def link_items(  # noqa
             modified(target_obj)
 
         field = source_obj.getField(fieldname)
+        if field is None:
+            # we can't migrate if it doesn't actually have the field
+            return
         accessor = field.getAccessor(source_obj)
         existing_at_relations = accessor()
 


Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2015-12-08T21:32:02-06:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/990754c36ede411eb307fbe28eae223a0698699e

also check relations are there

Files changed:
M plone/app/contenttypes/migration/utils.py

diff --git a/plone/app/contenttypes/migration/utils.py b/plone/app/contenttypes/migration/utils.py
index 9549464..beb736f 100644
--- a/plone/app/contenttypes/migration/utils.py
+++ b/plone/app/contenttypes/migration/utils.py
@@ -302,13 +302,14 @@ def get_all_references(context):
     portal_catalog = getToolByName(context, 'portal_catalog')
     relation_catalog = queryUtility(ICatalog)
     for rel in relation_catalog.findRelations():
-        from_brain = portal_catalog(path=dict(query=rel.from_path, depth=0))[0]
-        to_brain = portal_catalog(path=dict(query=rel.to_path, depth=0))[0]
-        results.append({
-            'from_uuid': from_brain.UID,
-            'to_uuid': to_brain.UID,
-            'relationship': rel.from_attribute,
-        })
+        from_brain = portal_catalog(path=dict(query=rel.from_path, depth=0))
+        to_brain = portal_catalog(path=dict(query=rel.to_path, depth=0))
+        if len(from_brain) > 0 and len(to_brain) > 0:
+            results.append({
+                'from_uuid': from_brain[0].UID,
+                'to_uuid': to_brain[0].UID,
+                'relationship': rel.from_attribute,
+            })
     return results
 
 


Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2015-12-09T07:50:49-06:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/d0062a318319849b56164b80d72b531c783850d2

fix line length

Files changed:
M plone/app/contenttypes/migration/utils.py

diff --git a/plone/app/contenttypes/migration/utils.py b/plone/app/contenttypes/migration/utils.py
index beb736f..11104b4 100644
--- a/plone/app/contenttypes/migration/utils.py
+++ b/plone/app/contenttypes/migration/utils.py
@@ -328,8 +328,11 @@ def restore_references(context):
             relationship = ref['relationship']
             link_items(context, source_obj, target_obj, relationship)
         else:
-            logger.warn('Could not restore reference from uid "%s" to uid "%s" on the context: %s' % (  # noqa
-                ref['from_uuid'], ref['to_uuid'], '/'.join(context.getPhysicalPath())))
+            logger.warn(
+                'Could not restore reference from uid '
+                '"%s" to uid "%s" on the context: %s' % (
+                    ref['from_uuid'], ref['to_uuid'],
+                    '/'.join(context.getPhysicalPath())))
     del IAnnotations(context)[key]
 
 


Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2015-12-14T17:36:05+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/da984bc6e761147e1bff8d40994625d3e99e0109

Merge pull request #306 from plone/missing-uuid

fix issue in migration where source or target uuid could not be found

Files changed:
M CHANGES.rst
M plone/app/contenttypes/migration/utils.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 79171eb..f3045e2 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,9 @@ New:
 
 Fixes:
 
-- *add item here*
+- fix issue in migration where source or target uuid could not
+  be found
+  [vangheem]
 
 
 1.2.7 (2015-11-28)
diff --git a/plone/app/contenttypes/migration/utils.py b/plone/app/contenttypes/migration/utils.py
index d15328c..11104b4 100644
--- a/plone/app/contenttypes/migration/utils.py
+++ b/plone/app/contenttypes/migration/utils.py
@@ -302,13 +302,14 @@ def get_all_references(context):
     portal_catalog = getToolByName(context, 'portal_catalog')
     relation_catalog = queryUtility(ICatalog)
     for rel in relation_catalog.findRelations():
-        from_brain = portal_catalog(path=dict(query=rel.from_path, depth=0))[0]
-        to_brain = portal_catalog(path=dict(query=rel.to_path, depth=0))[0]
-        results.append({
-            'from_uuid': from_brain.UID,
-            'to_uuid': to_brain.UID,
-            'relationship': rel.from_attribute,
-        })
+        from_brain = portal_catalog(path=dict(query=rel.from_path, depth=0))
+        to_brain = portal_catalog(path=dict(query=rel.to_path, depth=0))
+        if len(from_brain) > 0 and len(to_brain) > 0:
+            results.append({
+                'from_uuid': from_brain[0].UID,
+                'to_uuid': to_brain[0].UID,
+                'relationship': rel.from_attribute,
+            })
     return results
 
 
@@ -323,7 +324,15 @@ def restore_references(context):
         source_obj = uuidToObject(ref['from_uuid'])
         target_obj = uuidToObject(ref['to_uuid'])
         relationship = ref['relationship']
-        link_items(context, source_obj, target_obj, relationship)
+        if source_obj and target_obj:
+            relationship = ref['relationship']
+            link_items(context, source_obj, target_obj, relationship)
+        else:
+            logger.warn(
+                'Could not restore reference from uid '
+                '"%s" to uid "%s" on the context: %s' % (
+                    ref['from_uuid'], ref['to_uuid'],
+                    '/'.join(context.getPhysicalPath())))
     del IAnnotations(context)[key]
 
 
@@ -414,6 +423,9 @@ def link_items(  # noqa
             modified(target_obj)
 
         field = source_obj.getField(fieldname)
+        if field is None:
+            # we can't migrate if it doesn't actually have the field
+            return
         accessor = field.getAccessor(source_obj)
         existing_at_relations = accessor()
 


