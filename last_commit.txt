Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-04-08T17:09:38+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/11aa69d1a55439efa0ccb7e3909b9cf6d19b8a17

remove Archtypes specific isIDAutoGenerated

Files changed:
A news/3487.breaking
M Products/CMFPlone/PloneTool.py
M Products/CMFPlone/tests/testCheckId.py
M Products/CMFPlone/tests/testPloneTool.py
M Products/CMFPlone/utils.py

b'diff --git a/Products/CMFPlone/PloneTool.py b/Products/CMFPlone/PloneTool.py\nindex 216f8c251f..5123a27af5 100644\n--- a/Products/CMFPlone/PloneTool.py\n+++ b/Products/CMFPlone/PloneTool.py\n@@ -945,11 +945,6 @@ def reindexOnReorder(self, parent):\n         # but some extensions might need the info anyway. :(\n         notify(ReorderedEvent(parent))\n \n-    @security.public\n-    def isIDAutoGenerated(self, id):\n-        # Determine if an id is autogenerated.\n-        return utils.isIDAutoGenerated(self, id)\n-\n     @security.public\n     def getEmptyTitle(self, translated=True):\n         # Returns string to be used for objects with no title or id.\ndiff --git a/Products/CMFPlone/tests/testCheckId.py b/Products/CMFPlone/tests/testCheckId.py\nindex 9ca7796556..89017a733b 100644\n--- a/Products/CMFPlone/tests/testCheckId.py\n+++ b/Products/CMFPlone/tests/testCheckId.py\n@@ -6,45 +6,6 @@\n from ZODB.POSException import ConflictError\n \n \n-class TestIsIDAutoGenerated(PloneTestCase):\n-\n-    def testAutoGeneratedId(self):\n-        plone_utils = getToolByName(self.portal, \'plone_utils\')\n-        r = plone_utils.isIDAutoGenerated(\'document.2004-11-09.0123456789\')\n-        self.assertEqual(r, True)\n-\n-    def testAutoGeneratedIdWithUnderScores(self):\n-        plone_utils = getToolByName(self.portal, \'plone_utils\')\n-        portal_types = getToolByName(self.portal, \'portal_types\')\n-        portal_types.test_type = self.portal.portal_types.Event\n-        portal_types.test_type.id = "test_type"\n-\n-        r = plone_utils.isIDAutoGenerated(\'test_type.2004-11-09.0123456789\')\n-\n-        del portal_types.test_type\n-\n-        self.assertEqual(r, True)\n-\n-    def testEmptyId(self):\n-        plone_utils = getToolByName(self.portal, \'plone_utils\')\n-        r = plone_utils.isIDAutoGenerated(\'\')\n-        self.assertEqual(r, False)\n-\n-    def testValidPortalTypeNameButNotAutoGeneratedId(self):\n-        plone_utils = getToolByName(self.portal, \'plone_utils\')\n-        # This was raising an IndexError exception for\n-        # Zope < 2.7.3 (DateTime.py < 1.85.12.11) and a\n-        # SyntaxError for Zope >= 2.7.3 (DateTime.py >= 1.85.12.11)\n-        r = plone_utils.isIDAutoGenerated(\'document.tar.gz\')\n-        self.assertEqual(r, False)\n-        # check DateError\n-        r = plone_utils.isIDAutoGenerated(\'document.tar.12/32/2004\')\n-        self.assertEqual(r, False)\n-        # check TimeError\n-        r = plone_utils.isIDAutoGenerated(\'document.tar.12/31/2004 12:62\')\n-        self.assertEqual(r, False)\n-\n-\n class TestCheckId(PloneTestCase):\n \n     def testGoodId(self):\ndiff --git a/Products/CMFPlone/tests/testPloneTool.py b/Products/CMFPlone/tests/testPloneTool.py\nindex 9ae991a515..459d21d01e 100644\n--- a/Products/CMFPlone/tests/testPloneTool.py\n+++ b/Products/CMFPlone/tests/testPloneTool.py\n@@ -552,21 +552,6 @@ class TestIDGenerationMethods(PloneTestCase.PloneTestCase):\n     def afterSetUp(self):\n         self.utils = self.portal.plone_utils\n \n-    def testAutoGeneratedId(self):\n-        r = self.utils.isIDAutoGenerated(\'document.2004-11-09.0123456789\')\n-        self.assertEqual(r, True)\n-\n-    def testValidPortalTypeNameButNotAutoGeneratedId(self):\n-        # This was raising an IndexError exception for\n-        # Zope < 2.7.3 (DateTime.py < 1.85.12.11) and a\n-        # SyntaxError for Zope >= 2.7.3 (DateTime.py >= 1.85.12.11)\n-        r = self.utils.isIDAutoGenerated(\'document.tar.gz\')\n-        self.assertEqual(r, False)\n-        r = self.utils.isIDAutoGenerated(\'document.tar.12/32/2004\')\n-        self.assertEqual(r, False)\n-        r = self.utils.isIDAutoGenerated(\'document.tar.12/31/2004 12:62\')\n-        self.assertEqual(r, False)\n-\n     def test_pretty_title_or_id_returns_title(self):\n         self.folder.setTitle(\'My pretty title\')\n         self.assertEqual(self.utils.pretty_title_or_id(self.folder),\n@@ -577,17 +562,6 @@ def test_pretty_title_or_id_returns_id(self):\n         self.assertEqual(self.utils.pretty_title_or_id(self.folder),\n                          self.folder.getId())\n \n-    def test_pretty_title_or_id_when_autogenerated(self):\n-        self.setRoles([\'Manager\', \'Member\'])\n-        self.folder.setTitle(\'\')\n-        self.folder.__parent__.manage_renameObject(\n-            self.folder.id, \'folder.2004-11-09.0123456789\')\n-        self.folder.reindexObject()\n-        self.assertEqual(self.utils.pretty_title_or_id(self.folder),\n-                         self.utils.getEmptyTitle())\n-        self.assertEqual(self.utils.pretty_title_or_id(self.folder, \'Marker\'),\n-                         \'Marker\')\n-\n     def test_pretty_title_or_id_works_with_method_that_needs_context(self):\n         self.setRoles([\'Manager\', \'Member\'])\n         # Create a dummy class that looks at it\'s context to find the title\n@@ -621,19 +595,6 @@ def test_pretty_title_or_id_on_catalog_brain_returns_id(self):\n         self.assertEqual(self.utils.pretty_title_or_id(results[0]),\n                          self.folder.getId())\n \n-    def test_pretty_title_or_id_on_catalog_brain_autogenerated(self):\n-        cat = self.portal.portal_catalog\n-        self.setRoles([\'Manager\', \'Member\'])\n-        self.folder.__parent__.manage_renameObject(\n-            self.folder.id, \'folder.2004-11-09.0123456789\')\n-        self.folder.title = \'\'\n-        self.folder.subject = (\'foobar\',)\n-        self.folder.reindexObject()\n-        results = cat(Subject=\'foobar\')\n-        self.assertEqual(len(results), 1)\n-        self.assertEqual(self.utils.pretty_title_or_id(results[0], \'Marker\'),\n-                         \'Marker\')\n-\n     def test_pretty_title_or_id_on_catalog_brain_no_title(self):\n         cat = self.portal.portal_catalog\n         self.setRoles([\'Manager\', \'Member\'])\ndiff --git a/Products/CMFPlone/utils.py b/Products/CMFPlone/utils.py\nindex 87a3df71b3..e94f7446ea 100644\n--- a/Products/CMFPlone/utils.py\n+++ b/Products/CMFPlone/utils.py\n@@ -140,31 +140,6 @@ def createSiteMap(context, request, sitemap=False):\n     return view.siteMap()\n \n \n-def isIDAutoGenerated(context, id):\n-    # In 2.1 non-autogenerated is the common case, caught exceptions are\n-    # expensive, so let\'s make a cheap check first\n-    if id.count(\'.\') < 2:\n-        return False\n-\n-    pt = getToolByName(context, \'portal_types\')\n-    portaltypes = pt.listContentTypes()\n-    portaltypes.extend([t.lower() for t in portaltypes])\n-\n-    try:\n-        parts = id.split(\'.\')\n-        random_number = parts.pop()\n-        date_created = parts.pop()\n-        obj_type = \'.\'.join(parts)\n-        type = \' \'.join(obj_type.split(\'_\'))\n-        # New autogenerated ids may have a lower case portal type\n-        if ((type in portaltypes or obj_type in portaltypes) and\n-                DateTime(date_created) and float(random_number)):\n-            return True\n-    except (ValueError, AttributeError, IndexError, DateTimeError):\n-        pass\n-\n-    return False\n-\n \n def isExpired(content):\n     """ Find out if the object is expired (copied from skin script) """\n@@ -217,7 +192,7 @@ def pretty_title_or_id(context, obj, empty_value=_marker):\n     item_id = getattr(obj, \'getId\', None)\n     if safe_callable(item_id):\n         item_id = item_id()\n-    if item_id and not isIDAutoGenerated(context, item_id):\n+    if item_id:\n         return item_id\n     if empty_value is _marker:\n         empty_value = getEmptyTitle(context)\ndiff --git a/news/3487.breaking b/news/3487.breaking\nnew file mode 100644\nindex 0000000000..d0f16829e5\n--- /dev/null\n+++ b/news/3487.breaking\n@@ -0,0 +1,3 @@\n+Remove Archtypes specific `isIDAutoGenerated` helper.\n+This was dead code not used anywhere in Plone 6.\n+[jensens]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-04-08T17:39:24+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/c9afb9cea26352fdfdb1e38140f5a31a46b6df58

Merge branch 'master' into rm-isIDAutGenerated

Files changed:
A news/6005.bugfix
M CHANGES.rst
M Products/CMFPlone/MigrationTool.py
M Products/CMFPlone/browser/search.py
M Products/CMFPlone/profiles/default/metadata.xml
M setup.py
D news/23.bugfix
D news/282.bugfix
D news/3031.bugfix
D news/3240.bugfix
D news/3247.breaking.1
D news/3247.breaking.2
D news/3247.bugfix
D news/3279.feature
D news/3290.bugfix
D news/3294.bugfix
D news/3322.bugfix
D news/3325.breaking
D news/3351.feature
D news/3374.bugfix
D news/3395.feature
D news/3416.bugfix
D news/3422.bugfix
D news/3430.bugfix
D news/3440.feature
D news/3442.bugfix
D news/3447.bugfix
D news/3453.bugfix
D news/3459.feature
D news/3463.bugfix
D news/3467.bugfix
D news/3468.bugfix
D news/3478.bugfix
D news/3485.breaking
D news/500.bugfix
D news/6004.bugfix

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 35ed72df43..2426d525b3 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -12,6 +12,115 @@ Changelog\n \n .. towncrier release notes start\n \n+6.0.0a4 (2022-04-08)\n+--------------------\n+\n+Breaking changes:\n+\n+\n+- PLIP 3211:\n+\n+  - Remove RequireJS.\n+  - Remove default resource jQuery. It is added to the global namespace via the bundle.\n+  - Remove support for conditional comments in script and style tags.\n+    It\'s not supported since IE10.\n+    See: https://en.wikipedia.org/wiki/Conditional_comment\n+\n+  [MrTango, thet] (#3247)\n+- Remove dependency on mockup. Mockup is now a npm package only and as such a dependency of plone.staticresources.\n+  [thet] (#3247)\n+- New resource registry to simplify CSS/JS registration.\n+\n+  - Completely (almost) rewritten ResourceRegistry based on the "webresource" project.\n+  - removed >1600LOC.\n+  - Sane dependency resolution using "webresource".\n+  - Only "bundles" are registered - support of "resources" and "bundle resources" is removed.\n+  - Some of the old bundle registry properties are deprecated and unused.\n+  - Removed TTW compilation of bundles via r.js and less.js.\n+  - Property `merge_with` is no longer needed in HTTP/2 times and merging here unsupported.\n+  - Unique key for delivery is based on hash of bundle file, `last_compilation` property is deprecated.\n+  - A new traverser ensures uniqueness.\n+  - Other related bundle properties are also deprecated.\n+  - Comes with new, server side generated control panel.\n+\n+  [jensens] (#3325)\n+- Remove `deprecated.zcml` and `meta-bbb.zcml`.\n+  [jensens, pbauer] (#3485)\n+\n+\n+New features:\n+\n+\n+- PLIP #3279: Implement modern images scales. Add huge (1600px), great (1200px), larger (1000px), teaser (600px). Amend preview and mini (remove height constraint).\n+  [tisto] (#3279)\n+- Add TinyMCE template plugin to the plugins vocabulary [MrTango] (#3351)\n+- Implement `PLIP 3395 <https://github.com/plone/Products.CMFPlone/issue/3395>`_.\n+  Moves all interfaces, whole defaultpage, i18nl10, batch, permissions and parts of utils to ``plone.base``.\n+  For all imports are in place with deprecation warnings.\n+  Along with this a bunch of long deprecated functions, imports and similar in above packages were removed.\n+  [jensens] (#3395)\n+- Add TinyMCE alignment classes, to avoid style usage [MrTango] (#3440)\n+- Compatibility with z3c.form >= 4\n+  [petschki] (#3459)\n+- Added support for images in liveSearch results.\n+  [agitator] (#3489)\n+\n+\n+Bug fixes:\n+\n+\n+- Fixed evaluating expressions on resources, and especially loading ``plone.session`` resources.\n+  Fixes `plone.session` issue 23 <https://github.com/plone/plone.session/issues/23>_.\n+  [maurits] (#23)\n+- MigrationTool: use more standard ``listUpgrades`` code from GenericSetup 2.2.0.\n+  I ported our special logic there.\n+  [maurits] (#220)\n+- Handle /favicon.ico accesses on Plone sites. (#282)\n+- Fixed tests when run with ``zope.component`` 5+.\n+  [maurits] (#500)\n+- Remove Configlets, Change Member Password and Member Prefs not needed in Overview Controlpanel\n+  both Views available via User Control Panel\n+\n+  the deleton of "Change Member Password" Configlet remove also the issue #3031\n+  [1letter] (#3031)\n+- Removed no longer used ``password_form.pt`` and ``plone_change_password.py``.\n+  No longer register now empty skin layers ``plone_prefs`` and ``plone_form_scripts``.\n+  [maurits] (#3240)\n+- Fix TinyMCE configuration JSON serialization and cast entity_encoding to a list. (#3247)\n+- Make author template barceloneta/bs5 ready. Add some CSS classes to Markup. \n+  [1letter] (#3290)\n+- Use behavior-names instead of python-paths in types-controlpanel\n+  [pbauer] (#3294)\n+- Fix broken link in the RelationsInspectControlpanel\n+  prepend absolute portal url to links\n+  add RelationsControlPanelFunctionalTest\n+  [1letter] (#3322)\n+- Fix missing closing BODY tag in insufficient_privileges.pt\n+  [1letter] (#3374)\n+- Reorganize viewlets after removing the plone.header viewlet in plone.app.layout\n+  [erral] (#3416)\n+- Fix `login-help` validation\n+  [petschki] (#3422)\n+- Fix info message (char left over) in quickinstaller template\n+  [laulaz] (#3430)\n+- Fix overview-controlpanel view for Gunicorn WSGI HTTP Server.\n+  [bsuttor] (#3442)\n+- Fix detection of initial login time [MrTango] (#3447)\n+- Updated the list of core profiles that are upgraded during a Plone upgrade.\n+  Added ``Products.PlonePAS`` and ``plone.session``, and the optional ``plone.restapi`` and ``plone.volto``.\n+  [maurits] (#3453)\n+- Remove obsolete css files previously used in tinymce.\n+  [pbauer] (#3463)\n+- Add missing i18n:translate tags\n+  [erral] (#3467)\n+- Remove obsolte combine_bundles and related code.\n+  [pbauer] (#3468)\n+- Enhanced folder_contents robot tests\n+  [petschki] (#3478)\n+- Updated metadata version to 6004.\n+  [maurits] (#6004)\n+\n+\n 6.0.0a3 (2022-01-28)\n --------------------\n \ndiff --git a/Products/CMFPlone/MigrationTool.py b/Products/CMFPlone/MigrationTool.py\nindex 2fcbb215e0..7b56c901ee 100644\n--- a/Products/CMFPlone/MigrationTool.py\n+++ b/Products/CMFPlone/MigrationTool.py\n@@ -260,22 +260,7 @@ def listUpgrades(self):\n         # using a newer plone.app.upgrade version should not give problems.\n         setup = getToolByName(self, \'portal_setup\')\n         fs_version = self.getFileSystemVersion()\n-        steps = setup.listUpgrades(_DEFAULT_PROFILE)\n-        upgrades = []\n-        for upgrade_step in steps:\n-            if isinstance(upgrade_step, list):\n-                # This is a nested list of upgrade steps,\n-                # which must have the same destination.\n-                # So take the first one.\n-                if not upgrade_step:\n-                    # Empty list, not sure if this can happen in practice.\n-                    continue\n-                dest = upgrade_step[0].get(\'sdest\')\n-            else:\n-                dest = upgrade_step.get(\'sdest\')\n-            if dest > fs_version and dest != \'all\':\n-                break\n-            upgrades.append(upgrade_step)\n+        upgrades = setup.listUpgrades(_DEFAULT_PROFILE, dest=fs_version)\n         return upgrades\n \n     security.declareProtected(ManagePortal, \'upgrade\')\ndiff --git a/Products/CMFPlone/browser/search.py b/Products/CMFPlone/browser/search.py\nindex a8c34129d6..8e396ed2ed 100644\n--- a/Products/CMFPlone/browser/search.py\n+++ b/Products/CMFPlone/browser/search.py\n@@ -1,5 +1,6 @@\n from DateTime import DateTime\n from plone.app.contentlisting.interfaces import IContentListing\n+from plone.app.layout.navigation.interfaces import INavigationRoot\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.browser.navtree import getNavigationRoot\n@@ -249,27 +250,37 @@ def __call__(self):\n \n         registry = queryUtility(IRegistry)\n         length = registry.get(\'plone.search_results_description_length\')\n+        show_images = registry.get(\'plone.search_show_images\')\n+        if show_images:\n+            image_scale = registry.get(\'plone.search_image_scale\')\n+            # image_scaling = getMultiAdapter((self.context, self.request), name=\'image_scale\')\n+            self.image_scaling = getMultiAdapter((INavigationRoot(self.context), self.request), name=\'image_scale\')\n         plone_view = getMultiAdapter(\n             (self.context, self.request), name=\'plone\')\n-        registry = getUtility(IRegistry)\n         view_action_types = registry.get(\n             \'plone.types_use_view_action_in_listings\', [])\n         for item in batch:\n             url = item.getURL()\n             if item.portal_type in view_action_types:\n                 url = \'%s/view\' % url\n+            img_tag = None\n+            if show_images:\n+                img_tag = self.get_image_tag(item, image_scale)\n             items.append({\n                 \'id\': item.UID,\n                 \'title\': item.Title,\n                 \'description\': plone_view.cropText(item.Description, length),\n                 \'url\': url,\n                 \'state\': item.review_state if item.review_state else None,\n+                \'img_tag\': img_tag,\n             })\n         return json.dumps({\n             \'total\': len(results),\n             \'items\': items\n         })\n \n+    def get_image_tag(self, item, image_scale):\n+        return self.image_scaling.tag(item, "image", scale=image_scale)\n \n class SortOption:\n \ndiff --git a/Products/CMFPlone/profiles/default/metadata.xml b/Products/CMFPlone/profiles/default/metadata.xml\nindex 782b58753c..7c4b52aa2d 100644\n--- a/Products/CMFPlone/profiles/default/metadata.xml\n+++ b/Products/CMFPlone/profiles/default/metadata.xml\n@@ -1,4 +1,4 @@\n <?xml version="1.0"?>\n <metadata>\n-  <version>6004</version>\n+  <version>6005</version>\n </metadata>\ndiff --git a/news/23.bugfix b/news/23.bugfix\ndeleted file mode 100644\nindex 9fdeac6cb1..0000000000\n--- a/news/23.bugfix\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-Fixed evaluating expressions on resources, and especially loading ``plone.session`` resources.\n-Fixes `plone.session` issue 23 <https://github.com/plone/plone.session/issues/23>_.\n-[maurits]\ndiff --git a/news/282.bugfix b/news/282.bugfix\ndeleted file mode 100644\nindex 10c579d2dc..0000000000\n--- a/news/282.bugfix\n+++ /dev/null\n@@ -1 +0,0 @@\n-Handle /favicon.ico accesses on Plone sites.\ndiff --git a/news/3031.bugfix b/news/3031.bugfix\ndeleted file mode 100644\nindex a856dc7521..0000000000\n--- a/news/3031.bugfix\n+++ /dev/null\n@@ -1,5 +0,0 @@\n-Remove Configlets, Change Member Password and Member Prefs not needed in Overview Controlpanel\n-both Views available via User Control Panel\n-\n-the deleton of "Change Member Password" Configlet remove also the issue #3031\n-[1letter]\n\\ No newline at end of file\ndiff --git a/news/3240.bugfix b/news/3240.bugfix\ndeleted file mode 100644\nindex a22c67adf0..0000000000\n--- a/news/3240.bugfix\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-Removed no longer used ``password_form.pt`` and ``plone_change_password.py``.\n-No longer register now empty skin layers ``plone_prefs`` and ``plone_form_scripts``.\n-[maurits]\ndiff --git a/news/3247.breaking.1 b/news/3247.breaking.1\ndeleted file mode 100644\nindex 5b5ccd1cc1..0000000000\n--- a/news/3247.breaking.1\n+++ /dev/null\n@@ -1,9 +0,0 @@\n-PLIP 3211:\n-\n-- Remove RequireJS.\n-- Remove default resource jQuery. It is added to the global namespace via the bundle.\n-- Remove support for conditional comments in script and style tags.\n-  It\'s not supported since IE10.\n-  See: https://en.wikipedia.org/wiki/Conditional_comment\n-\n-[MrTango, thet]\ndiff --git a/news/3247.breaking.2 b/news/3247.breaking.2\ndeleted file mode 100644\nindex a7b2e6edad..0000000000\n--- a/news/3247.breaking.2\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Remove dependency on mockup. Mockup is now a npm package only and as such a dependency of plone.staticresources.\n-[thet]\ndiff --git a/news/3247.bugfix b/news/3247.bugfix\ndeleted file mode 100644\nindex a40ff15c33..0000000000\n--- a/news/3247.bugfix\n+++ /dev/null\n@@ -1 +0,0 @@\n-Fix TinyMCE configuration JSON serialization and cast entity_encoding to a list.\ndiff --git a/news/3279.feature b/news/3279.feature\ndeleted file mode 100644\nindex 83482e9526..0000000000\n--- a/news/3279.feature\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-PLIP #3279: Implement modern images scales. Add huge (1600px), great (1200px), larger (1000px), teaser (600px). Amend preview and mini (remove height constraint).\n-[tisto]\n\\ No newline at end of file\ndiff --git a/news/3290.bugfix b/news/3290.bugfix\ndeleted file mode 100644\nindex 4c7d673144..0000000000\n--- a/news/3290.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Make author template barceloneta/bs5 ready. Add some CSS classes to Markup. \n-[1letter]\n\\ No newline at end of file\ndiff --git a/news/3294.bugfix b/news/3294.bugfix\ndeleted file mode 100644\nindex c3a4c869bf..0000000000\n--- a/news/3294.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Use behavior-names instead of python-paths in types-controlpanel\n-[pbauer]\n\\ No newline at end of file\ndiff --git a/news/3322.bugfix b/news/3322.bugfix\ndeleted file mode 100644\nindex 80d2748229..0000000000\n--- a/news/3322.bugfix\n+++ /dev/null\n@@ -1,4 +0,0 @@\n-Fix broken link in the RelationsInspectControlpanel\n-prepend absolute portal url to links\n-add RelationsControlPanelFunctionalTest\n-[1letter]\n\\ No newline at end of file\ndiff --git a/news/3325.breaking b/news/3325.breaking\ndeleted file mode 100644\nindex c77ed61735..0000000000\n--- a/news/3325.breaking\n+++ /dev/null\n@@ -1,15 +0,0 @@\n-New resource registry to simplify CSS/JS registration.\n-\n-- Completely (almost) rewritten ResourceRegistry based on the "webresource" project.\n-- removed >1600LOC.\n-- Sane dependency resolution using "webresource".\n-- Only "bundles" are registered - support of "resources" and "bundle resources" is removed.\n-- Some of the old bundle registry properties are deprecated and unused.\n-- Removed TTW compilation of bundles via r.js and less.js.\n-- Property `merge_with` is no longer needed in HTTP/2 times and merging here unsupported.\n-- Unique key for delivery is based on hash of bundle file, `last_compilation` property is deprecated.\n-- A new traverser ensures uniqueness.\n-- Other related bundle properties are also deprecated.\n-- Comes with new, server side generated control panel.\n-\n-[jensens]\ndiff --git a/news/3351.feature b/news/3351.feature\ndeleted file mode 100644\nindex 1c863a80fa..0000000000\n--- a/news/3351.feature\n+++ /dev/null\n@@ -1 +0,0 @@\n-Add TinyMCE template plugin to the plugins vocabulary [MrTango]\n\\ No newline at end of file\ndiff --git a/news/3374.bugfix b/news/3374.bugfix\ndeleted file mode 100644\nindex 3324da5bf3..0000000000\n--- a/news/3374.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Fix missing closing BODY tag in insufficient_privileges.pt\n-[1letter]\n\\ No newline at end of file\ndiff --git a/news/3395.feature b/news/3395.feature\ndeleted file mode 100644\nindex 556da519af..0000000000\n--- a/news/3395.feature\n+++ /dev/null\n@@ -1,5 +0,0 @@\n-Implement `PLIP 3395 <https://github.com/plone/Products.CMFPlone/issue/3395>`_.\n-Moves all interfaces, whole defaultpage, i18nl10, batch, permissions and parts of utils to ``plone.base``.\n-For all imports are in place with deprecation warnings.\n-Along with this a bunch of long deprecated functions, imports and similar in above packages were removed.\n-[jensens]\n\\ No newline at end of file\ndiff --git a/news/3416.bugfix b/news/3416.bugfix\ndeleted file mode 100644\nindex 4cadd00894..0000000000\n--- a/news/3416.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Reorganize viewlets after removing the plone.header viewlet in plone.app.layout\n-[erral]\ndiff --git a/news/3422.bugfix b/news/3422.bugfix\ndeleted file mode 100644\nindex ac5f6a80ef..0000000000\n--- a/news/3422.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Fix `login-help` validation\n-[petschki]\ndiff --git a/news/3430.bugfix b/news/3430.bugfix\ndeleted file mode 100644\nindex d2039c79f2..0000000000\n--- a/news/3430.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Fix info message (char left over) in quickinstaller template\n-[laulaz]\ndiff --git a/news/3440.feature b/news/3440.feature\ndeleted file mode 100644\nindex fd00b51026..0000000000\n--- a/news/3440.feature\n+++ /dev/null\n@@ -1 +0,0 @@\n-Add TinyMCE alignment classes, to avoid style usage [MrTango]\n\\ No newline at end of file\ndiff --git a/news/3442.bugfix b/news/3442.bugfix\ndeleted file mode 100644\nindex 211b196b26..0000000000\n--- a/news/3442.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Fix overview-controlpanel view for Gunicorn WSGI HTTP Server.\n-[bsuttor]\ndiff --git a/news/3447.bugfix b/news/3447.bugfix\ndeleted file mode 100644\nindex ab80f61905..0000000000\n--- a/news/3447.bugfix\n+++ /dev/null\n@@ -1 +0,0 @@\n-Fix detection of initial login time [MrTango]\n\\ No newline at end of file\ndiff --git a/news/3453.bugfix b/news/3453.bugfix\ndeleted file mode 100644\nindex cfbfe6ca99..0000000000\n--- a/news/3453.bugfix\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-Updated the list of core profiles that are upgraded during a Plone upgrade.\n-Added ``Products.PlonePAS`` and ``plone.session``, and the optional ``plone.restapi`` and ``plone.volto``.\n-[maurits]\ndiff --git a/news/3459.feature b/news/3459.feature\ndeleted file mode 100644\nindex c1a15aec03..0000000000\n--- a/news/3459.feature\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Compatibility with z3c.form >= 4\n-[petschki]\ndiff --git a/news/3463.bugfix b/news/3463.bugfix\ndeleted file mode 100644\nindex dcd5766edf..0000000000\n--- a/news/3463.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Remove obsolete css files previously used in tinymce.\n-[pbauer]\n\\ No newline at end of file\ndiff --git a/news/3467.bugfix b/news/3467.bugfix\ndeleted file mode 100644\nindex 8bb6ab4a12..0000000000\n--- a/news/3467.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Add missing i18n:translate tags\n-[erral]\ndiff --git a/news/3468.bugfix b/news/3468.bugfix\ndeleted file mode 100644\nindex a9cdb27d1d..0000000000\n--- a/news/3468.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Remove obsolte combine_bundles and related code.\n-[pbauer]\n\\ No newline at end of file\ndiff --git a/news/3478.bugfix b/news/3478.bugfix\ndeleted file mode 100644\nindex b945a17dfa..0000000000\n--- a/news/3478.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Enhanced folder_contents robot tests\n-[petschki]\ndiff --git a/news/3485.breaking b/news/3485.breaking\ndeleted file mode 100644\nindex dde718747b..0000000000\n--- a/news/3485.breaking\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Remove `deprecated.zcml` and `meta-bbb.zcml`.\n-[jensens, pbauer]\ndiff --git a/news/500.bugfix b/news/500.bugfix\ndeleted file mode 100644\nindex c9f39b6b50..0000000000\n--- a/news/500.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Fixed tests when run with ``zope.component`` 5+.\n-[maurits]\ndiff --git a/news/6004.bugfix b/news/6004.bugfix\ndeleted file mode 100644\nindex d9f2abae8c..0000000000\n--- a/news/6004.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Updated metadata version to 6004.\n-[maurits]\ndiff --git a/news/6005.bugfix b/news/6005.bugfix\nnew file mode 100644\nindex 0000000000..6e4202a59b\n--- /dev/null\n+++ b/news/6005.bugfix\n@@ -0,0 +1,2 @@\n+Updated metadata version to 6005.\n+[maurits]\ndiff --git a/setup.py b/setup.py\nindex efbfef47b1..0e9b3918f2 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,7 +1,7 @@\n from setuptools import setup\n from setuptools import find_packages\n \n-version = \'6.0.0a4.dev0\'\n+version = \'6.0.0a5.dev0\'\n \n \n setup(\n@@ -95,7 +95,7 @@\n         \'Products.CMFUid\',\n         \'Products.DCWorkflow\',\n         \'Products.ExtendedPathIndex\',\n-        \'Products.GenericSetup >= 2.0\',\n+        \'Products.GenericSetup >= 2.2.0\',\n         \'Products.isurlinportal\',\n         \'Products.MimetypesRegistry\',\n         \'Products.PlonePAS\',\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-04-09T14:02:51+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/8b3b4ae03658d7fb7e4dfaa08aed8e3421e3ab03

Merge pull request #3487 from plone/rm-isIDAutGenerated

remove Archtypes specific isIDAutoGenerated

Files changed:
A news/3487.breaking
M Products/CMFPlone/PloneTool.py
M Products/CMFPlone/tests/testCheckId.py
M Products/CMFPlone/tests/testPloneTool.py
M Products/CMFPlone/utils.py

b'diff --git a/Products/CMFPlone/PloneTool.py b/Products/CMFPlone/PloneTool.py\nindex 216f8c251f..5123a27af5 100644\n--- a/Products/CMFPlone/PloneTool.py\n+++ b/Products/CMFPlone/PloneTool.py\n@@ -945,11 +945,6 @@ def reindexOnReorder(self, parent):\n         # but some extensions might need the info anyway. :(\n         notify(ReorderedEvent(parent))\n \n-    @security.public\n-    def isIDAutoGenerated(self, id):\n-        # Determine if an id is autogenerated.\n-        return utils.isIDAutoGenerated(self, id)\n-\n     @security.public\n     def getEmptyTitle(self, translated=True):\n         # Returns string to be used for objects with no title or id.\ndiff --git a/Products/CMFPlone/tests/testCheckId.py b/Products/CMFPlone/tests/testCheckId.py\nindex 9ca7796556..89017a733b 100644\n--- a/Products/CMFPlone/tests/testCheckId.py\n+++ b/Products/CMFPlone/tests/testCheckId.py\n@@ -6,45 +6,6 @@\n from ZODB.POSException import ConflictError\n \n \n-class TestIsIDAutoGenerated(PloneTestCase):\n-\n-    def testAutoGeneratedId(self):\n-        plone_utils = getToolByName(self.portal, \'plone_utils\')\n-        r = plone_utils.isIDAutoGenerated(\'document.2004-11-09.0123456789\')\n-        self.assertEqual(r, True)\n-\n-    def testAutoGeneratedIdWithUnderScores(self):\n-        plone_utils = getToolByName(self.portal, \'plone_utils\')\n-        portal_types = getToolByName(self.portal, \'portal_types\')\n-        portal_types.test_type = self.portal.portal_types.Event\n-        portal_types.test_type.id = "test_type"\n-\n-        r = plone_utils.isIDAutoGenerated(\'test_type.2004-11-09.0123456789\')\n-\n-        del portal_types.test_type\n-\n-        self.assertEqual(r, True)\n-\n-    def testEmptyId(self):\n-        plone_utils = getToolByName(self.portal, \'plone_utils\')\n-        r = plone_utils.isIDAutoGenerated(\'\')\n-        self.assertEqual(r, False)\n-\n-    def testValidPortalTypeNameButNotAutoGeneratedId(self):\n-        plone_utils = getToolByName(self.portal, \'plone_utils\')\n-        # This was raising an IndexError exception for\n-        # Zope < 2.7.3 (DateTime.py < 1.85.12.11) and a\n-        # SyntaxError for Zope >= 2.7.3 (DateTime.py >= 1.85.12.11)\n-        r = plone_utils.isIDAutoGenerated(\'document.tar.gz\')\n-        self.assertEqual(r, False)\n-        # check DateError\n-        r = plone_utils.isIDAutoGenerated(\'document.tar.12/32/2004\')\n-        self.assertEqual(r, False)\n-        # check TimeError\n-        r = plone_utils.isIDAutoGenerated(\'document.tar.12/31/2004 12:62\')\n-        self.assertEqual(r, False)\n-\n-\n class TestCheckId(PloneTestCase):\n \n     def testGoodId(self):\ndiff --git a/Products/CMFPlone/tests/testPloneTool.py b/Products/CMFPlone/tests/testPloneTool.py\nindex 9ae991a515..459d21d01e 100644\n--- a/Products/CMFPlone/tests/testPloneTool.py\n+++ b/Products/CMFPlone/tests/testPloneTool.py\n@@ -552,21 +552,6 @@ class TestIDGenerationMethods(PloneTestCase.PloneTestCase):\n     def afterSetUp(self):\n         self.utils = self.portal.plone_utils\n \n-    def testAutoGeneratedId(self):\n-        r = self.utils.isIDAutoGenerated(\'document.2004-11-09.0123456789\')\n-        self.assertEqual(r, True)\n-\n-    def testValidPortalTypeNameButNotAutoGeneratedId(self):\n-        # This was raising an IndexError exception for\n-        # Zope < 2.7.3 (DateTime.py < 1.85.12.11) and a\n-        # SyntaxError for Zope >= 2.7.3 (DateTime.py >= 1.85.12.11)\n-        r = self.utils.isIDAutoGenerated(\'document.tar.gz\')\n-        self.assertEqual(r, False)\n-        r = self.utils.isIDAutoGenerated(\'document.tar.12/32/2004\')\n-        self.assertEqual(r, False)\n-        r = self.utils.isIDAutoGenerated(\'document.tar.12/31/2004 12:62\')\n-        self.assertEqual(r, False)\n-\n     def test_pretty_title_or_id_returns_title(self):\n         self.folder.setTitle(\'My pretty title\')\n         self.assertEqual(self.utils.pretty_title_or_id(self.folder),\n@@ -577,17 +562,6 @@ def test_pretty_title_or_id_returns_id(self):\n         self.assertEqual(self.utils.pretty_title_or_id(self.folder),\n                          self.folder.getId())\n \n-    def test_pretty_title_or_id_when_autogenerated(self):\n-        self.setRoles([\'Manager\', \'Member\'])\n-        self.folder.setTitle(\'\')\n-        self.folder.__parent__.manage_renameObject(\n-            self.folder.id, \'folder.2004-11-09.0123456789\')\n-        self.folder.reindexObject()\n-        self.assertEqual(self.utils.pretty_title_or_id(self.folder),\n-                         self.utils.getEmptyTitle())\n-        self.assertEqual(self.utils.pretty_title_or_id(self.folder, \'Marker\'),\n-                         \'Marker\')\n-\n     def test_pretty_title_or_id_works_with_method_that_needs_context(self):\n         self.setRoles([\'Manager\', \'Member\'])\n         # Create a dummy class that looks at it\'s context to find the title\n@@ -621,19 +595,6 @@ def test_pretty_title_or_id_on_catalog_brain_returns_id(self):\n         self.assertEqual(self.utils.pretty_title_or_id(results[0]),\n                          self.folder.getId())\n \n-    def test_pretty_title_or_id_on_catalog_brain_autogenerated(self):\n-        cat = self.portal.portal_catalog\n-        self.setRoles([\'Manager\', \'Member\'])\n-        self.folder.__parent__.manage_renameObject(\n-            self.folder.id, \'folder.2004-11-09.0123456789\')\n-        self.folder.title = \'\'\n-        self.folder.subject = (\'foobar\',)\n-        self.folder.reindexObject()\n-        results = cat(Subject=\'foobar\')\n-        self.assertEqual(len(results), 1)\n-        self.assertEqual(self.utils.pretty_title_or_id(results[0], \'Marker\'),\n-                         \'Marker\')\n-\n     def test_pretty_title_or_id_on_catalog_brain_no_title(self):\n         cat = self.portal.portal_catalog\n         self.setRoles([\'Manager\', \'Member\'])\ndiff --git a/Products/CMFPlone/utils.py b/Products/CMFPlone/utils.py\nindex 87a3df71b3..e94f7446ea 100644\n--- a/Products/CMFPlone/utils.py\n+++ b/Products/CMFPlone/utils.py\n@@ -140,31 +140,6 @@ def createSiteMap(context, request, sitemap=False):\n     return view.siteMap()\n \n \n-def isIDAutoGenerated(context, id):\n-    # In 2.1 non-autogenerated is the common case, caught exceptions are\n-    # expensive, so let\'s make a cheap check first\n-    if id.count(\'.\') < 2:\n-        return False\n-\n-    pt = getToolByName(context, \'portal_types\')\n-    portaltypes = pt.listContentTypes()\n-    portaltypes.extend([t.lower() for t in portaltypes])\n-\n-    try:\n-        parts = id.split(\'.\')\n-        random_number = parts.pop()\n-        date_created = parts.pop()\n-        obj_type = \'.\'.join(parts)\n-        type = \' \'.join(obj_type.split(\'_\'))\n-        # New autogenerated ids may have a lower case portal type\n-        if ((type in portaltypes or obj_type in portaltypes) and\n-                DateTime(date_created) and float(random_number)):\n-            return True\n-    except (ValueError, AttributeError, IndexError, DateTimeError):\n-        pass\n-\n-    return False\n-\n \n def isExpired(content):\n     """ Find out if the object is expired (copied from skin script) """\n@@ -217,7 +192,7 @@ def pretty_title_or_id(context, obj, empty_value=_marker):\n     item_id = getattr(obj, \'getId\', None)\n     if safe_callable(item_id):\n         item_id = item_id()\n-    if item_id and not isIDAutoGenerated(context, item_id):\n+    if item_id:\n         return item_id\n     if empty_value is _marker:\n         empty_value = getEmptyTitle(context)\ndiff --git a/news/3487.breaking b/news/3487.breaking\nnew file mode 100644\nindex 0000000000..d0f16829e5\n--- /dev/null\n+++ b/news/3487.breaking\n@@ -0,0 +1,3 @@\n+Remove Archtypes specific `isIDAutoGenerated` helper.\n+This was dead code not used anywhere in Plone 6.\n+[jensens]\n'

