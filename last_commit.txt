Repository: plone.app.contentrules


Branch: refs/heads/master
Date: 2019-09-07T16:24:03+02:00
Author: Norbert @ infoCatch (mtrebron) <norbert@infocatch.com>
Commit: https://github.com/plone/plone.app.contentrules/commit/d2bc7b82f41b9a4eeee8f388977324f74c8853bc

Update fileextension.py

Files changed:
M plone/app/contentrules/conditions/fileextension.py

b"diff --git a/plone/app/contentrules/conditions/fileextension.py b/plone/app/contentrules/conditions/fileextension.py\nindex 20f99c8..a15b7e6 100644\n--- a/plone/app/contentrules/conditions/fileextension.py\n+++ b/plone/app/contentrules/conditions/fileextension.py\n@@ -11,8 +11,7 @@\n from zope.component import adapter\n from zope.interface import implementer\n from zope.interface import Interface\n-\n-\n+from plone.app.contenttypes.interfaces import IFile\n try:\n     from Products.ATContentTypes.interfaces import IFileContent\n except ImportError:\n@@ -65,17 +64,21 @@ def __init__(self, context, element, event):\n \n     def __call__(self):\n         obj = self.event.object\n-        if IFileContent is None:\n-            return False\n-        if not IFileContent.providedBy(obj):\n-            return False\n \n-        base_unit = obj.getFile()\n-        get_filename = getattr(base_unit, 'getFilename', None)\n-        if not get_filename:\n+        if IFile.providedBy(obj):\n+            base_unit = getattr(obj, 'file', None)\n+            name = getattr(base_unit, 'filename', None)\n+        elif IFileContent is None:\n+            return False\n+        elif not IFileContent.providedBy(obj):\n             return False\n+        else:\n+            base_unit = obj.getFile()\n+            get_filename = getattr(base_unit, 'getFilename', None)\n+            if not get_filename:\n+                return False\n+            name = get_filename()\n \n-        name = get_filename()\n         extension = name[name.rfind('.') + 1:]\n         return extension == self.element.file_extension\n \n"

Repository: plone.app.contentrules


Branch: refs/heads/master
Date: 2019-09-07T16:29:19+02:00
Author: Norbert @ infoCatch (mtrebron) <norbert@infocatch.com>
Commit: https://github.com/plone/plone.app.contentrules/commit/a22c4e8477354cd134c08532ae1a457097d311f6

Update CHANGES.rst

Files changed:
M CHANGES.rst

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 2465191..5959c02 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -20,7 +20,9 @@ New features:\n \n Bug fixes:\n \n-\n+- Fix file extension condition. \n+  [mtrebron] (#48)\n+  \n - Fix default value for a msgid [erral] (#42)\n \n \n'

Repository: plone.app.contentrules


Branch: refs/heads/master
Date: 2019-09-09T10:00:06+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.contentrules/commit/421540977c45a10eb81e848f7542a6adec13fa4b

Merge pull request #49 from mtrebron/mtrebron-dexterity-fileextension

Mtrebron dexterity fileextension

Files changed:
M CHANGES.rst
M plone/app/contentrules/conditions/fileextension.py

b"diff --git a/CHANGES.rst b/CHANGES.rst\nindex 2465191..5959c02 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -20,7 +20,9 @@ New features:\n \n Bug fixes:\n \n-\n+- Fix file extension condition. \n+  [mtrebron] (#48)\n+  \n - Fix default value for a msgid [erral] (#42)\n \n \ndiff --git a/plone/app/contentrules/conditions/fileextension.py b/plone/app/contentrules/conditions/fileextension.py\nindex 20f99c8..a15b7e6 100644\n--- a/plone/app/contentrules/conditions/fileextension.py\n+++ b/plone/app/contentrules/conditions/fileextension.py\n@@ -11,8 +11,7 @@\n from zope.component import adapter\n from zope.interface import implementer\n from zope.interface import Interface\n-\n-\n+from plone.app.contenttypes.interfaces import IFile\n try:\n     from Products.ATContentTypes.interfaces import IFileContent\n except ImportError:\n@@ -65,17 +64,21 @@ def __init__(self, context, element, event):\n \n     def __call__(self):\n         obj = self.event.object\n-        if IFileContent is None:\n-            return False\n-        if not IFileContent.providedBy(obj):\n-            return False\n \n-        base_unit = obj.getFile()\n-        get_filename = getattr(base_unit, 'getFilename', None)\n-        if not get_filename:\n+        if IFile.providedBy(obj):\n+            base_unit = getattr(obj, 'file', None)\n+            name = getattr(base_unit, 'filename', None)\n+        elif IFileContent is None:\n+            return False\n+        elif not IFileContent.providedBy(obj):\n             return False\n+        else:\n+            base_unit = obj.getFile()\n+            get_filename = getattr(base_unit, 'getFilename', None)\n+            if not get_filename:\n+                return False\n+            name = get_filename()\n \n-        name = get_filename()\n         extension = name[name.rfind('.') + 1:]\n         return extension == self.element.file_extension\n \n"

