Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2017-03-20T11:53:57+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.z3cform/commit/e9ed9b8b08adebc8cff85e7d6bf2386ffb99d6a7

Removed `object` and `objectsubform`.

z3c.form 3.3 removed the underlying code.

See https://github.com/zopefoundation/z3c.form/pull/38 for upstream changes.

Files changed:
M CHANGES.rst
M plone/app/z3cform/configure.zcml
D plone/app/z3cform/object.py
D plone/app/z3cform/objectsubform.py
D plone/app/z3cform/tests/test_objectsubform.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 633acb2..82e26e4 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -6,7 +6,11 @@ Changelog
 
 Breaking changes:
 
-- *add item here*
+- Removed ``plone.app.z3cform.object`` and
+  ``plone.app.z3cform.objectsubform`` because z3c.form 3.3 removed the
+  underlying code.
+  See https://github.com/zopefoundation/z3c.form/pull/38 for upstream changes.
+  [maurits]
 
 New features:
 
diff --git a/plone/app/z3cform/configure.zcml b/plone/app/z3cform/configure.zcml
index 3d8f096..1849e0b 100644
--- a/plone/app/z3cform/configure.zcml
+++ b/plone/app/z3cform/configure.zcml
@@ -125,16 +125,6 @@
       permission="zope.Public"
       />
 
-  <adapter
-      factory=".object.SubformAdapter"
-      for="zope.interface.Interface
-           plone.app.z3cform.interfaces.IPloneFormLayer
-           zope.interface.Interface
-           zope.interface.Interface
-           z3c.form.interfaces.IObjectWidget
-           zope.interface.Interface
-           zope.interface.Interface" />
-
   <!-- Use a custom actions manager that knows how to do CSRF token authentication. -->
   <adapter factory=".csrf.AuthenticatedButtonActions" />
 
diff --git a/plone/app/z3cform/object.py b/plone/app/z3cform/object.py
deleted file mode 100644
index efadecd..0000000
--- a/plone/app/z3cform/object.py
+++ /dev/null
@@ -1,8 +0,0 @@
-# -*- coding: utf-8 -*-
-from zope.deprecation import moved
-
-
-moved(
-    'plone.app.z3cform.objectsubform',
-    'Version 3.0, because "object" in a builtin'
-)
diff --git a/plone/app/z3cform/objectsubform.py b/plone/app/z3cform/objectsubform.py
deleted file mode 100644
index 99ec17a..0000000
--- a/plone/app/z3cform/objectsubform.py
+++ /dev/null
@@ -1,20 +0,0 @@
-# -*- coding: utf-8 -*-
-from plone.app.z3cform.utils import closest_content
-from z3c.form.object import ObjectSubForm as BaseObjectSubForm
-from z3c.form.object import SubformAdapter as BaseSubformAdapter
-
-
-class ObjectSubForm(BaseObjectSubForm):
-
-    def get_closest_content(self):
-        """Return the closest persistent context to this form.
-        The right context of this form is the object created by:
-        z3c.form.object.registerFactoryAdapter
-        """
-        return closest_content(self.context)
-
-
-class SubformAdapter(BaseSubformAdapter):
-    """Subform factory adapter used to override the subform factory
-    """
-    factory = ObjectSubForm
diff --git a/plone/app/z3cform/tests/test_objectsubform.py b/plone/app/z3cform/tests/test_objectsubform.py
deleted file mode 100644
index dcfa049..0000000
--- a/plone/app/z3cform/tests/test_objectsubform.py
+++ /dev/null
@@ -1,143 +0,0 @@
-# -*- coding: utf-8 -*-
-from plone.app.testing import setRoles
-from plone.app.testing import TEST_USER_ID
-from plone.app.z3cform.interfaces import IPloneFormLayer
-from plone.app.z3cform.tests.layer import PAZ3CForm_INTEGRATION_TESTING
-from plone.app.z3cform.utils import closest_content
-from z3c.form import field
-from z3c.form import form
-from z3c.form.object import registerFactoryAdapter
-from zope import publisher
-from zope import schema
-from zope.globalrequest import setRequest
-from zope.interface import implementer
-from zope.interface import Interface
-
-import unittest
-
-
-class ISubObject(Interface):
-
-    title = schema.TextLine(
-        title=u'Subobject Title'
-    )
-
-
-@implementer(ISubObject)
-class SubObject(object):
-
-    title = schema.fieldproperty.FieldProperty(ISubObject['title'])
-
-    __name__ = ''
-    __parent__ = None
-
-    def getId(self):
-        return self.__name__ or ''
-
-    def __repr__(self):
-        return '<SubObject title=\'{0:s}\'>'.format(self.title)
-
-
-registerFactoryAdapter(ISubObject, SubObject)
-
-
-class IComplexForm(Interface):
-
-    object_field = schema.List(
-        title=u'Object Field',
-        required=False,
-        value_type=schema.Object(
-            title=u'object',
-            schema=ISubObject
-        )
-    )
-
-
-class ComplexForm(form.Form):
-    fields = field.Fields(IComplexForm)
-    label = u'Complex form'
-    ignoreContext = True
-
-
-@implementer(IPloneFormLayer)
-class TestRequest(publisher.browser.TestRequest):
-    pass
-
-
-class TestObjectSubForm(unittest.TestCase):
-    layer = PAZ3CForm_INTEGRATION_TESTING
-    counter = 0
-
-    def setUp(self):
-        self.portal = self.layer['portal']
-        self.request = TestRequest()
-        setRequest(self.request)
-        setRoles(self.portal, TEST_USER_ID, ['Manager'])
-
-    def _create_folder(self, fid):
-        self.portal.invokeFactory('Folder', fid)
-        return self.portal[fid]
-
-    def test_closest_content(self):
-        """Test the closest content utility directly
-        """
-        # without any information the closest content is Plone Site
-        self.assertEqual(self.portal, closest_content())
-
-        # we can pass a parameter to closest_content that will be
-        # used to find a content object
-        folder = self._create_folder('folder-1')
-        self.assertEqual(folder, closest_content(folder))
-
-    def test_multiwidget_subobjects(self):
-        """Check the closest content of a MultiWidget subform
-        """
-
-        _form = ComplexForm(self.portal, self.request)
-        _form.update()
-
-        multi_wdgt = _form.widgets['object_field']
-        multi_wdgt.appendAddingWidget()
-
-        obj_wdgt = multi_wdgt.widgets[0]
-        subform = obj_wdgt.subform
-
-        # the context of the subform is None or a SubObject instance
-        self.assertIsNone(subform.context, None)
-
-        # now it's possbile to get a valid 'context'
-        # by get_closest_content method
-        self.assertEqual(
-            subform.get_closest_content(),
-            self.portal
-        )
-
-        # by changing the context of the main form the closest content
-        # of its multiwidget subforms is the main form context itself
-        folder = self._create_folder('folder-2')
-
-        # XXX: in a real case the PUBLISHED attribute should be set by
-        # ZPublisher
-        self.request.PUBLISHED = folder
-
-        _form = ComplexForm(folder, self.request)
-        _form.update()
-
-        multi_wdgt = _form.widgets['object_field']
-        multi_wdgt.appendAddingWidget()
-
-        obj_wdgt = multi_wdgt.widgets[0]
-        subform = obj_wdgt.subform
-
-        # now the closest content is the folder
-        self.assertEqual(
-            subform.get_closest_content(),
-            folder
-        )
-
-
-def test_suite():
-
-    return unittest.TestSuite([
-        unittest.makeSuite(TestObjectSubForm),
-    ])


Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2017-03-20T11:54:30+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.z3cform/commit/1cc5945301c52d249a51763e477bebf4d6ac2321

reflect breaking change in version number

Files changed:
M CHANGES.rst
M setup.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 82e26e4..8aef0b7 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -2,6 +2,7 @@ Changelog
 =========
 
 2.3.0 (unreleased)
+3.0.0 (unreleased)
 ------------------
 
 Breaking changes:
diff --git a/setup.py b/setup.py
index c5ef677..67d0cf2 100644
--- a/setup.py
+++ b/setup.py
@@ -8,8 +8,7 @@ def read(*rnames):
     return open(os.path.join(os.path.dirname(__file__), *rnames)).read()
 
 
-version = '2.3.0.dev0'
-
+version = '3.0.0.dev0'
 
 long_description = (
     read('README.rst') +


Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2017-03-20T15:40:34+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.z3cform/commit/b8147814c10178db057104f3f272fcbdfee804c1

Merge pull request #52 from plone/remove-object-subform

Removed `object` and `objectsubform`.

Files changed:
M CHANGES.rst
M plone/app/z3cform/configure.zcml
M setup.py
D plone/app/z3cform/object.py
D plone/app/z3cform/objectsubform.py
D plone/app/z3cform/tests/test_objectsubform.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 633acb2..8aef0b7 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -2,11 +2,16 @@ Changelog
 =========
 
 2.3.0 (unreleased)
+3.0.0 (unreleased)
 ------------------
 
 Breaking changes:
 
-- *add item here*
+- Removed ``plone.app.z3cform.object`` and
+  ``plone.app.z3cform.objectsubform`` because z3c.form 3.3 removed the
+  underlying code.
+  See https://github.com/zopefoundation/z3c.form/pull/38 for upstream changes.
+  [maurits]
 
 New features:
 
diff --git a/plone/app/z3cform/configure.zcml b/plone/app/z3cform/configure.zcml
index 3d8f096..1849e0b 100644
--- a/plone/app/z3cform/configure.zcml
+++ b/plone/app/z3cform/configure.zcml
@@ -125,16 +125,6 @@
       permission="zope.Public"
       />
 
-  <adapter
-      factory=".object.SubformAdapter"
-      for="zope.interface.Interface
-           plone.app.z3cform.interfaces.IPloneFormLayer
-           zope.interface.Interface
-           zope.interface.Interface
-           z3c.form.interfaces.IObjectWidget
-           zope.interface.Interface
-           zope.interface.Interface" />
-
   <!-- Use a custom actions manager that knows how to do CSRF token authentication. -->
   <adapter factory=".csrf.AuthenticatedButtonActions" />
 
diff --git a/plone/app/z3cform/object.py b/plone/app/z3cform/object.py
deleted file mode 100644
index efadecd..0000000
--- a/plone/app/z3cform/object.py
+++ /dev/null
@@ -1,8 +0,0 @@
-# -*- coding: utf-8 -*-
-from zope.deprecation import moved
-
-
-moved(
-    'plone.app.z3cform.objectsubform',
-    'Version 3.0, because "object" in a builtin'
-)
diff --git a/plone/app/z3cform/objectsubform.py b/plone/app/z3cform/objectsubform.py
deleted file mode 100644
index 99ec17a..0000000
--- a/plone/app/z3cform/objectsubform.py
+++ /dev/null
@@ -1,20 +0,0 @@
-# -*- coding: utf-8 -*-
-from plone.app.z3cform.utils import closest_content
-from z3c.form.object import ObjectSubForm as BaseObjectSubForm
-from z3c.form.object import SubformAdapter as BaseSubformAdapter
-
-
-class ObjectSubForm(BaseObjectSubForm):
-
-    def get_closest_content(self):
-        """Return the closest persistent context to this form.
-        The right context of this form is the object created by:
-        z3c.form.object.registerFactoryAdapter
-        """
-        return closest_content(self.context)
-
-
-class SubformAdapter(BaseSubformAdapter):
-    """Subform factory adapter used to override the subform factory
-    """
-    factory = ObjectSubForm
diff --git a/plone/app/z3cform/tests/test_objectsubform.py b/plone/app/z3cform/tests/test_objectsubform.py
deleted file mode 100644
index dcfa049..0000000
--- a/plone/app/z3cform/tests/test_objectsubform.py
+++ /dev/null
@@ -1,143 +0,0 @@
-# -*- coding: utf-8 -*-
-from plone.app.testing import setRoles
-from plone.app.testing import TEST_USER_ID
-from plone.app.z3cform.interfaces import IPloneFormLayer
-from plone.app.z3cform.tests.layer import PAZ3CForm_INTEGRATION_TESTING
-from plone.app.z3cform.utils import closest_content
-from z3c.form import field
-from z3c.form import form
-from z3c.form.object import registerFactoryAdapter
-from zope import publisher
-from zope import schema
-from zope.globalrequest import setRequest
-from zope.interface import implementer
-from zope.interface import Interface
-
-import unittest
-
-
-class ISubObject(Interface):
-
-    title = schema.TextLine(
-        title=u'Subobject Title'
-    )
-
-
-@implementer(ISubObject)
-class SubObject(object):
-
-    title = schema.fieldproperty.FieldProperty(ISubObject['title'])
-
-    __name__ = ''
-    __parent__ = None
-
-    def getId(self):
-        return self.__name__ or ''
-
-    def __repr__(self):
-        return '<SubObject title=\'{0:s}\'>'.format(self.title)
-
-
-registerFactoryAdapter(ISubObject, SubObject)
-
-
-class IComplexForm(Interface):
-
-    object_field = schema.List(
-        title=u'Object Field',
-        required=False,
-        value_type=schema.Object(
-            title=u'object',
-            schema=ISubObject
-        )
-    )
-
-
-class ComplexForm(form.Form):
-    fields = field.Fields(IComplexForm)
-    label = u'Complex form'
-    ignoreContext = True
-
-
-@implementer(IPloneFormLayer)
-class TestRequest(publisher.browser.TestRequest):
-    pass
-
-
-class TestObjectSubForm(unittest.TestCase):
-    layer = PAZ3CForm_INTEGRATION_TESTING
-    counter = 0
-
-    def setUp(self):
-        self.portal = self.layer['portal']
-        self.request = TestRequest()
-        setRequest(self.request)
-        setRoles(self.portal, TEST_USER_ID, ['Manager'])
-
-    def _create_folder(self, fid):
-        self.portal.invokeFactory('Folder', fid)
-        return self.portal[fid]
-
-    def test_closest_content(self):
-        """Test the closest content utility directly
-        """
-        # without any information the closest content is Plone Site
-        self.assertEqual(self.portal, closest_content())
-
-        # we can pass a parameter to closest_content that will be
-        # used to find a content object
-        folder = self._create_folder('folder-1')
-        self.assertEqual(folder, closest_content(folder))
-
-    def test_multiwidget_subobjects(self):
-        """Check the closest content of a MultiWidget subform
-        """
-
-        _form = ComplexForm(self.portal, self.request)
-        _form.update()
-
-        multi_wdgt = _form.widgets['object_field']
-        multi_wdgt.appendAddingWidget()
-
-        obj_wdgt = multi_wdgt.widgets[0]
-        subform = obj_wdgt.subform
-
-        # the context of the subform is None or a SubObject instance
-        self.assertIsNone(subform.context, None)
-
-        # now it's possbile to get a valid 'context'
-        # by get_closest_content method
-        self.assertEqual(
-            subform.get_closest_content(),
-            self.portal
-        )
-
-        # by changing the context of the main form the closest content
-        # of its multiwidget subforms is the main form context itself
-        folder = self._create_folder('folder-2')
-
-        # XXX: in a real case the PUBLISHED attribute should be set by
-        # ZPublisher
-        self.request.PUBLISHED = folder
-
-        _form = ComplexForm(folder, self.request)
-        _form.update()
-
-        multi_wdgt = _form.widgets['object_field']
-        multi_wdgt.appendAddingWidget()
-
-        obj_wdgt = multi_wdgt.widgets[0]
-        subform = obj_wdgt.subform
-
-        # now the closest content is the folder
-        self.assertEqual(
-            subform.get_closest_content(),
-            folder
-        )
-
-
-def test_suite():
-
-    return unittest.TestSuite([
-        unittest.makeSuite(TestObjectSubForm),
-    ])
diff --git a/setup.py b/setup.py
index c5ef677..67d0cf2 100644
--- a/setup.py
+++ b/setup.py
@@ -8,8 +8,7 @@ def read(*rnames):
     return open(os.path.join(os.path.dirname(__file__), *rnames)).read()
 
 
-version = '2.3.0.dev0'
-
+version = '3.0.0.dev0'
 
 long_description = (
     read('README.rst') +


