Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-07-04T12:49:23+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/a81c3c30f1c3151230d856edc36614284bd1c010

fix more deprecation warnings

Files changed:
A news/3573.bugfix
M Products/CMFPlone/CatalogTool.py
M Products/CMFPlone/browser/admin.py
M Products/CMFPlone/browser/search.py
M Products/CMFPlone/configure.zcml
M Products/CMFPlone/controlpanel/browser/redirects.py
M Products/CMFPlone/utils.py

b'diff --git a/Products/CMFPlone/CatalogTool.py b/Products/CMFPlone/CatalogTool.py\nindex be18058b5f..54a24caf45 100644\n--- a/Products/CMFPlone/CatalogTool.py\n+++ b/Products/CMFPlone/CatalogTool.py\n@@ -1,33 +1,33 @@\n from AccessControl import ClassSecurityInfo\n+from AccessControl.class_init import InitializeClass\n from AccessControl.PermissionRole import rolesForPermissionOn\n from AccessControl.Permissions import manage_zcatalog_entries as ManageZCatalogEntries  # noqa\n from AccessControl.Permissions import search_zcatalog as SearchZCatalog\n from Acquisition import aq_base\n from Acquisition import aq_inner\n from Acquisition import aq_parent\n-from AccessControl.class_init import InitializeClass\n from App.special_dtml import DTMLFile\n from BTrees.Length import Length\n from DateTime import DateTime\n from OFS.interfaces import IOrderedContainer\n+from plone.app.discussion.interfaces import DISCUSSION_ANNOTATION_KEY\n+from plone.base.interfaces import INonStructuralFolder\n+from plone.base.interfaces import IPloneCatalogTool\n+from plone.base.utils import base_hasattr\n+from plone.base.utils import human_readable_size\n+from plone.base.utils import safe_callable\n+from plone.base.utils import safe_text\n from plone.i18n.normalizer.base import mapUnicode\n from plone.indexer import indexer\n from plone.indexer.interfaces import IIndexableObject\n-from Products.CMFCore.CatalogTool import CatalogTool as BaseTool\n from Products.CMFCore.CatalogTool import _mergedLocalRoles\n+from Products.CMFCore.CatalogTool import CatalogTool as BaseTool\n from Products.CMFCore.indexing import processQueue\n from Products.CMFCore.permissions import AccessInactivePortalContent\n from Products.CMFCore.utils import _checkPermission\n from Products.CMFCore.utils import _getAuthenticatedUser\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone import DISCUSSION_ANNOTATION_KEY\n-from plone.base.interfaces import INonStructuralFolder\n-from plone.base.interfaces import IPloneCatalogTool\n from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n-from Products.CMFPlone.utils import base_hasattr\n-from Products.CMFPlone.utils import human_readable_size\n-from Products.CMFPlone.utils import safe_callable\n-from plone.base.utils import safe_text\n from Products.ZCatalog.ZCatalog import ZCatalog\n from time import process_time\n from zExceptions import Unauthorized\ndiff --git a/Products/CMFPlone/browser/admin.py b/Products/CMFPlone/browser/admin.py\nindex 972a6c4789..e7728186d3 100644\n--- a/Products/CMFPlone/browser/admin.py\n+++ b/Products/CMFPlone/browser/admin.py\n@@ -1,22 +1,21 @@\n from AccessControl import getSecurityManager\n from AccessControl.Permissions import view as View\n+from collections import OrderedDict\n from OFS.interfaces import IApplication\n+from plone.base.interfaces import INonInstallable\n+from plone.base.interfaces import IPloneSiteRoot\n+from plone.base.utils import get_installer\n+from plone.i18n.locales.interfaces import IContentLanguageAvailability\n+from plone.keyring.interfaces import IKeyManager\n+from plone.protect.authenticator import check as checkCSRF\n+from plone.protect.interfaces import IDisableCSRFProtection\n from Products.CMFCore.permissions import ManagePortal\n from Products.CMFPlone.factory import _DEFAULT_PROFILE\n from Products.CMFPlone.factory import addPloneSite\n-from plone.base.interfaces import INonInstallable\n-from plone.base.interfaces import IPloneSiteRoot\n-from Products.CMFPlone.utils import get_installer\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.GenericSetup import BASE, EXTENSION\n from Products.GenericSetup import profile_registry\n from Products.GenericSetup.upgrade import normalize_version\n-from ZPublisher.BaseRequest import DefaultPublishTraverse\n-from collections import OrderedDict\n-from plone.i18n.locales.interfaces import IContentLanguageAvailability\n-from plone.keyring.interfaces import IKeyManager\n-from plone.protect.authenticator import check as checkCSRF\n-from plone.protect.interfaces import IDisableCSRFProtection\n from urllib import parse\n from ZODB.broken import Broken\n from zope.component import adapts\n@@ -26,11 +25,12 @@\n from zope.component import queryUtility\n from zope.i18n.interfaces import IUserPreferredLanguages\n from zope.i18n.locales import locales, LoadLocaleError\n-from zope.interface import Interface\n from zope.interface import alsoProvides\n+from zope.interface import Interface\n from zope.publisher.browser import BrowserView\n from zope.publisher.interfaces import IRequest\n from zope.schema.interfaces import IVocabularyFactory\n+from ZPublisher.BaseRequest import DefaultPublishTraverse\n \n import logging\n import pkg_resources\ndiff --git a/Products/CMFPlone/browser/search.py b/Products/CMFPlone/browser/search.py\nindex 0b98159dc9..08709607c8 100644\n--- a/Products/CMFPlone/browser/search.py\n+++ b/Products/CMFPlone/browser/search.py\n@@ -1,11 +1,11 @@\n from DateTime import DateTime\n from plone.app.contentlisting.interfaces import IContentListing\n from plone.app.layout.navigation.interfaces import INavigationRoot\n+from plone.base.batch import Batch\n+from plone.base.interfaces import ISearchSchema\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.browser.navtree import getNavigationRoot\n-from plone.base.interfaces import ISearchSchema\n-from Products.CMFPlone.PloneBatch import Batch\n from Products.ZCTextIndex.ParseTree import ParseError\n from zope.cachedescriptors.property import Lazy as lazy_property\n from zope.component import getMultiAdapter\ndiff --git a/Products/CMFPlone/configure.zcml b/Products/CMFPlone/configure.zcml\nindex 80804657d8..0433f5a7e7 100644\n--- a/Products/CMFPlone/configure.zcml\n+++ b/Products/CMFPlone/configure.zcml\n@@ -90,11 +90,11 @@\n       />\n \n   <class class="Products.PluggableAuthService.PluggableAuthService.PluggableAuthService">\n-    <implements interface=".interfaces.IHideFromBreadcrumbs" />\n+    <implements interface="plone.base.interfaces.IHideFromBreadcrumbs" />\n   </class>\n \n   <class class="Products.PluggableAuthService.plugins.BasePlugin.BasePlugin">\n-    <implements interface=".interfaces.IHideFromBreadcrumbs" />\n+    <implements interface="plone.base.interfaces.IHideFromBreadcrumbs" />\n   </class>\n \n   <utility factory=".factory.NonInstallable"\ndiff --git a/Products/CMFPlone/controlpanel/browser/redirects.py b/Products/CMFPlone/controlpanel/browser/redirects.py\nindex 4e84068755..e1488abf06 100644\n--- a/Products/CMFPlone/controlpanel/browser/redirects.py\n+++ b/Products/CMFPlone/controlpanel/browser/redirects.py\n@@ -1,15 +1,15 @@\n+from csv import writer\n from DateTime import DateTime\n from DateTime.interfaces import DateTimeError\n-from csv import writer\n+from io import StringIO\n from plone.app.redirector.interfaces import IRedirectionStorage\n+from plone.base.batch import Batch\n+from plone.base.utils import safe_text\n from plone.batching.browser import PloneBatchView\n from plone.memoize.view import memoize\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.PloneBatch import Batch\n-from plone.base.utils import safe_text\n from Products.Five.browser import BrowserView\n from Products.statusmessages.interfaces import IStatusMessage\n-from io import StringIO\n from urllib.parse import urlparse\n from zope.component import getMultiAdapter\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/utils.py b/Products/CMFPlone/utils.py\nindex c92cae5786..7f6c0a1af6 100644\n--- a/Products/CMFPlone/utils.py\n+++ b/Products/CMFPlone/utils.py\n@@ -347,7 +347,7 @@ def versionTupleFromString(v_str):\n     else:\n         groups = list(match.groups())\n         for i in (0, 1, 2, 4):\n-            groups[i] = base_utils.safeToInt(groups[i])\n+            groups[i] = base_utils.safe_int(groups[i])\n         if groups[3] is None:\n             groups[3] = \'final\'\n         elif groups[3] in rl_abbr.keys():\ndiff --git a/news/3573.bugfix b/news/3573.bugfix\nnew file mode 100644\nindex 0000000000..d56b8dad4a\n--- /dev/null\n+++ b/news/3573.bugfix\n@@ -0,0 +1,2 @@\n+Fix more plone.base related deprecation warnings.\n+[jensens]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-07-04T14:03:47+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/46755e52471090cdb90c60d287606dcf9918ffda

Merge branch 'master' into fix-deprecation-warnings

Files changed:
A news/3560.feature
M Products/CMFPlone/controlpanel/browser/resourceregistry.pt

b'diff --git a/Products/CMFPlone/controlpanel/browser/resourceregistry.pt b/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\nindex e28c4da3b8..52ceadb870 100644\n--- a/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\n+++ b/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\n@@ -22,6 +22,15 @@\n   </header>\n \n    <div id="content-core">\n+    <div class="portalMessage statusmessage statusmessage-error alert alert-danger js-errors">\n+        <tal:icon tal:replace="structure python:icons.tag(\'plone-statusmessage-error\', tag_alt=\'\', tag_class=\'statusmessage-icon mb-1 me-2\')" />\n+        <strong i18n:translate="">Javascript disabled or error(s) occurred</strong>\n+        <span class="content"\n+              i18n:translate="">\n+            If this message persists, a Javascript Error occurred within the\n+            resources below.\n+        </span>\n+    </div>\n     <div tal:condition="python:view.global_debug_mode()"\n          class="portalMessage statusmessage statusmessage-info alert alert-info"\n          role="alert">\n@@ -64,8 +73,8 @@\n       </div>\n     </form>\n     <div class="accordion" id="accordionRR" tal:define="dummy python:view.process_form()">\n-      <div class="accordion-item "\n-           tal:repeat="bundle python:view.bundles_data">\n+      <tal:block tal:repeat="bundle python:view.bundles_data">\n+      <div class="accordion-item ${python:\'active\' if bundle[\'name\'] == request.form.get(\'name\', None) else \'\'}">\n            <h2 class="accordion-header" id="heading-${python:bundle[\'safe_name\']}">\n             <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-${python:bundle[\'safe_name\']}" aria-expanded="false" aria-controls="collapse-${python:bundle[\'safe_name\']}">\n               <span tal:condition="python:bundle[\'name\'] and bundle[\'enabled\']" i18n:translate="" class="me-2"><tal:icon tal:replace="structure python:icons.tag(\'file-check\', tag_alt=\'Enabled bundle\')" /></span>\n@@ -75,7 +84,7 @@\n               <strong tal:condition="python:not bundle[\'name\']" i18n:translate="">Add new bundle</strong>\n             </button>\n           </h2>\n-          <div id="collapse-${python:bundle[\'safe_name\']}" class="accordion-collapse ${python:\'\' if bundle[\'name\'] == request.form.get(\'name\', None) else \'collapse\'}" aria-labelledby="heading${python:bundle[\'safe_name\']}" data-bs-parent="#accordionRR">\n+          <div id="collapse-${python:bundle[\'safe_name\']}" class="accordion-collapse collapse show" aria-labelledby="heading${python:bundle[\'safe_name\']}" data-bs-parent="#accordionRR">\n             <div class="accordion-body">\n               <form method="post" action="${python:context.absolute_url()}/@@resourceregistry-controlpanel">\n                 <input type="hidden" name="original_name" value="${python:bundle[\'name\']}" />\n@@ -126,6 +135,7 @@\n           </div>\n         </div>\n       </div>\n+      </tal:block>\n     </div>\n     <div class="mt-3">\n       <h2 i18n:translate="">Additional Resources</h2>\n@@ -145,6 +155,14 @@\n       </dl>\n     </div>\n    </div>\n+   <script>\n+     /* collapse accordion via script here, so that it stays open when JS is disabled */\n+     window.addEventListener(\'DOMContentLoaded\', (event) => {\n+      document.querySelector(".alert.js-errors").style.display = "none";\n+      document.querySelectorAll(".accordion-item:not(.active) .accordion-button").forEach(el => el.classList.add("collapsed"));\n+      document.querySelectorAll(".accordion-item:not(.active) .accordion-collapse").forEach(el => el.classList.remove("show"));\n+    });\n+   </script>\n </metal:main>\n \n </body>\ndiff --git a/news/3560.feature b/news/3560.feature\nnew file mode 100644\nindex 0000000000..4bdfe62cfb\n--- /dev/null\n+++ b/news/3560.feature\n@@ -0,0 +1,2 @@\n+Initially open accordions in resource registry. Hide via JS when no errors occur.\n+[petschki]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-07-05T11:52:30+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/dc68e1fae01472733c6e89337a5a3c34ac569fec

Merge branch 'master' into fix-deprecation-warnings

Files changed:
A news/3572.bugfix
M setup.py

b"diff --git a/news/3572.bugfix b/news/3572.bugfix\nnew file mode 100644\nindex 0000000000..585a8f5e9a\n--- /dev/null\n+++ b/news/3572.bugfix\n@@ -0,0 +1,2 @@\n+Reduce dependencies in setup.py here, when already fulfilled in the packages where in use.\n+[jensens]\n\\ No newline at end of file\ndiff --git a/setup.py b/setup.py\nindex 07528c42cc..c58fbc34bc 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -34,15 +34,9 @@\n     include_package_data=True,\n     zip_safe=False,\n     install_requires=[\n-        'AccessControl >= 4.0',\n-        'Acquisition',\n         'borg.localrole',\n-        'DateTime',\n-        'ExtensionClass',\n         'five.customerize',\n-        'five.localsitemanager',\n         'lxml',\n-        'Pillow',\n         'plone.api >= 1.4.4',\n         'plone.app.content',\n         'plone.app.contentlisting',\n@@ -66,7 +60,6 @@\n         'plone.app.viewletmanager',\n         'plone.app.vocabularies',\n         'plone.app.workflow',\n-        'plone.batching',\n         'plone.base',\n         'plone.browserlayer >= 2.1.5',\n         'plone.contentrules',\n@@ -81,55 +74,33 @@\n         'plone.portlet.static',\n         'plone.portlets',\n         'plone.protect >= 3.0.0',\n-        'plone.registry',\n         'plone.resource',\n         'plone.schema',\n         'plone.session',\n         'plone.staticresources',\n-        'plone.subrequest',\n         'plone.theme',\n         'plonetheme.barceloneta',\n-        'Products.CMFCore',\n-        'Products.CMFDiffTool',\n-        'Products.CMFDynamicViewFTI',\n         'Products.CMFEditions',\n-        'Products.CMFUid',\n         'Products.DCWorkflow',\n         'Products.ExtendedPathIndex',\n-        'Products.GenericSetup >= 2.2.0',\n         'Products.isurlinportal',\n         'Products.MimetypesRegistry',\n         'Products.PlonePAS',\n-        'Products.PluggableAuthService',\n-        'Products.PluginRegistry',\n         'Products.PortalTransforms',\n         'Products.SiteErrorLog',\n         'Products.statusmessages',\n         'setuptools>=36.2',\n-        'transaction',\n         'plone.autoinclude',\n         'webresource>=1.1',\n-        'ZODB3',\n-        'Zope[wsgi] >= 4.0',\n+        'Zope[wsgi] >= 5.0',\n         'zope.app.locales >= 3.6.0',\n         'zope.cachedescriptors',\n-        'zope.component',\n-        'zope.container',\n         'zope.deferredimport',\n         'zope.deprecation',\n         'zope.dottedname',\n-        'zope.event',\n         'zope.i18n',\n         'zope.i18nmessageid',\n-        'zope.interface',\n-        'zope.location',\n-        'zope.pagetemplate',\n-        'zope.publisher',\n-        'zope.site',\n         'zope.structuredtext',\n-        'zope.tal',\n-        'zope.tales',\n-        'zope.traversing',\n     ],\n     extras_require={\n         'test': [\n"

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-07-07T00:39:12+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/bea7926f77ac3439da4fcfb580769c2cf8938bc4

Merge branch 'master' into fix-deprecation-warnings

Files changed:
A news/3574.bugfix
M Products/CMFPlone/controlpanel/browser/resourceregistry.py
M Products/CMFPlone/tests/testResourceRegistries.py

b'diff --git a/Products/CMFPlone/controlpanel/browser/resourceregistry.py b/Products/CMFPlone/controlpanel/browser/resourceregistry.py\nindex 5885e8dc46..7f754b993c 100644\n--- a/Products/CMFPlone/controlpanel/browser/resourceregistry.py\n+++ b/Products/CMFPlone/controlpanel/browser/resourceregistry.py\n@@ -67,13 +67,13 @@ def _add(self):\n         bundles = self._bundles\n         if name in bundles:\n             IStatusMessage(self.request).addStatusMessage(\n-                _("Record ${name} already exists.", name=name), "error"\n+                _("Record ${name} already exists.", mapping=dict(name=name)), "error"\n             )\n             return\n         record = bundles.add(name)\n         self._set_data_from_form(record)\n         IStatusMessage(self.request).addStatusMessage(\n-            _("Record ${name} created.", name=name), "info"\n+            _("Record ${name} created.", mapping=dict(name=name)), "info"\n         )\n \n     def _update(self):\n@@ -93,11 +93,13 @@ def _update(self):\n                 return\n             if new_name in bundles:\n                 IStatusMessage(self.request).addStatusMessage(\n-                    _("Record name ${new_name} already taken.", new_name=new_name), "error"\n+                    _("Record name ${new_name} already taken.", mapping=dict(new_name=new_name)), "error"\n                 )\n                 return\n             record = bundles[original_name]\n             del bundles[original_name]\n+            # update prefix\n+            record.__prefix__ = record.__prefix__.replace(original_name, new_name)\n             bundles[new_name] = record\n         else:\n             record = bundles[original_name]\n@@ -120,7 +122,7 @@ def _delete(self):\n         bundles = self._bundles\n         if name not in bundles:\n             IStatusMessage(self.request).addStatusMessage(\n-                _("Expected record ${name} missing.", name=name), "error"\n+                _("Expected record ${name} missing.", mapping=dict(name=name)), "error"\n             )\n             return\n         del bundles[name]\ndiff --git a/Products/CMFPlone/tests/testResourceRegistries.py b/Products/CMFPlone/tests/testResourceRegistries.py\nindex 4ad904ce0c..6049d5f2e1 100644\n--- a/Products/CMFPlone/tests/testResourceRegistries.py\n+++ b/Products/CMFPlone/tests/testResourceRegistries.py\n@@ -1,8 +1,11 @@\n from plone.app.testing import logout\n+from plone.app.testing import SITE_OWNER_NAME\n+from plone.app.testing import SITE_OWNER_PASSWORD\n+from plone.base.interfaces import IBundleRegistry\n from plone.registry import field as regfield\n from plone.registry import Record\n from plone.registry.interfaces import IRegistry\n-from plone.base.interfaces import IBundleRegistry\n+from plone.testing.zope import Browser\n from Products.CMFPlone.resources import add_bundle_on_request\n from Products.CMFPlone.resources import remove_bundle_on_request\n from Products.CMFPlone.resources.browser.resource import ScriptsView\n@@ -372,3 +375,52 @@ def test_scripts_anonymous(self):\n         # self.assertNotIn("http://test.foo/test.min.js", results)\n         self.assertNotIn("http://test2.foo/member.min.js", results)\n         self.assertIn("http://test3.foo/test.min.js", results)\n+\n+\n+class TestRRControlPanel(PloneTestCase.PloneTestCase):\n+\n+    def setUp(self):\n+        self.portal = self.layer[\'portal\']\n+        self.app = self.layer[\'app\']\n+        self.browser = Browser(self.app)\n+        self.browser.handleErrors = False\n+        self.browser.addHeader(\n+            \'Authorization\',\n+            f\'Basic {SITE_OWNER_NAME}:{SITE_OWNER_PASSWORD}\'\n+        )\n+        self.browser.open(self.portal.absolute_url() + "/@@resourceregistry-controlpanel")\n+\n+    def test_controlpanel(self):\n+        self.assertIn("<h1 class=\\"documentFirstHeading\\">Resource Registry</h1>", self.browser.contents)\n+        self.assertIn("++plone++static/bundle-plone/bundle.min.js", self.browser.contents)\n+\n+    def test_add_resource(self):\n+        # the last form is the add form\n+        add_form = self.browser.getForm(index=7)\n+        add_form.getControl(name="name").value = "my-resource"\n+        add_form.getControl(name="jscompilation").value = "++resource++my.resource.js"\n+        add_form.getControl(name="enabled").value = "checked"\n+        add_form.getControl("add").click()\n+\n+        self.assertIn(\n+            "<h2 class=\\"accordion-header\\" id=\\"heading-my-resource\\">",\n+            self.browser.contents,\n+        )\n+\n+    def test_update_resource(self):\n+        # try to set already existing name should fail\n+        form = self.browser.getForm(index=6)\n+        form.getControl(name="name").value = "plone"\n+        form.getControl("update").click()\n+\n+        self.assertIn("Record name plone already taken.", self.browser.contents)\n+\n+        # set new name\n+        form = self.browser.getForm(index=6)\n+        form.getControl(name="name").value = "new-resource-name"\n+        form.getControl("update").click()\n+\n+        self.assertIn(\n+             "<h2 class=\\"accordion-header\\" id=\\"heading-new-resource-name\\">",\n+            self.browser.contents,\n+        )\ndiff --git a/news/3574.bugfix b/news/3574.bugfix\nnew file mode 100644\nindex 0000000000..f5e29ecc77\n--- /dev/null\n+++ b/news/3574.bugfix\n@@ -0,0 +1,2 @@\n+Fix adding/renaming resources TTW.\n+[petschki]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-07-09T16:19:51+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/b3aebdb05e465ea29fb9a34ae8eb0ad6ec4bad44

Merge pull request #3573 from plone/fix-deprecation-warnings

fix more deprecation warnings

Files changed:
A news/3573.bugfix
M Products/CMFPlone/CatalogTool.py
M Products/CMFPlone/browser/admin.py
M Products/CMFPlone/browser/search.py
M Products/CMFPlone/configure.zcml
M Products/CMFPlone/controlpanel/browser/redirects.py
M Products/CMFPlone/utils.py

b'diff --git a/Products/CMFPlone/CatalogTool.py b/Products/CMFPlone/CatalogTool.py\nindex be18058b5f..54a24caf45 100644\n--- a/Products/CMFPlone/CatalogTool.py\n+++ b/Products/CMFPlone/CatalogTool.py\n@@ -1,33 +1,33 @@\n from AccessControl import ClassSecurityInfo\n+from AccessControl.class_init import InitializeClass\n from AccessControl.PermissionRole import rolesForPermissionOn\n from AccessControl.Permissions import manage_zcatalog_entries as ManageZCatalogEntries  # noqa\n from AccessControl.Permissions import search_zcatalog as SearchZCatalog\n from Acquisition import aq_base\n from Acquisition import aq_inner\n from Acquisition import aq_parent\n-from AccessControl.class_init import InitializeClass\n from App.special_dtml import DTMLFile\n from BTrees.Length import Length\n from DateTime import DateTime\n from OFS.interfaces import IOrderedContainer\n+from plone.app.discussion.interfaces import DISCUSSION_ANNOTATION_KEY\n+from plone.base.interfaces import INonStructuralFolder\n+from plone.base.interfaces import IPloneCatalogTool\n+from plone.base.utils import base_hasattr\n+from plone.base.utils import human_readable_size\n+from plone.base.utils import safe_callable\n+from plone.base.utils import safe_text\n from plone.i18n.normalizer.base import mapUnicode\n from plone.indexer import indexer\n from plone.indexer.interfaces import IIndexableObject\n-from Products.CMFCore.CatalogTool import CatalogTool as BaseTool\n from Products.CMFCore.CatalogTool import _mergedLocalRoles\n+from Products.CMFCore.CatalogTool import CatalogTool as BaseTool\n from Products.CMFCore.indexing import processQueue\n from Products.CMFCore.permissions import AccessInactivePortalContent\n from Products.CMFCore.utils import _checkPermission\n from Products.CMFCore.utils import _getAuthenticatedUser\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone import DISCUSSION_ANNOTATION_KEY\n-from plone.base.interfaces import INonStructuralFolder\n-from plone.base.interfaces import IPloneCatalogTool\n from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n-from Products.CMFPlone.utils import base_hasattr\n-from Products.CMFPlone.utils import human_readable_size\n-from Products.CMFPlone.utils import safe_callable\n-from plone.base.utils import safe_text\n from Products.ZCatalog.ZCatalog import ZCatalog\n from time import process_time\n from zExceptions import Unauthorized\ndiff --git a/Products/CMFPlone/browser/admin.py b/Products/CMFPlone/browser/admin.py\nindex 972a6c4789..e7728186d3 100644\n--- a/Products/CMFPlone/browser/admin.py\n+++ b/Products/CMFPlone/browser/admin.py\n@@ -1,22 +1,21 @@\n from AccessControl import getSecurityManager\n from AccessControl.Permissions import view as View\n+from collections import OrderedDict\n from OFS.interfaces import IApplication\n+from plone.base.interfaces import INonInstallable\n+from plone.base.interfaces import IPloneSiteRoot\n+from plone.base.utils import get_installer\n+from plone.i18n.locales.interfaces import IContentLanguageAvailability\n+from plone.keyring.interfaces import IKeyManager\n+from plone.protect.authenticator import check as checkCSRF\n+from plone.protect.interfaces import IDisableCSRFProtection\n from Products.CMFCore.permissions import ManagePortal\n from Products.CMFPlone.factory import _DEFAULT_PROFILE\n from Products.CMFPlone.factory import addPloneSite\n-from plone.base.interfaces import INonInstallable\n-from plone.base.interfaces import IPloneSiteRoot\n-from Products.CMFPlone.utils import get_installer\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.GenericSetup import BASE, EXTENSION\n from Products.GenericSetup import profile_registry\n from Products.GenericSetup.upgrade import normalize_version\n-from ZPublisher.BaseRequest import DefaultPublishTraverse\n-from collections import OrderedDict\n-from plone.i18n.locales.interfaces import IContentLanguageAvailability\n-from plone.keyring.interfaces import IKeyManager\n-from plone.protect.authenticator import check as checkCSRF\n-from plone.protect.interfaces import IDisableCSRFProtection\n from urllib import parse\n from ZODB.broken import Broken\n from zope.component import adapts\n@@ -26,11 +25,12 @@\n from zope.component import queryUtility\n from zope.i18n.interfaces import IUserPreferredLanguages\n from zope.i18n.locales import locales, LoadLocaleError\n-from zope.interface import Interface\n from zope.interface import alsoProvides\n+from zope.interface import Interface\n from zope.publisher.browser import BrowserView\n from zope.publisher.interfaces import IRequest\n from zope.schema.interfaces import IVocabularyFactory\n+from ZPublisher.BaseRequest import DefaultPublishTraverse\n \n import logging\n import pkg_resources\ndiff --git a/Products/CMFPlone/browser/search.py b/Products/CMFPlone/browser/search.py\nindex 0b98159dc9..08709607c8 100644\n--- a/Products/CMFPlone/browser/search.py\n+++ b/Products/CMFPlone/browser/search.py\n@@ -1,11 +1,11 @@\n from DateTime import DateTime\n from plone.app.contentlisting.interfaces import IContentListing\n from plone.app.layout.navigation.interfaces import INavigationRoot\n+from plone.base.batch import Batch\n+from plone.base.interfaces import ISearchSchema\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.browser.navtree import getNavigationRoot\n-from plone.base.interfaces import ISearchSchema\n-from Products.CMFPlone.PloneBatch import Batch\n from Products.ZCTextIndex.ParseTree import ParseError\n from zope.cachedescriptors.property import Lazy as lazy_property\n from zope.component import getMultiAdapter\ndiff --git a/Products/CMFPlone/configure.zcml b/Products/CMFPlone/configure.zcml\nindex 80804657d8..0433f5a7e7 100644\n--- a/Products/CMFPlone/configure.zcml\n+++ b/Products/CMFPlone/configure.zcml\n@@ -90,11 +90,11 @@\n       />\n \n   <class class="Products.PluggableAuthService.PluggableAuthService.PluggableAuthService">\n-    <implements interface=".interfaces.IHideFromBreadcrumbs" />\n+    <implements interface="plone.base.interfaces.IHideFromBreadcrumbs" />\n   </class>\n \n   <class class="Products.PluggableAuthService.plugins.BasePlugin.BasePlugin">\n-    <implements interface=".interfaces.IHideFromBreadcrumbs" />\n+    <implements interface="plone.base.interfaces.IHideFromBreadcrumbs" />\n   </class>\n \n   <utility factory=".factory.NonInstallable"\ndiff --git a/Products/CMFPlone/controlpanel/browser/redirects.py b/Products/CMFPlone/controlpanel/browser/redirects.py\nindex 4e84068755..e1488abf06 100644\n--- a/Products/CMFPlone/controlpanel/browser/redirects.py\n+++ b/Products/CMFPlone/controlpanel/browser/redirects.py\n@@ -1,15 +1,15 @@\n+from csv import writer\n from DateTime import DateTime\n from DateTime.interfaces import DateTimeError\n-from csv import writer\n+from io import StringIO\n from plone.app.redirector.interfaces import IRedirectionStorage\n+from plone.base.batch import Batch\n+from plone.base.utils import safe_text\n from plone.batching.browser import PloneBatchView\n from plone.memoize.view import memoize\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.PloneBatch import Batch\n-from plone.base.utils import safe_text\n from Products.Five.browser import BrowserView\n from Products.statusmessages.interfaces import IStatusMessage\n-from io import StringIO\n from urllib.parse import urlparse\n from zope.component import getMultiAdapter\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/utils.py b/Products/CMFPlone/utils.py\nindex c92cae5786..7f6c0a1af6 100644\n--- a/Products/CMFPlone/utils.py\n+++ b/Products/CMFPlone/utils.py\n@@ -347,7 +347,7 @@ def versionTupleFromString(v_str):\n     else:\n         groups = list(match.groups())\n         for i in (0, 1, 2, 4):\n-            groups[i] = base_utils.safeToInt(groups[i])\n+            groups[i] = base_utils.safe_int(groups[i])\n         if groups[3] is None:\n             groups[3] = \'final\'\n         elif groups[3] in rl_abbr.keys():\ndiff --git a/news/3573.bugfix b/news/3573.bugfix\nnew file mode 100644\nindex 0000000000..d56b8dad4a\n--- /dev/null\n+++ b/news/3573.bugfix\n@@ -0,0 +1,2 @@\n+Fix more plone.base related deprecation warnings.\n+[jensens]\n'

