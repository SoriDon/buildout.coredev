Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2016-02-18T15:41:35+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.z3cform/commit/9aecf144230775012e7a4622a56d36eb9b3af182

Revert "Ensure vocabulary lookup works on add forms for related items widget, and with add forms using schema groups."

This reverts commit 4aaaf754f32dd03be1403d0151259a7a825603a0.

Files changed:
M plone/app/z3cform/tests/test_widgets.py
M plone/app/z3cform/widget.py

diff --git a/plone/app/z3cform/tests/test_widgets.py b/plone/app/z3cform/tests/test_widgets.py
index 3ba3ca9..19f2d01 100644
--- a/plone/app/z3cform/tests/test_widgets.py
+++ b/plone/app/z3cform/tests/test_widgets.py
@@ -765,7 +765,7 @@ def test_widget_choice(self):
     def test_widget_addform_url_on_addform(self):
         from plone.app.z3cform.widget import AjaxSelectWidget
         widget = AjaxSelectWidget(self.request)
-        form = Mock(parentForm=None)
+        form = Mock()
         from zope.interface import directlyProvides
         from z3c.form.interfaces import IAddForm
         directlyProvides(form, IAddForm)
diff --git a/plone/app/z3cform/widget.py b/plone/app/z3cform/widget.py
index b23fddc..8e3c331 100644
--- a/plone/app/z3cform/widget.py
+++ b/plone/app/z3cform/widget.py
@@ -16,7 +16,6 @@
 from plone.app.widgets.utils import get_querystring_options
 from plone.app.widgets.utils import get_relateditems_options
 from plone.app.widgets.utils import get_tinymce_options
-from plone.app.widgets.utils import get_widget_form
 from plone.registry.interfaces import IRegistry
 from plone.app.z3cform.utils import closest_content
 from z3c.form.browser.select import SelectWidget as z3cform_SelectWidget
@@ -290,15 +289,6 @@ class AjaxSelectWidget(BaseWidget, z3cform_TextWidget):
     vocabulary_view = '@@getVocabulary'
     orderable = False
 
-    def update(self):
-        super(AjaxSelectWidget, self).update()
-        field = getattr(self, 'field', None)
-        if ICollection.providedBy(self.field):
-            field = self.field.value_type
-        if (not self.vocabulary and field is not None and
-                getattr(field, 'vocabularyName', None)):
-            self.vocabulary = field.vocabularyName
-
     def _base_args(self):
         """Method which will calculate _base class arguments.
 
@@ -322,10 +312,9 @@ def _base_args(self):
         field_name = self.field and self.field.__name__ or None
 
         context = self.context
-        form = get_widget_form(self)
         # We need special handling for AddForms
-        if IAddForm.providedBy(form):
-            context = form
+        if IAddForm.providedBy(getattr(self, 'form')):
+            context = self.form
         # Use the main form as context if we have groups in an add form
         elif IGroup.providedBy(getattr(self, 'form')) and \
                 IAddForm.providedBy(self.form.parentForm):
@@ -341,6 +330,8 @@ def _base_args(self):
             field = self.field.value_type
         if IChoice.providedBy(field):
             args['pattern_options']['allowNewItems'] = 'false'
+        if not vocabulary_name and field is not None:
+            vocabulary_name = field.vocabularyName
 
         args['pattern_options'] = dict_merge(
             get_ajaxselect_options(context, args['value'], self.separator,
@@ -386,22 +377,9 @@ class RelatedItemsWidget(BaseWidget, z3cform_TextWidget):
 
     separator = ';'
     vocabulary = None
-    vocabulary_override = False
     vocabulary_view = '@@getVocabulary'
     orderable = False
 
-    def update(self):
-        super(RelatedItemsWidget, self).update()
-        field = getattr(self, 'field', None)
-        if ICollection.providedBy(self.field):
-            field = self.field.value_type
-        if (not self.vocabulary and field is not None and
-                getattr(field, 'vocabularyName', None)):
-            self.vocabulary = field.vocabularyName
-            self.vocabulary_override = True
-        else:
-            self.vocabulary = 'plone.app.vocabularies.Catalog'
-
     def _base_args(self):
         """Method which will calculate _base class arguments.
 
@@ -428,22 +406,20 @@ def _base_args(self):
             field = self.field.value_type
 
         vocabulary_name = self.vocabulary
+        if not vocabulary_name:
+            if field is not None and field.vocabularyName:
+                vocabulary_name = field.vocabularyName
+            else:
+                vocabulary_name = 'plone.app.vocabularies.Catalog'
 
         field_name = self.field and self.field.__name__ or None
-
-        context = self.context
-        form = get_widget_form(self)
-        # We need special handling for AddForms
-        if IAddForm.providedBy(form):
-            context = form
-
         args['pattern_options'] = dict_merge(
-            get_relateditems_options(context, args['value'],
+            get_relateditems_options(self.context, args['value'],
                                      self.separator, vocabulary_name,
                                      self.vocabulary_view, field_name),
             args['pattern_options'])
 
-        if not self.vocabulary_override:  # widget vocab takes precedence over field
+        if not self.vocabulary:  # widget vocab takes precedence over field
             if field and getattr(field, 'vocabulary', None):
                 form_url = self.request.getURL()
                 source_url = "%s/++widget++%s/@@getSource" % (


Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2016-02-18T15:41:44+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.z3cform/commit/db5d1aa4a12842e085c4b07d21f7c7e642d96814

Revert "Fix related items widget tests to include root path support. Fix options merging for TinyMCE widget."

This reverts commit ca9531b5a0336f82bf5592fe752afd9b3e252ce7.

Files changed:
M CHANGES.rst
M plone/app/z3cform/tests/test_widgets.py
M plone/app/z3cform/widget.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 600b429..dd8e08a 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -17,9 +17,6 @@ Fixes:
 - Use doctest instead of zope.testing.doctest
   [pbauer]
 
-- Fix related items widget tests to include root path support.
-  Fix options merging for TinyMCE widget.
-  [alecm]
 
 1.1.8 (2016-01-08)
 ------------------
diff --git a/plone/app/z3cform/tests/test_widgets.py b/plone/app/z3cform/tests/test_widgets.py
index 19f2d01..f44b250 100644
--- a/plone/app/z3cform/tests/test_widgets.py
+++ b/plone/app/z3cform/tests/test_widgets.py
@@ -945,8 +945,7 @@ def setUp(self):
     def test_widget(self):
         from plone.app.z3cform.widget import RelatedItemsWidget
         widget = RelatedItemsWidget(self.request)
-        widget.context = Mock(absolute_url=lambda: 'fake_url',
-                              getPhysicalPath=lambda: ['', 'site'])
+        widget.context = Mock(absolute_url=lambda: 'fake_url')
         widget.update()
         self.assertEqual(
             {
@@ -959,9 +958,8 @@ def test_widget(self):
                     'searchAllText': u'Entire site',
                     'searchText': u'Search',
                     'separator': ';',
-                    'vocabularyUrl': 'fake_url/@@getVocabulary?name='
+                    'vocabularyUrl': '/@@getVocabulary?name='
                                      'plone.app.vocabularies.Catalog',
-                    'rootPath': '/site',
                 },
             },
             widget._base_args()
@@ -971,8 +969,7 @@ def test_single_selection(self):
         """The pattern_options value for maximumSelectionSize should
         be 1 when the field only allows a single selection."""
         from plone.app.z3cform.widget import RelatedItemsFieldWidget
-        context = Mock(absolute_url=lambda: 'fake_url',
-                       getPhysicalPath=lambda: ['', 'site'])
+        context = Mock(absolute_url=lambda: 'fake_url')
         field = Choice(
             __name__='selectfield',
             values=['one', 'two', 'three'],
@@ -991,8 +988,7 @@ def test_multiple_selection(self):
         from zope.schema.interfaces import ISource
         from zope.schema.vocabulary import VocabularyRegistry
 
-        context = Mock(absolute_url=lambda: 'fake_url',
-                       getPhysicalPath=lambda: ['', 'site'])
+        context = Mock(absolute_url=lambda: 'fake_url')
         field = List(
             __name__='selectfield',
             value_type=Choice(vocabulary='foobar')
@@ -1009,7 +1005,7 @@ def test_multiple_selection(self):
         self.assertFalse('maximumSelectionSize' in patterns_options)
         self.assertEqual(
             patterns_options['vocabularyUrl'],
-            'fake_url/@@getVocabulary?name=foobar&field=selectfield',
+            '/@@getVocabulary?name=foobar&field=selectfield',
             )
 
     def test_converter_RelationChoice(self):
diff --git a/plone/app/z3cform/widget.py b/plone/app/z3cform/widget.py
index 8e3c331..268b43b 100644
--- a/plone/app/z3cform/widget.py
+++ b/plone/app/z3cform/widget.py
@@ -519,11 +519,9 @@ def _base_args(self):
             self.field.getName(), value)).decode('utf-8')
 
         args.setdefault('pattern_options', {})
-        merged_options = dict_merge(get_tinymce_options(self.context,
-                                                        self.field,
-                                                        self.request),  # noqa
-                                    args['pattern_options'])
-        args['pattern_options'] = merged_options
+        merged = dict_merge(get_tinymce_options(self.context, self.field, self.request),  # noqa
+                            args['pattern_options'])
+        args['pattern_options'] = merged['pattern_options']
 
         return args
 


