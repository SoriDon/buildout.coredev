Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-03-05T02:25:55+01:00
Author: Timo Stollenwerk (tisto) <stollenwerk@kitconcept.com>
Commit: https://github.com/plone/plone.restapi/commit/0d3afe4d6650033f697e4c960376a5e9e27dd12b

Amend test to pass after merging PLIP #3279

Files changed:
M src/plone/restapi/tests/test_serializer.py

b'diff --git a/src/plone/restapi/tests/test_serializer.py b/src/plone/restapi/tests/test_serializer.py\nindex b123c2e03..3ee4d1c96 100644\n--- a/src/plone/restapi/tests/test_serializer.py\n+++ b/src/plone/restapi/tests/test_serializer.py\n@@ -16,6 +16,7 @@\n import os\n import unittest\n \n+\n HAS_PLONE_6 = getattr(\n     import_module("Products.CMFPlone.factory"), "PLONE60MARKER", False\n )\n@@ -273,6 +274,34 @@ def test_serialize_image(self):\n                 "preview": {"download": download_url, "width": 215, "height": 56},\n                 "large": {"download": download_url, "width": 215, "height": 56},\n             }\n+            if HAS_PLONE_6:\n+                # PLIP #3279 amend the image scales\n+                # https://github.com/plone/Products.CMFPlone/pull/3450\n+                scales["great"] = {\n+                    "download": "http://nohost/plone/image1/@@images/uuid_1.png",\n+                    "height": 56,\n+                    "width": 215,\n+                }\n+                scales["huge"] = {\n+                    "download": "http://nohost/plone/image1/@@images/uuid_1.png",\n+                    "height": 56,\n+                    "width": 215,\n+                }\n+                scales["larger"] = {\n+                    "download": "http://nohost/plone/image1/@@images/uuid_1.png",\n+                    "height": 56,\n+                    "width": 215,\n+                }\n+                scales["large"] = {\n+                    "download": "http://nohost/plone/image1/@@images/uuid_1.png",\n+                    "height": 56,\n+                    "width": 215,\n+                }\n+                scales["teaser"] = {\n+                    "download": "http://nohost/plone/image1/@@images/uuid_1.png",\n+                    "height": 56,\n+                    "width": 215,\n+                }\n             self.assertEqual(\n                 {\n                     "filename": "image.png",\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-03-05T02:27:44+01:00
Author: Timo Stollenwerk (tisto) <stollenwerk@kitconcept.com>
Commit: https://github.com/plone/plone.restapi/commit/52e1a967a4a4f75495e22971e84913035d56b8d3

Use download_url var in test

Files changed:
M src/plone/restapi/tests/test_serializer.py

b'diff --git a/src/plone/restapi/tests/test_serializer.py b/src/plone/restapi/tests/test_serializer.py\nindex 3ee4d1c96..00718e519 100644\n--- a/src/plone/restapi/tests/test_serializer.py\n+++ b/src/plone/restapi/tests/test_serializer.py\n@@ -275,30 +275,30 @@ def test_serialize_image(self):\n                 "large": {"download": download_url, "width": 215, "height": 56},\n             }\n             if HAS_PLONE_6:\n-                # PLIP #3279 amend the image scales\n+                # PLIP #3279 amended the image scales\n                 # https://github.com/plone/Products.CMFPlone/pull/3450\n                 scales["great"] = {\n-                    "download": "http://nohost/plone/image1/@@images/uuid_1.png",\n+                    "download": download_url,\n                     "height": 56,\n                     "width": 215,\n                 }\n                 scales["huge"] = {\n-                    "download": "http://nohost/plone/image1/@@images/uuid_1.png",\n+                    "download": download_url,\n                     "height": 56,\n                     "width": 215,\n                 }\n                 scales["larger"] = {\n-                    "download": "http://nohost/plone/image1/@@images/uuid_1.png",\n+                    "download": download_url,\n                     "height": 56,\n                     "width": 215,\n                 }\n                 scales["large"] = {\n-                    "download": "http://nohost/plone/image1/@@images/uuid_1.png",\n+                    "download": download_url,\n                     "height": 56,\n                     "width": 215,\n                 }\n                 scales["teaser"] = {\n-                    "download": "http://nohost/plone/image1/@@images/uuid_1.png",\n+                    "download": download_url,\n                     "height": 56,\n                     "width": 215,\n                 }\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-03-05T02:34:57+01:00
Author: Timo Stollenwerk (tisto) <stollenwerk@kitconcept.com>
Commit: https://github.com/plone/plone.restapi/commit/f0982735e125f9d58012862247b41e64af102590

Amend tests for PLIP #3279

Files changed:
M src/plone/restapi/tests/test_dxfield_serializer.py

b'diff --git a/src/plone/restapi/tests/test_dxfield_serializer.py b/src/plone/restapi/tests/test_dxfield_serializer.py\nindex 151dbeaff..61c335e57 100644\n--- a/src/plone/restapi/tests/test_dxfield_serializer.py\n+++ b/src/plone/restapi/tests/test_dxfield_serializer.py\n@@ -3,6 +3,7 @@\n from datetime import time\n from datetime import timedelta\n from decimal import Decimal\n+from importlib import import_module\n from plone.app.textfield.value import RichTextValue\n from plone.dexterity.utils import iterSchemata\n from plone.namedfile.file import NamedBlobFile\n@@ -23,6 +24,11 @@\n import os\n \n \n+HAS_PLONE_6 = getattr(\n+    import_module("Products.CMFPlone.factory"), "PLONE60MARKER", False\n+)\n+\n+\n class TestDexterityFieldSerializing(TestCase):\n     layer = PLONE_RESTAPI_DX_INTEGRATION_TESTING\n     maxDiff = None\n@@ -431,6 +437,34 @@ def test_namedimage_field_serialization_returns_dict_with_original_scale(self):\n                     "height": 576,\n                 },\n             }\n+            if HAS_PLONE_6:\n+                # PLIP #3279 amended the image scales\n+                # https://github.com/plone/Products.CMFPlone/pull/3450\n+                scales["great"] = {\n+                    "download": scale_download_url,\n+                    "height": 768,\n+                    "width": 1024,\n+                }\n+                scales["huge"] = {\n+                    "download": scale_download_url,\n+                    "height": 768,\n+                    "width": 1024,\n+                }\n+                scales["larger"] = {\n+                    "download": scale_download_url,\n+                    "height": 750,\n+                    "width": 1000,\n+                }\n+                scales["large"] = {\n+                    "download": scale_download_url,\n+                    "height": 600,\n+                    "width": 800,\n+                }\n+                scales["teaser"] = {\n+                    "download": scale_download_url,\n+                    "height": 450,\n+                    "width": 600,\n+                }\n             self.assertEqual(\n                 {\n                     "filename": "1024x768.gif",\n@@ -530,6 +564,34 @@ def test_namedblobimage_field_serialization_returns_dict_with_original_scale(sel\n                     "height": 576,\n                 },\n             }\n+            if HAS_PLONE_6:\n+                # PLIP #3279 amended the image scales\n+                # https://github.com/plone/Products.CMFPlone/pull/3450\n+                scales["great"] = {\n+                    "download": scale_download_url,\n+                    "height": 768,\n+                    "width": 1024,\n+                }\n+                scales["huge"] = {\n+                    "download": scale_download_url,\n+                    "height": 768,\n+                    "width": 1024,\n+                }\n+                scales["larger"] = {\n+                    "download": scale_download_url,\n+                    "height": 750,\n+                    "width": 1000,\n+                }\n+                scales["large"] = {\n+                    "download": scale_download_url,\n+                    "height": 600,\n+                    "width": 800,\n+                }\n+                scales["teaser"] = {\n+                    "download": scale_download_url,\n+                    "height": 450,\n+                    "width": 600,\n+                }\n             self.assertEqual(\n                 {\n                     "filename": "1024x768.gif",\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-03-11T11:05:02+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.restapi/commit/ea19b3672f899fdbbbcdd2fda1b6b27fad23c534

Merge pull request #1341 from plone/plip-3279

Plip #3279

Files changed:
M src/plone/restapi/tests/test_dxfield_serializer.py
M src/plone/restapi/tests/test_serializer.py

b'diff --git a/src/plone/restapi/tests/test_dxfield_serializer.py b/src/plone/restapi/tests/test_dxfield_serializer.py\nindex 151dbeaff..61c335e57 100644\n--- a/src/plone/restapi/tests/test_dxfield_serializer.py\n+++ b/src/plone/restapi/tests/test_dxfield_serializer.py\n@@ -3,6 +3,7 @@\n from datetime import time\n from datetime import timedelta\n from decimal import Decimal\n+from importlib import import_module\n from plone.app.textfield.value import RichTextValue\n from plone.dexterity.utils import iterSchemata\n from plone.namedfile.file import NamedBlobFile\n@@ -23,6 +24,11 @@\n import os\n \n \n+HAS_PLONE_6 = getattr(\n+    import_module("Products.CMFPlone.factory"), "PLONE60MARKER", False\n+)\n+\n+\n class TestDexterityFieldSerializing(TestCase):\n     layer = PLONE_RESTAPI_DX_INTEGRATION_TESTING\n     maxDiff = None\n@@ -431,6 +437,34 @@ def test_namedimage_field_serialization_returns_dict_with_original_scale(self):\n                     "height": 576,\n                 },\n             }\n+            if HAS_PLONE_6:\n+                # PLIP #3279 amended the image scales\n+                # https://github.com/plone/Products.CMFPlone/pull/3450\n+                scales["great"] = {\n+                    "download": scale_download_url,\n+                    "height": 768,\n+                    "width": 1024,\n+                }\n+                scales["huge"] = {\n+                    "download": scale_download_url,\n+                    "height": 768,\n+                    "width": 1024,\n+                }\n+                scales["larger"] = {\n+                    "download": scale_download_url,\n+                    "height": 750,\n+                    "width": 1000,\n+                }\n+                scales["large"] = {\n+                    "download": scale_download_url,\n+                    "height": 600,\n+                    "width": 800,\n+                }\n+                scales["teaser"] = {\n+                    "download": scale_download_url,\n+                    "height": 450,\n+                    "width": 600,\n+                }\n             self.assertEqual(\n                 {\n                     "filename": "1024x768.gif",\n@@ -530,6 +564,34 @@ def test_namedblobimage_field_serialization_returns_dict_with_original_scale(sel\n                     "height": 576,\n                 },\n             }\n+            if HAS_PLONE_6:\n+                # PLIP #3279 amended the image scales\n+                # https://github.com/plone/Products.CMFPlone/pull/3450\n+                scales["great"] = {\n+                    "download": scale_download_url,\n+                    "height": 768,\n+                    "width": 1024,\n+                }\n+                scales["huge"] = {\n+                    "download": scale_download_url,\n+                    "height": 768,\n+                    "width": 1024,\n+                }\n+                scales["larger"] = {\n+                    "download": scale_download_url,\n+                    "height": 750,\n+                    "width": 1000,\n+                }\n+                scales["large"] = {\n+                    "download": scale_download_url,\n+                    "height": 600,\n+                    "width": 800,\n+                }\n+                scales["teaser"] = {\n+                    "download": scale_download_url,\n+                    "height": 450,\n+                    "width": 600,\n+                }\n             self.assertEqual(\n                 {\n                     "filename": "1024x768.gif",\ndiff --git a/src/plone/restapi/tests/test_serializer.py b/src/plone/restapi/tests/test_serializer.py\nindex b123c2e03..00718e519 100644\n--- a/src/plone/restapi/tests/test_serializer.py\n+++ b/src/plone/restapi/tests/test_serializer.py\n@@ -16,6 +16,7 @@\n import os\n import unittest\n \n+\n HAS_PLONE_6 = getattr(\n     import_module("Products.CMFPlone.factory"), "PLONE60MARKER", False\n )\n@@ -273,6 +274,34 @@ def test_serialize_image(self):\n                 "preview": {"download": download_url, "width": 215, "height": 56},\n                 "large": {"download": download_url, "width": 215, "height": 56},\n             }\n+            if HAS_PLONE_6:\n+                # PLIP #3279 amended the image scales\n+                # https://github.com/plone/Products.CMFPlone/pull/3450\n+                scales["great"] = {\n+                    "download": download_url,\n+                    "height": 56,\n+                    "width": 215,\n+                }\n+                scales["huge"] = {\n+                    "download": download_url,\n+                    "height": 56,\n+                    "width": 215,\n+                }\n+                scales["larger"] = {\n+                    "download": download_url,\n+                    "height": 56,\n+                    "width": 215,\n+                }\n+                scales["large"] = {\n+                    "download": download_url,\n+                    "height": 56,\n+                    "width": 215,\n+                }\n+                scales["teaser"] = {\n+                    "download": download_url,\n+                    "height": 56,\n+                    "width": 215,\n+                }\n             self.assertEqual(\n                 {\n                     "filename": "image.png",\n'

