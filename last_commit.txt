Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2022-09-18T19:30:04-07:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/plone.app.discussion/commit/8a64e854350939fae17afaa4858abfac64b93f9b

Use longer passwords for tests

Files changed:
M plone/app/discussion/tests/functional_test_comment_review_workflow.txt
M plone/app/discussion/tests/functional_test_comments.txt
M plone/app/discussion/tests/test_comments_viewlet.py
M plone/app/discussion/tests/test_workflow.py

b'diff --git a/plone/app/discussion/tests/functional_test_comment_review_workflow.txt b/plone/app/discussion/tests/functional_test_comment_review_workflow.txt\nindex 099ce9fb..1bcae9ba 100644\n--- a/plone/app/discussion/tests/functional_test_comment_review_workflow.txt\n+++ b/plone/app/discussion/tests/functional_test_comment_review_workflow.txt\n@@ -18,9 +18,10 @@ First we have to set up some things and login.\n \n     >>> app = layer[\'app\']\n     >>> from plone.testing.z2 import Browser\n+    >>> from plone.app.testing import TEST_USER_PASSWORD\n     >>> browser = Browser(app)\n     >>> browser.handleErrors = False\n-    >>> browser.addHeader(\'Authorization\', \'Basic admin:secret\')\n+    >>> browser.addHeader(\'Authorization\', f\'Basic admin:{TEST_USER_PASSWORD}\')\n     >>> portal = layer[\'portal\']\n     >>> portal_url = \'http://nohost/plone\'\n \n@@ -142,7 +143,7 @@ actions.\n     >>> browser.open(portal_url + \'/logout\')\n     >>> browser.open(portal_url + \'/login_form\')\n     >>> browser.getControl(name=\'__ac_name\').value = \'jack\'\n-    >>> browser.getControl(name=\'__ac_password\').value = \'secret\'\n+    >>> browser.getControl(name=\'__ac_password\').value = TEST_USER_PASSWORD\n     >>> browser.getControl(\'Log in\').click()\n \n     >>> browser.open(urldoc)\n@@ -240,7 +241,7 @@ Enable anonymous comment with email.\n     >>> browser.open(portal_url + \'/logout\')\n     >>> browser.open(portal_url + \'/login_form\')\n     >>> browser.getControl(name=\'__ac_name\').value = \'admin\'\n-    >>> browser.getControl(name=\'__ac_password\').value = \'secret\'\n+    >>> browser.getControl(name=\'__ac_password\').value = TEST_USER_PASSWORD\n     >>> browser.getControl(\'Log in\').click()\n     >>> browser.open(portal_url+\'/@@discussion-controlpanel\')\n     >>> browser.getControl(name=\'form.widgets.anonymous_comments:list\').value = \'selected\'\ndiff --git a/plone/app/discussion/tests/functional_test_comments.txt b/plone/app/discussion/tests/functional_test_comments.txt\nindex 939d14d9..d6e60364 100644\n--- a/plone/app/discussion/tests/functional_test_comments.txt\n+++ b/plone/app/discussion/tests/functional_test_comments.txt\n@@ -15,9 +15,10 @@ First we have to set up some things and login.\n \n     >>> app = layer[\'app\']\n     >>> from plone.testing.z2 import Browser\n+    >>> from plone.app.testing import TEST_USER_PASSWORD\n     >>> browser = Browser(app)\n     >>> browser.handleErrors = False\n-    >>> browser.addHeader(\'Authorization\', \'Basic admin:secret\')\n+    >>> browser.addHeader(\'Authorization\', f\'Basic admin:{TEST_USER_PASSWORD}\')\n     >>> portal = layer[\'portal\']\n     >>> portal_url = \'http://nohost/plone\'\n \n@@ -122,7 +123,7 @@ Login as user (without the \'Member\' role).\n \n     >>> browser_user.open(portal_url + \'/login_form\')\n     >>> browser_user.getControl(name=\'__ac_name\').value = \'johndoe\'\n-    >>> browser_user.getControl(name=\'__ac_password\').value = \'secret\'\n+    >>> browser_user.getControl(name=\'__ac_password\').value = TEST_USER_PASSWORD\n     >>> browser_user.getControl(\'Log in\').click()\n \n Users without the \'Reply to item\' permission will not see the comment form,\n@@ -142,7 +143,7 @@ Post a comment as member\n Login as user \'jim\'.\n     >>> browser_member.open(portal_url + \'/login_form\')\n     >>> browser_member.getControl(name=\'__ac_name\').value = \'jim\'\n-    >>> browser_member.getControl(name=\'__ac_password\').value = \'secret\'\n+    >>> browser_member.getControl(name=\'__ac_password\').value = TEST_USER_PASSWORD\n     >>> browser_member.getControl(\'Log in\').click()\n \n Post a comment as user jim.\n@@ -176,7 +177,7 @@ Enable anonymous comment\n     >>> browser.open(portal_url + \'/logout\')\n     >>> browser.open(portal_url + \'/login_form\')\n     >>> browser.getControl(name=\'__ac_name\').value = \'admin\'\n-    >>> browser.getControl(name=\'__ac_password\').value = \'secret\'\n+    >>> browser.getControl(name=\'__ac_password\').value = TEST_USER_PASSWORD\n     >>> browser.getControl(\'Log in\').click()\n     >>> browser.open(portal_url+\'/@@discussion-controlpanel\')\n     >>> browser.getControl(name=\'form.widgets.anonymous_comments:list\').value = \'selected\'\n@@ -248,7 +249,7 @@ Log in as admin\n     >>> browser.getLink(\'Log out\').click()\n     >>> browser.open(portal_url + \'/login_form\')\n     >>> browser.getControl(\'Login Name\').value = \'admin\'\n-    >>> browser.getControl(\'Password\').value = \'secret\'\n+    >>> browser.getControl(\'Password\').value = TEST_USER_PASSWORD\n     >>> browser.getControl(\'Log in\').click()\n \n Use the Plone control panel to enable comment editing.\n@@ -380,7 +381,7 @@ Now login as user \'reviewer\'\n \n     >>> browser_reviewer.open(portal_url + \'/login_form\')\n     >>> browser_reviewer.getControl(name=\'__ac_name\').value = \'reviewer\'\n-    >>> browser_reviewer.getControl(name=\'__ac_password\').value = \'secret\'\n+    >>> browser_reviewer.getControl(name=\'__ac_password\').value = TEST_USER_PASSWORD\n     >>> browser_reviewer.getControl(\'Log in\').click()\n \n Admin and who have \'Delete comments\' permission (reviewers for example), can delete comments\n@@ -450,7 +451,7 @@ Login as admin.\n \n     >>> browser.open(portal_url + \'/login_form\')\n     >>> browser.getControl(name=\'__ac_name\').value = \'admin\'\n-    >>> browser.getControl(name=\'__ac_password\').value = \'secret\'\n+    >>> browser.getControl(name=\'__ac_password\').value = TEST_USER_PASSWORD\n     >>> browser.getControl(\'Log in\').click()\n \n Edit the content object.\n@@ -479,7 +480,7 @@ Edit the control panel.\n     >>> browser.open(portal_url + \'/logout\')\n     >>> browser.open(portal_url + \'/login_form\')\n     >>> browser.getControl(name=\'__ac_name\').value = \'admin\'\n-    >>> browser.getControl(name=\'__ac_password\').value = \'secret\'\n+    >>> browser.getControl(name=\'__ac_password\').value = TEST_USER_PASSWORD\n     >>> browser.getControl(\'Log in\').click()\n     >>> browser.open(portal_url+\'/@@discussion-controlpanel\')\n     >>> browser.getControl(name=\'form.widgets.anonymous_email_enabled:list\').value = \'selected\'\n@@ -531,7 +532,7 @@ Login as user \'jim\'.\n \n     >>> browser_member.open(portal_url + \'/login_form\')\n     >>> browser_member.getControl(name=\'__ac_name\').value = \'jim\'\n-    >>> browser_member.getControl(name=\'__ac_password\').value = \'secret\'\n+    >>> browser_member.getControl(name=\'__ac_password\').value = TEST_USER_PASSWORD\n     >>> browser_member.getControl(\'Log in\').click()\n \n Post a comment as user jim.\ndiff --git a/plone/app/discussion/tests/test_comments_viewlet.py b/plone/app/discussion/tests/test_comments_viewlet.py\nindex 54a18bd5..de325e37 100644\n--- a/plone/app/discussion/tests/test_comments_viewlet.py\n+++ b/plone/app/discussion/tests/test_comments_viewlet.py\n@@ -13,6 +13,7 @@\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import TEST_USER_NAME\n+from plone.app.testing import TEST_USER_PASSWORD\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from z3c.form.interfaces import IFormLayer\n@@ -515,7 +516,7 @@ def test_can_review(self):\n         # Anonymous has no \'can review\' permission\n         self.assertFalse(self.viewlet.can_review())\n         # The reviewer role has the \'Review comments\' permission\n-        self.portal.acl_users._doAddUser("reviewer", "secret", ["Reviewer"], [])\n+        self.portal.acl_users._doAddUser("reviewer", TEST_USER_PASSWORD, ["Reviewer"], [])\n         login(self.portal, "reviewer")\n         self.assertTrue(self.viewlet.can_review())\n \ndiff --git a/plone/app/discussion/tests/test_workflow.py b/plone/app/discussion/tests/test_workflow.py\nindex ece7d8ac..39fb219c 100644\n--- a/plone/app/discussion/tests/test_workflow.py\n+++ b/plone/app/discussion/tests/test_workflow.py\n@@ -9,6 +9,7 @@\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import TEST_USER_NAME\n+from plone.app.testing import TEST_USER_PASSWORD\n from Products.CMFCore.permissions import View\n from Products.CMFCore.utils import _checkPermission as checkPerm\n from zope.component import createObject\n@@ -128,11 +129,11 @@ def setUp(self):\n             f"++conversation++default/{cid}",\n         )\n \n-        self.portal.acl_users._doAddUser("member", "secret", ["Member"], [])\n-        self.portal.acl_users._doAddUser("reviewer", "secret", ["Reviewer"], [])\n-        self.portal.acl_users._doAddUser("manager", "secret", ["Manager"], [])\n-        self.portal.acl_users._doAddUser("editor", " secret", ["Editor"], [])\n-        self.portal.acl_users._doAddUser("reader", "secret", ["Reader"], [])\n+        self.portal.acl_users._doAddUser("member", TEST_USER_PASSWORD, ["Member"], [])\n+        self.portal.acl_users._doAddUser("reviewer", TEST_USER_PASSWORD, ["Reviewer"], [])\n+        self.portal.acl_users._doAddUser("manager", TEST_USER_PASSWORD, ["Manager"], [])\n+        self.portal.acl_users._doAddUser("editor", TEST_USER_PASSWORD, ["Editor"], [])\n+        self.portal.acl_users._doAddUser("reader", TEST_USER_PASSWORD, ["Reader"], [])\n \n     def test_initial_workflow_state(self):\n         """Make sure the initial workflow state of a comment is \'private\'."""\n'

Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2022-09-18T19:31:09-07:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/plone.app.discussion/commit/d7c5d271c43a1fdd5472280e119a33673ff9a37a

changelog

Files changed:
A news/203.bugfix

b'diff --git a/news/203.bugfix b/news/203.bugfix\nnew file mode 100644\nindex 00000000..d1b185c6\n--- /dev/null\n+++ b/news/203.bugfix\n@@ -0,0 +1 @@\n+- Use longer passwords in tests. [davisagli]\n'

Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2022-09-18T20:46:04-07:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/plone.app.discussion/commit/cf68b9ece0c38978445b5f7e40a39d9b9723dbe1

missed file

Files changed:
M plone/app/discussion/testing.py

b'diff --git a/plone/app/discussion/testing.py b/plone/app/discussion/testing.py\nindex 01ea305f..8d057027 100644\n--- a/plone/app/discussion/testing.py\n+++ b/plone/app/discussion/testing.py\n@@ -7,6 +7,7 @@\n from plone.app.testing import PloneSandboxLayer\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n+from plone.app.testing import TEST_USER_PASSWORD\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from zope.component import queryUtility\n@@ -25,16 +26,16 @@ class PloneAppDiscussion(PloneSandboxLayer):\n     defaultBases = (PLONE_APP_CONTENTTYPES_FIXTURE,)\n \n     USER_NAME = "johndoe"\n-    USER_PASSWORD = "secret"\n+    USER_PASSWORD = TEST_USER_PASSWORD\n     MEMBER_NAME = "janedoe"\n-    MEMBER_PASSWORD = "secret"\n+    MEMBER_PASSWORD = TEST_USER_PASSWORD\n     USER_WITH_FULLNAME_NAME = "jim"\n     USER_WITH_FULLNAME_FULLNAME = "Jim Fulton"\n-    USER_WITH_FULLNAME_PASSWORD = "secret"\n+    USER_WITH_FULLNAME_PASSWORD = TEST_USER_PASSWORD\n     MANAGER_USER_NAME = "manager"\n-    MANAGER_USER_PASSWORD = "secret"\n+    MANAGER_USER_PASSWORD = TEST_USER_PASSWORD\n     REVIEWER_NAME = "reviewer"\n-    REVIEWER_PASSWORD = "secret"\n+    REVIEWER_PASSWORD = TEST_USER_PASSWORD\n \n     def setUpZope(self, app, configurationContext):\n         # Load ZCML\n'

Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2022-09-19T11:15:30+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.discussion/commit/9252de84de25e8f6502b98b784189d3c714f06c0

Merge pull request #203 from plone/pw-length

Use longer passwords for tests

Files changed:
A news/203.bugfix
M plone/app/discussion/testing.py
M plone/app/discussion/tests/functional_test_comment_review_workflow.txt
M plone/app/discussion/tests/functional_test_comments.txt
M plone/app/discussion/tests/test_comments_viewlet.py
M plone/app/discussion/tests/test_workflow.py

b'diff --git a/news/203.bugfix b/news/203.bugfix\nnew file mode 100644\nindex 00000000..d1b185c6\n--- /dev/null\n+++ b/news/203.bugfix\n@@ -0,0 +1 @@\n+- Use longer passwords in tests. [davisagli]\ndiff --git a/plone/app/discussion/testing.py b/plone/app/discussion/testing.py\nindex 01ea305f..8d057027 100644\n--- a/plone/app/discussion/testing.py\n+++ b/plone/app/discussion/testing.py\n@@ -7,6 +7,7 @@\n from plone.app.testing import PloneSandboxLayer\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n+from plone.app.testing import TEST_USER_PASSWORD\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from zope.component import queryUtility\n@@ -25,16 +26,16 @@ class PloneAppDiscussion(PloneSandboxLayer):\n     defaultBases = (PLONE_APP_CONTENTTYPES_FIXTURE,)\n \n     USER_NAME = "johndoe"\n-    USER_PASSWORD = "secret"\n+    USER_PASSWORD = TEST_USER_PASSWORD\n     MEMBER_NAME = "janedoe"\n-    MEMBER_PASSWORD = "secret"\n+    MEMBER_PASSWORD = TEST_USER_PASSWORD\n     USER_WITH_FULLNAME_NAME = "jim"\n     USER_WITH_FULLNAME_FULLNAME = "Jim Fulton"\n-    USER_WITH_FULLNAME_PASSWORD = "secret"\n+    USER_WITH_FULLNAME_PASSWORD = TEST_USER_PASSWORD\n     MANAGER_USER_NAME = "manager"\n-    MANAGER_USER_PASSWORD = "secret"\n+    MANAGER_USER_PASSWORD = TEST_USER_PASSWORD\n     REVIEWER_NAME = "reviewer"\n-    REVIEWER_PASSWORD = "secret"\n+    REVIEWER_PASSWORD = TEST_USER_PASSWORD\n \n     def setUpZope(self, app, configurationContext):\n         # Load ZCML\ndiff --git a/plone/app/discussion/tests/functional_test_comment_review_workflow.txt b/plone/app/discussion/tests/functional_test_comment_review_workflow.txt\nindex 099ce9fb..1bcae9ba 100644\n--- a/plone/app/discussion/tests/functional_test_comment_review_workflow.txt\n+++ b/plone/app/discussion/tests/functional_test_comment_review_workflow.txt\n@@ -18,9 +18,10 @@ First we have to set up some things and login.\n \n     >>> app = layer[\'app\']\n     >>> from plone.testing.z2 import Browser\n+    >>> from plone.app.testing import TEST_USER_PASSWORD\n     >>> browser = Browser(app)\n     >>> browser.handleErrors = False\n-    >>> browser.addHeader(\'Authorization\', \'Basic admin:secret\')\n+    >>> browser.addHeader(\'Authorization\', f\'Basic admin:{TEST_USER_PASSWORD}\')\n     >>> portal = layer[\'portal\']\n     >>> portal_url = \'http://nohost/plone\'\n \n@@ -142,7 +143,7 @@ actions.\n     >>> browser.open(portal_url + \'/logout\')\n     >>> browser.open(portal_url + \'/login_form\')\n     >>> browser.getControl(name=\'__ac_name\').value = \'jack\'\n-    >>> browser.getControl(name=\'__ac_password\').value = \'secret\'\n+    >>> browser.getControl(name=\'__ac_password\').value = TEST_USER_PASSWORD\n     >>> browser.getControl(\'Log in\').click()\n \n     >>> browser.open(urldoc)\n@@ -240,7 +241,7 @@ Enable anonymous comment with email.\n     >>> browser.open(portal_url + \'/logout\')\n     >>> browser.open(portal_url + \'/login_form\')\n     >>> browser.getControl(name=\'__ac_name\').value = \'admin\'\n-    >>> browser.getControl(name=\'__ac_password\').value = \'secret\'\n+    >>> browser.getControl(name=\'__ac_password\').value = TEST_USER_PASSWORD\n     >>> browser.getControl(\'Log in\').click()\n     >>> browser.open(portal_url+\'/@@discussion-controlpanel\')\n     >>> browser.getControl(name=\'form.widgets.anonymous_comments:list\').value = \'selected\'\ndiff --git a/plone/app/discussion/tests/functional_test_comments.txt b/plone/app/discussion/tests/functional_test_comments.txt\nindex 939d14d9..d6e60364 100644\n--- a/plone/app/discussion/tests/functional_test_comments.txt\n+++ b/plone/app/discussion/tests/functional_test_comments.txt\n@@ -15,9 +15,10 @@ First we have to set up some things and login.\n \n     >>> app = layer[\'app\']\n     >>> from plone.testing.z2 import Browser\n+    >>> from plone.app.testing import TEST_USER_PASSWORD\n     >>> browser = Browser(app)\n     >>> browser.handleErrors = False\n-    >>> browser.addHeader(\'Authorization\', \'Basic admin:secret\')\n+    >>> browser.addHeader(\'Authorization\', f\'Basic admin:{TEST_USER_PASSWORD}\')\n     >>> portal = layer[\'portal\']\n     >>> portal_url = \'http://nohost/plone\'\n \n@@ -122,7 +123,7 @@ Login as user (without the \'Member\' role).\n \n     >>> browser_user.open(portal_url + \'/login_form\')\n     >>> browser_user.getControl(name=\'__ac_name\').value = \'johndoe\'\n-    >>> browser_user.getControl(name=\'__ac_password\').value = \'secret\'\n+    >>> browser_user.getControl(name=\'__ac_password\').value = TEST_USER_PASSWORD\n     >>> browser_user.getControl(\'Log in\').click()\n \n Users without the \'Reply to item\' permission will not see the comment form,\n@@ -142,7 +143,7 @@ Post a comment as member\n Login as user \'jim\'.\n     >>> browser_member.open(portal_url + \'/login_form\')\n     >>> browser_member.getControl(name=\'__ac_name\').value = \'jim\'\n-    >>> browser_member.getControl(name=\'__ac_password\').value = \'secret\'\n+    >>> browser_member.getControl(name=\'__ac_password\').value = TEST_USER_PASSWORD\n     >>> browser_member.getControl(\'Log in\').click()\n \n Post a comment as user jim.\n@@ -176,7 +177,7 @@ Enable anonymous comment\n     >>> browser.open(portal_url + \'/logout\')\n     >>> browser.open(portal_url + \'/login_form\')\n     >>> browser.getControl(name=\'__ac_name\').value = \'admin\'\n-    >>> browser.getControl(name=\'__ac_password\').value = \'secret\'\n+    >>> browser.getControl(name=\'__ac_password\').value = TEST_USER_PASSWORD\n     >>> browser.getControl(\'Log in\').click()\n     >>> browser.open(portal_url+\'/@@discussion-controlpanel\')\n     >>> browser.getControl(name=\'form.widgets.anonymous_comments:list\').value = \'selected\'\n@@ -248,7 +249,7 @@ Log in as admin\n     >>> browser.getLink(\'Log out\').click()\n     >>> browser.open(portal_url + \'/login_form\')\n     >>> browser.getControl(\'Login Name\').value = \'admin\'\n-    >>> browser.getControl(\'Password\').value = \'secret\'\n+    >>> browser.getControl(\'Password\').value = TEST_USER_PASSWORD\n     >>> browser.getControl(\'Log in\').click()\n \n Use the Plone control panel to enable comment editing.\n@@ -380,7 +381,7 @@ Now login as user \'reviewer\'\n \n     >>> browser_reviewer.open(portal_url + \'/login_form\')\n     >>> browser_reviewer.getControl(name=\'__ac_name\').value = \'reviewer\'\n-    >>> browser_reviewer.getControl(name=\'__ac_password\').value = \'secret\'\n+    >>> browser_reviewer.getControl(name=\'__ac_password\').value = TEST_USER_PASSWORD\n     >>> browser_reviewer.getControl(\'Log in\').click()\n \n Admin and who have \'Delete comments\' permission (reviewers for example), can delete comments\n@@ -450,7 +451,7 @@ Login as admin.\n \n     >>> browser.open(portal_url + \'/login_form\')\n     >>> browser.getControl(name=\'__ac_name\').value = \'admin\'\n-    >>> browser.getControl(name=\'__ac_password\').value = \'secret\'\n+    >>> browser.getControl(name=\'__ac_password\').value = TEST_USER_PASSWORD\n     >>> browser.getControl(\'Log in\').click()\n \n Edit the content object.\n@@ -479,7 +480,7 @@ Edit the control panel.\n     >>> browser.open(portal_url + \'/logout\')\n     >>> browser.open(portal_url + \'/login_form\')\n     >>> browser.getControl(name=\'__ac_name\').value = \'admin\'\n-    >>> browser.getControl(name=\'__ac_password\').value = \'secret\'\n+    >>> browser.getControl(name=\'__ac_password\').value = TEST_USER_PASSWORD\n     >>> browser.getControl(\'Log in\').click()\n     >>> browser.open(portal_url+\'/@@discussion-controlpanel\')\n     >>> browser.getControl(name=\'form.widgets.anonymous_email_enabled:list\').value = \'selected\'\n@@ -531,7 +532,7 @@ Login as user \'jim\'.\n \n     >>> browser_member.open(portal_url + \'/login_form\')\n     >>> browser_member.getControl(name=\'__ac_name\').value = \'jim\'\n-    >>> browser_member.getControl(name=\'__ac_password\').value = \'secret\'\n+    >>> browser_member.getControl(name=\'__ac_password\').value = TEST_USER_PASSWORD\n     >>> browser_member.getControl(\'Log in\').click()\n \n Post a comment as user jim.\ndiff --git a/plone/app/discussion/tests/test_comments_viewlet.py b/plone/app/discussion/tests/test_comments_viewlet.py\nindex 54a18bd5..de325e37 100644\n--- a/plone/app/discussion/tests/test_comments_viewlet.py\n+++ b/plone/app/discussion/tests/test_comments_viewlet.py\n@@ -13,6 +13,7 @@\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import TEST_USER_NAME\n+from plone.app.testing import TEST_USER_PASSWORD\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from z3c.form.interfaces import IFormLayer\n@@ -515,7 +516,7 @@ def test_can_review(self):\n         # Anonymous has no \'can review\' permission\n         self.assertFalse(self.viewlet.can_review())\n         # The reviewer role has the \'Review comments\' permission\n-        self.portal.acl_users._doAddUser("reviewer", "secret", ["Reviewer"], [])\n+        self.portal.acl_users._doAddUser("reviewer", TEST_USER_PASSWORD, ["Reviewer"], [])\n         login(self.portal, "reviewer")\n         self.assertTrue(self.viewlet.can_review())\n \ndiff --git a/plone/app/discussion/tests/test_workflow.py b/plone/app/discussion/tests/test_workflow.py\nindex ece7d8ac..39fb219c 100644\n--- a/plone/app/discussion/tests/test_workflow.py\n+++ b/plone/app/discussion/tests/test_workflow.py\n@@ -9,6 +9,7 @@\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import TEST_USER_NAME\n+from plone.app.testing import TEST_USER_PASSWORD\n from Products.CMFCore.permissions import View\n from Products.CMFCore.utils import _checkPermission as checkPerm\n from zope.component import createObject\n@@ -128,11 +129,11 @@ def setUp(self):\n             f"++conversation++default/{cid}",\n         )\n \n-        self.portal.acl_users._doAddUser("member", "secret", ["Member"], [])\n-        self.portal.acl_users._doAddUser("reviewer", "secret", ["Reviewer"], [])\n-        self.portal.acl_users._doAddUser("manager", "secret", ["Manager"], [])\n-        self.portal.acl_users._doAddUser("editor", " secret", ["Editor"], [])\n-        self.portal.acl_users._doAddUser("reader", "secret", ["Reader"], [])\n+        self.portal.acl_users._doAddUser("member", TEST_USER_PASSWORD, ["Member"], [])\n+        self.portal.acl_users._doAddUser("reviewer", TEST_USER_PASSWORD, ["Reviewer"], [])\n+        self.portal.acl_users._doAddUser("manager", TEST_USER_PASSWORD, ["Manager"], [])\n+        self.portal.acl_users._doAddUser("editor", TEST_USER_PASSWORD, ["Editor"], [])\n+        self.portal.acl_users._doAddUser("reader", TEST_USER_PASSWORD, ["Reader"], [])\n \n     def test_initial_workflow_state(self):\n         """Make sure the initial workflow state of a comment is \'private\'."""\n'

