Repository: plone.restapi


Branch: refs/heads/master
Date: 2023-04-01T10:44:50+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.restapi/commit/f90329dfe49aa483517861a610b5175d68e0b6be

fix deprecation warnings and proper isort (#1606)

* fix deprecation warnings and proper isort

* use latest Plone 6 release and make flake8 happy

* refactor uid_to_url to make it independent from implementation details of plone.app.uuid

Files changed:
A news/1606.bugfix
A src/plone/restapi/bbb.py
M .flake8
M .github/workflows/tests.yml
M .gitignore
M docs/source/conf.py
M performance/images.py
M performance/querystring-search.py
M plone-6.0.x.cfg
M requirements-6.0.txt
M setup.cfg
M setup.py
M src/plone/restapi/controlpanels/__init__.py
M src/plone/restapi/controlpanels/registry.py
M src/plone/restapi/controlpanels/rules.py
M src/plone/restapi/controlpanels/types.py
M src/plone/restapi/deserializer/blocks.py
M src/plone/restapi/deserializer/controlpanels/types.py
M src/plone/restapi/deserializer/local_roles.py
M src/plone/restapi/deserializer/mixins.py
M src/plone/restapi/deserializer/site.py
M src/plone/restapi/imaging.py
M src/plone/restapi/pas/plugin.py
M src/plone/restapi/search/handler.py
M src/plone/restapi/serializer/blocks.py
M src/plone/restapi/serializer/catalog.py
M src/plone/restapi/serializer/controlpanels/types.py
M src/plone/restapi/serializer/converters.py
M src/plone/restapi/serializer/discussion.py
M src/plone/restapi/serializer/dxcontent.py
M src/plone/restapi/serializer/site.py
M src/plone/restapi/serializer/summary.py
M src/plone/restapi/serializer/user.py
M src/plone/restapi/serializer/utils.py
M src/plone/restapi/serializer/vocabularies.py
M src/plone/restapi/services/addons/addons.py
M src/plone/restapi/services/aliases/add.py
M src/plone/restapi/services/aliases/delete.py
M src/plone/restapi/services/aliases/get.py
M src/plone/restapi/services/auth/login.py
M src/plone/restapi/services/content/add.py
M src/plone/restapi/services/content/tus.py
M src/plone/restapi/services/contextnavigation/get.py
M src/plone/restapi/services/email_send/post.py
M src/plone/restapi/services/history/get.py
M src/plone/restapi/services/locking/__init__.py
M src/plone/restapi/services/locking/locking.py
M src/plone/restapi/services/multilingual/locator.py
M src/plone/restapi/services/multilingual/pam.py
M src/plone/restapi/services/navigation/get.py
M src/plone/restapi/services/querystringsearch/get.py
M src/plone/restapi/services/rules/add.py
M src/plone/restapi/services/rules/delete.py
M src/plone/restapi/services/rules/get.py
M src/plone/restapi/services/rules/update.py
M src/plone/restapi/services/system/get.py
M src/plone/restapi/services/tiles/get.py
M src/plone/restapi/services/transactions/get.py
M src/plone/restapi/services/transactions/patch.py
M src/plone/restapi/services/types/add.py
M src/plone/restapi/services/types/delete.py
M src/plone/restapi/services/types/get.py
M src/plone/restapi/services/types/put.py
M src/plone/restapi/services/types/update.py
M src/plone/restapi/services/upgrade/post.py
M src/plone/restapi/services/users/add.py
M src/plone/restapi/services/users/get.py
M src/plone/restapi/services/users/update.py
M src/plone/restapi/services/userschema/user.py
M src/plone/restapi/services/workflow/info.py
M src/plone/restapi/services/workingcopy/create.py
M src/plone/restapi/services/workingcopy/get.py
M src/plone/restapi/services/workingcopy/update.py
M src/plone/restapi/setuphandlers.py
M src/plone/restapi/tests/helpers.py
M src/plone/restapi/tests/statictime.py
M src/plone/restapi/tests/test_addons.py
M src/plone/restapi/tests/test_content_utils.py
M src/plone/restapi/tests/test_documentation.py
M src/plone/restapi/tests/test_search.py
M src/plone/restapi/tests/test_serializer_user.py
M src/plone/restapi/tests/test_services_breadcrumbs.py
M src/plone/restapi/tests/test_services_contextnavigation.py
M src/plone/restapi/tests/test_services_controlpanel_dexterity_types.py
M src/plone/restapi/tests/test_services_linkintegrity.py
M src/plone/restapi/tests/test_services_navigation.py
M src/plone/restapi/tests/test_services_types.py
M src/plone/restapi/tests/test_services_users.py
M src/plone/restapi/tests/test_services_userschema.py
M src/plone/restapi/tests/test_setup.py
M src/plone/restapi/tests/test_site_deserializer.py
M src/plone/restapi/tests/test_site_serializer.py
M src/plone/restapi/tests/test_statictime.py
M src/plone/restapi/tests/test_system.py
M src/plone/restapi/tests/test_translations.py
M src/plone/restapi/types/adapters.py
M src/plone/restapi/types/utils.py
M src/plone/restapi/upgrades/to0005.py
M src/plone/restapi/upgrades/to0006.py

b'diff --git a/.flake8 b/.flake8\nindex 9ec27e5656..0d6e504d96 100644\n--- a/.flake8\n+++ b/.flake8\n@@ -5,3 +5,5 @@ max-line-length = 100000\n extend-ignore =\n     # See https://github.com/PyCQA/pycodestyle/issues/373\n     E203,\n+per-file-ignores =\n+    src/plone/restapi/bbb.py:F401\ndiff --git a/.github/workflows/tests.yml b/.github/workflows/tests.yml\nindex 0a305371ec..963a5d9299 100644\n--- a/.github/workflows/tests.yml\n+++ b/.github/workflows/tests.yml\n@@ -17,6 +17,8 @@ jobs:\n             plone-version: \'6.0\'\n           - python-version: \'3.10\'\n             plone-version: \'6.0\'\n+          - python-version: \'3.11\'\n+            plone-version: \'6.0\'\n \n     steps:\n       # git checkout\ndiff --git a/.gitignore b/.gitignore\nindex a83f823236..c8eac2e33f 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -24,6 +24,7 @@ docs/.DS_Store\n /lib\n /lib64\n /local\n+/venv\n /.mr.developer.cfg\n *.mo\n docs/_build\ndiff --git a/docs/source/conf.py b/docs/source/conf.py\nindex 11eb72e9d1..0d2d2a8046 100644\n--- a/docs/source/conf.py\n+++ b/docs/source/conf.py\n@@ -10,13 +10,15 @@\n # All configuration values have a default; values that are commented out\n # serve to show the default.\n \n+import datetime\n+\n # If extensions (or modules to document with autodoc) are in another directory,\n # add these directories to sys.path here. If the directory is relative to the\n # documentation root, use os.path.abspath to make it absolute, like shown here.\n # sys.path.insert(0, os.path.abspath("."))\n import os\n import sys\n-import datetime\n+\n \n sys.path.insert(0, os.path.abspath("../../"))\n \ndiff --git a/news/1606.bugfix b/news/1606.bugfix\nnew file mode 100644\nindex 0000000000..d97e31903c\n--- /dev/null\n+++ b/news/1606.bugfix\n@@ -0,0 +1,7 @@\n+Fix a bunch of deprecation warnings in a Plone 5.2 compatible way.\n+Applied propert isort.\n+Fixed unclosed file issues in a test.\n+Added Python 3.11 to test matrix.\n+[jensens]\n+\n+\ndiff --git a/performance/images.py b/performance/images.py\nindex 6ab5b45bb2..5dea23d593 100644\n--- a/performance/images.py\n+++ b/performance/images.py\n@@ -1,4 +1,6 @@\n-from locust import HttpUser, TaskSet, between\n+from locust import between\n+from locust import HttpUser\n+from locust import TaskSet\n \n \n def image_01mb_get(self):\ndiff --git a/performance/querystring-search.py b/performance/querystring-search.py\nindex 00c7e3b327..20140c58f3 100644\n--- a/performance/querystring-search.py\n+++ b/performance/querystring-search.py\n@@ -1,4 +1,5 @@\n-from locust import HttpUser, task\n+from locust import HttpUser\n+from locust import task\n \n \n class QuerystringSearchAnonymousUser(HttpUser):\ndiff --git a/plone-6.0.x.cfg b/plone-6.0.x.cfg\nindex 10ee2abe18..8c9794b00f 100644\n--- a/plone-6.0.x.cfg\n+++ b/plone-6.0.x.cfg\n@@ -1,6 +1,6 @@\n [buildout]\n extends =\n-    https://dist.plone.org/release/6.0.0/versions.cfg\n+    https://dist.plone.org/release/6.0.3/versions.cfg\n     base.cfg\n \n [buildout:python37]\ndiff --git a/requirements-6.0.txt b/requirements-6.0.txt\nindex afdc481f80..481650f77c 100644\n--- a/requirements-6.0.txt\n+++ b/requirements-6.0.txt\n@@ -1 +1 @@\n--r https://dist.plone.org/release/6.0.0/requirements.txt\n+-r https://dist.plone.org/release/6.0.3/requirements.txt\ndiff --git a/setup.cfg b/setup.cfg\nindex 4cf23ce541..f7fa3f6cee 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -1,4 +1,7 @@\n [bdist_wheel]\n # Do not make the generated wheels have `py2` tag\n # See https://packaging.python.org/guides/dropping-older-python-versions/#dealing-with-the-universal-wheels\n-universal = 0 \n\\ No newline at end of file\n+universal = 0\n+\n+[isort]\n+profile = plone\n\\ No newline at end of file\ndiff --git a/setup.py b/setup.py\nindex 951243850b..4b2f4a214f 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,6 +1,9 @@\n-from setuptools import setup, find_packages\n+from setuptools import find_packages\n+from setuptools import setup\n+\n import sys\n \n+\n version = "8.35.4.dev0"\n \n assert sys.version_info >= (\ndiff --git a/src/plone/restapi/bbb.py b/src/plone/restapi/bbb.py\nnew file mode 100644\nindex 0000000000..6e54f1d84e\n--- /dev/null\n+++ b/src/plone/restapi/bbb.py\n@@ -0,0 +1,39 @@\n+try:\n+    from plone.base.defaultpage import is_default_page\n+    from plone.base.interfaces import IConstrainTypes\n+    from plone.base.interfaces import IEditingSchema\n+    from plone.base.interfaces import IImagingSchema\n+    from plone.base.interfaces import ILanguage\n+    from plone.base.interfaces import IMailSchema\n+    from plone.base.interfaces import INavigationSchema\n+    from plone.base.interfaces import INonInstallable\n+    from plone.base.interfaces import INonStructuralFolder\n+    from plone.base.interfaces import IPloneSiteRoot\n+    from plone.base.interfaces import ISearchSchema\n+    from plone.base.interfaces import ISecuritySchema\n+    from plone.base.interfaces import ISelectableConstrainTypes\n+    from plone.base.interfaces import ISiteSchema\n+    from plone.base.utils import base_hasattr\n+    from plone.base.utils import safe_callable\n+    from plone.base.utils import safe_hasattr\n+    from plone.base.utils import safe_text\n+except ImportError:\n+    # BBB Plone 5.2\n+    from Products.CMFPlone.defaultpage import is_default_page\n+    from Products.CMFPlone.interfaces import IConstrainTypes\n+    from Products.CMFPlone.interfaces import IEditingSchema\n+    from Products.CMFPlone.interfaces import IImagingSchema\n+    from Products.CMFPlone.interfaces import ILanguage\n+    from Products.CMFPlone.interfaces import IMailSchema\n+    from Products.CMFPlone.interfaces import INavigationSchema\n+    from Products.CMFPlone.interfaces import INonInstallable\n+    from Products.CMFPlone.interfaces import INonStructuralFolder\n+    from Products.CMFPlone.interfaces import IPloneSiteRoot\n+    from Products.CMFPlone.interfaces import ISearchSchema\n+    from Products.CMFPlone.interfaces import ISecuritySchema\n+    from Products.CMFPlone.interfaces import ISelectableConstrainTypes\n+    from Products.CMFPlone.interfaces import ISiteSchema\n+    from Products.CMFPlone.utils import base_hasattr\n+    from Products.CMFPlone.utils import safe_callable\n+    from Products.CMFPlone.utils import safe_hasattr\n+    from Products.CMFPlone.utils import safe_text\ndiff --git a/src/plone/restapi/controlpanels/__init__.py b/src/plone/restapi/controlpanels/__init__.py\nindex 993eca30fb..a19875be22 100644\n--- a/src/plone/restapi/controlpanels/__init__.py\n+++ b/src/plone/restapi/controlpanels/__init__.py\n@@ -1,7 +1,7 @@\n-from zope.interface import implementer\n-from zope.publisher.interfaces import NotFound\n from plone.restapi.controlpanels.interfaces import IControlpanel\n from Products.CMFCore.utils import getToolByName\n+from zope.interface import implementer\n+from zope.publisher.interfaces import NotFound\n \n \n @implementer(IControlpanel)\ndiff --git a/src/plone/restapi/controlpanels/registry.py b/src/plone/restapi/controlpanels/registry.py\nindex 4eac5da051..db72843bef 100644\n--- a/src/plone/restapi/controlpanels/registry.py\n+++ b/src/plone/restapi/controlpanels/registry.py\n@@ -1,20 +1,37 @@\n from importlib import import_module\n+from plone.restapi.controlpanels import RegistryConfigletPanel\n from zope.component import adapter\n+from zope.globalrequest import getRequest\n from zope.i18n import translate\n from zope.interface import Interface\n-from zope.globalrequest import getRequest\n-from Products.CMFPlone.interfaces.controlpanel import IDateAndTimeSchema\n-from Products.CMFPlone.interfaces.controlpanel import IEditingSchema\n-from Products.CMFPlone.interfaces.controlpanel import IImagingSchema\n-from Products.CMFPlone.interfaces.controlpanel import IMailSchema\n-from Products.CMFPlone.interfaces.controlpanel import IMarkupSchema\n-from Products.CMFPlone.interfaces.controlpanel import INavigationSchema\n-from Products.CMFPlone.interfaces.controlpanel import ISearchSchema\n-from Products.CMFPlone.interfaces.controlpanel import ISecuritySchema\n-from Products.CMFPlone.interfaces.controlpanel import ISiteSchema\n-from Products.CMFPlone.interfaces.controlpanel import ISocialMediaSchema\n-from Products.CMFPlone.interfaces.controlpanel import IUserGroupsSettingsSchema\n-from plone.restapi.controlpanels import RegistryConfigletPanel\n+\n+\n+try:\n+    from plone.base.interfaces.controlpanel import IDateAndTimeSchema\n+    from plone.base.interfaces.controlpanel import IEditingSchema\n+    from plone.base.interfaces.controlpanel import IImagingSchema\n+    from plone.base.interfaces.controlpanel import IMailSchema\n+    from plone.base.interfaces.controlpanel import IMarkupSchema\n+    from plone.base.interfaces.controlpanel import INavigationSchema\n+    from plone.base.interfaces.controlpanel import ISearchSchema\n+    from plone.base.interfaces.controlpanel import ISecuritySchema\n+    from plone.base.interfaces.controlpanel import ISiteSchema\n+    from plone.base.interfaces.controlpanel import ISocialMediaSchema\n+    from plone.base.interfaces.controlpanel import IUserGroupsSettingsSchema\n+except ImportError:  # pragma: no cover\n+    # Plone 5.2\n+    from Products.CMFPlone.interfaces.controlpanel import IDateAndTimeSchema\n+    from Products.CMFPlone.interfaces.controlpanel import IEditingSchema\n+    from Products.CMFPlone.interfaces.controlpanel import IImagingSchema\n+    from Products.CMFPlone.interfaces.controlpanel import IMailSchema\n+    from Products.CMFPlone.interfaces.controlpanel import IMarkupSchema\n+    from Products.CMFPlone.interfaces.controlpanel import INavigationSchema\n+    from Products.CMFPlone.interfaces.controlpanel import ISearchSchema\n+    from Products.CMFPlone.interfaces.controlpanel import ISecuritySchema\n+    from Products.CMFPlone.interfaces.controlpanel import ISiteSchema\n+    from Products.CMFPlone.interfaces.controlpanel import ISocialMediaSchema\n+    from Products.CMFPlone.interfaces.controlpanel import IUserGroupsSettingsSchema\n+\n \n try:\n     from plone.i18n.interfaces import ILanguageSchema\ndiff --git a/src/plone/restapi/controlpanels/rules.py b/src/plone/restapi/controlpanels/rules.py\nindex 0433024a87..86d4454b50 100644\n--- a/src/plone/restapi/controlpanels/rules.py\n+++ b/src/plone/restapi/controlpanels/rules.py\n@@ -1,3 +1,10 @@\n+from plone.restapi.controlpanels import RegistryConfigletPanel\n+from plone.restapi.controlpanels.interfaces import IContentRulesControlpanel\n+from plone.restapi.deserializer import json_body\n+from plone.restapi.interfaces import IPloneRestapiLayer\n+from plone.restapi.interfaces import ISerializeToJson\n+from plone.restapi.serializer.controlpanels.rules import rule_schema_as_json\n+from z3c.form import interfaces\n from zExceptions import BadRequest\n from zope.component import adapter\n from zope.component import queryMultiAdapter\n@@ -5,13 +12,7 @@\n from zope.interface import implementer\n from zope.interface import Interface\n from zope.publisher.interfaces.browser import IBrowserPublisher\n-from z3c.form import interfaces\n-from plone.restapi.interfaces import ISerializeToJson\n-from plone.restapi.interfaces import IPloneRestapiLayer\n-from plone.restapi.controlpanels import RegistryConfigletPanel\n-from plone.restapi.controlpanels.interfaces import IContentRulesControlpanel\n-from plone.restapi.deserializer import json_body\n-from plone.restapi.serializer.controlpanels.rules import rule_schema_as_json\n+\n import plone.protect.interfaces\n \n \ndiff --git a/src/plone/restapi/controlpanels/types.py b/src/plone/restapi/controlpanels/types.py\nindex dcc7b24d24..0ec3fa4f0a 100644\n--- a/src/plone/restapi/controlpanels/types.py\n+++ b/src/plone/restapi/controlpanels/types.py\n@@ -1,18 +1,19 @@\n+from plone.i18n.normalizer import idnormalizer\n+from plone.restapi.controlpanels import RegistryConfigletPanel\n+from plone.restapi.controlpanels.interfaces import IDexterityTypesControlpanel\n+from plone.restapi.deserializer import json_body\n+from plone.restapi.interfaces import IDeserializeFromJson\n+from plone.restapi.interfaces import IPloneRestapiLayer\n+from plone.restapi.interfaces import ISerializeToJson\n from zExceptions import BadRequest\n from zope.component import adapter\n from zope.component import queryMultiAdapter\n from zope.interface import alsoProvides\n from zope.interface import implementer\n from zope.interface import Interface\n-from plone.i18n.normalizer import idnormalizer\n-from plone.restapi.interfaces import ISerializeToJson\n-from plone.restapi.interfaces import IDeserializeFromJson\n-from plone.restapi.deserializer import json_body\n-from plone.restapi.controlpanels import RegistryConfigletPanel\n-from plone.restapi.controlpanels.interfaces import IDexterityTypesControlpanel\n-import plone.protect.interfaces\n from zope.interface import noLongerProvides\n-from plone.restapi.interfaces import IPloneRestapiLayer\n+\n+import plone.protect.interfaces\n \n \n @adapter(Interface, IPloneRestapiLayer)\ndiff --git a/src/plone/restapi/deserializer/blocks.py b/src/plone/restapi/deserializer/blocks.py\nindex c9dd35f321..b5a7573c01 100644\n--- a/src/plone/restapi/deserializer/blocks.py\n+++ b/src/plone/restapi/deserializer/blocks.py\n@@ -1,13 +1,13 @@\n from collections import deque\n from copy import deepcopy\n from plone import api\n+from plone.restapi.bbb import IPloneSiteRoot\n from plone.restapi.behaviors import IBlocks\n from plone.restapi.deserializer.dxfields import DefaultFieldDeserializer\n from plone.restapi.deserializer.utils import path2uid\n from plone.restapi.interfaces import IBlockFieldDeserializationTransformer\n from plone.restapi.interfaces import IFieldDeserializer\n from plone.schema import IJSONField\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n from zope.component import adapter\n from zope.component import subscribers\n from zope.interface import implementer\ndiff --git a/src/plone/restapi/deserializer/controlpanels/types.py b/src/plone/restapi/deserializer/controlpanels/types.py\nindex 13c188fa55..8c55c47e93 100644\n--- a/src/plone/restapi/deserializer/controlpanels/types.py\n+++ b/src/plone/restapi/deserializer/controlpanels/types.py\n@@ -2,7 +2,8 @@\n from plone.restapi.deserializer import json_body\n from plone.restapi.deserializer.controlpanels import ControlpanelDeserializeFromJson\n from plone.restapi.interfaces import IDeserializeFromJson\n-from zope.component import adapter, queryMultiAdapter\n+from zope.component import adapter\n+from zope.component import queryMultiAdapter\n from zope.interface import implementer\n \n \ndiff --git a/src/plone/restapi/deserializer/local_roles.py b/src/plone/restapi/deserializer/local_roles.py\nindex b1e167db50..7972986d24 100644\n--- a/src/plone/restapi/deserializer/local_roles.py\n+++ b/src/plone/restapi/deserializer/local_roles.py\n@@ -1,8 +1,8 @@\n from AccessControl.interfaces import IRoleManager\n+from plone.restapi.bbb import IPloneSiteRoot\n from plone.restapi.deserializer import json_body\n from plone.restapi.interfaces import IDeserializeFromJson\n from Products.CMFCore.interfaces import ICatalogAware\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n from zope.component import adapter\n from zope.component import getMultiAdapter\n from zope.event import notify\ndiff --git a/src/plone/restapi/deserializer/mixins.py b/src/plone/restapi/deserializer/mixins.py\nindex dcd0e5829d..438ff37837 100644\n--- a/src/plone/restapi/deserializer/mixins.py\n+++ b/src/plone/restapi/deserializer/mixins.py\n@@ -1,6 +1,6 @@\n from plone.folder.interfaces import IExplicitOrdering\n+from plone.restapi.bbb import IPloneSiteRoot\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces.siteroot import IPloneSiteRoot\n from zExceptions import BadRequest\n \n \ndiff --git a/src/plone/restapi/deserializer/site.py b/src/plone/restapi/deserializer/site.py\nindex fa58309a3c..ec9e66ccd8 100644\n--- a/src/plone/restapi/deserializer/site.py\n+++ b/src/plone/restapi/deserializer/site.py\n@@ -1,9 +1,9 @@\n from importlib import import_module\n+from plone.restapi.bbb import IPloneSiteRoot\n from plone.restapi.deserializer import json_body\n from plone.restapi.deserializer.dxcontent import DeserializeFromJson\n from plone.restapi.interfaces import IBlockFieldDeserializationTransformer\n from plone.restapi.interfaces import IDeserializeFromJson\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n from zope.component import adapter\n from zope.component import subscribers\n from zope.interface import implementer\ndiff --git a/src/plone/restapi/imaging.py b/src/plone/restapi/imaging.py\nindex 1778f71382..087ee9f32a 100644\n--- a/src/plone/restapi/imaging.py\n+++ b/src/plone/restapi/imaging.py\n@@ -89,7 +89,7 @@ def get_scale_infos():\n     from plone.registry.interfaces import IRegistry\n \n     registry = getUtility(IRegistry)\n-    from Products.CMFPlone.interfaces import IImagingSchema\n+    from plone.restapi.bbb import IImagingSchema\n \n     imaging_settings = registry.forInterface(IImagingSchema, prefix="plone")\n     allowed_sizes = imaging_settings.allowed_sizes\ndiff --git a/src/plone/restapi/pas/plugin.py b/src/plone/restapi/pas/plugin.py\nindex 456d6ea8af..6e76935f0d 100644\n--- a/src/plone/restapi/pas/plugin.py\n+++ b/src/plone/restapi/pas/plugin.py\n@@ -6,8 +6,8 @@\n from datetime import timedelta\n from plone.keyring.interfaces import IKeyManager\n from plone.keyring.keyring import GenerateSecret\n-from plone.restapi import exceptions\n from plone.restapi import deserializer\n+from plone.restapi import exceptions\n from Products.CMFCore.permissions import ManagePortal\n from Products.PageTemplates.PageTemplateFile import PageTemplateFile\n from Products.PluggableAuthService.interfaces.plugins import IAuthenticationPlugin\ndiff --git a/src/plone/restapi/search/handler.py b/src/plone/restapi/search/handler.py\nindex 042ef3a2b9..8764a773df 100644\n--- a/src/plone/restapi/search/handler.py\n+++ b/src/plone/restapi/search/handler.py\n@@ -1,13 +1,20 @@\n from plone.registry.interfaces import IRegistry\n+from plone.restapi.bbb import ISearchSchema\n from plone.restapi.interfaces import ISerializeToJson\n from plone.restapi.interfaces import IZCatalogCompatibleQuery\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.browser.navtree import getNavigationRoot\n-from Products.CMFPlone.interfaces import ISearchSchema\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n \n \n+try:\n+    from plone.base.navigationroot import get_navigation_root\n+except ImportError:\n+    from plone.app.layout.navigation.root import (\n+        getNavigationRoot as get_navigation_root,\n+    )\n+\n+\n class SearchHandler:\n     """Executes a catalog search based on a query dict, and returns\n     JSON compatible results.\n@@ -116,7 +123,7 @@ def filter_query(self, query):\n \n         # respect navigation root\n         if "path" not in query:\n-            query["path"] = {"query": getNavigationRoot(self.context)}\n+            query["path"] = {"query": get_navigation_root(self.context)}\n \n             vhm_physical_path = self.request.get("VirtualRootPhysicalPath")\n             # if vhm trick is applied, we should present a stripped path, as it will be\ndiff --git a/src/plone/restapi/serializer/blocks.py b/src/plone/restapi/serializer/blocks.py\nindex 8587bcce47..a53f1734e5 100644\n--- a/src/plone/restapi/serializer/blocks.py\n+++ b/src/plone/restapi/serializer/blocks.py\n@@ -1,5 +1,7 @@\n from copy import deepcopy\n+from plone.restapi.bbb import IPloneSiteRoot\n from plone.restapi.behaviors import IBlocks\n+from plone.restapi.deserializer.blocks import iterate_children\n from plone.restapi.deserializer.blocks import SlateBlockTransformer\n from plone.restapi.deserializer.blocks import transform_links\n from plone.restapi.interfaces import IBlockFieldSerializationTransformer\n@@ -8,14 +10,12 @@\n from plone.restapi.serializer.dxfields import DefaultFieldSerializer\n from plone.restapi.serializer.utils import uid_to_url\n from plone.schema import IJSONField\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n from zope.component import adapter\n from zope.component import subscribers\n from zope.globalrequest import getRequest\n from zope.interface import implementer\n from zope.interface import Interface\n from zope.publisher.interfaces.browser import IBrowserRequest\n-from plone.restapi.deserializer.blocks import iterate_children\n \n import copy\n import os\ndiff --git a/src/plone/restapi/serializer/catalog.py b/src/plone/restapi/serializer/catalog.py\nindex f09e1288ca..3fd0c0f4d9 100644\n--- a/src/plone/restapi/serializer/catalog.py\n+++ b/src/plone/restapi/serializer/catalog.py\n@@ -8,6 +8,7 @@\n \n import logging\n \n+\n try:\n     from ZTUtils.Lazy import Lazy\n except ImportError:\ndiff --git a/src/plone/restapi/serializer/controlpanels/types.py b/src/plone/restapi/serializer/controlpanels/types.py\nindex 6e33b41788..d450232913 100644\n--- a/src/plone/restapi/serializer/controlpanels/types.py\n+++ b/src/plone/restapi/serializer/controlpanels/types.py\n@@ -1,18 +1,18 @@\n-from Products.CMFCore.utils import getToolByName\n from plone.dexterity.interfaces import IDexterityFTI\n-from plone.restapi.interfaces import ISerializeToJson\n-from plone.restapi.interfaces import IFieldSerializer\n from plone.restapi.controlpanels.interfaces import IDexterityTypesControlpanel\n-from plone.restapi.serializer.controlpanels import SERVICE_ID\n+from plone.restapi.interfaces import IFieldSerializer\n+from plone.restapi.interfaces import ISerializeToJson\n from plone.restapi.serializer.controlpanels import ControlpanelSerializeToJson\n from plone.restapi.serializer.controlpanels import get_jsonschema_for_controlpanel\n+from plone.restapi.serializer.controlpanels import SERVICE_ID\n from plone.restapi.serializer.converters import json_compatible\n+from Products.CMFCore.utils import getToolByName\n from zope.component import adapter\n from zope.component import getAllUtilitiesRegisteredFor\n from zope.component import queryMultiAdapter\n from zope.component.hooks import getSite\n-from zope.interface import implementer\n from zope.i18n import translate\n+from zope.interface import implementer\n \n \n @implementer(ISerializeToJson)\ndiff --git a/src/plone/restapi/serializer/converters.py b/src/plone/restapi/serializer/converters.py\nindex 86b46969a8..6da75b7540 100644\n--- a/src/plone/restapi/serializer/converters.py\n+++ b/src/plone/restapi/serializer/converters.py\n@@ -8,9 +8,9 @@\n from persistent.mapping import PersistentMapping\n from plone.app.textfield.interfaces import IRichTextValue\n from plone.dexterity.interfaces import IDexterityContent\n+from plone.restapi.bbb import safe_text\n from plone.restapi.interfaces import IContextawareJsonCompatible\n from plone.restapi.interfaces import IJsonCompatible\n-from Products.CMFPlone.utils import safe_unicode\n from zope.component import adapter\n from zope.component import queryMultiAdapter\n from zope.globalrequest import getRequest\n@@ -86,13 +86,13 @@ def default_converter(value):\n @adapter(Decimal)\n @implementer(IJsonCompatible)\n def decimal_converter(value):\n-    return safe_unicode(str(value))\n+    return safe_text(str(value))\n \n \n @adapter(bytes)\n @implementer(IJsonCompatible)\n def bytes_converter(value):\n-    return safe_unicode(value, "utf-8")\n+    return safe_text(value, "utf-8")\n \n \n @adapter(list)\ndiff --git a/src/plone/restapi/serializer/discussion.py b/src/plone/restapi/serializer/discussion.py\nindex 958e0b1990..b6756a4176 100644\n--- a/src/plone/restapi/serializer/discussion.py\n+++ b/src/plone/restapi/serializer/discussion.py\n@@ -5,9 +5,9 @@\n from plone.restapi.interfaces import ISerializeToJson\n from plone.restapi.services.discussion.utils import can_delete\n from plone.restapi.services.discussion.utils import can_delete_own\n-from plone.restapi.services.discussion.utils import can_view\n from plone.restapi.services.discussion.utils import can_edit\n from plone.restapi.services.discussion.utils import can_reply\n+from plone.restapi.services.discussion.utils import can_view\n from plone.restapi.services.discussion.utils import delete_own_comment_allowed\n from plone.restapi.services.discussion.utils import edit_comment_allowed\n from plone.restapi.services.users.get import getPortraitUrl\ndiff --git a/src/plone/restapi/serializer/dxcontent.py b/src/plone/restapi/serializer/dxcontent.py\nindex 4f1331b327..e776bea0ff 100644\n--- a/src/plone/restapi/serializer/dxcontent.py\n+++ b/src/plone/restapi/serializer/dxcontent.py\n@@ -29,6 +29,7 @@\n from zope.schema import getFields\n from zope.security.interfaces import IPermission\n \n+\n try:\n     # plone.app.iterate is by intend not part of Products.CMFPlone dependencies\n     # so we can not rely on having it\ndiff --git a/src/plone/restapi/serializer/site.py b/src/plone/restapi/serializer/site.py\nindex e95c3ef21d..a1b14d1720 100644\n--- a/src/plone/restapi/serializer/site.py\n+++ b/src/plone/restapi/serializer/site.py\n@@ -3,6 +3,7 @@\n from plone.autoform.interfaces import READ_PERMISSIONS_KEY\n from plone.dexterity.utils import iterSchemata\n from plone.restapi.batching import HypermediaBatch\n+from plone.restapi.bbb import IPloneSiteRoot\n from plone.restapi.interfaces import IFieldSerializer\n from plone.restapi.interfaces import ISerializeToJson\n from plone.restapi.interfaces import ISerializeToJsonSummary\n@@ -12,7 +13,6 @@\n from plone.restapi.services.locking import lock_info\n from plone.supermodel.utils import mergedTaggedValueDict\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n from zope.component import adapter\n from zope.component import getMultiAdapter\n from zope.component import queryMultiAdapter\n@@ -24,6 +24,7 @@\n \n import json\n \n+\n HAS_PLONE_6 = getattr(\n     import_module("Products.CMFPlone.factory"), "PLONE60MARKER", False\n )\ndiff --git a/src/plone/restapi/serializer/summary.py b/src/plone/restapi/serializer/summary.py\nindex 64768ecfda..da9efee1f9 100644\n--- a/src/plone/restapi/serializer/summary.py\n+++ b/src/plone/restapi/serializer/summary.py\n@@ -1,15 +1,15 @@\n from plone.app.contentlisting.interfaces import IContentListingObject\n+from plone.restapi.bbb import IPloneSiteRoot\n from plone.restapi.deserializer import json_body\n-from plone.restapi.interfaces import ISerializeToJsonSummary\n from plone.restapi.interfaces import IJSONSummarySerializerMetadata\n+from plone.restapi.interfaces import ISerializeToJsonSummary\n from plone.restapi.serializer.converters import json_compatible\n from Products.CMFCore.utils import getToolByName\n from Products.CMFCore.WorkflowCore import WorkflowException\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n from zope.component import adapter\n+from zope.component import getAllUtilitiesRegisteredFor\n from zope.interface import implementer\n from zope.interface import Interface\n-from zope.component import getAllUtilitiesRegisteredFor\n \n \n @implementer(IJSONSummarySerializerMetadata)\ndiff --git a/src/plone/restapi/serializer/user.py b/src/plone/restapi/serializer/user.py\nindex 1fd851a9b4..bb2aabcc8f 100644\n--- a/src/plone/restapi/serializer/user.py\n+++ b/src/plone/restapi/serializer/user.py\n@@ -1,12 +1,12 @@\n from plone.app.users.browser.userdatapanel import getUserDataSchema\n from plone.restapi.batching import HypermediaBatch\n+from plone.restapi.bbb import safe_text\n from plone.restapi.interfaces import ISerializeToJson\n from plone.restapi.interfaces import ISerializeToJsonSummary\n-from plone.restapi.services.users.get import getPortraitUrl\n from plone.restapi.serializer.converters import json_compatible\n+from plone.restapi.services.users.get import getPortraitUrl\n from Products.CMFCore.interfaces._tools import IMemberData\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.utils import safe_unicode\n from zope.component import adapter\n from zope.component.hooks import getSite\n from zope.interface import implementer\n@@ -48,7 +48,7 @@ def __call__(self):\n                 if value == "":\n                     value = None\n                 if value:\n-                    value = safe_unicode(value)\n+                    value = safe_text(value)\n             data[name] = json_compatible(value)\n \n         return data\ndiff --git a/src/plone/restapi/serializer/utils.py b/src/plone/restapi/serializer/utils.py\nindex f9506c9ce0..38c4d514c2 100644\n--- a/src/plone/restapi/serializer/utils.py\n+++ b/src/plone/restapi/serializer/utils.py\n@@ -1,5 +1,4 @@\n-from plone.outputfilters.browser.resolveuid import uuidToObject\n-from plone.outputfilters.browser.resolveuid import uuidToURL\n+from plone.app.uuid.utils import uuidToCatalogBrain\n from plone.restapi.interfaces import IObjectPrimaryFieldTarget\n from zope.component import queryMultiAdapter\n \n@@ -10,6 +9,12 @@\n \n \n def uid_to_url(path):\n+    """turns a resolveuid url into a real url.\n+\n+    This uses the catalog first, but wake up the object to check if there is\n+    an IObjectPrimaryFieldTarget on this object. If so, it will return the\n+    target url instead of the object url.\n+    """\n     if not path:\n         return ""\n     match = RESOLVEUID_RE.match(path)\n@@ -17,18 +22,19 @@ def uid_to_url(path):\n         return path\n \n     uid, suffix = match.groups()\n-    href = uuidToURL(uid)\n-    if href is None:\n+    brain = uuidToCatalogBrain(uid)\n+    if brain is None:\n         return path\n+    href = brain.getURL()\n     if suffix:\n-        href += "/" + suffix\n-    else:\n-        target_object = uuidToObject(uid)\n-        if target_object:\n-            adapter = queryMultiAdapter(\n-                (target_object, target_object.REQUEST),\n-                IObjectPrimaryFieldTarget,\n-            )\n-            if adapter and adapter():\n-                href = adapter()\n+        return href + "/" + suffix\n+    target_object = brain._unrestrictedGetObject()\n+    adapter = queryMultiAdapter(\n+        (target_object, target_object.REQUEST),\n+        IObjectPrimaryFieldTarget,\n+    )\n+    if adapter:\n+        a_href = adapter()\n+        if a_href:\n+            return a_href\n     return href\ndiff --git a/src/plone/restapi/serializer/vocabularies.py b/src/plone/restapi/serializer/vocabularies.py\nindex e1dcb4b003..380040f2ca 100644\n--- a/src/plone/restapi/serializer/vocabularies.py\n+++ b/src/plone/restapi/serializer/vocabularies.py\n@@ -1,6 +1,6 @@\n from plone.restapi.batching import HypermediaBatch\n+from plone.restapi.bbb import safe_text\n from plone.restapi.interfaces import ISerializeToJson\n-from Products.CMFPlone.utils import safe_unicode\n from zope.component import adapter\n from zope.component import getMultiAdapter\n from zope.i18n import translate\n@@ -27,7 +27,7 @@ def __init__(self, context, request):\n \n     def __call__(self, vocabulary_id):\n         vocabulary = self.context\n-        title = safe_unicode(self.request.form.get("title", ""))\n+        title = safe_text(self.request.form.get("title", ""))\n         token = self.request.form.get("token", "")\n         tokens = self.request.form.get("tokens", [])\n         b_size = self.request.form.get("b_size", "")\n@@ -59,7 +59,7 @@ def __call__(self, vocabulary_id):\n                         continue\n                     terms.append(term)\n             else:\n-                term_title = safe_unicode(getattr(term, "title", None) or "")\n+                term_title = safe_text(getattr(term, "title", None) or "")\n                 if (\n                     title.lower()\n                     not in translate(term_title, context=self.request).lower()\ndiff --git a/src/plone/restapi/services/addons/addons.py b/src/plone/restapi/services/addons/addons.py\nindex a849dcc7ba..974b2398ee 100644\n--- a/src/plone/restapi/services/addons/addons.py\n+++ b/src/plone/restapi/services/addons/addons.py\n@@ -1,7 +1,6 @@\n from plone.memoize import view\n+from plone.restapi.bbb import INonInstallable\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import INonInstallable\n from Products.GenericSetup import EXTENSION\n from Products.GenericSetup.tool import UNKNOWN\n from zope.component import getAllUtilitiesRegisteredFor\n@@ -11,6 +10,12 @@\n import pkg_resources\n \n \n+try:\n+    from plone.base import PloneMessageFactory as _\n+except ImportError:\n+    from Products.CMFPlone import PloneMessageFactory as _\n+\n+\n logger = logging.getLogger("Plone")\n \n \ndiff --git a/src/plone/restapi/services/aliases/add.py b/src/plone/restapi/services/aliases/add.py\nindex 5ab2cf41ec..555fbdbe0f 100644\n--- a/src/plone/restapi/services/aliases/add.py\n+++ b/src/plone/restapi/services/aliases/add.py\n@@ -1,15 +1,16 @@\n+from DateTime import DateTime\n+from plone.app.redirector.interfaces import IRedirectionStorage\n+from plone.restapi import _\n from plone.restapi.deserializer import json_body\n from plone.restapi.services import Service\n+from Products.CMFPlone.controlpanel.browser.redirects import absolutize_path\n+from zExceptions import BadRequest\n+from zope.component import getMultiAdapter\n+from zope.component import getUtility\n from zope.interface import alsoProvides\n from zope.interface import implementer\n from zope.publisher.interfaces import IPublishTraverse\n-from zope.component import getUtility\n-from plone.app.redirector.interfaces import IRedirectionStorage\n-from Products.CMFPlone.controlpanel.browser.redirects import absolutize_path\n-from zope.component import getMultiAdapter\n-from zExceptions import BadRequest\n-from DateTime import DateTime\n-from plone.restapi import _\n+\n import plone.protect.interfaces\n \n \ndiff --git a/src/plone/restapi/services/aliases/delete.py b/src/plone/restapi/services/aliases/delete.py\nindex a0b8d79a6c..329ee9b67d 100644\n--- a/src/plone/restapi/services/aliases/delete.py\n+++ b/src/plone/restapi/services/aliases/delete.py\n@@ -1,12 +1,13 @@\n+from plone.app.redirector.interfaces import IRedirectionStorage\n from plone.restapi.deserializer import json_body\n from plone.restapi.services import Service\n+from plone.restapi.services.aliases.get import deroot_path\n+from Products.CMFPlone.controlpanel.browser.redirects import absolutize_path\n+from zope.component import getUtility\n from zope.interface import alsoProvides\n from zope.interface import implementer\n from zope.publisher.interfaces import IPublishTraverse\n-from zope.component import getUtility\n-from plone.app.redirector.interfaces import IRedirectionStorage\n-from Products.CMFPlone.controlpanel.browser.redirects import absolutize_path\n-from plone.restapi.services.aliases.get import deroot_path\n+\n import plone.protect.interfaces\n \n \ndiff --git a/src/plone/restapi/services/aliases/get.py b/src/plone/restapi/services/aliases/get.py\nindex 04c9490686..c1fcf0b6ec 100644\n--- a/src/plone/restapi/services/aliases/get.py\n+++ b/src/plone/restapi/services/aliases/get.py\n@@ -1,9 +1,9 @@\n from plone.app.redirector.interfaces import IRedirectionStorage\n+from plone.restapi.bbb import IPloneSiteRoot\n from plone.restapi.interfaces import IExpandableElement\n from plone.restapi.serializer.converters import datetimelike_to_iso\n from plone.restapi.services import Service\n from Products.CMFPlone.controlpanel.browser.redirects import RedirectsControlPanel\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n from zope.component import adapter\n from zope.component import getUtility\n from zope.component.hooks import getSite\ndiff --git a/src/plone/restapi/services/auth/login.py b/src/plone/restapi/services/auth/login.py\nindex 4bc47df6ef..233223f8fc 100644\n--- a/src/plone/restapi/services/auth/login.py\n+++ b/src/plone/restapi/services/auth/login.py\n@@ -4,8 +4,8 @@\n from plone.restapi.services import Service\n from Products.CMFCore.utils import getToolByName\n from Products.PluggableAuthService.interfaces.plugins import IAuthenticationPlugin\n-from zope.interface import alsoProvides\n from zope import component\n+from zope.interface import alsoProvides\n \n import plone.protect.interfaces\n \ndiff --git a/src/plone/restapi/services/content/add.py b/src/plone/restapi/services/content/add.py\nindex cadedb991f..cdceab057e 100644\n--- a/src/plone/restapi/services/content/add.py\n+++ b/src/plone/restapi/services/content/add.py\n@@ -3,6 +3,7 @@\n from Acquisition.interfaces import IAcquirer\n from plone.app.multilingual.interfaces import IPloneAppMultilingualInstalled\n from plone.app.multilingual.interfaces import ITranslationManager\n+from plone.restapi.bbb import safe_hasattr\n from plone.restapi.deserializer import json_body\n from plone.restapi.exceptions import DeserializationError\n from plone.restapi.interfaces import IDeserializeFromJson\n@@ -12,14 +13,13 @@\n from plone.restapi.services.content.utils import create\n from Products.CMFCore.permissions import ManagePortal\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.utils import safe_hasattr\n from zExceptions import BadRequest\n from zExceptions import Unauthorized\n+from zope.component import getMultiAdapter\n from zope.component import queryMultiAdapter\n from zope.event import notify\n from zope.interface import alsoProvides\n from zope.lifecycleevent import ObjectCreatedEvent\n-from zope.component import getMultiAdapter\n \n import plone.protect.interfaces\n \ndiff --git a/src/plone/restapi/services/content/tus.py b/src/plone/restapi/services/content/tus.py\nindex 02cc95e1d7..cd85343321 100644\n--- a/src/plone/restapi/services/content/tus.py\n+++ b/src/plone/restapi/services/content/tus.py\n@@ -5,6 +5,8 @@\n from email.utils import formatdate\n from fnmatch import fnmatch\n from plone.rest.interfaces import ICORSPolicy\n+from plone.restapi.bbb import base_hasattr\n+from plone.restapi.bbb import safe_hasattr\n from plone.restapi.exceptions import DeserializationError\n from plone.restapi.interfaces import IDeserializeFromJson\n from plone.restapi.services import Service\n@@ -12,8 +14,6 @@\n from plone.restapi.services.content.utils import create\n from plone.rfc822.interfaces import IPrimaryFieldInfo\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.utils import base_hasattr\n-from Products.CMFPlone.utils import safe_hasattr\n from uuid import uuid4\n from zExceptions import Unauthorized\n from zope.component import queryMultiAdapter\ndiff --git a/src/plone/restapi/services/contextnavigation/get.py b/src/plone/restapi/services/contextnavigation/get.py\nindex 2431faaf16..1cfe9729ce 100644\n--- a/src/plone/restapi/services/contextnavigation/get.py\n+++ b/src/plone/restapi/services/contextnavigation/get.py\n@@ -12,17 +12,20 @@\n from plone.i18n.normalizer.interfaces import IIDNormalizer\n from plone.memoize.instance import memoize\n from plone.registry.interfaces import IRegistry\n+from plone.restapi.bbb import INavigationSchema\n+from plone.restapi.bbb import INonStructuralFolder\n+from plone.restapi.bbb import is_default_page\n+from plone.restapi.bbb import ISiteSchema\n+from plone.restapi.bbb import safe_callable\n+from plone.restapi.bbb import safe_hasattr\n from plone.restapi.interfaces import IExpandableElement\n from plone.restapi.services import Service\n from Products.CMFCore.interfaces import ISiteRoot\n from Products.CMFCore.utils import getToolByName\n from Products.CMFDynamicViewFTI.interfaces import IBrowserDefault\n-from Products.CMFPlone import utils\n from Products.CMFPlone.browser.navtree import SitemapNavtreeStrategy\n-from Products.CMFPlone.defaultpage import is_default_page\n-from Products.CMFPlone.interfaces import INavigationSchema\n-from Products.CMFPlone.interfaces import INonStructuralFolder\n-from Products.CMFPlone.interfaces import ISiteSchema\n+from Products.CMFPlone.utils import normalizeString\n+from Products.CMFPlone.utils import typesToList\n from Products.MimetypesRegistry.MimeTypeItem import guess_icon_path\n from zExceptions import NotFound\n from zope import schema\n@@ -378,7 +381,7 @@ def render(self):\n                 root = self.urltool.getPortalObject()\n                 root_is_portal = True\n \n-            if utils.safe_hasattr(self.context, "getRemoteUrl"):\n+            if safe_hasattr(self.context, "getRemoteUrl"):\n                 root_url = root.getRemoteUrl()\n             else:\n                 # cid, root_url = get_view_url(root)\n@@ -389,9 +392,9 @@ def render(self):\n             root_type = (\n                 "plone-site"\n                 if root_is_portal\n-                else utils.normalizeString(root.portal_type, context=root)\n+                else normalizeString(root.portal_type, context=root)\n             )\n-            normalized_id = utils.normalizeString(root.Title(), context=root)\n+            normalized_id = normalizeString(root.Title(), context=root)\n \n             if root_is_portal:\n                 state = ""\n@@ -505,7 +508,7 @@ def get_id(item):\n         return\n     getId = getattr(item, "getId")\n \n-    if not utils.safe_callable(getId):\n+    if not safe_callable(getId):\n         # Looks like a brain\n \n         return getId\n@@ -628,7 +631,7 @@ def __init__(self, context, data):\n \n         # Acquire a custom nav query if available\n         customQuery = getattr(context, "getCustomNavQuery", None)\n-        if customQuery is not None and utils.safe_callable(customQuery):\n+        if customQuery is not None and safe_callable(customQuery):\n             query = customQuery()\n         else:\n             query = {}\n@@ -664,7 +667,7 @@ def __init__(self, context, data):\n         # seem to work with EPI.\n \n         # Only list the applicable types\n-        query["portal_type"] = utils.typesToList(context)\n+        query["portal_type"] = typesToList(context)\n \n         # Apply the desired sort\n         sortAttribute = navtree_properties.getProperty("sortAttribute", None)\ndiff --git a/src/plone/restapi/services/email_send/post.py b/src/plone/restapi/services/email_send/post.py\nindex 03c0be33d7..b4315829b0 100644\n--- a/src/plone/restapi/services/email_send/post.py\n+++ b/src/plone/restapi/services/email_send/post.py\n@@ -3,11 +3,11 @@\n from email.mime.text import MIMEText\n from plone.registry.interfaces import IRegistry\n from plone.restapi import _\n+from plone.restapi.bbb import IMailSchema\n+from plone.restapi.bbb import ISiteSchema\n from plone.restapi.deserializer import json_body\n from plone.restapi.services import Service\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ISiteSchema\n-from Products.CMFPlone.interfaces.controlpanel import IMailSchema\n from smtplib import SMTPException\n from zope.component import getMultiAdapter\n from zope.component import getUtility\ndiff --git a/src/plone/restapi/services/history/get.py b/src/plone/restapi/services/history/get.py\nindex d4543eb411..18b71c1f0d 100644\n--- a/src/plone/restapi/services/history/get.py\n+++ b/src/plone/restapi/services/history/get.py\n@@ -1,9 +1,9 @@\n from datetime import datetime as dt\n from plone.app.layout.viewlets.content import ContentHistoryViewlet\n+from plone.restapi.bbb import safe_text\n from plone.restapi.interfaces import ISerializeToJson\n from plone.restapi.serializer.converters import json_compatible\n from plone.restapi.services import Service\n-from Products.CMFPlone.utils import safe_unicode\n from zope.component import queryMultiAdapter\n from zope.component.hooks import getSite\n from zope.interface import implementer\n@@ -87,17 +87,17 @@ def reply(self):\n             # We want action, state and transition names translated\n             if "state_title" in item:\n                 item["state_title"] = self.context.translate(\n-                    safe_unicode(item["state_title"]), context=self.request\n+                    safe_text(item["state_title"]), context=self.request\n                 )\n \n             if "transition_title" in item:\n                 item["transition_title"] = self.context.translate(\n-                    safe_unicode(item["transition_title"]), context=self.request\n+                    safe_text(item["transition_title"]), context=self.request\n                 )\n \n             if "action" in item:\n                 item["action"] = self.context.translate(\n-                    safe_unicode(item["action"]), context=self.request\n+                    safe_text(item["action"]), context=self.request\n                 )\n \n             # clean up\ndiff --git a/src/plone/restapi/services/locking/__init__.py b/src/plone/restapi/services/locking/__init__.py\nindex aec6ad9757..a2529d8246 100644\n--- a/src/plone/restapi/services/locking/__init__.py\n+++ b/src/plone/restapi/services/locking/__init__.py\n@@ -1,7 +1,7 @@\n """ Locking\n """\n-from plone import api\n from datetime import datetime\n+from plone import api\n from plone.locking.interfaces import ILockable\n \n \ndiff --git a/src/plone/restapi/services/locking/locking.py b/src/plone/restapi/services/locking/locking.py\nindex fa664ccaaf..b8019eaef8 100644\n--- a/src/plone/restapi/services/locking/locking.py\n+++ b/src/plone/restapi/services/locking/locking.py\n@@ -1,13 +1,13 @@\n-import warnings\n-from zope.deprecation import deprecated\n+from plone.restapi.services.locking import is_locked\n from plone.restapi.services.locking import lock_info\n from plone.restapi.services.locking import webdav_lock\n-from plone.restapi.services.locking import is_locked\n-\n from plone.restapi.services.locking.add import Lock as AddLock\n-from plone.restapi.services.locking.get import Lock as GetLock\n from plone.restapi.services.locking.delete import Lock as DeleteLock\n+from plone.restapi.services.locking.get import Lock as GetLock\n from plone.restapi.services.locking.update import Lock as UpdateLock\n+from zope.deprecation import deprecated\n+\n+import warnings\n \n \n lock_info = deprecated(\ndiff --git a/src/plone/restapi/services/multilingual/locator.py b/src/plone/restapi/services/multilingual/locator.py\nindex 75802cb6ac..0802aeec63 100644\n--- a/src/plone/restapi/services/multilingual/locator.py\n+++ b/src/plone/restapi/services/multilingual/locator.py\n@@ -1,5 +1,5 @@\n-from plone.restapi.services import Service\n from plone.app.multilingual.interfaces import ITranslationLocator\n+from plone.restapi.services import Service\n \n \n class TranslationLocator(Service):\ndiff --git a/src/plone/restapi/services/multilingual/pam.py b/src/plone/restapi/services/multilingual/pam.py\nindex 267b5179cf..97aba47b6e 100644\n--- a/src/plone/restapi/services/multilingual/pam.py\n+++ b/src/plone/restapi/services/multilingual/pam.py\n@@ -1,11 +1,11 @@\n from plone.app.multilingual.interfaces import ITranslatable\n from plone.app.multilingual.interfaces import ITranslationManager\n+from plone.restapi.bbb import ILanguage\n+from plone.restapi.bbb import IPloneSiteRoot\n from plone.restapi.deserializer import json_body\n from plone.restapi.interfaces import IExpandableElement\n from plone.restapi.services import Service\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ILanguage\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n from zope.component import adapter\n from zope.component import getMultiAdapter\n from zope.interface import alsoProvides\ndiff --git a/src/plone/restapi/services/navigation/get.py b/src/plone/restapi/services/navigation/get.py\nindex 2557df589d..3201d9e2df 100644\n--- a/src/plone/restapi/services/navigation/get.py\n+++ b/src/plone/restapi/services/navigation/get.py\n@@ -4,12 +4,12 @@\n from plone.memoize.view import memoize\n from plone.memoize.view import memoize_contextless\n from plone.registry.interfaces import IRegistry\n+from plone.restapi.bbb import INavigationSchema\n+from plone.restapi.bbb import safe_text\n from plone.restapi.interfaces import IExpandableElement\n from plone.restapi.serializer.converters import json_compatible\n from plone.restapi.services import Service\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces.controlpanel import INavigationSchema\n-from Products.CMFPlone.utils import safe_unicode\n from zope.component import adapter\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n@@ -99,7 +99,7 @@ def navtree(self):\n                     entry["title"], domain="plone", context=self.request\n                 )\n \n-            entry["title"] = safe_unicode(entry["title"])\n+            entry["title"] = safe_text(entry["title"])\n             ret[navtree_path].append(entry)\n \n         query = {\n@@ -142,8 +142,8 @@ def navtree(self):\n             entry = {\n                 "path": brain_path,\n                 "@id": url,\n-                "title": safe_unicode(brain.Title),\n-                "description": safe_unicode(brain.Description),\n+                "title": safe_text(brain.Title),\n+                "description": safe_text(brain.Description),\n                 "review_state": json_compatible(brain.review_state),\n                 "use_view_action_in_listings": brain.portal_type in types_using_view,\n             }\ndiff --git a/src/plone/restapi/services/querystringsearch/get.py b/src/plone/restapi/services/querystringsearch/get.py\nindex ba2bfcf7eb..29ed3f9471 100644\n--- a/src/plone/restapi/services/querystringsearch/get.py\n+++ b/src/plone/restapi/services/querystringsearch/get.py\n@@ -1,11 +1,12 @@\n from pkg_resources import get_distribution\n from pkg_resources import parse_version\n+from plone.restapi.bbb import IPloneSiteRoot\n from plone.restapi.deserializer import json_body\n from plone.restapi.interfaces import ISerializeToJson\n from plone.restapi.services import Service\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n from zope.component import getMultiAdapter\n \n+\n zcatalog_version = get_distribution("Products.ZCatalog").version\n if parse_version(zcatalog_version) >= parse_version("5.1"):\n     SUPPORT_NOT_UUID_QUERIES = True\ndiff --git a/src/plone/restapi/services/rules/add.py b/src/plone/restapi/services/rules/add.py\nindex 59f279be42..f537b860e6 100644\n--- a/src/plone/restapi/services/rules/add.py\n+++ b/src/plone/restapi/services/rules/add.py\n@@ -1,11 +1,12 @@\n from plone.restapi.services import Service\n-import plone.protect.interfaces\n from zExceptions import BadRequest\n-from zope.interface import implementer\n-from zope.interface import alsoProvides\n from zope.component import queryMultiAdapter\n+from zope.interface import alsoProvides\n+from zope.interface import implementer\n from zope.publisher.interfaces import IPublishTraverse\n \n+import plone.protect.interfaces\n+\n \n @implementer(IPublishTraverse)\n class ContentRulesAdd(Service):\ndiff --git a/src/plone/restapi/services/rules/delete.py b/src/plone/restapi/services/rules/delete.py\nindex 60b506d013..020ee811f4 100644\n--- a/src/plone/restapi/services/rules/delete.py\n+++ b/src/plone/restapi/services/rules/delete.py\n@@ -1,9 +1,10 @@\n+from plone.restapi.deserializer import json_body\n from plone.restapi.services import Service\n-import plone.protect.interfaces\n from zExceptions import BadRequest\n-from zope.interface import alsoProvides\n from zope.component import queryMultiAdapter\n-from plone.restapi.deserializer import json_body\n+from zope.interface import alsoProvides\n+\n+import plone.protect.interfaces\n \n \n class ContentRulesDelete(Service):\ndiff --git a/src/plone/restapi/services/rules/get.py b/src/plone/restapi/services/rules/get.py\nindex af8e9ec5c6..53cb5979ff 100644\n--- a/src/plone/restapi/services/rules/get.py\n+++ b/src/plone/restapi/services/rules/get.py\n@@ -1,5 +1,5 @@\n-from zope.component import queryMultiAdapter\n from plone.restapi.services import Service\n+from zope.component import queryMultiAdapter\n \n \n class ContentRulesGet(Service):\ndiff --git a/src/plone/restapi/services/rules/update.py b/src/plone/restapi/services/rules/update.py\nindex 5e92725e31..cc87d54877 100644\n--- a/src/plone/restapi/services/rules/update.py\n+++ b/src/plone/restapi/services/rules/update.py\n@@ -1,8 +1,9 @@\n+from plone.restapi.deserializer import json_body\n from plone.restapi.services import Service\n-import plone.protect.interfaces\n-from zope.interface import alsoProvides\n from zope.component import queryMultiAdapter\n-from plone.restapi.deserializer import json_body\n+from zope.interface import alsoProvides\n+\n+import plone.protect.interfaces\n \n \n class ContentRulesUpdate(Service):\ndiff --git a/src/plone/restapi/services/system/get.py b/src/plone/restapi/services/system/get.py\nindex 9732d648b3..5f666a5dea 100644\n--- a/src/plone/restapi/services/system/get.py\n+++ b/src/plone/restapi/services/system/get.py\n@@ -1,5 +1,6 @@\n from plone.restapi.services import Service\n \n+\n try:\n     from Products.CMFPlone.controlpanel.browser.overview import OverviewControlPanel\n except ImportError:\n@@ -7,6 +8,7 @@\n \n import pkg_resources\n \n+\n plone_restapi_version = pkg_resources.require("plone.restapi")[0].version\n \n \ndiff --git a/src/plone/restapi/services/tiles/get.py b/src/plone/restapi/services/tiles/get.py\nindex c4af7b8b67..fb2918976a 100644\n--- a/src/plone/restapi/services/tiles/get.py\n+++ b/src/plone/restapi/services/tiles/get.py\n@@ -3,16 +3,16 @@\n from plone.restapi.interfaces import ISerializeToJsonSummary\n from plone.restapi.services import Service\n from plone.tiles.interfaces import ITileType\n-from zope.deprecation import deprecated\n from zope.component import getMultiAdapter\n from zope.component import getUtilitiesFor\n from zope.component import getUtility\n+from zope.deprecation import deprecated\n from zope.interface import implementer\n from zope.publisher.interfaces import IPublishTraverse\n \n-import zope.deprecation\n-import warnings\n import sys\n+import warnings\n+import zope.deprecation\n \n \n sys.modules["plone.restapi.services.tiles"] = deprecated(\ndiff --git a/src/plone/restapi/services/transactions/get.py b/src/plone/restapi/services/transactions/get.py\nindex 5cddd2b1d5..8fad6bd591 100644\n--- a/src/plone/restapi/services/transactions/get.py\n+++ b/src/plone/restapi/services/transactions/get.py\n@@ -1,8 +1,9 @@\n-import binascii\n-import sys\n from datetime import datetime as dt\n from plone.restapi.services import Service\n \n+import binascii\n+import sys\n+\n \n class TransactionsGet(Service):\n     def __init__(self, context, request):\ndiff --git a/src/plone/restapi/services/transactions/patch.py b/src/plone/restapi/services/transactions/patch.py\nindex c481e299a4..ae99caf6ef 100644\n--- a/src/plone/restapi/services/transactions/patch.py\n+++ b/src/plone/restapi/services/transactions/patch.py\n@@ -1,10 +1,11 @@\n-import binascii\n-import transaction\n-from plone.restapi.services import Service\n from plone.restapi.deserializer import json_body\n from plone.restapi.serializer.converters import json_compatible\n+from plone.restapi.services import Service\n from zExceptions import BadRequest\n \n+import binascii\n+import transaction\n+\n \n class TransactionsPatch(Service):\n     def reply(self):\ndiff --git a/src/plone/restapi/services/types/add.py b/src/plone/restapi/services/types/add.py\nindex 56150ce816..29f39ea055 100644\n--- a/src/plone/restapi/services/types/add.py\n+++ b/src/plone/restapi/services/types/add.py\n@@ -9,6 +9,7 @@\n from zope.interface import implementer\n from zope.interface import noLongerProvides\n from zope.publisher.interfaces import IPublishTraverse\n+\n import plone.protect.interfaces\n \n \ndiff --git a/src/plone/restapi/services/types/delete.py b/src/plone/restapi/services/types/delete.py\nindex 183049a4b8..335979ae3d 100644\n--- a/src/plone/restapi/services/types/delete.py\n+++ b/src/plone/restapi/services/types/delete.py\n@@ -8,6 +8,7 @@\n from zope.interface import implementer\n from zope.interface import noLongerProvides\n from zope.publisher.interfaces import IPublishTraverse\n+\n import plone.protect.interfaces\n \n \ndiff --git a/src/plone/restapi/services/types/get.py b/src/plone/restapi/services/types/get.py\nindex eeea758682..6968a30118 100644\n--- a/src/plone/restapi/services/types/get.py\n+++ b/src/plone/restapi/services/types/get.py\n@@ -1,17 +1,18 @@\n from plone.dexterity.interfaces import IDexterityContent\n+from plone.restapi.bbb import IConstrainTypes\n from plone.restapi.interfaces import IExpandableElement\n from plone.restapi.interfaces import IPloneRestapiLayer\n from plone.restapi.services import Service\n-from plone.restapi.types.utils import get_info_for_type\n from plone.restapi.types.utils import get_info_for_field\n from plone.restapi.types.utils import get_info_for_fieldset\n+from plone.restapi.types.utils import get_info_for_type\n from Products.CMFCore.interfaces import IFolderish\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import IConstrainTypes\n from zExceptions import Unauthorized\n from zope.component import adapter\n-from zope.component import getMultiAdapter, queryMultiAdapter\n+from zope.component import getMultiAdapter\n from zope.component import getUtility\n+from zope.component import queryMultiAdapter\n from zope.i18n import translate\n from zope.interface import implementer\n from zope.interface import Interface\ndiff --git a/src/plone/restapi/services/types/put.py b/src/plone/restapi/services/types/put.py\nindex 0c5db709e6..b9c3921f5c 100644\n--- a/src/plone/restapi/services/types/put.py\n+++ b/src/plone/restapi/services/types/put.py\n@@ -18,6 +18,7 @@\n from zope.interface import implementer\n from zope.interface import noLongerProvides\n from zope.publisher.interfaces import IPublishTraverse\n+\n import plone.protect.interfaces\n \n \ndiff --git a/src/plone/restapi/services/types/update.py b/src/plone/restapi/services/types/update.py\nindex fd28c044b0..d9845876ba 100644\n--- a/src/plone/restapi/services/types/update.py\n+++ b/src/plone/restapi/services/types/update.py\n@@ -1,10 +1,10 @@\n from plone.restapi.deserializer import json_body\n from plone.restapi.interfaces import IPloneRestapiLayer\n from plone.restapi.services import Service\n-from plone.restapi.types.utils import serializeSchema\n from plone.restapi.types.utils import add_field\n from plone.restapi.types.utils import add_fieldset\n from plone.restapi.types.utils import get_info_for_type\n+from plone.restapi.types.utils import serializeSchema\n from plone.restapi.types.utils import update_field\n from plone.restapi.types.utils import update_fieldset\n from zExceptions import BadRequest\n@@ -13,6 +13,7 @@\n from zope.interface import implementer\n from zope.interface import noLongerProvides\n from zope.publisher.interfaces import IPublishTraverse\n+\n import plone.protect.interfaces\n \n \ndiff --git a/src/plone/restapi/services/upgrade/post.py b/src/plone/restapi/services/upgrade/post.py\nindex 0152380cfc..a564d042bd 100644\n--- a/src/plone/restapi/services/upgrade/post.py\n+++ b/src/plone/restapi/services/upgrade/post.py\n@@ -1,5 +1,5 @@\n-from plone.restapi.services import Service\n from plone.restapi.deserializer import json_body\n+from plone.restapi.services import Service\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.browser.admin import Upgrade\n from zope.interface import alsoProvides\ndiff --git a/src/plone/restapi/services/users/add.py b/src/plone/restapi/services/users/add.py\nindex fc03b45063..e2b117778e 100644\n--- a/src/plone/restapi/services/users/add.py\n+++ b/src/plone/restapi/services/users/add.py\n@@ -1,13 +1,13 @@\n from AccessControl import getSecurityManager\n from plone.app.users.schema import ICombinedRegisterSchema\n from plone.restapi import _\n+from plone.restapi.bbb import ISecuritySchema\n from plone.restapi.deserializer import json_body\n from plone.restapi.interfaces import ISerializeToJson\n from plone.restapi.services import Service\n from Products.CMFCore.permissions import AddPortalMember\n from Products.CMFCore.permissions import SetOwnPassword\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ISecuritySchema\n from Products.CMFPlone.PasswordResetTool import ExpiredRequestError\n from Products.CMFPlone.PasswordResetTool import InvalidRequestError\n from Products.CMFPlone.RegistrationTool import get_member_by_login_name\ndiff --git a/src/plone/restapi/services/users/get.py b/src/plone/restapi/services/users/get.py\nindex 7dfe259986..10ed48af4a 100644\n--- a/src/plone/restapi/services/users/get.py\n+++ b/src/plone/restapi/services/users/get.py\n@@ -7,8 +7,11 @@\n from plone.restapi.services import Service\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.utils import normalizeString\n+from Products.PlonePAS.tools.memberdata import MemberData\n from Products.PlonePAS.tools.membership import default_portrait\n from Products.PlonePAS.utils import decleanId\n+from typing import Iterable\n+from typing import Sequence\n from urllib.parse import parse_qs\n from zExceptions import BadRequest\n from zope.component import getMultiAdapter\n@@ -16,8 +19,7 @@\n from zope.component.hooks import getSite\n from zope.interface import implementer\n from zope.publisher.interfaces import IPublishTraverse\n-from Products.PlonePAS.tools.memberdata import MemberData\n-from typing import Sequence, Iterable\n+\n \n DEFAULT_SEARCH_RESULTS_LIMIT = 25\n \ndiff --git a/src/plone/restapi/services/users/update.py b/src/plone/restapi/services/users/update.py\nindex 1c29d5b43c..c89dd0b03d 100644\n--- a/src/plone/restapi/services/users/update.py\n+++ b/src/plone/restapi/services/users/update.py\n@@ -3,10 +3,10 @@\n from io import BytesIO\n from OFS.Image import Image\n from plone.restapi import _\n+from plone.restapi.bbb import ISecuritySchema\n from plone.restapi.services import Service\n from Products.CMFCore.permissions import SetOwnPassword\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ISecuritySchema\n from Products.CMFPlone.utils import set_own_login_name\n from Products.PlonePAS.tools.membership import default_portrait\n from Products.PlonePAS.utils import scale_image\ndiff --git a/src/plone/restapi/services/userschema/user.py b/src/plone/restapi/services/userschema/user.py\nindex 2d074e96f8..17e201bcca 100644\n--- a/src/plone/restapi/services/userschema/user.py\n+++ b/src/plone/restapi/services/userschema/user.py\n@@ -1,11 +1,11 @@\n # -*- coding: utf-8 -*-\n+from plone.app.users.browser.userdatapanel import getUserDataSchema\n+from plone.restapi.serializer.converters import json_compatible\n from plone.restapi.services import Service\n-from plone.restapi.types.utils import get_jsonschema_properties\n-from plone.restapi.types.utils import get_fieldsets\n from plone.restapi.types.utils import get_fieldset_infos\n+from plone.restapi.types.utils import get_fieldsets\n+from plone.restapi.types.utils import get_jsonschema_properties\n from plone.restapi.types.utils import iter_fields\n-from plone.app.users.browser.userdatapanel import getUserDataSchema\n-from plone.restapi.serializer.converters import json_compatible\n \n \n class UserSchemaGet(Service):\ndiff --git a/src/plone/restapi/services/workflow/info.py b/src/plone/restapi/services/workflow/info.py\nindex 532a2f0ff2..6afd172b2d 100644\n--- a/src/plone/restapi/services/workflow/info.py\n+++ b/src/plone/restapi/services/workflow/info.py\n@@ -1,10 +1,10 @@\n+from plone.restapi.bbb import IPloneSiteRoot\n from plone.restapi.interfaces import IExpandableElement\n from plone.restapi.serializer.converters import json_compatible\n from plone.restapi.services import Service\n from Products.CMFCore.interfaces._content import IWorkflowAware\n from Products.CMFCore.utils import getToolByName\n from Products.CMFCore.WorkflowCore import WorkflowException\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n from zope.component import adapter\n from zope.interface import implementer\n from zope.interface import Interface\ndiff --git a/src/plone/restapi/services/workingcopy/create.py b/src/plone/restapi/services/workingcopy/create.py\nindex 2bc8846e5c..9b8f974021 100644\n--- a/src/plone/restapi/services/workingcopy/create.py\n+++ b/src/plone/restapi/services/workingcopy/create.py\n@@ -1,14 +1,15 @@\n-from plone.restapi.services import Service\n-from zope.interface import alsoProvides\n+from Acquisition import aq_inner\n from plone.app.iterate.interfaces import ICheckinCheckoutPolicy\n from plone.app.iterate.interfaces import IWCContainerLocator\n-from Acquisition import aq_inner\n+from plone.restapi.services import Service\n+from Products.CMFCore.utils import getToolByName\n from zope.component import getAdapters\n from zope.component import getMultiAdapter\n-from Products.CMFCore.utils import getToolByName\n+from zope.interface import alsoProvides\n \n import plone.protect.interfaces\n \n+\n # It seems that p.a.iterate allows to locate the WC in the user folder,\n # for now, ignore it and use always the location as the parent\n # but allow space to implement it in the future if it\'s still relevant\ndiff --git a/src/plone/restapi/services/workingcopy/get.py b/src/plone/restapi/services/workingcopy/get.py\nindex ff0557b9a9..0ac7386f60 100644\n--- a/src/plone/restapi/services/workingcopy/get.py\n+++ b/src/plone/restapi/services/workingcopy/get.py\n@@ -1,5 +1,5 @@\n-from plone.restapi.services import Service\n from plone.restapi.serializer.working_copy import WorkingCopyInfo\n+from plone.restapi.services import Service\n \n \n class GetWorkingCopy(Service):\ndiff --git a/src/plone/restapi/services/workingcopy/update.py b/src/plone/restapi/services/workingcopy/update.py\nindex 7dd56c9ff8..4ceb476fd8 100644\n--- a/src/plone/restapi/services/workingcopy/update.py\n+++ b/src/plone/restapi/services/workingcopy/update.py\n@@ -1,8 +1,8 @@\n-from plone.restapi.services import Service\n-from zope.interface import alsoProvides\n from plone.app.iterate.interfaces import ICheckinCheckoutPolicy\n-from zope.component import getMultiAdapter\n+from plone.restapi.services import Service\n from Products.CMFCore.utils import getToolByName\n+from zope.component import getMultiAdapter\n+from zope.interface import alsoProvides\n \n import plone.protect.interfaces\n \ndiff --git a/src/plone/restapi/setuphandlers.py b/src/plone/restapi/setuphandlers.py\nindex 2755e39a5c..121a70633b 100644\n--- a/src/plone/restapi/setuphandlers.py\n+++ b/src/plone/restapi/setuphandlers.py\n@@ -1,8 +1,8 @@\n from Acquisition import aq_inner\n from Acquisition import aq_parent\n+from plone.restapi.bbb import INonInstallable\n from plone.restapi.pas.plugin import JWTAuthenticationPlugin\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import INonInstallable\n from Products.PluggableAuthService.interfaces.authservice import (\n     IPluggableAuthService,\n )  # noqa: E501\ndiff --git a/src/plone/restapi/tests/helpers.py b/src/plone/restapi/tests/helpers.py\nindex 3a03dbc0a9..1911fd611f 100644\n--- a/src/plone/restapi/tests/helpers.py\n+++ b/src/plone/restapi/tests/helpers.py\n@@ -1,9 +1,9 @@\n from contextlib import contextmanager\n+from plone.restapi.services.addons.addons import Addons\n from plone.scale import storage\n from Products.CMFCore.utils import getToolByName\n from unittest.mock import patch\n from urllib.parse import urlparse\n-from plone.restapi.services.addons.addons import Addons\n \n import quopri\n \ndiff --git a/src/plone/restapi/tests/statictime.py b/src/plone/restapi/tests/statictime.py\nindex 34e0bf5f5f..55fddc6e7c 100644\n--- a/src/plone/restapi/tests/statictime.py\n+++ b/src/plone/restapi/tests/statictime.py\n@@ -1,12 +1,12 @@\n-from DateTime import DateTime\n from datetime import datetime\n+from DateTime import DateTime\n from plone.app.discussion.comment import Comment\n from plone.app.layout.viewlets.content import ContentHistoryViewlet\n from plone.dexterity.content import DexterityContent\n from plone.locking.lockable import TTWLockable\n+from plone.restapi.serializer.working_copy import WorkingCopyInfo\n from Products.CMFCore.WorkflowTool import _marker\n from Products.CMFCore.WorkflowTool import WorkflowTool\n-from plone.restapi.serializer.working_copy import WorkingCopyInfo\n \n \n _originals = {\ndiff --git a/src/plone/restapi/tests/test_addons.py b/src/plone/restapi/tests/test_addons.py\nindex 44f2aef644..8ca08735d4 100644\n--- a/src/plone/restapi/tests/test_addons.py\n+++ b/src/plone/restapi/tests/test_addons.py\n@@ -3,10 +3,10 @@\n from plone.app.testing import SITE_OWNER_NAME\n from plone.app.testing import SITE_OWNER_PASSWORD\n from plone.app.testing import TEST_USER_ID\n+from plone.restapi.bbb import safe_text\n from plone.restapi.testing import PLONE_RESTAPI_DX_FUNCTIONAL_TESTING\n from plone.restapi.testing import RelativeSession\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.utils import safe_unicode\n \n import transaction\n import unittest\n@@ -62,7 +62,7 @@ def _get_install_status(self):\n \n         response = self.api_session.post("/@addons/plone.session/install")\n         self.assertEqual(response.status_code, 204)\n-        self.assertEqual(safe_unicode(response.content), "")\n+        self.assertEqual(safe_text(response.content), "")\n \n         # Check to make sure the addon is currently shown as installed\n         self.assertEqual(_get_install_status(self), True)\n@@ -70,7 +70,7 @@ def _get_install_status(self):\n         # Now uninstall the addon\n         response = self.api_session.post("/@addons/plone.session/uninstall")\n         self.assertEqual(response.status_code, 204)\n-        self.assertEqual(safe_unicode(response.content), "")\n+        self.assertEqual(safe_text(response.content), "")\n \n         # Check to make sure the addon is currently shown as not installed\n         self.assertEqual(_get_install_status(self), False)\n@@ -131,7 +131,7 @@ def _get_upgrade_info(self):\n         # Now call the upgrade\n         response = self.api_session.post("/@addons/plone.restapi/upgrade")\n         self.assertEqual(response.status_code, 204)\n-        self.assertEqual(safe_unicode(response.content), "")\n+        self.assertEqual(safe_text(response.content), "")\n         self.assertEqual(\n             {\n                 "available": False,\ndiff --git a/src/plone/restapi/tests/test_content_utils.py b/src/plone/restapi/tests/test_content_utils.py\nindex c6d3bb4fbd..055522a86f 100644\n--- a/src/plone/restapi/tests/test_content_utils.py\n+++ b/src/plone/restapi/tests/test_content_utils.py\n@@ -1,8 +1,8 @@\n from Acquisition import aq_parent\n+from plone.restapi.bbb import ISelectableConstrainTypes\n from plone.restapi.services.content.utils import add\n from plone.restapi.services.content.utils import create\n from plone.restapi.testing import PLONE_RESTAPI_DX_INTEGRATION_TESTING\n-from Products.CMFPlone.interfaces import ISelectableConstrainTypes\n from zExceptions import Unauthorized\n from zope.component import getGlobalSiteManager\n from zope.event import notify\ndiff --git a/src/plone/restapi/tests/test_documentation.py b/src/plone/restapi/tests/test_documentation.py\nindex 589a4cba57..6e8b88ded7 100644\n--- a/src/plone/restapi/tests/test_documentation.py\n+++ b/src/plone/restapi/tests/test_documentation.py\n@@ -2,7 +2,6 @@\n from datetime import datetime\n from pkg_resources import resource_filename\n from plone import api\n-from plone.uuid.interfaces import IUUID\n from plone.app.discussion.interfaces import ICommentAddedEvent\n from plone.app.discussion.interfaces import IConversation\n from plone.app.discussion.interfaces import IDiscussionSettings\n@@ -27,9 +26,11 @@\n from plone.restapi.testing import PLONE_RESTAPI_ITERATE_FUNCTIONAL_TESTING\n from plone.restapi.testing import register_static_uuid_utility\n from plone.restapi.testing import RelativeSession\n-from plone.restapi.tests.helpers import patch_scale_uuid, patch_addon_versions\n+from plone.restapi.tests.helpers import patch_addon_versions\n+from plone.restapi.tests.helpers import patch_scale_uuid\n from plone.restapi.tests.statictime import StaticTime\n-from plone.testing.z2 import Browser\n+from plone.testing.zope import Browser\n+from plone.uuid.interfaces import IUUID\n from zope.component import createObject\n from zope.component import getMultiAdapter\n from zope.component import getUtility\ndiff --git a/src/plone/restapi/tests/test_search.py b/src/plone/restapi/tests/test_search.py\nindex e238dec9c8..2f66ecdba9 100644\n--- a/src/plone/restapi/tests/test_search.py\n+++ b/src/plone/restapi/tests/test_search.py\n@@ -708,7 +708,7 @@ def test_search_use_site_search_settings_for_types(self):\n         self.assertEqual(set(types), {"Folder", "DXTestDocument"})\n \n         registry = getUtility(IRegistry)\n-        from Products.CMFPlone.interfaces import ISearchSchema\n+        from plone.restapi.bbb import ISearchSchema\n \n         search_settings = registry.forInterface(ISearchSchema, prefix="plone")\n         old = search_settings.types_not_searched\ndiff --git a/src/plone/restapi/tests/test_serializer_user.py b/src/plone/restapi/tests/test_serializer_user.py\nindex 4983fdf040..e3971350f1 100644\n--- a/src/plone/restapi/tests/test_serializer_user.py\n+++ b/src/plone/restapi/tests/test_serializer_user.py\n@@ -1,9 +1,9 @@\n from DateTime import DateTime\n from plone import api\n+from plone.app.users.browser.schemaeditor import applySchema\n from plone.restapi.interfaces import ISerializeToJson\n from plone.restapi.testing import PLONE_RESTAPI_DX_INTEGRATION_TESTING\n from zope.component import getMultiAdapter\n-from plone.app.users.browser.schemaeditor import applySchema\n \n import unittest\n \ndiff --git a/src/plone/restapi/tests/test_services_breadcrumbs.py b/src/plone/restapi/tests/test_services_breadcrumbs.py\nindex 54e7471bc0..477b7a21c4 100644\n--- a/src/plone/restapi/tests/test_services_breadcrumbs.py\n+++ b/src/plone/restapi/tests/test_services_breadcrumbs.py\n@@ -1,5 +1,6 @@\n from plone.app.multilingual.interfaces import IPloneAppMultilingualInstalled\n from plone.app.multilingual.interfaces import ITranslationManager\n+from plone.app.testing import login\n from plone.app.testing import setRoles\n from plone.app.testing import SITE_OWNER_NAME\n from plone.app.testing import SITE_OWNER_PASSWORD\n@@ -9,8 +10,6 @@\n from plone.restapi.testing import PLONE_RESTAPI_DX_PAM_FUNCTIONAL_TESTING\n from plone.restapi.testing import RelativeSession\n from zope.interface import alsoProvides\n-from plone.app.testing import login\n-\n \n import transaction\n import unittest\ndiff --git a/src/plone/restapi/tests/test_services_contextnavigation.py b/src/plone/restapi/tests/test_services_contextnavigation.py\nindex ea91f9a166..3e2f8daf43 100644\n--- a/src/plone/restapi/tests/test_services_contextnavigation.py\n+++ b/src/plone/restapi/tests/test_services_contextnavigation.py\n@@ -180,7 +180,7 @@ def test_contextnavigation_with_no_params_gets_only_top_level(self):\n \n     def test_contextnavigation_with_no_params_gets_only_top_level_mixed_content(self):\n         # Use default setting of Plone 6\n-        from Products.CMFPlone.interfaces import INavigationSchema  # noqa\n+        from plone.restapi.bbb import INavigationSchema  # noqa\n \n         registry = getUtility(IRegistry)\n         navigation_settings = registry.forInterface(INavigationSchema, prefix="plone")\n@@ -841,7 +841,7 @@ def testCustomQuery(self):\n \n     def testStateFiltering(self):\n         # Test Navtree workflow state filtering\n-        from Products.CMFPlone.interfaces import INavigationSchema  # noqa\n+        from plone.restapi.bbb import INavigationSchema  # noqa\n \n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n         registry = getUtility(IRegistry)\ndiff --git a/src/plone/restapi/tests/test_services_controlpanel_dexterity_types.py b/src/plone/restapi/tests/test_services_controlpanel_dexterity_types.py\nindex 92eda72f87..8433f65434 100644\n--- a/src/plone/restapi/tests/test_services_controlpanel_dexterity_types.py\n+++ b/src/plone/restapi/tests/test_services_controlpanel_dexterity_types.py\n@@ -4,6 +4,7 @@\n from plone.app.testing import TEST_USER_ID\n from plone.restapi.testing import PLONE_RESTAPI_DX_FUNCTIONAL_TESTING\n from plone.restapi.testing import RelativeSession\n+\n import unittest\n \n \ndiff --git a/src/plone/restapi/tests/test_services_linkintegrity.py b/src/plone/restapi/tests/test_services_linkintegrity.py\nindex 6de9b1244c..957eb93e2e 100644\n--- a/src/plone/restapi/tests/test_services_linkintegrity.py\n+++ b/src/plone/restapi/tests/test_services_linkintegrity.py\n@@ -5,10 +5,10 @@\n from plone.app.testing import TEST_USER_ID\n from plone.dexterity.utils import createContentInContainer\n from plone.registry.interfaces import IRegistry\n+from plone.restapi.bbb import IEditingSchema\n from plone.restapi.testing import PLONE_RESTAPI_BLOCKS_FUNCTIONAL_TESTING\n from plone.restapi.testing import RelativeSession\n from plone.uuid.interfaces import IUUID\n-from Products.CMFPlone.interfaces import IEditingSchema\n from z3c.relationfield import RelationValue\n from zope.component import getUtility\n from zope.event import notify\ndiff --git a/src/plone/restapi/tests/test_services_navigation.py b/src/plone/restapi/tests/test_services_navigation.py\nindex bf23a49dcc..dc466bc38e 100644\n--- a/src/plone/restapi/tests/test_services_navigation.py\n+++ b/src/plone/restapi/tests/test_services_navigation.py\n@@ -4,9 +4,9 @@\n from plone.app.testing import TEST_USER_ID\n from plone.dexterity.utils import createContentInContainer\n from plone.registry.interfaces import IRegistry\n+from plone.restapi.bbb import INavigationSchema\n from plone.restapi.testing import PLONE_RESTAPI_DX_FUNCTIONAL_TESTING\n from plone.restapi.testing import RelativeSession\n-from Products.CMFPlone.interfaces.controlpanel import INavigationSchema\n from zope.component import getUtility\n \n import transaction\ndiff --git a/src/plone/restapi/tests/test_services_types.py b/src/plone/restapi/tests/test_services_types.py\nindex 1341da6da7..ba58ccd522 100644\n--- a/src/plone/restapi/tests/test_services_types.py\n+++ b/src/plone/restapi/tests/test_services_types.py\n@@ -5,9 +5,9 @@\n from plone.app.testing import SITE_OWNER_PASSWORD\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import TEST_USER_PASSWORD\n+from plone.restapi.bbb import ISelectableConstrainTypes\n from plone.restapi.testing import PLONE_RESTAPI_DX_FUNCTIONAL_TESTING\n from plone.restapi.testing import RelativeSession\n-from Products.CMFPlone.interfaces.constrains import ISelectableConstrainTypes\n \n import transaction\n import unittest\ndiff --git a/src/plone/restapi/tests/test_services_users.py b/src/plone/restapi/tests/test_services_users.py\nindex 9958b2fa7c..888d94b6b8 100644\n--- a/src/plone/restapi/tests/test_services_users.py\n+++ b/src/plone/restapi/tests/test_services_users.py\n@@ -1,3 +1,4 @@\n+from contextlib import contextmanager\n from DateTime import DateTime\n from plone import api\n from plone.app.testing import setRoles\n@@ -5,12 +6,12 @@\n from plone.app.testing import SITE_OWNER_PASSWORD\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import TEST_USER_PASSWORD\n+from plone.restapi.bbb import ISecuritySchema\n from plone.restapi.services.users.get import UsersGet\n from plone.restapi.testing import PLONE_RESTAPI_DX_FUNCTIONAL_TESTING\n from plone.restapi.testing import RelativeSession\n from Products.CMFCore.permissions import SetOwnPassword\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ISecuritySchema\n from Products.MailHost.interfaces import IMailHost\n from zope.component import getAdapter\n from zope.component import getUtility\n@@ -71,6 +72,7 @@ def tearDown(self):\n         self.api_session.close()\n         self.anon_api_session.close()\n \n+    @contextmanager\n     def makeRealImage(self):\n         from Products.PlonePAS.tests import dummy\n \n@@ -78,9 +80,8 @@ def makeRealImage(self):\n \n         pas_path = os.path.dirname(ppas.__file__)\n         path = os.path.join(pas_path, "tool.gif")\n-        image = open(path, "rb")\n-        image_upload = dummy.FileUpload(dummy.FieldStorage(image))\n-        return image_upload\n+        with open(path, "rb") as image:\n+            yield dummy.FileUpload(dummy.FieldStorage(image))\n \n     def test_list_users(self):\n         response = self.api_session.get("/@users")\n@@ -350,10 +351,10 @@ def test_get_other_user_info_when_logged_in(self):\n         noam_api_session.close()\n \n     def test_get_user_with_portrait_set(self):\n-        image = self.makeRealImage()\n-        pm = api.portal.get_tool("portal_membership")\n-        pm.changeMemberPortrait(image, "noam")\n-        transaction.commit()\n+        with self.makeRealImage() as image:\n+            pm = api.portal.get_tool("portal_membership")\n+            pm.changeMemberPortrait(image, "noam")\n+            transaction.commit()\n \n         response = self.api_session.get("/@users/noam")\n \n@@ -956,10 +957,10 @@ def test_add_user_no_roles_sets_member_as_sensible_default(self):\n         self.assertEqual(1, len(response["roles"]))\n \n     def test_get_own_user_portrait(self):\n-        image = self.makeRealImage()\n-        pm = api.portal.get_tool("portal_membership")\n-        pm.changeMemberPortrait(image, "noam")\n-        transaction.commit()\n+        with self.makeRealImage() as image:\n+            pm = api.portal.get_tool("portal_membership")\n+            pm.changeMemberPortrait(image, "noam")\n+            transaction.commit()\n \n         self.assertEqual("noam", pm.getPersonalPortrait("noam").getId())\n \n@@ -990,10 +991,10 @@ def test_get_user_portrait_not_set(self):\n         self.assertEqual(404, response.status_code)\n \n     def test_get_user_portrait(self):\n-        image = self.makeRealImage()\n-        pm = api.portal.get_tool("portal_membership")\n-        pm.changeMemberPortrait(image, "noam")\n-        transaction.commit()\n+        with self.makeRealImage() as image:\n+            pm = api.portal.get_tool("portal_membership")\n+            pm.changeMemberPortrait(image, "noam")\n+            transaction.commit()\n \n         response = self.api_session.get(\n             "/@portrait/noam",\n@@ -1003,10 +1004,10 @@ def test_get_user_portrait(self):\n         self.assertEqual(response.headers["Content-Type"], "image/gif")\n \n     def test_get_user_portrait_anonymous(self):\n-        image = self.makeRealImage()\n-        pm = api.portal.get_tool("portal_membership")\n-        pm.changeMemberPortrait(image, "admin")\n-        transaction.commit()\n+        with self.makeRealImage() as image:\n+            pm = api.portal.get_tool("portal_membership")\n+            pm.changeMemberPortrait(image, "admin")\n+            transaction.commit()\n \n         response = self.anon_api_session.get(\n             "/@portrait/admin",\n@@ -1027,10 +1028,10 @@ def test_get_user_portrait_if_email_login_enabled(self):\n         )\n         transaction.commit()\n \n-        image = self.makeRealImage()\n-        pm = api.portal.get_tool("portal_membership")\n-        pm.changeMemberPortrait(image, "howard.zinn@example.com")\n-        transaction.commit()\n+        with self.makeRealImage() as image:\n+            pm = api.portal.get_tool("portal_membership")\n+            pm.changeMemberPortrait(image, "howard.zinn@example.com")\n+            transaction.commit()\n \n         response = self.api_session.get("/@users/howard.zinn@example.com")\n         self.assertEqual(200, response.status_code)\ndiff --git a/src/plone/restapi/tests/test_services_userschema.py b/src/plone/restapi/tests/test_services_userschema.py\nindex 50a972a51d..5a09bb1e48 100644\n--- a/src/plone/restapi/tests/test_services_userschema.py\n+++ b/src/plone/restapi/tests/test_services_userschema.py\n@@ -11,6 +11,7 @@\n import transaction\n import unittest\n \n+\n try:\n     from Products.CMFPlone.factory import _IMREALLYPLONE5  # noqa\n except ImportError:\ndiff --git a/src/plone/restapi/tests/test_setup.py b/src/plone/restapi/tests/test_setup.py\nindex c4d65e9cd8..dde2dfd2c6 100644\n--- a/src/plone/restapi/tests/test_setup.py\n+++ b/src/plone/restapi/tests/test_setup.py\n@@ -2,10 +2,14 @@\n from plone.restapi import PROJECT_NAME\n from plone.restapi.testing import PLONE_RESTAPI_DX_INTEGRATION_TESTING\n \n-import unittest\n \n+try:\n+    from plone.base.utils import get_installer\n+except ImportError:\n+    # Plone 5.2\n+    from Products.CMFPlone.utils import get_installer\n \n-from Products.CMFPlone.utils import get_installer\n+import unittest\n \n \n class TestInstall(unittest.TestCase):\ndiff --git a/src/plone/restapi/tests/test_site_deserializer.py b/src/plone/restapi/tests/test_site_deserializer.py\nindex 26ae2ed43b..80b8b85234 100644\n--- a/src/plone/restapi/tests/test_site_deserializer.py\n+++ b/src/plone/restapi/tests/test_site_deserializer.py\n@@ -10,6 +10,7 @@\n import json\n import unittest\n \n+\n HAS_PLONE_6 = getattr(\n     import_module("Products.CMFPlone.factory"), "PLONE60MARKER", False\n )\ndiff --git a/src/plone/restapi/tests/test_site_serializer.py b/src/plone/restapi/tests/test_site_serializer.py\nindex 6c3139995f..34174a7629 100644\n--- a/src/plone/restapi/tests/test_site_serializer.py\n+++ b/src/plone/restapi/tests/test_site_serializer.py\n@@ -15,6 +15,7 @@\n import json\n import unittest\n \n+\n HAS_PLONE_6 = getattr(\n     import_module("Products.CMFPlone.factory"), "PLONE60MARKER", False\n )\ndiff --git a/src/plone/restapi/tests/test_statictime.py b/src/plone/restapi/tests/test_statictime.py\nindex 95ade5be3f..38ba23a3d2 100644\n--- a/src/plone/restapi/tests/test_statictime.py\n+++ b/src/plone/restapi/tests/test_statictime.py\n@@ -1,33 +1,34 @@\n from datetime import datetime\n-from DateTime import DateTime\n from datetime import timedelta\n+from DateTime import DateTime\n from dateutil import tz\n from operator import itemgetter\n from plone import api\n+from plone.app.discussion import comment\n from plone.app.discussion.interfaces import IConversation\n from plone.app.discussion.interfaces import IDiscussionSettings\n from plone.app.discussion.interfaces import IReplies\n-from plone.app.discussion import comment\n from plone.app.event.base import default_timezone\n+from plone.app.iterate.interfaces import ICheckinCheckoutPolicy\n from plone.app.layout.viewlets.content import ContentHistoryViewlet\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n from plone.locking.interfaces import ILockable\n from plone.locking.interfaces import ITTWLockable\n from plone.registry.interfaces import IRegistry\n+from plone.restapi.serializer.converters import json_compatible\n+from plone.restapi.serializer.working_copy import WorkingCopyInfo\n from plone.restapi.testing import PLONE_RESTAPI_DX_FUNCTIONAL_TESTING\n+from plone.restapi.testing import PLONE_RESTAPI_ITERATE_FUNCTIONAL_TESTING\n from plone.restapi.tests.statictime import StaticTime\n from zope.component import createObject\n from zope.component import getUtility\n from zope.interface import alsoProvides\n-from plone.app.iterate.interfaces import ICheckinCheckoutPolicy\n-from plone.restapi.serializer.working_copy import WorkingCopyInfo\n-from plone.restapi.testing import PLONE_RESTAPI_ITERATE_FUNCTIONAL_TESTING\n-from plone.restapi.serializer.converters import json_compatible\n \n import transaction\n import unittest\n \n+\n # Check if comments from p.a.discussion are tz aware\n # Introduced via https://github.com/plone/plone.app.discussion/pull/204\n HAS_TZ_AWARE_COMMENTS = hasattr(comment, "localized_now")\ndiff --git a/src/plone/restapi/tests/test_system.py b/src/plone/restapi/tests/test_system.py\nindex 6662621dd0..5f275e64c3 100644\n--- a/src/plone/restapi/tests/test_system.py\n+++ b/src/plone/restapi/tests/test_system.py\n@@ -4,6 +4,7 @@\n from plone.restapi.testing import RelativeSession\n from Products.CMFCore.utils import getToolByName\n \n+\n try:\n     from Products.CMFPlone.controlpanel.browser.overview import OverviewControlPanel\n except ImportError:\ndiff --git a/src/plone/restapi/tests/test_translations.py b/src/plone/restapi/tests/test_translations.py\nindex 901691a776..3ad6b78657 100644\n--- a/src/plone/restapi/tests/test_translations.py\n+++ b/src/plone/restapi/tests/test_translations.py\n@@ -1,14 +1,13 @@\n from plone import api\n+from plone.app.multilingual.interfaces import IPloneAppMultilingualInstalled\n+from plone.app.multilingual.interfaces import ITranslationManager\n from plone.app.testing import login\n from plone.app.testing import SITE_OWNER_NAME\n from plone.app.testing import SITE_OWNER_PASSWORD\n from plone.dexterity.utils import createContentInContainer\n-from plone.app.multilingual.interfaces import IPloneAppMultilingualInstalled\n-from plone.app.multilingual.interfaces import ITranslationManager\n+from plone.restapi.bbb import ILanguage\n from plone.restapi.testing import PLONE_RESTAPI_DX_PAM_FUNCTIONAL_TESTING\n from plone.restapi.testing import PLONE_RESTAPI_DX_PAM_INTEGRATION_TESTING\n-from Products.CMFPlone.interfaces import ILanguage\n-\n from zope.component import getMultiAdapter\n from zope.interface import alsoProvides\n \ndiff --git a/src/plone/restapi/types/adapters.py b/src/plone/restapi/types/adapters.py\nindex 5bbb9dd8e1..2998ca7de5 100644\n--- a/src/plone/restapi/types/adapters.py\n+++ b/src/plone/restapi/types/adapters.py\n@@ -3,11 +3,11 @@\n from plone.restapi.types.interfaces import IJsonSchemaProvider\n from plone.restapi.types.utils import get_fieldsets\n from plone.restapi.types.utils import get_jsonschema_properties\n+from plone.restapi.types.utils import get_multilingual_directives\n from plone.restapi.types.utils import get_querysource_url\n from plone.restapi.types.utils import get_source_url\n from plone.restapi.types.utils import get_vocabulary_url\n from plone.restapi.types.utils import get_widget_params\n-from plone.restapi.types.utils import get_multilingual_directives\n from plone.schema import IEmail\n from plone.schema import IJSONField\n from z3c.formwidget.query.interfaces import IQuerySource\n@@ -33,11 +33,11 @@\n from zope.schema.interfaces import IList\n from zope.schema.interfaces import IObject\n from zope.schema.interfaces import IPassword\n-from zope.schema.interfaces import IURI\n from zope.schema.interfaces import ISet\n from zope.schema.interfaces import IText\n from zope.schema.interfaces import ITextLine\n from zope.schema.interfaces import ITuple\n+from zope.schema.interfaces import IURI\n \n \n @adapter(IField, Interface, Interface)\ndiff --git a/src/plone/restapi/types/utils.py b/src/plone/restapi/types/utils.py\nindex 5473280fde..2977ef6e1f 100644\n--- a/src/plone/restapi/types/utils.py\n+++ b/src/plone/restapi/types/utils.py\n@@ -14,6 +14,7 @@\n \n from collections import OrderedDict\n from copy import copy\n+from plone.app.multilingual.dx.interfaces import MULTILINGUAL_KEY\n from plone.autoform.form import AutoExtensibleForm\n from plone.autoform.interfaces import IParameterizedWidget\n from plone.autoform.interfaces import WIDGETS_KEY\n@@ -28,6 +29,7 @@\n from plone.supermodel import serializeModel\n from plone.supermodel.interfaces import FIELDSETS_KEY\n from plone.supermodel.utils import mergedTaggedValueDict\n+from plone.supermodel.utils import mergedTaggedValueList\n from plone.supermodel.utils import syncSchema\n from Products.CMFCore.utils import getToolByName\n from z3c.form import form as z3c_form\n@@ -40,8 +42,7 @@\n from zope.i18n import translate\n from zope.interface import implementer\n from zope.schema.interfaces import IVocabularyFactory\n-from plone.app.multilingual.dx.interfaces import MULTILINGUAL_KEY\n-from plone.supermodel.utils import mergedTaggedValueList\n+\n \n try:\n     # Plone 5.1+\ndiff --git a/src/plone/restapi/upgrades/to0005.py b/src/plone/restapi/upgrades/to0005.py\nindex 4d3d2aeda4..06bf7ca099 100644\n--- a/src/plone/restapi/upgrades/to0005.py\n+++ b/src/plone/restapi/upgrades/to0005.py\n@@ -1,9 +1,10 @@\n from plone import api\n-from zope.component import queryUtility\n from plone.dexterity.interfaces import IDexterityFTI\n+from zope.component import queryUtility\n \n import logging\n \n+\n logger = logging.getLogger(__name__)\n \n OLD_BEHAVIOR_NAME = "plone.restapi.behaviors.ITiles"\ndiff --git a/src/plone/restapi/upgrades/to0006.py b/src/plone/restapi/upgrades/to0006.py\nindex 30593c4d5e..9782f29114 100644\n--- a/src/plone/restapi/upgrades/to0006.py\n+++ b/src/plone/restapi/upgrades/to0006.py\n@@ -1,9 +1,10 @@\n from plone import api\n-from zope.component import queryUtility\n from plone.dexterity.interfaces import IDexterityFTI\n+from zope.component import queryUtility\n \n import logging\n \n+\n logger = logging.getLogger(__name__)\n \n DEPRECATED_NEW_BEHAVIOR_NAME = "plone.restapi.behaviors.IBlocks"\n'

