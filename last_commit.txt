Repository: plone.restapi


Branch: refs/heads/master
Date: 2021-06-07T22:04:13+02:00
Author: Timo Stollenwerk (tisto) <tisto@users.noreply.github.com>
Commit: https://github.com/plone/plone.restapi/commit/197868712b1324788f14a03a99fddd969323547f

Remove p.a.iterate check (#1149)

* Remove p.a.iterate check

* Black

Files changed:
A news/1148.bugfix
M src/plone/restapi/serializer/dxcontent.py

b'diff --git a/news/1148.bugfix b/news/1148.bugfix\nnew file mode 100644\nindex 000000000..3d37de176\n--- /dev/null\n+++ b/news/1148.bugfix\n@@ -0,0 +1 @@\n+Remove unecessary check for plone.app.iterate which breaks the @components attributes. [timo]\n\\ No newline at end of file\ndiff --git a/src/plone/restapi/serializer/dxcontent.py b/src/plone/restapi/serializer/dxcontent.py\nindex 2c8d66ac7..46fc07b1d 100644\n--- a/src/plone/restapi/serializer/dxcontent.py\n+++ b/src/plone/restapi/serializer/dxcontent.py\n@@ -30,14 +30,6 @@\n from zope.schema import getFields\n from zope.security.interfaces import IPermission\n \n-try:\n-    # Plone 4.3 p.a.iterate has no sane testing infrastructure, so we ignore it\n-    from plone.app.iterate.testing import PLONEAPPITERATEDEX_FIXTURE  # noqa\n-\n-    HAS_ITERATE = True\n-except ImportError:\n-    HAS_ITERATE = False\n-\n \n @implementer(ISerializeToJson)\n @adapter(IDexterityContent, Interface)\n@@ -85,14 +77,11 @@ def __call__(self, version=None, include_items=True):\n         )\n \n         # Insert working copy information\n-        if HAS_ITERATE:\n-            baseline, working_copy = WorkingCopyInfo(\n-                self.context\n-            ).get_working_copy_info()\n-            result.update({"working_copy": working_copy, "working_copy_of": baseline})\n-\n-            # Insert expandable elements\n-            result.update(expandable_elements(self.context, self.request))\n+        baseline, working_copy = WorkingCopyInfo(self.context).get_working_copy_info()\n+        result.update({"working_copy": working_copy, "working_copy_of": baseline})\n+\n+        # Insert expandable elements\n+        result.update(expandable_elements(self.context, self.request))\n \n         # Insert field values\n         for schema in iterSchemata(self.context):\n'

