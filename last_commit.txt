Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-08-17T18:37:32+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/77fd772470601ec8808e7f6f32b2cc91d9cc3579

Supress warning of intentional deprecated import for BBB.

Files changed:
A news/3610.bugfix
M Products/CMFPlone/__init__.py

b'diff --git a/Products/CMFPlone/__init__.py b/Products/CMFPlone/__init__.py\nindex 207ba2cdec..0f1a52ee5f 100644\n--- a/Products/CMFPlone/__init__.py\n+++ b/Products/CMFPlone/__init__.py\n@@ -1,8 +1,9 @@\n from App.ImageFile import ImageFile\n \n import os\n-import sys\n import pkg_resources\n+import sys\n+import warnings\n import zope.deferredimport\n \n __version__ = pkg_resources.require("Products.CMFPlone")[0].version\n@@ -72,7 +73,9 @@ def initialize(context):\n     allow_class(WorkflowException)\n \n     # bbb - remove in Plone 7\n-    from Products.CMFPlone.PloneBatch import Batch\n+    with warnings.catch_warnings():\n+        warnings.filterwarnings("ignore",category=DeprecationWarning)\n+        from Products.CMFPlone.PloneBatch import Batch\n     allow_class(Batch)\n \n     # Make Batch available at module level\ndiff --git a/news/3610.bugfix b/news/3610.bugfix\nnew file mode 100644\nindex 0000000000..009d99d62a\n--- /dev/null\n+++ b/news/3610.bugfix\n@@ -0,0 +1,2 @@\n+Supress warning of intentional deprecated import for BBB.\n+[jensens]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-08-17T18:41:45+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/c83282612dca074e8c2c8d6aa896381d3e152178

black/isort

Files changed:
M Products/CMFPlone/__init__.py

b'diff --git a/Products/CMFPlone/__init__.py b/Products/CMFPlone/__init__.py\nindex 0f1a52ee5f..4edd033abe 100644\n--- a/Products/CMFPlone/__init__.py\n+++ b/Products/CMFPlone/__init__.py\n@@ -6,6 +6,7 @@\n import warnings\n import zope.deferredimport\n \n+\n __version__ = pkg_resources.require("Products.CMFPlone")[0].version\n \n \n@@ -13,22 +14,25 @@\n this_module = sys.modules[__name__]\n _marker = []\n \n-ADD_CONTENT_PERMISSION = \'Add portal content\'\n-misc_ = {\'plone_icon\': ImageFile(\n-    os.path.join(\'skins\', \'plone_images\', \'logoIcon.png\'),\n-    cmfplone_globals)}\n+ADD_CONTENT_PERMISSION = "Add portal content"\n+misc_ = {\n+    "plone_icon": ImageFile(\n+        os.path.join("skins", "plone_images", "logoIcon.png"), cmfplone_globals\n+    )\n+}\n \n zope.deferredimport.initialize()\n zope.deferredimport.deprecated(\n     "Import from plone.base instead (to be removed in Plone 7)",\n-    PloneMessageFactory=\'plone.base:PloneMessageFactory\',\n-    PloneLocalesMessageFactory=\'plone.base:PloneMessageFactory\',\n+    PloneMessageFactory="plone.base:PloneMessageFactory",\n+    PloneLocalesMessageFactory="plone.base:PloneMessageFactory",\n )\n zope.deferredimport.deprecated(\n     "Import from plone.app.discussion.interfaces instead (to be removed in Plone 7)",\n-    DISCUSSION_ANNOTATION_KEY=\'plone.app.discussion.interfaces:DISCUSSION_ANNOTATION_KEY\',\n+    DISCUSSION_ANNOTATION_KEY="plone.app.discussion.interfaces:DISCUSSION_ANNOTATION_KEY",\n )\n \n+\n def initialize(context):\n \n     # Stuff has been moved from module level to this method for a\n@@ -37,121 +41,117 @@ def initialize(context):\n     # For test authors (and people who use parts of Plone only)\n     # it does speed up import *significantly*.\n \n-    from AccessControl import ModuleSecurityInfo\n     from AccessControl import allow_class\n     from AccessControl import allow_module\n+    from AccessControl import ModuleSecurityInfo\n \n     # protect OFS.ObjectManager\n-    ModuleSecurityInfo(\'OFS.ObjectManager\').setDefaultAccess(0)\n-    ModuleSecurityInfo(\'OFS.ObjectManager\').declareObjectPrivate()\n-    ModuleSecurityInfo(\'OFS.ObjectManager\').declarePublic(\n-        \'BeforeDeleteException\')\n+    ModuleSecurityInfo("OFS.ObjectManager").setDefaultAccess(0)\n+    ModuleSecurityInfo("OFS.ObjectManager").declareObjectPrivate()\n+    ModuleSecurityInfo("OFS.ObjectManager").declarePublic("BeforeDeleteException")\n \n     # allow logging\n-    ModuleSecurityInfo(\'logging\').declarePublic(\'getLogger\')\n+    ModuleSecurityInfo("logging").declarePublic("getLogger")\n     from logging import Logger\n+\n     allow_class(Logger)\n \n     # various small utils functions\n     # added for unescaping view names in urls when finding selected action\n-    ModuleSecurityInfo(\'urllib\').declarePublic(\'unquote\')\n+    ModuleSecurityInfo("urllib").declarePublic("unquote")\n \n-    allow_module(\'Products.CMFPlone.utils\')\n+    allow_module("Products.CMFPlone.utils")\n \n     # For content_status_modify\n     from Products.CMFCore.WorkflowCore import ObjectDeleted\n     from Products.CMFCore.WorkflowCore import ObjectMoved\n     from Products.CMFCore.WorkflowCore import WorkflowException\n-    ModuleSecurityInfo(\n-        \'Products.CMFCore.WorkflowCore\').declarePublic(\'ObjectDeleted\')\n-    ModuleSecurityInfo(\n-        \'Products.CMFCore.WorkflowCore\').declarePublic(\'ObjectMoved\')\n-    ModuleSecurityInfo(\n-        \'Products.CMFCore.WorkflowCore\').declarePublic(\'WorkflowException\')\n+\n+    ModuleSecurityInfo("Products.CMFCore.WorkflowCore").declarePublic("ObjectDeleted")\n+    ModuleSecurityInfo("Products.CMFCore.WorkflowCore").declarePublic("ObjectMoved")\n+    ModuleSecurityInfo("Products.CMFCore.WorkflowCore").declarePublic(\n+        "WorkflowException"\n+    )\n     allow_class(ObjectDeleted)\n     allow_class(ObjectMoved)\n     allow_class(WorkflowException)\n \n     # bbb - remove in Plone 7\n     with warnings.catch_warnings():\n-        warnings.filterwarnings("ignore",category=DeprecationWarning)\n+        warnings.filterwarnings("ignore", category=DeprecationWarning)\n         from Products.CMFPlone.PloneBatch import Batch\n     allow_class(Batch)\n \n     # Make Batch available at module level\n     this_module.Batch = Batch\n \n-    ModuleSecurityInfo(\'StringIO\').declarePublic(\'StringIO\')\n+    ModuleSecurityInfo("StringIO").declarePublic("StringIO")\n \n     # Make Unauthorized importable TTW\n-    ModuleSecurityInfo(\'AccessControl\').declarePublic(\'Unauthorized\')\n+    ModuleSecurityInfo("AccessControl").declarePublic("Unauthorized")\n \n     # Make Forbidden importable TTW\n-    ModuleSecurityInfo(\'zExceptions\').declarePublic(\'Forbidden\')\n+    ModuleSecurityInfo("zExceptions").declarePublic("Forbidden")\n \n     # Make ConflictError importable TTW\n-    ModuleSecurityInfo(\'ZODB.POSException\').declarePublic(\'ConflictError\')\n+    ModuleSecurityInfo("ZODB.POSException").declarePublic("ConflictError")\n \n     # Make ZCTextIndex ParseError importable TTW\n-    ModuleSecurityInfo(\'Products.ZCTextIndex.ParseTree\') \\\n-        .declarePublic(\'ParseError\')\n+    ModuleSecurityInfo("Products.ZCTextIndex.ParseTree").declarePublic("ParseError")\n \n     # Make DateTimeError importable TTW\n-    ModuleSecurityInfo(\'DateTime.interfaces\').declarePublic(\'DateTimeError\')\n-    ModuleSecurityInfo(\'DateTime.interfaces\').declarePublic(\'SyntaxError\')\n+    ModuleSecurityInfo("DateTime.interfaces").declarePublic("DateTimeError")\n+    ModuleSecurityInfo("DateTime.interfaces").declarePublic("SyntaxError")\n \n     # BBB support for DateTime < 3\n-    ModuleSecurityInfo(\'DateTime.DateTime\').declarePublic(\'DateTimeError\')\n-    ModuleSecurityInfo(\'DateTime.DateTime\').declarePublic(\'SyntaxError\')\n+    ModuleSecurityInfo("DateTime.DateTime").declarePublic("DateTimeError")\n+    ModuleSecurityInfo("DateTime.DateTime").declarePublic("SyntaxError")\n \n     # Make CopyError importable TTW\n-    ModuleSecurityInfo(\'OFS.CopySupport\').declarePublic(\'CopyError\')\n+    ModuleSecurityInfo("OFS.CopySupport").declarePublic("CopyError")\n \n     # Make AllowSendto importable TTW\n-    ModuleSecurityInfo(\'Products.CMFPlone.PloneTool\') \\\n-        .declarePublic(\'AllowSendto\')\n+    ModuleSecurityInfo("Products.CMFPlone.PloneTool").declarePublic("AllowSendto")\n \n     # Make ZCatalog\'s mergeResults importable TTW\n-    ModuleSecurityInfo(\'Products.ZCatalog.Catalog\') \\\n-        .declarePublic(\'mergeResults\')\n+    ModuleSecurityInfo("Products.ZCatalog.Catalog").declarePublic("mergeResults")\n \n     # Make the navtree constructs available TTW\n-    allow_module(\'Products.CMFPlone.browser.navtree\')\n+    allow_module("Products.CMFPlone.browser.navtree")\n \n     # Allow access to the exception in the folder_delete script\n     from OFS.ObjectManager import BeforeDeleteException\n-    allow_module(\'OFS.ObjectManager\')\n+\n+    allow_module("OFS.ObjectManager")\n     allow_class(BeforeDeleteException)\n \n     # Make cgi.escape available TTW\n-    ModuleSecurityInfo(\'cgi\').declarePublic(\'escape\')\n+    ModuleSecurityInfo("cgi").declarePublic("escape")\n \n     # Make warnings available TTW\n-    ModuleSecurityInfo(\'warnings\').declarePublic(\'warn\')\n+    ModuleSecurityInfo("warnings").declarePublic("warn")\n \n     # Apply monkey patches\n-    from Products.CMFPlone import patches  # noqa\n-\n-    # Register unicode splitter w/ ZCTextIndex\n-    # pipeline registry\n-    from Products.CMFPlone import UnicodeSplitter  # noqa\n-\n     # CMFCore tools\n     from Products.CMFCore import CachingPolicyManager\n \n     # Plone tools\n-    from Products.CMFPlone import PloneTool\n+    # Register unicode splitter w/ ZCTextIndex\n+    # pipeline registry\n+    from Products.CMFPlone import ActionsTool\n+    from Products.CMFPlone import CatalogTool\n     from Products.CMFPlone import MigrationTool\n+    from Products.CMFPlone import patches  # noqa\n     from Products.CMFPlone import PloneControlPanel\n-    from Products.CMFPlone import WorkflowTool\n-    from Products.CMFPlone import URLTool\n-    from Products.CMFPlone import RegistrationTool\n+    from Products.CMFPlone import PloneTool\n     from Products.CMFPlone import PropertiesTool\n-    from Products.CMFPlone import ActionsTool\n-    from Products.CMFPlone import TypesTool\n-    from Products.CMFPlone import CatalogTool\n+    from Products.CMFPlone import RegistrationTool\n     from Products.CMFPlone import SkinsTool\n     from Products.CMFPlone import TranslationServiceTool\n+    from Products.CMFPlone import TypesTool\n+    from Products.CMFPlone import UnicodeSplitter  # noqa\n+    from Products.CMFPlone import URLTool\n+    from Products.CMFPlone import WorkflowTool\n \n     tools = (\n         PloneTool.PloneTool,\n@@ -174,32 +174,32 @@ def initialize(context):\n \n     # Register tools and content\n     ToolInit(\n-        \'Plone Tool\',\n+        "Plone Tool",\n         tools=tools,\n-        icon=\'tool.gif\',\n+        icon="tool.gif",\n     ).initialize(context)\n \n-\n     from AccessControl.Permissions import view_management_screens\n-    from Products.CMFPlone.Portal import PloneSite\n     from Products.CMFPlone.factory import zmi_constructor\n+    from Products.CMFPlone.Portal import PloneSite\n+\n     context.registerClass(\n         instance_class=PloneSite,\n         permission=view_management_screens,\n-        constructors=(zmi_constructor, ),\n+        constructors=(zmi_constructor,),\n     )\n \n     from plone.folder import nogopip\n+\n     context.registerClass(\n         nogopip.GopipIndex,\n-        permission=\'Add Pluggable Index\',\n-        constructors=(nogopip.manage_addGopipForm,\n-                      nogopip.manage_addGopipIndex),\n-        icon=\'index.gif\',\n-        visibility=None\n+        permission="Add Pluggable Index",\n+        constructors=(nogopip.manage_addGopipForm, nogopip.manage_addGopipIndex),\n+        icon="index.gif",\n+        visibility=None,\n     )\n \n+\n # Apply early monkey patches.  For these patches, it is too late if we do this\n # in the initialize method.\n from Products.CMFPlone import earlypatches  # noqa\n-\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-08-18T08:37:55+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/40b12fa7fd5ff02bdf6b083843f344818fb2ea75

Merge pull request #3610 from plone/suppress-warning

Supress warning of intentional deprecated import for BBB.

Files changed:
A news/3610.bugfix
M Products/CMFPlone/__init__.py

b'diff --git a/Products/CMFPlone/__init__.py b/Products/CMFPlone/__init__.py\nindex 207ba2cdec..4edd033abe 100644\n--- a/Products/CMFPlone/__init__.py\n+++ b/Products/CMFPlone/__init__.py\n@@ -1,10 +1,12 @@\n from App.ImageFile import ImageFile\n \n import os\n-import sys\n import pkg_resources\n+import sys\n+import warnings\n import zope.deferredimport\n \n+\n __version__ = pkg_resources.require("Products.CMFPlone")[0].version\n \n \n@@ -12,22 +14,25 @@\n this_module = sys.modules[__name__]\n _marker = []\n \n-ADD_CONTENT_PERMISSION = \'Add portal content\'\n-misc_ = {\'plone_icon\': ImageFile(\n-    os.path.join(\'skins\', \'plone_images\', \'logoIcon.png\'),\n-    cmfplone_globals)}\n+ADD_CONTENT_PERMISSION = "Add portal content"\n+misc_ = {\n+    "plone_icon": ImageFile(\n+        os.path.join("skins", "plone_images", "logoIcon.png"), cmfplone_globals\n+    )\n+}\n \n zope.deferredimport.initialize()\n zope.deferredimport.deprecated(\n     "Import from plone.base instead (to be removed in Plone 7)",\n-    PloneMessageFactory=\'plone.base:PloneMessageFactory\',\n-    PloneLocalesMessageFactory=\'plone.base:PloneMessageFactory\',\n+    PloneMessageFactory="plone.base:PloneMessageFactory",\n+    PloneLocalesMessageFactory="plone.base:PloneMessageFactory",\n )\n zope.deferredimport.deprecated(\n     "Import from plone.app.discussion.interfaces instead (to be removed in Plone 7)",\n-    DISCUSSION_ANNOTATION_KEY=\'plone.app.discussion.interfaces:DISCUSSION_ANNOTATION_KEY\',\n+    DISCUSSION_ANNOTATION_KEY="plone.app.discussion.interfaces:DISCUSSION_ANNOTATION_KEY",\n )\n \n+\n def initialize(context):\n \n     # Stuff has been moved from module level to this method for a\n@@ -36,119 +41,117 @@ def initialize(context):\n     # For test authors (and people who use parts of Plone only)\n     # it does speed up import *significantly*.\n \n-    from AccessControl import ModuleSecurityInfo\n     from AccessControl import allow_class\n     from AccessControl import allow_module\n+    from AccessControl import ModuleSecurityInfo\n \n     # protect OFS.ObjectManager\n-    ModuleSecurityInfo(\'OFS.ObjectManager\').setDefaultAccess(0)\n-    ModuleSecurityInfo(\'OFS.ObjectManager\').declareObjectPrivate()\n-    ModuleSecurityInfo(\'OFS.ObjectManager\').declarePublic(\n-        \'BeforeDeleteException\')\n+    ModuleSecurityInfo("OFS.ObjectManager").setDefaultAccess(0)\n+    ModuleSecurityInfo("OFS.ObjectManager").declareObjectPrivate()\n+    ModuleSecurityInfo("OFS.ObjectManager").declarePublic("BeforeDeleteException")\n \n     # allow logging\n-    ModuleSecurityInfo(\'logging\').declarePublic(\'getLogger\')\n+    ModuleSecurityInfo("logging").declarePublic("getLogger")\n     from logging import Logger\n+\n     allow_class(Logger)\n \n     # various small utils functions\n     # added for unescaping view names in urls when finding selected action\n-    ModuleSecurityInfo(\'urllib\').declarePublic(\'unquote\')\n+    ModuleSecurityInfo("urllib").declarePublic("unquote")\n \n-    allow_module(\'Products.CMFPlone.utils\')\n+    allow_module("Products.CMFPlone.utils")\n \n     # For content_status_modify\n     from Products.CMFCore.WorkflowCore import ObjectDeleted\n     from Products.CMFCore.WorkflowCore import ObjectMoved\n     from Products.CMFCore.WorkflowCore import WorkflowException\n-    ModuleSecurityInfo(\n-        \'Products.CMFCore.WorkflowCore\').declarePublic(\'ObjectDeleted\')\n-    ModuleSecurityInfo(\n-        \'Products.CMFCore.WorkflowCore\').declarePublic(\'ObjectMoved\')\n-    ModuleSecurityInfo(\n-        \'Products.CMFCore.WorkflowCore\').declarePublic(\'WorkflowException\')\n+\n+    ModuleSecurityInfo("Products.CMFCore.WorkflowCore").declarePublic("ObjectDeleted")\n+    ModuleSecurityInfo("Products.CMFCore.WorkflowCore").declarePublic("ObjectMoved")\n+    ModuleSecurityInfo("Products.CMFCore.WorkflowCore").declarePublic(\n+        "WorkflowException"\n+    )\n     allow_class(ObjectDeleted)\n     allow_class(ObjectMoved)\n     allow_class(WorkflowException)\n \n     # bbb - remove in Plone 7\n-    from Products.CMFPlone.PloneBatch import Batch\n+    with warnings.catch_warnings():\n+        warnings.filterwarnings("ignore", category=DeprecationWarning)\n+        from Products.CMFPlone.PloneBatch import Batch\n     allow_class(Batch)\n \n     # Make Batch available at module level\n     this_module.Batch = Batch\n \n-    ModuleSecurityInfo(\'StringIO\').declarePublic(\'StringIO\')\n+    ModuleSecurityInfo("StringIO").declarePublic("StringIO")\n \n     # Make Unauthorized importable TTW\n-    ModuleSecurityInfo(\'AccessControl\').declarePublic(\'Unauthorized\')\n+    ModuleSecurityInfo("AccessControl").declarePublic("Unauthorized")\n \n     # Make Forbidden importable TTW\n-    ModuleSecurityInfo(\'zExceptions\').declarePublic(\'Forbidden\')\n+    ModuleSecurityInfo("zExceptions").declarePublic("Forbidden")\n \n     # Make ConflictError importable TTW\n-    ModuleSecurityInfo(\'ZODB.POSException\').declarePublic(\'ConflictError\')\n+    ModuleSecurityInfo("ZODB.POSException").declarePublic("ConflictError")\n \n     # Make ZCTextIndex ParseError importable TTW\n-    ModuleSecurityInfo(\'Products.ZCTextIndex.ParseTree\') \\\n-        .declarePublic(\'ParseError\')\n+    ModuleSecurityInfo("Products.ZCTextIndex.ParseTree").declarePublic("ParseError")\n \n     # Make DateTimeError importable TTW\n-    ModuleSecurityInfo(\'DateTime.interfaces\').declarePublic(\'DateTimeError\')\n-    ModuleSecurityInfo(\'DateTime.interfaces\').declarePublic(\'SyntaxError\')\n+    ModuleSecurityInfo("DateTime.interfaces").declarePublic("DateTimeError")\n+    ModuleSecurityInfo("DateTime.interfaces").declarePublic("SyntaxError")\n \n     # BBB support for DateTime < 3\n-    ModuleSecurityInfo(\'DateTime.DateTime\').declarePublic(\'DateTimeError\')\n-    ModuleSecurityInfo(\'DateTime.DateTime\').declarePublic(\'SyntaxError\')\n+    ModuleSecurityInfo("DateTime.DateTime").declarePublic("DateTimeError")\n+    ModuleSecurityInfo("DateTime.DateTime").declarePublic("SyntaxError")\n \n     # Make CopyError importable TTW\n-    ModuleSecurityInfo(\'OFS.CopySupport\').declarePublic(\'CopyError\')\n+    ModuleSecurityInfo("OFS.CopySupport").declarePublic("CopyError")\n \n     # Make AllowSendto importable TTW\n-    ModuleSecurityInfo(\'Products.CMFPlone.PloneTool\') \\\n-        .declarePublic(\'AllowSendto\')\n+    ModuleSecurityInfo("Products.CMFPlone.PloneTool").declarePublic("AllowSendto")\n \n     # Make ZCatalog\'s mergeResults importable TTW\n-    ModuleSecurityInfo(\'Products.ZCatalog.Catalog\') \\\n-        .declarePublic(\'mergeResults\')\n+    ModuleSecurityInfo("Products.ZCatalog.Catalog").declarePublic("mergeResults")\n \n     # Make the navtree constructs available TTW\n-    allow_module(\'Products.CMFPlone.browser.navtree\')\n+    allow_module("Products.CMFPlone.browser.navtree")\n \n     # Allow access to the exception in the folder_delete script\n     from OFS.ObjectManager import BeforeDeleteException\n-    allow_module(\'OFS.ObjectManager\')\n+\n+    allow_module("OFS.ObjectManager")\n     allow_class(BeforeDeleteException)\n \n     # Make cgi.escape available TTW\n-    ModuleSecurityInfo(\'cgi\').declarePublic(\'escape\')\n+    ModuleSecurityInfo("cgi").declarePublic("escape")\n \n     # Make warnings available TTW\n-    ModuleSecurityInfo(\'warnings\').declarePublic(\'warn\')\n+    ModuleSecurityInfo("warnings").declarePublic("warn")\n \n     # Apply monkey patches\n-    from Products.CMFPlone import patches  # noqa\n-\n-    # Register unicode splitter w/ ZCTextIndex\n-    # pipeline registry\n-    from Products.CMFPlone import UnicodeSplitter  # noqa\n-\n     # CMFCore tools\n     from Products.CMFCore import CachingPolicyManager\n \n     # Plone tools\n-    from Products.CMFPlone import PloneTool\n+    # Register unicode splitter w/ ZCTextIndex\n+    # pipeline registry\n+    from Products.CMFPlone import ActionsTool\n+    from Products.CMFPlone import CatalogTool\n     from Products.CMFPlone import MigrationTool\n+    from Products.CMFPlone import patches  # noqa\n     from Products.CMFPlone import PloneControlPanel\n-    from Products.CMFPlone import WorkflowTool\n-    from Products.CMFPlone import URLTool\n-    from Products.CMFPlone import RegistrationTool\n+    from Products.CMFPlone import PloneTool\n     from Products.CMFPlone import PropertiesTool\n-    from Products.CMFPlone import ActionsTool\n-    from Products.CMFPlone import TypesTool\n-    from Products.CMFPlone import CatalogTool\n+    from Products.CMFPlone import RegistrationTool\n     from Products.CMFPlone import SkinsTool\n     from Products.CMFPlone import TranslationServiceTool\n+    from Products.CMFPlone import TypesTool\n+    from Products.CMFPlone import UnicodeSplitter  # noqa\n+    from Products.CMFPlone import URLTool\n+    from Products.CMFPlone import WorkflowTool\n \n     tools = (\n         PloneTool.PloneTool,\n@@ -171,32 +174,32 @@ def initialize(context):\n \n     # Register tools and content\n     ToolInit(\n-        \'Plone Tool\',\n+        "Plone Tool",\n         tools=tools,\n-        icon=\'tool.gif\',\n+        icon="tool.gif",\n     ).initialize(context)\n \n-\n     from AccessControl.Permissions import view_management_screens\n-    from Products.CMFPlone.Portal import PloneSite\n     from Products.CMFPlone.factory import zmi_constructor\n+    from Products.CMFPlone.Portal import PloneSite\n+\n     context.registerClass(\n         instance_class=PloneSite,\n         permission=view_management_screens,\n-        constructors=(zmi_constructor, ),\n+        constructors=(zmi_constructor,),\n     )\n \n     from plone.folder import nogopip\n+\n     context.registerClass(\n         nogopip.GopipIndex,\n-        permission=\'Add Pluggable Index\',\n-        constructors=(nogopip.manage_addGopipForm,\n-                      nogopip.manage_addGopipIndex),\n-        icon=\'index.gif\',\n-        visibility=None\n+        permission="Add Pluggable Index",\n+        constructors=(nogopip.manage_addGopipForm, nogopip.manage_addGopipIndex),\n+        icon="index.gif",\n+        visibility=None,\n     )\n \n+\n # Apply early monkey patches.  For these patches, it is too late if we do this\n # in the initialize method.\n from Products.CMFPlone import earlypatches  # noqa\n-\ndiff --git a/news/3610.bugfix b/news/3610.bugfix\nnew file mode 100644\nindex 0000000000..009d99d62a\n--- /dev/null\n+++ b/news/3610.bugfix\n@@ -0,0 +1,2 @@\n+Supress warning of intentional deprecated import for BBB.\n+[jensens]\n'

