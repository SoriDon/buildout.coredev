Repository: plone.rfc822


Branch: refs/heads/master
Date: 2019-05-11T22:29:29+02:00
Author: Joni Orponen (Rotonen) <joni.orponen@gmail.com>
Commit: https://github.com/plone/plone.rfc822/commit/232910aaea8b6719f40e42924afa11515d8cd1fe

Use a better type check in the payload parser.

Files changed:
A news/7.bugfix
M plone/rfc822/_utils.py

b'diff --git a/news/7.bugfix b/news/7.bugfix\nnew file mode 100644\nindex 0000000..0479f09\n--- /dev/null\n+++ b/news/7.bugfix\n@@ -0,0 +1,2 @@\n+- Use a better type check in the payload parser.\n+  [Rotonen]\ndiff --git a/plone/rfc822/_utils.py b/plone/rfc822/_utils.py\nindex 403c8b4..8bcd098 100644\n--- a/plone/rfc822/_utils.py\n+++ b/plone/rfc822/_utils.py\n@@ -246,7 +246,7 @@ def initializeObject(context, fields, message, defaultCharset="utf-8"):\n         return\n \n     # A single payload is a string, multiparts are lists\n-    if isinstance(payloads, str):\n+    if isinstance(payloads, six.string_types):\n         if len(primary) != 1:\n             raise ValueError(\n                 "Got a single string payload for message, but no primary "\n'

Repository: plone.rfc822


Branch: refs/heads/master
Date: 2019-05-13T07:54:47+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.rfc822/commit/d91e29c725b945172751612cb4b03f0a95de1e83

Merge pull request #8 from plone/roto-fix-py3-payload-parsing

Improved payload parsing for Py2 / Py3

Files changed:
A news/7.bugfix
M plone/rfc822/_utils.py

b'diff --git a/news/7.bugfix b/news/7.bugfix\nnew file mode 100644\nindex 0000000..0479f09\n--- /dev/null\n+++ b/news/7.bugfix\n@@ -0,0 +1,2 @@\n+- Use a better type check in the payload parser.\n+  [Rotonen]\ndiff --git a/plone/rfc822/_utils.py b/plone/rfc822/_utils.py\nindex 403c8b4..8bcd098 100644\n--- a/plone/rfc822/_utils.py\n+++ b/plone/rfc822/_utils.py\n@@ -246,7 +246,7 @@ def initializeObject(context, fields, message, defaultCharset="utf-8"):\n         return\n \n     # A single payload is a string, multiparts are lists\n-    if isinstance(payloads, str):\n+    if isinstance(payloads, six.string_types):\n         if len(primary) != 1:\n             raise ValueError(\n                 "Got a single string payload for message, but no primary "\n'

