Repository: plone.protect


Branch: refs/heads/master
Date: 2019-02-08T17:48:51+01:00
Author: Gil Forcada (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.protect/commit/795cf6d5590842a9e082ba9e54122715233a3466

Avoid deprecation warnings

Files changed:
M plone/protect/tests/testAuthenticator.py
M plone/protect/tests/testAuto.py
M plone/protect/tests/testPatches.py
M plone/protect/tests/testUtils.py

b'diff --git a/plone/protect/tests/testAuthenticator.py b/plone/protect/tests/testAuthenticator.py\nindex c41a0a7..d59e9f1 100644\n--- a/plone/protect/tests/testAuthenticator.py\n+++ b/plone/protect/tests/testAuthenticator.py\n@@ -38,8 +38,8 @@ def setSecret(self, secret):\n \n     def testIsHtmlInput(self):\n         auth = self.view.authenticator()\n-        self.failUnless(auth.startswith("<input"))\n-        self.failUnless(auth.endswith("/>"))\n+        self.assertTrue(auth.startswith("<input"))\n+        self.assertTrue(auth.endswith("/>"))\n \n     def testDiffersPerUser(self):\n         one = self.view.authenticator()\ndiff --git a/plone/protect/tests/testAuto.py b/plone/protect/tests/testAuto.py\nindex 8b31504..59640dc 100644\n--- a/plone/protect/tests/testAuto.py\n+++ b/plone/protect/tests/testAuto.py\n@@ -11,7 +11,7 @@\n from plone.protect.auto import ProtectTransform\n from plone.protect.auto import safeWrite\n from plone.protect.testing import PROTECT_FUNCTIONAL_TESTING\n-from plone.testing.z2 import Browser\n+from plone.testing.zope import Browser\n from zExceptions import Forbidden\n from zope.component import getUtility\n \n@@ -209,4 +209,4 @@ def test_html(self):\n             \'<html>\\n<body>\'\n             \'<form action="http://nohost/myaction" method="POST">\'\n             \'</form></body>\\n</html>\')], \'utf-8\')\n-        self.failUnless(b\'_authenticator\' in result.serialize())\n+        self.assertTrue(b\'_authenticator\' in result.serialize())\ndiff --git a/plone/protect/tests/testPatches.py b/plone/protect/tests/testPatches.py\nindex 410d31e..a71bcf6 100644\n--- a/plone/protect/tests/testPatches.py\n+++ b/plone/protect/tests/testPatches.py\n@@ -2,7 +2,7 @@\n from plone.app.testing import SITE_OWNER_NAME\n from plone.app.testing import SITE_OWNER_PASSWORD\n from plone.protect.testing import PROTECT_FUNCTIONAL_TESTING\n-from plone.testing.z2 import Browser\n+from plone.testing.zope import Browser\n \n import unittest\n \ndiff --git a/plone/protect/tests/testUtils.py b/plone/protect/tests/testUtils.py\nindex 92bd1b6..95f6b4b 100644\n--- a/plone/protect/tests/testUtils.py\n+++ b/plone/protect/tests/testUtils.py\n@@ -46,7 +46,7 @@ def testRequestPassedToChecker(self):\n         wrapped = protect(checker)(funcWithRequest)\n         request = []\n         wrapped("one", "two", request)\n-        self.failUnless(checker.request is request)\n+        self.assertTrue(checker.request is request)\n \n \n class UrlTests(unittest.TestCase):\n@@ -55,24 +55,24 @@ class UrlTests(unittest.TestCase):\n \n     def testWithUrlFromSameDomain(self):\n         url = addTokenToUrl(\'http://nohost/foobar\', self.layer[\'request\'])\n-        self.failUnless(\'_authenticator=\' in url)\n+        self.assertTrue(\'_authenticator=\' in url)\n \n     def testWithUrlFromOtherDomain(self):\n         url = addTokenToUrl(\'http://other/foobar\', self.layer[\'request\'])\n-        self.failUnless(\'_authenticator=\' not in url)\n+        self.assertTrue(\'_authenticator=\' not in url)\n \n     def testAddingWithQueryParams(self):\n         url = addTokenToUrl(\'http://nohost/foobar?foo=bar\',\n                             self.layer[\'request\'])\n-        self.failUnless(\'_authenticator=\' in url)\n+        self.assertTrue(\'_authenticator=\' in url)\n \n     def testWithoutRequest(self):\n         url = addTokenToUrl(\'http://nohost/foobar\')\n-        self.failUnless(\'_authenticator=\' in url)\n+        self.assertTrue(\'_authenticator=\' in url)\n \n     def testWithNone(self):\n         url = addTokenToUrl(None, self.layer[\'request\'])\n-        self.failUnless(not url)\n+        self.assertTrue(not url)\n \n \n def test_suite():\n'

Repository: plone.protect


Branch: refs/heads/master
Date: 2019-02-08T17:49:43+01:00
Author: Gil Forcada (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.protect/commit/77588e4cb4994cce21712f8664dabb091849361e

Add news entry

Files changed:
A news/87.bugfix

b'diff --git a/news/87.bugfix b/news/87.bugfix\nnew file mode 100644\nindex 0000000..5008c8d\n--- /dev/null\n+++ b/news/87.bugfix\n@@ -0,0 +1,2 @@\n+Avoid deprecation warnings.\n+[gforcada]\n'

Repository: plone.protect


Branch: refs/heads/master
Date: 2019-02-10T20:31:21+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.protect/commit/d4efc6367ce44425561d2a9d6dcaf16429bf6990

Merge pull request #87 from plone/deprecation-warnings

Avoid deprecation warnings

Files changed:
A news/87.bugfix
M plone/protect/tests/testAuthenticator.py
M plone/protect/tests/testAuto.py
M plone/protect/tests/testPatches.py
M plone/protect/tests/testUtils.py

b'diff --git a/news/87.bugfix b/news/87.bugfix\nnew file mode 100644\nindex 0000000..5008c8d\n--- /dev/null\n+++ b/news/87.bugfix\n@@ -0,0 +1,2 @@\n+Avoid deprecation warnings.\n+[gforcada]\ndiff --git a/plone/protect/tests/testAuthenticator.py b/plone/protect/tests/testAuthenticator.py\nindex c41a0a7..d59e9f1 100644\n--- a/plone/protect/tests/testAuthenticator.py\n+++ b/plone/protect/tests/testAuthenticator.py\n@@ -38,8 +38,8 @@ def setSecret(self, secret):\n \n     def testIsHtmlInput(self):\n         auth = self.view.authenticator()\n-        self.failUnless(auth.startswith("<input"))\n-        self.failUnless(auth.endswith("/>"))\n+        self.assertTrue(auth.startswith("<input"))\n+        self.assertTrue(auth.endswith("/>"))\n \n     def testDiffersPerUser(self):\n         one = self.view.authenticator()\ndiff --git a/plone/protect/tests/testAuto.py b/plone/protect/tests/testAuto.py\nindex 8b31504..59640dc 100644\n--- a/plone/protect/tests/testAuto.py\n+++ b/plone/protect/tests/testAuto.py\n@@ -11,7 +11,7 @@\n from plone.protect.auto import ProtectTransform\n from plone.protect.auto import safeWrite\n from plone.protect.testing import PROTECT_FUNCTIONAL_TESTING\n-from plone.testing.z2 import Browser\n+from plone.testing.zope import Browser\n from zExceptions import Forbidden\n from zope.component import getUtility\n \n@@ -209,4 +209,4 @@ def test_html(self):\n             \'<html>\\n<body>\'\n             \'<form action="http://nohost/myaction" method="POST">\'\n             \'</form></body>\\n</html>\')], \'utf-8\')\n-        self.failUnless(b\'_authenticator\' in result.serialize())\n+        self.assertTrue(b\'_authenticator\' in result.serialize())\ndiff --git a/plone/protect/tests/testPatches.py b/plone/protect/tests/testPatches.py\nindex 410d31e..a71bcf6 100644\n--- a/plone/protect/tests/testPatches.py\n+++ b/plone/protect/tests/testPatches.py\n@@ -2,7 +2,7 @@\n from plone.app.testing import SITE_OWNER_NAME\n from plone.app.testing import SITE_OWNER_PASSWORD\n from plone.protect.testing import PROTECT_FUNCTIONAL_TESTING\n-from plone.testing.z2 import Browser\n+from plone.testing.zope import Browser\n \n import unittest\n \ndiff --git a/plone/protect/tests/testUtils.py b/plone/protect/tests/testUtils.py\nindex 92bd1b6..95f6b4b 100644\n--- a/plone/protect/tests/testUtils.py\n+++ b/plone/protect/tests/testUtils.py\n@@ -46,7 +46,7 @@ def testRequestPassedToChecker(self):\n         wrapped = protect(checker)(funcWithRequest)\n         request = []\n         wrapped("one", "two", request)\n-        self.failUnless(checker.request is request)\n+        self.assertTrue(checker.request is request)\n \n \n class UrlTests(unittest.TestCase):\n@@ -55,24 +55,24 @@ class UrlTests(unittest.TestCase):\n \n     def testWithUrlFromSameDomain(self):\n         url = addTokenToUrl(\'http://nohost/foobar\', self.layer[\'request\'])\n-        self.failUnless(\'_authenticator=\' in url)\n+        self.assertTrue(\'_authenticator=\' in url)\n \n     def testWithUrlFromOtherDomain(self):\n         url = addTokenToUrl(\'http://other/foobar\', self.layer[\'request\'])\n-        self.failUnless(\'_authenticator=\' not in url)\n+        self.assertTrue(\'_authenticator=\' not in url)\n \n     def testAddingWithQueryParams(self):\n         url = addTokenToUrl(\'http://nohost/foobar?foo=bar\',\n                             self.layer[\'request\'])\n-        self.failUnless(\'_authenticator=\' in url)\n+        self.assertTrue(\'_authenticator=\' in url)\n \n     def testWithoutRequest(self):\n         url = addTokenToUrl(\'http://nohost/foobar\')\n-        self.failUnless(\'_authenticator=\' in url)\n+        self.assertTrue(\'_authenticator=\' in url)\n \n     def testWithNone(self):\n         url = addTokenToUrl(None, self.layer[\'request\'])\n-        self.failUnless(not url)\n+        self.assertTrue(not url)\n \n \n def test_suite():\n'

