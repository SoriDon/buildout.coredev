Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-02-07T17:27:35+01:00
Author: Michael Howitz (icemac) <mh@gocept.com>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/1c326945ac97d8549e0950605e6d506d03a32283

Activate Flake8 checks in TravisCI + check doctests.

Files changed:
M .travis.yml
M setup.cfg

b'diff --git a/.travis.yml b/.travis.yml\nindex 6e68b0b..6b5615a 100644\n--- a/.travis.yml\n+++ b/.travis.yml\n@@ -4,6 +4,12 @@ python:\n   - 2.7\n   - 3.6\n   - 3.7\n+matrix:\n+     include:\n+         - python: 3.7\n+           name: "Flake8"\n+           install:  pip install -U flake8\n+           script: flake8 --doctests src setup.py\n install:\n   - pip install tox-travis\n script:\ndiff --git a/setup.cfg b/setup.cfg\nindex 5f5b7ea..8e62def 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -7,3 +7,6 @@ ignore =\n \n [bdist_wheel]\n universal = 1\n+\n+[flake8]\n+doctests = yes\n'

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-02-07T17:43:32+01:00
Author: Michael Howitz (icemac) <mh@gocept.com>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/dea6d2a6cf5ca7296051c147759740bba8aff954

Fix Flake8 issues.

Files changed:
M src/plone/recipe/zope2instance/recipe.py

b'diff --git a/src/plone/recipe/zope2instance/recipe.py b/src/plone/recipe/zope2instance/recipe.py\nindex 720f28f..13fdbf1 100644\n--- a/src/plone/recipe/zope2instance/recipe.py\n+++ b/src/plone/recipe/zope2instance/recipe.py\n@@ -81,7 +81,7 @@ def __init__(self, buildout, name, options):\n         options[\'location\'] = os.path.join(\n             buildout[\'buildout\'][\'parts-directory\'],\n             self.name,\n-            )\n+        )\n         options[\'bin-directory\'] = buildout[\'buildout\'][\'bin-directory\']\n \n         if \'initialization\' not in options:\n@@ -89,14 +89,14 @@ def __init__(self, buildout, name, options):\n \n         if \'scripts\' in options:\n             if options[\'scripts\'] == \'\':\n-                options[\'scripts\'] = \'\' # suppress script generation.\n+                options[\'scripts\'] = \'\'  # suppress script generation.\n                 self.scripts = False\n \n         # Relative path support for the generated scripts\n         relative_paths = options.get(\n             \'relative-paths\',\n             buildout[\'buildout\'].get(\'relative-paths\', \'false\')\n-            )\n+        )\n         if relative_paths == \'true\':\n             options[\'buildout-directory\'] = buildout[\'buildout\'][\'directory\']\n             self._relative_paths = options[\'buildout-directory\']\n@@ -106,7 +106,7 @@ def __init__(self, buildout, name, options):\n         self._include_site_packages = options.get(\n             \'include-site-packages\',\n             buildout[\'buildout\'].get(\'include-site-packages\', \'false\')\n-            ) not in (\'off\', \'disable\', \'false\')\n+        ) not in (\'off\', \'disable\', \'false\')\n \n         self.wsgi = options.get(\'wsgi\') in (\'on\', \'waitress\')\n         # Get Scripts\' attributes\n@@ -138,7 +138,7 @@ def install(self, update=False):\n \n             # Add zcml files to package-includes\n             self.build_package_includes()\n-        except:\n+        except Exception:\n             # clean up\n             if os.path.exists(location):\n                 shutil.rmtree(location)\n@@ -155,9 +155,7 @@ def update(self):\n         return self.install(update=True)\n \n     def build_zope_conf(self):\n-        """Create a zope.conf file\n-        """\n-\n+        """Create a zope.conf file."""\n         options = self.options\n         location = options[\'location\']\n         # Don\'t do this if we have a manual zope.conf\n@@ -191,8 +189,8 @@ def build_zope_conf(self):\n         if not os.path.exists(client_home):\n             os.makedirs(client_home)\n \n-        client_import = options.get(\'import-directory\', os.path.join(\n-                                                    client_home, \'import\'))\n+        client_import = options.get(\'import-directory\',\n+                                    os.path.join(client_home, \'import\'))\n         if not os.path.exists(client_import):\n             os.makedirs(client_import)\n \n@@ -213,11 +211,14 @@ def build_zope_conf(self):\n         port_base = options.get(\'port-base\', \'\')\n         if port_base:\n             port_base = \'port-base %s\' % port_base\n-        http_force_connection_close = options.get(\'http-force-connection-close\', None)\n+        http_force_connection_close = options.get(\n+            \'http-force-connection-close\', None)\n         if http_force_connection_close is None:\n             http_force_connection_close = \'\'\n         else:\n-            http_force_connection_close = http_force_connection_close_template % http_force_connection_close\n+            http_force_connection_close = (\n+                http_force_connection_close_template\n+                % http_force_connection_close)\n         http_fast_listen = options.get(\'http-fast-listen\', None)\n         if http_fast_listen is None:\n             http_fast_listen = \'\'\n@@ -235,8 +236,7 @@ def build_zope_conf(self):\n         webdav_address = options.get(\'webdav-address\', \'\')\n         if webdav_address:\n             webdav_conn_close = options.get(\n-                                    \'webdav-force-connection-close\',\n-                                    \'off\')\n+                \'webdav-force-connection-close\', \'off\')\n             webdav_address = webdav_server_template % (webdav_address,\n                                                        webdav_conn_close)\n         icp_address = options.get(\'icp-address\', \'\')\n@@ -244,7 +244,8 @@ def build_zope_conf(self):\n             icp_address = icp_server_template % icp_address\n         http_header_max_length = options.get(\'http-header-max-length\', \'8192\')\n         if http_header_max_length:\n-            http_header_max_length = \'http-header-max-length %s\' % http_header_max_length\n+            http_header_max_length = (\n+                \'http-header-max-length %s\' % http_header_max_length)\n         effective_user = options.get(\'effective-user\', \'\')\n         if effective_user:\n             effective_user = \'effective-user %s\' % effective_user\n@@ -254,7 +255,7 @@ def build_zope_conf(self):\n         environment_vars = options.get(\'environment-vars\', \'\')\n         if environment_vars:\n             # if the vars are all given on one line we need to do some work\n-            if not \'\\n\' in environment_vars:\n+            if \'\\n\' not in environment_vars:\n                 keys = []\n                 values = []\n                 env_vars = environment_vars.split()\n@@ -265,8 +266,9 @@ def build_zope_conf(self):\n                     else:\n                         values.append(var)\n                 env_vars = zip(keys, values)\n-                environment_vars = \'\\n\'.join(["%s %s" % (env_var[0], env_var[1])\n-                                             for env_var in env_vars])\n+                environment_vars = \'\\n\'.join([\n+                    "%s %s" % (env_var[0], env_var[1])\n+                    for env_var in env_vars])\n             environment_vars = environment_template % environment_vars\n \n         deprecation_warnings = options.get(\'deprecation-warnings\', \'\')\n@@ -312,9 +314,10 @@ def build_zope_conf(self):\n                     event_log_rotate = \'\\n\'.join((\n                         "max-size %s" % event_log_max_size,\n                         "    old-files %s" % event_log_old_files))\n-                event_log = event_logfile % {\'event_logfile\': event_file,\n-                                             \'event_log_level\': event_log_level,\n-                                             \'event_log_rotate\': event_log_rotate}\n+                event_log = event_logfile % {\n+                    \'event_logfile\': event_file,\n+                    \'event_log_level\': event_log_level,\n+                    \'event_log_rotate\': event_log_rotate}\n             # custom log\n             else:\n                 event_log = custom_event_log\n@@ -344,12 +347,14 @@ def build_zope_conf(self):\n                 access_log_rotate = \'\'\n                 access_log_max_size = options.get(\'access-log-max-size\', None)\n                 if access_log_max_size:\n-                    access_log_old_files = options.get(\'access-log-old-files\', 1)\n+                    access_log_old_files = options.get(\n+                        \'access-log-old-files\', 1)\n                     access_log_rotate = \'\\n\'.join((\n                         "max-size %s" % access_log_max_size,\n                         "    old-files %s" % access_log_old_files))\n-                access_event_log = access_event_logfile % {\'z_log\': z_log,\n-                                             \'access_log_rotate\': access_log_rotate}\n+                access_event_log = access_event_logfile % {\n+                    \'z_log\': z_log,\n+                    \'access_log_rotate\': access_log_rotate}\n             # custom directive\n             else:\n                 access_event_log = custom_access_event_log\n@@ -359,8 +364,8 @@ def build_zope_conf(self):\n                 \'access_event_log\': access_event_log,\n             }\n \n-        default_zpublisher_encoding = options.get(\'default-zpublisher-encoding\',\n-                                                  \'utf-8\')\n+        default_zpublisher_encoding = options.get(\n+            \'default-zpublisher-encoding\', \'utf-8\')\n         if default_zpublisher_encoding:\n             default_zpublisher_encoding = \'default-zpublisher-encoding %s\' %\\\n                                           default_zpublisher_encoding\n@@ -370,8 +375,8 @@ def build_zope_conf(self):\n         shared_blob_dir = options.get(\'shared-blob\', \'no\')\n \n         before_storage = options.get(\'before-storage\')\n-        demo_storage = options.get(\'demo-storage\', \'off\') \\\n-                       not in (\'off\', \'disable\', \'false\')\n+        demo_storage = options.get(\n+            \'demo-storage\', \'off\') not in (\'off\', \'disable\', \'false\')\n \n         zlib = options.get(\'zlib-storage\')\n \n@@ -402,7 +407,7 @@ def _split(el):\n                 if _split(el) is not None])\n             type_ = rel_storage.pop(\'type\', \'postgresql\')\n \n-            if type_ == \'postgresql\' and not \'dsn\' in rel_storage:\n+            if type_ == \'postgresql\' and \'dsn\' not in rel_storage:\n                 # Support zope2instance 1.4 style interpolation for\n                 # postgresql\n                 template = ("dbname=\'%(dbname)s\' user=\'%(user)s\' "\n@@ -428,7 +433,7 @@ def is_rs_option(name):\n                 rs_opts=\'\\n\'.join(\' \' * 8 + \' \'.join((k, v))\n                                   for k, v in rel_storage.items()\n                                   if is_rs_option(k)),\n-                )\n+            )\n             file_storage_snippet = rel_storage_template % opts\n         else:\n             file_storage_snippet = self.render_file_storage(\n@@ -445,11 +450,13 @@ def is_rs_option(name):\n \n         python_check_interval = options.get(\'python-check-interval\', \'1000\')\n         if python_check_interval:\n-            python_check_interval = "python-check-interval %s" % python_check_interval\n+            python_check_interval = (\n+                "python-check-interval %s" % python_check_interval)\n \n         enable_products = options.get(\'enable-product-installation\', \'off\')\n         if enable_products:\n-            enable_products = "enable-product-installation %s" % enable_products\n+            enable_products = (\n+                "enable-product-installation %s" % enable_products)\n \n         zeo_address = options.get(\'zeo-address\', \'8100\')\n         zeo_addresses = zeo_address.split(\' \')\n@@ -458,7 +465,7 @@ def is_rs_option(name):\n             if not address:\n                 continue\n             zeo_address_list += zeo_address_list_template % dict(\n-                                zeo_address = address)\n+                zeo_address=address)\n \n         zodb_cache_size = options.get(\'zodb-cache-size\', \'30000\')\n         if zodb_cache_size:\n@@ -467,7 +474,8 @@ def is_rs_option(name):\n             zodb_cache_size = ""\n         zodb_cache_size_bytes = options.get(\'zodb-cache-size-bytes\', None)\n         if zodb_cache_size_bytes:\n-            zodb_cache_size_bytes = "cache-size-bytes %s" % zodb_cache_size_bytes\n+            zodb_cache_size_bytes = (\n+                "cache-size-bytes %s" % zodb_cache_size_bytes)\n         else:\n             zodb_cache_size_bytes = ""\n         zeo_client_cache_size = options.get(\'zeo-client-cache-size\', \'128MB\')\n@@ -475,46 +483,54 @@ def is_rs_option(name):\n \n         if zeo_client:\n             if relstorage:\n-                raise ValueError(\'You cannot use both ZEO and RelStorage \'\n-                    \'at the same time.\')\n+                raise ValueError(\n+                    \'You cannot use both ZEO and RelStorage at the same time.\')\n \n-            zeo_client_drop_cache_rather_verify = options.get(\'zeo-client-drop-cache-rather-verify\', \'\')\n+            zeo_client_drop_cache_rather_verify = options.get(\n+                \'zeo-client-drop-cache-rather-verify\', \'\')\n             if zeo_client_drop_cache_rather_verify:\n-                zeo_client_drop_cache_rather_verify = \'drop-cache-rather-verify %s\' % \\\n-                        zeo_client_drop_cache_rather_verify\n+                zeo_client_drop_cache_rather_verify = (\n+                    \'drop-cache-rather-verify %s\'\n+                    % zeo_client_drop_cache_rather_verify)\n             zeo_var_dir = options.get(\'zeo-var\',\n                                       os.path.join(instance_home, \'var\'))\n             zeo_client_client = options.get(\'zeo-client-client\', \'\')\n-            zeo_client_blob_cache_size = \\\n-                    options.get(\'zeo-client-blob-cache-size\', \'\')\n-            zeo_client_blob_cache_size_check = \\\n-                    options.get(\'zeo-client-blob-cache-size-check\', \'\')\n-            zeo_client_min_disconnect_poll = options.get(\'min-disconnect-poll\', "")\n-            zeo_client_max_disconnect_poll = options.get(\'max-disconnect-poll\', "")\n-            zeo_client_read_only_fallback = options.get(\'zeo-client-read-only-fallback\', \'false\')\n+            zeo_client_blob_cache_size = options.get(\n+                \'zeo-client-blob-cache-size\', \'\')\n+            zeo_client_blob_cache_size_check = options.get(\n+                \'zeo-client-blob-cache-size-check\', \'\')\n+            zeo_client_min_disconnect_poll = options.get(\n+                \'min-disconnect-poll\', "")\n+            zeo_client_max_disconnect_poll = options.get(\n+                \'max-disconnect-poll\', "")\n+            zeo_client_read_only_fallback = options.get(\n+                \'zeo-client-read-only-fallback\', \'false\')\n             if zeo_client_client:\n                 zeo_client_client = \'client %s\' % zeo_client_client\n             if zeo_client_blob_cache_size:\n-                zeo_client_blob_cache_size = \\\n-                      \'blob-cache-size %s\' % zeo_client_blob_cache_size\n+                zeo_client_blob_cache_size = (\n+                    \'blob-cache-size %s\' % zeo_client_blob_cache_size)\n             if zeo_client_blob_cache_size_check:\n-                zeo_client_blob_cache_size_check = \\\n-                        \'blob-cache-size-check %s\' % \\\n-                        zeo_client_blob_cache_size_check\n+                zeo_client_blob_cache_size_check = (\n+                    \'blob-cache-size-check %s\'\n+                    % zeo_client_blob_cache_size_check)\n             if zeo_client_min_disconnect_poll:\n-                zeo_client_min_disconnect_poll = "min-disconnect-poll %s" % zeo_client_min_disconnect_poll\n+                zeo_client_min_disconnect_poll = (\n+                    "min-disconnect-poll %s" % zeo_client_min_disconnect_poll)\n             if zeo_client_max_disconnect_poll:\n-                zeo_client_max_disconnect_poll = "max-disconnect-poll %s" % zeo_client_max_disconnect_poll\n+                zeo_client_max_disconnect_poll = (\n+                    "max-disconnect-poll %s" % zeo_client_max_disconnect_poll)\n             if zeo_client_read_only_fallback:\n-                zeo_client_read_only_fallback = "read-only-fallback %s" % zeo_client_read_only_fallback\n+                zeo_client_read_only_fallback = (\n+                    "read-only-fallback %s" % zeo_client_read_only_fallback)\n             if options.get(\'zeo-username\', \'\'):\n                 if not options.get(\'zeo-password\', \'\'):\n                     raise zc.buildout.UserError(\'No ZEO password specified\')\n \n                 zeo_authentication = zeo_authentication_template % dict(\n-                        realm = options.get(\'zeo-realm\', \'ZEO\'),\n-                        username = options.get(\'zeo-username\'),\n-                        password = options.get(\'zeo-password\'))\n+                    realm=options.get(\'zeo-realm\', \'ZEO\'),\n+                    username=options.get(\'zeo-username\'),\n+                    password=options.get(\'zeo-password\'))\n             else:\n                 zeo_authentication = \'\'\n \n@@ -524,18 +540,17 @@ def is_rs_option(name):\n                 storage_snippet_template = zeo_storage_template\n \n             storage_snippet = storage_snippet_template % dict(\n-                blob_storage = blob_storage,\n-                shared_blob_dir = shared_blob_dir,\n-                zeo_address_list = zeo_address_list,\n-                zeo_client_cache_size = zeo_client_cache_size,\n+                blob_storage=blob_storage,\n+                shared_blob_dir=shared_blob_dir,\n+                zeo_address_list=zeo_address_list,\n+                zeo_client_cache_size=zeo_client_cache_size,\n                 zeo_client_blob_cache_size=zeo_client_blob_cache_size,\n-                zeo_client_blob_cache_size_check=\\\n-                    zeo_client_blob_cache_size_check,\n-                zeo_authentication = zeo_authentication,\n-                zeo_client_client = zeo_client_client,\n-                zeo_storage = zeo_storage,\n+                zeo_client_blob_cache_size_check=zeo_client_blob_cache_size_check,  # noqa: E501\n+                zeo_authentication=zeo_authentication,\n+                zeo_client_client=zeo_client_client,\n+                zeo_storage=zeo_storage,\n                 zeo_var_dir=zeo_var_dir,\n-                zeo_client_drop_cache_rather_verify = zeo_client_drop_cache_rather_verify,\n+                zeo_client_drop_cache_rather_verify=zeo_client_drop_cache_rather_verify,  # noqa: E501\n                 zeo_client_min_disconnect_poll=zeo_client_min_disconnect_poll,\n                 zeo_client_max_disconnect_poll=zeo_client_max_disconnect_poll,\n                 read_only=options.get(\'read-only\', \'false\'),\n@@ -547,8 +562,9 @@ def is_rs_option(name):\n             storage_snippet = file_storage_snippet\n \n         if before_storage:\n-            storage_snippet = (before_storage_template % before_storage) % \\\n-                              indent(storage_snippet, 2)\n+            storage_snippet = (\n+                before_storage_template % before_storage) % indent(\n+                    storage_snippet, 2)\n \n         if demo_storage:\n             demo_file_storage = options.get(\'demo-file-storage\')\n@@ -557,8 +573,8 @@ def is_rs_option(name):\n             if demo_file_storage or demo_blob_storage:\n                 base = storage_snippet.replace(\'>\', \' base>\', 1)\n                 changes = self.render_file_storage(\n-                    demo_file_storage, demo_blob_storage, base_dir, var_dir, zlib).\\\n-                    replace(\'>\', \' changes>\', 1)\n+                    demo_file_storage, demo_blob_storage, base_dir, var_dir,\n+                    zlib).replace(\'>\', \' changes>\', 1)\n \n                 storage_snippet = demo_storage2_template % (base, changes)\n \n@@ -566,12 +582,13 @@ def is_rs_option(name):\n                 raise ValueError(\n                     "Both blob and demo storage cannot be used"\n                     " at the same time (use a before storage instead)."\n-                    )\n+                )\n             else:\n                 storage_snippet = demo_storage_template % storage_snippet\n \n         if options.get(\'storage-wrapper\'):\n-            storage_snippet = indent(options[\'storage-wrapper\'] % storage_snippet, 4)\n+            storage_snippet = indent(\n+                options[\'storage-wrapper\'] % storage_snippet, 4)\n \n         zodb_tmp_storage = options.get(\'zodb-temporary-storage\',\n                                        zodb_temporary_storage_template)\n@@ -591,42 +608,45 @@ def is_rs_option(name):\n         if not os.path.exists(lock_file_dir):\n             os.makedirs(lock_file_dir)\n \n-        zope_conf = template % dict(instance_home = instance_home,\n-                                    client_home = client_home,\n-                                    imports_lines = imports_lines,\n-                                    paths_lines = paths_lines,\n-                                    products_lines = products_lines,\n-                                    debug_mode = debug_mode,\n-                                    security_implementation = security_implementation,\n-                                    verbose_security = verbose_security,\n-                                    effective_user = effective_user,\n-                                    http_header_max_length = http_header_max_length,\n-                                    ip_address = ip_address,\n-                                    mailinglogger_import = mailinglogger_import,\n-                                    event_log = event_log,\n-                                    access_event_log = access_event_log,\n-                                    default_zpublisher_encoding = default_zpublisher_encoding,\n-                                    storage_snippet = storage_snippet,\n-                                    port_base = port_base,\n-                                    http_address = http_address,\n-                                    http_force_connection_close = http_force_connection_close,\n-                                    http_fast_listen = http_fast_listen,\n-                                    ftp_address = ftp_address,\n-                                    webdav_address = webdav_address,\n-                                    icp_address = icp_address,\n-                                    zserver_threads = zserver_threads,\n-                                    zodb_cache_size = zodb_cache_size,\n-                                    zodb_cache_size_bytes = zodb_cache_size_bytes,\n-                                    zodb_tmp_storage = zodb_tmp_storage,\n-                                    pid_file = pid_file,\n-                                    lock_file = lock_file,\n-                                    environment_vars = environment_vars,\n-                                    deprecation_warnings = deprecation_warnings,\n-                                    python_check_interval = python_check_interval,\n-                                    enable_products = enable_products,\n-                                    zope_conf_additional = zope_conf_additional,)\n-\n-        zope_conf = \'\\n\'.join([l for l in zope_conf.splitlines() if l.rstrip()])\n+        zope_conf = template % dict(\n+            instance_home=instance_home,\n+            client_home=client_home,\n+            imports_lines=imports_lines,\n+            paths_lines=paths_lines,\n+            products_lines=products_lines,\n+            debug_mode=debug_mode,\n+            security_implementation=security_implementation,\n+            verbose_security=verbose_security,\n+            effective_user=effective_user,\n+            http_header_max_length=http_header_max_length,\n+            ip_address=ip_address,\n+            mailinglogger_import=mailinglogger_import,\n+            event_log=event_log,\n+            access_event_log=access_event_log,\n+            default_zpublisher_encoding=default_zpublisher_encoding,\n+            storage_snippet=storage_snippet,\n+            port_base=port_base,\n+            http_address=http_address,\n+            http_force_connection_close=http_force_connection_close,\n+            http_fast_listen=http_fast_listen,\n+            ftp_address=ftp_address,\n+            webdav_address=webdav_address,\n+            icp_address=icp_address,\n+            zserver_threads=zserver_threads,\n+            zodb_cache_size=zodb_cache_size,\n+            zodb_cache_size_bytes=zodb_cache_size_bytes,\n+            zodb_tmp_storage=zodb_tmp_storage,\n+            pid_file=pid_file,\n+            lock_file=lock_file,\n+            environment_vars=environment_vars,\n+            deprecation_warnings=deprecation_warnings,\n+            python_check_interval=python_check_interval,\n+            enable_products=enable_products,\n+            zope_conf_additional=zope_conf_additional,)\n+\n+        zope_conf = \'\\n\'.join([l\n+                               for l in zope_conf.splitlines()\n+                               if l.rstrip()])\n         zope_conf_path = os.path.join(location, \'etc\', \'zope.conf\')\n         with open(zope_conf_path, \'w\') as f:\n             f.write(zope_conf)\n@@ -674,15 +694,15 @@ def __repr__(self):\n                     zope_conf,\n                     options[\'buildout-directory\'] + os.sep,\n                     self._relative_paths\n-                    )\n                 )\n+            )\n             program_path = relative_path_str(\n                 zc.buildout.easy_install._relativitize(\n                     program_path,\n                     options[\'buildout-directory\'] + os.sep,\n                     self._relative_paths\n-                    )\n                 )\n+            )\n \n         options[\'zope-conf\'] = zope_conf_path\n         arguments = ["-C", zope_conf_path, \'-p\', program_path]\n@@ -719,7 +739,7 @@ def _install_scripts(self, dest, working_set, reqs=(), interpreter=None,\n                 exec_sitecustomize=False,\n                 relative_paths=self._relative_paths,\n                 script_arguments=script_arguments,\n-                )\n+            )\n         else:\n             initialization = options[\'initialization\'] % options\n             return zc.buildout.easy_install.scripts(\n@@ -734,8 +754,7 @@ def _install_scripts(self, dest, working_set, reqs=(), interpreter=None,\n                 relative_paths=self._relative_paths,)\n \n     def build_package_includes(self):\n-        """Create ZCML slugs in etc/package-includes\n-        """\n+        """Create ZCML slugs in etc/package-includes."""\n         location = self.options[\'location\']\n         sitezcml_path = os.path.join(location, \'etc\', \'site.zcml\')\n         zcml = self.options.get(\'zcml\')\n@@ -767,32 +786,32 @@ def build_package_includes(self):\n \n         if additional_zcml:\n             additional_zcml = additional_zcml_template % additional_zcml\n-            path=os.path.join(includes_path, "999-additional-overrides.zcml")\n+            path = os.path.join(includes_path, "999-additional-overrides.zcml")\n             open(path, "w").write(additional_zcml.strip())\n \n         if resources:\n             resources_path = resources.strip()\n-            path=os.path.join(includes_path, "998-resources-configure.zcml")\n+            path = os.path.join(includes_path, "998-resources-configure.zcml")\n             open(path, "w").write(\n                 resources_zcml % dict(directory=resources_path)\n-                )\n+            )\n \n             if not os.path.exists(resources_path):\n                 os.mkdir(resources_path)\n \n         if locales:\n             locales_path = locales.strip()\n-            path=os.path.join(includes_path, "001-locales-configure.zcml")\n+            path = os.path.join(includes_path, "001-locales-configure.zcml")\n             open(path, "w").write(\n                 locales_zcml % dict(directory=locales_path)\n-                )\n+            )\n \n             if not os.path.exists(locales_path):\n                 os.mkdir(locales_path)\n \n         if zcml:\n-            n = 1 # 001 is reserved for an optional locales-configure\n-            package_match = re.compile(\'\\w+([.]\\w+)*$\').match\n+            n = 1  # 001 is reserved for an optional locales-configure\n+            package_match = re.compile(r\'\\w+([.]\\w+)*$\').match\n             for package in zcml:\n                 n += 1\n                 orig = package\n@@ -818,11 +837,11 @@ def build_package_includes(self):\n                 path = os.path.join(\n                     includes_path,\n                     "%3.3d-%s-%s.zcml" % (n, package, file_suff),\n-                    )\n+                )\n                 open(path, \'w\').write(\n                     \'<include package="%s" file="%s" />\\n\'\n                     % (package, filename)\n-                    )\n+                )\n \n     def render_file_storage(self, file_storage, blob_storage,\n                             base_dir, var_dir, zlib):\n@@ -839,13 +858,12 @@ def render_file_storage(self, file_storage, blob_storage,\n                     compress = \'false\'\n                 else:\n                     raise ValueError(\n-                        "Valid options for ``zlib-storage`` are "\\\n-                        "(\'compress\', \'uncompress\'). Got: %s." % zlib\n-                        )\n+                        "Valid options for ``zlib-storage`` are "\n+                        "(\'compress\', \'uncompress\'). Got: %s." % zlib)\n \n                 storage = zlib_storage_template % (\n                     compress, indent(storage, 2)\n-                    )\n+                )\n         else:\n             storage = "    <demostorage />"\n \n@@ -864,14 +882,14 @@ def render_file_storage(self, file_storage, blob_storage,\n \n \n # Storage snippets for zope.conf template\n-file_storage_template="""\n+file_storage_template = """\n     # FileStorage database\n     <filestorage>\n       path %s\n     </filestorage>\n """\n \n-zlib_storage_template="""\n+zlib_storage_template = """\n     %%import zc.zlibstorage\n     # ZlibStorage wrapper\n     <zlibstorage>\n@@ -880,14 +898,14 @@ def render_file_storage(self, file_storage, blob_storage,\n     </zlibstorage>\n """\n \n-demo_storage_template="""\n+demo_storage_template = """\n     # DemoStorage\n     <demostorage>\n %s\n     </demostorage>\n """\n \n-before_storage_template="""\n+before_storage_template = """\n     %%%%import zc.beforestorage\n     # BeforeStorage\n     <before>\n@@ -896,7 +914,7 @@ def render_file_storage(self, file_storage, blob_storage,\n     </before>\n """\n \n-demo_storage2_template="""\n+demo_storage2_template = """\n     # DemoStorage\n     <demostorage>\n %s\n@@ -904,7 +922,7 @@ def render_file_storage(self, file_storage, blob_storage,\n     </demostorage>\n """\n \n-rel_storage_template="""\n+rel_storage_template = """\n     %%import relstorage\n     <relstorage>\n %(rs_opts)s\n@@ -914,7 +932,7 @@ def render_file_storage(self, file_storage, blob_storage,\n     </relstorage>\n """\n \n-blob_storage_template="""\n+blob_storage_template = """\n     # Blob-enabled FileStorage database\n     <blobstorage>\n       blob-dir %s\n@@ -922,17 +940,17 @@ def render_file_storage(self, file_storage, blob_storage,\n     </blobstorage>\n """\n \n-zeo_authentication_template="""\n+zeo_authentication_template = """\n     realm %(realm)s\n       username %(username)s\n       password %(password)s\n """.strip()\n \n-zeo_address_list_template="""\n+zeo_address_list_template = """\n       server %(zeo_address)s\n """\n \n-zeo_storage_template="""\n+zeo_storage_template = """\n     # ZEOStorage database\n     <zeoclient>\n       read-only %(read_only)s\n@@ -950,7 +968,7 @@ def render_file_storage(self, file_storage, blob_storage,\n     </zeoclient>\n """.strip()\n \n-zeo_blob_storage_template="""\n+zeo_blob_storage_template = """\n     # Blob-enabled ZEOStorage database\n     <zeoclient>\n       read-only %(read_only)s\n@@ -972,7 +990,7 @@ def render_file_storage(self, file_storage, blob_storage,\n     </zeoclient>\n """.strip()\n \n-zodb_temporary_storage_template="""\n+zodb_temporary_storage_template = """\n <zodb_db temporary>\n     # Temporary storage database (for sessions)\n     <temporarystorage>\n@@ -983,11 +1001,11 @@ def render_file_storage(self, file_storage, blob_storage,\n </zodb_db>\n """.strip()\n \n-http_force_connection_close_template="""\\\n+http_force_connection_close_template = """\\\n   force-connection-close %s\n """.rstrip()\n \n-http_fast_listen_template="""\\\n+http_fast_listen_template = """\\\n   # Set to off to defer opening of the HTTP socket until the end of the\n   # startup phase:\n   fast-listen %s\n@@ -1045,7 +1063,7 @@ def render_file_storage(self, file_storage, blob_storage,\n """\n \n # The template used to build zope.conf\n-zope_conf_template="""\\\n+zope_conf_template = """\\\n %(imports_lines)s\n %%define INSTANCEHOME %(instance_home)s\n instancehome $INSTANCEHOME\n@@ -1206,4 +1224,4 @@ class = StreamHandler\n \n [formatter_generic]\n format = %%(asctime)s %%(levelname)-5.5s [%%(name)s:%%(lineno)s][%%(threadName)s] %%(message)s\n-"""\n+"""  # noqa: E501\n'

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-02-07T17:47:15+01:00
Author: Michael Howitz (icemac) <mh@gocept.com>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/4c84a826a33c9918873686b3cca4b419bbb82278

Add a change log entry.

Files changed:
M CHANGES.rst

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex ce6b9bd..31da185 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -18,6 +18,9 @@ Changelog\n   verbose\n   [ajung]\n \n+- Fix Flake8 issues in the code.\n+  [icemac]\n+\n \n 6.1.0 (2018-12-28)\n ------------------\n'

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-02-07T19:13:13+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/76845282c4a93dc7827559f0380d07412e218ae9

Merge pull request #72 from plone/flake8

Fix Flake8 issues.

Files changed:
M .travis.yml
M CHANGES.rst
M setup.cfg
M src/plone/recipe/zope2instance/recipe.py

b'diff --git a/.travis.yml b/.travis.yml\nindex 6e68b0b..6b5615a 100644\n--- a/.travis.yml\n+++ b/.travis.yml\n@@ -4,6 +4,12 @@ python:\n   - 2.7\n   - 3.6\n   - 3.7\n+matrix:\n+     include:\n+         - python: 3.7\n+           name: "Flake8"\n+           install:  pip install -U flake8\n+           script: flake8 --doctests src setup.py\n install:\n   - pip install tox-travis\n script:\ndiff --git a/CHANGES.rst b/CHANGES.rst\nindex ce6b9bd..31da185 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -18,6 +18,9 @@ Changelog\n   verbose\n   [ajung]\n \n+- Fix Flake8 issues in the code.\n+  [icemac]\n+\n \n 6.1.0 (2018-12-28)\n ------------------\ndiff --git a/setup.cfg b/setup.cfg\nindex 5f5b7ea..8e62def 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -7,3 +7,6 @@ ignore =\n \n [bdist_wheel]\n universal = 1\n+\n+[flake8]\n+doctests = yes\ndiff --git a/src/plone/recipe/zope2instance/recipe.py b/src/plone/recipe/zope2instance/recipe.py\nindex 720f28f..13fdbf1 100644\n--- a/src/plone/recipe/zope2instance/recipe.py\n+++ b/src/plone/recipe/zope2instance/recipe.py\n@@ -81,7 +81,7 @@ def __init__(self, buildout, name, options):\n         options[\'location\'] = os.path.join(\n             buildout[\'buildout\'][\'parts-directory\'],\n             self.name,\n-            )\n+        )\n         options[\'bin-directory\'] = buildout[\'buildout\'][\'bin-directory\']\n \n         if \'initialization\' not in options:\n@@ -89,14 +89,14 @@ def __init__(self, buildout, name, options):\n \n         if \'scripts\' in options:\n             if options[\'scripts\'] == \'\':\n-                options[\'scripts\'] = \'\' # suppress script generation.\n+                options[\'scripts\'] = \'\'  # suppress script generation.\n                 self.scripts = False\n \n         # Relative path support for the generated scripts\n         relative_paths = options.get(\n             \'relative-paths\',\n             buildout[\'buildout\'].get(\'relative-paths\', \'false\')\n-            )\n+        )\n         if relative_paths == \'true\':\n             options[\'buildout-directory\'] = buildout[\'buildout\'][\'directory\']\n             self._relative_paths = options[\'buildout-directory\']\n@@ -106,7 +106,7 @@ def __init__(self, buildout, name, options):\n         self._include_site_packages = options.get(\n             \'include-site-packages\',\n             buildout[\'buildout\'].get(\'include-site-packages\', \'false\')\n-            ) not in (\'off\', \'disable\', \'false\')\n+        ) not in (\'off\', \'disable\', \'false\')\n \n         self.wsgi = options.get(\'wsgi\') in (\'on\', \'waitress\')\n         # Get Scripts\' attributes\n@@ -138,7 +138,7 @@ def install(self, update=False):\n \n             # Add zcml files to package-includes\n             self.build_package_includes()\n-        except:\n+        except Exception:\n             # clean up\n             if os.path.exists(location):\n                 shutil.rmtree(location)\n@@ -155,9 +155,7 @@ def update(self):\n         return self.install(update=True)\n \n     def build_zope_conf(self):\n-        """Create a zope.conf file\n-        """\n-\n+        """Create a zope.conf file."""\n         options = self.options\n         location = options[\'location\']\n         # Don\'t do this if we have a manual zope.conf\n@@ -191,8 +189,8 @@ def build_zope_conf(self):\n         if not os.path.exists(client_home):\n             os.makedirs(client_home)\n \n-        client_import = options.get(\'import-directory\', os.path.join(\n-                                                    client_home, \'import\'))\n+        client_import = options.get(\'import-directory\',\n+                                    os.path.join(client_home, \'import\'))\n         if not os.path.exists(client_import):\n             os.makedirs(client_import)\n \n@@ -213,11 +211,14 @@ def build_zope_conf(self):\n         port_base = options.get(\'port-base\', \'\')\n         if port_base:\n             port_base = \'port-base %s\' % port_base\n-        http_force_connection_close = options.get(\'http-force-connection-close\', None)\n+        http_force_connection_close = options.get(\n+            \'http-force-connection-close\', None)\n         if http_force_connection_close is None:\n             http_force_connection_close = \'\'\n         else:\n-            http_force_connection_close = http_force_connection_close_template % http_force_connection_close\n+            http_force_connection_close = (\n+                http_force_connection_close_template\n+                % http_force_connection_close)\n         http_fast_listen = options.get(\'http-fast-listen\', None)\n         if http_fast_listen is None:\n             http_fast_listen = \'\'\n@@ -235,8 +236,7 @@ def build_zope_conf(self):\n         webdav_address = options.get(\'webdav-address\', \'\')\n         if webdav_address:\n             webdav_conn_close = options.get(\n-                                    \'webdav-force-connection-close\',\n-                                    \'off\')\n+                \'webdav-force-connection-close\', \'off\')\n             webdav_address = webdav_server_template % (webdav_address,\n                                                        webdav_conn_close)\n         icp_address = options.get(\'icp-address\', \'\')\n@@ -244,7 +244,8 @@ def build_zope_conf(self):\n             icp_address = icp_server_template % icp_address\n         http_header_max_length = options.get(\'http-header-max-length\', \'8192\')\n         if http_header_max_length:\n-            http_header_max_length = \'http-header-max-length %s\' % http_header_max_length\n+            http_header_max_length = (\n+                \'http-header-max-length %s\' % http_header_max_length)\n         effective_user = options.get(\'effective-user\', \'\')\n         if effective_user:\n             effective_user = \'effective-user %s\' % effective_user\n@@ -254,7 +255,7 @@ def build_zope_conf(self):\n         environment_vars = options.get(\'environment-vars\', \'\')\n         if environment_vars:\n             # if the vars are all given on one line we need to do some work\n-            if not \'\\n\' in environment_vars:\n+            if \'\\n\' not in environment_vars:\n                 keys = []\n                 values = []\n                 env_vars = environment_vars.split()\n@@ -265,8 +266,9 @@ def build_zope_conf(self):\n                     else:\n                         values.append(var)\n                 env_vars = zip(keys, values)\n-                environment_vars = \'\\n\'.join(["%s %s" % (env_var[0], env_var[1])\n-                                             for env_var in env_vars])\n+                environment_vars = \'\\n\'.join([\n+                    "%s %s" % (env_var[0], env_var[1])\n+                    for env_var in env_vars])\n             environment_vars = environment_template % environment_vars\n \n         deprecation_warnings = options.get(\'deprecation-warnings\', \'\')\n@@ -312,9 +314,10 @@ def build_zope_conf(self):\n                     event_log_rotate = \'\\n\'.join((\n                         "max-size %s" % event_log_max_size,\n                         "    old-files %s" % event_log_old_files))\n-                event_log = event_logfile % {\'event_logfile\': event_file,\n-                                             \'event_log_level\': event_log_level,\n-                                             \'event_log_rotate\': event_log_rotate}\n+                event_log = event_logfile % {\n+                    \'event_logfile\': event_file,\n+                    \'event_log_level\': event_log_level,\n+                    \'event_log_rotate\': event_log_rotate}\n             # custom log\n             else:\n                 event_log = custom_event_log\n@@ -344,12 +347,14 @@ def build_zope_conf(self):\n                 access_log_rotate = \'\'\n                 access_log_max_size = options.get(\'access-log-max-size\', None)\n                 if access_log_max_size:\n-                    access_log_old_files = options.get(\'access-log-old-files\', 1)\n+                    access_log_old_files = options.get(\n+                        \'access-log-old-files\', 1)\n                     access_log_rotate = \'\\n\'.join((\n                         "max-size %s" % access_log_max_size,\n                         "    old-files %s" % access_log_old_files))\n-                access_event_log = access_event_logfile % {\'z_log\': z_log,\n-                                             \'access_log_rotate\': access_log_rotate}\n+                access_event_log = access_event_logfile % {\n+                    \'z_log\': z_log,\n+                    \'access_log_rotate\': access_log_rotate}\n             # custom directive\n             else:\n                 access_event_log = custom_access_event_log\n@@ -359,8 +364,8 @@ def build_zope_conf(self):\n                 \'access_event_log\': access_event_log,\n             }\n \n-        default_zpublisher_encoding = options.get(\'default-zpublisher-encoding\',\n-                                                  \'utf-8\')\n+        default_zpublisher_encoding = options.get(\n+            \'default-zpublisher-encoding\', \'utf-8\')\n         if default_zpublisher_encoding:\n             default_zpublisher_encoding = \'default-zpublisher-encoding %s\' %\\\n                                           default_zpublisher_encoding\n@@ -370,8 +375,8 @@ def build_zope_conf(self):\n         shared_blob_dir = options.get(\'shared-blob\', \'no\')\n \n         before_storage = options.get(\'before-storage\')\n-        demo_storage = options.get(\'demo-storage\', \'off\') \\\n-                       not in (\'off\', \'disable\', \'false\')\n+        demo_storage = options.get(\n+            \'demo-storage\', \'off\') not in (\'off\', \'disable\', \'false\')\n \n         zlib = options.get(\'zlib-storage\')\n \n@@ -402,7 +407,7 @@ def _split(el):\n                 if _split(el) is not None])\n             type_ = rel_storage.pop(\'type\', \'postgresql\')\n \n-            if type_ == \'postgresql\' and not \'dsn\' in rel_storage:\n+            if type_ == \'postgresql\' and \'dsn\' not in rel_storage:\n                 # Support zope2instance 1.4 style interpolation for\n                 # postgresql\n                 template = ("dbname=\'%(dbname)s\' user=\'%(user)s\' "\n@@ -428,7 +433,7 @@ def is_rs_option(name):\n                 rs_opts=\'\\n\'.join(\' \' * 8 + \' \'.join((k, v))\n                                   for k, v in rel_storage.items()\n                                   if is_rs_option(k)),\n-                )\n+            )\n             file_storage_snippet = rel_storage_template % opts\n         else:\n             file_storage_snippet = self.render_file_storage(\n@@ -445,11 +450,13 @@ def is_rs_option(name):\n \n         python_check_interval = options.get(\'python-check-interval\', \'1000\')\n         if python_check_interval:\n-            python_check_interval = "python-check-interval %s" % python_check_interval\n+            python_check_interval = (\n+                "python-check-interval %s" % python_check_interval)\n \n         enable_products = options.get(\'enable-product-installation\', \'off\')\n         if enable_products:\n-            enable_products = "enable-product-installation %s" % enable_products\n+            enable_products = (\n+                "enable-product-installation %s" % enable_products)\n \n         zeo_address = options.get(\'zeo-address\', \'8100\')\n         zeo_addresses = zeo_address.split(\' \')\n@@ -458,7 +465,7 @@ def is_rs_option(name):\n             if not address:\n                 continue\n             zeo_address_list += zeo_address_list_template % dict(\n-                                zeo_address = address)\n+                zeo_address=address)\n \n         zodb_cache_size = options.get(\'zodb-cache-size\', \'30000\')\n         if zodb_cache_size:\n@@ -467,7 +474,8 @@ def is_rs_option(name):\n             zodb_cache_size = ""\n         zodb_cache_size_bytes = options.get(\'zodb-cache-size-bytes\', None)\n         if zodb_cache_size_bytes:\n-            zodb_cache_size_bytes = "cache-size-bytes %s" % zodb_cache_size_bytes\n+            zodb_cache_size_bytes = (\n+                "cache-size-bytes %s" % zodb_cache_size_bytes)\n         else:\n             zodb_cache_size_bytes = ""\n         zeo_client_cache_size = options.get(\'zeo-client-cache-size\', \'128MB\')\n@@ -475,46 +483,54 @@ def is_rs_option(name):\n \n         if zeo_client:\n             if relstorage:\n-                raise ValueError(\'You cannot use both ZEO and RelStorage \'\n-                    \'at the same time.\')\n+                raise ValueError(\n+                    \'You cannot use both ZEO and RelStorage at the same time.\')\n \n-            zeo_client_drop_cache_rather_verify = options.get(\'zeo-client-drop-cache-rather-verify\', \'\')\n+            zeo_client_drop_cache_rather_verify = options.get(\n+                \'zeo-client-drop-cache-rather-verify\', \'\')\n             if zeo_client_drop_cache_rather_verify:\n-                zeo_client_drop_cache_rather_verify = \'drop-cache-rather-verify %s\' % \\\n-                        zeo_client_drop_cache_rather_verify\n+                zeo_client_drop_cache_rather_verify = (\n+                    \'drop-cache-rather-verify %s\'\n+                    % zeo_client_drop_cache_rather_verify)\n             zeo_var_dir = options.get(\'zeo-var\',\n                                       os.path.join(instance_home, \'var\'))\n             zeo_client_client = options.get(\'zeo-client-client\', \'\')\n-            zeo_client_blob_cache_size = \\\n-                    options.get(\'zeo-client-blob-cache-size\', \'\')\n-            zeo_client_blob_cache_size_check = \\\n-                    options.get(\'zeo-client-blob-cache-size-check\', \'\')\n-            zeo_client_min_disconnect_poll = options.get(\'min-disconnect-poll\', "")\n-            zeo_client_max_disconnect_poll = options.get(\'max-disconnect-poll\', "")\n-            zeo_client_read_only_fallback = options.get(\'zeo-client-read-only-fallback\', \'false\')\n+            zeo_client_blob_cache_size = options.get(\n+                \'zeo-client-blob-cache-size\', \'\')\n+            zeo_client_blob_cache_size_check = options.get(\n+                \'zeo-client-blob-cache-size-check\', \'\')\n+            zeo_client_min_disconnect_poll = options.get(\n+                \'min-disconnect-poll\', "")\n+            zeo_client_max_disconnect_poll = options.get(\n+                \'max-disconnect-poll\', "")\n+            zeo_client_read_only_fallback = options.get(\n+                \'zeo-client-read-only-fallback\', \'false\')\n             if zeo_client_client:\n                 zeo_client_client = \'client %s\' % zeo_client_client\n             if zeo_client_blob_cache_size:\n-                zeo_client_blob_cache_size = \\\n-                      \'blob-cache-size %s\' % zeo_client_blob_cache_size\n+                zeo_client_blob_cache_size = (\n+                    \'blob-cache-size %s\' % zeo_client_blob_cache_size)\n             if zeo_client_blob_cache_size_check:\n-                zeo_client_blob_cache_size_check = \\\n-                        \'blob-cache-size-check %s\' % \\\n-                        zeo_client_blob_cache_size_check\n+                zeo_client_blob_cache_size_check = (\n+                    \'blob-cache-size-check %s\'\n+                    % zeo_client_blob_cache_size_check)\n             if zeo_client_min_disconnect_poll:\n-                zeo_client_min_disconnect_poll = "min-disconnect-poll %s" % zeo_client_min_disconnect_poll\n+                zeo_client_min_disconnect_poll = (\n+                    "min-disconnect-poll %s" % zeo_client_min_disconnect_poll)\n             if zeo_client_max_disconnect_poll:\n-                zeo_client_max_disconnect_poll = "max-disconnect-poll %s" % zeo_client_max_disconnect_poll\n+                zeo_client_max_disconnect_poll = (\n+                    "max-disconnect-poll %s" % zeo_client_max_disconnect_poll)\n             if zeo_client_read_only_fallback:\n-                zeo_client_read_only_fallback = "read-only-fallback %s" % zeo_client_read_only_fallback\n+                zeo_client_read_only_fallback = (\n+                    "read-only-fallback %s" % zeo_client_read_only_fallback)\n             if options.get(\'zeo-username\', \'\'):\n                 if not options.get(\'zeo-password\', \'\'):\n                     raise zc.buildout.UserError(\'No ZEO password specified\')\n \n                 zeo_authentication = zeo_authentication_template % dict(\n-                        realm = options.get(\'zeo-realm\', \'ZEO\'),\n-                        username = options.get(\'zeo-username\'),\n-                        password = options.get(\'zeo-password\'))\n+                    realm=options.get(\'zeo-realm\', \'ZEO\'),\n+                    username=options.get(\'zeo-username\'),\n+                    password=options.get(\'zeo-password\'))\n             else:\n                 zeo_authentication = \'\'\n \n@@ -524,18 +540,17 @@ def is_rs_option(name):\n                 storage_snippet_template = zeo_storage_template\n \n             storage_snippet = storage_snippet_template % dict(\n-                blob_storage = blob_storage,\n-                shared_blob_dir = shared_blob_dir,\n-                zeo_address_list = zeo_address_list,\n-                zeo_client_cache_size = zeo_client_cache_size,\n+                blob_storage=blob_storage,\n+                shared_blob_dir=shared_blob_dir,\n+                zeo_address_list=zeo_address_list,\n+                zeo_client_cache_size=zeo_client_cache_size,\n                 zeo_client_blob_cache_size=zeo_client_blob_cache_size,\n-                zeo_client_blob_cache_size_check=\\\n-                    zeo_client_blob_cache_size_check,\n-                zeo_authentication = zeo_authentication,\n-                zeo_client_client = zeo_client_client,\n-                zeo_storage = zeo_storage,\n+                zeo_client_blob_cache_size_check=zeo_client_blob_cache_size_check,  # noqa: E501\n+                zeo_authentication=zeo_authentication,\n+                zeo_client_client=zeo_client_client,\n+                zeo_storage=zeo_storage,\n                 zeo_var_dir=zeo_var_dir,\n-                zeo_client_drop_cache_rather_verify = zeo_client_drop_cache_rather_verify,\n+                zeo_client_drop_cache_rather_verify=zeo_client_drop_cache_rather_verify,  # noqa: E501\n                 zeo_client_min_disconnect_poll=zeo_client_min_disconnect_poll,\n                 zeo_client_max_disconnect_poll=zeo_client_max_disconnect_poll,\n                 read_only=options.get(\'read-only\', \'false\'),\n@@ -547,8 +562,9 @@ def is_rs_option(name):\n             storage_snippet = file_storage_snippet\n \n         if before_storage:\n-            storage_snippet = (before_storage_template % before_storage) % \\\n-                              indent(storage_snippet, 2)\n+            storage_snippet = (\n+                before_storage_template % before_storage) % indent(\n+                    storage_snippet, 2)\n \n         if demo_storage:\n             demo_file_storage = options.get(\'demo-file-storage\')\n@@ -557,8 +573,8 @@ def is_rs_option(name):\n             if demo_file_storage or demo_blob_storage:\n                 base = storage_snippet.replace(\'>\', \' base>\', 1)\n                 changes = self.render_file_storage(\n-                    demo_file_storage, demo_blob_storage, base_dir, var_dir, zlib).\\\n-                    replace(\'>\', \' changes>\', 1)\n+                    demo_file_storage, demo_blob_storage, base_dir, var_dir,\n+                    zlib).replace(\'>\', \' changes>\', 1)\n \n                 storage_snippet = demo_storage2_template % (base, changes)\n \n@@ -566,12 +582,13 @@ def is_rs_option(name):\n                 raise ValueError(\n                     "Both blob and demo storage cannot be used"\n                     " at the same time (use a before storage instead)."\n-                    )\n+                )\n             else:\n                 storage_snippet = demo_storage_template % storage_snippet\n \n         if options.get(\'storage-wrapper\'):\n-            storage_snippet = indent(options[\'storage-wrapper\'] % storage_snippet, 4)\n+            storage_snippet = indent(\n+                options[\'storage-wrapper\'] % storage_snippet, 4)\n \n         zodb_tmp_storage = options.get(\'zodb-temporary-storage\',\n                                        zodb_temporary_storage_template)\n@@ -591,42 +608,45 @@ def is_rs_option(name):\n         if not os.path.exists(lock_file_dir):\n             os.makedirs(lock_file_dir)\n \n-        zope_conf = template % dict(instance_home = instance_home,\n-                                    client_home = client_home,\n-                                    imports_lines = imports_lines,\n-                                    paths_lines = paths_lines,\n-                                    products_lines = products_lines,\n-                                    debug_mode = debug_mode,\n-                                    security_implementation = security_implementation,\n-                                    verbose_security = verbose_security,\n-                                    effective_user = effective_user,\n-                                    http_header_max_length = http_header_max_length,\n-                                    ip_address = ip_address,\n-                                    mailinglogger_import = mailinglogger_import,\n-                                    event_log = event_log,\n-                                    access_event_log = access_event_log,\n-                                    default_zpublisher_encoding = default_zpublisher_encoding,\n-                                    storage_snippet = storage_snippet,\n-                                    port_base = port_base,\n-                                    http_address = http_address,\n-                                    http_force_connection_close = http_force_connection_close,\n-                                    http_fast_listen = http_fast_listen,\n-                                    ftp_address = ftp_address,\n-                                    webdav_address = webdav_address,\n-                                    icp_address = icp_address,\n-                                    zserver_threads = zserver_threads,\n-                                    zodb_cache_size = zodb_cache_size,\n-                                    zodb_cache_size_bytes = zodb_cache_size_bytes,\n-                                    zodb_tmp_storage = zodb_tmp_storage,\n-                                    pid_file = pid_file,\n-                                    lock_file = lock_file,\n-                                    environment_vars = environment_vars,\n-                                    deprecation_warnings = deprecation_warnings,\n-                                    python_check_interval = python_check_interval,\n-                                    enable_products = enable_products,\n-                                    zope_conf_additional = zope_conf_additional,)\n-\n-        zope_conf = \'\\n\'.join([l for l in zope_conf.splitlines() if l.rstrip()])\n+        zope_conf = template % dict(\n+            instance_home=instance_home,\n+            client_home=client_home,\n+            imports_lines=imports_lines,\n+            paths_lines=paths_lines,\n+            products_lines=products_lines,\n+            debug_mode=debug_mode,\n+            security_implementation=security_implementation,\n+            verbose_security=verbose_security,\n+            effective_user=effective_user,\n+            http_header_max_length=http_header_max_length,\n+            ip_address=ip_address,\n+            mailinglogger_import=mailinglogger_import,\n+            event_log=event_log,\n+            access_event_log=access_event_log,\n+            default_zpublisher_encoding=default_zpublisher_encoding,\n+            storage_snippet=storage_snippet,\n+            port_base=port_base,\n+            http_address=http_address,\n+            http_force_connection_close=http_force_connection_close,\n+            http_fast_listen=http_fast_listen,\n+            ftp_address=ftp_address,\n+            webdav_address=webdav_address,\n+            icp_address=icp_address,\n+            zserver_threads=zserver_threads,\n+            zodb_cache_size=zodb_cache_size,\n+            zodb_cache_size_bytes=zodb_cache_size_bytes,\n+            zodb_tmp_storage=zodb_tmp_storage,\n+            pid_file=pid_file,\n+            lock_file=lock_file,\n+            environment_vars=environment_vars,\n+            deprecation_warnings=deprecation_warnings,\n+            python_check_interval=python_check_interval,\n+            enable_products=enable_products,\n+            zope_conf_additional=zope_conf_additional,)\n+\n+        zope_conf = \'\\n\'.join([l\n+                               for l in zope_conf.splitlines()\n+                               if l.rstrip()])\n         zope_conf_path = os.path.join(location, \'etc\', \'zope.conf\')\n         with open(zope_conf_path, \'w\') as f:\n             f.write(zope_conf)\n@@ -674,15 +694,15 @@ def __repr__(self):\n                     zope_conf,\n                     options[\'buildout-directory\'] + os.sep,\n                     self._relative_paths\n-                    )\n                 )\n+            )\n             program_path = relative_path_str(\n                 zc.buildout.easy_install._relativitize(\n                     program_path,\n                     options[\'buildout-directory\'] + os.sep,\n                     self._relative_paths\n-                    )\n                 )\n+            )\n \n         options[\'zope-conf\'] = zope_conf_path\n         arguments = ["-C", zope_conf_path, \'-p\', program_path]\n@@ -719,7 +739,7 @@ def _install_scripts(self, dest, working_set, reqs=(), interpreter=None,\n                 exec_sitecustomize=False,\n                 relative_paths=self._relative_paths,\n                 script_arguments=script_arguments,\n-                )\n+            )\n         else:\n             initialization = options[\'initialization\'] % options\n             return zc.buildout.easy_install.scripts(\n@@ -734,8 +754,7 @@ def _install_scripts(self, dest, working_set, reqs=(), interpreter=None,\n                 relative_paths=self._relative_paths,)\n \n     def build_package_includes(self):\n-        """Create ZCML slugs in etc/package-includes\n-        """\n+        """Create ZCML slugs in etc/package-includes."""\n         location = self.options[\'location\']\n         sitezcml_path = os.path.join(location, \'etc\', \'site.zcml\')\n         zcml = self.options.get(\'zcml\')\n@@ -767,32 +786,32 @@ def build_package_includes(self):\n \n         if additional_zcml:\n             additional_zcml = additional_zcml_template % additional_zcml\n-            path=os.path.join(includes_path, "999-additional-overrides.zcml")\n+            path = os.path.join(includes_path, "999-additional-overrides.zcml")\n             open(path, "w").write(additional_zcml.strip())\n \n         if resources:\n             resources_path = resources.strip()\n-            path=os.path.join(includes_path, "998-resources-configure.zcml")\n+            path = os.path.join(includes_path, "998-resources-configure.zcml")\n             open(path, "w").write(\n                 resources_zcml % dict(directory=resources_path)\n-                )\n+            )\n \n             if not os.path.exists(resources_path):\n                 os.mkdir(resources_path)\n \n         if locales:\n             locales_path = locales.strip()\n-            path=os.path.join(includes_path, "001-locales-configure.zcml")\n+            path = os.path.join(includes_path, "001-locales-configure.zcml")\n             open(path, "w").write(\n                 locales_zcml % dict(directory=locales_path)\n-                )\n+            )\n \n             if not os.path.exists(locales_path):\n                 os.mkdir(locales_path)\n \n         if zcml:\n-            n = 1 # 001 is reserved for an optional locales-configure\n-            package_match = re.compile(\'\\w+([.]\\w+)*$\').match\n+            n = 1  # 001 is reserved for an optional locales-configure\n+            package_match = re.compile(r\'\\w+([.]\\w+)*$\').match\n             for package in zcml:\n                 n += 1\n                 orig = package\n@@ -818,11 +837,11 @@ def build_package_includes(self):\n                 path = os.path.join(\n                     includes_path,\n                     "%3.3d-%s-%s.zcml" % (n, package, file_suff),\n-                    )\n+                )\n                 open(path, \'w\').write(\n                     \'<include package="%s" file="%s" />\\n\'\n                     % (package, filename)\n-                    )\n+                )\n \n     def render_file_storage(self, file_storage, blob_storage,\n                             base_dir, var_dir, zlib):\n@@ -839,13 +858,12 @@ def render_file_storage(self, file_storage, blob_storage,\n                     compress = \'false\'\n                 else:\n                     raise ValueError(\n-                        "Valid options for ``zlib-storage`` are "\\\n-                        "(\'compress\', \'uncompress\'). Got: %s." % zlib\n-                        )\n+                        "Valid options for ``zlib-storage`` are "\n+                        "(\'compress\', \'uncompress\'). Got: %s." % zlib)\n \n                 storage = zlib_storage_template % (\n                     compress, indent(storage, 2)\n-                    )\n+                )\n         else:\n             storage = "    <demostorage />"\n \n@@ -864,14 +882,14 @@ def render_file_storage(self, file_storage, blob_storage,\n \n \n # Storage snippets for zope.conf template\n-file_storage_template="""\n+file_storage_template = """\n     # FileStorage database\n     <filestorage>\n       path %s\n     </filestorage>\n """\n \n-zlib_storage_template="""\n+zlib_storage_template = """\n     %%import zc.zlibstorage\n     # ZlibStorage wrapper\n     <zlibstorage>\n@@ -880,14 +898,14 @@ def render_file_storage(self, file_storage, blob_storage,\n     </zlibstorage>\n """\n \n-demo_storage_template="""\n+demo_storage_template = """\n     # DemoStorage\n     <demostorage>\n %s\n     </demostorage>\n """\n \n-before_storage_template="""\n+before_storage_template = """\n     %%%%import zc.beforestorage\n     # BeforeStorage\n     <before>\n@@ -896,7 +914,7 @@ def render_file_storage(self, file_storage, blob_storage,\n     </before>\n """\n \n-demo_storage2_template="""\n+demo_storage2_template = """\n     # DemoStorage\n     <demostorage>\n %s\n@@ -904,7 +922,7 @@ def render_file_storage(self, file_storage, blob_storage,\n     </demostorage>\n """\n \n-rel_storage_template="""\n+rel_storage_template = """\n     %%import relstorage\n     <relstorage>\n %(rs_opts)s\n@@ -914,7 +932,7 @@ def render_file_storage(self, file_storage, blob_storage,\n     </relstorage>\n """\n \n-blob_storage_template="""\n+blob_storage_template = """\n     # Blob-enabled FileStorage database\n     <blobstorage>\n       blob-dir %s\n@@ -922,17 +940,17 @@ def render_file_storage(self, file_storage, blob_storage,\n     </blobstorage>\n """\n \n-zeo_authentication_template="""\n+zeo_authentication_template = """\n     realm %(realm)s\n       username %(username)s\n       password %(password)s\n """.strip()\n \n-zeo_address_list_template="""\n+zeo_address_list_template = """\n       server %(zeo_address)s\n """\n \n-zeo_storage_template="""\n+zeo_storage_template = """\n     # ZEOStorage database\n     <zeoclient>\n       read-only %(read_only)s\n@@ -950,7 +968,7 @@ def render_file_storage(self, file_storage, blob_storage,\n     </zeoclient>\n """.strip()\n \n-zeo_blob_storage_template="""\n+zeo_blob_storage_template = """\n     # Blob-enabled ZEOStorage database\n     <zeoclient>\n       read-only %(read_only)s\n@@ -972,7 +990,7 @@ def render_file_storage(self, file_storage, blob_storage,\n     </zeoclient>\n """.strip()\n \n-zodb_temporary_storage_template="""\n+zodb_temporary_storage_template = """\n <zodb_db temporary>\n     # Temporary storage database (for sessions)\n     <temporarystorage>\n@@ -983,11 +1001,11 @@ def render_file_storage(self, file_storage, blob_storage,\n </zodb_db>\n """.strip()\n \n-http_force_connection_close_template="""\\\n+http_force_connection_close_template = """\\\n   force-connection-close %s\n """.rstrip()\n \n-http_fast_listen_template="""\\\n+http_fast_listen_template = """\\\n   # Set to off to defer opening of the HTTP socket until the end of the\n   # startup phase:\n   fast-listen %s\n@@ -1045,7 +1063,7 @@ def render_file_storage(self, file_storage, blob_storage,\n """\n \n # The template used to build zope.conf\n-zope_conf_template="""\\\n+zope_conf_template = """\\\n %(imports_lines)s\n %%define INSTANCEHOME %(instance_home)s\n instancehome $INSTANCEHOME\n@@ -1206,4 +1224,4 @@ class = StreamHandler\n \n [formatter_generic]\n format = %%(asctime)s %%(levelname)-5.5s [%%(name)s:%%(lineno)s][%%(threadName)s] %%(message)s\n-"""\n+"""  # noqa: E501\n'

