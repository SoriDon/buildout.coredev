Repository: plone.app.mosaic


Branch: refs/heads/es6
Date: 2022-06-13T16:47:17+02:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/plone.app.mosaic/commit/db492db1ce1f1b647bfaec959b00e224edb231f4

cleanup resizing

Files changed:
M resources/js/mosaic.layout.js
M resources/js/mosaic.panel.js
M resources/js/mosaic.tile.js
M resources/scss/mosaic.authoring.dividers.scss
M resources/scss/mosaic.authoring.dragging.scss
M resources/scss/mosaic.authoring.resizing.scss
D resources/img/window.png

b'diff --git a/resources/img/window.png b/resources/img/window.png\ndeleted file mode 100644\nindex d061ac27..00000000\nBinary files a/resources/img/window.png and /dev/null differ\ndiff --git a/resources/js/mosaic.layout.js b/resources/js/mosaic.layout.js\nindex 0615cb6e..bb091606 100644\n--- a/resources/js/mosaic.layout.js\n+++ b/resources/js/mosaic.layout.js\n@@ -43,21 +43,6 @@ export default class LayoutManager {\n             "mosaic-col-11",\n             "mosaic-col-12",\n         ],\n-        positionClasses: [\n-            "mosaic-position-0",\n-            "mosaic-position-1",\n-            "mosaic-position-2",\n-            "mosaic-position-3",\n-            "mosaic-position-4",\n-            "mosaic-position-5",\n-            "mosaic-position-6",\n-            "mosaic-position-7",\n-            "mosaic-position-8",\n-            "mosaic-position-9",\n-            "mosaic-position-10",\n-            "mosaic-position-11",\n-            "mosaic-position-12",\n-        ],\n         resizeHandleClasses: [\n             "mosaic-resize-handle-1",\n             "mosaic-resize-handle-2",\n@@ -74,6 +59,28 @@ export default class LayoutManager {\n         ],\n     }\n \n+    /* css helpers */\n+    getWidthClass(e) {\n+        for (const cls of this.layout.widthClasses) {\n+            if ($(e).hasClass(cls)) {\n+                return cls;\n+            }\n+        }\n+        // Fallback\n+        return this.layout.widthClasses[0];\n+    }\n+\n+    getResizeHandleClassId(e) {\n+        // Loop through resize handle classes\n+        for (const idx in this.layout.resizeHandleClasses) {\n+            if ($(e).hasClass(this.layout.resizeHandleClasses[idx])) {\n+                return idx;\n+            }\n+        }\n+        // Fallback\n+        return 1;\n+    };\n+\n     addAppTile(type, url /*, id */) {\n         var self = this;\n         // Close overlay\n@@ -266,25 +273,6 @@ export default class LayoutManager {\n                 $(obj)\n                     .children(".mosaic-grid-cell")\n                     .each(function () {\n-                        // // Add column size\n-                        // var mosaicPositionClass = $(this).mosaicGetPositionClass();\n-                        //\n-                        // for (var i = 0; i < 12; i++) {\n-                        //   if (mosaicPositionClass === "mosaic-position-" + i) {\n-                        //     position = i + 1;\n-                        //     break;\n-                        //   }\n-                        // }\n-                        //\n-                        // // Add column size\n-                        // var mosaicWidthClass = $(this).mosaicGetWidthClass();\n-                        //\n-                        // for (var j = 0; j < 12; j++) {\n-                        //   if (mosaicWidthClass === "col-" + (j + 1)) {\n-                        //     size = j + 1;\n-                        //     break;\n-                        //   }\n-                        // }\n                         // Add cell start tag\n                         body += \'        <div class="\' + $(this).attr("class") + \'">\\n\'; // jshint ignore:line\n \n@@ -486,9 +474,9 @@ export default class LayoutManager {\n             // Find resize helper\n             var new_tile = $(".mosaic-helper-tile-new", self.mosaic.document);\n             if (new_tile.length > 0) {\n-                new_tile.each(async function () {\n+                new_tile.each(function () {\n                     // Handle drag end\n-                    await $(this).mosaicHandleDragEnd();\n+                    $(this).mosaicHandleDragEnd();\n                 });\n             }\n         };\n@@ -535,10 +523,10 @@ export default class LayoutManager {\n \n                 var grid_percent = GetGridPercentList();\n \n-                $(grid_percent).each(function () {\n-                    cur_snap_offset = Math.abs(this - mouse_percentage);\n+                grid_percent.forEach(function (perc) {\n+                    cur_snap_offset = Math.abs(perc - mouse_percentage);\n                     if (cur_snap_offset < snap_offset) {\n-                        snap = this;\n+                        snap = perc;\n                         snap_offset = cur_snap_offset;\n                     }\n                 });\n@@ -547,7 +535,7 @@ export default class LayoutManager {\n \n                 var column_sizes = [];\n                 row.children(".mosaic-resize-placeholder").each(function () {\n-                    var col_size = GetColSizeByColClass($(this).mosaicGetWidthClass());\n+                    var col_size = GetColSizeByColClass(self.getWidthClass(this));\n                     column_sizes.push(col_size);\n                 });\n \n@@ -588,18 +576,18 @@ export default class LayoutManager {\n                     row.children(".mosaic-resize-placeholder").each(function (index) {\n                         // // If there are columns before this column and the column width is not set,\n                         // // then set it to the value of 2 and add a Reset button to the Tile.\n-                        //\n-                        // var mosaicDataClass = $(this).mosaicGetDataClass();\n+\n+                        // var mosaicDataClass = self.getDataClass(this);\n                         // var data_size = GetColSizeByColClass(mosaicDataClass, "mosaic-col-");\n-                        //\n+\n                         // if (index < resize_handle_index && data_size === 0) {\n                         //   column_sizes[index] = 2;\n-                        //\n+\n                         //   var $mosaicGridCell = $(this).parent().children(".mosaic-grid-cell").get(index);\n                         //   var $tileSideTools = $($mosaicGridCell).children(".mosaic-tile").first().children(".mosaic-tile-side-tools").first();\n-                        //\n+\n                         //   $tileSideTools.children(".mosaic-tile-label.reset").remove();\n-                        //\n+\n                         //   $tileSideTools.append(\n                         //     $(self.mosaic.document.createElement("div"))\n                         //       .addClass("mosaic-tile-label reset")\n@@ -611,32 +599,19 @@ export default class LayoutManager {\n                         if (index === resize_handle_index) {\n                             column_sizes[index] = col_size;\n \n-                            var mosaic_resize_class = "mosaic-resize-0";\n-                            if (column_sizes.length > 1 && index > 0) {\n-                                var _value = 0;\n-                                for (var i = 0; i < index; i++) {\n-                                    _value += column_sizes[i];\n-                                }\n-                                mosaic_resize_class = "mosaic-resize-" + _value;\n+                            var _value = 0;\n+                            for (const size of column_sizes) {\n+                                _value += size;\n                             }\n+                            var mosaic_resize_class = "mosaic-resize-" + _value;\n \n                             var col_size_class = GetWidthClassByColSize(col_size);\n+                            var new_class = `mosaic-${col_size_class} ${col_size_class} ${mosaic_resize_class}`;\n+                            log.info("new col_class: " + new_class);\n                             $(this)\n                                 .removeClass(self.layout.widthClasses.join(" "))\n                                 .removeClass(self.layout.dataClasses.join(" "))\n-                                .removeClass(\n-                                    self.layout.positionClasses\n-                                        .join(" ")\n-                                        .replace(/position/g, "resize")\n-                                )\n-                                .addClass(\n-                                    "mosaic-" +\n-                                        col_size_class +\n-                                        " " +\n-                                        col_size_class +\n-                                        " " +\n-                                        mosaic_resize_class\n-                                )\n+                                .addClass(`mosaic-${col_size_class} ${col_size_class} ${mosaic_resize_class}`)\n                                 .find(".info")\n                                 .html(col_size);\n                         }\n@@ -679,7 +654,6 @@ export default class LayoutManager {\n                         }\n \n                         $(this)\n-                            .removeClass(self.layout.positionClasses.join(" ")) // probably not needed, but just for cleaning up\n                             .removeClass(self.layout.widthClasses.join(" "))\n                             .addClass(GetWidthClassByColSize(column_sizes[i]));\n \n@@ -852,7 +826,7 @@ export default class LayoutManager {\n         $(self.mosaic.document).on("click", applyCustomCss);\n     }\n \n-    async initialize_panels() {\n+    initialize_panels() {\n         var self = this;\n \n         self.initJQueryHelpers();\n@@ -868,7 +842,7 @@ export default class LayoutManager {\n             // Add icons and dividers\n             obj.find(".mosaic-tile").each(async function () {\n                 var tile = new Tile(self.mosaic, this)\n-                tile.initialize();\n+                await tile.initialize();\n             });\n             obj.find(".mosaic-tile").mosaicAddDrag();\n             obj.mosaicAddEmptyRows();\n@@ -1053,75 +1027,6 @@ export default class LayoutManager {\n             });\n         };\n \n-        /**\n-         * Get the data class of the matched elements\n-         *\n-         * @id jQuery.mosaicGetDataClass\n-         * @return {String} Name of the width class\n-         */\n-        $.fn.mosaicGetDataClass = function () {\n-            for (const cls of self.layout.dataClasses) {\n-                if ($(this).hasClass(cls)) {\n-                    return cls;\n-                }\n-            }\n-            // Fallback\n-            return self.layout.dataClasses[0];\n-        };\n-\n-        /**\n-         * Get the width class of the matched elements\n-         *\n-         * @id jQuery.mosaicGetWidthClass\n-         * @return {String} Name of the width class\n-         */\n-        $.fn.mosaicGetWidthClass = function () {\n-            for (const cls of self.layout.widthClasses) {\n-                var pos_cls = cls, resize_cls = cls.replace("position", "resize");\n-                if ($(this).hasClass(pos_cls) || $(this.hasClass(resize_cls))) {\n-                    return cls;\n-                }\n-            }\n-            // Fallback\n-            return self.layout.widthClasses[0];\n-        };\n-\n-        /**\n-         * Get the position class of the matched elements\n-         *\n-         * @id jQuery.mosaicGetPositionClass\n-         * @return {String} Name of the position class\n-         */\n-        $.fn.mosaicGetPositionClass = function () {\n-            // Loop through classes\n-            for (const cls of self.layout.positionClasses) {\n-                var pos_cls = cls, resize_cls = cls.replace("position", "resize");\n-                if ($(this).hasClass(pos_cls) || $(this.hasClass(resize_cls))) {\n-                    // Return the position class\n-                    return cls;\n-                }\n-            }\n-            // Fallback\n-            return self.layout.positionClasses[0];\n-        };\n-\n-        /**\n-         * Get the resize handle class index of the matched element\n-         *\n-         * @id jQuery.mosaicGetResizeHandleClassId\n-         * @return {Integer} Id of the resize handle class\n-         */\n-        $.fn.mosaicGetResizeHandleClassId = function () {\n-            // Loop through resize handle classes\n-            for (var i = 0; i < self.layout.resizeHandleClasses.length; i++) {\n-                if ($(this).hasClass(self.layout.resizeHandleClasses[i])) {\n-                    return i;\n-                }\n-            }\n-            // Fallback\n-            return 1;\n-        };\n-\n         /**\n          * Add draggable to matched elements\n          *\n@@ -1204,7 +1109,7 @@ export default class LayoutManager {\n          * @id jQuery.mosaicHandleDragEnd\n          * @return {Object} jQuery object\n          */\n-        $.fn.mosaicHandleDragEnd = async function () {\n+        $.fn.mosaicHandleDragEnd = function () {\n             // Get layout object\n             var obj = $(this).parents("[data-panel]");\n \n@@ -1367,7 +1272,6 @@ export default class LayoutManager {\n \n                         // Resize current column\n                         _col.removeClass(self.layout.widthClasses.join(" "))\n-                            .removeClass(self.layout.positionClasses.join(" "))\n                             .addClass("col");\n \n                         log.info("Now inside here left right");\n@@ -1452,9 +1356,7 @@ export default class LayoutManager {\n                 $(this)\n                     .children(".mosaic-grid-cell")\n                     .each(function (i) {\n-                        $(this)\n-                            .removeClass(self.layout.widthClasses.join(" "))\n-                            .removeClass(self.layout.positionClasses.join(" "));\n+                        $(this).removeClass(self.layout.widthClasses.join(" "));\n \n                         var position = 0;\n                         var col_size = Math.floor(12 / nr_of_columns);\n@@ -1476,10 +1378,6 @@ export default class LayoutManager {\n                             }\n                             if (i === j) {\n                                 column_sizes.push(col_size);\n-                                // TODO: Clean up the col_size and position variables if we will not need them.\n-                                // TODO: It seems data("col_size") is not needed any more ... commenting out # 2020-04-21\n-                                // $(this).addClass("col-" + col_size + " mosaic-position-" + position).data("col_size", col_size);\n-                                // $(this).addClass("col").data("col_size", col_size);\n                                 $(this).addClass("col");\n                             }\n                         }\n@@ -1505,15 +1403,13 @@ export default class LayoutManager {\n                 var nr_of_columns = $(this).children(".mosaic-grid-cell").length;\n \n                 if (nr_of_columns > 1 && nr_of_columns <= 12) {\n-                    log.info("nr_of_columns > 1 && nr_of_columns <= 12");\n-\n                     var column_sizes = [];\n                     var zero_count = 0;\n                     var col_sum = 0;\n \n                     for (let i = 0; i < nr_of_columns; i++) {\n                         var col_size = GetColSizeByColClass(\n-                            $($(this).children(".mosaic-grid-cell").get(i)).mosaicGetWidthClass()\n+                            self.getWidthClass($(this).children(".mosaic-grid-cell").get(i))\n                         );\n                         column_sizes.push(col_size);\n                         col_sum = col_sum + col_size;\n@@ -1531,10 +1427,6 @@ export default class LayoutManager {\n                     var margin_left = 0;\n                     col_size = 0;\n \n-                    // $(this).append($(mosaic_doc.createElement("div"))\n-                    //   .addClass("mosaic-grid-bg")\n-                    // );\n-\n                     for (let i = 0; i < nr_of_columns; i++) {\n                         col_size = column_sizes[i] ? column_sizes[i] : zero_col;\n \n@@ -1546,17 +1438,14 @@ export default class LayoutManager {\n                         $(this).append(\n                             $(mosaic_doc.createElement("div"))\n                                 .addClass(\n-                                    "mosaic-resize-handle mosaic-resize-handle-" +\n-                                        (i + 1) +\n-                                        " mosaic-resize-" +\n-                                        resize_col_size\n+                                    `mosaic-resize-handle mosaic-resize-handle-${(i + 1)}`\n+                                    + ` mosaic-resize-${resize_col_size}`\n                                 )\n                                 .data("resize_handle_index", i)\n-                                .css({ marginLeft: margin_left + "%" })\n                         );\n                     }\n \n-                    log.info("$.fn.mosaicSetResizeHandles");\n+                    log.info("$.fn.mosaicSetResizeHandles:");\n                     log.info("column_sizes", column_sizes);\n                     log.info("zero_count", zero_count);\n                     log.info("col_size", col_size);\n@@ -1565,7 +1454,8 @@ export default class LayoutManager {\n                 // Mouse down handler on resize handle\n                 $(this)\n                     .children(".mosaic-resize-handle")\n-                    .mousedown(function (/* e */) {\n+                    .off("mousedown")\n+                    .on("mousedown", function (/* e */) {\n                         var $mosaicGridCellChildren = $(this)\n                             .parent()\n                             .children(".mosaic-grid-cell");\n@@ -1575,31 +1465,26 @@ export default class LayoutManager {\n                         var column_sizes = [];\n \n                         if (nr_of_columns > 1 && nr_of_columns <= 12) {\n-                            for (var i = 0; i < nr_of_columns; i++) {\n-                                var col_size = GetColSizeByColClass(\n-                                    $($mosaicGridCellChildren.get(i)).mosaicGetWidthClass()\n-                                );\n+                            for (const chld of $mosaicGridCellChildren) {\n+                                var mosaicWidthClass = self.getWidthClass(this);\n+                                var col_size = GetColSizeByColClass(mosaicWidthClass);\n                                 column_sizes.push(col_size);\n                             }\n                         }\n \n                         $mosaicGridCellChildren.each(function (index) {\n-                            var mosaicWidthClass = $(this).mosaicGetWidthClass();\n-                            var mosaicDataClass = mosaicWidthClass.replace("col", "mosaic-col"); // data class holds original column widths\n-                            var col_size = GetColSizeByColClass(mosaicWidthClass); // get the initiall size of the column\n+                            var mosaicWidthClass = self.getWidthClass(this);\n+                            var col_size = GetColSizeByColClass(mosaicWidthClass); // get the initial size of the column\n \n                             if (col_size == 0) {\n                                 col_size = "0 (2)";\n                             }\n \n-                            var mosaic_resize_class = "mosaic-resize-0";\n-                            if (column_sizes.length > 1 && index > 0) {\n-                                var _value = 0;\n-                                for (var i = 0; i < index; i++) {\n-                                    _value += column_sizes[i];\n-                                }\n-                                mosaic_resize_class = "mosaic-resize-" + _value;\n+                            var _value = 0;\n+                            for (const size of column_sizes) {\n+                                _value += size;\n                             }\n+                            var mosaic_resize_class = "mosaic-resize-" + _value;\n \n                             // Add placeholder\n                             $(this)\n@@ -1607,13 +1492,8 @@ export default class LayoutManager {\n                                 .append(\n                                     $(mosaic_doc.createElement("div"))\n                                         .addClass(\n-                                            "mosaic-resize-placeholder " +\n-                                                mosaicWidthClass +\n-                                                " " +\n-                                                mosaicDataClass +\n-                                                " " +\n-                                                mosaic_resize_class\n-                                        ) // jshint ignore:line\n+                                            `mosaic-resize-placeholder ${mosaicWidthClass} ${mosaic_resize_class}`\n+                                        )\n                                         .append(\n                                             $(mosaic_doc.createElement("div"))\n                                                 .addClass(\n@@ -1629,7 +1509,7 @@ export default class LayoutManager {\n                         });\n \n                         // Get resize handle index\n-                        var resize_handle_index = $(this).mosaicGetResizeHandleClassId();\n+                        var resize_handle_index = self.getResizeHandleClassId(this);\n \n                         // Add helper\n                         $(this)\n@@ -1637,11 +1517,7 @@ export default class LayoutManager {\n                             .append(\n                                 $(mosaic_doc.createElement("div"))\n                                     .addClass("mosaic-resize-handle mosaic-resize-handle-helper")\n-                                    .addClass(\n-                                        $(this)\n-                                            .mosaicGetPositionClass()\n-                                            .replace("position", "resize")\n-                                    )\n+                                    .addClass(self.layout.resizeHandleClasses[resize_handle_index])\n                                     .data("row_width", $(this).parent().width())\n                                     .data("nr_of_columns", nr_of_columns)\n                                     .data("column_sizes", column_sizes)\n@@ -1857,9 +1733,9 @@ function GetColSizeByColClass(col_class, prefix) {\n function GetBootstrapColByPercent(width) {\n     var grid_percent = GetGridPercentList();\n \n-    for (var i = 0; i < grid_percent.length; i++) {\n-        if (width === grid_percent[i]) {\n-            return i + 1;\n+    for (const idx in grid_percent) {\n+        if (width === grid_percent[idx]) {\n+            return idx + 1;\n         }\n     }\n \ndiff --git a/resources/js/mosaic.panel.js b/resources/js/mosaic.panel.js\nindex 03b6980d..46a4baa8 100644\n--- a/resources/js/mosaic.panel.js\n+++ b/resources/js/mosaic.panel.js\n@@ -71,7 +71,7 @@ class Panel {\n                 .wrap(\n                     $(\n                         \'<div class="mosaic-grid-row">\' +\n-                        \'<div class="mosaic-grid-cell mosaic-position-0 col-12">\' +\n+                        \'<div class="mosaic-grid-cell col-12">\' +\n                         \'<div class="movable removable mosaic-tile mosaic-text-tile">\' +\n                         \'<div class="mosaic-tile-content">\' +\n                         "</div>" +\ndiff --git a/resources/js/mosaic.tile.js b/resources/js/mosaic.tile.js\nindex 607ba787..89185cf2 100644\n--- a/resources/js/mosaic.tile.js\n+++ b/resources/js/mosaic.tile.js\n@@ -568,6 +568,7 @@ class Tile {\n         var modal = new Modal($(".mosaic-toolbar"), {\n             ajaxUrl: tile_url,\n             loadLinksWithinModal: true,\n+            modalSizeClass: "modal-lg",\n         });\n         modal.$el.off("after-render");\n         modal.on("after-render", function (event) {\ndiff --git a/resources/scss/mosaic.authoring.dividers.scss b/resources/scss/mosaic.authoring.dividers.scss\nindex 194cf3f9..856b3b3d 100644\n--- a/resources/scss/mosaic.authoring.dividers.scss\n+++ b/resources/scss/mosaic.authoring.dividers.scss\n@@ -1,13 +1,15 @@\n \n .mosaic-grid-row .mosaic-set-custom-css {\n-  text-align:right;\n+  font-size:$font-size-sm;\n   position:absolute;\n   bottom:0;\n+  text-align:right;\n   z-index:101;\n-  background-color:#fcfcfc;\n-\n+  background:#f9f9f9;\n   input {\n       min-width:30%;\n+      font-size:$font-size-sm;\n+      height:1.2rem;\n   }\n }\n \ndiff --git a/resources/scss/mosaic.authoring.dragging.scss b/resources/scss/mosaic.authoring.dragging.scss\nindex d6e577e3..6372e1c1 100644\n--- a/resources/scss/mosaic.authoring.dragging.scss\n+++ b/resources/scss/mosaic.authoring.dragging.scss\n@@ -208,20 +208,21 @@\n   }\n \n   /* Add row style labels */\n-  .mosaic-grid-row:not(.mosaic-empty-row):not(:last-child):before {\n+  .mosaic-grid-row:not(.mosaic-empty-row):not(:last-child):after {\n     position: absolute;\n     display: block;\n     content: attr(class);\n-    color: gray;\n+    color: #aaa;\n     font-weight: bold;\n     left: 0;\n     right: 0;\n     bottom: 0;\n     z-index: 100;\n     white-space: nowrap;\n-    background: #fcfcfc;\n+    background: #f9f9f9;\n     text-align: right;\n     padding: 0 5px;\n+    font-size:$font-size-sm;\n   }\n }\n /* @end */\ndiff --git a/resources/scss/mosaic.authoring.resizing.scss b/resources/scss/mosaic.authoring.resizing.scss\nindex ef84ebed..c969affa 100644\n--- a/resources/scss/mosaic.authoring.resizing.scss\n+++ b/resources/scss/mosaic.authoring.resizing.scss\n@@ -34,15 +34,16 @@\n     z-index: 500;\n     cursor: ew-resize;\n     display: none;\n+    border-width:4px;\n+    border-color:var(--bs-primary);\n }\n \n .mosaic-resize-handle:hover {\n-    background-image: url(../img/window.png);\n-    background-position: -45px 0px;\n+    border-left-style:dashed;\n }\n \n .mosaic-resize-handle.mosaic-resize-handle-helper {\n-    background: url(../img/window.png) 0px 0px;\n+    border-left-style:solid;\n }\n \n .mosaic-resize-placeholder {\n@@ -73,7 +74,7 @@\n }\n \n .mosaic-resize-0 {\n-    margin-left: 0%;\n+    flex: 1 0 0%;\n }\n \n .mosaic-resize-1 {\n'

