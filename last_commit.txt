Repository: plone.app.collection


Branch: refs/heads/master
Date: 2016-07-05T23:11:24+02:00
Author: Gil Forcada (gforcada) <gforcada@gnome.org>
Commit: https://github.com/plone/plone.app.collection/commit/05ba646b8934a45e75fb374fc7c7105e114deb9f

Use zope.interface decorator

This not only makes code more pleasent to read,
but also makes the code python 3 compatible
(while maintaining python 2 compatibility).

Files changed:
M CHANGES.rst
M plone/app/collection/collection.py
M plone/app/collection/field.py
M plone/app/collection/integration.py
M plone/app/collection/validators.py

diff --git a/CHANGES.rst b/CHANGES.rst
index b325983..2c01898 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Use zope.interface decorator.
+  [gforcada]
 
 
 1.2.0 (2016-05-18)
diff --git a/plone/app/collection/collection.py b/plone/app/collection/collection.py
index 5504a4e..15ad3c2 100644
--- a/plone/app/collection/collection.py
+++ b/plone/app/collection/collection.py
@@ -15,7 +15,7 @@
                                        StringWidget)
 from Products.CMFCore.permissions import ModifyPortalContent, View
 from Products.CMFCore.utils import getToolByName
-from zope.interface import implements
+from zope.interface import implementer
 
 from plone.app.collection import PloneMessageFactory as _
 from plone.app.collection.config import ATCT_TOOLNAME, PROJECTNAME
@@ -101,9 +101,9 @@
     moveDiscussion=False)
 
 
+@implementer(ICollection)
 class Collection(document.ATDocument, ObjectManager):
     """A (new style) Plone Collection"""
-    implements(ICollection)
 
     meta_type = "Collection"
     schema = CollectionSchema
diff --git a/plone/app/collection/field.py b/plone/app/collection/field.py
index 99e333a..8b64a9d 100644
--- a/plone/app/collection/field.py
+++ b/plone/app/collection/field.py
@@ -2,7 +2,7 @@
 from AccessControl import ClassSecurityInfo
 from Products.Archetypes.Field import ObjectField
 from Products.Archetypes.Field import registerField
-from zope.interface import implements
+from zope.interface import implementer
 from zope.interface import Interface
 from zope.site.hooks import getSite
 from plone.app.querystring.querybuilder import QueryBuilder
@@ -12,10 +12,9 @@ class IQueryField(Interface):
     """Query field interface """
 
 
+@implementer(IQueryField)
 class QueryField(ObjectField):
     """QueryField for storing query"""
-
-    implements(IQueryField)
     _properties = ObjectField._properties.copy()
 
     security = ClassSecurityInfo()
diff --git a/plone/app/collection/integration.py b/plone/app/collection/integration.py
index 838aa1d..15be840 100644
--- a/plone/app/collection/integration.py
+++ b/plone/app/collection/integration.py
@@ -2,11 +2,11 @@
     as IPloneFactoryNonInstallable
 from Products.CMFQuickInstallerTool.interfaces import INonInstallable \
     as IQuickInstallerNonInstallable
-from zope.interface import implements
+from zope.interface import implementer
 
 
+@implementer(IQuickInstallerNonInstallable, IPloneFactoryNonInstallable)
 class HiddenProfiles(object):
-    implements(IQuickInstallerNonInstallable, IPloneFactoryNonInstallable)
 
     def getNonInstallableProfiles(self):
         """
diff --git a/plone/app/collection/validators.py b/plone/app/collection/validators.py
index dfbb7dc..ddf7f85 100644
--- a/plone/app/collection/validators.py
+++ b/plone/app/collection/validators.py
@@ -1,7 +1,8 @@
 from Products.validation.interfaces.IValidator import IValidator
-from zope.interface import implements
+from zope.interface import implementer
 
 
+@implementer(IValidator)
 class NonJavascriptValidator:
     """
         This validator is added when accessing the new style collections
@@ -10,7 +11,6 @@ class NonJavascriptValidator:
         which keeps archetypes from creating a temp object in
         portal_factory keeps archetypes from losing the request/parser info
     """
-    implements(IValidator)
 
     name = 'nonjavascriptvalidator'
 


Repository: plone.app.collection


Branch: refs/heads/master
Date: 2016-07-09T01:04:37+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.collection/commit/072d33fe810d97c2b7c5ba900a5841cc2f876c14

Merge pull request #35 from plone/gforcada-use-zope-decorators

Use zope.interface decorator

Files changed:
M CHANGES.rst
M plone/app/collection/collection.py
M plone/app/collection/field.py
M plone/app/collection/integration.py
M plone/app/collection/validators.py

diff --git a/CHANGES.rst b/CHANGES.rst
index b325983..2c01898 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Use zope.interface decorator.
+  [gforcada]
 
 
 1.2.0 (2016-05-18)
diff --git a/plone/app/collection/collection.py b/plone/app/collection/collection.py
index 5504a4e..15ad3c2 100644
--- a/plone/app/collection/collection.py
+++ b/plone/app/collection/collection.py
@@ -15,7 +15,7 @@
                                        StringWidget)
 from Products.CMFCore.permissions import ModifyPortalContent, View
 from Products.CMFCore.utils import getToolByName
-from zope.interface import implements
+from zope.interface import implementer
 
 from plone.app.collection import PloneMessageFactory as _
 from plone.app.collection.config import ATCT_TOOLNAME, PROJECTNAME
@@ -101,9 +101,9 @@
     moveDiscussion=False)
 
 
+@implementer(ICollection)
 class Collection(document.ATDocument, ObjectManager):
     """A (new style) Plone Collection"""
-    implements(ICollection)
 
     meta_type = "Collection"
     schema = CollectionSchema
diff --git a/plone/app/collection/field.py b/plone/app/collection/field.py
index 99e333a..8b64a9d 100644
--- a/plone/app/collection/field.py
+++ b/plone/app/collection/field.py
@@ -2,7 +2,7 @@
 from AccessControl import ClassSecurityInfo
 from Products.Archetypes.Field import ObjectField
 from Products.Archetypes.Field import registerField
-from zope.interface import implements
+from zope.interface import implementer
 from zope.interface import Interface
 from zope.site.hooks import getSite
 from plone.app.querystring.querybuilder import QueryBuilder
@@ -12,10 +12,9 @@ class IQueryField(Interface):
     """Query field interface """
 
 
+@implementer(IQueryField)
 class QueryField(ObjectField):
     """QueryField for storing query"""
-
-    implements(IQueryField)
     _properties = ObjectField._properties.copy()
 
     security = ClassSecurityInfo()
diff --git a/plone/app/collection/integration.py b/plone/app/collection/integration.py
index 838aa1d..15be840 100644
--- a/plone/app/collection/integration.py
+++ b/plone/app/collection/integration.py
@@ -2,11 +2,11 @@
     as IPloneFactoryNonInstallable
 from Products.CMFQuickInstallerTool.interfaces import INonInstallable \
     as IQuickInstallerNonInstallable
-from zope.interface import implements
+from zope.interface import implementer
 
 
+@implementer(IQuickInstallerNonInstallable, IPloneFactoryNonInstallable)
 class HiddenProfiles(object):
-    implements(IQuickInstallerNonInstallable, IPloneFactoryNonInstallable)
 
     def getNonInstallableProfiles(self):
         """
diff --git a/plone/app/collection/validators.py b/plone/app/collection/validators.py
index dfbb7dc..ddf7f85 100644
--- a/plone/app/collection/validators.py
+++ b/plone/app/collection/validators.py
@@ -1,7 +1,8 @@
 from Products.validation.interfaces.IValidator import IValidator
-from zope.interface import implements
+from zope.interface import implementer
 
 
+@implementer(IValidator)
 class NonJavascriptValidator:
     """
         This validator is added when accessing the new style collections
@@ -10,7 +11,6 @@ class NonJavascriptValidator:
         which keeps archetypes from creating a temp object in
         portal_factory keeps archetypes from losing the request/parser info
     """
-    implements(IValidator)
 
     name = 'nonjavascriptvalidator'
 


