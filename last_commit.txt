Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2023-03-26T16:13:01+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.dexterity/commit/3027c717dc092f13824106b86f60a058dfd1db6f

Configuring with plone/meta

Files changed:
A .editorconfig
A .meta.toml
A .pre-commit-config.yaml
A news/47959565.internal
A tox.ini
M pyproject.toml
M setup.cfg
D bootstrap.py

b'diff --git a/.editorconfig b/.editorconfig\nnew file mode 100644\nindex 00000000..b4158b89\n--- /dev/null\n+++ b/.editorconfig\n@@ -0,0 +1,39 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+#\n+# EditorConfig Configuration file, for more details see:\n+# http://EditorConfig.org\n+# EditorConfig is a convention description, that could be interpreted\n+# by multiple editors to enforce common coding conventions for specific\n+# file types\n+\n+# top-most EditorConfig file:\n+# Will ignore other EditorConfig files in Home directory or upper tree level.\n+root = true\n+\n+\n+[*]  # For All Files\n+# Unix-style newlines with a newline ending every file\n+end_of_line = lf\n+insert_final_newline = true\n+trim_trailing_whitespace = true\n+# Set default charset\n+charset = utf-8\n+# Indent style default\n+indent_style = space\n+# Max Line Length - a hard line wrap, should be disabled\n+max_line_length = off\n+\n+[*.{py,cfg,ini}]\n+# 4 space indentation\n+indent_size = 4\n+\n+[*.{yml,zpt,pt,dtml,zcml}]\n+# 2 space indentation\n+indent_size = 2\n+\n+[{Makefile,.gitmodules}]\n+# Tab indentation (no size specified, but view as 4 spaces)\n+indent_style = tab\n+indent_size = unset\n+tab_width = unset\ndiff --git a/.meta.toml b/.meta.toml\nnew file mode 100644\nindex 00000000..07dde259\n--- /dev/null\n+++ b/.meta.toml\n@@ -0,0 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[meta]\n+template = "default"\n+commit-id = "47959565"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nnew file mode 100644\nindex 00000000..582f8acd\n--- /dev/null\n+++ b/.pre-commit-config.yaml\n@@ -0,0 +1,42 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+ci:\n+    autofix_prs: false\n+    autoupdate_schedule: monthly\n+\n+repos:\n+-   repo: https://github.com/asottile/pyupgrade\n+    rev: v3.3.1\n+    hooks:\n+    -   id: pyupgrade\n+        args: [--py38-plus]\n+-   repo: https://github.com/pycqa/isort\n+    rev: 5.12.0\n+    hooks:\n+    -   id: isort\n+-   repo: https://github.com/psf/black\n+    rev: 23.1.0\n+    hooks:\n+    -   id: black\n+-   repo: https://github.com/collective/zpretty\n+    rev: 3.0.2\n+    hooks:\n+    -   id: zpretty\n+-   repo: https://github.com/PyCQA/flake8\n+    rev: 6.0.0\n+    hooks:\n+    -   id: flake8\n+-   repo: https://github.com/codespell-project/codespell\n+    rev: v2.2.2\n+    hooks:\n+    -   id: codespell\n+        additional_dependencies:\n+          - tomli\n+-   repo: https://github.com/mgedmin/check-manifest\n+    rev: "0.49"\n+    hooks:\n+    -   id: check-manifest\n+-   repo: https://github.com/regebro/pyroma\n+    rev: "4.2"\n+    hooks:\n+    -   id: pyroma\ndiff --git a/bootstrap.py b/bootstrap.py\ndeleted file mode 100644\nindex dbd50b3e..00000000\n--- a/bootstrap.py\n+++ /dev/null\n@@ -1,211 +0,0 @@\n-##############################################################################\n-#\n-# Copyright (c) 2006 Zope Foundation and Contributors.\n-# All Rights Reserved.\n-#\n-# This software is subject to the provisions of the Zope Public License,\n-# Version 2.1 (ZPL).  A copy of the ZPL should accompany this distribution.\n-# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY AND ALL EXPRESS OR IMPLIED\n-# WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n-# WARRANTIES OF TITLE, MERCHANTABILITY, AGAINST INFRINGEMENT, AND FITNESS\n-# FOR A PARTICULAR PURPOSE.\n-#\n-##############################################################################\n-"""Bootstrap a buildout-based project\n-\n-Simply run this script in a directory containing a buildout.cfg.\n-The script accepts buildout command-line options, so you can\n-use the -c option to specify an alternate configuration file.\n-"""\n-\n-from optparse import OptionParser\n-\n-import os\n-import shutil\n-import sys\n-import tempfile\n-\n-\n-tmpeggs = tempfile.mkdtemp()\n-\n-usage = """\\\n-[DESIRED PYTHON FOR BUILDOUT] bootstrap.py [options]\n-\n-Bootstraps a buildout-based project.\n-\n-Simply run this script in a directory containing a buildout.cfg, using the\n-Python that you want bin/buildout to use.\n-\n-Note that by using --find-links to point to local resources, you can keep\n-this script from going over the network.\n-"""\n-\n-parser = OptionParser(usage=usage)\n-parser.add_option("-v", "--version", help="use a specific zc.buildout version")\n-\n-parser.add_option(\n-    "-t",\n-    "--accept-buildout-test-releases",\n-    dest="accept_buildout_test_releases",\n-    action="store_true",\n-    default=False,\n-    help=(\n-        "Normally, if you do not specify a --version, the "\n-        "bootstrap script and buildout gets the newest "\n-        "*final* versions of zc.buildout and its recipes and "\n-        "extensions for you.  If you use this flag, "\n-        "bootstrap and buildout will get the newest releases "\n-        "even if they are alphas or betas."\n-    ),\n-)\n-parser.add_option(\n-    "-c",\n-    "--config-file",\n-    help=("Specify the path to the buildout configuration " "file to be used."),\n-)\n-parser.add_option(\n-    "-f", "--find-links", help=("Specify a URL to search for buildout releases")\n-)\n-parser.add_option(\n-    "--allow-site-packages",\n-    action="store_true",\n-    default=False,\n-    help=("Let bootstrap.py use existing site packages"),\n-)\n-parser.add_option("--setuptools-version", help="use a specific setuptools version")\n-\n-\n-options, args = parser.parse_args()\n-\n-######################################################################\n-# load/install setuptools\n-\n-try:\n-    if options.allow_site_packages:\n-        import setuptools\n-        import pkg_resources\n-    from urllib.request import urlopen\n-except ImportError:\n-    from urllib2 import urlopen\n-\n-ez = {}\n-exec(urlopen("https://bootstrap.pypa.io/ez_setup.py").read(), ez)\n-\n-if not options.allow_site_packages:\n-    # ez_setup imports site, which adds site packages\n-    # this will remove them from the path to ensure that incompatible versions\n-    # of setuptools are not in the path\n-    import site\n-\n-    # inside a virtualenv, there is no \'getsitepackages\'.\n-    # We can\'t remove these reliably\n-    if hasattr(site, "getsitepackages"):\n-        for sitepackage_path in site.getsitepackages():\n-            sys.path[:] = [x for x in sys.path if sitepackage_path not in x]\n-\n-setup_args = dict(to_dir=tmpeggs, download_delay=0)\n-\n-if options.setuptools_version is not None:\n-    setup_args["version"] = options.setuptools_version\n-\n-ez["use_setuptools"](**setup_args)\n-import pkg_resources\n-import setuptools\n-\n-\n-# This does not (always?) update the default working set.  We will\n-# do it.\n-for path in sys.path:\n-    if path not in pkg_resources.working_set.entries:\n-        pkg_resources.working_set.add_entry(path)\n-\n-######################################################################\n-# Install buildout\n-\n-ws = pkg_resources.working_set\n-\n-cmd = [\n-    sys.executable,\n-    "-c",\n-    "from setuptools.command.easy_install import main; main()",\n-    "-mZqNxd",\n-    tmpeggs,\n-]\n-\n-find_links = os.environ.get(\n-    "bootstrap-testing-find-links",\n-    options.find_links\n-    or (\n-        "http://downloads.buildout.org/"\n-        if options.accept_buildout_test_releases\n-        else None\n-    ),\n-)\n-if find_links:\n-    cmd.extend(["-f", find_links])\n-\n-setuptools_path = ws.find(pkg_resources.Requirement.parse("setuptools")).location\n-\n-requirement = "zc.buildout"\n-version = options.version\n-if version is None and not options.accept_buildout_test_releases:\n-    # Figure out the most recent final version of zc.buildout.\n-    import setuptools.package_index\n-\n-    _final_parts = "*final-", "*final"\n-\n-    def _final_version(parsed_version):\n-        try:\n-            return not parsed_version.is_prerelease\n-        except AttributeError:\n-            # Older setuptools\n-            for part in parsed_version:\n-                if (part[:1] == "*") and (part not in _final_parts):\n-                    return False\n-            return True\n-\n-    index = setuptools.package_index.PackageIndex(search_path=[setuptools_path])\n-    if find_links:\n-        index.add_find_links((find_links,))\n-    req = pkg_resources.Requirement.parse(requirement)\n-    if index.obtain(req) is not None:\n-        best = []\n-        bestv = None\n-        for dist in index[req.project_name]:\n-            distv = dist.parsed_version\n-            if _final_version(distv):\n-                if bestv is None or distv > bestv:\n-                    best = [dist]\n-                    bestv = distv\n-                elif distv == bestv:\n-                    best.append(dist)\n-        if best:\n-            best.sort()\n-            version = best[-1].version\n-if version:\n-    requirement = "==".join((requirement, version))\n-cmd.append(requirement)\n-\n-import subprocess\n-\n-\n-if subprocess.call(cmd, env=dict(os.environ, PYTHONPATH=setuptools_path)) != 0:\n-    raise Exception("Failed to execute command:\\n%s" % repr(cmd)[1:-1])\n-\n-######################################################################\n-# Import and run buildout\n-\n-ws.add_entry(tmpeggs)\n-ws.require(requirement)\n-import zc.buildout.buildout\n-\n-\n-if not [a for a in args if "=" not in a]:\n-    args.append("bootstrap")\n-\n-# if -c was provided, we push it back into args for buildout\' main function\n-if options.config_file is not None:\n-    args[0:0] = ["-c", options.config_file]\n-\n-zc.buildout.buildout.main(args)\n-shutil.rmtree(tmpeggs)\ndiff --git a/news/47959565.internal b/news/47959565.internal\nnew file mode 100644\nindex 00000000..c08f5399\n--- /dev/null\n+++ b/news/47959565.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 05b615de..9eb73f3c 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,3 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [tool.towncrier]\n filename = "CHANGES.rst"\n directory = "news/"\n@@ -18,3 +20,43 @@ showcontent = true\n directory = "bugfix"\n name = "Bug fixes:"\n showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "internal"\n+name = "Internal:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "documentation"\n+name = "Documentation:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "tests"\n+name = "Tests"\n+showcontent = true\n+\n+[tool.isort]\n+profile = "plone"\n+\n+[tool.black]\n+target-version = ["py38"]\n+\n+[tool.dependencychecker]\n+Zope = [\n+  # Zope own provided namespaces\n+  \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n+  \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n+  \'Zope2\', \'webdav\', \'zmi\',\n+  # Zope dependencies\n+  \'Acquisition\', \'DateTime\', \'transaction\', \'zExceptions\', \'ZODB\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.deferredimport\', \'zope.event\',\n+  \'zope.exceptions\', \'zope.globalrequest\', \'zope.i18n\', \'zope.i18nmessageid\',\n+  \'zope.interface\', \'zope.lifecycleevent\', \'zope.location\', \'zope.publisher\',\n+  \'zope.schema\', \'zope.security\', \'zope.site\', \'zope.traversing\', \'AccessControl\',\n+]\n+\'plone.base\' = [\n+  \'AccessControl\', \'Products.BTreeFolder2\', \'Products.CMFCore\',\n+  \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n+]\n+python-dateutil = [\'dateutil\']\ndiff --git a/setup.cfg b/setup.cfg\nindex 277886fb..0da8f8fb 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -1,16 +1,23 @@\n-[check-manifest]\n-ignore =\n-    .tx\n-    .tx/config\n-    bootstrap.py\n-    buildout.cfg\n-\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [bdist_wheel]\n universal = 0\n \n-[isort]\n-# black compatible Plone isort rules:\n-profile = black\n-force_alphabetical_sort = True\n-force_single_line = True\n-lines_after_imports = 2\n+[flake8]\n+doctests = 1\n+ignore =\n+    # black takes care of line length\n+    E501,\n+    # black takes care of where to break lines\n+    W503,\n+    # black takes care of spaces within slicing (list[:])\n+    E203,\n+    # black takes care of spaces after commas\n+    E231,\n+\n+[check-manifest]\n+ignore =\n+    .editorconfig\n+    .meta.toml\n+    .pre-commit-config.yaml\n+    tox.ini\ndiff --git a/tox.ini b/tox.ini\nnew file mode 100644\nindex 00000000..79a0772e\n--- /dev/null\n+++ b/tox.ini\n@@ -0,0 +1,53 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[tox]\n+# We need 4.4.0 for constrain_package_deps.\n+min_version = 4.4.0\n+envlist =\n+    format\n+    lint\n+    test\n+\n+[testenv]\n+allowlist_externals =\n+    sh\n+\n+[testenv:format]\n+description = automatically reformat code\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a pyupgrade\n+    pre-commit run -a isort\n+    pre-commit run -a black\n+    pre-commit run -a zpretty\n+\n+[testenv:lint]\n+description = run linters that will help improve the code style\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a\n+\n+[testenv:dependencies]\n+description = check if the package defines all its dependencies and generate a graph out of them\n+deps =\n+    z3c.dependencychecker==2.11\n+    pipdeptree==2.5.1\n+    graphviz  # optional dependency of pipdeptree\n+commands =\n+    dependencychecker\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+\n+[testenv:test]\n+usedevelop = true\n+constrain_package_deps = true\n+deps =\n+    zope.testrunner\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    zope-testrunner --test-path={toxinidir} -s plone.app.dexterity\n+extras =\n+    test\n'

Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2023-03-26T17:34:28+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.dexterity/commit/053d4ea196826b29e918bbb37186f9e5c4b130df

chore: remove old buildout file

Files changed:
D buildout.cfg

b'diff --git a/buildout.cfg b/buildout.cfg\ndeleted file mode 100644\nindex 7f41d56..0000000\n--- a/buildout.cfg\n+++ /dev/null\n@@ -1,12 +0,0 @@\n-[buildout]\n-extends = https://raw.githubusercontent.com/collective/buildout.plonetest/master/test-5.x.cfg\n-package-name = plone.app.dexterity\n-package-extras = [test]\n-parts += omelette\n-\n-[versions]\n-plone.app.dexterity =\n-\n-[omelette]\n-recipe = collective.recipe.omelette\n-eggs = ${test:eggs}\n'

Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2023-03-26T17:34:28+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.dexterity/commit/54fb93c5b65c3416348e50a2ea2ff4c1a275d3d9

chore: remove transifex configuration

Files changed:
D .tx/config

b'diff --git a/.tx/config b/.tx/config\ndeleted file mode 100644\nindex e87b8d04..00000000\n--- a/.tx/config\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-[main]\n-host = https://www.transifex.com\n-type = PO\n-\n-[plone.ploneappdexterity]\n-file_filter = plone/app/dexterity/locales/<lang>/LC_MESSAGES/plone.app.dexterity.po\n-source_file = plone/app/dexterity/locales/plone.app.dexterity.pot\n-source_lang = en\n-type = PO\n-\n'

Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2023-03-26T17:34:28+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.dexterity/commit/be9fd2a0ec13cb741f7ce635a3566ff48a04646a

chore: pyupgrade

Files changed:
M plone/app/dexterity/textindexer/tests/test_supermodel_handler.py

b'diff --git a/plone/app/dexterity/textindexer/tests/test_supermodel_handler.py b/plone/app/dexterity/textindexer/tests/test_supermodel_handler.py\nindex be09d3c..4b8236b 100644\n--- a/plone/app/dexterity/textindexer/tests/test_supermodel_handler.py\n+++ b/plone/app/dexterity/textindexer/tests/test_supermodel_handler.py\n@@ -106,5 +106,5 @@ class IDummy(Interface):\n \n def test_suite():\n     suite = unittest.TestSuite()\n-    suite.addTest(unittest.makeSuite(TestIndexerSchema))\n+    suite.addTest(unittest.defaultTestLoader.loadTestsFromTestCase(TestIndexerSchema))\n     return suite\n'

Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2023-03-26T17:34:28+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.dexterity/commit/361e8c9ce3062bc6ec0b030f31f456f4a3d460d3

chore: black

Files changed:
M plone/app/dexterity/behaviors/discussion.py
M plone/app/dexterity/behaviors/id.py
M plone/app/dexterity/behaviors/metadata.py
M plone/app/dexterity/behaviors/tests/test_id.py
M plone/app/dexterity/browser/add_type.py
M plone/app/dexterity/browser/behaviors.py
M plone/app/dexterity/browser/clone_type.py
M plone/app/dexterity/browser/export.py
M plone/app/dexterity/browser/import_types.py
M plone/app/dexterity/browser/layout.py
M plone/app/dexterity/browser/types.py
M plone/app/dexterity/interfaces.py
M plone/app/dexterity/tests/test_constrains.py
M plone/app/dexterity/tests/test_permissions.py
M plone/app/dexterity/tests/test_upgrades.py
M plone/app/dexterity/textindexer/indexer.py
M plone/app/dexterity/textindexer/schemaeditor.py
M plone/app/dexterity/textindexer/testing.py
M plone/app/dexterity/textindexer/tests/test_behaviors.py
M plone/app/dexterity/textindexer/tests/test_schemaeditor.py
M plone/app/dexterity/textindexer/tests/test_utils.py
M plone/app/dexterity/upgrades/to2004.py

b'diff --git a/plone/app/dexterity/behaviors/discussion.py b/plone/app/dexterity/behaviors/discussion.py\nindex 041bd97..bdc2d8d 100644\n--- a/plone/app/dexterity/behaviors/discussion.py\n+++ b/plone/app/dexterity/behaviors/discussion.py\n@@ -20,7 +20,6 @@\n \n @provider(IFormFieldProvider)\n class IAllowDiscussion(model.Schema):\n-\n     model.fieldset(\n         "settings",\n         label=_("Settings"),\ndiff --git a/plone/app/dexterity/behaviors/id.py b/plone/app/dexterity/behaviors/id.py\nindex 22ded84..0e64f3b 100644\n--- a/plone/app/dexterity/behaviors/id.py\n+++ b/plone/app/dexterity/behaviors/id.py\n@@ -15,7 +15,6 @@\n \n @provider(IFormFieldProvider)\n class IShortName(model.Schema):\n-\n     model.fieldset(\n         "settings",\n         label=_("Settings"),\ndiff --git a/plone/app/dexterity/behaviors/metadata.py b/plone/app/dexterity/behaviors/metadata.py\nindex 6c75867..bdb3389 100644\n--- a/plone/app/dexterity/behaviors/metadata.py\n+++ b/plone/app/dexterity/behaviors/metadata.py\n@@ -39,8 +39,10 @@ def default_language(context):\n     language = None\n \n     # Try to get the language from context or parent(s)\n-    while not language and context is not None and not IPloneSiteRoot.providedBy(context):\n-        language = getattr(context.aq_base, \'language\', None)\n+    while (\n+        not language and context is not None and not IPloneSiteRoot.providedBy(context)\n+    ):\n+        language = getattr(context.aq_base, "language", None)\n \n         if not language:\n             # If we are here, it means we were editing an object that didn\'t\n@@ -49,7 +51,7 @@ def default_language(context):\n             # parent.\n             context = context.__parent__\n \n-    language_tool = getToolByName(getSite(), \'portal_languages\')\n+    language_tool = getToolByName(getSite(), "portal_languages")\n     default_language = language_tool.getDefaultLanguage()\n \n     if not language:\n@@ -64,7 +66,6 @@ def default_language(context):\n \n @provider(IFormFieldProvider)\n class IBasic(model.Schema):\n-\n     # default fieldset\n     title = schema.TextLine(title=_("label_title", default="Title"), required=True)\n \n@@ -87,7 +88,6 @@ class IBasic(model.Schema):\n \n @provider(IFormFieldProvider)\n class ICategorization(model.Schema):\n-\n     # categorization fieldset\n     model.fieldset(\n         "categorization",\n@@ -177,7 +177,6 @@ def validate_start_end(data):\n \n @provider(IFormFieldProvider)\n class IOwnership(model.Schema):\n-\n     # ownership fieldset\n     model.fieldset(\n         "ownership",\ndiff --git a/plone/app/dexterity/behaviors/tests/test_id.py b/plone/app/dexterity/behaviors/tests/test_id.py\nindex b003337..ed7d0e3 100644\n--- a/plone/app/dexterity/behaviors/tests/test_id.py\n+++ b/plone/app/dexterity/behaviors/tests/test_id.py\n@@ -9,7 +9,6 @@\n \n \n class TestShortNameBehavior(unittest.TestCase):\n-\n     layer = DEXTERITY_FUNCTIONAL_TESTING\n \n     def setUp(self):\ndiff --git a/plone/app/dexterity/browser/add_type.py b/plone/app/dexterity/browser/add_type.py\nindex c46ab33..37e905c 100644\n--- a/plone/app/dexterity/browser/add_type.py\n+++ b/plone/app/dexterity/browser/add_type.py\n@@ -9,7 +9,6 @@\n \n \n class TypeAddForm(form.AddForm):\n-\n     label = _("Add Content Type")\n     fields = field.Fields(ITypeSettings).select("title", "id", "description")\n     id = "add-type-form"\ndiff --git a/plone/app/dexterity/browser/behaviors.py b/plone/app/dexterity/browser/behaviors.py\nindex 07cda51..65bc3ab 100644\n--- a/plone/app/dexterity/browser/behaviors.py\n+++ b/plone/app/dexterity/browser/behaviors.py\n@@ -81,7 +81,6 @@ def __iter__(self):\n \n \n class TypeBehaviorsForm(form.EditForm):\n-\n     template = ViewPageTemplateFile("behaviors.pt")\n     label = _("Behaviors")\n     description = _("Select the behaviors to enable for this content type.")\ndiff --git a/plone/app/dexterity/browser/clone_type.py b/plone/app/dexterity/browser/clone_type.py\nindex e3e0bd4..b2710b4 100644\n--- a/plone/app/dexterity/browser/clone_type.py\n+++ b/plone/app/dexterity/browser/clone_type.py\n@@ -8,7 +8,6 @@\n \n \n class TypeCloneForm(form.AddForm):\n-\n     label = _("Clone Content Type")\n     fields = field.Fields(ITypeSettings).select("title", "id")\n     id = "clone-type-form"\ndiff --git a/plone/app/dexterity/browser/export.py b/plone/app/dexterity/browser/export.py\nindex 6432de6..285a846 100644\n--- a/plone/app/dexterity/browser/export.py\n+++ b/plone/app/dexterity/browser/export.py\n@@ -17,7 +17,6 @@\n \n class SelectiveZipExportContext(TarballExportContext):\n     def __init__(self, tool, typelist, encoding=None, base_name="setup_tool"):\n-\n         BaseContext.__init__(self, tool, encoding)\n \n         self.typelist = typelist\ndiff --git a/plone/app/dexterity/browser/import_types.py b/plone/app/dexterity/browser/import_types.py\nindex dc13029..b7924a3 100644\n--- a/plone/app/dexterity/browser/import_types.py\n+++ b/plone/app/dexterity/browser/import_types.py\n@@ -99,7 +99,6 @@ def __init__(self, profile_file):\n \n \n class TypeProfileImportForm(form.AddForm):\n-\n     label = _("Import Content Types")\n     description = _(\n         "You may import types by uploading a zip archive containing type "\n@@ -145,7 +144,6 @@ def __init__(self, tool, archive_bits, encoding=None, should_purge=False):\n         self.name_list = self._archive.namelist()\n \n     def readDataFile(self, filename, subdir=None):\n-\n         if subdir is not None:\n             filename = "/".join((subdir, filename))\n \ndiff --git a/plone/app/dexterity/browser/layout.py b/plone/app/dexterity/browser/layout.py\nindex 4854d9f..4f776a8 100644\n--- a/plone/app/dexterity/browser/layout.py\n+++ b/plone/app/dexterity/browser/layout.py\n@@ -4,7 +4,6 @@\n \n \n class TypeFormLayout(FormWrapper):\n-\n     index = ViewPageTemplateFile("tabbed_forms.pt")\n \n     @property\ndiff --git a/plone/app/dexterity/browser/types.py b/plone/app/dexterity/browser/types.py\nindex 1bf8f5c..13f44a5 100644\n--- a/plone/app/dexterity/browser/types.py\n+++ b/plone/app/dexterity/browser/types.py\n@@ -239,7 +239,6 @@ def link(self, item, field):\n \n @implementer(ITypeSchemaContext)\n class TypeSchemaContext(SchemaContext):\n-\n     fti = None\n     schemaName = ""\n     schemaEditorView = "fields"\ndiff --git a/plone/app/dexterity/interfaces.py b/plone/app/dexterity/interfaces.py\nindex 180e8c9..3f7b9c8 100644\n--- a/plone/app/dexterity/interfaces.py\n+++ b/plone/app/dexterity/interfaces.py\n@@ -85,7 +85,6 @@ class ITypeSettings(Interface):\n \n \n class ITypeStats(Interface):\n-\n     item_count = schema.Int(\n         title=_("# of items"),\n     )\ndiff --git a/plone/app/dexterity/tests/test_constrains.py b/plone/app/dexterity/tests/test_constrains.py\nindex 0e4dfa9..bb50b41 100644\n--- a/plone/app/dexterity/tests/test_constrains.py\n+++ b/plone/app/dexterity/tests/test_constrains.py\n@@ -38,7 +38,6 @@ def add_item_type(portal):\n \n \n class DocumentIntegrationTest(unittest.TestCase):\n-\n     layer = DEXTERITY_INTEGRATION_TESTING\n \n     def setUp(self):\n@@ -342,7 +341,6 @@ class Data:\n \n \n class FolderConstrainViewFunctionalText(unittest.TestCase):\n-\n     layer = DEXTERITY_FUNCTIONAL_TESTING\n \n     def setUp(self):\n@@ -422,7 +420,6 @@ def ctrl(name):\n \n \n class ConstrainControlFunctionalText(unittest.TestCase):\n-\n     layer = DEXTERITY_FUNCTIONAL_TESTING\n \n     def setUp(self):\ndiff --git a/plone/app/dexterity/tests/test_permissions.py b/plone/app/dexterity/tests/test_permissions.py\nindex aa62445..273796c 100644\n--- a/plone/app/dexterity/tests/test_permissions.py\n+++ b/plone/app/dexterity/tests/test_permissions.py\n@@ -86,7 +86,6 @@ def _disable_custom_widget(field):\n \n \n class DexterityVocabularyPermissionTests(unittest.TestCase):\n-\n     layer = PAZ3CForm_INTEGRATION_TESTING\n \n     def setUp(self):\ndiff --git a/plone/app/dexterity/tests/test_upgrades.py b/plone/app/dexterity/tests/test_upgrades.py\nindex 15c1b7a..eb9abdd 100644\n--- a/plone/app/dexterity/tests/test_upgrades.py\n+++ b/plone/app/dexterity/tests/test_upgrades.py\n@@ -4,7 +4,6 @@\n \n \n class TestUpgrades(unittest.TestCase):\n-\n     layer = DEXTERITY_INTEGRATION_TESTING\n \n     def test_add_missing_uuids(self):\ndiff --git a/plone/app/dexterity/textindexer/indexer.py b/plone/app/dexterity/textindexer/indexer.py\nindex b77da9c..6c664f3 100644\n--- a/plone/app/dexterity/textindexer/indexer.py\n+++ b/plone/app/dexterity/textindexer/indexer.py\n@@ -55,7 +55,6 @@ def dynamic_searchable_text_indexer(obj):\n \n     for _storage, fields in get_searchable_contexts_and_fields(obj):\n         for field in fields:\n-\n             # we need the form-field, not the schema-field we\n             # already have..\n             form_field = Field(field, interface=field.interface, prefix="")\ndiff --git a/plone/app/dexterity/textindexer/schemaeditor.py b/plone/app/dexterity/textindexer/schemaeditor.py\nindex a9e7d44..19ae4b4 100644\n--- a/plone/app/dexterity/textindexer/schemaeditor.py\n+++ b/plone/app/dexterity/textindexer/schemaeditor.py\n@@ -21,7 +21,6 @@ class ISearchableTextField(Interface):\n @adapter(IField)\n @implementer(ISearchableTextField)\n class SearchableTextField:\n-\n     namespace = INDEXER_NAMESPACE\n     prefix = INDEXER_PREFIX\n \ndiff --git a/plone/app/dexterity/textindexer/testing.py b/plone/app/dexterity/textindexer/testing.py\nindex f1cb92e..8caf83e 100644\n--- a/plone/app/dexterity/textindexer/testing.py\n+++ b/plone/app/dexterity/textindexer/testing.py\n@@ -17,7 +17,6 @@\n \n \n class TextIndexerLayer(PloneSandboxLayer):\n-\n     defaultBases = (PLONE_FIXTURE,)\n \n     def __init__(self, *args, **kwargs):\n@@ -65,7 +64,6 @@ def read_log(self):\n \n \n class TextIndexerFunctionalLayer(PloneSandboxLayer):\n-\n     defaultBases = (TEXT_INDEXER_FIXTURE,)\n \n     def setUpZope(self, app, configurationContext):\ndiff --git a/plone/app/dexterity/textindexer/tests/test_behaviors.py b/plone/app/dexterity/textindexer/tests/test_behaviors.py\nindex 6e8e22c..9306525 100644\n--- a/plone/app/dexterity/textindexer/tests/test_behaviors.py\n+++ b/plone/app/dexterity/textindexer/tests/test_behaviors.py\n@@ -26,6 +26,5 @@ def test_suite():\n \n \n class ITestingSchema(model.Schema):\n-\n     searchable("testing_field")\n     testing_field = schema.TextLine(title="Testing field")\ndiff --git a/plone/app/dexterity/textindexer/tests/test_schemaeditor.py b/plone/app/dexterity/textindexer/tests/test_schemaeditor.py\nindex 88317ac..b0e1651 100644\n--- a/plone/app/dexterity/textindexer/tests/test_schemaeditor.py\n+++ b/plone/app/dexterity/textindexer/tests/test_schemaeditor.py\n@@ -12,7 +12,6 @@\n \n \n class TestSchemaEditor(unittest.TestCase):\n-\n     layer = TEXT_INDEXER_FUNCTIONAL_TESTING\n \n     def setUp(self):\ndiff --git a/plone/app/dexterity/textindexer/tests/test_utils.py b/plone/app/dexterity/textindexer/tests/test_utils.py\nindex 1afc936..ca20de7 100644\n--- a/plone/app/dexterity/textindexer/tests/test_utils.py\n+++ b/plone/app/dexterity/textindexer/tests/test_utils.py\n@@ -7,7 +7,6 @@\n \n \n class IExample(model.Schema):\n-\n     foo = schema.TextLine(title="foo")\n \n \ndiff --git a/plone/app/dexterity/upgrades/to2004.py b/plone/app/dexterity/upgrades/to2004.py\nindex b76c72f..9116641 100644\n--- a/plone/app/dexterity/upgrades/to2004.py\n+++ b/plone/app/dexterity/upgrades/to2004.py\n@@ -12,7 +12,7 @@ def remove_cr_and_lf_description(context):\n \n     context = context.aq_parent\n     sm = context.getSiteManager()\n-    for (name, fti) in sm.getUtilitiesFor(IDexterityFTI):\n+    for name, fti in sm.getUtilitiesFor(IDexterityFTI):\n         for behavior in behaviors:\n             if behavior in fti.behaviors:\n                 types.append(name)\n'

Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2023-03-26T17:34:28+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.dexterity/commit/5bebee602dc30017978fe0a2631f03b6ac765fa0

chore: zpretty ZCML/XML

Files changed:
M plone/app/dexterity/behaviors/configure.zcml
M plone/app/dexterity/browser/configure.zcml
M plone/app/dexterity/configure.zcml
M plone/app/dexterity/events.zcml
M plone/app/dexterity/meta.zcml
M plone/app/dexterity/overrides.zcml
M plone/app/dexterity/profiles/default/controlpanel.xml
M plone/app/dexterity/profiles/default/metadata.xml
M plone/app/dexterity/profiles/testing/metadata.xml
M plone/app/dexterity/profiles/testing/types.xml
M plone/app/dexterity/profiles/testing/types/Document.xml
M plone/app/dexterity/profiles/testing/types/Folder.xml
M plone/app/dexterity/textindexer/configure.zcml
M plone/app/dexterity/textindexer/tests/configure.zcml
M plone/app/dexterity/upgrades/configure.zcml

b'diff --git a/plone/app/dexterity/behaviors/configure.zcml b/plone/app/dexterity/behaviors/configure.zcml\nindex 85255a09..d2eae5ae 100644\n--- a/plone/app/dexterity/behaviors/configure.zcml\n+++ b/plone/app/dexterity/behaviors/configure.zcml\n@@ -2,56 +2,60 @@\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:plone="http://namespaces.plone.org/plone"\n     xmlns:zcml="http://namespaces.zope.org/zcml"\n-    i18n_domain="plone">\n+    i18n_domain="plone"\n+    >\n \n-  <include package="plone.behavior" file="meta.zcml"/>\n+  <include\n+      package="plone.behavior"\n+      file="meta.zcml"\n+      />\n \n   <!-- vocabularies -->\n-  <include package="plone.app.vocabularies"/>\n+  <include package="plone.app.vocabularies" />\n \n   <!-- Metadata -->\n   <plone:behavior\n       name="plone.basic"\n       title="Basic metadata"\n       description="Adds title and description fields."\n-      provides=".metadata.IBasic"\n       factory=".metadata.Basic"\n+      provides=".metadata.IBasic"\n       for="plone.dexterity.interfaces.IDexterityContent"\n       />\n   <plone:behavior\n-      title="Categorization"\n       name="plone.categorization"\n+      title="Categorization"\n       description="Adds keywords and language fields."\n-      provides=".metadata.ICategorization"\n       factory=".metadata.Categorization"\n+      provides=".metadata.ICategorization"\n       for="plone.dexterity.interfaces.IDexterityContent"\n       />\n   <plone:behavior\n       name="plone.publication"\n       title="Date range"\n       description="Adds effective date and expiration date fields."\n-      provides=".metadata.IPublication"\n       factory=".metadata.Publication"\n+      provides=".metadata.IPublication"\n       for="plone.dexterity.interfaces.IDexterityContent"\n       />\n   <plone:behavior\n       name="plone.ownership"\n       title="Ownership"\n       description="Adds creator, contributor, and rights fields."\n-      provides=".metadata.IOwnership"\n       factory=".metadata.Ownership"\n+      provides=".metadata.IOwnership"\n       for="plone.dexterity.interfaces.IDexterityContent"\n       />\n   <adapter\n-      name="default"\n       factory=".metadata.CreatorsDefaultValue"\n+      name="default"\n       />\n   <plone:behavior\n       name="plone.dublincore"\n       title="Dublin Core metadata"\n       description="Adds standard metadata fields (equals Basic metadata + Categorization + Effective range + Ownership)"\n-      provides=".metadata.IDublinCore"\n       factory=".metadata.DublinCore"\n+      provides=".metadata.IDublinCore"\n       for="plone.dexterity.interfaces.IDexterityContent"\n       />\n \n@@ -89,8 +93,8 @@\n       provides=".exclfromnav.IExcludeFromNavigation"\n       />\n   <adapter\n-      for="*"\n       factory=".exclfromnav.default_exclude_false"\n+      for="*"\n       />\n \n   <!-- Next previous -->\n@@ -113,7 +117,8 @@\n \n   <adapter\n       factory=".nextprevious.DefaultNextPreviousEnabled"\n-      name="default" />\n+      name="default"\n+      />\n \n   <plone:behavior\n       name="plone.nextpreviousenabled"\n@@ -129,8 +134,8 @@\n       name="plone.constraintypes"\n       title="Folder Addable Constrains"\n       description="Restrict the content types that can be added to folderish content"\n-      provides="plone.base.interfaces.constrains.ISelectableConstrainTypes"\n       factory=".constrains.ConstrainTypesBehavior"\n+      provides="plone.base.interfaces.constrains.ISelectableConstrainTypes"\n       for="plone.dexterity.interfaces.IDexterityContainer"\n       />\n \n@@ -147,9 +152,11 @@\n   <!-- BBB -->\n   <configure zcml:condition="installed plone.app.relationfield">\n     <include package="plone.app.relationfield" />\n-    <utility factory=".related.related_items_behavior_BBB"\n-             provides="plone.behavior.interfaces.IBehavior"\n-             name="plone.app.dexterity.behaviors.related.IRelatedItems"/>\n+    <utility\n+        factory=".related.related_items_behavior_BBB"\n+        provides="plone.behavior.interfaces.IBehavior"\n+        name="plone.app.dexterity.behaviors.related.IRelatedItems"\n+        />\n   </configure>\n \n </configure>\ndiff --git a/plone/app/dexterity/browser/configure.zcml b/plone/app/dexterity/browser/configure.zcml\nindex 293b0c0c..db6783d8 100644\n--- a/plone/app/dexterity/browser/configure.zcml\n+++ b/plone/app/dexterity/browser/configure.zcml\n@@ -2,36 +2,37 @@\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:browser="http://namespaces.zope.org/browser"\n     xmlns:zcml="http://namespaces.zope.org/zcml"\n-    i18n_domain="plone">\n+    i18n_domain="plone"\n+    >\n \n   <!-- Default view for Dexterity types in Plone  4 -->\n   <browser:page\n-      for="plone.dexterity.interfaces.IDexterityItem"\n       name="view"\n+      for="plone.dexterity.interfaces.IDexterityItem"\n       class="plone.dexterity.browser.view.DefaultView"\n       template="item.pt"\n       permission="zope2.View"\n       />\n \n   <browser:page\n-      for="plone.dexterity.interfaces.IDexterityContainer"\n       name="view"\n+      for="plone.dexterity.interfaces.IDexterityContainer"\n       class="plone.dexterity.browser.view.DefaultView"\n       template="container.pt"\n       permission="zope2.View"\n       />\n \n   <browser:page\n-      for="plone.dexterity.interfaces.IDexterityContainer"\n       name="folder_listing"\n+      for="plone.dexterity.interfaces.IDexterityContainer"\n       class=".folder_listing.FolderView"\n       template="folder_listing.pt"\n       permission="zope2.View"\n       />\n \n   <browser:page\n-      for="plone.base.interfaces.IPloneSiteRoot"\n       name="folder_listing"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".folder_listing.FolderView"\n       template="folder_listing.pt"\n       permission="zope2.View"\n@@ -41,9 +42,9 @@\n   <browser:viewlet\n       name="plone.app.dexterity.defaultpagewarning"\n       view="plone.dexterity.interfaces.IDexterityEditForm"\n+      manager="plone.app.layout.viewlets.interfaces.IGlobalStatusMessage"\n       template="default_page_warning.pt"\n       permission="cmf.ModifyPortalContent"\n-      manager="plone.app.layout.viewlets.interfaces.IGlobalStatusMessage"\n       />\n \n   <!-- Control panel -->\n@@ -52,8 +53,9 @@\n       name="dexterity-types"\n       for="plone.base.interfaces.IPloneSiteRoot"\n       class=".types.TypesContext"\n+      allowed_interface="OFS.interfaces.IItem"\n       permission="plone.schemaeditor.ManageSchemata"\n-      allowed_interface="OFS.interfaces.IItem" />\n+      />\n \n   <adapter\n       factory=".types.TypeSettingsAdapter"\n@@ -71,7 +73,8 @@\n       name="edit"\n       for="plone.app.dexterity.interfaces.ITypesContext"\n       class=".types.TypesListingPage"\n-      permission="plone.schemaeditor.ManageSchemata" />\n+      permission="plone.schemaeditor.ManageSchemata"\n+      />\n \n   <browser:page\n       name="add-type"\n@@ -91,25 +94,29 @@\n       name="overview"\n       for="plone.app.dexterity.interfaces.ITypeSchemaContext"\n       class=".overview.TypeOverviewPage"\n-      permission="plone.schemaeditor.ManageSchemata" />\n+      permission="plone.schemaeditor.ManageSchemata"\n+      />\n \n   <browser:page\n       name="fields"\n       for="plone.app.dexterity.interfaces.ITypeSchemaContext"\n       class=".fields.TypeFieldsPage"\n-      permission="plone.schemaeditor.ManageSchemata" />\n+      permission="plone.schemaeditor.ManageSchemata"\n+      />\n \n   <browser:page\n       name="behaviors"\n       for="plone.app.dexterity.interfaces.ITypeSchemaContext"\n       class=".behaviors.TypeBehaviorsPage"\n-      permission="plone.schemaeditor.ManageSchemata" />\n+      permission="plone.schemaeditor.ManageSchemata"\n+      />\n \n   <browser:page\n       name="clone"\n       for="plone.app.dexterity.interfaces.ITypeSchemaContext"\n       class=".clone_type.TypeCloneFormPage"\n-      permission="plone.schemaeditor.ManageSchemata" />\n+      permission="plone.schemaeditor.ManageSchemata"\n+      />\n \n   <browser:page\n       name="types-export"\n@@ -130,8 +137,8 @@\n         name="modeleditor"\n         for="plone.schemaeditor.interfaces.ISchemaContext"\n         class=".modeleditor.ModelEditorView"\n-        permission="plone.schemaeditor.ManageSchemata"\n         template="modeleditor.pt"\n+        permission="plone.schemaeditor.ManageSchemata"\n         />\n   </configure>\n \ndiff --git a/plone/app/dexterity/configure.zcml b/plone/app/dexterity/configure.zcml\nindex 135ded4b..2bf27a7c 100644\n--- a/plone/app/dexterity/configure.zcml\n+++ b/plone/app/dexterity/configure.zcml\n@@ -2,18 +2,25 @@\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:five="http://namespaces.zope.org/five"\n     xmlns:genericsetup="http://namespaces.zope.org/genericsetup"\n-    xmlns:zcml="http://namespaces.zope.org/zcml"\n     xmlns:i18n="http://namespaces.zope.org/i18n"\n-    i18n_domain="plone">\n+    xmlns:zcml="http://namespaces.zope.org/zcml"\n+    i18n_domain="plone"\n+    >\n \n-  <include package="plone.app.imaging" zcml:condition="installed plone.app.imaging"/>\n+  <include\n+      package="plone.app.imaging"\n+      zcml:condition="installed plone.app.imaging"\n+      />\n   <include package="plone.app.vocabularies" />\n   <include package="plone.app.z3cform" />\n   <include package="plone.app.textfield" />\n   <include package="plone.app.uuid" />\n   <include package="plone.formwidget.namedfile" />\n   <include package="plone.schemaeditor" />\n-  <include package="plone.directives.dexterity" zcml:condition="installed plone.directives.dexterity" />\n+  <include\n+      package="plone.directives.dexterity"\n+      zcml:condition="installed plone.directives.dexterity"\n+      />\n   <include package="plone.dexterity" />\n   <include package="plone.behavior" />\n \n@@ -21,18 +28,18 @@\n       name="default"\n       title="Dexterity Content Types"\n       description="Configures various components needed for full Dexterity support."\n-      directory="profiles/default"\n       provides="Products.GenericSetup.interfaces.EXTENSION"\n       for="plone.base.interfaces.IPloneSiteRoot"\n+      directory="profiles/default"\n       />\n \n   <genericsetup:registerProfile\n       name="testing"\n       title="Dexterity Content Types"\n       description="Adds Dexterity-based Folder and Document types for testing."\n-      directory="profiles/testing"\n       provides="Products.GenericSetup.interfaces.EXTENSION"\n       for="plone.base.interfaces.ITestCasePloneSiteRoot"\n+      directory="profiles/testing"\n       />\n \n   <include package=".browser" />\n@@ -63,7 +70,9 @@\n   <adapter factory=".factories.DXFileFactory" />\n   <adapter factory=".permissions.DXFieldPermissionChecker" />\n   <adapter factory=".permissions.GenericFormFieldPermissionChecker" />\n-  <adapter factory=".permissions.GenericFormFieldPermissionChecker"\n-           for="plone.z3cform.interfaces.IFormWrapper" />\n+  <adapter\n+      factory=".permissions.GenericFormFieldPermissionChecker"\n+      for="plone.z3cform.interfaces.IFormWrapper"\n+      />\n \n </configure>\ndiff --git a/plone/app/dexterity/events.zcml b/plone/app/dexterity/events.zcml\nindex 50d7fc03..7f8ebea9 100644\n--- a/plone/app/dexterity/events.zcml\n+++ b/plone/app/dexterity/events.zcml\n@@ -1,6 +1,7 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n-    i18n_domain="plone">\n+    i18n_domain="plone"\n+    >\n \n   <!-- Register schema/field modify handlers -->\n   <subscriber\ndiff --git a/plone/app/dexterity/meta.zcml b/plone/app/dexterity/meta.zcml\nindex ff42bfb2..a4207e42 100644\n--- a/plone/app/dexterity/meta.zcml\n+++ b/plone/app/dexterity/meta.zcml\n@@ -1,10 +1,21 @@\n-<configure xmlns="http://namespaces.zope.org/zope"\n-           xmlns:zcml="http://namespaces.zope.org/zcml">\n+<configure\n+    xmlns="http://namespaces.zope.org/zope"\n+    xmlns:zcml="http://namespaces.zope.org/zcml"\n+    >\n \n-  <include package="plone.dexterity" file="meta.zcml" />\n-  <include zcml:condition="installed plone.directives.dexterity"\n-           package="plone.directives.dexterity" file="meta.zcml" />\n-  <include zcml:condition="installed plone.directives.form"\n-           package="plone.directives.form" file="meta.zcml" />\n+  <include\n+      package="plone.dexterity"\n+      file="meta.zcml"\n+      />\n+  <include\n+      package="plone.directives.dexterity"\n+      file="meta.zcml"\n+      zcml:condition="installed plone.directives.dexterity"\n+      />\n+  <include\n+      package="plone.directives.form"\n+      file="meta.zcml"\n+      zcml:condition="installed plone.directives.form"\n+      />\n \n-</configure>\n\\ No newline at end of file\n+</configure>\ndiff --git a/plone/app/dexterity/overrides.zcml b/plone/app/dexterity/overrides.zcml\nindex 6cbcc13f..09d0e58b 100644\n--- a/plone/app/dexterity/overrides.zcml\n+++ b/plone/app/dexterity/overrides.zcml\n@@ -1,8 +1,12 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:browser="http://namespaces.zope.org/browser"\n-    xmlns:zcml="http://namespaces.zope.org/zcml">\n+    xmlns:zcml="http://namespaces.zope.org/zcml"\n+    >\n \n-  <includeOverrides package="plone.app.z3cform" file="overrides.zcml" />\n+  <includeOverrides\n+      package="plone.app.z3cform"\n+      file="overrides.zcml"\n+      />\n \n </configure>\ndiff --git a/plone/app/dexterity/profiles/default/controlpanel.xml b/plone/app/dexterity/profiles/default/controlpanel.xml\nindex a773b4bb..9d4bde86 100644\n--- a/plone/app/dexterity/profiles/default/controlpanel.xml\n+++ b/plone/app/dexterity/profiles/default/controlpanel.xml\n@@ -1,6 +1,19 @@\n-<?xml version="1.0"?>\n-<object name="portal_controlpanel" xmlns:i18n="http://xml.zope.org/namespaces/i18n" i18n:domain="plone" purge="False">\n-  <configlet action_id="dexterity-types" appId="Plone" category="plone-content" condition_expr="" icon_expr="string:gem" title="Content Types" url_expr="string:${portal_url}/@@dexterity-types" visible="True" i18n:attributes="title">\n+<?xml version="1.0" encoding="utf-8"?>\n+<object xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+        name="portal_controlpanel"\n+        purge="False"\n+        i18n:domain="plone"\n+>\n+  <configlet action_id="dexterity-types"\n+             appId="Plone"\n+             category="plone-content"\n+             condition_expr=""\n+             icon_expr="string:gem"\n+             title="Content Types"\n+             url_expr="string:${portal_url}/@@dexterity-types"\n+             visible="True"\n+             i18n:attributes="title"\n+  >\n     <permission>Manage portal</permission>\n   </configlet>\n-</object>\n\\ No newline at end of file\n+</object>\ndiff --git a/plone/app/dexterity/profiles/default/metadata.xml b/plone/app/dexterity/profiles/default/metadata.xml\nindex 144d04bb..31ef5503 100644\n--- a/plone/app/dexterity/profiles/default/metadata.xml\n+++ b/plone/app/dexterity/profiles/default/metadata.xml\n@@ -1,7 +1,7 @@\n-<?xml version="1.0"?>\n+<?xml version="1.0" encoding="utf-8"?>\n <metadata>\n   <version>2007</version>\n   <dependencies>\n     <dependency>profile-plone.app.z3cform:default</dependency>\n   </dependencies>\n-</metadata>\n\\ No newline at end of file\n+</metadata>\ndiff --git a/plone/app/dexterity/profiles/testing/metadata.xml b/plone/app/dexterity/profiles/testing/metadata.xml\nindex 76cc7558..5cc27d43 100644\n--- a/plone/app/dexterity/profiles/testing/metadata.xml\n+++ b/plone/app/dexterity/profiles/testing/metadata.xml\n@@ -1,4 +1,4 @@\n-<?xml version="1.0"?>\n+<?xml version="1.0" encoding="utf-8"?>\n <metadata>\n   <version>1</version>\n   <dependencies>\ndiff --git a/plone/app/dexterity/profiles/testing/types.xml b/plone/app/dexterity/profiles/testing/types.xml\nindex 624b95be..bd4034de 100644\n--- a/plone/app/dexterity/profiles/testing/types.xml\n+++ b/plone/app/dexterity/profiles/testing/types.xml\n@@ -1,7 +1,17 @@\n-<?xml version="1.0"?>\n-<object meta_type="Plone Types Tool" name="portal_types">\n-  <object name="Document" remove="true" />\n-  <object meta_type="Dexterity FTI" name="Document" />\n-  <object name="Folder" remove="true" />\n-  <object meta_type="Dexterity FTI" name="Folder" />\n+<?xml version="1.0" encoding="utf-8"?>\n+<object meta_type="Plone Types Tool"\n+        name="portal_types"\n+>\n+  <object name="Document"\n+          remove="true"\n+  />\n+  <object meta_type="Dexterity FTI"\n+          name="Document"\n+  />\n+  <object name="Folder"\n+          remove="true"\n+  />\n+  <object meta_type="Dexterity FTI"\n+          name="Folder"\n+  />\n </object>\ndiff --git a/plone/app/dexterity/profiles/testing/types/Document.xml b/plone/app/dexterity/profiles/testing/types/Document.xml\nindex dc7de274..f6c2f8db 100644\n--- a/plone/app/dexterity/profiles/testing/types/Document.xml\n+++ b/plone/app/dexterity/profiles/testing/types/Document.xml\n@@ -1,17 +1,25 @@\n-<?xml version="1.0"?>\n-<object name="Document" meta_type="Dexterity FTI" i18n:domain="plone" xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n-  <property name="title" i18n:translate="">Page</property>\n-  <property name="description" i18n:translate=""></property>\n-  <property name="icon_expr"></property>\n+<?xml version="1.0" encoding="utf-8"?>\n+<object xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+        meta_type="Dexterity FTI"\n+        name="Document"\n+        i18n:domain="plone"\n+>\n+  <property name="title"\n+            i18n:translate=""\n+  >Page</property>\n+  <property name="description"\n+            i18n:translate=""\n+  />\n+  <property name="icon_expr" />\n   <property name="factory">Document</property>\n   <property name="add_view_expr">string:${folder_url}/++add++Document</property>\n-  <property name="link_target"></property>\n+  <property name="link_target" />\n   <property name="global_allow">True</property>\n   <property name="filter_content_types">True</property>\n   <property name="allowed_content_types" />\n   <property name="allow_discussion">False</property>\n   <property name="default_view">view</property>\n-  <property name="immediate_view"></property>\n+  <property name="immediate_view" />\n   <property name="view_methods">\n     <element value="view" />\n   </property>\n@@ -25,18 +33,40 @@\n     <element value="plone.dublincore" />\n   </property>\n   <property name="schema">zope.interface.Interface</property>\n-  <alias from="(Default)" to="(dynamic view)" />\n-  <alias from="edit" to="@@edit" />\n-  <alias from="sharing" to="@@sharing" />\n-  <alias from="view" to="(selected layout)" />\n-  <action title="View" action_id="view" category="object" condition_expr=""\n-      icon_expr="" link_target="" url_expr="string:${object_url}"\n-      visible="True" i18n:attributes="title">\n+  <alias from="(Default)"\n+         to="(dynamic view)"\n+  />\n+  <alias from="edit"\n+         to="@@edit"\n+  />\n+  <alias from="sharing"\n+         to="@@sharing"\n+  />\n+  <alias from="view"\n+         to="(selected layout)"\n+  />\n+  <action action_id="view"\n+          category="object"\n+          condition_expr=""\n+          icon_expr=""\n+          link_target=""\n+          title="View"\n+          url_expr="string:${object_url}"\n+          visible="True"\n+          i18n:attributes="title"\n+  >\n     <permission value="View" />\n   </action>\n-  <action title="Edit" action_id="edit" category="object" condition_expr=""\n-      icon_expr="" link_target="" url_expr="string:${object_url}/edit"\n-      visible="True" i18n:attributes="title">\n+  <action action_id="edit"\n+          category="object"\n+          condition_expr=""\n+          icon_expr=""\n+          link_target=""\n+          title="Edit"\n+          url_expr="string:${object_url}/edit"\n+          visible="True"\n+          i18n:attributes="title"\n+  >\n     <permission value="Modify portal content" />\n   </action>\n </object>\ndiff --git a/plone/app/dexterity/profiles/testing/types/Folder.xml b/plone/app/dexterity/profiles/testing/types/Folder.xml\nindex 5e56fdb3..383216f5 100644\n--- a/plone/app/dexterity/profiles/testing/types/Folder.xml\n+++ b/plone/app/dexterity/profiles/testing/types/Folder.xml\n@@ -1,11 +1,19 @@\n-<?xml version="1.0"?>\n-<object name="Folder" meta_type="Dexterity FTI" i18n:domain="plone" xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n-  <property name="title" i18n:translate="">Folder</property>\n-  <property name="description" i18n:translate=""></property>\n-  <property name="icon_expr"></property>\n+<?xml version="1.0" encoding="utf-8"?>\n+<object xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+        meta_type="Dexterity FTI"\n+        name="Folder"\n+        i18n:domain="plone"\n+>\n+  <property name="title"\n+            i18n:translate=""\n+  >Folder</property>\n+  <property name="description"\n+            i18n:translate=""\n+  />\n+  <property name="icon_expr" />\n   <property name="factory">Folder</property>\n   <property name="add_view_expr">string:${folder_url}/++add++Folder</property>\n-  <property name="link_target"></property>\n+  <property name="link_target" />\n   <property name="immediate_view">view</property>\n   <property name="global_allow">True</property>\n   <property name="filter_content_types">False</property>\n@@ -30,18 +38,40 @@\n     <element value="plone.nextprevioustoggle" />\n   </property>\n   <property name="schema">zope.interface.Interface</property>\n-  <alias from="(Default)" to="(dynamic view)" />\n-  <alias from="edit" to="@@edit" />\n-  <alias from="sharing" to="@@sharing" />\n-  <alias from="view" to="(selected layout)" />\n-  <action title="View" action_id="view" category="object" condition_expr=""\n-      icon_expr="" link_target="" url_expr="string:${object_url}"\n-      visible="True" i18n:attributes="title">\n+  <alias from="(Default)"\n+         to="(dynamic view)"\n+  />\n+  <alias from="edit"\n+         to="@@edit"\n+  />\n+  <alias from="sharing"\n+         to="@@sharing"\n+  />\n+  <alias from="view"\n+         to="(selected layout)"\n+  />\n+  <action action_id="view"\n+          category="object"\n+          condition_expr=""\n+          icon_expr=""\n+          link_target=""\n+          title="View"\n+          url_expr="string:${object_url}"\n+          visible="True"\n+          i18n:attributes="title"\n+  >\n     <permission value="View" />\n   </action>\n-  <action title="Edit" action_id="edit" category="object" condition_expr=""\n-      icon_expr="" link_target="" url_expr="string:${object_url}/edit"\n-      visible="True" i18n:attributes="title">\n+  <action action_id="edit"\n+          category="object"\n+          condition_expr=""\n+          icon_expr=""\n+          link_target=""\n+          title="Edit"\n+          url_expr="string:${object_url}/edit"\n+          visible="True"\n+          i18n:attributes="title"\n+  >\n     <permission value="Modify portal content" />\n   </action>\n </object>\ndiff --git a/plone/app/dexterity/textindexer/configure.zcml b/plone/app/dexterity/textindexer/configure.zcml\nindex d2841aac..6f5be134 100644\n--- a/plone/app/dexterity/textindexer/configure.zcml\n+++ b/plone/app/dexterity/textindexer/configure.zcml\n@@ -1,62 +1,59 @@\n-<configure xmlns="http://namespaces.zope.org/zope"\n-           xmlns:i18n="http://namespaces.zope.org/i18n"\n-           xmlns:plone="http://namespaces.plone.org/plone"\n-           xmlns:zcml="http://namespaces.zope.org/zcml"\n-           i18n_domain="plone.app.dexterity.textindexer">\n-\n-    <!-- marker behavior for enabling indexer -->\n-    <plone:behavior\n-          title="Full-Text Indexing"\n-          name="plone.textindexer"\n-          description="Enables the enhanced full-text indexing for a content type (\'plone.textindexer\'). If a field is marked \'searchable\', its content gets added to the \'SearchableText\' index in the catalog."\n-          provides="plone.app.dexterity.textindexer.behavior.IDexterityTextIndexer"\n-          />\n-\n-    <utility\n-        factory=".supermodel.IndexerSchema"\n-        name="plone.textindexer.indexer"\n-        />\n-\n-    <adapter\n-        factory="plone.app.dexterity.textindexer.indexer.dynamic_searchable_text_indexer"\n-        name="SearchableText" />\n-\n-    <!-- field converters -->\n-    <adapter\n-        factory="plone.app.dexterity.textindexer.converters.DefaultDexterityTextIndexFieldConverter"\n-        />\n-\n-    <adapter\n-        zcml:condition="installed plone.namedfile"\n-        factory="plone.app.dexterity.textindexer.converters.NamedfileFieldConverter"\n-        />\n-\n-    <adapter\n-        zcml:condition="installed plone.app.textfield"\n-        factory="plone.app.dexterity.textindexer.converters.DexterityRichTextIndexFieldConverter"\n-        />\n-\n-    <adapter\n-        factory="plone.app.dexterity.textindexer.converters.IntFieldConverter"\n-        />\n-\n-    <adapter\n-        factory="plone.app.dexterity.textindexer.converters.TupleFieldConverter"\n-        />\n-\n-    <!-- plone.schemaeditor adapter -->\n-    <adapter\n-        provides="plone.schemaeditor.interfaces.IFieldEditorExtender"\n-        for="plone.schemaeditor.interfaces.ISchemaContext\n-             zope.schema.interfaces.IField"\n-        name="plone.schemaeditor.searchabletext"\n-        factory=".schemaeditor.get_searchabletext_schema"\n-        />\n-\n-    <adapter\n-        provides=".schemaeditor.ISearchableTextField"\n-        for="zope.schema.interfaces.IField"\n-        factory=".schemaeditor.SearchableTextField"\n-        />\n+<configure\n+    xmlns="http://namespaces.zope.org/zope"\n+    xmlns:i18n="http://namespaces.zope.org/i18n"\n+    xmlns:plone="http://namespaces.plone.org/plone"\n+    xmlns:zcml="http://namespaces.zope.org/zcml"\n+    i18n_domain="plone.app.dexterity.textindexer"\n+    >\n+\n+  <!-- marker behavior for enabling indexer -->\n+  <plone:behavior\n+      name="plone.textindexer"\n+      title="Full-Text Indexing"\n+      description="Enables the enhanced full-text indexing for a content type (\'plone.textindexer\'). If a field is marked \'searchable\', its content gets added to the \'SearchableText\' index in the catalog."\n+      provides="plone.app.dexterity.textindexer.behavior.IDexterityTextIndexer"\n+      />\n+\n+  <utility\n+      factory=".supermodel.IndexerSchema"\n+      name="plone.textindexer.indexer"\n+      />\n+\n+  <adapter\n+      factory="plone.app.dexterity.textindexer.indexer.dynamic_searchable_text_indexer"\n+      name="SearchableText"\n+      />\n+\n+  <!-- field converters -->\n+  <adapter factory="plone.app.dexterity.textindexer.converters.DefaultDexterityTextIndexFieldConverter" />\n+\n+  <adapter\n+      factory="plone.app.dexterity.textindexer.converters.NamedfileFieldConverter"\n+      zcml:condition="installed plone.namedfile"\n+      />\n+\n+  <adapter\n+      factory="plone.app.dexterity.textindexer.converters.DexterityRichTextIndexFieldConverter"\n+      zcml:condition="installed plone.app.textfield"\n+      />\n+\n+  <adapter factory="plone.app.dexterity.textindexer.converters.IntFieldConverter" />\n+\n+  <adapter factory="plone.app.dexterity.textindexer.converters.TupleFieldConverter" />\n+\n+  <!-- plone.schemaeditor adapter -->\n+  <adapter\n+      factory=".schemaeditor.get_searchabletext_schema"\n+      provides="plone.schemaeditor.interfaces.IFieldEditorExtender"\n+      for="plone.schemaeditor.interfaces.ISchemaContext\n+           zope.schema.interfaces.IField"\n+      name="plone.schemaeditor.searchabletext"\n+      />\n+\n+  <adapter\n+      factory=".schemaeditor.SearchableTextField"\n+      provides=".schemaeditor.ISearchableTextField"\n+      for="zope.schema.interfaces.IField"\n+      />\n \n </configure>\ndiff --git a/plone/app/dexterity/textindexer/tests/configure.zcml b/plone/app/dexterity/textindexer/tests/configure.zcml\nindex 97f4fa9a..d608bf6a 100644\n--- a/plone/app/dexterity/textindexer/tests/configure.zcml\n+++ b/plone/app/dexterity/textindexer/tests/configure.zcml\n@@ -1,77 +1,79 @@\n-<configure xmlns="http://namespaces.zope.org/zope"\n-           xmlns:plone="http://namespaces.plone.org/plone"\n-           i18n_domain="plone.app.dexterity.textindexer">\n+<configure\n+    xmlns="http://namespaces.zope.org/zope"\n+    xmlns:plone="http://namespaces.plone.org/plone"\n+    i18n_domain="plone.app.dexterity.textindexer"\n+    >\n \n-    <plone:behavior\n-          name="tests.textindexer.simple_behavior"\n-          title="simple behavior"\n-          description=""\n-          provides=".behaviors.ISimpleBehavior"\n-          for="plone.dexterity.interfaces.IDexterityContent"\n-          />\n+  <plone:behavior\n+      name="tests.textindexer.simple_behavior"\n+      title="simple behavior"\n+      description=""\n+      provides=".behaviors.ISimpleBehavior"\n+      for="plone.dexterity.interfaces.IDexterityContent"\n+      />\n \n-    <plone:behavior\n-          name="tests.textindexer.list_behavior"\n-          title="list behavior"\n-          description=""\n-          provides=".behaviors.IListBehavior"\n-          for="plone.dexterity.interfaces.IDexterityContent"\n-          />\n+  <plone:behavior\n+      name="tests.textindexer.list_behavior"\n+      title="list behavior"\n+      description=""\n+      provides=".behaviors.IListBehavior"\n+      for="plone.dexterity.interfaces.IDexterityContent"\n+      />\n \n-    <plone:behavior\n-          name="tests.textindexer.int_behavior"\n-          title="int behavior"\n-          description=""\n-          provides=".behaviors.IIntBehavior"\n-          for="plone.dexterity.interfaces.IDexterityContent"\n-          />\n+  <plone:behavior\n+      name="tests.textindexer.int_behavior"\n+      title="int behavior"\n+      description=""\n+      provides=".behaviors.IIntBehavior"\n+      for="plone.dexterity.interfaces.IDexterityContent"\n+      />\n \n-    <plone:behavior\n-          name="tests.textindexer.richtext_behavior"\n-          title="richtext behavior"\n-          description=""\n-          provides=".behaviors.IRichTextBehavior"\n-          for="plone.dexterity.interfaces.IDexterityContent"\n-          />\n+  <plone:behavior\n+      name="tests.textindexer.richtext_behavior"\n+      title="richtext behavior"\n+      description=""\n+      provides=".behaviors.IRichTextBehavior"\n+      for="plone.dexterity.interfaces.IDexterityContent"\n+      />\n \n-    <plone:behavior\n-          name="tests.textindexer.empty_richtext_behavior"\n-          title="empty richtext behavior"\n-          description=""\n-          provides=".behaviors.IEmptyRichTextBehavior"\n-          for="plone.dexterity.interfaces.IDexterityContent"\n-          />\n+  <plone:behavior\n+      name="tests.textindexer.empty_richtext_behavior"\n+      title="empty richtext behavior"\n+      description=""\n+      provides=".behaviors.IEmptyRichTextBehavior"\n+      for="plone.dexterity.interfaces.IDexterityContent"\n+      />\n \n-    <plone:behavior\n-          name="tests.textindexer.tuple_behavior"\n-          title="tuple behavior"\n-          description=""\n-          provides=".behaviors.ITupleBehavior"\n-          for="plone.dexterity.interfaces.IDexterityContent"\n-          />\n+  <plone:behavior\n+      name="tests.textindexer.tuple_behavior"\n+      title="tuple behavior"\n+      description=""\n+      provides=".behaviors.ITupleBehavior"\n+      for="plone.dexterity.interfaces.IDexterityContent"\n+      />\n \n-    <plone:behavior\n-          name="tests.textindexer.tuple_choice_behavior"\n-          title="tuple choice behavior"\n-          description=""\n-          provides=".behaviors.ITupleChoiceBehavior"\n-          for="plone.dexterity.interfaces.IDexterityContent"\n-          />\n+  <plone:behavior\n+      name="tests.textindexer.tuple_choice_behavior"\n+      title="tuple choice behavior"\n+      description=""\n+      provides=".behaviors.ITupleChoiceBehavior"\n+      for="plone.dexterity.interfaces.IDexterityContent"\n+      />\n \n-    <plone:behavior\n-          name="tests.textindexer.inherited_behavior"\n-          title="inherited behavior"\n-          description=""\n-          provides=".behaviors.IInheritedBehavior"\n-          for="plone.dexterity.interfaces.IDexterityContent"\n-          />\n+  <plone:behavior\n+      name="tests.textindexer.inherited_behavior"\n+      title="inherited behavior"\n+      description=""\n+      provides=".behaviors.IInheritedBehavior"\n+      for="plone.dexterity.interfaces.IDexterityContent"\n+      />\n \n-    <plone:behavior\n-          name="tests.textindexer.missing_field_behavior"\n-          title="missing field behavior"\n-          description=""\n-          provides=".behaviors.IMissingFieldBehavior"\n-          for="plone.dexterity.interfaces.IDexterityContent"\n-          />\n+  <plone:behavior\n+      name="tests.textindexer.missing_field_behavior"\n+      title="missing field behavior"\n+      description=""\n+      provides=".behaviors.IMissingFieldBehavior"\n+      for="plone.dexterity.interfaces.IDexterityContent"\n+      />\n \n </configure>\ndiff --git a/plone/app/dexterity/upgrades/configure.zcml b/plone/app/dexterity/upgrades/configure.zcml\nindex 3bf9bcc2..87e0874a 100644\n--- a/plone/app/dexterity/upgrades/configure.zcml\n+++ b/plone/app/dexterity/upgrades/configure.zcml\n@@ -1,85 +1,88 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n-    xmlns:genericsetup="http://namespaces.zope.org/genericsetup">\n+    xmlns:genericsetup="http://namespaces.zope.org/genericsetup"\n+    >\n \n   <genericsetup:upgradeStep\n-      source="0.1"\n-      destination="1"\n       title="Install plone.app.z3cform browser layer"\n       profile="plone.app.dexterity:default"\n+      source="0.1"\n+      destination="1"\n       handler=".to1.install_z3cform_profile"\n       />\n \n   <genericsetup:upgradeStep\n-      source="1"\n-      destination="5"\n       title="Unregister schemaeditor.css"\n       profile="plone.app.dexterity:default"\n+      source="1"\n+      destination="5"\n       handler=".to2.remove_stylesheet"\n       />\n \n   <!-- Dexterity 2.0 -->\n \n   <genericsetup:upgradeStep\n-      source="5"\n-      destination="2000"\n       title="Remove overlays.css from CSS registry"\n       profile="plone.app.dexterity:default"\n+      source="5"\n+      destination="2000"\n       handler=".to2000.remove_overlays_css"\n       />\n \n   <genericsetup:upgradeStep\n-      source="2000"\n-      destination="2001"\n       title="Add missing UUIDs to Dexterity content"\n       profile="plone.app.dexterity:default"\n+      source="2000"\n+      destination="2001"\n       handler=".to2001.add_missing_uuids"\n       />\n \n   <genericsetup:upgradeStep\n-      source="2000"\n-      destination="2002"\n       title="Install JQuery Tools date picker resources"\n       profile="plone.app.dexterity:default"\n+      source="2000"\n+      destination="2002"\n       handler=".to2002.install_datepicker_profile"\n       />\n \n   <genericsetup:upgradeStep\n-      source="2002"\n-      destination="2003"\n       title="Make sure uninstalling products won\'t destroy the intid catalog"\n       profile="plone.app.dexterity:default"\n+      source="2002"\n+      destination="2003"\n       handler=".to2003.fix_installed_products"\n       />\n \n   <genericsetup:upgradeStep\n-      source="2003"\n-      destination="2004"\n       title="Remove line feeds and carrige returns from the description"\n       profile="plone.app.dexterity:default"\n+      source="2003"\n+      destination="2004"\n       handler=".to2004.remove_cr_and_lf_description"\n       />\n \n   <genericsetup:upgradeStep\n-      source="2004"\n-      destination="2005"\n       title="Remove dexterity-types from portal_actions"\n       profile="plone.app.dexterity:default"\n+      source="2004"\n+      destination="2005"\n       handler=".to2005.cleanup_portal_actions"\n       />\n \n   <genericsetup:upgradeDepends\n+      title="Update controlpanel icon"\n+      profile="plone.app.dexterity:default"\n       source="2005"\n       destination="2006"\n-      profile="plone.app.dexterity:default"\n-      title="Update controlpanel icon"\n-      import_steps="controlpanel" />\n+      import_steps="controlpanel"\n+      />\n \n   <genericsetup:upgradeDepends\n+      title="Rename Dexterity control panel"\n+      profile="plone.app.dexterity:default"\n       source="2006"\n       destination="2007"\n-      profile="plone.app.dexterity:default"\n-      title="Rename Dexterity control panel"\n-      import_steps="controlpanel" />\n+      import_steps="controlpanel"\n+      />\n \n </configure>\n'

Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2023-03-26T17:34:28+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.dexterity/commit/36e307b658fd17ccbfd76af5087b46204011913b

chore: zpretty PT

Files changed:
M plone/app/dexterity/browser/behaviors.pt
M plone/app/dexterity/browser/container.pt
M plone/app/dexterity/browser/default_page_warning.pt
M plone/app/dexterity/browser/folder_listing.pt
M plone/app/dexterity/browser/item.pt
M plone/app/dexterity/browser/modeleditor.pt
M plone/app/dexterity/browser/overview.pt
M plone/app/dexterity/browser/tabbed_forms.pt
M plone/app/dexterity/browser/types_listing.pt
M plone/app/dexterity/browser/types_listing_row.pt
M plone/app/dexterity/browser/typesformwrapper.pt

b'diff --git a/plone/app/dexterity/browser/behaviors.pt b/plone/app/dexterity/browser/behaviors.pt\nindex 6fe93b7..52bfb25 100644\n--- a/plone/app/dexterity/browser/behaviors.pt\n+++ b/plone/app/dexterity/browser/behaviors.pt\n@@ -1,38 +1,60 @@\n <tal:root>\n-<div class="portalMessage" tal:condition="view/status" tal:content="view/status"></div>\n+  <div class="portalMessage"\n+       tal:condition="view/status"\n+       tal:content="view/status"\n+  ></div>\n \n-<form action="." method="post" tal:attributes="action request/getURL; enctype view/enctype">\n-<tal:widgets repeat="widget view/widgets/values|nothing">\n+  <form action="."\n+        method="post"\n+        tal:attributes="\n+          action request/getURL;\n+          enctype view/enctype;\n+        "\n+  >\n+    <tal:widgets repeat="widget view/widgets/values|nothing">\n \n-  <div class="field"\n-       tal:define="error widget/error;\n-                   hidden python:widget.mode == \'hidden\'"\n-       tal:attributes="class python:\'mb-3 field\' + (error and \'alert alert-warning\' or \'\')">\n+      <div class="field"\n+           tal:define="\n+             error widget/error;\n+             hidden python:widget.mode == \'hidden\';\n+           "\n+           tal:attributes="\n+             class python:\'mb-3 field\' + (error and \'alert alert-warning\' or \'\');\n+           "\n+      >\n \n-    <span class="fieldRequired" title="Required"\n-          tal:condition="python:widget.required and not hidden"\n-          i18n:translate="label_required"\n-          i18n:attributes="title title_required;">\n+        <span class="fieldRequired"\n+              title="Required"\n+              tal:condition="python:widget.required and not hidden"\n+              i18n:attributes="title title_required;"\n+              i18n:translate="label_required"\n+        >\n       (Required)\n-    </span>\n+        </span>\n \n-    <div tal:condition="error" tal:content="structure error/render">\n+        <div tal:condition="error"\n+             tal:content="structure error/render"\n+        >\n       Error\n-    </div>\n+        </div>\n \n-    <div class="widget">\n-      <input type="text" tal:replace="structure widget/render" />\n-      <div class="form-text"\n-        tal:define="description widget/field/description"\n-        i18n:translate=""\n-        tal:content="description"\n-        tal:condition="python:description and not hidden"\n-        >field description\n+        <div class="widget">\n+          <input type="text"\n+                 tal:replace="structure widget/render"\n+          />\n+          <div class="form-text"\n+               tal:define="\n+                 description widget/field/description;\n+               "\n+               tal:condition="python:description and not hidden"\n+               tal:content="description"\n+               i18n:translate=""\n+          >field description\n+          </div>\n+        </div>\n       </div>\n-    </div>\n-  </div>\n \n-</tal:widgets>\n-<metal:actions metal:use-macro="context/@@ploneform-macros/actions"/>\n-</form>\n+    </tal:widgets>\n+    <metal:actions metal:use-macro="context/@@ploneform-macros/actions" />\n+  </form>\n </tal:root>\ndiff --git a/plone/app/dexterity/browser/container.pt b/plone/app/dexterity/browser/container.pt\nindex 8e688f0..442acc8 100644\n--- a/plone/app/dexterity/browser/container.pt\n+++ b/plone/app/dexterity/browser/container.pt\n@@ -1,38 +1,48 @@\n-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"\n-      xmlns:tal="http://xml.zope.org/namespaces/tal"\n-      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+<html xmlns="http://www.w3.org/1999/xhtml"\n       xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+      xmlns:tal="http://xml.zope.org/namespaces/tal"\n       lang="en"\n       metal:use-macro="context/@@main_template/macros/master"\n-      i18n:domain="plone">\n-<body>\n+      xml:lang="en"\n+      i18n:domain="plone"\n+>\n+  <body>\n \n-<metal:main fill-slot="content-core">\n-<metal:content-core define-macro="content-core">\n+    <metal:main fill-slot="content-core">\n+      <metal:content-core define-macro="content-core">\n \n-  <tal:block repeat="widget view/widgets/values|nothing">\n-      <tal:block tal:condition="python:widget.__name__ not in (\'IBasic.title\', \'IBasic.description\', \'title\', \'description\',)">\n-          <tal:widget tal:replace="structure widget/@@ploneform-render-widget"/>\n-      </tal:block>\n-  </tal:block>\n+        <tal:block repeat="widget view/widgets/values|nothing">\n+          <tal:block tal:condition="python:widget.__name__ not in (\'IBasic.title\', \'IBasic.description\', \'title\', \'description\',)">\n+            <tal:widget tal:replace="structure widget/@@ploneform-render-widget" />\n+          </tal:block>\n+        </tal:block>\n \n-  <fieldset tal:repeat="group view/groups|nothing"\n-            tal:attributes="id python:\'\'.join((group.prefix, \'groups.\', group.__name__)).replace(\'.\', \'-\')">\n-      <legend tal:content="group/label" />\n-      <tal:block tal:repeat="widget group/widgets/values">\n-          <tal:widget tal:replace="structure widget/@@ploneform-render-widget"/>\n-      </tal:block>\n-  </fieldset>\n+        <fieldset tal:repeat="group view/groups|nothing"\n+                  tal:attributes="\n+                    id python:\'\'.join((group.prefix, \'groups.\', group.__name__)).replace(\'.\', \'-\');\n+                  "\n+        >\n+          <legend tal:content="group/label"></legend>\n+          <tal:block tal:repeat="widget group/widgets/values">\n+            <tal:widget tal:replace="structure widget/@@ploneform-render-widget" />\n+          </tal:block>\n+        </fieldset>\n \n-  <fieldset id="folder-listing">\n-      <legend i18n:translate="" i18n:domain="plone">Contents</legend>\n-      <tal:block define="view nocall:context/folder_listing; listing_macro view/macros/listing|view/index/macros/listing">\n-          <metal:use_macro use-macro="listing_macro" />\n-      </tal:block>\n-  </fieldset>\n+        <fieldset id="folder-listing">\n+          <legend i18n:domain="plone"\n+                  i18n:translate=""\n+          >Contents</legend>\n+          <tal:block define="\n+                       view nocall:context/folder_listing;\n+                       listing_macro view/macros/listing|view/index/macros/listing;\n+                     ">\n+            <metal:use_macro use-macro="listing_macro" />\n+          </tal:block>\n+        </fieldset>\n \n-</metal:content-core>\n-</metal:main>\n+      </metal:content-core>\n+    </metal:main>\n \n-</body>\n+  </body>\n </html>\ndiff --git a/plone/app/dexterity/browser/default_page_warning.pt b/plone/app/dexterity/browser/default_page_warning.pt\nindex f2ed20f..0abe135 100644\n--- a/plone/app/dexterity/browser/default_page_warning.pt\n+++ b/plone/app/dexterity/browser/default_page_warning.pt\n@@ -1,14 +1,19 @@\n-<tal:info\n- xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n- i18n:domain="plone">\n-<div class="alert alert-info" role="alert"\n-    tal:condition="context/@@plone_context_state/is_default_page|nothing">\n-  <span i18n:translate="label_edit_default_view_container">\n+<tal:info xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+          i18n:domain="plone"\n+>\n+  <div class="alert alert-info"\n+       role="alert"\n+       tal:condition="context/@@plone_context_state/is_default_page|nothing"\n+  >\n+    <span i18n:translate="label_edit_default_view_container">\n       You are editing the default view of a container. If you wanted to edit the container itself,\n-     <a href=""\n-        i18n:name="go_here"\n-        i18n:translate="label_edit_default_view_container_go_here"\n-        tal:attributes="href string:${context/aq_inner/aq_parent/absolute_url}/edit">go here</a>.\n-  </span>\n-</div>\n+      <a href=""\n+         tal:attributes="\n+           href string:${context/aq_inner/aq_parent/absolute_url}/edit;\n+         "\n+         i18n:name="go_here"\n+         i18n:translate="label_edit_default_view_container_go_here"\n+      >go here</a>.\n+    </span>\n+  </div>\n </tal:info>\ndiff --git a/plone/app/dexterity/browser/folder_listing.pt b/plone/app/dexterity/browser/folder_listing.pt\nindex 758b859..09ff82b 100644\n--- a/plone/app/dexterity/browser/folder_listing.pt\n+++ b/plone/app/dexterity/browser/folder_listing.pt\n@@ -1,117 +1,147 @@\n-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"\n-    xmlns:tal="http://xml.zope.org/namespaces/tal"\n-    xmlns:metal="http://xml.zope.org/namespaces/metal"\n-    xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n-    lang="en"\n-    metal:use-macro="context/@@main_template/macros/master"\n-    i18n:domain="plone">\n-<body>\n+<html xmlns="http://www.w3.org/1999/xhtml"\n+      xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+      xmlns:tal="http://xml.zope.org/namespaces/tal"\n+      lang="en"\n+      metal:use-macro="context/@@main_template/macros/master"\n+      xml:lang="en"\n+      i18n:domain="plone"\n+>\n+  <body>\n \n-<metal:content-core fill-slot="content-core">\n-<metal:block define-macro="content-core">\n+    <metal:content-core fill-slot="content-core">\n+      <metal:block define-macro="content-core">\n \n-  <metal:listingmacro define-macro="listing">\n-    <tal:results define="batch view/batch">\n-      <tal:listing condition="batch">\n-        <div class="entries" metal:define-slot="entries">\n-          <tal:repeat repeat="item batch" metal:define-macro="entries">\n-            <tal:block tal:define="obj item/getObject;\n-                item_url item/getURL;\n-                item_id item/getId;\n-                item_title item/Title;\n-                item_description item/Description;\n-                item_type item/PortalType;\n-                item_modified item/ModificationDate;\n-                item_created item/CreationDate;\n-                item_type_class python:\'contenttype-\' + view.normalizeString(item_type);\n-                item_wf_state item/review_state;\n-                item_wf_state_class python:\'state-\' + view.normalizeString(item_wf_state);\n-                item_creator item/Creator;\n-                item_link python:item_type in view.use_view_action and item_url+\'/view\' or item_url;\n-                item_has_image python:item.getIcon">\n-              <metal:block define-slot="entry">\n-                <article class="entry">\n-                  <header metal:define-macro="listitem">\n-                    <span class="summary" tal:attributes="title item_type">\n-                     <a tal:attributes="href item_link">\n-                      <img class="image-tile"\n-                             tal:condition="item_has_image"\n-                             tal:attributes="src  string:$item_url/@@images/image/tile">\n-                      </a>\n-                      <a tal:attributes="href item_link;\n-                                         class string:$item_type_class $item_wf_state_class url;\n-                                         title item_type"\n-                          tal:content="python: item_title or item_id">\n+        <metal:listingmacro define-macro="listing">\n+          <tal:results define="\n+                         batch view/batch;\n+                       ">\n+            <tal:listing condition="batch">\n+              <div class="entries"\n+                   metal:define-slot="entries"\n+              >\n+                <tal:repeat metal:define-macro="entries"\n+                            repeat="item batch"\n+                >\n+                  <tal:block tal:define="\n+                               obj item/getObject;\n+                               item_url item/getURL;\n+                               item_id item/getId;\n+                               item_title item/Title;\n+                               item_description item/Description;\n+                               item_type item/PortalType;\n+                               item_modified item/ModificationDate;\n+                               item_created item/CreationDate;\n+                               item_type_class python:\'contenttype-\' + view.normalizeString(item_type);\n+                               item_wf_state item/review_state;\n+                               item_wf_state_class python:\'state-\' + view.normalizeString(item_wf_state);\n+                               item_creator item/Creator;\n+                               item_link python:item_type in view.use_view_action and item_url+\'/view\' or item_url;\n+                               item_has_image python:item.getIcon;\n+                             ">\n+                    <metal:block define-slot="entry">\n+                      <article class="entry">\n+                        <header metal:define-macro="listitem">\n+                          <span class="summary"\n+                                tal:attributes="\n+                                  title item_type;\n+                                "\n+                          >\n+                            <a tal:attributes="\n+                                 href item_link;\n+                               ">\n+                              <img class="image-tile"\n+                                   tal:condition="item_has_image"\n+                                   tal:attributes="\n+                                     src  string:$item_url/@@images/image/tile;\n+                                   "\n+                              />\n+                            </a>\n+                            <a tal:content="python: item_title or item_id"\n+                               tal:attributes="\n+                                 href item_link;\n+                                 class string:$item_type_class $item_wf_state_class url;\n+                                 title item_type;\n+                               "\n+                            >\n \n                              Item Title\n-                      </a>\n-                     </span>\n-                    <metal:block metal:define-macro="document_byline">\n-                      <div class="documentByLine">\n-                        <tal:byline condition="view/show_about">\n+                            </a>\n+                          </span>\n+                          <metal:block metal:define-macro="document_byline">\n+                            <div class="documentByLine">\n+                              <tal:byline condition="view/show_about">\n                           &mdash;\n-                          <tal:name tal:condition="item_creator"\n-                              tal:define="author python:view.pas_member.info(item_creator);\n-                                          creator_short_form author/username;\n-                                          creator_long_form string:?author=${author/username};\n-                                          creator_is_openid python:\'/\' in creator_short_form;\n-                                          creator_id python:(creator_short_form, creator_long_form)[creator_is_openid];">\n-                          <span i18n:translate="label_by_author">\n+                                <tal:name tal:define="\n+                                            author python:view.pas_member.info(item_creator);\n+                                            creator_short_form author/username;\n+                                            creator_long_form string:?author=${author/username};\n+                                            creator_is_openid python:\'/\' in creator_short_form;\n+                                            creator_id python:(creator_short_form, creator_long_form)[creator_is_openid];\n+                                          "\n+                                          tal:condition="item_creator"\n+                                >\n+                                  <span i18n:translate="label_by_author">\n                             by\n-                            <a tal:attributes="href string:${view/navigation_root_url}/author/${item_creator}"\n-                                tal:content="author/name_or_id"\n-                                tal:omit-tag="not:author"\n-                                i18n:name="author">\n+                                    <a tal:content="author/name_or_id"\n+                                       tal:omit-tag="not:author"\n+                                       tal:attributes="\n+                                         href string:${view/navigation_root_url}/author/${item_creator};\n+                                       "\n+                                       i18n:name="author"\n+                                    >\n                               Bob Dobalina\n-                            </a>\n-                          </span>\n-                          </tal:name>\n+                                    </a>\n+                                  </span>\n+                                </tal:name>\n \n-                          <tal:modified>\n+                                <tal:modified>\n                             &mdash;\n-                            <tal:mod i18n:translate="box_last_modified">last modified</tal:mod>\n-                            <span tal:replace="python:view.toLocalizedTime(item_modified,long_format=1)">\n+                                  <tal:mod i18n:translate="box_last_modified">last modified</tal:mod>\n+                                  <span tal:replace="python:view.toLocalizedTime(item_modified,long_format=1)">\n                               August 16, 2001 at 23:35:59\n-                            </span>\n-                          </tal:modified>\n+                                  </span>\n+                                </tal:modified>\n \n-                          <metal:description define-slot="description_slot">\n-                            <tal:comment replace="nothing">\n+                                <metal:description define-slot="description_slot">\n+                                  <tal:comment replace="nothing">\n                               Place custom listing info for custom types here\n-                            </tal:comment>\n-                          </metal:description>\n-                        </tal:byline>\n-                      </div>\n-                    </metal:block>\n-                  </header>\n-                  <p class="description discreet"\n-                      tal:condition="item_description"\n-                      tal:content="item_description">\n+                                  </tal:comment>\n+                                </metal:description>\n+                              </tal:byline>\n+                            </div>\n+                          </metal:block>\n+                        </header>\n+                        <p class="description discreet"\n+                           tal:condition="item_description"\n+                           tal:content="item_description"\n+                        >\n                     description\n-                  </p>\n-                </article>\n-              </metal:block>\n-            </tal:block>\n-          </tal:repeat>\n-        </div>\n+                        </p>\n+                      </article>\n+                    </metal:block>\n+                  </tal:block>\n+                </tal:repeat>\n+              </div>\n \n-        <div metal:use-macro="context/batch_macros/macros/navigation" />\n+              <div metal:use-macro="context/batch_macros/macros/navigation"></div>\n \n-      </tal:listing>\n+            </tal:listing>\n \n-      <metal:empty metal:define-slot="no_items_in_listing">\n-        <p class="discreet"\n-            tal:condition="not: view/batch"\n-            tal:content="view/no_items_message">\n+            <metal:empty metal:define-slot="no_items_in_listing">\n+              <p class="discreet"\n+                 tal:condition="not: view/batch"\n+                 tal:content="view/no_items_message"\n+              >\n           There are currently no items in this folder.\n-        </p>\n-      </metal:empty>\n+              </p>\n+            </metal:empty>\n \n-    </tal:results>\n-  </metal:listingmacro>\n+          </tal:results>\n+        </metal:listingmacro>\n \n-</metal:block>\n-</metal:content-core>\n+      </metal:block>\n+    </metal:content-core>\n \n-</body>\n+  </body>\n </html>\ndiff --git a/plone/app/dexterity/browser/item.pt b/plone/app/dexterity/browser/item.pt\nindex 66f3f6f..1069ef2 100644\n--- a/plone/app/dexterity/browser/item.pt\n+++ b/plone/app/dexterity/browser/item.pt\n@@ -1,31 +1,36 @@\n-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"\n-      xmlns:tal="http://xml.zope.org/namespaces/tal"\n-      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+<html xmlns="http://www.w3.org/1999/xhtml"\n       xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+      xmlns:tal="http://xml.zope.org/namespaces/tal"\n       lang="en"\n       metal:use-macro="context/@@main_template/macros/master"\n-      i18n:domain="plone">\n-<body>\n+      xml:lang="en"\n+      i18n:domain="plone"\n+>\n+  <body>\n \n-<metal:main fill-slot="content-core">\n-<metal:content-core define-macro="content-core">\n+    <metal:main fill-slot="content-core">\n+      <metal:content-core define-macro="content-core">\n \n-  <tal:block repeat="widget view/widgets/values|nothing">\n-    <tal:block tal:condition="python:widget.__name__ not in (\'IBasic.title\', \'IBasic.description\', \'title\', \'description\',)">\n-      <tal:widget tal:replace="structure widget/@@ploneform-render-widget"/>\n-    </tal:block>\n-  </tal:block>\n+        <tal:block repeat="widget view/widgets/values|nothing">\n+          <tal:block tal:condition="python:widget.__name__ not in (\'IBasic.title\', \'IBasic.description\', \'title\', \'description\',)">\n+            <tal:widget tal:replace="structure widget/@@ploneform-render-widget" />\n+          </tal:block>\n+        </tal:block>\n \n-  <fieldset tal:repeat="group view/groups|nothing"\n-            tal:attributes="id python:\'\'.join((group.prefix, \'groups.\', group.__name__)).replace(\'.\', \'-\')">\n-    <legend tal:content="group/label" />\n-    <tal:block tal:repeat="widget group/widgets/values|nothing">\n-      <tal:widget tal:replace="structure widget/@@ploneform-render-widget"/>\n-    </tal:block>\n-  </fieldset>\n+        <fieldset tal:repeat="group view/groups|nothing"\n+                  tal:attributes="\n+                    id python:\'\'.join((group.prefix, \'groups.\', group.__name__)).replace(\'.\', \'-\');\n+                  "\n+        >\n+          <legend tal:content="group/label"></legend>\n+          <tal:block tal:repeat="widget group/widgets/values|nothing">\n+            <tal:widget tal:replace="structure widget/@@ploneform-render-widget" />\n+          </tal:block>\n+        </fieldset>\n \n-</metal:content-core>\n-</metal:main>\n+      </metal:content-core>\n+    </metal:main>\n \n-</body>\n+  </body>\n </html>\ndiff --git a/plone/app/dexterity/browser/modeleditor.pt b/plone/app/dexterity/browser/modeleditor.pt\nindex 6dd7529..afd95b6 100644\n--- a/plone/app/dexterity/browser/modeleditor.pt\n+++ b/plone/app/dexterity/browser/modeleditor.pt\n@@ -1,65 +1,79 @@\n-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"\n-      xmlns:tal="http://xml.zope.org/namespaces/tal"\n-      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+<html xmlns="http://www.w3.org/1999/xhtml"\n       xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n-    lang="en"\n-    metal:use-macro="context/prefs_main_template/macros/master"\n-    i18n:domain="plone">\n+      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+      xmlns:tal="http://xml.zope.org/namespaces/tal"\n+      lang="en"\n+      metal:use-macro="context/prefs_main_template/macros/master"\n+      xml:lang="en"\n+      i18n:domain="plone"\n+>\n \n-<body>\n-<article metal:fill-slot="prefs_configlet_main">\n-<tal:main-macro metal:define-macro="main">\n+  <body>\n+    <article metal:fill-slot="prefs_configlet_main">\n+      <tal:main-macro metal:define-macro="main">\n \n-  <header id="page-intro">\n-   <a href=""\n-        class="link-parent"\n-        tal:attributes="href string:${context/absolute_url}/@@fields"\n-        i18n:translate="label_back_to_schemaeditor">\n+        <header id="page-intro">\n+          <a class="link-parent"\n+             href=""\n+             tal:attributes="\n+               href string:${context/absolute_url}/@@fields;\n+             "\n+             i18n:translate="label_back_to_schemaeditor"\n+          >\n             Back to the schema editor\n-    </a>\n+          </a>\n \n-    <h1 class="documentFirstHeading"\n-        i18n:translate="heading_model_edit">Edit field model for\n-      <span i18n:name="name" tal:content="context/Title">name</span>\n-    </h1>\n+          <h1 class="documentFirstHeading"\n+              i18n:translate="heading_model_edit"\n+          >Edit field model for\n+            <span tal:content="context/Title"\n+                  i18n:name="name"\n+            >name</span>\n+          </h1>\n \n-    <p class="description" i18n:translate="description_model_edit">\n+          <p class="description"\n+             i18n:translate="description_model_edit"\n+          >\n       This form allows you to directly edit the XML representation\n       of the field list. This makes it possible to add annotations for fieldsets,\n-      validation and widgets. See the <a\n-      href="https://docs.plone.org/external/plone.app.dexterity/docs/reference/dexterity-xml.html">Dexterity XML</a>\n-      section of the <a href="https://docs.plone.org/external/plone.app.dexterity/docs/index.html">Dexterity Developer Manual</a> for details.\n-    </p>\n-   </header>\n+      validation and widgets. See the\n+            <a href="https://docs.plone.org/external/plone.app.dexterity/docs/reference/dexterity-xml.html">Dexterity XML</a>\n+      section of the\n+            <a href="https://docs.plone.org/external/plone.app.dexterity/docs/index.html">Dexterity Developer Manual</a>\n+             for details.\n+          </p>\n+        </header>\n+\n+        <div id="rules-editor">\n+\n+          <form class="modeleditor__form"\n+                action="${context/absolute_url}/@@modeleditor"\n+                method="POST"\n+                tal:define="\n+                  authenticator context/@@authenticator/authenticator | nothing;\n+                "\n+          >\n \n-  <div id="rules-editor">\n+            <input tal:replace="structure authenticator" />\n \n-    <form\n-        class="modeleditor__form"\n-        action="${context/absolute_url}/@@modeleditor"\n-        method="POST"\n-        tal:define="authenticator context/@@authenticator/authenticator | nothing">\n-      \n-      <input tal:replace="structure authenticator" />\n+            <textarea class="modeleditor__source pat-code-editor language-xml"\n+                      name="source"\n+                      tal:content="view/model_source"\n+            ></textarea>\n \n-      <textarea\n-          name="source"\n-          class="modeleditor__source pat-code-editor language-xml"\n-          tal:content="view/model_source"></textarea>\n+            <br />\n \n-      <br />\n-      \n-      <button\n-          class="btn btn-primary"\n-          type="submit"\n-          name="form.button.save" \n-          i18n:translate="">Save</button>\n+            <button class="btn btn-primary"\n+                    name="form.button.save"\n+                    type="submit"\n+                    i18n:translate=""\n+            >Save</button>\n \n-    </form>\n+          </form>\n \n-  </div>\n+        </div>\n \n-</tal:main-macro>\n-</article>\n-</body>\n+      </tal:main-macro>\n+    </article>\n+  </body>\n </html>\ndiff --git a/plone/app/dexterity/browser/overview.pt b/plone/app/dexterity/browser/overview.pt\nindex 786fd1a..27c9b8f 100644\n--- a/plone/app/dexterity/browser/overview.pt\n+++ b/plone/app/dexterity/browser/overview.pt\n@@ -1,39 +1,54 @@\n-<tal:form metal:use-macro="context/@@ploneform-macros/titlelessform"\n-    xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n-    i18n:domain="plone">\n-<tal:fields metal:fill-slot="fields">\n-  <tal:field tal:replace="structure view/widgets/title/@@ploneform-render-widget" />\n-  <tal:field tal:replace="structure view/widgets/description/@@ploneform-render-widget" />\n+<tal:form xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+          metal:use-macro="context/@@ploneform-macros/titlelessform"\n+          i18n:domain="plone"\n+>\n+  <tal:fields metal:fill-slot="fields">\n+    <tal:field tal:replace="structure view/widgets/title/@@ploneform-render-widget" />\n+    <tal:field tal:replace="structure view/widgets/description/@@ploneform-render-widget" />\n \n-  <fieldset tal:condition="python:\'filter_content_types\' in view.fields">\n-    <legend i18n:translate="label_contained_items">Contained items</legend>\n-    <tal:block tal:define="context nocall:view/widgets/filter_content_types;\n-                           value context/value">\n-      <tal:fieldwrapper metal:use-macro="context/@@ploneform-render-widget/widget-wrapper">\n-      <tal:field metal:fill-slot="widget">\n-        <label>\n-          <input type="radio" value="none"\n-               tal:attributes="name context/name;\n-                               checked python:\'checked\' if \'none\' in value else None"/>\n-          <tal:block i18n:translate="label_no_content_types">No content types</tal:block>\n-        </label><br />\n-        <label>\n-          <input type="radio" value="all"\n-                 tal:attributes="name context/name;\n-                               checked python:\'checked\' if \'all\' in value else None"/>\n-          <tal:block i18n:translate="label_all_content_types">All content types</tal:block>\n-        </label><br />\n-        <label>\n-          <input type="radio" value="some"\n-                 tal:attributes="name context/name;\n-                               checked python:\'checked\' if \'some\' in value else None"/>\n-          <tal:block i18n:translate="label_some_content_types">Some content types:</tal:block>\n-          <tal:field tal:replace="structure view/widgets/allowed_content_types/render" />\n-        </label>\n-      </tal:field>\n-      </tal:fieldwrapper>\n-    </tal:block>\n-  </fieldset>\n+    <fieldset tal:condition="python:\'filter_content_types\' in view.fields">\n+      <legend i18n:translate="label_contained_items">Contained items</legend>\n+      <tal:block tal:define="\n+                   context nocall:view/widgets/filter_content_types;\n+                   value context/value;\n+                 ">\n+        <tal:fieldwrapper metal:use-macro="context/@@ploneform-render-widget/widget-wrapper">\n+          <tal:field metal:fill-slot="widget">\n+            <label>\n+              <input type="radio"\n+                     value="none"\n+                     tal:attributes="\n+                       name context/name;\n+                       checked python:\'checked\' if \'none\' in value else None;\n+                     "\n+              />\n+              <tal:block i18n:translate="label_no_content_types">No content types</tal:block>\n+            </label><br />\n+            <label>\n+              <input type="radio"\n+                     value="all"\n+                     tal:attributes="\n+                       name context/name;\n+                       checked python:\'checked\' if \'all\' in value else None;\n+                     "\n+              />\n+              <tal:block i18n:translate="label_all_content_types">All content types</tal:block>\n+            </label><br />\n+            <label>\n+              <input type="radio"\n+                     value="some"\n+                     tal:attributes="\n+                       name context/name;\n+                       checked python:\'checked\' if \'some\' in value else None;\n+                     "\n+              />\n+              <tal:block i18n:translate="label_some_content_types">Some content types:</tal:block>\n+              <tal:field tal:replace="structure view/widgets/allowed_content_types/render" />\n+            </label>\n+          </tal:field>\n+        </tal:fieldwrapper>\n+      </tal:block>\n+    </fieldset>\n \n-</tal:fields>\n+  </tal:fields>\n </tal:form>\ndiff --git a/plone/app/dexterity/browser/tabbed_forms.pt b/plone/app/dexterity/browser/tabbed_forms.pt\nindex 808939a..d631c3b 100644\n--- a/plone/app/dexterity/browser/tabbed_forms.pt\n+++ b/plone/app/dexterity/browser/tabbed_forms.pt\n@@ -1,33 +1,40 @@\n <html xmlns="http://www.w3.org/1999/xhtml"\n+      xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n       xmlns:metal="http://xml.zope.org/namespaces/metal"\n       xmlns:tal="http://xml.zope.org/namespaces/tal"\n-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n       metal:use-macro="here/prefs_main_template/macros/master"\n-      i18n:domain="plone.z3cform">\n-<body>\n-<metal:slot metal:fill-slot="prefs_configlet_main">\n+      i18n:domain="plone.z3cform"\n+>\n+  <body>\n+    <metal:slot metal:fill-slot="prefs_configlet_main">\n \n-  <header class="mb-4"> \n+      <header class="mb-4">\n \n-    <div metal:use-macro="context/global_statusmessage/macros/portal_message">\n+        <div metal:use-macro="context/global_statusmessage/macros/portal_message">\n       Portal status message\n-    </div>\n+        </div>\n \n-    <h1 class="documentFirstHeading"><tal:block tal:content="context/Title"/> (<tal:block tal:content="python:context.__name__" />)</h1>\n+        <h1 class="documentFirstHeading"><tal:block tal:content="context/Title" />\n+          (<tal:block tal:content="python:context.__name__" />)</h1>\n \n-    <ul class="nav nav-tabs">\n-      <li class="nav-item" tal:repeat="tab view/tabs">\n-        <a class="nav-link"\n-            tal:attributes="href python:context.absolute_url() + \'/\' + tab[1];\n-                            class python: \'nav-link \' + (\'active\' if tab[0] == view.label else \'\')"\n-            tal:content="python:tab[0]" />\n-      </li>\n-    </ul>\n-  </header>\n-  <div id="content-core">\n-      <tal:block tal:replace="structure view/contents|view/render"/>\n-  </div>\n+        <ul class="nav nav-tabs">\n+          <li class="nav-item"\n+              tal:repeat="tab view/tabs"\n+          >\n+            <a class="nav-link"\n+               tal:content="python:tab[0]"\n+               tal:attributes="\n+                 href python:context.absolute_url() + \'/\' + tab[1];\n+                 class python: \'nav-link \' + (\'active\' if tab[0] == view.label else \'\');\n+               "\n+            ></a>\n+          </li>\n+        </ul>\n+      </header>\n+      <div id="content-core">\n+        <tal:block tal:replace="structure view/contents|view/render" />\n+      </div>\n \n-</metal:slot>\n-</body>\n+    </metal:slot>\n+  </body>\n </html>\ndiff --git a/plone/app/dexterity/browser/types_listing.pt b/plone/app/dexterity/browser/types_listing.pt\nindex 02866ce..2cfa367 100644\n--- a/plone/app/dexterity/browser/types_listing.pt\n+++ b/plone/app/dexterity/browser/types_listing.pt\n@@ -1,35 +1,48 @@\n-<tal:root\n-    i18n:domain="plone">\n+<tal:root i18n:domain="plone">\n \n-  <div class="alert alert-info" role="alert"\n-       tal:condition="view/status">\n+  <div class="alert alert-info"\n+       role="alert"\n+       tal:condition="view/status"\n+  >\n     <span tal:content="view/status">\n       Status\n     </span>\n   </div>\n \n   <p class="crud-description documentDescription"\n-      tal:condition="view/description"\n-      tal:content="structure view/description">\n+     tal:condition="view/description"\n+     tal:content="structure view/description"\n+  >\n   </p>\n   <header class="mb-4">\n     <a class="pat-plone-modal"\n-        href="${context/absolute_url}/@@add-type">\n-      <button class="btn btn-primary" i18n:translate="">Add New Content Type&hellip;</button>\n+       href="${context/absolute_url}/@@add-type"\n+    >\n+      <button class="btn btn-primary"\n+              i18n:translate=""\n+      >Add New Content Type&hellip;</button>\n     </a>\n \n     <a class="pat-plone-modal"\n-        href="${context/absolute_url}/@@import-types">\n-      <button class="btn btn-primary" i18n:translate="">Import Type Profiles&hellip;</button>\n+       href="${context/absolute_url}/@@import-types"\n+    >\n+      <button class="btn btn-primary"\n+              i18n:translate=""\n+      >Import Type Profiles&hellip;</button>\n     </a>\n   </header>\n \n   <div class="crud-form"\n-      tal:repeat="form view/subforms"\n-      tal:content="structure form/render">\n+       tal:repeat="form view/subforms"\n+       tal:content="structure form/render"\n+  >\n   </div>\n \n-  <div class="action" tal:repeat="action view/actions/values">\n-    <input type="submit" tal:replace="structure action/render" />\n+  <div class="action"\n+       tal:repeat="action view/actions/values"\n+  >\n+    <input type="submit"\n+           tal:replace="structure action/render"\n+    />\n   </div>\n </tal:root>\ndiff --git a/plone/app/dexterity/browser/types_listing_row.pt b/plone/app/dexterity/browser/types_listing_row.pt\nindex b346c51..fb27ffe 100644\n--- a/plone/app/dexterity/browser/types_listing_row.pt\n+++ b/plone/app/dexterity/browser/types_listing_row.pt\n@@ -1,30 +1,49 @@\n-<tal:block define="tups view/getCombinedWidgets;\n-                   portal context/@@plone_portal_state/portal;\n-                   layout portal/@@plone_layout;\n-                   niceTitles view/getNiceTitles"\n-           repeat="tup tups">\n+<tal:block define="\n+             tups view/getCombinedWidgets;\n+             portal context/@@plone_portal_state/portal;\n+             layout portal/@@plone_layout;\n+             niceTitles view/getNiceTitles;\n+           "\n+           repeat="tup tups"\n+>\n \n-  <td tal:define="error python:tup[0].error;\n-                  idx repeat/tup/index;\n-                  normalize nocall: context/@@plone/normalizeString;"\n-      tal:attributes="class python:\'field\' + (error and \' error\' or \'\') + (tup[0].__name__ == \'view_item_count\' and \' count\' or \'\')">\n+  <td tal:define="\n+        error python:tup[0].error;\n+        idx repeat/tup/index;\n+        normalize nocall: context/@@plone/normalizeString;\n+      "\n+      tal:attributes="\n+        class python:\'field\' + (error and \' error\' or \'\') + (tup[0].__name__ == \'view_item_count\' and \' count\' or \'\');\n+      "\n+  >\n     <tal:block repeat="widget tup">\n \n \n \n-    <a href=""\n-       tal:define="link python:view.context.context.link(view.getContent(), widget.field.__name__);\n-                   item_type_class python:\'contenttype-\' + normalize(view.getContent().id)"\n-       tal:omit-tag="python:widget.mode == \'input\' or link is None"\n-       tal:attributes="href link;\n-                       class string:$item_type_class">\n+      <a href=""\n+         tal:define="\n+           link python:view.context.context.link(view.getContent(), widget.field.__name__);\n+           item_type_class python:\'contenttype-\' + normalize(view.getContent().id);\n+         "\n+         tal:omit-tag="python:widget.mode == \'input\' or link is None"\n+         tal:attributes="\n+           href link;\n+           class string:$item_type_class;\n+         "\n+      >\n \n-      <span class="error" tal:omit-tag="not:error">\n-        <div tal:condition="error" tal:replace="structure error/render" />\n-        <input type="text" tal:replace="structure widget/render" />\n-      </span>\n+        <span class="error"\n+              tal:omit-tag="not:error"\n+        >\n+          <div tal:condition="error"\n+               tal:replace="structure error/render"\n+          ></div>\n+          <input type="text"\n+                 tal:replace="structure widget/render"\n+          />\n+        </span>\n \n-    </a>\n+      </a>\n     </tal:block>\n \n   </td>\ndiff --git a/plone/app/dexterity/browser/typesformwrapper.pt b/plone/app/dexterity/browser/typesformwrapper.pt\nindex 3e830f2..b65ca0c 100644\n--- a/plone/app/dexterity/browser/typesformwrapper.pt\n+++ b/plone/app/dexterity/browser/typesformwrapper.pt\n@@ -1,17 +1,21 @@\n-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"\n-      xmlns:tal="http://xml.zope.org/namespaces/tal"\n-      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+<html xmlns="http://www.w3.org/1999/xhtml"\n       xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+      xmlns:tal="http://xml.zope.org/namespaces/tal"\n       lang="en"\n       metal:use-macro="here/prefs_main_template/macros/master"\n-      i18n:domain="plone">\n-<body>\n-<metal:main fill-slot="prefs_configlet_main">\n-<tal:main-macro metal:define-macro="main">\n-  <h1 class="documentFirstHeading" tal:content="view/label">Title</h1>\n-  <div id="skel-contents">\n-    <span tal:replace="structure view/contents" />\n-  </div>\n-</tal:main-macro>\n-</metal:main>\n-</html>\n+      xml:lang="en"\n+      i18n:domain="plone"\n+>\n+  <body>\n+    <metal:main fill-slot="prefs_configlet_main">\n+      <tal:main-macro metal:define-macro="main">\n+        <h1 class="documentFirstHeading"\n+            tal:content="view/label"\n+        >Title</h1>\n+        <div id="skel-contents">\n+          <span tal:replace="structure view/contents"></span>\n+        </div>\n+      </tal:main-macro>\n+    </metal:main>\n+  </body></html>\n'

Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2023-03-26T17:34:28+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.dexterity/commit/917594b4ebea58f4b2734dddaaf0cd8717af0468

feat: configure flake8

Files changed:
M setup.cfg

b'diff --git a/setup.cfg b/setup.cfg\nindex 0da8f8f..e85fb4a 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -14,6 +14,8 @@ ignore =\n     E203,\n     # black takes care of spaces after commas\n     E231,\n+per-file-ignores =\n+    plone/app/dexterity/textindexer/__init__.py:F401\n \n [check-manifest]\n ignore =\n'

Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2023-03-26T17:34:29+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.dexterity/commit/9fa4475f0815ca2699865427b66a4989254937f3

feat: flake8

Files changed:
M docs/conf.py
M plone/app/dexterity/__init__.py
M plone/app/dexterity/tests/test_doctests.py

b'diff --git a/docs/conf.py b/docs/conf.py\nindex 60c63f5..390302e 100644\n--- a/docs/conf.py\n+++ b/docs/conf.py\n@@ -10,10 +10,6 @@\n # All configuration values have a default; values that are commented out\n # serve to show the default.\n \n-import os\n-import sys\n-\n-\n # If extensions (or modules to document with autodoc) are in another directory,\n # add these directories to sys.path here. If the directory is relative to the\n # documentation root, use os.path.abspath to make it absolute, like shown here.\ndiff --git a/plone/app/dexterity/__init__.py b/plone/app/dexterity/__init__.py\nindex 38bb5a7..8efe8b3 100644\n--- a/plone/app/dexterity/__init__.py\n+++ b/plone/app/dexterity/__init__.py\n@@ -1,6 +1,4 @@\n-from zope.i18nmessageid import MessageFactory as ZMessageFactory\n+from zope.i18nmessageid import MessageFactory\n \n-import warnings\n \n-\n-_ = ZMessageFactory("plone")\n+_ = MessageFactory("plone")\ndiff --git a/plone/app/dexterity/tests/test_doctests.py b/plone/app/dexterity/tests/test_doctests.py\nindex 889afaa..ecdfce9 100644\n--- a/plone/app/dexterity/tests/test_doctests.py\n+++ b/plone/app/dexterity/tests/test_doctests.py\n@@ -2,7 +2,6 @@\n from plone.testing import layered\n \n import doctest\n-import re\n import unittest\n \n \n'

Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2023-03-26T17:34:29+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.dexterity/commit/2f84d158865b04fdc23b22a3efb5116173d64835

feat: configure codespell

Files changed:
M pyproject.toml

b'diff --git a/pyproject.toml b/pyproject.toml\nindex 9eb73f3..e655fdf 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -60,3 +60,6 @@ Zope = [\n   \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n ]\n python-dateutil = [\'dateutil\']\n+\n+[tool.codespell]\n+ignore-words-list = "discreet,hove"\n'

Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2023-03-26T17:34:29+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.dexterity/commit/e6f03b56feecedd5831419f1c5eee8af3eed0599

feat: codespell

Files changed:
M CHANGES.rst
M docs/advanced/event-handlers.rst
M docs/advanced/permissions.rst
M docs/advanced/references.rst
M docs/custom-views.rst
M docs/schema-driven-types.rst
M plone/app/dexterity/factories.py
M plone/app/dexterity/tests/test_constrains.py
M plone/app/dexterity/textindexer/indexer.py
M plone/app/dexterity/textindexer/interfaces.py
M plone/app/dexterity/upgrades/configure.zcml

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 1f8be54..df4ffc4 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -95,7 +95,7 @@ Bug fixes:\n \n - Rename "Dexterity Content Types" to just "Content Types"\n   [tisto] (#331)\n-- Don\'t acquire lanuage from portal root default_language for ICategorization.language.\n+- Don\'t acquire language from portal root default_language for ICategorization.language.\n   Fixes https://github.com/plone/plone.app.dexterity/issues/258\n   [jaroel] (#350)\n \n@@ -492,7 +492,7 @@ Bug fixes:\n - removed deprecated getIcon() from documentation\n   [fgrcon]\n \n-- JavaScript formating according to style guides.\n+- JavaScript formatting according to style guides.\n   [thet]\n \n \n@@ -875,7 +875,7 @@ Fixes:\n - Add validator to ensure expires date is after effective date.\n   [benniboy]\n \n-- Remove line feeds and carrige returns from meta description and\n+- Remove line feeds and carriage returns from meta description and\n   added upgrade step to do it for existing content\n   [bosim]\n \ndiff --git a/docs/advanced/event-handlers.rst b/docs/advanced/event-handlers.rst\nindex 2ff2ad3..87e28d4 100644\n--- a/docs/advanced/event-handlers.rst\n+++ b/docs/advanced/event-handlers.rst\n@@ -44,7 +44,7 @@ They are all object events.\n     The name the item held in the container is available as ``oldName``.\n \n ``OFS.interfaces.IObjectWillBeRemovedEvent``\n-    fired before an object is removed. Until here no deletion has happend.\n+    fired before an object is removed. Until here no deletion has happened.\n     It is also fired on move of an object (copy/paste).\n \n ``zope.lifecycleevent.interfaces.IObjectMovedEvent``\ndiff --git a/docs/advanced/permissions.rst b/docs/advanced/permissions.rst\nindex d3dbc6c..8723fb6 100644\n--- a/docs/advanced/permissions.rst\n+++ b/docs/advanced/permissions.rst\n@@ -109,7 +109,7 @@ In both cases,\n read and write permissions are annotated onto the schema using directives similar to those we\xe2\x80\x99ve already seen for form widget hints.\n The ``read_permission()`` and ``write_permission()`` directives are found in the `plone.autoform`_ package.\n \n-If XML-schemas are used for defintion see :ref:`Dexterity XML: security attributes <dexterity-xml-security>`.\n+If XML-schemas are used for definition see :ref:`Dexterity XML: security attributes <dexterity-xml-security>`.\n \n Simple example protecting a field to be readable for Site Administrators only::\n \ndiff --git a/docs/advanced/references.rst b/docs/advanced/references.rst\nindex e010f56..22428a8 100644\n--- a/docs/advanced/references.rst\n+++ b/docs/advanced/references.rst\n@@ -49,7 +49,7 @@ we can use the field directly in ``session.py``::\n \n .. Note::\n \n-    Remeber that `plone.app.relationfield`_ needs to be installed to use any\n+    Remember that `plone.app.relationfield`_ needs to be installed to use any\n     RelationChoice or RelationList field.\n \n To allow multiple items to be selected, we could have used a\ndiff --git a/docs/custom-views.rst b/docs/custom-views.rst\nindex 25817fb..02ef8b1 100644\n--- a/docs/custom-views.rst\n+++ b/docs/custom-views.rst\n@@ -67,7 +67,7 @@ You can add any methods to the view.\n They will be available to the template via the ``view`` variable.\n The content object is available via ``context``.\n \n-Finaly add a template in ``templates/programview.pt``:\n+Finally add a template in ``templates/programview.pt``:\n \n .. code-block:: html\n \ndiff --git a/docs/schema-driven-types.rst b/docs/schema-driven-types.rst\nindex 366c823..56cd6cc 100644\n--- a/docs/schema-driven-types.rst\n+++ b/docs/schema-driven-types.rst\n@@ -315,7 +315,7 @@ The important lines here are:\n    These are usually derived from Item or Container.\n -  We specify the name of an add permission.\n    The default ``cmf.AddPortalContent`` should be used unless you configure a custom permission.\n-   Custom permissions are convered later in this manual.\n+   Custom permissions are converted later in this manual.\n -  We add a *behavior*.\n    Behaviors are re-usable aspects providing semantics and/or schema fields.\n    Here, we add the ``INameFromTitle`` behavior, which will give our content object a readable id based on the ``title`` property. We\xe2\x80\x99ll cover other behaviors later.\ndiff --git a/plone/app/dexterity/factories.py b/plone/app/dexterity/factories.py\nindex f0bca28..5306021 100644\n--- a/plone/app/dexterity/factories.py\n+++ b/plone/app/dexterity/factories.py\n@@ -37,7 +37,7 @@ def __call__(self, name, content_type, data):\n             # This will suffice for standard p.a.contenttypes File/Image\n             # and any other custom type that would have \'File\' or \'Image\' in\n             # its type name\n-            # XXX heuristics are harmful behavior, here a better implemenation\n+            # XXX heuristics are harmful behavior, here a better implementation\n             #     is needed\n             filename = name\n             if "Image" in type_:\ndiff --git a/plone/app/dexterity/tests/test_constrains.py b/plone/app/dexterity/tests/test_constrains.py\nindex bb50b41..446756c 100644\n--- a/plone/app/dexterity/tests/test_constrains.py\n+++ b/plone/app/dexterity/tests/test_constrains.py\n@@ -459,20 +459,20 @@ def test_overview_item_view(self):\n \n     def test_overview_folder_item_view(self):\n         # First we access folder content types and check\n-        # that is possible to fiter content types (as it is a container)\n+        # that is possible to filter content types (as it is a container)\n         url = "/dexterity-types/folder/@@overview"\n         self.browser.open(self.portal_url + url)\n         self.assertTrue("Filter Contained Types" in self.browser.contents)\n         self.assertTrue("No content types" in self.browser.contents)\n \n         # Then we access item content types and check\n-        # that is NOT possible to fiter content types\n+        # that is NOT possible to filter content types\n         url = "/dexterity-types/item/@@overview"\n         self.browser.open(self.portal_url + url)\n         self.assertFalse("Filter Contained Types" in self.browser.contents)\n         self.assertFalse("No content types" in self.browser.contents)\n \n-        # Acessing folder content types again\n+        # Accessing folder content types again\n         # and it should be possible to filter content types\n         url = "/dexterity-types/folder/@@overview"\n         self.browser.open(self.portal_url + url)\ndiff --git a/plone/app/dexterity/textindexer/indexer.py b/plone/app/dexterity/textindexer/indexer.py\nindex 6c664f3..4d616a6 100644\n--- a/plone/app/dexterity/textindexer/indexer.py\n+++ b/plone/app/dexterity/textindexer/indexer.py\n@@ -64,7 +64,7 @@ def dynamic_searchable_text_indexer(obj):\n                 widget = get_field_widget(obj, form_field, request)\n             except TypeError:\n                 # Some times the field value is wrong, then the converter\n-                # failes. We should not fail, so we catch this error.\n+                # fails. We should not fail, so we catch this error.\n                 continue\n \n             # get the converter for this field / widget\ndiff --git a/plone/app/dexterity/textindexer/interfaces.py b/plone/app/dexterity/textindexer/interfaces.py\nindex 03340ea..cd94f91 100644\n--- a/plone/app/dexterity/textindexer/interfaces.py\n+++ b/plone/app/dexterity/textindexer/interfaces.py\n@@ -1,6 +1,6 @@\n """\n IDexterityTextIndexFieldConverter  field converter adapter interface\n-IDynamicTextIndexExtender          dynmaic text extender adapter interface\n+IDynamicTextIndexExtender          dynamic text extender adapter interface\n """\n \n from zope.interface import Interface\ndiff --git a/plone/app/dexterity/upgrades/configure.zcml b/plone/app/dexterity/upgrades/configure.zcml\nindex 87e0874..12ed234 100644\n--- a/plone/app/dexterity/upgrades/configure.zcml\n+++ b/plone/app/dexterity/upgrades/configure.zcml\n@@ -54,7 +54,7 @@\n       />\n \n   <genericsetup:upgradeStep\n-      title="Remove line feeds and carrige returns from the description"\n+      title="Remove line feeds and carriage returns from the description"\n       profile="plone.app.dexterity:default"\n       source="2003"\n       destination="2004"\n'

Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2023-03-26T17:34:29+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.dexterity/commit/42775a6d842ae1836626ee0474d3d3fc778030c8

feat: adapt tests to zpretty

Files changed:
M plone/app/dexterity/tests/editing.rst

b'diff --git a/plone/app/dexterity/tests/editing.rst b/plone/app/dexterity/tests/editing.rst\nindex 514f665..8e653da 100644\n--- a/plone/app/dexterity/tests/editing.rst\n+++ b/plone/app/dexterity/tests/editing.rst\n@@ -170,7 +170,7 @@ Go there and find the XML model source in a textarea, ready to be edited\n (with JavaScript enabled, this should show pat-code-editor instead of the textarea)::\n \n   >>> browser.open(\'http://nohost/plone/dexterity-types/plonista/@@modeleditor\')\n-  >>> \'<textarea name="source"\' in browser.contents\n+  >>> \'<textarea class="modeleditor__source pat-code-editor language-xml" name="source">\' in browser.contents\n   True\n \n   >>> \'&lt;schema&gt;\' in browser.contents\n'

Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2023-03-26T17:34:29+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.dexterity/commit/d4867ce3eba4364052e7e4a546860dda6c80410a

chore: drop p.a.imaging dependency

Files changed:
M plone/app/dexterity/configure.zcml

b'diff --git a/plone/app/dexterity/configure.zcml b/plone/app/dexterity/configure.zcml\nindex 2bf27a7..f2396b2 100644\n--- a/plone/app/dexterity/configure.zcml\n+++ b/plone/app/dexterity/configure.zcml\n@@ -7,10 +7,6 @@\n     i18n_domain="plone"\n     >\n \n-  <include\n-      package="plone.app.imaging"\n-      zcml:condition="installed plone.app.imaging"\n-      />\n   <include package="plone.app.vocabularies" />\n   <include package="plone.app.z3cform" />\n   <include package="plone.app.textfield" />\n'

Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2023-03-26T17:34:29+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.dexterity/commit/abb58b9610977ca9553aa3aceda99f68a361d5d5

cleanup: remove test that depends on CMFQuickInstallerTool

Since Plone 5.1 it has been deprecated and on 6.0 removed.

Files changed:
M plone/app/dexterity/tests/test_upgrades.py

b'diff --git a/plone/app/dexterity/tests/test_upgrades.py b/plone/app/dexterity/tests/test_upgrades.py\nindex eb9abdd..e285f40 100644\n--- a/plone/app/dexterity/tests/test_upgrades.py\n+++ b/plone/app/dexterity/tests/test_upgrades.py\n@@ -38,24 +38,3 @@ def test_add_missing_uuids(self):\n         add_missing_uuids(self.layer["portal"])\n         uuid2 = IUUID(page, None)\n         self.assertEqual(uuid2, uuid, "Upgrade changes existing uuids.")\n-\n-    def test_upgrade_2003(self):\n-        from plone.app.dexterity.upgrades.to2003 import fix_installed_products\n-        from Products.CMFCore.utils import getToolByName\n-\n-        try:\n-            from Products.CMFQuickInstallerTool.InstalledProduct import InstalledProduct\n-        except ImportError:\n-            # nothing to test\n-            return\n-        qi = getToolByName(self.layer["portal"], "portal_quickinstaller", None)\n-        if qi is None:\n-            # nothing to test\n-            return\n-        ip = InstalledProduct("foo")\n-        ip.utilities = [("zope.intid.interfaces.IIntIds", "")]\n-        qi._setObject("foo", ip)\n-\n-        fix_installed_products(self.layer["portal"])\n-\n-        self.assertEqual([], ip.utilities)\n'

Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2023-03-26T17:34:29+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.dexterity/commit/c8cc69aa2a112cf91724f7f573a9544a2d99ede5

feat: configure z3c.dependencychecker

Files changed:
M pyproject.toml

b'diff --git a/pyproject.toml b/pyproject.toml\nindex e655fdf..ccd37af 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -60,6 +60,7 @@ Zope = [\n   \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n ]\n python-dateutil = [\'dateutil\']\n+ignore-packages = ["plone.app.relationfield", "plone.directives.form", "plone.directives.dexterity", "five.grok", "plone.app.intid", "plone.contentrules", "plone.schema", "z3c.relationfield"]\n \n [tool.codespell]\n ignore-words-list = "discreet,hove"\n'

Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2023-03-26T17:34:29+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.dexterity/commit/094d6c081c20e4925dd6202c6bb683c3fae22a31

feat: declare dependencies

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex 80923b7..537b2f8 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -57,32 +57,39 @@\n         "plone.schemaeditor >1.3.3",\n         # Plone/Zope core\n         "lxml",\n+        "plone.base",\n         "plone.app.content",\n         "plone.app.layout",\n         "plone.app.uuid",\n         "plone.app.z3cform>=1.1.0",\n         "plone.autoform>=1.1",\n         "plone.contentrules",\n-        "plone.portlets",\n         "plone.schema>=1.1.0",\n         "plone.supermodel>=1.1",\n         "plone.z3cform>=0.6.0",\n-        "Products.CMFCore",\n         "Products.GenericSetup",\n         "setuptools",\n         "Zope",\n         "zope.browserpage",\n-        "zope.interface",\n-        "zope.component",\n-        "zope.deprecation",\n-        "zope.schema",\n-        "zope.publisher",\n         "z3c.form>=3.0.0",\n+        "Products.statusmessages",\n+        "plone.app.vocabularies",\n+        "plone.indexer",\n+        "plone.locking",\n+        "plone.registry",\n+        "plone.uuid",\n+        "zope.cachedescriptors",\n+        "zope.dottedname",\n+        "zope.filerepresentation",\n     ],\n     extras_require={\n         "test": [\n             "plone.app.robotframework",\n             "plone.app.testing",\n+            "plone.app.discussion",\n+            "plone.i18n",\n+            "plone.testing",\n+            "robotsuite",\n         ],\n         "grok": [\n             "five.grok",\n'

Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2023-03-29T15:10:47+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.dexterity/commit/19c282118980407c2f61adc8a5a0952da37f2a2e

Merge pull request #361 from plone/config-with-default-template-f57211d2

Config with default template

Files changed:
A .editorconfig
A .meta.toml
A .pre-commit-config.yaml
A news/47959565.internal
A tox.ini
M CHANGES.rst
M docs/advanced/event-handlers.rst
M docs/advanced/permissions.rst
M docs/advanced/references.rst
M docs/conf.py
M docs/custom-views.rst
M docs/schema-driven-types.rst
M plone/app/dexterity/__init__.py
M plone/app/dexterity/behaviors/configure.zcml
M plone/app/dexterity/behaviors/discussion.py
M plone/app/dexterity/behaviors/id.py
M plone/app/dexterity/behaviors/metadata.py
M plone/app/dexterity/behaviors/tests/test_id.py
M plone/app/dexterity/browser/add_type.py
M plone/app/dexterity/browser/behaviors.pt
M plone/app/dexterity/browser/behaviors.py
M plone/app/dexterity/browser/clone_type.py
M plone/app/dexterity/browser/configure.zcml
M plone/app/dexterity/browser/container.pt
M plone/app/dexterity/browser/default_page_warning.pt
M plone/app/dexterity/browser/export.py
M plone/app/dexterity/browser/folder_listing.pt
M plone/app/dexterity/browser/import_types.py
M plone/app/dexterity/browser/item.pt
M plone/app/dexterity/browser/layout.py
M plone/app/dexterity/browser/modeleditor.pt
M plone/app/dexterity/browser/overview.pt
M plone/app/dexterity/browser/tabbed_forms.pt
M plone/app/dexterity/browser/types.py
M plone/app/dexterity/browser/types_listing.pt
M plone/app/dexterity/browser/types_listing_row.pt
M plone/app/dexterity/browser/typesformwrapper.pt
M plone/app/dexterity/configure.zcml
M plone/app/dexterity/events.zcml
M plone/app/dexterity/factories.py
M plone/app/dexterity/interfaces.py
M plone/app/dexterity/meta.zcml
M plone/app/dexterity/overrides.zcml
M plone/app/dexterity/profiles/default/controlpanel.xml
M plone/app/dexterity/profiles/default/metadata.xml
M plone/app/dexterity/profiles/testing/metadata.xml
M plone/app/dexterity/profiles/testing/types.xml
M plone/app/dexterity/profiles/testing/types/Document.xml
M plone/app/dexterity/profiles/testing/types/Folder.xml
M plone/app/dexterity/tests/editing.rst
M plone/app/dexterity/tests/test_constrains.py
M plone/app/dexterity/tests/test_doctests.py
M plone/app/dexterity/tests/test_permissions.py
M plone/app/dexterity/tests/test_upgrades.py
M plone/app/dexterity/textindexer/configure.zcml
M plone/app/dexterity/textindexer/indexer.py
M plone/app/dexterity/textindexer/interfaces.py
M plone/app/dexterity/textindexer/schemaeditor.py
M plone/app/dexterity/textindexer/testing.py
M plone/app/dexterity/textindexer/tests/configure.zcml
M plone/app/dexterity/textindexer/tests/test_behaviors.py
M plone/app/dexterity/textindexer/tests/test_schemaeditor.py
M plone/app/dexterity/textindexer/tests/test_supermodel_handler.py
M plone/app/dexterity/textindexer/tests/test_utils.py
M plone/app/dexterity/upgrades/configure.zcml
M plone/app/dexterity/upgrades/to2004.py
M pyproject.toml
M setup.cfg
M setup.py
D .tx/config
D bootstrap.py
D buildout.cfg

b'diff --git a/.editorconfig b/.editorconfig\nnew file mode 100644\nindex 00000000..b4158b89\n--- /dev/null\n+++ b/.editorconfig\n@@ -0,0 +1,39 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+#\n+# EditorConfig Configuration file, for more details see:\n+# http://EditorConfig.org\n+# EditorConfig is a convention description, that could be interpreted\n+# by multiple editors to enforce common coding conventions for specific\n+# file types\n+\n+# top-most EditorConfig file:\n+# Will ignore other EditorConfig files in Home directory or upper tree level.\n+root = true\n+\n+\n+[*]  # For All Files\n+# Unix-style newlines with a newline ending every file\n+end_of_line = lf\n+insert_final_newline = true\n+trim_trailing_whitespace = true\n+# Set default charset\n+charset = utf-8\n+# Indent style default\n+indent_style = space\n+# Max Line Length - a hard line wrap, should be disabled\n+max_line_length = off\n+\n+[*.{py,cfg,ini}]\n+# 4 space indentation\n+indent_size = 4\n+\n+[*.{yml,zpt,pt,dtml,zcml}]\n+# 2 space indentation\n+indent_size = 2\n+\n+[{Makefile,.gitmodules}]\n+# Tab indentation (no size specified, but view as 4 spaces)\n+indent_style = tab\n+indent_size = unset\n+tab_width = unset\ndiff --git a/.meta.toml b/.meta.toml\nnew file mode 100644\nindex 00000000..07dde259\n--- /dev/null\n+++ b/.meta.toml\n@@ -0,0 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[meta]\n+template = "default"\n+commit-id = "47959565"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nnew file mode 100644\nindex 00000000..582f8acd\n--- /dev/null\n+++ b/.pre-commit-config.yaml\n@@ -0,0 +1,42 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+ci:\n+    autofix_prs: false\n+    autoupdate_schedule: monthly\n+\n+repos:\n+-   repo: https://github.com/asottile/pyupgrade\n+    rev: v3.3.1\n+    hooks:\n+    -   id: pyupgrade\n+        args: [--py38-plus]\n+-   repo: https://github.com/pycqa/isort\n+    rev: 5.12.0\n+    hooks:\n+    -   id: isort\n+-   repo: https://github.com/psf/black\n+    rev: 23.1.0\n+    hooks:\n+    -   id: black\n+-   repo: https://github.com/collective/zpretty\n+    rev: 3.0.2\n+    hooks:\n+    -   id: zpretty\n+-   repo: https://github.com/PyCQA/flake8\n+    rev: 6.0.0\n+    hooks:\n+    -   id: flake8\n+-   repo: https://github.com/codespell-project/codespell\n+    rev: v2.2.2\n+    hooks:\n+    -   id: codespell\n+        additional_dependencies:\n+          - tomli\n+-   repo: https://github.com/mgedmin/check-manifest\n+    rev: "0.49"\n+    hooks:\n+    -   id: check-manifest\n+-   repo: https://github.com/regebro/pyroma\n+    rev: "4.2"\n+    hooks:\n+    -   id: pyroma\ndiff --git a/.tx/config b/.tx/config\ndeleted file mode 100644\nindex e87b8d04..00000000\n--- a/.tx/config\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-[main]\n-host = https://www.transifex.com\n-type = PO\n-\n-[plone.ploneappdexterity]\n-file_filter = plone/app/dexterity/locales/<lang>/LC_MESSAGES/plone.app.dexterity.po\n-source_file = plone/app/dexterity/locales/plone.app.dexterity.pot\n-source_lang = en\n-type = PO\n-\ndiff --git a/CHANGES.rst b/CHANGES.rst\nindex 1f8be544..df4ffc4f 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -95,7 +95,7 @@ Bug fixes:\n \n - Rename "Dexterity Content Types" to just "Content Types"\n   [tisto] (#331)\n-- Don\'t acquire lanuage from portal root default_language for ICategorization.language.\n+- Don\'t acquire language from portal root default_language for ICategorization.language.\n   Fixes https://github.com/plone/plone.app.dexterity/issues/258\n   [jaroel] (#350)\n \n@@ -492,7 +492,7 @@ Bug fixes:\n - removed deprecated getIcon() from documentation\n   [fgrcon]\n \n-- JavaScript formating according to style guides.\n+- JavaScript formatting according to style guides.\n   [thet]\n \n \n@@ -875,7 +875,7 @@ Fixes:\n - Add validator to ensure expires date is after effective date.\n   [benniboy]\n \n-- Remove line feeds and carrige returns from meta description and\n+- Remove line feeds and carriage returns from meta description and\n   added upgrade step to do it for existing content\n   [bosim]\n \ndiff --git a/bootstrap.py b/bootstrap.py\ndeleted file mode 100644\nindex dbd50b3e..00000000\n--- a/bootstrap.py\n+++ /dev/null\n@@ -1,211 +0,0 @@\n-##############################################################################\n-#\n-# Copyright (c) 2006 Zope Foundation and Contributors.\n-# All Rights Reserved.\n-#\n-# This software is subject to the provisions of the Zope Public License,\n-# Version 2.1 (ZPL).  A copy of the ZPL should accompany this distribution.\n-# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY AND ALL EXPRESS OR IMPLIED\n-# WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n-# WARRANTIES OF TITLE, MERCHANTABILITY, AGAINST INFRINGEMENT, AND FITNESS\n-# FOR A PARTICULAR PURPOSE.\n-#\n-##############################################################################\n-"""Bootstrap a buildout-based project\n-\n-Simply run this script in a directory containing a buildout.cfg.\n-The script accepts buildout command-line options, so you can\n-use the -c option to specify an alternate configuration file.\n-"""\n-\n-from optparse import OptionParser\n-\n-import os\n-import shutil\n-import sys\n-import tempfile\n-\n-\n-tmpeggs = tempfile.mkdtemp()\n-\n-usage = """\\\n-[DESIRED PYTHON FOR BUILDOUT] bootstrap.py [options]\n-\n-Bootstraps a buildout-based project.\n-\n-Simply run this script in a directory containing a buildout.cfg, using the\n-Python that you want bin/buildout to use.\n-\n-Note that by using --find-links to point to local resources, you can keep\n-this script from going over the network.\n-"""\n-\n-parser = OptionParser(usage=usage)\n-parser.add_option("-v", "--version", help="use a specific zc.buildout version")\n-\n-parser.add_option(\n-    "-t",\n-    "--accept-buildout-test-releases",\n-    dest="accept_buildout_test_releases",\n-    action="store_true",\n-    default=False,\n-    help=(\n-        "Normally, if you do not specify a --version, the "\n-        "bootstrap script and buildout gets the newest "\n-        "*final* versions of zc.buildout and its recipes and "\n-        "extensions for you.  If you use this flag, "\n-        "bootstrap and buildout will get the newest releases "\n-        "even if they are alphas or betas."\n-    ),\n-)\n-parser.add_option(\n-    "-c",\n-    "--config-file",\n-    help=("Specify the path to the buildout configuration " "file to be used."),\n-)\n-parser.add_option(\n-    "-f", "--find-links", help=("Specify a URL to search for buildout releases")\n-)\n-parser.add_option(\n-    "--allow-site-packages",\n-    action="store_true",\n-    default=False,\n-    help=("Let bootstrap.py use existing site packages"),\n-)\n-parser.add_option("--setuptools-version", help="use a specific setuptools version")\n-\n-\n-options, args = parser.parse_args()\n-\n-######################################################################\n-# load/install setuptools\n-\n-try:\n-    if options.allow_site_packages:\n-        import setuptools\n-        import pkg_resources\n-    from urllib.request import urlopen\n-except ImportError:\n-    from urllib2 import urlopen\n-\n-ez = {}\n-exec(urlopen("https://bootstrap.pypa.io/ez_setup.py").read(), ez)\n-\n-if not options.allow_site_packages:\n-    # ez_setup imports site, which adds site packages\n-    # this will remove them from the path to ensure that incompatible versions\n-    # of setuptools are not in the path\n-    import site\n-\n-    # inside a virtualenv, there is no \'getsitepackages\'.\n-    # We can\'t remove these reliably\n-    if hasattr(site, "getsitepackages"):\n-        for sitepackage_path in site.getsitepackages():\n-            sys.path[:] = [x for x in sys.path if sitepackage_path not in x]\n-\n-setup_args = dict(to_dir=tmpeggs, download_delay=0)\n-\n-if options.setuptools_version is not None:\n-    setup_args["version"] = options.setuptools_version\n-\n-ez["use_setuptools"](**setup_args)\n-import pkg_resources\n-import setuptools\n-\n-\n-# This does not (always?) update the default working set.  We will\n-# do it.\n-for path in sys.path:\n-    if path not in pkg_resources.working_set.entries:\n-        pkg_resources.working_set.add_entry(path)\n-\n-######################################################################\n-# Install buildout\n-\n-ws = pkg_resources.working_set\n-\n-cmd = [\n-    sys.executable,\n-    "-c",\n-    "from setuptools.command.easy_install import main; main()",\n-    "-mZqNxd",\n-    tmpeggs,\n-]\n-\n-find_links = os.environ.get(\n-    "bootstrap-testing-find-links",\n-    options.find_links\n-    or (\n-        "http://downloads.buildout.org/"\n-        if options.accept_buildout_test_releases\n-        else None\n-    ),\n-)\n-if find_links:\n-    cmd.extend(["-f", find_links])\n-\n-setuptools_path = ws.find(pkg_resources.Requirement.parse("setuptools")).location\n-\n-requirement = "zc.buildout"\n-version = options.version\n-if version is None and not options.accept_buildout_test_releases:\n-    # Figure out the most recent final version of zc.buildout.\n-    import setuptools.package_index\n-\n-    _final_parts = "*final-", "*final"\n-\n-    def _final_version(parsed_version):\n-        try:\n-            return not parsed_version.is_prerelease\n-        except AttributeError:\n-            # Older setuptools\n-            for part in parsed_version:\n-                if (part[:1] == "*") and (part not in _final_parts):\n-                    return False\n-            return True\n-\n-    index = setuptools.package_index.PackageIndex(search_path=[setuptools_path])\n-    if find_links:\n-        index.add_find_links((find_links,))\n-    req = pkg_resources.Requirement.parse(requirement)\n-    if index.obtain(req) is not None:\n-        best = []\n-        bestv = None\n-        for dist in index[req.project_name]:\n-            distv = dist.parsed_version\n-            if _final_version(distv):\n-                if bestv is None or distv > bestv:\n-                    best = [dist]\n-                    bestv = distv\n-                elif distv == bestv:\n-                    best.append(dist)\n-        if best:\n-            best.sort()\n-            version = best[-1].version\n-if version:\n-    requirement = "==".join((requirement, version))\n-cmd.append(requirement)\n-\n-import subprocess\n-\n-\n-if subprocess.call(cmd, env=dict(os.environ, PYTHONPATH=setuptools_path)) != 0:\n-    raise Exception("Failed to execute command:\\n%s" % repr(cmd)[1:-1])\n-\n-######################################################################\n-# Import and run buildout\n-\n-ws.add_entry(tmpeggs)\n-ws.require(requirement)\n-import zc.buildout.buildout\n-\n-\n-if not [a for a in args if "=" not in a]:\n-    args.append("bootstrap")\n-\n-# if -c was provided, we push it back into args for buildout\' main function\n-if options.config_file is not None:\n-    args[0:0] = ["-c", options.config_file]\n-\n-zc.buildout.buildout.main(args)\n-shutil.rmtree(tmpeggs)\ndiff --git a/buildout.cfg b/buildout.cfg\ndeleted file mode 100644\nindex 7f41d560..00000000\n--- a/buildout.cfg\n+++ /dev/null\n@@ -1,12 +0,0 @@\n-[buildout]\n-extends = https://raw.githubusercontent.com/collective/buildout.plonetest/master/test-5.x.cfg\n-package-name = plone.app.dexterity\n-package-extras = [test]\n-parts += omelette\n-\n-[versions]\n-plone.app.dexterity =\n-\n-[omelette]\n-recipe = collective.recipe.omelette\n-eggs = ${test:eggs}\ndiff --git a/docs/advanced/event-handlers.rst b/docs/advanced/event-handlers.rst\nindex 2ff2ad32..87e28d44 100644\n--- a/docs/advanced/event-handlers.rst\n+++ b/docs/advanced/event-handlers.rst\n@@ -44,7 +44,7 @@ They are all object events.\n     The name the item held in the container is available as ``oldName``.\n \n ``OFS.interfaces.IObjectWillBeRemovedEvent``\n-    fired before an object is removed. Until here no deletion has happend.\n+    fired before an object is removed. Until here no deletion has happened.\n     It is also fired on move of an object (copy/paste).\n \n ``zope.lifecycleevent.interfaces.IObjectMovedEvent``\ndiff --git a/docs/advanced/permissions.rst b/docs/advanced/permissions.rst\nindex d3dbc6cb..8723fb65 100644\n--- a/docs/advanced/permissions.rst\n+++ b/docs/advanced/permissions.rst\n@@ -109,7 +109,7 @@ In both cases,\n read and write permissions are annotated onto the schema using directives similar to those we\xe2\x80\x99ve already seen for form widget hints.\n The ``read_permission()`` and ``write_permission()`` directives are found in the `plone.autoform`_ package.\n \n-If XML-schemas are used for defintion see :ref:`Dexterity XML: security attributes <dexterity-xml-security>`.\n+If XML-schemas are used for definition see :ref:`Dexterity XML: security attributes <dexterity-xml-security>`.\n \n Simple example protecting a field to be readable for Site Administrators only::\n \ndiff --git a/docs/advanced/references.rst b/docs/advanced/references.rst\nindex e010f567..22428a81 100644\n--- a/docs/advanced/references.rst\n+++ b/docs/advanced/references.rst\n@@ -49,7 +49,7 @@ we can use the field directly in ``session.py``::\n \n .. Note::\n \n-    Remeber that `plone.app.relationfield`_ needs to be installed to use any\n+    Remember that `plone.app.relationfield`_ needs to be installed to use any\n     RelationChoice or RelationList field.\n \n To allow multiple items to be selected, we could have used a\ndiff --git a/docs/conf.py b/docs/conf.py\nindex 60c63f50..390302ec 100644\n--- a/docs/conf.py\n+++ b/docs/conf.py\n@@ -10,10 +10,6 @@\n # All configuration values have a default; values that are commented out\n # serve to show the default.\n \n-import os\n-import sys\n-\n-\n # If extensions (or modules to document with autodoc) are in another directory,\n # add these directories to sys.path here. If the directory is relative to the\n # documentation root, use os.path.abspath to make it absolute, like shown here.\ndiff --git a/docs/custom-views.rst b/docs/custom-views.rst\nindex 25817fb2..02ef8b16 100644\n--- a/docs/custom-views.rst\n+++ b/docs/custom-views.rst\n@@ -67,7 +67,7 @@ You can add any methods to the view.\n They will be available to the template via the ``view`` variable.\n The content object is available via ``context``.\n \n-Finaly add a template in ``templates/programview.pt``:\n+Finally add a template in ``templates/programview.pt``:\n \n .. code-block:: html\n \ndiff --git a/docs/schema-driven-types.rst b/docs/schema-driven-types.rst\nindex 366c8232..56cd6ccc 100644\n--- a/docs/schema-driven-types.rst\n+++ b/docs/schema-driven-types.rst\n@@ -315,7 +315,7 @@ The important lines here are:\n    These are usually derived from Item or Container.\n -  We specify the name of an add permission.\n    The default ``cmf.AddPortalContent`` should be used unless you configure a custom permission.\n-   Custom permissions are convered later in this manual.\n+   Custom permissions are converted later in this manual.\n -  We add a *behavior*.\n    Behaviors are re-usable aspects providing semantics and/or schema fields.\n    Here, we add the ``INameFromTitle`` behavior, which will give our content object a readable id based on the ``title`` property. We\xe2\x80\x99ll cover other behaviors later.\ndiff --git a/news/47959565.internal b/news/47959565.internal\nnew file mode 100644\nindex 00000000..c08f5399\n--- /dev/null\n+++ b/news/47959565.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/plone/app/dexterity/__init__.py b/plone/app/dexterity/__init__.py\nindex 38bb5a77..8efe8b3c 100644\n--- a/plone/app/dexterity/__init__.py\n+++ b/plone/app/dexterity/__init__.py\n@@ -1,6 +1,4 @@\n-from zope.i18nmessageid import MessageFactory as ZMessageFactory\n+from zope.i18nmessageid import MessageFactory\n \n-import warnings\n \n-\n-_ = ZMessageFactory("plone")\n+_ = MessageFactory("plone")\ndiff --git a/plone/app/dexterity/behaviors/configure.zcml b/plone/app/dexterity/behaviors/configure.zcml\nindex 85255a09..d2eae5ae 100644\n--- a/plone/app/dexterity/behaviors/configure.zcml\n+++ b/plone/app/dexterity/behaviors/configure.zcml\n@@ -2,56 +2,60 @@\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:plone="http://namespaces.plone.org/plone"\n     xmlns:zcml="http://namespaces.zope.org/zcml"\n-    i18n_domain="plone">\n+    i18n_domain="plone"\n+    >\n \n-  <include package="plone.behavior" file="meta.zcml"/>\n+  <include\n+      package="plone.behavior"\n+      file="meta.zcml"\n+      />\n \n   <!-- vocabularies -->\n-  <include package="plone.app.vocabularies"/>\n+  <include package="plone.app.vocabularies" />\n \n   <!-- Metadata -->\n   <plone:behavior\n       name="plone.basic"\n       title="Basic metadata"\n       description="Adds title and description fields."\n-      provides=".metadata.IBasic"\n       factory=".metadata.Basic"\n+      provides=".metadata.IBasic"\n       for="plone.dexterity.interfaces.IDexterityContent"\n       />\n   <plone:behavior\n-      title="Categorization"\n       name="plone.categorization"\n+      title="Categorization"\n       description="Adds keywords and language fields."\n-      provides=".metadata.ICategorization"\n       factory=".metadata.Categorization"\n+      provides=".metadata.ICategorization"\n       for="plone.dexterity.interfaces.IDexterityContent"\n       />\n   <plone:behavior\n       name="plone.publication"\n       title="Date range"\n       description="Adds effective date and expiration date fields."\n-      provides=".metadata.IPublication"\n       factory=".metadata.Publication"\n+      provides=".metadata.IPublication"\n       for="plone.dexterity.interfaces.IDexterityContent"\n       />\n   <plone:behavior\n       name="plone.ownership"\n       title="Ownership"\n       description="Adds creator, contributor, and rights fields."\n-      provides=".metadata.IOwnership"\n       factory=".metadata.Ownership"\n+      provides=".metadata.IOwnership"\n       for="plone.dexterity.interfaces.IDexterityContent"\n       />\n   <adapter\n-      name="default"\n       factory=".metadata.CreatorsDefaultValue"\n+      name="default"\n       />\n   <plone:behavior\n       name="plone.dublincore"\n       title="Dublin Core metadata"\n       description="Adds standard metadata fields (equals Basic metadata + Categorization + Effective range + Ownership)"\n-      provides=".metadata.IDublinCore"\n       factory=".metadata.DublinCore"\n+      provides=".metadata.IDublinCore"\n       for="plone.dexterity.interfaces.IDexterityContent"\n       />\n \n@@ -89,8 +93,8 @@\n       provides=".exclfromnav.IExcludeFromNavigation"\n       />\n   <adapter\n-      for="*"\n       factory=".exclfromnav.default_exclude_false"\n+      for="*"\n       />\n \n   <!-- Next previous -->\n@@ -113,7 +117,8 @@\n \n   <adapter\n       factory=".nextprevious.DefaultNextPreviousEnabled"\n-      name="default" />\n+      name="default"\n+      />\n \n   <plone:behavior\n       name="plone.nextpreviousenabled"\n@@ -129,8 +134,8 @@\n       name="plone.constraintypes"\n       title="Folder Addable Constrains"\n       description="Restrict the content types that can be added to folderish content"\n-      provides="plone.base.interfaces.constrains.ISelectableConstrainTypes"\n       factory=".constrains.ConstrainTypesBehavior"\n+      provides="plone.base.interfaces.constrains.ISelectableConstrainTypes"\n       for="plone.dexterity.interfaces.IDexterityContainer"\n       />\n \n@@ -147,9 +152,11 @@\n   <!-- BBB -->\n   <configure zcml:condition="installed plone.app.relationfield">\n     <include package="plone.app.relationfield" />\n-    <utility factory=".related.related_items_behavior_BBB"\n-             provides="plone.behavior.interfaces.IBehavior"\n-             name="plone.app.dexterity.behaviors.related.IRelatedItems"/>\n+    <utility\n+        factory=".related.related_items_behavior_BBB"\n+        provides="plone.behavior.interfaces.IBehavior"\n+        name="plone.app.dexterity.behaviors.related.IRelatedItems"\n+        />\n   </configure>\n \n </configure>\ndiff --git a/plone/app/dexterity/behaviors/discussion.py b/plone/app/dexterity/behaviors/discussion.py\nindex 041bd971..bdc2d8d8 100644\n--- a/plone/app/dexterity/behaviors/discussion.py\n+++ b/plone/app/dexterity/behaviors/discussion.py\n@@ -20,7 +20,6 @@\n \n @provider(IFormFieldProvider)\n class IAllowDiscussion(model.Schema):\n-\n     model.fieldset(\n         "settings",\n         label=_("Settings"),\ndiff --git a/plone/app/dexterity/behaviors/id.py b/plone/app/dexterity/behaviors/id.py\nindex 22ded847..0e64f3b0 100644\n--- a/plone/app/dexterity/behaviors/id.py\n+++ b/plone/app/dexterity/behaviors/id.py\n@@ -15,7 +15,6 @@\n \n @provider(IFormFieldProvider)\n class IShortName(model.Schema):\n-\n     model.fieldset(\n         "settings",\n         label=_("Settings"),\ndiff --git a/plone/app/dexterity/behaviors/metadata.py b/plone/app/dexterity/behaviors/metadata.py\nindex 6c758676..bdb33891 100644\n--- a/plone/app/dexterity/behaviors/metadata.py\n+++ b/plone/app/dexterity/behaviors/metadata.py\n@@ -39,8 +39,10 @@ def default_language(context):\n     language = None\n \n     # Try to get the language from context or parent(s)\n-    while not language and context is not None and not IPloneSiteRoot.providedBy(context):\n-        language = getattr(context.aq_base, \'language\', None)\n+    while (\n+        not language and context is not None and not IPloneSiteRoot.providedBy(context)\n+    ):\n+        language = getattr(context.aq_base, "language", None)\n \n         if not language:\n             # If we are here, it means we were editing an object that didn\'t\n@@ -49,7 +51,7 @@ def default_language(context):\n             # parent.\n             context = context.__parent__\n \n-    language_tool = getToolByName(getSite(), \'portal_languages\')\n+    language_tool = getToolByName(getSite(), "portal_languages")\n     default_language = language_tool.getDefaultLanguage()\n \n     if not language:\n@@ -64,7 +66,6 @@ def default_language(context):\n \n @provider(IFormFieldProvider)\n class IBasic(model.Schema):\n-\n     # default fieldset\n     title = schema.TextLine(title=_("label_title", default="Title"), required=True)\n \n@@ -87,7 +88,6 @@ class IBasic(model.Schema):\n \n @provider(IFormFieldProvider)\n class ICategorization(model.Schema):\n-\n     # categorization fieldset\n     model.fieldset(\n         "categorization",\n@@ -177,7 +177,6 @@ def validate_start_end(data):\n \n @provider(IFormFieldProvider)\n class IOwnership(model.Schema):\n-\n     # ownership fieldset\n     model.fieldset(\n         "ownership",\ndiff --git a/plone/app/dexterity/behaviors/tests/test_id.py b/plone/app/dexterity/behaviors/tests/test_id.py\nindex b003337d..ed7d0e33 100644\n--- a/plone/app/dexterity/behaviors/tests/test_id.py\n+++ b/plone/app/dexterity/behaviors/tests/test_id.py\n@@ -9,7 +9,6 @@\n \n \n class TestShortNameBehavior(unittest.TestCase):\n-\n     layer = DEXTERITY_FUNCTIONAL_TESTING\n \n     def setUp(self):\ndiff --git a/plone/app/dexterity/browser/add_type.py b/plone/app/dexterity/browser/add_type.py\nindex c46ab33f..37e905c1 100644\n--- a/plone/app/dexterity/browser/add_type.py\n+++ b/plone/app/dexterity/browser/add_type.py\n@@ -9,7 +9,6 @@\n \n \n class TypeAddForm(form.AddForm):\n-\n     label = _("Add Content Type")\n     fields = field.Fields(ITypeSettings).select("title", "id", "description")\n     id = "add-type-form"\ndiff --git a/plone/app/dexterity/browser/behaviors.pt b/plone/app/dexterity/browser/behaviors.pt\nindex 6fe93b75..52bfb256 100644\n--- a/plone/app/dexterity/browser/behaviors.pt\n+++ b/plone/app/dexterity/browser/behaviors.pt\n@@ -1,38 +1,60 @@\n <tal:root>\n-<div class="portalMessage" tal:condition="view/status" tal:content="view/status"></div>\n+  <div class="portalMessage"\n+       tal:condition="view/status"\n+       tal:content="view/status"\n+  ></div>\n \n-<form action="." method="post" tal:attributes="action request/getURL; enctype view/enctype">\n-<tal:widgets repeat="widget view/widgets/values|nothing">\n+  <form action="."\n+        method="post"\n+        tal:attributes="\n+          action request/getURL;\n+          enctype view/enctype;\n+        "\n+  >\n+    <tal:widgets repeat="widget view/widgets/values|nothing">\n \n-  <div class="field"\n-       tal:define="error widget/error;\n-                   hidden python:widget.mode == \'hidden\'"\n-       tal:attributes="class python:\'mb-3 field\' + (error and \'alert alert-warning\' or \'\')">\n+      <div class="field"\n+           tal:define="\n+             error widget/error;\n+             hidden python:widget.mode == \'hidden\';\n+           "\n+           tal:attributes="\n+             class python:\'mb-3 field\' + (error and \'alert alert-warning\' or \'\');\n+           "\n+      >\n \n-    <span class="fieldRequired" title="Required"\n-          tal:condition="python:widget.required and not hidden"\n-          i18n:translate="label_required"\n-          i18n:attributes="title title_required;">\n+        <span class="fieldRequired"\n+              title="Required"\n+              tal:condition="python:widget.required and not hidden"\n+              i18n:attributes="title title_required;"\n+              i18n:translate="label_required"\n+        >\n       (Required)\n-    </span>\n+        </span>\n \n-    <div tal:condition="error" tal:content="structure error/render">\n+        <div tal:condition="error"\n+             tal:content="structure error/render"\n+        >\n       Error\n-    </div>\n+        </div>\n \n-    <div class="widget">\n-      <input type="text" tal:replace="structure widget/render" />\n-      <div class="form-text"\n-        tal:define="description widget/field/description"\n-        i18n:translate=""\n-        tal:content="description"\n-        tal:condition="python:description and not hidden"\n-        >field description\n+        <div class="widget">\n+          <input type="text"\n+                 tal:replace="structure widget/render"\n+          />\n+          <div class="form-text"\n+               tal:define="\n+                 description widget/field/description;\n+               "\n+               tal:condition="python:description and not hidden"\n+               tal:content="description"\n+               i18n:translate=""\n+          >field description\n+          </div>\n+        </div>\n       </div>\n-    </div>\n-  </div>\n \n-</tal:widgets>\n-<metal:actions metal:use-macro="context/@@ploneform-macros/actions"/>\n-</form>\n+    </tal:widgets>\n+    <metal:actions metal:use-macro="context/@@ploneform-macros/actions" />\n+  </form>\n </tal:root>\ndiff --git a/plone/app/dexterity/browser/behaviors.py b/plone/app/dexterity/browser/behaviors.py\nindex 07cda510..65bc3abd 100644\n--- a/plone/app/dexterity/browser/behaviors.py\n+++ b/plone/app/dexterity/browser/behaviors.py\n@@ -81,7 +81,6 @@ def __iter__(self):\n \n \n class TypeBehaviorsForm(form.EditForm):\n-\n     template = ViewPageTemplateFile("behaviors.pt")\n     label = _("Behaviors")\n     description = _("Select the behaviors to enable for this content type.")\ndiff --git a/plone/app/dexterity/browser/clone_type.py b/plone/app/dexterity/browser/clone_type.py\nindex e3e0bd49..b2710b4a 100644\n--- a/plone/app/dexterity/browser/clone_type.py\n+++ b/plone/app/dexterity/browser/clone_type.py\n@@ -8,7 +8,6 @@\n \n \n class TypeCloneForm(form.AddForm):\n-\n     label = _("Clone Content Type")\n     fields = field.Fields(ITypeSettings).select("title", "id")\n     id = "clone-type-form"\ndiff --git a/plone/app/dexterity/browser/configure.zcml b/plone/app/dexterity/browser/configure.zcml\nindex 293b0c0c..db6783d8 100644\n--- a/plone/app/dexterity/browser/configure.zcml\n+++ b/plone/app/dexterity/browser/configure.zcml\n@@ -2,36 +2,37 @@\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:browser="http://namespaces.zope.org/browser"\n     xmlns:zcml="http://namespaces.zope.org/zcml"\n-    i18n_domain="plone">\n+    i18n_domain="plone"\n+    >\n \n   <!-- Default view for Dexterity types in Plone  4 -->\n   <browser:page\n-      for="plone.dexterity.interfaces.IDexterityItem"\n       name="view"\n+      for="plone.dexterity.interfaces.IDexterityItem"\n       class="plone.dexterity.browser.view.DefaultView"\n       template="item.pt"\n       permission="zope2.View"\n       />\n \n   <browser:page\n-      for="plone.dexterity.interfaces.IDexterityContainer"\n       name="view"\n+      for="plone.dexterity.interfaces.IDexterityContainer"\n       class="plone.dexterity.browser.view.DefaultView"\n       template="container.pt"\n       permission="zope2.View"\n       />\n \n   <browser:page\n-      for="plone.dexterity.interfaces.IDexterityContainer"\n       name="folder_listing"\n+      for="plone.dexterity.interfaces.IDexterityContainer"\n       class=".folder_listing.FolderView"\n       template="folder_listing.pt"\n       permission="zope2.View"\n       />\n \n   <browser:page\n-      for="plone.base.interfaces.IPloneSiteRoot"\n       name="folder_listing"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".folder_listing.FolderView"\n       template="folder_listing.pt"\n       permission="zope2.View"\n@@ -41,9 +42,9 @@\n   <browser:viewlet\n       name="plone.app.dexterity.defaultpagewarning"\n       view="plone.dexterity.interfaces.IDexterityEditForm"\n+      manager="plone.app.layout.viewlets.interfaces.IGlobalStatusMessage"\n       template="default_page_warning.pt"\n       permission="cmf.ModifyPortalContent"\n-      manager="plone.app.layout.viewlets.interfaces.IGlobalStatusMessage"\n       />\n \n   <!-- Control panel -->\n@@ -52,8 +53,9 @@\n       name="dexterity-types"\n       for="plone.base.interfaces.IPloneSiteRoot"\n       class=".types.TypesContext"\n+      allowed_interface="OFS.interfaces.IItem"\n       permission="plone.schemaeditor.ManageSchemata"\n-      allowed_interface="OFS.interfaces.IItem" />\n+      />\n \n   <adapter\n       factory=".types.TypeSettingsAdapter"\n@@ -71,7 +73,8 @@\n       name="edit"\n       for="plone.app.dexterity.interfaces.ITypesContext"\n       class=".types.TypesListingPage"\n-      permission="plone.schemaeditor.ManageSchemata" />\n+      permission="plone.schemaeditor.ManageSchemata"\n+      />\n \n   <browser:page\n       name="add-type"\n@@ -91,25 +94,29 @@\n       name="overview"\n       for="plone.app.dexterity.interfaces.ITypeSchemaContext"\n       class=".overview.TypeOverviewPage"\n-      permission="plone.schemaeditor.ManageSchemata" />\n+      permission="plone.schemaeditor.ManageSchemata"\n+      />\n \n   <browser:page\n       name="fields"\n       for="plone.app.dexterity.interfaces.ITypeSchemaContext"\n       class=".fields.TypeFieldsPage"\n-      permission="plone.schemaeditor.ManageSchemata" />\n+      permission="plone.schemaeditor.ManageSchemata"\n+      />\n \n   <browser:page\n       name="behaviors"\n       for="plone.app.dexterity.interfaces.ITypeSchemaContext"\n       class=".behaviors.TypeBehaviorsPage"\n-      permission="plone.schemaeditor.ManageSchemata" />\n+      permission="plone.schemaeditor.ManageSchemata"\n+      />\n \n   <browser:page\n       name="clone"\n       for="plone.app.dexterity.interfaces.ITypeSchemaContext"\n       class=".clone_type.TypeCloneFormPage"\n-      permission="plone.schemaeditor.ManageSchemata" />\n+      permission="plone.schemaeditor.ManageSchemata"\n+      />\n \n   <browser:page\n       name="types-export"\n@@ -130,8 +137,8 @@\n         name="modeleditor"\n         for="plone.schemaeditor.interfaces.ISchemaContext"\n         class=".modeleditor.ModelEditorView"\n-        permission="plone.schemaeditor.ManageSchemata"\n         template="modeleditor.pt"\n+        permission="plone.schemaeditor.ManageSchemata"\n         />\n   </configure>\n \ndiff --git a/plone/app/dexterity/browser/container.pt b/plone/app/dexterity/browser/container.pt\nindex 8e688f0f..442acc89 100644\n--- a/plone/app/dexterity/browser/container.pt\n+++ b/plone/app/dexterity/browser/container.pt\n@@ -1,38 +1,48 @@\n-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"\n-      xmlns:tal="http://xml.zope.org/namespaces/tal"\n-      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+<html xmlns="http://www.w3.org/1999/xhtml"\n       xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+      xmlns:tal="http://xml.zope.org/namespaces/tal"\n       lang="en"\n       metal:use-macro="context/@@main_template/macros/master"\n-      i18n:domain="plone">\n-<body>\n+      xml:lang="en"\n+      i18n:domain="plone"\n+>\n+  <body>\n \n-<metal:main fill-slot="content-core">\n-<metal:content-core define-macro="content-core">\n+    <metal:main fill-slot="content-core">\n+      <metal:content-core define-macro="content-core">\n \n-  <tal:block repeat="widget view/widgets/values|nothing">\n-      <tal:block tal:condition="python:widget.__name__ not in (\'IBasic.title\', \'IBasic.description\', \'title\', \'description\',)">\n-          <tal:widget tal:replace="structure widget/@@ploneform-render-widget"/>\n-      </tal:block>\n-  </tal:block>\n+        <tal:block repeat="widget view/widgets/values|nothing">\n+          <tal:block tal:condition="python:widget.__name__ not in (\'IBasic.title\', \'IBasic.description\', \'title\', \'description\',)">\n+            <tal:widget tal:replace="structure widget/@@ploneform-render-widget" />\n+          </tal:block>\n+        </tal:block>\n \n-  <fieldset tal:repeat="group view/groups|nothing"\n-            tal:attributes="id python:\'\'.join((group.prefix, \'groups.\', group.__name__)).replace(\'.\', \'-\')">\n-      <legend tal:content="group/label" />\n-      <tal:block tal:repeat="widget group/widgets/values">\n-          <tal:widget tal:replace="structure widget/@@ploneform-render-widget"/>\n-      </tal:block>\n-  </fieldset>\n+        <fieldset tal:repeat="group view/groups|nothing"\n+                  tal:attributes="\n+                    id python:\'\'.join((group.prefix, \'groups.\', group.__name__)).replace(\'.\', \'-\');\n+                  "\n+        >\n+          <legend tal:content="group/label"></legend>\n+          <tal:block tal:repeat="widget group/widgets/values">\n+            <tal:widget tal:replace="structure widget/@@ploneform-render-widget" />\n+          </tal:block>\n+        </fieldset>\n \n-  <fieldset id="folder-listing">\n-      <legend i18n:translate="" i18n:domain="plone">Contents</legend>\n-      <tal:block define="view nocall:context/folder_listing; listing_macro view/macros/listing|view/index/macros/listing">\n-          <metal:use_macro use-macro="listing_macro" />\n-      </tal:block>\n-  </fieldset>\n+        <fieldset id="folder-listing">\n+          <legend i18n:domain="plone"\n+                  i18n:translate=""\n+          >Contents</legend>\n+          <tal:block define="\n+                       view nocall:context/folder_listing;\n+                       listing_macro view/macros/listing|view/index/macros/listing;\n+                     ">\n+            <metal:use_macro use-macro="listing_macro" />\n+          </tal:block>\n+        </fieldset>\n \n-</metal:content-core>\n-</metal:main>\n+      </metal:content-core>\n+    </metal:main>\n \n-</body>\n+  </body>\n </html>\ndiff --git a/plone/app/dexterity/browser/default_page_warning.pt b/plone/app/dexterity/browser/default_page_warning.pt\nindex f2ed20ff..0abe135a 100644\n--- a/plone/app/dexterity/browser/default_page_warning.pt\n+++ b/plone/app/dexterity/browser/default_page_warning.pt\n@@ -1,14 +1,19 @@\n-<tal:info\n- xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n- i18n:domain="plone">\n-<div class="alert alert-info" role="alert"\n-    tal:condition="context/@@plone_context_state/is_default_page|nothing">\n-  <span i18n:translate="label_edit_default_view_container">\n+<tal:info xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+          i18n:domain="plone"\n+>\n+  <div class="alert alert-info"\n+       role="alert"\n+       tal:condition="context/@@plone_context_state/is_default_page|nothing"\n+  >\n+    <span i18n:translate="label_edit_default_view_container">\n       You are editing the default view of a container. If you wanted to edit the container itself,\n-     <a href=""\n-        i18n:name="go_here"\n-        i18n:translate="label_edit_default_view_container_go_here"\n-        tal:attributes="href string:${context/aq_inner/aq_parent/absolute_url}/edit">go here</a>.\n-  </span>\n-</div>\n+      <a href=""\n+         tal:attributes="\n+           href string:${context/aq_inner/aq_parent/absolute_url}/edit;\n+         "\n+         i18n:name="go_here"\n+         i18n:translate="label_edit_default_view_container_go_here"\n+      >go here</a>.\n+    </span>\n+  </div>\n </tal:info>\ndiff --git a/plone/app/dexterity/browser/export.py b/plone/app/dexterity/browser/export.py\nindex 6432de6b..285a8463 100644\n--- a/plone/app/dexterity/browser/export.py\n+++ b/plone/app/dexterity/browser/export.py\n@@ -17,7 +17,6 @@\n \n class SelectiveZipExportContext(TarballExportContext):\n     def __init__(self, tool, typelist, encoding=None, base_name="setup_tool"):\n-\n         BaseContext.__init__(self, tool, encoding)\n \n         self.typelist = typelist\ndiff --git a/plone/app/dexterity/browser/folder_listing.pt b/plone/app/dexterity/browser/folder_listing.pt\nindex 758b8599..09ff82b7 100644\n--- a/plone/app/dexterity/browser/folder_listing.pt\n+++ b/plone/app/dexterity/browser/folder_listing.pt\n@@ -1,117 +1,147 @@\n-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"\n-    xmlns:tal="http://xml.zope.org/namespaces/tal"\n-    xmlns:metal="http://xml.zope.org/namespaces/metal"\n-    xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n-    lang="en"\n-    metal:use-macro="context/@@main_template/macros/master"\n-    i18n:domain="plone">\n-<body>\n+<html xmlns="http://www.w3.org/1999/xhtml"\n+      xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+      xmlns:tal="http://xml.zope.org/namespaces/tal"\n+      lang="en"\n+      metal:use-macro="context/@@main_template/macros/master"\n+      xml:lang="en"\n+      i18n:domain="plone"\n+>\n+  <body>\n \n-<metal:content-core fill-slot="content-core">\n-<metal:block define-macro="content-core">\n+    <metal:content-core fill-slot="content-core">\n+      <metal:block define-macro="content-core">\n \n-  <metal:listingmacro define-macro="listing">\n-    <tal:results define="batch view/batch">\n-      <tal:listing condition="batch">\n-        <div class="entries" metal:define-slot="entries">\n-          <tal:repeat repeat="item batch" metal:define-macro="entries">\n-            <tal:block tal:define="obj item/getObject;\n-                item_url item/getURL;\n-                item_id item/getId;\n-                item_title item/Title;\n-                item_description item/Description;\n-                item_type item/PortalType;\n-                item_modified item/ModificationDate;\n-                item_created item/CreationDate;\n-                item_type_class python:\'contenttype-\' + view.normalizeString(item_type);\n-                item_wf_state item/review_state;\n-                item_wf_state_class python:\'state-\' + view.normalizeString(item_wf_state);\n-                item_creator item/Creator;\n-                item_link python:item_type in view.use_view_action and item_url+\'/view\' or item_url;\n-                item_has_image python:item.getIcon">\n-              <metal:block define-slot="entry">\n-                <article class="entry">\n-                  <header metal:define-macro="listitem">\n-                    <span class="summary" tal:attributes="title item_type">\n-                     <a tal:attributes="href item_link">\n-                      <img class="image-tile"\n-                             tal:condition="item_has_image"\n-                             tal:attributes="src  string:$item_url/@@images/image/tile">\n-                      </a>\n-                      <a tal:attributes="href item_link;\n-                                         class string:$item_type_class $item_wf_state_class url;\n-                                         title item_type"\n-                          tal:content="python: item_title or item_id">\n+        <metal:listingmacro define-macro="listing">\n+          <tal:results define="\n+                         batch view/batch;\n+                       ">\n+            <tal:listing condition="batch">\n+              <div class="entries"\n+                   metal:define-slot="entries"\n+              >\n+                <tal:repeat metal:define-macro="entries"\n+                            repeat="item batch"\n+                >\n+                  <tal:block tal:define="\n+                               obj item/getObject;\n+                               item_url item/getURL;\n+                               item_id item/getId;\n+                               item_title item/Title;\n+                               item_description item/Description;\n+                               item_type item/PortalType;\n+                               item_modified item/ModificationDate;\n+                               item_created item/CreationDate;\n+                               item_type_class python:\'contenttype-\' + view.normalizeString(item_type);\n+                               item_wf_state item/review_state;\n+                               item_wf_state_class python:\'state-\' + view.normalizeString(item_wf_state);\n+                               item_creator item/Creator;\n+                               item_link python:item_type in view.use_view_action and item_url+\'/view\' or item_url;\n+                               item_has_image python:item.getIcon;\n+                             ">\n+                    <metal:block define-slot="entry">\n+                      <article class="entry">\n+                        <header metal:define-macro="listitem">\n+                          <span class="summary"\n+                                tal:attributes="\n+                                  title item_type;\n+                                "\n+                          >\n+                            <a tal:attributes="\n+                                 href item_link;\n+                               ">\n+                              <img class="image-tile"\n+                                   tal:condition="item_has_image"\n+                                   tal:attributes="\n+                                     src  string:$item_url/@@images/image/tile;\n+                                   "\n+                              />\n+                            </a>\n+                            <a tal:content="python: item_title or item_id"\n+                               tal:attributes="\n+                                 href item_link;\n+                                 class string:$item_type_class $item_wf_state_class url;\n+                                 title item_type;\n+                               "\n+                            >\n \n                              Item Title\n-                      </a>\n-                     </span>\n-                    <metal:block metal:define-macro="document_byline">\n-                      <div class="documentByLine">\n-                        <tal:byline condition="view/show_about">\n+                            </a>\n+                          </span>\n+                          <metal:block metal:define-macro="document_byline">\n+                            <div class="documentByLine">\n+                              <tal:byline condition="view/show_about">\n                           &mdash;\n-                          <tal:name tal:condition="item_creator"\n-                              tal:define="author python:view.pas_member.info(item_creator);\n-                                          creator_short_form author/username;\n-                                          creator_long_form string:?author=${author/username};\n-                                          creator_is_openid python:\'/\' in creator_short_form;\n-                                          creator_id python:(creator_short_form, creator_long_form)[creator_is_openid];">\n-                          <span i18n:translate="label_by_author">\n+                                <tal:name tal:define="\n+                                            author python:view.pas_member.info(item_creator);\n+                                            creator_short_form author/username;\n+                                            creator_long_form string:?author=${author/username};\n+                                            creator_is_openid python:\'/\' in creator_short_form;\n+                                            creator_id python:(creator_short_form, creator_long_form)[creator_is_openid];\n+                                          "\n+                                          tal:condition="item_creator"\n+                                >\n+                                  <span i18n:translate="label_by_author">\n                             by\n-                            <a tal:attributes="href string:${view/navigation_root_url}/author/${item_creator}"\n-                                tal:content="author/name_or_id"\n-                                tal:omit-tag="not:author"\n-                                i18n:name="author">\n+                                    <a tal:content="author/name_or_id"\n+                                       tal:omit-tag="not:author"\n+                                       tal:attributes="\n+                                         href string:${view/navigation_root_url}/author/${item_creator};\n+                                       "\n+                                       i18n:name="author"\n+                                    >\n                               Bob Dobalina\n-                            </a>\n-                          </span>\n-                          </tal:name>\n+                                    </a>\n+                                  </span>\n+                                </tal:name>\n \n-                          <tal:modified>\n+                                <tal:modified>\n                             &mdash;\n-                            <tal:mod i18n:translate="box_last_modified">last modified</tal:mod>\n-                            <span tal:replace="python:view.toLocalizedTime(item_modified,long_format=1)">\n+                                  <tal:mod i18n:translate="box_last_modified">last modified</tal:mod>\n+                                  <span tal:replace="python:view.toLocalizedTime(item_modified,long_format=1)">\n                               August 16, 2001 at 23:35:59\n-                            </span>\n-                          </tal:modified>\n+                                  </span>\n+                                </tal:modified>\n \n-                          <metal:description define-slot="description_slot">\n-                            <tal:comment replace="nothing">\n+                                <metal:description define-slot="description_slot">\n+                                  <tal:comment replace="nothing">\n                               Place custom listing info for custom types here\n-                            </tal:comment>\n-                          </metal:description>\n-                        </tal:byline>\n-                      </div>\n-                    </metal:block>\n-                  </header>\n-                  <p class="description discreet"\n-                      tal:condition="item_description"\n-                      tal:content="item_description">\n+                                  </tal:comment>\n+                                </metal:description>\n+                              </tal:byline>\n+                            </div>\n+                          </metal:block>\n+                        </header>\n+                        <p class="description discreet"\n+                           tal:condition="item_description"\n+                           tal:content="item_description"\n+                        >\n                     description\n-                  </p>\n-                </article>\n-              </metal:block>\n-            </tal:block>\n-          </tal:repeat>\n-        </div>\n+                        </p>\n+                      </article>\n+                    </metal:block>\n+                  </tal:block>\n+                </tal:repeat>\n+              </div>\n \n-        <div metal:use-macro="context/batch_macros/macros/navigation" />\n+              <div metal:use-macro="context/batch_macros/macros/navigation"></div>\n \n-      </tal:listing>\n+            </tal:listing>\n \n-      <metal:empty metal:define-slot="no_items_in_listing">\n-        <p class="discreet"\n-            tal:condition="not: view/batch"\n-            tal:content="view/no_items_message">\n+            <metal:empty metal:define-slot="no_items_in_listing">\n+              <p class="discreet"\n+                 tal:condition="not: view/batch"\n+                 tal:content="view/no_items_message"\n+              >\n           There are currently no items in this folder.\n-        </p>\n-      </metal:empty>\n+              </p>\n+            </metal:empty>\n \n-    </tal:results>\n-  </metal:listingmacro>\n+          </tal:results>\n+        </metal:listingmacro>\n \n-</metal:block>\n-</metal:content-core>\n+      </metal:block>\n+    </metal:content-core>\n \n-</body>\n+  </body>\n </html>\ndiff --git a/plone/app/dexterity/browser/import_types.py b/plone/app/dexterity/browser/import_types.py\nindex dc130296..b7924a31 100644\n--- a/plone/app/dexterity/browser/import_types.py\n+++ b/plone/app/dexterity/browser/import_types.py\n@@ -99,7 +99,6 @@ def __init__(self, profile_file):\n \n \n class TypeProfileImportForm(form.AddForm):\n-\n     label = _("Import Content Types")\n     description = _(\n         "You may import types by uploading a zip archive containing type "\n@@ -145,7 +144,6 @@ def __init__(self, tool, archive_bits, encoding=None, should_purge=False):\n         self.name_list = self._archive.namelist()\n \n     def readDataFile(self, filename, subdir=None):\n-\n         if subdir is not None:\n             filename = "/".join((subdir, filename))\n \ndiff --git a/plone/app/dexterity/browser/item.pt b/plone/app/dexterity/browser/item.pt\nindex 66f3f6fb..1069ef26 100644\n--- a/plone/app/dexterity/browser/item.pt\n+++ b/plone/app/dexterity/browser/item.pt\n@@ -1,31 +1,36 @@\n-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"\n-      xmlns:tal="http://xml.zope.org/namespaces/tal"\n-      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+<html xmlns="http://www.w3.org/1999/xhtml"\n       xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+      xmlns:tal="http://xml.zope.org/namespaces/tal"\n       lang="en"\n       metal:use-macro="context/@@main_template/macros/master"\n-      i18n:domain="plone">\n-<body>\n+      xml:lang="en"\n+      i18n:domain="plone"\n+>\n+  <body>\n \n-<metal:main fill-slot="content-core">\n-<metal:content-core define-macro="content-core">\n+    <metal:main fill-slot="content-core">\n+      <metal:content-core define-macro="content-core">\n \n-  <tal:block repeat="widget view/widgets/values|nothing">\n-    <tal:block tal:condition="python:widget.__name__ not in (\'IBasic.title\', \'IBasic.description\', \'title\', \'description\',)">\n-      <tal:widget tal:replace="structure widget/@@ploneform-render-widget"/>\n-    </tal:block>\n-  </tal:block>\n+        <tal:block repeat="widget view/widgets/values|nothing">\n+          <tal:block tal:condition="python:widget.__name__ not in (\'IBasic.title\', \'IBasic.description\', \'title\', \'description\',)">\n+            <tal:widget tal:replace="structure widget/@@ploneform-render-widget" />\n+          </tal:block>\n+        </tal:block>\n \n-  <fieldset tal:repeat="group view/groups|nothing"\n-            tal:attributes="id python:\'\'.join((group.prefix, \'groups.\', group.__name__)).replace(\'.\', \'-\')">\n-    <legend tal:content="group/label" />\n-    <tal:block tal:repeat="widget group/widgets/values|nothing">\n-      <tal:widget tal:replace="structure widget/@@ploneform-render-widget"/>\n-    </tal:block>\n-  </fieldset>\n+        <fieldset tal:repeat="group view/groups|nothing"\n+                  tal:attributes="\n+                    id python:\'\'.join((group.prefix, \'groups.\', group.__name__)).replace(\'.\', \'-\');\n+                  "\n+        >\n+          <legend tal:content="group/label"></legend>\n+          <tal:block tal:repeat="widget group/widgets/values|nothing">\n+            <tal:widget tal:replace="structure widget/@@ploneform-render-widget" />\n+          </tal:block>\n+        </fieldset>\n \n-</metal:content-core>\n-</metal:main>\n+      </metal:content-core>\n+    </metal:main>\n \n-</body>\n+  </body>\n </html>\ndiff --git a/plone/app/dexterity/browser/layout.py b/plone/app/dexterity/browser/layout.py\nindex 4854d9fa..4f776a83 100644\n--- a/plone/app/dexterity/browser/layout.py\n+++ b/plone/app/dexterity/browser/layout.py\n@@ -4,7 +4,6 @@\n \n \n class TypeFormLayout(FormWrapper):\n-\n     index = ViewPageTemplateFile("tabbed_forms.pt")\n \n     @property\ndiff --git a/plone/app/dexterity/browser/modeleditor.pt b/plone/app/dexterity/browser/modeleditor.pt\nindex 6dd75296..afd95b60 100644\n--- a/plone/app/dexterity/browser/modeleditor.pt\n+++ b/plone/app/dexterity/browser/modeleditor.pt\n@@ -1,65 +1,79 @@\n-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"\n-      xmlns:tal="http://xml.zope.org/namespaces/tal"\n-      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+<html xmlns="http://www.w3.org/1999/xhtml"\n       xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n-    lang="en"\n-    metal:use-macro="context/prefs_main_template/macros/master"\n-    i18n:domain="plone">\n+      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+      xmlns:tal="http://xml.zope.org/namespaces/tal"\n+      lang="en"\n+      metal:use-macro="context/prefs_main_template/macros/master"\n+      xml:lang="en"\n+      i18n:domain="plone"\n+>\n \n-<body>\n-<article metal:fill-slot="prefs_configlet_main">\n-<tal:main-macro metal:define-macro="main">\n+  <body>\n+    <article metal:fill-slot="prefs_configlet_main">\n+      <tal:main-macro metal:define-macro="main">\n \n-  <header id="page-intro">\n-   <a href=""\n-        class="link-parent"\n-        tal:attributes="href string:${context/absolute_url}/@@fields"\n-        i18n:translate="label_back_to_schemaeditor">\n+        <header id="page-intro">\n+          <a class="link-parent"\n+             href=""\n+             tal:attributes="\n+               href string:${context/absolute_url}/@@fields;\n+             "\n+             i18n:translate="label_back_to_schemaeditor"\n+          >\n             Back to the schema editor\n-    </a>\n+          </a>\n \n-    <h1 class="documentFirstHeading"\n-        i18n:translate="heading_model_edit">Edit field model for\n-      <span i18n:name="name" tal:content="context/Title">name</span>\n-    </h1>\n+          <h1 class="documentFirstHeading"\n+              i18n:translate="heading_model_edit"\n+          >Edit field model for\n+            <span tal:content="context/Title"\n+                  i18n:name="name"\n+            >name</span>\n+          </h1>\n \n-    <p class="description" i18n:translate="description_model_edit">\n+          <p class="description"\n+             i18n:translate="description_model_edit"\n+          >\n       This form allows you to directly edit the XML representation\n       of the field list. This makes it possible to add annotations for fieldsets,\n-      validation and widgets. See the <a\n-      href="https://docs.plone.org/external/plone.app.dexterity/docs/reference/dexterity-xml.html">Dexterity XML</a>\n-      section of the <a href="https://docs.plone.org/external/plone.app.dexterity/docs/index.html">Dexterity Developer Manual</a> for details.\n-    </p>\n-   </header>\n+      validation and widgets. See the\n+            <a href="https://docs.plone.org/external/plone.app.dexterity/docs/reference/dexterity-xml.html">Dexterity XML</a>\n+      section of the\n+            <a href="https://docs.plone.org/external/plone.app.dexterity/docs/index.html">Dexterity Developer Manual</a>\n+             for details.\n+          </p>\n+        </header>\n+\n+        <div id="rules-editor">\n+\n+          <form class="modeleditor__form"\n+                action="${context/absolute_url}/@@modeleditor"\n+                method="POST"\n+                tal:define="\n+                  authenticator context/@@authenticator/authenticator | nothing;\n+                "\n+          >\n \n-  <div id="rules-editor">\n+            <input tal:replace="structure authenticator" />\n \n-    <form\n-        class="modeleditor__form"\n-        action="${context/absolute_url}/@@modeleditor"\n-        method="POST"\n-        tal:define="authenticator context/@@authenticator/authenticator | nothing">\n-      \n-      <input tal:replace="structure authenticator" />\n+            <textarea class="modeleditor__source pat-code-editor language-xml"\n+                      name="source"\n+                      tal:content="view/model_source"\n+            ></textarea>\n \n-      <textarea\n-          name="source"\n-          class="modeleditor__source pat-code-editor language-xml"\n-          tal:content="view/model_source"></textarea>\n+            <br />\n \n-      <br />\n-      \n-      <button\n-          class="btn btn-primary"\n-          type="submit"\n-          name="form.button.save" \n-          i18n:translate="">Save</button>\n+            <button class="btn btn-primary"\n+                    name="form.button.save"\n+                    type="submit"\n+                    i18n:translate=""\n+            >Save</button>\n \n-    </form>\n+          </form>\n \n-  </div>\n+        </div>\n \n-</tal:main-macro>\n-</article>\n-</body>\n+      </tal:main-macro>\n+    </article>\n+  </body>\n </html>\ndiff --git a/plone/app/dexterity/browser/overview.pt b/plone/app/dexterity/browser/overview.pt\nindex 786fd1a7..27c9b8f9 100644\n--- a/plone/app/dexterity/browser/overview.pt\n+++ b/plone/app/dexterity/browser/overview.pt\n@@ -1,39 +1,54 @@\n-<tal:form metal:use-macro="context/@@ploneform-macros/titlelessform"\n-    xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n-    i18n:domain="plone">\n-<tal:fields metal:fill-slot="fields">\n-  <tal:field tal:replace="structure view/widgets/title/@@ploneform-render-widget" />\n-  <tal:field tal:replace="structure view/widgets/description/@@ploneform-render-widget" />\n+<tal:form xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+          metal:use-macro="context/@@ploneform-macros/titlelessform"\n+          i18n:domain="plone"\n+>\n+  <tal:fields metal:fill-slot="fields">\n+    <tal:field tal:replace="structure view/widgets/title/@@ploneform-render-widget" />\n+    <tal:field tal:replace="structure view/widgets/description/@@ploneform-render-widget" />\n \n-  <fieldset tal:condition="python:\'filter_content_types\' in view.fields">\n-    <legend i18n:translate="label_contained_items">Contained items</legend>\n-    <tal:block tal:define="context nocall:view/widgets/filter_content_types;\n-                           value context/value">\n-      <tal:fieldwrapper metal:use-macro="context/@@ploneform-render-widget/widget-wrapper">\n-      <tal:field metal:fill-slot="widget">\n-        <label>\n-          <input type="radio" value="none"\n-               tal:attributes="name context/name;\n-                               checked python:\'checked\' if \'none\' in value else None"/>\n-          <tal:block i18n:translate="label_no_content_types">No content types</tal:block>\n-        </label><br />\n-        <label>\n-          <input type="radio" value="all"\n-                 tal:attributes="name context/name;\n-                               checked python:\'checked\' if \'all\' in value else None"/>\n-          <tal:block i18n:translate="label_all_content_types">All content types</tal:block>\n-        </label><br />\n-        <label>\n-          <input type="radio" value="some"\n-                 tal:attributes="name context/name;\n-                               checked python:\'checked\' if \'some\' in value else None"/>\n-          <tal:block i18n:translate="label_some_content_types">Some content types:</tal:block>\n-          <tal:field tal:replace="structure view/widgets/allowed_content_types/render" />\n-        </label>\n-      </tal:field>\n-      </tal:fieldwrapper>\n-    </tal:block>\n-  </fieldset>\n+    <fieldset tal:condition="python:\'filter_content_types\' in view.fields">\n+      <legend i18n:translate="label_contained_items">Contained items</legend>\n+      <tal:block tal:define="\n+                   context nocall:view/widgets/filter_content_types;\n+                   value context/value;\n+                 ">\n+        <tal:fieldwrapper metal:use-macro="context/@@ploneform-render-widget/widget-wrapper">\n+          <tal:field metal:fill-slot="widget">\n+            <label>\n+              <input type="radio"\n+                     value="none"\n+                     tal:attributes="\n+                       name context/name;\n+                       checked python:\'checked\' if \'none\' in value else None;\n+                     "\n+              />\n+              <tal:block i18n:translate="label_no_content_types">No content types</tal:block>\n+            </label><br />\n+            <label>\n+              <input type="radio"\n+                     value="all"\n+                     tal:attributes="\n+                       name context/name;\n+                       checked python:\'checked\' if \'all\' in value else None;\n+                     "\n+              />\n+              <tal:block i18n:translate="label_all_content_types">All content types</tal:block>\n+            </label><br />\n+            <label>\n+              <input type="radio"\n+                     value="some"\n+                     tal:attributes="\n+                       name context/name;\n+                       checked python:\'checked\' if \'some\' in value else None;\n+                     "\n+              />\n+              <tal:block i18n:translate="label_some_content_types">Some content types:</tal:block>\n+              <tal:field tal:replace="structure view/widgets/allowed_content_types/render" />\n+            </label>\n+          </tal:field>\n+        </tal:fieldwrapper>\n+      </tal:block>\n+    </fieldset>\n \n-</tal:fields>\n+  </tal:fields>\n </tal:form>\ndiff --git a/plone/app/dexterity/browser/tabbed_forms.pt b/plone/app/dexterity/browser/tabbed_forms.pt\nindex 808939a3..d631c3b0 100644\n--- a/plone/app/dexterity/browser/tabbed_forms.pt\n+++ b/plone/app/dexterity/browser/tabbed_forms.pt\n@@ -1,33 +1,40 @@\n <html xmlns="http://www.w3.org/1999/xhtml"\n+      xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n       xmlns:metal="http://xml.zope.org/namespaces/metal"\n       xmlns:tal="http://xml.zope.org/namespaces/tal"\n-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n       metal:use-macro="here/prefs_main_template/macros/master"\n-      i18n:domain="plone.z3cform">\n-<body>\n-<metal:slot metal:fill-slot="prefs_configlet_main">\n+      i18n:domain="plone.z3cform"\n+>\n+  <body>\n+    <metal:slot metal:fill-slot="prefs_configlet_main">\n \n-  <header class="mb-4"> \n+      <header class="mb-4">\n \n-    <div metal:use-macro="context/global_statusmessage/macros/portal_message">\n+        <div metal:use-macro="context/global_statusmessage/macros/portal_message">\n       Portal status message\n-    </div>\n+        </div>\n \n-    <h1 class="documentFirstHeading"><tal:block tal:content="context/Title"/> (<tal:block tal:content="python:context.__name__" />)</h1>\n+        <h1 class="documentFirstHeading"><tal:block tal:content="context/Title" />\n+          (<tal:block tal:content="python:context.__name__" />)</h1>\n \n-    <ul class="nav nav-tabs">\n-      <li class="nav-item" tal:repeat="tab view/tabs">\n-        <a class="nav-link"\n-            tal:attributes="href python:context.absolute_url() + \'/\' + tab[1];\n-                            class python: \'nav-link \' + (\'active\' if tab[0] == view.label else \'\')"\n-            tal:content="python:tab[0]" />\n-      </li>\n-    </ul>\n-  </header>\n-  <div id="content-core">\n-      <tal:block tal:replace="structure view/contents|view/render"/>\n-  </div>\n+        <ul class="nav nav-tabs">\n+          <li class="nav-item"\n+              tal:repeat="tab view/tabs"\n+          >\n+            <a class="nav-link"\n+               tal:content="python:tab[0]"\n+               tal:attributes="\n+                 href python:context.absolute_url() + \'/\' + tab[1];\n+                 class python: \'nav-link \' + (\'active\' if tab[0] == view.label else \'\');\n+               "\n+            ></a>\n+          </li>\n+        </ul>\n+      </header>\n+      <div id="content-core">\n+        <tal:block tal:replace="structure view/contents|view/render" />\n+      </div>\n \n-</metal:slot>\n-</body>\n+    </metal:slot>\n+  </body>\n </html>\ndiff --git a/plone/app/dexterity/browser/types.py b/plone/app/dexterity/browser/types.py\nindex 1bf8f5c6..13f44a5f 100644\n--- a/plone/app/dexterity/browser/types.py\n+++ b/plone/app/dexterity/browser/types.py\n@@ -239,7 +239,6 @@ def link(self, item, field):\n \n @implementer(ITypeSchemaContext)\n class TypeSchemaContext(SchemaContext):\n-\n     fti = None\n     schemaName = ""\n     schemaEditorView = "fields"\ndiff --git a/plone/app/dexterity/browser/types_listing.pt b/plone/app/dexterity/browser/types_listing.pt\nindex 02866cef..2cfa3675 100644\n--- a/plone/app/dexterity/browser/types_listing.pt\n+++ b/plone/app/dexterity/browser/types_listing.pt\n@@ -1,35 +1,48 @@\n-<tal:root\n-    i18n:domain="plone">\n+<tal:root i18n:domain="plone">\n \n-  <div class="alert alert-info" role="alert"\n-       tal:condition="view/status">\n+  <div class="alert alert-info"\n+       role="alert"\n+       tal:condition="view/status"\n+  >\n     <span tal:content="view/status">\n       Status\n     </span>\n   </div>\n \n   <p class="crud-description documentDescription"\n-      tal:condition="view/description"\n-      tal:content="structure view/description">\n+     tal:condition="view/description"\n+     tal:content="structure view/description"\n+  >\n   </p>\n   <header class="mb-4">\n     <a class="pat-plone-modal"\n-        href="${context/absolute_url}/@@add-type">\n-      <button class="btn btn-primary" i18n:translate="">Add New Content Type&hellip;</button>\n+       href="${context/absolute_url}/@@add-type"\n+    >\n+      <button class="btn btn-primary"\n+              i18n:translate=""\n+      >Add New Content Type&hellip;</button>\n     </a>\n \n     <a class="pat-plone-modal"\n-        href="${context/absolute_url}/@@import-types">\n-      <button class="btn btn-primary" i18n:translate="">Import Type Profiles&hellip;</button>\n+       href="${context/absolute_url}/@@import-types"\n+    >\n+      <button class="btn btn-primary"\n+              i18n:translate=""\n+      >Import Type Profiles&hellip;</button>\n     </a>\n   </header>\n \n   <div class="crud-form"\n-      tal:repeat="form view/subforms"\n-      tal:content="structure form/render">\n+       tal:repeat="form view/subforms"\n+       tal:content="structure form/render"\n+  >\n   </div>\n \n-  <div class="action" tal:repeat="action view/actions/values">\n-    <input type="submit" tal:replace="structure action/render" />\n+  <div class="action"\n+       tal:repeat="action view/actions/values"\n+  >\n+    <input type="submit"\n+           tal:replace="structure action/render"\n+    />\n   </div>\n </tal:root>\ndiff --git a/plone/app/dexterity/browser/types_listing_row.pt b/plone/app/dexterity/browser/types_listing_row.pt\nindex b346c51d..fb27ffe7 100644\n--- a/plone/app/dexterity/browser/types_listing_row.pt\n+++ b/plone/app/dexterity/browser/types_listing_row.pt\n@@ -1,30 +1,49 @@\n-<tal:block define="tups view/getCombinedWidgets;\n-                   portal context/@@plone_portal_state/portal;\n-                   layout portal/@@plone_layout;\n-                   niceTitles view/getNiceTitles"\n-           repeat="tup tups">\n+<tal:block define="\n+             tups view/getCombinedWidgets;\n+             portal context/@@plone_portal_state/portal;\n+             layout portal/@@plone_layout;\n+             niceTitles view/getNiceTitles;\n+           "\n+           repeat="tup tups"\n+>\n \n-  <td tal:define="error python:tup[0].error;\n-                  idx repeat/tup/index;\n-                  normalize nocall: context/@@plone/normalizeString;"\n-      tal:attributes="class python:\'field\' + (error and \' error\' or \'\') + (tup[0].__name__ == \'view_item_count\' and \' count\' or \'\')">\n+  <td tal:define="\n+        error python:tup[0].error;\n+        idx repeat/tup/index;\n+        normalize nocall: context/@@plone/normalizeString;\n+      "\n+      tal:attributes="\n+        class python:\'field\' + (error and \' error\' or \'\') + (tup[0].__name__ == \'view_item_count\' and \' count\' or \'\');\n+      "\n+  >\n     <tal:block repeat="widget tup">\n \n \n \n-    <a href=""\n-       tal:define="link python:view.context.context.link(view.getContent(), widget.field.__name__);\n-                   item_type_class python:\'contenttype-\' + normalize(view.getContent().id)"\n-       tal:omit-tag="python:widget.mode == \'input\' or link is None"\n-       tal:attributes="href link;\n-                       class string:$item_type_class">\n+      <a href=""\n+         tal:define="\n+           link python:view.context.context.link(view.getContent(), widget.field.__name__);\n+           item_type_class python:\'contenttype-\' + normalize(view.getContent().id);\n+         "\n+         tal:omit-tag="python:widget.mode == \'input\' or link is None"\n+         tal:attributes="\n+           href link;\n+           class string:$item_type_class;\n+         "\n+      >\n \n-      <span class="error" tal:omit-tag="not:error">\n-        <div tal:condition="error" tal:replace="structure error/render" />\n-        <input type="text" tal:replace="structure widget/render" />\n-      </span>\n+        <span class="error"\n+              tal:omit-tag="not:error"\n+        >\n+          <div tal:condition="error"\n+               tal:replace="structure error/render"\n+          ></div>\n+          <input type="text"\n+                 tal:replace="structure widget/render"\n+          />\n+        </span>\n \n-    </a>\n+      </a>\n     </tal:block>\n \n   </td>\ndiff --git a/plone/app/dexterity/browser/typesformwrapper.pt b/plone/app/dexterity/browser/typesformwrapper.pt\nindex 3e830f22..b65ca0c6 100644\n--- a/plone/app/dexterity/browser/typesformwrapper.pt\n+++ b/plone/app/dexterity/browser/typesformwrapper.pt\n@@ -1,17 +1,21 @@\n-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"\n-      xmlns:tal="http://xml.zope.org/namespaces/tal"\n-      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+<html xmlns="http://www.w3.org/1999/xhtml"\n       xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+      xmlns:tal="http://xml.zope.org/namespaces/tal"\n       lang="en"\n       metal:use-macro="here/prefs_main_template/macros/master"\n-      i18n:domain="plone">\n-<body>\n-<metal:main fill-slot="prefs_configlet_main">\n-<tal:main-macro metal:define-macro="main">\n-  <h1 class="documentFirstHeading" tal:content="view/label">Title</h1>\n-  <div id="skel-contents">\n-    <span tal:replace="structure view/contents" />\n-  </div>\n-</tal:main-macro>\n-</metal:main>\n-</html>\n+      xml:lang="en"\n+      i18n:domain="plone"\n+>\n+  <body>\n+    <metal:main fill-slot="prefs_configlet_main">\n+      <tal:main-macro metal:define-macro="main">\n+        <h1 class="documentFirstHeading"\n+            tal:content="view/label"\n+        >Title</h1>\n+        <div id="skel-contents">\n+          <span tal:replace="structure view/contents"></span>\n+        </div>\n+      </tal:main-macro>\n+    </metal:main>\n+  </body></html>\ndiff --git a/plone/app/dexterity/configure.zcml b/plone/app/dexterity/configure.zcml\nindex 135ded4b..f2396b29 100644\n--- a/plone/app/dexterity/configure.zcml\n+++ b/plone/app/dexterity/configure.zcml\n@@ -2,18 +2,21 @@\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:five="http://namespaces.zope.org/five"\n     xmlns:genericsetup="http://namespaces.zope.org/genericsetup"\n-    xmlns:zcml="http://namespaces.zope.org/zcml"\n     xmlns:i18n="http://namespaces.zope.org/i18n"\n-    i18n_domain="plone">\n+    xmlns:zcml="http://namespaces.zope.org/zcml"\n+    i18n_domain="plone"\n+    >\n \n-  <include package="plone.app.imaging" zcml:condition="installed plone.app.imaging"/>\n   <include package="plone.app.vocabularies" />\n   <include package="plone.app.z3cform" />\n   <include package="plone.app.textfield" />\n   <include package="plone.app.uuid" />\n   <include package="plone.formwidget.namedfile" />\n   <include package="plone.schemaeditor" />\n-  <include package="plone.directives.dexterity" zcml:condition="installed plone.directives.dexterity" />\n+  <include\n+      package="plone.directives.dexterity"\n+      zcml:condition="installed plone.directives.dexterity"\n+      />\n   <include package="plone.dexterity" />\n   <include package="plone.behavior" />\n \n@@ -21,18 +24,18 @@\n       name="default"\n       title="Dexterity Content Types"\n       description="Configures various components needed for full Dexterity support."\n-      directory="profiles/default"\n       provides="Products.GenericSetup.interfaces.EXTENSION"\n       for="plone.base.interfaces.IPloneSiteRoot"\n+      directory="profiles/default"\n       />\n \n   <genericsetup:registerProfile\n       name="testing"\n       title="Dexterity Content Types"\n       description="Adds Dexterity-based Folder and Document types for testing."\n-      directory="profiles/testing"\n       provides="Products.GenericSetup.interfaces.EXTENSION"\n       for="plone.base.interfaces.ITestCasePloneSiteRoot"\n+      directory="profiles/testing"\n       />\n \n   <include package=".browser" />\n@@ -63,7 +66,9 @@\n   <adapter factory=".factories.DXFileFactory" />\n   <adapter factory=".permissions.DXFieldPermissionChecker" />\n   <adapter factory=".permissions.GenericFormFieldPermissionChecker" />\n-  <adapter factory=".permissions.GenericFormFieldPermissionChecker"\n-           for="plone.z3cform.interfaces.IFormWrapper" />\n+  <adapter\n+      factory=".permissions.GenericFormFieldPermissionChecker"\n+      for="plone.z3cform.interfaces.IFormWrapper"\n+      />\n \n </configure>\ndiff --git a/plone/app/dexterity/events.zcml b/plone/app/dexterity/events.zcml\nindex 50d7fc03..7f8ebea9 100644\n--- a/plone/app/dexterity/events.zcml\n+++ b/plone/app/dexterity/events.zcml\n@@ -1,6 +1,7 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n-    i18n_domain="plone">\n+    i18n_domain="plone"\n+    >\n \n   <!-- Register schema/field modify handlers -->\n   <subscriber\ndiff --git a/plone/app/dexterity/factories.py b/plone/app/dexterity/factories.py\nindex f0bca286..5306021b 100644\n--- a/plone/app/dexterity/factories.py\n+++ b/plone/app/dexterity/factories.py\n@@ -37,7 +37,7 @@ def __call__(self, name, content_type, data):\n             # This will suffice for standard p.a.contenttypes File/Image\n             # and any other custom type that would have \'File\' or \'Image\' in\n             # its type name\n-            # XXX heuristics are harmful behavior, here a better implemenation\n+            # XXX heuristics are harmful behavior, here a better implementation\n             #     is needed\n             filename = name\n             if "Image" in type_:\ndiff --git a/plone/app/dexterity/interfaces.py b/plone/app/dexterity/interfaces.py\nindex 180e8c92..3f7b9c8b 100644\n--- a/plone/app/dexterity/interfaces.py\n+++ b/plone/app/dexterity/interfaces.py\n@@ -85,7 +85,6 @@ class ITypeSettings(Interface):\n \n \n class ITypeStats(Interface):\n-\n     item_count = schema.Int(\n         title=_("# of items"),\n     )\ndiff --git a/plone/app/dexterity/meta.zcml b/plone/app/dexterity/meta.zcml\nindex ff42bfb2..a4207e42 100644\n--- a/plone/app/dexterity/meta.zcml\n+++ b/plone/app/dexterity/meta.zcml\n@@ -1,10 +1,21 @@\n-<configure xmlns="http://namespaces.zope.org/zope"\n-           xmlns:zcml="http://namespaces.zope.org/zcml">\n+<configure\n+    xmlns="http://namespaces.zope.org/zope"\n+    xmlns:zcml="http://namespaces.zope.org/zcml"\n+    >\n \n-  <include package="plone.dexterity" file="meta.zcml" />\n-  <include zcml:condition="installed plone.directives.dexterity"\n-           package="plone.directives.dexterity" file="meta.zcml" />\n-  <include zcml:condition="installed plone.directives.form"\n-           package="plone.directives.form" file="meta.zcml" />\n+  <include\n+      package="plone.dexterity"\n+      file="meta.zcml"\n+      />\n+  <include\n+      package="plone.directives.dexterity"\n+      file="meta.zcml"\n+      zcml:condition="installed plone.directives.dexterity"\n+      />\n+  <include\n+      package="plone.directives.form"\n+      file="meta.zcml"\n+      zcml:condition="installed plone.directives.form"\n+      />\n \n-</configure>\n\\ No newline at end of file\n+</configure>\ndiff --git a/plone/app/dexterity/overrides.zcml b/plone/app/dexterity/overrides.zcml\nindex 6cbcc13f..09d0e58b 100644\n--- a/plone/app/dexterity/overrides.zcml\n+++ b/plone/app/dexterity/overrides.zcml\n@@ -1,8 +1,12 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:browser="http://namespaces.zope.org/browser"\n-    xmlns:zcml="http://namespaces.zope.org/zcml">\n+    xmlns:zcml="http://namespaces.zope.org/zcml"\n+    >\n \n-  <includeOverrides package="plone.app.z3cform" file="overrides.zcml" />\n+  <includeOverrides\n+      package="plone.app.z3cform"\n+      file="overrides.zcml"\n+      />\n \n </configure>\ndiff --git a/plone/app/dexterity/profiles/default/controlpanel.xml b/plone/app/dexterity/profiles/default/controlpanel.xml\nindex a773b4bb..9d4bde86 100644\n--- a/plone/app/dexterity/profiles/default/controlpanel.xml\n+++ b/plone/app/dexterity/profiles/default/controlpanel.xml\n@@ -1,6 +1,19 @@\n-<?xml version="1.0"?>\n-<object name="portal_controlpanel" xmlns:i18n="http://xml.zope.org/namespaces/i18n" i18n:domain="plone" purge="False">\n-  <configlet action_id="dexterity-types" appId="Plone" category="plone-content" condition_expr="" icon_expr="string:gem" title="Content Types" url_expr="string:${portal_url}/@@dexterity-types" visible="True" i18n:attributes="title">\n+<?xml version="1.0" encoding="utf-8"?>\n+<object xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+        name="portal_controlpanel"\n+        purge="False"\n+        i18n:domain="plone"\n+>\n+  <configlet action_id="dexterity-types"\n+             appId="Plone"\n+             category="plone-content"\n+             condition_expr=""\n+             icon_expr="string:gem"\n+             title="Content Types"\n+             url_expr="string:${portal_url}/@@dexterity-types"\n+             visible="True"\n+             i18n:attributes="title"\n+  >\n     <permission>Manage portal</permission>\n   </configlet>\n-</object>\n\\ No newline at end of file\n+</object>\ndiff --git a/plone/app/dexterity/profiles/default/metadata.xml b/plone/app/dexterity/profiles/default/metadata.xml\nindex 144d04bb..31ef5503 100644\n--- a/plone/app/dexterity/profiles/default/metadata.xml\n+++ b/plone/app/dexterity/profiles/default/metadata.xml\n@@ -1,7 +1,7 @@\n-<?xml version="1.0"?>\n+<?xml version="1.0" encoding="utf-8"?>\n <metadata>\n   <version>2007</version>\n   <dependencies>\n     <dependency>profile-plone.app.z3cform:default</dependency>\n   </dependencies>\n-</metadata>\n\\ No newline at end of file\n+</metadata>\ndiff --git a/plone/app/dexterity/profiles/testing/metadata.xml b/plone/app/dexterity/profiles/testing/metadata.xml\nindex 76cc7558..5cc27d43 100644\n--- a/plone/app/dexterity/profiles/testing/metadata.xml\n+++ b/plone/app/dexterity/profiles/testing/metadata.xml\n@@ -1,4 +1,4 @@\n-<?xml version="1.0"?>\n+<?xml version="1.0" encoding="utf-8"?>\n <metadata>\n   <version>1</version>\n   <dependencies>\ndiff --git a/plone/app/dexterity/profiles/testing/types.xml b/plone/app/dexterity/profiles/testing/types.xml\nindex 624b95be..bd4034de 100644\n--- a/plone/app/dexterity/profiles/testing/types.xml\n+++ b/plone/app/dexterity/profiles/testing/types.xml\n@@ -1,7 +1,17 @@\n-<?xml version="1.0"?>\n-<object meta_type="Plone Types Tool" name="portal_types">\n-  <object name="Document" remove="true" />\n-  <object meta_type="Dexterity FTI" name="Document" />\n-  <object name="Folder" remove="true" />\n-  <object meta_type="Dexterity FTI" name="Folder" />\n+<?xml version="1.0" encoding="utf-8"?>\n+<object meta_type="Plone Types Tool"\n+        name="portal_types"\n+>\n+  <object name="Document"\n+          remove="true"\n+  />\n+  <object meta_type="Dexterity FTI"\n+          name="Document"\n+  />\n+  <object name="Folder"\n+          remove="true"\n+  />\n+  <object meta_type="Dexterity FTI"\n+          name="Folder"\n+  />\n </object>\ndiff --git a/plone/app/dexterity/profiles/testing/types/Document.xml b/plone/app/dexterity/profiles/testing/types/Document.xml\nindex dc7de274..f6c2f8db 100644\n--- a/plone/app/dexterity/profiles/testing/types/Document.xml\n+++ b/plone/app/dexterity/profiles/testing/types/Document.xml\n@@ -1,17 +1,25 @@\n-<?xml version="1.0"?>\n-<object name="Document" meta_type="Dexterity FTI" i18n:domain="plone" xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n-  <property name="title" i18n:translate="">Page</property>\n-  <property name="description" i18n:translate=""></property>\n-  <property name="icon_expr"></property>\n+<?xml version="1.0" encoding="utf-8"?>\n+<object xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+        meta_type="Dexterity FTI"\n+        name="Document"\n+        i18n:domain="plone"\n+>\n+  <property name="title"\n+            i18n:translate=""\n+  >Page</property>\n+  <property name="description"\n+            i18n:translate=""\n+  />\n+  <property name="icon_expr" />\n   <property name="factory">Document</property>\n   <property name="add_view_expr">string:${folder_url}/++add++Document</property>\n-  <property name="link_target"></property>\n+  <property name="link_target" />\n   <property name="global_allow">True</property>\n   <property name="filter_content_types">True</property>\n   <property name="allowed_content_types" />\n   <property name="allow_discussion">False</property>\n   <property name="default_view">view</property>\n-  <property name="immediate_view"></property>\n+  <property name="immediate_view" />\n   <property name="view_methods">\n     <element value="view" />\n   </property>\n@@ -25,18 +33,40 @@\n     <element value="plone.dublincore" />\n   </property>\n   <property name="schema">zope.interface.Interface</property>\n-  <alias from="(Default)" to="(dynamic view)" />\n-  <alias from="edit" to="@@edit" />\n-  <alias from="sharing" to="@@sharing" />\n-  <alias from="view" to="(selected layout)" />\n-  <action title="View" action_id="view" category="object" condition_expr=""\n-      icon_expr="" link_target="" url_expr="string:${object_url}"\n-      visible="True" i18n:attributes="title">\n+  <alias from="(Default)"\n+         to="(dynamic view)"\n+  />\n+  <alias from="edit"\n+         to="@@edit"\n+  />\n+  <alias from="sharing"\n+         to="@@sharing"\n+  />\n+  <alias from="view"\n+         to="(selected layout)"\n+  />\n+  <action action_id="view"\n+          category="object"\n+          condition_expr=""\n+          icon_expr=""\n+          link_target=""\n+          title="View"\n+          url_expr="string:${object_url}"\n+          visible="True"\n+          i18n:attributes="title"\n+  >\n     <permission value="View" />\n   </action>\n-  <action title="Edit" action_id="edit" category="object" condition_expr=""\n-      icon_expr="" link_target="" url_expr="string:${object_url}/edit"\n-      visible="True" i18n:attributes="title">\n+  <action action_id="edit"\n+          category="object"\n+          condition_expr=""\n+          icon_expr=""\n+          link_target=""\n+          title="Edit"\n+          url_expr="string:${object_url}/edit"\n+          visible="True"\n+          i18n:attributes="title"\n+  >\n     <permission value="Modify portal content" />\n   </action>\n </object>\ndiff --git a/plone/app/dexterity/profiles/testing/types/Folder.xml b/plone/app/dexterity/profiles/testing/types/Folder.xml\nindex 5e56fdb3..383216f5 100644\n--- a/plone/app/dexterity/profiles/testing/types/Folder.xml\n+++ b/plone/app/dexterity/profiles/testing/types/Folder.xml\n@@ -1,11 +1,19 @@\n-<?xml version="1.0"?>\n-<object name="Folder" meta_type="Dexterity FTI" i18n:domain="plone" xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n-  <property name="title" i18n:translate="">Folder</property>\n-  <property name="description" i18n:translate=""></property>\n-  <property name="icon_expr"></property>\n+<?xml version="1.0" encoding="utf-8"?>\n+<object xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+        meta_type="Dexterity FTI"\n+        name="Folder"\n+        i18n:domain="plone"\n+>\n+  <property name="title"\n+            i18n:translate=""\n+  >Folder</property>\n+  <property name="description"\n+            i18n:translate=""\n+  />\n+  <property name="icon_expr" />\n   <property name="factory">Folder</property>\n   <property name="add_view_expr">string:${folder_url}/++add++Folder</property>\n-  <property name="link_target"></property>\n+  <property name="link_target" />\n   <property name="immediate_view">view</property>\n   <property name="global_allow">True</property>\n   <property name="filter_content_types">False</property>\n@@ -30,18 +38,40 @@\n     <element value="plone.nextprevioustoggle" />\n   </property>\n   <property name="schema">zope.interface.Interface</property>\n-  <alias from="(Default)" to="(dynamic view)" />\n-  <alias from="edit" to="@@edit" />\n-  <alias from="sharing" to="@@sharing" />\n-  <alias from="view" to="(selected layout)" />\n-  <action title="View" action_id="view" category="object" condition_expr=""\n-      icon_expr="" link_target="" url_expr="string:${object_url}"\n-      visible="True" i18n:attributes="title">\n+  <alias from="(Default)"\n+         to="(dynamic view)"\n+  />\n+  <alias from="edit"\n+         to="@@edit"\n+  />\n+  <alias from="sharing"\n+         to="@@sharing"\n+  />\n+  <alias from="view"\n+         to="(selected layout)"\n+  />\n+  <action action_id="view"\n+          category="object"\n+          condition_expr=""\n+          icon_expr=""\n+          link_target=""\n+          title="View"\n+          url_expr="string:${object_url}"\n+          visible="True"\n+          i18n:attributes="title"\n+  >\n     <permission value="View" />\n   </action>\n-  <action title="Edit" action_id="edit" category="object" condition_expr=""\n-      icon_expr="" link_target="" url_expr="string:${object_url}/edit"\n-      visible="True" i18n:attributes="title">\n+  <action action_id="edit"\n+          category="object"\n+          condition_expr=""\n+          icon_expr=""\n+          link_target=""\n+          title="Edit"\n+          url_expr="string:${object_url}/edit"\n+          visible="True"\n+          i18n:attributes="title"\n+  >\n     <permission value="Modify portal content" />\n   </action>\n </object>\ndiff --git a/plone/app/dexterity/tests/editing.rst b/plone/app/dexterity/tests/editing.rst\nindex 514f6650..8e653da0 100644\n--- a/plone/app/dexterity/tests/editing.rst\n+++ b/plone/app/dexterity/tests/editing.rst\n@@ -170,7 +170,7 @@ Go there and find the XML model source in a textarea, ready to be edited\n (with JavaScript enabled, this should show pat-code-editor instead of the textarea)::\n \n   >>> browser.open(\'http://nohost/plone/dexterity-types/plonista/@@modeleditor\')\n-  >>> \'<textarea name="source"\' in browser.contents\n+  >>> \'<textarea class="modeleditor__source pat-code-editor language-xml" name="source">\' in browser.contents\n   True\n \n   >>> \'&lt;schema&gt;\' in browser.contents\ndiff --git a/plone/app/dexterity/tests/test_constrains.py b/plone/app/dexterity/tests/test_constrains.py\nindex 0e4dfa9a..446756c8 100644\n--- a/plone/app/dexterity/tests/test_constrains.py\n+++ b/plone/app/dexterity/tests/test_constrains.py\n@@ -38,7 +38,6 @@ def add_item_type(portal):\n \n \n class DocumentIntegrationTest(unittest.TestCase):\n-\n     layer = DEXTERITY_INTEGRATION_TESTING\n \n     def setUp(self):\n@@ -342,7 +341,6 @@ class Data:\n \n \n class FolderConstrainViewFunctionalText(unittest.TestCase):\n-\n     layer = DEXTERITY_FUNCTIONAL_TESTING\n \n     def setUp(self):\n@@ -422,7 +420,6 @@ def ctrl(name):\n \n \n class ConstrainControlFunctionalText(unittest.TestCase):\n-\n     layer = DEXTERITY_FUNCTIONAL_TESTING\n \n     def setUp(self):\n@@ -462,20 +459,20 @@ def test_overview_item_view(self):\n \n     def test_overview_folder_item_view(self):\n         # First we access folder content types and check\n-        # that is possible to fiter content types (as it is a container)\n+        # that is possible to filter content types (as it is a container)\n         url = "/dexterity-types/folder/@@overview"\n         self.browser.open(self.portal_url + url)\n         self.assertTrue("Filter Contained Types" in self.browser.contents)\n         self.assertTrue("No content types" in self.browser.contents)\n \n         # Then we access item content types and check\n-        # that is NOT possible to fiter content types\n+        # that is NOT possible to filter content types\n         url = "/dexterity-types/item/@@overview"\n         self.browser.open(self.portal_url + url)\n         self.assertFalse("Filter Contained Types" in self.browser.contents)\n         self.assertFalse("No content types" in self.browser.contents)\n \n-        # Acessing folder content types again\n+        # Accessing folder content types again\n         # and it should be possible to filter content types\n         url = "/dexterity-types/folder/@@overview"\n         self.browser.open(self.portal_url + url)\ndiff --git a/plone/app/dexterity/tests/test_doctests.py b/plone/app/dexterity/tests/test_doctests.py\nindex 889afaad..ecdfce99 100644\n--- a/plone/app/dexterity/tests/test_doctests.py\n+++ b/plone/app/dexterity/tests/test_doctests.py\n@@ -2,7 +2,6 @@\n from plone.testing import layered\n \n import doctest\n-import re\n import unittest\n \n \ndiff --git a/plone/app/dexterity/tests/test_permissions.py b/plone/app/dexterity/tests/test_permissions.py\nindex aa624455..273796cb 100644\n--- a/plone/app/dexterity/tests/test_permissions.py\n+++ b/plone/app/dexterity/tests/test_permissions.py\n@@ -86,7 +86,6 @@ def _disable_custom_widget(field):\n \n \n class DexterityVocabularyPermissionTests(unittest.TestCase):\n-\n     layer = PAZ3CForm_INTEGRATION_TESTING\n \n     def setUp(self):\ndiff --git a/plone/app/dexterity/tests/test_upgrades.py b/plone/app/dexterity/tests/test_upgrades.py\nindex 15c1b7ac..e285f405 100644\n--- a/plone/app/dexterity/tests/test_upgrades.py\n+++ b/plone/app/dexterity/tests/test_upgrades.py\n@@ -4,7 +4,6 @@\n \n \n class TestUpgrades(unittest.TestCase):\n-\n     layer = DEXTERITY_INTEGRATION_TESTING\n \n     def test_add_missing_uuids(self):\n@@ -39,24 +38,3 @@ def test_add_missing_uuids(self):\n         add_missing_uuids(self.layer["portal"])\n         uuid2 = IUUID(page, None)\n         self.assertEqual(uuid2, uuid, "Upgrade changes existing uuids.")\n-\n-    def test_upgrade_2003(self):\n-        from plone.app.dexterity.upgrades.to2003 import fix_installed_products\n-        from Products.CMFCore.utils import getToolByName\n-\n-        try:\n-            from Products.CMFQuickInstallerTool.InstalledProduct import InstalledProduct\n-        except ImportError:\n-            # nothing to test\n-            return\n-        qi = getToolByName(self.layer["portal"], "portal_quickinstaller", None)\n-        if qi is None:\n-            # nothing to test\n-            return\n-        ip = InstalledProduct("foo")\n-        ip.utilities = [("zope.intid.interfaces.IIntIds", "")]\n-        qi._setObject("foo", ip)\n-\n-        fix_installed_products(self.layer["portal"])\n-\n-        self.assertEqual([], ip.utilities)\ndiff --git a/plone/app/dexterity/textindexer/configure.zcml b/plone/app/dexterity/textindexer/configure.zcml\nindex d2841aac..6f5be134 100644\n--- a/plone/app/dexterity/textindexer/configure.zcml\n+++ b/plone/app/dexterity/textindexer/configure.zcml\n@@ -1,62 +1,59 @@\n-<configure xmlns="http://namespaces.zope.org/zope"\n-           xmlns:i18n="http://namespaces.zope.org/i18n"\n-           xmlns:plone="http://namespaces.plone.org/plone"\n-           xmlns:zcml="http://namespaces.zope.org/zcml"\n-           i18n_domain="plone.app.dexterity.textindexer">\n-\n-    <!-- marker behavior for enabling indexer -->\n-    <plone:behavior\n-          title="Full-Text Indexing"\n-          name="plone.textindexer"\n-          description="Enables the enhanced full-text indexing for a content type (\'plone.textindexer\'). If a field is marked \'searchable\', its content gets added to the \'SearchableText\' index in the catalog."\n-          provides="plone.app.dexterity.textindexer.behavior.IDexterityTextIndexer"\n-          />\n-\n-    <utility\n-        factory=".supermodel.IndexerSchema"\n-        name="plone.textindexer.indexer"\n-        />\n-\n-    <adapter\n-        factory="plone.app.dexterity.textindexer.indexer.dynamic_searchable_text_indexer"\n-        name="SearchableText" />\n-\n-    <!-- field converters -->\n-    <adapter\n-        factory="plone.app.dexterity.textindexer.converters.DefaultDexterityTextIndexFieldConverter"\n-        />\n-\n-    <adapter\n-        zcml:condition="installed plone.namedfile"\n-        factory="plone.app.dexterity.textindexer.converters.NamedfileFieldConverter"\n-        />\n-\n-    <adapter\n-        zcml:condition="installed plone.app.textfield"\n-        factory="plone.app.dexterity.textindexer.converters.DexterityRichTextIndexFieldConverter"\n-        />\n-\n-    <adapter\n-        factory="plone.app.dexterity.textindexer.converters.IntFieldConverter"\n-        />\n-\n-    <adapter\n-        factory="plone.app.dexterity.textindexer.converters.TupleFieldConverter"\n-        />\n-\n-    <!-- plone.schemaeditor adapter -->\n-    <adapter\n-        provides="plone.schemaeditor.interfaces.IFieldEditorExtender"\n-        for="plone.schemaeditor.interfaces.ISchemaContext\n-             zope.schema.interfaces.IField"\n-        name="plone.schemaeditor.searchabletext"\n-        factory=".schemaeditor.get_searchabletext_schema"\n-        />\n-\n-    <adapter\n-        provides=".schemaeditor.ISearchableTextField"\n-        for="zope.schema.interfaces.IField"\n-        factory=".schemaeditor.SearchableTextField"\n-        />\n+<configure\n+    xmlns="http://namespaces.zope.org/zope"\n+    xmlns:i18n="http://namespaces.zope.org/i18n"\n+    xmlns:plone="http://namespaces.plone.org/plone"\n+    xmlns:zcml="http://namespaces.zope.org/zcml"\n+    i18n_domain="plone.app.dexterity.textindexer"\n+    >\n+\n+  <!-- marker behavior for enabling indexer -->\n+  <plone:behavior\n+      name="plone.textindexer"\n+      title="Full-Text Indexing"\n+      description="Enables the enhanced full-text indexing for a content type (\'plone.textindexer\'). If a field is marked \'searchable\', its content gets added to the \'SearchableText\' index in the catalog."\n+      provides="plone.app.dexterity.textindexer.behavior.IDexterityTextIndexer"\n+      />\n+\n+  <utility\n+      factory=".supermodel.IndexerSchema"\n+      name="plone.textindexer.indexer"\n+      />\n+\n+  <adapter\n+      factory="plone.app.dexterity.textindexer.indexer.dynamic_searchable_text_indexer"\n+      name="SearchableText"\n+      />\n+\n+  <!-- field converters -->\n+  <adapter factory="plone.app.dexterity.textindexer.converters.DefaultDexterityTextIndexFieldConverter" />\n+\n+  <adapter\n+      factory="plone.app.dexterity.textindexer.converters.NamedfileFieldConverter"\n+      zcml:condition="installed plone.namedfile"\n+      />\n+\n+  <adapter\n+      factory="plone.app.dexterity.textindexer.converters.DexterityRichTextIndexFieldConverter"\n+      zcml:condition="installed plone.app.textfield"\n+      />\n+\n+  <adapter factory="plone.app.dexterity.textindexer.converters.IntFieldConverter" />\n+\n+  <adapter factory="plone.app.dexterity.textindexer.converters.TupleFieldConverter" />\n+\n+  <!-- plone.schemaeditor adapter -->\n+  <adapter\n+      factory=".schemaeditor.get_searchabletext_schema"\n+      provides="plone.schemaeditor.interfaces.IFieldEditorExtender"\n+      for="plone.schemaeditor.interfaces.ISchemaContext\n+           zope.schema.interfaces.IField"\n+      name="plone.schemaeditor.searchabletext"\n+      />\n+\n+  <adapter\n+      factory=".schemaeditor.SearchableTextField"\n+      provides=".schemaeditor.ISearchableTextField"\n+      for="zope.schema.interfaces.IField"\n+      />\n \n </configure>\ndiff --git a/plone/app/dexterity/textindexer/indexer.py b/plone/app/dexterity/textindexer/indexer.py\nindex b77da9ca..4d616a63 100644\n--- a/plone/app/dexterity/textindexer/indexer.py\n+++ b/plone/app/dexterity/textindexer/indexer.py\n@@ -55,7 +55,6 @@ def dynamic_searchable_text_indexer(obj):\n \n     for _storage, fields in get_searchable_contexts_and_fields(obj):\n         for field in fields:\n-\n             # we need the form-field, not the schema-field we\n             # already have..\n             form_field = Field(field, interface=field.interface, prefix="")\n@@ -65,7 +64,7 @@ def dynamic_searchable_text_indexer(obj):\n                 widget = get_field_widget(obj, form_field, request)\n             except TypeError:\n                 # Some times the field value is wrong, then the converter\n-                # failes. We should not fail, so we catch this error.\n+                # fails. We should not fail, so we catch this error.\n                 continue\n \n             # get the converter for this field / widget\ndiff --git a/plone/app/dexterity/textindexer/interfaces.py b/plone/app/dexterity/textindexer/interfaces.py\nindex 03340eab..cd94f91f 100644\n--- a/plone/app/dexterity/textindexer/interfaces.py\n+++ b/plone/app/dexterity/textindexer/interfaces.py\n@@ -1,6 +1,6 @@\n """\n IDexterityTextIndexFieldConverter  field converter adapter interface\n-IDynamicTextIndexExtender          dynmaic text extender adapter interface\n+IDynamicTextIndexExtender          dynamic text extender adapter interface\n """\n \n from zope.interface import Interface\ndiff --git a/plone/app/dexterity/textindexer/schemaeditor.py b/plone/app/dexterity/textindexer/schemaeditor.py\nindex a9e7d447..19ae4b44 100644\n--- a/plone/app/dexterity/textindexer/schemaeditor.py\n+++ b/plone/app/dexterity/textindexer/schemaeditor.py\n@@ -21,7 +21,6 @@ class ISearchableTextField(Interface):\n @adapter(IField)\n @implementer(ISearchableTextField)\n class SearchableTextField:\n-\n     namespace = INDEXER_NAMESPACE\n     prefix = INDEXER_PREFIX\n \ndiff --git a/plone/app/dexterity/textindexer/testing.py b/plone/app/dexterity/textindexer/testing.py\nindex f1cb92e2..8caf83e0 100644\n--- a/plone/app/dexterity/textindexer/testing.py\n+++ b/plone/app/dexterity/textindexer/testing.py\n@@ -17,7 +17,6 @@\n \n \n class TextIndexerLayer(PloneSandboxLayer):\n-\n     defaultBases = (PLONE_FIXTURE,)\n \n     def __init__(self, *args, **kwargs):\n@@ -65,7 +64,6 @@ def read_log(self):\n \n \n class TextIndexerFunctionalLayer(PloneSandboxLayer):\n-\n     defaultBases = (TEXT_INDEXER_FIXTURE,)\n \n     def setUpZope(self, app, configurationContext):\ndiff --git a/plone/app/dexterity/textindexer/tests/configure.zcml b/plone/app/dexterity/textindexer/tests/configure.zcml\nindex 97f4fa9a..d608bf6a 100644\n--- a/plone/app/dexterity/textindexer/tests/configure.zcml\n+++ b/plone/app/dexterity/textindexer/tests/configure.zcml\n@@ -1,77 +1,79 @@\n-<configure xmlns="http://namespaces.zope.org/zope"\n-           xmlns:plone="http://namespaces.plone.org/plone"\n-           i18n_domain="plone.app.dexterity.textindexer">\n+<configure\n+    xmlns="http://namespaces.zope.org/zope"\n+    xmlns:plone="http://namespaces.plone.org/plone"\n+    i18n_domain="plone.app.dexterity.textindexer"\n+    >\n \n-    <plone:behavior\n-          name="tests.textindexer.simple_behavior"\n-          title="simple behavior"\n-          description=""\n-          provides=".behaviors.ISimpleBehavior"\n-          for="plone.dexterity.interfaces.IDexterityContent"\n-          />\n+  <plone:behavior\n+      name="tests.textindexer.simple_behavior"\n+      title="simple behavior"\n+      description=""\n+      provides=".behaviors.ISimpleBehavior"\n+      for="plone.dexterity.interfaces.IDexterityContent"\n+      />\n \n-    <plone:behavior\n-          name="tests.textindexer.list_behavior"\n-          title="list behavior"\n-          description=""\n-          provides=".behaviors.IListBehavior"\n-          for="plone.dexterity.interfaces.IDexterityContent"\n-          />\n+  <plone:behavior\n+      name="tests.textindexer.list_behavior"\n+      title="list behavior"\n+      description=""\n+      provides=".behaviors.IListBehavior"\n+      for="plone.dexterity.interfaces.IDexterityContent"\n+      />\n \n-    <plone:behavior\n-          name="tests.textindexer.int_behavior"\n-          title="int behavior"\n-          description=""\n-          provides=".behaviors.IIntBehavior"\n-          for="plone.dexterity.interfaces.IDexterityContent"\n-          />\n+  <plone:behavior\n+      name="tests.textindexer.int_behavior"\n+      title="int behavior"\n+      description=""\n+      provides=".behaviors.IIntBehavior"\n+      for="plone.dexterity.interfaces.IDexterityContent"\n+      />\n \n-    <plone:behavior\n-          name="tests.textindexer.richtext_behavior"\n-          title="richtext behavior"\n-          description=""\n-          provides=".behaviors.IRichTextBehavior"\n-          for="plone.dexterity.interfaces.IDexterityContent"\n-          />\n+  <plone:behavior\n+      name="tests.textindexer.richtext_behavior"\n+      title="richtext behavior"\n+      description=""\n+      provides=".behaviors.IRichTextBehavior"\n+      for="plone.dexterity.interfaces.IDexterityContent"\n+      />\n \n-    <plone:behavior\n-          name="tests.textindexer.empty_richtext_behavior"\n-          title="empty richtext behavior"\n-          description=""\n-          provides=".behaviors.IEmptyRichTextBehavior"\n-          for="plone.dexterity.interfaces.IDexterityContent"\n-          />\n+  <plone:behavior\n+      name="tests.textindexer.empty_richtext_behavior"\n+      title="empty richtext behavior"\n+      description=""\n+      provides=".behaviors.IEmptyRichTextBehavior"\n+      for="plone.dexterity.interfaces.IDexterityContent"\n+      />\n \n-    <plone:behavior\n-          name="tests.textindexer.tuple_behavior"\n-          title="tuple behavior"\n-          description=""\n-          provides=".behaviors.ITupleBehavior"\n-          for="plone.dexterity.interfaces.IDexterityContent"\n-          />\n+  <plone:behavior\n+      name="tests.textindexer.tuple_behavior"\n+      title="tuple behavior"\n+      description=""\n+      provides=".behaviors.ITupleBehavior"\n+      for="plone.dexterity.interfaces.IDexterityContent"\n+      />\n \n-    <plone:behavior\n-          name="tests.textindexer.tuple_choice_behavior"\n-          title="tuple choice behavior"\n-          description=""\n-          provides=".behaviors.ITupleChoiceBehavior"\n-          for="plone.dexterity.interfaces.IDexterityContent"\n-          />\n+  <plone:behavior\n+      name="tests.textindexer.tuple_choice_behavior"\n+      title="tuple choice behavior"\n+      description=""\n+      provides=".behaviors.ITupleChoiceBehavior"\n+      for="plone.dexterity.interfaces.IDexterityContent"\n+      />\n \n-    <plone:behavior\n-          name="tests.textindexer.inherited_behavior"\n-          title="inherited behavior"\n-          description=""\n-          provides=".behaviors.IInheritedBehavior"\n-          for="plone.dexterity.interfaces.IDexterityContent"\n-          />\n+  <plone:behavior\n+      name="tests.textindexer.inherited_behavior"\n+      title="inherited behavior"\n+      description=""\n+      provides=".behaviors.IInheritedBehavior"\n+      for="plone.dexterity.interfaces.IDexterityContent"\n+      />\n \n-    <plone:behavior\n-          name="tests.textindexer.missing_field_behavior"\n-          title="missing field behavior"\n-          description=""\n-          provides=".behaviors.IMissingFieldBehavior"\n-          for="plone.dexterity.interfaces.IDexterityContent"\n-          />\n+  <plone:behavior\n+      name="tests.textindexer.missing_field_behavior"\n+      title="missing field behavior"\n+      description=""\n+      provides=".behaviors.IMissingFieldBehavior"\n+      for="plone.dexterity.interfaces.IDexterityContent"\n+      />\n \n </configure>\ndiff --git a/plone/app/dexterity/textindexer/tests/test_behaviors.py b/plone/app/dexterity/textindexer/tests/test_behaviors.py\nindex 6e8e22c2..93065259 100644\n--- a/plone/app/dexterity/textindexer/tests/test_behaviors.py\n+++ b/plone/app/dexterity/textindexer/tests/test_behaviors.py\n@@ -26,6 +26,5 @@ def test_suite():\n \n \n class ITestingSchema(model.Schema):\n-\n     searchable("testing_field")\n     testing_field = schema.TextLine(title="Testing field")\ndiff --git a/plone/app/dexterity/textindexer/tests/test_schemaeditor.py b/plone/app/dexterity/textindexer/tests/test_schemaeditor.py\nindex 88317acf..b0e16519 100644\n--- a/plone/app/dexterity/textindexer/tests/test_schemaeditor.py\n+++ b/plone/app/dexterity/textindexer/tests/test_schemaeditor.py\n@@ -12,7 +12,6 @@\n \n \n class TestSchemaEditor(unittest.TestCase):\n-\n     layer = TEXT_INDEXER_FUNCTIONAL_TESTING\n \n     def setUp(self):\ndiff --git a/plone/app/dexterity/textindexer/tests/test_supermodel_handler.py b/plone/app/dexterity/textindexer/tests/test_supermodel_handler.py\nindex be09d3cf..4b8236b3 100644\n--- a/plone/app/dexterity/textindexer/tests/test_supermodel_handler.py\n+++ b/plone/app/dexterity/textindexer/tests/test_supermodel_handler.py\n@@ -106,5 +106,5 @@ class IDummy(Interface):\n \n def test_suite():\n     suite = unittest.TestSuite()\n-    suite.addTest(unittest.makeSuite(TestIndexerSchema))\n+    suite.addTest(unittest.defaultTestLoader.loadTestsFromTestCase(TestIndexerSchema))\n     return suite\ndiff --git a/plone/app/dexterity/textindexer/tests/test_utils.py b/plone/app/dexterity/textindexer/tests/test_utils.py\nindex 1afc936b..ca20de75 100644\n--- a/plone/app/dexterity/textindexer/tests/test_utils.py\n+++ b/plone/app/dexterity/textindexer/tests/test_utils.py\n@@ -7,7 +7,6 @@\n \n \n class IExample(model.Schema):\n-\n     foo = schema.TextLine(title="foo")\n \n \ndiff --git a/plone/app/dexterity/upgrades/configure.zcml b/plone/app/dexterity/upgrades/configure.zcml\nindex 3bf9bcc2..12ed234b 100644\n--- a/plone/app/dexterity/upgrades/configure.zcml\n+++ b/plone/app/dexterity/upgrades/configure.zcml\n@@ -1,85 +1,88 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n-    xmlns:genericsetup="http://namespaces.zope.org/genericsetup">\n+    xmlns:genericsetup="http://namespaces.zope.org/genericsetup"\n+    >\n \n   <genericsetup:upgradeStep\n-      source="0.1"\n-      destination="1"\n       title="Install plone.app.z3cform browser layer"\n       profile="plone.app.dexterity:default"\n+      source="0.1"\n+      destination="1"\n       handler=".to1.install_z3cform_profile"\n       />\n \n   <genericsetup:upgradeStep\n-      source="1"\n-      destination="5"\n       title="Unregister schemaeditor.css"\n       profile="plone.app.dexterity:default"\n+      source="1"\n+      destination="5"\n       handler=".to2.remove_stylesheet"\n       />\n \n   <!-- Dexterity 2.0 -->\n \n   <genericsetup:upgradeStep\n-      source="5"\n-      destination="2000"\n       title="Remove overlays.css from CSS registry"\n       profile="plone.app.dexterity:default"\n+      source="5"\n+      destination="2000"\n       handler=".to2000.remove_overlays_css"\n       />\n \n   <genericsetup:upgradeStep\n-      source="2000"\n-      destination="2001"\n       title="Add missing UUIDs to Dexterity content"\n       profile="plone.app.dexterity:default"\n+      source="2000"\n+      destination="2001"\n       handler=".to2001.add_missing_uuids"\n       />\n \n   <genericsetup:upgradeStep\n-      source="2000"\n-      destination="2002"\n       title="Install JQuery Tools date picker resources"\n       profile="plone.app.dexterity:default"\n+      source="2000"\n+      destination="2002"\n       handler=".to2002.install_datepicker_profile"\n       />\n \n   <genericsetup:upgradeStep\n-      source="2002"\n-      destination="2003"\n       title="Make sure uninstalling products won\'t destroy the intid catalog"\n       profile="plone.app.dexterity:default"\n+      source="2002"\n+      destination="2003"\n       handler=".to2003.fix_installed_products"\n       />\n \n   <genericsetup:upgradeStep\n+      title="Remove line feeds and carriage returns from the description"\n+      profile="plone.app.dexterity:default"\n       source="2003"\n       destination="2004"\n-      title="Remove line feeds and carrige returns from the description"\n-      profile="plone.app.dexterity:default"\n       handler=".to2004.remove_cr_and_lf_description"\n       />\n \n   <genericsetup:upgradeStep\n-      source="2004"\n-      destination="2005"\n       title="Remove dexterity-types from portal_actions"\n       profile="plone.app.dexterity:default"\n+      source="2004"\n+      destination="2005"\n       handler=".to2005.cleanup_portal_actions"\n       />\n \n   <genericsetup:upgradeDepends\n+      title="Update controlpanel icon"\n+      profile="plone.app.dexterity:default"\n       source="2005"\n       destination="2006"\n-      profile="plone.app.dexterity:default"\n-      title="Update controlpanel icon"\n-      import_steps="controlpanel" />\n+      import_steps="controlpanel"\n+      />\n \n   <genericsetup:upgradeDepends\n+      title="Rename Dexterity control panel"\n+      profile="plone.app.dexterity:default"\n       source="2006"\n       destination="2007"\n-      profile="plone.app.dexterity:default"\n-      title="Rename Dexterity control panel"\n-      import_steps="controlpanel" />\n+      import_steps="controlpanel"\n+      />\n \n </configure>\ndiff --git a/plone/app/dexterity/upgrades/to2004.py b/plone/app/dexterity/upgrades/to2004.py\nindex b76c72f7..91166415 100644\n--- a/plone/app/dexterity/upgrades/to2004.py\n+++ b/plone/app/dexterity/upgrades/to2004.py\n@@ -12,7 +12,7 @@ def remove_cr_and_lf_description(context):\n \n     context = context.aq_parent\n     sm = context.getSiteManager()\n-    for (name, fti) in sm.getUtilitiesFor(IDexterityFTI):\n+    for name, fti in sm.getUtilitiesFor(IDexterityFTI):\n         for behavior in behaviors:\n             if behavior in fti.behaviors:\n                 types.append(name)\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 05b615de..ccd37afe 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,3 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [tool.towncrier]\n filename = "CHANGES.rst"\n directory = "news/"\n@@ -18,3 +20,47 @@ showcontent = true\n directory = "bugfix"\n name = "Bug fixes:"\n showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "internal"\n+name = "Internal:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "documentation"\n+name = "Documentation:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "tests"\n+name = "Tests"\n+showcontent = true\n+\n+[tool.isort]\n+profile = "plone"\n+\n+[tool.black]\n+target-version = ["py38"]\n+\n+[tool.dependencychecker]\n+Zope = [\n+  # Zope own provided namespaces\n+  \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n+  \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n+  \'Zope2\', \'webdav\', \'zmi\',\n+  # Zope dependencies\n+  \'Acquisition\', \'DateTime\', \'transaction\', \'zExceptions\', \'ZODB\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.deferredimport\', \'zope.event\',\n+  \'zope.exceptions\', \'zope.globalrequest\', \'zope.i18n\', \'zope.i18nmessageid\',\n+  \'zope.interface\', \'zope.lifecycleevent\', \'zope.location\', \'zope.publisher\',\n+  \'zope.schema\', \'zope.security\', \'zope.site\', \'zope.traversing\', \'AccessControl\',\n+]\n+\'plone.base\' = [\n+  \'AccessControl\', \'Products.BTreeFolder2\', \'Products.CMFCore\',\n+  \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n+]\n+python-dateutil = [\'dateutil\']\n+ignore-packages = ["plone.app.relationfield", "plone.directives.form", "plone.directives.dexterity", "five.grok", "plone.app.intid", "plone.contentrules", "plone.schema", "z3c.relationfield"]\n+\n+[tool.codespell]\n+ignore-words-list = "discreet,hove"\ndiff --git a/setup.cfg b/setup.cfg\nindex 277886fb..e85fb4a6 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -1,16 +1,25 @@\n-[check-manifest]\n-ignore =\n-    .tx\n-    .tx/config\n-    bootstrap.py\n-    buildout.cfg\n-\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [bdist_wheel]\n universal = 0\n \n-[isort]\n-# black compatible Plone isort rules:\n-profile = black\n-force_alphabetical_sort = True\n-force_single_line = True\n-lines_after_imports = 2\n+[flake8]\n+doctests = 1\n+ignore =\n+    # black takes care of line length\n+    E501,\n+    # black takes care of where to break lines\n+    W503,\n+    # black takes care of spaces within slicing (list[:])\n+    E203,\n+    # black takes care of spaces after commas\n+    E231,\n+per-file-ignores =\n+    plone/app/dexterity/textindexer/__init__.py:F401\n+\n+[check-manifest]\n+ignore =\n+    .editorconfig\n+    .meta.toml\n+    .pre-commit-config.yaml\n+    tox.ini\ndiff --git a/setup.py b/setup.py\nindex 80923b79..537b2f86 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -57,32 +57,39 @@\n         "plone.schemaeditor >1.3.3",\n         # Plone/Zope core\n         "lxml",\n+        "plone.base",\n         "plone.app.content",\n         "plone.app.layout",\n         "plone.app.uuid",\n         "plone.app.z3cform>=1.1.0",\n         "plone.autoform>=1.1",\n         "plone.contentrules",\n-        "plone.portlets",\n         "plone.schema>=1.1.0",\n         "plone.supermodel>=1.1",\n         "plone.z3cform>=0.6.0",\n-        "Products.CMFCore",\n         "Products.GenericSetup",\n         "setuptools",\n         "Zope",\n         "zope.browserpage",\n-        "zope.interface",\n-        "zope.component",\n-        "zope.deprecation",\n-        "zope.schema",\n-        "zope.publisher",\n         "z3c.form>=3.0.0",\n+        "Products.statusmessages",\n+        "plone.app.vocabularies",\n+        "plone.indexer",\n+        "plone.locking",\n+        "plone.registry",\n+        "plone.uuid",\n+        "zope.cachedescriptors",\n+        "zope.dottedname",\n+        "zope.filerepresentation",\n     ],\n     extras_require={\n         "test": [\n             "plone.app.robotframework",\n             "plone.app.testing",\n+            "plone.app.discussion",\n+            "plone.i18n",\n+            "plone.testing",\n+            "robotsuite",\n         ],\n         "grok": [\n             "five.grok",\ndiff --git a/tox.ini b/tox.ini\nnew file mode 100644\nindex 00000000..79a0772e\n--- /dev/null\n+++ b/tox.ini\n@@ -0,0 +1,53 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[tox]\n+# We need 4.4.0 for constrain_package_deps.\n+min_version = 4.4.0\n+envlist =\n+    format\n+    lint\n+    test\n+\n+[testenv]\n+allowlist_externals =\n+    sh\n+\n+[testenv:format]\n+description = automatically reformat code\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a pyupgrade\n+    pre-commit run -a isort\n+    pre-commit run -a black\n+    pre-commit run -a zpretty\n+\n+[testenv:lint]\n+description = run linters that will help improve the code style\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a\n+\n+[testenv:dependencies]\n+description = check if the package defines all its dependencies and generate a graph out of them\n+deps =\n+    z3c.dependencychecker==2.11\n+    pipdeptree==2.5.1\n+    graphviz  # optional dependency of pipdeptree\n+commands =\n+    dependencychecker\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+\n+[testenv:test]\n+usedevelop = true\n+constrain_package_deps = true\n+deps =\n+    zope.testrunner\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    zope-testrunner --test-path={toxinidir} -s plone.app.dexterity\n+extras =\n+    test\n'

