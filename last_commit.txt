Repository: plone.resource


Branch: refs/heads/master
Date: 2018-10-02T13:42:28+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.resource/commit/b73245f4d89f010f14e9b22d76e7183b364e1551

readability

Files changed:
M plone/resource/tests/test_traversal.py

b"diff --git a/plone/resource/tests/test_traversal.py b/plone/resource/tests/test_traversal.py\nindex 5e65c04..8ca1b13 100644\n--- a/plone/resource/tests/test_traversal.py\n+++ b/plone/resource/tests/test_traversal.py\n@@ -31,24 +31,30 @@ def tearDown(self):\n         zca.popGlobalRegistry()\n \n     def test_traverse_packaged_type_specific_directory(self):\n-        dir = FilesystemResourceDirectory(test_dir_path)\n-        provideUtility(dir, provides=IResourceDirectory, name=u'++demo++foo')\n+        dire = FilesystemResourceDirectory(test_dir_path)\n+        provideUtility(dire, provides=IResourceDirectory, name=u'++demo++foo')\n \n         res = self.app.restrictedTraverse('++demo++foo')\n         self.assertTrue(res.directory.endswith('resources'))\n \n-        self.assertRaises(NotFound, self.app.restrictedTraverse, '++demo++asdf')\n+        self.assertRaises(\n+            NotFound,\n+            self.app.restrictedTraverse,\n+            '++demo++asdf',\n+        )\n \n     def test_traverse_packaged_type_specific_file(self):\n-        dir = FilesystemResourceDirectory(os.path.join(test_dir_path, 'demo', 'foo'))\n-        provideUtility(dir, provides=IResourceDirectory, name=u'++demo++foo')\n+        dire = FilesystemResourceDirectory(\n+            os.path.join(test_dir_path, 'demo', 'foo')\n+        )\n+        provideUtility(dire, provides=IResourceDirectory, name=u'++demo++foo')\n \n         res = self.app.restrictedTraverse('++demo++foo/test.html')\n         self.assertTrue(isinstance(res, FilesystemFile))\n \n     def test_traverse_global_directory(self):\n-        dir = FilesystemResourceDirectory(test_dir_path)\n-        provideUtility(dir, provides=IResourceDirectory, name=u'')\n+        dire = FilesystemResourceDirectory(test_dir_path)\n+        provideUtility(dire, provides=IResourceDirectory, name=u'')\n \n         res = self.app.restrictedTraverse('++demo++foo')\n         self.assertTrue(res.directory.endswith('resources/demo/foo'))\n@@ -61,17 +67,21 @@ def test_traverse_persistent_directory(self):\n         root._setOb('demo', BTreeFolder2('demo'))\n         root.demo._setOb('foo', BTreeFolder2('foo'))\n \n-        dir = PersistentResourceDirectory(root)\n-        provideUtility(dir, provides=IResourceDirectory, name=u'persistent')\n+        dire = PersistentResourceDirectory(root)\n+        provideUtility(dire, provides=IResourceDirectory, name=u'persistent')\n \n         res = self.app.restrictedTraverse('++demo++foo')\n-        self.assertEqual('portal_resources/demo/foo', '/'.join(res.context.getPhysicalPath()))\n+        self.assertEqual(\n+            'portal_resources/demo/foo', '/'.join(\n+                res.context.getPhysicalPath(),\n+            ),\n+        )\n \n         self.assertRaises(NotFound, self.app.restrictedTraverse, '++demo++bar')\n \n     def test_publish_resource(self):\n-        dir = FilesystemResourceDirectory(test_dir_path)\n-        provideUtility(dir, provides=IResourceDirectory, name=u'')\n+        dire = FilesystemResourceDirectory(test_dir_path)\n+        provideUtility(dire, provides=IResourceDirectory, name=u'')\n \n         browser = z2.Browser(self.app)\n         browser.handleErrors = False\n@@ -80,20 +90,24 @@ def test_publish_resource(self):\n         self.assertEqual('asdf', browser.contents)\n \n     def test_traverse_unique_resource_marks_request(self):\n-        dir = FilesystemResourceDirectory(test_dir_path)\n-        provideUtility(dir, provides=IResourceDirectory, name=u'')\n+        dire = FilesystemResourceDirectory(test_dir_path)\n+        provideUtility(dire, provides=IResourceDirectory, name=u'')\n \n-        res = self.app.restrictedTraverse('++demo++foo/++unique++bar/test.html')\n+        self.app.restrictedTraverse(\n+            '++demo++foo/++unique++bar/test.html'\n+        )\n         self.assertTrue(IUniqueResourceRequest.providedBy(self.app.REQUEST))\n \n     def test_publish_unique_resource(self):\n-        dir = FilesystemResourceDirectory(test_dir_path)\n-        provideUtility(dir, provides=IResourceDirectory, name=u'')\n+        dire = FilesystemResourceDirectory(test_dir_path)\n+        provideUtility(dire, provides=IResourceDirectory, name=u'')\n \n         browser = z2.Browser(self.app)\n         browser.handleErrors = False\n \n-        browser.open(self.app.absolute_url() + '/++demo++foo/++unique++bar/test.html')\n+        browser.open(\n+            self.app.absolute_url() + '/++demo++foo/++unique++bar/test.html'\n+        )\n         self.assertEqual('asdf', browser.contents)\n \n     def test_forbidden_resource_path_traversal(self):\n"

