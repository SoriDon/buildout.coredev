Repository: plone.app.layout


Branch: refs/heads/master
Date: 2016-02-29T15:03:28+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.layout/commit/da314a0570735e6eb289b69c4068e2e406100186

Partial pep8 in viewlets.

Files changed:
M plone/app/layout/viewlets/interfaces.py
M plone/app/layout/viewlets/social.py
M plone/app/layout/viewlets/tests/test_content.py
M plone/app/layout/viewlets/tests/test_social.py

diff --git a/plone/app/layout/viewlets/interfaces.py b/plone/app/layout/viewlets/interfaces.py
index 8ae0347..69c854a 100644
--- a/plone/app/layout/viewlets/interfaces.py
+++ b/plone/app/layout/viewlets/interfaces.py
@@ -86,6 +86,7 @@ class IPortalFooter(IViewletManager):
     """A viewlet manager that sits in the portal footer
     """
 
+
 class IScripts(IViewletManager):
     """A viewlet manager that stores the script tags
-    """
\ No newline at end of file
+    """
diff --git a/plone/app/layout/viewlets/social.py b/plone/app/layout/viewlets/social.py
index 0ce4d54..a02c050 100644
--- a/plone/app/layout/viewlets/social.py
+++ b/plone/app/layout/viewlets/social.py
@@ -43,7 +43,8 @@ def update(self):
         if settings.facebook_username:
             self.tags.append(
                 dict(property="og:article:publisher",
-                     content="https://www.facebook.com/" + settings.facebook_username))
+                     content="https://www.facebook.com/" +
+                     settings.facebook_username))
 
         # reuse syndication since that packages the data
         # the way we'd prefer likely
@@ -71,8 +72,8 @@ def update(self):
                     dict(itemprop="image", content=item.file_url),
                     dict(property="og:image:type", content=item.file_type)
                 ])
-            elif (item.file_type.startswith('video')
-                    or item.file_type == "application/x-shockwave-flash"):
+            elif (item.file_type.startswith('video') or
+                    item.file_type == "application/x-shockwave-flash"):
                 self.tags.extend([
                     dict(property="og:video", content=item.file_url),
                     dict(property="og:video:type", content=item.file_type)
@@ -90,4 +91,4 @@ def update(self):
                 dict(property="og:image", content=url),
                 dict(itemprop="image", content=url),
                 dict(property="og:image:type", content='image/png')
-            ])
\ No newline at end of file
+            ])
diff --git a/plone/app/layout/viewlets/tests/test_content.py b/plone/app/layout/viewlets/tests/test_content.py
index eddd8d8..d4e51d2 100644
--- a/plone/app/layout/viewlets/tests/test_content.py
+++ b/plone/app/layout/viewlets/tests/test_content.py
@@ -26,6 +26,7 @@ class IMyDexterityItem(Interface):
         """ Dexterity test type
         """
 
+
 class TestDocumentBylineViewletView(ViewletsTestCase):
     """
     Test the document by line viewlet
@@ -208,23 +209,31 @@ def afterSetUp(self):
             return
         self.setRoles(('Manager',))
         fti = DexterityFTI('Dexterity Item with relatedItems behavior')
-        self.portal.portal_types._setObject('Dexterity Item with relatedItems behavior', fti)
+        self.portal.portal_types._setObject(
+            'Dexterity Item with relatedItems behavior', fti)
         fti.klass = 'plone.dexterity.content.Item'
-        fti.schema = 'plone.app.layout.viewlets.tests.test_content.IMyDexterityItem'
+        test_module = 'plone.app.layout.viewlets.tests.test_content'
+        fti.schema = test_module + '.IMyDexterityItem'
         fti.behaviors = ('plone.app.relationfield.behavior.IRelatedItems',)
         fti = DexterityFTI('Dexterity Item without relatedItems behavior')
-        self.portal.portal_types._setObject('Dexterity Item without relatedItems behavior', fti)
+        self.portal.portal_types._setObject(
+            'Dexterity Item without relatedItems behavior', fti)
         fti.klass = 'plone.dexterity.content.Item'
-        fti.schema = 'plone.app.layout.viewlets.tests.test_content.IMyDexterityItem'
+        fti.schema = test_module + '.IMyDexterityItem'
         self.folder.invokeFactory('Document', 'doc1', title='Document 1')
         self.folder.invokeFactory('Document', 'doc2', title='Document 2')
-        self.folder.invokeFactory('Dexterity Item with relatedItems behavior', 'dex1')
-        self.folder.invokeFactory('Dexterity Item with relatedItems behavior', 'dex2')
-        self.folder.invokeFactory('Dexterity Item without relatedItems behavior', 'dex3')
+        self.folder.invokeFactory(
+            'Dexterity Item with relatedItems behavior', 'dex1')
+        self.folder.invokeFactory(
+            'Dexterity Item with relatedItems behavior', 'dex2')
+        self.folder.invokeFactory(
+            'Dexterity Item without relatedItems behavior', 'dex3')
         self.portal.portal_quickinstaller.installProduct('plone.app.intid')
         intids = getUtility(IIntIds)
-        self.folder.dex1.relatedItems = [RelationValue(intids.getId(self.folder.doc1)),
-                                         RelationValue(intids.getId(self.folder.doc2))]
+        self.folder.dex1.relatedItems = [
+            RelationValue(intids.getId(self.folder.doc1)),
+            RelationValue(intids.getId(self.folder.doc2)),
+        ]
 
     def testDexterityRelatedItems(self):
         request = self.app.REQUEST
diff --git a/plone/app/layout/viewlets/tests/test_social.py b/plone/app/layout/viewlets/tests/test_social.py
index dc090c1..5f258bf 100644
--- a/plone/app/layout/viewlets/tests/test_social.py
+++ b/plone/app/layout/viewlets/tests/test_social.py
@@ -32,11 +32,14 @@ def hasTag(self, viewlet, attr, name):
     def testBasicTags(self):
         viewlet = SocialTagsViewlet(self.folder, self.app.REQUEST, None)
         viewlet.update()
-        self.assertTrue(self.tagFound(viewlet, 'name', 'twitter:card', "summary"))
-        self.assertTrue(self.tagFound(viewlet, 'name', 'twitter:title',
-                                      viewlet.page_title))
-        self.assertTrue(self.tagFound(viewlet, 'property', 'og:site_name',
-                                      viewlet.site_title_setting))
+        self.assertTrue(
+            self.tagFound(viewlet, 'name', 'twitter:card', "summary"))
+        self.assertTrue(
+            self.tagFound(viewlet, 'name', 'twitter:title',
+                          viewlet.page_title))
+        self.assertTrue(
+            self.tagFound(viewlet, 'property', 'og:site_name',
+                          viewlet.site_title_setting))
 
     def testDisabled(self):
         registry = getUtility(IRegistry)
@@ -57,15 +60,18 @@ def testIncludeSocialSettings(self):
 
         viewlet = SocialTagsViewlet(self.folder, self.app.REQUEST, None)
         viewlet.update()
-        self.assertTrue(self.tagFound(viewlet, 'name', 'twitter:site', "@foobar"))
-        self.assertTrue(self.tagFound(viewlet, 'property', 'fb:app_id', 'foobar'))
+        self.assertTrue(
+            self.tagFound(viewlet, 'name', 'twitter:site', "@foobar"))
+        self.assertTrue(
+            self.tagFound(viewlet, 'property', 'fb:app_id', 'foobar'))
         self.assertTrue(
             self.tagFound(viewlet, 'property',
-                          'og:article:publisher', 'https://www.facebook.com/foobar'))
+                          'og:article:publisher',
+                          'https://www.facebook.com/foobar'))
 
     def testLogo(self):
         viewlet = SocialTagsViewlet(self.news, self.app.REQUEST, None)
         viewlet.update()
         self.assertTrue(
             self.tagFound(viewlet, 'property',
-                          'og:image', 'http://nohost/plone/logo.png'))
\ No newline at end of file
+                          'og:image', 'http://nohost/plone/logo.png'))


