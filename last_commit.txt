Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2015-11-23T15:10:12+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.querystring/commit/66389838412eccb0ab095ba312b0f72cbc48097a

In tests, use 'selection.any' in querystrings.

Issue https://github.com/plone/Products.CMFPlone/issues/1040

Files changed:
M CHANGES.rst
M plone/app/querystring/tests/testQueryBuilder.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 8e25c36..a733f2a 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,6 +10,10 @@ New:
 
 Fixes:
 
+- In tests, use ``selection.any`` in querystrings.
+  Issue https://github.com/plone/Products.CMFPlone/issues/1040
+  [maurits]
+
 - Add upgrade step to replace selection.is with selection.any operations in
   querystrings also for objects using the Collection behavior.
   [thet]
diff --git a/plone/app/querystring/tests/testQueryBuilder.py b/plone/app/querystring/tests/testQueryBuilder.py
index c47c0d4..bf61061 100644
--- a/plone/app/querystring/tests/testQueryBuilder.py
+++ b/plone/app/querystring/tests/testQueryBuilder.py
@@ -74,7 +74,7 @@ def testMakeQueryWithSubject(self):
         self.testpage.reindexObject()
         query = [{
             'i': 'Subject',
-            'o': 'plone.app.querystring.operation.selection.is',
+            'o': 'plone.app.querystring.operation.selection.any',
             'v': 'Lorem',
         }]
         results = self.querybuilder._makequery(query=query)
@@ -88,7 +88,7 @@ def testMakeQueryWithMultipleSubject(self):
         self.testpage.reindexObject()
         query = [{
             'i': 'Subject',
-            'o': 'plone.app.querystring.operation.selection.is',
+            'o': 'plone.app.querystring.operation.selection.any',
             'v': ['Lorem', 'Ipsum'],
         }]
         results = self.querybuilder._makequery(query=query)
@@ -102,7 +102,7 @@ def testMakeQueryWithSubjectWithSpecialCharacters(self):
         self.testpage.reindexObject()
         query = [{
             'i': 'Subject',
-            'o': 'plone.app.querystring.operation.selection.is',
+            'o': 'plone.app.querystring.operation.selection.any',
             'v': 'Äüö',
         }]
         results = self.querybuilder._makequery(query=query)
@@ -119,7 +119,7 @@ def testMakeQueryWithUnicodeSubjectWithSpecialCharacters(self):
         self.testpage.reindexObject()
         query = [{
             'i': 'Subject',
-            'o': 'plone.app.querystring.operation.selection.is',
+            'o': 'plone.app.querystring.operation.selection.any',
             'v': u'Äüö',
         }]
         results = self.querybuilder._makequery(query=query)
@@ -136,7 +136,7 @@ def testMakeQueryWithUnicodeSubjectWithMultipleSubjects(self):
         self.testpage.reindexObject()
         query = [{
             'i': 'Subject',
-            'o': 'plone.app.querystring.operation.selection.is',
+            'o': 'plone.app.querystring.operation.selection.any',
             'v': [u'Äüö', u'Üöß'],
         }]
         results = self.querybuilder._makequery(query=query)


Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2015-11-23T16:03:14+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.querystring/commit/bc73cd3e3adf946c2c7ed0825e0951b55d0a798c

Again upgrade collections with selection.is to selection.any.

The standard events and news collections may have been wrongly created
in a new site.

Issue https://github.com/plone/Products.CMFPlone/issues/1040

Files changed:
M CHANGES.rst
M plone/app/querystring/upgrades.py
M plone/app/querystring/upgrades.zcml

diff --git a/CHANGES.rst b/CHANGES.rst
index a733f2a..61d8c36 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,12 +10,19 @@ New:
 
 Fixes:
 
+- Again upgrade collections with ``selection.is`` to
+  ``selection.any``, because the standard events and news collections
+  may have been wrongly created in a new site.
+  Issue https://github.com/plone/Products.CMFPlone/issues/1040
+  [maurits]
+
 - In tests, use ``selection.any`` in querystrings.
   Issue https://github.com/plone/Products.CMFPlone/issues/1040
   [maurits]
 
-- Add upgrade step to replace selection.is with selection.any operations in
-  querystrings also for objects using the Collection behavior.
+- Added upgrade step to replace ``selection.is`` with
+  ``selection.any`` operations in querystrings also for objects using
+  the Collection behavior.
   [thet]
 
 
diff --git a/plone/app/querystring/upgrades.py b/plone/app/querystring/upgrades.py
index 34307cf..57d1389 100644
--- a/plone/app/querystring/upgrades.py
+++ b/plone/app/querystring/upgrades.py
@@ -18,9 +18,10 @@ def upgrade_1_to_2_typo_in_registry(context):
     registry[name] = values
 
 
-def fix_select_all_existing_collections(
-        context,
-        query={"portal_type": "Collection"}):
+def fix_select_all_existing_collections(context, query=None):
+
+    if query is None:
+        query = {"portal_type": "Collection"}
 
     indexes_to_fix = [
         u'portal_type',
diff --git a/plone/app/querystring/upgrades.zcml b/plone/app/querystring/upgrades.zcml
index 3ae8358..7506ded 100644
--- a/plone/app/querystring/upgrades.zcml
+++ b/plone/app/querystring/upgrades.zcml
@@ -121,13 +121,20 @@
       handler=".upgrades.fix_select_all_existing_collections"
       />
 
-  <genericsetup:upgradeStep
+  <genericsetup:upgradeSteps
       source="12"
       destination="13"
-      title="Fix ISyndicatableCollection objects"
-      profile="plone.app.querystring:default"
-      description="Fix indexes on Dexterity objects by changing 'is' operators to 'any'. All objects using the Collection behavior are fixed."
-      handler=".upgrades.fix_select_all_syndicatable_collections"
-      />
+      profile="plone.app.querystring:default">
+    <genericsetup:upgradeStep
+        title="Fix ISyndicatableCollection objects"
+        description="Fix indexes on Dexterity objects by changing 'is' operators to 'any'. All objects using the Collection behavior are fixed."
+        handler=".upgrades.fix_select_all_syndicatable_collections"
+        />
+    <genericsetup:upgradeStep
+        title="Fix existing collections"
+        description="Fix indexes on existing collections by changing 'is' operators to 'any'"
+        handler=".upgrades.fix_select_all_existing_collections"
+        />
+  </genericsetup:upgradeSteps>
 
 </configure>


Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2015-11-25T11:38:46+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.forcada@freitag.de>
Commit: https://github.com/plone/plone.app.querystring/commit/a40b003019bc011396a8a7014a8fcd3ca459a743

Merge pull request #57 from plone/cmfplone-issue-1040

In tests, use 'selection.any' in querystrings.

Files changed:
M CHANGES.rst
M plone/app/querystring/tests/testQueryBuilder.py
M plone/app/querystring/upgrades.py
M plone/app/querystring/upgrades.zcml

diff --git a/CHANGES.rst b/CHANGES.rst
index 8e25c36..61d8c36 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,8 +10,19 @@ New:
 
 Fixes:
 
-- Add upgrade step to replace selection.is with selection.any operations in
-  querystrings also for objects using the Collection behavior.
+- Again upgrade collections with ``selection.is`` to
+  ``selection.any``, because the standard events and news collections
+  may have been wrongly created in a new site.
+  Issue https://github.com/plone/Products.CMFPlone/issues/1040
+  [maurits]
+
+- In tests, use ``selection.any`` in querystrings.
+  Issue https://github.com/plone/Products.CMFPlone/issues/1040
+  [maurits]
+
+- Added upgrade step to replace ``selection.is`` with
+  ``selection.any`` operations in querystrings also for objects using
+  the Collection behavior.
   [thet]
 
 
diff --git a/plone/app/querystring/tests/testQueryBuilder.py b/plone/app/querystring/tests/testQueryBuilder.py
index c47c0d4..bf61061 100644
--- a/plone/app/querystring/tests/testQueryBuilder.py
+++ b/plone/app/querystring/tests/testQueryBuilder.py
@@ -74,7 +74,7 @@ def testMakeQueryWithSubject(self):
         self.testpage.reindexObject()
         query = [{
             'i': 'Subject',
-            'o': 'plone.app.querystring.operation.selection.is',
+            'o': 'plone.app.querystring.operation.selection.any',
             'v': 'Lorem',
         }]
         results = self.querybuilder._makequery(query=query)
@@ -88,7 +88,7 @@ def testMakeQueryWithMultipleSubject(self):
         self.testpage.reindexObject()
         query = [{
             'i': 'Subject',
-            'o': 'plone.app.querystring.operation.selection.is',
+            'o': 'plone.app.querystring.operation.selection.any',
             'v': ['Lorem', 'Ipsum'],
         }]
         results = self.querybuilder._makequery(query=query)
@@ -102,7 +102,7 @@ def testMakeQueryWithSubjectWithSpecialCharacters(self):
         self.testpage.reindexObject()
         query = [{
             'i': 'Subject',
-            'o': 'plone.app.querystring.operation.selection.is',
+            'o': 'plone.app.querystring.operation.selection.any',
             'v': 'Äüö',
         }]
         results = self.querybuilder._makequery(query=query)
@@ -119,7 +119,7 @@ def testMakeQueryWithUnicodeSubjectWithSpecialCharacters(self):
         self.testpage.reindexObject()
         query = [{
             'i': 'Subject',
-            'o': 'plone.app.querystring.operation.selection.is',
+            'o': 'plone.app.querystring.operation.selection.any',
             'v': u'Äüö',
         }]
         results = self.querybuilder._makequery(query=query)
@@ -136,7 +136,7 @@ def testMakeQueryWithUnicodeSubjectWithMultipleSubjects(self):
         self.testpage.reindexObject()
         query = [{
             'i': 'Subject',
-            'o': 'plone.app.querystring.operation.selection.is',
+            'o': 'plone.app.querystring.operation.selection.any',
             'v': [u'Äüö', u'Üöß'],
         }]
         results = self.querybuilder._makequery(query=query)
diff --git a/plone/app/querystring/upgrades.py b/plone/app/querystring/upgrades.py
index 34307cf..57d1389 100644
--- a/plone/app/querystring/upgrades.py
+++ b/plone/app/querystring/upgrades.py
@@ -18,9 +18,10 @@ def upgrade_1_to_2_typo_in_registry(context):
     registry[name] = values
 
 
-def fix_select_all_existing_collections(
-        context,
-        query={"portal_type": "Collection"}):
+def fix_select_all_existing_collections(context, query=None):
+
+    if query is None:
+        query = {"portal_type": "Collection"}
 
     indexes_to_fix = [
         u'portal_type',
diff --git a/plone/app/querystring/upgrades.zcml b/plone/app/querystring/upgrades.zcml
index 3ae8358..7506ded 100644
--- a/plone/app/querystring/upgrades.zcml
+++ b/plone/app/querystring/upgrades.zcml
@@ -121,13 +121,20 @@
       handler=".upgrades.fix_select_all_existing_collections"
       />
 
-  <genericsetup:upgradeStep
+  <genericsetup:upgradeSteps
       source="12"
       destination="13"
-      title="Fix ISyndicatableCollection objects"
-      profile="plone.app.querystring:default"
-      description="Fix indexes on Dexterity objects by changing 'is' operators to 'any'. All objects using the Collection behavior are fixed."
-      handler=".upgrades.fix_select_all_syndicatable_collections"
-      />
+      profile="plone.app.querystring:default">
+    <genericsetup:upgradeStep
+        title="Fix ISyndicatableCollection objects"
+        description="Fix indexes on Dexterity objects by changing 'is' operators to 'any'. All objects using the Collection behavior are fixed."
+        handler=".upgrades.fix_select_all_syndicatable_collections"
+        />
+    <genericsetup:upgradeStep
+        title="Fix existing collections"
+        description="Fix indexes on existing collections by changing 'is' operators to 'any'"
+        handler=".upgrades.fix_select_all_existing_collections"
+        />
+  </genericsetup:upgradeSteps>
 
 </configure>


