Repository: plone.portlet.collection


Branch: refs/heads/master
Date: 2023-03-13T00:37:00+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.portlet.collection/commit/ff38175460ca18f7ca1af8ff6668d141d2c6a70b

Configuring with plone/meta

Files changed:
A .editorconfig
A .meta.toml
A .pre-commit-config.yaml
A news/a533099d.internal
A tox.ini
M pyproject.toml
M setup.cfg

b'diff --git a/.editorconfig b/.editorconfig\nnew file mode 100644\nindex 0000000..b4158b8\n--- /dev/null\n+++ b/.editorconfig\n@@ -0,0 +1,39 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+#\n+# EditorConfig Configuration file, for more details see:\n+# http://EditorConfig.org\n+# EditorConfig is a convention description, that could be interpreted\n+# by multiple editors to enforce common coding conventions for specific\n+# file types\n+\n+# top-most EditorConfig file:\n+# Will ignore other EditorConfig files in Home directory or upper tree level.\n+root = true\n+\n+\n+[*]  # For All Files\n+# Unix-style newlines with a newline ending every file\n+end_of_line = lf\n+insert_final_newline = true\n+trim_trailing_whitespace = true\n+# Set default charset\n+charset = utf-8\n+# Indent style default\n+indent_style = space\n+# Max Line Length - a hard line wrap, should be disabled\n+max_line_length = off\n+\n+[*.{py,cfg,ini}]\n+# 4 space indentation\n+indent_size = 4\n+\n+[*.{yml,zpt,pt,dtml,zcml}]\n+# 2 space indentation\n+indent_size = 2\n+\n+[{Makefile,.gitmodules}]\n+# Tab indentation (no size specified, but view as 4 spaces)\n+indent_style = tab\n+indent_size = unset\n+tab_width = unset\ndiff --git a/.meta.toml b/.meta.toml\nnew file mode 100644\nindex 0000000..0df002c\n--- /dev/null\n+++ b/.meta.toml\n@@ -0,0 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[meta]\n+template = "default"\n+commit-id = "a533099d"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nnew file mode 100644\nindex 0000000..582f8ac\n--- /dev/null\n+++ b/.pre-commit-config.yaml\n@@ -0,0 +1,42 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+ci:\n+    autofix_prs: false\n+    autoupdate_schedule: monthly\n+\n+repos:\n+-   repo: https://github.com/asottile/pyupgrade\n+    rev: v3.3.1\n+    hooks:\n+    -   id: pyupgrade\n+        args: [--py38-plus]\n+-   repo: https://github.com/pycqa/isort\n+    rev: 5.12.0\n+    hooks:\n+    -   id: isort\n+-   repo: https://github.com/psf/black\n+    rev: 23.1.0\n+    hooks:\n+    -   id: black\n+-   repo: https://github.com/collective/zpretty\n+    rev: 3.0.2\n+    hooks:\n+    -   id: zpretty\n+-   repo: https://github.com/PyCQA/flake8\n+    rev: 6.0.0\n+    hooks:\n+    -   id: flake8\n+-   repo: https://github.com/codespell-project/codespell\n+    rev: v2.2.2\n+    hooks:\n+    -   id: codespell\n+        additional_dependencies:\n+          - tomli\n+-   repo: https://github.com/mgedmin/check-manifest\n+    rev: "0.49"\n+    hooks:\n+    -   id: check-manifest\n+-   repo: https://github.com/regebro/pyroma\n+    rev: "4.2"\n+    hooks:\n+    -   id: pyroma\ndiff --git a/news/a533099d.internal b/news/a533099d.internal\nnew file mode 100644\nindex 0000000..c08f539\n--- /dev/null\n+++ b/news/a533099d.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 05b615d..9d0c563 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,3 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [tool.towncrier]\n filename = "CHANGES.rst"\n directory = "news/"\n@@ -18,3 +20,43 @@ showcontent = true\n directory = "bugfix"\n name = "Bug fixes:"\n showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "internal"\n+name = "Internal:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "documentation"\n+name = "Documentation:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "tests"\n+name = "Tests"\n+showcontent = true\n+\n+[tool.isort]\n+profile = "plone"\n+\n+[tool.black]\n+target-version = ["py38"]\n+\n+[tool.dependencychecker]\n+Zope = [\n+  # Zope own provided namespaces\n+  \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n+  \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n+  \'Zope2\', \'webdav\', \'zmi\',\n+  # Zope dependencies\n+  \'Acquisition\', \'DateTime\', \'transaction\', \'zExceptions\', \'ZODB\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.deferredimport\', \'zope.event\',\n+  \'zope.exceptions\', \'zope.globalrequest\', \'zope.i18n\', \'zope.i18nmessageid\',\n+  \'zope.interface\', \'zope.lifecycleevent\', \'zope.location\', \'zope.publisher\',\n+  \'zope.schema\', \'zope.security\', \'zope.site\', \'zope.traversing\', \'AccessControl\',\n+]\n+\'plone.base\' = [\n+  \'setuptools\', \'AccessControl\', \'Products.BTreeFolder2\', \'Products.CMFCore\',\n+  \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n+]\n+python-dateutil = [\'dateutil\']\ndiff --git a/setup.cfg b/setup.cfg\nindex 5543069..bf4da34 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -1,31 +1,25 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [bdist_wheel]\n universal = 0\n \n-[check-manifest]\n-ignore =\n-    *.cfg\n-    .coveragerc\n-    .editorconfig\n-\n-[isort]\n-# black compatible isort rules:\n-profile = black\n-force_alphabetical_sort = True\n-force_single_line = True\n-lines_after_imports = 2\n-\n [flake8]\n-# black compatible flake8 rules:\n+doctests = 1\n ignore =\n+    # black takes care of line length\n+    E501,\n+    # black takes care of where to break lines\n     W503,\n-    C812,\n-    E501\n-    T001\n-    C813\n-# E203, E266\n-exclude = bootstrap.py,docs,*.egg.,omelette\n-max-line-length = 88\n-max-complexity = 18\n-select = B,C,E,F,W,T4,B9\n+    # black takes care of spaces within slicing (list[:])\n+    E203,\n+    # black takes care of spaces after commas\n+    E231,\n \n-builtins = unicode,basestring\n+[check-manifest]\n+ignore =\n+    .editorconfig\n+    .meta.toml\n+    .pre-commit-config.yaml\n+    tox.ini\n+    *.cfg\n+    .coveragerc\ndiff --git a/tox.ini b/tox.ini\nnew file mode 100644\nindex 0000000..4eff2bc\n--- /dev/null\n+++ b/tox.ini\n@@ -0,0 +1,50 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[tox]\n+envlist =\n+    format\n+    lint\n+    test\n+\n+[testenv]\n+allowlist_externals =\n+    sh\n+\n+[testenv:format]\n+description = automatically reformat code\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a pyupgrade\n+    pre-commit run -a isort\n+    pre-commit run -a black\n+    pre-commit run -a zpretty\n+\n+[testenv:lint]\n+description = run linters that will help improve the code style\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a\n+\n+[testenv:dependencies]\n+description = check if the package defines all its dependencies and generate a graph out of them\n+deps =\n+    z3c.dependencychecker==2.11\n+    pipdeptree==2.5.1\n+    graphviz  # optional dependency of pipdeptree\n+commands =\n+    dependencychecker\n+    sh -c \'pipdeptree --exclude setuptools,pipdeptree,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+\n+[testenv:test]\n+usedevelop = true\n+deps =\n+    zope.testrunner\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    zope-testrunner --test-path={toxinidir} -s plone.portlet.collection\n+extras =\n+    test\n'

Repository: plone.portlet.collection


Branch: refs/heads/master
Date: 2023-03-13T00:37:35+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.portlet.collection/commit/4e37fab774bd85d5d7a8ea55fd88451e6929ed0e

chore: black

Files changed:
M plone/portlet/collection/testing.py
M plone/portlet/collection/tests/test_portlet_collection.py

b'diff --git a/plone/portlet/collection/testing.py b/plone/portlet/collection/testing.py\nindex c75d68b..b826759 100644\n--- a/plone/portlet/collection/testing.py\n+++ b/plone/portlet/collection/testing.py\n@@ -10,7 +10,6 @@\n \n \n class PlonePortletCollection(PloneSandboxLayer):\n-\n     defaultBases = (PLONE_FIXTURE,)\n \n     def setUpZope(self, app, configurationContext):\ndiff --git a/plone/portlet/collection/tests/test_portlet_collection.py b/plone/portlet/collection/tests/test_portlet_collection.py\nindex cb90c76..eb50b28 100644\n--- a/plone/portlet/collection/tests/test_portlet_collection.py\n+++ b/plone/portlet/collection/tests/test_portlet_collection.py\n@@ -19,7 +19,6 @@\n \n \n class TestPortlet(unittest.TestCase):\n-\n     layer = PLONE_PORTLET_COLLECTION_INTEGRATION_TESTING\n \n     def setUp(self):\n@@ -72,7 +71,6 @@ def testRenderer(self):\n \n \n class TestRenderer(unittest.TestCase):\n-\n     layer = PLONE_PORTLET_COLLECTION_INTEGRATION_TESTING\n \n     def setUp(self):\n@@ -114,7 +112,6 @@ def test_css_class(self):\n \n \n class TestCollectionQuery(unittest.TestCase):\n-\n     layer = PLONE_PORTLET_COLLECTION_INTEGRATION_TESTING\n \n     def setUp(self):\n'

Repository: plone.portlet.collection


Branch: refs/heads/master
Date: 2023-03-13T00:38:19+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.portlet.collection/commit/e3ff4c1d025e86a83982fbb6d67100cbedca55e3

chore: zpretty

Files changed:
M plone/portlet/collection/collection.pt
M plone/portlet/collection/configure.zcml
M plone/portlet/collection/profiles/default/metadata.xml
M plone/portlet/collection/profiles/default/portlets.xml

b'diff --git a/plone/portlet/collection/collection.pt b/plone/portlet/collection/collection.pt\nindex 6c7c862..3a6e1c4 100644\n--- a/plone/portlet/collection/collection.pt\n+++ b/plone/portlet/collection/collection.pt\n@@ -1,42 +1,38 @@\n-<html\n-    xmlns="http://www.w3.org/1999/xhtml"\n-    xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n-    xmlns:tal="http://xml.zope.org/namespaces/tal"\n-    tal:omit-tag=""\n-    >\n+<html xmlns="http://www.w3.org/1999/xhtml"\n+      xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+      xmlns:tal="http://xml.zope.org/namespaces/tal"\n+      tal:omit-tag=""\n+>\n \n-  <div\n-      class="card portlet portletCollection"\n-      tal:define="\n-        collection_url view/collection_url;\n-        plone_view context/@@plone;\n-        toLocalizedTime nocall:plone_view/toLocalizedTime;\n-        viewActions python:context.portal_registry.get(\'plone.types_use_view_action_in_listings\', []);\n-        icons nocall:context/@@iconresolver;\n-        normalizeString nocall:plone_view/normalizeString;\n-      "\n-      tal:attributes="\n-        class string:card portlet portletCollection ${view/css_class};\n-      "\n-      i18n:domain="plone"\n-      >\n+  <div class="card portlet portletCollection"\n+       tal:define="\n+         collection_url view/collection_url;\n+         plone_view context/@@plone;\n+         toLocalizedTime nocall:plone_view/toLocalizedTime;\n+         viewActions python:context.portal_registry.get(\'plone.types_use_view_action_in_listings\', []);\n+         icons nocall:context/@@iconresolver;\n+         normalizeString nocall:plone_view/normalizeString;\n+       "\n+       tal:attributes="\n+         class string:card portlet portletCollection ${view/css_class};\n+       "\n+       i18n:domain="plone"\n+  >\n \n     <div class="card-header">\n-      <a\n-          tal:omit-tag="not:view/data/show_more"\n-          tal:attributes="\n-            href collection_url;\n-          "\n-          >\n-        <span tal:content="view/data/header" />\n+      <a tal:omit-tag="not:view/data/show_more"\n+         tal:attributes="\n+           href collection_url;\n+         "\n+      >\n+        <span tal:content="view/data/header"></span>\n       </a>\n     </div>\n \n     <div class="card-body">\n       <ul>\n         <tal:events tal:repeat="obj view/results">\n-          <li\n-              class="portletItem"\n+          <li class="portletItem"\n               tal:define="\n                 plone_layout context/@@plone_layout;\n                 portal context/@@plone_portal_state/portal;\n@@ -56,58 +52,51 @@\n               tal:attributes="\n                 class python:oddrow and \'portletItem even\' or \'portletItem odd\';\n               "\n-              >\n-            <a\n-                href="#"\n-                tal:attributes="\n-                  href itemUrl;\n-                  class  string:tile $item_type_class $item_wf_state_class;\n-                  title obj/Description;\n-                "\n-                >\n+          >\n+            <a href="#"\n+               tal:attributes="\n+                 href itemUrl;\n+                 class  string:tile $item_type_class $item_wf_state_class;\n+                 title obj/Description;\n+               "\n+            >\n \n-              <tal:icon\n-                  tal:condition="python: not supress_icon and item_type != \'File\'"\n-                  tal:replace="structure python:icons.tag(f\'contenttype/{normalizeString(item_type)}\')"\n-                  />\n-              <tal:icon\n-                  tal:condition="python: not supress_icon and item_type == \'File\'"\n-                  tal:replace="structure python:icons.tag(f\'mimetype-{obj.mime_type}\')"\n-                  />\n-              <img\n-                  tal:condition="python: obj.getIcon and thumb_scale and not supress_thumb"\n-                  tal:replace="structure python:image_scale.tag(obj, \'image\', scale=thumb_scale, css_class=\'float-end thumb-\'+thumb_scale)"\n-                  />\n+              <tal:icon tal:condition="python: not supress_icon and item_type != \'File\'"\n+                        tal:replace="structure python:icons.tag(f\'contenttype/{normalizeString(item_type)}\')"\n+              />\n+              <tal:icon tal:condition="python: not supress_icon and item_type == \'File\'"\n+                        tal:replace="structure python:icons.tag(f\'mimetype-{obj.mime_type}\')"\n+              />\n+              <img tal:condition="python: obj.getIcon and thumb_scale and not supress_thumb"\n+                   tal:replace="structure python:image_scale.tag(obj, \'image\', scale=thumb_scale, css_class=\'float-end thumb-\'+thumb_scale)"\n+              />\n \n               <span tal:replace="obj/Title">Title</span>\n             </a>\n-            <div\n-                class="portletItemDetails"\n-                tal:define="\n-                  obj_date python:obj.start and obj.start or obj.Date();\n-                "\n-                tal:condition="view/data/show_dates"\n-                tal:content="python:toLocalizedTime(obj_date)"\n-                >May 5</div>\n+            <div class="portletItemDetails"\n+                 tal:define="\n+                   obj_date python:obj.start and obj.start or obj.Date();\n+                 "\n+                 tal:condition="view/data/show_dates"\n+                 tal:content="python:toLocalizedTime(obj_date)"\n+            >May 5</div>\n           </li>\n         </tal:events>\n       </ul>\n     </div>\n \n-    <div\n-        class="card-footer"\n-        tal:define="\n-          showMore view/data/show_more;\n-        "\n-        tal:condition="python:showMore or view.include_empty_footer()"\n-        >\n-      <a\n-          tal:condition="showMore"\n-          tal:attributes="\n-            href collection_url;\n-          "\n-          >\n-        <span class="hiddenStructure"><span tal:replace="view/data/header" />\n+    <div class="card-footer"\n+         tal:define="\n+           showMore view/data/show_more;\n+         "\n+         tal:condition="python:showMore or view.include_empty_footer()"\n+    >\n+      <a tal:condition="showMore"\n+         tal:attributes="\n+           href collection_url;\n+         "\n+      >\n+        <span class="hiddenStructure"><span tal:replace="view/data/header"></span>\n           -\n         </span>\n         <span i18n:translate="more_url">More&hellip;</span>\ndiff --git a/plone/portlet/collection/configure.zcml b/plone/portlet/collection/configure.zcml\nindex c025070..18a0354 100644\n--- a/plone/portlet/collection/configure.zcml\n+++ b/plone/portlet/collection/configure.zcml\n@@ -3,32 +3,33 @@\n     xmlns:five="http://namespaces.zope.org/five"\n     xmlns:genericsetup="http://namespaces.zope.org/genericsetup"\n     xmlns:plone="http://namespaces.plone.org/plone"\n-    i18n_domain="plone">\n+    i18n_domain="plone"\n+    >\n \n-    <five:registerPackage package="." />\n+  <five:registerPackage package="." />\n \n-    <genericsetup:registerProfile\n-       name="default"\n-       title="Collection portlet"\n-       directory="profiles/default"\n-       description="A simple portlet that displays the results of a collection object"\n-       provides="Products.GenericSetup.interfaces.EXTENSION"\n-       />\n+  <genericsetup:registerProfile\n+      name="default"\n+      title="Collection portlet"\n+      description="A simple portlet that displays the results of a collection object"\n+      provides="Products.GenericSetup.interfaces.EXTENSION"\n+      directory="profiles/default"\n+      />\n \n-     <permission\n-       id="plone.portlet.collection.AddCollectionPortlet"\n-       title="plone.portlet.collection: Add collection portlet"\n-       />\n+  <permission\n+      id="plone.portlet.collection.AddCollectionPortlet"\n+      title="plone.portlet.collection: Add collection portlet"\n+      />\n \n-     <!-- Register the portlet -->\n-     <plone:portlet\n-         name="plone.portlet.collection.Collection"\n-         interface=".collection.ICollectionPortlet"\n-         assignment=".collection.Assignment"\n-         view_permission="zope2.View"\n-         edit_permission="plone.portlet.collection.AddCollectionPortlet"\n-         renderer=".collection.Renderer"\n-         addview=".collection.AddForm"\n-         editview=".collection.EditForm"\n-         />\n+  <!-- Register the portlet -->\n+  <plone:portlet\n+      name="plone.portlet.collection.Collection"\n+      interface=".collection.ICollectionPortlet"\n+      assignment=".collection.Assignment"\n+      renderer=".collection.Renderer"\n+      addview=".collection.AddForm"\n+      editview=".collection.EditForm"\n+      view_permission="zope2.View"\n+      edit_permission="plone.portlet.collection.AddCollectionPortlet"\n+      />\n </configure>\ndiff --git a/plone/portlet/collection/profiles/default/metadata.xml b/plone/portlet/collection/profiles/default/metadata.xml\nindex 4638879..55b4448 100644\n--- a/plone/portlet/collection/profiles/default/metadata.xml\n+++ b/plone/portlet/collection/profiles/default/metadata.xml\n@@ -1,4 +1,4 @@\n-<?xml version="1.0"?>\n+<?xml version="1.0" encoding="utf-8"?>\n <metadata>\n   <version>1</version>\n   <dependencies>\ndiff --git a/plone/portlet/collection/profiles/default/portlets.xml b/plone/portlet/collection/profiles/default/portlets.xml\nindex b31b898..a4e0ea6 100644\n--- a/plone/portlet/collection/profiles/default/portlets.xml\n+++ b/plone/portlet/collection/profiles/default/portlets.xml\n@@ -1,16 +1,14 @@\n-<?xml version="1.0"?>\n-<portlets\n-    xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n-    i18n:domain="plone">\n+<?xml version="1.0" encoding="utf-8"?>\n+<portlets xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+          i18n:domain="plone"\n+>\n \n- <!-- Portlet type registrations -->\n+  <!-- Portlet type registrations -->\n \n- <portlet\n-   addview="plone.portlet.collection.Collection"\n-   title="Collection portlet"\n-   description="A portlet which displays the results of a collection query"\n-   i18n:attributes="title;\n-                    description"\n-   />\n+  <portlet addview="plone.portlet.collection.Collection"\n+           description="A portlet which displays the results of a collection query"\n+           title="Collection portlet"\n+           i18n:attributes="title; description"\n+  />\n \n </portlets>\n'

Repository: plone.portlet.collection


Branch: refs/heads/master
Date: 2023-03-13T00:39:15+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.portlet.collection/commit/9ee488404f47a696c4fa8a97330aae0f78d7d484

feat: codespell

Files changed:
M CHANGES.rst

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 2e64cd8..ca2e319 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -145,7 +145,7 @@ Bug fixes:\n \n New features:\n \n-- add options to supress icons,\n+- add options to suppress icons,\n   read thumb_scale from registry plus  option to override thumb_scale individually\n   or suppress thumbs.\n   Replace paper clip (fontello icon) with mimetype icon\n'

Repository: plone.portlet.collection


Branch: refs/heads/master
Date: 2023-03-13T00:39:50+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.portlet.collection/commit/60533f96c21e2c9ec3370d6da1ea4b7d36eaefed

feat: pyroma

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex 37edd5d..4496656 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -33,6 +33,7 @@\n     namespace_packages=["plone", "plone.portlet"],\n     include_package_data=True,\n     zip_safe=False,\n+    python_requires=">=3.8",\n     install_requires=[\n         "setuptools",\n         "plone.memoize",\n'

Repository: plone.portlet.collection


Branch: refs/heads/master
Date: 2023-03-13T00:47:40+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.portlet.collection/commit/06f95f8beaabcf620df763cdc4dbdf6319ada76c

fix: allow tests to run

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex 4496656..5600c48 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -42,6 +42,6 @@\n         "plone.app.vocabularies",\n     ],\n     extras_require={\n-        "test": ["plone.app.testing", "plone.app.contenttypes"],\n+        "test": ["plone.app.testing", "plone.app.contenttypes[test]"],\n     },\n )\n'

Repository: plone.portlet.collection


Branch: refs/heads/master
Date: 2023-03-13T01:02:12+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.portlet.collection/commit/0be2c396ded3dcda56cc290dffb58de00db77a23

feat(dependencies): remove p.a.layout and CMFPlone

Files changed:
M plone/portlet/collection/collection.py

b'diff --git a/plone/portlet/collection/collection.py b/plone/portlet/collection/collection.py\nindex 60eac21..25852c5 100644\n--- a/plone/portlet/collection/collection.py\n+++ b/plone/portlet/collection/collection.py\n@@ -1,18 +1,18 @@\n from ComputedAttribute import ComputedAttribute\n-from plone.app.layout.navigation.root import getNavigationRoot\n from plone.app.portlets.browser import formhelper\n from plone.app.portlets.portlets import base\n from plone.app.uuid.utils import uuidToObject\n from plone.app.z3cform.widget import RelatedItemsFieldWidget\n from plone.autoform.directives import widget\n+from plone.base.defaultpage import is_default_page\n+from plone.base.interfaces.controlpanel import ISiteSchema\n+from plone.base.navigationroot import get_navigation_root\n from plone.i18n.normalizer.interfaces import IIDNormalizer\n from plone.memoize.instance import memoize\n from plone.portlet.collection import PloneMessageFactory as _\n from plone.portlets.interfaces import IPortletDataProvider\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.defaultpage import is_default_page\n-from Products.CMFPlone.interfaces.controlpanel import ISiteSchema\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.MimetypesRegistry.MimeTypeItem import guess_icon_path\n from zExceptions import NotFound\n@@ -310,7 +310,7 @@ def thumb_scale(self):\n \n     def getMimeTypeIcon(self, obj):\n         fileo = obj.getObject().file\n-        portal_url = getNavigationRoot(self.context)\n+        portal_url = get_navigation_root(self.context)\n         mtt = getToolByName(self.context, "mimetypes_registry")\n         if fileo.contentType:\n             ctype = mtt.lookup(fileo.contentType)\n'

Repository: plone.portlet.collection


Branch: refs/heads/master
Date: 2023-03-13T01:03:37+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.portlet.collection/commit/055bca8364b54a27da4e9873406325b62326c582

chore: no need of a fallback

Files changed:
M plone/__init__.py
M plone/portlet/__init__.py

b'diff --git a/plone/__init__.py b/plone/__init__.py\nindex 05f0beb..5284146 100644\n--- a/plone/__init__.py\n+++ b/plone/__init__.py\n@@ -1,7 +1 @@\n-# See http://peak.telecommunity.com/DevCenter/setuptools#namespace-packages\n-try:\n-    __import__("pkg_resources").declare_namespace(__name__)\n-except ImportError:\n-    from pkgutil import extend_path\n-\n-    __path__ = extend_path(__path__, __name__)\n+__import__("pkg_resources").declare_namespace(__name__)\ndiff --git a/plone/portlet/__init__.py b/plone/portlet/__init__.py\nindex 05f0beb..5284146 100644\n--- a/plone/portlet/__init__.py\n+++ b/plone/portlet/__init__.py\n@@ -1,7 +1 @@\n-# See http://peak.telecommunity.com/DevCenter/setuptools#namespace-packages\n-try:\n-    __import__("pkg_resources").declare_namespace(__name__)\n-except ImportError:\n-    from pkgutil import extend_path\n-\n-    __path__ = extend_path(__path__, __name__)\n+__import__("pkg_resources").declare_namespace(__name__)\n'

Repository: plone.portlet.collection


Branch: refs/heads/master
Date: 2023-03-13T01:08:20+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.portlet.collection/commit/beabd08da03f20e4da1c0db1cfb28ec09714764a

feat(dependencies): configure z3c.dependencychecker

Files changed:
M pyproject.toml

b"diff --git a/pyproject.toml b/pyproject.toml\nindex 9d0c563..8502a13 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -60,3 +60,4 @@ Zope = [\n   'Products.CMFDynamicViewFTI', 'zope.deprecation',\n ]\n python-dateutil = ['dateutil']\n+ExtensionClass = ['ComputedAttribute']\n"

Repository: plone.portlet.collection


Branch: refs/heads/master
Date: 2023-03-13T01:08:29+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.portlet.collection/commit/8894eba834574f5617d71a3eabaf969bb0a35572

feat: declare dependencies

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex 5600c48..e1c853f 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -35,13 +35,29 @@\n     zip_safe=False,\n     python_requires=">=3.8",\n     install_requires=[\n-        "setuptools",\n+        "ExtensionClass",\n+        "plone.base",\n         "plone.memoize",\n         "plone.portlets",\n         "plone.app.portlets",\n         "plone.app.vocabularies",\n+        "Products.GenericSetup",\n+        "Products.MimetypesRegistry",\n+        "plone.app.collection",\n+        "plone.app.contenttypes",\n+        "plone.app.querystring",\n+        "plone.app.uuid",\n+        "plone.app.z3cform",\n+        "plone.autoform",\n+        "plone.i18n",\n+        "plone.registry",\n     ],\n     extras_require={\n-        "test": ["plone.app.testing", "plone.app.contenttypes[test]"],\n+        "test": [\n+            "lxml",\n+            "plone.testing",\n+            "plone.app.testing",\n+            "plone.app.contenttypes[test]",\n+        ],\n     },\n )\n'

Repository: plone.portlet.collection


Branch: refs/heads/master
Date: 2023-03-13T23:33:37+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.portlet.collection/commit/04aeb3e74ab381c0287c360bce3582f32dd39771

Removed dependency on plone.app.collection.

Also removed the dependency on plone.app.contenttypes, though this is still in the test requirements.

Files changed:
M plone/portlet/collection/collection.py
M setup.py

b'diff --git a/plone/portlet/collection/collection.py b/plone/portlet/collection/collection.py\nindex 25852c5..c6f8123 100644\n--- a/plone/portlet/collection/collection.py\n+++ b/plone/portlet/collection/collection.py\n@@ -24,23 +24,6 @@\n import random\n \n \n-COLLECTIONS = []\n-\n-try:\n-    from plone.app.collection.interfaces import ICollection\n-\n-    COLLECTIONS.append(ICollection.__identifier__)\n-except ImportError:\n-    pass\n-\n-try:\n-    from plone.app.contenttypes.interfaces import ICollection\n-\n-    COLLECTIONS.append(ICollection.__identifier__)\n-except ImportError:\n-    pass\n-\n-\n class ICollectionPortlet(IPortletDataProvider):\n     """A portlet which renders the results of a collection object."""\n \ndiff --git a/setup.py b/setup.py\nindex e1c853f..933c690 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -43,8 +43,6 @@\n         "plone.app.vocabularies",\n         "Products.GenericSetup",\n         "Products.MimetypesRegistry",\n-        "plone.app.collection",\n-        "plone.app.contenttypes",\n         "plone.app.querystring",\n         "plone.app.uuid",\n         "plone.app.z3cform",\n'

Repository: plone.portlet.collection


Branch: refs/heads/master
Date: 2023-03-14T18:04:42+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.portlet.collection/commit/d081c752fb2ad52958fd1073037f94186bbb2491

Merge pull request #37 from plone/config-with-default-template-b1750d51

Config with default template

Files changed:
A .editorconfig
A .meta.toml
A .pre-commit-config.yaml
A news/a533099d.internal
A tox.ini
M CHANGES.rst
M plone/__init__.py
M plone/portlet/__init__.py
M plone/portlet/collection/collection.pt
M plone/portlet/collection/collection.py
M plone/portlet/collection/configure.zcml
M plone/portlet/collection/profiles/default/metadata.xml
M plone/portlet/collection/profiles/default/portlets.xml
M plone/portlet/collection/testing.py
M plone/portlet/collection/tests/test_portlet_collection.py
M pyproject.toml
M setup.cfg
M setup.py

b'diff --git a/.editorconfig b/.editorconfig\nnew file mode 100644\nindex 0000000..b4158b8\n--- /dev/null\n+++ b/.editorconfig\n@@ -0,0 +1,39 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+#\n+# EditorConfig Configuration file, for more details see:\n+# http://EditorConfig.org\n+# EditorConfig is a convention description, that could be interpreted\n+# by multiple editors to enforce common coding conventions for specific\n+# file types\n+\n+# top-most EditorConfig file:\n+# Will ignore other EditorConfig files in Home directory or upper tree level.\n+root = true\n+\n+\n+[*]  # For All Files\n+# Unix-style newlines with a newline ending every file\n+end_of_line = lf\n+insert_final_newline = true\n+trim_trailing_whitespace = true\n+# Set default charset\n+charset = utf-8\n+# Indent style default\n+indent_style = space\n+# Max Line Length - a hard line wrap, should be disabled\n+max_line_length = off\n+\n+[*.{py,cfg,ini}]\n+# 4 space indentation\n+indent_size = 4\n+\n+[*.{yml,zpt,pt,dtml,zcml}]\n+# 2 space indentation\n+indent_size = 2\n+\n+[{Makefile,.gitmodules}]\n+# Tab indentation (no size specified, but view as 4 spaces)\n+indent_style = tab\n+indent_size = unset\n+tab_width = unset\ndiff --git a/.meta.toml b/.meta.toml\nnew file mode 100644\nindex 0000000..0df002c\n--- /dev/null\n+++ b/.meta.toml\n@@ -0,0 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[meta]\n+template = "default"\n+commit-id = "a533099d"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nnew file mode 100644\nindex 0000000..582f8ac\n--- /dev/null\n+++ b/.pre-commit-config.yaml\n@@ -0,0 +1,42 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+ci:\n+    autofix_prs: false\n+    autoupdate_schedule: monthly\n+\n+repos:\n+-   repo: https://github.com/asottile/pyupgrade\n+    rev: v3.3.1\n+    hooks:\n+    -   id: pyupgrade\n+        args: [--py38-plus]\n+-   repo: https://github.com/pycqa/isort\n+    rev: 5.12.0\n+    hooks:\n+    -   id: isort\n+-   repo: https://github.com/psf/black\n+    rev: 23.1.0\n+    hooks:\n+    -   id: black\n+-   repo: https://github.com/collective/zpretty\n+    rev: 3.0.2\n+    hooks:\n+    -   id: zpretty\n+-   repo: https://github.com/PyCQA/flake8\n+    rev: 6.0.0\n+    hooks:\n+    -   id: flake8\n+-   repo: https://github.com/codespell-project/codespell\n+    rev: v2.2.2\n+    hooks:\n+    -   id: codespell\n+        additional_dependencies:\n+          - tomli\n+-   repo: https://github.com/mgedmin/check-manifest\n+    rev: "0.49"\n+    hooks:\n+    -   id: check-manifest\n+-   repo: https://github.com/regebro/pyroma\n+    rev: "4.2"\n+    hooks:\n+    -   id: pyroma\ndiff --git a/CHANGES.rst b/CHANGES.rst\nindex 2e64cd8..ca2e319 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -145,7 +145,7 @@ Bug fixes:\n \n New features:\n \n-- add options to supress icons,\n+- add options to suppress icons,\n   read thumb_scale from registry plus  option to override thumb_scale individually\n   or suppress thumbs.\n   Replace paper clip (fontello icon) with mimetype icon\ndiff --git a/news/a533099d.internal b/news/a533099d.internal\nnew file mode 100644\nindex 0000000..c08f539\n--- /dev/null\n+++ b/news/a533099d.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/plone/__init__.py b/plone/__init__.py\nindex 05f0beb..5284146 100644\n--- a/plone/__init__.py\n+++ b/plone/__init__.py\n@@ -1,7 +1 @@\n-# See http://peak.telecommunity.com/DevCenter/setuptools#namespace-packages\n-try:\n-    __import__("pkg_resources").declare_namespace(__name__)\n-except ImportError:\n-    from pkgutil import extend_path\n-\n-    __path__ = extend_path(__path__, __name__)\n+__import__("pkg_resources").declare_namespace(__name__)\ndiff --git a/plone/portlet/__init__.py b/plone/portlet/__init__.py\nindex 05f0beb..5284146 100644\n--- a/plone/portlet/__init__.py\n+++ b/plone/portlet/__init__.py\n@@ -1,7 +1 @@\n-# See http://peak.telecommunity.com/DevCenter/setuptools#namespace-packages\n-try:\n-    __import__("pkg_resources").declare_namespace(__name__)\n-except ImportError:\n-    from pkgutil import extend_path\n-\n-    __path__ = extend_path(__path__, __name__)\n+__import__("pkg_resources").declare_namespace(__name__)\ndiff --git a/plone/portlet/collection/collection.pt b/plone/portlet/collection/collection.pt\nindex 6c7c862..3a6e1c4 100644\n--- a/plone/portlet/collection/collection.pt\n+++ b/plone/portlet/collection/collection.pt\n@@ -1,42 +1,38 @@\n-<html\n-    xmlns="http://www.w3.org/1999/xhtml"\n-    xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n-    xmlns:tal="http://xml.zope.org/namespaces/tal"\n-    tal:omit-tag=""\n-    >\n+<html xmlns="http://www.w3.org/1999/xhtml"\n+      xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+      xmlns:tal="http://xml.zope.org/namespaces/tal"\n+      tal:omit-tag=""\n+>\n \n-  <div\n-      class="card portlet portletCollection"\n-      tal:define="\n-        collection_url view/collection_url;\n-        plone_view context/@@plone;\n-        toLocalizedTime nocall:plone_view/toLocalizedTime;\n-        viewActions python:context.portal_registry.get(\'plone.types_use_view_action_in_listings\', []);\n-        icons nocall:context/@@iconresolver;\n-        normalizeString nocall:plone_view/normalizeString;\n-      "\n-      tal:attributes="\n-        class string:card portlet portletCollection ${view/css_class};\n-      "\n-      i18n:domain="plone"\n-      >\n+  <div class="card portlet portletCollection"\n+       tal:define="\n+         collection_url view/collection_url;\n+         plone_view context/@@plone;\n+         toLocalizedTime nocall:plone_view/toLocalizedTime;\n+         viewActions python:context.portal_registry.get(\'plone.types_use_view_action_in_listings\', []);\n+         icons nocall:context/@@iconresolver;\n+         normalizeString nocall:plone_view/normalizeString;\n+       "\n+       tal:attributes="\n+         class string:card portlet portletCollection ${view/css_class};\n+       "\n+       i18n:domain="plone"\n+  >\n \n     <div class="card-header">\n-      <a\n-          tal:omit-tag="not:view/data/show_more"\n-          tal:attributes="\n-            href collection_url;\n-          "\n-          >\n-        <span tal:content="view/data/header" />\n+      <a tal:omit-tag="not:view/data/show_more"\n+         tal:attributes="\n+           href collection_url;\n+         "\n+      >\n+        <span tal:content="view/data/header"></span>\n       </a>\n     </div>\n \n     <div class="card-body">\n       <ul>\n         <tal:events tal:repeat="obj view/results">\n-          <li\n-              class="portletItem"\n+          <li class="portletItem"\n               tal:define="\n                 plone_layout context/@@plone_layout;\n                 portal context/@@plone_portal_state/portal;\n@@ -56,58 +52,51 @@\n               tal:attributes="\n                 class python:oddrow and \'portletItem even\' or \'portletItem odd\';\n               "\n-              >\n-            <a\n-                href="#"\n-                tal:attributes="\n-                  href itemUrl;\n-                  class  string:tile $item_type_class $item_wf_state_class;\n-                  title obj/Description;\n-                "\n-                >\n+          >\n+            <a href="#"\n+               tal:attributes="\n+                 href itemUrl;\n+                 class  string:tile $item_type_class $item_wf_state_class;\n+                 title obj/Description;\n+               "\n+            >\n \n-              <tal:icon\n-                  tal:condition="python: not supress_icon and item_type != \'File\'"\n-                  tal:replace="structure python:icons.tag(f\'contenttype/{normalizeString(item_type)}\')"\n-                  />\n-              <tal:icon\n-                  tal:condition="python: not supress_icon and item_type == \'File\'"\n-                  tal:replace="structure python:icons.tag(f\'mimetype-{obj.mime_type}\')"\n-                  />\n-              <img\n-                  tal:condition="python: obj.getIcon and thumb_scale and not supress_thumb"\n-                  tal:replace="structure python:image_scale.tag(obj, \'image\', scale=thumb_scale, css_class=\'float-end thumb-\'+thumb_scale)"\n-                  />\n+              <tal:icon tal:condition="python: not supress_icon and item_type != \'File\'"\n+                        tal:replace="structure python:icons.tag(f\'contenttype/{normalizeString(item_type)}\')"\n+              />\n+              <tal:icon tal:condition="python: not supress_icon and item_type == \'File\'"\n+                        tal:replace="structure python:icons.tag(f\'mimetype-{obj.mime_type}\')"\n+              />\n+              <img tal:condition="python: obj.getIcon and thumb_scale and not supress_thumb"\n+                   tal:replace="structure python:image_scale.tag(obj, \'image\', scale=thumb_scale, css_class=\'float-end thumb-\'+thumb_scale)"\n+              />\n \n               <span tal:replace="obj/Title">Title</span>\n             </a>\n-            <div\n-                class="portletItemDetails"\n-                tal:define="\n-                  obj_date python:obj.start and obj.start or obj.Date();\n-                "\n-                tal:condition="view/data/show_dates"\n-                tal:content="python:toLocalizedTime(obj_date)"\n-                >May 5</div>\n+            <div class="portletItemDetails"\n+                 tal:define="\n+                   obj_date python:obj.start and obj.start or obj.Date();\n+                 "\n+                 tal:condition="view/data/show_dates"\n+                 tal:content="python:toLocalizedTime(obj_date)"\n+            >May 5</div>\n           </li>\n         </tal:events>\n       </ul>\n     </div>\n \n-    <div\n-        class="card-footer"\n-        tal:define="\n-          showMore view/data/show_more;\n-        "\n-        tal:condition="python:showMore or view.include_empty_footer()"\n-        >\n-      <a\n-          tal:condition="showMore"\n-          tal:attributes="\n-            href collection_url;\n-          "\n-          >\n-        <span class="hiddenStructure"><span tal:replace="view/data/header" />\n+    <div class="card-footer"\n+         tal:define="\n+           showMore view/data/show_more;\n+         "\n+         tal:condition="python:showMore or view.include_empty_footer()"\n+    >\n+      <a tal:condition="showMore"\n+         tal:attributes="\n+           href collection_url;\n+         "\n+      >\n+        <span class="hiddenStructure"><span tal:replace="view/data/header"></span>\n           -\n         </span>\n         <span i18n:translate="more_url">More&hellip;</span>\ndiff --git a/plone/portlet/collection/collection.py b/plone/portlet/collection/collection.py\nindex 60eac21..c6f8123 100644\n--- a/plone/portlet/collection/collection.py\n+++ b/plone/portlet/collection/collection.py\n@@ -1,18 +1,18 @@\n from ComputedAttribute import ComputedAttribute\n-from plone.app.layout.navigation.root import getNavigationRoot\n from plone.app.portlets.browser import formhelper\n from plone.app.portlets.portlets import base\n from plone.app.uuid.utils import uuidToObject\n from plone.app.z3cform.widget import RelatedItemsFieldWidget\n from plone.autoform.directives import widget\n+from plone.base.defaultpage import is_default_page\n+from plone.base.interfaces.controlpanel import ISiteSchema\n+from plone.base.navigationroot import get_navigation_root\n from plone.i18n.normalizer.interfaces import IIDNormalizer\n from plone.memoize.instance import memoize\n from plone.portlet.collection import PloneMessageFactory as _\n from plone.portlets.interfaces import IPortletDataProvider\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.defaultpage import is_default_page\n-from Products.CMFPlone.interfaces.controlpanel import ISiteSchema\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.MimetypesRegistry.MimeTypeItem import guess_icon_path\n from zExceptions import NotFound\n@@ -24,23 +24,6 @@\n import random\n \n \n-COLLECTIONS = []\n-\n-try:\n-    from plone.app.collection.interfaces import ICollection\n-\n-    COLLECTIONS.append(ICollection.__identifier__)\n-except ImportError:\n-    pass\n-\n-try:\n-    from plone.app.contenttypes.interfaces import ICollection\n-\n-    COLLECTIONS.append(ICollection.__identifier__)\n-except ImportError:\n-    pass\n-\n-\n class ICollectionPortlet(IPortletDataProvider):\n     """A portlet which renders the results of a collection object."""\n \n@@ -310,7 +293,7 @@ def thumb_scale(self):\n \n     def getMimeTypeIcon(self, obj):\n         fileo = obj.getObject().file\n-        portal_url = getNavigationRoot(self.context)\n+        portal_url = get_navigation_root(self.context)\n         mtt = getToolByName(self.context, "mimetypes_registry")\n         if fileo.contentType:\n             ctype = mtt.lookup(fileo.contentType)\ndiff --git a/plone/portlet/collection/configure.zcml b/plone/portlet/collection/configure.zcml\nindex c025070..18a0354 100644\n--- a/plone/portlet/collection/configure.zcml\n+++ b/plone/portlet/collection/configure.zcml\n@@ -3,32 +3,33 @@\n     xmlns:five="http://namespaces.zope.org/five"\n     xmlns:genericsetup="http://namespaces.zope.org/genericsetup"\n     xmlns:plone="http://namespaces.plone.org/plone"\n-    i18n_domain="plone">\n+    i18n_domain="plone"\n+    >\n \n-    <five:registerPackage package="." />\n+  <five:registerPackage package="." />\n \n-    <genericsetup:registerProfile\n-       name="default"\n-       title="Collection portlet"\n-       directory="profiles/default"\n-       description="A simple portlet that displays the results of a collection object"\n-       provides="Products.GenericSetup.interfaces.EXTENSION"\n-       />\n+  <genericsetup:registerProfile\n+      name="default"\n+      title="Collection portlet"\n+      description="A simple portlet that displays the results of a collection object"\n+      provides="Products.GenericSetup.interfaces.EXTENSION"\n+      directory="profiles/default"\n+      />\n \n-     <permission\n-       id="plone.portlet.collection.AddCollectionPortlet"\n-       title="plone.portlet.collection: Add collection portlet"\n-       />\n+  <permission\n+      id="plone.portlet.collection.AddCollectionPortlet"\n+      title="plone.portlet.collection: Add collection portlet"\n+      />\n \n-     <!-- Register the portlet -->\n-     <plone:portlet\n-         name="plone.portlet.collection.Collection"\n-         interface=".collection.ICollectionPortlet"\n-         assignment=".collection.Assignment"\n-         view_permission="zope2.View"\n-         edit_permission="plone.portlet.collection.AddCollectionPortlet"\n-         renderer=".collection.Renderer"\n-         addview=".collection.AddForm"\n-         editview=".collection.EditForm"\n-         />\n+  <!-- Register the portlet -->\n+  <plone:portlet\n+      name="plone.portlet.collection.Collection"\n+      interface=".collection.ICollectionPortlet"\n+      assignment=".collection.Assignment"\n+      renderer=".collection.Renderer"\n+      addview=".collection.AddForm"\n+      editview=".collection.EditForm"\n+      view_permission="zope2.View"\n+      edit_permission="plone.portlet.collection.AddCollectionPortlet"\n+      />\n </configure>\ndiff --git a/plone/portlet/collection/profiles/default/metadata.xml b/plone/portlet/collection/profiles/default/metadata.xml\nindex 4638879..55b4448 100644\n--- a/plone/portlet/collection/profiles/default/metadata.xml\n+++ b/plone/portlet/collection/profiles/default/metadata.xml\n@@ -1,4 +1,4 @@\n-<?xml version="1.0"?>\n+<?xml version="1.0" encoding="utf-8"?>\n <metadata>\n   <version>1</version>\n   <dependencies>\ndiff --git a/plone/portlet/collection/profiles/default/portlets.xml b/plone/portlet/collection/profiles/default/portlets.xml\nindex b31b898..a4e0ea6 100644\n--- a/plone/portlet/collection/profiles/default/portlets.xml\n+++ b/plone/portlet/collection/profiles/default/portlets.xml\n@@ -1,16 +1,14 @@\n-<?xml version="1.0"?>\n-<portlets\n-    xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n-    i18n:domain="plone">\n+<?xml version="1.0" encoding="utf-8"?>\n+<portlets xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+          i18n:domain="plone"\n+>\n \n- <!-- Portlet type registrations -->\n+  <!-- Portlet type registrations -->\n \n- <portlet\n-   addview="plone.portlet.collection.Collection"\n-   title="Collection portlet"\n-   description="A portlet which displays the results of a collection query"\n-   i18n:attributes="title;\n-                    description"\n-   />\n+  <portlet addview="plone.portlet.collection.Collection"\n+           description="A portlet which displays the results of a collection query"\n+           title="Collection portlet"\n+           i18n:attributes="title; description"\n+  />\n \n </portlets>\ndiff --git a/plone/portlet/collection/testing.py b/plone/portlet/collection/testing.py\nindex c75d68b..b826759 100644\n--- a/plone/portlet/collection/testing.py\n+++ b/plone/portlet/collection/testing.py\n@@ -10,7 +10,6 @@\n \n \n class PlonePortletCollection(PloneSandboxLayer):\n-\n     defaultBases = (PLONE_FIXTURE,)\n \n     def setUpZope(self, app, configurationContext):\ndiff --git a/plone/portlet/collection/tests/test_portlet_collection.py b/plone/portlet/collection/tests/test_portlet_collection.py\nindex cb90c76..eb50b28 100644\n--- a/plone/portlet/collection/tests/test_portlet_collection.py\n+++ b/plone/portlet/collection/tests/test_portlet_collection.py\n@@ -19,7 +19,6 @@\n \n \n class TestPortlet(unittest.TestCase):\n-\n     layer = PLONE_PORTLET_COLLECTION_INTEGRATION_TESTING\n \n     def setUp(self):\n@@ -72,7 +71,6 @@ def testRenderer(self):\n \n \n class TestRenderer(unittest.TestCase):\n-\n     layer = PLONE_PORTLET_COLLECTION_INTEGRATION_TESTING\n \n     def setUp(self):\n@@ -114,7 +112,6 @@ def test_css_class(self):\n \n \n class TestCollectionQuery(unittest.TestCase):\n-\n     layer = PLONE_PORTLET_COLLECTION_INTEGRATION_TESTING\n \n     def setUp(self):\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 05b615d..8502a13 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,3 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [tool.towncrier]\n filename = "CHANGES.rst"\n directory = "news/"\n@@ -18,3 +20,44 @@ showcontent = true\n directory = "bugfix"\n name = "Bug fixes:"\n showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "internal"\n+name = "Internal:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "documentation"\n+name = "Documentation:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "tests"\n+name = "Tests"\n+showcontent = true\n+\n+[tool.isort]\n+profile = "plone"\n+\n+[tool.black]\n+target-version = ["py38"]\n+\n+[tool.dependencychecker]\n+Zope = [\n+  # Zope own provided namespaces\n+  \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n+  \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n+  \'Zope2\', \'webdav\', \'zmi\',\n+  # Zope dependencies\n+  \'Acquisition\', \'DateTime\', \'transaction\', \'zExceptions\', \'ZODB\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.deferredimport\', \'zope.event\',\n+  \'zope.exceptions\', \'zope.globalrequest\', \'zope.i18n\', \'zope.i18nmessageid\',\n+  \'zope.interface\', \'zope.lifecycleevent\', \'zope.location\', \'zope.publisher\',\n+  \'zope.schema\', \'zope.security\', \'zope.site\', \'zope.traversing\', \'AccessControl\',\n+]\n+\'plone.base\' = [\n+  \'setuptools\', \'AccessControl\', \'Products.BTreeFolder2\', \'Products.CMFCore\',\n+  \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n+]\n+python-dateutil = [\'dateutil\']\n+ExtensionClass = [\'ComputedAttribute\']\ndiff --git a/setup.cfg b/setup.cfg\nindex 5543069..bf4da34 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -1,31 +1,25 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [bdist_wheel]\n universal = 0\n \n-[check-manifest]\n-ignore =\n-    *.cfg\n-    .coveragerc\n-    .editorconfig\n-\n-[isort]\n-# black compatible isort rules:\n-profile = black\n-force_alphabetical_sort = True\n-force_single_line = True\n-lines_after_imports = 2\n-\n [flake8]\n-# black compatible flake8 rules:\n+doctests = 1\n ignore =\n+    # black takes care of line length\n+    E501,\n+    # black takes care of where to break lines\n     W503,\n-    C812,\n-    E501\n-    T001\n-    C813\n-# E203, E266\n-exclude = bootstrap.py,docs,*.egg.,omelette\n-max-line-length = 88\n-max-complexity = 18\n-select = B,C,E,F,W,T4,B9\n+    # black takes care of spaces within slicing (list[:])\n+    E203,\n+    # black takes care of spaces after commas\n+    E231,\n \n-builtins = unicode,basestring\n+[check-manifest]\n+ignore =\n+    .editorconfig\n+    .meta.toml\n+    .pre-commit-config.yaml\n+    tox.ini\n+    *.cfg\n+    .coveragerc\ndiff --git a/setup.py b/setup.py\nindex 37edd5d..933c690 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -33,14 +33,29 @@\n     namespace_packages=["plone", "plone.portlet"],\n     include_package_data=True,\n     zip_safe=False,\n+    python_requires=">=3.8",\n     install_requires=[\n-        "setuptools",\n+        "ExtensionClass",\n+        "plone.base",\n         "plone.memoize",\n         "plone.portlets",\n         "plone.app.portlets",\n         "plone.app.vocabularies",\n+        "Products.GenericSetup",\n+        "Products.MimetypesRegistry",\n+        "plone.app.querystring",\n+        "plone.app.uuid",\n+        "plone.app.z3cform",\n+        "plone.autoform",\n+        "plone.i18n",\n+        "plone.registry",\n     ],\n     extras_require={\n-        "test": ["plone.app.testing", "plone.app.contenttypes"],\n+        "test": [\n+            "lxml",\n+            "plone.testing",\n+            "plone.app.testing",\n+            "plone.app.contenttypes[test]",\n+        ],\n     },\n )\ndiff --git a/tox.ini b/tox.ini\nnew file mode 100644\nindex 0000000..4eff2bc\n--- /dev/null\n+++ b/tox.ini\n@@ -0,0 +1,50 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[tox]\n+envlist =\n+    format\n+    lint\n+    test\n+\n+[testenv]\n+allowlist_externals =\n+    sh\n+\n+[testenv:format]\n+description = automatically reformat code\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a pyupgrade\n+    pre-commit run -a isort\n+    pre-commit run -a black\n+    pre-commit run -a zpretty\n+\n+[testenv:lint]\n+description = run linters that will help improve the code style\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a\n+\n+[testenv:dependencies]\n+description = check if the package defines all its dependencies and generate a graph out of them\n+deps =\n+    z3c.dependencychecker==2.11\n+    pipdeptree==2.5.1\n+    graphviz  # optional dependency of pipdeptree\n+commands =\n+    dependencychecker\n+    sh -c \'pipdeptree --exclude setuptools,pipdeptree,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+\n+[testenv:test]\n+usedevelop = true\n+deps =\n+    zope.testrunner\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    zope-testrunner --test-path={toxinidir} -s plone.portlet.collection\n+extras =\n+    test\n'

