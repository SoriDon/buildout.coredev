Repository: plone.app.registry


Branch: refs/heads/master
Date: 2023-04-01T19:59:08+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.registry/commit/18ad10aeb56c3b5e0d033f652b07aec44266c538

Configuring with plone/meta

Files changed:
A .editorconfig
A .meta.toml
A .pre-commit-config.yaml
A news/5623f8b3.internal
A tox.ini
M pyproject.toml
M setup.cfg

b'diff --git a/.editorconfig b/.editorconfig\nnew file mode 100644\nindex 0000000..b4158b8\n--- /dev/null\n+++ b/.editorconfig\n@@ -0,0 +1,39 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+#\n+# EditorConfig Configuration file, for more details see:\n+# http://EditorConfig.org\n+# EditorConfig is a convention description, that could be interpreted\n+# by multiple editors to enforce common coding conventions for specific\n+# file types\n+\n+# top-most EditorConfig file:\n+# Will ignore other EditorConfig files in Home directory or upper tree level.\n+root = true\n+\n+\n+[*]  # For All Files\n+# Unix-style newlines with a newline ending every file\n+end_of_line = lf\n+insert_final_newline = true\n+trim_trailing_whitespace = true\n+# Set default charset\n+charset = utf-8\n+# Indent style default\n+indent_style = space\n+# Max Line Length - a hard line wrap, should be disabled\n+max_line_length = off\n+\n+[*.{py,cfg,ini}]\n+# 4 space indentation\n+indent_size = 4\n+\n+[*.{yml,zpt,pt,dtml,zcml}]\n+# 2 space indentation\n+indent_size = 2\n+\n+[{Makefile,.gitmodules}]\n+# Tab indentation (no size specified, but view as 4 spaces)\n+indent_style = tab\n+indent_size = unset\n+tab_width = unset\ndiff --git a/.meta.toml b/.meta.toml\nnew file mode 100644\nindex 0000000..4f67994\n--- /dev/null\n+++ b/.meta.toml\n@@ -0,0 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[meta]\n+template = "default"\n+commit-id = "5623f8b3"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nnew file mode 100644\nindex 0000000..449e951\n--- /dev/null\n+++ b/.pre-commit-config.yaml\n@@ -0,0 +1,42 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+ci:\n+    autofix_prs: false\n+    autoupdate_schedule: monthly\n+\n+repos:\n+-   repo: https://github.com/asottile/pyupgrade\n+    rev: v3.3.1\n+    hooks:\n+    -   id: pyupgrade\n+        args: [--py38-plus]\n+-   repo: https://github.com/pycqa/isort\n+    rev: 5.12.0\n+    hooks:\n+    -   id: isort\n+-   repo: https://github.com/psf/black\n+    rev: 23.1.0\n+    hooks:\n+    -   id: black\n+-   repo: https://github.com/collective/zpretty\n+    rev: 3.0.3\n+    hooks:\n+    -   id: zpretty\n+-   repo: https://github.com/PyCQA/flake8\n+    rev: 6.0.0\n+    hooks:\n+    -   id: flake8\n+-   repo: https://github.com/codespell-project/codespell\n+    rev: v2.2.2\n+    hooks:\n+    -   id: codespell\n+        additional_dependencies:\n+          - tomli\n+-   repo: https://github.com/mgedmin/check-manifest\n+    rev: "0.49"\n+    hooks:\n+    -   id: check-manifest\n+-   repo: https://github.com/regebro/pyroma\n+    rev: "4.2"\n+    hooks:\n+    -   id: pyroma\ndiff --git a/news/5623f8b3.internal b/news/5623f8b3.internal\nnew file mode 100644\nindex 0000000..c08f539\n--- /dev/null\n+++ b/news/5623f8b3.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 05b615d..9eb73f3 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,3 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [tool.towncrier]\n filename = "CHANGES.rst"\n directory = "news/"\n@@ -18,3 +20,43 @@ showcontent = true\n directory = "bugfix"\n name = "Bug fixes:"\n showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "internal"\n+name = "Internal:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "documentation"\n+name = "Documentation:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "tests"\n+name = "Tests"\n+showcontent = true\n+\n+[tool.isort]\n+profile = "plone"\n+\n+[tool.black]\n+target-version = ["py38"]\n+\n+[tool.dependencychecker]\n+Zope = [\n+  # Zope own provided namespaces\n+  \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n+  \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n+  \'Zope2\', \'webdav\', \'zmi\',\n+  # Zope dependencies\n+  \'Acquisition\', \'DateTime\', \'transaction\', \'zExceptions\', \'ZODB\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.deferredimport\', \'zope.event\',\n+  \'zope.exceptions\', \'zope.globalrequest\', \'zope.i18n\', \'zope.i18nmessageid\',\n+  \'zope.interface\', \'zope.lifecycleevent\', \'zope.location\', \'zope.publisher\',\n+  \'zope.schema\', \'zope.security\', \'zope.site\', \'zope.traversing\', \'AccessControl\',\n+]\n+\'plone.base\' = [\n+  \'AccessControl\', \'Products.BTreeFolder2\', \'Products.CMFCore\',\n+  \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n+]\n+python-dateutil = [\'dateutil\']\ndiff --git a/setup.cfg b/setup.cfg\nindex 3e076fd..0da8f8f 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -1,9 +1,23 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [bdist_wheel]\n universal = 0\n \n-[isort]\n-# black compatible Plone isort rules:\n-profile = black\n-force_alphabetical_sort = True\n-force_single_line = True\n-lines_after_imports = 2\n+[flake8]\n+doctests = 1\n+ignore =\n+    # black takes care of line length\n+    E501,\n+    # black takes care of where to break lines\n+    W503,\n+    # black takes care of spaces within slicing (list[:])\n+    E203,\n+    # black takes care of spaces after commas\n+    E231,\n+\n+[check-manifest]\n+ignore =\n+    .editorconfig\n+    .meta.toml\n+    .pre-commit-config.yaml\n+    tox.ini\ndiff --git a/tox.ini b/tox.ini\nnew file mode 100644\nindex 0000000..aa13e78\n--- /dev/null\n+++ b/tox.ini\n@@ -0,0 +1,54 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[tox]\n+# We need 4.4.0 for constrain_package_deps.\n+min_version = 4.4.0\n+envlist =\n+    format\n+    lint\n+    test\n+\n+[testenv]\n+allowlist_externals =\n+    sh\n+\n+[testenv:format]\n+description = automatically reformat code\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a pyupgrade\n+    pre-commit run -a isort\n+    pre-commit run -a black\n+    pre-commit run -a zpretty\n+\n+[testenv:lint]\n+description = run linters that will help improve the code style\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a\n+\n+[testenv:dependencies]\n+description = check if the package defines all its dependencies and generate a graph out of them\n+deps =\n+    z3c.dependencychecker==2.11\n+    pipdeptree==2.5.1\n+    graphviz  # optional dependency of pipdeptree\n+commands =\n+    dependencychecker\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+\n+[testenv:test]\n+usedevelop = true\n+constrain_package_deps = true\n+set_env = ROBOT_BROWSER=headlesschrome\n+deps =\n+    zope.testrunner\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    zope-testrunner --all --test-path={toxinidir} -s plone.app.registry {posargs}\n+extras =\n+    test\n'

Repository: plone.app.registry


Branch: refs/heads/master
Date: 2023-04-01T20:00:36+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.registry/commit/a138da0a15aa98efd8a34ccc5ab0c41b4057f327

chore: black

Files changed:
M plone/app/registry/exportimport/handler.py
M plone/app/registry/testing.py
M plone/app/registry/tests/data.py
M plone/app/registry/tests/test_controlpanel.py
M plone/app/registry/tests/test_exportimport.py
M plone/app/registry/tests/test_setup.py

b'diff --git a/plone/app/registry/exportimport/handler.py b/plone/app/registry/exportimport/handler.py\nindex 16ccb98..fcaf5c2 100644\n--- a/plone/app/registry/exportimport/handler.py\n+++ b/plone/app/registry/exportimport/handler.py\n@@ -58,7 +58,6 @@ def shouldPurgeList(value_node, key):\n \n \n def importRegistry(context):\n-\n     logger = context.getLogger("plone.app.registry")\n     registry = queryUtility(IRegistry)\n \n@@ -81,7 +80,6 @@ def importRegistry(context):\n \n \n def exportRegistry(context):\n-\n     logger = context.getLogger("plone.app.registry")\n     registry = queryUtility(IRegistry)\n \n@@ -283,7 +281,6 @@ def importRecord(self, node):\n                 existing_record.field = field\n             existing_value = existing_record.value\n             if change_field or value != existing_value:\n-\n                 if not value_purge and type(value) == type(existing_value):\n                     if isinstance(value, list):\n                         value = existing_value + [\n@@ -327,7 +324,6 @@ def importRecord(self, node):\n             self.context.records[name] = Record(field, value)\n \n     def importRecords(self, node):\n-\n         # May raise ImportError if interface can\'t be found or KeyError if\n         # attribute is missing.\n \n@@ -402,7 +398,6 @@ def importRecords(self, node):\n \n \n class RegistryExporter:\n-\n     LOGGER_ID = "plone.app.registry"\n \n     def __init__(self, context, environ):\n@@ -420,7 +415,6 @@ def exportDocument(self):\n         return prettyXML(root)\n \n     def exportRecord(self, record):\n-\n         node = etree.Element("record")\n         node.attrib["name"] = record.__name__\n \ndiff --git a/plone/app/registry/testing.py b/plone/app/registry/testing.py\nindex c7dc054..b8ac652 100644\n--- a/plone/app/registry/testing.py\n+++ b/plone/app/registry/testing.py\n@@ -6,7 +6,6 @@\n \n \n class PloneAppRegistry(PloneSandboxLayer):\n-\n     defaultBases = (PLONE_FIXTURE,)\n \n     def setUpZope(self, app, configurationContext):\ndiff --git a/plone/app/registry/tests/data.py b/plone/app/registry/tests/data.py\nindex b99c40f..73337bc 100644\n--- a/plone/app/registry/tests/data.py\n+++ b/plone/app/registry/tests/data.py\n@@ -3,13 +3,11 @@\n \n \n class ITestSettings(Interface):\n-\n     name = schema.TextLine(title="Name", default="Mr. Registry")\n     age = schema.Int(title="Age", min=0)\n \n \n class ITestSettingsDisallowed(Interface):\n-\n     name = schema.TextLine(title="Name", default="Mr. Registry")\n     age = schema.Int(title="Age", min=0)\n     blob = schema.Object(title="Blob", schema=Interface)\ndiff --git a/plone/app/registry/tests/test_controlpanel.py b/plone/app/registry/tests/test_controlpanel.py\nindex 11efeb5..30b86b4 100644\n--- a/plone/app/registry/tests/test_controlpanel.py\n+++ b/plone/app/registry/tests/test_controlpanel.py\n@@ -10,7 +10,6 @@\n \n \n class TestRegistryBaseControlpanel(unittest.TestCase):\n-\n     layer = PLONE_APP_REGISTRY_INTEGRATION_TESTING\n \n     def test_registry_base_controlpanel__control_panel_url(self):\n@@ -24,7 +23,6 @@ def test_registry_base_controlpanel__control_panel_url(self):\n \n \n class TestRecordsControlPanel(unittest.TestCase):\n-\n     layer = PLONE_APP_REGISTRY_INTEGRATION_TESTING\n \n     def setUp(self):\ndiff --git a/plone/app/registry/tests/test_exportimport.py b/plone/app/registry/tests/test_exportimport.py\nindex 99ac764..5b2b7aa 100644\n--- a/plone/app/registry/tests/test_exportimport.py\n+++ b/plone/app/registry/tests/test_exportimport.py\n@@ -35,7 +35,6 @@\n \n \n class DummyImportContext(BaseDummyImportContext):\n-\n     _directories = {}\n \n     def listDirectory(self, path):\n@@ -46,7 +45,6 @@ def isDirectory(self, path):\n \n \n class ExportImportTest(unittest.TestCase):\n-\n     layer = zca.UNIT_TESTING\n \n     def setUp(self):\n@@ -71,7 +69,6 @@ def tearDown(self):\n             pass\n \n     def assertXmlEquals(self, expected, actual):\n-\n         expected_tree = etree.XML(expected)\n         actual_tree = etree.XML(actual)\n \n@@ -91,7 +88,6 @@ def assertXmlEquals(self, expected, actual):\n \n class TestImport(ExportImportTest):\n     def test_empty_import_no_purge(self):\n-\n         xml = "<registry/>"\n         context = DummyImportContext(self.site, purge=False)\n         context._files = {"registry.xml": xml}\n@@ -105,7 +101,6 @@ def test_empty_import_no_purge(self):\n         self.assertEqual(1, len(self.registry.records))\n \n     def test_import_purge(self):\n-\n         xml = "<registry/>"\n         context = DummyImportContext(self.site, purge=True)\n         context._files = {"registry.xml": xml}\n@@ -1259,7 +1254,6 @@ def test_import_jsonfield_with_value(self):\n \n class TestExport(ExportImportTest):\n     def test_export_empty(self):\n-\n         xml = """<registry />"""\n         context = DummyExportContext(self.site)\n         exportRegistry(context)\n@@ -1268,7 +1262,6 @@ def test_export_empty(self):\n         self.assertXmlEquals(xml, context._wrote[0][1])\n \n     def test_export_simple(self):\n-\n         xml = """\\\n <registry>\n   <record name="test.export.simple">\n@@ -1331,7 +1324,6 @@ def test_export_with_interface(self):\n         self.assertXmlEquals(xml, context._wrote[0][1])\n \n     def test_export_field_ref(self):\n-\n         xml = """\\\n <registry>\n   <record name="test.export.simple">\n@@ -1363,7 +1355,6 @@ def test_export_field_ref(self):\n         self.assertXmlEquals(xml, context._wrote[0][1])\n \n     def test_export_with_collection(self):\n-\n         xml = """\\\n <registry>\n   <record name="test.export.simple">\n@@ -1390,7 +1381,6 @@ def test_export_with_collection(self):\n         self.assertXmlEquals(xml, context._wrote[0][1])\n \n     def test_export_with_dict(self):\n-\n         xml = """\\\n <registry>\n   <record name="test.export.dict">\n@@ -1427,7 +1417,6 @@ def test_export_with_dict(self):\n         self.assertXmlEquals(xml, context._wrote[0][1])\n \n     def test_export_with_choice(self):\n-\n         xml = """\\\n <registry>\n   <record name="test.export.choice">\n@@ -1450,7 +1439,6 @@ def test_export_with_choice(self):\n         self.assertXmlEquals(xml, context._wrote[0][1])\n \n     def test_export_with_missing_schema_does_not_error(self):\n-\n         xml = """\\\n <registry>\n   <record name="test.export.simple" interface="non.existant.ISchema" field="blah">\n@@ -1482,7 +1470,6 @@ def test_export_with_missing_schema_does_not_error(self):\n         self.assertXmlEquals(xml, context._wrote[0][1])\n \n     def test_export_with_jsonfield(self):\n-\n         xml = """\\\n <registry>\n   <record name="test.export.field">\ndiff --git a/plone/app/registry/tests/test_setup.py b/plone/app/registry/tests/test_setup.py\nindex 41af7b7..b34fc46 100644\n--- a/plone/app/registry/tests/test_setup.py\n+++ b/plone/app/registry/tests/test_setup.py\n@@ -7,11 +7,9 @@\n \n \n class TestSetup(unittest.TestCase):\n-\n     layer = PLONE_APP_REGISTRY_INTEGRATION_TESTING\n \n     def test_tool_installed(self):\n-\n         portal = self.layer["portal"]\n \n         self.assertIn("portal_registry", portal.objectIds())\n'

Repository: plone.app.registry


Branch: refs/heads/master
Date: 2023-04-01T20:01:09+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.registry/commit/e61eb4a65f0eff8c0ed27076ead7ed3e7c7d5e03

chore: zpretty ZCML/XML

Files changed:
M plone/app/registry/browser/configure.zcml
M plone/app/registry/configure.zcml
M plone/app/registry/exportimport/configure.zcml
M plone/app/registry/exportimport/handlers.zcml
M plone/app/registry/profiles/default/componentregistry.xml
M plone/app/registry/profiles/default/controlpanel.xml
M plone/app/registry/profiles/default/metadata.xml
M plone/app/registry/profiles/default/toolset.xml

b'diff --git a/plone/app/registry/browser/configure.zcml b/plone/app/registry/browser/configure.zcml\nindex 4c2e7c7..26602d1 100644\n--- a/plone/app/registry/browser/configure.zcml\n+++ b/plone/app/registry/browser/configure.zcml\n@@ -1,49 +1,50 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:browser="http://namespaces.zope.org/browser"\n-    i18n_domain="plone">\n+    i18n_domain="plone"\n+    >\n \n-    <include package="plone.app.z3cform" />\n-    <include package="plone.autoform" />\n+  <include package="plone.app.z3cform" />\n+  <include package="plone.autoform" />\n \n-    <!-- <browser:resourceDirectory\n+  <!-- <browser:resourceDirectory\n         name="plone.app.registry"\n         directory="resources"\n         /> -->\n \n-    <browser:defaultView\n-        for="plone.registry.interfaces.IRegistry"\n-        name="configuration_registry"\n-        />\n-\n-    <browser:page\n-        name="configuration_registry"\n-        for="plone.registry.interfaces.IRegistry"\n-        class=".records.RecordsControlPanel"\n-        permission="cmf.ManagePortal"\n-        />\n-\n-    <browser:page\n-        name="edit"\n-        for="plone.registry.interfaces.IRegistry"\n-        class=".edit.RecordEditView"\n-        template="templates/edit_layout.pt"\n-        permission="cmf.ManagePortal"\n-        />\n-\n-    <browser:page\n-        name="delete-record"\n-        for="plone.registry.interfaces.IRegistry"\n-        class=".delete.RecordDeleteView"\n-        template="templates/delete_layout.pt"\n-        permission="cmf.ManagePortal"\n-        />\n-\n-    <browser:page\n-        for="plone.registry.interfaces.IRegistry"\n-        name="configuration_registry_export_xml"\n-        class=".exportxml.RegistryExporterView"\n-        permission="cmf.ManagePortal"\n-        />\n+  <browser:defaultView\n+      name="configuration_registry"\n+      for="plone.registry.interfaces.IRegistry"\n+      />\n+\n+  <browser:page\n+      name="configuration_registry"\n+      for="plone.registry.interfaces.IRegistry"\n+      class=".records.RecordsControlPanel"\n+      permission="cmf.ManagePortal"\n+      />\n+\n+  <browser:page\n+      name="edit"\n+      for="plone.registry.interfaces.IRegistry"\n+      class=".edit.RecordEditView"\n+      template="templates/edit_layout.pt"\n+      permission="cmf.ManagePortal"\n+      />\n+\n+  <browser:page\n+      name="delete-record"\n+      for="plone.registry.interfaces.IRegistry"\n+      class=".delete.RecordDeleteView"\n+      template="templates/delete_layout.pt"\n+      permission="cmf.ManagePortal"\n+      />\n+\n+  <browser:page\n+      name="configuration_registry_export_xml"\n+      for="plone.registry.interfaces.IRegistry"\n+      class=".exportxml.RegistryExporterView"\n+      permission="cmf.ManagePortal"\n+      />\n \n </configure>\ndiff --git a/plone/app/registry/configure.zcml b/plone/app/registry/configure.zcml\nindex 7b97646..707e457 100644\n--- a/plone/app/registry/configure.zcml\n+++ b/plone/app/registry/configure.zcml\n@@ -2,35 +2,39 @@\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:five="http://namespaces.zope.org/five"\n     xmlns:gs="http://namespaces.zope.org/genericsetup"\n-    i18n_domain="plone">\n+    i18n_domain="plone"\n+    >\n \n-    <include package="Products.CMFCore" file="permissions.zcml" />\n+  <include\n+      package="Products.CMFCore"\n+      file="permissions.zcml"\n+      />\n \n-    <include package="plone.registry" />\n+  <include package="plone.registry" />\n \n-    <include package=".exportimport" />\n-    <include package=".browser" />\n+  <include package=".exportimport" />\n+  <include package=".browser" />\n \n-    <five:registerClass\n-        class=".registry.Registry"\n-        meta_type="Plone Configuration Registry"\n+  <five:registerClass\n+      class=".registry.Registry"\n+      permission="cmf.ManagePortal"\n+      meta_type="Plone Configuration Registry"\n+      />\n+\n+  <class class=".registry.Registry">\n+    <require\n         permission="cmf.ManagePortal"\n+        interface="plone.registry.interfaces.IRegistry"\n         />\n+  </class>\n \n-    <class class=".registry.Registry">\n-        <require\n-            permission="cmf.ManagePortal"\n-            interface="plone.registry.interfaces.IRegistry"\n-            />\n-    </class>\n-\n-    <gs:registerProfile\n-        name="default"\n-        directory="profiles/default"\n-        title="Configuration registry"\n-        description="A \'Mozilla about:config\' style configuration registry"\n-        for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n-        provides="Products.GenericSetup.interfaces.EXTENSION"\n-        />\n+  <gs:registerProfile\n+      name="default"\n+      title="Configuration registry"\n+      description="A \'Mozilla about:config\' style configuration registry"\n+      provides="Products.GenericSetup.interfaces.EXTENSION"\n+      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      directory="profiles/default"\n+      />\n \n </configure>\ndiff --git a/plone/app/registry/exportimport/configure.zcml b/plone/app/registry/exportimport/configure.zcml\nindex 72a75ee..958aa6f 100644\n--- a/plone/app/registry/exportimport/configure.zcml\n+++ b/plone/app/registry/exportimport/configure.zcml\n@@ -1,27 +1,29 @@\n <configure\n-    i18n_domain="plone"\n     xmlns="http://namespaces.zope.org/zope"\n-    xmlns:gs="http://namespaces.zope.org/genericsetup">\n+    xmlns:gs="http://namespaces.zope.org/genericsetup"\n+    i18n_domain="plone"\n+    >\n \n   <include package="plone.supermodel" />\n   <include file="handlers.zcml" />\n \n   <!-- export/import steps -->\n   <gs:importStep\n+      name="plone.app.registry"\n+      title="Configuration Registry (Plone)"\n       description="Import into plone.app.registry records/settings, the central configuration key-value store, from registry.xml or a registry folder."\n       handler=".handler.importRegistry"\n-      name="plone.app.registry"\n-      title="Configuration Registry (Plone)">\n+      >\n     <depends name="componentregistry" />\n     <depends name="toolset" />\n-    <depends name="typeinfo"/>\n+    <depends name="typeinfo" />\n   </gs:importStep>\n \n   <gs:exportStep\n-      description="Export plone.app.registry, the central configuration key-value store, into a XML file."\n-      handler=".handler.exportRegistry"\n       name="plone.app.registry"\n       title="Configuration Registry (Plone)"\n-  />\n+      description="Export plone.app.registry, the central configuration key-value store, into a XML file."\n+      handler=".handler.exportRegistry"\n+      />\n \n </configure>\ndiff --git a/plone/app/registry/exportimport/handlers.zcml b/plone/app/registry/exportimport/handlers.zcml\nindex adf6c7e..3167b66 100644\n--- a/plone/app/registry/exportimport/handlers.zcml\n+++ b/plone/app/registry/exportimport/handlers.zcml\n@@ -1,75 +1,99 @@\n <configure\n+    xmlns="http://namespaces.zope.org/zope"\n     i18n_domain="plone"\n-    xmlns="http://namespaces.zope.org/zope">\n+    >\n   <include package="plone.supermodel" />\n   <!-- plone.supermodel field handlers -->\n   <utility\n+      name="plone.registry.field.Bytes"\n       component=".fields.BytesHandler"\n-      name="plone.registry.field.Bytes" />\n+      />\n   <utility\n+      name="plone.registry.field.BytesLine"\n       component=".fields.BytesLineHandler"\n-      name="plone.registry.field.BytesLine" />\n+      />\n   <utility\n+      name="plone.registry.field.ASCII"\n       component=".fields.ASCIIHandler"\n-      name="plone.registry.field.ASCII" />\n+      />\n   <utility\n+      name="plone.registry.field.ASCIILine"\n       component=".fields.ASCIILineHandler"\n-      name="plone.registry.field.ASCIILine" />\n+      />\n   <utility\n+      name="plone.registry.field.Text"\n       component=".fields.TextHandler"\n-      name="plone.registry.field.Text" />\n+      />\n   <utility\n+      name="plone.registry.field.TextLine"\n       component=".fields.TextLineHandler"\n-      name="plone.registry.field.TextLine" />\n+      />\n   <utility\n+      name="plone.registry.field.Bool"\n       component=".fields.BoolHandler"\n-      name="plone.registry.field.Bool" />\n+      />\n   <utility\n+      name="plone.registry.field.Int"\n       component=".fields.IntHandler"\n-      name="plone.registry.field.Int" />\n+      />\n   <utility\n+      name="plone.registry.field.Float"\n       component=".fields.FloatHandler"\n-      name="plone.registry.field.Float" />\n+      />\n   <utility\n+      name="plone.registry.field.Tuple"\n       component=".fields.TupleHandler"\n-      name="plone.registry.field.Tuple" />\n+      />\n   <utility\n+      name="plone.registry.field.List"\n       component=".fields.ListHandler"\n-      name="plone.registry.field.List" />\n+      />\n   <utility\n+      name="plone.registry.field.Set"\n       component=".fields.SetHandler"\n-      name="plone.registry.field.Set" />\n+      />\n   <utility\n+      name="plone.registry.field.FrozenSet"\n       component=".fields.FrozenSetHandler"\n-      name="plone.registry.field.FrozenSet" />\n+      />\n   <utility\n+      name="plone.registry.field.Password"\n       component=".fields.PasswordHandler"\n-      name="plone.registry.field.Password" />\n+      />\n   <utility\n+      name="plone.registry.field.Dict"\n       component=".fields.DictHandler"\n-      name="plone.registry.field.Dict" />\n+      />\n   <utility\n+      name="plone.registry.field.Datetime"\n       component=".fields.DatetimeHandler"\n-      name="plone.registry.field.Datetime" />\n+      />\n   <utility\n+      name="plone.registry.field.Date"\n       component=".fields.DateHandler"\n-      name="plone.registry.field.Date" />\n+      />\n   <utility\n+      name="plone.registry.field.SourceText"\n       component=".fields.SourceTextHandler"\n-      name="plone.registry.field.SourceText" />\n+      />\n   <utility\n+      name="plone.registry.field.URI"\n       component=".fields.URIHandler"\n-      name="plone.registry.field.URI" />\n+      />\n   <utility\n+      name="plone.registry.field.Id"\n       component=".fields.IdHandler"\n-      name="plone.registry.field.Id" />\n+      />\n   <utility\n+      name="plone.registry.field.DottedName"\n       component=".fields.DottedNameHandler"\n-      name="plone.registry.field.DottedName" />\n+      />\n   <utility\n+      name="plone.registry.field.Choice"\n       component=".fields.ChoiceHandler"\n-      name="plone.registry.field.Choice" />\n+      />\n   <utility\n+      name="plone.registry.field.JSONField"\n       component=".fields.JSONFieldHandler"\n-      name="plone.registry.field.JSONField" />\n+      />\n </configure>\ndiff --git a/plone/app/registry/profiles/default/componentregistry.xml b/plone/app/registry/profiles/default/componentregistry.xml\nindex ba3d806..9272f35 100644\n--- a/plone/app/registry/profiles/default/componentregistry.xml\n+++ b/plone/app/registry/profiles/default/componentregistry.xml\n@@ -1,10 +1,9 @@\n-<?xml version="1.0"?>\n+<?xml version="1.0" encoding="utf-8"?>\n <componentregistry>\n-    <adapters/>\n-    <utilities>\n-        <utility\n-            interface="plone.registry.interfaces.IRegistry"\n-            object="portal_registry"\n-            />\n-    </utilities>\n-</componentregistry>\n\\ No newline at end of file\n+  <adapters />\n+  <utilities>\n+    <utility interface="plone.registry.interfaces.IRegistry"\n+             object="portal_registry"\n+    />\n+  </utilities>\n+</componentregistry>\ndiff --git a/plone/app/registry/profiles/default/controlpanel.xml b/plone/app/registry/profiles/default/controlpanel.xml\nindex 30d5f57..f9aeda4 100644\n--- a/plone/app/registry/profiles/default/controlpanel.xml\n+++ b/plone/app/registry/profiles/default/controlpanel.xml\n@@ -1,11 +1,18 @@\n-<?xml version="1.0"?>\n-<object name="portal_controlpanel"\n-    xmlns:i18n="http://xml.zope.org/namespaces/i18n" i18n:domain="plone">\n- <configlet title="Configuration Registry" action_id="plone.app.registry"\n-    appId="plone.app.registry" category="plone-advanced" condition_expr=""\n-    url_expr="string:${portal_url}/portal_registry"\n-    icon_expr="string:gear"\n-    visible="True" i18n:attributes="title">\n-  <permission>Manage portal</permission>\n- </configlet>\n+<?xml version="1.0" encoding="utf-8"?>\n+<object xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+        name="portal_controlpanel"\n+        i18n:domain="plone"\n+>\n+  <configlet action_id="plone.app.registry"\n+             appId="plone.app.registry"\n+             category="plone-advanced"\n+             condition_expr=""\n+             icon_expr="string:gear"\n+             title="Configuration Registry"\n+             url_expr="string:${portal_url}/portal_registry"\n+             visible="True"\n+             i18n:attributes="title"\n+  >\n+    <permission>Manage portal</permission>\n+  </configlet>\n </object>\ndiff --git a/plone/app/registry/profiles/default/metadata.xml b/plone/app/registry/profiles/default/metadata.xml\nindex 6ebaf4c..588bfee 100644\n--- a/plone/app/registry/profiles/default/metadata.xml\n+++ b/plone/app/registry/profiles/default/metadata.xml\n@@ -1,7 +1,7 @@\n-<?xml version="1.0"?>\n+<?xml version="1.0" encoding="utf-8"?>\n <metadata>\n-    <version>1.0a1</version>\n-    <dependencies>\n-        <dependency>profile-plone.app.z3cform:default</dependency>\n-    </dependencies>\n-</metadata>\n\\ No newline at end of file\n+  <version>1.0a1</version>\n+  <dependencies>\n+    <dependency>profile-plone.app.z3cform:default</dependency>\n+  </dependencies>\n+</metadata>\ndiff --git a/plone/app/registry/profiles/default/toolset.xml b/plone/app/registry/profiles/default/toolset.xml\nindex c51a091..e7531f6 100644\n--- a/plone/app/registry/profiles/default/toolset.xml\n+++ b/plone/app/registry/profiles/default/toolset.xml\n@@ -1,7 +1,6 @@\n-<?xml version="1.0"?>\n+<?xml version="1.0" encoding="utf-8"?>\n <tool-setup>\n-    <required\n-        tool_id="portal_registry"\n-        class="plone.app.registry.registry.Registry"\n-        />\n+  <required class="plone.app.registry.registry.Registry"\n+            tool_id="portal_registry"\n+  />\n </tool-setup>\n'

Repository: plone.app.registry


Branch: refs/heads/master
Date: 2023-04-01T20:04:38+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.registry/commit/b89bf85e08b9a347a52ee6b4ae7a2f029e4c65de

chore: zptlint PT

Files changed:
M plone/app/registry/browser/templates/controlpanel_layout.pt
M plone/app/registry/browser/templates/delete_layout.pt
M plone/app/registry/browser/templates/edit_layout.pt
M plone/app/registry/browser/templates/exportxml.pt

b'diff --git a/plone/app/registry/browser/templates/controlpanel_layout.pt b/plone/app/registry/browser/templates/controlpanel_layout.pt\nindex 4a90209..8793140 100644\n--- a/plone/app/registry/browser/templates/controlpanel_layout.pt\n+++ b/plone/app/registry/browser/templates/controlpanel_layout.pt\n@@ -1,31 +1,36 @@\n-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"\n-      xmlns:tal="http://xml.zope.org/namespaces/tal"\n-      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+<html xmlns="http://www.w3.org/1999/xhtml"\n       xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+      xmlns:tal="http://xml.zope.org/namespaces/tal"\n       lang="en"\n       metal:use-macro="context/@@prefs_main_template/macros/master"\n-      i18n:domain="plone">\n+      xml:lang="en"\n+      i18n:domain="plone"\n+>\n \n-<body>\n-<tal:main metal:fill-slot="prefs_configlet_main">\n+  <body>\n+    <tal:main metal:fill-slot="prefs_configlet_main">\n \n-  <header>\n+      <header>\n \n-    <h1 tal:content="view/label">View Title</h1>\n-    <p class="lead" tal:condition="view/description | nothing" tal:content="structure view/description">View Description</p>\n+        <h1 tal:content="view/label">View Title</h1>\n+        <p class="lead"\n+           tal:condition="view/description | nothing"\n+           tal:content="structure view/description"\n+        >View Description</p>\n \n-  </header>\n+      </header>\n \n-  <div metal:use-macro="context/@@global_statusmessage/macros/portal_message">\n+      <div metal:use-macro="context/@@global_statusmessage/macros/portal_message">\n     Portal status message\n-  </div>\n+      </div>\n \n-  <div id="content-core">\n-    <div id="layout-contents">\n-      <span tal:replace="structure view/contents" />\n-    </div>\n-  </div>\n+      <div id="content-core">\n+        <div id="layout-contents">\n+          <span tal:replace="structure view/contents"></span>\n+        </div>\n+      </div>\n \n-</tal:main>\n-</body>\n+    </tal:main>\n+  </body>\n </html>\ndiff --git a/plone/app/registry/browser/templates/delete_layout.pt b/plone/app/registry/browser/templates/delete_layout.pt\nindex 717a909..9d68041 100644\n--- a/plone/app/registry/browser/templates/delete_layout.pt\n+++ b/plone/app/registry/browser/templates/delete_layout.pt\n@@ -1,36 +1,60 @@\n-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"\n-      xmlns:tal="http://xml.zope.org/namespaces/tal"\n-      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+<html xmlns="http://www.w3.org/1999/xhtml"\n       xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+      xmlns:tal="http://xml.zope.org/namespaces/tal"\n       lang="en"\n       metal:use-macro="context/@@prefs_main_template/macros/master"\n-      i18n:domain="plone">\n+      xml:lang="en"\n+      i18n:domain="plone"\n+>\n \n-<metal:block fill-slot="top_slot"\n-             tal:define="dummy python:request.set(\'disable_border\',1)" />\n+  <metal:block fill-slot="top_slot"\n+               tal:define="\n+                 dummy python:request.set(\'disable_border\',1);\n+               "\n+  />\n \n-<body>\n-<div id="content" metal:fill-slot="prefs_configlet_content">\n+  <body>\n+    <div id="content"\n+         metal:fill-slot="prefs_configlet_content"\n+    >\n \n-    <h1 class="documentFirstHeading" i18n:translate="">Delete Record</h1>\n+      <h1 class="documentFirstHeading"\n+          i18n:translate=""\n+      >Delete Record</h1>\n \n-    <p class="documentDescription" i18n:translate="description_record_delete">\n+      <p class="documentDescription"\n+         i18n:translate="description_record_delete"\n+      >\n         Are you certain you want to delete this record? This can not be undone\n         and can be potentially harmful if you don\'t know what you are doing.\n-    </p>\n+      </p>\n \n-    <b i18n:translate="">Record</b>: ${request/form/name}\n+      <b i18n:translate="">Record</b>: ${request/form/name}\n \n-    <form method="POST">\n-      <input type="hidden" name="name" value="${request/form/name}" />\n-      <div class="formControls">\n-        <input id="form-buttons-delete" name="form.buttons.delete" i18n:attributes="value"\n-               class="submit-widget button-field btn btn-danger" value="Yes, delete" type="submit">\n-        <input id="form-buttons-cancel" name="form.buttons.cancel" i18n:attributes="value"\n-               class="submit-widget button-field btn btn-secondary" value="Cancel" type="submit">\n-      </div>\n-    </form>\n+      <form method="POST">\n+        <input name="name"\n+               type="hidden"\n+               value="${request/form/name}"\n+        />\n+        <div class="formControls">\n+          <input class="submit-widget button-field btn btn-danger"\n+                 id="form-buttons-delete"\n+                 name="form.buttons.delete"\n+                 type="submit"\n+                 value="Yes, delete"\n+                 i18n:attributes="value"\n+          />\n+          <input class="submit-widget button-field btn btn-secondary"\n+                 id="form-buttons-cancel"\n+                 name="form.buttons.cancel"\n+                 type="submit"\n+                 value="Cancel"\n+                 i18n:attributes="value"\n+          />\n+        </div>\n+      </form>\n \n-</div>\n-</body>\n+    </div>\n+  </body>\n </html>\ndiff --git a/plone/app/registry/browser/templates/edit_layout.pt b/plone/app/registry/browser/templates/edit_layout.pt\nindex 15a531e..1b78991 100644\n--- a/plone/app/registry/browser/templates/edit_layout.pt\n+++ b/plone/app/registry/browser/templates/edit_layout.pt\n@@ -1,27 +1,38 @@\n-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"\n-      xmlns:tal="http://xml.zope.org/namespaces/tal"\n-      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+<html xmlns="http://www.w3.org/1999/xhtml"\n       xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+      xmlns:tal="http://xml.zope.org/namespaces/tal"\n       lang="en"\n       metal:use-macro="context/@@prefs_main_template/macros/master"\n-      i18n:domain="plone">\n+      xml:lang="en"\n+      i18n:domain="plone"\n+>\n \n-<metal:block fill-slot="top_slot"\n-             tal:define="dummy python:request.set(\'disable_border\',1)" />\n+  <metal:block fill-slot="top_slot"\n+               tal:define="\n+                 dummy python:request.set(\'disable_border\',1);\n+               "\n+  />\n \n-<body>\n-<div id="content" metal:fill-slot="prefs_configlet_content">\n+  <body>\n+    <div id="content"\n+         metal:fill-slot="prefs_configlet_content"\n+    >\n \n-    <h1 class="documentFirstHeading" tal:content="view/label">View Title</h1>\n+      <h1 class="documentFirstHeading"\n+          tal:content="view/label"\n+      >View Title</h1>\n \n-    <p class="documentDescription" i18n:translate="description_record_edit">\n+      <p class="documentDescription"\n+         i18n:translate="description_record_edit"\n+      >\n         Use the form below to edit the value of this particular record.\n-    </p>\n+      </p>\n \n-    <div id="layout-contents">\n-        <span tal:replace="structure view/contents" />\n-    </div>\n+      <div id="layout-contents">\n+        <span tal:replace="structure view/contents"></span>\n+      </div>\n \n-</div>\n-</body>\n+    </div>\n+  </body>\n </html>\ndiff --git a/plone/app/registry/browser/templates/exportxml.pt b/plone/app/registry/browser/templates/exportxml.pt\nindex e490615..b5ca15e 100644\n--- a/plone/app/registry/browser/templates/exportxml.pt\n+++ b/plone/app/registry/browser/templates/exportxml.pt\n@@ -1,25 +1,36 @@\n <tal>\n-    <h3 i18n:translate="registry_export_parts_heading">Export parts</h3>\n-    <p i18n:translate="registry_export_parts_text">\n+  <h3 i18n:translate="registry_export_parts_heading">Export parts</h3>\n+  <p i18n:translate="registry_export_parts_text">\n       Download of a XML-file optimized to be used in a GenericSetup profile of an add-on or policy profile.\n       It contains only the selected parts.\n-    </p>\n+  </p>\n \n-    <div class="pat-autotoc autotabs"\n-         data-pat-autotoc="levels: h3; section: div.exporttab; className: autotabs">\n-        <div class="exporttab"\n-             id="export-section-interfaces">\n-          <h3 i18n:translate="registry_export_parts_label_iface" id="h3-interfaces">by Interface</h3>\n-          <ul class="collapse_interfaces">\n-            <li tal:repeat="prefix python:view.interfaces()"><a target="_blank" href="${python:prefix[1]}">${python:prefix[0]}</a></li>\n-          </ul>\n-        </div>\n-        <div class="exporttab"\n-             id="export-section-prefixes">\n-          <h3 i18n:translate="registry_export_parts_label_prefix" id="h3-prefixes">by Prefix</h3>\n-          <ul>\n-            <li tal:repeat="prefix python:view.prefixes()"><a target="_blank" href="${python:prefix[1]}">${python:prefix[0]}</a></li>\n-          </ul>\n-        </div>\n+  <div class="pat-autotoc autotabs"\n+       data-pat-autotoc="levels: h3; section: div.exporttab; className: autotabs"\n+  >\n+    <div class="exporttab"\n+         id="export-section-interfaces"\n+    >\n+      <h3 id="h3-interfaces"\n+          i18n:translate="registry_export_parts_label_iface"\n+      >by Interface</h3>\n+      <ul class="collapse_interfaces">\n+        <li tal:repeat="prefix python:view.interfaces()"><a href="${python:prefix[1]}"\n+             target="_blank"\n+          >${python:prefix[0]}</a></li>\n+      </ul>\n     </div>\n+    <div class="exporttab"\n+         id="export-section-prefixes"\n+    >\n+      <h3 id="h3-prefixes"\n+          i18n:translate="registry_export_parts_label_prefix"\n+      >by Prefix</h3>\n+      <ul>\n+        <li tal:repeat="prefix python:view.prefixes()"><a href="${python:prefix[1]}"\n+             target="_blank"\n+          >${python:prefix[0]}</a></li>\n+      </ul>\n+    </div>\n+  </div>\n </tal>\n'

Repository: plone.app.registry


Branch: refs/heads/master
Date: 2023-04-01T20:05:45+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.registry/commit/a12cf9efa51b7ebfdf7ec1c38b4dd6251189d1a6

fix: disable zpretty

Files changed:
M .pre-commit-config.yaml
M tox.ini

b'diff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex 449e951..1c66927 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -18,10 +18,6 @@ repos:\n     rev: 23.1.0\n     hooks:\n     -   id: black\n--   repo: https://github.com/collective/zpretty\n-    rev: 3.0.3\n-    hooks:\n-    -   id: zpretty\n -   repo: https://github.com/PyCQA/flake8\n     rev: 6.0.0\n     hooks:\ndiff --git a/tox.ini b/tox.ini\nindex aa13e78..d2d712b 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -21,7 +21,6 @@ commands =\n     pre-commit run -a pyupgrade\n     pre-commit run -a isort\n     pre-commit run -a black\n-    pre-commit run -a zpretty\n \n [testenv:lint]\n description = run linters that will help improve the code style\n'

Repository: plone.app.registry


Branch: refs/heads/master
Date: 2023-04-01T20:07:25+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.registry/commit/de95077b04f69076a4984606df28fb7ed5779e46

feat: flake8

Files changed:
M plone/app/registry/__init__.py
M plone/app/registry/exportimport/handler.py

b'diff --git a/plone/app/registry/__init__.py b/plone/app/registry/__init__.py\nindex a057128..2338541 100644\n--- a/plone/app/registry/__init__.py\n+++ b/plone/app/registry/__init__.py\n@@ -1 +1 @@\n-from plone.app.registry.registry import Registry\n+from plone.app.registry.registry import Registry  # noqa: F401\ndiff --git a/plone/app/registry/exportimport/handler.py b/plone/app/registry/exportimport/handler.py\nindex fcaf5c2..98bf6f6 100644\n--- a/plone/app/registry/exportimport/handler.py\n+++ b/plone/app/registry/exportimport/handler.py\n@@ -185,7 +185,7 @@ def importRecord(self, node):\n                 field = None\n             except KeyError:\n                 self.logger.warning(\n-                    "Interface {} specified for record %s has "\n+                    "Interface {} specified for record {} has "\n                     "no field {}.".format(interfaceName, name, fieldName)\n                 )\n                 interface = None\n'

Repository: plone.app.registry


Branch: refs/heads/master
Date: 2023-04-01T20:09:41+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.registry/commit/a724eef71e4069865d04bfcf5f8ad0031cd6abe5

feat: codespell

Files changed:
M plone/app/registry/README.txt
M plone/app/registry/exportimport/handler.py
M plone/app/registry/tests/test_exportimport.py

b'diff --git a/plone/app/registry/README.txt b/plone/app/registry/README.txt\nindex 7571f5b..3b3724d 100644\n--- a/plone/app/registry/README.txt\n+++ b/plone/app/registry/README.txt\n@@ -6,7 +6,7 @@ Detailed documentation\n class IMyPackage(Interface):\n \n     field1 = TextLine(title="Field1", default="")\n-    field2 = TextLine(title="Field2", defualt="Initial value")\n+    field2 = TextLine(title="Field2", default="Initial value")\n \n \n \ndiff --git a/plone/app/registry/exportimport/handler.py b/plone/app/registry/exportimport/handler.py\nindex 98bf6f6..81b0ea7 100644\n--- a/plone/app/registry/exportimport/handler.py\n+++ b/plone/app/registry/exportimport/handler.py\n@@ -301,7 +301,7 @@ def importRecord(self, node):\n                     elif isinstance(value, dict):\n                         for key, value in value.items():\n                             # check if value is list, if so, let\'s add\n-                            # instead of overridding\n+                            # instead of overriding\n                             if (\n                                 type(value) == list\n                                 and key in existing_value\ndiff --git a/plone/app/registry/tests/test_exportimport.py b/plone/app/registry/tests/test_exportimport.py\nindex 5b2b7aa..cb14221 100644\n--- a/plone/app/registry/tests/test_exportimport.py\n+++ b/plone/app/registry/tests/test_exportimport.py\n@@ -83,7 +83,7 @@ def assertXmlEquals(self, expected, actual):\n             print(prettyXML(actual_tree))\n             print()\n \n-            raise AssertionError("XML mis-match")\n+            raise AssertionError("XML mismatch")\n \n \n class TestImport(ExportImportTest):\n@@ -330,7 +330,7 @@ def test_import_records_with_values(self):\n     def test_import_records_nonexistant_interface(self):\n         xml = """\\\n <registry>\n-    <records interface="non.existant.ISchema" />\n+    <records interface="non.existent.ISchema" />\n </registry>\n """\n         context = DummyImportContext(self.site, purge=False)\n@@ -341,7 +341,7 @@ def test_import_records_nonexistant_interface(self):\n     def test_import_records_nonexistant_interface_condition_not_installed(self):  # noqa\n         xml = """\\\n <registry>\n-    <records interface="non.existant.ISchema"\n+    <records interface="non.existent.ISchema"\n              condition="not-installed non" />\n </registry>\n """\n@@ -1441,7 +1441,7 @@ def test_export_with_choice(self):\n     def test_export_with_missing_schema_does_not_error(self):\n         xml = """\\\n <registry>\n-  <record name="test.export.simple" interface="non.existant.ISchema" field="blah">\n+  <record name="test.export.simple" interface="non.existent.ISchema" field="blah">\n     <field type="plone.registry.field.TextLine">\n       <default>N/A</default>\n       <title>Simple record</title>\n@@ -1458,7 +1458,7 @@ def test_export_with_missing_schema_does_not_error(self):\n         # Note: These are nominally read-only!\n         self.registry.records[\n             "test.export.simple"\n-        ].field.interfaceName = "non.existant.ISchema"  # noqa\n+        ].field.interfaceName = "non.existent.ISchema"\n         self.registry.records["test.export.simple"].field.fieldName = "blah"\n \n         alsoProvides(self.registry.records["test.export.simple"], IInterfaceAwareRecord)\n'

Repository: plone.app.registry


Branch: refs/heads/master
Date: 2023-04-01T20:11:10+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.registry/commit/cb1b3286fee8de777e8318152dcab818bc869733

feat: remove superfluous noqa comments

Files changed:
M plone/app/registry/tests/test_exportimport.py

b'diff --git a/plone/app/registry/tests/test_exportimport.py b/plone/app/registry/tests/test_exportimport.py\nindex cb14221..8bf17d3 100644\n--- a/plone/app/registry/tests/test_exportimport.py\n+++ b/plone/app/registry/tests/test_exportimport.py\n@@ -338,7 +338,7 @@ def test_import_records_nonexistant_interface(self):\n \n         self.assertRaises(ImportError, importRegistry, context)\n \n-    def test_import_records_nonexistant_interface_condition_not_installed(self):  # noqa\n+    def test_import_records_nonexistant_interface_condition_not_installed(self):\n         xml = """\\\n <registry>\n     <records interface="non.existent.ISchema"\n@@ -463,13 +463,11 @@ def test_import_interface_and_value(self):\n             "Age",\n             self.registry.records[\n                 "plone.app.registry.tests.data.ITestSettingsDisallowed.age"\n-            ].field.title,  # noqa\n+            ].field.title,\n         )\n         self.assertEqual(\n             2,\n-            self.registry[\n-                "plone.app.registry.tests.data.ITestSettingsDisallowed.age"\n-            ],  # noqa\n+            self.registry["plone.app.registry.tests.data.ITestSettingsDisallowed.age"],\n         )\n \n     def test_import_interface_with_differnet_name(self):\n@@ -507,13 +505,11 @@ def test_import_interface_no_value(self):\n             "Name",\n             self.registry.records[\n                 "plone.app.registry.tests.data.ITestSettingsDisallowed.name"\n-            ].field.title,  # noqa\n+            ].field.title,\n         )\n         self.assertEqual(\n             "Mr. Registry",\n-            self.registry[\n-                "plone.app.registry.tests.data.ITestSettingsDisallowed.name"\n-            ],  # noqa\n+            self.registry["plone.app.registry.tests.data.ITestSettingsDisallowed.name"],\n         )\n \n     def test_import_field_only(self):\n@@ -577,9 +573,7 @@ def test_import_field_ref(self):\n         )\n         self.assertEqual(\n             "value",\n-            self.registry.records[\n-                "test.registry.field.override"\n-            ].field.__name__,  # noqa\n+            self.registry.records["test.registry.field.override"].field.__name__,\n         )\n         self.assertEqual("Another value", self.registry["test.registry.field.override"])\n \n@@ -1022,7 +1016,7 @@ def test_import_choice_field(self):\n             [\n                 t.value\n                 for t in self.registry.records["test.registry.field"].field.vocabulary\n-            ],  # noqa\n+            ],\n         )\n         self.assertEqual(None, self.registry["test.registry.field"])\n \n'

Repository: plone.app.registry


Branch: refs/heads/master
Date: 2023-04-01T20:14:03+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.registry/commit/150a9c74f24b59713f24f85a743594e3b55b8873

feat: declare dependencies

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex f0ef456..2f74ad1 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -45,10 +45,15 @@\n         "plone.supermodel>=1.1",\n         "Products.statusmessages",\n         "setuptools",\n+        "Products.GenericSetup",\n+        "plone.z3cform",\n+        "z3c.form",\n+        "zope.dottedname",\n     ],\n     extras_require={\n         "test": [\n             "plone.app.testing",\n+            "plone.testing",\n         ]\n     },\n     entry_points="""\n'

Repository: plone.app.registry


Branch: refs/heads/master
Date: 2023-04-10T02:47:57+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.registry/commit/b3d6d31541bf9b70246280165e45ea26aa01a20c

Merge pull request #65 from plone/config-with-default-template-ed4d6fe6

Config with default template

Files changed:
A .editorconfig
A .meta.toml
A .pre-commit-config.yaml
A news/5623f8b3.internal
A tox.ini
M plone/app/registry/README.txt
M plone/app/registry/__init__.py
M plone/app/registry/browser/configure.zcml
M plone/app/registry/browser/templates/controlpanel_layout.pt
M plone/app/registry/browser/templates/delete_layout.pt
M plone/app/registry/browser/templates/edit_layout.pt
M plone/app/registry/browser/templates/exportxml.pt
M plone/app/registry/configure.zcml
M plone/app/registry/exportimport/configure.zcml
M plone/app/registry/exportimport/handler.py
M plone/app/registry/exportimport/handlers.zcml
M plone/app/registry/profiles/default/componentregistry.xml
M plone/app/registry/profiles/default/controlpanel.xml
M plone/app/registry/profiles/default/metadata.xml
M plone/app/registry/profiles/default/toolset.xml
M plone/app/registry/testing.py
M plone/app/registry/tests/data.py
M plone/app/registry/tests/test_controlpanel.py
M plone/app/registry/tests/test_exportimport.py
M plone/app/registry/tests/test_setup.py
M pyproject.toml
M setup.cfg
M setup.py

b'diff --git a/.editorconfig b/.editorconfig\nnew file mode 100644\nindex 0000000..b4158b8\n--- /dev/null\n+++ b/.editorconfig\n@@ -0,0 +1,39 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+#\n+# EditorConfig Configuration file, for more details see:\n+# http://EditorConfig.org\n+# EditorConfig is a convention description, that could be interpreted\n+# by multiple editors to enforce common coding conventions for specific\n+# file types\n+\n+# top-most EditorConfig file:\n+# Will ignore other EditorConfig files in Home directory or upper tree level.\n+root = true\n+\n+\n+[*]  # For All Files\n+# Unix-style newlines with a newline ending every file\n+end_of_line = lf\n+insert_final_newline = true\n+trim_trailing_whitespace = true\n+# Set default charset\n+charset = utf-8\n+# Indent style default\n+indent_style = space\n+# Max Line Length - a hard line wrap, should be disabled\n+max_line_length = off\n+\n+[*.{py,cfg,ini}]\n+# 4 space indentation\n+indent_size = 4\n+\n+[*.{yml,zpt,pt,dtml,zcml}]\n+# 2 space indentation\n+indent_size = 2\n+\n+[{Makefile,.gitmodules}]\n+# Tab indentation (no size specified, but view as 4 spaces)\n+indent_style = tab\n+indent_size = unset\n+tab_width = unset\ndiff --git a/.meta.toml b/.meta.toml\nnew file mode 100644\nindex 0000000..4f67994\n--- /dev/null\n+++ b/.meta.toml\n@@ -0,0 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[meta]\n+template = "default"\n+commit-id = "5623f8b3"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nnew file mode 100644\nindex 0000000..1c66927\n--- /dev/null\n+++ b/.pre-commit-config.yaml\n@@ -0,0 +1,38 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+ci:\n+    autofix_prs: false\n+    autoupdate_schedule: monthly\n+\n+repos:\n+-   repo: https://github.com/asottile/pyupgrade\n+    rev: v3.3.1\n+    hooks:\n+    -   id: pyupgrade\n+        args: [--py38-plus]\n+-   repo: https://github.com/pycqa/isort\n+    rev: 5.12.0\n+    hooks:\n+    -   id: isort\n+-   repo: https://github.com/psf/black\n+    rev: 23.1.0\n+    hooks:\n+    -   id: black\n+-   repo: https://github.com/PyCQA/flake8\n+    rev: 6.0.0\n+    hooks:\n+    -   id: flake8\n+-   repo: https://github.com/codespell-project/codespell\n+    rev: v2.2.2\n+    hooks:\n+    -   id: codespell\n+        additional_dependencies:\n+          - tomli\n+-   repo: https://github.com/mgedmin/check-manifest\n+    rev: "0.49"\n+    hooks:\n+    -   id: check-manifest\n+-   repo: https://github.com/regebro/pyroma\n+    rev: "4.2"\n+    hooks:\n+    -   id: pyroma\ndiff --git a/news/5623f8b3.internal b/news/5623f8b3.internal\nnew file mode 100644\nindex 0000000..c08f539\n--- /dev/null\n+++ b/news/5623f8b3.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/plone/app/registry/README.txt b/plone/app/registry/README.txt\nindex 7571f5b..3b3724d 100644\n--- a/plone/app/registry/README.txt\n+++ b/plone/app/registry/README.txt\n@@ -6,7 +6,7 @@ Detailed documentation\n class IMyPackage(Interface):\n \n     field1 = TextLine(title="Field1", default="")\n-    field2 = TextLine(title="Field2", defualt="Initial value")\n+    field2 = TextLine(title="Field2", default="Initial value")\n \n \n \ndiff --git a/plone/app/registry/__init__.py b/plone/app/registry/__init__.py\nindex a057128..2338541 100644\n--- a/plone/app/registry/__init__.py\n+++ b/plone/app/registry/__init__.py\n@@ -1 +1 @@\n-from plone.app.registry.registry import Registry\n+from plone.app.registry.registry import Registry  # noqa: F401\ndiff --git a/plone/app/registry/browser/configure.zcml b/plone/app/registry/browser/configure.zcml\nindex 4c2e7c7..26602d1 100644\n--- a/plone/app/registry/browser/configure.zcml\n+++ b/plone/app/registry/browser/configure.zcml\n@@ -1,49 +1,50 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:browser="http://namespaces.zope.org/browser"\n-    i18n_domain="plone">\n+    i18n_domain="plone"\n+    >\n \n-    <include package="plone.app.z3cform" />\n-    <include package="plone.autoform" />\n+  <include package="plone.app.z3cform" />\n+  <include package="plone.autoform" />\n \n-    <!-- <browser:resourceDirectory\n+  <!-- <browser:resourceDirectory\n         name="plone.app.registry"\n         directory="resources"\n         /> -->\n \n-    <browser:defaultView\n-        for="plone.registry.interfaces.IRegistry"\n-        name="configuration_registry"\n-        />\n-\n-    <browser:page\n-        name="configuration_registry"\n-        for="plone.registry.interfaces.IRegistry"\n-        class=".records.RecordsControlPanel"\n-        permission="cmf.ManagePortal"\n-        />\n-\n-    <browser:page\n-        name="edit"\n-        for="plone.registry.interfaces.IRegistry"\n-        class=".edit.RecordEditView"\n-        template="templates/edit_layout.pt"\n-        permission="cmf.ManagePortal"\n-        />\n-\n-    <browser:page\n-        name="delete-record"\n-        for="plone.registry.interfaces.IRegistry"\n-        class=".delete.RecordDeleteView"\n-        template="templates/delete_layout.pt"\n-        permission="cmf.ManagePortal"\n-        />\n-\n-    <browser:page\n-        for="plone.registry.interfaces.IRegistry"\n-        name="configuration_registry_export_xml"\n-        class=".exportxml.RegistryExporterView"\n-        permission="cmf.ManagePortal"\n-        />\n+  <browser:defaultView\n+      name="configuration_registry"\n+      for="plone.registry.interfaces.IRegistry"\n+      />\n+\n+  <browser:page\n+      name="configuration_registry"\n+      for="plone.registry.interfaces.IRegistry"\n+      class=".records.RecordsControlPanel"\n+      permission="cmf.ManagePortal"\n+      />\n+\n+  <browser:page\n+      name="edit"\n+      for="plone.registry.interfaces.IRegistry"\n+      class=".edit.RecordEditView"\n+      template="templates/edit_layout.pt"\n+      permission="cmf.ManagePortal"\n+      />\n+\n+  <browser:page\n+      name="delete-record"\n+      for="plone.registry.interfaces.IRegistry"\n+      class=".delete.RecordDeleteView"\n+      template="templates/delete_layout.pt"\n+      permission="cmf.ManagePortal"\n+      />\n+\n+  <browser:page\n+      name="configuration_registry_export_xml"\n+      for="plone.registry.interfaces.IRegistry"\n+      class=".exportxml.RegistryExporterView"\n+      permission="cmf.ManagePortal"\n+      />\n \n </configure>\ndiff --git a/plone/app/registry/browser/templates/controlpanel_layout.pt b/plone/app/registry/browser/templates/controlpanel_layout.pt\nindex 4a90209..8793140 100644\n--- a/plone/app/registry/browser/templates/controlpanel_layout.pt\n+++ b/plone/app/registry/browser/templates/controlpanel_layout.pt\n@@ -1,31 +1,36 @@\n-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"\n-      xmlns:tal="http://xml.zope.org/namespaces/tal"\n-      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+<html xmlns="http://www.w3.org/1999/xhtml"\n       xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+      xmlns:tal="http://xml.zope.org/namespaces/tal"\n       lang="en"\n       metal:use-macro="context/@@prefs_main_template/macros/master"\n-      i18n:domain="plone">\n+      xml:lang="en"\n+      i18n:domain="plone"\n+>\n \n-<body>\n-<tal:main metal:fill-slot="prefs_configlet_main">\n+  <body>\n+    <tal:main metal:fill-slot="prefs_configlet_main">\n \n-  <header>\n+      <header>\n \n-    <h1 tal:content="view/label">View Title</h1>\n-    <p class="lead" tal:condition="view/description | nothing" tal:content="structure view/description">View Description</p>\n+        <h1 tal:content="view/label">View Title</h1>\n+        <p class="lead"\n+           tal:condition="view/description | nothing"\n+           tal:content="structure view/description"\n+        >View Description</p>\n \n-  </header>\n+      </header>\n \n-  <div metal:use-macro="context/@@global_statusmessage/macros/portal_message">\n+      <div metal:use-macro="context/@@global_statusmessage/macros/portal_message">\n     Portal status message\n-  </div>\n+      </div>\n \n-  <div id="content-core">\n-    <div id="layout-contents">\n-      <span tal:replace="structure view/contents" />\n-    </div>\n-  </div>\n+      <div id="content-core">\n+        <div id="layout-contents">\n+          <span tal:replace="structure view/contents"></span>\n+        </div>\n+      </div>\n \n-</tal:main>\n-</body>\n+    </tal:main>\n+  </body>\n </html>\ndiff --git a/plone/app/registry/browser/templates/delete_layout.pt b/plone/app/registry/browser/templates/delete_layout.pt\nindex 717a909..9d68041 100644\n--- a/plone/app/registry/browser/templates/delete_layout.pt\n+++ b/plone/app/registry/browser/templates/delete_layout.pt\n@@ -1,36 +1,60 @@\n-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"\n-      xmlns:tal="http://xml.zope.org/namespaces/tal"\n-      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+<html xmlns="http://www.w3.org/1999/xhtml"\n       xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+      xmlns:tal="http://xml.zope.org/namespaces/tal"\n       lang="en"\n       metal:use-macro="context/@@prefs_main_template/macros/master"\n-      i18n:domain="plone">\n+      xml:lang="en"\n+      i18n:domain="plone"\n+>\n \n-<metal:block fill-slot="top_slot"\n-             tal:define="dummy python:request.set(\'disable_border\',1)" />\n+  <metal:block fill-slot="top_slot"\n+               tal:define="\n+                 dummy python:request.set(\'disable_border\',1);\n+               "\n+  />\n \n-<body>\n-<div id="content" metal:fill-slot="prefs_configlet_content">\n+  <body>\n+    <div id="content"\n+         metal:fill-slot="prefs_configlet_content"\n+    >\n \n-    <h1 class="documentFirstHeading" i18n:translate="">Delete Record</h1>\n+      <h1 class="documentFirstHeading"\n+          i18n:translate=""\n+      >Delete Record</h1>\n \n-    <p class="documentDescription" i18n:translate="description_record_delete">\n+      <p class="documentDescription"\n+         i18n:translate="description_record_delete"\n+      >\n         Are you certain you want to delete this record? This can not be undone\n         and can be potentially harmful if you don\'t know what you are doing.\n-    </p>\n+      </p>\n \n-    <b i18n:translate="">Record</b>: ${request/form/name}\n+      <b i18n:translate="">Record</b>: ${request/form/name}\n \n-    <form method="POST">\n-      <input type="hidden" name="name" value="${request/form/name}" />\n-      <div class="formControls">\n-        <input id="form-buttons-delete" name="form.buttons.delete" i18n:attributes="value"\n-               class="submit-widget button-field btn btn-danger" value="Yes, delete" type="submit">\n-        <input id="form-buttons-cancel" name="form.buttons.cancel" i18n:attributes="value"\n-               class="submit-widget button-field btn btn-secondary" value="Cancel" type="submit">\n-      </div>\n-    </form>\n+      <form method="POST">\n+        <input name="name"\n+               type="hidden"\n+               value="${request/form/name}"\n+        />\n+        <div class="formControls">\n+          <input class="submit-widget button-field btn btn-danger"\n+                 id="form-buttons-delete"\n+                 name="form.buttons.delete"\n+                 type="submit"\n+                 value="Yes, delete"\n+                 i18n:attributes="value"\n+          />\n+          <input class="submit-widget button-field btn btn-secondary"\n+                 id="form-buttons-cancel"\n+                 name="form.buttons.cancel"\n+                 type="submit"\n+                 value="Cancel"\n+                 i18n:attributes="value"\n+          />\n+        </div>\n+      </form>\n \n-</div>\n-</body>\n+    </div>\n+  </body>\n </html>\ndiff --git a/plone/app/registry/browser/templates/edit_layout.pt b/plone/app/registry/browser/templates/edit_layout.pt\nindex 15a531e..1b78991 100644\n--- a/plone/app/registry/browser/templates/edit_layout.pt\n+++ b/plone/app/registry/browser/templates/edit_layout.pt\n@@ -1,27 +1,38 @@\n-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"\n-      xmlns:tal="http://xml.zope.org/namespaces/tal"\n-      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+<html xmlns="http://www.w3.org/1999/xhtml"\n       xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+      xmlns:tal="http://xml.zope.org/namespaces/tal"\n       lang="en"\n       metal:use-macro="context/@@prefs_main_template/macros/master"\n-      i18n:domain="plone">\n+      xml:lang="en"\n+      i18n:domain="plone"\n+>\n \n-<metal:block fill-slot="top_slot"\n-             tal:define="dummy python:request.set(\'disable_border\',1)" />\n+  <metal:block fill-slot="top_slot"\n+               tal:define="\n+                 dummy python:request.set(\'disable_border\',1);\n+               "\n+  />\n \n-<body>\n-<div id="content" metal:fill-slot="prefs_configlet_content">\n+  <body>\n+    <div id="content"\n+         metal:fill-slot="prefs_configlet_content"\n+    >\n \n-    <h1 class="documentFirstHeading" tal:content="view/label">View Title</h1>\n+      <h1 class="documentFirstHeading"\n+          tal:content="view/label"\n+      >View Title</h1>\n \n-    <p class="documentDescription" i18n:translate="description_record_edit">\n+      <p class="documentDescription"\n+         i18n:translate="description_record_edit"\n+      >\n         Use the form below to edit the value of this particular record.\n-    </p>\n+      </p>\n \n-    <div id="layout-contents">\n-        <span tal:replace="structure view/contents" />\n-    </div>\n+      <div id="layout-contents">\n+        <span tal:replace="structure view/contents"></span>\n+      </div>\n \n-</div>\n-</body>\n+    </div>\n+  </body>\n </html>\ndiff --git a/plone/app/registry/browser/templates/exportxml.pt b/plone/app/registry/browser/templates/exportxml.pt\nindex e490615..b5ca15e 100644\n--- a/plone/app/registry/browser/templates/exportxml.pt\n+++ b/plone/app/registry/browser/templates/exportxml.pt\n@@ -1,25 +1,36 @@\n <tal>\n-    <h3 i18n:translate="registry_export_parts_heading">Export parts</h3>\n-    <p i18n:translate="registry_export_parts_text">\n+  <h3 i18n:translate="registry_export_parts_heading">Export parts</h3>\n+  <p i18n:translate="registry_export_parts_text">\n       Download of a XML-file optimized to be used in a GenericSetup profile of an add-on or policy profile.\n       It contains only the selected parts.\n-    </p>\n+  </p>\n \n-    <div class="pat-autotoc autotabs"\n-         data-pat-autotoc="levels: h3; section: div.exporttab; className: autotabs">\n-        <div class="exporttab"\n-             id="export-section-interfaces">\n-          <h3 i18n:translate="registry_export_parts_label_iface" id="h3-interfaces">by Interface</h3>\n-          <ul class="collapse_interfaces">\n-            <li tal:repeat="prefix python:view.interfaces()"><a target="_blank" href="${python:prefix[1]}">${python:prefix[0]}</a></li>\n-          </ul>\n-        </div>\n-        <div class="exporttab"\n-             id="export-section-prefixes">\n-          <h3 i18n:translate="registry_export_parts_label_prefix" id="h3-prefixes">by Prefix</h3>\n-          <ul>\n-            <li tal:repeat="prefix python:view.prefixes()"><a target="_blank" href="${python:prefix[1]}">${python:prefix[0]}</a></li>\n-          </ul>\n-        </div>\n+  <div class="pat-autotoc autotabs"\n+       data-pat-autotoc="levels: h3; section: div.exporttab; className: autotabs"\n+  >\n+    <div class="exporttab"\n+         id="export-section-interfaces"\n+    >\n+      <h3 id="h3-interfaces"\n+          i18n:translate="registry_export_parts_label_iface"\n+      >by Interface</h3>\n+      <ul class="collapse_interfaces">\n+        <li tal:repeat="prefix python:view.interfaces()"><a href="${python:prefix[1]}"\n+             target="_blank"\n+          >${python:prefix[0]}</a></li>\n+      </ul>\n     </div>\n+    <div class="exporttab"\n+         id="export-section-prefixes"\n+    >\n+      <h3 id="h3-prefixes"\n+          i18n:translate="registry_export_parts_label_prefix"\n+      >by Prefix</h3>\n+      <ul>\n+        <li tal:repeat="prefix python:view.prefixes()"><a href="${python:prefix[1]}"\n+             target="_blank"\n+          >${python:prefix[0]}</a></li>\n+      </ul>\n+    </div>\n+  </div>\n </tal>\ndiff --git a/plone/app/registry/configure.zcml b/plone/app/registry/configure.zcml\nindex 7b97646..707e457 100644\n--- a/plone/app/registry/configure.zcml\n+++ b/plone/app/registry/configure.zcml\n@@ -2,35 +2,39 @@\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:five="http://namespaces.zope.org/five"\n     xmlns:gs="http://namespaces.zope.org/genericsetup"\n-    i18n_domain="plone">\n+    i18n_domain="plone"\n+    >\n \n-    <include package="Products.CMFCore" file="permissions.zcml" />\n+  <include\n+      package="Products.CMFCore"\n+      file="permissions.zcml"\n+      />\n \n-    <include package="plone.registry" />\n+  <include package="plone.registry" />\n \n-    <include package=".exportimport" />\n-    <include package=".browser" />\n+  <include package=".exportimport" />\n+  <include package=".browser" />\n \n-    <five:registerClass\n-        class=".registry.Registry"\n-        meta_type="Plone Configuration Registry"\n+  <five:registerClass\n+      class=".registry.Registry"\n+      permission="cmf.ManagePortal"\n+      meta_type="Plone Configuration Registry"\n+      />\n+\n+  <class class=".registry.Registry">\n+    <require\n         permission="cmf.ManagePortal"\n+        interface="plone.registry.interfaces.IRegistry"\n         />\n+  </class>\n \n-    <class class=".registry.Registry">\n-        <require\n-            permission="cmf.ManagePortal"\n-            interface="plone.registry.interfaces.IRegistry"\n-            />\n-    </class>\n-\n-    <gs:registerProfile\n-        name="default"\n-        directory="profiles/default"\n-        title="Configuration registry"\n-        description="A \'Mozilla about:config\' style configuration registry"\n-        for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n-        provides="Products.GenericSetup.interfaces.EXTENSION"\n-        />\n+  <gs:registerProfile\n+      name="default"\n+      title="Configuration registry"\n+      description="A \'Mozilla about:config\' style configuration registry"\n+      provides="Products.GenericSetup.interfaces.EXTENSION"\n+      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      directory="profiles/default"\n+      />\n \n </configure>\ndiff --git a/plone/app/registry/exportimport/configure.zcml b/plone/app/registry/exportimport/configure.zcml\nindex 72a75ee..958aa6f 100644\n--- a/plone/app/registry/exportimport/configure.zcml\n+++ b/plone/app/registry/exportimport/configure.zcml\n@@ -1,27 +1,29 @@\n <configure\n-    i18n_domain="plone"\n     xmlns="http://namespaces.zope.org/zope"\n-    xmlns:gs="http://namespaces.zope.org/genericsetup">\n+    xmlns:gs="http://namespaces.zope.org/genericsetup"\n+    i18n_domain="plone"\n+    >\n \n   <include package="plone.supermodel" />\n   <include file="handlers.zcml" />\n \n   <!-- export/import steps -->\n   <gs:importStep\n+      name="plone.app.registry"\n+      title="Configuration Registry (Plone)"\n       description="Import into plone.app.registry records/settings, the central configuration key-value store, from registry.xml or a registry folder."\n       handler=".handler.importRegistry"\n-      name="plone.app.registry"\n-      title="Configuration Registry (Plone)">\n+      >\n     <depends name="componentregistry" />\n     <depends name="toolset" />\n-    <depends name="typeinfo"/>\n+    <depends name="typeinfo" />\n   </gs:importStep>\n \n   <gs:exportStep\n-      description="Export plone.app.registry, the central configuration key-value store, into a XML file."\n-      handler=".handler.exportRegistry"\n       name="plone.app.registry"\n       title="Configuration Registry (Plone)"\n-  />\n+      description="Export plone.app.registry, the central configuration key-value store, into a XML file."\n+      handler=".handler.exportRegistry"\n+      />\n \n </configure>\ndiff --git a/plone/app/registry/exportimport/handler.py b/plone/app/registry/exportimport/handler.py\nindex 16ccb98..81b0ea7 100644\n--- a/plone/app/registry/exportimport/handler.py\n+++ b/plone/app/registry/exportimport/handler.py\n@@ -58,7 +58,6 @@ def shouldPurgeList(value_node, key):\n \n \n def importRegistry(context):\n-\n     logger = context.getLogger("plone.app.registry")\n     registry = queryUtility(IRegistry)\n \n@@ -81,7 +80,6 @@ def importRegistry(context):\n \n \n def exportRegistry(context):\n-\n     logger = context.getLogger("plone.app.registry")\n     registry = queryUtility(IRegistry)\n \n@@ -187,7 +185,7 @@ def importRecord(self, node):\n                 field = None\n             except KeyError:\n                 self.logger.warning(\n-                    "Interface {} specified for record %s has "\n+                    "Interface {} specified for record {} has "\n                     "no field {}.".format(interfaceName, name, fieldName)\n                 )\n                 interface = None\n@@ -283,7 +281,6 @@ def importRecord(self, node):\n                 existing_record.field = field\n             existing_value = existing_record.value\n             if change_field or value != existing_value:\n-\n                 if not value_purge and type(value) == type(existing_value):\n                     if isinstance(value, list):\n                         value = existing_value + [\n@@ -304,7 +301,7 @@ def importRecord(self, node):\n                     elif isinstance(value, dict):\n                         for key, value in value.items():\n                             # check if value is list, if so, let\'s add\n-                            # instead of overridding\n+                            # instead of overriding\n                             if (\n                                 type(value) == list\n                                 and key in existing_value\n@@ -327,7 +324,6 @@ def importRecord(self, node):\n             self.context.records[name] = Record(field, value)\n \n     def importRecords(self, node):\n-\n         # May raise ImportError if interface can\'t be found or KeyError if\n         # attribute is missing.\n \n@@ -402,7 +398,6 @@ def importRecords(self, node):\n \n \n class RegistryExporter:\n-\n     LOGGER_ID = "plone.app.registry"\n \n     def __init__(self, context, environ):\n@@ -420,7 +415,6 @@ def exportDocument(self):\n         return prettyXML(root)\n \n     def exportRecord(self, record):\n-\n         node = etree.Element("record")\n         node.attrib["name"] = record.__name__\n \ndiff --git a/plone/app/registry/exportimport/handlers.zcml b/plone/app/registry/exportimport/handlers.zcml\nindex adf6c7e..3167b66 100644\n--- a/plone/app/registry/exportimport/handlers.zcml\n+++ b/plone/app/registry/exportimport/handlers.zcml\n@@ -1,75 +1,99 @@\n <configure\n+    xmlns="http://namespaces.zope.org/zope"\n     i18n_domain="plone"\n-    xmlns="http://namespaces.zope.org/zope">\n+    >\n   <include package="plone.supermodel" />\n   <!-- plone.supermodel field handlers -->\n   <utility\n+      name="plone.registry.field.Bytes"\n       component=".fields.BytesHandler"\n-      name="plone.registry.field.Bytes" />\n+      />\n   <utility\n+      name="plone.registry.field.BytesLine"\n       component=".fields.BytesLineHandler"\n-      name="plone.registry.field.BytesLine" />\n+      />\n   <utility\n+      name="plone.registry.field.ASCII"\n       component=".fields.ASCIIHandler"\n-      name="plone.registry.field.ASCII" />\n+      />\n   <utility\n+      name="plone.registry.field.ASCIILine"\n       component=".fields.ASCIILineHandler"\n-      name="plone.registry.field.ASCIILine" />\n+      />\n   <utility\n+      name="plone.registry.field.Text"\n       component=".fields.TextHandler"\n-      name="plone.registry.field.Text" />\n+      />\n   <utility\n+      name="plone.registry.field.TextLine"\n       component=".fields.TextLineHandler"\n-      name="plone.registry.field.TextLine" />\n+      />\n   <utility\n+      name="plone.registry.field.Bool"\n       component=".fields.BoolHandler"\n-      name="plone.registry.field.Bool" />\n+      />\n   <utility\n+      name="plone.registry.field.Int"\n       component=".fields.IntHandler"\n-      name="plone.registry.field.Int" />\n+      />\n   <utility\n+      name="plone.registry.field.Float"\n       component=".fields.FloatHandler"\n-      name="plone.registry.field.Float" />\n+      />\n   <utility\n+      name="plone.registry.field.Tuple"\n       component=".fields.TupleHandler"\n-      name="plone.registry.field.Tuple" />\n+      />\n   <utility\n+      name="plone.registry.field.List"\n       component=".fields.ListHandler"\n-      name="plone.registry.field.List" />\n+      />\n   <utility\n+      name="plone.registry.field.Set"\n       component=".fields.SetHandler"\n-      name="plone.registry.field.Set" />\n+      />\n   <utility\n+      name="plone.registry.field.FrozenSet"\n       component=".fields.FrozenSetHandler"\n-      name="plone.registry.field.FrozenSet" />\n+      />\n   <utility\n+      name="plone.registry.field.Password"\n       component=".fields.PasswordHandler"\n-      name="plone.registry.field.Password" />\n+      />\n   <utility\n+      name="plone.registry.field.Dict"\n       component=".fields.DictHandler"\n-      name="plone.registry.field.Dict" />\n+      />\n   <utility\n+      name="plone.registry.field.Datetime"\n       component=".fields.DatetimeHandler"\n-      name="plone.registry.field.Datetime" />\n+      />\n   <utility\n+      name="plone.registry.field.Date"\n       component=".fields.DateHandler"\n-      name="plone.registry.field.Date" />\n+      />\n   <utility\n+      name="plone.registry.field.SourceText"\n       component=".fields.SourceTextHandler"\n-      name="plone.registry.field.SourceText" />\n+      />\n   <utility\n+      name="plone.registry.field.URI"\n       component=".fields.URIHandler"\n-      name="plone.registry.field.URI" />\n+      />\n   <utility\n+      name="plone.registry.field.Id"\n       component=".fields.IdHandler"\n-      name="plone.registry.field.Id" />\n+      />\n   <utility\n+      name="plone.registry.field.DottedName"\n       component=".fields.DottedNameHandler"\n-      name="plone.registry.field.DottedName" />\n+      />\n   <utility\n+      name="plone.registry.field.Choice"\n       component=".fields.ChoiceHandler"\n-      name="plone.registry.field.Choice" />\n+      />\n   <utility\n+      name="plone.registry.field.JSONField"\n       component=".fields.JSONFieldHandler"\n-      name="plone.registry.field.JSONField" />\n+      />\n </configure>\ndiff --git a/plone/app/registry/profiles/default/componentregistry.xml b/plone/app/registry/profiles/default/componentregistry.xml\nindex ba3d806..9272f35 100644\n--- a/plone/app/registry/profiles/default/componentregistry.xml\n+++ b/plone/app/registry/profiles/default/componentregistry.xml\n@@ -1,10 +1,9 @@\n-<?xml version="1.0"?>\n+<?xml version="1.0" encoding="utf-8"?>\n <componentregistry>\n-    <adapters/>\n-    <utilities>\n-        <utility\n-            interface="plone.registry.interfaces.IRegistry"\n-            object="portal_registry"\n-            />\n-    </utilities>\n-</componentregistry>\n\\ No newline at end of file\n+  <adapters />\n+  <utilities>\n+    <utility interface="plone.registry.interfaces.IRegistry"\n+             object="portal_registry"\n+    />\n+  </utilities>\n+</componentregistry>\ndiff --git a/plone/app/registry/profiles/default/controlpanel.xml b/plone/app/registry/profiles/default/controlpanel.xml\nindex 30d5f57..f9aeda4 100644\n--- a/plone/app/registry/profiles/default/controlpanel.xml\n+++ b/plone/app/registry/profiles/default/controlpanel.xml\n@@ -1,11 +1,18 @@\n-<?xml version="1.0"?>\n-<object name="portal_controlpanel"\n-    xmlns:i18n="http://xml.zope.org/namespaces/i18n" i18n:domain="plone">\n- <configlet title="Configuration Registry" action_id="plone.app.registry"\n-    appId="plone.app.registry" category="plone-advanced" condition_expr=""\n-    url_expr="string:${portal_url}/portal_registry"\n-    icon_expr="string:gear"\n-    visible="True" i18n:attributes="title">\n-  <permission>Manage portal</permission>\n- </configlet>\n+<?xml version="1.0" encoding="utf-8"?>\n+<object xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+        name="portal_controlpanel"\n+        i18n:domain="plone"\n+>\n+  <configlet action_id="plone.app.registry"\n+             appId="plone.app.registry"\n+             category="plone-advanced"\n+             condition_expr=""\n+             icon_expr="string:gear"\n+             title="Configuration Registry"\n+             url_expr="string:${portal_url}/portal_registry"\n+             visible="True"\n+             i18n:attributes="title"\n+  >\n+    <permission>Manage portal</permission>\n+  </configlet>\n </object>\ndiff --git a/plone/app/registry/profiles/default/metadata.xml b/plone/app/registry/profiles/default/metadata.xml\nindex 6ebaf4c..588bfee 100644\n--- a/plone/app/registry/profiles/default/metadata.xml\n+++ b/plone/app/registry/profiles/default/metadata.xml\n@@ -1,7 +1,7 @@\n-<?xml version="1.0"?>\n+<?xml version="1.0" encoding="utf-8"?>\n <metadata>\n-    <version>1.0a1</version>\n-    <dependencies>\n-        <dependency>profile-plone.app.z3cform:default</dependency>\n-    </dependencies>\n-</metadata>\n\\ No newline at end of file\n+  <version>1.0a1</version>\n+  <dependencies>\n+    <dependency>profile-plone.app.z3cform:default</dependency>\n+  </dependencies>\n+</metadata>\ndiff --git a/plone/app/registry/profiles/default/toolset.xml b/plone/app/registry/profiles/default/toolset.xml\nindex c51a091..e7531f6 100644\n--- a/plone/app/registry/profiles/default/toolset.xml\n+++ b/plone/app/registry/profiles/default/toolset.xml\n@@ -1,7 +1,6 @@\n-<?xml version="1.0"?>\n+<?xml version="1.0" encoding="utf-8"?>\n <tool-setup>\n-    <required\n-        tool_id="portal_registry"\n-        class="plone.app.registry.registry.Registry"\n-        />\n+  <required class="plone.app.registry.registry.Registry"\n+            tool_id="portal_registry"\n+  />\n </tool-setup>\ndiff --git a/plone/app/registry/testing.py b/plone/app/registry/testing.py\nindex c7dc054..b8ac652 100644\n--- a/plone/app/registry/testing.py\n+++ b/plone/app/registry/testing.py\n@@ -6,7 +6,6 @@\n \n \n class PloneAppRegistry(PloneSandboxLayer):\n-\n     defaultBases = (PLONE_FIXTURE,)\n \n     def setUpZope(self, app, configurationContext):\ndiff --git a/plone/app/registry/tests/data.py b/plone/app/registry/tests/data.py\nindex b99c40f..73337bc 100644\n--- a/plone/app/registry/tests/data.py\n+++ b/plone/app/registry/tests/data.py\n@@ -3,13 +3,11 @@\n \n \n class ITestSettings(Interface):\n-\n     name = schema.TextLine(title="Name", default="Mr. Registry")\n     age = schema.Int(title="Age", min=0)\n \n \n class ITestSettingsDisallowed(Interface):\n-\n     name = schema.TextLine(title="Name", default="Mr. Registry")\n     age = schema.Int(title="Age", min=0)\n     blob = schema.Object(title="Blob", schema=Interface)\ndiff --git a/plone/app/registry/tests/test_controlpanel.py b/plone/app/registry/tests/test_controlpanel.py\nindex 11efeb5..30b86b4 100644\n--- a/plone/app/registry/tests/test_controlpanel.py\n+++ b/plone/app/registry/tests/test_controlpanel.py\n@@ -10,7 +10,6 @@\n \n \n class TestRegistryBaseControlpanel(unittest.TestCase):\n-\n     layer = PLONE_APP_REGISTRY_INTEGRATION_TESTING\n \n     def test_registry_base_controlpanel__control_panel_url(self):\n@@ -24,7 +23,6 @@ def test_registry_base_controlpanel__control_panel_url(self):\n \n \n class TestRecordsControlPanel(unittest.TestCase):\n-\n     layer = PLONE_APP_REGISTRY_INTEGRATION_TESTING\n \n     def setUp(self):\ndiff --git a/plone/app/registry/tests/test_exportimport.py b/plone/app/registry/tests/test_exportimport.py\nindex 99ac764..8bf17d3 100644\n--- a/plone/app/registry/tests/test_exportimport.py\n+++ b/plone/app/registry/tests/test_exportimport.py\n@@ -35,7 +35,6 @@\n \n \n class DummyImportContext(BaseDummyImportContext):\n-\n     _directories = {}\n \n     def listDirectory(self, path):\n@@ -46,7 +45,6 @@ def isDirectory(self, path):\n \n \n class ExportImportTest(unittest.TestCase):\n-\n     layer = zca.UNIT_TESTING\n \n     def setUp(self):\n@@ -71,7 +69,6 @@ def tearDown(self):\n             pass\n \n     def assertXmlEquals(self, expected, actual):\n-\n         expected_tree = etree.XML(expected)\n         actual_tree = etree.XML(actual)\n \n@@ -86,12 +83,11 @@ def assertXmlEquals(self, expected, actual):\n             print(prettyXML(actual_tree))\n             print()\n \n-            raise AssertionError("XML mis-match")\n+            raise AssertionError("XML mismatch")\n \n \n class TestImport(ExportImportTest):\n     def test_empty_import_no_purge(self):\n-\n         xml = "<registry/>"\n         context = DummyImportContext(self.site, purge=False)\n         context._files = {"registry.xml": xml}\n@@ -105,7 +101,6 @@ def test_empty_import_no_purge(self):\n         self.assertEqual(1, len(self.registry.records))\n \n     def test_import_purge(self):\n-\n         xml = "<registry/>"\n         context = DummyImportContext(self.site, purge=True)\n         context._files = {"registry.xml": xml}\n@@ -335,7 +330,7 @@ def test_import_records_with_values(self):\n     def test_import_records_nonexistant_interface(self):\n         xml = """\\\n <registry>\n-    <records interface="non.existant.ISchema" />\n+    <records interface="non.existent.ISchema" />\n </registry>\n """\n         context = DummyImportContext(self.site, purge=False)\n@@ -343,10 +338,10 @@ def test_import_records_nonexistant_interface(self):\n \n         self.assertRaises(ImportError, importRegistry, context)\n \n-    def test_import_records_nonexistant_interface_condition_not_installed(self):  # noqa\n+    def test_import_records_nonexistant_interface_condition_not_installed(self):\n         xml = """\\\n <registry>\n-    <records interface="non.existant.ISchema"\n+    <records interface="non.existent.ISchema"\n              condition="not-installed non" />\n </registry>\n """\n@@ -468,13 +463,11 @@ def test_import_interface_and_value(self):\n             "Age",\n             self.registry.records[\n                 "plone.app.registry.tests.data.ITestSettingsDisallowed.age"\n-            ].field.title,  # noqa\n+            ].field.title,\n         )\n         self.assertEqual(\n             2,\n-            self.registry[\n-                "plone.app.registry.tests.data.ITestSettingsDisallowed.age"\n-            ],  # noqa\n+            self.registry["plone.app.registry.tests.data.ITestSettingsDisallowed.age"],\n         )\n \n     def test_import_interface_with_differnet_name(self):\n@@ -512,13 +505,11 @@ def test_import_interface_no_value(self):\n             "Name",\n             self.registry.records[\n                 "plone.app.registry.tests.data.ITestSettingsDisallowed.name"\n-            ].field.title,  # noqa\n+            ].field.title,\n         )\n         self.assertEqual(\n             "Mr. Registry",\n-            self.registry[\n-                "plone.app.registry.tests.data.ITestSettingsDisallowed.name"\n-            ],  # noqa\n+            self.registry["plone.app.registry.tests.data.ITestSettingsDisallowed.name"],\n         )\n \n     def test_import_field_only(self):\n@@ -582,9 +573,7 @@ def test_import_field_ref(self):\n         )\n         self.assertEqual(\n             "value",\n-            self.registry.records[\n-                "test.registry.field.override"\n-            ].field.__name__,  # noqa\n+            self.registry.records["test.registry.field.override"].field.__name__,\n         )\n         self.assertEqual("Another value", self.registry["test.registry.field.override"])\n \n@@ -1027,7 +1016,7 @@ def test_import_choice_field(self):\n             [\n                 t.value\n                 for t in self.registry.records["test.registry.field"].field.vocabulary\n-            ],  # noqa\n+            ],\n         )\n         self.assertEqual(None, self.registry["test.registry.field"])\n \n@@ -1259,7 +1248,6 @@ def test_import_jsonfield_with_value(self):\n \n class TestExport(ExportImportTest):\n     def test_export_empty(self):\n-\n         xml = """<registry />"""\n         context = DummyExportContext(self.site)\n         exportRegistry(context)\n@@ -1268,7 +1256,6 @@ def test_export_empty(self):\n         self.assertXmlEquals(xml, context._wrote[0][1])\n \n     def test_export_simple(self):\n-\n         xml = """\\\n <registry>\n   <record name="test.export.simple">\n@@ -1331,7 +1318,6 @@ def test_export_with_interface(self):\n         self.assertXmlEquals(xml, context._wrote[0][1])\n \n     def test_export_field_ref(self):\n-\n         xml = """\\\n <registry>\n   <record name="test.export.simple">\n@@ -1363,7 +1349,6 @@ def test_export_field_ref(self):\n         self.assertXmlEquals(xml, context._wrote[0][1])\n \n     def test_export_with_collection(self):\n-\n         xml = """\\\n <registry>\n   <record name="test.export.simple">\n@@ -1390,7 +1375,6 @@ def test_export_with_collection(self):\n         self.assertXmlEquals(xml, context._wrote[0][1])\n \n     def test_export_with_dict(self):\n-\n         xml = """\\\n <registry>\n   <record name="test.export.dict">\n@@ -1427,7 +1411,6 @@ def test_export_with_dict(self):\n         self.assertXmlEquals(xml, context._wrote[0][1])\n \n     def test_export_with_choice(self):\n-\n         xml = """\\\n <registry>\n   <record name="test.export.choice">\n@@ -1450,10 +1433,9 @@ def test_export_with_choice(self):\n         self.assertXmlEquals(xml, context._wrote[0][1])\n \n     def test_export_with_missing_schema_does_not_error(self):\n-\n         xml = """\\\n <registry>\n-  <record name="test.export.simple" interface="non.existant.ISchema" field="blah">\n+  <record name="test.export.simple" interface="non.existent.ISchema" field="blah">\n     <field type="plone.registry.field.TextLine">\n       <default>N/A</default>\n       <title>Simple record</title>\n@@ -1470,7 +1452,7 @@ def test_export_with_missing_schema_does_not_error(self):\n         # Note: These are nominally read-only!\n         self.registry.records[\n             "test.export.simple"\n-        ].field.interfaceName = "non.existant.ISchema"  # noqa\n+        ].field.interfaceName = "non.existent.ISchema"\n         self.registry.records["test.export.simple"].field.fieldName = "blah"\n \n         alsoProvides(self.registry.records["test.export.simple"], IInterfaceAwareRecord)\n@@ -1482,7 +1464,6 @@ def test_export_with_missing_schema_does_not_error(self):\n         self.assertXmlEquals(xml, context._wrote[0][1])\n \n     def test_export_with_jsonfield(self):\n-\n         xml = """\\\n <registry>\n   <record name="test.export.field">\ndiff --git a/plone/app/registry/tests/test_setup.py b/plone/app/registry/tests/test_setup.py\nindex 41af7b7..b34fc46 100644\n--- a/plone/app/registry/tests/test_setup.py\n+++ b/plone/app/registry/tests/test_setup.py\n@@ -7,11 +7,9 @@\n \n \n class TestSetup(unittest.TestCase):\n-\n     layer = PLONE_APP_REGISTRY_INTEGRATION_TESTING\n \n     def test_tool_installed(self):\n-\n         portal = self.layer["portal"]\n \n         self.assertIn("portal_registry", portal.objectIds())\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 05b615d..9eb73f3 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,3 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [tool.towncrier]\n filename = "CHANGES.rst"\n directory = "news/"\n@@ -18,3 +20,43 @@ showcontent = true\n directory = "bugfix"\n name = "Bug fixes:"\n showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "internal"\n+name = "Internal:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "documentation"\n+name = "Documentation:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "tests"\n+name = "Tests"\n+showcontent = true\n+\n+[tool.isort]\n+profile = "plone"\n+\n+[tool.black]\n+target-version = ["py38"]\n+\n+[tool.dependencychecker]\n+Zope = [\n+  # Zope own provided namespaces\n+  \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n+  \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n+  \'Zope2\', \'webdav\', \'zmi\',\n+  # Zope dependencies\n+  \'Acquisition\', \'DateTime\', \'transaction\', \'zExceptions\', \'ZODB\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.deferredimport\', \'zope.event\',\n+  \'zope.exceptions\', \'zope.globalrequest\', \'zope.i18n\', \'zope.i18nmessageid\',\n+  \'zope.interface\', \'zope.lifecycleevent\', \'zope.location\', \'zope.publisher\',\n+  \'zope.schema\', \'zope.security\', \'zope.site\', \'zope.traversing\', \'AccessControl\',\n+]\n+\'plone.base\' = [\n+  \'AccessControl\', \'Products.BTreeFolder2\', \'Products.CMFCore\',\n+  \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n+]\n+python-dateutil = [\'dateutil\']\ndiff --git a/setup.cfg b/setup.cfg\nindex 3e076fd..0da8f8f 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -1,9 +1,23 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [bdist_wheel]\n universal = 0\n \n-[isort]\n-# black compatible Plone isort rules:\n-profile = black\n-force_alphabetical_sort = True\n-force_single_line = True\n-lines_after_imports = 2\n+[flake8]\n+doctests = 1\n+ignore =\n+    # black takes care of line length\n+    E501,\n+    # black takes care of where to break lines\n+    W503,\n+    # black takes care of spaces within slicing (list[:])\n+    E203,\n+    # black takes care of spaces after commas\n+    E231,\n+\n+[check-manifest]\n+ignore =\n+    .editorconfig\n+    .meta.toml\n+    .pre-commit-config.yaml\n+    tox.ini\ndiff --git a/setup.py b/setup.py\nindex f0ef456..2f74ad1 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -45,10 +45,15 @@\n         "plone.supermodel>=1.1",\n         "Products.statusmessages",\n         "setuptools",\n+        "Products.GenericSetup",\n+        "plone.z3cform",\n+        "z3c.form",\n+        "zope.dottedname",\n     ],\n     extras_require={\n         "test": [\n             "plone.app.testing",\n+            "plone.testing",\n         ]\n     },\n     entry_points="""\ndiff --git a/tox.ini b/tox.ini\nnew file mode 100644\nindex 0000000..d2d712b\n--- /dev/null\n+++ b/tox.ini\n@@ -0,0 +1,53 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[tox]\n+# We need 4.4.0 for constrain_package_deps.\n+min_version = 4.4.0\n+envlist =\n+    format\n+    lint\n+    test\n+\n+[testenv]\n+allowlist_externals =\n+    sh\n+\n+[testenv:format]\n+description = automatically reformat code\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a pyupgrade\n+    pre-commit run -a isort\n+    pre-commit run -a black\n+\n+[testenv:lint]\n+description = run linters that will help improve the code style\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a\n+\n+[testenv:dependencies]\n+description = check if the package defines all its dependencies and generate a graph out of them\n+deps =\n+    z3c.dependencychecker==2.11\n+    pipdeptree==2.5.1\n+    graphviz  # optional dependency of pipdeptree\n+commands =\n+    dependencychecker\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+\n+[testenv:test]\n+usedevelop = true\n+constrain_package_deps = true\n+set_env = ROBOT_BROWSER=headlesschrome\n+deps =\n+    zope.testrunner\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    zope-testrunner --all --test-path={toxinidir} -s plone.app.registry {posargs}\n+extras =\n+    test\n'

