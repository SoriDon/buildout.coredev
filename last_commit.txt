Repository: plone.restapi


Branch: refs/heads/master
Date: 2018-09-05T15:11:14+02:00
Author: Sune Broendum Woeller (sunew) <sune@woeller.dk>
Commit: https://github.com/plone/plone.restapi/commit/076b46587ecf9f740cfeaee9cc0ce95f3e459cbe

expand the search documentation with more code examples

Files changed:
A src/plone/restapi/tests/http-examples/search_fullobjects.req
A src/plone/restapi/tests/http-examples/search_fullobjects.resp
A src/plone/restapi/tests/http-examples/search_metadata_fields.req
A src/plone/restapi/tests/http-examples/search_metadata_fields.resp
A src/plone/restapi/tests/http-examples/search_options.req
A src/plone/restapi/tests/http-examples/search_options.resp
M docs/source/searching.rst
M src/plone/restapi/tests/test_documentation.py

b'diff --git a/docs/source/searching.rst b/docs/source/searching.rst\nindex e832f630..bc88a42a 100644\n--- a/docs/source/searching.rst\n+++ b/docs/source/searching.rst\n@@ -61,9 +61,11 @@ For example, to specify the ``depth`` query option for a path query, the origina\n \n This dictionary will need to be flattened in dotted notation in order to pass it in a query string:\n \n-.. code-block:: http\n+..  http:example:: curl httpie python-requests\n+    :request: ../../src/plone/restapi/tests/http-examples/search_options.req\n \n-    GET /plone/@search?path.query=%2Ffolder&path.depth=2 HTTP/1.1\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/search_options.resp\n+   :language: http\n \n Again, this is very similar to how `Record Arguments <http://docs.zope.org/zope2/zdgbook/ObjectPublishing.html?highlight=record#record-arguments>`_ are parsed by ZPublisher, except that you can omit the ``:record`` suffix.\n \n@@ -95,10 +97,11 @@ Retrieving additional metadata\n By default the results are represented as summaries that only contain the most basic information about the items, like their URL and title.\n If you need to retrieve additional metadata columns, you can do so by specifying the additional column names in the ``metadata_fields`` parameter:\n \n-.. code-block:: http\n+..  http:example:: curl httpie python-requests\n+    :request: ../../src/plone/restapi/tests/http-examples/search_metadata_fields.req\n \n-    GET /plone/@search?SearchableText=lorem&metadata_fields=modified HTTP/1.1\n-    Accept: application/json\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/search_metadata_fields.resp\n+   :language: http\n \n The metadata from those columns then will be included in the results.\n In order to specify multiple columns, simply repeat the query string parameter once for every column name (the ``requests`` module will do this automatically for you if you pass it a list of values for a query string parameter).\n@@ -113,10 +116,11 @@ If the data provided as metadata is not enough, you can retrieve search results\n \n You do so by specifying the ``fullobjects`` parameter:\n \n-.. code-block:: http\n+..  http:example:: curl httpie python-requests\n+    :request: ../../src/plone/restapi/tests/http-examples/search_fullobjects.req\n \n-    GET /plone/@search?fullobjects&SearchableText=lorem HTTP/1.1\n-    Accept: application/json\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/search_fullobjects.resp\n+   :language: http\n \n .. warning::\n \ndiff --git a/src/plone/restapi/tests/http-examples/search_fullobjects.req b/src/plone/restapi/tests/http-examples/search_fullobjects.req\nnew file mode 100644\nindex 00000000..3596b2de\n--- /dev/null\n+++ b/src/plone/restapi/tests/http-examples/search_fullobjects.req\n@@ -0,0 +1,3 @@\n+GET /plone/@search?fullobjects=1&SearchableText=lorem HTTP/1.1\n+Accept: application/json\n+Authorization: Basic YWRtaW46c2VjcmV0\ndiff --git a/src/plone/restapi/tests/http-examples/search_fullobjects.resp b/src/plone/restapi/tests/http-examples/search_fullobjects.resp\nnew file mode 100644\nindex 00000000..aff87ad6\n--- /dev/null\n+++ b/src/plone/restapi/tests/http-examples/search_fullobjects.resp\n@@ -0,0 +1,59 @@\n+HTTP/1.1 200 OK\n+Content-Type: application/json\n+\n+{\n+  "@id": "http://localhost:55001/plone/@search?fullobjects=1&SearchableText=lorem", \n+  "items": [\n+    {\n+      "@components": {\n+        "actions": {\n+          "@id": "http://localhost:55001/plone/doc1/@actions"\n+        }, \n+        "breadcrumbs": {\n+          "@id": "http://localhost:55001/plone/doc1/@breadcrumbs"\n+        }, \n+        "navigation": {\n+          "@id": "http://localhost:55001/plone/doc1/@navigation"\n+        }, \n+        "workflow": {\n+          "@id": "http://localhost:55001/plone/doc1/@workflow"\n+        }\n+      }, \n+      "@id": "http://localhost:55001/plone/doc1", \n+      "@type": "Document", \n+      "UID": "SomeUUID000000000000000000000002", \n+      "allow_discussion": false, \n+      "changeNote": "", \n+      "contributors": [], \n+      "created": "2016-10-21T19:00:00+00:00", \n+      "creators": [\n+        "test_user_1_"\n+      ], \n+      "description": "", \n+      "effective": null, \n+      "exclude_from_nav": false, \n+      "expires": null, \n+      "id": "doc1", \n+      "is_folderish": false, \n+      "language": "", \n+      "layout": "document_view", \n+      "modified": "2016-10-21T19:00:00+00:00", \n+      "parent": {\n+        "@id": "http://localhost:55001/plone", \n+        "@type": "Plone Site", \n+        "description": "", \n+        "title": "Plone site"\n+      }, \n+      "relatedItems": [], \n+      "review_state": "private", \n+      "rights": "", \n+      "subjects": [], \n+      "table_of_contents": null, \n+      "text": null, \n+      "title": "Lorem Ipsum", \n+      "version": "current", \n+      "versioning_enabled": true\n+    }\n+  ], \n+  "items_total": 1\n+}\n\\ No newline at end of file\ndiff --git a/src/plone/restapi/tests/http-examples/search_metadata_fields.req b/src/plone/restapi/tests/http-examples/search_metadata_fields.req\nnew file mode 100644\nindex 00000000..591f5c19\n--- /dev/null\n+++ b/src/plone/restapi/tests/http-examples/search_metadata_fields.req\n@@ -0,0 +1,3 @@\n+GET /plone/@search?metadata_fields=modified&metadata_fields=created&SearchableText=lorem HTTP/1.1\n+Accept: application/json\n+Authorization: Basic YWRtaW46c2VjcmV0\ndiff --git a/src/plone/restapi/tests/http-examples/search_metadata_fields.resp b/src/plone/restapi/tests/http-examples/search_metadata_fields.resp\nnew file mode 100644\nindex 00000000..5d72f0c2\n--- /dev/null\n+++ b/src/plone/restapi/tests/http-examples/search_metadata_fields.resp\n@@ -0,0 +1,18 @@\n+HTTP/1.1 200 OK\n+Content-Type: application/json\n+\n+{\n+  "@id": "http://localhost:55001/plone/@search?metadata_fields=modified&metadata_fields=created&SearchableText=lorem", \n+  "items": [\n+    {\n+      "@id": "http://localhost:55001/plone/doc1", \n+      "@type": "Document", \n+      "created": "2016-10-21T19:00:00+00:00", \n+      "description": "", \n+      "modified": "2016-10-21T19:00:00+00:00", \n+      "review_state": "private", \n+      "title": "Lorem Ipsum"\n+    }\n+  ], \n+  "items_total": 1\n+}\n\\ No newline at end of file\ndiff --git a/src/plone/restapi/tests/http-examples/search_options.req b/src/plone/restapi/tests/http-examples/search_options.req\nnew file mode 100644\nindex 00000000..53e86241\n--- /dev/null\n+++ b/src/plone/restapi/tests/http-examples/search_options.req\n@@ -0,0 +1,3 @@\n+GET /plone/@search?path.query=%2Fplone%2Ffolder1&sort_on=path&path.depth=1 HTTP/1.1\n+Accept: application/json\n+Authorization: Basic YWRtaW46c2VjcmV0\ndiff --git a/src/plone/restapi/tests/http-examples/search_options.resp b/src/plone/restapi/tests/http-examples/search_options.resp\nnew file mode 100644\nindex 00000000..70aab34a\n--- /dev/null\n+++ b/src/plone/restapi/tests/http-examples/search_options.resp\n@@ -0,0 +1,16 @@\n+HTTP/1.1 200 OK\n+Content-Type: application/json\n+\n+{\n+  "@id": "http://localhost:55001/plone/@search?path.query=%2Fplone%2Ffolder1&path.depth=1", \n+  "items": [\n+    {\n+      "@id": "http://localhost:55001/plone/folder1/folder2", \n+      "@type": "Folder", \n+      "description": "", \n+      "review_state": "private", \n+      "title": "Folder 2"\n+    }\n+  ], \n+  "items_total": 1\n+}\n\\ No newline at end of file\ndiff --git a/src/plone/restapi/tests/test_documentation.py b/src/plone/restapi/tests/test_documentation.py\nindex 9f6973cc..bc58bb6b 100644\n--- a/src/plone/restapi/tests/test_documentation.py\n+++ b/src/plone/restapi/tests/test_documentation.py\n@@ -405,6 +405,51 @@ def test_documentation_search(self):\n         response = self.api_session.get(\'/@search\', params=query)\n         save_request_and_response_for_docs(\'search\', response)\n \n+    def test_documentation_search_options(self):\n+        self.portal.invokeFactory(\n+            \'Folder\',\n+            id=\'folder1\',\n+            title=\'Folder 1\'\n+        )\n+        self.portal.folder1.invokeFactory(\n+            \'Folder\',\n+            id=\'folder2\',\n+            title=\'Folder 2\'\n+        )\n+        import transaction\n+        transaction.commit()\n+        query = {\'sort_on\': \'path\',\n+                 \'path.query\': \'/plone/folder1\',\n+                 \'path.depth\': \'1\'}\n+        response = self.api_session.get(\'/@search\', params=query)\n+        save_request_and_response_for_docs(\'search_options\', response)\n+\n+    def test_documentation_search_metadata_fields(self):\n+        self.portal.invokeFactory(\n+            \'Document\',\n+            id=\'doc1\',\n+            title=\'Lorem Ipsum\'\n+        )\n+        import transaction\n+        transaction.commit()\n+        query = {\'SearchableText\': \'lorem\',\n+                 \'metadata_fields\': [\'modified\', \'created\']}\n+        response = self.api_session.get(\'/@search\', params=query)\n+        save_request_and_response_for_docs(\'search_metadata_fields\', response)\n+\n+    def test_documentation_search_fullobjects(self):\n+        self.portal.invokeFactory(\n+            \'Document\',\n+            id=\'doc1\',\n+            title=\'Lorem Ipsum\'\n+        )\n+        import transaction\n+        transaction.commit()\n+        query = {\'SearchableText\': \'lorem\',\n+                 \'fullobjects\': 1}\n+        response = self.api_session.get(\'/@search\', params=query)\n+        save_request_and_response_for_docs(\'search_fullobjects\', response)\n+\n     def test_documentation_workflow(self):\n         response = self.api_session.get(\n             \'{}/@workflow\'.format(self.document.absolute_url()))\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2018-09-05T21:36:33+02:00
Author: Timo Stollenwerk (tisto) <tisto@users.noreply.github.com>
Commit: https://github.com/plone/plone.restapi/commit/0952713b934828d01af5c366ab41cff6a3795b3b

Merge pull request #613 from plone/expand_search_docs

expand the search documentation with more code examples

Files changed:
A src/plone/restapi/tests/http-examples/search_fullobjects.req
A src/plone/restapi/tests/http-examples/search_fullobjects.resp
A src/plone/restapi/tests/http-examples/search_metadata_fields.req
A src/plone/restapi/tests/http-examples/search_metadata_fields.resp
A src/plone/restapi/tests/http-examples/search_options.req
A src/plone/restapi/tests/http-examples/search_options.resp
M docs/source/searching.rst
M src/plone/restapi/tests/test_documentation.py

b'diff --git a/docs/source/searching.rst b/docs/source/searching.rst\nindex e832f630..bc88a42a 100644\n--- a/docs/source/searching.rst\n+++ b/docs/source/searching.rst\n@@ -61,9 +61,11 @@ For example, to specify the ``depth`` query option for a path query, the origina\n \n This dictionary will need to be flattened in dotted notation in order to pass it in a query string:\n \n-.. code-block:: http\n+..  http:example:: curl httpie python-requests\n+    :request: ../../src/plone/restapi/tests/http-examples/search_options.req\n \n-    GET /plone/@search?path.query=%2Ffolder&path.depth=2 HTTP/1.1\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/search_options.resp\n+   :language: http\n \n Again, this is very similar to how `Record Arguments <http://docs.zope.org/zope2/zdgbook/ObjectPublishing.html?highlight=record#record-arguments>`_ are parsed by ZPublisher, except that you can omit the ``:record`` suffix.\n \n@@ -95,10 +97,11 @@ Retrieving additional metadata\n By default the results are represented as summaries that only contain the most basic information about the items, like their URL and title.\n If you need to retrieve additional metadata columns, you can do so by specifying the additional column names in the ``metadata_fields`` parameter:\n \n-.. code-block:: http\n+..  http:example:: curl httpie python-requests\n+    :request: ../../src/plone/restapi/tests/http-examples/search_metadata_fields.req\n \n-    GET /plone/@search?SearchableText=lorem&metadata_fields=modified HTTP/1.1\n-    Accept: application/json\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/search_metadata_fields.resp\n+   :language: http\n \n The metadata from those columns then will be included in the results.\n In order to specify multiple columns, simply repeat the query string parameter once for every column name (the ``requests`` module will do this automatically for you if you pass it a list of values for a query string parameter).\n@@ -113,10 +116,11 @@ If the data provided as metadata is not enough, you can retrieve search results\n \n You do so by specifying the ``fullobjects`` parameter:\n \n-.. code-block:: http\n+..  http:example:: curl httpie python-requests\n+    :request: ../../src/plone/restapi/tests/http-examples/search_fullobjects.req\n \n-    GET /plone/@search?fullobjects&SearchableText=lorem HTTP/1.1\n-    Accept: application/json\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/search_fullobjects.resp\n+   :language: http\n \n .. warning::\n \ndiff --git a/src/plone/restapi/tests/http-examples/search_fullobjects.req b/src/plone/restapi/tests/http-examples/search_fullobjects.req\nnew file mode 100644\nindex 00000000..3596b2de\n--- /dev/null\n+++ b/src/plone/restapi/tests/http-examples/search_fullobjects.req\n@@ -0,0 +1,3 @@\n+GET /plone/@search?fullobjects=1&SearchableText=lorem HTTP/1.1\n+Accept: application/json\n+Authorization: Basic YWRtaW46c2VjcmV0\ndiff --git a/src/plone/restapi/tests/http-examples/search_fullobjects.resp b/src/plone/restapi/tests/http-examples/search_fullobjects.resp\nnew file mode 100644\nindex 00000000..aff87ad6\n--- /dev/null\n+++ b/src/plone/restapi/tests/http-examples/search_fullobjects.resp\n@@ -0,0 +1,59 @@\n+HTTP/1.1 200 OK\n+Content-Type: application/json\n+\n+{\n+  "@id": "http://localhost:55001/plone/@search?fullobjects=1&SearchableText=lorem", \n+  "items": [\n+    {\n+      "@components": {\n+        "actions": {\n+          "@id": "http://localhost:55001/plone/doc1/@actions"\n+        }, \n+        "breadcrumbs": {\n+          "@id": "http://localhost:55001/plone/doc1/@breadcrumbs"\n+        }, \n+        "navigation": {\n+          "@id": "http://localhost:55001/plone/doc1/@navigation"\n+        }, \n+        "workflow": {\n+          "@id": "http://localhost:55001/plone/doc1/@workflow"\n+        }\n+      }, \n+      "@id": "http://localhost:55001/plone/doc1", \n+      "@type": "Document", \n+      "UID": "SomeUUID000000000000000000000002", \n+      "allow_discussion": false, \n+      "changeNote": "", \n+      "contributors": [], \n+      "created": "2016-10-21T19:00:00+00:00", \n+      "creators": [\n+        "test_user_1_"\n+      ], \n+      "description": "", \n+      "effective": null, \n+      "exclude_from_nav": false, \n+      "expires": null, \n+      "id": "doc1", \n+      "is_folderish": false, \n+      "language": "", \n+      "layout": "document_view", \n+      "modified": "2016-10-21T19:00:00+00:00", \n+      "parent": {\n+        "@id": "http://localhost:55001/plone", \n+        "@type": "Plone Site", \n+        "description": "", \n+        "title": "Plone site"\n+      }, \n+      "relatedItems": [], \n+      "review_state": "private", \n+      "rights": "", \n+      "subjects": [], \n+      "table_of_contents": null, \n+      "text": null, \n+      "title": "Lorem Ipsum", \n+      "version": "current", \n+      "versioning_enabled": true\n+    }\n+  ], \n+  "items_total": 1\n+}\n\\ No newline at end of file\ndiff --git a/src/plone/restapi/tests/http-examples/search_metadata_fields.req b/src/plone/restapi/tests/http-examples/search_metadata_fields.req\nnew file mode 100644\nindex 00000000..591f5c19\n--- /dev/null\n+++ b/src/plone/restapi/tests/http-examples/search_metadata_fields.req\n@@ -0,0 +1,3 @@\n+GET /plone/@search?metadata_fields=modified&metadata_fields=created&SearchableText=lorem HTTP/1.1\n+Accept: application/json\n+Authorization: Basic YWRtaW46c2VjcmV0\ndiff --git a/src/plone/restapi/tests/http-examples/search_metadata_fields.resp b/src/plone/restapi/tests/http-examples/search_metadata_fields.resp\nnew file mode 100644\nindex 00000000..5d72f0c2\n--- /dev/null\n+++ b/src/plone/restapi/tests/http-examples/search_metadata_fields.resp\n@@ -0,0 +1,18 @@\n+HTTP/1.1 200 OK\n+Content-Type: application/json\n+\n+{\n+  "@id": "http://localhost:55001/plone/@search?metadata_fields=modified&metadata_fields=created&SearchableText=lorem", \n+  "items": [\n+    {\n+      "@id": "http://localhost:55001/plone/doc1", \n+      "@type": "Document", \n+      "created": "2016-10-21T19:00:00+00:00", \n+      "description": "", \n+      "modified": "2016-10-21T19:00:00+00:00", \n+      "review_state": "private", \n+      "title": "Lorem Ipsum"\n+    }\n+  ], \n+  "items_total": 1\n+}\n\\ No newline at end of file\ndiff --git a/src/plone/restapi/tests/http-examples/search_options.req b/src/plone/restapi/tests/http-examples/search_options.req\nnew file mode 100644\nindex 00000000..53e86241\n--- /dev/null\n+++ b/src/plone/restapi/tests/http-examples/search_options.req\n@@ -0,0 +1,3 @@\n+GET /plone/@search?path.query=%2Fplone%2Ffolder1&sort_on=path&path.depth=1 HTTP/1.1\n+Accept: application/json\n+Authorization: Basic YWRtaW46c2VjcmV0\ndiff --git a/src/plone/restapi/tests/http-examples/search_options.resp b/src/plone/restapi/tests/http-examples/search_options.resp\nnew file mode 100644\nindex 00000000..70aab34a\n--- /dev/null\n+++ b/src/plone/restapi/tests/http-examples/search_options.resp\n@@ -0,0 +1,16 @@\n+HTTP/1.1 200 OK\n+Content-Type: application/json\n+\n+{\n+  "@id": "http://localhost:55001/plone/@search?path.query=%2Fplone%2Ffolder1&path.depth=1", \n+  "items": [\n+    {\n+      "@id": "http://localhost:55001/plone/folder1/folder2", \n+      "@type": "Folder", \n+      "description": "", \n+      "review_state": "private", \n+      "title": "Folder 2"\n+    }\n+  ], \n+  "items_total": 1\n+}\n\\ No newline at end of file\ndiff --git a/src/plone/restapi/tests/test_documentation.py b/src/plone/restapi/tests/test_documentation.py\nindex 9f6973cc..bc58bb6b 100644\n--- a/src/plone/restapi/tests/test_documentation.py\n+++ b/src/plone/restapi/tests/test_documentation.py\n@@ -405,6 +405,51 @@ def test_documentation_search(self):\n         response = self.api_session.get(\'/@search\', params=query)\n         save_request_and_response_for_docs(\'search\', response)\n \n+    def test_documentation_search_options(self):\n+        self.portal.invokeFactory(\n+            \'Folder\',\n+            id=\'folder1\',\n+            title=\'Folder 1\'\n+        )\n+        self.portal.folder1.invokeFactory(\n+            \'Folder\',\n+            id=\'folder2\',\n+            title=\'Folder 2\'\n+        )\n+        import transaction\n+        transaction.commit()\n+        query = {\'sort_on\': \'path\',\n+                 \'path.query\': \'/plone/folder1\',\n+                 \'path.depth\': \'1\'}\n+        response = self.api_session.get(\'/@search\', params=query)\n+        save_request_and_response_for_docs(\'search_options\', response)\n+\n+    def test_documentation_search_metadata_fields(self):\n+        self.portal.invokeFactory(\n+            \'Document\',\n+            id=\'doc1\',\n+            title=\'Lorem Ipsum\'\n+        )\n+        import transaction\n+        transaction.commit()\n+        query = {\'SearchableText\': \'lorem\',\n+                 \'metadata_fields\': [\'modified\', \'created\']}\n+        response = self.api_session.get(\'/@search\', params=query)\n+        save_request_and_response_for_docs(\'search_metadata_fields\', response)\n+\n+    def test_documentation_search_fullobjects(self):\n+        self.portal.invokeFactory(\n+            \'Document\',\n+            id=\'doc1\',\n+            title=\'Lorem Ipsum\'\n+        )\n+        import transaction\n+        transaction.commit()\n+        query = {\'SearchableText\': \'lorem\',\n+                 \'fullobjects\': 1}\n+        response = self.api_session.get(\'/@search\', params=query)\n+        save_request_and_response_for_docs(\'search_fullobjects\', response)\n+\n     def test_documentation_workflow(self):\n         response = self.api_session.get(\n             \'{}/@workflow\'.format(self.document.absolute_url()))\n'

