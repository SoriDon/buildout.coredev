Repository: plone.restapi


Branch: refs/heads/master
Date: 2021-07-16T14:45:27+02:00
Author: Víctor Fernández de Alba (sneridagh) <sneridagh@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/ef0b98d789282545b72fb402b458cb70c11ad510

Wrong deserialization if the path does not exist but is matched via a… (#1177)

* Wrong deserialization if the path does not exist but is matched via acquisition

* Fix test in case of sufixes present

Files changed:
A news/1176.bugfix
M src/plone/restapi/deserializer/blocks.py
M src/plone/restapi/tests/test_blocks_deserializer.py

b'diff --git a/news/1176.bugfix b/news/1176.bugfix\nnew file mode 100644\nindex 000000000..400cec59f\n--- /dev/null\n+++ b/news/1176.bugfix\n@@ -0,0 +1,2 @@\n+Wrong deserialization if the path does not exist but is matched via acquisition\n+[sneridagh]\ndiff --git a/src/plone/restapi/deserializer/blocks.py b/src/plone/restapi/deserializer/blocks.py\nindex 9123575df..45310a26b 100644\n--- a/src/plone/restapi/deserializer/blocks.py\n+++ b/src/plone/restapi/deserializer/blocks.py\n@@ -59,6 +59,9 @@ def path2uid(context, link):\n     while not IUUIDAware.providedBy(obj):\n         obj = aq_parent(obj)\n         suffix += "/" + segments.pop()\n+    # check if obj is wrong because of acquisition\n+    if "/".join(obj.getPhysicalPath()) != "/".join(segments):\n+        return link\n     href = relative_up * "../" + "resolveuid/" + IUUID(obj)\n     if suffix:\n         href += suffix\ndiff --git a/src/plone/restapi/tests/test_blocks_deserializer.py b/src/plone/restapi/tests/test_blocks_deserializer.py\nindex f92e6c7c0..9264b04c9 100644\n--- a/src/plone/restapi/tests/test_blocks_deserializer.py\n+++ b/src/plone/restapi/tests/test_blocks_deserializer.py\n@@ -382,3 +382,38 @@ def test_slate_simple_link_deserializer(self):\n         value = res.blocks["abc"]["value"]\n         link = value[0]["children"][1]["data"]["url"]\n         self.assertTrue(link.startswith("../resolveuid/"))\n+\n+    def test_aquisition_messing_with_link_deserializer(self):\n+        self.portal.invokeFactory(\n+            "Folder",\n+            id="aktuelles",\n+        )\n+        self.portal["aktuelles"].invokeFactory(\n+            "Document",\n+            id="meldungen",\n+        )\n+        self.portal.invokeFactory(\n+            "Folder",\n+            id="institut",\n+        )\n+\n+        wrong_uid = IUUID(self.portal["aktuelles"]["meldungen"])\n+\n+        self.deserialize(\n+            blocks={\n+                "123": {\n+                    "@type": "foo",\n+                    "href": [\n+                        {\n+                            # Pointing to a not created yet object, but matches because acquisition\n+                            # with another existing parent content with alike-ish path structure\n+                            "@id": f"{self.portal.absolute_url()}/institut/aktuelles/meldungen"\n+                        }\n+                    ],\n+                }\n+            }\n+        )\n+        self.assertNotEqual(\n+            self.portal.doc1.blocks["123"]["href"][0]["@id"],\n+            f"../resolveuid/{wrong_uid}",\n+        )\n'

