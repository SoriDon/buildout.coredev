Repository: plone.restapi


Branch: refs/heads/master
Date: 2023-05-03T16:13:54-07:00
Author: 1letter (1letter) <1letter@gmx.de>
Commit: https://github.com/plone/plone.restapi/commit/2822641f9e4af6d4f7064858b8dbdd5795353ca3

Fix for #1628 (#1631)

* Fix #1628

- unset the get paramter in Service QuerystringSearchGet
- rename test_querystringsearch_metadata_fields
- add test_querystringsearch_metadata_fields_get

* Add news

* FixCode Formatting
- Format with Black

Files changed:
A news/1628.bugfix
M src/plone/restapi/services/querystringsearch/get.py
M src/plone/restapi/tests/test_services_querystringsearch.py

b'diff --git a/news/1628.bugfix b/news/1628.bugfix\nnew file mode 100644\nindex 000000000..b441cef69\n--- /dev/null\n+++ b/news/1628.bugfix\n@@ -0,0 +1,2 @@\n+Fix missing metadata_fields in Response via GET Request to Endpoint /@querystring-search\n+[1letter]\ndiff --git a/src/plone/restapi/services/querystringsearch/get.py b/src/plone/restapi/services/querystringsearch/get.py\nindex 3683dbd16..e59c9b5c8 100644\n--- a/src/plone/restapi/services/querystringsearch/get.py\n+++ b/src/plone/restapi/services/querystringsearch/get.py\n@@ -81,7 +81,11 @@ class QuerystringSearchGet(Service):\n     def reply(self):\n         # We need to copy the JSON query parameters from the querystring\n         # into the request body, because that\'s where other code expects to find them\n-        self.request["BODY"] = parse.unquote(self.request.form.get("query", "{}"))\n+        self.request["BODY"] = parse.unquote(\n+            self.request.form.get("query", "{}")\n+        ).encode(self.request.charset)\n \n+        # unset the get parameters\n+        self.request.form = {}\n         querystring_search = QuerystringSearch(self.context, self.request)\n         return querystring_search()\ndiff --git a/src/plone/restapi/tests/test_services_querystringsearch.py b/src/plone/restapi/tests/test_services_querystringsearch.py\nindex b199fbc46..97199aeee 100644\n--- a/src/plone/restapi/tests/test_services_querystringsearch.py\n+++ b/src/plone/restapi/tests/test_services_querystringsearch.py\n@@ -89,7 +89,7 @@ def test_querystringsearch_fullobjects(self):\n         self.assertEqual(response.json()["items_total"], 1)\n         self.assertEqual(len(response.json()["items"]), 1)\n \n-    def test_querystringsearch_metadata_fields(self):\n+    def test_querystringsearch_metadata_fields_post(self):\n         response = self.api_session.post(\n             "/@querystring-search",\n             json={\n@@ -124,6 +124,24 @@ def test_querystringsearch_metadata_fields(self):\n \n         self.assertIn("effective", response.json()["items"][0])\n \n+    def test_querystringsearch_metadata_fields_get(self):\n+\n+        response = self.api_session.get(\n+            "/@querystring-search?query=%7B%22query%22%3A%20%5B%7B%22i%22%3A%20%22portal_type%22%2C%20%22o%22%3A%20%22plone.app.querystring.operation.selection.is%22%2C%20%22v%22%3A%20%5B%22Document%22%5D%7D%5D%7D"\n+        )\n+\n+        self.assertEqual(response.status_code, 200)\n+        self.assertIn("items", response.json())\n+        self.assertIn("items_total", response.json())\n+        self.assertNotIn("effective", response.json()["items"][0])\n+\n+        # request with metadata_fields\n+        response = self.api_session.get(\n+            "/@querystring-search?query=%7B%22query%22%3A%20%5B%7B%22i%22%3A%20%22portal_type%22%2C%20%22o%22%3A%20%22plone.app.querystring.operation.selection.is%22%2C%20%22v%22%3A%20%5B%22Document%22%5D%7D%5D%2C%20%22metadata_fields%22%3A%20%5B%22effective%22%5D%7D"\n+        )\n+\n+        self.assertIn("effective", response.json()["items"][0])\n+\n     def test_querystringsearch_complex(self):\n \n         for a in range(1, 10):\n'

