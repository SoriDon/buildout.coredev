Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-11-02T12:13:47-03:00
Author: Ã‰rico Andrei (ericof) <ericof@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/f344734b4807860998b6c44660d7567c6a01bdee

Add @upgrade service (#1529)

* Add @upgrade service

* Lint fixes

* Rename START_PROFILE to START_VERSION

* Add more information to the result of @upgrade POST

* Reorder keys in UpgradeSiteGet

* Add documentation about @upgrade endpoint

* Update docs/source/endpoints/upgrade.md

Co-authored-by: David Glick &lt;david@glicksoftware.com&gt;

* Update docs/source/endpoints/upgrade.md

Co-authored-by: David Glick &lt;david@glicksoftware.com&gt;

* Update docs/source/endpoints/upgrade.md

Co-authored-by: David Glick &lt;david@glicksoftware.com&gt;

* cmf.ManagePortal only available to Manager role

* Update docs/source/endpoints/upgrade.md

Co-authored-by: Steve Piercy &lt;web@stevepiercy.com&gt;

* Update docs/source/endpoints/upgrade.md

Co-authored-by: Steve Piercy &lt;web@stevepiercy.com&gt;

* Update docs/source/endpoints/upgrade.md

Co-authored-by: Steve Piercy &lt;web@stevepiercy.com&gt;

* Update news/1525.feature

Co-authored-by: Steve Piercy &lt;web@stevepiercy.com&gt;

* Documentation: Move http response to its own file

Co-authored-by: David Glick &lt;david@glicksoftware.com&gt;
Co-authored-by: Steve Piercy &lt;web@stevepiercy.com&gt;

Files changed:
A docs/source/endpoints/upgrade.md
A news/1525.feature
A src/plone/restapi/services/upgrade/__init__.py
A src/plone/restapi/services/upgrade/configure.zcml
A src/plone/restapi/services/upgrade/get.py
A src/plone/restapi/services/upgrade/post.py
A src/plone/restapi/tests/http-examples/upgrade_get.req
A src/plone/restapi/tests/http-examples/upgrade_get.resp
A src/plone/restapi/tests/http-examples/upgrade_post.req
A src/plone/restapi/tests/http-examples/upgrade_post.resp
A src/plone/restapi/tests/http-examples/upgrade_post_dry_run.req
A src/plone/restapi/tests/http-examples/upgrade_post_dry_run.resp
A src/plone/restapi/tests/test_services_upgrade.py
M docs/source/endpoints/index.md
M docs/source/endpoints/system.md
M src/plone/restapi/services/configure.zcml
M src/plone/restapi/services/system/get.py
M src/plone/restapi/tests/test_system.py

b'diff --git a/docs/source/endpoints/index.md b/docs/source/endpoints/index.md\nindex e3dbd57c4..82d2b0c35 100644\n--- a/docs/source/endpoints/index.md\n+++ b/docs/source/endpoints/index.md\n@@ -49,6 +49,7 @@ transactions\n translations\n tusupload\n types\n+upgrade\n users\n userschema\n vocabularies\ndiff --git a/docs/source/endpoints/system.md b/docs/source/endpoints/system.md\nindex 094883f55..94dd2e2f3 100644\n--- a/docs/source/endpoints/system.md\n+++ b/docs/source/endpoints/system.md\n@@ -35,6 +35,7 @@ Content-Type: application/json\n   "plone_gs_metadata_version_installed": "5208",\n   "plone_version": "5.2.1",\n   "python_version": "3.7.7 (default, Mar 10 2020, 15:43:33) \\n[Clang 11.0.0 (clang-1100.0.33.17)]",\n+  "upgrade": true,\n   "zope_version": "4.1.3"\n }\n ```\ndiff --git a/docs/source/endpoints/upgrade.md b/docs/source/endpoints/upgrade.md\nnew file mode 100644\nindex 000000000..95a117bdf\n--- /dev/null\n+++ b/docs/source/endpoints/upgrade.md\n@@ -0,0 +1,68 @@\n+---\n+myst:\n+  html_meta:\n+    "description": "The @upgrade endpoint exposes upgrade information about the Plone backend, and supports running the upgrade of the site."\n+    "property=og:description": "The @upgrade endpoint exposes upgrade information about the Plone backend, and supports running the upgrade of the site."\n+    "property=og:title": "Upgrade"\n+    "keywords": "Plone, plone.restapi, REST, API, Upgrade"\n+---\n+\n+(upgrade)=\n+\n+# Upgrade\n+\n+A Plone site needs to be in sync with the version available on the file system.\n+The `@upgrade` endpoint exposes upgrade information about the Plone backend, and supports running the upgrade of the site.\n+\n+```{note}\n+The upgrade endpoint is protected by the `cmf.ManagePortal` permission that requires the Manager role.\n+```\n+\n+## Get upgrade information\n+\n+Send a `GET` request to the `@upgrade` endpoint:\n+\n+```{eval-rst}\n+..  http:example:: curl httpie python-requests\n+    :request: ../../../src/plone/restapi/tests/http-examples/upgrade_get.req\n+```\n+\n+The response will contain information about available upgrade steps:\n+\n+```{literalinclude} ../../../src/plone/restapi/tests/http-examples/upgrade_get.resp\n+:language: http\n+```\n+\n+`fs` shows the current version of the `CMFPlone:default` profile on the filesystem.\n+`instance` shows the current version of the `CMFPlone:default` profile in the database.\n+\n+## Dry run the upgrade\n+\n+Send a `POST` request to the `@upgrade` endpoint passing the value of `dry_run` as `true`:\n+\n+```{eval-rst}\n+..  http:example:: curl httpie python-requests\n+    :request: ../../../src/plone/restapi/tests/http-examples/upgrade_post_dry_run.req\n+```\n+\n+A dry run runs the entire upgrade, but does not commit the result to the database.\n+The response will contain the result of the upgrade operation, indicating `dry_run` was selected:\n+\n+```{literalinclude} ../../../src/plone/restapi/tests/http-examples/upgrade_post_dry_run.resp\n+:language: http\n+```\n+\n+## Run upgrade\n+\n+Send a `POST` request to the `@upgrade` endpoint, with `dry_run` set to `false`:\n+\n+```{eval-rst}\n+..  http:example:: curl httpie python-requests\n+    :request: ../../../src/plone/restapi/tests/http-examples/upgrade_post.req\n+```\n+\n+The response will contain the result of the upgrade operation:\n+\n+```{literalinclude} ../../../src/plone/restapi/tests/http-examples/upgrade_post.resp\n+:language: http\n+```\ndiff --git a/news/1525.feature b/news/1525.feature\nnew file mode 100644\nindex 000000000..295493afc\n--- /dev/null\n+++ b/news/1525.feature\n@@ -0,0 +1 @@\n+Add @upgrade endpoint to preview or run an upgrade of a Plone instance\n\\ No newline at end of file\ndiff --git a/src/plone/restapi/services/configure.zcml b/src/plone/restapi/services/configure.zcml\nindex 5b362e852..0af1402ec 100644\n--- a/src/plone/restapi/services/configure.zcml\n+++ b/src/plone/restapi/services/configure.zcml\n@@ -37,6 +37,7 @@\n   <include package=".sources" />\n   <include package=".transactions" />\n   <include package=".types" />\n+  <include package=".upgrade" />\n   <include package=".users" />\n   <include package=".userschema" />\n   <include package=".vocabularies" />\ndiff --git a/src/plone/restapi/services/system/get.py b/src/plone/restapi/services/system/get.py\nindex 1a19462e0..9732d648b 100644\n--- a/src/plone/restapi/services/system/get.py\n+++ b/src/plone/restapi/services/system/get.py\n@@ -14,6 +14,8 @@ class SystemGet(Service):\n     def reply(self):\n         overview_control_panel = OverviewControlPanel(self.context, self.request)\n         core_versions = overview_control_panel.core_versions()\n+        gs_fs = core_versions.get("Plone File System")\n+        gs_instance = core_versions.get("Plone Instance")\n         return {\n             "@id": f"{self.context.absolute_url()}/@system",\n             "zope_version": core_versions.get("Zope"),\n@@ -23,8 +25,7 @@ def reply(self):\n             "cmf_version": core_versions.get("CMF"),\n             "pil_version": core_versions.get("PIL"),\n             "debug_mode": core_versions.get("Debug mode"),\n-            "plone_gs_metadata_version_installed": core_versions.get("Plone Instance"),\n-            "plone_gs_metadata_version_file_system": core_versions.get(\n-                "Plone File System"\n-            ),\n+            "plone_gs_metadata_version_installed": gs_instance,\n+            "plone_gs_metadata_version_file_system": gs_fs,\n+            "upgrade": gs_fs != gs_instance,\n         }\ndiff --git a/src/plone/restapi/services/upgrade/__init__.py b/src/plone/restapi/services/upgrade/__init__.py\nnew file mode 100644\nindex 000000000..e69de29bb\ndiff --git a/src/plone/restapi/services/upgrade/configure.zcml b/src/plone/restapi/services/upgrade/configure.zcml\nnew file mode 100644\nindex 000000000..5079d7fed\n--- /dev/null\n+++ b/src/plone/restapi/services/upgrade/configure.zcml\n@@ -0,0 +1,22 @@\n+<configure\n+    xmlns="http://namespaces.zope.org/zope"\n+    xmlns:plone="http://namespaces.plone.org/plone"\n+    >\n+\n+  <plone:service\n+      method="GET"\n+      factory=".get.UpgradeSiteGet"\n+      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      permission="cmf.ManagePortal"\n+      name="@upgrade"\n+      />\n+\n+  <plone:service\n+      method="POST"\n+      factory=".post.UpgradeSitePost"\n+      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      permission="cmf.ManagePortal"\n+      name="@upgrade"\n+      />\n+\n+</configure>\ndiff --git a/src/plone/restapi/services/upgrade/get.py b/src/plone/restapi/services/upgrade/get.py\nnew file mode 100644\nindex 000000000..41128a3a4\n--- /dev/null\n+++ b/src/plone/restapi/services/upgrade/get.py\n@@ -0,0 +1,27 @@\n+from plone.restapi.services import Service\n+from Products.CMFPlone.browser.admin import Upgrade\n+\n+\n+def format_steps(upgrades):\n+    steps = {}\n+    for group in upgrades:\n+        key = f"{group[0][\'ssource\']}-{group[0][\'sdest\']}"\n+        steps[key] = []\n+        for info in group:\n+            steps[key].append({"id": info["id"], "title": info["title"]})\n+    return steps\n+\n+\n+class UpgradeSiteGet(Service):\n+    def reply(self):\n+        view = Upgrade(self.context, self.request)\n+        versions = view.versions()\n+        upgrade_steps = format_steps(view.upgrades())\n+        return {\n+            "@id": f"{self.context.absolute_url()}/@upgrade",\n+            "upgrade_steps": upgrade_steps,\n+            "versions": {\n+                "instance": versions["instance"],\n+                "fs": versions["fs"],\n+            },\n+        }\ndiff --git a/src/plone/restapi/services/upgrade/post.py b/src/plone/restapi/services/upgrade/post.py\nnew file mode 100644\nindex 000000000..0152380cf\n--- /dev/null\n+++ b/src/plone/restapi/services/upgrade/post.py\n@@ -0,0 +1,32 @@\n+from plone.restapi.services import Service\n+from plone.restapi.deserializer import json_body\n+from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone.browser.admin import Upgrade\n+from zope.interface import alsoProvides\n+\n+import plone\n+\n+\n+class UpgradeSitePost(Service):\n+    def reply(self):\n+        # Disable CSRF protection\n+        if "IDisableCSRFProtection" in dir(plone.protect.interfaces):\n+            alsoProvides(self.request, plone.protect.interfaces.IDisableCSRFProtection)\n+        data = json_body(self.request)\n+        dry_run = data.get("dry_run", False)\n+        pm = getToolByName(self.context, "portal_migration")\n+        report = pm.upgrade(REQUEST=self.request, dry_run=dry_run)\n+        view = Upgrade(self.context, self.request)\n+        versions = view.versions()\n+        gs_fs = versions["fs"]\n+        gs_instance = versions["instance"]\n+        return {\n+            "@id": f"{self.context.absolute_url()}/@upgrade",\n+            "report": report,\n+            "versions": {\n+                "instance": gs_instance,\n+                "fs": gs_fs,\n+            },\n+            "dry_run": dry_run,\n+            "upgraded": gs_instance == gs_fs,\n+        }\ndiff --git a/src/plone/restapi/tests/http-examples/upgrade_get.req b/src/plone/restapi/tests/http-examples/upgrade_get.req\nnew file mode 100644\nindex 000000000..2a16a364b\n--- /dev/null\n+++ b/src/plone/restapi/tests/http-examples/upgrade_get.req\n@@ -0,0 +1,3 @@\n+GET /plone/@upgrade HTTP/1.1\n+Accept: application/json\n+Authorization: Basic YWRtaW46Y29ycmVjdCBob3JzZSBiYXR0ZXJ5IHN0YXBsZQ==\ndiff --git a/src/plone/restapi/tests/http-examples/upgrade_get.resp b/src/plone/restapi/tests/http-examples/upgrade_get.resp\nnew file mode 100644\nindex 000000000..4349a783a\n--- /dev/null\n+++ b/src/plone/restapi/tests/http-examples/upgrade_get.resp\n@@ -0,0 +1,36 @@\n+HTTP/1.1 200 OK\n+Content-Type: application/json\n+\n+{\n+  "@id": "http://localhost:55001/plone/@upgrade",\n+  "upgrade_steps": {\n+    "6006-6007": [\n+      {\n+        "id": "cb3b910894ab80c94b6367b39bc93039",\n+        "title": "Run to6007 upgrade profile."\n+      },\n+      {\n+        "id": "bb72e6a5b0c9c6131b1efad155868131",\n+        "title": "Add a timezone property to portal memberdata if it is missing."\n+      },\n+      {\n+        "id": "62ef4eea9b3bfbd472cf349277de749b",\n+        "title": "Fix the portal action icons."\n+      },\n+      {\n+        "id": "bac1428c12e294517042a1cee5cfabdc",\n+        "title": "Rename the behavior collective.dexteritytextindexer to plone.textindexer"\n+      }\n+    ],\n+    "6007-6008": [\n+      {\n+        "id": "e5cad1e9fd65e8bd1b23519d49417e51",\n+        "title": "Update plonetheme.barceloneta registry"\n+      }\n+    ]\n+  },\n+  "versions": {\n+    "fs": "6008",\n+    "instance": "6006"\n+  }\n+}\n\\ No newline at end of file\ndiff --git a/src/plone/restapi/tests/http-examples/upgrade_post.req b/src/plone/restapi/tests/http-examples/upgrade_post.req\nnew file mode 100644\nindex 000000000..4b58b1e12\n--- /dev/null\n+++ b/src/plone/restapi/tests/http-examples/upgrade_post.req\n@@ -0,0 +1,8 @@\n+POST /plone/@upgrade HTTP/1.1\n+Accept: application/json\n+Authorization: Basic YWRtaW46Y29ycmVjdCBob3JzZSBiYXR0ZXJ5IHN0YXBsZQ==\n+Content-Type: application/json\n+\n+{\n+    "dry_run": false\n+}\ndiff --git a/src/plone/restapi/tests/http-examples/upgrade_post.resp b/src/plone/restapi/tests/http-examples/upgrade_post.resp\nnew file mode 100644\nindex 000000000..08a64e365\n--- /dev/null\n+++ b/src/plone/restapi/tests/http-examples/upgrade_post.resp\n@@ -0,0 +1,13 @@\n+HTTP/1.1 200 OK\n+Content-Type: application/json\n+\n+{\n+  "@id": "http://localhost:55001/plone/@upgrade",\n+  "dry_run": false,\n+  "report": "Starting the migration from version: 6006\\nRole / permission map imported.\\nActions tool imported.\\nRan upgrade step: Run to6007 upgrade profile.\\nRan upgrade step: Add a timezone property to portal memberdata if it is missing.\\nRan upgrade step: Fix the portal action icons.\\nRan upgrade step: Rename the behavior collective.dexteritytextindexer to plone.textindexer\\nRan upgrade step: Update plonetheme.barceloneta registry\\nEnd of upgrade path, main migration has finished.\\nStarting upgrade of core addons.\\nControl panel imported.\\nDone upgrading core addons.\\nYour Plone instance is now up-to-date.\\n",\n+  "upgraded": true,\n+  "versions": {\n+    "fs": "6008",\n+    "instance": "6008"\n+  }\n+}\ndiff --git a/src/plone/restapi/tests/http-examples/upgrade_post_dry_run.req b/src/plone/restapi/tests/http-examples/upgrade_post_dry_run.req\nnew file mode 100644\nindex 000000000..3d2e8827e\n--- /dev/null\n+++ b/src/plone/restapi/tests/http-examples/upgrade_post_dry_run.req\n@@ -0,0 +1,8 @@\n+POST /plone/@upgrade HTTP/1.1\n+Accept: application/json\n+Authorization: Basic YWRtaW46Y29ycmVjdCBob3JzZSBiYXR0ZXJ5IHN0YXBsZQ==\n+Content-Type: application/json\n+\n+{\n+    "dry_run": true\n+}\ndiff --git a/src/plone/restapi/tests/http-examples/upgrade_post_dry_run.resp b/src/plone/restapi/tests/http-examples/upgrade_post_dry_run.resp\nnew file mode 100644\nindex 000000000..099011c6e\n--- /dev/null\n+++ b/src/plone/restapi/tests/http-examples/upgrade_post_dry_run.resp\n@@ -0,0 +1,13 @@\n+HTTP/1.1 200 OK\n+Content-Type: application/json\n+\n+{\n+  "@id": "http://localhost:55001/plone/@upgrade",\n+  "dry_run": true,\n+  "report": "Dry run selected.\\nStarting the migration from version: 6006\\nRole / permission map imported.\\nActions tool imported.\\nRan upgrade step: Run to6007 upgrade profile.\\nRan upgrade step: Add a timezone property to portal memberdata if it is missing.\\nRan upgrade step: Fix the portal action icons.\\nRan upgrade step: Rename the behavior collective.dexteritytextindexer to plone.textindexer\\nRan upgrade step: Update plonetheme.barceloneta registry\\nEnd of upgrade path, main migration has finished.\\nStarting upgrade of core addons.\\nControl panel imported.\\nDone upgrading core addons.\\nYour Plone instance is now up-to-date.\\nDry run selected, transaction aborted\\n",\n+  "upgraded": false,\n+  "versions": {\n+    "fs": "6008",\n+    "instance": "6006"\n+  }\n+}\ndiff --git a/src/plone/restapi/tests/test_services_upgrade.py b/src/plone/restapi/tests/test_services_upgrade.py\nnew file mode 100644\nindex 000000000..9c1a2f938\n--- /dev/null\n+++ b/src/plone/restapi/tests/test_services_upgrade.py\n@@ -0,0 +1,76 @@\n+from plone.app.testing import SITE_OWNER_NAME\n+from plone.app.testing import SITE_OWNER_PASSWORD\n+from plone.restapi.testing import PLONE_RESTAPI_DX_FUNCTIONAL_TESTING\n+from plone.restapi.testing import RelativeSession\n+from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone.factory import _DEFAULT_PROFILE\n+\n+import transaction\n+import unittest\n+\n+\n+# Python 3 is only supported on 5.2+.\n+# This means you can not upgrade from 5.1 or earlier.\n+START_VERSION = "5200"\n+\n+\n+class TestUpgradeServiceFunctional(unittest.TestCase):\n+\n+    layer = PLONE_RESTAPI_DX_FUNCTIONAL_TESTING\n+\n+    def setUp(self):\n+        self.app = self.layer["app"]\n+        self.portal = self.layer["portal"]\n+        self.portal_url = self.portal.absolute_url()\n+        self.request = self.portal.REQUEST\n+        self.setup = getToolByName(self.portal, "portal_setup")\n+        self.setup.setLastVersionForProfile(_DEFAULT_PROFILE, START_VERSION)\n+        transaction.commit()\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n+        self.api_session.headers.update({"Accept": "application/json"})\n+        self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n+\n+    def tearDown(self):\n+        self.api_session.close()\n+\n+    def test_get_upgrade(self):\n+        response = self.api_session.get("/@upgrade")\n+\n+        self.assertEqual(response.status_code, 200)\n+        self.assertEqual(response.headers.get("Content-Type"), "application/json")\n+\n+        results = response.json()\n+        self.assertEqual(results["@id"], f"{self.portal.absolute_url()}/@upgrade")\n+        self.assertTrue("versions" in results.keys())\n+        self.assertEqual(results["versions"]["instance"], START_VERSION)\n+        self.assertNotEqual(results["versions"]["fs"], results["versions"]["instance"])\n+        self.assertTrue("upgrade_steps" in results.keys())\n+        self.assertGreater(len(results["upgrade_steps"]), 0)\n+\n+    def test_post_upgrade_dry_run(self):\n+        response = self.api_session.post("/@upgrade", json={"dry_run": True})\n+\n+        self.assertEqual(response.status_code, 200)\n+        self.assertEqual(response.headers.get("Content-Type"), "application/json")\n+\n+        results = response.json()\n+        self.assertEqual(results["@id"], f"{self.portal.absolute_url()}/@upgrade")\n+        self.assertTrue("report" in results.keys())\n+        self.assertTrue("versions" in results.keys())\n+        self.assertNotEqual(results["versions"]["fs"], results["versions"]["instance"])\n+        self.assertTrue(results["dry_run"])\n+        self.assertFalse(results["upgraded"])\n+\n+    def test_post_upgrade(self):\n+        response = self.api_session.post("/@upgrade", json={"dry_run": False})\n+\n+        self.assertEqual(response.status_code, 200)\n+        self.assertEqual(response.headers.get("Content-Type"), "application/json")\n+\n+        results = response.json()\n+        self.assertEqual(results["@id"], f"{self.portal.absolute_url()}/@upgrade")\n+        self.assertTrue("report" in results.keys())\n+        self.assertTrue("versions" in results.keys())\n+        self.assertEqual(results["versions"]["fs"], results["versions"]["instance"])\n+        self.assertFalse(results["dry_run"])\n+        self.assertTrue(results["upgraded"])\ndiff --git a/src/plone/restapi/tests/test_system.py b/src/plone/restapi/tests/test_system.py\nindex 2f7d686b9..6662621dd 100644\n--- a/src/plone/restapi/tests/test_system.py\n+++ b/src/plone/restapi/tests/test_system.py\n@@ -54,3 +54,4 @@ def test_get_system(self):\n         )\n         self.assertEqual(results["plone_version"], self.core_versions.get("Plone"))\n         self.assertEqual(results["zope_version"], self.core_versions.get("Zope"))\n+        self.assertFalse(results["upgrade"])\n'

