Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2021-10-27T09:49:38+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/9564831aee65b4b9b5dc4a9eabd80b7d8b7f99be

The Plone site root is now cataloged

Fixes #3314

Files changed:
A news/3314.bugfix
M Products/CMFPlone/CatalogTool.py
M Products/CMFPlone/Portal.py
M Products/CMFPlone/tests/testCatalogTool.py
M Products/CMFPlone/tests/testPortalCreation.py

b'diff --git a/Products/CMFPlone/CatalogTool.py b/Products/CMFPlone/CatalogTool.py\nindex 17c6001ec8..f63503281c 100644\n--- a/Products/CMFPlone/CatalogTool.py\n+++ b/Products/CMFPlone/CatalogTool.py\n@@ -488,6 +488,7 @@ def indexObject(obj, path):\n                     pass\n         self.manage_catalogClear()\n         portal = aq_parent(aq_inner(self))\n+        indexObject(portal, \'\')\n         portal.ZopeFindAndApply(\n             portal,\n             search_sub=True,\ndiff --git a/Products/CMFPlone/Portal.py b/Products/CMFPlone/Portal.py\nindex c477c3fcbe..0474b4f6ca 100644\n--- a/Products/CMFPlone/Portal.py\n+++ b/Products/CMFPlone/Portal.py\n@@ -222,19 +222,6 @@ def isEffective(self, date):\n         # Override DefaultDublinCoreImpl\'s test, since we are always viewable.\n         return 1\n \n-    # Ensure portals don\'t get cataloged.\n-    def indexObject(self):\n-        pass\n-\n-    def unindexObject(self):\n-        pass\n-\n-    def reindexObject(self, idxs=None):\n-        pass\n-\n-    def reindexObjectSecurity(self, skip_self=False):\n-        pass\n-\n \n # Remove the IContentish interface so we don\'t listen to events that won\'t\n # apply to the site root, ie handleUidAnnotationEvent\ndiff --git a/Products/CMFPlone/tests/testCatalogTool.py b/Products/CMFPlone/tests/testCatalogTool.py\nindex 2dd3fe05f2..50ab21231a 100644\n--- a/Products/CMFPlone/tests/testCatalogTool.py\n+++ b/Products/CMFPlone/tests/testCatalogTool.py\n@@ -31,7 +31,7 @@\n group2 = \'g2\'\n \n base_content = [\'Members\', \'aggregator\', \'aggregator\',\n-                \'events\', \'news\', TEST_USER_ID, \'doc\']\n+                \'events\', \'news\', \'plone\', TEST_USER_ID, \'doc\']\n \n \n class TestCatalogSetup(PloneTestCase):\ndiff --git a/Products/CMFPlone/tests/testPortalCreation.py b/Products/CMFPlone/tests/testPortalCreation.py\nindex 327f1f4bdd..8dcaea6be8 100644\n--- a/Products/CMFPlone/tests/testPortalCreation.py\n+++ b/Products/CMFPlone/tests/testPortalCreation.py\n@@ -86,6 +86,13 @@ def testWorkflowIsActionProvider(self):\n             \'portal_workflow\' in self.actions.listActionProviders()\n         )\n \n+    def testPortalIsIndexed(self):\n+        # The Plone site should be cataloged\n+        res = self.catalog(getId="plone")\n+        self.assertEqual(len(res), 1)\n+        self.assertEqual(res[0].getId, "plone")\n+        self.assertEqual(res[0].Title, "Welcome to Plone")\n+\n     def testMembersFolderMetaType(self):\n         # Members folder should have meta_type \'Dexterity Container\'\n         members = self.membership.getMembersFolder()\ndiff --git a/news/3314.bugfix b/news/3314.bugfix\nnew file mode 100644\nindex 0000000000..51014203e4\n--- /dev/null\n+++ b/news/3314.bugfix\n@@ -0,0 +1 @@\n+The Plone site root is cataloged\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2021-10-30T12:05:37+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/78cfeedf29d6a44bda76b853d511574c2367c437

Merge pull request #3343 from plone/portal-in-the-catalog

The Plone site root is in the catalog for Plone 6

Files changed:
A news/3314.bugfix
M Products/CMFPlone/CatalogTool.py
M Products/CMFPlone/Portal.py
M Products/CMFPlone/tests/testCatalogTool.py
M Products/CMFPlone/tests/testPortalCreation.py

b'diff --git a/Products/CMFPlone/CatalogTool.py b/Products/CMFPlone/CatalogTool.py\nindex 17c6001ec8..f63503281c 100644\n--- a/Products/CMFPlone/CatalogTool.py\n+++ b/Products/CMFPlone/CatalogTool.py\n@@ -488,6 +488,7 @@ def indexObject(obj, path):\n                     pass\n         self.manage_catalogClear()\n         portal = aq_parent(aq_inner(self))\n+        indexObject(portal, \'\')\n         portal.ZopeFindAndApply(\n             portal,\n             search_sub=True,\ndiff --git a/Products/CMFPlone/Portal.py b/Products/CMFPlone/Portal.py\nindex c477c3fcbe..0474b4f6ca 100644\n--- a/Products/CMFPlone/Portal.py\n+++ b/Products/CMFPlone/Portal.py\n@@ -222,19 +222,6 @@ def isEffective(self, date):\n         # Override DefaultDublinCoreImpl\'s test, since we are always viewable.\n         return 1\n \n-    # Ensure portals don\'t get cataloged.\n-    def indexObject(self):\n-        pass\n-\n-    def unindexObject(self):\n-        pass\n-\n-    def reindexObject(self, idxs=None):\n-        pass\n-\n-    def reindexObjectSecurity(self, skip_self=False):\n-        pass\n-\n \n # Remove the IContentish interface so we don\'t listen to events that won\'t\n # apply to the site root, ie handleUidAnnotationEvent\ndiff --git a/Products/CMFPlone/tests/testCatalogTool.py b/Products/CMFPlone/tests/testCatalogTool.py\nindex 2dd3fe05f2..50ab21231a 100644\n--- a/Products/CMFPlone/tests/testCatalogTool.py\n+++ b/Products/CMFPlone/tests/testCatalogTool.py\n@@ -31,7 +31,7 @@\n group2 = \'g2\'\n \n base_content = [\'Members\', \'aggregator\', \'aggregator\',\n-                \'events\', \'news\', TEST_USER_ID, \'doc\']\n+                \'events\', \'news\', \'plone\', TEST_USER_ID, \'doc\']\n \n \n class TestCatalogSetup(PloneTestCase):\ndiff --git a/Products/CMFPlone/tests/testPortalCreation.py b/Products/CMFPlone/tests/testPortalCreation.py\nindex 327f1f4bdd..8dcaea6be8 100644\n--- a/Products/CMFPlone/tests/testPortalCreation.py\n+++ b/Products/CMFPlone/tests/testPortalCreation.py\n@@ -86,6 +86,13 @@ def testWorkflowIsActionProvider(self):\n             \'portal_workflow\' in self.actions.listActionProviders()\n         )\n \n+    def testPortalIsIndexed(self):\n+        # The Plone site should be cataloged\n+        res = self.catalog(getId="plone")\n+        self.assertEqual(len(res), 1)\n+        self.assertEqual(res[0].getId, "plone")\n+        self.assertEqual(res[0].Title, "Welcome to Plone")\n+\n     def testMembersFolderMetaType(self):\n         # Members folder should have meta_type \'Dexterity Container\'\n         members = self.membership.getMembersFolder()\ndiff --git a/news/3314.bugfix b/news/3314.bugfix\nnew file mode 100644\nindex 0000000000..51014203e4\n--- /dev/null\n+++ b/news/3314.bugfix\n@@ -0,0 +1 @@\n+The Plone site root is cataloged\n'

