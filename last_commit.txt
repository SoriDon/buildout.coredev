Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2016-10-22T16:38:52-04:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/3fc7df6fcb876b7a9665357a623757fe7db7d719

Fix plone-legacy RequireJS errors in development mode
Reset and re-enable ``define`` and ``require`` for the ``plone-legacy`` bundle in development mode.
Fixes issues with legacy scripts having RequireJS integration in development mode.
In Production mode, resetting  and re-enabling is done in the compiled bundle.

Files changed:
M CHANGES.rst
M Products/CMFPlone/resources/browser/scripts.pt
M Products/CMFPlone/resources/browser/scripts.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 6f858f8..f12c5e7 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -58,6 +58,10 @@ Bug fixes:
 - Add utf8 headers to all Python source files. [jensens]
 
 - Add default icon for top-level contentview and contentmenu toolbar entries [alecm]
+- Reset and re-enable ``define`` and ``require`` for the ``plone-legacy`` bundle in development mode.
+  Fixes issues with legacy scripts having RequireJS integration in development mode.
+  In Production mode, resetting  and re-enabling is done in the compiled bundle.
+  [thet]
 
 - Apply security hotfix 20160830 for ``z3c.form`` widgets.  [maurits]
 
diff --git a/Products/CMFPlone/resources/browser/scripts.pt b/Products/CMFPlone/resources/browser/scripts.pt
index 73b8639..e9ad1bb 100644
--- a/Products/CMFPlone/resources/browser/scripts.pt
+++ b/Products/CMFPlone/resources/browser/scripts.pt
@@ -1,11 +1,21 @@
 <script type="text/javascript" tal:content="string:PORTAL_URL = '${view/base_url}';"></script>
-<tal:scripts repeat="script view/scripts"
-  ><tal:block define="condcomment script/conditionalcomment"
-    ><tal:wcondcomment tal:condition="condcomment">
-       <tal:opencc tal:replace="structure string:&lt;!--[if ${condcomment}]&gt;" />
-     </tal:wcondcomment
-        ><script type="text/javascript" tal:attributes="src script/src; data-bundle script/bundle"></script><tal:wcondcomment tal:condition="condcomment">
-       <tal:closecc tal:replace="structure string:&lt;![endif]--&gt;" />
-     </tal:wcondcomment
-    ></tal:block
-></tal:scripts>
+<tal:scripts repeat="script view/scripts"><tal:block define="condcomment script/conditionalcomment; resetrjs script/resetrjs|nothing"><tal:if condition="resetrjs">
+  <tal:openreset content='structure string:&lt;script type="text/javascript"&gt;'/>
+      /* reset requirejs definitions so that people who put requirejs in legacy compilation do not get errors */
+      var _old_define = define;
+      var _old_require = require;
+      define = undefined;
+      require = undefined;
+  <tal:endreset content='structure string:&lt;/script&gt;'/>
+</tal:if><tal:if condition="condcomment">
+    <tal:opencc tal:replace="structure string:&lt;!--[if ${condcomment}]&gt;" />
+</tal:if>
+  <script type="text/javascript" tal:attributes="src script/src; data-bundle script/bundle"></script>
+<tal:if condition="condcomment">
+  <tal:closecc tal:condition="condcomment" tal:replace="structure string:&lt;![endif]--&gt;" />
+</tal:if><tal:if condition="resetrjs">
+  <tal:openredefine content='structure string:&lt;script type="text/javascript"&gt;'/>
+      define = _old_define;
+      require = _old_require;
+  <tal:endredefine content='structure string:&lt;/script&gt;'/>
+</tal:if></tal:block></tal:scripts>
diff --git a/Products/CMFPlone/resources/browser/scripts.py b/Products/CMFPlone/resources/browser/scripts.py
index 36763c0..f49bcdf 100644
--- a/Products/CMFPlone/resources/browser/scripts.py
+++ b/Products/CMFPlone/resources/browser/scripts.py
@@ -14,6 +14,7 @@ class ScriptsView(ResourceView):
     def get_data(self, bundle, result):
         bundle_name = bundle.__prefix__.split('/', 1)[1].rstrip('.')
         if self.develop_bundle(bundle, 'develop_javascript'):
+            # Bundle development mode
             resources = self.get_resources()
             for resource in bundle.resources:
                 if resource in resources:
@@ -29,7 +30,12 @@ def get_data(self, bundle, result):
                         data = {
                             'bundle': bundle_name,
                             'conditionalcomment': bundle.conditionalcomment,  # noqa
-                            'src': src}
+                            'src': src,
+                            # Reset RequireJS if bundle is in non-compile to
+                            # avoid "Mismatched anonymous define()" in legacy
+                            # scripts.
+                            'resetrjs': bundle.compile is False
+                        }
                         result.append(data)
         else:
             if bundle.compile is False:


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2016-10-22T23:28:33-04:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/c533d3553b2711ae8c8957fd93bfc8a637383107

Merge pull request #1784 from plone/thet-fixdevlegacy

Fix plone-legacy RequireJS errors in development mode

Files changed:
M CHANGES.rst
M Products/CMFPlone/resources/browser/scripts.pt
M Products/CMFPlone/resources/browser/scripts.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 202c698..72ee76e 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -58,6 +58,10 @@ Bug fixes:
 - Add utf8 headers to all Python source files. [jensens]
 
 - Add default icon for top-level contentview and contentmenu toolbar entries [alecm]
+- Reset and re-enable ``define`` and ``require`` for the ``plone-legacy`` bundle in development mode.
+  Fixes issues with legacy scripts having RequireJS integration in development mode.
+  In Production mode, resetting  and re-enabling is done in the compiled bundle.
+  [thet]
 
 - Apply security hotfix 20160830 for ``z3c.form`` widgets.  [maurits]
 
diff --git a/Products/CMFPlone/resources/browser/scripts.pt b/Products/CMFPlone/resources/browser/scripts.pt
index 73b8639..e9ad1bb 100644
--- a/Products/CMFPlone/resources/browser/scripts.pt
+++ b/Products/CMFPlone/resources/browser/scripts.pt
@@ -1,11 +1,21 @@
 <script type="text/javascript" tal:content="string:PORTAL_URL = '${view/base_url}';"></script>
-<tal:scripts repeat="script view/scripts"
-  ><tal:block define="condcomment script/conditionalcomment"
-    ><tal:wcondcomment tal:condition="condcomment">
-       <tal:opencc tal:replace="structure string:&lt;!--[if ${condcomment}]&gt;" />
-     </tal:wcondcomment
-        ><script type="text/javascript" tal:attributes="src script/src; data-bundle script/bundle"></script><tal:wcondcomment tal:condition="condcomment">
-       <tal:closecc tal:replace="structure string:&lt;![endif]--&gt;" />
-     </tal:wcondcomment
-    ></tal:block
-></tal:scripts>
+<tal:scripts repeat="script view/scripts"><tal:block define="condcomment script/conditionalcomment; resetrjs script/resetrjs|nothing"><tal:if condition="resetrjs">
+  <tal:openreset content='structure string:&lt;script type="text/javascript"&gt;'/>
+      /* reset requirejs definitions so that people who put requirejs in legacy compilation do not get errors */
+      var _old_define = define;
+      var _old_require = require;
+      define = undefined;
+      require = undefined;
+  <tal:endreset content='structure string:&lt;/script&gt;'/>
+</tal:if><tal:if condition="condcomment">
+    <tal:opencc tal:replace="structure string:&lt;!--[if ${condcomment}]&gt;" />
+</tal:if>
+  <script type="text/javascript" tal:attributes="src script/src; data-bundle script/bundle"></script>
+<tal:if condition="condcomment">
+  <tal:closecc tal:condition="condcomment" tal:replace="structure string:&lt;![endif]--&gt;" />
+</tal:if><tal:if condition="resetrjs">
+  <tal:openredefine content='structure string:&lt;script type="text/javascript"&gt;'/>
+      define = _old_define;
+      require = _old_require;
+  <tal:endredefine content='structure string:&lt;/script&gt;'/>
+</tal:if></tal:block></tal:scripts>
diff --git a/Products/CMFPlone/resources/browser/scripts.py b/Products/CMFPlone/resources/browser/scripts.py
index 36763c0..f49bcdf 100644
--- a/Products/CMFPlone/resources/browser/scripts.py
+++ b/Products/CMFPlone/resources/browser/scripts.py
@@ -14,6 +14,7 @@ class ScriptsView(ResourceView):
     def get_data(self, bundle, result):
         bundle_name = bundle.__prefix__.split('/', 1)[1].rstrip('.')
         if self.develop_bundle(bundle, 'develop_javascript'):
+            # Bundle development mode
             resources = self.get_resources()
             for resource in bundle.resources:
                 if resource in resources:
@@ -29,7 +30,12 @@ def get_data(self, bundle, result):
                         data = {
                             'bundle': bundle_name,
                             'conditionalcomment': bundle.conditionalcomment,  # noqa
-                            'src': src}
+                            'src': src,
+                            # Reset RequireJS if bundle is in non-compile to
+                            # avoid "Mismatched anonymous define()" in legacy
+                            # scripts.
+                            'resetrjs': bundle.compile is False
+                        }
                         result.append(data)
         else:
             if bundle.compile is False:


