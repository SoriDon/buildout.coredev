Repository: plone.restapi


Branch: refs/heads/master
Date: 2018-06-26T10:31:30+02:00
Author: Thomas Buchberger (buchi) <t.buchberger@4teamwork.ch>
Commit: https://github.com/plone/plone.restapi/commit/1cdc9fdfaaacade89a4fc475ad9e49691de16613

Return member fields based on user schema

Files changed:
M CHANGES.rst
M src/plone/restapi/serializer/user.py
M src/plone/restapi/tests/test_serializer_user.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 5021cbf0..e4af11c3 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -39,6 +39,10 @@ New Features:\n   items and to set effective and expiration dates.\n   [buchi]\n \n+- Return member fields based on user schema in `@users` endpoint instead of a\n+  fixed list of member properties.\n+  [buchi]\n+\n Bugfixes:\n \n - Make sure DX DefaultFieldDeserializer validates field values.\ndiff --git a/src/plone/restapi/serializer/user.py b/src/plone/restapi/serializer/user.py\nindex 0bb67b67..0f153c8f 100644\n--- a/src/plone/restapi/serializer/user.py\n+++ b/src/plone/restapi/serializer/user.py\n@@ -2,10 +2,23 @@\n from plone.restapi.interfaces import ISerializeToJson\n from plone.restapi.interfaces import ISerializeToJsonSummary\n from Products.CMFCore.interfaces._tools import IMemberData\n+from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone.utils import safe_unicode\n from zope.component import adapter\n+from zope.component import getUtility\n from zope.component.hooks import getSite\n from zope.interface import implementer\n from zope.publisher.interfaces import IRequest\n+from zope.schema import getFieldNames\n+\n+try:\n+    # Plone 5\n+    from plone.app.users.browser.userdatapanel import getUserDataSchema\n+    HAS_TTW_SCHEMAS = True\n+except ImportError:\n+    # Plone 4.3\n+    from plone.app.users.userdataschema import IUserDataSchemaProvider\n+    HAS_TTW_SCHEMAS = False\n \n \n class BaseSerializer(object):\n@@ -24,21 +37,39 @@ def __call__(self):\n         # to logged-in or logged-out users. They should not be exposed here\n         roles = list(set(roles) - set([\'Anonymous\', \'Authenticated\', ]))\n \n-        return {\n-            \'@id\': \'{}/@users/{}\'.format(\n-                portal.absolute_url(),\n-                user.id\n-            ),\n+        data = {\n+            \'@id\': \'{}/@users/{}\'.format(portal.absolute_url(), user.id),\n             \'id\': user.id,\n-            \'email\': user.getProperty(\'email\'),\n             \'username\': user.getUserName(),\n-            \'fullname\': user.getProperty(\'fullname\'),\n-            \'home_page\': user.getProperty(\'home_page\'),\n-            \'description\': user.getProperty(\'description\'),\n-            \'location\': user.getProperty(\'location\'),\n             \'roles\': roles,\n         }\n \n+        if HAS_TTW_SCHEMAS:\n+            schema = getUserDataSchema()\n+        else:\n+            util = getUtility(IUserDataSchemaProvider)\n+            schema = util.getSchema()\n+\n+        for name in getFieldNames(schema):\n+            if name == \'portrait\':\n+                memberdata = getToolByName(portal, \'portal_memberdata\')\n+                if user.id in memberdata.portraits:\n+                    value = \'{}/portal_memberdata/portraits/{}\'.format(\n+                        portal.absolute_url(), user.id)\n+                else:\n+                    value = None\n+            elif name == \'pdelete\':\n+                continue\n+            else:\n+                value = user.getProperty(name, \'\')\n+                if value == \'\':\n+                    value = None\n+                if value:\n+                    value = safe_unicode(value)\n+            data[name] = value\n+\n+        return data\n+\n \n @implementer(ISerializeToJson)\n @adapter(IMemberData, IRequest)\ndiff --git a/src/plone/restapi/tests/test_serializer_user.py b/src/plone/restapi/tests/test_serializer_user.py\nindex cc4d6309..8f6dcd58 100644\n--- a/src/plone/restapi/tests/test_serializer_user.py\n+++ b/src/plone/restapi/tests/test_serializer_user.py\n@@ -1,5 +1,6 @@\n # -*- coding: utf-8 -*-\n from plone import api\n+from plone.app.users.browser.schemaeditor import applySchema\n from plone.restapi.interfaces import ISerializeToJson\n from plone.restapi.testing import PLONE_RESTAPI_DX_INTEGRATION_TESTING\n from zope.component import getMultiAdapter\n@@ -49,3 +50,31 @@ def test_serialize_roles(self):\n         self.assertIn(\'roles\', user)\n         self.assertNotIn(\'Authenticated\', user[\'roles\'])\n         self.assertNotIn(\'Anonymous\', user[\'roles\'])\n+\n+    def test_serialize_custom_member_schema(self):\n+        member_schema = """\n+            <model xmlns="http://namespaces.plone.org/supermodel/schema"\n+                xmlns:form="http://namespaces.plone.org/supermodel/form"\n+                xmlns:users="http://namespaces.plone.org/supermodel/users"\n+                xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+                i18n:domain="plone">\n+              <schema name="member-fields">\n+                <field name="twitter" type="zope.schema.TextLine"\n+                         users:forms="In User Profile">\n+                  <description i18n:translate="help_twitter">\n+                    Twitter account\n+                  </description>\n+                  <required>False</required>\n+                  <title i18n:translate="label_twitter">Twitter Account</title>\n+                </field>\n+              </schema>\n+            </model>\n+        """\n+        applySchema(member_schema)\n+        user = api.user.create(\n+            email=\'donald.duck@example.com\',\n+            username=\'donald\',\n+            properties={\'twitter\': \'TheRealDuck\'})\n+        res = self.serialize(user)\n+        self.assertIn(\'twitter\', res)\n+        self.assertEqual(res[\'twitter\'], \'TheRealDuck\')\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2018-06-26T10:31:30+02:00
Author: Thomas Buchberger (buchi) <t.buchberger@4teamwork.ch>
Commit: https://github.com/plone/plone.restapi/commit/9187626f4499d46c552f0d224e996bfb5e1a8459

Skipt test if we don't have ttw user schemas

Files changed:
M src/plone/restapi/tests/test_serializer_user.py

b'diff --git a/src/plone/restapi/tests/test_serializer_user.py b/src/plone/restapi/tests/test_serializer_user.py\nindex 8f6dcd58..b32d9041 100644\n--- a/src/plone/restapi/tests/test_serializer_user.py\n+++ b/src/plone/restapi/tests/test_serializer_user.py\n@@ -1,7 +1,7 @@\n # -*- coding: utf-8 -*-\n from plone import api\n-from plone.app.users.browser.schemaeditor import applySchema\n from plone.restapi.interfaces import ISerializeToJson\n+from plone.restapi.serializer.user import HAS_TTW_SCHEMAS\n from plone.restapi.testing import PLONE_RESTAPI_DX_INTEGRATION_TESTING\n from zope.component import getMultiAdapter\n \n@@ -51,7 +51,9 @@ def test_serialize_roles(self):\n         self.assertNotIn(\'Authenticated\', user[\'roles\'])\n         self.assertNotIn(\'Anonymous\', user[\'roles\'])\n \n+    @unittest.skipUnless(HAS_TTW_SCHEMAS, \'Requires TTW user schemas\')\n     def test_serialize_custom_member_schema(self):\n+        from plone.app.users.browser.schemaeditor import applySchema\n         member_schema = """\n             <model xmlns="http://namespaces.plone.org/supermodel/schema"\n                 xmlns:form="http://namespaces.plone.org/supermodel/form"\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2018-06-26T10:31:30+02:00
Author: Thomas Buchberger (buchi) <t.buchberger@4teamwork.ch>
Commit: https://github.com/plone/plone.restapi/commit/d8ba7f451d16774b75fa1343e57e22345ee665d6

Update responses for `@users` endpoint

Files changed:
M docs/source/_json/users.resp
M docs/source/_json/users_add.resp
M docs/source/_json/users_authorized_get.resp
M docs/source/_json/users_created.resp
M docs/source/_json/users_filtered_by_username.resp
M docs/source/_json/users_get.resp

b'diff --git a/docs/source/_json/users.resp b/docs/source/_json/users.resp\nindex 3b07d7f5..e69cb939 100644\n--- a/docs/source/_json/users.resp\n+++ b/docs/source/_json/users.resp\n@@ -10,6 +10,7 @@ Content-Type: application/json\n     "home_page": "http://www.example.com", \n     "id": "admin", \n     "location": "Berlin", \n+    "portrait": null, \n     "roles": [\n       "Manager"\n     ], \n@@ -23,6 +24,7 @@ Content-Type: application/json\n     "home_page": "http://www.example.com", \n     "id": "test_user_1_", \n     "location": "Bonn", \n+    "portrait": null, \n     "roles": [\n       "Manager"\n     ], \ndiff --git a/docs/source/_json/users_add.resp b/docs/source/_json/users_add.resp\nindex 4e0df867..d4fdd52f 100644\n--- a/docs/source/_json/users_add.resp\n+++ b/docs/source/_json/users_add.resp\n@@ -10,6 +10,7 @@ Location: http://localhost:55001/plone/@users/noamchomsky\n   "home_page": "web.mit.edu/chomsky", \n   "id": "noamchomsky", \n   "location": "Cambridge, MA", \n+  "portrait": null, \n   "roles": [\n     "Member"\n   ], \ndiff --git a/docs/source/_json/users_authorized_get.resp b/docs/source/_json/users_authorized_get.resp\nindex 314b3450..80a85227 100644\n--- a/docs/source/_json/users_authorized_get.resp\n+++ b/docs/source/_json/users_authorized_get.resp\n@@ -9,6 +9,7 @@ Content-Type: application/json\n   "home_page": "web.mit.edu/chomsky", \n   "id": "noam", \n   "location": "Cambridge, MA", \n+  "portrait": null, \n   "roles": [\n     "Member"\n   ], \ndiff --git a/docs/source/_json/users_created.resp b/docs/source/_json/users_created.resp\nindex 21e40ee5..beaeff44 100644\n--- a/docs/source/_json/users_created.resp\n+++ b/docs/source/_json/users_created.resp\n@@ -10,6 +10,7 @@ Location: http://localhost:55001/plone/@users/noamchomsky\n   "home_page": "web.mit.edu/chomsky", \n   "id": "noamchomsky", \n   "location": "Cambridge, MA", \n+  "portrait": null, \n   "roles": [\n     "Contributor"\n   ], \ndiff --git a/docs/source/_json/users_filtered_by_username.resp b/docs/source/_json/users_filtered_by_username.resp\nindex c1bd7027..54591ca6 100644\n--- a/docs/source/_json/users_filtered_by_username.resp\n+++ b/docs/source/_json/users_filtered_by_username.resp\n@@ -10,6 +10,7 @@ Content-Type: application/json\n     "home_page": "web.mit.edu/chomsky", \n     "id": "noam", \n     "location": "Cambridge, MA", \n+    "portrait": null, \n     "roles": [\n       "Member"\n     ], \ndiff --git a/docs/source/_json/users_get.resp b/docs/source/_json/users_get.resp\nindex 314b3450..80a85227 100644\n--- a/docs/source/_json/users_get.resp\n+++ b/docs/source/_json/users_get.resp\n@@ -9,6 +9,7 @@ Content-Type: application/json\n   "home_page": "web.mit.edu/chomsky", \n   "id": "noam", \n   "location": "Cambridge, MA", \n+  "portrait": null, \n   "roles": [\n     "Member"\n   ], \n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2018-06-30T11:08:13+02:00
Author: Timo Stollenwerk (tisto) <stollenwerk@kitconcept.com>
Commit: https://github.com/plone/plone.restapi/commit/6bb97c23d8ff34d954cd2f4cbda808fd4adabc7f

Merge branch 'master' into member-fields

Files changed:
A docs/source/tiles.rst
A src/plone/restapi/behaviors.py
A src/plone/restapi/serializer/tile.py
A src/plone/restapi/services/tiles/__init__.py
A src/plone/restapi/services/tiles/configure.zcml
A src/plone/restapi/services/tiles/get.py
A src/plone/restapi/tests/http-examples/404_not_found.req
A src/plone/restapi/tests/http-examples/404_not_found.resp
A src/plone/restapi/tests/http-examples/actions_get.req
A src/plone/restapi/tests/http-examples/actions_get.resp
A src/plone/restapi/tests/http-examples/batching.req
A src/plone/restapi/tests/http-examples/batching.resp
A src/plone/restapi/tests/http-examples/breadcrumbs.req
A src/plone/restapi/tests/http-examples/breadcrumbs.resp
A src/plone/restapi/tests/http-examples/collection.req
A src/plone/restapi/tests/http-examples/collection.resp
A src/plone/restapi/tests/http-examples/comments_add_root.req
A src/plone/restapi/tests/http-examples/comments_add_root.resp
A src/plone/restapi/tests/http-examples/comments_add_sub.req
A src/plone/restapi/tests/http-examples/comments_add_sub.resp
A src/plone/restapi/tests/http-examples/comments_delete.req
A src/plone/restapi/tests/http-examples/comments_delete.resp
A src/plone/restapi/tests/http-examples/comments_get.req
A src/plone/restapi/tests/http-examples/comments_get.resp
A src/plone/restapi/tests/http-examples/comments_update.req
A src/plone/restapi/tests/http-examples/comments_update.resp
A src/plone/restapi/tests/http-examples/component_breadcrumbs.req
A src/plone/restapi/tests/http-examples/component_breadcrumbs.resp
A src/plone/restapi/tests/http-examples/component_navigation.req
A src/plone/restapi/tests/http-examples/component_navigation.resp
A src/plone/restapi/tests/http-examples/content_delete.req
A src/plone/restapi/tests/http-examples/content_delete.resp
A src/plone/restapi/tests/http-examples/content_get.req
A src/plone/restapi/tests/http-examples/content_get.resp
A src/plone/restapi/tests/http-examples/content_patch.req
A src/plone/restapi/tests/http-examples/content_patch.resp
A src/plone/restapi/tests/http-examples/content_patch_representation.req
A src/plone/restapi/tests/http-examples/content_patch_representation.resp
A src/plone/restapi/tests/http-examples/content_post.req
A src/plone/restapi/tests/http-examples/content_post.resp
A src/plone/restapi/tests/http-examples/content_reorder.req
A src/plone/restapi/tests/http-examples/controlpanels_get.req
A src/plone/restapi/tests/http-examples/controlpanels_get.resp
A src/plone/restapi/tests/http-examples/controlpanels_get_item.req
A src/plone/restapi/tests/http-examples/controlpanels_get_item.resp
A src/plone/restapi/tests/http-examples/controlpanels_patch.req
A src/plone/restapi/tests/http-examples/controlpanels_patch.resp
A src/plone/restapi/tests/http-examples/conversation_comment_add_root.req
A src/plone/restapi/tests/http-examples/conversation_comment_add_root.resp
A src/plone/restapi/tests/http-examples/conversation_comment_add_sub.req
A src/plone/restapi/tests/http-examples/conversation_comment_add_sub.resp
A src/plone/restapi/tests/http-examples/conversation_comment_delete.req
A src/plone/restapi/tests/http-examples/conversation_comment_delete.resp
A src/plone/restapi/tests/http-examples/conversation_comment_detele.req
A src/plone/restapi/tests/http-examples/conversation_comment_get.req
A src/plone/restapi/tests/http-examples/conversation_comment_update.req
A src/plone/restapi/tests/http-examples/conversation_comment_update.resp
A src/plone/restapi/tests/http-examples/conversation_delete.req
A src/plone/restapi/tests/http-examples/conversation_delete.resp
A src/plone/restapi/tests/http-examples/copy.json
A src/plone/restapi/tests/http-examples/copy.json.req
A src/plone/restapi/tests/http-examples/copy.json.resp
A src/plone/restapi/tests/http-examples/copy.req
A src/plone/restapi/tests/http-examples/copy.resp
A src/plone/restapi/tests/http-examples/copy_multiple.req
A src/plone/restapi/tests/http-examples/copy_multiple.resp
A src/plone/restapi/tests/http-examples/document.req
A src/plone/restapi/tests/http-examples/document.resp
A src/plone/restapi/tests/http-examples/event.req
A src/plone/restapi/tests/http-examples/event.resp
A src/plone/restapi/tests/http-examples/expansion.req
A src/plone/restapi/tests/http-examples/expansion.resp
A src/plone/restapi/tests/http-examples/expansion_expanded.req
A src/plone/restapi/tests/http-examples/expansion_expanded.resp
A src/plone/restapi/tests/http-examples/expansion_expanded_full.req
A src/plone/restapi/tests/http-examples/expansion_expanded_full.resp
A src/plone/restapi/tests/http-examples/file.req
A src/plone/restapi/tests/http-examples/file.resp
A src/plone/restapi/tests/http-examples/folder.req
A src/plone/restapi/tests/http-examples/folder.resp
A src/plone/restapi/tests/http-examples/groups.req
A src/plone/restapi/tests/http-examples/groups.resp
A src/plone/restapi/tests/http-examples/groups_created.req
A src/plone/restapi/tests/http-examples/groups_created.resp
A src/plone/restapi/tests/http-examples/groups_delete.req
A src/plone/restapi/tests/http-examples/groups_delete.resp
A src/plone/restapi/tests/http-examples/groups_filtered_by_groupname.req
A src/plone/restapi/tests/http-examples/groups_filtered_by_groupname.resp
A src/plone/restapi/tests/http-examples/groups_get.req
A src/plone/restapi/tests/http-examples/groups_get.resp
A src/plone/restapi/tests/http-examples/groups_update.req
A src/plone/restapi/tests/http-examples/groups_update.resp
A src/plone/restapi/tests/http-examples/history_get.req
A src/plone/restapi/tests/http-examples/history_get.resp
A src/plone/restapi/tests/http-examples/history_get_versioned.req
A src/plone/restapi/tests/http-examples/history_revert.req
A src/plone/restapi/tests/http-examples/history_revert.resp
A src/plone/restapi/tests/http-examples/image.req
A src/plone/restapi/tests/http-examples/image.resp
A src/plone/restapi/tests/http-examples/jwt_logged_in.req
A src/plone/restapi/tests/http-examples/jwt_logged_in.resp
A src/plone/restapi/tests/http-examples/jwt_login.req
A src/plone/restapi/tests/http-examples/jwt_login.resp
A src/plone/restapi/tests/http-examples/jwt_login_renew.req
A src/plone/restapi/tests/http-examples/jwt_login_renew.resp
A src/plone/restapi/tests/http-examples/jwt_logout.req
A src/plone/restapi/tests/http-examples/jwt_logout.resp
A src/plone/restapi/tests/http-examples/link.req
A src/plone/restapi/tests/http-examples/link.resp
A src/plone/restapi/tests/http-examples/lock.req
A src/plone/restapi/tests/http-examples/lock.resp
A src/plone/restapi/tests/http-examples/lock_get.req
A src/plone/restapi/tests/http-examples/lock_get.resp
A src/plone/restapi/tests/http-examples/lock_nonstealable_timeout.req
A src/plone/restapi/tests/http-examples/lock_nonstealable_timeout.resp
A src/plone/restapi/tests/http-examples/lock_update.req
A src/plone/restapi/tests/http-examples/lock_update.resp
A src/plone/restapi/tests/http-examples/login.req
A src/plone/restapi/tests/http-examples/move.json
A src/plone/restapi/tests/http-examples/move.json.req
A src/plone/restapi/tests/http-examples/move.json.resp
A src/plone/restapi/tests/http-examples/move.req
A src/plone/restapi/tests/http-examples/move.resp
A src/plone/restapi/tests/http-examples/navigation.req
A src/plone/restapi/tests/http-examples/navigation.resp
A src/plone/restapi/tests/http-examples/navigation_tree.req
A src/plone/restapi/tests/http-examples/navigation_tree.resp
A src/plone/restapi/tests/http-examples/newsitem.req
A src/plone/restapi/tests/http-examples/newsitem.resp
A src/plone/restapi/tests/http-examples/principals.req
A src/plone/restapi/tests/http-examples/principals.resp
A src/plone/restapi/tests/http-examples/refresh_lock.req
A src/plone/restapi/tests/http-examples/refresh_lock.resp
A src/plone/restapi/tests/http-examples/registry_get.req
A src/plone/restapi/tests/http-examples/registry_get.resp
A src/plone/restapi/tests/http-examples/registry_get_list.req
A src/plone/restapi/tests/http-examples/registry_get_list.resp
A src/plone/restapi/tests/http-examples/registry_update.req
A src/plone/restapi/tests/http-examples/registry_update.resp
A src/plone/restapi/tests/http-examples/roles.req
A src/plone/restapi/tests/http-examples/roles.resp
A src/plone/restapi/tests/http-examples/search.req
A src/plone/restapi/tests/http-examples/search.resp
A src/plone/restapi/tests/http-examples/sharing_folder_get.req
A src/plone/restapi/tests/http-examples/sharing_folder_get.resp
A src/plone/restapi/tests/http-examples/sharing_folder_get_include_titles.req
A src/plone/restapi/tests/http-examples/sharing_folder_post.req
A src/plone/restapi/tests/http-examples/sharing_folder_post.resp
A src/plone/restapi/tests/http-examples/sharing_search.req
A src/plone/restapi/tests/http-examples/sharing_search.resp
A src/plone/restapi/tests/http-examples/siteroot.req
A src/plone/restapi/tests/http-examples/siteroot.resp
A src/plone/restapi/tests/http-examples/translated_messages_object_history.req
A src/plone/restapi/tests/http-examples/translated_messages_object_history.resp
A src/plone/restapi/tests/http-examples/translated_messages_object_workflow.req
A src/plone/restapi/tests/http-examples/translated_messages_object_workflow.resp
A src/plone/restapi/tests/http-examples/translated_messages_types.req
A src/plone/restapi/tests/http-examples/translated_messages_types.resp
A src/plone/restapi/tests/http-examples/translated_messages_types_folder.req
A src/plone/restapi/tests/http-examples/translated_messages_types_folder.resp
A src/plone/restapi/tests/http-examples/translations_delete.req
A src/plone/restapi/tests/http-examples/translations_delete.resp
A src/plone/restapi/tests/http-examples/translations_get.req
A src/plone/restapi/tests/http-examples/translations_get.resp
A src/plone/restapi/tests/http-examples/translations_post.req
A src/plone/restapi/tests/http-examples/translations_post.resp
A src/plone/restapi/tests/http-examples/tusreplace_patch.req
A src/plone/restapi/tests/http-examples/tusreplace_patch.resp
A src/plone/restapi/tests/http-examples/tusreplace_post.req
A src/plone/restapi/tests/http-examples/tusreplace_post.resp
A src/plone/restapi/tests/http-examples/tusupload_head.req
A src/plone/restapi/tests/http-examples/tusupload_head.resp
A src/plone/restapi/tests/http-examples/tusupload_options.req
A src/plone/restapi/tests/http-examples/tusupload_options.resp
A src/plone/restapi/tests/http-examples/tusupload_patch.req
A src/plone/restapi/tests/http-examples/tusupload_patch.resp
A src/plone/restapi/tests/http-examples/tusupload_patch_finalized.req
A src/plone/restapi/tests/http-examples/tusupload_patch_finalized.resp
A src/plone/restapi/tests/http-examples/tusupload_post.req
A src/plone/restapi/tests/http-examples/tusupload_post.resp
A src/plone/restapi/tests/http-examples/types.req
A src/plone/restapi/tests/http-examples/types.resp
A src/plone/restapi/tests/http-examples/types_document.req
A src/plone/restapi/tests/http-examples/types_document.resp
A src/plone/restapi/tests/http-examples/unlock.req
A src/plone/restapi/tests/http-examples/unlock.resp
A src/plone/restapi/tests/http-examples/users.req
A src/plone/restapi/tests/http-examples/users.resp
A src/plone/restapi/tests/http-examples/users_add.req
A src/plone/restapi/tests/http-examples/users_add.resp
A src/plone/restapi/tests/http-examples/users_anonymous.req
A src/plone/restapi/tests/http-examples/users_anonymous.resp
A src/plone/restapi/tests/http-examples/users_anonymous_get.req
A src/plone/restapi/tests/http-examples/users_anonymous_get.resp
A src/plone/restapi/tests/http-examples/users_authorized_get.req
A src/plone/restapi/tests/http-examples/users_authorized_get.resp
A src/plone/restapi/tests/http-examples/users_created.req
A src/plone/restapi/tests/http-examples/users_created.resp
A src/plone/restapi/tests/http-examples/users_delete.req
A src/plone/restapi/tests/http-examples/users_delete.resp
A src/plone/restapi/tests/http-examples/users_filtered_by_username.req
A src/plone/restapi/tests/http-examples/users_filtered_by_username.resp
A src/plone/restapi/tests/http-examples/users_get.req
A src/plone/restapi/tests/http-examples/users_get.resp
A src/plone/restapi/tests/http-examples/users_reset.req
A src/plone/restapi/tests/http-examples/users_unauthorized.req
A src/plone/restapi/tests/http-examples/users_unauthorized.resp
A src/plone/restapi/tests/http-examples/users_unauthorized_get.req
A src/plone/restapi/tests/http-examples/users_unauthorized_get.resp
A src/plone/restapi/tests/http-examples/users_update.req
A src/plone/restapi/tests/http-examples/users_update.resp
A src/plone/restapi/tests/http-examples/vocabularies.req
A src/plone/restapi/tests/http-examples/vocabularies.resp
A src/plone/restapi/tests/http-examples/vocabularies_get.req
A src/plone/restapi/tests/http-examples/vocabularies_get.resp
A src/plone/restapi/tests/http-examples/workflow_get.req
A src/plone/restapi/tests/http-examples/workflow_get.resp
A src/plone/restapi/tests/http-examples/workflow_post.req
A src/plone/restapi/tests/http-examples/workflow_post.resp
A src/plone/restapi/tests/http-examples/workflow_post_with_body.req
A src/plone/restapi/tests/http-examples/workflow_post_with_body.resp
A src/plone/restapi/tests/test_behaviors.py
A src/plone/restapi/tests/test_content_utils.py
A src/plone/restapi/tests/test_services_tiles.py
M .travis.yml
M CHANGES.rst
M base.cfg
M docs/source/actions.rst
M docs/source/authentication.rst
M docs/source/batching.rst
M docs/source/breadcrumbs.rst
M docs/source/comments.rst
M docs/source/content.rst
M docs/source/controlpanels.rst
M docs/source/copymove.rst
M docs/source/expansion.rst
M docs/source/groups.rst
M docs/source/history.rst
M docs/source/i18n.rst
M docs/source/ideas/hydra.rst
M docs/source/index.rst
M docs/source/introduction.rst
M docs/source/locking.rst
M docs/source/navigation.rst
M docs/source/plone-content.rst
M docs/source/principals.rst
M docs/source/registry.rst
M docs/source/roles.rst
M docs/source/searching.rst
M docs/source/serialization.rst
M docs/source/sharing.rst
M docs/source/translations.rst
M docs/source/tusupload.rst
M docs/source/types.rst
M docs/source/upgrade-guide.rst
M docs/source/users.rst
M docs/source/vocabularies.rst
M docs/source/workflow.rst
M setup.py
M src/plone/restapi/configure.zcml
M src/plone/restapi/deserializer/atcontent.py
M src/plone/restapi/deserializer/dxcontent.py
M src/plone/restapi/imaging.py
M src/plone/restapi/serializer/atfields.py
M src/plone/restapi/serializer/configure.zcml
M src/plone/restapi/serializer/dxfields.py
M src/plone/restapi/services/configure.zcml
M src/plone/restapi/services/content/add.py
M src/plone/restapi/services/content/tus.py
M src/plone/restapi/services/content/utils.py
M src/plone/restapi/tests/robot/test.robot
M src/plone/restapi/tests/test_atcontent_deserializer.py
M src/plone/restapi/tests/test_atfield_serializer.py
M src/plone/restapi/tests/test_batching.py
M src/plone/restapi/tests/test_content_get.py
M src/plone/restapi/tests/test_content_patch.py
M src/plone/restapi/tests/test_content_post.py
M src/plone/restapi/tests/test_documentation.py
M src/plone/restapi/tests/test_dxfield_serializer.py
M src/plone/restapi/tests/test_expansion.py
M src/plone/restapi/tests/test_roles.py
M src/plone/restapi/tests/test_search.py
M src/plone/restapi/tests/test_serializer.py
M src/plone/restapi/tests/test_services.py
M src/plone/restapi/tests/test_services_breadcrumbs.py
M src/plone/restapi/tests/test_services_navigation.py
M src/plone/restapi/tests/test_services_vocabularies.py
M src/plone/restapi/tests/test_tus.py
M src/plone/restapi/types/adapters.py
M src/plone/restapi/types/configure.zcml
M test-no-uncommitted-doc-changes.in
M versions.cfg
D docs/source/_json/404_not_found.req
D docs/source/_json/404_not_found.resp
D docs/source/_json/actions_get.req
D docs/source/_json/actions_get.resp
D docs/source/_json/batching.req
D docs/source/_json/batching.resp
D docs/source/_json/breadcrumbs.req
D docs/source/_json/breadcrumbs.resp
D docs/source/_json/collection.req
D docs/source/_json/collection.resp
D docs/source/_json/comments_add_root.req
D docs/source/_json/comments_add_root.resp
D docs/source/_json/comments_add_sub.req
D docs/source/_json/comments_add_sub.resp
D docs/source/_json/comments_delete.req
D docs/source/_json/comments_delete.resp
D docs/source/_json/comments_get.req
D docs/source/_json/comments_get.resp
D docs/source/_json/comments_update.req
D docs/source/_json/comments_update.resp
D docs/source/_json/component_breadcrumbs.req
D docs/source/_json/component_breadcrumbs.resp
D docs/source/_json/component_navigation.req
D docs/source/_json/component_navigation.resp
D docs/source/_json/content_delete.req
D docs/source/_json/content_delete.resp
D docs/source/_json/content_get.req
D docs/source/_json/content_get.resp
D docs/source/_json/content_patch.req
D docs/source/_json/content_patch.resp
D docs/source/_json/content_patch_representation.req
D docs/source/_json/content_patch_representation.resp
D docs/source/_json/content_post.req
D docs/source/_json/content_post.resp
D docs/source/_json/content_reorder.req
D docs/source/_json/controlpanels_get.req
D docs/source/_json/controlpanels_get.resp
D docs/source/_json/controlpanels_get_item.req
D docs/source/_json/controlpanels_get_item.resp
D docs/source/_json/controlpanels_patch.req
D docs/source/_json/controlpanels_patch.resp
D docs/source/_json/conversation_comment_add_root.req
D docs/source/_json/conversation_comment_add_root.resp
D docs/source/_json/conversation_comment_add_sub.req
D docs/source/_json/conversation_comment_add_sub.resp
D docs/source/_json/conversation_comment_delete.req
D docs/source/_json/conversation_comment_delete.resp
D docs/source/_json/conversation_comment_detele.req
D docs/source/_json/conversation_comment_get.req
D docs/source/_json/conversation_comment_update.req
D docs/source/_json/conversation_comment_update.resp
D docs/source/_json/conversation_delete.req
D docs/source/_json/conversation_delete.resp
D docs/source/_json/copy.json
D docs/source/_json/copy.json.req
D docs/source/_json/copy.json.resp
D docs/source/_json/copy.req
D docs/source/_json/copy.resp
D docs/source/_json/copy_multiple.req
D docs/source/_json/copy_multiple.resp
D docs/source/_json/document.req
D docs/source/_json/document.resp
D docs/source/_json/event.req
D docs/source/_json/event.resp
D docs/source/_json/expansion.req
D docs/source/_json/expansion.resp
D docs/source/_json/expansion_expanded.req
D docs/source/_json/expansion_expanded.resp
D docs/source/_json/expansion_expanded_full.req
D docs/source/_json/expansion_expanded_full.resp
D docs/source/_json/file.req
D docs/source/_json/file.resp
D docs/source/_json/folder.req
D docs/source/_json/folder.resp
D docs/source/_json/groups.req
D docs/source/_json/groups.resp
D docs/source/_json/groups_created.req
D docs/source/_json/groups_created.resp
D docs/source/_json/groups_delete.req
D docs/source/_json/groups_delete.resp
D docs/source/_json/groups_filtered_by_groupname.req
D docs/source/_json/groups_filtered_by_groupname.resp
D docs/source/_json/groups_get.req
D docs/source/_json/groups_get.resp
D docs/source/_json/groups_update.req
D docs/source/_json/groups_update.resp
D docs/source/_json/history_get.req
D docs/source/_json/history_get.resp
D docs/source/_json/history_get_versioned.req
D docs/source/_json/history_revert.req
D docs/source/_json/history_revert.resp
D docs/source/_json/image.req
D docs/source/_json/image.resp
D docs/source/_json/jwt_logged_in.req
D docs/source/_json/jwt_logged_in.resp
D docs/source/_json/jwt_login.req
D docs/source/_json/jwt_login.resp
D docs/source/_json/jwt_login_renew.req
D docs/source/_json/jwt_login_renew.resp
D docs/source/_json/jwt_logout.req
D docs/source/_json/jwt_logout.resp
D docs/source/_json/link.req
D docs/source/_json/link.resp
D docs/source/_json/lock.req
D docs/source/_json/lock.resp
D docs/source/_json/lock_get.req
D docs/source/_json/lock_get.resp
D docs/source/_json/lock_nonstealable_timeout.req
D docs/source/_json/lock_nonstealable_timeout.resp
D docs/source/_json/lock_update.req
D docs/source/_json/lock_update.resp
D docs/source/_json/login.req
D docs/source/_json/move.json
D docs/source/_json/move.json.req
D docs/source/_json/move.json.resp
D docs/source/_json/move.req
D docs/source/_json/move.resp
D docs/source/_json/navigation.req
D docs/source/_json/navigation.resp
D docs/source/_json/navigation_tree.req
D docs/source/_json/navigation_tree.resp
D docs/source/_json/newsitem.req
D docs/source/_json/newsitem.resp
D docs/source/_json/principals.req
D docs/source/_json/principals.resp
D docs/source/_json/refresh_lock.req
D docs/source/_json/refresh_lock.resp
D docs/source/_json/registry_get.req
D docs/source/_json/registry_get.resp
D docs/source/_json/registry_get_list.req
D docs/source/_json/registry_get_list.resp
D docs/source/_json/registry_update.req
D docs/source/_json/registry_update.resp
D docs/source/_json/roles.req
D docs/source/_json/roles.resp
D docs/source/_json/search.req
D docs/source/_json/search.resp
D docs/source/_json/sharing_folder_get.req
D docs/source/_json/sharing_folder_get.resp
D docs/source/_json/sharing_folder_get_include_titles.req
D docs/source/_json/sharing_folder_post.req
D docs/source/_json/sharing_folder_post.resp
D docs/source/_json/sharing_search.req
D docs/source/_json/sharing_search.resp
D docs/source/_json/siteroot.req
D docs/source/_json/siteroot.resp
D docs/source/_json/translated_messages_object_history.req
D docs/source/_json/translated_messages_object_history.resp
D docs/source/_json/translated_messages_object_workflow.req
D docs/source/_json/translated_messages_object_workflow.resp
D docs/source/_json/translated_messages_types.req
D docs/source/_json/translated_messages_types.resp
D docs/source/_json/translated_messages_types_folder.req
D docs/source/_json/translated_messages_types_folder.resp
D docs/source/_json/translations_delete.req
D docs/source/_json/translations_delete.resp
D docs/source/_json/translations_get.req
D docs/source/_json/translations_get.resp
D docs/source/_json/translations_post.req
D docs/source/_json/translations_post.resp
D docs/source/_json/tusreplace_patch.req
D docs/source/_json/tusreplace_patch.resp
D docs/source/_json/tusreplace_post.req
D docs/source/_json/tusreplace_post.resp
D docs/source/_json/tusupload_head.req
D docs/source/_json/tusupload_head.resp
D docs/source/_json/tusupload_options.req
D docs/source/_json/tusupload_options.resp
D docs/source/_json/tusupload_patch.req
D docs/source/_json/tusupload_patch.resp
D docs/source/_json/tusupload_patch_finalized.req
D docs/source/_json/tusupload_patch_finalized.resp
D docs/source/_json/tusupload_post.req
D docs/source/_json/tusupload_post.resp
D docs/source/_json/types.req
D docs/source/_json/types.resp
D docs/source/_json/types_document.req
D docs/source/_json/types_document.resp
D docs/source/_json/unlock.req
D docs/source/_json/unlock.resp
D docs/source/_json/users.req
D docs/source/_json/users.resp
D docs/source/_json/users_add.req
D docs/source/_json/users_add.resp
D docs/source/_json/users_anonymous.req
D docs/source/_json/users_anonymous.resp
D docs/source/_json/users_anonymous_get.req
D docs/source/_json/users_anonymous_get.resp
D docs/source/_json/users_authorized_get.req
D docs/source/_json/users_authorized_get.resp
D docs/source/_json/users_created.req
D docs/source/_json/users_created.resp
D docs/source/_json/users_delete.req
D docs/source/_json/users_delete.resp
D docs/source/_json/users_filtered_by_username.req
D docs/source/_json/users_filtered_by_username.resp
D docs/source/_json/users_get.req
D docs/source/_json/users_get.resp
D docs/source/_json/users_reset.req
D docs/source/_json/users_unauthorized.req
D docs/source/_json/users_unauthorized.resp
D docs/source/_json/users_unauthorized_get.req
D docs/source/_json/users_unauthorized_get.resp
D docs/source/_json/users_update.req
D docs/source/_json/users_update.resp
D docs/source/_json/vocabularies.req
D docs/source/_json/vocabularies.resp
D docs/source/_json/vocabularies_get.req
D docs/source/_json/vocabularies_get.resp
D docs/source/_json/workflow_get.req
D docs/source/_json/workflow_get.resp
D docs/source/_json/workflow_post.req
D docs/source/_json/workflow_post.resp
D docs/source/_json/workflow_post_with_body.req
D docs/source/_json/workflow_post_with_body.resp

b'diff --git a/.travis.yml b/.travis.yml\nindex d3b002ce..24ac8f2f 100644\n--- a/.travis.yml\n+++ b/.travis.yml\n@@ -17,6 +17,10 @@ env:\n     - PLONE_VERSION=5.1.x\n before_install:\n   - mkdir -p $HOME/buildout-cache/{eggs,downloads}\n+  - mkdir $HOME/.buildout\n+  - echo "[buildout]" > $HOME/.buildout/default.cfg\n+  - echo "download-cache = $HOME/buildout-cache/downloads" >> $HOME/.buildout/default.cfg\n+  - echo "eggs-directory = $HOME/buildout-cache/eggs" >> $HOME/.buildout/default.cfg\n   - pip install -r requirements.txt\n install:\n   - sed -ie "s#plone-x.x.x.cfg#plone-$PLONE_VERSION.cfg#" travis.cfg\n@@ -31,7 +35,7 @@ after_success:\n   - bin/test-coverage\n   - pip install coverage==3.7.1 coveralls\n   - coveralls\n-  - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"\n-  - if [ ! $TRAVIS_TAG ]; then docker build --tag plone/plone.restapi:plone-$PLONE_VERSION-$(git rev-parse HEAD) --tag plone/plone.restapi:latest . ; fi\n-  - if [ $TRAVIS_TAG ]; then docker build --tag plone/plone.restapi:plone-$PLONE_VERSION-$(git rev-parse HEAD) . --tag plone/plone.restapi:plone-$PLONE_VERSION-$TRAVIS_TAG --tag plone/plone.restapi:latest ; fi\n-  - docker push plone/plone.restapi\n+  # - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"\n+  # - if [ ! $TRAVIS_TAG ]; then docker build --tag plone/plone.restapi:plone-$PLONE_VERSION-$(git rev-parse HEAD) --tag plone/plone.restapi:latest . ; fi\n+  # - if [ $TRAVIS_TAG ]; then docker build --tag plone/plone.restapi:plone-$PLONE_VERSION-$(git rev-parse HEAD) . --tag plone/plone.restapi:plone-$PLONE_VERSION-$TRAVIS_TAG --tag plone/plone.restapi:latest ; fi\n+  # - docker push plone/plone.restapi\ndiff --git a/CHANGES.rst b/CHANGES.rst\nindex e4af11c3..bc0f56bc 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -1,22 +1,72 @@\n Changelog\n =========\n \n-3.0.0 (unreleased)\n+3.2.2 (unreleased)\n ------------------\n \n-Breaking Changes:\n+- Do not include HTTP examples using data_files anymore, but move them below\n+  src/plone/restapi instead and use package_data to include them.\n+  [lgraf]\n \n-- Include translated role titles in `@sharing` GET.\n+\n+3.2.1 (2018-06-28)\n+------------------\n+\n+Bugfixes:\n+\n+- Require plone.schema >= 1.2.0 in setup.py for new tiles endpoint.\n+  [timo]\n+\n+3.2.0 (2018-06-28)\n+------------------\n+\n+New Features:\n+\n+- Add tiles endpoint for getting all available content tiles and its JSONSchema.\n+  [sneridagh]\n+\n+- Add a tiles behavior to support the new tiles implementation for plone.restapi.\n+  [sneridagh]\n+\n+- Make sure to include HTTP examples in installed egg, so test_documentation\n+  tests also work against a installed release of plone.restapi.\n   [lgraf]\n \n+\n+3.1.0 (2018-06-27)\n+------------------\n+\n New Features:\n \n-- Nothing changed yet.\n+- Plone 5.2 compatibility.\n+  [sunew, davisagli, timo]\n+\n+\n+3.0.0 (2018-06-26)\n+------------------\n+\n+Breaking Changes:\n+\n+- Fix object creation events. Before this fix, creation events were fired on\n+  empty not yet deserialized objects. Also a modified event was fired after\n+  deserializing e newly created object.\n+  Custom content deserializers now must handle the `create` keyword argument,\n+  which determines if deserialization is performed during object creation or\n+  while updating an object.\n+  [buchi]\n+\n+- Include translated role titles in `@sharing` GET.\n+  [lgraf]\n+\n+- Image URLs are now created using the cache optimized way. Fixes #494.\n+  [erral]\n \n \n 2.2.1 (2018-06-25)\n ------------------\n \n+Bugfixes:\n+\n - Fix ReST on PyPi.\n   [timo]\n \ndiff --git a/base.cfg b/base.cfg\nindex 2b87ff5a..4e6a6580 100644\n--- a/base.cfg\n+++ b/base.cfg\n@@ -23,6 +23,16 @@ sources-dir = extras\n auto-checkout =\n #    plone.rest\n \n+allow-hosts =\n+    *.python.org\n+    *.plone.org\n+    *.zope.org\n+    pypi.org\n+    files.pythonhosted.org\n+    launchpad.net\n+    code.google.com\n+    robotframework.googlecode.com\n+\n [instance]\n recipe = plone.recipe.zope2instance\n user = admin:admin\n@@ -36,6 +46,19 @@ eggs =\n environment-vars =\n     zope_i18n_compile_mo_files true\n \n+zcml-additional =\n+  <configure xmlns="http://namespaces.zope.org/zope"\n+             xmlns:plone="http://namespaces.plone.org/plone">\n+    <plone:CORSPolicy\n+        allow_origin="http://localhost:4300,http://127.0.0.1:4300"\n+        allow_methods="DELETE,GET,OPTIONS,PATCH,POST,PUT"\n+        allow_credentials="true"\n+        expose_headers="Content-Length,X-My-Header"\n+        allow_headers="Accept,Authorization,Content-Type,X-Custom-Header"\n+        max_age="3600"\n+        />\n+    </configure>\n+\n [test]\n recipe = zc.recipe.testrunner\n eggs = ${instance:eggs}\n@@ -95,7 +118,7 @@ scripts = dependencychecker\n \n [releaser]\n recipe = zc.recipe.egg\n-eggs = \n+eggs =\n     zest.releaser[recommended]\n     readme\n     docutils\n@@ -165,3 +188,4 @@ mode = 755\n \n [sources]\n plone.rest = git git://github.com/plone/plone.rest.git pushurl=git@github.com:plone/plone.rest.git branch=master\n+plone.schema = git git://github.com/plone/plone.schema.git pushurl=git@github.com:plone/plone.schema.git branch=newjsonschemafield\ndiff --git a/docs/source/actions.rst b/docs/source/actions.rst\nindex 2b57686c..5305cc10 100644\n--- a/docs/source/actions.rst\n+++ b/docs/source/actions.rst\n@@ -21,13 +21,13 @@ Listing available actions\n To list the available actions, send a GET request to the \'@actions\' endpoint on a specific content object:\n \n .. http:example:: curl httpie python-requests\n-   :request: _json/actions_get.req\n+   :request: ../../src/plone/restapi/tests/http-examples/actions_get.req\n \n The server will respond with a `200 OK` status code.\n The JSON response contains the available actions categories (object, object_buttons, user) on the top level.\n Each category contains a list of the available actions in that category:\n \n-.. literalinclude:: _json/actions_get.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/actions_get.resp\n    :language: http\n \n If you want to limit the categories that are retured, pass one or more parameters\ndiff --git a/docs/source/authentication.rst b/docs/source/authentication.rst\nindex 561cb015..e499f13d 100644\n--- a/docs/source/authentication.rst\n+++ b/docs/source/authentication.rst\n@@ -47,11 +47,11 @@ A JWT token can be acquired by posting a user\'s credentials to the ``@login``\n endpoint.\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/jwt_login.req\n+    :request: ../../src/plone/restapi/tests/http-examples/jwt_login.req\n \n The server responds with a JSON object containing the token.\n \n-.. literalinclude:: _json/jwt_login.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/jwt_login.resp\n    :language: http\n \n Authenticating with a token\n@@ -61,7 +61,7 @@ The token can now be used in subsequent requests by including it in the\n ``Authorization`` header with the ``Bearer`` scheme:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/jwt_logged_in.req\n+    :request: ../../src/plone/restapi/tests/http-examples/jwt_logged_in.req\n \n \n Renewing a token (@login-renew)\n@@ -71,11 +71,11 @@ By default the token will expire after 12 hours and thus must be renewed before\n expiration. To renew the token simply post to the ``@login-renew`` endpoint.\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/jwt_login_renew.req\n+    :request: ../../src/plone/restapi/tests/http-examples/jwt_login_renew.req\n \n The server returns a JSON object with a new token:\n \n-.. literalinclude:: _json/jwt_login_renew.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/jwt_login_renew.resp\n    :language: http\n \n Invalidating a token (@logout)\n@@ -90,11 +90,11 @@ keyring in the PAS plugin (option ``use_keyring``).\n The logout request must contain the existing token in the ``Authorization`` header.\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/jwt_logout.req\n+    :request: ../../src/plone/restapi/tests/http-examples/jwt_logout.req\n \n If invalidation succeeds, the server responds with an empty 204 reponse:\n \n-.. literalinclude:: _json/jwt_logout.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/jwt_logout.resp\n    :language: http\n \n Permissions\ndiff --git a/docs/source/batching.rst b/docs/source/batching.rst\nindex 604ad3b6..078c0698 100644\n--- a/docs/source/batching.rst\n+++ b/docs/source/batching.rst\n@@ -79,8 +79,8 @@ Parameter        Description\n Full example of a batched request and response:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/batching.req\n+    :request: ../../src/plone/restapi/tests/http-examples/batching.req\n \n-.. literalinclude:: _json/batching.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/batching.resp\n    :language: http\n \ndiff --git a/docs/source/breadcrumbs.rst b/docs/source/breadcrumbs.rst\nindex 53f9a44f..36261da3 100644\n--- a/docs/source/breadcrumbs.rst\n+++ b/docs/source/breadcrumbs.rst\n@@ -6,9 +6,9 @@ Breadcrumbs\n Getting the breadcrumbs for the current page:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/breadcrumbs.req\n+    :request: ../../src/plone/restapi/tests/http-examples/breadcrumbs.req\n \n Example response:\n \n-.. literalinclude:: _json/breadcrumbs.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/breadcrumbs.resp\n    :language: http\ndiff --git a/docs/source/comments.rst b/docs/source/comments.rst\nindex 59cd007f..913a3895 100644\n--- a/docs/source/comments.rst\n+++ b/docs/source/comments.rst\n@@ -13,11 +13,11 @@ Listing Comments\n You can list the existing comment on a content object by sending a GET request to the URL of the content object and appending \'/@comments\':\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/comments_get.req\n+    :request: ../../src/plone/restapi/tests/http-examples/comments_get.req\n \n The server will respond with a `Status 200` and a batched list of all comments:\n \n-.. literalinclude:: _json/comments_get.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/comments_get.resp\n    :language: http\n \n These following fields are returned:\n@@ -47,11 +47,11 @@ Adding a Comment\n To add a new comment to a content object, send a POST request to the URL of the content object and append \'/@comments\' to the URL. The body of the request needs to contain a JSON structure with a \'text\' attribute that contains the comment text:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/comments_add_root.req\n+    :request: ../../src/plone/restapi/tests/http-examples/comments_add_root.req\n \n If the creation of the comment has been successful, the server will respond with a :term:`204 No Content` status and the URL of the newly created comment in the location header:\n \n-.. literalinclude:: _json/comments_add_root.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/comments_add_root.resp\n    :language: http\n \n \n@@ -61,11 +61,11 @@ Replying to a Comment\n To add a direct reply to an existing comment, send a POST request to the URL of the comment you want to reply to. The body of the request needs to contain a JSON structure with a \'text\' attribute that contains the comment text:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/comments_add_sub.req\n+    :request: ../../src/plone/restapi/tests/http-examples/comments_add_sub.req\n \n If the creation of the comment has been successful, the server will respond with a :term:`204 No Content` status and the URL of the newly created comment in the location header:\n \n-.. literalinclude:: _json/comments_add_sub.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/comments_add_sub.resp\n    :language: http\n \n \n@@ -77,11 +77,11 @@ Updating a Comment\n An existing comment can be updated by sending a PATCH request to the URL of the comment. The request body needs to contain a JSON structure with at least a \'text\' attribute:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/comments_update.req\n+    :request: ../../src/plone/restapi/tests/http-examples/comments_update.req\n \n The server will respond with a :term:`204 No Content` response and a location header with the comment URL when the comment has been updated successfully:\n \n-.. literalinclude:: _json/comments_update.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/comments_update.resp\n    :language: http\n \n \n@@ -93,9 +93,9 @@ An existing comment can be deleted by sending a DELETE request to the URL of the\n ..note: Deleting a comment will, by default, also delete all existing replies to that comment.\n \n ..  http:example:: curl httpie python-requests\n-\t :request: _json/comments_delete.req\n+\t :request: ../../src/plone/restapi/tests/http-examples/comments_delete.req\n \n When the comment has been deleted successfully, the server will respond with a :term:`204 No Content` response:\n \n-.. literalinclude:: _json/comments_delete.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/comments_delete.resp\n    :language: http\ndiff --git a/docs/source/content.rst b/docs/source/content.rst\nindex eba2dca7..8750fd9e 100644\n--- a/docs/source/content.rst\n+++ b/docs/source/content.rst\n@@ -22,7 +22,7 @@ To create a new resource, we send a POST request to the resource container.\n If we want to create a new document within an existing folder, we send a POST request to that folder:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/content_post.req\n+    :request: ../../src/plone/restapi/tests/http-examples/content_post.req\n \n By setting the \'Accept\' header, we tell the server that we would like to receive the response in the \'application/json\' representation format.\n \n@@ -39,7 +39,7 @@ If a resource has been created, the server responds with the :term:`201 Created`\n The \'Location\' header contains the URL of the newly created resource and the resource representation in the payload:\n \n \n-.. literalinclude:: _json/content_post.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/content_post.resp\n    :language: http\n \n \n@@ -110,7 +110,7 @@ Reading a Resource with GET\n After a successful POST, we can access the resource by sending a GET request to the resource URL:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/content_get.req\n+    :request: ../../src/plone/restapi/tests/http-examples/content_get.req\n \n You can also set the `include_items` GET parameter to false if you don\'t want to include children.\n \n@@ -120,7 +120,7 @@ Successful Response (200 OK)\n \n If a resource has been retrieved successfully, the server responds with :term:`200 OK`:\n \n-.. literalinclude:: _json/content_get.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/content_get.resp\n    :language: http\n \n .. note::\n@@ -185,7 +185,7 @@ will be set. Note that this is not possible if the field is ``required``,\n and it only works for Dexterity types, not Archetypes:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/content_patch.req\n+    :request: ../../src/plone/restapi/tests/http-examples/content_patch.req\n \n \n Successful Response (204 No Content)\n@@ -193,7 +193,7 @@ Successful Response (204 No Content)\n \n A successful response to a PATCH request will be indicated by a :term:`204 No Content` response by default:\n \n-.. literalinclude:: _json/content_patch.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/content_patch.resp\n    :language: http\n \n \n@@ -204,9 +204,9 @@ You can get the object representation by adding a `Prefer` header with a value o\n In this case, the response will be a :term:`200 OK`:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/content_patch_representation.req\n+    :request: ../../src/plone/restapi/tests/http-examples/content_patch_representation.req\n \n-.. literalinclude:: _json/content_patch_representation.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/content_patch_representation.resp\n    :language: http\n \n See for full specs the `RFC 5789: PATCH Method for HTTP <http://tools.ietf.org/html/rfc5789>`_\n@@ -301,11 +301,11 @@ Removing a Resource with DELETE\n We can delete an existing resource by sending a DELETE request:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/content_delete.req\n+    :request: ../../src/plone/restapi/tests/http-examples/content_delete.req\n \n A successful response will be indicated by a :term:`204 No Content` response:\n \n-.. literalinclude:: _json/content_delete.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/content_delete.resp\n    :language: http\n \n \n@@ -358,4 +358,4 @@ A response 400 BadRequest with a message \'Client/server ordering mismatch\' will\n A response 400 BadRequest with a message \'Content ordering is not supported by this resource\' will be returned if the container does not support ordering.\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/content_reorder.req\n+    :request: ../../src/plone/restapi/tests/http-examples/content_reorder.req\ndiff --git a/docs/source/controlpanels.rst b/docs/source/controlpanels.rst\nindex 8da15125..8afed7e9 100644\n--- a/docs/source/controlpanels.rst\n+++ b/docs/source/controlpanels.rst\n@@ -22,11 +22,11 @@ A list of all existing control panels in the portal can be retrieved by\n sending a GET request to the @controlpanels endpoint:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/controlpanels_get.req\n+    :request: ../../src/plone/restapi/tests/http-examples/controlpanels_get.req\n \n Response:\n \n-.. literalinclude:: _json/controlpanels_get.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/controlpanels_get.resp\n    :language: http\n \n The following fields are returned:\n@@ -43,11 +43,11 @@ To retrieve a single control panel, send a GET request to the URL of the\n control panel:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/controlpanels_get_item.req\n+    :request: ../../src/plone/restapi/tests/http-examples/controlpanels_get_item.req\n \n Response:\n \n-.. literalinclude:: _json/controlpanels_get_item.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/controlpanels_get_item.resp\n    :language: http\n \n \n@@ -67,11 +67,11 @@ To update the settings on a control panel send a PATCH request to control panel\n resource:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/controlpanels_patch.req\n+    :request: ../../src/plone/restapi/tests/http-examples/controlpanels_patch.req\n \n A successful response to a PATCH request will be indicated by a :term:`204 No Content` response:\n \n   HTTP/1.1 204 No Content\n \n-.. literalinclude:: _json/controlpanels_patch.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/controlpanels_patch.resp\n    :language: http\ndiff --git a/docs/source/copymove.rst b/docs/source/copymove.rst\nindex 0bb8665c..9fd12868 100644\n--- a/docs/source/copymove.rst\n+++ b/docs/source/copymove.rst\n@@ -9,12 +9,12 @@ destinations url with the source object specified in the request body. The sourc\n object can be specified either by url, path, UID or intid.\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/copy.req\n+    :request: ../../src/plone/restapi/tests/http-examples/copy.req\n \n If the copy operation succeeds, the server will respond with status 200 (OK) and return\n the new and old url of the copied object.\n \n-.. literalinclude:: _json/copy.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/copy.resp\n    :language: http\n \n \n@@ -26,12 +26,12 @@ destinations url with the source object specified in the request body. The sourc\n object can be specified either by url, path, UID or intid.\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/move.req\n+    :request: ../../src/plone/restapi/tests/http-examples/move.req\n \n If the move operation succeeds, the server will respond with status 200 (OK) and return\n the new and old url of the moved object.\n \n-.. literalinclude:: _json/move.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/move.resp\n    :language: http\n \n \n@@ -41,11 +41,11 @@ Copying/moving multiple objects\n Multiple objects can be moved/copied by giving a list of sources.\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/copy_multiple.req\n+    :request: ../../src/plone/restapi/tests/http-examples/copy_multiple.req\n \n If the operation succeeds, the server will respond with status 200 (OK) and return\n the new and old urls for each copied/moved object.\n \n \n-.. literalinclude:: _json/copy_multiple.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/copy_multiple.resp\n    :language: http\ndiff --git a/docs/source/expansion.rst b/docs/source/expansion.rst\nindex aeab6d3e..c56b7dfb 100644\n--- a/docs/source/expansion.rst\n+++ b/docs/source/expansion.rst\n@@ -38,11 +38,11 @@ in the reponse of any content GET request::\n Request Unexpanded:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/expansion.req\n+    :request: ../../src/plone/restapi/tests/http-examples/expansion.req\n \n Response Unexpanded:\n \n-.. literalinclude:: _json/expansion.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/expansion.resp\n    :language: http\n \n In order to expand and embed one or more components, use the "expand" GET\n@@ -87,19 +87,19 @@ component::\n Request Expanded:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/expansion_expanded.req\n+    :request: ../../src/plone/restapi/tests/http-examples/expansion_expanded.req\n \n Response Expanded:\n \n-.. literalinclude:: _json/expansion_expanded.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/expansion_expanded.resp\n    :language: http\n \n Here is an exaxmple of a request that expands all possible expansions:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/expansion_expanded_full.req\n+    :request: ../../src/plone/restapi/tests/http-examples/expansion_expanded_full.req\n \n And the response:\n \n-.. literalinclude:: _json/expansion_expanded_full.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/expansion_expanded_full.resp\n    :language: http\ndiff --git a/docs/source/groups.rst b/docs/source/groups.rst\nindex 1c557706..cf77173c 100644\n--- a/docs/source/groups.rst\n+++ b/docs/source/groups.rst\n@@ -9,23 +9,23 @@ List Groups\n To retrieve a list of all current groups in the portal, call the ``/@groups`` endpoint with a ``GET`` request:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/groups.req\n+    :request: ../../src/plone/restapi/tests/http-examples/groups.req\n \n The server will respond with a list of all groups in the portal:\n \n-.. literalinclude:: _json/groups.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/groups.resp\n    :language: http\n \n The endpoint supports some basic filtering:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/groups_filtered_by_groupname.req\n+    :request: ../../src/plone/restapi/tests/http-examples/groups_filtered_by_groupname.req\n \n The server will respond with a list the filtered groups in the portal with groupname starts with the query.\n \n The endpoint also takes a ``limit`` parameter that defaults to a maximum of 25 groups at a time for performance reasons.\n \n-.. literalinclude:: _json/groups_filtered_by_groupname.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/groups_filtered_by_groupname.resp\n    :language: http\n \n \n@@ -35,14 +35,14 @@ Create Group\n To create a new group, send a ``POST`` request to the global ``/@groups`` endpoint with a JSON representation of the group you want to create in the body:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/groups_created.req\n+    :request: ../../src/plone/restapi/tests/http-examples/groups_created.req\n \n .. note::\n     By default, "groupname" is a required field.\n \n If the group has been created successfully, the server will respond with a status ``201 (Created)``. The ``Location`` header contains the URL of the newly created group and the resource representation in the payload:\n \n-.. literalinclude:: _json/groups_created.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/groups_created.resp\n    :language: http\n \n \n@@ -52,11 +52,11 @@ Read Group\n To retrieve all details for a particular group, send a ``GET`` request to the ``/@groups`` endpoint and append the group id to the URL:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/groups_get.req\n+    :request: ../../src/plone/restapi/tests/http-examples/groups_get.req\n \n The server will respond with a ``200 OK`` status code and the JSON representation of the group in the body:\n \n-.. literalinclude:: _json/groups_get.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/groups_get.resp\n    :language: http\n \n Batching is supported for the \'users\' object.\n@@ -67,14 +67,14 @@ Update Group\n To update the settings of a group, send a ``PATCH`` request with the group details you want to amend to the URL of that particular group:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/groups_update.req\n+    :request: ../../src/plone/restapi/tests/http-examples/groups_update.req\n \n .. note::\n         The \'users\' object is a mapping of a user_id and a boolean indicating adding or removing from the group.\n \n A successful response to a PATCH request will be indicated by a :term:`204 No Content` response:\n \n-.. literalinclude:: _json/groups_update.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/groups_update.resp\n    :language: http\n \n \n@@ -84,9 +84,9 @@ Delete Group\n To delete a group send a ``DELETE`` request to the ``/@groups`` endpoint and append the group id of the group you want to delete:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/groups_delete.req\n+    :request: ../../src/plone/restapi/tests/http-examples/groups_delete.req\n \n A successful response will be indicated by a :term:`204 No Content` response:\n \n-.. literalinclude:: _json/groups_delete.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/groups_delete.resp\n    :language: js\ndiff --git a/docs/source/history.rst b/docs/source/history.rst\nindex cc1767d5..97e51047 100644\n--- a/docs/source/history.rst\n+++ b/docs/source/history.rst\n@@ -11,9 +11,9 @@ Listing the History of a Content Object\n Listing versions and history of a resource:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/history_get.req\n+    :request: ../../src/plone/restapi/tests/http-examples/history_get.req\n \n-.. literalinclude:: _json/history_get.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/history_get.resp\n    :language: http\n \n This following fields are returned:\n@@ -35,7 +35,7 @@ Get a Historical Version\n Older versions of a resource can be retrieved by appending `version` to the @history endpoint url.\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/history_get_versioned.req\n+    :request: ../../src/plone/restapi/tests/http-examples/history_get_versioned.req\n \n \n Revert to a Historical Version\n@@ -45,7 +45,7 @@ Reverting to an older versions of a resource can be done by sending a PATCH requ\n to.\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/history_revert.req\n+    :request: ../../src/plone/restapi/tests/http-examples/history_revert.req\n \n-.. literalinclude:: _json/history_revert.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/history_revert.resp\n    :language: http\ndiff --git a/docs/source/i18n.rst b/docs/source/i18n.rst\nindex 651b64f5..ae1fb13c 100644\n--- a/docs/source/i18n.rst\n+++ b/docs/source/i18n.rst\n@@ -32,11 +32,11 @@ negotiation" option.\n Using this option we can get the content-type titles translated:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/translated_messages_types.req\n+    :request: ../../src/plone/restapi/tests/http-examples/translated_messages_types.req\n \n And the response:\n \n-.. literalinclude:: _json/translated_messages_types.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/translated_messages_types.resp\n    :language: http\n \n \n@@ -44,22 +44,22 @@ All the field titles and descriptions, will also be translated. For instance for\n content type:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/translated_messages_types_folder.req\n+    :request: ../../src/plone/restapi/tests/http-examples/translated_messages_types_folder.req\n \n And the response:\n \n-.. literalinclude:: _json/translated_messages_types_folder.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/translated_messages_types_folder.resp\n    :language: http\n \n \n In a given object, the workflow state and actions will be translated too:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/translated_messages_object_workflow.req\n+    :request: ../../src/plone/restapi/tests/http-examples/translated_messages_object_workflow.req\n \n And the response:\n \n-.. literalinclude:: _json/translated_messages_object_workflow.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/translated_messages_object_workflow.resp\n    :language: http\n \n \n@@ -67,11 +67,11 @@ The same happens in the `@history` endpoint, all the relevant messages, will\n be shown translated:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/translated_messages_object_history.req\n+    :request: ../../src/plone/restapi/tests/http-examples/translated_messages_object_history.req\n \n And the response:\n \n-.. literalinclude:: _json/translated_messages_object_history.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/translated_messages_object_history.resp\n    :language: http\n \n \ndiff --git a/docs/source/ideas/hydra.rst b/docs/source/ideas/hydra.rst\nindex 43bed16c..979e68b1 100644\n--- a/docs/source/ideas/hydra.rst\n+++ b/docs/source/ideas/hydra.rst\n@@ -81,63 +81,63 @@ Implementation\n Plone Document:\n \n ..  http:example:: curl httpie python-requests\n-    :request: ../_json/document.req\n+    :request: ../../../src/plone/restapi/tests/http-examples/document.req\n \n-.. literalinclude:: ../source/_json/document.resp\n+.. literalinclude:: ../../../src/plone/restapi/tests/http-examples/document.resp\n    :language: http\n \n Plone Folder:\n \n ..  http:example:: curl httpie python-requests\n-    :request: ../_json/folder.req\n+    :request: ../../../src/plone/restapi/tests/http-examples/folder.req\n \n-.. literalinclude:: ../source/_json/folder.resp\n+.. literalinclude:: ../../../src/plone/restapi/tests/http-examples/folder.resp\n    :language: http\n \n Plone Portal Root:\n \n ..  http:example:: curl httpie python-requests\n-    :request: ../_json/siteroot.req\n+    :request: ../../../src/plone/restapi/tests/http-examples/siteroot.req\n \n-.. literalinclude:: ../source/_json/siteroot.resp\n+.. literalinclude:: ../../../src/plone/restapi/tests/http-examples/siteroot.resp\n    :language: http\n \n Collection:\n \n ..  http:example:: curl httpie python-requests\n-    :request: ../_json/collection.req\n+    :request: ../../../src/plone/restapi/tests/http-examples/collection.req\n \n-.. literalinclude:: ../source/_json/collection.resp\n+.. literalinclude:: ../../../src/plone/restapi/tests/http-examples/collection.resp\n    :language: http\n \n Plone Image:\n \n ..  http:example:: curl httpie python-requests\n-    :request: ../_json/image.req\n+    :request: ../../../src/plone/restapi/tests/http-examples/image.req\n \n-.. literalinclude:: ../source/_json/image.resp\n+.. literalinclude:: ../../../src/plone/restapi/tests/http-examples/image.resp\n    :language: http\n \n File:\n \n ..  http:example:: curl httpie python-requests\n-    :request: ../_json/file.req\n+    :request: ../../../src/plone/restapi/tests/http-examples/file.req\n \n-.. literalinclude:: ../source/_json/file.resp\n+.. literalinclude:: ../../../src/plone/restapi/tests/http-examples/file.resp\n    :language: http\n \n Link:\n \n ..  http:example:: curl httpie python-requests\n-    :request: ../_json/link.req\n+    :request: ../../../src/plone/restapi/tests/http-examples/link.req\n \n-.. literalinclude:: ../source/_json/link.resp\n+.. literalinclude:: ../../../src/plone/restapi/tests/http-examples/link.resp\n    :language: http\n \n News Item:\n \n ..  http:example:: curl httpie python-requests\n-    :request: ../_json/newsitem.req\n+    :request: ../../../src/plone/restapi/tests/http-examples/newsitem.req\n \n-.. literalinclude:: ../source/_json/newsitem.resp\n+.. literalinclude:: ../../../src/plone/restapi/tests/http-examples/newsitem.resp\n    :language: http\ndiff --git a/docs/source/index.rst b/docs/source/index.rst\nindex 0850a512..6cca136e 100644\n--- a/docs/source/index.rst\n+++ b/docs/source/index.rst\n@@ -45,6 +45,7 @@ Contents\n    tusupload\n    vocabularies\n    controlpanels\n+   tiles\n    customization\n    conventions\n    translations\ndiff --git a/docs/source/introduction.rst b/docs/source/introduction.rst\nindex 80d0f052..16e63701 100644\n--- a/docs/source/introduction.rst\n+++ b/docs/source/introduction.rst\n@@ -16,7 +16,7 @@ The entry point to the Plone RESTful API is the portal root.\n The client can ask for a :term:`REST` API response by setting the ``\'Accept\'`` HTTP header to ``\'application/json\'``:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/siteroot.req\n+    :request: ../../src/plone/restapi/tests/http-examples/siteroot.req\n \n \n This uses so-called \'content negotiation\'\n@@ -28,7 +28,7 @@ This uses so-called \'content negotiation\'\n \n The server will then respond with the portal root in the JSON format:\n \n-.. literalinclude:: _json/siteroot.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/siteroot.resp\n    :language: http\n \n ``@id`` is a unique identifier for resources (IRIs).\n@@ -45,9 +45,9 @@ Another example, this time showing a request and response for a document.\n Click on the buttons below to show the different syntaxes for the request.\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/document.req\n+    :request: ../../src/plone/restapi/tests/http-examples/document.req\n \n-.. literalinclude:: _json/document.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/document.resp\n    :language: http\n \n And so on, see\ndiff --git a/docs/source/locking.rst b/docs/source/locking.rst\nindex 56097e06..2c445792 100644\n--- a/docs/source/locking.rst\n+++ b/docs/source/locking.rst\n@@ -13,12 +13,12 @@ Locking an object\n To lock an object send a POST request to the ``/@lock`` endpoint that is available on any content object in Plone:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/lock.req\n+    :request: ../../src/plone/restapi/tests/http-examples/lock.req\n \n If the lock operation succeeds, the server will respond with status :term:`200 OK` and return various information\n about the lock including the lock token. The token is needed in later requests to update the locked object.\n \n-.. literalinclude:: _json/lock.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/lock.resp\n    :language: http\n \n \n@@ -30,12 +30,12 @@ To create a lock with a non-default timeout, you can pass the the timeout value\n The following example creates a non-stealable lock with a timeout of 1h.\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/lock_nonstealable_timeout.req\n+    :request: ../../src/plone/restapi/tests/http-examples/lock_nonstealable_timeout.req\n \n \n The server responds with status :term:`200 OK` and returns the lock information.\n \n-.. literalinclude:: _json/lock_nonstealable_timeout.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/lock_nonstealable_timeout.resp\n    :language: http\n \n \n@@ -45,11 +45,11 @@ Unlocking an object\n To unlock an object send a POST request to the ``/@unlock`` endpoint.\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/unlock.req\n+    :request: ../../src/plone/restapi/tests/http-examples/unlock.req\n \n The server responds with status :term:`200 OK` and returns the lock information.\n \n-.. literalinclude:: _json/unlock.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/unlock.resp\n    :language: http\n \n \n@@ -59,11 +59,11 @@ Refreshing a lock\n An existing lock can be refreshed by sending a POST request to the ``@refresh-lock`` endpoint.\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/refresh_lock.req\n+    :request: ../../src/plone/restapi/tests/http-examples/refresh_lock.req\n \n The server responds with status :term:`200 OK` and returns the lock information containing the updated creation time.\n \n-.. literalinclude:: _json/refresh_lock.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/refresh_lock.resp\n    :language: http\n \n \n@@ -74,11 +74,11 @@ To find out if an object is locked or to get information about the current lock\n you can send a GET request to the ``@lock`` endpoint.\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/lock_get.req\n+    :request: ../../src/plone/restapi/tests/http-examples/lock_get.req\n \n The server responds with status :term:`200 OK` and returns the information about the lock.\n \n-.. literalinclude:: _json/lock_get.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/lock_get.resp\n    :language: http\n \n \n@@ -89,4 +89,4 @@ To update a locked object with a PATCH request, you have to provide the lock\n token with the ``Lock-Token`` header.\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/lock_update.req\n+    :request: ../../src/plone/restapi/tests/http-examples/lock_update.req\ndiff --git a/docs/source/navigation.rst b/docs/source/navigation.rst\nindex e0b5447d..64ed697f 100644\n--- a/docs/source/navigation.rst\n+++ b/docs/source/navigation.rst\n@@ -9,11 +9,11 @@ Top-Level Navigation\n Getting the top navigation items:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/navigation.req\n+    :request: ../../src/plone/restapi/tests/http-examples/navigation.req\n \n Example response:\n \n-.. literalinclude:: _json/navigation.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/navigation.resp\n    :language: http\n \n \n@@ -23,9 +23,9 @@ Navigation Tree\n Getting the navigation item tree providing a `expand.navigation.depth` parameter:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/navigation_tree.req\n+    :request: ../../src/plone/restapi/tests/http-examples/navigation_tree.req\n \n Example response:\n \n-.. literalinclude:: _json/navigation_tree.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/navigation_tree.resp\n    :language: http\ndiff --git a/docs/source/plone-content.rst b/docs/source/plone-content.rst\nindex d72ccd90..d179dc98 100644\n--- a/docs/source/plone-content.rst\n+++ b/docs/source/plone-content.rst\n@@ -15,9 +15,9 @@ Plone Portal Root:\n ------------------\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/siteroot.req\n+    :request: ../../src/plone/restapi/tests/http-examples/siteroot.req\n \n-.. literalinclude:: _json/siteroot.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/siteroot.resp\n    :language: http\n \n \n@@ -25,9 +25,9 @@ Plone Folder:\n -------------\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/folder.req\n+    :request: ../../src/plone/restapi/tests/http-examples/folder.req\n \n-.. literalinclude:: _json/folder.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/folder.resp\n    :language: http\n \n \n@@ -35,19 +35,24 @@ Plone Document:\n ---------------\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/document.req\n+    :request: ../../src/plone/restapi/tests/http-examples/document.req\n \n-.. literalinclude:: _json/document.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/document.resp\n    :language: http\n \n \n News Item:\n ----------\n \n+.. note::\n+    Here we show ``uuid1`` as an example uid for all image scales because this documentation\n+    is autogenerated by the tests. When running in a real application, these ``uuid1``\n+    values will be exchanged by proper uuid4 values.\n+\n ..  http:example:: curl httpie python-requests\n-    :request: _json/newsitem.req\n+    :request: ../../src/plone/restapi/tests/http-examples/newsitem.req\n \n-.. literalinclude:: _json/newsitem.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/newsitem.resp\n    :language: http\n \n \n@@ -55,19 +60,25 @@ Event:\n ------\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/event.req\n+    :request: ../../src/plone/restapi/tests/http-examples/event.req\n \n-.. literalinclude:: _json/event.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/event.resp\n    :language: http\n \n \n Image:\n ------\n \n+.. note::\n+    Here we show ``uuid1`` as an example uid for all image scales because this documentation\n+    is autogenerated by the tests. When running in a real application, these ``uuid1``\n+    values will be exchanged by proper uuid4 values.\n+\n+\n ..  http:example:: curl httpie python-requests\n-    :request: _json/image.req\n+    :request: ../../src/plone/restapi/tests/http-examples/image.req\n \n-.. literalinclude:: _json/image.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/image.resp\n    :language: http\n \n \n@@ -75,9 +86,9 @@ File:\n -----\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/file.req\n+    :request: ../../src/plone/restapi/tests/http-examples/file.req\n \n-.. literalinclude:: _json/file.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/file.resp\n    :language: http\n \n \n@@ -85,9 +96,9 @@ Link:\n -----\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/link.req\n+    :request: ../../src/plone/restapi/tests/http-examples/link.req\n \n-.. literalinclude:: _json/link.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/link.resp\n    :language: http\n \n \n@@ -95,7 +106,7 @@ Collection:\n -----------\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/collection.req\n+    :request: ../../src/plone/restapi/tests/http-examples/collection.req\n \n-.. literalinclude:: _json/collection.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/collection.resp\n    :language: http\ndiff --git a/docs/source/principals.rst b/docs/source/principals.rst\nindex a6d9ced9..ed3e2e1e 100644\n--- a/docs/source/principals.rst\n+++ b/docs/source/principals.rst\n@@ -11,9 +11,9 @@ Search Principals\n To retrieve a list of principals given a search string, call the ``/@principals`` endpoint with a GET request and a ``search`` query parameter:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/principals.req\n+    :request: ../../src/plone/restapi/tests/http-examples/principals.req\n \n The server will respond with a list of the users and groups in the portal that match the query string:\n \n-.. literalinclude:: _json/principals.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/principals.resp\n    :language: http\ndiff --git a/docs/source/registry.rst b/docs/source/registry.rst\nindex eacb9183..476d7e89 100644\n--- a/docs/source/registry.rst\n+++ b/docs/source/registry.rst\n@@ -15,11 +15,11 @@ Reading registry records\n Reading a single record:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/registry_get.req\n+    :request: ../../src/plone/restapi/tests/http-examples/registry_get.req\n \n Example Response:\n \n-.. literalinclude:: _json/registry_get.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/registry_get.resp\n    :language: http\n \n \n@@ -35,11 +35,11 @@ value: The record\'s value. This is the same as GETting `@registry/name`.\n \n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/registry_get_list.req\n+    :request: ../../src/plone/restapi/tests/http-examples/registry_get_list.req\n \n Example Response:\n \n-.. literalinclude:: _json/registry_get_list.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/registry_get_list.resp\n    :language: http\n \n \n@@ -49,9 +49,9 @@ Updating registry records\n Updating an existing record:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/registry_update.req\n+    :request: ../../src/plone/restapi/tests/http-examples/registry_update.req\n \n Example Response:\n \n-.. literalinclude:: _json/registry_update.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/registry_update.resp\n    :language: http\n\\ No newline at end of file\ndiff --git a/docs/source/roles.rst b/docs/source/roles.rst\nindex ce80e47f..cef25319 100644\n--- a/docs/source/roles.rst\n+++ b/docs/source/roles.rst\n@@ -9,11 +9,11 @@ List Roles\n To retrieve a list of all roles in the portal, call the ``/@roles`` endpoint with a ``GET`` request:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/roles.req\n+    :request: ../../src/plone/restapi/tests/http-examples/roles.req\n \n The server will respond with a list of all roles in the portal:\n \n-.. literalinclude:: _json/roles.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/roles.resp\n    :language: http\n \n The role ``title`` is the translated role title as displayed in Plone\'s\ndiff --git a/docs/source/searching.rst b/docs/source/searching.rst\nindex 91b19754..e832f630 100644\n--- a/docs/source/searching.rst\n+++ b/docs/source/searching.rst\n@@ -17,9 +17,9 @@ In terms of the resulting catalog query this means that, by default, a search wi\n Search results are represented similar to collections:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/search.req\n+    :request: ../../src/plone/restapi/tests/http-examples/search.req\n \n-.. literalinclude:: _json/search.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/search.resp\n    :language: http\n \n The default representation for search results is a summary that contains only the most basic information.\ndiff --git a/docs/source/serialization.rst b/docs/source/serialization.rst\nindex 333cf7ee..c7e7c246 100644\n--- a/docs/source/serialization.rst\n+++ b/docs/source/serialization.rst\n@@ -79,18 +79,20 @@ and will get a response containing the file.\n \n Image fields are serialized in the same way, except that their serialization\n contains their ``width`` and ``height``, and an additional property\n-``scales`` that contains a mapping with the available image scales:\n+``scales`` that contains a mapping with the available image scales.\n+Image URLs are created using the UID-based URL that changes each time the image\n+is modified, so these URLs can be properly cached:\n \n .. code-block:: json\n \n     {\n       "icon": {\n-        "download": "http://localhost:55001/plone/image/@@images/image/icon",\n+        "download": "http://localhost:55001/plone/image/@@images/8eed3f80-5e1f-4115-85b8-650a10a6ca84.png",\n         "height": 32,\n         "width": 24\n       },\n       "large": {\n-        "download": "http://localhost:55001/plone/image/@@images/image/large",\n+        "download": "http://localhost:55001/plone/image/@@images/0d1824d1-2672-4b62-9277-aeb220d3bf15.png",\n         "height": 768,\n         "width": 576\n       },\ndiff --git a/docs/source/sharing.rst b/docs/source/sharing.rst\nindex c4cbc5ee..d83b87b8 100644\n--- a/docs/source/sharing.rst\n+++ b/docs/source/sharing.rst\n@@ -34,9 +34,9 @@ In plone.restapi, the representation of any content object will include a hyperm\n The sharing information of a content object can also be directly accessed by appending ``/@sharing`` to the GET request to the URL of a content object. E.g. to access the sharing information for a top-level folder, do:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/sharing_folder_get.req\n+    :request: ../../src/plone/restapi/tests/http-examples/sharing_folder_get.req\n \n-.. literalinclude:: _json/sharing_folder_get.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/sharing_folder_get.resp\n    :language: http\n \n The ``available_roles`` property contains the list of roles that can be\n@@ -51,9 +51,9 @@ Users and/or groups without a sharing entry can be found by appending the argume\n Global roles are marked with the string ``"global"``. Inherited roles are marked with the string ``"acquired"``.\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/sharing_search.req\n+    :request: ../../src/plone/restapi/tests/http-examples/sharing_search.req\n \n-.. literalinclude:: _json/sharing_search.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/sharing_search.resp\n    :language: http\n \n \n@@ -63,7 +63,7 @@ Updating Local Roles\n You can update the \'sharing\' information by sending a POST request to the object URL and appending ``/@sharing``, e.g. ``/plone/folder/@sharing``. E.g. say you want to give the ``AuthenticatedUsers`` group the ``Reader`` local role for a folder:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/sharing_folder_post.req\n+    :request: ../../src/plone/restapi/tests/http-examples/sharing_folder_post.req\n \n-.. literalinclude:: _json/sharing_folder_post.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/sharing_folder_post.resp\n    :language: http\ndiff --git a/docs/source/tiles.rst b/docs/source/tiles.rst\nnew file mode 100644\nindex 00000000..589b13bb\n--- /dev/null\n+++ b/docs/source/tiles.rst\n@@ -0,0 +1,230 @@\n+Tiles\n+=====\n+\n+.. note::\n+  The tiles endpoint currently match only partially (the GET endpoints) the default Plone implementation.\n+  The serialization of tiles didn\'t match the Mosaic (and plone.app.blocks) implementation and it\'s done to\n+  not rely on those technologies. The serialization of the tile information on objects are subject to change in\n+  the future to extend or improve features.\n+\n+A tile is an HTML snippet that can contain arbitrary content (e.g. text, images, videos).\n+\n+The @tiles endpoint is context specific.\n+Called on the portal root it will list all available tiles,\n+and allows to retrieve the JSON schema for those tiles.\n+\n+If called on a content object, it will return the tiles that are actually stored on that content object.\n+\n+Listing available tiles\n+-----------------------\n+\n+List all available tiles type by sending a GET request to the @tiles endpoint on the portal roots::\n+\n+  GET /plone/@tiles HTTP/1.1\n+  Accept: application/json\n+  Authorization: Basic YWRtaW46c2VjcmV0\n+\n+The server responds with a `Status 200` and list all available tiles::\n+\n+  HTTP/1.1 200 OK\n+  Content-Type: application/json\n+  [\n+    {\n+      "@id": "http://localhost:55001/plone/@tiles/title",\n+      "title": "Title tile",\n+      "description": "A field tile that will show the title of the content object",\n+    },\n+    {\n+      "@id": "http://localhost:55001/plone/@tiles/description",\n+      "title": "Description tile",\n+      "description": "A field tile that will show the description of the content object",\n+    },\n+  ]\n+\n+Retrieve Tile JSON schema\n+-------------------------\n+\n+Retrieve the JSON schema of a specific tile by calling the \'@tiles\' endpoint with the id of the tile::\n+\n+  GET /plone/@tiles/title HTTP/1.1\n+  Accept: application/json\n+  Authorization: Basic YWRtaW46c2VjcmV0\n+\n+The server responds with a JSON schema definition for that particular tile::\n+\n+  HTTP/1.1 200 OK\n+  Content-Type: application/json+schema\n+\n+  {\n+    "properties": {\n+      "title": {\n+        "description": "",\n+        "title": "Title",\n+        "type": "string"\n+      },\n+      ...\n+    },\n+    "required": [\n+      "title",\n+    ],\n+    "title": "Title Tile",\n+    "type": "object"\n+  }\n+\n+\n+Retrieving tiles on a content object\n+------------------------------------\n+\n+Retrieve a list of tiles stored on a content object by calling the @tiles endpoint on a content object::\n+\n+  GET /plone/my-document/@tiles HTTP/1.1\n+  Accept: application/json\n+  Authorization: Basic YWRtaW46c2VjcmV0\n+\n+The server responds with a `Status 200` and list all stored tiles on that content object::\n+\n+  HTTP/1.1 200 OK\n+  Content-Type: application/json\n+  {\n+    "@id": "http://localhost:55001/plone/my-document",\n+    ...\n+    "tiles": [\n+      {\n+        "@id": "http://localhost:55001/plone/my-document/@tiles/my-title",\n+        "type": "title",\n+      },\n+      {\n+        "@id": "http://localhost:55001/plone/my-document/@tiles/my-description",\n+        "type": "description",\n+      },\n+      {\n+        "@id": "http://localhost:55001/plone/my-document/@tiles/image-1",\n+        "type": "image",\n+        "data": {\n+          "image": "<some random url>",\n+          "caption": "My pony",\n+        },\n+      },\n+      {\n+        "type": "image",\n+        "data": {\n+          "image": "<some random url>",\n+          "caption": "My cow",\n+        },\n+      },\n+    ]\n+  }\n+\n+\n+Fetching tiles on an object\n+---------------------------\n+Tiles data are stored in the objects via a Dexterity behavior `plone.tiles`. It has two attributes that stores existing tiles in the object (`tiles`) and the current layout (`tiles_layout`).\n+As it\'s a dexterity behavior, both attributes will be returned in a simple GET::\n+\n+  GET /plone/my-document HTTP/1.1\n+  Accept: application/json\n+  Authorization: Basic YWRtaW46c2VjcmV0\n+  Content-Type: application/json\n+\n+  {\n+    "@id": "http://localhost:55001/plone/my-document",\n+    ...\n+    "tiles_layout": [\n+      "#title-1",\n+      "#description-1",\n+      "#image-1"\n+    ],\n+    "tiles": {\n+      "#title-1": {\n+        "@type": "title"\n+      },\n+      "#description-1": {\n+        "@type": "Description"\n+      },\n+      "#image-1": {\n+        "@type": "Image",\n+        "image": "<some random url>"\n+      }\n+    }\n+  }\n+\n+Tiles objects will contain the tile metadata and the information to render it.\n+\n+\n+Adding tiles to an object\n+-------------------------\n+\n+Storing tiles is done also via a default PATCH content operation::\n+\n+  PATCH /plone/my-document HTTP/1.1\n+  Accept: application/json\n+  Authorization: Basic YWRtaW46c2VjcmV0\n+  Content-Type: application/json\n+\n+  {\n+    "tiles_layout": [\n+      "#title-1",\n+      "#description-1",\n+      "#image-1"\n+    ],\n+    "tiles": {\n+      "#title-1": {\n+        "@type": "title"\n+      },\n+      "#description-1": {\n+        "@type": "Description"\n+      },\n+      "#image-1": {\n+        "@type": "Image",\n+        "image": "<some random url>"\n+      }\n+    }\n+  }\n+\n+If the tile has been added, the server responds with a `204` status code.\n+\n+\n+Proposal on saving tiles layout\n+--------------------------------\n+\n+.. note::\n+  This is not implemented (yet) in the tiles_layout field, but it\'s a proposal on\n+  how could look like in the future. For now, we stick with the implementation shown in\n+  previous sections.\n+\n+They might be serialized using this structure::\n+\n+  [\n+    [\n+      id: UUID,\n+      columns: [\n+        {\n+          id: UUID, // column UUID\n+          size: int // the size of the column\n+          rows: [\n+            {\n+              id: UUID, // inner row UUID\n+              cells: [\n+                {\n+                  id: UUID, // cell UUID\n+                  component: string\n+                  content: {\n+                    // tile fields serialization (or tile id referal)\n+                  },\n+                  size: int\n+                },\n+              ]\n+            }\n+          ]\n+        },\n+      ]\n+    ], // row 1\n+    [], // row 2\n+  ]\n+\n+It tries to match the usual way of CSS frameworks to map grid systems. So we have:\n+\n+row (orderables up/down) -> column (resizables on width) -> row -> cell (actual tile content)\n+\n+Rows are orderable vertically, columns resizables horizontally and cells can be\n+moved around to an specific inner row.\ndiff --git a/docs/source/translations.rst b/docs/source/translations.rst\nindex 6a92aa3f..f422cf6c 100644\n--- a/docs/source/translations.rst\n+++ b/docs/source/translations.rst\n@@ -29,7 +29,7 @@ endpoint including the `id` of the content which should be linked to. The\n \n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/translations_post.req\n+    :request: ../../src/plone/restapi/tests/http-examples/translations_post.req\n \n \n .. note::\n@@ -38,7 +38,7 @@ endpoint including the `id` of the content which should be linked to. The\n The API will return a `201 Created` response if the linking was successful.\n \n \n-.. literalinclude:: _json/translations_post.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/translations_post.resp\n    :language: http\n \n \n@@ -47,9 +47,9 @@ content item by issuing a ``GET`` request on the `@translations` endpoint of\n that content item.:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/translations_get.req\n+    :request: ../../src/plone/restapi/tests/http-examples/translations_get.req\n \n-.. literalinclude:: _json/translations_get.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/translations_get.resp\n    :language: http\n \n \n@@ -58,12 +58,12 @@ endpoint of the content item and provide the language code you want to unlink.:\n \n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/translations_delete.req\n+    :request: ../../src/plone/restapi/tests/http-examples/translations_delete.req\n \n .. note::\n     "language" is a required field.\n \n-.. literalinclude:: _json/translations_delete.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/translations_delete.resp\n    :language: http\n \n \ndiff --git a/docs/source/tusupload.rst b/docs/source/tusupload.rst\nindex 483b7e84..5d37cdec 100644\n--- a/docs/source/tusupload.rst\n+++ b/docs/source/tusupload.rst\n@@ -13,11 +13,11 @@ Creating an Upload URL\n To create a new upload, send a POST request to the `@tus-upload` endpoint.\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/tusupload_post.req\n+    :request: ../../src/plone/restapi/tests/http-examples/tusupload_post.req\n \n The server will return a temporary upload URL in the location header of the response:\n \n-.. literalinclude:: _json/tusupload_post.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/tusupload_post.resp\n    :language: http\n \n The file can then be uploaded in the next step to that temporary URL.\n@@ -30,13 +30,13 @@ Uploading a File\n \n Once a temporary upload URL has been created, a client can send a PATCH request to upload a file. The file content should be send in the body of the request:\n \n-.. literalinclude:: _json/tusupload_patch_finalized.req\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/tusupload_patch_finalized.req\n    :language: http\n \n When just a single file is uploaded at once, the server will respond with a `204: No Content` response after a successful upload.\n The HTTP location header contains he URL of the newly created content object:\n \n-.. literalinclude:: _json/tusupload_patch_finalized.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/tusupload_patch_finalized.resp\n    :language: http\n \n \n@@ -46,13 +46,13 @@ Partial Upload\n TUS allows partial upload of files.\n A partial file is also uploaded by sending a PATCH request to the temporary URL:\n \n-.. literalinclude:: _json/tusupload_patch.req\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/tusupload_patch.req\n    :language: http\n \n The server will also respond with a `204: No content` response.\n Though, instead of providing the final file URL in the \'location\' header, the server provides an updated \'Upload-Offset\' value, to tell the client the new offset:\n \n-.. literalinclude:: _json/tusupload_patch.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/tusupload_patch.resp\n    :language: http\n \n When the last partial file has been uploaded, the server will contain the final file URL in the \'location\' header.\n@@ -63,23 +63,23 @@ Replacing Existing Files\n \n TUS can also be used to replace an existing file by sending a POST request to the `@tus-replace` endpoint instead.\n \n-.. literalinclude:: _json/tusreplace_post.req\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/tusreplace_post.req\n    :language: http\n \n The server will respond with a `201: Created` status and return the URL of the temprorary created upload resource\n in the location header of the response:\n \n-.. literalinclude:: _json/tusupload_post.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/tusupload_post.resp\n    :language: http\n \n The file can then be uploaded to that URL using the PATCH method in the same way as creating a new file:\n \n-.. literalinclude:: _json/tusreplace_patch.req\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/tusreplace_patch.req\n    :language: http\n \n The server will respond with a `204: No Content` response and the final file URL in the HTTP location header:\n \n-.. literalinclude:: _json/tusreplace_patch.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/tusreplace_patch.resp\n    :language: http\n \n \n@@ -89,11 +89,11 @@ Asking for the Current File Offset\n To ask the server for the current file offset, the client can send a HEAD request to the upload URL:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/tusupload_head.req\n+    :request: ../../src/plone/restapi/tests/http-examples/tusupload_head.req\n \n The server will respond with a `200: Ok` status and the current file offset in the \'Upload-Offset\' header:\n \n-.. literalinclude:: _json/tusupload_head.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/tusupload_head.resp\n    :language: http\n \n \n@@ -103,11 +103,11 @@ Configuration and Options\n The current TUS configuration and a list of supported options can be retrieved sending an OPTIONS request to the `@tus-upload` endpoint:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/tusupload_options.req\n+    :request: ../../src/plone/restapi/tests/http-examples/tusupload_options.req\n \n The server will respond with a `204: No content` status and HTTP headers containing information about the available extentions and the TUS version:\n \n-.. literalinclude:: _json/tusupload_options.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/tusupload_options.resp\n    :language: http\n \n \ndiff --git a/docs/source/types.rst b/docs/source/types.rst\nindex df35f739..6cec37ae 100644\n--- a/docs/source/types.rst\n+++ b/docs/source/types.rst\n@@ -8,9 +8,9 @@ Available content types in a Plone site can be listed and queried by accessing t\n \n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/types.req\n+    :request: ../../src/plone/restapi/tests/http-examples/types.req\n \n-.. literalinclude:: _json/types.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/types.resp\n    :language: http\n \n \n@@ -18,9 +18,9 @@ Available content types in a Plone site can be listed and queried by accessing t\n To get the schema of a content type, access the ``/@types`` endpoint  with the name of the content type, e.g. \'/plone/@types/Document\':\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/types_document.req\n+    :request: ../../src/plone/restapi/tests/http-examples/types_document.req\n \n-.. literalinclude:: _json/types_document.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/types_document.resp\n    :language: http\n \n The content type schema uses the `JSON Schema <http://json-schema.org/>`_ format.\ndiff --git a/docs/source/upgrade-guide.rst b/docs/source/upgrade-guide.rst\nindex 5743a264..709d94bb 100644\n--- a/docs/source/upgrade-guide.rst\n+++ b/docs/source/upgrade-guide.rst\n@@ -7,6 +7,44 @@ This upgrade guide lists all breaking changes in plone.restapi and explains the\n Upgrading to plone.restapi 3.x\n ------------------------------\n \n+Image scales\n+^^^^^^^^^^^^\n+\n+Image download URLs and image scale URLs are created using the UID based url formats. This allows Plone to create different URLs when the image changes and thus ensuring caches are updated.\n+\n+Old Response:: \n+\n+     {\n+       "icon": {\n+         "download": "http://localhost:55001/plone/image/@@images/image/icon",\n+         "height": 32,\n+         "width": 24\n+       },\n+       "large": {\n+         "download": "http://localhost:55001/plone/image/@@images/image/large",\n+         "height": 768,\n+         "width": 576\n+       },\n+       ...\n+      }\n+\n+New Response::\n+\n+     {\n+       "icon": {\n+         "download": "http://localhost:55001/plone/image/@@images/8eed3f80-5e1f-4115-85b8-650a10a6ca84.png",\n+         "height": 32,\n+         "width": 24\n+       },\n+       "large": {\n+         "download": "http://localhost:55001/plone/image/@@images/0d1824d1-2672-4b62-9277-aeb220d3bf15.png",\n+         "height": 768,\n+         "width": 576\n+       },\n+      ...\n+      }\n+     \n+\n @sharing endpoint\n ^^^^^^^^^^^^^^^^^\n \n@@ -64,6 +102,19 @@ New Response::\n   }\n \n \n+Custom Content Deserializers\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+If you have implemented custom content deserializers, you have to handle the\n+new ``create`` keyword in the ``__call__`` method, which determines if deserialization\n+is performed during object creation or while updating an object.\n+\n+Deserializers should only fire an ``IObjectModifiedEvent`` event if an object\n+has been updated. They should not fire it, when a new object has been created.\n+\n+See `Dexterity content deserializer <https://github.com/plone/plone.restapi/blob/master/src/plone/restapi/deserializer/dxcontent.py>`_ for an example.\n+\n+\n Upgrading to plone.restapi 2.x\n ------------------------------\n \ndiff --git a/docs/source/users.rst b/docs/source/users.rst\nindex 3dae824a..c4a2a689 100644\n--- a/docs/source/users.rst\n+++ b/docs/source/users.rst\n@@ -9,44 +9,44 @@ List Users\n To retrieve a list of all current users in the portal, call the ``/@users`` endpoint with a ``GET`` request:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/users.req\n+    :request: ../../src/plone/restapi/tests/http-examples/users.req\n \n The server will respond with a list of all users in the portal:\n \n-.. literalinclude:: _json/users.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/users.resp\n    :language: http\n \n \n This only works for Manager users, anonymous users or logged-in users without Manager rights are now allowed to list users. This is the example as an anonymous user:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/users_anonymous.req\n+    :request: ../../src/plone/restapi/tests/http-examples/users_anonymous.req\n \n The server will return a 401 Unauthorized status code\n \n-.. literalinclude:: _json/users_anonymous.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/users_anonymous.resp\n    :language: http\n \n \n And this one as an user without the proper rights:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/users_unauthorized.req\n+    :request: ../../src/plone/restapi/tests/http-examples/users_unauthorized.req\n \n The server will return a 401 Unauthorized status code\n \n-.. literalinclude:: _json/users_unauthorized.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/users_unauthorized.resp\n    :language: http\n \n \n The endpoint supports some basic filtering:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/users_filtered_by_username.req\n+    :request: ../../src/plone/restapi/tests/http-examples/users_filtered_by_username.req\n \n The server will respond with a list the filtered users in the portal with username starts with the query.\n \n-.. literalinclude:: _json/users_filtered_by_username.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/users_filtered_by_username.resp\n    :language: http\n \n The endpoint also takes a ``limit`` parameter that defaults to a maximum of 25 users at a time for performance reasons.\n@@ -58,7 +58,7 @@ Create User\n To create a new user, send a ``POST`` request to the global ``/@users`` endpoint with a JSON representation of the user you want to create in the body:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/users_created.req\n+    :request: ../../src/plone/restapi/tests/http-examples/users_created.req\n \n \n .. note::\n@@ -68,7 +68,7 @@ To create a new user, send a ``POST`` request to the global ``/@users`` endpoint\n \n If the user has been created successfully, the server will respond with a status 201 (Created). The ``Location`` header contains the URL of the newly created user and the resource representation in the payload:\n \n-.. literalinclude:: _json/users_created.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/users_created.resp\n    :language: http\n \n If no roles has been specified, then a default ``Member`` role is added as a sensible default.\n@@ -80,11 +80,11 @@ Read User\n To retrieve all details for a particular user, send a ``GET`` request to the ``/@users`` endpoint and append the user id to the URL:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/users_get.req\n+    :request: ../../src/plone/restapi/tests/http-examples/users_get.req\n \n The server will respond with a 200 OK status code and the JSON representation of the user in the body:\n \n-.. literalinclude:: _json/users_get.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/users_get.resp\n    :language: http\n \n The key \'roles\' lists the globally defined roles for the user.\n@@ -92,31 +92,31 @@ The key \'roles\' lists the globally defined roles for the user.\n Only users with Manager rights are allowed to get other users\' information:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/users_unauthorized_get.req\n+    :request: ../../src/plone/restapi/tests/http-examples/users_unauthorized_get.req\n \n If the user lacks this rights, the server will respond with a 401 Unauthorized status code:\n \n-.. literalinclude:: _json/users_unauthorized_get.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/users_unauthorized_get.resp\n    :language: http\n \n Also anonymous users are not allowed to get users\' information:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/users_anonymous_get.req\n+    :request: ../../src/plone/restapi/tests/http-examples/users_anonymous_get.req\n \n If the user is an anonymous one, the server will respond with a 401 Unauthorized status code:\n \n-.. literalinclude:: _json/users_anonymous_get.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/users_anonymous_get.resp\n    :language: http\n \n But each user is allowed to get its own information.\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/users_authorized_get.req\n+    :request: ../../src/plone/restapi/tests/http-examples/users_authorized_get.req\n \n In this case, the server will respond with a 200 OK status code and the JSON respresentation of the user in the body:\n \n-.. literalinclude:: _json/users_authorized_get.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/users_authorized_get.resp\n    :language: http\n \n Update User\n@@ -125,11 +125,11 @@ Update User\n To update the settings of a user, send a ``PATCH`` request with the user details you want to amend to the URL of that particular user, e.g. if you want to update the email address of the admin user to:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/users_update.req\n+    :request: ../../src/plone/restapi/tests/http-examples/users_update.req\n \n A successful response to a PATCH request will be indicated by a :term:`204 No Content` response:\n \n-.. literalinclude:: _json/users_update.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/users_update.resp\n    :language: http\n \n .. note::\n@@ -143,11 +143,11 @@ Delete User\n To delete a user send a ``DELETE`` request to the ``/@users`` endpoint and append the user id of the user you want to delete, e.g. to delete the user with the id johndoe:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/users_delete.req\n+    :request: ../../src/plone/restapi/tests/http-examples/users_delete.req\n \n A successful response will be indicated by a :term:`204 No Content` response:\n \n-.. literalinclude:: _json/users_delete.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/users_delete.resp\n    :language: http\n \n \n@@ -161,14 +161,14 @@ This new user will have the role ``Member`` by default as the Plone registration\n To create a new user send a POST request to the \'@users\' endpoint:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/users_add.req\n+    :request: ../../src/plone/restapi/tests/http-examples/users_add.req\n \n If the user should receive an email to set her password, you should pass \'sendPasswordReset": true\' in the JSON body of the request.\n Keep in mind that Plone will send a URL that points to the URL of the Plone site, which might just be your API endpoint.\n \n If the user has been created, the server will respond with a :term:`201 Created` response:\n \n-..  literalinclude:: _json/users_add.resp\n+..  literalinclude:: ../../src/plone/restapi/tests/http-examples/users_add.resp\n     :language: http\n \n \n@@ -187,7 +187,7 @@ The token that is part of the reset url in the email can be used to\n authorize setting a new password:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/users_reset.req\n+    :request: ../../src/plone/restapi/tests/http-examples/users_reset.req\n \n \n Reset Own Password\ndiff --git a/docs/source/vocabularies.rst b/docs/source/vocabularies.rst\nindex 2de3babf..64d09a42 100644\n--- a/docs/source/vocabularies.rst\n+++ b/docs/source/vocabularies.rst\n@@ -16,12 +16,12 @@ Get all vocabularies\n To get a list of all the available content types, you can query using a GET to the @vocabulary endpoint:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/vocabularies.req\n+    :request: ../../src/plone/restapi/tests/http-examples/vocabularies.req\n \n The response will include a list with all the dotted names of the available\n vocabularies in Plone.\n \n-.. literalinclude:: _json/vocabularies.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/vocabularies.resp\n    :language: http\n \n Get a vocabulary\n@@ -34,9 +34,9 @@ endpoint can be used with the site root and content objects. The right way is\n depending on the implementation of the vocabulary.\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/vocabularies_get.req\n+    :request: ../../src/plone/restapi/tests/http-examples/vocabularies_get.req\n \n The server will respond with a list of terms. The title is pureley for display purposes. The token is what should be send to the server to retrive the value of the term.\n \n-.. literalinclude:: _json/vocabularies_get.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/vocabularies_get.resp\n    :language: http\ndiff --git a/docs/source/workflow.rst b/docs/source/workflow.rst\nindex 5fd42d43..3b336ff4 100644\n--- a/docs/source/workflow.rst\n+++ b/docs/source/workflow.rst\n@@ -8,25 +8,25 @@ In Plone, content almost always has a :term:`workflow` attached.\n We can get the current state and history of an object by issuing a ``GET`` request using on any context:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/workflow_get.req\n+    :request: ../../src/plone/restapi/tests/http-examples/workflow_get.req\n \n-.. literalinclude:: _json/workflow_get.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/workflow_get.resp\n    :language: http\n \n \n Now, if we want to change the state of the front page to publish, we would proceed by issuing a ``POST`` request to the given URL:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/workflow_post.req\n+    :request: ../../src/plone/restapi/tests/http-examples/workflow_post.req\n \n-.. literalinclude:: _json/workflow_post.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/workflow_post.resp\n    :language: http\n \n \n We can also also change the state recursively for all contained items, provide a comment and set effective and expiration dates:\n \n ..  http:example:: curl httpie python-requests\n-    :request: _json/workflow_post_with_body.req\n+    :request: ../../src/plone/restapi/tests/http-examples/workflow_post_with_body.req\n \n-.. literalinclude:: _json/workflow_post_with_body.resp\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/workflow_post_with_body.resp\n    :language: http\ndiff --git a/setup.py b/setup.py\nindex a92cb91f..7843efc7 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,6 +1,6 @@\n from setuptools import setup, find_packages\n \n-version = \'3.0.0.dev0\'\n+version = \'3.2.2.dev0\'\n \n long_description = (\n     open(\'README.rst\').read() + \'\\n\' +\n@@ -10,6 +10,7 @@\n     open(\'CHANGES.rst\').read() + \'\\n\'\n )\n \n+\n setup(name=\'plone.restapi\',\n       version=version,\n       description="plone.restapi is a RESTful hypermedia API for Plone.",\n@@ -43,6 +44,7 @@\n           \'setuptools\',\n           \'python-dateutil\',\n           \'plone.rest >= 1.0a6\',  # json renderer moved to plone.restapi\n+          \'plone.schema >= 1.2.0\',  # new json field          \n           \'PyJWT\',\n           \'pytz\',\n       ],\n@@ -56,6 +58,8 @@\n           \'plone.api\',\n           \'requests\',\n           \'freezegun\',\n+          \'plone.tiles\',\n+          \'mock\',\n       ]},\n       entry_points="""\n       # -*- Entry points: -*-\ndiff --git a/src/plone/restapi/behaviors.py b/src/plone/restapi/behaviors.py\nnew file mode 100644\nindex 00000000..cba56701\n--- /dev/null\n+++ b/src/plone/restapi/behaviors.py\n@@ -0,0 +1,49 @@\n+# -*- coding: utf-8 -*-\n+from plone.autoform.interfaces import IFormFieldProvider\n+from plone.restapi import _\n+from plone.schema import JSONField\n+from plone.supermodel import model\n+from zope.interface import provider\n+\n+import json\n+\n+\n+TILES_SCHEMA = json.dumps({\n+    \'type\': \'object\',\n+    \'properties\': {},\n+})\n+\n+LAYOUT_SCHEMA = json.dumps({\n+    \'type\': \'object\',\n+    \'properties\': {\n+        \'items\': {\n+            \'type\': \'array\',\n+            \'items\': {\n+                \'type\': \'string\'\n+            }\n+        }\n+    }\n+})\n+\n+\n+@provider(IFormFieldProvider)\n+class ITiles(model.Schema):\n+\n+    model.fieldset(\'layout\', label=_(u\'Layout\'),\n+                   fields=[\'tiles\', \'tiles_layout\'])\n+\n+    tiles = JSONField(\n+        title=u\'Tiles\',\n+        description=u\'The JSON representation of the object tiles information. Must be a JSON object.\',  # noqa\n+        schema=TILES_SCHEMA,\n+        default={},\n+        required=False,\n+    )\n+\n+    tiles_layout = JSONField(\n+        title=u\'Tiles Layout)\',\n+        description=u\'The JSON representation of the object tiles layout. Must be a JSON array.\',  # noqa\n+        schema=LAYOUT_SCHEMA,\n+        default={\'items\': []},\n+        required=False,\n+    )\ndiff --git a/src/plone/restapi/configure.zcml b/src/plone/restapi/configure.zcml\nindex 370fb7cb..bf0377c6 100644\n--- a/src/plone/restapi/configure.zcml\n+++ b/src/plone/restapi/configure.zcml\n@@ -2,7 +2,9 @@\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:five="http://namespaces.zope.org/five"\n     xmlns:i18n="http://namespaces.zope.org/i18n"\n+    xmlns:plone="http://namespaces.plone.org/plone"\n     xmlns:genericsetup="http://namespaces.zope.org/genericsetup"\n+    xmlns:zcml="http://namespaces.zope.org/zcml"\n     i18n_domain="plone.restapi">\n \n   <i18n:registerTranslations directory="locales" />\n@@ -63,6 +65,20 @@\n \n   <include package=".upgrades" />\n \n+  <configure zcml:condition="installed plone.app.dexterity">\n+\n+    <include package="plone.behavior" file="meta.zcml"/>\n+\n+    <plone:behavior\n+        name="plone.tiles"\n+        title="Tiles"\n+        description="Existing tiles on the object and their layout"\n+        provides=".behaviors.ITiles"\n+        for="plone.dexterity.interfaces.IDexterityContent"\n+      />\n+\n+  </configure>\n+\n   <utility\n       factory=".setuphandlers.HiddenProfiles"\n       name="plone.restapi"\ndiff --git a/src/plone/restapi/deserializer/atcontent.py b/src/plone/restapi/deserializer/atcontent.py\nindex 74614907..bb8cfb20 100644\n--- a/src/plone/restapi/deserializer/atcontent.py\n+++ b/src/plone/restapi/deserializer/atcontent.py\n@@ -28,7 +28,7 @@ def __init__(self, context, request):\n         self.context = context\n         self.request = request\n \n-    def __call__(self, validate_all=False, data=None):\n+    def __call__(self, validate_all=False, data=None, create=False):\n         if data is None:\n             data = json_body(self.request)\n \n@@ -62,8 +62,9 @@ def __call__(self, validate_all=False, data=None):\n                     \'error\': \'ValidationError\'} for f, e in errors.items()]\n                 raise BadRequest(errors)\n \n-            if obj.checkCreationFlag():\n-                obj.unmarkCreationFlag()\n+            if create:\n+                if obj.checkCreationFlag():\n+                    obj.unmarkCreationFlag()\n                 notify(ObjectInitializedEvent(obj))\n                 obj.at_post_create_script()\n             else:\ndiff --git a/src/plone/restapi/deserializer/dxcontent.py b/src/plone/restapi/deserializer/dxcontent.py\nindex 0338500f..b2e42165 100644\n--- a/src/plone/restapi/deserializer/dxcontent.py\n+++ b/src/plone/restapi/deserializer/dxcontent.py\n@@ -35,7 +35,7 @@ def __init__(self, context, request):\n         self.sm = getSecurityManager()\n         self.permission_cache = {}\n \n-    def __call__(self, validate_all=False, data=None):  # noqa: ignore=C901\n+    def __call__(self, validate_all=False, data=None, create=False):  # noqa: ignore=C901\n         if data is None:\n             data = json_body(self.request)\n \n@@ -137,7 +137,7 @@ def __call__(self, validate_all=False, data=None):  # noqa: ignore=C901\n         # OrderingMixin\n         self.handle_ordering(data)\n \n-        if modified:\n+        if modified and not create:\n             descriptions = []\n             for interface, names in modified.items():\n                 descriptions.append(Attributes(interface, *names))\ndiff --git a/src/plone/restapi/imaging.py b/src/plone/restapi/imaging.py\nindex 1c569a92..202f6bfa 100644\n--- a/src/plone/restapi/imaging.py\n+++ b/src/plone/restapi/imaging.py\n@@ -1,7 +1,8 @@\n # -*- coding: utf-8 -*-\n from Products.CMFCore.interfaces import IPropertiesTool\n+from zope.component import getMultiAdapter\n from zope.component import getUtility\n-\n+from zope.globalrequest import getRequest\n \n try:\n     from Products.CMFPlone.factory import _IMREALLYPLONE5  # noqa\n@@ -16,12 +17,21 @@ def get_scales(context, field, width, height):\n     with the actual dimensions (aspect ratio of the original image).\n     """\n     scales = {}\n-    absolute_url = context.absolute_url()\n-\n-    for name, scale_width, scale_height in get_scale_infos():\n-        bbox = scale_width, scale_height\n-        actual_width, actual_height = get_actual_scale((width, height), bbox)\n-        url = u\'{}/@@images/{}/{}\'.format(absolute_url, field.__name__, name)\n+    request = getRequest()\n+    images_view = getMultiAdapter((context, request), name=\'images\')\n+\n+    for name, actual_width, actual_height in get_scale_infos():\n+        # Try first with scale name\n+        scale = images_view.scale(field.__name__, scale=name)\n+        if scale is None:\n+            # Sometimes it fails, but we can create it\n+            # using scale sizes\n+            scale = images_view.scale(\n+                field.__name__, width=actual_width, height=actual_height)\n+\n+        url = scale.url\n+        actual_width = scale.width\n+        actual_height = scale.height\n \n         scales[name] = {\n             u\'download\': url,\n@@ -31,6 +41,19 @@ def get_scales(context, field, width, height):\n     return scales\n \n \n+def get_original_image_url(context, fieldname, width, height):\n+    request = getRequest()\n+    images_view = getMultiAdapter((context, request), name=\'images\')\n+    scale = images_view.scale(\n+        fieldname,\n+        width=width,\n+        height=height,\n+        direction=\'thumbnail\'\n+    )\n+\n+    return scale.url\n+\n+\n def get_actual_scale(dimensions, bbox):\n     """Given dimensions of an original image, and a bounding box of a scale,\n     calculates what actual dimensions that scaled image would have,\ndiff --git a/src/plone/restapi/serializer/atfields.py b/src/plone/restapi/serializer/atfields.py\nindex 4f668bb6..8b5396d8 100644\n--- a/src/plone/restapi/serializer/atfields.py\n+++ b/src/plone/restapi/serializer/atfields.py\n@@ -9,6 +9,7 @@\n from plone.app.blob.interfaces import IBlobField\n from plone.app.blob.interfaces import IBlobImageField\n from plone.restapi.imaging import get_scales\n+from plone.restapi.imaging import get_original_image_url\n from plone.restapi.interfaces import IFieldSerializer\n from plone.restapi.serializer.converters import json_compatible\n from zope.component import adapter\n@@ -77,11 +78,10 @@ def __call__(self):\n         if not image:\n             return None\n \n-        url = \'/\'.join((self.context.absolute_url(),\n-                        \'@@images\',\n-                        self.field.__name__))\n-\n         width, height = image.width, image.height\n+        url = get_original_image_url(\n+            self.context, self.field.__name__, width, height)\n+\n         scales = get_scales(self.context, self.field, width, height)\n         result = {\n             \'filename\': self.field.getFilename(self.context),\ndiff --git a/src/plone/restapi/serializer/configure.zcml b/src/plone/restapi/serializer/configure.zcml\nindex d9d07479..91070fc0 100644\n--- a/src/plone/restapi/serializer/configure.zcml\n+++ b/src/plone/restapi/serializer/configure.zcml\n@@ -69,12 +69,17 @@\n \n     <adapter factory=".vocabularies.SerializeVocabularyToJson" />\n     <adapter factory=".vocabularies.SerializeTermToJson" />\n-    \n+\n     <adapter factory=".registry.SerializeRegistryToJson" />\n-    \n+\n     <adapter factory=".discussion.ConversationSerializer" />\n     <adapter factory=".discussion.CommentSerializer" />\n \n+    <configure zcml:condition="installed plone.tiles">\n+        <adapter factory=".tile.TileSummarySerializeToJson" />\n+        <adapter factory=".tile.TileSerializeToJson" />\n+    </configure>\n+\n     <configure zcml:condition="have plone-5">\n         <adapter factory=".controlpanels.ControlpanelSerializeToJson" />\n         <adapter factory=".controlpanels.ControlpanelSummarySerializeToJson" />\ndiff --git a/src/plone/restapi/serializer/dxfields.py b/src/plone/restapi/serializer/dxfields.py\nindex 213d9e01..41124705 100644\n--- a/src/plone/restapi/serializer/dxfields.py\n+++ b/src/plone/restapi/serializer/dxfields.py\n@@ -3,6 +3,7 @@\n from plone.dexterity.interfaces import IDexterityContent\n from plone.namedfile.interfaces import INamedFileField\n from plone.namedfile.interfaces import INamedImageField\n+from plone.restapi.imaging import get_original_image_url\n from plone.restapi.imaging import get_scales\n from plone.restapi.interfaces import IFieldSerializer\n from plone.restapi.serializer.converters import json_compatible\n@@ -38,11 +39,15 @@ def __call__(self):\n         if not image:\n             return None\n \n-        url = \'/\'.join((self.context.absolute_url(),\n-                        \'@@images\',\n-                        self.field.__name__))\n-\n         width, height = image.getImageSize()\n+\n+        url = get_original_image_url(\n+            self.context,\n+            self.field.__name__,\n+            width,\n+            height,\n+        )\n+\n         scales = get_scales(self.context, self.field, width, height)\n         result = {\n             \'filename\': image.filename,\ndiff --git a/src/plone/restapi/serializer/tile.py b/src/plone/restapi/serializer/tile.py\nnew file mode 100644\nindex 00000000..89f0030c\n--- /dev/null\n+++ b/src/plone/restapi/serializer/tile.py\n@@ -0,0 +1,79 @@\n+# -*- coding: utf-8 -*-\n+from plone.restapi.interfaces import ISerializeToJson\n+from plone.restapi.interfaces import ISerializeToJsonSummary\n+from plone.restapi.types import utils\n+from zope.interface import implementer\n+from zope.interface import Interface\n+from plone.tiles.interfaces import ITileType\n+from zope.component import adapter\n+from zope.component.hooks import getSite\n+\n+SERVICE_ID = \'@tiles\'\n+\n+\n+@implementer(ISerializeToJsonSummary)\n+@adapter(ITileType, Interface)\n+class TileSummarySerializeToJson(object):\n+\n+    def __init__(self, tile, request):\n+        self.tile = tile\n+\n+    def __call__(self):\n+        portal = getSite()\n+        return {\n+            \'@id\': \'{}/{}/{}\'.format(\n+                portal.absolute_url(),\n+                SERVICE_ID,\n+                self.tile.__name__\n+            ),\n+            \'title\': self.tile.title,\n+            \'description\': self.tile.description,\n+            \'icon\': self.tile.icon,\n+        }\n+\n+\n+def get_jsonschema_for_tile(tile, context, request):\n+    """Build a complete JSON schema for the given tile.\n+    """\n+    schema = tile.schema\n+\n+    fieldsets = utils.get_fieldsets(context, request, schema)\n+\n+    # Build JSON schema properties\n+    properties = utils.get_jsonschema_properties(\n+        context, request, fieldsets\n+    )\n+\n+    # Determine required fields\n+    required = []\n+    for field in utils.iter_fields(fieldsets):\n+        if field.field.required:\n+            required.append(field.field.getName())\n+\n+    # Include field modes\n+    for field in utils.iter_fields(fieldsets):\n+        if field.mode:\n+            properties[field.field.getName()][\'mode\'] = field.mode\n+\n+    return {\n+        \'type\': \'object\',\n+        \'title\': tile.title,\n+        \'properties\': properties,\n+        \'required\': required,\n+        \'fieldsets\': utils.get_fieldset_infos(fieldsets),\n+    }\n+\n+\n+@implementer(ISerializeToJson)\n+@adapter(ITileType, Interface)\n+class TileSerializeToJson(object):\n+\n+    def __init__(self, tile, request):\n+        self.tile = tile\n+        self.request = request\n+        self.schema = self.tile.schema\n+\n+    def __call__(self):\n+        portal = getSite()\n+\n+        return get_jsonschema_for_tile(self.tile, portal, self.request)\ndiff --git a/src/plone/restapi/services/configure.zcml b/src/plone/restapi/services/configure.zcml\nindex 2c7a6bd6..19b45f0b 100644\n--- a/src/plone/restapi/services/configure.zcml\n+++ b/src/plone/restapi/services/configure.zcml\n@@ -32,4 +32,7 @@\n       zcml:condition="have plone-5"/>\n   <include package=".email_send"\n       zcml:condition="have plone-5"/>\n+  <include package=".tiles"\n+      zcml:condition="installed plone.tiles" />\n+\n </configure>\ndiff --git a/src/plone/restapi/services/content/add.py b/src/plone/restapi/services/content/add.py\nindex ab9540b3..51ceb916 100644\n--- a/src/plone/restapi/services/content/add.py\n+++ b/src/plone/restapi/services/content/add.py\n@@ -1,14 +1,22 @@\n # -*- coding: utf-8 -*-\n+from Acquisition import aq_base\n+from Acquisition.interfaces import IAcquirer\n from plone.restapi.deserializer import json_body\n from plone.restapi.exceptions import DeserializationError\n from plone.restapi.interfaces import IDeserializeFromJson\n from plone.restapi.interfaces import ISerializeToJson\n from plone.restapi.services import Service\n+from plone.restapi.services.content.utils import add\n from plone.restapi.services.content.utils import create\n from plone.restapi.services.content.utils import rename\n+from Products.Archetypes.interfaces import IBaseObject\n+from Products.CMFPlone.utils import safe_hasattr\n from zExceptions import BadRequest\n+from zExceptions import Unauthorized\n from zope.component import queryMultiAdapter\n+from zope.event import notify\n from zope.interface import alsoProvides\n+from zope.lifecycleevent import ObjectCreatedEvent\n \n import plone.protect.interfaces\n \n@@ -32,10 +40,25 @@ def reply(self):\n             alsoProvides(self.request,\n                          plone.protect.interfaces.IDisableCSRFProtection)\n \n-        obj = create(self.context, type_, id_=id_, title=title)\n-        if isinstance(obj, dict) and \'error\' in obj:\n+        try:\n+            obj = create(self.context, type_, id_=id_, title=title)\n+        except Unauthorized as exc:\n+            self.request.response.setStatus(403)\n+            return dict(error=dict(\n+                type=\'Forbidden\',\n+                message=exc.message))\n+        except BadRequest as exc:\n             self.request.response.setStatus(400)\n-            return obj\n+            return dict(error=dict(\n+                type=\'Bad Request\',\n+                message=exc.message))\n+\n+        # Acquisition wrap temporarily to satisfy things like vocabularies\n+        # depending on tools\n+        temporarily_wrapped = False\n+        if IAcquirer.providedBy(obj) and not safe_hasattr(obj, \'aq_base\'):\n+            obj = obj.__of__(self.context)\n+            temporarily_wrapped = True\n \n         # Update fields\n         deserializer = queryMultiAdapter((obj, self.request),\n@@ -46,13 +69,21 @@ def reply(self):\n                 message=\'Cannot deserialize type {}\'.format(obj.portal_type)))\n \n         try:\n-            deserializer(validate_all=True)\n+            deserializer(validate_all=True, create=True)\n         except DeserializationError as e:\n             self.request.response.setStatus(400)\n             return dict(error=dict(\n                 type=\'DeserializationError\',\n                 message=str(e)))\n \n+        if temporarily_wrapped:\n+            obj = aq_base(obj)\n+\n+        if not IBaseObject.providedBy(obj):\n+            notify(ObjectCreatedEvent(obj))\n+\n+        obj = add(self.context, obj)\n+\n         # Rename if generated id\n         if not id_:\n             rename(obj)\ndiff --git a/src/plone/restapi/services/content/tus.py b/src/plone/restapi/services/content/tus.py\nindex 9c708f52..9e908ccd 100644\n--- a/src/plone/restapi/services/content/tus.py\n+++ b/src/plone/restapi/services/content/tus.py\n@@ -11,6 +11,7 @@\n from plone.restapi.services import Service\n from plone.restapi.services.content.utils import create\n from plone.restapi.services.content.utils import rename\n+from plone.restapi.services.content.utils import add\n from plone.rfc822.interfaces import IPrimaryFieldInfo\n from uuid import uuid4\n from zExceptions import Unauthorized\n@@ -18,6 +19,8 @@\n from zope.interface import implements\n from zope.publisher.interfaces import IPublishTraverse\n from zope.publisher.interfaces import NotFound\n+from zope.lifecycleevent import ObjectCreatedEvent\n+from zope.event import notify\n \n import json\n import os\n@@ -228,6 +231,8 @@ def reply(self):\n                         filename.lower(), content_type, \'\') or \'File\'\n \n                 obj = create(self.context, type_)\n+                notify(ObjectCreatedEvent(obj))\n+                obj = add(self.context, obj)\n             else:\n                 obj = self.context\n \ndiff --git a/src/plone/restapi/services/content/utils.py b/src/plone/restapi/services/content/utils.py\nindex 1534e310..790dcfa2 100644\n--- a/src/plone/restapi/services/content/utils.py\n+++ b/src/plone/restapi/services/content/utils.py\n@@ -1,11 +1,20 @@\n # -*- coding: utf-8 -*-\n+from Acquisition import aq_base\n from Acquisition import aq_parent\n from DateTime import DateTime\n-from Products.CMFPlone.utils import base_hasattr\n from plone.app.content.interfaces import INameFromTitle\n+from plone.app.uuid.utils import uuidToObject\n+from plone.uuid.interfaces import IUUID\n+from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone.utils import base_hasattr\n from random import randint\n-from zExceptions import BadRequest\n+from zExceptions import Unauthorized\n+from zope.component import getUtility\n+from zope.component.interfaces import IFactory\n+from zope.container.contained import notifyContainerModified\n+from zope.container.contained import ObjectAddedEvent\n from zope.container.interfaces import INameChooser\n+from zope.event import notify\n \n import transaction\n \n@@ -22,17 +31,62 @@ def create(container, type_, id_=None, title=None):\n             str(now.millis())[7:],\n             randint(0, 9999))\n     else:\n-        new_id = id_\n+        if isinstance(id_, unicode):\n+            new_id = id_.encode(\'utf8\')\n+        else:\n+            new_id = id_\n+\n+    portal_types = getToolByName(container, \'portal_types\')\n+    type_info = portal_types.getTypeInfo(type_)\n+\n+    # Check for add permission\n+    if not type_info.isConstructionAllowed(container):\n+        raise Unauthorized(\'Cannot create %s\' % type_info.getId())\n+\n+    # Check if allowed subobject type\n+    container_type_info = portal_types.getTypeInfo(container)\n+    if not container_type_info.allowType(type_):\n+        raise Unauthorized(\'Disallowed subobject type: %s\' % type_)\n+\n+    # Check for type constraints\n+    if type_ not in [fti.getId() for fti in container.allowedContentTypes()]:\n+        raise Unauthorized(\'Disallowed subobject type: %s\' % type_)\n \n-    try:\n-        new_id = container.invokeFactory(type_, new_id, title=title)\n-    except (BadRequest, ValueError) as exc:\n-        return {\'error\': {\n-            \'type\': exc.__class__.__name__,\n-            \'message\': exc.message,\n-        }}\n+    if type_info.product:\n+        # Oldstyle factory\n+        factory = type_info._getFactoryMethod(container, check_security=0)\n+        new_id = factory(new_id, title=title)\n+        obj = container._getOb(new_id)\n \n-    return container[new_id]\n+    else:\n+        factory = getUtility(IFactory, type_info.factory)\n+        obj = factory(new_id, title=title)\n+\n+    if base_hasattr(obj, \'_setPortalTypeName\'):\n+        obj._setPortalTypeName(type_info.getId())\n+\n+    return obj\n+\n+\n+def add(container, obj):\n+    """Add an object to a container."""\n+    id_ = obj.getId()\n+    # Archetypes objects are already created in a container thus we just fire\n+    # the notification events.\n+    if aq_base(container) is aq_base(aq_parent(obj)):\n+        notify(ObjectAddedEvent(obj, container, id_))\n+        notifyContainerModified(container)\n+        return obj\n+    else:\n+        new_id = container._setObject(id_, obj)\n+        # _setObject triggers ObjectAddedEvent which can end up triggering a\n+        # content rule to move the item to a different container. In this case\n+        # look up the object by UUID.\n+        try:\n+            return container._getOb(new_id)\n+        except AttributeError:\n+            uuid = IUUID(obj)\n+            return uuidToObject(uuid)\n \n \n def rename(obj):\ndiff --git a/docs/source/_json/controlpanels_patch.resp b/src/plone/restapi/services/tiles/__init__.py\nsimilarity index 100%\nrename from docs/source/_json/controlpanels_patch.resp\nrename to src/plone/restapi/services/tiles/__init__.py\ndiff --git a/src/plone/restapi/services/tiles/configure.zcml b/src/plone/restapi/services/tiles/configure.zcml\nnew file mode 100644\nindex 00000000..2750955f\n--- /dev/null\n+++ b/src/plone/restapi/services/tiles/configure.zcml\n@@ -0,0 +1,13 @@\n+<configure\n+    xmlns="http://namespaces.zope.org/zope"\n+    xmlns:plone="http://namespaces.plone.org/plone">\n+\n+  <plone:service\n+    method="GET"\n+    for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+    factory=".get.TilesGet"\n+    name="@tiles"\n+    permission="zope2.View"\n+    />\n+\n+</configure>\ndiff --git a/src/plone/restapi/services/tiles/get.py b/src/plone/restapi/services/tiles/get.py\nnew file mode 100644\nindex 00000000..2cdf443e\n--- /dev/null\n+++ b/src/plone/restapi/services/tiles/get.py\n@@ -0,0 +1,52 @@\n+# -*- coding: utf-8 -*-\n+from plone.restapi.services import Service\n+from AccessControl.security import checkPermission\n+from zope.component import getUtilitiesFor\n+from zope.component import getMultiAdapter\n+from plone.tiles.interfaces import ITileType\n+from plone.restapi.interfaces import ISerializeToJsonSummary\n+from plone.restapi.interfaces import ISerializeToJson\n+from zope.interface import implements\n+from zope.publisher.interfaces import IPublishTraverse\n+from zope.component import getUtility\n+\n+\n+class TilesGet(Service):\n+\n+    implements(IPublishTraverse)\n+\n+    def __init__(self, context, request):\n+        super(TilesGet, self).__init__(context, request)\n+        self.params = []\n+\n+    def publishTraverse(self, request, name):\n+        # Treat any path segments after /@types as parameters\n+        self.params.append(name)\n+        return self\n+\n+    def reply(self):\n+        if self.params and len(self.params) > 0:\n+            self.content_type = "application/json+schema"\n+            try:\n+                tile = getUtility(ITileType, name=self.params[0])\n+                return getMultiAdapter(\n+                    (tile, self.request), ISerializeToJson)()\n+            except KeyError:\n+                self.content_type = "application/json"\n+                self.request.response.setStatus(404)\n+                return {\n+                    \'type\': \'NotFound\',\n+                    \'message\': \'Tile "{}" could not be found.\'.format(\n+                        self.params[0]\n+                    )\n+                }\n+\n+        result = []\n+        tiles = getUtilitiesFor(ITileType, context=self.context)\n+        for name, tile in tiles:\n+            serializer = getMultiAdapter(\n+                (tile, self.request), ISerializeToJsonSummary)\n+            if checkPermission(tile.add_permission, self.context):\n+                result.append(serializer())\n+\n+        return result\ndiff --git a/docs/source/_json/404_not_found.req b/src/plone/restapi/tests/http-examples/404_not_found.req\nsimilarity index 100%\nrename from docs/source/_json/404_not_found.req\nrename to src/plone/restapi/tests/http-examples/404_not_found.req\ndiff --git a/docs/source/_json/404_not_found.resp b/src/plone/restapi/tests/http-examples/404_not_found.resp\nsimilarity index 100%\nrename from docs/source/_json/404_not_found.resp\nrename to src/plone/restapi/tests/http-examples/404_not_found.resp\ndiff --git a/docs/source/_json/actions_get.req b/src/plone/restapi/tests/http-examples/actions_get.req\nsimilarity index 100%\nrename from docs/source/_json/actions_get.req\nrename to src/plone/restapi/tests/http-examples/actions_get.req\ndiff --git a/docs/source/_json/actions_get.resp b/src/plone/restapi/tests/http-examples/actions_get.resp\nsimilarity index 100%\nrename from docs/source/_json/actions_get.resp\nrename to src/plone/restapi/tests/http-examples/actions_get.resp\ndiff --git a/docs/source/_json/batching.req b/src/plone/restapi/tests/http-examples/batching.req\nsimilarity index 100%\nrename from docs/source/_json/batching.req\nrename to src/plone/restapi/tests/http-examples/batching.req\ndiff --git a/docs/source/_json/batching.resp b/src/plone/restapi/tests/http-examples/batching.resp\nsimilarity index 100%\nrename from docs/source/_json/batching.resp\nrename to src/plone/restapi/tests/http-examples/batching.resp\ndiff --git a/docs/source/_json/breadcrumbs.req b/src/plone/restapi/tests/http-examples/breadcrumbs.req\nsimilarity index 100%\nrename from docs/source/_json/breadcrumbs.req\nrename to src/plone/restapi/tests/http-examples/breadcrumbs.req\ndiff --git a/docs/source/_json/breadcrumbs.resp b/src/plone/restapi/tests/http-examples/breadcrumbs.resp\nsimilarity index 100%\nrename from docs/source/_json/breadcrumbs.resp\nrename to src/plone/restapi/tests/http-examples/breadcrumbs.resp\ndiff --git a/docs/source/_json/collection.req b/src/plone/restapi/tests/http-examples/collection.req\nsimilarity index 100%\nrename from docs/source/_json/collection.req\nrename to src/plone/restapi/tests/http-examples/collection.req\ndiff --git a/docs/source/_json/collection.resp b/src/plone/restapi/tests/http-examples/collection.resp\nsimilarity index 100%\nrename from docs/source/_json/collection.resp\nrename to src/plone/restapi/tests/http-examples/collection.resp\ndiff --git a/docs/source/_json/comments_add_root.req b/src/plone/restapi/tests/http-examples/comments_add_root.req\nsimilarity index 100%\nrename from docs/source/_json/comments_add_root.req\nrename to src/plone/restapi/tests/http-examples/comments_add_root.req\ndiff --git a/docs/source/_json/comments_add_root.resp b/src/plone/restapi/tests/http-examples/comments_add_root.resp\nsimilarity index 100%\nrename from docs/source/_json/comments_add_root.resp\nrename to src/plone/restapi/tests/http-examples/comments_add_root.resp\ndiff --git a/docs/source/_json/comments_add_sub.req b/src/plone/restapi/tests/http-examples/comments_add_sub.req\nsimilarity index 100%\nrename from docs/source/_json/comments_add_sub.req\nrename to src/plone/restapi/tests/http-examples/comments_add_sub.req\ndiff --git a/docs/source/_json/comments_add_sub.resp b/src/plone/restapi/tests/http-examples/comments_add_sub.resp\nsimilarity index 100%\nrename from docs/source/_json/comments_add_sub.resp\nrename to src/plone/restapi/tests/http-examples/comments_add_sub.resp\ndiff --git a/docs/source/_json/comments_delete.req b/src/plone/restapi/tests/http-examples/comments_delete.req\nsimilarity index 100%\nrename from docs/source/_json/comments_delete.req\nrename to src/plone/restapi/tests/http-examples/comments_delete.req\ndiff --git a/docs/source/_json/comments_delete.resp b/src/plone/restapi/tests/http-examples/comments_delete.resp\nsimilarity index 100%\nrename from docs/source/_json/comments_delete.resp\nrename to src/plone/restapi/tests/http-examples/comments_delete.resp\ndiff --git a/docs/source/_json/comments_get.req b/src/plone/restapi/tests/http-examples/comments_get.req\nsimilarity index 100%\nrename from docs/source/_json/comments_get.req\nrename to src/plone/restapi/tests/http-examples/comments_get.req\ndiff --git a/docs/source/_json/comments_get.resp b/src/plone/restapi/tests/http-examples/comments_get.resp\nsimilarity index 100%\nrename from docs/source/_json/comments_get.resp\nrename to src/plone/restapi/tests/http-examples/comments_get.resp\ndiff --git a/docs/source/_json/comments_update.req b/src/plone/restapi/tests/http-examples/comments_update.req\nsimilarity index 100%\nrename from docs/source/_json/comments_update.req\nrename to src/plone/restapi/tests/http-examples/comments_update.req\ndiff --git a/docs/source/_json/comments_update.resp b/src/plone/restapi/tests/http-examples/comments_update.resp\nsimilarity index 100%\nrename from docs/source/_json/comments_update.resp\nrename to src/plone/restapi/tests/http-examples/comments_update.resp\ndiff --git a/docs/source/_json/component_breadcrumbs.req b/src/plone/restapi/tests/http-examples/component_breadcrumbs.req\nsimilarity index 100%\nrename from docs/source/_json/component_breadcrumbs.req\nrename to src/plone/restapi/tests/http-examples/component_breadcrumbs.req\ndiff --git a/docs/source/_json/component_breadcrumbs.resp b/src/plone/restapi/tests/http-examples/component_breadcrumbs.resp\nsimilarity index 100%\nrename from docs/source/_json/component_breadcrumbs.resp\nrename to src/plone/restapi/tests/http-examples/component_breadcrumbs.resp\ndiff --git a/docs/source/_json/component_navigation.req b/src/plone/restapi/tests/http-examples/component_navigation.req\nsimilarity index 100%\nrename from docs/source/_json/component_navigation.req\nrename to src/plone/restapi/tests/http-examples/component_navigation.req\ndiff --git a/docs/source/_json/component_navigation.resp b/src/plone/restapi/tests/http-examples/component_navigation.resp\nsimilarity index 100%\nrename from docs/source/_json/component_navigation.resp\nrename to src/plone/restapi/tests/http-examples/component_navigation.resp\ndiff --git a/docs/source/_json/content_delete.req b/src/plone/restapi/tests/http-examples/content_delete.req\nsimilarity index 100%\nrename from docs/source/_json/content_delete.req\nrename to src/plone/restapi/tests/http-examples/content_delete.req\ndiff --git a/docs/source/_json/content_delete.resp b/src/plone/restapi/tests/http-examples/content_delete.resp\nsimilarity index 100%\nrename from docs/source/_json/content_delete.resp\nrename to src/plone/restapi/tests/http-examples/content_delete.resp\ndiff --git a/docs/source/_json/content_get.req b/src/plone/restapi/tests/http-examples/content_get.req\nsimilarity index 100%\nrename from docs/source/_json/content_get.req\nrename to src/plone/restapi/tests/http-examples/content_get.req\ndiff --git a/docs/source/_json/content_get.resp b/src/plone/restapi/tests/http-examples/content_get.resp\nsimilarity index 100%\nrename from docs/source/_json/content_get.resp\nrename to src/plone/restapi/tests/http-examples/content_get.resp\ndiff --git a/docs/source/_json/content_patch.req b/src/plone/restapi/tests/http-examples/content_patch.req\nsimilarity index 100%\nrename from docs/source/_json/content_patch.req\nrename to src/plone/restapi/tests/http-examples/content_patch.req\ndiff --git a/docs/source/_json/content_patch.resp b/src/plone/restapi/tests/http-examples/content_patch.resp\nsimilarity index 100%\nrename from docs/source/_json/content_patch.resp\nrename to src/plone/restapi/tests/http-examples/content_patch.resp\ndiff --git a/docs/source/_json/content_patch_representation.req b/src/plone/restapi/tests/http-examples/content_patch_representation.req\nsimilarity index 100%\nrename from docs/source/_json/content_patch_representation.req\nrename to src/plone/restapi/tests/http-examples/content_patch_representation.req\ndiff --git a/docs/source/_json/content_patch_representation.resp b/src/plone/restapi/tests/http-examples/content_patch_representation.resp\nsimilarity index 100%\nrename from docs/source/_json/content_patch_representation.resp\nrename to src/plone/restapi/tests/http-examples/content_patch_representation.resp\ndiff --git a/docs/source/_json/content_post.req b/src/plone/restapi/tests/http-examples/content_post.req\nsimilarity index 100%\nrename from docs/source/_json/content_post.req\nrename to src/plone/restapi/tests/http-examples/content_post.req\ndiff --git a/docs/source/_json/content_post.resp b/src/plone/restapi/tests/http-examples/content_post.resp\nsimilarity index 100%\nrename from docs/source/_json/content_post.resp\nrename to src/plone/restapi/tests/http-examples/content_post.resp\ndiff --git a/docs/source/_json/content_reorder.req b/src/plone/restapi/tests/http-examples/content_reorder.req\nsimilarity index 100%\nrename from docs/source/_json/content_reorder.req\nrename to src/plone/restapi/tests/http-examples/content_reorder.req\ndiff --git a/docs/source/_json/controlpanels_get.req b/src/plone/restapi/tests/http-examples/controlpanels_get.req\nsimilarity index 100%\nrename from docs/source/_json/controlpanels_get.req\nrename to src/plone/restapi/tests/http-examples/controlpanels_get.req\ndiff --git a/docs/source/_json/controlpanels_get.resp b/src/plone/restapi/tests/http-examples/controlpanels_get.resp\nsimilarity index 100%\nrename from docs/source/_json/controlpanels_get.resp\nrename to src/plone/restapi/tests/http-examples/controlpanels_get.resp\ndiff --git a/docs/source/_json/controlpanels_get_item.req b/src/plone/restapi/tests/http-examples/controlpanels_get_item.req\nsimilarity index 100%\nrename from docs/source/_json/controlpanels_get_item.req\nrename to src/plone/restapi/tests/http-examples/controlpanels_get_item.req\ndiff --git a/docs/source/_json/controlpanels_get_item.resp b/src/plone/restapi/tests/http-examples/controlpanels_get_item.resp\nsimilarity index 100%\nrename from docs/source/_json/controlpanels_get_item.resp\nrename to src/plone/restapi/tests/http-examples/controlpanels_get_item.resp\ndiff --git a/docs/source/_json/controlpanels_patch.req b/src/plone/restapi/tests/http-examples/controlpanels_patch.req\nsimilarity index 100%\nrename from docs/source/_json/controlpanels_patch.req\nrename to src/plone/restapi/tests/http-examples/controlpanels_patch.req\ndiff --git a/src/plone/restapi/tests/http-examples/controlpanels_patch.resp b/src/plone/restapi/tests/http-examples/controlpanels_patch.resp\nnew file mode 100644\nindex 00000000..e69de29b\ndiff --git a/docs/source/_json/conversation_comment_add_root.req b/src/plone/restapi/tests/http-examples/conversation_comment_add_root.req\nsimilarity index 100%\nrename from docs/source/_json/conversation_comment_add_root.req\nrename to src/plone/restapi/tests/http-examples/conversation_comment_add_root.req\ndiff --git a/docs/source/_json/conversation_comment_add_root.resp b/src/plone/restapi/tests/http-examples/conversation_comment_add_root.resp\nsimilarity index 100%\nrename from docs/source/_json/conversation_comment_add_root.resp\nrename to src/plone/restapi/tests/http-examples/conversation_comment_add_root.resp\ndiff --git a/docs/source/_json/conversation_comment_add_sub.req b/src/plone/restapi/tests/http-examples/conversation_comment_add_sub.req\nsimilarity index 100%\nrename from docs/source/_json/conversation_comment_add_sub.req\nrename to src/plone/restapi/tests/http-examples/conversation_comment_add_sub.req\ndiff --git a/docs/source/_json/conversation_comment_add_sub.resp b/src/plone/restapi/tests/http-examples/conversation_comment_add_sub.resp\nsimilarity index 100%\nrename from docs/source/_json/conversation_comment_add_sub.resp\nrename to src/plone/restapi/tests/http-examples/conversation_comment_add_sub.resp\ndiff --git a/docs/source/_json/conversation_comment_delete.req b/src/plone/restapi/tests/http-examples/conversation_comment_delete.req\nsimilarity index 100%\nrename from docs/source/_json/conversation_comment_delete.req\nrename to src/plone/restapi/tests/http-examples/conversation_comment_delete.req\ndiff --git a/docs/source/_json/conversation_comment_delete.resp b/src/plone/restapi/tests/http-examples/conversation_comment_delete.resp\nsimilarity index 100%\nrename from docs/source/_json/conversation_comment_delete.resp\nrename to src/plone/restapi/tests/http-examples/conversation_comment_delete.resp\ndiff --git a/docs/source/_json/conversation_comment_detele.req b/src/plone/restapi/tests/http-examples/conversation_comment_detele.req\nsimilarity index 100%\nrename from docs/source/_json/conversation_comment_detele.req\nrename to src/plone/restapi/tests/http-examples/conversation_comment_detele.req\ndiff --git a/docs/source/_json/conversation_comment_get.req b/src/plone/restapi/tests/http-examples/conversation_comment_get.req\nsimilarity index 100%\nrename from docs/source/_json/conversation_comment_get.req\nrename to src/plone/restapi/tests/http-examples/conversation_comment_get.req\ndiff --git a/docs/source/_json/conversation_comment_update.req b/src/plone/restapi/tests/http-examples/conversation_comment_update.req\nsimilarity index 100%\nrename from docs/source/_json/conversation_comment_update.req\nrename to src/plone/restapi/tests/http-examples/conversation_comment_update.req\ndiff --git a/docs/source/_json/conversation_comment_update.resp b/src/plone/restapi/tests/http-examples/conversation_comment_update.resp\nsimilarity index 100%\nrename from docs/source/_json/conversation_comment_update.resp\nrename to src/plone/restapi/tests/http-examples/conversation_comment_update.resp\ndiff --git a/docs/source/_json/conversation_delete.req b/src/plone/restapi/tests/http-examples/conversation_delete.req\nsimilarity index 100%\nrename from docs/source/_json/conversation_delete.req\nrename to src/plone/restapi/tests/http-examples/conversation_delete.req\ndiff --git a/docs/source/_json/conversation_delete.resp b/src/plone/restapi/tests/http-examples/conversation_delete.resp\nsimilarity index 100%\nrename from docs/source/_json/conversation_delete.resp\nrename to src/plone/restapi/tests/http-examples/conversation_delete.resp\ndiff --git a/docs/source/_json/copy.json b/src/plone/restapi/tests/http-examples/copy.json\nsimilarity index 100%\nrename from docs/source/_json/copy.json\nrename to src/plone/restapi/tests/http-examples/copy.json\ndiff --git a/docs/source/_json/copy.json.req b/src/plone/restapi/tests/http-examples/copy.json.req\nsimilarity index 100%\nrename from docs/source/_json/copy.json.req\nrename to src/plone/restapi/tests/http-examples/copy.json.req\ndiff --git a/docs/source/_json/copy.json.resp b/src/plone/restapi/tests/http-examples/copy.json.resp\nsimilarity index 100%\nrename from docs/source/_json/copy.json.resp\nrename to src/plone/restapi/tests/http-examples/copy.json.resp\ndiff --git a/docs/source/_json/copy.req b/src/plone/restapi/tests/http-examples/copy.req\nsimilarity index 100%\nrename from docs/source/_json/copy.req\nrename to src/plone/restapi/tests/http-examples/copy.req\ndiff --git a/docs/source/_json/copy.resp b/src/plone/restapi/tests/http-examples/copy.resp\nsimilarity index 100%\nrename from docs/source/_json/copy.resp\nrename to src/plone/restapi/tests/http-examples/copy.resp\ndiff --git a/docs/source/_json/copy_multiple.req b/src/plone/restapi/tests/http-examples/copy_multiple.req\nsimilarity index 100%\nrename from docs/source/_json/copy_multiple.req\nrename to src/plone/restapi/tests/http-examples/copy_multiple.req\ndiff --git a/docs/source/_json/copy_multiple.resp b/src/plone/restapi/tests/http-examples/copy_multiple.resp\nsimilarity index 100%\nrename from docs/source/_json/copy_multiple.resp\nrename to src/plone/restapi/tests/http-examples/copy_multiple.resp\ndiff --git a/docs/source/_json/document.req b/src/plone/restapi/tests/http-examples/document.req\nsimilarity index 100%\nrename from docs/source/_json/document.req\nrename to src/plone/restapi/tests/http-examples/document.req\ndiff --git a/docs/source/_json/document.resp b/src/plone/restapi/tests/http-examples/document.resp\nsimilarity index 100%\nrename from docs/source/_json/document.resp\nrename to src/plone/restapi/tests/http-examples/document.resp\ndiff --git a/docs/source/_json/event.req b/src/plone/restapi/tests/http-examples/event.req\nsimilarity index 100%\nrename from docs/source/_json/event.req\nrename to src/plone/restapi/tests/http-examples/event.req\ndiff --git a/docs/source/_json/event.resp b/src/plone/restapi/tests/http-examples/event.resp\nsimilarity index 100%\nrename from docs/source/_json/event.resp\nrename to src/plone/restapi/tests/http-examples/event.resp\ndiff --git a/docs/source/_json/expansion.req b/src/plone/restapi/tests/http-examples/expansion.req\nsimilarity index 100%\nrename from docs/source/_json/expansion.req\nrename to src/plone/restapi/tests/http-examples/expansion.req\ndiff --git a/docs/source/_json/expansion.resp b/src/plone/restapi/tests/http-examples/expansion.resp\nsimilarity index 100%\nrename from docs/source/_json/expansion.resp\nrename to src/plone/restapi/tests/http-examples/expansion.resp\ndiff --git a/docs/source/_json/expansion_expanded.req b/src/plone/restapi/tests/http-examples/expansion_expanded.req\nsimilarity index 100%\nrename from docs/source/_json/expansion_expanded.req\nrename to src/plone/restapi/tests/http-examples/expansion_expanded.req\ndiff --git a/docs/source/_json/expansion_expanded.resp b/src/plone/restapi/tests/http-examples/expansion_expanded.resp\nsimilarity index 100%\nrename from docs/source/_json/expansion_expanded.resp\nrename to src/plone/restapi/tests/http-examples/expansion_expanded.resp\ndiff --git a/docs/source/_json/expansion_expanded_full.req b/src/plone/restapi/tests/http-examples/expansion_expanded_full.req\nsimilarity index 100%\nrename from docs/source/_json/expansion_expanded_full.req\nrename to src/plone/restapi/tests/http-examples/expansion_expanded_full.req\ndiff --git a/docs/source/_json/expansion_expanded_full.resp b/src/plone/restapi/tests/http-examples/expansion_expanded_full.resp\nsimilarity index 100%\nrename from docs/source/_json/expansion_expanded_full.resp\nrename to src/plone/restapi/tests/http-examples/expansion_expanded_full.resp\ndiff --git a/docs/source/_json/file.req b/src/plone/restapi/tests/http-examples/file.req\nsimilarity index 100%\nrename from docs/source/_json/file.req\nrename to src/plone/restapi/tests/http-examples/file.req\ndiff --git a/docs/source/_json/file.resp b/src/plone/restapi/tests/http-examples/file.resp\nsimilarity index 100%\nrename from docs/source/_json/file.resp\nrename to src/plone/restapi/tests/http-examples/file.resp\ndiff --git a/docs/source/_json/folder.req b/src/plone/restapi/tests/http-examples/folder.req\nsimilarity index 100%\nrename from docs/source/_json/folder.req\nrename to src/plone/restapi/tests/http-examples/folder.req\ndiff --git a/docs/source/_json/folder.resp b/src/plone/restapi/tests/http-examples/folder.resp\nsimilarity index 100%\nrename from docs/source/_json/folder.resp\nrename to src/plone/restapi/tests/http-examples/folder.resp\ndiff --git a/docs/source/_json/groups.req b/src/plone/restapi/tests/http-examples/groups.req\nsimilarity index 100%\nrename from docs/source/_json/groups.req\nrename to src/plone/restapi/tests/http-examples/groups.req\ndiff --git a/docs/source/_json/groups.resp b/src/plone/restapi/tests/http-examples/groups.resp\nsimilarity index 100%\nrename from docs/source/_json/groups.resp\nrename to src/plone/restapi/tests/http-examples/groups.resp\ndiff --git a/docs/source/_json/groups_created.req b/src/plone/restapi/tests/http-examples/groups_created.req\nsimilarity index 100%\nrename from docs/source/_json/groups_created.req\nrename to src/plone/restapi/tests/http-examples/groups_created.req\ndiff --git a/docs/source/_json/groups_created.resp b/src/plone/restapi/tests/http-examples/groups_created.resp\nsimilarity index 100%\nrename from docs/source/_json/groups_created.resp\nrename to src/plone/restapi/tests/http-examples/groups_created.resp\ndiff --git a/docs/source/_json/groups_delete.req b/src/plone/restapi/tests/http-examples/groups_delete.req\nsimilarity index 100%\nrename from docs/source/_json/groups_delete.req\nrename to src/plone/restapi/tests/http-examples/groups_delete.req\ndiff --git a/docs/source/_json/groups_delete.resp b/src/plone/restapi/tests/http-examples/groups_delete.resp\nsimilarity index 100%\nrename from docs/source/_json/groups_delete.resp\nrename to src/plone/restapi/tests/http-examples/groups_delete.resp\ndiff --git a/docs/source/_json/groups_filtered_by_groupname.req b/src/plone/restapi/tests/http-examples/groups_filtered_by_groupname.req\nsimilarity index 100%\nrename from docs/source/_json/groups_filtered_by_groupname.req\nrename to src/plone/restapi/tests/http-examples/groups_filtered_by_groupname.req\ndiff --git a/docs/source/_json/groups_filtered_by_groupname.resp b/src/plone/restapi/tests/http-examples/groups_filtered_by_groupname.resp\nsimilarity index 100%\nrename from docs/source/_json/groups_filtered_by_groupname.resp\nrename to src/plone/restapi/tests/http-examples/groups_filtered_by_groupname.resp\ndiff --git a/docs/source/_json/groups_get.req b/src/plone/restapi/tests/http-examples/groups_get.req\nsimilarity index 100%\nrename from docs/source/_json/groups_get.req\nrename to src/plone/restapi/tests/http-examples/groups_get.req\ndiff --git a/docs/source/_json/groups_get.resp b/src/plone/restapi/tests/http-examples/groups_get.resp\nsimilarity index 100%\nrename from docs/source/_json/groups_get.resp\nrename to src/plone/restapi/tests/http-examples/groups_get.resp\ndiff --git a/docs/source/_json/groups_update.req b/src/plone/restapi/tests/http-examples/groups_update.req\nsimilarity index 100%\nrename from docs/source/_json/groups_update.req\nrename to src/plone/restapi/tests/http-examples/groups_update.req\ndiff --git a/docs/source/_json/groups_update.resp b/src/plone/restapi/tests/http-examples/groups_update.resp\nsimilarity index 100%\nrename from docs/source/_json/groups_update.resp\nrename to src/plone/restapi/tests/http-examples/groups_update.resp\ndiff --git a/docs/source/_json/history_get.req b/src/plone/restapi/tests/http-examples/history_get.req\nsimilarity index 100%\nrename from docs/source/_json/history_get.req\nrename to src/plone/restapi/tests/http-examples/history_get.req\ndiff --git a/docs/source/_json/history_get.resp b/src/plone/restapi/tests/http-examples/history_get.resp\nsimilarity index 100%\nrename from docs/source/_json/history_get.resp\nrename to src/plone/restapi/tests/http-examples/history_get.resp\ndiff --git a/docs/source/_json/history_get_versioned.req b/src/plone/restapi/tests/http-examples/history_get_versioned.req\nsimilarity index 100%\nrename from docs/source/_json/history_get_versioned.req\nrename to src/plone/restapi/tests/http-examples/history_get_versioned.req\ndiff --git a/docs/source/_json/history_revert.req b/src/plone/restapi/tests/http-examples/history_revert.req\nsimilarity index 100%\nrename from docs/source/_json/history_revert.req\nrename to src/plone/restapi/tests/http-examples/history_revert.req\ndiff --git a/docs/source/_json/history_revert.resp b/src/plone/restapi/tests/http-examples/history_revert.resp\nsimilarity index 100%\nrename from docs/source/_json/history_revert.resp\nrename to src/plone/restapi/tests/http-examples/history_revert.resp\ndiff --git a/docs/source/_json/image.req b/src/plone/restapi/tests/http-examples/image.req\nsimilarity index 100%\nrename from docs/source/_json/image.req\nrename to src/plone/restapi/tests/http-examples/image.req\ndiff --git a/docs/source/_json/image.resp b/src/plone/restapi/tests/http-examples/image.resp\nsimilarity index 92%\nrename from docs/source/_json/image.resp\nrename to src/plone/restapi/tests/http-examples/image.resp\nindex ab96607b..c2e1a516 100644\n--- a/docs/source/_json/image.resp\n+++ b/src/plone/restapi/tests/http-examples/image.resp\n@@ -32,42 +32,42 @@ Content-Type: application/json\n   "id": "image", \n   "image": {\n     "content-type": "image/png", \n-    "download": "http://localhost:55001/plone/image/@@images/image", \n+    "download": "http://localhost:55001/plone/image/@@images/uuid1.png", \n     "filename": "image.png", \n     "height": 56, \n     "scales": {\n       "icon": {\n-        "download": "http://localhost:55001/plone/image/@@images/image/icon", \n+        "download": "http://localhost:55001/plone/image/@@images/uuid1.png", \n         "height": 8, \n         "width": 32\n       }, \n       "large": {\n-        "download": "http://localhost:55001/plone/image/@@images/image/large", \n+        "download": "http://localhost:55001/plone/image/@@images/uuid1.png", \n         "height": 56, \n         "width": 215\n       }, \n       "listing": {\n-        "download": "http://localhost:55001/plone/image/@@images/image/listing", \n+        "download": "http://localhost:55001/plone/image/@@images/uuid1.png", \n         "height": 4, \n         "width": 16\n       }, \n       "mini": {\n-        "download": "http://localhost:55001/plone/image/@@images/image/mini", \n+        "download": "http://localhost:55001/plone/image/@@images/uuid1.png", \n         "height": 52, \n         "width": 200\n       }, \n       "preview": {\n-        "download": "http://localhost:55001/plone/image/@@images/image/preview", \n+        "download": "http://localhost:55001/plone/image/@@images/uuid1.png", \n         "height": 56, \n         "width": 215\n       }, \n       "thumb": {\n-        "download": "http://localhost:55001/plone/image/@@images/image/thumb", \n+        "download": "http://localhost:55001/plone/image/@@images/uuid1.png", \n         "height": 33, \n         "width": 128\n       }, \n       "tile": {\n-        "download": "http://localhost:55001/plone/image/@@images/image/tile", \n+        "download": "http://localhost:55001/plone/image/@@images/uuid1.png", \n         "height": 16, \n         "width": 64\n       }\ndiff --git a/docs/source/_json/jwt_logged_in.req b/src/plone/restapi/tests/http-examples/jwt_logged_in.req\nsimilarity index 100%\nrename from docs/source/_json/jwt_logged_in.req\nrename to src/plone/restapi/tests/http-examples/jwt_logged_in.req\ndiff --git a/docs/source/_json/jwt_logged_in.resp b/src/plone/restapi/tests/http-examples/jwt_logged_in.resp\nsimilarity index 100%\nrename from docs/source/_json/jwt_logged_in.resp\nrename to src/plone/restapi/tests/http-examples/jwt_logged_in.resp\ndiff --git a/docs/source/_json/jwt_login.req b/src/plone/restapi/tests/http-examples/jwt_login.req\nsimilarity index 100%\nrename from docs/source/_json/jwt_login.req\nrename to src/plone/restapi/tests/http-examples/jwt_login.req\ndiff --git a/docs/source/_json/jwt_login.resp b/src/plone/restapi/tests/http-examples/jwt_login.resp\nsimilarity index 100%\nrename from docs/source/_json/jwt_login.resp\nrename to src/plone/restapi/tests/http-examples/jwt_login.resp\ndiff --git a/docs/source/_json/jwt_login_renew.req b/src/plone/restapi/tests/http-examples/jwt_login_renew.req\nsimilarity index 100%\nrename from docs/source/_json/jwt_login_renew.req\nrename to src/plone/restapi/tests/http-examples/jwt_login_renew.req\ndiff --git a/docs/source/_json/jwt_login_renew.resp b/src/plone/restapi/tests/http-examples/jwt_login_renew.resp\nsimilarity index 100%\nrename from docs/source/_json/jwt_login_renew.resp\nrename to src/plone/restapi/tests/http-examples/jwt_login_renew.resp\ndiff --git a/docs/source/_json/jwt_logout.req b/src/plone/restapi/tests/http-examples/jwt_logout.req\nsimilarity index 100%\nrename from docs/source/_json/jwt_logout.req\nrename to src/plone/restapi/tests/http-examples/jwt_logout.req\ndiff --git a/docs/source/_json/jwt_logout.resp b/src/plone/restapi/tests/http-examples/jwt_logout.resp\nsimilarity index 100%\nrename from docs/source/_json/jwt_logout.resp\nrename to src/plone/restapi/tests/http-examples/jwt_logout.resp\ndiff --git a/docs/source/_json/link.req b/src/plone/restapi/tests/http-examples/link.req\nsimilarity index 100%\nrename from docs/source/_json/link.req\nrename to src/plone/restapi/tests/http-examples/link.req\ndiff --git a/docs/source/_json/link.resp b/src/plone/restapi/tests/http-examples/link.resp\nsimilarity index 100%\nrename from docs/source/_json/link.resp\nrename to src/plone/restapi/tests/http-examples/link.resp\ndiff --git a/docs/source/_json/lock.req b/src/plone/restapi/tests/http-examples/lock.req\nsimilarity index 100%\nrename from docs/source/_json/lock.req\nrename to src/plone/restapi/tests/http-examples/lock.req\ndiff --git a/docs/source/_json/lock.resp b/src/plone/restapi/tests/http-examples/lock.resp\nsimilarity index 100%\nrename from docs/source/_json/lock.resp\nrename to src/plone/restapi/tests/http-examples/lock.resp\ndiff --git a/docs/source/_json/lock_get.req b/src/plone/restapi/tests/http-examples/lock_get.req\nsimilarity index 100%\nrename from docs/source/_json/lock_get.req\nrename to src/plone/restapi/tests/http-examples/lock_get.req\ndiff --git a/docs/source/_json/lock_get.resp b/src/plone/restapi/tests/http-examples/lock_get.resp\nsimilarity index 100%\nrename from docs/source/_json/lock_get.resp\nrename to src/plone/restapi/tests/http-examples/lock_get.resp\ndiff --git a/docs/source/_json/lock_nonstealable_timeout.req b/src/plone/restapi/tests/http-examples/lock_nonstealable_timeout.req\nsimilarity index 100%\nrename from docs/source/_json/lock_nonstealable_timeout.req\nrename to src/plone/restapi/tests/http-examples/lock_nonstealable_timeout.req\ndiff --git a/docs/source/_json/lock_nonstealable_timeout.resp b/src/plone/restapi/tests/http-examples/lock_nonstealable_timeout.resp\nsimilarity index 100%\nrename from docs/source/_json/lock_nonstealable_timeout.resp\nrename to src/plone/restapi/tests/http-examples/lock_nonstealable_timeout.resp\ndiff --git a/docs/source/_json/lock_update.req b/src/plone/restapi/tests/http-examples/lock_update.req\nsimilarity index 100%\nrename from docs/source/_json/lock_update.req\nrename to src/plone/restapi/tests/http-examples/lock_update.req\ndiff --git a/docs/source/_json/lock_update.resp b/src/plone/restapi/tests/http-examples/lock_update.resp\nsimilarity index 100%\nrename from docs/source/_json/lock_update.resp\nrename to src/plone/restapi/tests/http-examples/lock_update.resp\ndiff --git a/docs/source/_json/login.req b/src/plone/restapi/tests/http-examples/login.req\nsimilarity index 100%\nrename from docs/source/_json/login.req\nrename to src/plone/restapi/tests/http-examples/login.req\ndiff --git a/docs/source/_json/move.json b/src/plone/restapi/tests/http-examples/move.json\nsimilarity index 100%\nrename from docs/source/_json/move.json\nrename to src/plone/restapi/tests/http-examples/move.json\ndiff --git a/docs/source/_json/move.json.req b/src/plone/restapi/tests/http-examples/move.json.req\nsimilarity index 100%\nrename from docs/source/_json/move.json.req\nrename to src/plone/restapi/tests/http-examples/move.json.req\ndiff --git a/docs/source/_json/move.json.resp b/src/plone/restapi/tests/http-examples/move.json.resp\nsimilarity index 100%\nrename from docs/source/_json/move.json.resp\nrename to src/plone/restapi/tests/http-examples/move.json.resp\ndiff --git a/docs/source/_json/move.req b/src/plone/restapi/tests/http-examples/move.req\nsimilarity index 100%\nrename from docs/source/_json/move.req\nrename to src/plone/restapi/tests/http-examples/move.req\ndiff --git a/docs/source/_json/move.resp b/src/plone/restapi/tests/http-examples/move.resp\nsimilarity index 100%\nrename from docs/source/_json/move.resp\nrename to src/plone/restapi/tests/http-examples/move.resp\ndiff --git a/docs/source/_json/navigation.req b/src/plone/restapi/tests/http-examples/navigation.req\nsimilarity index 100%\nrename from docs/source/_json/navigation.req\nrename to src/plone/restapi/tests/http-examples/navigation.req\ndiff --git a/docs/source/_json/navigation.resp b/src/plone/restapi/tests/http-examples/navigation.resp\nsimilarity index 100%\nrename from docs/source/_json/navigation.resp\nrename to src/plone/restapi/tests/http-examples/navigation.resp\ndiff --git a/docs/source/_json/navigation_tree.req b/src/plone/restapi/tests/http-examples/navigation_tree.req\nsimilarity index 100%\nrename from docs/source/_json/navigation_tree.req\nrename to src/plone/restapi/tests/http-examples/navigation_tree.req\ndiff --git a/docs/source/_json/navigation_tree.resp b/src/plone/restapi/tests/http-examples/navigation_tree.resp\nsimilarity index 100%\nrename from docs/source/_json/navigation_tree.resp\nrename to src/plone/restapi/tests/http-examples/navigation_tree.resp\ndiff --git a/docs/source/_json/newsitem.req b/src/plone/restapi/tests/http-examples/newsitem.req\nsimilarity index 100%\nrename from docs/source/_json/newsitem.req\nrename to src/plone/restapi/tests/http-examples/newsitem.req\ndiff --git a/docs/source/_json/newsitem.resp b/src/plone/restapi/tests/http-examples/newsitem.resp\nsimilarity index 94%\nrename from docs/source/_json/newsitem.resp\nrename to src/plone/restapi/tests/http-examples/newsitem.resp\nindex a86be0cb..235d894f 100644\n--- a/docs/source/_json/newsitem.resp\n+++ b/src/plone/restapi/tests/http-examples/newsitem.resp\n@@ -33,42 +33,42 @@ Content-Type: application/json\n   "id": "newsitem", \n   "image": {\n     "content-type": "image/png", \n-    "download": "http://localhost:55001/plone/newsitem/@@images/image", \n+    "download": "http://localhost:55001/plone/newsitem/@@images/uuid1.png", \n     "filename": "image.png", \n     "height": 56, \n     "scales": {\n       "icon": {\n-        "download": "http://localhost:55001/plone/newsitem/@@images/image/icon", \n+        "download": "http://localhost:55001/plone/newsitem/@@images/uuid1.png", \n         "height": 8, \n         "width": 32\n       }, \n       "large": {\n-        "download": "http://localhost:55001/plone/newsitem/@@images/image/large", \n+        "download": "http://localhost:55001/plone/newsitem/@@images/uuid1.png", \n         "height": 56, \n         "width": 215\n       }, \n       "listing": {\n-        "download": "http://localhost:55001/plone/newsitem/@@images/image/listing", \n+        "download": "http://localhost:55001/plone/newsitem/@@images/uuid1.png", \n         "height": 4, \n         "width": 16\n       }, \n       "mini": {\n-        "download": "http://localhost:55001/plone/newsitem/@@images/image/mini", \n+        "download": "http://localhost:55001/plone/newsitem/@@images/uuid1.png", \n         "height": 52, \n         "width": 200\n       }, \n       "preview": {\n-        "download": "http://localhost:55001/plone/newsitem/@@images/image/preview", \n+        "download": "http://localhost:55001/plone/newsitem/@@images/uuid1.png", \n         "height": 56, \n         "width": 215\n       }, \n       "thumb": {\n-        "download": "http://localhost:55001/plone/newsitem/@@images/image/thumb", \n+        "download": "http://localhost:55001/plone/newsitem/@@images/uuid1.png", \n         "height": 33, \n         "width": 128\n       }, \n       "tile": {\n-        "download": "http://localhost:55001/plone/newsitem/@@images/image/tile", \n+        "download": "http://localhost:55001/plone/newsitem/@@images/uuid1.png", \n         "height": 16, \n         "width": 64\n       }\ndiff --git a/docs/source/_json/principals.req b/src/plone/restapi/tests/http-examples/principals.req\nsimilarity index 100%\nrename from docs/source/_json/principals.req\nrename to src/plone/restapi/tests/http-examples/principals.req\ndiff --git a/docs/source/_json/principals.resp b/src/plone/restapi/tests/http-examples/principals.resp\nsimilarity index 100%\nrename from docs/source/_json/principals.resp\nrename to src/plone/restapi/tests/http-examples/principals.resp\ndiff --git a/docs/source/_json/refresh_lock.req b/src/plone/restapi/tests/http-examples/refresh_lock.req\nsimilarity index 100%\nrename from docs/source/_json/refresh_lock.req\nrename to src/plone/restapi/tests/http-examples/refresh_lock.req\ndiff --git a/docs/source/_json/refresh_lock.resp b/src/plone/restapi/tests/http-examples/refresh_lock.resp\nsimilarity index 100%\nrename from docs/source/_json/refresh_lock.resp\nrename to src/plone/restapi/tests/http-examples/refresh_lock.resp\ndiff --git a/docs/source/_json/registry_get.req b/src/plone/restapi/tests/http-examples/registry_get.req\nsimilarity index 100%\nrename from docs/source/_json/registry_get.req\nrename to src/plone/restapi/tests/http-examples/registry_get.req\ndiff --git a/docs/source/_json/registry_get.resp b/src/plone/restapi/tests/http-examples/registry_get.resp\nsimilarity index 100%\nrename from docs/source/_json/registry_get.resp\nrename to src/plone/restapi/tests/http-examples/registry_get.resp\ndiff --git a/docs/source/_json/registry_get_list.req b/src/plone/restapi/tests/http-examples/registry_get_list.req\nsimilarity index 100%\nrename from docs/source/_json/registry_get_list.req\nrename to src/plone/restapi/tests/http-examples/registry_get_list.req\ndiff --git a/docs/source/_json/registry_get_list.resp b/src/plone/restapi/tests/http-examples/registry_get_list.resp\nsimilarity index 100%\nrename from docs/source/_json/registry_get_list.resp\nrename to src/plone/restapi/tests/http-examples/registry_get_list.resp\ndiff --git a/docs/source/_json/registry_update.req b/src/plone/restapi/tests/http-examples/registry_update.req\nsimilarity index 100%\nrename from docs/source/_json/registry_update.req\nrename to src/plone/restapi/tests/http-examples/registry_update.req\ndiff --git a/docs/source/_json/registry_update.resp b/src/plone/restapi/tests/http-examples/registry_update.resp\nsimilarity index 100%\nrename from docs/source/_json/registry_update.resp\nrename to src/plone/restapi/tests/http-examples/registry_update.resp\ndiff --git a/docs/source/_json/roles.req b/src/plone/restapi/tests/http-examples/roles.req\nsimilarity index 100%\nrename from docs/source/_json/roles.req\nrename to src/plone/restapi/tests/http-examples/roles.req\ndiff --git a/docs/source/_json/roles.resp b/src/plone/restapi/tests/http-examples/roles.resp\nsimilarity index 100%\nrename from docs/source/_json/roles.resp\nrename to src/plone/restapi/tests/http-examples/roles.resp\ndiff --git a/docs/source/_json/search.req b/src/plone/restapi/tests/http-examples/search.req\nsimilarity index 100%\nrename from docs/source/_json/search.req\nrename to src/plone/restapi/tests/http-examples/search.req\ndiff --git a/docs/source/_json/search.resp b/src/plone/restapi/tests/http-examples/search.resp\nsimilarity index 100%\nrename from docs/source/_json/search.resp\nrename to src/plone/restapi/tests/http-examples/search.resp\ndiff --git a/docs/source/_json/sharing_folder_get.req b/src/plone/restapi/tests/http-examples/sharing_folder_get.req\nsimilarity index 100%\nrename from docs/source/_json/sharing_folder_get.req\nrename to src/plone/restapi/tests/http-examples/sharing_folder_get.req\ndiff --git a/docs/source/_json/sharing_folder_get.resp b/src/plone/restapi/tests/http-examples/sharing_folder_get.resp\nsimilarity index 100%\nrename from docs/source/_json/sharing_folder_get.resp\nrename to src/plone/restapi/tests/http-examples/sharing_folder_get.resp\ndiff --git a/docs/source/_json/sharing_folder_get_include_titles.req b/src/plone/restapi/tests/http-examples/sharing_folder_get_include_titles.req\nsimilarity index 100%\nrename from docs/source/_json/sharing_folder_get_include_titles.req\nrename to src/plone/restapi/tests/http-examples/sharing_folder_get_include_titles.req\ndiff --git a/docs/source/_json/sharing_folder_post.req b/src/plone/restapi/tests/http-examples/sharing_folder_post.req\nsimilarity index 100%\nrename from docs/source/_json/sharing_folder_post.req\nrename to src/plone/restapi/tests/http-examples/sharing_folder_post.req\ndiff --git a/docs/source/_json/sharing_folder_post.resp b/src/plone/restapi/tests/http-examples/sharing_folder_post.resp\nsimilarity index 100%\nrename from docs/source/_json/sharing_folder_post.resp\nrename to src/plone/restapi/tests/http-examples/sharing_folder_post.resp\ndiff --git a/docs/source/_json/sharing_search.req b/src/plone/restapi/tests/http-examples/sharing_search.req\nsimilarity index 100%\nrename from docs/source/_json/sharing_search.req\nrename to src/plone/restapi/tests/http-examples/sharing_search.req\ndiff --git a/docs/source/_json/sharing_search.resp b/src/plone/restapi/tests/http-examples/sharing_search.resp\nsimilarity index 100%\nrename from docs/source/_json/sharing_search.resp\nrename to src/plone/restapi/tests/http-examples/sharing_search.resp\ndiff --git a/docs/source/_json/siteroot.req b/src/plone/restapi/tests/http-examples/siteroot.req\nsimilarity index 100%\nrename from docs/source/_json/siteroot.req\nrename to src/plone/restapi/tests/http-examples/siteroot.req\ndiff --git a/docs/source/_json/siteroot.resp b/src/plone/restapi/tests/http-examples/siteroot.resp\nsimilarity index 100%\nrename from docs/source/_json/siteroot.resp\nrename to src/plone/restapi/tests/http-examples/siteroot.resp\ndiff --git a/docs/source/_json/translated_messages_object_history.req b/src/plone/restapi/tests/http-examples/translated_messages_object_history.req\nsimilarity index 100%\nrename from docs/source/_json/translated_messages_object_history.req\nrename to src/plone/restapi/tests/http-examples/translated_messages_object_history.req\ndiff --git a/docs/source/_json/translated_messages_object_history.resp b/src/plone/restapi/tests/http-examples/translated_messages_object_history.resp\nsimilarity index 100%\nrename from docs/source/_json/translated_messages_object_history.resp\nrename to src/plone/restapi/tests/http-examples/translated_messages_object_history.resp\ndiff --git a/docs/source/_json/translated_messages_object_workflow.req b/src/plone/restapi/tests/http-examples/translated_messages_object_workflow.req\nsimilarity index 100%\nrename from docs/source/_json/translated_messages_object_workflow.req\nrename to src/plone/restapi/tests/http-examples/translated_messages_object_workflow.req\ndiff --git a/docs/source/_json/translated_messages_object_workflow.resp b/src/plone/restapi/tests/http-examples/translated_messages_object_workflow.resp\nsimilarity index 100%\nrename from docs/source/_json/translated_messages_object_workflow.resp\nrename to src/plone/restapi/tests/http-examples/translated_messages_object_workflow.resp\ndiff --git a/docs/source/_json/translated_messages_types.req b/src/plone/restapi/tests/http-examples/translated_messages_types.req\nsimilarity index 100%\nrename from docs/source/_json/translated_messages_types.req\nrename to src/plone/restapi/tests/http-examples/translated_messages_types.req\ndiff --git a/docs/source/_json/translated_messages_types.resp b/src/plone/restapi/tests/http-examples/translated_messages_types.resp\nsimilarity index 100%\nrename from docs/source/_json/translated_messages_types.resp\nrename to src/plone/restapi/tests/http-examples/translated_messages_types.resp\ndiff --git a/docs/source/_json/translated_messages_types_folder.req b/src/plone/restapi/tests/http-examples/translated_messages_types_folder.req\nsimilarity index 100%\nrename from docs/source/_json/translated_messages_types_folder.req\nrename to src/plone/restapi/tests/http-examples/translated_messages_types_folder.req\ndiff --git a/docs/source/_json/translated_messages_types_folder.resp b/src/plone/restapi/tests/http-examples/translated_messages_types_folder.resp\nsimilarity index 100%\nrename from docs/source/_json/translated_messages_types_folder.resp\nrename to src/plone/restapi/tests/http-examples/translated_messages_types_folder.resp\ndiff --git a/docs/source/_json/translations_delete.req b/src/plone/restapi/tests/http-examples/translations_delete.req\nsimilarity index 100%\nrename from docs/source/_json/translations_delete.req\nrename to src/plone/restapi/tests/http-examples/translations_delete.req\ndiff --git a/docs/source/_json/translations_delete.resp b/src/plone/restapi/tests/http-examples/translations_delete.resp\nsimilarity index 100%\nrename from docs/source/_json/translations_delete.resp\nrename to src/plone/restapi/tests/http-examples/translations_delete.resp\ndiff --git a/docs/source/_json/translations_get.req b/src/plone/restapi/tests/http-examples/translations_get.req\nsimilarity index 100%\nrename from docs/source/_json/translations_get.req\nrename to src/plone/restapi/tests/http-examples/translations_get.req\ndiff --git a/docs/source/_json/translations_get.resp b/src/plone/restapi/tests/http-examples/translations_get.resp\nsimilarity index 100%\nrename from docs/source/_json/translations_get.resp\nrename to src/plone/restapi/tests/http-examples/translations_get.resp\ndiff --git a/docs/source/_json/translations_post.req b/src/plone/restapi/tests/http-examples/translations_post.req\nsimilarity index 100%\nrename from docs/source/_json/translations_post.req\nrename to src/plone/restapi/tests/http-examples/translations_post.req\ndiff --git a/docs/source/_json/translations_post.resp b/src/plone/restapi/tests/http-examples/translations_post.resp\nsimilarity index 100%\nrename from docs/source/_json/translations_post.resp\nrename to src/plone/restapi/tests/http-examples/translations_post.resp\ndiff --git a/docs/source/_json/tusreplace_patch.req b/src/plone/restapi/tests/http-examples/tusreplace_patch.req\nsimilarity index 100%\nrename from docs/source/_json/tusreplace_patch.req\nrename to src/plone/restapi/tests/http-examples/tusreplace_patch.req\ndiff --git a/docs/source/_json/tusreplace_patch.resp b/src/plone/restapi/tests/http-examples/tusreplace_patch.resp\nsimilarity index 100%\nrename from docs/source/_json/tusreplace_patch.resp\nrename to src/plone/restapi/tests/http-examples/tusreplace_patch.resp\ndiff --git a/docs/source/_json/tusreplace_post.req b/src/plone/restapi/tests/http-examples/tusreplace_post.req\nsimilarity index 100%\nrename from docs/source/_json/tusreplace_post.req\nrename to src/plone/restapi/tests/http-examples/tusreplace_post.req\ndiff --git a/docs/source/_json/tusreplace_post.resp b/src/plone/restapi/tests/http-examples/tusreplace_post.resp\nsimilarity index 100%\nrename from docs/source/_json/tusreplace_post.resp\nrename to src/plone/restapi/tests/http-examples/tusreplace_post.resp\ndiff --git a/docs/source/_json/tusupload_head.req b/src/plone/restapi/tests/http-examples/tusupload_head.req\nsimilarity index 100%\nrename from docs/source/_json/tusupload_head.req\nrename to src/plone/restapi/tests/http-examples/tusupload_head.req\ndiff --git a/docs/source/_json/tusupload_head.resp b/src/plone/restapi/tests/http-examples/tusupload_head.resp\nsimilarity index 100%\nrename from docs/source/_json/tusupload_head.resp\nrename to src/plone/restapi/tests/http-examples/tusupload_head.resp\ndiff --git a/docs/source/_json/tusupload_options.req b/src/plone/restapi/tests/http-examples/tusupload_options.req\nsimilarity index 100%\nrename from docs/source/_json/tusupload_options.req\nrename to src/plone/restapi/tests/http-examples/tusupload_options.req\ndiff --git a/docs/source/_json/tusupload_options.resp b/src/plone/restapi/tests/http-examples/tusupload_options.resp\nsimilarity index 100%\nrename from docs/source/_json/tusupload_options.resp\nrename to src/plone/restapi/tests/http-examples/tusupload_options.resp\ndiff --git a/docs/source/_json/tusupload_patch.req b/src/plone/restapi/tests/http-examples/tusupload_patch.req\nsimilarity index 100%\nrename from docs/source/_json/tusupload_patch.req\nrename to src/plone/restapi/tests/http-examples/tusupload_patch.req\ndiff --git a/docs/source/_json/tusupload_patch.resp b/src/plone/restapi/tests/http-examples/tusupload_patch.resp\nsimilarity index 100%\nrename from docs/source/_json/tusupload_patch.resp\nrename to src/plone/restapi/tests/http-examples/tusupload_patch.resp\ndiff --git a/docs/source/_json/tusupload_patch_finalized.req b/src/plone/restapi/tests/http-examples/tusupload_patch_finalized.req\nsimilarity index 100%\nrename from docs/source/_json/tusupload_patch_finalized.req\nrename to src/plone/restapi/tests/http-examples/tusupload_patch_finalized.req\ndiff --git a/docs/source/_json/tusupload_patch_finalized.resp b/src/plone/restapi/tests/http-examples/tusupload_patch_finalized.resp\nsimilarity index 100%\nrename from docs/source/_json/tusupload_patch_finalized.resp\nrename to src/plone/restapi/tests/http-examples/tusupload_patch_finalized.resp\ndiff --git a/docs/source/_json/tusupload_post.req b/src/plone/restapi/tests/http-examples/tusupload_post.req\nsimilarity index 100%\nrename from docs/source/_json/tusupload_post.req\nrename to src/plone/restapi/tests/http-examples/tusupload_post.req\ndiff --git a/docs/source/_json/tusupload_post.resp b/src/plone/restapi/tests/http-examples/tusupload_post.resp\nsimilarity index 100%\nrename from docs/source/_json/tusupload_post.resp\nrename to src/plone/restapi/tests/http-examples/tusupload_post.resp\ndiff --git a/docs/source/_json/types.req b/src/plone/restapi/tests/http-examples/types.req\nsimilarity index 100%\nrename from docs/source/_json/types.req\nrename to src/plone/restapi/tests/http-examples/types.req\ndiff --git a/docs/source/_json/types.resp b/src/plone/restapi/tests/http-examples/types.resp\nsimilarity index 100%\nrename from docs/source/_json/types.resp\nrename to src/plone/restapi/tests/http-examples/types.resp\ndiff --git a/docs/source/_json/types_document.req b/src/plone/restapi/tests/http-examples/types_document.req\nsimilarity index 100%\nrename from docs/source/_json/types_document.req\nrename to src/plone/restapi/tests/http-examples/types_document.req\ndiff --git a/docs/source/_json/types_document.resp b/src/plone/restapi/tests/http-examples/types_document.resp\nsimilarity index 100%\nrename from docs/source/_json/types_document.resp\nrename to src/plone/restapi/tests/http-examples/types_document.resp\ndiff --git a/docs/source/_json/unlock.req b/src/plone/restapi/tests/http-examples/unlock.req\nsimilarity index 100%\nrename from docs/source/_json/unlock.req\nrename to src/plone/restapi/tests/http-examples/unlock.req\ndiff --git a/docs/source/_json/unlock.resp b/src/plone/restapi/tests/http-examples/unlock.resp\nsimilarity index 100%\nrename from docs/source/_json/unlock.resp\nrename to src/plone/restapi/tests/http-examples/unlock.resp\ndiff --git a/docs/source/_json/users.req b/src/plone/restapi/tests/http-examples/users.req\nsimilarity index 100%\nrename from docs/source/_json/users.req\nrename to src/plone/restapi/tests/http-examples/users.req\ndiff --git a/docs/source/_json/users.resp b/src/plone/restapi/tests/http-examples/users.resp\nsimilarity index 100%\nrename from docs/source/_json/users.resp\nrename to src/plone/restapi/tests/http-examples/users.resp\ndiff --git a/docs/source/_json/users_add.req b/src/plone/restapi/tests/http-examples/users_add.req\nsimilarity index 100%\nrename from docs/source/_json/users_add.req\nrename to src/plone/restapi/tests/http-examples/users_add.req\ndiff --git a/docs/source/_json/users_add.resp b/src/plone/restapi/tests/http-examples/users_add.resp\nsimilarity index 100%\nrename from docs/source/_json/users_add.resp\nrename to src/plone/restapi/tests/http-examples/users_add.resp\ndiff --git a/docs/source/_json/users_anonymous.req b/src/plone/restapi/tests/http-examples/users_anonymous.req\nsimilarity index 100%\nrename from docs/source/_json/users_anonymous.req\nrename to src/plone/restapi/tests/http-examples/users_anonymous.req\ndiff --git a/docs/source/_json/users_anonymous.resp b/src/plone/restapi/tests/http-examples/users_anonymous.resp\nsimilarity index 100%\nrename from docs/source/_json/users_anonymous.resp\nrename to src/plone/restapi/tests/http-examples/users_anonymous.resp\ndiff --git a/docs/source/_json/users_anonymous_get.req b/src/plone/restapi/tests/http-examples/users_anonymous_get.req\nsimilarity index 100%\nrename from docs/source/_json/users_anonymous_get.req\nrename to src/plone/restapi/tests/http-examples/users_anonymous_get.req\ndiff --git a/docs/source/_json/users_anonymous_get.resp b/src/plone/restapi/tests/http-examples/users_anonymous_get.resp\nsimilarity index 100%\nrename from docs/source/_json/users_anonymous_get.resp\nrename to src/plone/restapi/tests/http-examples/users_anonymous_get.resp\ndiff --git a/docs/source/_json/users_authorized_get.req b/src/plone/restapi/tests/http-examples/users_authorized_get.req\nsimilarity index 100%\nrename from docs/source/_json/users_authorized_get.req\nrename to src/plone/restapi/tests/http-examples/users_authorized_get.req\ndiff --git a/docs/source/_json/users_authorized_get.resp b/src/plone/restapi/tests/http-examples/users_authorized_get.resp\nsimilarity index 100%\nrename from docs/source/_json/users_authorized_get.resp\nrename to src/plone/restapi/tests/http-examples/users_authorized_get.resp\ndiff --git a/docs/source/_json/users_created.req b/src/plone/restapi/tests/http-examples/users_created.req\nsimilarity index 100%\nrename from docs/source/_json/users_created.req\nrename to src/plone/restapi/tests/http-examples/users_created.req\ndiff --git a/docs/source/_json/users_created.resp b/src/plone/restapi/tests/http-examples/users_created.resp\nsimilarity index 100%\nrename from docs/source/_json/users_created.resp\nrename to src/plone/restapi/tests/http-examples/users_created.resp\ndiff --git a/docs/source/_json/users_delete.req b/src/plone/restapi/tests/http-examples/users_delete.req\nsimilarity index 100%\nrename from docs/source/_json/users_delete.req\nrename to src/plone/restapi/tests/http-examples/users_delete.req\ndiff --git a/docs/source/_json/users_delete.resp b/src/plone/restapi/tests/http-examples/users_delete.resp\nsimilarity index 100%\nrename from docs/source/_json/users_delete.resp\nrename to src/plone/restapi/tests/http-examples/users_delete.resp\ndiff --git a/docs/source/_json/users_filtered_by_username.req b/src/plone/restapi/tests/http-examples/users_filtered_by_username.req\nsimilarity index 100%\nrename from docs/source/_json/users_filtered_by_username.req\nrename to src/plone/restapi/tests/http-examples/users_filtered_by_username.req\ndiff --git a/docs/source/_json/users_filtered_by_username.resp b/src/plone/restapi/tests/http-examples/users_filtered_by_username.resp\nsimilarity index 100%\nrename from docs/source/_json/users_filtered_by_username.resp\nrename to src/plone/restapi/tests/http-examples/users_filtered_by_username.resp\ndiff --git a/docs/source/_json/users_get.req b/src/plone/restapi/tests/http-examples/users_get.req\nsimilarity index 100%\nrename from docs/source/_json/users_get.req\nrename to src/plone/restapi/tests/http-examples/users_get.req\ndiff --git a/docs/source/_json/users_get.resp b/src/plone/restapi/tests/http-examples/users_get.resp\nsimilarity index 100%\nrename from docs/source/_json/users_get.resp\nrename to src/plone/restapi/tests/http-examples/users_get.resp\ndiff --git a/docs/source/_json/users_reset.req b/src/plone/restapi/tests/http-examples/users_reset.req\nsimilarity index 100%\nrename from docs/source/_json/users_reset.req\nrename to src/plone/restapi/tests/http-examples/users_reset.req\ndiff --git a/docs/source/_json/users_unauthorized.req b/src/plone/restapi/tests/http-examples/users_unauthorized.req\nsimilarity index 100%\nrename from docs/source/_json/users_unauthorized.req\nrename to src/plone/restapi/tests/http-examples/users_unauthorized.req\ndiff --git a/docs/source/_json/users_unauthorized.resp b/src/plone/restapi/tests/http-examples/users_unauthorized.resp\nsimilarity index 100%\nrename from docs/source/_json/users_unauthorized.resp\nrename to src/plone/restapi/tests/http-examples/users_unauthorized.resp\ndiff --git a/docs/source/_json/users_unauthorized_get.req b/src/plone/restapi/tests/http-examples/users_unauthorized_get.req\nsimilarity index 100%\nrename from docs/source/_json/users_unauthorized_get.req\nrename to src/plone/restapi/tests/http-examples/users_unauthorized_get.req\ndiff --git a/docs/source/_json/users_unauthorized_get.resp b/src/plone/restapi/tests/http-examples/users_unauthorized_get.resp\nsimilarity index 100%\nrename from docs/source/_json/users_unauthorized_get.resp\nrename to src/plone/restapi/tests/http-examples/users_unauthorized_get.resp\ndiff --git a/docs/source/_json/users_update.req b/src/plone/restapi/tests/http-examples/users_update.req\nsimilarity index 100%\nrename from docs/source/_json/users_update.req\nrename to src/plone/restapi/tests/http-examples/users_update.req\ndiff --git a/docs/source/_json/users_update.resp b/src/plone/restapi/tests/http-examples/users_update.resp\nsimilarity index 100%\nrename from docs/source/_json/users_update.resp\nrename to src/plone/restapi/tests/http-examples/users_update.resp\ndiff --git a/docs/source/_json/vocabularies.req b/src/plone/restapi/tests/http-examples/vocabularies.req\nsimilarity index 100%\nrename from docs/source/_json/vocabularies.req\nrename to src/plone/restapi/tests/http-examples/vocabularies.req\ndiff --git a/docs/source/_json/vocabularies.resp b/src/plone/restapi/tests/http-examples/vocabularies.resp\nsimilarity index 100%\nrename from docs/source/_json/vocabularies.resp\nrename to src/plone/restapi/tests/http-examples/vocabularies.resp\ndiff --git a/docs/source/_json/vocabularies_get.req b/src/plone/restapi/tests/http-examples/vocabularies_get.req\nsimilarity index 100%\nrename from docs/source/_json/vocabularies_get.req\nrename to src/plone/restapi/tests/http-examples/vocabularies_get.req\ndiff --git a/docs/source/_json/vocabularies_get.resp b/src/plone/restapi/tests/http-examples/vocabularies_get.resp\nsimilarity index 100%\nrename from docs/source/_json/vocabularies_get.resp\nrename to src/plone/restapi/tests/http-examples/vocabularies_get.resp\ndiff --git a/docs/source/_json/workflow_get.req b/src/plone/restapi/tests/http-examples/workflow_get.req\nsimilarity index 100%\nrename from docs/source/_json/workflow_get.req\nrename to src/plone/restapi/tests/http-examples/workflow_get.req\ndiff --git a/docs/source/_json/workflow_get.resp b/src/plone/restapi/tests/http-examples/workflow_get.resp\nsimilarity index 100%\nrename from docs/source/_json/workflow_get.resp\nrename to src/plone/restapi/tests/http-examples/workflow_get.resp\ndiff --git a/docs/source/_json/workflow_post.req b/src/plone/restapi/tests/http-examples/workflow_post.req\nsimilarity index 100%\nrename from docs/source/_json/workflow_post.req\nrename to src/plone/restapi/tests/http-examples/workflow_post.req\ndiff --git a/docs/source/_json/workflow_post.resp b/src/plone/restapi/tests/http-examples/workflow_post.resp\nsimilarity index 100%\nrename from docs/source/_json/workflow_post.resp\nrename to src/plone/restapi/tests/http-examples/workflow_post.resp\ndiff --git a/docs/source/_json/workflow_post_with_body.req b/src/plone/restapi/tests/http-examples/workflow_post_with_body.req\nsimilarity index 100%\nrename from docs/source/_json/workflow_post_with_body.req\nrename to src/plone/restapi/tests/http-examples/workflow_post_with_body.req\ndiff --git a/docs/source/_json/workflow_post_with_body.resp b/src/plone/restapi/tests/http-examples/workflow_post_with_body.resp\nsimilarity index 100%\nrename from docs/source/_json/workflow_post_with_body.resp\nrename to src/plone/restapi/tests/http-examples/workflow_post_with_body.resp\ndiff --git a/src/plone/restapi/tests/robot/test.robot b/src/plone/restapi/tests/robot/test.robot\nindex f4bbd4b1..9313a7d5 100644\n--- a/src/plone/restapi/tests/robot/test.robot\n+++ b/src/plone/restapi/tests/robot/test.robot\n@@ -13,10 +13,10 @@ ${BROWSER} =  firefox\n \n Plone site\n     [Tags]  start\n-    Go to  http://localhost:55001/plone/\n+    Go to  ${PLONE_URL}\n     Page should contain  Plone site\n \n *** Keywords ***\n \n Start browser\n-    Open browser  http://localhost:55001/plone/  browser=${BROWSER}\n+    Open browser  ${PLONE_URL}  browser=${BROWSER}\ndiff --git a/src/plone/restapi/tests/test_atcontent_deserializer.py b/src/plone/restapi/tests/test_atcontent_deserializer.py\nindex a97f3cbd..56e74894 100644\n--- a/src/plone/restapi/tests/test_atcontent_deserializer.py\n+++ b/src/plone/restapi/tests/test_atcontent_deserializer.py\n@@ -45,12 +45,13 @@ def setUp(self):\n                 title=\'Test doc \' + str(x)\n             )\n \n-    def deserialize(self, body=\'{}\', validate_all=False, context=None):\n+    def deserialize(self, body=\'{}\', validate_all=False, create=False,\n+                    context=None):\n         context = context or self.doc1\n         self.request[\'BODY\'] = body\n         deserializer = getMultiAdapter((context, self.request),\n                                        IDeserializeFromJson)\n-        return deserializer(validate_all=validate_all)\n+        return deserializer(validate_all=validate_all, create=create)\n \n     def test_deserializer_ignores_readonly_fields(self):\n         self.doc1.getField(\'testReadonlyField\').set(self.doc1, \'Readonly\')\n@@ -70,7 +71,7 @@ def test_deserializer_validates_content(self):\n \n     def test_deserializer_clears_creation_flag(self):\n         self.doc1.markCreationFlag()\n-        self.deserialize(body=\'{"testStringField": "Updated"}\')\n+        self.deserialize(body=\'{"testStringField": "Updated"}\', create=True)\n         self.assertFalse(self.doc1.checkCreationFlag(),\n                          \'Creation flag not cleared\')\n \ndiff --git a/src/plone/restapi/tests/test_atfield_serializer.py b/src/plone/restapi/tests/test_atfield_serializer.py\nindex 79318660..da1b23ad 100644\n--- a/src/plone/restapi/tests/test_atfield_serializer.py\n+++ b/src/plone/restapi/tests/test_atfield_serializer.py\n@@ -1,14 +1,22 @@\n # -*- coding: utf-8 -*-\n from DateTime import DateTime\n-from plone.app.testing import TEST_USER_ID\n+from mock import patch\n from plone.app.testing import setRoles\n+from plone.app.testing import TEST_USER_ID\n from plone.restapi.interfaces import IFieldSerializer\n from plone.restapi.testing import PLONE_RESTAPI_AT_INTEGRATION_TESTING\n+from plone.restapi.testing import PLONE_VERSION\n+from plone.scale import storage\n from zope.component import getMultiAdapter\n \n import os\n import unittest\n \n+if PLONE_VERSION.base_version >= \'5.1\':\n+    GIF_SCALE_FORMAT = \'png\'\n+else:\n+    GIF_SCALE_FORMAT = \'jpeg\'\n+\n \n class TestATFieldSerializer(unittest.TestCase):\n \n@@ -95,52 +103,55 @@ def test_image_field_serialization_returns_dict(self):\n         image_file = os.path.join(os.path.dirname(__file__), u\'1024x768.gif\')\n         image_data = open(image_file, \'rb\').read()\n         fn = \'testImageField\'\n-        value = self.serialize(fn, image_data,\n-                               filename=\'1024x768.gif\', mimetype=\'image/gif\')\n-        self.assertTrue(isinstance(value, dict), \'Not a <dict>\')\n+        with patch.object(storage, \'uuid4\', return_value=\'uuid_1\'):\n+            value = self.serialize(\n+                fn, image_data, filename=\'1024x768.gif\', mimetype=\'image/gif\')\n+            self.assertTrue(isinstance(value, dict), \'Not a <dict>\')\n \n-        self.maxDiff = 99999\n-        obj_url = self.doc1.absolute_url()\n-        download_url = u\'{}/@@images/{}\'.format(obj_url, fn)\n-        scales = {\n-            u\'listing\': {\n-                u\'download\': u\'{}/@@images/{}/listing\'.format(obj_url, fn),\n-                u\'width\': 16,\n-                u\'height\': 12},\n-            u\'icon\': {\n-                u\'download\': u\'{}/@@images/{}/icon\'.format(obj_url, fn),\n-                u\'width\': 32,\n-                u\'height\': 24},\n-            u\'tile\': {\n-                u\'download\': u\'{}/@@images/{}/tile\'.format(obj_url, fn),\n-                u\'width\': 64,\n-                u\'height\': 48},\n-            u\'thumb\': {\n-                u\'download\': u\'{}/@@images/{}/thumb\'.format(obj_url, fn),\n-                u\'width\': 128,\n-                u\'height\': 96},\n-            u\'mini\': {\n-                u\'download\': u\'{}/@@images/{}/mini\'.format(obj_url, fn),\n-                u\'width\': 200,\n-                u\'height\': 150},\n-            u\'preview\': {\n-                u\'download\': u\'{}/@@images/{}/preview\'.format(obj_url, fn),\n-                u\'width\': 400,\n-                u\'height\': 300},\n-            u\'large\': {\n-                u\'download\': u\'{}/@@images/{}/large\'.format(obj_url, fn),\n-                u\'width\': 768,\n-                u\'height\': 576},\n-        }\n-        self.assertEqual(\n-            {u\'filename\': u\'1024x768.gif\',\n-             u\'content-type\': u\'image/gif\',\n-             u\'size\': 1514,\n-             u\'download\': download_url,\n-             u\'width\': 1024,\n-             u\'height\': 768,\n-             u\'scales\': scales},\n-            value)\n+            self.maxDiff = 99999\n+            obj_url = self.doc1.absolute_url()\n+            scale_url_uuid = \'uuid_1\'\n+            download_url = u\'{}/@@images/{}.{}\'.format(\n+                obj_url, scale_url_uuid, GIF_SCALE_FORMAT)\n+            scales = {\n+                u\'listing\': {\n+                    u\'download\': download_url,\n+                    u\'width\': 16,\n+                    u\'height\': 12},\n+                u\'icon\': {\n+                    u\'download\': download_url,\n+                    u\'width\': 32,\n+                    u\'height\': 24},\n+                u\'tile\': {\n+                    u\'download\': download_url,\n+                    u\'width\': 64,\n+                    u\'height\': 48},\n+                u\'thumb\': {\n+                    u\'download\': download_url,\n+                    u\'width\': 80,\n+                    u\'height\': 60},\n+                u\'mini\': {\n+                    u\'download\': download_url,\n+                    u\'width\': 200,\n+                    u\'height\': 150},\n+                u\'preview\': {\n+                    u\'download\': download_url,\n+                    u\'width\': 400,\n+                    u\'height\': 300},\n+                u\'large\': {\n+                    u\'download\': download_url,\n+                    u\'width\': 768,\n+                    u\'height\': 576},\n+            }\n+            self.assertEqual({\n+                u\'filename\': u\'1024x768.gif\',\n+                u\'content-type\': u\'image/gif\',\n+                u\'size\': 1514,\n+                u\'download\': download_url,\n+                u\'width\': 1024,\n+                u\'height\': 768,\n+                u\'scales\': scales},\n+                value)\n \n     def test_blob_field_serialization_returns_dict(self):\n         value = self.serialize(\'testBlobField\', \'spam and eggs\',\n@@ -171,51 +182,53 @@ def test_blobimage_field_serialization_returns_dict(self):\n         image_file = os.path.join(os.path.dirname(__file__), u\'1024x768.gif\')\n         image_data = open(image_file, \'rb\').read()\n         fn = \'testBlobImageField\'\n-        value = self.serialize(fn, image_data,\n-                               filename=\'1024x768.gif\', mimetype=\'image/gif\')\n-        self.assertTrue(isinstance(value, dict), \'Not a <dict>\')\n-\n-        obj_url = self.doc1.absolute_url()\n-        download_url = u\'{}/@@images/{}\'.format(obj_url, fn)\n-        scales = {\n-            u\'listing\': {\n-                u\'download\': u\'{}/@@images/{}/listing\'.format(obj_url, fn),\n-                u\'width\': 16,\n-                u\'height\': 12},\n-            u\'icon\': {\n-                u\'download\': u\'{}/@@images/{}/icon\'.format(obj_url, fn),\n-                u\'width\': 32,\n-                u\'height\': 24},\n-            u\'tile\': {\n-                u\'download\': u\'{}/@@images/{}/tile\'.format(obj_url, fn),\n-                u\'width\': 64,\n-                u\'height\': 48},\n-            u\'thumb\': {\n-                u\'download\': u\'{}/@@images/{}/thumb\'.format(obj_url, fn),\n-                u\'width\': 128,\n-                u\'height\': 96},\n-            u\'mini\': {\n-                u\'download\': u\'{}/@@images/{}/mini\'.format(obj_url, fn),\n-                u\'width\': 200,\n-                u\'height\': 150},\n-            u\'preview\': {\n-                u\'download\': u\'{}/@@images/{}/preview\'.format(obj_url, fn),\n-                u\'width\': 400,\n-                u\'height\': 300},\n-            u\'large\': {\n-                u\'download\': u\'{}/@@images/{}/large\'.format(obj_url, fn),\n-                u\'width\': 768,\n-                u\'height\': 576},\n-        }\n-        self.assertEqual(\n-            {u\'filename\': u\'1024x768.gif\',\n-             u\'content-type\': u\'image/gif\',\n-             u\'size\': 1514,\n-             u\'download\': download_url,\n-             u\'width\': 1024,\n-             u\'height\': 768,\n-             u\'scales\': scales},\n-            value)\n+        with patch.object(storage, \'uuid4\', return_value=\'uuid_1\'):\n+            value = self.serialize(\n+                fn, image_data, filename=\'1024x768.gif\', mimetype=\'image/gif\')\n+            self.assertTrue(isinstance(value, dict), \'Not a <dict>\')\n+            scale_url_uuid = \'uuid_1\'\n+            obj_url = self.doc1.absolute_url()\n+            download_url = u\'{}/@@images/{}.{}\'.format(\n+                obj_url, scale_url_uuid, GIF_SCALE_FORMAT)\n+            scales = {\n+                u\'listing\': {\n+                    u\'download\': download_url,\n+                    u\'width\': 16,\n+                    u\'height\': 12},\n+                u\'icon\': {\n+                    u\'download\': download_url,\n+                    u\'width\': 32,\n+                    u\'height\': 24},\n+                u\'tile\': {\n+                    u\'download\': download_url,\n+                    u\'width\': 64,\n+                    u\'height\': 48},\n+                u\'thumb\': {\n+                    u\'download\': download_url,\n+                    u\'width\': 128,\n+                    u\'height\': 96},\n+                u\'mini\': {\n+                    u\'download\': download_url,\n+                    u\'width\': 200,\n+                    u\'height\': 150},\n+                u\'preview\': {\n+                    u\'download\': download_url,\n+                    u\'width\': 400,\n+                    u\'height\': 300},\n+                u\'large\': {\n+                    u\'download\': download_url,\n+                    u\'width\': 768,\n+                    u\'height\': 576},\n+            }\n+            self.assertEqual({\n+                u\'filename\': u\'1024x768.gif\',\n+                u\'content-type\': u\'image/gif\',\n+                u\'size\': 1514,\n+                u\'download\': download_url,\n+                u\'width\': 1024,\n+                u\'height\': 768,\n+                u\'scales\': scales},\n+                value)\n \n     def test_query_field_serialization_returns_list(self):\n         query_data = [\ndiff --git a/src/plone/restapi/tests/test_batching.py b/src/plone/restapi/tests/test_batching.py\nindex 853c4110..e3f11654 100644\n--- a/src/plone/restapi/tests/test_batching.py\n+++ b/src/plone/restapi/tests/test_batching.py\n@@ -268,7 +268,7 @@ def test_contains_canonical_url(self):\n         # Response should contain canonical URL without batching params\n         self.assertEqual(\n             response.json()[\'@id\'],\n-            u\'http://localhost:55001/plone/\')\n+            self.portal_url + u\'/\')\n \n     def test_contains_batching_links(self):\n         # Fetch the second page of the batch\ndiff --git a/src/plone/restapi/tests/test_behaviors.py b/src/plone/restapi/tests/test_behaviors.py\nnew file mode 100644\nindex 00000000..382c86a0\n--- /dev/null\n+++ b/src/plone/restapi/tests/test_behaviors.py\n@@ -0,0 +1,56 @@\n+# -*- coding: utf-8 -*-\n+from plone.app.testing import login\n+from plone.app.testing import setRoles\n+from plone.app.testing import TEST_USER_ID\n+from plone.app.testing import TEST_USER_NAME\n+from plone.dexterity.fti import DexterityFTI\n+from plone.restapi.behaviors import ITiles\n+from plone.restapi.testing import PLONE_RESTAPI_DX_INTEGRATION_TESTING\n+from zope.interface import alsoProvides\n+\n+import unittest\n+\n+\n+class TestTilesBehavior(unittest.TestCase):\n+\n+    layer = PLONE_RESTAPI_DX_INTEGRATION_TESTING\n+\n+    def setUp(self):\n+        self.portal = self.layer[\'portal\']\n+        self.request = self.layer[\'request\']\n+        login(self.portal, TEST_USER_NAME)\n+        setRoles(self.portal, TEST_USER_ID, [\'Manager\'])\n+        fti = DexterityFTI(\'tiledfolder\')\n+        self.portal.portal_types._setObject(\'tiledfolder\', fti)\n+        fti.klass = \'plone.dexterity.content.Container\'\n+        fti.behaviors = (\n+            \'plone.tiles\',\n+        )\n+        self.fti = fti\n+        alsoProvides(self.request, ITiles)\n+\n+    def test_basic_fields(self):\n+        self.portal.invokeFactory(\n+            \'tiledfolder\',\n+            id=\'tiledfolder\',\n+            title=u\'Folder with tiles\'\n+        )\n+\n+        self.portal[\'tiledfolder\'].tiles = {\n+            \'uuid1\': {\'@type\': \'title\'},\n+            \'uuid2\': {\'@type\': \'description\'}\n+        }\n+\n+        self.portal[\'tiledfolder\'].tiles_layout = {\n+            \'uuid1\': {\'@type\': \'title\'},\n+            \'uuid2\': {\'@type\': \'description\'}\n+        }\n+\n+    def test_behavior_provides(self):\n+        self.portal.invokeFactory(\n+            \'tiledfolder\',\n+            id=\'tiledfolder\',\n+            title=u\'Folder with tiles\'\n+        )\n+\n+        ITiles.providedBy(self.portal[\'tiledfolder\'])\ndiff --git a/src/plone/restapi/tests/test_content_get.py b/src/plone/restapi/tests/test_content_get.py\nindex 0bdcaa3d..21daeaf1 100644\n--- a/src/plone/restapi/tests/test_content_get.py\n+++ b/src/plone/restapi/tests/test_content_get.py\n@@ -23,6 +23,7 @@ class TestContentGet(unittest.TestCase):\n     def setUp(self):\n         self.app = self.layer[\'app\']\n         self.portal = self.layer[\'portal\']\n+        self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, [\'Member\'])\n         login(self.portal, SITE_OWNER_NAME)\n         self.portal.invokeFactory(\n@@ -120,7 +121,7 @@ def test_get_content_returns_fullobjects_correct_id(self):\n         self.assertEqual(response.status_code, 200)\n         self.assertEqual(3, len(response.json()[\'items\']))\n         self.assertEqual(response.json()[\'items\'][1][\'@id\'],\n-                         \'http://localhost:55001/plone/folder1/folder2\')\n+                         self.portal_url + u\'/folder1/folder2\')\n \n     def test_get_content_returns_fullobjects_non_recursive(self):\n         response = requests.get(\n@@ -154,7 +155,7 @@ def test_get_content_includes_related_items(self):\n         self.assertEqual(1, len(response.json()[\'relatedItems\']))\n         self.assertEqual(\n             [{\n-                u\'@id\': u\'http://localhost:55001/plone/folder1/folder2/doc2\',\n+                u\'@id\': self.portal_url + u\'/folder1/folder2/doc2\',\n                 u\'@type\': u\'Document\',\n                 u\'description\': u\'\',\n                 u\'review_state\': u\'published\',\ndiff --git a/src/plone/restapi/tests/test_content_patch.py b/src/plone/restapi/tests/test_content_patch.py\nindex 8a02f17f..39aecd66 100644\n--- a/src/plone/restapi/tests/test_content_patch.py\n+++ b/src/plone/restapi/tests/test_content_patch.py\n@@ -1,15 +1,20 @@\n # -*- coding: utf-8 -*-\n-from Products.CMFCore.PortalContent import PortalContent\n-from Products.CMFCore.utils import getToolByName\n+from OFS.interfaces import IObjectWillBeAddedEvent\n+from plone.app.testing import login\n+from plone.app.testing import setRoles\n from plone.app.testing import SITE_OWNER_NAME\n from plone.app.testing import SITE_OWNER_PASSWORD\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import TEST_USER_NAME\n from plone.app.testing import TEST_USER_PASSWORD\n-from plone.app.testing import login\n-from plone.app.testing import setRoles\n from plone.restapi.testing import PLONE_RESTAPI_AT_FUNCTIONAL_TESTING\n from plone.restapi.testing import PLONE_RESTAPI_DX_FUNCTIONAL_TESTING\n+from Products.CMFCore.PortalContent import PortalContent\n+from Products.CMFCore.utils import getToolByName\n+from zope.component import getGlobalSiteManager\n+from zope.lifecycleevent.interfaces import IObjectAddedEvent\n+from zope.lifecycleevent.interfaces import IObjectCreatedEvent\n+from zope.lifecycleevent.interfaces import IObjectModifiedEvent\n \n import requests\n import transaction\n@@ -164,6 +169,38 @@ def test_patch_image_with_the_contents_of_the_get_preserves_image(self):\n         self.assertIn(\'content-type\', response.json()[\'image\'])\n         self.assertIn(\'download\', response.json()[\'image\'])\n \n+    def test_patch_document_fires_proper_events(self):\n+        sm = getGlobalSiteManager()\n+        fired_events = []\n+\n+        def record_event(event):\n+            fired_events.append(event.__class__.__name__)\n+\n+        sm.registerHandler(record_event, (IObjectCreatedEvent,))\n+        sm.registerHandler(record_event, (IObjectWillBeAddedEvent,))\n+        sm.registerHandler(record_event, (IObjectAddedEvent,))\n+        sm.registerHandler(record_event, (IObjectModifiedEvent,))\n+\n+        requests.patch(\n+            self.portal.doc1.absolute_url(),\n+            headers={\'Accept\': \'application/json\'},\n+            auth=(SITE_OWNER_NAME, SITE_OWNER_PASSWORD),\n+            json={\n+                "description": "123",\n+            },\n+        )\n+\n+        self.assertEqual(\n+            fired_events,\n+            [\n+                \'ObjectModifiedEvent\',\n+            ])\n+\n+        sm.unregisterHandler(record_event, (IObjectCreatedEvent,))\n+        sm.unregisterHandler(record_event, (IObjectWillBeAddedEvent,))\n+        sm.unregisterHandler(record_event, (IObjectAddedEvent,))\n+        sm.unregisterHandler(record_event, (IObjectModifiedEvent,))\n+\n \n class TestATContentPatch(unittest.TestCase):\n \n@@ -196,3 +233,35 @@ def test_patch_reindexes_document(self):\n         transaction.begin()\n         brain = self.portal.portal_catalog(UID=self.portal.doc1.UID())[0]\n         self.assertEqual(brain.Description, \'Foo Bar\')\n+\n+    def test_patch_document_fires_proper_events(self):\n+        sm = getGlobalSiteManager()\n+        fired_events = []\n+\n+        def record_event(event):\n+            fired_events.append(event.__class__.__name__)\n+\n+        sm.registerHandler(record_event, (IObjectCreatedEvent,))\n+        sm.registerHandler(record_event, (IObjectWillBeAddedEvent,))\n+        sm.registerHandler(record_event, (IObjectAddedEvent,))\n+        sm.registerHandler(record_event, (IObjectModifiedEvent,))\n+\n+        requests.patch(\n+            self.portal.doc1.absolute_url(),\n+            headers={\'Accept\': \'application/json\'},\n+            auth=(TEST_USER_NAME, TEST_USER_PASSWORD),\n+            json={\n+                "description": "123",\n+            },\n+        )\n+\n+        self.assertEqual(\n+            fired_events,\n+            [\n+                \'ObjectEditedEvent\',\n+            ])\n+\n+        sm.unregisterHandler(record_event, (IObjectCreatedEvent,))\n+        sm.unregisterHandler(record_event, (IObjectWillBeAddedEvent,))\n+        sm.unregisterHandler(record_event, (IObjectAddedEvent,))\n+        sm.unregisterHandler(record_event, (IObjectModifiedEvent,))\ndiff --git a/src/plone/restapi/tests/test_content_post.py b/src/plone/restapi/tests/test_content_post.py\nindex 7edab292..f5572bce 100644\n--- a/src/plone/restapi/tests/test_content_post.py\n+++ b/src/plone/restapi/tests/test_content_post.py\n@@ -1,14 +1,19 @@\n # -*- coding: utf-8 -*-\n-from Products.CMFCore.utils import getToolByName\n+from OFS.interfaces import IObjectWillBeAddedEvent\n+from plone.app.testing import login\n+from plone.app.testing import setRoles\n from plone.app.testing import SITE_OWNER_NAME\n from plone.app.testing import SITE_OWNER_PASSWORD\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import TEST_USER_NAME\n from plone.app.testing import TEST_USER_PASSWORD\n-from plone.app.testing import login\n-from plone.app.testing import setRoles\n-from plone.restapi.testing import PLONE_RESTAPI_DX_FUNCTIONAL_TESTING\n from plone.restapi.testing import PLONE_RESTAPI_AT_FUNCTIONAL_TESTING\n+from plone.restapi.testing import PLONE_RESTAPI_DX_FUNCTIONAL_TESTING\n+from Products.CMFCore.utils import getToolByName\n+from zope.component import getGlobalSiteManager\n+from zope.lifecycleevent.interfaces import IObjectAddedEvent\n+from zope.lifecycleevent.interfaces import IObjectCreatedEvent\n+from zope.lifecycleevent.interfaces import IObjectModifiedEvent\n \n import requests\n import transaction\n@@ -22,6 +27,7 @@ class TestFolderCreate(unittest.TestCase):\n     def setUp(self):\n         self.app = self.layer[\'app\']\n         self.portal = self.layer[\'portal\']\n+        self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, [\'Member\'])\n         login(self.portal, SITE_OWNER_NAME)\n         self.portal.invokeFactory(\n@@ -51,7 +57,7 @@ def test_post_to_folder_creates_document(self):\n         self.assertEqual("mydocument", response.json().get(\'id\'))\n         self.assertEqual("My Document", response.json().get(\'title\'))\n \n-        expected_url = "http://localhost:55001/plone/folder1/mydocument"\n+        expected_url = self.portal_url + u"/folder1/mydocument"\n         self.assertEqual(expected_url, response.json().get(\'@id\'))\n \n     def test_post_to_folder_creates_folder(self):\n@@ -72,7 +78,7 @@ def test_post_to_folder_creates_folder(self):\n         self.assertEqual("myfolder", response.json().get(\'id\'))\n         self.assertEqual("My Folder", response.json().get(\'title\'))\n \n-        expected_url = "http://localhost:55001/plone/folder1/myfolder"\n+        expected_url = self.portal_url + u"/folder1/myfolder"\n         self.assertEqual(expected_url, response.json().get(\'@id\'))\n \n     def test_post_without_type_returns_400(self):\n@@ -149,8 +155,62 @@ def test_post_to_folder_returns_401_unauthorized(self):\n         )\n         self.assertEqual(401, response.status_code)\n \n+    def test_post_to_folder_without_add_permission_returns_403_forbidden(self):\n+        self.portal.folder1.manage_permission(\n+            \'plone.app.contenttypes: Add Document\', [], acquire=False)\n+        transaction.commit()\n+        response = requests.post(\n+            self.portal.folder1.absolute_url(),\n+            headers={\'Accept\': \'application/json\'},\n+            auth=(SITE_OWNER_NAME, SITE_OWNER_PASSWORD),\n+            json={\n+                "@type": "Document",\n+                "id": "mydocument",\n+                "title": "My Document",\n+            },\n+        )\n+        self.assertEqual(403, response.status_code)\n+\n+    def test_post_to_folder_fires_proper_events(self):\n+        sm = getGlobalSiteManager()\n+        fired_events = []\n+\n+        def record_event(event):\n+            fired_events.append(event.__class__.__name__)\n+\n+        sm.registerHandler(record_event, (IObjectCreatedEvent,))\n+        sm.registerHandler(record_event, (IObjectWillBeAddedEvent,))\n+        sm.registerHandler(record_event, (IObjectAddedEvent,))\n+        sm.registerHandler(record_event, (IObjectModifiedEvent,))\n+\n+        requests.post(\n+            self.portal.folder1.absolute_url(),\n+            headers={\'Accept\': \'application/json\'},\n+            auth=(SITE_OWNER_NAME, SITE_OWNER_PASSWORD),\n+            json={\n+                "@type": "Document",\n+                "id": "mydocument",\n+                "title": "My Document",\n+                "description": "123",\n+            },\n+        )\n+\n+        self.assertEqual(\n+            fired_events,\n+            [\n+                \'ObjectCreatedEvent\',\n+                \'ObjectWillBeAddedEvent\',\n+                \'ObjectAddedEvent\',\n+                \'ContainerModifiedEvent\',\n+            ])\n \n-class TestFolderCreateAT(unittest.TestCase):\n+        sm.unregisterHandler(record_event, (IObjectCreatedEvent,))\n+        sm.unregisterHandler(record_event, (IObjectWillBeAddedEvent,))\n+        sm.unregisterHandler(record_event, (IObjectAddedEvent,))\n+        sm.unregisterHandler(record_event, (IObjectModifiedEvent,))\n+\n+\n+class TestATFolderCreate(unittest.TestCase):\n \n     layer = PLONE_RESTAPI_AT_FUNCTIONAL_TESTING\n \n@@ -196,3 +256,55 @@ def test_id_from_filename(self):\n         self.assertEqual(201, response.status_code)\n         transaction.begin()\n         self.assertIn(\'test.txt\', self.portal.folder1)\n+\n+    def test_post_with_id_already_in_use_returns_400(self):\n+        self.portal.folder1.invokeFactory(\'Document\', \'mydocument\')\n+        transaction.commit()\n+        response = requests.post(\n+            self.portal.folder1.absolute_url(),\n+            headers={\'Accept\': \'application/json\'},\n+            auth=(TEST_USER_NAME, TEST_USER_PASSWORD),\n+            json={\n+                "@type": "Document",\n+                "id": "mydocument",\n+                "title": "My Document",\n+            },\n+        )\n+        self.assertEqual(400, response.status_code)\n+\n+    def test_post_to_folder_fires_proper_events(self):\n+        sm = getGlobalSiteManager()\n+        fired_events = []\n+\n+        def record_event(event):\n+            fired_events.append(event.__class__.__name__)\n+\n+        sm.registerHandler(record_event, (IObjectCreatedEvent,))\n+        sm.registerHandler(record_event, (IObjectWillBeAddedEvent,))\n+        sm.registerHandler(record_event, (IObjectAddedEvent,))\n+        sm.registerHandler(record_event, (IObjectModifiedEvent,))\n+\n+        requests.post(\n+            self.portal.folder1.absolute_url(),\n+            headers={\'Accept\': \'application/json\'},\n+            auth=(SITE_OWNER_NAME, SITE_OWNER_PASSWORD),\n+            json={\n+                "@type": "Document",\n+                "id": "mydocument",\n+                "title": "My Document",\n+                "description": "123",\n+            },\n+        )\n+\n+        self.assertEqual(\n+            fired_events,\n+            [\n+                \'ObjectInitializedEvent\',\n+                \'ObjectAddedEvent\',\n+                \'ContainerModifiedEvent\',\n+            ])\n+\n+        sm.unregisterHandler(record_event, (IObjectCreatedEvent,))\n+        sm.unregisterHandler(record_event, (IObjectWillBeAddedEvent,))\n+        sm.unregisterHandler(record_event, (IObjectAddedEvent,))\n+        sm.unregisterHandler(record_event, (IObjectModifiedEvent,))\ndiff --git a/src/plone/restapi/tests/test_content_utils.py b/src/plone/restapi/tests/test_content_utils.py\nnew file mode 100644\nindex 00000000..876075ac\n--- /dev/null\n+++ b/src/plone/restapi/tests/test_content_utils.py\n@@ -0,0 +1,193 @@\n+# -*- coding: utf-8 -*-\n+from Acquisition import aq_parent\n+from plone.app.testing import setRoles\n+from plone.app.testing import TEST_USER_ID\n+from plone.restapi.services.content.utils import add\n+from plone.restapi.services.content.utils import create\n+from plone.restapi.services.content.utils import rename\n+from plone.restapi.testing import PLONE_RESTAPI_AT_INTEGRATION_TESTING\n+from plone.restapi.testing import PLONE_RESTAPI_DX_INTEGRATION_TESTING\n+from Products.CMFPlone.interfaces import ISelectableConstrainTypes\n+from zExceptions import Unauthorized\n+from zope.component import getGlobalSiteManager\n+from zope.event import notify\n+from zope.lifecycleevent import ObjectCreatedEvent\n+from zope.lifecycleevent.interfaces import IObjectAddedEvent\n+\n+import unittest\n+\n+\n+class TestCreateContent(unittest.TestCase):\n+\n+    layer = PLONE_RESTAPI_DX_INTEGRATION_TESTING\n+\n+    def setUp(self):\n+        self.portal = self.layer[\'portal\']\n+        self.request = self.layer[\'request\']\n+\n+        self.folder = self.portal[self.portal.invokeFactory(\n+            \'Folder\', id=\'folder\', title=\'My Folder\'\n+        )]\n+\n+    def test_create_content_with_provided_id(self):\n+        obj = create(self.folder, \'Document\', \'my-document\')\n+        self.assertEqual(obj.portal_type, \'Document\')\n+        self.assertEqual(obj.getId(), \'my-document\')\n+\n+    def test_create_content_without_provided_id(self):\n+        obj = create(self.folder, \'Document\')\n+        self.assertEqual(obj.portal_type, \'Document\')\n+        self.assertTrue(obj.getId().startswith(\'document.\'))\n+\n+    def test_create_content_without_add_permission_raises_unauthorized(self):\n+        self.folder.manage_permission(\n+            \'plone.app.contenttypes: Add Document\', [], acquire=False)\n+        with self.assertRaises(Unauthorized):\n+            create(self.folder, \'Document\', \'my-document\')\n+\n+    def test_create_of_disallowed_content_type_raises_unauthorized(self):\n+        self.portal.portal_types.Folder.filter_content_types = True\n+        self.portal.portal_types.Folder.allowed_content_types = ()\n+        with self.assertRaises(Unauthorized):\n+            create(self.folder, \'Document\', \'my-document\')\n+\n+    def test_create_of_constrained_content_type_raises_unauthorized(self):\n+        constrains = ISelectableConstrainTypes(self.folder)\n+        constrains.setConstrainTypesMode(1)\n+        constrains.setLocallyAllowedTypes([\'File\'])\n+        with self.assertRaises(Unauthorized):\n+            create(self.folder, \'Document\', \'my-document\')\n+\n+\n+class TestATCreateContent(unittest.TestCase):\n+\n+    layer = PLONE_RESTAPI_AT_INTEGRATION_TESTING\n+\n+    def setUp(self):\n+        self.portal = self.layer[\'portal\']\n+        self.request = self.layer[\'request\']\n+        setRoles(self.portal, TEST_USER_ID, [\'Contributor\'])\n+\n+        self.folder = self.portal[self.portal.invokeFactory(\n+            \'Folder\', id=\'folder\', title=\'My Folder\'\n+        )]\n+\n+    def test_create_content_with_provided_id(self):\n+        obj = create(self.folder, \'Document\', \'my-document\')\n+        self.assertEqual(obj.portal_type, \'Document\')\n+        self.assertEqual(obj.getId(), \'my-document\')\n+\n+    def test_create_content_without_provided_id(self):\n+        obj = create(self.folder, \'Document\')\n+        self.assertEqual(obj.portal_type, \'Document\')\n+        self.assertTrue(obj.getId().startswith(\'document.\'))\n+\n+    def test_create_content_without_add_permission_raises_unauthorized(self):\n+        self.folder.manage_permission(\n+            \'ATContentTypes: Add Document\', [], acquire=False)\n+        with self.assertRaises(Unauthorized):\n+            create(self.folder, \'Document\', \'my-document\')\n+\n+    def test_create_of_disallowed_content_type_raises_unauthorized(self):\n+        self.portal.portal_types.Folder.filter_content_types = True\n+        self.portal.portal_types.Folder.allowed_content_types = ()\n+        with self.assertRaises(Unauthorized):\n+            create(self.folder, \'Document\', \'my-document\')\n+\n+    def test_create_of_constrained_content_type_raises_unauthorized(self):\n+        constrains = ISelectableConstrainTypes(self.folder)\n+        constrains.setConstrainTypesMode(1)\n+        constrains.setLocallyAllowedTypes([\'File\'])\n+        with self.assertRaises(Unauthorized):\n+            create(self.folder, \'Document\', \'my-document\')\n+\n+\n+class TestAddContent(unittest.TestCase):\n+\n+    layer = PLONE_RESTAPI_DX_INTEGRATION_TESTING\n+\n+    def setUp(self):\n+        self.portal = self.layer[\'portal\']\n+        self.request = self.layer[\'request\']\n+\n+        self.folder = self.portal[self.portal.invokeFactory(\n+            \'Folder\', id=\'folder\', title=\'My Folder\'\n+        )]\n+        self.obj = create(self.folder, \'Document\', \'my-document\')\n+        notify(ObjectCreatedEvent(self.obj))\n+\n+    def test_add_content_to_container(self):\n+        obj = add(self.folder, self.obj)\n+        self.assertEqual(aq_parent(obj), self.folder)\n+\n+    def test_add_content_to_container_and_move_on_added_event(self):\n+        sm = getGlobalSiteManager()\n+\n+        def move_object(event):\n+            self.portal.manage_pasteObjects(\n+                cb_copy_data=self.folder.manage_cutObjects(\n+                    ids=[\'my-document\']))\n+        sm.registerHandler(move_object, (IObjectAddedEvent,))\n+\n+        obj = add(self.folder, self.obj)\n+        self.assertEqual(aq_parent(obj), self.portal)\n+\n+        sm.unregisterHandler(move_object, (IObjectAddedEvent,))\n+\n+\n+class TestATAddContent(unittest.TestCase):\n+\n+    layer = PLONE_RESTAPI_AT_INTEGRATION_TESTING\n+\n+    def setUp(self):\n+        self.portal = self.layer[\'portal\']\n+        self.request = self.layer[\'request\']\n+        setRoles(self.portal, TEST_USER_ID, [\'Contributor\'])\n+\n+        self.folder = self.portal[self.portal.invokeFactory(\n+            \'Folder\', id=\'folder\', title=\'My Folder\'\n+        )]\n+        self.obj = create(self.folder, \'Document\', \'my-document\')\n+\n+    def test_add_content_to_container(self):\n+        obj = add(self.folder, self.obj)\n+        self.assertEqual(aq_parent(obj), self.folder)\n+\n+\n+class TestRenameContent(unittest.TestCase):\n+\n+    layer = PLONE_RESTAPI_DX_INTEGRATION_TESTING\n+\n+    def setUp(self):\n+        self.portal = self.layer[\'portal\']\n+        self.request = self.layer[\'request\']\n+\n+        self.folder = self.portal[self.portal.invokeFactory(\n+            \'Folder\', id=\'folder\', title=\'My Folder\'\n+        )]\n+        self.obj = add(\n+            self.folder, create(self.folder, \'Document\', title=\'My Document\'))\n+\n+    def test_rename_content(self):\n+        rename(self.obj)\n+        self.assertEqual(self.obj.getId(), \'my-document\')\n+\n+\n+class TestATRenameContent(unittest.TestCase):\n+\n+    layer = PLONE_RESTAPI_AT_INTEGRATION_TESTING\n+\n+    def setUp(self):\n+        self.portal = self.layer[\'portal\']\n+        self.request = self.layer[\'request\']\n+        setRoles(self.portal, TEST_USER_ID, [\'Contributor\'])\n+\n+        self.folder = self.portal[self.portal.invokeFactory(\n+            \'Folder\', id=\'folder\', title=\'My Folder\'\n+        )]\n+        self.obj = add(\n+            self.folder, create(self.folder, \'Document\', title=\'My Document\'))\n+\n+    def test_rename_content(self):\n+        rename(self.obj)\n+        self.assertEqual(self.obj.getId(), \'my-document\')\ndiff --git a/src/plone/restapi/tests/test_documentation.py b/src/plone/restapi/tests/test_documentation.py\nindex 77ec5aa1..9f6973cc 100644\n--- a/src/plone/restapi/tests/test_documentation.py\n+++ b/src/plone/restapi/tests/test_documentation.py\n@@ -4,7 +4,9 @@\n from DateTime import DateTime\n from datetime import timedelta\n from freezegun import freeze_time\n+from mock import patch\n from pkg_resources import parse_version\n+from pkg_resources import resource_filename\n from plone import api\n from plone.app.discussion.interfaces import IConversation\n from plone.app.discussion.interfaces import IDiscussionSettings\n@@ -23,10 +25,11 @@\n from plone.namedfile.file import NamedBlobImage\n from plone.registry.interfaces import IRegistry\n from plone.restapi.testing import PAM_INSTALLED\n-from plone.restapi.testing import PLONE_RESTAPI_DX_PAM_FUNCTIONAL_TESTING_FREEZETIME  # noqa\n from plone.restapi.testing import PLONE_RESTAPI_DX_FUNCTIONAL_TESTING_FREEZETIME  # noqa\n+from plone.restapi.testing import PLONE_RESTAPI_DX_PAM_FUNCTIONAL_TESTING_FREEZETIME  # noqa\n from plone.restapi.testing import register_static_uuid_utility\n from plone.restapi.testing import RelativeSession\n+from plone.scale import storage\n from plone.testing.z2 import Browser\n from zope.component import createObject\n from zope.component import getUtility\n@@ -69,14 +72,8 @@\n     \'location\',\n ] + TUS_HEADERS\n \n-base_path = os.path.join(\n-    os.path.dirname(__file__),\n-    \'..\',\n-    \'..\',\n-    \'..\',\n-    \'..\',\n-    \'docs/source/_json\'\n-)\n+\n+base_path = resource_filename(\'plone.restapi.tests\', \'http-examples\')\n \n UPLOAD_DATA = \'abcdefgh\'\n UPLOAD_MIMETYPE = \'text/plain\'\n@@ -286,8 +283,12 @@ def test_documentation_news_item(self):\n             \'2016-01-21T02:24:11+00:00\')\n         import transaction\n         transaction.commit()\n-        response = self.api_session.get(self.portal.newsitem.absolute_url())\n-        save_request_and_response_for_docs(\'newsitem\', response)\n+\n+        with patch.object(storage, \'uuid4\', return_value=\'uuid1\'):\n+            response = self.api_session.get(\n+                self.portal.newsitem.absolute_url()\n+            )\n+            save_request_and_response_for_docs(\'newsitem\', response)\n \n     def test_documentation_event(self):\n         self.portal.invokeFactory(\'Event\', id=\'event\')\n@@ -351,8 +352,9 @@ def test_documentation_image(self):\n             \'2016-01-21T06:24:11+00:00\')\n         import transaction\n         transaction.commit()\n-        response = self.api_session.get(self.portal.image.absolute_url())\n-        save_request_and_response_for_docs(\'image\', response)\n+        with patch.object(storage, \'uuid4\', return_value=\'uuid1\'):\n+            response = self.api_session.get(self.portal.image.absolute_url())\n+            save_request_and_response_for_docs(\'image\', response)\n \n     def test_documentation_folder(self):\n         folder = self.create_folder()\ndiff --git a/src/plone/restapi/tests/test_dxfield_serializer.py b/src/plone/restapi/tests/test_dxfield_serializer.py\nindex 741c0550..c86dc8e2 100644\n--- a/src/plone/restapi/tests/test_dxfield_serializer.py\n+++ b/src/plone/restapi/tests/test_dxfield_serializer.py\n@@ -3,6 +3,7 @@\n from datetime import datetime\n from datetime import time\n from datetime import timedelta\n+from mock import patch\n from plone.app.textfield.value import RichTextValue\n from plone.dexterity.utils import iterSchemata\n from plone.namedfile.file import NamedBlobFile\n@@ -12,6 +13,8 @@\n from plone.restapi.interfaces import IFieldSerializer\n from plone.restapi.serializer.dxfields import DefaultFieldSerializer\n from plone.restapi.testing import PLONE_RESTAPI_DX_INTEGRATION_TESTING\n+from plone.restapi.testing import PLONE_VERSION\n+from plone.scale import storage\n from unittest import TestCase\n from z3c.form.interfaces import IDataManager\n from zope.component import getMultiAdapter\n@@ -19,13 +22,20 @@\n \n import os\n \n+if PLONE_VERSION.base_version >= \'5.1\':\n+    GIF_SCALE_FORMAT = \'png\'\n+else:\n+    GIF_SCALE_FORMAT = \'jpeg\'\n+\n \n class TestDexterityFieldSerializing(TestCase):\n     layer = PLONE_RESTAPI_DX_INTEGRATION_TESTING\n+    maxDiff = None\n \n     def setUp(self):\n         self.portal = self.layer[\'portal\']\n         self.request = self.layer[\'request\']\n+\n         self.doc1 = self.portal[self.portal.invokeFactory(\n             \'DXTestDocument\',\n             id=\'doc1\',\n@@ -181,53 +191,61 @@ def test_namedimage_field_serialization_returns_dict(self):\n         image_file = os.path.join(os.path.dirname(__file__), u\'1024x768.gif\')\n         image_data = open(image_file, \'rb\').read()\n         fn = \'test_namedimage_field\'\n-        value = self.serialize(\n-            fn,\n-            NamedImage(data=image_data, contentType=u\'image/gif\',\n-                       filename=u\'1024x768.gif\'))\n-        self.assertTrue(isinstance(value, dict), \'Not a <dict>\')\n-\n-        obj_url = self.doc1.absolute_url()\n-        download_url = u\'{}/@@images/{}\'.format(obj_url, fn)\n-        scales = {\n-            u\'listing\': {\n-                u\'download\': u\'{}/@@images/{}/listing\'.format(obj_url, fn),\n-                u\'width\': 16,\n-                u\'height\': 12},\n-            u\'icon\': {\n-                u\'download\': u\'{}/@@images/{}/icon\'.format(obj_url, fn),\n-                u\'width\': 32,\n-                u\'height\': 24},\n-            u\'tile\': {\n-                u\'download\': u\'{}/@@images/{}/tile\'.format(obj_url, fn),\n-                u\'width\': 64,\n-                u\'height\': 48},\n-            u\'thumb\': {\n-                u\'download\': u\'{}/@@images/{}/thumb\'.format(obj_url, fn),\n-                u\'width\': 128,\n-                u\'height\': 96},\n-            u\'mini\': {\n-                u\'download\': u\'{}/@@images/{}/mini\'.format(obj_url, fn),\n-                u\'width\': 200,\n-                u\'height\': 150},\n-            u\'preview\': {\n-                u\'download\': u\'{}/@@images/{}/preview\'.format(obj_url, fn),\n-                u\'width\': 400,\n-                u\'height\': 300},\n-            u\'large\': {\n-                u\'download\': u\'{}/@@images/{}/large\'.format(obj_url, fn),\n-                u\'width\': 768,\n-                u\'height\': 576},\n-        }\n-        self.assertEqual(\n-            {u\'filename\': u\'1024x768.gif\',\n-             u\'content-type\': u\'image/gif\',\n-             u\'size\': 1514,\n-             u\'download\': download_url,\n-             u\'width\': 1024,\n-             u\'height\': 768,\n-             u\'scales\': scales},\n-            value)\n+        with patch.object(storage, \'uuid4\', return_value=\'uuid_1\'):\n+            value = self.serialize(\n+                fn,\n+                NamedImage(\n+                    data=image_data,\n+                    contentType=u\'image/gif\',\n+                    filename=u\'1024x768.gif\'\n+                )\n+            )\n+            self.assertTrue(isinstance(value, dict), \'Not a <dict>\')\n+\n+            scale_url_uuid = \'uuid_1\'\n+            obj_url = self.doc1.absolute_url()\n+            download_url = u\'{}/@@images/{}.{}\'.format(\n+                obj_url, scale_url_uuid, GIF_SCALE_FORMAT\n+            )\n+            scales = {\n+                u\'listing\': {\n+                    u\'download\': download_url,\n+                    u\'width\': 16,\n+                    u\'height\': 12},\n+                u\'icon\': {\n+                    u\'download\': download_url,\n+                    u\'width\': 32,\n+                    u\'height\': 24},\n+                u\'tile\': {\n+                    u\'download\': download_url,\n+                    u\'width\': 64,\n+                    u\'height\': 48},\n+                u\'thumb\': {\n+                    u\'download\': download_url,\n+                    u\'width\': 128,\n+                    u\'height\': 96},\n+                u\'mini\': {\n+                    u\'download\': download_url,\n+                    u\'width\': 200,\n+                    u\'height\': 150},\n+                u\'preview\': {\n+                    u\'download\': download_url,\n+                    u\'width\': 400,\n+                    u\'height\': 300},\n+                u\'large\': {\n+                    u\'download\': download_url,\n+                    u\'width\': 768,\n+                    u\'height\': 576},\n+            }\n+            self.assertEqual({\n+                u\'filename\': u\'1024x768.gif\',\n+                u\'content-type\': u\'image/gif\',\n+                u\'size\': 1514,\n+                u\'download\': download_url,\n+                u\'width\': 1024,\n+                u\'height\': 768,\n+                u\'scales\': scales},\n+                value)\n \n     def test_namedblobfile_field_serialization_returns_dict(self):\n         value = self.serialize(\n@@ -250,53 +268,61 @@ def test_namedblobimage_field_serialization_returns_dict(self):\n         image_file = os.path.join(os.path.dirname(__file__), u\'1024x768.gif\')\n         image_data = open(image_file, \'rb\').read()\n         fn = \'test_namedblobimage_field\'\n-        value = self.serialize(\n-            fn,\n-            NamedBlobImage(data=image_data, contentType=u\'image/gif\',\n-                           filename=u\'1024x768.gif\'))\n-        self.assertTrue(isinstance(value, dict), \'Not a <dict>\')\n-\n-        obj_url = self.doc1.absolute_url()\n-        download_url = u\'{}/@@images/{}\'.format(obj_url, fn)\n-        scales = {\n-            u\'listing\': {\n-                u\'download\': u\'{}/@@images/{}/listing\'.format(obj_url, fn),\n-                u\'width\': 16,\n-                u\'height\': 12},\n-            u\'icon\': {\n-                u\'download\': u\'{}/@@images/{}/icon\'.format(obj_url, fn),\n-                u\'width\': 32,\n-                u\'height\': 24},\n-            u\'tile\': {\n-                u\'download\': u\'{}/@@images/{}/tile\'.format(obj_url, fn),\n-                u\'width\': 64,\n-                u\'height\': 48},\n-            u\'thumb\': {\n-                u\'download\': u\'{}/@@images/{}/thumb\'.format(obj_url, fn),\n-                u\'width\': 128,\n-                u\'height\': 96},\n-            u\'mini\': {\n-                u\'download\': u\'{}/@@images/{}/mini\'.format(obj_url, fn),\n-                u\'width\': 200,\n-                u\'height\': 150},\n-            u\'preview\': {\n-                u\'download\': u\'{}/@@images/{}/preview\'.format(obj_url, fn),\n-                u\'width\': 400,\n-                u\'height\': 300},\n-            u\'large\': {\n-                u\'download\': u\'{}/@@images/{}/large\'.format(obj_url, fn),\n-                u\'width\': 768,\n-                u\'height\': 576},\n-        }\n-        self.assertEqual(\n-            {u\'filename\': u\'1024x768.gif\',\n-             u\'content-type\': u\'image/gif\',\n-             u\'size\': 1514,\n-             u\'download\': download_url,\n-             u\'width\': 1024,\n-             u\'height\': 768,\n-             u\'scales\': scales},\n-            value)\n+        with patch.object(storage, \'uuid4\', return_value=\'uuid_1\'):\n+            value = self.serialize(\n+                fn,\n+                NamedBlobImage(\n+                    data=image_data,\n+                    contentType=u\'image/gif\',\n+                    filename=u\'1024x768.gif\'\n+                )\n+            )\n+            self.assertTrue(isinstance(value, dict), \'Not a <dict>\')\n+\n+            scale_url_uuid = \'uuid_1\'\n+            obj_url = self.doc1.absolute_url()\n+            download_url = u\'{}/@@images/{}.{}\'.format(\n+                obj_url, scale_url_uuid, GIF_SCALE_FORMAT\n+            )\n+            scales = {\n+                u\'listing\': {\n+                    u\'download\': download_url,\n+                    u\'width\': 16,\n+                    u\'height\': 12},\n+                u\'icon\': {\n+                    u\'download\': download_url,\n+                    u\'width\': 32,\n+                    u\'height\': 24},\n+                u\'tile\': {\n+                    u\'download\': download_url,\n+                    u\'width\': 64,\n+                    u\'height\': 48},\n+                u\'thumb\': {\n+                    u\'download\': download_url,\n+                    u\'width\': 128,\n+                    u\'height\': 96},\n+                u\'mini\': {\n+                    u\'download\': download_url,\n+                    u\'width\': 200,\n+                    u\'height\': 150},\n+                u\'preview\': {\n+                    u\'download\': download_url,\n+                    u\'width\': 400,\n+                    u\'height\': 300},\n+                u\'large\': {\n+                    u\'download\': download_url,\n+                    u\'width\': 768,\n+                    u\'height\': 576},\n+            }\n+            self.assertEqual({\n+                u\'filename\': u\'1024x768.gif\',\n+                u\'content-type\': u\'image/gif\',\n+                u\'size\': 1514,\n+                u\'download\': download_url,\n+                u\'width\': 1024,\n+                u\'height\': 768,\n+                u\'scales\': scales},\n+                value)\n \n     def test_relationchoice_field_serialization_returns_summary_dict(self):\n         doc2 = self.portal[self.portal.invokeFactory(\ndiff --git a/src/plone/restapi/tests/test_expansion.py b/src/plone/restapi/tests/test_expansion.py\nindex 5963e114..3806210f 100644\n--- a/src/plone/restapi/tests/test_expansion.py\n+++ b/src/plone/restapi/tests/test_expansion.py\n@@ -175,12 +175,12 @@ def test_navigation_expanded(self):\n             [\n                 {\n                     u\'title\': u\'Home\',\n-                    u\'@id\': u\'http://localhost:55001/plone\',\n+                    u\'@id\': self.portal_url + u\'\',\n                     u\'description\': u\'\',\n                 },\n                 {\n                     u\'title\': u\'Some Folder\',\n-                    u\'@id\': u\'http://localhost:55001/plone/folder\',\n+                    u\'@id\': self.portal_url + u\'/folder\',\n                     u\'description\': u\'\',\n                 }\n             ],\n@@ -254,7 +254,7 @@ def test_breadcrumbs_expanded(self):\n             [\n                 {\n                     u\'title\': u\'Some Folder\',\n-                    u\'@id\': u\'http://localhost:55001/plone/folder\'\n+                    u\'@id\': self.portal_url + u\'/folder\'\n                 }\n             ],\n             response.json()[\'@components\'][\'breadcrumbs\'][\'items\']\n@@ -279,7 +279,7 @@ def test_workflow_expanded(self):\n \n         self.assertEqual(response.status_code, 200)\n         self.assertEqual(\n-            u\'http://localhost:55001/plone/folder/@workflow\',\n+            self.portal_url + u\'/folder/@workflow\',\n             response.json().get(\'@components\').get(\'workflow\').get(\'@id\')\n         )\n         self.assertEqual(\n@@ -293,11 +293,11 @@ def test_workflow_expanded(self):\n         self.assertEqual(\n             [\n                 {\n-                    u\'@id\': u\'http://localhost:55001/plone/folder/@workflow/publish\',  # noqa\n+                    u\'@id\': self.portal_url + u\'/folder/@workflow/publish\',  # noqa\n                     u\'title\': u\'Publish\'\n                 },\n                 {\n-                    u\'@id\': u\'http://localhost:55001/plone/folder/@workflow/submit\',  # noqa\n+                    u\'@id\': self.portal_url + u\'/folder/@workflow/submit\',  # noqa\n                     u\'title\': u\'Submit for publication\'\n                 }\n             ],\ndiff --git a/src/plone/restapi/tests/test_roles.py b/src/plone/restapi/tests/test_roles.py\nindex e1fd04c4..26cb4b42 100644\n--- a/src/plone/restapi/tests/test_roles.py\n+++ b/src/plone/restapi/tests/test_roles.py\n@@ -23,31 +23,31 @@ def test_roles_endpoint_lists_roles(self):\n         response = self.api_session.get(\'/@roles\')\n \n         self.assertItemsEqual([\n-            {u\'@id\': u\'http://localhost:55001/plone/@roles/Contributor\',\n+            {u\'@id\': self.portal_url + u\'/@roles/Contributor\',\n              u\'@type\': u\'role\',\n              u\'id\': u\'Contributor\',\n              u\'title\': u\'Contributor\'},\n-            {u\'@id\': u\'http://localhost:55001/plone/@roles/Editor\',\n+            {u\'@id\': self.portal_url + u\'/@roles/Editor\',\n              u\'@type\': u\'role\',\n              u\'id\': u\'Editor\',\n              u\'title\': u\'Editor\'},\n-            {u\'@id\': u\'http://localhost:55001/plone/@roles/Member\',\n+            {u\'@id\': self.portal_url + u\'/@roles/Member\',\n              u\'@type\': u\'role\',\n              u\'id\': u\'Member\',\n              u\'title\': u\'Member\'},\n-            {u\'@id\': u\'http://localhost:55001/plone/@roles/Reader\',\n+            {u\'@id\': self.portal_url + u\'/@roles/Reader\',\n              u\'@type\': u\'role\',\n              u\'id\': u\'Reader\',\n              u\'title\': u\'Reader\'},\n-            {u\'@id\': u\'http://localhost:55001/plone/@roles/Reviewer\',\n+            {u\'@id\': self.portal_url + u\'/@roles/Reviewer\',\n              u\'@type\': u\'role\',\n              u\'id\': u\'Reviewer\',\n              u\'title\': u\'Reviewer\'},\n-            {u\'@id\': u\'http://localhost:55001/plone/@roles/Site Administrator\',\n+            {u\'@id\': self.portal_url + u\'/@roles/Site Administrator\',\n              u\'@type\': u\'role\',\n              u\'id\': u\'Site Administrator\',\n              u\'title\': u\'Site Administrator\'},\n-            {u\'@id\': u\'http://localhost:55001/plone/@roles/Manager\',\n+            {u\'@id\': self.portal_url + u\'/@roles/Manager\',\n              u\'@type\': u\'role\',\n              u\'id\': u\'Manager\',\n              u\'title\': u\'Manager\'}],\ndiff --git a/src/plone/restapi/tests/test_search.py b/src/plone/restapi/tests/test_search.py\nindex 8c6e3c1e..ec4fd645 100644\n--- a/src/plone/restapi/tests/test_search.py\n+++ b/src/plone/restapi/tests/test_search.py\n@@ -146,7 +146,7 @@ def test_partial_metadata_retrieval(self):\n         response = self.api_session.get(\'/@search\', params=query)\n \n         self.assertDictContainsSubset(\n-            {u\'@id\': u\'http://localhost:55001/plone/folder/doc\',\n+            {u\'@id\': self.portal_url + u\'/folder/doc\',\n              u\'title\': u\'Lorem Ipsum\',\n              u\'portal_type\': u\'DXTestDocument\',\n              u\'review_state\': u\'private\'},\n@@ -157,7 +157,7 @@ def test_full_metadata_retrieval(self):\n         response = self.api_session.get(\'/@search\', params=query)\n \n         self.assertDictContainsSubset(\n-            {u\'@id\': u\'http://localhost:55001/plone/folder/doc\',\n+            {u\'@id\': self.portal_url + u\'/folder/doc\',\n              u\'Creator\': u\'test_user_1_\',\n              u\'Description\': u\'\',\n              u\'EffectiveDate\': u\'None\',\n@@ -178,7 +178,7 @@ def test_full_metadata_retrieval(self):\n              u\'getObjSize\': u\'0 KB\',\n              u\'getPath\': u\'/plone/folder/doc\',\n              u\'getRemoteUrl\': None,\n-             u\'getURL\': u\'http://localhost:55001/plone/folder/doc\',\n+             u\'getURL\': self.portal_url + u\'/folder/doc\',\n              u\'id\': u\'doc\',\n              u\'in_response_to\': None,\n              u\'is_folderish\': False,\n@@ -204,7 +204,7 @@ def test_full_objects_retrieval(self):\n             u\'<p>Some Text</p>\',\n             response.json()[\'items\'][0][\'test_richtext_field\'][\'data\'])\n         self.assertEqual(\n-            \'http://localhost:55001/plone/folder/doc\',\n+            self.portal_url + u\'/folder/doc\',\n             response.json()[\'items\'][0][\'@id\'])\n \n     def test_full_objects_retrieval_discussion(self):\n@@ -574,5 +574,5 @@ def test_full_objects_retrieval(self):\n             {u\'data\': u\' Some Text \', u\'content-type\': u\'text/plain\'},\n             response.json()[\'items\'][0][\'testTextField\'])\n         self.assertEqual(\n-            \'http://localhost:55001/plone/folder/doc\',\n+            self.portal_url + u\'/folder/doc\',\n             response.json()[\'items\'][0][\'@id\'])\ndiff --git a/src/plone/restapi/tests/test_serializer.py b/src/plone/restapi/tests/test_serializer.py\nindex 7e4af674..43c14ab7 100644\n--- a/src/plone/restapi/tests/test_serializer.py\n+++ b/src/plone/restapi/tests/test_serializer.py\n@@ -1,5 +1,6 @@\n # -*- coding: utf-8 -*-\n from DateTime import DateTime\n+from mock import patch\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n from plone.app.textfield.value import RichTextValue\n@@ -7,6 +8,7 @@\n from plone.namedfile.file import NamedFile\n from plone.restapi.interfaces import ISerializeToJson\n from plone.restapi.testing import PLONE_RESTAPI_DX_INTEGRATION_TESTING\n+from plone.scale import storage\n from Products.CMFCore.utils import getToolByName\n from zope.component import getMultiAdapter\n \n@@ -269,47 +271,53 @@ def test_serialize_image(self):\n             filename=u\'image.png\'\n         )\n \n-        obj_url = self.portal.image1.absolute_url()\n-        download_url = u\'{}/@@images/image\'.format(obj_url)\n-        scales = {\n-            u\'listing\': {\n-                u\'download\': u\'{}/@@images/image/listing\'.format(obj_url),\n-                u\'width\': 16,\n-                u\'height\': 4},\n-            u\'icon\': {\n-                u\'download\': u\'{}/@@images/image/icon\'.format(obj_url),\n-                u\'width\': 32,\n-                u\'height\': 8},\n-            u\'tile\': {\n-                u\'download\': u\'{}/@@images/image/tile\'.format(obj_url),\n-                u\'width\': 64,\n-                u\'height\': 16},\n-            u\'thumb\': {\n-                u\'download\': u\'{}/@@images/image/thumb\'.format(obj_url),\n-                u\'width\': 128,\n-                u\'height\': 33},\n-            u\'mini\': {\n-                u\'download\': u\'{}/@@images/image/mini\'.format(obj_url),\n-                u\'width\': 200,\n-                u\'height\': 52},\n-            u\'preview\': {\n-                u\'download\': u\'{}/@@images/image/preview\'.format(obj_url),\n+        self.maxDiff = 99999\n+\n+        with patch.object(storage, \'uuid4\', return_value=\'uuid_1\'):\n+            obj_url = self.portal.image1.absolute_url()\n+            scale_url_uuid = \'uuid_1\'\n+            download_url = u\'{}/@@images/{}.png\'.format(\n+                obj_url, scale_url_uuid\n+            )\n+            scales = {\n+                u\'listing\': {\n+                    u\'download\': download_url,\n+                    u\'width\': 16,\n+                    u\'height\': 4},\n+                u\'icon\': {\n+                    u\'download\': download_url,\n+                    u\'width\': 32,\n+                    u\'height\': 8},\n+                u\'tile\': {\n+                    u\'download\': download_url,\n+                    u\'width\': 64,\n+                    u\'height\': 16},\n+                u\'thumb\': {\n+                    u\'download\': download_url,\n+                    u\'width\': 128,\n+                    u\'height\': 33},\n+                u\'mini\': {\n+                    u\'download\': download_url,\n+                    u\'width\': 200,\n+                    u\'height\': 52},\n+                u\'preview\': {\n+                    u\'download\': download_url,\n+                    u\'width\': 215,\n+                    u\'height\': 56},\n+                u\'large\': {\n+                    u\'download\': download_url,\n+                    u\'width\': 215,\n+                    u\'height\': 56},\n+            }\n+            self.assertEqual({\n+                u\'filename\': u\'image.png\',\n+                u\'content-type\': u\'image/png\',\n+                u\'size\': 1185,\n+                u\'download\': download_url,\n                 u\'width\': 215,\n-                u\'height\': 56},\n-            u\'large\': {\n-                u\'download\': u\'{}/@@images/image/large\'.format(obj_url),\n-                u\'width\': 215,\n-                u\'height\': 56},\n-        }\n-        self.assertEqual(\n-            {u\'filename\': u\'image.png\',\n-             u\'content-type\': u\'image/png\',\n-             u\'size\': 1185,\n-             u\'download\': download_url,\n-             u\'width\': 215,\n-             u\'height\': 56,\n-             u\'scales\': scales},\n-            self.serialize(self.portal.image1)[\'image\'])\n+                u\'height\': 56,\n+                u\'scales\': scales},\n+                self.serialize(self.portal.image1)[\'image\'])\n \n     def test_serialize_empty_image_returns_none(self):\n         self.portal.invokeFactory(\'Image\', id=\'image1\', title=\'Image 1\')\ndiff --git a/src/plone/restapi/tests/test_services.py b/src/plone/restapi/tests/test_services.py\nindex 8a7053e2..a52ecd9d 100644\n--- a/src/plone/restapi/tests/test_services.py\n+++ b/src/plone/restapi/tests/test_services.py\n@@ -1,14 +1,15 @@\n # -*- coding: utf-8 -*-\n-from plone.restapi.testing import PLONE_RESTAPI_DX_FUNCTIONAL_TESTING\n-from plone.restapi.testing import RelativeSession\n+from mock import patch\n from plone.app.testing import setRoles\n-from plone.app.testing import TEST_USER_ID\n from plone.app.testing import SITE_OWNER_NAME\n from plone.app.testing import SITE_OWNER_PASSWORD\n+from plone.app.testing import TEST_USER_ID\n from plone.app.textfield.value import RichTextValue\n from plone.namedfile.file import NamedBlobFile\n from plone.namedfile.file import NamedBlobImage\n-\n+from plone.restapi.testing import PLONE_RESTAPI_DX_FUNCTIONAL_TESTING\n+from plone.restapi.testing import RelativeSession\n+from plone.scale import storage\n from z3c.relationfield import RelationValue\n from zope.component import getUtility\n from zope.intid.interfaces import IIntIds\n@@ -101,38 +102,39 @@ def test_get_news_item(self):\n         self.portal.news1.image_caption = u\'This is an image caption.\'\n         transaction.commit()\n \n-        response = self.api_session.get(self.portal.news1.absolute_url())\n+        with patch.object(storage, \'uuid4\', return_value=\'uuid1\'):\n+            response = self.api_session.get(self.portal.news1.absolute_url())\n \n-        self.assertEqual(response.status_code, 200)\n-        self.assertEqual(\n-            response.headers.get(\'Content-Type\'),\n-            \'application/json\',\n-            \'When sending a GET request with Content-Type: application/json \' +\n-            \'the server should respond with sending back application/json.\'\n-        )\n-        self.assertEqual(\n-            \'News Item\',\n-            response.json().get(\'@type\'),\n-            "Response should be @type \'News Item\', not \'{}\'".format(\n-                response.json().get(\'@type\')\n+            self.assertEqual(response.status_code, 200)\n+            self.assertEqual(\n+                response.headers.get(\'Content-Type\'),\n+                \'application/json\',\n+                \'When sending a GET request with Content-Type: application/json \' + # noqa\n+                \'the server should respond with sending back application/json.\'\n+            )\n+            self.assertEqual(\n+                \'News Item\',\n+                response.json().get(\'@type\'),\n+                "Response should be @type \'News Item\', not \'{}\'".format(\n+                    response.json().get(\'@type\')\n+                )\n+            )\n+            self.assertEqual(\n+                response.json().get(\'@id\'),\n+                self.portal.news1.absolute_url()\n+            )\n+            self.assertEqual(\n+                \'News Item 1\',\n+                response.json().get(\'title\')\n+            )\n+            self.assertEqual(\n+                u\'This is an image caption.\',\n+                response.json()[\'image_caption\']\n+            )\n+            self.assertDictContainsSubset(\n+                {\'download\': self.portal_url + u\'/news1/@@images/uuid1.png\'},  # noqa\n+                response.json()[\'image\']\n             )\n-        )\n-        self.assertEqual(\n-            response.json().get(\'@id\'),\n-            self.portal.news1.absolute_url()\n-        )\n-        self.assertEqual(\n-            \'News Item 1\',\n-            response.json().get(\'title\')\n-        )\n-        self.assertEqual(\n-            u\'This is an image caption.\',\n-            response.json()[\'image_caption\']\n-        )\n-        self.assertDictContainsSubset(\n-            {\'download\': u\'http://localhost:55001/plone/news1/@@images/image\'},\n-            response.json()[\'image\']\n-        )\n \n     def test_get_folder(self):\n         self.portal.invokeFactory(\ndiff --git a/src/plone/restapi/tests/test_services_breadcrumbs.py b/src/plone/restapi/tests/test_services_breadcrumbs.py\nindex 8e0a00f9..b65f6618 100644\n--- a/src/plone/restapi/tests/test_services_breadcrumbs.py\n+++ b/src/plone/restapi/tests/test_services_breadcrumbs.py\n@@ -42,13 +42,13 @@ def test_breadcrumbs(self):\n         self.assertEqual(\n             response.json(),\n             {\n-                \'@id\': \'http://localhost:55001/plone/folder/doc1/@breadcrumbs\',\n+                \'@id\': self.portal_url + u\'/folder/doc1/@breadcrumbs\',\n                 \'items\': [\n                     {\n-                        u\'@id\': u\'http://localhost:55001/plone/folder\',\n+                        u\'@id\': self.portal_url + u\'/folder\',\n                         u\'title\': u\'Some Folder\'\n                     }, {\n-                        u\'@id\': u\'http://localhost:55001/plone/folder/doc1\',\n+                        u\'@id\': self.portal_url + u\'/folder/doc1\',\n                         u\'title\': u\'A document\'\n                     }\n                 ]\ndiff --git a/src/plone/restapi/tests/test_services_navigation.py b/src/plone/restapi/tests/test_services_navigation.py\nindex 30f670a0..4a25f850 100644\n--- a/src/plone/restapi/tests/test_services_navigation.py\n+++ b/src/plone/restapi/tests/test_services_navigation.py\n@@ -62,20 +62,20 @@ def test_navigation_with_no_params_gets_only_top_level(self):\n         self.assertEqual(\n             response.json(),\n             {\n-                \'@id\': \'http://localhost:55001/plone/folder/@navigation\',\n+                \'@id\': self.portal_url + u\'/folder/@navigation\',\n                 \'items\': [\n                     {\n                         u\'title\': u\'Home\',\n-                        u\'@id\': u\'http://localhost:55001/plone\',\n+                        u\'@id\': self.portal_url,\n                         u\'description\': u\'\',\n                     },\n                     {\n                         u\'title\': u\'Some Folder\',\n-                        u\'@id\': u\'http://localhost:55001/plone/folder\',\n+                        u\'@id\': self.portal_url + u\'/folder\',\n                         u\'description\': u\'\',\n                     },\n                     {\n-                        u\'@id\': u\'http://localhost:55001/plone/folder2\',\n+                        u\'@id\': self.portal_url + u\'/folder2\',\n                         u\'description\': u\'\',\n                         u\'title\': u\'Some Folder 2\'\n                     }\ndiff --git a/src/plone/restapi/tests/test_services_tiles.py b/src/plone/restapi/tests/test_services_tiles.py\nnew file mode 100644\nindex 00000000..74f96bac\n--- /dev/null\n+++ b/src/plone/restapi/tests/test_services_tiles.py\n@@ -0,0 +1,169 @@\n+# -*- coding: utf-8 -*-\n+from plone.app.testing import setRoles\n+from plone.app.testing import SITE_OWNER_NAME\n+from plone.app.testing import SITE_OWNER_PASSWORD\n+from plone.app.testing import TEST_USER_ID\n+from plone.dexterity.interfaces import IDexterityFTI\n+from plone.dexterity.utils import createContentInContainer\n+from plone.restapi.testing import PLONE_RESTAPI_DX_FUNCTIONAL_TESTING\n+from plone.restapi.testing import RelativeSession\n+from plone.tiles import Tile\n+from plone.tiles.interfaces import IBasicTile\n+from plone.tiles.type import TileType\n+from zope.component import provideAdapter\n+from zope.component import provideUtility\n+from zope.component import queryUtility\n+from zope.interface import Interface\n+\n+import transaction\n+import unittest\n+import zope.schema\n+\n+\n+class ISampleTile(Interface):\n+    title = zope.schema.TextLine(\n+        title=u\'Title\',\n+        required=False\n+    )\n+\n+\n+class SampleTile(Tile):\n+\n+    __name__ = \'sample.tile\'  # would normally be set by a ZCML handler\n+\n+    def __call__(self):\n+        return \'<html><body><b>My tile</b></body></html>\'\n+\n+\n+class TestServicesTiles(unittest.TestCase):\n+\n+    layer = PLONE_RESTAPI_DX_FUNCTIONAL_TESTING\n+\n+    def setUp(self):\n+        self.app = self.layer[\'app\']\n+        self.portal = self.layer[\'portal\']\n+        self.portal_url = self.portal.absolute_url()\n+        setRoles(self.portal, TEST_USER_ID, [\'Manager\'])\n+\n+        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session.headers.update({\'Accept\': \'application/json\'})\n+        self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n+\n+        fti = queryUtility(\n+            IDexterityFTI,\n+            name=\'Document\')\n+        behavior_list = [a for a in fti.behaviors]\n+        behavior_list.append(\'plone.tiles\')\n+        behavior_list.append(\'plone.leadimage\')\n+        fti.behaviors = tuple(behavior_list)\n+\n+        self.doc = createContentInContainer(\n+            self.portal, u\'Document\',\n+            id=u\'doc\',\n+            title=u\'A document\')\n+        transaction.commit()\n+\n+        sampleTileType = TileType(\n+            u\'sample.tile\',\n+            u\'Sample tile\',\n+            \'cmf.ModifyPortalContent\',\n+            \'zope.Public\',\n+            description=u\'A tile used for testing\',\n+            schema=ISampleTile,\n+            icon=\'testicon\')\n+        provideUtility(sampleTileType, name=u\'sample.tile\')\n+        provideAdapter(SampleTile, (Interface, Interface),\n+                       IBasicTile, name=u\'sample.tile\')\n+\n+    def test_get_available_tiles(self):\n+        response = self.api_session.get(\'/@tiles\')\n+\n+        self.assertEqual(response.status_code, 200)\n+        response = response.json()\n+        self.assertEquals(len(response), 1)\n+        self.assertEquals(\n+            response[0][\'@id\'],\n+            self.portal_url + u\'/@tiles/sample.tile\')\n+        self.assertEquals(response[0][\'title\'], u\'Sample tile\')\n+        self.assertEquals(\n+            response[0][\'description\'], u\'A tile used for testing\')\n+        self.assertEquals(response[0][\'icon\'], \'testicon\')\n+\n+    def test_get_tile(self):\n+        response = self.api_session.get(\'/@tiles/sample.tile\')\n+\n+        self.assertEqual(response.status_code, 200)\n+        response = response.json()\n+        self.assertEquals(response[\'title\'], u\'Sample tile\')\n+        self.assertEquals(\n+            response[\'properties\'][\'title\'][\'title\'], u\'Title\')\n+        self.assertEquals(\n+            response[\'properties\'][\'title\'][\'type\'], u\'string\')\n+\n+    def test_patch_tiles_list(self):\n+        response = self.api_session.patch(\n+            \'/doc\',\n+            json={\n+                "tiles": {\n+                    \'uuid1\': {\'@type\': \'title\'},\n+                    \'uuid2\': {\'@type\': \'description\'}\n+                },\n+            })\n+\n+        self.assertEqual(response.status_code, 204)\n+\n+        response = self.api_session.get(\'/doc\')\n+        response = response.json()\n+\n+        self.assertEquals(\n+            response[\'tiles\'],\n+            {\n+                \'uuid1\': {\'@type\': \'title\'},\n+                \'uuid2\': {\'@type\': \'description\'}\n+            }\n+        )\n+\n+    def test_patch_tiles_layout(self):\n+        response = self.api_session.patch(\n+            \'/doc\',\n+            json={\n+                "tiles_layout": {\n+                    "items": ["#uuid1", "#uuid2"]\n+                }\n+            })\n+\n+        self.assertEqual(response.status_code, 204)\n+\n+        response = self.api_session.get(\'/doc\')\n+        response = response.json()\n+\n+        self.assertEquals(\n+            response[\'tiles_layout\'],\n+            {\n+                "items": ["#uuid1", "#uuid2"]\n+            }\n+        )\n+\n+    def test_get_tiles_layout_schema(self):\n+        response = self.api_session.get(\'/@types/Document\')\n+\n+        self.assertEqual(response.status_code, 200)\n+        response = response.json()\n+\n+    # These are not failing because the patch operations doesn\'t validate\n+    # fields right now\n+    # def test_patch_tiles_list_wrong_type(self):\n+    #     response = self.api_session.patch(\n+    #         \'/doc\',\n+    #         json={\n+    #             "tiles": [{\'uuid1\': {\'@type\': \'title\'}}]\n+    #         })\n+    #     self.assertEqual(response.status_code, 500)\n+\n+    # def test_patch_tiles_layout_wrong_type(self):\n+    #     response = self.api_session.patch(\n+    #         \'/doc\',\n+    #         json={\n+    #             "tiles_layout": {\'uuid1\': {\'@type\': \'title\'}}\n+    #         })\n+    #     self.assertEqual(response.status_code, 500)\ndiff --git a/src/plone/restapi/tests/test_services_vocabularies.py b/src/plone/restapi/tests/test_services_vocabularies.py\nindex 9ae4a410..10bea099 100644\n--- a/src/plone/restapi/tests/test_services_vocabularies.py\n+++ b/src/plone/restapi/tests/test_services_vocabularies.py\n@@ -62,12 +62,12 @@ def test_get_vocabulary(self):\n         response = response.json()\n         self.assertEqual(\n             response,\n-            {u\'@id\': u\'http://localhost:55001/plone/@vocabularies/\'\'plone.restapi.tests.test_vocabulary\',  # noqa\n+            {u\'@id\': self.portal_url + u\'/@vocabularies/\'\'plone.restapi.tests.test_vocabulary\',  # noqa\n              u\'terms\': [\n-                 {u\'@id\': u\'http://localhost:55001/plone/@vocabularies/plone.restapi.tests.test_vocabulary/token1\',  # noqa\n+                 {u\'@id\': self.portal_url + u\'/@vocabularies/plone.restapi.tests.test_vocabulary/token1\',  # noqa\n                   u\'title\': u\'Title 1\',\n                   u\'token\': u\'token1\'},\n-                 {u\'@id\': u\'http://localhost:55001/plone/@vocabularies/plone.restapi.tests.test_vocabulary/token2\',  # noqa\n+                 {u\'@id\': self.portal_url + u\'/@vocabularies/plone.restapi.tests.test_vocabulary/token2\',  # noqa\n                   u\'title\': u\'Title 2\',\n                   u\'token\': u\'token2\'}]})\n \n@@ -94,7 +94,7 @@ def test_get_all_vocabularies(self):\n         self.assertEqual(\n             [\n                 {\n-                    u\'@id\': u\'http://localhost:55001/plone/@vocabularies/plone.restapi.tests.test_vocabulary\',  # noqa\n+                    u\'@id\': self.portal_url + u\'/@vocabularies/plone.restapi.tests.test_vocabulary\',  # noqa\n                     u\'title\': u\'plone.restapi.tests.test_vocabulary\'\n                 }\n             ],\n@@ -128,12 +128,12 @@ def test_context_vocabulary(self):\n         self.assertEqual(\n             response.json(),\n             {\n-                u\'@id\': u\'http://localhost:55001/plone/testdoc/@vocabularies/plone.restapi.tests.test_context_vocabulary\',  # noqa\n+                u\'@id\': self.portal_url + u\'/testdoc/@vocabularies/plone.restapi.tests.test_context_vocabulary\',  # noqa\n                 u\'terms\': [\n-                    {u\'@id\': u\'http://localhost:55001/plone/testdoc/@vocabularies/plone.restapi.tests.test_context_vocabulary/id\',  # noqa\n+                    {u\'@id\': self.portal_url + u\'/testdoc/@vocabularies/plone.restapi.tests.test_context_vocabulary/id\',  # noqa\n                      u\'title\': u\'testdoc\',\n                      u\'token\': u\'id\'},\n-                    {u\'@id\': u\'http://localhost:55001/plone/testdoc/@vocabularies/plone.restapi.tests.test_context_vocabulary/title\',  # noqa\n+                    {u\'@id\': self.portal_url + u\'/testdoc/@vocabularies/plone.restapi.tests.test_context_vocabulary/title\',  # noqa\n                      u\'title\': u\'Document 1\',\n                      u\'token\': u\'title\'}]\n             })\ndiff --git a/src/plone/restapi/tests/test_tus.py b/src/plone/restapi/tests/test_tus.py\nindex 7380db6a..dfb12dbd 100644\n--- a/src/plone/restapi/tests/test_tus.py\n+++ b/src/plone/restapi/tests/test_tus.py\n@@ -105,6 +105,7 @@ def test_tus_post_initialization(self):\n         stored_metadata = upload.metadata()\n         self.assertEqual(stored_metadata,\n                          {u\'length\': 8, u\'mode\': u\'create\'})\n+        upload.cleanup()\n \n     def test_tus_post_initialization_with_metadata(self):\n         metadata = \'filename {},content-type {}\'.format(\n@@ -125,6 +126,7 @@ def test_tus_post_initialization_with_metadata(self):\n                           u\'filename\': u\'test.txt\',\n                           u\'length\': 8,\n                           u\'mode\': u\'create\'})\n+        upload.cleanup()\n \n     def test_tus_post_replace(self):\n         self.file = api.content.create(container=self.portal,\n@@ -145,13 +147,16 @@ def test_tus_post_replace(self):\n         stored_metadata = upload.metadata()\n         self.assertEqual(stored_metadata,\n                          {u\'length\': 8, u\'mode\': u\'replace\'})\n+        upload.cleanup()\n \n     def test_tus_head_on_not_existing_resource_returns_404(self):\n         response = self.api_session.head(\n             self.upload_url + \'/myuid/123\', headers={\'Tus-Resumable\': \'1.0.0\'})\n         self.assertEqual(404, response.status_code)\n         response = self.api_session.head(\n-            self.upload_url + \'/myuid\', headers={\'Tus-Resumable\': \'1.0.0\'})\n+            self.upload_url + \'/non-existing-uid\',\n+            headers={\'Tus-Resumable\': \'1.0.0\'}\n+        )\n         self.assertEqual(404, response.status_code)\n         response = self.api_session.head(\n             self.upload_url, headers={\'Tus-Resumable\': \'1.0.0\'})\n@@ -178,22 +183,24 @@ def test_tus_head_response_includes_required_headers(self):\n     def test_head_in_create_mode_without_add_permission_raises_401(self):\n         self.folder.manage_permission(\'Add portal content\', [], 0)\n         transaction.commit()\n-        TUSUpload(\'myuid\', {\'mode\': \'create\', \'length\': 12})\n+        tus = TUSUpload(\'myuid\', {\'mode\': \'create\', \'length\': 12})\n         response = self.api_session.head(\n             self.upload_url + \'/myuid\',\n             headers={\'Tus-Resumable\': \'1.0.0\',\n                      \'Upload-Offset\': \'0\'})\n         self.assertEqual(401, response.status_code)\n+        tus.cleanup()\n \n     def test_head_in_replace_mode_without_modify_permission_raises_401(self):\n         self.folder.manage_permission(\'Modify portal content\', [], 0)\n         transaction.commit()\n-        TUSUpload(\'myuid\', {\'mode\': \'replace\', \'length\': 12})\n+        tus = TUSUpload(\'myuid\', {\'mode\': \'replace\', \'length\': 12})\n         response = self.api_session.head(\n             self.upload_url + \'/myuid\',\n             headers={\'Tus-Resumable\': \'1.0.0\',\n                      \'Upload-Offset\': \'0\'})\n         self.assertEqual(401, response.status_code)\n+        tus.cleanup()\n \n     def test_tus_patch_on_not_existing_resource_returns_404(self):\n         response = self.api_session.patch(\n@@ -266,7 +273,7 @@ def test_tus_patch_non_primary_field(self):\n     def test_patch_in_create_mode_without_add_permission_raises_401(self):\n         self.folder.manage_permission(\'Add portal content\', [], 0)\n         transaction.commit()\n-        TUSUpload(\'myuid\', {\'mode\': \'create\', \'length\': 12})\n+        tus = TUSUpload(\'myuid\', {\'mode\': \'create\', \'length\': 12})\n         response = self.api_session.patch(\n             self.upload_url + \'/myuid\',\n             headers={\'Tus-Resumable\': \'1.0.0\',\n@@ -274,11 +281,12 @@ def test_patch_in_create_mode_without_add_permission_raises_401(self):\n                      \'Upload-Offset\': \'0\'},\n             data=StringIO(\'abcdefghijkl\'))\n         self.assertEqual(401, response.status_code)\n+        tus.cleanup()\n \n     def test_patch_in_replace_mode_without_modify_permission_raises_401(self):\n         self.folder.manage_permission(\'Modify portal content\', [], 0)\n         transaction.commit()\n-        TUSUpload(\'myuid\', {\'mode\': \'replace\', \'length\': 12})\n+        tus = TUSUpload(\'myuid\', {\'mode\': \'replace\', \'length\': 12})\n         response = self.api_session.patch(\n             self.upload_url + \'/myuid\',\n             headers={\'Tus-Resumable\': \'1.0.0\',\n@@ -286,6 +294,7 @@ def test_patch_in_replace_mode_without_modify_permission_raises_401(self):\n                      \'Upload-Offset\': \'0\'},\n             data=StringIO(\'abcdefghijkl\'))\n         self.assertEqual(401, response.status_code)\n+        tus.cleanup()\n \n     def test_tus_can_upload_pdf_file(self):\n         # initialize the upload with POST\n@@ -459,39 +468,47 @@ class TestTUSUpload(unittest.TestCase):\n     def test_tmp_dir_gets_created_in_client_home(self):\n         tus = TUSUpload(\'myuid\')\n         self.assertTrue(os.path.isdir(tus.tmp_dir))\n+        tus.cleanup()\n \n     def test_use_tus_tmp_dir_if_provided(self):\n         tus_upload_dir = tempfile.mkdtemp()\n         os.environ[\'TUS_TMP_FILE_DIR\'] = tus_upload_dir\n         tus = TUSUpload(\'myuid\')\n         self.assertEqual(tus_upload_dir, tus.tmp_dir)\n+        tus.cleanup()\n \n     def test_metadata_gets_stored_if_provided(self):\n         tus = TUSUpload(\'myuid\', {\'length\': 1024, \'filename\': \'test.pdf\'})\n         self.assertIn(\'filename\', tus.metadata())\n         self.assertEqual(\'test.pdf\', tus.metadata()[\'filename\'])\n+        tus.cleanup()\n \n     def test_length_returns_total_length_if_set(self):\n         tus = TUSUpload(\'myuid\', {\'length\': 1024})\n         self.assertEqual(1024, tus.length())\n+        tus.cleanup()\n \n     def test_length_returns_zero_if_not_set(self):\n         tus = TUSUpload(\'myuid\')\n         self.assertEqual(0, tus.length())\n+        tus.cleanup()\n \n     def test_offset_returns_zero_if_file_doesnt_exist(self):\n         tus = TUSUpload(\'myuid\', {\'length\': 1024})\n         self.assertEqual(0, tus.offset())\n+        tus.cleanup()\n \n     def test_offset_returns_size_of_current_file(self):\n         tus = TUSUpload(\'myuid\', {\'length\': 1024})\n         tus.write(StringIO(\'0123456789\'))\n         self.assertEqual(10, tus.offset())\n+        tus.cleanup()\n \n     def test_write_creates_new_file(self):\n         tus = TUSUpload(\'myuid\', {\'length\': 1024})\n         tus.write(StringIO(\'0123456789\'))\n         self.assertTrue(os.path.isfile(tus.filepath))\n+        tus.cleanup()\n \n     def test_write_appends_to_file_at_given_offset(self):\n         tus = TUSUpload(\'myuid\', {\'length\': 1024})\n@@ -501,20 +518,24 @@ def test_write_appends_to_file_at_given_offset(self):\n         with open(tus.filepath, \'rb\') as f:\n             data = f.read()\n         self.assertEqual(\'0123456789abc\', data)\n+        tus.cleanup()\n \n     def test_write_sets_finished_flag(self):\n         tus = TUSUpload(\'myuid\', {\'length\': 10})\n         tus.write(StringIO(\'0123456789\'))\n         self.assertTrue(tus.finished)\n+        tus.cleanup()\n \n     def test_metadata_returns_empty_dict_if_no_metadata_has_been_set(self):\n         tus = TUSUpload(\'myuid\')\n         self.assertEqual({}, tus.metadata())\n+        tus.cleanup()\n \n     def test_expires_returns_expiration_time_of_current_upload(self):\n         tus = TUSUpload(\'myuid\', {\'length\': 1024})\n         tus.write(StringIO(\'0123456789\'))\n         self.assertGreater(DateTime(tus.expires()), DateTime())\n+        tus.cleanup()\n \n     def test_cleanup_removes_upload_file(self):\n         tus = TUSUpload(\'myuid\', {\'length\': 1024})\n@@ -542,6 +563,7 @@ def test_cleanup_expired_files(self):\n         self.assertFalse(os.path.exists(filepath))\n         self.assertFalse(os.path.exists(metadata_path))\n         self.assertFalse(os.path.exists(metadata_only_path))\n+        tus.cleanup()\n \n     def tearDown(self):\n         client_home = os.environ.get(\'CLIENT_HOME\')\ndiff --git a/src/plone/restapi/types/adapters.py b/src/plone/restapi/types/adapters.py\nindex c44bda4d..657fa46a 100644\n--- a/src/plone/restapi/types/adapters.py\n+++ b/src/plone/restapi/types/adapters.py\n@@ -3,6 +3,7 @@\n from plone.autoform.interfaces import WIDGETS_KEY\n \n from plone.app.textfield.interfaces import IRichText\n+from plone.schema import IJSONField\n from zope.component import adapter\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n@@ -329,7 +330,6 @@ def additional(self):\n             \'schema\': key_type.get_schema(),\n             \'additional\': key_type.additional(),\n         }\n-\n         value_type = getMultiAdapter(\n             (self.field.key_type, self.context, self.request),\n             IJsonSchemaProvider\n@@ -387,3 +387,14 @@ def get_widget(self):\n @implementer(IJsonSchemaProvider)\n class SubjectsFieldJsonSchemaProvider(ChoiceJsonSchemaProvider):\n     pass\n+\n+\n+@adapter(IJSONField, Interface, Interface)\n+@implementer(IJsonSchemaProvider)\n+class JSONFieldSchemaProvider(DefaultJsonSchemaProvider):\n+\n+    def get_type(self):\n+        return \'dict\'\n+\n+    def get_widget(self):\n+        return \'json\'\ndiff --git a/src/plone/restapi/types/configure.zcml b/src/plone/restapi/types/configure.zcml\nindex e55d6d52..d099575a 100644\n--- a/src/plone/restapi/types/configure.zcml\n+++ b/src/plone/restapi/types/configure.zcml\n@@ -28,5 +28,6 @@\n     <adapter factory=".adapters.RichTextJsonSchemaProvider" />\n     <adapter factory=".adapters.DateJsonSchemaProvider" />\n     <adapter factory=".adapters.DatetimeJsonSchemaProvider" />\n+    <adapter factory=".adapters.JSONFieldSchemaProvider" />\n \n </configure>\ndiff --git a/test-no-uncommitted-doc-changes.in b/test-no-uncommitted-doc-changes.in\nindex c1cc6efb..878f2f80 100644\n--- a/test-no-uncommitted-doc-changes.in\n+++ b/test-no-uncommitted-doc-changes.in\n@@ -5,7 +5,7 @@\n #\n # (To be executed after running tests in test_documentation.py)\n \n-DUMPS_DIR="docs/source/_json/"\n+DUMPS_DIR="src/plone/restapi/tests/http-examples/"\n \n function red {\n     RED=$(tput setaf 1)\ndiff --git a/versions.cfg b/versions.cfg\nindex 15c8dab7..f9083016 100644\n--- a/versions.cfg\n+++ b/versions.cfg\n@@ -37,3 +37,4 @@ plone.testing = 4.3.1\n \n # Misc\n plone.recipe.zope2instance = 4.4.0\n+plone.schema = 1.2.0\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2018-07-19T13:58:06+02:00
Author: Timo Stollenwerk (tisto) <tisto@users.noreply.github.com>
Commit: https://github.com/plone/plone.restapi/commit/c0089cad7efbe22ec0b9cb9310cc476343b50805

Merge pull request #565 from plone/member-fields

Return member fields based on user schema

Files changed:
M CHANGES.rst
M src/plone/restapi/serializer/user.py
M src/plone/restapi/tests/http-examples/users.resp
M src/plone/restapi/tests/http-examples/users_add.resp
M src/plone/restapi/tests/http-examples/users_authorized_get.resp
M src/plone/restapi/tests/http-examples/users_created.resp
M src/plone/restapi/tests/http-examples/users_filtered_by_username.resp
M src/plone/restapi/tests/http-examples/users_get.resp
M src/plone/restapi/tests/test_serializer_user.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 0f897b06..860412c9 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -107,6 +107,10 @@ New Features:\n   items and to set effective and expiration dates.\n   [buchi]\n \n+- Return member fields based on user schema in `@users` endpoint instead of a\n+  fixed list of member properties.\n+  [buchi]\n+\n Bugfixes:\n \n - Make sure DX DefaultFieldDeserializer validates field values.\ndiff --git a/src/plone/restapi/serializer/user.py b/src/plone/restapi/serializer/user.py\nindex 0bb67b67..0f153c8f 100644\n--- a/src/plone/restapi/serializer/user.py\n+++ b/src/plone/restapi/serializer/user.py\n@@ -2,10 +2,23 @@\n from plone.restapi.interfaces import ISerializeToJson\n from plone.restapi.interfaces import ISerializeToJsonSummary\n from Products.CMFCore.interfaces._tools import IMemberData\n+from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone.utils import safe_unicode\n from zope.component import adapter\n+from zope.component import getUtility\n from zope.component.hooks import getSite\n from zope.interface import implementer\n from zope.publisher.interfaces import IRequest\n+from zope.schema import getFieldNames\n+\n+try:\n+    # Plone 5\n+    from plone.app.users.browser.userdatapanel import getUserDataSchema\n+    HAS_TTW_SCHEMAS = True\n+except ImportError:\n+    # Plone 4.3\n+    from plone.app.users.userdataschema import IUserDataSchemaProvider\n+    HAS_TTW_SCHEMAS = False\n \n \n class BaseSerializer(object):\n@@ -24,21 +37,39 @@ def __call__(self):\n         # to logged-in or logged-out users. They should not be exposed here\n         roles = list(set(roles) - set([\'Anonymous\', \'Authenticated\', ]))\n \n-        return {\n-            \'@id\': \'{}/@users/{}\'.format(\n-                portal.absolute_url(),\n-                user.id\n-            ),\n+        data = {\n+            \'@id\': \'{}/@users/{}\'.format(portal.absolute_url(), user.id),\n             \'id\': user.id,\n-            \'email\': user.getProperty(\'email\'),\n             \'username\': user.getUserName(),\n-            \'fullname\': user.getProperty(\'fullname\'),\n-            \'home_page\': user.getProperty(\'home_page\'),\n-            \'description\': user.getProperty(\'description\'),\n-            \'location\': user.getProperty(\'location\'),\n             \'roles\': roles,\n         }\n \n+        if HAS_TTW_SCHEMAS:\n+            schema = getUserDataSchema()\n+        else:\n+            util = getUtility(IUserDataSchemaProvider)\n+            schema = util.getSchema()\n+\n+        for name in getFieldNames(schema):\n+            if name == \'portrait\':\n+                memberdata = getToolByName(portal, \'portal_memberdata\')\n+                if user.id in memberdata.portraits:\n+                    value = \'{}/portal_memberdata/portraits/{}\'.format(\n+                        portal.absolute_url(), user.id)\n+                else:\n+                    value = None\n+            elif name == \'pdelete\':\n+                continue\n+            else:\n+                value = user.getProperty(name, \'\')\n+                if value == \'\':\n+                    value = None\n+                if value:\n+                    value = safe_unicode(value)\n+            data[name] = value\n+\n+        return data\n+\n \n @implementer(ISerializeToJson)\n @adapter(IMemberData, IRequest)\ndiff --git a/src/plone/restapi/tests/http-examples/users.resp b/src/plone/restapi/tests/http-examples/users.resp\nindex 3b07d7f5..e69cb939 100644\n--- a/src/plone/restapi/tests/http-examples/users.resp\n+++ b/src/plone/restapi/tests/http-examples/users.resp\n@@ -10,6 +10,7 @@ Content-Type: application/json\n     "home_page": "http://www.example.com", \n     "id": "admin", \n     "location": "Berlin", \n+    "portrait": null, \n     "roles": [\n       "Manager"\n     ], \n@@ -23,6 +24,7 @@ Content-Type: application/json\n     "home_page": "http://www.example.com", \n     "id": "test_user_1_", \n     "location": "Bonn", \n+    "portrait": null, \n     "roles": [\n       "Manager"\n     ], \ndiff --git a/src/plone/restapi/tests/http-examples/users_add.resp b/src/plone/restapi/tests/http-examples/users_add.resp\nindex 4e0df867..d4fdd52f 100644\n--- a/src/plone/restapi/tests/http-examples/users_add.resp\n+++ b/src/plone/restapi/tests/http-examples/users_add.resp\n@@ -10,6 +10,7 @@ Location: http://localhost:55001/plone/@users/noamchomsky\n   "home_page": "web.mit.edu/chomsky", \n   "id": "noamchomsky", \n   "location": "Cambridge, MA", \n+  "portrait": null, \n   "roles": [\n     "Member"\n   ], \ndiff --git a/src/plone/restapi/tests/http-examples/users_authorized_get.resp b/src/plone/restapi/tests/http-examples/users_authorized_get.resp\nindex 314b3450..80a85227 100644\n--- a/src/plone/restapi/tests/http-examples/users_authorized_get.resp\n+++ b/src/plone/restapi/tests/http-examples/users_authorized_get.resp\n@@ -9,6 +9,7 @@ Content-Type: application/json\n   "home_page": "web.mit.edu/chomsky", \n   "id": "noam", \n   "location": "Cambridge, MA", \n+  "portrait": null, \n   "roles": [\n     "Member"\n   ], \ndiff --git a/src/plone/restapi/tests/http-examples/users_created.resp b/src/plone/restapi/tests/http-examples/users_created.resp\nindex 21e40ee5..beaeff44 100644\n--- a/src/plone/restapi/tests/http-examples/users_created.resp\n+++ b/src/plone/restapi/tests/http-examples/users_created.resp\n@@ -10,6 +10,7 @@ Location: http://localhost:55001/plone/@users/noamchomsky\n   "home_page": "web.mit.edu/chomsky", \n   "id": "noamchomsky", \n   "location": "Cambridge, MA", \n+  "portrait": null, \n   "roles": [\n     "Contributor"\n   ], \ndiff --git a/src/plone/restapi/tests/http-examples/users_filtered_by_username.resp b/src/plone/restapi/tests/http-examples/users_filtered_by_username.resp\nindex c1bd7027..54591ca6 100644\n--- a/src/plone/restapi/tests/http-examples/users_filtered_by_username.resp\n+++ b/src/plone/restapi/tests/http-examples/users_filtered_by_username.resp\n@@ -10,6 +10,7 @@ Content-Type: application/json\n     "home_page": "web.mit.edu/chomsky", \n     "id": "noam", \n     "location": "Cambridge, MA", \n+    "portrait": null, \n     "roles": [\n       "Member"\n     ], \ndiff --git a/src/plone/restapi/tests/http-examples/users_get.resp b/src/plone/restapi/tests/http-examples/users_get.resp\nindex 314b3450..80a85227 100644\n--- a/src/plone/restapi/tests/http-examples/users_get.resp\n+++ b/src/plone/restapi/tests/http-examples/users_get.resp\n@@ -9,6 +9,7 @@ Content-Type: application/json\n   "home_page": "web.mit.edu/chomsky", \n   "id": "noam", \n   "location": "Cambridge, MA", \n+  "portrait": null, \n   "roles": [\n     "Member"\n   ], \ndiff --git a/src/plone/restapi/tests/test_serializer_user.py b/src/plone/restapi/tests/test_serializer_user.py\nindex cc4d6309..b32d9041 100644\n--- a/src/plone/restapi/tests/test_serializer_user.py\n+++ b/src/plone/restapi/tests/test_serializer_user.py\n@@ -1,6 +1,7 @@\n # -*- coding: utf-8 -*-\n from plone import api\n from plone.restapi.interfaces import ISerializeToJson\n+from plone.restapi.serializer.user import HAS_TTW_SCHEMAS\n from plone.restapi.testing import PLONE_RESTAPI_DX_INTEGRATION_TESTING\n from zope.component import getMultiAdapter\n \n@@ -49,3 +50,33 @@ def test_serialize_roles(self):\n         self.assertIn(\'roles\', user)\n         self.assertNotIn(\'Authenticated\', user[\'roles\'])\n         self.assertNotIn(\'Anonymous\', user[\'roles\'])\n+\n+    @unittest.skipUnless(HAS_TTW_SCHEMAS, \'Requires TTW user schemas\')\n+    def test_serialize_custom_member_schema(self):\n+        from plone.app.users.browser.schemaeditor import applySchema\n+        member_schema = """\n+            <model xmlns="http://namespaces.plone.org/supermodel/schema"\n+                xmlns:form="http://namespaces.plone.org/supermodel/form"\n+                xmlns:users="http://namespaces.plone.org/supermodel/users"\n+                xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+                i18n:domain="plone">\n+              <schema name="member-fields">\n+                <field name="twitter" type="zope.schema.TextLine"\n+                         users:forms="In User Profile">\n+                  <description i18n:translate="help_twitter">\n+                    Twitter account\n+                  </description>\n+                  <required>False</required>\n+                  <title i18n:translate="label_twitter">Twitter Account</title>\n+                </field>\n+              </schema>\n+            </model>\n+        """\n+        applySchema(member_schema)\n+        user = api.user.create(\n+            email=\'donald.duck@example.com\',\n+            username=\'donald\',\n+            properties={\'twitter\': \'TheRealDuck\'})\n+        res = self.serialize(user)\n+        self.assertIn(\'twitter\', res)\n+        self.assertEqual(res[\'twitter\'], \'TheRealDuck\')\n'

