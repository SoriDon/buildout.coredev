Repository: plone.app.contentmenu


Branch: refs/heads/master
Date: 2023-03-25T19:45:50+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.contentmenu/commit/3ce125d3e25c64e7b8e30e761f327241d25fcfdf

Configuring with plone/meta

Files changed:
A .editorconfig
A .meta.toml
A .pre-commit-config.yaml
A news/47959565.internal
A tox.ini
M pyproject.toml
M setup.cfg

b'diff --git a/.editorconfig b/.editorconfig\nnew file mode 100644\nindex 0000000..b4158b8\n--- /dev/null\n+++ b/.editorconfig\n@@ -0,0 +1,39 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+#\n+# EditorConfig Configuration file, for more details see:\n+# http://EditorConfig.org\n+# EditorConfig is a convention description, that could be interpreted\n+# by multiple editors to enforce common coding conventions for specific\n+# file types\n+\n+# top-most EditorConfig file:\n+# Will ignore other EditorConfig files in Home directory or upper tree level.\n+root = true\n+\n+\n+[*]  # For All Files\n+# Unix-style newlines with a newline ending every file\n+end_of_line = lf\n+insert_final_newline = true\n+trim_trailing_whitespace = true\n+# Set default charset\n+charset = utf-8\n+# Indent style default\n+indent_style = space\n+# Max Line Length - a hard line wrap, should be disabled\n+max_line_length = off\n+\n+[*.{py,cfg,ini}]\n+# 4 space indentation\n+indent_size = 4\n+\n+[*.{yml,zpt,pt,dtml,zcml}]\n+# 2 space indentation\n+indent_size = 2\n+\n+[{Makefile,.gitmodules}]\n+# Tab indentation (no size specified, but view as 4 spaces)\n+indent_style = tab\n+indent_size = unset\n+tab_width = unset\ndiff --git a/.meta.toml b/.meta.toml\nnew file mode 100644\nindex 0000000..07dde25\n--- /dev/null\n+++ b/.meta.toml\n@@ -0,0 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[meta]\n+template = "default"\n+commit-id = "47959565"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nnew file mode 100644\nindex 0000000..582f8ac\n--- /dev/null\n+++ b/.pre-commit-config.yaml\n@@ -0,0 +1,42 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+ci:\n+    autofix_prs: false\n+    autoupdate_schedule: monthly\n+\n+repos:\n+-   repo: https://github.com/asottile/pyupgrade\n+    rev: v3.3.1\n+    hooks:\n+    -   id: pyupgrade\n+        args: [--py38-plus]\n+-   repo: https://github.com/pycqa/isort\n+    rev: 5.12.0\n+    hooks:\n+    -   id: isort\n+-   repo: https://github.com/psf/black\n+    rev: 23.1.0\n+    hooks:\n+    -   id: black\n+-   repo: https://github.com/collective/zpretty\n+    rev: 3.0.2\n+    hooks:\n+    -   id: zpretty\n+-   repo: https://github.com/PyCQA/flake8\n+    rev: 6.0.0\n+    hooks:\n+    -   id: flake8\n+-   repo: https://github.com/codespell-project/codespell\n+    rev: v2.2.2\n+    hooks:\n+    -   id: codespell\n+        additional_dependencies:\n+          - tomli\n+-   repo: https://github.com/mgedmin/check-manifest\n+    rev: "0.49"\n+    hooks:\n+    -   id: check-manifest\n+-   repo: https://github.com/regebro/pyroma\n+    rev: "4.2"\n+    hooks:\n+    -   id: pyroma\ndiff --git a/news/47959565.internal b/news/47959565.internal\nnew file mode 100644\nindex 0000000..c08f539\n--- /dev/null\n+++ b/news/47959565.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 05b615d..9eb73f3 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,3 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [tool.towncrier]\n filename = "CHANGES.rst"\n directory = "news/"\n@@ -18,3 +20,43 @@ showcontent = true\n directory = "bugfix"\n name = "Bug fixes:"\n showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "internal"\n+name = "Internal:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "documentation"\n+name = "Documentation:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "tests"\n+name = "Tests"\n+showcontent = true\n+\n+[tool.isort]\n+profile = "plone"\n+\n+[tool.black]\n+target-version = ["py38"]\n+\n+[tool.dependencychecker]\n+Zope = [\n+  # Zope own provided namespaces\n+  \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n+  \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n+  \'Zope2\', \'webdav\', \'zmi\',\n+  # Zope dependencies\n+  \'Acquisition\', \'DateTime\', \'transaction\', \'zExceptions\', \'ZODB\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.deferredimport\', \'zope.event\',\n+  \'zope.exceptions\', \'zope.globalrequest\', \'zope.i18n\', \'zope.i18nmessageid\',\n+  \'zope.interface\', \'zope.lifecycleevent\', \'zope.location\', \'zope.publisher\',\n+  \'zope.schema\', \'zope.security\', \'zope.site\', \'zope.traversing\', \'AccessControl\',\n+]\n+\'plone.base\' = [\n+  \'AccessControl\', \'Products.BTreeFolder2\', \'Products.CMFCore\',\n+  \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n+]\n+python-dateutil = [\'dateutil\']\ndiff --git a/setup.cfg b/setup.cfg\nindex b4f94a2..0da8f8f 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -1,17 +1,23 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[bdist_wheel]\n+universal = 0\n+\n+[flake8]\n+doctests = 1\n+ignore =\n+    # black takes care of line length\n+    E501,\n+    # black takes care of where to break lines\n+    W503,\n+    # black takes care of spaces within slicing (list[:])\n+    E203,\n+    # black takes care of spaces after commas\n+    E231,\n+\n [check-manifest]\n ignore =\n-    *.cfg\n-    .coveragerc\n     .editorconfig\n-    .gitattributes\n-    bootstrap-buildout.py\n-\n-[isort]\n-# black compatible Plone isort rules:\n-profile = black\n-force_alphabetical_sort = True\n-force_single_line = True\n-lines_after_imports = 2\n-\n-[bdist_wheel]\n-universal = 0\n+    .meta.toml\n+    .pre-commit-config.yaml\n+    tox.ini\ndiff --git a/tox.ini b/tox.ini\nnew file mode 100644\nindex 0000000..2821883\n--- /dev/null\n+++ b/tox.ini\n@@ -0,0 +1,53 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[tox]\n+# We need 4.4.0 for constrain_package_deps.\n+min_version = 4.4.0\n+envlist =\n+    format\n+    lint\n+    test\n+\n+[testenv]\n+allowlist_externals =\n+    sh\n+\n+[testenv:format]\n+description = automatically reformat code\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a pyupgrade\n+    pre-commit run -a isort\n+    pre-commit run -a black\n+    pre-commit run -a zpretty\n+\n+[testenv:lint]\n+description = run linters that will help improve the code style\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a\n+\n+[testenv:dependencies]\n+description = check if the package defines all its dependencies and generate a graph out of them\n+deps =\n+    z3c.dependencychecker==2.11\n+    pipdeptree==2.5.1\n+    graphviz  # optional dependency of pipdeptree\n+commands =\n+    dependencychecker\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+\n+[testenv:test]\n+usedevelop = true\n+constrain_package_deps = true\n+deps =\n+    zope.testrunner\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    zope-testrunner --test-path={toxinidir} -s plone.app.contentmenu\n+extras =\n+    test\n'

Repository: plone.app.contentmenu


Branch: refs/heads/master
Date: 2023-03-25T19:47:19+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.contentmenu/commit/732fbd4dc9a660647c1423d73666171eb8f7d1e9

chore: pyupgrade

Files changed:
M plone/app/contentmenu/menu.py

b'diff --git a/plone/app/contentmenu/menu.py b/plone/app/contentmenu/menu.py\nindex 681c023..2d09cb8 100644\n--- a/plone/app/contentmenu/menu.py\n+++ b/plone/app/contentmenu/menu.py\n@@ -1025,7 +1025,7 @@ def getMenuItems(self, context, request):\n                 ),\n                 "description": manager_name,\n                 "action": addTokenToUrl(\n-                    "{}/@@topbar-manage-portlets/{}".format(current_url, manager_name),\n+                    f"{current_url}/@@topbar-manage-portlets/{manager_name}",\n                     request,\n                 ),\n                 "selected": False,\n'

Repository: plone.app.contentmenu


Branch: refs/heads/master
Date: 2023-03-25T19:47:34+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.contentmenu/commit/7c01f16f94b61cf868583d3355a87bbec9a6ea00

chore: isort

Files changed:
M plone/app/contentmenu/menu.py

b"diff --git a/plone/app/contentmenu/menu.py b/plone/app/contentmenu/menu.py\nindex 2d09cb8..b9d9ef1 100644\n--- a/plone/app/contentmenu/menu.py\n+++ b/plone/app/contentmenu/menu.py\n@@ -36,8 +36,8 @@\n from zope.component import queryMultiAdapter\n from zope.interface import implementer\n \n-import pkg_resources\n import json\n+import pkg_resources\n \n \n PMF = _  # used for dynamic messages we don't want to extract\n"

Repository: plone.app.contentmenu


Branch: refs/heads/master
Date: 2023-03-25T19:51:45+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.contentmenu/commit/980b42326f574098366b3c31ad8cad0f124e61b3

chore: black

Files changed:
M plone/app/contentmenu/displayviewsmenu.py
M plone/app/contentmenu/menu.py
M plone/app/contentmenu/testing.py
M plone/app/contentmenu/tests/test_menu.py

b'diff --git a/plone/app/contentmenu/displayviewsmenu.py b/plone/app/contentmenu/displayviewsmenu.py\nindex bdce107..c0d25ac 100644\n--- a/plone/app/contentmenu/displayviewsmenu.py\n+++ b/plone/app/contentmenu/displayviewsmenu.py\n@@ -14,15 +14,11 @@ def getMenuItemByAction(self, context, request, action):\n         if action.startswith("++view++"):\n             action = action[8:]\n \n-        for name, item in getAdapters(\n-            (context, request), self.getMenuItemType()\n-        ):\n+        for name, item in getAdapters((context, request), self.getMenuItemType()):\n             item_action = item.action\n             # Normalize menu item action; never uses ++view++\n             if item_action.startswith("@@"):\n                 item_action = item_action[2:]\n \n-            if item_action == action and checkPermission(\n-                item.permission, context\n-            ):\n+            if item_action == action and checkPermission(item.permission, context):\n                 return item\ndiff --git a/plone/app/contentmenu/menu.py b/plone/app/contentmenu/menu.py\nindex b9d9ef1..0278b85 100644\n--- a/plone/app/contentmenu/menu.py\n+++ b/plone/app/contentmenu/menu.py\n@@ -51,7 +51,6 @@\n \n @implementer(IActionsSubMenuItem)\n class ActionsSubMenuItem(BrowserSubMenuItem):\n-\n     title = _("label_actions_menu", default="Actions")\n     description = _(\n         "title_actions_menu", default="Actions for the current content item"\n@@ -131,7 +130,6 @@ def getMenuItems(self, context, request):\n \n @implementer(IDisplaySubMenuItem)\n class DisplaySubMenuItem(BrowserSubMenuItem):\n-\n     title = _("label_choose_template", default="Display")\n     submenuId = "plone_contentmenu_display"\n     icon = "toolbar-action/display"\n@@ -469,11 +467,9 @@ def getMenuItems(self, obj, request):\n                                     "id": "contextSetDefaultPage",\n                                     "separator": None,\n                                     "class": "pat-plone-modal",\n-                                    "modal": json.dumps({\n-                                        "actionOptions": {\n-                                            "redirectOnResponse": True,\n-                                        },\n-                                    }),\n+                                    "modal": json.dumps(\n+                                        {"actionOptions": {"redirectOnResponse": True}}\n+                                    ),\n                                 },\n                                 "submenu": None,\n                             }\n@@ -534,11 +530,9 @@ def getMenuItems(self, obj, request):\n                                     "id": "contextChangeDefaultPage",\n                                     "separator": None,\n                                     "class": "pat-plone-modal",\n-                                    "modal": json.dumps({\n-                                        "actionOptions": {\n-                                            "redirectOnResponse": True,\n-                                        },\n-                                    }),\n+                                    "modal": json.dumps(\n+                                        {"actionOptions": {"redirectOnResponse": True}}\n+                                    ),\n                                 },\n                                 "submenu": None,\n                             }\n@@ -549,7 +543,6 @@ def getMenuItems(self, obj, request):\n \n @implementer(IFactoriesSubMenuItem)\n class FactoriesSubMenuItem(BrowserSubMenuItem):\n-\n     title = _("label_add_new_item", default="Add new\\u2026")\n     submenuId = "plone_contentmenu_factory"\n     icon = "toolbar-action/factories"\n@@ -736,7 +729,6 @@ def _contentCanBeAdded(self, addContext, request):\n \n @implementer(IWorkflowSubMenuItem)\n class WorkflowSubMenuItem(BrowserSubMenuItem):\n-\n     MANAGE_SETTINGS_PERMISSION = "Manage portal"\n \n     title = _("label_state", default="State:")\n@@ -810,7 +802,6 @@ def _currentStateTitle(self):\n \n @implementer(IWorkflowMenu)\n class WorkflowMenu(BrowserMenu):\n-\n     # BBB: These actions (url\'s) existed in old workflow definitions\n     # but were never used. The scripts they reference don\'t exist in\n     # a standard installation. We allow the menu to fail gracefully\n@@ -927,7 +918,6 @@ def getMenuItems(self, context, request):\n \n @implementer(IPortletManagerSubMenuItem)\n class PortletManagerSubMenuItem(BrowserSubMenuItem):\n-\n     MANAGE_SETTINGS_PERMISSION = "Portlets: Manage portlets"\n \n     title = _("manage_portlets_link", default="Manage portlets")\ndiff --git a/plone/app/contentmenu/testing.py b/plone/app/contentmenu/testing.py\nindex 4887140..b57fc4b 100644\n--- a/plone/app/contentmenu/testing.py\n+++ b/plone/app/contentmenu/testing.py\n@@ -7,7 +7,6 @@\n \n \n class PloneAppContentmenu(PloneSandboxLayer):\n-\n     defaultBases = (PLONE_FIXTURE,)\n \n     def setUpZope(self, app, configurationContext):\ndiff --git a/plone/app/contentmenu/tests/test_menu.py b/plone/app/contentmenu/tests/test_menu.py\nindex e58bd56..7e48ab5 100644\n--- a/plone/app/contentmenu/tests/test_menu.py\n+++ b/plone/app/contentmenu/tests/test_menu.py\n@@ -43,7 +43,6 @@ def __init__(self, id=None, title=None, **kw):\n \n \n class TestActionsMenu(unittest.TestCase):\n-\n     layer = PLONE_APP_CONTENTMENU_DX_INTEGRATION_TESTING\n \n     def setUp(self):\n'

Repository: plone.app.contentmenu


Branch: refs/heads/master
Date: 2023-03-25T21:56:32+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.contentmenu/commit/26dc9e20e45b98791f47d94dd4be3426eb079ae0

chore: zpretty

Files changed:
M plone/app/contentmenu/configure.zcml
M plone/app/contentmenu/contentmenu.pt

b'diff --git a/plone/app/contentmenu/configure.zcml b/plone/app/contentmenu/configure.zcml\nindex fabb33a..36548b3 100644\n--- a/plone/app/contentmenu/configure.zcml\n+++ b/plone/app/contentmenu/configure.zcml\n@@ -1,46 +1,48 @@\n-<configure xmlns="http://namespaces.zope.org/zope"\n-           xmlns:browser="http://namespaces.zope.org/browser"\n-           xmlns:five="http://namespaces.zope.org/five"\n-           i18n_domain="plone">\n+<configure\n+    xmlns="http://namespaces.zope.org/zope"\n+    xmlns:browser="http://namespaces.zope.org/browser"\n+    xmlns:five="http://namespaces.zope.org/five"\n+    i18n_domain="plone"\n+    >\n \n   <!-- Top level menu -->\n   <browser:menu\n-    id="plone_contentmenu"\n-    title="Content menu - contains contextual actions related to the content"\n-    interface=".interfaces.IContentMenuItem"\n-    />\n+      id="plone_contentmenu"\n+      title="Content menu - contains contextual actions related to the content"\n+      interface=".interfaces.IContentMenuItem"\n+      />\n \n   <!-- Sub-menus -->\n \n   <browser:menu\n-    id="plone_contentmenu_actions"\n-    title="The \'actions\' menu - allows the user to execute actions on an object"\n-    class=".menu.ActionsMenu"\n-    />\n+      id="plone_contentmenu_actions"\n+      title="The \'actions\' menu - allows the user to execute actions on an object"\n+      class=".menu.ActionsMenu"\n+      />\n \n   <browser:menu\n-    id="plone_contentmenu_display"\n-    title="The \'display\' menu - allows the user to select the view of an object"\n-    class=".menu.DisplayMenu"\n-    />\n+      id="plone_contentmenu_display"\n+      title="The \'display\' menu - allows the user to select the view of an object"\n+      class=".menu.DisplayMenu"\n+      />\n \n-   <browser:menu\n-    id="plone_contentmenu_factory"\n-    title="The \'add\' menu - allows the user to add new content items in the context"\n-    class=".menu.FactoriesMenu"\n-    />\n+  <browser:menu\n+      id="plone_contentmenu_factory"\n+      title="The \'add\' menu - allows the user to add new content items in the context"\n+      class=".menu.FactoriesMenu"\n+      />\n \n   <browser:menu\n-    id="plone_contentmenu_workflow"\n-    title="The \'workflow\' menu - allows the user to execute workflow transitions"\n-    class=".menu.WorkflowMenu"\n-    />\n+      id="plone_contentmenu_workflow"\n+      title="The \'workflow\' menu - allows the user to execute workflow transitions"\n+      class=".menu.WorkflowMenu"\n+      />\n \n   <browser:menu\n-    id="plone_contentmenu_portletmanager"\n-    title="The \'portlet\' menu - allows the user to manage portlets"\n-    class=".menu.PortletManagerMenu"\n-    />\n+      id="plone_contentmenu_portletmanager"\n+      title="The \'portlet\' menu - allows the user to manage portlets"\n+      class=".menu.PortletManagerMenu"\n+      />\n \n   <!--\n     The menu items in the contentMenu are all sub-menu items. Unfortunately,\n@@ -68,40 +70,55 @@\n       manage portlets menu - order=50\n   -->\n \n-  <adapter for="* *"\n-           name="plone.contentmenu.actions"\n-           factory=".menu.ActionsSubMenuItem"\n-           provides=".interfaces.IContentMenuItem" />\n+  <adapter\n+      factory=".menu.ActionsSubMenuItem"\n+      provides=".interfaces.IContentMenuItem"\n+      for="*\n+           *"\n+      name="plone.contentmenu.actions"\n+      />\n \n-  <adapter for="* *"\n-           name="plone.contentmenu.display"\n-           factory=".menu.DisplaySubMenuItem"\n-           provides=".interfaces.IContentMenuItem" />\n+  <adapter\n+      factory=".menu.DisplaySubMenuItem"\n+      provides=".interfaces.IContentMenuItem"\n+      for="*\n+           *"\n+      name="plone.contentmenu.display"\n+      />\n \n-  <adapter for="* *"\n-           name="plone.contentmenu.factories"\n-           factory=".menu.FactoriesSubMenuItem"\n-           provides=".interfaces.IContentMenuItem" />\n+  <adapter\n+      factory=".menu.FactoriesSubMenuItem"\n+      provides=".interfaces.IContentMenuItem"\n+      for="*\n+           *"\n+      name="plone.contentmenu.factories"\n+      />\n \n-  <adapter for="* *"\n-           name="plone.contentmenu.workflow"\n-           factory=".menu.WorkflowSubMenuItem"\n-           provides=".interfaces.IContentMenuItem" />\n+  <adapter\n+      factory=".menu.WorkflowSubMenuItem"\n+      provides=".interfaces.IContentMenuItem"\n+      for="*\n+           *"\n+      name="plone.contentmenu.workflow"\n+      />\n \n-  <adapter for="* *"\n-           name="plone.contentmenu.portletmanager"\n-           factory=".menu.PortletManagerSubMenuItem"\n-           provides=".interfaces.IContentMenuItem" />\n+  <adapter\n+      factory=".menu.PortletManagerSubMenuItem"\n+      provides=".interfaces.IContentMenuItem"\n+      for="*\n+           *"\n+      name="plone.contentmenu.portletmanager"\n+      />\n \n   <!-- A content provider showing the menu -->\n \n   <adapter\n+      factory=".view.ContentMenuProvider"\n+      provides="zope.contentprovider.interfaces.IContentProvider"\n       for="*\n            zope.publisher.interfaces.browser.IDefaultBrowserLayer\n            *"\n-      factory=".view.ContentMenuProvider"\n       name="plone.contentmenu"\n-      provides="zope.contentprovider.interfaces.IContentProvider"\n       />\n \n   <!-- The displayviews menu used to register user-visible titles -->\n@@ -109,9 +126,7 @@\n   <browser:menu\n       id="plone_displayviews"\n       title="Zope3 Views used as selectable content views"\n-      description="Menu listing Zope3 views registered for use as dynamic views\n-                   on CMF Content. Currently the only purpose of this menu is\n-                   the registration of user-visible titles for these views"\n+      description="Menu listing Zope3 views registered for use as dynamic views                    on CMF Content. Currently the only purpose of this menu is                    the registration of user-visible titles for these views"\n       class=".displayviewsmenu.DisplayViewsMenu"\n       />\n \ndiff --git a/plone/app/contentmenu/contentmenu.pt b/plone/app/contentmenu/contentmenu.pt\nindex 8194ec8..33165d1 100644\n--- a/plone/app/contentmenu/contentmenu.pt\n+++ b/plone/app/contentmenu/contentmenu.pt\n@@ -1,100 +1,130 @@\n-<tal:contentactionmenus\n-    condition="view/available"\n-    define="menu view/menu;\n-            icons python:context.restrictedTraverse(\'@@iconresolver\');\n-            toolbar_pos view/toolbar_position"\n-    i18n:domain="plone">\n+<tal:contentactionmenus define="\n+                          menu view/menu;\n+                          icons python:context.restrictedTraverse(\'@@iconresolver\');\n+                          toolbar_pos view/toolbar_position;\n+                        "\n+                        condition="view/available"\n+                        i18n:domain="plone"\n+>\n   <tal:menus repeat="menuItem menu">\n-    <tal:def define="submenu menuItem/submenu;\n-                     identifier menuItem/extra/id">\n-    <li id="${menuItem/extra/id}" class="${menuItem/extra/li_class|nothing} ${python:\'dropend\' if (submenu and toolbar_pos == \'side\') else \'\'}">\n+    <tal:def define="\n+               submenu menuItem/submenu;\n+               identifier menuItem/extra/id;\n+             ">\n+      <li class="${menuItem/extra/li_class|nothing} ${python:\'dropend\' if (submenu and toolbar_pos == \'side\') else \'\'}"\n+          id="${menuItem/extra/id}"\n+      >\n \n-      <a href="#"\n-          i18n:attributes="title;"\n-          tal:attributes="href python:menuItem[\'action\'] or \'javascript:void(0)\';\n-                          style python:\'cursor: default;; pointer-events: none\' if not menuItem[\'action\'] else None;\n-                          title menuItem/description;"\n-          tal:define="state_class menuItem/extra/class | nothing;\n-                      state_class python:\'label-%s\' % state_class if state_class else \'\'"\n-          class="${python:\'nav-link dropdown-toggle\' if submenu else \'nav-link\'}"\n-          data-bs-toggle="dropdown"\n-          data-bs-offset="0,0"\n-          aria-expanded="${python:\'false\' if submenu else \'\'}">\n+        <a class="${python:\'nav-link dropdown-toggle\' if submenu else \'nav-link\'}"\n+           aria-expanded="${python:\'false\' if submenu else \'\'}"\n+           href="#"\n+           data-bs-offset="0,0"\n+           data-bs-toggle="dropdown"\n+           tal:define="\n+             state_class menuItem/extra/class | nothing;\n+             state_class python:\'label-%s\' % state_class if state_class else \'\';\n+           "\n+           tal:attributes="\n+             href python:menuItem[\'action\'] or \'javascript:void(0)\';\n+             style python:\'cursor: default;; pointer-events: none\' if not menuItem[\'action\'] else None;\n+             title menuItem/description;\n+           "\n+           i18n:attributes="title;"\n+        >\n \n-        <tal:icon tal:replace="structure python:icons.tag(menuItem.get(\'icon\',\'\') and menuItem[\'icon\'] or \'toolbar-action\', tag_class=\'\')" />\n+          <tal:icon tal:replace="structure python:icons.tag(menuItem.get(\'icon\',\'\') and menuItem[\'icon\'] or \'toolbar-action\', tag_class=\'\')" />\n \n-        <span class="toolbar-label">\n-          <span\n-              i18n:translate=""\n-              tal:replace="menuItem/title">\n+          <span class="toolbar-label">\n+            <span tal:replace="menuItem/title"\n+                  i18n:translate=""\n+            >\n               Menu Title\n-          </span>\n-          <span\n-              i18n:translate=""\n-              class="${state_class}"\n-              tal:content="menuItem/extra/stateTitle | nothing">\n+            </span>\n+            <span class="${state_class}"\n+                  tal:content="menuItem/extra/stateTitle | nothing"\n+                  i18n:translate=""\n+            >\n                 State title\n+            </span>\n           </span>\n-        </span>\n \n-      </a>\n+        </a>\n \n-      <ul class="dropdown-menu" tal:condition="submenu | nothing">\n-        <li>\n-          <h6 class="dropdown-header">${menuItem/title}</h6>\n-        </li>\n-        <li tal:repeat="subMenuItem submenu">\n-          <tal:block define="extra_class subMenuItem/extra/class | string:">\n-          <tal:noaction tal:condition="not:subMenuItem/action" tal:define="is_separator subMenuItem/extra/separator|nothing">\n-            <h6 class="dropdown-header" tal:condition="is_separator">\n-              <tal:title\n-                  content="structure subMenuItem/title"\n-                  i18n:translate="">\n+        <ul class="dropdown-menu"\n+            tal:condition="submenu | nothing"\n+        >\n+          <li>\n+            <h6 class="dropdown-header">${menuItem/title}</h6>\n+          </li>\n+          <li tal:repeat="subMenuItem submenu">\n+            <tal:block define="\n+                         extra_class subMenuItem/extra/class | string:;\n+                       ">\n+              <tal:noaction tal:define="\n+                              is_separator subMenuItem/extra/separator|nothing;\n+                            "\n+                            tal:condition="not:subMenuItem/action"\n+              >\n+                <h6 class="dropdown-header"\n+                    tal:condition="is_separator"\n+                >\n+                  <tal:title content="structure subMenuItem/title"\n+                             i18n:translate=""\n+                  >\n                     Title\n-              </tal:title>\n-            </h6>\n-            <span class="nav-link dropdown-item ${extra_class}" tal:condition="not:is_separator">\n-              <tal:icon tal:replace="structure python:icons.tag(\'check\' if \'active\' in extra_class else (subMenuItem.get(\'icon\') or \'dot\'))" />\n-              <tal:title\n-                  content="structure subMenuItem/title"\n-                  i18n:translate="">\n+                  </tal:title>\n+                </h6>\n+                <span class="nav-link dropdown-item ${extra_class}"\n+                      tal:condition="not:is_separator"\n+                >\n+                  <tal:icon tal:replace="structure python:icons.tag(\'check\' if \'active\' in extra_class else (subMenuItem.get(\'icon\') or \'dot\'))" />\n+                  <tal:title content="structure subMenuItem/title"\n+                             i18n:translate=""\n+                  >\n                     Title\n-              </tal:title>\n-            </span>\n-          </tal:noaction>\n-          <a class="nav-link dropdown-item ${extra_class}"\n-              href="#"\n-              i18n:attributes="title"\n-              tal:attributes="href subMenuItem/action;\n-                              title subMenuItem/description;\n-                              id subMenuItem/extra/id | nothing;\n-                              data-pat-plone-modal subMenuItem/extra/modal | nothing;"\n-              tal:condition="subMenuItem/action">\n+                  </tal:title>\n+                </span>\n+              </tal:noaction>\n+              <a class="nav-link dropdown-item ${extra_class}"\n+                 href="#"\n+                 tal:condition="subMenuItem/action"\n+                 tal:attributes="\n+                   href subMenuItem/action;\n+                   title subMenuItem/description;\n+                   id subMenuItem/extra/id | nothing;\n+                   data-pat-plone-modal subMenuItem/extra/modal | nothing;\n+                 "\n+                 i18n:attributes="title"\n+              >\n \n-              <tal:icon tal:replace="structure python:icons.tag(\'check\' if \'active\' in extra_class else (subMenuItem.get(\'icon\') or \'dot\'))" />\n+                <tal:icon tal:replace="structure python:icons.tag(\'check\' if \'active\' in extra_class else (subMenuItem.get(\'icon\') or \'dot\'))" />\n \n-            <tal:title\n-                content="structure subMenuItem/title"\n-                i18n:translate="">\n+                <tal:title content="structure subMenuItem/title"\n+                           i18n:translate=""\n+                >\n                   Title\n-            </tal:title>\n-            <span class="${extra_class}"\n-                tal:attributes="id subMenuItem/extra/id | nothing"\n-                tal:condition="not:subMenuItem/action">\n-                <tal:icon tal:condition="python:\'active\' in extra_class"\n-                          tal:replace="structure python:icons.tag(\'check\')" />\n-                <span\n-                  i18n:translate=""\n-                  tal:replace="structure subMenuItem/title">\n+                </tal:title>\n+                <span class="${extra_class}"\n+                      tal:condition="not:subMenuItem/action"\n+                      tal:attributes="\n+                        id subMenuItem/extra/id | nothing;\n+                      "\n+                >\n+                  <tal:icon tal:condition="python:\'active\' in extra_class"\n+                            tal:replace="structure python:icons.tag(\'check\')"\n+                  />\n+                  <span tal:replace="structure subMenuItem/title"\n+                        i18n:translate=""\n+                  >\n                     Title\n+                  </span>\n                 </span>\n-            </span>\n-          </a>\n-          </tal:block>\n-        </li>\n-      </ul>\n+              </a>\n+            </tal:block>\n+          </li>\n+        </ul>\n \n-    </li>\n+      </li>\n     </tal:def>\n   </tal:menus>\n </tal:contentactionmenus>\n'

Repository: plone.app.contentmenu


Branch: refs/heads/master
Date: 2023-03-25T21:57:40+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.contentmenu/commit/cfaec6c116965e69a09ebbd269a336d1f403da92

feat: codespell

Files changed:
M README.rst

b'diff --git a/README.rst b/README.rst\nindex 140fe5c..6543339 100644\n--- a/README.rst\n+++ b/README.rst\n@@ -95,7 +95,7 @@ in ``menu.py`` the class looks like so::\n             """Return menu item entries in a TAL-friendly form."""\n             results = []\n \n-            # here a single item is added. do what needed to add several entrys\n+            # here a single item is added. do what needed to add several entries\n             results.append({\n                 \'title\': \'My item 1\',\n                 \'description\': \'An my item\',\n'

Repository: plone.app.contentmenu


Branch: refs/heads/master
Date: 2023-03-25T21:59:11+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.contentmenu/commit/e92d397a339225f4ead2f1922da62986e02ff07a

feat: flake8

Files changed:
M plone/app/contentmenu/tests/test_menu.py

b'diff --git a/plone/app/contentmenu/tests/test_menu.py b/plone/app/contentmenu/tests/test_menu.py\nindex 7e48ab5..0624601 100644\n--- a/plone/app/contentmenu/tests/test_menu.py\n+++ b/plone/app/contentmenu/tests/test_menu.py\n@@ -6,23 +6,18 @@\n from plone.app.contentmenu.interfaces import IWorkflowMenu\n from plone.app.contentmenu.testing import PLONE_APP_CONTENTMENU_DX_INTEGRATION_TESTING\n from plone.app.contenttypes.testing import set_browserlayer\n-from plone.app.testing import applyProfile\n-from plone.app.testing import login\n from plone.app.testing import logout\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n from plone.base.interfaces import INonStructuralFolder\n from plone.base.interfaces import ISelectableConstrainTypes\n from plone.base.utils import get_installer\n-from plone.base.utils import unrestricted_construct_instance\n-from plone.locking.interfaces import ILockable\n from Products.CMFCore.Expression import Expression\n from Products.CMFCore.utils import getToolByName\n from zope.browsermenu.interfaces import IBrowserMenu\n from zope.component import getUtility\n from zope.interface import directlyProvides\n \n-import pkg_resources\n import unittest\n \n \n'

Repository: plone.app.contentmenu


Branch: refs/heads/master
Date: 2023-03-25T22:04:41+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.contentmenu/commit/6e4dfea3325188566503676bcc915d9559c363b9

feat: drop CMFPlone dependency

Files changed:
M plone/app/contentmenu/view.py

b'diff --git a/plone/app/contentmenu/view.py b/plone/app/contentmenu/view.py\nindex c572730..3b21e1f 100644\n--- a/plone/app/contentmenu/view.py\n+++ b/plone/app/contentmenu/view.py\n@@ -1,6 +1,6 @@\n from plone.app.contentmenu.interfaces import IContentMenuView\n+from plone.base.interfaces.controlpanel import ISiteSchema\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces.controlpanel import ISiteSchema\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from zope.browsermenu.interfaces import IBrowserMenu\n from zope.component import getUtility\n'

Repository: plone.app.contentmenu


Branch: refs/heads/master
Date: 2023-03-25T22:11:55+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.contentmenu/commit/c7b209966fab36af4ba7f870afb90b91859a78d8

feat: force p.locking

It is being used, although indirectly with a query adapter call.

If not being imported, then `z3c.dependencychecker` would not
require it.

Files changed:
M plone/app/contentmenu/menu.py

b"diff --git a/plone/app/contentmenu/menu.py b/plone/app/contentmenu/menu.py\nindex 0278b85..380fbb2 100644\n--- a/plone/app/contentmenu/menu.py\n+++ b/plone/app/contentmenu/menu.py\n@@ -38,6 +38,7 @@\n \n import json\n import pkg_resources\n+import plone.locking  # noqa: F401\n \n \n PMF = _  # used for dynamic messages we don't want to extract\n"

Repository: plone.app.contentmenu


Branch: refs/heads/master
Date: 2023-03-25T22:13:36+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.contentmenu/commit/bd8483cce8885b7bc80d5090e58c665ab15c5022

feat: configure z3c.dependencychecker

Files changed:
M pyproject.toml

b'diff --git a/pyproject.toml b/pyproject.toml\nindex 9eb73f3..7b62646 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -60,3 +60,4 @@ Zope = [\n   \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n ]\n python-dateutil = [\'dateutil\']\n+ignore-packages = ["Products.CMFPlacefulWorkflow"]\n'

Repository: plone.app.contentmenu


Branch: refs/heads/master
Date: 2023-03-25T22:14:09+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.contentmenu/commit/a9a12b6603a8412c6a9fc5f9fe9d85e79251b175

feat: declare dependencies

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex e44faa4..5d4d25c 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -39,7 +39,7 @@\n     extras_require=dict(\n         test=[\n             "plone.app.testing",\n-            "plone.app.contenttypes",\n+            "plone.app.contenttypes[test]",\n         ]\n     ),\n     install_requires=[\n@@ -49,5 +49,9 @@\n         "plone.memoize",\n         "plone.app.content >= 2.0",\n         "plone.protect >= 3.0.0",\n+        "plone.portlets",\n+        "plone.registry",\n+        "zope.browsermenu",\n+        "zope.contentprovider",\n     ],\n )\n'

Repository: plone.app.contentmenu


Branch: refs/heads/master
Date: 2023-03-26T10:58:21+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.contentmenu/commit/b5e5ddfe84cb48f1a7d2de81020ad00a2dd78fcc

Merge pull request #45 from plone/config-with-default-template-53f171c6

Config with default template

Files changed:
A .editorconfig
A .meta.toml
A .pre-commit-config.yaml
A news/47959565.internal
A tox.ini
M README.rst
M plone/app/contentmenu/configure.zcml
M plone/app/contentmenu/contentmenu.pt
M plone/app/contentmenu/displayviewsmenu.py
M plone/app/contentmenu/menu.py
M plone/app/contentmenu/testing.py
M plone/app/contentmenu/tests/test_menu.py
M plone/app/contentmenu/view.py
M pyproject.toml
M setup.cfg
M setup.py

b'diff --git a/.editorconfig b/.editorconfig\nnew file mode 100644\nindex 0000000..b4158b8\n--- /dev/null\n+++ b/.editorconfig\n@@ -0,0 +1,39 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+#\n+# EditorConfig Configuration file, for more details see:\n+# http://EditorConfig.org\n+# EditorConfig is a convention description, that could be interpreted\n+# by multiple editors to enforce common coding conventions for specific\n+# file types\n+\n+# top-most EditorConfig file:\n+# Will ignore other EditorConfig files in Home directory or upper tree level.\n+root = true\n+\n+\n+[*]  # For All Files\n+# Unix-style newlines with a newline ending every file\n+end_of_line = lf\n+insert_final_newline = true\n+trim_trailing_whitespace = true\n+# Set default charset\n+charset = utf-8\n+# Indent style default\n+indent_style = space\n+# Max Line Length - a hard line wrap, should be disabled\n+max_line_length = off\n+\n+[*.{py,cfg,ini}]\n+# 4 space indentation\n+indent_size = 4\n+\n+[*.{yml,zpt,pt,dtml,zcml}]\n+# 2 space indentation\n+indent_size = 2\n+\n+[{Makefile,.gitmodules}]\n+# Tab indentation (no size specified, but view as 4 spaces)\n+indent_style = tab\n+indent_size = unset\n+tab_width = unset\ndiff --git a/.meta.toml b/.meta.toml\nnew file mode 100644\nindex 0000000..07dde25\n--- /dev/null\n+++ b/.meta.toml\n@@ -0,0 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[meta]\n+template = "default"\n+commit-id = "47959565"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nnew file mode 100644\nindex 0000000..582f8ac\n--- /dev/null\n+++ b/.pre-commit-config.yaml\n@@ -0,0 +1,42 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+ci:\n+    autofix_prs: false\n+    autoupdate_schedule: monthly\n+\n+repos:\n+-   repo: https://github.com/asottile/pyupgrade\n+    rev: v3.3.1\n+    hooks:\n+    -   id: pyupgrade\n+        args: [--py38-plus]\n+-   repo: https://github.com/pycqa/isort\n+    rev: 5.12.0\n+    hooks:\n+    -   id: isort\n+-   repo: https://github.com/psf/black\n+    rev: 23.1.0\n+    hooks:\n+    -   id: black\n+-   repo: https://github.com/collective/zpretty\n+    rev: 3.0.2\n+    hooks:\n+    -   id: zpretty\n+-   repo: https://github.com/PyCQA/flake8\n+    rev: 6.0.0\n+    hooks:\n+    -   id: flake8\n+-   repo: https://github.com/codespell-project/codespell\n+    rev: v2.2.2\n+    hooks:\n+    -   id: codespell\n+        additional_dependencies:\n+          - tomli\n+-   repo: https://github.com/mgedmin/check-manifest\n+    rev: "0.49"\n+    hooks:\n+    -   id: check-manifest\n+-   repo: https://github.com/regebro/pyroma\n+    rev: "4.2"\n+    hooks:\n+    -   id: pyroma\ndiff --git a/README.rst b/README.rst\nindex 140fe5c..6543339 100644\n--- a/README.rst\n+++ b/README.rst\n@@ -95,7 +95,7 @@ in ``menu.py`` the class looks like so::\n             """Return menu item entries in a TAL-friendly form."""\n             results = []\n \n-            # here a single item is added. do what needed to add several entrys\n+            # here a single item is added. do what needed to add several entries\n             results.append({\n                 \'title\': \'My item 1\',\n                 \'description\': \'An my item\',\ndiff --git a/news/47959565.internal b/news/47959565.internal\nnew file mode 100644\nindex 0000000..c08f539\n--- /dev/null\n+++ b/news/47959565.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/plone/app/contentmenu/configure.zcml b/plone/app/contentmenu/configure.zcml\nindex fabb33a..36548b3 100644\n--- a/plone/app/contentmenu/configure.zcml\n+++ b/plone/app/contentmenu/configure.zcml\n@@ -1,46 +1,48 @@\n-<configure xmlns="http://namespaces.zope.org/zope"\n-           xmlns:browser="http://namespaces.zope.org/browser"\n-           xmlns:five="http://namespaces.zope.org/five"\n-           i18n_domain="plone">\n+<configure\n+    xmlns="http://namespaces.zope.org/zope"\n+    xmlns:browser="http://namespaces.zope.org/browser"\n+    xmlns:five="http://namespaces.zope.org/five"\n+    i18n_domain="plone"\n+    >\n \n   <!-- Top level menu -->\n   <browser:menu\n-    id="plone_contentmenu"\n-    title="Content menu - contains contextual actions related to the content"\n-    interface=".interfaces.IContentMenuItem"\n-    />\n+      id="plone_contentmenu"\n+      title="Content menu - contains contextual actions related to the content"\n+      interface=".interfaces.IContentMenuItem"\n+      />\n \n   <!-- Sub-menus -->\n \n   <browser:menu\n-    id="plone_contentmenu_actions"\n-    title="The \'actions\' menu - allows the user to execute actions on an object"\n-    class=".menu.ActionsMenu"\n-    />\n+      id="plone_contentmenu_actions"\n+      title="The \'actions\' menu - allows the user to execute actions on an object"\n+      class=".menu.ActionsMenu"\n+      />\n \n   <browser:menu\n-    id="plone_contentmenu_display"\n-    title="The \'display\' menu - allows the user to select the view of an object"\n-    class=".menu.DisplayMenu"\n-    />\n+      id="plone_contentmenu_display"\n+      title="The \'display\' menu - allows the user to select the view of an object"\n+      class=".menu.DisplayMenu"\n+      />\n \n-   <browser:menu\n-    id="plone_contentmenu_factory"\n-    title="The \'add\' menu - allows the user to add new content items in the context"\n-    class=".menu.FactoriesMenu"\n-    />\n+  <browser:menu\n+      id="plone_contentmenu_factory"\n+      title="The \'add\' menu - allows the user to add new content items in the context"\n+      class=".menu.FactoriesMenu"\n+      />\n \n   <browser:menu\n-    id="plone_contentmenu_workflow"\n-    title="The \'workflow\' menu - allows the user to execute workflow transitions"\n-    class=".menu.WorkflowMenu"\n-    />\n+      id="plone_contentmenu_workflow"\n+      title="The \'workflow\' menu - allows the user to execute workflow transitions"\n+      class=".menu.WorkflowMenu"\n+      />\n \n   <browser:menu\n-    id="plone_contentmenu_portletmanager"\n-    title="The \'portlet\' menu - allows the user to manage portlets"\n-    class=".menu.PortletManagerMenu"\n-    />\n+      id="plone_contentmenu_portletmanager"\n+      title="The \'portlet\' menu - allows the user to manage portlets"\n+      class=".menu.PortletManagerMenu"\n+      />\n \n   <!--\n     The menu items in the contentMenu are all sub-menu items. Unfortunately,\n@@ -68,40 +70,55 @@\n       manage portlets menu - order=50\n   -->\n \n-  <adapter for="* *"\n-           name="plone.contentmenu.actions"\n-           factory=".menu.ActionsSubMenuItem"\n-           provides=".interfaces.IContentMenuItem" />\n+  <adapter\n+      factory=".menu.ActionsSubMenuItem"\n+      provides=".interfaces.IContentMenuItem"\n+      for="*\n+           *"\n+      name="plone.contentmenu.actions"\n+      />\n \n-  <adapter for="* *"\n-           name="plone.contentmenu.display"\n-           factory=".menu.DisplaySubMenuItem"\n-           provides=".interfaces.IContentMenuItem" />\n+  <adapter\n+      factory=".menu.DisplaySubMenuItem"\n+      provides=".interfaces.IContentMenuItem"\n+      for="*\n+           *"\n+      name="plone.contentmenu.display"\n+      />\n \n-  <adapter for="* *"\n-           name="plone.contentmenu.factories"\n-           factory=".menu.FactoriesSubMenuItem"\n-           provides=".interfaces.IContentMenuItem" />\n+  <adapter\n+      factory=".menu.FactoriesSubMenuItem"\n+      provides=".interfaces.IContentMenuItem"\n+      for="*\n+           *"\n+      name="plone.contentmenu.factories"\n+      />\n \n-  <adapter for="* *"\n-           name="plone.contentmenu.workflow"\n-           factory=".menu.WorkflowSubMenuItem"\n-           provides=".interfaces.IContentMenuItem" />\n+  <adapter\n+      factory=".menu.WorkflowSubMenuItem"\n+      provides=".interfaces.IContentMenuItem"\n+      for="*\n+           *"\n+      name="plone.contentmenu.workflow"\n+      />\n \n-  <adapter for="* *"\n-           name="plone.contentmenu.portletmanager"\n-           factory=".menu.PortletManagerSubMenuItem"\n-           provides=".interfaces.IContentMenuItem" />\n+  <adapter\n+      factory=".menu.PortletManagerSubMenuItem"\n+      provides=".interfaces.IContentMenuItem"\n+      for="*\n+           *"\n+      name="plone.contentmenu.portletmanager"\n+      />\n \n   <!-- A content provider showing the menu -->\n \n   <adapter\n+      factory=".view.ContentMenuProvider"\n+      provides="zope.contentprovider.interfaces.IContentProvider"\n       for="*\n            zope.publisher.interfaces.browser.IDefaultBrowserLayer\n            *"\n-      factory=".view.ContentMenuProvider"\n       name="plone.contentmenu"\n-      provides="zope.contentprovider.interfaces.IContentProvider"\n       />\n \n   <!-- The displayviews menu used to register user-visible titles -->\n@@ -109,9 +126,7 @@\n   <browser:menu\n       id="plone_displayviews"\n       title="Zope3 Views used as selectable content views"\n-      description="Menu listing Zope3 views registered for use as dynamic views\n-                   on CMF Content. Currently the only purpose of this menu is\n-                   the registration of user-visible titles for these views"\n+      description="Menu listing Zope3 views registered for use as dynamic views                    on CMF Content. Currently the only purpose of this menu is                    the registration of user-visible titles for these views"\n       class=".displayviewsmenu.DisplayViewsMenu"\n       />\n \ndiff --git a/plone/app/contentmenu/contentmenu.pt b/plone/app/contentmenu/contentmenu.pt\nindex 8194ec8..33165d1 100644\n--- a/plone/app/contentmenu/contentmenu.pt\n+++ b/plone/app/contentmenu/contentmenu.pt\n@@ -1,100 +1,130 @@\n-<tal:contentactionmenus\n-    condition="view/available"\n-    define="menu view/menu;\n-            icons python:context.restrictedTraverse(\'@@iconresolver\');\n-            toolbar_pos view/toolbar_position"\n-    i18n:domain="plone">\n+<tal:contentactionmenus define="\n+                          menu view/menu;\n+                          icons python:context.restrictedTraverse(\'@@iconresolver\');\n+                          toolbar_pos view/toolbar_position;\n+                        "\n+                        condition="view/available"\n+                        i18n:domain="plone"\n+>\n   <tal:menus repeat="menuItem menu">\n-    <tal:def define="submenu menuItem/submenu;\n-                     identifier menuItem/extra/id">\n-    <li id="${menuItem/extra/id}" class="${menuItem/extra/li_class|nothing} ${python:\'dropend\' if (submenu and toolbar_pos == \'side\') else \'\'}">\n+    <tal:def define="\n+               submenu menuItem/submenu;\n+               identifier menuItem/extra/id;\n+             ">\n+      <li class="${menuItem/extra/li_class|nothing} ${python:\'dropend\' if (submenu and toolbar_pos == \'side\') else \'\'}"\n+          id="${menuItem/extra/id}"\n+      >\n \n-      <a href="#"\n-          i18n:attributes="title;"\n-          tal:attributes="href python:menuItem[\'action\'] or \'javascript:void(0)\';\n-                          style python:\'cursor: default;; pointer-events: none\' if not menuItem[\'action\'] else None;\n-                          title menuItem/description;"\n-          tal:define="state_class menuItem/extra/class | nothing;\n-                      state_class python:\'label-%s\' % state_class if state_class else \'\'"\n-          class="${python:\'nav-link dropdown-toggle\' if submenu else \'nav-link\'}"\n-          data-bs-toggle="dropdown"\n-          data-bs-offset="0,0"\n-          aria-expanded="${python:\'false\' if submenu else \'\'}">\n+        <a class="${python:\'nav-link dropdown-toggle\' if submenu else \'nav-link\'}"\n+           aria-expanded="${python:\'false\' if submenu else \'\'}"\n+           href="#"\n+           data-bs-offset="0,0"\n+           data-bs-toggle="dropdown"\n+           tal:define="\n+             state_class menuItem/extra/class | nothing;\n+             state_class python:\'label-%s\' % state_class if state_class else \'\';\n+           "\n+           tal:attributes="\n+             href python:menuItem[\'action\'] or \'javascript:void(0)\';\n+             style python:\'cursor: default;; pointer-events: none\' if not menuItem[\'action\'] else None;\n+             title menuItem/description;\n+           "\n+           i18n:attributes="title;"\n+        >\n \n-        <tal:icon tal:replace="structure python:icons.tag(menuItem.get(\'icon\',\'\') and menuItem[\'icon\'] or \'toolbar-action\', tag_class=\'\')" />\n+          <tal:icon tal:replace="structure python:icons.tag(menuItem.get(\'icon\',\'\') and menuItem[\'icon\'] or \'toolbar-action\', tag_class=\'\')" />\n \n-        <span class="toolbar-label">\n-          <span\n-              i18n:translate=""\n-              tal:replace="menuItem/title">\n+          <span class="toolbar-label">\n+            <span tal:replace="menuItem/title"\n+                  i18n:translate=""\n+            >\n               Menu Title\n-          </span>\n-          <span\n-              i18n:translate=""\n-              class="${state_class}"\n-              tal:content="menuItem/extra/stateTitle | nothing">\n+            </span>\n+            <span class="${state_class}"\n+                  tal:content="menuItem/extra/stateTitle | nothing"\n+                  i18n:translate=""\n+            >\n                 State title\n+            </span>\n           </span>\n-        </span>\n \n-      </a>\n+        </a>\n \n-      <ul class="dropdown-menu" tal:condition="submenu | nothing">\n-        <li>\n-          <h6 class="dropdown-header">${menuItem/title}</h6>\n-        </li>\n-        <li tal:repeat="subMenuItem submenu">\n-          <tal:block define="extra_class subMenuItem/extra/class | string:">\n-          <tal:noaction tal:condition="not:subMenuItem/action" tal:define="is_separator subMenuItem/extra/separator|nothing">\n-            <h6 class="dropdown-header" tal:condition="is_separator">\n-              <tal:title\n-                  content="structure subMenuItem/title"\n-                  i18n:translate="">\n+        <ul class="dropdown-menu"\n+            tal:condition="submenu | nothing"\n+        >\n+          <li>\n+            <h6 class="dropdown-header">${menuItem/title}</h6>\n+          </li>\n+          <li tal:repeat="subMenuItem submenu">\n+            <tal:block define="\n+                         extra_class subMenuItem/extra/class | string:;\n+                       ">\n+              <tal:noaction tal:define="\n+                              is_separator subMenuItem/extra/separator|nothing;\n+                            "\n+                            tal:condition="not:subMenuItem/action"\n+              >\n+                <h6 class="dropdown-header"\n+                    tal:condition="is_separator"\n+                >\n+                  <tal:title content="structure subMenuItem/title"\n+                             i18n:translate=""\n+                  >\n                     Title\n-              </tal:title>\n-            </h6>\n-            <span class="nav-link dropdown-item ${extra_class}" tal:condition="not:is_separator">\n-              <tal:icon tal:replace="structure python:icons.tag(\'check\' if \'active\' in extra_class else (subMenuItem.get(\'icon\') or \'dot\'))" />\n-              <tal:title\n-                  content="structure subMenuItem/title"\n-                  i18n:translate="">\n+                  </tal:title>\n+                </h6>\n+                <span class="nav-link dropdown-item ${extra_class}"\n+                      tal:condition="not:is_separator"\n+                >\n+                  <tal:icon tal:replace="structure python:icons.tag(\'check\' if \'active\' in extra_class else (subMenuItem.get(\'icon\') or \'dot\'))" />\n+                  <tal:title content="structure subMenuItem/title"\n+                             i18n:translate=""\n+                  >\n                     Title\n-              </tal:title>\n-            </span>\n-          </tal:noaction>\n-          <a class="nav-link dropdown-item ${extra_class}"\n-              href="#"\n-              i18n:attributes="title"\n-              tal:attributes="href subMenuItem/action;\n-                              title subMenuItem/description;\n-                              id subMenuItem/extra/id | nothing;\n-                              data-pat-plone-modal subMenuItem/extra/modal | nothing;"\n-              tal:condition="subMenuItem/action">\n+                  </tal:title>\n+                </span>\n+              </tal:noaction>\n+              <a class="nav-link dropdown-item ${extra_class}"\n+                 href="#"\n+                 tal:condition="subMenuItem/action"\n+                 tal:attributes="\n+                   href subMenuItem/action;\n+                   title subMenuItem/description;\n+                   id subMenuItem/extra/id | nothing;\n+                   data-pat-plone-modal subMenuItem/extra/modal | nothing;\n+                 "\n+                 i18n:attributes="title"\n+              >\n \n-              <tal:icon tal:replace="structure python:icons.tag(\'check\' if \'active\' in extra_class else (subMenuItem.get(\'icon\') or \'dot\'))" />\n+                <tal:icon tal:replace="structure python:icons.tag(\'check\' if \'active\' in extra_class else (subMenuItem.get(\'icon\') or \'dot\'))" />\n \n-            <tal:title\n-                content="structure subMenuItem/title"\n-                i18n:translate="">\n+                <tal:title content="structure subMenuItem/title"\n+                           i18n:translate=""\n+                >\n                   Title\n-            </tal:title>\n-            <span class="${extra_class}"\n-                tal:attributes="id subMenuItem/extra/id | nothing"\n-                tal:condition="not:subMenuItem/action">\n-                <tal:icon tal:condition="python:\'active\' in extra_class"\n-                          tal:replace="structure python:icons.tag(\'check\')" />\n-                <span\n-                  i18n:translate=""\n-                  tal:replace="structure subMenuItem/title">\n+                </tal:title>\n+                <span class="${extra_class}"\n+                      tal:condition="not:subMenuItem/action"\n+                      tal:attributes="\n+                        id subMenuItem/extra/id | nothing;\n+                      "\n+                >\n+                  <tal:icon tal:condition="python:\'active\' in extra_class"\n+                            tal:replace="structure python:icons.tag(\'check\')"\n+                  />\n+                  <span tal:replace="structure subMenuItem/title"\n+                        i18n:translate=""\n+                  >\n                     Title\n+                  </span>\n                 </span>\n-            </span>\n-          </a>\n-          </tal:block>\n-        </li>\n-      </ul>\n+              </a>\n+            </tal:block>\n+          </li>\n+        </ul>\n \n-    </li>\n+      </li>\n     </tal:def>\n   </tal:menus>\n </tal:contentactionmenus>\ndiff --git a/plone/app/contentmenu/displayviewsmenu.py b/plone/app/contentmenu/displayviewsmenu.py\nindex bdce107..c0d25ac 100644\n--- a/plone/app/contentmenu/displayviewsmenu.py\n+++ b/plone/app/contentmenu/displayviewsmenu.py\n@@ -14,15 +14,11 @@ def getMenuItemByAction(self, context, request, action):\n         if action.startswith("++view++"):\n             action = action[8:]\n \n-        for name, item in getAdapters(\n-            (context, request), self.getMenuItemType()\n-        ):\n+        for name, item in getAdapters((context, request), self.getMenuItemType()):\n             item_action = item.action\n             # Normalize menu item action; never uses ++view++\n             if item_action.startswith("@@"):\n                 item_action = item_action[2:]\n \n-            if item_action == action and checkPermission(\n-                item.permission, context\n-            ):\n+            if item_action == action and checkPermission(item.permission, context):\n                 return item\ndiff --git a/plone/app/contentmenu/menu.py b/plone/app/contentmenu/menu.py\nindex 681c023..380fbb2 100644\n--- a/plone/app/contentmenu/menu.py\n+++ b/plone/app/contentmenu/menu.py\n@@ -36,8 +36,9 @@\n from zope.component import queryMultiAdapter\n from zope.interface import implementer\n \n-import pkg_resources\n import json\n+import pkg_resources\n+import plone.locking  # noqa: F401\n \n \n PMF = _  # used for dynamic messages we don\'t want to extract\n@@ -51,7 +52,6 @@\n \n @implementer(IActionsSubMenuItem)\n class ActionsSubMenuItem(BrowserSubMenuItem):\n-\n     title = _("label_actions_menu", default="Actions")\n     description = _(\n         "title_actions_menu", default="Actions for the current content item"\n@@ -131,7 +131,6 @@ def getMenuItems(self, context, request):\n \n @implementer(IDisplaySubMenuItem)\n class DisplaySubMenuItem(BrowserSubMenuItem):\n-\n     title = _("label_choose_template", default="Display")\n     submenuId = "plone_contentmenu_display"\n     icon = "toolbar-action/display"\n@@ -469,11 +468,9 @@ def getMenuItems(self, obj, request):\n                                     "id": "contextSetDefaultPage",\n                                     "separator": None,\n                                     "class": "pat-plone-modal",\n-                                    "modal": json.dumps({\n-                                        "actionOptions": {\n-                                            "redirectOnResponse": True,\n-                                        },\n-                                    }),\n+                                    "modal": json.dumps(\n+                                        {"actionOptions": {"redirectOnResponse": True}}\n+                                    ),\n                                 },\n                                 "submenu": None,\n                             }\n@@ -534,11 +531,9 @@ def getMenuItems(self, obj, request):\n                                     "id": "contextChangeDefaultPage",\n                                     "separator": None,\n                                     "class": "pat-plone-modal",\n-                                    "modal": json.dumps({\n-                                        "actionOptions": {\n-                                            "redirectOnResponse": True,\n-                                        },\n-                                    }),\n+                                    "modal": json.dumps(\n+                                        {"actionOptions": {"redirectOnResponse": True}}\n+                                    ),\n                                 },\n                                 "submenu": None,\n                             }\n@@ -549,7 +544,6 @@ def getMenuItems(self, obj, request):\n \n @implementer(IFactoriesSubMenuItem)\n class FactoriesSubMenuItem(BrowserSubMenuItem):\n-\n     title = _("label_add_new_item", default="Add new\\u2026")\n     submenuId = "plone_contentmenu_factory"\n     icon = "toolbar-action/factories"\n@@ -736,7 +730,6 @@ def _contentCanBeAdded(self, addContext, request):\n \n @implementer(IWorkflowSubMenuItem)\n class WorkflowSubMenuItem(BrowserSubMenuItem):\n-\n     MANAGE_SETTINGS_PERMISSION = "Manage portal"\n \n     title = _("label_state", default="State:")\n@@ -810,7 +803,6 @@ def _currentStateTitle(self):\n \n @implementer(IWorkflowMenu)\n class WorkflowMenu(BrowserMenu):\n-\n     # BBB: These actions (url\'s) existed in old workflow definitions\n     # but were never used. The scripts they reference don\'t exist in\n     # a standard installation. We allow the menu to fail gracefully\n@@ -927,7 +919,6 @@ def getMenuItems(self, context, request):\n \n @implementer(IPortletManagerSubMenuItem)\n class PortletManagerSubMenuItem(BrowserSubMenuItem):\n-\n     MANAGE_SETTINGS_PERMISSION = "Portlets: Manage portlets"\n \n     title = _("manage_portlets_link", default="Manage portlets")\n@@ -1025,7 +1016,7 @@ def getMenuItems(self, context, request):\n                 ),\n                 "description": manager_name,\n                 "action": addTokenToUrl(\n-                    "{}/@@topbar-manage-portlets/{}".format(current_url, manager_name),\n+                    f"{current_url}/@@topbar-manage-portlets/{manager_name}",\n                     request,\n                 ),\n                 "selected": False,\ndiff --git a/plone/app/contentmenu/testing.py b/plone/app/contentmenu/testing.py\nindex 4887140..b57fc4b 100644\n--- a/plone/app/contentmenu/testing.py\n+++ b/plone/app/contentmenu/testing.py\n@@ -7,7 +7,6 @@\n \n \n class PloneAppContentmenu(PloneSandboxLayer):\n-\n     defaultBases = (PLONE_FIXTURE,)\n \n     def setUpZope(self, app, configurationContext):\ndiff --git a/plone/app/contentmenu/tests/test_menu.py b/plone/app/contentmenu/tests/test_menu.py\nindex e58bd56..0624601 100644\n--- a/plone/app/contentmenu/tests/test_menu.py\n+++ b/plone/app/contentmenu/tests/test_menu.py\n@@ -6,23 +6,18 @@\n from plone.app.contentmenu.interfaces import IWorkflowMenu\n from plone.app.contentmenu.testing import PLONE_APP_CONTENTMENU_DX_INTEGRATION_TESTING\n from plone.app.contenttypes.testing import set_browserlayer\n-from plone.app.testing import applyProfile\n-from plone.app.testing import login\n from plone.app.testing import logout\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n from plone.base.interfaces import INonStructuralFolder\n from plone.base.interfaces import ISelectableConstrainTypes\n from plone.base.utils import get_installer\n-from plone.base.utils import unrestricted_construct_instance\n-from plone.locking.interfaces import ILockable\n from Products.CMFCore.Expression import Expression\n from Products.CMFCore.utils import getToolByName\n from zope.browsermenu.interfaces import IBrowserMenu\n from zope.component import getUtility\n from zope.interface import directlyProvides\n \n-import pkg_resources\n import unittest\n \n \n@@ -43,7 +38,6 @@ def __init__(self, id=None, title=None, **kw):\n \n \n class TestActionsMenu(unittest.TestCase):\n-\n     layer = PLONE_APP_CONTENTMENU_DX_INTEGRATION_TESTING\n \n     def setUp(self):\ndiff --git a/plone/app/contentmenu/view.py b/plone/app/contentmenu/view.py\nindex c572730..3b21e1f 100644\n--- a/plone/app/contentmenu/view.py\n+++ b/plone/app/contentmenu/view.py\n@@ -1,6 +1,6 @@\n from plone.app.contentmenu.interfaces import IContentMenuView\n+from plone.base.interfaces.controlpanel import ISiteSchema\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces.controlpanel import ISiteSchema\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from zope.browsermenu.interfaces import IBrowserMenu\n from zope.component import getUtility\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 05b615d..7b62646 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,3 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [tool.towncrier]\n filename = "CHANGES.rst"\n directory = "news/"\n@@ -18,3 +20,44 @@ showcontent = true\n directory = "bugfix"\n name = "Bug fixes:"\n showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "internal"\n+name = "Internal:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "documentation"\n+name = "Documentation:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "tests"\n+name = "Tests"\n+showcontent = true\n+\n+[tool.isort]\n+profile = "plone"\n+\n+[tool.black]\n+target-version = ["py38"]\n+\n+[tool.dependencychecker]\n+Zope = [\n+  # Zope own provided namespaces\n+  \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n+  \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n+  \'Zope2\', \'webdav\', \'zmi\',\n+  # Zope dependencies\n+  \'Acquisition\', \'DateTime\', \'transaction\', \'zExceptions\', \'ZODB\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.deferredimport\', \'zope.event\',\n+  \'zope.exceptions\', \'zope.globalrequest\', \'zope.i18n\', \'zope.i18nmessageid\',\n+  \'zope.interface\', \'zope.lifecycleevent\', \'zope.location\', \'zope.publisher\',\n+  \'zope.schema\', \'zope.security\', \'zope.site\', \'zope.traversing\', \'AccessControl\',\n+]\n+\'plone.base\' = [\n+  \'AccessControl\', \'Products.BTreeFolder2\', \'Products.CMFCore\',\n+  \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n+]\n+python-dateutil = [\'dateutil\']\n+ignore-packages = ["Products.CMFPlacefulWorkflow"]\ndiff --git a/setup.cfg b/setup.cfg\nindex b4f94a2..0da8f8f 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -1,17 +1,23 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[bdist_wheel]\n+universal = 0\n+\n+[flake8]\n+doctests = 1\n+ignore =\n+    # black takes care of line length\n+    E501,\n+    # black takes care of where to break lines\n+    W503,\n+    # black takes care of spaces within slicing (list[:])\n+    E203,\n+    # black takes care of spaces after commas\n+    E231,\n+\n [check-manifest]\n ignore =\n-    *.cfg\n-    .coveragerc\n     .editorconfig\n-    .gitattributes\n-    bootstrap-buildout.py\n-\n-[isort]\n-# black compatible Plone isort rules:\n-profile = black\n-force_alphabetical_sort = True\n-force_single_line = True\n-lines_after_imports = 2\n-\n-[bdist_wheel]\n-universal = 0\n+    .meta.toml\n+    .pre-commit-config.yaml\n+    tox.ini\ndiff --git a/setup.py b/setup.py\nindex e44faa4..5d4d25c 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -39,7 +39,7 @@\n     extras_require=dict(\n         test=[\n             "plone.app.testing",\n-            "plone.app.contenttypes",\n+            "plone.app.contenttypes[test]",\n         ]\n     ),\n     install_requires=[\n@@ -49,5 +49,9 @@\n         "plone.memoize",\n         "plone.app.content >= 2.0",\n         "plone.protect >= 3.0.0",\n+        "plone.portlets",\n+        "plone.registry",\n+        "zope.browsermenu",\n+        "zope.contentprovider",\n     ],\n )\ndiff --git a/tox.ini b/tox.ini\nnew file mode 100644\nindex 0000000..2821883\n--- /dev/null\n+++ b/tox.ini\n@@ -0,0 +1,53 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[tox]\n+# We need 4.4.0 for constrain_package_deps.\n+min_version = 4.4.0\n+envlist =\n+    format\n+    lint\n+    test\n+\n+[testenv]\n+allowlist_externals =\n+    sh\n+\n+[testenv:format]\n+description = automatically reformat code\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a pyupgrade\n+    pre-commit run -a isort\n+    pre-commit run -a black\n+    pre-commit run -a zpretty\n+\n+[testenv:lint]\n+description = run linters that will help improve the code style\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a\n+\n+[testenv:dependencies]\n+description = check if the package defines all its dependencies and generate a graph out of them\n+deps =\n+    z3c.dependencychecker==2.11\n+    pipdeptree==2.5.1\n+    graphviz  # optional dependency of pipdeptree\n+commands =\n+    dependencychecker\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+\n+[testenv:test]\n+usedevelop = true\n+constrain_package_deps = true\n+deps =\n+    zope.testrunner\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    zope-testrunner --test-path={toxinidir} -s plone.app.contentmenu\n+extras =\n+    test\n'

