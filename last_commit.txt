Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2016-05-24T09:39:33+02:00
Author: Markus Hilbert (iham) <markus.hilbert@iham.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/f563abf29638734bdd4ab7d107033ec6dee7008e

Fixed versioning for File and Image. (#1587)

* Fixed versioning for File and Image.
* Added mock as a test-requirement.

Files changed:
M CHANGES.rst
M Products/CMFPlone/controlpanel/browser/types.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_types.py
M setup.py

diff --git a/CHANGES.rst b/CHANGES.rst
index e4bc583..fb98458 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -30,6 +30,9 @@ New:
 
 Fixes:
 
+- Fixed versioning for File and Image.
+   [iham]
+
 - Removed docstrings from some methods to avoid publishing them.  From
   Products.PloneHotfix20160419.  [maurits]
 
@@ -66,7 +69,7 @@ Fixes:
 
 - Do not hard-code baseUrl in bundle to avoid bad URL when switching domains.
   [ebrehault]
-  
+
 - fix typo and comma splice error in HTML filtering control panel [tkimnguyen]
 
 
diff --git a/Products/CMFPlone/controlpanel/browser/types.py b/Products/CMFPlone/controlpanel/browser/types.py
index 0a76e78..fc73fde 100644
--- a/Products/CMFPlone/controlpanel/browser/types.py
+++ b/Products/CMFPlone/controlpanel/browser/types.py
@@ -94,7 +94,12 @@ def add_versioning_behavior(self, fti):
         behaviors = list(fti.behaviors)
         if self.behavior_name not in behaviors:
             behaviors.append(self.behavior_name)
-            fti.behaviors = behaviors
+        # locking must be turned on for versioning support on the type
+        locking = 'plone.app.lockingbehavior.behaviors.ILocking'
+        if locking not in behaviors:
+            behaviors.append(locking)
+
+        fti.behaviors = behaviors
 
     def remove_versioning_behavior(self, fti):
         if not IDexterityFTI.providedBy(fti):
@@ -102,7 +107,8 @@ def remove_versioning_behavior(self, fti):
         behaviors = list(fti.behaviors)
         if self.behavior_name in behaviors:
             behaviors.remove(self.behavior_name)
-            fti.behaviors = behaviors
+        # TODO: remove locking if it wasn't set in first place
+        fti.behaviors = behaviors
 
     def __call__(self):
         """Perform the update and redirect if necessary, or render the page
diff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_types.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_types.py
index a7721cc..33b75c2 100644
--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_types.py
+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_types.py
@@ -115,9 +115,10 @@ def test_disable_versioning_removes_behavior(self):
         portal_types = self.portal.portal_types
         doc_type = portal_types.Document
         self.assertTrue(
-            'plone.app.versioningbehavior.behaviors.IVersionable' not in doc_type.behaviors)  # noqa
+            'plone.app.versioningbehavior.behaviors.IVersionable'
+            not in doc_type.behaviors)  # noqa
 
-    def test_enable_versioning_behavior(self):
+    def test_enable_versioning_behavior_on_document(self):
         self.browser.open(self.types_url)
         self.browser.getControl(name='type_id').value = ['Document']
         self.browser.getForm(action=self.types_url).submit()
@@ -127,10 +128,40 @@ def test_enable_versioning_behavior(self):
         portal_types = self.portal.portal_types
         doc_type = portal_types.Document
         self.assertTrue(
-            'plone.app.versioningbehavior.behaviors.IVersionable' not in doc_type.behaviors)  # noqa
+            'plone.app.versioningbehavior.behaviors.IVersionable'
+            not in doc_type.behaviors)  # noqa
 
         self.browser.getControl(name='versionpolicy').value = ['manual']
         self.browser.getForm(action=self.types_url).submit()
 
         self.assertTrue(
-            'plone.app.versioningbehavior.behaviors.IVersionable' in doc_type.behaviors)
+            'plone.app.versioningbehavior.behaviors.IVersionable'
+            in doc_type.behaviors)
+
+    def test_enable_versioning_behavior_on_file(self):
+        self.browser.open(self.types_url)
+        self.browser.getControl(name='type_id').value = ['File']
+        self.browser.getForm(action=self.types_url).submit()
+        self.browser.getControl(name='versionpolicy').value = ['off']
+        self.browser.getForm(action=self.types_url).submit()
+
+        portal_types = self.portal.portal_types
+        file_type = portal_types.File
+
+        # File has no Versioning and no Locking on default, but needs it
+        self.assertTrue(
+            'plone.app.versioningbehavior.behaviors.IVersionable'
+            not in file_type.behaviors)  # noqa
+        self.assertTrue(
+            'plone.app.lockingbehavior.behaviors.ILocking'
+            not in file_type.behaviors)  # noqa
+
+        self.browser.getControl(name='versionpolicy').value = ['manual']
+        self.browser.getForm(action=self.types_url).submit()
+
+        self.assertTrue(
+            'plone.app.versioningbehavior.behaviors.IVersionable'
+            in file_type.behaviors)
+        self.assertTrue(
+            'plone.app.lockingbehavior.behaviors.ILocking'
+            in file_type.behaviors)
diff --git a/setup.py b/setup.py
index 800db4d..5c1d093 100644
--- a/setup.py
+++ b/setup.py
@@ -35,6 +35,7 @@
         ],
         test=[
             'lxml',
+            'mock',
             'plone.app.robotframework',
             'plone.app.testing',
             'zope.globalrequest',


