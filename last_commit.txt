Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-09-28T15:31:32+02:00
Author: Md Sahil (MdSahil-oss) <85174511+MdSahil-oss@users.noreply.github.com>
Commit: https://github.com/plone/plone.restapi/commit/8a1780182d28b362bd5467b2d927dc712ac740ba

Undo ControlPanel:  Creates an @transactions endpoint by fetching transactions from the database (#1455)

* Added @transactions endpoint

* Added Docs for transactions getting and reverting

* Enhanced

* Added @trasactions endpoint to send a get or patch requests

* Deleted Makefile

* Deleted Make.bat

* Updated as per @robgietema suggestions

* Added test case

* fetched

* Enhanced

* Enhanced

* Enhanced

* Enhanced as per @robgietema suggestion

* Enhanced

* enhanced

* enhanced

* restore changes in querystring_get.resp

* removed all changes that were not from my enhancement

* Enhanced

* Restore changes made through registry_get_list.resp

* enhanced

* Update transactions.md

* Added @transactions endpoint

* Added Docs for transactions getting and reverting

* Enhanced

* Added @trasactions endpoint to send a get or patch requests

* Updated as per @robgietema suggestions

* Deleted Makefile

* Deleted Make.bat

* Added test case

* fetched

* Enhanced

* Enhanced

* Enhanced

* Enhanced as per @robgietema suggestion

* Enhanced

* enhanced

* enhanced

* removed all changes that were not from my enhancement

* restore changes in querystring_get.resp

* Enhanced

* Restore changes made through registry_get_list.resp

* enhanced

* Update transactions.md

* changed transaction.md for testing

* Update transactions.md

* Comment removed from transactions_revert.req

* Changed user_name to username

* Update CHANGES.rst

Co-authored-by: Steve Piercy &lt;web@stevepiercy.com&gt;

* Update docs/source/transactions.md

Co-authored-by: Steve Piercy &lt;web@stevepiercy.com&gt;

* Update docs/source/transactions.md

Co-authored-by: Steve Piercy &lt;web@stevepiercy.com&gt;

* Update docs/source/transactions.md

Co-authored-by: Steve Piercy &lt;web@stevepiercy.com&gt;

* Update docs/source/transactions.md

Co-authored-by: Steve Piercy &lt;web@stevepiercy.com&gt;

* Update docs/source/transactions.md

Co-authored-by: Steve Piercy &lt;web@stevepiercy.com&gt;

* Update docs/source/transactions.md

Co-authored-by: Steve Piercy &lt;web@stevepiercy.com&gt;

* updated docs

* Update docs/source/endpoints/transactions.md

Co-authored-by: Steve Piercy &lt;web@stevepiercy.com&gt;

Co-authored-by: Alin Voinea &lt;contact@avoinea.com&gt;
Co-authored-by: Steve Piercy &lt;web@stevepiercy.com&gt;

Files changed:
A docs/source/endpoints/transactions.md
A src/plone/restapi/services/transactions/__init__.py
A src/plone/restapi/services/transactions/configure.zcml
A src/plone/restapi/services/transactions/get.py
A src/plone/restapi/services/transactions/patch.py
A src/plone/restapi/tests/http-examples/transactions_get.req
A src/plone/restapi/tests/http-examples/transactions_get.resp
A src/plone/restapi/tests/http-examples/transactions_revert.req
A src/plone/restapi/tests/http-examples/transactions_revert.resp
A src/plone/restapi/tests/test_services_transactions.py
M CHANGES.rst
M docs/source/endpoints/index.md
M src/plone/restapi/services/configure.zcml

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex b3cd697d4..d3215fdfc 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -92,6 +92,7 @@ New features:\n \n \n - Add support to search for fullname, email, id on the @users endpoint with "?search=" [ksuess] (#1443)\n+- Add @transactions endpoint to fetch transactions that have been made through the Plone website. [@MdSahil-oss]\n \n \n Bug fixes:\ndiff --git a/docs/source/endpoints/index.md b/docs/source/endpoints/index.md\nindex 5b419d6ed..2787fbc3b 100644\n--- a/docs/source/endpoints/index.md\n+++ b/docs/source/endpoints/index.md\n@@ -43,6 +43,7 @@ roles\n searching\n system\n tiles\n+transactions\n translations\n tusupload\n types\ndiff --git a/docs/source/endpoints/transactions.md b/docs/source/endpoints/transactions.md\nnew file mode 100644\nindex 000000000..965d095fd\n--- /dev/null\n+++ b/docs/source/endpoints/transactions.md\n@@ -0,0 +1,59 @@\n+---\n+myst:\n+  html_meta:\n+    "description": "The @transactions endpoint exposes transactions that have been made through the Plone website."\n+    "property=og:description": "The @transactions endpoint exposes transactions that have been made through the Plone website."\n+    "property=og:title": "Transactions"\n+    "keywords": "Plone, plone.restapi, REST, API, Transactions"\n+---\n+\n+# Transactions\n+\n+The `@transactions` endpoint exposes transactions that have been made through the Plone website.\n+Each change through the Plone website is listed.\n+It also allows to revert transactions so that the Plone website can be reverted to a previous state.\n+\n+\n+## Listing the Transactions of a Content Object\n+\n+Listing versions and transactions of a resource:\n+\n+```{eval-rst}\n+..  http:example:: curl httpie python-requests\n+    :request: ../../../src/plone/restapi/tests/http-examples/transactions_get.req\n+```\n+\n+```{literalinclude} ../../../src/plone/restapi/tests/http-examples/transactions_get.resp\n+:language: http\n+```\n+\n+The following fields are returned:\n+\n+`username`\n+: The person who made the transactions through the website.\n+\n+`time`\n+: The time when the transaction was made through the website.\n+\n+`description`\n+: The description of the transaction with the `path` where the transaction was made in the website.\n+\n+`id`\n+: The transaction ID.\n+\n+`size`\n+: The size of the transaction in bytes.\n+\n+\n+## Reverting a Transaction or a group of Transactions\n+\n+Reverting a single transaction or a group of transactions can be done by sending a `PATCH` request to the `@transactions` endpoint with a list of transaction IDs you want to revert:\n+\n+```{eval-rst}\n+..  http:example:: curl httpie python-requests\n+    :request: ../../../src/plone/restapi/tests/http-examples/transactions_revert.req\n+```\n+\n+```{literalinclude} ../../../src/plone/restapi/tests/http-examples/transactions_revert.resp\n+:language: http\n+```\ndiff --git a/src/plone/restapi/services/configure.zcml b/src/plone/restapi/services/configure.zcml\nindex a90c8093b..ac53d13af 100644\n--- a/src/plone/restapi/services/configure.zcml\n+++ b/src/plone/restapi/services/configure.zcml\n@@ -33,6 +33,7 @@\n   <include package=".search" />\n   <include package=".system" />\n   <include package=".sources" />\n+  <include package=".transactions" />\n   <include package=".types" />\n   <include package=".users" />\n   <include package=".vocabularies" />\ndiff --git a/src/plone/restapi/services/transactions/__init__.py b/src/plone/restapi/services/transactions/__init__.py\nnew file mode 100644\nindex 000000000..e69de29bb\ndiff --git a/src/plone/restapi/services/transactions/configure.zcml b/src/plone/restapi/services/transactions/configure.zcml\nnew file mode 100644\nindex 000000000..1a44d018b\n--- /dev/null\n+++ b/src/plone/restapi/services/transactions/configure.zcml\n@@ -0,0 +1,25 @@\n+<configure\n+    xmlns="http://namespaces.zope.org/zope"\n+    xmlns:plone="http://namespaces.plone.org/plone"\n+    xmlns:zcml="http://namespaces.zope.org/zcml"\n+    >\n+\n+  <include package="Products.CMFEditions" />\n+\n+  <plone:service\n+      method="GET"\n+      factory=".get.TransactionsGet"\n+      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      permission="cmf.ListUndoableChanges"\n+      name="@transactions"\n+      />\n+\n+  <plone:service\n+      method="PATCH"\n+      factory=".patch.TransactionsPatch"\n+      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      permission="zope2.Undo"\n+      name="@transactions"\n+      />\n+\n+</configure>\ndiff --git a/src/plone/restapi/services/transactions/get.py b/src/plone/restapi/services/transactions/get.py\nnew file mode 100644\nindex 000000000..5cddd2b1d\n--- /dev/null\n+++ b/src/plone/restapi/services/transactions/get.py\n@@ -0,0 +1,48 @@\n+import binascii\n+import sys\n+from datetime import datetime as dt\n+from plone.restapi.services import Service\n+\n+\n+class TransactionsGet(Service):\n+    def __init__(self, context, request):\n+        super().__init__(context, request)\n+\n+    def reply(self):\n+        total_num_of_transactions = (\n+            self.context._p_jar.db().undoInfo(0, sys.maxsize).__len__()\n+        )\n+        total_transactions = self.context._p_jar.db().undoInfo(\n+            0, total_num_of_transactions\n+        )\n+\n+        for transaction in total_transactions:\n+            transaction["username"] = transaction["user_name"]\n+            del transaction["user_name"]\n+            transaction["time"] = t = dt.fromtimestamp(\n+                int(transaction["time"])\n+            ).isoformat()\n+            desc = transaction["description"]\n+            tid = transaction["id"]\n+            if desc:\n+                desc = desc.split()\n+                d1 = desc[0]\n+                desc = " ".join(desc[1:])\n+                if len(desc) > 60:\n+                    desc = desc[:56] + " ..."\n+                tid = f"{encode64(tid)} {t} {d1} {desc}"\n+            else:\n+                tid = f"{encode64(tid)} {t}"\n+            transaction["id"] = tid\n+\n+        return total_transactions\n+\n+\n+def encode64(s, b2a=binascii.b2a_base64):\n+    if len(s) < 58:\n+        return b2a(s).decode("ascii")\n+    r = []\n+    a = r.append\n+    for i in range(0, len(s), 57):\n+        a(b2a(s[i : i + 57])[:-1])\n+    return (b"".join(r)).decode("ascii")\ndiff --git a/src/plone/restapi/services/transactions/patch.py b/src/plone/restapi/services/transactions/patch.py\nnew file mode 100644\nindex 000000000..c481e299a\n--- /dev/null\n+++ b/src/plone/restapi/services/transactions/patch.py\n@@ -0,0 +1,42 @@\n+import binascii\n+import transaction\n+from plone.restapi.services import Service\n+from plone.restapi.deserializer import json_body\n+from plone.restapi.serializer.converters import json_compatible\n+from zExceptions import BadRequest\n+\n+\n+class TransactionsPatch(Service):\n+    def reply(self):\n+        body = json_body(self.request)\n+        message = revert(self.context, body["transaction_ids"])\n+        return json_compatible(message)\n+\n+\n+def revert(context, transactions_info=()):\n+    """ """\n+    tids = []\n+    descriptions = []\n+\n+    for tid in transactions_info:\n+        tid = tid.split()\n+        if tid:\n+            tids.append(decode64(tid[0]))\n+            descriptions.append(tid[-1])\n+\n+    if tids:\n+        ts = transaction.get()\n+        ts.note("Undo %s" % " ".join(descriptions))\n+        context._p_jar.db().undoMultiple(tids)\n+        try:\n+            ts.commit()\n+        except Exception:\n+            raise BadRequest({"errors": "Failed in undoing transactions"})\n+\n+    msg = "Transactions have been reverted successfully."\n+    return {"message": msg}\n+\n+\n+def decode64(s, a2b=binascii.a2b_base64):\n+    __traceback_info__ = len(s), repr(s)\n+    return a2b(s + "\\n")\ndiff --git a/src/plone/restapi/tests/http-examples/transactions_get.req b/src/plone/restapi/tests/http-examples/transactions_get.req\nnew file mode 100644\nindex 000000000..0b56814e0\n--- /dev/null\n+++ b/src/plone/restapi/tests/http-examples/transactions_get.req\n@@ -0,0 +1,3 @@\n+GET /plone/@transactions HTTP/1.1\n+Accept: application/json\n+Authorization: Basic YWRtaW46c2VjcmV0\ndiff --git a/src/plone/restapi/tests/http-examples/transactions_get.resp b/src/plone/restapi/tests/http-examples/transactions_get.resp\nnew file mode 100644\nindex 000000000..46e0e4940\n--- /dev/null\n+++ b/src/plone/restapi/tests/http-examples/transactions_get.resp\n@@ -0,0 +1,96 @@\n+HTTP/1.1 200 OK\n+Content-Type: application/json\n+\n+[\n+    {\n+        "description": "/Plone/news/aggregator/POST_application_json_@lock",\n+        "id": "QStrR2EwMVdzM2M9",\n+        "size": 2439,\n+        "time": "2022-06-19T23:49:18",\n+        "username": " admin"\n+    },\n+    {\n+        "description": "/Plone/POST_application_json_@login",\n+        "id": "QStrR1psT2s1aUk9",\n+        "size": 4809,\n+        "time": "2022-06-19T23:44:19",\n+        "username": " admin"\n+    },\n+    {\n+        "description": "/Plone/document_view",\n+        "id": "QStrR0VEY2hva1E9",\n+        "size": 4496,\n+        "time": "2022-06-19T22:18:12",\n+        "username": " admin"\n+    },\n+    {\n+        "description": "/plone-addsite",\n+        "id": "QStrR0VDeG84d0E9",\n+        "size": 2971990,\n+        "time": "2022-06-19T22:18:10",\n+        "username": " admin"\n+    },\n+    {\n+        "description": "/plone-addsite",\n+        "id": "QStrR0R4eUFJWms9",\n+        "size": 3637,\n+        "time": "2022-06-19T22:17:06",\n+        "username": " admin"\n+    },\n+    {\n+        "description": "Added default view for root object",\n+        "id": "QStrR0RRc0M5TjA9",\n+        "size": 2216,\n+        "time": "2022-06-19T22:15:02",\n+        "username": ""\n+    },\n+    {\n+        "description": "Added virtual_hosting",\n+        "id": "QStrR0RRcTVrbFU9",\n+        "size": 1369,\n+        "time": "2022-06-19T22:15:02",\n+        "username": ""\n+    },\n+    {\n+        "description": "Added site error_log at /error_log",\n+        "id": "QStrR0RRcVh4cGs9",\n+        "size": 1130,\n+        "time": "2022-06-19T22:15:02",\n+        "username": ""\n+    },\n+    {\n+        "description": "Added session_data_manager",\n+        "id": "QStrR0RRcDlFaUk9",\n+        "size": 1405,\n+        "time": "2022-06-19T22:15:02",\n+        "username": ""\n+    },\n+    {\n+        "description": "Added browser_id_manager",\n+        "id": "QStrR0RRcFU2KzQ9",\n+        "size": 840,\n+        "time": "2022-06-19T22:15:02",\n+        "username": ""\n+    },\n+    {\n+        "description": "Created initial user",\n+        "id": "QStrR0RRbUkzKzQ9",\n+        "size": 403,\n+        "time": "2022-06-19T22:15:02",\n+        "username": ""\n+    },\n+    {\n+        "description": "",\n+        "id": "QStrR0RRbEVVa1E9",\n+        "size": 717,\n+        "time": "2022-06-19T22:15:02",\n+        "username": ""\n+    },\n+    {\n+        "description": "initial database creation",\n+        "id": "QStrR0ROWlo5YW89",\n+        "size": 154,\n+        "time": "2022-06-19T22:14:50",\n+        "username": ""\n+    }\n+]\ndiff --git a/src/plone/restapi/tests/http-examples/transactions_revert.req b/src/plone/restapi/tests/http-examples/transactions_revert.req\nnew file mode 100644\nindex 000000000..b6c6a6f54\n--- /dev/null\n+++ b/src/plone/restapi/tests/http-examples/transactions_revert.req\n@@ -0,0 +1,8 @@\n+PATCH /plone/@transactions HTTP/1.1\n+Accept: application/json\n+Authorization: Basic YWRtaW46c2VjcmV0\n+Content-Type: application/json\n+\n+{\n+    "transaction_ids": ["QStvcExLS1ZiRlU9"]\n+}\ndiff --git a/src/plone/restapi/tests/http-examples/transactions_revert.resp b/src/plone/restapi/tests/http-examples/transactions_revert.resp\nnew file mode 100644\nindex 000000000..b715c5614\n--- /dev/null\n+++ b/src/plone/restapi/tests/http-examples/transactions_revert.resp\n@@ -0,0 +1,6 @@\n+HTTP/1.1 200 OK\n+Content-Type: application/json\n+\n+{\n+  "message": "Transactions has been reverted successfully."\n+}\ndiff --git a/src/plone/restapi/tests/test_services_transactions.py b/src/plone/restapi/tests/test_services_transactions.py\nnew file mode 100644\nindex 000000000..51c04b249\n--- /dev/null\n+++ b/src/plone/restapi/tests/test_services_transactions.py\n@@ -0,0 +1,50 @@\n+from plone.app.testing import setRoles\n+from plone.app.testing import SITE_OWNER_NAME\n+from plone.app.testing import SITE_OWNER_PASSWORD\n+from plone.app.testing import TEST_USER_ID\n+from plone.restapi.testing import PLONE_RESTAPI_DX_FUNCTIONAL_TESTING\n+from plone.restapi.testing import RelativeSession\n+\n+import transaction\n+import unittest\n+\n+\n+class TestTransactionsEndpoint(unittest.TestCase):\n+    layer = PLONE_RESTAPI_DX_FUNCTIONAL_TESTING\n+\n+    def setUp(self):\n+        self.app = self.layer["app"]\n+        self.portal = self.layer["portal"]\n+        self.portal_url = self.portal.absolute_url()\n+        setRoles(self.portal, TEST_USER_ID, ["Manager"])\n+\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n+        self.api_session.headers.update({"Accept": "application/json"})\n+        self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n+\n+        self.endpoint_url = f"{self.portal_url}/@transactions"\n+\n+        transaction.commit()\n+\n+    def tearDown(self):\n+        self.api_session.close()\n+\n+    def test_get_datastructure(self):\n+        response = self.api_session.get(self.endpoint_url)\n+        data = response.json()\n+\n+        keys = ["description", "id", "size", "time", "username"]\n+\n+        for item in data:\n+            self.assertEqual(set(item), set(keys))\n+\n+    def test_revert(self):\n+        response = self.api_session.patch(\n+            self.endpoint_url, json={"transaction_ids": [""]}\n+        )\n+        self.assertEqual(response.status_code, 200)\n+\n+        self.assertEqual(\n+            response.json(),\n+            {"message": "Transactions have been reverted successfully."},\n+        )\n'

