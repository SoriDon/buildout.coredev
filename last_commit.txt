Repository: Products.PlonePAS


Branch: refs/heads/master
Date: 2023-03-26T11:00:33+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/Products.PlonePAS/commit/e968da965c130fa27db49fff101daeb3466d1000

feat: declare dependencies

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex 4ec8bd25..fa0e2657 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -16,6 +16,7 @@\n     "plone.base",\n     "plone.i18n",\n     "plone.memoize",\n+    "plone.openid",\n     "plone.protect>=2.0.3",\n     "plone.registry",\n     "plone.session",\n'

Repository: Products.PlonePAS


Branch: refs/heads/master
Date: 2023-03-26T11:01:06+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/Products.PlonePAS/commit/3ff48239d7d59d9628abc7f0cb5e6ac779d6376f

cleanup: remove ldapmp patch

Files changed:
M pyproject.toml
D src/Products/PlonePAS/ldapmp.py

b'diff --git a/pyproject.toml b/pyproject.toml\nindex 89471264..5862dbec 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -61,7 +61,7 @@ Zope = [\n ]\n python-dateutil = [\'dateutil\']\n Pillow = [\'PIL\']\n-ignore-packages = [\'Products.LDAPMultiPlugins\', \'plone.openid\']\n+ignore-packages = [\'plone.openid\']\n \n [tool.pylint.\'MESSAGES CONTROL\']\n disable = [\ndiff --git a/src/Products/PlonePAS/ldapmp.py b/src/Products/PlonePAS/ldapmp.py\ndeleted file mode 100644\nindex 1b83ef33..00000000\n--- a/src/Products/PlonePAS/ldapmp.py\n+++ /dev/null\n@@ -1,65 +0,0 @@\n-from Products.PlonePAS.patch import call\n-from Products.PlonePAS.patch import wrap_method\n-from Products.PlonePAS.plugins.group import PloneGroup\n-\n-\n-GROUP_PROPERTY_MAP = {\n-    # target property: (possible key, ...)\n-    "title": (\n-        "name",\n-        "displayName",\n-        "cn",\n-    ),\n-    "description": ("description",),\n-    "email": ("mail",),\n-}\n-\n-KNOWN_ATTRS = set()\n-for attrs in GROUP_PROPERTY_MAP.values():\n-    for attr in attrs:\n-        KNOWN_ATTRS.add(attr)\n-\n-\n-def getPropertiesForUser(self, user, request=None):\n-    """Fulfill PropertiesPlugin requirements"""\n-\n-    if not isinstance(user, PloneGroup):\n-        # It\'s not a PloneGroup, continue as usual\n-        return call(self, "getPropertiesForUser", user=user, request=request)\n-\n-    # We\'ve got a PloneGroup.\n-    # Search for groups instead of users\n-    groups = self.enumerateGroups(id=user.getId(), exact_match=True)\n-    # XXX Should we assert there\'s only one group?\n-    properties = {}\n-    for group in groups:\n-        for pname, attrs in GROUP_PROPERTY_MAP.items():\n-            for attr in attrs:\n-                value = group.get(attr)\n-                if value:\n-                    # Break on first found\n-                    properties[pname] = value\n-                    break\n-\n-    return properties\n-\n-\n-def getGroupsForPrincipal(self, user, request=None, attr=None):\n-    """Fulfill GroupsPlugin requirements, but don\'t return any groups for\n-    groups"""\n-\n-    if not isinstance(user, PloneGroup):\n-        # It\'s not a PloneGroup, continue as usual\n-        return call(self, "getGroupsForPrincipal", user, request=request, attr=attr)\n-\n-    return ()\n-\n-\n-def patch_ldapmp():\n-    from Products.LDAPMultiPlugins.LDAPPluginBase import LDAPPluginBase\n-\n-    wrap_method(LDAPPluginBase, "getPropertiesForUser", getPropertiesForUser)\n-\n-    from Products.LDAPMultiPlugins.LDAPMultiPlugin import LDAPMultiPlugin\n-\n-    wrap_method(LDAPMultiPlugin, "getGroupsForPrincipal", getGroupsForPrincipal)\n'

Repository: Products.PlonePAS


Branch: refs/heads/master
Date: 2023-03-26T11:01:25+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/Products.PlonePAS/commit/f529a53251a448952183e8e9d5815b908d574d34

Add news entry

Files changed:
A news/1.breaking

b'diff --git a/news/1.breaking b/news/1.breaking\nnew file mode 100644\nindex 00000000..620a9d70\n--- /dev/null\n+++ b/news/1.breaking\n@@ -0,0 +1,3 @@\n+Remove `ldapmp` module. It is not being tested in Plone 6.\n+See https://github.com/plone/Products.PlonePAS/pull/71#pullrequestreview-1351349950\n+[gforcada]\n'

Repository: Products.PlonePAS


Branch: refs/heads/master
Date: 2023-03-27T09:20:46+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/Products.PlonePAS/commit/aba63c6b4b143d4229ba211fc9e0786d30440f89

Remove plone.openid

Co-authored-by: Jens W. Klein &lt;jk@kleinundpartner.at&gt;

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex fa0e2657..4ec8bd25 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -16,7 +16,6 @@\n     "plone.base",\n     "plone.i18n",\n     "plone.memoize",\n-    "plone.openid",\n     "plone.protect>=2.0.3",\n     "plone.registry",\n     "plone.session",\n'

Repository: Products.PlonePAS


Branch: refs/heads/master
Date: 2023-03-27T17:49:50+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.PlonePAS/commit/0854c5ea1b296eb4395be327f84b8be68e7d66d9

Merge pull request #72 from plone/drop-ldapmp

Drop ldapmp module

Files changed:
A news/1.breaking
M pyproject.toml
D src/Products/PlonePAS/ldapmp.py

b'diff --git a/news/1.breaking b/news/1.breaking\nnew file mode 100644\nindex 00000000..620a9d70\n--- /dev/null\n+++ b/news/1.breaking\n@@ -0,0 +1,3 @@\n+Remove `ldapmp` module. It is not being tested in Plone 6.\n+See https://github.com/plone/Products.PlonePAS/pull/71#pullrequestreview-1351349950\n+[gforcada]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 89471264..5862dbec 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -61,7 +61,7 @@ Zope = [\n ]\n python-dateutil = [\'dateutil\']\n Pillow = [\'PIL\']\n-ignore-packages = [\'Products.LDAPMultiPlugins\', \'plone.openid\']\n+ignore-packages = [\'plone.openid\']\n \n [tool.pylint.\'MESSAGES CONTROL\']\n disable = [\ndiff --git a/src/Products/PlonePAS/ldapmp.py b/src/Products/PlonePAS/ldapmp.py\ndeleted file mode 100644\nindex 1b83ef33..00000000\n--- a/src/Products/PlonePAS/ldapmp.py\n+++ /dev/null\n@@ -1,65 +0,0 @@\n-from Products.PlonePAS.patch import call\n-from Products.PlonePAS.patch import wrap_method\n-from Products.PlonePAS.plugins.group import PloneGroup\n-\n-\n-GROUP_PROPERTY_MAP = {\n-    # target property: (possible key, ...)\n-    "title": (\n-        "name",\n-        "displayName",\n-        "cn",\n-    ),\n-    "description": ("description",),\n-    "email": ("mail",),\n-}\n-\n-KNOWN_ATTRS = set()\n-for attrs in GROUP_PROPERTY_MAP.values():\n-    for attr in attrs:\n-        KNOWN_ATTRS.add(attr)\n-\n-\n-def getPropertiesForUser(self, user, request=None):\n-    """Fulfill PropertiesPlugin requirements"""\n-\n-    if not isinstance(user, PloneGroup):\n-        # It\'s not a PloneGroup, continue as usual\n-        return call(self, "getPropertiesForUser", user=user, request=request)\n-\n-    # We\'ve got a PloneGroup.\n-    # Search for groups instead of users\n-    groups = self.enumerateGroups(id=user.getId(), exact_match=True)\n-    # XXX Should we assert there\'s only one group?\n-    properties = {}\n-    for group in groups:\n-        for pname, attrs in GROUP_PROPERTY_MAP.items():\n-            for attr in attrs:\n-                value = group.get(attr)\n-                if value:\n-                    # Break on first found\n-                    properties[pname] = value\n-                    break\n-\n-    return properties\n-\n-\n-def getGroupsForPrincipal(self, user, request=None, attr=None):\n-    """Fulfill GroupsPlugin requirements, but don\'t return any groups for\n-    groups"""\n-\n-    if not isinstance(user, PloneGroup):\n-        # It\'s not a PloneGroup, continue as usual\n-        return call(self, "getGroupsForPrincipal", user, request=request, attr=attr)\n-\n-    return ()\n-\n-\n-def patch_ldapmp():\n-    from Products.LDAPMultiPlugins.LDAPPluginBase import LDAPPluginBase\n-\n-    wrap_method(LDAPPluginBase, "getPropertiesForUser", getPropertiesForUser)\n-\n-    from Products.LDAPMultiPlugins.LDAPMultiPlugin import LDAPMultiPlugin\n-\n-    wrap_method(LDAPMultiPlugin, "getGroupsForPrincipal", getGroupsForPrincipal)\n'

