Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2022-03-31T12:23:49+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.dexterity/commit/1c44d318562a92ccdffe4144fbdb599b4dbf2d80

Modeleditor: when there is no model_source yet, show the model_file.

Fixes https://github.com/plone/Products.CMFPlone/issues/3473

Files changed:
A news/3473.bugfix
M plone/app/dexterity/browser/modeleditor.py

b'diff --git a/news/3473.bugfix b/news/3473.bugfix\nnew file mode 100644\nindex 0000000..1cee545\n--- /dev/null\n+++ b/news/3473.bugfix\n@@ -0,0 +1,2 @@\n+Modeleditor: when there is no model_source yet, show the model_file.\n+[maurits]\ndiff --git a/plone/app/dexterity/browser/modeleditor.py b/plone/app/dexterity/browser/modeleditor.py\nindex 0b6ab27..5f8ae9a 100644\n--- a/plone/app/dexterity/browser/modeleditor.py\n+++ b/plone/app/dexterity/browser/modeleditor.py\n@@ -2,6 +2,7 @@\n from AccessControl import Unauthorized\n from lxml import etree\n from plone.app.dexterity import _\n+from plone.supermodel import serializeModel\n from plone.supermodel.parser import SupermodelParseError\n from Products.CMFPlone.utils import safe_bytes\n from Products.CMFPlone.utils import safe_unicode\n@@ -27,7 +28,13 @@ def escaped_model_source(self):\n     @property\n     def model_source(self):\n         # Return modified source from textarea or the original FTI source.\n-        return self.request.form.get("source") or self.context.fti.model_source\n+        source = self.request.form.get("source") or self.context.fti.model_source\n+        if source:\n+            return source\n+\n+        # or serialize the model file\n+        model = self.context.fti.lookupModel()\n+        return serializeModel(model)\n \n     def authorized(self, context, request):\n         authenticator = queryMultiAdapter((context, request), name=u"authenticator")\n'

Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2022-03-31T17:59:30+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.dexterity/commit/b3ad7eef894e43fb43a279f9409e23aa786c9927

Merge pull request #343 from plone/maurits-modeleditor-empty-source

Modeleditor: when there is no model_source yet, show the model_file.

Files changed:
A news/3473.bugfix
M plone/app/dexterity/browser/modeleditor.py

b'diff --git a/news/3473.bugfix b/news/3473.bugfix\nnew file mode 100644\nindex 0000000..1cee545\n--- /dev/null\n+++ b/news/3473.bugfix\n@@ -0,0 +1,2 @@\n+Modeleditor: when there is no model_source yet, show the model_file.\n+[maurits]\ndiff --git a/plone/app/dexterity/browser/modeleditor.py b/plone/app/dexterity/browser/modeleditor.py\nindex 0b6ab27..5f8ae9a 100644\n--- a/plone/app/dexterity/browser/modeleditor.py\n+++ b/plone/app/dexterity/browser/modeleditor.py\n@@ -2,6 +2,7 @@\n from AccessControl import Unauthorized\n from lxml import etree\n from plone.app.dexterity import _\n+from plone.supermodel import serializeModel\n from plone.supermodel.parser import SupermodelParseError\n from Products.CMFPlone.utils import safe_bytes\n from Products.CMFPlone.utils import safe_unicode\n@@ -27,7 +28,13 @@ def escaped_model_source(self):\n     @property\n     def model_source(self):\n         # Return modified source from textarea or the original FTI source.\n-        return self.request.form.get("source") or self.context.fti.model_source\n+        source = self.request.form.get("source") or self.context.fti.model_source\n+        if source:\n+            return source\n+\n+        # or serialize the model file\n+        model = self.context.fti.lookupModel()\n+        return serializeModel(model)\n \n     def authorized(self, context, request):\n         authenticator = queryMultiAdapter((context, request), name=u"authenticator")\n'

