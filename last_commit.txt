Repository: plone.volto


Branch: refs/heads/main
Date: 2021-12-25T17:23:01-08:00
Author: Ross Patterson (rpatterson) <me@rpatterson.net>
Commit: https://github.com/plone/plone.volto/commit/1d4f927dc7a5ddef73799af505e98732a6f8954e

test(settings): Isolation w/ frontend_domain None

Workaround a test fixture isolation issue where the `IVoltoSettings.frontend_domain`
setting has a value of `None` by changing the `plone.volto.patches.construct_url` patch
to properly handle that value.

I found under local development that there were errors in the
`plone.restapi.tests.test_services_users` tests when running the whole suite with `$
./bin/test -s plone.restapi` but not when running only those tests with `$ ./bin/test -s
plone.restapi -m plone.restapi.tests.test_services_users`:

    Failure in test test_add_anon_user_sends_properties_are_saved (plone.restapi.tests.test_services_users.T
    Current directory is /home/rpatterson/src/plone/volto/api/
    estUsersEndpoint)
    Traceback (most recent call last):
      File "/usr/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
        yield
      File "/usr/lib/python3.9/unittest/case.py", line 592, in run
        self._callTestMethod(testMethod)
      File "/usr/lib/python3.9/unittest/case.py", line 550, in _callTestMethod
        method()
      File "/home/rpatterson/src/plone/volto/api/src/plone.restapi/src/plone/restapi/tests/test_services_users.py", line 242, in test_add_anon_user_sends_properties_are_saved
        self.assertEqual(201, response.status_code)
      File "/usr/lib/python3.9/unittest/case.py", line 837, in assertEqual
        assertion_func(first, second, msg=msg)
      File "/usr/lib/python3.9/unittest/case.py", line 830, in _baseAssertEqual
        raise self.failureException(msg)
    AssertionError: 201 != 500

        457/555 (82.3%)

    Failure in test test_add_user_with_sendPasswordRest_sends_email (plone.restapi.tests.test_services_users.TestUsersEndpoint)
    Traceback (most recent call last):
      File "/usr/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
        yield
      File "/usr/lib/python3.9/unittest/case.py", line 592, in run
        self._callTestMethod(testMethod)
      File "/usr/lib/python3.9/unittest/case.py", line 550, in _callTestMethod
        method()
      File "/home/rpatterson/src/plone/volto/api/src/plone.restapi/src/plone/restapi/tests/test_services_users.py", line 204, in test_add_user_with_sendPasswordRest_sends_email
        self.assertEqual(201, response.status_code)
      File "/usr/lib/python3.9/unittest/case.py", line 837, in assertEqual
        assertion_func(first, second, msg=msg)
      File "/usr/lib/python3.9/unittest/case.py", line 830, in _baseAssertEqual
        raise self.failureException(msg)
    AssertionError: 201 != 500

        460/555 (82.9%)

    Failure in test test_anonymous_requires_enable_self_reg (plone.restapi.tests.test_services_users.TestUsersEndpoint)
    Traceback (most recent call last):
      File "/usr/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
        yield
      File "/usr/lib/python3.9/unittest/case.py", line 592, in run
        self._callTestMethod(testMethod)
      File "/usr/lib/python3.9/unittest/case.py", line 550, in _callTestMethod
        method()
      File "/home/rpatterson/src/plone/volto/api/src/plone.restapi/src/plone/restapi/tests/test_services_users.py", line 809, in test_anonymous_requires_enable_self_reg
        self.assertEqual(201, response.status_code)
      File "/usr/lib/python3.9/unittest/case.py", line 837, in assertEqual
        assertion_func(first, second, msg=msg)
      File "/usr/lib/python3.9/unittest/case.py", line 830, in _baseAssertEqual
        raise self.failureException(msg)
    AssertionError: 201 != 500

        464/555 (83.6%)

    Failure in test test_anonymous_without_enable_user_pwd_choice_sends_mail (plone.restapi.tests.test_services_users.TestUsersEndpoint)
    Traceback (most recent call last):
      File "/usr/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
        yield
      File "/usr/lib/python3.9/unittest/case.py", line 592, in run
        self._callTestMethod(testMethod)
      File "/usr/lib/python3.9/unittest/case.py", line 550, in _callTestMethod
        method()
      File "/home/rpatterson/src/plone/volto/api/src/plone.restapi/src/plone/restapi/tests/test_services_users.py", line 822, in test_anonymous_without_enable_user_pwd_choice_sends_mail
        self.assertEqual(201, response.status_code)
      File "/usr/lib/python3.9/unittest/case.py", line 837, in assertEqual
        assertion_func(first, second, msg=msg)
      File "/usr/lib/python3.9/unittest/case.py", line 830, in _baseAssertEqual
        raise self.failureException(msg)
    AssertionError: 201 != 500

        495/555 (89.2%)

    Failure in test test_user_requests_password_sends_password_via_mail (plone.restapi.tests.test_services_users.TestUsersEndpoint)
    Traceback (most recent call last):
      File "/usr/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
        yield
      File "/usr/lib/python3.9/unittest/case.py", line 592, in run
        self._callTestMethod(testMethod)
      File "/usr/lib/python3.9/unittest/case.py", line 550, in _callTestMethod
        method()
      File "/home/rpatterson/src/plone/volto/api/src/plone.restapi/src/plone/restapi/tests/test_services_users.py", line 601, in test_user_requests_password_sends_password_via_mail
        self.assertEqual(response.status_code, 200)
      File "/usr/lib/python3.9/unittest/case.py", line 837, in assertEqual
        assertion_func(first, second, msg=msg)
      File "/usr/lib/python3.9/unittest/case.py", line 830, in _baseAssertEqual
        raise self.failureException(msg)
    AssertionError: 500 != 200

Trying to get good debugging information from those failures was quite the chore, I
think we need a better `pdb.post_mortem()` story when using the
`plone.testing.z2.ZSERVER_FIXTURE` layer.  I ended up modifying
`ZPublisher.WSGIPublisher.publish_module(...)` locally to wrap the `_publish(...)` call
in a `try` clause with `pdb.post_mortem()` in the `except` block.

At any rate, the most important issue here is obviously some sort of isolation issue.
We should prioritize working towards a reality in which a test never passes, fails, or
errors because of *how* it was run.  The more tests become a nest of special
incantations, known issues, rubber chicken waving, and other lore passed around between
developers (inevitably the more senior developers), the more they are experienced as a
dogmatic obstacle to development that developers hate instead of a tool that makes
writing code more efficient and less uncertain that developers love.  Having said that,
I haven't yet put into the time to chase down the core isolation issue.

In the meantime, the "symptom" exception behind these specific errors does seem like it
comes from a case the code should handle.  Specifically, I assume the intention here was
to use the `default` argument to `getattr(...)` to avoid an empty value.  In the case
when all the tests are run, however, this setting has a value of `None` which defeats
this purpose:

    AttributeError: 'NoneType' object has no attribute 'endswith'

     - Expression: "python:view.construct_url(reset['randomstring'])+'?userid='+member.getUserName()"
     - Filename:   ... ne/browser/login/templates/registered_notify_template.pt
     - Location:   (line 21: col 48)
     - Source:     ... python:view.construct_url(reset['randomstring'])+'?userid='+member.getUserName() ...
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     - Arguments:  template: &lt;Products.Five.browser.pagetemplatefile.ViewPageTemplateFile object at 0x7f6ea01581c0&gt;
                   options: {'member': &lt;Products.PlonePAS.tools.memberdata.MemberData object at 0x7f6e9f415580&gt;, 'reset': {'randomstring': '6ef4c60fae43411394ea738744708126', 'expires': datetime.datetime(2022, 1, 1, 19, 34, 25, 661749), 'userid': 'howard'}, 'email': 'howard.zinn@example.com', 'charset': 'utf-8'}
                   args: ()
                   nothing: None
                   modules: &lt;Products.PageTemplates.ZRPythonExpr._SecureModuleImporter object at 0x7f6ea73d7df0&gt;
                   request: &lt;WSGIRequest, URL=http://localhost:42255/plone/@users&gt;
                   view: &lt;Products.Five.browser.metaconfigure.SimpleViewClass from ./eggs/Products.CMFPlone-5.2.6-py3.9.egg/Products/CMFPlone/browser/login/templates/registered_notify_template.pt object at 0x7f6e9f6928b0&gt;
                   context: &lt;RegistrationTool at /plone/portal_registration&gt;
                   views: &lt;Products.Five.browser.pagetemplatefile.ViewMapper object at 0x7f6e9f77ab50&gt;
                   here: &lt;RegistrationTool at /plone/portal_registration&gt;
                   container: &lt;RegistrationTool at /plone/portal_registration&gt;
                   root: &lt;Application at &gt;
                   traverse_subpath: []
                   user: &lt;SpecialUser 'Anonymous User'&gt;
                   default: &lt;DEFAULT&gt;
                   repeat: &lt;Products.PageTemplates.engine.RepeatDictWrapper object at 0x7f6e8ef27840&gt;
                   loop: {}
                   target_language: None
                   translate: &lt;function BaseTemplate.render.&lt;locals&gt;.translate at 0x7f6e8ea423a0&gt;
                   attrs: {}
                   lt: '&lt;'
                   gt: '&gt;'
                   member: &lt;Products.PlonePAS.tools.memberdata.MemberData object at 0x7f6e9f415580&gt;
                   reset: {'randomstring': '6ef4c60fae43411394ea738744708126', 'expires': datetime.datetime(2022, 1, 1, 19, 34, 25, 661749), 'userid': 'howard'}
                   email_from_name: None
                   fullname: 'Howard Zinn'

So this fix seems appropriate regardless of the isolation issue.

Files changed:
M CHANGES.rst
M src/plone/volto/patches.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 59cc131..f07a27a 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -4,7 +4,11 @@ Changelog\n 3.1.0a8 (unreleased)\n --------------------\n \n-- Nothing changed yet.\n+Internal:\n+\n+- Workaround a test fixture isolation issue with the `IVoltoSettings.frontend_domain`\n+  setting.\n+  [rpatterson]\n \n \n 3.1.0a7 (2021-12-11)\ndiff --git a/src/plone/volto/patches.py b/src/plone/volto/patches.py\nindex bfd8dba..6baeff4 100644\n--- a/src/plone/volto/patches.py\n+++ b/src/plone/volto/patches.py\n@@ -39,7 +39,9 @@ def construct_url(self, randomstring):\n \n         registry = getUtility(IRegistry)\n         settings = registry.forInterface(IVoltoSettings, prefix="volto", check=False)\n-        frontend_domain = getattr(settings, "frontend_domain", frontend_domain)\n+        settings_frontend_domain = getattr(settings, "frontend_domain", None)\n+        if settings_frontend_domain:\n+            frontend_domain = settings_frontend_domain\n         if frontend_domain.endswith("/"):\n             frontend_domain = frontend_domain[:-1]\n     return "%s/passwordreset/%s" % (frontend_domain, randomstring)\n'

Repository: plone.volto


Branch: refs/heads/main
Date: 2021-12-28T14:40:35-08:00
Author: Ross Patterson (rpatterson) <me@rpatterson.net>
Commit: https://github.com/plone/plone.volto/commit/c2d79db8046e6f09c37be358187133c052d0c927

fix(deps): Missing direct dependency/requirement

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex bb0f1aa..928fff2 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -59,6 +59,7 @@ def readfile(name):\n         "plone.restapi>=8.13.0",\n         "collective.folderishtypes[dexterity]",\n         "plone.app.vocabularies>=4.3.0",\n+        "collective.monkeypatcher",\n     ],\n     extras_require={\n         "test": [\n'

Repository: plone.volto


Branch: refs/heads/main
Date: 2022-01-20T17:03:41+01:00
Author: Víctor Fernández de Alba (sneridagh) <sneridagh@gmail.com>
Commit: https://github.com/plone/plone.volto/commit/fd0c031af76e6dad25a89ef386bf4c90eb82e181

Merge branch 'main' into test-fix-frontend-domain-none

Files changed:
A src/plone/volto/content.py
A src/plone/volto/default_homepage/__init__.py
A src/plone/volto/default_homepage/default.py
A src/plone/volto/default_homepage/demo.py
A src/plone/volto/default_homepage/lrf.py
A src/plone/volto/locales/es/LC_MESSAGES/plone.volto.po
A src/plone/volto/locales/eu/LC_MESSAGES/plone.volto.po
A src/plone/volto/profiles.zcml
A src/plone/volto/profiles/default/types/Collection.xml
A src/plone/volto/profiles/default/types/Event.xml
A src/plone/volto/profiles/default/types/News_Item.xml
M .gitignore
M CHANGES.rst
M README.rst
M base.cfg
M setup.py
M src/plone/volto/configure.zcml
M src/plone/volto/coresandbox/example.py
M src/plone/volto/dependencies.zcml
M src/plone/volto/interfaces.py
M src/plone/volto/patches.py
M src/plone/volto/profiles/default/metadata.xml
M src/plone/volto/profiles/default/types.xml
M src/plone/volto/profiles/default/types/Document.xml
M src/plone/volto/setuphandlers.py
M src/plone/volto/tests/test_setup.py
M src/plone/volto/upgrades.py
M src/plone/volto/upgrades.zcml
M src/plone/volto/vocabularies/subject.py
D src/plone/volto/profiles/default/types/Plone_Site.xml

b'diff --git a/.gitignore b/.gitignore\nindex 35c8189..84b425a 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -35,3 +35,4 @@ report.html\n !.gitkeep\n !.travis.yml\n pyvenv.cfg\n+extras\ndiff --git a/CHANGES.rst b/CHANGES.rst\nindex f07a27a..62ee684 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -1,15 +1,52 @@\n Changelog\n =========\n \n-3.1.0a8 (unreleased)\n---------------------\n+3.1.0a10 (unreleased)\n+---------------------\n \n-Internal:\n+- Use by default Slate blocks for the default pages\n+  [sneridagh]\n+\n+- Code cleanup, remove some outdated and unused helpers in ``setuptools.py``\n+  [sneridagh]\n+\n+- Add ``volto.blocks`` behavior to Plone Site GS types info.\n+  [sneridagh]\n+\n+- Remove ``Collection`` from types in GS types info.\n+  [sneridagh]\n+\n+- Remove ``plone.richtext`` behavior from Plone Site, Document, News Item, Events\n+  [sneridagh]\n+\n+- Add blocks behavior on Event and NewsItem\n+  [nzambello]\n+\n+- Add preview_image to Event\n+  [nzambello]\n \n - Workaround a test fixture isolation issue with the `IVoltoSettings.frontend_domain`\n   setting.\n   [rpatterson]\n+  \n+3.1.0a9 (2022-01-15)\n+--------------------\n+\n+Breaking:\n+\n+- Remove c.folderishtypes dependency\n \n+New Feature:\n+\n+- Add new field in the coresandbox: not constrained by vocabulary field but the vocabulary defined in the widget.\n+  [sneridagh]\n+\n+\n+3.1.0a8 (2022-01-12)\n+--------------------\n+\n+- Computed copyright dates for content demo pages\n+  [sneridagh]\n \n 3.1.0a7 (2021-12-11)\n --------------------\n@@ -30,6 +67,9 @@ Internal:\n \n New Feature:\n \n+- Add Basque and Spanish translations\n+  [erral]\n+\n - Add Italian translations\n   [cekk]\n \ndiff --git a/README.rst b/README.rst\nindex d263e7f..0b995d0 100644\n--- a/README.rst\n+++ b/README.rst\n@@ -20,7 +20,7 @@ Install plone.volto by adding it to your buildout::\n \n     [buildout]\n     ...\n-    \n+\n     [instance]\n     ...\n \n@@ -95,7 +95,7 @@ plone.volto enables the new Volto Blocks editor on ``Document``, ``Language Root\n Multilingual Support\n --------------------\n \n-plone.volto supports multilingual websites. \n+plone.volto supports multilingual websites.\n Install PAM before installing this package and demo homepages will be created in each enabled language.\n Currently only support for EN/DE.\n \n@@ -103,7 +103,7 @@ Currently only support for EN/DE.\n Volto Blocks for Plone Site Root\n --------------------------------\n \n-plone.volto contains a hack to make the Plone site Volto blocks-enabled with some demo content. \n+plone.volto contains a hack to make the Plone site Volto blocks-enabled with some demo content.\n You can take only the hack to enable the blocks on your site.\n \n You can see it in action in the Volto demo: https://6.demo.plone.org\n@@ -121,6 +121,10 @@ e.g. in your GS ``metadata.xml`` along with your other dependencies::\n   </dependencies>\n   </metadata>\n \n+**NOTE**: From ``plone.volto`` above version 4.0.0, the default block for creating the\n+default content in the root (or corresponding Language Root Folders) is "slate". If you\n+want still to create draftJS blocks, you need to use the ``default-homepage-drafjs`` profile.\n+\n \n Document Content Type\n ---------------------\ndiff --git a/base.cfg b/base.cfg\nindex 9c13caf..8482906 100644\n--- a/base.cfg\n+++ b/base.cfg\n@@ -7,9 +7,18 @@ parts =\n     dependencies\n     zpretty\n     test\n+    omelette\n     update-translations\n     find-untranslated\n develop = .\n+sources-dir = extras\n+\n+extensions = mr.developer\n+auto-checkout =\n+always-checkout = force\n+\n+[sources]\n+plone.restapi = git git://github.com/plone/plone.restapi.git pushurl=git@github.com:plone/plone.restapi.git branch=master\n \n [instance]\n recipe = plone.recipe.zope2instance\n@@ -46,6 +55,10 @@ upgrade-portal = False\n upgrade-all-profiles = False\n site-replace = True\n \n+[omelette]\n+recipe = collective.recipe.omelette\n+eggs = ${instance:eggs}\n+\n [test]\n recipe = collective.xmltestreport\n eggs = ${instance:eggs}\n@@ -114,4 +127,4 @@ input = inline:\n     #!/bin/sh\n     bin/i18ndude find-untranslated `find -L src/plone/volto -regex ".*\\.[cz]?pt"`\n output = ${buildout:directory}/bin/find-untranslated\n-mode = 755\n\\ No newline at end of file\n+mode = 755\ndiff --git a/setup.py b/setup.py\nindex 928fff2..0870375 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -24,7 +24,7 @@ def readfile(name):\n \n setup(\n     name="plone.volto",\n-    version="3.1.0a8.dev0",\n+    version="3.1.0a10.dev0",\n     description="Volto integration add-on for Plone",\n     long_description=long_description,\n     # Get more from https://pypi.org/classifiers/\n@@ -57,7 +57,6 @@ def readfile(name):\n         "Products.GenericSetup",\n         "setuptools",\n         "plone.restapi>=8.13.0",\n-        "collective.folderishtypes[dexterity]",\n         "plone.app.vocabularies>=4.3.0",\n         "collective.monkeypatcher",\n     ],\ndiff --git a/src/plone/volto/configure.zcml b/src/plone/volto/configure.zcml\nindex 41793a9..b2d065f 100644\n--- a/src/plone/volto/configure.zcml\n+++ b/src/plone/volto/configure.zcml\n@@ -16,10 +16,10 @@\n   <include package=".behaviors" />\n   <include package=".browser" />\n \n+  <include file="profiles.zcml" />\n   <include file="patches.zcml" />\n   <include file="upgrades.zcml" />\n \n-\n   <browser:page\n       name="blocksuuidfixer"\n       for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n@@ -27,75 +27,6 @@\n       permission="cmf.ManagePortal"\n       />\n \n-  <genericsetup:registerProfile\n-      name="default"\n-      title="Plone 6 Frontend (plone.volto)"\n-      description="Configures the Plone backend to work with Volto, the new default frontend for Plone 6."\n-      provides="Products.GenericSetup.interfaces.EXTENSION"\n-      directory="profiles/default"\n-      post_handler=".setuphandlers.post_install"\n-      />\n-\n-  <genericsetup:registerProfile\n-      name="uninstall"\n-      title="Plone 6 Frontend (plone.volto): uninstall"\n-      description="Uninstalls the plone.volto add-on."\n-      provides="Products.GenericSetup.interfaces.EXTENSION"\n-      directory="profiles/uninstall"\n-      post_handler=".setuphandlers.uninstall"\n-      />\n-\n-  <genericsetup:registerProfile\n-      name="default-homepage"\n-      title="Plone 6 Frontend (Default content on homepage)"\n-      description="Creates a default page for the site"\n-      provides="Products.GenericSetup.interfaces.EXTENSION"\n-      directory="profiles/homepage"\n-      post_handler=".setuphandlers.create_default_homepage"\n-      />\n-\n-  <genericsetup:registerProfile\n-      name="demo"\n-      title="plone.volto demo special requirements"\n-      description="Special requirements and setup for demo site"\n-      provides="Products.GenericSetup.interfaces.EXTENSION"\n-      directory="profiles/demo"\n-      post_handler=".setuphandlers.create_demo_homepage"\n-      />\n-\n-  <!-- Fixture for coresandbox Cypress tests in Volto repo -->\n-  <genericsetup:registerProfile\n-      name="coresandbox"\n-      title="plone.volto coresandbox Cypress tests fixtures"\n-      description="Special test fixture for coresandbox use cases"\n-      provides="Products.GenericSetup.interfaces.EXTENSION"\n-      directory="profiles/coresandbox"\n-      post_handler=".setuphandlers.post_install_coresandbox"\n-      />\n-\n-  <!-- Fixture for multilingual Cypress tests in Volto repo -->\n-  <genericsetup:registerProfile\n-      name="multilingual"\n-      title="plone.volto multilingual Cypress tests fixtures"\n-      description="Special test fixture for multilingual use case"\n-      provides="Products.GenericSetup.interfaces.EXTENSION"\n-      directory="profiles/multilingual"\n-      post_handler=".setuphandlers.post_install_multilingual"\n-      />\n-\n-  <genericsetup:registerProfile\n-      name="richtext"\n-      title="plone.volto p51 profile"\n-      description="Specific profile for re-adding the richtext behavior"\n-      provides="Products.GenericSetup.interfaces.EXTENSION"\n-      directory="profiles/richtext"\n-      />\n-\n-  <utility\n-      factory=".setuphandlers.HiddenProfiles"\n-      name="plone.volto-hiddenprofiles"\n-      />\n-\n   <browser:page\n       name="volto_settings"\n       for="Products.CMFPlone.interfaces.IPloneSiteRoot"\ndiff --git a/src/plone/volto/content.py b/src/plone/volto/content.py\nnew file mode 100644\nindex 0000000..2e67e18\n--- /dev/null\n+++ b/src/plone/volto/content.py\n@@ -0,0 +1,24 @@\n+# -*- coding: utf-8 -*-\n+from plone.volto.interfaces import IFolderishDocument\n+from plone.volto.interfaces import IFolderishEvent\n+from plone.volto.interfaces import IFolderishNewsItem\n+from plone.app.contenttypes.interfaces import IDocument\n+from plone.app.contenttypes.interfaces import IEvent\n+from plone.app.contenttypes.interfaces import INewsItem\n+from plone.dexterity.content import Container\n+from zope.interface import implementer\n+\n+\n+@implementer(IDocument, IFolderishDocument)\n+class FolderishDocument(Container):\n+    pass\n+\n+\n+@implementer(IEvent, IFolderishEvent)\n+class FolderishEvent(Container):\n+    pass\n+\n+\n+@implementer(INewsItem, IFolderishNewsItem)\n+class FolderishNewsItem(Container):\n+    pass\ndiff --git a/src/plone/volto/coresandbox/example.py b/src/plone/volto/coresandbox/example.py\nindex ff94c0f..33a0d9e 100644\n--- a/src/plone/volto/coresandbox/example.py\n+++ b/src/plone/volto/coresandbox/example.py\n@@ -68,6 +68,7 @@ class IExample(model.Schema):\n             "list_field_select",\n             "list_field_voc_unconstrained",\n             "list_field_voc_huge",\n+            "list_field_voc_huge_unconstrained",\n             "tuple_field",\n             "set_field",\n             "set_field_checkbox",\n@@ -261,6 +262,20 @@ class IExample(model.Schema):\n         frontendOptions={"widget": "autocomplete", "widgetProps": {"prop1": "text"}},\n     )\n \n+    list_field_voc_huge_unconstrained = schema.List(\n+        title=u"List field with values from a huge vocabulary but unconstrained",\n+        description=u"zope.schema.List",\n+        value_type=schema.TextLine(),\n+        required=False,\n+        missing_value=[],\n+        default=[],\n+    )\n+    directives.widget(\n+        "list_field_voc_huge_unconstrained",\n+        vocabulary="plone.volto.coresandbox.vocabularies.huge",\n+        frontendOptions={"widget": "autocomplete", "widgetProps": {"prop1": "text"}},\n+    )\n+\n     tuple_field = schema.Tuple(\n         title=u"Tuple field",\n         description=u"zope.schema.Tuple",\ndiff --git a/src/plone/volto/default_homepage/__init__.py b/src/plone/volto/default_homepage/__init__.py\nnew file mode 100644\nindex 0000000..e69de29\ndiff --git a/src/plone/volto/default_homepage/default.py b/src/plone/volto/default_homepage/default.py\nnew file mode 100644\nindex 0000000..dba86e9\n--- /dev/null\n+++ b/src/plone/volto/default_homepage/default.py\n@@ -0,0 +1,484 @@\n+from datetime import datetime\n+\n+default_home = {\n+    "draftJS": {\n+        "title": "Welcome to Volto!",\n+        "description": "The React powered content management system",\n+        "blocks": {\n+            "0358abe2-b4f1-463d-a279-a63ea80daf19": {"@type": "description"},\n+            "07c273fc-8bfc-4e7d-a327-d513e5a945bb": {"@type": "title"},\n+            "2dfe8e4c-5bf6-43f1-93e1-6c320ede7226": {\n+                "@type": "text",\n+                "text": {\n+                    "blocks": [\n+                        {\n+                            "data": {},\n+                            "depth": 0,\n+                            "entityRanges": [],\n+                            "inlineStyleRanges": [\n+                                {"length": 10, "offset": 0, "style": "BOLD"}\n+                            ],\n+                            "key": "6470b",\n+                            "text": "Disclaimer: This instance is reset every night, so all changes will be lost afterwards.",\n+                            "type": "unstyled",\n+                        }\n+                    ],\n+                    "entityMap": {},\n+                },\n+            },\n+            "3c881f51-f75b-4959-834a-6e1d5edc32ae": {\n+                "@type": "text",\n+                "text": {\n+                    "blocks": [\n+                        {\n+                            "data": {},\n+                            "depth": 0,\n+                            "entityRanges": [],\n+                            "inlineStyleRanges": [\n+                                {"length": 5, "offset": 6, "style": "BOLD"}\n+                            ],\n+                            "key": "ekn3l",\n+                            "text": "user: admin",\n+                            "type": "unstyled",\n+                        }\n+                    ],\n+                    "entityMap": {},\n+                },\n+            },\n+            "5e1c30b1-ec6c-4dc0-9483-9768c3c416e4": {\n+                "@type": "text",\n+                "text": {\n+                    "blocks": [\n+                        {\n+                            "data": {},\n+                            "depth": 0,\n+                            "entityRanges": [\n+                                {"key": 0, "length": 5, "offset": 0},\n+                                {"key": 1, "length": 8, "offset": 455},\n+                            ],\n+                            "inlineStyleRanges": [],\n+                            "key": "behki",\n+                            "text": "Plone is a CMS built on Python with over 19 years of experience. Plone has very interesting features that appeal to developers and users alike, such as customizable content types, hierarchical URL object traversing and a sophisticated content workflow powered by a granular permissions model. This allows you to build anything from simple websites to enterprise-grade intranets. Volto exposes all these features and communicates with Plone via its mature REST API. Volto can be esily themed and is highly customizable.",\n+                            "type": "unstyled",\n+                        }\n+                    ],\n+                    "entityMap": {\n+                        "0": {\n+                            "data": {\n+                                "href": "https://plone.org",\n+                                "rel": "nofollow",\n+                                "url": "https://plone.org/",\n+                            },\n+                            "mutability": "MUTABLE",\n+                            "type": "LINK",\n+                        },\n+                        "1": {\n+                            "data": {\n+                                "href": "https://github.com/plone/plone.restapi",\n+                                "url": "https://github.com/plone/plone.restapi",\n+                            },\n+                            "mutability": "MUTABLE",\n+                            "type": "LINK",\n+                        },\n+                    },\n+                },\n+            },\n+            "61cc1bc0-d4f5-4e2b-9152-79512045a4dd": {\n+                "@type": "text",\n+                "text": {\n+                    "blocks": [\n+                        {\n+                            "data": {},\n+                            "depth": 0,\n+                            "entityRanges": [],\n+                            "inlineStyleRanges": [],\n+                            "key": "9qsa4",\n+                            "text": "Demo",\n+                            "type": "header-two",\n+                        }\n+                    ],\n+                    "entityMap": {},\n+                },\n+            },\n+            "874049e7-629e-489a-b46c-1adf35ad40ee": {\n+                "@type": "text",\n+                "text": {\n+                    "blocks": [\n+                        {\n+                            "data": {},\n+                            "depth": 0,\n+                            "entityRanges": [],\n+                            "inlineStyleRanges": [],\n+                            "key": "9pnjr",\n+                            "text": "Happy hacking!",\n+                            "type": "unstyled",\n+                        }\n+                    ],\n+                    "entityMap": {},\n+                },\n+            },\n+            "942b6530-2407-420f-9c24-597adda6b2ce": {\n+                "@type": "text",\n+                "text": {\n+                    "blocks": [\n+                        {\n+                            "data": {},\n+                            "depth": 0,\n+                            "entityRanges": [{"key": 0, "length": 36, "offset": 39}],\n+                            "inlineStyleRanges": [],\n+                            "key": "6a248",\n+                            "text": "Last but not least, it also supports a Volto Nodejs-based backend reference API implementation that demos how other systems could also use Volto to display and create content through it.",\n+                            "type": "unstyled",\n+                        }\n+                    ],\n+                    "entityMap": {\n+                        "0": {\n+                            "data": {\n+                                "href": "https://github.com/plone/volto-reference-backend",\n+                                "url": "https://github.com/plone/volto-reference-backend",\n+                            },\n+                            "mutability": "MUTABLE",\n+                            "type": "LINK",\n+                        }\n+                    },\n+                },\n+            },\n+            "9a976b8e-72ba-468a-bea8-b37a31bb386b": {\n+                "@type": "text",\n+                "text": {\n+                    "blocks": [\n+                        {\n+                            "data": {},\n+                            "depth": 0,\n+                            "entityRanges": [],\n+                            "inlineStyleRanges": [\n+                                {"length": 12, "offset": 51, "style": "BOLD"}\n+                            ],\n+                            "key": "94arl",\n+                            "text": "You can log in and use it as admin user using these credentials:",\n+                            "type": "unstyled",\n+                        }\n+                    ],\n+                    "entityMap": {},\n+                },\n+            },\n+            "b3717238-448f-406e-b06f-57a9715c3326": {\n+                "@type": "text",\n+                "text": {\n+                    "blocks": [\n+                        {\n+                            "data": {},\n+                            "depth": 0,\n+                            "entityRanges": [{"key": 0, "length": 5, "offset": 0}],\n+                            "inlineStyleRanges": [],\n+                            "key": "1bnna",\n+                            "text": "Volto is a React-based frontend for content management systems, currently supporting three backend implementations: Plone, Guillotina and a NodeJS reference implementation.",\n+                            "type": "unstyled",\n+                        }\n+                    ],\n+                    "entityMap": {\n+                        "0": {\n+                            "data": {\n+                                "href": "https://github.com/plone/volto",\n+                                "url": "https://github.com/plone/volto",\n+                            },\n+                            "mutability": "MUTABLE",\n+                            "type": "LINK",\n+                        }\n+                    },\n+                },\n+            },\n+            "c049ff8b-3e5a-4cfb-bca6-e4a6cca9be28": {\n+                "@type": "text",\n+                "text": {\n+                    "blocks": [\n+                        {\n+                            "data": {},\n+                            "depth": 0,\n+                            "entityRanges": [],\n+                            "inlineStyleRanges": [],\n+                            "key": "55n44",\n+                            "text": "You can use this site to test Volto. It runs on the master branch of Volto using latest Plone 5.2 Backend running on Python 3.",\n+                            "type": "unstyled",\n+                        }\n+                    ],\n+                    "entityMap": {},\n+                },\n+            },\n+            "c91f0fe9-f2e9-4a17-84a5-8e4f2678ed3c": {\n+                "@type": "text",\n+                "text": {\n+                    "blocks": [\n+                        {\n+                            "data": {},\n+                            "depth": 0,\n+                            "entityRanges": [],\n+                            "inlineStyleRanges": [\n+                                {"length": 5, "offset": 10, "style": "BOLD"}\n+                            ],\n+                            "key": "buncq",\n+                            "text": "password: admin",\n+                            "type": "unstyled",\n+                        }\n+                    ],\n+                    "entityMap": {},\n+                },\n+            },\n+            "e0ca2fbc-7800-4b9b-afe5-8e42af9f5dd6": {\n+                "@type": "text",\n+                "text": {\n+                    "blocks": [\n+                        {\n+                            "data": {},\n+                            "depth": 0,\n+                            "entityRanges": [],\n+                            "inlineStyleRanges": [],\n+                            "key": "f0prj",\n+                            "text": f"{datetime.now().year} - Volto Team - Plone Foundation",\n+                            "type": "unstyled",\n+                        }\n+                    ],\n+                    "entityMap": {},\n+                },\n+            },\n+            "effbdcdc-253c-41a7-841e-5edb3b56ce32": {\n+                "@type": "text",\n+                "text": {\n+                    "blocks": [\n+                        {\n+                            "data": {},\n+                            "depth": 0,\n+                            "entityRanges": [{"key": 0, "length": 10, "offset": 36}],\n+                            "inlineStyleRanges": [],\n+                            "key": "68rve",\n+                            "text": "Volto also supports other APIs like Guillotina, a Python resource management system, inspired by Plone and using the same basic concepts like traversal, content types and permissions model.",\n+                            "type": "unstyled",\n+                        }\n+                    ],\n+                    "entityMap": {\n+                        "0": {\n+                            "data": {\n+                                "href": "https://guillotina.io/",\n+                                "rel": "nofollow",\n+                                "url": "https://guillotina.io/",\n+                            },\n+                            "mutability": "MUTABLE",\n+                            "type": "LINK",\n+                        }\n+                    },\n+                },\n+            },\n+        },\n+        "blocks_layout": {\n+            "items": [\n+                "07c273fc-8bfc-4e7d-a327-d513e5a945bb",\n+                "0358abe2-b4f1-463d-a279-a63ea80daf19",\n+                "b3717238-448f-406e-b06f-57a9715c3326",\n+                "5e1c30b1-ec6c-4dc0-9483-9768c3c416e4",\n+                "effbdcdc-253c-41a7-841e-5edb3b56ce32",\n+                "942b6530-2407-420f-9c24-597adda6b2ce",\n+                "61cc1bc0-d4f5-4e2b-9152-79512045a4dd",\n+                "c049ff8b-3e5a-4cfb-bca6-e4a6cca9be28",\n+                "9a976b8e-72ba-468a-bea8-b37a31bb386b",\n+                "3c881f51-f75b-4959-834a-6e1d5edc32ae",\n+                "c91f0fe9-f2e9-4a17-84a5-8e4f2678ed3c",\n+                "2dfe8e4c-5bf6-43f1-93e1-6c320ede7226",\n+                "874049e7-629e-489a-b46c-1adf35ad40ee",\n+                "e0ca2fbc-7800-4b9b-afe5-8e42af9f5dd6",\n+            ]\n+        },\n+    },\n+    "slate": {\n+        "title": "Welcome to Volto!",\n+        "description": "The React powered content management system",\n+        "blocks": {\n+            "0358abe2-b4f1-463d-a279-a63ea80daf19": {"@type": "description"},\n+            "07c273fc-8bfc-4e7d-a327-d513e5a945bb": {"@type": "title"},\n+            "16f63011-a6ec-4f1c-8f78-4c5166dfff2c": {\n+                "@type": "slate",\n+                "plaintext": "You can log in and use it as admin user using these credentials :",\n+                "value": [\n+                    {\n+                        "children": [\n+                            {\n+                                "text": "You can log in and use it as admin user using these "\n+                            },\n+                            {"children": [{"text": "credentials"}], "type": "strong"},\n+                            {"text": ":"},\n+                        ],\n+                        "type": "p",\n+                    }\n+                ],\n+            },\n+            "237b0f68-d700-47ec-9356-77a54c8d5237": {\n+                "@type": "slate",\n+                "plaintext": "Demo",\n+                "value": [{"children": [{"text": "Demo"}], "type": "h2"}],\n+            },\n+            "259ad2e9-a5f7-4e0c-a37b-b8d3a9da1a0d": {\n+                "@type": "slate",\n+                "plaintext": "password: admin ",\n+                "value": [\n+                    {\n+                        "children": [\n+                            {"text": "password: "},\n+                            {"children": [{"text": "admin"}], "type": "strong"},\n+                            {"text": ""},\n+                        ],\n+                        "type": "p",\n+                    }\n+                ],\n+            },\n+            "26d7d965-80f3-4312-9dc6-5166d00260a5": {\n+                "@type": "slate",\n+                "plaintext": "user: admin ",\n+                "value": [\n+                    {\n+                        "children": [\n+                            {"text": "user: "},\n+                            {"children": [{"text": "admin"}], "type": "strong"},\n+                            {"text": ""},\n+                        ],\n+                        "type": "p",\n+                    }\n+                ],\n+            },\n+            "38ff6b46-4cbd-4933-a462-251c3e963b7a": {\n+                "@type": "slate",\n+                "plaintext": " Plone is a CMS built on Python with over 21 years of experience. Plone has very interesting features that appeal to developers and users alike, such as customizable content types, hierarchical URL object traversing and a sophisticated content workflow powered by a granular permissions model. This allows you to build anything from simple websites to enterprise-grade intranets. Volto exposes all these features and communicates with Plone via its mature REST API . Volto can be esily themed and is highly customizable.",\n+                "value": [\n+                    {\n+                        "children": [\n+                            {"text": ""},\n+                            {\n+                                "children": [{"text": "Plone"}],\n+                                "data": {"url": "https://plone.org/"},\n+                                "type": "link",\n+                            },\n+                            {\n+                                "text": " is a CMS built on Python with over 21 years of experience. Plone has very interesting features that appeal to developers and users alike, such as customizable content types, hierarchical URL object traversing and a sophisticated content workflow powered by a granular permissions model. This allows you to build anything from simple websites to enterprise-grade intranets. Volto exposes all these features and communicates with Plone via its mature "\n+                            },\n+                            {\n+                                "children": [{"text": "REST API"}],\n+                                "data": {\n+                                    "url": "https://github.com/plone/plone.restapi"\n+                                },\n+                                "type": "link",\n+                            },\n+                            {\n+                                "text": ". Volto can be esily themed and is highly customizable."\n+                            },\n+                        ],\n+                        "type": "p",\n+                    }\n+                ],\n+            },\n+            "58cb10e2-49a5-4a87-9f5b-479c34bc5d36": {\n+                "@type": "slate",\n+                "plaintext": "You can use this site to test Volto. It runs on the master branch of Volto using latest Plone 5.2 Backend running on Python 3.",\n+                "value": [\n+                    {\n+                        "children": [\n+                            {\n+                                "text": "You can use this site to test Volto. It runs on the master branch of Volto using latest Plone 5.2 Backend running on Python 3."\n+                            }\n+                        ],\n+                        "type": "p",\n+                    }\n+                ],\n+            },\n+            "59f1e88e-bc2b-4aeb-95e7-26e0850fec0f": {\n+                "@type": "slate",\n+                "plaintext": f"{datetime.now().year} - Volto Team - Plone Foundation",\n+                "value": [\n+                    {\n+                        "children": [\n+                            {\n+                                "text": f"{datetime.now().year} - Volto Team - Plone Foundation"\n+                            }\n+                        ],\n+                        "type": "p",\n+                    }\n+                ],\n+            },\n+            "712fb2c2-865e-4a21-bc74-b044a411deff": {\n+                "@type": "slate",\n+                "plaintext": "Volto also supports other APIs like Guillotina , a Python resource management system, inspired by Plone and using the same basic concepts like traversal, content types and permissions model.",\n+                "value": [\n+                    {\n+                        "children": [\n+                            {"text": "Volto also supports other APIs like "},\n+                            {\n+                                "children": [{"text": "Guillotina"}],\n+                                "data": {"url": "https://guillotina.io/"},\n+                                "type": "link",\n+                            },\n+                            {\n+                                "text": ", a Python resource management system, inspired by Plone and using the same basic concepts like traversal, content types and permissions model."\n+                            },\n+                        ],\n+                        "type": "p",\n+                    }\n+                ],\n+            },\n+            "78ff07d8-dc59-4af9-a669-1d551953ef34": {\n+                "@type": "slate",\n+                "plaintext": " Volto is a React-based frontend for content management systems, currently supporting three backend implementations: Plone, Guillotina and a NodeJS reference implementation.",\n+                "value": [\n+                    {\n+                        "children": [\n+                            {"text": ""},\n+                            {\n+                                "children": [{"text": "Volto"}],\n+                                "data": {"url": "https://github.com/plone/volto"},\n+                                "type": "link",\n+                            },\n+                            {\n+                                "text": " is a React-based frontend for content management systems, currently supporting three backend implementations: Plone, Guillotina and a NodeJS reference implementation."\n+                            },\n+                        ],\n+                        "type": "p",\n+                    }\n+                ],\n+            },\n+            "ddc9926a-03d3-4c64-87a1-2b941aa08ebe": {\n+                "@type": "slate",\n+                "plaintext": "Happy hacking!",\n+                "value": [{"children": [{"text": "Happy hacking!"}], "type": "p"}],\n+            },\n+            "fe6a8835-78d6-4026-ac2e-55ed26de14c3": {\n+                "@type": "slate",\n+                "plaintext": " Disclaimer : This instance is reset every night, so all changes will be lost afterwards.",\n+                "value": [\n+                    {\n+                        "children": [\n+                            {"text": ""},\n+                            {"children": [{"text": "Disclaimer"}], "type": "strong"},\n+                            {\n+                                "text": ": This instance is reset every night, so all changes will be lost afterwards."\n+                            },\n+                        ],\n+                        "type": "p",\n+                    }\n+                ],\n+            },\n+        },\n+        "blocks_layout": {\n+            "items": [\n+                "07c273fc-8bfc-4e7d-a327-d513e5a945bb",\n+                "0358abe2-b4f1-463d-a279-a63ea80daf19",\n+                "78ff07d8-dc59-4af9-a669-1d551953ef34",\n+                "38ff6b46-4cbd-4933-a462-251c3e963b7a",\n+                "712fb2c2-865e-4a21-bc74-b044a411deff",\n+                "237b0f68-d700-47ec-9356-77a54c8d5237",\n+                "58cb10e2-49a5-4a87-9f5b-479c34bc5d36",\n+                "16f63011-a6ec-4f1c-8f78-4c5166dfff2c",\n+                "26d7d965-80f3-4312-9dc6-5166d00260a5",\n+                "259ad2e9-a5f7-4e0c-a37b-b8d3a9da1a0d",\n+                "fe6a8835-78d6-4026-ac2e-55ed26de14c3",\n+                "ddc9926a-03d3-4c64-87a1-2b941aa08ebe",\n+                "59f1e88e-bc2b-4aeb-95e7-26e0850fec0f",\n+            ]\n+        },\n+    },\n+}\ndiff --git a/src/plone/volto/default_homepage/demo.py b/src/plone/volto/default_homepage/demo.py\nnew file mode 100644\nindex 0000000..bc7ff09\n--- /dev/null\n+++ b/src/plone/volto/default_homepage/demo.py\n@@ -0,0 +1,639 @@\n+from datetime import datetime\n+\n+demo_home_page = {\n+    "draftJS": {\n+        "title": "Welcome to Plone 6!",\n+        "description": "Congratulations! You have successfully installed Plone.",\n+        "blocks": {\n+            "0358abe2-b4f1-463d-a279-a63ea80daf19": {"@type": "description"},\n+            "07c273fc-8bfc-4e7d-a327-d513e5a945bb": {"@type": "title"},\n+            "2dfe8e4c-5bf6-43f1-93e1-6c320ede7226": {\n+                "@type": "text",\n+                "text": {\n+                    "blocks": [\n+                        {\n+                            "data": {},\n+                            "depth": 0,\n+                            "entityRanges": [],\n+                            "inlineStyleRanges": [\n+                                {"length": 10, "offset": 0, "style": "BOLD"}\n+                            ],\n+                            "key": "6470b",\n+                            "text": "Disclaimer: This instance is reset every night, so all changes will be lost afterwards.",\n+                            "type": "unstyled",\n+                        }\n+                    ],\n+                    "entityMap": {},\n+                },\n+            },\n+            "3c881f51-f75b-4959-834a-6e1d5edc32ae": {\n+                "@type": "text",\n+                "text": {\n+                    "blocks": [\n+                        {\n+                            "data": {},\n+                            "depth": 0,\n+                            "entityRanges": [],\n+                            "inlineStyleRanges": [\n+                                {"length": 5, "offset": 6, "style": "BOLD"}\n+                            ],\n+                            "key": "ekn3l",\n+                            "text": "user: admin",\n+                            "type": "unstyled",\n+                        }\n+                    ],\n+                    "entityMap": {},\n+                },\n+            },\n+            "5e1c30b1-ec6c-4dc0-9483-9768c3c416e4": {\n+                "@type": "text",\n+                "text": {\n+                    "blocks": [\n+                        {\n+                            "data": {},\n+                            "depth": 0,\n+                            "entityRanges": [],\n+                            "inlineStyleRanges": [],\n+                            "key": "behki",\n+                            "text": "Plone is a powerful content management system built on a rock-solid application stack written using the Python programming language. More about these technologies:",\n+                            "type": "unstyled",\n+                        }\n+                    ],\n+                    "entityMap": {},\n+                },\n+            },\n+            "5f7e6846-e27c-48c4-8c9a-f0d93eadb185": {\n+                "@type": "text",\n+                "text": {\n+                    "blocks": [\n+                        {\n+                            "data": {},\n+                            "depth": 0,\n+                            "entityRanges": [],\n+                            "inlineStyleRanges": [],\n+                            "key": "75pke",\n+                            "text": "\\u2026protects and promotes Plone.",\n+                            "type": "unordered-list-item",\n+                        },\n+                        {\n+                            "data": {},\n+                            "depth": 0,\n+                            "entityRanges": [],\n+                            "inlineStyleRanges": [],\n+                            "key": "2mo73",\n+                            "text": "\\u2026is a registered 501(c)(3) charitable organization.",\n+                            "type": "unordered-list-item",\n+                        },\n+                        {\n+                            "data": {},\n+                            "depth": 0,\n+                            "entityRanges": [],\n+                            "inlineStyleRanges": [],\n+                            "key": "9qhkg",\n+                            "text": "\\u2026donations are tax-deductible.",\n+                            "type": "unordered-list-item",\n+                        },\n+                        {\n+                            "data": {},\n+                            "depth": 0,\n+                            "entityRanges": [{"key": 0, "length": 50, "offset": 0}],\n+                            "inlineStyleRanges": [],\n+                            "key": "5528b",\n+                            "text": "Support the Foundation and help make Plone better!",\n+                            "type": "unordered-list-item",\n+                        },\n+                    ],\n+                    "entityMap": {\n+                        "0": {\n+                            "data": {"url": "https://plone.org/sponsors/be-a-hero"},\n+                            "mutability": "MUTABLE",\n+                            "type": "LINK",\n+                        }\n+                    },\n+                },\n+            },\n+            "61cc1bc0-d4f5-4e2b-9152-79512045a4dd": {\n+                "@type": "text",\n+                "text": {\n+                    "blocks": [\n+                        {\n+                            "data": {},\n+                            "depth": 0,\n+                            "entityRanges": [],\n+                            "inlineStyleRanges": [],\n+                            "key": "9qsa4",\n+                            "text": "Demo",\n+                            "type": "header-two",\n+                        }\n+                    ],\n+                    "entityMap": {},\n+                },\n+            },\n+            "874049e7-629e-489a-b46c-1adf35ad40ee": {\n+                "@type": "text",\n+                "text": {\n+                    "blocks": [\n+                        {\n+                            "data": {},\n+                            "depth": 0,\n+                            "entityRanges": [],\n+                            "inlineStyleRanges": [],\n+                            "key": "9pnjr",\n+                            "text": "Happy hacking!",\n+                            "type": "unstyled",\n+                        }\n+                    ],\n+                    "entityMap": {},\n+                },\n+            },\n+            "8bba235c-7a52-4ce2-bde1-c505e5746dce": {\n+                "@type": "text",\n+                "text": {\n+                    "blocks": [\n+                        {\n+                            "data": {},\n+                            "depth": 0,\n+                            "entityRanges": [],\n+                            "inlineStyleRanges": [],\n+                            "key": "692gs",\n+                            "text": "Plone is made possible only through the efforts of thousands of dedicated individuals and hundreds of companies. The Plone Foundation:",\n+                            "type": "unstyled",\n+                        }\n+                    ],\n+                    "entityMap": {},\n+                },\n+            },\n+            "942b6530-2407-420f-9c24-597adda6b2ce": {\n+                "@type": "text",\n+                "text": {\n+                    "blocks": [\n+                        {\n+                            "data": {},\n+                            "depth": 0,\n+                            "entityRanges": [],\n+                            "inlineStyleRanges": [],\n+                            "key": "6a248",\n+                            "text": "Support the Plone Foundation",\n+                            "type": "header-two",\n+                        }\n+                    ],\n+                    "entityMap": {},\n+                },\n+            },\n+            "9a976b8e-72ba-468a-bea8-b37a31bb386b": {\n+                "@type": "text",\n+                "text": {\n+                    "blocks": [\n+                        {\n+                            "data": {},\n+                            "depth": 0,\n+                            "entityRanges": [],\n+                            "inlineStyleRanges": [\n+                                {"length": 12, "offset": 51, "style": "BOLD"}\n+                            ],\n+                            "key": "94arl",\n+                            "text": "You can log in and use it as admin user using these credentials:",\n+                            "type": "unstyled",\n+                        }\n+                    ],\n+                    "entityMap": {},\n+                },\n+            },\n+            "b3717238-448f-406e-b06f-57a9715c3326": {\n+                "@type": "text",\n+                "text": {\n+                    "blocks": [\n+                        {\n+                            "data": {},\n+                            "depth": 0,\n+                            "entityRanges": [],\n+                            "inlineStyleRanges": [],\n+                            "key": "1bnna",\n+                            "text": "Find out more about Plone",\n+                            "type": "header-two",\n+                        }\n+                    ],\n+                    "entityMap": {},\n+                },\n+            },\n+            "c049ff8b-3e5a-4cfb-bca6-e4a6cca9be28": {\n+                "@type": "text",\n+                "text": {\n+                    "blocks": [\n+                        {\n+                            "data": {},\n+                            "depth": 0,\n+                            "entityRanges": [],\n+                            "inlineStyleRanges": [],\n+                            "key": "55n44",\n+                            "text": "You can use this site to test Plone 6. These are the versions used in this demo:",\n+                            "type": "unstyled",\n+                        }\n+                    ],\n+                    "entityMap": {},\n+                },\n+            },\n+            "c91f0fe9-f2e9-4a17-84a5-8e4f2678ed3c": {\n+                "@type": "text",\n+                "text": {\n+                    "blocks": [\n+                        {\n+                            "data": {},\n+                            "depth": 0,\n+                            "entityRanges": [],\n+                            "inlineStyleRanges": [\n+                                {"length": 5, "offset": 10, "style": "BOLD"}\n+                            ],\n+                            "key": "buncq",\n+                            "text": "password: admin",\n+                            "type": "unstyled",\n+                        }\n+                    ],\n+                    "entityMap": {},\n+                },\n+            },\n+            "e0ca2fbc-7800-4b9b-afe5-8e42af9f5dd6": {\n+                "@type": "text",\n+                "text": {\n+                    "blocks": [\n+                        {\n+                            "data": {},\n+                            "depth": 0,\n+                            "entityRanges": [],\n+                            "inlineStyleRanges": [],\n+                            "key": "f0prj",\n+                            "text": f"{datetime.now().year} - Plone Foundation",\n+                            "type": "unstyled",\n+                        }\n+                    ],\n+                    "entityMap": {},\n+                },\n+            },\n+            "effbdcdc-253c-41a7-841e-5edb3b56ce32": {\n+                "@type": "text",\n+                "text": {\n+                    "blocks": [\n+                        {\n+                            "data": {},\n+                            "depth": 0,\n+                            "entityRanges": [{"key": 0, "length": 43, "offset": 4}],\n+                            "inlineStyleRanges": [],\n+                            "key": "68rve",\n+                            "text": "The Plone open source Content Management System web site for evaluators and decision makers.",\n+                            "type": "unordered-list-item",\n+                        },\n+                        {\n+                            "data": {},\n+                            "depth": 0,\n+                            "entityRanges": [{"key": 1, "length": 16, "offset": 4}],\n+                            "inlineStyleRanges": [],\n+                            "key": "4ec08",\n+                            "text": "The Plone community web site for developers.",\n+                            "type": "unordered-list-item",\n+                        },\n+                        {\n+                            "data": {},\n+                            "depth": 0,\n+                            "entityRanges": [{"key": 2, "length": 27, "offset": 4}],\n+                            "inlineStyleRanges": [],\n+                            "key": "4q5m2",\n+                            "text": "The Python programming language web site.",\n+                            "type": "unordered-list-item",\n+                        },\n+                    ],\n+                    "entityMap": {\n+                        "0": {\n+                            "data": {"url": "https://plone.com/"},\n+                            "mutability": "MUTABLE",\n+                            "type": "LINK",\n+                        },\n+                        "1": {\n+                            "data": {"url": "https://plone.org/"},\n+                            "mutability": "MUTABLE",\n+                            "type": "LINK",\n+                        },\n+                        "2": {\n+                            "data": {"url": "https://www.python.org/"},\n+                            "mutability": "MUTABLE",\n+                            "type": "LINK",\n+                        },\n+                    },\n+                },\n+            },\n+            "3b5ac7a5-2d98-423e-807c-5eebc0bf0054": {"@type": "system"},\n+        },\n+        "blocks_layout": {\n+            "items": [\n+                "07c273fc-8bfc-4e7d-a327-d513e5a945bb",\n+                "0358abe2-b4f1-463d-a279-a63ea80daf19",\n+                "b3717238-448f-406e-b06f-57a9715c3326",\n+                "5e1c30b1-ec6c-4dc0-9483-9768c3c416e4",\n+                "effbdcdc-253c-41a7-841e-5edb3b56ce32",\n+                "942b6530-2407-420f-9c24-597adda6b2ce",\n+                "8bba235c-7a52-4ce2-bde1-c505e5746dce",\n+                "5f7e6846-e27c-48c4-8c9a-f0d93eadb185",\n+                "61cc1bc0-d4f5-4e2b-9152-79512045a4dd",\n+                "c049ff8b-3e5a-4cfb-bca6-e4a6cca9be28",\n+                "3b5ac7a5-2d98-423e-807c-5eebc0bf0054",\n+                "9a976b8e-72ba-468a-bea8-b37a31bb386b",\n+                "3c881f51-f75b-4959-834a-6e1d5edc32ae",\n+                "c91f0fe9-f2e9-4a17-84a5-8e4f2678ed3c",\n+                "2dfe8e4c-5bf6-43f1-93e1-6c320ede7226",\n+                "874049e7-629e-489a-b46c-1adf35ad40ee",\n+                "e0ca2fbc-7800-4b9b-afe5-8e42af9f5dd6",\n+            ]\n+        },\n+    },\n+    "slate": {\n+        "title": "Welcome to Plone 6!",\n+        "description": "Congratulations! You have successfully installed Plone.",\n+        "blocks": {\n+            "0358abe2-b4f1-463d-a279-a63ea80daf19": {"@type": "description"},\n+            "07c273fc-8bfc-4e7d-a327-d513e5a945bb": {"@type": "title"},\n+            "3b5ac7a5-2d98-423e-807c-5eebc0bf0054": {"@type": "system"},\n+            "bedf0ed6-3237-46ac-8c91-994826b1cf05": {\n+                "@type": "slate",\n+                "value": [\n+                    {\n+                        "type": "h2",\n+                        "children": [{"text": "Find out more about Plone"}],\n+                    }\n+                ],\n+                "plaintext": "Find out more about Plone",\n+            },\n+            "577b38a2-84ed-4911-9644-72b73b79bf9b": {\n+                "@type": "slate",\n+                "value": [\n+                    {\n+                        "type": "p",\n+                        "children": [\n+                            {\n+                                "text": "Plone is a powerful content management system built on a rock-solid application stack written using the Python programming language. More about these technologies:"\n+                            }\n+                        ],\n+                    }\n+                ],\n+                "plaintext": "Plone is a powerful content management system built on a rock-solid application stack written using the Python programming language. More about these technologies:",\n+            },\n+            "539b7bb6-23e1-425c-8d93-70c03d52806e": {\n+                "@type": "slate",\n+                "value": [\n+                    {\n+                        "type": "ul",\n+                        "children": [\n+                            {\n+                                "type": "li",\n+                                "children": [\n+                                    {"text": "The "},\n+                                    {\n+                                        "type": "link",\n+                                        "data": {"url": "https://plone.com/"},\n+                                        "children": [\n+                                            {\n+                                                "text": "Plone open source Content Management System"\n+                                            }\n+                                        ],\n+                                    },\n+                                    {\n+                                        "text": " web site for evaluators and decision makers."\n+                                    },\n+                                ],\n+                            },\n+                            {\n+                                "type": "li",\n+                                "children": [\n+                                    {"text": "The "},\n+                                    {\n+                                        "type": "link",\n+                                        "data": {"url": "https://plone.org/"},\n+                                        "children": [{"text": "Plone community "}],\n+                                    },\n+                                    {"text": "web site for developers."},\n+                                ],\n+                            },\n+                            {\n+                                "type": "li",\n+                                "children": [\n+                                    {"text": "The "},\n+                                    {\n+                                        "type": "link",\n+                                        "data": {"url": "https://www.python.org/"},\n+                                        "children": [\n+                                            {"text": "Python programming language"}\n+                                        ],\n+                                    },\n+                                    {"text": " web site."},\n+                                ],\n+                            },\n+                        ],\n+                    }\n+                ],\n+                "plaintext": "The Plone open source Content Management System web site for evaluators and decision makers. The Plone community web site for developers. The Python programming language web site.",\n+            },\n+            "5d166d4b-195b-4dc2-ac11-8d283673ee8d": {\n+                "@type": "slate",\n+                "value": [\n+                    {\n+                        "type": "h2",\n+                        "children": [{"text": "Support the Plone Foundation"}],\n+                    }\n+                ],\n+                "plaintext": "Support the Plone Foundation",\n+            },\n+            "8696b042-7119-4700-9e7f-2b22e8982a7b": {\n+                "@type": "slate",\n+                "value": [\n+                    {\n+                        "type": "p",\n+                        "children": [\n+                            {\n+                                "text": "Plone is made possible only through the efforts of thousands of dedicated individuals and hundreds of companies. The Plone Foundation:"\n+                            }\n+                        ],\n+                    }\n+                ],\n+                "plaintext": "Plone is made possible only through the efforts of thousands of dedicated individuals and hundreds of companies. The Plone Foundation:",\n+            },\n+            "7ab29abe-b38c-406b-94d7-b270e544a998": {\n+                "@type": "slate",\n+                "value": [\n+                    {\n+                        "type": "ul",\n+                        "children": [\n+                            {\n+                                "type": "li",\n+                                "children": [\n+                                    {"text": "\\u2026protects and promotes Plone."}\n+                                ],\n+                            },\n+                            {\n+                                "type": "li",\n+                                "children": [\n+                                    {\n+                                        "text": "\\u2026is a registered 501(c)(3) charitable organization."\n+                                    }\n+                                ],\n+                            },\n+                            {\n+                                "type": "li",\n+                                "children": [\n+                                    {"text": "\\u2026donations are tax-deductible."}\n+                                ],\n+                            },\n+                            {\n+                                "type": "li",\n+                                "children": [\n+                                    {"text": ""},\n+                                    {\n+                                        "type": "link",\n+                                        "data": {\n+                                            "url": "https://plone.org/sponsors/be-a-hero"\n+                                        },\n+                                        "children": [\n+                                            {\n+                                                "text": "Support the Foundation and help make Plone better!"\n+                                            }\n+                                        ],\n+                                    },\n+                                    {"text": ""},\n+                                    {\n+                                        "type": "link",\n+                                        "data": {\n+                                            "url": "https://plone.org/sponsors/be-a-hero"\n+                                        },\n+                                        "children": [{"text": ""}],\n+                                    },\n+                                    {"text": ""},\n+                                ],\n+                            },\n+                        ],\n+                    }\n+                ],\n+                "plaintext": "\\u2026protects and promotes Plone. \\u2026is a registered 501(c)(3) charitable organization. \\u2026donations are tax-deductible.  Support the Foundation and help make Plone better!   ",\n+            },\n+            "e1220183-552c-45d9-a661-5ad0854615ac": {\n+                "@type": "slate",\n+                "value": [{"type": "h2", "children": [{"text": "Demo"}]}],\n+                "plaintext": "Demo",\n+            },\n+            "9509e96d-5718-4687-95c1-f9d3db115b92": {\n+                "@type": "slate",\n+                "value": [\n+                    {\n+                        "type": "p",\n+                        "children": [\n+                            {\n+                                "text": "You can use this site to test Plone 6. These are the versions used in this demo:"\n+                            }\n+                        ],\n+                    }\n+                ],\n+                "plaintext": "You can use this site to test Plone 6. These are the versions used in this demo:",\n+            },\n+            "2c68bdda-7dd3-4599-9111-db5ffb2230f9": {\n+                "@type": "slate",\n+                "value": [\n+                    {\n+                        "type": "p",\n+                        "children": [\n+                            {\n+                                "text": "You can log in and use it as admin user using these "\n+                            },\n+                            {\n+                                "type": "strong",\n+                                "children": [{"text": "credentials"}],\n+                            },\n+                            {"text": ":"},\n+                        ],\n+                    }\n+                ],\n+                "plaintext": "You can log in and use it as admin user using these credentials :",\n+            },\n+            "93dd5f95-b3e3-4a47-9121-cde08ca07203": {\n+                "@type": "slate",\n+                "value": [\n+                    {\n+                        "type": "p",\n+                        "children": [\n+                            {"text": "user: "},\n+                            {"type": "strong", "children": [{"text": "admin"}]},\n+                            {"text": ""},\n+                        ],\n+                    }\n+                ],\n+                "plaintext": "user: admin ",\n+            },\n+            "3ed49dc1-caf0-41ff-bb41-9153eeaa45da": {\n+                "@type": "slate",\n+                "value": [\n+                    {\n+                        "type": "p",\n+                        "children": [\n+                            {"text": "password: "},\n+                            {"type": "strong", "children": [{"text": "admin"}]},\n+                            {"text": ""},\n+                        ],\n+                    }\n+                ],\n+                "plaintext": "password: admin ",\n+            },\n+            "4b2cd280-3c87-431b-a0fe-d7ec56587bde": {\n+                "@type": "slate",\n+                "value": [\n+                    {\n+                        "type": "p",\n+                        "children": [\n+                            {"text": ""},\n+                            {\n+                                "type": "strong",\n+                                "children": [{"text": "Disclaimer"}],\n+                            },\n+                            {\n+                                "text": ": This instance is reset every night, so all changes will be lost afterwards."\n+                            },\n+                        ],\n+                    }\n+                ],\n+                "plaintext": " Disclaimer : This instance is reset every night, so all changes will be lost afterwards.",\n+            },\n+            "b1d7da87-11d6-4dd2-81f2-0069826ffbd6": {\n+                "@type": "slate",\n+                "value": [{"type": "p", "children": [{"text": "Happy hacking!"}]}],\n+                "plaintext": "Happy hacking!",\n+            },\n+            "a7889552-ad4e-4afb-bbbd-2911661e8cbe": {\n+                "@type": "slate",\n+                "value": [\n+                    {\n+                        "type": "p",\n+                        "children": [\n+                            {"text": f"{datetime.now().year} - Plone Foundation"}\n+                        ],\n+                    }\n+                ],\n+                "plaintext": f"{datetime.now().year} - Plone Foundation",\n+            },\n+        },\n+        "blocks_layout": {\n+            "items": [\n+                "07c273fc-8bfc-4e7d-a327-d513e5a945bb",\n+                "0358abe2-b4f1-463d-a279-a63ea80daf19",\n+                "bedf0ed6-3237-46ac-8c91-994826b1cf05",\n+                "577b38a2-84ed-4911-9644-72b73b79bf9b",\n+                "539b7bb6-23e1-425c-8d93-70c03d52806e",\n+                "5d166d4b-195b-4dc2-ac11-8d283673ee8d",\n+                "8696b042-7119-4700-9e7f-2b22e8982a7b",\n+                "7ab29abe-b38c-406b-94d7-b270e544a998",\n+                "e1220183-552c-45d9-a661-5ad0854615ac",\n+                "9509e96d-5718-4687-95c1-f9d3db115b92",\n+                "3b5ac7a5-2d98-423e-807c-5eebc0bf0054",\n+                "2c68bdda-7dd3-4599-9111-db5ffb2230f9",\n+                "93dd5f95-b3e3-4a47-9121-cde08ca07203",\n+                "3ed49dc1-caf0-41ff-bb41-9153eeaa45da",\n+                "4b2cd280-3c87-431b-a0fe-d7ec56587bde",\n+                "b1d7da87-11d6-4dd2-81f2-0069826ffbd6",\n+                "a7889552-ad4e-4afb-bbbd-2911661e8cbe",\n+            ]\n+        },\n+    },\n+}\ndiff --git a/src/plone/volto/default_homepage/lrf.py b/src/plone/volto/default_homepage/lrf.py\nnew file mode 100644\nindex 0000000..ff997de\n--- /dev/null\n+++ b/src/plone/volto/default_homepage/lrf.py\n@@ -0,0 +1,55 @@\n+default_lrf_home = {\n+    "draftJS": {\n+        "blocks": {\n+            "15068807-cfc9-444a-97db-8c736809ff52": {"@type": "title"},\n+            "59d41d8a-ef05-4e21-8820-2a64f5878092": {\n+                "@type": "text",\n+                "text": {\n+                    "blocks": [\n+                        {\n+                            "key": "618bl",\n+                            "text": "Nulla porttitor accumsan tincidunt. Sed porttitor lectus nibh. Praesent sapien massa, convallis a pellentesque nec, egestas non nisi. Nulla porttitor accumsan tincidunt. Nulla porttitor accumsan tincidunt. Nulla porttitor accumsan tincidunt. Quisque velit nisi, pretium ut lacinia in, elementum id enim. Vestibulum ac diam sit amet quam vehicula elementum sed sit amet dui. Sed porttitor lectus nibh. Pellentesque in ipsum id orci porta dapibus.",\n+                            "type": "unstyled",\n+                            "depth": 0,\n+                            "inlineStyleRanges": [],\n+                            "entityRanges": [],\n+                            "data": {},\n+                        }\n+                    ],\n+                    "entityMap": {},\n+                },\n+            },\n+        },\n+        "blocks_layout": {\n+            "items": [\n+                "15068807-cfc9-444a-97db-8c736809ff52",\n+                "59d41d8a-ef05-4e21-8820-2a64f5878092",\n+            ]\n+        },\n+    },\n+    "slate": {\n+        "blocks": {\n+            "15068807-cfc9-444a-97db-8c736809ff52": {"@type": "title"},\n+            "59d41d8a-ef05-4e21-8820-2a64f5878092": {\n+                "@type": "slate",\n+                "value": [\n+                    {\n+                        "type": "p",\n+                        "children": [\n+                            {\n+                                "text": "Nulla porttitor accumsan tincidunt. Sed porttitor lectus nibh. Praesent sapien massa, convallis a pellentesque nec, egestas non nisi. Nulla porttitor accumsan tincidunt. Nulla porttitor accumsan tincidunt. Nulla porttitor accumsan tincidunt. Quisque velit nisi, pretium ut lacinia in, elementum id enim. Vestibulum ac diam sit amet quam vehicula elementum sed sit amet dui. Sed porttitor lectus nibh. Pellentesque in ipsum id orci porta dapibus."\n+                            }\n+                        ],\n+                    }\n+                ],\n+                "plaintext": "Nulla porttitor accumsan tincidunt. Sed porttitor lectus nibh. Praesent sapien massa, convallis a pellentesque nec, egestas non nisi. Nulla porttitor accumsan tincidunt. Nulla porttitor accumsan tincidunt. Nulla porttitor accumsan tincidunt. Quisque velit nisi, pretium ut lacinia in, elementum id enim. Vestibulum ac diam sit amet quam vehicula elementum sed sit amet dui. Sed porttitor lectus nibh. Pellentesque in ipsum id orci porta dapibus.",\n+            },\n+        },\n+        "blocks_layout": {\n+            "items": [\n+                "15068807-cfc9-444a-97db-8c736809ff52",\n+                "59d41d8a-ef05-4e21-8820-2a64f5878092",\n+            ]\n+        },\n+    },\n+}\ndiff --git a/src/plone/volto/dependencies.zcml b/src/plone/volto/dependencies.zcml\nindex d34667f..bd61c7d 100644\n--- a/src/plone/volto/dependencies.zcml\n+++ b/src/plone/volto/dependencies.zcml\n@@ -18,6 +18,5 @@\n       />\n   <include package="plone.restapi" />\n   <include package="plone.api" />\n-  <include package="collective.folderishtypes" />\n \n </configure>\ndiff --git a/src/plone/volto/interfaces.py b/src/plone/volto/interfaces.py\nindex 41701c5..9938251 100644\n--- a/src/plone/volto/interfaces.py\n+++ b/src/plone/volto/interfaces.py\n@@ -9,6 +9,10 @@ class IPloneVoltoCoreLayer(IDefaultBrowserLayer):\n     """Marker interface that defines a browser layer."""\n \n \n+class IThemeSpecific(IPloneVoltoCoreLayer):\n+    """bbb for collective.folderishtypes browser interface."""\n+\n+\n class IVoltoSettings(Interface):\n     """Volto settings necessary to store in the backend"""\n \n@@ -17,3 +21,19 @@ class IVoltoSettings(Interface):\n         description=u"Used for rewriting URL\'s sent in the password reset e-mail by Plone.",\n         default="http://localhost:3000",\n     )\n+\n+\n+class IFolderishType(Interface):\n+    """Marker interface"""\n+\n+\n+class IFolderishDocument(IFolderishType):\n+    """Marker interface"""\n+\n+\n+class IFolderishEvent(IFolderishType):\n+    """Marker interface"""\n+\n+\n+class IFolderishNewsItem(IFolderishType):\n+    """Marker interface"""\ndiff --git a/src/plone/volto/locales/es/LC_MESSAGES/plone.volto.po b/src/plone/volto/locales/es/LC_MESSAGES/plone.volto.po\nnew file mode 100644\nindex 0000000..30df2b3\n--- /dev/null\n+++ b/src/plone/volto/locales/es/LC_MESSAGES/plone.volto.po\n@@ -0,0 +1,114 @@\n+# --- PLEASE EDIT THE LINES BELOW CORRECTLY ---\n+# SOME DESCRIPTIVE TITLE.\n+# Mikel Larreategi <mlarreategi@codesyntax.com>, 2021.\n+msgid ""\n+msgstr ""\n+"Project-Id-Version: \\n"\n+"POT-Creation-Date: 2021-11-18 08:27+0000\\n"\n+"PO-Revision-Date: 2021-11-21 16:58+0100\\n"\n+"MIME-Version: 1.0\\n"\n+"Content-Type: text/plain; charset=utf-8\\n"\n+"Content-Transfer-Encoding: 8bit\\n"\n+"Plural-Forms: nplurals=1; plural=0;\\n"\n+"Language-Code: es\\n"\n+"Language-Name: Spanish\\n"\n+"Preferred-Encodings: utf-8 latin1\\n"\n+"Domain: plone.volto\\n"\n+"Last-Translator: \\n"\n+"Language-Team: \\n"\n+"Language: es\\n"\n+"X-Generator: Poedit 2.3\\n"\n+\n+#: plone/volto/behaviors/configure.zcml:31\n+msgid "Adds Head title field"\n+msgstr "A\xc3\xb1ade el campo de t\xc3\xadtulo de cabecera"\n+\n+#: plone/volto/configure.zcml:37\n+msgid "Configures the Plone backend to work with Volto, the new default frontend for Plone 6."\n+msgstr "Configura Plone para funcionar con Volto, el nuevo frontal de Plone 6."\n+\n+#: plone/volto/configure.zcml:55\n+msgid "Creates a default page for the site"\n+msgstr "Crea la p\xc3\xa1gina por defecto del sitio"\n+\n+#: plone/volto/behaviors/configure.zcml:31\n+msgid "Head title field"\n+msgstr "Campo de t\xc3\xadtulo de cabecera"\n+\n+#: plone/volto/behaviors/headtitle.py:13\n+msgid "Header title"\n+msgstr "T\xc3\xadtulo de cabecera"\n+\n+#: plone/volto/behaviors/headtitle.py:15\n+msgid "Header title should consist of year and number of the report"\n+msgstr "El t\xc3\xadtulo de cabecera deber\xc3\xada tener el a\xc3\xb1o y n\xc3\xbamero de informe"\n+\n+#: plone/volto/behaviors/configure.zcml:24 plone/volto/behaviors/navtitle.py:12\n+msgid "Navigation title"\n+msgstr "T\xc3\xadtulo de la navegaci\xc3\xb3n"\n+\n+#: plone/volto/behaviors/configure.zcml:24\n+msgid "Navigation title used in sections, menus and doormats"\n+msgstr "T\xc3\xadtulo de la navegaci\xc3\xb3n utilizado en secciones, men\xc3\xbas y acordeones"\n+\n+#: plone/volto/configure.zcml:55\n+msgid "Plone 6 Frontend (Default content on homepage)"\n+msgstr "Frontal Plone 6 (contenido por defecto en la portada)"\n+\n+#: plone/volto/configure.zcml:37\n+msgid "Plone 6 Frontend (plone.volto)"\n+msgstr "Frontal Plone 6 (plone.volto)"\n+\n+#: plone/volto/configure.zcml:46\n+msgid "Plone 6 Frontend (plone.volto): uninstall"\n+msgstr "Frontal Plone 6 (plone.volto): desinstalar"\n+\n+#: plone/volto/behaviors/configure.zcml:17\n+msgid "Preview Image"\n+msgstr "Imagen"\n+\n+#: plone/volto/behaviors/preview.py:23\n+msgid "Preview image caption"\n+msgstr "Preview image caption"\n+\n+#: plone/volto/behaviors/configure.zcml:17\n+msgid "Preview image for listings"\n+msgstr "Imagen para listados"\n+\n+#: plone/volto/configure.zcml:64\n+msgid "Special requirements and setup for demo site"\n+msgstr "Configuraci\xc3\xb3n especial para instalar el sitio de demo"\n+\n+#: plone/volto/configure.zcml:73\n+msgid "Special test fixture for multilingual use case"\n+msgstr "Perfil especial para configurar los tests de un sitio multiling\xc3\xbce"\n+\n+#: plone/volto/configure.zcml:81\n+msgid "Specific profile for re-adding the richtext behavior"\n+msgstr "Perfil espec\xc3\xadfico para a\xc3\xb1adir otra vez el comportamiento de texto"\n+\n+#: plone/volto/configure.zcml:46\n+msgid "Uninstalls the plone.volto add-on."\n+msgstr "Desinstalar plone.volto"\n+\n+#. Default: "Insert an image that will be used in listing and teaser blocks."\n+#: plone/volto/behaviors/preview.py:15\n+msgid "help_previewimage"\n+msgstr "Introduzca la imagen que se utilizar\xc3\xa1 en los listados y otros bloques"\n+\n+#. Default: "Preview image"\n+#: plone/volto/behaviors/preview.py:14\n+msgid "label_previewimage"\n+msgstr "Imagen"\n+\n+#: plone/volto/configure.zcml:64\n+msgid "plone.volto demo special requirements"\n+msgstr "Requisitos especiales de la demo de plone.volto"\n+\n+#: plone/volto/configure.zcml:73\n+msgid "plone.volto multilingual Cypress tests fixtures"\n+msgstr "Tests de plone.volto multiling\xc3\xbce"\n+\n+#: plone/volto/configure.zcml:81\n+msgid "plone.volto p51 profile"\n+msgstr "Perfil plone.volto p51"\ndiff --git a/src/plone/volto/locales/eu/LC_MESSAGES/plone.volto.po b/src/plone/volto/locales/eu/LC_MESSAGES/plone.volto.po\nnew file mode 100644\nindex 0000000..2d307f5\n--- /dev/null\n+++ b/src/plone/volto/locales/eu/LC_MESSAGES/plone.volto.po\n@@ -0,0 +1,114 @@\n+# --- PLEASE EDIT THE LINES BELOW CORRECTLY ---\n+# SOME DESCRIPTIVE TITLE.\n+# Mikel Larreategi <mlarreategi@codesyntax.com>, 2021\n+msgid ""\n+msgstr ""\n+"Project-Id-Version: \\n"\n+"POT-Creation-Date: 2021-11-18 08:27+0000\\n"\n+"PO-Revision-Date: 2021-11-21 16:50+0100\\n"\n+"MIME-Version: 1.0\\n"\n+"Content-Type: text/plain; charset=utf-8\\n"\n+"Content-Transfer-Encoding: 8bit\\n"\n+"Plural-Forms: nplurals=1; plural=0;\\n"\n+"Language-Code: eu\\n"\n+"Language-Name: Basque\\n"\n+"Preferred-Encodings: utf-8 latin1\\n"\n+"Domain: plone.volto\\n"\n+"Last-Translator: \\n"\n+"Language-Team: \\n"\n+"Language: eu\\n"\n+"X-Generator: Poedit 2.3\\n"\n+\n+#: plone/volto/behaviors/configure.zcml:31\n+msgid "Adds Head title field"\n+msgstr "Goiburuko izenburua gehitu"\n+\n+#: plone/volto/configure.zcml:37\n+msgid "Configures the Plone backend to work with Volto, the new default frontend for Plone 6."\n+msgstr "Plone Voltorekin funtzionatzeko konfiguratzen du, Plone 6rako Frontend berria."\n+\n+#: plone/volto/configure.zcml:55\n+msgid "Creates a default page for the site"\n+msgstr "Atariaren defektuzko orri berria sortzen du"\n+\n+#: plone/volto/behaviors/configure.zcml:31\n+msgid "Head title field"\n+msgstr "Goiburuko izenburuaren eremua"\n+\n+#: plone/volto/behaviors/headtitle.py:13\n+msgid "Header title"\n+msgstr "Goiburuko izenburua"\n+\n+#: plone/volto/behaviors/headtitle.py:15\n+msgid "Header title should consist of year and number of the report"\n+msgstr "Goiburukoan erabiliko den izenburua"\n+\n+#: plone/volto/behaviors/configure.zcml:24 plone/volto/behaviors/navtitle.py:12\n+msgid "Navigation title"\n+msgstr "Nabigazioaren izenburua"\n+\n+#: plone/volto/behaviors/configure.zcml:24\n+msgid "Navigation title used in sections, menus and doormats"\n+msgstr "Atal, menu eta akordeoietan erabiliko den nabigazioaren izenburua"\n+\n+#: plone/volto/configure.zcml:55\n+msgid "Plone 6 Frontend (Default content on homepage)"\n+msgstr "Plone 6 Frontenda (hasiera orria defektuzko edukiarekin)"\n+\n+#: plone/volto/configure.zcml:37\n+msgid "Plone 6 Frontend (plone.volto)"\n+msgstr "Plone 6 Frontenda (plone.volto)"\n+\n+#: plone/volto/configure.zcml:46\n+msgid "Plone 6 Frontend (plone.volto): uninstall"\n+msgstr "Plone 6 Frontenda (plone.volto): kendu"\n+\n+#: plone/volto/behaviors/configure.zcml:17\n+msgid "Preview Image"\n+msgstr "Irudia"\n+\n+#: plone/volto/behaviors/preview.py:23\n+msgid "Preview image caption"\n+msgstr "Irudi-oina"\n+\n+#: plone/volto/behaviors/configure.zcml:17\n+msgid "Preview image for listings"\n+msgstr "Zerrendetan erabiliko den irudia"\n+\n+#: plone/volto/configure.zcml:64\n+msgid "Special requirements and setup for demo site"\n+msgstr "Demo webgunea konfiguratzeko profil berezia"\n+\n+#: plone/volto/configure.zcml:73\n+msgid "Special test fixture for multilingual use case"\n+msgstr "Webgune eleanitzetan erabiltzeko profila"\n+\n+#: plone/volto/configure.zcml:81\n+msgid "Specific profile for re-adding the richtext behavior"\n+msgstr "Testu aberatseko portaera gehitzeko profila"\n+\n+#: plone/volto/configure.zcml:46\n+msgid "Uninstalls the plone.volto add-on."\n+msgstr "plone.volto kendu"\n+\n+#. Default: "Insert an image that will be used in listing and teaser blocks."\n+#: plone/volto/behaviors/preview.py:15\n+msgid "help_previewimage"\n+msgstr "Kargatu zerrendetan eta destakatuen blokeetan defektuz erabiliko den irudia"\n+\n+#. Default: "Preview image"\n+#: plone/volto/behaviors/preview.py:14\n+msgid "label_previewimage"\n+msgstr "Irudia"\n+\n+#: plone/volto/configure.zcml:64\n+msgid "plone.volto demo special requirements"\n+msgstr "plone.volto demoren konfigurazio berezia"\n+\n+#: plone/volto/configure.zcml:73\n+msgid "plone.volto multilingual Cypress tests fixtures"\n+msgstr "plone.volto eleanitzaren Cypress testen konfigurazioa"\n+\n+#: plone/volto/configure.zcml:81\n+msgid "plone.volto p51 profile"\n+msgstr "plone.volto p51 profila"\ndiff --git a/src/plone/volto/patches.py b/src/plone/volto/patches.py\nindex 6baeff4..24ba8c7 100644\n--- a/src/plone/volto/patches.py\n+++ b/src/plone/volto/patches.py\n@@ -1,3 +1,7 @@\n+from plone.app.upgrade.utils import alias_module\n+from plone.volto import logger\n+from plone.volto import content\n+from plone.volto import interfaces\n from plone.volto.interfaces import IVoltoSettings\n from plone.registry.interfaces import IRegistry\n from plone.rest.interfaces import IAPIRequest\n@@ -12,6 +16,15 @@\n LOG = logging.getLogger("Zope.SiteErrorLog")\n \n \n+try:\n+    from collective.folderishtypes.dx import content  # noqa F401\n+except ImportError:\n+    logger.info("Aliasing collective.folderish classes to plone.volto classes.")\n+    alias_module("collective.folderishtypes.dx.content", content)\n+    alias_module("collective.folderishtypes.dx.interfaces", interfaces)\n+    alias_module("collective.folderishtypes.interfaces", interfaces)\n+\n+\n def _do_copy_to_zlog(self, now, strtype, entry_id, url, tb_text):\n     when = _rate_restrict_pool.get(strtype, 0)\n     if now > when:\ndiff --git a/src/plone/volto/profiles.zcml b/src/plone/volto/profiles.zcml\nnew file mode 100644\nindex 0000000..99f116f\n--- /dev/null\n+++ b/src/plone/volto/profiles.zcml\n@@ -0,0 +1,86 @@\n+<configure\n+    xmlns="http://namespaces.zope.org/zope"\n+    xmlns:genericsetup="http://namespaces.zope.org/genericsetup"\n+    xmlns:i18n="http://namespaces.zope.org/i18n"\n+    i18n_domain="plone.volto"\n+    >\n+\n+  <genericsetup:registerProfile\n+      name="default"\n+      title="Plone 6 Frontend (plone.volto)"\n+      description="Configures the Plone backend to work with Volto, the new default frontend for Plone 6."\n+      provides="Products.GenericSetup.interfaces.EXTENSION"\n+      directory="profiles/default"\n+      post_handler=".setuphandlers.post_install"\n+      />\n+\n+  <genericsetup:registerProfile\n+      name="uninstall"\n+      title="Plone 6 Frontend (plone.volto): uninstall"\n+      description="Uninstalls the plone.volto add-on."\n+      provides="Products.GenericSetup.interfaces.EXTENSION"\n+      directory="profiles/uninstall"\n+      post_handler=".setuphandlers.uninstall"\n+      />\n+\n+  <genericsetup:registerProfile\n+      name="default-homepage"\n+      title="Plone 6 Frontend (Default content on homepage)"\n+      description="Creates a default page for the site"\n+      provides="Products.GenericSetup.interfaces.EXTENSION"\n+      directory="profiles/homepage"\n+      post_handler=".setuphandlers.create_default_homepage"\n+      />\n+\n+  <genericsetup:registerProfile\n+      name="default-homepage-drafjs"\n+      title="Plone 6 Frontend (Default content on homepage with draftJS blocks)"\n+      description="Creates a default page for the site using (legacy) draftJS blocks"\n+      provides="Products.GenericSetup.interfaces.EXTENSION"\n+      directory="profiles/homepage"\n+      post_handler=".setuphandlers.create_default_homepage_draftjs"\n+      />\n+\n+  <genericsetup:registerProfile\n+      name="demo"\n+      title="plone.volto demo special requirements"\n+      description="Special requirements and setup for demo site"\n+      provides="Products.GenericSetup.interfaces.EXTENSION"\n+      directory="profiles/demo"\n+      post_handler=".setuphandlers.create_demo_homepage"\n+      />\n+\n+  <!-- Fixture for coresandbox Cypress tests in Volto repo -->\n+  <genericsetup:registerProfile\n+      name="coresandbox"\n+      title="plone.volto coresandbox Cypress tests fixtures"\n+      description="Special test fixture for coresandbox use cases"\n+      provides="Products.GenericSetup.interfaces.EXTENSION"\n+      directory="profiles/coresandbox"\n+      post_handler=".setuphandlers.post_install_coresandbox"\n+      />\n+\n+  <!-- Fixture for multilingual Cypress tests in Volto repo -->\n+  <genericsetup:registerProfile\n+      name="multilingual"\n+      title="plone.volto multilingual Cypress tests fixtures"\n+      description="Special test fixture for multilingual use case"\n+      provides="Products.GenericSetup.interfaces.EXTENSION"\n+      directory="profiles/multilingual"\n+      post_handler=".setuphandlers.post_install_multilingual"\n+      />\n+\n+  <genericsetup:registerProfile\n+      name="richtext"\n+      title="plone.volto p51 profile"\n+      description="Specific profile for re-adding the richtext behavior"\n+      provides="Products.GenericSetup.interfaces.EXTENSION"\n+      directory="profiles/richtext"\n+      />\n+\n+  <utility\n+      factory=".setuphandlers.HiddenProfiles"\n+      name="plone.volto-hiddenprofiles"\n+      />\n+\n+</configure>\ndiff --git a/src/plone/volto/profiles/default/metadata.xml b/src/plone/volto/profiles/default/metadata.xml\nindex 36539e9..f746bae 100644\n--- a/src/plone/volto/profiles/default/metadata.xml\n+++ b/src/plone/volto/profiles/default/metadata.xml\n@@ -1,8 +1,7 @@\n <?xml version="1.0" encoding="UTF-8"?>\n <metadata>\n-  <version>1012</version>\n+  <version>1016</version>\n   <dependencies>\n-    <dependency>profile-collective.folderishtypes.dx:default</dependency>\n     <dependency>profile-plone.restapi:blocks</dependency>\n   </dependencies>\n </metadata>\ndiff --git a/src/plone/volto/profiles/default/types.xml b/src/plone/volto/profiles/default/types.xml\nindex fee4cc8..7c70ee9 100644\n--- a/src/plone/volto/profiles/default/types.xml\n+++ b/src/plone/volto/profiles/default/types.xml\n@@ -3,4 +3,7 @@\n   <object name="Plone Site" />\n   <object meta_type="Dexterity FTI" name="LRF" />\n   <object meta_type="Dexterity FTI" name="Document" />\n+  <object meta_type="Dexterity FTI" name="Event" />\n+  <object meta_type="Dexterity FTI" name="News Item" />\n+  <object meta_type="Dexterity FTI" name="Collection" />\n </object>\ndiff --git a/src/plone/volto/profiles/default/types/Collection.xml b/src/plone/volto/profiles/default/types/Collection.xml\nnew file mode 100644\nindex 0000000..c7299d5\n--- /dev/null\n+++ b/src/plone/volto/profiles/default/types/Collection.xml\n@@ -0,0 +1,8 @@\n+<?xml version="1.0"?>\n+<object name="Collection" meta_type="Dexterity FTI" i18n:domain="plone"\n+   xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n+\n+  <!-- Collections in Volto are disabled by default -->\n+  <property name="global_allow">False</property>\n+\n+</object>\ndiff --git a/src/plone/volto/profiles/default/types/Document.xml b/src/plone/volto/profiles/default/types/Document.xml\nindex 88e2284..9fd8222 100644\n--- a/src/plone/volto/profiles/default/types/Document.xml\n+++ b/src/plone/volto/profiles/default/types/Document.xml\n@@ -5,8 +5,12 @@\n     name="Document"\n     xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n \n+  <property name="filter_content_types">False</property>\n+  <property name="klass">plone.volto.content.FolderishDocument</property>\n+\n   <!-- Enabled behaviors -->\n   <property name="behaviors">\n+    <element value="plone.constraintypes"/>\n     <element value="plone.namefromtitle" />\n     <element value="plone.allowdiscussion" />\n     <element value="plone.excludefromnavigation" />\ndiff --git a/src/plone/volto/profiles/default/types/Event.xml b/src/plone/volto/profiles/default/types/Event.xml\nnew file mode 100644\nindex 0000000..54317cd\n--- /dev/null\n+++ b/src/plone/volto/profiles/default/types/Event.xml\n@@ -0,0 +1,11 @@\n+<?xml version="1.0"?>\n+<object name="Event" meta_type="Dexterity FTI" i18n:domain="plone"\n+    xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n+  <property name="filter_content_types">False</property>\n+  <property name="klass">plone.volto.content.FolderishEvent</property>\n+  <property name="behaviors" purge="false">\n+    <element value="plone.constraintypes"/>\n+    <element value="volto.blocks" />\n+    <element value="volto.preview_image" />\n+  </property>\n+</object>\ndiff --git a/src/plone/volto/profiles/default/types/News_Item.xml b/src/plone/volto/profiles/default/types/News_Item.xml\nnew file mode 100644\nindex 0000000..66066c3\n--- /dev/null\n+++ b/src/plone/volto/profiles/default/types/News_Item.xml\n@@ -0,0 +1,10 @@\n+<?xml version="1.0"?>\n+<object name="News Item" meta_type="Dexterity FTI" i18n:domain="plone"\n+    xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n+  <property name="filter_content_types">False</property>\n+  <property name="klass">plone.volto.content.FolderishNewsItem</property>\n+  <property name="behaviors" purge="false">\n+    <element value="plone.constraintypes"/>\n+    <element value="volto.blocks" />\n+  </property>\n+</object>\ndiff --git a/src/plone/volto/profiles/default/types/Plone_Site.xml b/src/plone/volto/profiles/default/types/Plone_Site.xml\ndeleted file mode 100644\nindex db7de5d..0000000\n--- a/src/plone/volto/profiles/default/types/Plone_Site.xml\n+++ /dev/null\n@@ -1,14 +0,0 @@\n-<?xml version="1.0"?>\n-<object name="Plone Site"\n-   i18n:domain="plone" xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n- <action\n-    action_id="edit"\n-    category="object"\n-    condition_expr=""\n-    i18n:attributes="title"\n-    title="Edit"\n-    url_expr="string:${object_url}/edit"\n-    visible="True">\n-  <permission value="Manage portal"/>\n- </action>\n-</object>\ndiff --git a/src/plone/volto/setuphandlers.py b/src/plone/volto/setuphandlers.py\nindex 8568fee..ea36cbd 100644\n--- a/src/plone/volto/setuphandlers.py\n+++ b/src/plone/volto/setuphandlers.py\n@@ -2,27 +2,39 @@\n from plone import api\n from plone.app.multilingual.browser.setup import SetupMultilingualSite\n from plone.app.multilingual.setuphandlers import enable_translatable_behavior\n-from plone.app.portlets.utils import assignment_mapping_from_key\n from plone.dexterity.interfaces import IDexterityFTI\n-from plone.portlets.constants import CONTEXT_CATEGORY\n-from plone.portlets.interfaces import IPortletAssignmentMapping\n-from plone.portlets.interfaces import IPortletManager\n+from plone.volto.default_homepage.default import default_home\n+from plone.volto.default_homepage.demo import demo_home_page\n+from plone.volto.default_homepage.lrf import default_lrf_home\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.interfaces import INonInstallable\n from Products.CMFPlone.utils import get_installer\n-from zope.component import getMultiAdapter\n-from zope.component import getUtility\n from zope.component import queryUtility\n-from zope.component.interfaces import IFactory\n-from zope.container.interfaces import INameChooser\n from zope.interface import implementer\n \n import json\n import logging\n import transaction\n \n+\n+try:\n+    from Products.CMFPlone.factory import PLONE60MARKER\n+\n+    PLONE60MARKER  # pyflakes\n+except ImportError:\n+    PLONE_6 = False\n+else:\n+    PLONE_6 = True\n+\n logger = logging.getLogger("plone.volto")\n \n+NO_RICHTEXT_BEHAVIOR_CONTENT_TYPES = [\n+    "Plone Site",\n+    "Document",\n+    "News Item",\n+    "Event",\n+]\n+\n \n @implementer(INonInstallable)\n class HiddenProfiles(object):\n@@ -33,8 +45,15 @@ def getNonInstallableProfiles(self):\n \n def post_install(context):\n     """Post install script"""\n-    # portal = api.portal.get()\n-    # create_default_homepage()\n+    # For Plone 6, make sure the blocks behavior is enabled in the root\n+    if PLONE_6:\n+        add_behavior("Plone Site", "volto.blocks")\n+    else:\n+        set_edit_action_in_plone_site_for_plone5(context)\n+\n+    # Remove plone.richtext from content types with blocks enabled\n+    for type_ in NO_RICHTEXT_BEHAVIOR_CONTENT_TYPES:\n+        remove_behavior(type_, "plone.richtext")\n \n \n def uninstall(context):\n@@ -49,7 +68,7 @@ def post_install_coresandbox(context):\n def post_install_multilingual(context):\n     """Post install script for multilingual fixture"""\n     enable_pam(context)\n-    create_default_homepage(context)\n+    create_default_homepage(context, block_type="slate")\n \n \n def enable_pam(portal):\n@@ -133,97 +152,74 @@ def add_catalog_indexes(context, wanted=None):\n \n def add_behavior(portal_type, behavior):\n     fti = queryUtility(IDexterityFTI, name=portal_type)\n-    new = [\n-        currentbehavior\n-        for currentbehavior in fti.behaviors\n-        if currentbehavior != behavior\n-    ]\n-    new.append(behavior)\n-    fti.behaviors = tuple(new)\n-\n-\n-def setupNavigationPortlet(\n-    context,\n-    name="",\n-    root=None,\n-    includeTop=False,\n-    currentFolderOnly=False,\n-    bottomLevel=0,\n-    topLevel=0,\n-):\n-    """\n-    setupNavigationPortlet(portal[\'vereinigungen\'][\'fachliche-vereinigungen\'][\'sektion-materie-und-kosmos\'][\'gravitation-und-relativitaetstheorie\']) # noqa\n-    """\n-    from plone.app.portlets.portlets.navigation import (\n-        Assignment as NavAssignment,\n-    )  # noqa\n-\n-    target_manager = queryUtility(\n-        IPortletManager, name="plone.leftcolumn", context=context\n-    )\n-    target_manager_assignments = getMultiAdapter(\n-        (context, target_manager), IPortletAssignmentMapping\n-    )\n-\n-    navtree = NavAssignment(\n-        includeTop=includeTop,\n-        currentFolderOnly=currentFolderOnly,\n-        bottomLevel=bottomLevel,\n-        topLevel=topLevel,\n-    )\n+    if fti is not None:\n+        # This prevents to add the behavior twice\n+        new = [\n+            currentbehavior\n+            for currentbehavior in fti.behaviors\n+            if currentbehavior != behavior\n+        ]\n+        new.append(behavior)\n+        fti.behaviors = tuple(new)\n \n-    if "navigation" not in target_manager_assignments.keys():\n-        target_manager_assignments["navigation"] = navtree\n \n+def remove_behavior(portal_type, behavior):\n+    fti = queryUtility(IDexterityFTI, name=portal_type)\n+    if fti is not None:\n+        new = [\n+            currentbehavior\n+            for currentbehavior in fti.behaviors\n+            if currentbehavior != behavior\n+        ]\n+        fti.behaviors = tuple(new)\n+\n+\n+def set_edit_action_in_plone_site_for_plone5(context):\n+    pt = api.portal.get_tool("portal_types")\n+    fti = pt.getTypeInfo("Plone Site")\n+\n+    # Plone site Edit action properties\n+    action_id = "edit"\n+    category = "object"\n+    condition = ""\n+    title = "Edit"\n+    action = "string:${object_url}/edit"\n+    visible = "True"\n+    permissions = ["Modify portal content"]\n+    icon_expr = ""\n+    link_target = ""\n+\n+    action_obj = fti.getActionObject(category + "/" + action_id)\n+\n+    if action_obj is None:\n+        fti.addAction(\n+            action_id,\n+            title,\n+            action,\n+            condition,\n+            tuple(permissions),\n+            category,\n+            visible,\n+            icon_expr=icon_expr,\n+            link_target=link_target,\n+        )\n+    else:\n+        action_obj.edit(\n+            title=title,\n+            action=action,\n+            icon_expr=icon_expr,\n+            condition=condition,\n+            permissions=tuple(permissions),\n+            visible=visible,\n+            link_target=link_target,\n+        )\n \n-def setupPortletAt(portal, portlet_type, manager, path, name="", **kw):\n-    """\n-    setupPortletAt(portal, \'portlets.Events\', \'plone.rightcolumn\', \'/vereinigungen/fachliche-vereinigungen/sektion-kondensierte-materie/halbleiterphysik\') # noqa\n-    """\n-    portlet_factory = getUtility(IFactory, name=portlet_type)\n-    assignment = portlet_factory(**kw)\n-    mapping = assignment_mapping_from_key(\n-        portal, manager, CONTEXT_CATEGORY, path, create=True\n-    )\n \n-    if not name:\n-        chooser = INameChooser(mapping)\n-        name = chooser.chooseName(None, assignment)\n-\n-    mapping[name] = assignment\n-\n-\n-default_lrf_home = {\n-    "blocks": {\n-        "15068807-cfc9-444a-97db-8c736809ff52": {"@type": "title"},\n-        "59d41d8a-ef05-4e21-8820-2a64f5878092": {\n-            "@type": "text",\n-            "text": {\n-                "blocks": [\n-                    {\n-                        "key": "618bl",\n-                        "text": "Nulla porttitor accumsan tincidunt. Sed porttitor lectus nibh. Praesent sapien massa, convallis a pellentesque nec, egestas non nisi. Nulla porttitor accumsan tincidunt. Nulla porttitor accumsan tincidunt. Nulla porttitor accumsan tincidunt. Quisque velit nisi, pretium ut lacinia in, elementum id enim. Vestibulum ac diam sit amet quam vehicula elementum sed sit amet dui. Sed porttitor lectus nibh. Pellentesque in ipsum id orci porta dapibus.",\n-                        "type": "unstyled",\n-                        "depth": 0,\n-                        "inlineStyleRanges": [],\n-                        "entityRanges": [],\n-                        "data": {},\n-                    }\n-                ],\n-                "entityMap": {},\n-            },\n-        },\n-    },\n-    "blocks_layout": {\n-        "items": [\n-            "15068807-cfc9-444a-97db-8c736809ff52",\n-            "59d41d8a-ef05-4e21-8820-2a64f5878092",\n-        ]\n-    },\n-}\n+def create_default_homepage_draftjs(context):\n+    create_default_homepage(context, block_type="draftJS")\n \n \n-def create_default_homepage(context, default_home=default_lrf_home):\n+def create_default_homepage(context, default_home=default_lrf_home, block_type=None):\n     """This method allows to pass a dict with the homepage blocks and blocks_layout keys"""\n     portal = api.portal.get()\n     # Test for PAM installed\n@@ -240,6 +236,12 @@ def create_default_homepage(context, default_home=default_lrf_home):\n         # Make sure that the LRFs have the blocks enabled\n         add_behavior("LRF", "volto.blocks")\n \n+        if block_type and block_type in default_home:\n+            home_data = default_home[block_type]\n+        else:\n+            # Default to slate\n+            home_data = default_home["slate"]\n+\n         for lang in api.portal.get_registry_record("plone.available_languages"):\n             # Do not write them if there are blocks set already\n             # Get the attr first, in case it\'s not there yet (error in docker image)\n@@ -250,14 +252,14 @@ def create_default_homepage(context, default_home=default_lrf_home):\n                 logger.info(\n                     "Creating default homepage for {} - PAM enabled".format(lang)\n                 )\n-                portal[lang].blocks = default_home["blocks"]\n-                portal[lang].blocks_layout = default_home["blocks_layout"]\n+                portal[lang].blocks = home_data["blocks"]\n+                portal[lang].blocks_layout = home_data["blocks_layout"]\n \n     else:\n-        create_root_homepage(context)\n+        create_root_homepage(context, block_type)\n \n \n-def create_root_homepage(context, default_home=None):\n+def create_root_homepage(context, block_type=None, default_home=default_home):\n     """It takes a default object:\n     {\n         "title": "The title",\n@@ -266,663 +268,41 @@ def create_root_homepage(context, default_home=None):\n         "blocks_layout": [...]\n     }\n     and sets it as default page in the Plone root object.\n-    """\n \n+    Takes into account block_type.\n+    """\n     portal = api.portal.get()\n \n-    if default_home:\n-        blocks = default_home["blocks"]\n-        blocks_layout = default_home["blocks_layout"]\n-        portal.setTitle(default_home["title"])\n-        portal.setDescription(default_home["description"])\n+    if block_type and block_type in default_home:\n+        home_data = default_home[block_type]\n+    else:\n+        # Default to slate\n+        home_data = default_home["slate"]\n \n-        logger.info(\n-            "Creating custom default homepage in Plone site root - not PAM enabled"\n-        )\n+    logger.info(\n+        f"Creating default homepage in Plone {\'6\' if PLONE_6 else \'\'} site root with {block_type} blocks - not PAM enabled"\n+    )\n+\n+    if PLONE_6:\n+        portal.blocks = home_data["blocks"]\n+        portal.blocks_layout = home_data["blocks_layout"]\n+        portal.title = home_data["title"]\n+        portal.description = home_data["description"]\n     else:\n-        blocks = {\n-            "0358abe2-b4f1-463d-a279-a63ea80daf19": {"@type": "description"},\n-            "07c273fc-8bfc-4e7d-a327-d513e5a945bb": {"@type": "title"},\n-            "2dfe8e4c-5bf6-43f1-93e1-6c320ede7226": {\n-                "@type": "text",\n-                "text": {\n-                    "blocks": [\n-                        {\n-                            "data": {},\n-                            "depth": 0,\n-                            "entityRanges": [],\n-                            "inlineStyleRanges": [\n-                                {"length": 10, "offset": 0, "style": "BOLD"}\n-                            ],\n-                            "key": "6470b",\n-                            "text": "Disclaimer: This instance is reset every night, so all changes will be lost afterwards.",\n-                            "type": "unstyled",\n-                        }\n-                    ],\n-                    "entityMap": {},\n-                },\n-            },\n-            "3c881f51-f75b-4959-834a-6e1d5edc32ae": {\n-                "@type": "text",\n-                "text": {\n-                    "blocks": [\n-                        {\n-                            "data": {},\n-                            "depth": 0,\n-                            "entityRanges": [],\n-                            "inlineStyleRanges": [\n-                                {"length": 5, "offset": 6, "style": "BOLD"}\n-                            ],\n-                            "key": "ekn3l",\n-                            "text": "user: admin",\n-                            "type": "unstyled",\n-                        }\n-                    ],\n-                    "entityMap": {},\n-                },\n-            },\n-            "5e1c30b1-ec6c-4dc0-9483-9768c3c416e4": {\n-                "@type": "text",\n-                "text": {\n-                    "blocks": [\n-                        {\n-                            "data": {},\n-                            "depth": 0,\n-                            "entityRanges": [\n-                                {"key": 0, "length": 5, "offset": 0},\n-                                {"key": 1, "length": 8, "offset": 455},\n-                            ],\n-                            "inlineStyleRanges": [],\n-                            "key": "behki",\n-                            "text": "Plone is a CMS built on Python with over 19 years of experience. Plone has very interesting features that appeal to developers and users alike, such as customizable content types, hierarchical URL object traversing and a sophisticated content workflow powered by a granular permissions model. This allows you to build anything from simple websites to enterprise-grade intranets. Volto exposes all these features and communicates with Plone via its mature REST API. Volto can be esily themed and is highly customizable.",\n-                            "type": "unstyled",\n-                        }\n-                    ],\n-                    "entityMap": {\n-                        "0": {\n-                            "data": {\n-                                "href": "https://plone.org",\n-                                "rel": "nofollow",\n-                                "url": "https://plone.org/",\n-                            },\n-                            "mutability": "MUTABLE",\n-                            "type": "LINK",\n-                        },\n-                        "1": {\n-                            "data": {\n-                                "href": "https://github.com/plone/plone.restapi",\n-                                "url": "https://github.com/plone/plone.restapi",\n-                            },\n-                            "mutability": "MUTABLE",\n-                            "type": "LINK",\n-                        },\n-                    },\n-                },\n-            },\n-            "61cc1bc0-d4f5-4e2b-9152-79512045a4dd": {\n-                "@type": "text",\n-                "text": {\n-                    "blocks": [\n-                        {\n-                            "data": {},\n-                            "depth": 0,\n-                            "entityRanges": [],\n-                            "inlineStyleRanges": [],\n-                            "key": "9qsa4",\n-                            "text": "Demo",\n-                            "type": "header-two",\n-                        }\n-                    ],\n-                    "entityMap": {},\n-                },\n-            },\n-            "874049e7-629e-489a-b46c-1adf35ad40ee": {\n-                "@type": "text",\n-                "text": {\n-                    "blocks": [\n-                        {\n-                            "data": {},\n-                            "depth": 0,\n-                            "entityRanges": [],\n-                            "inlineStyleRanges": [],\n-                            "key": "9pnjr",\n-                            "text": "Happy hacking!",\n-                            "type": "unstyled",\n-                        }\n-                    ],\n-                    "entityMap": {},\n-                },\n-            },\n-            "942b6530-2407-420f-9c24-597adda6b2ce": {\n-                "@type": "text",\n-                "text": {\n-                    "blocks": [\n-                        {\n-                            "data": {},\n-                            "depth": 0,\n-                            "entityRanges": [{"key": 0, "length": 36, "offset": 39}],\n-                            "inlineStyleRanges": [],\n-                            "key": "6a248",\n-                            "text": "Last but not least, it also supports a Volto Nodejs-based backend reference API implementation that demos how other systems could also use Volto to display and create content through it.",\n-                            "type": "unstyled",\n-                        }\n-                    ],\n-                    "entityMap": {\n-                        "0": {\n-                            "data": {\n-                                "href": "https://github.com/plone/volto-reference-backend",\n-                                "url": "https://github.com/plone/volto-reference-backend",\n-                            },\n-                            "mutability": "MUTABLE",\n-                            "type": "LINK",\n-                        }\n-                    },\n-                },\n-            },\n-            "9a976b8e-72ba-468a-bea8-b37a31bb386b": {\n-                "@type": "text",\n-                "text": {\n-                    "blocks": [\n-                        {\n-                            "data": {},\n-                            "depth": 0,\n-                            "entityRanges": [],\n-                            "inlineStyleRanges": [\n-                                {"length": 12, "offset": 51, "style": "BOLD"}\n-                            ],\n-                            "key": "94arl",\n-                            "text": "You can log in and use it as admin user using these credentials:",\n-                            "type": "unstyled",\n-                        }\n-                    ],\n-                    "entityMap": {},\n-                },\n-            },\n-            "b3717238-448f-406e-b06f-57a9715c3326": {\n-                "@type": "text",\n-                "text": {\n-                    "blocks": [\n-                        {\n-                            "data": {},\n-                            "depth": 0,\n-                            "entityRanges": [{"key": 0, "length": 5, "offset": 0}],\n-                            "inlineStyleRanges": [],\n-                            "key": "1bnna",\n-                            "text": "Volto is a React-based frontend for content management systems, currently supporting three backend implementations: Plone, Guillotina and a NodeJS reference implementation.",\n-                            "type": "unstyled",\n-                        }\n-                    ],\n-                    "entityMap": {\n-                        "0": {\n-                            "data": {\n-                                "href": "https://github.com/plone/volto",\n-                                "url": "https://github.com/plone/volto",\n-                            },\n-                            "mutability": "MUTABLE",\n-                            "type": "LINK",\n-                        }\n-                    },\n-                },\n-            },\n-            "c049ff8b-3e5a-4cfb-bca6-e4a6cca9be28": {\n-                "@type": "text",\n-                "text": {\n-                    "blocks": [\n-                        {\n-                            "data": {},\n-                            "depth": 0,\n-                            "entityRanges": [],\n-                            "inlineStyleRanges": [],\n-                            "key": "55n44",\n-                            "text": "You can use this site to test Volto. It runs on the master branch of Volto using latest Plone 5.2 Backend running on Python 3.",\n-                            "type": "unstyled",\n-                        }\n-                    ],\n-                    "entityMap": {},\n-                },\n-            },\n-            "c91f0fe9-f2e9-4a17-84a5-8e4f2678ed3c": {\n-                "@type": "text",\n-                "text": {\n-                    "blocks": [\n-                        {\n-                            "data": {},\n-                            "depth": 0,\n-                            "entityRanges": [],\n-                            "inlineStyleRanges": [\n-                                {"length": 5, "offset": 10, "style": "BOLD"}\n-                            ],\n-                            "key": "buncq",\n-                            "text": "password: admin",\n-                            "type": "unstyled",\n-                        }\n-                    ],\n-                    "entityMap": {},\n-                },\n-            },\n-            "e0ca2fbc-7800-4b9b-afe5-8e42af9f5dd6": {\n-                "@type": "text",\n-                "text": {\n-                    "blocks": [\n-                        {\n-                            "data": {},\n-                            "depth": 0,\n-                            "entityRanges": [],\n-                            "inlineStyleRanges": [],\n-                            "key": "f0prj",\n-                            "text": "2020 - Volto Team - Plone Foundation",\n-                            "type": "unstyled",\n-                        }\n-                    ],\n-                    "entityMap": {},\n-                },\n-            },\n-            "effbdcdc-253c-41a7-841e-5edb3b56ce32": {\n-                "@type": "text",\n-                "text": {\n-                    "blocks": [\n-                        {\n-                            "data": {},\n-                            "depth": 0,\n-                            "entityRanges": [{"key": 0, "length": 10, "offset": 36}],\n-                            "inlineStyleRanges": [],\n-                            "key": "68rve",\n-                            "text": "Volto also supports other APIs like Guillotina, a Python resource management system, inspired by Plone and using the same basic concepts like traversal, content types and permissions model.",\n-                            "type": "unstyled",\n-                        }\n-                    ],\n-                    "entityMap": {\n-                        "0": {\n-                            "data": {\n-                                "href": "https://guillotina.io/",\n-                                "rel": "nofollow",\n-                                "url": "https://guillotina.io/",\n-                            },\n-                            "mutability": "MUTABLE",\n-                            "type": "LINK",\n-                        }\n-                    },\n-                },\n-            },\n-        }\n-\n-        blocks_layout = {\n-            "items": [\n-                "07c273fc-8bfc-4e7d-a327-d513e5a945bb",\n-                "0358abe2-b4f1-463d-a279-a63ea80daf19",\n-                "b3717238-448f-406e-b06f-57a9715c3326",\n-                "5e1c30b1-ec6c-4dc0-9483-9768c3c416e4",\n-                "effbdcdc-253c-41a7-841e-5edb3b56ce32",\n-                "942b6530-2407-420f-9c24-597adda6b2ce",\n-                "61cc1bc0-d4f5-4e2b-9152-79512045a4dd",\n-                "c049ff8b-3e5a-4cfb-bca6-e4a6cca9be28",\n-                "9a976b8e-72ba-468a-bea8-b37a31bb386b",\n-                "3c881f51-f75b-4959-834a-6e1d5edc32ae",\n-                "c91f0fe9-f2e9-4a17-84a5-8e4f2678ed3c",\n-                "2dfe8e4c-5bf6-43f1-93e1-6c320ede7226",\n-                "874049e7-629e-489a-b46c-1adf35ad40ee",\n-                "e0ca2fbc-7800-4b9b-afe5-8e42af9f5dd6",\n-            ]\n-        }\n-\n-        portal.setTitle("Welcome to Volto!")\n-        portal.setDescription("The React powered content management system")\n-\n-        logger.info("Creating default homepage in Plone site root - not PAM enabled")\n-\n-    # Common part\n-    if not getattr(portal, "blocks", False):\n-        portal.manage_addProperty("blocks", json.dumps(blocks), "string")\n-\n-    if not getattr(portal, "blocks_layout", False):\n-        portal.manage_addProperty(\n-            "blocks_layout", json.dumps(blocks_layout), "string"\n-        )  # noqa\n+        blocks = home_data["blocks"]\n+        blocks_layout = home_data["blocks_layout"]\n+        portal.setTitle(home_data["title"])\n+        portal.setDescription(home_data["description"])\n \n+        # Use the hack for setting the home page in Plone Site object\n+        if not getattr(portal, "blocks", False):\n+            portal.manage_addProperty("blocks", json.dumps(blocks), "string")\n \n-def create_demo_homepage(context):\n-    demo_home_page = {\n-        "title": "Welcome to Plone 6!",\n-        "description": "Congratulations! You have successfully installed Plone.",\n-        "blocks": {\n-            "0358abe2-b4f1-463d-a279-a63ea80daf19": {"@type": "description"},\n-            "07c273fc-8bfc-4e7d-a327-d513e5a945bb": {"@type": "title"},\n-            "2dfe8e4c-5bf6-43f1-93e1-6c320ede7226": {\n-                "@type": "text",\n-                "text": {\n-                    "blocks": [\n-                        {\n-                            "data": {},\n-                            "depth": 0,\n-                            "entityRanges": [],\n-                            "inlineStyleRanges": [\n-                                {"length": 10, "offset": 0, "style": "BOLD"}\n-                            ],\n-                            "key": "6470b",\n-                            "text": "Disclaimer: This instance is reset every night, so all changes will be lost afterwards.",\n-                            "type": "unstyled",\n-                        }\n-                    ],\n-                    "entityMap": {},\n-                },\n-            },\n-            "3c881f51-f75b-4959-834a-6e1d5edc32ae": {\n-                "@type": "text",\n-                "text": {\n-                    "blocks": [\n-                        {\n-                            "data": {},\n-                            "depth": 0,\n-                            "entityRanges": [],\n-                            "inlineStyleRanges": [\n-                                {"length": 5, "offset": 6, "style": "BOLD"}\n-                            ],\n-                            "key": "ekn3l",\n-                            "text": "user: admin",\n-                            "type": "unstyled",\n-                        }\n-                    ],\n-                    "entityMap": {},\n-                },\n-            },\n-            "5e1c30b1-ec6c-4dc0-9483-9768c3c416e4": {\n-                "@type": "text",\n-                "text": {\n-                    "blocks": [\n-                        {\n-                            "data": {},\n-                            "depth": 0,\n-                            "entityRanges": [],\n-                            "inlineStyleRanges": [],\n-                            "key": "behki",\n-                            "text": "Plone is a powerful content management system built on a rock-solid application stack written using the Python programming language. More about these technologies:",\n-                            "type": "unstyled",\n-                        }\n-                    ],\n-                    "entityMap": {},\n-                },\n-            },\n-            "5f7e6846-e27c-48c4-8c9a-f0d93eadb185": {\n-                "@type": "text",\n-                "text": {\n-                    "blocks": [\n-                        {\n-                            "data": {},\n-                            "depth": 0,\n-                            "entityRanges": [],\n-                            "inlineStyleRanges": [],\n-                            "key": "75pke",\n-                            "text": "\\u2026protects and promotes Plone.",\n-                            "type": "unordered-list-item",\n-                        },\n-                        {\n-                            "data": {},\n-                            "depth": 0,\n-                            "entityRanges": [],\n-                            "inlineStyleRanges": [],\n-                            "key": "2mo73",\n-                            "text": "\\u2026is a registered 501(c)(3) charitable organization.",\n-                            "type": "unordered-list-item",\n-                        },\n-                        {\n-                            "data": {},\n-                            "depth": 0,\n-                            "entityRanges": [],\n-                            "inlineStyleRanges": [],\n-                            "key": "9qhkg",\n-                            "text": "\\u2026donations are tax-deductible.",\n-                            "type": "unordered-list-item",\n-                        },\n-                        {\n-                            "data": {},\n-                            "depth": 0,\n-                            "entityRanges": [{"key": 0, "length": 50, "offset": 0}],\n-                            "inlineStyleRanges": [],\n-                            "key": "5528b",\n-                            "text": "Support the Foundation and help make Plone better!",\n-                            "type": "unordered-list-item",\n-                        },\n-                    ],\n-                    "entityMap": {\n-                        "0": {\n-                            "data": {"url": "https://plone.org/sponsors/be-a-hero"},\n-                            "mutability": "MUTABLE",\n-                            "type": "LINK",\n-                        }\n-                    },\n-                },\n-            },\n-            "61cc1bc0-d4f5-4e2b-9152-79512045a4dd": {\n-                "@type": "text",\n-                "text": {\n-                    "blocks": [\n-                        {\n-                            "data": {},\n-                            "depth": 0,\n-                            "entityRanges": [],\n-                            "inlineStyleRanges": [],\n-                            "key": "9qsa4",\n-                            "text": "Demo",\n-                            "type": "header-two",\n-                        }\n-                    ],\n-                    "entityMap": {},\n-                },\n-            },\n-            "874049e7-629e-489a-b46c-1adf35ad40ee": {\n-                "@type": "text",\n-                "text": {\n-                    "blocks": [\n-                        {\n-                            "data": {},\n-                            "depth": 0,\n-                            "entityRanges": [],\n-                            "inlineStyleRanges": [],\n-                            "key": "9pnjr",\n-                            "text": "Happy hacking!",\n-                            "type": "unstyled",\n-                        }\n-                    ],\n-                    "entityMap": {},\n-                },\n-            },\n-            "8bba235c-7a52-4ce2-bde1-c505e5746dce": {\n-                "@type": "text",\n-                "text": {\n-                    "blocks": [\n-                        {\n-                            "data": {},\n-                            "depth": 0,\n-                            "entityRanges": [],\n-                            "inlineStyleRanges": [],\n-                            "key": "692gs",\n-                            "text": "Plone is made possible only through the efforts of thousands of dedicated individuals and hundreds of companies. The Plone Foundation:",\n-                            "type": "unstyled",\n-                        }\n-                    ],\n-                    "entityMap": {},\n-                },\n-            },\n-            "942b6530-2407-420f-9c24-597adda6b2ce": {\n-                "@type": "text",\n-                "text": {\n-                    "blocks": [\n-                        {\n-                            "data": {},\n-                            "depth": 0,\n-                            "entityRanges": [],\n-                            "inlineStyleRanges": [],\n-                            "key": "6a248",\n-                            "text": "Support the Plone Foundation",\n-                            "type": "header-two",\n-                        }\n-                    ],\n-                    "entityMap": {},\n-                },\n-            },\n-            "9a976b8e-72ba-468a-bea8-b37a31bb386b": {\n-                "@type": "text",\n-                "text": {\n-                    "blocks": [\n-                        {\n-                            "data": {},\n-                            "depth": 0,\n-                            "entityRanges": [],\n-                            "inlineStyleRanges": [\n-                                {"length": 12, "offset": 51, "style": "BOLD"}\n-                            ],\n-                            "key": "94arl",\n-                            "text": "You can log in and use it as admin user using these credentials:",\n-                            "type": "unstyled",\n-                        }\n-                    ],\n-                    "entityMap": {},\n-                },\n-            },\n-            "b3717238-448f-406e-b06f-57a9715c3326": {\n-                "@type": "text",\n-                "text": {\n-                    "blocks": [\n-                        {\n-                            "data": {},\n-                            "depth": 0,\n-                            "entityRanges": [],\n-                            "inlineStyleRanges": [],\n-                            "key": "1bnna",\n-                            "text": "Find out more about Plone",\n-                            "type": "header-two",\n-                        }\n-                    ],\n-                    "entityMap": {},\n-                },\n-            },\n-            "c049ff8b-3e5a-4cfb-bca6-e4a6cca9be28": {\n-                "@type": "text",\n-                "text": {\n-                    "blocks": [\n-                        {\n-                            "data": {},\n-                            "depth": 0,\n-                            "entityRanges": [],\n-                            "inlineStyleRanges": [],\n-                            "key": "55n44",\n-                            "text": "You can use this site to test Plone 6. These are the versions used in this demo:",\n-                            "type": "unstyled",\n-                        }\n-                    ],\n-                    "entityMap": {},\n-                },\n-            },\n-            "c91f0fe9-f2e9-4a17-84a5-8e4f2678ed3c": {\n-                "@type": "text",\n-                "text": {\n-                    "blocks": [\n-                        {\n-                            "data": {},\n-                            "depth": 0,\n-                            "entityRanges": [],\n-                            "inlineStyleRanges": [\n-                                {"length": 5, "offset": 10, "style": "BOLD"}\n-                            ],\n-                            "key": "buncq",\n-                            "text": "password: admin",\n-                            "type": "unstyled",\n-                        }\n-                    ],\n-                    "entityMap": {},\n-                },\n-            },\n-            "e0ca2fbc-7800-4b9b-afe5-8e42af9f5dd6": {\n-                "@type": "text",\n-                "text": {\n-                    "blocks": [\n-                        {\n-                            "data": {},\n-                            "depth": 0,\n-                            "entityRanges": [],\n-                            "inlineStyleRanges": [],\n-                            "key": "f0prj",\n-                            "text": "2021 - Plone Foundation",\n-                            "type": "unstyled",\n-                        }\n-                    ],\n-                    "entityMap": {},\n-                },\n-            },\n-            "effbdcdc-253c-41a7-841e-5edb3b56ce32": {\n-                "@type": "text",\n-                "text": {\n-                    "blocks": [\n-                        {\n-                            "data": {},\n-                            "depth": 0,\n-                            "entityRanges": [{"key": 0, "length": 43, "offset": 4}],\n-                            "inlineStyleRanges": [],\n-                            "key": "68rve",\n-                            "text": "The Plone open source Content Management System web site for evaluators and decision makers.",\n-                            "type": "unordered-list-item",\n-                        },\n-                        {\n-                            "data": {},\n-                            "depth": 0,\n-                            "entityRanges": [{"key": 1, "length": 16, "offset": 4}],\n-                            "inlineStyleRanges": [],\n-                            "key": "4ec08",\n-                            "text": "The Plone community web site for developers.",\n-                            "type": "unordered-list-item",\n-                        },\n-                        {\n-                            "data": {},\n-                            "depth": 0,\n-                            "entityRanges": [{"key": 2, "length": 27, "offset": 4}],\n-                            "inlineStyleRanges": [],\n-                            "key": "4q5m2",\n-                            "text": "The Python programming language web site.",\n-                            "type": "unordered-list-item",\n-                        },\n-                    ],\n-                    "entityMap": {\n-                        "0": {\n-                            "data": {"url": "https://plone.com/"},\n-                            "mutability": "MUTABLE",\n-                            "type": "LINK",\n-                        },\n-                        "1": {\n-                            "data": {"url": "https://plone.org/"},\n-                            "mutability": "MUTABLE",\n-                            "type": "LINK",\n-                        },\n-                        "2": {\n-                            "data": {"url": "https://www.python.org/"},\n-                            "mutability": "MUTABLE",\n-                            "type": "LINK",\n-                        },\n-                    },\n-                },\n-            },\n-            "3b5ac7a5-2d98-423e-807c-5eebc0bf0054": {"@type": "system"},\n-        },\n-        "blocks_layout": {\n-            "items": [\n-                "07c273fc-8bfc-4e7d-a327-d513e5a945bb",\n-                "0358abe2-b4f1-463d-a279-a63ea80daf19",\n-                "b3717238-448f-406e-b06f-57a9715c3326",\n-                "5e1c30b1-ec6c-4dc0-9483-9768c3c416e4",\n-                "effbdcdc-253c-41a7-841e-5edb3b56ce32",\n-                "942b6530-2407-420f-9c24-597adda6b2ce",\n-                "8bba235c-7a52-4ce2-bde1-c505e5746dce",\n-                "5f7e6846-e27c-48c4-8c9a-f0d93eadb185",\n-                "61cc1bc0-d4f5-4e2b-9152-79512045a4dd",\n-                "c049ff8b-3e5a-4cfb-bca6-e4a6cca9be28",\n-                "3b5ac7a5-2d98-423e-807c-5eebc0bf0054",\n-                "9a976b8e-72ba-468a-bea8-b37a31bb386b",\n-                "3c881f51-f75b-4959-834a-6e1d5edc32ae",\n-                "c91f0fe9-f2e9-4a17-84a5-8e4f2678ed3c",\n-                "2dfe8e4c-5bf6-43f1-93e1-6c320ede7226",\n-                "874049e7-629e-489a-b46c-1adf35ad40ee",\n-                "e0ca2fbc-7800-4b9b-afe5-8e42af9f5dd6",\n-            ]\n-        },\n-    }\n+        if not getattr(portal, "blocks_layout", False):\n+            portal.manage_addProperty(\n+                "blocks_layout", json.dumps(blocks_layout), "string"\n+            )  # noqa\n \n+\n+def create_demo_homepage(context):\n     create_root_homepage(context, default_home=demo_home_page)\ndiff --git a/src/plone/volto/tests/test_setup.py b/src/plone/volto/tests/test_setup.py\nindex 4682038..bc4d0aa 100644\n--- a/src/plone/volto/tests/test_setup.py\n+++ b/src/plone/volto/tests/test_setup.py\n@@ -12,6 +12,15 @@\n \n import unittest\n \n+try:\n+    from Products.CMFPlone.factory import PLONE60MARKER\n+\n+    PLONE60MARKER  # pyflakes\n+except ImportError:\n+    PLONE_6 = False\n+else:\n+    PLONE_6 = True\n+\n \n class TestSetup(unittest.TestCase):\n     """Test that plone.volto is properly installed."""\n@@ -40,6 +49,24 @@ def test_browserlayer(self):\n \n         self.assertIn(IPloneVoltoCoreLayer, utils.registered_layers())\n \n+    @unittest.skipIf(\n+        not PLONE_6,\n+        "This test is only intended to run for Plone 6",\n+    )\n+    def test_plone_site_has_blocks_behavior(self):\n+        pt = api.portal.get_tool("portal_types")\n+        fti = pt.getTypeInfo("Plone Site")\n+\n+        self.assertTrue("volto.blocks" in fti.behaviors)\n+\n+    def test_plone_site_has_edit_action_setup(self):\n+        pt = api.portal.get_tool("portal_types")\n+        fti = pt.getTypeInfo("Plone Site")\n+\n+        action_obj = fti.getActionObject("object/edit")\n+        self.assertIsNotNone(action_obj)\n+        self.assertTrue("Modify portal content" in action_obj.permissions)\n+\n \n class TestUninstall(unittest.TestCase):\n \ndiff --git a/src/plone/volto/upgrades.py b/src/plone/volto/upgrades.py\nindex 7e1d695..26ad4f8 100644\n--- a/src/plone/volto/upgrades.py\n+++ b/src/plone/volto/upgrades.py\n@@ -1,6 +1,42 @@\n from copy import deepcopy\n from plone import api\n from plone.restapi.behaviors import IBlocks\n+from plone.volto import content\n+from plone.volto import logger\n+from plone.volto.setuphandlers import NO_RICHTEXT_BEHAVIOR_CONTENT_TYPES\n+from plone.volto.setuphandlers import remove_behavior\n+\n+\n+MIGRATION = {\n+    "Document": content.FolderishDocument,\n+    "Event": content.FolderishEvent,\n+    "News Item": content.FolderishNewsItem,\n+}\n+\n+\n+def migrate_content_classes(context):\n+    """Migrate content created with collective.folderishtypes to plone.volto."""\n+    interface = "collective.folderishtypes.interfaces.IFolderishType"\n+    idxs = [\n+        "object_provides",\n+    ]\n+    brains = api.content.find(object_provides=interface)\n+    total_brains = len(brains)\n+    logger.info(f"Migration: {total_brains} contents to be migrated.")\n+    for idx, brain in enumerate(brains):\n+        content = brain.getObject()\n+        content_id = content.getId()\n+        content.__class__ = MIGRATION[content.portal_type]\n+        parent = content.aq_parent\n+        parent._delOb(content_id)\n+        parent._setOb(content_id, content)\n+        content = parent[content_id]\n+        content.reindexObject(idxs=idxs)\n+\n+        if idx and idx % 100 == 0:\n+            logger.info(f"Migration: {idx + 1} / {total_brains}")\n+\n+    logger.info("Migration from collective.folderishtypes to plone.volto complete")\n \n \n def from12to13_migrate_listings(context):\n@@ -62,3 +98,8 @@ def migrate_listing(originBlocks):\n     for brain in pc.unrestrictedSearchResults(object_provides=IBlocks.__identifier__):\n         obj = brain.getObject()\n         obj.blocks = migrate_listing(obj.blocks)\n+\n+\n+def remove_plone_richtext_behavior(context):\n+    for type_ in NO_RICHTEXT_BEHAVIOR_CONTENT_TYPES:\n+        remove_behavior(type_, "plone.richtext")\ndiff --git a/src/plone/volto/upgrades.zcml b/src/plone/volto/upgrades.zcml\nindex 468b808..8348277 100644\n--- a/src/plone/volto/upgrades.zcml\n+++ b/src/plone/volto/upgrades.zcml\n@@ -21,4 +21,42 @@\n       import_steps="catalog"\n       />\n \n+  <genericsetup:upgradeDepends\n+      title="Move from c.folderishtypes to local"\n+      profile="plone.volto:default"\n+      source="1012"\n+      destination="1013"\n+      import_steps="typeinfo"\n+      />\n+\n+  <genericsetup:upgradeStep\n+      title="Migrate existing content classes from old c.folderishtypes to local"\n+      profile="plone.volto:default"\n+      source="1013"\n+      destination="1014"\n+      handler=".upgrades.migrate_content_classes"\n+      />\n+\n+  <genericsetup:upgradeSteps\n+      profile="plone.volto:default"\n+      source="1014"\n+      destination="1015"\n+      >\n+    <genericsetup:upgradeDepends\n+        title="Update types info for Plone Site"\n+        import_steps="typeinfo"\n+        />\n+    <genericsetup:upgradeStep\n+        title="remove plone.richtext from Plone Site, Document, News Item, Event"\n+        handler=".upgrades.remove_plone_richtext_behavior"\n+        />\n+  </genericsetup:upgradeSteps>\n+\n+  <genericsetup:upgradeDepends\n+      title="Add blocks behavior to Event and News Item"\n+      profile="plone.volto:default"\n+      source="1015"\n+      destination="1016"\n+      import_steps="typeinfo"\n+      />\n </configure>\ndiff --git a/src/plone/volto/vocabularies/subject.py b/src/plone/volto/vocabularies/subject.py\nindex d6dfab6..862e892 100644\n--- a/src/plone/volto/vocabularies/subject.py\n+++ b/src/plone/volto/vocabularies/subject.py\n@@ -8,7 +8,7 @@\n from plone.app.layout.navigation.root import getNavigationRootObject\n from plone.app.vocabularies.terms import safe_encode\n from plone.registry.interfaces import IRegistry\n-from zope.site.hooks import getSite\n+from zope.component.hooks import getSite\n \n from BTrees.IIBTree import intersection\n from Products.CMFCore.utils import getToolByName\n'

Repository: plone.volto


Branch: refs/heads/main
Date: 2022-01-21T17:43:35+01:00
Author: Víctor Fernández de Alba (sneridagh) <sneridagh@gmail.com>
Commit: https://github.com/plone/plone.volto/commit/df86ae7f5de0149db4faccb5367c2f1bc6a9cf6a

Merge pull request #39 from plone/test-fix-frontend-domain-none

test(settings): Isolation w/ frontend_domain None

Files changed:
M CHANGES.rst
M setup.py
M src/plone/volto/patches.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex e6531b0..62ee684 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -25,6 +25,10 @@ Changelog\n - Add preview_image to Event\n   [nzambello]\n \n+- Workaround a test fixture isolation issue with the `IVoltoSettings.frontend_domain`\n+  setting.\n+  [rpatterson]\n+  \n 3.1.0a9 (2022-01-15)\n --------------------\n \n@@ -44,7 +48,6 @@ New Feature:\n - Computed copyright dates for content demo pages\n   [sneridagh]\n \n-\n 3.1.0a7 (2021-12-11)\n --------------------\n \ndiff --git a/setup.py b/setup.py\nindex 942ff00..0870375 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -58,6 +58,7 @@ def readfile(name):\n         "setuptools",\n         "plone.restapi>=8.13.0",\n         "plone.app.vocabularies>=4.3.0",\n+        "collective.monkeypatcher",\n     ],\n     extras_require={\n         "test": [\ndiff --git a/src/plone/volto/patches.py b/src/plone/volto/patches.py\nindex 333356e..24ba8c7 100644\n--- a/src/plone/volto/patches.py\n+++ b/src/plone/volto/patches.py\n@@ -52,7 +52,9 @@ def construct_url(self, randomstring):\n \n         registry = getUtility(IRegistry)\n         settings = registry.forInterface(IVoltoSettings, prefix="volto", check=False)\n-        frontend_domain = getattr(settings, "frontend_domain", frontend_domain)\n+        settings_frontend_domain = getattr(settings, "frontend_domain", None)\n+        if settings_frontend_domain:\n+            frontend_domain = settings_frontend_domain\n         if frontend_domain.endswith("/"):\n             frontend_domain = frontend_domain[:-1]\n     return "%s/passwordreset/%s" % (frontend_domain, randomstring)\n'

