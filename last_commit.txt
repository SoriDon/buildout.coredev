Repository: plone.app.content


Branch: refs/heads/master
Date: 2018-10-10T23:58:29-04:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/plone.app.content/commit/c586b95108fa2b870205f470056a793a7dc730ad

Fix actions using Zope manage_ methods by not passing a request.

The presence of a request causes them to try to render a ZMI page,
which is unnecessary and now breaks due to a permission check.

Files changed:
M CHANGES.rst
M plone/app/content/browser/actions.py

b"diff --git a/CHANGES.rst b/CHANGES.rst\nindex 6262840..f74f7f2 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -22,9 +22,12 @@ Bug fixes:\n   updated only when the state was changed from the toolbar.\n   [cekk]\n \n-- Fix various issues in with py3.\n+- Fix various issues in py3.\n   [pbauer]\n \n+- Fix cut, copy, and delete actions in Zope 4.\n+  [davisagli]\n+\n 3.5.3 (2018-06-18)\n ------------------\n \ndiff --git a/plone/app/content/browser/actions.py b/plone/app/content/browser/actions.py\nindex ed68aeb..fc88dcc 100644\n--- a/plone/app/content/browser/actions.py\n+++ b/plone/app/content/browser/actions.py\n@@ -77,7 +77,7 @@ def handle_delete(self, action):\n         # has the context object been acquired from a place it should not have\n         # been?\n         if self.context.aq_chain == self.context.aq_inner.aq_chain:\n-            parent.manage_delObjects(self.context.getId(), self.request)\n+            parent.manage_delObjects(self.context.getId())\n             IStatusMessage(self.request).add(\n                 _(u'${title} has been deleted.', mapping={u'title': title}))\n         else:\n@@ -227,11 +227,13 @@ def do_action(self):\n                                         mapping={'title': self.title, }))\n \n         try:\n-            self.parent.manage_cutObjects(self.context.getId(), self.request)\n+            cp = self.parent.manage_cutObjects(self.context.getId())\n         except CopyError:\n             return self.do_redirect(self.view_url,\n                                     _(u'${title} is not moveable.',\n                                         mapping={'title': self.title}))\n+        self.request.response.setCookie(\n+            '__cp', cp, path=self.request['BASEPATH1'] or '/')\n \n         return self.do_redirect(\n             self.view_url,\n@@ -253,11 +255,13 @@ class ObjectCopyView(ObjectCutView):\n \n     def do_action(self):\n         try:\n-            self.parent.manage_copyObjects(self.context.getId(), self.request)\n+            cp = self.parent.manage_copyObjects(self.context.getId())\n         except CopyError:\n             return self.do_redirect(self.view_url,\n                                     _(u'${title} is not copyable.',\n                                         mapping={'title': self.title}))\n+        self.request.response.setCookie(\n+            '__cp', cp, path=self.request['BASEPATH1'] or '/')\n \n         return self.do_redirect(self.view_url,\n                                 _(u'${title} copied.',\n"

Repository: plone.app.content


Branch: refs/heads/master
Date: 2018-10-11T09:07:00+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.content/commit/e03f9946fbf89ab3018d18f278145e25b0bde315

also set __cp on request

Files changed:
M plone/app/content/browser/actions.py

b"diff --git a/plone/app/content/browser/actions.py b/plone/app/content/browser/actions.py\nindex fc88dcc..7c4f0c7 100644\n--- a/plone/app/content/browser/actions.py\n+++ b/plone/app/content/browser/actions.py\n@@ -234,6 +234,7 @@ def do_action(self):\n                                         mapping={'title': self.title}))\n         self.request.response.setCookie(\n             '__cp', cp, path=self.request['BASEPATH1'] or '/')\n+        self.request['__cp'] = cp\n \n         return self.do_redirect(\n             self.view_url,\n@@ -262,6 +263,7 @@ def do_action(self):\n                                         mapping={'title': self.title}))\n         self.request.response.setCookie(\n             '__cp', cp, path=self.request['BASEPATH1'] or '/')\n+        self.request['__cp'] = cp\n \n         return self.do_redirect(self.view_url,\n                                 _(u'${title} copied.',\n"

Repository: plone.app.content


Branch: refs/heads/master
Date: 2018-10-11T08:27:24-04:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/plone.app.content/commit/0ac9f87e0b0f8724a229fa20d5e81fa5582fd785

Fix another case of passing request to manage_delObjects

Files changed:
M plone/app/content/browser/contents/delete.py

b"diff --git a/plone/app/content/browser/contents/delete.py b/plone/app/content/browser/contents/delete.py\nindex 2216223..f5e2f8a 100644\n--- a/plone/app/content/browser/contents/delete.py\n+++ b/plone/app/content/browser/contents/delete.py\n@@ -79,7 +79,7 @@ def action(self, obj):\n             return\n         else:\n             try:\n-                parent.manage_delObjects(obj.getId(), self.request)\n+                parent.manage_delObjects(obj.getId())\n             except Unauthorized:\n                 self.errors.append(\n                     _(u'You are not authorized to delete ${title}.',\n"

Repository: plone.app.content


Branch: refs/heads/master
Date: 2018-10-12T21:34:46-04:00
Author: David Glick (davisagli) <dglick@salesforce.com>
Commit: https://github.com/plone/plone.app.content/commit/485570c692b2cf4e1b09a7d55ea136da7e16f0f0

Merge pull request #173 from plone/fix-actions

Fix actions using Zope manage_ methods by not passing a request.

Files changed:
M CHANGES.rst
M plone/app/content/browser/actions.py
M plone/app/content/browser/contents/delete.py

b"diff --git a/CHANGES.rst b/CHANGES.rst\nindex 6262840..f74f7f2 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -22,9 +22,12 @@ Bug fixes:\n   updated only when the state was changed from the toolbar.\n   [cekk]\n \n-- Fix various issues in with py3.\n+- Fix various issues in py3.\n   [pbauer]\n \n+- Fix cut, copy, and delete actions in Zope 4.\n+  [davisagli]\n+\n 3.5.3 (2018-06-18)\n ------------------\n \ndiff --git a/plone/app/content/browser/actions.py b/plone/app/content/browser/actions.py\nindex ed68aeb..7c4f0c7 100644\n--- a/plone/app/content/browser/actions.py\n+++ b/plone/app/content/browser/actions.py\n@@ -77,7 +77,7 @@ def handle_delete(self, action):\n         # has the context object been acquired from a place it should not have\n         # been?\n         if self.context.aq_chain == self.context.aq_inner.aq_chain:\n-            parent.manage_delObjects(self.context.getId(), self.request)\n+            parent.manage_delObjects(self.context.getId())\n             IStatusMessage(self.request).add(\n                 _(u'${title} has been deleted.', mapping={u'title': title}))\n         else:\n@@ -227,11 +227,14 @@ def do_action(self):\n                                         mapping={'title': self.title, }))\n \n         try:\n-            self.parent.manage_cutObjects(self.context.getId(), self.request)\n+            cp = self.parent.manage_cutObjects(self.context.getId())\n         except CopyError:\n             return self.do_redirect(self.view_url,\n                                     _(u'${title} is not moveable.',\n                                         mapping={'title': self.title}))\n+        self.request.response.setCookie(\n+            '__cp', cp, path=self.request['BASEPATH1'] or '/')\n+        self.request['__cp'] = cp\n \n         return self.do_redirect(\n             self.view_url,\n@@ -253,11 +256,14 @@ class ObjectCopyView(ObjectCutView):\n \n     def do_action(self):\n         try:\n-            self.parent.manage_copyObjects(self.context.getId(), self.request)\n+            cp = self.parent.manage_copyObjects(self.context.getId())\n         except CopyError:\n             return self.do_redirect(self.view_url,\n                                     _(u'${title} is not copyable.',\n                                         mapping={'title': self.title}))\n+        self.request.response.setCookie(\n+            '__cp', cp, path=self.request['BASEPATH1'] or '/')\n+        self.request['__cp'] = cp\n \n         return self.do_redirect(self.view_url,\n                                 _(u'${title} copied.',\ndiff --git a/plone/app/content/browser/contents/delete.py b/plone/app/content/browser/contents/delete.py\nindex 2216223..f5e2f8a 100644\n--- a/plone/app/content/browser/contents/delete.py\n+++ b/plone/app/content/browser/contents/delete.py\n@@ -79,7 +79,7 @@ def action(self, obj):\n             return\n         else:\n             try:\n-                parent.manage_delObjects(obj.getId(), self.request)\n+                parent.manage_delObjects(obj.getId())\n             except Unauthorized:\n                 self.errors.append(\n                     _(u'You are not authorized to delete ${title}.',\n"

