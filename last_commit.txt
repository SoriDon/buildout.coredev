Repository: plone.base


Branch: refs/heads/main
Date: 2022-04-28T00:23:30+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.base/commit/c84d32aa695bb84e4a71143dc1fd05dab2559df3

move _createObjectByType as unrestricted_construct_instance to here

Files changed:
A news/8.feature
M src/plone/base/utils.py

b'diff --git a/news/8.feature b/news/8.feature\nnew file mode 100644\nindex 0000000..f555495\n--- /dev/null\n+++ b/news/8.feature\n@@ -0,0 +1,2 @@\n+Move `Products.CMFPlone.utils._createObjectByType to here as `utils.unrestricted_construct_instance`.\n+[jensens]\ndiff --git a/src/plone/base/utils.py b/src/plone/base/utils.py\nindex 4669757..b714278 100644\n--- a/src/plone/base/utils.py\n+++ b/src/plone/base/utils.py\n@@ -509,3 +509,23 @@ def get_user_friendly_types(types_list=None):\n         types = {t for t in types_list if t in types}\n     friendly_types = types - set(search_settings.types_not_searched)\n     return list(friendly_types)\n+\n+\n+def unrestricted_construct_instance(type_name, container, id, *args, **kw):\n+    """Create an object without performing security checks\n+\n+    invokeFactory and fti.constructInstance perform some security checks\n+    before creating the object. Use this function instead if you need to\n+    skip these checks.\n+\n+    This method uses\n+    CMFCore.TypesTool.FactoryTypeInformation._constructInstance\n+    to create the object without security checks.\n+    """\n+    id = str(id)\n+    typesTool = getToolByName(container, \'portal_types\')\n+    fti = typesTool.getTypeInfo(type_name)\n+    if not fti:\n+        raise ValueError(\'Invalid type %s\' % type_name)\n+\n+    return fti._constructInstance(container, id, *args, **kw)\n'

Repository: plone.base


Branch: refs/heads/main
Date: 2022-04-30T11:58:59+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.base/commit/01c8e58dcf4f0089cf8be0839b1c783dde7d0dba

Merge pull request #8 from plone/unrestricted_construct_instance

move _createObjectByType as unrestricted_construct_instance to here

Files changed:
A news/8.feature
M src/plone/base/utils.py

b'diff --git a/news/8.feature b/news/8.feature\nnew file mode 100644\nindex 0000000..f555495\n--- /dev/null\n+++ b/news/8.feature\n@@ -0,0 +1,2 @@\n+Move `Products.CMFPlone.utils._createObjectByType to here as `utils.unrestricted_construct_instance`.\n+[jensens]\ndiff --git a/src/plone/base/utils.py b/src/plone/base/utils.py\nindex 4669757..b714278 100644\n--- a/src/plone/base/utils.py\n+++ b/src/plone/base/utils.py\n@@ -509,3 +509,23 @@ def get_user_friendly_types(types_list=None):\n         types = {t for t in types_list if t in types}\n     friendly_types = types - set(search_settings.types_not_searched)\n     return list(friendly_types)\n+\n+\n+def unrestricted_construct_instance(type_name, container, id, *args, **kw):\n+    """Create an object without performing security checks\n+\n+    invokeFactory and fti.constructInstance perform some security checks\n+    before creating the object. Use this function instead if you need to\n+    skip these checks.\n+\n+    This method uses\n+    CMFCore.TypesTool.FactoryTypeInformation._constructInstance\n+    to create the object without security checks.\n+    """\n+    id = str(id)\n+    typesTool = getToolByName(container, \'portal_types\')\n+    fti = typesTool.getTypeInfo(type_name)\n+    if not fti:\n+        raise ValueError(\'Invalid type %s\' % type_name)\n+\n+    return fti._constructInstance(container, id, *args, **kw)\n'

