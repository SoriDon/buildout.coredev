Repository: plone.registry


Branch: refs/heads/master
Date: 2016-10-20T06:02:50+02:00
Author: Tom Gross (tomgross) <itconsense@gmail.com>
Commit: https://github.com/plone/plone.registry/commit/1ad6ba0d1089f3557a2184a1540f11608fcbc622

fix recursion on getting reserved names from recordsproxy

Files changed:
M CHANGES.rst
M plone/registry/recordsproxy.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 24f73e4..bf7eb2c 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Fix recursion on getting values from records proxy
+  [tomgross]
 
 
 1.1.0 (2016-07-05)
diff --git a/plone/registry/recordsproxy.py b/plone/registry/recordsproxy.py
index ddb1abc..3768c00 100644
--- a/plone/registry/recordsproxy.py
+++ b/plone/registry/recordsproxy.py
@@ -33,6 +33,8 @@ def __init__(self, registry, schema, omitted=(), prefix=None):
         alsoProvides(self, schema)
 
     def __getattr__(self, name):
+        if name in self.__dict__.keys():
+           return super(RecordsProxy, self).__getattr__(name)
         if name not in self.__schema__:
             raise AttributeError(name)
         value = self.__registry__.get(self.__prefix__ + name, _marker)


Repository: plone.registry


Branch: refs/heads/master
Date: 2016-10-20T22:42:54-04:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.registry/commit/47bc75386f39e9fa49257df078b9e387cc1c7dd0

Merge pull request #11 from plone/tomgross-fixrecursionerror

fix recursion on getting reserved names from recordsproxy

Files changed:
M CHANGES.rst
M plone/registry/recordsproxy.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 24f73e4..bf7eb2c 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Fix recursion on getting values from records proxy
+  [tomgross]
 
 
 1.1.0 (2016-07-05)
diff --git a/plone/registry/recordsproxy.py b/plone/registry/recordsproxy.py
index ddb1abc..3768c00 100644
--- a/plone/registry/recordsproxy.py
+++ b/plone/registry/recordsproxy.py
@@ -33,6 +33,8 @@ def __init__(self, registry, schema, omitted=(), prefix=None):
         alsoProvides(self, schema)
 
     def __getattr__(self, name):
+        if name in self.__dict__.keys():
+           return super(RecordsProxy, self).__getattr__(name)
         if name not in self.__schema__:
             raise AttributeError(name)
         value = self.__registry__.get(self.__prefix__ + name, _marker)


