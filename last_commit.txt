Repository: plone.namedfile


Branch: refs/heads/master
Date: 2016-08-23T09:22:46-05:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.namedfile/commit/fd35bfa614f1dcd12caa17bf1f13ac5c91b7e0d5

add pdata support

Files changed:
A plone/namedfile/tests/test_storable.py
M CHANGES.rst
M plone/namedfile/storages.py
M plone/namedfile/tests/__init__.py
M plone/namedfile/tests/test_image.py
M plone/namedfile/tests/test_scaling.py
M plone/namedfile/tests/test_scaling_functional.py
M plone/namedfile/z3c-blobfile.zcml

diff --git a/CHANGES.rst b/CHANGES.rst
index 767c5a7..58d99c5 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -22,6 +22,9 @@ New:
 - uses adapter as factory for scales as in plone.scale>=1.5
   [jensens]
 
+- Add Pdata storage
+  [vangheem]
+
 Fixes:
 
 - Several tests were failing on Windows 10 due to binary files being opened in text mode. Fixed.
diff --git a/plone/namedfile/storages.py b/plone/namedfile/storages.py
index 1d12e0a..96ddc60 100644
--- a/plone/namedfile/storages.py
+++ b/plone/namedfile/storages.py
@@ -1,6 +1,7 @@
 # -*- coding: utf-8 -*-
 # This file was borrowed from z3c.blobfile and is licensed under the terms of
 # the ZPL.
+from OFS.Image import Pdata
 from plone.namedfile.file import FileChunk
 from plone.namedfile.interfaces import IStorage
 from plone.namedfile.interfaces import NotStorable
@@ -74,3 +75,13 @@ def store(self, data, blob):
             while block:
                 fp.write(block)
                 block = data.read(MAXCHUNKSIZE)
+
+
+@implementer(IStorage)
+class PDataStorable(object):
+    def store(self, pdata, blob):
+        if not isinstance(pdata, Pdata):
+            raise NotStorable('Could not store data (not of "Pdata").')
+        fp = blob.open('w')
+        fp.write(str(pdata))
+        fp.close()
diff --git a/plone/namedfile/tests/__init__.py b/plone/namedfile/tests/__init__.py
index e69de29..8c04f22 100644
--- a/plone/namedfile/tests/__init__.py
+++ b/plone/namedfile/tests/__init__.py
@@ -0,0 +1,7 @@
+import os
+
+
+def getFile(filename):
+    """ return contents of the file with the given name """
+    filename = os.path.join(os.path.dirname(__file__), filename)
+    return open(filename, 'rb')
diff --git a/plone/namedfile/tests/test_image.py b/plone/namedfile/tests/test_image.py
index f6f58a7..eb458e1 100644
--- a/plone/namedfile/tests/test_image.py
+++ b/plone/namedfile/tests/test_image.py
@@ -3,18 +3,13 @@
 
 from plone.namedfile.file import NamedImage
 from plone.namedfile.interfaces import INamedImage
+from plone.namedfile.tests import getFile
 from plone.namedfile.utils import get_contenttype
 from zope.interface.verify import verifyClass
 
-import os
 import unittest
 
 
-def getFile(filename):
-    """ return contents of the file with the given name """
-    filename = os.path.join(os.path.dirname(__file__), filename)
-    return open(filename, 'rb')
-
 zptlogo = (
     'GIF89a\x10\x00\x10\x00\xd5\x00\x00\xff\xff\xff\xff\xff\xfe\xfc\xfd\xfd'
     '\xfa\xfb\xfc\xf7\xf9\xfa\xf5\xf8\xf9\xf3\xf6\xf8\xf2\xf5\xf7\xf0\xf4\xf6'
diff --git a/plone/namedfile/tests/test_scaling.py b/plone/namedfile/tests/test_scaling.py
index c237460..95761a6 100644
--- a/plone/namedfile/tests/test_scaling.py
+++ b/plone/namedfile/tests/test_scaling.py
@@ -8,6 +8,7 @@
 from plone.namedfile.scaling import ImageScaling
 from plone.namedfile.testing import PLONE_NAMEDFILE_FUNCTIONAL_TESTING
 from plone.namedfile.testing import PLONE_NAMEDFILE_INTEGRATION_TESTING
+from plone.namedfile.tests import getFile
 from plone.scale.interfaces import IScaledImageQuality
 from StringIO import StringIO
 from zExceptions import Unauthorized
@@ -23,12 +24,6 @@
 import unittest
 
 
-def getFile(filename):
-    """ return contents of the file with the given name """
-    filename = os.path.join(os.path.dirname(__file__), filename)
-    return open(filename, 'rb')
-
-
 def wait_to_ensure_modified():
     # modified is measured in milliseconds
     # wait 5ms to ensure modified will have changed
diff --git a/plone/namedfile/tests/test_scaling_functional.py b/plone/namedfile/tests/test_scaling_functional.py
index 7eb2934..7981cf8 100644
--- a/plone/namedfile/tests/test_scaling_functional.py
+++ b/plone/namedfile/tests/test_scaling_functional.py
@@ -8,24 +8,18 @@
 from plone.namedfile.interfaces import IImageScaleTraversable
 from plone.namedfile.scaling import ImageScaling
 from plone.namedfile.testing import PLONE_NAMEDFILE_FUNCTIONAL_TESTING
+from plone.namedfile.tests import getFile
 from plone.testing.z2 import Browser
 from StringIO import StringIO
 from zope.annotation import IAttributeAnnotatable
 from zope.interface import implementer
 
-import os
 import PIL
 import time
 import transaction
 import unittest
 
 
-def getFile(filename):
-    """ return contents of the file with the given name """
-    filename = os.path.join(os.path.dirname(__file__), filename)
-    return open(filename, 'rb')
-
-
 def wait_to_ensure_modified():
     # modified is measured in milliseconds
     # wait 5ms to ensure modified will have changed
diff --git a/plone/namedfile/tests/test_storable.py b/plone/namedfile/tests/test_storable.py
new file mode 100644
index 0000000..fe94a28
--- /dev/null
+++ b/plone/namedfile/tests/test_storable.py
@@ -0,0 +1,47 @@
+# -*- coding: utf-8 -*-
+# This file was borrowed from z3c.blobfile and is licensed under the terms of
+# the ZPL.
+
+##############################################################################
+#
+# Copyright (c) 2008 Zope Foundation and Contributors.
+# All Rights Reserved.
+#
+# This software is subject to the provisions of the Zope Public License,
+# Version 2.1 (ZPL).  A copy of the ZPL should accompany this distribution.
+# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY AND ALL EXPRESS OR IMPLIED
+# WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+# WARRANTIES OF TITLE, MERCHANTABILITY, AGAINST INFRINGEMENT, AND FITNESS
+# FOR A PARTICULAR PURPOSE.
+#
+##############################################################################
+
+from OFS.Image import Pdata
+from plone.namedfile.file import FileChunk
+from plone.namedfile.file import NamedBlobImage
+from plone.namedfile.testing import PLONE_NAMEDFILE_FUNCTIONAL_TESTING
+from plone.namedfile.tests import getFile
+
+import unittest
+
+
+class TestStorable(unittest.TestCase):
+
+    layer = PLONE_NAMEDFILE_FUNCTIONAL_TESTING
+
+    def setUp(self):
+        pass
+
+    def test_pdata_storable(self):
+        pdata = Pdata(getFile('image.gif').read())
+        fi = NamedBlobImage(pdata, filename=u'image.gif')
+        self.assertEqual(303, fi.getSize())
+
+    def test_str_storable(self):
+        fi = NamedBlobImage(getFile('image.gif').read(), filename=u'image.gif')
+        self.assertEqual(303, fi.getSize())
+
+    def test_filechunk_storable(self):
+        fi = NamedBlobImage(FileChunk(getFile('image.gif').read()),
+                            filename=u'image.gif')
+        self.assertEqual(303, fi.getSize())
diff --git a/plone/namedfile/z3c-blobfile.zcml b/plone/namedfile/z3c-blobfile.zcml
index b3083fa..282dbad 100644
--- a/plone/namedfile/z3c-blobfile.zcml
+++ b/plone/namedfile/z3c-blobfile.zcml
@@ -29,6 +29,11 @@
       provides=".interfaces.IStorage"
       factory=".storages.FileUploadStorable"
       />
+  <utility
+      name="OFS.Image.Pdata"
+      provides=".interfaces.IStorage"
+      factory=".storages.PDataStorable"
+      />
 
   <adapter factory=".copy.BlobFileCopyHook" />
 


Repository: plone.namedfile


Branch: refs/heads/master
Date: 2016-08-24T15:56:57+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.namedfile/commit/4d6d5d6443c68c2c0e862194a012d288f3087ec8

Merge pull request #33 from plone/add-pdata-storage-4

add pdata support

Files changed:
A plone/namedfile/tests/test_storable.py
M CHANGES.rst
M plone/namedfile/storages.py
M plone/namedfile/tests/__init__.py
M plone/namedfile/tests/test_image.py
M plone/namedfile/tests/test_scaling.py
M plone/namedfile/tests/test_scaling_functional.py
M plone/namedfile/z3c-blobfile.zcml

diff --git a/CHANGES.rst b/CHANGES.rst
index c6d950c..fd1be4c 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -38,6 +38,9 @@ New:
 - uses adapter as factory for scales as in plone.scale>=1.5
   [jensens]
 
+- Add Pdata storage
+  [vangheem]
+
 Fixes:
 
 - Several tests were failing on Windows 10 due to binary files being opened in text mode. Fixed.
diff --git a/plone/namedfile/storages.py b/plone/namedfile/storages.py
index 1d12e0a..96ddc60 100644
--- a/plone/namedfile/storages.py
+++ b/plone/namedfile/storages.py
@@ -1,6 +1,7 @@
 # -*- coding: utf-8 -*-
 # This file was borrowed from z3c.blobfile and is licensed under the terms of
 # the ZPL.
+from OFS.Image import Pdata
 from plone.namedfile.file import FileChunk
 from plone.namedfile.interfaces import IStorage
 from plone.namedfile.interfaces import NotStorable
@@ -74,3 +75,13 @@ def store(self, data, blob):
             while block:
                 fp.write(block)
                 block = data.read(MAXCHUNKSIZE)
+
+
+@implementer(IStorage)
+class PDataStorable(object):
+    def store(self, pdata, blob):
+        if not isinstance(pdata, Pdata):
+            raise NotStorable('Could not store data (not of "Pdata").')
+        fp = blob.open('w')
+        fp.write(str(pdata))
+        fp.close()
diff --git a/plone/namedfile/tests/__init__.py b/plone/namedfile/tests/__init__.py
index e69de29..8c04f22 100644
--- a/plone/namedfile/tests/__init__.py
+++ b/plone/namedfile/tests/__init__.py
@@ -0,0 +1,7 @@
+import os
+
+
+def getFile(filename):
+    """ return contents of the file with the given name """
+    filename = os.path.join(os.path.dirname(__file__), filename)
+    return open(filename, 'rb')
diff --git a/plone/namedfile/tests/test_image.py b/plone/namedfile/tests/test_image.py
index f6f58a7..eb458e1 100644
--- a/plone/namedfile/tests/test_image.py
+++ b/plone/namedfile/tests/test_image.py
@@ -3,18 +3,13 @@
 
 from plone.namedfile.file import NamedImage
 from plone.namedfile.interfaces import INamedImage
+from plone.namedfile.tests import getFile
 from plone.namedfile.utils import get_contenttype
 from zope.interface.verify import verifyClass
 
-import os
 import unittest
 
 
-def getFile(filename):
-    """ return contents of the file with the given name """
-    filename = os.path.join(os.path.dirname(__file__), filename)
-    return open(filename, 'rb')
-
 zptlogo = (
     'GIF89a\x10\x00\x10\x00\xd5\x00\x00\xff\xff\xff\xff\xff\xfe\xfc\xfd\xfd'
     '\xfa\xfb\xfc\xf7\xf9\xfa\xf5\xf8\xf9\xf3\xf6\xf8\xf2\xf5\xf7\xf0\xf4\xf6'
diff --git a/plone/namedfile/tests/test_scaling.py b/plone/namedfile/tests/test_scaling.py
index c237460..95761a6 100644
--- a/plone/namedfile/tests/test_scaling.py
+++ b/plone/namedfile/tests/test_scaling.py
@@ -8,6 +8,7 @@
 from plone.namedfile.scaling import ImageScaling
 from plone.namedfile.testing import PLONE_NAMEDFILE_FUNCTIONAL_TESTING
 from plone.namedfile.testing import PLONE_NAMEDFILE_INTEGRATION_TESTING
+from plone.namedfile.tests import getFile
 from plone.scale.interfaces import IScaledImageQuality
 from StringIO import StringIO
 from zExceptions import Unauthorized
@@ -23,12 +24,6 @@
 import unittest
 
 
-def getFile(filename):
-    """ return contents of the file with the given name """
-    filename = os.path.join(os.path.dirname(__file__), filename)
-    return open(filename, 'rb')
-
-
 def wait_to_ensure_modified():
     # modified is measured in milliseconds
     # wait 5ms to ensure modified will have changed
diff --git a/plone/namedfile/tests/test_scaling_functional.py b/plone/namedfile/tests/test_scaling_functional.py
index 7eb2934..7981cf8 100644
--- a/plone/namedfile/tests/test_scaling_functional.py
+++ b/plone/namedfile/tests/test_scaling_functional.py
@@ -8,24 +8,18 @@
 from plone.namedfile.interfaces import IImageScaleTraversable
 from plone.namedfile.scaling import ImageScaling
 from plone.namedfile.testing import PLONE_NAMEDFILE_FUNCTIONAL_TESTING
+from plone.namedfile.tests import getFile
 from plone.testing.z2 import Browser
 from StringIO import StringIO
 from zope.annotation import IAttributeAnnotatable
 from zope.interface import implementer
 
-import os
 import PIL
 import time
 import transaction
 import unittest
 
 
-def getFile(filename):
-    """ return contents of the file with the given name """
-    filename = os.path.join(os.path.dirname(__file__), filename)
-    return open(filename, 'rb')
-
-
 def wait_to_ensure_modified():
     # modified is measured in milliseconds
     # wait 5ms to ensure modified will have changed
diff --git a/plone/namedfile/tests/test_storable.py b/plone/namedfile/tests/test_storable.py
new file mode 100644
index 0000000..fe94a28
--- /dev/null
+++ b/plone/namedfile/tests/test_storable.py
@@ -0,0 +1,47 @@
+# -*- coding: utf-8 -*-
+# This file was borrowed from z3c.blobfile and is licensed under the terms of
+# the ZPL.
+
+##############################################################################
+#
+# Copyright (c) 2008 Zope Foundation and Contributors.
+# All Rights Reserved.
+#
+# This software is subject to the provisions of the Zope Public License,
+# Version 2.1 (ZPL).  A copy of the ZPL should accompany this distribution.
+# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY AND ALL EXPRESS OR IMPLIED
+# WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+# WARRANTIES OF TITLE, MERCHANTABILITY, AGAINST INFRINGEMENT, AND FITNESS
+# FOR A PARTICULAR PURPOSE.
+#
+##############################################################################
+
+from OFS.Image import Pdata
+from plone.namedfile.file import FileChunk
+from plone.namedfile.file import NamedBlobImage
+from plone.namedfile.testing import PLONE_NAMEDFILE_FUNCTIONAL_TESTING
+from plone.namedfile.tests import getFile
+
+import unittest
+
+
+class TestStorable(unittest.TestCase):
+
+    layer = PLONE_NAMEDFILE_FUNCTIONAL_TESTING
+
+    def setUp(self):
+        pass
+
+    def test_pdata_storable(self):
+        pdata = Pdata(getFile('image.gif').read())
+        fi = NamedBlobImage(pdata, filename=u'image.gif')
+        self.assertEqual(303, fi.getSize())
+
+    def test_str_storable(self):
+        fi = NamedBlobImage(getFile('image.gif').read(), filename=u'image.gif')
+        self.assertEqual(303, fi.getSize())
+
+    def test_filechunk_storable(self):
+        fi = NamedBlobImage(FileChunk(getFile('image.gif').read()),
+                            filename=u'image.gif')
+        self.assertEqual(303, fi.getSize())
diff --git a/plone/namedfile/z3c-blobfile.zcml b/plone/namedfile/z3c-blobfile.zcml
index b3083fa..282dbad 100644
--- a/plone/namedfile/z3c-blobfile.zcml
+++ b/plone/namedfile/z3c-blobfile.zcml
@@ -29,6 +29,11 @@
       provides=".interfaces.IStorage"
       factory=".storages.FileUploadStorable"
       />
+  <utility
+      name="OFS.Image.Pdata"
+      provides=".interfaces.IStorage"
+      factory=".storages.PDataStorable"
+      />
 
   <adapter factory=".copy.BlobFileCopyHook" />
 


