Repository: plone.mocktestcase


Branch: refs/heads/master
Date: 2016-10-05T00:31:45+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.mocktestcase/commit/97dbd21bd1116b76f82d843e663d1bd7fd93d6fc

fix to work with zope interface after https://github.com/zopefoundation/zope.interface/commit/79a266200384fa53fb3810ed316a94394166f4e3

Files changed:
M README.txt
M plone/mocktestcase/testcase.py
M setup.py

diff --git a/README.txt b/README.txt
index d743956..eb98f1e 100644
--- a/README.txt
+++ b/README.txt
@@ -1,6 +1,8 @@
 Introduction
 ============
 
+LEGACY: Do not use this any longer, better use the Python mock module!
+
 This package contains a unittest test class based on the one from the
 ``Mocker`` mock library (http://labix.org/mocker).
 
@@ -81,3 +83,16 @@ The following helper methods are available:
      A custom matcher that can be used to check whether an argument to a mock 
      call is if the given type. Uses isinstance(arg, type).
 
+Changes
+=======
+
+1.0.b5
+------
+
+- fix to work with zope interface after https://github.com/zopefoundation/zope.interface/commit/79a266200384fa53fb3810ed316a94394166f4e3
+  [jensens]
+
+1.0.b4
+------
+
+- no log 
diff --git a/plone/mocktestcase/testcase.py b/plone/mocktestcase/testcase.py
index 7a7aeca..01718a8 100644
--- a/plone/mocktestcase/testcase.py
+++ b/plone/mocktestcase/testcase.py
@@ -4,6 +4,14 @@
 import mocker
 import zope.component
 import zope.component.testing
+import zope.proxy
+
+
+class ComponentProxy(zope.proxy.ProxyBase):
+
+    @property
+    def __component_name__(self):
+        raise AttributeError('mock attribute error')
 
 
 class MockTestCase(mocker.MockerTestCase):
@@ -36,6 +44,8 @@ def create_dummy(self, **kw):
     def mock_utility(self, mock, provides, name=u""):
         """Register the mock as a utility providing the given interface
         """
+        if not name:
+            mock = ComponentProxy(mock)
         zope.component.provideUtility(
             provides=provides, component=mock, name=name)
 
@@ -43,6 +53,8 @@ def mock_adapter(self, mock, provides, adapts, name=u""):
         """Register the mock as an adapter providing the given interface
         and adapting the given interface(s)
         """
+        if not name:
+            mock = ComponentProxy(mock)
         zope.component.provideAdapter(
             factory=mock, adapts=adapts, provides=provides, name=name)
 
@@ -61,7 +73,6 @@ def mock_tool(self, mock, name):
         """Register a mock tool that will be returned when getToolByName()
         is called.
         """
-
         if self._getToolByName_mock is None:
             self._getToolByName_mock = self.mocker.replace(
                 'Products.CMFCore.utils.getToolByName')
diff --git a/setup.py b/setup.py
index 67bc746..b4fb675 100644
--- a/setup.py
+++ b/setup.py
@@ -2,7 +2,7 @@
 from setuptools import setup, find_packages
 import os
 
-version = '1.0b4'
+version = '1.0b5'
 
 setup(name='plone.mocktestcase',
       version=version,
@@ -28,6 +28,7 @@
       install_requires=[
           'setuptools',
           'mocker',
+          'zope.proxy',
           # 'zope.component',
           # -*- Extra requirements: -*-
       ],


