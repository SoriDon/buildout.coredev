Repository: five.intid


Branch: refs/heads/master
Date: 2023-02-08T18:31:27+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/five.intid/commit/a550db8a84d62e7cb7f31a37779153e5f102ef84

Configuring with plone/meta

Files changed:
A .editorconfig
A .github/workflows/linting.yml
A .meta.toml
A lint-requirements.txt
A tox.ini
M pyproject.toml
M setup.cfg

b'diff --git a/.editorconfig b/.editorconfig\nnew file mode 100644\nindex 0000000..b4158b8\n--- /dev/null\n+++ b/.editorconfig\n@@ -0,0 +1,39 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+#\n+# EditorConfig Configuration file, for more details see:\n+# http://EditorConfig.org\n+# EditorConfig is a convention description, that could be interpreted\n+# by multiple editors to enforce common coding conventions for specific\n+# file types\n+\n+# top-most EditorConfig file:\n+# Will ignore other EditorConfig files in Home directory or upper tree level.\n+root = true\n+\n+\n+[*]  # For All Files\n+# Unix-style newlines with a newline ending every file\n+end_of_line = lf\n+insert_final_newline = true\n+trim_trailing_whitespace = true\n+# Set default charset\n+charset = utf-8\n+# Indent style default\n+indent_style = space\n+# Max Line Length - a hard line wrap, should be disabled\n+max_line_length = off\n+\n+[*.{py,cfg,ini}]\n+# 4 space indentation\n+indent_size = 4\n+\n+[*.{yml,zpt,pt,dtml,zcml}]\n+# 2 space indentation\n+indent_size = 2\n+\n+[{Makefile,.gitmodules}]\n+# Tab indentation (no size specified, but view as 4 spaces)\n+indent_style = tab\n+indent_size = unset\n+tab_width = unset\ndiff --git a/.github/workflows/linting.yml b/.github/workflows/linting.yml\nnew file mode 100644\nindex 0000000..5ea3292\n--- /dev/null\n+++ b/.github/workflows/linting.yml\n@@ -0,0 +1,39 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+name: Linting\n+on:\n+  push:\n+    branches: [master]\n+  pull_request:\n+    branches: [master]\n+  workflow_dispatch:\n+\n+jobs:\n+  lint:\n+    name: Format and lint code\n+    runs-on: ${{ matrix.os }}\n+    strategy:\n+      matrix:\n+        python-version: ["3.8"]\n+        os: ["ubuntu-22.04"]\n+    steps:\n+      - uses: actions/checkout@v3\n+      - name: Set up Python\n+        uses: actions/setup-python@v4\n+        with:\n+          python-version: ${{ matrix.python-version }}\n+      - name: Cache packages\n+        uses: actions/cache@v3\n+        with:\n+          path: ~/.cache/pip\n+          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles(\'lint-requirements.txt\', \'tox.ini\') }}\n+          restore-keys: |\n+            ${{ runner.os }}-pip-${{ matrix.python-version }}-\n+            ${{ runner.os }}-pip-\n+      - name: Install dependencies\n+        run: python -m pip install tox\n+      - name: Run formatters\n+        run: tox -e format\n+      # linters\n+      - name: QA\n+        run: tox -e lint\ndiff --git a/.meta.toml b/.meta.toml\nnew file mode 100644\nindex 0000000..be4c8b0\n--- /dev/null\n+++ b/.meta.toml\n@@ -0,0 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[meta]\n+template = "default"\n+commit-id = "b1b9dfbb"\ndiff --git a/lint-requirements.txt b/lint-requirements.txt\nnew file mode 100644\nindex 0000000..2a91911\n--- /dev/null\n+++ b/lint-requirements.txt\n@@ -0,0 +1,12 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+black==22.12.0\n+check-manifest==0.49\n+codespell==2.2.2\n+flake8==6.0.0\n+isort==5.11.4\n+pipdeptree==2.3.3\n+pyroma==4.1\n+pyupgrade==3.3.1\n+z3c.dependencychecker==2.10\n+zpretty==2.4.1\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 05b615d..0f96c85 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,3 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [tool.towncrier]\n filename = "CHANGES.rst"\n directory = "news/"\n@@ -18,3 +20,24 @@ showcontent = true\n directory = "bugfix"\n name = "Bug fixes:"\n showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "internal"\n+name = "Internal:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "documentation"\n+name = "Documentation:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "tests"\n+name = "Tests"\n+showcontent = true\n+\n+[tool.isort]\n+profile = "plone"\n+\n+[tool.black]\n+target-version = ["py38"]\ndiff --git a/setup.cfg b/setup.cfg\nindex 2a9acf1..8849fbc 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -1,2 +1,23 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [bdist_wheel]\n-universal = 1\n+universal = 0\n+\n+[flake8]\n+doctests = 1\n+ignore =\n+    # black takes care of line length\n+    E501,\n+    # black takes care of where to break lines\n+    W503,\n+    # black takes care of spaces within slicing (list[:])\n+    E203,\n+    # black takes care of spaces after commas\n+    E231,\n+\n+[check-manifest]\n+ignore =\n+    .editorconfig\n+    .meta.toml\n+    tox.ini\n+    lint-requirements.txt\ndiff --git a/tox.ini b/tox.ini\nnew file mode 100644\nindex 0000000..1f3a9d3\n--- /dev/null\n+++ b/tox.ini\n@@ -0,0 +1,75 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[tox]\n+envlist =\n+    format\n+    lint\n+\n+[testenv]\n+py_files = git ls-files "*.py"\n+text_files = git ls-files "*.rst" "*.md"\n+xml_files = git ls-files "*.xml"\n+zcml_files = git ls-files "*.zcml"\n+allowlist_externals =\n+    sh\n+\n+[testenv:format]\n+description = automatically reformat python code\n+skip_install = true\n+deps =\n+    pyupgrade\n+    isort\n+    black\n+    zpretty\n+    -c lint-requirements.txt\n+commands =\n+    sh -c \'{[testenv]py_files} | xargs pyupgrade --py38-plus\'\n+    sh -c \'{[testenv]py_files} | xargs isort\'\n+    sh -c \'{[testenv]py_files} | xargs black\'\n+    sh -c \'{[testenv]xml_files} | xargs zpretty -x -i || true\'\n+    sh -c \'{[testenv]zcml_files} | xargs zpretty -z -i || true\'\n+\n+[testenv:lint]\n+description = run linters that will help improve the code style\n+skip_install = true\n+deps =\n+    flake8\n+    codespell\n+    tomli  # needed for codespell to read pyproject.toml\n+    check-manifest\n+    pyroma\n+    -c lint-requirements.txt\n+commands =\n+    sh -c \'{[testenv]py_files} | xargs flake8\'\n+    sh -c \'{[testenv]py_files} | xargs codespell\'\n+    sh -c \'{[testenv]text_files} | xargs codespell\'\n+    check-manifest\n+    pyroma -n 10 .\n+\n+[testenv:dependencies]\n+description = check if the package defines all its dependencies\n+deps =\n+    z3c.dependencychecker\n+    -c lint-requirements.txt\n+commands =\n+    dependencychecker\n+\n+[testenv:dependencies-graph]\n+description = generate a graph with the distribution dependencies\n+deps =\n+    pipdeptree\n+    graphviz  # optional dependency of pipdeptree\n+    -c lint-requirements.txt\n+commands =\n+    sh -c \'pipdeptree --exclude setuptools,pipdeptree,wheel --graph-output svg > dependencies.svg\'\n+\n+[testenv:test]\n+description = run the distribution\'s tests\n+deps =\n+    five.intid[test]\n+    pytest\n+    gocept.pytestlayer\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    pip install -e .\n+    pytest\n'

Repository: five.intid


Branch: refs/heads/master
Date: 2023-02-08T18:34:35+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/five.intid/commit/ee897d374abaa7975b3a6a098d60432e2693c54e

chore: pyupgrade

Files changed:
M five/__init__.py
M five/intid/__init__.py
M five/intid/intid.py
M five/intid/keyreference.py
M five/intid/site.py
M five/intid/tests.py
M five/intid/unreferenceable.py
M five/intid/utils.py
M setup.py

b'diff --git a/five/__init__.py b/five/__init__.py\nindex 68c04af..de40ea7 100644\n--- a/five/__init__.py\n+++ b/five/__init__.py\n@@ -1,2 +1 @@\n-# -*- coding: utf-8 -*-\n __import__(\'pkg_resources\').declare_namespace(__name__)\ndiff --git a/five/intid/__init__.py b/five/intid/__init__.py\nindex 40a96af..e69de29 100644\n--- a/five/intid/__init__.py\n+++ b/five/intid/__init__.py\n@@ -1 +0,0 @@\n-# -*- coding: utf-8 -*-\ndiff --git a/five/intid/intid.py b/five/intid/intid.py\nindex 8310b50..49a8c97 100644\n--- a/five/intid/intid.py\n+++ b/five/intid/intid.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n from Acquisition import Explicit\n from AccessControl.class_init import InitializeClass\n from zope.component import getAllUtilitiesRegisteredFor\n@@ -32,7 +31,7 @@ class IntIds(z3IntIds):\n \n     def __init__(self, id_=IIntIds.__name__):\n         self.id = self.__name__ = id_\n-        super(IntIds, self).__init__()\n+        super().__init__()\n \n     def getId(self, ob=_marker):\n         # Compatibility with SimpleItem\ndiff --git a/five/intid/keyreference.py b/five/intid/keyreference.py\nindex f0706f9..9b448cf 100644\n--- a/five/intid/keyreference.py\n+++ b/five/intid/keyreference.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n from Acquisition import aq_base\n from Acquisition import aq_chain\n from Acquisition import IAcquirer\n@@ -109,7 +108,7 @@ def __init__(self, wrapped_obj):\n     def __setstate__(self, state):\n         for key in (\'root_oid\', \'oid\'):\n             value = state.get(key)\n-            if isinstance(value, six.text_type):\n+            if isinstance(value, str):\n                 state[key] = value.encode(\'utf-8\')\n         self.__dict__.update(state)\n \n@@ -131,7 +130,7 @@ def wrapped_object(self):\n         except KeyError:\n             # be paranoid and fall back to the complex OFS traverse for (hypothetical)\n             # edge cases\n-            logger.debug(\'fall back to OFS traversal for {0}\'.format(self.path))\n+            logger.debug(f\'fall back to OFS traversal for {self.path}\')\n             obj = self.root.unrestrictedTraverse(self.path, None)\n         if obj is None:\n             return self.object\ndiff --git a/five/intid/site.py b/five/intid/site.py\nindex 9ebcd48..0a7c2f8 100644\n--- a/five/intid/site.py\n+++ b/five/intid/site.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n from Acquisition import aq_base\n from five.intid.intid import IIntIds\n from five.intid.intid import IntIds\ndiff --git a/five/intid/tests.py b/five/intid/tests.py\nindex fc040b4..146d6ab 100644\n--- a/five/intid/tests.py\n+++ b/five/intid/tests.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n from persistent import Persistent\n from Testing.ZopeTestCase import placeless\n from Zope2.App import zcml\n@@ -20,7 +19,7 @@ class DemoPersistent(Persistent):\n \n \n def setNotified(event):\n-    NOTIFIED[0] = "%s %s" % (event.object, event)\n+    NOTIFIED[0] = f"{event.object} {event}"\n \n \n def setUp(app):\n@@ -41,23 +40,20 @@ def tearDown():\n \n class Py23DocChecker(doctest.OutputChecker):\n     def check_output(self, want, got, optionflags):\n-        if six.PY2:\n-            want = re.sub("b\'(.*?)\'", "\'\\\\1\'", want)\n-        else:\n-            want = re.sub("u\'(.*?)\'", "\'\\\\1\'", want)\n-            # translate doctest exceptions\n-            for dotted in (\n-                \'zope.interface.interfaces.ComponentLookupError\',\n-                \'zope.keyreference.interfaces.NotYet\',\n-                \'zope.intid.interfaces.IntIdMissingError\',\n-                \'zope.intid.interfaces.ObjectMissingError\',\n-            ):\n-                if dotted in got:\n-                    got = re.sub(\n-                        dotted,\n-                        dotted.rpartition(\'.\')[-1],\n-                        got,\n-                    )\n+        want = re.sub("u\'(.*?)\'", "\'\\\\1\'", want)\n+        # translate doctest exceptions\n+        for dotted in (\n+            \'zope.interface.interfaces.ComponentLookupError\',\n+            \'zope.keyreference.interfaces.NotYet\',\n+            \'zope.intid.interfaces.IntIdMissingError\',\n+            \'zope.intid.interfaces.ObjectMissingError\',\n+        ):\n+            if dotted in got:\n+                got = re.sub(\n+                    dotted,\n+                    dotted.rpartition(\'.\')[-1],\n+                    got,\n+                )\n         return doctest.OutputChecker.check_output(self, want, got, optionflags)\n \n \ndiff --git a/five/intid/unreferenceable.py b/five/intid/unreferenceable.py\nindex 7aaafdc..d4b8061 100644\n--- a/five/intid/unreferenceable.py\n+++ b/five/intid/unreferenceable.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n # Sometimes persistent classes are never meant to be persisted. The most\n # common example are CMFCore directory views and filesystem objects.\n # Register specific handlers that are no-ops to circumvent\n@@ -20,7 +19,7 @@ def moveIntIdSubscriber(ob, event):\n \n \n @implementer(IKeyReference)\n-class KeyReferenceNever(object):\n+class KeyReferenceNever:\n     """A keyreference that is never ready"""\n \n     key_type_id = \'five.intid.cmfexceptions.keyreference\'\ndiff --git a/five/intid/utils.py b/five/intid/utils.py\nindex ea0de0a..076a135 100644\n--- a/five/intid/utils.py\n+++ b/five/intid/utils.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n from Acquisition import aq_base\n from Acquisition import aq_inner\n from Acquisition import IAcquirer\ndiff --git a/setup.py b/setup.py\nindex 15ca893..58485a0 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n from setuptools import find_packages\n from setuptools import setup\n import os.path\n'

Repository: five.intid


Branch: refs/heads/master
Date: 2023-02-08T18:36:35+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/five.intid/commit/efebe223e883b922f866213ae9b7ba0007363e7e

chore: isort + black

Files changed:
M five/__init__.py
M five/intid/intid.py
M five/intid/keyreference.py
M five/intid/site.py
M five/intid/tests.py
M five/intid/unreferenceable.py
M five/intid/utils.py
M setup.py

b'diff --git a/five/__init__.py b/five/__init__.py\nindex de40ea7..5284146 100644\n--- a/five/__init__.py\n+++ b/five/__init__.py\n@@ -1 +1 @@\n-__import__(\'pkg_resources\').declare_namespace(__name__)\n+__import__("pkg_resources").declare_namespace(__name__)\ndiff --git a/five/intid/intid.py b/five/intid/intid.py\nindex 49a8c97..0c8d048 100644\n--- a/five/intid/intid.py\n+++ b/five/intid/intid.py\n@@ -1,5 +1,5 @@\n-from Acquisition import Explicit\n from AccessControl.class_init import InitializeClass\n+from Acquisition import Explicit\n from zope.component import getAllUtilitiesRegisteredFor\n from zope.event import notify\n from zope.interface import implementer\n@@ -7,16 +7,19 @@\n from zope.intid.interfaces import IIntIds\n from zope.intid.interfaces import IntIdAddedEvent\n from zope.intid.interfaces import IntIdRemovedEvent\n-from zope.keyreference.interfaces import IKeyReference, NotYet\n+from zope.keyreference.interfaces import IKeyReference\n+from zope.keyreference.interfaces import NotYet\n+\n import pkg_resources\n \n \n try:\n-    pkg_resources.get_distribution(\'Products.CMFCore\')\n+    pkg_resources.get_distribution("Products.CMFCore")\n except pkg_resources.DistributionNotFound:\n     # If not present, returning None suffices\n     def getToolByName(*args, **kw):\n         return None\n+\n else:\n     from Products.CMFCore.utils import getToolByName\n \n@@ -26,7 +29,8 @@ def getToolByName(*args, **kw):\n \n @implementer(IIntIds)\n class IntIds(z3IntIds):\n-    """ zope2ish intid utility """\n+    """zope2ish intid utility"""\n+\n     meta_type = "IntId Utility"\n \n     def __init__(self, id_=IIntIds.__name__):\n@@ -58,6 +62,7 @@ def unregister(self, ob):\n         del self.refs[uid]\n         del self.ids[key]\n \n+\n InitializeClass(IntIds)\n \n \n@@ -71,6 +76,7 @@ def manage_fixupOwnershipAfterAdd(self):\n     def wl_isLocked(self):\n         return False\n \n+\n InitializeClass(OFSIntIds)\n \n \n@@ -82,7 +88,7 @@ def addIntIdSubscriber(ob, event):\n     Registers the object added in all unique id utilities and fires\n     an event for the catalogs.\n     """\n-    factorytool = getToolByName(ob, \'portal_factory\', None)\n+    factorytool = getToolByName(ob, "portal_factory", None)\n     if factorytool is not None and factorytool.isTemporary(ob):\n         # Ignore objects marked as temporary in the CMFPlone portal_factory\n         # tool\ndiff --git a/five/intid/keyreference.py b/five/intid/keyreference.py\nindex 9b448cf..0947c0a 100644\n--- a/five/intid/keyreference.py\n+++ b/five/intid/keyreference.py\n@@ -1,34 +1,35 @@\n from Acquisition import aq_base\n from Acquisition import aq_chain\n from Acquisition import IAcquirer\n-from ZODB.interfaces import IConnection\n-from ZPublisher.BaseRequest import RequestContainer\n+from five.intid.site import get_root\n+from five.intid.utils import aq_iter\n from persistent import IPersistent\n+from ZODB.interfaces import IConnection\n from zope.component import adapter\n from zope.component.hooks import getSite\n from zope.interface import implementer\n-from zope.keyreference.interfaces import NotYet\n from zope.keyreference.interfaces import IKeyReference\n+from zope.keyreference.interfaces import NotYet\n from zope.keyreference.persistent import KeyReferenceToPersistent\n-from five.intid.utils import aq_iter\n-from five.intid.site import get_root\n from zope.lifecycleevent.interfaces import IObjectAddedEvent\n+from ZPublisher.BaseRequest import RequestContainer\n \n import logging\n import six\n \n+\n logger = logging.getLogger(__name__)\n \n \n @adapter(IPersistent)\n @implementer(IConnection)\n def connectionOfPersistent(obj):\n-    """ zope2 cxn fetcher for wrapped items """\n-    if not (IAcquirer.providedBy(obj) or hasattr(obj, \'__parent__\')):\n-        return getattr(obj, \'_p_jar\', None)\n+    """zope2 cxn fetcher for wrapped items"""\n+    if not (IAcquirer.providedBy(obj) or hasattr(obj, "__parent__")):\n+        return getattr(obj, "_p_jar", None)\n \n     for parent in aq_iter(obj):\n-        conn = getattr(parent, \'_p_jar\', None)\n+        conn = getattr(parent, "_p_jar", None)\n         if conn is not None:\n             return conn\n \n@@ -49,7 +50,7 @@ def traverse(base, path):\n     raises: KeyError if not traversable this way\n     """\n     current = base\n-    for cid in path.split(\'/\'):\n+    for cid in path.split("/"):\n         if not cid:\n             continue\n         current = current[cid]\n@@ -67,28 +68,28 @@ class KeyReferenceToPersistent(KeyReferenceToPersistent):\n     @@ cache IConnection as a property and volative attr?\n     """\n \n-    key_type_id = \'five.intid.keyreference\'\n+    key_type_id = "five.intid.keyreference"\n     # Default dbname where the root is. This is defined here for\n     # backward compatibility with previously created objects.\n-    root_dbname = \'main\'\n+    root_dbname = "main"\n \n     def __init__(self, wrapped_obj):\n \n         # make sure our object is wrapped by containment only\n         try:\n-            self.path = \'/\'.join(wrapped_obj.getPhysicalPath())\n+            self.path = "/".join(wrapped_obj.getPhysicalPath())\n         except AttributeError:\n             self.path = None\n \n         # If the path ends with /, it means the object had an empty id.\n         # This means it\'s not yet added to the container, and so we have\n         # to defer.\n-        if self.path is not None and self.path.endswith(\'/\'):\n+        if self.path is not None and self.path.endswith("/"):\n             raise NotYet(wrapped_obj)\n         self.object = aq_base(wrapped_obj)\n         connection = IConnection(wrapped_obj, None)\n \n-        if not getattr(self.object, \'_p_oid\', None):\n+        if not getattr(self.object, "_p_oid", None):\n             if connection is None:\n                 raise NotYet(wrapped_obj)\n             connection.add(self.object)\n@@ -106,10 +107,10 @@ def __init__(self, wrapped_obj):\n         self.dbname = connection.db().database_name\n \n     def __setstate__(self, state):\n-        for key in (\'root_oid\', \'oid\'):\n+        for key in ("root_oid", "oid"):\n             value = state.get(key)\n             if isinstance(value, str):\n-                state[key] = value.encode(\'utf-8\')\n+                state[key] = value.encode("utf-8")\n         self.__dict__.update(state)\n \n     @property\n@@ -130,7 +131,7 @@ def wrapped_object(self):\n         except KeyError:\n             # be paranoid and fall back to the complex OFS traverse for (hypothetical)\n             # edge cases\n-            logger.debug(f\'fall back to OFS traversal for {self.path}\')\n+            logger.debug(f"fall back to OFS traversal for {self.path}")\n             obj = self.root.unrestrictedTraverse(self.path, None)\n         if obj is None:\n             return self.object\n@@ -154,9 +155,7 @@ def __call__(self):\n \n     def __hash__(self):\n         # XXX Maybe we should consider to use also other fields for the hash\n-        return hash((self.dbname,\n-                     self.object._p_oid,\n-                     ))\n+        return hash((self.dbname, self.object._p_oid))\n \n     def __cmp__(self, other):\n         # XXX This makes no sense on Python 3\ndiff --git a/five/intid/site.py b/five/intid/site.py\nindex 0a7c2f8..60fac71 100644\n--- a/five/intid/site.py\n+++ b/five/intid/site.py\n@@ -5,10 +5,12 @@\n from five.localsitemanager import make_objectmanager_site\n from OFS.interfaces import IApplication\n from Products.Five import BrowserView\n-from zope.component import getUtility, getSiteManager\n+from zope.component import getSiteManager\n+from zope.component import getUtility\n+from zope.component.hooks import setHooks\n+from zope.component.hooks import setSite\n from zope.interface.interfaces import ComponentLookupError\n from zope.location.interfaces import ISite\n-from zope.component.hooks import setSite, setHooks\n \n \n class FiveIntIdsInstall(BrowserView):\n@@ -17,9 +19,9 @@ def context(self):\n         return self._context[0]\n \n     def __init__(self, context, request):\n-        self._context = context,\n+        self._context = (context,)\n         self.request = request\n-        doinstall = self.request.get(\'install\', None)\n+        doinstall = self.request.get("install", None)\n         if doinstall:\n             self.install()\n \n@@ -33,7 +35,7 @@ def installed(self):\n             intids = getUtility(IIntIds)\n             if intids is not None:\n                 sm = self.context.getSiteManager()\n-                if \'intids\' in sm.objectIds():\n+                if "intids" in sm.objectIds():\n                     installed = True\n         except ComponentLookupError:\n             pass\n@@ -51,10 +53,10 @@ def get_root(app):\n     for parent in aq_iter(app, error=AttributeError):\n         if IApplication.providedBy(parent):\n             return parent\n-    raise AttributeError(\'No application found\')\n+    raise AttributeError("No application found")\n \n \n-def addUtility(site, interface, klass, name=\'\', ofs_name=\'\', findroot=True):\n+def addUtility(site, interface, klass, name="", ofs_name="", findroot=True):\n     """\n     add local utility in zope2\n     """\n@@ -75,17 +77,14 @@ def addUtility(site, interface, klass, name=\'\', ofs_name=\'\', findroot=True):\n     # stored, but not registered\n     ofs_name = ofs_name or name\n     obj = getattr(aq_base(sm), ofs_name, None)\n-    if sm.queryUtility(interface,\n-                       name=name,\n-                       default=None) is None:\n+    if sm.queryUtility(interface, name=name, default=None) is None:\n         # Register the utility if it is not yet registered\n         if obj is None:\n             if name:\n                 obj = klass(name)\n             else:\n                 obj = klass()\n-        sm.registerUtility(provided=interface, component=obj,\n-                           name=name)\n+        sm.registerUtility(provided=interface, component=obj, name=name)\n     elif obj is None:\n         # Get the utility if registered, but not yet stored in the LSM\n         obj = sm.queryUtility(interface, name=name)\n@@ -93,12 +92,11 @@ def addUtility(site, interface, klass, name=\'\', ofs_name=\'\', findroot=True):\n     # Make sure we store the utility permanently in the OFS so we don\'t loose\n     # intids on uninstall\n     if ofs_name and ofs_name not in sm.objectIds():\n-        sm._setObject(ofs_name, aq_base(obj), set_owner=False,\n-                      suppress_events=True)\n+        sm._setObject(ofs_name, aq_base(obj), set_owner=False, suppress_events=True)\n \n \n def add_intids(site, findroot=False):\n-    addUtility(site, IIntIds, IntIds, ofs_name=\'intids\', findroot=findroot)\n+    addUtility(site, IIntIds, IntIds, ofs_name="intids", findroot=findroot)\n \n \n def get_intids(context=None):\n@@ -109,5 +107,4 @@ def del_intids(context=None, findroot=False):\n     if findroot:\n         context = get_root(context)\n     utility = get_intids(context)\n-    getSiteManager(context).unregisterUtility(component=utility,\n-                                              provided=IIntIds)\n+    getSiteManager(context).unregisterUtility(component=utility, provided=IIntIds)\ndiff --git a/five/intid/tests.py b/five/intid/tests.py\nindex 146d6ab..809719d 100644\n--- a/five/intid/tests.py\n+++ b/five/intid/tests.py\n@@ -13,9 +13,10 @@\n \n \n class DemoPersistent(Persistent):\n-    """ Demo persistent object """\n-    test = \'test object\'\n-    __name__ = \'Test Object\'\n+    """Demo persistent object"""\n+\n+    test = "test object"\n+    __name__ = "Test Object"\n \n \n def setNotified(event):\n@@ -25,12 +26,14 @@ def setNotified(event):\n def setUp(app):\n     # enable zcml and site hooks\n     placeless.setUp()\n-    import Products.Five\n     from five import intid\n-    zcml.load_config(\'meta.zcml\', Products.Five)\n-    zcml.load_config(\'configure.zcml\', Products.Five)\n-    zcml.load_config(\'configure.zcml\', intid)\n-    zcml.load_config(\'test.zcml\', intid)\n+\n+    import Products.Five\n+\n+    zcml.load_config("meta.zcml", Products.Five)\n+    zcml.load_config("configure.zcml", Products.Five)\n+    zcml.load_config("configure.zcml", intid)\n+    zcml.load_config("test.zcml", intid)\n     setHooks()\n \n \n@@ -43,28 +46,32 @@ def check_output(self, want, got, optionflags):\n         want = re.sub("u\'(.*?)\'", "\'\\\\1\'", want)\n         # translate doctest exceptions\n         for dotted in (\n-            \'zope.interface.interfaces.ComponentLookupError\',\n-            \'zope.keyreference.interfaces.NotYet\',\n-            \'zope.intid.interfaces.IntIdMissingError\',\n-            \'zope.intid.interfaces.ObjectMissingError\',\n+            "zope.interface.interfaces.ComponentLookupError",\n+            "zope.keyreference.interfaces.NotYet",\n+            "zope.intid.interfaces.IntIdMissingError",\n+            "zope.intid.interfaces.ObjectMissingError",\n         ):\n             if dotted in got:\n                 got = re.sub(\n                     dotted,\n-                    dotted.rpartition(\'.\')[-1],\n+                    dotted.rpartition(".")[-1],\n                     got,\n                 )\n         return doctest.OutputChecker.check_output(self, want, got, optionflags)\n \n \n def test_suite():\n-    import unittest\n     from Testing.ZopeTestCase import FunctionalDocFileSuite\n-    return unittest.TestSuite([\n-        FunctionalDocFileSuite(\n-            \'README.rst\',\n-            package=\'five.intid\',\n-            optionflags=optionflags,\n-            checker=Py23DocChecker(),\n-        )\n-    ])\n+\n+    import unittest\n+\n+    return unittest.TestSuite(\n+        [\n+            FunctionalDocFileSuite(\n+                "README.rst",\n+                package="five.intid",\n+                optionflags=optionflags,\n+                checker=Py23DocChecker(),\n+            )\n+        ]\n+    )\ndiff --git a/five/intid/unreferenceable.py b/five/intid/unreferenceable.py\nindex d4b8061..5794c0d 100644\n--- a/five/intid/unreferenceable.py\n+++ b/five/intid/unreferenceable.py\n@@ -22,7 +22,7 @@ def moveIntIdSubscriber(ob, event):\n class KeyReferenceNever:\n     """A keyreference that is never ready"""\n \n-    key_type_id = \'five.intid.cmfexceptions.keyreference\'\n+    key_type_id = "five.intid.cmfexceptions.keyreference"\n \n     def __init__(self, obj):\n         raise NotYet()\ndiff --git a/five/intid/utils.py b/five/intid/utils.py\nindex 076a135..377b3a3 100644\n--- a/five/intid/utils.py\n+++ b/five/intid/utils.py\n@@ -4,7 +4,7 @@\n \n \n def aq_iter(obj, error=None):\n-    if not (IAcquirer.providedBy(obj) or hasattr(obj, \'__parent__\')):\n+    if not (IAcquirer.providedBy(obj) or hasattr(obj, "__parent__")):\n         raise TypeError("%s not acquisition wrapped" % obj)\n \n     # adapted from alecm\'s \'listen\'\n@@ -15,10 +15,10 @@ def aq_iter(obj, error=None):\n     while cur is not None:\n         yield cur\n         seen.add(id(aq_base(cur)))\n-        cur = getattr(cur, \'aq_parent\', getattr(cur, \'__parent__\', None))\n+        cur = getattr(cur, "aq_parent", getattr(cur, "__parent__", None))\n         if cur:\n             cur = aq_inner(cur)  # unwrap from Acquisition context\n         if id(aq_base(cur)) in seen:\n             if error is not None:\n-                raise error(\'__parent__ loop found\')\n+                raise error("__parent__ loop found")\n             break\ndiff --git a/setup.py b/setup.py\nindex 58485a0..cc47cc8 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,8 +1,10 @@\n from setuptools import find_packages\n from setuptools import setup\n+\n import os.path\n \n-version = \'1.2.7.dev0\'\n+\n+version = "1.2.7.dev0"\n \n longdescripton = open("README.rst").read() + "\\n"\n longdescripton += open(os.path.join("five", "intid", "README.rst")).read()\n@@ -11,7 +13,7 @@\n \n \n setup(\n-    name=\'five.intid\',\n+    name="five.intid",\n     version=version,\n     description="Zope support for zope.intid",\n     long_description=longdescripton,\n@@ -27,25 +29,25 @@\n         "Programming Language :: Python :: 3.8",\n     ],\n     keywords="\'zope2 intid\'",\n-    author=\'Whit Morris\',\n-    author_email=\'whit@openplans.org\',\n-    license=\'ZPL\',\n-    url=\'https://github.com/plone/five.intid\',\n+    author="Whit Morris",\n+    author_email="whit@openplans.org",\n+    license="ZPL",\n+    url="https://github.com/plone/five.intid",\n     packages=find_packages(),\n-    namespace_packages=[\'five\'],\n+    namespace_packages=["five"],\n     include_package_data=True,\n     zip_safe=False,\n     install_requires=[\n-        \'Acquisition>=4.0.1\',\n-        \'setuptools\',\n-        \'zope.intid\',\n-        \'zope.component\',\n-        \'zope.event\',\n-        \'zope.interface\',\n-        \'zope.lifecycleevent\',\n-        \'zope.keyreference\',\n-        \'zope.location\',\n-        \'five.localsitemanager\',\n+        "Acquisition>=4.0.1",\n+        "setuptools",\n+        "zope.intid",\n+        "zope.component",\n+        "zope.event",\n+        "zope.interface",\n+        "zope.lifecycleevent",\n+        "zope.keyreference",\n+        "zope.location",\n+        "five.localsitemanager",\n         \'Zope2 >= 2.13;python_version=="2.7"\',\n         \'Zope >= 4;python_version>="3.6"\',\n     ],\n'

Repository: five.intid


Branch: refs/heads/master
Date: 2023-02-08T18:37:00+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/five.intid/commit/02b89928ed27d54b241f24b993bf52e5af3bcaae

chore: zpretty

Files changed:
M five/intid/base.zcml
M five/intid/cmfdirectoryview.zcml
M five/intid/subscriber.zcml
M five/intid/test.zcml

b'diff --git a/five/intid/base.zcml b/five/intid/base.zcml\nindex 5e32e65..e52a773 100644\n--- a/five/intid/base.zcml\n+++ b/five/intid/base.zcml\n@@ -1,43 +1,51 @@\n-<configure xmlns="http://namespaces.zope.org/zope"\n-           xmlns:browser="http://namespaces.zope.org/browser">\n+<configure\n+    xmlns="http://namespaces.zope.org/zope"\n+    xmlns:browser="http://namespaces.zope.org/browser"\n+    >\n \n-  <exclude package="zope.keyreference" file="configure.zcml" />\n+  <exclude\n+      package="zope.keyreference"\n+      file="configure.zcml"\n+      />\n \n   <adapter\n-     factory=".keyreference.KeyReferenceToPersistent"\n-     trusted="y" />\n+      factory=".keyreference.KeyReferenceToPersistent"\n+      trusted="y"\n+      />\n \n   <adapter factory=".keyreference.connectionOfPersistent" />\n \n   <class class=".keyreference.KeyReferenceToPersistent">\n-    <require permission="zope.Public"\n-             interface="zope.keyreference.interfaces.IKeyReference" />\n+    <require\n+        permission="zope.Public"\n+        interface="zope.keyreference.interfaces.IKeyReference"\n+        />\n   </class>\n \n   <browser:page\n-     for="OFS.interfaces.IFolder"\n-     class=".site.FiveIntIdsInstall"\n-     permission="five.ManageSite"\n-     template="install.pt"\n-     name="install-intids.html"\n-     />\n+      name="install-intids.html"\n+      for="OFS.interfaces.IFolder"\n+      class=".site.FiveIntIdsInstall"\n+      template="install.pt"\n+      permission="five.ManageSite"\n+      />\n \n   <browser:page\n-     for="OFS.interfaces.IApplication"\n-     class=".site.FiveIntIdsInstall"\n-     permission="five.ManageSite"\n-     template="install.pt"\n-     name="install-intids.html"\n-     />\n+      name="install-intids.html"\n+      for="OFS.interfaces.IApplication"\n+      class=".site.FiveIntIdsInstall"\n+      template="install.pt"\n+      permission="five.ManageSite"\n+      />\n \n   <subscriber\n-     for="zope.intid.interfaces.IIntIdAddedEvent"\n-     handler="zope.component.event.objectEventNotify"\n-     />\n+      for="zope.intid.interfaces.IIntIdAddedEvent"\n+      handler="zope.component.event.objectEventNotify"\n+      />\n \n   <subscriber\n-     for="zope.intid.interfaces.IIntIdRemovedEvent"\n-     handler="zope.component.event.objectEventNotify"\n-     />\n+      for="zope.intid.interfaces.IIntIdRemovedEvent"\n+      handler="zope.component.event.objectEventNotify"\n+      />\n \n </configure>\ndiff --git a/five/intid/cmfdirectoryview.zcml b/five/intid/cmfdirectoryview.zcml\nindex f5555fe..cc7a4b5 100644\n--- a/five/intid/cmfdirectoryview.zcml\n+++ b/five/intid/cmfdirectoryview.zcml\n@@ -1,23 +1,24 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:zcml="http://namespaces.zope.org/zcml"\n-    zcml:condition="installed Products.CMFCore">\n+    zcml:condition="installed Products.CMFCore"\n+    >\n \n   <!-- DirectoryViews -->\n   <subscriber\n-      handler=".unreferenceable.addIntIdSubscriber"\n       for="Products.CMFCore.interfaces.IDirectoryView\n            zope.lifecycleevent.interfaces.IObjectAddedEvent"\n+      handler=".unreferenceable.addIntIdSubscriber"\n       />\n   <subscriber\n-      handler=".unreferenceable.removeIntIdSubscriber"\n       for="Products.CMFCore.interfaces.IDirectoryView\n            zope.lifecycleevent.interfaces.IObjectRemovedEvent"\n+      handler=".unreferenceable.removeIntIdSubscriber"\n       />\n   <subscriber\n-      handler=".unreferenceable.moveIntIdSubscriber"\n       for="Products.CMFCore.interfaces.IDirectoryView\n            zope.lifecycleevent.interfaces.IObjectMovedEvent"\n+      handler=".unreferenceable.moveIntIdSubscriber"\n       />\n   <adapter\n       factory=".unreferenceable.KeyReferenceNever"\n@@ -27,19 +28,19 @@\n \n   <!-- FSObject -->\n   <subscriber\n-      handler=".unreferenceable.addIntIdSubscriber"\n       for="Products.CMFCore.FSObject.FSObject\n            zope.lifecycleevent.interfaces.IObjectAddedEvent"\n+      handler=".unreferenceable.addIntIdSubscriber"\n       />\n   <subscriber\n-      handler=".unreferenceable.removeIntIdSubscriber"\n       for="Products.CMFCore.FSObject.FSObject\n            zope.lifecycleevent.interfaces.IObjectRemovedEvent"\n+      handler=".unreferenceable.removeIntIdSubscriber"\n       />\n   <subscriber\n-      handler=".unreferenceable.moveIntIdSubscriber"\n       for="Products.CMFCore.FSObject.FSObject\n            zope.lifecycleevent.interfaces.IObjectMovedEvent"\n+      handler=".unreferenceable.moveIntIdSubscriber"\n       />\n   <adapter\n       factory=".unreferenceable.KeyReferenceNever"\ndiff --git a/five/intid/subscriber.zcml b/five/intid/subscriber.zcml\nindex 773db42..9078ad7 100644\n--- a/five/intid/subscriber.zcml\n+++ b/five/intid/subscriber.zcml\n@@ -1,18 +1,18 @@\n <configure xmlns="http://namespaces.zope.org/zope">\n \n   <subscriber\n-     handler=".intid.addIntIdSubscriber"\n-     for="persistent.IPersistent\n-          zope.lifecycleevent.interfaces.IObjectAddedEvent"\n+      for="persistent.IPersistent\n+           zope.lifecycleevent.interfaces.IObjectAddedEvent"\n+      handler=".intid.addIntIdSubscriber"\n       />\n   <subscriber\n-      handler=".intid.removeIntIdSubscriber"\n       for="persistent.IPersistent\n            zope.lifecycleevent.interfaces.IObjectRemovedEvent"\n+      handler=".intid.removeIntIdSubscriber"\n       />\n   <subscriber\n-      handler=".intid.moveIntIdSubscriber"\n       for="OFS.interfaces.ITraversable\n            zope.lifecycleevent.interfaces.IObjectMovedEvent"\n+      handler=".intid.moveIntIdSubscriber"\n       />\n </configure>\ndiff --git a/five/intid/test.zcml b/five/intid/test.zcml\nindex 1cae4ee..dd0807b 100644\n--- a/five/intid/test.zcml\n+++ b/five/intid/test.zcml\n@@ -1,12 +1,12 @@\n <configure xmlns="http://namespaces.zope.org/zope">\n \n   <subscriber\n-      handler=".tests.setNotified"\n       for="zope.intid.interfaces.IIntIdAddedEvent"\n+      handler=".tests.setNotified"\n       />\n   <subscriber\n-      handler=".tests.setNotified"\n       for="zope.intid.interfaces.IIntIdRemovedEvent"\n+      handler=".tests.setNotified"\n       />\n \n </configure>\n'

Repository: five.intid


Branch: refs/heads/master
Date: 2023-02-08T18:43:07+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/five.intid/commit/98120735570b0174a471b4c0d7853a66db7dd270

chore: flake8

Files changed:
M five/intid/keyreference.py
M five/intid/tests.py
M five/intid/unreferenceable.py

b'diff --git a/five/intid/keyreference.py b/five/intid/keyreference.py\nindex 0947c0a..c2e0de0 100644\n--- a/five/intid/keyreference.py\n+++ b/five/intid/keyreference.py\n@@ -15,7 +15,6 @@\n from ZPublisher.BaseRequest import RequestContainer\n \n import logging\n-import six\n \n \n logger = logging.getLogger(__name__)\n@@ -156,9 +155,3 @@ def __call__(self):\n     def __hash__(self):\n         # XXX Maybe we should consider to use also other fields for the hash\n         return hash((self.dbname, self.object._p_oid))\n-\n-    def __cmp__(self, other):\n-        # XXX This makes no sense on Python 3\n-        if self.key_type_id == other.key_type_id:\n-            return cmp((self.dbname, self.oid), (other.dbname, other.oid))\n-        return cmp(self.key_type_id, other.key_type_id)\ndiff --git a/five/intid/tests.py b/five/intid/tests.py\nindex 809719d..b37d413 100644\n--- a/five/intid/tests.py\n+++ b/five/intid/tests.py\n@@ -5,7 +5,6 @@\n \n import doctest\n import re\n-import six\n \n \n optionflags = doctest.NORMALIZE_WHITESPACE | doctest.ELLIPSIS\ndiff --git a/five/intid/unreferenceable.py b/five/intid/unreferenceable.py\nindex 5794c0d..aaed943 100644\n--- a/five/intid/unreferenceable.py\n+++ b/five/intid/unreferenceable.py\n@@ -29,8 +29,3 @@ def __init__(self, obj):\n \n     def __call__(self):\n         return None\n-\n-    def __cmp__(self, other):\n-        if self.key_type_id == other.key_type_id:\n-            return cmp(self, other)\n-        return cmp(self.key_type_id, other.key_type_id)\n'

Repository: five.intid


Branch: refs/heads/master
Date: 2023-02-08T18:45:50+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/five.intid/commit/3696f4e312d5b256fa6fa53b2548a4397038af9a

chore: codespell typos

Files changed:
M CHANGES.rst
M five/intid/README.rst
M five/intid/intid.py
M five/intid/keyreference.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 4cae018..550610b 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -14,8 +14,8 @@ Changelog\n Bug fixes:\n \n \n-- Fix depecration warnings.\n-  Update ``setup.py`` to depend on ``Zope2`` or ``Zope``, dependening on Python version.\n+- Fix deprecation warnings.\n+  Update ``setup.py`` to depend on ``Zope2`` or ``Zope``, depending on Python version.\n   [jensens] (#1)\n - Fix test to work correctly with ``zope.interface >= 5.1``.\n   [jensens] (#17)\n@@ -102,7 +102,7 @@ Bug fixes:\n \n Fixes:\n \n-- Acquisition-unwrap each item in the aq_iter chain, as ``getSite().__parent__`` might return an object aquired from the original context which breaks the parent loop detection.\n+- Acquisition-unwrap each item in the aq_iter chain, as ``getSite().__parent__`` might return an object acquired from the original context which breaks the parent loop detection.\n   [thet]\n \n - Prevent errors on ``moveIntIdSubscriber`` when the ``IKeyReference`` adapter\ndiff --git a/five/intid/README.rst b/five/intid/README.rst\nindex 8e22e09..81adee4 100644\n--- a/five/intid/README.rst\n+++ b/five/intid/README.rst\n@@ -90,7 +90,7 @@ and get an object back like this::\n     >>> intid.getObject(ob_id)\n     <SimpleContent at /test_folder_1_/mycont2>\n \n-these objects are aquisition wrapped on retrieval::\n+these objects are acquisition wrapped on retrieval::\n \n     >>> from Acquisition import IAcquirer\n     >>> IAcquirer.providedBy(intid.getObject(ob_id))\n@@ -336,15 +336,15 @@ object (the parent, to be precise) from an incorrect path.\n \n \n If the object is placed in a circular containment, IKeyReference(object) should\n-not be able to adapt, letting the calling code defer as neccesary.\n+not be able to adapt, letting the calling code defer as necessary.\n Also any object access is defeated and raises a RuntimeError.\n \n-This case happend when having a Plone4 site five.intid enabled\n+This case happened when having a Plone4 site five.intid enabled\n (five.intid.site.add_intids(site)) and trying to add a portlet via\n @@manage-portlets. plone.portlet.static.static.Assignment seems to have a\n circular path at some time.\n \n-Creating items whith a circular containment\n+Creating items with a circular containment\n     >>> item_b = SimpleItem().__of__(self.folder)\n     >>> item_b.id = "b"\n     >>> item_c = SimpleItem().__of__(item_b)\ndiff --git a/five/intid/intid.py b/five/intid/intid.py\nindex 0c8d048..48305d7 100644\n--- a/five/intid/intid.py\n+++ b/five/intid/intid.py\n@@ -95,7 +95,7 @@ def addIntIdSubscriber(ob, event):\n         return\n \n     utilities = tuple(getAllUtilitiesRegisteredFor(IIntIds))\n-    if utilities:  # assert that there are any utilites\n+    if utilities:  # assert that there are any utilities\n         key = None\n         try:\n             key = IKeyReference(ob, None)\ndiff --git a/five/intid/keyreference.py b/five/intid/keyreference.py\nindex c2e0de0..ac7a5fb 100644\n--- a/five/intid/keyreference.py\n+++ b/five/intid/keyreference.py\n@@ -143,7 +143,7 @@ def wrapped_object(self):\n             if len(site_chain) and isinstance(site_chain[-1], RequestContainer):\n                 req = site_chain[-1]\n                 new_obj = req\n-                # rebuld the chain with the request at the bottom\n+                # rebuild the chain with the request at the bottom\n                 for item in reversed(chain):\n                     new_obj = aq_base(item).__of__(new_obj)\n                 obj = new_obj\n'

Repository: five.intid


Branch: refs/heads/master
Date: 2023-02-08T18:46:40+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/five.intid/commit/2c0b714a76d7f74e67fcb52b498d12e31779b1fb

chore: pyroma

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex cc47cc8..1248034 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -37,6 +37,7 @@\n     namespace_packages=["five"],\n     include_package_data=True,\n     zip_safe=False,\n+    python_requires=">=3.8",\n     install_requires=[\n         "Acquisition>=4.0.1",\n         "setuptools",\n'

Repository: five.intid


Branch: refs/heads/master
Date: 2023-02-08T19:01:21+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/five.intid/commit/de4a8c10e63487c97eb162ae018a74512a26cec2

feat: declare dependencies

Files changed:
M .meta.toml
M pyproject.toml
M setup.py

b'diff --git a/.meta.toml b/.meta.toml\nindex be4c8b0..f18ca56 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -3,3 +3,8 @@\n [meta]\n template = "default"\n commit-id = "b1b9dfbb"\n+\n+[dependencies]\n+mappings = [\n+    "Zope = [\'OFS\', \'Products.Five\', \'Testing\', \'ZPublisher\', \'Zope2\', ]",\n+    ]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 0f96c85..b3edb96 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -41,3 +41,6 @@ profile = "plone"\n \n [tool.black]\n target-version = ["py38"]\n+\n+[tool.dependencychecker]\n+Zope = [\'OFS\', \'Products.Five\', \'Testing\', \'ZPublisher\', \'Zope2\', ]\ndiff --git a/setup.py b/setup.py\nindex 1248034..bc0acab 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -39,7 +39,13 @@\n     zip_safe=False,\n     python_requires=">=3.8",\n     install_requires=[\n+        "AccessControl",\n         "Acquisition>=4.0.1",\n+        "Products.CMFCore",\n+        "ZODB",\n+        "Zope",\n+        "five.localsitemanager",\n+        "persistent",\n         "setuptools",\n         "zope.intid",\n         "zope.component",\n@@ -48,8 +54,5 @@\n         "zope.lifecycleevent",\n         "zope.keyreference",\n         "zope.location",\n-        "five.localsitemanager",\n-        \'Zope2 >= 2.13;python_version=="2.7"\',\n-        \'Zope >= 4;python_version>="3.6"\',\n     ],\n )\n'

Repository: five.intid


Branch: refs/heads/master
Date: 2023-02-08T19:02:09+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/five.intid/commit/e19dcb29bc3ac2ec417b146d5d0618bf30d06a8f

Add news entry

Files changed:
A news/1.bugfix

b'diff --git a/news/1.bugfix b/news/1.bugfix\nnew file mode 100644\nindex 0000000..e844e2b\n--- /dev/null\n+++ b/news/1.bugfix\n@@ -0,0 +1,2 @@\n+Add configuration with plone/meta.\n+[gforcada]\n'

Repository: five.intid


Branch: refs/heads/master
Date: 2023-02-08T21:46:35+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/five.intid/commit/e05aa66798073d389a4b8413587b6ef6fc92c3bb

Use global workflow

Files changed:
D .github/workflows/linting.yml

b'diff --git a/.github/workflows/linting.yml b/.github/workflows/linting.yml\ndeleted file mode 100644\nindex 5ea3292..0000000\n--- a/.github/workflows/linting.yml\n+++ /dev/null\n@@ -1,39 +0,0 @@\n-# Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n-name: Linting\n-on:\n-  push:\n-    branches: [master]\n-  pull_request:\n-    branches: [master]\n-  workflow_dispatch:\n-\n-jobs:\n-  lint:\n-    name: Format and lint code\n-    runs-on: ${{ matrix.os }}\n-    strategy:\n-      matrix:\n-        python-version: ["3.8"]\n-        os: ["ubuntu-22.04"]\n-    steps:\n-      - uses: actions/checkout@v3\n-      - name: Set up Python\n-        uses: actions/setup-python@v4\n-        with:\n-          python-version: ${{ matrix.python-version }}\n-      - name: Cache packages\n-        uses: actions/cache@v3\n-        with:\n-          path: ~/.cache/pip\n-          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles(\'lint-requirements.txt\', \'tox.ini\') }}\n-          restore-keys: |\n-            ${{ runner.os }}-pip-${{ matrix.python-version }}-\n-            ${{ runner.os }}-pip-\n-      - name: Install dependencies\n-        run: python -m pip install tox\n-      - name: Run formatters\n-        run: tox -e format\n-      # linters\n-      - name: QA\n-        run: tox -e lint\n'

Repository: five.intid


Branch: refs/heads/master
Date: 2023-02-09T00:41:19+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/five.intid/commit/6c3c7b10bcf1b3ccc8fe745ae8997ddd519a5354

Merge pull request #21 from plone/config-with-default-template-2c0b714a

Config with default template

Files changed:
A .editorconfig
A .meta.toml
A lint-requirements.txt
A news/1.bugfix
A tox.ini
M CHANGES.rst
M five/__init__.py
M five/intid/README.rst
M five/intid/__init__.py
M five/intid/base.zcml
M five/intid/cmfdirectoryview.zcml
M five/intid/intid.py
M five/intid/keyreference.py
M five/intid/site.py
M five/intid/subscriber.zcml
M five/intid/test.zcml
M five/intid/tests.py
M five/intid/unreferenceable.py
M five/intid/utils.py
M pyproject.toml
M setup.cfg
M setup.py

b'diff --git a/.editorconfig b/.editorconfig\nnew file mode 100644\nindex 0000000..b4158b8\n--- /dev/null\n+++ b/.editorconfig\n@@ -0,0 +1,39 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+#\n+# EditorConfig Configuration file, for more details see:\n+# http://EditorConfig.org\n+# EditorConfig is a convention description, that could be interpreted\n+# by multiple editors to enforce common coding conventions for specific\n+# file types\n+\n+# top-most EditorConfig file:\n+# Will ignore other EditorConfig files in Home directory or upper tree level.\n+root = true\n+\n+\n+[*]  # For All Files\n+# Unix-style newlines with a newline ending every file\n+end_of_line = lf\n+insert_final_newline = true\n+trim_trailing_whitespace = true\n+# Set default charset\n+charset = utf-8\n+# Indent style default\n+indent_style = space\n+# Max Line Length - a hard line wrap, should be disabled\n+max_line_length = off\n+\n+[*.{py,cfg,ini}]\n+# 4 space indentation\n+indent_size = 4\n+\n+[*.{yml,zpt,pt,dtml,zcml}]\n+# 2 space indentation\n+indent_size = 2\n+\n+[{Makefile,.gitmodules}]\n+# Tab indentation (no size specified, but view as 4 spaces)\n+indent_style = tab\n+indent_size = unset\n+tab_width = unset\ndiff --git a/.meta.toml b/.meta.toml\nnew file mode 100644\nindex 0000000..f18ca56\n--- /dev/null\n+++ b/.meta.toml\n@@ -0,0 +1,10 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[meta]\n+template = "default"\n+commit-id = "b1b9dfbb"\n+\n+[dependencies]\n+mappings = [\n+    "Zope = [\'OFS\', \'Products.Five\', \'Testing\', \'ZPublisher\', \'Zope2\', ]",\n+    ]\ndiff --git a/CHANGES.rst b/CHANGES.rst\nindex 4cae018..550610b 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -14,8 +14,8 @@ Changelog\n Bug fixes:\n \n \n-- Fix depecration warnings.\n-  Update ``setup.py`` to depend on ``Zope2`` or ``Zope``, dependening on Python version.\n+- Fix deprecation warnings.\n+  Update ``setup.py`` to depend on ``Zope2`` or ``Zope``, depending on Python version.\n   [jensens] (#1)\n - Fix test to work correctly with ``zope.interface >= 5.1``.\n   [jensens] (#17)\n@@ -102,7 +102,7 @@ Bug fixes:\n \n Fixes:\n \n-- Acquisition-unwrap each item in the aq_iter chain, as ``getSite().__parent__`` might return an object aquired from the original context which breaks the parent loop detection.\n+- Acquisition-unwrap each item in the aq_iter chain, as ``getSite().__parent__`` might return an object acquired from the original context which breaks the parent loop detection.\n   [thet]\n \n - Prevent errors on ``moveIntIdSubscriber`` when the ``IKeyReference`` adapter\ndiff --git a/five/__init__.py b/five/__init__.py\nindex 68c04af..5284146 100644\n--- a/five/__init__.py\n+++ b/five/__init__.py\n@@ -1,2 +1 @@\n-# -*- coding: utf-8 -*-\n-__import__(\'pkg_resources\').declare_namespace(__name__)\n+__import__("pkg_resources").declare_namespace(__name__)\ndiff --git a/five/intid/README.rst b/five/intid/README.rst\nindex 8e22e09..81adee4 100644\n--- a/five/intid/README.rst\n+++ b/five/intid/README.rst\n@@ -90,7 +90,7 @@ and get an object back like this::\n     >>> intid.getObject(ob_id)\n     <SimpleContent at /test_folder_1_/mycont2>\n \n-these objects are aquisition wrapped on retrieval::\n+these objects are acquisition wrapped on retrieval::\n \n     >>> from Acquisition import IAcquirer\n     >>> IAcquirer.providedBy(intid.getObject(ob_id))\n@@ -336,15 +336,15 @@ object (the parent, to be precise) from an incorrect path.\n \n \n If the object is placed in a circular containment, IKeyReference(object) should\n-not be able to adapt, letting the calling code defer as neccesary.\n+not be able to adapt, letting the calling code defer as necessary.\n Also any object access is defeated and raises a RuntimeError.\n \n-This case happend when having a Plone4 site five.intid enabled\n+This case happened when having a Plone4 site five.intid enabled\n (five.intid.site.add_intids(site)) and trying to add a portlet via\n @@manage-portlets. plone.portlet.static.static.Assignment seems to have a\n circular path at some time.\n \n-Creating items whith a circular containment\n+Creating items with a circular containment\n     >>> item_b = SimpleItem().__of__(self.folder)\n     >>> item_b.id = "b"\n     >>> item_c = SimpleItem().__of__(item_b)\ndiff --git a/five/intid/__init__.py b/five/intid/__init__.py\nindex 40a96af..e69de29 100644\n--- a/five/intid/__init__.py\n+++ b/five/intid/__init__.py\n@@ -1 +0,0 @@\n-# -*- coding: utf-8 -*-\ndiff --git a/five/intid/base.zcml b/five/intid/base.zcml\nindex 5e32e65..e52a773 100644\n--- a/five/intid/base.zcml\n+++ b/five/intid/base.zcml\n@@ -1,43 +1,51 @@\n-<configure xmlns="http://namespaces.zope.org/zope"\n-           xmlns:browser="http://namespaces.zope.org/browser">\n+<configure\n+    xmlns="http://namespaces.zope.org/zope"\n+    xmlns:browser="http://namespaces.zope.org/browser"\n+    >\n \n-  <exclude package="zope.keyreference" file="configure.zcml" />\n+  <exclude\n+      package="zope.keyreference"\n+      file="configure.zcml"\n+      />\n \n   <adapter\n-     factory=".keyreference.KeyReferenceToPersistent"\n-     trusted="y" />\n+      factory=".keyreference.KeyReferenceToPersistent"\n+      trusted="y"\n+      />\n \n   <adapter factory=".keyreference.connectionOfPersistent" />\n \n   <class class=".keyreference.KeyReferenceToPersistent">\n-    <require permission="zope.Public"\n-             interface="zope.keyreference.interfaces.IKeyReference" />\n+    <require\n+        permission="zope.Public"\n+        interface="zope.keyreference.interfaces.IKeyReference"\n+        />\n   </class>\n \n   <browser:page\n-     for="OFS.interfaces.IFolder"\n-     class=".site.FiveIntIdsInstall"\n-     permission="five.ManageSite"\n-     template="install.pt"\n-     name="install-intids.html"\n-     />\n+      name="install-intids.html"\n+      for="OFS.interfaces.IFolder"\n+      class=".site.FiveIntIdsInstall"\n+      template="install.pt"\n+      permission="five.ManageSite"\n+      />\n \n   <browser:page\n-     for="OFS.interfaces.IApplication"\n-     class=".site.FiveIntIdsInstall"\n-     permission="five.ManageSite"\n-     template="install.pt"\n-     name="install-intids.html"\n-     />\n+      name="install-intids.html"\n+      for="OFS.interfaces.IApplication"\n+      class=".site.FiveIntIdsInstall"\n+      template="install.pt"\n+      permission="five.ManageSite"\n+      />\n \n   <subscriber\n-     for="zope.intid.interfaces.IIntIdAddedEvent"\n-     handler="zope.component.event.objectEventNotify"\n-     />\n+      for="zope.intid.interfaces.IIntIdAddedEvent"\n+      handler="zope.component.event.objectEventNotify"\n+      />\n \n   <subscriber\n-     for="zope.intid.interfaces.IIntIdRemovedEvent"\n-     handler="zope.component.event.objectEventNotify"\n-     />\n+      for="zope.intid.interfaces.IIntIdRemovedEvent"\n+      handler="zope.component.event.objectEventNotify"\n+      />\n \n </configure>\ndiff --git a/five/intid/cmfdirectoryview.zcml b/five/intid/cmfdirectoryview.zcml\nindex f5555fe..cc7a4b5 100644\n--- a/five/intid/cmfdirectoryview.zcml\n+++ b/five/intid/cmfdirectoryview.zcml\n@@ -1,23 +1,24 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:zcml="http://namespaces.zope.org/zcml"\n-    zcml:condition="installed Products.CMFCore">\n+    zcml:condition="installed Products.CMFCore"\n+    >\n \n   <!-- DirectoryViews -->\n   <subscriber\n-      handler=".unreferenceable.addIntIdSubscriber"\n       for="Products.CMFCore.interfaces.IDirectoryView\n            zope.lifecycleevent.interfaces.IObjectAddedEvent"\n+      handler=".unreferenceable.addIntIdSubscriber"\n       />\n   <subscriber\n-      handler=".unreferenceable.removeIntIdSubscriber"\n       for="Products.CMFCore.interfaces.IDirectoryView\n            zope.lifecycleevent.interfaces.IObjectRemovedEvent"\n+      handler=".unreferenceable.removeIntIdSubscriber"\n       />\n   <subscriber\n-      handler=".unreferenceable.moveIntIdSubscriber"\n       for="Products.CMFCore.interfaces.IDirectoryView\n            zope.lifecycleevent.interfaces.IObjectMovedEvent"\n+      handler=".unreferenceable.moveIntIdSubscriber"\n       />\n   <adapter\n       factory=".unreferenceable.KeyReferenceNever"\n@@ -27,19 +28,19 @@\n \n   <!-- FSObject -->\n   <subscriber\n-      handler=".unreferenceable.addIntIdSubscriber"\n       for="Products.CMFCore.FSObject.FSObject\n            zope.lifecycleevent.interfaces.IObjectAddedEvent"\n+      handler=".unreferenceable.addIntIdSubscriber"\n       />\n   <subscriber\n-      handler=".unreferenceable.removeIntIdSubscriber"\n       for="Products.CMFCore.FSObject.FSObject\n            zope.lifecycleevent.interfaces.IObjectRemovedEvent"\n+      handler=".unreferenceable.removeIntIdSubscriber"\n       />\n   <subscriber\n-      handler=".unreferenceable.moveIntIdSubscriber"\n       for="Products.CMFCore.FSObject.FSObject\n            zope.lifecycleevent.interfaces.IObjectMovedEvent"\n+      handler=".unreferenceable.moveIntIdSubscriber"\n       />\n   <adapter\n       factory=".unreferenceable.KeyReferenceNever"\ndiff --git a/five/intid/intid.py b/five/intid/intid.py\nindex 8310b50..48305d7 100644\n--- a/five/intid/intid.py\n+++ b/five/intid/intid.py\n@@ -1,6 +1,5 @@\n-# -*- coding: utf-8 -*-\n-from Acquisition import Explicit\n from AccessControl.class_init import InitializeClass\n+from Acquisition import Explicit\n from zope.component import getAllUtilitiesRegisteredFor\n from zope.event import notify\n from zope.interface import implementer\n@@ -8,16 +7,19 @@\n from zope.intid.interfaces import IIntIds\n from zope.intid.interfaces import IntIdAddedEvent\n from zope.intid.interfaces import IntIdRemovedEvent\n-from zope.keyreference.interfaces import IKeyReference, NotYet\n+from zope.keyreference.interfaces import IKeyReference\n+from zope.keyreference.interfaces import NotYet\n+\n import pkg_resources\n \n \n try:\n-    pkg_resources.get_distribution(\'Products.CMFCore\')\n+    pkg_resources.get_distribution("Products.CMFCore")\n except pkg_resources.DistributionNotFound:\n     # If not present, returning None suffices\n     def getToolByName(*args, **kw):\n         return None\n+\n else:\n     from Products.CMFCore.utils import getToolByName\n \n@@ -27,12 +29,13 @@ def getToolByName(*args, **kw):\n \n @implementer(IIntIds)\n class IntIds(z3IntIds):\n-    """ zope2ish intid utility """\n+    """zope2ish intid utility"""\n+\n     meta_type = "IntId Utility"\n \n     def __init__(self, id_=IIntIds.__name__):\n         self.id = self.__name__ = id_\n-        super(IntIds, self).__init__()\n+        super().__init__()\n \n     def getId(self, ob=_marker):\n         # Compatibility with SimpleItem\n@@ -59,6 +62,7 @@ def unregister(self, ob):\n         del self.refs[uid]\n         del self.ids[key]\n \n+\n InitializeClass(IntIds)\n \n \n@@ -72,6 +76,7 @@ def manage_fixupOwnershipAfterAdd(self):\n     def wl_isLocked(self):\n         return False\n \n+\n InitializeClass(OFSIntIds)\n \n \n@@ -83,14 +88,14 @@ def addIntIdSubscriber(ob, event):\n     Registers the object added in all unique id utilities and fires\n     an event for the catalogs.\n     """\n-    factorytool = getToolByName(ob, \'portal_factory\', None)\n+    factorytool = getToolByName(ob, "portal_factory", None)\n     if factorytool is not None and factorytool.isTemporary(ob):\n         # Ignore objects marked as temporary in the CMFPlone portal_factory\n         # tool\n         return\n \n     utilities = tuple(getAllUtilitiesRegisteredFor(IIntIds))\n-    if utilities:  # assert that there are any utilites\n+    if utilities:  # assert that there are any utilities\n         key = None\n         try:\n             key = IKeyReference(ob, None)\ndiff --git a/five/intid/keyreference.py b/five/intid/keyreference.py\nindex f0706f9..ac7a5fb 100644\n--- a/five/intid/keyreference.py\n+++ b/five/intid/keyreference.py\n@@ -1,22 +1,21 @@\n-# -*- coding: utf-8 -*-\n from Acquisition import aq_base\n from Acquisition import aq_chain\n from Acquisition import IAcquirer\n-from ZODB.interfaces import IConnection\n-from ZPublisher.BaseRequest import RequestContainer\n+from five.intid.site import get_root\n+from five.intid.utils import aq_iter\n from persistent import IPersistent\n+from ZODB.interfaces import IConnection\n from zope.component import adapter\n from zope.component.hooks import getSite\n from zope.interface import implementer\n-from zope.keyreference.interfaces import NotYet\n from zope.keyreference.interfaces import IKeyReference\n+from zope.keyreference.interfaces import NotYet\n from zope.keyreference.persistent import KeyReferenceToPersistent\n-from five.intid.utils import aq_iter\n-from five.intid.site import get_root\n from zope.lifecycleevent.interfaces import IObjectAddedEvent\n+from ZPublisher.BaseRequest import RequestContainer\n \n import logging\n-import six\n+\n \n logger = logging.getLogger(__name__)\n \n@@ -24,12 +23,12 @@\n @adapter(IPersistent)\n @implementer(IConnection)\n def connectionOfPersistent(obj):\n-    """ zope2 cxn fetcher for wrapped items """\n-    if not (IAcquirer.providedBy(obj) or hasattr(obj, \'__parent__\')):\n-        return getattr(obj, \'_p_jar\', None)\n+    """zope2 cxn fetcher for wrapped items"""\n+    if not (IAcquirer.providedBy(obj) or hasattr(obj, "__parent__")):\n+        return getattr(obj, "_p_jar", None)\n \n     for parent in aq_iter(obj):\n-        conn = getattr(parent, \'_p_jar\', None)\n+        conn = getattr(parent, "_p_jar", None)\n         if conn is not None:\n             return conn\n \n@@ -50,7 +49,7 @@ def traverse(base, path):\n     raises: KeyError if not traversable this way\n     """\n     current = base\n-    for cid in path.split(\'/\'):\n+    for cid in path.split("/"):\n         if not cid:\n             continue\n         current = current[cid]\n@@ -68,28 +67,28 @@ class KeyReferenceToPersistent(KeyReferenceToPersistent):\n     @@ cache IConnection as a property and volative attr?\n     """\n \n-    key_type_id = \'five.intid.keyreference\'\n+    key_type_id = "five.intid.keyreference"\n     # Default dbname where the root is. This is defined here for\n     # backward compatibility with previously created objects.\n-    root_dbname = \'main\'\n+    root_dbname = "main"\n \n     def __init__(self, wrapped_obj):\n \n         # make sure our object is wrapped by containment only\n         try:\n-            self.path = \'/\'.join(wrapped_obj.getPhysicalPath())\n+            self.path = "/".join(wrapped_obj.getPhysicalPath())\n         except AttributeError:\n             self.path = None\n \n         # If the path ends with /, it means the object had an empty id.\n         # This means it\'s not yet added to the container, and so we have\n         # to defer.\n-        if self.path is not None and self.path.endswith(\'/\'):\n+        if self.path is not None and self.path.endswith("/"):\n             raise NotYet(wrapped_obj)\n         self.object = aq_base(wrapped_obj)\n         connection = IConnection(wrapped_obj, None)\n \n-        if not getattr(self.object, \'_p_oid\', None):\n+        if not getattr(self.object, "_p_oid", None):\n             if connection is None:\n                 raise NotYet(wrapped_obj)\n             connection.add(self.object)\n@@ -107,10 +106,10 @@ def __init__(self, wrapped_obj):\n         self.dbname = connection.db().database_name\n \n     def __setstate__(self, state):\n-        for key in (\'root_oid\', \'oid\'):\n+        for key in ("root_oid", "oid"):\n             value = state.get(key)\n-            if isinstance(value, six.text_type):\n-                state[key] = value.encode(\'utf-8\')\n+            if isinstance(value, str):\n+                state[key] = value.encode("utf-8")\n         self.__dict__.update(state)\n \n     @property\n@@ -131,7 +130,7 @@ def wrapped_object(self):\n         except KeyError:\n             # be paranoid and fall back to the complex OFS traverse for (hypothetical)\n             # edge cases\n-            logger.debug(\'fall back to OFS traversal for {0}\'.format(self.path))\n+            logger.debug(f"fall back to OFS traversal for {self.path}")\n             obj = self.root.unrestrictedTraverse(self.path, None)\n         if obj is None:\n             return self.object\n@@ -144,7 +143,7 @@ def wrapped_object(self):\n             if len(site_chain) and isinstance(site_chain[-1], RequestContainer):\n                 req = site_chain[-1]\n                 new_obj = req\n-                # rebuld the chain with the request at the bottom\n+                # rebuild the chain with the request at the bottom\n                 for item in reversed(chain):\n                     new_obj = aq_base(item).__of__(new_obj)\n                 obj = new_obj\n@@ -155,12 +154,4 @@ def __call__(self):\n \n     def __hash__(self):\n         # XXX Maybe we should consider to use also other fields for the hash\n-        return hash((self.dbname,\n-                     self.object._p_oid,\n-                     ))\n-\n-    def __cmp__(self, other):\n-        # XXX This makes no sense on Python 3\n-        if self.key_type_id == other.key_type_id:\n-            return cmp((self.dbname, self.oid), (other.dbname, other.oid))\n-        return cmp(self.key_type_id, other.key_type_id)\n+        return hash((self.dbname, self.object._p_oid))\ndiff --git a/five/intid/site.py b/five/intid/site.py\nindex 9ebcd48..60fac71 100644\n--- a/five/intid/site.py\n+++ b/five/intid/site.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n from Acquisition import aq_base\n from five.intid.intid import IIntIds\n from five.intid.intid import IntIds\n@@ -6,10 +5,12 @@\n from five.localsitemanager import make_objectmanager_site\n from OFS.interfaces import IApplication\n from Products.Five import BrowserView\n-from zope.component import getUtility, getSiteManager\n+from zope.component import getSiteManager\n+from zope.component import getUtility\n+from zope.component.hooks import setHooks\n+from zope.component.hooks import setSite\n from zope.interface.interfaces import ComponentLookupError\n from zope.location.interfaces import ISite\n-from zope.component.hooks import setSite, setHooks\n \n \n class FiveIntIdsInstall(BrowserView):\n@@ -18,9 +19,9 @@ def context(self):\n         return self._context[0]\n \n     def __init__(self, context, request):\n-        self._context = context,\n+        self._context = (context,)\n         self.request = request\n-        doinstall = self.request.get(\'install\', None)\n+        doinstall = self.request.get("install", None)\n         if doinstall:\n             self.install()\n \n@@ -34,7 +35,7 @@ def installed(self):\n             intids = getUtility(IIntIds)\n             if intids is not None:\n                 sm = self.context.getSiteManager()\n-                if \'intids\' in sm.objectIds():\n+                if "intids" in sm.objectIds():\n                     installed = True\n         except ComponentLookupError:\n             pass\n@@ -52,10 +53,10 @@ def get_root(app):\n     for parent in aq_iter(app, error=AttributeError):\n         if IApplication.providedBy(parent):\n             return parent\n-    raise AttributeError(\'No application found\')\n+    raise AttributeError("No application found")\n \n \n-def addUtility(site, interface, klass, name=\'\', ofs_name=\'\', findroot=True):\n+def addUtility(site, interface, klass, name="", ofs_name="", findroot=True):\n     """\n     add local utility in zope2\n     """\n@@ -76,17 +77,14 @@ def addUtility(site, interface, klass, name=\'\', ofs_name=\'\', findroot=True):\n     # stored, but not registered\n     ofs_name = ofs_name or name\n     obj = getattr(aq_base(sm), ofs_name, None)\n-    if sm.queryUtility(interface,\n-                       name=name,\n-                       default=None) is None:\n+    if sm.queryUtility(interface, name=name, default=None) is None:\n         # Register the utility if it is not yet registered\n         if obj is None:\n             if name:\n                 obj = klass(name)\n             else:\n                 obj = klass()\n-        sm.registerUtility(provided=interface, component=obj,\n-                           name=name)\n+        sm.registerUtility(provided=interface, component=obj, name=name)\n     elif obj is None:\n         # Get the utility if registered, but not yet stored in the LSM\n         obj = sm.queryUtility(interface, name=name)\n@@ -94,12 +92,11 @@ def addUtility(site, interface, klass, name=\'\', ofs_name=\'\', findroot=True):\n     # Make sure we store the utility permanently in the OFS so we don\'t loose\n     # intids on uninstall\n     if ofs_name and ofs_name not in sm.objectIds():\n-        sm._setObject(ofs_name, aq_base(obj), set_owner=False,\n-                      suppress_events=True)\n+        sm._setObject(ofs_name, aq_base(obj), set_owner=False, suppress_events=True)\n \n \n def add_intids(site, findroot=False):\n-    addUtility(site, IIntIds, IntIds, ofs_name=\'intids\', findroot=findroot)\n+    addUtility(site, IIntIds, IntIds, ofs_name="intids", findroot=findroot)\n \n \n def get_intids(context=None):\n@@ -110,5 +107,4 @@ def del_intids(context=None, findroot=False):\n     if findroot:\n         context = get_root(context)\n     utility = get_intids(context)\n-    getSiteManager(context).unregisterUtility(component=utility,\n-                                              provided=IIntIds)\n+    getSiteManager(context).unregisterUtility(component=utility, provided=IIntIds)\ndiff --git a/five/intid/subscriber.zcml b/five/intid/subscriber.zcml\nindex 773db42..9078ad7 100644\n--- a/five/intid/subscriber.zcml\n+++ b/five/intid/subscriber.zcml\n@@ -1,18 +1,18 @@\n <configure xmlns="http://namespaces.zope.org/zope">\n \n   <subscriber\n-     handler=".intid.addIntIdSubscriber"\n-     for="persistent.IPersistent\n-          zope.lifecycleevent.interfaces.IObjectAddedEvent"\n+      for="persistent.IPersistent\n+           zope.lifecycleevent.interfaces.IObjectAddedEvent"\n+      handler=".intid.addIntIdSubscriber"\n       />\n   <subscriber\n-      handler=".intid.removeIntIdSubscriber"\n       for="persistent.IPersistent\n            zope.lifecycleevent.interfaces.IObjectRemovedEvent"\n+      handler=".intid.removeIntIdSubscriber"\n       />\n   <subscriber\n-      handler=".intid.moveIntIdSubscriber"\n       for="OFS.interfaces.ITraversable\n            zope.lifecycleevent.interfaces.IObjectMovedEvent"\n+      handler=".intid.moveIntIdSubscriber"\n       />\n </configure>\ndiff --git a/five/intid/test.zcml b/five/intid/test.zcml\nindex 1cae4ee..dd0807b 100644\n--- a/five/intid/test.zcml\n+++ b/five/intid/test.zcml\n@@ -1,12 +1,12 @@\n <configure xmlns="http://namespaces.zope.org/zope">\n \n   <subscriber\n-      handler=".tests.setNotified"\n       for="zope.intid.interfaces.IIntIdAddedEvent"\n+      handler=".tests.setNotified"\n       />\n   <subscriber\n-      handler=".tests.setNotified"\n       for="zope.intid.interfaces.IIntIdRemovedEvent"\n+      handler=".tests.setNotified"\n       />\n \n </configure>\ndiff --git a/five/intid/tests.py b/five/intid/tests.py\nindex fc040b4..b37d413 100644\n--- a/five/intid/tests.py\n+++ b/five/intid/tests.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n from persistent import Persistent\n from Testing.ZopeTestCase import placeless\n from Zope2.App import zcml\n@@ -6,7 +5,6 @@\n \n import doctest\n import re\n-import six\n \n \n optionflags = doctest.NORMALIZE_WHITESPACE | doctest.ELLIPSIS\n@@ -14,24 +12,27 @@\n \n \n class DemoPersistent(Persistent):\n-    """ Demo persistent object """\n-    test = \'test object\'\n-    __name__ = \'Test Object\'\n+    """Demo persistent object"""\n+\n+    test = "test object"\n+    __name__ = "Test Object"\n \n \n def setNotified(event):\n-    NOTIFIED[0] = "%s %s" % (event.object, event)\n+    NOTIFIED[0] = f"{event.object} {event}"\n \n \n def setUp(app):\n     # enable zcml and site hooks\n     placeless.setUp()\n-    import Products.Five\n     from five import intid\n-    zcml.load_config(\'meta.zcml\', Products.Five)\n-    zcml.load_config(\'configure.zcml\', Products.Five)\n-    zcml.load_config(\'configure.zcml\', intid)\n-    zcml.load_config(\'test.zcml\', intid)\n+\n+    import Products.Five\n+\n+    zcml.load_config("meta.zcml", Products.Five)\n+    zcml.load_config("configure.zcml", Products.Five)\n+    zcml.load_config("configure.zcml", intid)\n+    zcml.load_config("test.zcml", intid)\n     setHooks()\n \n \n@@ -41,34 +42,35 @@ def tearDown():\n \n class Py23DocChecker(doctest.OutputChecker):\n     def check_output(self, want, got, optionflags):\n-        if six.PY2:\n-            want = re.sub("b\'(.*?)\'", "\'\\\\1\'", want)\n-        else:\n-            want = re.sub("u\'(.*?)\'", "\'\\\\1\'", want)\n-            # translate doctest exceptions\n-            for dotted in (\n-                \'zope.interface.interfaces.ComponentLookupError\',\n-                \'zope.keyreference.interfaces.NotYet\',\n-                \'zope.intid.interfaces.IntIdMissingError\',\n-                \'zope.intid.interfaces.ObjectMissingError\',\n-            ):\n-                if dotted in got:\n-                    got = re.sub(\n-                        dotted,\n-                        dotted.rpartition(\'.\')[-1],\n-                        got,\n-                    )\n+        want = re.sub("u\'(.*?)\'", "\'\\\\1\'", want)\n+        # translate doctest exceptions\n+        for dotted in (\n+            "zope.interface.interfaces.ComponentLookupError",\n+            "zope.keyreference.interfaces.NotYet",\n+            "zope.intid.interfaces.IntIdMissingError",\n+            "zope.intid.interfaces.ObjectMissingError",\n+        ):\n+            if dotted in got:\n+                got = re.sub(\n+                    dotted,\n+                    dotted.rpartition(".")[-1],\n+                    got,\n+                )\n         return doctest.OutputChecker.check_output(self, want, got, optionflags)\n \n \n def test_suite():\n-    import unittest\n     from Testing.ZopeTestCase import FunctionalDocFileSuite\n-    return unittest.TestSuite([\n-        FunctionalDocFileSuite(\n-            \'README.rst\',\n-            package=\'five.intid\',\n-            optionflags=optionflags,\n-            checker=Py23DocChecker(),\n-        )\n-    ])\n+\n+    import unittest\n+\n+    return unittest.TestSuite(\n+        [\n+            FunctionalDocFileSuite(\n+                "README.rst",\n+                package="five.intid",\n+                optionflags=optionflags,\n+                checker=Py23DocChecker(),\n+            )\n+        ]\n+    )\ndiff --git a/five/intid/unreferenceable.py b/five/intid/unreferenceable.py\nindex 7aaafdc..aaed943 100644\n--- a/five/intid/unreferenceable.py\n+++ b/five/intid/unreferenceable.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n # Sometimes persistent classes are never meant to be persisted. The most\n # common example are CMFCore directory views and filesystem objects.\n # Register specific handlers that are no-ops to circumvent\n@@ -20,18 +19,13 @@ def moveIntIdSubscriber(ob, event):\n \n \n @implementer(IKeyReference)\n-class KeyReferenceNever(object):\n+class KeyReferenceNever:\n     """A keyreference that is never ready"""\n \n-    key_type_id = \'five.intid.cmfexceptions.keyreference\'\n+    key_type_id = "five.intid.cmfexceptions.keyreference"\n \n     def __init__(self, obj):\n         raise NotYet()\n \n     def __call__(self):\n         return None\n-\n-    def __cmp__(self, other):\n-        if self.key_type_id == other.key_type_id:\n-            return cmp(self, other)\n-        return cmp(self.key_type_id, other.key_type_id)\ndiff --git a/five/intid/utils.py b/five/intid/utils.py\nindex ea0de0a..377b3a3 100644\n--- a/five/intid/utils.py\n+++ b/five/intid/utils.py\n@@ -1,11 +1,10 @@\n-# -*- coding: utf-8 -*-\n from Acquisition import aq_base\n from Acquisition import aq_inner\n from Acquisition import IAcquirer\n \n \n def aq_iter(obj, error=None):\n-    if not (IAcquirer.providedBy(obj) or hasattr(obj, \'__parent__\')):\n+    if not (IAcquirer.providedBy(obj) or hasattr(obj, "__parent__")):\n         raise TypeError("%s not acquisition wrapped" % obj)\n \n     # adapted from alecm\'s \'listen\'\n@@ -16,10 +15,10 @@ def aq_iter(obj, error=None):\n     while cur is not None:\n         yield cur\n         seen.add(id(aq_base(cur)))\n-        cur = getattr(cur, \'aq_parent\', getattr(cur, \'__parent__\', None))\n+        cur = getattr(cur, "aq_parent", getattr(cur, "__parent__", None))\n         if cur:\n             cur = aq_inner(cur)  # unwrap from Acquisition context\n         if id(aq_base(cur)) in seen:\n             if error is not None:\n-                raise error(\'__parent__ loop found\')\n+                raise error("__parent__ loop found")\n             break\ndiff --git a/lint-requirements.txt b/lint-requirements.txt\nnew file mode 100644\nindex 0000000..2a91911\n--- /dev/null\n+++ b/lint-requirements.txt\n@@ -0,0 +1,12 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+black==22.12.0\n+check-manifest==0.49\n+codespell==2.2.2\n+flake8==6.0.0\n+isort==5.11.4\n+pipdeptree==2.3.3\n+pyroma==4.1\n+pyupgrade==3.3.1\n+z3c.dependencychecker==2.10\n+zpretty==2.4.1\ndiff --git a/news/1.bugfix b/news/1.bugfix\nnew file mode 100644\nindex 0000000..e844e2b\n--- /dev/null\n+++ b/news/1.bugfix\n@@ -0,0 +1,2 @@\n+Add configuration with plone/meta.\n+[gforcada]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 05b615d..b3edb96 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,3 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [tool.towncrier]\n filename = "CHANGES.rst"\n directory = "news/"\n@@ -18,3 +20,27 @@ showcontent = true\n directory = "bugfix"\n name = "Bug fixes:"\n showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "internal"\n+name = "Internal:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "documentation"\n+name = "Documentation:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "tests"\n+name = "Tests"\n+showcontent = true\n+\n+[tool.isort]\n+profile = "plone"\n+\n+[tool.black]\n+target-version = ["py38"]\n+\n+[tool.dependencychecker]\n+Zope = [\'OFS\', \'Products.Five\', \'Testing\', \'ZPublisher\', \'Zope2\', ]\ndiff --git a/setup.cfg b/setup.cfg\nindex 2a9acf1..8849fbc 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -1,2 +1,23 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [bdist_wheel]\n-universal = 1\n+universal = 0\n+\n+[flake8]\n+doctests = 1\n+ignore =\n+    # black takes care of line length\n+    E501,\n+    # black takes care of where to break lines\n+    W503,\n+    # black takes care of spaces within slicing (list[:])\n+    E203,\n+    # black takes care of spaces after commas\n+    E231,\n+\n+[check-manifest]\n+ignore =\n+    .editorconfig\n+    .meta.toml\n+    tox.ini\n+    lint-requirements.txt\ndiff --git a/setup.py b/setup.py\nindex 15ca893..bc0acab 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,9 +1,10 @@\n-# -*- coding: utf-8 -*-\n from setuptools import find_packages\n from setuptools import setup\n+\n import os.path\n \n-version = \'1.2.7.dev0\'\n+\n+version = "1.2.7.dev0"\n \n longdescripton = open("README.rst").read() + "\\n"\n longdescripton += open(os.path.join("five", "intid", "README.rst")).read()\n@@ -12,7 +13,7 @@\n \n \n setup(\n-    name=\'five.intid\',\n+    name="five.intid",\n     version=version,\n     description="Zope support for zope.intid",\n     long_description=longdescripton,\n@@ -28,26 +29,30 @@\n         "Programming Language :: Python :: 3.8",\n     ],\n     keywords="\'zope2 intid\'",\n-    author=\'Whit Morris\',\n-    author_email=\'whit@openplans.org\',\n-    license=\'ZPL\',\n-    url=\'https://github.com/plone/five.intid\',\n+    author="Whit Morris",\n+    author_email="whit@openplans.org",\n+    license="ZPL",\n+    url="https://github.com/plone/five.intid",\n     packages=find_packages(),\n-    namespace_packages=[\'five\'],\n+    namespace_packages=["five"],\n     include_package_data=True,\n     zip_safe=False,\n+    python_requires=">=3.8",\n     install_requires=[\n-        \'Acquisition>=4.0.1\',\n-        \'setuptools\',\n-        \'zope.intid\',\n-        \'zope.component\',\n-        \'zope.event\',\n-        \'zope.interface\',\n-        \'zope.lifecycleevent\',\n-        \'zope.keyreference\',\n-        \'zope.location\',\n-        \'five.localsitemanager\',\n-        \'Zope2 >= 2.13;python_version=="2.7"\',\n-        \'Zope >= 4;python_version>="3.6"\',\n+        "AccessControl",\n+        "Acquisition>=4.0.1",\n+        "Products.CMFCore",\n+        "ZODB",\n+        "Zope",\n+        "five.localsitemanager",\n+        "persistent",\n+        "setuptools",\n+        "zope.intid",\n+        "zope.component",\n+        "zope.event",\n+        "zope.interface",\n+        "zope.lifecycleevent",\n+        "zope.keyreference",\n+        "zope.location",\n     ],\n )\ndiff --git a/tox.ini b/tox.ini\nnew file mode 100644\nindex 0000000..1f3a9d3\n--- /dev/null\n+++ b/tox.ini\n@@ -0,0 +1,75 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[tox]\n+envlist =\n+    format\n+    lint\n+\n+[testenv]\n+py_files = git ls-files "*.py"\n+text_files = git ls-files "*.rst" "*.md"\n+xml_files = git ls-files "*.xml"\n+zcml_files = git ls-files "*.zcml"\n+allowlist_externals =\n+    sh\n+\n+[testenv:format]\n+description = automatically reformat python code\n+skip_install = true\n+deps =\n+    pyupgrade\n+    isort\n+    black\n+    zpretty\n+    -c lint-requirements.txt\n+commands =\n+    sh -c \'{[testenv]py_files} | xargs pyupgrade --py38-plus\'\n+    sh -c \'{[testenv]py_files} | xargs isort\'\n+    sh -c \'{[testenv]py_files} | xargs black\'\n+    sh -c \'{[testenv]xml_files} | xargs zpretty -x -i || true\'\n+    sh -c \'{[testenv]zcml_files} | xargs zpretty -z -i || true\'\n+\n+[testenv:lint]\n+description = run linters that will help improve the code style\n+skip_install = true\n+deps =\n+    flake8\n+    codespell\n+    tomli  # needed for codespell to read pyproject.toml\n+    check-manifest\n+    pyroma\n+    -c lint-requirements.txt\n+commands =\n+    sh -c \'{[testenv]py_files} | xargs flake8\'\n+    sh -c \'{[testenv]py_files} | xargs codespell\'\n+    sh -c \'{[testenv]text_files} | xargs codespell\'\n+    check-manifest\n+    pyroma -n 10 .\n+\n+[testenv:dependencies]\n+description = check if the package defines all its dependencies\n+deps =\n+    z3c.dependencychecker\n+    -c lint-requirements.txt\n+commands =\n+    dependencychecker\n+\n+[testenv:dependencies-graph]\n+description = generate a graph with the distribution dependencies\n+deps =\n+    pipdeptree\n+    graphviz  # optional dependency of pipdeptree\n+    -c lint-requirements.txt\n+commands =\n+    sh -c \'pipdeptree --exclude setuptools,pipdeptree,wheel --graph-output svg > dependencies.svg\'\n+\n+[testenv:test]\n+description = run the distribution\'s tests\n+deps =\n+    five.intid[test]\n+    pytest\n+    gocept.pytestlayer\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    pip install -e .\n+    pytest\n'

