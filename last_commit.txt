Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2021-10-13T13:59:29+02:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/fe7440a486eb80bf906a26b96f532261643fb0c3

Set the "Show excluded items" (``show_excluded_items``) to False per default.

Setting it to ``True`` can introduce a performance problem.
``False`` should be the default, also from user expectation for the ``exclude_from_nav`` setting on conte
nt items.
No upgrade step!
Previous behavior is just kept, unless you override it manually.
See: #3055, first comment.
Use this registry snippet to set it false:
```
&lt;?xml version="1.0"?&gt;
&lt;registry&gt;
  &lt;records prefix="plone" interface="Products.CMFPlone.interfaces.controlpanel.INavigationSchema"&gt;
    &lt;value key="show_excluded_items"&gt;False&lt;/value&gt;
  &lt;/records&gt;
&lt;/registry&gt;
```
Fixes: #3035

Co-authored-by: Peter Mathis &lt;peter.mathis@kombinat.at&gt;

Files changed:
A news/3329.bugfix
M Products/CMFPlone/browser/navigation.py
M Products/CMFPlone/controlpanel/README.rst
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_navigation_adapter.py
M Products/CMFPlone/interfaces/controlpanel.py
M Products/CMFPlone/tests/testNavigationView.py

b'diff --git a/Products/CMFPlone/browser/navigation.py b/Products/CMFPlone/browser/navigation.py\nindex 6a86610057..186b63eccd 100644\n--- a/Products/CMFPlone/browser/navigation.py\n+++ b/Products/CMFPlone/browser/navigation.py\n@@ -102,6 +102,9 @@ def _getNavQuery(self):\n         query[\'is_default_page\'] = False\n \n         if not navigation_settings.show_excluded_items:\n+            # Note:\n+            # Careful with that axe, Eugene!\n+            # This introduces a performance decrease.\n             query[\'exclude_from_nav\'] = False\n \n         if not navigation_settings.nonfolderish_tabs:\ndiff --git a/Products/CMFPlone/controlpanel/README.rst b/Products/CMFPlone/controlpanel/README.rst\nindex 428d89614e..72e195a909 100644\n--- a/Products/CMFPlone/controlpanel/README.rst\n+++ b/Products/CMFPlone/controlpanel/README.rst\n@@ -132,7 +132,7 @@ Navigation Control Panel\n   ()\n \n   >>> navigation_settings.show_excluded_items\n-  True\n+  False\n \n \n Search Control Panel\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_navigation_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_navigation_adapter.py\nindex 2f0d0eacfb..8fa4ea9704 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_navigation_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_navigation_adapter.py\n@@ -134,21 +134,21 @@ def test_set_workflow_states_to_show(self):\n     def test_get_show_excluded_items(self):\n         self.assertEqual(\n             getAdapter(self.portal, INavigationSchema).show_excluded_items,\n-            True\n+            False\n         )\n-        self.navigation_settings.show_excluded_items = False\n+        self.navigation_settings.show_excluded_items = True\n         self.assertEqual(\n             getAdapter(self.portal, INavigationSchema).show_excluded_items,\n-            False\n+            True\n         )\n \n     def test_set_show_excluded_items(self):\n         self.assertEqual(\n             self.navigation_settings.show_excluded_items,\n-            True\n+            False\n         )\n-        getAdapter(self.portal, INavigationSchema).show_excluded_items = False\n+        getAdapter(self.portal, INavigationSchema).show_excluded_items = True\n         self.assertEqual(\n             self.navigation_settings.show_excluded_items,\n-            False\n+            True\n         )\ndiff --git a/Products/CMFPlone/interfaces/controlpanel.py b/Products/CMFPlone/interfaces/controlpanel.py\nindex 24245cf481..09b96721d0 100644\n--- a/Products/CMFPlone/interfaces/controlpanel.py\n+++ b/Products/CMFPlone/interfaces/controlpanel.py\n@@ -835,7 +835,7 @@ class INavigationSchema(Interface):\n             \'If an item has been excluded from navigation should it be \'\n             \'shown in navigation when viewing content contained within it \'\n             \'or within a subfolder.\'),\n-        default=True,\n+        default=False,\n         required=False)\n \n     root = schema.TextLine(\ndiff --git a/Products/CMFPlone/tests/testNavigationView.py b/Products/CMFPlone/tests/testNavigationView.py\nindex cb6acb4844..0c323400c9 100644\n--- a/Products/CMFPlone/tests/testNavigationView.py\n+++ b/Products/CMFPlone/tests/testNavigationView.py\n@@ -502,12 +502,12 @@ def testCreateTopLevelTabs(self):\n         # Everything shows up by default\n         tabs = view.topLevelTabs(actions=[])\n         self.assertTrue(tabs)\n-        self.assertEqual(len(tabs), 8)\n+        self.assertEqual(len(tabs), 7)\n \n         # Only the folders show up (Members, news, events, folder1, folder2)\n         self.navigation_settings.nonfolderish_tabs = False\n         tabs = view.topLevelTabs(actions=[])\n-        self.assertEqual(len(tabs), 5)\n+        self.assertEqual(len(tabs), 4)\n \n     def testTabsRespectFolderOrder(self):\n         # See if reordering causes a change in the tab order\n@@ -604,18 +604,18 @@ def testTabsExcludeItemsWithExcludeProperty(self):\n         tab_names = [t[\'id\'] for t in tabs]\n         self.assertNotIn(\'folder2\', tab_names)\n \n-        # but if we\'re inside, it should be visible\n+        # if we\'re inside, it also should stay hidden\n         view = self.view_class(self.portal.folder2, self.request)\n         tabs = view.topLevelTabs(actions=[])\n         tab_names = [t[\'id\'] for t in tabs]\n-        self.assertIn(\'folder2\', tab_names)\n+        self.assertNotIn(\'folder2\', tab_names)\n \n         # Now we flip the setting for plone.show_excluded_items\n-        self.navigation_settings.show_excluded_items = False\n+        self.navigation_settings.show_excluded_items = True\n         view = self.view_class(self.portal.folder2, self.request)\n         tabs = view.topLevelTabs(actions=[])\n         tab_names = [t[\'id\'] for t in tabs]\n-        self.assertNotIn(\'folder2\', tab_names)\n+        self.assertIn(\'folder2\', tab_names)\n \n     def testTabsRespectsTypesWithViewAction(self):\n         # With a type in types_use_view_action_in_listings as current action it\ndiff --git a/news/3329.bugfix b/news/3329.bugfix\nnew file mode 100644\nindex 0000000000..93046b9f6b\n--- /dev/null\n+++ b/news/3329.bugfix\n@@ -0,0 +1,17 @@\n+Set the "Show excluded items" (``show_excluded_items``) to False per default.\n+Setting it to ``True`` can introduce a performance problem.\n+``False`` should be the default, also from user expectation for the ``exclude_from_nav`` setting on content items.\n+No upgrade step!\n+Previous behavior is just kept, unless you override it manually.\n+See: #3055, first comment.\n+Use this registry snippet to set it false:\n+```\n+<?xml version="1.0"?>\n+<registry>\n+  <records prefix="plone" interface="Products.CMFPlone.interfaces.controlpanel.INavigationSchema">\n+    <value key="show_excluded_items">False</value>\n+  </records>\n+</registry>\n+```\n+Fixes: #3035\n+[thet]\n'

