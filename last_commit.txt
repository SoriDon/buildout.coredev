Repository: Products.Archetypes


Branch: refs/heads/master
Date: 2016-10-23T12:20:15-04:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.Archetypes/commit/7ae92b115bd022ebcfd9fa9363794d27c5282e92

Make AnnotationStorage awareness of OFS.HistoryAware optional since it was dropped in Zope4

Files changed:
M CHANGES.rst
M Products/Archetypes/athistoryaware.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 0b26e5b..57e6501 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,9 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- ``OFS.HistoryAware`` was dropped in Zope 4.
+  Make AnnotationStorage awareness of it optional.
+  [jensens]
 
 Bug fixes:
 
diff --git a/Products/Archetypes/athistoryaware.py b/Products/Archetypes/athistoryaware.py
index dde23d2..592fecf 100644
--- a/Products/Archetypes/athistoryaware.py
+++ b/Products/Archetypes/athistoryaware.py
@@ -1,3 +1,4 @@
+# -*- coding: utf-8 -*-
 ##########################################################################
 #
 # Copyright (c) 2002-2005, Benjamin Saller <bcsaller@ideasuite.com>, and
@@ -25,19 +26,24 @@
 """Archetypes history awareness"""
 __author__ = 'Martijn Pieters <mj@zopatista.com>'
 
-import itertools
-
-from DateTime import DateTime
-from OFS.History import HystoryJar
+from AccessControl import ClassSecurityInfo
 from Acquisition import aq_parent
-from BTrees.OOBTree import OOBTree
+from annotations import AT_ANN_KEYS
 from App.class_init import InitializeClass
+from BTrees.OOBTree import OOBTree
+from DateTime import DateTime
+from Products.Archetypes.interfaces.athistoryaware import IATHistoryAware
+from zope.interface import implementer
 
-from AccessControl import ClassSecurityInfo
+import itertools
+
+try:
+    from OFS.History import HystoryJar
+    HAS_OFS_HISTORY = True
+except ImportError:
+    # OFS.History modue was dropped in Zope 4
+    HAS_OFS_HISTORY = False
 
-from annotations import AT_ANN_KEYS
-from interfaces.athistoryaware import IATHistoryAware
-from zope.interface import implementer
 
 # A note about this implementation
 #
@@ -122,8 +128,7 @@ class ATHistoryAwareMixin:
 
     security = ClassSecurityInfo()
 
-    security.declarePrivate('_constructAnnotatedHistory')
-
+    @security.private
     def _constructAnnotatedHistory(self, max=10):
         """Reconstruct historical revisions of archetypes objects
 
@@ -135,6 +140,10 @@ def _constructAnnotatedHistory(self, max=10):
         # For every tid, keep a dict with object revisions, keyed on annotation
         # id, or None for self and '__annotations__' for the ann OOBTree
         # Initialize with self revisions
+
+        # in Zope 4 this featire was dropped.
+        if not HAS_OFS_HISTORY:
+            return
         history = dict([(tid, {None: rev})
                         for (tid, rev) in _objectRevisions(self, max)])
 
@@ -229,8 +238,7 @@ def find_revision(tids, key):
 
             yield revision
 
-    security.declarePrivate('getHistories')
-
+    @security.private
     def getHistories(self, max=10):
         """Iterate over historic revisions.
 


Repository: Products.Archetypes


Branch: refs/heads/master
Date: 2016-10-23T13:35:27-04:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.Archetypes/commit/50a675d7db73f78a6f3dcfe20cc3ad4c73482739

Merge pull request #67 from plone/historyware-optional

Make AnnotationStorage awareness of OFS.HistoryAware optional

Files changed:
M CHANGES.rst
M Products/Archetypes/athistoryaware.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 0b26e5b..57e6501 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,9 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- ``OFS.HistoryAware`` was dropped in Zope 4.
+  Make AnnotationStorage awareness of it optional.
+  [jensens]
 
 Bug fixes:
 
diff --git a/Products/Archetypes/athistoryaware.py b/Products/Archetypes/athistoryaware.py
index dde23d2..592fecf 100644
--- a/Products/Archetypes/athistoryaware.py
+++ b/Products/Archetypes/athistoryaware.py
@@ -1,3 +1,4 @@
+# -*- coding: utf-8 -*-
 ##########################################################################
 #
 # Copyright (c) 2002-2005, Benjamin Saller <bcsaller@ideasuite.com>, and
@@ -25,19 +26,24 @@
 """Archetypes history awareness"""
 __author__ = 'Martijn Pieters <mj@zopatista.com>'
 
-import itertools
-
-from DateTime import DateTime
-from OFS.History import HystoryJar
+from AccessControl import ClassSecurityInfo
 from Acquisition import aq_parent
-from BTrees.OOBTree import OOBTree
+from annotations import AT_ANN_KEYS
 from App.class_init import InitializeClass
+from BTrees.OOBTree import OOBTree
+from DateTime import DateTime
+from Products.Archetypes.interfaces.athistoryaware import IATHistoryAware
+from zope.interface import implementer
 
-from AccessControl import ClassSecurityInfo
+import itertools
+
+try:
+    from OFS.History import HystoryJar
+    HAS_OFS_HISTORY = True
+except ImportError:
+    # OFS.History modue was dropped in Zope 4
+    HAS_OFS_HISTORY = False
 
-from annotations import AT_ANN_KEYS
-from interfaces.athistoryaware import IATHistoryAware
-from zope.interface import implementer
 
 # A note about this implementation
 #
@@ -122,8 +128,7 @@ class ATHistoryAwareMixin:
 
     security = ClassSecurityInfo()
 
-    security.declarePrivate('_constructAnnotatedHistory')
-
+    @security.private
     def _constructAnnotatedHistory(self, max=10):
         """Reconstruct historical revisions of archetypes objects
 
@@ -135,6 +140,10 @@ def _constructAnnotatedHistory(self, max=10):
         # For every tid, keep a dict with object revisions, keyed on annotation
         # id, or None for self and '__annotations__' for the ann OOBTree
         # Initialize with self revisions
+
+        # in Zope 4 this featire was dropped.
+        if not HAS_OFS_HISTORY:
+            return
         history = dict([(tid, {None: rev})
                         for (tid, rev) in _objectRevisions(self, max)])
 
@@ -229,8 +238,7 @@ def find_revision(tids, key):
 
             yield revision
 
-    security.declarePrivate('getHistories')
-
+    @security.private
     def getHistories(self, max=10):
         """Iterate over historic revisions.
 


