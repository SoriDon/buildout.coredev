Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-06-10T18:33:53+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.restapi/commit/2cbd8aafe5d0f2622dfae7650e8ea4e930e9f7f7

Test-only fix: normalize white space in html in some tests.

Needed to not fail with newer plone.outputfilters.
Similar to the fix in https://github.com/plone/plone.app.discussion/pull/202, see explanation there.

Files changed:
A news/49.bugfix
M src/plone/restapi/testing.py
M src/plone/restapi/tests/test_comments.py
M src/plone/restapi/tests/test_content_post.py

b'diff --git a/news/49.bugfix b/news/49.bugfix\nnew file mode 100644\nindex 000000000..cd6000244\n--- /dev/null\n+++ b/news/49.bugfix\n@@ -0,0 +1,3 @@\n+Test-only fix: normalize white space in html in some tests.\n+Needed to not fail with newer plone.outputfilters.\n+[maurits]\ndiff --git a/src/plone/restapi/testing.py b/src/plone/restapi/testing.py\nindex b24c3edf3..0fdaf011f 100644\n--- a/src/plone/restapi/testing.py\n+++ b/src/plone/restapi/testing.py\n@@ -342,3 +342,19 @@ def register_static_uuid_utility(prefix):\n     prefix = re.sub(r"[^a-zA-Z0-9\\-_]", "", prefix)\n     generator = StaticUUIDGenerator(prefix)\n     getGlobalSiteManager().registerUtility(component=generator)\n+\n+\n+def normalize_html(value):\n+    # Strip all white spaces of every line, then join on one line.\n+    # But try to avoid getting \'Go to<a href\' instead of \'Go to <a href\'.\n+    lines = []\n+    for line in value.splitlines():\n+        line = line.strip()\n+        if (\n+            line.startswith("<")\n+            and not line.startswith("</")\n+            and not line.startswith("<br")\n+        ):\n+            line = " " + line\n+        lines.append(line)\n+    return "".join(lines).strip()\ndiff --git a/src/plone/restapi/tests/test_comments.py b/src/plone/restapi/tests/test_comments.py\nindex a62c483d1..5ea9c5866 100644\n--- a/src/plone/restapi/tests/test_comments.py\n+++ b/src/plone/restapi/tests/test_comments.py\n@@ -7,6 +7,7 @@\n from plone.app.testing import TEST_USER_ID\n from plone.registry.interfaces import IRegistry\n from plone.restapi.interfaces import ISerializeToJson\n+from plone.restapi.testing import normalize_html\n from plone.restapi.testing import PLONE_RESTAPI_DX_INTEGRATION_TESTING\n from Products.CMFCore.utils import getToolByName\n from Products.PlonePAS.tests import dummy\n@@ -166,7 +167,7 @@ def test_comment_with_mimetype_intelligent_text(self):\n         self.assertEqual(\n             \'Go to <a href="https://www.plone.org" \'\n             + \'rel="nofollow">https://www.plone.org</a>\',\n-            serializer()["text"]["data"],\n+            normalize_html(serializer()["text"]["data"]),\n         )\n         # serializer should return mimetype = text/html\n         self.assertEqual("text/html", serializer()["text"]["mime-type"])\n@@ -189,7 +190,7 @@ def test_comment_with_mimetype_html(self):\n         # serializer should return HTML\n         self.assertEqual(\n             \'Go to <a href="https://www.plone.org">Plone</a>\',\n-            serializer()["text"]["data"],\n+            normalize_html(serializer()["text"]["data"]),\n         )\n         # serializer should return mimetype = text/html\n         self.assertEqual("text/html", serializer()["text"]["mime-type"])\ndiff --git a/src/plone/restapi/tests/test_content_post.py b/src/plone/restapi/tests/test_content_post.py\nindex 586c0799f..7958821c8 100644\n--- a/src/plone/restapi/tests/test_content_post.py\n+++ b/src/plone/restapi/tests/test_content_post.py\n@@ -6,6 +6,7 @@\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import TEST_USER_NAME\n from plone.app.testing import TEST_USER_PASSWORD\n+from plone.restapi.testing import normalize_html\n from plone.restapi.testing import PLONE_RESTAPI_DX_FUNCTIONAL_TESTING\n from Products.CMFCore.utils import getToolByName\n from zope.component import getGlobalSiteManager\n@@ -231,7 +232,10 @@ def test_post_to_folder_with_apostrophe_dont_return_500(self):\n         self.assertEqual(\n             "<p>example with \'</p>", self.portal.folder1.mydocument2.text.raw\n         )\n-        self.assertEqual("<p>example with \'</p>", response.json()["text"]["data"])\n+        self.assertEqual(\n+            "<p>example with \'</p>",\n+            normalize_html(response.json()["text"]["data"]),\n+        )\n \n     def test_post_with_uid_with_manage_portal_permission(self):\n         response = requests.post(\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-06-11T09:26:58+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.restapi/commit/3c6431a23107e2afd2da07e429719130f20b28df

Merge pull request #1451 from plone/maurits-normalize-html-in-outputfilter-tests

Files changed:
A news/49.bugfix
M src/plone/restapi/testing.py
M src/plone/restapi/tests/test_comments.py
M src/plone/restapi/tests/test_content_post.py

b'diff --git a/news/49.bugfix b/news/49.bugfix\nnew file mode 100644\nindex 000000000..cd6000244\n--- /dev/null\n+++ b/news/49.bugfix\n@@ -0,0 +1,3 @@\n+Test-only fix: normalize white space in html in some tests.\n+Needed to not fail with newer plone.outputfilters.\n+[maurits]\ndiff --git a/src/plone/restapi/testing.py b/src/plone/restapi/testing.py\nindex b24c3edf3..0fdaf011f 100644\n--- a/src/plone/restapi/testing.py\n+++ b/src/plone/restapi/testing.py\n@@ -342,3 +342,19 @@ def register_static_uuid_utility(prefix):\n     prefix = re.sub(r"[^a-zA-Z0-9\\-_]", "", prefix)\n     generator = StaticUUIDGenerator(prefix)\n     getGlobalSiteManager().registerUtility(component=generator)\n+\n+\n+def normalize_html(value):\n+    # Strip all white spaces of every line, then join on one line.\n+    # But try to avoid getting \'Go to<a href\' instead of \'Go to <a href\'.\n+    lines = []\n+    for line in value.splitlines():\n+        line = line.strip()\n+        if (\n+            line.startswith("<")\n+            and not line.startswith("</")\n+            and not line.startswith("<br")\n+        ):\n+            line = " " + line\n+        lines.append(line)\n+    return "".join(lines).strip()\ndiff --git a/src/plone/restapi/tests/test_comments.py b/src/plone/restapi/tests/test_comments.py\nindex a62c483d1..5ea9c5866 100644\n--- a/src/plone/restapi/tests/test_comments.py\n+++ b/src/plone/restapi/tests/test_comments.py\n@@ -7,6 +7,7 @@\n from plone.app.testing import TEST_USER_ID\n from plone.registry.interfaces import IRegistry\n from plone.restapi.interfaces import ISerializeToJson\n+from plone.restapi.testing import normalize_html\n from plone.restapi.testing import PLONE_RESTAPI_DX_INTEGRATION_TESTING\n from Products.CMFCore.utils import getToolByName\n from Products.PlonePAS.tests import dummy\n@@ -166,7 +167,7 @@ def test_comment_with_mimetype_intelligent_text(self):\n         self.assertEqual(\n             \'Go to <a href="https://www.plone.org" \'\n             + \'rel="nofollow">https://www.plone.org</a>\',\n-            serializer()["text"]["data"],\n+            normalize_html(serializer()["text"]["data"]),\n         )\n         # serializer should return mimetype = text/html\n         self.assertEqual("text/html", serializer()["text"]["mime-type"])\n@@ -189,7 +190,7 @@ def test_comment_with_mimetype_html(self):\n         # serializer should return HTML\n         self.assertEqual(\n             \'Go to <a href="https://www.plone.org">Plone</a>\',\n-            serializer()["text"]["data"],\n+            normalize_html(serializer()["text"]["data"]),\n         )\n         # serializer should return mimetype = text/html\n         self.assertEqual("text/html", serializer()["text"]["mime-type"])\ndiff --git a/src/plone/restapi/tests/test_content_post.py b/src/plone/restapi/tests/test_content_post.py\nindex 586c0799f..7958821c8 100644\n--- a/src/plone/restapi/tests/test_content_post.py\n+++ b/src/plone/restapi/tests/test_content_post.py\n@@ -6,6 +6,7 @@\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import TEST_USER_NAME\n from plone.app.testing import TEST_USER_PASSWORD\n+from plone.restapi.testing import normalize_html\n from plone.restapi.testing import PLONE_RESTAPI_DX_FUNCTIONAL_TESTING\n from Products.CMFCore.utils import getToolByName\n from zope.component import getGlobalSiteManager\n@@ -231,7 +232,10 @@ def test_post_to_folder_with_apostrophe_dont_return_500(self):\n         self.assertEqual(\n             "<p>example with \'</p>", self.portal.folder1.mydocument2.text.raw\n         )\n-        self.assertEqual("<p>example with \'</p>", response.json()["text"]["data"])\n+        self.assertEqual(\n+            "<p>example with \'</p>",\n+            normalize_html(response.json()["text"]["data"]),\n+        )\n \n     def test_post_with_uid_with_manage_portal_permission(self):\n         response = requests.post(\n'

