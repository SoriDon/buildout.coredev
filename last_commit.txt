Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:03:19+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/927fa6e7a18237d746891a0cec3d9836a549cd5b

Fix TinyMCE configuration JSON serialization and cast entity_encoding to a list.

Files changed:
A news/3247.bugfix
M Products/CMFPlone/patterns/tinymce.py

b'diff --git a/Products/CMFPlone/patterns/tinymce.py b/Products/CMFPlone/patterns/tinymce.py\nindex 075d7a9e40..13c1d5e5bd 100644\n--- a/Products/CMFPlone/patterns/tinymce.py\n+++ b/Products/CMFPlone/patterns/tinymce.py\n@@ -110,7 +110,7 @@ def get_tiny_config(self):\n             "plugins": ["plonelink", "ploneimage", "importcss"] + settings.plugins,\n             "external_plugins": {},\n             "toolbar": settings.toolbar,\n-            "entity_encoding": settings.entity_encoding,\n+            "entity_encoding": list(settings.entity_encoding),\n             "importcss_append": True,\n             "importcss_file_filter": importcss_file_filter,\n             "browser_spellcheck": True,\ndiff --git a/news/3247.bugfix b/news/3247.bugfix\nnew file mode 100644\nindex 0000000000..a40ff15c33\n--- /dev/null\n+++ b/news/3247.bugfix\n@@ -0,0 +1 @@\n+Fix TinyMCE configuration JSON serialization and cast entity_encoding to a list.\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:07:38+01:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/5fbbfdfc4a9033906f17e69e17a81c9e7e182d1e

Add TinyMCE records to registry.xml

Files changed:
M Products/CMFPlone/profiles/dependencies/registry.xml

b'diff --git a/Products/CMFPlone/profiles/dependencies/registry.xml b/Products/CMFPlone/profiles/dependencies/registry.xml\nindex b03d081331..ddd8e2890e 100644\n--- a/Products/CMFPlone/profiles/dependencies/registry.xml\n+++ b/Products/CMFPlone/profiles/dependencies/registry.xml\n@@ -18,6 +18,8 @@\n            prefix="plone" />\n   <records interface="Products.CMFPlone.interfaces.ISiteSchema"\n            prefix="plone" />\n+  <records interface="Products.CMFPlone.interfaces.ITinyMCESchema"\n+           prefix="plone" />\n   <records interface="Products.CMFPlone.interfaces.IDateAndTimeSchema"\n            prefix="plone" />\n   <records interface="Products.CMFPlone.interfaces.IMarkupSchema"\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:07:38+01:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/1c185813900a660a35c11976b06a5528135d7949

fix TinyMCE control panel menu

Files changed:
M Products/CMFPlone/interfaces/controlpanel.py

b"diff --git a/Products/CMFPlone/interfaces/controlpanel.py b/Products/CMFPlone/interfaces/controlpanel.py\nindex 0fee5cc0a1..94da833288 100644\n--- a/Products/CMFPlone/interfaces/controlpanel.py\n+++ b/Products/CMFPlone/interfaces/controlpanel.py\n@@ -487,7 +487,7 @@ class ITinyMCEPluginSchema(Interface):\n         missing_value=[],\n         default=[\n             'edit', 'table', 'format',\n-            'tools' 'view', 'insert'])\n+            'tools', 'view', 'insert'])\n \n     menu = schema.Text(\n         title=_('label_tinymce_menu', 'Menu'),\n@@ -503,7 +503,7 @@ class ITinyMCEPluginSchema(Interface):\n             'view': {\n                 'title': 'View',\n                 'items': 'visualaid visualchars visualblocks preview '\n-                         'fullpage fullscreen',\n+                         'fullpage fullscreen code',\n             },\n             'format': {\n                 'title': 'Format',\n@@ -517,7 +517,7 @@ class ITinyMCEPluginSchema(Interface):\n             'tools': {\n                 'title': 'Tools',\n                 'items': 'spellchecker charmap emoticons insertdatetime '\n-                         'layer code'\n+                         'layer'\n             }\n         })\n     )\n"

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:07:38+01:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/bcac5d49b3d428ac9fb9a3af68a600872711704a

Fix tinymce settings: entity_encoding

Files changed:
M Products/CMFPlone/interfaces/controlpanel.py
M Products/CMFPlone/patterns/tinymce.py

b'diff --git a/Products/CMFPlone/interfaces/controlpanel.py b/Products/CMFPlone/interfaces/controlpanel.py\nindex 94da833288..0dc65b1685 100644\n--- a/Products/CMFPlone/interfaces/controlpanel.py\n+++ b/Products/CMFPlone/interfaces/controlpanel.py\n@@ -679,7 +679,7 @@ class ITinyMCEResourceTypesSchema(Interface):\n             \'Numeric: Characters will be converted into numeric entities. \'\n             \'Raw: All characters will be stored in non-entity form \'\n             \'except these XML default entities: amp lt gt quot\'),\n-        missing_value=set(),\n+        # missing_value=set(),\n         vocabulary=SimpleVocabulary(\n             [SimpleTerm(\'named\', \'named\', _(\'Named\')),\n              SimpleTerm(\'numeric\', \'numeric\', _(\'Numeric\')),\ndiff --git a/Products/CMFPlone/patterns/tinymce.py b/Products/CMFPlone/patterns/tinymce.py\nindex 13c1d5e5bd..075d7a9e40 100644\n--- a/Products/CMFPlone/patterns/tinymce.py\n+++ b/Products/CMFPlone/patterns/tinymce.py\n@@ -110,7 +110,7 @@ def get_tiny_config(self):\n             "plugins": ["plonelink", "ploneimage", "importcss"] + settings.plugins,\n             "external_plugins": {},\n             "toolbar": settings.toolbar,\n-            "entity_encoding": list(settings.entity_encoding),\n+            "entity_encoding": settings.entity_encoding,\n             "importcss_append": True,\n             "importcss_file_filter": importcss_file_filter,\n             "browser_spellcheck": True,\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:07:38+01:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/31d21693f60d7c488c7da186b8d9c37ff2f32ac2

Add TinyMCE template plugin to the plugins vocabulary

Files changed:
A news/3351.feature
M Products/CMFPlone/interfaces/controlpanel.py

b"diff --git a/Products/CMFPlone/interfaces/controlpanel.py b/Products/CMFPlone/interfaces/controlpanel.py\nindex 0dc65b1685..8cd4db020a 100644\n--- a/Products/CMFPlone/interfaces/controlpanel.py\n+++ b/Products/CMFPlone/interfaces/controlpanel.py\n@@ -467,6 +467,7 @@ class ITinyMCEPluginSchema(Interface):\n             SimpleTerm('table', 'table', 'table'),\n             SimpleTerm('textcolor', 'textcolor', 'textcolor'),\n             SimpleTerm('textpattern', 'textpattern', 'textpattern'),\n+            SimpleTerm('template', 'template', 'template'),\n             SimpleTerm('visualblocks', 'visualblocks', 'visualblocks'),\n             SimpleTerm('visualchars', 'visualchars', 'visualchars'),\n             SimpleTerm('wordcount', 'wordcount', 'wordcount')\ndiff --git a/news/3351.feature b/news/3351.feature\nnew file mode 100644\nindex 0000000000..1c863a80fa\n--- /dev/null\n+++ b/news/3351.feature\n@@ -0,0 +1 @@\n+Add TinyMCE template plugin to the plugins vocabulary [MrTango]\n\\ No newline at end of file\n"

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:07:38+01:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/0d39fac62dc3773bf86b089d9cf6ece975ebf5b6

Add examples of alerts in test_rendering view

Files changed:
M Products/CMFPlone/browser/templates/test_rendering.pt

b'diff --git a/Products/CMFPlone/browser/templates/test_rendering.pt b/Products/CMFPlone/browser/templates/test_rendering.pt\nindex 6fe6ebd04d..92dcaa993a 100644\n--- a/Products/CMFPlone/browser/templates/test_rendering.pt\n+++ b/Products/CMFPlone/browser/templates/test_rendering.pt\n@@ -53,6 +53,32 @@\n       <tal:icon tal:replace="structure python:icons.tag(\'archive\', tag_class=\'custom-class\', tag_alt=\'foobar\')" />\n     </p>\n \n+    <div class="alert alert-primary" role="alert">\n+      <span>Mollit minim ullamco aliqua do culpa amet ullamco eu tempor. <a href="http://localhost:8080/Plone27/docs/edit">nulla proident velit</a></span>\n+    </div>\n+    <div class="alert alert-secondary" role="alert">\n+      <span>Mollit minim ullamco aliqua do culpa amet ullamco eu tempor. <a href="http://localhost:8080/Plone27/docs/edit">nulla proident velit</a></span>\n+    </div>\n+    <div class="alert alert-success" role="alert">\n+      <span>Mollit minim ullamco aliqua do culpa amet ullamco eu tempor. <a href="http://localhost:8080/Plone27/docs/edit">nulla proident velit</a></span>\n+    </div>\n+    <div class="alert alert-info" role="alert">\n+      <span>Mollit minim ullamco aliqua do culpa amet ullamco eu tempor. <a href="http://localhost:8080/Plone27/docs/edit">nulla proident velit</a></span>\n+    </div>\n+    <div class="alert alert-warning" role="alert">\n+      <span>Mollit minim ullamco aliqua do culpa amet ullamco eu tempor. <a href="http://localhost:8080/Plone27/docs/edit">nulla proident velit</a></span>\n+    </div>\n+    <div class="alert alert-danger" role="alert">\n+      <span>Mollit minim ullamco aliqua do culpa amet ullamco eu tempor. <a href="http://localhost:8080/Plone27/docs/edit">nulla proident velit</a></span>\n+    </div>\n+    <div class="alert alert-light" role="alert">\n+      <span>Mollit minim ullamco aliqua do culpa amet ullamco eu tempor. <a href="http://localhost:8080/Plone27/docs/edit">nulla proident velit</a></span>\n+    </div>\n+    <div class="alert alert-dark" role="alert">\n+      <span>Mollit minim ullamco aliqua do culpa amet ullamco eu tempor. <a href="http://localhost:8080/Plone27/docs/edit">nulla proident velit</a></span>\n+    </div>\n+\n+\n     <tal:comment tal:replace="nothing">\n     <div id="content-core">\n       <pre>Headlines</pre>\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:07:38+01:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/c617b779a376ae1d0977b5a401a75f1ea4d5281d

PLIP 3211 - Remove RequireJS.

Files changed:
A news/3247.breaking
M Products/CMFPlone/resources/browser/combine.py
M Products/CMFPlone/resources/browser/cook.py
M Products/CMFPlone/resources/browser/scripts.pt
M Products/CMFPlone/resources/browser/scripts.py

b'diff --git a/Products/CMFPlone/resources/browser/combine.py b/Products/CMFPlone/resources/browser/combine.py\nindex 607d86d603..aca9c82787 100644\n--- a/Products/CMFPlone/resources/browser/combine.py\n+++ b/Products/CMFPlone/resources/browser/combine.py\n@@ -81,12 +81,6 @@ def write_js(context, folder, meta_bundle):\n         resources.append(\n             get_resource(context, registry.records["plone.resources/jquery.js"].value)\n         )\n-        resources.append(\n-            get_resource(context, registry.records["plone.resources.requirejs"].value)\n-        )\n-        resources.append(\n-            get_resource(context, registry.records["plone.resources.configjs"].value)\n-        )\n \n     # bundles\n     bundles = registry.collectionOfInterface(\ndiff --git a/Products/CMFPlone/resources/browser/cook.py b/Products/CMFPlone/resources/browser/cook.py\nindex f61c8fdc16..75c7ea236c 100644\n--- a/Products/CMFPlone/resources/browser/cook.py\n+++ b/Products/CMFPlone/resources/browser/cook.py\n@@ -23,27 +23,6 @@\n \n logger = logging.getLogger("Products.CMFPlone")\n \n-REQUIREJS_RESET_PREFIX = """\n-/* reset requirejs definitions so that people who\n-   put requirejs in legacy compilation do not get errors */\n-var _old_define = define;\n-var _old_require = require;\n-define = undefined;\n-require = undefined;\n-try{\n-"""\n-REQUIREJS_RESET_POSTFIX = """\n-}catch(e){\n-    // log it\n-    if (typeof console !== "undefined"){\n-        console.log(\'Error loading javascripts!\' + e);\n-    }\n-}finally{\n-    define = _old_define;\n-    require = _old_require;\n-}\n-"""\n-\n \n def cookWhenChangingSettings(context, bundle=None):\n     """When our settings are changed, re-cook the not compilable bundles"""\n@@ -80,7 +59,7 @@ def cookWhenChangingSettings(context, bundle=None):\n     # Let\'s join all css and js\n     css_compiler = Compiler(output_style="compressed")\n     cooked_css = ""\n-    cooked_js = REQUIREJS_RESET_PREFIX\n+    cooked_js = ""\n     siteUrl = getSite().absolute_url()\n     request = getRequest()\n     for package in bundle.resources or []:\n@@ -128,8 +107,6 @@ def cookWhenChangingSettings(context, bundle=None):\n             logger.warning("Could not find resource: %s", resource.js)\n             cooked_js += "\\n/* Could not find resource: {} */\\n\\n".format(js_url)\n \n-    cooked_js += REQUIREJS_RESET_POSTFIX\n-\n     persistent_directory = getUtility(IResourceDirectory, name="persistent")\n     if OVERRIDE_RESOURCE_DIRECTORY_NAME not in persistent_directory:\n         persistent_directory.makeDirectory(OVERRIDE_RESOURCE_DIRECTORY_NAME)\ndiff --git a/Products/CMFPlone/resources/browser/scripts.pt b/Products/CMFPlone/resources/browser/scripts.pt\nindex d3d762fd7f..d037916c66 100644\n--- a/Products/CMFPlone/resources/browser/scripts.pt\n+++ b/Products/CMFPlone/resources/browser/scripts.pt\n@@ -1,21 +1,7 @@\n <script tal:content="string:PORTAL_URL = \'${view/site_url}\';"></script>\n \n <tal:scripts repeat="script view/scripts">\n-  <tal:block define="condcomment script/conditionalcomment; resetrjs script/resetrjs|nothing">\n-\n-    <tal:if condition="resetrjs">\n-      <tal:openreset content=\'structure string:&lt;script&gt;\'></tal:openreset>\n-\n-      <tal:comment tal:replace="nothing">\n-        Reset RequireJS definitions so that people who put RequireJS in a legacy compilation do not get errors\n-      </tal:comment>\n-\n-      var _old_define = define;\n-      var _old_require = require;\n-      define = undefined;\n-      require = undefined;\n-      <tal:endreset content=\'structure string:&lt;/script&gt;\'></tal:endreset>\n-    </tal:if>\n+  <tal:block define="condcomment script/conditionalcomment">\n \n     <tal:if condition="condcomment">\n       <tal:opencc tal:replace="structure string:&lt;!--[if ${condcomment}]&gt;"></tal:opencc>\n@@ -27,12 +13,5 @@\n       <tal:closecc tal:condition="condcomment" tal:replace="structure string:&lt;![endif]--&gt;"></tal:closecc>\n     </tal:if>\n \n-    <tal:if condition="resetrjs">\n-      <tal:openredefine content=\'structure string:&lt;script&gt;\'></tal:openredefine>\n-      define = _old_define;\n-      require = _old_require;\n-      <tal:endredefine content=\'structure string:&lt;/script&gt;\'></tal:endredefine>\n-    </tal:if>\n-\n   </tal:block>\n </tal:scripts>\ndiff --git a/Products/CMFPlone/resources/browser/scripts.py b/Products/CMFPlone/resources/browser/scripts.py\nindex b2b52a0a07..d93e2ccdd6 100644\n--- a/Products/CMFPlone/resources/browser/scripts.py\n+++ b/Products/CMFPlone/resources/browser/scripts.py\n@@ -13,7 +13,6 @@ def _add_resources(\n         resources_to_add,\n         result,\n         bundle_name="none",\n-        resetrjs=False,\n         conditionalcomment="",\n     ):\n         resources = self.get_resources()\n@@ -31,10 +30,6 @@ def _add_resources(\n                 "bundle": bundle_name,\n                 "conditionalcomment": conditionalcomment,\n                 "src": src,\n-                # Reset RequireJS if bundle is in non-compile to\n-                # avoid "Mismatched anonymous define()" in legacy\n-                # scripts.\n-                "resetrjs": resetrjs,\n             }\n             result.append(data)\n \n@@ -45,7 +40,6 @@ def get_data(self, bundle, result):\n                 bundle.resources,\n                 result,\n                 bundle_name=bundle.name,\n-                resetrjs=bundle.compile is False,\n                 conditionalcomment=bundle.conditionalcomment,\n             )\n             return\n@@ -111,48 +105,6 @@ def default_resources(self):\n                 "bundle": "basic",\n             }\n         )\n-        if self.development:\n-            # We need to add require.js and config.js\n-            result.append(\n-                {\n-                    "src": "{}/{}".format(\n-                        self.site_url,\n-                        self.registry.records["plone.resources.less-variables"].value,\n-                    ),  # noqa\n-                    "conditionalcomment": None,\n-                    "bundle": "basic",\n-                }\n-            )\n-            result.append(\n-                {\n-                    "src": "{}/{}".format(\n-                        self.site_url,\n-                        self.registry.records["plone.resources.lessc"].value,\n-                    ),\n-                    "conditionalcomment": None,\n-                    "bundle": "basic",\n-                }\n-            )\n-        result.append(\n-            {\n-                "src": "{}/{}".format(\n-                    self.site_url,\n-                    self.registry.records["plone.resources.requirejs"].value,\n-                ),\n-                "conditionalcomment": None,\n-                "bundle": "basic",\n-            }\n-        )\n-        result.append(\n-            {\n-                "src": "{}/{}".format(\n-                    self.site_url,\n-                    self.registry.records["plone.resources.configjs"].value,\n-                ),\n-                "conditionalcomment": None,\n-                "bundle": "basic",\n-            }\n-        )\n         return result\n \n     def base_url(self):\n@@ -163,9 +115,6 @@ def base_url(self):\n         return site_url\n \n     def scripts(self):\n-        """The requirejs scripts, the ones that are not resources are loaded on\n-        configjs.py\n-        """\n         if self.debug_mode or self.development or not self.production_path:\n             result = self.default_resources()\n             result.extend(self.ordered_bundles_result())\ndiff --git a/news/3247.breaking b/news/3247.breaking\nnew file mode 100644\nindex 0000000000..37490733e8\n--- /dev/null\n+++ b/news/3247.breaking\n@@ -0,0 +1,2 @@\n+PLIP 3211 - Remove RequireJS.\n+[MrTango]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:07:38+01:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/2f1ba375bec57e42ec5879117bb891c6ef200770

PLIP 3211 - Remove default resource jQuery. It is added to the global namespace via the bundle.

Files changed:
M Products/CMFPlone/resources/browser/combine.py
M Products/CMFPlone/resources/browser/scripts.py
M news/3247.breaking

b'diff --git a/Products/CMFPlone/resources/browser/combine.py b/Products/CMFPlone/resources/browser/combine.py\nindex aca9c82787..597f24fdac 100644\n--- a/Products/CMFPlone/resources/browser/combine.py\n+++ b/Products/CMFPlone/resources/browser/combine.py\n@@ -76,12 +76,6 @@ def write_js(context, folder, meta_bundle):\n     registry = getUtility(IRegistry)\n     resources = []\n \n-    # default resources\n-    if meta_bundle == "default" and registry.records.get("plone.resources/jquery.js"):\n-        resources.append(\n-            get_resource(context, registry.records["plone.resources/jquery.js"].value)\n-        )\n-\n     # bundles\n     bundles = registry.collectionOfInterface(\n         IBundleRegistry, prefix="plone.bundles", check=False\ndiff --git a/Products/CMFPlone/resources/browser/scripts.py b/Products/CMFPlone/resources/browser/scripts.py\nindex d93e2ccdd6..1417bc7451 100644\n--- a/Products/CMFPlone/resources/browser/scripts.py\n+++ b/Products/CMFPlone/resources/browser/scripts.py\n@@ -91,22 +91,6 @@ def get_data(self, bundle, result):\n                 }\n             )\n \n-    def default_resources(self):\n-        """Default resources used by Plone itself"""\n-        result = []\n-        # We always add jquery resource\n-        result.append(\n-            {\n-                "src": "{}/{}".format(\n-                    self.site_url,\n-                    self.registry.records["plone.resources/jquery.js"].value,\n-                ),\n-                "conditionalcomment": None,\n-                "bundle": "basic",\n-            }\n-        )\n-        return result\n-\n     def base_url(self):\n         portal_state = getMultiAdapter(\n             (self.context, self.request), name="plone_portal_state"\n@@ -116,8 +100,7 @@ def base_url(self):\n \n     def scripts(self):\n         if self.debug_mode or self.development or not self.production_path:\n-            result = self.default_resources()\n-            result.extend(self.ordered_bundles_result())\n+            result = self.ordered_bundles_result()\n         else:\n             result = [\n                 {\ndiff --git a/news/3247.breaking b/news/3247.breaking\nindex 37490733e8..1a2e4738f8 100644\n--- a/news/3247.breaking\n+++ b/news/3247.breaking\n@@ -1,2 +1,3 @@\n PLIP 3211 - Remove RequireJS.\n+PLIP 3211 - Remove default resource jQuery. It is added to the global namespace via the bundle.\n [MrTango]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:07:38+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/ab59f48bb245bb332a9a998ca00bc6c84072322d

PLIP 3211 - Remove support for conditional comments.

PLIP 3211 - Remove support for conditional comments in script and style tags.
It's not supported since IE10.
See: https://en.wikipedia.org/wiki/Conditional_comment

Files changed:
M Products/CMFPlone/interfaces/resources.py
M Products/CMFPlone/resources/browser/scripts.pt
M Products/CMFPlone/resources/browser/scripts.py
M Products/CMFPlone/resources/browser/styles.pt
M Products/CMFPlone/resources/browser/styles.py
M news/3247.breaking

b'diff --git a/Products/CMFPlone/interfaces/resources.py b/Products/CMFPlone/interfaces/resources.py\nindex 91a16a0d8e..0f6cb02e76 100644\n--- a/Products/CMFPlone/interfaces/resources.py\n+++ b/Products/CMFPlone/interfaces/resources.py\n@@ -66,13 +66,6 @@ class IBundleRegistry(zope.interface.Interface):\n             "does not apply if the bundle is merged)."),\n         required=False)\n \n-    conditionalcomment = schema.ASCIILine(\n-        title=_("Conditional comment"),\n-        description=_(\n-            "In case you want to render this resource on conditional comment "\n-            "(it does not apply if the bundle is merged)."),\n-        required=False)\n-\n     resources = schema.List(\n         title=_("Loaded resources"),\n         description=_(\ndiff --git a/Products/CMFPlone/resources/browser/scripts.pt b/Products/CMFPlone/resources/browser/scripts.pt\nindex d037916c66..4acf64d7ba 100644\n--- a/Products/CMFPlone/resources/browser/scripts.pt\n+++ b/Products/CMFPlone/resources/browser/scripts.pt\n@@ -1,17 +1,9 @@\n <script tal:content="string:PORTAL_URL = \'${view/site_url}\';"></script>\n \n-<tal:scripts repeat="script view/scripts">\n-  <tal:block define="condcomment script/conditionalcomment">\n+<script type="text/javascript" \n+    tal:repeat="script view/scripts"\n+    tal:attributes="src script/src;\n+                    data-bundle script/bundle;\n+                    async script/async|nothing;\n+                    defer script/defer|nothing"></script>\n \n-    <tal:if condition="condcomment">\n-      <tal:opencc tal:replace="structure string:&lt;!--[if ${condcomment}]&gt;"></tal:opencc>\n-    </tal:if>\n-\n-    <script type="text/javascript" tal:attributes="src script/src; data-bundle script/bundle; async script/async|nothing; defer script/defer|nothing"></script>\n-\n-    <tal:if condition="condcomment">\n-      <tal:closecc tal:condition="condcomment" tal:replace="structure string:&lt;![endif]--&gt;"></tal:closecc>\n-    </tal:if>\n-\n-  </tal:block>\n-</tal:scripts>\ndiff --git a/Products/CMFPlone/resources/browser/scripts.py b/Products/CMFPlone/resources/browser/scripts.py\nindex 1417bc7451..481f70049c 100644\n--- a/Products/CMFPlone/resources/browser/scripts.py\n+++ b/Products/CMFPlone/resources/browser/scripts.py\n@@ -13,7 +13,6 @@ def _add_resources(\n         resources_to_add,\n         result,\n         bundle_name="none",\n-        conditionalcomment="",\n     ):\n         resources = self.get_resources()\n         for resource in resources_to_add:\n@@ -28,7 +27,6 @@ def _add_resources(\n                 src = data.js\n             data = {\n                 "bundle": bundle_name,\n-                "conditionalcomment": conditionalcomment,\n                 "src": src,\n             }\n             result.append(data)\n@@ -40,7 +38,6 @@ def get_data(self, bundle, result):\n                 bundle.resources,\n                 result,\n                 bundle_name=bundle.name,\n-                conditionalcomment=bundle.conditionalcomment,\n             )\n             return\n         if (\n@@ -84,7 +81,6 @@ def get_data(self, bundle, result):\n             result.append(\n                 {\n                     "bundle": bundle.name,\n-                    "conditionalcomment": bundle.conditionalcomment,\n                     "src": js_location,\n                     "async": load_async,\n                     "defer": load_defer,\n@@ -107,7 +103,6 @@ def scripts(self):\n                     "src": "{}/++plone++{}".format(\n                         self.site_url, self.production_path + "/default.js"\n                     ),\n-                    "conditionalcomment": None,\n                     "bundle": "production",\n                     "async": None,  # Do not load ``async`` or\n                     "defer": None,  # ``defer`` for production bundles.\n@@ -119,7 +114,6 @@ def scripts(self):\n                         "src": "{}/++plone++{}".format(\n                             self.site_url, self.production_path + "/logged-in.js"\n                         ),\n-                        "conditionalcomment": None,\n                         "bundle": "production",\n                         "async": None,  # Do not load ``async`` or\n                         "defer": None,  # ``defer`` for production bundles.\n@@ -143,7 +137,6 @@ def scripts(self):\n             result.append(\n                 {\n                     "bundle": "diazo",\n-                    "conditionalcomment": "",\n                     "src": f"{self.site_url}/{origin}",\n                 }\n             )\ndiff --git a/Products/CMFPlone/resources/browser/styles.pt b/Products/CMFPlone/resources/browser/styles.pt\nindex 8efe677417..87b03938c4 100644\n--- a/Products/CMFPlone/resources/browser/styles.pt\n+++ b/Products/CMFPlone/resources/browser/styles.pt\n@@ -1,13 +1,6 @@\n-<tal:styles repeat="style view/styles"\n-  ><tal:block define="condcomment style/conditionalcomment"\n-    ><tal:wcondcomment tal:condition="condcomment">\n-        <tal:opencc tal:replace="structure string:&lt;!--[if ${condcomment}]&gt;" />\n-    </tal:wcondcomment\n-    ><link rel="style"\n-          tal:attributes="href style/src;\n-                          rel style/rel;\n-                          data-bundle style/bundle;" /><tal:wcondcomment tal:condition="condcomment">\n-        <tal:closecc tal:replace="structure string:&lt;![endif]--&gt;" />\n-    </tal:wcondcomment\n-  ></tal:block\n-></tal:styles>\n+<link rel="style"\n+    tal:repeat="style view/styles"\n+    tal:attributes="href style/src;\n+                    rel style/rel;\n+                    data-bundle style/bundle;" />\n+\ndiff --git a/Products/CMFPlone/resources/browser/styles.py b/Products/CMFPlone/resources/browser/styles.py\nindex f1ee9c242e..71d1869a2b 100644\n--- a/Products/CMFPlone/resources/browser/styles.py\n+++ b/Products/CMFPlone/resources/browser/styles.py\n@@ -32,7 +32,6 @@ def get_urls(self, style, bundle):\n             data = {\n                 "rel": rel,\n                 "bundle": bundle.name if bundle else "none",\n-                "conditionalcomment": bundle.conditionalcomment if bundle else "",\n                 "src": src,\n             }\n             yield data\n@@ -81,7 +80,6 @@ def get_data(self, bundle, result):\n                     {\n                         "bundle": bundle.name,\n                         "rel": "stylesheet",\n-                        "conditionalcomment": bundle.conditionalcomment,\n                         "src": css_location,\n                     }\n                 )\n@@ -111,7 +109,6 @@ def styles(self):\n                     "src": "{}/++plone++{}".format(\n                         self.site_url, self.production_path + "/default.css"\n                     ),\n-                    "conditionalcomment": None,\n                     "rel": "stylesheet",\n                     "bundle": "production",\n                 },\n@@ -122,7 +119,6 @@ def styles(self):\n                         "src": "{}/++plone++{}".format(\n                             self.site_url, self.production_path + "/logged-in.css"\n                         ),\n-                        "conditionalcomment": None,\n                         "rel": "stylesheet",\n                         "bundle": "production",\n                     }\n@@ -157,7 +153,7 @@ def styles(self):\n             if extension != "" and extension != "css":\n                 rel = "stylesheet/%s" % extension\n \n-            data = {"rel": rel, "conditionalcomment": "", "src": src, "bundle": "diazo"}\n+            data = {"rel": rel, "src": src, "bundle": "diazo"}\n \n             result.append(data)\n \n@@ -165,7 +161,6 @@ def styles(self):\n         if self.custom_css:\n             custom_css = {\n                 "rel": "stylesheet",\n-                "conditionalcomment": "",\n                 "src": "{}/custom.css?timestamp={}".format(\n                     self.site_url,\n                     self.custom_css_timestamp,\ndiff --git a/news/3247.breaking b/news/3247.breaking\nindex 1a2e4738f8..b453b200ff 100644\n--- a/news/3247.breaking\n+++ b/news/3247.breaking\n@@ -1,3 +1,6 @@\n PLIP 3211 - Remove RequireJS.\n PLIP 3211 - Remove default resource jQuery. It is added to the global namespace via the bundle.\n-[MrTango]\n+PLIP 3211 - Remove support for conditional comments in script and style tags.\n+            It\'s not supported since IE10.\n+            See: https://en.wikipedia.org/wiki/Conditional_comment\n+[MrTango, thet]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:08:54+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/e1065b14fa38305e33e0909115dc17eb3f51d4ef

PLIP 3211 - Remove dependency on mockup.

Mockup is now a npm package only and as such a dependency of plone.staticresources.

Files changed:
A news/3247-2.breaking
M Products/CMFPlone/configure.zcml
M setup.py

b'diff --git a/Products/CMFPlone/configure.zcml b/Products/CMFPlone/configure.zcml\nindex 9d9f68b282..d4ab0a8a9d 100644\n--- a/Products/CMFPlone/configure.zcml\n+++ b/Products/CMFPlone/configure.zcml\n@@ -36,8 +36,6 @@\n   <include package="plone.protect" />\n   <include package="plone.indexer" />\n \n-  <!-- mockup -->\n-  <include package="mockup" />\n   <include package="plone.staticresources" />\n \n   <!-- viewlets zope 3 layers support for themes -->\ndiff --git a/news/3247-2.breaking b/news/3247-2.breaking\nnew file mode 100644\nindex 0000000000..a7b2e6edad\n--- /dev/null\n+++ b/news/3247-2.breaking\n@@ -0,0 +1,2 @@\n+Remove dependency on mockup. Mockup is now a npm package only and as such a dependency of plone.staticresources.\n+[thet]\ndiff --git a/setup.py b/setup.py\nindex 30d7353b8b..c0563fc8eb 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -43,7 +43,6 @@\n         \'five.customerize\',\n         \'five.localsitemanager\',\n         \'lxml\',\n-        \'mockup\',\n         \'Pillow\',\n         \'plone.api >= 1.4.4\',\n         \'plone.app.content\',\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:09:11+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/9d18ebcc6fd9514c216e991b0d8e290468b20e1c

PLIP 3211 - Do not include removed lessc/rjs in resource registry view.

Files changed:
M Products/CMFPlone/controlpanel/browser/resourceregistry.py

b"diff --git a/Products/CMFPlone/controlpanel/browser/resourceregistry.py b/Products/CMFPlone/controlpanel/browser/resourceregistry.py\nindex 2c0dcace27..b032db5e21 100644\n--- a/Products/CMFPlone/controlpanel/browser/resourceregistry.py\n+++ b/Products/CMFPlone/controlpanel/browser/resourceregistry.py\n@@ -398,8 +398,6 @@ def config(self):\n         base_url = self.context.absolute_url()\n         resources = self.get_resources()\n \n-        less_url = self.registry['plone.resources.lessc']\n-        rjs_url = self.registry['plone.resources.rjs']\n \n         data = {\n             'development': self.registry['plone.resources.development'],\n@@ -410,9 +408,7 @@ def config(self):\n             'css': {},\n             'baseUrl': base_url,\n             'manageUrl': '%s/@@resourceregistry-controlpanel' % base_url,\n-            'lessUrl': f'{base_url}/{less_url}',\n             'lessConfigUrl': '%s/less-variables.js' % base_url,\n-            'rjsUrl': rjs_url,\n             'patternoptions': self.registry['plone.patternoptions']\n         }\n         bundles = self.get_bundles()\n"

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:09:11+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/a980bd27e6b0a9383325488d641774621a1ba4ce

PLIP 3211 - Allow inclusion of externally hosted bundles/resources.

Files changed:
M Products/CMFPlone/resources/browser/scripts.py
M Products/CMFPlone/resources/browser/styles.py

b'diff --git a/Products/CMFPlone/resources/browser/scripts.py b/Products/CMFPlone/resources/browser/scripts.py\nindex 481f70049c..e4da4fc03c 100644\n--- a/Products/CMFPlone/resources/browser/scripts.py\n+++ b/Products/CMFPlone/resources/browser/scripts.py\n@@ -64,6 +64,10 @@ def get_data(self, bundle, result):\n                     parse.quote(str(bundle.last_compilation)),\n                     resource_filepath,\n                 )\n+            elif js_path.startswith("http"):\n+                js_location = "{}?version={}".format(\n+                    js_path, parse.quote(str(bundle.last_compilation))\n+                )\n             else:\n                 js_location = "{}/{}?version={}".format(\n                     self.site_url,\ndiff --git a/Products/CMFPlone/resources/browser/styles.py b/Products/CMFPlone/resources/browser/styles.py\nindex 71d1869a2b..f579463b02 100644\n--- a/Products/CMFPlone/resources/browser/styles.py\n+++ b/Products/CMFPlone/resources/browser/styles.py\n@@ -10,7 +10,7 @@\n \n class StylesBase(ResourceBase):\n \n-    """ Information for style rendering. """\n+    """Information for style rendering."""\n \n     def get_urls(self, style, bundle):\n         """\n@@ -70,6 +70,10 @@ def get_data(self, bundle, result):\n                         parse.quote(str(bundle.last_compilation)),\n                         resource_filepath,\n                     )\n+                elif css_path.startswith("http"):\n+                    css_location = "{}?version={}".format(\n+                        css_path, parse.quote(str(bundle.last_compilation))\n+                    )\n                 else:\n                     css_location = "{}/{}?version={}".format(\n                         self.site_url,\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:12:40+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/c9299c64ad2ae27e098fb8b9d94f982cef664a30

PLIP 3211 - First quick and dirty attempt of improving the cache key handling for bundles/resources. Needs revisiting and reimplenentation following PLIP proposal.

Files changed:
M Products/CMFPlone/resources/browser/scripts.py
M Products/CMFPlone/resources/browser/styles.py

b'diff --git a/Products/CMFPlone/resources/browser/scripts.py b/Products/CMFPlone/resources/browser/scripts.py\nindex e4da4fc03c..858c492faa 100644\n--- a/Products/CMFPlone/resources/browser/scripts.py\n+++ b/Products/CMFPlone/resources/browser/scripts.py\n@@ -54,6 +54,10 @@ def get_data(self, bundle, result):\n             # defined because the compiling is done outside of plone\n             cookWhenChangingSettings(self.context, bundle)\n         if bundle.jscompilation:\n+            cache_key = ""\n+            if not self.development:\n+                cache_key = parse.quote(str(bundle.last_compilation))\n+\n             js_path = bundle.jscompilation\n             if "++plone++" in js_path:\n                 resource_path = js_path.split("++plone++")[-1]\n@@ -61,18 +65,18 @@ def get_data(self, bundle, result):\n                 js_location = "{}/++plone++{}/++unique++{}/{}".format(\n                     self.site_url,\n                     resource_name,\n-                    parse.quote(str(bundle.last_compilation)),\n+                    cache_key,\n                     resource_filepath,\n                 )\n             elif js_path.startswith("http"):\n-                js_location = "{}?version={}".format(\n-                    js_path, parse.quote(str(bundle.last_compilation))\n+                js_location = "{}{}".format(\n+                    js_path, "?version={}".format(cache_key) if cache_key else ""\n                 )\n             else:\n-                js_location = "{}/{}?version={}".format(\n+                js_location = "{}/{}{}".format(\n                     self.site_url,\n                     bundle.jscompilation,\n-                    parse.quote(str(bundle.last_compilation)),\n+                    "?version={}".format(cache_key) if cache_key else "",\n                 )\n \n             load_async = (\ndiff --git a/Products/CMFPlone/resources/browser/styles.py b/Products/CMFPlone/resources/browser/styles.py\nindex f579463b02..78c81f31ce 100644\n--- a/Products/CMFPlone/resources/browser/styles.py\n+++ b/Products/CMFPlone/resources/browser/styles.py\n@@ -60,6 +60,10 @@ def get_data(self, bundle, result):\n                     cookWhenChangingSettings(self.context, bundle)\n \n             if bundle.csscompilation:\n+                cache_key = ""\n+                if not self.development:\n+                    cache_key = parse.quote(str(bundle.last_compilation))\n+\n                 css_path = bundle.csscompilation\n                 if "++plone++" in css_path:\n                     resource_path = css_path.split("++plone++")[-1]\n@@ -67,18 +71,18 @@ def get_data(self, bundle, result):\n                     css_location = "{}/++plone++{}/++unique++{}/{}".format(\n                         self.site_url,\n                         resource_name,\n-                        parse.quote(str(bundle.last_compilation)),\n+                        cache_key,\n                         resource_filepath,\n                     )\n                 elif css_path.startswith("http"):\n-                    css_location = "{}?version={}".format(\n-                        css_path, parse.quote(str(bundle.last_compilation))\n+                    css_location = "{}{}".format(\n+                        css_path, "?version={}".format(cache_key) if cache_key else ""\n                     )\n                 else:\n-                    css_location = "{}/{}?version={}".format(\n+                    css_location = "{}/{}{}".format(\n                         self.site_url,\n                         bundle.csscompilation,\n-                        parse.quote(str(bundle.last_compilation)),\n+                        "?version={}".format(cache_key) if cache_key else "",\n                     )\n                 result.append(\n                     {\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:17:52+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/23c4fdb4a0a4935af9817ca525b0b973b6c61f62

PLIP 3211 - New resource registry to simplify CSS/JS registration.

- Completely (almost) rewritten ResourceRegistry based on the "webresource" project.
- removed &gt;1600LOC.
- Sane dependency resolution using "webresource".
- Only "bundles" are registered - support of "resources" and "bundle resources" is removed.
- Some of the old bundle registry properties are deprecated and unused.
- Removed TTW compilation of bundles via r.js and less.js.
- Property `merge_with` is no longer needed in HTTP/2 times and merging here unsupported.
- Unique key for delivery is based on hash of bundle file, `last_compilation` property is deprecated.
- A new traverser ensures uniqueness.
- Other related bundle properties are also deprecated.
- Comes with new, server side generated control panel.

Files changed:
A Products/CMFPlone/resources/utils.py
A Products/CMFPlone/resources/webresource.py
A news/3325.breaking
M Products/CMFPlone/controlpanel/browser/resourceregistry.pt
M Products/CMFPlone/controlpanel/browser/resourceregistry.py
M Products/CMFPlone/exportimport/configure.zcml
M Products/CMFPlone/interfaces/resources.py
M Products/CMFPlone/resources/__init__.py
M Products/CMFPlone/resources/browser/combine.py
M Products/CMFPlone/resources/browser/configure.zcml
M Products/CMFPlone/resources/browser/resource.py
M Products/CMFPlone/tests/testResourceRegistries.py
M setup.cfg
M setup.py
D Products/CMFPlone/resources/browser/configjs.py
D Products/CMFPlone/resources/browser/cook.py
D Products/CMFPlone/resources/browser/interfaces.py
D Products/CMFPlone/resources/browser/mixins.py
D Products/CMFPlone/resources/browser/scripts.pt
D Products/CMFPlone/resources/browser/scripts.py
D Products/CMFPlone/resources/browser/styles.pt
D Products/CMFPlone/resources/browser/styles.py
D Products/CMFPlone/resources/bundle.py
D Products/CMFPlone/resources/exportimport/__init__.py
D Products/CMFPlone/resources/exportimport/bundles.py
D Products/CMFPlone/resources/exportimport/resourceregistry.py
D Products/CMFPlone/tests/testCSSandJSRegistry.py
D Products/CMFPlone/tests/test_metabundles.py

b'diff --git a/Products/CMFPlone/controlpanel/browser/resourceregistry.pt b/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\nindex b1ac950250..33d1f350f6 100644\n--- a/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\n+++ b/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\n@@ -13,49 +13,80 @@\n   <header>\n \n     <h1 class="documentFirstHeading"\n-        i18n:translate="">Resource Registries</h1>\n+        i18n:translate="">Resource Registry</h1>\n \n     <div class="text-muted"\n        i18n:translate="">\n-      Configure, enable, disable, debug and build Plone JavaScript/LESS/CSS resources.\n-      Plone utilizes RequireJS and LESS CSS to build its resources.\n-      Re-building a Plone bundle TTW requires a modern web browser.\n+      Configure Plone JavaScript/CSS resource bundles.\n     </div>\n   </header>\n \n    <div id="content-core">\n-      <span tal:replace="structure context/@@authenticator/authenticator"/>\n-      <div class="pat-resourceregistry" tal:attributes="data-pat-resourceregistry view/config">\n-        <div class="alert alert-info" role="status">\n-          <strong i18n:translate="">Info</strong>\n-          <span i18n:translate="">If you see this, it is because there was an error rendering the resource registry\n-          configuration. It\'s possible you saved a bundle that gives a JavaScript error\n-          and it is preventing the resource registry from loading.</span>\n+    <div class="accordion" id="accordionRR" tal:define="dummy python:view.process_form()">\n+      <div class="accordion-item "\n+           tal:repeat="bundle python:view.bundles_data">\n+           <h2 class="accordion-header" id="heading-${python:bundle[\'name\']}">\n+            <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-${python:bundle[\'name\']}" aria-expanded="false" aria-controls="collapse-${python:bundle[\'name\']}">\n+              <span tal:condition="python:bundle[\'name\'] and bundle[\'enabled\']" i18n:translate="" class="me-2"><tal:icon tal:replace="structure python:icons.tag(\'file-check\', tag_alt=\'Enabled bundle\')" /></span>\n+              <span tal:condition="python:bundle[\'name\'] and not bundle[\'enabled\']" i18n:translate="" class="me-2"><tal:icon tal:replace="structure python:icons.tag(\'file-x\', tag_alt=\'Disabled bundle\')" /></span>\n+              <span tal:condition="python:not bundle[\'name\']" i18n:translate="" class="me-2"><tal:icon tal:replace="structure python:icons.tag(\'file-plus\', tag_alt=\'Add a bundle\')" /></span>\n+              <strong tal:condition="python:bundle[\'name\']">${python:bundle["name"]}</strong>\n+              <strong tal:condition="python:not bundle[\'name\']">Add new bundle</strong>\n+            </button>\n+          </h2>\n+          <div id="collapse-${python:bundle[\'name\']}" class="accordion-collapse ${python:\'\' if bundle[\'name\'] == request.form.get(\'name\', None) else \'collapse\'}" aria-labelledby="heading${python:bundle[\'name\']}" data-bs-parent="#accordionRR">\n+            <div class="accordion-body">\n+              <form method="post" action="${python:context.absolute_url()}/@@resourceregistry-controlpanel">\n+                <input type="hidden" name="original_name" value="${python:bundle[\'name\']}" />\n+                <div class="mb-3">\n+                  <label for="name" class="form-label">Name</label>\n+                  <input type="text" class="form-control" name="name" value="${python:bundle[\'name\']}"/>\n+                </div>\n+                <div class="mb-3">\n+                  <label for="jscompilation" class="form-label">Javascript</label>\n+                  <input type="text" class="form-control" name="jscompilation" value="${python:bundle[\'jscompilation\']}"/>\n+                </div>\n+                <div class="mb-3">\n+                  <label for="csscompilation" class="form-label">CSS</label>\n+                  <input type="text" class="form-control" name="csscompilation" value="${python:bundle[\'csscompilation\']}"/>\n+                </div>\n+                <div class="form-check mb-3">\n+                  <input class="form-check-input" type="checkbox" value="" name="enabled" ${python:"checked" if bundle["enabled"] else \'\'} />\n+                  <label class="form-check-label" for="enabled">\n+                    enabled\n+                  </label>\n+                </div>\n+                <div class="mb-3">\n+                  <label for="expression" class="form-label">Condition</label>\n+                  <input type="text" class="form-control" name="expression" value="${python:bundle[\'expression\']}" placeholder="expression"/>\n+                </div>\n+                <div class="mb-3">\n+                  <label for="depends" class="form-label">Depends on</label>\n+                  <input type="text" class="form-control" name="depends" value="${python:bundle[\'depends\']}" />\n+                </div>\n+                <div class="form-check mb-3">\n+                  <input class="form-check-input" type="checkbox" value="1" name="load_async" ${python:"checked" if bundle["load_async"] else \'\'} />\n+                  <label class="form-check-label" for="load_async">\n+                    Async\n+                  </label>\n+                </div>\n+                <div class="form-check mb-3">\n+                  <input class="form-check-input" type="checkbox" value="1" name="load_defer" ${python:"checked" if bundle["load_defer"] else \'\'} />\n+                  <label class="form-check-label" for="load_defer">\n+                    Defer\n+                  </label>\n+                </div>\n+                <div class="mb-3">\n+                  <button tal:condition="python:bundle[\'name\']" name="action" value="update" type="submit" class="btn btn-primary me-1">Save</button>\n+                  <button tal:condition="python:not bundle[\'name\']" name="action" value="add" type="submit" class="btn btn-success me-1">Add</button>\n+                  <button tal:condition="python:bundle[\'name\']" name="action" value="delete" type="submit" class="btn btn-danger">Delete</button>\n+                </div>\n+              </form>\n+          </div>\n         </div>\n-        <h2 i18n:translate="">Available Options</h2>\n-        <ul>\n-          <li i18n:translate="">Reload the page. There could be a intermittent issue.</li>\n-          <li i18n:translate="">Go to the <a i18n:name="configuration_registry" i18n:translate=""\n-              href="${portal_url}/portal_registry">Configuration Registry</a>\n-              and manually edit the configuration to enable development mode\n-              on the resource registry and try to rebuild.</li>\n-          <li><span i18n:translate="" tal:omit-tag="">You can also attempt to delete your customizations/builds and see if that fixes it.</span>\n-            <ul>\n-              <tal:overrides tal:repeat="override python: view.get_overrides()">\n-                <li>\n-                  <form method="POST">\n-                    <input type="hidden" name="action" value="delete-file" />\n-                    <input type="hidden" name="response" value="html" />\n-                    <input type="hidden" name="filepath" value="${override}" />\n-                    <input type="submit" value="Delete ${override}" i18n:attributes="value" />\n-                  </form>\n-                </li>\n-              </tal:overrides>\n-            </ul>\n-          </li>\n-        </ul>\n       </div>\n     </div>\n+   </div>\n </metal:main>\n \n </body>\ndiff --git a/Products/CMFPlone/controlpanel/browser/resourceregistry.py b/Products/CMFPlone/controlpanel/browser/resourceregistry.py\nindex b032db5e21..02c91648f3 100644\n--- a/Products/CMFPlone/controlpanel/browser/resourceregistry.py\n+++ b/Products/CMFPlone/controlpanel/browser/resourceregistry.py\n@@ -1,420 +1,116 @@\n-from datetime import datetime\n-from plone.memoize.view import memoize\n from plone.registry import field\n from plone.registry.interfaces import IRegistry\n from plone.registry.record import Record\n-from plone.resource.interfaces import IResourceDirectory\n+from Products.CMFPlone import PloneMessageFactory as _\n from Products.CMFPlone.interfaces import IBundleRegistry\n-from Products.CMFPlone.interfaces import IResourceRegistry\n-from Products.CMFPlone.interfaces.resources import OVERRIDE_RESOURCE_DIRECTORY_NAME  # noqa\n-from Products.CMFPlone.resources import add_bundle_on_request\n-from Products.CMFPlone.resources import RESOURCE_DEVELOPMENT_MODE\n-from Products.CMFPlone.resources.browser.configjs import RequireJsView\n-from Products.CMFPlone.resources.browser.cook import cookWhenChangingSettings\n+from Products.Five.browser import BrowserView\n from Products.statusmessages.interfaces import IStatusMessage\n-from urllib import parse\n-from zExceptions import NotFound\n from zope.component import getUtility\n \n-import json\n-import posixpath\n-import re\n-\n-\n-CSS_URL_REGEX = re.compile(r\'url\\(([^)]+)\\)\')\n-\n-\n-class JSONEncoder(json.JSONEncoder):\n-\n-    def default(self, obj):\n-        if hasattr(obj, \'isoformat\'):\n-            return obj.isoformat()\n-        else:\n-            return json.JSONEncoder.default(self, obj)\n-\n-\n-def recordsToDict(record):\n-    data = {}\n-    for name in record.__schema__.names():\n-        data[name] = getattr(record, name)\n-    return data\n-\n-\n-def updateRecordFromDict(record, data):\n-    for name in record.__schema__.names():\n-        if name in [\'last_compilation\']:\n-            continue\n-        if name in data:\n-            # almost all string data needs to be str, not unicode\n-            val = data[name]\n-            if isinstance(val, list):\n-                newval = []\n-                for item in val:\n-                    newval.append(item)\n-                val = newval\n-\n-            full_name = record.__prefix__ + name\n-            try:\n-                record.__registry__[full_name] = val\n-            except (AttributeError, KeyError):\n-                # upgrade record on the fly, try to at least\n-                if not val:\n-                    continue\n-                if type(val) == bool:\n-                    record.__registry__.records[full_name] = Record(\n-                        field.Bool(title=""), val)\n-                else:\n-                    raise\n-\n-\n-class OverrideFolderManager:\n-\n-    def __init__(self, context):\n-        self.context = context\n-        persistent_directory = getUtility(IResourceDirectory, name="persistent")  # noqa\n-        if OVERRIDE_RESOURCE_DIRECTORY_NAME not in persistent_directory:\n-            persistent_directory.makeDirectory(OVERRIDE_RESOURCE_DIRECTORY_NAME)  # noqa\n-        self.container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n-\n-    def save_file(self, filepath, data):\n-        resource_name, resource_filepath = filepath.split(\'/\', 1)\n-        if resource_name not in self.container:\n-            self.container.makeDirectory(resource_name)\n-        folder = self.container[resource_name]\n-        if \'.css\' in resource_filepath:\n-            data = self.make_links_relative(filepath, data)\n-        folder.writeFile(resource_filepath, data)\n-        return folder[resource_filepath]\n-\n-    def _rewrite_url(self, css_url, asset_url):\n-        """\n-        Pulled from:\n-        http://stackoverflow.com/questions/7469573/how-to-construct-relative-url-given-two-absolute-urls-in-python\n-\n-        """\n-        base = parse.urlparse(css_url)\n-        target = parse.urlparse(asset_url)\n-        if base.netloc != target.netloc:\n-            return asset_url\n-        base_dir = \'.\' + posixpath.dirname(base.path)\n-        target = \'.\' + target.path\n-        return posixpath.relpath(target, start=base_dir)\n-\n-    def make_links_relative(self, filepath, data):\n-        """\n-        make sure we don\'t write out any full urls.\n-        filepath will be something like foo/bar.css\n-        and the full real url will be something like http://site-url/++plone++foo/bar.css\n-\n-        So we\'ll be everything relative the resource path.\n-\n-\n-        """\n-        site_url = self.context.absolute_url()\n-        full_resource_url = f\'{site_url}/++plone++{filepath}\'\n-        for css_url in CSS_URL_REGEX.findall(data):\n-            if css_url.startswith("data:"):\n-                continue\n-            if css_url.find("data:image") > 0:\n-                continue\n-\n-            css_url = css_url.lstrip(\'url(\').rstrip(\')\').\\\n-                strip(\'"\').strip("\'")\n-            if css_url.startswith(site_url):\n-                data = data.replace(css_url, self._rewrite_url(\n-                    full_resource_url, css_url))\n-\n-        return data\n+import operator\n+class ResourceRegistryControlPanelView(BrowserView):\n+    @property\n+    def _bundles(self):\n+        registry = getUtility(IRegistry)\n+        return registry.collectionOfInterface(\n+            IBundleRegistry, prefix="plone.bundles", check=False\n+        )\n \n-    def delete_file(self, filepath):\n-        resource_name, resource_filepath = filepath.split(\'/\', 1)\n+    @property\n+    def bundles_data(self):\n+        result = []\n+        for name, record in self._bundles.items():\n+            result.append({\n+                "name": name,\n+                "jscompilation": record.jscompilation,\n+                "csscompilation": record.csscompilation,\n+                "expression": record.expression,\n+                "enabled": record.enabled,\n+                "depends": record.depends,\n+                "load_async": record.load_async,\n+                "load_defer": record.load_defer,\n+            })\n+        result = list(sorted(result, key=operator.itemgetter(\'name\')))\n+        result.append({\n+            "name": "",\n+            "jscompilation": "",\n+            "csscompilation": "",\n+            "expression": "",\n+            "enabled": False,\n+            "depends": "",\n+            "load_async": False,\n+            "load_defer": False,\n+        })\n+        return result\n \n-        if resource_name not in self.container:\n+    def _add(self):\n+        name = self.request.form.get("name", None)\n+        if name is None or name == "":\n+            IStatusMessage(self.request).addStatusMessage(_("Name can not be empty."), "error")\n             return\n-        folder = self.container[resource_name]\n-        try:\n-            fi = folder[resource_filepath]\n-        except NotFound:\n+        bundles = self._bundles\n+        if name in bundles:\n+            IStatusMessage(self.request).addStatusMessage(_(f"Record {name} already exists."), "error")\n             return\n-        parent = self.get_parent(fi)\n-        del parent[fi.getId()]\n-        if filepath not in self.container:\n+        record = bundles.add(name)\n+        self._set_data_from_form(record)\n+        IStatusMessage(self.request).addStatusMessage(_(f"Record {name} created."), "info")\n+\n+    def _update(self):\n+        new_name = self.request.form.get("name", None)\n+        if new_name is None or new_name == "":\n+            IStatusMessage(self.request).addStatusMessage(_("Name can not be empty."), "error")\n             return\n-        folder = self.container[resource_name]\n-        try:\n-            fi = folder[resource_filepath]\n-        except NotFound:\n-            return\n-        parent = self.get_parent(fi)\n-        del parent[fi.getId()]\n-\n-    def get_parent(self, item):\n-        path = \'/\'.join(item.getPhysicalPath()[:-1])\n-        return self.context.restrictedTraverse(path)\n-\n-    def list_dir(self, container):\n-        if hasattr(container, \'listDirectory\'):\n-            return container.listDirectory()\n-        else:\n-            return container.objectIds()\n-\n-\n-class ResourceRegistryControlPanelView(RequireJsView):\n-\n-    def __call__(self):\n-        add_bundle_on_request(self.request, \'resourceregistry\')\n-        req = self.request\n-        if req.REQUEST_METHOD == \'POST\':\n-            action = req.get(\'action\', \'\')\n-            method = action.replace(\'-\', \'_\')\n-            if hasattr(self, method):\n-                return getattr(self, method)()\n-            else:\n-                return json.dumps({\n-                    \'success\': False,\n-                    \'msg\': \'Invalid action: \' + action\n-                })\n+        original_name = self.request.form.get("original_name", None)\n+        bundles = self._bundles\n+        if new_name != original_name:\n+            if original_name not in bundles:\n+                IStatusMessage(self.request).addStatusMessage(_("Expected record missing."), "error")\n+                return\n+            if new_name in bundles:\n+                IStatusMessage(self.request).addStatusMessage(_(f"Record name {new_name} already taken."), "error")\n+                return\n+            record = bundles[original_name]\n+            del bundles[original_name]\n+            bundles[new_name] = record\n         else:\n-            if RESOURCE_DEVELOPMENT_MODE:\n-                messages = IStatusMessage(self.request)\n-                messages.add("The FEDEV environment variable is set. No matter "\n-                             "what settings are done here, all bundles will "\n-                             "always be in development mode.", type="warn")\n-            return self.index()\n-\n-    @property\n-    @memoize\n-    def registry(self):\n-        return getUtility(IRegistry)\n-\n-    def update_registry_collection(self, itype, prefix, newdata):\n-        rdata = self.registry.collectionOfInterface(\n-            itype, prefix=prefix, check=False)\n-        for key, data in newdata.items():\n-            if key not in rdata:\n-                record = rdata.add(key)\n-            else:\n-                record = rdata[key]\n-            updateRecordFromDict(record, data)\n-        # remove missing ones\n-        for key in set(rdata.keys()) - set(newdata.keys()):\n-            del rdata[key]\n-\n-    def save_registry(self):\n-        req = self.request\n-\n-        if req.get(\'resources\') and req.get(\'bundles\'):\n-            self.update_registry_collection(\n-                IResourceRegistry, "plone.resources",\n-                json.loads(req.get(\'resources\')))\n-            self.update_registry_collection(\n-                IBundleRegistry, "plone.bundles",\n-                json.loads(req.get(\'bundles\')))\n-\n-        if self.request.form.get(\'development\', \'\').lower() == \'true\':\n-            self.registry[\'plone.resources.development\'] = True\n-        else:\n-            self.registry[\'plone.resources.development\'] = False\n-\n-        # it\'d be difficult to know if the legacy bundle settings\n-        # changed or not so we need to just set the last import date\n-        # back so it gets re-built\n-        self.registry.records[\n-            \'plone.resources.last_legacy_import\'].value = datetime.now()\n-        cookWhenChangingSettings(self.context)\n-\n-        return json.dumps({\n-            \'success\': True\n-        })\n-\n-    def save_file(self):\n-        req = self.request\n-        resource_path = req.form.get(\'filepath\').split(\'++plone++\')[-1]\n-        overrides = OverrideFolderManager(self.context)\n-        overrides.save_file(resource_path, req.form[\'data\'])\n-        return json.dumps({\n-            \'success\': True\n-        })\n-\n-    def delete_file(self):\n-        req = self.request\n-        resource_path = req.form.get(\'filepath\').split(\'++plone++\')[-1]\n-        overrides = OverrideFolderManager(self.context)\n-        overrides.delete_file(resource_path)\n-\n-        if req.form.get(\'response\') == \'html\':\n-            return req.response.redirect(req.URL)\n-        return json.dumps({\n-            \'success\': True\n-        })\n-\n-    def get_bundles(self):\n-        return self.registry.collectionOfInterface(\n-            IBundleRegistry, prefix="plone.bundles", check=False)\n-\n-    def get_resources(self):\n-        return self.registry.collectionOfInterface(\n-            IResourceRegistry, prefix="plone.resources", check=False)\n-\n-    def less_build_config(self):\n-        site_url = self.context.portal_url()\n-        bundles = self.get_bundles()\n-        bundle = self.request.get(\'bundle\', None)\n-        resources = self.get_resources()\n-        less_files = []\n-        if bundle and bundle in bundles:\n-            bundle_obj = bundles[bundle]\n-            for resource in bundle_obj.resources:\n-                if resource in resources:\n-                    for css in resources[resource].css:\n-                        url = parse.urlparse(css)\n-                        if url.netloc == \'\':\n-                            # Local\n-                            src = f"{site_url}/{css}"\n-                        else:\n-                            src = "%s" % (css)\n-\n-                        extension = url.path.split(\'.\')[-1]\n-                        if extension == \'less\':\n-                            less_files.append(src)\n-        return json.dumps({\n-            \'less\': less_files,\n-        })\n-\n-    def js_build_config(self):\n-        (paths, shims) = self.get_requirejs_config()\n-        bundles = self.get_bundles()\n-        resources = self.get_resources()\n-\n-        bundle = self.request.get(\'bundle\', None)\n-        includes = []\n-        if bundle and bundle in bundles:\n-            bundle_obj = bundles[bundle]\n-            for resource_name in bundle_obj.resources:\n-                # need to check if this resource has a js file\n-                # it could just be a css resource\n-                try:\n-                    resource = resources[resource_name]\n-                    if resource.js:\n-                        includes.append(resource_name)\n-                except KeyError:\n-                    # skip if missing\n-                    pass\n-            if bundle_obj.stub_js_modules:\n-                for module in bundle_obj.stub_js_modules:\n-                    paths[module] = \'empty:\'\n-        return json.dumps({\n-            \'include\': includes,\n-            \'shim\': shims,\n-            \'paths\': paths,\n-            \'wrapShim\': True,\n-            \'optimize\': \'none\'\n-        })\n-\n-    def save_js_build(self):\n-        """\n-        \'\xc3\x82\'\n-        """\n-        overrides = OverrideFolderManager(self.context)\n-        req = self.request\n-        filepath = \'static/%s-compiled.js\' % req.form[\'bundle\']\n-\n-        data = req.form[\'data\']\n-        overrides.save_file(filepath, data)\n-        bundle = self.get_bundles().get(req.form[\'bundle\'])\n-        if bundle:\n-            bundle.last_compilation = datetime.now()\n-            bundle.jscompilation = f\'++plone++{filepath}\'\n-        return json.dumps({\n-            \'success\': True,\n-            \'filepath\': \'++plone++\' + filepath\n-        })\n-\n-    def save_less_build(self):\n-        overrides = OverrideFolderManager(self.context)\n-        req = self.request\n-        filepath = \'static/%s-compiled.css\' % req.form[\'bundle\']\n-        data = \'\'\n-        for key, value in req.form.items():\n-            if not key.startswith(\'data-\'):\n-                continue\n-            if isinstance(value, str):\n-                value = [value]\n-            data += \'\\n\'.join(value) + \'\\n\'\n-        overrides.save_file(filepath, data)\n-        bundle = self.get_bundles().get(req.form[\'bundle\'])\n-        if bundle:\n-            bundle.last_compilation = datetime.now()\n-            bundle.csscompilation = f\'++plone++{filepath}\'\n-        return json.dumps({\n-            \'success\': True,\n-            \'filepath\': \'++plone++\' + filepath\n-        })\n-\n-    def save_less_variables(self):\n-        data = {}\n-        for key, val in json.loads(self.request.form.get(\'data\')).items():\n-            data[key] = val\n-        self.registry[\'plone.lessvariables\'] = data\n-        return json.dumps({\n-            \'success\': True\n-        })\n-\n-    def save_pattern_options(self):\n-        data = {}\n-        for key, val in json.loads(self.request.form.get(\'data\')).items():\n-            data[key] = val\n-        self.registry[\'plone.patternoptions\'] = data\n-        return json.dumps({\n-            \'success\': True\n-        })\n-\n-    def get_overrides(self):\n-        overrides = OverrideFolderManager(self.context)\n-\n-        def _read_folder(folder):\n-            files = []\n-            for filename in folder.listDirectory():\n-                try:\n-                    item = folder[filename]\n-                except NotFound:\n-                    continue\n-                if folder.isDirectory(filename):\n-                    files.extend(_read_folder(item))\n-                else:\n-                    files.append(item)\n-            return files\n-        files = _read_folder(overrides.container)\n-        results = []\n-        site_path = self.context.getPhysicalPath()\n-        for fi in files:\n-            path = fi.getPhysicalPath()\n-            rel_path = path[len(site_path) + 2:]\n-            results.append(\'++plone++{}/{}\'.format(\n-                rel_path[0], \'/\'.join(rel_path[1:])))\n-        return results\n-\n-    def config(self):\n-        base_url = self.context.absolute_url()\n-        resources = self.get_resources()\n-\n+            record = bundles[original_name]\n+        self._set_data_from_form(record)\n+        IStatusMessage(self.request).addStatusMessage(_("Changes saved."), "info")\n \n+    def _set_data_from_form(self, record):\n+        names = record.__schema__.names()\n         data = {\n-            \'development\': self.registry[\'plone.resources.development\'],\n-            \'lessvariables\': self.registry[\'plone.lessvariables\'],\n-            \'resources\': {},\n-            \'bundles\': {},\n-            \'javascripts\': {},\n-            \'css\': {},\n-            \'baseUrl\': base_url,\n-            \'manageUrl\': \'%s/@@resourceregistry-controlpanel\' % base_url,\n-            \'lessConfigUrl\': \'%s/less-variables.js\' % base_url,\n-            \'patternoptions\': self.registry[\'plone.patternoptions\']\n+            k: v\n+            for k, v in self.request.form.items()\n+            if k in names\n         }\n-        bundles = self.get_bundles()\n-        for key, resource in resources.items():\n-            data[\'resources\'][key] = recordsToDict(resource)\n-        for key, bundle in bundles.items():\n-            data[\'bundles\'][key] = recordsToDict(bundle)\n-        data[\'overrides\'] = self.get_overrides()\n-        return json.dumps(data, cls=JSONEncoder)\n+        bool_names = ["enabled", "load_async", "load_defer"]\n+        for bool_name in bool_names:\n+            data[bool_name] = bool_name in data\n+        for field_name, value in data.items():\n+            full_name = record.__prefix__ + field_name\n+            record.__registry__[full_name] = value\n+\n+    def _delete(self):\n+        name = self.request.form.get("original_name", None)\n+        bundles = self._bundles\n+        if name not in bundles:\n+            IStatusMessage(self.request).addStatusMessage(_(f"Expected record {name} missing."), "error")\n+            return\n+        del bundles[name]\n+        IStatusMessage(self.request).addStatusMessage(_("Record deleted."), "info")\n+\n+    def process_form(self):\n+        if self.request["method"] != "POST":\n+            return\n+        action = self.request.form[\'action\']\n+        if action == "add":\n+            self._add()\n+        elif action == "update":\n+            self._update()\n+        elif action == "delete":\n+            self._delete()\n+        else:\n+            raise ValueError("Invalid form data")\n+        self.request.response.redirect(self.request[\'ACTUAL_URL\'])\ndiff --git a/Products/CMFPlone/exportimport/configure.zcml b/Products/CMFPlone/exportimport/configure.zcml\nindex 3607947997..b3a1ada1ba 100644\n--- a/Products/CMFPlone/exportimport/configure.zcml\n+++ b/Products/CMFPlone/exportimport/configure.zcml\n@@ -76,14 +76,6 @@\n       description="Import CMFDiffTool settings">\n   </genericsetup:importStep>\n \n-  <genericsetup:importStep\n-      name="combine-bundles"\n-      title="Bundle combination"\n-      description="Combine JS/CSS bundles together"\n-      handler="Products.CMFPlone.resources.exportimport.bundles.combine">\n-    <depends name="plone.app.registry" />\n-  </genericsetup:importStep>\n-\n   <genericsetup:exportStep\n       name="content"\n       title="Content"\ndiff --git a/Products/CMFPlone/interfaces/resources.py b/Products/CMFPlone/interfaces/resources.py\nindex 0f6cb02e76..6b2a9bfc40 100644\n--- a/Products/CMFPlone/interfaces/resources.py\n+++ b/Products/CMFPlone/interfaces/resources.py\n@@ -1,16 +1,19 @@\n-import zope.interface\n-import zope.component\n+from Products.CMFPlone import PloneMessageFactory as _\n from zope import schema\n from zope.schema.vocabulary import SimpleTerm\n from zope.schema.vocabulary import SimpleVocabulary\n \n-from Products.CMFPlone import PloneMessageFactory as _\n+import zope.component\n+import zope.interface\n \n-OVERRIDE_RESOURCE_DIRECTORY_NAME = \'resource_overrides\'\n+\n+OVERRIDE_RESOURCE_DIRECTORY_NAME = "resource_overrides"\n \n \n class IResourceRegistry(zope.interface.Interface):\n \n+    # DEPRECATED\n+\n     url = schema.ASCIILine(\n         title=_("Resources base URL"),\n         required=False)\n@@ -47,90 +50,109 @@ class IResourceRegistry(zope.interface.Interface):\n class IBundleRegistry(zope.interface.Interface):\n \n     jscompilation = schema.ASCIILine(\n-        title=_("URL of the last js compilation"),\n-        required=False)\n+        title=_("URL of the last js compilation"), required=False\n+    )\n \n     csscompilation = schema.ASCIILine(\n-        title=_("URL of the last css compilation"),\n-        required=False)\n-\n-    last_compilation = schema.Datetime(\n-        title=_("Last compiled date"),\n-        description=_("Date time of the last compilation of this bundle"),\n-        required=False)\n+        title=_("URL of the last css compilation"), required=False\n+    )\n \n     expression = schema.ASCIILine(\n         title=_("Expression to render"),\n         description=_(\n             "In case its a bundle we can have a condition to render it (it "\n-            "does not apply if the bundle is merged)."),\n-        required=False)\n+            "does not apply if the bundle is merged)."\n+        ),\n+        required=False,\n+    )\n \n-    resources = schema.List(\n-        title=_("Loaded resources"),\n+    enabled = schema.Bool(title=_("It\'s enabled?"), default=True, required=False)\n+\n+    depends = schema.ASCIILine(\n+        title=_("Depends on another bundle"),\n         description=_(\n-            "The resources that are going to be loaded on this bundle in order"),\n-        value_type=schema.ASCIILine(title=_("Resource name")),\n-        required=False)\n+            "In case you want to be the last: *, in case its the first should be empty"\n+        ),\n+        required=False,\n+    )\n \n-    enabled = schema.Bool(\n-        title=_("It\'s enabled?"),\n-        default=True,\n-        required=False)\n+    load_async = schema.Bool(\n+        title=_("Load asynchronously"),\n+        description=_(\n+            "Load the JavaScript files asynchronously by adding an ``async`` attribute to the script tag."\n+        ),\n+        default=False,\n+        required=False,\n+    )\n+\n+    load_defer = schema.Bool(\n+        title=_("Load deferred"),\n+        description=_(\n+            "Load the JavaScript files deferred after the document has been parsed but before ``DOMContentLoaded`` by adding a ``defer`` attribute to the script tag."\n+        ),\n+        default=False,\n+        required=False,\n+    )\n \n+    # DEPRECATED IN Plone 6, for now keep for BBB\n     compile = schema.Bool(\n-        title=_("Does your bundle contains any RequireJS or LESS file?"),\n+        title=_("(DEPRECATED) Does your bundle contains any RequireJS or LESS file?"),\n         description=_(\n-            "If its true and you modify this bundle you need to build it before production"),\n+            "If its true and you modify this bundle you need to build it before production"\n+        ),\n         default=True,\n-        required=False)\n+        required=False,\n+    )\n \n-    depends = schema.ASCIILine(\n-        title=_("Depends on another bundle"),\n+    resources = schema.List(\n+        title=_("(DEPRECATED) Loaded resources"),\n         description=_(\n-            "In case you want to be the last: *, in case its the first should be empty"),\n-        required=False)\n+            "The resources that are going to be loaded on this bundle in order"\n+        ),\n+        value_type=schema.ASCIILine(title=_("Resource name")),\n+        required=False,\n+    )\n+\n+    last_compilation = schema.Datetime(\n+        title=_("(DEPRECATED) Last compiled date"),\n+        description=_("Date time of the last compilation of this bundle"),\n+        required=False,\n+    )\n \n     develop_javascript = schema.Bool(\n-        title=_(\'Develop JavaScript\'),\n-        default=False)\n+        title=_("(DEPRECATED) Develop JavaScript"), default=False\n+    )\n \n-    develop_css = schema.Bool(\n-        title=_(\'Develop CSS\'),\n-        default=False)\n+    develop_css = schema.Bool(title=_("(DEPRECATED) Develop CSS"), default=False)\n \n     stub_js_modules = schema.List(\n-        title=_(\'Stub JavaScript modules\'),\n-        description=_(\'Define list of modules that will be defined empty \'\n-                      \'on RequireJS build steps to prevent loading modules multiple times.\'),\n+        title=_("(DEPRECATED) Stub JavaScript modules"),\n+        description=_(\n+            "Define list of modules that will be defined empty "\n+            "on RequireJS build steps to prevent loading modules multiple times."\n+        ),\n         value_type=schema.ASCIILine(title=_("Resource name")),\n         required=False,\n         missing_value=[],\n-        default=[])\n+        default=[],\n+    )\n \n     merge_with = schema.Choice(\n-        title=_("Merge with"),\n+        title=_("(DEPRECATED) Merge with"),\n         description=_(\n             "In production mode, bundles are merged together to reduce the "\n             "quantity of JS and CSS resources loaded by the browser. Choose "\n             "\'default\' if this bundle must be available for all the visitors, "\n             "choose \'logged-in\' if it must be available for logged-in users "\n-            "only, or leave it empty if it must not be merged."),\n+            "only, or leave it empty if it must not be merged."\n+        ),\n         vocabulary=SimpleVocabulary(\n-            [SimpleTerm(\'\', \'\', _("")),\n-             SimpleTerm(\'default\', \'default\', \'default\'),\n-             SimpleTerm(\'logged-in\', \'logged-in\', \'logged-in\')]),\n+            [\n+                SimpleTerm("", "", _("")),\n+                SimpleTerm("default", "default", "default"),\n+                SimpleTerm("logged-in", "logged-in", "logged-in"),\n+            ]\n+        ),\n         default="",\n-        required=False)\n-\n-    load_async = schema.Bool(\n-        title=_("Load asynchronously"),\n-        description=_("Load the JavaScript files asynchronously by adding an ``async`` attribute to the script tag."),\n-        default=False,\n-        required=False)\n-\n-    load_defer = schema.Bool(\n-        title=_("Load deferred"),\n-        description=_("Load the JavaScript files deferred after the document has been parsed but before ``DOMContentLoaded`` by adding a ``defer`` attribute to the script tag."),\n-        default=False,\n-        required=False)\n+        required=False,\n+    )\ndiff --git a/Products/CMFPlone/resources/__init__.py b/Products/CMFPlone/resources/__init__.py\nindex f64da4a538..8816d98ea7 100644\n--- a/Products/CMFPlone/resources/__init__.py\n+++ b/Products/CMFPlone/resources/__init__.py\n@@ -1,16 +1,17 @@\n+from zope.deprecation import deprecate\n+\n import os\n \n \n RESOURCE_DEVELOPMENT_MODE = os.getenv("FEDEV", "").lower() == "true"\n \n \n+@deprecate(\n+    "Adding single resources is no longer supported in Plone 6, use \'add_bundle_on_request\' instead"\n+)\n def add_resource_on_request(request, resource):\n-    """Adds the resource to the request"""\n-    if not isinstance(resource, str):\n-        raise ValueError("add_resource_on_request expects a string value for resource")\n-    request.enabled_resources = getattr(request, "enabled_resources", [])\n-    if resource not in request.enabled_resources:\n-        request.enabled_resources.append(resource)\n+    """(DEPRECATED) Adds the resource to the request"""\n+    return\n \n \n def add_bundle_on_request(request, bundle):\ndiff --git a/Products/CMFPlone/resources/browser/combine.py b/Products/CMFPlone/resources/browser/combine.py\nindex 597f24fdac..58585b14f7 100644\n--- a/Products/CMFPlone/resources/browser/combine.py\n+++ b/Products/CMFPlone/resources/browser/combine.py\n@@ -1,156 +1,10 @@\n-from Acquisition import aq_base\n-from datetime import datetime\n-from io import BytesIO\n-from plone.registry.interfaces import IRegistry\n-from plone.resource.file import FilesystemFile\n-from plone.resource.interfaces import IResourceDirectory\n-from Products.CMFPlone.interfaces import IBundleRegistry\n-from Products.CMFPlone.interfaces.resources import (\n-    OVERRIDE_RESOURCE_DIRECTORY_NAME,\n-)  # noqa\n-from zExceptions import NotFound\n-from zope.component import getUtility\n-from zope.component import queryUtility\n+import zope.deferredimport\n \n-import logging\n-import re\n \n+zope.deferredimport.initialize()\n \n-PRODUCTION_RESOURCE_DIRECTORY = "production"\n-logger = logging.getLogger(__name__)\n-\n-\n-def get_production_resource_directory():\n-    persistent_directory = queryUtility(IResourceDirectory, name="persistent")\n-    if persistent_directory is None:\n-        return ""\n-    container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n-    try:\n-        production_folder = container[PRODUCTION_RESOURCE_DIRECTORY]\n-    except NotFound:\n-        return "%s/++unique++1" % PRODUCTION_RESOURCE_DIRECTORY\n-    if "timestamp.txt" not in production_folder:\n-        return "%s/++unique++1" % PRODUCTION_RESOURCE_DIRECTORY\n-    timestamp = production_folder.readFile("timestamp.txt")\n-    if isinstance(timestamp, bytes):\n-        timestamp = timestamp.decode()\n-    return "{}/++unique++{}".format(PRODUCTION_RESOURCE_DIRECTORY, timestamp)\n-\n-\n-def get_resource(context, path):\n-    if path.startswith("++plone++"):\n-        # ++plone++ resources can be customized, we return their override\n-        # value if any\n-        overrides = get_override_directory(context)\n-        filepath = path[9:]\n-        if overrides.isFile(filepath):\n-            return overrides.readFile(filepath)\n-\n-    try:\n-        resource = context.unrestrictedTraverse(path)\n-    except (NotFound, AttributeError):\n-        logger.warning(\n-            f"Could not find resource {path}. You may have to create it first."\n-        )  # noqa\n-        return\n-\n-    if isinstance(resource, FilesystemFile):\n-        (directory, sep, filename) = path.rpartition("/")\n-        return context.unrestrictedTraverse(directory).readFile(filename)\n-\n-    # calling the resource may modify the header, i.e. the content-type.\n-    # we do not want this, so keep the original header intact.\n-    response_before = context.REQUEST.response\n-    context.REQUEST.response = response_before.__class__()\n-    if hasattr(aq_base(resource), "GET"):\n-        # for FileResource\n-        result = resource.GET()\n-    else:\n-        # any BrowserView\n-        result = resource()\n-    context.REQUEST.response = response_before\n-    return result\n-\n-\n-def write_js(context, folder, meta_bundle):\n-    registry = getUtility(IRegistry)\n-    resources = []\n-\n-    # bundles\n-    bundles = registry.collectionOfInterface(\n-        IBundleRegistry, prefix="plone.bundles", check=False\n-    )\n-    for bundle in bundles.values():\n-        if bundle.merge_with == meta_bundle and bundle.jscompilation:\n-            resource = get_resource(context, bundle.jscompilation)\n-            if not resource:\n-                continue\n-            resources.append(resource)\n-\n-    fi = BytesIO()\n-    for script in resources:\n-        if not isinstance(script, bytes):\n-            script = script.encode()\n-        fi.write(script + b"\\n")\n-    folder.writeFile(meta_bundle + ".js", fi)\n-    logger.info(\'Wrote combined JS bundle "%s".\' % meta_bundle)\n-\n-\n-def write_css(context, folder, meta_bundle):\n-    registry = getUtility(IRegistry)\n-    resources = []\n-\n-    bundles = registry.collectionOfInterface(\n-        IBundleRegistry, prefix="plone.bundles", check=False\n-    )\n-    for bundle in bundles.values():\n-        if bundle.merge_with == meta_bundle and bundle.csscompilation:\n-            css = get_resource(context, bundle.csscompilation)\n-            if not css:\n-                continue\n-            (path, sep, filename) = bundle.csscompilation.rpartition("/")\n-            # Process relative urls:\n-            # we prefix with current resource path any url not starting with\n-            # \'/\' or http: or data:\n-            if not isinstance(path, bytes):\n-                path = path.encode()\n-            css = re.sub(\n-                br"""(url\\([\'"]?(?![\'"]?([a-z]+:|\\/)))""", br"\\1%s/" % path, css\n-            )\n-            resources.append(css)\n-\n-    fi = BytesIO()\n-    for script in resources:\n-        if not isinstance(script, bytes):\n-            script = script.encode()\n-        fi.write(script + b"\\n")\n-    folder.writeFile(meta_bundle + ".css", fi)\n-    logger.info(\'Wrote combined CSS bundle "%s".\' % meta_bundle)\n-\n-\n-def get_override_directory(context):\n-    persistent_directory = queryUtility(IResourceDirectory, name="persistent")\n-    if persistent_directory is None:\n-        return\n-    if OVERRIDE_RESOURCE_DIRECTORY_NAME not in persistent_directory:\n-        persistent_directory.makeDirectory(OVERRIDE_RESOURCE_DIRECTORY_NAME)\n-    return persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n-\n-\n-def combine_bundles(context):\n-    container = get_override_directory(context)\n-    if PRODUCTION_RESOURCE_DIRECTORY not in container:\n-        container.makeDirectory(PRODUCTION_RESOURCE_DIRECTORY)\n-    production_folder = container[PRODUCTION_RESOURCE_DIRECTORY]\n-\n-    # store timestamp\n-    fi = BytesIO()\n-    fi.write(datetime.now().isoformat().encode())\n-    production_folder.writeFile("timestamp.txt", fi)\n-\n-    # generate new combined bundles\n-    write_js(context, production_folder, "default")\n-    write_js(context, production_folder, "logged-in")\n-    write_css(context, production_folder, "default")\n-    write_css(context, production_folder, "logged-in")\n-    logger.info("Finished bundle compilation.")\n+zope.deferredimport.deprecated(\n+    "Import from Products.CMFPlone.resources.utils instead",\n+    PRODUCTION_RESOURCE_DIRECTORY="Products.CMFPlone:resources.utils.PRODUCTION_RESOURCE_DIRECTORY",\n+    get_override_directory="Products.CMFPlone:resources.utils.get_override_directory",\n+)\ndiff --git a/Products/CMFPlone/resources/browser/configjs.py b/Products/CMFPlone/resources/browser/configjs.py\ndeleted file mode 100644\nindex 0d8e362aaf..0000000000\n--- a/Products/CMFPlone/resources/browser/configjs.py\n+++ /dev/null\n@@ -1,95 +0,0 @@\n-from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import IResourceRegistry\n-from Products.Five.browser import BrowserView\n-from zope.component import getUtility\n-\n-import json\n-import re\n-\n-\n-configjs = """requirejs.config({\n-    baseUrl: PORTAL_URL,\n-    paths: %s,\n-    shim: %s,\n-    optimize: \'uglify\',\n-    wrapShim: true\n-});"""\n-\n-\n-def _format_shims(shims):\n-    result = []\n-    for name, val in shims.items():\n-        options = []\n-        if val.get("exports"):\n-            options.append(\'exports: "%s"\' % val["exports"])\n-        if val.get("deps"):\n-            options.append("deps: " + json.dumps(val["deps"]))\n-        if val.get("init"):\n-            # function, no escaping here\n-            options.append("init: %s" % val["init"])\n-        result.append(\n-            """\n-        "{}": {{\n-            {}\n-        }}""".format(\n-                name, ",\\n            ".join(options)\n-            )\n-        )\n-    return "{" + ",".join(result) + "\\n    }"\n-\n-\n-class RequireJsView(BrowserView):\n-    """\n-    This view creates the config.js for requirejs with all the registered\n-    resources\n-\n-    It\'s used on development for the config.js and on compilation for the\n-    optimize.js\n-    """\n-\n-    @property\n-    def registry(self):\n-        return getUtility(IRegistry)\n-\n-    def registryResources(self):\n-        return self.registry.collectionOfInterface(\n-            IResourceRegistry, prefix="plone.resources", check=False\n-        )\n-\n-    def get_requirejs_config(self):\n-        """\n-        Returns the information for requirejs configuration\n-        """\n-        registry = self.registryResources()\n-        paths = {}\n-        shims = {}\n-        for name, script in registry.items():\n-            if script.js:\n-                # Main resource js file\n-                src = re.sub(r"\\.js$", "", script.js)\n-                paths[name] = src\n-                exports = script.export\n-                deps = script.deps\n-                inits = script.init\n-                if exports or deps or inits:\n-                    shims[name] = {}\n-                    if exports not in ("", None):\n-                        shims[name]["exports"] = exports\n-                    if deps not in ("", None):\n-                        shims[name]["deps"] = deps.split(",")\n-                    if inits not in ("", None):\n-                        shims[name]["init"] = inits\n-            if script.url:\n-                # Resources available under name-url name\n-                src = script.url\n-                paths[name + "-url"] = src\n-        return (paths, shims)\n-\n-\n-class ConfigJsView(RequireJsView):\n-    """ config.js for requirejs for script rendering. """\n-\n-    def __call__(self):\n-        (paths, shims) = self.get_requirejs_config()\n-        self.request.response.setHeader("Content-Type", "application/javascript")\n-        return configjs % (json.dumps(paths, indent=4), _format_shims(shims))\ndiff --git a/Products/CMFPlone/resources/browser/configure.zcml b/Products/CMFPlone/resources/browser/configure.zcml\nindex 18875cfdb1..32ca958596 100644\n--- a/Products/CMFPlone/resources/browser/configure.zcml\n+++ b/Products/CMFPlone/resources/browser/configure.zcml\n@@ -6,47 +6,22 @@\n   <browser:viewlet\n       name="plone.resourceregistries.scripts"\n       manager="plone.app.layout.viewlets.interfaces.IScripts"\n-      class="Products.CMFPlone.resources.browser.scripts.ScriptsView"\n-      template="scripts.pt"\n+      class="Products.CMFPlone.resources.browser.resource.ScriptsView"\n       permission="zope2.View"\n       />\n \n   <browser:viewlet\n       name="plone.resourceregistries.styles"\n       manager="plone.app.layout.viewlets.interfaces.IHtmlHeadLinks"\n-      class="Products.CMFPlone.resources.browser.styles.StylesView"\n-      template="styles.pt"\n+      class="Products.CMFPlone.resources.browser.resource.StylesView"\n       permission="zope2.View"\n       />\n \n-\n-  <browser:page\n-      for="*"\n-      name="config.js"\n-      class=".configjs.ConfigJsView"\n-      permission="zope.Public"\n-      />\n-\n-  <browser:page\n-      for="*"\n-      name="less-variables.js"\n-      class=".mixins.LessConfiguration"\n-      permission="zope.Public"\n-      />\n-\n-  <browser:page\n-      for="*"\n-      name="less-modify.js"\n-      class=".mixins.LessModifyConfiguration"\n-      permission="zope.Public"\n-      />\n-\n-\n-  <browser:page\n-      for="*"\n-      name="plone_less_dependency.less"\n-      class=".mixins.LessDependency"\n-      permission="zope.Public"\n+  <adapter\n+      name="webresource"\n+      for="* zope.publisher.interfaces.IRequest"\n+      provides="zope.traversing.interfaces.ITraversable"\n+      factory="plone.resource.traversal.UniqueResourceTraverser"\n       />\n \n </configure>\ndiff --git a/Products/CMFPlone/resources/browser/cook.py b/Products/CMFPlone/resources/browser/cook.py\ndeleted file mode 100644\nindex 75c7ea236c..0000000000\n--- a/Products/CMFPlone/resources/browser/cook.py\n+++ /dev/null\n@@ -1,147 +0,0 @@\n-from calmjs.parse import es5\n-from datetime import datetime\n-from io import BytesIO\n-from plone.protect.interfaces import IDisableCSRFProtection\n-from plone.registry.interfaces import IRegistry\n-from plone.resource.interfaces import IResourceDirectory\n-from plone.subrequest import subrequest\n-from Products.CMFPlone.interfaces.resources import IBundleRegistry\n-from Products.CMFPlone.interfaces.resources import IResourceRegistry\n-from Products.CMFPlone.interfaces.resources import (\n-    OVERRIDE_RESOURCE_DIRECTORY_NAME,\n-)  # noqa\n-from Products.CMFPlone.resources.browser.combine import combine_bundles\n-from scss import Compiler\n-from zExceptions import NotFound\n-from zope.component import getUtility\n-from zope.component.hooks import getSite\n-from zope.globalrequest import getRequest\n-from zope.interface import alsoProvides\n-\n-import logging\n-\n-\n-logger = logging.getLogger("Products.CMFPlone")\n-\n-\n-def cookWhenChangingSettings(context, bundle=None):\n-    """When our settings are changed, re-cook the not compilable bundles"""\n-    registry = getUtility(IRegistry)\n-    resources = registry.collectionOfInterface(\n-        IResourceRegistry, prefix="plone.resources", check=False\n-    )\n-    if bundle is None:\n-        # default to cooking legacy bundle\n-        bundles = registry.collectionOfInterface(\n-            IBundleRegistry, prefix="plone.bundles", check=False\n-        )\n-        if "plone-legacy" in bundles:\n-            bundle = bundles["plone-legacy"]\n-        else:\n-            bundle = bundles.setdefault("plone-legacy")\n-            bundle.resources = []\n-\n-    if not bundle.resources:\n-        # you can have a bundle without any resources defined and it\'s just\n-        # shipped as a legacy compiled js file\n-        return\n-\n-    js_path = bundle.jscompilation\n-    css_path = bundle.csscompilation\n-\n-    if not js_path and not css_path:\n-        logger.warning(\n-            "No js_path or css_path found. We need a plone.resource "\n-            "based resource path in order to store the compiled JS and CSS."\n-        )\n-        return\n-\n-    # Let\'s join all css and js\n-    css_compiler = Compiler(output_style="compressed")\n-    cooked_css = ""\n-    cooked_js = ""\n-    siteUrl = getSite().absolute_url()\n-    request = getRequest()\n-    for package in bundle.resources or []:\n-        if package not in resources:\n-            continue\n-        resource = resources[package]\n-\n-        if css_path:\n-            for css_resource in resource.css:\n-                css_url = siteUrl + "/" + css_resource\n-                response = subrequest(css_url)\n-                if response.status == 200:\n-                    logger.info("Cooking css %s", css_resource)\n-                    css = response.getBody()\n-                    if css_resource[-8:] != ".min.css":\n-                        css = css_compiler.compile_string(css)\n-                    if not isinstance(css, str):\n-                        css = css.decode("utf8")\n-                    cooked_css += "\\n/* Resource: {} */\\n{}\\n".format(css_resource, css)\n-                else:\n-                    cooked_css += "\\n/* Could not find resource: {} */\\n\\n".format(\n-                        css_resource\n-                    )\n-                    logger.warning("Could not find resource: %s", css_resource)\n-        if not resource.js or not js_path:\n-            continue\n-        js_url = siteUrl + "/" + resource.js\n-        response = subrequest(js_url)\n-        if response.status == 200:\n-            logger.info("Cooking js %s", resource.js)\n-            js = response.getBody()\n-            if not isinstance(js, str):\n-                js = js.decode("utf8")\n-            try:\n-                cooked_js += "\\n/* resource: {} */\\n{}".format(\n-                    resource.js,\n-                    js if resource.js.endswith(".min.js") else es5.minify_print(js),\n-                )\n-            except SyntaxError:\n-                cooked_js += "\\n/* Resource (error cooking): {} */\\n{}".format(\n-                    resource.js, js\n-                )\n-                logger.warning("Error cooking resource: %s", resource.js)\n-        else:\n-            logger.warning("Could not find resource: %s", resource.js)\n-            cooked_js += "\\n/* Could not find resource: {} */\\n\\n".format(js_url)\n-\n-    persistent_directory = getUtility(IResourceDirectory, name="persistent")\n-    if OVERRIDE_RESOURCE_DIRECTORY_NAME not in persistent_directory:\n-        persistent_directory.makeDirectory(OVERRIDE_RESOURCE_DIRECTORY_NAME)\n-    container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n-\n-    def _write_resource(resource_path, cooked_string):\n-        if not resource_path:\n-            return\n-        if "++plone++" in resource_path:\n-            resource_path = resource_path.split("++plone++")[-1]\n-        if "/" in resource_path:\n-            resource_name, resource_filepath = resource_path.split("/", 1)\n-        else:\n-            resource_name = "legacy"\n-            resource_filepath = resource_path\n-        if resource_name not in container:\n-            container.makeDirectory(resource_name)\n-        if not isinstance(\n-            cooked_string, bytes\n-        ):  # handle Error of OFS.Image  # noqa: E501\n-            cooked_string = cooked_string.encode("ascii", errors="ignore")\n-        try:\n-            folder = container[resource_name]\n-            fi = BytesIO(cooked_string)\n-            folder.writeFile(resource_filepath, fi)\n-            logger.info("Writing cooked resource: %s", resource_path)\n-        except NotFound:\n-            logger.warning("Error writing cooked resource: %s", resource_path)\n-\n-    _write_resource(js_path, cooked_js)\n-    _write_resource(css_path, cooked_css)\n-\n-    bundle.last_compilation = datetime.now()\n-    # refresh production meta bundles\n-    combine_bundles(context)\n-\n-    # Disable CSRF protection on this request\n-    alsoProvides(request, IDisableCSRFProtection)\ndiff --git a/Products/CMFPlone/resources/browser/interfaces.py b/Products/CMFPlone/resources/browser/interfaces.py\ndeleted file mode 100644\nindex 8ebe8cc452..0000000000\n--- a/Products/CMFPlone/resources/browser/interfaces.py\n+++ /dev/null\n@@ -1,11 +0,0 @@\n-from zope.interface import Interface\n-\n-\n-class IScriptsView(Interface):\n-    def scripts():\n-        """ Returns a list of dicts with information for scripts rendering. """\n-\n-\n-class IStylesView(Interface):\n-    def styles():\n-        """ Returns a list of dicts with information for style rendering. """\ndiff --git a/Products/CMFPlone/resources/browser/mixins.py b/Products/CMFPlone/resources/browser/mixins.py\ndeleted file mode 100644\nindex 7ca42c38e1..0000000000\n--- a/Products/CMFPlone/resources/browser/mixins.py\n+++ /dev/null\n@@ -1,162 +0,0 @@\n-from AccessControl.safe_formatter import SafeFormatter\n-from plone.registry.interfaces import IRegistry\n-from urllib.parse import urlparse\n-from Products.CMFPlone.interfaces import IResourceRegistry\n-from Products.Five.browser import BrowserView\n-from zope.component import getMultiAdapter\n-from zope.component import getUtility\n-\n-\n-lessconfig = """\n- window.less = {\n-    env: "development",\n-    logLevel: %i,\n-    async: false,\n-    fileAsync: false,\n-    errorReporting: window.lessErrorReporting || \'console\',\n-    poll: 1000,\n-    functions: {},\n-    relativeUrls: true,\n-    dumpLineNumbers: "comments",\n-    globalVars: {\n-      %s\n-    },\n-    modifyVars: {\n-      %s\n-    }\n-  };\n-"""\n-\n-lessmodify = """\n-less.modifyVars({\n-    %s\n-})\n-"""\n-\n-\n-class LessConfiguration(BrowserView):\n-    """Browser view that gets the definition of less variables on plone."""\n-\n-    def registry(self):\n-        registryUtility = getUtility(IRegistry)\n-        return registryUtility.records["plone.lessvariables"].value\n-\n-    def resource_registry(self):\n-        registryUtility = getUtility(IRegistry)\n-        return registryUtility.collectionOfInterface(\n-            IResourceRegistry, prefix="plone.resources", check=False\n-        )\n-\n-    def __call__(self):\n-        registry = self.registry()\n-        portal_state = getMultiAdapter(\n-            (self.context, self.request), name="plone_portal_state"\n-        )\n-        site_url = portal_state.portal_url()\n-        result = ""\n-        result += "sitePath: \'\\"%s\\"\',\\n" % site_url\n-        result += "isPlone: true,\\n"\n-        result += "isMockup: false,\\n"\n-        result += "staticPath: \'\\"%s/++plone++static\\"\',\\n" % site_url\n-        result += "barcelonetaPath: \'\\"%s/++theme++barceloneta\\"\',\\n" % site_url\n-\n-        less_vars_params = {\n-            "site_url": site_url,\n-        }\n-\n-        # Storing variables to use them on further vars\n-        for name, value in registry.items():\n-            less_vars_params[name] = value\n-\n-        for name, value in registry.items():\n-            t = SafeFormatter(value).safe_format(**less_vars_params)\n-            result += f"\'{name}\': \\"{t}\\",\\n"\n-\n-        # Adding all plone.resource entries css values as less vars\n-        for name, value in self.resource_registry().items():\n-            for css in value.css:\n-\n-                url = urlparse(css)\n-                if url.netloc == "":\n-                    # Local\n-                    src = f"{site_url}/{css}"\n-                else:\n-                    src = "%s" % (css)\n-                # less vars can\'t have dots on it\n-                result += "\'{}\': \'\\"{}\\"\',\\n".format(name.replace(".", "_"), src)\n-\n-        self.request.response.setHeader("Content-Type", "application/javascript")\n-\n-        try:\n-            debug_level = int(self.request.get("debug", 2))\n-        except:\n-            debug_level = 2\n-        return lessconfig % (debug_level, result, result)\n-\n-\n-class LessModifyConfiguration(LessConfiguration):\n-    def __call__(self):\n-        registry = self.registry()\n-        portal_state = getMultiAdapter(\n-            (self.context, self.request), name="plone_portal_state"\n-        )\n-        site_url = portal_state.portal_url()\n-        result2 = ""\n-        result2 += "\'@sitePath\': \'\\"%s\\"\',\\n" % site_url\n-        result2 += "\'@isPlone\': true,\\n"\n-        result2 += "\'@isMockup\': false,\\n"\n-        result2 += "\'@staticPath: \'\\"%s/++plone++static\\"\',\\n" % site_url\n-        result2 += "\'@barcelonetaPath: \'\\"%s/++theme++barceloneta\\"\',\\n" % site_url\n-\n-        less_vars_params = {\n-            "site_url": site_url,\n-        }\n-\n-        # Storing variables to use them on further vars\n-        for name, value in registry.items():\n-            less_vars_params[name] = value\n-\n-        for name, value in registry.items():\n-            t = SafeFormatter(value).safe_format(**less_vars_params)\n-            result2 += f"\'@{name}\': \\"{t}\\",\\n"\n-\n-        self.request.response.setHeader("Content-Type", "application/javascript")\n-\n-        return lessmodify % (result2)\n-\n-\n-class LessDependency(BrowserView):\n-    """Browser view that returns the less/css on less format for specific\n-    resource.\n-    """\n-\n-    def registry(self):\n-        registryUtility = getUtility(IRegistry)\n-        return registryUtility.collectionOfInterface(\n-            IResourceRegistry, prefix="plone.resources", check=False\n-        )\n-\n-    def __call__(self):\n-        portal_state = getMultiAdapter(\n-            (self.context, self.request), name="plone_portal_state"\n-        )\n-        site_url = portal_state.portal_url()\n-\n-        registry = self.registry()\n-        resource = self.request.get("resource", None)\n-        result = ""\n-        if resource:\n-            if resource in registry:\n-                for css in registry[resource].css:\n-                    url = urlparse(css)\n-                    if url.netloc == "":\n-                        # Local\n-                        src = f"{site_url}/{css}"\n-                    else:\n-                        src = "%s" % (css)\n-\n-                    result += "@import url(\'%s\');\\n" % src\n-\n-        self.request.response.setHeader("Content-Type", "stylesheet/less")\n-\n-        return result\ndiff --git a/Products/CMFPlone/resources/browser/resource.py b/Products/CMFPlone/resources/browser/resource.py\nindex e32b5b2377..3c6892cac7 100644\n--- a/Products/CMFPlone/resources/browser/resource.py\n+++ b/Products/CMFPlone/resources/browser/resource.py\n@@ -1,28 +1,26 @@\n+from ..webresource import PloneScriptResource\n+from ..webresource import PloneStyleResource\n from Acquisition import aq_base\n from Acquisition import aq_inner\n from Acquisition import aq_parent\n from App.config import getConfiguration\n from plone.app.layout.viewlets.common import ViewletBase\n from plone.app.theming.utils import theming_policy\n-from plone.memoize.view import memoize\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.Expression import createExprContext\n from Products.CMFCore.Expression import Expression\n-from Products.CMFCore.utils import _getAuthenticatedUser\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.interfaces import IBundleRegistry\n-from Products.CMFPlone.interfaces import IResourceRegistry\n-from Products.CMFPlone.resources import RESOURCE_DEVELOPMENT_MODE\n-from Products.CMFPlone.resources.browser.combine import (\n-    get_production_resource_directory,\n-)  # noqa\n-from Products.CMFPlone.resources.bundle import Bundle\n-from Products.CMFPlone.utils import get_top_request\n-from zope import component\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n+from zope.component import queryUtility\n from zope.ramcache.interfaces import ram\n \n+import webresource\n+\n+\n+REQUEST_CACHE_KEY = "_WEBRESOURCE_CACHE_"\n+\n \n class ResourceBase:\n     """Information for script rendering.\n@@ -32,38 +30,173 @@ class ResourceBase:\n     """\n \n     @property\n-    @memoize\n-    def anonymous(self):\n-        return _getAuthenticatedUser(self.context).getUserName() == "Anonymous User"\n+    def _rendered_cache(self):\n+        if getConfiguration().debug_mode:\n+            return\n+        self.registry = getUtility(IRegistry)\n+        if not self.registry["plone.resources.development"]:\n+            return getattr(\n+                self.context, f"_v_renderend_cached_{self.__class__.__name__}", None\n+            )\n \n-    @property\n-    @memoize\n-    def development(self):\n-        """\n-        To set development mode:\n+    @_rendered_cache.setter\n+    def _rendered_cache(self, value):\n+        setattr(self.context, f"_v_renderend_cached_{self.__class__.__name__}", value)\n \n-        - we can define a envvar: FEDEV\n-        - otherwise if its anonymous is using production mode\n-        - finally is checked on the registry entry\n-        """\n-        if RESOURCE_DEVELOPMENT_MODE:\n-            return True\n-        if self.anonymous and not self.debug_mode:\n-            return False\n-        return self.registry.records["plone.resources.development"].value\n+    def update(self):\n+        # cache on request\n+        cached = getattr(self.request, REQUEST_CACHE_KEY, None)\n+        if cached is not None:\n+            self.renderer = cached\n+            return\n \n-    @property\n-    def debug_mode(self):\n-        return getConfiguration().debug_mode\n+        # prepare\n+        self.portal_state = getMultiAdapter(\n+            (self.context, self.request), name="plone_portal_state"\n+        )\n+        if not getattr(self, "registry", None):\n+            self.registry = getUtility(IRegistry)\n \n-    def develop_bundle(self, bundle, attr):\n-        return RESOURCE_DEVELOPMENT_MODE or (\n-            self.development and getattr(bundle, attr, False)\n+        theme = None\n+        policy = theming_policy(self.request)\n+        if policy.isThemeEnabled():\n+            # Check if Diazo is enabled\n+            theme = policy.get_theme() or None\n+\n+        # we have two groups for two viewlets (historical reasons)\n+        root_group_js = webresource.ResourceGroup(name="root_js")\n+        root_group_css = webresource.ResourceGroup(name="root_css")\n+\n+        # register all bundles from registry\n+        registry_group_js = webresource.ResourceGroup(\n+            name="registry_js", group=root_group_js\n+        )\n+        registry_group_css = webresource.ResourceGroup(\n+            name="registry_css", group=root_group_css\n         )\n+        records = self.registry.collectionOfInterface(\n+            IBundleRegistry, prefix="plone.bundles", check=False\n+        )\n+        unique = True\n \n-    @property\n-    def last_legacy_import(self):\n-        return self.registry.records["plone.resources.last_legacy_import"].value  # noqa\n+        theme_enabled_bundles = getattr(theme, "enabled_bundles", [])\n+        theme_disabled_bundles = getattr(theme, "disabled_bundles", [])\n+\n+        # include sub/parent request\n+        request = self.request\n+        request_enabled_bundles = set(getattr(request, "enabled_bundles", []))\n+        request_disabled_bundles = set(getattr(request, "disabled_bundles", []))\n+        while request.get("PARENT_REQUEST", None):\n+            request = request["PARENT_REQUEST"]\n+            request_enabled_bundles.update(getattr(request, "enabled_bundles", []))\n+            request_disabled_bundles.update(getattr(request, "disabled_bundles", []))\n+\n+        for name, record in records.items():\n+            include = record.enabled\n+            include = include or name in theme_enabled_bundles\n+            include = include and name not in theme_disabled_bundles\n+            include = include or name in request_enabled_bundles\n+            include = include and name not in request_disabled_bundles\n+\n+            if include and record.expression:\n+\n+                def current_expression():\n+                    return self.eval_expression(record.expression, name)\n+\n+                include = current_expression\n+            if record.jscompilation:\n+                external = record.jscompilation.startswith("http")\n+                resource = PloneScriptResource(\n+                    context=self.context,\n+                    name=name,\n+                    depends=record.depends or "",\n+                    resource=record.jscompilation if not external else None,\n+                    compressed=record.jscompilation if not external else None,\n+                    include=include,\n+                    unique=unique,\n+                    group=registry_group_js,\n+                    url=record.jscompilation if external else None,\n+                    crossorigin="anonymous" if external else None,\n+                    async_=record.load_async or None,\n+                    defer=record.load_defer or None,\n+                    integrity=not external,\n+                )\n+            if record.csscompilation:\n+                external = record.csscompilation.startswith("http")\n+                resource = PloneStyleResource(\n+                    context=self.context,\n+                    name=name,\n+                    depends=record.depends or "",\n+                    resource=record.csscompilation if not external else None,\n+                    compressed=record.csscompilation if not external else None,\n+                    include=include,\n+                    unique=unique,\n+                    group=registry_group_css,\n+                    url=record.csscompilation if external else None,\n+                    media="all",\n+                    rel="stylesheet",\n+                )\n+\n+        # Collect theme data\n+        themedata = {}\n+        themedata["production_css"] = getattr(theme, "production_css", None)\n+        themedata["development_css"] = getattr(theme, "development_css", None)\n+        themedata["production_js"] = getattr(theme, "production_js", None)\n+        themedata["development_js"] = getattr(theme, "development_js", None)\n+\n+        # add Theme JS\n+        if themedata["production_js"]:\n+            # we ignore development_js for external detection\n+            external = themedata["production_js"].startswith("http")\n+            theme_script_resource = PloneScriptResource(\n+                context=self.context,\n+                name="theme",\n+                depends="",\n+                resource=(\n+                    themedata["development_js"] or themedata["production_js"]\n+                    if not external\n+                    else None\n+                ),\n+                compressed=themedata["production_js"] if not external else None,\n+                include=True,\n+                unique=unique,\n+                group=root_group_js,\n+                url=themedata["production_js"] if external else None,\n+                crossorigin="anonymous" if external else None,\n+                integrity=not external,\n+            )\n+\n+        # add Theme CSS\n+        if themedata["production_css"]:\n+            # we ignore development_css for external detection\n+            external = themedata["production_css"].startswith("http")\n+            theme_resource_css = PloneStyleResource(\n+                context=self.context,\n+                name="theme",\n+                depends="",\n+                resource=(\n+                    themedata["development_css"] or themedata["production_css"]\n+                    if not external\n+                    else None\n+                ),\n+                compressed=themedata["production_css"] if not external else None,\n+                include=True,\n+                unique=unique,\n+                group=root_group_css,\n+                url=themedata["production_css"] if external else None,\n+                media="all",\n+                rel="stylesheet",\n+            )\n+        self.renderer = {}\n+        setattr(self.request, REQUEST_CACHE_KEY, self.renderer)\n+        resolver_js = webresource.ResourceResolver(root_group_js)\n+        self.renderer["js"] = webresource.ResourceRenderer(\n+            resolver_js, base_url=self.portal_state.portal_url()\n+        )\n+        resolver_css = webresource.ResourceResolver(root_group_css)\n+        self.renderer["css"] = webresource.ResourceRenderer(\n+            resolver_css, base_url=self.portal_state.portal_url()\n+        )\n \n     def evaluateExpression(self, expression, context):\n         """Evaluate an object\'s TALES condition to see if it should be\n@@ -92,50 +225,14 @@ def evaluateExpression(self, expression, context):\n                 # add \'context\' as an alias for \'object\'\n                 ec.setGlobal("context", context)\n                 return expression(ec)\n-            else:\n-                return True\n+            return True\n         except AttributeError:\n             return True\n \n-    def update(self):\n-        self.portal_state = getMultiAdapter(\n-            (self.context, self.request), name="plone_portal_state"\n-        )\n-        self.site_url = self.portal_state.portal_url()\n-        self.registry = getUtility(IRegistry)\n-        self.production_path = get_production_resource_directory()\n-\n-        theme = None\n-        policy = theming_policy(self.request)\n-        if policy.isThemeEnabled():\n-            # Check if Diazo is enabled\n-            theme = policy.get_theme() or None\n-\n-        self.diazo_production_css = getattr(theme, "production_css", None)\n-        self.diazo_development_css = getattr(theme, "development_css", None)\n-        self.diazo_production_js = getattr(theme, "production_js", None)\n-        self.diazo_development_js = getattr(theme, "development_js", None)\n-        self.theme_enabled_bundles = getattr(theme, "enabled_bundles", [])\n-        self.theme_disabled_bundles = getattr(theme, "disabled_bundles", [])\n-\n-    def get_bundles(self):\n-        result = {}\n-        records = self.registry.collectionOfInterface(\n-            IBundleRegistry, prefix="plone.bundles", check=False\n-        )\n-        for name, record in records.items():\n-            result[name] = Bundle(record)\n-        return result\n-\n-    def get_resources(self):\n-        return self.registry.collectionOfInterface(\n-            IResourceRegistry, prefix="plone.resources", check=False\n-        )\n-\n     def eval_expression(self, expression, bundle_name):\n         if not expression:\n             return True\n-        cache = component.queryUtility(ram.IRAMCache)\n+        cache = queryUtility(ram.IRAMCache)\n         cooked_expression = None\n         if cache is not None:\n             cooked_expression = cache.query(\n@@ -153,75 +250,28 @@ def eval_expression(self, expression, bundle_name):\n                 )\n         return self.evaluateExpression(cooked_expression, self.context)\n \n-    def get_cooked_bundles(self):\n-        """\n-        Get the cooked bundles\n-        """\n-        request = get_top_request(self.request)  # might be a subrequest\n-\n-        # theme specific set bundles\n-        enabled_bundles = set(self.theme_enabled_bundles)\n-        disabled_bundles = set(self.theme_disabled_bundles)\n-\n-        # Request set bundles\n-        enabled_bundles.update(getattr(request, "enabled_bundles", []))\n-        disabled_bundles.update(getattr(request, "disabled_bundles", []))\n-\n-        for key, bundle in self.get_bundles().items():\n-            # The diazo manifest and request bundles are more important than\n-            # the disabled bundle on registry.\n-            # We can access the site with diazo.off=1 without diazo bundles\n-            if (\n-                key in disabled_bundles\n-                or (key not in enabled_bundles and not bundle.enabled)\n-                or not self.eval_expression(bundle.expression, bundle.name)\n-            ):\n-                continue\n-\n-            yield key, bundle\n-\n-    def ordered_bundles_result(self, production=False):\n-        """\n-        It gets the ordered result of bundles\n-        """\n-        result = []\n-        inserted = []\n-        depends_on = {}\n-        for key, bundle in self.get_cooked_bundles():\n-            if bundle.depends is None or bundle.depends == "":\n-                # its the first one\n-                if not (production and bundle.merge_with):\n-                    self.get_data(bundle, result)\n-                inserted.append(key)\n-            else:\n-                name = bundle.depends.strip()\n-                if name in depends_on:\n-                    depends_on[name].append(bundle)\n-                else:\n-                    depends_on[name] = [bundle]\n-\n-        # We need to check all dependencies\n-        while len(depends_on) > 0:\n-            found = False\n-            for key, bundles_to_add in list(depends_on.items()):\n-                if key not in inserted:\n-                    continue\n-                found = True\n-                for bundle in bundles_to_add:\n-                    if not (production and bundle.merge_with):\n-                        self.get_data(bundle, result)\n-                    inserted.append(bundle.name)\n-                del depends_on[key]\n-            if not found:\n-                break\n-\n-        # The ones that does not get the dependencies\n-        for bundles_to_add in depends_on.values():\n-            for bundle in bundles_to_add:\n-                if not (production and bundle.merge_with):\n-                    self.get_data(bundle, result)\n-        return result\n-\n \n class ResourceView(ResourceBase, ViewletBase):\n     """Viewlet Information for script rendering."""\n+\n+\n+class ScriptsView(ResourceView):\n+    """Script Viewlet."""\n+\n+    def index(self):\n+        rendered = self._rendered_cache\n+        if not rendered:\n+            rendered = self.renderer["js"].render()\n+            self._rendered_cache = rendered\n+        return rendered\n+\n+\n+class StylesView(ResourceView):\n+    """Styles Viewlet"""\n+\n+    def index(self):\n+        rendered = self._rendered_cache\n+        if not rendered:\n+            rendered = self.renderer["css"].render()\n+            self._rendered_cache = rendered\n+        return rendered\ndiff --git a/Products/CMFPlone/resources/browser/scripts.pt b/Products/CMFPlone/resources/browser/scripts.pt\ndeleted file mode 100644\nindex 4acf64d7ba..0000000000\n--- a/Products/CMFPlone/resources/browser/scripts.pt\n+++ /dev/null\n@@ -1,9 +0,0 @@\n-<script tal:content="string:PORTAL_URL = \'${view/site_url}\';"></script>\n-\n-<script type="text/javascript" \n-    tal:repeat="script view/scripts"\n-    tal:attributes="src script/src;\n-                    data-bundle script/bundle;\n-                    async script/async|nothing;\n-                    defer script/defer|nothing"></script>\n-\ndiff --git a/Products/CMFPlone/resources/browser/scripts.py b/Products/CMFPlone/resources/browser/scripts.py\ndeleted file mode 100644\nindex 858c492faa..0000000000\n--- a/Products/CMFPlone/resources/browser/scripts.py\n+++ /dev/null\n@@ -1,152 +0,0 @@\n-from Products.CMFPlone.resources.browser.cook import cookWhenChangingSettings\n-from Products.CMFPlone.resources.browser.resource import ResourceView\n-from Products.CMFPlone.utils import get_top_request\n-from urllib import parse\n-from zope.component import getMultiAdapter\n-\n-\n-class ScriptsView(ResourceView):\n-    """Information for script rendering."""\n-\n-    def _add_resources(\n-        self,\n-        resources_to_add,\n-        result,\n-        bundle_name="none",\n-    ):\n-        resources = self.get_resources()\n-        for resource in resources_to_add:\n-            data = resources.get(resource, None)\n-            if data is None or not data.js:\n-                continue\n-            url = parse.urlparse(data.js)\n-            if url.netloc == "":\n-                # Local\n-                src = f"{self.site_url}/{data.js}"\n-            else:\n-                src = data.js\n-            data = {\n-                "bundle": bundle_name,\n-                "src": src,\n-            }\n-            result.append(data)\n-\n-    def get_data(self, bundle, result):\n-        if self.develop_bundle(bundle, "develop_javascript"):\n-            # Bundle development mode\n-            self._add_resources(\n-                bundle.resources,\n-                result,\n-                bundle_name=bundle.name,\n-            )\n-            return\n-        if (\n-            not bundle.compile\n-            and (\n-                not bundle.last_compilation\n-                or self.last_legacy_import > bundle.last_compilation\n-            )\n-            and bundle.resources\n-        ):\n-            # Its a legacy bundle OR compiling is happening outside of plone\n-\n-            # We need to combine files. It\'s possible no resources are\n-            # defined because the compiling is done outside of plone\n-            cookWhenChangingSettings(self.context, bundle)\n-        if bundle.jscompilation:\n-            cache_key = ""\n-            if not self.development:\n-                cache_key = parse.quote(str(bundle.last_compilation))\n-\n-            js_path = bundle.jscompilation\n-            if "++plone++" in js_path:\n-                resource_path = js_path.split("++plone++")[-1]\n-                resource_name, resource_filepath = resource_path.split("/", 1)\n-                js_location = "{}/++plone++{}/++unique++{}/{}".format(\n-                    self.site_url,\n-                    resource_name,\n-                    cache_key,\n-                    resource_filepath,\n-                )\n-            elif js_path.startswith("http"):\n-                js_location = "{}{}".format(\n-                    js_path, "?version={}".format(cache_key) if cache_key else ""\n-                )\n-            else:\n-                js_location = "{}/{}{}".format(\n-                    self.site_url,\n-                    bundle.jscompilation,\n-                    "?version={}".format(cache_key) if cache_key else "",\n-                )\n-\n-            load_async = (\n-                "async" if getattr(bundle, "load_async", None) else None\n-            )  # noqa\n-            load_defer = (\n-                "defer" if getattr(bundle, "load_defer", None) else None\n-            )  # noqa\n-\n-            result.append(\n-                {\n-                    "bundle": bundle.name,\n-                    "src": js_location,\n-                    "async": load_async,\n-                    "defer": load_defer,\n-                }\n-            )\n-\n-    def base_url(self):\n-        portal_state = getMultiAdapter(\n-            (self.context, self.request), name="plone_portal_state"\n-        )\n-        site_url = portal_state.portal_url()\n-        return site_url\n-\n-    def scripts(self):\n-        if self.debug_mode or self.development or not self.production_path:\n-            result = self.ordered_bundles_result()\n-        else:\n-            result = [\n-                {\n-                    "src": "{}/++plone++{}".format(\n-                        self.site_url, self.production_path + "/default.js"\n-                    ),\n-                    "bundle": "production",\n-                    "async": None,  # Do not load ``async`` or\n-                    "defer": None,  # ``defer`` for production bundles.\n-                }\n-            ]\n-            if not self.anonymous:\n-                result.append(\n-                    {\n-                        "src": "{}/++plone++{}".format(\n-                            self.site_url, self.production_path + "/logged-in.js"\n-                        ),\n-                        "bundle": "production",\n-                        "async": None,  # Do not load ``async`` or\n-                        "defer": None,  # ``defer`` for production bundles.\n-                    }\n-                )\n-            result.extend(self.ordered_bundles_result(production=True))\n-\n-        # Add manual added resources\n-        request = get_top_request(self.request)  # might be a subrequest\n-        enabled_resources = getattr(request, "enabled_resources", [])\n-        if enabled_resources:\n-            self._add_resources(enabled_resources, result)\n-\n-        # Add diazo url\n-        origin = None\n-        if self.diazo_production_js and not self.development:\n-            origin = self.diazo_production_js\n-        if self.diazo_development_js and self.development:\n-            origin = self.diazo_development_js\n-        if origin:\n-            result.append(\n-                {\n-                    "bundle": "diazo",\n-                    "src": f"{self.site_url}/{origin}",\n-                }\n-            )\n-\n-        return result\ndiff --git a/Products/CMFPlone/resources/browser/styles.pt b/Products/CMFPlone/resources/browser/styles.pt\ndeleted file mode 100644\nindex 87b03938c4..0000000000\n--- a/Products/CMFPlone/resources/browser/styles.pt\n+++ /dev/null\n@@ -1,6 +0,0 @@\n-<link rel="style"\n-    tal:repeat="style view/styles"\n-    tal:attributes="href style/src;\n-                    rel style/rel;\n-                    data-bundle style/bundle;" />\n-\ndiff --git a/Products/CMFPlone/resources/browser/styles.py b/Products/CMFPlone/resources/browser/styles.py\ndeleted file mode 100644\nindex 78c81f31ce..0000000000\n--- a/Products/CMFPlone/resources/browser/styles.py\n+++ /dev/null\n@@ -1,183 +0,0 @@\n-from plone.app.layout.viewlets.common import ViewletBase\n-from plone.app.theming.interfaces import IThemeSettings\n-from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.resources.browser.cook import cookWhenChangingSettings\n-from Products.CMFPlone.resources.browser.resource import ResourceBase\n-from Products.CMFPlone.utils import get_top_request\n-from urllib import parse\n-from zope.component import getUtility\n-\n-\n-class StylesBase(ResourceBase):\n-\n-    """Information for style rendering."""\n-\n-    def get_urls(self, style, bundle):\n-        """\n-        Extracts the urls for the specific resource\n-        """\n-        for css in style.css:\n-            url = parse.urlparse(css)\n-            if url.netloc == "":\n-                # Local\n-                src = f"{self.site_url}/{css}"\n-            else:\n-                src = "%s" % (css)\n-\n-            extension = url.path.split(".")[-1]\n-            rel = "stylesheet"\n-            if extension != "" and extension != "css":\n-                rel = "stylesheet/%s" % extension\n-\n-            data = {\n-                "rel": rel,\n-                "bundle": bundle.name if bundle else "none",\n-                "src": src,\n-            }\n-            yield data\n-\n-    def get_data(self, bundle, result):\n-        """\n-        Gets the needed information for the bundle\n-        and stores it on the result list\n-        """\n-        if self.develop_bundle(bundle, "develop_css"):\n-            self.resources = self.get_resources()\n-            # The bundle resources\n-            for resource in bundle.resources:\n-                if resource in self.resources:\n-                    style = self.resources[resource]\n-                    for data in self.get_urls(style, bundle):\n-                        result.append(data)\n-        else:\n-            if bundle.compile is False:\n-                # Its a legacy css bundle\n-                if (\n-                    not bundle.last_compilation\n-                    or self.last_legacy_import > bundle.last_compilation\n-                ):\n-                    # We need to compile\n-                    cookWhenChangingSettings(self.context, bundle)\n-\n-            if bundle.csscompilation:\n-                cache_key = ""\n-                if not self.development:\n-                    cache_key = parse.quote(str(bundle.last_compilation))\n-\n-                css_path = bundle.csscompilation\n-                if "++plone++" in css_path:\n-                    resource_path = css_path.split("++plone++")[-1]\n-                    resource_name, resource_filepath = resource_path.split("/", 1)\n-                    css_location = "{}/++plone++{}/++unique++{}/{}".format(\n-                        self.site_url,\n-                        resource_name,\n-                        cache_key,\n-                        resource_filepath,\n-                    )\n-                elif css_path.startswith("http"):\n-                    css_location = "{}{}".format(\n-                        css_path, "?version={}".format(cache_key) if cache_key else ""\n-                    )\n-                else:\n-                    css_location = "{}/{}{}".format(\n-                        self.site_url,\n-                        bundle.csscompilation,\n-                        "?version={}".format(cache_key) if cache_key else "",\n-                    )\n-                result.append(\n-                    {\n-                        "bundle": bundle.name,\n-                        "rel": "stylesheet",\n-                        "src": css_location,\n-                    }\n-                )\n-\n-    @property\n-    def _theme_settings(self):\n-        registry = getUtility(IRegistry)\n-        return registry.forInterface(IThemeSettings, False)\n-\n-    @property\n-    def custom_css(self):\n-        return self._theme_settings.custom_css\n-\n-    @property\n-    def custom_css_timestamp(self):\n-        return self._theme_settings.custom_css_timestamp\n-\n-    def styles(self):\n-        """\n-        Get all the styles\n-        """\n-        if self.development or self.debug_mode or not self.production_path:\n-            result = self.ordered_bundles_result()\n-        else:\n-            result = [\n-                {\n-                    "src": "{}/++plone++{}".format(\n-                        self.site_url, self.production_path + "/default.css"\n-                    ),\n-                    "rel": "stylesheet",\n-                    "bundle": "production",\n-                },\n-            ]\n-            if not self.anonymous:\n-                result.append(\n-                    {\n-                        "src": "{}/++plone++{}".format(\n-                            self.site_url, self.production_path + "/logged-in.css"\n-                        ),\n-                        "rel": "stylesheet",\n-                        "bundle": "production",\n-                    }\n-                )\n-            result.extend(self.ordered_bundles_result(production=True))\n-\n-        # Add manual added resources\n-        resources = self.get_resources()\n-        request = get_top_request(self.request)  # might be a subrequest\n-        if hasattr(request, "enabled_resources"):\n-            for resource in request.enabled_resources:\n-                if resource in resources:\n-                    for data in self.get_urls(resources[resource], None):\n-                        result.append(data)\n-\n-        # Add diazo css\n-        origin = None\n-        if self.diazo_production_css and self.development is False:\n-            origin = self.diazo_production_css\n-        if self.diazo_development_css and self.development is True:\n-            origin = self.diazo_development_css\n-        if origin:\n-            url = parse.urlparse(origin)\n-            if url.netloc == "":\n-                # Local\n-                src = f"{self.site_url}/{origin}"\n-            else:\n-                src = "%s" % (origin)\n-\n-            extension = url.path.split(".")[-1]\n-            rel = "stylesheet"\n-            if extension != "" and extension != "css":\n-                rel = "stylesheet/%s" % extension\n-\n-            data = {"rel": rel, "src": src, "bundle": "diazo"}\n-\n-            result.append(data)\n-\n-        # custom.css\n-        if self.custom_css:\n-            custom_css = {\n-                "rel": "stylesheet",\n-                "src": "{}/custom.css?timestamp={}".format(\n-                    self.site_url,\n-                    self.custom_css_timestamp,\n-                ),\n-                "bundle": "custom-css",\n-            }\n-            result.append(custom_css)\n-        return result\n-\n-\n-class StylesView(StylesBase, ViewletBase):\n-    """Styles Viewlet"""\ndiff --git a/Products/CMFPlone/resources/bundle.py b/Products/CMFPlone/resources/bundle.py\ndeleted file mode 100644\nindex 08027f2a58..0000000000\n--- a/Products/CMFPlone/resources/bundle.py\n+++ /dev/null\n@@ -1,101 +0,0 @@\n-from datetime import datetime\n-from plone.resource.directory import FilesystemResourceDirectory\n-from plone.resource.file import FilesystemFile\n-from Products.CMFCore.FSFile import FSFile\n-from Products.Five.browser.resource import DirectoryResource\n-from Products.Five.browser.resource import FileResource\n-from zExceptions import NotFound\n-from zope.component.hooks import getSite\n-\n-import os\n-\n-\n-class Bundle:\n-    """Wraps pure bundles RecordsProxy and enrich with logic\n-    .\n-    Proxy attributes and provide some utility functions\n-    """\n-\n-    def __init__(self, data):\n-        """initialize Bunde.initialize\n-\n-        data is a\n-        - registry record\n-        - with interfaces\'IResourceRegistry\'\n-        - with prefix \'plone.bundles\'\n-        """\n-        self.data = data\n-\n-    def _real_path(self, ctx):\n-        if ctx == "js":\n-            resource_path = self.data.jscompilation\n-        else:\n-            resource_path = self.data.csscompilation\n-        try:\n-            resource = getSite().restrictedTraverse(resource_path)\n-        except (NotFound, KeyError):\n-            return None, None\n-        if resource.__module__ == "Products.Five.metaclass":\n-            try:\n-                return "fs", resource.chooseContext().path\n-            except:\n-                try:\n-                    return "fs", resource.context.path\n-                except:\n-                    try:\n-                        if callable(resource):\n-                            return None, None\n-                        else:\n-                            return None, None\n-                    except:\n-                        return None, None\n-        elif isinstance(resource, FilesystemFile):\n-            return "fs", resource.path\n-        elif isinstance(resource, FileResource):\n-            return "fs", resource.chooseContext().path\n-        elif isinstance(resource, DirectoryResource):\n-            return "fs", resource.context.path\n-        elif isinstance(resource, FilesystemResourceDirectory):\n-            return "fs", resource.directory\n-        elif isinstance(resource, FSFile):\n-            return "zodb", resource._filepath\n-        else:\n-            return "zodb", None\n-\n-    @property\n-    def name(self):\n-        return self.data.__prefix__.split("/", 1)[1].rstrip(".")\n-\n-    @property\n-    def last_compilation(self):\n-        """check bundles last compilation using filesystem date or date of OFS.\n-\n-        if bundle has a last_compilation date newer than filesystem/OFS it wins\n-        always.\n-        """\n-        mods = []\n-        for ctx in ["js", "css"]:\n-            loc, path = self._real_path(ctx)\n-            if loc == "fs" and os.path.exists(path):\n-                mods.append(datetime.fromtimestamp(os.path.getmtime(path)))\n-            elif loc == "zodb":\n-                self.data.last_compilation\n-        if self.data.last_compilation and mods:\n-            if self.data.last_compilation > max(mods):\n-                return self.data.last_compilation\n-            else:\n-                return max(mods)\n-        return self.data.last_compilation\n-\n-    @last_compilation.setter\n-    def last_compilation(self, value):\n-        self.data.last_compilation = value\n-\n-    def __getattr__(self, name):\n-        """act as r/o wrapper"""\n-        return getattr(self.data, name)\n-\n-    def __repr__(self):\n-        return \'<{}.{} object "{}" at {}>\'.format(\n-            self.__class__.__module__, self.__class__.__name__, self.name, id(self)\n-        )\ndiff --git a/Products/CMFPlone/resources/exportimport/__init__.py b/Products/CMFPlone/resources/exportimport/__init__.py\ndeleted file mode 100644\nindex e69de29bb2..0000000000\ndiff --git a/Products/CMFPlone/resources/exportimport/bundles.py b/Products/CMFPlone/resources/exportimport/bundles.py\ndeleted file mode 100644\nindex f380b846e2..0000000000\n--- a/Products/CMFPlone/resources/exportimport/bundles.py\n+++ /dev/null\n@@ -1,33 +0,0 @@\n-from ..browser.combine import combine_bundles\n-from plone.registry.interfaces import IRegistry\n-from zope.component import queryUtility\n-\n-\n-def combine(context):\n-    logger = context.getLogger("bundles")\n-    registry = queryUtility(IRegistry)\n-\n-    if registry is None:\n-        logger.info("Cannot find registry")\n-        return\n-\n-    # Look for a keyword in registry.xml or the registry directory.\n-    filepaths = ["registry.xml"]\n-    if context.isDirectory("registry"):\n-        for filename in context.listDirectory("registry"):\n-            filepaths.append("registry/" + filename)\n-    found = False\n-    for filepath in filepaths:\n-        body = context.readDataFile(filepath)\n-        if body is not None and b"IBundleRegistry" in body:\n-            found = True\n-            break\n-    if not found:\n-        return\n-\n-    # Calling combine_bundles used to have as side effect that the\n-    # Content-Type header of the response was set to application/javascript,\n-    # which we do not want.  But that was fixed already in Plone 5.1b2.\n-    # See https://github.com/plone/Products.CMFPlone/pull/1924\n-    site = context.getSite()\n-    combine_bundles(site)\ndiff --git a/Products/CMFPlone/resources/exportimport/resourceregistry.py b/Products/CMFPlone/resources/exportimport/resourceregistry.py\ndeleted file mode 100644\nindex 9d29740475..0000000000\n--- a/Products/CMFPlone/resources/exportimport/resourceregistry.py\n+++ /dev/null\n@@ -1,170 +0,0 @@\n-from datetime import datetime\n-from plone.i18n.normalizer.interfaces import IIDNormalizer\n-from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import IBundleRegistry\n-from Products.CMFPlone.interfaces import IResourceRegistry\n-from Products.CMFPlone.resources.browser.cook import cookWhenChangingSettings\n-from Products.GenericSetup.interfaces import IBody\n-from Products.GenericSetup.utils import XMLAdapterBase\n-from zope.component import queryMultiAdapter\n-from zope.component import queryUtility\n-from zope.interface.interfaces import ComponentLookupError\n-\n-\n-def importResRegistry(context, reg_id, reg_title, filename):\n-    """Import resource registry."""\n-    site = context.getSite()\n-    logger = context.getLogger("resourceregistry")\n-\n-    body = context.readDataFile(filename)\n-    if body is None:\n-        return\n-\n-    res_reg = getToolByName(site, reg_id)\n-\n-    importer = queryMultiAdapter((res_reg, context), IBody)\n-    if importer is None:\n-        logger.warning("%s: Import adapter missing." % reg_title)\n-        return\n-    try:\n-        importer.registry = getToolByName(site, "portal_registry")\n-    except AttributeError:\n-        # Upgrade 3.x no registry there\n-        importer.registry = None\n-    importer.body = body\n-    logger.info("%s imported." % reg_title)\n-\n-\n-class ResourceRegistryNodeAdapter(XMLAdapterBase):\n-\n-    resource_blacklist = set()\n-    registry = None\n-\n-    def _importNode(self, node):\n-        """Import the object from the DOM node."""\n-        if self.registry is None:\n-            # Upgrade 3.x no registry there\n-            return\n-        resources = self.registry.collectionOfInterface(\n-            IResourceRegistry, prefix="plone.resources", check=False\n-        )\n-\n-        bundles = self.registry.collectionOfInterface(\n-            IBundleRegistry, prefix="plone.bundles", check=False\n-        )\n-        if "plone-legacy" in bundles:\n-            legacy = bundles["plone-legacy"]\n-        else:\n-            legacy = bundles.setdefault("plone-legacy")\n-            legacy.resources = []\n-            legacy.enabled = True\n-\n-        for child in node.childNodes:\n-            if child.nodeName != self.resource_type:\n-                continue\n-\n-            data = {}\n-            add = True\n-            remove = False\n-            position = res_id = None\n-            for key, value in child.attributes.items():\n-                key = str(key)\n-                if key == "update":\n-                    continue\n-                if key == "remove" and value in (True, "true", "True"):\n-                    add = False\n-                    remove = True\n-                    continue\n-                if key in ("position-before", "insert-before"):\n-                    position = (\n-                        "before",\n-                        queryUtility(IIDNormalizer).normalize(str(value)),\n-                    )\n-                    continue\n-                if key in ("position-after", "insert-after"):\n-                    position = (\n-                        "after",\n-                        queryUtility(IIDNormalizer).normalize(str(value)),\n-                    )\n-                    continue\n-                if key in ("position-top", "insert-top"):\n-                    position = ("*",)\n-                    continue\n-                if key in ("position-bottom", "insert-bottom"):\n-                    position = ("",)\n-                    continue\n-                if key == "id":\n-                    if value in self.resource_blacklist:\n-                        add = False\n-                        data.clear()\n-                        break\n-                    res_id = queryUtility(IIDNormalizer).normalize(str(value))\n-                    data["url"] = str(value)\n-                elif value.lower() == "false":\n-                    data[key] = False\n-                elif value.lower() == "true":\n-                    data[key] = True\n-                else:\n-                    try:\n-                        data[key] = int(value)\n-                    except ValueError:\n-                        data[key] = str(value)\n-\n-            if add:\n-                proxy = resources.setdefault(res_id)\n-                if self.resource_type == "javascript":\n-                    proxy.js = data["url"]\n-                elif self.resource_type == "stylesheet":\n-                    proxy.css = [data["url"]]\n-                if "enabled" in data and not data["enabled"]:\n-                    # if we are disabling it, we need to remove from legacy\n-                    # resources\n-                    if res_id in legacy.resources:\n-                        legacy.resources.remove(res_id)\n-                    continue\n-                if res_id in legacy.resources:\n-                    # remove here so we can possible re-insert into whatever\n-                    # position is preferred below and then we do not\n-                    # re-add same resource multiple times\n-                    legacy.resources.remove(res_id)\n-                if position is None:\n-                    position = ("",)\n-                if position[0] == "*":\n-                    legacy.resources.insert(0, res_id)\n-                elif position[0] == "":\n-                    legacy.resources.append(res_id)\n-                elif position[0] == "after":\n-                    if position[1] in legacy.resources:\n-                        legacy.resources.insert(\n-                            legacy.resources.index(position[1]) + 1, res_id\n-                        )\n-                    else:\n-                        legacy.resources.append(res_id)\n-                elif position[0] == "before":\n-                    if position[1] in legacy.resources:\n-                        legacy.resources.insert(\n-                            legacy.resources.index(position[1]), res_id\n-                        )\n-                    else:\n-                        legacy.resources.append(res_id)\n-\n-            elif remove:\n-                if res_id in legacy.resources:\n-                    legacy.resources.remove(res_id)\n-                if res_id in resources:\n-                    del resources[res_id]\n-\n-            # make sure to trigger committing to db\n-            # not sure this is necessary...\n-            legacy.resources = legacy.resources\n-\n-        if "plone.resources.last_legacy_import" in self.registry.records:  # noqa\n-            self.registry.records[\n-                "plone.resources.last_legacy_import"\n-            ].value = datetime.now()\n-            try:\n-                cookWhenChangingSettings(self.context, legacy)\n-            except (AssertionError, ComponentLookupError):\n-                # zope.globalrequest and the site might not be setup, don\'t\n-                # error out\n-                pass\ndiff --git a/Products/CMFPlone/resources/utils.py b/Products/CMFPlone/resources/utils.py\nnew file mode 100644\nindex 0000000000..3c77884fe8\n--- /dev/null\n+++ b/Products/CMFPlone/resources/utils.py\n@@ -0,0 +1,76 @@\n+from Acquisition import aq_base\n+from plone.registry.interfaces import IRegistry\n+from plone.resource.file import FilesystemFile\n+from plone.resource.interfaces import IResourceDirectory\n+from Products.CMFPlone.interfaces import IBundleRegistry\n+from Products.CMFPlone.interfaces.resources import OVERRIDE_RESOURCE_DIRECTORY_NAME\n+from zExceptions import NotFound\n+from zope.component import getUtility\n+from zope.component import queryUtility\n+\n+import logging\n+\n+\n+PRODUCTION_RESOURCE_DIRECTORY = "production"\n+logger = logging.getLogger(__name__)\n+\n+\n+def get_production_resource_directory():\n+    persistent_directory = queryUtility(IResourceDirectory, name="persistent")\n+    if persistent_directory is None:\n+        return ""\n+    container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n+    try:\n+        production_folder = container[PRODUCTION_RESOURCE_DIRECTORY]\n+    except NotFound:\n+        return "%s/++unique++1" % PRODUCTION_RESOURCE_DIRECTORY\n+    if "timestamp.txt" not in production_folder:\n+        return "%s/++unique++1" % PRODUCTION_RESOURCE_DIRECTORY\n+    timestamp = production_folder.readFile("timestamp.txt")\n+    if isinstance(timestamp, bytes):\n+        timestamp = timestamp.decode()\n+    return "{}/++unique++{}".format(PRODUCTION_RESOURCE_DIRECTORY, timestamp)\n+\n+\n+def get_resource(context, path):\n+    if path.startswith("++plone++"):\n+        # ++plone++ resources can be customized, we return their override\n+        # value if any\n+        overrides = get_override_directory(context)\n+        filepath = path[9:]\n+        if overrides.isFile(filepath):\n+            return overrides.readFile(filepath)\n+\n+    try:\n+        resource = context.unrestrictedTraverse(path)\n+    except (NotFound, AttributeError):\n+        logger.warning(\n+            f"Could not find resource {path}. You may have to create it first."\n+        )  # noqa\n+        return\n+\n+    if isinstance(resource, FilesystemFile):\n+        (directory, sep, filename) = path.rpartition("/")\n+        return context.unrestrictedTraverse(directory).readFile(filename)\n+\n+    # calling the resource may modify the header, i.e. the content-type.\n+    # we do not want this, so keep the original header intact.\n+    response_before = context.REQUEST.response\n+    context.REQUEST.response = response_before.__class__()\n+    if hasattr(aq_base(resource), "GET"):\n+        # for FileResource\n+        result = resource.GET()\n+    else:\n+        # any BrowserView\n+        result = resource()\n+    context.REQUEST.response = response_before\n+    return result\n+\n+\n+def get_override_directory(context):\n+    persistent_directory = queryUtility(IResourceDirectory, name="persistent")\n+    if persistent_directory is None:\n+        return\n+    if OVERRIDE_RESOURCE_DIRECTORY_NAME not in persistent_directory:\n+        persistent_directory.makeDirectory(OVERRIDE_RESOURCE_DIRECTORY_NAME)\n+    return persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\ndiff --git a/Products/CMFPlone/resources/webresource.py b/Products/CMFPlone/resources/webresource.py\nnew file mode 100644\nindex 0000000000..17e4ebf121\n--- /dev/null\n+++ b/Products/CMFPlone/resources/webresource.py\n@@ -0,0 +1,26 @@\n+from .utils import get_resource\n+from urllib.parse import quote_plus\n+from webresource import ScriptResource\n+from webresource import StyleResource\n+\n+\n+class PloneBaseResource:\n+    """Mixin to override certain aspects of a webresource for Plone needs."""\n+\n+    def __init__(self, context, **kw):\n+        """Initialize with Plone context"""\n+        self.context = context\n+        super().__init__(**kw)\n+\n+    @property\n+    def file_data(self):\n+        """Fetch data from using a resource via traversal"""\n+        return get_resource(self.context, self.resource)\n+\n+\n+class PloneScriptResource(PloneBaseResource, ScriptResource):\n+    """Webresource based ScriptResource for Plone"""\n+\n+\n+class PloneStyleResource(PloneBaseResource, StyleResource):\n+    """Webresource based StyleResource for Plone"""\ndiff --git a/Products/CMFPlone/tests/testCSSandJSRegistry.py b/Products/CMFPlone/tests/testCSSandJSRegistry.py\ndeleted file mode 100644\nindex cf8ee57a78..0000000000\n--- a/Products/CMFPlone/tests/testCSSandJSRegistry.py\n+++ /dev/null\n@@ -1,73 +0,0 @@\n-from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import IBundleRegistry\n-from Products.CMFPlone.interfaces import IResourceRegistry\n-from Products.CMFPlone.tests.PloneTestCase import PloneTestCase\n-from zope.component import getUtility\n-\n-\n-class TestCSSRegistry(PloneTestCase):\n-\n-    def afterSetUp(self):\n-        self.registry = getUtility(IRegistry)\n-\n-    def testDefaultCssIsInstalled(self):\n-        installedResources = self.registry.collectionOfInterface(\n-            IResourceRegistry,\n-            prefix=\'plone.resources\'\n-        )\n-        expected = [\n-            \'++plone++static/plone.less\',\n-        ]\n-        css_files = [y for x in installedResources.values() for y in x.css]\n-        for e in expected:\n-            self.assertTrue(e in css_files, e)\n-\n-    def testBundleIsInstalled(self):\n-        installedBundles = self.registry.collectionOfInterface(\n-            IBundleRegistry, prefix=\'plone.bundles\')\n-        expected = [\n-            \'plone\',\n-            \'plone-legacy\'\n-        ]\n-        for e in expected:\n-            self.assertTrue(e in installedBundles.keys(), e)\n-\n-    # def testRTLShouldHaveHigherPrecedence(self):\n-    #     installedStylesheetIds = self.tool.getResourceIds()\n-    #     indexRTLStylesheet = self.tool.getResourcePosition(\'RTL.css\')\n-    #     comes_before = [\'++resource++plone.css\']\n-    #     for cb in comes_before:\n-    #         self.assertTrue(\n-    #             cb in installedStylesheetIds[:indexRTLStylesheet],\n-    #             cb\n-    #         )\n-\n-    def testJSIsInsertedInPage(self):\n-        self.registry[\'plone.resources.development\'] = True\n-        self.registry[\'plone.bundles/plone.develop_css\'] = True\n-        page = self.portal.view()\n-        self.assertTrue(\'++plone++static/plone.less\' in page)\n-\n-\n-class TestJSRegistry(PloneTestCase):\n-\n-    def afterSetUp(self):\n-        self.registry = getUtility(IRegistry)\n-\n-    def testDefaultJSIsInstalled(self):\n-        installedResources = self.registry.collectionOfInterface(\n-            IResourceRegistry,\n-            prefix=\'plone.resources\'\n-        )\n-        expected = [\n-            \'++resource++plone.js\',\n-        ]\n-        js_files = {x.js for x in installedResources.values()}\n-        for e in expected:\n-            self.assertTrue(e in js_files, e)\n-\n-    def testJSIsInsertedInPage(self):\n-        self.registry[\'plone.resources.development\'] = True\n-        self.registry[\'plone.bundles/plone.develop_javascript\'] = True\n-        page = self.portal.view()\n-        self.assertTrue(\'++resource++plone.js\' in page)\ndiff --git a/Products/CMFPlone/tests/testResourceRegistries.py b/Products/CMFPlone/tests/testResourceRegistries.py\nindex d17106da82..527480d27c 100644\n--- a/Products/CMFPlone/tests/testResourceRegistries.py\n+++ b/Products/CMFPlone/tests/testResourceRegistries.py\n@@ -2,608 +2,253 @@\n from plone.registry.interfaces import IRegistry\n from plone.resource.interfaces import IResourceDirectory\n from plone.subrequest import subrequest\n-from Products.CMFPlone.controlpanel.browser.resourceregistry import OverrideFolderManager  # noqa\n-from Products.CMFPlone.controlpanel.browser.resourceregistry import ResourceRegistryControlPanelView  # noqa\n from Products.CMFPlone.interfaces import IBundleRegistry\n-from Products.CMFPlone.interfaces import IResourceRegistry\n-from Products.CMFPlone.interfaces.resources import OVERRIDE_RESOURCE_DIRECTORY_NAME  # noqa\n+from Products.CMFPlone.interfaces.resources import OVERRIDE_RESOURCE_DIRECTORY_NAME\n from Products.CMFPlone.resources import add_bundle_on_request\n-from Products.CMFPlone.resources import add_resource_on_request\n from Products.CMFPlone.resources import remove_bundle_on_request\n-from Products.CMFPlone.resources.browser.cook import cookWhenChangingSettings\n-from Products.CMFPlone.resources.browser.scripts import ScriptsView\n-from Products.CMFPlone.resources.browser.styles import StylesView\n-from Products.CMFPlone.resources.bundle import Bundle\n-from Products.CMFPlone.resources.exportimport.resourceregistry import ResourceRegistryNodeAdapter  # noqa\n+from Products.CMFPlone.resources.browser.resource import ScriptsView\n+from Products.CMFPlone.resources.browser.resource import StylesView\n from Products.CMFPlone.tests import PloneTestCase\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n+from unittest import mock\n from zope.component import getUtility\n+from plone.registry import Record\n+from plone.registry import field as regfield\n \n import json\n-from unittest import mock\n import os\n \n \n-class TestResourceRegistries(PloneTestCase.PloneTestCase):\n-\n-    def test_cooking_resources(self):\n-        registry = getUtility(IRegistry)\n-        bundles = registry.collectionOfInterface(IBundleRegistry,\n-                                                 prefix="plone.bundles")\n-        bundle = bundles.add(\'foobar\')\n-        bundle.jscompilation = \'++plone++static/foobar-compiled.js\'\n-        bundle.csscompilation = \'++plone++static/foobar-compiled.css\'\n-\n-        resources = registry.collectionOfInterface(IResourceRegistry,\n-                                                   prefix="plone.resources")\n-        resource = resources.add(\'foobar\')\n-\n-        resource.js = \'++plone++static/foobar.js\'\n-        resource.css = [\'++plone++static/foobar.css\']\n-        bundle.resources = [\'foobar\']\n-\n-        persistent_directory = getUtility(\n-            IResourceDirectory, name="persistent")\n-        if OVERRIDE_RESOURCE_DIRECTORY_NAME not in persistent_directory:\n-            persistent_directory.makeDirectory(\n-                OVERRIDE_RESOURCE_DIRECTORY_NAME)\n-        container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n-        container.makeDirectory(\'static\')\n-        directory = container[\'static\']\n-        directory.writeFile(\'foobar.js\', \'alert("Hi!");\\n\\nalert("Ho!");\')\n-        directory.writeFile(\'foobar.css\', \'body {\\ncolor: blue;\\n}\')\n-\n-        cookWhenChangingSettings(self.portal, bundle)\n-\n-        resp_js = subrequest(\n-            \'{}/++plone++static/foobar-compiled.js\'.format(\n-                self.portal.absolute_url()\n-            )\n-        )\n-        self.assertIn(b\'alert("Hi!");alert("Ho!");\', resp_js.getBody())\n-\n-        resp_css = subrequest(\n-            \'{}/++plone++static/foobar-compiled.css\'.format(\n-                self.portal.absolute_url()\n-            )\n-        )\n-        self.assertIn(b\'body{color:blue}\', resp_css.getBody())\n-\n-    def test_dont_minify_already_minified(self):\n-        registry = getUtility(IRegistry)\n-        bundles = registry.collectionOfInterface(IBundleRegistry,\n-                                                 prefix="plone.bundles")\n-        bundle = bundles.add(\'foobar\')\n-        bundle.jscompilation = \'++plone++static/foobar-compiled.js\'\n-        bundle.csscompilation = \'++plone++static/foobar-compiled.css\'\n-\n-        resources = registry.collectionOfInterface(IResourceRegistry,\n-                                                   prefix="plone.resources")\n-        resource = resources.add(\'foobar\')\n-\n-        resource.js = \'++plone++static/foobar.min.js\'\n-        resource.css = [\'++plone++static/foobar.min.css\']\n-        bundle.resources = [\'foobar\']\n-\n-        persistent_directory = getUtility(\n-            IResourceDirectory, name="persistent")\n-        if OVERRIDE_RESOURCE_DIRECTORY_NAME not in persistent_directory:\n-            persistent_directory.makeDirectory(\n-                OVERRIDE_RESOURCE_DIRECTORY_NAME)\n-        container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n-        container.makeDirectory(\'static\')\n-        directory = container[\'static\']\n-        directory.writeFile(\'foobar.min.js\', b\'alert("Hi!");\\n\\nalert("Ho!");\')\n-        directory.writeFile(\'foobar.min.css\', b\'body {\\ncolor: blue;\\n}\')\n-\n-        cookWhenChangingSettings(self.portal, bundle)\n-\n-        resp_js = subrequest(\n-            \'{}/++plone++static/foobar-compiled.js\'.format(\n-                self.portal.absolute_url()\n-            )\n-        )\n-        self.assertIn(b\'alert("Hi!");\\n\\nalert("Ho!");\', resp_js.getBody())\n-\n-        resp_css = subrequest(\n-            \'{}/++plone++static/foobar-compiled.css\'.format(\n-                self.portal.absolute_url()\n-            )\n-        )\n-        self.assertIn(b\'body {\\ncolor: blue;\\n}\', resp_css.getBody())\n-\n-    def test_cook_only_css(self):\n-        registry = getUtility(IRegistry)\n-        bundles = registry.collectionOfInterface(IBundleRegistry,\n-                                                 prefix="plone.bundles")\n-        bundle = bundles.add(\'foobar\')\n-        bundle.jscompilation = \'\'\n-        bundle.csscompilation = \'++plone++static/foobar-compiled.css\'\n-\n-        resources = registry.collectionOfInterface(IResourceRegistry,\n-                                                   prefix="plone.resources")\n-        resource = resources.add(\'foobar\')\n-\n-        resource.css = [\'++plone++static/foobar.min.css\']\n-        bundle.resources = [\'foobar\']\n-\n-        persistent_directory = getUtility(\n-            IResourceDirectory, name="persistent")\n-        if OVERRIDE_RESOURCE_DIRECTORY_NAME not in persistent_directory:\n-            persistent_directory.makeDirectory(\n-                OVERRIDE_RESOURCE_DIRECTORY_NAME)\n-        container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n-        container.makeDirectory(\'static\')\n-        directory = container[\'static\']\n-        directory.writeFile(\'foobar.min.css\', \'body {\\ncolor: red;\\n}\')\n-\n-        cookWhenChangingSettings(self.portal, bundle)\n-\n-        resp_css = subrequest(\n-            \'{}/++plone++static/foobar-compiled.css\'.format(\n-                self.portal.absolute_url()\n-            )\n-        )\n-        self.assertIn(b\'body {\\ncolor: red;\\n}\', resp_css.getBody())\n-\n-    def test_cooking_missing(self):\n-        registry = getUtility(IRegistry)\n-        bundles = registry.collectionOfInterface(IBundleRegistry,\n-                                                 prefix="plone.bundles")\n-        bundle = bundles.add(\'foobar\')\n-        bundle.jscompilation = \'++plone++static/foobar-compiled.js\'\n-        bundle.csscompilation = \'++plone++static/foobar-compiled.css\'\n-\n-        resources = registry.collectionOfInterface(IResourceRegistry,\n-                                                   prefix="plone.resources")\n-        resource = resources.add(\'foobar\')\n-\n-        resource.js = \'++plone++static/foobar.js\'\n-        bundle.resources = [\'foobar\']\n-\n-        bundle = Bundle(bundle)\n-\n-        cookWhenChangingSettings(self.portal, bundle)\n-        resp = subrequest(\n-            \'{}/++plone++static/foobar-compiled.js\'.format(\n-                self.portal.absolute_url()\n-            )\n-        )\n-        self.assertIn(b\'Could not find resource\', resp.getBody())\n-\n-    def test_cooking_missing_browserresource(self):\n-        registry = getUtility(IRegistry)\n-        registry[\'plone.resources.development\'] = True\n-        bundles = registry.collectionOfInterface(IBundleRegistry,\n-                                                 prefix="plone.bundles")\n-        bundle = bundles.add(\'barbar\')\n-        bundle.jscompilation = \'++resource++notfound/barbar-compiled.js\'\n-        bundle.csscompilation = \'++resource++notfound/barbar-compiled.css\'\n-        bundle.compile = False\n-        bundle.merge_with = \'default\'\n-\n-        bundle = Bundle(bundle)\n-\n-        # cookWhenChangingSettings(self.portal, bundle)\n-        scripts = ScriptsView(\n-            self.layer[\'portal\'],\n-            self.layer[\'request\'],\n-            None\n-        )\n-        scripts.update()\n-        results = scripts.scripts()\n-        # at least have jquery.min.js, config.js, require.js, etc.\n-        self.assertTrue(len(results)>2)\n-\n-    def test_error(self):\n-        registry = getUtility(IRegistry)\n-        bundles = registry.collectionOfInterface(IBundleRegistry,\n-                                                 prefix="plone.bundles")\n-        bundle = bundles.add(\'foobar\')\n-        bundle.jscompilation = \'++plone++static/foobar-compiled.js\'\n-        bundle.csscompilation = \'++plone++static/foobar-compiled.css\'\n-\n-        resources = registry.collectionOfInterface(IResourceRegistry,\n-                                                   prefix="plone.resources")\n-        resource = resources.add(\'foobar\')\n-\n-        resource.js = \'++plone++static/foobar.js\'\n-        bundle.resources = [\'foobar\']\n-\n-        persistent_directory = getUtility(\n-            IResourceDirectory, name="persistent")\n-        if OVERRIDE_RESOURCE_DIRECTORY_NAME not in persistent_directory:\n-            persistent_directory.makeDirectory(\n-                OVERRIDE_RESOURCE_DIRECTORY_NAME)\n-        container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n-        container.makeDirectory(\'static\')\n-        directory = container[\'static\']\n-        directory.writeFile(\'foobar.js\', \'sdlfk ldsf lksdjfl s\')\n-\n-        cookWhenChangingSettings(self.portal, bundle)\n-        resp = subrequest(\n-            \'{}/++plone++static/foobar-compiled.js\'.format(\n-                self.portal.absolute_url()\n-            )\n-        )\n-        self.assertIn(b\'error cooking\', resp.getBody())\n-\n-    def test_bundle_defer_async(self):\n+class TestScriptsViewlet(PloneTestCase.PloneTestCase):\n+    def _make_test_bundle(self):\n         registry = getUtility(IRegistry)\n \n         bundles = registry.collectionOfInterface(\n-            IBundleRegistry,\n-            prefix="plone.bundles"\n+            IBundleRegistry, prefix="plone.bundles"\n         )\n-        bundle = bundles.add(\'foobar\')\n-        bundle.name = \'foobar\'\n-        bundle.jscompilation = \'foobar.js\'\n-        bundle.csscompilation = \'foobar.css\'\n-        bundle.resources = [\'foobar\']\n+        bundle = bundles.add("foobar")\n+        bundle.name = "foobar"\n+        bundle.jscompilation = "http://foo.bar/foobar.js"\n+        bundle.csscompilation = "http://foo.bar/foobar.css"\n+        bundle.resources = ["foobar"]\n+        return bundle\n \n+    def test_bundle_defernot_asyncnot(self):\n+        bundle = self._make_test_bundle()\n         view = ScriptsView(self.app, self.app.REQUEST, None, None)\n-        view.get_cooked_bundles = lambda: [(\'foobar\', bundle)]\n-\n-        import Products.CMFPlone.resources.browser\n-        path = os.path.dirname(Products.CMFPlone.resources.browser.__file__)\n-        view.index = ViewPageTemplateFile(\'scripts.pt\', path)\n         view.update()\n+        rendered = view.render()\n+        self.assertTrue(\'async=\' not in rendered)\n+        self.assertTrue(\'defer=\' not in rendered)\n \n-        self.assertTrue(\'async="async"\' not in view.index(view))\n-        self.assertTrue(\'defer="defer"\' not in view.index(view))\n-\n+    def test_bundle_defernot_async(self):\n+        bundle = self._make_test_bundle()\n         bundle.load_async = True\n         bundle.load_defer = False\n-        self.assertTrue(\'async="async"\' in view.index(view))\n-        self.assertTrue(\'defer="defer"\' not in view.index(view))\n+        view = ScriptsView(self.app, self.app.REQUEST, None, None)\n+        view.update()\n+        rendered = view.render()\n \n+    def test_bundle_defer_asyncnot(self):\n+        bundle = self._make_test_bundle()\n         bundle.load_async = False\n         bundle.load_defer = True\n-        self.assertTrue(\'async="async"\' not in view.index(view))\n-        self.assertTrue(\'defer="defer"\' in view.index(view))\n+        view = ScriptsView(self.app, self.app.REQUEST, None, None)\n+        view.update()\n+        rendered = view.render()\n+        self.assertTrue(\'async=\' not in rendered)\n+        self.assertTrue(\'defer=\' in rendered)\n \n+    def test_bundle_defernot_async(self):\n+        bundle = self._make_test_bundle()\n         bundle.load_async = True\n-        bundle.load_defer = True\n-\n-        self.assertTrue(\'async="async"\' in view.index(view))\n-        self.assertTrue(\'defer="defer"\' in view.index(view))\n-\n-        bundle.load_async = False\n         bundle.load_defer = False\n-\n-        self.assertTrue(\'async="async"\' not in view.index(view))\n-        self.assertTrue(\'defer="defer"\' not in view.index(view))\n-\n-    def test_bundle_defer_async_production(self):\n-        """The default and logged-in production bundles should never be loaded\n-        async or defered.\n-        For bundles to be loaded async or defered, you need to empty merge_with\n-        """\n-        registry = getUtility(IRegistry)\n-\n-        bundles = registry.collectionOfInterface(\n-            IBundleRegistry,\n-            prefix="plone.bundles"\n-        )\n-        bundles[\'plone\'].load_async = False\n-        bundles[\'plone\'].load_defer = False\n-        bundles[\'plone-logged-in\'].load_async = False\n-        bundles[\'plone-logged-in\'].load_defer = False\n-\n+        request = self.app.REQUEST\n         view = ScriptsView(self.app, self.app.REQUEST, None, None)\n-\n-        import Products.CMFPlone.resources.browser\n-        path = os.path.dirname(Products.CMFPlone.resources.browser.__file__)\n-        view.index = ViewPageTemplateFile(\'scripts.pt\', path)\n         view.update()\n+        rendered = view.render()\n+        self.assertTrue(\'async=\' in rendered)\n+        self.assertTrue(\'defer=\' not in rendered)\n \n-        self.assertTrue(\'async="async"\' not in view.index(view))\n-        self.assertTrue(\'defer="defer"\' not in view.index(view))\n-\n-        bundles[\'plone\'].load_async = True\n-        bundles[\'plone\'].load_defer = True\n-        self.assertEqual(view.index(view).count(\'async="async"\'), 0)\n-        self.assertEqual(view.index(view).count(\'defer="defer"\'), 0)\n-\n-        bundles[\'plone\'].merge_with = \'\'\n-        bundles[\'plone\'].load_async = True\n-        bundles[\'plone\'].load_defer = True\n-        self.assertEqual(view.index(view).count(\'async="async"\'), 1)\n-        self.assertEqual(view.index(view).count(\'defer="defer"\'), 1)\n-\n-        bundles[\'plone\'].merge_with = \'\'\n-        bundles[\'plone\'].load_async = True\n-        bundles[\'plone\'].load_defer = True\n-        bundles[\'plone-logged-in\'].merge_with = \'\'\n-        bundles[\'plone-logged-in\'].load_async = True\n-        bundles[\'plone-logged-in\'].load_defer = True\n-        self.assertEqual(view.index(view).count(\'async="async"\'), 2)\n-        self.assertEqual(view.index(view).count(\'defer="defer"\'), 2)\n-\n-\n-class TestConfigJs(PloneTestCase.PloneTestCase):\n-\n-    def test_init_shim_works_with_function(self):\n-        config = self.portal.restrictedTraverse(\'config.js\')()\n-        self.assertTrue(\'init: function\' in config)\n-\n-\n-class TestControlPanel(PloneTestCase.PloneTestCase):\n-\n-    def test_save_override_file(self):\n-        req = self.layer[\'request\']\n-        req.environ[\'PATH_INFO\'] = \'++plone++foo/bar.css\'\n-        mng = OverrideFolderManager(self.portal)\n-        mng.save_file(\'foo/bar.css\', \'foobar\')\n-        value = self.portal.restrictedTraverse(\'++plone++foo/bar.css\')\n-        self.assertEqual(value.data, b\'foobar\')\n-\n-    def test_override_rewrite_links(self):\n-        req = self.layer[\'request\']\n-        req.environ[\'PATH_INFO\'] = \'++plone++foo/bar.css\'\n-        mng = OverrideFolderManager(self.portal)\n-        css = """\n-.foo {{\n-    background-image: url("{site_url}/foobar.css");\n-}}\n-.bar {{\n-    background-image: url("{site_url}/++plone++foo/bar/foobar.css");\n-}}\n-.foobar {{\n-    background-image: url("{site_url}/foo/bar/foobar.css");\n-}}""".format(site_url=self.portal.absolute_url())\n-        mng.save_file(\'foo/bar.css\', css)\n-        value = self.portal.restrictedTraverse(\'++plone++foo/bar.css\')\n-        match = b"""\n-.foo {\n-    background-image: url("../foobar.css");\n-}\n-.bar {\n-    background-image: url("bar/foobar.css");\n-}\n-.foobar {\n-    background-image: url("../foo/bar/foobar.css");\n-}"""\n-        self.assertEqual(value.data, match)\n-\n-    def test_get_require_js_config_uses_stub_modules(self):\n-        view = ResourceRegistryControlPanelView(\n-            self.portal, self.layer[\'request\'])\n-        self.layer[\'request\'].form[\'bundle\'] = \'plone-logged-in\'\n-        config = json.loads(view.js_build_config())\n-        self.assertEqual(config[\'paths\'][\'jquery\'], \'empty:\')\n-\n-\n-class DummyResource:\n-    def __init__(self, name):\n-        self.js = name\n-        self.css = [name, ]\n-\n-\n-class DummyBundle:\n-    def __init__(self, name, enabled=True):\n-        self.__prefix__ = \'test/\' + name\n-        self.compile = True\n-        self.conditionalcomment = None\n-        self.csscompilation = \'++resource++\' + name + \'.css\'\n-        self.depends = None\n-        self.enabled = enabled\n-        self.expression = None\n-        self.jscompilation = \'++resource++\' + name + \'.js\'\n-        self.last_compilation = \'123\'\n-        self.resources = []\n-\n-\n-class TestScriptsViewlet(PloneTestCase.PloneTestCase):\n+    def test_bundle_defer_async(self):\n+        bundle = self._make_test_bundle()\n+        bundle.load_async = True\n+        bundle.load_defer = True\n+        view = ScriptsView(self.app, self.app.REQUEST, None, None)\n+        view.update()\n+        rendered = view.render()\n+        self.assertTrue(\'async=\' in rendered)\n+        self.assertTrue(\'defer=\' in rendered)\n \n     def test_scripts_viewlet(self):\n-        scripts = ScriptsView(\n-            self.layer[\'portal\'],\n-            self.layer[\'request\'],\n-            None\n-        )\n+        scripts = ScriptsView(self.layer["portal"], self.layer["request"], None)\n         scripts.update()\n-        results = scripts.scripts()\n-        self.assertEqual(results[0][\'bundle\'], \'production\')\n-        self.assertTrue(results[0][\'src\'].startswith(\n-            \'http://nohost/plone/++plone++production/++unique++\'))\n-        self.assertTrue(results[0][\'src\'].endswith(\'/default.js\'))\n-        self.assertEqual(results[1][\'bundle\'], \'production\')\n-        self.assertTrue(results[1][\'src\'].startswith(\n-            \'http://nohost/plone/++plone++production/++unique++\'))\n-        self.assertTrue(results[1][\'src\'].endswith(\'/logged-in.js\'))\n-        self.assertEqual(len(results), 2)\n+        results = scripts.render()\n+        self.assertIn(\n+            "++plone++static/bundle-bootstrap/js/bootstrap.bundle.min.js", results\n+        )\n+        self.assertIn("++plone++static/bundle-plone/bundle.min.js", results)\n+        self.assertIn("http://nohost/plone/++webresource++", results)\n \n     def test_scripts_viewlet_anonymous(self):\n         logout()\n-        scripts = ScriptsView(\n-            self.layer[\'portal\'],\n-            self.layer[\'request\'],\n-            None\n-        )\n+        scripts = ScriptsView(self.layer["portal"], self.layer["request"], None)\n         scripts.update()\n-        results = scripts.scripts()\n-        self.assertEqual(results[0][\'bundle\'], \'production\')\n-        self.assertTrue(results[0][\'src\'].startswith(\n-            \'http://nohost/plone/++plone++production/++unique++\'))\n-        self.assertTrue(results[0][\'src\'].endswith(\'/default.js\'))\n-        self.assertEqual(len(results), 1)\n-\n-    @mock.patch.object(\n-        ScriptsView,\n-        \'get_resources\',\n-        new=lambda self: {\'foo\': DummyResource(\'++resource++foo.js\')}\n-    )\n-    def test_request_resources(self):\n-        add_resource_on_request(self.layer[\'request\'], \'foo\')\n-        scripts = ScriptsView(\n-            self.layer[\'portal\'],\n-            self.layer[\'request\'],\n-            None\n+        results = scripts.render()\n+        self.assertIn(\n+            "++plone++static/bundle-bootstrap/js/bootstrap.bundle.min.js", results\n         )\n-        scripts.update()\n-        results = scripts.scripts()\n-        self.assertEqual(\n-            results[-1], {\'src\': \'http://nohost/plone/++resource++foo.js\',\n-                          \'conditionalcomment\': \'\',\n-                          \'resetrjs\': False,\n-                          \'bundle\': \'none\'})\n-\n-    def test_request_resources_not_add_same_twice(self):\n-        req = self.layer[\'request\']\n-        add_resource_on_request(req, \'foo\')\n-        add_resource_on_request(req, \'foo\')\n-\n-        self.assertEqual(len(req.enabled_resources), 1)\n+        self.assertIn("++plone++static/bundle-plone/bundle.min.js", results)\n+        self.assertIn("http://nohost/plone/++webresource++", results)\n \n     def test_request_bundles_not_add_same_twice(self):\n-        req = self.layer[\'request\']\n-        add_bundle_on_request(req, \'foo\')\n-        add_bundle_on_request(req, \'foo\')\n+        req = self.layer["request"]\n+        add_bundle_on_request(req, "foo")\n+        add_bundle_on_request(req, "foo")\n \n         self.assertEqual(len(req.enabled_bundles), 1)\n \n-    @mock.patch.object(\n-        ScriptsView,\n-        \'get_bundles\',\n-        new=lambda self: {\'foo\': Bundle(DummyBundle(\'foo\', enabled=False))}\n-    )\n+    def test_disabled_bundle_not_rendered(self):\n+        # request\n+        req = self.layer["request"]\n+\n+        # create a subrequest.\n+        subreq = req.clone()\n+        subreq["PARENT_REQUEST"] = req\n+\n+        scripts = ScriptsView(self.layer["portal"], subreq, None)\n+\n+        # add some bundle to test with\n+        bundle = self._make_test_bundle()\n+        bundle.enabled = False\n+        scripts.update()\n+        result = scripts.render()\n+        self.assertNotIn("http://foo.bar/foobar.js", result)\n+\n     def test_add_bundle_on_request_with_subrequest(self):\n-        req = self.layer[\'request\']\n+        # request\n+        req = self.layer["request"]\n \n         # create a subrequest.\n         subreq = req.clone()\n-        subreq[\'PARENT_REQUEST\'] = req\n+        subreq["PARENT_REQUEST"] = req\n \n         # add a bundle via the main request\n-        add_bundle_on_request(req, \'foo\')\n-\n-        scripts = ScriptsView(self.layer[\'portal\'], subreq, None)\n-\n-        # Send resource registry in development mode\n-        # Via a fake registry to allow accessing like this:\n-        # self.registry.records[\'plone.resources.development\'].value\n-        scripts.registry = type(\n-            \'reg\',\n-            (object, ),\n-            {\'records\': {\n-                \'plone.resources.development\': type(\n-                    \'val\',\n-                    (object, ),\n-                    {\'value\': True}\n-                )()\n-            }}\n-        )()\n-        self.assertTrue(scripts.development)\n+        add_bundle_on_request(req, "foobar")\n \n+        scripts = ScriptsView(self.layer["portal"], subreq, None)\n+\n+        # add some bundle to test with\n+        bundle = self._make_test_bundle()\n+        bundle.enabled = False\n         scripts.update()\n-        result = scripts.scripts()[-1]\n-        self.assertEqual(\n-            result[\'src\'],\n-            \'http://nohost/plone/++resource++foo.js?version=123\'\n-        )\n-        self.assertEqual(\n-             result[\'conditionalcomment\'],\n-             None\n-        )\n-        self.assertEqual(\n-            result[\'bundle\'],\n-            \'foo\',\n-        )\n-        self.assertEqual(\n-            result[\'async\'],\n-            None\n-        )\n-        self.assertEqual(\n-            result[\'defer\'],\n-            None\n-        )\n+        result = scripts.render()\n+        self.assertIn("http://foo.bar/foobar.js", result)\n \n-    @mock.patch.object(\n-        ScriptsView,\n-        \'get_bundles\',\n-        new=lambda self: {\'foo\': Bundle(DummyBundle(\'foo\', enabled=True))}\n-    )\n     def test_remove_bundle_on_request_with_subrequest(self):\n-        req = self.layer[\'request\']\n+        # request\n+        req = self.layer["request"]\n \n         # create a subrequest.\n         subreq = req.clone()\n-        subreq[\'PARENT_REQUEST\'] = req\n-\n-        # remove the enabled \'foo\' bundle\n-        remove_bundle_on_request(req, \'foo\')\n-\n-        scripts = ScriptsView(self.layer[\'portal\'], subreq, None)\n-\n-        # Send resource registry in development mode\n-        # Via a fake registry to allow accessing like this:\n-        # self.registry.records[\'plone.resources.development\'].value\n-        scripts.registry = type(\n-            \'reg\',\n-            (object, ),\n-            {\'records\': {\n-                \'plone.resources.development\': type(\n-                    \'val\',\n-                    (object, ),\n-                    {\'value\': True}\n-                )()\n-            }}\n-        )()\n-        self.assertTrue(scripts.development)\n+        subreq["PARENT_REQUEST"] = req\n+\n+        # add a bundle via the main request\n+        add_bundle_on_request(req, "foobar")\n \n+        scripts = ScriptsView(self.layer["portal"], subreq, None)\n+\n+        # add some bundle to test with\n+        bundle = self._make_test_bundle()\n+        bundle.enabled = True\n         scripts.update()\n-        results = scripts.scripts()\n-        self.assertEqual(\n-            [i for i in results if \'foo\' in i[\'src\']],\n-            []\n-        )\n+        result = scripts.render()\n+        self.assertNotIn("http://test.foo/test.css", result)\n \n-    @mock.patch.object(\n-        ScriptsView,\n-        \'get_resources\',\n-        new=lambda self: {\'foo\': DummyResource(\'++resource++foo.js\')}\n-    )\n-    @mock.patch.object(\n-        StylesView,\n-        \'get_resources\',\n-        new=lambda self: {\'foo\': DummyResource(\'++resource++foo.css\')}\n-    )\n-    def test_add_resource_on_request_with_subrequest(self):\n-        """Check, if a resource added at a main request is picked up from a\n-        subrequest for creating the header scripts section.\n-        """\n-        req = self.layer[\'request\']\n+class TestStylesViewlet(PloneTestCase.PloneTestCase):\n+    def test_styles_viewlet(self):\n+        styles = StylesView(self.layer["portal"], self.layer["request"], None)\n+        styles.update()\n+        results = styles.render()\n+        self.assertIn("++theme++barceloneta/css/barceloneta.min.css", results)\n+        self.assertIn("http://nohost/plone/++webresource++", results)\n+\n+    def test_styles_viewlet_anonymous(self):\n+        logout()\n+        styles = StylesView(self.layer["portal"], self.layer["request"], None)\n+        styles.update()\n+        results = styles.render()\n+        self.assertIn("++theme++barceloneta/css/barceloneta.min.css", results)\n+        self.assertIn("http://nohost/plone/++webresource++", results)\n+\n+    def test_request_bundles_not_add_same_twice(self):\n+        req = self.layer["request"]\n+        add_bundle_on_request(req, "foo")\n+        add_bundle_on_request(req, "foo")\n+        self.assertEqual(len(req.enabled_bundles), 1)\n+\n+    def test_add_bundle_on_request_with_subrequest(self):\n+        # request\n+        req = self.layer["request"]\n \n         # create a subrequest.\n         subreq = req.clone()\n-        subreq[\'PARENT_REQUEST\'] = req\n+        subreq["PARENT_REQUEST"] = req\n+\n+        # add a bundle via the main request\n+        add_bundle_on_request(req, "testbundle")\n \n-        # add a resource to main request\n-        add_resource_on_request(req, \'foo\')\n+        scripts = ScriptsView(self.layer["portal"], subreq, None)\n+\n+        # add some bundle to test with\n+        registry = getUtility(IRegistry)\n+        data = {\n+            "jscompilation": ("http://test.foo/test.min.js", regfield.TextLine()),\n+            "csscompilation": ("http://test.foo/test.css", regfield.TextLine()),\n+            "expression": ("", regfield.TextLine()),\n+            "enabled": (False, regfield.Bool()),\n+            "depends": ("", regfield.TextLine()),\n+            "load_async": (True, regfield.Bool()),\n+            "load_defer": (True, regfield.Bool()),\n+        }\n+        for key, regdef in data.items():\n+            record = Record(regdef[1])\n+            record.value = regdef[0]\n+            registry.records[f"plone.bundles/testbundle.{key}"] = record\n \n-        scripts = ScriptsView(self.layer[\'portal\'], subreq, None)\n         scripts.update()\n-        results = scripts.scripts()\n-        self.assertEqual(\n-            results[-1],\n-            {\n-                \'src\': \'http://nohost/plone/++resource++foo.js\',\n-                \'conditionalcomment\': \'\',\n-                \'resetrjs\': False,\n-                \'bundle\': \'none\',\n-            }\n-        )\n+        result = scripts.render()\n+        self.assertIn("http://test.foo/test.min.js", result)\n \n-        styles = StylesView(self.layer[\'portal\'], subreq, None)\n-        styles.update()\n-        results = styles.styles()\n-        self.assertListEqual(\n-            list(filter(lambda it: \'foo\' in it[\'src\'], results)),\n-            [{\n-                \'src\': \'http://nohost/plone/++resource++foo.css\',\n-                \'conditionalcomment\': \'\',\n-                \'rel\': \'stylesheet\',\n-                \'bundle\': \'none\',\n-            }]\n-        )\n+    def test_remove_bundle_on_request_with_subrequest(self):\n+        # request\n+        req = self.layer["request"]\n+\n+        # create a subrequest.\n+        subreq = req.clone()\n+        subreq["PARENT_REQUEST"] = req\n+\n+        # remove a bundle via the main request\n+        remove_bundle_on_request(req, "testbundle")\n+\n+        scripts = ScriptsView(self.layer["portal"], subreq, None)\n+\n+        # add some bundle to test with\n+        registry = getUtility(IRegistry)\n+        data = {\n+            "jscompilation": ("http://test.foo/test.min.js", regfield.TextLine()),\n+            "csscompilation": ("http://test.foo/test.css", regfield.TextLine()),\n+            "expression": ("", regfield.TextLine()),\n+            "enabled": (True, regfield.Bool()),\n+            "depends": ("", regfield.TextLine()),\n+            "load_async": (True, regfield.Bool()),\n+            "load_defer": (True, regfield.Bool()),\n+        }\n+        for key, regdef in data.items():\n+            record = Record(regdef[1])\n+            record.value = regdef[0]\n+            registry.records[f"plone.bundles/testbundle.{key}"] = record\n+\n+        scripts.update()\n+        result = scripts.render()\n+        self.assertNotIn("http://test.foo/test.min.js", result)\ndiff --git a/Products/CMFPlone/tests/test_metabundles.py b/Products/CMFPlone/tests/test_metabundles.py\ndeleted file mode 100644\nindex 57874b4b3f..0000000000\n--- a/Products/CMFPlone/tests/test_metabundles.py\n+++ /dev/null\n@@ -1,144 +0,0 @@\n-from plone.resource.interfaces import IResourceDirectory\n-from Products.CMFPlone.interfaces.resources import (\n-    OVERRIDE_RESOURCE_DIRECTORY_NAME,\n-)\n-from zope.component import getUtility\n-\n-from Products.CMFPlone.resources.browser.combine import (\n-    PRODUCTION_RESOURCE_DIRECTORY,\n-    combine_bundles,\n-)\n-from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n-from Products.GenericSetup.tests import common\n-\n-import unittest\n-\n-\n-class DummyImportContext(common.DummyImportContext):\n-    # Copied from plone.app.registry tests.\n-    # This expands the context with directories.\n-\n-    _directories = {}\n-\n-    def listDirectory(self, path):\n-        return self._directories.get(path, [])\n-\n-    def isDirectory(self, path):\n-        return path in self._directories\n-\n-\n-class ProductsCMFPloneSetupTest(unittest.TestCase):\n-\n-    layer = PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n-\n-    def setUp(self):\n-        self.portal = self.layer[\'portal\']\n-        combine_bundles(self.portal)\n-        persistent_directory = getUtility(\n-            IResourceDirectory, name="persistent")\n-        container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n-        self.production_folder = container[PRODUCTION_RESOURCE_DIRECTORY]\n-\n-    def test_production_directory(self):\n-        self.assertEqual(\n-            self.production_folder.listDirectory(),\n-            [\n-                \'default.css\',\n-                \'default.js\',\n-                \'logged-in.css\',\n-                \'logged-in.js\',\n-                \'timestamp.txt\'\n-            ]\n-        )\n-\n-    def test_default_js_bundle(self):\n-        self.assertIn(\n-            b"jQuery",\n-            self.production_folder.readFile(\'default.js\')\n-        )\n-\n-    def test_overrides(self):\n-        persistent_directory = getUtility(\n-            IResourceDirectory, name="persistent")\n-        container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n-        container.makeDirectory(\'static\')\n-        static = container[\'static\']\n-        static.writeFile(\'plone-legacy-compiled.js\', \'alert("Overrided legacy!");\')\n-        combine_bundles(self.portal)\n-        self.assertIn(\n-            b\'alert("Overrided legacy!");\',\n-            self.production_folder.readFile(\'default.js\')\n-        )\n-\n-    def test_import(self):\n-        # If IBundleRegistry is in registry.xml, the combine-bundles import step\n-        # will call combine_bundles.\n-        from Products.CMFPlone.resources.exportimport.bundles import combine\n-        # from Products.CMFPlone.resources.browser.combine import get_override_directory\n-        # from Products.CMFPlone.resources.browser.combine import PRODUCTION_RESOURCE_DIRECTORY\n-\n-        # Prepare some registry xml files with or without the key IBundleRegistry.\n-        xml_with = b\'<registry>with IBundleRegistry</registry>\'\n-        xml_without = b\'<registry>without bundle registry</registry>\'\n-        xml_without2 = b\'<registry>without bundle registry</registry>\'\n-        context = DummyImportContext(self.portal, purge=False)\n-\n-        def get_timestamp():\n-            # If combine_bundles is run, a timestamp is updated.\n-            return self.production_folder.readFile(\'timestamp.txt\')\n-\n-        ts1 = get_timestamp()\n-        self.assertTrue(ts1)\n-\n-        # call the import step on a file without bundles\n-        context._files = {\'registry.xml\': xml_without}\n-        combine(context)\n-        ts2 = get_timestamp()\n-        self.assertEqual(ts1, ts2)\n-\n-        # call the import step on a file with bundles\n-        context._files = {\'registry.xml\': xml_with}\n-        combine(context)\n-        ts3 = get_timestamp()\n-        self.assertLess(ts2, ts3)\n-\n-        # call the import step on a file without bundles\n-        context._files = {\'registry.xml\': xml_without2}\n-        combine(context)\n-        ts4 = get_timestamp()\n-        self.assertEqual(ts3, ts4)\n-\n-        # Since Plone 5.1 the registry xml can also be a directory.\n-        # Set one file with bundles.\n-        context._files = {\n-            \'registry.xml\': xml_without,\n-            \'registry/foo2.xml\': xml_with,\n-            \'registry/foo3.xml\': xml_without2,\n-        }\n-        context._directories = {\n-            \'registry\': [\n-                \'foo2.xml\',\n-                \'foo3.xml\',\n-            ]\n-        }\n-        combine(context)\n-        ts10 = get_timestamp()\n-        self.assertLess(ts4, ts10)\n-\n-        # The registry.xml file itself may be missing.\n-        context._files = {\n-            \'registry/foo2.xml\': xml_with,\n-            \'registry/foo3.xml\': xml_without2,\n-        }\n-        combine(context)\n-        ts11 = get_timestamp()\n-        self.assertLess(ts10, ts11)\n-\n-        # Now without any bundle info.\n-        context._files = {\n-            \'registry/foo2.xml\': xml_without,\n-            \'registry/foo3.xml\': xml_without2,\n-        }\n-        combine(context)\n-        ts12 = get_timestamp()\n-        self.assertEqual(ts11, ts12)\ndiff --git a/news/3325.breaking b/news/3325.breaking\nnew file mode 100644\nindex 0000000000..a34eda5b42\n--- /dev/null\n+++ b/news/3325.breaking\n@@ -0,0 +1,14 @@\n+New resource registry to simplify CSS/JS registration.\n+\n+- Completely (almost) rewritten ResourceRegistry based on the "webresource" project.\n+- removed >1600LOC.\n+- Sane dependency resolution using "webresource".\n+- Only "bundles" are registered - support of "resources" and "bundle resources" is removed.\n+- Some of the old bundle registry properties are deprecated and unused.\n+- Removed TTW compilation of bundles via r.js and less.js.\n+- Property `merge_with` is no longer needed in HTTP/2 times and merging here unsupported.\n+- Unique key for delivery is based on hash of bundle file, `last_compilation` property is deprecated.\n+- A new traverser ensures uniqueness.\n+- Other related bundle properties are also deprecated.\n+- Comes with new, server side generated control panel.\n+[jensens]\ndiff --git a/setup.cfg b/setup.cfg\nindex fedd44695f..a9ab3befbf 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -5,9 +5,7 @@ extra-message = [ci skip]\n universal = 0\n \n [isort]\n+profile = black\n force_alphabetical_sort=True\n force_single_line=True\n lines_after_imports=2\n-line_length=80\n-not_skip=__init__.py\n-\ndiff --git a/setup.py b/setup.py\nindex c0563fc8eb..5728362ca5 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -37,7 +37,6 @@\n         \'AccessControl >= 4.0\',\n         \'Acquisition\',\n         \'borg.localrole\',\n-        \'calmjs.parse\',\n         \'DateTime\',\n         \'ExtensionClass\',\n         \'five.customerize\',\n@@ -104,10 +103,10 @@\n         \'Products.PortalTransforms\',\n         \'Products.SiteErrorLog\',\n         \'Products.statusmessages\',\n-        \'pyScss\',\n         \'setuptools>=36.2\',\n         \'transaction\',\n         \'plone.autoinclude\',\n+        \'webresource\',\n         \'ZODB3\',\n         \'Zope[wsgi] >= 4.0\',\n         \'zope.app.locales >= 3.6.0\',\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:19:53+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/95fa6d6aca95ae3cc09c1a0ff9f83c9e21056b68

PLIP 3211 - Deliver custom CSS again.

Files changed:
M Products/CMFPlone/resources/browser/resource.py
M Products/CMFPlone/resources/webresource.py

b'diff --git a/Products/CMFPlone/resources/browser/resource.py b/Products/CMFPlone/resources/browser/resource.py\nindex 3c6892cac7..1dc3c80609 100644\n--- a/Products/CMFPlone/resources/browser/resource.py\n+++ b/Products/CMFPlone/resources/browser/resource.py\n@@ -5,6 +5,7 @@\n from Acquisition import aq_parent\n from App.config import getConfiguration\n from plone.app.layout.viewlets.common import ViewletBase\n+from plone.app.theming.interfaces import IThemeSettings\n from plone.app.theming.utils import theming_policy\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.Expression import createExprContext\n@@ -148,7 +149,7 @@ def current_expression():\n         if themedata["production_js"]:\n             # we ignore development_js for external detection\n             external = themedata["production_js"].startswith("http")\n-            theme_script_resource = PloneScriptResource(\n+            PloneScriptResource(\n                 context=self.context,\n                 name="theme",\n                 depends="",\n@@ -170,7 +171,7 @@ def current_expression():\n         if themedata["production_css"]:\n             # we ignore development_css for external detection\n             external = themedata["production_css"].startswith("http")\n-            theme_resource_css = PloneStyleResource(\n+            PloneStyleResource(\n                 context=self.context,\n                 name="theme",\n                 depends="",\n@@ -187,6 +188,23 @@ def current_expression():\n                 media="all",\n                 rel="stylesheet",\n             )\n+\n+        # add Custom CSS\n+        registry = getUtility(IRegistry)\n+        theme_settings = registry.forInterface(IThemeSettings, False)\n+        if theme_settings.custom_css:\n+            PloneStyleResource(\n+                context=self.context,\n+                name="custom",\n+                depends="",\n+                resource="@@custom.css",\n+                include=True,\n+                unique=unique,\n+                group=root_group_css,\n+                media="all",\n+                rel="stylesheet",\n+            )\n+\n         self.renderer = {}\n         setattr(self.request, REQUEST_CACHE_KEY, self.renderer)\n         resolver_js = webresource.ResourceResolver(root_group_js)\ndiff --git a/Products/CMFPlone/resources/webresource.py b/Products/CMFPlone/resources/webresource.py\nindex 17e4ebf121..4bf96a686a 100644\n--- a/Products/CMFPlone/resources/webresource.py\n+++ b/Products/CMFPlone/resources/webresource.py\n@@ -15,7 +15,10 @@ def __init__(self, context, **kw):\n     @property\n     def file_data(self):\n         """Fetch data from using a resource via traversal"""\n-        return get_resource(self.context, self.resource)\n+        data = get_resource(self.context, self.resource)\n+        if isinstance(data, str):\n+            data = data.encode(\'utf8\')\n+        return data\n \n \n class PloneScriptResource(PloneBaseResource, ScriptResource):\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:20:31+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/af4da8d5cd37eefcbb0691395d8d5de29d658ca6

PLIP 3211 - Resource registry debug mode switching added.

Files changed:
M Products/CMFPlone/controlpanel/browser/resourceregistry.pt
M Products/CMFPlone/controlpanel/browser/resourceregistry.py

b'diff --git a/Products/CMFPlone/controlpanel/browser/resourceregistry.pt b/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\nindex 33d1f350f6..52ce5649a7 100644\n--- a/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\n+++ b/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\n@@ -22,6 +22,47 @@\n   </header>\n \n    <div id="content-core">\n+    <div tal:condition="python:view.global_debug_mode()"\n+         class="portalMessage statusmessage statusmessage-info alert alert-info"\n+         role="alert">\n+        <tal:icon tal:replace="structure python:icons.tag(\'plone-statusmessage-info\', tag_alt=\'\', tag_class=\'statusmessage-icon mb-1 me-2\')" />\n+        <strong i18n:translate="">Global Debug Mode Activated</strong>\n+        <span class="content"\n+              i18n:translate="">\n+            This is great for development.\n+            Resource hashes will be recalculated on each request.\n+            This is expensive, do not use use in production!\n+        </span>\n+    </div>\n+    <form tal:condition="python:not view.global_debug_mode() and view.debug_mode()"\n+          method="post" action="${python:context.absolute_url()}/@@resourceregistry-controlpanel">\n+      <div class="portalMessage statusmessage statusmessage-info alert alert-warning"\n+         role="alert">\n+          <button name="action" value="deactivate_cache" type="submit" class="btn btn-primary ms-1 me-1 mb-1 float-end">Deactivate</button>\n+        <tal:icon tal:replace="structure python:icons.tag(\'plone-statusmessage-warning\', tag_alt=\'\', tag_class=\'statusmessage-icon mb-1\')" />\n+        <strong i18n:translate="">Resource Debug Mode Activated</strong>\n+        <span class="content"\n+              i18n:translate="">\n+            Resources are not cached in Plone.\n+            Their hashes will be recalculated on each request.\n+            This is expensive, do not use use in production!\n+        </span>\n+      </div>\n+    </form>\n+    <form tal:condition="python:not view.global_debug_mode() and not view.debug_mode()"\n+          method="post" action="${python:context.absolute_url()}/@@resourceregistry-controlpanel">\n+      <div class="portalMessage statusmessage statusmessage-info alert alert-info"\n+         role="alert">\n+          <button name="action" value="activate_cache" type="submit" class="btn btn-primary ms-1 me-1 mb-1 float-end">Activate Debug Mode</button>\n+        <tal:icon tal:replace="structure python:icons.tag(\'plone-statusmessage-info\', tag_alt=\'\', tag_class=\'statusmessage-icon mb-1\')" />\n+        <strong i18n:translate="">Production Mode Activated</strong>\n+        <span class="content"\n+              i18n:translate="">\n+            Resources are fast and hashes are cached in Plone.\n+            Changes in resource settings are not applied directly.\n+        </span>\n+      </div>\n+    </form>\n     <div class="accordion" id="accordionRR" tal:define="dummy python:view.process_form()">\n       <div class="accordion-item "\n            tal:repeat="bundle python:view.bundles_data">\n@@ -86,6 +127,23 @@\n         </div>\n       </div>\n     </div>\n+    <div class="mt-3">\n+      <h2 i18n:translate="">Additional Resources</h2>\n+      <p i18n:translate="">After the above resources, the following might get loaded:</p>\n+      <dl>\n+        <dt i18n:translate="">Theme CSS and JavaScript</dt>\n+        <dd i18n:translate="">\n+          The activated Plone-Theme usually provides one CSS bundle and sometimes a javascript bundle.\n+        </dd>\n+        <dt i18n:translate="">Custom CSS</dt>\n+        <dd i18n:translate="">\n+          At last a custom CSS is loaded, if non-empty.\n+          It can be used to override the previous loaded CSS.\n+          It is provided for tinkerers and those in need of urgent through-the-web changes.\n+          Hint: <a href="${python:context.absolute_url()}/@@theming-controlpanel#autotoc-item-autotoc-1" i18n:name="link" i18n:translate="">Edit the Custom CSS in the Theming-Control-Panel</a>.\n+        </dd>\n+      </dl>\n+    </div>\n    </div>\n </metal:main>\n \ndiff --git a/Products/CMFPlone/controlpanel/browser/resourceregistry.py b/Products/CMFPlone/controlpanel/browser/resourceregistry.py\nindex 02c91648f3..d668589794 100644\n--- a/Products/CMFPlone/controlpanel/browser/resourceregistry.py\n+++ b/Products/CMFPlone/controlpanel/browser/resourceregistry.py\n@@ -1,3 +1,4 @@\n+from App.config import getConfiguration\n from plone.registry import field\n from plone.registry.interfaces import IRegistry\n from plone.registry.record import Record\n@@ -43,6 +44,13 @@ def bundles_data(self):\n         })\n         return result\n \n+    def global_debug_mode(self):\n+        return getConfiguration().debug_mode\n+\n+    def debug_mode(self):\n+        registry = getUtility(IRegistry)\n+        return registry["plone.resources.development"]\n+\n     def _add(self):\n         name = self.request.form.get("name", None)\n         if name is None or name == "":\n@@ -91,6 +99,7 @@ def _set_data_from_form(self, record):\n         for field_name, value in data.items():\n             full_name = record.__prefix__ + field_name\n             record.__registry__[full_name] = value\n+        self._switch_cache(False)\n \n     def _delete(self):\n         name = self.request.form.get("original_name", None)\n@@ -99,8 +108,13 @@ def _delete(self):\n             IStatusMessage(self.request).addStatusMessage(_(f"Expected record {name} missing."), "error")\n             return\n         del bundles[name]\n+        self._switch_cache(False)\n         IStatusMessage(self.request).addStatusMessage(_("Record deleted."), "info")\n \n+    def _switch_cache(self, state):\n+        registry = getUtility(IRegistry)\n+        registry["plone.resources.development"] = state\n+\n     def process_form(self):\n         if self.request["method"] != "POST":\n             return\n@@ -111,6 +125,10 @@ def process_form(self):\n             self._update()\n         elif action == "delete":\n             self._delete()\n+        elif action == "activate_cache":\n+            self._switch_cache(True)\n+        elif action == "deactivate_cache":\n+            self._switch_cache(False)\n         else:\n             raise ValueError("Invalid form data")\n         self.request.response.redirect(self.request[\'ACTUAL_URL\'])\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:20:47+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/81baefb49ead4090aa6ff5a32e80ac269ef74551

PLIP 3211 - Code formatting resource registries.

Files changed:
M Products/CMFPlone/controlpanel/browser/resourceregistry.py
M Products/CMFPlone/interfaces/resources.py
M Products/CMFPlone/resources/__init__.py
M Products/CMFPlone/resources/browser/resource.py
M Products/CMFPlone/resources/utils.py
M Products/CMFPlone/resources/webresource.py
M Products/CMFPlone/tests/testResourceRegistries.py

b'diff --git a/Products/CMFPlone/controlpanel/browser/resourceregistry.py b/Products/CMFPlone/controlpanel/browser/resourceregistry.py\nindex d668589794..b51cd70188 100644\n--- a/Products/CMFPlone/controlpanel/browser/resourceregistry.py\n+++ b/Products/CMFPlone/controlpanel/browser/resourceregistry.py\n@@ -1,7 +1,5 @@\n from App.config import getConfiguration\n-from plone.registry import field\n from plone.registry.interfaces import IRegistry\n-from plone.registry.record import Record\n from Products.CMFPlone import PloneMessageFactory as _\n from Products.CMFPlone.interfaces import IBundleRegistry\n from Products.Five.browser import BrowserView\n@@ -9,6 +7,8 @@\n from zope.component import getUtility\n \n import operator\n+\n+\n class ResourceRegistryControlPanelView(BrowserView):\n     @property\n     def _bundles(self):\n@@ -21,27 +21,31 @@ def _bundles(self):\n     def bundles_data(self):\n         result = []\n         for name, record in self._bundles.items():\n-            result.append({\n-                "name": name,\n-                "jscompilation": record.jscompilation,\n-                "csscompilation": record.csscompilation,\n-                "expression": record.expression,\n-                "enabled": record.enabled,\n-                "depends": record.depends,\n-                "load_async": record.load_async,\n-                "load_defer": record.load_defer,\n-            })\n-        result = list(sorted(result, key=operator.itemgetter(\'name\')))\n-        result.append({\n-            "name": "",\n-            "jscompilation": "",\n-            "csscompilation": "",\n-            "expression": "",\n-            "enabled": False,\n-            "depends": "",\n-            "load_async": False,\n-            "load_defer": False,\n-        })\n+            result.append(\n+                {\n+                    "name": name,\n+                    "jscompilation": record.jscompilation,\n+                    "csscompilation": record.csscompilation,\n+                    "expression": record.expression,\n+                    "enabled": record.enabled,\n+                    "depends": record.depends,\n+                    "load_async": record.load_async,\n+                    "load_defer": record.load_defer,\n+                }\n+            )\n+        result = list(sorted(result, key=operator.itemgetter("name")))\n+        result.append(\n+            {\n+                "name": "",\n+                "jscompilation": "",\n+                "csscompilation": "",\n+                "expression": "",\n+                "enabled": False,\n+                "depends": "",\n+                "load_async": False,\n+                "load_defer": False,\n+            }\n+        )\n         return result\n \n     def global_debug_mode(self):\n@@ -54,29 +58,41 @@ def debug_mode(self):\n     def _add(self):\n         name = self.request.form.get("name", None)\n         if name is None or name == "":\n-            IStatusMessage(self.request).addStatusMessage(_("Name can not be empty."), "error")\n+            IStatusMessage(self.request).addStatusMessage(\n+                _("Name can not be empty."), "error"\n+            )\n             return\n         bundles = self._bundles\n         if name in bundles:\n-            IStatusMessage(self.request).addStatusMessage(_(f"Record {name} already exists."), "error")\n+            IStatusMessage(self.request).addStatusMessage(\n+                _(f"Record {name} already exists."), "error"\n+            )\n             return\n         record = bundles.add(name)\n         self._set_data_from_form(record)\n-        IStatusMessage(self.request).addStatusMessage(_(f"Record {name} created."), "info")\n+        IStatusMessage(self.request).addStatusMessage(\n+            _(f"Record {name} created."), "info"\n+        )\n \n     def _update(self):\n         new_name = self.request.form.get("name", None)\n         if new_name is None or new_name == "":\n-            IStatusMessage(self.request).addStatusMessage(_("Name can not be empty."), "error")\n+            IStatusMessage(self.request).addStatusMessage(\n+                _("Name can not be empty."), "error"\n+            )\n             return\n         original_name = self.request.form.get("original_name", None)\n         bundles = self._bundles\n         if new_name != original_name:\n             if original_name not in bundles:\n-                IStatusMessage(self.request).addStatusMessage(_("Expected record missing."), "error")\n+                IStatusMessage(self.request).addStatusMessage(\n+                    _("Expected record missing."), "error"\n+                )\n                 return\n             if new_name in bundles:\n-                IStatusMessage(self.request).addStatusMessage(_(f"Record name {new_name} already taken."), "error")\n+                IStatusMessage(self.request).addStatusMessage(\n+                    _(f"Record name {new_name} already taken."), "error"\n+                )\n                 return\n             record = bundles[original_name]\n             del bundles[original_name]\n@@ -88,11 +104,7 @@ def _update(self):\n \n     def _set_data_from_form(self, record):\n         names = record.__schema__.names()\n-        data = {\n-            k: v\n-            for k, v in self.request.form.items()\n-            if k in names\n-        }\n+        data = {k: v for k, v in self.request.form.items() if k in names}\n         bool_names = ["enabled", "load_async", "load_defer"]\n         for bool_name in bool_names:\n             data[bool_name] = bool_name in data\n@@ -105,7 +117,9 @@ def _delete(self):\n         name = self.request.form.get("original_name", None)\n         bundles = self._bundles\n         if name not in bundles:\n-            IStatusMessage(self.request).addStatusMessage(_(f"Expected record {name} missing."), "error")\n+            IStatusMessage(self.request).addStatusMessage(\n+                _(f"Expected record {name} missing."), "error"\n+            )\n             return\n         del bundles[name]\n         self._switch_cache(False)\n@@ -118,7 +132,7 @@ def _switch_cache(self, state):\n     def process_form(self):\n         if self.request["method"] != "POST":\n             return\n-        action = self.request.form[\'action\']\n+        action = self.request.form["action"]\n         if action == "add":\n             self._add()\n         elif action == "update":\n@@ -131,4 +145,4 @@ def process_form(self):\n             self._switch_cache(False)\n         else:\n             raise ValueError("Invalid form data")\n-        self.request.response.redirect(self.request[\'ACTUAL_URL\'])\n+        self.request.response.redirect(self.request["ACTUAL_URL"])\ndiff --git a/Products/CMFPlone/interfaces/resources.py b/Products/CMFPlone/interfaces/resources.py\nindex 6b2a9bfc40..e26304814d 100644\n--- a/Products/CMFPlone/interfaces/resources.py\n+++ b/Products/CMFPlone/interfaces/resources.py\n@@ -14,37 +14,32 @@ class IResourceRegistry(zope.interface.Interface):\n \n     # DEPRECATED\n \n-    url = schema.ASCIILine(\n-        title=_("Resources base URL"),\n-        required=False)\n+    url = schema.ASCIILine(title=_("Resources base URL"), required=False)\n \n-    js = schema.ASCIILine(\n-        title=_("Main js file"),\n-        required=False)\n+    js = schema.ASCIILine(title=_("Main js file"), required=False)\n \n     css = schema.List(\n         title=_("CSS/LESS files"),\n         value_type=schema.ASCIILine(title=_("URL")),\n         default=[],\n-        required=False)\n+        required=False,\n+    )\n \n-    init = schema.ASCIILine(\n-        title=_("Init instruction for shim"),\n-        required=False)\n+    init = schema.ASCIILine(title=_("Init instruction for shim"), required=False)\n \n     deps = schema.ASCIILine(\n         title=_("Dependencies for shim"),\n         description=_("Comma separated values of resource for shim"),\n-        required=False)\n+        required=False,\n+    )\n \n-    export = schema.ASCIILine(\n-        title=_("Export vars for shim"),\n-        required=False)\n+    export = schema.ASCIILine(title=_("Export vars for shim"), required=False)\n \n     conf = schema.Text(\n         title=_("Configuration in JSON for the widget"),\n         description=_("Should be accessible on @@getWCconfig?id=name"),\n-        required=False)\n+        required=False,\n+    )\n \n \n class IBundleRegistry(zope.interface.Interface):\ndiff --git a/Products/CMFPlone/resources/__init__.py b/Products/CMFPlone/resources/__init__.py\nindex 8816d98ea7..092fcafe89 100644\n--- a/Products/CMFPlone/resources/__init__.py\n+++ b/Products/CMFPlone/resources/__init__.py\n@@ -10,12 +10,12 @@\n     "Adding single resources is no longer supported in Plone 6, use \'add_bundle_on_request\' instead"\n )\n def add_resource_on_request(request, resource):\n-    """(DEPRECATED) Adds the resource to the request"""\n+    """(DEPRECATED) Adds the resource to the request."""\n     return\n \n \n def add_bundle_on_request(request, bundle):\n-    """Adds the bundle to the request"""\n+    """Adds the bundle to the request."""\n     if not isinstance(bundle, str):\n         raise ValueError("add_bundle_on_request expects a string value for bundle")\n     request.enabled_bundles = getattr(request, "enabled_bundles", [])\n@@ -24,7 +24,7 @@ def add_bundle_on_request(request, bundle):\n \n \n def remove_bundle_on_request(request, bundle):\n-    """Removes the bundle to the request"""\n+    """Removes the bundle to the request."""\n     if not isinstance(bundle, str):\n         raise ValueError("remove_bundle_on_request expects a string value for bundle")\n     request.disabled_bundles = getattr(request, "disabled_bundles", [])\ndiff --git a/Products/CMFPlone/resources/browser/resource.py b/Products/CMFPlone/resources/browser/resource.py\nindex 1dc3c80609..fb593d4213 100644\n--- a/Products/CMFPlone/resources/browser/resource.py\n+++ b/Products/CMFPlone/resources/browser/resource.py\n@@ -27,7 +27,8 @@ class ResourceBase:\n     """Information for script rendering.\n \n     This is a mixin base class for a browser view, a viewlet or a tile\n-    or anything similar with a context and a request set on initialization.\n+    or anything similar with a context and a request set on\n+    initialization.\n     """\n \n     @property\n@@ -218,8 +219,7 @@ def current_expression():\n \n     def evaluateExpression(self, expression, context):\n         """Evaluate an object\'s TALES condition to see if it should be\n-        displayed.\n-        """\n+        displayed."""\n         try:\n             if expression.text and context is not None:\n                 portal = getToolByName(context, "portal_url").getPortalObject()\n@@ -285,7 +285,7 @@ def index(self):\n \n \n class StylesView(ResourceView):\n-    """Styles Viewlet"""\n+    """Styles Viewlet."""\n \n     def index(self):\n         rendered = self._rendered_cache\ndiff --git a/Products/CMFPlone/resources/utils.py b/Products/CMFPlone/resources/utils.py\nindex 3c77884fe8..5b7ba7ced3 100644\n--- a/Products/CMFPlone/resources/utils.py\n+++ b/Products/CMFPlone/resources/utils.py\n@@ -1,11 +1,8 @@\n from Acquisition import aq_base\n-from plone.registry.interfaces import IRegistry\n from plone.resource.file import FilesystemFile\n from plone.resource.interfaces import IResourceDirectory\n-from Products.CMFPlone.interfaces import IBundleRegistry\n from Products.CMFPlone.interfaces.resources import OVERRIDE_RESOURCE_DIRECTORY_NAME\n from zExceptions import NotFound\n-from zope.component import getUtility\n from zope.component import queryUtility\n \n import logging\ndiff --git a/Products/CMFPlone/resources/webresource.py b/Products/CMFPlone/resources/webresource.py\nindex 4bf96a686a..43f2a36d32 100644\n--- a/Products/CMFPlone/resources/webresource.py\n+++ b/Products/CMFPlone/resources/webresource.py\n@@ -1,5 +1,4 @@\n from .utils import get_resource\n-from urllib.parse import quote_plus\n from webresource import ScriptResource\n from webresource import StyleResource\n \n@@ -17,7 +16,7 @@ def file_data(self):\n         """Fetch data from using a resource via traversal"""\n         data = get_resource(self.context, self.resource)\n         if isinstance(data, str):\n-            data = data.encode(\'utf8\')\n+            data = data.encode("utf8")\n         return data\n \n \ndiff --git a/Products/CMFPlone/tests/testResourceRegistries.py b/Products/CMFPlone/tests/testResourceRegistries.py\nindex 527480d27c..fde3f316b8 100644\n--- a/Products/CMFPlone/tests/testResourceRegistries.py\n+++ b/Products/CMFPlone/tests/testResourceRegistries.py\n@@ -1,22 +1,14 @@\n from plone.app.testing import logout\n+from plone.registry import field as regfield\n+from plone.registry import Record\n from plone.registry.interfaces import IRegistry\n-from plone.resource.interfaces import IResourceDirectory\n-from plone.subrequest import subrequest\n from Products.CMFPlone.interfaces import IBundleRegistry\n-from Products.CMFPlone.interfaces.resources import OVERRIDE_RESOURCE_DIRECTORY_NAME\n from Products.CMFPlone.resources import add_bundle_on_request\n from Products.CMFPlone.resources import remove_bundle_on_request\n from Products.CMFPlone.resources.browser.resource import ScriptsView\n from Products.CMFPlone.resources.browser.resource import StylesView\n from Products.CMFPlone.tests import PloneTestCase\n-from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n-from unittest import mock\n from zope.component import getUtility\n-from plone.registry import Record\n-from plone.registry import field as regfield\n-\n-import json\n-import os\n \n \n class TestScriptsViewlet(PloneTestCase.PloneTestCase):\n@@ -38,8 +30,8 @@ def test_bundle_defernot_asyncnot(self):\n         view = ScriptsView(self.app, self.app.REQUEST, None, None)\n         view.update()\n         rendered = view.render()\n-        self.assertTrue(\'async=\' not in rendered)\n-        self.assertTrue(\'defer=\' not in rendered)\n+        self.assertTrue("async=" not in rendered)\n+        self.assertTrue("defer=" not in rendered)\n \n     def test_bundle_defernot_async(self):\n         bundle = self._make_test_bundle()\n@@ -56,8 +48,8 @@ def test_bundle_defer_asyncnot(self):\n         view = ScriptsView(self.app, self.app.REQUEST, None, None)\n         view.update()\n         rendered = view.render()\n-        self.assertTrue(\'async=\' not in rendered)\n-        self.assertTrue(\'defer=\' in rendered)\n+        self.assertTrue("async=" not in rendered)\n+        self.assertTrue("defer=" in rendered)\n \n     def test_bundle_defernot_async(self):\n         bundle = self._make_test_bundle()\n@@ -67,8 +59,8 @@ def test_bundle_defernot_async(self):\n         view = ScriptsView(self.app, self.app.REQUEST, None, None)\n         view.update()\n         rendered = view.render()\n-        self.assertTrue(\'async=\' in rendered)\n-        self.assertTrue(\'defer=\' not in rendered)\n+        self.assertTrue("async=" in rendered)\n+        self.assertTrue("defer=" not in rendered)\n \n     def test_bundle_defer_async(self):\n         bundle = self._make_test_bundle()\n@@ -77,8 +69,8 @@ def test_bundle_defer_async(self):\n         view = ScriptsView(self.app, self.app.REQUEST, None, None)\n         view.update()\n         rendered = view.render()\n-        self.assertTrue(\'async=\' in rendered)\n-        self.assertTrue(\'defer=\' in rendered)\n+        self.assertTrue("async=" in rendered)\n+        self.assertTrue("defer=" in rendered)\n \n     def test_scripts_viewlet(self):\n         scripts = ScriptsView(self.layer["portal"], self.layer["request"], None)\n@@ -165,6 +157,7 @@ def test_remove_bundle_on_request_with_subrequest(self):\n         result = scripts.render()\n         self.assertNotIn("http://test.foo/test.css", result)\n \n+\n class TestStylesViewlet(PloneTestCase.PloneTestCase):\n     def test_styles_viewlet(self):\n         styles = StylesView(self.layer["portal"], self.layer["request"], None)\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:20:47+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/22db2cb5482d1e0d361a5eff9c82de2681445de0

PLIP 3211 - Remove old resourceregistry artefacts.

Files changed:
M Products/CMFPlone/profiles/dependencies/registry.xml
M Products/CMFPlone/tests/robot/robodoc/config-screens.robot
M Products/CMFPlone/tests/test_safe_formatter.py

b'diff --git a/Products/CMFPlone/profiles/dependencies/registry.xml b/Products/CMFPlone/profiles/dependencies/registry.xml\nindex ddd8e2890e..b3aa55a7d9 100644\n--- a/Products/CMFPlone/profiles/dependencies/registry.xml\n+++ b/Products/CMFPlone/profiles/dependencies/registry.xml\n@@ -95,81 +95,6 @@\n     <value>False</value>\n   </record>\n \n-  <!-- Plone generated resources -->\n-  <record name="plone.resources.configjs">\n-    <field type="plone.registry.field.ASCII">\n-      <title>config.js</title>\n-    </field>\n-    <value>config.js</value>\n-  </record>\n-  <record name="plone.resources.less-modify">\n-    <field type="plone.registry.field.ASCII">\n-      <title>less-modify js</title>\n-    </field>\n-    <value>less-modify.js</value>\n-  </record>\n-  <record name="plone.resources.less-variables">\n-      <field type="plone.registry.field.ASCII">\n-        <title>LESS variables js definer</title>\n-      </field>\n-      <value key="js">less-variables.js</value>\n-  </record>\n-\n-  <!-- Mixins vars for less with the paths -->\n-  <record name="plone.lessvariables">\n-    <field type="plone.registry.field.Dict">\n-      <title>Less variables</title>\n-      <description>Variables that are going to be compiled on less</description>\n-      <key_type type="plone.registry.field.ASCIILine" />\n-      <value_type type="plone.registry.field.TextLine" />\n-    </field>\n-    <value>\n-      <element key="icon-font-path">\\"../fonts/\\"</element>\n-      <element key="bowerPath">\\"{site_url}/++plone++static/components/\\"</element>\n-      <element key="mockupPath">\\"{site_url}/++resource++mockup/\\"</element>\n-      <element key="mockuplessPath">\\"{site_url}/++resource++mockupless/\\"</element>\n-\n-      <element key="plone-link-color">rgba(0,123,179,1)</element>\n-      <element key="plone-gray-lighter">lighten(#000, 80%)</element>\n-      <element key="plone-gray-light">lighten(#000, 46.5%)</element>\n-\n-      <element key="plone-toolbar-bg">rgba(0,0,0,.9)</element>\n-      <element key="plone-toolbar-submenu-bg">rgba(45,45,45,.96)</element>\n-      <element key="plone-toolbar-submenu-width">180px</element>\n-      <element key="plone-toolbar-font-primary">Roboto, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif</element>\n-      <element key="plone-toolbar-font-secondary">Roboto, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif</element>\n-      <element key="plone-toolbar-separator-color">rgba(255,255,255,.17)</element>\n-      <element key="plone-toolbar-link">{plone-link-color}</element>\n-      <element key="plone-toolbar-text-color">rgba(255,255,255,1)</element>\n-      <element key="plone-toolbar-submenu-text-color">lighten(#000, 90%)</element>\n-      <element key="plone-toolbar-submenu-header-color">lighten(#000, 80%)</element>\n-      <element key="plone-toolbar-published-color">{plone-link-color}</element>\n-      <element key="plone-toolbar-draft-color">rgb(250,184,42)</element>\n-      <element key="plone-toolbar-pending-color">rgb(226,231,33)</element>\n-      <element key="plone-toolbar-private-color">rgb(196,24,60)</element>\n-      <element key="plone-toolbar-internal-color">rgb(250,184,42)</element>\n-      <element key="plone-toolbar-internally-published-color">rgb(136,61,250)</element>\n-\n-      <element key="plone-screen-xs-min">480px</element>\n-      <element key="plone-screen-sm-min">768px</element>\n-      <element key="plone-screen-md-min">992px</element>\n-      <element key="plone-screen-lg-min">1200px</element>\n-\n-      <element key="plone-left-toolbar-expanded">120px</element>\n-      <element key="plone-left-toolbar">60px</element>\n-\n-      <element key="plone-container-sm">750px</element>\n-      <element key="plone-container-md">970px</element>\n-      <element key="plone-container-lg">1170px</element>\n-\n-      <element key="plone-screen-xs-max">(@plone-screen-sm-min - 1)</element>\n-      <element key="plone-screen-sm-max">(@plone-screen-md-min - 1)</element>\n-      <element key="plone-screen-md-max">(@plone-screen-lg-min - 1)</element>\n-\n-    </value>\n-  </record>\n-\n-\n   <record name="plone.patternoptions">\n     <field type="plone.registry.field.Dict">\n       <title>Patterns configuration</title>\ndiff --git a/Products/CMFPlone/tests/robot/robodoc/config-screens.robot b/Products/CMFPlone/tests/robot/robodoc/config-screens.robot\nindex c810bec965..36697f6176 100644\n--- a/Products/CMFPlone/tests/robot/robodoc/config-screens.robot\n+++ b/Products/CMFPlone/tests/robot/robodoc/config-screens.robot\n@@ -141,10 +141,6 @@ Show Resource Registry screen\n     Capture and crop page screenshot\n     ...  ${CURDIR}/_robot/resource-registry.png\n     ...  css=#content\n-    Click link  Less Variables\n-    Capture and crop page screenshot\n-    ...  ${CURDIR}/_robot/less-variables.png\n-    ...  css=#content\n \n Show Search setup screen\n     Go to  ${PLONE_URL}/@@search-controlpanel\ndiff --git a/Products/CMFPlone/tests/test_safe_formatter.py b/Products/CMFPlone/tests/test_safe_formatter.py\nindex 25a6e687e3..65076d1c8a 100644\n--- a/Products/CMFPlone/tests/test_safe_formatter.py\n+++ b/Products/CMFPlone/tests/test_safe_formatter.py\n@@ -324,28 +324,6 @@ def test_standard_error_message(self):\n         # We expect a json string back.\n         self.assertTrue(response.body, \'{"error_type": "None"}\')\n \n-    def test_resource_registry_vector(self):\n-        for vector in (\'less-variables.js\', \'less-modify.js\'):\n-            src = \'\'\'\n-class ctx:\n-  def format(self, *args, **kwargs):\n-    self.foo=context\n-    return "foo"\n-\n-context.portal_registry[\'plone.lessvariables\'][\'foo\'] = ctx()\n-context.portal_registry[\'plone.lessvariables\'][\'bar\'] = "{foo.foo.__class__}"\n-js = context.restrictedTraverse("%s")\n-return js()\n-\'\'\' % vector\n-            from Products.PythonScripts.PythonScript import PythonScript\n-            script = PythonScript(\'evil\')\n-            script._filepath = \'evil\'\n-            script.write(src)\n-            self.portal.evil = script\n-            output = self.publish(\'/plone/evil\')\n-            self.assertFalse(\n-                b\'Products.CMFPlone.Portal.PloneSite\' in output.body)\n-\n     def test_cook_zope2_page_templates_bad_key_str(self):\n         from Products.PageTemplates.ZopePageTemplate import ZopePageTemplate\n         pt = ZopePageTemplate(\'mytemplate\', BAD_KEY_STR)\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:42+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/aba7779a8c4129a064d71e1f028e15ca53df8a9e

PLIP 3211 - Implement extended search JavaScript as pattern in Mockup and remove it from here.

Files changed:
M Products/CMFPlone/browser/configure.zcml
M Products/CMFPlone/browser/templates/search.pt
D Products/CMFPlone/browser/static/search.js

b'diff --git a/Products/CMFPlone/browser/configure.zcml b/Products/CMFPlone/browser/configure.zcml\nindex e9989aa94a..da58016adc 100644\n--- a/Products/CMFPlone/browser/configure.zcml\n+++ b/Products/CMFPlone/browser/configure.zcml\n@@ -217,11 +217,6 @@\n       for="plone.app.layout.navigation.interfaces.INavigationRoot"\n       />\n \n-  <browser:resource\n-      name="search.js"\n-      file="static/search.js"\n-      />\n-\n   <!-- AtD Support -->\n   <browser:page\n       for="*"\ndiff --git a/Products/CMFPlone/browser/static/search.js b/Products/CMFPlone/browser/static/search.js\ndeleted file mode 100644\nindex 13025eb126..0000000000\n--- a/Products/CMFPlone/browser/static/search.js\n+++ /dev/null\n@@ -1,149 +0,0 @@\n-/* The following line defines global variables defined elsewhere. */\n-/*globals require*/\n-\n-\n-if(require === undefined){\n-  require = function(reqs, torun){\n-    \'use strict\';\n-    return torun(window.jQuery);\n-  };\n-}\n-\n-require([\n-  \'jquery\',\n-], function($) {\n-  \'use strict\';\n-\n-  var $loader = $(\'.plone-loader\');\n-  if($loader.length === 0){\n-    $loader = $(\'<div class="plone-loader"><div class="spinner-border text-secondary" role="status"></div></div>\');\n-    $(\'body\').append($loader);\n-  }\n-\n-  var $filter = $(\'#search-filter\');\n-  var $filterBtn = $(\'#search-filter-toggle\', $filter);\n-  var $advSearchInput = $(\'#advanced-search-input\');\n-  var $ctSelectAll = $(\'#pt_toggle\');\n-  var $selectAllContainer = $(\'.search-type-options\');\n-  var $sortingContainer = $(\'#sorting-options\');\n-\n-\n-  /* handle history */\n-  if (window.history && window.history.pushState){\n-    $(window).bind(\'popstate\', function () {\n-      /* we\'re just going to cheat and reload the page so\n-         we aren\'t keep moving around state here..\n-         Here, I\'m lazy, we\'re not using react here... */\n-      window.location = window.location.href;\n-    });\n-  }\n-\n-  var pushHistory = function(){\n-    if(window.history && window.history.pushState){\n-      var url = window.location.origin + window.location.pathname + \'?\' + $(\'#searchform\').serialize();\n-      window.history.pushState(null, null, url);\n-    }\n-  };\n-\n-  var timeout = 0;\n-  var search = function(){\n-    $loader.show();\n-    pushHistory();\n-    $.ajax({\n-      url: window.location.origin + window.location.pathname + \'?ajax_load=1\',\n-      data: $(\'#searchform\').serialize()\n-    }).done(function(html){\n-      var $html = $(html);\n-      $(\'#search-results\').replaceWith($(\'#search-results\', $html));\n-      $(\'#search-term\').replaceWith($(\'#search-term\', $html));\n-      $(\'#results-count\').replaceWith($(\'#results-count\', $html));\n-      $loader.hide();\n-    });\n-  };\n-  var searchDelayed = function(){\n-    clearTimeout(timeout);\n-    timeout = setTimeout(search, 200);\n-  };\n-\n-  var setBatchStart = function(b_start){\n-    $("#search-batch-start").attr("value", b_start);\n-  };\n-\n-  // for sorme reason the backend always flag with active class the sorting options\n-  var updateSortingState = function($el){\n-    $(\'a\', $sortingContainer).removeClass(\'active\');\n-    $el.addClass(\'active\');\n-  };\n-  var default_sort = $(\'#search-results\').attr(\'data-default-sort\');\n-  updateSortingState($(\'a[data-sort=\'+default_sort+\']\'));\n-\n-  /* sorting */\n-  $(\'a\', $sortingContainer).click(function(e){\n-    e.preventDefault();\n-    updateSortingState($(this));\n-    var sort = $(this).attr(\'data-sort\');\n-    var order = $(this).attr(\'data-order\');\n-    if(sort){\n-      $(\'[name="sort_on"]\').attr(\'value\', sort);\n-      if(order && order == \'reverse\'){\n-        $(\'[name="sort_order"]\').attr(\'value\', \'reverse\');\n-      }else{\n-        $(\'[name="sort_order"]\').attr(\'value\', \'\');\n-      }\n-    }else{\n-      $(\'[name="sort_on"]\').attr(\'value\', \'\');\n-      $(\'[name="sort_order"]\').attr(\'value\', \'\');\n-    }\n-    search();\n-  });\n-\n-\n-  /* form submission */\n-  $(\'.searchPage\').submit(function(e){\n-    e.preventDefault();\n-    setBatchStart("0");\n-    search();\n-  });\n-\n-\n-  /* filters */\n-  $filterBtn.click(function(e){\n-    e.preventDefault();\n-    $filter.toggleClass(\'activated\');\n-    if($filter.hasClass(\'activated\')){\n-      $advSearchInput.attr(\'value\', \'True\');\n-    }else{\n-      $advSearchInput.attr(\'value\', \'False\');\n-    }\n-  });\n-\n-  $ctSelectAll.change(function(){\n-    if($ctSelectAll[0].checked){\n-      $(\'input\', $selectAllContainer).each(function(){\n-        this.checked = true;\n-      });\n-    }else{\n-      $(\'input\', $selectAllContainer).each(function(){\n-        this.checked = false;\n-      });\n-    }\n-  });\n-\n-  $(\'input\', $filter).change(function(){\n-    setBatchStart("0");\n-    searchDelayed();\n-  });\n-\n-  /* pagination */\n-  $("#searchform").on("click", ".pagination a", function(e) {\n-    var urlParams = new URLSearchParams($(e.currentTarget).attr("href")),\n-        b_start = urlParams.get("b_start:int");\n-    if(!b_start) {\n-      // not plone pagination\n-      return;\n-    }\n-    e.preventDefault();\n-    setBatchStart(b_start);\n-    search();\n-  })\n-});\ndiff --git a/Products/CMFPlone/browser/templates/search.pt b/Products/CMFPlone/browser/templates/search.pt\nindex 1031272371..ef4d271e8d 100644\n--- a/Products/CMFPlone/browser/templates/search.pt\n+++ b/Products/CMFPlone/browser/templates/search.pt\n@@ -32,7 +32,7 @@\n           id="searchform"\n           action="@@search"\n           role="search"\n-          class="searchPage pat-formautofocus"\n+          class="searchPage pat-formautofocus pat-search"\n           tal:define="portal context/@@plone_portal_state/portal;\n                       first_call not:request/advanced_search|nothing;\n                       st python:request.get(\'SearchableText\', \'\');\n@@ -310,8 +310,6 @@\n         </div>\n \n     </form>\n-\n-    <script type="text/javascript" src="${context/portal_url}/++resource++search.js"></script>\n   </div>\n \n </body>\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:42+01:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/38ede8ba5d663a1b302faab1c38fc6d92479c48a

Fix robot test for new toolbar

Files changed:
M Products/CMFPlone/tests/robot/test_controlpanel_security.robot

b"diff --git a/Products/CMFPlone/tests/robot/test_controlpanel_security.robot b/Products/CMFPlone/tests/robot/test_controlpanel_security.robot\nindex 65175f7d01..46c67220da 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_security.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_security.robot\n@@ -184,9 +184,8 @@ UUID should be used for the user id\n   Input text for sure  __ac_password  supersecret\n   Click Button  Log in\n   Wait until page contains  You are now logged in\n-\n   # XXX: Here we can't really test that this is a uuid, since it's random, so\n   # we just check that user id is not equal to username or email\n-  ${userid}=  Get Text  xpath=//li[@id='portal-personaltools']//li[contains(@class, 'plone-toolbar-submenu-header')]//span\n+  ${userid}=  Get Text  xpath=//a[@id='personaltools-menulink']\n   Should Not Be Equal As Strings  ${userid}  joe\n   Should Not Be Equal As Strings  ${userid}  joe@test.com\n"

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:42+01:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/bc70daf43a18888cb1bda5d7ebc86b8572695c3d

Fix pat-modal related robot tests

Files changed:
M Products/CMFPlone/tests/robot/robodoc/collaboration-advanced_control.robot
M Products/CMFPlone/tests/robot/robodoc/working_with_tinymce.robot
M Products/CMFPlone/tests/robot/test_linkintegrity.robot
M Products/CMFPlone/tests/robot/test_overlays.robot
M Products/CMFPlone/tests/robot/test_thememapper.robot
M Products/CMFPlone/tests/robot/test_tinymce.robot

b'diff --git a/Products/CMFPlone/tests/robot/robodoc/collaboration-advanced_control.robot b/Products/CMFPlone/tests/robot/robodoc/collaboration-advanced_control.robot\nindex 4427dea3f3..a81141374d 100644\n--- a/Products/CMFPlone/tests/robot/robodoc/collaboration-advanced_control.robot\n+++ b/Products/CMFPlone/tests/robot/robodoc/collaboration-advanced_control.robot\n@@ -37,8 +37,8 @@ Show state menu\n \n     Click link  workflow-transition-advanced\n     Wait until element is visible\n-    ...   css=div.plone-modal-content\n+    ...   css=div.modal-content\n \n     Capture and crop page screenshot\n     ...  ${CURDIR}/_robot/workflow-advanced.png\n-    ...  css=div.plone-modal-wrapper\n+    ...  css=div.modal-wrapper\ndiff --git a/Products/CMFPlone/tests/robot/robodoc/working_with_tinymce.robot b/Products/CMFPlone/tests/robot/robodoc/working_with_tinymce.robot\nindex acd9963e8a..296ba742c0 100644\n--- a/Products/CMFPlone/tests/robot/robodoc/working_with_tinymce.robot\n+++ b/Products/CMFPlone/tests/robot/robodoc/working_with_tinymce.robot\n@@ -39,14 +39,14 @@ Show TinyMCE image\n \n     Click element  css=#mceu_15 button\n     Wait until element is visible\n-    ...  css=h2.plone-modal-title\n+    ...  css=h2.modal-title\n     Wait until element is visible\n     ...  css=div.common-controls\n-    \n+\n     Capture and crop page screenshot\n     ...  ${CURDIR}/_robot/tinymce-imgdialog.png\n     ...  css=div.outer-wrapper\n-    ...  css=div.plone-modal-content\n+    ...  css=div.modal-content\n \n Show TinyMCE insert links\n     Go to  ${PLONE_URL}/samplepage\n@@ -61,7 +61,7 @@ Show TinyMCE insert links\n     Capture and crop page screenshot\n     ...  ${CURDIR}/_robot/tinymce-linkdialog.png\n     ...  css=div.outer-wrapper\n-    ...  css=div.plone-modal-content\n+    ...  css=div.modal-content\n \n Show TinyMCE insert tables\n     Go to  ${PLONE_URL}/samplepage\ndiff --git a/Products/CMFPlone/tests/robot/test_linkintegrity.robot b/Products/CMFPlone/tests/robot/test_linkintegrity.robot\nindex 03d386a767..fc2e1bdb19 100644\n--- a/Products/CMFPlone/tests/robot/test_linkintegrity.robot\n+++ b/Products/CMFPlone/tests/robot/test_linkintegrity.robot\n@@ -85,7 +85,7 @@ a link in rich text\n   Click Element  xpath=(//span[contains(., \'Foo\')])\n   Wait until page contains  Foo\n \n-  Click Button  css=.plone-modal-footer .plone-btn-primary\n+  Click Button  css=.modal-footer .plone-btn-primary\n   Click Button  css=#form-buttons-save\n \n \ndiff --git a/Products/CMFPlone/tests/robot/test_overlays.robot b/Products/CMFPlone/tests/robot/test_overlays.robot\nindex bebb048492..486625c29e 100644\n--- a/Products/CMFPlone/tests/robot/test_overlays.robot\n+++ b/Products/CMFPlone/tests/robot/test_overlays.robot\n@@ -229,20 +229,20 @@ I click the \'${link_name}\' link\n the \'${link_name}\' overlay\n     Wait until page contains  ${link_name}\n     Click Link  xpath=//a[descendant-or-self::*[contains(text(), \'${link_name}\')]]\n-    Wait until keyword succeeds  30  1  Page should contain element  css=div.plone-modal-dialog\n+    Wait until keyword succeeds  30  1  Page should contain element  css=div.modal-dialog\n \n overlay should open\n-    Wait until keyword succeeds  30  1  Element Should Be Visible  css=div.plone-modal-dialog\n+    Wait until keyword succeeds  30  1  Element Should Be Visible  css=div.modal-dialog\n \n overlay should remain open\n-    Wait until page contains element  css=div.plone-modal-wrapper\n-    Wait until element is visible  css=div.plone-modal-wrapper\n+    Wait until page contains element  css=div.modal-wrapper\n+    Wait until element is visible  css=div.modal-wrapper\n \n I close the overlay\n-    Click Element  css=div.plone-modal-header a.plone-modal-close\n+    Click Element  css=div.modal-header a.modal-close\n \n overlay should close\n-    Wait until keyword succeeds  40  1  Page should not contain element  css=div.plone-modal-dialog\n+    Wait until keyword succeeds  40  1  Page should not contain element  css=div.modal-dialog\n \n login overlay shows an error\n     Wait Until Page Contains  Error\n@@ -251,19 +251,19 @@ overlay shows an error\n     Wait Until Page Contains  There were errors\n \n I \'${action}\' the form\n-    Wait until keyword succeeds  30  1  Element Should Be Visible  css=div.plone-modal-footer button[name="form.buttons.${action}"]\n-    Click Element  css=div.plone-modal-footer button[name="form.buttons.${action}"]\n+    Wait until keyword succeeds  30  1  Element Should Be Visible  css=div.modal-footer button[name="form.buttons.${action}"]\n+    Click Element  css=div.modal-footer button[name="form.buttons.${action}"]\n \n I enter wrong credentials\n     Input text  __ac_name  wrong\n     Input text  __ac_password  user\n-    Click Button  css=div.plone-modal-footer button\n+    Click Button  css=div.modal-footer button\n \n I enter valid credentials\n     Wait until page contains element  name=__ac_name\n     Input text for sure  __ac_name  ${SITE_OWNER_NAME}\n     Input text for sure  __ac_password  ${SITE_OWNER_PASSWORD}\n-    Click Button  css=div.plone-modal-footer button\n+    Click Button  css=div.modal-footer button\n \n I enter valid user data\n     Wait until page contains element  name=form.widgets.password_ctl\n@@ -278,8 +278,8 @@ I enter valid register user data\n     Input text  form.widgets.email          my@email.eu\n \n I send the register form\n-    Wait until page contains element  css=div.plone-modal-footer #form-buttons-register\n-    Click Element  css=div.plone-modal-footer #form-buttons-register\n+    Wait until page contains element  css=div.modal-footer #form-buttons-register\n+    Click Element  css=div.modal-footer #form-buttons-register\n \n I trigger the add a new user action\n     Click Element  id=add-user\n@@ -304,7 +304,7 @@ a document as the default view of the test folder\n     Wait until element is visible  id=contextSetDefaultPage\n     Click link  id=contextSetDefaultPage\n     Click element  id=doc\n-    Click element  css=div.plone-modal-footer button[name="form.buttons.Save"]\n+    Click element  css=div.modal-footer button[name="form.buttons.Save"]\n \n I change the default content view of the test folder\n     Go to  ${PLONE_URL}/${TEST_FOLDER}\n@@ -320,11 +320,11 @@ I trigger the \'${action}\' action menu item of the test folder\n     Click link  xpath=//li[@id=\'plone-contentmenu-actions\']/a\n     Wait until element is visible  id=plone-contentmenu-actions-${action}\n     Click link  id=plone-contentmenu-actions-${action}\n-    Wait until page contains Element  css=div.plone-modal-dialog\n+    Wait until page contains Element  css=div.modal-dialog\n \n I confirm deletion of the content\n     # Note: The \'delete\' button has no standard z3c.form name attribute\n-    Wait until keyword succeeds  2  2  Click Element  css=div.plone-modal-footer button#form-buttons-Delete\n+    Wait until keyword succeeds  2  2  Click Element  css=div.modal-footer button#form-buttons-Delete\n \n modals loaded\n-    Wait For Condition  return window.jQuery(\'.plone-modal-wrapper\').size() > 0\n+    Wait For Condition  return window.jQuery(\'.modal-wrapper\').size() > 0\ndiff --git a/Products/CMFPlone/tests/robot/test_thememapper.robot b/Products/CMFPlone/tests/robot/test_thememapper.robot\nindex 4701ca2e07..57b7166ccb 100644\n--- a/Products/CMFPlone/tests/robot/test_thememapper.robot\n+++ b/Products/CMFPlone/tests/robot/test_thememapper.robot\n@@ -53,9 +53,9 @@ a new theme to edit\n     Go to  ${PLONE_URL}/theming-controlpanel\n     Wait until page contains  Theme settings\n     Click Element   jquery=a[href="#modal-copy-barceloneta"]\n-    Wait Until Element Is Visible   jquery=.plone-modal-body input[type="text"]\n-    Input Text  jquery=.plone-modal-body input[type="text"]   Test\n-    Click Element   jquery=.plone-modal-body input[type="submit"]\n+    Wait Until Element Is Visible   jquery=.modal-body input[type="text"]\n+    Input Text  jquery=.modal-body input[type="text"]   Test\n+    Click Element   jquery=.modal-body input[type="submit"]\n     Wait Until Element Is Visible   css=.nav-and-editor\n     Page Should Contain     backend.xml\n \ndiff --git a/Products/CMFPlone/tests/robot/test_tinymce.robot b/Products/CMFPlone/tests/robot/test_tinymce.robot\nindex 2f39805371..922626d414 100644\n--- a/Products/CMFPlone/tests/robot/test_tinymce.robot\n+++ b/Products/CMFPlone/tests/robot/test_tinymce.robot\n@@ -63,11 +63,11 @@ insert link\n     Click Link  css=.pattern-relateditems-container .favorites a.fav[href=\'/\']\n     Wait Until Element Is Visible  css=.pattern-relateditems-result-select.selectable\n     Click Link  css=.pattern-relateditems-result-select.selectable\n-    Click Button  css=.plone-modal-footer .plone-btn-primary\n+    Click Button  css=.modal-footer .plone-btn-primary\n     Select Frame  css=.mce-edit-area iframe\n     Execute Javascript  window.getSelection().removeAllRanges()\n     UnSelect Frame\n-    Wait Until Element Is Not Visible  css=.plone-modal-footer .plone-btn-primary\n+    Wait Until Element Is Not Visible  css=.modal-footer .plone-btn-primary\n \n insert image\n     Click Button  css=div[aria-label="Insert/edit image"] button\n@@ -75,9 +75,9 @@ insert image\n     Click Link  css=.pattern-relateditems-container .favorites a.fav[href=\'/\']\n     Wait Until Element Is Visible  css=.pattern-relateditems-result-select.selectable\n     Click Link  css=.pattern-relateditems-result-select.selectable\n-    Input Text  css=.plone-modal-body [name="title"]  SomeTitle\n-    Input Text  css=.plone-modal-body [name="alt"]  SomeAlt\n-    Click Button  css=.plone-modal-footer .plone-btn-primary[name=\'insert\']\n+    Input Text  css=.modal-body [name="title"]  SomeTitle\n+    Input Text  css=.modal-body [name="alt"]  SomeAlt\n+    Click Button  css=.modal-footer .plone-btn-primary[name=\'insert\']\n     # in FF 34 we need to click twice. in FF46 or chrome this is not a problem at all.\n-    Run Keyword And Ignore Error  Click Button  css=.plone-modal-footer .plone-btn-primary[name=\'insert\']\n-    Wait Until Element Is Not Visible  css=.plone-modal-footer .plone-btn-primary[name=\'insert\']\n+    Run Keyword And Ignore Error  Click Button  css=.modal-footer .plone-btn-primary[name=\'insert\']\n+    Wait Until Element Is Not Visible  css=.modal-footer .plone-btn-primary[name=\'insert\']\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:42+01:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/c0b8d0b23dd76ad2790edc38e5d4472acb71a329

Fix controlpanel navigation robot tests

Files changed:
M Products/CMFPlone/tests/robot/test_controlpanel_navigation.robot

b"diff --git a/Products/CMFPlone/tests/robot/test_controlpanel_navigation.robot b/Products/CMFPlone/tests/robot/test_controlpanel_navigation.robot\nindex 80a85c8bf9..bdad652733 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_navigation.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_navigation.robot\n@@ -68,26 +68,36 @@ a private document '${title}'\n \n I disable generate tabs\n   Unselect Checkbox  form.widgets.generate_tabs:list\n+  Set Focus To Element  form.buttons.save\n+  Wait Until Element Is Visible  form.buttons.save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n I disable non-folderish tabs\n   Unselect Checkbox  xpath=//input[@value='Document']\n+  Set Focus To Element  form.buttons.save\n+  Wait Until Element Is Visible  form.buttons.save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n I remove '${portal_type}' from the displayed types list\n   Unselect Checkbox  xpath=//input[@value='Document']\n+  Set Focus To Element  form.buttons.save\n+  Wait Until Element Is Visible  form.buttons.save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n I enable filtering by workflow states\n   Select Checkbox  name=form.widgets.filter_on_workflow:list\n+  Set Focus To Element  form.buttons.save\n+  Wait Until Element Is Visible  form.buttons.save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n I choose to show '${workflow_state}' items\n   Select Checkbox  xpath=//input[@value='${workflow_state}']\n+  Set Focus To Element  form.buttons.save\n+  Wait Until Element Is Visible  form.buttons.save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n"

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:42+01:00
Author: Peter Holzer (agitator) <peter.holzer@agitator.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/b8281300881b8ac9c6afb5db5ccb9e53f47bd3a4

fix actions cp robot tests

Files changed:
M Products/CMFPlone/tests/robot/test_controlpanel_actions.robot

b'diff --git a/Products/CMFPlone/tests/robot/test_controlpanel_actions.robot b/Products/CMFPlone/tests/robot/test_controlpanel_actions.robot\nindex 7444e96e9a..afee018bef 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_actions.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_actions.robot\n@@ -71,12 +71,16 @@ I modify an action title\n   Click Link    css=section:nth-child(3) li:first-child a\n   Wait until page contains  Action Settings\n   Input Text for sure  form.widgets.title  A new site map\n+  Set Focus To Element  css=.pattern-modal-buttons > button\n+  Wait Until Element Is Visible  css=.pattern-modal-buttons > button\n   Click Element  css=.pattern-modal-buttons > button\n \n I change the actions order\n   Click Link    css=section:nth-child(3) li:first-child a\n   Wait until page contains  Action Settings\n   Input Text for sure  form.widgets.position  3\n+  Set Focus To Element  css=.pattern-modal-buttons > button\n+  Wait Until Element Is Visible  css=.pattern-modal-buttons > button\n   Click Element  css=.pattern-modal-buttons > button\n \n I add a new action\n@@ -84,14 +88,19 @@ I add a new action\n   Wait until page contains  New action\n   Select From List By Label   form.widgets.category:list   User actions\n   Input Text for sure  form.widgets.id  favorites\n+  Set Focus To Element  css=.pattern-modal-buttons > button\n+  Wait Until Element Is Visible  css=.pattern-modal-buttons > button\n   Click Element  css=.pattern-modal-buttons > button\n   Wait until page contains  favorites\n-  Execute JavaScript  window.scrollTo(0, document.body.scrollHeight)\n+  Set Focus To Element  css=section.category:last-child li:last-child a\n+  Wait Until Element Is Visible  css=section.category:last-child li:last-child a\n   Sleep  1\n-  Click Link     css=section.category:last-child li:last-child a\n+  Click Link  css=section.category:last-child li:last-child a\n   Wait until page contains  Action Settings\n   Input Text for sure  form.widgets.title  My favorites\n   Input Text for sure  form.widgets.url_expr  string:\\${globals_view/navigationRootUrl}/favorites\n+  Set Focus To Element  css=.pattern-modal-buttons > button\n+  Wait Until Element Is Visible  css=.pattern-modal-buttons > button\n   Click Element  css=.pattern-modal-buttons > button\n \n I delete an action\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:42+01:00
Author: Fred van Dijk (fredvd) <fredvd@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/d078b1a3b4b83bf3b5e4a9b72a27a0802bb51c1a

Fix control panel security robot tests

Files changed:
M Products/CMFPlone/tests/robot/test_controlpanel_security.robot

b'diff --git a/Products/CMFPlone/tests/robot/test_controlpanel_security.robot b/Products/CMFPlone/tests/robot/test_controlpanel_security.robot\nindex 46c67220da..4b7066cb31 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_security.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_security.robot\n@@ -11,7 +11,6 @@ Resource  keywords.robot\n Test Setup  Run keywords  Plone Test Setup\n Test Teardown  Run keywords  Plone Test Teardown\n \n-\n *** Test Cases ***************************************************************\n \n Scenario: Enable self registration in the Security Control Panel\n@@ -143,6 +142,8 @@ A user folder should be created when a user registers and logs in to the site\n   Input Text for sure  form.widgets.email  joe@test.com\n   Input Text for sure  form.widgets.password  supersecret\n   Input Text for sure  form.widgets.password_ctl  supersecret\n+  Set Focus To Element  css=#form-buttons-register\n+  Wait Until Element Is Visible  css=#form-buttons-register\n   Click Button  Register\n \n   # I login to the site\n@@ -175,6 +176,8 @@ UUID should be used for the user id\n   Input Text for sure  form.widgets.email  joe@test.com\n   Input Text for sure  form.widgets.password  supersecret\n   Input Text for sure  form.widgets.password_ctl  supersecret\n+  Set Focus To Element  css=#form-buttons-register\n+  Wait Until Element Is Visible  css=#form-buttons-register\n   Click Button  Register\n \n   # I login to the site\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:42+01:00
Author: Fred van Dijk (fredvd) <fredvd@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/172aa41e350e85185622303035bdfca9f1da5a37

Fix controlpanel site robot tests

Files changed:
M Products/CMFPlone/tests/robot/test_controlpanel_site.robot

b'diff --git a/Products/CMFPlone/tests/robot/test_controlpanel_site.robot b/Products/CMFPlone/tests/robot/test_controlpanel_site.robot\nindex e425f19b9c..81fee76ee0 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_site.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_site.robot\n@@ -63,31 +63,43 @@ the site control panel\n \n I enable the sitemap\n   Given patterns are loaded\n+  Set Focus To Element  css=#formfield-form-widgets-enable_sitemap\n+  Wait Until Element Is Visible  css=#formfield-form-widgets-enable_sitemap\n   Select Checkbox  form.widgets.enable_sitemap:list\n+  Set Focus To Element  css=#form-buttons-save\n+  Wait Until Element Is Visible  css=#form-buttons-save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n I set the site title to \'${site_title}\'\n   Given patterns are loaded\n   Input Text  name=form.widgets.site_title  ${site_title}\n+  Set Focus To Element  css=#form-buttons-save\n+  Wait Until Element Is Visible  css=#form-buttons-save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n I set a custom logo\n   Given patterns are loaded\n   Choose File  name=form.widgets.site_logo  ${PATH_TO_TEST_FILES}/pixel.png\n+  Set Focus To Element  css=#form-buttons-save\n+  Wait Until Element Is Visible  css=#form-buttons-save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n I enable dublin core metadata\n   Given patterns are loaded\n   Select Checkbox  form.widgets.exposeDCMetaTags:list\n+  Set Focus To Element  css=#form-buttons-save\n+  Wait Until Element Is Visible  css=#form-buttons-save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n I add a Javascript snippet to the webstats javascript\n   Given patterns are loaded\n   Input Text  name=form.widgets.webstats_js  <script id="webstats_snippet"></script>\n+  Set Focus To Element  css=#form-buttons-save\n+  Wait Until Element Is Visible  css=#form-buttons-save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:42+01:00
Author: Fred van Dijk (fredvd) <fredvd@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/55cccaf2c6eed3b02719036d594c6dbb506e437d

Fix controlpanel search robot tests

Files changed:
M Products/CMFPlone/tests/robot/test_controlpanel_search.robot

b"diff --git a/Products/CMFPlone/tests/robot/test_controlpanel_search.robot b/Products/CMFPlone/tests/robot/test_controlpanel_search.robot\nindex 6d9bebe766..dc0185a2b4 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_search.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_search.robot\n@@ -49,13 +49,17 @@ the search control panel\n \n I enable livesearch\n   Select Checkbox  form.widgets.enable_livesearch:list\n+  Set Focus To Element  css=#form-buttons-save\n+  Wait Until Element Is Visible  css=#form-buttons-save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n I exclude the '${portal_type}' type from search\n   # Make sure we see the checkbox, in expanded in jenkins it gets a bit under the toolbar\n-  Click Link  css=a.plone-toolbar-logo\n+  Set Focus To Element  xpath=//input[@name='form.widgets.types_not_searched:list' and @value='${portal_type}']\n   Unselect Checkbox  xpath=//input[@name='form.widgets.types_not_searched:list' and @value='${portal_type}']\n+  Set Focus To Element  css=#form-buttons-save\n+  Wait Until Element Is Visible  css=#form-buttons-save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n"

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:42+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/23c18b6277551cbacc8a8e62b477acde5e3c48f7

Remove robot tests for thememapper.

Copying or editing themes TTW is not supporting with ES6.
You should download it, edit it locally, and upload it.

Files changed:
D Products/CMFPlone/tests/robot/test_thememapper.robot

b'diff --git a/Products/CMFPlone/tests/robot/test_thememapper.robot b/Products/CMFPlone/tests/robot/test_thememapper.robot\ndeleted file mode 100644\nindex 57b7166ccb..0000000000\n--- a/Products/CMFPlone/tests/robot/test_thememapper.robot\n+++ /dev/null\n@@ -1,118 +0,0 @@\n-*** Settings *****************************************************************\n-\n-Resource  plone/app/robotframework/keywords.robot\n-Resource  plone/app/robotframework/saucelabs.robot\n-Resource  plone/app/robotframework/selenium.robot\n-\n-Library  Remote  ${PLONE_URL}/RobotRemote\n-\n-Resource  keywords.robot\n-\n-Test Setup  Run keywords  Plone Test Setup\n-Test Teardown  Run keywords  Plone Test Teardown\n-\n-*** Variables ***\n-\n-${LESS}     @color: blue; body { background: @color; }\n-${LESSFILE}     test.less\n-${CSSFILE}      output.less\n-${CSS}      background: blue;\n-\n-*** Test Cases **************************************************************\n-\n-Scenario: Thememapper basic functionality\n-    Given a logged-in site administrator\n-    and a new theme to edit\n-    When I open rules.xml\n-    Then I expect 2 tabs to be open\n-    and I expect a tab labeled "rules.xml" to be open\n-\n-    When I close the tab labeled "rules.xml"\n-    Then I expect 1 tabs to be open\n-\n-    When I create a new file called "${LESSFILE}"\n-    Then I expect 2 tabs to be open\n-    and I expect a tab labeled "${LESSFILE}" to be open\n-\n-    When I type some code into the editor\n-    and I save the current document\n-    I expect the document ${LESSFILE} to contain ${LESS}\n-\n-Scenario: Thememapper LESS builder\n-    Given a logged-in site administrator\n-    and a new theme to edit\n-    and I create a new file called "${LESSFILE}"\n-    and I type some code into the editor\n-    and I save the current document\n-    When I use the LESS builder on "${LESSFILE}"\n-    Then I expect the compiled CSS to contain "${CSS}"\n-\n-*** Keywords ****************************************************************\n-\n-a new theme to edit\n-    Go to  ${PLONE_URL}/theming-controlpanel\n-    Wait until page contains  Theme settings\n-    Click Element   jquery=a[href="#modal-copy-barceloneta"]\n-    Wait Until Element Is Visible   jquery=.modal-body input[type="text"]\n-    Input Text  jquery=.modal-body input[type="text"]   Test\n-    Click Element   jquery=.modal-body input[type="submit"]\n-    Wait Until Element Is Visible   css=.nav-and-editor\n-    Page Should Contain     backend.xml\n-\n-I open ${NAME}\n-    Click Element   jquery=.jqtree-element:contains("${NAME}")\n-\n-I expect ${NUM} tabs to be open\n-    Sleep  1\n-    ${hits}=    Execute Javascript  return window.jQuery(\'.navbar-nav li\').length.toString();\n-    Should Be Equal     ${hits}     ${NUM}\n-\n-I expect a tab labeled "${LABEL}" to be open\n-    Wait Until Element Is Visible   jquery=.navbar-nav li:contains("${LABEL}")\n-\n-I close the tab labeled "${LABEL}"\n-    Click Element   jquery=.navbar-nav li:contains("${LABEL}") .remove\n-\n-I create a new file called "${NAME}"\n-    Click Element   css=#btngroup-main #btngroup-dropdown-file_menu #dropdown-menu-\n-    Click Element   css=#alink-addnew\n-    Input Text  jquery=.addnew input[type="text"]   ${NAME}\n-    Click Element   jquery=.addnew .btn-primary\n-    Sleep   1\n-\n-I type some code into the editor\n-    Click Element   css=.ace_content\n-    ${ace_id}=     Execute Javascript   return window.jQuery(\'.ace_editor\').attr(\'id\');\n-    Execute Javascript      ace.edit(${ace_id}).setValue("${LESS}");\n-\n-I expect the editors value to be "${MESSAGE}"\n-    ${ace_id}=      Execute Javascript  return window.jQuery(\'.ace_editor\').attr(\'id\');\n-    ${value}=   Execute Javascript      return ace.edit(\'${ace_id}\').getValue();\n-    Should Be Equal     ${value}    ${MESSAGE}\n-\n-I expect the editors value to contain "${MESSAGE}"\n-    ${ace_id}=      Execute Javascript  return window.jQuery(\'.ace_editor\').attr(\'id\');\n-    ${value}=   Execute Javascript      return ace.edit(\'${ace_id}\').getValue();\n-    Should Contain  ${value}    ${MESSAGE}\n-\n-I save the current document\n-    Click Element   css=#btn-save\n-    Sleep   1\n-\n-I expect the document ${NAME} to contain ${MESSAGE}\n-    Go To   ${PLONE_URL}/++theme++test/@@theming-controlpanel-mapper\n-    Wait Until Element Is Visible    css=.ace_editor\n-    I open ${NAME}\n-    I expect the editors value to be "${MESSAGE}"\n-\n-I use the LESS builder on "${file}"\n-    I open ${file}\n-    Click Element   css=#btngroup-mapper #btngroup-dropdown-file_menu #dropdown-menu-\n-    Click Element   css=#alink-buildless\n-    Input Text      css=#lessFileName   ${CSSFILE}\n-    Click element   css=#compileBtn\n-    Sleep   1\n-\n-I expect the compiled CSS to contain "${TEXT}"\n-    I open ${CSSFILE}\n-    I expect the editors value to contain "${TEXT}"\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:42+01:00
Author: Fred van Dijk (fredvd) <fredvd@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/53ba0cbe6e789c64934a0f0a0168f3d5d910f0be

Make sure save button is in viewport

Untested but same fix as many other control panel robot tests that can't save the form

Files changed:
M Products/CMFPlone/tests/robot/test_controlpanel_social.robot

b'diff --git a/Products/CMFPlone/tests/robot/test_controlpanel_social.robot b/Products/CMFPlone/tests/robot/test_controlpanel_social.robot\nindex 233a36d829..70f106d2e0 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_social.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_social.robot\n@@ -45,6 +45,8 @@ the social control panel\n I disable social\n   UnSelect Checkbox  form.widgets.share_social_data:list\n   Sleep  2\n+  Set Focus To Element  css=#form-buttons-save\n+  Wait Until Element Is Visible  css=#form-buttons-save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n@@ -53,6 +55,8 @@ I provide social settings\n   Input Text  name=form.widgets.facebook_app_id  123456\n   Input Text  name=form.widgets.facebook_username  plonecms\n   Sleep  2\n+  Set Focus To Element  css=#form-buttons-save\n+  Wait Until Element Is Visible  css=#form-buttons-save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:42+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/88123e59344e834ca2ac6d798fa003ebf2593717

Robot tests: fixed css selector for modal-close.

Files changed:
M Products/CMFPlone/tests/robot/test_overlays.robot

b'diff --git a/Products/CMFPlone/tests/robot/test_overlays.robot b/Products/CMFPlone/tests/robot/test_overlays.robot\nindex 486625c29e..750a01b251 100644\n--- a/Products/CMFPlone/tests/robot/test_overlays.robot\n+++ b/Products/CMFPlone/tests/robot/test_overlays.robot\n@@ -239,7 +239,7 @@ overlay should remain open\n     Wait until element is visible  css=div.modal-wrapper\n \n I close the overlay\n-    Click Element  css=div.modal-header a.modal-close\n+    Click Element  css=div.modal-header button.modal-close\n \n overlay should close\n     Wait until keyword succeeds  40  1  Page should not contain element  css=div.modal-dialog\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:42+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/fbc4dd0787e186b6e50ea5338efde2960368d74c

Fixed icon traverser.

It could fail when visiting a page that would traverse to an icon.
Happens at least in plone.i18n tests, and this fixes 13 failures there.
Added a few tests in CMFPlone as well.

Files changed:
M Products/CMFPlone/tests/test_icons.py
M Products/CMFPlone/traversal.py

b'diff --git a/Products/CMFPlone/tests/test_icons.py b/Products/CMFPlone/tests/test_icons.py\nindex 4832c8b0db..9b720c546f 100644\n--- a/Products/CMFPlone/tests/test_icons.py\n+++ b/Products/CMFPlone/tests/test_icons.py\n@@ -36,4 +36,39 @@ def test_icons_url(self):\n     def test_icons_tag(self):\n         page = self.app\n         view = page.restrictedTraverse(\'@@iconresolver\')\n-        self.assertIn(b\'bi bi-bug\', view.tag(\'bug\'))\n\\ No newline at end of file\n+        self.assertIn(b\'bi bi-bug\', view.tag(\'bug\'))\n+\n+\n+\n+class IconTraverserTest(unittest.TestCase):\n+    """Test the icon traverser or PloneBundlesTraverser."""\n+\n+    layer = PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n+\n+    def setUp(self):\n+        self.portal = self.layer[\'portal\']\n+        self.request = self.layer[\'request\']\n+\n+    def test_default_icon(self):\n+        self.portal.restrictedTraverse("++plone++icons/plone.svg")\n+\n+    def test_bootstrap_icon(self):\n+        self.portal.restrictedTraverse("++plone++bootstrap-icons/clock.svg")\n+\n+    def test_bootstrap_icon_with_path_info(self):\n+        """Get bootstrap icon while request has a PATH_INFO.\n+\n+        When the request has PATH_INFO, which it normally has,\n+        the code originally ignored the remaining name (clock.svg)\n+        and tried to traverse based on this PATH_INFO.\n+        This works fine when the url of the request is for an icon.\n+        But when the url is for a normal page which tries to load an icon\n+        in the template, it fails.\n+\n+        I don\'t know why most of the time it goes right.\n+        But I have occasionally seen failures.\n+        And it happens at least in plone.i18n tests.\n+        https://github.com/plone/plone.i18n/pull/41\n+        """\n+        self.request.environ["PATH_INFO"] = "plone"\n+        self.portal.restrictedTraverse("++plone++bootstrap-icons/clock.svg")\ndiff --git a/Products/CMFPlone/traversal.py b/Products/CMFPlone/traversal.py\nindex ebeb4a9120..77f33f36a0 100644\n--- a/Products/CMFPlone/traversal.py\n+++ b/Products/CMFPlone/traversal.py\n@@ -33,7 +33,14 @@ def traverse(self, name, remaining):\n             return super().traverse(name, remaining)\n \n         resource_path = req.environ[\'PATH_INFO\'].split(\'++plone++\')[-1]\n-        resource_name, resource_filepath = resource_path.split(\'/\', 1)\n+        try:\n+            resource_name, resource_filepath = resource_path.split(\'/\', 1)\n+        except ValueError:\n+            # Not the path info / url that we expected.\n+            # So the request is not for a resource,\n+            # but for a page that traverses to a resource.\n+            # The standard resource traverser can handle this.\n+            return super().traverse(name, remaining)\n \n         # If we have additional traversers in the path we should not use them\n         # in the file lookup\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:43+01:00
Author: Peter Holzer (agitator) <peter.holzer@agitator.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/10abc4ff05713f8bec1d9d995e9deb50fce466cc

fix actionmenu tests

Files changed:
M Products/CMFPlone/tests/robot/test_actionmenu.robot

b"diff --git a/Products/CMFPlone/tests/robot/test_actionmenu.robot b/Products/CMFPlone/tests/robot/test_actionmenu.robot\nindex 945faefd9a..4182e6a59e 100644\n--- a/Products/CMFPlone/tests/robot/test_actionmenu.robot\n+++ b/Products/CMFPlone/tests/robot/test_actionmenu.robot\n@@ -107,11 +107,11 @@ I click outside of menu\n \n workflow link is clicked\n     # store current state\n-    ${OLD_STATE} =  Get Text  xpath=(//span[contains(@class,'state-')])[2]\n+    ${OLD_STATE} =  Get Text  xpath=(//span[contains(@class,'state-')])\n     Set Suite Variable  ${OLD_STATE}  ${OLD_STATE}\n     Given patterns are loaded\n     Click Link  xpath=//li[@id='plone-contentmenu-workflow']/a\n-    Click Link  xpath=(//li[@id='plone-contentmenu-workflow']/ul/li/a)[1]\n+    Click Link  xpath=(//li[@id='plone-contentmenu-workflow']/div/ul/li/a)[1]\n     Page Should Contain  Item state changed.\n     # FIXME: The above 'Click Link' fails on Internet Explorer, but the\n     # following keywords 'workflow link is clicked softly' passes. Until we\n@@ -140,17 +140,17 @@ Open Menu\n Open Action Menu\n     Given patterns are loaded\n     Click link  xpath=//li[@id='plone-contentmenu-actions']/a\n-    Wait until keyword succeeds  5  1  Element Should Be Visible  css=.plonetoolbar-content-action\n+    Wait until keyword succeeds  5  1  Element Should Be Visible  css=#plone-contentmenu-actions .collapse\n \n I copy the page\n     Open Action Menu\n-    Click Link  link=Copy\n+    Click Link  css=#plone-contentmenu-actions .actionicon-object_buttons-copy\n     Page should contain  copied\n \n I paste\n     Go to  ${PLONE_URL}\n     Open Action Menu\n-    Click Link  link=Paste\n+    Click Link  css=#plone-contentmenu-actions .actionicon-object_buttons-paste\n \n \n # --- THEN -------------------------------------------------------------------\n@@ -183,7 +183,7 @@ I should see '${message}' in the page\n \n state should have changed\n     Wait until page contains  Item state changed\n-    ${NEW_STATE} =  Get Text  xpath=(//span[contains(@class,'state-')])[2]\n+    ${NEW_STATE} =  Get Text  xpath=(//span[contains(@class,'state-')])\n     # Should Not Be Equal  ${NEW_STATE}  ${OLD_STATE}\n \n second menu should be visible\n"

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:43+01:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/4811022cb890281bbdfe10389eaf10196afaa0f7

Fix some robot test for TinyMCE

Files changed:
M Products/CMFPlone/tests/robot/test_tinymce.robot

b'diff --git a/Products/CMFPlone/tests/robot/test_tinymce.robot b/Products/CMFPlone/tests/robot/test_tinymce.robot\nindex 922626d414..518b5dcca7 100644\n--- a/Products/CMFPlone/tests/robot/test_tinymce.robot\n+++ b/Products/CMFPlone/tests/robot/test_tinymce.robot\n@@ -50,29 +50,31 @@ an uploaded image\n     Create content  type=Image  title=an-image\n \n text inserted into wysiwyg\n-    Select Frame  css=.mce-edit-area iframe\n+    Wait Until Element Is Visible  css=.tox-edit-area iframe\n+    Select Frame  css=.tox-edit-area iframe\n     Input text  css=.mce-content-body  foobar\n     UnSelect Frame\n \n insert link\n-    Select Frame  css=.mce-edit-area iframe\n+    Select Frame  css=.tox-edit-area iframe\n     Execute Javascript    function selectElementContents(el) {var range = document.createRange(); range.selectNodeContents(el); var sel = window.getSelection(); sel.removeAllRanges(); sel.addRange(range);} var el = document.getElementById("tinymce"); selectElementContents(el);\n     UnSelect Frame\n-    Click Button  css=div[aria-label="Insert/edit link"] button\n-    Click Button  css=.pattern-relateditems-container button.favorites\n-    Click Link  css=.pattern-relateditems-container .favorites a.fav[href=\'/\']\n+    Click Button  css=button[aria-label="Insert/edit link"]\n+    Click Button  css=.pat-relateditems-container button.favorites\n+    debug\n+    Click Link  css=.pat-relateditems-container .favorites a.fav[href=\'/\']\n     Wait Until Element Is Visible  css=.pattern-relateditems-result-select.selectable\n     Click Link  css=.pattern-relateditems-result-select.selectable\n     Click Button  css=.modal-footer .plone-btn-primary\n-    Select Frame  css=.mce-edit-area iframe\n+    Select Frame  css=.tox-edit-area iframe\n     Execute Javascript  window.getSelection().removeAllRanges()\n     UnSelect Frame\n     Wait Until Element Is Not Visible  css=.modal-footer .plone-btn-primary\n \n insert image\n-    Click Button  css=div[aria-label="Insert/edit image"] button\n-    Click Button  css=.pattern-relateditems-container button.favorites\n-    Click Link  css=.pattern-relateditems-container .favorites a.fav[href=\'/\']\n+    Click Button  css=button[aria-label="Insert/edit image"]\n+    Click Button  css=.pat-relateditems-container button.favorites\n+    Click Link  css=.pat-relateditems-container .favorites a.fav[href=\'/\']\n     Wait Until Element Is Visible  css=.pattern-relateditems-result-select.selectable\n     Click Link  css=.pattern-relateditems-result-select.selectable\n     Input Text  css=.modal-body [name="title"]  SomeTitle\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:43+01:00
Author: Markus Hilbert (iham) <markus.hilbert@iham.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/502435cd6f278ee557336a3f63580c8b861780c0

Fixed robottests for linkintegrity.

Files changed:
M Products/CMFPlone/tests/robot/test_linkintegrity.robot

b'diff --git a/Products/CMFPlone/tests/robot/test_linkintegrity.robot b/Products/CMFPlone/tests/robot/test_linkintegrity.robot\nindex fc2e1bdb19..bf2b03adcf 100644\n--- a/Products/CMFPlone/tests/robot/test_linkintegrity.robot\n+++ b/Products/CMFPlone/tests/robot/test_linkintegrity.robot\n@@ -69,23 +69,23 @@ a page to edit\n \n a link in rich text\n   Go To  ${PLONE_URL}/bar/edit\n-  Wait until element is visible  css=.mce-edit-area iframe\n-  Select Frame  css=.mce-edit-area iframe\n+  Wait until element is visible  css=.tox-edit-area iframe\n+  Select Frame  css=.tox-edit-area iframe\n   Input text  css=.mce-content-body  foo\n   Execute Javascript    function selectElementContents(el) {var range = document.createRange(); range.selectNodeContents(el); var sel = window.getSelection(); sel.removeAllRanges(); sel.addRange(range);} var el = document.getElementById("tinymce"); selectElementContents(el);\n   UnSelect Frame\n-  Click Button  css=div[aria-label="Insert/edit link"] button\n+  Click Button  css=button[aria-label="Insert/edit link"]\n \n   Given patterns are loaded\n   Wait until element is visible  css=.pat-relateditems .select2-input.select2-default\n   Click Element  css=.pat-relateditems .select2-input.select2-default\n-  Wait until element is visible  css=.pattern-relateditems-result.one-level-up a.pattern-relateditems-result-browse\n-  Click Element  css=.pattern-relateditems-result.one-level-up a.pattern-relateditems-result-browse\n+  Wait until element is visible  css=.pat-relateditems-result.one-level-up a.pat-relateditems-result-browse\n+  Click Element  css=.pat-relateditems-result.one-level-up a.pat-relateditems-result-browse\n   Wait until element is visible  xpath=(//span[contains(., \'Foo\')])\n   Click Element  xpath=(//span[contains(., \'Foo\')])\n   Wait until page contains  Foo\n \n-  Click Button  css=.modal-footer .plone-btn-primary\n+  Click Button  css=.modal-footer .btn-primary\n   Click Button  css=#form-buttons-save\n \n \n@@ -142,10 +142,10 @@ remove link to page\n   Go To  ${PLONE_URL}/bar\n   Wait until element is visible  css=#contentview-edit a\n   Click Link  css=#contentview-edit a\n-  Wait until element is visible  css=.mce-edit-area iframe\n-  Select Frame  css=.mce-edit-area iframe\n+  Wait until element is visible  css=.tox-edit-area iframe\n+  Select Frame  css=.tox-edit-area iframe\n   Input text  css=.mce-content-body  foo\n   Execute Javascript    function selectElementContents(el) {var range = document.createRange(); range.selectNodeContents(el); var sel = window.getSelection(); sel.removeAllRanges(); sel.addRange(range);} var el = document.getElementById("tinymce"); selectElementContents(el);\n   UnSelect Frame\n-  Click Button  css=div[aria-label="Remove link"] button\n+  Click Button  css=button[aria-label="Remove link"]\n   Click Button  css=#form-buttons-save\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:43+01:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/724a437592f6cddfab00977b60f3b5836de605d7

Fix robot test `Scenario: New user overlay closes on valid data`

Files changed:
M Products/CMFPlone/controlpanel/browser/usergroups_usersoverview.pt

b'diff --git a/Products/CMFPlone/controlpanel/browser/usergroups_usersoverview.pt b/Products/CMFPlone/controlpanel/browser/usergroups_usersoverview.pt\nindex 997c4befdb..746cea90df 100644\n--- a/Products/CMFPlone/controlpanel/browser/usergroups_usersoverview.pt\n+++ b/Products/CMFPlone/controlpanel/browser/usergroups_usersoverview.pt\n@@ -61,7 +61,7 @@\n \n         <div class="mb-3 input-group">\n           <a class="pat-plone-modal me-3 btn btn-success " id="add-user"\n-             data-pat-plone-modal="{&quot;actionOptions&quot;: {&quot;displayInModal&quot;: false}}"\n+             data-pat-plone-modal="{&quot;actionOptions&quot;: {&quot;disableAjaxFormSubmit&quot;: true}}"\n              tal:attributes="href string:${portal_url}/@@new-user"\n              i18n:translate="label_add_new_user">Add New User</a>\n           <span class="input-group-text" id="quickSearchLabel" i18n:translate="label_user_search">User Search</span>\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:43+01:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/5839637b623820e325406c8df96a8806fbd41f97

fix robottest for Social Settings

Files changed:
M Products/CMFPlone/interfaces/controlpanel.py

b"diff --git a/Products/CMFPlone/interfaces/controlpanel.py b/Products/CMFPlone/interfaces/controlpanel.py\nindex 8cd4db020a..c6f7269285 100644\n--- a/Products/CMFPlone/interfaces/controlpanel.py\n+++ b/Products/CMFPlone/interfaces/controlpanel.py\n@@ -1455,7 +1455,9 @@ class ISocialMediaSchema(Interface):\n         description=_('Include meta tags on pages to give hints to '\n                       'social media on how to better render your pages '\n                       'when shared'),\n-        default=True)\n+        default=True,\n+        required=False,\n+    )\n \n     twitter_username = schema.ASCIILine(\n         title=_('Twitter username'),\n"

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:43+01:00
Author: Markus Hilbert (iham) <markus.hilbert@iham.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/530a4e5b7eca0a006ba8eabfe419d62708901e8d

Fixed robottest selector to ".pat-*" instead of ".pattern-*"

Files changed:
M Products/CMFPlone/tests/robot/test_querystring.robot

b"diff --git a/Products/CMFPlone/tests/robot/test_querystring.robot b/Products/CMFPlone/tests/robot/test_querystring.robot\nindex fb98236c81..11b3040cb7 100644\n--- a/Products/CMFPlone/tests/robot/test_querystring.robot\n+++ b/Products/CMFPlone/tests/robot/test_querystring.robot\n@@ -296,7 +296,7 @@ I search in ${NAME} subfolder in the related items widget\n     mark results\n     Click Element  css=ul.select2-choices\n     Wait Until Page Contains  ${NAME}\n-    Click Element  //a[contains(concat(' ', normalize-space(@class), ' '), ' pattern-relateditems-result-select ')]//span[contains(text(),'${NAME}')]\n+    Click Element  //a[contains(concat(' ', normalize-space(@class), ' '), ' pat-relateditems-result-select ')]//span[contains(text(),'${NAME}')]\n \n I expect to be in Advanced mode\n     open the select box titled operator\n"

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:43+01:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/ad608fc94f187cfcf9b63188f58cf9c10db740e2

Fix Scenario Event end date query

Files changed:
M Products/CMFPlone/tests/robot/test_querystring.robot

b'diff --git a/Products/CMFPlone/tests/robot/test_querystring.robot b/Products/CMFPlone/tests/robot/test_querystring.robot\nindex 11b3040cb7..ef22e81206 100644\n--- a/Products/CMFPlone/tests/robot/test_querystring.robot\n+++ b/Products/CMFPlone/tests/robot/test_querystring.robot\n@@ -134,10 +134,10 @@ Scenario Event end date query\n     and the querystring pattern\n     # Before date\n     When I activate the default operator in the criteria Event end date\n-    and Execute Javascript  $(\'.querystring-criteria-value .pattern-pickadate-date-wrapper > input[type="text"]\').pickadate(\'picker\').set(\'select\', new Date(2018, 7, 1))\n+    and Execute Javascript  $(\'.querystring-criteria-value input[type="date"]\').val(\'2018-07-01\')\n     Then we do not expect any hits\n \n-    # When Execute Javascript  $(\'.querystring-criteria-value .pattern-pickadate-date-wrapper > input[type="text"]\').pickadate(\'picker\').set(\'select\', new Date(2018, 7, 6))\n+    # When Execute Javascript  $(\'.querystring-criteria-value input[type="date"]\').val(\'2018-07-06\')\n \n     # !!! BUG in plone.app.robotframework?\n     # File "~/.buildout/shared-eggs/plone.app.event-3.2.1-py3.6.egg/plone/app/event/recurrence.py", line 77, in occurrences\n@@ -245,9 +245,9 @@ a bunch of folders\n \n a bunch of events\n     ${F1}=  a bunch of folders\n-    Create content  type=Event  title=Event1  start=2018-08-01 15:00  end=2018-08-01 17:00  container=${F1}\n-    Create content  type=Event  title=Event2  start=2018-08-05 16:00  end=2018-08-07 11:00  container=${F1}\n-    Create content  type=Event  title=Event3  start=2018-08-05 16:30  open_end-empty-marker=1  container=${F1}\n+    Create content  type=Event  title=Event1  start=2018-08-01T15:00  end=2018-08-01T17:00  container=${F1}\n+    Create content  type=Event  title=Event2  start=2018-08-05T16:00  end=2018-08-07T11:00  container=${F1}\n+    Create content  type=Event  title=Event3  start=2018-08-05T16:30  open_end-empty-marker=1  container=${F1}\n     Create content  type=Event  title=Event4  start=2018-08-06  end=2018-08-06  whole_day-empty-marker=1  container=${F1}\n \n I activate the default operator in the criteria ${CRITERIA}\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:43+01:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/c13ec89822495b4e108440d5bf9d3c4e4d835fe4

Remove debug statement

Files changed:
M Products/CMFPlone/tests/robot/test_tinymce.robot

b'diff --git a/Products/CMFPlone/tests/robot/test_tinymce.robot b/Products/CMFPlone/tests/robot/test_tinymce.robot\nindex 518b5dcca7..fd4ae24863 100644\n--- a/Products/CMFPlone/tests/robot/test_tinymce.robot\n+++ b/Products/CMFPlone/tests/robot/test_tinymce.robot\n@@ -61,7 +61,6 @@ insert link\n     UnSelect Frame\n     Click Button  css=button[aria-label="Insert/edit link"]\n     Click Button  css=.pat-relateditems-container button.favorites\n-    debug\n     Click Link  css=.pat-relateditems-container .favorites a.fav[href=\'/\']\n     Wait Until Element Is Visible  css=.pattern-relateditems-result-select.selectable\n     Click Link  css=.pattern-relateditems-result-select.selectable\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:43+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/9226763e3c739142bfc09b13c35c11cb73010288

fix tobot test where email field is required

Files changed:
M Products/CMFPlone/tests/robot/test_edit_user_schema.robot

b'diff --git a/Products/CMFPlone/tests/robot/test_edit_user_schema.robot b/Products/CMFPlone/tests/robot/test_edit_user_schema.robot\nindex 6fa463c2d7..4d8f469eed 100644\n--- a/Products/CMFPlone/tests/robot/test_edit_user_schema.robot\n+++ b/Products/CMFPlone/tests/robot/test_edit_user_schema.robot\n@@ -177,6 +177,7 @@ a logged-in user will see the field on top of the user profile\n \n a logged-in user will see a field with min/max constraints\n   a logged-in user will see the field in the user profile\n+  Input Text  form.widgets.email  test@plone.org\n   Input Text  form.widgets.test_field  1\n   Click Button  Save\n   Wait until page contains  There were some errors.\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:43+01:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/6f2680f9f9bfd4db7c14716116cdc477a0e9e88f

Improve tests and remove deprecation

Files changed:
M Products/CMFPlone/tests/robot/test_edit_user_schema.robot

b'diff --git a/Products/CMFPlone/tests/robot/test_edit_user_schema.robot b/Products/CMFPlone/tests/robot/test_edit_user_schema.robot\nindex 4d8f469eed..51893fb86a 100644\n--- a/Products/CMFPlone/tests/robot/test_edit_user_schema.robot\n+++ b/Products/CMFPlone/tests/robot/test_edit_user_schema.robot\n@@ -99,9 +99,13 @@ I add a new text field to the member fields\n   Press Key  css=#add-field-form #form-widgets-title  \\\\09\n   Select From List By Label  css=#form-widgets-factory  Text line (String)\n   Click button  css=.pattern-modal-buttons button#form-buttons-add\n-  # XXX: This is really really bad! We need a UI notification like:\n-  # Wait until page contains  Field created.\n-  Sleep  1\n+  Wait until page contains  Field added successfully.\n+\n+I Open the test_field Settings\n+  Go to  ${PLONE_URL}/@@member-fields\n+  Wait until page contains element  css=div[data-field_id=\'test_field\']\n+  Set Focus To Element  css=div[data-field_id=\'test_field\'] a.fieldSettings\n+  Wait Until Keyword Succeeds  3  100ms  Click link  css=div[data-field_id=\'test_field\'] a.fieldSettings\n \n I add a new required text field to the member fields\n   Go to  ${PLONE_URL}/@@member-fields\n@@ -113,38 +117,28 @@ I add a new required text field to the member fields\n   Select From List By Label  css=#form-widgets-factory  Text line (String)\n   Select Checkbox  form.widgets.required:list\n   Click button  css=.pattern-modal-buttons button#form-buttons-add\n-  # XXX: This is really really bad! We need a UI notification like:\n-  # Wait until page contains  Field created.\n-  Sleep  1\n+  Wait until page contains  Field added successfully.\n \n choose to show the field on registration\n-  Go to  ${PLONE_URL}/@@member-fields\n-  Wait until page contains element  css=div[data-field_id=\'test_field\']\n-  Click link  css=div[data-field_id=\'test_field\'] a.fieldSettings\n+  I Open the test_field Settings\n   Wait Until Element Is visible  form.widgets.IUserFormSelection.forms:list\n   Select Checkbox  css=#form-widgets-IUserFormSelection-forms-0\n   Click button  css=.pattern-modal-buttons button#form-buttons-save\n-  # XXX: This is really really bad! We need a UI notification like:\n-  # Wait until page contains  Field created.\n-  Sleep  1\n+  Wait until page contains  Data successfully updated.\n \n choose to show the field in the user profile\n-  Go to  ${PLONE_URL}/@@member-fields\n-  Wait until page contains element  css=div[data-field_id=\'test_field\']\n-  Click link  css=div[data-field_id=\'test_field\'] a.fieldSettings\n+  I Open the test_field Settings\n   Wait Until Element Is visible  form.widgets.IUserFormSelection.forms:list\n   Select Checkbox  css=#form-widgets-IUserFormSelection-forms-1\n   Click button  css=.pattern-modal-buttons button#form-buttons-save\n-  # XXX: This is really really bad! We need a UI notification like:\n-  # Wait until page contains  Field created.\n-  Sleep  1\n+  Wait until page contains  Data successfully updated.\n \n I move the new field to the top\n   # XXX: Drag and drop is not working!!!\n   Drag And Drop  xpath=//div[@data-field_id="test_field"]//span[contains(@class, "draghandle")]  xpath=//div[@data-field_id="home_page"]\n \n add a min/max constraint to the field\n-  Click Link  xpath=//div[@data-field_id=\'test_field\']//a[contains(@class, \'fieldSettings\')]\n+  I Open the test_field Settings\n   Wait until page contains element  form.widgets.min_length\n   Input Text  form.widgets.min_length  4\n   Input Text  form.widgets.max_length  6\n@@ -169,11 +163,11 @@ a logged-in user will see the field in the user profile\n \n a logged-in user will see the required field in the user profile\n   a logged-in user will see the field in the user profile\n-  XPath Should Match X Times  //div[@id=\'formfield-form-widgets-test_field\']//span[contains(@class, \'required\')]  1  message=test_field should be required\n+  Page Should Contain Element  //div[@id=\'formfield-form-widgets-test_field\']//span[contains(@class, \'required\')]  limit=1  message=test_field should be required\n \n a logged-in user will see the field on top of the user profile\n   a logged-in user will see the field in the user profile\n-  XPath Should Match X Times  //form[@id=\'form\']/div[1]//input[@id=\'form-widgets-test_field\']  1  message=test_field should be on top\n+  Page Should Contain Element  //form[@id=\'form\']/div[1]//input[@id=\'form-widgets-test_field\']  limit=1  message=test_field should be on top\n \n a logged-in user will see a field with min/max constraints\n   a logged-in user will see the field in the user profile\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:43+01:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/ea0bed872bae09106697354446de950ea0db1a86

Change checked error

Files changed:
M Products/CMFPlone/tests/robot/test_overlays.robot

b'diff --git a/Products/CMFPlone/tests/robot/test_overlays.robot b/Products/CMFPlone/tests/robot/test_overlays.robot\nindex 750a01b251..e6b394ec6b 100644\n--- a/Products/CMFPlone/tests/robot/test_overlays.robot\n+++ b/Products/CMFPlone/tests/robot/test_overlays.robot\n@@ -180,7 +180,7 @@ Scenario: New user overlay remains on wrong data\n       And I trigger the add a new user action\n      When I send the register form\n      Then overlay should remain open\n-      And overlay shows an error\n+      And overlay requires to compile a field\n \n Scenario: New user overlay closes on valid data\n     Given a logged-in site administrator\n@@ -250,6 +250,9 @@ login overlay shows an error\n overlay shows an error\n     Wait Until Page Contains  There were errors\n \n+overlay requires to compile a field\n+    Wait Until Page Contains  This field is required\n+\n I \'${action}\' the form\n     Wait until keyword succeeds  30  1  Element Should Be Visible  css=div.modal-footer button[name="form.buttons.${action}"]\n     Click Element  css=div.modal-footer button[name="form.buttons.${action}"]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:43+01:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/b38555c4e617b5a49b4f9b96f956cc0549ff51a9

fix TinyMCE robot tests

Files changed:
M Products/CMFPlone/tests/robot/test_tinymce.robot

b'diff --git a/Products/CMFPlone/tests/robot/test_tinymce.robot b/Products/CMFPlone/tests/robot/test_tinymce.robot\nindex fd4ae24863..8f56da5823 100644\n--- a/Products/CMFPlone/tests/robot/test_tinymce.robot\n+++ b/Products/CMFPlone/tests/robot/test_tinymce.robot\n@@ -28,13 +28,10 @@ Scenario: A page is opened to edit in TinyMCE\n       and insert link\n       and insert image\n \n-    Click Button  css=#form-buttons-save\n-    # in FF 34 this fails. in FF46 or chrome this is not a problem at all.\n-    # remove "Run Keyword And Ignore Error" when https://github.com/plone/jenkins.plone.org/issues/179\n-    # was solved\n-    Run Keyword And Ignore Error  Element Should Be Visible  css=#parent-fieldname-text img[alt="SomeAlt"]\n-    Run Keyword And Ignore Error  Element Should Be Visible  css=#parent-fieldname-text img[title="SomeTitle"]\n-    Element Should Be Visible  css=#parent-fieldname-text a\n+    Set Focus To Element  css=#form-buttons-save\n+    Wait Until Element Is Visible  css=#form-buttons-save\n+    Click Button  Save\n+    Wait until page contains  Changes saved\n \n \n *** Keywords *****************************************************************\n@@ -62,23 +59,21 @@ insert link\n     Click Button  css=button[aria-label="Insert/edit link"]\n     Click Button  css=.pat-relateditems-container button.favorites\n     Click Link  css=.pat-relateditems-container .favorites a.fav[href=\'/\']\n-    Wait Until Element Is Visible  css=.pattern-relateditems-result-select.selectable\n-    Click Link  css=.pattern-relateditems-result-select.selectable\n-    Click Button  css=.modal-footer .plone-btn-primary\n+    Wait Until Element Is Visible  css=.pat-relateditems-result-select.selectable\n+    Click Link  css=.pat-relateditems-result-select.selectable\n+    Click Button  css=.modal-footer input[name="insert"]\n     Select Frame  css=.tox-edit-area iframe\n     Execute Javascript  window.getSelection().removeAllRanges()\n     UnSelect Frame\n-    Wait Until Element Is Not Visible  css=.modal-footer .plone-btn-primary\n+    Wait Until Element Is Not Visible  css=.modal-footer input[name="insert"]\n \n insert image\n     Click Button  css=button[aria-label="Insert/edit image"]\n     Click Button  css=.pat-relateditems-container button.favorites\n     Click Link  css=.pat-relateditems-container .favorites a.fav[href=\'/\']\n-    Wait Until Element Is Visible  css=.pattern-relateditems-result-select.selectable\n-    Click Link  css=.pattern-relateditems-result-select.selectable\n+    Wait Until Element Is Visible  css=.pat-relateditems-result-select.selectable\n+    Click Link  css=.pat-relateditems-result-select.selectable\n     Input Text  css=.modal-body [name="title"]  SomeTitle\n     Input Text  css=.modal-body [name="alt"]  SomeAlt\n-    Click Button  css=.modal-footer .plone-btn-primary[name=\'insert\']\n-    # in FF 34 we need to click twice. in FF46 or chrome this is not a problem at all.\n-    Run Keyword And Ignore Error  Click Button  css=.modal-footer .plone-btn-primary[name=\'insert\']\n-    Wait Until Element Is Not Visible  css=.modal-footer .plone-btn-primary[name=\'insert\']\n+    Click Button  css=.modal-footer input[name="insert"]\n+    Wait Until Element Is Not Visible  css=.modal-footer input[name="insert"]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:43+01:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/ecefbe27845c7c88e5930be2d54f773739187868

fix bootstrap css class for &lt;select /&gt;

Files changed:
M Products/CMFPlone/browser/templates/plone-addsite.pt

b'diff --git a/Products/CMFPlone/browser/templates/plone-addsite.pt b/Products/CMFPlone/browser/templates/plone-addsite.pt\nindex 9bd9ce862b..7dff6a74c5 100644\n--- a/Products/CMFPlone/browser/templates/plone-addsite.pt\n+++ b/Products/CMFPlone/browser/templates/plone-addsite.pt\n@@ -75,7 +75,7 @@\n           <div class="col-md-12 mb-3">\n             <label for="default_language" class="form-label" i18n:translate="">Language</label>\n \n-            <select name="default_language" class="form-control"\n+            <select name="default_language" class="form-select"\n                     tal:define="browser_language view/browser_language;\n                                 grouped_languages python:view.grouped_languages(browser_language)">\n               <optgroup tal:repeat="group grouped_languages"\n@@ -105,7 +105,7 @@\n \n             <select id="portal_timezone"\n                     name="portal_timezone"\n-                    class="form-control"\n+                    class="form-select"\n                     tal:define="tz_list view/timezones">\n               <optgroup tal:repeat="group tz_list"\n                         tal:attributes="label group">\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:43+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/a088b5e9c293f42aa321ded6d6eb7c8a252ce28e

resources, dependency error detection and graceful fallback

Files changed:
M Products/CMFPlone/resources/browser/resource.py

b'diff --git a/Products/CMFPlone/resources/browser/resource.py b/Products/CMFPlone/resources/browser/resource.py\nindex fb593d4213..433ed6b269 100644\n--- a/Products/CMFPlone/resources/browser/resource.py\n+++ b/Products/CMFPlone/resources/browser/resource.py\n@@ -17,11 +17,19 @@\n from zope.component import queryUtility\n from zope.ramcache.interfaces import ram\n \n+import logging\n import webresource\n \n+logger = logging.getLogger(__name__)\n \n REQUEST_CACHE_KEY = "_WEBRESOURCE_CACHE_"\n \n+GRACEFUL_DEPENDENCY_REWRITE = {\n+    "plone-base": "plone",\n+    "plone-legacy": "plone",\n+    "plone-logged-in": "plone",\n+}\n+\n \n class ResourceBase:\n     """Information for script rendering.\n@@ -93,6 +101,11 @@ def update(self):\n             request_enabled_bundles.update(getattr(request, "enabled_bundles", []))\n             request_disabled_bundles.update(getattr(request, "disabled_bundles", []))\n \n+        # collect names\n+        js_names = {name for name, rec in records.items() if rec.jscompilation}\n+        css_names = {name for name, rec in records.items() if rec.csscompilation}\n+\n+        # register\n         for name, record in records.items():\n             include = record.enabled\n             include = include or name in theme_enabled_bundles\n@@ -107,11 +120,26 @@ def current_expression():\n \n                 include = current_expression\n             if record.jscompilation:\n+                depends = record.depends or ""\n+                if depends and depends not in js_names:\n+                    msg = f"Bundle \'{name}\' has a non existing dependeny on \'{record.depends}\'. "\n+                    if depends not in GRACEFUL_DEPENDENCY_REWRITE:\n+                        logger.error(\n+                            msg + "Bundle ignored (JS) - This may break your site!"\n+                        )\n+                        continue\n+                    graceful_depends = GRACEFUL_DEPENDENCY_REWRITE[depends]\n+                    logger.error(\n+                        msg\n+                        + f"Bundle dependency (JS) graceful rewritten to \'{graceful_depends}\' "\n+                        + "Fallback will be removed in Plone 7."\n+                    )\n+                    depends = graceful_depends\n                 external = record.jscompilation.startswith("http")\n                 resource = PloneScriptResource(\n                     context=self.context,\n                     name=name,\n-                    depends=record.depends or "",\n+                    depends=depends,\n                     resource=record.jscompilation if not external else None,\n                     compressed=record.jscompilation if not external else None,\n                     include=include,\n@@ -124,11 +152,26 @@ def current_expression():\n                     integrity=not external,\n                 )\n             if record.csscompilation:\n+                depends = record.depends or ""\n+                if depends and depends not in css_names:\n+                    msg = f"Bundle \'{name}\' has a non existing dependeny on \'{record.depends}\'. "\n+                    if depends not in GRACEFUL_DEPENDENCY_REWRITE:\n+                        logger.error(\n+                            msg + "Bundle ignored (CSS) - This may break your site!"\n+                        )\n+                        continue\n+                    graceful_depends = GRACEFUL_DEPENDENCY_REWRITE[depends]\n+                    logger.error(\n+                        msg\n+                        + f"Bundle dependency (CSS) graceful rewritten to \'{graceful_depends}\' "\n+                        + "Fallback will be removed in Plone 7."\n+                    )\n+                    depends = graceful_depends\n                 external = record.csscompilation.startswith("http")\n                 resource = PloneStyleResource(\n                     context=self.context,\n                     name=name,\n-                    depends=record.depends or "",\n+                    depends=depends,\n                     resource=record.csscompilation if not external else None,\n                     compressed=record.csscompilation if not external else None,\n                     include=include,\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:43+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/3c1cc61e783ab8b2c2f359c99088a6e647e6ffcf

bool field is not required

Files changed:
M Products/CMFPlone/profiles/dependencies/registry.xml

b'diff --git a/Products/CMFPlone/profiles/dependencies/registry.xml b/Products/CMFPlone/profiles/dependencies/registry.xml\nindex b3aa55a7d9..a2868d12c5 100644\n--- a/Products/CMFPlone/profiles/dependencies/registry.xml\n+++ b/Products/CMFPlone/profiles/dependencies/registry.xml\n@@ -91,6 +91,7 @@\n   <record name="plone.resources.development">\n     <field type="plone.registry.field.Bool">\n       <title>Frontend development mode</title>\n+      <required>False</required>\n     </field>\n     <value>False</value>\n   </record>\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:43+01:00
Author: petschki (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/2998e776ee49fa594f93266ae6957279494e7cba

bootstrap.bundle.min.js is disabled per default

Files changed:
M Products/CMFPlone/tests/testResourceRegistries.py

b'diff --git a/Products/CMFPlone/tests/testResourceRegistries.py b/Products/CMFPlone/tests/testResourceRegistries.py\nindex fde3f316b8..c4da9db9a5 100644\n--- a/Products/CMFPlone/tests/testResourceRegistries.py\n+++ b/Products/CMFPlone/tests/testResourceRegistries.py\n@@ -76,7 +76,7 @@ def test_scripts_viewlet(self):\n         scripts = ScriptsView(self.layer["portal"], self.layer["request"], None)\n         scripts.update()\n         results = scripts.render()\n-        self.assertIn(\n+        self.assertNotIn(\n             "++plone++static/bundle-bootstrap/js/bootstrap.bundle.min.js", results\n         )\n         self.assertIn("++plone++static/bundle-plone/bundle.min.js", results)\n@@ -87,7 +87,7 @@ def test_scripts_viewlet_anonymous(self):\n         scripts = ScriptsView(self.layer["portal"], self.layer["request"], None)\n         scripts.update()\n         results = scripts.render()\n-        self.assertIn(\n+        self.assertNotIn(\n             "++plone++static/bundle-bootstrap/js/bootstrap.bundle.min.js", results\n         )\n         self.assertIn("++plone++static/bundle-plone/bundle.min.js", results)\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:43+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/fcf8d0887884d37da7304722f78286d571ab5029

add more examples for bootstrap components

Files changed:
M Products/CMFPlone/browser/templates/test_rendering.pt

b'diff --git a/Products/CMFPlone/browser/templates/test_rendering.pt b/Products/CMFPlone/browser/templates/test_rendering.pt\nindex 92dcaa993a..5b2ca3dbba 100644\n--- a/Products/CMFPlone/browser/templates/test_rendering.pt\n+++ b/Products/CMFPlone/browser/templates/test_rendering.pt\n@@ -15,9 +15,9 @@\n       bad behaviour on this front.\n     </p>\n \n-    <p>Check out Bootstrap\'s <a href="https://getbootstrap.com/docs/4.5/getting-started/introduction/" target="_blank" title="Bootstrap Documentation">Documentation</a> and examples for Bootstrap typography, including global settings, headings, body text, lists, and more. Everything is available in Plone now!</p>\n+    <p>Check out Bootstrap\'s <a href="https://getbootstrap.com/docs/5.1/getting-started/introduction/" target="_blank" title="Bootstrap Documentation">Documentation</a> and examples for Bootstrap typography, including global settings, headings, body text, lists, and more. Everything is available in Plone now!</p>\n \n-    <h1>Headings</h1>\n+    <h2 class="mt-5">Headings</h2>\n \n     <p>All HTML headings, &lt;h1&gt; through &lt;h6&gt;, are available. .h1 through .h6 classes are also available, for when you want to match the font styling of a heading but cannot use the associated HTML element.</p>\n \n@@ -28,12 +28,12 @@\n     <h5>h5. Bootstrap heading</h5>\n     <h6>h6. Bootstrap heading</h6>\n \n-    <h1>Icons</h1>\n+    <h2 class="mt-5">Icons</h2>\n \n     <p>Description to explain icon resolver</p>\n \n \n-    <h2>Get Icon URL</h2>\n+    <h3 class="mt-5">Get Icon URL</h3>\n \n     <p>\n       <code>&lt;img src="" tal:attributes="src python:icons.url(\'alarm\')" class="custom-class" alt="foo" /&gt;</code>\n@@ -43,7 +43,7 @@\n       <img src="${python:icons.url(\'alarm\')}" class="custom-class" alt="foo" />\n     </p>\n \n-    <h2>Get Icon Tag</h2>\n+    <h3 class="mt-5">Get Icon Tag</h3>\n \n     <p>\n       <code>&lt;tal:icon tal:replace="structure python:icons.tag(\'archive\', tag_class=\'custom-class\', tag_alt=\'foobar\')" /&gt;</code>\n@@ -53,6 +53,42 @@\n       <tal:icon tal:replace="structure python:icons.tag(\'archive\', tag_class=\'custom-class\', tag_alt=\'foobar\')" />\n     </p>\n \n+<h2 class="mt-5">Tables</h2>\n+<p><a href="https://getbootstrap.com/docs/5.1/content/tables/">https://getbootstrap.com/docs/5.1/content/tables/</a></p>\n+\n+<table class="table">\n+  <thead>\n+    <tr>\n+      <th scope="col">#</th>\n+      <th scope="col">First</th>\n+      <th scope="col">Last</th>\n+      <th scope="col">Handle</th>\n+    </tr>\n+  </thead>\n+  <tbody>\n+    <tr>\n+      <th scope="row">1</th>\n+      <td>Mark</td>\n+      <td>Otto</td>\n+      <td>@mdo</td>\n+    </tr>\n+    <tr>\n+      <th scope="row">2</th>\n+      <td>Jacob</td>\n+      <td>Thornton</td>\n+      <td>@fat</td>\n+    </tr>\n+    <tr>\n+      <th scope="row">3</th>\n+      <td colspan="2">Larry the Bird</td>\n+      <td>@twitter</td>\n+    </tr>\n+  </tbody>\n+</table>\n+\n+    <h2 class="mt-5">Alerts</h2>\n+    <p><a href="https://getbootstrap.com/docs/5.1/components/alerts/">https://getbootstrap.com/docs/5.1/components/alerts/</a></p>\n+\n     <div class="alert alert-primary" role="alert">\n       <span>Mollit minim ullamco aliqua do culpa amet ullamco eu tempor. <a href="http://localhost:8080/Plone27/docs/edit">nulla proident velit</a></span>\n     </div>\n@@ -79,6 +115,284 @@\n     </div>\n \n \n+<h2 class="mt-5">Accordion</h2>\n+<p><a href="https://getbootstrap.com/docs/5.1/components/accordion/">https://getbootstrap.com/docs/5.1/components/accordion/</a></p>\n+\n+<div class="accordion" id="accordionExample">\n+  <div class="accordion-item">\n+    <h2 class="accordion-header" id="headingOne">\n+      <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">\n+        Accordion Item #1\n+      </button>\n+    </h2>\n+    <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#accordionExample">\n+      <div class="accordion-body">\n+        <strong>This is the first item\'s accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It\'s also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n+      </div>\n+    </div>\n+  </div>\n+  <div class="accordion-item">\n+    <h2 class="accordion-header" id="headingTwo">\n+      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">\n+        Accordion Item #2\n+      </button>\n+    </h2>\n+    <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#accordionExample">\n+      <div class="accordion-body">\n+        <strong>This is the second item\'s accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It\'s also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n+      </div>\n+    </div>\n+  </div>\n+  <div class="accordion-item">\n+    <h2 class="accordion-header" id="headingThree">\n+      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">\n+        Accordion Item #3\n+      </button>\n+    </h2>\n+    <div id="collapseThree" class="accordion-collapse collapse" aria-labelledby="headingThree" data-bs-parent="#accordionExample">\n+      <div class="accordion-body">\n+        <strong>This is the third item\'s accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It\'s also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n+      </div>\n+    </div>\n+  </div>\n+</div>\n+\n+\n+<h2 class="mt-5">Badge</h2>\n+<p><a href="https://getbootstrap.com/docs/5.1/components/badge/">https://getbootstrap.com/docs/5.1/components/badge/</a></p>\n+\n+<h1>Example heading <span class="badge bg-secondary">New</span></h1>\n+<h2>Example heading <span class="badge bg-secondary">New</span></h2>\n+<h3>Example heading <span class="badge bg-secondary">New</span></h3>\n+<h4>Example heading <span class="badge bg-secondary">New</span></h4>\n+<h5>Example heading <span class="badge bg-secondary">New</span></h5>\n+<h6>Example heading <span class="badge bg-secondary">New</span></h6>\n+\n+<button type="button" class="btn btn-primary">\n+  Notifications <span class="badge bg-secondary">4</span>\n+</button>\n+\n+<button type="button" class="btn btn-primary position-relative">\n+  Inbox\n+  <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">\n+    99+\n+    <span class="visually-hidden">unread messages</span>\n+  </span>\n+</button>\n+\n+\n+<h2 class="mt-5">Buttons</h2>\n+<p><a href="https://getbootstrap.com/docs/5.1/components/badge/">https://getbootstrap.com/docs/5.1/components/badge/</a></p>\n+\n+<div class="btn-group" role="group" aria-label="Basic mixed styles example">\n+  <button type="button" class="btn btn-danger">Left</button>\n+  <button type="button" class="btn btn-warning">Middle</button>\n+  <button type="button" class="btn btn-success">Right</button>\n+</div>\n+\n+\n+<h2 class="mt-5">Collapse</h2>\n+<p><a href="https://getbootstrap.com/docs/5.1/components/badge/">https://getbootstrap.com/docs/5.1/components/badge/</a></p>\n+\n+<p>\n+  <a class="btn btn-primary" data-bs-toggle="collapse" href="#collapseExample" role="button" aria-expanded="false" aria-controls="collapseExample">\n+    Link with href\n+  </a>\n+  <button class="btn btn-primary" type="button" data-bs-toggle="collapse" data-bs-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample">\n+    Button with data-bs-target\n+  </button>\n+</p>\n+<div class="collapse" id="collapseExample">\n+  <div class="card card-body">\n+    Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user activates the relevant trigger.\n+  </div>\n+</div>\n+\n+\n+<h2 class="mt-5">Dropdowns</h2>\n+<p><a href="https://getbootstrap.com/docs/5.1/components/badge/">https://getbootstrap.com/docs/5.1/components/badge/</a></p>\n+\n+<!-- Example single danger button -->\n+<div class="btn-group">\n+  <button type="button" class="btn btn-danger dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">\n+    Action\n+  </button>\n+  <ul class="dropdown-menu">\n+    <li><a class="dropdown-item" href="#">Action</a></li>\n+    <li><a class="dropdown-item" href="#">Another action</a></li>\n+    <li><a class="dropdown-item" href="#">Something else here</a></li>\n+    <li><hr class="dropdown-divider"></li>\n+    <li><a class="dropdown-item" href="#">Separated link</a></li>\n+  </ul>\n+</div>\n+\n+\n+\n+<h2 class="mt-5">List Group</h2>\n+<p><a href="https://getbootstrap.com/docs/5.1/components/badge/">https://getbootstrap.com/docs/5.1/components/badge/</a></p>\n+\n+<div class="row">\n+  <div class="col-4">\n+    <div class="list-group" id="list-tab" role="tablist">\n+      <a class="list-group-item list-group-item-action active" id="list-home-list" data-bs-toggle="list" href="#list-home" role="tab" aria-controls="list-home">Home</a>\n+      <a class="list-group-item list-group-item-action" id="list-profile-list" data-bs-toggle="list" href="#list-profile" role="tab" aria-controls="list-profile">Profile</a>\n+      <a class="list-group-item list-group-item-action" id="list-messages-list" data-bs-toggle="list" href="#list-messages" role="tab" aria-controls="list-messages">Messages</a>\n+      <a class="list-group-item list-group-item-action" id="list-settings-list" data-bs-toggle="list" href="#list-settings" role="tab" aria-controls="list-settings">Settings</a>\n+    </div>\n+  </div>\n+  <div class="col-8">\n+    <div class="tab-content" id="nav-tabContent">\n+      <div class="tab-pane fade show active" id="list-home" role="tabpanel" aria-labelledby="list-home-list">Some placeholder content in a paragraph relating to "Home". And some more content, used here just to pad out and fill this tab panel. In production, you would obviously have more real content here. And not just text. It could be anything, really. Text, images, forms.</div>\n+      <div class="tab-pane fade" id="list-profile" role="tabpanel" aria-labelledby="list-profile-list">Second placeholder content in a paragraph relating to "Home". And some more content, used here just to pad out and fill this tab panel. In production, you would obviously have more real content here. And not just text. It could be anything, really. Text, images, forms.</div>\n+      <div class="tab-pane fade" id="list-messages" role="tabpanel" aria-labelledby="list-messages-list">Third placeholder content in a paragraph relating to "Home". And some more content, used here just to pad out and fill this tab panel. In production, you would obviously have more real content here. And not just text. It could be anything, really. Text, images, forms.</div>\n+      <div class="tab-pane fade" id="list-settings" role="tabpanel" aria-labelledby="list-settings-list">Fourth placeholder content in a paragraph relating to "Home". And some more content, used here just to pad out and fill this tab panel. In production, you would obviously have more real content here. And not just text. It could be anything, really. Text, images, forms.</div>\n+    </div>\n+  </div>\n+</div>\n+\n+\n+<h2 class="mt-5">Modal</h2>\n+<p><a href="https://getbootstrap.com/docs/5.1/components/badge/">https://getbootstrap.com/docs/5.1/components/badge/</a></p>\n+\n+<!-- Button trigger modal -->\n+<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">\n+  Launch demo modal\n+</button>\n+\n+<!-- Modal -->\n+<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">\n+  <div class="modal-dialog">\n+    <div class="modal-content">\n+      <div class="modal-header">\n+        <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>\n+        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>\n+      </div>\n+      <div class="modal-body">\n+        ...\n+      </div>\n+      <div class="modal-footer">\n+        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>\n+        <button type="button" class="btn btn-primary">Save changes</button>\n+      </div>\n+    </div>\n+  </div>\n+</div>\n+\n+\n+<h2 class="mt-5">Navbar</h2>\n+<p><a href="https://getbootstrap.com/docs/5.1/components/navbar/">https://getbootstrap.com/docs/5.1/components/navbar/</a></p>\n+\n+<nav class="navbar navbar-expand-lg navbar-light bg-light">\n+  <div class="container-fluid">\n+    <a class="navbar-brand" href="#">Navbar</a>\n+    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">\n+      <span class="navbar-toggler-icon"></span>\n+    </button>\n+    <div class="collapse navbar-collapse" id="navbarSupportedContent">\n+      <ul class="navbar-nav me-auto mb-2 mb-lg-0">\n+        <li class="nav-item">\n+          <a class="nav-link active" aria-current="page" href="#">Home</a>\n+        </li>\n+        <li class="nav-item">\n+          <a class="nav-link" href="#">Link</a>\n+        </li>\n+        <li class="nav-item dropdown">\n+          <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">\n+            Dropdown\n+          </a>\n+          <ul class="dropdown-menu" aria-labelledby="navbarDropdown">\n+            <li><a class="dropdown-item" href="#">Action</a></li>\n+            <li><a class="dropdown-item" href="#">Another action</a></li>\n+            <li><hr class="dropdown-divider"></li>\n+            <li><a class="dropdown-item" href="#">Something else here</a></li>\n+          </ul>\n+        </li>\n+        <li class="nav-item">\n+          <a class="nav-link disabled">Disabled</a>\n+        </li>\n+      </ul>\n+      <form class="d-flex">\n+        <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">\n+        <button class="btn btn-outline-success" type="submit">Search</button>\n+      </form>\n+    </div>\n+  </div>\n+</nav>\n+\n+<h2 class="mt-5">Offcanvas</h2>\n+<p><a href="https://getbootstrap.com/docs/5.1/components/offcanvas/">https://getbootstrap.com/docs/5.1/components/offcanvas/</a></p>\n+\n+\n+<a class="btn btn-primary" data-bs-toggle="offcanvas" href="#offcanvasExample" role="button" aria-controls="offcanvasExample">\n+  Link with href\n+</a>\n+<button class="btn btn-primary" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasExample" aria-controls="offcanvasExample">\n+  Button with data-bs-target\n+</button>\n+\n+<div class="offcanvas offcanvas-start" tabindex="-1" id="offcanvasExample" aria-labelledby="offcanvasExampleLabel">\n+  <div class="offcanvas-header">\n+    <h5 class="offcanvas-title" id="offcanvasExampleLabel">Offcanvas</h5>\n+    <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>\n+  </div>\n+  <div class="offcanvas-body">\n+    <div>\n+      Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.\n+    </div>\n+    <div class="dropdown mt-3">\n+      <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown">\n+        Dropdown button\n+      </button>\n+      <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">\n+        <li><a class="dropdown-item" href="#">Action</a></li>\n+        <li><a class="dropdown-item" href="#">Another action</a></li>\n+        <li><a class="dropdown-item" href="#">Something else here</a></li>\n+      </ul>\n+    </div>\n+  </div>\n+</div>\n+\n+<h2 class="mt-5">Pagination</h2>\n+<p><a href="https://getbootstrap.com/docs/5.1/components/pagination/">https://getbootstrap.com/docs/5.1/components/pagination/</a></p>\n+\n+<nav aria-label="Page navigation example">\n+  <ul class="pagination">\n+    <li class="page-item"><a class="page-link" href="#">Previous</a></li>\n+    <li class="page-item"><a class="page-link" href="#">1</a></li>\n+    <li class="page-item"><a class="page-link" href="#">2</a></li>\n+    <li class="page-item"><a class="page-link" href="#">3</a></li>\n+    <li class="page-item"><a class="page-link" href="#">Next</a></li>\n+  </ul>\n+</nav>\n+\n+\n+<h2 class="mt-5">Popovers</h2>\n+<p><a href="https://getbootstrap.com/docs/5.1/components/popovers/">https://getbootstrap.com/docs/5.1/components/popovers/</a></p>\n+\n+<button type="button" class="btn btn-lg btn-danger" data-bs-toggle="popover" title="Popover title" data-bs-content="And here\'s some amazing content. It\'s very engaging. Right?">Click to toggle popover</button>\n+\n+\n+<h2 class="mt-5">Toasts</h2>\n+<p><a href="https://getbootstrap.com/docs/5.1/components/toasts/">https://getbootstrap.com/docs/5.1/components/toasts/</a></p>\n+\n+<button type="button" class="btn btn-primary" id="liveToastBtn">Show live toast</button>\n+\n+<div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">\n+  <div id="liveToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">\n+    <div class="toast-header">\n+      <img src="..." class="rounded me-2" alt="...">\n+      <strong class="me-auto">Bootstrap</strong>\n+      <small>11 mins ago</small>\n+      <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>\n+    </div>\n+    <div class="toast-body">\n+      Hello, world! This is a toast message.\n+    </div>\n+  </div>\n+</div>\n+\n+\n+\n     <tal:comment tal:replace="nothing">\n     <div id="content-core">\n       <pre>Headlines</pre>\n@@ -563,22 +877,6 @@\n \n   </metal:main>\n \n-  <aside id="portal-column-one" metal:fill-slot="column_one_slot">\n-\n-    <div class="card portlet portlet-foobar" i18n:domain="plone">\n-\n-      <div class="card-header">\n-        Portlet Header\n-      </div>\n-\n-      <div class="card-body">\n-        <p>Etiam porta sem malesuada magna mollis euismod. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n-      </div>\n-\n-      <div class="card-footer">Portlet Footer</div>\n-    </div>\n-  </aside>\n-\n </body>\n \n </html>\n\\ No newline at end of file\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:43+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/22daf4936fb63573efdf6063a6629bca8e78bde8

add allowed html attributes to control videos embedded with tinymce

Files changed:
M Products/CMFPlone/interfaces/controlpanel.py

b"diff --git a/Products/CMFPlone/interfaces/controlpanel.py b/Products/CMFPlone/interfaces/controlpanel.py\nindex c6f7269285..d40c61eeb8 100644\n--- a/Products/CMFPlone/interfaces/controlpanel.py\n+++ b/Products/CMFPlone/interfaces/controlpanel.py\n@@ -296,7 +296,7 @@ class IFilterSchema(Interface):\n     custom_attributes = schema.List(\n         title=_('Custom attributes'),\n         description=_('These attributes are additionally allowed.'),\n-        default=['style'],\n+        default=['style', 'controls', 'poster', 'autoplay'],\n         value_type=schema.TextLine(),\n         missing_value=[],\n         required=False)\n"

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:43+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/a3638641ad360ae35bb0d6d08c8783c8c21f4cd1

remove trace of portal_registry

Files changed:
M Products/CMFPlone/skins/plone_scripts/externalEditorEnabled.py

b"diff --git a/Products/CMFPlone/skins/plone_scripts/externalEditorEnabled.py b/Products/CMFPlone/skins/plone_scripts/externalEditorEnabled.py\nindex b31ebce4ea..ad62e1c912 100644\n--- a/Products/CMFPlone/skins/plone_scripts/externalEditorEnabled.py\n+++ b/Products/CMFPlone/skins/plone_scripts/externalEditorEnabled.py\n@@ -16,11 +16,6 @@\n if mtool.isAnonymousUser():\n     return False\n \n-# Temporary content cannot be changed through EE (raises AttributeError)\n-portal_factory = getToolByName(portal, 'portal_factory', None)\n-if portal_factory and portal_factory.isTemporary(context):\n-    return False\n-\n # Check if the member property\n member = mtool.getAuthenticatedMember()\n if not member.getProperty('ext_editor', False):\n"

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:43+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/b99af9015d7d848931b9817e0fee84325a645e6f

fix accordion when bundle name has a dot (fixes #3427)

Files changed:
M Products/CMFPlone/controlpanel/browser/resourceregistry.pt
M Products/CMFPlone/controlpanel/browser/resourceregistry.py

b'diff --git a/Products/CMFPlone/controlpanel/browser/resourceregistry.pt b/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\nindex 52ce5649a7..641bea1b08 100644\n--- a/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\n+++ b/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\n@@ -66,8 +66,8 @@\n     <div class="accordion" id="accordionRR" tal:define="dummy python:view.process_form()">\n       <div class="accordion-item "\n            tal:repeat="bundle python:view.bundles_data">\n-           <h2 class="accordion-header" id="heading-${python:bundle[\'name\']}">\n-            <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-${python:bundle[\'name\']}" aria-expanded="false" aria-controls="collapse-${python:bundle[\'name\']}">\n+           <h2 class="accordion-header" id="heading-${python:bundle[\'safe_name\']}">\n+            <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-${python:bundle[\'safe_name\']}" aria-expanded="false" aria-controls="collapse-${python:bundle[\'safe_name\']}">\n               <span tal:condition="python:bundle[\'name\'] and bundle[\'enabled\']" i18n:translate="" class="me-2"><tal:icon tal:replace="structure python:icons.tag(\'file-check\', tag_alt=\'Enabled bundle\')" /></span>\n               <span tal:condition="python:bundle[\'name\'] and not bundle[\'enabled\']" i18n:translate="" class="me-2"><tal:icon tal:replace="structure python:icons.tag(\'file-x\', tag_alt=\'Disabled bundle\')" /></span>\n               <span tal:condition="python:not bundle[\'name\']" i18n:translate="" class="me-2"><tal:icon tal:replace="structure python:icons.tag(\'file-plus\', tag_alt=\'Add a bundle\')" /></span>\n@@ -75,7 +75,7 @@\n               <strong tal:condition="python:not bundle[\'name\']">Add new bundle</strong>\n             </button>\n           </h2>\n-          <div id="collapse-${python:bundle[\'name\']}" class="accordion-collapse ${python:\'\' if bundle[\'name\'] == request.form.get(\'name\', None) else \'collapse\'}" aria-labelledby="heading${python:bundle[\'name\']}" data-bs-parent="#accordionRR">\n+          <div id="collapse-${python:bundle[\'safe_name\']}" class="accordion-collapse ${python:\'\' if bundle[\'name\'] == request.form.get(\'name\', None) else \'collapse\'}" aria-labelledby="heading${python:bundle[\'safe_name\']}" data-bs-parent="#accordionRR">\n             <div class="accordion-body">\n               <form method="post" action="${python:context.absolute_url()}/@@resourceregistry-controlpanel">\n                 <input type="hidden" name="original_name" value="${python:bundle[\'name\']}" />\ndiff --git a/Products/CMFPlone/controlpanel/browser/resourceregistry.py b/Products/CMFPlone/controlpanel/browser/resourceregistry.py\nindex b51cd70188..1bfae52ae8 100644\n--- a/Products/CMFPlone/controlpanel/browser/resourceregistry.py\n+++ b/Products/CMFPlone/controlpanel/browser/resourceregistry.py\n@@ -24,6 +24,7 @@ def bundles_data(self):\n             result.append(\n                 {\n                     "name": name,\n+                    "safe_name": name.replace(".", "-"),\n                     "jscompilation": record.jscompilation,\n                     "csscompilation": record.csscompilation,\n                     "expression": record.expression,\n@@ -37,6 +38,7 @@ def bundles_data(self):\n         result.append(\n             {\n                 "name": "",\n+                "safe_name": "",\n                 "jscompilation": "",\n                 "csscompilation": "",\n                 "expression": "",\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:43+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/1f2c62464f23994081ac3b17a7489149f1d63118

if bundle with css resource has a dependeny on a bundle without a css resource ignore the dependeny. same with js.

Files changed:
M Products/CMFPlone/resources/browser/resource.py

b'diff --git a/Products/CMFPlone/resources/browser/resource.py b/Products/CMFPlone/resources/browser/resource.py\nindex 433ed6b269..c8e65e019b 100644\n--- a/Products/CMFPlone/resources/browser/resource.py\n+++ b/Products/CMFPlone/resources/browser/resource.py\n@@ -104,6 +104,7 @@ def update(self):\n         # collect names\n         js_names = {name for name, rec in records.items() if rec.jscompilation}\n         css_names = {name for name, rec in records.items() if rec.csscompilation}\n+        all_names = {name for name, rec in records.items() if rec.jscompilation or rec.csscompilation}\n \n         # register\n         for name, record in records.items():\n@@ -122,19 +123,22 @@ def current_expression():\n             if record.jscompilation:\n                 depends = record.depends or ""\n                 if depends and depends not in js_names:\n-                    msg = f"Bundle \'{name}\' has a non existing dependeny on \'{record.depends}\'. "\n-                    if depends not in GRACEFUL_DEPENDENCY_REWRITE:\n+                    if depends in all_names:\n+                        depends = None\n+                    else:\n+                        msg = f"Bundle \'{name}\' has a non existing dependeny on \'{record.depends}\'. "\n+                        if depends not in GRACEFUL_DEPENDENCY_REWRITE:\n+                            logger.error(\n+                                msg + "Bundle ignored (JS) - This may break your site!"\n+                            )\n+                            continue\n+                        graceful_depends = GRACEFUL_DEPENDENCY_REWRITE[depends]\n                         logger.error(\n-                            msg + "Bundle ignored (JS) - This may break your site!"\n+                            msg\n+                            + f"Bundle dependency (JS) graceful rewritten to \'{graceful_depends}\' "\n+                            + "Fallback will be removed in Plone 7."\n                         )\n-                        continue\n-                    graceful_depends = GRACEFUL_DEPENDENCY_REWRITE[depends]\n-                    logger.error(\n-                        msg\n-                        + f"Bundle dependency (JS) graceful rewritten to \'{graceful_depends}\' "\n-                        + "Fallback will be removed in Plone 7."\n-                    )\n-                    depends = graceful_depends\n+                        depends = graceful_depends\n                 external = record.jscompilation.startswith("http")\n                 resource = PloneScriptResource(\n                     context=self.context,\n@@ -154,19 +158,22 @@ def current_expression():\n             if record.csscompilation:\n                 depends = record.depends or ""\n                 if depends and depends not in css_names:\n-                    msg = f"Bundle \'{name}\' has a non existing dependeny on \'{record.depends}\'. "\n-                    if depends not in GRACEFUL_DEPENDENCY_REWRITE:\n+                    if depends in all_names:\n+                        depends = None\n+                    else:\n+                        msg = f"Bundle \'{name}\' has a non existing dependeny on \'{record.depends}\'. "\n+                        if depends not in GRACEFUL_DEPENDENCY_REWRITE:\n+                            logger.error(\n+                                msg + "Bundle ignored (CSS) - This may break your site!"\n+                            )\n+                            continue\n+                        graceful_depends = GRACEFUL_DEPENDENCY_REWRITE[depends]\n                         logger.error(\n-                            msg + "Bundle ignored (CSS) - This may break your site!"\n+                            msg\n+                            + f"Bundle dependency (CSS) graceful rewritten to \'{graceful_depends}\' "\n+                            + "Fallback will be removed in Plone 7."\n                         )\n-                        continue\n-                    graceful_depends = GRACEFUL_DEPENDENCY_REWRITE[depends]\n-                    logger.error(\n-                        msg\n-                        + f"Bundle dependency (CSS) graceful rewritten to \'{graceful_depends}\' "\n-                        + "Fallback will be removed in Plone 7."\n-                    )\n-                    depends = graceful_depends\n+                        depends = graceful_depends\n                 external = record.csscompilation.startswith("http")\n                 resource = PloneStyleResource(\n                     context=self.context,\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:43+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/5bd4ddcc0b8f0fba79071620e960bd2c932b04e4

cherry pick 784e6942b9c65dc3ec54ed4c0edcf7aa3a641659

Files changed:
A Products/CMFPlone/browser/templates/test_rendering_cheatsheet.pt
A Products/CMFPlone/browser/templates/test_rendering_icons.pt
M Products/CMFPlone/browser/configure.zcml
M Products/CMFPlone/browser/templates/test_rendering.pt
M Products/CMFPlone/browser/test_rendering.py

b'diff --git a/Products/CMFPlone/browser/configure.zcml b/Products/CMFPlone/browser/configure.zcml\nindex da58016adc..726123c677 100644\n--- a/Products/CMFPlone/browser/configure.zcml\n+++ b/Products/CMFPlone/browser/configure.zcml\n@@ -272,6 +272,20 @@\n       permission="zope2.View"\n       />\n \n+  <browser:page\n+      name="test-rendering-cheatsheet"\n+      for="*"\n+      class=".test_rendering.TestRenderingCheatsheetView"\n+      permission="zope2.View"\n+      />\n+\n+  <browser:page\n+      name="test-rendering-icons"\n+      for="*"\n+      class=".test_rendering.TestRenderingIconsView"\n+      permission="zope2.View"\n+      />\n+\n   <browser:page\n       for="*"\n       name="iconresolver"\ndiff --git a/Products/CMFPlone/browser/templates/test_rendering.pt b/Products/CMFPlone/browser/templates/test_rendering.pt\nindex 5b2ca3dbba..55793fa423 100644\n--- a/Products/CMFPlone/browser/templates/test_rendering.pt\n+++ b/Products/CMFPlone/browser/templates/test_rendering.pt\n@@ -6,6 +6,22 @@\n \n   <metal:main fill-slot="main">\n \n+    <style>\n+\n+    </style>\n+\n+    <ul class="nav nav-tabs mb-3">\n+      <li class="nav-item">\n+        <a class="nav-link active" href="${portal_url}/@@test-rendering">Test Rendering</a>\n+      </li>\n+      <li class="nav-item">\n+        <a class="nav-link" href="${portal_url}/@@test-rendering-cheatsheet">Bootstrap Cheatsheet</a>\n+      </li>\n+      <li class="nav-item">\n+        <a class="nav-link" href="${portal_url}/@@test-rendering-icons">Icons</a>\n+      </li>\n+    </ul>\n+\n     <h1>Plone User Interface elements test page</h1>\n \n     <p class="lead">\n@@ -15,77 +31,6 @@\n       bad behaviour on this front.\n     </p>\n \n-    <p>Check out Bootstrap\'s <a href="https://getbootstrap.com/docs/5.1/getting-started/introduction/" target="_blank" title="Bootstrap Documentation">Documentation</a> and examples for Bootstrap typography, including global settings, headings, body text, lists, and more. Everything is available in Plone now!</p>\n-\n-    <h2 class="mt-5">Headings</h2>\n-\n-    <p>All HTML headings, &lt;h1&gt; through &lt;h6&gt;, are available. .h1 through .h6 classes are also available, for when you want to match the font styling of a heading but cannot use the associated HTML element.</p>\n-\n-    <h1>h1. Bootstrap heading</h1>\n-    <h2>h2. Bootstrap heading</h2>\n-    <h3>h3. Bootstrap heading</h3>\n-    <h4>h4. Bootstrap heading</h4>\n-    <h5>h5. Bootstrap heading</h5>\n-    <h6>h6. Bootstrap heading</h6>\n-\n-    <h2 class="mt-5">Icons</h2>\n-\n-    <p>Description to explain icon resolver</p>\n-\n-\n-    <h3 class="mt-5">Get Icon URL</h3>\n-\n-    <p>\n-      <code>&lt;img src="" tal:attributes="src python:icons.url(\'alarm\')" class="custom-class" alt="foo" /&gt;</code>\n-    </p>\n-\n-    <p>\n-      <img src="${python:icons.url(\'alarm\')}" class="custom-class" alt="foo" />\n-    </p>\n-\n-    <h3 class="mt-5">Get Icon Tag</h3>\n-\n-    <p>\n-      <code>&lt;tal:icon tal:replace="structure python:icons.tag(\'archive\', tag_class=\'custom-class\', tag_alt=\'foobar\')" /&gt;</code>\n-    </p>\n-\n-    <p>\n-      <tal:icon tal:replace="structure python:icons.tag(\'archive\', tag_class=\'custom-class\', tag_alt=\'foobar\')" />\n-    </p>\n-\n-<h2 class="mt-5">Tables</h2>\n-<p><a href="https://getbootstrap.com/docs/5.1/content/tables/">https://getbootstrap.com/docs/5.1/content/tables/</a></p>\n-\n-<table class="table">\n-  <thead>\n-    <tr>\n-      <th scope="col">#</th>\n-      <th scope="col">First</th>\n-      <th scope="col">Last</th>\n-      <th scope="col">Handle</th>\n-    </tr>\n-  </thead>\n-  <tbody>\n-    <tr>\n-      <th scope="row">1</th>\n-      <td>Mark</td>\n-      <td>Otto</td>\n-      <td>@mdo</td>\n-    </tr>\n-    <tr>\n-      <th scope="row">2</th>\n-      <td>Jacob</td>\n-      <td>Thornton</td>\n-      <td>@fat</td>\n-    </tr>\n-    <tr>\n-      <th scope="row">3</th>\n-      <td colspan="2">Larry the Bird</td>\n-      <td>@twitter</td>\n-    </tr>\n-  </tbody>\n-</table>\n-\n     <h2 class="mt-5">Alerts</h2>\n     <p><a href="https://getbootstrap.com/docs/5.1/components/alerts/">https://getbootstrap.com/docs/5.1/components/alerts/</a></p>\n \n@@ -114,768 +59,23 @@\n       <span>Mollit minim ullamco aliqua do culpa amet ullamco eu tempor. <a href="http://localhost:8080/Plone27/docs/edit">nulla proident velit</a></span>\n     </div>\n \n+  </metal:main>\n \n-<h2 class="mt-5">Accordion</h2>\n-<p><a href="https://getbootstrap.com/docs/5.1/components/accordion/">https://getbootstrap.com/docs/5.1/components/accordion/</a></p>\n-\n-<div class="accordion" id="accordionExample">\n-  <div class="accordion-item">\n-    <h2 class="accordion-header" id="headingOne">\n-      <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">\n-        Accordion Item #1\n-      </button>\n-    </h2>\n-    <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#accordionExample">\n-      <div class="accordion-body">\n-        <strong>This is the first item\'s accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It\'s also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n-      </div>\n-    </div>\n-  </div>\n-  <div class="accordion-item">\n-    <h2 class="accordion-header" id="headingTwo">\n-      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">\n-        Accordion Item #2\n-      </button>\n-    </h2>\n-    <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#accordionExample">\n-      <div class="accordion-body">\n-        <strong>This is the second item\'s accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It\'s also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n-      </div>\n-    </div>\n-  </div>\n-  <div class="accordion-item">\n-    <h2 class="accordion-header" id="headingThree">\n-      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">\n-        Accordion Item #3\n-      </button>\n-    </h2>\n-    <div id="collapseThree" class="accordion-collapse collapse" aria-labelledby="headingThree" data-bs-parent="#accordionExample">\n-      <div class="accordion-body">\n-        <strong>This is the third item\'s accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It\'s also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n-      </div>\n-    </div>\n-  </div>\n-</div>\n-\n-\n-<h2 class="mt-5">Badge</h2>\n-<p><a href="https://getbootstrap.com/docs/5.1/components/badge/">https://getbootstrap.com/docs/5.1/components/badge/</a></p>\n-\n-<h1>Example heading <span class="badge bg-secondary">New</span></h1>\n-<h2>Example heading <span class="badge bg-secondary">New</span></h2>\n-<h3>Example heading <span class="badge bg-secondary">New</span></h3>\n-<h4>Example heading <span class="badge bg-secondary">New</span></h4>\n-<h5>Example heading <span class="badge bg-secondary">New</span></h5>\n-<h6>Example heading <span class="badge bg-secondary">New</span></h6>\n-\n-<button type="button" class="btn btn-primary">\n-  Notifications <span class="badge bg-secondary">4</span>\n-</button>\n-\n-<button type="button" class="btn btn-primary position-relative">\n-  Inbox\n-  <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">\n-    99+\n-    <span class="visually-hidden">unread messages</span>\n-  </span>\n-</button>\n-\n-\n-<h2 class="mt-5">Buttons</h2>\n-<p><a href="https://getbootstrap.com/docs/5.1/components/badge/">https://getbootstrap.com/docs/5.1/components/badge/</a></p>\n-\n-<div class="btn-group" role="group" aria-label="Basic mixed styles example">\n-  <button type="button" class="btn btn-danger">Left</button>\n-  <button type="button" class="btn btn-warning">Middle</button>\n-  <button type="button" class="btn btn-success">Right</button>\n-</div>\n-\n-\n-<h2 class="mt-5">Collapse</h2>\n-<p><a href="https://getbootstrap.com/docs/5.1/components/badge/">https://getbootstrap.com/docs/5.1/components/badge/</a></p>\n-\n-<p>\n-  <a class="btn btn-primary" data-bs-toggle="collapse" href="#collapseExample" role="button" aria-expanded="false" aria-controls="collapseExample">\n-    Link with href\n-  </a>\n-  <button class="btn btn-primary" type="button" data-bs-toggle="collapse" data-bs-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample">\n-    Button with data-bs-target\n-  </button>\n-</p>\n-<div class="collapse" id="collapseExample">\n-  <div class="card card-body">\n-    Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user activates the relevant trigger.\n-  </div>\n-</div>\n-\n-\n-<h2 class="mt-5">Dropdowns</h2>\n-<p><a href="https://getbootstrap.com/docs/5.1/components/badge/">https://getbootstrap.com/docs/5.1/components/badge/</a></p>\n-\n-<!-- Example single danger button -->\n-<div class="btn-group">\n-  <button type="button" class="btn btn-danger dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">\n-    Action\n-  </button>\n-  <ul class="dropdown-menu">\n-    <li><a class="dropdown-item" href="#">Action</a></li>\n-    <li><a class="dropdown-item" href="#">Another action</a></li>\n-    <li><a class="dropdown-item" href="#">Something else here</a></li>\n-    <li><hr class="dropdown-divider"></li>\n-    <li><a class="dropdown-item" href="#">Separated link</a></li>\n-  </ul>\n-</div>\n-\n-\n-\n-<h2 class="mt-5">List Group</h2>\n-<p><a href="https://getbootstrap.com/docs/5.1/components/badge/">https://getbootstrap.com/docs/5.1/components/badge/</a></p>\n-\n-<div class="row">\n-  <div class="col-4">\n-    <div class="list-group" id="list-tab" role="tablist">\n-      <a class="list-group-item list-group-item-action active" id="list-home-list" data-bs-toggle="list" href="#list-home" role="tab" aria-controls="list-home">Home</a>\n-      <a class="list-group-item list-group-item-action" id="list-profile-list" data-bs-toggle="list" href="#list-profile" role="tab" aria-controls="list-profile">Profile</a>\n-      <a class="list-group-item list-group-item-action" id="list-messages-list" data-bs-toggle="list" href="#list-messages" role="tab" aria-controls="list-messages">Messages</a>\n-      <a class="list-group-item list-group-item-action" id="list-settings-list" data-bs-toggle="list" href="#list-settings" role="tab" aria-controls="list-settings">Settings</a>\n-    </div>\n-  </div>\n-  <div class="col-8">\n-    <div class="tab-content" id="nav-tabContent">\n-      <div class="tab-pane fade show active" id="list-home" role="tabpanel" aria-labelledby="list-home-list">Some placeholder content in a paragraph relating to "Home". And some more content, used here just to pad out and fill this tab panel. In production, you would obviously have more real content here. And not just text. It could be anything, really. Text, images, forms.</div>\n-      <div class="tab-pane fade" id="list-profile" role="tabpanel" aria-labelledby="list-profile-list">Second placeholder content in a paragraph relating to "Home". And some more content, used here just to pad out and fill this tab panel. In production, you would obviously have more real content here. And not just text. It could be anything, really. Text, images, forms.</div>\n-      <div class="tab-pane fade" id="list-messages" role="tabpanel" aria-labelledby="list-messages-list">Third placeholder content in a paragraph relating to "Home". And some more content, used here just to pad out and fill this tab panel. In production, you would obviously have more real content here. And not just text. It could be anything, really. Text, images, forms.</div>\n-      <div class="tab-pane fade" id="list-settings" role="tabpanel" aria-labelledby="list-settings-list">Fourth placeholder content in a paragraph relating to "Home". And some more content, used here just to pad out and fill this tab panel. In production, you would obviously have more real content here. And not just text. It could be anything, really. Text, images, forms.</div>\n-    </div>\n-  </div>\n-</div>\n-\n-\n-<h2 class="mt-5">Modal</h2>\n-<p><a href="https://getbootstrap.com/docs/5.1/components/badge/">https://getbootstrap.com/docs/5.1/components/badge/</a></p>\n-\n-<!-- Button trigger modal -->\n-<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">\n-  Launch demo modal\n-</button>\n-\n-<!-- Modal -->\n-<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">\n-  <div class="modal-dialog">\n-    <div class="modal-content">\n-      <div class="modal-header">\n-        <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>\n-        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>\n-      </div>\n-      <div class="modal-body">\n-        ...\n-      </div>\n-      <div class="modal-footer">\n-        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>\n-        <button type="button" class="btn btn-primary">Save changes</button>\n-      </div>\n-    </div>\n-  </div>\n-</div>\n-\n-\n-<h2 class="mt-5">Navbar</h2>\n-<p><a href="https://getbootstrap.com/docs/5.1/components/navbar/">https://getbootstrap.com/docs/5.1/components/navbar/</a></p>\n-\n-<nav class="navbar navbar-expand-lg navbar-light bg-light">\n-  <div class="container-fluid">\n-    <a class="navbar-brand" href="#">Navbar</a>\n-    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">\n-      <span class="navbar-toggler-icon"></span>\n-    </button>\n-    <div class="collapse navbar-collapse" id="navbarSupportedContent">\n-      <ul class="navbar-nav me-auto mb-2 mb-lg-0">\n-        <li class="nav-item">\n-          <a class="nav-link active" aria-current="page" href="#">Home</a>\n-        </li>\n-        <li class="nav-item">\n-          <a class="nav-link" href="#">Link</a>\n-        </li>\n-        <li class="nav-item dropdown">\n-          <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">\n-            Dropdown\n-          </a>\n-          <ul class="dropdown-menu" aria-labelledby="navbarDropdown">\n-            <li><a class="dropdown-item" href="#">Action</a></li>\n-            <li><a class="dropdown-item" href="#">Another action</a></li>\n-            <li><hr class="dropdown-divider"></li>\n-            <li><a class="dropdown-item" href="#">Something else here</a></li>\n-          </ul>\n-        </li>\n-        <li class="nav-item">\n-          <a class="nav-link disabled">Disabled</a>\n-        </li>\n-      </ul>\n-      <form class="d-flex">\n-        <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">\n-        <button class="btn btn-outline-success" type="submit">Search</button>\n-      </form>\n-    </div>\n-  </div>\n-</nav>\n-\n-<h2 class="mt-5">Offcanvas</h2>\n-<p><a href="https://getbootstrap.com/docs/5.1/components/offcanvas/">https://getbootstrap.com/docs/5.1/components/offcanvas/</a></p>\n-\n-\n-<a class="btn btn-primary" data-bs-toggle="offcanvas" href="#offcanvasExample" role="button" aria-controls="offcanvasExample">\n-  Link with href\n-</a>\n-<button class="btn btn-primary" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasExample" aria-controls="offcanvasExample">\n-  Button with data-bs-target\n-</button>\n-\n-<div class="offcanvas offcanvas-start" tabindex="-1" id="offcanvasExample" aria-labelledby="offcanvasExampleLabel">\n-  <div class="offcanvas-header">\n-    <h5 class="offcanvas-title" id="offcanvasExampleLabel">Offcanvas</h5>\n-    <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>\n-  </div>\n-  <div class="offcanvas-body">\n-    <div>\n-      Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.\n-    </div>\n-    <div class="dropdown mt-3">\n-      <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown">\n-        Dropdown button\n-      </button>\n-      <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">\n-        <li><a class="dropdown-item" href="#">Action</a></li>\n-        <li><a class="dropdown-item" href="#">Another action</a></li>\n-        <li><a class="dropdown-item" href="#">Something else here</a></li>\n-      </ul>\n-    </div>\n-  </div>\n-</div>\n-\n-<h2 class="mt-5">Pagination</h2>\n-<p><a href="https://getbootstrap.com/docs/5.1/components/pagination/">https://getbootstrap.com/docs/5.1/components/pagination/</a></p>\n-\n-<nav aria-label="Page navigation example">\n-  <ul class="pagination">\n-    <li class="page-item"><a class="page-link" href="#">Previous</a></li>\n-    <li class="page-item"><a class="page-link" href="#">1</a></li>\n-    <li class="page-item"><a class="page-link" href="#">2</a></li>\n-    <li class="page-item"><a class="page-link" href="#">3</a></li>\n-    <li class="page-item"><a class="page-link" href="#">Next</a></li>\n-  </ul>\n-</nav>\n-\n-\n-<h2 class="mt-5">Popovers</h2>\n-<p><a href="https://getbootstrap.com/docs/5.1/components/popovers/">https://getbootstrap.com/docs/5.1/components/popovers/</a></p>\n-\n-<button type="button" class="btn btn-lg btn-danger" data-bs-toggle="popover" title="Popover title" data-bs-content="And here\'s some amazing content. It\'s very engaging. Right?">Click to toggle popover</button>\n-\n-\n-<h2 class="mt-5">Toasts</h2>\n-<p><a href="https://getbootstrap.com/docs/5.1/components/toasts/">https://getbootstrap.com/docs/5.1/components/toasts/</a></p>\n-\n-<button type="button" class="btn btn-primary" id="liveToastBtn">Show live toast</button>\n-\n-<div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">\n-  <div id="liveToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">\n-    <div class="toast-header">\n-      <img src="..." class="rounded me-2" alt="...">\n-      <strong class="me-auto">Bootstrap</strong>\n-      <small>11 mins ago</small>\n-      <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>\n-    </div>\n-    <div class="toast-body">\n-      Hello, world! This is a toast message.\n-    </div>\n-  </div>\n-</div>\n-\n-\n-\n-    <tal:comment tal:replace="nothing">\n-    <div id="content-core">\n-      <pre>Headlines</pre>\n-\n-      <h1>Headline h1</h1>\n-      <p>And a paragraph</p>\n-      <h2>Headline h2</h2>\n-      <p>And a paragraph</p>\n-      <h3>Headline h3</h3>\n-      <p>And a paragraph</p>\n-      <h4>Headline h4</h4>\n-      <p>And a paragraph</p>\n-      <h5>Headline h5</h5>\n-      <p>And a paragraph</p>\n-      <h6>Headline h6</h6>\n-\n-      <pre>Example document rendering</pre>\n-\n-      <div class="portalMessage info" role="status">\n-        <strong>\n-          Info\n-        </strong>\n-        <span tal:omit-tag="">\n-          The portalMessage class, can also contain <a href="#">links</a> - used to\n-          give the user temporary status messages.\n-        </span>\n-      </div>\n-\n-      <dl class="portalMessage error" role="alert">\n-        <dt>\n-          Error\n-        </dt>\n-        <dd>\n-          The portalMessage \'error\' class, can also contain <a href="#">links</a> - used to\n-          give the user temporary status messages.\n-        </dd>\n-      </dl>\n-\n-      <dl class="portalMessage warning" role="status">\n-        <dt>\n-          Warning\n-        </dt>\n-        <dd>\n-          The portalMessage \'warning\' class, can also contain <a href="#">links</a> - used to\n-          give the user temporary status messages.\n-        </dd>\n-      </dl>\n-\n-      <h1 class="documentFirstHeading">Document Headline</h1>\n-\n-      <div id="plone-document-byline" class="documentByLine">\n-        <span class="documentAuthor">\n-          by\n-          <a href="http://localhost:8080/Plone/author/admin">admin</a>\n-        </span>\n-\n-        <span class="documentModified">\n-          &mdash;\n-          <span>\n-            last modified\n-          </span>\n-          May 21, 2010 10:02 AM\n-        </span>\n-\n-        <span id="content-history" class="contentHistory">\n-          &mdash;\n-          <a href="http://localhost:8080/Plone/front-page/@@historyview" rel="#pb_4" class="link-overlay"\n-            style="cursor: pointer;">History</a>\n-        </span>\n-      </div>\n-\n-      <div class="documentDescription">\n-        The document description\n-      </div>\n-\n-      <p>\n-        Normal document body text,\n-        <strong>strong text</strong>,\n-        <em>emphasised text</em>,\n-        Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Quisque odio sem, aliquam ut, suscipit at,\n-        aliquet non, justo. Vestibulum vitae urna et mi volutpat luctus. Nulla auctor, lacus ut consectetuer\n-        sagittis, erat odio vulputate sapien, eu placerat diam mauris id turpis. Aenean quis ipsum. Cum sociis\n-        natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Pellentesque rutrum. Sed\n-        mattis turpis sit amet ipsum viverra pharetra. Nunc facilisis, augue non dapibus gravida, risus quam\n-        vulputate quam, non venenatis dui massa in leo. Maecenas scelerisque dapibus libero. Suspendisse\n-        potenti.\n-        example <a href="#">Normal internal site link</a> inside a paragraph,\n-        example <a href="http://plone.org">External link to plone.org</a>,\n-        example <a href="https://plone.org">Secure (HTTPS) link to plone.org</a>,\n-        example <a href="mailto:some@address">Mailto link</a>,\n-        example <a href="ftp://some.site">FTP link</a>,\n-        example <a href="news://some.site">NNTP (news) link</a>,\n-        example <a href="webcal://some.site">WebCal link</a>,\n-        example <a href="feed://some.site">RSS feed link</a>,\n-        example <a href="irc://some.network/#channel">IRC link</a>.\n-      </p>\n-\n-      <ul>\n-        <li>Unordered list element 1\n-          <ul>\n-            <li>Unordered list subelement 1</li>\n-          </ul>\n-        </li>\n-        <li>Unordered list element 2</li>\n-        <li>Unordered list element 3</li>\n-      </ul>\n-\n-      <ol>\n-        <li>Ordered list element 1\n-          <ol>\n-            <li>Ordered list subelement 1</li>\n-          </ol>\n-        </li>\n-        <li>Ordered list element 2</li>\n-        <li>Ordered list element 3</li>\n-      </ol>\n-\n-      <dl>\n-        <dt>Definition list term</dt>\n-        <dd>Definition List description, Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Quisque odio\n-          sem, aliquam ut, suscipit at, aliquet non, justo.\n-        </dd>\n-        <dd>Another Definition List description, Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\n-          Quisque odio sem, aliquam ut, suscipit at, aliquet non, justo.\n-        </dd>\n-      </dl>\n-\n-      <h3>Definition List deprecation</h3>\n-\n-      As of Plone 5, we try to get rid of Definition Lists where they don\'t act as\n-      definition lists. We replace them in the following manners.\n-\n-\n-      <h4>in portal messages</h4>\n-\n-      <div class="portalMessage info" role="status">\n-        <strong>Not important</strong>\n-        This message is here to tell you something went just as you expected.\n-      </div>\n-      <div class="portalMessage warning" role="status">\n-        <strong>You might run into problems</strong>\n-        Please check your settings, be sure what you\'re doing is right.\n-      </div>\n-      <div class="portalMessage error" role="alert">\n-        <strong>Something went wrong</strong>\n-        This is bad, you must notice this.\n-      </div>\n-\n-      <h4>in listings</h4>\n-\n-      <div>\n-        <article>\n-          <heading><a href="">Item one</a></heading>\n-          <p>Description</p>\n-        </article>\n-        <article>\n-          <heading><a href="">Item two</a></heading>\n-          <p>Description</p>\n-        </article>\n-      </div>\n-\n-      <h2>\n-        Table of class <code>listing</code>\n-      </h2>\n-\n-      <table class="listing" id="someid" summary="Sortable table example">\n-        <!-- By giving a table an ID, it gets the sortable option.\n-         Use class="nosort" to override on a table or column basis. -->\n-        <thead>\n-          <tr>\n-            <th>Table heading</th>\n-            <th>Another heading (sortable, click to sort)</th>\n-            <th class="nosort">Fixed column (not sortable)</th>\n-          </tr>\n-        </thead>\n-        <tbody>\n-          <tr class="odd">\n-            <td>Odd table item</td>\n-            <td>Item 1</td>\n-            <td>Another item</td>\n-          </tr>\n-          <tr class="even">\n-            <td>Even table item</td>\n-            <td>Item 2</td>\n-            <td>Yet another item</td>\n-          </tr>\n-          <tr class="odd">\n-            <td>Odd table item</td>\n-            <td>Item 3</td>\n-            <td>And one more item</td>\n-          </tr>\n-        </tbody>\n-      </table>\n-\n-      <h2>\n-        Table of class <code>vertical listing</code>\n-      </h2>\n-\n-      <table class="vertical listing" summary="Vertical listing example">\n-        <tbody>\n-          <tr>\n-            <th>Table heading</th>\n-            <td>Odd table item</td>\n-          </tr>\n-          <tr>\n-            <th>Another heading</th>\n-            <td>Even table item</td>\n-          </tr>\n-        </tbody>\n-      </table>\n-\n-      <h2>Forms</h2>\n-\n-      <form>\n-        <fieldset>\n-          <legend>Fieldset legend</legend>\n-\n-          <div class="field">\n-            <label for="onefield">Text field</label>\n-            <span class="fieldRequired" title="Required" i18n:attributes="title title_required;"\n-              i18n:translate="label_required">(Required)</span>\n-            <div class="formHelp">\n-              This is the help for this form field. And <a href="#">links are also possible</a>.\n-            </div>\n-            <input type="text" id="onefield" value="Some content" />\n-          </div>\n-          <div class="field error">\n-            <label for="anotherfield">Text field with error</label>\n-            <span class="fieldRequired" title="Required" i18n:attributes="title title_required;"\n-              i18n:translate="label_required">(Required)</span>\n-            <div class="formHelp">\n-              This field is just here to demonstrate an error message.\n-            </div>\n-            <div>This is the error message.</div>\n-            <input type="text" id="anotherfield" value="Some content" />\n-          </div>\n-          <div class="field">\n-            <label for="onecheckbox">Checkbox</label>\n-            <span class="fieldRequired" title="Required" i18n:attributes="title title_required;"\n-              i18n:translate="label_required">(Required)</span>\n-            <div class="formHelp">\n-              This is a checkbox field.\n-            </div>\n-            <input type="checkbox" id="onecheckbox" />\n-          </div>\n-          <div class="field error">\n-            <label for="anothercheckbox">Checkbox with error</label>\n-            <span class="fieldRequired" title="Required" i18n:attributes="title title_required;"\n-              i18n:translate="label_required">(Required)</span>\n-            <div class="formHelp">\n-              This checkbox field is just here to demonstrate an error message.\n-            </div>\n-            <div>This is the error message.</div>\n-            <input type="checkbox" id="anothercheckbox" />\n-          </div>\n-          <div class="field">\n-            <label for="onestylishcheckbox">Checkbox without border</label>\n-            <span class="fieldRequired" title="Required" i18n:attributes="title title_required;"\n-              i18n:translate="label_required">(Required)</span>\n-            <div class="formHelp">\n-              This is a checkbox field.\n-            </div>\n-            <input type="checkbox" class="noborder" id="onestylishcheckbox" />\n-          </div>\n-          <div class="field error">\n-            <label for="anotherstylishcheckbox">\n-              Checkbox without border with error</label>\n-            <span class="fieldRequired" title="Required" i18n:attributes="title title_required;"\n-              i18n:translate="label_required">(Required)</span>\n-            <div class="formHelp">\n-              This checkbox field is just here to demonstrate an error message.\n-            </div>\n-            <div>This is the error message.</div>\n-            <input type="checkbox" class="noborder" id="anotherstylishcheckbox" />\n-          </div>\n-          <div class="field">\n-            <label>Radio</label>\n-            <span class="fieldRequired" title="Required" i18n:attributes="title title_required;"\n-              i18n:translate="label_required">(Required)</span>\n-            <div class="formHelp">\n-              This is a checkbox field.\n-            </div>\n-            <label>First\n-              <input class="noborder" type="radio" name="radio_group1" />\n-            </label>\n-            <br />\n-            <label>Second\n-              <input class="noborder" type="radio" name="radio_group1" />\n-            </label>\n-            <br />\n-            <label>Third\n-              <input class="noborder" type="radio" name="radio_group1" />\n-            </label>\n-            <br />\n-          </div>\n-          <div class="field error">\n-            <label>Radio with error</label>\n-            <span class="fieldRequired" title="Required" i18n:attributes="title title_required;"\n-              i18n:translate="label_required">(Required)</span>\n-            <div class="formHelp">\n-              This checkbox field is just here to demonstrate an error message.\n-            </div>\n-            <div>This is the error message.</div>\n-            <label>First\n-              <input class="noborder" type="radio" name="radio_group2" />\n-            </label>\n-            <br />\n-            <label>Second\n-              <input class="noborder" type="radio" name="radio_group2" />\n-            </label>\n-            <br />\n-            <label>Third\n-              <input class="noborder" type="radio" name="radio_group2" />\n-            </label>\n-            <br />\n-          </div>\n-          <div class="formControls">\n-            <input class="context" type="submit" value="Context submit" />\n-            <input class="standalone" type="submit" value="Standalone submit" />\n-            <input class="destructive" type="submit" value="Destructive submit" />\n-            <input type="submit" value="Submit" />\n-          </div>\n-          <div class="formControls">\n-            <input class="context" type="button" value="Context button" />\n-            <input class="standalone" type="button" value="Standalone button" />\n-            <input class="destructive" type="button" value="Destructive button" />\n-            <input type="button" value="Button" />\n-          </div>\n-        </fieldset>\n-      </form>\n-\n-      <h2>Table with form elements</h2>\n-\n-      <form>\n-        <table id="sortable" class="listing" summary="Content listing" cellpadding="0" cellspacing="0">\n-          <thead>\n-            <tr>\n-              <th class="nosort">\n-                <input class="noborder" type="checkbox" src="select_all_icons.png" name="selectButton"\n-                  title="Select all items" onClick="toggleSelect(this,\'paths:list\');"\n-                  tal:attributes="src string:${context/portal_url}/select_all_icons.png" alt="Select all items"\n-                  i18n:attributes="title label_select_all_items; alt label_select_all_items;" />\n-              </th>\n-              <th>&nbsp;Title&nbsp;</th>\n-              <th>&nbsp;Stuff&nbsp;</th>\n-            </tr>\n-          </thead>\n-          <tbody>\n-            <tr class="odd">\n-              <td>\n-                <input type="checkbox" class="noborder" name="paths:list" id="#" value="#" />\n-              </td>\n-              <td><a href="#">Title</a></td>\n-              <td>with class noborder</td>\n-            </tr>\n-            <tr class="even">\n-              <td>\n-                <input type="checkbox" class="noborder" name="paths:list" id="#" value="#" />\n-              </td>\n-              <td><a href="#">Title</a></td>\n-              <td>with class noborder</td>\n-            </tr>\n-          </tbody>\n-        </table>\n-      </form>\n-\n-      <div>\n-        <h2>Collapsible form</h2>\n-        <form id="searchform" name="search" method="get" class="pat-formautofocus" action="search">\n-\n-          <div class="field collapsible">\n-            <label class="collapser collapsed" for="created">New items since</label>\n-\n-            <div class="collapse" style="display: none;">\n-              <div class="formHelp">\n-                Return items added since you were last logged on, the last week, etc.\n-              </div>\n-\n-\n-              <select id="created" name="created:list:date">\n-                <option value="2010/09/06 17:50:45.971272 GMT-7">Last log-in</option>\n-                <option value="2010/09/05"> Yesterday </option>\n-                <option value="2010/08/30"> Last week </option>\n-                <option value="2010/08/06"> Last month </option>\n-                <option selected="selected" class="default_option" value="1970/02/01"> Ever </option>\n-              </select>\n-\n-            </div>\n-\n-          </div>\n-\n-\n-          <div class="field collapsible">\n-            <label class="collapser collapsed" for="Creator">Author</label>\n-\n-            <div class="collapse" style="display: none;">\n-              <div class="formHelp">\n-                Return items created by a particular person.\n-              </div>\n-\n-\n-              <select id="Creator" name="Creator">\n-                <option class="default_option" value="">Any Author</option>\n-\n-                <option value="admin">admin</option>\n-\n-              </select>\n-            </div>\n-          </div>\n-\n-          <div id="clear-space-before-submit" class="visualClear">\n-            <!-- -->\n-          </div>\n-\n-        </form>\n-      </div>\n-\n-      <div>\n-        <h2>Select All/None</h2>\n-        <form id="searchform" name="search" method="get" class="pat-formautofocus" action="search">\n-          <div>\n-            <label>Item type</label>\n-          </div>\n-          <div class="formHelp">\n-            Return items of a specific type.\n-          </div>\n-          <span class="optionsToggle">\n-            <input type="checkbox" checked="checked" class="noborder" id="pt_toggle" value="#" name="pt_toggle"\n-              onclick="javascript:toggleSelect(this, \'portal_type:list\', true)"\n-              src="http://localhost:8080/Plone/select_all_icons.png">\n-            <label for="pt_toggle">Select All/None</label>\n-          </span>\n-          <br>\n-          <div style="float: left; margin-right: 2em;">\n-            <input type="checkbox" id="portal_type_1_1" checked="checked" class="noborder" value="Document"\n-              name="portal_type:list">\n-            <label for="portal_type_1_1">Page</label>\n-            <br>\n-            <input type="checkbox" id="portal_type_1_2" checked="checked" class="noborder" value="Folder"\n-              name="portal_type:list">\n-            <label for="portal_type_1_2">Folder</label>\n-            <br>\n-          </div>\n-          <div style="float: left; margin-right: 2em;">\n-            <input type="checkbox" id="portal_type_2_1" checked="checked" class="noborder" value="Topic"\n-              name="portal_type:list">\n-            <label for="portal_type_2_1">Collection</label>\n-            <br>\n-          </div>\n-        </form>\n-        <div class="visualClear"></div>\n-      </div>\n+  <aside id="portal-column-one" metal:fill-slot="column_one_slot">\n \n+    <div class="card portlet portlet-foobar" i18n:domain="plone">\n \n-      <div>\n-        <h2>Action menu</h2>\n-        <dl class="actionMenu" id="actioMenuDemo">\n-          <dt class="actionMenuHeader">\n-            <a href="#">Action menu title</a>\n-          </dt>\n-          <dd class="actionMenuContent">\n-            Menu content\n-          </dd>\n-        </dl>\n+      <div class="card-header">\n+        Portlet Header\n       </div>\n \n-      <div>\n-        <h2>Collapsible section</h2>\n-        <dl class="collapsible">\n-          <dt class="collapsibleHeader">\n-            Collapsible section title\n-          </dt>\n-          <dd class="collapsibleContent">\n-            Collapsible section content\n-          </dd>\n-        </dl>\n+      <div class="card-body">\n+        <p>Etiam porta sem malesuada magna mollis euismod. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n       </div>\n \n-\n+      <div class="card-footer">Portlet Footer</div>\n     </div>\n-    </tal:comment>\n-\n-  </metal:main>\n+  </aside>\n \n </body>\n \ndiff --git a/Products/CMFPlone/browser/templates/test_rendering_cheatsheet.pt b/Products/CMFPlone/browser/templates/test_rendering_cheatsheet.pt\nnew file mode 100644\nindex 0000000000..d22c353640\n--- /dev/null\n+++ b/Products/CMFPlone/browser/templates/test_rendering_cheatsheet.pt\n@@ -0,0 +1,1695 @@\n+<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" xmlns:tal="http://xml.zope.org/namespaces/tal"\n+  xmlns:metal="http://xml.zope.org/namespaces/metal" xmlns:i18n="http://xml.zope.org/namespaces/i18n" lang="en"\n+  metal:use-macro="context/@@main_template/macros/master" i18n:domain="plone">\n+\n+<body>\n+\n+  <metal:main fill-slot="main">\n+\n+    <style>\n+\n+      .bd-cheatsheet h2,\n+      .bd-cheatsheet .bd-heading\n+        {\n+          padding: 1em 0;\n+          background-color: #fff;\n+        }\n+\n+    </style>    \n+\n+    <ul class="nav nav-tabs mb-3">\n+      <li class="nav-item">\n+        <a class="nav-link" href="${portal_url}/@@test-rendering">Test Rendering</a>\n+      </li>\n+      <li class="nav-item">\n+        <a class="nav-link active" href="${portal_url}/@@test-rendering-cheatsheet">Bootstrap Cheatsheet</a>\n+      </li>\n+      <li class="nav-item">\n+        <a class="nav-link" href="${portal_url}/@@test-rendering-icons">Icons</a>\n+      </li>\n+    </ul>\n+\n+    <h1>Bootstrap Cheatsheet</h1>\n+\n+    <p class="lead">\n+      Kitchen sink of Bootstrap components. This page is borrowd from the <a href="https://getbootstrap.com/docs/5.1/examples/cheatsheet/" target="_blank">Bootstrap Examples Cheatsheet"</a>.\n+    </p>\n+\n+    <!--\n+      \n+      Todos to fix markup\n+\n+      Change <div class="bd-cheatsheet container-fluid bg-body"> to <div class="bd-cheatsheet bg-body">\n+      Search and replace /docs/5.1 by https://getbootstrap.com/docs/5.1\n+    \n+    -->\n+\n+    <!-- Bootstrap Cheatsheet -->\n+\n+    <div class="bd-cheatsheet bg-body">\n+      <section id="content">\n+        <h2 class="sticky-xl-top fw-bold pt-3 pt-xl-5 pb-2 pb-xl-3">Contents</h2>\n+\n+        <article class="my-3" id="typography">\n+\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Typography</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/content/typography/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <p class="display-1">Display 1</p>\n+            <p class="display-2">Display 2</p>\n+            <p class="display-3">Display 3</p>\n+            <p class="display-4">Display 4</p>\n+            <p class="display-5">Display 5</p>\n+            <p class="display-6">Display 6</p>\n+            </div>\n+\n+            <div class="bd-example">\n+            <p class="h1">Heading 1</p>\n+            <p class="h2">Heading 2</p>\n+            <p class="h3">Heading 3</p>\n+            <p class="h4">Heading 4</p>\n+            <p class="h5">Heading 5</p>\n+            <p class="h6">Heading 6</p>\n+            </div>\n+\n+            <div class="bd-example">\n+            <p class="lead">\n+              This is a lead paragraph. It stands out from regular paragraphs.\n+            </p>\n+            </div>\n+\n+            <div class="bd-example">\n+            <p>You can use the mark tag to <mark>highlight</mark> text.</p>\n+            <p><del>This line of text is meant to be treated as deleted text.</del></p>\n+            <p><s>This line of text is meant to be treated as no longer accurate.</s></p>\n+            <p><ins>This line of text is meant to be treated as an addition to the document.</ins></p>\n+            <p><u>This line of text will render as underlined.</u></p>\n+            <p><small>This line of text is meant to be treated as fine print.</small></p>\n+            <p><strong>This line rendered as bold text.</strong></p>\n+            <p><em>This line rendered as italicized text.</em></p>\n+            </div>\n+\n+            <div class="bd-example">\n+            <blockquote class="blockquote">\n+              <p>A well-known quote, contained in a blockquote element.</p>\n+              <footer class="blockquote-footer">Someone famous in <cite title="Source Title">Source Title</cite></footer>\n+            </blockquote>\n+            </div>\n+\n+            <div class="bd-example">\n+            <ul class="list-unstyled">\n+              <li>This is a list.</li>\n+              <li>It appears completely unstyled.</li>\n+              <li>Structurally, it\'s still a list.</li>\n+              <li>However, this style only applies to immediate child elements.</li>\n+              <li>Nested lists:\n+                <ul>\n+                  <li>are unaffected by this style</li>\n+                  <li>will still show a bullet</li>\n+                  <li>and have appropriate left margin</li>\n+                </ul>\n+              </li>\n+              <li>This may still come in handy in some situations.</li>\n+            </ul>\n+            </div>\n+\n+            <div class="bd-example">\n+            <ul class="list-inline">\n+              <li class="list-inline-item">This is a list item.</li>\n+              <li class="list-inline-item">And another one.</li>\n+              <li class="list-inline-item">But they\'re displayed inline.</li>\n+            </ul>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="images">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Images</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/content/images/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <svg class="bd-placeholder-img bd-placeholder-img-lg img-fluid" width="100%" height="250" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: Responsive image" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#868e96"/><text x="50%" y="50%" fill="#dee2e6" dy=".3em">Responsive image</text></svg>\n+\n+            </div>\n+\n+            <div class="bd-example">\n+            <svg class="bd-placeholder-img img-thumbnail" width="200" height="200" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="A generic square placeholder image with a white border around it, making it resemble a photograph taken with an old instant camera: 200x200" preserveAspectRatio="xMidYMid slice" focusable="false"><title>A generic square placeholder image with a white border around it, making it resemble a photograph taken with an old instant camera</title><rect width="100%" height="100%" fill="#868e96"/><text x="50%" y="50%" fill="#dee2e6" dy=".3em">200x200</text></svg>\n+\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="tables">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Tables</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/content/tables/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <table class="table table-striped">\n+              <thead>\n+              <tr>\n+                <th scope="col">#</th>\n+                <th scope="col">First</th>\n+                <th scope="col">Last</th>\n+                <th scope="col">Handle</th>\n+              </tr>\n+              </thead>\n+              <tbody>\n+              <tr>\n+                <th scope="row">1</th>\n+                <td>Mark</td>\n+                <td>Otto</td>\n+                <td>@mdo</td>\n+              </tr>\n+              <tr>\n+                <th scope="row">2</th>\n+                <td>Jacob</td>\n+                <td>Thornton</td>\n+                <td>@fat</td>\n+              </tr>\n+              <tr>\n+                <th scope="row">3</th>\n+                <td colspan="2">Larry the Bird</td>\n+                <td>@twitter</td>\n+              </tr>\n+              </tbody>\n+            </table>\n+            </div>\n+\n+            <div class="bd-example">\n+            <table class="table table-dark table-borderless">\n+              <thead>\n+              <tr>\n+                <th scope="col">#</th>\n+                <th scope="col">First</th>\n+                <th scope="col">Last</th>\n+                <th scope="col">Handle</th>\n+              </tr>\n+              </thead>\n+              <tbody>\n+              <tr>\n+                <th scope="row">1</th>\n+                <td>Mark</td>\n+                <td>Otto</td>\n+                <td>@mdo</td>\n+              </tr>\n+              <tr>\n+                <th scope="row">2</th>\n+                <td>Jacob</td>\n+                <td>Thornton</td>\n+                <td>@fat</td>\n+              </tr>\n+              <tr>\n+                <th scope="row">3</th>\n+                <td colspan="2">Larry the Bird</td>\n+                <td>@twitter</td>\n+              </tr>\n+              </tbody>\n+            </table>\n+            </div>\n+\n+            <div class="bd-example">\n+            <table class="table table-hover">\n+              <thead>\n+              <tr>\n+                <th scope="col">Class</th>\n+                <th scope="col">Heading</th>\n+                <th scope="col">Heading</th>\n+              </tr>\n+              </thead>\n+              <tbody>\n+              <tr>\n+                <th scope="row">Default</th>\n+                <td>Cell</td>\n+                <td>Cell</td>\n+              </tr>\n+              \n+              <tr class="table-primary">\n+                <th scope="row">Primary</th>\n+                <td>Cell</td>\n+                <td>Cell</td>\n+              </tr>\n+              <tr class="table-secondary">\n+                <th scope="row">Secondary</th>\n+                <td>Cell</td>\n+                <td>Cell</td>\n+              </tr>\n+              <tr class="table-success">\n+                <th scope="row">Success</th>\n+                <td>Cell</td>\n+                <td>Cell</td>\n+              </tr>\n+              <tr class="table-danger">\n+                <th scope="row">Danger</th>\n+                <td>Cell</td>\n+                <td>Cell</td>\n+              </tr>\n+              <tr class="table-warning">\n+                <th scope="row">Warning</th>\n+                <td>Cell</td>\n+                <td>Cell</td>\n+              </tr>\n+              <tr class="table-info">\n+                <th scope="row">Info</th>\n+                <td>Cell</td>\n+                <td>Cell</td>\n+              </tr>\n+              <tr class="table-light">\n+                <th scope="row">Light</th>\n+                <td>Cell</td>\n+                <td>Cell</td>\n+              </tr>\n+              <tr class="table-dark">\n+                <th scope="row">Dark</th>\n+                <td>Cell</td>\n+                <td>Cell</td>\n+              </tr>\n+              </tbody>\n+            </table>\n+            </div>\n+\n+            <div class="bd-example">\n+            <table class="table table-sm table-bordered">\n+              <thead>\n+              <tr>\n+                <th scope="col">#</th>\n+                <th scope="col">First</th>\n+                <th scope="col">Last</th>\n+                <th scope="col">Handle</th>\n+              </tr>\n+              </thead>\n+              <tbody>\n+              <tr>\n+                <th scope="row">1</th>\n+                <td>Mark</td>\n+                <td>Otto</td>\n+                <td>@mdo</td>\n+              </tr>\n+              <tr>\n+                <th scope="row">2</th>\n+                <td>Jacob</td>\n+                <td>Thornton</td>\n+                <td>@fat</td>\n+              </tr>\n+              <tr>\n+                <th scope="row">3</th>\n+                <td colspan="2">Larry the Bird</td>\n+                <td>@twitter</td>\n+              </tr>\n+              </tbody>\n+            </table>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="figures">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Figures</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/content/figures/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <figure class="figure">\n+              <svg class="bd-placeholder-img figure-img img-fluid rounded" width="400" height="300" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: 400x300" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#868e96"/><text x="50%" y="50%" fill="#dee2e6" dy=".3em">400x300</text></svg>\n+\n+              <figcaption class="figure-caption">A caption for the above image.</figcaption>\n+            </figure>\n+            </div>\n+          </div>\n+        </article>\n+      </section>\n+\n+      <section id="forms">\n+        <h2 class="sticky-xl-top fw-bold pt-3 pt-xl-5 pb-2 pb-xl-3">Forms</h2>\n+\n+        <article class="my-3" id="overview">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Overview</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/forms/overview/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <form>\n+              <div class="mb-3">\n+                <label for="exampleInputEmail1" class="form-label">Email address</label>\n+                <input type="email" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp">\n+                <div id="emailHelp" class="form-text">We\'ll never share your email with anyone else.</div>\n+              </div>\n+              <div class="mb-3">\n+                <label for="exampleInputPassword1" class="form-label">Password</label>\n+                <input type="password" class="form-control" id="exampleInputPassword1">\n+              </div>\n+              <div class="mb-3 form-check">\n+                <input type="checkbox" class="form-check-input" id="exampleCheck1">\n+                <label class="form-check-label" for="exampleCheck1">Check me out</label>\n+              </div>\n+              <fieldset class="mb-3">\n+                <legend>Radios buttons</legend>\n+                <div class="form-check">\n+                  <input type="radio" name="radios" class="form-check-input" id="exampleRadio1">\n+                  <label class="form-check-label" for="exampleRadio1">Default radio</label>\n+                </div>\n+                <div class="mb-3 form-check">\n+                  <input type="radio" name="radios" class="form-check-input" id="exampleRadio2">\n+                  <label class="form-check-label" for="exampleRadio2">Another radio</label>\n+                </div>\n+              </fieldset>\n+              <div class="mb-3">\n+                <label class="form-label" for="customFile">Upload</label>\n+                <input type="file" class="form-control" id="customFile">\n+              </div>\n+              <div class="mb-3 form-check form-switch">\n+                <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckChecked" checked>\n+                <label class="form-check-label" for="flexSwitchCheckChecked">Checked switch checkbox input</label>\n+              </div>\n+              <div class="mb-3">\n+                <label for="customRange3" class="form-label">Example range</label>\n+                <input type="range" class="form-range" min="0" max="5" step="0.5" id="customRange3">\n+              </div>\n+              <button type="submit" class="btn btn-primary">Submit</button>\n+            </form>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="disabled-forms">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Disabled forms</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/forms/overview/#disabled-forms">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <form>\n+              <fieldset disabled aria-label="Disabled fieldset example">\n+                <div class="mb-3">\n+                  <label for="disabledTextInput" class="form-label">Disabled input</label>\n+                  <input type="text" id="disabledTextInput" class="form-control" placeholder="Disabled input">\n+                </div>\n+                <div class="mb-3">\n+                  <label for="disabledSelect" class="form-label">Disabled select menu</label>\n+                  <select id="disabledSelect" class="form-select">\n+                    <option>Disabled select</option>\n+                  </select>\n+                </div>\n+                <div class="mb-3">\n+                  <div class="form-check">\n+                    <input class="form-check-input" type="checkbox" id="disabledFieldsetCheck" disabled>\n+                    <label class="form-check-label" for="disabledFieldsetCheck">\n+                      Can\'t check this\n+                    </label>\n+                  </div>\n+                </div>\n+                <fieldset class="mb-3">\n+                  <legend>Disabled radios buttons</legend>\n+                  <div class="form-check">\n+                    <input type="radio" name="radios" class="form-check-input" id="disabledRadio1" disabled>\n+                    <label class="form-check-label" for="disabledRadio1">Disabled radio</label>\n+                  </div>\n+                  <div class="mb-3 form-check">\n+                    <input type="radio" name="radios" class="form-check-input" id="disabledRadio2" disabled>\n+                    <label class="form-check-label" for="disabledRadio2">Another radio</label>\n+                  </div>\n+                </fieldset>\n+                <div class="mb-3">\n+                  <label class="form-label" for="disabledCustomFile">Upload</label>\n+                  <input type="file" class="form-control" id="disabledCustomFile" disabled>\n+                </div>\n+                <div class="mb-3 form-check form-switch">\n+                  <input class="form-check-input" type="checkbox" role="switch" id="disabledSwitchCheckChecked" checked disabled>\n+                  <label class="form-check-label" for="disabledSwitchCheckChecked">Disabled checked switch checkbox input</label>\n+                </div>\n+                <div class="mb-3">\n+                  <label for="disabledRange" class="form-label">Disabled range</label>\n+                  <input type="range" class="form-range" min="0" max="5" step="0.5" id="disabledRange">\n+                </div>\n+                <button type="submit" class="btn btn-primary">Submit</button>\n+              </fieldset>\n+            </form>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="sizing">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Sizing</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/forms/form-control/#sizing">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <div class="mb-3">\n+              <input class="form-control form-control-lg" type="text" placeholder=".form-control-lg" aria-label=".form-control-lg example">\n+            </div>\n+            <div class="mb-3">\n+              <select class="form-select form-select-lg mb-3" aria-label=".form-select-lg example">\n+                <option selected>Open this select menu</option>\n+                <option value="1">One</option>\n+                <option value="2">Two</option>\n+                <option value="3">Three</option>\n+              </select>\n+            </div>\n+            <div class="mb-3">\n+              <input type="file" class="form-control form-control-lg" aria-label="Large file input example">\n+            </div>\n+            </div>\n+\n+            <div class="bd-example">\n+            <div class="mb-3">\n+              <input class="form-control form-control-sm" type="text" placeholder=".form-control-sm" aria-label=".form-control-sm example">\n+            </div>\n+            <div class="mb-3">\n+              <select class="form-select form-select-sm" aria-label=".form-select-sm example">\n+                <option selected>Open this select menu</option>\n+                <option value="1">One</option>\n+                <option value="2">Two</option>\n+                <option value="3">Three</option>\n+              </select>\n+            </div>\n+            <div class="mb-3">\n+              <input type="file" class="form-control form-control-sm" aria-label="Small file input example">\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="input-group">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Input group</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/forms/input-group/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <div class="input-group mb-3">\n+              <span class="input-group-text" id="basic-addon1">@</span>\n+              <input type="text" class="form-control" placeholder="Username" aria-label="Username" aria-describedby="basic-addon1">\n+            </div>\n+            <div class="input-group mb-3">\n+              <input type="text" class="form-control" placeholder="Recipient\'s username" aria-label="Recipient\'s username" aria-describedby="basic-addon2">\n+              <span class="input-group-text" id="basic-addon2">@example.com</span>\n+            </div>\n+            <label for="basic-url" class="form-label">Your vanity URL</label>\n+            <div class="input-group mb-3">\n+              <span class="input-group-text" id="basic-addon3">https://example.com/users/</span>\n+              <input type="text" class="form-control" id="basic-url" aria-describedby="basic-addon3">\n+            </div>\n+            <div class="input-group mb-3">\n+              <span class="input-group-text">$</span>\n+              <input type="text" class="form-control" aria-label="Amount (to the nearest dollar)">\n+              <span class="input-group-text">.00</span>\n+            </div>\n+            <div class="input-group">\n+              <span class="input-group-text">With textarea</span>\n+              <textarea class="form-control" aria-label="With textarea"></textarea>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="floating-labels">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Floating labels</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/forms/floating-labels/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <form>\n+              <div class="form-floating mb-3">\n+                <input type="email" class="form-control" id="floatingInput" placeholder="name@example.com">\n+                <label for="floatingInput">Email address</label>\n+              </div>\n+              <div class="form-floating">\n+                <input type="password" class="form-control" id="floatingPassword" placeholder="Password">\n+                <label for="floatingPassword">Password</label>\n+              </div>\n+            </form>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="validation">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Validation</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/forms/validation/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <form class="row g-3">\n+              <div class="col-md-4">\n+                <label for="validationServer01" class="form-label">First name</label>\n+                <input type="text" class="form-control is-valid" id="validationServer01" value="Mark" required>\n+                <div class="valid-feedback">\n+                  Looks good!\n+                </div>\n+              </div>\n+              <div class="col-md-4">\n+                <label for="validationServer02" class="form-label">Last name</label>\n+                <input type="text" class="form-control is-valid" id="validationServer02" value="Otto" required>\n+                <div class="valid-feedback">\n+                  Looks good!\n+                </div>\n+              </div>\n+              <div class="col-md-4">\n+                <label for="validationServerUsername" class="form-label">Username</label>\n+                <div class="input-group has-validation">\n+                  <span class="input-group-text" id="inputGroupPrepend3">@</span>\n+                  <input type="text" class="form-control is-invalid" id="validationServerUsername" aria-describedby="inputGroupPrepend3" required>\n+                  <div class="invalid-feedback">\n+                    Please choose a username.\n+                  </div>\n+                </div>\n+              </div>\n+              <div class="col-md-6">\n+                <label for="validationServer03" class="form-label">City</label>\n+                <input type="text" class="form-control is-invalid" id="validationServer03" required>\n+                <div class="invalid-feedback">\n+                  Please provide a valid city.\n+                </div>\n+              </div>\n+              <div class="col-md-3">\n+                <label for="validationServer04" class="form-label">State</label>\n+                <select class="form-select is-invalid" id="validationServer04" required>\n+                  <option selected disabled value="">Choose...</option>\n+                  <option>...</option>\n+                </select>\n+                <div class="invalid-feedback">\n+                  Please select a valid state.\n+                </div>\n+              </div>\n+              <div class="col-md-3">\n+                <label for="validationServer05" class="form-label">Zip</label>\n+                <input type="text" class="form-control is-invalid" id="validationServer05" required>\n+                <div class="invalid-feedback">\n+                  Please provide a valid zip.\n+                </div>\n+              </div>\n+              <div class="col-12">\n+                <div class="form-check">\n+                  <input class="form-check-input is-invalid" type="checkbox" value="" id="invalidCheck3" required>\n+                  <label class="form-check-label" for="invalidCheck3">\n+                    Agree to terms and conditions\n+                  </label>\n+                  <div class="invalid-feedback">\n+                    You must agree before submitting.\n+                  </div>\n+                </div>\n+              </div>\n+              <div class="col-12">\n+                <button class="btn btn-primary" type="submit">Submit form</button>\n+              </div>\n+            </form>\n+            </div>\n+          </div>\n+        </article>\n+      </section>\n+\n+      <section id="components">\n+        <h2 class="sticky-xl-top fw-bold pt-3 pt-xl-5 pb-2 pb-xl-3">Components</h2>\n+\n+        <article class="my-3" id="accordion">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Accordion</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/accordion/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <div class="accordion" id="accordionExample">\n+              <div class="accordion-item">\n+                <h4 class="accordion-header" id="headingOne">\n+                  <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">\n+                    Accordion Item #1\n+                  </button>\n+                </h4>\n+                <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#accordionExample">\n+                  <div class="accordion-body">\n+                    <strong>This is the first item\'s accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It\'s also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n+                  </div>\n+                </div>\n+              </div>\n+              <div class="accordion-item">\n+                <h4 class="accordion-header" id="headingTwo">\n+                  <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">\n+                    Accordion Item #2\n+                  </button>\n+                </h4>\n+                <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#accordionExample">\n+                  <div class="accordion-body">\n+                    <strong>This is the second item\'s accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It\'s also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n+                  </div>\n+                </div>\n+              </div>\n+              <div class="accordion-item">\n+                <h4 class="accordion-header" id="headingThree">\n+                  <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">\n+                    Accordion Item #3\n+                  </button>\n+                </h4>\n+                <div id="collapseThree" class="accordion-collapse collapse" aria-labelledby="headingThree" data-bs-parent="#accordionExample">\n+                  <div class="accordion-body">\n+                    <strong>This is the third item\'s accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It\'s also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n+                  </div>\n+                </div>\n+              </div>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="alerts">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Alerts</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/alerts/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            \n+            <div class="alert alert-primary alert-dismissible fade show" role="alert">\n+              A simple primary alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.\n+              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n+            </div>\n+            <div class="alert alert-secondary alert-dismissible fade show" role="alert">\n+              A simple secondary alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.\n+              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n+            </div>\n+            <div class="alert alert-success alert-dismissible fade show" role="alert">\n+              A simple success alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.\n+              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n+            </div>\n+            <div class="alert alert-danger alert-dismissible fade show" role="alert">\n+              A simple danger alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.\n+              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n+            </div>\n+            <div class="alert alert-warning alert-dismissible fade show" role="alert">\n+              A simple warning alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.\n+              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n+            </div>\n+            <div class="alert alert-info alert-dismissible fade show" role="alert">\n+              A simple info alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.\n+              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n+            </div>\n+            <div class="alert alert-light alert-dismissible fade show" role="alert">\n+              A simple light alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.\n+              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n+            </div>\n+            <div class="alert alert-dark alert-dismissible fade show" role="alert">\n+              A simple dark alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.\n+              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n+            </div>\n+            </div>\n+\n+            <div class="bd-example">\n+            <div class="alert alert-success" role="alert">\n+              <h4 class="alert-heading">Well done!</h4>\n+              <p>Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.</p>\n+              <hr>\n+              <p class="mb-0">Whenever you need to, be sure to use margin utilities to keep things nice and tidy.</p>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="badge">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Badge</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/badge/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <p class="h1">Example heading <span class="badge bg-primary">New</span></p>\n+            <p class="h2">Example heading <span class="badge bg-secondary">New</span></p>\n+            <p class="h3">Example heading <span class="badge bg-success">New</span></p>\n+            <p class="h4">Example heading <span class="badge bg-danger">New</span></p>\n+            <p class="h5">Example heading <span class="badge bg-warning text-dark">New</span></p>\n+            <p class="h6">Example heading <span class="badge bg-info text-dark">New</span></p>\n+            <p class="h6">Example heading <span class="badge bg-light text-dark">New</span></p>\n+            <p class="h6">Example heading <span class="badge bg-dark">New</span></p>\n+            </div>\n+\n+            <div class="bd-example">\n+            \n+            <span class="badge rounded-pill bg-primary">Primary</span>\n+            <span class="badge rounded-pill bg-secondary">Secondary</span>\n+            <span class="badge rounded-pill bg-success">Success</span>\n+            <span class="badge rounded-pill bg-danger">Danger</span>\n+            <span class="badge rounded-pill bg-warning text-dark">Warning</span>\n+            <span class="badge rounded-pill bg-info text-dark">Info</span>\n+            <span class="badge rounded-pill bg-light text-dark">Light</span>\n+            <span class="badge rounded-pill bg-dark">Dark</span>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="breadcrumb">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Breadcrumb</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/breadcrumb/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <nav aria-label="breadcrumb">\n+              <ol class="breadcrumb">\n+                <li class="breadcrumb-item"><a href="#">Home</a></li>\n+                <li class="breadcrumb-item"><a href="#">Library</a></li>\n+                <li class="breadcrumb-item active" aria-current="page">Data</li>\n+              </ol>\n+            </nav>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="buttons">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Buttons</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/buttons/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            \n+            <button type="button" class="btn btn-primary">Primary</button>\n+            <button type="button" class="btn btn-secondary">Secondary</button>\n+            <button type="button" class="btn btn-success">Success</button>\n+            <button type="button" class="btn btn-danger">Danger</button>\n+            <button type="button" class="btn btn-warning">Warning</button>\n+            <button type="button" class="btn btn-info">Info</button>\n+            <button type="button" class="btn btn-light">Light</button>\n+            <button type="button" class="btn btn-dark">Dark</button>\n+\n+            <button type="button" class="btn btn-link">Link</button>\n+            </div>\n+\n+            <div class="bd-example">\n+            \n+            <button type="button" class="btn btn-outline-primary">Primary</button>\n+            <button type="button" class="btn btn-outline-secondary">Secondary</button>\n+            <button type="button" class="btn btn-outline-success">Success</button>\n+            <button type="button" class="btn btn-outline-danger">Danger</button>\n+            <button type="button" class="btn btn-outline-warning">Warning</button>\n+            <button type="button" class="btn btn-outline-info">Info</button>\n+            <button type="button" class="btn btn-outline-light">Light</button>\n+            <button type="button" class="btn btn-outline-dark">Dark</button>\n+            </div>\n+\n+            <div class="bd-example">\n+            <button type="button" class="btn btn-primary btn-sm">Small button</button>\n+            <button type="button" class="btn btn-primary">Standard button</button>\n+            <button type="button" class="btn btn-primary btn-lg">Large button</button>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="button-group">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Button group</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/button-group/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <div class="btn-toolbar" role="toolbar" aria-label="Toolbar with button groups">\n+              <div class="btn-group me-2" role="group" aria-label="First group">\n+                <button type="button" class="btn btn-secondary">1</button>\n+                <button type="button" class="btn btn-secondary">2</button>\n+                <button type="button" class="btn btn-secondary">3</button>\n+                <button type="button" class="btn btn-secondary">4</button>\n+              </div>\n+              <div class="btn-group me-2" role="group" aria-label="Second group">\n+                <button type="button" class="btn btn-secondary">5</button>\n+                <button type="button" class="btn btn-secondary">6</button>\n+                <button type="button" class="btn btn-secondary">7</button>\n+              </div>\n+              <div class="btn-group" role="group" aria-label="Third group">\n+                <button type="button" class="btn btn-secondary">8</button>\n+              </div>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="card">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Card</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/card/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <div class="row  row-cols-1 row-cols-md-2 g-4">\n+              <div class="col">\n+                <div class="card">\n+                  <svg class="bd-placeholder-img card-img-top" width="100%" height="180" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: Image cap" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#868e96"/><text x="50%" y="50%" fill="#dee2e6" dy=".3em">Image cap</text></svg>\n+\n+                  <div class="card-body">\n+                    <h5 class="card-title">Card title</h5>\n+                    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card\'s content.</p>\n+                    <a href="#" class="btn btn-primary">Go somewhere</a>\n+                  </div>\n+                </div>\n+              </div>\n+              <div class="col">\n+                <div class="card">\n+                  <div class="card-header">\n+                    Featured\n+                  </div>\n+                  <div class="card-body">\n+                    <h5 class="card-title">Card title</h5>\n+                    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card\'s content.</p>\n+                    <a href="#" class="btn btn-primary">Go somewhere</a>\n+                  </div>\n+                  <div class="card-footer text-muted">\n+                    2 days ago\n+                  </div>\n+                </div>\n+              </div>\n+              <div class="col">\n+                <div class="card">\n+                  <div class="card-body">\n+                    <h5 class="card-title">Card title</h5>\n+                    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card\'s content.</p>\n+                  </div>\n+                  <ul class="list-group list-group-flush">\n+                    <li class="list-group-item">An item</li>\n+                    <li class="list-group-item">A second item</li>\n+                    <li class="list-group-item">A third item</li>\n+                  </ul>\n+                  <div class="card-body">\n+                    <a href="#" class="card-link">Card link</a>\n+                    <a href="#" class="card-link">Another link</a>\n+                  </div>\n+                </div>\n+              </div>\n+              <div class="col">\n+                <div class="card">\n+                  <div class="row g-0">\n+                    <div class="col-md-4">\n+                      <svg class="bd-placeholder-img" width="100%" height="250" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: Image" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#868e96"/><text x="50%" y="50%" fill="#dee2e6" dy=".3em">Image</text></svg>\n+\n+                    </div>\n+                    <div class="col-md-8">\n+                      <div class="card-body">\n+                        <h5 class="card-title">Card title</h5>\n+                        <p class="card-text">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\n+                        <p class="card-text"><small class="text-muted">Last updated 3 mins ago</small></p>\n+                      </div>\n+                    </div>\n+                  </div>\n+                </div>\n+              </div>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="carousel">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Carousel</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/carousel/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <div id="carouselExampleCaptions" class="carousel slide" data-bs-ride="carousel">\n+              <div class="carousel-indicators">\n+                <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>\n+                <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="1" aria-label="Slide 2"></button>\n+                <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="2" aria-label="Slide 3"></button>\n+              </div>\n+              <div class="carousel-inner">\n+                <div class="carousel-item active">\n+                  <svg class="bd-placeholder-img bd-placeholder-img-lg d-block w-100" width="800" height="400" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: First slide" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#777"/><text x="50%" y="50%" fill="#555" dy=".3em">First slide</text></svg>\n+\n+                  <div class="carousel-caption d-none d-md-block">\n+                    <h5>First slide label</h5>\n+                    <p>Some representative placeholder content for the first slide.</p>\n+                  </div>\n+                </div>\n+                <div class="carousel-item">\n+                  <svg class="bd-placeholder-img bd-placeholder-img-lg d-block w-100" width="800" height="400" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: Second slide" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#666"/><text x="50%" y="50%" fill="#444" dy=".3em">Second slide</text></svg>\n+\n+                  <div class="carousel-caption d-none d-md-block">\n+                    <h5>Second slide label</h5>\n+                    <p>Some representative placeholder content for the second slide.</p>\n+                  </div>\n+                </div>\n+                <div class="carousel-item">\n+                  <svg class="bd-placeholder-img bd-placeholder-img-lg d-block w-100" width="800" height="400" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: Third slide" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#555"/><text x="50%" y="50%" fill="#333" dy=".3em">Third slide</text></svg>\n+\n+                  <div class="carousel-caption d-none d-md-block">\n+                    <h5>Third slide label</h5>\n+                    <p>Some representative placeholder content for the third slide.</p>\n+                  </div>\n+                </div>\n+              </div>\n+              <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleCaptions"  data-bs-slide="prev">\n+                <span class="carousel-control-prev-icon" aria-hidden="true"></span>\n+                <span class="visually-hidden">Previous</span>\n+              </button>\n+              <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleCaptions"  data-bs-slide="next">\n+                <span class="carousel-control-next-icon" aria-hidden="true"></span>\n+                <span class="visually-hidden">Next</span>\n+              </button>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="dropdowns">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Dropdowns</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/dropdowns/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <div class="btn-group w-100 align-items-center justify-content-between flex-wrap">\n+              <div class="dropdown">\n+                <button class="btn btn-secondary btn-sm dropdown-toggle" type="button" id="dropdownMenuButtonSM" data-bs-toggle="dropdown" aria-expanded="false">\n+                  Dropdown button\n+                </button>\n+                <ul class="dropdown-menu" aria-labelledby="dropdownMenuButtonSM">\n+                  <li><h6 class="dropdown-header">Dropdown header</h6></li>\n+                  <li><a class="dropdown-item" href="#">Action</a></li>\n+                  <li><a class="dropdown-item" href="#">Another action</a></li>\n+                  <li><a class="dropdown-item" href="#">Something else here</a></li>\n+                  <li><hr class="dropdown-divider"></li>\n+                  <li><a class="dropdown-item" href="#">Separated link</a></li>\n+                </ul>\n+              </div>\n+              <div class="dropdown">\n+                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">\n+                  Dropdown button\n+                </button>\n+                <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">\n+                  <li><h6 class="dropdown-header">Dropdown header</h6></li>\n+                  <li><a class="dropdown-item" href="#">Action</a></li>\n+                  <li><a class="dropdown-item" href="#">Another action</a></li>\n+                  <li><a class="dropdown-item" href="#">Something else here</a></li>\n+                  <li><hr class="dropdown-divider"></li>\n+                  <li><a class="dropdown-item" href="#">Separated link</a></li>\n+                </ul>\n+              </div>\n+              <div class="dropdown">\n+                <button class="btn btn-secondary btn-lg dropdown-toggle" type="button" id="dropdownMenuButtonLG" data-bs-toggle="dropdown" aria-expanded="false">\n+                  Dropdown button\n+                </button>\n+                <ul class="dropdown-menu" aria-labelledby="dropdownMenuButtonLG">\n+                  <li><h6 class="dropdown-header">Dropdown header</h6></li>\n+                  <li><a class="dropdown-item" href="#">Action</a></li>\n+                  <li><a class="dropdown-item" href="#">Another action</a></li>\n+                  <li><a class="dropdown-item" href="#">Something else here</a></li>\n+                  <li><hr class="dropdown-divider"></li>\n+                  <li><a class="dropdown-item" href="#">Separated link</a></li>\n+                </ul>\n+              </div>\n+            </div>\n+            </div>\n+\n+            <div class="bd-example">\n+            <div class="btn-group">\n+              <button type="button" class="btn btn-primary">Primary</button>\n+              <button type="button" class="btn btn-primary dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">\n+                <span class="visually-hidden">Toggle Dropdown</span>\n+              </button>\n+              <ul class="dropdown-menu">\n+                <li><a class="dropdown-item" href="#">Action</a></li>\n+                <li><a class="dropdown-item" href="#">Another action</a></li>\n+                <li><a class="dropdown-item" href="#">Something else here</a></li>\n+              </ul>\n+            </div><!-- /btn-group -->\n+            <div class="btn-group">\n+              <button type="button" class="btn btn-secondary">Secondary</button>\n+              <button type="button" class="btn btn-secondary dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">\n+                <span class="visually-hidden">Toggle Dropdown</span>\n+              </button>\n+              <ul class="dropdown-menu">\n+                <li><a class="dropdown-item" href="#">Action</a></li>\n+                <li><a class="dropdown-item" href="#">Another action</a></li>\n+                <li><a class="dropdown-item" href="#">Something else here</a></li>\n+              </ul>\n+            </div><!-- /btn-group -->\n+            <div class="btn-group">\n+              <button type="button" class="btn btn-success">Success</button>\n+              <button type="button" class="btn btn-success dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">\n+                <span class="visually-hidden">Toggle Dropdown</span>\n+              </button>\n+              <ul class="dropdown-menu">\n+                <li><a class="dropdown-item" href="#">Action</a></li>\n+                <li><a class="dropdown-item" href="#">Another action</a></li>\n+                <li><a class="dropdown-item" href="#">Something else here</a></li>\n+              </ul>\n+            </div><!-- /btn-group -->\n+            <div class="btn-group">\n+              <button type="button" class="btn btn-info">Info</button>\n+              <button type="button" class="btn btn-info dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">\n+                <span class="visually-hidden">Toggle Dropdown</span>\n+              </button>\n+              <ul class="dropdown-menu">\n+                <li><a class="dropdown-item" href="#">Action</a></li>\n+                <li><a class="dropdown-item" href="#">Another action</a></li>\n+                <li><a class="dropdown-item" href="#">Something else here</a></li>\n+              </ul>\n+            </div><!-- /btn-group -->\n+            <div class="btn-group">\n+              <button type="button" class="btn btn-warning">Warning</button>\n+              <button type="button" class="btn btn-warning dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">\n+                <span class="visually-hidden">Toggle Dropdown</span>\n+              </button>\n+              <ul class="dropdown-menu">\n+                <li><a class="dropdown-item" href="#">Action</a></li>\n+                <li><a class="dropdown-item" href="#">Another action</a></li>\n+                <li><a class="dropdown-item" href="#">Something else here</a></li>\n+              </ul>\n+            </div><!-- /btn-group -->\n+            <div class="btn-group">\n+              <button type="button" class="btn btn-danger">Danger</button>\n+              <button type="button" class="btn btn-danger dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">\n+                <span class="visually-hidden">Toggle Dropdown</span>\n+              </button>\n+              <ul class="dropdown-menu">\n+                <li><a class="dropdown-item" href="#">Action</a></li>\n+                <li><a class="dropdown-item" href="#">Another action</a></li>\n+                <li><a class="dropdown-item" href="#">Something else here</a></li>\n+              </ul>\n+            </div><!-- /btn-group -->\n+            </div>\n+\n+            <div class="bd-example">\n+            <div class="btn-group w-100 align-items-center justify-content-between flex-wrap">\n+              <div class="dropend">\n+                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropendMenuButton" data-bs-toggle="dropdown" aria-expanded="false">\n+                  Dropend button\n+                </button>\n+                <ul class="dropdown-menu" aria-labelledby="dropendMenuButton">\n+                  <li><h6 class="dropdown-header">Dropdown header</h6></li>\n+                  <li><a class="dropdown-item" href="#">Action</a></li>\n+                  <li><a class="dropdown-item" href="#">Another action</a></li>\n+                  <li><a class="dropdown-item" href="#">Something else here</a></li>\n+                  <li><hr class="dropdown-divider"></li>\n+                  <li><a class="dropdown-item" href="#">Separated link</a></li>\n+                </ul>\n+              </div>\n+              <div class="dropup">\n+                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropupMenuButton" data-bs-toggle="dropdown" aria-expanded="false">\n+                  Dropup button\n+                </button>\n+                <ul class="dropdown-menu" aria-labelledby="dropupMenuButton">\n+                  <li><h6 class="dropdown-header">Dropdown header</h6></li>\n+                  <li><a class="dropdown-item" href="#">Action</a></li>\n+                  <li><a class="dropdown-item" href="#">Another action</a></li>\n+                  <li><a class="dropdown-item" href="#">Something else here</a></li>\n+                  <li><hr class="dropdown-divider"></li>\n+                  <li><a class="dropdown-item" href="#">Separated link</a></li>\n+                </ul>\n+              </div>\n+              <div class="dropstart">\n+                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropstartMenuButton" data-bs-toggle="dropdown" aria-expanded="false">\n+                  Dropstart button\n+                </button>\n+                <ul class="dropdown-menu" aria-labelledby="dropstartMenuButton">\n+                  <li><h6 class="dropdown-header">Dropdown header</h6></li>\n+                  <li><a class="dropdown-item" href="#">Action</a></li>\n+                  <li><a class="dropdown-item" href="#">Another action</a></li>\n+                  <li><a class="dropdown-item" href="#">Something else here</a></li>\n+                  <li><hr class="dropdown-divider"></li>\n+                  <li><a class="dropdown-item" href="#">Separated link</a></li>\n+                </ul>\n+              </div>\n+            </div>\n+            </div>\n+\n+            <div class="bd-example">\n+            <div class="btn-group">\n+              <div class="dropdown">\n+                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownRightMenuButton" data-bs-toggle="dropdown" aria-expanded="false">\n+                  End-aligned menu\n+                </button>\n+                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownRightMenuButton">\n+                  <li><h6 class="dropdown-header">Dropdown header</h6></li>\n+                  <li><a class="dropdown-item" href="#">Action</a></li>\n+                  <li><a class="dropdown-item" href="#">Another action</a></li>\n+                  <li><hr class="dropdown-divider"></li>\n+                  <li><a class="dropdown-item" href="#">Separated link</a></li>\n+                </ul>\n+              </div>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="list-group">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>List group</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/list-group/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <ul class="list-group">\n+              <li class="list-group-item disabled" aria-disabled="true">A disabled item</li>\n+              <li class="list-group-item">A second item</li>\n+              <li class="list-group-item">A third item</li>\n+              <li class="list-group-item">A fourth item</li>\n+              <li class="list-group-item">And a fifth one</li>\n+            </ul>\n+            </div>\n+\n+            <div class="bd-example">\n+            <ul class="list-group list-group-flush">\n+              <li class="list-group-item">An item</li>\n+              <li class="list-group-item">A second item</li>\n+              <li class="list-group-item">A third item</li>\n+              <li class="list-group-item">A fourth item</li>\n+              <li class="list-group-item">And a fifth one</li>\n+            </ul>\n+            </div>\n+\n+            <div class="bd-example">\n+            <div class="list-group">\n+              <a href="#" class="list-group-item list-group-item-action">A simple default list group item</a>\n+              \n+              <a href="#" class="list-group-item list-group-item-action list-group-item-primary">A simple primary list group item</a>\n+              <a href="#" class="list-group-item list-group-item-action list-group-item-secondary">A simple secondary list group item</a>\n+              <a href="#" class="list-group-item list-group-item-action list-group-item-success">A simple success list group item</a>\n+              <a href="#" class="list-group-item list-group-item-action list-group-item-danger">A simple danger list group item</a>\n+              <a href="#" class="list-group-item list-group-item-action list-group-item-warning">A simple warning list group item</a>\n+              <a href="#" class="list-group-item list-group-item-action list-group-item-info">A simple info list group item</a>\n+              <a href="#" class="list-group-item list-group-item-action list-group-item-light">A simple light list group item</a>\n+              <a href="#" class="list-group-item list-group-item-action list-group-item-dark">A simple dark list group item</a>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="modal">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Modal</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/modal/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <div class="d-flex justify-content-between flex-wrap">\n+              <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModalDefault">\n+                Launch demo modal\n+              </button>\n+              <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdropLive">\n+                Launch static backdrop modal\n+              </button>\n+              <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModalCenteredScrollable">\n+                Vertically centered scrollable modal\n+              </button>\n+              <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModalFullscreen">\n+                Full screen\n+              </button>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="navs">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Navs</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/navs-tabs/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <nav class="nav">\n+              <a class="nav-link active" aria-current="page" href="#">Active</a>\n+              <a class="nav-link" href="#">Link</a>\n+              <a class="nav-link" href="#">Link</a>\n+              <a class="nav-link disabled">Disabled</a>\n+            </nav>\n+            </div>\n+\n+            <div class="bd-example">\n+            <nav>\n+              <div class="nav nav-tabs mb-3" id="nav-tab" role="tablist">\n+                <button class="nav-link active" id="nav-home-tab" data-bs-toggle="tab" data-bs-target="#nav-home" type="button" role="tab" aria-controls="nav-home" aria-selected="true">Home</button>\n+                <button class="nav-link" id="nav-profile-tab" data-bs-toggle="tab" data-bs-target="#nav-profile" type="button" role="tab" aria-controls="nav-profile" aria-selected="false">Profile</button>\n+                <button class="nav-link" id="nav-contact-tab" data-bs-toggle="tab" data-bs-target="#nav-contact" type="button" role="tab" aria-controls="nav-contact" aria-selected="false">Contact</button>\n+              </div>\n+            </nav>\n+            <div class="tab-content" id="nav-tabContent">\n+              <div class="tab-pane fade show active" id="nav-home" role="tabpanel" aria-labelledby="nav-home-tab">\n+                <p><strong>This is some placeholder content the Home tab\'s associated content.</strong> Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other <code>.nav</code>-powered navigation.</p>\n+              </div>\n+              <div class="tab-pane fade" id="nav-profile" role="tabpanel" aria-labelledby="nav-profile-tab">\n+                <p><strong>This is some placeholder content the Profile tab\'s associated content.</strong> Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other <code>.nav</code>-powered navigation.</p>\n+              </div>\n+              <div class="tab-pane fade" id="nav-contact" role="tabpanel" aria-labelledby="nav-contact-tab">\n+                <p><strong>This is some placeholder content the Contact tab\'s associated content.</strong> Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other <code>.nav</code>-powered navigation.</p>\n+              </div>\n+            </div>\n+            </div>\n+\n+            <div class="bd-example">\n+            <ul class="nav nav-pills">\n+              <li class="nav-item">\n+                <a class="nav-link active" aria-current="page" href="#">Active</a>\n+              </li>\n+              <li class="nav-item">\n+                <a class="nav-link" href="#">Link</a>\n+              </li>\n+              <li class="nav-item">\n+                <a class="nav-link" href="#">Link</a>\n+              </li>\n+              <li class="nav-item">\n+                <a class="nav-link disabled">Disabled</a>\n+              </li>\n+            </ul>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="navbar">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Navbar</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/navbar/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <nav class="navbar navbar-expand-lg navbar-light bg-light">\n+              <div class="container-fluid">\n+                <a class="navbar-brand" href="#">\n+                  <img src="https://getbootstrap.com/docs/5.1/assets/brand/bootstrap-logo-white.svg" width="38" height="30" class="d-inline-block align-top" alt="Bootstrap" loading="lazy"\n+                      style="filter: invert(1) grayscale(100%) brightness(200%);">\n+                </a>\n+                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">\n+                  <span class="navbar-toggler-icon"></span>\n+                </button>\n+                <div class="collapse navbar-collapse" id="navbarSupportedContent">\n+                  <ul class="navbar-nav me-auto mb-2 mb-lg-0">\n+                    <li class="nav-item">\n+                      <a class="nav-link active" aria-current="page" href="#">Home</a>\n+                    </li>\n+                    <li class="nav-item">\n+                      <a class="nav-link" href="#">Link</a>\n+                    </li>\n+                    <li class="nav-item dropdown">\n+                      <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">\n+                        Dropdown\n+                      </a>\n+                      <ul class="dropdown-menu" aria-labelledby="navbarDropdown">\n+                        <li><a class="dropdown-item" href="#">Action</a></li>\n+                        <li><a class="dropdown-item" href="#">Another action</a></li>\n+                        <li><hr class="dropdown-divider"></li>\n+                        <li><a class="dropdown-item" href="#">Something else here</a></li>\n+                      </ul>\n+                    </li>\n+                    <li class="nav-item">\n+                      <a class="nav-link disabled">Disabled</a>\n+                    </li>\n+                  </ul>\n+                  <form class="d-flex">\n+                    <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">\n+                    <button class="btn btn-outline-dark" type="submit">Search</button>\n+                  </form>\n+                </div>\n+              </div>\n+            </nav>\n+\n+            <nav class="navbar navbar-expand-lg navbar-dark bg-primary mt-5">\n+              <div class="container-fluid">\n+                <a class="navbar-brand" href="#">\n+                  <img src="https://getbootstrap.com/docs/5.1/assets/brand/bootstrap-logo-white.svg" width="38" height="30" class="d-inline-block align-top" alt="Bootstrap" loading="lazy">\n+                </a>\n+                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent2" aria-controls="navbarSupportedContent2" aria-expanded="false" aria-label="Toggle navigation">\n+                  <span class="navbar-toggler-icon"></span>\n+                </button>\n+                <div class="collapse navbar-collapse" id="navbarSupportedContent2">\n+                  <ul class="navbar-nav me-auto mb-2 mb-lg-0">\n+                    <li class="nav-item">\n+                      <a class="nav-link active" aria-current="page" href="#">Home</a>\n+                    </li>\n+                    <li class="nav-item">\n+                      <a class="nav-link" href="#">Link</a>\n+                    </li>\n+                    <li class="nav-item dropdown">\n+                      <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown2" role="button" data-bs-toggle="dropdown" aria-expanded="false">\n+                        Dropdown\n+                      </a>\n+                      <ul class="dropdown-menu" aria-labelledby="navbarDropdown2">\n+                        <li><a class="dropdown-item" href="#">Action</a></li>\n+                        <li><a class="dropdown-item" href="#">Another action</a></li>\n+                        <li><hr class="dropdown-divider"></li>\n+                        <li><a class="dropdown-item" href="#">Something else here</a></li>\n+                      </ul>\n+                    </li>\n+                    <li class="nav-item">\n+                      <a class="nav-link disabled">Disabled</a>\n+                    </li>\n+                  </ul>\n+                  <form class="d-flex">\n+                    <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">\n+                    <button class="btn btn-outline-light" type="submit">Search</button>\n+                  </form>\n+                </div>\n+              </div>\n+            </nav>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="pagination">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Pagination</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/pagination/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <nav aria-label="Pagination example">\n+              <ul class="pagination pagination-sm">\n+                <li class="page-item"><a class="page-link" href="#">1</a></li>\n+                <li class="page-item active" aria-current="page">\n+                  <a class="page-link" href="#">2</a>\n+                </li>\n+                <li class="page-item"><a class="page-link" href="#">3</a></li>\n+              </ul>\n+            </nav>\n+            </div>\n+\n+            <div class="bd-example">\n+            <nav aria-label="Standard pagination example">\n+              <ul class="pagination">\n+                <li class="page-item">\n+                  <a class="page-link" href="#" aria-label="Previous">\n+                    <span aria-hidden="true">&laquo;</span>\n+                  </a>\n+                </li>\n+                <li class="page-item"><a class="page-link" href="#">1</a></li>\n+                <li class="page-item"><a class="page-link" href="#">2</a></li>\n+                <li class="page-item"><a class="page-link" href="#">3</a></li>\n+                <li class="page-item">\n+                  <a class="page-link" href="#" aria-label="Next">\n+                    <span aria-hidden="true">&raquo;</span>\n+                  </a>\n+                </li>\n+              </ul>\n+            </nav>\n+            </div>\n+\n+            <div class="bd-example">\n+            <nav aria-label="Another pagination example">\n+              <ul class="pagination pagination-lg flex-wrap">\n+                <li class="page-item disabled">\n+                  <a class="page-link">Previous</a>\n+                </li>\n+                <li class="page-item"><a class="page-link" href="#">1</a></li>\n+                <li class="page-item active" aria-current="page">\n+                  <a class="page-link" href="#">2</a>\n+                </li>\n+                <li class="page-item"><a class="page-link" href="#">3</a></li>\n+                <li class="page-item">\n+                  <a class="page-link" href="#">Next</a>\n+                </li>\n+              </ul>\n+            </nav>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="popovers">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Popovers</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/popovers/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <button type="button" class="btn btn-lg btn-danger" data-bs-toggle="popover" title="Popover title" data-bs-content="And here\'s some amazing content. It\'s very engaging. Right?">Click to toggle popover</button>\n+            </div>\n+\n+            <div class="bd-example">\n+            <button type="button" class="btn btn-secondary" data-bs-container="body" data-bs-toggle="popover" data-bs-placement="top" data-bs-content="Vivamus sagittis lacus vel augue laoreet rutrum faucibus.">\n+              Popover on top\n+            </button>\n+            <button type="button" class="btn btn-secondary" data-bs-container="body" data-bs-toggle="popover" data-bs-placement="right" data-bs-content="Vivamus sagittis lacus vel augue laoreet rutrum faucibus.">\n+              Popover on end\n+            </button>\n+            <button type="button" class="btn btn-secondary" data-bs-container="body" data-bs-toggle="popover" data-bs-placement="bottom" data-bs-content="Vivamus sagittis lacus vel augue laoreet rutrum faucibus.">\n+              Popover on bottom\n+            </button>\n+            <button type="button" class="btn btn-secondary" data-bs-container="body" data-bs-toggle="popover" data-bs-placement="left" data-bs-content="Vivamus sagittis lacus vel augue laoreet rutrum faucibus.">\n+              Popover on start\n+            </button>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="progress">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Progress</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/progress/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <div class="progress mb-3">\n+              <div class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">0%</div>\n+            </div>\n+            <div class="progress mb-3">\n+              <div class="progress-bar bg-success w-25" role="progressbar" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">25%</div>\n+            </div>\n+            <div class="progress mb-3">\n+              <div class="progress-bar bg-info text-dark w-50" role="progressbar" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100">50%</div>\n+            </div>\n+            <div class="progress mb-3">\n+              <div class="progress-bar bg-warning text-dark w-75" role="progressbar" aria-valuenow="75" aria-valuemin="0" aria-valuemax="100">75%</div>\n+            </div>\n+            <div class="progress">\n+              <div class="progress-bar bg-danger w-100" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100">100%</div>\n+            </div>\n+            </div>\n+\n+            <div class="bd-example">\n+            <div class="progress">\n+              <div class="progress-bar" role="progressbar" style="width: 15%" aria-valuenow="15" aria-valuemin="0" aria-valuemax="100"></div>\n+              <div class="progress-bar progress-bar-striped progress-bar-animated bg-success" role="progressbar" style="width: 40%" aria-valuenow="40" aria-valuemin="0" aria-valuemax="100"></div>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="scrollspy">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Scrollspy</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/scrollspy/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+              <nav id="navbar-example2" class="navbar navbar-light bg-light px-3">\n+                <a class="navbar-brand" href="#">Navbar</a>\n+                <ul class="nav nav-pills">\n+                  <li class="nav-item">\n+                    <a class="nav-link active" href="#scrollspyHeading1">First</a>\n+                  </li>\n+                  <li class="nav-item">\n+                    <a class="nav-link" href="#scrollspyHeading2">Second</a>\n+                  </li>\n+                  <li class="nav-item dropdown">\n+                    <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" role="button" aria-expanded="false">Dropdown</a>\n+                    <ul class="dropdown-menu">\n+                      <li><a class="dropdown-item" href="#scrollspyHeading3">Third</a></li>\n+                      <li><a class="dropdown-item" href="#scrollspyHeading4">Fourth</a></li>\n+                      <li><hr class="dropdown-divider"></li>\n+                      <li><a class="dropdown-item" href="#scrollspyHeading5">Fifth</a></li>\n+                    </ul>\n+                  </li>\n+                </ul>\n+              </nav>\n+            <div data-bs-spy="scroll" data-bs-target="#navbar-example2" data-bs-offset="0" class="scrollspy-example" tabindex="0">\n+                <h4 id="scrollspyHeading1">First heading</h4>\n+                <p>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It\'s repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.</p>\n+                <h4 id="scrollspyHeading2">Second heading</h4>\n+                <p>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It\'s repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.</p>\n+                <h4 id="scrollspyHeading3">Third heading</h4>\n+                <p>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It\'s repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.</p>\n+                <h4 id="scrollspyHeading4">Fourth heading</h4>\n+                <p>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It\'s repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.</p>\n+                <h4 id="scrollspyHeading5">Fifth heading</h4>\n+                <p>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It\'s repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.</p>\n+              </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="spinners">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Spinners</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/spinners/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            \n+            <div class="spinner-border text-primary" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-border text-secondary" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-border text-success" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-border text-danger" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-border text-warning" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-border text-info" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-border text-light" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-border text-dark" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            </div>\n+\n+            <div class="bd-example">\n+            \n+            <div class="spinner-grow text-primary" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-grow text-secondary" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-grow text-success" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-grow text-danger" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-grow text-warning" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-grow text-info" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-grow text-light" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-grow text-dark" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="toasts">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Toasts</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/toasts/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example bg-dark p-5 align-items-center">\n+            <div class="toast" role="alert" aria-live="assertive" aria-atomic="true">\n+              <div class="toast-header">\n+                <svg class="bd-placeholder-img rounded me-2" width="20" height="20" xmlns="http://www.w3.org/2000/svg" aria-hidden="true" preserveAspectRatio="xMidYMid slice" focusable="false"><rect width="100%" height="100%" fill="#007aff"/></svg>\n+\n+                <strong class="me-auto">Bootstrap</strong>\n+                <small class="text-muted">11 mins ago</small>\n+                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>\n+              </div>\n+              <div class="toast-body">\n+                Hello, world! This is a toast message.\n+              </div>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="mt-3 mb-5 pb-5" id="tooltips">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Tooltips</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/tooltips/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example tooltip-demo">\n+            <button type="button" class="btn btn-secondary" data-bs-toggle="tooltip" data-bs-placement="top" title="Tooltip on top">Tooltip on top</button>\n+            <button type="button" class="btn btn-secondary" data-bs-toggle="tooltip" data-bs-placement="right" title="Tooltip on end">Tooltip on end</button>\n+            <button type="button" class="btn btn-secondary" data-bs-toggle="tooltip" data-bs-placement="bottom" title="Tooltip on bottom">Tooltip on bottom</button>\n+            <button type="button" class="btn btn-secondary" data-bs-toggle="tooltip" data-bs-placement="left" title="Tooltip on start">Tooltip on start</button>\n+            <button type="button" class="btn btn-secondary" data-bs-toggle="tooltip" data-bs-html="true" title="<em>Tooltip</em> <u>with</u> <b>HTML</b>">Tooltip with HTML</button>\n+            </div>\n+          </div>\n+        </article>\n+      </section>\n+    </div>\n+\n+    <div class="modal fade" id="exampleModalDefault" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">\n+      <div class="modal-dialog">\n+        <div class="modal-content">\n+          <div class="modal-header">\n+            <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>\n+            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>\n+          </div>\n+          <div class="modal-body">\n+            ...\n+          </div>\n+          <div class="modal-footer">\n+            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>\n+            <button type="button" class="btn btn-primary">Save changes</button>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+    <div class="modal fade" id="staticBackdropLive" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLiveLabel" aria-hidden="true">\n+      <div class="modal-dialog">\n+        <div class="modal-content">\n+          <div class="modal-header">\n+            <h5 class="modal-title" id="staticBackdropLiveLabel">Modal title</h5>\n+            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>\n+          </div>\n+          <div class="modal-body">\n+            <p>I will not close if you click outside me. Don\'t even try to press escape key.</p>\n+          </div>\n+          <div class="modal-footer">\n+            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>\n+            <button type="button" class="btn btn-primary">Understood</button>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+    <div class="modal fade" id="exampleModalCenteredScrollable" tabindex="-1" aria-labelledby="exampleModalCenteredScrollableTitle" aria-hidden="true">\n+      <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">\n+        <div class="modal-content">\n+          <div class="modal-header">\n+            <h5 class="modal-title" id="exampleModalCenteredScrollableTitle">Modal title</h5>\n+            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>\n+          </div>\n+          <div class="modal-body">\n+            <p>This is some placeholder content to show the scrolling behavior for modals. We use repeated line breaks to demonstrate how content can exceed minimum inner height, thereby showing inner scrolling. When content becomes longer than the predefined max-height of modal, content will be cropped and scrollable within the modal.</p>\n+            <br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>\n+            <p>This content should appear at the bottom after you scroll.</p>\n+          </div>\n+          <div class="modal-footer">\n+            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>\n+            <button type="button" class="btn btn-primary">Save changes</button>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+    <div class="modal fade" id="exampleModalFullscreen" tabindex="-1" aria-labelledby="exampleModalFullscreenLabel" aria-hidden="true">\n+      <div class="modal-dialog modal-fullscreen">\n+        <div class="modal-content">\n+          <div class="modal-header">\n+            <h5 class="modal-title h4" id="exampleModalFullscreenLabel">Full screen modal</h5>\n+            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>\n+          </div>\n+          <div class="modal-body">\n+            ...\n+          </div>\n+          <div class="modal-footer">\n+            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+\n+    <!-- End Bootstrap Cheatsheet -->\n+\n+  </metal:main>\n+\n+</body>\n+\n+</html>\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/browser/templates/test_rendering_icons.pt b/Products/CMFPlone/browser/templates/test_rendering_icons.pt\nnew file mode 100644\nindex 0000000000..40999ad312\n--- /dev/null\n+++ b/Products/CMFPlone/browser/templates/test_rendering_icons.pt\n@@ -0,0 +1,91 @@\n+<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" xmlns:tal="http://xml.zope.org/namespaces/tal"\n+  xmlns:metal="http://xml.zope.org/namespaces/metal" xmlns:i18n="http://xml.zope.org/namespaces/i18n" lang="en"\n+  metal:use-macro="context/@@main_template/macros/master" i18n:domain="plone">\n+\n+<body>\n+\n+  <metal:main fill-slot="main">\n+\n+    <style>\n+\n+    </style>    \n+\n+    <ul class="nav nav-tabs mb-3">\n+      <li class="nav-item">\n+        <a class="nav-link active" href="${portal_url}/@@test-rendering">Test Rendering</a>\n+      </li>\n+      <li class="nav-item">\n+        <a class="nav-link" href="${portal_url}/@@test-rendering-cheatsheet">Bootstrap Cheatsheet</a>\n+      </li>\n+      <li class="nav-item">\n+        <a class="nav-link" href="${portal_url}/@@test-rendering-icons">Icons</a>\n+      </li>\n+    </ul>\n+\n+    <h1>Plone Icons test page</h1>\n+\n+    <p class="lead">\n+      This page shows the Icon story of Plone 6. We use <a href="https://icons.getbootstrap.com/" target="_blank">Bootstrap Icons</a> by default.\n+    </p>\n+\n+    <h1>Icons</h1>\n+\n+    <p>\n+      Description to explain icon resolver\n+    </p>\n+\n+    <h2>Get Icon URL</h2>\n+\n+    <p>\n+      <code>&lt;img src="" tal:attributes="src python:icons.url(\'alarm\')" class="custom-class" alt="foo" /&gt;</code>\n+    </p>\n+\n+    <p>\n+      <img src="${python:icons.url(\'alarm\')}" class="custom-class" alt="foo" />\n+    </p>\n+\n+    <h2>Get Icon Tag</h2>\n+\n+    <p>\n+      <code>&lt;tal:icon tal:replace="structure python:icons.tag(\'archive\', tag_class=\'custom-class\', tag_alt=\'foobar\')" /&gt;</code>\n+    </p>\n+\n+    <p>\n+      <tal:icon tal:replace="structure python:icons.tag(\'archive\', tag_class=\'custom-class\', tag_alt=\'foobar\')" />\n+    </p>\n+\n+    <h2>Registration<h2>\n+\n+    <p>\n+      Todo: List custom Icons\n+    </p>\n+\n+    <ul>\n+      <li>\n+        <a href="https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/profiles/default/registry/icons_bootstrap.xml" target="_blank">Bootstrap</a>\n+      </li>\n+      <li>\n+        <a href="https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/profiles/default/registry/icons_contenttype.xml" target="_blank">Content Types</a>\n+      </li>\n+      <li>\n+        <a href="https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/profiles/default/registry/icons_country_flags.xml" target="_blank">Country Flags</a>\n+      </li>\n+      <li>\n+        <a href="https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/profiles/default/registry/icons_language_flags.xml" target="_blank">Language Flags</a>\n+      </li>\n+      <li>\n+        <a href="https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/profiles/default/registry/icons_mimetype.xml" target="_blank">MIME Types</a>\n+      </li>\n+      <li>\n+        <a href="https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/profiles/default/registry/icons_plone.xml" target="_blank">Plone</a>\n+      </li>\n+      <li>\n+        <a href="https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/profiles/default/registry/icons_toolbar.xml" target="_blank">Toolbar</a>\n+      </li>\n+    </ul>\n+\n+  </metal:main>\n+\n+</body>\n+\n+</html>\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/browser/test_rendering.py b/Products/CMFPlone/browser/test_rendering.py\nindex 513dc0e839..b3c567068d 100644\n--- a/Products/CMFPlone/browser/test_rendering.py\n+++ b/Products/CMFPlone/browser/test_rendering.py\n@@ -11,3 +11,23 @@ def __call__(self):\n         self.request.set(\'disable_plone.rightcolumn\', 1)\n         self.request.set(\'disable_plone.leftcolumn\', 1)\n         return self.template()\n+\n+\n+class TestRenderingCheatsheetView(BrowserView):\n+\n+    template = ViewPageTemplateFile(\'templates/test_rendering_cheatsheet.pt\')\n+\n+    def __call__(self):\n+        self.request.set(\'disable_plone.rightcolumn\', 1)\n+        self.request.set(\'disable_plone.leftcolumn\', 1)\n+        return self.template()\n+\n+\n+class TestRenderingIconsView(BrowserView):\n+\n+    template = ViewPageTemplateFile(\'templates/test_rendering_icons.pt\')\n+\n+    def __call__(self):\n+        self.request.set(\'disable_plone.rightcolumn\', 1)\n+        self.request.set(\'disable_plone.leftcolumn\', 1)\n+        return self.template()\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:43+01:00
Author: petschki (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/212e93db204a9963c2328bc848e85d2a4b52e045

update tests for staticresource bundles

Files changed:
M Products/CMFPlone/tests/testResourceRegistries.py

b'diff --git a/Products/CMFPlone/tests/testResourceRegistries.py b/Products/CMFPlone/tests/testResourceRegistries.py\nindex c4da9db9a5..5c26f0fca7 100644\n--- a/Products/CMFPlone/tests/testResourceRegistries.py\n+++ b/Products/CMFPlone/tests/testResourceRegistries.py\n@@ -76,7 +76,8 @@ def test_scripts_viewlet(self):\n         scripts = ScriptsView(self.layer["portal"], self.layer["request"], None)\n         scripts.update()\n         results = scripts.render()\n-        self.assertNotIn(\n+        self.assertIn("++plone++static/bundle-jquery/jquery.min.js", results)\n+        self.assertIn(\n             "++plone++static/bundle-bootstrap/js/bootstrap.bundle.min.js", results\n         )\n         self.assertIn("++plone++static/bundle-plone/bundle.min.js", results)\n@@ -87,7 +88,8 @@ def test_scripts_viewlet_anonymous(self):\n         scripts = ScriptsView(self.layer["portal"], self.layer["request"], None)\n         scripts.update()\n         results = scripts.render()\n-        self.assertNotIn(\n+        self.assertIn("++plone++static/bundle-jquery/jquery.min.js", results)\n+        self.assertIn(\n             "++plone++static/bundle-bootstrap/js/bootstrap.bundle.min.js", results\n         )\n         self.assertIn("++plone++static/bundle-plone/bundle.min.js", results)\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:43+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/3d45cb4266cfc449fc800e5ccdac61ba3102ea3e

catch IntIdMissingError during restore_relations

Files changed:
M Products/CMFPlone/relationhelper.py

b"diff --git a/Products/CMFPlone/relationhelper.py b/Products/CMFPlone/relationhelper.py\nindex 0a8f041ce5..35312fbb8e 100644\n--- a/Products/CMFPlone/relationhelper.py\n+++ b/Products/CMFPlone/relationhelper.py\n@@ -186,7 +186,11 @@ def restore_relations(context=None, all_relations=None):\n             continue\n \n         from_attribute = item['from_attribute']\n-        to_id = intids.getId(target_obj)\n+        try:\n+            to_id = intids.getId(target_obj)\n+        except KeyError as e:\n+            logger.info(f'No intid for {target_obj}')\n+            continue\n \n         if from_attribute == referencedRelationship:\n             # Ignore linkintegrity for now. We'll rebuilt it at the end!\n"

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:43+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/2d11c5a7dead17fb2fc1baad58eebe47cab19809

Update Products/CMFPlone/relationhelper.py

Co-authored-by: Alessandro Pisa &lt;alessandro.pisa@gmail.com&gt;

Files changed:
M Products/CMFPlone/relationhelper.py

b"diff --git a/Products/CMFPlone/relationhelper.py b/Products/CMFPlone/relationhelper.py\nindex 35312fbb8e..da92cccb97 100644\n--- a/Products/CMFPlone/relationhelper.py\n+++ b/Products/CMFPlone/relationhelper.py\n@@ -189,7 +189,7 @@ def restore_relations(context=None, all_relations=None):\n         try:\n             to_id = intids.getId(target_obj)\n         except KeyError as e:\n-            logger.info(f'No intid for {target_obj}')\n+            logger.warning(f'No intid for {target_obj}')\n             continue\n \n         if from_attribute == referencedRelationship:\n"

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:43+01:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/95850b07f983763b25e700cc857bdae666977a6a

Add TinyMCE alignment classes, to avoid style usage

Files changed:
A news/3440.feature
M Products/CMFPlone/interfaces/controlpanel.py

b'diff --git a/Products/CMFPlone/interfaces/controlpanel.py b/Products/CMFPlone/interfaces/controlpanel.py\nindex d40c61eeb8..521f9b3713 100644\n--- a/Products/CMFPlone/interfaces/controlpanel.py\n+++ b/Products/CMFPlone/interfaces/controlpanel.py\n@@ -18,7 +18,7 @@\n \n deprecated(\n     "It has been moved to plone.i18n.interfaces, import from there instead.",\n-    ILanguageSchema=\'plone.i18n.interfaces:ILanguageSchema\',\n+    ILanguageSchema="plone.i18n.interfaces:ILanguageSchema",\n )\n \n \n@@ -62,10 +62,13 @@ def validate_json(value):\n     try:\n         json.loads(value)\n     except ValueError as exc:\n+\n         class JSONError(schema.ValidationError):\n-            __doc__ = _("Must be empty or a valid JSON-formatted "\n-                        "configuration \xe2\x80\x93 ${message}.", mapping={\n-                            \'message\': str(exc)})\n+            __doc__ = _(\n+                "Must be empty or a valid JSON-formatted "\n+                "configuration \xe2\x80\x93 ${message}.",\n+                mapping={"message": str(exc)},\n+            )\n \n         raise JSONError(value)\n \n@@ -73,359 +76,418 @@ class JSONError(schema.ValidationError):\n \n \n class IControlPanel(IPloneBaseTool):\n-    """ Interface for the ControlPanel """\n-\n-    def registerConfiglet(id, name, action, condition=\'\', permission=\'\',  # NOQA\n-                          category=\'Plone\', visible=1, appId=None,\n-                          imageUrl=None, description=\'\', REQUEST=None):\n-        """ Registration of a Configlet """\n+    """Interface for the ControlPanel"""\n+\n+    def registerConfiglet(\n+        id,\n+        name,\n+        action,\n+        condition="",\n+        permission="",  # NOQA\n+        category="Plone",\n+        visible=1,\n+        appId=None,\n+        imageUrl=None,\n+        description="",\n+        REQUEST=None,\n+    ):\n+        """Registration of a Configlet"""\n \n     def unregisterConfiglet(id):  # NOQA\n-        """ unregister Configlet """\n+        """unregister Configlet"""\n \n     def unregisterApplication(appId):  # NOQA\n-        """ unregister Application with all configlets """\n+        """unregister Application with all configlets"""\n \n     def getGroupIds():  # NOQA\n-        """ list of the group ids """\n+        """list of the group ids"""\n \n     def getGroups():  # NOQA\n-        """ list of groups as dicts with id and title """\n+        """list of groups as dicts with id and title"""\n \n     def enumConfiglets(group=None):  # NOQA\n-        """ lists the Configlets of a group, returns them as dicts by\n-            calling .getAction() on each of them """\n+        """lists the Configlets of a group, returns them as dicts by\n+        calling .getAction() on each of them"""\n \n \n class IEditingSchema(Interface):\n \n     available_editors = schema.List(\n-        title=_(\'Available editors\'),\n-        description=_(\'Available editors in the portal.\'),\n-        default=[\'TinyMCE\', \'None\'],\n+        title=_("Available editors"),\n+        description=_("Available editors in the portal."),\n+        default=["TinyMCE", "None"],\n         value_type=schema.TextLine(),\n         missing_value=[],\n-        required=True\n+        required=True,\n     )\n \n     default_editor = schema.Choice(\n-        title=_(\'Default editor\'),\n+        title=_("Default editor"),\n         description=_(\n-            \'Select the default wysiwyg \'\n-            \'editor. Users will be able to choose their \'\n-            \'own or select to use the site default.\'),\n-        default=\'TinyMCE\',\n+            "Select the default wysiwyg "\n+            "editor. Users will be able to choose their "\n+            "own or select to use the site default."\n+        ),\n+        default="TinyMCE",\n         missing_value=set(),\n-        vocabulary=\'plone.app.vocabularies.AvailableEditors\',\n-        required=True)\n+        vocabulary="plone.app.vocabularies.AvailableEditors",\n+        required=True,\n+    )\n \n     ext_editor = schema.Bool(\n-        title=_(\'Enable External Editor feature\'),\n+        title=_("Enable External Editor feature"),\n         description=_(\n-            \'Determines if the external editor \'\n-            \'feature is enabled. This feature requires a \'\n-            \'special client-side application installed. The \'\n-            \'users also have to enable this in their \'\n-            \'preferences.\'),\n+            "Determines if the external editor "\n+            "feature is enabled. This feature requires a "\n+            "special client-side application installed. The "\n+            "users also have to enable this in their "\n+            "preferences."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     enable_link_integrity_checks = schema.Bool(\n-        title=_(\'Enable link integrity checks\'),\n+        title=_("Enable link integrity checks"),\n         description=_(\n-            \'Determines if the users should get \'\n-            \'warnings when they delete or move content that \'\n-            \'is linked from inside the site.\'),\n+            "Determines if the users should get "\n+            "warnings when they delete or move content that "\n+            "is linked from inside the site."\n+        ),\n         default=True,\n-        required=False)\n+        required=False,\n+    )\n \n     lock_on_ttw_edit = schema.Bool(\n-        title=_(\'Enable locking for through-the-web edits\'),\n+        title=_("Enable locking for through-the-web edits"),\n         description=_(\n-            \'Disabling locking here will only \'\n-            \'affect users editing content through the \'\n-            \'Plone web UI.  Content edited via WebDAV \'\n-            \'clients will still be subject to locking.\'),\n+            "Disabling locking here will only "\n+            "affect users editing content through the "\n+            "Plone web UI.  Content edited via WebDAV "\n+            "clients will still be subject to locking."\n+        ),\n         default=True,\n-        required=False)\n+        required=False,\n+    )\n \n     subjects_of_navigation_root = schema.Bool(\n-        title=_(\'Limit tags/keywords to the current navigation root\'),\n+        title=_("Limit tags/keywords to the current navigation root"),\n         description=_(\n-            \'Limit tags aka keywords vocabulary used for Tags field and \'\n-            \'in searches to the terms used inside the subtree of the current \'\n+            "Limit tags aka keywords vocabulary used for Tags field and "\n+            "in searches to the terms used inside the subtree of the current "\n             "navigation root. This can be used together with Plone\'s "\n-            \'multilingual extension plone.app.multilingual to only offer \'\n-            \'keywords of the current selected language. Other addons may \'\n-            \'utilize this feature for its specific purposes.\'),\n+            "multilingual extension plone.app.multilingual to only offer "\n+            "keywords of the current selected language. Other addons may "\n+            "utilize this feature for its specific purposes."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n \n class ITagAttrPair(Interface):\n-    tags = schema.TextLine(title=\'tags\')\n-    attributes = schema.TextLine(title=\'attributes\')\n+    tags = schema.TextLine(title="tags")\n+    attributes = schema.TextLine(title="attributes")\n \n \n @implementer(ITagAttrPair)\n class TagAttrPair:\n-\n-    def __init__(self, tags=\'\', attributes=\'\'):\n+    def __init__(self, tags="", attributes=""):\n         self.tags = tags\n         self.attributes = attributes\n \n \n class IFilterSchema(Interface):\n-    """Combined schema for the adapter lookup.\n-    """\n+    """Combined schema for the adapter lookup."""\n \n     # class IFilterTagsSchema(Interface):\n \n     disable_filtering = schema.Bool(\n-        title=_(\'Disable HTML filtering\'),\n-        description=_(\'Warning: disabling this can be dangerous. \'\n-                      \'Only disable if you know what you are doing.\'),\n+        title=_("Disable HTML filtering"),\n+        description=_(\n+            "Warning: disabling this can be dangerous. "\n+            "Only disable if you know what you are doing."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     nasty_tags = schema.List(\n-        title=_(\'Nasty tags\'),\n-        description=_(\'These tags and their content are completely blocked \'\n-                      \'when a page is saved or rendered. They are only deleted\'\n-                      \' if they are not marked as valid_tags\'),\n-        default=[\'style\', \'object\', \'embed\', \'applet\', \'script\', \'meta\'],\n+        title=_("Nasty tags"),\n+        description=_(\n+            "These tags and their content are completely blocked "\n+            "when a page is saved or rendered. They are only deleted"\n+            " if they are not marked as valid_tags"\n+        ),\n+        default=["style", "object", "embed", "applet", "script", "meta"],\n         value_type=schema.TextLine(),\n         missing_value=[],\n-        required=False)\n+        required=False,\n+    )\n \n     valid_tags = schema.List(\n-        title=_(\'Valid tags\'),\n-        description=_(\'A list of valid tags which will be not filtered out.\'),\n+        title=_("Valid tags"),\n+        description=_("A list of valid tags which will be not filtered out."),\n         default=[\n-            \'a\',\n-            \'abbr\',\n-            \'acronym\',\n-            \'address\',\n-            \'article\',\n-            \'aside\',\n-            \'audio\',\n-            \'b\',\n-            \'bdo\',\n-            \'big\',\n-            \'blockquote\',\n-            \'body\',\n-            \'br\',\n-            \'canvas\',\n-            \'caption\',\n-            \'cite\',\n-            \'code\',\n-            \'col\',\n-            \'colgroup\',\n-            \'command\',\n-            \'datalist\',\n-            \'dd\',\n-            \'del\',\n-            \'details\',\n-            \'dfn\',\n-            \'dialog\',\n-            \'div\',\n-            \'dl\',\n-            \'dt\',\n-            \'em\',\n-            \'figure\',\n-            \'figcaption\',\n-            \'footer\',\n-            \'h1\',\n-            \'h2\',\n-            \'h3\',\n-            \'h4\',\n-            \'h5\',\n-            \'h6\',\n-            \'head\',\n-            \'header\',\n-            \'hgroup\',\n-            \'hr\',\n-            \'html\',\n-            \'i\',\n-            \'iframe\',\n-            \'img\',\n-            \'ins\',\n-            \'kbd\',\n-            \'keygen\',\n-            \'li\',\n-            \'map\',\n-            \'mark\',\n-            \'meter\',\n-            \'nav\',\n-            \'ol\',\n-            \'output\',\n-            \'p\',\n-            \'pre\',\n-            \'progress\',\n-            \'q\',\n-            \'rp\',\n-            \'rt\',\n-            \'ruby\',\n-            \'samp\',\n-            \'section\',\n-            \'small\',\n-            \'source\',\n-            \'span\',\n-            \'strong\',\n-            \'sub\',\n-            \'sup\',\n-            \'table\',\n-            \'tbody\',\n-            \'td\',\n-            \'tfoot\',\n-            \'th\',\n-            \'thead\',\n-            \'time\',\n-            \'title\',\n-            \'tr\',\n-            \'tt\',\n-            \'u\',\n-            \'ul\',\n-            \'var\',\n-            \'video\',\n+            "a",\n+            "abbr",\n+            "acronym",\n+            "address",\n+            "article",\n+            "aside",\n+            "audio",\n+            "b",\n+            "bdo",\n+            "big",\n+            "blockquote",\n+            "body",\n+            "br",\n+            "canvas",\n+            "caption",\n+            "cite",\n+            "code",\n+            "col",\n+            "colgroup",\n+            "command",\n+            "datalist",\n+            "dd",\n+            "del",\n+            "details",\n+            "dfn",\n+            "dialog",\n+            "div",\n+            "dl",\n+            "dt",\n+            "em",\n+            "figure",\n+            "figcaption",\n+            "footer",\n+            "h1",\n+            "h2",\n+            "h3",\n+            "h4",\n+            "h5",\n+            "h6",\n+            "head",\n+            "header",\n+            "hgroup",\n+            "hr",\n+            "html",\n+            "i",\n+            "iframe",\n+            "img",\n+            "ins",\n+            "kbd",\n+            "keygen",\n+            "li",\n+            "map",\n+            "mark",\n+            "meter",\n+            "nav",\n+            "ol",\n+            "output",\n+            "p",\n+            "pre",\n+            "progress",\n+            "q",\n+            "rp",\n+            "rt",\n+            "ruby",\n+            "samp",\n+            "section",\n+            "small",\n+            "source",\n+            "span",\n+            "strong",\n+            "sub",\n+            "sup",\n+            "table",\n+            "tbody",\n+            "td",\n+            "tfoot",\n+            "th",\n+            "thead",\n+            "time",\n+            "title",\n+            "tr",\n+            "tt",\n+            "u",\n+            "ul",\n+            "var",\n+            "video",\n         ],\n         value_type=schema.TextLine(),\n         missing_value=[],\n-        required=False)\n+        required=False,\n+    )\n \n     custom_attributes = schema.List(\n-        title=_(\'Custom attributes\'),\n-        description=_(\'These attributes are additionally allowed.\'),\n-        default=[\'style\', \'controls\', \'poster\', \'autoplay\'],\n+        title=_("Custom attributes"),\n+        description=_("These attributes are additionally allowed."),\n+        default=["style", "controls", "poster", "autoplay"],\n         value_type=schema.TextLine(),\n         missing_value=[],\n-        required=False)\n+        required=False,\n+    )\n \n \n class ITinyMCELayoutSchema(Interface):\n     """This interface defines the layout properties."""\n \n     resizing = schema.Bool(\n-        title=_(\'Enable resizing the editor window.\'),\n-        description=_(\'This option gives you the ability to enable/disable \'\n-                      \'resizing the editor window. \'),\n+        title=_("Enable resizing the editor window."),\n+        description=_(\n+            "This option gives you the ability to enable/disable "\n+            "resizing the editor window. "\n+        ),\n         default=True,\n-        required=False)\n+        required=False,\n+    )\n \n     autoresize = schema.Bool(\n-        title=_(\'Enable auto resizing of the editor window.\'),\n-        description=_(\'This option gives you the ability to enable/disable \'\n-                      \'auto resizing the editor window depending \'\n-                      \'on the content.\'),\n+        title=_("Enable auto resizing of the editor window."),\n+        description=_(\n+            "This option gives you the ability to enable/disable "\n+            "auto resizing the editor window depending "\n+            "on the content."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     # TODO: add validation to assert % and px in the value\n     editor_width = schema.TextLine(\n-        title=_(\'Editor width\'),\n-        description=_(\'This option gives you the ability to specify the \'\n-                      \'width of the editor (like 100% or 400px).\'),\n+        title=_("Editor width"),\n+        description=_(\n+            "This option gives you the ability to specify the "\n+            "width of the editor (like 100% or 400px)."\n+        ),\n         default=None,\n-        required=False)\n+        required=False,\n+    )\n \n     # TODO: add validation to assert % and px in the value\n     editor_height = schema.TextLine(\n-        title=_(\'Editor height\'),\n-        description=_(\'This option gives you the ability to specify the \'\n-                      \'height of the editor in pixels. \'\n-                      \'If auto resize is enabled this value is used \'\n-                      \'as minimum height.\'),\n+        title=_("Editor height"),\n+        description=_(\n+            "This option gives you the ability to specify the "\n+            "height of the editor in pixels. "\n+            "If auto resize is enabled this value is used "\n+            "as minimum height."\n+        ),\n         default=None,\n-        required=False)\n+        required=False,\n+    )\n \n     content_css = schema.List(\n-        title=_(\'Choose the CSS used in WYSIWYG Editor Area\'),\n-        description=_(\'This option enables you to specify a custom CSS file \'\n-                      \'that provides content CSS. \'\n-                      \'This CSS file is the one used within the editor \'\n-                      \'(the editable area). In addition to what is listed, \'\n-                      \'here the plone bundle CSS and diazo themes using the \'\n-                      \'tinymce-content-css setting are also added.\'),\n+        title=_("Choose the CSS used in WYSIWYG Editor Area"),\n+        description=_(\n+            "This option enables you to specify a custom CSS file "\n+            "that provides content CSS. "\n+            "This CSS file is the one used within the editor "\n+            "(the editable area). In addition to what is listed, "\n+            "here the plone bundle CSS and diazo themes using the "\n+            "tinymce-content-css setting are also added."\n+        ),\n         value_type=schema.TextLine(),\n         missing_value=[],\n         default=[\n-            \'++plone++static/components/tinymce/\'\n-            \'skins/lightgray/content.min.css\'\n+            "++plone++static/components/tinymce/" "skins/lightgray/content.min.css"\n         ],\n-        required=False)\n+        required=False,\n+    )\n \n     header_styles = schema.List(\n-        title=_(\'Header styles\'),\n-        description=_(\'Name|tag\'),\n+        title=_("Header styles"),\n+        description=_("Name|tag"),\n         value_type=schema.TextLine(),\n         missing_value=[],\n         default=[\n-            \'Header 1|h1\',\n-            \'Header 2|h2\',\n-            \'Header 3|h3\',\n-            \'Header 4|h4\',\n-            \'Header 5|h5\',\n-            \'Header 6|h6\'\n-        ])\n+            "Header 1|h1",\n+            "Header 2|h2",\n+            "Header 3|h3",\n+            "Header 4|h4",\n+            "Header 5|h5",\n+            "Header 6|h6",\n+        ],\n+    )\n \n     inline_styles = schema.List(\n-        title=_(\'Inline styles\'),\n-        description=_(\'Name|format|icon\'),\n+        title=_("Inline styles"),\n+        description=_("Name|format|icon"),\n         value_type=schema.TextLine(),\n         missing_value=[],\n         default=[\n-            \'Bold|bold|bold\',\n-            \'Italic|italic|italic\',\n-            \'Underline|underline|underline\',\n-            \'Strikethrough|strikethrough|strikethrough\',\n-            \'Superscript|superscript|superscript\',\n-            \'Subscript|subscript|subscript\',\n-            \'Code|code|code\'])\n+            "Bold|bold|bold",\n+            "Italic|italic|italic",\n+            "Underline|underline|underline",\n+            "Strikethrough|strikethrough|strikethrough",\n+            "Superscript|superscript|superscript",\n+            "Subscript|subscript|subscript",\n+            "Code|code|code",\n+        ],\n+    )\n \n     block_styles = schema.List(\n-        title=_(\'Block styles\'),\n-        description=_(\'Name|format\'),\n+        title=_("Block styles"),\n+        description=_("Name|format"),\n         value_type=schema.TextLine(),\n         missing_value=[],\n-        default=[\n-            \'Paragraph|p\',\n-            \'Blockquote|blockquote\',\n-            \'Div|div\',\n-            \'Pre|pre\'])\n+        default=["Paragraph|p", "Blockquote|blockquote", "Div|div", "Pre|pre"],\n+    )\n \n     alignment_styles = schema.List(\n-        title=_(\'Alignment styles\'),\n-        description=_(\'Name|format|icon\'),\n+        title=_("Alignment styles"),\n+        description=_("Name|format|icon"),\n         value_type=schema.TextLine(),\n         missing_value=[],\n         default=[\n-            \'Left|alignleft|alignleft\',\n-            \'Center|aligncenter|aligncenter\',\n-            \'Right|alignright|alignright\',\n-            \'Justify|alignjustify|alignjustify\'])\n+            "Left|alignleft|alignleft",\n+            "Center|aligncenter|aligncenter",\n+            "Right|alignright|alignright",\n+            "Justify|alignjustify|alignjustify",\n+        ],\n+    )\n \n     table_styles = schema.List(\n-        title=_(\'Table styles\'),\n-        description=_(\'Name|class\'),\n+        title=_("Table styles"),\n+        description=_("Name|class"),\n         value_type=schema.TextLine(),\n         missing_value=[],\n-        default=[\n-            \'Listing|listing\',\n-            \'Invisible Grid|invisible-grid\'\n-        ])\n+        default=["Listing|listing", "Invisible Grid|invisible-grid"],\n+    )\n \n     formats = schema.Text(\n-        title=_(\'Formats\'),\n+        title=_("Formats"),\n         description=_(\n-            \'Enter a JSON-formatted style format configuration. \'\n-            \'A format is for example the style that get applied when \'\n-            \'you press the bold button inside the editor. \'\n-            \'See https://www.tinymce.com/docs/configure/content-formatting/#formats\'),  # NOQA: E501\n+            "Enter a JSON-formatted style format configuration. "\n+            "A format is for example the style that get applied when "\n+            "you press the bold button inside the editor. "\n+            "See https://www.tinymce.com/docs/configure/content-formatting/#formats"\n+        ),  # NOQA: E501\n         constraint=validate_json,\n-        default=dump_json_to_text({\n-            \'discreet\': {\'inline\': \'span\', \'classes\': \'discreet\'},\n-            \'clearfix\': {\'block\': \'div\', \'classes\': \'clearfix\'}\n-        }),\n+        default=dump_json_to_text(\n+            {\n+                "discreet": {"inline": "span", "classes": "discreet"},\n+                "clearfix": {"block": "div", "classes": "clearfix"},\n+                "alignleft": {\n+                    "selector": "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img,audio,video,picture",\n+                    "classes": "text-start",\n+                },\n+                "aligncenter": {\n+                    "selector": "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img,audio,video,picture",\n+                    "classes": "text-center",\n+                },\n+                "alignright": {\n+                    "selector": "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img,audio,video,picture",\n+                    "classes": "text-end",\n+                },\n+                "alignjustify": {\n+                    "selector": "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img,audio,video,picture",\n+                    "classes": "text-justify",\n+                },\n+            }\n+        ),\n         required=True,\n     )\n \n@@ -434,136 +496,168 @@ class ITinyMCEPluginSchema(Interface):\n     """This interface defines the toolbar properties."""\n \n     plugins = schema.List(\n-        title=_(\'label_tinymce_plugins\', default=\'Editor plugins\'),\n-        description=_(\'help_tinymce_plugins\', default=(\n-            \'Select plugins to include with tinymce\')),\n-        value_type=schema.Choice(vocabulary=SimpleVocabulary([\n-            SimpleTerm(\'advlist\', \'advlist\', \'advlist\'),\n-            SimpleTerm(\'anchor\', \'anchor\', \'anchor\'),\n-            SimpleTerm(\'autosave\', \'autosave\', \'autosave\'),\n-            SimpleTerm(\'charmap\', \'charmap\', \'charmap\'),\n-            SimpleTerm(\'code\', \'code\', \'code\'),\n-            SimpleTerm(\'colorpicker\', \'colorpicker\', \'colorpicker\'),\n-            SimpleTerm(\'contextmenu\', \'contextmenu\', \'contextmenu\'),\n-            SimpleTerm(\'directionality\', \'directionality\', \'directionality\'),\n-            SimpleTerm(\'emoticons\', \'emoticons\', \'emoticons\'),\n-            SimpleTerm(\'fullpage\', \'fullpage\', \'fullpage\'),\n-            SimpleTerm(\'fullscreen\', \'fullscreen\', \'fullscreen\'),\n-            SimpleTerm(\'hr\', \'hr\', \'hr\'),\n-            SimpleTerm(\'insertdatetime\', \'insertdatetime\', \'insertdatetime\'),\n-            SimpleTerm(\'layer\', \'layer\', \'layer\'),\n-            SimpleTerm(\'lists\', \'lists\', \'lists\'),\n-            SimpleTerm(\'media\', \'media\', \'media\'),\n-            SimpleTerm(\'nonbreaking\', \'nonbreaking\', \'nonbreaking\'),\n-            SimpleTerm(\'noneditable\', \'noneditable\', \'noneditable\'),\n-            SimpleTerm(\'pagebreak\', \'pagebreak\', \'pagebreak\'),\n-            SimpleTerm(\'paste\', \'paste\', \'paste\'),\n-            SimpleTerm(\'preview\', \'preview\', \'preview\'),\n-            SimpleTerm(\'print\', \'print\', \'print\'),\n-            # XXX disable save button since it is not implemeneted\n-            # SimpleTerm(\'save\', \'save\', u\'save\'),\n-            SimpleTerm(\'searchreplace\', \'searchreplace\', \'searchreplace\'),\n-            SimpleTerm(\'tabfocus\', \'tabfocus\', \'tabfocus\'),\n-            SimpleTerm(\'table\', \'table\', \'table\'),\n-            SimpleTerm(\'textcolor\', \'textcolor\', \'textcolor\'),\n-            SimpleTerm(\'textpattern\', \'textpattern\', \'textpattern\'),\n-            SimpleTerm(\'template\', \'template\', \'template\'),\n-            SimpleTerm(\'visualblocks\', \'visualblocks\', \'visualblocks\'),\n-            SimpleTerm(\'visualchars\', \'visualchars\', \'visualchars\'),\n-            SimpleTerm(\'wordcount\', \'wordcount\', \'wordcount\')\n-        ])),\n-        default=[\'advlist\', \'fullscreen\', \'hr\', \'lists\', \'media\',\n-                 \'nonbreaking\', \'noneditable\', \'pagebreak\', \'paste\', \'preview\',\n-                 \'print\', \'searchreplace\', \'tabfocus\', \'table\',\n-                 \'visualchars\', \'wordcount\', \'code\'],\n+        title=_("label_tinymce_plugins", default="Editor plugins"),\n+        description=_(\n+            "help_tinymce_plugins", default=("Select plugins to include with tinymce")\n+        ),\n+        value_type=schema.Choice(\n+            vocabulary=SimpleVocabulary(\n+                [\n+                    SimpleTerm("advlist", "advlist", "advlist"),\n+                    SimpleTerm("anchor", "anchor", "anchor"),\n+                    SimpleTerm("autosave", "autosave", "autosave"),\n+                    SimpleTerm("charmap", "charmap", "charmap"),\n+                    SimpleTerm("code", "code", "code"),\n+                    SimpleTerm("colorpicker", "colorpicker", "colorpicker"),\n+                    SimpleTerm("contextmenu", "contextmenu", "contextmenu"),\n+                    SimpleTerm("directionality", "directionality", "directionality"),\n+                    SimpleTerm("emoticons", "emoticons", "emoticons"),\n+                    SimpleTerm("fullpage", "fullpage", "fullpage"),\n+                    SimpleTerm("fullscreen", "fullscreen", "fullscreen"),\n+                    SimpleTerm("hr", "hr", "hr"),\n+                    SimpleTerm("insertdatetime", "insertdatetime", "insertdatetime"),\n+                    SimpleTerm("layer", "layer", "layer"),\n+                    SimpleTerm("lists", "lists", "lists"),\n+                    SimpleTerm("media", "media", "media"),\n+                    SimpleTerm("nonbreaking", "nonbreaking", "nonbreaking"),\n+                    SimpleTerm("noneditable", "noneditable", "noneditable"),\n+                    SimpleTerm("pagebreak", "pagebreak", "pagebreak"),\n+                    SimpleTerm("paste", "paste", "paste"),\n+                    SimpleTerm("preview", "preview", "preview"),\n+                    SimpleTerm("print", "print", "print"),\n+                    # XXX disable save button since it is not implemeneted\n+                    # SimpleTerm(\'save\', \'save\', u\'save\'),\n+                    SimpleTerm("searchreplace", "searchreplace", "searchreplace"),\n+                    SimpleTerm("tabfocus", "tabfocus", "tabfocus"),\n+                    SimpleTerm("table", "table", "table"),\n+                    SimpleTerm("textcolor", "textcolor", "textcolor"),\n+                    SimpleTerm("textpattern", "textpattern", "textpattern"),\n+                    SimpleTerm("template", "template", "template"),\n+                    SimpleTerm("visualblocks", "visualblocks", "visualblocks"),\n+                    SimpleTerm("visualchars", "visualchars", "visualchars"),\n+                    SimpleTerm("wordcount", "wordcount", "wordcount"),\n+                ]\n+            )\n+        ),\n+        default=[\n+            "advlist",\n+            "fullscreen",\n+            "hr",\n+            "lists",\n+            "media",\n+            "nonbreaking",\n+            "noneditable",\n+            "pagebreak",\n+            "paste",\n+            "preview",\n+            "print",\n+            "searchreplace",\n+            "tabfocus",\n+            "table",\n+            "visualchars",\n+            "wordcount",\n+            "code",\n+        ],\n         missing_value=[],\n-        required=False)\n+        required=False,\n+    )\n \n     menubar = schema.List(\n-        title=_(\'label_tinymce_menubar\', default=\'Menubar\'),\n-        description=_(\'help_tinymce_menubar\', default=(\n-            \'Enter what items you would like in the menu bar.\')),\n+        title=_("label_tinymce_menubar", default="Menubar"),\n+        description=_(\n+            "help_tinymce_menubar",\n+            default=("Enter what items you would like in the menu bar."),\n+        ),\n         required=True,\n         value_type=schema.TextLine(),\n         missing_value=[],\n-        default=[\n-            \'edit\', \'table\', \'format\',\n-            \'tools\', \'view\', \'insert\'])\n+        default=["edit", "table", "format", "tools", "view", "insert"],\n+    )\n \n     menu = schema.Text(\n-        title=_(\'label_tinymce_menu\', \'Menu\'),\n-        description=_(\'hint_tinymce_menu\',\n-                      default=\'JSON formatted Menu configuration.\'),\n+        title=_("label_tinymce_menu", "Menu"),\n+        description=_(\n+            "hint_tinymce_menu", default="JSON formatted Menu configuration."\n+        ),\n         constraint=validate_json,\n-        default=dump_json_to_text({\n-            \'edit\': {\n-                \'title\': \'Edit\',\n-                \'items\': \'undo redo | cut copy paste pastetext | \'\n-                         \'searchreplace textpattern selectall | textcolor\'},\n-            \'insert\': {\'title\': \'Insert\', \'items\': \'link media | template hr\'},\n-            \'view\': {\n-                \'title\': \'View\',\n-                \'items\': \'visualaid visualchars visualblocks preview \'\n-                         \'fullpage fullscreen code\',\n-            },\n-            \'format\': {\n-                \'title\': \'Format\',\n-                \'items\': \'bold italic underline strikethrough \'\n-                         \'superscript subscript | formats | removeformat\'\n-            },\n-            \'table\': {\n-                \'title\': \'Table\',\n-                \'items\': \'inserttable tableprops deletetable | cell row column\'\n-            },\n-            \'tools\': {\n-                \'title\': \'Tools\',\n-                \'items\': \'spellchecker charmap emoticons insertdatetime \'\n-                         \'layer\'\n+        default=dump_json_to_text(\n+            {\n+                "edit": {\n+                    "title": "Edit",\n+                    "items": "undo redo | cut copy paste pastetext | "\n+                    "searchreplace textpattern selectall | textcolor",\n+                },\n+                "insert": {"title": "Insert", "items": "link media | template hr"},\n+                "view": {\n+                    "title": "View",\n+                    "items": "visualaid visualchars visualblocks preview "\n+                    "fullpage fullscreen code",\n+                },\n+                "format": {\n+                    "title": "Format",\n+                    "items": "bold italic underline strikethrough "\n+                    "superscript subscript | formats | removeformat",\n+                },\n+                "table": {\n+                    "title": "Table",\n+                    "items": "inserttable tableprops deletetable | cell row column",\n+                },\n+                "tools": {\n+                    "title": "Tools",\n+                    "items": "spellchecker charmap emoticons insertdatetime " "layer",\n+                },\n             }\n-        })\n+        ),\n     )\n \n     templates = schema.Text(\n-        title=_(\'label_tinymce_templates\', default=\'Templates\'),\n+        title=_("label_tinymce_templates", default="Templates"),\n         description=_(\n-            \'help_tinymce_templates\',\n+            "help_tinymce_templates",\n             default=(\n-                \'Enter the list of templates in json format \'\n-                \'https://www.tinymce.com/docs/plugins/template/\'\n-            )\n+                "Enter the list of templates in json format "\n+                "https://www.tinymce.com/docs/plugins/template/"\n+            ),\n         ),\n         required=False,\n         constraint=validate_json,\n-        default=dump_json_to_text({}))\n+        default=dump_json_to_text({}),\n+    )\n \n     toolbar = schema.Text(\n-        title=_(\'label_tinymce_toolbar\', default=\'Toolbar\'),\n-        description=_(\'help_tinymce_toolbar\', default=(\n-            \'Enter how you would like the toolbar items to list.\')),\n+        title=_("label_tinymce_toolbar", default="Toolbar"),\n+        description=_(\n+            "help_tinymce_toolbar",\n+            default=("Enter how you would like the toolbar items to list."),\n+        ),\n         required=True,\n-        default=\'ltr rtl | undo redo | styleselect | bold italic | \'\n-                \'alignleft aligncenter alignright alignjustify | \'\n-                \'bullist numlist outdent indent | \'\n-                \'unlink plonelink ploneimage\')\n+        default="ltr rtl | undo redo | styleselect | bold italic | "\n+        "alignleft aligncenter alignright alignjustify | "\n+        "bullist numlist outdent indent | "\n+        "unlink plonelink ploneimage",\n+    )\n \n     custom_plugins = schema.List(\n-        title=_(\'Custom plugins\'),\n-        description=_(\'Enter a list of custom plugins which will be loaded \'\n-                      \'in the editor. Format is \'\n-                      \'pluginname|location, one per line.\'),\n+        title=_("Custom plugins"),\n+        description=_(\n+            "Enter a list of custom plugins which will be loaded "\n+            "in the editor. Format is "\n+            "pluginname|location, one per line."\n+        ),\n         required=False,\n         value_type=schema.TextLine(),\n         missing_value=[],\n-        default=[])\n+        default=[],\n+    )\n \n     custom_buttons = schema.List(\n-        title=_(\'Custom buttons\'),\n-        description=_(\n-            \'Enter a list of custom buttons which will be added to toolbar\'),\n+        title=_("Custom buttons"),\n+        description=_("Enter a list of custom buttons which will be added to toolbar"),\n         required=False,\n         value_type=schema.TextLine(),\n         missing_value=[],\n-        default=[])\n+        default=[],\n+    )\n \n \n ITinyMCELibrariesSchema = ITinyMCEPluginSchema  # bw compat\n@@ -573,69 +667,75 @@ class ITinyMCESpellCheckerSchema(Interface):\n     """This interface defines the libraries properties."""\n \n     libraries_spellchecker_choice = schema.Choice(\n-        title=_(\'Spellchecker plugin to use\'),\n-        description=_(\'This option allows you to choose the spellchecker for \'\n-                      \'TinyMCE.\'),\n+        title=_("Spellchecker plugin to use"),\n+        description=_(\n+            "This option allows you to choose the spellchecker for " "TinyMCE."\n+        ),\n         missing_value=set(),\n-        vocabulary=SimpleVocabulary([\n-            SimpleTerm(\'browser\', \'browser\',\n-                       _(\'Default browser spellchecker\')),\n-            SimpleTerm(\'AtD\', \'AtD\',\n-                       _(\'After the deadline (FLOSS)\')),\n-        ]),\n-        default=\'browser\',\n-        required=False)\n+        vocabulary=SimpleVocabulary(\n+            [\n+                SimpleTerm("browser", "browser", _("Default browser spellchecker")),\n+                SimpleTerm("AtD", "AtD", _("After the deadline (FLOSS)")),\n+            ]\n+        ),\n+        default="browser",\n+        required=False,\n+    )\n \n     libraries_atd_ignore_strings = schema.List(\n-        title=_(\'AtD ignore strings\'),\n+        title=_("AtD ignore strings"),\n         description=_(\n-            \'label_atd_ignore_strings\',\n+            "label_atd_ignore_strings",\n             default=\'A list of strings which the "After the Deadline" \'\n-                    \'spellchecker should ignore. \'\n-                    \'Note: This option is only applicable when the \'\n-                    \'appropriate spellchecker has been chosen above.\'),\n-        default=[\n-            \'Zope\',\n-            \'Plone\',\n-            \'TinyMCE\'],\n+            "spellchecker should ignore. "\n+            "Note: This option is only applicable when the "\n+            "appropriate spellchecker has been chosen above.",\n+        ),\n+        default=["Zope", "Plone", "TinyMCE"],\n         value_type=schema.TextLine(),\n         missing_value=[],\n-        required=False)\n+        required=False,\n+    )\n \n     libraries_atd_show_types = schema.List(\n-        title=_(\'AtD error types to show\'),\n+        title=_("AtD error types to show"),\n         description=_(\n-            \'help_atderrortypes_to_show\',\n-            default=\'A list of error types which the \'\n-                    \'"After the Deadline" spellchecker should check for. \'\n-                    \'By default, all the available error type will be \'\n-                    \'listed here.\'),\n+            "help_atderrortypes_to_show",\n+            default="A list of error types which the "\n+            \'"After the Deadline" spellchecker should check for. \'\n+            "By default, all the available error type will be "\n+            "listed here.",\n+        ),\n         value_type=schema.TextLine(),\n         default=[\n-            \'Bias Language\',\n-            \'Cliches\',\n-            \'Complex Expression\',\n-            \'Diacritical Marks\',\n-            \'Double Negatives\',\n-            \'Hidden Verbs\',\n-            \'Jargon Language\',\n-            \'Passive voice\',\n-            \'Phrases to Avoid\',\n-            \'Redundant Expression\'],\n+            "Bias Language",\n+            "Cliches",\n+            "Complex Expression",\n+            "Diacritical Marks",\n+            "Double Negatives",\n+            "Hidden Verbs",\n+            "Jargon Language",\n+            "Passive voice",\n+            "Phrases to Avoid",\n+            "Redundant Expression",\n+        ],\n         missing_value=[],\n-        required=False)\n+        required=False,\n+    )\n \n     libraries_atd_service_url = schema.TextLine(\n-        title=_(\'AtD service URL\'),\n+        title=_("AtD service URL"),\n         description=_(\n-            \'help_atd_service_url\',\n+            "help_atd_service_url",\n             default=\'The URL of the "After the Deadline" grammar and spell \'\n-                    \'checking server. \'\n-                    \'The default value is the public server, \'\n-                    \'but ideally you should download and install your own \'\n-                    \'and specify its address here.\'),\n+            "checking server. "\n+            "The default value is the public server, "\n+            "but ideally you should download and install your own "\n+            "and specify its address here.",\n+        ),\n         required=True,\n-        default=\'service.afterthedeadline.com\',)\n+        default="service.afterthedeadline.com",\n+    )\n \n \n class ITinyMCEResourceTypesSchema(Interface):\n@@ -651,52 +751,60 @@ class ITinyMCEResourceTypesSchema(Interface):\n     #    required=False)\n \n     contains_objects = schema.List(\n-        title=_(\'Contains objects\'),\n-        description=_(\'Enter a list of content types which can contain other \'\n-                      \'objects. Format is one contenttype per line.\'),\n+        title=_("Contains objects"),\n+        description=_(\n+            "Enter a list of content types which can contain other "\n+            "objects. Format is one contenttype per line."\n+        ),\n         value_type=schema.TextLine(),\n-        default=[\n-            \'Folder\',\n-            \'Large Plone Folder\',\n-            \'Plone Site\'],\n+        default=["Folder", "Large Plone Folder", "Plone Site"],\n         missing_value=[],\n-        required=False)\n+        required=False,\n+    )\n \n     image_objects = schema.List(\n-        title=_(\'Image objects\'),\n-        description=_(\'Enter a list of content types which can be used as \'\n-                      \'images. Format is one contenttype per line.\'),\n-        default=[\'Image\'],\n+        title=_("Image objects"),\n+        description=_(\n+            "Enter a list of content types which can be used as "\n+            "images. Format is one contenttype per line."\n+        ),\n+        default=["Image"],\n         value_type=schema.TextLine(),\n         missing_value=[],\n-        required=False)\n+        required=False,\n+    )\n \n     entity_encoding = schema.Choice(\n-        title=_(\'Entity encoding\'),\n-        description=_(\n-            \'This option controls how entities/characters get processed. \'\n-            \'Named: Characters will be converted into named entities \'\n-            \'based on the entities option. \'\n-            \'Numeric: Characters will be converted into numeric entities. \'\n-            \'Raw: All characters will be stored in non-entity form \'\n-            \'except these XML default entities: amp lt gt quot\'),\n+        title=_("Entity encoding"),\n+        description=_(\n+            "This option controls how entities/characters get processed. "\n+            "Named: Characters will be converted into named entities "\n+            "based on the entities option. "\n+            "Numeric: Characters will be converted into numeric entities. "\n+            "Raw: All characters will be stored in non-entity form "\n+            "except these XML default entities: amp lt gt quot"\n+        ),\n         # missing_value=set(),\n         vocabulary=SimpleVocabulary(\n-            [SimpleTerm(\'named\', \'named\', _(\'Named\')),\n-             SimpleTerm(\'numeric\', \'numeric\', _(\'Numeric\')),\n-             SimpleTerm(\'raw\', \'raw\', _(\'Raw\'))]),\n+            [\n+                SimpleTerm("named", "named", _("Named")),\n+                SimpleTerm("numeric", "numeric", _("Numeric")),\n+                SimpleTerm("raw", "raw", _("Raw")),\n+            ]\n+        ),\n         default="raw",\n-        required=False)\n+        required=False,\n+    )\n \n \n class ITinyMCEAdvancedSchema(Interface):\n     """This interface defines the resource types properties."""\n \n     other_settings = schema.Text(\n-        title=_(\'label_tinymce_other_settings\', \'Other settings\'),\n+        title=_("label_tinymce_other_settings", "Other settings"),\n         description=_(\n-            \'hint_tinymce_other_settings\',\n-            default=\'Other TinyMCE configuration formatted as JSON.\'\n+            "hint_tinymce_other_settings",\n+            default="Other TinyMCE configuration formatted as JSON.",\n         ),\n         required=False,\n         constraint=validate_json,\n@@ -709,7 +817,7 @@ class ITinyMCESchema(\n     ITinyMCEPluginSchema,\n     ITinyMCESpellCheckerSchema,\n     ITinyMCEResourceTypesSchema,\n-    ITinyMCEAdvancedSchema\n+    ITinyMCEAdvancedSchema,\n ):\n     """TinyMCE Schema"""\n \n@@ -717,151 +825,142 @@ class ITinyMCESchema(\n class IMaintenanceSchema(Interface):\n \n     days = schema.Int(\n-        title=_(\'Days of object history to keep after packing\'),\n+        title=_("Days of object history to keep after packing"),\n         description=_(\n-            \'You should pack your database regularly. This number \'\n-            \'indicates how many days of undo history you want to \'\n-            \'keep. It is unrelated to versioning, so even if you \'\n-            \'pack the database, the history of the content changes \'\n-            \'will be kept. Recommended value is 7 days.\'\n+            "You should pack your database regularly. This number "\n+            "indicates how many days of undo history you want to "\n+            "keep. It is unrelated to versioning, so even if you "\n+            "pack the database, the history of the content changes "\n+            "will be kept. Recommended value is 7 days."\n         ),\n         default=7,\n         min=0,\n-        required=True\n+        required=True,\n     )\n \n \n class INavigationSchema(Interface):\n \n     navigation_depth = schema.Int(\n-        title=_(\'Navigation depth\'),\n-        description=_(\'Number of folder levels to show in the navigation.\'),\n+        title=_("Navigation depth"),\n+        description=_("Number of folder levels to show in the navigation."),\n         default=3,\n-        required=True\n+        required=True,\n     )\n \n     generate_tabs = schema.Bool(\n-        title=_(\'Automatically generate tabs\'),\n+        title=_("Automatically generate tabs"),\n         description=_(\n-            \'By default, all items created at the root level will \'\n-            \'appear as tabs. You can turn this off if you prefer manually \'\n-            \'constructing this part of the navigation.\'),\n+            "By default, all items created at the root level will "\n+            "appear as tabs. You can turn this off if you prefer manually "\n+            "constructing this part of the navigation."\n+        ),\n         default=True,\n-        required=False)\n+        required=False,\n+    )\n \n     nonfolderish_tabs = schema.Bool(\n-        title=_(\'Generate tabs for items other than folders.\'),\n+        title=_("Generate tabs for items other than folders."),\n         description=_(\n-            \'By default, any content item in the root of the portal will \'\n-            \'appear as a tab. If you turn this option off, only folders \'\n-            \'will be shown. This only has an effect if \\\'automatically \'\n-            \'generate tabs\\\' is enabled.\'),\n+            "By default, any content item in the root of the portal will "\n+            "appear as a tab. If you turn this option off, only folders "\n+            "will be shown. This only has an effect if \'automatically "\n+            "generate tabs\' is enabled."\n+        ),\n         default=True,\n-        required=False)\n+        required=False,\n+    )\n \n     sort_tabs_on = schema.Choice(\n-        title=_(\'Sort tabs on\'),\n-        description=_(\n-            \'Index used to sort the tabs\'\n-        ),\n+        title=_("Sort tabs on"),\n+        description=_("Index used to sort the tabs"),\n         required=True,\n-        default=\'getObjPositionInParent\',\n-        vocabulary=SimpleVocabulary([\n-            # there is no vocabulary of sortable indexes by now, so hard code\n-            # some options here\n-            SimpleTerm(\n-                \'getObjPositionInParent\',\n-                \'getObjPositionInParent\',\n-                _(\'Position in Parent\')\n-            ),\n-            SimpleTerm(\n-                \'sortable_title\',\n-                \'sortable_title\',\n-                _(\'Title\')\n-            ),\n-            SimpleTerm(\n-                \'getId\',\n-                \'getId\',\n-                _(\'Short Name (ID)\')\n-            ),\n-        ]),\n+        default="getObjPositionInParent",\n+        vocabulary=SimpleVocabulary(\n+            [\n+                # there is no vocabulary of sortable indexes by now, so hard code\n+                # some options here\n+                SimpleTerm(\n+                    "getObjPositionInParent",\n+                    "getObjPositionInParent",\n+                    _("Position in Parent"),\n+                ),\n+                SimpleTerm("sortable_title", "sortable_title", _("Title")),\n+                SimpleTerm("getId", "getId", _("Short Name (ID)")),\n+            ]\n+        ),\n     )\n     sort_tabs_reversed = schema.Bool(\n-        title=_(\'Reversed sort order for tabs.\'),\n-        description=_(\n-            \'Sort tabs in descending.\'),\n+        title=_("Reversed sort order for tabs."),\n+        description=_("Sort tabs in descending."),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     displayed_types = schema.Tuple(\n-        title=_(\'Displayed content types\'),\n+        title=_("Displayed content types"),\n         description=_(\n-            \'The content types that should be shown in the navigation and \'\n-            \'site map.\'),\n-        required=False,\n-        default=(\n-            \'Image\',\n-            \'File\',\n-            \'Link\',\n-            \'News Item\',\n-            \'Folder\',\n-            \'Document\',\n-            \'Event\'\n+            "The content types that should be shown in the navigation and " "site map."\n         ),\n+        required=False,\n+        default=("Image", "File", "Link", "News Item", "Folder", "Document", "Event"),\n         missing_value=(),\n         value_type=schema.Choice(\n-            source=\'plone.app.vocabularies.ReallyUserFriendlyTypes\'\n-        ))\n+            source="plone.app.vocabularies.ReallyUserFriendlyTypes"\n+        ),\n+    )\n \n     filter_on_workflow = schema.Bool(\n-        title=_(\'Filter on workflow state\'),\n+        title=_("Filter on workflow state"),\n         description=_(\n-            \'The workflow states that should be shown in the navigation \'\n-            \'and the site map.\'),\n+            "The workflow states that should be shown in the navigation "\n+            "and the site map."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     workflow_states_to_show = schema.Tuple(\n         required=False,\n         default=(),\n         missing_value=(),\n-        value_type=schema.Choice(\n-            source=\'plone.app.vocabularies.WorkflowStates\'))\n+        value_type=schema.Choice(source="plone.app.vocabularies.WorkflowStates"),\n+    )\n \n     show_excluded_items = schema.Bool(\n         title=_(\n-            \'Show items normally excluded from navigation if viewing their \'\n-            \'children.\'),\n+            "Show items normally excluded from navigation if viewing their " "children."\n+        ),\n         description=_(\n-            \'If an item has been excluded from navigation should it be \'\n-            \'shown in navigation when viewing content contained within it \'\n-            \'or within a subfolder.\'),\n+            "If an item has been excluded from navigation should it be "\n+            "shown in navigation when viewing content contained within it "\n+            "or within a subfolder."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     root = schema.TextLine(\n-        title=_(\n-            \'Root\'),\n+        title=_("Root"),\n         description=_(\n-            \'Path to be used as navigation root, relative to Plone site root.\'\n-            \'Starts with \\\'/\\\'\'\n+            "Path to be used as navigation root, relative to Plone site root."\n+            "Starts with \'/\'"\n         ),\n-        default=\'/\',\n-        required=True\n+        default="/",\n+        required=True,\n     )\n \n     sitemap_depth = schema.Int(\n-        title=_(\'Sitemap depth\'),\n-        description=_(\'Number of folder levels to show in the site map.\'),\n+        title=_("Sitemap depth"),\n+        description=_("Number of folder levels to show in the site map."),\n         default=3,\n-        required=True\n+        required=True,\n     )\n \n     parent_types_not_to_query = schema.List(\n-        title=_(\'Hide children of these types\'),\n-        description=_(\n-            \'Hide content inside the following types in Navigation.\'),\n-        default=[\'TempFolder\'],\n+        title=_("Hide children of these types"),\n+        description=_("Hide content inside the following types in Navigation."),\n+        default=["TempFolder"],\n         value_type=schema.TextLine(),\n         missing_value=(),\n         required=False,\n@@ -871,495 +970,552 @@ class INavigationSchema(Interface):\n class ISearchSchema(Interface):\n \n     enable_livesearch = schema.Bool(\n-        title=_(\'Enable LiveSearch\'),\n+        title=_("Enable LiveSearch"),\n         description=_(\n-            \'Enables the LiveSearch feature, which shows live \'\n-            \'results if the browser supports JavaScript.\'),\n+            "Enables the LiveSearch feature, which shows live "\n+            "results if the browser supports JavaScript."\n+        ),\n         default=True,\n-        required=False\n+        required=False,\n     )\n \n     types_not_searched = schema.Tuple(\n-        title=_(\'Define the types to be shown in the site and searched\'),\n+        title=_("Define the types to be shown in the site and searched"),\n         description=_(\n-            \'Define the types that should be searched and be \'\n-            \'available in the user facing part of the site. \'\n-            \'Note that if new content types are installed, they \'\n-            \'will be enabled by default unless explicitly turned \'\n-            \'off here or by the relevant installer.\'\n+            "Define the types that should be searched and be "\n+            "available in the user facing part of the site. "\n+            "Note that if new content types are installed, they "\n+            "will be enabled by default unless explicitly turned "\n+            "off here or by the relevant installer."\n         ),\n         required=False,\n         default=(\n-            \'Discussion Item\',\n-            \'Plone Site\',\n-            \'TempFolder\',\n+            "Discussion Item",\n+            "Plone Site",\n+            "TempFolder",\n         ),\n         missing_value=(),\n-        value_type=schema.Choice(\n-            source=\'plone.app.vocabularies.PortalTypes\'\n-        ),\n+        value_type=schema.Choice(source="plone.app.vocabularies.PortalTypes"),\n     )\n \n     search_results_description_length = schema.Int(\n-        title=_(\'Crop the item description in search result listings \'\n-                \'after a number of characters.\'),\n+        title=_(\n+            "Crop the item description in search result listings "\n+            "after a number of characters."\n+        ),\n         required=False,\n         default=160,\n     )\n \n     sort_on = schema.Choice(\n-        title=_(\'label_sort_on\', default=\'Sort on\'),\n-        description=_(\'Sort the default search on this index\'),\n-        vocabulary=SimpleVocabulary([\n-            SimpleTerm(\'relevance\', \'relevance\', _(\'relevance\')),\n-            SimpleTerm(\'Date\', \'Date\', _(\'date (newest first)\')),\n-            SimpleTerm(\'sortable_title\', \'sortable_title\',\n-                       _(\'alphabetically\'))]),\n-        default=\'relevance\',\n-        required=True\n+        title=_("label_sort_on", default="Sort on"),\n+        description=_("Sort the default search on this index"),\n+        vocabulary=SimpleVocabulary(\n+            [\n+                SimpleTerm("relevance", "relevance", _("relevance")),\n+                SimpleTerm("Date", "Date", _("date (newest first)")),\n+                SimpleTerm("sortable_title", "sortable_title", _("alphabetically")),\n+            ]\n+        ),\n+        default="relevance",\n+        required=True,\n     )\n \n \n class ISecuritySchema(Interface):\n \n     enable_self_reg = schema.Bool(\n-        title=_(\'Enable self-registration\'),\n+        title=_("Enable self-registration"),\n         description=_(\n-            \'Allows users to register themselves on the site. If \'\n-            \'not selected, only site managers can add new users.\'),\n+            "Allows users to register themselves on the site. If "\n+            "not selected, only site managers can add new users."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     enable_user_pwd_choice = schema.Bool(\n-        title=_(\'Let users select their own passwords\'),\n+        title=_("Let users select their own passwords"),\n         description=_(\n-            \'If not selected, a URL will be generated and \'\n-            \'e-mailed. Users are instructed to follow the link to \'\n-            \'reach a page where they can change their password and \'\n-            \'complete the registration process; this also verifies \'\n-            \'that they have entered a valid email address.\'),\n+            "If not selected, a URL will be generated and "\n+            "e-mailed. Users are instructed to follow the link to "\n+            "reach a page where they can change their password and "\n+            "complete the registration process; this also verifies "\n+            "that they have entered a valid email address."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     enable_user_folders = schema.Bool(\n-        title=_(\'Enable User Folders\'),\n+        title=_("Enable User Folders"),\n         description=_(\n-            \'If selected, home folders where users can create \'\n-            \'content will be created when they log in.\'),\n+            "If selected, home folders where users can create "\n+            "content will be created when they log in."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     allow_anon_views_about = schema.Bool(\n-        title=_(\'Allow anyone to view \\\'about\\\' information\'),\n+        title=_("Allow anyone to view \'about\' information"),\n         description=_(\n-            \'If not selected only logged-in users will be able to \'\n-            \'view information about who created an item and when it \'\n-            \'was modified.\'),\n+            "If not selected only logged-in users will be able to "\n+            "view information about who created an item and when it "\n+            "was modified."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     use_email_as_login = schema.Bool(\n-        title=_(\'Use email address as login name\'),\n-        description=_(\n-            \'Allows users to login with their email address instead \'\n-            \'of specifying a separate login name. This also updates \'\n-            \'the login name of existing users, which may take a \'\n-            \'while on large sites. The login name is saved as \'\n-            \'lower case, but to be userfriendly it does not matter \'\n-            \'which case you use to login. When duplicates are found, \'\n-            \'saving this form will fail. You can use the \'\n-            \'@@migrate-to-emaillogin page to show the duplicates.\'),\n+        title=_("Use email address as login name"),\n+        description=_(\n+            "Allows users to login with their email address instead "\n+            "of specifying a separate login name. This also updates "\n+            "the login name of existing users, which may take a "\n+            "while on large sites. The login name is saved as "\n+            "lower case, but to be userfriendly it does not matter "\n+            "which case you use to login. When duplicates are found, "\n+            "saving this form will fail. You can use the "\n+            "@@migrate-to-emaillogin page to show the duplicates."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     use_uuid_as_userid = schema.Bool(\n-        title=_(\'Use UUID user ids\'),\n+        title=_("Use UUID user ids"),\n         description=_(\n-            \'Use automatically generated UUIDs as user id for new users. \'\n-            \'When not turned on, the default is to use the same as the \'\n-            \'login name, or when using the email address as login name we \'\n-            \'generate a user id based on the fullname.\'),\n+            "Use automatically generated UUIDs as user id for new users. "\n+            "When not turned on, the default is to use the same as the "\n+            "login name, or when using the email address as login name we "\n+            "generate a user id based on the fullname."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     autologin_after_password_reset = schema.Bool(\n-        title=_(\'Login user after password reset\'),\n+        title=_("Login user after password reset"),\n         description=_(\n-            \'After successful password reset the user will be logged \'\n-            \'in automatically.\'),\n+            "After successful password reset the user will be logged "\n+            "in automatically."\n+        ),\n         default=True,\n-        required=False)\n+        required=False,\n+    )\n \n \n class ISiteSchema(Interface):\n \n     site_title = schema.TextLine(\n-        title=_(\'Site title\'),\n+        title=_("Site title"),\n         description=_(\n-            \'This shows up in the title bar of \'\n-            \'browsers and in syndication feeds.\'),\n-        default=\'Plone site\')\n+            "This shows up in the title bar of " "browsers and in syndication feeds."\n+        ),\n+        default="Plone site",\n+    )\n \n     site_logo = schema.Bytes(\n-        title=_(\'Site Logo\'),\n-        description=_(\'This shows a custom logo on your site.\'),\n+        title=_("Site Logo"),\n+        description=_("This shows a custom logo on your site."),\n         required=False,\n     )\n \n     site_favicon_mimetype = schema.TextLine(\n-        title=_(\'MIME type of the site favicon\'),\n-        description=_(\'MIME type of the favicon (automatically set when a new favicon is uploaded)\'),\n+        title=_("MIME type of the site favicon"),\n+        description=_(\n+            "MIME type of the favicon (automatically set when a new favicon is uploaded)"\n+        ),\n         required=False,\n-        default=\'image/vnd.microsoft.icon\'\n+        default="image/vnd.microsoft.icon",\n     )\n \n     site_favicon = schema.Bytes(\n-        title=_(\'Site Favicon\'),\n-        description=_(\'This shows a custom favicon on your site.\'),\n+        title=_("Site Favicon"),\n+        description=_("This shows a custom favicon on your site."),\n         required=False,\n     )\n \n     exposeDCMetaTags = schema.Bool(\n-        title=_(\'Expose Dublin Core metadata\'),\n-        description=_(\'Exposes the Dublin Core properties as metatags.\'),\n+        title=_("Expose Dublin Core metadata"),\n+        description=_("Exposes the Dublin Core properties as metatags."),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     enable_sitemap = schema.Bool(\n-        title=_(\'Expose sitemap.xml.gz\'),\n-        description=_(\n-            \'Exposes your content as a file \'\n-            \'according to the \'\n-            \'<a href=\\\'http://sitemaps.org\\\'>sitemaps.org</a> \'\n-            \'standard. You \'\n-            \'can submit this to compliant search engines \'\n-            \'like Google, Yahoo and Microsoft. It allows \'\n-            \'these search engines to more intelligently \'\n-            \'crawl your site.\'),\n+        title=_("Expose sitemap.xml.gz"),\n+        description=_(\n+            "Exposes your content as a file "\n+            "according to the "\n+            "<a href=\'http://sitemaps.org\'>sitemaps.org</a> "\n+            "standard. You "\n+            "can submit this to compliant search engines "\n+            "like Google, Yahoo and Microsoft. It allows "\n+            "these search engines to more intelligently "\n+            "crawl your site."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     webstats_js = schema.SourceText(\n-        title=_(\'JavaScript for web statistics support\'),\n+        title=_("JavaScript for web statistics support"),\n         description=_(\n-            \'For enabling web statistics support \'\n-            \'from external providers (e.g. Google \'\n-            \'Analytics). Paste the provided code snippet here. \'\n-            \'It will be rendered as \'\n-            \'entered near the end of the page.\'),\n-        default=\'\',\n-        required=False)\n+            "For enabling web statistics support "\n+            "from external providers (e.g. Google "\n+            "Analytics). Paste the provided code snippet here. "\n+            "It will be rendered as "\n+            "entered near the end of the page."\n+        ),\n+        default="",\n+        required=False,\n+    )\n \n     display_publication_date_in_byline = schema.Bool(\n-        title=_(\'Display publication date\'),\n-        description=_(\n-            \'Show in the byline the date a content item was published.\'),\n+        title=_("Display publication date"),\n+        description=_("Show in the byline the date a content item was published."),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     icon_visibility = schema.Choice(\n-        title=_(\'Icon visibility\'),\n-        description=_(\'Show icons in listings\'),\n-        default=\'enabled\',\n-        vocabulary=SimpleVocabulary([\n-            SimpleTerm(\'false\', \'false\', _(\'Never\')),\n-            SimpleTerm(\'enabled\', \'enabled\', _(\'Always\')),\n-            SimpleTerm(\'authenticated\', \'authenticated\',\n-                       _(\'For authenticated users only\'))]),\n-        required=True)\n+        title=_("Icon visibility"),\n+        description=_("Show icons in listings"),\n+        default="enabled",\n+        vocabulary=SimpleVocabulary(\n+            [\n+                SimpleTerm("false", "false", _("Never")),\n+                SimpleTerm("enabled", "enabled", _("Always")),\n+                SimpleTerm(\n+                    "authenticated", "authenticated", _("For authenticated users only")\n+                ),\n+            ]\n+        ),\n+        required=True,\n+    )\n \n     thumb_visibility = schema.Choice(\n-        title=_(\'Thumb visibility\'),\n-        description=_(\'Show thumbnail images in listings\'),\n-        default=\'enabled\',\n-        vocabulary=SimpleVocabulary([\n-            SimpleTerm(\'false\', \'false\', _(\'Never\')),\n-            SimpleTerm(\'enabled\', \'enabled\', _(\'Always\')),\n-            SimpleTerm(\'authenticated\', \'authenticated\',\n-                       _(\'For authenticated users only\'))]),\n-        required=True)\n+        title=_("Thumb visibility"),\n+        description=_("Show thumbnail images in listings"),\n+        default="enabled",\n+        vocabulary=SimpleVocabulary(\n+            [\n+                SimpleTerm("false", "false", _("Never")),\n+                SimpleTerm("enabled", "enabled", _("Always")),\n+                SimpleTerm(\n+                    "authenticated", "authenticated", _("For authenticated users only")\n+                ),\n+            ]\n+        ),\n+        required=True,\n+    )\n \n     no_thumbs_portlet = schema.Bool(\n-        title=_(\'No Thumbs in portlets\'),\n+        title=_("No Thumbs in portlets"),\n         description=_(\n-            \'Suppress thumbs in all portlets;\'\n-            \' this default can be overridden individually \'\n-            \'in selected portlets\'),\n+            "Suppress thumbs in all portlets;"\n+            " this default can be overridden individually "\n+            "in selected portlets"\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     no_thumbs_lists = schema.Bool(\n-        title=_(\'No thumbs in list views\'),\n-        description=_(\'Suppress thumbs in all list views; \'\n-                      \'this default can be overriden individually\'),\n+        title=_("No thumbs in list views"),\n+        description=_(\n+            "Suppress thumbs in all list views; "\n+            "this default can be overriden individually"\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     no_thumbs_summary = schema.Bool(\n-        title=_(\'No thumbs in summary views\'),\n-        description=_(\'Suppress thumbs in all summary views; \'\n-                      \'this default can be overriden individually\'),\n+        title=_("No thumbs in summary views"),\n+        description=_(\n+            "Suppress thumbs in all summary views; "\n+            "this default can be overriden individually"\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     no_thumbs_tables = schema.Bool(\n-        title=_(\'No thumbs in table views\'), description=_(\n-            \'Suppress thumbs in all tableviews and in folder contents view; \'\n-            \'this default can be overriden individually\'),\n+        title=_("No thumbs in table views"),\n+        description=_(\n+            "Suppress thumbs in all tableviews and in folder contents view; "\n+            "this default can be overriden individually"\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     thumb_scale_portlet = schema.Choice(\n-        title=_(\'Thumb scale for portlets\'),\n-        description=_(\'This default can be overriden individually.\'),\n-        default=\'icon\',\n-        vocabulary=\'plone.app.vocabularies.ImagesScales\',\n-        required=True)\n+        title=_("Thumb scale for portlets"),\n+        description=_("This default can be overriden individually."),\n+        default="icon",\n+        vocabulary="plone.app.vocabularies.ImagesScales",\n+        required=True,\n+    )\n \n     thumb_scale_listing = schema.Choice(\n-        title=_(\'Thumb scale for listings\'),\n-        description=_(\'E.g. standard view;\'\n-                      \' This default can be overriden individually.\'),\n-        default=\'thumb\',\n-        vocabulary=\'plone.app.vocabularies.ImagesScales\',\n-        required=True)\n+        title=_("Thumb scale for listings"),\n+        description=_(\n+            "E.g. standard view;" " This default can be overriden individually."\n+        ),\n+        default="thumb",\n+        vocabulary="plone.app.vocabularies.ImagesScales",\n+        required=True,\n+    )\n \n     thumb_scale_table = schema.Choice(\n-        title=_(\'Thumb scale for tables\'),\n-        description=_(\'E.g., tabular view, folder content listing;\'\n-                      \' This default can be overriden individually.\'),\n-        default=\'tile\',\n-        vocabulary=\'plone.app.vocabularies.ImagesScales\',\n-        required=True)\n+        title=_("Thumb scale for tables"),\n+        description=_(\n+            "E.g., tabular view, folder content listing;"\n+            " This default can be overriden individually."\n+        ),\n+        default="tile",\n+        vocabulary="plone.app.vocabularies.ImagesScales",\n+        required=True,\n+    )\n \n     thumb_scale_summary = schema.Choice(\n-        title=_(\'Thumb scale for summary view\'),\n-        description=_(\'This default can be overriden individually.\'),\n-        default=\'mini\',\n-        vocabulary=\'plone.app.vocabularies.ImagesScales\',\n-        required=True)\n+        title=_("Thumb scale for summary view"),\n+        description=_("This default can be overriden individually."),\n+        default="mini",\n+        vocabulary="plone.app.vocabularies.ImagesScales",\n+        required=True,\n+    )\n \n     toolbar_position = schema.Choice(\n-        title=_(\'Toolbar position\'),\n+        title=_("Toolbar position"),\n         description=_(\n-            \'It can be on the side (vertical mode) \'\n-            \'or on the top (horizontal mode)\'),\n-        default=\'side\',\n-        vocabulary=SimpleVocabulary([\n-            SimpleTerm(\'side\', \'side\', _(\'Side\')),\n-            SimpleTerm(\'top\', \'top\', _(\'Top\'))]),\n-        required=True)\n+            "It can be on the side (vertical mode) " "or on the top (horizontal mode)"\n+        ),\n+        default="side",\n+        vocabulary=SimpleVocabulary(\n+            [SimpleTerm("side", "side", _("Side")), SimpleTerm("top", "top", _("Top"))]\n+        ),\n+        required=True,\n+    )\n \n     toolbar_logo = schema.TextLine(\n-        title=_(\'Relative URL for the toolbar logo\'),\n+        title=_("Relative URL for the toolbar logo"),\n         description=_(\n-            \'This must be a URL relative to the site root. \'\n-            \'By default it is /++plone++static/plone-toolbarlogo.svg\'),\n-        default=\'/++plone++static/plone-toolbarlogo.svg\',\n+            "This must be a URL relative to the site root. "\n+            "By default it is /++plone++static/plone-toolbarlogo.svg"\n+        ),\n+        default="/++plone++static/plone-toolbarlogo.svg",\n         required=False,\n     )\n \n     robots_txt = schema.SourceText(\n-        title=_(\'robots.txt\'),\n-        description=_(\n-            \'help_robots_txt\',\n-            default=\'robots.txt is read by search engines to \'\n-                    \'determine how to index your site. \'\n-                    \'For details see <a href=\\\'http://www.robotstxt.org\\\'>\'\n-                    \'http://www.robotstxt.org</a>. \'\n-                    \'Use \\\'{portal_url}\\\' for the site URL.\'),\n+        title=_("robots.txt"),\n+        description=_(\n+            "help_robots_txt",\n+            default="robots.txt is read by search engines to "\n+            "determine how to index your site. "\n+            "For details see <a href=\'http://www.robotstxt.org\'>"\n+            "http://www.robotstxt.org</a>. "\n+            "Use \'{portal_url}\' for the site URL.",\n+        ),\n         default=ROBOTS_TXT,\n         required=False,\n     )\n \n     default_page = schema.List(\n-        title=_(\'Default page IDs\'),\n+        title=_("Default page IDs"),\n         description=_(\n-            \'Select which IDs (short names) can act as fallback \'\n-            \'default pages for a container.\'),\n+            "Select which IDs (short names) can act as fallback "\n+            "default pages for a container."\n+        ),\n         required=False,\n-        default=[\n-            \'index_html\',\n-            \'index.html\',\n-            \'index.htm\',\n-            \'FrontPage\'],\n+        default=["index_html", "index.html", "index.htm", "FrontPage"],\n         missing_value=[],\n-        value_type=schema.TextLine())\n+        value_type=schema.TextLine(),\n+    )\n \n     roles_allowed_to_add_keywords = schema.List(\n-        title=_(\'Roles that can add keywords\'),\n+        title=_("Roles that can add keywords"),\n         description=_(\n-            \'help_allow_roles_to_add_keywords\',\n-            default=\'Only the following roles can add new keywords \'),\n+            "help_allow_roles_to_add_keywords",\n+            default="Only the following roles can add new keywords ",\n+        ),\n         required=False,\n         default=[\n-            \'Manager\',\n-            \'Site Administrator\',\n-            \'Reviewer\',\n+            "Manager",\n+            "Site Administrator",\n+            "Reviewer",\n         ],\n         missing_value=[],\n-        value_type=schema.Choice(vocabulary=\'plone.app.vocabularies.Roles\'),\n+        value_type=schema.Choice(vocabulary="plone.app.vocabularies.Roles"),\n     )\n \n \n class IDateAndTimeSchema(Interface):\n-    """Controlpanel settings for date and time related settings.\n-    """\n+    """Controlpanel settings for date and time related settings."""\n \n     portal_timezone = schema.Choice(\n-        title=_(\'Portal default timezone\'),\n+        title=_("Portal default timezone"),\n         description=_(\n-            \'help_portal_timezone\',\n-            default=\'The timezone setting of the portal. Users can set \'\n-                    \'their own timezone, if available timezones are \'\n-                    \'defined.\'),\n+            "help_portal_timezone",\n+            default="The timezone setting of the portal. Users can set "\n+            "their own timezone, if available timezones are "\n+            "defined.",\n+        ),\n         required=True,\n         default=None,\n-        vocabulary=\'plone.app.vocabularies.CommonTimezones\')\n+        vocabulary="plone.app.vocabularies.CommonTimezones",\n+    )\n \n     available_timezones = schema.List(\n-        title=_(\'Available timezones\'),\n+        title=_("Available timezones"),\n         description=_(\n-            \'help_available_timezones\',\n-            default=\'The timezones, which should be available for the \'\n-                    \'portal. Can be set for users and events\'),\n+            "help_available_timezones",\n+            default="The timezones, which should be available for the "\n+            "portal. Can be set for users and events",\n+        ),\n         required=False,\n         default=[],\n         missing_value=[],\n-        value_type=schema.Choice(\n-            vocabulary=\'plone.app.vocabularies.Timezones\'))\n+        value_type=schema.Choice(vocabulary="plone.app.vocabularies.Timezones"),\n+    )\n \n     first_weekday = schema.Choice(\n-        title=_(\'label_first_weekday\', default=\'First weekday\'),\n-        description=_(\n-            \'help_first_weekday\',\n-            default=\'First day in the week.\'),\n+        title=_("label_first_weekday", default="First weekday"),\n+        description=_("help_first_weekday", default="First day in the week."),\n         required=True,\n         default=None,\n-        vocabulary=\'plone.app.vocabularies.Weekdays\')\n+        vocabulary="plone.app.vocabularies.Weekdays",\n+    )\n \n \n class ITypesSchema(Interface):\n-    """Controlpanel settings for the types settings.\n-    """\n+    """Controlpanel settings for the types settings."""\n \n     types_use_view_action_in_listings = schema.List(\n-        title=_(\'Types which use the view action in listing views.\'),\n+        title=_("Types which use the view action in listing views."),\n         description=_(\n-            \'help_types_use_view_action_in_listings\',\n-            default=\'When clicking items in listing views, these \'\n-                    \'types will use the \\\'view\\\' action instead of using \'\n-                    \'their default view.\'),\n+            "help_types_use_view_action_in_listings",\n+            default="When clicking items in listing views, these "\n+            "types will use the \'view\' action instead of using "\n+            "their default view.",\n+        ),\n         required=False,\n-        default=[\'Image\',\n-                 \'File\'],\n+        default=["Image", "File"],\n         missing_value=[],\n         value_type=schema.TextLine(),\n     )\n \n     redirect_links = schema.Bool(\n-        title=_(\'Redirect links\'),\n+        title=_("Redirect links"),\n         description=_(\n-            \'help_redirect_links\',\n-            default=\'When clicking on a Link type, should the user be \'\n-                    \'taken to the default view or be redirected to the \'\n-                    \'Link\\\'s URL?\'),\n+            "help_redirect_links",\n+            default="When clicking on a Link type, should the user be "\n+            "taken to the default view or be redirected to the "\n+            "Link\'s URL?",\n+        ),\n         required=False,\n-        default=True\n+        default=True,\n     )\n \n     default_page_types = schema.List(\n-        title=_(\'Types that can be set as a default page\'),\n+        title=_("Types that can be set as a default page"),\n         description=_(\n-            \'The content types that should be available for selection \'\n-            \'when setting a default page.\'),\n+            "The content types that should be available for selection "\n+            "when setting a default page."\n+        ),\n         required=False,\n         missing_value=[],\n         default=[\n-            \'Document\',\n-            \'Event\',\n-            \'News Item\',\n-            \'Collection\',\n+            "Document",\n+            "Event",\n+            "News Item",\n+            "Collection",\n         ],\n-        value_type=schema.TextLine()\n+        value_type=schema.TextLine(),\n     )\n \n \n class IMailSchema(Interface):\n \n     smtp_host = schema.TextLine(\n-        title=_(\n-            \'label_smtp_server\',\n-            default=\'SMTP server\'),\n+        title=_("label_smtp_server", default="SMTP server"),\n         description=_(\n-            \'help_smtp_server\',\n-            default=\'The address of your local \'\n-                    \'SMTP (outgoing e-mail) server. Usually \'\n-                    \'\\\'localhost\\\', unless you use an \'\n-                    \'external server to send e-mail.\'),\n-        default=\'localhost\',\n-        required=True)\n+            "help_smtp_server",\n+            default="The address of your local "\n+            "SMTP (outgoing e-mail) server. Usually "\n+            "\'localhost\', unless you use an "\n+            "external server to send e-mail.",\n+        ),\n+        default="localhost",\n+        required=True,\n+    )\n \n     smtp_port = schema.Int(\n-        title=_(\'label_smtp_port\',\n-                default=\'SMTP port\'),\n+        title=_("label_smtp_port", default="SMTP port"),\n         description=_(\n-            \'help_smtp_port\',\n-            default=\'The port of your local SMTP \'\n-                    \'(outgoing e-mail) server. Usually \\\'25\\\'.\'\n+            "help_smtp_port",\n+            default="The port of your local SMTP "\n+            "(outgoing e-mail) server. Usually \'25\'.",\n         ),\n         default=25,\n-        required=True)\n+        required=True,\n+    )\n \n     smtp_userid = schema.TextLine(\n-        title=_(\n-            \'label_smtp_userid\',\n-            default=\'ESMTP username\'),\n+        title=_("label_smtp_userid", default="ESMTP username"),\n         description=_(\n-            \'help_smtp_userid\',\n-            default=\'Username for authentication \'\n-                    \'to your e-mail server. Not required \'\n-                    \'unless you are using ESMTP.\'),\n+            "help_smtp_userid",\n+            default="Username for authentication "\n+            "to your e-mail server. Not required "\n+            "unless you are using ESMTP.",\n+        ),\n         default=None,\n-        required=False)\n+        required=False,\n+    )\n \n     smtp_pass = schema.Password(\n-        title=_(\n-            \'label_smtp_pass\',\n-            default=\'ESMTP password\'),\n+        title=_("label_smtp_pass", default="ESMTP password"),\n         description=_(\n-            \'help_smtp_pass\',\n-            default=\'The password for the ESMTP \'\n-                    \'user account.\'),\n+            "help_smtp_pass", default="The password for the ESMTP " "user account."\n+        ),\n         default=None,\n-        required=False)\n+        required=False,\n+    )\n \n     email_from_name = schema.TextLine(\n-        title=_(\'Site \\\'From\\\' name\'),\n+        title=_("Site \'From\' name"),\n         description=_(\n-            \'Plone generates e-mail using \'\n-            \'this name as the e-mail \'\n-            \'sender.\'),\n+            "Plone generates e-mail using " "this name as the e-mail " "sender."\n+        ),\n         default=None,\n-        required=True)\n+        required=True,\n+    )\n \n     email_from_address = schema.ASCIILine(\n-        title=_(\'Site \\\'From\\\' address\'),\n-        description=_(\n-            \'Plone generates e-mail using \'\n-            \'this address as the e-mail \'\n-            \'return address. It is also \'\n-            \'used as the destination \'\n-            \'address for the site-wide \'\n-            \'contact form and the \\\'Send test \'\n-            \'e-mail\\\' feature.\'),\n+        title=_("Site \'From\' address"),\n+        description=_(\n+            "Plone generates e-mail using "\n+            "this address as the e-mail "\n+            "return address. It is also "\n+            "used as the destination "\n+            "address for the site-wide "\n+            "contact form and the \'Send test "\n+            "e-mail\' feature."\n+        ),\n         default=None,\n-        required=True)\n+        required=True,\n+    )\n \n     email_charset = schema.ASCIILine(\n-        title=_(\'E-mail characterset\'),\n-        description=_(\'Characterset to use when sending e-mails.\'),\n-        default=\'utf-8\',\n+        title=_("E-mail characterset"),\n+        description=_("Characterset to use when sending e-mails."),\n+        default="utf-8",\n         required=True,\n     )\n \n@@ -1367,266 +1523,272 @@ class IMailSchema(Interface):\n class IMarkupSchema(Interface):\n \n     default_type = schema.Choice(\n-        title=_(\'Default format\'),\n+        title=_("Default format"),\n         description=_(\n-            \'Select the default format of textfields for newly \'\n-            \'created content objects.\'\n+            "Select the default format of textfields for newly "\n+            "created content objects."\n         ),\n-        default=\'text/html\',\n-        vocabulary=\'plone.app.vocabularies.AllowableContentTypes\',\n-        required=True\n+        default="text/html",\n+        vocabulary="plone.app.vocabularies.AllowableContentTypes",\n+        required=True,\n     )\n \n     allowed_types = schema.Tuple(\n-        title=_(\'Alternative formats\'),\n+        title=_("Alternative formats"),\n         description=_(\n-            \'Select which formats are available for users as \'\n-            \'alternative to the default format. Note that if new \'\n-            \'formats are installed, they will be enabled for text \'\n-            \'fields by default unless explicitly turned off here \'\n-            \'or by the relevant installer.\'\n+            "Select which formats are available for users as "\n+            "alternative to the default format. Note that if new "\n+            "formats are installed, they will be enabled for text "\n+            "fields by default unless explicitly turned off here "\n+            "or by the relevant installer."\n         ),\n         required=True,\n-        default=(\'text/html\', \'text/x-web-textile\'),\n+        default=("text/html", "text/x-web-textile"),\n         missing_value=(),\n         value_type=schema.Choice(\n-            vocabulary=\'plone.app.vocabularies.AllowableContentTypes\'\n-        )\n+            vocabulary="plone.app.vocabularies.AllowableContentTypes"\n+        ),\n     )\n \n     markdown_extensions = schema.List(\n         default=[\n-            \'markdown.extensions.fenced_code\',\n-            \'markdown.extensions.nl2br\',\n+            "markdown.extensions.fenced_code",\n+            "markdown.extensions.nl2br",\n         ],\n         description=_(\n-            \'Look for available extensions at \'\n-            \'https://python-markdown.github.io/extensions/ or write your own.\'\n+            "Look for available extensions at "\n+            "https://python-markdown.github.io/extensions/ or write your own."\n         ),\n         missing_value=(),\n         required=False,\n-        title=_(\'Enabled markdown extensions\'),\n-        value_type=schema.TextLine()\n+        title=_("Enabled markdown extensions"),\n+        value_type=schema.TextLine(),\n     )\n \n \n class IUserGroupsSettingsSchema(Interface):\n \n     many_groups = schema.Bool(\n-        title=_(\'Many groups?\'),\n-        description=_(\n-            \'Determines if your Plone is optimized \'\n-            \'for small or large sites. In environments with a \'\n-            \'lot of groups it can be very slow or impossible \'\n-            \'to build a list all groups. This option tunes the \'\n-            \'user interface and behaviour of Plone for this \'\n-            \'case by allowing you to search for groups instead \'\n-            \'of listing all of them.\'),\n+        title=_("Many groups?"),\n+        description=_(\n+            "Determines if your Plone is optimized "\n+            "for small or large sites. In environments with a "\n+            "lot of groups it can be very slow or impossible "\n+            "to build a list all groups. This option tunes the "\n+            "user interface and behaviour of Plone for this "\n+            "case by allowing you to search for groups instead "\n+            "of listing all of them."\n+        ),\n         default=False,\n         required=False,\n     )\n \n     many_users = schema.Bool(\n-        title=_(\'Many users?\'),\n-        description=_(\n-            \'Determines if your Plone is optimized \'\n-            \'for small or large sites. In environments with a \'\n-            \'lot of users it can be very slow or impossible to \'\n-            \'build a list all users. This option tunes the user \'\n-            \'interface and behaviour of Plone for this case by \'\n-            \'allowing you to search for users instead of \'\n-            \'listing all of them.\'),\n+        title=_("Many users?"),\n+        description=_(\n+            "Determines if your Plone is optimized "\n+            "for small or large sites. In environments with a "\n+            "lot of users it can be very slow or impossible to "\n+            "build a list all users. This option tunes the user "\n+            "interface and behaviour of Plone for this case by "\n+            "allowing you to search for users instead of "\n+            "listing all of them."\n+        ),\n         default=False,\n         required=False,\n     )\n \n \n def validate_twitter_username(value):\n-    if value and value.startswith(\'@\'):\n-        raise Invalid(\n-            \'Twitter username should not include the "@" prefix character.\')\n+    if value and value.startswith("@"):\n+        raise Invalid(\'Twitter username should not include the "@" prefix character.\')\n     return True\n \n \n class ISocialMediaSchema(Interface):\n \n     share_social_data = schema.Bool(\n-        title=_(\'Share social data\'),\n-        description=_(\'Include meta tags on pages to give hints to \'\n-                      \'social media on how to better render your pages \'\n-                      \'when shared\'),\n+        title=_("Share social data"),\n+        description=_(\n+            "Include meta tags on pages to give hints to "\n+            "social media on how to better render your pages "\n+            "when shared"\n+        ),\n         default=True,\n         required=False,\n     )\n \n     twitter_username = schema.ASCIILine(\n-        title=_(\'Twitter username\'),\n+        title=_("Twitter username"),\n         description=_(\n-            \'To identify things like Twitter Cards. \'\n+            "To identify things like Twitter Cards. "\n             \'Do not include the "@" prefix character.\'\n         ),\n         required=False,\n-        default=\'\',\n+        default="",\n         constraint=validate_twitter_username,\n     )\n \n     facebook_app_id = schema.ASCIILine(\n-        title=_(\'Facebook App ID\'),\n-        description=_(\n-            \'To be used with some integrations like Open Graph data\'),\n+        title=_("Facebook App ID"),\n+        description=_("To be used with some integrations like Open Graph data"),\n         required=False,\n-        default=\'\')\n+        default="",\n+    )\n \n     facebook_username = schema.ASCIILine(\n-        title=_(\'Facebook username\'),\n-        description=_(\'For linking Open Graph data to a Facebook account\'),\n+        title=_("Facebook username"),\n+        description=_("For linking Open Graph data to a Facebook account"),\n         required=False,\n-        default=\'\')\n+        default="",\n+    )\n \n \n class IImagingSchema(Interface):\n     allowed_sizes = schema.List(\n-        title=_(\'Allowed image sizes\'),\n+        title=_("Allowed image sizes"),\n         description=_(\n-            \'Specify all allowed maximum image dimensions, one per line. The \'\n-            \'required format is &lt;name&gt; &lt;width&gt;:&lt;height&gt;.\'\n+            "Specify all allowed maximum image dimensions, one per line. The "\n+            "required format is &lt;name&gt; &lt;width&gt;:&lt;height&gt;."\n         ),\n         value_type=schema.TextLine(),\n         default=[\n-            \'huge 1600:65536\',\n-            \'great 1200:65536\',\n-            \'larger 1000:65536\',\n-            \'large 800:65536\',\n-            \'teaser 600:65536\',\n-            \'preview 400:65536\',\n-            \'mini 200:65536\',\n-            \'thumb 128:128\',\n-            \'tile 64:64\',\n-            \'icon 32:32\',\n-            \'listing 16:16\'],\n+            "huge 1600:65536",\n+            "great 1200:65536",\n+            "larger 1000:65536",\n+            "large 800:65536",\n+            "teaser 600:65536",\n+            "preview 400:65536",\n+            "mini 200:65536",\n+            "thumb 128:128",\n+            "tile 64:64",\n+            "icon 32:32",\n+            "listing 16:16"\n+        ],\n         missing_value=[],\n         required=False,\n     )\n \n     quality = schema.Int(\n-        title=_(\'Scaled image quality\'),\n-        description=_(\'A value for the quality of scaled images, from 1 \'\n-                      \'(lowest) to 95 (highest). A value of 0 will mean \'\n-                      \'plone.scaling\\\'s default will be used, which is \'\n-                      \'currently 88.\'),\n+        title=_("Scaled image quality"),\n+        description=_(\n+            "A value for the quality of scaled images, from 1 "\n+            "(lowest) to 95 (highest). A value of 0 will mean "\n+            "plone.scaling\'s default will be used, which is "\n+            "currently 88."\n+        ),\n         min=0,\n         max=95,\n-        default=88\n+        default=88,\n     )\n \n     highpixeldensity_scales = schema.Choice(\n-        title=_(\'High pixel density mode\'),\n-        description=_(\'\'),\n-        default=\'disabled\',\n-        vocabulary=SimpleVocabulary([\n-            SimpleTerm(\'disabled\', \'disabled\', \'Disabled\'),\n-            SimpleTerm(\'2x\', \'2x\', \'Enabled (2x)\'),\n-            SimpleTerm(\'3x\', \'3x\', \'Enabled (2x, 3x)\')\n-        ]),\n+        title=_("High pixel density mode"),\n+        description=_(""),\n+        default="disabled",\n+        vocabulary=SimpleVocabulary(\n+            [\n+                SimpleTerm("disabled", "disabled", "Disabled"),\n+                SimpleTerm("2x", "2x", "Enabled (2x)"),\n+                SimpleTerm("3x", "3x", "Enabled (2x, 3x)"),\n+            ]\n+        ),\n     )\n \n     quality_2x = schema.Int(\n-        title=_(\'Image quality at 2x\'),\n-        description=_(\'A value for the quality of 2x high pixel density images, from 1 \'\n-                      \'(lowest) to 95 (highest). A value of 0 will mean \'\n-                      \'plone.scaling\\\'s default will be used, which is \'\n-                      \'currently 62.\'),\n+        title=_("Image quality at 2x"),\n+        description=_(\n+            "A value for the quality of 2x high pixel density images, from 1 "\n+            "(lowest) to 95 (highest). A value of 0 will mean "\n+            "plone.scaling\'s default will be used, which is "\n+            "currently 62."\n+        ),\n         min=0,\n         max=95,\n         default=62,\n     )\n \n     quality_3x = schema.Int(\n-        title=_(\'Image quality at 3x\'),\n-        description=_(\'A value for the quality of 3x high pixel density images, from 1 \'\n-                      \'(lowest) to 95 (highest). A value of 0 will mean \'\n-                      \'plone.scaling\\\'s default will be used, which is \'\n-                      \'currently 51.\'),\n+        title=_("Image quality at 3x"),\n+        description=_(\n+            "A value for the quality of 3x high pixel density images, from 1 "\n+            "(lowest) to 95 (highest). A value of 0 will mean "\n+            "plone.scaling\'s default will be used, which is "\n+            "currently 51."\n+        ),\n         min=0,\n         max=95,\n         default=51,\n     )\n \n     image_captioning = schema.Bool(\n-        title=_(\'image_captioning_title\', \'Enable image captioning\'),\n+        title=_("image_captioning_title", "Enable image captioning"),\n         description=_(\n-            \'image_captioning_description\',\n-            \'Enable automatic image captioning for images set in the richtext editor based on the description of images.\'\n+            "image_captioning_description",\n+            "Enable automatic image captioning for images set in the richtext editor based on the description of images.",\n         ),\n         default=True,\n-        required=False\n+        required=False,\n     )\n \n \n class ILoginSchema(Interface):\n \n     auth_cookie_length = schema.Int(\n-        title=_(\'Auth cookie length\'),\n-        default=0,\n-        required=False\n+        title=_("Auth cookie length"), default=0, required=False\n     )\n \n     verify_login_name = schema.Bool(\n-        title=_(\'Verify login name\'),\n-        default=True,\n-        required=False\n+        title=_("Verify login name"), default=True, required=False\n     )\n \n     allow_external_login_sites = schema.Tuple(\n-        title=_(\'Allow external login sites\'),\n+        title=_("Allow external login sites"),\n         default=(),\n         value_type=schema.ASCIILine(),\n-        required=False\n+        required=False,\n     )\n \n     external_login_url = schema.ASCIILine(\n-        title=_(\'External login url\'),\n-        default=None,\n-        required=False\n+        title=_("External login url"), default=None, required=False\n     )\n \n     external_logout_url = schema.ASCIILine(\n-        title=_(\'External logout url\'),\n-        default=None,\n-        required=False\n+        title=_("External logout url"), default=None, required=False\n     )\n \n     external_login_iframe = schema.Bool(\n-        title=_(\'External login iframe\'),\n-        default=False,\n-        required=False\n+        title=_("External login iframe"), default=False, required=False\n     )\n \n \n class ILinkSchema(Interface):\n \n     external_links_open_new_window = schema.Bool(\n-        title=_(\'Open external links in new a window\'),\n-        description=_(\'\'),\n+        title=_("Open external links in new a window"),\n+        description=_(""),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     mark_special_links = schema.Bool(\n-        title=_(\'Mark special links\'),\n-        description=_(\'Marks external or special protocol links with class.\'),\n+        title=_("Mark special links"),\n+        description=_("Marks external or special protocol links with class."),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n \n def _check_tales_expression(value):\n     from Products.PageTemplates.Expressions import getEngine\n+\n     try:\n         getEngine().compile(value)\n     except Exception:\n         raise Invalid(\n             _(\n                 \'The expression "${value}" is invalid\',\n-                mapping={\'value\': value},\n+                mapping={"value": value},\n             )\n         )\n     return True\n@@ -1635,86 +1797,81 @@ def _check_tales_expression(value):\n class IActionSchema(Interface):\n \n     category = schema.Choice(\n-        title=_(\'Category\'),\n-        vocabulary=\'plone.app.vocabularies.PortalActionCategories\',\n-        required=True)\n+        title=_("Category"),\n+        vocabulary="plone.app.vocabularies.PortalActionCategories",\n+        required=True,\n+    )\n \n-    title = schema.TextLine(\n-        title=_(\'Title\'),\n-        required=True)\n+    title = schema.TextLine(title=_("Title"), required=True)\n \n-    description = schema.Text(\n-        title=_(\'Description\'),\n-        required=False)\n+    description = schema.Text(title=_("Description"), required=False)\n \n     i18n_domain = schema.TextLine(\n-        title=_(\'i18n_domain_heading\', default=\'I18n domain\'),\n-        default=\'plone\',\n-        required=False)\n+        title=_("i18n_domain_heading", default="I18n domain"),\n+        default="plone",\n+        required=False,\n+    )\n \n     url_expr = schema.ASCIILine(\n-        title=_(\'action_url_heading\', default=\'Action URL\'),\n+        title=_("action_url_heading", default="Action URL"),\n         description=_(\n-            \'action_url_description\',\n-            default=\'An expression producing the called URL. \'\n-            \'Example: string:${globals_view/navigationRootUrl}/page\'\n+            "action_url_description",\n+            default="An expression producing the called URL. "\n+            "Example: string:${globals_view/navigationRootUrl}/page",\n         ),\n         required=True,\n         constraint=_check_tales_expression,\n     )\n \n     available_expr = schema.ASCIILine(\n-        title=_(\'action_condition_heading\', default=\'Condition\'),\n-        description=_(\n-            \'action_condition_description\',\n-            default=\'A boolean expression\'\n-        ),\n-        required=False)\n+        title=_("action_condition_heading", default="Condition"),\n+        description=_("action_condition_description", default="A boolean expression"),\n+        required=False,\n+    )\n \n     permissions = schema.List(\n-        title=_(\'action_permissions_heading\', default=\'Permissions\'),\n+        title=_("action_permissions_heading", default="Permissions"),\n         required=True,\n-        default=[\'View\'],\n+        default=["View"],\n         missing_value=[],\n-        value_type=schema.Choice(\n-            vocabulary=\'plone.app.vocabularies.Permissions\'\n-        )\n+        value_type=schema.Choice(vocabulary="plone.app.vocabularies.Permissions"),\n     )\n \n     visible = schema.Bool(\n-        title=_(\'action_visibility_heading\', default=\'Visible?\'),\n+        title=_("action_visibility_heading", default="Visible?"),\n         default=True,\n-        required=False)\n+        required=False,\n+    )\n \n     position = schema.Int(\n-        title=_(\'action_position_heading\', default=\'Position\'),\n+        title=_("action_position_heading", default="Position"),\n         default=1,\n         min=1,\n-        required=True)\n+        required=True,\n+    )\n \n \n class INewActionSchema(Interface):\n \n     category = schema.Choice(\n-        title=_(\'Category\'),\n-        vocabulary=\'plone.app.vocabularies.PortalActionCategories\',\n-        required=True)\n+        title=_("Category"),\n+        vocabulary="plone.app.vocabularies.PortalActionCategories",\n+        required=True,\n+    )\n \n-    id = schema.ASCIILine(\n-        title=_(\'Id\'),\n-        required=True)\n+    id = schema.ASCIILine(title=_("Id"), required=True)\n \n     @invariant\n     def validate_category_id(data):\n         categoryid = data.category\n-        pa = getToolByName(getSite(), \'portal_actions\')\n+        pa = getToolByName(getSite(), "portal_actions")\n         category = pa.get(categoryid, {})\n         actionid = data.id\n         if actionid in category:\n             raise Invalid(\n                 _(\n                     \'An action with the id "${actionid}" already exists\',\n-                    mapping={\'actionid\': actionid},\n+                    mapping={"actionid": actionid},\n                 )\n             )\n         try:\n@@ -1723,19 +1880,17 @@ def validate_category_id(data):\n             raise Invalid(\n                 _(\n                     \'The id "${actionid}" is invalid\',\n-                    mapping={\'actionid\': actionid},\n+                    mapping={"actionid": actionid},\n                 )\n             )\n \n \n class IPloneControlPanelView(Interface):\n-    """A marker interface for views showing a controlpanel.\n-    """\n+    """A marker interface for views showing a controlpanel."""\n \n \n class IPloneControlPanelForm(IPloneControlPanelView):\n-    """Forms using plone.app.controlpanel\n-    """\n+    """Forms using plone.app.controlpanel"""\n \n     def _on_save():\n         """Callback mehod which can be implemented by control panels to\n@@ -1748,8 +1903,7 @@ def _on_save():\n \n \n class IConfigurationChangedEvent(Interface):\n-    """An event which is fired after a configuration setting has been changed.\n-    """\n+    """An event which is fired after a configuration setting has been changed."""\n \n     context = Attribute("The configuration context which was changed.")\n \ndiff --git a/news/3440.feature b/news/3440.feature\nnew file mode 100644\nindex 0000000000..fd00b51026\n--- /dev/null\n+++ b/news/3440.feature\n@@ -0,0 +1 @@\n+Add TinyMCE alignment classes, to avoid style usage [MrTango]\n\\ No newline at end of file\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:43+01:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/6415a02bc1d80a7d0e38d77016a09c46efed111c

Fix TinyMCE alignments setting in controlpanel

Files changed:
M Products/CMFPlone/interfaces/controlpanel.py

b'diff --git a/Products/CMFPlone/interfaces/controlpanel.py b/Products/CMFPlone/interfaces/controlpanel.py\nindex 521f9b3713..b63f53fb4f 100644\n--- a/Products/CMFPlone/interfaces/controlpanel.py\n+++ b/Products/CMFPlone/interfaces/controlpanel.py\n@@ -471,19 +471,19 @@ class ITinyMCELayoutSchema(Interface):\n                 "discreet": {"inline": "span", "classes": "discreet"},\n                 "clearfix": {"block": "div", "classes": "clearfix"},\n                 "alignleft": {\n-                    "selector": "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img,audio,video,picture",\n+                    "selector": "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,picture",\n                     "classes": "text-start",\n                 },\n                 "aligncenter": {\n-                    "selector": "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img,audio,video,picture",\n+                    "selector": "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,picture",\n                     "classes": "text-center",\n                 },\n                 "alignright": {\n-                    "selector": "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img,audio,video,picture",\n+                    "selector": "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,picture",\n                     "classes": "text-end",\n                 },\n                 "alignjustify": {\n-                    "selector": "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img,audio,video,picture",\n+                    "selector": "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,picture",\n                     "classes": "text-justify",\n                 },\n             }\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:43+01:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/bb5c41c08ea4f4f389ea50e5d1d8f8d5e4344309

Add CSS columns to TinyMCE inline styles

Files changed:
M Products/CMFPlone/interfaces/controlpanel.py

b'diff --git a/Products/CMFPlone/interfaces/controlpanel.py b/Products/CMFPlone/interfaces/controlpanel.py\nindex b63f53fb4f..8764837562 100644\n--- a/Products/CMFPlone/interfaces/controlpanel.py\n+++ b/Products/CMFPlone/interfaces/controlpanel.py\n@@ -425,6 +425,8 @@ class ITinyMCELayoutSchema(Interface):\n             "Superscript|superscript|superscript",\n             "Subscript|subscript|subscript",\n             "Code|code|code",\n+            "Text in 2 columns|textcolumns2|textcolumns2",\n+            "Text in 3 columns|textcolumns3|textcolumns3",\n         ],\n     )\n \n@@ -486,6 +488,8 @@ class ITinyMCELayoutSchema(Interface):\n                     "selector": "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,picture",\n                     "classes": "text-justify",\n                 },\n+                "textcolumns2": {"selector": "p", "classes": "text-columns-2"},\n+                "textcolumns3": {"selector": "p", "classes": "text-columns-3"}\n             }\n         ),\n         required=True,\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:43+01:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/242cbe2401a1308901d51bbe724210ee051969ed

Fix TinyMCE icon for formating styles

Files changed:
M Products/CMFPlone/interfaces/controlpanel.py

b'diff --git a/Products/CMFPlone/interfaces/controlpanel.py b/Products/CMFPlone/interfaces/controlpanel.py\nindex 8764837562..7e83192f62 100644\n--- a/Products/CMFPlone/interfaces/controlpanel.py\n+++ b/Products/CMFPlone/interfaces/controlpanel.py\n@@ -425,8 +425,8 @@ class ITinyMCELayoutSchema(Interface):\n             "Superscript|superscript|superscript",\n             "Subscript|subscript|subscript",\n             "Code|code|code",\n-            "Text in 2 columns|textcolumns2|textcolumns2",\n-            "Text in 3 columns|textcolumns3|textcolumns3",\n+            "Text in 2 columns|textcolumns2",\n+            "Text in 3 columns|textcolumns3",\n         ],\n     )\n \n@@ -444,10 +444,10 @@ class ITinyMCELayoutSchema(Interface):\n         value_type=schema.TextLine(),\n         missing_value=[],\n         default=[\n-            "Left|alignleft|alignleft",\n-            "Center|aligncenter|aligncenter",\n-            "Right|alignright|alignright",\n-            "Justify|alignjustify|alignjustify",\n+            "Left|alignleft|align-left",\n+            "Center|aligncenter|align-center",\n+            "Right|alignright|align-right",\n+            "Justify|alignjustify|align-justify",\n         ],\n     )\n \n@@ -473,19 +473,19 @@ class ITinyMCELayoutSchema(Interface):\n                 "discreet": {"inline": "span", "classes": "discreet"},\n                 "clearfix": {"block": "div", "classes": "clearfix"},\n                 "alignleft": {\n-                    "selector": "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,picture",\n+                    "selector": "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table",\n                     "classes": "text-start",\n                 },\n                 "aligncenter": {\n-                    "selector": "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,picture",\n+                    "selector": "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table",\n                     "classes": "text-center",\n                 },\n                 "alignright": {\n-                    "selector": "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,picture",\n+                    "selector": "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table",\n                     "classes": "text-end",\n                 },\n                 "alignjustify": {\n-                    "selector": "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,picture",\n+                    "selector": "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table",\n                     "classes": "text-justify",\n                 },\n                 "textcolumns2": {"selector": "p", "classes": "text-columns-2"},\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:43+01:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/db7ad3ed6dfdf8857999384287b7ddbddf3a7fcf

fix @@new-user modal

Files changed:
M Products/CMFPlone/controlpanel/browser/usergroups_usersoverview.pt
M Products/CMFPlone/tests/robot/test_overlays.robot

b'diff --git a/Products/CMFPlone/controlpanel/browser/usergroups_usersoverview.pt b/Products/CMFPlone/controlpanel/browser/usergroups_usersoverview.pt\nindex 746cea90df..6bf0192991 100644\n--- a/Products/CMFPlone/controlpanel/browser/usergroups_usersoverview.pt\n+++ b/Products/CMFPlone/controlpanel/browser/usergroups_usersoverview.pt\n@@ -61,7 +61,12 @@\n \n         <div class="mb-3 input-group">\n           <a class="pat-plone-modal me-3 btn btn-success " id="add-user"\n-             data-pat-plone-modal="{&quot;actionOptions&quot;: {&quot;disableAjaxFormSubmit&quot;: true}}"\n+             data-pat-plone-modal=\'{\n+                "actionOptions": {\n+                  "redirectOnResponse": true,\n+                  "redirectToUrl": "${portal_url}/@@usergroup-userprefs"\n+                }\n+              }\'\n              tal:attributes="href string:${portal_url}/@@new-user"\n              i18n:translate="label_add_new_user">Add New User</a>\n           <span class="input-group-text" id="quickSearchLabel" i18n:translate="label_user_search">User Search</span>\n@@ -95,8 +100,8 @@\n                 <tr>\n                   <th  class="text-start" i18n:translate="listingheader_user_name">User name</th>\n                   <th class="rotate" tal:repeat="portal_role portal_roles"><div tal:content="portal_role" i18n:translate="">Role</div></th>\n-                  <th class="rotate alert-warning"><div i18n:translate="listingheader_reset_password">Reset Password</div></th>\n-                  <th class="rotate alert-danger"><div i18n:translate="listingheader_remove">Remove</div></th>\n+                  <th class="rotate table-warning"><div i18n:translate="listingheader_reset_password">Reset Password</div></th>\n+                  <th class="rotate table-danger"><div i18n:translate="listingheader_remove">Remove</div></th>\n                 </tr>\n               </thead>\n               <tbody>\n@@ -139,7 +144,7 @@\n \n                         </td>\n \n-                        <td class="listingCheckbox alert-warning">\n+                        <td class="listingCheckbox table-warning">\n                           <input type="checkbox"\n                                  class="noborder"\n                                  name="users.resetpassword:records"\n@@ -149,7 +154,7 @@\n                                                  disabled python:user[\'can_set_password\'] and default or \'disabled\'" />\n                         </td>\n \n-                        <td class="listingCheckbox alert-danger">\n+                        <td class="listingCheckbox table-danger">\n                           <input type="checkbox"\n                                          class="noborder notify"\n                                          name="delete:list"\ndiff --git a/Products/CMFPlone/tests/robot/test_overlays.robot b/Products/CMFPlone/tests/robot/test_overlays.robot\nindex e6b394ec6b..deee0bdd98 100644\n--- a/Products/CMFPlone/tests/robot/test_overlays.robot\n+++ b/Products/CMFPlone/tests/robot/test_overlays.robot\n@@ -251,7 +251,7 @@ overlay shows an error\n     Wait Until Page Contains  There were errors\n \n overlay requires to compile a field\n-    Wait Until Page Contains  This field is required\n+    Wait Until Page Contains  Required input is missing\n \n I \'${action}\' the form\n     Wait until keyword succeeds  30  1  Element Should Be Visible  css=div.modal-footer button[name="form.buttons.${action}"]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:43+01:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/706f825b2cfbed54b6deb1ba0d70e008dd57a36e

update robot tests

Files changed:
M Products/CMFPlone/tests/robot/test_edit_user_schema.robot

b'diff --git a/Products/CMFPlone/tests/robot/test_edit_user_schema.robot b/Products/CMFPlone/tests/robot/test_edit_user_schema.robot\nindex 51893fb86a..bbb8e87b4f 100644\n--- a/Products/CMFPlone/tests/robot/test_edit_user_schema.robot\n+++ b/Products/CMFPlone/tests/robot/test_edit_user_schema.robot\n@@ -93,7 +93,7 @@ site registration enabled\n I add a new text field to the member fields\n   Go to  ${PLONE_URL}/@@member-fields\n   Wait until page contains element  css=#add-field\n-  Click Button  Add new field\xe2\x80\xa6\n+  Click Link  Add new field\xe2\x80\xa6\n   Wait Until Element Is visible  css=#add-field-form #form-widgets-title\n   Input Text  css=#add-field-form #form-widgets-title  Test Field\n   Press Key  css=#add-field-form #form-widgets-title  \\\\09\n@@ -110,7 +110,7 @@ I Open the test_field Settings\n I add a new required text field to the member fields\n   Go to  ${PLONE_URL}/@@member-fields\n   Wait until page contains element  css=#add-field\n-  Click Button  Add new field\xe2\x80\xa6\n+  Click Link  Add new field\xe2\x80\xa6\n   Wait Until Element Is visible  css=#add-field-form #form-widgets-title\n   Input Text  css=#add-field-form #form-widgets-title  Test Field\n   Press Key  css=#add-field-form #form-widgets-title  \\\\09\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T12:22:43+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/b5118f9cac5d0c7c6db2a8db469dcaa8e1801667

TMP - Fixes test setup for yet unknown reason.

Files changed:
A Products/CMFPlone/resources/exportimport/__init__.py
A Products/CMFPlone/resources/exportimport/bundles.py
M Products/CMFPlone/exportimport/configure.zcml
M Products/CMFPlone/resources/browser/combine.py

b'diff --git a/Products/CMFPlone/exportimport/configure.zcml b/Products/CMFPlone/exportimport/configure.zcml\nindex b3a1ada1ba..3607947997 100644\n--- a/Products/CMFPlone/exportimport/configure.zcml\n+++ b/Products/CMFPlone/exportimport/configure.zcml\n@@ -76,6 +76,14 @@\n       description="Import CMFDiffTool settings">\n   </genericsetup:importStep>\n \n+  <genericsetup:importStep\n+      name="combine-bundles"\n+      title="Bundle combination"\n+      description="Combine JS/CSS bundles together"\n+      handler="Products.CMFPlone.resources.exportimport.bundles.combine">\n+    <depends name="plone.app.registry" />\n+  </genericsetup:importStep>\n+\n   <genericsetup:exportStep\n       name="content"\n       title="Content"\ndiff --git a/Products/CMFPlone/resources/browser/combine.py b/Products/CMFPlone/resources/browser/combine.py\nindex 58585b14f7..ae1ac23fd1 100644\n--- a/Products/CMFPlone/resources/browser/combine.py\n+++ b/Products/CMFPlone/resources/browser/combine.py\n@@ -1,3 +1,17 @@\n+from Acquisition import aq_base\n+from datetime import datetime\n+from io import BytesIO\n+from plone.registry.interfaces import IRegistry\n+from plone.resource.file import FilesystemFile\n+from plone.resource.interfaces import IResourceDirectory\n+from Products.CMFPlone.interfaces import IBundleRegistry\n+from Products.CMFPlone.interfaces.resources import OVERRIDE_RESOURCE_DIRECTORY_NAME  # noqa\n+from zExceptions import NotFound\n+from zope.component import getUtility\n+from zope.component import queryUtility\n+\n+import logging\n+import re\n import zope.deferredimport\n \n \n@@ -8,3 +22,143 @@\n     PRODUCTION_RESOURCE_DIRECTORY="Products.CMFPlone:resources.utils.PRODUCTION_RESOURCE_DIRECTORY",\n     get_override_directory="Products.CMFPlone:resources.utils.get_override_directory",\n )\n+\n+\n+PRODUCTION_RESOURCE_DIRECTORY = "production"\n+logger = logging.getLogger(__name__)\n+\n+\n+def get_production_resource_directory():\n+    persistent_directory = queryUtility(IResourceDirectory, name="persistent")\n+    if persistent_directory is None:\n+        return ""\n+    container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n+    try:\n+        production_folder = container[PRODUCTION_RESOURCE_DIRECTORY]\n+    except NotFound:\n+        return "%s/++unique++1" % PRODUCTION_RESOURCE_DIRECTORY\n+    if "timestamp.txt" not in production_folder:\n+        return "%s/++unique++1" % PRODUCTION_RESOURCE_DIRECTORY\n+    timestamp = production_folder.readFile("timestamp.txt")\n+    if isinstance(timestamp, bytes):\n+        timestamp = timestamp.decode()\n+    return "{}/++unique++{}".format(PRODUCTION_RESOURCE_DIRECTORY, timestamp)\n+\n+\n+def get_resource(context, path):\n+    if path.startswith("++plone++"):\n+        # ++plone++ resources can be customized, we return their override\n+        # value if any\n+        overrides = get_override_directory(context)\n+        filepath = path[9:]\n+        if overrides.isFile(filepath):\n+            return overrides.readFile(filepath)\n+\n+    try:\n+        resource = context.unrestrictedTraverse(path)\n+    except (NotFound, AttributeError):\n+        logger.warning(\n+            f"Could not find resource {path}. You may have to create it first."\n+        )  # noqa\n+        return\n+\n+    if isinstance(resource, FilesystemFile):\n+        (directory, sep, filename) = path.rpartition("/")\n+        return context.unrestrictedTraverse(directory).readFile(filename)\n+\n+    # calling the resource may modify the header, i.e. the content-type.\n+    # we do not want this, so keep the original header intact.\n+    response_before = context.REQUEST.response\n+    context.REQUEST.response = response_before.__class__()\n+    if hasattr(aq_base(resource), "GET"):\n+        # for FileResource\n+        result = resource.GET()\n+    else:\n+        # any BrowserView\n+        result = resource()\n+    context.REQUEST.response = response_before\n+    return result\n+\n+\n+def write_js(context, folder, meta_bundle):\n+    registry = getUtility(IRegistry)\n+    resources = []\n+\n+    # bundles\n+    bundles = registry.collectionOfInterface(\n+        IBundleRegistry, prefix="plone.bundles", check=False\n+    )\n+    for bundle in bundles.values():\n+        if bundle.merge_with == meta_bundle and bundle.jscompilation:\n+            resource = get_resource(context, bundle.jscompilation)\n+            if not resource:\n+                continue\n+            resources.append(resource)\n+\n+    fi = BytesIO()\n+    for script in resources:\n+        if not isinstance(script, bytes):\n+            script = script.encode()\n+        fi.write(script + b"\\n")\n+    folder.writeFile(meta_bundle + ".js", fi)\n+    logger.info(\'Wrote combined JS bundle "%s".\' % meta_bundle)\n+\n+\n+def write_css(context, folder, meta_bundle):\n+    registry = getUtility(IRegistry)\n+    resources = []\n+\n+    bundles = registry.collectionOfInterface(\n+        IBundleRegistry, prefix="plone.bundles", check=False\n+    )\n+    for bundle in bundles.values():\n+        if bundle.merge_with == meta_bundle and bundle.csscompilation:\n+            css = get_resource(context, bundle.csscompilation)\n+            if not css:\n+                continue\n+            (path, sep, filename) = bundle.csscompilation.rpartition("/")\n+            # Process relative urls:\n+            # we prefix with current resource path any url not starting with\n+            # \'/\' or http: or data:\n+            if not isinstance(path, bytes):\n+                path = path.encode()\n+            css = re.sub(\n+                br"""(url\\([\'"]?(?![\'"]?([a-z]+:|\\/)))""", br"\\1%s/" % path, css\n+            )\n+            resources.append(css)\n+\n+    fi = BytesIO()\n+    for script in resources:\n+        if not isinstance(script, bytes):\n+            script = script.encode()\n+        fi.write(script + b"\\n")\n+    folder.writeFile(meta_bundle + ".css", fi)\n+    logger.info(\'Wrote combined CSS bundle "%s".\' % meta_bundle)\n+\n+\n+def get_override_directory(context):\n+    persistent_directory = queryUtility(IResourceDirectory, name="persistent")\n+    if persistent_directory is None:\n+        return\n+    if OVERRIDE_RESOURCE_DIRECTORY_NAME not in persistent_directory:\n+        persistent_directory.makeDirectory(OVERRIDE_RESOURCE_DIRECTORY_NAME)\n+    return persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n+\n+\n+def combine_bundles(context):\n+    container = get_override_directory(context)\n+    if PRODUCTION_RESOURCE_DIRECTORY not in container:\n+        container.makeDirectory(PRODUCTION_RESOURCE_DIRECTORY)\n+    production_folder = container[PRODUCTION_RESOURCE_DIRECTORY]\n+\n+    # store timestamp\n+    fi = BytesIO()\n+    fi.write(datetime.now().isoformat().encode())\n+    production_folder.writeFile("timestamp.txt", fi)\n+\n+    # generate new combined bundles\n+    write_js(context, production_folder, "default")\n+    write_js(context, production_folder, "logged-in")\n+    write_css(context, production_folder, "default")\n+    write_css(context, production_folder, "logged-in")\n+    logger.info("Finished bundle compilation.")\ndiff --git a/Products/CMFPlone/resources/exportimport/__init__.py b/Products/CMFPlone/resources/exportimport/__init__.py\nnew file mode 100644\nindex 0000000000..e69de29bb2\ndiff --git a/Products/CMFPlone/resources/exportimport/bundles.py b/Products/CMFPlone/resources/exportimport/bundles.py\nnew file mode 100644\nindex 0000000000..f380b846e2\n--- /dev/null\n+++ b/Products/CMFPlone/resources/exportimport/bundles.py\n@@ -0,0 +1,33 @@\n+from ..browser.combine import combine_bundles\n+from plone.registry.interfaces import IRegistry\n+from zope.component import queryUtility\n+\n+\n+def combine(context):\n+    logger = context.getLogger("bundles")\n+    registry = queryUtility(IRegistry)\n+\n+    if registry is None:\n+        logger.info("Cannot find registry")\n+        return\n+\n+    # Look for a keyword in registry.xml or the registry directory.\n+    filepaths = ["registry.xml"]\n+    if context.isDirectory("registry"):\n+        for filename in context.listDirectory("registry"):\n+            filepaths.append("registry/" + filename)\n+    found = False\n+    for filepath in filepaths:\n+        body = context.readDataFile(filepath)\n+        if body is not None and b"IBundleRegistry" in body:\n+            found = True\n+            break\n+    if not found:\n+        return\n+\n+    # Calling combine_bundles used to have as side effect that the\n+    # Content-Type header of the response was set to application/javascript,\n+    # which we do not want.  But that was fixed already in Plone 5.1b2.\n+    # See https://github.com/plone/Products.CMFPlone/pull/1924\n+    site = context.getSite()\n+    combine_bundles(site)\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-24T15:32:49+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/c89bd927e884d11d77a8d5011a5b45b57c5ff74d

Merge pull request #3247 from plone/es6

[WIP] PLIP 3211 - Mockup ES6, remove RequireJS

Files changed:
A Products/CMFPlone/browser/templates/test_rendering_cheatsheet.pt
A Products/CMFPlone/browser/templates/test_rendering_icons.pt
A Products/CMFPlone/resources/utils.py
A Products/CMFPlone/resources/webresource.py
A news/3247-2.breaking
A news/3247.breaking
A news/3247.bugfix
A news/3325.breaking
A news/3351.feature
A news/3440.feature
M Products/CMFPlone/browser/configure.zcml
M Products/CMFPlone/browser/templates/plone-addsite.pt
M Products/CMFPlone/browser/templates/search.pt
M Products/CMFPlone/browser/templates/test_rendering.pt
M Products/CMFPlone/browser/test_rendering.py
M Products/CMFPlone/configure.zcml
M Products/CMFPlone/controlpanel/browser/resourceregistry.pt
M Products/CMFPlone/controlpanel/browser/resourceregistry.py
M Products/CMFPlone/controlpanel/browser/usergroups_usersoverview.pt
M Products/CMFPlone/interfaces/controlpanel.py
M Products/CMFPlone/interfaces/resources.py
M Products/CMFPlone/profiles/dependencies/registry.xml
M Products/CMFPlone/relationhelper.py
M Products/CMFPlone/resources/__init__.py
M Products/CMFPlone/resources/browser/combine.py
M Products/CMFPlone/resources/browser/configure.zcml
M Products/CMFPlone/resources/browser/resource.py
M Products/CMFPlone/skins/plone_scripts/externalEditorEnabled.py
M Products/CMFPlone/tests/robot/robodoc/collaboration-advanced_control.robot
M Products/CMFPlone/tests/robot/robodoc/config-screens.robot
M Products/CMFPlone/tests/robot/robodoc/working_with_tinymce.robot
M Products/CMFPlone/tests/robot/test_actionmenu.robot
M Products/CMFPlone/tests/robot/test_controlpanel_actions.robot
M Products/CMFPlone/tests/robot/test_controlpanel_navigation.robot
M Products/CMFPlone/tests/robot/test_controlpanel_search.robot
M Products/CMFPlone/tests/robot/test_controlpanel_security.robot
M Products/CMFPlone/tests/robot/test_controlpanel_site.robot
M Products/CMFPlone/tests/robot/test_controlpanel_social.robot
M Products/CMFPlone/tests/robot/test_edit_user_schema.robot
M Products/CMFPlone/tests/robot/test_linkintegrity.robot
M Products/CMFPlone/tests/robot/test_overlays.robot
M Products/CMFPlone/tests/robot/test_querystring.robot
M Products/CMFPlone/tests/robot/test_tinymce.robot
M Products/CMFPlone/tests/testResourceRegistries.py
M Products/CMFPlone/tests/test_icons.py
M Products/CMFPlone/tests/test_safe_formatter.py
M Products/CMFPlone/traversal.py
M setup.cfg
M setup.py
D Products/CMFPlone/browser/static/search.js
D Products/CMFPlone/resources/browser/configjs.py
D Products/CMFPlone/resources/browser/cook.py
D Products/CMFPlone/resources/browser/interfaces.py
D Products/CMFPlone/resources/browser/mixins.py
D Products/CMFPlone/resources/browser/scripts.pt
D Products/CMFPlone/resources/browser/scripts.py
D Products/CMFPlone/resources/browser/styles.pt
D Products/CMFPlone/resources/browser/styles.py
D Products/CMFPlone/resources/bundle.py
D Products/CMFPlone/resources/exportimport/resourceregistry.py
D Products/CMFPlone/tests/robot/test_thememapper.robot
D Products/CMFPlone/tests/testCSSandJSRegistry.py
D Products/CMFPlone/tests/test_metabundles.py

b'diff --git a/Products/CMFPlone/browser/configure.zcml b/Products/CMFPlone/browser/configure.zcml\nindex e9989aa94a..726123c677 100644\n--- a/Products/CMFPlone/browser/configure.zcml\n+++ b/Products/CMFPlone/browser/configure.zcml\n@@ -217,11 +217,6 @@\n       for="plone.app.layout.navigation.interfaces.INavigationRoot"\n       />\n \n-  <browser:resource\n-      name="search.js"\n-      file="static/search.js"\n-      />\n-\n   <!-- AtD Support -->\n   <browser:page\n       for="*"\n@@ -277,6 +272,20 @@\n       permission="zope2.View"\n       />\n \n+  <browser:page\n+      name="test-rendering-cheatsheet"\n+      for="*"\n+      class=".test_rendering.TestRenderingCheatsheetView"\n+      permission="zope2.View"\n+      />\n+\n+  <browser:page\n+      name="test-rendering-icons"\n+      for="*"\n+      class=".test_rendering.TestRenderingIconsView"\n+      permission="zope2.View"\n+      />\n+\n   <browser:page\n       for="*"\n       name="iconresolver"\ndiff --git a/Products/CMFPlone/browser/static/search.js b/Products/CMFPlone/browser/static/search.js\ndeleted file mode 100644\nindex 13025eb126..0000000000\n--- a/Products/CMFPlone/browser/static/search.js\n+++ /dev/null\n@@ -1,149 +0,0 @@\n-/* The following line defines global variables defined elsewhere. */\n-/*globals require*/\n-\n-\n-if(require === undefined){\n-  require = function(reqs, torun){\n-    \'use strict\';\n-    return torun(window.jQuery);\n-  };\n-}\n-\n-require([\n-  \'jquery\',\n-], function($) {\n-  \'use strict\';\n-\n-  var $loader = $(\'.plone-loader\');\n-  if($loader.length === 0){\n-    $loader = $(\'<div class="plone-loader"><div class="spinner-border text-secondary" role="status"></div></div>\');\n-    $(\'body\').append($loader);\n-  }\n-\n-  var $filter = $(\'#search-filter\');\n-  var $filterBtn = $(\'#search-filter-toggle\', $filter);\n-  var $advSearchInput = $(\'#advanced-search-input\');\n-  var $ctSelectAll = $(\'#pt_toggle\');\n-  var $selectAllContainer = $(\'.search-type-options\');\n-  var $sortingContainer = $(\'#sorting-options\');\n-\n-\n-  /* handle history */\n-  if (window.history && window.history.pushState){\n-    $(window).bind(\'popstate\', function () {\n-      /* we\'re just going to cheat and reload the page so\n-         we aren\'t keep moving around state here..\n-         Here, I\'m lazy, we\'re not using react here... */\n-      window.location = window.location.href;\n-    });\n-  }\n-\n-  var pushHistory = function(){\n-    if(window.history && window.history.pushState){\n-      var url = window.location.origin + window.location.pathname + \'?\' + $(\'#searchform\').serialize();\n-      window.history.pushState(null, null, url);\n-    }\n-  };\n-\n-  var timeout = 0;\n-  var search = function(){\n-    $loader.show();\n-    pushHistory();\n-    $.ajax({\n-      url: window.location.origin + window.location.pathname + \'?ajax_load=1\',\n-      data: $(\'#searchform\').serialize()\n-    }).done(function(html){\n-      var $html = $(html);\n-      $(\'#search-results\').replaceWith($(\'#search-results\', $html));\n-      $(\'#search-term\').replaceWith($(\'#search-term\', $html));\n-      $(\'#results-count\').replaceWith($(\'#results-count\', $html));\n-      $loader.hide();\n-    });\n-  };\n-  var searchDelayed = function(){\n-    clearTimeout(timeout);\n-    timeout = setTimeout(search, 200);\n-  };\n-\n-  var setBatchStart = function(b_start){\n-    $("#search-batch-start").attr("value", b_start);\n-  };\n-\n-  // for sorme reason the backend always flag with active class the sorting options\n-  var updateSortingState = function($el){\n-    $(\'a\', $sortingContainer).removeClass(\'active\');\n-    $el.addClass(\'active\');\n-  };\n-  var default_sort = $(\'#search-results\').attr(\'data-default-sort\');\n-  updateSortingState($(\'a[data-sort=\'+default_sort+\']\'));\n-\n-  /* sorting */\n-  $(\'a\', $sortingContainer).click(function(e){\n-    e.preventDefault();\n-    updateSortingState($(this));\n-    var sort = $(this).attr(\'data-sort\');\n-    var order = $(this).attr(\'data-order\');\n-    if(sort){\n-      $(\'[name="sort_on"]\').attr(\'value\', sort);\n-      if(order && order == \'reverse\'){\n-        $(\'[name="sort_order"]\').attr(\'value\', \'reverse\');\n-      }else{\n-        $(\'[name="sort_order"]\').attr(\'value\', \'\');\n-      }\n-    }else{\n-      $(\'[name="sort_on"]\').attr(\'value\', \'\');\n-      $(\'[name="sort_order"]\').attr(\'value\', \'\');\n-    }\n-    search();\n-  });\n-\n-\n-  /* form submission */\n-  $(\'.searchPage\').submit(function(e){\n-    e.preventDefault();\n-    setBatchStart("0");\n-    search();\n-  });\n-\n-\n-  /* filters */\n-  $filterBtn.click(function(e){\n-    e.preventDefault();\n-    $filter.toggleClass(\'activated\');\n-    if($filter.hasClass(\'activated\')){\n-      $advSearchInput.attr(\'value\', \'True\');\n-    }else{\n-      $advSearchInput.attr(\'value\', \'False\');\n-    }\n-  });\n-\n-  $ctSelectAll.change(function(){\n-    if($ctSelectAll[0].checked){\n-      $(\'input\', $selectAllContainer).each(function(){\n-        this.checked = true;\n-      });\n-    }else{\n-      $(\'input\', $selectAllContainer).each(function(){\n-        this.checked = false;\n-      });\n-    }\n-  });\n-\n-  $(\'input\', $filter).change(function(){\n-    setBatchStart("0");\n-    searchDelayed();\n-  });\n-\n-  /* pagination */\n-  $("#searchform").on("click", ".pagination a", function(e) {\n-    var urlParams = new URLSearchParams($(e.currentTarget).attr("href")),\n-        b_start = urlParams.get("b_start:int");\n-    if(!b_start) {\n-      // not plone pagination\n-      return;\n-    }\n-    e.preventDefault();\n-    setBatchStart(b_start);\n-    search();\n-  })\n-});\ndiff --git a/Products/CMFPlone/browser/templates/plone-addsite.pt b/Products/CMFPlone/browser/templates/plone-addsite.pt\nindex 9bd9ce862b..7dff6a74c5 100644\n--- a/Products/CMFPlone/browser/templates/plone-addsite.pt\n+++ b/Products/CMFPlone/browser/templates/plone-addsite.pt\n@@ -75,7 +75,7 @@\n           <div class="col-md-12 mb-3">\n             <label for="default_language" class="form-label" i18n:translate="">Language</label>\n \n-            <select name="default_language" class="form-control"\n+            <select name="default_language" class="form-select"\n                     tal:define="browser_language view/browser_language;\n                                 grouped_languages python:view.grouped_languages(browser_language)">\n               <optgroup tal:repeat="group grouped_languages"\n@@ -105,7 +105,7 @@\n \n             <select id="portal_timezone"\n                     name="portal_timezone"\n-                    class="form-control"\n+                    class="form-select"\n                     tal:define="tz_list view/timezones">\n               <optgroup tal:repeat="group tz_list"\n                         tal:attributes="label group">\ndiff --git a/Products/CMFPlone/browser/templates/search.pt b/Products/CMFPlone/browser/templates/search.pt\nindex 1031272371..ef4d271e8d 100644\n--- a/Products/CMFPlone/browser/templates/search.pt\n+++ b/Products/CMFPlone/browser/templates/search.pt\n@@ -32,7 +32,7 @@\n           id="searchform"\n           action="@@search"\n           role="search"\n-          class="searchPage pat-formautofocus"\n+          class="searchPage pat-formautofocus pat-search"\n           tal:define="portal context/@@plone_portal_state/portal;\n                       first_call not:request/advanced_search|nothing;\n                       st python:request.get(\'SearchableText\', \'\');\n@@ -310,8 +310,6 @@\n         </div>\n \n     </form>\n-\n-    <script type="text/javascript" src="${context/portal_url}/++resource++search.js"></script>\n   </div>\n \n </body>\ndiff --git a/Products/CMFPlone/browser/templates/test_rendering.pt b/Products/CMFPlone/browser/templates/test_rendering.pt\nindex 6fe6ebd04d..55793fa423 100644\n--- a/Products/CMFPlone/browser/templates/test_rendering.pt\n+++ b/Products/CMFPlone/browser/templates/test_rendering.pt\n@@ -6,6 +6,22 @@\n \n   <metal:main fill-slot="main">\n \n+    <style>\n+\n+    </style>\n+\n+    <ul class="nav nav-tabs mb-3">\n+      <li class="nav-item">\n+        <a class="nav-link active" href="${portal_url}/@@test-rendering">Test Rendering</a>\n+      </li>\n+      <li class="nav-item">\n+        <a class="nav-link" href="${portal_url}/@@test-rendering-cheatsheet">Bootstrap Cheatsheet</a>\n+      </li>\n+      <li class="nav-item">\n+        <a class="nav-link" href="${portal_url}/@@test-rendering-icons">Icons</a>\n+      </li>\n+    </ul>\n+\n     <h1>Plone User Interface elements test page</h1>\n \n     <p class="lead">\n@@ -15,525 +31,33 @@\n       bad behaviour on this front.\n     </p>\n \n-    <p>Check out Bootstrap\'s <a href="https://getbootstrap.com/docs/4.5/getting-started/introduction/" target="_blank" title="Bootstrap Documentation">Documentation</a> and examples for Bootstrap typography, including global settings, headings, body text, lists, and more. Everything is available in Plone now!</p>\n-\n-    <h1>Headings</h1>\n-\n-    <p>All HTML headings, &lt;h1&gt; through &lt;h6&gt;, are available. .h1 through .h6 classes are also available, for when you want to match the font styling of a heading but cannot use the associated HTML element.</p>\n-\n-    <h1>h1. Bootstrap heading</h1>\n-    <h2>h2. Bootstrap heading</h2>\n-    <h3>h3. Bootstrap heading</h3>\n-    <h4>h4. Bootstrap heading</h4>\n-    <h5>h5. Bootstrap heading</h5>\n-    <h6>h6. Bootstrap heading</h6>\n-\n-    <h1>Icons</h1>\n-\n-    <p>Description to explain icon resolver</p>\n-\n-\n-    <h2>Get Icon URL</h2>\n-\n-    <p>\n-      <code>&lt;img src="" tal:attributes="src python:icons.url(\'alarm\')" class="custom-class" alt="foo" /&gt;</code>\n-    </p>\n-\n-    <p>\n-      <img src="${python:icons.url(\'alarm\')}" class="custom-class" alt="foo" />\n-    </p>\n-\n-    <h2>Get Icon Tag</h2>\n-\n-    <p>\n-      <code>&lt;tal:icon tal:replace="structure python:icons.tag(\'archive\', tag_class=\'custom-class\', tag_alt=\'foobar\')" /&gt;</code>\n-    </p>\n-\n-    <p>\n-      <tal:icon tal:replace="structure python:icons.tag(\'archive\', tag_class=\'custom-class\', tag_alt=\'foobar\')" />\n-    </p>\n-\n-    <tal:comment tal:replace="nothing">\n-    <div id="content-core">\n-      <pre>Headlines</pre>\n-\n-      <h1>Headline h1</h1>\n-      <p>And a paragraph</p>\n-      <h2>Headline h2</h2>\n-      <p>And a paragraph</p>\n-      <h3>Headline h3</h3>\n-      <p>And a paragraph</p>\n-      <h4>Headline h4</h4>\n-      <p>And a paragraph</p>\n-      <h5>Headline h5</h5>\n-      <p>And a paragraph</p>\n-      <h6>Headline h6</h6>\n-\n-      <pre>Example document rendering</pre>\n-\n-      <div class="portalMessage info" role="status">\n-        <strong>\n-          Info\n-        </strong>\n-        <span tal:omit-tag="">\n-          The portalMessage class, can also contain <a href="#">links</a> - used to\n-          give the user temporary status messages.\n-        </span>\n-      </div>\n-\n-      <dl class="portalMessage error" role="alert">\n-        <dt>\n-          Error\n-        </dt>\n-        <dd>\n-          The portalMessage \'error\' class, can also contain <a href="#">links</a> - used to\n-          give the user temporary status messages.\n-        </dd>\n-      </dl>\n-\n-      <dl class="portalMessage warning" role="status">\n-        <dt>\n-          Warning\n-        </dt>\n-        <dd>\n-          The portalMessage \'warning\' class, can also contain <a href="#">links</a> - used to\n-          give the user temporary status messages.\n-        </dd>\n-      </dl>\n-\n-      <h1 class="documentFirstHeading">Document Headline</h1>\n-\n-      <div id="plone-document-byline" class="documentByLine">\n-        <span class="documentAuthor">\n-          by\n-          <a href="http://localhost:8080/Plone/author/admin">admin</a>\n-        </span>\n-\n-        <span class="documentModified">\n-          &mdash;\n-          <span>\n-            last modified\n-          </span>\n-          May 21, 2010 10:02 AM\n-        </span>\n-\n-        <span id="content-history" class="contentHistory">\n-          &mdash;\n-          <a href="http://localhost:8080/Plone/front-page/@@historyview" rel="#pb_4" class="link-overlay"\n-            style="cursor: pointer;">History</a>\n-        </span>\n-      </div>\n-\n-      <div class="documentDescription">\n-        The document description\n-      </div>\n-\n-      <p>\n-        Normal document body text,\n-        <strong>strong text</strong>,\n-        <em>emphasised text</em>,\n-        Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Quisque odio sem, aliquam ut, suscipit at,\n-        aliquet non, justo. Vestibulum vitae urna et mi volutpat luctus. Nulla auctor, lacus ut consectetuer\n-        sagittis, erat odio vulputate sapien, eu placerat diam mauris id turpis. Aenean quis ipsum. Cum sociis\n-        natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Pellentesque rutrum. Sed\n-        mattis turpis sit amet ipsum viverra pharetra. Nunc facilisis, augue non dapibus gravida, risus quam\n-        vulputate quam, non venenatis dui massa in leo. Maecenas scelerisque dapibus libero. Suspendisse\n-        potenti.\n-        example <a href="#">Normal internal site link</a> inside a paragraph,\n-        example <a href="http://plone.org">External link to plone.org</a>,\n-        example <a href="https://plone.org">Secure (HTTPS) link to plone.org</a>,\n-        example <a href="mailto:some@address">Mailto link</a>,\n-        example <a href="ftp://some.site">FTP link</a>,\n-        example <a href="news://some.site">NNTP (news) link</a>,\n-        example <a href="webcal://some.site">WebCal link</a>,\n-        example <a href="feed://some.site">RSS feed link</a>,\n-        example <a href="irc://some.network/#channel">IRC link</a>.\n-      </p>\n-\n-      <ul>\n-        <li>Unordered list element 1\n-          <ul>\n-            <li>Unordered list subelement 1</li>\n-          </ul>\n-        </li>\n-        <li>Unordered list element 2</li>\n-        <li>Unordered list element 3</li>\n-      </ul>\n-\n-      <ol>\n-        <li>Ordered list element 1\n-          <ol>\n-            <li>Ordered list subelement 1</li>\n-          </ol>\n-        </li>\n-        <li>Ordered list element 2</li>\n-        <li>Ordered list element 3</li>\n-      </ol>\n-\n-      <dl>\n-        <dt>Definition list term</dt>\n-        <dd>Definition List description, Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Quisque odio\n-          sem, aliquam ut, suscipit at, aliquet non, justo.\n-        </dd>\n-        <dd>Another Definition List description, Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\n-          Quisque odio sem, aliquam ut, suscipit at, aliquet non, justo.\n-        </dd>\n-      </dl>\n-\n-      <h3>Definition List deprecation</h3>\n-\n-      As of Plone 5, we try to get rid of Definition Lists where they don\'t act as\n-      definition lists. We replace them in the following manners.\n-\n-\n-      <h4>in portal messages</h4>\n-\n-      <div class="portalMessage info" role="status">\n-        <strong>Not important</strong>\n-        This message is here to tell you something went just as you expected.\n-      </div>\n-      <div class="portalMessage warning" role="status">\n-        <strong>You might run into problems</strong>\n-        Please check your settings, be sure what you\'re doing is right.\n-      </div>\n-      <div class="portalMessage error" role="alert">\n-        <strong>Something went wrong</strong>\n-        This is bad, you must notice this.\n-      </div>\n-\n-      <h4>in listings</h4>\n-\n-      <div>\n-        <article>\n-          <heading><a href="">Item one</a></heading>\n-          <p>Description</p>\n-        </article>\n-        <article>\n-          <heading><a href="">Item two</a></heading>\n-          <p>Description</p>\n-        </article>\n-      </div>\n-\n-      <h2>\n-        Table of class <code>listing</code>\n-      </h2>\n-\n-      <table class="listing" id="someid" summary="Sortable table example">\n-        <!-- By giving a table an ID, it gets the sortable option.\n-         Use class="nosort" to override on a table or column basis. -->\n-        <thead>\n-          <tr>\n-            <th>Table heading</th>\n-            <th>Another heading (sortable, click to sort)</th>\n-            <th class="nosort">Fixed column (not sortable)</th>\n-          </tr>\n-        </thead>\n-        <tbody>\n-          <tr class="odd">\n-            <td>Odd table item</td>\n-            <td>Item 1</td>\n-            <td>Another item</td>\n-          </tr>\n-          <tr class="even">\n-            <td>Even table item</td>\n-            <td>Item 2</td>\n-            <td>Yet another item</td>\n-          </tr>\n-          <tr class="odd">\n-            <td>Odd table item</td>\n-            <td>Item 3</td>\n-            <td>And one more item</td>\n-          </tr>\n-        </tbody>\n-      </table>\n-\n-      <h2>\n-        Table of class <code>vertical listing</code>\n-      </h2>\n-\n-      <table class="vertical listing" summary="Vertical listing example">\n-        <tbody>\n-          <tr>\n-            <th>Table heading</th>\n-            <td>Odd table item</td>\n-          </tr>\n-          <tr>\n-            <th>Another heading</th>\n-            <td>Even table item</td>\n-          </tr>\n-        </tbody>\n-      </table>\n-\n-      <h2>Forms</h2>\n-\n-      <form>\n-        <fieldset>\n-          <legend>Fieldset legend</legend>\n-\n-          <div class="field">\n-            <label for="onefield">Text field</label>\n-            <span class="fieldRequired" title="Required" i18n:attributes="title title_required;"\n-              i18n:translate="label_required">(Required)</span>\n-            <div class="formHelp">\n-              This is the help for this form field. And <a href="#">links are also possible</a>.\n-            </div>\n-            <input type="text" id="onefield" value="Some content" />\n-          </div>\n-          <div class="field error">\n-            <label for="anotherfield">Text field with error</label>\n-            <span class="fieldRequired" title="Required" i18n:attributes="title title_required;"\n-              i18n:translate="label_required">(Required)</span>\n-            <div class="formHelp">\n-              This field is just here to demonstrate an error message.\n-            </div>\n-            <div>This is the error message.</div>\n-            <input type="text" id="anotherfield" value="Some content" />\n-          </div>\n-          <div class="field">\n-            <label for="onecheckbox">Checkbox</label>\n-            <span class="fieldRequired" title="Required" i18n:attributes="title title_required;"\n-              i18n:translate="label_required">(Required)</span>\n-            <div class="formHelp">\n-              This is a checkbox field.\n-            </div>\n-            <input type="checkbox" id="onecheckbox" />\n-          </div>\n-          <div class="field error">\n-            <label for="anothercheckbox">Checkbox with error</label>\n-            <span class="fieldRequired" title="Required" i18n:attributes="title title_required;"\n-              i18n:translate="label_required">(Required)</span>\n-            <div class="formHelp">\n-              This checkbox field is just here to demonstrate an error message.\n-            </div>\n-            <div>This is the error message.</div>\n-            <input type="checkbox" id="anothercheckbox" />\n-          </div>\n-          <div class="field">\n-            <label for="onestylishcheckbox">Checkbox without border</label>\n-            <span class="fieldRequired" title="Required" i18n:attributes="title title_required;"\n-              i18n:translate="label_required">(Required)</span>\n-            <div class="formHelp">\n-              This is a checkbox field.\n-            </div>\n-            <input type="checkbox" class="noborder" id="onestylishcheckbox" />\n-          </div>\n-          <div class="field error">\n-            <label for="anotherstylishcheckbox">\n-              Checkbox without border with error</label>\n-            <span class="fieldRequired" title="Required" i18n:attributes="title title_required;"\n-              i18n:translate="label_required">(Required)</span>\n-            <div class="formHelp">\n-              This checkbox field is just here to demonstrate an error message.\n-            </div>\n-            <div>This is the error message.</div>\n-            <input type="checkbox" class="noborder" id="anotherstylishcheckbox" />\n-          </div>\n-          <div class="field">\n-            <label>Radio</label>\n-            <span class="fieldRequired" title="Required" i18n:attributes="title title_required;"\n-              i18n:translate="label_required">(Required)</span>\n-            <div class="formHelp">\n-              This is a checkbox field.\n-            </div>\n-            <label>First\n-              <input class="noborder" type="radio" name="radio_group1" />\n-            </label>\n-            <br />\n-            <label>Second\n-              <input class="noborder" type="radio" name="radio_group1" />\n-            </label>\n-            <br />\n-            <label>Third\n-              <input class="noborder" type="radio" name="radio_group1" />\n-            </label>\n-            <br />\n-          </div>\n-          <div class="field error">\n-            <label>Radio with error</label>\n-            <span class="fieldRequired" title="Required" i18n:attributes="title title_required;"\n-              i18n:translate="label_required">(Required)</span>\n-            <div class="formHelp">\n-              This checkbox field is just here to demonstrate an error message.\n-            </div>\n-            <div>This is the error message.</div>\n-            <label>First\n-              <input class="noborder" type="radio" name="radio_group2" />\n-            </label>\n-            <br />\n-            <label>Second\n-              <input class="noborder" type="radio" name="radio_group2" />\n-            </label>\n-            <br />\n-            <label>Third\n-              <input class="noborder" type="radio" name="radio_group2" />\n-            </label>\n-            <br />\n-          </div>\n-          <div class="formControls">\n-            <input class="context" type="submit" value="Context submit" />\n-            <input class="standalone" type="submit" value="Standalone submit" />\n-            <input class="destructive" type="submit" value="Destructive submit" />\n-            <input type="submit" value="Submit" />\n-          </div>\n-          <div class="formControls">\n-            <input class="context" type="button" value="Context button" />\n-            <input class="standalone" type="button" value="Standalone button" />\n-            <input class="destructive" type="button" value="Destructive button" />\n-            <input type="button" value="Button" />\n-          </div>\n-        </fieldset>\n-      </form>\n-\n-      <h2>Table with form elements</h2>\n-\n-      <form>\n-        <table id="sortable" class="listing" summary="Content listing" cellpadding="0" cellspacing="0">\n-          <thead>\n-            <tr>\n-              <th class="nosort">\n-                <input class="noborder" type="checkbox" src="select_all_icons.png" name="selectButton"\n-                  title="Select all items" onClick="toggleSelect(this,\'paths:list\');"\n-                  tal:attributes="src string:${context/portal_url}/select_all_icons.png" alt="Select all items"\n-                  i18n:attributes="title label_select_all_items; alt label_select_all_items;" />\n-              </th>\n-              <th>&nbsp;Title&nbsp;</th>\n-              <th>&nbsp;Stuff&nbsp;</th>\n-            </tr>\n-          </thead>\n-          <tbody>\n-            <tr class="odd">\n-              <td>\n-                <input type="checkbox" class="noborder" name="paths:list" id="#" value="#" />\n-              </td>\n-              <td><a href="#">Title</a></td>\n-              <td>with class noborder</td>\n-            </tr>\n-            <tr class="even">\n-              <td>\n-                <input type="checkbox" class="noborder" name="paths:list" id="#" value="#" />\n-              </td>\n-              <td><a href="#">Title</a></td>\n-              <td>with class noborder</td>\n-            </tr>\n-          </tbody>\n-        </table>\n-      </form>\n-\n-      <div>\n-        <h2>Collapsible form</h2>\n-        <form id="searchform" name="search" method="get" class="pat-formautofocus" action="search">\n-\n-          <div class="field collapsible">\n-            <label class="collapser collapsed" for="created">New items since</label>\n-\n-            <div class="collapse" style="display: none;">\n-              <div class="formHelp">\n-                Return items added since you were last logged on, the last week, etc.\n-              </div>\n-\n-\n-              <select id="created" name="created:list:date">\n-                <option value="2010/09/06 17:50:45.971272 GMT-7">Last log-in</option>\n-                <option value="2010/09/05"> Yesterday </option>\n-                <option value="2010/08/30"> Last week </option>\n-                <option value="2010/08/06"> Last month </option>\n-                <option selected="selected" class="default_option" value="1970/02/01"> Ever </option>\n-              </select>\n-\n-            </div>\n-\n-          </div>\n-\n-\n-          <div class="field collapsible">\n-            <label class="collapser collapsed" for="Creator">Author</label>\n-\n-            <div class="collapse" style="display: none;">\n-              <div class="formHelp">\n-                Return items created by a particular person.\n-              </div>\n-\n-\n-              <select id="Creator" name="Creator">\n-                <option class="default_option" value="">Any Author</option>\n-\n-                <option value="admin">admin</option>\n-\n-              </select>\n-            </div>\n-          </div>\n-\n-          <div id="clear-space-before-submit" class="visualClear">\n-            <!-- -->\n-          </div>\n-\n-        </form>\n-      </div>\n-\n-      <div>\n-        <h2>Select All/None</h2>\n-        <form id="searchform" name="search" method="get" class="pat-formautofocus" action="search">\n-          <div>\n-            <label>Item type</label>\n-          </div>\n-          <div class="formHelp">\n-            Return items of a specific type.\n-          </div>\n-          <span class="optionsToggle">\n-            <input type="checkbox" checked="checked" class="noborder" id="pt_toggle" value="#" name="pt_toggle"\n-              onclick="javascript:toggleSelect(this, \'portal_type:list\', true)"\n-              src="http://localhost:8080/Plone/select_all_icons.png">\n-            <label for="pt_toggle">Select All/None</label>\n-          </span>\n-          <br>\n-          <div style="float: left; margin-right: 2em;">\n-            <input type="checkbox" id="portal_type_1_1" checked="checked" class="noborder" value="Document"\n-              name="portal_type:list">\n-            <label for="portal_type_1_1">Page</label>\n-            <br>\n-            <input type="checkbox" id="portal_type_1_2" checked="checked" class="noborder" value="Folder"\n-              name="portal_type:list">\n-            <label for="portal_type_1_2">Folder</label>\n-            <br>\n-          </div>\n-          <div style="float: left; margin-right: 2em;">\n-            <input type="checkbox" id="portal_type_2_1" checked="checked" class="noborder" value="Topic"\n-              name="portal_type:list">\n-            <label for="portal_type_2_1">Collection</label>\n-            <br>\n-          </div>\n-        </form>\n-        <div class="visualClear"></div>\n-      </div>\n-\n-\n-      <div>\n-        <h2>Action menu</h2>\n-        <dl class="actionMenu" id="actioMenuDemo">\n-          <dt class="actionMenuHeader">\n-            <a href="#">Action menu title</a>\n-          </dt>\n-          <dd class="actionMenuContent">\n-            Menu content\n-          </dd>\n-        </dl>\n-      </div>\n-\n-      <div>\n-        <h2>Collapsible section</h2>\n-        <dl class="collapsible">\n-          <dt class="collapsibleHeader">\n-            Collapsible section title\n-          </dt>\n-          <dd class="collapsibleContent">\n-            Collapsible section content\n-          </dd>\n-        </dl>\n-      </div>\n-\n+    <h2 class="mt-5">Alerts</h2>\n+    <p><a href="https://getbootstrap.com/docs/5.1/components/alerts/">https://getbootstrap.com/docs/5.1/components/alerts/</a></p>\n \n+    <div class="alert alert-primary" role="alert">\n+      <span>Mollit minim ullamco aliqua do culpa amet ullamco eu tempor. <a href="http://localhost:8080/Plone27/docs/edit">nulla proident velit</a></span>\n+    </div>\n+    <div class="alert alert-secondary" role="alert">\n+      <span>Mollit minim ullamco aliqua do culpa amet ullamco eu tempor. <a href="http://localhost:8080/Plone27/docs/edit">nulla proident velit</a></span>\n+    </div>\n+    <div class="alert alert-success" role="alert">\n+      <span>Mollit minim ullamco aliqua do culpa amet ullamco eu tempor. <a href="http://localhost:8080/Plone27/docs/edit">nulla proident velit</a></span>\n+    </div>\n+    <div class="alert alert-info" role="alert">\n+      <span>Mollit minim ullamco aliqua do culpa amet ullamco eu tempor. <a href="http://localhost:8080/Plone27/docs/edit">nulla proident velit</a></span>\n+    </div>\n+    <div class="alert alert-warning" role="alert">\n+      <span>Mollit minim ullamco aliqua do culpa amet ullamco eu tempor. <a href="http://localhost:8080/Plone27/docs/edit">nulla proident velit</a></span>\n+    </div>\n+    <div class="alert alert-danger" role="alert">\n+      <span>Mollit minim ullamco aliqua do culpa amet ullamco eu tempor. <a href="http://localhost:8080/Plone27/docs/edit">nulla proident velit</a></span>\n+    </div>\n+    <div class="alert alert-light" role="alert">\n+      <span>Mollit minim ullamco aliqua do culpa amet ullamco eu tempor. <a href="http://localhost:8080/Plone27/docs/edit">nulla proident velit</a></span>\n+    </div>\n+    <div class="alert alert-dark" role="alert">\n+      <span>Mollit minim ullamco aliqua do culpa amet ullamco eu tempor. <a href="http://localhost:8080/Plone27/docs/edit">nulla proident velit</a></span>\n     </div>\n-    </tal:comment>\n \n   </metal:main>\n \ndiff --git a/Products/CMFPlone/browser/templates/test_rendering_cheatsheet.pt b/Products/CMFPlone/browser/templates/test_rendering_cheatsheet.pt\nnew file mode 100644\nindex 0000000000..d22c353640\n--- /dev/null\n+++ b/Products/CMFPlone/browser/templates/test_rendering_cheatsheet.pt\n@@ -0,0 +1,1695 @@\n+<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" xmlns:tal="http://xml.zope.org/namespaces/tal"\n+  xmlns:metal="http://xml.zope.org/namespaces/metal" xmlns:i18n="http://xml.zope.org/namespaces/i18n" lang="en"\n+  metal:use-macro="context/@@main_template/macros/master" i18n:domain="plone">\n+\n+<body>\n+\n+  <metal:main fill-slot="main">\n+\n+    <style>\n+\n+      .bd-cheatsheet h2,\n+      .bd-cheatsheet .bd-heading\n+        {\n+          padding: 1em 0;\n+          background-color: #fff;\n+        }\n+\n+    </style>    \n+\n+    <ul class="nav nav-tabs mb-3">\n+      <li class="nav-item">\n+        <a class="nav-link" href="${portal_url}/@@test-rendering">Test Rendering</a>\n+      </li>\n+      <li class="nav-item">\n+        <a class="nav-link active" href="${portal_url}/@@test-rendering-cheatsheet">Bootstrap Cheatsheet</a>\n+      </li>\n+      <li class="nav-item">\n+        <a class="nav-link" href="${portal_url}/@@test-rendering-icons">Icons</a>\n+      </li>\n+    </ul>\n+\n+    <h1>Bootstrap Cheatsheet</h1>\n+\n+    <p class="lead">\n+      Kitchen sink of Bootstrap components. This page is borrowd from the <a href="https://getbootstrap.com/docs/5.1/examples/cheatsheet/" target="_blank">Bootstrap Examples Cheatsheet"</a>.\n+    </p>\n+\n+    <!--\n+      \n+      Todos to fix markup\n+\n+      Change <div class="bd-cheatsheet container-fluid bg-body"> to <div class="bd-cheatsheet bg-body">\n+      Search and replace /docs/5.1 by https://getbootstrap.com/docs/5.1\n+    \n+    -->\n+\n+    <!-- Bootstrap Cheatsheet -->\n+\n+    <div class="bd-cheatsheet bg-body">\n+      <section id="content">\n+        <h2 class="sticky-xl-top fw-bold pt-3 pt-xl-5 pb-2 pb-xl-3">Contents</h2>\n+\n+        <article class="my-3" id="typography">\n+\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Typography</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/content/typography/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <p class="display-1">Display 1</p>\n+            <p class="display-2">Display 2</p>\n+            <p class="display-3">Display 3</p>\n+            <p class="display-4">Display 4</p>\n+            <p class="display-5">Display 5</p>\n+            <p class="display-6">Display 6</p>\n+            </div>\n+\n+            <div class="bd-example">\n+            <p class="h1">Heading 1</p>\n+            <p class="h2">Heading 2</p>\n+            <p class="h3">Heading 3</p>\n+            <p class="h4">Heading 4</p>\n+            <p class="h5">Heading 5</p>\n+            <p class="h6">Heading 6</p>\n+            </div>\n+\n+            <div class="bd-example">\n+            <p class="lead">\n+              This is a lead paragraph. It stands out from regular paragraphs.\n+            </p>\n+            </div>\n+\n+            <div class="bd-example">\n+            <p>You can use the mark tag to <mark>highlight</mark> text.</p>\n+            <p><del>This line of text is meant to be treated as deleted text.</del></p>\n+            <p><s>This line of text is meant to be treated as no longer accurate.</s></p>\n+            <p><ins>This line of text is meant to be treated as an addition to the document.</ins></p>\n+            <p><u>This line of text will render as underlined.</u></p>\n+            <p><small>This line of text is meant to be treated as fine print.</small></p>\n+            <p><strong>This line rendered as bold text.</strong></p>\n+            <p><em>This line rendered as italicized text.</em></p>\n+            </div>\n+\n+            <div class="bd-example">\n+            <blockquote class="blockquote">\n+              <p>A well-known quote, contained in a blockquote element.</p>\n+              <footer class="blockquote-footer">Someone famous in <cite title="Source Title">Source Title</cite></footer>\n+            </blockquote>\n+            </div>\n+\n+            <div class="bd-example">\n+            <ul class="list-unstyled">\n+              <li>This is a list.</li>\n+              <li>It appears completely unstyled.</li>\n+              <li>Structurally, it\'s still a list.</li>\n+              <li>However, this style only applies to immediate child elements.</li>\n+              <li>Nested lists:\n+                <ul>\n+                  <li>are unaffected by this style</li>\n+                  <li>will still show a bullet</li>\n+                  <li>and have appropriate left margin</li>\n+                </ul>\n+              </li>\n+              <li>This may still come in handy in some situations.</li>\n+            </ul>\n+            </div>\n+\n+            <div class="bd-example">\n+            <ul class="list-inline">\n+              <li class="list-inline-item">This is a list item.</li>\n+              <li class="list-inline-item">And another one.</li>\n+              <li class="list-inline-item">But they\'re displayed inline.</li>\n+            </ul>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="images">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Images</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/content/images/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <svg class="bd-placeholder-img bd-placeholder-img-lg img-fluid" width="100%" height="250" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: Responsive image" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#868e96"/><text x="50%" y="50%" fill="#dee2e6" dy=".3em">Responsive image</text></svg>\n+\n+            </div>\n+\n+            <div class="bd-example">\n+            <svg class="bd-placeholder-img img-thumbnail" width="200" height="200" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="A generic square placeholder image with a white border around it, making it resemble a photograph taken with an old instant camera: 200x200" preserveAspectRatio="xMidYMid slice" focusable="false"><title>A generic square placeholder image with a white border around it, making it resemble a photograph taken with an old instant camera</title><rect width="100%" height="100%" fill="#868e96"/><text x="50%" y="50%" fill="#dee2e6" dy=".3em">200x200</text></svg>\n+\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="tables">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Tables</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/content/tables/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <table class="table table-striped">\n+              <thead>\n+              <tr>\n+                <th scope="col">#</th>\n+                <th scope="col">First</th>\n+                <th scope="col">Last</th>\n+                <th scope="col">Handle</th>\n+              </tr>\n+              </thead>\n+              <tbody>\n+              <tr>\n+                <th scope="row">1</th>\n+                <td>Mark</td>\n+                <td>Otto</td>\n+                <td>@mdo</td>\n+              </tr>\n+              <tr>\n+                <th scope="row">2</th>\n+                <td>Jacob</td>\n+                <td>Thornton</td>\n+                <td>@fat</td>\n+              </tr>\n+              <tr>\n+                <th scope="row">3</th>\n+                <td colspan="2">Larry the Bird</td>\n+                <td>@twitter</td>\n+              </tr>\n+              </tbody>\n+            </table>\n+            </div>\n+\n+            <div class="bd-example">\n+            <table class="table table-dark table-borderless">\n+              <thead>\n+              <tr>\n+                <th scope="col">#</th>\n+                <th scope="col">First</th>\n+                <th scope="col">Last</th>\n+                <th scope="col">Handle</th>\n+              </tr>\n+              </thead>\n+              <tbody>\n+              <tr>\n+                <th scope="row">1</th>\n+                <td>Mark</td>\n+                <td>Otto</td>\n+                <td>@mdo</td>\n+              </tr>\n+              <tr>\n+                <th scope="row">2</th>\n+                <td>Jacob</td>\n+                <td>Thornton</td>\n+                <td>@fat</td>\n+              </tr>\n+              <tr>\n+                <th scope="row">3</th>\n+                <td colspan="2">Larry the Bird</td>\n+                <td>@twitter</td>\n+              </tr>\n+              </tbody>\n+            </table>\n+            </div>\n+\n+            <div class="bd-example">\n+            <table class="table table-hover">\n+              <thead>\n+              <tr>\n+                <th scope="col">Class</th>\n+                <th scope="col">Heading</th>\n+                <th scope="col">Heading</th>\n+              </tr>\n+              </thead>\n+              <tbody>\n+              <tr>\n+                <th scope="row">Default</th>\n+                <td>Cell</td>\n+                <td>Cell</td>\n+              </tr>\n+              \n+              <tr class="table-primary">\n+                <th scope="row">Primary</th>\n+                <td>Cell</td>\n+                <td>Cell</td>\n+              </tr>\n+              <tr class="table-secondary">\n+                <th scope="row">Secondary</th>\n+                <td>Cell</td>\n+                <td>Cell</td>\n+              </tr>\n+              <tr class="table-success">\n+                <th scope="row">Success</th>\n+                <td>Cell</td>\n+                <td>Cell</td>\n+              </tr>\n+              <tr class="table-danger">\n+                <th scope="row">Danger</th>\n+                <td>Cell</td>\n+                <td>Cell</td>\n+              </tr>\n+              <tr class="table-warning">\n+                <th scope="row">Warning</th>\n+                <td>Cell</td>\n+                <td>Cell</td>\n+              </tr>\n+              <tr class="table-info">\n+                <th scope="row">Info</th>\n+                <td>Cell</td>\n+                <td>Cell</td>\n+              </tr>\n+              <tr class="table-light">\n+                <th scope="row">Light</th>\n+                <td>Cell</td>\n+                <td>Cell</td>\n+              </tr>\n+              <tr class="table-dark">\n+                <th scope="row">Dark</th>\n+                <td>Cell</td>\n+                <td>Cell</td>\n+              </tr>\n+              </tbody>\n+            </table>\n+            </div>\n+\n+            <div class="bd-example">\n+            <table class="table table-sm table-bordered">\n+              <thead>\n+              <tr>\n+                <th scope="col">#</th>\n+                <th scope="col">First</th>\n+                <th scope="col">Last</th>\n+                <th scope="col">Handle</th>\n+              </tr>\n+              </thead>\n+              <tbody>\n+              <tr>\n+                <th scope="row">1</th>\n+                <td>Mark</td>\n+                <td>Otto</td>\n+                <td>@mdo</td>\n+              </tr>\n+              <tr>\n+                <th scope="row">2</th>\n+                <td>Jacob</td>\n+                <td>Thornton</td>\n+                <td>@fat</td>\n+              </tr>\n+              <tr>\n+                <th scope="row">3</th>\n+                <td colspan="2">Larry the Bird</td>\n+                <td>@twitter</td>\n+              </tr>\n+              </tbody>\n+            </table>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="figures">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Figures</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/content/figures/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <figure class="figure">\n+              <svg class="bd-placeholder-img figure-img img-fluid rounded" width="400" height="300" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: 400x300" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#868e96"/><text x="50%" y="50%" fill="#dee2e6" dy=".3em">400x300</text></svg>\n+\n+              <figcaption class="figure-caption">A caption for the above image.</figcaption>\n+            </figure>\n+            </div>\n+          </div>\n+        </article>\n+      </section>\n+\n+      <section id="forms">\n+        <h2 class="sticky-xl-top fw-bold pt-3 pt-xl-5 pb-2 pb-xl-3">Forms</h2>\n+\n+        <article class="my-3" id="overview">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Overview</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/forms/overview/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <form>\n+              <div class="mb-3">\n+                <label for="exampleInputEmail1" class="form-label">Email address</label>\n+                <input type="email" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp">\n+                <div id="emailHelp" class="form-text">We\'ll never share your email with anyone else.</div>\n+              </div>\n+              <div class="mb-3">\n+                <label for="exampleInputPassword1" class="form-label">Password</label>\n+                <input type="password" class="form-control" id="exampleInputPassword1">\n+              </div>\n+              <div class="mb-3 form-check">\n+                <input type="checkbox" class="form-check-input" id="exampleCheck1">\n+                <label class="form-check-label" for="exampleCheck1">Check me out</label>\n+              </div>\n+              <fieldset class="mb-3">\n+                <legend>Radios buttons</legend>\n+                <div class="form-check">\n+                  <input type="radio" name="radios" class="form-check-input" id="exampleRadio1">\n+                  <label class="form-check-label" for="exampleRadio1">Default radio</label>\n+                </div>\n+                <div class="mb-3 form-check">\n+                  <input type="radio" name="radios" class="form-check-input" id="exampleRadio2">\n+                  <label class="form-check-label" for="exampleRadio2">Another radio</label>\n+                </div>\n+              </fieldset>\n+              <div class="mb-3">\n+                <label class="form-label" for="customFile">Upload</label>\n+                <input type="file" class="form-control" id="customFile">\n+              </div>\n+              <div class="mb-3 form-check form-switch">\n+                <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckChecked" checked>\n+                <label class="form-check-label" for="flexSwitchCheckChecked">Checked switch checkbox input</label>\n+              </div>\n+              <div class="mb-3">\n+                <label for="customRange3" class="form-label">Example range</label>\n+                <input type="range" class="form-range" min="0" max="5" step="0.5" id="customRange3">\n+              </div>\n+              <button type="submit" class="btn btn-primary">Submit</button>\n+            </form>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="disabled-forms">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Disabled forms</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/forms/overview/#disabled-forms">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <form>\n+              <fieldset disabled aria-label="Disabled fieldset example">\n+                <div class="mb-3">\n+                  <label for="disabledTextInput" class="form-label">Disabled input</label>\n+                  <input type="text" id="disabledTextInput" class="form-control" placeholder="Disabled input">\n+                </div>\n+                <div class="mb-3">\n+                  <label for="disabledSelect" class="form-label">Disabled select menu</label>\n+                  <select id="disabledSelect" class="form-select">\n+                    <option>Disabled select</option>\n+                  </select>\n+                </div>\n+                <div class="mb-3">\n+                  <div class="form-check">\n+                    <input class="form-check-input" type="checkbox" id="disabledFieldsetCheck" disabled>\n+                    <label class="form-check-label" for="disabledFieldsetCheck">\n+                      Can\'t check this\n+                    </label>\n+                  </div>\n+                </div>\n+                <fieldset class="mb-3">\n+                  <legend>Disabled radios buttons</legend>\n+                  <div class="form-check">\n+                    <input type="radio" name="radios" class="form-check-input" id="disabledRadio1" disabled>\n+                    <label class="form-check-label" for="disabledRadio1">Disabled radio</label>\n+                  </div>\n+                  <div class="mb-3 form-check">\n+                    <input type="radio" name="radios" class="form-check-input" id="disabledRadio2" disabled>\n+                    <label class="form-check-label" for="disabledRadio2">Another radio</label>\n+                  </div>\n+                </fieldset>\n+                <div class="mb-3">\n+                  <label class="form-label" for="disabledCustomFile">Upload</label>\n+                  <input type="file" class="form-control" id="disabledCustomFile" disabled>\n+                </div>\n+                <div class="mb-3 form-check form-switch">\n+                  <input class="form-check-input" type="checkbox" role="switch" id="disabledSwitchCheckChecked" checked disabled>\n+                  <label class="form-check-label" for="disabledSwitchCheckChecked">Disabled checked switch checkbox input</label>\n+                </div>\n+                <div class="mb-3">\n+                  <label for="disabledRange" class="form-label">Disabled range</label>\n+                  <input type="range" class="form-range" min="0" max="5" step="0.5" id="disabledRange">\n+                </div>\n+                <button type="submit" class="btn btn-primary">Submit</button>\n+              </fieldset>\n+            </form>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="sizing">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Sizing</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/forms/form-control/#sizing">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <div class="mb-3">\n+              <input class="form-control form-control-lg" type="text" placeholder=".form-control-lg" aria-label=".form-control-lg example">\n+            </div>\n+            <div class="mb-3">\n+              <select class="form-select form-select-lg mb-3" aria-label=".form-select-lg example">\n+                <option selected>Open this select menu</option>\n+                <option value="1">One</option>\n+                <option value="2">Two</option>\n+                <option value="3">Three</option>\n+              </select>\n+            </div>\n+            <div class="mb-3">\n+              <input type="file" class="form-control form-control-lg" aria-label="Large file input example">\n+            </div>\n+            </div>\n+\n+            <div class="bd-example">\n+            <div class="mb-3">\n+              <input class="form-control form-control-sm" type="text" placeholder=".form-control-sm" aria-label=".form-control-sm example">\n+            </div>\n+            <div class="mb-3">\n+              <select class="form-select form-select-sm" aria-label=".form-select-sm example">\n+                <option selected>Open this select menu</option>\n+                <option value="1">One</option>\n+                <option value="2">Two</option>\n+                <option value="3">Three</option>\n+              </select>\n+            </div>\n+            <div class="mb-3">\n+              <input type="file" class="form-control form-control-sm" aria-label="Small file input example">\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="input-group">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Input group</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/forms/input-group/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <div class="input-group mb-3">\n+              <span class="input-group-text" id="basic-addon1">@</span>\n+              <input type="text" class="form-control" placeholder="Username" aria-label="Username" aria-describedby="basic-addon1">\n+            </div>\n+            <div class="input-group mb-3">\n+              <input type="text" class="form-control" placeholder="Recipient\'s username" aria-label="Recipient\'s username" aria-describedby="basic-addon2">\n+              <span class="input-group-text" id="basic-addon2">@example.com</span>\n+            </div>\n+            <label for="basic-url" class="form-label">Your vanity URL</label>\n+            <div class="input-group mb-3">\n+              <span class="input-group-text" id="basic-addon3">https://example.com/users/</span>\n+              <input type="text" class="form-control" id="basic-url" aria-describedby="basic-addon3">\n+            </div>\n+            <div class="input-group mb-3">\n+              <span class="input-group-text">$</span>\n+              <input type="text" class="form-control" aria-label="Amount (to the nearest dollar)">\n+              <span class="input-group-text">.00</span>\n+            </div>\n+            <div class="input-group">\n+              <span class="input-group-text">With textarea</span>\n+              <textarea class="form-control" aria-label="With textarea"></textarea>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="floating-labels">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Floating labels</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/forms/floating-labels/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <form>\n+              <div class="form-floating mb-3">\n+                <input type="email" class="form-control" id="floatingInput" placeholder="name@example.com">\n+                <label for="floatingInput">Email address</label>\n+              </div>\n+              <div class="form-floating">\n+                <input type="password" class="form-control" id="floatingPassword" placeholder="Password">\n+                <label for="floatingPassword">Password</label>\n+              </div>\n+            </form>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="validation">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Validation</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/forms/validation/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <form class="row g-3">\n+              <div class="col-md-4">\n+                <label for="validationServer01" class="form-label">First name</label>\n+                <input type="text" class="form-control is-valid" id="validationServer01" value="Mark" required>\n+                <div class="valid-feedback">\n+                  Looks good!\n+                </div>\n+              </div>\n+              <div class="col-md-4">\n+                <label for="validationServer02" class="form-label">Last name</label>\n+                <input type="text" class="form-control is-valid" id="validationServer02" value="Otto" required>\n+                <div class="valid-feedback">\n+                  Looks good!\n+                </div>\n+              </div>\n+              <div class="col-md-4">\n+                <label for="validationServerUsername" class="form-label">Username</label>\n+                <div class="input-group has-validation">\n+                  <span class="input-group-text" id="inputGroupPrepend3">@</span>\n+                  <input type="text" class="form-control is-invalid" id="validationServerUsername" aria-describedby="inputGroupPrepend3" required>\n+                  <div class="invalid-feedback">\n+                    Please choose a username.\n+                  </div>\n+                </div>\n+              </div>\n+              <div class="col-md-6">\n+                <label for="validationServer03" class="form-label">City</label>\n+                <input type="text" class="form-control is-invalid" id="validationServer03" required>\n+                <div class="invalid-feedback">\n+                  Please provide a valid city.\n+                </div>\n+              </div>\n+              <div class="col-md-3">\n+                <label for="validationServer04" class="form-label">State</label>\n+                <select class="form-select is-invalid" id="validationServer04" required>\n+                  <option selected disabled value="">Choose...</option>\n+                  <option>...</option>\n+                </select>\n+                <div class="invalid-feedback">\n+                  Please select a valid state.\n+                </div>\n+              </div>\n+              <div class="col-md-3">\n+                <label for="validationServer05" class="form-label">Zip</label>\n+                <input type="text" class="form-control is-invalid" id="validationServer05" required>\n+                <div class="invalid-feedback">\n+                  Please provide a valid zip.\n+                </div>\n+              </div>\n+              <div class="col-12">\n+                <div class="form-check">\n+                  <input class="form-check-input is-invalid" type="checkbox" value="" id="invalidCheck3" required>\n+                  <label class="form-check-label" for="invalidCheck3">\n+                    Agree to terms and conditions\n+                  </label>\n+                  <div class="invalid-feedback">\n+                    You must agree before submitting.\n+                  </div>\n+                </div>\n+              </div>\n+              <div class="col-12">\n+                <button class="btn btn-primary" type="submit">Submit form</button>\n+              </div>\n+            </form>\n+            </div>\n+          </div>\n+        </article>\n+      </section>\n+\n+      <section id="components">\n+        <h2 class="sticky-xl-top fw-bold pt-3 pt-xl-5 pb-2 pb-xl-3">Components</h2>\n+\n+        <article class="my-3" id="accordion">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Accordion</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/accordion/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <div class="accordion" id="accordionExample">\n+              <div class="accordion-item">\n+                <h4 class="accordion-header" id="headingOne">\n+                  <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">\n+                    Accordion Item #1\n+                  </button>\n+                </h4>\n+                <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#accordionExample">\n+                  <div class="accordion-body">\n+                    <strong>This is the first item\'s accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It\'s also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n+                  </div>\n+                </div>\n+              </div>\n+              <div class="accordion-item">\n+                <h4 class="accordion-header" id="headingTwo">\n+                  <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">\n+                    Accordion Item #2\n+                  </button>\n+                </h4>\n+                <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#accordionExample">\n+                  <div class="accordion-body">\n+                    <strong>This is the second item\'s accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It\'s also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n+                  </div>\n+                </div>\n+              </div>\n+              <div class="accordion-item">\n+                <h4 class="accordion-header" id="headingThree">\n+                  <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">\n+                    Accordion Item #3\n+                  </button>\n+                </h4>\n+                <div id="collapseThree" class="accordion-collapse collapse" aria-labelledby="headingThree" data-bs-parent="#accordionExample">\n+                  <div class="accordion-body">\n+                    <strong>This is the third item\'s accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It\'s also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n+                  </div>\n+                </div>\n+              </div>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="alerts">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Alerts</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/alerts/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            \n+            <div class="alert alert-primary alert-dismissible fade show" role="alert">\n+              A simple primary alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.\n+              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n+            </div>\n+            <div class="alert alert-secondary alert-dismissible fade show" role="alert">\n+              A simple secondary alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.\n+              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n+            </div>\n+            <div class="alert alert-success alert-dismissible fade show" role="alert">\n+              A simple success alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.\n+              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n+            </div>\n+            <div class="alert alert-danger alert-dismissible fade show" role="alert">\n+              A simple danger alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.\n+              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n+            </div>\n+            <div class="alert alert-warning alert-dismissible fade show" role="alert">\n+              A simple warning alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.\n+              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n+            </div>\n+            <div class="alert alert-info alert-dismissible fade show" role="alert">\n+              A simple info alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.\n+              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n+            </div>\n+            <div class="alert alert-light alert-dismissible fade show" role="alert">\n+              A simple light alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.\n+              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n+            </div>\n+            <div class="alert alert-dark alert-dismissible fade show" role="alert">\n+              A simple dark alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.\n+              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n+            </div>\n+            </div>\n+\n+            <div class="bd-example">\n+            <div class="alert alert-success" role="alert">\n+              <h4 class="alert-heading">Well done!</h4>\n+              <p>Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.</p>\n+              <hr>\n+              <p class="mb-0">Whenever you need to, be sure to use margin utilities to keep things nice and tidy.</p>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="badge">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Badge</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/badge/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <p class="h1">Example heading <span class="badge bg-primary">New</span></p>\n+            <p class="h2">Example heading <span class="badge bg-secondary">New</span></p>\n+            <p class="h3">Example heading <span class="badge bg-success">New</span></p>\n+            <p class="h4">Example heading <span class="badge bg-danger">New</span></p>\n+            <p class="h5">Example heading <span class="badge bg-warning text-dark">New</span></p>\n+            <p class="h6">Example heading <span class="badge bg-info text-dark">New</span></p>\n+            <p class="h6">Example heading <span class="badge bg-light text-dark">New</span></p>\n+            <p class="h6">Example heading <span class="badge bg-dark">New</span></p>\n+            </div>\n+\n+            <div class="bd-example">\n+            \n+            <span class="badge rounded-pill bg-primary">Primary</span>\n+            <span class="badge rounded-pill bg-secondary">Secondary</span>\n+            <span class="badge rounded-pill bg-success">Success</span>\n+            <span class="badge rounded-pill bg-danger">Danger</span>\n+            <span class="badge rounded-pill bg-warning text-dark">Warning</span>\n+            <span class="badge rounded-pill bg-info text-dark">Info</span>\n+            <span class="badge rounded-pill bg-light text-dark">Light</span>\n+            <span class="badge rounded-pill bg-dark">Dark</span>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="breadcrumb">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Breadcrumb</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/breadcrumb/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <nav aria-label="breadcrumb">\n+              <ol class="breadcrumb">\n+                <li class="breadcrumb-item"><a href="#">Home</a></li>\n+                <li class="breadcrumb-item"><a href="#">Library</a></li>\n+                <li class="breadcrumb-item active" aria-current="page">Data</li>\n+              </ol>\n+            </nav>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="buttons">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Buttons</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/buttons/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            \n+            <button type="button" class="btn btn-primary">Primary</button>\n+            <button type="button" class="btn btn-secondary">Secondary</button>\n+            <button type="button" class="btn btn-success">Success</button>\n+            <button type="button" class="btn btn-danger">Danger</button>\n+            <button type="button" class="btn btn-warning">Warning</button>\n+            <button type="button" class="btn btn-info">Info</button>\n+            <button type="button" class="btn btn-light">Light</button>\n+            <button type="button" class="btn btn-dark">Dark</button>\n+\n+            <button type="button" class="btn btn-link">Link</button>\n+            </div>\n+\n+            <div class="bd-example">\n+            \n+            <button type="button" class="btn btn-outline-primary">Primary</button>\n+            <button type="button" class="btn btn-outline-secondary">Secondary</button>\n+            <button type="button" class="btn btn-outline-success">Success</button>\n+            <button type="button" class="btn btn-outline-danger">Danger</button>\n+            <button type="button" class="btn btn-outline-warning">Warning</button>\n+            <button type="button" class="btn btn-outline-info">Info</button>\n+            <button type="button" class="btn btn-outline-light">Light</button>\n+            <button type="button" class="btn btn-outline-dark">Dark</button>\n+            </div>\n+\n+            <div class="bd-example">\n+            <button type="button" class="btn btn-primary btn-sm">Small button</button>\n+            <button type="button" class="btn btn-primary">Standard button</button>\n+            <button type="button" class="btn btn-primary btn-lg">Large button</button>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="button-group">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Button group</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/button-group/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <div class="btn-toolbar" role="toolbar" aria-label="Toolbar with button groups">\n+              <div class="btn-group me-2" role="group" aria-label="First group">\n+                <button type="button" class="btn btn-secondary">1</button>\n+                <button type="button" class="btn btn-secondary">2</button>\n+                <button type="button" class="btn btn-secondary">3</button>\n+                <button type="button" class="btn btn-secondary">4</button>\n+              </div>\n+              <div class="btn-group me-2" role="group" aria-label="Second group">\n+                <button type="button" class="btn btn-secondary">5</button>\n+                <button type="button" class="btn btn-secondary">6</button>\n+                <button type="button" class="btn btn-secondary">7</button>\n+              </div>\n+              <div class="btn-group" role="group" aria-label="Third group">\n+                <button type="button" class="btn btn-secondary">8</button>\n+              </div>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="card">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Card</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/card/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <div class="row  row-cols-1 row-cols-md-2 g-4">\n+              <div class="col">\n+                <div class="card">\n+                  <svg class="bd-placeholder-img card-img-top" width="100%" height="180" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: Image cap" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#868e96"/><text x="50%" y="50%" fill="#dee2e6" dy=".3em">Image cap</text></svg>\n+\n+                  <div class="card-body">\n+                    <h5 class="card-title">Card title</h5>\n+                    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card\'s content.</p>\n+                    <a href="#" class="btn btn-primary">Go somewhere</a>\n+                  </div>\n+                </div>\n+              </div>\n+              <div class="col">\n+                <div class="card">\n+                  <div class="card-header">\n+                    Featured\n+                  </div>\n+                  <div class="card-body">\n+                    <h5 class="card-title">Card title</h5>\n+                    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card\'s content.</p>\n+                    <a href="#" class="btn btn-primary">Go somewhere</a>\n+                  </div>\n+                  <div class="card-footer text-muted">\n+                    2 days ago\n+                  </div>\n+                </div>\n+              </div>\n+              <div class="col">\n+                <div class="card">\n+                  <div class="card-body">\n+                    <h5 class="card-title">Card title</h5>\n+                    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card\'s content.</p>\n+                  </div>\n+                  <ul class="list-group list-group-flush">\n+                    <li class="list-group-item">An item</li>\n+                    <li class="list-group-item">A second item</li>\n+                    <li class="list-group-item">A third item</li>\n+                  </ul>\n+                  <div class="card-body">\n+                    <a href="#" class="card-link">Card link</a>\n+                    <a href="#" class="card-link">Another link</a>\n+                  </div>\n+                </div>\n+              </div>\n+              <div class="col">\n+                <div class="card">\n+                  <div class="row g-0">\n+                    <div class="col-md-4">\n+                      <svg class="bd-placeholder-img" width="100%" height="250" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: Image" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#868e96"/><text x="50%" y="50%" fill="#dee2e6" dy=".3em">Image</text></svg>\n+\n+                    </div>\n+                    <div class="col-md-8">\n+                      <div class="card-body">\n+                        <h5 class="card-title">Card title</h5>\n+                        <p class="card-text">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\n+                        <p class="card-text"><small class="text-muted">Last updated 3 mins ago</small></p>\n+                      </div>\n+                    </div>\n+                  </div>\n+                </div>\n+              </div>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="carousel">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Carousel</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/carousel/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <div id="carouselExampleCaptions" class="carousel slide" data-bs-ride="carousel">\n+              <div class="carousel-indicators">\n+                <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>\n+                <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="1" aria-label="Slide 2"></button>\n+                <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="2" aria-label="Slide 3"></button>\n+              </div>\n+              <div class="carousel-inner">\n+                <div class="carousel-item active">\n+                  <svg class="bd-placeholder-img bd-placeholder-img-lg d-block w-100" width="800" height="400" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: First slide" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#777"/><text x="50%" y="50%" fill="#555" dy=".3em">First slide</text></svg>\n+\n+                  <div class="carousel-caption d-none d-md-block">\n+                    <h5>First slide label</h5>\n+                    <p>Some representative placeholder content for the first slide.</p>\n+                  </div>\n+                </div>\n+                <div class="carousel-item">\n+                  <svg class="bd-placeholder-img bd-placeholder-img-lg d-block w-100" width="800" height="400" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: Second slide" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#666"/><text x="50%" y="50%" fill="#444" dy=".3em">Second slide</text></svg>\n+\n+                  <div class="carousel-caption d-none d-md-block">\n+                    <h5>Second slide label</h5>\n+                    <p>Some representative placeholder content for the second slide.</p>\n+                  </div>\n+                </div>\n+                <div class="carousel-item">\n+                  <svg class="bd-placeholder-img bd-placeholder-img-lg d-block w-100" width="800" height="400" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: Third slide" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#555"/><text x="50%" y="50%" fill="#333" dy=".3em">Third slide</text></svg>\n+\n+                  <div class="carousel-caption d-none d-md-block">\n+                    <h5>Third slide label</h5>\n+                    <p>Some representative placeholder content for the third slide.</p>\n+                  </div>\n+                </div>\n+              </div>\n+              <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleCaptions"  data-bs-slide="prev">\n+                <span class="carousel-control-prev-icon" aria-hidden="true"></span>\n+                <span class="visually-hidden">Previous</span>\n+              </button>\n+              <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleCaptions"  data-bs-slide="next">\n+                <span class="carousel-control-next-icon" aria-hidden="true"></span>\n+                <span class="visually-hidden">Next</span>\n+              </button>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="dropdowns">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Dropdowns</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/dropdowns/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <div class="btn-group w-100 align-items-center justify-content-between flex-wrap">\n+              <div class="dropdown">\n+                <button class="btn btn-secondary btn-sm dropdown-toggle" type="button" id="dropdownMenuButtonSM" data-bs-toggle="dropdown" aria-expanded="false">\n+                  Dropdown button\n+                </button>\n+                <ul class="dropdown-menu" aria-labelledby="dropdownMenuButtonSM">\n+                  <li><h6 class="dropdown-header">Dropdown header</h6></li>\n+                  <li><a class="dropdown-item" href="#">Action</a></li>\n+                  <li><a class="dropdown-item" href="#">Another action</a></li>\n+                  <li><a class="dropdown-item" href="#">Something else here</a></li>\n+                  <li><hr class="dropdown-divider"></li>\n+                  <li><a class="dropdown-item" href="#">Separated link</a></li>\n+                </ul>\n+              </div>\n+              <div class="dropdown">\n+                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">\n+                  Dropdown button\n+                </button>\n+                <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">\n+                  <li><h6 class="dropdown-header">Dropdown header</h6></li>\n+                  <li><a class="dropdown-item" href="#">Action</a></li>\n+                  <li><a class="dropdown-item" href="#">Another action</a></li>\n+                  <li><a class="dropdown-item" href="#">Something else here</a></li>\n+                  <li><hr class="dropdown-divider"></li>\n+                  <li><a class="dropdown-item" href="#">Separated link</a></li>\n+                </ul>\n+              </div>\n+              <div class="dropdown">\n+                <button class="btn btn-secondary btn-lg dropdown-toggle" type="button" id="dropdownMenuButtonLG" data-bs-toggle="dropdown" aria-expanded="false">\n+                  Dropdown button\n+                </button>\n+                <ul class="dropdown-menu" aria-labelledby="dropdownMenuButtonLG">\n+                  <li><h6 class="dropdown-header">Dropdown header</h6></li>\n+                  <li><a class="dropdown-item" href="#">Action</a></li>\n+                  <li><a class="dropdown-item" href="#">Another action</a></li>\n+                  <li><a class="dropdown-item" href="#">Something else here</a></li>\n+                  <li><hr class="dropdown-divider"></li>\n+                  <li><a class="dropdown-item" href="#">Separated link</a></li>\n+                </ul>\n+              </div>\n+            </div>\n+            </div>\n+\n+            <div class="bd-example">\n+            <div class="btn-group">\n+              <button type="button" class="btn btn-primary">Primary</button>\n+              <button type="button" class="btn btn-primary dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">\n+                <span class="visually-hidden">Toggle Dropdown</span>\n+              </button>\n+              <ul class="dropdown-menu">\n+                <li><a class="dropdown-item" href="#">Action</a></li>\n+                <li><a class="dropdown-item" href="#">Another action</a></li>\n+                <li><a class="dropdown-item" href="#">Something else here</a></li>\n+              </ul>\n+            </div><!-- /btn-group -->\n+            <div class="btn-group">\n+              <button type="button" class="btn btn-secondary">Secondary</button>\n+              <button type="button" class="btn btn-secondary dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">\n+                <span class="visually-hidden">Toggle Dropdown</span>\n+              </button>\n+              <ul class="dropdown-menu">\n+                <li><a class="dropdown-item" href="#">Action</a></li>\n+                <li><a class="dropdown-item" href="#">Another action</a></li>\n+                <li><a class="dropdown-item" href="#">Something else here</a></li>\n+              </ul>\n+            </div><!-- /btn-group -->\n+            <div class="btn-group">\n+              <button type="button" class="btn btn-success">Success</button>\n+              <button type="button" class="btn btn-success dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">\n+                <span class="visually-hidden">Toggle Dropdown</span>\n+              </button>\n+              <ul class="dropdown-menu">\n+                <li><a class="dropdown-item" href="#">Action</a></li>\n+                <li><a class="dropdown-item" href="#">Another action</a></li>\n+                <li><a class="dropdown-item" href="#">Something else here</a></li>\n+              </ul>\n+            </div><!-- /btn-group -->\n+            <div class="btn-group">\n+              <button type="button" class="btn btn-info">Info</button>\n+              <button type="button" class="btn btn-info dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">\n+                <span class="visually-hidden">Toggle Dropdown</span>\n+              </button>\n+              <ul class="dropdown-menu">\n+                <li><a class="dropdown-item" href="#">Action</a></li>\n+                <li><a class="dropdown-item" href="#">Another action</a></li>\n+                <li><a class="dropdown-item" href="#">Something else here</a></li>\n+              </ul>\n+            </div><!-- /btn-group -->\n+            <div class="btn-group">\n+              <button type="button" class="btn btn-warning">Warning</button>\n+              <button type="button" class="btn btn-warning dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">\n+                <span class="visually-hidden">Toggle Dropdown</span>\n+              </button>\n+              <ul class="dropdown-menu">\n+                <li><a class="dropdown-item" href="#">Action</a></li>\n+                <li><a class="dropdown-item" href="#">Another action</a></li>\n+                <li><a class="dropdown-item" href="#">Something else here</a></li>\n+              </ul>\n+            </div><!-- /btn-group -->\n+            <div class="btn-group">\n+              <button type="button" class="btn btn-danger">Danger</button>\n+              <button type="button" class="btn btn-danger dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">\n+                <span class="visually-hidden">Toggle Dropdown</span>\n+              </button>\n+              <ul class="dropdown-menu">\n+                <li><a class="dropdown-item" href="#">Action</a></li>\n+                <li><a class="dropdown-item" href="#">Another action</a></li>\n+                <li><a class="dropdown-item" href="#">Something else here</a></li>\n+              </ul>\n+            </div><!-- /btn-group -->\n+            </div>\n+\n+            <div class="bd-example">\n+            <div class="btn-group w-100 align-items-center justify-content-between flex-wrap">\n+              <div class="dropend">\n+                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropendMenuButton" data-bs-toggle="dropdown" aria-expanded="false">\n+                  Dropend button\n+                </button>\n+                <ul class="dropdown-menu" aria-labelledby="dropendMenuButton">\n+                  <li><h6 class="dropdown-header">Dropdown header</h6></li>\n+                  <li><a class="dropdown-item" href="#">Action</a></li>\n+                  <li><a class="dropdown-item" href="#">Another action</a></li>\n+                  <li><a class="dropdown-item" href="#">Something else here</a></li>\n+                  <li><hr class="dropdown-divider"></li>\n+                  <li><a class="dropdown-item" href="#">Separated link</a></li>\n+                </ul>\n+              </div>\n+              <div class="dropup">\n+                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropupMenuButton" data-bs-toggle="dropdown" aria-expanded="false">\n+                  Dropup button\n+                </button>\n+                <ul class="dropdown-menu" aria-labelledby="dropupMenuButton">\n+                  <li><h6 class="dropdown-header">Dropdown header</h6></li>\n+                  <li><a class="dropdown-item" href="#">Action</a></li>\n+                  <li><a class="dropdown-item" href="#">Another action</a></li>\n+                  <li><a class="dropdown-item" href="#">Something else here</a></li>\n+                  <li><hr class="dropdown-divider"></li>\n+                  <li><a class="dropdown-item" href="#">Separated link</a></li>\n+                </ul>\n+              </div>\n+              <div class="dropstart">\n+                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropstartMenuButton" data-bs-toggle="dropdown" aria-expanded="false">\n+                  Dropstart button\n+                </button>\n+                <ul class="dropdown-menu" aria-labelledby="dropstartMenuButton">\n+                  <li><h6 class="dropdown-header">Dropdown header</h6></li>\n+                  <li><a class="dropdown-item" href="#">Action</a></li>\n+                  <li><a class="dropdown-item" href="#">Another action</a></li>\n+                  <li><a class="dropdown-item" href="#">Something else here</a></li>\n+                  <li><hr class="dropdown-divider"></li>\n+                  <li><a class="dropdown-item" href="#">Separated link</a></li>\n+                </ul>\n+              </div>\n+            </div>\n+            </div>\n+\n+            <div class="bd-example">\n+            <div class="btn-group">\n+              <div class="dropdown">\n+                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownRightMenuButton" data-bs-toggle="dropdown" aria-expanded="false">\n+                  End-aligned menu\n+                </button>\n+                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownRightMenuButton">\n+                  <li><h6 class="dropdown-header">Dropdown header</h6></li>\n+                  <li><a class="dropdown-item" href="#">Action</a></li>\n+                  <li><a class="dropdown-item" href="#">Another action</a></li>\n+                  <li><hr class="dropdown-divider"></li>\n+                  <li><a class="dropdown-item" href="#">Separated link</a></li>\n+                </ul>\n+              </div>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="list-group">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>List group</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/list-group/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <ul class="list-group">\n+              <li class="list-group-item disabled" aria-disabled="true">A disabled item</li>\n+              <li class="list-group-item">A second item</li>\n+              <li class="list-group-item">A third item</li>\n+              <li class="list-group-item">A fourth item</li>\n+              <li class="list-group-item">And a fifth one</li>\n+            </ul>\n+            </div>\n+\n+            <div class="bd-example">\n+            <ul class="list-group list-group-flush">\n+              <li class="list-group-item">An item</li>\n+              <li class="list-group-item">A second item</li>\n+              <li class="list-group-item">A third item</li>\n+              <li class="list-group-item">A fourth item</li>\n+              <li class="list-group-item">And a fifth one</li>\n+            </ul>\n+            </div>\n+\n+            <div class="bd-example">\n+            <div class="list-group">\n+              <a href="#" class="list-group-item list-group-item-action">A simple default list group item</a>\n+              \n+              <a href="#" class="list-group-item list-group-item-action list-group-item-primary">A simple primary list group item</a>\n+              <a href="#" class="list-group-item list-group-item-action list-group-item-secondary">A simple secondary list group item</a>\n+              <a href="#" class="list-group-item list-group-item-action list-group-item-success">A simple success list group item</a>\n+              <a href="#" class="list-group-item list-group-item-action list-group-item-danger">A simple danger list group item</a>\n+              <a href="#" class="list-group-item list-group-item-action list-group-item-warning">A simple warning list group item</a>\n+              <a href="#" class="list-group-item list-group-item-action list-group-item-info">A simple info list group item</a>\n+              <a href="#" class="list-group-item list-group-item-action list-group-item-light">A simple light list group item</a>\n+              <a href="#" class="list-group-item list-group-item-action list-group-item-dark">A simple dark list group item</a>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="modal">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Modal</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/modal/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <div class="d-flex justify-content-between flex-wrap">\n+              <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModalDefault">\n+                Launch demo modal\n+              </button>\n+              <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdropLive">\n+                Launch static backdrop modal\n+              </button>\n+              <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModalCenteredScrollable">\n+                Vertically centered scrollable modal\n+              </button>\n+              <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModalFullscreen">\n+                Full screen\n+              </button>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="navs">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Navs</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/navs-tabs/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <nav class="nav">\n+              <a class="nav-link active" aria-current="page" href="#">Active</a>\n+              <a class="nav-link" href="#">Link</a>\n+              <a class="nav-link" href="#">Link</a>\n+              <a class="nav-link disabled">Disabled</a>\n+            </nav>\n+            </div>\n+\n+            <div class="bd-example">\n+            <nav>\n+              <div class="nav nav-tabs mb-3" id="nav-tab" role="tablist">\n+                <button class="nav-link active" id="nav-home-tab" data-bs-toggle="tab" data-bs-target="#nav-home" type="button" role="tab" aria-controls="nav-home" aria-selected="true">Home</button>\n+                <button class="nav-link" id="nav-profile-tab" data-bs-toggle="tab" data-bs-target="#nav-profile" type="button" role="tab" aria-controls="nav-profile" aria-selected="false">Profile</button>\n+                <button class="nav-link" id="nav-contact-tab" data-bs-toggle="tab" data-bs-target="#nav-contact" type="button" role="tab" aria-controls="nav-contact" aria-selected="false">Contact</button>\n+              </div>\n+            </nav>\n+            <div class="tab-content" id="nav-tabContent">\n+              <div class="tab-pane fade show active" id="nav-home" role="tabpanel" aria-labelledby="nav-home-tab">\n+                <p><strong>This is some placeholder content the Home tab\'s associated content.</strong> Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other <code>.nav</code>-powered navigation.</p>\n+              </div>\n+              <div class="tab-pane fade" id="nav-profile" role="tabpanel" aria-labelledby="nav-profile-tab">\n+                <p><strong>This is some placeholder content the Profile tab\'s associated content.</strong> Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other <code>.nav</code>-powered navigation.</p>\n+              </div>\n+              <div class="tab-pane fade" id="nav-contact" role="tabpanel" aria-labelledby="nav-contact-tab">\n+                <p><strong>This is some placeholder content the Contact tab\'s associated content.</strong> Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other <code>.nav</code>-powered navigation.</p>\n+              </div>\n+            </div>\n+            </div>\n+\n+            <div class="bd-example">\n+            <ul class="nav nav-pills">\n+              <li class="nav-item">\n+                <a class="nav-link active" aria-current="page" href="#">Active</a>\n+              </li>\n+              <li class="nav-item">\n+                <a class="nav-link" href="#">Link</a>\n+              </li>\n+              <li class="nav-item">\n+                <a class="nav-link" href="#">Link</a>\n+              </li>\n+              <li class="nav-item">\n+                <a class="nav-link disabled">Disabled</a>\n+              </li>\n+            </ul>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="navbar">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Navbar</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/navbar/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <nav class="navbar navbar-expand-lg navbar-light bg-light">\n+              <div class="container-fluid">\n+                <a class="navbar-brand" href="#">\n+                  <img src="https://getbootstrap.com/docs/5.1/assets/brand/bootstrap-logo-white.svg" width="38" height="30" class="d-inline-block align-top" alt="Bootstrap" loading="lazy"\n+                      style="filter: invert(1) grayscale(100%) brightness(200%);">\n+                </a>\n+                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">\n+                  <span class="navbar-toggler-icon"></span>\n+                </button>\n+                <div class="collapse navbar-collapse" id="navbarSupportedContent">\n+                  <ul class="navbar-nav me-auto mb-2 mb-lg-0">\n+                    <li class="nav-item">\n+                      <a class="nav-link active" aria-current="page" href="#">Home</a>\n+                    </li>\n+                    <li class="nav-item">\n+                      <a class="nav-link" href="#">Link</a>\n+                    </li>\n+                    <li class="nav-item dropdown">\n+                      <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">\n+                        Dropdown\n+                      </a>\n+                      <ul class="dropdown-menu" aria-labelledby="navbarDropdown">\n+                        <li><a class="dropdown-item" href="#">Action</a></li>\n+                        <li><a class="dropdown-item" href="#">Another action</a></li>\n+                        <li><hr class="dropdown-divider"></li>\n+                        <li><a class="dropdown-item" href="#">Something else here</a></li>\n+                      </ul>\n+                    </li>\n+                    <li class="nav-item">\n+                      <a class="nav-link disabled">Disabled</a>\n+                    </li>\n+                  </ul>\n+                  <form class="d-flex">\n+                    <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">\n+                    <button class="btn btn-outline-dark" type="submit">Search</button>\n+                  </form>\n+                </div>\n+              </div>\n+            </nav>\n+\n+            <nav class="navbar navbar-expand-lg navbar-dark bg-primary mt-5">\n+              <div class="container-fluid">\n+                <a class="navbar-brand" href="#">\n+                  <img src="https://getbootstrap.com/docs/5.1/assets/brand/bootstrap-logo-white.svg" width="38" height="30" class="d-inline-block align-top" alt="Bootstrap" loading="lazy">\n+                </a>\n+                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent2" aria-controls="navbarSupportedContent2" aria-expanded="false" aria-label="Toggle navigation">\n+                  <span class="navbar-toggler-icon"></span>\n+                </button>\n+                <div class="collapse navbar-collapse" id="navbarSupportedContent2">\n+                  <ul class="navbar-nav me-auto mb-2 mb-lg-0">\n+                    <li class="nav-item">\n+                      <a class="nav-link active" aria-current="page" href="#">Home</a>\n+                    </li>\n+                    <li class="nav-item">\n+                      <a class="nav-link" href="#">Link</a>\n+                    </li>\n+                    <li class="nav-item dropdown">\n+                      <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown2" role="button" data-bs-toggle="dropdown" aria-expanded="false">\n+                        Dropdown\n+                      </a>\n+                      <ul class="dropdown-menu" aria-labelledby="navbarDropdown2">\n+                        <li><a class="dropdown-item" href="#">Action</a></li>\n+                        <li><a class="dropdown-item" href="#">Another action</a></li>\n+                        <li><hr class="dropdown-divider"></li>\n+                        <li><a class="dropdown-item" href="#">Something else here</a></li>\n+                      </ul>\n+                    </li>\n+                    <li class="nav-item">\n+                      <a class="nav-link disabled">Disabled</a>\n+                    </li>\n+                  </ul>\n+                  <form class="d-flex">\n+                    <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">\n+                    <button class="btn btn-outline-light" type="submit">Search</button>\n+                  </form>\n+                </div>\n+              </div>\n+            </nav>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="pagination">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Pagination</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/pagination/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <nav aria-label="Pagination example">\n+              <ul class="pagination pagination-sm">\n+                <li class="page-item"><a class="page-link" href="#">1</a></li>\n+                <li class="page-item active" aria-current="page">\n+                  <a class="page-link" href="#">2</a>\n+                </li>\n+                <li class="page-item"><a class="page-link" href="#">3</a></li>\n+              </ul>\n+            </nav>\n+            </div>\n+\n+            <div class="bd-example">\n+            <nav aria-label="Standard pagination example">\n+              <ul class="pagination">\n+                <li class="page-item">\n+                  <a class="page-link" href="#" aria-label="Previous">\n+                    <span aria-hidden="true">&laquo;</span>\n+                  </a>\n+                </li>\n+                <li class="page-item"><a class="page-link" href="#">1</a></li>\n+                <li class="page-item"><a class="page-link" href="#">2</a></li>\n+                <li class="page-item"><a class="page-link" href="#">3</a></li>\n+                <li class="page-item">\n+                  <a class="page-link" href="#" aria-label="Next">\n+                    <span aria-hidden="true">&raquo;</span>\n+                  </a>\n+                </li>\n+              </ul>\n+            </nav>\n+            </div>\n+\n+            <div class="bd-example">\n+            <nav aria-label="Another pagination example">\n+              <ul class="pagination pagination-lg flex-wrap">\n+                <li class="page-item disabled">\n+                  <a class="page-link">Previous</a>\n+                </li>\n+                <li class="page-item"><a class="page-link" href="#">1</a></li>\n+                <li class="page-item active" aria-current="page">\n+                  <a class="page-link" href="#">2</a>\n+                </li>\n+                <li class="page-item"><a class="page-link" href="#">3</a></li>\n+                <li class="page-item">\n+                  <a class="page-link" href="#">Next</a>\n+                </li>\n+              </ul>\n+            </nav>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="popovers">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Popovers</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/popovers/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <button type="button" class="btn btn-lg btn-danger" data-bs-toggle="popover" title="Popover title" data-bs-content="And here\'s some amazing content. It\'s very engaging. Right?">Click to toggle popover</button>\n+            </div>\n+\n+            <div class="bd-example">\n+            <button type="button" class="btn btn-secondary" data-bs-container="body" data-bs-toggle="popover" data-bs-placement="top" data-bs-content="Vivamus sagittis lacus vel augue laoreet rutrum faucibus.">\n+              Popover on top\n+            </button>\n+            <button type="button" class="btn btn-secondary" data-bs-container="body" data-bs-toggle="popover" data-bs-placement="right" data-bs-content="Vivamus sagittis lacus vel augue laoreet rutrum faucibus.">\n+              Popover on end\n+            </button>\n+            <button type="button" class="btn btn-secondary" data-bs-container="body" data-bs-toggle="popover" data-bs-placement="bottom" data-bs-content="Vivamus sagittis lacus vel augue laoreet rutrum faucibus.">\n+              Popover on bottom\n+            </button>\n+            <button type="button" class="btn btn-secondary" data-bs-container="body" data-bs-toggle="popover" data-bs-placement="left" data-bs-content="Vivamus sagittis lacus vel augue laoreet rutrum faucibus.">\n+              Popover on start\n+            </button>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="progress">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Progress</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/progress/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <div class="progress mb-3">\n+              <div class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">0%</div>\n+            </div>\n+            <div class="progress mb-3">\n+              <div class="progress-bar bg-success w-25" role="progressbar" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">25%</div>\n+            </div>\n+            <div class="progress mb-3">\n+              <div class="progress-bar bg-info text-dark w-50" role="progressbar" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100">50%</div>\n+            </div>\n+            <div class="progress mb-3">\n+              <div class="progress-bar bg-warning text-dark w-75" role="progressbar" aria-valuenow="75" aria-valuemin="0" aria-valuemax="100">75%</div>\n+            </div>\n+            <div class="progress">\n+              <div class="progress-bar bg-danger w-100" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100">100%</div>\n+            </div>\n+            </div>\n+\n+            <div class="bd-example">\n+            <div class="progress">\n+              <div class="progress-bar" role="progressbar" style="width: 15%" aria-valuenow="15" aria-valuemin="0" aria-valuemax="100"></div>\n+              <div class="progress-bar progress-bar-striped progress-bar-animated bg-success" role="progressbar" style="width: 40%" aria-valuenow="40" aria-valuemin="0" aria-valuemax="100"></div>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="scrollspy">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Scrollspy</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/scrollspy/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+              <nav id="navbar-example2" class="navbar navbar-light bg-light px-3">\n+                <a class="navbar-brand" href="#">Navbar</a>\n+                <ul class="nav nav-pills">\n+                  <li class="nav-item">\n+                    <a class="nav-link active" href="#scrollspyHeading1">First</a>\n+                  </li>\n+                  <li class="nav-item">\n+                    <a class="nav-link" href="#scrollspyHeading2">Second</a>\n+                  </li>\n+                  <li class="nav-item dropdown">\n+                    <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" role="button" aria-expanded="false">Dropdown</a>\n+                    <ul class="dropdown-menu">\n+                      <li><a class="dropdown-item" href="#scrollspyHeading3">Third</a></li>\n+                      <li><a class="dropdown-item" href="#scrollspyHeading4">Fourth</a></li>\n+                      <li><hr class="dropdown-divider"></li>\n+                      <li><a class="dropdown-item" href="#scrollspyHeading5">Fifth</a></li>\n+                    </ul>\n+                  </li>\n+                </ul>\n+              </nav>\n+            <div data-bs-spy="scroll" data-bs-target="#navbar-example2" data-bs-offset="0" class="scrollspy-example" tabindex="0">\n+                <h4 id="scrollspyHeading1">First heading</h4>\n+                <p>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It\'s repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.</p>\n+                <h4 id="scrollspyHeading2">Second heading</h4>\n+                <p>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It\'s repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.</p>\n+                <h4 id="scrollspyHeading3">Third heading</h4>\n+                <p>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It\'s repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.</p>\n+                <h4 id="scrollspyHeading4">Fourth heading</h4>\n+                <p>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It\'s repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.</p>\n+                <h4 id="scrollspyHeading5">Fifth heading</h4>\n+                <p>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It\'s repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.</p>\n+              </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="spinners">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Spinners</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/spinners/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            \n+            <div class="spinner-border text-primary" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-border text-secondary" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-border text-success" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-border text-danger" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-border text-warning" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-border text-info" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-border text-light" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-border text-dark" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            </div>\n+\n+            <div class="bd-example">\n+            \n+            <div class="spinner-grow text-primary" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-grow text-secondary" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-grow text-success" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-grow text-danger" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-grow text-warning" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-grow text-info" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-grow text-light" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-grow text-dark" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="toasts">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Toasts</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/toasts/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example bg-dark p-5 align-items-center">\n+            <div class="toast" role="alert" aria-live="assertive" aria-atomic="true">\n+              <div class="toast-header">\n+                <svg class="bd-placeholder-img rounded me-2" width="20" height="20" xmlns="http://www.w3.org/2000/svg" aria-hidden="true" preserveAspectRatio="xMidYMid slice" focusable="false"><rect width="100%" height="100%" fill="#007aff"/></svg>\n+\n+                <strong class="me-auto">Bootstrap</strong>\n+                <small class="text-muted">11 mins ago</small>\n+                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>\n+              </div>\n+              <div class="toast-body">\n+                Hello, world! This is a toast message.\n+              </div>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="mt-3 mb-5 pb-5" id="tooltips">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Tooltips</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/tooltips/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example tooltip-demo">\n+            <button type="button" class="btn btn-secondary" data-bs-toggle="tooltip" data-bs-placement="top" title="Tooltip on top">Tooltip on top</button>\n+            <button type="button" class="btn btn-secondary" data-bs-toggle="tooltip" data-bs-placement="right" title="Tooltip on end">Tooltip on end</button>\n+            <button type="button" class="btn btn-secondary" data-bs-toggle="tooltip" data-bs-placement="bottom" title="Tooltip on bottom">Tooltip on bottom</button>\n+            <button type="button" class="btn btn-secondary" data-bs-toggle="tooltip" data-bs-placement="left" title="Tooltip on start">Tooltip on start</button>\n+            <button type="button" class="btn btn-secondary" data-bs-toggle="tooltip" data-bs-html="true" title="<em>Tooltip</em> <u>with</u> <b>HTML</b>">Tooltip with HTML</button>\n+            </div>\n+          </div>\n+        </article>\n+      </section>\n+    </div>\n+\n+    <div class="modal fade" id="exampleModalDefault" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">\n+      <div class="modal-dialog">\n+        <div class="modal-content">\n+          <div class="modal-header">\n+            <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>\n+            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>\n+          </div>\n+          <div class="modal-body">\n+            ...\n+          </div>\n+          <div class="modal-footer">\n+            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>\n+            <button type="button" class="btn btn-primary">Save changes</button>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+    <div class="modal fade" id="staticBackdropLive" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLiveLabel" aria-hidden="true">\n+      <div class="modal-dialog">\n+        <div class="modal-content">\n+          <div class="modal-header">\n+            <h5 class="modal-title" id="staticBackdropLiveLabel">Modal title</h5>\n+            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>\n+          </div>\n+          <div class="modal-body">\n+            <p>I will not close if you click outside me. Don\'t even try to press escape key.</p>\n+          </div>\n+          <div class="modal-footer">\n+            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>\n+            <button type="button" class="btn btn-primary">Understood</button>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+    <div class="modal fade" id="exampleModalCenteredScrollable" tabindex="-1" aria-labelledby="exampleModalCenteredScrollableTitle" aria-hidden="true">\n+      <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">\n+        <div class="modal-content">\n+          <div class="modal-header">\n+            <h5 class="modal-title" id="exampleModalCenteredScrollableTitle">Modal title</h5>\n+            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>\n+          </div>\n+          <div class="modal-body">\n+            <p>This is some placeholder content to show the scrolling behavior for modals. We use repeated line breaks to demonstrate how content can exceed minimum inner height, thereby showing inner scrolling. When content becomes longer than the predefined max-height of modal, content will be cropped and scrollable within the modal.</p>\n+            <br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>\n+            <p>This content should appear at the bottom after you scroll.</p>\n+          </div>\n+          <div class="modal-footer">\n+            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>\n+            <button type="button" class="btn btn-primary">Save changes</button>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+    <div class="modal fade" id="exampleModalFullscreen" tabindex="-1" aria-labelledby="exampleModalFullscreenLabel" aria-hidden="true">\n+      <div class="modal-dialog modal-fullscreen">\n+        <div class="modal-content">\n+          <div class="modal-header">\n+            <h5 class="modal-title h4" id="exampleModalFullscreenLabel">Full screen modal</h5>\n+            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>\n+          </div>\n+          <div class="modal-body">\n+            ...\n+          </div>\n+          <div class="modal-footer">\n+            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+\n+    <!-- End Bootstrap Cheatsheet -->\n+\n+  </metal:main>\n+\n+</body>\n+\n+</html>\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/browser/templates/test_rendering_icons.pt b/Products/CMFPlone/browser/templates/test_rendering_icons.pt\nnew file mode 100644\nindex 0000000000..40999ad312\n--- /dev/null\n+++ b/Products/CMFPlone/browser/templates/test_rendering_icons.pt\n@@ -0,0 +1,91 @@\n+<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" xmlns:tal="http://xml.zope.org/namespaces/tal"\n+  xmlns:metal="http://xml.zope.org/namespaces/metal" xmlns:i18n="http://xml.zope.org/namespaces/i18n" lang="en"\n+  metal:use-macro="context/@@main_template/macros/master" i18n:domain="plone">\n+\n+<body>\n+\n+  <metal:main fill-slot="main">\n+\n+    <style>\n+\n+    </style>    \n+\n+    <ul class="nav nav-tabs mb-3">\n+      <li class="nav-item">\n+        <a class="nav-link active" href="${portal_url}/@@test-rendering">Test Rendering</a>\n+      </li>\n+      <li class="nav-item">\n+        <a class="nav-link" href="${portal_url}/@@test-rendering-cheatsheet">Bootstrap Cheatsheet</a>\n+      </li>\n+      <li class="nav-item">\n+        <a class="nav-link" href="${portal_url}/@@test-rendering-icons">Icons</a>\n+      </li>\n+    </ul>\n+\n+    <h1>Plone Icons test page</h1>\n+\n+    <p class="lead">\n+      This page shows the Icon story of Plone 6. We use <a href="https://icons.getbootstrap.com/" target="_blank">Bootstrap Icons</a> by default.\n+    </p>\n+\n+    <h1>Icons</h1>\n+\n+    <p>\n+      Description to explain icon resolver\n+    </p>\n+\n+    <h2>Get Icon URL</h2>\n+\n+    <p>\n+      <code>&lt;img src="" tal:attributes="src python:icons.url(\'alarm\')" class="custom-class" alt="foo" /&gt;</code>\n+    </p>\n+\n+    <p>\n+      <img src="${python:icons.url(\'alarm\')}" class="custom-class" alt="foo" />\n+    </p>\n+\n+    <h2>Get Icon Tag</h2>\n+\n+    <p>\n+      <code>&lt;tal:icon tal:replace="structure python:icons.tag(\'archive\', tag_class=\'custom-class\', tag_alt=\'foobar\')" /&gt;</code>\n+    </p>\n+\n+    <p>\n+      <tal:icon tal:replace="structure python:icons.tag(\'archive\', tag_class=\'custom-class\', tag_alt=\'foobar\')" />\n+    </p>\n+\n+    <h2>Registration<h2>\n+\n+    <p>\n+      Todo: List custom Icons\n+    </p>\n+\n+    <ul>\n+      <li>\n+        <a href="https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/profiles/default/registry/icons_bootstrap.xml" target="_blank">Bootstrap</a>\n+      </li>\n+      <li>\n+        <a href="https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/profiles/default/registry/icons_contenttype.xml" target="_blank">Content Types</a>\n+      </li>\n+      <li>\n+        <a href="https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/profiles/default/registry/icons_country_flags.xml" target="_blank">Country Flags</a>\n+      </li>\n+      <li>\n+        <a href="https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/profiles/default/registry/icons_language_flags.xml" target="_blank">Language Flags</a>\n+      </li>\n+      <li>\n+        <a href="https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/profiles/default/registry/icons_mimetype.xml" target="_blank">MIME Types</a>\n+      </li>\n+      <li>\n+        <a href="https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/profiles/default/registry/icons_plone.xml" target="_blank">Plone</a>\n+      </li>\n+      <li>\n+        <a href="https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/profiles/default/registry/icons_toolbar.xml" target="_blank">Toolbar</a>\n+      </li>\n+    </ul>\n+\n+  </metal:main>\n+\n+</body>\n+\n+</html>\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/browser/test_rendering.py b/Products/CMFPlone/browser/test_rendering.py\nindex 513dc0e839..b3c567068d 100644\n--- a/Products/CMFPlone/browser/test_rendering.py\n+++ b/Products/CMFPlone/browser/test_rendering.py\n@@ -11,3 +11,23 @@ def __call__(self):\n         self.request.set(\'disable_plone.rightcolumn\', 1)\n         self.request.set(\'disable_plone.leftcolumn\', 1)\n         return self.template()\n+\n+\n+class TestRenderingCheatsheetView(BrowserView):\n+\n+    template = ViewPageTemplateFile(\'templates/test_rendering_cheatsheet.pt\')\n+\n+    def __call__(self):\n+        self.request.set(\'disable_plone.rightcolumn\', 1)\n+        self.request.set(\'disable_plone.leftcolumn\', 1)\n+        return self.template()\n+\n+\n+class TestRenderingIconsView(BrowserView):\n+\n+    template = ViewPageTemplateFile(\'templates/test_rendering_icons.pt\')\n+\n+    def __call__(self):\n+        self.request.set(\'disable_plone.rightcolumn\', 1)\n+        self.request.set(\'disable_plone.leftcolumn\', 1)\n+        return self.template()\ndiff --git a/Products/CMFPlone/configure.zcml b/Products/CMFPlone/configure.zcml\nindex 9d9f68b282..d4ab0a8a9d 100644\n--- a/Products/CMFPlone/configure.zcml\n+++ b/Products/CMFPlone/configure.zcml\n@@ -36,8 +36,6 @@\n   <include package="plone.protect" />\n   <include package="plone.indexer" />\n \n-  <!-- mockup -->\n-  <include package="mockup" />\n   <include package="plone.staticresources" />\n \n   <!-- viewlets zope 3 layers support for themes -->\ndiff --git a/Products/CMFPlone/controlpanel/browser/resourceregistry.pt b/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\nindex b1ac950250..641bea1b08 100644\n--- a/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\n+++ b/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\n@@ -13,49 +13,138 @@\n   <header>\n \n     <h1 class="documentFirstHeading"\n-        i18n:translate="">Resource Registries</h1>\n+        i18n:translate="">Resource Registry</h1>\n \n     <div class="text-muted"\n        i18n:translate="">\n-      Configure, enable, disable, debug and build Plone JavaScript/LESS/CSS resources.\n-      Plone utilizes RequireJS and LESS CSS to build its resources.\n-      Re-building a Plone bundle TTW requires a modern web browser.\n+      Configure Plone JavaScript/CSS resource bundles.\n     </div>\n   </header>\n \n    <div id="content-core">\n-      <span tal:replace="structure context/@@authenticator/authenticator"/>\n-      <div class="pat-resourceregistry" tal:attributes="data-pat-resourceregistry view/config">\n-        <div class="alert alert-info" role="status">\n-          <strong i18n:translate="">Info</strong>\n-          <span i18n:translate="">If you see this, it is because there was an error rendering the resource registry\n-          configuration. It\'s possible you saved a bundle that gives a JavaScript error\n-          and it is preventing the resource registry from loading.</span>\n+    <div tal:condition="python:view.global_debug_mode()"\n+         class="portalMessage statusmessage statusmessage-info alert alert-info"\n+         role="alert">\n+        <tal:icon tal:replace="structure python:icons.tag(\'plone-statusmessage-info\', tag_alt=\'\', tag_class=\'statusmessage-icon mb-1 me-2\')" />\n+        <strong i18n:translate="">Global Debug Mode Activated</strong>\n+        <span class="content"\n+              i18n:translate="">\n+            This is great for development.\n+            Resource hashes will be recalculated on each request.\n+            This is expensive, do not use use in production!\n+        </span>\n+    </div>\n+    <form tal:condition="python:not view.global_debug_mode() and view.debug_mode()"\n+          method="post" action="${python:context.absolute_url()}/@@resourceregistry-controlpanel">\n+      <div class="portalMessage statusmessage statusmessage-info alert alert-warning"\n+         role="alert">\n+          <button name="action" value="deactivate_cache" type="submit" class="btn btn-primary ms-1 me-1 mb-1 float-end">Deactivate</button>\n+        <tal:icon tal:replace="structure python:icons.tag(\'plone-statusmessage-warning\', tag_alt=\'\', tag_class=\'statusmessage-icon mb-1\')" />\n+        <strong i18n:translate="">Resource Debug Mode Activated</strong>\n+        <span class="content"\n+              i18n:translate="">\n+            Resources are not cached in Plone.\n+            Their hashes will be recalculated on each request.\n+            This is expensive, do not use use in production!\n+        </span>\n+      </div>\n+    </form>\n+    <form tal:condition="python:not view.global_debug_mode() and not view.debug_mode()"\n+          method="post" action="${python:context.absolute_url()}/@@resourceregistry-controlpanel">\n+      <div class="portalMessage statusmessage statusmessage-info alert alert-info"\n+         role="alert">\n+          <button name="action" value="activate_cache" type="submit" class="btn btn-primary ms-1 me-1 mb-1 float-end">Activate Debug Mode</button>\n+        <tal:icon tal:replace="structure python:icons.tag(\'plone-statusmessage-info\', tag_alt=\'\', tag_class=\'statusmessage-icon mb-1\')" />\n+        <strong i18n:translate="">Production Mode Activated</strong>\n+        <span class="content"\n+              i18n:translate="">\n+            Resources are fast and hashes are cached in Plone.\n+            Changes in resource settings are not applied directly.\n+        </span>\n+      </div>\n+    </form>\n+    <div class="accordion" id="accordionRR" tal:define="dummy python:view.process_form()">\n+      <div class="accordion-item "\n+           tal:repeat="bundle python:view.bundles_data">\n+           <h2 class="accordion-header" id="heading-${python:bundle[\'safe_name\']}">\n+            <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-${python:bundle[\'safe_name\']}" aria-expanded="false" aria-controls="collapse-${python:bundle[\'safe_name\']}">\n+              <span tal:condition="python:bundle[\'name\'] and bundle[\'enabled\']" i18n:translate="" class="me-2"><tal:icon tal:replace="structure python:icons.tag(\'file-check\', tag_alt=\'Enabled bundle\')" /></span>\n+              <span tal:condition="python:bundle[\'name\'] and not bundle[\'enabled\']" i18n:translate="" class="me-2"><tal:icon tal:replace="structure python:icons.tag(\'file-x\', tag_alt=\'Disabled bundle\')" /></span>\n+              <span tal:condition="python:not bundle[\'name\']" i18n:translate="" class="me-2"><tal:icon tal:replace="structure python:icons.tag(\'file-plus\', tag_alt=\'Add a bundle\')" /></span>\n+              <strong tal:condition="python:bundle[\'name\']">${python:bundle["name"]}</strong>\n+              <strong tal:condition="python:not bundle[\'name\']">Add new bundle</strong>\n+            </button>\n+          </h2>\n+          <div id="collapse-${python:bundle[\'safe_name\']}" class="accordion-collapse ${python:\'\' if bundle[\'name\'] == request.form.get(\'name\', None) else \'collapse\'}" aria-labelledby="heading${python:bundle[\'safe_name\']}" data-bs-parent="#accordionRR">\n+            <div class="accordion-body">\n+              <form method="post" action="${python:context.absolute_url()}/@@resourceregistry-controlpanel">\n+                <input type="hidden" name="original_name" value="${python:bundle[\'name\']}" />\n+                <div class="mb-3">\n+                  <label for="name" class="form-label">Name</label>\n+                  <input type="text" class="form-control" name="name" value="${python:bundle[\'name\']}"/>\n+                </div>\n+                <div class="mb-3">\n+                  <label for="jscompilation" class="form-label">Javascript</label>\n+                  <input type="text" class="form-control" name="jscompilation" value="${python:bundle[\'jscompilation\']}"/>\n+                </div>\n+                <div class="mb-3">\n+                  <label for="csscompilation" class="form-label">CSS</label>\n+                  <input type="text" class="form-control" name="csscompilation" value="${python:bundle[\'csscompilation\']}"/>\n+                </div>\n+                <div class="form-check mb-3">\n+                  <input class="form-check-input" type="checkbox" value="" name="enabled" ${python:"checked" if bundle["enabled"] else \'\'} />\n+                  <label class="form-check-label" for="enabled">\n+                    enabled\n+                  </label>\n+                </div>\n+                <div class="mb-3">\n+                  <label for="expression" class="form-label">Condition</label>\n+                  <input type="text" class="form-control" name="expression" value="${python:bundle[\'expression\']}" placeholder="expression"/>\n+                </div>\n+                <div class="mb-3">\n+                  <label for="depends" class="form-label">Depends on</label>\n+                  <input type="text" class="form-control" name="depends" value="${python:bundle[\'depends\']}" />\n+                </div>\n+                <div class="form-check mb-3">\n+                  <input class="form-check-input" type="checkbox" value="1" name="load_async" ${python:"checked" if bundle["load_async"] else \'\'} />\n+                  <label class="form-check-label" for="load_async">\n+                    Async\n+                  </label>\n+                </div>\n+                <div class="form-check mb-3">\n+                  <input class="form-check-input" type="checkbox" value="1" name="load_defer" ${python:"checked" if bundle["load_defer"] else \'\'} />\n+                  <label class="form-check-label" for="load_defer">\n+                    Defer\n+                  </label>\n+                </div>\n+                <div class="mb-3">\n+                  <button tal:condition="python:bundle[\'name\']" name="action" value="update" type="submit" class="btn btn-primary me-1">Save</button>\n+                  <button tal:condition="python:not bundle[\'name\']" name="action" value="add" type="submit" class="btn btn-success me-1">Add</button>\n+                  <button tal:condition="python:bundle[\'name\']" name="action" value="delete" type="submit" class="btn btn-danger">Delete</button>\n+                </div>\n+              </form>\n+          </div>\n         </div>\n-        <h2 i18n:translate="">Available Options</h2>\n-        <ul>\n-          <li i18n:translate="">Reload the page. There could be a intermittent issue.</li>\n-          <li i18n:translate="">Go to the <a i18n:name="configuration_registry" i18n:translate=""\n-              href="${portal_url}/portal_registry">Configuration Registry</a>\n-              and manually edit the configuration to enable development mode\n-              on the resource registry and try to rebuild.</li>\n-          <li><span i18n:translate="" tal:omit-tag="">You can also attempt to delete your customizations/builds and see if that fixes it.</span>\n-            <ul>\n-              <tal:overrides tal:repeat="override python: view.get_overrides()">\n-                <li>\n-                  <form method="POST">\n-                    <input type="hidden" name="action" value="delete-file" />\n-                    <input type="hidden" name="response" value="html" />\n-                    <input type="hidden" name="filepath" value="${override}" />\n-                    <input type="submit" value="Delete ${override}" i18n:attributes="value" />\n-                  </form>\n-                </li>\n-              </tal:overrides>\n-            </ul>\n-          </li>\n-        </ul>\n       </div>\n     </div>\n+    <div class="mt-3">\n+      <h2 i18n:translate="">Additional Resources</h2>\n+      <p i18n:translate="">After the above resources, the following might get loaded:</p>\n+      <dl>\n+        <dt i18n:translate="">Theme CSS and JavaScript</dt>\n+        <dd i18n:translate="">\n+          The activated Plone-Theme usually provides one CSS bundle and sometimes a javascript bundle.\n+        </dd>\n+        <dt i18n:translate="">Custom CSS</dt>\n+        <dd i18n:translate="">\n+          At last a custom CSS is loaded, if non-empty.\n+          It can be used to override the previous loaded CSS.\n+          It is provided for tinkerers and those in need of urgent through-the-web changes.\n+          Hint: <a href="${python:context.absolute_url()}/@@theming-controlpanel#autotoc-item-autotoc-1" i18n:name="link" i18n:translate="">Edit the Custom CSS in the Theming-Control-Panel</a>.\n+        </dd>\n+      </dl>\n+    </div>\n+   </div>\n </metal:main>\n \n </body>\ndiff --git a/Products/CMFPlone/controlpanel/browser/resourceregistry.py b/Products/CMFPlone/controlpanel/browser/resourceregistry.py\nindex 2c0dcace27..1bfae52ae8 100644\n--- a/Products/CMFPlone/controlpanel/browser/resourceregistry.py\n+++ b/Products/CMFPlone/controlpanel/browser/resourceregistry.py\n@@ -1,424 +1,150 @@\n-from datetime import datetime\n-from plone.memoize.view import memoize\n-from plone.registry import field\n+from App.config import getConfiguration\n from plone.registry.interfaces import IRegistry\n-from plone.registry.record import Record\n-from plone.resource.interfaces import IResourceDirectory\n+from Products.CMFPlone import PloneMessageFactory as _\n from Products.CMFPlone.interfaces import IBundleRegistry\n-from Products.CMFPlone.interfaces import IResourceRegistry\n-from Products.CMFPlone.interfaces.resources import OVERRIDE_RESOURCE_DIRECTORY_NAME  # noqa\n-from Products.CMFPlone.resources import add_bundle_on_request\n-from Products.CMFPlone.resources import RESOURCE_DEVELOPMENT_MODE\n-from Products.CMFPlone.resources.browser.configjs import RequireJsView\n-from Products.CMFPlone.resources.browser.cook import cookWhenChangingSettings\n+from Products.Five.browser import BrowserView\n from Products.statusmessages.interfaces import IStatusMessage\n-from urllib import parse\n-from zExceptions import NotFound\n from zope.component import getUtility\n \n-import json\n-import posixpath\n-import re\n+import operator\n \n \n-CSS_URL_REGEX = re.compile(r\'url\\(([^)]+)\\)\')\n-\n-\n-class JSONEncoder(json.JSONEncoder):\n-\n-    def default(self, obj):\n-        if hasattr(obj, \'isoformat\'):\n-            return obj.isoformat()\n-        else:\n-            return json.JSONEncoder.default(self, obj)\n-\n-\n-def recordsToDict(record):\n-    data = {}\n-    for name in record.__schema__.names():\n-        data[name] = getattr(record, name)\n-    return data\n-\n-\n-def updateRecordFromDict(record, data):\n-    for name in record.__schema__.names():\n-        if name in [\'last_compilation\']:\n-            continue\n-        if name in data:\n-            # almost all string data needs to be str, not unicode\n-            val = data[name]\n-            if isinstance(val, list):\n-                newval = []\n-                for item in val:\n-                    newval.append(item)\n-                val = newval\n-\n-            full_name = record.__prefix__ + name\n-            try:\n-                record.__registry__[full_name] = val\n-            except (AttributeError, KeyError):\n-                # upgrade record on the fly, try to at least\n-                if not val:\n-                    continue\n-                if type(val) == bool:\n-                    record.__registry__.records[full_name] = Record(\n-                        field.Bool(title=""), val)\n-                else:\n-                    raise\n-\n-\n-class OverrideFolderManager:\n-\n-    def __init__(self, context):\n-        self.context = context\n-        persistent_directory = getUtility(IResourceDirectory, name="persistent")  # noqa\n-        if OVERRIDE_RESOURCE_DIRECTORY_NAME not in persistent_directory:\n-            persistent_directory.makeDirectory(OVERRIDE_RESOURCE_DIRECTORY_NAME)  # noqa\n-        self.container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n-\n-    def save_file(self, filepath, data):\n-        resource_name, resource_filepath = filepath.split(\'/\', 1)\n-        if resource_name not in self.container:\n-            self.container.makeDirectory(resource_name)\n-        folder = self.container[resource_name]\n-        if \'.css\' in resource_filepath:\n-            data = self.make_links_relative(filepath, data)\n-        folder.writeFile(resource_filepath, data)\n-        return folder[resource_filepath]\n-\n-    def _rewrite_url(self, css_url, asset_url):\n-        """\n-        Pulled from:\n-        http://stackoverflow.com/questions/7469573/how-to-construct-relative-url-given-two-absolute-urls-in-python\n-\n-        """\n-        base = parse.urlparse(css_url)\n-        target = parse.urlparse(asset_url)\n-        if base.netloc != target.netloc:\n-            return asset_url\n-        base_dir = \'.\' + posixpath.dirname(base.path)\n-        target = \'.\' + target.path\n-        return posixpath.relpath(target, start=base_dir)\n-\n-    def make_links_relative(self, filepath, data):\n-        """\n-        make sure we don\'t write out any full urls.\n-        filepath will be something like foo/bar.css\n-        and the full real url will be something like http://site-url/++plone++foo/bar.css\n-\n-        So we\'ll be everything relative the resource path.\n-\n-\n-        """\n-        site_url = self.context.absolute_url()\n-        full_resource_url = f\'{site_url}/++plone++{filepath}\'\n-        for css_url in CSS_URL_REGEX.findall(data):\n-            if css_url.startswith("data:"):\n-                continue\n-            if css_url.find("data:image") > 0:\n-                continue\n-\n-            css_url = css_url.lstrip(\'url(\').rstrip(\')\').\\\n-                strip(\'"\').strip("\'")\n-            if css_url.startswith(site_url):\n-                data = data.replace(css_url, self._rewrite_url(\n-                    full_resource_url, css_url))\n-\n-        return data\n-\n-    def delete_file(self, filepath):\n-        resource_name, resource_filepath = filepath.split(\'/\', 1)\n+class ResourceRegistryControlPanelView(BrowserView):\n+    @property\n+    def _bundles(self):\n+        registry = getUtility(IRegistry)\n+        return registry.collectionOfInterface(\n+            IBundleRegistry, prefix="plone.bundles", check=False\n+        )\n \n-        if resource_name not in self.container:\n-            return\n-        folder = self.container[resource_name]\n-        try:\n-            fi = folder[resource_filepath]\n-        except NotFound:\n+    @property\n+    def bundles_data(self):\n+        result = []\n+        for name, record in self._bundles.items():\n+            result.append(\n+                {\n+                    "name": name,\n+                    "safe_name": name.replace(".", "-"),\n+                    "jscompilation": record.jscompilation,\n+                    "csscompilation": record.csscompilation,\n+                    "expression": record.expression,\n+                    "enabled": record.enabled,\n+                    "depends": record.depends,\n+                    "load_async": record.load_async,\n+                    "load_defer": record.load_defer,\n+                }\n+            )\n+        result = list(sorted(result, key=operator.itemgetter("name")))\n+        result.append(\n+            {\n+                "name": "",\n+                "safe_name": "",\n+                "jscompilation": "",\n+                "csscompilation": "",\n+                "expression": "",\n+                "enabled": False,\n+                "depends": "",\n+                "load_async": False,\n+                "load_defer": False,\n+            }\n+        )\n+        return result\n+\n+    def global_debug_mode(self):\n+        return getConfiguration().debug_mode\n+\n+    def debug_mode(self):\n+        registry = getUtility(IRegistry)\n+        return registry["plone.resources.development"]\n+\n+    def _add(self):\n+        name = self.request.form.get("name", None)\n+        if name is None or name == "":\n+            IStatusMessage(self.request).addStatusMessage(\n+                _("Name can not be empty."), "error"\n+            )\n             return\n-        parent = self.get_parent(fi)\n-        del parent[fi.getId()]\n-        if filepath not in self.container:\n+        bundles = self._bundles\n+        if name in bundles:\n+            IStatusMessage(self.request).addStatusMessage(\n+                _(f"Record {name} already exists."), "error"\n+            )\n             return\n-        folder = self.container[resource_name]\n-        try:\n-            fi = folder[resource_filepath]\n-        except NotFound:\n+        record = bundles.add(name)\n+        self._set_data_from_form(record)\n+        IStatusMessage(self.request).addStatusMessage(\n+            _(f"Record {name} created."), "info"\n+        )\n+\n+    def _update(self):\n+        new_name = self.request.form.get("name", None)\n+        if new_name is None or new_name == "":\n+            IStatusMessage(self.request).addStatusMessage(\n+                _("Name can not be empty."), "error"\n+            )\n             return\n-        parent = self.get_parent(fi)\n-        del parent[fi.getId()]\n-\n-    def get_parent(self, item):\n-        path = \'/\'.join(item.getPhysicalPath()[:-1])\n-        return self.context.restrictedTraverse(path)\n-\n-    def list_dir(self, container):\n-        if hasattr(container, \'listDirectory\'):\n-            return container.listDirectory()\n-        else:\n-            return container.objectIds()\n-\n-\n-class ResourceRegistryControlPanelView(RequireJsView):\n-\n-    def __call__(self):\n-        add_bundle_on_request(self.request, \'resourceregistry\')\n-        req = self.request\n-        if req.REQUEST_METHOD == \'POST\':\n-            action = req.get(\'action\', \'\')\n-            method = action.replace(\'-\', \'_\')\n-            if hasattr(self, method):\n-                return getattr(self, method)()\n-            else:\n-                return json.dumps({\n-                    \'success\': False,\n-                    \'msg\': \'Invalid action: \' + action\n-                })\n+        original_name = self.request.form.get("original_name", None)\n+        bundles = self._bundles\n+        if new_name != original_name:\n+            if original_name not in bundles:\n+                IStatusMessage(self.request).addStatusMessage(\n+                    _("Expected record missing."), "error"\n+                )\n+                return\n+            if new_name in bundles:\n+                IStatusMessage(self.request).addStatusMessage(\n+                    _(f"Record name {new_name} already taken."), "error"\n+                )\n+                return\n+            record = bundles[original_name]\n+            del bundles[original_name]\n+            bundles[new_name] = record\n         else:\n-            if RESOURCE_DEVELOPMENT_MODE:\n-                messages = IStatusMessage(self.request)\n-                messages.add("The FEDEV environment variable is set. No matter "\n-                             "what settings are done here, all bundles will "\n-                             "always be in development mode.", type="warn")\n-            return self.index()\n-\n-    @property\n-    @memoize\n-    def registry(self):\n-        return getUtility(IRegistry)\n-\n-    def update_registry_collection(self, itype, prefix, newdata):\n-        rdata = self.registry.collectionOfInterface(\n-            itype, prefix=prefix, check=False)\n-        for key, data in newdata.items():\n-            if key not in rdata:\n-                record = rdata.add(key)\n-            else:\n-                record = rdata[key]\n-            updateRecordFromDict(record, data)\n-        # remove missing ones\n-        for key in set(rdata.keys()) - set(newdata.keys()):\n-            del rdata[key]\n-\n-    def save_registry(self):\n-        req = self.request\n+            record = bundles[original_name]\n+        self._set_data_from_form(record)\n+        IStatusMessage(self.request).addStatusMessage(_("Changes saved."), "info")\n+\n+    def _set_data_from_form(self, record):\n+        names = record.__schema__.names()\n+        data = {k: v for k, v in self.request.form.items() if k in names}\n+        bool_names = ["enabled", "load_async", "load_defer"]\n+        for bool_name in bool_names:\n+            data[bool_name] = bool_name in data\n+        for field_name, value in data.items():\n+            full_name = record.__prefix__ + field_name\n+            record.__registry__[full_name] = value\n+        self._switch_cache(False)\n+\n+    def _delete(self):\n+        name = self.request.form.get("original_name", None)\n+        bundles = self._bundles\n+        if name not in bundles:\n+            IStatusMessage(self.request).addStatusMessage(\n+                _(f"Expected record {name} missing."), "error"\n+            )\n+            return\n+        del bundles[name]\n+        self._switch_cache(False)\n+        IStatusMessage(self.request).addStatusMessage(_("Record deleted."), "info")\n \n-        if req.get(\'resources\') and req.get(\'bundles\'):\n-            self.update_registry_collection(\n-                IResourceRegistry, "plone.resources",\n-                json.loads(req.get(\'resources\')))\n-            self.update_registry_collection(\n-                IBundleRegistry, "plone.bundles",\n-                json.loads(req.get(\'bundles\')))\n+    def _switch_cache(self, state):\n+        registry = getUtility(IRegistry)\n+        registry["plone.resources.development"] = state\n \n-        if self.request.form.get(\'development\', \'\').lower() == \'true\':\n-            self.registry[\'plone.resources.development\'] = True\n+    def process_form(self):\n+        if self.request["method"] != "POST":\n+            return\n+        action = self.request.form["action"]\n+        if action == "add":\n+            self._add()\n+        elif action == "update":\n+            self._update()\n+        elif action == "delete":\n+            self._delete()\n+        elif action == "activate_cache":\n+            self._switch_cache(True)\n+        elif action == "deactivate_cache":\n+            self._switch_cache(False)\n         else:\n-            self.registry[\'plone.resources.development\'] = False\n-\n-        # it\'d be difficult to know if the legacy bundle settings\n-        # changed or not so we need to just set the last import date\n-        # back so it gets re-built\n-        self.registry.records[\n-            \'plone.resources.last_legacy_import\'].value = datetime.now()\n-        cookWhenChangingSettings(self.context)\n-\n-        return json.dumps({\n-            \'success\': True\n-        })\n-\n-    def save_file(self):\n-        req = self.request\n-        resource_path = req.form.get(\'filepath\').split(\'++plone++\')[-1]\n-        overrides = OverrideFolderManager(self.context)\n-        overrides.save_file(resource_path, req.form[\'data\'])\n-        return json.dumps({\n-            \'success\': True\n-        })\n-\n-    def delete_file(self):\n-        req = self.request\n-        resource_path = req.form.get(\'filepath\').split(\'++plone++\')[-1]\n-        overrides = OverrideFolderManager(self.context)\n-        overrides.delete_file(resource_path)\n-\n-        if req.form.get(\'response\') == \'html\':\n-            return req.response.redirect(req.URL)\n-        return json.dumps({\n-            \'success\': True\n-        })\n-\n-    def get_bundles(self):\n-        return self.registry.collectionOfInterface(\n-            IBundleRegistry, prefix="plone.bundles", check=False)\n-\n-    def get_resources(self):\n-        return self.registry.collectionOfInterface(\n-            IResourceRegistry, prefix="plone.resources", check=False)\n-\n-    def less_build_config(self):\n-        site_url = self.context.portal_url()\n-        bundles = self.get_bundles()\n-        bundle = self.request.get(\'bundle\', None)\n-        resources = self.get_resources()\n-        less_files = []\n-        if bundle and bundle in bundles:\n-            bundle_obj = bundles[bundle]\n-            for resource in bundle_obj.resources:\n-                if resource in resources:\n-                    for css in resources[resource].css:\n-                        url = parse.urlparse(css)\n-                        if url.netloc == \'\':\n-                            # Local\n-                            src = f"{site_url}/{css}"\n-                        else:\n-                            src = "%s" % (css)\n-\n-                        extension = url.path.split(\'.\')[-1]\n-                        if extension == \'less\':\n-                            less_files.append(src)\n-        return json.dumps({\n-            \'less\': less_files,\n-        })\n-\n-    def js_build_config(self):\n-        (paths, shims) = self.get_requirejs_config()\n-        bundles = self.get_bundles()\n-        resources = self.get_resources()\n-\n-        bundle = self.request.get(\'bundle\', None)\n-        includes = []\n-        if bundle and bundle in bundles:\n-            bundle_obj = bundles[bundle]\n-            for resource_name in bundle_obj.resources:\n-                # need to check if this resource has a js file\n-                # it could just be a css resource\n-                try:\n-                    resource = resources[resource_name]\n-                    if resource.js:\n-                        includes.append(resource_name)\n-                except KeyError:\n-                    # skip if missing\n-                    pass\n-            if bundle_obj.stub_js_modules:\n-                for module in bundle_obj.stub_js_modules:\n-                    paths[module] = \'empty:\'\n-        return json.dumps({\n-            \'include\': includes,\n-            \'shim\': shims,\n-            \'paths\': paths,\n-            \'wrapShim\': True,\n-            \'optimize\': \'none\'\n-        })\n-\n-    def save_js_build(self):\n-        """\n-        \'\xc3\x82\'\n-        """\n-        overrides = OverrideFolderManager(self.context)\n-        req = self.request\n-        filepath = \'static/%s-compiled.js\' % req.form[\'bundle\']\n-\n-        data = req.form[\'data\']\n-        overrides.save_file(filepath, data)\n-        bundle = self.get_bundles().get(req.form[\'bundle\'])\n-        if bundle:\n-            bundle.last_compilation = datetime.now()\n-            bundle.jscompilation = f\'++plone++{filepath}\'\n-        return json.dumps({\n-            \'success\': True,\n-            \'filepath\': \'++plone++\' + filepath\n-        })\n-\n-    def save_less_build(self):\n-        overrides = OverrideFolderManager(self.context)\n-        req = self.request\n-        filepath = \'static/%s-compiled.css\' % req.form[\'bundle\']\n-        data = \'\'\n-        for key, value in req.form.items():\n-            if not key.startswith(\'data-\'):\n-                continue\n-            if isinstance(value, str):\n-                value = [value]\n-            data += \'\\n\'.join(value) + \'\\n\'\n-        overrides.save_file(filepath, data)\n-        bundle = self.get_bundles().get(req.form[\'bundle\'])\n-        if bundle:\n-            bundle.last_compilation = datetime.now()\n-            bundle.csscompilation = f\'++plone++{filepath}\'\n-        return json.dumps({\n-            \'success\': True,\n-            \'filepath\': \'++plone++\' + filepath\n-        })\n-\n-    def save_less_variables(self):\n-        data = {}\n-        for key, val in json.loads(self.request.form.get(\'data\')).items():\n-            data[key] = val\n-        self.registry[\'plone.lessvariables\'] = data\n-        return json.dumps({\n-            \'success\': True\n-        })\n-\n-    def save_pattern_options(self):\n-        data = {}\n-        for key, val in json.loads(self.request.form.get(\'data\')).items():\n-            data[key] = val\n-        self.registry[\'plone.patternoptions\'] = data\n-        return json.dumps({\n-            \'success\': True\n-        })\n-\n-    def get_overrides(self):\n-        overrides = OverrideFolderManager(self.context)\n-\n-        def _read_folder(folder):\n-            files = []\n-            for filename in folder.listDirectory():\n-                try:\n-                    item = folder[filename]\n-                except NotFound:\n-                    continue\n-                if folder.isDirectory(filename):\n-                    files.extend(_read_folder(item))\n-                else:\n-                    files.append(item)\n-            return files\n-        files = _read_folder(overrides.container)\n-        results = []\n-        site_path = self.context.getPhysicalPath()\n-        for fi in files:\n-            path = fi.getPhysicalPath()\n-            rel_path = path[len(site_path) + 2:]\n-            results.append(\'++plone++{}/{}\'.format(\n-                rel_path[0], \'/\'.join(rel_path[1:])))\n-        return results\n-\n-    def config(self):\n-        base_url = self.context.absolute_url()\n-        resources = self.get_resources()\n-\n-        less_url = self.registry[\'plone.resources.lessc\']\n-        rjs_url = self.registry[\'plone.resources.rjs\']\n-\n-        data = {\n-            \'development\': self.registry[\'plone.resources.development\'],\n-            \'lessvariables\': self.registry[\'plone.lessvariables\'],\n-            \'resources\': {},\n-            \'bundles\': {},\n-            \'javascripts\': {},\n-            \'css\': {},\n-            \'baseUrl\': base_url,\n-            \'manageUrl\': \'%s/@@resourceregistry-controlpanel\' % base_url,\n-            \'lessUrl\': f\'{base_url}/{less_url}\',\n-            \'lessConfigUrl\': \'%s/less-variables.js\' % base_url,\n-            \'rjsUrl\': rjs_url,\n-            \'patternoptions\': self.registry[\'plone.patternoptions\']\n-        }\n-        bundles = self.get_bundles()\n-        for key, resource in resources.items():\n-            data[\'resources\'][key] = recordsToDict(resource)\n-        for key, bundle in bundles.items():\n-            data[\'bundles\'][key] = recordsToDict(bundle)\n-        data[\'overrides\'] = self.get_overrides()\n-        return json.dumps(data, cls=JSONEncoder)\n+            raise ValueError("Invalid form data")\n+        self.request.response.redirect(self.request["ACTUAL_URL"])\ndiff --git a/Products/CMFPlone/controlpanel/browser/usergroups_usersoverview.pt b/Products/CMFPlone/controlpanel/browser/usergroups_usersoverview.pt\nindex 997c4befdb..6bf0192991 100644\n--- a/Products/CMFPlone/controlpanel/browser/usergroups_usersoverview.pt\n+++ b/Products/CMFPlone/controlpanel/browser/usergroups_usersoverview.pt\n@@ -61,7 +61,12 @@\n \n         <div class="mb-3 input-group">\n           <a class="pat-plone-modal me-3 btn btn-success " id="add-user"\n-             data-pat-plone-modal="{&quot;actionOptions&quot;: {&quot;displayInModal&quot;: false}}"\n+             data-pat-plone-modal=\'{\n+                "actionOptions": {\n+                  "redirectOnResponse": true,\n+                  "redirectToUrl": "${portal_url}/@@usergroup-userprefs"\n+                }\n+              }\'\n              tal:attributes="href string:${portal_url}/@@new-user"\n              i18n:translate="label_add_new_user">Add New User</a>\n           <span class="input-group-text" id="quickSearchLabel" i18n:translate="label_user_search">User Search</span>\n@@ -95,8 +100,8 @@\n                 <tr>\n                   <th  class="text-start" i18n:translate="listingheader_user_name">User name</th>\n                   <th class="rotate" tal:repeat="portal_role portal_roles"><div tal:content="portal_role" i18n:translate="">Role</div></th>\n-                  <th class="rotate alert-warning"><div i18n:translate="listingheader_reset_password">Reset Password</div></th>\n-                  <th class="rotate alert-danger"><div i18n:translate="listingheader_remove">Remove</div></th>\n+                  <th class="rotate table-warning"><div i18n:translate="listingheader_reset_password">Reset Password</div></th>\n+                  <th class="rotate table-danger"><div i18n:translate="listingheader_remove">Remove</div></th>\n                 </tr>\n               </thead>\n               <tbody>\n@@ -139,7 +144,7 @@\n \n                         </td>\n \n-                        <td class="listingCheckbox alert-warning">\n+                        <td class="listingCheckbox table-warning">\n                           <input type="checkbox"\n                                  class="noborder"\n                                  name="users.resetpassword:records"\n@@ -149,7 +154,7 @@\n                                                  disabled python:user[\'can_set_password\'] and default or \'disabled\'" />\n                         </td>\n \n-                        <td class="listingCheckbox alert-danger">\n+                        <td class="listingCheckbox table-danger">\n                           <input type="checkbox"\n                                          class="noborder notify"\n                                          name="delete:list"\ndiff --git a/Products/CMFPlone/interfaces/controlpanel.py b/Products/CMFPlone/interfaces/controlpanel.py\nindex 0fee5cc0a1..7e83192f62 100644\n--- a/Products/CMFPlone/interfaces/controlpanel.py\n+++ b/Products/CMFPlone/interfaces/controlpanel.py\n@@ -18,7 +18,7 @@\n \n deprecated(\n     "It has been moved to plone.i18n.interfaces, import from there instead.",\n-    ILanguageSchema=\'plone.i18n.interfaces:ILanguageSchema\',\n+    ILanguageSchema="plone.i18n.interfaces:ILanguageSchema",\n )\n \n \n@@ -62,10 +62,13 @@ def validate_json(value):\n     try:\n         json.loads(value)\n     except ValueError as exc:\n+\n         class JSONError(schema.ValidationError):\n-            __doc__ = _("Must be empty or a valid JSON-formatted "\n-                        "configuration \xe2\x80\x93 ${message}.", mapping={\n-                            \'message\': str(exc)})\n+            __doc__ = _(\n+                "Must be empty or a valid JSON-formatted "\n+                "configuration \xe2\x80\x93 ${message}.",\n+                mapping={"message": str(exc)},\n+            )\n \n         raise JSONError(value)\n \n@@ -73,359 +76,422 @@ class JSONError(schema.ValidationError):\n \n \n class IControlPanel(IPloneBaseTool):\n-    """ Interface for the ControlPanel """\n-\n-    def registerConfiglet(id, name, action, condition=\'\', permission=\'\',  # NOQA\n-                          category=\'Plone\', visible=1, appId=None,\n-                          imageUrl=None, description=\'\', REQUEST=None):\n-        """ Registration of a Configlet """\n+    """Interface for the ControlPanel"""\n+\n+    def registerConfiglet(\n+        id,\n+        name,\n+        action,\n+        condition="",\n+        permission="",  # NOQA\n+        category="Plone",\n+        visible=1,\n+        appId=None,\n+        imageUrl=None,\n+        description="",\n+        REQUEST=None,\n+    ):\n+        """Registration of a Configlet"""\n \n     def unregisterConfiglet(id):  # NOQA\n-        """ unregister Configlet """\n+        """unregister Configlet"""\n \n     def unregisterApplication(appId):  # NOQA\n-        """ unregister Application with all configlets """\n+        """unregister Application with all configlets"""\n \n     def getGroupIds():  # NOQA\n-        """ list of the group ids """\n+        """list of the group ids"""\n \n     def getGroups():  # NOQA\n-        """ list of groups as dicts with id and title """\n+        """list of groups as dicts with id and title"""\n \n     def enumConfiglets(group=None):  # NOQA\n-        """ lists the Configlets of a group, returns them as dicts by\n-            calling .getAction() on each of them """\n+        """lists the Configlets of a group, returns them as dicts by\n+        calling .getAction() on each of them"""\n \n \n class IEditingSchema(Interface):\n \n     available_editors = schema.List(\n-        title=_(\'Available editors\'),\n-        description=_(\'Available editors in the portal.\'),\n-        default=[\'TinyMCE\', \'None\'],\n+        title=_("Available editors"),\n+        description=_("Available editors in the portal."),\n+        default=["TinyMCE", "None"],\n         value_type=schema.TextLine(),\n         missing_value=[],\n-        required=True\n+        required=True,\n     )\n \n     default_editor = schema.Choice(\n-        title=_(\'Default editor\'),\n+        title=_("Default editor"),\n         description=_(\n-            \'Select the default wysiwyg \'\n-            \'editor. Users will be able to choose their \'\n-            \'own or select to use the site default.\'),\n-        default=\'TinyMCE\',\n+            "Select the default wysiwyg "\n+            "editor. Users will be able to choose their "\n+            "own or select to use the site default."\n+        ),\n+        default="TinyMCE",\n         missing_value=set(),\n-        vocabulary=\'plone.app.vocabularies.AvailableEditors\',\n-        required=True)\n+        vocabulary="plone.app.vocabularies.AvailableEditors",\n+        required=True,\n+    )\n \n     ext_editor = schema.Bool(\n-        title=_(\'Enable External Editor feature\'),\n+        title=_("Enable External Editor feature"),\n         description=_(\n-            \'Determines if the external editor \'\n-            \'feature is enabled. This feature requires a \'\n-            \'special client-side application installed. The \'\n-            \'users also have to enable this in their \'\n-            \'preferences.\'),\n+            "Determines if the external editor "\n+            "feature is enabled. This feature requires a "\n+            "special client-side application installed. The "\n+            "users also have to enable this in their "\n+            "preferences."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     enable_link_integrity_checks = schema.Bool(\n-        title=_(\'Enable link integrity checks\'),\n+        title=_("Enable link integrity checks"),\n         description=_(\n-            \'Determines if the users should get \'\n-            \'warnings when they delete or move content that \'\n-            \'is linked from inside the site.\'),\n+            "Determines if the users should get "\n+            "warnings when they delete or move content that "\n+            "is linked from inside the site."\n+        ),\n         default=True,\n-        required=False)\n+        required=False,\n+    )\n \n     lock_on_ttw_edit = schema.Bool(\n-        title=_(\'Enable locking for through-the-web edits\'),\n+        title=_("Enable locking for through-the-web edits"),\n         description=_(\n-            \'Disabling locking here will only \'\n-            \'affect users editing content through the \'\n-            \'Plone web UI.  Content edited via WebDAV \'\n-            \'clients will still be subject to locking.\'),\n+            "Disabling locking here will only "\n+            "affect users editing content through the "\n+            "Plone web UI.  Content edited via WebDAV "\n+            "clients will still be subject to locking."\n+        ),\n         default=True,\n-        required=False)\n+        required=False,\n+    )\n \n     subjects_of_navigation_root = schema.Bool(\n-        title=_(\'Limit tags/keywords to the current navigation root\'),\n+        title=_("Limit tags/keywords to the current navigation root"),\n         description=_(\n-            \'Limit tags aka keywords vocabulary used for Tags field and \'\n-            \'in searches to the terms used inside the subtree of the current \'\n+            "Limit tags aka keywords vocabulary used for Tags field and "\n+            "in searches to the terms used inside the subtree of the current "\n             "navigation root. This can be used together with Plone\'s "\n-            \'multilingual extension plone.app.multilingual to only offer \'\n-            \'keywords of the current selected language. Other addons may \'\n-            \'utilize this feature for its specific purposes.\'),\n+            "multilingual extension plone.app.multilingual to only offer "\n+            "keywords of the current selected language. Other addons may "\n+            "utilize this feature for its specific purposes."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n \n class ITagAttrPair(Interface):\n-    tags = schema.TextLine(title=\'tags\')\n-    attributes = schema.TextLine(title=\'attributes\')\n+    tags = schema.TextLine(title="tags")\n+    attributes = schema.TextLine(title="attributes")\n \n \n @implementer(ITagAttrPair)\n class TagAttrPair:\n-\n-    def __init__(self, tags=\'\', attributes=\'\'):\n+    def __init__(self, tags="", attributes=""):\n         self.tags = tags\n         self.attributes = attributes\n \n \n class IFilterSchema(Interface):\n-    """Combined schema for the adapter lookup.\n-    """\n+    """Combined schema for the adapter lookup."""\n \n     # class IFilterTagsSchema(Interface):\n \n     disable_filtering = schema.Bool(\n-        title=_(\'Disable HTML filtering\'),\n-        description=_(\'Warning: disabling this can be dangerous. \'\n-                      \'Only disable if you know what you are doing.\'),\n+        title=_("Disable HTML filtering"),\n+        description=_(\n+            "Warning: disabling this can be dangerous. "\n+            "Only disable if you know what you are doing."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     nasty_tags = schema.List(\n-        title=_(\'Nasty tags\'),\n-        description=_(\'These tags and their content are completely blocked \'\n-                      \'when a page is saved or rendered. They are only deleted\'\n-                      \' if they are not marked as valid_tags\'),\n-        default=[\'style\', \'object\', \'embed\', \'applet\', \'script\', \'meta\'],\n+        title=_("Nasty tags"),\n+        description=_(\n+            "These tags and their content are completely blocked "\n+            "when a page is saved or rendered. They are only deleted"\n+            " if they are not marked as valid_tags"\n+        ),\n+        default=["style", "object", "embed", "applet", "script", "meta"],\n         value_type=schema.TextLine(),\n         missing_value=[],\n-        required=False)\n+        required=False,\n+    )\n \n     valid_tags = schema.List(\n-        title=_(\'Valid tags\'),\n-        description=_(\'A list of valid tags which will be not filtered out.\'),\n+        title=_("Valid tags"),\n+        description=_("A list of valid tags which will be not filtered out."),\n         default=[\n-            \'a\',\n-            \'abbr\',\n-            \'acronym\',\n-            \'address\',\n-            \'article\',\n-            \'aside\',\n-            \'audio\',\n-            \'b\',\n-            \'bdo\',\n-            \'big\',\n-            \'blockquote\',\n-            \'body\',\n-            \'br\',\n-            \'canvas\',\n-            \'caption\',\n-            \'cite\',\n-            \'code\',\n-            \'col\',\n-            \'colgroup\',\n-            \'command\',\n-            \'datalist\',\n-            \'dd\',\n-            \'del\',\n-            \'details\',\n-            \'dfn\',\n-            \'dialog\',\n-            \'div\',\n-            \'dl\',\n-            \'dt\',\n-            \'em\',\n-            \'figure\',\n-            \'figcaption\',\n-            \'footer\',\n-            \'h1\',\n-            \'h2\',\n-            \'h3\',\n-            \'h4\',\n-            \'h5\',\n-            \'h6\',\n-            \'head\',\n-            \'header\',\n-            \'hgroup\',\n-            \'hr\',\n-            \'html\',\n-            \'i\',\n-            \'iframe\',\n-            \'img\',\n-            \'ins\',\n-            \'kbd\',\n-            \'keygen\',\n-            \'li\',\n-            \'map\',\n-            \'mark\',\n-            \'meter\',\n-            \'nav\',\n-            \'ol\',\n-            \'output\',\n-            \'p\',\n-            \'pre\',\n-            \'progress\',\n-            \'q\',\n-            \'rp\',\n-            \'rt\',\n-            \'ruby\',\n-            \'samp\',\n-            \'section\',\n-            \'small\',\n-            \'source\',\n-            \'span\',\n-            \'strong\',\n-            \'sub\',\n-            \'sup\',\n-            \'table\',\n-            \'tbody\',\n-            \'td\',\n-            \'tfoot\',\n-            \'th\',\n-            \'thead\',\n-            \'time\',\n-            \'title\',\n-            \'tr\',\n-            \'tt\',\n-            \'u\',\n-            \'ul\',\n-            \'var\',\n-            \'video\',\n+            "a",\n+            "abbr",\n+            "acronym",\n+            "address",\n+            "article",\n+            "aside",\n+            "audio",\n+            "b",\n+            "bdo",\n+            "big",\n+            "blockquote",\n+            "body",\n+            "br",\n+            "canvas",\n+            "caption",\n+            "cite",\n+            "code",\n+            "col",\n+            "colgroup",\n+            "command",\n+            "datalist",\n+            "dd",\n+            "del",\n+            "details",\n+            "dfn",\n+            "dialog",\n+            "div",\n+            "dl",\n+            "dt",\n+            "em",\n+            "figure",\n+            "figcaption",\n+            "footer",\n+            "h1",\n+            "h2",\n+            "h3",\n+            "h4",\n+            "h5",\n+            "h6",\n+            "head",\n+            "header",\n+            "hgroup",\n+            "hr",\n+            "html",\n+            "i",\n+            "iframe",\n+            "img",\n+            "ins",\n+            "kbd",\n+            "keygen",\n+            "li",\n+            "map",\n+            "mark",\n+            "meter",\n+            "nav",\n+            "ol",\n+            "output",\n+            "p",\n+            "pre",\n+            "progress",\n+            "q",\n+            "rp",\n+            "rt",\n+            "ruby",\n+            "samp",\n+            "section",\n+            "small",\n+            "source",\n+            "span",\n+            "strong",\n+            "sub",\n+            "sup",\n+            "table",\n+            "tbody",\n+            "td",\n+            "tfoot",\n+            "th",\n+            "thead",\n+            "time",\n+            "title",\n+            "tr",\n+            "tt",\n+            "u",\n+            "ul",\n+            "var",\n+            "video",\n         ],\n         value_type=schema.TextLine(),\n         missing_value=[],\n-        required=False)\n+        required=False,\n+    )\n \n     custom_attributes = schema.List(\n-        title=_(\'Custom attributes\'),\n-        description=_(\'These attributes are additionally allowed.\'),\n-        default=[\'style\'],\n+        title=_("Custom attributes"),\n+        description=_("These attributes are additionally allowed."),\n+        default=["style", "controls", "poster", "autoplay"],\n         value_type=schema.TextLine(),\n         missing_value=[],\n-        required=False)\n+        required=False,\n+    )\n \n \n class ITinyMCELayoutSchema(Interface):\n     """This interface defines the layout properties."""\n \n     resizing = schema.Bool(\n-        title=_(\'Enable resizing the editor window.\'),\n-        description=_(\'This option gives you the ability to enable/disable \'\n-                      \'resizing the editor window. \'),\n+        title=_("Enable resizing the editor window."),\n+        description=_(\n+            "This option gives you the ability to enable/disable "\n+            "resizing the editor window. "\n+        ),\n         default=True,\n-        required=False)\n+        required=False,\n+    )\n \n     autoresize = schema.Bool(\n-        title=_(\'Enable auto resizing of the editor window.\'),\n-        description=_(\'This option gives you the ability to enable/disable \'\n-                      \'auto resizing the editor window depending \'\n-                      \'on the content.\'),\n+        title=_("Enable auto resizing of the editor window."),\n+        description=_(\n+            "This option gives you the ability to enable/disable "\n+            "auto resizing the editor window depending "\n+            "on the content."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     # TODO: add validation to assert % and px in the value\n     editor_width = schema.TextLine(\n-        title=_(\'Editor width\'),\n-        description=_(\'This option gives you the ability to specify the \'\n-                      \'width of the editor (like 100% or 400px).\'),\n+        title=_("Editor width"),\n+        description=_(\n+            "This option gives you the ability to specify the "\n+            "width of the editor (like 100% or 400px)."\n+        ),\n         default=None,\n-        required=False)\n+        required=False,\n+    )\n \n     # TODO: add validation to assert % and px in the value\n     editor_height = schema.TextLine(\n-        title=_(\'Editor height\'),\n-        description=_(\'This option gives you the ability to specify the \'\n-                      \'height of the editor in pixels. \'\n-                      \'If auto resize is enabled this value is used \'\n-                      \'as minimum height.\'),\n+        title=_("Editor height"),\n+        description=_(\n+            "This option gives you the ability to specify the "\n+            "height of the editor in pixels. "\n+            "If auto resize is enabled this value is used "\n+            "as minimum height."\n+        ),\n         default=None,\n-        required=False)\n+        required=False,\n+    )\n \n     content_css = schema.List(\n-        title=_(\'Choose the CSS used in WYSIWYG Editor Area\'),\n-        description=_(\'This option enables you to specify a custom CSS file \'\n-                      \'that provides content CSS. \'\n-                      \'This CSS file is the one used within the editor \'\n-                      \'(the editable area). In addition to what is listed, \'\n-                      \'here the plone bundle CSS and diazo themes using the \'\n-                      \'tinymce-content-css setting are also added.\'),\n+        title=_("Choose the CSS used in WYSIWYG Editor Area"),\n+        description=_(\n+            "This option enables you to specify a custom CSS file "\n+            "that provides content CSS. "\n+            "This CSS file is the one used within the editor "\n+            "(the editable area). In addition to what is listed, "\n+            "here the plone bundle CSS and diazo themes using the "\n+            "tinymce-content-css setting are also added."\n+        ),\n         value_type=schema.TextLine(),\n         missing_value=[],\n         default=[\n-            \'++plone++static/components/tinymce/\'\n-            \'skins/lightgray/content.min.css\'\n+            "++plone++static/components/tinymce/" "skins/lightgray/content.min.css"\n         ],\n-        required=False)\n+        required=False,\n+    )\n \n     header_styles = schema.List(\n-        title=_(\'Header styles\'),\n-        description=_(\'Name|tag\'),\n+        title=_("Header styles"),\n+        description=_("Name|tag"),\n         value_type=schema.TextLine(),\n         missing_value=[],\n         default=[\n-            \'Header 1|h1\',\n-            \'Header 2|h2\',\n-            \'Header 3|h3\',\n-            \'Header 4|h4\',\n-            \'Header 5|h5\',\n-            \'Header 6|h6\'\n-        ])\n+            "Header 1|h1",\n+            "Header 2|h2",\n+            "Header 3|h3",\n+            "Header 4|h4",\n+            "Header 5|h5",\n+            "Header 6|h6",\n+        ],\n+    )\n \n     inline_styles = schema.List(\n-        title=_(\'Inline styles\'),\n-        description=_(\'Name|format|icon\'),\n+        title=_("Inline styles"),\n+        description=_("Name|format|icon"),\n         value_type=schema.TextLine(),\n         missing_value=[],\n         default=[\n-            \'Bold|bold|bold\',\n-            \'Italic|italic|italic\',\n-            \'Underline|underline|underline\',\n-            \'Strikethrough|strikethrough|strikethrough\',\n-            \'Superscript|superscript|superscript\',\n-            \'Subscript|subscript|subscript\',\n-            \'Code|code|code\'])\n+            "Bold|bold|bold",\n+            "Italic|italic|italic",\n+            "Underline|underline|underline",\n+            "Strikethrough|strikethrough|strikethrough",\n+            "Superscript|superscript|superscript",\n+            "Subscript|subscript|subscript",\n+            "Code|code|code",\n+            "Text in 2 columns|textcolumns2",\n+            "Text in 3 columns|textcolumns3",\n+        ],\n+    )\n \n     block_styles = schema.List(\n-        title=_(\'Block styles\'),\n-        description=_(\'Name|format\'),\n+        title=_("Block styles"),\n+        description=_("Name|format"),\n         value_type=schema.TextLine(),\n         missing_value=[],\n-        default=[\n-            \'Paragraph|p\',\n-            \'Blockquote|blockquote\',\n-            \'Div|div\',\n-            \'Pre|pre\'])\n+        default=["Paragraph|p", "Blockquote|blockquote", "Div|div", "Pre|pre"],\n+    )\n \n     alignment_styles = schema.List(\n-        title=_(\'Alignment styles\'),\n-        description=_(\'Name|format|icon\'),\n+        title=_("Alignment styles"),\n+        description=_("Name|format|icon"),\n         value_type=schema.TextLine(),\n         missing_value=[],\n         default=[\n-            \'Left|alignleft|alignleft\',\n-            \'Center|aligncenter|aligncenter\',\n-            \'Right|alignright|alignright\',\n-            \'Justify|alignjustify|alignjustify\'])\n+            "Left|alignleft|align-left",\n+            "Center|aligncenter|align-center",\n+            "Right|alignright|align-right",\n+            "Justify|alignjustify|align-justify",\n+        ],\n+    )\n \n     table_styles = schema.List(\n-        title=_(\'Table styles\'),\n-        description=_(\'Name|class\'),\n+        title=_("Table styles"),\n+        description=_("Name|class"),\n         value_type=schema.TextLine(),\n         missing_value=[],\n-        default=[\n-            \'Listing|listing\',\n-            \'Invisible Grid|invisible-grid\'\n-        ])\n+        default=["Listing|listing", "Invisible Grid|invisible-grid"],\n+    )\n \n     formats = schema.Text(\n-        title=_(\'Formats\'),\n+        title=_("Formats"),\n         description=_(\n-            \'Enter a JSON-formatted style format configuration. \'\n-            \'A format is for example the style that get applied when \'\n-            \'you press the bold button inside the editor. \'\n-            \'See https://www.tinymce.com/docs/configure/content-formatting/#formats\'),  # NOQA: E501\n+            "Enter a JSON-formatted style format configuration. "\n+            "A format is for example the style that get applied when "\n+            "you press the bold button inside the editor. "\n+            "See https://www.tinymce.com/docs/configure/content-formatting/#formats"\n+        ),  # NOQA: E501\n         constraint=validate_json,\n-        default=dump_json_to_text({\n-            \'discreet\': {\'inline\': \'span\', \'classes\': \'discreet\'},\n-            \'clearfix\': {\'block\': \'div\', \'classes\': \'clearfix\'}\n-        }),\n+        default=dump_json_to_text(\n+            {\n+                "discreet": {"inline": "span", "classes": "discreet"},\n+                "clearfix": {"block": "div", "classes": "clearfix"},\n+                "alignleft": {\n+                    "selector": "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table",\n+                    "classes": "text-start",\n+                },\n+                "aligncenter": {\n+                    "selector": "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table",\n+                    "classes": "text-center",\n+                },\n+                "alignright": {\n+                    "selector": "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table",\n+                    "classes": "text-end",\n+                },\n+                "alignjustify": {\n+                    "selector": "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table",\n+                    "classes": "text-justify",\n+                },\n+                "textcolumns2": {"selector": "p", "classes": "text-columns-2"},\n+                "textcolumns3": {"selector": "p", "classes": "text-columns-3"}\n+            }\n+        ),\n         required=True,\n     )\n \n@@ -434,135 +500,168 @@ class ITinyMCEPluginSchema(Interface):\n     """This interface defines the toolbar properties."""\n \n     plugins = schema.List(\n-        title=_(\'label_tinymce_plugins\', default=\'Editor plugins\'),\n-        description=_(\'help_tinymce_plugins\', default=(\n-            \'Select plugins to include with tinymce\')),\n-        value_type=schema.Choice(vocabulary=SimpleVocabulary([\n-            SimpleTerm(\'advlist\', \'advlist\', \'advlist\'),\n-            SimpleTerm(\'anchor\', \'anchor\', \'anchor\'),\n-            SimpleTerm(\'autosave\', \'autosave\', \'autosave\'),\n-            SimpleTerm(\'charmap\', \'charmap\', \'charmap\'),\n-            SimpleTerm(\'code\', \'code\', \'code\'),\n-            SimpleTerm(\'colorpicker\', \'colorpicker\', \'colorpicker\'),\n-            SimpleTerm(\'contextmenu\', \'contextmenu\', \'contextmenu\'),\n-            SimpleTerm(\'directionality\', \'directionality\', \'directionality\'),\n-            SimpleTerm(\'emoticons\', \'emoticons\', \'emoticons\'),\n-            SimpleTerm(\'fullpage\', \'fullpage\', \'fullpage\'),\n-            SimpleTerm(\'fullscreen\', \'fullscreen\', \'fullscreen\'),\n-            SimpleTerm(\'hr\', \'hr\', \'hr\'),\n-            SimpleTerm(\'insertdatetime\', \'insertdatetime\', \'insertdatetime\'),\n-            SimpleTerm(\'layer\', \'layer\', \'layer\'),\n-            SimpleTerm(\'lists\', \'lists\', \'lists\'),\n-            SimpleTerm(\'media\', \'media\', \'media\'),\n-            SimpleTerm(\'nonbreaking\', \'nonbreaking\', \'nonbreaking\'),\n-            SimpleTerm(\'noneditable\', \'noneditable\', \'noneditable\'),\n-            SimpleTerm(\'pagebreak\', \'pagebreak\', \'pagebreak\'),\n-            SimpleTerm(\'paste\', \'paste\', \'paste\'),\n-            SimpleTerm(\'preview\', \'preview\', \'preview\'),\n-            SimpleTerm(\'print\', \'print\', \'print\'),\n-            # XXX disable save button since it is not implemeneted\n-            # SimpleTerm(\'save\', \'save\', u\'save\'),\n-            SimpleTerm(\'searchreplace\', \'searchreplace\', \'searchreplace\'),\n-            SimpleTerm(\'tabfocus\', \'tabfocus\', \'tabfocus\'),\n-            SimpleTerm(\'table\', \'table\', \'table\'),\n-            SimpleTerm(\'textcolor\', \'textcolor\', \'textcolor\'),\n-            SimpleTerm(\'textpattern\', \'textpattern\', \'textpattern\'),\n-            SimpleTerm(\'visualblocks\', \'visualblocks\', \'visualblocks\'),\n-            SimpleTerm(\'visualchars\', \'visualchars\', \'visualchars\'),\n-            SimpleTerm(\'wordcount\', \'wordcount\', \'wordcount\')\n-        ])),\n-        default=[\'advlist\', \'fullscreen\', \'hr\', \'lists\', \'media\',\n-                 \'nonbreaking\', \'noneditable\', \'pagebreak\', \'paste\', \'preview\',\n-                 \'print\', \'searchreplace\', \'tabfocus\', \'table\',\n-                 \'visualchars\', \'wordcount\', \'code\'],\n+        title=_("label_tinymce_plugins", default="Editor plugins"),\n+        description=_(\n+            "help_tinymce_plugins", default=("Select plugins to include with tinymce")\n+        ),\n+        value_type=schema.Choice(\n+            vocabulary=SimpleVocabulary(\n+                [\n+                    SimpleTerm("advlist", "advlist", "advlist"),\n+                    SimpleTerm("anchor", "anchor", "anchor"),\n+                    SimpleTerm("autosave", "autosave", "autosave"),\n+                    SimpleTerm("charmap", "charmap", "charmap"),\n+                    SimpleTerm("code", "code", "code"),\n+                    SimpleTerm("colorpicker", "colorpicker", "colorpicker"),\n+                    SimpleTerm("contextmenu", "contextmenu", "contextmenu"),\n+                    SimpleTerm("directionality", "directionality", "directionality"),\n+                    SimpleTerm("emoticons", "emoticons", "emoticons"),\n+                    SimpleTerm("fullpage", "fullpage", "fullpage"),\n+                    SimpleTerm("fullscreen", "fullscreen", "fullscreen"),\n+                    SimpleTerm("hr", "hr", "hr"),\n+                    SimpleTerm("insertdatetime", "insertdatetime", "insertdatetime"),\n+                    SimpleTerm("layer", "layer", "layer"),\n+                    SimpleTerm("lists", "lists", "lists"),\n+                    SimpleTerm("media", "media", "media"),\n+                    SimpleTerm("nonbreaking", "nonbreaking", "nonbreaking"),\n+                    SimpleTerm("noneditable", "noneditable", "noneditable"),\n+                    SimpleTerm("pagebreak", "pagebreak", "pagebreak"),\n+                    SimpleTerm("paste", "paste", "paste"),\n+                    SimpleTerm("preview", "preview", "preview"),\n+                    SimpleTerm("print", "print", "print"),\n+                    # XXX disable save button since it is not implemeneted\n+                    # SimpleTerm(\'save\', \'save\', u\'save\'),\n+                    SimpleTerm("searchreplace", "searchreplace", "searchreplace"),\n+                    SimpleTerm("tabfocus", "tabfocus", "tabfocus"),\n+                    SimpleTerm("table", "table", "table"),\n+                    SimpleTerm("textcolor", "textcolor", "textcolor"),\n+                    SimpleTerm("textpattern", "textpattern", "textpattern"),\n+                    SimpleTerm("template", "template", "template"),\n+                    SimpleTerm("visualblocks", "visualblocks", "visualblocks"),\n+                    SimpleTerm("visualchars", "visualchars", "visualchars"),\n+                    SimpleTerm("wordcount", "wordcount", "wordcount"),\n+                ]\n+            )\n+        ),\n+        default=[\n+            "advlist",\n+            "fullscreen",\n+            "hr",\n+            "lists",\n+            "media",\n+            "nonbreaking",\n+            "noneditable",\n+            "pagebreak",\n+            "paste",\n+            "preview",\n+            "print",\n+            "searchreplace",\n+            "tabfocus",\n+            "table",\n+            "visualchars",\n+            "wordcount",\n+            "code",\n+        ],\n         missing_value=[],\n-        required=False)\n+        required=False,\n+    )\n \n     menubar = schema.List(\n-        title=_(\'label_tinymce_menubar\', default=\'Menubar\'),\n-        description=_(\'help_tinymce_menubar\', default=(\n-            \'Enter what items you would like in the menu bar.\')),\n+        title=_("label_tinymce_menubar", default="Menubar"),\n+        description=_(\n+            "help_tinymce_menubar",\n+            default=("Enter what items you would like in the menu bar."),\n+        ),\n         required=True,\n         value_type=schema.TextLine(),\n         missing_value=[],\n-        default=[\n-            \'edit\', \'table\', \'format\',\n-            \'tools\' \'view\', \'insert\'])\n+        default=["edit", "table", "format", "tools", "view", "insert"],\n+    )\n \n     menu = schema.Text(\n-        title=_(\'label_tinymce_menu\', \'Menu\'),\n-        description=_(\'hint_tinymce_menu\',\n-                      default=\'JSON formatted Menu configuration.\'),\n+        title=_("label_tinymce_menu", "Menu"),\n+        description=_(\n+            "hint_tinymce_menu", default="JSON formatted Menu configuration."\n+        ),\n         constraint=validate_json,\n-        default=dump_json_to_text({\n-            \'edit\': {\n-                \'title\': \'Edit\',\n-                \'items\': \'undo redo | cut copy paste pastetext | \'\n-                         \'searchreplace textpattern selectall | textcolor\'},\n-            \'insert\': {\'title\': \'Insert\', \'items\': \'link media | template hr\'},\n-            \'view\': {\n-                \'title\': \'View\',\n-                \'items\': \'visualaid visualchars visualblocks preview \'\n-                         \'fullpage fullscreen\',\n-            },\n-            \'format\': {\n-                \'title\': \'Format\',\n-                \'items\': \'bold italic underline strikethrough \'\n-                         \'superscript subscript | formats | removeformat\'\n-            },\n-            \'table\': {\n-                \'title\': \'Table\',\n-                \'items\': \'inserttable tableprops deletetable | cell row column\'\n-            },\n-            \'tools\': {\n-                \'title\': \'Tools\',\n-                \'items\': \'spellchecker charmap emoticons insertdatetime \'\n-                         \'layer code\'\n+        default=dump_json_to_text(\n+            {\n+                "edit": {\n+                    "title": "Edit",\n+                    "items": "undo redo | cut copy paste pastetext | "\n+                    "searchreplace textpattern selectall | textcolor",\n+                },\n+                "insert": {"title": "Insert", "items": "link media | template hr"},\n+                "view": {\n+                    "title": "View",\n+                    "items": "visualaid visualchars visualblocks preview "\n+                    "fullpage fullscreen code",\n+                },\n+                "format": {\n+                    "title": "Format",\n+                    "items": "bold italic underline strikethrough "\n+                    "superscript subscript | formats | removeformat",\n+                },\n+                "table": {\n+                    "title": "Table",\n+                    "items": "inserttable tableprops deletetable | cell row column",\n+                },\n+                "tools": {\n+                    "title": "Tools",\n+                    "items": "spellchecker charmap emoticons insertdatetime " "layer",\n+                },\n             }\n-        })\n+        ),\n     )\n \n     templates = schema.Text(\n-        title=_(\'label_tinymce_templates\', default=\'Templates\'),\n+        title=_("label_tinymce_templates", default="Templates"),\n         description=_(\n-            \'help_tinymce_templates\',\n+            "help_tinymce_templates",\n             default=(\n-                \'Enter the list of templates in json format \'\n-                \'https://www.tinymce.com/docs/plugins/template/\'\n-            )\n+                "Enter the list of templates in json format "\n+                "https://www.tinymce.com/docs/plugins/template/"\n+            ),\n         ),\n         required=False,\n         constraint=validate_json,\n-        default=dump_json_to_text({}))\n+        default=dump_json_to_text({}),\n+    )\n \n     toolbar = schema.Text(\n-        title=_(\'label_tinymce_toolbar\', default=\'Toolbar\'),\n-        description=_(\'help_tinymce_toolbar\', default=(\n-            \'Enter how you would like the toolbar items to list.\')),\n+        title=_("label_tinymce_toolbar", default="Toolbar"),\n+        description=_(\n+            "help_tinymce_toolbar",\n+            default=("Enter how you would like the toolbar items to list."),\n+        ),\n         required=True,\n-        default=\'ltr rtl | undo redo | styleselect | bold italic | \'\n-                \'alignleft aligncenter alignright alignjustify | \'\n-                \'bullist numlist outdent indent | \'\n-                \'unlink plonelink ploneimage\')\n+        default="ltr rtl | undo redo | styleselect | bold italic | "\n+        "alignleft aligncenter alignright alignjustify | "\n+        "bullist numlist outdent indent | "\n+        "unlink plonelink ploneimage",\n+    )\n \n     custom_plugins = schema.List(\n-        title=_(\'Custom plugins\'),\n-        description=_(\'Enter a list of custom plugins which will be loaded \'\n-                      \'in the editor. Format is \'\n-                      \'pluginname|location, one per line.\'),\n+        title=_("Custom plugins"),\n+        description=_(\n+            "Enter a list of custom plugins which will be loaded "\n+            "in the editor. Format is "\n+            "pluginname|location, one per line."\n+        ),\n         required=False,\n         value_type=schema.TextLine(),\n         missing_value=[],\n-        default=[])\n+        default=[],\n+    )\n \n     custom_buttons = schema.List(\n-        title=_(\'Custom buttons\'),\n-        description=_(\n-            \'Enter a list of custom buttons which will be added to toolbar\'),\n+        title=_("Custom buttons"),\n+        description=_("Enter a list of custom buttons which will be added to toolbar"),\n         required=False,\n         value_type=schema.TextLine(),\n         missing_value=[],\n-        default=[])\n+        default=[],\n+    )\n \n \n ITinyMCELibrariesSchema = ITinyMCEPluginSchema  # bw compat\n@@ -572,69 +671,75 @@ class ITinyMCESpellCheckerSchema(Interface):\n     """This interface defines the libraries properties."""\n \n     libraries_spellchecker_choice = schema.Choice(\n-        title=_(\'Spellchecker plugin to use\'),\n-        description=_(\'This option allows you to choose the spellchecker for \'\n-                      \'TinyMCE.\'),\n+        title=_("Spellchecker plugin to use"),\n+        description=_(\n+            "This option allows you to choose the spellchecker for " "TinyMCE."\n+        ),\n         missing_value=set(),\n-        vocabulary=SimpleVocabulary([\n-            SimpleTerm(\'browser\', \'browser\',\n-                       _(\'Default browser spellchecker\')),\n-            SimpleTerm(\'AtD\', \'AtD\',\n-                       _(\'After the deadline (FLOSS)\')),\n-        ]),\n-        default=\'browser\',\n-        required=False)\n+        vocabulary=SimpleVocabulary(\n+            [\n+                SimpleTerm("browser", "browser", _("Default browser spellchecker")),\n+                SimpleTerm("AtD", "AtD", _("After the deadline (FLOSS)")),\n+            ]\n+        ),\n+        default="browser",\n+        required=False,\n+    )\n \n     libraries_atd_ignore_strings = schema.List(\n-        title=_(\'AtD ignore strings\'),\n+        title=_("AtD ignore strings"),\n         description=_(\n-            \'label_atd_ignore_strings\',\n+            "label_atd_ignore_strings",\n             default=\'A list of strings which the "After the Deadline" \'\n-                    \'spellchecker should ignore. \'\n-                    \'Note: This option is only applicable when the \'\n-                    \'appropriate spellchecker has been chosen above.\'),\n-        default=[\n-            \'Zope\',\n-            \'Plone\',\n-            \'TinyMCE\'],\n+            "spellchecker should ignore. "\n+            "Note: This option is only applicable when the "\n+            "appropriate spellchecker has been chosen above.",\n+        ),\n+        default=["Zope", "Plone", "TinyMCE"],\n         value_type=schema.TextLine(),\n         missing_value=[],\n-        required=False)\n+        required=False,\n+    )\n \n     libraries_atd_show_types = schema.List(\n-        title=_(\'AtD error types to show\'),\n+        title=_("AtD error types to show"),\n         description=_(\n-            \'help_atderrortypes_to_show\',\n-            default=\'A list of error types which the \'\n-                    \'"After the Deadline" spellchecker should check for. \'\n-                    \'By default, all the available error type will be \'\n-                    \'listed here.\'),\n+            "help_atderrortypes_to_show",\n+            default="A list of error types which the "\n+            \'"After the Deadline" spellchecker should check for. \'\n+            "By default, all the available error type will be "\n+            "listed here.",\n+        ),\n         value_type=schema.TextLine(),\n         default=[\n-            \'Bias Language\',\n-            \'Cliches\',\n-            \'Complex Expression\',\n-            \'Diacritical Marks\',\n-            \'Double Negatives\',\n-            \'Hidden Verbs\',\n-            \'Jargon Language\',\n-            \'Passive voice\',\n-            \'Phrases to Avoid\',\n-            \'Redundant Expression\'],\n+            "Bias Language",\n+            "Cliches",\n+            "Complex Expression",\n+            "Diacritical Marks",\n+            "Double Negatives",\n+            "Hidden Verbs",\n+            "Jargon Language",\n+            "Passive voice",\n+            "Phrases to Avoid",\n+            "Redundant Expression",\n+        ],\n         missing_value=[],\n-        required=False)\n+        required=False,\n+    )\n \n     libraries_atd_service_url = schema.TextLine(\n-        title=_(\'AtD service URL\'),\n+        title=_("AtD service URL"),\n         description=_(\n-            \'help_atd_service_url\',\n+            "help_atd_service_url",\n             default=\'The URL of the "After the Deadline" grammar and spell \'\n-                    \'checking server. \'\n-                    \'The default value is the public server, \'\n-                    \'but ideally you should download and install your own \'\n-                    \'and specify its address here.\'),\n+            "checking server. "\n+            "The default value is the public server, "\n+            "but ideally you should download and install your own "\n+            "and specify its address here.",\n+        ),\n         required=True,\n-        default=\'service.afterthedeadline.com\',)\n+        default="service.afterthedeadline.com",\n+    )\n \n \n class ITinyMCEResourceTypesSchema(Interface):\n@@ -650,52 +755,60 @@ class ITinyMCEResourceTypesSchema(Interface):\n     #    required=False)\n \n     contains_objects = schema.List(\n-        title=_(\'Contains objects\'),\n-        description=_(\'Enter a list of content types which can contain other \'\n-                      \'objects. Format is one contenttype per line.\'),\n+        title=_("Contains objects"),\n+        description=_(\n+            "Enter a list of content types which can contain other "\n+            "objects. Format is one contenttype per line."\n+        ),\n         value_type=schema.TextLine(),\n-        default=[\n-            \'Folder\',\n-            \'Large Plone Folder\',\n-            \'Plone Site\'],\n+        default=["Folder", "Large Plone Folder", "Plone Site"],\n         missing_value=[],\n-        required=False)\n+        required=False,\n+    )\n \n     image_objects = schema.List(\n-        title=_(\'Image objects\'),\n-        description=_(\'Enter a list of content types which can be used as \'\n-                      \'images. Format is one contenttype per line.\'),\n-        default=[\'Image\'],\n+        title=_("Image objects"),\n+        description=_(\n+            "Enter a list of content types which can be used as "\n+            "images. Format is one contenttype per line."\n+        ),\n+        default=["Image"],\n         value_type=schema.TextLine(),\n         missing_value=[],\n-        required=False)\n+        required=False,\n+    )\n \n     entity_encoding = schema.Choice(\n-        title=_(\'Entity encoding\'),\n-        description=_(\n-            \'This option controls how entities/characters get processed. \'\n-            \'Named: Characters will be converted into named entities \'\n-            \'based on the entities option. \'\n-            \'Numeric: Characters will be converted into numeric entities. \'\n-            \'Raw: All characters will be stored in non-entity form \'\n-            \'except these XML default entities: amp lt gt quot\'),\n-        missing_value=set(),\n+        title=_("Entity encoding"),\n+        description=_(\n+            "This option controls how entities/characters get processed. "\n+            "Named: Characters will be converted into named entities "\n+            "based on the entities option. "\n+            "Numeric: Characters will be converted into numeric entities. "\n+            "Raw: All characters will be stored in non-entity form "\n+            "except these XML default entities: amp lt gt quot"\n+        ),\n+        # missing_value=set(),\n         vocabulary=SimpleVocabulary(\n-            [SimpleTerm(\'named\', \'named\', _(\'Named\')),\n-             SimpleTerm(\'numeric\', \'numeric\', _(\'Numeric\')),\n-             SimpleTerm(\'raw\', \'raw\', _(\'Raw\'))]),\n+            [\n+                SimpleTerm("named", "named", _("Named")),\n+                SimpleTerm("numeric", "numeric", _("Numeric")),\n+                SimpleTerm("raw", "raw", _("Raw")),\n+            ]\n+        ),\n         default="raw",\n-        required=False)\n+        required=False,\n+    )\n \n \n class ITinyMCEAdvancedSchema(Interface):\n     """This interface defines the resource types properties."""\n \n     other_settings = schema.Text(\n-        title=_(\'label_tinymce_other_settings\', \'Other settings\'),\n+        title=_("label_tinymce_other_settings", "Other settings"),\n         description=_(\n-            \'hint_tinymce_other_settings\',\n-            default=\'Other TinyMCE configuration formatted as JSON.\'\n+            "hint_tinymce_other_settings",\n+            default="Other TinyMCE configuration formatted as JSON.",\n         ),\n         required=False,\n         constraint=validate_json,\n@@ -708,7 +821,7 @@ class ITinyMCESchema(\n     ITinyMCEPluginSchema,\n     ITinyMCESpellCheckerSchema,\n     ITinyMCEResourceTypesSchema,\n-    ITinyMCEAdvancedSchema\n+    ITinyMCEAdvancedSchema,\n ):\n     """TinyMCE Schema"""\n \n@@ -716,151 +829,142 @@ class ITinyMCESchema(\n class IMaintenanceSchema(Interface):\n \n     days = schema.Int(\n-        title=_(\'Days of object history to keep after packing\'),\n+        title=_("Days of object history to keep after packing"),\n         description=_(\n-            \'You should pack your database regularly. This number \'\n-            \'indicates how many days of undo history you want to \'\n-            \'keep. It is unrelated to versioning, so even if you \'\n-            \'pack the database, the history of the content changes \'\n-            \'will be kept. Recommended value is 7 days.\'\n+            "You should pack your database regularly. This number "\n+            "indicates how many days of undo history you want to "\n+            "keep. It is unrelated to versioning, so even if you "\n+            "pack the database, the history of the content changes "\n+            "will be kept. Recommended value is 7 days."\n         ),\n         default=7,\n         min=0,\n-        required=True\n+        required=True,\n     )\n \n \n class INavigationSchema(Interface):\n \n     navigation_depth = schema.Int(\n-        title=_(\'Navigation depth\'),\n-        description=_(\'Number of folder levels to show in the navigation.\'),\n+        title=_("Navigation depth"),\n+        description=_("Number of folder levels to show in the navigation."),\n         default=3,\n-        required=True\n+        required=True,\n     )\n \n     generate_tabs = schema.Bool(\n-        title=_(\'Automatically generate tabs\'),\n+        title=_("Automatically generate tabs"),\n         description=_(\n-            \'By default, all items created at the root level will \'\n-            \'appear as tabs. You can turn this off if you prefer manually \'\n-            \'constructing this part of the navigation.\'),\n+            "By default, all items created at the root level will "\n+            "appear as tabs. You can turn this off if you prefer manually "\n+            "constructing this part of the navigation."\n+        ),\n         default=True,\n-        required=False)\n+        required=False,\n+    )\n \n     nonfolderish_tabs = schema.Bool(\n-        title=_(\'Generate tabs for items other than folders.\'),\n+        title=_("Generate tabs for items other than folders."),\n         description=_(\n-            \'By default, any content item in the root of the portal will \'\n-            \'appear as a tab. If you turn this option off, only folders \'\n-            \'will be shown. This only has an effect if \\\'automatically \'\n-            \'generate tabs\\\' is enabled.\'),\n+            "By default, any content item in the root of the portal will "\n+            "appear as a tab. If you turn this option off, only folders "\n+            "will be shown. This only has an effect if \'automatically "\n+            "generate tabs\' is enabled."\n+        ),\n         default=True,\n-        required=False)\n+        required=False,\n+    )\n \n     sort_tabs_on = schema.Choice(\n-        title=_(\'Sort tabs on\'),\n-        description=_(\n-            \'Index used to sort the tabs\'\n-        ),\n+        title=_("Sort tabs on"),\n+        description=_("Index used to sort the tabs"),\n         required=True,\n-        default=\'getObjPositionInParent\',\n-        vocabulary=SimpleVocabulary([\n-            # there is no vocabulary of sortable indexes by now, so hard code\n-            # some options here\n-            SimpleTerm(\n-                \'getObjPositionInParent\',\n-                \'getObjPositionInParent\',\n-                _(\'Position in Parent\')\n-            ),\n-            SimpleTerm(\n-                \'sortable_title\',\n-                \'sortable_title\',\n-                _(\'Title\')\n-            ),\n-            SimpleTerm(\n-                \'getId\',\n-                \'getId\',\n-                _(\'Short Name (ID)\')\n-            ),\n-        ]),\n+        default="getObjPositionInParent",\n+        vocabulary=SimpleVocabulary(\n+            [\n+                # there is no vocabulary of sortable indexes by now, so hard code\n+                # some options here\n+                SimpleTerm(\n+                    "getObjPositionInParent",\n+                    "getObjPositionInParent",\n+                    _("Position in Parent"),\n+                ),\n+                SimpleTerm("sortable_title", "sortable_title", _("Title")),\n+                SimpleTerm("getId", "getId", _("Short Name (ID)")),\n+            ]\n+        ),\n     )\n     sort_tabs_reversed = schema.Bool(\n-        title=_(\'Reversed sort order for tabs.\'),\n-        description=_(\n-            \'Sort tabs in descending.\'),\n+        title=_("Reversed sort order for tabs."),\n+        description=_("Sort tabs in descending."),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     displayed_types = schema.Tuple(\n-        title=_(\'Displayed content types\'),\n+        title=_("Displayed content types"),\n         description=_(\n-            \'The content types that should be shown in the navigation and \'\n-            \'site map.\'),\n-        required=False,\n-        default=(\n-            \'Image\',\n-            \'File\',\n-            \'Link\',\n-            \'News Item\',\n-            \'Folder\',\n-            \'Document\',\n-            \'Event\'\n+            "The content types that should be shown in the navigation and " "site map."\n         ),\n+        required=False,\n+        default=("Image", "File", "Link", "News Item", "Folder", "Document", "Event"),\n         missing_value=(),\n         value_type=schema.Choice(\n-            source=\'plone.app.vocabularies.ReallyUserFriendlyTypes\'\n-        ))\n+            source="plone.app.vocabularies.ReallyUserFriendlyTypes"\n+        ),\n+    )\n \n     filter_on_workflow = schema.Bool(\n-        title=_(\'Filter on workflow state\'),\n+        title=_("Filter on workflow state"),\n         description=_(\n-            \'The workflow states that should be shown in the navigation \'\n-            \'and the site map.\'),\n+            "The workflow states that should be shown in the navigation "\n+            "and the site map."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     workflow_states_to_show = schema.Tuple(\n         required=False,\n         default=(),\n         missing_value=(),\n-        value_type=schema.Choice(\n-            source=\'plone.app.vocabularies.WorkflowStates\'))\n+        value_type=schema.Choice(source="plone.app.vocabularies.WorkflowStates"),\n+    )\n \n     show_excluded_items = schema.Bool(\n         title=_(\n-            \'Show items normally excluded from navigation if viewing their \'\n-            \'children.\'),\n+            "Show items normally excluded from navigation if viewing their " "children."\n+        ),\n         description=_(\n-            \'If an item has been excluded from navigation should it be \'\n-            \'shown in navigation when viewing content contained within it \'\n-            \'or within a subfolder.\'),\n+            "If an item has been excluded from navigation should it be "\n+            "shown in navigation when viewing content contained within it "\n+            "or within a subfolder."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     root = schema.TextLine(\n-        title=_(\n-            \'Root\'),\n+        title=_("Root"),\n         description=_(\n-            \'Path to be used as navigation root, relative to Plone site root.\'\n-            \'Starts with \\\'/\\\'\'\n+            "Path to be used as navigation root, relative to Plone site root."\n+            "Starts with \'/\'"\n         ),\n-        default=\'/\',\n-        required=True\n+        default="/",\n+        required=True,\n     )\n \n     sitemap_depth = schema.Int(\n-        title=_(\'Sitemap depth\'),\n-        description=_(\'Number of folder levels to show in the site map.\'),\n+        title=_("Sitemap depth"),\n+        description=_("Number of folder levels to show in the site map."),\n         default=3,\n-        required=True\n+        required=True,\n     )\n \n     parent_types_not_to_query = schema.List(\n-        title=_(\'Hide children of these types\'),\n-        description=_(\n-            \'Hide content inside the following types in Navigation.\'),\n-        default=[\'TempFolder\'],\n+        title=_("Hide children of these types"),\n+        description=_("Hide content inside the following types in Navigation."),\n+        default=["TempFolder"],\n         value_type=schema.TextLine(),\n         missing_value=(),\n         required=False,\n@@ -870,495 +974,552 @@ class INavigationSchema(Interface):\n class ISearchSchema(Interface):\n \n     enable_livesearch = schema.Bool(\n-        title=_(\'Enable LiveSearch\'),\n+        title=_("Enable LiveSearch"),\n         description=_(\n-            \'Enables the LiveSearch feature, which shows live \'\n-            \'results if the browser supports JavaScript.\'),\n+            "Enables the LiveSearch feature, which shows live "\n+            "results if the browser supports JavaScript."\n+        ),\n         default=True,\n-        required=False\n+        required=False,\n     )\n \n     types_not_searched = schema.Tuple(\n-        title=_(\'Define the types to be shown in the site and searched\'),\n+        title=_("Define the types to be shown in the site and searched"),\n         description=_(\n-            \'Define the types that should be searched and be \'\n-            \'available in the user facing part of the site. \'\n-            \'Note that if new content types are installed, they \'\n-            \'will be enabled by default unless explicitly turned \'\n-            \'off here or by the relevant installer.\'\n+            "Define the types that should be searched and be "\n+            "available in the user facing part of the site. "\n+            "Note that if new content types are installed, they "\n+            "will be enabled by default unless explicitly turned "\n+            "off here or by the relevant installer."\n         ),\n         required=False,\n         default=(\n-            \'Discussion Item\',\n-            \'Plone Site\',\n-            \'TempFolder\',\n+            "Discussion Item",\n+            "Plone Site",\n+            "TempFolder",\n         ),\n         missing_value=(),\n-        value_type=schema.Choice(\n-            source=\'plone.app.vocabularies.PortalTypes\'\n-        ),\n+        value_type=schema.Choice(source="plone.app.vocabularies.PortalTypes"),\n     )\n \n     search_results_description_length = schema.Int(\n-        title=_(\'Crop the item description in search result listings \'\n-                \'after a number of characters.\'),\n+        title=_(\n+            "Crop the item description in search result listings "\n+            "after a number of characters."\n+        ),\n         required=False,\n         default=160,\n     )\n \n     sort_on = schema.Choice(\n-        title=_(\'label_sort_on\', default=\'Sort on\'),\n-        description=_(\'Sort the default search on this index\'),\n-        vocabulary=SimpleVocabulary([\n-            SimpleTerm(\'relevance\', \'relevance\', _(\'relevance\')),\n-            SimpleTerm(\'Date\', \'Date\', _(\'date (newest first)\')),\n-            SimpleTerm(\'sortable_title\', \'sortable_title\',\n-                       _(\'alphabetically\'))]),\n-        default=\'relevance\',\n-        required=True\n+        title=_("label_sort_on", default="Sort on"),\n+        description=_("Sort the default search on this index"),\n+        vocabulary=SimpleVocabulary(\n+            [\n+                SimpleTerm("relevance", "relevance", _("relevance")),\n+                SimpleTerm("Date", "Date", _("date (newest first)")),\n+                SimpleTerm("sortable_title", "sortable_title", _("alphabetically")),\n+            ]\n+        ),\n+        default="relevance",\n+        required=True,\n     )\n \n \n class ISecuritySchema(Interface):\n \n     enable_self_reg = schema.Bool(\n-        title=_(\'Enable self-registration\'),\n+        title=_("Enable self-registration"),\n         description=_(\n-            \'Allows users to register themselves on the site. If \'\n-            \'not selected, only site managers can add new users.\'),\n+            "Allows users to register themselves on the site. If "\n+            "not selected, only site managers can add new users."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     enable_user_pwd_choice = schema.Bool(\n-        title=_(\'Let users select their own passwords\'),\n+        title=_("Let users select their own passwords"),\n         description=_(\n-            \'If not selected, a URL will be generated and \'\n-            \'e-mailed. Users are instructed to follow the link to \'\n-            \'reach a page where they can change their password and \'\n-            \'complete the registration process; this also verifies \'\n-            \'that they have entered a valid email address.\'),\n+            "If not selected, a URL will be generated and "\n+            "e-mailed. Users are instructed to follow the link to "\n+            "reach a page where they can change their password and "\n+            "complete the registration process; this also verifies "\n+            "that they have entered a valid email address."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     enable_user_folders = schema.Bool(\n-        title=_(\'Enable User Folders\'),\n+        title=_("Enable User Folders"),\n         description=_(\n-            \'If selected, home folders where users can create \'\n-            \'content will be created when they log in.\'),\n+            "If selected, home folders where users can create "\n+            "content will be created when they log in."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     allow_anon_views_about = schema.Bool(\n-        title=_(\'Allow anyone to view \\\'about\\\' information\'),\n+        title=_("Allow anyone to view \'about\' information"),\n         description=_(\n-            \'If not selected only logged-in users will be able to \'\n-            \'view information about who created an item and when it \'\n-            \'was modified.\'),\n+            "If not selected only logged-in users will be able to "\n+            "view information about who created an item and when it "\n+            "was modified."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     use_email_as_login = schema.Bool(\n-        title=_(\'Use email address as login name\'),\n-        description=_(\n-            \'Allows users to login with their email address instead \'\n-            \'of specifying a separate login name. This also updates \'\n-            \'the login name of existing users, which may take a \'\n-            \'while on large sites. The login name is saved as \'\n-            \'lower case, but to be userfriendly it does not matter \'\n-            \'which case you use to login. When duplicates are found, \'\n-            \'saving this form will fail. You can use the \'\n-            \'@@migrate-to-emaillogin page to show the duplicates.\'),\n+        title=_("Use email address as login name"),\n+        description=_(\n+            "Allows users to login with their email address instead "\n+            "of specifying a separate login name. This also updates "\n+            "the login name of existing users, which may take a "\n+            "while on large sites. The login name is saved as "\n+            "lower case, but to be userfriendly it does not matter "\n+            "which case you use to login. When duplicates are found, "\n+            "saving this form will fail. You can use the "\n+            "@@migrate-to-emaillogin page to show the duplicates."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     use_uuid_as_userid = schema.Bool(\n-        title=_(\'Use UUID user ids\'),\n+        title=_("Use UUID user ids"),\n         description=_(\n-            \'Use automatically generated UUIDs as user id for new users. \'\n-            \'When not turned on, the default is to use the same as the \'\n-            \'login name, or when using the email address as login name we \'\n-            \'generate a user id based on the fullname.\'),\n+            "Use automatically generated UUIDs as user id for new users. "\n+            "When not turned on, the default is to use the same as the "\n+            "login name, or when using the email address as login name we "\n+            "generate a user id based on the fullname."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     autologin_after_password_reset = schema.Bool(\n-        title=_(\'Login user after password reset\'),\n+        title=_("Login user after password reset"),\n         description=_(\n-            \'After successful password reset the user will be logged \'\n-            \'in automatically.\'),\n+            "After successful password reset the user will be logged "\n+            "in automatically."\n+        ),\n         default=True,\n-        required=False)\n+        required=False,\n+    )\n \n \n class ISiteSchema(Interface):\n \n     site_title = schema.TextLine(\n-        title=_(\'Site title\'),\n+        title=_("Site title"),\n         description=_(\n-            \'This shows up in the title bar of \'\n-            \'browsers and in syndication feeds.\'),\n-        default=\'Plone site\')\n+            "This shows up in the title bar of " "browsers and in syndication feeds."\n+        ),\n+        default="Plone site",\n+    )\n \n     site_logo = schema.Bytes(\n-        title=_(\'Site Logo\'),\n-        description=_(\'This shows a custom logo on your site.\'),\n+        title=_("Site Logo"),\n+        description=_("This shows a custom logo on your site."),\n         required=False,\n     )\n \n     site_favicon_mimetype = schema.TextLine(\n-        title=_(\'MIME type of the site favicon\'),\n-        description=_(\'MIME type of the favicon (automatically set when a new favicon is uploaded)\'),\n+        title=_("MIME type of the site favicon"),\n+        description=_(\n+            "MIME type of the favicon (automatically set when a new favicon is uploaded)"\n+        ),\n         required=False,\n-        default=\'image/vnd.microsoft.icon\'\n+        default="image/vnd.microsoft.icon",\n     )\n \n     site_favicon = schema.Bytes(\n-        title=_(\'Site Favicon\'),\n-        description=_(\'This shows a custom favicon on your site.\'),\n+        title=_("Site Favicon"),\n+        description=_("This shows a custom favicon on your site."),\n         required=False,\n     )\n \n     exposeDCMetaTags = schema.Bool(\n-        title=_(\'Expose Dublin Core metadata\'),\n-        description=_(\'Exposes the Dublin Core properties as metatags.\'),\n+        title=_("Expose Dublin Core metadata"),\n+        description=_("Exposes the Dublin Core properties as metatags."),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     enable_sitemap = schema.Bool(\n-        title=_(\'Expose sitemap.xml.gz\'),\n-        description=_(\n-            \'Exposes your content as a file \'\n-            \'according to the \'\n-            \'<a href=\\\'http://sitemaps.org\\\'>sitemaps.org</a> \'\n-            \'standard. You \'\n-            \'can submit this to compliant search engines \'\n-            \'like Google, Yahoo and Microsoft. It allows \'\n-            \'these search engines to more intelligently \'\n-            \'crawl your site.\'),\n+        title=_("Expose sitemap.xml.gz"),\n+        description=_(\n+            "Exposes your content as a file "\n+            "according to the "\n+            "<a href=\'http://sitemaps.org\'>sitemaps.org</a> "\n+            "standard. You "\n+            "can submit this to compliant search engines "\n+            "like Google, Yahoo and Microsoft. It allows "\n+            "these search engines to more intelligently "\n+            "crawl your site."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     webstats_js = schema.SourceText(\n-        title=_(\'JavaScript for web statistics support\'),\n+        title=_("JavaScript for web statistics support"),\n         description=_(\n-            \'For enabling web statistics support \'\n-            \'from external providers (e.g. Google \'\n-            \'Analytics). Paste the provided code snippet here. \'\n-            \'It will be rendered as \'\n-            \'entered near the end of the page.\'),\n-        default=\'\',\n-        required=False)\n+            "For enabling web statistics support "\n+            "from external providers (e.g. Google "\n+            "Analytics). Paste the provided code snippet here. "\n+            "It will be rendered as "\n+            "entered near the end of the page."\n+        ),\n+        default="",\n+        required=False,\n+    )\n \n     display_publication_date_in_byline = schema.Bool(\n-        title=_(\'Display publication date\'),\n-        description=_(\n-            \'Show in the byline the date a content item was published.\'),\n+        title=_("Display publication date"),\n+        description=_("Show in the byline the date a content item was published."),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     icon_visibility = schema.Choice(\n-        title=_(\'Icon visibility\'),\n-        description=_(\'Show icons in listings\'),\n-        default=\'enabled\',\n-        vocabulary=SimpleVocabulary([\n-            SimpleTerm(\'false\', \'false\', _(\'Never\')),\n-            SimpleTerm(\'enabled\', \'enabled\', _(\'Always\')),\n-            SimpleTerm(\'authenticated\', \'authenticated\',\n-                       _(\'For authenticated users only\'))]),\n-        required=True)\n+        title=_("Icon visibility"),\n+        description=_("Show icons in listings"),\n+        default="enabled",\n+        vocabulary=SimpleVocabulary(\n+            [\n+                SimpleTerm("false", "false", _("Never")),\n+                SimpleTerm("enabled", "enabled", _("Always")),\n+                SimpleTerm(\n+                    "authenticated", "authenticated", _("For authenticated users only")\n+                ),\n+            ]\n+        ),\n+        required=True,\n+    )\n \n     thumb_visibility = schema.Choice(\n-        title=_(\'Thumb visibility\'),\n-        description=_(\'Show thumbnail images in listings\'),\n-        default=\'enabled\',\n-        vocabulary=SimpleVocabulary([\n-            SimpleTerm(\'false\', \'false\', _(\'Never\')),\n-            SimpleTerm(\'enabled\', \'enabled\', _(\'Always\')),\n-            SimpleTerm(\'authenticated\', \'authenticated\',\n-                       _(\'For authenticated users only\'))]),\n-        required=True)\n+        title=_("Thumb visibility"),\n+        description=_("Show thumbnail images in listings"),\n+        default="enabled",\n+        vocabulary=SimpleVocabulary(\n+            [\n+                SimpleTerm("false", "false", _("Never")),\n+                SimpleTerm("enabled", "enabled", _("Always")),\n+                SimpleTerm(\n+                    "authenticated", "authenticated", _("For authenticated users only")\n+                ),\n+            ]\n+        ),\n+        required=True,\n+    )\n \n     no_thumbs_portlet = schema.Bool(\n-        title=_(\'No Thumbs in portlets\'),\n+        title=_("No Thumbs in portlets"),\n         description=_(\n-            \'Suppress thumbs in all portlets;\'\n-            \' this default can be overridden individually \'\n-            \'in selected portlets\'),\n+            "Suppress thumbs in all portlets;"\n+            " this default can be overridden individually "\n+            "in selected portlets"\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     no_thumbs_lists = schema.Bool(\n-        title=_(\'No thumbs in list views\'),\n-        description=_(\'Suppress thumbs in all list views; \'\n-                      \'this default can be overriden individually\'),\n+        title=_("No thumbs in list views"),\n+        description=_(\n+            "Suppress thumbs in all list views; "\n+            "this default can be overriden individually"\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     no_thumbs_summary = schema.Bool(\n-        title=_(\'No thumbs in summary views\'),\n-        description=_(\'Suppress thumbs in all summary views; \'\n-                      \'this default can be overriden individually\'),\n+        title=_("No thumbs in summary views"),\n+        description=_(\n+            "Suppress thumbs in all summary views; "\n+            "this default can be overriden individually"\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     no_thumbs_tables = schema.Bool(\n-        title=_(\'No thumbs in table views\'), description=_(\n-            \'Suppress thumbs in all tableviews and in folder contents view; \'\n-            \'this default can be overriden individually\'),\n+        title=_("No thumbs in table views"),\n+        description=_(\n+            "Suppress thumbs in all tableviews and in folder contents view; "\n+            "this default can be overriden individually"\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     thumb_scale_portlet = schema.Choice(\n-        title=_(\'Thumb scale for portlets\'),\n-        description=_(\'This default can be overriden individually.\'),\n-        default=\'icon\',\n-        vocabulary=\'plone.app.vocabularies.ImagesScales\',\n-        required=True)\n+        title=_("Thumb scale for portlets"),\n+        description=_("This default can be overriden individually."),\n+        default="icon",\n+        vocabulary="plone.app.vocabularies.ImagesScales",\n+        required=True,\n+    )\n \n     thumb_scale_listing = schema.Choice(\n-        title=_(\'Thumb scale for listings\'),\n-        description=_(\'E.g. standard view;\'\n-                      \' This default can be overriden individually.\'),\n-        default=\'thumb\',\n-        vocabulary=\'plone.app.vocabularies.ImagesScales\',\n-        required=True)\n+        title=_("Thumb scale for listings"),\n+        description=_(\n+            "E.g. standard view;" " This default can be overriden individually."\n+        ),\n+        default="thumb",\n+        vocabulary="plone.app.vocabularies.ImagesScales",\n+        required=True,\n+    )\n \n     thumb_scale_table = schema.Choice(\n-        title=_(\'Thumb scale for tables\'),\n-        description=_(\'E.g., tabular view, folder content listing;\'\n-                      \' This default can be overriden individually.\'),\n-        default=\'tile\',\n-        vocabulary=\'plone.app.vocabularies.ImagesScales\',\n-        required=True)\n+        title=_("Thumb scale for tables"),\n+        description=_(\n+            "E.g., tabular view, folder content listing;"\n+            " This default can be overriden individually."\n+        ),\n+        default="tile",\n+        vocabulary="plone.app.vocabularies.ImagesScales",\n+        required=True,\n+    )\n \n     thumb_scale_summary = schema.Choice(\n-        title=_(\'Thumb scale for summary view\'),\n-        description=_(\'This default can be overriden individually.\'),\n-        default=\'mini\',\n-        vocabulary=\'plone.app.vocabularies.ImagesScales\',\n-        required=True)\n+        title=_("Thumb scale for summary view"),\n+        description=_("This default can be overriden individually."),\n+        default="mini",\n+        vocabulary="plone.app.vocabularies.ImagesScales",\n+        required=True,\n+    )\n \n     toolbar_position = schema.Choice(\n-        title=_(\'Toolbar position\'),\n+        title=_("Toolbar position"),\n         description=_(\n-            \'It can be on the side (vertical mode) \'\n-            \'or on the top (horizontal mode)\'),\n-        default=\'side\',\n-        vocabulary=SimpleVocabulary([\n-            SimpleTerm(\'side\', \'side\', _(\'Side\')),\n-            SimpleTerm(\'top\', \'top\', _(\'Top\'))]),\n-        required=True)\n+            "It can be on the side (vertical mode) " "or on the top (horizontal mode)"\n+        ),\n+        default="side",\n+        vocabulary=SimpleVocabulary(\n+            [SimpleTerm("side", "side", _("Side")), SimpleTerm("top", "top", _("Top"))]\n+        ),\n+        required=True,\n+    )\n \n     toolbar_logo = schema.TextLine(\n-        title=_(\'Relative URL for the toolbar logo\'),\n+        title=_("Relative URL for the toolbar logo"),\n         description=_(\n-            \'This must be a URL relative to the site root. \'\n-            \'By default it is /++plone++static/plone-toolbarlogo.svg\'),\n-        default=\'/++plone++static/plone-toolbarlogo.svg\',\n+            "This must be a URL relative to the site root. "\n+            "By default it is /++plone++static/plone-toolbarlogo.svg"\n+        ),\n+        default="/++plone++static/plone-toolbarlogo.svg",\n         required=False,\n     )\n \n     robots_txt = schema.SourceText(\n-        title=_(\'robots.txt\'),\n-        description=_(\n-            \'help_robots_txt\',\n-            default=\'robots.txt is read by search engines to \'\n-                    \'determine how to index your site. \'\n-                    \'For details see <a href=\\\'http://www.robotstxt.org\\\'>\'\n-                    \'http://www.robotstxt.org</a>. \'\n-                    \'Use \\\'{portal_url}\\\' for the site URL.\'),\n+        title=_("robots.txt"),\n+        description=_(\n+            "help_robots_txt",\n+            default="robots.txt is read by search engines to "\n+            "determine how to index your site. "\n+            "For details see <a href=\'http://www.robotstxt.org\'>"\n+            "http://www.robotstxt.org</a>. "\n+            "Use \'{portal_url}\' for the site URL.",\n+        ),\n         default=ROBOTS_TXT,\n         required=False,\n     )\n \n     default_page = schema.List(\n-        title=_(\'Default page IDs\'),\n+        title=_("Default page IDs"),\n         description=_(\n-            \'Select which IDs (short names) can act as fallback \'\n-            \'default pages for a container.\'),\n+            "Select which IDs (short names) can act as fallback "\n+            "default pages for a container."\n+        ),\n         required=False,\n-        default=[\n-            \'index_html\',\n-            \'index.html\',\n-            \'index.htm\',\n-            \'FrontPage\'],\n+        default=["index_html", "index.html", "index.htm", "FrontPage"],\n         missing_value=[],\n-        value_type=schema.TextLine())\n+        value_type=schema.TextLine(),\n+    )\n \n     roles_allowed_to_add_keywords = schema.List(\n-        title=_(\'Roles that can add keywords\'),\n+        title=_("Roles that can add keywords"),\n         description=_(\n-            \'help_allow_roles_to_add_keywords\',\n-            default=\'Only the following roles can add new keywords \'),\n+            "help_allow_roles_to_add_keywords",\n+            default="Only the following roles can add new keywords ",\n+        ),\n         required=False,\n         default=[\n-            \'Manager\',\n-            \'Site Administrator\',\n-            \'Reviewer\',\n+            "Manager",\n+            "Site Administrator",\n+            "Reviewer",\n         ],\n         missing_value=[],\n-        value_type=schema.Choice(vocabulary=\'plone.app.vocabularies.Roles\'),\n+        value_type=schema.Choice(vocabulary="plone.app.vocabularies.Roles"),\n     )\n \n \n class IDateAndTimeSchema(Interface):\n-    """Controlpanel settings for date and time related settings.\n-    """\n+    """Controlpanel settings for date and time related settings."""\n \n     portal_timezone = schema.Choice(\n-        title=_(\'Portal default timezone\'),\n+        title=_("Portal default timezone"),\n         description=_(\n-            \'help_portal_timezone\',\n-            default=\'The timezone setting of the portal. Users can set \'\n-                    \'their own timezone, if available timezones are \'\n-                    \'defined.\'),\n+            "help_portal_timezone",\n+            default="The timezone setting of the portal. Users can set "\n+            "their own timezone, if available timezones are "\n+            "defined.",\n+        ),\n         required=True,\n         default=None,\n-        vocabulary=\'plone.app.vocabularies.CommonTimezones\')\n+        vocabulary="plone.app.vocabularies.CommonTimezones",\n+    )\n \n     available_timezones = schema.List(\n-        title=_(\'Available timezones\'),\n+        title=_("Available timezones"),\n         description=_(\n-            \'help_available_timezones\',\n-            default=\'The timezones, which should be available for the \'\n-                    \'portal. Can be set for users and events\'),\n+            "help_available_timezones",\n+            default="The timezones, which should be available for the "\n+            "portal. Can be set for users and events",\n+        ),\n         required=False,\n         default=[],\n         missing_value=[],\n-        value_type=schema.Choice(\n-            vocabulary=\'plone.app.vocabularies.Timezones\'))\n+        value_type=schema.Choice(vocabulary="plone.app.vocabularies.Timezones"),\n+    )\n \n     first_weekday = schema.Choice(\n-        title=_(\'label_first_weekday\', default=\'First weekday\'),\n-        description=_(\n-            \'help_first_weekday\',\n-            default=\'First day in the week.\'),\n+        title=_("label_first_weekday", default="First weekday"),\n+        description=_("help_first_weekday", default="First day in the week."),\n         required=True,\n         default=None,\n-        vocabulary=\'plone.app.vocabularies.Weekdays\')\n+        vocabulary="plone.app.vocabularies.Weekdays",\n+    )\n \n \n class ITypesSchema(Interface):\n-    """Controlpanel settings for the types settings.\n-    """\n+    """Controlpanel settings for the types settings."""\n \n     types_use_view_action_in_listings = schema.List(\n-        title=_(\'Types which use the view action in listing views.\'),\n+        title=_("Types which use the view action in listing views."),\n         description=_(\n-            \'help_types_use_view_action_in_listings\',\n-            default=\'When clicking items in listing views, these \'\n-                    \'types will use the \\\'view\\\' action instead of using \'\n-                    \'their default view.\'),\n+            "help_types_use_view_action_in_listings",\n+            default="When clicking items in listing views, these "\n+            "types will use the \'view\' action instead of using "\n+            "their default view.",\n+        ),\n         required=False,\n-        default=[\'Image\',\n-                 \'File\'],\n+        default=["Image", "File"],\n         missing_value=[],\n         value_type=schema.TextLine(),\n     )\n \n     redirect_links = schema.Bool(\n-        title=_(\'Redirect links\'),\n+        title=_("Redirect links"),\n         description=_(\n-            \'help_redirect_links\',\n-            default=\'When clicking on a Link type, should the user be \'\n-                    \'taken to the default view or be redirected to the \'\n-                    \'Link\\\'s URL?\'),\n+            "help_redirect_links",\n+            default="When clicking on a Link type, should the user be "\n+            "taken to the default view or be redirected to the "\n+            "Link\'s URL?",\n+        ),\n         required=False,\n-        default=True\n+        default=True,\n     )\n \n     default_page_types = schema.List(\n-        title=_(\'Types that can be set as a default page\'),\n+        title=_("Types that can be set as a default page"),\n         description=_(\n-            \'The content types that should be available for selection \'\n-            \'when setting a default page.\'),\n+            "The content types that should be available for selection "\n+            "when setting a default page."\n+        ),\n         required=False,\n         missing_value=[],\n         default=[\n-            \'Document\',\n-            \'Event\',\n-            \'News Item\',\n-            \'Collection\',\n+            "Document",\n+            "Event",\n+            "News Item",\n+            "Collection",\n         ],\n-        value_type=schema.TextLine()\n+        value_type=schema.TextLine(),\n     )\n \n \n class IMailSchema(Interface):\n \n     smtp_host = schema.TextLine(\n-        title=_(\n-            \'label_smtp_server\',\n-            default=\'SMTP server\'),\n+        title=_("label_smtp_server", default="SMTP server"),\n         description=_(\n-            \'help_smtp_server\',\n-            default=\'The address of your local \'\n-                    \'SMTP (outgoing e-mail) server. Usually \'\n-                    \'\\\'localhost\\\', unless you use an \'\n-                    \'external server to send e-mail.\'),\n-        default=\'localhost\',\n-        required=True)\n+            "help_smtp_server",\n+            default="The address of your local "\n+            "SMTP (outgoing e-mail) server. Usually "\n+            "\'localhost\', unless you use an "\n+            "external server to send e-mail.",\n+        ),\n+        default="localhost",\n+        required=True,\n+    )\n \n     smtp_port = schema.Int(\n-        title=_(\'label_smtp_port\',\n-                default=\'SMTP port\'),\n+        title=_("label_smtp_port", default="SMTP port"),\n         description=_(\n-            \'help_smtp_port\',\n-            default=\'The port of your local SMTP \'\n-                    \'(outgoing e-mail) server. Usually \\\'25\\\'.\'\n+            "help_smtp_port",\n+            default="The port of your local SMTP "\n+            "(outgoing e-mail) server. Usually \'25\'.",\n         ),\n         default=25,\n-        required=True)\n+        required=True,\n+    )\n \n     smtp_userid = schema.TextLine(\n-        title=_(\n-            \'label_smtp_userid\',\n-            default=\'ESMTP username\'),\n+        title=_("label_smtp_userid", default="ESMTP username"),\n         description=_(\n-            \'help_smtp_userid\',\n-            default=\'Username for authentication \'\n-                    \'to your e-mail server. Not required \'\n-                    \'unless you are using ESMTP.\'),\n+            "help_smtp_userid",\n+            default="Username for authentication "\n+            "to your e-mail server. Not required "\n+            "unless you are using ESMTP.",\n+        ),\n         default=None,\n-        required=False)\n+        required=False,\n+    )\n \n     smtp_pass = schema.Password(\n-        title=_(\n-            \'label_smtp_pass\',\n-            default=\'ESMTP password\'),\n+        title=_("label_smtp_pass", default="ESMTP password"),\n         description=_(\n-            \'help_smtp_pass\',\n-            default=\'The password for the ESMTP \'\n-                    \'user account.\'),\n+            "help_smtp_pass", default="The password for the ESMTP " "user account."\n+        ),\n         default=None,\n-        required=False)\n+        required=False,\n+    )\n \n     email_from_name = schema.TextLine(\n-        title=_(\'Site \\\'From\\\' name\'),\n+        title=_("Site \'From\' name"),\n         description=_(\n-            \'Plone generates e-mail using \'\n-            \'this name as the e-mail \'\n-            \'sender.\'),\n+            "Plone generates e-mail using " "this name as the e-mail " "sender."\n+        ),\n         default=None,\n-        required=True)\n+        required=True,\n+    )\n \n     email_from_address = schema.ASCIILine(\n-        title=_(\'Site \\\'From\\\' address\'),\n-        description=_(\n-            \'Plone generates e-mail using \'\n-            \'this address as the e-mail \'\n-            \'return address. It is also \'\n-            \'used as the destination \'\n-            \'address for the site-wide \'\n-            \'contact form and the \\\'Send test \'\n-            \'e-mail\\\' feature.\'),\n+        title=_("Site \'From\' address"),\n+        description=_(\n+            "Plone generates e-mail using "\n+            "this address as the e-mail "\n+            "return address. It is also "\n+            "used as the destination "\n+            "address for the site-wide "\n+            "contact form and the \'Send test "\n+            "e-mail\' feature."\n+        ),\n         default=None,\n-        required=True)\n+        required=True,\n+    )\n \n     email_charset = schema.ASCIILine(\n-        title=_(\'E-mail characterset\'),\n-        description=_(\'Characterset to use when sending e-mails.\'),\n-        default=\'utf-8\',\n+        title=_("E-mail characterset"),\n+        description=_("Characterset to use when sending e-mails."),\n+        default="utf-8",\n         required=True,\n     )\n \n@@ -1366,264 +1527,272 @@ class IMailSchema(Interface):\n class IMarkupSchema(Interface):\n \n     default_type = schema.Choice(\n-        title=_(\'Default format\'),\n+        title=_("Default format"),\n         description=_(\n-            \'Select the default format of textfields for newly \'\n-            \'created content objects.\'\n+            "Select the default format of textfields for newly "\n+            "created content objects."\n         ),\n-        default=\'text/html\',\n-        vocabulary=\'plone.app.vocabularies.AllowableContentTypes\',\n-        required=True\n+        default="text/html",\n+        vocabulary="plone.app.vocabularies.AllowableContentTypes",\n+        required=True,\n     )\n \n     allowed_types = schema.Tuple(\n-        title=_(\'Alternative formats\'),\n+        title=_("Alternative formats"),\n         description=_(\n-            \'Select which formats are available for users as \'\n-            \'alternative to the default format. Note that if new \'\n-            \'formats are installed, they will be enabled for text \'\n-            \'fields by default unless explicitly turned off here \'\n-            \'or by the relevant installer.\'\n+            "Select which formats are available for users as "\n+            "alternative to the default format. Note that if new "\n+            "formats are installed, they will be enabled for text "\n+            "fields by default unless explicitly turned off here "\n+            "or by the relevant installer."\n         ),\n         required=True,\n-        default=(\'text/html\', \'text/x-web-textile\'),\n+        default=("text/html", "text/x-web-textile"),\n         missing_value=(),\n         value_type=schema.Choice(\n-            vocabulary=\'plone.app.vocabularies.AllowableContentTypes\'\n-        )\n+            vocabulary="plone.app.vocabularies.AllowableContentTypes"\n+        ),\n     )\n \n     markdown_extensions = schema.List(\n         default=[\n-            \'markdown.extensions.fenced_code\',\n-            \'markdown.extensions.nl2br\',\n+            "markdown.extensions.fenced_code",\n+            "markdown.extensions.nl2br",\n         ],\n         description=_(\n-            \'Look for available extensions at \'\n-            \'https://python-markdown.github.io/extensions/ or write your own.\'\n+            "Look for available extensions at "\n+            "https://python-markdown.github.io/extensions/ or write your own."\n         ),\n         missing_value=(),\n         required=False,\n-        title=_(\'Enabled markdown extensions\'),\n-        value_type=schema.TextLine()\n+        title=_("Enabled markdown extensions"),\n+        value_type=schema.TextLine(),\n     )\n \n \n class IUserGroupsSettingsSchema(Interface):\n \n     many_groups = schema.Bool(\n-        title=_(\'Many groups?\'),\n-        description=_(\n-            \'Determines if your Plone is optimized \'\n-            \'for small or large sites. In environments with a \'\n-            \'lot of groups it can be very slow or impossible \'\n-            \'to build a list all groups. This option tunes the \'\n-            \'user interface and behaviour of Plone for this \'\n-            \'case by allowing you to search for groups instead \'\n-            \'of listing all of them.\'),\n+        title=_("Many groups?"),\n+        description=_(\n+            "Determines if your Plone is optimized "\n+            "for small or large sites. In environments with a "\n+            "lot of groups it can be very slow or impossible "\n+            "to build a list all groups. This option tunes the "\n+            "user interface and behaviour of Plone for this "\n+            "case by allowing you to search for groups instead "\n+            "of listing all of them."\n+        ),\n         default=False,\n         required=False,\n     )\n \n     many_users = schema.Bool(\n-        title=_(\'Many users?\'),\n-        description=_(\n-            \'Determines if your Plone is optimized \'\n-            \'for small or large sites. In environments with a \'\n-            \'lot of users it can be very slow or impossible to \'\n-            \'build a list all users. This option tunes the user \'\n-            \'interface and behaviour of Plone for this case by \'\n-            \'allowing you to search for users instead of \'\n-            \'listing all of them.\'),\n+        title=_("Many users?"),\n+        description=_(\n+            "Determines if your Plone is optimized "\n+            "for small or large sites. In environments with a "\n+            "lot of users it can be very slow or impossible to "\n+            "build a list all users. This option tunes the user "\n+            "interface and behaviour of Plone for this case by "\n+            "allowing you to search for users instead of "\n+            "listing all of them."\n+        ),\n         default=False,\n         required=False,\n     )\n \n \n def validate_twitter_username(value):\n-    if value and value.startswith(\'@\'):\n-        raise Invalid(\n-            \'Twitter username should not include the "@" prefix character.\')\n+    if value and value.startswith("@"):\n+        raise Invalid(\'Twitter username should not include the "@" prefix character.\')\n     return True\n \n \n class ISocialMediaSchema(Interface):\n \n     share_social_data = schema.Bool(\n-        title=_(\'Share social data\'),\n-        description=_(\'Include meta tags on pages to give hints to \'\n-                      \'social media on how to better render your pages \'\n-                      \'when shared\'),\n-        default=True)\n+        title=_("Share social data"),\n+        description=_(\n+            "Include meta tags on pages to give hints to "\n+            "social media on how to better render your pages "\n+            "when shared"\n+        ),\n+        default=True,\n+        required=False,\n+    )\n \n     twitter_username = schema.ASCIILine(\n-        title=_(\'Twitter username\'),\n+        title=_("Twitter username"),\n         description=_(\n-            \'To identify things like Twitter Cards. \'\n+            "To identify things like Twitter Cards. "\n             \'Do not include the "@" prefix character.\'\n         ),\n         required=False,\n-        default=\'\',\n+        default="",\n         constraint=validate_twitter_username,\n     )\n \n     facebook_app_id = schema.ASCIILine(\n-        title=_(\'Facebook App ID\'),\n-        description=_(\n-            \'To be used with some integrations like Open Graph data\'),\n+        title=_("Facebook App ID"),\n+        description=_("To be used with some integrations like Open Graph data"),\n         required=False,\n-        default=\'\')\n+        default="",\n+    )\n \n     facebook_username = schema.ASCIILine(\n-        title=_(\'Facebook username\'),\n-        description=_(\'For linking Open Graph data to a Facebook account\'),\n+        title=_("Facebook username"),\n+        description=_("For linking Open Graph data to a Facebook account"),\n         required=False,\n-        default=\'\')\n+        default="",\n+    )\n \n \n class IImagingSchema(Interface):\n     allowed_sizes = schema.List(\n-        title=_(\'Allowed image sizes\'),\n+        title=_("Allowed image sizes"),\n         description=_(\n-            \'Specify all allowed maximum image dimensions, one per line. The \'\n-            \'required format is &lt;name&gt; &lt;width&gt;:&lt;height&gt;.\'\n+            "Specify all allowed maximum image dimensions, one per line. The "\n+            "required format is &lt;name&gt; &lt;width&gt;:&lt;height&gt;."\n         ),\n         value_type=schema.TextLine(),\n         default=[\n-            \'huge 1600:65536\',\n-            \'great 1200:65536\',\n-            \'larger 1000:65536\',\n-            \'large 800:65536\',\n-            \'teaser 600:65536\',\n-            \'preview 400:65536\',\n-            \'mini 200:65536\',\n-            \'thumb 128:128\',\n-            \'tile 64:64\',\n-            \'icon 32:32\',\n-            \'listing 16:16\'],\n+            "huge 1600:65536",\n+            "great 1200:65536",\n+            "larger 1000:65536",\n+            "large 800:65536",\n+            "teaser 600:65536",\n+            "preview 400:65536",\n+            "mini 200:65536",\n+            "thumb 128:128",\n+            "tile 64:64",\n+            "icon 32:32",\n+            "listing 16:16"\n+        ],\n         missing_value=[],\n         required=False,\n     )\n \n     quality = schema.Int(\n-        title=_(\'Scaled image quality\'),\n-        description=_(\'A value for the quality of scaled images, from 1 \'\n-                      \'(lowest) to 95 (highest). A value of 0 will mean \'\n-                      \'plone.scaling\\\'s default will be used, which is \'\n-                      \'currently 88.\'),\n+        title=_("Scaled image quality"),\n+        description=_(\n+            "A value for the quality of scaled images, from 1 "\n+            "(lowest) to 95 (highest). A value of 0 will mean "\n+            "plone.scaling\'s default will be used, which is "\n+            "currently 88."\n+        ),\n         min=0,\n         max=95,\n-        default=88\n+        default=88,\n     )\n \n     highpixeldensity_scales = schema.Choice(\n-        title=_(\'High pixel density mode\'),\n-        description=_(\'\'),\n-        default=\'disabled\',\n-        vocabulary=SimpleVocabulary([\n-            SimpleTerm(\'disabled\', \'disabled\', \'Disabled\'),\n-            SimpleTerm(\'2x\', \'2x\', \'Enabled (2x)\'),\n-            SimpleTerm(\'3x\', \'3x\', \'Enabled (2x, 3x)\')\n-        ]),\n+        title=_("High pixel density mode"),\n+        description=_(""),\n+        default="disabled",\n+        vocabulary=SimpleVocabulary(\n+            [\n+                SimpleTerm("disabled", "disabled", "Disabled"),\n+                SimpleTerm("2x", "2x", "Enabled (2x)"),\n+                SimpleTerm("3x", "3x", "Enabled (2x, 3x)"),\n+            ]\n+        ),\n     )\n \n     quality_2x = schema.Int(\n-        title=_(\'Image quality at 2x\'),\n-        description=_(\'A value for the quality of 2x high pixel density images, from 1 \'\n-                      \'(lowest) to 95 (highest). A value of 0 will mean \'\n-                      \'plone.scaling\\\'s default will be used, which is \'\n-                      \'currently 62.\'),\n+        title=_("Image quality at 2x"),\n+        description=_(\n+            "A value for the quality of 2x high pixel density images, from 1 "\n+            "(lowest) to 95 (highest). A value of 0 will mean "\n+            "plone.scaling\'s default will be used, which is "\n+            "currently 62."\n+        ),\n         min=0,\n         max=95,\n         default=62,\n     )\n \n     quality_3x = schema.Int(\n-        title=_(\'Image quality at 3x\'),\n-        description=_(\'A value for the quality of 3x high pixel density images, from 1 \'\n-                      \'(lowest) to 95 (highest). A value of 0 will mean \'\n-                      \'plone.scaling\\\'s default will be used, which is \'\n-                      \'currently 51.\'),\n+        title=_("Image quality at 3x"),\n+        description=_(\n+            "A value for the quality of 3x high pixel density images, from 1 "\n+            "(lowest) to 95 (highest). A value of 0 will mean "\n+            "plone.scaling\'s default will be used, which is "\n+            "currently 51."\n+        ),\n         min=0,\n         max=95,\n         default=51,\n     )\n \n     image_captioning = schema.Bool(\n-        title=_(\'image_captioning_title\', \'Enable image captioning\'),\n+        title=_("image_captioning_title", "Enable image captioning"),\n         description=_(\n-            \'image_captioning_description\',\n-            \'Enable automatic image captioning for images set in the richtext editor based on the description of images.\'\n+            "image_captioning_description",\n+            "Enable automatic image captioning for images set in the richtext editor based on the description of images.",\n         ),\n         default=True,\n-        required=False\n+        required=False,\n     )\n \n \n class ILoginSchema(Interface):\n \n     auth_cookie_length = schema.Int(\n-        title=_(\'Auth cookie length\'),\n-        default=0,\n-        required=False\n+        title=_("Auth cookie length"), default=0, required=False\n     )\n \n     verify_login_name = schema.Bool(\n-        title=_(\'Verify login name\'),\n-        default=True,\n-        required=False\n+        title=_("Verify login name"), default=True, required=False\n     )\n \n     allow_external_login_sites = schema.Tuple(\n-        title=_(\'Allow external login sites\'),\n+        title=_("Allow external login sites"),\n         default=(),\n         value_type=schema.ASCIILine(),\n-        required=False\n+        required=False,\n     )\n \n     external_login_url = schema.ASCIILine(\n-        title=_(\'External login url\'),\n-        default=None,\n-        required=False\n+        title=_("External login url"), default=None, required=False\n     )\n \n     external_logout_url = schema.ASCIILine(\n-        title=_(\'External logout url\'),\n-        default=None,\n-        required=False\n+        title=_("External logout url"), default=None, required=False\n     )\n \n     external_login_iframe = schema.Bool(\n-        title=_(\'External login iframe\'),\n-        default=False,\n-        required=False\n+        title=_("External login iframe"), default=False, required=False\n     )\n \n \n class ILinkSchema(Interface):\n \n     external_links_open_new_window = schema.Bool(\n-        title=_(\'Open external links in new a window\'),\n-        description=_(\'\'),\n+        title=_("Open external links in new a window"),\n+        description=_(""),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     mark_special_links = schema.Bool(\n-        title=_(\'Mark special links\'),\n-        description=_(\'Marks external or special protocol links with class.\'),\n+        title=_("Mark special links"),\n+        description=_("Marks external or special protocol links with class."),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n \n def _check_tales_expression(value):\n     from Products.PageTemplates.Expressions import getEngine\n+\n     try:\n         getEngine().compile(value)\n     except Exception:\n         raise Invalid(\n             _(\n                 \'The expression "${value}" is invalid\',\n-                mapping={\'value\': value},\n+                mapping={"value": value},\n             )\n         )\n     return True\n@@ -1632,86 +1801,81 @@ def _check_tales_expression(value):\n class IActionSchema(Interface):\n \n     category = schema.Choice(\n-        title=_(\'Category\'),\n-        vocabulary=\'plone.app.vocabularies.PortalActionCategories\',\n-        required=True)\n+        title=_("Category"),\n+        vocabulary="plone.app.vocabularies.PortalActionCategories",\n+        required=True,\n+    )\n \n-    title = schema.TextLine(\n-        title=_(\'Title\'),\n-        required=True)\n+    title = schema.TextLine(title=_("Title"), required=True)\n \n-    description = schema.Text(\n-        title=_(\'Description\'),\n-        required=False)\n+    description = schema.Text(title=_("Description"), required=False)\n \n     i18n_domain = schema.TextLine(\n-        title=_(\'i18n_domain_heading\', default=\'I18n domain\'),\n-        default=\'plone\',\n-        required=False)\n+        title=_("i18n_domain_heading", default="I18n domain"),\n+        default="plone",\n+        required=False,\n+    )\n \n     url_expr = schema.ASCIILine(\n-        title=_(\'action_url_heading\', default=\'Action URL\'),\n+        title=_("action_url_heading", default="Action URL"),\n         description=_(\n-            \'action_url_description\',\n-            default=\'An expression producing the called URL. \'\n-            \'Example: string:${globals_view/navigationRootUrl}/page\'\n+            "action_url_description",\n+            default="An expression producing the called URL. "\n+            "Example: string:${globals_view/navigationRootUrl}/page",\n         ),\n         required=True,\n         constraint=_check_tales_expression,\n     )\n \n     available_expr = schema.ASCIILine(\n-        title=_(\'action_condition_heading\', default=\'Condition\'),\n-        description=_(\n-            \'action_condition_description\',\n-            default=\'A boolean expression\'\n-        ),\n-        required=False)\n+        title=_("action_condition_heading", default="Condition"),\n+        description=_("action_condition_description", default="A boolean expression"),\n+        required=False,\n+    )\n \n     permissions = schema.List(\n-        title=_(\'action_permissions_heading\', default=\'Permissions\'),\n+        title=_("action_permissions_heading", default="Permissions"),\n         required=True,\n-        default=[\'View\'],\n+        default=["View"],\n         missing_value=[],\n-        value_type=schema.Choice(\n-            vocabulary=\'plone.app.vocabularies.Permissions\'\n-        )\n+        value_type=schema.Choice(vocabulary="plone.app.vocabularies.Permissions"),\n     )\n \n     visible = schema.Bool(\n-        title=_(\'action_visibility_heading\', default=\'Visible?\'),\n+        title=_("action_visibility_heading", default="Visible?"),\n         default=True,\n-        required=False)\n+        required=False,\n+    )\n \n     position = schema.Int(\n-        title=_(\'action_position_heading\', default=\'Position\'),\n+        title=_("action_position_heading", default="Position"),\n         default=1,\n         min=1,\n-        required=True)\n+        required=True,\n+    )\n \n \n class INewActionSchema(Interface):\n \n     category = schema.Choice(\n-        title=_(\'Category\'),\n-        vocabulary=\'plone.app.vocabularies.PortalActionCategories\',\n-        required=True)\n+        title=_("Category"),\n+        vocabulary="plone.app.vocabularies.PortalActionCategories",\n+        required=True,\n+    )\n \n-    id = schema.ASCIILine(\n-        title=_(\'Id\'),\n-        required=True)\n+    id = schema.ASCIILine(title=_("Id"), required=True)\n \n     @invariant\n     def validate_category_id(data):\n         categoryid = data.category\n-        pa = getToolByName(getSite(), \'portal_actions\')\n+        pa = getToolByName(getSite(), "portal_actions")\n         category = pa.get(categoryid, {})\n         actionid = data.id\n         if actionid in category:\n             raise Invalid(\n                 _(\n                     \'An action with the id "${actionid}" already exists\',\n-                    mapping={\'actionid\': actionid},\n+                    mapping={"actionid": actionid},\n                 )\n             )\n         try:\n@@ -1720,19 +1884,17 @@ def validate_category_id(data):\n             raise Invalid(\n                 _(\n                     \'The id "${actionid}" is invalid\',\n-                    mapping={\'actionid\': actionid},\n+                    mapping={"actionid": actionid},\n                 )\n             )\n \n \n class IPloneControlPanelView(Interface):\n-    """A marker interface for views showing a controlpanel.\n-    """\n+    """A marker interface for views showing a controlpanel."""\n \n \n class IPloneControlPanelForm(IPloneControlPanelView):\n-    """Forms using plone.app.controlpanel\n-    """\n+    """Forms using plone.app.controlpanel"""\n \n     def _on_save():\n         """Callback mehod which can be implemented by control panels to\n@@ -1745,8 +1907,7 @@ def _on_save():\n \n \n class IConfigurationChangedEvent(Interface):\n-    """An event which is fired after a configuration setting has been changed.\n-    """\n+    """An event which is fired after a configuration setting has been changed."""\n \n     context = Attribute("The configuration context which was changed.")\n \ndiff --git a/Products/CMFPlone/interfaces/resources.py b/Products/CMFPlone/interfaces/resources.py\nindex 91a16a0d8e..e26304814d 100644\n--- a/Products/CMFPlone/interfaces/resources.py\n+++ b/Products/CMFPlone/interfaces/resources.py\n@@ -1,143 +1,153 @@\n-import zope.interface\n-import zope.component\n+from Products.CMFPlone import PloneMessageFactory as _\n from zope import schema\n from zope.schema.vocabulary import SimpleTerm\n from zope.schema.vocabulary import SimpleVocabulary\n \n-from Products.CMFPlone import PloneMessageFactory as _\n+import zope.component\n+import zope.interface\n+\n \n-OVERRIDE_RESOURCE_DIRECTORY_NAME = \'resource_overrides\'\n+OVERRIDE_RESOURCE_DIRECTORY_NAME = "resource_overrides"\n \n \n class IResourceRegistry(zope.interface.Interface):\n \n-    url = schema.ASCIILine(\n-        title=_("Resources base URL"),\n-        required=False)\n+    # DEPRECATED\n \n-    js = schema.ASCIILine(\n-        title=_("Main js file"),\n-        required=False)\n+    url = schema.ASCIILine(title=_("Resources base URL"), required=False)\n+\n+    js = schema.ASCIILine(title=_("Main js file"), required=False)\n \n     css = schema.List(\n         title=_("CSS/LESS files"),\n         value_type=schema.ASCIILine(title=_("URL")),\n         default=[],\n-        required=False)\n+        required=False,\n+    )\n \n-    init = schema.ASCIILine(\n-        title=_("Init instruction for shim"),\n-        required=False)\n+    init = schema.ASCIILine(title=_("Init instruction for shim"), required=False)\n \n     deps = schema.ASCIILine(\n         title=_("Dependencies for shim"),\n         description=_("Comma separated values of resource for shim"),\n-        required=False)\n+        required=False,\n+    )\n \n-    export = schema.ASCIILine(\n-        title=_("Export vars for shim"),\n-        required=False)\n+    export = schema.ASCIILine(title=_("Export vars for shim"), required=False)\n \n     conf = schema.Text(\n         title=_("Configuration in JSON for the widget"),\n         description=_("Should be accessible on @@getWCconfig?id=name"),\n-        required=False)\n+        required=False,\n+    )\n \n \n class IBundleRegistry(zope.interface.Interface):\n \n     jscompilation = schema.ASCIILine(\n-        title=_("URL of the last js compilation"),\n-        required=False)\n+        title=_("URL of the last js compilation"), required=False\n+    )\n \n     csscompilation = schema.ASCIILine(\n-        title=_("URL of the last css compilation"),\n-        required=False)\n-\n-    last_compilation = schema.Datetime(\n-        title=_("Last compiled date"),\n-        description=_("Date time of the last compilation of this bundle"),\n-        required=False)\n+        title=_("URL of the last css compilation"), required=False\n+    )\n \n     expression = schema.ASCIILine(\n         title=_("Expression to render"),\n         description=_(\n             "In case its a bundle we can have a condition to render it (it "\n-            "does not apply if the bundle is merged)."),\n-        required=False)\n+            "does not apply if the bundle is merged)."\n+        ),\n+        required=False,\n+    )\n \n-    conditionalcomment = schema.ASCIILine(\n-        title=_("Conditional comment"),\n+    enabled = schema.Bool(title=_("It\'s enabled?"), default=True, required=False)\n+\n+    depends = schema.ASCIILine(\n+        title=_("Depends on another bundle"),\n         description=_(\n-            "In case you want to render this resource on conditional comment "\n-            "(it does not apply if the bundle is merged)."),\n-        required=False)\n+            "In case you want to be the last: *, in case its the first should be empty"\n+        ),\n+        required=False,\n+    )\n \n-    resources = schema.List(\n-        title=_("Loaded resources"),\n+    load_async = schema.Bool(\n+        title=_("Load asynchronously"),\n         description=_(\n-            "The resources that are going to be loaded on this bundle in order"),\n-        value_type=schema.ASCIILine(title=_("Resource name")),\n-        required=False)\n+            "Load the JavaScript files asynchronously by adding an ``async`` attribute to the script tag."\n+        ),\n+        default=False,\n+        required=False,\n+    )\n \n-    enabled = schema.Bool(\n-        title=_("It\'s enabled?"),\n-        default=True,\n-        required=False)\n+    load_defer = schema.Bool(\n+        title=_("Load deferred"),\n+        description=_(\n+            "Load the JavaScript files deferred after the document has been parsed but before ``DOMContentLoaded`` by adding a ``defer`` attribute to the script tag."\n+        ),\n+        default=False,\n+        required=False,\n+    )\n \n+    # DEPRECATED IN Plone 6, for now keep for BBB\n     compile = schema.Bool(\n-        title=_("Does your bundle contains any RequireJS or LESS file?"),\n+        title=_("(DEPRECATED) Does your bundle contains any RequireJS or LESS file?"),\n         description=_(\n-            "If its true and you modify this bundle you need to build it before production"),\n+            "If its true and you modify this bundle you need to build it before production"\n+        ),\n         default=True,\n-        required=False)\n+        required=False,\n+    )\n \n-    depends = schema.ASCIILine(\n-        title=_("Depends on another bundle"),\n+    resources = schema.List(\n+        title=_("(DEPRECATED) Loaded resources"),\n         description=_(\n-            "In case you want to be the last: *, in case its the first should be empty"),\n-        required=False)\n+            "The resources that are going to be loaded on this bundle in order"\n+        ),\n+        value_type=schema.ASCIILine(title=_("Resource name")),\n+        required=False,\n+    )\n+\n+    last_compilation = schema.Datetime(\n+        title=_("(DEPRECATED) Last compiled date"),\n+        description=_("Date time of the last compilation of this bundle"),\n+        required=False,\n+    )\n \n     develop_javascript = schema.Bool(\n-        title=_(\'Develop JavaScript\'),\n-        default=False)\n+        title=_("(DEPRECATED) Develop JavaScript"), default=False\n+    )\n \n-    develop_css = schema.Bool(\n-        title=_(\'Develop CSS\'),\n-        default=False)\n+    develop_css = schema.Bool(title=_("(DEPRECATED) Develop CSS"), default=False)\n \n     stub_js_modules = schema.List(\n-        title=_(\'Stub JavaScript modules\'),\n-        description=_(\'Define list of modules that will be defined empty \'\n-                      \'on RequireJS build steps to prevent loading modules multiple times.\'),\n+        title=_("(DEPRECATED) Stub JavaScript modules"),\n+        description=_(\n+            "Define list of modules that will be defined empty "\n+            "on RequireJS build steps to prevent loading modules multiple times."\n+        ),\n         value_type=schema.ASCIILine(title=_("Resource name")),\n         required=False,\n         missing_value=[],\n-        default=[])\n+        default=[],\n+    )\n \n     merge_with = schema.Choice(\n-        title=_("Merge with"),\n+        title=_("(DEPRECATED) Merge with"),\n         description=_(\n             "In production mode, bundles are merged together to reduce the "\n             "quantity of JS and CSS resources loaded by the browser. Choose "\n             "\'default\' if this bundle must be available for all the visitors, "\n             "choose \'logged-in\' if it must be available for logged-in users "\n-            "only, or leave it empty if it must not be merged."),\n+            "only, or leave it empty if it must not be merged."\n+        ),\n         vocabulary=SimpleVocabulary(\n-            [SimpleTerm(\'\', \'\', _("")),\n-             SimpleTerm(\'default\', \'default\', \'default\'),\n-             SimpleTerm(\'logged-in\', \'logged-in\', \'logged-in\')]),\n+            [\n+                SimpleTerm("", "", _("")),\n+                SimpleTerm("default", "default", "default"),\n+                SimpleTerm("logged-in", "logged-in", "logged-in"),\n+            ]\n+        ),\n         default="",\n-        required=False)\n-\n-    load_async = schema.Bool(\n-        title=_("Load asynchronously"),\n-        description=_("Load the JavaScript files asynchronously by adding an ``async`` attribute to the script tag."),\n-        default=False,\n-        required=False)\n-\n-    load_defer = schema.Bool(\n-        title=_("Load deferred"),\n-        description=_("Load the JavaScript files deferred after the document has been parsed but before ``DOMContentLoaded`` by adding a ``defer`` attribute to the script tag."),\n-        default=False,\n-        required=False)\n+        required=False,\n+    )\ndiff --git a/Products/CMFPlone/profiles/dependencies/registry.xml b/Products/CMFPlone/profiles/dependencies/registry.xml\nindex b03d081331..a2868d12c5 100644\n--- a/Products/CMFPlone/profiles/dependencies/registry.xml\n+++ b/Products/CMFPlone/profiles/dependencies/registry.xml\n@@ -18,6 +18,8 @@\n            prefix="plone" />\n   <records interface="Products.CMFPlone.interfaces.ISiteSchema"\n            prefix="plone" />\n+  <records interface="Products.CMFPlone.interfaces.ITinyMCESchema"\n+           prefix="plone" />\n   <records interface="Products.CMFPlone.interfaces.IDateAndTimeSchema"\n            prefix="plone" />\n   <records interface="Products.CMFPlone.interfaces.IMarkupSchema"\n@@ -89,85 +91,11 @@\n   <record name="plone.resources.development">\n     <field type="plone.registry.field.Bool">\n       <title>Frontend development mode</title>\n+      <required>False</required>\n     </field>\n     <value>False</value>\n   </record>\n \n-  <!-- Plone generated resources -->\n-  <record name="plone.resources.configjs">\n-    <field type="plone.registry.field.ASCII">\n-      <title>config.js</title>\n-    </field>\n-    <value>config.js</value>\n-  </record>\n-  <record name="plone.resources.less-modify">\n-    <field type="plone.registry.field.ASCII">\n-      <title>less-modify js</title>\n-    </field>\n-    <value>less-modify.js</value>\n-  </record>\n-  <record name="plone.resources.less-variables">\n-      <field type="plone.registry.field.ASCII">\n-        <title>LESS variables js definer</title>\n-      </field>\n-      <value key="js">less-variables.js</value>\n-  </record>\n-\n-  <!-- Mixins vars for less with the paths -->\n-  <record name="plone.lessvariables">\n-    <field type="plone.registry.field.Dict">\n-      <title>Less variables</title>\n-      <description>Variables that are going to be compiled on less</description>\n-      <key_type type="plone.registry.field.ASCIILine" />\n-      <value_type type="plone.registry.field.TextLine" />\n-    </field>\n-    <value>\n-      <element key="icon-font-path">\\"../fonts/\\"</element>\n-      <element key="bowerPath">\\"{site_url}/++plone++static/components/\\"</element>\n-      <element key="mockupPath">\\"{site_url}/++resource++mockup/\\"</element>\n-      <element key="mockuplessPath">\\"{site_url}/++resource++mockupless/\\"</element>\n-\n-      <element key="plone-link-color">rgba(0,123,179,1)</element>\n-      <element key="plone-gray-lighter">lighten(#000, 80%)</element>\n-      <element key="plone-gray-light">lighten(#000, 46.5%)</element>\n-\n-      <element key="plone-toolbar-bg">rgba(0,0,0,.9)</element>\n-      <element key="plone-toolbar-submenu-bg">rgba(45,45,45,.96)</element>\n-      <element key="plone-toolbar-submenu-width">180px</element>\n-      <element key="plone-toolbar-font-primary">Roboto, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif</element>\n-      <element key="plone-toolbar-font-secondary">Roboto, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif</element>\n-      <element key="plone-toolbar-separator-color">rgba(255,255,255,.17)</element>\n-      <element key="plone-toolbar-link">{plone-link-color}</element>\n-      <element key="plone-toolbar-text-color">rgba(255,255,255,1)</element>\n-      <element key="plone-toolbar-submenu-text-color">lighten(#000, 90%)</element>\n-      <element key="plone-toolbar-submenu-header-color">lighten(#000, 80%)</element>\n-      <element key="plone-toolbar-published-color">{plone-link-color}</element>\n-      <element key="plone-toolbar-draft-color">rgb(250,184,42)</element>\n-      <element key="plone-toolbar-pending-color">rgb(226,231,33)</element>\n-      <element key="plone-toolbar-private-color">rgb(196,24,60)</element>\n-      <element key="plone-toolbar-internal-color">rgb(250,184,42)</element>\n-      <element key="plone-toolbar-internally-published-color">rgb(136,61,250)</element>\n-\n-      <element key="plone-screen-xs-min">480px</element>\n-      <element key="plone-screen-sm-min">768px</element>\n-      <element key="plone-screen-md-min">992px</element>\n-      <element key="plone-screen-lg-min">1200px</element>\n-\n-      <element key="plone-left-toolbar-expanded">120px</element>\n-      <element key="plone-left-toolbar">60px</element>\n-\n-      <element key="plone-container-sm">750px</element>\n-      <element key="plone-container-md">970px</element>\n-      <element key="plone-container-lg">1170px</element>\n-\n-      <element key="plone-screen-xs-max">(@plone-screen-sm-min - 1)</element>\n-      <element key="plone-screen-sm-max">(@plone-screen-md-min - 1)</element>\n-      <element key="plone-screen-md-max">(@plone-screen-lg-min - 1)</element>\n-\n-    </value>\n-  </record>\n-\n-\n   <record name="plone.patternoptions">\n     <field type="plone.registry.field.Dict">\n       <title>Patterns configuration</title>\ndiff --git a/Products/CMFPlone/relationhelper.py b/Products/CMFPlone/relationhelper.py\nindex 0a8f041ce5..da92cccb97 100644\n--- a/Products/CMFPlone/relationhelper.py\n+++ b/Products/CMFPlone/relationhelper.py\n@@ -186,7 +186,11 @@ def restore_relations(context=None, all_relations=None):\n             continue\n \n         from_attribute = item[\'from_attribute\']\n-        to_id = intids.getId(target_obj)\n+        try:\n+            to_id = intids.getId(target_obj)\n+        except KeyError as e:\n+            logger.warning(f\'No intid for {target_obj}\')\n+            continue\n \n         if from_attribute == referencedRelationship:\n             # Ignore linkintegrity for now. We\'ll rebuilt it at the end!\ndiff --git a/Products/CMFPlone/resources/__init__.py b/Products/CMFPlone/resources/__init__.py\nindex f64da4a538..092fcafe89 100644\n--- a/Products/CMFPlone/resources/__init__.py\n+++ b/Products/CMFPlone/resources/__init__.py\n@@ -1,20 +1,21 @@\n+from zope.deprecation import deprecate\n+\n import os\n \n \n RESOURCE_DEVELOPMENT_MODE = os.getenv("FEDEV", "").lower() == "true"\n \n \n+@deprecate(\n+    "Adding single resources is no longer supported in Plone 6, use \'add_bundle_on_request\' instead"\n+)\n def add_resource_on_request(request, resource):\n-    """Adds the resource to the request"""\n-    if not isinstance(resource, str):\n-        raise ValueError("add_resource_on_request expects a string value for resource")\n-    request.enabled_resources = getattr(request, "enabled_resources", [])\n-    if resource not in request.enabled_resources:\n-        request.enabled_resources.append(resource)\n+    """(DEPRECATED) Adds the resource to the request."""\n+    return\n \n \n def add_bundle_on_request(request, bundle):\n-    """Adds the bundle to the request"""\n+    """Adds the bundle to the request."""\n     if not isinstance(bundle, str):\n         raise ValueError("add_bundle_on_request expects a string value for bundle")\n     request.enabled_bundles = getattr(request, "enabled_bundles", [])\n@@ -23,7 +24,7 @@ def add_bundle_on_request(request, bundle):\n \n \n def remove_bundle_on_request(request, bundle):\n-    """Removes the bundle to the request"""\n+    """Removes the bundle to the request."""\n     if not isinstance(bundle, str):\n         raise ValueError("remove_bundle_on_request expects a string value for bundle")\n     request.disabled_bundles = getattr(request, "disabled_bundles", [])\ndiff --git a/Products/CMFPlone/resources/browser/combine.py b/Products/CMFPlone/resources/browser/combine.py\nindex 607d86d603..ae1ac23fd1 100644\n--- a/Products/CMFPlone/resources/browser/combine.py\n+++ b/Products/CMFPlone/resources/browser/combine.py\n@@ -5,15 +5,23 @@\n from plone.resource.file import FilesystemFile\n from plone.resource.interfaces import IResourceDirectory\n from Products.CMFPlone.interfaces import IBundleRegistry\n-from Products.CMFPlone.interfaces.resources import (\n-    OVERRIDE_RESOURCE_DIRECTORY_NAME,\n-)  # noqa\n+from Products.CMFPlone.interfaces.resources import OVERRIDE_RESOURCE_DIRECTORY_NAME  # noqa\n from zExceptions import NotFound\n from zope.component import getUtility\n from zope.component import queryUtility\n \n import logging\n import re\n+import zope.deferredimport\n+\n+\n+zope.deferredimport.initialize()\n+\n+zope.deferredimport.deprecated(\n+    "Import from Products.CMFPlone.resources.utils instead",\n+    PRODUCTION_RESOURCE_DIRECTORY="Products.CMFPlone:resources.utils.PRODUCTION_RESOURCE_DIRECTORY",\n+    get_override_directory="Products.CMFPlone:resources.utils.get_override_directory",\n+)\n \n \n PRODUCTION_RESOURCE_DIRECTORY = "production"\n@@ -76,18 +84,6 @@ def write_js(context, folder, meta_bundle):\n     registry = getUtility(IRegistry)\n     resources = []\n \n-    # default resources\n-    if meta_bundle == "default" and registry.records.get("plone.resources/jquery.js"):\n-        resources.append(\n-            get_resource(context, registry.records["plone.resources/jquery.js"].value)\n-        )\n-        resources.append(\n-            get_resource(context, registry.records["plone.resources.requirejs"].value)\n-        )\n-        resources.append(\n-            get_resource(context, registry.records["plone.resources.configjs"].value)\n-        )\n-\n     # bundles\n     bundles = registry.collectionOfInterface(\n         IBundleRegistry, prefix="plone.bundles", check=False\ndiff --git a/Products/CMFPlone/resources/browser/configjs.py b/Products/CMFPlone/resources/browser/configjs.py\ndeleted file mode 100644\nindex 0d8e362aaf..0000000000\n--- a/Products/CMFPlone/resources/browser/configjs.py\n+++ /dev/null\n@@ -1,95 +0,0 @@\n-from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import IResourceRegistry\n-from Products.Five.browser import BrowserView\n-from zope.component import getUtility\n-\n-import json\n-import re\n-\n-\n-configjs = """requirejs.config({\n-    baseUrl: PORTAL_URL,\n-    paths: %s,\n-    shim: %s,\n-    optimize: \'uglify\',\n-    wrapShim: true\n-});"""\n-\n-\n-def _format_shims(shims):\n-    result = []\n-    for name, val in shims.items():\n-        options = []\n-        if val.get("exports"):\n-            options.append(\'exports: "%s"\' % val["exports"])\n-        if val.get("deps"):\n-            options.append("deps: " + json.dumps(val["deps"]))\n-        if val.get("init"):\n-            # function, no escaping here\n-            options.append("init: %s" % val["init"])\n-        result.append(\n-            """\n-        "{}": {{\n-            {}\n-        }}""".format(\n-                name, ",\\n            ".join(options)\n-            )\n-        )\n-    return "{" + ",".join(result) + "\\n    }"\n-\n-\n-class RequireJsView(BrowserView):\n-    """\n-    This view creates the config.js for requirejs with all the registered\n-    resources\n-\n-    It\'s used on development for the config.js and on compilation for the\n-    optimize.js\n-    """\n-\n-    @property\n-    def registry(self):\n-        return getUtility(IRegistry)\n-\n-    def registryResources(self):\n-        return self.registry.collectionOfInterface(\n-            IResourceRegistry, prefix="plone.resources", check=False\n-        )\n-\n-    def get_requirejs_config(self):\n-        """\n-        Returns the information for requirejs configuration\n-        """\n-        registry = self.registryResources()\n-        paths = {}\n-        shims = {}\n-        for name, script in registry.items():\n-            if script.js:\n-                # Main resource js file\n-                src = re.sub(r"\\.js$", "", script.js)\n-                paths[name] = src\n-                exports = script.export\n-                deps = script.deps\n-                inits = script.init\n-                if exports or deps or inits:\n-                    shims[name] = {}\n-                    if exports not in ("", None):\n-                        shims[name]["exports"] = exports\n-                    if deps not in ("", None):\n-                        shims[name]["deps"] = deps.split(",")\n-                    if inits not in ("", None):\n-                        shims[name]["init"] = inits\n-            if script.url:\n-                # Resources available under name-url name\n-                src = script.url\n-                paths[name + "-url"] = src\n-        return (paths, shims)\n-\n-\n-class ConfigJsView(RequireJsView):\n-    """ config.js for requirejs for script rendering. """\n-\n-    def __call__(self):\n-        (paths, shims) = self.get_requirejs_config()\n-        self.request.response.setHeader("Content-Type", "application/javascript")\n-        return configjs % (json.dumps(paths, indent=4), _format_shims(shims))\ndiff --git a/Products/CMFPlone/resources/browser/configure.zcml b/Products/CMFPlone/resources/browser/configure.zcml\nindex 18875cfdb1..32ca958596 100644\n--- a/Products/CMFPlone/resources/browser/configure.zcml\n+++ b/Products/CMFPlone/resources/browser/configure.zcml\n@@ -6,47 +6,22 @@\n   <browser:viewlet\n       name="plone.resourceregistries.scripts"\n       manager="plone.app.layout.viewlets.interfaces.IScripts"\n-      class="Products.CMFPlone.resources.browser.scripts.ScriptsView"\n-      template="scripts.pt"\n+      class="Products.CMFPlone.resources.browser.resource.ScriptsView"\n       permission="zope2.View"\n       />\n \n   <browser:viewlet\n       name="plone.resourceregistries.styles"\n       manager="plone.app.layout.viewlets.interfaces.IHtmlHeadLinks"\n-      class="Products.CMFPlone.resources.browser.styles.StylesView"\n-      template="styles.pt"\n+      class="Products.CMFPlone.resources.browser.resource.StylesView"\n       permission="zope2.View"\n       />\n \n-\n-  <browser:page\n-      for="*"\n-      name="config.js"\n-      class=".configjs.ConfigJsView"\n-      permission="zope.Public"\n-      />\n-\n-  <browser:page\n-      for="*"\n-      name="less-variables.js"\n-      class=".mixins.LessConfiguration"\n-      permission="zope.Public"\n-      />\n-\n-  <browser:page\n-      for="*"\n-      name="less-modify.js"\n-      class=".mixins.LessModifyConfiguration"\n-      permission="zope.Public"\n-      />\n-\n-\n-  <browser:page\n-      for="*"\n-      name="plone_less_dependency.less"\n-      class=".mixins.LessDependency"\n-      permission="zope.Public"\n+  <adapter\n+      name="webresource"\n+      for="* zope.publisher.interfaces.IRequest"\n+      provides="zope.traversing.interfaces.ITraversable"\n+      factory="plone.resource.traversal.UniqueResourceTraverser"\n       />\n \n </configure>\ndiff --git a/Products/CMFPlone/resources/browser/cook.py b/Products/CMFPlone/resources/browser/cook.py\ndeleted file mode 100644\nindex f61c8fdc16..0000000000\n--- a/Products/CMFPlone/resources/browser/cook.py\n+++ /dev/null\n@@ -1,170 +0,0 @@\n-from calmjs.parse import es5\n-from datetime import datetime\n-from io import BytesIO\n-from plone.protect.interfaces import IDisableCSRFProtection\n-from plone.registry.interfaces import IRegistry\n-from plone.resource.interfaces import IResourceDirectory\n-from plone.subrequest import subrequest\n-from Products.CMFPlone.interfaces.resources import IBundleRegistry\n-from Products.CMFPlone.interfaces.resources import IResourceRegistry\n-from Products.CMFPlone.interfaces.resources import (\n-    OVERRIDE_RESOURCE_DIRECTORY_NAME,\n-)  # noqa\n-from Products.CMFPlone.resources.browser.combine import combine_bundles\n-from scss import Compiler\n-from zExceptions import NotFound\n-from zope.component import getUtility\n-from zope.component.hooks import getSite\n-from zope.globalrequest import getRequest\n-from zope.interface import alsoProvides\n-\n-import logging\n-\n-\n-logger = logging.getLogger("Products.CMFPlone")\n-\n-REQUIREJS_RESET_PREFIX = """\n-/* reset requirejs definitions so that people who\n-   put requirejs in legacy compilation do not get errors */\n-var _old_define = define;\n-var _old_require = require;\n-define = undefined;\n-require = undefined;\n-try{\n-"""\n-REQUIREJS_RESET_POSTFIX = """\n-}catch(e){\n-    // log it\n-    if (typeof console !== "undefined"){\n-        console.log(\'Error loading javascripts!\' + e);\n-    }\n-}finally{\n-    define = _old_define;\n-    require = _old_require;\n-}\n-"""\n-\n-\n-def cookWhenChangingSettings(context, bundle=None):\n-    """When our settings are changed, re-cook the not compilable bundles"""\n-    registry = getUtility(IRegistry)\n-    resources = registry.collectionOfInterface(\n-        IResourceRegistry, prefix="plone.resources", check=False\n-    )\n-    if bundle is None:\n-        # default to cooking legacy bundle\n-        bundles = registry.collectionOfInterface(\n-            IBundleRegistry, prefix="plone.bundles", check=False\n-        )\n-        if "plone-legacy" in bundles:\n-            bundle = bundles["plone-legacy"]\n-        else:\n-            bundle = bundles.setdefault("plone-legacy")\n-            bundle.resources = []\n-\n-    if not bundle.resources:\n-        # you can have a bundle without any resources defined and it\'s just\n-        # shipped as a legacy compiled js file\n-        return\n-\n-    js_path = bundle.jscompilation\n-    css_path = bundle.csscompilation\n-\n-    if not js_path and not css_path:\n-        logger.warning(\n-            "No js_path or css_path found. We need a plone.resource "\n-            "based resource path in order to store the compiled JS and CSS."\n-        )\n-        return\n-\n-    # Let\'s join all css and js\n-    css_compiler = Compiler(output_style="compressed")\n-    cooked_css = ""\n-    cooked_js = REQUIREJS_RESET_PREFIX\n-    siteUrl = getSite().absolute_url()\n-    request = getRequest()\n-    for package in bundle.resources or []:\n-        if package not in resources:\n-            continue\n-        resource = resources[package]\n-\n-        if css_path:\n-            for css_resource in resource.css:\n-                css_url = siteUrl + "/" + css_resource\n-                response = subrequest(css_url)\n-                if response.status == 200:\n-                    logger.info("Cooking css %s", css_resource)\n-                    css = response.getBody()\n-                    if css_resource[-8:] != ".min.css":\n-                        css = css_compiler.compile_string(css)\n-                    if not isinstance(css, str):\n-                        css = css.decode("utf8")\n-                    cooked_css += "\\n/* Resource: {} */\\n{}\\n".format(css_resource, css)\n-                else:\n-                    cooked_css += "\\n/* Could not find resource: {} */\\n\\n".format(\n-                        css_resource\n-                    )\n-                    logger.warning("Could not find resource: %s", css_resource)\n-        if not resource.js or not js_path:\n-            continue\n-        js_url = siteUrl + "/" + resource.js\n-        response = subrequest(js_url)\n-        if response.status == 200:\n-            logger.info("Cooking js %s", resource.js)\n-            js = response.getBody()\n-            if not isinstance(js, str):\n-                js = js.decode("utf8")\n-            try:\n-                cooked_js += "\\n/* resource: {} */\\n{}".format(\n-                    resource.js,\n-                    js if resource.js.endswith(".min.js") else es5.minify_print(js),\n-                )\n-            except SyntaxError:\n-                cooked_js += "\\n/* Resource (error cooking): {} */\\n{}".format(\n-                    resource.js, js\n-                )\n-                logger.warning("Error cooking resource: %s", resource.js)\n-        else:\n-            logger.warning("Could not find resource: %s", resource.js)\n-            cooked_js += "\\n/* Could not find resource: {} */\\n\\n".format(js_url)\n-\n-    cooked_js += REQUIREJS_RESET_POSTFIX\n-\n-    persistent_directory = getUtility(IResourceDirectory, name="persistent")\n-    if OVERRIDE_RESOURCE_DIRECTORY_NAME not in persistent_directory:\n-        persistent_directory.makeDirectory(OVERRIDE_RESOURCE_DIRECTORY_NAME)\n-    container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n-\n-    def _write_resource(resource_path, cooked_string):\n-        if not resource_path:\n-            return\n-        if "++plone++" in resource_path:\n-            resource_path = resource_path.split("++plone++")[-1]\n-        if "/" in resource_path:\n-            resource_name, resource_filepath = resource_path.split("/", 1)\n-        else:\n-            resource_name = "legacy"\n-            resource_filepath = resource_path\n-        if resource_name not in container:\n-            container.makeDirectory(resource_name)\n-        if not isinstance(\n-            cooked_string, bytes\n-        ):  # handle Error of OFS.Image  # noqa: E501\n-            cooked_string = cooked_string.encode("ascii", errors="ignore")\n-        try:\n-            folder = container[resource_name]\n-            fi = BytesIO(cooked_string)\n-            folder.writeFile(resource_filepath, fi)\n-            logger.info("Writing cooked resource: %s", resource_path)\n-        except NotFound:\n-            logger.warning("Error writing cooked resource: %s", resource_path)\n-\n-    _write_resource(js_path, cooked_js)\n-    _write_resource(css_path, cooked_css)\n-\n-    bundle.last_compilation = datetime.now()\n-    # refresh production meta bundles\n-    combine_bundles(context)\n-\n-    # Disable CSRF protection on this request\n-    alsoProvides(request, IDisableCSRFProtection)\ndiff --git a/Products/CMFPlone/resources/browser/interfaces.py b/Products/CMFPlone/resources/browser/interfaces.py\ndeleted file mode 100644\nindex 8ebe8cc452..0000000000\n--- a/Products/CMFPlone/resources/browser/interfaces.py\n+++ /dev/null\n@@ -1,11 +0,0 @@\n-from zope.interface import Interface\n-\n-\n-class IScriptsView(Interface):\n-    def scripts():\n-        """ Returns a list of dicts with information for scripts rendering. """\n-\n-\n-class IStylesView(Interface):\n-    def styles():\n-        """ Returns a list of dicts with information for style rendering. """\ndiff --git a/Products/CMFPlone/resources/browser/mixins.py b/Products/CMFPlone/resources/browser/mixins.py\ndeleted file mode 100644\nindex 7ca42c38e1..0000000000\n--- a/Products/CMFPlone/resources/browser/mixins.py\n+++ /dev/null\n@@ -1,162 +0,0 @@\n-from AccessControl.safe_formatter import SafeFormatter\n-from plone.registry.interfaces import IRegistry\n-from urllib.parse import urlparse\n-from Products.CMFPlone.interfaces import IResourceRegistry\n-from Products.Five.browser import BrowserView\n-from zope.component import getMultiAdapter\n-from zope.component import getUtility\n-\n-\n-lessconfig = """\n- window.less = {\n-    env: "development",\n-    logLevel: %i,\n-    async: false,\n-    fileAsync: false,\n-    errorReporting: window.lessErrorReporting || \'console\',\n-    poll: 1000,\n-    functions: {},\n-    relativeUrls: true,\n-    dumpLineNumbers: "comments",\n-    globalVars: {\n-      %s\n-    },\n-    modifyVars: {\n-      %s\n-    }\n-  };\n-"""\n-\n-lessmodify = """\n-less.modifyVars({\n-    %s\n-})\n-"""\n-\n-\n-class LessConfiguration(BrowserView):\n-    """Browser view that gets the definition of less variables on plone."""\n-\n-    def registry(self):\n-        registryUtility = getUtility(IRegistry)\n-        return registryUtility.records["plone.lessvariables"].value\n-\n-    def resource_registry(self):\n-        registryUtility = getUtility(IRegistry)\n-        return registryUtility.collectionOfInterface(\n-            IResourceRegistry, prefix="plone.resources", check=False\n-        )\n-\n-    def __call__(self):\n-        registry = self.registry()\n-        portal_state = getMultiAdapter(\n-            (self.context, self.request), name="plone_portal_state"\n-        )\n-        site_url = portal_state.portal_url()\n-        result = ""\n-        result += "sitePath: \'\\"%s\\"\',\\n" % site_url\n-        result += "isPlone: true,\\n"\n-        result += "isMockup: false,\\n"\n-        result += "staticPath: \'\\"%s/++plone++static\\"\',\\n" % site_url\n-        result += "barcelonetaPath: \'\\"%s/++theme++barceloneta\\"\',\\n" % site_url\n-\n-        less_vars_params = {\n-            "site_url": site_url,\n-        }\n-\n-        # Storing variables to use them on further vars\n-        for name, value in registry.items():\n-            less_vars_params[name] = value\n-\n-        for name, value in registry.items():\n-            t = SafeFormatter(value).safe_format(**less_vars_params)\n-            result += f"\'{name}\': \\"{t}\\",\\n"\n-\n-        # Adding all plone.resource entries css values as less vars\n-        for name, value in self.resource_registry().items():\n-            for css in value.css:\n-\n-                url = urlparse(css)\n-                if url.netloc == "":\n-                    # Local\n-                    src = f"{site_url}/{css}"\n-                else:\n-                    src = "%s" % (css)\n-                # less vars can\'t have dots on it\n-                result += "\'{}\': \'\\"{}\\"\',\\n".format(name.replace(".", "_"), src)\n-\n-        self.request.response.setHeader("Content-Type", "application/javascript")\n-\n-        try:\n-            debug_level = int(self.request.get("debug", 2))\n-        except:\n-            debug_level = 2\n-        return lessconfig % (debug_level, result, result)\n-\n-\n-class LessModifyConfiguration(LessConfiguration):\n-    def __call__(self):\n-        registry = self.registry()\n-        portal_state = getMultiAdapter(\n-            (self.context, self.request), name="plone_portal_state"\n-        )\n-        site_url = portal_state.portal_url()\n-        result2 = ""\n-        result2 += "\'@sitePath\': \'\\"%s\\"\',\\n" % site_url\n-        result2 += "\'@isPlone\': true,\\n"\n-        result2 += "\'@isMockup\': false,\\n"\n-        result2 += "\'@staticPath: \'\\"%s/++plone++static\\"\',\\n" % site_url\n-        result2 += "\'@barcelonetaPath: \'\\"%s/++theme++barceloneta\\"\',\\n" % site_url\n-\n-        less_vars_params = {\n-            "site_url": site_url,\n-        }\n-\n-        # Storing variables to use them on further vars\n-        for name, value in registry.items():\n-            less_vars_params[name] = value\n-\n-        for name, value in registry.items():\n-            t = SafeFormatter(value).safe_format(**less_vars_params)\n-            result2 += f"\'@{name}\': \\"{t}\\",\\n"\n-\n-        self.request.response.setHeader("Content-Type", "application/javascript")\n-\n-        return lessmodify % (result2)\n-\n-\n-class LessDependency(BrowserView):\n-    """Browser view that returns the less/css on less format for specific\n-    resource.\n-    """\n-\n-    def registry(self):\n-        registryUtility = getUtility(IRegistry)\n-        return registryUtility.collectionOfInterface(\n-            IResourceRegistry, prefix="plone.resources", check=False\n-        )\n-\n-    def __call__(self):\n-        portal_state = getMultiAdapter(\n-            (self.context, self.request), name="plone_portal_state"\n-        )\n-        site_url = portal_state.portal_url()\n-\n-        registry = self.registry()\n-        resource = self.request.get("resource", None)\n-        result = ""\n-        if resource:\n-            if resource in registry:\n-                for css in registry[resource].css:\n-                    url = urlparse(css)\n-                    if url.netloc == "":\n-                        # Local\n-                        src = f"{site_url}/{css}"\n-                    else:\n-                        src = "%s" % (css)\n-\n-                    result += "@import url(\'%s\');\\n" % src\n-\n-        self.request.response.setHeader("Content-Type", "stylesheet/less")\n-\n-        return result\ndiff --git a/Products/CMFPlone/resources/browser/resource.py b/Products/CMFPlone/resources/browser/resource.py\nindex e32b5b2377..c8e65e019b 100644\n--- a/Products/CMFPlone/resources/browser/resource.py\n+++ b/Products/CMFPlone/resources/browser/resource.py\n@@ -1,74 +1,275 @@\n+from ..webresource import PloneScriptResource\n+from ..webresource import PloneStyleResource\n from Acquisition import aq_base\n from Acquisition import aq_inner\n from Acquisition import aq_parent\n from App.config import getConfiguration\n from plone.app.layout.viewlets.common import ViewletBase\n+from plone.app.theming.interfaces import IThemeSettings\n from plone.app.theming.utils import theming_policy\n-from plone.memoize.view import memoize\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.Expression import createExprContext\n from Products.CMFCore.Expression import Expression\n-from Products.CMFCore.utils import _getAuthenticatedUser\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.interfaces import IBundleRegistry\n-from Products.CMFPlone.interfaces import IResourceRegistry\n-from Products.CMFPlone.resources import RESOURCE_DEVELOPMENT_MODE\n-from Products.CMFPlone.resources.browser.combine import (\n-    get_production_resource_directory,\n-)  # noqa\n-from Products.CMFPlone.resources.bundle import Bundle\n-from Products.CMFPlone.utils import get_top_request\n-from zope import component\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n+from zope.component import queryUtility\n from zope.ramcache.interfaces import ram\n \n+import logging\n+import webresource\n+\n+logger = logging.getLogger(__name__)\n+\n+REQUEST_CACHE_KEY = "_WEBRESOURCE_CACHE_"\n+\n+GRACEFUL_DEPENDENCY_REWRITE = {\n+    "plone-base": "plone",\n+    "plone-legacy": "plone",\n+    "plone-logged-in": "plone",\n+}\n+\n \n class ResourceBase:\n     """Information for script rendering.\n \n     This is a mixin base class for a browser view, a viewlet or a tile\n-    or anything similar with a context and a request set on initialization.\n+    or anything similar with a context and a request set on\n+    initialization.\n     """\n \n     @property\n-    @memoize\n-    def anonymous(self):\n-        return _getAuthenticatedUser(self.context).getUserName() == "Anonymous User"\n+    def _rendered_cache(self):\n+        if getConfiguration().debug_mode:\n+            return\n+        self.registry = getUtility(IRegistry)\n+        if not self.registry["plone.resources.development"]:\n+            return getattr(\n+                self.context, f"_v_renderend_cached_{self.__class__.__name__}", None\n+            )\n \n-    @property\n-    @memoize\n-    def development(self):\n-        """\n-        To set development mode:\n-\n-        - we can define a envvar: FEDEV\n-        - otherwise if its anonymous is using production mode\n-        - finally is checked on the registry entry\n-        """\n-        if RESOURCE_DEVELOPMENT_MODE:\n-            return True\n-        if self.anonymous and not self.debug_mode:\n-            return False\n-        return self.registry.records["plone.resources.development"].value\n+    @_rendered_cache.setter\n+    def _rendered_cache(self, value):\n+        setattr(self.context, f"_v_renderend_cached_{self.__class__.__name__}", value)\n \n-    @property\n-    def debug_mode(self):\n-        return getConfiguration().debug_mode\n+    def update(self):\n+        # cache on request\n+        cached = getattr(self.request, REQUEST_CACHE_KEY, None)\n+        if cached is not None:\n+            self.renderer = cached\n+            return\n \n-    def develop_bundle(self, bundle, attr):\n-        return RESOURCE_DEVELOPMENT_MODE or (\n-            self.development and getattr(bundle, attr, False)\n+        # prepare\n+        self.portal_state = getMultiAdapter(\n+            (self.context, self.request), name="plone_portal_state"\n         )\n+        if not getattr(self, "registry", None):\n+            self.registry = getUtility(IRegistry)\n \n-    @property\n-    def last_legacy_import(self):\n-        return self.registry.records["plone.resources.last_legacy_import"].value  # noqa\n+        theme = None\n+        policy = theming_policy(self.request)\n+        if policy.isThemeEnabled():\n+            # Check if Diazo is enabled\n+            theme = policy.get_theme() or None\n+\n+        # we have two groups for two viewlets (historical reasons)\n+        root_group_js = webresource.ResourceGroup(name="root_js")\n+        root_group_css = webresource.ResourceGroup(name="root_css")\n+\n+        # register all bundles from registry\n+        registry_group_js = webresource.ResourceGroup(\n+            name="registry_js", group=root_group_js\n+        )\n+        registry_group_css = webresource.ResourceGroup(\n+            name="registry_css", group=root_group_css\n+        )\n+        records = self.registry.collectionOfInterface(\n+            IBundleRegistry, prefix="plone.bundles", check=False\n+        )\n+        unique = True\n+\n+        theme_enabled_bundles = getattr(theme, "enabled_bundles", [])\n+        theme_disabled_bundles = getattr(theme, "disabled_bundles", [])\n+\n+        # include sub/parent request\n+        request = self.request\n+        request_enabled_bundles = set(getattr(request, "enabled_bundles", []))\n+        request_disabled_bundles = set(getattr(request, "disabled_bundles", []))\n+        while request.get("PARENT_REQUEST", None):\n+            request = request["PARENT_REQUEST"]\n+            request_enabled_bundles.update(getattr(request, "enabled_bundles", []))\n+            request_disabled_bundles.update(getattr(request, "disabled_bundles", []))\n+\n+        # collect names\n+        js_names = {name for name, rec in records.items() if rec.jscompilation}\n+        css_names = {name for name, rec in records.items() if rec.csscompilation}\n+        all_names = {name for name, rec in records.items() if rec.jscompilation or rec.csscompilation}\n+\n+        # register\n+        for name, record in records.items():\n+            include = record.enabled\n+            include = include or name in theme_enabled_bundles\n+            include = include and name not in theme_disabled_bundles\n+            include = include or name in request_enabled_bundles\n+            include = include and name not in request_disabled_bundles\n+\n+            if include and record.expression:\n+\n+                def current_expression():\n+                    return self.eval_expression(record.expression, name)\n+\n+                include = current_expression\n+            if record.jscompilation:\n+                depends = record.depends or ""\n+                if depends and depends not in js_names:\n+                    if depends in all_names:\n+                        depends = None\n+                    else:\n+                        msg = f"Bundle \'{name}\' has a non existing dependeny on \'{record.depends}\'. "\n+                        if depends not in GRACEFUL_DEPENDENCY_REWRITE:\n+                            logger.error(\n+                                msg + "Bundle ignored (JS) - This may break your site!"\n+                            )\n+                            continue\n+                        graceful_depends = GRACEFUL_DEPENDENCY_REWRITE[depends]\n+                        logger.error(\n+                            msg\n+                            + f"Bundle dependency (JS) graceful rewritten to \'{graceful_depends}\' "\n+                            + "Fallback will be removed in Plone 7."\n+                        )\n+                        depends = graceful_depends\n+                external = record.jscompilation.startswith("http")\n+                resource = PloneScriptResource(\n+                    context=self.context,\n+                    name=name,\n+                    depends=depends,\n+                    resource=record.jscompilation if not external else None,\n+                    compressed=record.jscompilation if not external else None,\n+                    include=include,\n+                    unique=unique,\n+                    group=registry_group_js,\n+                    url=record.jscompilation if external else None,\n+                    crossorigin="anonymous" if external else None,\n+                    async_=record.load_async or None,\n+                    defer=record.load_defer or None,\n+                    integrity=not external,\n+                )\n+            if record.csscompilation:\n+                depends = record.depends or ""\n+                if depends and depends not in css_names:\n+                    if depends in all_names:\n+                        depends = None\n+                    else:\n+                        msg = f"Bundle \'{name}\' has a non existing dependeny on \'{record.depends}\'. "\n+                        if depends not in GRACEFUL_DEPENDENCY_REWRITE:\n+                            logger.error(\n+                                msg + "Bundle ignored (CSS) - This may break your site!"\n+                            )\n+                            continue\n+                        graceful_depends = GRACEFUL_DEPENDENCY_REWRITE[depends]\n+                        logger.error(\n+                            msg\n+                            + f"Bundle dependency (CSS) graceful rewritten to \'{graceful_depends}\' "\n+                            + "Fallback will be removed in Plone 7."\n+                        )\n+                        depends = graceful_depends\n+                external = record.csscompilation.startswith("http")\n+                resource = PloneStyleResource(\n+                    context=self.context,\n+                    name=name,\n+                    depends=depends,\n+                    resource=record.csscompilation if not external else None,\n+                    compressed=record.csscompilation if not external else None,\n+                    include=include,\n+                    unique=unique,\n+                    group=registry_group_css,\n+                    url=record.csscompilation if external else None,\n+                    media="all",\n+                    rel="stylesheet",\n+                )\n+\n+        # Collect theme data\n+        themedata = {}\n+        themedata["production_css"] = getattr(theme, "production_css", None)\n+        themedata["development_css"] = getattr(theme, "development_css", None)\n+        themedata["production_js"] = getattr(theme, "production_js", None)\n+        themedata["development_js"] = getattr(theme, "development_js", None)\n+\n+        # add Theme JS\n+        if themedata["production_js"]:\n+            # we ignore development_js for external detection\n+            external = themedata["production_js"].startswith("http")\n+            PloneScriptResource(\n+                context=self.context,\n+                name="theme",\n+                depends="",\n+                resource=(\n+                    themedata["development_js"] or themedata["production_js"]\n+                    if not external\n+                    else None\n+                ),\n+                compressed=themedata["production_js"] if not external else None,\n+                include=True,\n+                unique=unique,\n+                group=root_group_js,\n+                url=themedata["production_js"] if external else None,\n+                crossorigin="anonymous" if external else None,\n+                integrity=not external,\n+            )\n+\n+        # add Theme CSS\n+        if themedata["production_css"]:\n+            # we ignore development_css for external detection\n+            external = themedata["production_css"].startswith("http")\n+            PloneStyleResource(\n+                context=self.context,\n+                name="theme",\n+                depends="",\n+                resource=(\n+                    themedata["development_css"] or themedata["production_css"]\n+                    if not external\n+                    else None\n+                ),\n+                compressed=themedata["production_css"] if not external else None,\n+                include=True,\n+                unique=unique,\n+                group=root_group_css,\n+                url=themedata["production_css"] if external else None,\n+                media="all",\n+                rel="stylesheet",\n+            )\n+\n+        # add Custom CSS\n+        registry = getUtility(IRegistry)\n+        theme_settings = registry.forInterface(IThemeSettings, False)\n+        if theme_settings.custom_css:\n+            PloneStyleResource(\n+                context=self.context,\n+                name="custom",\n+                depends="",\n+                resource="@@custom.css",\n+                include=True,\n+                unique=unique,\n+                group=root_group_css,\n+                media="all",\n+                rel="stylesheet",\n+            )\n+\n+        self.renderer = {}\n+        setattr(self.request, REQUEST_CACHE_KEY, self.renderer)\n+        resolver_js = webresource.ResourceResolver(root_group_js)\n+        self.renderer["js"] = webresource.ResourceRenderer(\n+            resolver_js, base_url=self.portal_state.portal_url()\n+        )\n+        resolver_css = webresource.ResourceResolver(root_group_css)\n+        self.renderer["css"] = webresource.ResourceRenderer(\n+            resolver_css, base_url=self.portal_state.portal_url()\n+        )\n \n     def evaluateExpression(self, expression, context):\n         """Evaluate an object\'s TALES condition to see if it should be\n-        displayed.\n-        """\n+        displayed."""\n         try:\n             if expression.text and context is not None:\n                 portal = getToolByName(context, "portal_url").getPortalObject()\n@@ -92,50 +293,14 @@ def evaluateExpression(self, expression, context):\n                 # add \'context\' as an alias for \'object\'\n                 ec.setGlobal("context", context)\n                 return expression(ec)\n-            else:\n-                return True\n+            return True\n         except AttributeError:\n             return True\n \n-    def update(self):\n-        self.portal_state = getMultiAdapter(\n-            (self.context, self.request), name="plone_portal_state"\n-        )\n-        self.site_url = self.portal_state.portal_url()\n-        self.registry = getUtility(IRegistry)\n-        self.production_path = get_production_resource_directory()\n-\n-        theme = None\n-        policy = theming_policy(self.request)\n-        if policy.isThemeEnabled():\n-            # Check if Diazo is enabled\n-            theme = policy.get_theme() or None\n-\n-        self.diazo_production_css = getattr(theme, "production_css", None)\n-        self.diazo_development_css = getattr(theme, "development_css", None)\n-        self.diazo_production_js = getattr(theme, "production_js", None)\n-        self.diazo_development_js = getattr(theme, "development_js", None)\n-        self.theme_enabled_bundles = getattr(theme, "enabled_bundles", [])\n-        self.theme_disabled_bundles = getattr(theme, "disabled_bundles", [])\n-\n-    def get_bundles(self):\n-        result = {}\n-        records = self.registry.collectionOfInterface(\n-            IBundleRegistry, prefix="plone.bundles", check=False\n-        )\n-        for name, record in records.items():\n-            result[name] = Bundle(record)\n-        return result\n-\n-    def get_resources(self):\n-        return self.registry.collectionOfInterface(\n-            IResourceRegistry, prefix="plone.resources", check=False\n-        )\n-\n     def eval_expression(self, expression, bundle_name):\n         if not expression:\n             return True\n-        cache = component.queryUtility(ram.IRAMCache)\n+        cache = queryUtility(ram.IRAMCache)\n         cooked_expression = None\n         if cache is not None:\n             cooked_expression = cache.query(\n@@ -153,75 +318,28 @@ def eval_expression(self, expression, bundle_name):\n                 )\n         return self.evaluateExpression(cooked_expression, self.context)\n \n-    def get_cooked_bundles(self):\n-        """\n-        Get the cooked bundles\n-        """\n-        request = get_top_request(self.request)  # might be a subrequest\n-\n-        # theme specific set bundles\n-        enabled_bundles = set(self.theme_enabled_bundles)\n-        disabled_bundles = set(self.theme_disabled_bundles)\n-\n-        # Request set bundles\n-        enabled_bundles.update(getattr(request, "enabled_bundles", []))\n-        disabled_bundles.update(getattr(request, "disabled_bundles", []))\n-\n-        for key, bundle in self.get_bundles().items():\n-            # The diazo manifest and request bundles are more important than\n-            # the disabled bundle on registry.\n-            # We can access the site with diazo.off=1 without diazo bundles\n-            if (\n-                key in disabled_bundles\n-                or (key not in enabled_bundles and not bundle.enabled)\n-                or not self.eval_expression(bundle.expression, bundle.name)\n-            ):\n-                continue\n-\n-            yield key, bundle\n-\n-    def ordered_bundles_result(self, production=False):\n-        """\n-        It gets the ordered result of bundles\n-        """\n-        result = []\n-        inserted = []\n-        depends_on = {}\n-        for key, bundle in self.get_cooked_bundles():\n-            if bundle.depends is None or bundle.depends == "":\n-                # its the first one\n-                if not (production and bundle.merge_with):\n-                    self.get_data(bundle, result)\n-                inserted.append(key)\n-            else:\n-                name = bundle.depends.strip()\n-                if name in depends_on:\n-                    depends_on[name].append(bundle)\n-                else:\n-                    depends_on[name] = [bundle]\n-\n-        # We need to check all dependencies\n-        while len(depends_on) > 0:\n-            found = False\n-            for key, bundles_to_add in list(depends_on.items()):\n-                if key not in inserted:\n-                    continue\n-                found = True\n-                for bundle in bundles_to_add:\n-                    if not (production and bundle.merge_with):\n-                        self.get_data(bundle, result)\n-                    inserted.append(bundle.name)\n-                del depends_on[key]\n-            if not found:\n-                break\n-\n-        # The ones that does not get the dependencies\n-        for bundles_to_add in depends_on.values():\n-            for bundle in bundles_to_add:\n-                if not (production and bundle.merge_with):\n-                    self.get_data(bundle, result)\n-        return result\n-\n \n class ResourceView(ResourceBase, ViewletBase):\n     """Viewlet Information for script rendering."""\n+\n+\n+class ScriptsView(ResourceView):\n+    """Script Viewlet."""\n+\n+    def index(self):\n+        rendered = self._rendered_cache\n+        if not rendered:\n+            rendered = self.renderer["js"].render()\n+            self._rendered_cache = rendered\n+        return rendered\n+\n+\n+class StylesView(ResourceView):\n+    """Styles Viewlet."""\n+\n+    def index(self):\n+        rendered = self._rendered_cache\n+        if not rendered:\n+            rendered = self.renderer["css"].render()\n+            self._rendered_cache = rendered\n+        return rendered\ndiff --git a/Products/CMFPlone/resources/browser/scripts.pt b/Products/CMFPlone/resources/browser/scripts.pt\ndeleted file mode 100644\nindex d3d762fd7f..0000000000\n--- a/Products/CMFPlone/resources/browser/scripts.pt\n+++ /dev/null\n@@ -1,38 +0,0 @@\n-<script tal:content="string:PORTAL_URL = \'${view/site_url}\';"></script>\n-\n-<tal:scripts repeat="script view/scripts">\n-  <tal:block define="condcomment script/conditionalcomment; resetrjs script/resetrjs|nothing">\n-\n-    <tal:if condition="resetrjs">\n-      <tal:openreset content=\'structure string:&lt;script&gt;\'></tal:openreset>\n-\n-      <tal:comment tal:replace="nothing">\n-        Reset RequireJS definitions so that people who put RequireJS in a legacy compilation do not get errors\n-      </tal:comment>\n-\n-      var _old_define = define;\n-      var _old_require = require;\n-      define = undefined;\n-      require = undefined;\n-      <tal:endreset content=\'structure string:&lt;/script&gt;\'></tal:endreset>\n-    </tal:if>\n-\n-    <tal:if condition="condcomment">\n-      <tal:opencc tal:replace="structure string:&lt;!--[if ${condcomment}]&gt;"></tal:opencc>\n-    </tal:if>\n-\n-    <script type="text/javascript" tal:attributes="src script/src; data-bundle script/bundle; async script/async|nothing; defer script/defer|nothing"></script>\n-\n-    <tal:if condition="condcomment">\n-      <tal:closecc tal:condition="condcomment" tal:replace="structure string:&lt;![endif]--&gt;"></tal:closecc>\n-    </tal:if>\n-\n-    <tal:if condition="resetrjs">\n-      <tal:openredefine content=\'structure string:&lt;script&gt;\'></tal:openredefine>\n-      define = _old_define;\n-      require = _old_require;\n-      <tal:endredefine content=\'structure string:&lt;/script&gt;\'></tal:endredefine>\n-    </tal:if>\n-\n-  </tal:block>\n-</tal:scripts>\ndiff --git a/Products/CMFPlone/resources/browser/scripts.py b/Products/CMFPlone/resources/browser/scripts.py\ndeleted file mode 100644\nindex b2b52a0a07..0000000000\n--- a/Products/CMFPlone/resources/browser/scripts.py\n+++ /dev/null\n@@ -1,219 +0,0 @@\n-from Products.CMFPlone.resources.browser.cook import cookWhenChangingSettings\n-from Products.CMFPlone.resources.browser.resource import ResourceView\n-from Products.CMFPlone.utils import get_top_request\n-from urllib import parse\n-from zope.component import getMultiAdapter\n-\n-\n-class ScriptsView(ResourceView):\n-    """Information for script rendering."""\n-\n-    def _add_resources(\n-        self,\n-        resources_to_add,\n-        result,\n-        bundle_name="none",\n-        resetrjs=False,\n-        conditionalcomment="",\n-    ):\n-        resources = self.get_resources()\n-        for resource in resources_to_add:\n-            data = resources.get(resource, None)\n-            if data is None or not data.js:\n-                continue\n-            url = parse.urlparse(data.js)\n-            if url.netloc == "":\n-                # Local\n-                src = f"{self.site_url}/{data.js}"\n-            else:\n-                src = data.js\n-            data = {\n-                "bundle": bundle_name,\n-                "conditionalcomment": conditionalcomment,\n-                "src": src,\n-                # Reset RequireJS if bundle is in non-compile to\n-                # avoid "Mismatched anonymous define()" in legacy\n-                # scripts.\n-                "resetrjs": resetrjs,\n-            }\n-            result.append(data)\n-\n-    def get_data(self, bundle, result):\n-        if self.develop_bundle(bundle, "develop_javascript"):\n-            # Bundle development mode\n-            self._add_resources(\n-                bundle.resources,\n-                result,\n-                bundle_name=bundle.name,\n-                resetrjs=bundle.compile is False,\n-                conditionalcomment=bundle.conditionalcomment,\n-            )\n-            return\n-        if (\n-            not bundle.compile\n-            and (\n-                not bundle.last_compilation\n-                or self.last_legacy_import > bundle.last_compilation\n-            )\n-            and bundle.resources\n-        ):\n-            # Its a legacy bundle OR compiling is happening outside of plone\n-\n-            # We need to combine files. It\'s possible no resources are\n-            # defined because the compiling is done outside of plone\n-            cookWhenChangingSettings(self.context, bundle)\n-        if bundle.jscompilation:\n-            js_path = bundle.jscompilation\n-            if "++plone++" in js_path:\n-                resource_path = js_path.split("++plone++")[-1]\n-                resource_name, resource_filepath = resource_path.split("/", 1)\n-                js_location = "{}/++plone++{}/++unique++{}/{}".format(\n-                    self.site_url,\n-                    resource_name,\n-                    parse.quote(str(bundle.last_compilation)),\n-                    resource_filepath,\n-                )\n-            else:\n-                js_location = "{}/{}?version={}".format(\n-                    self.site_url,\n-                    bundle.jscompilation,\n-                    parse.quote(str(bundle.last_compilation)),\n-                )\n-\n-            load_async = (\n-                "async" if getattr(bundle, "load_async", None) else None\n-            )  # noqa\n-            load_defer = (\n-                "defer" if getattr(bundle, "load_defer", None) else None\n-            )  # noqa\n-\n-            result.append(\n-                {\n-                    "bundle": bundle.name,\n-                    "conditionalcomment": bundle.conditionalcomment,\n-                    "src": js_location,\n-                    "async": load_async,\n-                    "defer": load_defer,\n-                }\n-            )\n-\n-    def default_resources(self):\n-        """Default resources used by Plone itself"""\n-        result = []\n-        # We always add jquery resource\n-        result.append(\n-            {\n-                "src": "{}/{}".format(\n-                    self.site_url,\n-                    self.registry.records["plone.resources/jquery.js"].value,\n-                ),\n-                "conditionalcomment": None,\n-                "bundle": "basic",\n-            }\n-        )\n-        if self.development:\n-            # We need to add require.js and config.js\n-            result.append(\n-                {\n-                    "src": "{}/{}".format(\n-                        self.site_url,\n-                        self.registry.records["plone.resources.less-variables"].value,\n-                    ),  # noqa\n-                    "conditionalcomment": None,\n-                    "bundle": "basic",\n-                }\n-            )\n-            result.append(\n-                {\n-                    "src": "{}/{}".format(\n-                        self.site_url,\n-                        self.registry.records["plone.resources.lessc"].value,\n-                    ),\n-                    "conditionalcomment": None,\n-                    "bundle": "basic",\n-                }\n-            )\n-        result.append(\n-            {\n-                "src": "{}/{}".format(\n-                    self.site_url,\n-                    self.registry.records["plone.resources.requirejs"].value,\n-                ),\n-                "conditionalcomment": None,\n-                "bundle": "basic",\n-            }\n-        )\n-        result.append(\n-            {\n-                "src": "{}/{}".format(\n-                    self.site_url,\n-                    self.registry.records["plone.resources.configjs"].value,\n-                ),\n-                "conditionalcomment": None,\n-                "bundle": "basic",\n-            }\n-        )\n-        return result\n-\n-    def base_url(self):\n-        portal_state = getMultiAdapter(\n-            (self.context, self.request), name="plone_portal_state"\n-        )\n-        site_url = portal_state.portal_url()\n-        return site_url\n-\n-    def scripts(self):\n-        """The requirejs scripts, the ones that are not resources are loaded on\n-        configjs.py\n-        """\n-        if self.debug_mode or self.development or not self.production_path:\n-            result = self.default_resources()\n-            result.extend(self.ordered_bundles_result())\n-        else:\n-            result = [\n-                {\n-                    "src": "{}/++plone++{}".format(\n-                        self.site_url, self.production_path + "/default.js"\n-                    ),\n-                    "conditionalcomment": None,\n-                    "bundle": "production",\n-                    "async": None,  # Do not load ``async`` or\n-                    "defer": None,  # ``defer`` for production bundles.\n-                }\n-            ]\n-            if not self.anonymous:\n-                result.append(\n-                    {\n-                        "src": "{}/++plone++{}".format(\n-                            self.site_url, self.production_path + "/logged-in.js"\n-                        ),\n-                        "conditionalcomment": None,\n-                        "bundle": "production",\n-                        "async": None,  # Do not load ``async`` or\n-                        "defer": None,  # ``defer`` for production bundles.\n-                    }\n-                )\n-            result.extend(self.ordered_bundles_result(production=True))\n-\n-        # Add manual added resources\n-        request = get_top_request(self.request)  # might be a subrequest\n-        enabled_resources = getattr(request, "enabled_resources", [])\n-        if enabled_resources:\n-            self._add_resources(enabled_resources, result)\n-\n-        # Add diazo url\n-        origin = None\n-        if self.diazo_production_js and not self.development:\n-            origin = self.diazo_production_js\n-        if self.diazo_development_js and self.development:\n-            origin = self.diazo_development_js\n-        if origin:\n-            result.append(\n-                {\n-                    "bundle": "diazo",\n-                    "conditionalcomment": "",\n-                    "src": f"{self.site_url}/{origin}",\n-                }\n-            )\n-\n-        return result\ndiff --git a/Products/CMFPlone/resources/browser/styles.pt b/Products/CMFPlone/resources/browser/styles.pt\ndeleted file mode 100644\nindex 8efe677417..0000000000\n--- a/Products/CMFPlone/resources/browser/styles.pt\n+++ /dev/null\n@@ -1,13 +0,0 @@\n-<tal:styles repeat="style view/styles"\n-  ><tal:block define="condcomment style/conditionalcomment"\n-    ><tal:wcondcomment tal:condition="condcomment">\n-        <tal:opencc tal:replace="structure string:&lt;!--[if ${condcomment}]&gt;" />\n-    </tal:wcondcomment\n-    ><link rel="style"\n-          tal:attributes="href style/src;\n-                          rel style/rel;\n-                          data-bundle style/bundle;" /><tal:wcondcomment tal:condition="condcomment">\n-        <tal:closecc tal:replace="structure string:&lt;![endif]--&gt;" />\n-    </tal:wcondcomment\n-  ></tal:block\n-></tal:styles>\ndiff --git a/Products/CMFPlone/resources/browser/styles.py b/Products/CMFPlone/resources/browser/styles.py\ndeleted file mode 100644\nindex f1ee9c242e..0000000000\n--- a/Products/CMFPlone/resources/browser/styles.py\n+++ /dev/null\n@@ -1,180 +0,0 @@\n-from plone.app.layout.viewlets.common import ViewletBase\n-from plone.app.theming.interfaces import IThemeSettings\n-from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.resources.browser.cook import cookWhenChangingSettings\n-from Products.CMFPlone.resources.browser.resource import ResourceBase\n-from Products.CMFPlone.utils import get_top_request\n-from urllib import parse\n-from zope.component import getUtility\n-\n-\n-class StylesBase(ResourceBase):\n-\n-    """ Information for style rendering. """\n-\n-    def get_urls(self, style, bundle):\n-        """\n-        Extracts the urls for the specific resource\n-        """\n-        for css in style.css:\n-            url = parse.urlparse(css)\n-            if url.netloc == "":\n-                # Local\n-                src = f"{self.site_url}/{css}"\n-            else:\n-                src = "%s" % (css)\n-\n-            extension = url.path.split(".")[-1]\n-            rel = "stylesheet"\n-            if extension != "" and extension != "css":\n-                rel = "stylesheet/%s" % extension\n-\n-            data = {\n-                "rel": rel,\n-                "bundle": bundle.name if bundle else "none",\n-                "conditionalcomment": bundle.conditionalcomment if bundle else "",\n-                "src": src,\n-            }\n-            yield data\n-\n-    def get_data(self, bundle, result):\n-        """\n-        Gets the needed information for the bundle\n-        and stores it on the result list\n-        """\n-        if self.develop_bundle(bundle, "develop_css"):\n-            self.resources = self.get_resources()\n-            # The bundle resources\n-            for resource in bundle.resources:\n-                if resource in self.resources:\n-                    style = self.resources[resource]\n-                    for data in self.get_urls(style, bundle):\n-                        result.append(data)\n-        else:\n-            if bundle.compile is False:\n-                # Its a legacy css bundle\n-                if (\n-                    not bundle.last_compilation\n-                    or self.last_legacy_import > bundle.last_compilation\n-                ):\n-                    # We need to compile\n-                    cookWhenChangingSettings(self.context, bundle)\n-\n-            if bundle.csscompilation:\n-                css_path = bundle.csscompilation\n-                if "++plone++" in css_path:\n-                    resource_path = css_path.split("++plone++")[-1]\n-                    resource_name, resource_filepath = resource_path.split("/", 1)\n-                    css_location = "{}/++plone++{}/++unique++{}/{}".format(\n-                        self.site_url,\n-                        resource_name,\n-                        parse.quote(str(bundle.last_compilation)),\n-                        resource_filepath,\n-                    )\n-                else:\n-                    css_location = "{}/{}?version={}".format(\n-                        self.site_url,\n-                        bundle.csscompilation,\n-                        parse.quote(str(bundle.last_compilation)),\n-                    )\n-                result.append(\n-                    {\n-                        "bundle": bundle.name,\n-                        "rel": "stylesheet",\n-                        "conditionalcomment": bundle.conditionalcomment,\n-                        "src": css_location,\n-                    }\n-                )\n-\n-    @property\n-    def _theme_settings(self):\n-        registry = getUtility(IRegistry)\n-        return registry.forInterface(IThemeSettings, False)\n-\n-    @property\n-    def custom_css(self):\n-        return self._theme_settings.custom_css\n-\n-    @property\n-    def custom_css_timestamp(self):\n-        return self._theme_settings.custom_css_timestamp\n-\n-    def styles(self):\n-        """\n-        Get all the styles\n-        """\n-        if self.development or self.debug_mode or not self.production_path:\n-            result = self.ordered_bundles_result()\n-        else:\n-            result = [\n-                {\n-                    "src": "{}/++plone++{}".format(\n-                        self.site_url, self.production_path + "/default.css"\n-                    ),\n-                    "conditionalcomment": None,\n-                    "rel": "stylesheet",\n-                    "bundle": "production",\n-                },\n-            ]\n-            if not self.anonymous:\n-                result.append(\n-                    {\n-                        "src": "{}/++plone++{}".format(\n-                            self.site_url, self.production_path + "/logged-in.css"\n-                        ),\n-                        "conditionalcomment": None,\n-                        "rel": "stylesheet",\n-                        "bundle": "production",\n-                    }\n-                )\n-            result.extend(self.ordered_bundles_result(production=True))\n-\n-        # Add manual added resources\n-        resources = self.get_resources()\n-        request = get_top_request(self.request)  # might be a subrequest\n-        if hasattr(request, "enabled_resources"):\n-            for resource in request.enabled_resources:\n-                if resource in resources:\n-                    for data in self.get_urls(resources[resource], None):\n-                        result.append(data)\n-\n-        # Add diazo css\n-        origin = None\n-        if self.diazo_production_css and self.development is False:\n-            origin = self.diazo_production_css\n-        if self.diazo_development_css and self.development is True:\n-            origin = self.diazo_development_css\n-        if origin:\n-            url = parse.urlparse(origin)\n-            if url.netloc == "":\n-                # Local\n-                src = f"{self.site_url}/{origin}"\n-            else:\n-                src = "%s" % (origin)\n-\n-            extension = url.path.split(".")[-1]\n-            rel = "stylesheet"\n-            if extension != "" and extension != "css":\n-                rel = "stylesheet/%s" % extension\n-\n-            data = {"rel": rel, "conditionalcomment": "", "src": src, "bundle": "diazo"}\n-\n-            result.append(data)\n-\n-        # custom.css\n-        if self.custom_css:\n-            custom_css = {\n-                "rel": "stylesheet",\n-                "conditionalcomment": "",\n-                "src": "{}/custom.css?timestamp={}".format(\n-                    self.site_url,\n-                    self.custom_css_timestamp,\n-                ),\n-                "bundle": "custom-css",\n-            }\n-            result.append(custom_css)\n-        return result\n-\n-\n-class StylesView(StylesBase, ViewletBase):\n-    """Styles Viewlet"""\ndiff --git a/Products/CMFPlone/resources/bundle.py b/Products/CMFPlone/resources/bundle.py\ndeleted file mode 100644\nindex 08027f2a58..0000000000\n--- a/Products/CMFPlone/resources/bundle.py\n+++ /dev/null\n@@ -1,101 +0,0 @@\n-from datetime import datetime\n-from plone.resource.directory import FilesystemResourceDirectory\n-from plone.resource.file import FilesystemFile\n-from Products.CMFCore.FSFile import FSFile\n-from Products.Five.browser.resource import DirectoryResource\n-from Products.Five.browser.resource import FileResource\n-from zExceptions import NotFound\n-from zope.component.hooks import getSite\n-\n-import os\n-\n-\n-class Bundle:\n-    """Wraps pure bundles RecordsProxy and enrich with logic\n-    .\n-    Proxy attributes and provide some utility functions\n-    """\n-\n-    def __init__(self, data):\n-        """initialize Bunde.initialize\n-\n-        data is a\n-        - registry record\n-        - with interfaces\'IResourceRegistry\'\n-        - with prefix \'plone.bundles\'\n-        """\n-        self.data = data\n-\n-    def _real_path(self, ctx):\n-        if ctx == "js":\n-            resource_path = self.data.jscompilation\n-        else:\n-            resource_path = self.data.csscompilation\n-        try:\n-            resource = getSite().restrictedTraverse(resource_path)\n-        except (NotFound, KeyError):\n-            return None, None\n-        if resource.__module__ == "Products.Five.metaclass":\n-            try:\n-                return "fs", resource.chooseContext().path\n-            except:\n-                try:\n-                    return "fs", resource.context.path\n-                except:\n-                    try:\n-                        if callable(resource):\n-                            return None, None\n-                        else:\n-                            return None, None\n-                    except:\n-                        return None, None\n-        elif isinstance(resource, FilesystemFile):\n-            return "fs", resource.path\n-        elif isinstance(resource, FileResource):\n-            return "fs", resource.chooseContext().path\n-        elif isinstance(resource, DirectoryResource):\n-            return "fs", resource.context.path\n-        elif isinstance(resource, FilesystemResourceDirectory):\n-            return "fs", resource.directory\n-        elif isinstance(resource, FSFile):\n-            return "zodb", resource._filepath\n-        else:\n-            return "zodb", None\n-\n-    @property\n-    def name(self):\n-        return self.data.__prefix__.split("/", 1)[1].rstrip(".")\n-\n-    @property\n-    def last_compilation(self):\n-        """check bundles last compilation using filesystem date or date of OFS.\n-\n-        if bundle has a last_compilation date newer than filesystem/OFS it wins\n-        always.\n-        """\n-        mods = []\n-        for ctx in ["js", "css"]:\n-            loc, path = self._real_path(ctx)\n-            if loc == "fs" and os.path.exists(path):\n-                mods.append(datetime.fromtimestamp(os.path.getmtime(path)))\n-            elif loc == "zodb":\n-                self.data.last_compilation\n-        if self.data.last_compilation and mods:\n-            if self.data.last_compilation > max(mods):\n-                return self.data.last_compilation\n-            else:\n-                return max(mods)\n-        return self.data.last_compilation\n-\n-    @last_compilation.setter\n-    def last_compilation(self, value):\n-        self.data.last_compilation = value\n-\n-    def __getattr__(self, name):\n-        """act as r/o wrapper"""\n-        return getattr(self.data, name)\n-\n-    def __repr__(self):\n-        return \'<{}.{} object "{}" at {}>\'.format(\n-            self.__class__.__module__, self.__class__.__name__, self.name, id(self)\n-        )\ndiff --git a/Products/CMFPlone/resources/exportimport/resourceregistry.py b/Products/CMFPlone/resources/exportimport/resourceregistry.py\ndeleted file mode 100644\nindex 9d29740475..0000000000\n--- a/Products/CMFPlone/resources/exportimport/resourceregistry.py\n+++ /dev/null\n@@ -1,170 +0,0 @@\n-from datetime import datetime\n-from plone.i18n.normalizer.interfaces import IIDNormalizer\n-from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import IBundleRegistry\n-from Products.CMFPlone.interfaces import IResourceRegistry\n-from Products.CMFPlone.resources.browser.cook import cookWhenChangingSettings\n-from Products.GenericSetup.interfaces import IBody\n-from Products.GenericSetup.utils import XMLAdapterBase\n-from zope.component import queryMultiAdapter\n-from zope.component import queryUtility\n-from zope.interface.interfaces import ComponentLookupError\n-\n-\n-def importResRegistry(context, reg_id, reg_title, filename):\n-    """Import resource registry."""\n-    site = context.getSite()\n-    logger = context.getLogger("resourceregistry")\n-\n-    body = context.readDataFile(filename)\n-    if body is None:\n-        return\n-\n-    res_reg = getToolByName(site, reg_id)\n-\n-    importer = queryMultiAdapter((res_reg, context), IBody)\n-    if importer is None:\n-        logger.warning("%s: Import adapter missing." % reg_title)\n-        return\n-    try:\n-        importer.registry = getToolByName(site, "portal_registry")\n-    except AttributeError:\n-        # Upgrade 3.x no registry there\n-        importer.registry = None\n-    importer.body = body\n-    logger.info("%s imported." % reg_title)\n-\n-\n-class ResourceRegistryNodeAdapter(XMLAdapterBase):\n-\n-    resource_blacklist = set()\n-    registry = None\n-\n-    def _importNode(self, node):\n-        """Import the object from the DOM node."""\n-        if self.registry is None:\n-            # Upgrade 3.x no registry there\n-            return\n-        resources = self.registry.collectionOfInterface(\n-            IResourceRegistry, prefix="plone.resources", check=False\n-        )\n-\n-        bundles = self.registry.collectionOfInterface(\n-            IBundleRegistry, prefix="plone.bundles", check=False\n-        )\n-        if "plone-legacy" in bundles:\n-            legacy = bundles["plone-legacy"]\n-        else:\n-            legacy = bundles.setdefault("plone-legacy")\n-            legacy.resources = []\n-            legacy.enabled = True\n-\n-        for child in node.childNodes:\n-            if child.nodeName != self.resource_type:\n-                continue\n-\n-            data = {}\n-            add = True\n-            remove = False\n-            position = res_id = None\n-            for key, value in child.attributes.items():\n-                key = str(key)\n-                if key == "update":\n-                    continue\n-                if key == "remove" and value in (True, "true", "True"):\n-                    add = False\n-                    remove = True\n-                    continue\n-                if key in ("position-before", "insert-before"):\n-                    position = (\n-                        "before",\n-                        queryUtility(IIDNormalizer).normalize(str(value)),\n-                    )\n-                    continue\n-                if key in ("position-after", "insert-after"):\n-                    position = (\n-                        "after",\n-                        queryUtility(IIDNormalizer).normalize(str(value)),\n-                    )\n-                    continue\n-                if key in ("position-top", "insert-top"):\n-                    position = ("*",)\n-                    continue\n-                if key in ("position-bottom", "insert-bottom"):\n-                    position = ("",)\n-                    continue\n-                if key == "id":\n-                    if value in self.resource_blacklist:\n-                        add = False\n-                        data.clear()\n-                        break\n-                    res_id = queryUtility(IIDNormalizer).normalize(str(value))\n-                    data["url"] = str(value)\n-                elif value.lower() == "false":\n-                    data[key] = False\n-                elif value.lower() == "true":\n-                    data[key] = True\n-                else:\n-                    try:\n-                        data[key] = int(value)\n-                    except ValueError:\n-                        data[key] = str(value)\n-\n-            if add:\n-                proxy = resources.setdefault(res_id)\n-                if self.resource_type == "javascript":\n-                    proxy.js = data["url"]\n-                elif self.resource_type == "stylesheet":\n-                    proxy.css = [data["url"]]\n-                if "enabled" in data and not data["enabled"]:\n-                    # if we are disabling it, we need to remove from legacy\n-                    # resources\n-                    if res_id in legacy.resources:\n-                        legacy.resources.remove(res_id)\n-                    continue\n-                if res_id in legacy.resources:\n-                    # remove here so we can possible re-insert into whatever\n-                    # position is preferred below and then we do not\n-                    # re-add same resource multiple times\n-                    legacy.resources.remove(res_id)\n-                if position is None:\n-                    position = ("",)\n-                if position[0] == "*":\n-                    legacy.resources.insert(0, res_id)\n-                elif position[0] == "":\n-                    legacy.resources.append(res_id)\n-                elif position[0] == "after":\n-                    if position[1] in legacy.resources:\n-                        legacy.resources.insert(\n-                            legacy.resources.index(position[1]) + 1, res_id\n-                        )\n-                    else:\n-                        legacy.resources.append(res_id)\n-                elif position[0] == "before":\n-                    if position[1] in legacy.resources:\n-                        legacy.resources.insert(\n-                            legacy.resources.index(position[1]), res_id\n-                        )\n-                    else:\n-                        legacy.resources.append(res_id)\n-\n-            elif remove:\n-                if res_id in legacy.resources:\n-                    legacy.resources.remove(res_id)\n-                if res_id in resources:\n-                    del resources[res_id]\n-\n-            # make sure to trigger committing to db\n-            # not sure this is necessary...\n-            legacy.resources = legacy.resources\n-\n-        if "plone.resources.last_legacy_import" in self.registry.records:  # noqa\n-            self.registry.records[\n-                "plone.resources.last_legacy_import"\n-            ].value = datetime.now()\n-            try:\n-                cookWhenChangingSettings(self.context, legacy)\n-            except (AssertionError, ComponentLookupError):\n-                # zope.globalrequest and the site might not be setup, don\'t\n-                # error out\n-                pass\ndiff --git a/Products/CMFPlone/resources/utils.py b/Products/CMFPlone/resources/utils.py\nnew file mode 100644\nindex 0000000000..5b7ba7ced3\n--- /dev/null\n+++ b/Products/CMFPlone/resources/utils.py\n@@ -0,0 +1,73 @@\n+from Acquisition import aq_base\n+from plone.resource.file import FilesystemFile\n+from plone.resource.interfaces import IResourceDirectory\n+from Products.CMFPlone.interfaces.resources import OVERRIDE_RESOURCE_DIRECTORY_NAME\n+from zExceptions import NotFound\n+from zope.component import queryUtility\n+\n+import logging\n+\n+\n+PRODUCTION_RESOURCE_DIRECTORY = "production"\n+logger = logging.getLogger(__name__)\n+\n+\n+def get_production_resource_directory():\n+    persistent_directory = queryUtility(IResourceDirectory, name="persistent")\n+    if persistent_directory is None:\n+        return ""\n+    container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n+    try:\n+        production_folder = container[PRODUCTION_RESOURCE_DIRECTORY]\n+    except NotFound:\n+        return "%s/++unique++1" % PRODUCTION_RESOURCE_DIRECTORY\n+    if "timestamp.txt" not in production_folder:\n+        return "%s/++unique++1" % PRODUCTION_RESOURCE_DIRECTORY\n+    timestamp = production_folder.readFile("timestamp.txt")\n+    if isinstance(timestamp, bytes):\n+        timestamp = timestamp.decode()\n+    return "{}/++unique++{}".format(PRODUCTION_RESOURCE_DIRECTORY, timestamp)\n+\n+\n+def get_resource(context, path):\n+    if path.startswith("++plone++"):\n+        # ++plone++ resources can be customized, we return their override\n+        # value if any\n+        overrides = get_override_directory(context)\n+        filepath = path[9:]\n+        if overrides.isFile(filepath):\n+            return overrides.readFile(filepath)\n+\n+    try:\n+        resource = context.unrestrictedTraverse(path)\n+    except (NotFound, AttributeError):\n+        logger.warning(\n+            f"Could not find resource {path}. You may have to create it first."\n+        )  # noqa\n+        return\n+\n+    if isinstance(resource, FilesystemFile):\n+        (directory, sep, filename) = path.rpartition("/")\n+        return context.unrestrictedTraverse(directory).readFile(filename)\n+\n+    # calling the resource may modify the header, i.e. the content-type.\n+    # we do not want this, so keep the original header intact.\n+    response_before = context.REQUEST.response\n+    context.REQUEST.response = response_before.__class__()\n+    if hasattr(aq_base(resource), "GET"):\n+        # for FileResource\n+        result = resource.GET()\n+    else:\n+        # any BrowserView\n+        result = resource()\n+    context.REQUEST.response = response_before\n+    return result\n+\n+\n+def get_override_directory(context):\n+    persistent_directory = queryUtility(IResourceDirectory, name="persistent")\n+    if persistent_directory is None:\n+        return\n+    if OVERRIDE_RESOURCE_DIRECTORY_NAME not in persistent_directory:\n+        persistent_directory.makeDirectory(OVERRIDE_RESOURCE_DIRECTORY_NAME)\n+    return persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\ndiff --git a/Products/CMFPlone/resources/webresource.py b/Products/CMFPlone/resources/webresource.py\nnew file mode 100644\nindex 0000000000..43f2a36d32\n--- /dev/null\n+++ b/Products/CMFPlone/resources/webresource.py\n@@ -0,0 +1,28 @@\n+from .utils import get_resource\n+from webresource import ScriptResource\n+from webresource import StyleResource\n+\n+\n+class PloneBaseResource:\n+    """Mixin to override certain aspects of a webresource for Plone needs."""\n+\n+    def __init__(self, context, **kw):\n+        """Initialize with Plone context"""\n+        self.context = context\n+        super().__init__(**kw)\n+\n+    @property\n+    def file_data(self):\n+        """Fetch data from using a resource via traversal"""\n+        data = get_resource(self.context, self.resource)\n+        if isinstance(data, str):\n+            data = data.encode("utf8")\n+        return data\n+\n+\n+class PloneScriptResource(PloneBaseResource, ScriptResource):\n+    """Webresource based ScriptResource for Plone"""\n+\n+\n+class PloneStyleResource(PloneBaseResource, StyleResource):\n+    """Webresource based StyleResource for Plone"""\ndiff --git a/Products/CMFPlone/skins/plone_scripts/externalEditorEnabled.py b/Products/CMFPlone/skins/plone_scripts/externalEditorEnabled.py\nindex b31ebce4ea..ad62e1c912 100644\n--- a/Products/CMFPlone/skins/plone_scripts/externalEditorEnabled.py\n+++ b/Products/CMFPlone/skins/plone_scripts/externalEditorEnabled.py\n@@ -16,11 +16,6 @@\n if mtool.isAnonymousUser():\n     return False\n \n-# Temporary content cannot be changed through EE (raises AttributeError)\n-portal_factory = getToolByName(portal, \'portal_factory\', None)\n-if portal_factory and portal_factory.isTemporary(context):\n-    return False\n-\n # Check if the member property\n member = mtool.getAuthenticatedMember()\n if not member.getProperty(\'ext_editor\', False):\ndiff --git a/Products/CMFPlone/tests/robot/robodoc/collaboration-advanced_control.robot b/Products/CMFPlone/tests/robot/robodoc/collaboration-advanced_control.robot\nindex 4427dea3f3..a81141374d 100644\n--- a/Products/CMFPlone/tests/robot/robodoc/collaboration-advanced_control.robot\n+++ b/Products/CMFPlone/tests/robot/robodoc/collaboration-advanced_control.robot\n@@ -37,8 +37,8 @@ Show state menu\n \n     Click link  workflow-transition-advanced\n     Wait until element is visible\n-    ...   css=div.plone-modal-content\n+    ...   css=div.modal-content\n \n     Capture and crop page screenshot\n     ...  ${CURDIR}/_robot/workflow-advanced.png\n-    ...  css=div.plone-modal-wrapper\n+    ...  css=div.modal-wrapper\ndiff --git a/Products/CMFPlone/tests/robot/robodoc/config-screens.robot b/Products/CMFPlone/tests/robot/robodoc/config-screens.robot\nindex c810bec965..36697f6176 100644\n--- a/Products/CMFPlone/tests/robot/robodoc/config-screens.robot\n+++ b/Products/CMFPlone/tests/robot/robodoc/config-screens.robot\n@@ -141,10 +141,6 @@ Show Resource Registry screen\n     Capture and crop page screenshot\n     ...  ${CURDIR}/_robot/resource-registry.png\n     ...  css=#content\n-    Click link  Less Variables\n-    Capture and crop page screenshot\n-    ...  ${CURDIR}/_robot/less-variables.png\n-    ...  css=#content\n \n Show Search setup screen\n     Go to  ${PLONE_URL}/@@search-controlpanel\ndiff --git a/Products/CMFPlone/tests/robot/robodoc/working_with_tinymce.robot b/Products/CMFPlone/tests/robot/robodoc/working_with_tinymce.robot\nindex acd9963e8a..296ba742c0 100644\n--- a/Products/CMFPlone/tests/robot/robodoc/working_with_tinymce.robot\n+++ b/Products/CMFPlone/tests/robot/robodoc/working_with_tinymce.robot\n@@ -39,14 +39,14 @@ Show TinyMCE image\n \n     Click element  css=#mceu_15 button\n     Wait until element is visible\n-    ...  css=h2.plone-modal-title\n+    ...  css=h2.modal-title\n     Wait until element is visible\n     ...  css=div.common-controls\n-    \n+\n     Capture and crop page screenshot\n     ...  ${CURDIR}/_robot/tinymce-imgdialog.png\n     ...  css=div.outer-wrapper\n-    ...  css=div.plone-modal-content\n+    ...  css=div.modal-content\n \n Show TinyMCE insert links\n     Go to  ${PLONE_URL}/samplepage\n@@ -61,7 +61,7 @@ Show TinyMCE insert links\n     Capture and crop page screenshot\n     ...  ${CURDIR}/_robot/tinymce-linkdialog.png\n     ...  css=div.outer-wrapper\n-    ...  css=div.plone-modal-content\n+    ...  css=div.modal-content\n \n Show TinyMCE insert tables\n     Go to  ${PLONE_URL}/samplepage\ndiff --git a/Products/CMFPlone/tests/robot/test_actionmenu.robot b/Products/CMFPlone/tests/robot/test_actionmenu.robot\nindex 945faefd9a..4182e6a59e 100644\n--- a/Products/CMFPlone/tests/robot/test_actionmenu.robot\n+++ b/Products/CMFPlone/tests/robot/test_actionmenu.robot\n@@ -107,11 +107,11 @@ I click outside of menu\n \n workflow link is clicked\n     # store current state\n-    ${OLD_STATE} =  Get Text  xpath=(//span[contains(@class,\'state-\')])[2]\n+    ${OLD_STATE} =  Get Text  xpath=(//span[contains(@class,\'state-\')])\n     Set Suite Variable  ${OLD_STATE}  ${OLD_STATE}\n     Given patterns are loaded\n     Click Link  xpath=//li[@id=\'plone-contentmenu-workflow\']/a\n-    Click Link  xpath=(//li[@id=\'plone-contentmenu-workflow\']/ul/li/a)[1]\n+    Click Link  xpath=(//li[@id=\'plone-contentmenu-workflow\']/div/ul/li/a)[1]\n     Page Should Contain  Item state changed.\n     # FIXME: The above \'Click Link\' fails on Internet Explorer, but the\n     # following keywords \'workflow link is clicked softly\' passes. Until we\n@@ -140,17 +140,17 @@ Open Menu\n Open Action Menu\n     Given patterns are loaded\n     Click link  xpath=//li[@id=\'plone-contentmenu-actions\']/a\n-    Wait until keyword succeeds  5  1  Element Should Be Visible  css=.plonetoolbar-content-action\n+    Wait until keyword succeeds  5  1  Element Should Be Visible  css=#plone-contentmenu-actions .collapse\n \n I copy the page\n     Open Action Menu\n-    Click Link  link=Copy\n+    Click Link  css=#plone-contentmenu-actions .actionicon-object_buttons-copy\n     Page should contain  copied\n \n I paste\n     Go to  ${PLONE_URL}\n     Open Action Menu\n-    Click Link  link=Paste\n+    Click Link  css=#plone-contentmenu-actions .actionicon-object_buttons-paste\n \n \n # --- THEN -------------------------------------------------------------------\n@@ -183,7 +183,7 @@ I should see \'${message}\' in the page\n \n state should have changed\n     Wait until page contains  Item state changed\n-    ${NEW_STATE} =  Get Text  xpath=(//span[contains(@class,\'state-\')])[2]\n+    ${NEW_STATE} =  Get Text  xpath=(//span[contains(@class,\'state-\')])\n     # Should Not Be Equal  ${NEW_STATE}  ${OLD_STATE}\n \n second menu should be visible\ndiff --git a/Products/CMFPlone/tests/robot/test_controlpanel_actions.robot b/Products/CMFPlone/tests/robot/test_controlpanel_actions.robot\nindex 7444e96e9a..afee018bef 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_actions.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_actions.robot\n@@ -71,12 +71,16 @@ I modify an action title\n   Click Link    css=section:nth-child(3) li:first-child a\n   Wait until page contains  Action Settings\n   Input Text for sure  form.widgets.title  A new site map\n+  Set Focus To Element  css=.pattern-modal-buttons > button\n+  Wait Until Element Is Visible  css=.pattern-modal-buttons > button\n   Click Element  css=.pattern-modal-buttons > button\n \n I change the actions order\n   Click Link    css=section:nth-child(3) li:first-child a\n   Wait until page contains  Action Settings\n   Input Text for sure  form.widgets.position  3\n+  Set Focus To Element  css=.pattern-modal-buttons > button\n+  Wait Until Element Is Visible  css=.pattern-modal-buttons > button\n   Click Element  css=.pattern-modal-buttons > button\n \n I add a new action\n@@ -84,14 +88,19 @@ I add a new action\n   Wait until page contains  New action\n   Select From List By Label   form.widgets.category:list   User actions\n   Input Text for sure  form.widgets.id  favorites\n+  Set Focus To Element  css=.pattern-modal-buttons > button\n+  Wait Until Element Is Visible  css=.pattern-modal-buttons > button\n   Click Element  css=.pattern-modal-buttons > button\n   Wait until page contains  favorites\n-  Execute JavaScript  window.scrollTo(0, document.body.scrollHeight)\n+  Set Focus To Element  css=section.category:last-child li:last-child a\n+  Wait Until Element Is Visible  css=section.category:last-child li:last-child a\n   Sleep  1\n-  Click Link     css=section.category:last-child li:last-child a\n+  Click Link  css=section.category:last-child li:last-child a\n   Wait until page contains  Action Settings\n   Input Text for sure  form.widgets.title  My favorites\n   Input Text for sure  form.widgets.url_expr  string:\\${globals_view/navigationRootUrl}/favorites\n+  Set Focus To Element  css=.pattern-modal-buttons > button\n+  Wait Until Element Is Visible  css=.pattern-modal-buttons > button\n   Click Element  css=.pattern-modal-buttons > button\n \n I delete an action\ndiff --git a/Products/CMFPlone/tests/robot/test_controlpanel_navigation.robot b/Products/CMFPlone/tests/robot/test_controlpanel_navigation.robot\nindex 80a85c8bf9..bdad652733 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_navigation.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_navigation.robot\n@@ -68,26 +68,36 @@ a private document \'${title}\'\n \n I disable generate tabs\n   Unselect Checkbox  form.widgets.generate_tabs:list\n+  Set Focus To Element  form.buttons.save\n+  Wait Until Element Is Visible  form.buttons.save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n I disable non-folderish tabs\n   Unselect Checkbox  xpath=//input[@value=\'Document\']\n+  Set Focus To Element  form.buttons.save\n+  Wait Until Element Is Visible  form.buttons.save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n I remove \'${portal_type}\' from the displayed types list\n   Unselect Checkbox  xpath=//input[@value=\'Document\']\n+  Set Focus To Element  form.buttons.save\n+  Wait Until Element Is Visible  form.buttons.save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n I enable filtering by workflow states\n   Select Checkbox  name=form.widgets.filter_on_workflow:list\n+  Set Focus To Element  form.buttons.save\n+  Wait Until Element Is Visible  form.buttons.save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n I choose to show \'${workflow_state}\' items\n   Select Checkbox  xpath=//input[@value=\'${workflow_state}\']\n+  Set Focus To Element  form.buttons.save\n+  Wait Until Element Is Visible  form.buttons.save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \ndiff --git a/Products/CMFPlone/tests/robot/test_controlpanel_search.robot b/Products/CMFPlone/tests/robot/test_controlpanel_search.robot\nindex 6d9bebe766..dc0185a2b4 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_search.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_search.robot\n@@ -49,13 +49,17 @@ the search control panel\n \n I enable livesearch\n   Select Checkbox  form.widgets.enable_livesearch:list\n+  Set Focus To Element  css=#form-buttons-save\n+  Wait Until Element Is Visible  css=#form-buttons-save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n I exclude the \'${portal_type}\' type from search\n   # Make sure we see the checkbox, in expanded in jenkins it gets a bit under the toolbar\n-  Click Link  css=a.plone-toolbar-logo\n+  Set Focus To Element  xpath=//input[@name=\'form.widgets.types_not_searched:list\' and @value=\'${portal_type}\']\n   Unselect Checkbox  xpath=//input[@name=\'form.widgets.types_not_searched:list\' and @value=\'${portal_type}\']\n+  Set Focus To Element  css=#form-buttons-save\n+  Wait Until Element Is Visible  css=#form-buttons-save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \ndiff --git a/Products/CMFPlone/tests/robot/test_controlpanel_security.robot b/Products/CMFPlone/tests/robot/test_controlpanel_security.robot\nindex 65175f7d01..4b7066cb31 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_security.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_security.robot\n@@ -11,7 +11,6 @@ Resource  keywords.robot\n Test Setup  Run keywords  Plone Test Setup\n Test Teardown  Run keywords  Plone Test Teardown\n \n-\n *** Test Cases ***************************************************************\n \n Scenario: Enable self registration in the Security Control Panel\n@@ -143,6 +142,8 @@ A user folder should be created when a user registers and logs in to the site\n   Input Text for sure  form.widgets.email  joe@test.com\n   Input Text for sure  form.widgets.password  supersecret\n   Input Text for sure  form.widgets.password_ctl  supersecret\n+  Set Focus To Element  css=#form-buttons-register\n+  Wait Until Element Is Visible  css=#form-buttons-register\n   Click Button  Register\n \n   # I login to the site\n@@ -175,6 +176,8 @@ UUID should be used for the user id\n   Input Text for sure  form.widgets.email  joe@test.com\n   Input Text for sure  form.widgets.password  supersecret\n   Input Text for sure  form.widgets.password_ctl  supersecret\n+  Set Focus To Element  css=#form-buttons-register\n+  Wait Until Element Is Visible  css=#form-buttons-register\n   Click Button  Register\n \n   # I login to the site\n@@ -184,9 +187,8 @@ UUID should be used for the user id\n   Input text for sure  __ac_password  supersecret\n   Click Button  Log in\n   Wait until page contains  You are now logged in\n-\n   # XXX: Here we can\'t really test that this is a uuid, since it\'s random, so\n   # we just check that user id is not equal to username or email\n-  ${userid}=  Get Text  xpath=//li[@id=\'portal-personaltools\']//li[contains(@class, \'plone-toolbar-submenu-header\')]//span\n+  ${userid}=  Get Text  xpath=//a[@id=\'personaltools-menulink\']\n   Should Not Be Equal As Strings  ${userid}  joe\n   Should Not Be Equal As Strings  ${userid}  joe@test.com\ndiff --git a/Products/CMFPlone/tests/robot/test_controlpanel_site.robot b/Products/CMFPlone/tests/robot/test_controlpanel_site.robot\nindex e425f19b9c..81fee76ee0 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_site.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_site.robot\n@@ -63,31 +63,43 @@ the site control panel\n \n I enable the sitemap\n   Given patterns are loaded\n+  Set Focus To Element  css=#formfield-form-widgets-enable_sitemap\n+  Wait Until Element Is Visible  css=#formfield-form-widgets-enable_sitemap\n   Select Checkbox  form.widgets.enable_sitemap:list\n+  Set Focus To Element  css=#form-buttons-save\n+  Wait Until Element Is Visible  css=#form-buttons-save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n I set the site title to \'${site_title}\'\n   Given patterns are loaded\n   Input Text  name=form.widgets.site_title  ${site_title}\n+  Set Focus To Element  css=#form-buttons-save\n+  Wait Until Element Is Visible  css=#form-buttons-save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n I set a custom logo\n   Given patterns are loaded\n   Choose File  name=form.widgets.site_logo  ${PATH_TO_TEST_FILES}/pixel.png\n+  Set Focus To Element  css=#form-buttons-save\n+  Wait Until Element Is Visible  css=#form-buttons-save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n I enable dublin core metadata\n   Given patterns are loaded\n   Select Checkbox  form.widgets.exposeDCMetaTags:list\n+  Set Focus To Element  css=#form-buttons-save\n+  Wait Until Element Is Visible  css=#form-buttons-save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n I add a Javascript snippet to the webstats javascript\n   Given patterns are loaded\n   Input Text  name=form.widgets.webstats_js  <script id="webstats_snippet"></script>\n+  Set Focus To Element  css=#form-buttons-save\n+  Wait Until Element Is Visible  css=#form-buttons-save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \ndiff --git a/Products/CMFPlone/tests/robot/test_controlpanel_social.robot b/Products/CMFPlone/tests/robot/test_controlpanel_social.robot\nindex 233a36d829..70f106d2e0 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_social.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_social.robot\n@@ -45,6 +45,8 @@ the social control panel\n I disable social\n   UnSelect Checkbox  form.widgets.share_social_data:list\n   Sleep  2\n+  Set Focus To Element  css=#form-buttons-save\n+  Wait Until Element Is Visible  css=#form-buttons-save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n@@ -53,6 +55,8 @@ I provide social settings\n   Input Text  name=form.widgets.facebook_app_id  123456\n   Input Text  name=form.widgets.facebook_username  plonecms\n   Sleep  2\n+  Set Focus To Element  css=#form-buttons-save\n+  Wait Until Element Is Visible  css=#form-buttons-save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \ndiff --git a/Products/CMFPlone/tests/robot/test_edit_user_schema.robot b/Products/CMFPlone/tests/robot/test_edit_user_schema.robot\nindex 6fa463c2d7..bbb8e87b4f 100644\n--- a/Products/CMFPlone/tests/robot/test_edit_user_schema.robot\n+++ b/Products/CMFPlone/tests/robot/test_edit_user_schema.robot\n@@ -93,58 +93,52 @@ site registration enabled\n I add a new text field to the member fields\n   Go to  ${PLONE_URL}/@@member-fields\n   Wait until page contains element  css=#add-field\n-  Click Button  Add new field\xe2\x80\xa6\n+  Click Link  Add new field\xe2\x80\xa6\n   Wait Until Element Is visible  css=#add-field-form #form-widgets-title\n   Input Text  css=#add-field-form #form-widgets-title  Test Field\n   Press Key  css=#add-field-form #form-widgets-title  \\\\09\n   Select From List By Label  css=#form-widgets-factory  Text line (String)\n   Click button  css=.pattern-modal-buttons button#form-buttons-add\n-  # XXX: This is really really bad! We need a UI notification like:\n-  # Wait until page contains  Field created.\n-  Sleep  1\n+  Wait until page contains  Field added successfully.\n+\n+I Open the test_field Settings\n+  Go to  ${PLONE_URL}/@@member-fields\n+  Wait until page contains element  css=div[data-field_id=\'test_field\']\n+  Set Focus To Element  css=div[data-field_id=\'test_field\'] a.fieldSettings\n+  Wait Until Keyword Succeeds  3  100ms  Click link  css=div[data-field_id=\'test_field\'] a.fieldSettings\n \n I add a new required text field to the member fields\n   Go to  ${PLONE_URL}/@@member-fields\n   Wait until page contains element  css=#add-field\n-  Click Button  Add new field\xe2\x80\xa6\n+  Click Link  Add new field\xe2\x80\xa6\n   Wait Until Element Is visible  css=#add-field-form #form-widgets-title\n   Input Text  css=#add-field-form #form-widgets-title  Test Field\n   Press Key  css=#add-field-form #form-widgets-title  \\\\09\n   Select From List By Label  css=#form-widgets-factory  Text line (String)\n   Select Checkbox  form.widgets.required:list\n   Click button  css=.pattern-modal-buttons button#form-buttons-add\n-  # XXX: This is really really bad! We need a UI notification like:\n-  # Wait until page contains  Field created.\n-  Sleep  1\n+  Wait until page contains  Field added successfully.\n \n choose to show the field on registration\n-  Go to  ${PLONE_URL}/@@member-fields\n-  Wait until page contains element  css=div[data-field_id=\'test_field\']\n-  Click link  css=div[data-field_id=\'test_field\'] a.fieldSettings\n+  I Open the test_field Settings\n   Wait Until Element Is visible  form.widgets.IUserFormSelection.forms:list\n   Select Checkbox  css=#form-widgets-IUserFormSelection-forms-0\n   Click button  css=.pattern-modal-buttons button#form-buttons-save\n-  # XXX: This is really really bad! We need a UI notification like:\n-  # Wait until page contains  Field created.\n-  Sleep  1\n+  Wait until page contains  Data successfully updated.\n \n choose to show the field in the user profile\n-  Go to  ${PLONE_URL}/@@member-fields\n-  Wait until page contains element  css=div[data-field_id=\'test_field\']\n-  Click link  css=div[data-field_id=\'test_field\'] a.fieldSettings\n+  I Open the test_field Settings\n   Wait Until Element Is visible  form.widgets.IUserFormSelection.forms:list\n   Select Checkbox  css=#form-widgets-IUserFormSelection-forms-1\n   Click button  css=.pattern-modal-buttons button#form-buttons-save\n-  # XXX: This is really really bad! We need a UI notification like:\n-  # Wait until page contains  Field created.\n-  Sleep  1\n+  Wait until page contains  Data successfully updated.\n \n I move the new field to the top\n   # XXX: Drag and drop is not working!!!\n   Drag And Drop  xpath=//div[@data-field_id="test_field"]//span[contains(@class, "draghandle")]  xpath=//div[@data-field_id="home_page"]\n \n add a min/max constraint to the field\n-  Click Link  xpath=//div[@data-field_id=\'test_field\']//a[contains(@class, \'fieldSettings\')]\n+  I Open the test_field Settings\n   Wait until page contains element  form.widgets.min_length\n   Input Text  form.widgets.min_length  4\n   Input Text  form.widgets.max_length  6\n@@ -169,14 +163,15 @@ a logged-in user will see the field in the user profile\n \n a logged-in user will see the required field in the user profile\n   a logged-in user will see the field in the user profile\n-  XPath Should Match X Times  //div[@id=\'formfield-form-widgets-test_field\']//span[contains(@class, \'required\')]  1  message=test_field should be required\n+  Page Should Contain Element  //div[@id=\'formfield-form-widgets-test_field\']//span[contains(@class, \'required\')]  limit=1  message=test_field should be required\n \n a logged-in user will see the field on top of the user profile\n   a logged-in user will see the field in the user profile\n-  XPath Should Match X Times  //form[@id=\'form\']/div[1]//input[@id=\'form-widgets-test_field\']  1  message=test_field should be on top\n+  Page Should Contain Element  //form[@id=\'form\']/div[1]//input[@id=\'form-widgets-test_field\']  limit=1  message=test_field should be on top\n \n a logged-in user will see a field with min/max constraints\n   a logged-in user will see the field in the user profile\n+  Input Text  form.widgets.email  test@plone.org\n   Input Text  form.widgets.test_field  1\n   Click Button  Save\n   Wait until page contains  There were some errors.\ndiff --git a/Products/CMFPlone/tests/robot/test_linkintegrity.robot b/Products/CMFPlone/tests/robot/test_linkintegrity.robot\nindex 03d386a767..bf2b03adcf 100644\n--- a/Products/CMFPlone/tests/robot/test_linkintegrity.robot\n+++ b/Products/CMFPlone/tests/robot/test_linkintegrity.robot\n@@ -69,23 +69,23 @@ a page to edit\n \n a link in rich text\n   Go To  ${PLONE_URL}/bar/edit\n-  Wait until element is visible  css=.mce-edit-area iframe\n-  Select Frame  css=.mce-edit-area iframe\n+  Wait until element is visible  css=.tox-edit-area iframe\n+  Select Frame  css=.tox-edit-area iframe\n   Input text  css=.mce-content-body  foo\n   Execute Javascript    function selectElementContents(el) {var range = document.createRange(); range.selectNodeContents(el); var sel = window.getSelection(); sel.removeAllRanges(); sel.addRange(range);} var el = document.getElementById("tinymce"); selectElementContents(el);\n   UnSelect Frame\n-  Click Button  css=div[aria-label="Insert/edit link"] button\n+  Click Button  css=button[aria-label="Insert/edit link"]\n \n   Given patterns are loaded\n   Wait until element is visible  css=.pat-relateditems .select2-input.select2-default\n   Click Element  css=.pat-relateditems .select2-input.select2-default\n-  Wait until element is visible  css=.pattern-relateditems-result.one-level-up a.pattern-relateditems-result-browse\n-  Click Element  css=.pattern-relateditems-result.one-level-up a.pattern-relateditems-result-browse\n+  Wait until element is visible  css=.pat-relateditems-result.one-level-up a.pat-relateditems-result-browse\n+  Click Element  css=.pat-relateditems-result.one-level-up a.pat-relateditems-result-browse\n   Wait until element is visible  xpath=(//span[contains(., \'Foo\')])\n   Click Element  xpath=(//span[contains(., \'Foo\')])\n   Wait until page contains  Foo\n \n-  Click Button  css=.plone-modal-footer .plone-btn-primary\n+  Click Button  css=.modal-footer .btn-primary\n   Click Button  css=#form-buttons-save\n \n \n@@ -142,10 +142,10 @@ remove link to page\n   Go To  ${PLONE_URL}/bar\n   Wait until element is visible  css=#contentview-edit a\n   Click Link  css=#contentview-edit a\n-  Wait until element is visible  css=.mce-edit-area iframe\n-  Select Frame  css=.mce-edit-area iframe\n+  Wait until element is visible  css=.tox-edit-area iframe\n+  Select Frame  css=.tox-edit-area iframe\n   Input text  css=.mce-content-body  foo\n   Execute Javascript    function selectElementContents(el) {var range = document.createRange(); range.selectNodeContents(el); var sel = window.getSelection(); sel.removeAllRanges(); sel.addRange(range);} var el = document.getElementById("tinymce"); selectElementContents(el);\n   UnSelect Frame\n-  Click Button  css=div[aria-label="Remove link"] button\n+  Click Button  css=button[aria-label="Remove link"]\n   Click Button  css=#form-buttons-save\ndiff --git a/Products/CMFPlone/tests/robot/test_overlays.robot b/Products/CMFPlone/tests/robot/test_overlays.robot\nindex bebb048492..deee0bdd98 100644\n--- a/Products/CMFPlone/tests/robot/test_overlays.robot\n+++ b/Products/CMFPlone/tests/robot/test_overlays.robot\n@@ -180,7 +180,7 @@ Scenario: New user overlay remains on wrong data\n       And I trigger the add a new user action\n      When I send the register form\n      Then overlay should remain open\n-      And overlay shows an error\n+      And overlay requires to compile a field\n \n Scenario: New user overlay closes on valid data\n     Given a logged-in site administrator\n@@ -229,20 +229,20 @@ I click the \'${link_name}\' link\n the \'${link_name}\' overlay\n     Wait until page contains  ${link_name}\n     Click Link  xpath=//a[descendant-or-self::*[contains(text(), \'${link_name}\')]]\n-    Wait until keyword succeeds  30  1  Page should contain element  css=div.plone-modal-dialog\n+    Wait until keyword succeeds  30  1  Page should contain element  css=div.modal-dialog\n \n overlay should open\n-    Wait until keyword succeeds  30  1  Element Should Be Visible  css=div.plone-modal-dialog\n+    Wait until keyword succeeds  30  1  Element Should Be Visible  css=div.modal-dialog\n \n overlay should remain open\n-    Wait until page contains element  css=div.plone-modal-wrapper\n-    Wait until element is visible  css=div.plone-modal-wrapper\n+    Wait until page contains element  css=div.modal-wrapper\n+    Wait until element is visible  css=div.modal-wrapper\n \n I close the overlay\n-    Click Element  css=div.plone-modal-header a.plone-modal-close\n+    Click Element  css=div.modal-header button.modal-close\n \n overlay should close\n-    Wait until keyword succeeds  40  1  Page should not contain element  css=div.plone-modal-dialog\n+    Wait until keyword succeeds  40  1  Page should not contain element  css=div.modal-dialog\n \n login overlay shows an error\n     Wait Until Page Contains  Error\n@@ -250,20 +250,23 @@ login overlay shows an error\n overlay shows an error\n     Wait Until Page Contains  There were errors\n \n+overlay requires to compile a field\n+    Wait Until Page Contains  Required input is missing\n+\n I \'${action}\' the form\n-    Wait until keyword succeeds  30  1  Element Should Be Visible  css=div.plone-modal-footer button[name="form.buttons.${action}"]\n-    Click Element  css=div.plone-modal-footer button[name="form.buttons.${action}"]\n+    Wait until keyword succeeds  30  1  Element Should Be Visible  css=div.modal-footer button[name="form.buttons.${action}"]\n+    Click Element  css=div.modal-footer button[name="form.buttons.${action}"]\n \n I enter wrong credentials\n     Input text  __ac_name  wrong\n     Input text  __ac_password  user\n-    Click Button  css=div.plone-modal-footer button\n+    Click Button  css=div.modal-footer button\n \n I enter valid credentials\n     Wait until page contains element  name=__ac_name\n     Input text for sure  __ac_name  ${SITE_OWNER_NAME}\n     Input text for sure  __ac_password  ${SITE_OWNER_PASSWORD}\n-    Click Button  css=div.plone-modal-footer button\n+    Click Button  css=div.modal-footer button\n \n I enter valid user data\n     Wait until page contains element  name=form.widgets.password_ctl\n@@ -278,8 +281,8 @@ I enter valid register user data\n     Input text  form.widgets.email          my@email.eu\n \n I send the register form\n-    Wait until page contains element  css=div.plone-modal-footer #form-buttons-register\n-    Click Element  css=div.plone-modal-footer #form-buttons-register\n+    Wait until page contains element  css=div.modal-footer #form-buttons-register\n+    Click Element  css=div.modal-footer #form-buttons-register\n \n I trigger the add a new user action\n     Click Element  id=add-user\n@@ -304,7 +307,7 @@ a document as the default view of the test folder\n     Wait until element is visible  id=contextSetDefaultPage\n     Click link  id=contextSetDefaultPage\n     Click element  id=doc\n-    Click element  css=div.plone-modal-footer button[name="form.buttons.Save"]\n+    Click element  css=div.modal-footer button[name="form.buttons.Save"]\n \n I change the default content view of the test folder\n     Go to  ${PLONE_URL}/${TEST_FOLDER}\n@@ -320,11 +323,11 @@ I trigger the \'${action}\' action menu item of the test folder\n     Click link  xpath=//li[@id=\'plone-contentmenu-actions\']/a\n     Wait until element is visible  id=plone-contentmenu-actions-${action}\n     Click link  id=plone-contentmenu-actions-${action}\n-    Wait until page contains Element  css=div.plone-modal-dialog\n+    Wait until page contains Element  css=div.modal-dialog\n \n I confirm deletion of the content\n     # Note: The \'delete\' button has no standard z3c.form name attribute\n-    Wait until keyword succeeds  2  2  Click Element  css=div.plone-modal-footer button#form-buttons-Delete\n+    Wait until keyword succeeds  2  2  Click Element  css=div.modal-footer button#form-buttons-Delete\n \n modals loaded\n-    Wait For Condition  return window.jQuery(\'.plone-modal-wrapper\').size() > 0\n+    Wait For Condition  return window.jQuery(\'.modal-wrapper\').size() > 0\ndiff --git a/Products/CMFPlone/tests/robot/test_querystring.robot b/Products/CMFPlone/tests/robot/test_querystring.robot\nindex fb98236c81..ef22e81206 100644\n--- a/Products/CMFPlone/tests/robot/test_querystring.robot\n+++ b/Products/CMFPlone/tests/robot/test_querystring.robot\n@@ -134,10 +134,10 @@ Scenario Event end date query\n     and the querystring pattern\n     # Before date\n     When I activate the default operator in the criteria Event end date\n-    and Execute Javascript  $(\'.querystring-criteria-value .pattern-pickadate-date-wrapper > input[type="text"]\').pickadate(\'picker\').set(\'select\', new Date(2018, 7, 1))\n+    and Execute Javascript  $(\'.querystring-criteria-value input[type="date"]\').val(\'2018-07-01\')\n     Then we do not expect any hits\n \n-    # When Execute Javascript  $(\'.querystring-criteria-value .pattern-pickadate-date-wrapper > input[type="text"]\').pickadate(\'picker\').set(\'select\', new Date(2018, 7, 6))\n+    # When Execute Javascript  $(\'.querystring-criteria-value input[type="date"]\').val(\'2018-07-06\')\n \n     # !!! BUG in plone.app.robotframework?\n     # File "~/.buildout/shared-eggs/plone.app.event-3.2.1-py3.6.egg/plone/app/event/recurrence.py", line 77, in occurrences\n@@ -245,9 +245,9 @@ a bunch of folders\n \n a bunch of events\n     ${F1}=  a bunch of folders\n-    Create content  type=Event  title=Event1  start=2018-08-01 15:00  end=2018-08-01 17:00  container=${F1}\n-    Create content  type=Event  title=Event2  start=2018-08-05 16:00  end=2018-08-07 11:00  container=${F1}\n-    Create content  type=Event  title=Event3  start=2018-08-05 16:30  open_end-empty-marker=1  container=${F1}\n+    Create content  type=Event  title=Event1  start=2018-08-01T15:00  end=2018-08-01T17:00  container=${F1}\n+    Create content  type=Event  title=Event2  start=2018-08-05T16:00  end=2018-08-07T11:00  container=${F1}\n+    Create content  type=Event  title=Event3  start=2018-08-05T16:30  open_end-empty-marker=1  container=${F1}\n     Create content  type=Event  title=Event4  start=2018-08-06  end=2018-08-06  whole_day-empty-marker=1  container=${F1}\n \n I activate the default operator in the criteria ${CRITERIA}\n@@ -296,7 +296,7 @@ I search in ${NAME} subfolder in the related items widget\n     mark results\n     Click Element  css=ul.select2-choices\n     Wait Until Page Contains  ${NAME}\n-    Click Element  //a[contains(concat(\' \', normalize-space(@class), \' \'), \' pattern-relateditems-result-select \')]//span[contains(text(),\'${NAME}\')]\n+    Click Element  //a[contains(concat(\' \', normalize-space(@class), \' \'), \' pat-relateditems-result-select \')]//span[contains(text(),\'${NAME}\')]\n \n I expect to be in Advanced mode\n     open the select box titled operator\ndiff --git a/Products/CMFPlone/tests/robot/test_thememapper.robot b/Products/CMFPlone/tests/robot/test_thememapper.robot\ndeleted file mode 100644\nindex 4701ca2e07..0000000000\n--- a/Products/CMFPlone/tests/robot/test_thememapper.robot\n+++ /dev/null\n@@ -1,118 +0,0 @@\n-*** Settings *****************************************************************\n-\n-Resource  plone/app/robotframework/keywords.robot\n-Resource  plone/app/robotframework/saucelabs.robot\n-Resource  plone/app/robotframework/selenium.robot\n-\n-Library  Remote  ${PLONE_URL}/RobotRemote\n-\n-Resource  keywords.robot\n-\n-Test Setup  Run keywords  Plone Test Setup\n-Test Teardown  Run keywords  Plone Test Teardown\n-\n-*** Variables ***\n-\n-${LESS}     @color: blue; body { background: @color; }\n-${LESSFILE}     test.less\n-${CSSFILE}      output.less\n-${CSS}      background: blue;\n-\n-*** Test Cases **************************************************************\n-\n-Scenario: Thememapper basic functionality\n-    Given a logged-in site administrator\n-    and a new theme to edit\n-    When I open rules.xml\n-    Then I expect 2 tabs to be open\n-    and I expect a tab labeled "rules.xml" to be open\n-\n-    When I close the tab labeled "rules.xml"\n-    Then I expect 1 tabs to be open\n-\n-    When I create a new file called "${LESSFILE}"\n-    Then I expect 2 tabs to be open\n-    and I expect a tab labeled "${LESSFILE}" to be open\n-\n-    When I type some code into the editor\n-    and I save the current document\n-    I expect the document ${LESSFILE} to contain ${LESS}\n-\n-Scenario: Thememapper LESS builder\n-    Given a logged-in site administrator\n-    and a new theme to edit\n-    and I create a new file called "${LESSFILE}"\n-    and I type some code into the editor\n-    and I save the current document\n-    When I use the LESS builder on "${LESSFILE}"\n-    Then I expect the compiled CSS to contain "${CSS}"\n-\n-*** Keywords ****************************************************************\n-\n-a new theme to edit\n-    Go to  ${PLONE_URL}/theming-controlpanel\n-    Wait until page contains  Theme settings\n-    Click Element   jquery=a[href="#modal-copy-barceloneta"]\n-    Wait Until Element Is Visible   jquery=.plone-modal-body input[type="text"]\n-    Input Text  jquery=.plone-modal-body input[type="text"]   Test\n-    Click Element   jquery=.plone-modal-body input[type="submit"]\n-    Wait Until Element Is Visible   css=.nav-and-editor\n-    Page Should Contain     backend.xml\n-\n-I open ${NAME}\n-    Click Element   jquery=.jqtree-element:contains("${NAME}")\n-\n-I expect ${NUM} tabs to be open\n-    Sleep  1\n-    ${hits}=    Execute Javascript  return window.jQuery(\'.navbar-nav li\').length.toString();\n-    Should Be Equal     ${hits}     ${NUM}\n-\n-I expect a tab labeled "${LABEL}" to be open\n-    Wait Until Element Is Visible   jquery=.navbar-nav li:contains("${LABEL}")\n-\n-I close the tab labeled "${LABEL}"\n-    Click Element   jquery=.navbar-nav li:contains("${LABEL}") .remove\n-\n-I create a new file called "${NAME}"\n-    Click Element   css=#btngroup-main #btngroup-dropdown-file_menu #dropdown-menu-\n-    Click Element   css=#alink-addnew\n-    Input Text  jquery=.addnew input[type="text"]   ${NAME}\n-    Click Element   jquery=.addnew .btn-primary\n-    Sleep   1\n-\n-I type some code into the editor\n-    Click Element   css=.ace_content\n-    ${ace_id}=     Execute Javascript   return window.jQuery(\'.ace_editor\').attr(\'id\');\n-    Execute Javascript      ace.edit(${ace_id}).setValue("${LESS}");\n-\n-I expect the editors value to be "${MESSAGE}"\n-    ${ace_id}=      Execute Javascript  return window.jQuery(\'.ace_editor\').attr(\'id\');\n-    ${value}=   Execute Javascript      return ace.edit(\'${ace_id}\').getValue();\n-    Should Be Equal     ${value}    ${MESSAGE}\n-\n-I expect the editors value to contain "${MESSAGE}"\n-    ${ace_id}=      Execute Javascript  return window.jQuery(\'.ace_editor\').attr(\'id\');\n-    ${value}=   Execute Javascript      return ace.edit(\'${ace_id}\').getValue();\n-    Should Contain  ${value}    ${MESSAGE}\n-\n-I save the current document\n-    Click Element   css=#btn-save\n-    Sleep   1\n-\n-I expect the document ${NAME} to contain ${MESSAGE}\n-    Go To   ${PLONE_URL}/++theme++test/@@theming-controlpanel-mapper\n-    Wait Until Element Is Visible    css=.ace_editor\n-    I open ${NAME}\n-    I expect the editors value to be "${MESSAGE}"\n-\n-I use the LESS builder on "${file}"\n-    I open ${file}\n-    Click Element   css=#btngroup-mapper #btngroup-dropdown-file_menu #dropdown-menu-\n-    Click Element   css=#alink-buildless\n-    Input Text      css=#lessFileName   ${CSSFILE}\n-    Click element   css=#compileBtn\n-    Sleep   1\n-\n-I expect the compiled CSS to contain "${TEXT}"\n-    I open ${CSSFILE}\n-    I expect the editors value to contain "${TEXT}"\ndiff --git a/Products/CMFPlone/tests/robot/test_tinymce.robot b/Products/CMFPlone/tests/robot/test_tinymce.robot\nindex 2f39805371..8f56da5823 100644\n--- a/Products/CMFPlone/tests/robot/test_tinymce.robot\n+++ b/Products/CMFPlone/tests/robot/test_tinymce.robot\n@@ -28,13 +28,10 @@ Scenario: A page is opened to edit in TinyMCE\n       and insert link\n       and insert image\n \n-    Click Button  css=#form-buttons-save\n-    # in FF 34 this fails. in FF46 or chrome this is not a problem at all.\n-    # remove "Run Keyword And Ignore Error" when https://github.com/plone/jenkins.plone.org/issues/179\n-    # was solved\n-    Run Keyword And Ignore Error  Element Should Be Visible  css=#parent-fieldname-text img[alt="SomeAlt"]\n-    Run Keyword And Ignore Error  Element Should Be Visible  css=#parent-fieldname-text img[title="SomeTitle"]\n-    Element Should Be Visible  css=#parent-fieldname-text a\n+    Set Focus To Element  css=#form-buttons-save\n+    Wait Until Element Is Visible  css=#form-buttons-save\n+    Click Button  Save\n+    Wait until page contains  Changes saved\n \n \n *** Keywords *****************************************************************\n@@ -50,34 +47,33 @@ an uploaded image\n     Create content  type=Image  title=an-image\n \n text inserted into wysiwyg\n-    Select Frame  css=.mce-edit-area iframe\n+    Wait Until Element Is Visible  css=.tox-edit-area iframe\n+    Select Frame  css=.tox-edit-area iframe\n     Input text  css=.mce-content-body  foobar\n     UnSelect Frame\n \n insert link\n-    Select Frame  css=.mce-edit-area iframe\n+    Select Frame  css=.tox-edit-area iframe\n     Execute Javascript    function selectElementContents(el) {var range = document.createRange(); range.selectNodeContents(el); var sel = window.getSelection(); sel.removeAllRanges(); sel.addRange(range);} var el = document.getElementById("tinymce"); selectElementContents(el);\n     UnSelect Frame\n-    Click Button  css=div[aria-label="Insert/edit link"] button\n-    Click Button  css=.pattern-relateditems-container button.favorites\n-    Click Link  css=.pattern-relateditems-container .favorites a.fav[href=\'/\']\n-    Wait Until Element Is Visible  css=.pattern-relateditems-result-select.selectable\n-    Click Link  css=.pattern-relateditems-result-select.selectable\n-    Click Button  css=.plone-modal-footer .plone-btn-primary\n-    Select Frame  css=.mce-edit-area iframe\n+    Click Button  css=button[aria-label="Insert/edit link"]\n+    Click Button  css=.pat-relateditems-container button.favorites\n+    Click Link  css=.pat-relateditems-container .favorites a.fav[href=\'/\']\n+    Wait Until Element Is Visible  css=.pat-relateditems-result-select.selectable\n+    Click Link  css=.pat-relateditems-result-select.selectable\n+    Click Button  css=.modal-footer input[name="insert"]\n+    Select Frame  css=.tox-edit-area iframe\n     Execute Javascript  window.getSelection().removeAllRanges()\n     UnSelect Frame\n-    Wait Until Element Is Not Visible  css=.plone-modal-footer .plone-btn-primary\n+    Wait Until Element Is Not Visible  css=.modal-footer input[name="insert"]\n \n insert image\n-    Click Button  css=div[aria-label="Insert/edit image"] button\n-    Click Button  css=.pattern-relateditems-container button.favorites\n-    Click Link  css=.pattern-relateditems-container .favorites a.fav[href=\'/\']\n-    Wait Until Element Is Visible  css=.pattern-relateditems-result-select.selectable\n-    Click Link  css=.pattern-relateditems-result-select.selectable\n-    Input Text  css=.plone-modal-body [name="title"]  SomeTitle\n-    Input Text  css=.plone-modal-body [name="alt"]  SomeAlt\n-    Click Button  css=.plone-modal-footer .plone-btn-primary[name=\'insert\']\n-    # in FF 34 we need to click twice. in FF46 or chrome this is not a problem at all.\n-    Run Keyword And Ignore Error  Click Button  css=.plone-modal-footer .plone-btn-primary[name=\'insert\']\n-    Wait Until Element Is Not Visible  css=.plone-modal-footer .plone-btn-primary[name=\'insert\']\n+    Click Button  css=button[aria-label="Insert/edit image"]\n+    Click Button  css=.pat-relateditems-container button.favorites\n+    Click Link  css=.pat-relateditems-container .favorites a.fav[href=\'/\']\n+    Wait Until Element Is Visible  css=.pat-relateditems-result-select.selectable\n+    Click Link  css=.pat-relateditems-result-select.selectable\n+    Input Text  css=.modal-body [name="title"]  SomeTitle\n+    Input Text  css=.modal-body [name="alt"]  SomeAlt\n+    Click Button  css=.modal-footer input[name="insert"]\n+    Wait Until Element Is Not Visible  css=.modal-footer input[name="insert"]\ndiff --git a/Products/CMFPlone/tests/testCSSandJSRegistry.py b/Products/CMFPlone/tests/testCSSandJSRegistry.py\ndeleted file mode 100644\nindex cf8ee57a78..0000000000\n--- a/Products/CMFPlone/tests/testCSSandJSRegistry.py\n+++ /dev/null\n@@ -1,73 +0,0 @@\n-from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import IBundleRegistry\n-from Products.CMFPlone.interfaces import IResourceRegistry\n-from Products.CMFPlone.tests.PloneTestCase import PloneTestCase\n-from zope.component import getUtility\n-\n-\n-class TestCSSRegistry(PloneTestCase):\n-\n-    def afterSetUp(self):\n-        self.registry = getUtility(IRegistry)\n-\n-    def testDefaultCssIsInstalled(self):\n-        installedResources = self.registry.collectionOfInterface(\n-            IResourceRegistry,\n-            prefix=\'plone.resources\'\n-        )\n-        expected = [\n-            \'++plone++static/plone.less\',\n-        ]\n-        css_files = [y for x in installedResources.values() for y in x.css]\n-        for e in expected:\n-            self.assertTrue(e in css_files, e)\n-\n-    def testBundleIsInstalled(self):\n-        installedBundles = self.registry.collectionOfInterface(\n-            IBundleRegistry, prefix=\'plone.bundles\')\n-        expected = [\n-            \'plone\',\n-            \'plone-legacy\'\n-        ]\n-        for e in expected:\n-            self.assertTrue(e in installedBundles.keys(), e)\n-\n-    # def testRTLShouldHaveHigherPrecedence(self):\n-    #     installedStylesheetIds = self.tool.getResourceIds()\n-    #     indexRTLStylesheet = self.tool.getResourcePosition(\'RTL.css\')\n-    #     comes_before = [\'++resource++plone.css\']\n-    #     for cb in comes_before:\n-    #         self.assertTrue(\n-    #             cb in installedStylesheetIds[:indexRTLStylesheet],\n-    #             cb\n-    #         )\n-\n-    def testJSIsInsertedInPage(self):\n-        self.registry[\'plone.resources.development\'] = True\n-        self.registry[\'plone.bundles/plone.develop_css\'] = True\n-        page = self.portal.view()\n-        self.assertTrue(\'++plone++static/plone.less\' in page)\n-\n-\n-class TestJSRegistry(PloneTestCase):\n-\n-    def afterSetUp(self):\n-        self.registry = getUtility(IRegistry)\n-\n-    def testDefaultJSIsInstalled(self):\n-        installedResources = self.registry.collectionOfInterface(\n-            IResourceRegistry,\n-            prefix=\'plone.resources\'\n-        )\n-        expected = [\n-            \'++resource++plone.js\',\n-        ]\n-        js_files = {x.js for x in installedResources.values()}\n-        for e in expected:\n-            self.assertTrue(e in js_files, e)\n-\n-    def testJSIsInsertedInPage(self):\n-        self.registry[\'plone.resources.development\'] = True\n-        self.registry[\'plone.bundles/plone.develop_javascript\'] = True\n-        page = self.portal.view()\n-        self.assertTrue(\'++resource++plone.js\' in page)\ndiff --git a/Products/CMFPlone/tests/testResourceRegistries.py b/Products/CMFPlone/tests/testResourceRegistries.py\nindex d17106da82..5c26f0fca7 100644\n--- a/Products/CMFPlone/tests/testResourceRegistries.py\n+++ b/Products/CMFPlone/tests/testResourceRegistries.py\n@@ -1,609 +1,249 @@\n from plone.app.testing import logout\n+from plone.registry import field as regfield\n+from plone.registry import Record\n from plone.registry.interfaces import IRegistry\n-from plone.resource.interfaces import IResourceDirectory\n-from plone.subrequest import subrequest\n-from Products.CMFPlone.controlpanel.browser.resourceregistry import OverrideFolderManager  # noqa\n-from Products.CMFPlone.controlpanel.browser.resourceregistry import ResourceRegistryControlPanelView  # noqa\n from Products.CMFPlone.interfaces import IBundleRegistry\n-from Products.CMFPlone.interfaces import IResourceRegistry\n-from Products.CMFPlone.interfaces.resources import OVERRIDE_RESOURCE_DIRECTORY_NAME  # noqa\n from Products.CMFPlone.resources import add_bundle_on_request\n-from Products.CMFPlone.resources import add_resource_on_request\n from Products.CMFPlone.resources import remove_bundle_on_request\n-from Products.CMFPlone.resources.browser.cook import cookWhenChangingSettings\n-from Products.CMFPlone.resources.browser.scripts import ScriptsView\n-from Products.CMFPlone.resources.browser.styles import StylesView\n-from Products.CMFPlone.resources.bundle import Bundle\n-from Products.CMFPlone.resources.exportimport.resourceregistry import ResourceRegistryNodeAdapter  # noqa\n+from Products.CMFPlone.resources.browser.resource import ScriptsView\n+from Products.CMFPlone.resources.browser.resource import StylesView\n from Products.CMFPlone.tests import PloneTestCase\n-from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from zope.component import getUtility\n \n-import json\n-from unittest import mock\n-import os\n \n-\n-class TestResourceRegistries(PloneTestCase.PloneTestCase):\n-\n-    def test_cooking_resources(self):\n-        registry = getUtility(IRegistry)\n-        bundles = registry.collectionOfInterface(IBundleRegistry,\n-                                                 prefix="plone.bundles")\n-        bundle = bundles.add(\'foobar\')\n-        bundle.jscompilation = \'++plone++static/foobar-compiled.js\'\n-        bundle.csscompilation = \'++plone++static/foobar-compiled.css\'\n-\n-        resources = registry.collectionOfInterface(IResourceRegistry,\n-                                                   prefix="plone.resources")\n-        resource = resources.add(\'foobar\')\n-\n-        resource.js = \'++plone++static/foobar.js\'\n-        resource.css = [\'++plone++static/foobar.css\']\n-        bundle.resources = [\'foobar\']\n-\n-        persistent_directory = getUtility(\n-            IResourceDirectory, name="persistent")\n-        if OVERRIDE_RESOURCE_DIRECTORY_NAME not in persistent_directory:\n-            persistent_directory.makeDirectory(\n-                OVERRIDE_RESOURCE_DIRECTORY_NAME)\n-        container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n-        container.makeDirectory(\'static\')\n-        directory = container[\'static\']\n-        directory.writeFile(\'foobar.js\', \'alert("Hi!");\\n\\nalert("Ho!");\')\n-        directory.writeFile(\'foobar.css\', \'body {\\ncolor: blue;\\n}\')\n-\n-        cookWhenChangingSettings(self.portal, bundle)\n-\n-        resp_js = subrequest(\n-            \'{}/++plone++static/foobar-compiled.js\'.format(\n-                self.portal.absolute_url()\n-            )\n-        )\n-        self.assertIn(b\'alert("Hi!");alert("Ho!");\', resp_js.getBody())\n-\n-        resp_css = subrequest(\n-            \'{}/++plone++static/foobar-compiled.css\'.format(\n-                self.portal.absolute_url()\n-            )\n-        )\n-        self.assertIn(b\'body{color:blue}\', resp_css.getBody())\n-\n-    def test_dont_minify_already_minified(self):\n-        registry = getUtility(IRegistry)\n-        bundles = registry.collectionOfInterface(IBundleRegistry,\n-                                                 prefix="plone.bundles")\n-        bundle = bundles.add(\'foobar\')\n-        bundle.jscompilation = \'++plone++static/foobar-compiled.js\'\n-        bundle.csscompilation = \'++plone++static/foobar-compiled.css\'\n-\n-        resources = registry.collectionOfInterface(IResourceRegistry,\n-                                                   prefix="plone.resources")\n-        resource = resources.add(\'foobar\')\n-\n-        resource.js = \'++plone++static/foobar.min.js\'\n-        resource.css = [\'++plone++static/foobar.min.css\']\n-        bundle.resources = [\'foobar\']\n-\n-        persistent_directory = getUtility(\n-            IResourceDirectory, name="persistent")\n-        if OVERRIDE_RESOURCE_DIRECTORY_NAME not in persistent_directory:\n-            persistent_directory.makeDirectory(\n-                OVERRIDE_RESOURCE_DIRECTORY_NAME)\n-        container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n-        container.makeDirectory(\'static\')\n-        directory = container[\'static\']\n-        directory.writeFile(\'foobar.min.js\', b\'alert("Hi!");\\n\\nalert("Ho!");\')\n-        directory.writeFile(\'foobar.min.css\', b\'body {\\ncolor: blue;\\n}\')\n-\n-        cookWhenChangingSettings(self.portal, bundle)\n-\n-        resp_js = subrequest(\n-            \'{}/++plone++static/foobar-compiled.js\'.format(\n-                self.portal.absolute_url()\n-            )\n-        )\n-        self.assertIn(b\'alert("Hi!");\\n\\nalert("Ho!");\', resp_js.getBody())\n-\n-        resp_css = subrequest(\n-            \'{}/++plone++static/foobar-compiled.css\'.format(\n-                self.portal.absolute_url()\n-            )\n-        )\n-        self.assertIn(b\'body {\\ncolor: blue;\\n}\', resp_css.getBody())\n-\n-    def test_cook_only_css(self):\n-        registry = getUtility(IRegistry)\n-        bundles = registry.collectionOfInterface(IBundleRegistry,\n-                                                 prefix="plone.bundles")\n-        bundle = bundles.add(\'foobar\')\n-        bundle.jscompilation = \'\'\n-        bundle.csscompilation = \'++plone++static/foobar-compiled.css\'\n-\n-        resources = registry.collectionOfInterface(IResourceRegistry,\n-                                                   prefix="plone.resources")\n-        resource = resources.add(\'foobar\')\n-\n-        resource.css = [\'++plone++static/foobar.min.css\']\n-        bundle.resources = [\'foobar\']\n-\n-        persistent_directory = getUtility(\n-            IResourceDirectory, name="persistent")\n-        if OVERRIDE_RESOURCE_DIRECTORY_NAME not in persistent_directory:\n-            persistent_directory.makeDirectory(\n-                OVERRIDE_RESOURCE_DIRECTORY_NAME)\n-        container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n-        container.makeDirectory(\'static\')\n-        directory = container[\'static\']\n-        directory.writeFile(\'foobar.min.css\', \'body {\\ncolor: red;\\n}\')\n-\n-        cookWhenChangingSettings(self.portal, bundle)\n-\n-        resp_css = subrequest(\n-            \'{}/++plone++static/foobar-compiled.css\'.format(\n-                self.portal.absolute_url()\n-            )\n-        )\n-        self.assertIn(b\'body {\\ncolor: red;\\n}\', resp_css.getBody())\n-\n-    def test_cooking_missing(self):\n-        registry = getUtility(IRegistry)\n-        bundles = registry.collectionOfInterface(IBundleRegistry,\n-                                                 prefix="plone.bundles")\n-        bundle = bundles.add(\'foobar\')\n-        bundle.jscompilation = \'++plone++static/foobar-compiled.js\'\n-        bundle.csscompilation = \'++plone++static/foobar-compiled.css\'\n-\n-        resources = registry.collectionOfInterface(IResourceRegistry,\n-                                                   prefix="plone.resources")\n-        resource = resources.add(\'foobar\')\n-\n-        resource.js = \'++plone++static/foobar.js\'\n-        bundle.resources = [\'foobar\']\n-\n-        bundle = Bundle(bundle)\n-\n-        cookWhenChangingSettings(self.portal, bundle)\n-        resp = subrequest(\n-            \'{}/++plone++static/foobar-compiled.js\'.format(\n-                self.portal.absolute_url()\n-            )\n-        )\n-        self.assertIn(b\'Could not find resource\', resp.getBody())\n-\n-    def test_cooking_missing_browserresource(self):\n-        registry = getUtility(IRegistry)\n-        registry[\'plone.resources.development\'] = True\n-        bundles = registry.collectionOfInterface(IBundleRegistry,\n-                                                 prefix="plone.bundles")\n-        bundle = bundles.add(\'barbar\')\n-        bundle.jscompilation = \'++resource++notfound/barbar-compiled.js\'\n-        bundle.csscompilation = \'++resource++notfound/barbar-compiled.css\'\n-        bundle.compile = False\n-        bundle.merge_with = \'default\'\n-\n-        bundle = Bundle(bundle)\n-\n-        # cookWhenChangingSettings(self.portal, bundle)\n-        scripts = ScriptsView(\n-            self.layer[\'portal\'],\n-            self.layer[\'request\'],\n-            None\n-        )\n-        scripts.update()\n-        results = scripts.scripts()\n-        # at least have jquery.min.js, config.js, require.js, etc.\n-        self.assertTrue(len(results)>2)\n-\n-    def test_error(self):\n-        registry = getUtility(IRegistry)\n-        bundles = registry.collectionOfInterface(IBundleRegistry,\n-                                                 prefix="plone.bundles")\n-        bundle = bundles.add(\'foobar\')\n-        bundle.jscompilation = \'++plone++static/foobar-compiled.js\'\n-        bundle.csscompilation = \'++plone++static/foobar-compiled.css\'\n-\n-        resources = registry.collectionOfInterface(IResourceRegistry,\n-                                                   prefix="plone.resources")\n-        resource = resources.add(\'foobar\')\n-\n-        resource.js = \'++plone++static/foobar.js\'\n-        bundle.resources = [\'foobar\']\n-\n-        persistent_directory = getUtility(\n-            IResourceDirectory, name="persistent")\n-        if OVERRIDE_RESOURCE_DIRECTORY_NAME not in persistent_directory:\n-            persistent_directory.makeDirectory(\n-                OVERRIDE_RESOURCE_DIRECTORY_NAME)\n-        container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n-        container.makeDirectory(\'static\')\n-        directory = container[\'static\']\n-        directory.writeFile(\'foobar.js\', \'sdlfk ldsf lksdjfl s\')\n-\n-        cookWhenChangingSettings(self.portal, bundle)\n-        resp = subrequest(\n-            \'{}/++plone++static/foobar-compiled.js\'.format(\n-                self.portal.absolute_url()\n-            )\n-        )\n-        self.assertIn(b\'error cooking\', resp.getBody())\n-\n-    def test_bundle_defer_async(self):\n+class TestScriptsViewlet(PloneTestCase.PloneTestCase):\n+    def _make_test_bundle(self):\n         registry = getUtility(IRegistry)\n \n         bundles = registry.collectionOfInterface(\n-            IBundleRegistry,\n-            prefix="plone.bundles"\n+            IBundleRegistry, prefix="plone.bundles"\n         )\n-        bundle = bundles.add(\'foobar\')\n-        bundle.name = \'foobar\'\n-        bundle.jscompilation = \'foobar.js\'\n-        bundle.csscompilation = \'foobar.css\'\n-        bundle.resources = [\'foobar\']\n+        bundle = bundles.add("foobar")\n+        bundle.name = "foobar"\n+        bundle.jscompilation = "http://foo.bar/foobar.js"\n+        bundle.csscompilation = "http://foo.bar/foobar.css"\n+        bundle.resources = ["foobar"]\n+        return bundle\n \n+    def test_bundle_defernot_asyncnot(self):\n+        bundle = self._make_test_bundle()\n         view = ScriptsView(self.app, self.app.REQUEST, None, None)\n-        view.get_cooked_bundles = lambda: [(\'foobar\', bundle)]\n-\n-        import Products.CMFPlone.resources.browser\n-        path = os.path.dirname(Products.CMFPlone.resources.browser.__file__)\n-        view.index = ViewPageTemplateFile(\'scripts.pt\', path)\n         view.update()\n+        rendered = view.render()\n+        self.assertTrue("async=" not in rendered)\n+        self.assertTrue("defer=" not in rendered)\n \n-        self.assertTrue(\'async="async"\' not in view.index(view))\n-        self.assertTrue(\'defer="defer"\' not in view.index(view))\n-\n+    def test_bundle_defernot_async(self):\n+        bundle = self._make_test_bundle()\n         bundle.load_async = True\n         bundle.load_defer = False\n-        self.assertTrue(\'async="async"\' in view.index(view))\n-        self.assertTrue(\'defer="defer"\' not in view.index(view))\n+        view = ScriptsView(self.app, self.app.REQUEST, None, None)\n+        view.update()\n+        rendered = view.render()\n \n+    def test_bundle_defer_asyncnot(self):\n+        bundle = self._make_test_bundle()\n         bundle.load_async = False\n         bundle.load_defer = True\n-        self.assertTrue(\'async="async"\' not in view.index(view))\n-        self.assertTrue(\'defer="defer"\' in view.index(view))\n+        view = ScriptsView(self.app, self.app.REQUEST, None, None)\n+        view.update()\n+        rendered = view.render()\n+        self.assertTrue("async=" not in rendered)\n+        self.assertTrue("defer=" in rendered)\n \n+    def test_bundle_defernot_async(self):\n+        bundle = self._make_test_bundle()\n         bundle.load_async = True\n-        bundle.load_defer = True\n-\n-        self.assertTrue(\'async="async"\' in view.index(view))\n-        self.assertTrue(\'defer="defer"\' in view.index(view))\n-\n-        bundle.load_async = False\n         bundle.load_defer = False\n-\n-        self.assertTrue(\'async="async"\' not in view.index(view))\n-        self.assertTrue(\'defer="defer"\' not in view.index(view))\n-\n-    def test_bundle_defer_async_production(self):\n-        """The default and logged-in production bundles should never be loaded\n-        async or defered.\n-        For bundles to be loaded async or defered, you need to empty merge_with\n-        """\n-        registry = getUtility(IRegistry)\n-\n-        bundles = registry.collectionOfInterface(\n-            IBundleRegistry,\n-            prefix="plone.bundles"\n-        )\n-        bundles[\'plone\'].load_async = False\n-        bundles[\'plone\'].load_defer = False\n-        bundles[\'plone-logged-in\'].load_async = False\n-        bundles[\'plone-logged-in\'].load_defer = False\n-\n+        request = self.app.REQUEST\n         view = ScriptsView(self.app, self.app.REQUEST, None, None)\n-\n-        import Products.CMFPlone.resources.browser\n-        path = os.path.dirname(Products.CMFPlone.resources.browser.__file__)\n-        view.index = ViewPageTemplateFile(\'scripts.pt\', path)\n         view.update()\n+        rendered = view.render()\n+        self.assertTrue("async=" in rendered)\n+        self.assertTrue("defer=" not in rendered)\n \n-        self.assertTrue(\'async="async"\' not in view.index(view))\n-        self.assertTrue(\'defer="defer"\' not in view.index(view))\n-\n-        bundles[\'plone\'].load_async = True\n-        bundles[\'plone\'].load_defer = True\n-        self.assertEqual(view.index(view).count(\'async="async"\'), 0)\n-        self.assertEqual(view.index(view).count(\'defer="defer"\'), 0)\n-\n-        bundles[\'plone\'].merge_with = \'\'\n-        bundles[\'plone\'].load_async = True\n-        bundles[\'plone\'].load_defer = True\n-        self.assertEqual(view.index(view).count(\'async="async"\'), 1)\n-        self.assertEqual(view.index(view).count(\'defer="defer"\'), 1)\n-\n-        bundles[\'plone\'].merge_with = \'\'\n-        bundles[\'plone\'].load_async = True\n-        bundles[\'plone\'].load_defer = True\n-        bundles[\'plone-logged-in\'].merge_with = \'\'\n-        bundles[\'plone-logged-in\'].load_async = True\n-        bundles[\'plone-logged-in\'].load_defer = True\n-        self.assertEqual(view.index(view).count(\'async="async"\'), 2)\n-        self.assertEqual(view.index(view).count(\'defer="defer"\'), 2)\n-\n-\n-class TestConfigJs(PloneTestCase.PloneTestCase):\n-\n-    def test_init_shim_works_with_function(self):\n-        config = self.portal.restrictedTraverse(\'config.js\')()\n-        self.assertTrue(\'init: function\' in config)\n-\n-\n-class TestControlPanel(PloneTestCase.PloneTestCase):\n-\n-    def test_save_override_file(self):\n-        req = self.layer[\'request\']\n-        req.environ[\'PATH_INFO\'] = \'++plone++foo/bar.css\'\n-        mng = OverrideFolderManager(self.portal)\n-        mng.save_file(\'foo/bar.css\', \'foobar\')\n-        value = self.portal.restrictedTraverse(\'++plone++foo/bar.css\')\n-        self.assertEqual(value.data, b\'foobar\')\n-\n-    def test_override_rewrite_links(self):\n-        req = self.layer[\'request\']\n-        req.environ[\'PATH_INFO\'] = \'++plone++foo/bar.css\'\n-        mng = OverrideFolderManager(self.portal)\n-        css = """\n-.foo {{\n-    background-image: url("{site_url}/foobar.css");\n-}}\n-.bar {{\n-    background-image: url("{site_url}/++plone++foo/bar/foobar.css");\n-}}\n-.foobar {{\n-    background-image: url("{site_url}/foo/bar/foobar.css");\n-}}""".format(site_url=self.portal.absolute_url())\n-        mng.save_file(\'foo/bar.css\', css)\n-        value = self.portal.restrictedTraverse(\'++plone++foo/bar.css\')\n-        match = b"""\n-.foo {\n-    background-image: url("../foobar.css");\n-}\n-.bar {\n-    background-image: url("bar/foobar.css");\n-}\n-.foobar {\n-    background-image: url("../foo/bar/foobar.css");\n-}"""\n-        self.assertEqual(value.data, match)\n-\n-    def test_get_require_js_config_uses_stub_modules(self):\n-        view = ResourceRegistryControlPanelView(\n-            self.portal, self.layer[\'request\'])\n-        self.layer[\'request\'].form[\'bundle\'] = \'plone-logged-in\'\n-        config = json.loads(view.js_build_config())\n-        self.assertEqual(config[\'paths\'][\'jquery\'], \'empty:\')\n-\n-\n-class DummyResource:\n-    def __init__(self, name):\n-        self.js = name\n-        self.css = [name, ]\n-\n-\n-class DummyBundle:\n-    def __init__(self, name, enabled=True):\n-        self.__prefix__ = \'test/\' + name\n-        self.compile = True\n-        self.conditionalcomment = None\n-        self.csscompilation = \'++resource++\' + name + \'.css\'\n-        self.depends = None\n-        self.enabled = enabled\n-        self.expression = None\n-        self.jscompilation = \'++resource++\' + name + \'.js\'\n-        self.last_compilation = \'123\'\n-        self.resources = []\n-\n-\n-class TestScriptsViewlet(PloneTestCase.PloneTestCase):\n+    def test_bundle_defer_async(self):\n+        bundle = self._make_test_bundle()\n+        bundle.load_async = True\n+        bundle.load_defer = True\n+        view = ScriptsView(self.app, self.app.REQUEST, None, None)\n+        view.update()\n+        rendered = view.render()\n+        self.assertTrue("async=" in rendered)\n+        self.assertTrue("defer=" in rendered)\n \n     def test_scripts_viewlet(self):\n-        scripts = ScriptsView(\n-            self.layer[\'portal\'],\n-            self.layer[\'request\'],\n-            None\n-        )\n+        scripts = ScriptsView(self.layer["portal"], self.layer["request"], None)\n         scripts.update()\n-        results = scripts.scripts()\n-        self.assertEqual(results[0][\'bundle\'], \'production\')\n-        self.assertTrue(results[0][\'src\'].startswith(\n-            \'http://nohost/plone/++plone++production/++unique++\'))\n-        self.assertTrue(results[0][\'src\'].endswith(\'/default.js\'))\n-        self.assertEqual(results[1][\'bundle\'], \'production\')\n-        self.assertTrue(results[1][\'src\'].startswith(\n-            \'http://nohost/plone/++plone++production/++unique++\'))\n-        self.assertTrue(results[1][\'src\'].endswith(\'/logged-in.js\'))\n-        self.assertEqual(len(results), 2)\n+        results = scripts.render()\n+        self.assertIn("++plone++static/bundle-jquery/jquery.min.js", results)\n+        self.assertIn(\n+            "++plone++static/bundle-bootstrap/js/bootstrap.bundle.min.js", results\n+        )\n+        self.assertIn("++plone++static/bundle-plone/bundle.min.js", results)\n+        self.assertIn("http://nohost/plone/++webresource++", results)\n \n     def test_scripts_viewlet_anonymous(self):\n         logout()\n-        scripts = ScriptsView(\n-            self.layer[\'portal\'],\n-            self.layer[\'request\'],\n-            None\n-        )\n+        scripts = ScriptsView(self.layer["portal"], self.layer["request"], None)\n         scripts.update()\n-        results = scripts.scripts()\n-        self.assertEqual(results[0][\'bundle\'], \'production\')\n-        self.assertTrue(results[0][\'src\'].startswith(\n-            \'http://nohost/plone/++plone++production/++unique++\'))\n-        self.assertTrue(results[0][\'src\'].endswith(\'/default.js\'))\n-        self.assertEqual(len(results), 1)\n-\n-    @mock.patch.object(\n-        ScriptsView,\n-        \'get_resources\',\n-        new=lambda self: {\'foo\': DummyResource(\'++resource++foo.js\')}\n-    )\n-    def test_request_resources(self):\n-        add_resource_on_request(self.layer[\'request\'], \'foo\')\n-        scripts = ScriptsView(\n-            self.layer[\'portal\'],\n-            self.layer[\'request\'],\n-            None\n+        results = scripts.render()\n+        self.assertIn("++plone++static/bundle-jquery/jquery.min.js", results)\n+        self.assertIn(\n+            "++plone++static/bundle-bootstrap/js/bootstrap.bundle.min.js", results\n         )\n-        scripts.update()\n-        results = scripts.scripts()\n-        self.assertEqual(\n-            results[-1], {\'src\': \'http://nohost/plone/++resource++foo.js\',\n-                          \'conditionalcomment\': \'\',\n-                          \'resetrjs\': False,\n-                          \'bundle\': \'none\'})\n-\n-    def test_request_resources_not_add_same_twice(self):\n-        req = self.layer[\'request\']\n-        add_resource_on_request(req, \'foo\')\n-        add_resource_on_request(req, \'foo\')\n-\n-        self.assertEqual(len(req.enabled_resources), 1)\n+        self.assertIn("++plone++static/bundle-plone/bundle.min.js", results)\n+        self.assertIn("http://nohost/plone/++webresource++", results)\n \n     def test_request_bundles_not_add_same_twice(self):\n-        req = self.layer[\'request\']\n-        add_bundle_on_request(req, \'foo\')\n-        add_bundle_on_request(req, \'foo\')\n+        req = self.layer["request"]\n+        add_bundle_on_request(req, "foo")\n+        add_bundle_on_request(req, "foo")\n \n         self.assertEqual(len(req.enabled_bundles), 1)\n \n-    @mock.patch.object(\n-        ScriptsView,\n-        \'get_bundles\',\n-        new=lambda self: {\'foo\': Bundle(DummyBundle(\'foo\', enabled=False))}\n-    )\n+    def test_disabled_bundle_not_rendered(self):\n+        # request\n+        req = self.layer["request"]\n+\n+        # create a subrequest.\n+        subreq = req.clone()\n+        subreq["PARENT_REQUEST"] = req\n+\n+        scripts = ScriptsView(self.layer["portal"], subreq, None)\n+\n+        # add some bundle to test with\n+        bundle = self._make_test_bundle()\n+        bundle.enabled = False\n+        scripts.update()\n+        result = scripts.render()\n+        self.assertNotIn("http://foo.bar/foobar.js", result)\n+\n     def test_add_bundle_on_request_with_subrequest(self):\n-        req = self.layer[\'request\']\n+        # request\n+        req = self.layer["request"]\n \n         # create a subrequest.\n         subreq = req.clone()\n-        subreq[\'PARENT_REQUEST\'] = req\n+        subreq["PARENT_REQUEST"] = req\n \n         # add a bundle via the main request\n-        add_bundle_on_request(req, \'foo\')\n-\n-        scripts = ScriptsView(self.layer[\'portal\'], subreq, None)\n-\n-        # Send resource registry in development mode\n-        # Via a fake registry to allow accessing like this:\n-        # self.registry.records[\'plone.resources.development\'].value\n-        scripts.registry = type(\n-            \'reg\',\n-            (object, ),\n-            {\'records\': {\n-                \'plone.resources.development\': type(\n-                    \'val\',\n-                    (object, ),\n-                    {\'value\': True}\n-                )()\n-            }}\n-        )()\n-        self.assertTrue(scripts.development)\n+        add_bundle_on_request(req, "foobar")\n+\n+        scripts = ScriptsView(self.layer["portal"], subreq, None)\n \n+        # add some bundle to test with\n+        bundle = self._make_test_bundle()\n+        bundle.enabled = False\n         scripts.update()\n-        result = scripts.scripts()[-1]\n-        self.assertEqual(\n-            result[\'src\'],\n-            \'http://nohost/plone/++resource++foo.js?version=123\'\n-        )\n-        self.assertEqual(\n-             result[\'conditionalcomment\'],\n-             None\n-        )\n-        self.assertEqual(\n-            result[\'bundle\'],\n-            \'foo\',\n-        )\n-        self.assertEqual(\n-            result[\'async\'],\n-            None\n-        )\n-        self.assertEqual(\n-            result[\'defer\'],\n-            None\n-        )\n+        result = scripts.render()\n+        self.assertIn("http://foo.bar/foobar.js", result)\n \n-    @mock.patch.object(\n-        ScriptsView,\n-        \'get_bundles\',\n-        new=lambda self: {\'foo\': Bundle(DummyBundle(\'foo\', enabled=True))}\n-    )\n     def test_remove_bundle_on_request_with_subrequest(self):\n-        req = self.layer[\'request\']\n+        # request\n+        req = self.layer["request"]\n \n         # create a subrequest.\n         subreq = req.clone()\n-        subreq[\'PARENT_REQUEST\'] = req\n-\n-        # remove the enabled \'foo\' bundle\n-        remove_bundle_on_request(req, \'foo\')\n-\n-        scripts = ScriptsView(self.layer[\'portal\'], subreq, None)\n-\n-        # Send resource registry in development mode\n-        # Via a fake registry to allow accessing like this:\n-        # self.registry.records[\'plone.resources.development\'].value\n-        scripts.registry = type(\n-            \'reg\',\n-            (object, ),\n-            {\'records\': {\n-                \'plone.resources.development\': type(\n-                    \'val\',\n-                    (object, ),\n-                    {\'value\': True}\n-                )()\n-            }}\n-        )()\n-        self.assertTrue(scripts.development)\n+        subreq["PARENT_REQUEST"] = req\n \n+        # add a bundle via the main request\n+        add_bundle_on_request(req, "foobar")\n+\n+        scripts = ScriptsView(self.layer["portal"], subreq, None)\n+\n+        # add some bundle to test with\n+        bundle = self._make_test_bundle()\n+        bundle.enabled = True\n         scripts.update()\n-        results = scripts.scripts()\n-        self.assertEqual(\n-            [i for i in results if \'foo\' in i[\'src\']],\n-            []\n-        )\n+        result = scripts.render()\n+        self.assertNotIn("http://test.foo/test.css", result)\n+\n \n-    @mock.patch.object(\n-        ScriptsView,\n-        \'get_resources\',\n-        new=lambda self: {\'foo\': DummyResource(\'++resource++foo.js\')}\n-    )\n-    @mock.patch.object(\n-        StylesView,\n-        \'get_resources\',\n-        new=lambda self: {\'foo\': DummyResource(\'++resource++foo.css\')}\n-    )\n-    def test_add_resource_on_request_with_subrequest(self):\n-        """Check, if a resource added at a main request is picked up from a\n-        subrequest for creating the header scripts section.\n-        """\n-        req = self.layer[\'request\']\n+class TestStylesViewlet(PloneTestCase.PloneTestCase):\n+    def test_styles_viewlet(self):\n+        styles = StylesView(self.layer["portal"], self.layer["request"], None)\n+        styles.update()\n+        results = styles.render()\n+        self.assertIn("++theme++barceloneta/css/barceloneta.min.css", results)\n+        self.assertIn("http://nohost/plone/++webresource++", results)\n+\n+    def test_styles_viewlet_anonymous(self):\n+        logout()\n+        styles = StylesView(self.layer["portal"], self.layer["request"], None)\n+        styles.update()\n+        results = styles.render()\n+        self.assertIn("++theme++barceloneta/css/barceloneta.min.css", results)\n+        self.assertIn("http://nohost/plone/++webresource++", results)\n+\n+    def test_request_bundles_not_add_same_twice(self):\n+        req = self.layer["request"]\n+        add_bundle_on_request(req, "foo")\n+        add_bundle_on_request(req, "foo")\n+        self.assertEqual(len(req.enabled_bundles), 1)\n+\n+    def test_add_bundle_on_request_with_subrequest(self):\n+        # request\n+        req = self.layer["request"]\n \n         # create a subrequest.\n         subreq = req.clone()\n-        subreq[\'PARENT_REQUEST\'] = req\n+        subreq["PARENT_REQUEST"] = req\n+\n+        # add a bundle via the main request\n+        add_bundle_on_request(req, "testbundle")\n \n-        # add a resource to main request\n-        add_resource_on_request(req, \'foo\')\n+        scripts = ScriptsView(self.layer["portal"], subreq, None)\n+\n+        # add some bundle to test with\n+        registry = getUtility(IRegistry)\n+        data = {\n+            "jscompilation": ("http://test.foo/test.min.js", regfield.TextLine()),\n+            "csscompilation": ("http://test.foo/test.css", regfield.TextLine()),\n+            "expression": ("", regfield.TextLine()),\n+            "enabled": (False, regfield.Bool()),\n+            "depends": ("", regfield.TextLine()),\n+            "load_async": (True, regfield.Bool()),\n+            "load_defer": (True, regfield.Bool()),\n+        }\n+        for key, regdef in data.items():\n+            record = Record(regdef[1])\n+            record.value = regdef[0]\n+            registry.records[f"plone.bundles/testbundle.{key}"] = record\n \n-        scripts = ScriptsView(self.layer[\'portal\'], subreq, None)\n         scripts.update()\n-        results = scripts.scripts()\n-        self.assertEqual(\n-            results[-1],\n-            {\n-                \'src\': \'http://nohost/plone/++resource++foo.js\',\n-                \'conditionalcomment\': \'\',\n-                \'resetrjs\': False,\n-                \'bundle\': \'none\',\n-            }\n-        )\n+        result = scripts.render()\n+        self.assertIn("http://test.foo/test.min.js", result)\n \n-        styles = StylesView(self.layer[\'portal\'], subreq, None)\n-        styles.update()\n-        results = styles.styles()\n-        self.assertListEqual(\n-            list(filter(lambda it: \'foo\' in it[\'src\'], results)),\n-            [{\n-                \'src\': \'http://nohost/plone/++resource++foo.css\',\n-                \'conditionalcomment\': \'\',\n-                \'rel\': \'stylesheet\',\n-                \'bundle\': \'none\',\n-            }]\n-        )\n+    def test_remove_bundle_on_request_with_subrequest(self):\n+        # request\n+        req = self.layer["request"]\n+\n+        # create a subrequest.\n+        subreq = req.clone()\n+        subreq["PARENT_REQUEST"] = req\n+\n+        # remove a bundle via the main request\n+        remove_bundle_on_request(req, "testbundle")\n+\n+        scripts = ScriptsView(self.layer["portal"], subreq, None)\n+\n+        # add some bundle to test with\n+        registry = getUtility(IRegistry)\n+        data = {\n+            "jscompilation": ("http://test.foo/test.min.js", regfield.TextLine()),\n+            "csscompilation": ("http://test.foo/test.css", regfield.TextLine()),\n+            "expression": ("", regfield.TextLine()),\n+            "enabled": (True, regfield.Bool()),\n+            "depends": ("", regfield.TextLine()),\n+            "load_async": (True, regfield.Bool()),\n+            "load_defer": (True, regfield.Bool()),\n+        }\n+        for key, regdef in data.items():\n+            record = Record(regdef[1])\n+            record.value = regdef[0]\n+            registry.records[f"plone.bundles/testbundle.{key}"] = record\n+\n+        scripts.update()\n+        result = scripts.render()\n+        self.assertNotIn("http://test.foo/test.min.js", result)\ndiff --git a/Products/CMFPlone/tests/test_icons.py b/Products/CMFPlone/tests/test_icons.py\nindex 4832c8b0db..9b720c546f 100644\n--- a/Products/CMFPlone/tests/test_icons.py\n+++ b/Products/CMFPlone/tests/test_icons.py\n@@ -36,4 +36,39 @@ def test_icons_url(self):\n     def test_icons_tag(self):\n         page = self.app\n         view = page.restrictedTraverse(\'@@iconresolver\')\n-        self.assertIn(b\'bi bi-bug\', view.tag(\'bug\'))\n\\ No newline at end of file\n+        self.assertIn(b\'bi bi-bug\', view.tag(\'bug\'))\n+\n+\n+\n+class IconTraverserTest(unittest.TestCase):\n+    """Test the icon traverser or PloneBundlesTraverser."""\n+\n+    layer = PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n+\n+    def setUp(self):\n+        self.portal = self.layer[\'portal\']\n+        self.request = self.layer[\'request\']\n+\n+    def test_default_icon(self):\n+        self.portal.restrictedTraverse("++plone++icons/plone.svg")\n+\n+    def test_bootstrap_icon(self):\n+        self.portal.restrictedTraverse("++plone++bootstrap-icons/clock.svg")\n+\n+    def test_bootstrap_icon_with_path_info(self):\n+        """Get bootstrap icon while request has a PATH_INFO.\n+\n+        When the request has PATH_INFO, which it normally has,\n+        the code originally ignored the remaining name (clock.svg)\n+        and tried to traverse based on this PATH_INFO.\n+        This works fine when the url of the request is for an icon.\n+        But when the url is for a normal page which tries to load an icon\n+        in the template, it fails.\n+\n+        I don\'t know why most of the time it goes right.\n+        But I have occasionally seen failures.\n+        And it happens at least in plone.i18n tests.\n+        https://github.com/plone/plone.i18n/pull/41\n+        """\n+        self.request.environ["PATH_INFO"] = "plone"\n+        self.portal.restrictedTraverse("++plone++bootstrap-icons/clock.svg")\ndiff --git a/Products/CMFPlone/tests/test_metabundles.py b/Products/CMFPlone/tests/test_metabundles.py\ndeleted file mode 100644\nindex 57874b4b3f..0000000000\n--- a/Products/CMFPlone/tests/test_metabundles.py\n+++ /dev/null\n@@ -1,144 +0,0 @@\n-from plone.resource.interfaces import IResourceDirectory\n-from Products.CMFPlone.interfaces.resources import (\n-    OVERRIDE_RESOURCE_DIRECTORY_NAME,\n-)\n-from zope.component import getUtility\n-\n-from Products.CMFPlone.resources.browser.combine import (\n-    PRODUCTION_RESOURCE_DIRECTORY,\n-    combine_bundles,\n-)\n-from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n-from Products.GenericSetup.tests import common\n-\n-import unittest\n-\n-\n-class DummyImportContext(common.DummyImportContext):\n-    # Copied from plone.app.registry tests.\n-    # This expands the context with directories.\n-\n-    _directories = {}\n-\n-    def listDirectory(self, path):\n-        return self._directories.get(path, [])\n-\n-    def isDirectory(self, path):\n-        return path in self._directories\n-\n-\n-class ProductsCMFPloneSetupTest(unittest.TestCase):\n-\n-    layer = PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n-\n-    def setUp(self):\n-        self.portal = self.layer[\'portal\']\n-        combine_bundles(self.portal)\n-        persistent_directory = getUtility(\n-            IResourceDirectory, name="persistent")\n-        container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n-        self.production_folder = container[PRODUCTION_RESOURCE_DIRECTORY]\n-\n-    def test_production_directory(self):\n-        self.assertEqual(\n-            self.production_folder.listDirectory(),\n-            [\n-                \'default.css\',\n-                \'default.js\',\n-                \'logged-in.css\',\n-                \'logged-in.js\',\n-                \'timestamp.txt\'\n-            ]\n-        )\n-\n-    def test_default_js_bundle(self):\n-        self.assertIn(\n-            b"jQuery",\n-            self.production_folder.readFile(\'default.js\')\n-        )\n-\n-    def test_overrides(self):\n-        persistent_directory = getUtility(\n-            IResourceDirectory, name="persistent")\n-        container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n-        container.makeDirectory(\'static\')\n-        static = container[\'static\']\n-        static.writeFile(\'plone-legacy-compiled.js\', \'alert("Overrided legacy!");\')\n-        combine_bundles(self.portal)\n-        self.assertIn(\n-            b\'alert("Overrided legacy!");\',\n-            self.production_folder.readFile(\'default.js\')\n-        )\n-\n-    def test_import(self):\n-        # If IBundleRegistry is in registry.xml, the combine-bundles import step\n-        # will call combine_bundles.\n-        from Products.CMFPlone.resources.exportimport.bundles import combine\n-        # from Products.CMFPlone.resources.browser.combine import get_override_directory\n-        # from Products.CMFPlone.resources.browser.combine import PRODUCTION_RESOURCE_DIRECTORY\n-\n-        # Prepare some registry xml files with or without the key IBundleRegistry.\n-        xml_with = b\'<registry>with IBundleRegistry</registry>\'\n-        xml_without = b\'<registry>without bundle registry</registry>\'\n-        xml_without2 = b\'<registry>without bundle registry</registry>\'\n-        context = DummyImportContext(self.portal, purge=False)\n-\n-        def get_timestamp():\n-            # If combine_bundles is run, a timestamp is updated.\n-            return self.production_folder.readFile(\'timestamp.txt\')\n-\n-        ts1 = get_timestamp()\n-        self.assertTrue(ts1)\n-\n-        # call the import step on a file without bundles\n-        context._files = {\'registry.xml\': xml_without}\n-        combine(context)\n-        ts2 = get_timestamp()\n-        self.assertEqual(ts1, ts2)\n-\n-        # call the import step on a file with bundles\n-        context._files = {\'registry.xml\': xml_with}\n-        combine(context)\n-        ts3 = get_timestamp()\n-        self.assertLess(ts2, ts3)\n-\n-        # call the import step on a file without bundles\n-        context._files = {\'registry.xml\': xml_without2}\n-        combine(context)\n-        ts4 = get_timestamp()\n-        self.assertEqual(ts3, ts4)\n-\n-        # Since Plone 5.1 the registry xml can also be a directory.\n-        # Set one file with bundles.\n-        context._files = {\n-            \'registry.xml\': xml_without,\n-            \'registry/foo2.xml\': xml_with,\n-            \'registry/foo3.xml\': xml_without2,\n-        }\n-        context._directories = {\n-            \'registry\': [\n-                \'foo2.xml\',\n-                \'foo3.xml\',\n-            ]\n-        }\n-        combine(context)\n-        ts10 = get_timestamp()\n-        self.assertLess(ts4, ts10)\n-\n-        # The registry.xml file itself may be missing.\n-        context._files = {\n-            \'registry/foo2.xml\': xml_with,\n-            \'registry/foo3.xml\': xml_without2,\n-        }\n-        combine(context)\n-        ts11 = get_timestamp()\n-        self.assertLess(ts10, ts11)\n-\n-        # Now without any bundle info.\n-        context._files = {\n-            \'registry/foo2.xml\': xml_without,\n-            \'registry/foo3.xml\': xml_without2,\n-        }\n-        combine(context)\n-        ts12 = get_timestamp()\n-        self.assertEqual(ts11, ts12)\ndiff --git a/Products/CMFPlone/tests/test_safe_formatter.py b/Products/CMFPlone/tests/test_safe_formatter.py\nindex 25a6e687e3..65076d1c8a 100644\n--- a/Products/CMFPlone/tests/test_safe_formatter.py\n+++ b/Products/CMFPlone/tests/test_safe_formatter.py\n@@ -324,28 +324,6 @@ def test_standard_error_message(self):\n         # We expect a json string back.\n         self.assertTrue(response.body, \'{"error_type": "None"}\')\n \n-    def test_resource_registry_vector(self):\n-        for vector in (\'less-variables.js\', \'less-modify.js\'):\n-            src = \'\'\'\n-class ctx:\n-  def format(self, *args, **kwargs):\n-    self.foo=context\n-    return "foo"\n-\n-context.portal_registry[\'plone.lessvariables\'][\'foo\'] = ctx()\n-context.portal_registry[\'plone.lessvariables\'][\'bar\'] = "{foo.foo.__class__}"\n-js = context.restrictedTraverse("%s")\n-return js()\n-\'\'\' % vector\n-            from Products.PythonScripts.PythonScript import PythonScript\n-            script = PythonScript(\'evil\')\n-            script._filepath = \'evil\'\n-            script.write(src)\n-            self.portal.evil = script\n-            output = self.publish(\'/plone/evil\')\n-            self.assertFalse(\n-                b\'Products.CMFPlone.Portal.PloneSite\' in output.body)\n-\n     def test_cook_zope2_page_templates_bad_key_str(self):\n         from Products.PageTemplates.ZopePageTemplate import ZopePageTemplate\n         pt = ZopePageTemplate(\'mytemplate\', BAD_KEY_STR)\ndiff --git a/Products/CMFPlone/traversal.py b/Products/CMFPlone/traversal.py\nindex ebeb4a9120..77f33f36a0 100644\n--- a/Products/CMFPlone/traversal.py\n+++ b/Products/CMFPlone/traversal.py\n@@ -33,7 +33,14 @@ def traverse(self, name, remaining):\n             return super().traverse(name, remaining)\n \n         resource_path = req.environ[\'PATH_INFO\'].split(\'++plone++\')[-1]\n-        resource_name, resource_filepath = resource_path.split(\'/\', 1)\n+        try:\n+            resource_name, resource_filepath = resource_path.split(\'/\', 1)\n+        except ValueError:\n+            # Not the path info / url that we expected.\n+            # So the request is not for a resource,\n+            # but for a page that traverses to a resource.\n+            # The standard resource traverser can handle this.\n+            return super().traverse(name, remaining)\n \n         # If we have additional traversers in the path we should not use them\n         # in the file lookup\ndiff --git a/news/3247-2.breaking b/news/3247-2.breaking\nnew file mode 100644\nindex 0000000000..a7b2e6edad\n--- /dev/null\n+++ b/news/3247-2.breaking\n@@ -0,0 +1,2 @@\n+Remove dependency on mockup. Mockup is now a npm package only and as such a dependency of plone.staticresources.\n+[thet]\ndiff --git a/news/3247.breaking b/news/3247.breaking\nnew file mode 100644\nindex 0000000000..b453b200ff\n--- /dev/null\n+++ b/news/3247.breaking\n@@ -0,0 +1,6 @@\n+PLIP 3211 - Remove RequireJS.\n+PLIP 3211 - Remove default resource jQuery. It is added to the global namespace via the bundle.\n+PLIP 3211 - Remove support for conditional comments in script and style tags.\n+            It\'s not supported since IE10.\n+            See: https://en.wikipedia.org/wiki/Conditional_comment\n+[MrTango, thet]\ndiff --git a/news/3247.bugfix b/news/3247.bugfix\nnew file mode 100644\nindex 0000000000..a40ff15c33\n--- /dev/null\n+++ b/news/3247.bugfix\n@@ -0,0 +1 @@\n+Fix TinyMCE configuration JSON serialization and cast entity_encoding to a list.\ndiff --git a/news/3325.breaking b/news/3325.breaking\nnew file mode 100644\nindex 0000000000..a34eda5b42\n--- /dev/null\n+++ b/news/3325.breaking\n@@ -0,0 +1,14 @@\n+New resource registry to simplify CSS/JS registration.\n+\n+- Completely (almost) rewritten ResourceRegistry based on the "webresource" project.\n+- removed >1600LOC.\n+- Sane dependency resolution using "webresource".\n+- Only "bundles" are registered - support of "resources" and "bundle resources" is removed.\n+- Some of the old bundle registry properties are deprecated and unused.\n+- Removed TTW compilation of bundles via r.js and less.js.\n+- Property `merge_with` is no longer needed in HTTP/2 times and merging here unsupported.\n+- Unique key for delivery is based on hash of bundle file, `last_compilation` property is deprecated.\n+- A new traverser ensures uniqueness.\n+- Other related bundle properties are also deprecated.\n+- Comes with new, server side generated control panel.\n+[jensens]\ndiff --git a/news/3351.feature b/news/3351.feature\nnew file mode 100644\nindex 0000000000..1c863a80fa\n--- /dev/null\n+++ b/news/3351.feature\n@@ -0,0 +1 @@\n+Add TinyMCE template plugin to the plugins vocabulary [MrTango]\n\\ No newline at end of file\ndiff --git a/news/3440.feature b/news/3440.feature\nnew file mode 100644\nindex 0000000000..fd00b51026\n--- /dev/null\n+++ b/news/3440.feature\n@@ -0,0 +1 @@\n+Add TinyMCE alignment classes, to avoid style usage [MrTango]\n\\ No newline at end of file\ndiff --git a/setup.cfg b/setup.cfg\nindex fedd44695f..a9ab3befbf 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -5,9 +5,7 @@ extra-message = [ci skip]\n universal = 0\n \n [isort]\n+profile = black\n force_alphabetical_sort=True\n force_single_line=True\n lines_after_imports=2\n-line_length=80\n-not_skip=__init__.py\n-\ndiff --git a/setup.py b/setup.py\nindex 30d7353b8b..5728362ca5 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -37,13 +37,11 @@\n         \'AccessControl >= 4.0\',\n         \'Acquisition\',\n         \'borg.localrole\',\n-        \'calmjs.parse\',\n         \'DateTime\',\n         \'ExtensionClass\',\n         \'five.customerize\',\n         \'five.localsitemanager\',\n         \'lxml\',\n-        \'mockup\',\n         \'Pillow\',\n         \'plone.api >= 1.4.4\',\n         \'plone.app.content\',\n@@ -105,10 +103,10 @@\n         \'Products.PortalTransforms\',\n         \'Products.SiteErrorLog\',\n         \'Products.statusmessages\',\n-        \'pyScss\',\n         \'setuptools>=36.2\',\n         \'transaction\',\n         \'plone.autoinclude\',\n+        \'webresource\',\n         \'ZODB3\',\n         \'Zope[wsgi] >= 4.0\',\n         \'zope.app.locales >= 3.6.0\',\n'

