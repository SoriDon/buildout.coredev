Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2019-02-28T23:58:46+01:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/f8b781e5a3d7fff4236299f9349027f80424a673

Add basic validators for the portal action controlpanel forms

Fixes #2689

Files changed:
A news/2689.bugfix
M Products/CMFPlone/interfaces/controlpanel.py

b'diff --git a/Products/CMFPlone/interfaces/controlpanel.py b/Products/CMFPlone/interfaces/controlpanel.py\nindex a498a3a61..6b9774fe2 100644\n--- a/Products/CMFPlone/interfaces/controlpanel.py\n+++ b/Products/CMFPlone/interfaces/controlpanel.py\n@@ -1,13 +1,16 @@\n # -*- coding: utf-8 -*-\n+from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n from Products.CMFPlone._compat import dump_json_to_text\n from Products.CMFPlone.interfaces.basetool import IPloneBaseTool\n from zope import schema\n from zope.deferredimport import deprecated\n+from zope.component.hooks import getSite\n from zope.interface import Attribute\n from zope.interface import implementer\n from zope.interface import Interface\n from zope.interface import Invalid\n+from zope.interface import invariant\n from zope.schema.vocabulary import SimpleTerm\n from zope.schema.vocabulary import SimpleVocabulary\n \n@@ -1559,6 +1562,20 @@ class ILinkSchema(Interface):\n         required=False)\n \n \n+def _check_tales_expression(value):\n+    from Products.PageTemplates.Expressions import getEngine\n+    try:\n+        getEngine().compile(value)\n+    except Exception:\n+        raise Invalid(\n+            _(\n+                \'The expression "${value}" is invalid\',\n+                mapping={\'value\': value},\n+            )\n+        )\n+    return True\n+\n+\n class IActionSchema(Interface):\n \n     category = schema.Choice(\n@@ -1586,7 +1603,9 @@ class IActionSchema(Interface):\n             default=u\'An expression producing the called URL. \'\n             u\'Example: string:${globals_view/navigationRootUrl}/page\'\n         ),\n-        required=True)\n+        required=True,\n+        constraint=_check_tales_expression,\n+    )\n \n     available_expr = schema.ASCIILine(\n         title=_(u\'action_condition_heading\', default=u\'Condition\'),\n@@ -1629,6 +1648,29 @@ class INewActionSchema(Interface):\n         title=_(u\'Id\'),\n         required=True)\n \n+    @invariant\n+    def validate_category_id(data):\n+        categoryid = data.category\n+        pa = getToolByName(getSite(), \'portal_actions\')\n+        category = pa.get(categoryid, {})\n+        actionid = data.id\n+        if actionid in category:\n+            raise Invalid(\n+                _(\n+                    \'An action with the id "${actionid}" already exists\',\n+                    mapping={\'actionid\': actionid},\n+                )\n+            )\n+        try:\n+            category._checkId(actionid)\n+        except Exception:\n+            raise Invalid(\n+                _(\n+                    \'The id "${actionid}" is invalid\',\n+                    mapping={\'actionid\': actionid},\n+                )\n+            )\n+\n \n class IPloneControlPanelView(Interface):\n     """A marker interface for views showing a controlpanel.\ndiff --git a/news/2689.bugfix b/news/2689.bugfix\nnew file mode 100644\nindex 000000000..5029791a7\n--- /dev/null\n+++ b/news/2689.bugfix\n@@ -0,0 +1 @@\n+Add basic validators for the portal action controlpanel forms\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2019-03-02T00:10:47+01:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/2c861ae41a077997589cb879986eb536a6294460

Merge remote-tracking branch 'origin/master' into 2689-portal-action-controlpanel-validation

Files changed:
A news/2688.bugfix
M Products/CMFPlone/controlpanel/browser/configure.zcml

b'diff --git a/Products/CMFPlone/controlpanel/browser/configure.zcml b/Products/CMFPlone/controlpanel/browser/configure.zcml\nindex ffab4c50d..a6f3382c0 100644\n--- a/Products/CMFPlone/controlpanel/browser/configure.zcml\n+++ b/Products/CMFPlone/controlpanel/browser/configure.zcml\n@@ -71,7 +71,7 @@\n       name="mail-controlpanel"\n       for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n       class=".mail.MailControlPanel"\n-      permission="cmf.ManagePortal"\n+      permission="plone.app.controlpanel.Mail"\n       />\n \n   <!-- Navigation Control Panel -->\ndiff --git a/news/2688.bugfix b/news/2688.bugfix\nnew file mode 100644\nindex 000000000..c5f22d7d4\n--- /dev/null\n+++ b/news/2688.bugfix\n@@ -0,0 +1 @@\n+Use correct permission for mail controlpanel form so that Site Administrators can also edit. [fredvd]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2019-03-07T00:01:32+01:00
Author: Alessandro Pisa (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/a1e43a5bbee35b709724a5894279249ac76a9c22

Merge branch 'master' into 2689-portal-action-controlpanel-validation

Files changed:
M CHANGES.rst
M Products/CMFPlone/browser/login/login.py
M Products/CMFPlone/tests/test_redirect_after_login.py
M setup.py
D news/2049.bugfix
D news/2688.bugfix
D news/2740.feature
D news/2752.bugfix
D news/2765.bugfix
D news/2770.feature
D news/2772.feature

b"diff --git a/CHANGES.rst b/CHANGES.rst\nindex fbd6ba40b..77ca59fe9 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -12,6 +12,31 @@ Changelog\n \n .. towncrier release notes start\n \n+5.2rc1 (2019-03-04)\n+-------------------\n+\n+New features:\n+\n+\n+- Views for title and description. [iham] (#2740)\n+- Display wsgi-state plus name and version of the server in the controlpanel\n+  [pbauer] (#2770)\n+- Enable dropdown-navigation for new sites by default. [pbauer] (#2772)\n+\n+\n+Bug fixes:\n+\n+\n+- Resolve circular dependency between `Products.CMFPlone` and `plone.i18n` by\n+  moving `ILanguageSchema` there. [sallner] (#2049)\n+- Use correct permission for mail controlpanel form so that Site Administrators\n+  can also edit. [fredvd] (#2688)\n+- - make linkintegrity robot test more reliable [MrTango] (#2752)\n+- Check only once if Products.ATContentTypes is available. [gforcada] (#2765)\n+- Fix redirection to `came_from` when url matches LOGIN_TEMPLATE_ID partly\n+  [petschki] (#2771)\n+\n+\n 5.2b1 (2019-02-13)\n ------------------\n \ndiff --git a/Products/CMFPlone/browser/login/login.py b/Products/CMFPlone/browser/login/login.py\nindex 811f47705..4114e1711 100644\n--- a/Products/CMFPlone/browser/login/login.py\n+++ b/Products/CMFPlone/browser/login/login.py\n@@ -117,7 +117,7 @@ def get_came_from(self):\n         url_tool = getToolByName(self.context, 'portal_url')\n         if not url_tool.isURLInPortal(came_from):\n             return\n-        came_from_path = parse.urlparse(came_from)[2]\n+        came_from_path = parse.urlparse(came_from)[2].split('/')\n         for login_template_id in LOGIN_TEMPLATE_IDS:\n             if login_template_id in came_from_path:\n                 return\ndiff --git a/Products/CMFPlone/tests/test_redirect_after_login.py b/Products/CMFPlone/tests/test_redirect_after_login.py\nindex 56ef20b29..6dd1a5422 100644\n--- a/Products/CMFPlone/tests/test_redirect_after_login.py\n+++ b/Products/CMFPlone/tests/test_redirect_after_login.py\n@@ -59,6 +59,10 @@ def test_login_templates_are_filtered(self):\n         url = 'https://nohost/plone/logout'\n         self.request['came_from'] = url\n         self.assertEqual(self.form.get_came_from(), None)\n+        # do not filter came_from if url matches parts of login templates\n+        url = 'https://nohost/plone/my_custom_logged_in'\n+        self.request['came_from'] = url\n+        self.assertEqual(self.form.get_came_from(), url)\n \n     def test_referer_is_fallback(self):\n         url = 'https://nohost/plone/test'\ndiff --git a/news/2049.bugfix b/news/2049.bugfix\ndeleted file mode 100644\nindex 79b57410f..000000000\n--- a/news/2049.bugfix\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-Resolve circular dependency between `Products.CMFPlone` and `plone.i18n` by\n-moving `ILanguageSchema` there.\n-[sallner]\ndiff --git a/news/2688.bugfix b/news/2688.bugfix\ndeleted file mode 100644\nindex c5f22d7d4..000000000\n--- a/news/2688.bugfix\n+++ /dev/null\n@@ -1 +0,0 @@\n-Use correct permission for mail controlpanel form so that Site Administrators can also edit. [fredvd]\ndiff --git a/news/2740.feature b/news/2740.feature\ndeleted file mode 100644\nindex 340ea9a2f..000000000\n--- a/news/2740.feature\n+++ /dev/null\n@@ -1 +0,0 @@\n-Views for title and description. [iham]\n\\ No newline at end of file\ndiff --git a/news/2752.bugfix b/news/2752.bugfix\ndeleted file mode 100644\nindex 5b96ce973..000000000\n--- a/news/2752.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-- make linkintegrity robot test more reliable\n-  [MrTango]\n\\ No newline at end of file\ndiff --git a/news/2765.bugfix b/news/2765.bugfix\ndeleted file mode 100644\nindex 614f3c7ad..000000000\n--- a/news/2765.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Check only once if Products.ATContentTypes is available.\n-[gforcada]\ndiff --git a/news/2770.feature b/news/2770.feature\ndeleted file mode 100644\nindex 63972d8e1..000000000\n--- a/news/2770.feature\n+++ /dev/null\n@@ -1 +0,0 @@\n-Display wsgi-state plus name and version of the server in the controlpanel [pbauer]\n\\ No newline at end of file\ndiff --git a/news/2772.feature b/news/2772.feature\ndeleted file mode 100644\nindex 89bf57ef8..000000000\n--- a/news/2772.feature\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Enable dropdown-navigation for new sites by default.\n-[pbauer]\n\\ No newline at end of file\ndiff --git a/setup.py b/setup.py\nindex 853563f16..b832ce9ef 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -2,7 +2,7 @@\n from setuptools import setup\n from setuptools import find_packages\n \n-version = '5.2b2.dev0'\n+version = '5.2rc2.dev0'\n \n \n setup(\n"

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2019-03-07T01:19:53+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/6dbac685ae83c1f28dee2bb4548b9a9176fde41c

Merge pull request #2715 from plone/2689-portal-action-controlpanel-validation

Add basic validators for the portal action controlpanel forms

Files changed:
A news/2689.bugfix
M Products/CMFPlone/interfaces/controlpanel.py

b'diff --git a/Products/CMFPlone/interfaces/controlpanel.py b/Products/CMFPlone/interfaces/controlpanel.py\nindex a498a3a61..6b9774fe2 100644\n--- a/Products/CMFPlone/interfaces/controlpanel.py\n+++ b/Products/CMFPlone/interfaces/controlpanel.py\n@@ -1,13 +1,16 @@\n # -*- coding: utf-8 -*-\n+from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n from Products.CMFPlone._compat import dump_json_to_text\n from Products.CMFPlone.interfaces.basetool import IPloneBaseTool\n from zope import schema\n from zope.deferredimport import deprecated\n+from zope.component.hooks import getSite\n from zope.interface import Attribute\n from zope.interface import implementer\n from zope.interface import Interface\n from zope.interface import Invalid\n+from zope.interface import invariant\n from zope.schema.vocabulary import SimpleTerm\n from zope.schema.vocabulary import SimpleVocabulary\n \n@@ -1559,6 +1562,20 @@ class ILinkSchema(Interface):\n         required=False)\n \n \n+def _check_tales_expression(value):\n+    from Products.PageTemplates.Expressions import getEngine\n+    try:\n+        getEngine().compile(value)\n+    except Exception:\n+        raise Invalid(\n+            _(\n+                \'The expression "${value}" is invalid\',\n+                mapping={\'value\': value},\n+            )\n+        )\n+    return True\n+\n+\n class IActionSchema(Interface):\n \n     category = schema.Choice(\n@@ -1586,7 +1603,9 @@ class IActionSchema(Interface):\n             default=u\'An expression producing the called URL. \'\n             u\'Example: string:${globals_view/navigationRootUrl}/page\'\n         ),\n-        required=True)\n+        required=True,\n+        constraint=_check_tales_expression,\n+    )\n \n     available_expr = schema.ASCIILine(\n         title=_(u\'action_condition_heading\', default=u\'Condition\'),\n@@ -1629,6 +1648,29 @@ class INewActionSchema(Interface):\n         title=_(u\'Id\'),\n         required=True)\n \n+    @invariant\n+    def validate_category_id(data):\n+        categoryid = data.category\n+        pa = getToolByName(getSite(), \'portal_actions\')\n+        category = pa.get(categoryid, {})\n+        actionid = data.id\n+        if actionid in category:\n+            raise Invalid(\n+                _(\n+                    \'An action with the id "${actionid}" already exists\',\n+                    mapping={\'actionid\': actionid},\n+                )\n+            )\n+        try:\n+            category._checkId(actionid)\n+        except Exception:\n+            raise Invalid(\n+                _(\n+                    \'The id "${actionid}" is invalid\',\n+                    mapping={\'actionid\': actionid},\n+                )\n+            )\n+\n \n class IPloneControlPanelView(Interface):\n     """A marker interface for views showing a controlpanel.\ndiff --git a/news/2689.bugfix b/news/2689.bugfix\nnew file mode 100644\nindex 000000000..5029791a7\n--- /dev/null\n+++ b/news/2689.bugfix\n@@ -0,0 +1 @@\n+Add basic validators for the portal action controlpanel forms\n'

