Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2017-01-10T04:01:59+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/plone.app.querystring/commit/9d0d5310eaa2f205d7907e574400069512f06181

RelativeDate index modifier fix
Fix a case, where index modifiers with queries containing ``largerThanRelativeDate`` or ``lessThanRelativeDate`` date operators failed with an ``TypeError``.

Files changed:
M CHANGES.rst
M plone/app/querystring/indexmodifiers/query_index_modifiers.py
M plone/app/querystring/tests/testIndexmodifiers.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 7a9c52e..40e82b7 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Fix a case, where index modifiers with queries containing ``largerThanRelativeDate`` or ``lessThanRelativeDate`` date operators failed with an ``TypeError``.
+  [thet]
 
 
 1.4.1 (2016-11-18)
diff --git a/plone/app/querystring/indexmodifiers/query_index_modifiers.py b/plone/app/querystring/indexmodifiers/query_index_modifiers.py
index d0fcf1d..682d40c 100644
--- a/plone/app/querystring/indexmodifiers/query_index_modifiers.py
+++ b/plone/app/querystring/indexmodifiers/query_index_modifiers.py
@@ -43,36 +43,35 @@ def __call__(self, value):
 
 @implementer(IParsedQueryIndexModifier)
 class base(object):
-
-    """
-    DateIndex query modifier
+    """DateIndex query modifier
     see Products.PluginIndexes.DateIndex.DateIndex.DateIndex._convert function
     """
 
     def __call__(self, value):
-        query = value['query']
-        if isinstance(query, unicode):
-            query = query.encode("utf-8")
 
-        if isinstance(query, basestring):
-            try:
-                query = parse(query)
-            except (ValueError, AttributeError):
-                query = query.encode("utf-8")
-        elif isinstance(query, list):
-            aux = list()
-            for item in query:
-                if isinstance(item, unicode):
-                    item = item.encode("utf-8")
+        def _normalize(val):
+            """Encode value, parse dates.
+            """
+            if isinstance(val, unicode):
+                val = val.encode("utf-8")
+
+            if isinstance(val, basestring):
                 try:
-                    val = parse(item)
+                    val = parse(val)
                 except (ValueError, AttributeError):
-                    val = item
-                aux.append(val)
+                    pass
+
+            return val
 
+        query = value['query']
+        query = _normalize(query)
+
+        if isinstance(query, list):
+            aux = list()
+            for item in query:
+                aux.append(_normalize(item))
             query = aux
-        else:
-            pass
+
         value['query'] = query
         return (self.__class__.__name__, value)
 
diff --git a/plone/app/querystring/tests/testIndexmodifiers.py b/plone/app/querystring/tests/testIndexmodifiers.py
index 48ac694..dfec1a0 100644
--- a/plone/app/querystring/tests/testIndexmodifiers.py
+++ b/plone/app/querystring/tests/testIndexmodifiers.py
@@ -1,4 +1,5 @@
 # -*- coding: utf-8 -*-
+from DateTime import DateTime
 from datetime import datetime
 from plone.app.querystring.indexmodifiers import query_index_modifiers
 
@@ -28,6 +29,34 @@ def test_date_modifier_list(self):
             isinstance(modifier(query)[1]['query'][0], datetime)
         )
 
+    def test_date_modifier_list_DateTime(self):
+        """Test a case with largerThanRelativeDate operatiors, where
+        plone.app.querystring.querybuilder parses a querystring like this one:
+        >>> query
+        [{
+            u'i': u'end',
+            u'o': u'plone.app.querystring.operation.date.largerThanRelativeDate',  # noqa
+            u'v': u'30'
+        }]
+
+        into something like this:
+        >>> parsedquery
+        {
+            u'end': {
+                'query': [
+                    DateTime('2016/12/10 00:00:00 US/Central'),
+                    DateTime('2017/01/09 23:59:59 US/Central')
+                ],
+                'range': 'minmax'
+            },
+        }
+        """
+        modifier = query_index_modifiers.start()
+        query = {'query': [DateTime('01/01/2010'), DateTime('01/01/2010')]}
+        self.assertTrue(
+            isinstance(modifier(query)[1]['query'][0], DateTime)
+        )
+
     def test_invalid_date(self):
         modifier = query_index_modifiers.start()
         query = {'query': 'foobar'}


Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2017-01-10T12:08:53+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.querystring/commit/2e005c042242d182b7e55f88441da31366bb6c59

Merge pull request #71 from plone/thet-reldateparseerror

RelativeDate index modifier fix

Files changed:
M CHANGES.rst
M plone/app/querystring/indexmodifiers/query_index_modifiers.py
M plone/app/querystring/tests/testIndexmodifiers.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 7a9c52e..40e82b7 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Fix a case, where index modifiers with queries containing ``largerThanRelativeDate`` or ``lessThanRelativeDate`` date operators failed with an ``TypeError``.
+  [thet]
 
 
 1.4.1 (2016-11-18)
diff --git a/plone/app/querystring/indexmodifiers/query_index_modifiers.py b/plone/app/querystring/indexmodifiers/query_index_modifiers.py
index d0fcf1d..682d40c 100644
--- a/plone/app/querystring/indexmodifiers/query_index_modifiers.py
+++ b/plone/app/querystring/indexmodifiers/query_index_modifiers.py
@@ -43,36 +43,35 @@ def __call__(self, value):
 
 @implementer(IParsedQueryIndexModifier)
 class base(object):
-
-    """
-    DateIndex query modifier
+    """DateIndex query modifier
     see Products.PluginIndexes.DateIndex.DateIndex.DateIndex._convert function
     """
 
     def __call__(self, value):
-        query = value['query']
-        if isinstance(query, unicode):
-            query = query.encode("utf-8")
 
-        if isinstance(query, basestring):
-            try:
-                query = parse(query)
-            except (ValueError, AttributeError):
-                query = query.encode("utf-8")
-        elif isinstance(query, list):
-            aux = list()
-            for item in query:
-                if isinstance(item, unicode):
-                    item = item.encode("utf-8")
+        def _normalize(val):
+            """Encode value, parse dates.
+            """
+            if isinstance(val, unicode):
+                val = val.encode("utf-8")
+
+            if isinstance(val, basestring):
                 try:
-                    val = parse(item)
+                    val = parse(val)
                 except (ValueError, AttributeError):
-                    val = item
-                aux.append(val)
+                    pass
+
+            return val
 
+        query = value['query']
+        query = _normalize(query)
+
+        if isinstance(query, list):
+            aux = list()
+            for item in query:
+                aux.append(_normalize(item))
             query = aux
-        else:
-            pass
+
         value['query'] = query
         return (self.__class__.__name__, value)
 
diff --git a/plone/app/querystring/tests/testIndexmodifiers.py b/plone/app/querystring/tests/testIndexmodifiers.py
index 48ac694..dfec1a0 100644
--- a/plone/app/querystring/tests/testIndexmodifiers.py
+++ b/plone/app/querystring/tests/testIndexmodifiers.py
@@ -1,4 +1,5 @@
 # -*- coding: utf-8 -*-
+from DateTime import DateTime
 from datetime import datetime
 from plone.app.querystring.indexmodifiers import query_index_modifiers
 
@@ -28,6 +29,34 @@ def test_date_modifier_list(self):
             isinstance(modifier(query)[1]['query'][0], datetime)
         )
 
+    def test_date_modifier_list_DateTime(self):
+        """Test a case with largerThanRelativeDate operatiors, where
+        plone.app.querystring.querybuilder parses a querystring like this one:
+        >>> query
+        [{
+            u'i': u'end',
+            u'o': u'plone.app.querystring.operation.date.largerThanRelativeDate',  # noqa
+            u'v': u'30'
+        }]
+
+        into something like this:
+        >>> parsedquery
+        {
+            u'end': {
+                'query': [
+                    DateTime('2016/12/10 00:00:00 US/Central'),
+                    DateTime('2017/01/09 23:59:59 US/Central')
+                ],
+                'range': 'minmax'
+            },
+        }
+        """
+        modifier = query_index_modifiers.start()
+        query = {'query': [DateTime('01/01/2010'), DateTime('01/01/2010')]}
+        self.assertTrue(
+            isinstance(modifier(query)[1]['query'][0], DateTime)
+        )
+
     def test_invalid_date(self):
         modifier = query_index_modifiers.start()
         query = {'query': 'foobar'}


