Repository: plone.batching


Branch: refs/heads/master
Date: 2023-02-07T11:56:09+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.batching/commit/b5c43207d2592271486acd48b213d75c8838c2ef

feat: enable GHA tests

Files changed:
M .meta.toml

b'diff --git a/.meta.toml b/.meta.toml\nindex ef9a045..3911af9 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -13,3 +13,6 @@ commit-id = "40520c52"\n mappings = [\n     "Zope = [\'Products.Five\', \'ZTUtils\']",\n     ]\n+\n+[tests]\n+gha = true\n'

Repository: plone.batching


Branch: refs/heads/master
Date: 2023-02-07T11:56:15+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.batching/commit/a44156b66f3084ca7b6ef9c135113ec0a742bc0a

Configuring with plone/meta

Files changed:
A .github/workflows/tests.yml
M .github/workflows/linting.yml
M .meta.toml
M lint-requirements.txt
M tox.ini

b'diff --git a/.github/workflows/linting.yml b/.github/workflows/linting.yml\nindex a2139a8..5ea3292 100644\n--- a/.github/workflows/linting.yml\n+++ b/.github/workflows/linting.yml\n@@ -9,8 +9,8 @@ on:\n   workflow_dispatch:\n \n jobs:\n-  test:\n-    name: Lint code\n+  lint:\n+    name: Format and lint code\n     runs-on: ${{ matrix.os }}\n     strategy:\n       matrix:\ndiff --git a/.github/workflows/tests.yml b/.github/workflows/tests.yml\nnew file mode 100644\nindex 0000000..67682c3\n--- /dev/null\n+++ b/.github/workflows/tests.yml\n@@ -0,0 +1,36 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+name: Testing\n+on:\n+  push:\n+    branches: [master]\n+  pull_request:\n+    branches: [master]\n+  workflow_dispatch:\n+\n+jobs:\n+  test:\n+    name: Run tests\n+    runs-on: ${{ matrix.os }}\n+    strategy:\n+      matrix:\n+        python-version: ["3.11"]\n+        os: ["ubuntu-22.04"]\n+    steps:\n+      - uses: actions/checkout@v3\n+      - name: Set up Python\n+        uses: actions/setup-python@v4\n+        with:\n+          python-version: ${{ matrix.python-version }}\n+      - name: Cache packages\n+        uses: actions/cache@v3\n+        with:\n+          path: ~/.cache/pip\n+          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles(\'tox.ini\') }}\n+          restore-keys: |\n+            ${{ runner.os }}-pip-${{ matrix.python-version }}-\n+            ${{ runner.os }}-pip-\n+      - name: Install dependencies\n+        run: python -m pip install tox\n+      - name: Run tests\n+        run: tox -e test\ndiff --git a/.meta.toml b/.meta.toml\nindex 3911af9..ec695e4 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -7,7 +7,7 @@ additional-ignores = [\n \n [meta]\n template = "default"\n-commit-id = "40520c52"\n+commit-id = "e2d8e55c"\n \n [dependencies]\n mappings = [\ndiff --git a/lint-requirements.txt b/lint-requirements.txt\nindex d2b64ff..2a91911 100644\n--- a/lint-requirements.txt\n+++ b/lint-requirements.txt\n@@ -5,6 +5,8 @@ check-manifest==0.49\n codespell==2.2.2\n flake8==6.0.0\n isort==5.11.4\n+pipdeptree==2.3.3\n pyroma==4.1\n pyupgrade==3.3.1\n z3c.dependencychecker==2.10\n+zpretty==2.4.1\ndiff --git a/tox.ini b/tox.ini\nindex c4810c9..80264a3 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -8,6 +8,8 @@ envlist =\n [testenv]\n py_files = git ls-files "*.py"\n text_files = git ls-files "*.rst" "*.md"\n+xml_files = git ls-files "*.xml"\n+zcml_files = git ls-files "*.zcml"\n allowlist_externals =\n     sh\n \n@@ -18,11 +20,14 @@ deps =\n     pyupgrade\n     isort\n     black\n+    zpretty\n     -c lint-requirements.txt\n commands =\n     sh -c \'{[testenv]py_files} | xargs pyupgrade --py38-plus\'\n     sh -c \'{[testenv]py_files} | xargs isort\'\n     sh -c \'{[testenv]py_files} | xargs black\'\n+    sh -c \'{[testenv]xml_files} | xargs zpretty -x -i || true\'\n+    sh -c \'{[testenv]zcml_files} | xargs zpretty -z -i || true\'\n \n [testenv:lint]\n description = run linters that will help improve the code style\n@@ -48,3 +53,23 @@ deps =\n     -c lint-requirements.txt\n commands =\n     dependencychecker\n+\n+[testenv:dependencies-graph]\n+description = generate a graph with the distribution dependencies\n+deps =\n+    pipdeptree\n+    graphviz  # optional dependency of pipdeptree\n+    -c lint-requirements.txt\n+commands =\n+    sh -c \'pipdeptree --exclude setuptools,pipdeptree,wheel --graph-output svg > dependencies.svg\'\n+\n+[testenv:test]\n+description = run the distribution\'s tests\n+deps =\n+    plone.batching[test]\n+    pytest\n+    gocept.pytestlayer\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    pip install -e .\n+    pytest\n'

Repository: plone.batching


Branch: refs/heads/master
Date: 2023-02-07T11:56:15+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.batching/commit/d7e3aa7851f0fce26d4e42e376c47f32f9ba3d08

chore: move tests.py to a tests folder

Otherwise `pytest` does not find it.

Files changed:
A plone/batching/tests/__init__.py
A plone/batching/tests/test_batching.py
D plone/batching/tests.py

b'diff --git a/plone/batching/tests/__init__.py b/plone/batching/tests/__init__.py\nnew file mode 100644\nindex 0000000..e69de29\ndiff --git a/plone/batching/tests.py b/plone/batching/tests/test_batching.py\nsimilarity index 100%\nrename from plone/batching/tests.py\nrename to plone/batching/tests/test_batching.py\n'

Repository: plone.batching


Branch: refs/heads/master
Date: 2023-02-07T11:56:15+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.batching/commit/2b119a611fe4329a3677d04105a8da93c0f24140

chore: zpretty formatting

Files changed:
M plone/batching/configure.zcml

b'diff --git a/plone/batching/configure.zcml b/plone/batching/configure.zcml\nindex c35317d..702da92 100644\n--- a/plone/batching/configure.zcml\n+++ b/plone/batching/configure.zcml\n@@ -1,8 +1,9 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n-    xmlns:five="http://namespaces.zope.org/five"\n     xmlns:browser="http://namespaces.zope.org/browser"\n-    i18n_domain="plone">\n+    xmlns:five="http://namespaces.zope.org/five"\n+    i18n_domain="plone"\n+    >\n \n   <five:registerPackage package="." />\n \n'

Repository: plone.batching


Branch: refs/heads/master
Date: 2023-02-07T11:56:15+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.batching/commit/0cda50771568980fa16c373f91ab04219bfa4893

Add news entry

Files changed:
A news/1.bugfix.1

b'diff --git a/news/1.bugfix.1 b/news/1.bugfix.1\nnew file mode 100644\nindex 0000000..7c7e9df\n--- /dev/null\n+++ b/news/1.bugfix.1\n@@ -0,0 +1,2 @@\n+Update tox configuration with dependencies test environments.\n+[gforcada]\n'

Repository: plone.batching


Branch: refs/heads/master
Date: 2023-02-07T15:13:02+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.batching/commit/101c0ed542be58ca171e7f1550b43d0695284105

Merge pull request #36 from plone/config-with-default-template-f797ea21

Config with default template (tests)

Files changed:
A .github/workflows/tests.yml
A news/1.bugfix.1
A plone/batching/tests/__init__.py
A plone/batching/tests/test_batching.py
M .github/workflows/linting.yml
M .meta.toml
M lint-requirements.txt
M plone/batching/configure.zcml
M tox.ini
D plone/batching/tests.py

b'diff --git a/.github/workflows/linting.yml b/.github/workflows/linting.yml\nindex a2139a8..5ea3292 100644\n--- a/.github/workflows/linting.yml\n+++ b/.github/workflows/linting.yml\n@@ -9,8 +9,8 @@ on:\n   workflow_dispatch:\n \n jobs:\n-  test:\n-    name: Lint code\n+  lint:\n+    name: Format and lint code\n     runs-on: ${{ matrix.os }}\n     strategy:\n       matrix:\ndiff --git a/.github/workflows/tests.yml b/.github/workflows/tests.yml\nnew file mode 100644\nindex 0000000..67682c3\n--- /dev/null\n+++ b/.github/workflows/tests.yml\n@@ -0,0 +1,36 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+name: Testing\n+on:\n+  push:\n+    branches: [master]\n+  pull_request:\n+    branches: [master]\n+  workflow_dispatch:\n+\n+jobs:\n+  test:\n+    name: Run tests\n+    runs-on: ${{ matrix.os }}\n+    strategy:\n+      matrix:\n+        python-version: ["3.11"]\n+        os: ["ubuntu-22.04"]\n+    steps:\n+      - uses: actions/checkout@v3\n+      - name: Set up Python\n+        uses: actions/setup-python@v4\n+        with:\n+          python-version: ${{ matrix.python-version }}\n+      - name: Cache packages\n+        uses: actions/cache@v3\n+        with:\n+          path: ~/.cache/pip\n+          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles(\'tox.ini\') }}\n+          restore-keys: |\n+            ${{ runner.os }}-pip-${{ matrix.python-version }}-\n+            ${{ runner.os }}-pip-\n+      - name: Install dependencies\n+        run: python -m pip install tox\n+      - name: Run tests\n+        run: tox -e test\ndiff --git a/.meta.toml b/.meta.toml\nindex ef9a045..ec695e4 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -7,9 +7,12 @@ additional-ignores = [\n \n [meta]\n template = "default"\n-commit-id = "40520c52"\n+commit-id = "e2d8e55c"\n \n [dependencies]\n mappings = [\n     "Zope = [\'Products.Five\', \'ZTUtils\']",\n     ]\n+\n+[tests]\n+gha = true\ndiff --git a/lint-requirements.txt b/lint-requirements.txt\nindex d2b64ff..2a91911 100644\n--- a/lint-requirements.txt\n+++ b/lint-requirements.txt\n@@ -5,6 +5,8 @@ check-manifest==0.49\n codespell==2.2.2\n flake8==6.0.0\n isort==5.11.4\n+pipdeptree==2.3.3\n pyroma==4.1\n pyupgrade==3.3.1\n z3c.dependencychecker==2.10\n+zpretty==2.4.1\ndiff --git a/news/1.bugfix.1 b/news/1.bugfix.1\nnew file mode 100644\nindex 0000000..7c7e9df\n--- /dev/null\n+++ b/news/1.bugfix.1\n@@ -0,0 +1,2 @@\n+Update tox configuration with dependencies test environments.\n+[gforcada]\ndiff --git a/plone/batching/configure.zcml b/plone/batching/configure.zcml\nindex c35317d..702da92 100644\n--- a/plone/batching/configure.zcml\n+++ b/plone/batching/configure.zcml\n@@ -1,8 +1,9 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n-    xmlns:five="http://namespaces.zope.org/five"\n     xmlns:browser="http://namespaces.zope.org/browser"\n-    i18n_domain="plone">\n+    xmlns:five="http://namespaces.zope.org/five"\n+    i18n_domain="plone"\n+    >\n \n   <five:registerPackage package="." />\n \ndiff --git a/plone/batching/tests/__init__.py b/plone/batching/tests/__init__.py\nnew file mode 100644\nindex 0000000..e69de29\ndiff --git a/plone/batching/tests.py b/plone/batching/tests/test_batching.py\nsimilarity index 100%\nrename from plone/batching/tests.py\nrename to plone/batching/tests/test_batching.py\ndiff --git a/tox.ini b/tox.ini\nindex c4810c9..80264a3 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -8,6 +8,8 @@ envlist =\n [testenv]\n py_files = git ls-files "*.py"\n text_files = git ls-files "*.rst" "*.md"\n+xml_files = git ls-files "*.xml"\n+zcml_files = git ls-files "*.zcml"\n allowlist_externals =\n     sh\n \n@@ -18,11 +20,14 @@ deps =\n     pyupgrade\n     isort\n     black\n+    zpretty\n     -c lint-requirements.txt\n commands =\n     sh -c \'{[testenv]py_files} | xargs pyupgrade --py38-plus\'\n     sh -c \'{[testenv]py_files} | xargs isort\'\n     sh -c \'{[testenv]py_files} | xargs black\'\n+    sh -c \'{[testenv]xml_files} | xargs zpretty -x -i || true\'\n+    sh -c \'{[testenv]zcml_files} | xargs zpretty -z -i || true\'\n \n [testenv:lint]\n description = run linters that will help improve the code style\n@@ -48,3 +53,23 @@ deps =\n     -c lint-requirements.txt\n commands =\n     dependencychecker\n+\n+[testenv:dependencies-graph]\n+description = generate a graph with the distribution dependencies\n+deps =\n+    pipdeptree\n+    graphviz  # optional dependency of pipdeptree\n+    -c lint-requirements.txt\n+commands =\n+    sh -c \'pipdeptree --exclude setuptools,pipdeptree,wheel --graph-output svg > dependencies.svg\'\n+\n+[testenv:test]\n+description = run the distribution\'s tests\n+deps =\n+    plone.batching[test]\n+    pytest\n+    gocept.pytestlayer\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    pip install -e .\n+    pytest\n'

