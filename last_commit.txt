Repository: plone.app.portlets


Branch: refs/heads/master
Date: 2016-07-05T23:13:07+02:00
Author: Gil Forcada (gforcada) <gforcada@gnome.org>
Commit: https://github.com/plone/plone.app.portlets/commit/67810436a5a933d0b0216b8a5df08e7fa921df2e

Use zope.interface decorator

This not only makes code more pleasent to read,
but also makes the code python 3 compatible
(while maintaining python 2 compatibility).

Files changed:
M CHANGES.rst
M plone/app/portlets/browser/adding.py
M plone/app/portlets/browser/editmanager.py
M plone/app/portlets/browser/formhelper.py
M plone/app/portlets/browser/manage.py
M plone/app/portlets/browser/traversal.py
M plone/app/portlets/checker.py
M plone/app/portlets/dashboard.py
M plone/app/portlets/exportimport/portlets.py
M plone/app/portlets/portletcontext.py
M plone/app/portlets/portlets/actions.py
M plone/app/portlets/portlets/base.py
M plone/app/portlets/portlets/classic.py
M plone/app/portlets/portlets/language.py
M plone/app/portlets/portlets/login.py
M plone/app/portlets/portlets/navigation.py
M plone/app/portlets/portlets/recent.py
M plone/app/portlets/portlets/review.py
M plone/app/portlets/portlets/rss.py
M plone/app/portlets/portlets/search.py
M plone/app/portlets/storage.py
M plone/app/portlets/tests/test_configuration.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 01a2dfc..12064ed 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -21,7 +21,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Use zope.interface decorator.
+  [gforcada]
 
 
 4.1.2 (2016-06-07)
diff --git a/plone/app/portlets/browser/adding.py b/plone/app/portlets/browser/adding.py
index e88879f..d4672b1 100644
--- a/plone/app/portlets/browser/adding.py
+++ b/plone/app/portlets/browser/adding.py
@@ -1,6 +1,6 @@
 from warnings import warn
 
-from zope.interface import implements
+from zope.interface import implementer
 from zope.component import getMultiAdapter
 
 from zope.container.interfaces import INameChooser
@@ -13,8 +13,8 @@
 from plone.app.portlets.interfaces import IPortletPermissionChecker
 
 
+@implementer(IPortletAdding)
 class PortletAdding(SimpleItem, BrowserView):
-    implements(IPortletAdding)
 
     context = None
     request = None
diff --git a/plone/app/portlets/browser/editmanager.py b/plone/app/portlets/browser/editmanager.py
index 811143c..392c899 100644
--- a/plone/app/portlets/browser/editmanager.py
+++ b/plone/app/portlets/browser/editmanager.py
@@ -12,7 +12,7 @@
 from plone.portlets.utils import hashPortletInfo
 
 from zope.container import contained
-from zope.interface import implements, Interface
+from zope.interface import implementer, Interface
 from zope.component import (
     adapts, getMultiAdapter, queryMultiAdapter, queryAdapter, getUtility)
 from zope.contentprovider.interfaces import UpdateNotCalled
@@ -36,6 +36,7 @@
 
 from plone.portlets.interfaces import IPortletAssignmentSettings
 
+@implementer(IPortletManagerRenderer)
 class EditPortletManagerRenderer(Explicit):
     """Render a portlet manager in edit mode.
 
@@ -43,7 +44,6 @@ class EditPortletManagerRenderer(Explicit):
     which assignments to display.
 
     """
-    implements(IPortletManagerRenderer)
     adapts(Interface, IDefaultBrowserLayer, IManageColumnPortletsView, IPortletManager)
 
     template = ViewPageTemplateFile('templates/edit-manager.pt')
diff --git a/plone/app/portlets/browser/formhelper.py b/plone/app/portlets/browser/formhelper.py
index e8579c6..2a98d14 100644
--- a/plone/app/portlets/browser/formhelper.py
+++ b/plone/app/portlets/browser/formhelper.py
@@ -1,7 +1,7 @@
 from z3c.form import button
 from z3c.form import form
 from zope.component import getMultiAdapter
-from zope.interface import implements
+from zope.interface import implementer
 import zope.event
 import zope.lifecycleevent
 
@@ -20,6 +20,7 @@
 from Products.statusmessages.interfaces import IStatusMessage
 
 
+@implementer(IPortletAddForm)
 class AddForm(AutoExtensibleForm, form.AddForm):
     """A base add form for portlets.
 
@@ -40,8 +41,6 @@ def create(self):
             return MyAssignment()
     """
 
-    implements(IPortletAddForm)
-
     template = ViewPageTemplateFile('templates/z3cform-portlets-pageform.pt')
 
     label = _(u"Configure portlet")
@@ -141,12 +140,11 @@ def create(self):
         raise NotImplementedError("concrete classes must implement create()")
 
 
+@implementer(IPortletEditForm)
 class EditForm(AutoExtensibleForm, form.EditForm):
     """An edit form for portlets.
     """
 
-    implements(IPortletEditForm)
-
     template = ViewPageTemplateFile('templates/z3cform-portlets-pageform.pt')
 
     label = _(u"Modify portlet")
diff --git a/plone/app/portlets/browser/manage.py b/plone/app/portlets/browser/manage.py
index 2476f3d..d3d13e6 100644
--- a/plone/app/portlets/browser/manage.py
+++ b/plone/app/portlets/browser/manage.py
@@ -1,5 +1,5 @@
-from zope.interface import implementsOnly
-from zope.interface import implements
+from zope.interface import implementer_only
+from zope.interface import implementer
 from zope.component import getMultiAdapter, getUtility
 from zope.publisher.interfaces.browser import IBrowserView
 
@@ -37,8 +37,8 @@
 from plone.protect.authenticator import createToken
 
 
+@implementer(IManageContextualPortletsView)
 class ManageContextualPortlets(BrowserView):
-    implements(IManageContextualPortletsView)
 
     def __init__(self, context, request):
         super(ManageContextualPortlets, self).__init__(context, request)
@@ -113,8 +113,8 @@ def convert_legacy_portlets(self):
         self.request.response.redirect(self.context.absolute_url() + '/@@manage-portlets')
 
 
+@implementer(IManageDashboardPortletsView)
 class ManageDashboardPortlets(BrowserView):
-    implements(IManageDashboardPortletsView)
 
     # IManagePortletsView implementation
 
@@ -164,8 +164,8 @@ def _getUserId(self):
         return memberId
 
 
+@implementer(IManageDashboardPortletsView)
 class ManageGroupDashboardPortlets(BrowserView):
-    implements(IManageDashboardPortletsView)
 
     @property
     def group(self):
@@ -201,8 +201,8 @@ def getAssignmentsForManager(self, manager):
         return mapping.values()
 
 
+@implementer(IManageGroupPortletsView)
 class ManageGroupPortlets(BrowserView):
-    implements(IManageGroupPortletsView)
 
     # IManagePortletsView implementation
 
@@ -244,8 +244,8 @@ def group(self):
         return self.request['key']
 
 
+@implementer(IManageContentTypePortletsView)
 class ManageContentTypePortlets(BrowserView):
-    implements(IManageContentTypePortletsView)
 
     def __init__(self, context, request):
         super(ManageContentTypePortlets, self).__init__(context, request)
@@ -299,6 +299,7 @@ def fti(self):
                 return fti
 
 
+@implementer(IManagePortletsView)
 class ManagePortletsViewlet(BrowserView):
     """A general base class for viewlets that want to be rendered on the
     manage portlets view. This makes it possible to have a viewlet that
@@ -307,7 +308,6 @@ class ManagePortletsViewlet(BrowserView):
     renderer is registered on IManagePortletsView, but inside a viewlet,
     the __parent__ is the viewlet, not the ultimate parent).
     """
-    implements(IManagePortletsView)
 
     def __init__(self, context, request, view, manager):
         super(ManagePortletsViewlet, self).__init__(context, request)
@@ -356,39 +356,30 @@ def ultimate_parent(self):
     # put these here)
 
 
+@implementer(IManageContextualPortletsView)
 class ManageContextualPortletsViewlet(ManagePortletsViewlet):
     """A viewlet base class for viewlets that need to render on the
     manage contextual portlets screen.
     """
-    implements(IManageContextualPortletsView)
 
 
+@implementer(IManageGroupPortletsView)
 class ManageGroupPortletsViewlet(ManagePortletsViewlet):
     """A viewlet base class for viewlets that need to render on the
     manage group portlets screen.
     """
-    implements(IManageGroupPortletsView)
 
 
+@implementer(IManageContentTypePortletsView)
 class ManageContentTypePortletsViewlet(ManagePortletsViewlet):
     """A viewlet base class for viewlets that need to render on the
     manage content type portlets screen.
     """
-    implements(IManageContentTypePortletsView)
 
 
+@implementer_only(ITopbarManagePortlets)
 class TopbarManagePortlets(ManageContextualPortlets):
 
-    # Pay attention here.
-    # We are removing IManageContextualPortletsView from here
-    # so we can disable showing ALL edit portlet managers
-    # on the page when it's rendered. This view, we only
-    # want to see one edit portlet manager at a time.
-    # We still inherit from ManageContextualPortlets because
-    # we need to reuse all the management actions of adding,
-    # hiding, moving, etc portlets.
-    implementsOnly(ITopbarManagePortlets)
-
     def __init__(self, context, request):
         super(TopbarManagePortlets, self).__init__(context, request)
         # Disable the left and right columns
diff --git a/plone/app/portlets/browser/traversal.py b/plone/app/portlets/browser/traversal.py
index 6e4c14e..f12670c 100644
--- a/plone/app/portlets/browser/traversal.py
+++ b/plone/app/portlets/browser/traversal.py
@@ -1,4 +1,4 @@
-from zope.interface import implements
+from zope.interface import implementer
 from zope.component import adapts, getUtility, getMultiAdapter
 
 from zope.traversing.interfaces import ITraversable
@@ -18,10 +18,10 @@
 from plone.app.portlets.storage import UserPortletAssignmentMapping
 from plone.app.portlets.storage import GroupDashboardPortletAssignmentMapping
 
+@implementer(ITraversable)
 class ContextPortletNamespace(object):
     """Used to traverse to a contextual portlet assignable
     """
-    implements(ITraversable)
     adapts(ILocalPortletAssignable, IHTTPRequest)
 
     def __init__(self, context, request=None):
@@ -33,11 +33,11 @@ def traverse(self, name, ignore):
         manager = getMultiAdapter((self.context, column,), IPortletAssignmentMapping)
         return manager
 
+@implementer(ITraversable)
 class DashboardNamespace(object):
     """Used to traverse to a portlet assignable for the current user for
     the dashboard.
     """
-    implements(ITraversable)
     adapts(ISiteRoot, IHTTPRequest)
 
     def __init__(self, context, request=None):
@@ -63,11 +63,10 @@ def traverse(self, name, ignore):
 
         return manager
 
+@implementer(ITraversable)
 class GroupDashboardNamespace(object):
     """Used to traverse to a portlet assignable for a group for the dashboard
     """
-
-    implements(ITraversable)
     adapts(ISiteRoot, IHTTPRequest)
 
     def __init__(self, context, request=None):
@@ -86,10 +85,10 @@ def traverse(self, name, ignore):
                                                        name=group)
         return manager
 
+@implementer(ITraversable)
 class GroupPortletNamespace(object):
     """Used to traverse to a group portlet assignable
     """
-    implements(ITraversable)
     adapts(ISiteRoot, IHTTPRequest)
 
     def __init__(self, context, request=None):
@@ -116,10 +115,10 @@ def traverse(self, name, ignore):
 
         return manager
 
+@implementer(ITraversable)
 class ContentTypePortletNamespace(object):
     """Used to traverse to a content type portlet assignable
     """
-    implements(ITraversable)
     adapts(ISiteRoot, IHTTPRequest)
 
     def __init__(self, context, request=None):
diff --git a/plone/app/portlets/checker.py b/plone/app/portlets/checker.py
index 31ba32b..2955bf4 100644
--- a/plone/app/portlets/checker.py
+++ b/plone/app/portlets/checker.py
@@ -1,4 +1,4 @@
-from zope.interface import implements
+from zope.interface import implementer
 from zope.component import adapts
 
 from plone.portlets.interfaces import IPortletAssignmentMapping
@@ -11,8 +11,8 @@
 from Acquisition import aq_inner
 
 
+@implementer(IPortletPermissionChecker)
 class DefaultPortletPermissionChecker(object):
-    implements(IPortletPermissionChecker)
     adapts(IPortletAssignmentMapping)
 
     def __init__(self, context):
@@ -28,8 +28,8 @@ def __call__(self):
             raise Unauthorized("You are not allowed to manage portlets")
 
 
+@implementer(IPortletPermissionChecker)
 class UserPortletPermissionChecker(object):
-    implements(IPortletPermissionChecker)
     adapts(IUserPortletAssignmentMapping)
 
     def __init__(self, context):
@@ -50,8 +50,8 @@ def __call__(self):
             raise Unauthorized("You are only allowed to manage your own portlets")
 
 
+@implementer(IPortletPermissionChecker)
 class GroupDashboardPortletPermissionChecker(object):
-    implements(IPortletPermissionChecker)
     adapts(IGroupDashboardPortletAssignmentMapping)
 
     def __init__(self, context):
diff --git a/plone/app/portlets/dashboard.py b/plone/app/portlets/dashboard.py
index c3f7017..f7afb44 100644
--- a/plone/app/portlets/dashboard.py
+++ b/plone/app/portlets/dashboard.py
@@ -1,4 +1,4 @@
-from zope.interface import implements
+from zope.interface import implementer
 from zope.component import adapts, queryUtility
 
 from zope.container.interfaces import INameChooser
@@ -41,11 +41,10 @@ def new_user(principal, event):
                         manager[chooser.chooseName(None, assignment)] = assignment
 
 
+@implementer(IDefaultDashboard)
 class DefaultDashboard(object):
     """The default default dashboard.
     """
-
-    implements(IDefaultDashboard)
     adapts(IPropertiedUser)
 
     def __init__(self, principal):
diff --git a/plone/app/portlets/exportimport/portlets.py b/plone/app/portlets/exportimport/portlets.py
index 5d0092b..5122e79 100644
--- a/plone/app/portlets/exportimport/portlets.py
+++ b/plone/app/portlets/exportimport/portlets.py
@@ -78,7 +78,7 @@
 
 from operator import attrgetter
 
-from zope.interface import implements
+from zope.interface import implementer
 from zope.interface import Interface
 from zope.interface import alsoProvides
 from zope.interface import providedBy
@@ -142,8 +142,8 @@ def dummyGetId():
 
 if HAS_BLACKLIST:
 
+    @implementer(IComponentsHandlerBlacklist)
     class Blacklist(object):
-        implements(IComponentsHandlerBlacklist)
 
         def getExcludedInterfaces(self):
             return (_getDottedName(IPortletType),
@@ -152,11 +152,10 @@ def getExcludedInterfaces(self):
                     )
 
 
+@implementer(IPortletAssignmentExportImportHandler)
 class PropertyPortletAssignmentExportImportHandler(object):
     """Import portlet assignment settings based on zope.schema properties
     """
-
-    implements(IPortletAssignmentExportImportHandler)
     adapts(Interface)
 
     def __init__(self, assignment):
@@ -273,10 +272,10 @@ def field_typecast(self, field, value):
         return value
 
 
+@implementer(IBody)
 class PortletsXMLAdapter(XMLAdapterBase):
     """In- and exporter for a local portlet configuration
     """
-    implements(IBody)
     adapts(IComponentRegistry, ISetupEnviron)
 
     name = 'portlets'
diff --git a/plone/app/portlets/portletcontext.py b/plone/app/portlets/portletcontext.py
index 4042aab..85679b2 100644
--- a/plone/app/portlets/portletcontext.py
+++ b/plone/app/portlets/portletcontext.py
@@ -1,6 +1,6 @@
 from types import StringTypes
 
-from zope.interface import implements, Interface
+from zope.interface import implementer, Interface
 from zope.component import adapts
 
 from Acquisition import aq_parent, aq_inner, aq_base
@@ -14,6 +14,7 @@
 from plone.portlets.constants import CONTENT_TYPE_CATEGORY
 
 
+@implementer(IPortletContext)
 class ContentContext(object):
     """A portlet context for regular content items.
 
@@ -21,7 +22,6 @@ class ContentContext(object):
     tools and other non-content items. This may hijack the context in non-CMF
     contexts, but that is doubtfully going to be an issue.
     """
-    implements(IPortletContext)
     adapts(Interface)
 
     def __init__(self, context):
@@ -102,11 +102,10 @@ def _getContentType(self):
         return None
 
 
+@implementer(IPortletContext)
 class PortalRootContext(ContentContext):
     """A portlet context for the site root.
     """
-
-    implements(IPortletContext)
     adapts(ISiteRoot)
 
     def __init__(self, context):
diff --git a/plone/app/portlets/portlets/actions.py b/plone/app/portlets/portlets/actions.py
index 63c45a5..b43e8e9 100644
--- a/plone/app/portlets/portlets/actions.py
+++ b/plone/app/portlets/portlets/actions.py
@@ -9,7 +9,7 @@
 from zope import schema
 from zope.component import getMultiAdapter
 from zope.component import getUtility
-from zope.interface import implements
+from zope.interface import implementer
 
 
 class IActionsPortlet(IPortletDataProvider):
@@ -56,14 +56,13 @@ class IActionsPortlet(IPortletDataProvider):
         default='action_icon.png')
 
 
+@implementer(IActionsPortlet)
 class Assignment(base.Assignment):
     """Portlet assignment.
     This is what is actually managed through the portlets UI and associated
     with columns.
     """
 
-    implements(IActionsPortlet)
-
     ptitle = u""
     show_title = True
     category = u""
diff --git a/plone/app/portlets/portlets/base.py b/plone/app/portlets/portlets/base.py
index 84bb600..2cc4ad5 100644
--- a/plone/app/portlets/portlets/base.py
+++ b/plone/app/portlets/portlets/base.py
@@ -5,7 +5,7 @@
 from plone.portlets.interfaces import IPortletRenderer
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
 from zope.container.contained import Contained
-from zope.interface import implements
+from zope.interface import implementer
 
 # Convenience imports
 from plone.app.portlets.browser.formhelper import AddForm
@@ -13,6 +13,7 @@
 from plone.app.portlets.browser.formhelper import EditForm
 
 
+@implementer(IPortletAssignment)
 class Assignment(SimpleItem, Contained):
     """Base class for assignments.
 
@@ -20,8 +21,6 @@ class Assignment(SimpleItem, Contained):
     may
     """
 
-    implements(IPortletAssignment)
-
     __name__ = ''
 
     @property
@@ -44,6 +43,7 @@ def data(self):
         return self
 
 
+@implementer(IPortletRenderer)
 class Renderer(Explicit):
     """Base class for portlet renderers.
 
@@ -58,8 +58,6 @@ class Renderer(Explicit):
     as your source code file.
     """
 
-    implements(IPortletRenderer)
-
     def __init__(self, context, request, view, manager, data):
         self.context = context
         self.request = request
@@ -82,6 +80,7 @@ def available(self):
         return True
 
 
+@implementer(IDeferredPortletRenderer)
 class DeferredRenderer(Renderer):
     """provide defer functionality via KSS
 
@@ -89,8 +88,6 @@ class DeferredRenderer(Renderer):
 
     """
 
-    implements(IDeferredPortletRenderer)
-
     render_preload = ViewPageTemplateFile('deferred_portlet.pt')
 
     def render_full(self):
diff --git a/plone/app/portlets/portlets/classic.py b/plone/app/portlets/portlets/classic.py
index 0d01cca..707d1e0 100644
--- a/plone/app/portlets/portlets/classic.py
+++ b/plone/app/portlets/portlets/classic.py
@@ -3,7 +3,7 @@
 from plone.portlets.interfaces import IPortletDataProvider
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
 from zope import schema
-from zope.interface import implements
+from zope.interface import implementer
 
 
 class IClassicPortlet(IPortletDataProvider):
@@ -23,8 +23,8 @@ class IClassicPortlet(IPortletDataProvider):
         required=False)
 
 
+@implementer(IClassicPortlet)
 class Assignment(base.Assignment):
-    implements(IClassicPortlet)
 
     def __init__(self, template='', macro=''):
         self.template = template
diff --git a/plone/app/portlets/portlets/language.py b/plone/app/portlets/portlets/language.py
index b4b6872..31f9678 100644
--- a/plone/app/portlets/portlets/language.py
+++ b/plone/app/portlets/portlets/language.py
@@ -4,7 +4,7 @@
 from plone.portlets.interfaces import IPortletDataProvider
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
 from zope.component import getMultiAdapter
-from zope.interface import implements
+from zope.interface import implementer
 
 
 class ILanguagePortlet(IPortletDataProvider):
@@ -12,8 +12,8 @@ class ILanguagePortlet(IPortletDataProvider):
     """
 
 
+@implementer(ILanguagePortlet)
 class Assignment(base.Assignment):
-    implements(ILanguagePortlet)
 
     title = _(u'label_languages', default=u'Languages')
 
diff --git a/plone/app/portlets/portlets/login.py b/plone/app/portlets/portlets/login.py
index 4858ad0..0486458 100644
--- a/plone/app/portlets/portlets/login.py
+++ b/plone/app/portlets/portlets/login.py
@@ -5,7 +5,7 @@
 from Products.CMFCore.utils import getToolByName
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
 from zope.component import getMultiAdapter
-from zope.interface import implements
+from zope.interface import implementer
 
 
 class ILoginPortlet(IPortletDataProvider):
@@ -13,8 +13,8 @@ class ILoginPortlet(IPortletDataProvider):
     """
 
 
+@implementer(ILoginPortlet)
 class Assignment(base.Assignment):
-    implements(ILoginPortlet)
 
     title = _(u'label_log_in', default=u'Log in')
 
diff --git a/plone/app/portlets/portlets/navigation.py b/plone/app/portlets/portlets/navigation.py
index 3eb7f6a..48d7fde 100644
--- a/plone/app/portlets/portlets/navigation.py
+++ b/plone/app/portlets/portlets/navigation.py
@@ -27,7 +27,7 @@
 from zope import schema
 from zope.component import adapts, getMultiAdapter, queryUtility
 from zope.component import getUtility
-from zope.interface import implements, Interface
+from zope.interface import implementer, Interface
 
 
 class INavigationPortlet(IPortletDataProvider):
@@ -96,8 +96,8 @@ class INavigationPortlet(IPortletDataProvider):
             required=False)
 
 
+@implementer(INavigationPortlet)
 class Assignment(base.Assignment):
-    implements(INavigationPortlet)
 
     name = ""
     root = None
@@ -308,11 +308,11 @@ class EditForm(base.EditForm):
     description = _(u"This portlet displays a navigation tree.")
 
 
+@implementer(INavigationQueryBuilder)
 class QueryBuilder(object):
     """Build a navtree query based on the settings in INavigationSchema
     and those set on the portlet.
     """
-    implements(INavigationQueryBuilder)
     adapts(Interface, INavigationPortlet)
 
     def __init__(self, context, portlet):
@@ -379,10 +379,10 @@ def __call__(self):
         return self.query
 
 
+@implementer(INavtreeStrategy)
 class NavtreeStrategy(SitemapNavtreeStrategy):
     """The navtree strategy used for the default navigation portlet
     """
-    implements(INavtreeStrategy)
     adapts(Interface, INavigationPortlet)
 
     def __init__(self, context, portlet):
diff --git a/plone/app/portlets/portlets/recent.py b/plone/app/portlets/portlets/recent.py
index 0015078..7de2656 100644
--- a/plone/app/portlets/portlets/recent.py
+++ b/plone/app/portlets/portlets/recent.py
@@ -9,7 +9,7 @@
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
 from zope import schema
 from zope.component import getMultiAdapter
-from zope.interface import implements
+from zope.interface import implementer
 
 
 class IRecentPortlet(IPortletDataProvider):
@@ -21,8 +21,8 @@ class IRecentPortlet(IPortletDataProvider):
                        min=1)
 
 
+@implementer(IRecentPortlet)
 class Assignment(base.Assignment):
-    implements(IRecentPortlet)
 
     def __init__(self, count=5):
         self.count = count
diff --git a/plone/app/portlets/portlets/review.py b/plone/app/portlets/portlets/review.py
index 340c132..9591e4c 100644
--- a/plone/app/portlets/portlets/review.py
+++ b/plone/app/portlets/portlets/review.py
@@ -8,15 +8,15 @@
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
 from zope.component import getMultiAdapter
 from zope.component import queryUtility
-from zope.interface import implements
+from zope.interface import implementer
 
 
 class IReviewPortlet(IPortletDataProvider):
     pass
 
 
+@implementer(IReviewPortlet)
 class Assignment(base.Assignment):
-    implements(IReviewPortlet)
 
     @property
     def title(self):
diff --git a/plone/app/portlets/portlets/rss.py b/plone/app/portlets/portlets/rss.py
index f65aeca..8e32db5 100644
--- a/plone/app/portlets/portlets/rss.py
+++ b/plone/app/portlets/portlets/rss.py
@@ -6,7 +6,7 @@
 from plone.portlets.interfaces import IPortletDataProvider
 from Products.Five.browser.pagetemplatefile import ZopeTwoPageTemplateFile
 from zope import schema
-from zope.interface import implements, Interface
+from zope.interface import implementer, Interface
 import feedparser
 import time
 
@@ -64,9 +64,9 @@ def ok():
         """is this feed ok to display?"""
 
 
+@implementer(IFeed)
 class RSSFeed(object):
     """an RSS feed"""
-    implements(IFeed)
 
     def __init__(self, url, timeout):
         self.url = url
@@ -253,8 +253,8 @@ class IRSSPortlet(IPortletDataProvider):
         default=100)
 
 
+@implementer(IRSSPortlet)
 class Assignment(base.Assignment):
-    implements(IRSSPortlet)
 
     portlet_title = u''
 
diff --git a/plone/app/portlets/portlets/search.py b/plone/app/portlets/portlets/search.py
index 0e202f1..130673a 100644
--- a/plone/app/portlets/portlets/search.py
+++ b/plone/app/portlets/portlets/search.py
@@ -5,7 +5,7 @@
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
 from zope import schema
 from zope.component import getMultiAdapter
-from zope.interface import implements
+from zope.interface import implementer
 
 
 class ISearchPortlet(IPortletDataProvider):
@@ -21,8 +21,8 @@ class ISearchPortlet(IPortletDataProvider):
         required=False)
 
 
+@implementer(ISearchPortlet)
 class Assignment(base.Assignment):
-    implements(ISearchPortlet)
 
     def __init__(self, enableLivesearch=True):
         self.enableLivesearch = enableLivesearch
diff --git a/plone/app/portlets/storage.py b/plone/app/portlets/storage.py
index b3002f9..180111c 100644
--- a/plone/app/portlets/storage.py
+++ b/plone/app/portlets/storage.py
@@ -1,5 +1,5 @@
 from zope.annotation.interfaces import IAnnotations
-from zope.interface import implements
+from zope.interface import implementer
 from zope.component import adapts
 from zope.component import getUtility
 
@@ -76,19 +76,17 @@ def __setitem__(self, key, assignment):
         BaseMapping.__setitem__(self, key, aq_base(assignment))
 
 
+@implementer(IUserPortletAssignmentMapping)
 class UserPortletAssignmentMapping(PortletAssignmentMapping):
     """An assignment mapping for user/dashboard portlets
     """
 
-    implements(IUserPortletAssignmentMapping)
-
 
+@implementer(IGroupDashboardPortletAssignmentMapping)
 class GroupDashboardPortletAssignmentMapping(PortletAssignmentMapping):
     """An assignment mapping for group dashboard portlets
     """
 
-    implements(IGroupDashboardPortletAssignmentMapping)
-
     @property
     def id(self):
         manager = self.__manager__
@@ -97,10 +95,10 @@ def id(self):
         return "++groupdashboard++%s+%s" % (manager, key)
 
 
+@implementer(IBrowserPublisher)
 class PortletAssignmentMappingTraverser(ItemTraverser):
     """A traverser for portlet assignment mappings, that is acqusition-aware
     """
-    implements(IBrowserPublisher)
     adapts(IPortletAssignmentMapping, IDefaultBrowserLayer)
 
     def publishTraverse(self, request, name):
@@ -108,12 +106,11 @@ def publishTraverse(self, request, name):
         return ob.__of__(self.context)
 
 
+@implementer(INameChooser)
 class PortletsNameChooser(NameChooser):
     """A name chooser for portlets
     """
 
-    implements(INameChooser)
-
     def __init__(self, context):
         self.context = context
 
diff --git a/plone/app/portlets/tests/test_configuration.py b/plone/app/portlets/tests/test_configuration.py
index fe7ed25..f7e54bb 100644
--- a/plone/app/portlets/tests/test_configuration.py
+++ b/plone/app/portlets/tests/test_configuration.py
@@ -52,7 +52,7 @@ class DummyView(BrowserView):
 
 # A sample portlet
 
-from zope.interface import implements
+from zope.interface import implementer
 from zope import schema
 
 from plone.portlets.interfaces import IPortletDataProvider
@@ -66,8 +66,8 @@ class ITestPortlet(IPortletDataProvider):
                               value_type=schema.Choice(vocabulary="plone.app.vocabularies.WorkflowStates"))
 
 
+@implementer(ITestPortlet)
 class TestAssignment(base.Assignment):
-    implements(ITestPortlet)
 
     test_text = None
     test_bool = None


Repository: plone.app.portlets


Branch: refs/heads/master
Date: 2016-07-10T08:54:23+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.portlets/commit/a181431f5f4608a91eb8352f2a40276ecc317122

Merge pull request #78 from plone/gforcada-use-zope-decorators

Use zope.interface decorator

Files changed:
M CHANGES.rst
M plone/app/portlets/browser/adding.py
M plone/app/portlets/browser/editmanager.py
M plone/app/portlets/browser/formhelper.py
M plone/app/portlets/browser/manage.py
M plone/app/portlets/browser/traversal.py
M plone/app/portlets/checker.py
M plone/app/portlets/dashboard.py
M plone/app/portlets/exportimport/portlets.py
M plone/app/portlets/portletcontext.py
M plone/app/portlets/portlets/actions.py
M plone/app/portlets/portlets/base.py
M plone/app/portlets/portlets/classic.py
M plone/app/portlets/portlets/language.py
M plone/app/portlets/portlets/login.py
M plone/app/portlets/portlets/navigation.py
M plone/app/portlets/portlets/recent.py
M plone/app/portlets/portlets/review.py
M plone/app/portlets/portlets/rss.py
M plone/app/portlets/portlets/search.py
M plone/app/portlets/storage.py
M plone/app/portlets/tests/test_configuration.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 01a2dfc..12064ed 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -21,7 +21,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Use zope.interface decorator.
+  [gforcada]
 
 
 4.1.2 (2016-06-07)
diff --git a/plone/app/portlets/browser/adding.py b/plone/app/portlets/browser/adding.py
index e88879f..d4672b1 100644
--- a/plone/app/portlets/browser/adding.py
+++ b/plone/app/portlets/browser/adding.py
@@ -1,6 +1,6 @@
 from warnings import warn
 
-from zope.interface import implements
+from zope.interface import implementer
 from zope.component import getMultiAdapter
 
 from zope.container.interfaces import INameChooser
@@ -13,8 +13,8 @@
 from plone.app.portlets.interfaces import IPortletPermissionChecker
 
 
+@implementer(IPortletAdding)
 class PortletAdding(SimpleItem, BrowserView):
-    implements(IPortletAdding)
 
     context = None
     request = None
diff --git a/plone/app/portlets/browser/editmanager.py b/plone/app/portlets/browser/editmanager.py
index 811143c..392c899 100644
--- a/plone/app/portlets/browser/editmanager.py
+++ b/plone/app/portlets/browser/editmanager.py
@@ -12,7 +12,7 @@
 from plone.portlets.utils import hashPortletInfo
 
 from zope.container import contained
-from zope.interface import implements, Interface
+from zope.interface import implementer, Interface
 from zope.component import (
     adapts, getMultiAdapter, queryMultiAdapter, queryAdapter, getUtility)
 from zope.contentprovider.interfaces import UpdateNotCalled
@@ -36,6 +36,7 @@
 
 from plone.portlets.interfaces import IPortletAssignmentSettings
 
+@implementer(IPortletManagerRenderer)
 class EditPortletManagerRenderer(Explicit):
     """Render a portlet manager in edit mode.
 
@@ -43,7 +44,6 @@ class EditPortletManagerRenderer(Explicit):
     which assignments to display.
 
     """
-    implements(IPortletManagerRenderer)
     adapts(Interface, IDefaultBrowserLayer, IManageColumnPortletsView, IPortletManager)
 
     template = ViewPageTemplateFile('templates/edit-manager.pt')
diff --git a/plone/app/portlets/browser/formhelper.py b/plone/app/portlets/browser/formhelper.py
index e8579c6..2a98d14 100644
--- a/plone/app/portlets/browser/formhelper.py
+++ b/plone/app/portlets/browser/formhelper.py
@@ -1,7 +1,7 @@
 from z3c.form import button
 from z3c.form import form
 from zope.component import getMultiAdapter
-from zope.interface import implements
+from zope.interface import implementer
 import zope.event
 import zope.lifecycleevent
 
@@ -20,6 +20,7 @@
 from Products.statusmessages.interfaces import IStatusMessage
 
 
+@implementer(IPortletAddForm)
 class AddForm(AutoExtensibleForm, form.AddForm):
     """A base add form for portlets.
 
@@ -40,8 +41,6 @@ def create(self):
             return MyAssignment()
     """
 
-    implements(IPortletAddForm)
-
     template = ViewPageTemplateFile('templates/z3cform-portlets-pageform.pt')
 
     label = _(u"Configure portlet")
@@ -141,12 +140,11 @@ def create(self):
         raise NotImplementedError("concrete classes must implement create()")
 
 
+@implementer(IPortletEditForm)
 class EditForm(AutoExtensibleForm, form.EditForm):
     """An edit form for portlets.
     """
 
-    implements(IPortletEditForm)
-
     template = ViewPageTemplateFile('templates/z3cform-portlets-pageform.pt')
 
     label = _(u"Modify portlet")
diff --git a/plone/app/portlets/browser/manage.py b/plone/app/portlets/browser/manage.py
index 2476f3d..d3d13e6 100644
--- a/plone/app/portlets/browser/manage.py
+++ b/plone/app/portlets/browser/manage.py
@@ -1,5 +1,5 @@
-from zope.interface import implementsOnly
-from zope.interface import implements
+from zope.interface import implementer_only
+from zope.interface import implementer
 from zope.component import getMultiAdapter, getUtility
 from zope.publisher.interfaces.browser import IBrowserView
 
@@ -37,8 +37,8 @@
 from plone.protect.authenticator import createToken
 
 
+@implementer(IManageContextualPortletsView)
 class ManageContextualPortlets(BrowserView):
-    implements(IManageContextualPortletsView)
 
     def __init__(self, context, request):
         super(ManageContextualPortlets, self).__init__(context, request)
@@ -113,8 +113,8 @@ def convert_legacy_portlets(self):
         self.request.response.redirect(self.context.absolute_url() + '/@@manage-portlets')
 
 
+@implementer(IManageDashboardPortletsView)
 class ManageDashboardPortlets(BrowserView):
-    implements(IManageDashboardPortletsView)
 
     # IManagePortletsView implementation
 
@@ -164,8 +164,8 @@ def _getUserId(self):
         return memberId
 
 
+@implementer(IManageDashboardPortletsView)
 class ManageGroupDashboardPortlets(BrowserView):
-    implements(IManageDashboardPortletsView)
 
     @property
     def group(self):
@@ -201,8 +201,8 @@ def getAssignmentsForManager(self, manager):
         return mapping.values()
 
 
+@implementer(IManageGroupPortletsView)
 class ManageGroupPortlets(BrowserView):
-    implements(IManageGroupPortletsView)
 
     # IManagePortletsView implementation
 
@@ -244,8 +244,8 @@ def group(self):
         return self.request['key']
 
 
+@implementer(IManageContentTypePortletsView)
 class ManageContentTypePortlets(BrowserView):
-    implements(IManageContentTypePortletsView)
 
     def __init__(self, context, request):
         super(ManageContentTypePortlets, self).__init__(context, request)
@@ -299,6 +299,7 @@ def fti(self):
                 return fti
 
 
+@implementer(IManagePortletsView)
 class ManagePortletsViewlet(BrowserView):
     """A general base class for viewlets that want to be rendered on the
     manage portlets view. This makes it possible to have a viewlet that
@@ -307,7 +308,6 @@ class ManagePortletsViewlet(BrowserView):
     renderer is registered on IManagePortletsView, but inside a viewlet,
     the __parent__ is the viewlet, not the ultimate parent).
     """
-    implements(IManagePortletsView)
 
     def __init__(self, context, request, view, manager):
         super(ManagePortletsViewlet, self).__init__(context, request)
@@ -356,39 +356,30 @@ def ultimate_parent(self):
     # put these here)
 
 
+@implementer(IManageContextualPortletsView)
 class ManageContextualPortletsViewlet(ManagePortletsViewlet):
     """A viewlet base class for viewlets that need to render on the
     manage contextual portlets screen.
     """
-    implements(IManageContextualPortletsView)
 
 
+@implementer(IManageGroupPortletsView)
 class ManageGroupPortletsViewlet(ManagePortletsViewlet):
     """A viewlet base class for viewlets that need to render on the
     manage group portlets screen.
     """
-    implements(IManageGroupPortletsView)
 
 
+@implementer(IManageContentTypePortletsView)
 class ManageContentTypePortletsViewlet(ManagePortletsViewlet):
     """A viewlet base class for viewlets that need to render on the
     manage content type portlets screen.
     """
-    implements(IManageContentTypePortletsView)
 
 
+@implementer_only(ITopbarManagePortlets)
 class TopbarManagePortlets(ManageContextualPortlets):
 
-    # Pay attention here.
-    # We are removing IManageContextualPortletsView from here
-    # so we can disable showing ALL edit portlet managers
-    # on the page when it's rendered. This view, we only
-    # want to see one edit portlet manager at a time.
-    # We still inherit from ManageContextualPortlets because
-    # we need to reuse all the management actions of adding,
-    # hiding, moving, etc portlets.
-    implementsOnly(ITopbarManagePortlets)
-
     def __init__(self, context, request):
         super(TopbarManagePortlets, self).__init__(context, request)
         # Disable the left and right columns
diff --git a/plone/app/portlets/browser/traversal.py b/plone/app/portlets/browser/traversal.py
index 6e4c14e..f12670c 100644
--- a/plone/app/portlets/browser/traversal.py
+++ b/plone/app/portlets/browser/traversal.py
@@ -1,4 +1,4 @@
-from zope.interface import implements
+from zope.interface import implementer
 from zope.component import adapts, getUtility, getMultiAdapter
 
 from zope.traversing.interfaces import ITraversable
@@ -18,10 +18,10 @@
 from plone.app.portlets.storage import UserPortletAssignmentMapping
 from plone.app.portlets.storage import GroupDashboardPortletAssignmentMapping
 
+@implementer(ITraversable)
 class ContextPortletNamespace(object):
     """Used to traverse to a contextual portlet assignable
     """
-    implements(ITraversable)
     adapts(ILocalPortletAssignable, IHTTPRequest)
 
     def __init__(self, context, request=None):
@@ -33,11 +33,11 @@ def traverse(self, name, ignore):
         manager = getMultiAdapter((self.context, column,), IPortletAssignmentMapping)
         return manager
 
+@implementer(ITraversable)
 class DashboardNamespace(object):
     """Used to traverse to a portlet assignable for the current user for
     the dashboard.
     """
-    implements(ITraversable)
     adapts(ISiteRoot, IHTTPRequest)
 
     def __init__(self, context, request=None):
@@ -63,11 +63,10 @@ def traverse(self, name, ignore):
 
         return manager
 
+@implementer(ITraversable)
 class GroupDashboardNamespace(object):
     """Used to traverse to a portlet assignable for a group for the dashboard
     """
-
-    implements(ITraversable)
     adapts(ISiteRoot, IHTTPRequest)
 
     def __init__(self, context, request=None):
@@ -86,10 +85,10 @@ def traverse(self, name, ignore):
                                                        name=group)
         return manager
 
+@implementer(ITraversable)
 class GroupPortletNamespace(object):
     """Used to traverse to a group portlet assignable
     """
-    implements(ITraversable)
     adapts(ISiteRoot, IHTTPRequest)
 
     def __init__(self, context, request=None):
@@ -116,10 +115,10 @@ def traverse(self, name, ignore):
 
         return manager
 
+@implementer(ITraversable)
 class ContentTypePortletNamespace(object):
     """Used to traverse to a content type portlet assignable
     """
-    implements(ITraversable)
     adapts(ISiteRoot, IHTTPRequest)
 
     def __init__(self, context, request=None):
diff --git a/plone/app/portlets/checker.py b/plone/app/portlets/checker.py
index 31ba32b..2955bf4 100644
--- a/plone/app/portlets/checker.py
+++ b/plone/app/portlets/checker.py
@@ -1,4 +1,4 @@
-from zope.interface import implements
+from zope.interface import implementer
 from zope.component import adapts
 
 from plone.portlets.interfaces import IPortletAssignmentMapping
@@ -11,8 +11,8 @@
 from Acquisition import aq_inner
 
 
+@implementer(IPortletPermissionChecker)
 class DefaultPortletPermissionChecker(object):
-    implements(IPortletPermissionChecker)
     adapts(IPortletAssignmentMapping)
 
     def __init__(self, context):
@@ -28,8 +28,8 @@ def __call__(self):
             raise Unauthorized("You are not allowed to manage portlets")
 
 
+@implementer(IPortletPermissionChecker)
 class UserPortletPermissionChecker(object):
-    implements(IPortletPermissionChecker)
     adapts(IUserPortletAssignmentMapping)
 
     def __init__(self, context):
@@ -50,8 +50,8 @@ def __call__(self):
             raise Unauthorized("You are only allowed to manage your own portlets")
 
 
+@implementer(IPortletPermissionChecker)
 class GroupDashboardPortletPermissionChecker(object):
-    implements(IPortletPermissionChecker)
     adapts(IGroupDashboardPortletAssignmentMapping)
 
     def __init__(self, context):
diff --git a/plone/app/portlets/dashboard.py b/plone/app/portlets/dashboard.py
index c3f7017..f7afb44 100644
--- a/plone/app/portlets/dashboard.py
+++ b/plone/app/portlets/dashboard.py
@@ -1,4 +1,4 @@
-from zope.interface import implements
+from zope.interface import implementer
 from zope.component import adapts, queryUtility
 
 from zope.container.interfaces import INameChooser
@@ -41,11 +41,10 @@ def new_user(principal, event):
                         manager[chooser.chooseName(None, assignment)] = assignment
 
 
+@implementer(IDefaultDashboard)
 class DefaultDashboard(object):
     """The default default dashboard.
     """
-
-    implements(IDefaultDashboard)
     adapts(IPropertiedUser)
 
     def __init__(self, principal):
diff --git a/plone/app/portlets/exportimport/portlets.py b/plone/app/portlets/exportimport/portlets.py
index 5d0092b..5122e79 100644
--- a/plone/app/portlets/exportimport/portlets.py
+++ b/plone/app/portlets/exportimport/portlets.py
@@ -78,7 +78,7 @@
 
 from operator import attrgetter
 
-from zope.interface import implements
+from zope.interface import implementer
 from zope.interface import Interface
 from zope.interface import alsoProvides
 from zope.interface import providedBy
@@ -142,8 +142,8 @@ def dummyGetId():
 
 if HAS_BLACKLIST:
 
+    @implementer(IComponentsHandlerBlacklist)
     class Blacklist(object):
-        implements(IComponentsHandlerBlacklist)
 
         def getExcludedInterfaces(self):
             return (_getDottedName(IPortletType),
@@ -152,11 +152,10 @@ def getExcludedInterfaces(self):
                     )
 
 
+@implementer(IPortletAssignmentExportImportHandler)
 class PropertyPortletAssignmentExportImportHandler(object):
     """Import portlet assignment settings based on zope.schema properties
     """
-
-    implements(IPortletAssignmentExportImportHandler)
     adapts(Interface)
 
     def __init__(self, assignment):
@@ -273,10 +272,10 @@ def field_typecast(self, field, value):
         return value
 
 
+@implementer(IBody)
 class PortletsXMLAdapter(XMLAdapterBase):
     """In- and exporter for a local portlet configuration
     """
-    implements(IBody)
     adapts(IComponentRegistry, ISetupEnviron)
 
     name = 'portlets'
diff --git a/plone/app/portlets/portletcontext.py b/plone/app/portlets/portletcontext.py
index 4042aab..85679b2 100644
--- a/plone/app/portlets/portletcontext.py
+++ b/plone/app/portlets/portletcontext.py
@@ -1,6 +1,6 @@
 from types import StringTypes
 
-from zope.interface import implements, Interface
+from zope.interface import implementer, Interface
 from zope.component import adapts
 
 from Acquisition import aq_parent, aq_inner, aq_base
@@ -14,6 +14,7 @@
 from plone.portlets.constants import CONTENT_TYPE_CATEGORY
 
 
+@implementer(IPortletContext)
 class ContentContext(object):
     """A portlet context for regular content items.
 
@@ -21,7 +22,6 @@ class ContentContext(object):
     tools and other non-content items. This may hijack the context in non-CMF
     contexts, but that is doubtfully going to be an issue.
     """
-    implements(IPortletContext)
     adapts(Interface)
 
     def __init__(self, context):
@@ -102,11 +102,10 @@ def _getContentType(self):
         return None
 
 
+@implementer(IPortletContext)
 class PortalRootContext(ContentContext):
     """A portlet context for the site root.
     """
-
-    implements(IPortletContext)
     adapts(ISiteRoot)
 
     def __init__(self, context):
diff --git a/plone/app/portlets/portlets/actions.py b/plone/app/portlets/portlets/actions.py
index 63c45a5..b43e8e9 100644
--- a/plone/app/portlets/portlets/actions.py
+++ b/plone/app/portlets/portlets/actions.py
@@ -9,7 +9,7 @@
 from zope import schema
 from zope.component import getMultiAdapter
 from zope.component import getUtility
-from zope.interface import implements
+from zope.interface import implementer
 
 
 class IActionsPortlet(IPortletDataProvider):
@@ -56,14 +56,13 @@ class IActionsPortlet(IPortletDataProvider):
         default='action_icon.png')
 
 
+@implementer(IActionsPortlet)
 class Assignment(base.Assignment):
     """Portlet assignment.
     This is what is actually managed through the portlets UI and associated
     with columns.
     """
 
-    implements(IActionsPortlet)
-
     ptitle = u""
     show_title = True
     category = u""
diff --git a/plone/app/portlets/portlets/base.py b/plone/app/portlets/portlets/base.py
index 84bb600..2cc4ad5 100644
--- a/plone/app/portlets/portlets/base.py
+++ b/plone/app/portlets/portlets/base.py
@@ -5,7 +5,7 @@
 from plone.portlets.interfaces import IPortletRenderer
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
 from zope.container.contained import Contained
-from zope.interface import implements
+from zope.interface import implementer
 
 # Convenience imports
 from plone.app.portlets.browser.formhelper import AddForm
@@ -13,6 +13,7 @@
 from plone.app.portlets.browser.formhelper import EditForm
 
 
+@implementer(IPortletAssignment)
 class Assignment(SimpleItem, Contained):
     """Base class for assignments.
 
@@ -20,8 +21,6 @@ class Assignment(SimpleItem, Contained):
     may
     """
 
-    implements(IPortletAssignment)
-
     __name__ = ''
 
     @property
@@ -44,6 +43,7 @@ def data(self):
         return self
 
 
+@implementer(IPortletRenderer)
 class Renderer(Explicit):
     """Base class for portlet renderers.
 
@@ -58,8 +58,6 @@ class Renderer(Explicit):
     as your source code file.
     """
 
-    implements(IPortletRenderer)
-
     def __init__(self, context, request, view, manager, data):
         self.context = context
         self.request = request
@@ -82,6 +80,7 @@ def available(self):
         return True
 
 
+@implementer(IDeferredPortletRenderer)
 class DeferredRenderer(Renderer):
     """provide defer functionality via KSS
 
@@ -89,8 +88,6 @@ class DeferredRenderer(Renderer):
 
     """
 
-    implements(IDeferredPortletRenderer)
-
     render_preload = ViewPageTemplateFile('deferred_portlet.pt')
 
     def render_full(self):
diff --git a/plone/app/portlets/portlets/classic.py b/plone/app/portlets/portlets/classic.py
index 0d01cca..707d1e0 100644
--- a/plone/app/portlets/portlets/classic.py
+++ b/plone/app/portlets/portlets/classic.py
@@ -3,7 +3,7 @@
 from plone.portlets.interfaces import IPortletDataProvider
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
 from zope import schema
-from zope.interface import implements
+from zope.interface import implementer
 
 
 class IClassicPortlet(IPortletDataProvider):
@@ -23,8 +23,8 @@ class IClassicPortlet(IPortletDataProvider):
         required=False)
 
 
+@implementer(IClassicPortlet)
 class Assignment(base.Assignment):
-    implements(IClassicPortlet)
 
     def __init__(self, template='', macro=''):
         self.template = template
diff --git a/plone/app/portlets/portlets/language.py b/plone/app/portlets/portlets/language.py
index b4b6872..31f9678 100644
--- a/plone/app/portlets/portlets/language.py
+++ b/plone/app/portlets/portlets/language.py
@@ -4,7 +4,7 @@
 from plone.portlets.interfaces import IPortletDataProvider
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
 from zope.component import getMultiAdapter
-from zope.interface import implements
+from zope.interface import implementer
 
 
 class ILanguagePortlet(IPortletDataProvider):
@@ -12,8 +12,8 @@ class ILanguagePortlet(IPortletDataProvider):
     """
 
 
+@implementer(ILanguagePortlet)
 class Assignment(base.Assignment):
-    implements(ILanguagePortlet)
 
     title = _(u'label_languages', default=u'Languages')
 
diff --git a/plone/app/portlets/portlets/login.py b/plone/app/portlets/portlets/login.py
index 4858ad0..0486458 100644
--- a/plone/app/portlets/portlets/login.py
+++ b/plone/app/portlets/portlets/login.py
@@ -5,7 +5,7 @@
 from Products.CMFCore.utils import getToolByName
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
 from zope.component import getMultiAdapter
-from zope.interface import implements
+from zope.interface import implementer
 
 
 class ILoginPortlet(IPortletDataProvider):
@@ -13,8 +13,8 @@ class ILoginPortlet(IPortletDataProvider):
     """
 
 
+@implementer(ILoginPortlet)
 class Assignment(base.Assignment):
-    implements(ILoginPortlet)
 
     title = _(u'label_log_in', default=u'Log in')
 
diff --git a/plone/app/portlets/portlets/navigation.py b/plone/app/portlets/portlets/navigation.py
index 3eb7f6a..48d7fde 100644
--- a/plone/app/portlets/portlets/navigation.py
+++ b/plone/app/portlets/portlets/navigation.py
@@ -27,7 +27,7 @@
 from zope import schema
 from zope.component import adapts, getMultiAdapter, queryUtility
 from zope.component import getUtility
-from zope.interface import implements, Interface
+from zope.interface import implementer, Interface
 
 
 class INavigationPortlet(IPortletDataProvider):
@@ -96,8 +96,8 @@ class INavigationPortlet(IPortletDataProvider):
             required=False)
 
 
+@implementer(INavigationPortlet)
 class Assignment(base.Assignment):
-    implements(INavigationPortlet)
 
     name = ""
     root = None
@@ -308,11 +308,11 @@ class EditForm(base.EditForm):
     description = _(u"This portlet displays a navigation tree.")
 
 
+@implementer(INavigationQueryBuilder)
 class QueryBuilder(object):
     """Build a navtree query based on the settings in INavigationSchema
     and those set on the portlet.
     """
-    implements(INavigationQueryBuilder)
     adapts(Interface, INavigationPortlet)
 
     def __init__(self, context, portlet):
@@ -379,10 +379,10 @@ def __call__(self):
         return self.query
 
 
+@implementer(INavtreeStrategy)
 class NavtreeStrategy(SitemapNavtreeStrategy):
     """The navtree strategy used for the default navigation portlet
     """
-    implements(INavtreeStrategy)
     adapts(Interface, INavigationPortlet)
 
     def __init__(self, context, portlet):
diff --git a/plone/app/portlets/portlets/recent.py b/plone/app/portlets/portlets/recent.py
index 0015078..7de2656 100644
--- a/plone/app/portlets/portlets/recent.py
+++ b/plone/app/portlets/portlets/recent.py
@@ -9,7 +9,7 @@
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
 from zope import schema
 from zope.component import getMultiAdapter
-from zope.interface import implements
+from zope.interface import implementer
 
 
 class IRecentPortlet(IPortletDataProvider):
@@ -21,8 +21,8 @@ class IRecentPortlet(IPortletDataProvider):
                        min=1)
 
 
+@implementer(IRecentPortlet)
 class Assignment(base.Assignment):
-    implements(IRecentPortlet)
 
     def __init__(self, count=5):
         self.count = count
diff --git a/plone/app/portlets/portlets/review.py b/plone/app/portlets/portlets/review.py
index 340c132..9591e4c 100644
--- a/plone/app/portlets/portlets/review.py
+++ b/plone/app/portlets/portlets/review.py
@@ -8,15 +8,15 @@
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
 from zope.component import getMultiAdapter
 from zope.component import queryUtility
-from zope.interface import implements
+from zope.interface import implementer
 
 
 class IReviewPortlet(IPortletDataProvider):
     pass
 
 
+@implementer(IReviewPortlet)
 class Assignment(base.Assignment):
-    implements(IReviewPortlet)
 
     @property
     def title(self):
diff --git a/plone/app/portlets/portlets/rss.py b/plone/app/portlets/portlets/rss.py
index f65aeca..8e32db5 100644
--- a/plone/app/portlets/portlets/rss.py
+++ b/plone/app/portlets/portlets/rss.py
@@ -6,7 +6,7 @@
 from plone.portlets.interfaces import IPortletDataProvider
 from Products.Five.browser.pagetemplatefile import ZopeTwoPageTemplateFile
 from zope import schema
-from zope.interface import implements, Interface
+from zope.interface import implementer, Interface
 import feedparser
 import time
 
@@ -64,9 +64,9 @@ def ok():
         """is this feed ok to display?"""
 
 
+@implementer(IFeed)
 class RSSFeed(object):
     """an RSS feed"""
-    implements(IFeed)
 
     def __init__(self, url, timeout):
         self.url = url
@@ -253,8 +253,8 @@ class IRSSPortlet(IPortletDataProvider):
         default=100)
 
 
+@implementer(IRSSPortlet)
 class Assignment(base.Assignment):
-    implements(IRSSPortlet)
 
     portlet_title = u''
 
diff --git a/plone/app/portlets/portlets/search.py b/plone/app/portlets/portlets/search.py
index 0e202f1..130673a 100644
--- a/plone/app/portlets/portlets/search.py
+++ b/plone/app/portlets/portlets/search.py
@@ -5,7 +5,7 @@
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
 from zope import schema
 from zope.component import getMultiAdapter
-from zope.interface import implements
+from zope.interface import implementer
 
 
 class ISearchPortlet(IPortletDataProvider):
@@ -21,8 +21,8 @@ class ISearchPortlet(IPortletDataProvider):
         required=False)
 
 
+@implementer(ISearchPortlet)
 class Assignment(base.Assignment):
-    implements(ISearchPortlet)
 
     def __init__(self, enableLivesearch=True):
         self.enableLivesearch = enableLivesearch
diff --git a/plone/app/portlets/storage.py b/plone/app/portlets/storage.py
index b3002f9..180111c 100644
--- a/plone/app/portlets/storage.py
+++ b/plone/app/portlets/storage.py
@@ -1,5 +1,5 @@
 from zope.annotation.interfaces import IAnnotations
-from zope.interface import implements
+from zope.interface import implementer
 from zope.component import adapts
 from zope.component import getUtility
 
@@ -76,19 +76,17 @@ def __setitem__(self, key, assignment):
         BaseMapping.__setitem__(self, key, aq_base(assignment))
 
 
+@implementer(IUserPortletAssignmentMapping)
 class UserPortletAssignmentMapping(PortletAssignmentMapping):
     """An assignment mapping for user/dashboard portlets
     """
 
-    implements(IUserPortletAssignmentMapping)
-
 
+@implementer(IGroupDashboardPortletAssignmentMapping)
 class GroupDashboardPortletAssignmentMapping(PortletAssignmentMapping):
     """An assignment mapping for group dashboard portlets
     """
 
-    implements(IGroupDashboardPortletAssignmentMapping)
-
     @property
     def id(self):
         manager = self.__manager__
@@ -97,10 +95,10 @@ def id(self):
         return "++groupdashboard++%s+%s" % (manager, key)
 
 
+@implementer(IBrowserPublisher)
 class PortletAssignmentMappingTraverser(ItemTraverser):
     """A traverser for portlet assignment mappings, that is acqusition-aware
     """
-    implements(IBrowserPublisher)
     adapts(IPortletAssignmentMapping, IDefaultBrowserLayer)
 
     def publishTraverse(self, request, name):
@@ -108,12 +106,11 @@ def publishTraverse(self, request, name):
         return ob.__of__(self.context)
 
 
+@implementer(INameChooser)
 class PortletsNameChooser(NameChooser):
     """A name chooser for portlets
     """
 
-    implements(INameChooser)
-
     def __init__(self, context):
         self.context = context
 
diff --git a/plone/app/portlets/tests/test_configuration.py b/plone/app/portlets/tests/test_configuration.py
index fe7ed25..f7e54bb 100644
--- a/plone/app/portlets/tests/test_configuration.py
+++ b/plone/app/portlets/tests/test_configuration.py
@@ -52,7 +52,7 @@ class DummyView(BrowserView):
 
 # A sample portlet
 
-from zope.interface import implements
+from zope.interface import implementer
 from zope import schema
 
 from plone.portlets.interfaces import IPortletDataProvider
@@ -66,8 +66,8 @@ class ITestPortlet(IPortletDataProvider):
                               value_type=schema.Choice(vocabulary="plone.app.vocabularies.WorkflowStates"))
 
 
+@implementer(ITestPortlet)
 class TestAssignment(base.Assignment):
-    implements(ITestPortlet)
 
     test_text = None
     test_bool = None


