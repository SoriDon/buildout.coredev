Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2019-03-15T14:20:40+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/02d59d881f602b242179e1b7e9145b975eb3dab8

Add summary of all errors and how often they happend to verifydb.

Files changed:
A news/2798.bugfix
M Products/CMFPlone/_scripts/verifydb.py

b"diff --git a/Products/CMFPlone/_scripts/verifydb.py b/Products/CMFPlone/_scripts/verifydb.py\nindex 02e817cc1..34448e477 100644\n--- a/Products/CMFPlone/_scripts/verifydb.py\n+++ b/Products/CMFPlone/_scripts/verifydb.py\n@@ -1,4 +1,5 @@\n # -*- coding: utf-8 -*-\n+from collections import Counter\n from Zope2.Startup.run import make_wsgi_app\n from ZODB.interfaces import IStorageCurrentRecordIteration\n from ZODB.serialize import PersistentUnpickler\n@@ -43,20 +44,28 @@ def verify_zodb(obj, debug=False):\n     next_ = None\n     count = 0\n     errors = 0\n+    issues = []\n     while True:\n         count += 1\n         oid, tid, data, next_ = storage.record_iternext(next_)\n         logger.debug('Verifying {}'.format(oid))\n-        success = verify_record(oid, data, debug)\n+        success, msg = verify_record(oid, data, debug)\n         if not success:\n             errors += 1\n+            issues.append(msg)\n         if next_ is None:\n             break\n \n+    issues = dict(Counter(sorted(issues)))\n+    msg = ''\n+    for value, amount in issues.items():\n+        msg += '{}: {}\\n'.format(value, amount)\n+\n     logger.info(\n-        'Done! Scanned {} records. '\n-        'Found {} records that could not be loaded.'.format(\n-            count, errors)\n+        'Done! Scanned {} records. \\n'\n+        'Found {} records that could not be loaded. \\n'\n+        'Exceptions and how often they happened: \\n'\n+        '{}'.format(count, errors, msg)\n     )\n \n \n@@ -69,7 +78,7 @@ def verify_record(oid, data, debug=False):\n         class_info = unpickler.load()\n         pos = input_file.tell()\n         unpickler.load()\n-    except Exception:\n+    except Exception as e:\n         input_file.seek(0)\n         pickle = input_file.read()\n         logger.info('\\nCould not process {} record {}:'.format(\n@@ -89,8 +98,10 @@ def verify_record(oid, data, debug=False):\n                 pdb.set_trace()\n         elif debug and pos is None:\n             pdb.set_trace()\n-        return False\n-    return True\n+        # The same issues should have the same msg\n+        msg = '{}: {}'.format(e.__class__.__name__, str(e))\n+        return False, msg\n+    return True, None\n \n \n def persistent_load(ref):\ndiff --git a/news/2798.bugfix b/news/2798.bugfix\nnew file mode 100644\nindex 000000000..683a79d0e\n--- /dev/null\n+++ b/news/2798.bugfix\n@@ -0,0 +1,2 @@\n+Add summary of all errors when verifying a DB with ./bin/instance verifydb.\n+[pbauer]\n\\ No newline at end of file\n"

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2019-03-17T21:00:16+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/7fdf9de8f18c95c9a6bb5db381e45a627e69b025

drop the dict

Files changed:
M Products/CMFPlone/_scripts/verifydb.py

b"diff --git a/Products/CMFPlone/_scripts/verifydb.py b/Products/CMFPlone/_scripts/verifydb.py\nindex 34448e477..8e0fd0a7f 100644\n--- a/Products/CMFPlone/_scripts/verifydb.py\n+++ b/Products/CMFPlone/_scripts/verifydb.py\n@@ -56,7 +56,7 @@ def verify_zodb(obj, debug=False):\n         if next_ is None:\n             break\n \n-    issues = dict(Counter(sorted(issues)))\n+    issues = Counter(sorted(issues))\n     msg = ''\n     for value, amount in issues.items():\n         msg += '{}: {}\\n'.format(value, amount)\n"

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2019-03-17T21:01:28+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/5af6be9100efb06ab07128c12924abaaad5cb86a

Merge pull request #2798 from plone/better_output_verifydb

Add summary of all errors and how often they happend to verifydb

Files changed:
A news/2798.bugfix
M Products/CMFPlone/_scripts/verifydb.py

b"diff --git a/Products/CMFPlone/_scripts/verifydb.py b/Products/CMFPlone/_scripts/verifydb.py\nindex 02e817cc1..8e0fd0a7f 100644\n--- a/Products/CMFPlone/_scripts/verifydb.py\n+++ b/Products/CMFPlone/_scripts/verifydb.py\n@@ -1,4 +1,5 @@\n # -*- coding: utf-8 -*-\n+from collections import Counter\n from Zope2.Startup.run import make_wsgi_app\n from ZODB.interfaces import IStorageCurrentRecordIteration\n from ZODB.serialize import PersistentUnpickler\n@@ -43,20 +44,28 @@ def verify_zodb(obj, debug=False):\n     next_ = None\n     count = 0\n     errors = 0\n+    issues = []\n     while True:\n         count += 1\n         oid, tid, data, next_ = storage.record_iternext(next_)\n         logger.debug('Verifying {}'.format(oid))\n-        success = verify_record(oid, data, debug)\n+        success, msg = verify_record(oid, data, debug)\n         if not success:\n             errors += 1\n+            issues.append(msg)\n         if next_ is None:\n             break\n \n+    issues = Counter(sorted(issues))\n+    msg = ''\n+    for value, amount in issues.items():\n+        msg += '{}: {}\\n'.format(value, amount)\n+\n     logger.info(\n-        'Done! Scanned {} records. '\n-        'Found {} records that could not be loaded.'.format(\n-            count, errors)\n+        'Done! Scanned {} records. \\n'\n+        'Found {} records that could not be loaded. \\n'\n+        'Exceptions and how often they happened: \\n'\n+        '{}'.format(count, errors, msg)\n     )\n \n \n@@ -69,7 +78,7 @@ def verify_record(oid, data, debug=False):\n         class_info = unpickler.load()\n         pos = input_file.tell()\n         unpickler.load()\n-    except Exception:\n+    except Exception as e:\n         input_file.seek(0)\n         pickle = input_file.read()\n         logger.info('\\nCould not process {} record {}:'.format(\n@@ -89,8 +98,10 @@ def verify_record(oid, data, debug=False):\n                 pdb.set_trace()\n         elif debug and pos is None:\n             pdb.set_trace()\n-        return False\n-    return True\n+        # The same issues should have the same msg\n+        msg = '{}: {}'.format(e.__class__.__name__, str(e))\n+        return False, msg\n+    return True, None\n \n \n def persistent_load(ref):\ndiff --git a/news/2798.bugfix b/news/2798.bugfix\nnew file mode 100644\nindex 000000000..683a79d0e\n--- /dev/null\n+++ b/news/2798.bugfix\n@@ -0,0 +1,2 @@\n+Add summary of all errors when verifying a DB with ./bin/instance verifydb.\n+[pbauer]\n\\ No newline at end of file\n"

