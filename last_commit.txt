Repository: plone.app.contentlisting


Branch: refs/heads/master
Date: 2023-03-25T19:21:23+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.contentlisting/commit/b7d9927dc5d029a2023a2adb3f94e18d86b617db

Configuring with plone/meta

Files changed:
A .editorconfig
A .meta.toml
A .pre-commit-config.yaml
A news/47959565.internal
A tox.ini
M pyproject.toml
M setup.cfg

b'diff --git a/.editorconfig b/.editorconfig\nnew file mode 100644\nindex 0000000..b4158b8\n--- /dev/null\n+++ b/.editorconfig\n@@ -0,0 +1,39 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+#\n+# EditorConfig Configuration file, for more details see:\n+# http://EditorConfig.org\n+# EditorConfig is a convention description, that could be interpreted\n+# by multiple editors to enforce common coding conventions for specific\n+# file types\n+\n+# top-most EditorConfig file:\n+# Will ignore other EditorConfig files in Home directory or upper tree level.\n+root = true\n+\n+\n+[*]  # For All Files\n+# Unix-style newlines with a newline ending every file\n+end_of_line = lf\n+insert_final_newline = true\n+trim_trailing_whitespace = true\n+# Set default charset\n+charset = utf-8\n+# Indent style default\n+indent_style = space\n+# Max Line Length - a hard line wrap, should be disabled\n+max_line_length = off\n+\n+[*.{py,cfg,ini}]\n+# 4 space indentation\n+indent_size = 4\n+\n+[*.{yml,zpt,pt,dtml,zcml}]\n+# 2 space indentation\n+indent_size = 2\n+\n+[{Makefile,.gitmodules}]\n+# Tab indentation (no size specified, but view as 4 spaces)\n+indent_style = tab\n+indent_size = unset\n+tab_width = unset\ndiff --git a/.meta.toml b/.meta.toml\nnew file mode 100644\nindex 0000000..07dde25\n--- /dev/null\n+++ b/.meta.toml\n@@ -0,0 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[meta]\n+template = "default"\n+commit-id = "47959565"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nnew file mode 100644\nindex 0000000..582f8ac\n--- /dev/null\n+++ b/.pre-commit-config.yaml\n@@ -0,0 +1,42 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+ci:\n+    autofix_prs: false\n+    autoupdate_schedule: monthly\n+\n+repos:\n+-   repo: https://github.com/asottile/pyupgrade\n+    rev: v3.3.1\n+    hooks:\n+    -   id: pyupgrade\n+        args: [--py38-plus]\n+-   repo: https://github.com/pycqa/isort\n+    rev: 5.12.0\n+    hooks:\n+    -   id: isort\n+-   repo: https://github.com/psf/black\n+    rev: 23.1.0\n+    hooks:\n+    -   id: black\n+-   repo: https://github.com/collective/zpretty\n+    rev: 3.0.2\n+    hooks:\n+    -   id: zpretty\n+-   repo: https://github.com/PyCQA/flake8\n+    rev: 6.0.0\n+    hooks:\n+    -   id: flake8\n+-   repo: https://github.com/codespell-project/codespell\n+    rev: v2.2.2\n+    hooks:\n+    -   id: codespell\n+        additional_dependencies:\n+          - tomli\n+-   repo: https://github.com/mgedmin/check-manifest\n+    rev: "0.49"\n+    hooks:\n+    -   id: check-manifest\n+-   repo: https://github.com/regebro/pyroma\n+    rev: "4.2"\n+    hooks:\n+    -   id: pyroma\ndiff --git a/news/47959565.internal b/news/47959565.internal\nnew file mode 100644\nindex 0000000..c08f539\n--- /dev/null\n+++ b/news/47959565.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 05b615d..9eb73f3 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,3 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [tool.towncrier]\n filename = "CHANGES.rst"\n directory = "news/"\n@@ -18,3 +20,43 @@ showcontent = true\n directory = "bugfix"\n name = "Bug fixes:"\n showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "internal"\n+name = "Internal:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "documentation"\n+name = "Documentation:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "tests"\n+name = "Tests"\n+showcontent = true\n+\n+[tool.isort]\n+profile = "plone"\n+\n+[tool.black]\n+target-version = ["py38"]\n+\n+[tool.dependencychecker]\n+Zope = [\n+  # Zope own provided namespaces\n+  \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n+  \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n+  \'Zope2\', \'webdav\', \'zmi\',\n+  # Zope dependencies\n+  \'Acquisition\', \'DateTime\', \'transaction\', \'zExceptions\', \'ZODB\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.deferredimport\', \'zope.event\',\n+  \'zope.exceptions\', \'zope.globalrequest\', \'zope.i18n\', \'zope.i18nmessageid\',\n+  \'zope.interface\', \'zope.lifecycleevent\', \'zope.location\', \'zope.publisher\',\n+  \'zope.schema\', \'zope.security\', \'zope.site\', \'zope.traversing\', \'AccessControl\',\n+]\n+\'plone.base\' = [\n+  \'AccessControl\', \'Products.BTreeFolder2\', \'Products.CMFCore\',\n+  \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n+]\n+python-dateutil = [\'dateutil\']\ndiff --git a/setup.cfg b/setup.cfg\nindex 3e076fd..0da8f8f 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -1,9 +1,23 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [bdist_wheel]\n universal = 0\n \n-[isort]\n-# black compatible Plone isort rules:\n-profile = black\n-force_alphabetical_sort = True\n-force_single_line = True\n-lines_after_imports = 2\n+[flake8]\n+doctests = 1\n+ignore =\n+    # black takes care of line length\n+    E501,\n+    # black takes care of where to break lines\n+    W503,\n+    # black takes care of spaces within slicing (list[:])\n+    E203,\n+    # black takes care of spaces after commas\n+    E231,\n+\n+[check-manifest]\n+ignore =\n+    .editorconfig\n+    .meta.toml\n+    .pre-commit-config.yaml\n+    tox.ini\ndiff --git a/tox.ini b/tox.ini\nnew file mode 100644\nindex 0000000..4f11eda\n--- /dev/null\n+++ b/tox.ini\n@@ -0,0 +1,53 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[tox]\n+# We need 4.4.0 for constrain_package_deps.\n+min_version = 4.4.0\n+envlist =\n+    format\n+    lint\n+    test\n+\n+[testenv]\n+allowlist_externals =\n+    sh\n+\n+[testenv:format]\n+description = automatically reformat code\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a pyupgrade\n+    pre-commit run -a isort\n+    pre-commit run -a black\n+    pre-commit run -a zpretty\n+\n+[testenv:lint]\n+description = run linters that will help improve the code style\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a\n+\n+[testenv:dependencies]\n+description = check if the package defines all its dependencies and generate a graph out of them\n+deps =\n+    z3c.dependencychecker==2.11\n+    pipdeptree==2.5.1\n+    graphviz  # optional dependency of pipdeptree\n+commands =\n+    dependencychecker\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+\n+[testenv:test]\n+usedevelop = true\n+constrain_package_deps = true\n+deps =\n+    zope.testrunner\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    zope-testrunner --test-path={toxinidir} -s plone.app.contentlisting\n+extras =\n+    test\n'

Repository: plone.app.contentlisting


Branch: refs/heads/master
Date: 2023-03-25T19:22:03+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.contentlisting/commit/6e834806466e9328a9b5b92b1b9a9150ae29adfe

chore: pyupgrade

Files changed:
M plone/app/contentlisting/tests/test_integration_unit.py

b'diff --git a/plone/app/contentlisting/tests/test_integration_unit.py b/plone/app/contentlisting/tests/test_integration_unit.py\nindex f558e88..5031b86 100644\n--- a/plone/app/contentlisting/tests/test_integration_unit.py\n+++ b/plone/app/contentlisting/tests/test_integration_unit.py\n@@ -430,9 +430,9 @@ def test_suite():\n     import unittest\n \n     suite = unittest.TestSuite()\n-    suite.addTest(unittest.makeSuite(TestSetup))\n-    suite.addTest(unittest.makeSuite(TestIndividualCatalogContentItems))\n-    suite.addTest(unittest.makeSuite(TestIndividualRealContentItems))\n-    suite.addTest(unittest.makeSuite(TestFolderContents))\n-    suite.addTest(unittest.makeSuite(TestCollectionResults))\n+    suite.addTest(unittest.defaultTestLoader.loadTestsFromTestCase(TestSetup))\n+    suite.addTest(unittest.defaultTestLoader.loadTestsFromTestCase(TestIndividualCatalogContentItems))\n+    suite.addTest(unittest.defaultTestLoader.loadTestsFromTestCase(TestIndividualRealContentItems))\n+    suite.addTest(unittest.defaultTestLoader.loadTestsFromTestCase(TestFolderContents))\n+    suite.addTest(unittest.defaultTestLoader.loadTestsFromTestCase(TestCollectionResults))\n     return suite\n'

Repository: plone.app.contentlisting


Branch: refs/heads/master
Date: 2023-03-25T19:22:33+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.contentlisting/commit/45acbf8fab235bdf87114f4dcc6b742eda6e5a29

chore: black

Files changed:
M plone/app/contentlisting/browser.py
M plone/app/contentlisting/contentlisting.py
M plone/app/contentlisting/tests/base.py
M plone/app/contentlisting/tests/test_integration_unit.py

b'diff --git a/plone/app/contentlisting/browser.py b/plone/app/contentlisting/browser.py\nindex 02f69f5..841d2a2 100644\n--- a/plone/app/contentlisting/browser.py\n+++ b/plone/app/contentlisting/browser.py\n@@ -30,7 +30,6 @@ def __call__(self, batch=False, b_size=20, b_start=0, orphan=0, **kw):\n \n class ContentListingCollection(BrowserView):\n     def __call__(self, batch=False, b_size=20, b_start=0, **kw):\n-\n         if "orphan" in kw:\n             # At the moment, orphan keyword is not supported by\n             # plone.app.contenttypes Collection behavior, nor by\ndiff --git a/plone/app/contentlisting/contentlisting.py b/plone/app/contentlisting/contentlisting.py\nindex fda2a36..8902d20 100644\n--- a/plone/app/contentlisting/contentlisting.py\n+++ b/plone/app/contentlisting/contentlisting.py\n@@ -162,7 +162,7 @@ def isVisibleInNav(self):\n \n     def MimeTypeIcon(self):\n         mimeicon = None\n-        portal_url_object = getToolByName(self._brain, \'portal_url\')\n+        portal_url_object = getToolByName(self._brain, "portal_url")\n         portal = portal_url_object.getPortalObject()\n         navroot = getNavigationRootObject(self._brain, portal)\n         contenttype = aq_base(\ndiff --git a/plone/app/contentlisting/tests/base.py b/plone/app/contentlisting/tests/base.py\nindex 191fd13..b266d86 100644\n--- a/plone/app/contentlisting/tests/base.py\n+++ b/plone/app/contentlisting/tests/base.py\n@@ -8,7 +8,6 @@\n \n \n class ContentListingLayer(PloneSandboxLayer):\n-\n     defaultBases = (PLONE_APP_CONTENTTYPES_FIXTURE,)\n \n     def setUpZope(self, app, configurationContext):\n@@ -24,7 +23,6 @@ def setUpZope(self, app, configurationContext):\n \n \n class ContentListingIntegrationLayer(PloneSandboxLayer):\n-\n     defaultBases = (CONTENTLISTING_FIXTURE,)\n \n     def setUpPloneSite(self, portal):\ndiff --git a/plone/app/contentlisting/tests/test_integration_unit.py b/plone/app/contentlisting/tests/test_integration_unit.py\nindex 5031b86..f4351d1 100644\n--- a/plone/app/contentlisting/tests/test_integration_unit.py\n+++ b/plone/app/contentlisting/tests/test_integration_unit.py\n@@ -209,11 +209,12 @@ def test_item_getattr_acquisition(self):\n         # on the object\n         self.assertEqual(\n             self.item._realobject.absolute_url(),\n-            "http://nohost/plone/test-folder/mypage")\n+            "http://nohost/plone/test-folder/mypage",\n+        )\n         # on the contentlisting object\n         self.assertEqual(\n-            self.item.absolute_url(),\n-            "http://nohost/plone/test-folder/mypage")\n+            self.item.absolute_url(), "http://nohost/plone/test-folder/mypage"\n+        )\n \n     def test_item_Title(self):\n         self.assertEqual(self.item.Title(), "My Page")\n@@ -431,8 +432,16 @@ def test_suite():\n \n     suite = unittest.TestSuite()\n     suite.addTest(unittest.defaultTestLoader.loadTestsFromTestCase(TestSetup))\n-    suite.addTest(unittest.defaultTestLoader.loadTestsFromTestCase(TestIndividualCatalogContentItems))\n-    suite.addTest(unittest.defaultTestLoader.loadTestsFromTestCase(TestIndividualRealContentItems))\n+    suite.addTest(\n+        unittest.defaultTestLoader.loadTestsFromTestCase(\n+            TestIndividualCatalogContentItems\n+        )\n+    )\n+    suite.addTest(\n+        unittest.defaultTestLoader.loadTestsFromTestCase(TestIndividualRealContentItems)\n+    )\n     suite.addTest(unittest.defaultTestLoader.loadTestsFromTestCase(TestFolderContents))\n-    suite.addTest(unittest.defaultTestLoader.loadTestsFromTestCase(TestCollectionResults))\n+    suite.addTest(\n+        unittest.defaultTestLoader.loadTestsFromTestCase(TestCollectionResults)\n+    )\n     return suite\n'

Repository: plone.app.contentlisting


Branch: refs/heads/master
Date: 2023-03-25T19:22:59+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.contentlisting/commit/566abfee18365f2056cc2edc2def7367fe054479

chore: zptlint

Files changed:
M plone/app/contentlisting/configure.zcml

b'diff --git a/plone/app/contentlisting/configure.zcml b/plone/app/contentlisting/configure.zcml\nindex b2644ca..b974e3b 100644\n--- a/plone/app/contentlisting/configure.zcml\n+++ b/plone/app/contentlisting/configure.zcml\n@@ -1,6 +1,8 @@\n-<configure xmlns="http://namespaces.zope.org/zope"\n-           xmlns:browser="http://namespaces.zope.org/browser"\n-           xmlns:zcml="http://namespaces.zope.org/zcml">\n+<configure\n+    xmlns="http://namespaces.zope.org/zope"\n+    xmlns:browser="http://namespaces.zope.org/browser"\n+    xmlns:zcml="http://namespaces.zope.org/zcml"\n+    >\n \n   <adapter\n       factory=".contentlisting.ContentListing"\n@@ -39,30 +41,30 @@\n \n   <adapter\n       factory=".realobject.RealContentListingObject"\n-      for="Products.CMFCore.interfaces.IContentish "\n+      for="Products.CMFCore.interfaces.IContentish"\n       />\n \n   <browser:page\n       name="contentlisting"\n+      for="Products.CMFCore.interfaces.IFolderish"\n       class=".browser.FolderListing"\n       permission="zope2.View"\n-      for="Products.CMFCore.interfaces.IFolderish"\n       />\n \n   <browser:page\n       name="contentlisting"\n+      for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"\n       class=".browser.ContentListingCollection"\n       permission="zope2.View"\n-      for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"\n       zcml:condition="installed plone.app.contenttypes"\n       />\n \n   <!-- BBB -->\n   <browser:page\n       name="folderListing"\n+      for="Products.CMFCore.interfaces.IFolderish"\n       class=".browser.FolderListing"\n       permission="zope2.View"\n-      for="Products.CMFCore.interfaces.IFolderish"\n       />\n \n </configure>\n'

Repository: plone.app.contentlisting


Branch: refs/heads/master
Date: 2023-03-25T19:23:36+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.contentlisting/commit/dabb82ec0e0091acb9fe002954005b4ec5a995a6

feat: flake8

Files changed:
M plone/app/contentlisting/realobject.py

b'diff --git a/plone/app/contentlisting/realobject.py b/plone/app/contentlisting/realobject.py\nindex 980a142..0f47d9c 100644\n--- a/plone/app/contentlisting/realobject.py\n+++ b/plone/app/contentlisting/realobject.py\n@@ -1,4 +1,3 @@\n-from Acquisition import aq_base\n from Acquisition import aq_get\n from plone.app.contentlisting.contentlisting import BaseContentListingObject\n from plone.app.contentlisting.interfaces import IContentListingObject\n'

Repository: plone.app.contentlisting


Branch: refs/heads/master
Date: 2023-03-25T19:24:31+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.contentlisting/commit/768561783e7ed41977bfddf6f998c1538b2232df

feat: codespell

Files changed:
M CHANGES.rst
M plone/app/contentlisting/realobject.py

b"diff --git a/CHANGES.rst b/CHANGES.rst\nindex af902f5..716b0d0 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -195,7 +195,7 @@ Bug fixes:\n Bug fixes:\n \n - Added missing implementation for getSize on RealContentListingObject.\n-  Interface was not fullfilled here.\n+  Interface was not fulfilled here.\n   [jensens]\n \n \ndiff --git a/plone/app/contentlisting/realobject.py b/plone/app/contentlisting/realobject.py\nindex 0f47d9c..23d890a 100644\n--- a/plone/app/contentlisting/realobject.py\n+++ b/plone/app/contentlisting/realobject.py\n@@ -75,7 +75,7 @@ def getSize(self):\n             primary_field_info = IPrimaryFieldInfo(obj, None)\n         except TypeError:\n             # no primary field available, dexterity raises a TypeError\n-            # with the slightly missleading message 'could not adapt'.\n+            # with the slightly misleading message 'could not adapt'.\n             primary_field_info = None\n         if primary_field_info is None or not primary_field_info.value:\n             size = 0\n"

Repository: plone.app.contentlisting


Branch: refs/heads/master
Date: 2023-03-25T19:29:49+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.contentlisting/commit/24bd1884a4d898561e6294393d446366cb636a9b

feat: drop p.a.layout dependency

Files changed:
M plone/app/contentlisting/contentlisting.py
M plone/app/contentlisting/tests/base.py

b'diff --git a/plone/app/contentlisting/contentlisting.py b/plone/app/contentlisting/contentlisting.py\nindex 8902d20..9f7181d 100644\n--- a/plone/app/contentlisting/contentlisting.py\n+++ b/plone/app/contentlisting/contentlisting.py\n@@ -1,8 +1,8 @@\n from Acquisition import aq_base\n from plone.app.contentlisting.interfaces import IContentListing\n from plone.app.contentlisting.interfaces import IContentListingObject\n-from plone.app.layout.navigation.root import getNavigationRootObject\n from plone.base.interfaces import INavigationSchema\n+from plone.base.navigationroot import get_navigation_root_object\n from plone.i18n.normalizer.interfaces import IIDNormalizer\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n@@ -164,7 +164,7 @@ def MimeTypeIcon(self):\n         mimeicon = None\n         portal_url_object = getToolByName(self._brain, "portal_url")\n         portal = portal_url_object.getPortalObject()\n-        navroot = getNavigationRootObject(self._brain, portal)\n+        navroot = get_navigation_root_object(self._brain, portal)\n         contenttype = aq_base(\n             getattr(self._brain, "mime_type", None),\n         )\ndiff --git a/plone/app/contentlisting/tests/base.py b/plone/app/contentlisting/tests/base.py\nindex b266d86..e39dc25 100644\n--- a/plone/app/contentlisting/tests/base.py\n+++ b/plone/app/contentlisting/tests/base.py\n@@ -11,9 +11,6 @@ class ContentListingLayer(PloneSandboxLayer):\n     defaultBases = (PLONE_APP_CONTENTTYPES_FIXTURE,)\n \n     def setUpZope(self, app, configurationContext):\n-        import plone.app.layout\n-\n-        self.loadZCML(package=plone.app.layout)\n         import plone.app.contentlisting\n \n         self.loadZCML(package=plone.app.contentlisting)\n'

Repository: plone.app.contentlisting


Branch: refs/heads/master
Date: 2023-03-25T19:39:57+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.contentlisting/commit/da0fe5785468d7a01fb0391716b0deb2093b73b3

feat: configure z3c.dependencychecker

Files changed:
M pyproject.toml

b"diff --git a/pyproject.toml b/pyproject.toml\nindex 9eb73f3..0e25822 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -60,3 +60,4 @@ Zope = [\n   'Products.CMFDynamicViewFTI', 'zope.deprecation',\n ]\n python-dateutil = ['dateutil']\n+ignore-packages = ['list']\n"

Repository: plone.app.contentlisting


Branch: refs/heads/master
Date: 2023-03-25T19:40:18+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.contentlisting/commit/c9f428ea86c179b1c64b49c7161b3eea5ea4e376

feat: declare dependencies

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex 3dfac63..8ed4142 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -42,11 +42,20 @@ def read(*rnames):\n     install_requires=[\n         "setuptools",\n         "plone.base",\n+        "Products.MimetypesRegistry",\n+        "Products.ZCatalog",\n+        "plone.app.contenttypes",\n+        "plone.i18n",\n+        "plone.registry",\n+        "plone.rfc822",\n+        "plone.uuid",\n     ],\n     extras_require={\n         "test": [\n-            "plone.app.contenttypes",\n+            "plone.app.contenttypes[test]",\n             "plone.app.testing",\n+            "plone.batching",\n+            "plone.testing",\n         ],\n     },\n     entry_points="""\n'

Repository: plone.app.contentlisting


Branch: refs/heads/master
Date: 2023-03-26T10:57:56+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.contentlisting/commit/351a68110faaee82e5df11b8e52b5ea22bcaafc9

Merge pull request #50 from plone/config-with-default-template-e0bc7549

Config with default template

Files changed:
A .editorconfig
A .meta.toml
A .pre-commit-config.yaml
A news/47959565.internal
A tox.ini
M CHANGES.rst
M plone/app/contentlisting/browser.py
M plone/app/contentlisting/configure.zcml
M plone/app/contentlisting/contentlisting.py
M plone/app/contentlisting/realobject.py
M plone/app/contentlisting/tests/base.py
M plone/app/contentlisting/tests/test_integration_unit.py
M pyproject.toml
M setup.cfg
M setup.py

b'diff --git a/.editorconfig b/.editorconfig\nnew file mode 100644\nindex 0000000..b4158b8\n--- /dev/null\n+++ b/.editorconfig\n@@ -0,0 +1,39 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+#\n+# EditorConfig Configuration file, for more details see:\n+# http://EditorConfig.org\n+# EditorConfig is a convention description, that could be interpreted\n+# by multiple editors to enforce common coding conventions for specific\n+# file types\n+\n+# top-most EditorConfig file:\n+# Will ignore other EditorConfig files in Home directory or upper tree level.\n+root = true\n+\n+\n+[*]  # For All Files\n+# Unix-style newlines with a newline ending every file\n+end_of_line = lf\n+insert_final_newline = true\n+trim_trailing_whitespace = true\n+# Set default charset\n+charset = utf-8\n+# Indent style default\n+indent_style = space\n+# Max Line Length - a hard line wrap, should be disabled\n+max_line_length = off\n+\n+[*.{py,cfg,ini}]\n+# 4 space indentation\n+indent_size = 4\n+\n+[*.{yml,zpt,pt,dtml,zcml}]\n+# 2 space indentation\n+indent_size = 2\n+\n+[{Makefile,.gitmodules}]\n+# Tab indentation (no size specified, but view as 4 spaces)\n+indent_style = tab\n+indent_size = unset\n+tab_width = unset\ndiff --git a/.meta.toml b/.meta.toml\nnew file mode 100644\nindex 0000000..07dde25\n--- /dev/null\n+++ b/.meta.toml\n@@ -0,0 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[meta]\n+template = "default"\n+commit-id = "47959565"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nnew file mode 100644\nindex 0000000..582f8ac\n--- /dev/null\n+++ b/.pre-commit-config.yaml\n@@ -0,0 +1,42 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+ci:\n+    autofix_prs: false\n+    autoupdate_schedule: monthly\n+\n+repos:\n+-   repo: https://github.com/asottile/pyupgrade\n+    rev: v3.3.1\n+    hooks:\n+    -   id: pyupgrade\n+        args: [--py38-plus]\n+-   repo: https://github.com/pycqa/isort\n+    rev: 5.12.0\n+    hooks:\n+    -   id: isort\n+-   repo: https://github.com/psf/black\n+    rev: 23.1.0\n+    hooks:\n+    -   id: black\n+-   repo: https://github.com/collective/zpretty\n+    rev: 3.0.2\n+    hooks:\n+    -   id: zpretty\n+-   repo: https://github.com/PyCQA/flake8\n+    rev: 6.0.0\n+    hooks:\n+    -   id: flake8\n+-   repo: https://github.com/codespell-project/codespell\n+    rev: v2.2.2\n+    hooks:\n+    -   id: codespell\n+        additional_dependencies:\n+          - tomli\n+-   repo: https://github.com/mgedmin/check-manifest\n+    rev: "0.49"\n+    hooks:\n+    -   id: check-manifest\n+-   repo: https://github.com/regebro/pyroma\n+    rev: "4.2"\n+    hooks:\n+    -   id: pyroma\ndiff --git a/CHANGES.rst b/CHANGES.rst\nindex af902f5..716b0d0 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -195,7 +195,7 @@ Bug fixes:\n Bug fixes:\n \n - Added missing implementation for getSize on RealContentListingObject.\n-  Interface was not fullfilled here.\n+  Interface was not fulfilled here.\n   [jensens]\n \n \ndiff --git a/news/47959565.internal b/news/47959565.internal\nnew file mode 100644\nindex 0000000..c08f539\n--- /dev/null\n+++ b/news/47959565.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/plone/app/contentlisting/browser.py b/plone/app/contentlisting/browser.py\nindex 02f69f5..841d2a2 100644\n--- a/plone/app/contentlisting/browser.py\n+++ b/plone/app/contentlisting/browser.py\n@@ -30,7 +30,6 @@ def __call__(self, batch=False, b_size=20, b_start=0, orphan=0, **kw):\n \n class ContentListingCollection(BrowserView):\n     def __call__(self, batch=False, b_size=20, b_start=0, **kw):\n-\n         if "orphan" in kw:\n             # At the moment, orphan keyword is not supported by\n             # plone.app.contenttypes Collection behavior, nor by\ndiff --git a/plone/app/contentlisting/configure.zcml b/plone/app/contentlisting/configure.zcml\nindex b2644ca..b974e3b 100644\n--- a/plone/app/contentlisting/configure.zcml\n+++ b/plone/app/contentlisting/configure.zcml\n@@ -1,6 +1,8 @@\n-<configure xmlns="http://namespaces.zope.org/zope"\n-           xmlns:browser="http://namespaces.zope.org/browser"\n-           xmlns:zcml="http://namespaces.zope.org/zcml">\n+<configure\n+    xmlns="http://namespaces.zope.org/zope"\n+    xmlns:browser="http://namespaces.zope.org/browser"\n+    xmlns:zcml="http://namespaces.zope.org/zcml"\n+    >\n \n   <adapter\n       factory=".contentlisting.ContentListing"\n@@ -39,30 +41,30 @@\n \n   <adapter\n       factory=".realobject.RealContentListingObject"\n-      for="Products.CMFCore.interfaces.IContentish "\n+      for="Products.CMFCore.interfaces.IContentish"\n       />\n \n   <browser:page\n       name="contentlisting"\n+      for="Products.CMFCore.interfaces.IFolderish"\n       class=".browser.FolderListing"\n       permission="zope2.View"\n-      for="Products.CMFCore.interfaces.IFolderish"\n       />\n \n   <browser:page\n       name="contentlisting"\n+      for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"\n       class=".browser.ContentListingCollection"\n       permission="zope2.View"\n-      for="plone.app.contenttypes.behaviors.collection.ISyndicatableCollection"\n       zcml:condition="installed plone.app.contenttypes"\n       />\n \n   <!-- BBB -->\n   <browser:page\n       name="folderListing"\n+      for="Products.CMFCore.interfaces.IFolderish"\n       class=".browser.FolderListing"\n       permission="zope2.View"\n-      for="Products.CMFCore.interfaces.IFolderish"\n       />\n \n </configure>\ndiff --git a/plone/app/contentlisting/contentlisting.py b/plone/app/contentlisting/contentlisting.py\nindex fda2a36..9f7181d 100644\n--- a/plone/app/contentlisting/contentlisting.py\n+++ b/plone/app/contentlisting/contentlisting.py\n@@ -1,8 +1,8 @@\n from Acquisition import aq_base\n from plone.app.contentlisting.interfaces import IContentListing\n from plone.app.contentlisting.interfaces import IContentListingObject\n-from plone.app.layout.navigation.root import getNavigationRootObject\n from plone.base.interfaces import INavigationSchema\n+from plone.base.navigationroot import get_navigation_root_object\n from plone.i18n.normalizer.interfaces import IIDNormalizer\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n@@ -162,9 +162,9 @@ def isVisibleInNav(self):\n \n     def MimeTypeIcon(self):\n         mimeicon = None\n-        portal_url_object = getToolByName(self._brain, \'portal_url\')\n+        portal_url_object = getToolByName(self._brain, "portal_url")\n         portal = portal_url_object.getPortalObject()\n-        navroot = getNavigationRootObject(self._brain, portal)\n+        navroot = get_navigation_root_object(self._brain, portal)\n         contenttype = aq_base(\n             getattr(self._brain, "mime_type", None),\n         )\ndiff --git a/plone/app/contentlisting/realobject.py b/plone/app/contentlisting/realobject.py\nindex 980a142..23d890a 100644\n--- a/plone/app/contentlisting/realobject.py\n+++ b/plone/app/contentlisting/realobject.py\n@@ -1,4 +1,3 @@\n-from Acquisition import aq_base\n from Acquisition import aq_get\n from plone.app.contentlisting.contentlisting import BaseContentListingObject\n from plone.app.contentlisting.interfaces import IContentListingObject\n@@ -76,7 +75,7 @@ def getSize(self):\n             primary_field_info = IPrimaryFieldInfo(obj, None)\n         except TypeError:\n             # no primary field available, dexterity raises a TypeError\n-            # with the slightly missleading message \'could not adapt\'.\n+            # with the slightly misleading message \'could not adapt\'.\n             primary_field_info = None\n         if primary_field_info is None or not primary_field_info.value:\n             size = 0\ndiff --git a/plone/app/contentlisting/tests/base.py b/plone/app/contentlisting/tests/base.py\nindex 191fd13..e39dc25 100644\n--- a/plone/app/contentlisting/tests/base.py\n+++ b/plone/app/contentlisting/tests/base.py\n@@ -8,13 +8,9 @@\n \n \n class ContentListingLayer(PloneSandboxLayer):\n-\n     defaultBases = (PLONE_APP_CONTENTTYPES_FIXTURE,)\n \n     def setUpZope(self, app, configurationContext):\n-        import plone.app.layout\n-\n-        self.loadZCML(package=plone.app.layout)\n         import plone.app.contentlisting\n \n         self.loadZCML(package=plone.app.contentlisting)\n@@ -24,7 +20,6 @@ def setUpZope(self, app, configurationContext):\n \n \n class ContentListingIntegrationLayer(PloneSandboxLayer):\n-\n     defaultBases = (CONTENTLISTING_FIXTURE,)\n \n     def setUpPloneSite(self, portal):\ndiff --git a/plone/app/contentlisting/tests/test_integration_unit.py b/plone/app/contentlisting/tests/test_integration_unit.py\nindex f558e88..f4351d1 100644\n--- a/plone/app/contentlisting/tests/test_integration_unit.py\n+++ b/plone/app/contentlisting/tests/test_integration_unit.py\n@@ -209,11 +209,12 @@ def test_item_getattr_acquisition(self):\n         # on the object\n         self.assertEqual(\n             self.item._realobject.absolute_url(),\n-            "http://nohost/plone/test-folder/mypage")\n+            "http://nohost/plone/test-folder/mypage",\n+        )\n         # on the contentlisting object\n         self.assertEqual(\n-            self.item.absolute_url(),\n-            "http://nohost/plone/test-folder/mypage")\n+            self.item.absolute_url(), "http://nohost/plone/test-folder/mypage"\n+        )\n \n     def test_item_Title(self):\n         self.assertEqual(self.item.Title(), "My Page")\n@@ -430,9 +431,17 @@ def test_suite():\n     import unittest\n \n     suite = unittest.TestSuite()\n-    suite.addTest(unittest.makeSuite(TestSetup))\n-    suite.addTest(unittest.makeSuite(TestIndividualCatalogContentItems))\n-    suite.addTest(unittest.makeSuite(TestIndividualRealContentItems))\n-    suite.addTest(unittest.makeSuite(TestFolderContents))\n-    suite.addTest(unittest.makeSuite(TestCollectionResults))\n+    suite.addTest(unittest.defaultTestLoader.loadTestsFromTestCase(TestSetup))\n+    suite.addTest(\n+        unittest.defaultTestLoader.loadTestsFromTestCase(\n+            TestIndividualCatalogContentItems\n+        )\n+    )\n+    suite.addTest(\n+        unittest.defaultTestLoader.loadTestsFromTestCase(TestIndividualRealContentItems)\n+    )\n+    suite.addTest(unittest.defaultTestLoader.loadTestsFromTestCase(TestFolderContents))\n+    suite.addTest(\n+        unittest.defaultTestLoader.loadTestsFromTestCase(TestCollectionResults)\n+    )\n     return suite\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 05b615d..0e25822 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,3 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [tool.towncrier]\n filename = "CHANGES.rst"\n directory = "news/"\n@@ -18,3 +20,44 @@ showcontent = true\n directory = "bugfix"\n name = "Bug fixes:"\n showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "internal"\n+name = "Internal:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "documentation"\n+name = "Documentation:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "tests"\n+name = "Tests"\n+showcontent = true\n+\n+[tool.isort]\n+profile = "plone"\n+\n+[tool.black]\n+target-version = ["py38"]\n+\n+[tool.dependencychecker]\n+Zope = [\n+  # Zope own provided namespaces\n+  \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n+  \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n+  \'Zope2\', \'webdav\', \'zmi\',\n+  # Zope dependencies\n+  \'Acquisition\', \'DateTime\', \'transaction\', \'zExceptions\', \'ZODB\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.deferredimport\', \'zope.event\',\n+  \'zope.exceptions\', \'zope.globalrequest\', \'zope.i18n\', \'zope.i18nmessageid\',\n+  \'zope.interface\', \'zope.lifecycleevent\', \'zope.location\', \'zope.publisher\',\n+  \'zope.schema\', \'zope.security\', \'zope.site\', \'zope.traversing\', \'AccessControl\',\n+]\n+\'plone.base\' = [\n+  \'AccessControl\', \'Products.BTreeFolder2\', \'Products.CMFCore\',\n+  \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n+]\n+python-dateutil = [\'dateutil\']\n+ignore-packages = [\'list\']\ndiff --git a/setup.cfg b/setup.cfg\nindex 3e076fd..0da8f8f 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -1,9 +1,23 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [bdist_wheel]\n universal = 0\n \n-[isort]\n-# black compatible Plone isort rules:\n-profile = black\n-force_alphabetical_sort = True\n-force_single_line = True\n-lines_after_imports = 2\n+[flake8]\n+doctests = 1\n+ignore =\n+    # black takes care of line length\n+    E501,\n+    # black takes care of where to break lines\n+    W503,\n+    # black takes care of spaces within slicing (list[:])\n+    E203,\n+    # black takes care of spaces after commas\n+    E231,\n+\n+[check-manifest]\n+ignore =\n+    .editorconfig\n+    .meta.toml\n+    .pre-commit-config.yaml\n+    tox.ini\ndiff --git a/setup.py b/setup.py\nindex 3dfac63..8ed4142 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -42,11 +42,20 @@ def read(*rnames):\n     install_requires=[\n         "setuptools",\n         "plone.base",\n+        "Products.MimetypesRegistry",\n+        "Products.ZCatalog",\n+        "plone.app.contenttypes",\n+        "plone.i18n",\n+        "plone.registry",\n+        "plone.rfc822",\n+        "plone.uuid",\n     ],\n     extras_require={\n         "test": [\n-            "plone.app.contenttypes",\n+            "plone.app.contenttypes[test]",\n             "plone.app.testing",\n+            "plone.batching",\n+            "plone.testing",\n         ],\n     },\n     entry_points="""\ndiff --git a/tox.ini b/tox.ini\nnew file mode 100644\nindex 0000000..4f11eda\n--- /dev/null\n+++ b/tox.ini\n@@ -0,0 +1,53 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[tox]\n+# We need 4.4.0 for constrain_package_deps.\n+min_version = 4.4.0\n+envlist =\n+    format\n+    lint\n+    test\n+\n+[testenv]\n+allowlist_externals =\n+    sh\n+\n+[testenv:format]\n+description = automatically reformat code\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a pyupgrade\n+    pre-commit run -a isort\n+    pre-commit run -a black\n+    pre-commit run -a zpretty\n+\n+[testenv:lint]\n+description = run linters that will help improve the code style\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a\n+\n+[testenv:dependencies]\n+description = check if the package defines all its dependencies and generate a graph out of them\n+deps =\n+    z3c.dependencychecker==2.11\n+    pipdeptree==2.5.1\n+    graphviz  # optional dependency of pipdeptree\n+commands =\n+    dependencychecker\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+\n+[testenv:test]\n+usedevelop = true\n+constrain_package_deps = true\n+deps =\n+    zope.testrunner\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    zope-testrunner --test-path={toxinidir} -s plone.app.contentlisting\n+extras =\n+    test\n'

