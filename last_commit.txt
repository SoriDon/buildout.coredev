Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2018-03-28T17:45:12+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/aae86f5756529080743594ea02aa121729718602

A not yet installed product must not return any upgrade info

Files changed:
M CHANGES.rst
M Products/CMFPlone/controlpanel/browser/quickinstaller.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_installer.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 50dc6bcca..506a2f0b3 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -24,6 +24,11 @@ Breaking changes:
 
 - Remove old PlacelessTranslationService.
   [jensens, ksuess]
+
+- Fix controlpanel quickinstaller view: 
+  A not yet installed product must not return any upgrade info.
+  [jensens]
+
 - Fix to make plone/plone.session#11 work:
   Make test for installation of  plone.session more explicit.
   [jensens]
diff --git a/Products/CMFPlone/controlpanel/browser/quickinstaller.py b/Products/CMFPlone/controlpanel/browser/quickinstaller.py
index d975f8ff3..6ae4845fb 100644
--- a/Products/CMFPlone/controlpanel/browser/quickinstaller.py
+++ b/Products/CMFPlone/controlpanel/browser/quickinstaller.py
@@ -347,6 +347,8 @@ def upgrade_info(self, product_id):
             # No GS profile, not supported.
             return {}
         profile_id = profile['id']
+        if not self.is_profile_installed(profile_id):
+            return {}
         profile_version = str(self.ps.getVersionForProfile(profile_id))
         if profile_version == 'latest':
             profile_version = self.get_latest_upgrade_step(profile_id)
diff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_installer.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_installer.py
index f93f92e51..b15a41529 100644
--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_installer.py
+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_installer.py
@@ -233,11 +233,9 @@ def test_get_product_version(self):
     def test_upgrade_info(self):
         # an unknown product
         self.assertEqual(self.installer.upgrade_info('foo'), {})
-        # an uninstalled product
+        # a not yet/ uninstalled product
         info = self.installer.upgrade_info('plone.session')
-        self.assertFalse(info['available'])
-        self.assertTrue(info['required'])
-        self.assertEqual(info['installedVersion'], UNKNOWN)
+        self.assertEqual(self.installer.upgrade_info('plone.session'), {})
         # an installed product
         info = self.installer.upgrade_info('plone.app.dexterity')
         self.assertFalse(info['available'])
@@ -263,10 +261,10 @@ def test_upgrade_product(self):
         # an unknown product
         self.assertFalse(self.installer.upgrade_product('foo'))
 
-        # We do not complain about an uninstalled product.
+        # We do not complain about a not-yet/ uninstalled product.
         self.assertTrue(self.installer.upgrade_product('plone.session'))
         info = self.installer.upgrade_info('plone.session')
-        self.assertEqual(info['installedVersion'], UNKNOWN)
+        self.assertEqual(info, {})
 
         # We do not complain about an up to date product.
         self.assertTrue(self.installer.upgrade_product('plone.app.dexterity'))
@@ -283,18 +281,19 @@ def test_upgrade_product(self):
         info = self.installer.upgrade_info('plone.app.dexterity')
         self.assertEqual(info['installedVersion'], info['newVersion'])
 
-        # Try a Product too.
+        # Try a Product too (not yet installed).
         info = self.installer.upgrade_info('Products.CMFPlacefulWorkflow')
-        self.assertEqual(info['installedVersion'], UNKNOWN)
+        self.assertEqual(info, {})
         self.assertTrue(self.installer.upgrade_product(
-            'Products.CMFPlacefulWorkflow'))
+            'Products.CMFPlacefulWorkflow')
+        )
         info = self.installer.upgrade_info('Products.CMFPlacefulWorkflow')
-        self.assertEqual(info['installedVersion'], UNKNOWN)
+        self.assertEqual(info, {})
         info = self.installer.upgrade_info('CMFPlacefulWorkflow')
-        self.assertEqual(info['installedVersion'], UNKNOWN)
+        self.assertEqual(info, {})
         self.assertTrue(self.installer.upgrade_product('CMFPlacefulWorkflow'))
         info = self.installer.upgrade_info('CMFPlacefulWorkflow')
-        self.assertEqual(info['installedVersion'], UNKNOWN)
+        self.assertEqual(info, {})
         # fake a version
         ps = self.portal.portal_setup
         ps.setLastVersionForProfile(


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2018-03-28T17:46:11+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/79f8c16b88cbd1d5d1087aee6d7bcc078f3ed415

Merge pull request #2363 from plone/jensens/cherrypick-257c4ad60a6bd54ca2fc0c73d00e0f3c6ee49535

Cherrypick from 5.1.x: A not yet installed product must not return any upgrade info

Files changed:
M CHANGES.rst
M Products/CMFPlone/controlpanel/browser/quickinstaller.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_installer.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 50dc6bcca..506a2f0b3 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -24,6 +24,11 @@ Breaking changes:
 
 - Remove old PlacelessTranslationService.
   [jensens, ksuess]
+
+- Fix controlpanel quickinstaller view: 
+  A not yet installed product must not return any upgrade info.
+  [jensens]
+
 - Fix to make plone/plone.session#11 work:
   Make test for installation of  plone.session more explicit.
   [jensens]
diff --git a/Products/CMFPlone/controlpanel/browser/quickinstaller.py b/Products/CMFPlone/controlpanel/browser/quickinstaller.py
index d975f8ff3..6ae4845fb 100644
--- a/Products/CMFPlone/controlpanel/browser/quickinstaller.py
+++ b/Products/CMFPlone/controlpanel/browser/quickinstaller.py
@@ -347,6 +347,8 @@ def upgrade_info(self, product_id):
             # No GS profile, not supported.
             return {}
         profile_id = profile['id']
+        if not self.is_profile_installed(profile_id):
+            return {}
         profile_version = str(self.ps.getVersionForProfile(profile_id))
         if profile_version == 'latest':
             profile_version = self.get_latest_upgrade_step(profile_id)
diff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_installer.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_installer.py
index f93f92e51..b15a41529 100644
--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_installer.py
+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_installer.py
@@ -233,11 +233,9 @@ def test_get_product_version(self):
     def test_upgrade_info(self):
         # an unknown product
         self.assertEqual(self.installer.upgrade_info('foo'), {})
-        # an uninstalled product
+        # a not yet/ uninstalled product
         info = self.installer.upgrade_info('plone.session')
-        self.assertFalse(info['available'])
-        self.assertTrue(info['required'])
-        self.assertEqual(info['installedVersion'], UNKNOWN)
+        self.assertEqual(self.installer.upgrade_info('plone.session'), {})
         # an installed product
         info = self.installer.upgrade_info('plone.app.dexterity')
         self.assertFalse(info['available'])
@@ -263,10 +261,10 @@ def test_upgrade_product(self):
         # an unknown product
         self.assertFalse(self.installer.upgrade_product('foo'))
 
-        # We do not complain about an uninstalled product.
+        # We do not complain about a not-yet/ uninstalled product.
         self.assertTrue(self.installer.upgrade_product('plone.session'))
         info = self.installer.upgrade_info('plone.session')
-        self.assertEqual(info['installedVersion'], UNKNOWN)
+        self.assertEqual(info, {})
 
         # We do not complain about an up to date product.
         self.assertTrue(self.installer.upgrade_product('plone.app.dexterity'))
@@ -283,18 +281,19 @@ def test_upgrade_product(self):
         info = self.installer.upgrade_info('plone.app.dexterity')
         self.assertEqual(info['installedVersion'], info['newVersion'])
 
-        # Try a Product too.
+        # Try a Product too (not yet installed).
         info = self.installer.upgrade_info('Products.CMFPlacefulWorkflow')
-        self.assertEqual(info['installedVersion'], UNKNOWN)
+        self.assertEqual(info, {})
         self.assertTrue(self.installer.upgrade_product(
-            'Products.CMFPlacefulWorkflow'))
+            'Products.CMFPlacefulWorkflow')
+        )
         info = self.installer.upgrade_info('Products.CMFPlacefulWorkflow')
-        self.assertEqual(info['installedVersion'], UNKNOWN)
+        self.assertEqual(info, {})
         info = self.installer.upgrade_info('CMFPlacefulWorkflow')
-        self.assertEqual(info['installedVersion'], UNKNOWN)
+        self.assertEqual(info, {})
         self.assertTrue(self.installer.upgrade_product('CMFPlacefulWorkflow'))
         info = self.installer.upgrade_info('CMFPlacefulWorkflow')
-        self.assertEqual(info['installedVersion'], UNKNOWN)
+        self.assertEqual(info, {})
         # fake a version
         ps = self.portal.portal_setup
         ps.setLastVersionForProfile(


