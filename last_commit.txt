Repository: plone.autoform


Branch: refs/heads/master
Date: 2022-03-22T09:49:27+01:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/plone.autoform/commit/af2ceffc82c1a0e49ea9cff886c077178b9539d8

re-enable formhints on backported ObjectSubForm and ISubformFactory

Files changed:
M plone/autoform/tests/subform.txt
M plone/autoform/tests/test_doctests.py
M setup.py

b'diff --git a/plone/autoform/tests/subform.txt b/plone/autoform/tests/subform.txt\nindex a2d2864..96dc447 100644\n--- a/plone/autoform/tests/subform.txt\n+++ b/plone/autoform/tests/subform.txt\n@@ -2,11 +2,15 @@\n Sub-form setup details\n ======================\n \n-PLEASE NOTE: This doctest tests ObjectSubForm generation. The more general use-case\n-is tested in autoform.txt, which also contains a more thorough explanation of\n-the concepts and mechanisms concerned.\n+PLEASE NOTE: This doctest tests SubForm generation for zope.schema.Object fields.\n \n-To handle hints for z3c.form.object.ObjectSubForm forms, the special base class\n+IMPORTANT: SubFormAdapter and ISubformFactory was backported to plone.z3cform\n+since this got removed in z3c.form >= 4.x\n+\n+The more general use-case is tested in autoform.txt, which also contains a more\n+thorough explanation of the concepts and mechanisms concerned.\n+\n+To handle hints for zope.schema.Object sub-forms, the special base class\n AutoObjectSubForm is required, to set up the \'fields\' property on the subform\n instance.\n \n@@ -74,12 +78,11 @@ make z3c.form happy:\n Note that we need to pretend that we have authenticated a user. Without this,\n the permission checks will be turned off.\n \n-Now we define a TestForm, and a TestObjectSubForm. The object subform must\n-subclass from AutoObjectSubForm for the form hints to be generated.\n+Now we define a TestForm, and a TestObjectSubForm.\n \n-    >>> from z3c.form.object import ObjectSubForm\n     >>> from plone.autoform.form import AutoExtensibleForm\n     >>> from plone.autoform.form import AutoObjectSubForm\n+    >>> from plone.z3cform.subform import ObjectSubForm\n     >>> from z3c.form import form\n     >>> from z3c.form.interfaces import IForm\n \n@@ -94,14 +97,14 @@ subclass from AutoObjectSubForm for the form hints to be generated.\n     >>> class TestObjectSubForm(AutoObjectSubForm, ObjectSubForm):\n     ...     pass\n \n-\n Finally we need an adapter that acts as the ObjectSubForm\'s factory.\n \n+    >>> from plone.z3cform.interfaces import ISubformFactory\n+    >>> from plone.z3cform.subform import SubformAdapter\n     >>> from z3c.form.browser.object import ObjectWidget\n-    >>> from z3c.form.object import SubformAdapter\n     >>> import zope.component\n \n-    >>> @zope.interface.implementer(interfaces.ISubformFactory)\n+    >>> @zope.interface.implementer(ISubformFactory)\n     ... @zope.component.adapter(zope.interface.Interface,  # widget value\n     ...                         interfaces.IFormLayer,       # request\n     ...                         zope.interface.Interface,    # widget context\n@@ -115,7 +118,6 @@ Finally we need an adapter that acts as the ObjectSubForm\'s factory.\n \n     >>> zope.component.provideAdapter(TestSubformAdapter)\n \n-\n Now we can set some form data on the ObjectSubForm.\n \n Omitted fields are listed like this:\n@@ -158,14 +160,15 @@ Now we instantiate and update the ObjectSubForm for the object in TestForm\'s sch\n     >>> widget = test_form.widgets.get(\'subobject\')\n     >>> from z3c.form.object import makeDummyObject\n     >>> test_subform = zope.component.getMultiAdapter(\n-    ...     (None, request, context, test_form, widget, widget.field, makeDummyObject(ITestSubObjectSchema)),\n-    ...     interfaces.ISubformFactory)()\n+    ...     (None, request, context, test_form, widget, widget.field,\n+    ...      makeDummyObject(ITestSubObjectSchema)),\n+    ...      ISubformFactory)()\n \n     >>> test_subform.update()\n \n Lets check that foofield is after barfield and that quxfield is not shown.\n \n-    >>> test_subform.fields.keys()\n+    >>> list(test_subform.fields.keys())\n     [\'barfield\', \'foofield\', \'bazfield\']\n \n And that the barfield has a RadioWidget.\ndiff --git a/plone/autoform/tests/test_doctests.py b/plone/autoform/tests/test_doctests.py\nindex 0662d54..1f8262b 100644\n--- a/plone/autoform/tests/test_doctests.py\n+++ b/plone/autoform/tests/test_doctests.py\n@@ -11,7 +11,7 @@\n \n test_files = [\n     \'../autoform.rst\',\n-    # \'subform.txt\',  # subform is removed in z3c.form >= 4.x\n+    \'subform.txt\',\n     \'../view.txt\',\n     \'../supermodel.txt\',\n ]\ndiff --git a/setup.py b/setup.py\nindex 5bc54dd..cd4fda9 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -51,9 +51,8 @@ def read(*rnames):\n         \'zope.security\',\n         \'zope.dottedname\',\n         \'plone.supermodel>=1.3.dev0\',\n-        \'plone.z3cform>=0.9.0.dev0\',\n+        \'plone.z3cform>=2.0.0a2.dev0\',\n         \'z3c.form\',\n-        # \'AccessControl\',\n         # -*- Extra requirements: -*-\n     ],\n     entry_points="""\n'

Repository: plone.autoform


Branch: refs/heads/master
Date: 2022-03-22T09:52:50+01:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/plone.autoform/commit/43436754226e91d6dccf4bf94e779fab8bb6905b

add changelog

Files changed:
A news/41.feature

b'diff --git a/news/41.feature b/news/41.feature\nnew file mode 100644\nindex 0000000..2d205e3\n--- /dev/null\n+++ b/news/41.feature\n@@ -0,0 +1,2 @@\n+Reimplementation of backported ObjectSubForm and ISubformFactory\n+[petschki]\n'

Repository: plone.autoform


Branch: refs/heads/master
Date: 2022-03-22T11:29:19+01:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/plone.autoform/commit/6328e27b88e98cbfc484f1a6c2f6d6bf336a1dc3

update comment

Files changed:
M plone/autoform/form.py

b'diff --git a/plone/autoform/form.py b/plone/autoform/form.py\nindex 5f38b72..818bcfc 100644\n--- a/plone/autoform/form.py\n+++ b/plone/autoform/form.py\n@@ -37,8 +37,8 @@ def updateFields(self):\n \n @implementer(IAutoObjectSubForm)\n class AutoObjectSubForm(AutoFields):\n-    """A Mixin class for z3c.form.object.ObjectSubForm forms that supports\n-    fields being updated from hints in a schema.\n+    """A Mixin class for plone.z3cform.subform.ObjectSubForm forms that\n+    supports fields being updated from hints in a schema.\n     """\n \n     @property\n'

Repository: plone.autoform


Branch: refs/heads/master
Date: 2022-03-22T11:29:28+01:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/plone.autoform/commit/f245690740f9b3e38da548c913e8f312269ed230

bump version

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex cd4fda9..1e1bb7a 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -9,7 +9,7 @@ def read(*rnames):\n     return open(os.path.join(os.path.dirname(__file__), *rnames)).read()\n \n \n-version = \'1.9.1.dev0\'\n+version = \'2.0.0.dev0\'\n \n long_description = (read(\'README.rst\') + \'\\n\' + read(\'CHANGES.rst\'))\n \n@@ -23,15 +23,12 @@ def read(*rnames):\n         "Development Status :: 5 - Production/Stable",\n         "Framework :: Plone",\n         "Framework :: Plone :: Core",\n-        "Framework :: Plone :: 5.1",\n-        "Framework :: Plone :: 5.2",\n         "Framework :: Plone :: 6.0",\n         "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)",\n         "Programming Language :: Python",\n-        "Programming Language :: Python :: 2.7",\n-        "Programming Language :: Python :: 3.6",\n         "Programming Language :: Python :: 3.7",\n         "Programming Language :: Python :: 3.8",\n+        "Programming Language :: Python :: 3.9",\n         "Topic :: Software Development :: Libraries :: Python Modules",\n     ],\n     keywords=\'plone form z3c.form\',\n'

Repository: plone.autoform


Branch: refs/heads/master
Date: 2022-03-22T13:39:31+01:00
Author: Peter Mathis (petschki) <petschki@users.noreply.github.com>
Commit: https://github.com/plone/plone.autoform/commit/b7b5a34706f4af8d367d9355573d9e7b8adc8fe4

Merge pull request #41 from plone/backport-autoextensible-subform

Reimplementation of backported ObjectSubForm and ISubformFactory adapter

Files changed:
A news/41.feature
M plone/autoform/form.py
M plone/autoform/tests/subform.txt
M plone/autoform/tests/test_doctests.py
M setup.py

b'diff --git a/news/41.feature b/news/41.feature\nnew file mode 100644\nindex 0000000..2d205e3\n--- /dev/null\n+++ b/news/41.feature\n@@ -0,0 +1,2 @@\n+Reimplementation of backported ObjectSubForm and ISubformFactory\n+[petschki]\ndiff --git a/plone/autoform/form.py b/plone/autoform/form.py\nindex 5f38b72..818bcfc 100644\n--- a/plone/autoform/form.py\n+++ b/plone/autoform/form.py\n@@ -37,8 +37,8 @@ def updateFields(self):\n \n @implementer(IAutoObjectSubForm)\n class AutoObjectSubForm(AutoFields):\n-    """A Mixin class for z3c.form.object.ObjectSubForm forms that supports\n-    fields being updated from hints in a schema.\n+    """A Mixin class for plone.z3cform.subform.ObjectSubForm forms that\n+    supports fields being updated from hints in a schema.\n     """\n \n     @property\ndiff --git a/plone/autoform/tests/subform.txt b/plone/autoform/tests/subform.txt\nindex a2d2864..96dc447 100644\n--- a/plone/autoform/tests/subform.txt\n+++ b/plone/autoform/tests/subform.txt\n@@ -2,11 +2,15 @@\n Sub-form setup details\n ======================\n \n-PLEASE NOTE: This doctest tests ObjectSubForm generation. The more general use-case\n-is tested in autoform.txt, which also contains a more thorough explanation of\n-the concepts and mechanisms concerned.\n+PLEASE NOTE: This doctest tests SubForm generation for zope.schema.Object fields.\n \n-To handle hints for z3c.form.object.ObjectSubForm forms, the special base class\n+IMPORTANT: SubFormAdapter and ISubformFactory was backported to plone.z3cform\n+since this got removed in z3c.form >= 4.x\n+\n+The more general use-case is tested in autoform.txt, which also contains a more\n+thorough explanation of the concepts and mechanisms concerned.\n+\n+To handle hints for zope.schema.Object sub-forms, the special base class\n AutoObjectSubForm is required, to set up the \'fields\' property on the subform\n instance.\n \n@@ -74,12 +78,11 @@ make z3c.form happy:\n Note that we need to pretend that we have authenticated a user. Without this,\n the permission checks will be turned off.\n \n-Now we define a TestForm, and a TestObjectSubForm. The object subform must\n-subclass from AutoObjectSubForm for the form hints to be generated.\n+Now we define a TestForm, and a TestObjectSubForm.\n \n-    >>> from z3c.form.object import ObjectSubForm\n     >>> from plone.autoform.form import AutoExtensibleForm\n     >>> from plone.autoform.form import AutoObjectSubForm\n+    >>> from plone.z3cform.subform import ObjectSubForm\n     >>> from z3c.form import form\n     >>> from z3c.form.interfaces import IForm\n \n@@ -94,14 +97,14 @@ subclass from AutoObjectSubForm for the form hints to be generated.\n     >>> class TestObjectSubForm(AutoObjectSubForm, ObjectSubForm):\n     ...     pass\n \n-\n Finally we need an adapter that acts as the ObjectSubForm\'s factory.\n \n+    >>> from plone.z3cform.interfaces import ISubformFactory\n+    >>> from plone.z3cform.subform import SubformAdapter\n     >>> from z3c.form.browser.object import ObjectWidget\n-    >>> from z3c.form.object import SubformAdapter\n     >>> import zope.component\n \n-    >>> @zope.interface.implementer(interfaces.ISubformFactory)\n+    >>> @zope.interface.implementer(ISubformFactory)\n     ... @zope.component.adapter(zope.interface.Interface,  # widget value\n     ...                         interfaces.IFormLayer,       # request\n     ...                         zope.interface.Interface,    # widget context\n@@ -115,7 +118,6 @@ Finally we need an adapter that acts as the ObjectSubForm\'s factory.\n \n     >>> zope.component.provideAdapter(TestSubformAdapter)\n \n-\n Now we can set some form data on the ObjectSubForm.\n \n Omitted fields are listed like this:\n@@ -158,14 +160,15 @@ Now we instantiate and update the ObjectSubForm for the object in TestForm\'s sch\n     >>> widget = test_form.widgets.get(\'subobject\')\n     >>> from z3c.form.object import makeDummyObject\n     >>> test_subform = zope.component.getMultiAdapter(\n-    ...     (None, request, context, test_form, widget, widget.field, makeDummyObject(ITestSubObjectSchema)),\n-    ...     interfaces.ISubformFactory)()\n+    ...     (None, request, context, test_form, widget, widget.field,\n+    ...      makeDummyObject(ITestSubObjectSchema)),\n+    ...      ISubformFactory)()\n \n     >>> test_subform.update()\n \n Lets check that foofield is after barfield and that quxfield is not shown.\n \n-    >>> test_subform.fields.keys()\n+    >>> list(test_subform.fields.keys())\n     [\'barfield\', \'foofield\', \'bazfield\']\n \n And that the barfield has a RadioWidget.\ndiff --git a/plone/autoform/tests/test_doctests.py b/plone/autoform/tests/test_doctests.py\nindex 0662d54..1f8262b 100644\n--- a/plone/autoform/tests/test_doctests.py\n+++ b/plone/autoform/tests/test_doctests.py\n@@ -11,7 +11,7 @@\n \n test_files = [\n     \'../autoform.rst\',\n-    # \'subform.txt\',  # subform is removed in z3c.form >= 4.x\n+    \'subform.txt\',\n     \'../view.txt\',\n     \'../supermodel.txt\',\n ]\ndiff --git a/setup.py b/setup.py\nindex 5bc54dd..1e1bb7a 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -9,7 +9,7 @@ def read(*rnames):\n     return open(os.path.join(os.path.dirname(__file__), *rnames)).read()\n \n \n-version = \'1.9.1.dev0\'\n+version = \'2.0.0.dev0\'\n \n long_description = (read(\'README.rst\') + \'\\n\' + read(\'CHANGES.rst\'))\n \n@@ -23,15 +23,12 @@ def read(*rnames):\n         "Development Status :: 5 - Production/Stable",\n         "Framework :: Plone",\n         "Framework :: Plone :: Core",\n-        "Framework :: Plone :: 5.1",\n-        "Framework :: Plone :: 5.2",\n         "Framework :: Plone :: 6.0",\n         "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)",\n         "Programming Language :: Python",\n-        "Programming Language :: Python :: 2.7",\n-        "Programming Language :: Python :: 3.6",\n         "Programming Language :: Python :: 3.7",\n         "Programming Language :: Python :: 3.8",\n+        "Programming Language :: Python :: 3.9",\n         "Topic :: Software Development :: Libraries :: Python Modules",\n     ],\n     keywords=\'plone form z3c.form\',\n@@ -51,9 +48,8 @@ def read(*rnames):\n         \'zope.security\',\n         \'zope.dottedname\',\n         \'plone.supermodel>=1.3.dev0\',\n-        \'plone.z3cform>=0.9.0.dev0\',\n+        \'plone.z3cform>=2.0.0a2.dev0\',\n         \'z3c.form\',\n-        # \'AccessControl\',\n         # -*- Extra requirements: -*-\n     ],\n     entry_points="""\n'

