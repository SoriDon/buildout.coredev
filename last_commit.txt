Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2016-07-25T16:23:44+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/c9308eadf546c926d938754fa25e3f2b25da9f1b

fix Fontello makefile to run on linux as well

Files changed:
M .gitignore
M Products/CMFPlone/static/Makefile
D Products/CMFPlone/static/.fontello

diff --git a/.gitignore b/.gitignore
index 9af21b8..42e2ddc 100644
--- a/.gitignore
+++ b/.gitignore
@@ -29,3 +29,4 @@ docs/html
 /Products/CMFPlone/controlpanel/.ropeproject/globalnames
 /Products/CMFPlone/controlpanel/.ropeproject/history
 /Products/CMFPlone/controlpanel/.ropeproject/objectdb
+/Products/CMFPlone/static/.fontello
diff --git a/Products/CMFPlone/static/.fontello b/Products/CMFPlone/static/.fontello
deleted file mode 100644
index 1e61858..0000000
--- a/Products/CMFPlone/static/.fontello
+++ /dev/null
@@ -1 +0,0 @@
-9fb9bd32116b82bc0e06211e085f3a59
\ No newline at end of file
diff --git a/Products/CMFPlone/static/Makefile b/Products/CMFPlone/static/Makefile
index 2b5c330..c582912 100644
--- a/Products/CMFPlone/static/Makefile
+++ b/Products/CMFPlone/static/Makefile
@@ -4,6 +4,13 @@ FONT_DIR      ?= ./fonts
 
 ### Don't edit below ###
 
+UNAME := $(shell uname)
+ifeq ($(UNAME), Darwin)
+BROWSEROPEN = open
+else
+BROWSEROPEN = x-www-browser
+endif
+
 FONTELLO_HOST ?= http://fontello.com
 
 fontopen:
@@ -14,8 +21,7 @@ fontopen:
 	curl --silent --show-error --fail --output .fontello \
 		--form "config=@${FONT_DIR}/config.json" \
 		${FONTELLO_HOST}
-	open ${FONTELLO_HOST}/`cat .fontello`
-
+	${BROWSEROPEN} ${FONTELLO_HOST}/`cat .fontello`
 
 fontsave:
 	@if test ! `which unzip` ; then \
@@ -39,4 +45,4 @@ fontsave:
 	mv `find ./.fontello.src -maxdepth 1 -name 'fontello-*'`/css/fontello.css ${FONT_DIR}/plone-fontello.less
 	sed -i.bak 's/\.\.\/font\//\@\{fontsPrefix\}plone-/g' ${FONT_DIR}/plone-fontello.less
 	rm -rf ${FONT_DIR}/plone-fontello.less.bak
-	rm -rf .fontello.src .fontello.zip
\ No newline at end of file
+	rm -rf .fontello.src .fontello.zip


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2016-07-25T16:23:57+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/5a3fe04f0e6bbcf3538b31e13f96bdaaee5ae67a

Merge branch 'master' of git://github.com/plone/Products.CMFPlone

Files changed:
M CHANGES.rst
M Products/CMFPlone/DublinCore.py
M Products/CMFPlone/MigrationTool.py
M Products/CMFPlone/PloneBaseTool.py
M Products/CMFPlone/PloneControlPanel.py
M Products/CMFPlone/PloneFolder.py
M Products/CMFPlone/PropertiesTool.py
M Products/CMFPlone/TranslationServiceTool.py
M Products/CMFPlone/UnicodeSplitter/splitter.py
M Products/CMFPlone/_scripts/compile_resources.py
M Products/CMFPlone/browser/atd.py
M Products/CMFPlone/browser/global_statusmessage.py
M Products/CMFPlone/browser/main_template.py
M Products/CMFPlone/browser/navigation.py
M Products/CMFPlone/browser/sitemap.py
M Products/CMFPlone/browser/syndication/adapters.py
M Products/CMFPlone/browser/syndication/settings.py
M Products/CMFPlone/browser/syndication/tool.py
M Products/CMFPlone/browser/syndication/utils.py
M Products/CMFPlone/browser/templates/search.pt
M Products/CMFPlone/controlpanel/bbb/editing.py
M Products/CMFPlone/controlpanel/bbb/filter.py
M Products/CMFPlone/controlpanel/bbb/language.py
M Products/CMFPlone/controlpanel/bbb/mail.py
M Products/CMFPlone/controlpanel/bbb/maintenance.py
M Products/CMFPlone/controlpanel/bbb/markup.py
M Products/CMFPlone/controlpanel/bbb/search.py
M Products/CMFPlone/controlpanel/bbb/security.py
M Products/CMFPlone/controlpanel/bbb/site.py
M Products/CMFPlone/controlpanel/bbb/usergroups.py
M Products/CMFPlone/controlpanel/browser/actions.py
M Products/CMFPlone/controlpanel/events.py
M Products/CMFPlone/events.py
M Products/CMFPlone/factory.py
M Products/CMFPlone/interfaces/controlpanel.py
M Products/CMFPlone/setuphandlers.py
M Products/CMFPlone/tests/dummy.py
M Products/CMFPlone/tests/robot/test_actionmenu.robot
M Products/CMFPlone/tests/robot/test_controlpanel_actions.robot
M Products/CMFPlone/tests/robot/test_controlpanel_editing.robot
M Products/CMFPlone/tests/robot/test_controlpanel_filter.robot
M Products/CMFPlone/tests/robot/test_controlpanel_language.robot
M Products/CMFPlone/tests/robot/test_controlpanel_markup.robot
M Products/CMFPlone/tests/robot/test_controlpanel_navigation.robot
M Products/CMFPlone/tests/robot/test_controlpanel_search.robot
M Products/CMFPlone/tests/robot/test_controlpanel_security.robot
M Products/CMFPlone/tests/robot/test_controlpanel_site.robot
M Products/CMFPlone/tests/robot/test_controlpanel_social.robot
M Products/CMFPlone/tests/robot/test_controlpanel_types.robot
M Products/CMFPlone/tests/robot/test_controlpanel_usergroups.robot
M Products/CMFPlone/tests/robot/test_edit.robot
M Products/CMFPlone/tests/robot/test_edit_user_schema.robot
M Products/CMFPlone/tests/robot/test_folder_contents.robot
M Products/CMFPlone/tests/robot/test_linkintegrity.robot
M Products/CMFPlone/tests/robot/test_livesearch.robot
M Products/CMFPlone/tests/robot/test_overlays.robot
M Products/CMFPlone/tests/robot/test_portlets.robot
M Products/CMFPlone/tests/robot/test_querystring.robot
M Products/CMFPlone/tests/robot/test_thememapper.robot
M Products/CMFPlone/tests/robot/test_tinymce.robot
M Products/CMFPlone/tests/testCatalogTool.py
M Products/CMFPlone/tests/testNavTree.py
M Products/CMFPlone/tests/testNavigationView.py
M Products/CMFPlone/tests/test_robot.py
M Products/CMFPlone/unicodeconflictresolver.py
M setup.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 2c32bd2..51db8ed 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,6 +10,13 @@ Changelog
 
 Breaking changes:
 
+- Add ``review_state`` to ``CatalogNavigationTabs.topLevelTabs`` results.
+  This allows for exposing the items workflow state in portal navigation tabs.
+  [thet]
+
+- Remove discontinued module ``grunt-debug-task`` from ``plone-compile-resources``.
+  [jensens]
+
 - Remove deprecated resource registrations for ``mockup-parser`` and ``mockup-registry`` from mockup-core.
   Use those from patternslib instead.
   [thet]
@@ -65,6 +72,20 @@ New features:
 
 Bug fixes:
 
+- Fixed missing keyword in robot tests due to wrong documentation lines.  [maurits]
+
+- Rewording of some Site control panel text [tkimnguyen]
+
+- Fixed syntaxerror for duplicate tag in robot tests.  [maurits]
+
+- Marked two robot tests as unstable, non-critical.
+  Refs https://github.com/plone/Products.CMFPlone/issues/1656  [maurits]
+
+- Use ``Plone Test Setup`` and ``Plone Test Teardown`` from ``plone.app.robotframework`` master.  [maurits]
+
+- Let npm install work on windows for plone-compile-resources.
+  [jensens]
+
 - Don't fail, when combining bundles and the target resource files (``BUNLDE-compiled.[min.js|css]``) do not yet exist on the filesystem.
   Fixes GenericSetup failing silently on import with when a to-be-compiled bundle which exists only as registry entry is processed in the ``combine-bundle`` step.
   [thet]
@@ -140,6 +161,11 @@ Bug fixes:
 
 - fix typo and comma splice error in HTML filtering control panel [tkimnguyen]
 
+- Use zope.interface decorator.
+  [gforcada]
+
+- Remove advanced_search input which is in double.
+  [Gagaro]
 
 5.1a1 (2016-03-31)
 ------------------
diff --git a/Products/CMFPlone/DublinCore.py b/Products/CMFPlone/DublinCore.py
index 1e541cc..45b2c58 100644
--- a/Products/CMFPlone/DublinCore.py
+++ b/Products/CMFPlone/DublinCore.py
@@ -19,7 +19,7 @@
 from App.special_dtml import DTMLFile
 from DateTime.DateTime import DateTime
 from OFS.PropertyManager import PropertyManager
-from zope.interface import implements
+from zope.interface import implementer
 
 from Products.CMFCore.interfaces import ICatalogableDublinCore
 from Products.CMFCore.interfaces import IDublinCore
@@ -62,13 +62,12 @@ def tuplize(valueName, value, splitter=lambda x: x.split()):
     raise ValueError, "%s of unsupported type" % valueName
 
 
+@implementer(IDublinCore, ICatalogableDublinCore, IMutableDublinCore)
 class DefaultDublinCoreImpl(PropertyManager):
 
     """ Mix-in class which provides Dublin Core methods.
     """
 
-    implements(IDublinCore, ICatalogableDublinCore, IMutableDublinCore)
-
     security = ClassSecurityInfo()
 
     def __init__(self, title='', subject=(), description='', contributors=(), effective_date=None, expiration_date=None, format='text/html', language='', rights=''
diff --git a/Products/CMFPlone/MigrationTool.py b/Products/CMFPlone/MigrationTool.py
index afb3754..1294162 100644
--- a/Products/CMFPlone/MigrationTool.py
+++ b/Products/CMFPlone/MigrationTool.py
@@ -4,7 +4,7 @@
 
 import pkg_resources
 import transaction
-from zope.interface import implements
+from zope.interface import implementer
 
 from AccessControl import ClassSecurityInfo
 from AccessControl.requestmethod import postonly
@@ -104,11 +104,10 @@ def upgrade_all(self, context):
 ])
 
 
+@implementer(IMigrationTool)
 class MigrationTool(PloneBaseTool, UniqueObject, SimpleItem):
     """Handles migrations between Plone releases"""
 
-    implements(IMigrationTool)
-
     id = 'portal_migration'
     meta_type = 'Plone Migration Tool'
     toolicon = 'skins/plone_images/site_icon.png'
diff --git a/Products/CMFPlone/PloneBaseTool.py b/Products/CMFPlone/PloneBaseTool.py
index 041d19e..7a3c35b 100644
--- a/Products/CMFPlone/PloneBaseTool.py
+++ b/Products/CMFPlone/PloneBaseTool.py
@@ -8,7 +8,7 @@
 from Products.CMFCore import Expression
 from Products.CMFCore.utils import getToolByName
 
-from zope.interface import implements
+from zope.interface import implementer
 from zope.component import getMultiAdapter
 
 TempFolderClass = None
@@ -146,14 +146,13 @@ def getExprContext(context, object=None):
     return ec
 
 
+@implementer(IPloneBaseTool)
 class PloneBaseTool:
     """Base class of all tools used in CMFPlone and Plone Core
     """
 
     security = ClassSecurityInfo()
 
-    implements(IPloneBaseTool)
-
     # overwrite getOAI and getExprContext to use our variants that understand
     # the temp folder of portal factory
     def _getOAI(self, object):
diff --git a/Products/CMFPlone/PloneControlPanel.py b/Products/CMFPlone/PloneControlPanel.py
index 9672abe..5a1465a 100644
--- a/Products/CMFPlone/PloneControlPanel.py
+++ b/Products/CMFPlone/PloneControlPanel.py
@@ -17,7 +17,7 @@
 from zope.component.hooks import getSite
 from zope.i18n import translate
 from zope.i18nmessageid import Message
-from zope.interface import implements
+from zope.interface import implementer
 
 
 class PloneConfiglet(ActionInformation):
@@ -41,14 +41,13 @@ def getAction(self, ec):
         return res
 
 
+@implementer(IControlPanel)
 class PloneControlPanel(PloneBaseTool, UniqueObject,
                         Folder, ActionProviderBase, PropertyManager):
     """Weave together the various sources of "actions" which
     are apropos to the current user and context.
     """
 
-    implements(IControlPanel)
-
     security = ClassSecurityInfo()
 
     id = 'portal_controlpanel'
diff --git a/Products/CMFPlone/PloneFolder.py b/Products/CMFPlone/PloneFolder.py
index 84f8eca..b275b56 100644
--- a/Products/CMFPlone/PloneFolder.py
+++ b/Products/CMFPlone/PloneFolder.py
@@ -24,7 +24,7 @@
     ModifyPortalContent
 from Products.CMFPlone.DublinCore import DefaultDublinCoreImpl
 
-from zope.interface import implements
+from zope.interface import implementer
 
 
 class ReplaceableWrapper:
@@ -93,6 +93,7 @@ def manage_renameObject(self, id, new_id, REQUEST=None):
 InitializeClass(OrderedContainer)
 
 
+@implementer(IWriteLock)
 class BasePloneFolder(CatalogAware, WorkflowAware, OpaqueItemManager,
                       PortalFolderBase, DefaultDublinCoreImpl):
     """Implements basic Plone folder functionality except ordering support.
@@ -100,8 +101,6 @@ class BasePloneFolder(CatalogAware, WorkflowAware, OpaqueItemManager,
 
     security = ClassSecurityInfo()
 
-    implements(IWriteLock)
-
     manage_options = Folder.manage_options + \
         WorkflowAware.manage_options
 
diff --git a/Products/CMFPlone/PropertiesTool.py b/Products/CMFPlone/PropertiesTool.py
index 0acbe9e..8763fb6 100644
--- a/Products/CMFPlone/PropertiesTool.py
+++ b/Products/CMFPlone/PropertiesTool.py
@@ -6,7 +6,7 @@
 from OFS.Folder import Folder
 from App.class_init import InitializeClass
 from App.special_dtml import DTMLFile
-from zope.interface import implements
+from zope.interface import implementer
 
 from OFS.PropertyManager import PropertyManager
 from OFS.SimpleItem import SimpleItem
@@ -21,6 +21,7 @@
 from Products.CMFCore.interfaces import ISiteRoot
 
 
+@implementer(IPropertiesTool)
 class PropertiesTool(PloneBaseTool, Folder, UniqueObject):
     """ Plone properties tool
     """
@@ -34,8 +35,6 @@ class PropertiesTool(PloneBaseTool, Folder, UniqueObject):
          'action': 'manage_addPropertySheetForm'},
     ))
 
-    implements(IPropertiesTool)
-
     manage_options = ((Folder.manage_options[0], ) +
                       ({'label': 'Overview',
                         'action': 'manage_overview'},) +
@@ -110,14 +109,13 @@ def smtp_server(self):
 InitializeClass(PropertiesTool)
 
 
+@implementer(ISimpleItemWithProperties)
 class SimpleItemWithProperties (PropertyManager, SimpleItem):
     """
     A common base class for objects with configurable
     properties in a fixed schema.
     """
 
-    implements(ISimpleItemWithProperties)
-
     def __init__(self, id, title=''):
         self.id = id
         self.title = title
diff --git a/Products/CMFPlone/TranslationServiceTool.py b/Products/CMFPlone/TranslationServiceTool.py
index b7fa8a1..42ca921 100644
--- a/Products/CMFPlone/TranslationServiceTool.py
+++ b/Products/CMFPlone/TranslationServiceTool.py
@@ -20,10 +20,11 @@
 from Products.CMFPlone.interfaces import ITranslationServiceTool
 from Products.CMFPlone.PloneBaseTool import PloneBaseTool
 from zope.i18n import translate
-from zope.interface import implements
+from zope.interface import implementer
 from zope.publisher.interfaces.browser import IBrowserRequest
 
 
+@implementer(ITranslationServiceTool)
 class TranslationServiceTool(PloneBaseTool, UniqueObject, SimpleItem):
     """ Utility methods to access the translation machinery """
 
@@ -31,7 +32,6 @@ class TranslationServiceTool(PloneBaseTool, UniqueObject, SimpleItem):
     meta_type = 'Portal Translation Service Tool'
     toolicon = 'skins/plone_images/site_icon.png'
     security = ClassSecurityInfo()
-    implements(ITranslationServiceTool)
 
     security.declarePublic('utranslate')
 
diff --git a/Products/CMFPlone/UnicodeSplitter/splitter.py b/Products/CMFPlone/UnicodeSplitter/splitter.py
index 5517e58..fceae06 100644
--- a/Products/CMFPlone/UnicodeSplitter/splitter.py
+++ b/Products/CMFPlone/UnicodeSplitter/splitter.py
@@ -7,7 +7,7 @@
 """
 import unicodedata
 
-from zope.interface import implements
+from zope.interface import implementer
 
 from Products.ZCTextIndex.ISplitter import ISplitter
 from Products.ZCTextIndex.PipelineFactory import element_factory
@@ -123,10 +123,9 @@ def process_unicode_glob(uni):
                     yield x
 
 
+@implementer(ISplitter)
 class Splitter(object):
 
-    implements(ISplitter)
-
     def process(self, lst):
         """ Will be called when indexing.
         Receive list of str, make it bi-grammed, then return
diff --git a/Products/CMFPlone/_scripts/compile_resources.py b/Products/CMFPlone/_scripts/compile_resources.py
index be458b3..0f74ab0 100644
--- a/Products/CMFPlone/_scripts/compile_resources.py
+++ b/Products/CMFPlone/_scripts/compile_resources.py
@@ -17,12 +17,16 @@
     "grunt-contrib-requirejs": "~1.0.0",
     "grunt-contrib-uglify": "~1.0.1",
     "grunt-contrib-watch": "~1.0.0",
-    "grunt-debug-task": "~0.1.8",
     "grunt-sed": "~0.1.1",
     "less-plugin-inline-urls": "^1.1.0"
   }
 }"""
 
+if os.name == 'nt':
+    NPM_CMD = 'npm.cmd'
+else:
+    NPM_CMD = 'npm'
+
 
 def generate_package_json(base_path):
     # generate package.json file here if not exists...
@@ -129,13 +133,19 @@ def main(argv=sys.argv):
     # generates only if not already there
     generate_package_json(base_path)
     if not args.skip_npminstall:
-        cmd = ['npm', 'install']
+        cmd = [NPM_CMD, 'install']
         print('Setup npm env')
         print('Running command: %s' % ' '.join(cmd))
         subprocess.check_call(cmd)
 
     # Generate Gruntfile
-    grunt = os.path.join(base_path, 'node_modules', 'grunt-cli', 'bin', 'grunt')
+    grunt = os.path.join(
+        base_path,
+        'node_modules',
+        'grunt-cli',
+        'bin',
+        'grunt'
+    )
     if not args.skip_gruntfile:
         generate_gruntfile(
             base_path,
diff --git a/Products/CMFPlone/browser/atd.py b/Products/CMFPlone/browser/atd.py
index 804e5c4..e54c232 100644
--- a/Products/CMFPlone/browser/atd.py
+++ b/Products/CMFPlone/browser/atd.py
@@ -4,13 +4,13 @@
 import httplib
 from Products.CMFPlone.interfaces import ITinyMCESchema
 from Products.CMFPlone.interfaces.atd import IATDProxyView
-from zope.interface import implements
+from zope.interface import implementer
 
 
+@implementer(IATDProxyView)
 class ATDProxyView(object):
     """ Proxy for the 'After the Deadline' spellchecker
     """
-    implements(IATDProxyView)
 
     def checkDocument(self):
         """ Proxy for the AtD service's checkDocument function
diff --git a/Products/CMFPlone/browser/global_statusmessage.py b/Products/CMFPlone/browser/global_statusmessage.py
index 8ea4148..552bc9e 100644
--- a/Products/CMFPlone/browser/global_statusmessage.py
+++ b/Products/CMFPlone/browser/global_statusmessage.py
@@ -1,4 +1,4 @@
-from zope.interface import implements
+from zope.interface import implementer
 
 from Products.Five import BrowserView
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
@@ -6,9 +6,9 @@
 from Products.CMFPlone.browser.interfaces import IGlobalStatusMessage
 
 
+@implementer(IGlobalStatusMessage)
 class GlobalStatusMessage(BrowserView):
     """Display messages to the current user"""
-    implements(IGlobalStatusMessage)
 
     index = ViewPageTemplateFile('templates/global_statusmessage.pt')
 
diff --git a/Products/CMFPlone/browser/main_template.py b/Products/CMFPlone/browser/main_template.py
index d62199f..b29dcdb 100644
--- a/Products/CMFPlone/browser/main_template.py
+++ b/Products/CMFPlone/browser/main_template.py
@@ -1,4 +1,4 @@
-from zope.interface import implements
+from zope.interface import implementer
 
 from Products.Five import BrowserView
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
@@ -6,8 +6,8 @@
 from Products.CMFPlone.browser.interfaces import IMainTemplate
 
 
+@implementer(IMainTemplate)
 class MainTemplate(BrowserView):
-    implements(IMainTemplate)
 
     ajax_template = ViewPageTemplateFile('templates/ajax_main_template.pt')
     main_template = ViewPageTemplateFile('templates/main_template.pt')
diff --git a/Products/CMFPlone/browser/navigation.py b/Products/CMFPlone/browser/navigation.py
index 7dfbd62..27bae58 100644
--- a/Products/CMFPlone/browser/navigation.py
+++ b/Products/CMFPlone/browser/navigation.py
@@ -155,7 +155,8 @@ def _get_url(item):
                 'name': utils.pretty_title_or_id(context, item),
                 'id': item.getId,
                 'url': item_url,
-                'description': item.Description
+                'description': item.Description,
+                'review_state': item.review_state
             }
             result.append(data)
 
diff --git a/Products/CMFPlone/browser/sitemap.py b/Products/CMFPlone/browser/sitemap.py
index 1fd204f..08b7071 100644
--- a/Products/CMFPlone/browser/sitemap.py
+++ b/Products/CMFPlone/browser/sitemap.py
@@ -1,6 +1,6 @@
 from Acquisition import aq_inner
 from zope.component import getMultiAdapter
-from zope.interface import implements
+from zope.interface import implementer
 
 from Products.Five import BrowserView
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
@@ -8,8 +8,8 @@
 from Products.CMFPlone.browser.interfaces import ISitemapView
 
 
+@implementer(ISitemapView)
 class SitemapView(BrowserView):
-    implements(ISitemapView)
 
     item_template = ViewPageTemplateFile('templates/sitemap-item.pt')
 
diff --git a/Products/CMFPlone/browser/syndication/adapters.py b/Products/CMFPlone/browser/syndication/adapters.py
index e3ba42c..2f2140e 100644
--- a/Products/CMFPlone/browser/syndication/adapters.py
+++ b/Products/CMFPlone/browser/syndication/adapters.py
@@ -1,6 +1,6 @@
 from zope.component.hooks import getSite
 from zope.component import adapts
-from zope.interface import implements
+from zope.interface import implementer
 from zope.interface import Interface
 from zope.component import queryMultiAdapter
 from zope.component import getUtility
@@ -101,8 +101,8 @@ def publisher(self):
         return 'No Publisher'
 
 
+@implementer(IFeed)
 class FolderFeed(BaseFeedData):
-    implements(IFeed)
 
     @lazy_property
     def author(self):
@@ -168,8 +168,8 @@ def _brains(self):
         return self.context.queryCatalog(batch=False)[:self.limit]
 
 
+@implementer(ISearchFeed)
 class SearchFeed(FolderFeed):
-    implements(ISearchFeed)
 
     def _brains(self):
         max_items = self.limit
@@ -183,8 +183,8 @@ def _brains(self):
             use_navigation_root=True)[start:end]
 
 
+@implementer(IFeedItem)
 class BaseItem(BaseFeedData):
-    implements(IFeedItem)
     adapts(IItem, IFeed)
 
     def __init__(self, context, feed):
diff --git a/Products/CMFPlone/browser/syndication/settings.py b/Products/CMFPlone/browser/syndication/settings.py
index 611da06..ecf5b8d 100644
--- a/Products/CMFPlone/browser/syndication/settings.py
+++ b/Products/CMFPlone/browser/syndication/settings.py
@@ -1,5 +1,5 @@
 from zope.component import adapts
-from zope.interface import implements
+from zope.interface import implementer
 from Products.CMFPlone.interfaces.syndication import IFeedSettings
 from Products.CMFPlone.interfaces.syndication import ISyndicatable
 from zope.annotation.interfaces import IAnnotations
@@ -11,8 +11,8 @@
 FEED_SETTINGS_KEY = 'syndication_settings'
 
 
+@implementer(IFeedSettings)
 class FeedSettings(object):
-    implements(IFeedSettings)
     adapts(ISyndicatable)
 
     def __init__(self, context):
diff --git a/Products/CMFPlone/browser/syndication/tool.py b/Products/CMFPlone/browser/syndication/tool.py
index 92c1524..20fd4e7 100644
--- a/Products/CMFPlone/browser/syndication/tool.py
+++ b/Products/CMFPlone/browser/syndication/tool.py
@@ -2,7 +2,7 @@
 from AccessControl import Unauthorized
 
 from zope.component import getAdapter
-from zope.interface import implements
+from zope.interface import implementer
 from zope.component import getUtility
 
 from Products.CMFCore.interfaces import ISyndicationTool
@@ -18,13 +18,13 @@
 from plone.registry.interfaces import IRegistry
 
 
+@implementer(ISyndicationTool)
 class SyndicationTool(object):
     """
     Backward compatible tool. This just implements
     what some other packages use for now to provide
     backwards compatibility.
     """
-    implements(ISyndicationTool)
 
     def editProperties(self, updatePeriod=None, updateFrequency=None,
                        updateBase=None, isAllowed=None, max_items=None):
diff --git a/Products/CMFPlone/browser/syndication/utils.py b/Products/CMFPlone/browser/syndication/utils.py
index 93f0827..859703e 100644
--- a/Products/CMFPlone/browser/syndication/utils.py
+++ b/Products/CMFPlone/browser/syndication/utils.py
@@ -2,7 +2,7 @@
 from Products.Five import BrowserView
 
 from zope.schema.interfaces import IVocabularyFactory
-from zope.interface import implements
+from zope.interface import implementer
 from zope.component import getUtility
 
 from Products.CMFPlone.interfaces.syndication import ISyndicationUtil
@@ -14,8 +14,8 @@
 from plone.memoize.view import memoize
 
 
+@implementer(ISyndicationUtil)
 class SyndicationUtil(BrowserView):
-    implements(ISyndicationUtil)
 
     def allowed_feed_types(self):
         settings = IFeedSettings(self.context)
diff --git a/Products/CMFPlone/browser/templates/search.pt b/Products/CMFPlone/browser/templates/search.pt
index 7cb7c22..9a9ebf0 100644
--- a/Products/CMFPlone/browser/templates/search.pt
+++ b/Products/CMFPlone/browser/templates/search.pt
@@ -37,7 +37,6 @@
                       DateTime python:modules['DateTime'].DateTime;
                       navigation_root_url view/navroot_url;">
 
-        <input type="hidden" name="advanced_search" value="False" />
         <input type="hidden" name="sort_on" value="" />
         <input type="hidden" name="sort_order" value="" />
 
diff --git a/Products/CMFPlone/controlpanel/bbb/editing.py b/Products/CMFPlone/controlpanel/bbb/editing.py
index fad65a4..38600a5 100644
--- a/Products/CMFPlone/controlpanel/bbb/editing.py
+++ b/Products/CMFPlone/controlpanel/bbb/editing.py
@@ -1,6 +1,6 @@
 # -*- coding: utf-8 -*-
 from zope.component import adapts
-from zope.interface import implements
+from zope.interface import implementer
 from zope.component import getUtility
 from plone.registry.interfaces import IRegistry
 from Products.CMFPlone.interfaces import IPloneSiteRoot
@@ -8,10 +8,10 @@
 from Products.CMFPlone.interfaces import IEditingSchema
 
 
+@implementer(IEditingSchema)
 class EditingControlPanelAdapter(object):
 
     adapts(IPloneSiteRoot)
-    implements(IEditingSchema)
 
     def __init__(self, context):
         registry = getUtility(IRegistry)
diff --git a/Products/CMFPlone/controlpanel/bbb/filter.py b/Products/CMFPlone/controlpanel/bbb/filter.py
index feffb40..e774b43 100644
--- a/Products/CMFPlone/controlpanel/bbb/filter.py
+++ b/Products/CMFPlone/controlpanel/bbb/filter.py
@@ -3,13 +3,13 @@
 from plone.registry.interfaces import IRegistry
 from zope.component import adapts
 from zope.component import getUtility
-from zope.interface import implements
+from zope.interface import implementer
 
 
+@implementer(IFilterSchema)
 class FilterControlPanelAdapter(object):
 
     adapts(IPloneSiteRoot)
-    implements(IFilterSchema)
 
     def __init__(self, context):
         registry = getUtility(IRegistry)
diff --git a/Products/CMFPlone/controlpanel/bbb/language.py b/Products/CMFPlone/controlpanel/bbb/language.py
index a84eff9..8c05590 100644
--- a/Products/CMFPlone/controlpanel/bbb/language.py
+++ b/Products/CMFPlone/controlpanel/bbb/language.py
@@ -1,17 +1,17 @@
 # -*- coding: utf-8 -*-
 from zope.component import adapts
 from Products.CMFPlone.interfaces import ILanguageSchema
-from zope.interface import implements
+from zope.interface import implementer
 from zope.component import getUtility
 from Products.CMFPlone.interfaces import IPloneSiteRoot
 
 from plone.registry.interfaces import IRegistry
 
 
+@implementer(ILanguageSchema)
 class LanguageControlPanelAdapter(object):
 
     adapts(IPloneSiteRoot)
-    implements(ILanguageSchema)
 
     def __init__(self, context):
         self.context = context
diff --git a/Products/CMFPlone/controlpanel/bbb/mail.py b/Products/CMFPlone/controlpanel/bbb/mail.py
index e57f28a..000700e 100644
--- a/Products/CMFPlone/controlpanel/bbb/mail.py
+++ b/Products/CMFPlone/controlpanel/bbb/mail.py
@@ -4,14 +4,14 @@
 from plone.registry.interfaces import IRegistry
 from zope.component import adapts
 from zope.component import getUtility
-from zope.interface import implements
+from zope.interface import implementer
 from zope.site.hooks import getSite
 
 
+@implementer(IMailSchema)
 class MailControlPanelAdapter(object):
 
     adapts(IPloneSiteRoot)
-    implements(IMailSchema)
 
     def __init__(self, context):
         self.context = context
diff --git a/Products/CMFPlone/controlpanel/bbb/maintenance.py b/Products/CMFPlone/controlpanel/bbb/maintenance.py
index c2b2891..f316cdc 100644
--- a/Products/CMFPlone/controlpanel/bbb/maintenance.py
+++ b/Products/CMFPlone/controlpanel/bbb/maintenance.py
@@ -4,13 +4,13 @@
 from plone.registry.interfaces import IRegistry
 from zope.component import adapts
 from zope.component import getUtility
-from zope.interface import implements
+from zope.interface import implementer
 
 
+@implementer(IMaintenanceSchema)
 class MaintenanceControlPanelAdapter(object):
 
     adapts(IPloneSiteRoot)
-    implements(IMaintenanceSchema)
 
     def __init__(self, context):
         self.context = context
diff --git a/Products/CMFPlone/controlpanel/bbb/markup.py b/Products/CMFPlone/controlpanel/bbb/markup.py
index ed2a185..520be21 100644
--- a/Products/CMFPlone/controlpanel/bbb/markup.py
+++ b/Products/CMFPlone/controlpanel/bbb/markup.py
@@ -3,13 +3,13 @@
 from plone.registry.interfaces import IRegistry
 from zope.component import adapts
 from zope.component import getUtility
-from zope.interface import implements
+from zope.interface import implementer
 
 
+@implementer(IMarkupSchema)
 class MarkupControlPanelAdapter(object):
 
     adapts(IPloneSiteRoot)
-    implements(IMarkupSchema)
 
     def __init__(self, context):
         registry = getUtility(IRegistry)
diff --git a/Products/CMFPlone/controlpanel/bbb/search.py b/Products/CMFPlone/controlpanel/bbb/search.py
index a68bf6c..13728c6 100644
--- a/Products/CMFPlone/controlpanel/bbb/search.py
+++ b/Products/CMFPlone/controlpanel/bbb/search.py
@@ -4,14 +4,14 @@
 from plone.registry.interfaces import IRegistry
 from zope.component import adapts
 from zope.component import getUtility
-from zope.interface import implements
+from zope.interface import implementer
 from zope.site.hooks import getSite
 
 
+@implementer(ISearchSchema)
 class SearchControlPanelAdapter(object):
 
     adapts(IPloneSiteRoot)
-    implements(ISearchSchema)
 
     def __init__(self, context):
         self.portal = getSite()
diff --git a/Products/CMFPlone/controlpanel/bbb/security.py b/Products/CMFPlone/controlpanel/bbb/security.py
index 2d05160..39edfc7 100644
--- a/Products/CMFPlone/controlpanel/bbb/security.py
+++ b/Products/CMFPlone/controlpanel/bbb/security.py
@@ -5,14 +5,14 @@
 from plone.registry.interfaces import IRegistry
 from zope.component import adapts
 from zope.component import getUtility
-from zope.interface import implements
+from zope.interface import implementer
 from zope.site.hooks import getSite
 
 
+@implementer(ISecuritySchema)
 class SecurityControlPanelAdapter(object):
 
     adapts(IPloneSiteRoot)
-    implements(ISecuritySchema)
 
     def __init__(self, context):
         self.portal = getSite()
diff --git a/Products/CMFPlone/controlpanel/bbb/site.py b/Products/CMFPlone/controlpanel/bbb/site.py
index 38492ff..56fcbc5 100644
--- a/Products/CMFPlone/controlpanel/bbb/site.py
+++ b/Products/CMFPlone/controlpanel/bbb/site.py
@@ -5,13 +5,13 @@
 from plone.registry.interfaces import IRegistry
 from zope.component import adapts
 from zope.component import getUtility
-from zope.interface import implements
+from zope.interface import implementer
 
 
+@implementer(ISiteSchema)
 class SiteControlPanelAdapter(object):
 
     adapts(IPloneSiteRoot)
-    implements(ISiteSchema)
 
     def __init__(self, context):
         registry = getUtility(IRegistry)
diff --git a/Products/CMFPlone/controlpanel/bbb/usergroups.py b/Products/CMFPlone/controlpanel/bbb/usergroups.py
index 681b91b..84ac3e3 100644
--- a/Products/CMFPlone/controlpanel/bbb/usergroups.py
+++ b/Products/CMFPlone/controlpanel/bbb/usergroups.py
@@ -1,16 +1,16 @@
 from zope.component import adapts
 from zope.component import getUtility
-from zope.interface import implements
+from zope.interface import implementer
 from zope.site.hooks import getSite
 from plone.registry.interfaces import IRegistry
 from Products.CMFPlone.interfaces import IUserGroupsSettingsSchema
 from Products.CMFPlone.interfaces import IPloneSiteRoot
 
 
+@implementer(IUserGroupsSettingsSchema)
 class UserGroupsSettingsControlPanelAdapter(object):
 
     adapts(IPloneSiteRoot)
-    implements(IUserGroupsSettingsSchema)
 
     def __init__(self, context):
         self.context = context
diff --git a/Products/CMFPlone/controlpanel/browser/actions.py b/Products/CMFPlone/controlpanel/browser/actions.py
index 918cfbc..9b8e2ed 100644
--- a/Products/CMFPlone/controlpanel/browser/actions.py
+++ b/Products/CMFPlone/controlpanel/browser/actions.py
@@ -9,7 +9,7 @@
 from z3c.form import form
 from zope.component import adapts
 from zope.event import notify
-from zope.interface import implements
+from zope.interface import implementer
 from zope.lifecycleevent import ObjectCreatedEvent
 
 
@@ -68,11 +68,11 @@ def __call__(self):
         return self.display()
 
 
+@implementer(IActionSchema)
 class ActionControlPanelAdapter(object):
     """Adapter for action form."""
 
     adapts(IAction)
-    implements(IActionSchema)
 
     def __init__(self, context):
         self.context = context
diff --git a/Products/CMFPlone/controlpanel/events.py b/Products/CMFPlone/controlpanel/events.py
index 4e5a96e..b780c18 100644
--- a/Products/CMFPlone/controlpanel/events.py
+++ b/Products/CMFPlone/controlpanel/events.py
@@ -9,13 +9,13 @@
 from plone.registry.interfaces import IRecordModifiedEvent
 from zope.component import adapter
 from zope.component import queryUtility
-from zope.interface import implements
+from zope.interface import implementer
 from zope.ramcache.interfaces.ram import IRAMCache
 from zope.site.hooks import getSite
 
 
+@implementer(IConfigurationChangedEvent)
 class ConfigurationChangedEvent(object):
-    implements(IConfigurationChangedEvent)
 
     def __init__(self, context, data):
         self.context = context
diff --git a/Products/CMFPlone/events.py b/Products/CMFPlone/events.py
index e5c62ff..327b53c 100644
--- a/Products/CMFPlone/events.py
+++ b/Products/CMFPlone/events.py
@@ -1,4 +1,4 @@
-from zope.interface import implements
+from zope.interface import implementer
 from zope.component.interfaces import ObjectEvent
 
 from Products.CMFCore.utils import getToolByName
@@ -7,13 +7,15 @@
 from interfaces import IReorderedEvent
 
 
+@implementer(ISiteManagerCreatedEvent)
 class SiteManagerCreatedEvent(ObjectEvent):
 
-    implements(ISiteManagerCreatedEvent)
+    pass
 
 
+@implementer(IReorderedEvent)
 class ReorderedEvent(ObjectEvent):
-    implements(IReorderedEvent)
+    pass
 
 
 def profileImportedEventHandler(event):
diff --git a/Products/CMFPlone/factory.py b/Products/CMFPlone/factory.py
index ac650ad..8b57745 100644
--- a/Products/CMFPlone/factory.py
+++ b/Products/CMFPlone/factory.py
@@ -5,7 +5,7 @@
 from plone.registry.interfaces import IRegistry
 from zope.component import queryUtility
 from zope.event import notify
-from zope.interface import implements
+from zope.interface import implementer
 from zope.site.hooks import setSite
 
 _TOOL_ID = 'portal_setup'
@@ -16,8 +16,8 @@
 _IMREALLYPLONE5 = True
 
 
+@implementer(INonInstallable)
 class HiddenProfiles(object):
-    implements(INonInstallable)
 
     def getNonInstallableProfiles(self):
         return [_DEFAULT_PROFILE,
diff --git a/Products/CMFPlone/interfaces/controlpanel.py b/Products/CMFPlone/interfaces/controlpanel.py
index ae170de..9ad30b2 100644
--- a/Products/CMFPlone/interfaces/controlpanel.py
+++ b/Products/CMFPlone/interfaces/controlpanel.py
@@ -1096,7 +1096,7 @@ class ISiteSchema(Interface):
 
     site_logo = schema.ASCII(
         title=_(u'Site Logo'),
-        description=_(u'This shows a custom Logo on your Site.'),
+        description=_(u'This shows a custom logo on your site.'),
         required=False,
     )
 
@@ -1110,7 +1110,9 @@ class ISiteSchema(Interface):
         title=_(u'Expose sitemap.xml.gz'),
         description=_(
             u'Exposes your content as a file '
-            u'according to the sitemaps.org standard. You '
+            u'according to the '
+            u'<a href=\'http://sitemaps.org\'>sitemaps.org</a> '
+            u'standard. You '
             u'can submit this to compliant search engines '
             u'like Google, Yahoo and Microsoft. It allows '
             u'these search engines to more intelligently '
@@ -1122,9 +1124,9 @@ class ISiteSchema(Interface):
         title=_(u'JavaScript for web statistics support'),
         description=_(
             u'For enabling web statistics support '
-            u'from external providers (for e.g. Google '
-            u'Analytics). Paste the code snippets provided. '
-            u'It will be included in the rendered HTML as '
+            u'from external providers (e.g. Google '
+            u'Analytics). Paste the provided code snippet here. '
+            u'It will be rendered as '
             u'entered near the end of the page.'),
         default=u'',
         required=False)
@@ -1132,7 +1134,7 @@ class ISiteSchema(Interface):
     display_publication_date_in_byline = schema.Bool(
         title=_(u'Display publication date'),
         description=_(
-            u'Show the date a content item was published in the byline.'),
+            u'Show in the byline the date a content item was published.'),
         default=False,
         required=False)
 
@@ -1149,7 +1151,7 @@ class ISiteSchema(Interface):
 
     thumb_visibility = schema.Choice(
         title=_(u'Thumb visibility'),
-        description=_(u'Show thumbs in listings'),
+        description=_(u'Show thumbnail images in listings'),
         default=u'enabled',
         vocabulary=SimpleVocabulary([
             SimpleTerm('false', 'false', _(u'Never')),
@@ -1159,10 +1161,10 @@ class ISiteSchema(Interface):
         required=True)
 
     toolbar_position = schema.Choice(
-        title=_(u'Position where the toolbar is displayed'),
+        title=_(u'Toolbar position'),
         description=_(
-            u'It can be in the side vertical mode '
-            u'or in the top horizontal mode'),
+            u'It can be on the side (vertical mode) '
+            u'or on the top (horizontal mode)'),
         default=u'side',
         vocabulary=SimpleVocabulary([
             SimpleTerm('side', 'side', _(u'Side')),
@@ -1170,10 +1172,10 @@ class ISiteSchema(Interface):
         required=True)
 
     toolbar_logo = schema.TextLine(
-        title=_(u'Site based relative url for toolbar logo'),
+        title=_(u'Relative URL for the toolbar logo'),
         description=_(
-            u'This must be a relative url to portal root site. '
-            u'By default its /++plone++static/plone-toolbarlogo.svg'),
+            u'This must be a URL relative to the site root. '
+            u'By default it is /++plone++static/plone-toolbarlogo.svg'),
         default=u'/++plone++static/plone-toolbarlogo.svg',
         required=False,
     )
@@ -1182,19 +1184,19 @@ class ISiteSchema(Interface):
         title=_('robots.txt'),
         description=_(
             u'help_robots_txt',
-            default=u'robots.txt is read by search-engines to '
+            default=u'robots.txt is read by search engines to '
                     u'determine how to index your site. '
                     u'For details see <a href=\'http://www.robotstxt.org\'>'
                     u'http://www.robotstxt.org</a>. '
-                    u'\'{portal_url}\' is replaced by the sites url.'),
+                    u'Use \'{portal_url}\' for the site URL.'),
         default=ROBOTS_TXT,
         required=False,
     )
 
     default_page = schema.List(
-        title=_(u'Default page ids'),
+        title=_(u'Default page IDs'),
         description=_(
-            u'Select which ids can act as fallback default pages for',
+            u'Select which IDs (short names) can act as fallback default pages for',
             u'a container.'
         ),
         required=True,
diff --git a/Products/CMFPlone/setuphandlers.py b/Products/CMFPlone/setuphandlers.py
index 4985522..f0b91f7 100644
--- a/Products/CMFPlone/setuphandlers.py
+++ b/Products/CMFPlone/setuphandlers.py
@@ -15,11 +15,11 @@
 from zope.component.hooks import getSite
 from zope.i18n.locales import LoadLocaleError
 from zope.i18n.locales import locales
-from zope.interface import implements
+from zope.interface import implementer
 
 
+@implementer(INonInstallable)
 class HiddenProducts(object):
-    implements(INonInstallable)
 
     def getNonInstallableProducts(self):
         return [
diff --git a/Products/CMFPlone/tests/dummy.py b/Products/CMFPlone/tests/dummy.py
index c8ee519..3c155e7 100644
--- a/Products/CMFPlone/tests/dummy.py
+++ b/Products/CMFPlone/tests/dummy.py
@@ -7,7 +7,7 @@
 import os
 
 from zope.interface import implementer
-from zope.interface import implements
+from zope.interface import implementer
 from zope.interface import Interface
 
 from Products.CMFPlone.interfaces import INonStructuralFolder
@@ -124,9 +124,9 @@ def __init__(self, id=None, title=None, **kw):
             self.title = title
 
 
+@implementer(INonStructuralFolder)
 class NonStructuralFolder(Folder):
     '''Folder implementing the INonStructuralFolder interface'''
-    implements(INonStructuralFolder)
 
 
 class Error(Exception):
@@ -171,8 +171,9 @@ class IDummyUtility(Interface):
     pass
 
 
+@implementer(IDummyUtility)
 class DummyUtility(SimpleItem):
-    implements(IDummyUtility)
+    pass
 
 
 class ICantBeDeleted(Interface):
diff --git a/Products/CMFPlone/tests/robot/test_actionmenu.robot b/Products/CMFPlone/tests/robot/test_actionmenu.robot
index cc7ff5f..fb4c6e1 100644
--- a/Products/CMFPlone/tests/robot/test_actionmenu.robot
+++ b/Products/CMFPlone/tests/robot/test_actionmenu.robot
@@ -7,8 +7,8 @@ Library  Remote  ${PLONE_URL}/RobotRemote
 
 Resource  keywords.robot
 
-Test Setup  Run keywords  Open SauceLabs test browser  Refresh JS/CSS resources
-Test Teardown  Run keywords  Report test status  Close all browsers
+Test Setup  Run keywords  Plone Test Setup
+Test Teardown  Run keywords  Plone Test Teardown
 
 
 *** Variables ****************************************************************
diff --git a/Products/CMFPlone/tests/robot/test_controlpanel_actions.robot b/Products/CMFPlone/tests/robot/test_controlpanel_actions.robot
index c9e7a23..d6a8157 100644
--- a/Products/CMFPlone/tests/robot/test_controlpanel_actions.robot
+++ b/Products/CMFPlone/tests/robot/test_controlpanel_actions.robot
@@ -8,8 +8,8 @@ Library  Remote  ${PLONE_URL}/RobotRemote
 
 Resource  keywords.robot
 
-Test Setup  Open SauceLabs test browser
-Test Teardown  Run keywords  Report test status  Close all browsers
+Test Setup  Run keywords  Open SauceLabs test browser
+Test Teardown  Run keywords  Plone Test Teardown
 
 
 *** Test Cases ***************************************************************
@@ -122,4 +122,4 @@ anonymous users cannot see the action anymore
 anonymous users can see the action again
   Disable autologin
   Go to  ${PLONE_URL}
-  Page Should Contain  Site Map
\ No newline at end of file
+  Page Should Contain  Site Map
diff --git a/Products/CMFPlone/tests/robot/test_controlpanel_editing.robot b/Products/CMFPlone/tests/robot/test_controlpanel_editing.robot
index e8828da..46a66d3 100644
--- a/Products/CMFPlone/tests/robot/test_controlpanel_editing.robot
+++ b/Products/CMFPlone/tests/robot/test_controlpanel_editing.robot
@@ -7,8 +7,8 @@ Library  Remote  ${PLONE_URL}/RobotRemote
 
 Resource  keywords.robot
 
-Test Setup  Run keywords  Open SauceLabs test browser  Refresh JS/CSS resources
-Test Teardown  Run keywords  Report test status  Close all browsers
+Test Setup  Run keywords  Plone Test Setup
+Test Teardown  Run keywords  Plone Test Teardown
 
 
 *** Test Cases ***************************************************************
diff --git a/Products/CMFPlone/tests/robot/test_controlpanel_filter.robot b/Products/CMFPlone/tests/robot/test_controlpanel_filter.robot
index 1cddc33..53695d6 100644
--- a/Products/CMFPlone/tests/robot/test_controlpanel_filter.robot
+++ b/Products/CMFPlone/tests/robot/test_controlpanel_filter.robot
@@ -17,8 +17,8 @@ Library  Remote  ${PLONE_URL}/RobotRemote
 
 Resource  keywords.robot
 
-Test Setup  Run keywords  Open SauceLabs test browser  Refresh JS/CSS resources
-Test Teardown  Run keywords  Report test status  Close all browsers
+Test Setup  Run keywords  Plone Test Setup
+Test Teardown  Run keywords  Plone Test Teardown
 
 
 *** Test Cases ***************************************************************
diff --git a/Products/CMFPlone/tests/robot/test_controlpanel_language.robot b/Products/CMFPlone/tests/robot/test_controlpanel_language.robot
index f4c2b56..7f3cc79 100644
--- a/Products/CMFPlone/tests/robot/test_controlpanel_language.robot
+++ b/Products/CMFPlone/tests/robot/test_controlpanel_language.robot
@@ -7,8 +7,8 @@ Library  Remote  ${PLONE_URL}/RobotRemote
 
 Resource  keywords.robot
 
-Test Setup  Run keywords  Open SauceLabs test browser  Refresh JS/CSS resources
-Test Teardown  Run keywords  Report test status  Close all browsers
+Test Setup  Run keywords  Plone Test Setup
+Test Teardown  Run keywords  Plone Test Teardown
 
 
 *** Test Cases ***************************************************************
diff --git a/Products/CMFPlone/tests/robot/test_controlpanel_markup.robot b/Products/CMFPlone/tests/robot/test_controlpanel_markup.robot
index d81161d..53c1e8c 100644
--- a/Products/CMFPlone/tests/robot/test_controlpanel_markup.robot
+++ b/Products/CMFPlone/tests/robot/test_controlpanel_markup.robot
@@ -11,8 +11,8 @@ Library  Remote  ${PLONE_URL}/RobotRemote
 
 Resource  keywords.robot
 
-Test Setup  Run keywords  Open SauceLabs test browser  Refresh JS/CSS resources
-Test Teardown  Run keywords  Report test status  Close all browsers
+Test Setup  Run keywords  Plone Test Setup
+Test Teardown  Run keywords  Plone Test Teardown
 
 
 *** Test Cases ***************************************************************
diff --git a/Products/CMFPlone/tests/robot/test_controlpanel_navigation.robot b/Products/CMFPlone/tests/robot/test_controlpanel_navigation.robot
index ebcd2c9..ca715c9 100644
--- a/Products/CMFPlone/tests/robot/test_controlpanel_navigation.robot
+++ b/Products/CMFPlone/tests/robot/test_controlpanel_navigation.robot
@@ -7,8 +7,8 @@ Library  Remote  ${PLONE_URL}/RobotRemote
 
 Resource  keywords.robot
 
-Test Setup  Run keywords  Open SauceLabs test browser  Refresh JS/CSS resources
-Test Teardown  Run keywords  Report test status  Close all browsers
+Test Setup  Run keywords  Plone Test Setup
+Test Teardown  Run keywords  Plone Test Teardown
 
 
 *** Test Cases ***************************************************************
diff --git a/Products/CMFPlone/tests/robot/test_controlpanel_search.robot b/Products/CMFPlone/tests/robot/test_controlpanel_search.robot
index f3bab01..39d5cc0 100644
--- a/Products/CMFPlone/tests/robot/test_controlpanel_search.robot
+++ b/Products/CMFPlone/tests/robot/test_controlpanel_search.robot
@@ -7,8 +7,8 @@ Library  Remote  ${PLONE_URL}/RobotRemote
 
 Resource  keywords.robot
 
-Test Setup  Run keywords  Open SauceLabs test browser  Refresh JS/CSS resources
-Test Teardown  Run keywords  Report test status  Close all browsers
+Test Setup  Run keywords  Plone Test Setup
+Test Teardown  Run keywords  Plone Test Teardown
 
 
 *** Test Cases ***************************************************************
diff --git a/Products/CMFPlone/tests/robot/test_controlpanel_security.robot b/Products/CMFPlone/tests/robot/test_controlpanel_security.robot
index 82b1861..4e99025 100644
--- a/Products/CMFPlone/tests/robot/test_controlpanel_security.robot
+++ b/Products/CMFPlone/tests/robot/test_controlpanel_security.robot
@@ -8,8 +8,8 @@ Library  Remote  ${PLONE_URL}/RobotRemote
 
 Resource  keywords.robot
 
-Test Setup  Run keywords  Open SauceLabs test browser  Refresh JS/CSS resources
-Test Teardown  Run keywords  Report test status  Close all browsers
+Test Setup  Run keywords  Plone Test Setup
+Test Teardown  Run keywords  Plone Test Teardown
 
 
 *** Test Cases ***************************************************************
diff --git a/Products/CMFPlone/tests/robot/test_controlpanel_site.robot b/Products/CMFPlone/tests/robot/test_controlpanel_site.robot
index 921f6a0..94a4c24 100644
--- a/Products/CMFPlone/tests/robot/test_controlpanel_site.robot
+++ b/Products/CMFPlone/tests/robot/test_controlpanel_site.robot
@@ -12,8 +12,8 @@ Library  Remote  ${PLONE_URL}/RobotRemote
 
 Resource  keywords.robot
 
-Test Setup  Run keywords  Open SauceLabs test browser  Refresh JS/CSS resources
-Test Teardown  Run keywords  Report test status  Close all browsers
+Test Setup  Run keywords  Plone Test Setup
+Test Teardown  Run keywords  Plone Test Teardown
 
 
 *** Test Cases ***************************************************************
diff --git a/Products/CMFPlone/tests/robot/test_controlpanel_social.robot b/Products/CMFPlone/tests/robot/test_controlpanel_social.robot
index eae2c4c..058b756 100644
--- a/Products/CMFPlone/tests/robot/test_controlpanel_social.robot
+++ b/Products/CMFPlone/tests/robot/test_controlpanel_social.robot
@@ -7,8 +7,8 @@ Library  Remote  ${PLONE_URL}/RobotRemote
 
 Resource  keywords.robot
 
-Test Setup  Run keywords  Open SauceLabs test browser  Refresh JS/CSS resources
-Test Teardown  Run keywords  Report test status  Close all browsers
+Test Setup  Run keywords  Plone Test Setup
+Test Teardown  Run keywords  Plone Test Teardown
 
 
 *** Test Cases ***************************************************************
diff --git a/Products/CMFPlone/tests/robot/test_controlpanel_types.robot b/Products/CMFPlone/tests/robot/test_controlpanel_types.robot
index a0be91f..44f6e0e 100644
--- a/Products/CMFPlone/tests/robot/test_controlpanel_types.robot
+++ b/Products/CMFPlone/tests/robot/test_controlpanel_types.robot
@@ -7,8 +7,8 @@ Library  Remote  ${PLONE_URL}/RobotRemote
 
 Resource  keywords.robot
 
-Test Setup  Run keywords  Open SauceLabs test browser  Refresh JS/CSS resources
-Test Teardown  Run keywords  Report test status  Close all browsers
+Test Setup  Run keywords  Plone Test Setup
+Test Teardown  Run keywords  Plone Test Teardown
 
 
 *** Test Cases ***************************************************************
diff --git a/Products/CMFPlone/tests/robot/test_controlpanel_usergroups.robot b/Products/CMFPlone/tests/robot/test_controlpanel_usergroups.robot
index 3f9992c..9572b23 100644
--- a/Products/CMFPlone/tests/robot/test_controlpanel_usergroups.robot
+++ b/Products/CMFPlone/tests/robot/test_controlpanel_usergroups.robot
@@ -17,8 +17,8 @@ Library  Remote  ${PLONE_URL}/RobotRemote
 
 Resource  keywords.robot
 
-Test Setup  Run keywords  Open SauceLabs test browser  Refresh JS/CSS resources
-Test Teardown  Run keywords  Report test status  Close all browsers
+Test Setup  Run keywords  Plone Test Setup
+Test Teardown  Run keywords  Plone Test Teardown
 
 
 *** Test Cases ***************************************************************
diff --git a/Products/CMFPlone/tests/robot/test_edit.robot b/Products/CMFPlone/tests/robot/test_edit.robot
index e700069..9ef9d9d 100644
--- a/Products/CMFPlone/tests/robot/test_edit.robot
+++ b/Products/CMFPlone/tests/robot/test_edit.robot
@@ -7,8 +7,8 @@ Library  Remote  ${PLONE_URL}/RobotRemote
 
 Resource  keywords.robot
 
-Test Setup  Run keywords  Open SauceLabs test browser  Refresh JS/CSS resources
-Test Teardown  Run keywords  Report test status  Close all browsers
+Test Setup  Run keywords  Plone Test Setup
+Test Teardown  Run keywords  Plone Test Teardown
 
 
 *** Variables ****************************************************************
diff --git a/Products/CMFPlone/tests/robot/test_edit_user_schema.robot b/Products/CMFPlone/tests/robot/test_edit_user_schema.robot
index 68d536f..7cde187 100644
--- a/Products/CMFPlone/tests/robot/test_edit_user_schema.robot
+++ b/Products/CMFPlone/tests/robot/test_edit_user_schema.robot
@@ -17,8 +17,8 @@ Library  Remote  ${PLONE_URL}/RobotRemote
 
 Resource  keywords.robot
 
-Test Setup  Run keywords  Open SauceLabs test browser  Refresh JS/CSS resources
-Test Teardown  Run keywords  Report test status  Close all browsers
+Test Setup  Run keywords  Plone Test Setup
+Test Teardown  Run keywords  Plone Test Teardown
 
 
 *** Test Cases ***************************************************************
diff --git a/Products/CMFPlone/tests/robot/test_folder_contents.robot b/Products/CMFPlone/tests/robot/test_folder_contents.robot
index 9e5811e..1e6a115 100644
--- a/Products/CMFPlone/tests/robot/test_folder_contents.robot
+++ b/Products/CMFPlone/tests/robot/test_folder_contents.robot
@@ -7,8 +7,8 @@ Library  Remote  ${PLONE_URL}/RobotRemote
 
 Resource  keywords.robot
 
-Test Setup  Run keywords  Open SauceLabs test browser  Refresh JS/CSS resources
-Test Teardown  Run keywords  Report test status  Close all browsers
+Test Setup  Run keywords  Plone Test Setup
+Test Teardown  Run keywords  Plone Test Teardown
 
 
 *** Test cases ***************************************************************
diff --git a/Products/CMFPlone/tests/robot/test_linkintegrity.robot b/Products/CMFPlone/tests/robot/test_linkintegrity.robot
index 0f39fbe..093a330 100644
--- a/Products/CMFPlone/tests/robot/test_linkintegrity.robot
+++ b/Products/CMFPlone/tests/robot/test_linkintegrity.robot
@@ -17,13 +17,15 @@ Library  Remote  ${PLONE_URL}/RobotRemote
 
 Resource  keywords.robot
 
-Test Setup  Run keywords  Open SauceLabs test browser  Refresh JS/CSS resources
-Test Teardown  Run keywords  Report test status  Close all browsers
+Test Setup  Run keywords  Plone Test Setup
+Test Teardown  Run keywords  Plone Test Teardown
 
 
 *** Test Cases ***************************************************************
 
 Scenario: When page is linked show warning
+  [Tags]  unstable
+  [Documentation]  This sometimes fails with: StaleElementReferenceException: Message: Element not found in the cache.
   Given a logged-in site administrator
     a page to link to
     and a page to edit
@@ -32,6 +34,8 @@ Scenario: When page is linked show warning
 
 
 Scenario: After you fix linked page no longer show warning
+  [Tags]  unstable
+  [Documentation]  This sometimes fails with: StaleElementReferenceException: Message: Element not found in the cache.
   Given a logged-in site administrator
   a page to link to
     and a page to edit
@@ -42,6 +46,9 @@ Scenario: After you fix linked page no longer show warning
 
 
 Scenario: Show warning when deleting linked item from folder_contents
+  [Tags]  unstable
+  [Documentation]  This sometimes fails with: StaleElementReferenceException: Message: Element not found in the cache.
+  ...              This one seems to fail more often than the others.
   Given a logged-in site administrator
   a page to link to
     and a page to edit
diff --git a/Products/CMFPlone/tests/robot/test_livesearch.robot b/Products/CMFPlone/tests/robot/test_livesearch.robot
index 994a6dd..c0f9d56 100644
--- a/Products/CMFPlone/tests/robot/test_livesearch.robot
+++ b/Products/CMFPlone/tests/robot/test_livesearch.robot
@@ -7,8 +7,8 @@ Library  Remote  ${PLONE_URL}/RobotRemote
 
 Resource  keywords.robot
 
-Test Setup  Run keywords  Open SauceLabs test browser  Refresh JS/CSS resources
-Test Teardown  Run keywords  Report test status  Close all browsers
+Test Setup  Run keywords  Plone Test Setup
+Test Teardown  Run keywords  Plone Test Teardown
 
 
 *** Test cases ***************************************************************
diff --git a/Products/CMFPlone/tests/robot/test_overlays.robot b/Products/CMFPlone/tests/robot/test_overlays.robot
index 50696c3..ba7cbb9 100644
--- a/Products/CMFPlone/tests/robot/test_overlays.robot
+++ b/Products/CMFPlone/tests/robot/test_overlays.robot
@@ -13,8 +13,8 @@ Library  Remote  ${PLONE_URL}/RobotRemote
 
 Resource  common.robot
 
-Test Setup  Run keywords  Open SauceLabs test browser  Refresh JS/CSS resources  Background
-Test Teardown  Run keywords  Report test status  Close all browsers
+Test Setup  Run keywords  Plone Test Setup  Background
+Test Teardown  Run keywords  Plone Test Teardown
 
 
 *** Test cases ***
diff --git a/Products/CMFPlone/tests/robot/test_portlets.robot b/Products/CMFPlone/tests/robot/test_portlets.robot
index f6fa67b..ca54a82 100644
--- a/Products/CMFPlone/tests/robot/test_portlets.robot
+++ b/Products/CMFPlone/tests/robot/test_portlets.robot
@@ -7,8 +7,8 @@ Library  Remote  ${PLONE_URL}/RobotRemote
 
 Resource  keywords.robot
 
-Test Setup  Run keywords  Open SauceLabs test browser  Refresh JS/CSS resources
-Test Teardown  Run keywords  Report test status  Close all browsers
+Test Setup  Run keywords  Plone Test Setup
+Test Teardown  Run keywords  Plone Test Teardown
 
 
 *** Test cases ***************************************************************
diff --git a/Products/CMFPlone/tests/robot/test_querystring.robot b/Products/CMFPlone/tests/robot/test_querystring.robot
index a770ac7..bbee5e1 100644
--- a/Products/CMFPlone/tests/robot/test_querystring.robot
+++ b/Products/CMFPlone/tests/robot/test_querystring.robot
@@ -7,12 +7,15 @@ Library  Remote  ${PLONE_URL}/RobotRemote
 
 Resource  keywords.robot
 
-Test Setup  Run keywords  Open SauceLabs test browser  Refresh JS/CSS resources
-Test Teardown  Run keywords  Report test status  Close all browsers
+Test Setup  Run keywords  Plone Test Setup
+Test Teardown  Run keywords  Plone Test Teardown
 
 *** Test Cases **************************************************************
 
 Scenario: Location query
+    [Tags]  unstable
+    [Documentation]  This sometimes fails with: Element locator 'jquery=:focus' did not match any elements.
+    ...              This sometimes fails with: Element locator 'jquery=.pattern-relateditems-tree-select' did not match any elements.
     Given a logged-in site administrator
     and a bunch of folders
     and the querystring pattern
@@ -77,6 +80,7 @@ I expect to be in Simple mode
     Click Element  css=body
 
 open the select box titled ${NAME}
+    Click Element  css=body
     Click Element  css=.querystring-criteria-${NAME} .select2-container a
 
 select index type ${INDEX}
diff --git a/Products/CMFPlone/tests/robot/test_thememapper.robot b/Products/CMFPlone/tests/robot/test_thememapper.robot
index 8be1299..fdc0a94 100644
--- a/Products/CMFPlone/tests/robot/test_thememapper.robot
+++ b/Products/CMFPlone/tests/robot/test_thememapper.robot
@@ -7,8 +7,8 @@ Library  Remote  ${PLONE_URL}/RobotRemote
 
 Resource  keywords.robot
 
-Test Setup  Run keywords  Open SauceLabs test browser  Refresh JS/CSS resources
-Test Teardown  Run keywords  Report test status  Close all browsers
+Test Setup  Run keywords  Plone Test Setup
+Test Teardown  Run keywords  Plone Test Teardown
 
 *** Variables ***
 
diff --git a/Products/CMFPlone/tests/robot/test_tinymce.robot b/Products/CMFPlone/tests/robot/test_tinymce.robot
index 5093f21..bfd9ddf 100644
--- a/Products/CMFPlone/tests/robot/test_tinymce.robot
+++ b/Products/CMFPlone/tests/robot/test_tinymce.robot
@@ -7,8 +7,8 @@ Library  Remote  ${PLONE_URL}/RobotRemote
 
 Resource  keywords.robot
 
-Test Setup  Run keywords  Open SauceLabs test browser  Refresh JS/CSS resources
-Test Teardown  Run keywords  Report test status  Close all browsers
+Test Setup  Run keywords  Plone Test Setup
+Test Teardown  Run keywords  Plone Test Teardown
 
 
 *** Variables ****************************************************************
diff --git a/Products/CMFPlone/tests/testCatalogTool.py b/Products/CMFPlone/tests/testCatalogTool.py
index ab3f064..ba14324 100644
--- a/Products/CMFPlone/tests/testCatalogTool.py
+++ b/Products/CMFPlone/tests/testCatalogTool.py
@@ -1126,8 +1126,9 @@ def testSimpleInterface(self):
         class IDummy(zope.interface.Interface):
             pass
 
+        @zope.interface.implementer(IDummy)
         class Dummy(object):
-            zope.interface.implements(IDummy)
+            pass
         self.assertEqual(
             self._index(Dummy()),
             ('Products.CMFPlone.tests.testCatalogTool.IDummy', )
diff --git a/Products/CMFPlone/tests/testNavTree.py b/Products/CMFPlone/tests/testNavTree.py
index 21dba84..fff8352 100644
--- a/Products/CMFPlone/tests/testNavTree.py
+++ b/Products/CMFPlone/tests/testNavTree.py
@@ -9,7 +9,7 @@
 from plone.app.layout.navigation.root import getNavigationRoot
 
 from zope.interface import directlyProvides
-from zope.interface import implements
+from zope.interface import implementer
 
 default_user = PloneTestCase.default_user
 
@@ -17,8 +17,9 @@
 from Products.CMFPlone.interfaces import INonStructuralFolder
 
 
+@implementer(INonStructuralFolder)
 class DummyNonStructuralFolder(PloneFolder):
-    implements(INonStructuralFolder)
+    pass
 
 
 class TestFolderTree(PloneTestCase.PloneTestCase):
diff --git a/Products/CMFPlone/tests/testNavigationView.py b/Products/CMFPlone/tests/testNavigationView.py
index 7974472..35ee18d 100644
--- a/Products/CMFPlone/tests/testNavigationView.py
+++ b/Products/CMFPlone/tests/testNavigationView.py
@@ -565,6 +565,23 @@ def testStateFiltering(self):
         # Should only contain the published folder
         self.assertEqual(len(tabs), 1)
 
+    def testTabInfo(self):
+        self.portal._delObject('Members')
+        self.portal._delObject('news')
+        self.portal._delObject('events')
+
+        view = self.view_class(self.portal, self.request)
+        tabs = view.topLevelTabs(actions=[])
+
+        self.assertEqual(len(tabs), 5)
+
+        tab = tabs[0]
+        self.assertTrue('url' in tab and tab['url'])  # url must not be empty
+        self.assertTrue('description' in tab)  # our description is empty
+        self.assertTrue('name' in tab and tab['name'])
+        self.assertTrue('id' in tab and tab['id'])
+        self.assertTrue('review_state' in tab and tab['review_state'])
+
     def testDisableFolderTabs(self):
         # Setting the site_property disable_folder_sections should remove
         # all folder based tabs
diff --git a/Products/CMFPlone/tests/test_robot.py b/Products/CMFPlone/tests/test_robot.py
index 55ef7f0..d282eab 100644
--- a/Products/CMFPlone/tests/test_robot.py
+++ b/Products/CMFPlone/tests/test_robot.py
@@ -16,7 +16,10 @@ def test_suite():
         doc.startswith('test_')
     ]
     for robot_test in robot_tests:
-        robottestsuite = robotsuite.RobotTestSuite(robot_test)
+        robottestsuite = robotsuite.RobotTestSuite(
+            robot_test,
+            noncritical=['unstable'],
+        )
         robottestsuite.level = ROBOT_TEST_LEVEL
         suite.addTests([
             layered(
diff --git a/Products/CMFPlone/unicodeconflictresolver.py b/Products/CMFPlone/unicodeconflictresolver.py
index e9a7f09..dd797ab 100644
--- a/Products/CMFPlone/unicodeconflictresolver.py
+++ b/Products/CMFPlone/unicodeconflictresolver.py
@@ -1,16 +1,15 @@
-from zope.interface import implements
+from zope.interface import implementer
 from Products.PageTemplates.interfaces import IUnicodeEncodingConflictResolver
 
 from Products.CMFPlone.patches.unicodehacks import _unicode_replace
 
 
+@implementer(IUnicodeEncodingConflictResolver)
 class UTF8EncodingConflictResolver(object):
     """This resolver tries to decode a string from utf-8 and replaces it
        otherwise but logs a warning.
     """
 
-    implements(IUnicodeEncodingConflictResolver)
-
     def resolve(self, context, text, expression):
         return _unicode_replace(text)
 
diff --git a/setup.py b/setup.py
index 5c1d093..add4352 100644
--- a/setup.py
+++ b/setup.py
@@ -36,7 +36,7 @@
         test=[
             'lxml',
             'mock',
-            'plone.app.robotframework',
+            'plone.app.robotframework>0.9.16',
             'plone.app.testing',
             'zope.globalrequest',
             'zope.testing',


