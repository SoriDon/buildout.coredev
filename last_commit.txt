Repository: plone.dexterity


Branch: refs/heads/master
Date: 2019-10-01T14:58:24+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.dexterity/commit/059ab789b63538511648507b312f59ff8bd46b8f

Performance enhancement: avoid a providedBy in _default_from_schema

Files changed:
A news/117.bugfix
M plone/dexterity/content.py

b"diff --git a/news/117.bugfix b/news/117.bugfix\nnew file mode 100644\nindex 0000000..f2f6c17\n--- /dev/null\n+++ b/news/117.bugfix\n@@ -0,0 +1,2 @@\n+Performance enhancement: avoid a providedBy in ``_default_from_schema``.\n+[jensens]\ndiff --git a/plone/dexterity/content.py b/plone/dexterity/content.py\nindex c177aa6..4f72235 100644\n--- a/plone/dexterity/content.py\n+++ b/plone/dexterity/content.py\n@@ -73,14 +73,14 @@ def _default_from_schema(context, schema, fieldname):\n     field = schema.get(fieldname, None)\n     if field is None:\n         return _marker\n-    if IContextAwareDefaultFactory.providedBy(\n-            getattr(field, 'defaultFactory', None)\n+    default_factory = getattr(field, 'defaultFactory', None)\n+    if (\n+        # check for None to avoid one expensive providedBy (called often)\n+        default_factory is not None and\n+        IContextAwareDefaultFactory.providedBy(default_factory)\n     ):\n-        bound = field.bind(context)\n-        return deepcopy(bound.default)\n-    else:\n-        return deepcopy(field.default)\n-    return _marker\n+        return deepcopy(field.bind(context).default)\n+    return deepcopy(field.default)\n \n \n class FTIAwareSpecification(ObjectSpecificationDescriptor):\n"

Repository: plone.dexterity


Branch: refs/heads/master
Date: 2019-10-01T19:46:09+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.dexterity/commit/420dfd39c634fe7269cd3359db8331c2f36d7f7f

Merge pull request #117 from plone/jensens-performance_default_from_schema_microoptimization

Performance: avoid a providedBy in _default_from_schema

Files changed:
A news/117.bugfix
M plone/dexterity/content.py

b"diff --git a/news/117.bugfix b/news/117.bugfix\nnew file mode 100644\nindex 0000000..f2f6c17\n--- /dev/null\n+++ b/news/117.bugfix\n@@ -0,0 +1,2 @@\n+Performance enhancement: avoid a providedBy in ``_default_from_schema``.\n+[jensens]\ndiff --git a/plone/dexterity/content.py b/plone/dexterity/content.py\nindex 5e83ad7..72b8a66 100644\n--- a/plone/dexterity/content.py\n+++ b/plone/dexterity/content.py\n@@ -79,14 +79,14 @@ def _default_from_schema(context, schema, fieldname):\n     field = schema.get(fieldname, None)\n     if field is None:\n         return _marker\n-    if IContextAwareDefaultFactory.providedBy(\n-            getattr(field, 'defaultFactory', None)\n+    default_factory = getattr(field, 'defaultFactory', None)\n+    if (\n+        # check for None to avoid one expensive providedBy (called often)\n+        default_factory is not None and\n+        IContextAwareDefaultFactory.providedBy(default_factory)\n     ):\n-        bound = field.bind(context)\n-        return deepcopy(bound.default)\n-    else:\n-        return deepcopy(field.default)\n-    return _marker\n+        return deepcopy(field.bind(context).default)\n+    return deepcopy(field.default)\n \n \n class FTIAwareSpecification(ObjectSpecificationDescriptor):\n"

