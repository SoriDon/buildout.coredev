Repository: plone.app.content


Branch: refs/heads/master
Date: 2022-05-18T18:40:06+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.content/commit/bd952fa058397457ecdf9e41b35d8f198261ce9c

custom_json_handler: get obj type only once.

We could use isinstance, but I guess this might be faster.

Files changed:
M plone/app/content/utils.py

b'diff --git a/plone/app/content/utils.py b/plone/app/content/utils.py\nindex 0935c06..b2ac174 100644\n--- a/plone/app/content/utils.py\n+++ b/plone/app/content/utils.py\n@@ -10,12 +10,13 @@\n def custom_json_handler(obj):\n     if obj == Missing.Value:\n         return None\n-    if type(obj) in (datetime.datetime, datetime.date):\n+    obj_type = type(obj)\n+    if obj_type in (datetime.datetime, datetime.date):\n         return obj.isoformat()\n-    if type(obj) == DateTime:\n+    if obj_type == DateTime:\n         dt = DateTime(obj)\n         return dt.ISO()\n-    if type(obj) == set:\n+    if obj_type == set:\n         return list(obj)\n     return obj\n \n'

Repository: plone.app.content


Branch: refs/heads/master
Date: 2022-05-18T18:40:35+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.content/commit/6829ecc3216e955129892ea208b88bbf0c7b5d05

custom_json_handler: no need to create a DateTime from a DateTime.

Files changed:
M plone/app/content/utils.py

b'diff --git a/plone/app/content/utils.py b/plone/app/content/utils.py\nindex b2ac174..c4a3ec5 100644\n--- a/plone/app/content/utils.py\n+++ b/plone/app/content/utils.py\n@@ -14,8 +14,7 @@ def custom_json_handler(obj):\n     if obj_type in (datetime.datetime, datetime.date):\n         return obj.isoformat()\n     if obj_type == DateTime:\n-        dt = DateTime(obj)\n-        return dt.ISO()\n+        return obj.ISO()\n     if obj_type == set:\n         return list(obj)\n     return obj\n'

Repository: plone.app.content


Branch: refs/heads/master
Date: 2022-05-18T18:45:46+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.content/commit/c721ca3d502f9e4392c33de7656467f131ec4a16

Fix ValueError: Circular reference detected for PersistentMapping.

Fixes https://github.com/plone/plone.app.content/issues/246

Files changed:
A news/246.bugfix
M plone/app/content/utils.py

b'diff --git a/news/246.bugfix b/news/246.bugfix\nnew file mode 100644\nindex 0000000..0f43a9b\n--- /dev/null\n+++ b/news/246.bugfix\n@@ -0,0 +1,2 @@\n+Fix ValueError: Circular reference detected for PersistentMapping.\n+[maurits]\ndiff --git a/plone/app/content/utils.py b/plone/app/content/utils.py\nindex c4a3ec5..34f68d8 100644\n--- a/plone/app/content/utils.py\n+++ b/plone/app/content/utils.py\n@@ -1,4 +1,6 @@\n from DateTime import DateTime\n+from persistent.list import PersistentList\n+from persistent.mapping import PersistentMapping\n \n import datetime\n import Missing\n@@ -17,6 +19,10 @@ def custom_json_handler(obj):\n         return obj.ISO()\n     if obj_type == set:\n         return list(obj)\n+    if obj_type == PersistentMapping:\n+        return dict(obj)\n+    if obj_type == PersistentList:\n+        return list(obj)\n     return obj\n \n \n'

Repository: plone.app.content


Branch: refs/heads/master
Date: 2022-05-18T18:49:14+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.content/commit/b829f0b45b9f622da7a86e44bab9d554343dfb70

Fix ValueError: Circular reference detected for RelationValue.

Fixes https://github.com/plone/plone.app.content/issues/128

Files changed:
A news/128.bugfix
M plone/app/content/utils.py

b"diff --git a/news/128.bugfix b/news/128.bugfix\nnew file mode 100644\nindex 0000000..0ad2426\n--- /dev/null\n+++ b/news/128.bugfix\n@@ -0,0 +1,2 @@\n+Fix ValueError: Circular reference detected for RelationValue.\n+[maurits]\ndiff --git a/plone/app/content/utils.py b/plone/app/content/utils.py\nindex 34f68d8..d61cf02 100644\n--- a/plone/app/content/utils.py\n+++ b/plone/app/content/utils.py\n@@ -8,6 +8,11 @@\n # use simplejson because it's ahead of stdlib and supports more types\n import simplejson\n \n+try:\n+    from z3c.relationfield.relation import RelationValue\n+except ImportError:\n+    RelationValue = None\n+\n \n def custom_json_handler(obj):\n     if obj == Missing.Value:\n@@ -23,6 +28,8 @@ def custom_json_handler(obj):\n         return dict(obj)\n     if obj_type == PersistentList:\n         return list(obj)\n+    if RelationValue is not None and obj_type == RelationValue:\n+        return obj.to_id\n     return obj\n \n \n"

Repository: plone.app.content


Branch: refs/heads/master
Date: 2022-05-20T17:31:25+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.content/commit/0d41b5ba2bd1e0e97e0bb0cb279f55698a8051e5

Merge pull request #247 from plone/maurits-custom_json_handler

Various fixes for custom json handler

Files changed:
A news/128.bugfix
A news/246.bugfix
M plone/app/content/utils.py

b"diff --git a/news/128.bugfix b/news/128.bugfix\nnew file mode 100644\nindex 0000000..0ad2426\n--- /dev/null\n+++ b/news/128.bugfix\n@@ -0,0 +1,2 @@\n+Fix ValueError: Circular reference detected for RelationValue.\n+[maurits]\ndiff --git a/news/246.bugfix b/news/246.bugfix\nnew file mode 100644\nindex 0000000..0f43a9b\n--- /dev/null\n+++ b/news/246.bugfix\n@@ -0,0 +1,2 @@\n+Fix ValueError: Circular reference detected for PersistentMapping.\n+[maurits]\ndiff --git a/plone/app/content/utils.py b/plone/app/content/utils.py\nindex 0935c06..d61cf02 100644\n--- a/plone/app/content/utils.py\n+++ b/plone/app/content/utils.py\n@@ -1,4 +1,6 @@\n from DateTime import DateTime\n+from persistent.list import PersistentList\n+from persistent.mapping import PersistentMapping\n \n import datetime\n import Missing\n@@ -6,17 +8,28 @@\n # use simplejson because it's ahead of stdlib and supports more types\n import simplejson\n \n+try:\n+    from z3c.relationfield.relation import RelationValue\n+except ImportError:\n+    RelationValue = None\n+\n \n def custom_json_handler(obj):\n     if obj == Missing.Value:\n         return None\n-    if type(obj) in (datetime.datetime, datetime.date):\n+    obj_type = type(obj)\n+    if obj_type in (datetime.datetime, datetime.date):\n         return obj.isoformat()\n-    if type(obj) == DateTime:\n-        dt = DateTime(obj)\n-        return dt.ISO()\n-    if type(obj) == set:\n+    if obj_type == DateTime:\n+        return obj.ISO()\n+    if obj_type == set:\n+        return list(obj)\n+    if obj_type == PersistentMapping:\n+        return dict(obj)\n+    if obj_type == PersistentList:\n         return list(obj)\n+    if RelationValue is not None and obj_type == RelationValue:\n+        return obj.to_id\n     return obj\n \n \n"

