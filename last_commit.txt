Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-09-29T10:20:33-07:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/plone.restapi/commit/13c1d79cc0732762d63ecf2dc03c60a4658ef1da

Don't generate image scales until they are needed (#1498)

* Don't generate image scales until they are needed

* changelog

* Also use pre in get_original_image_url

Files changed:
A news/1498.feature
M src/plone/restapi/imaging.py
M src/plone/restapi/serializer/dxfields.py
M src/plone/restapi/tests/test_dxfield_serializer.py

b'diff --git a/news/1498.feature b/news/1498.feature\nnew file mode 100644\nindex 000000000..e400d7cdb\n--- /dev/null\n+++ b/news/1498.feature\n@@ -0,0 +1 @@\n+- Improve performance of serializing image scales. [davisagli]\ndiff --git a/src/plone/restapi/imaging.py b/src/plone/restapi/imaging.py\nindex bca29ada0..1778f7138 100644\n--- a/src/plone/restapi/imaging.py\n+++ b/src/plone/restapi/imaging.py\n@@ -12,13 +12,20 @@ def get_scales(context, field, width, height):\n     images_view = getMultiAdapter((context, request), name="images")\n \n     for name, actual_width, actual_height in get_scale_infos():\n-        # Try first with scale name\n-        scale = images_view.scale(field.__name__, scale=name)\n+        # Recent versions of plone.namedfile support getting scale\n+        # metadata without actually generating the image scale.\n+        # This was added in the same version as the `picture` method,\n+        # so we can use that to check whether the `scale` method\n+        # accepts the `pre` flag.\n+        scale_flags = {}\n+        if hasattr(images_view, "picture"):\n+            scale_flags["pre"] = True\n+        scale = images_view.scale(field.__name__, scale=name, **scale_flags)\n         if scale is None:\n             # Sometimes it fails, but we can create it\n             # using scale sizes\n             scale = images_view.scale(\n-                field.__name__, width=actual_width, height=actual_height\n+                field.__name__, width=actual_width, height=actual_height, **scale_flags\n             )\n \n         if scale is None:\n@@ -41,8 +48,11 @@ def get_scales(context, field, width, height):\n def get_original_image_url(context, fieldname, width, height):\n     request = getRequest()\n     images_view = getMultiAdapter((context, request), name="images")\n+    scale_flags = {}\n+    if hasattr(images_view, "picture"):\n+        scale_flags["pre"] = True\n     scale = images_view.scale(\n-        fieldname, width=width, height=height, direction="thumbnail"\n+        fieldname, width=width, height=height, direction="thumbnail", **scale_flags\n     )\n     if scale:\n         return scale.url\ndiff --git a/src/plone/restapi/serializer/dxfields.py b/src/plone/restapi/serializer/dxfields.py\nindex 86eed9adc..c63c7fe80 100644\n--- a/src/plone/restapi/serializer/dxfields.py\n+++ b/src/plone/restapi/serializer/dxfields.py\n@@ -106,7 +106,10 @@ def __call__(self):\n \n         url = get_original_image_url(self.context, self.field.__name__, width, height)\n \n-        scales = get_scales(self.context, self.field, width, height)\n+        if width != -1 and height != -1:\n+            scales = get_scales(self.context, self.field, width, height)\n+        else:\n+            scales = {}\n         result = {\n             "filename": image.filename,\n             "content-type": image.contentType,\ndiff --git a/src/plone/restapi/tests/test_dxfield_serializer.py b/src/plone/restapi/tests/test_dxfield_serializer.py\nindex 3fcfcd125..eb1e83c15 100644\n--- a/src/plone/restapi/tests/test_dxfield_serializer.py\n+++ b/src/plone/restapi/tests/test_dxfield_serializer.py\n@@ -405,7 +405,7 @@ def test_namedimage_field_serialization_returns_dict_with_original_scale(self):\n             )\n \n             scale_download_url = "{}/@@images/{}.{}".format(\n-                obj_url, scale_url_uuid, "png"\n+                obj_url, scale_url_uuid, "gif" if HAS_PLONE_6 else "png"\n             )\n             scales = {\n                 "listing": {\n@@ -532,7 +532,7 @@ def test_namedblobimage_field_serialization_returns_dict_with_original_scale(sel\n             )\n \n             scale_download_url = "{}/@@images/{}.{}".format(\n-                obj_url, scale_url_uuid, "png"\n+                obj_url, scale_url_uuid, "gif" if HAS_PLONE_6 else "png"\n             )\n             scales = {\n                 "listing": {\n'

