Repository: plone.app.portlets


Branch: refs/heads/master
Date: 2022-03-23T21:17:12+01:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/plone.app.portlets/commit/d1160c1b00f9d32637943090910770d37ba366f5

Remove manage-portlets.js, this is part of mockup now

Files changed:
A news/159.breaking
M plone/app/portlets/browser/configure.zcml
D plone/app/portlets/browser/manage-portlets.js

b'diff --git a/news/159.breaking b/news/159.breaking\nnew file mode 100644\nindex 00000000..5def27e0\n--- /dev/null\n+++ b/news/159.breaking\n@@ -0,0 +1 @@\n+Remove manage-portlets.js, this is part of mockup now [MrTango]\n\\ No newline at end of file\ndiff --git a/plone/app/portlets/browser/configure.zcml b/plone/app/portlets/browser/configure.zcml\nindex ea8adbee..653f3487 100644\n--- a/plone/app/portlets/browser/configure.zcml\n+++ b/plone/app/portlets/browser/configure.zcml\n@@ -213,12 +213,6 @@\n \n     </configure>\n \n-    <!-- Resources -->\n-    <browser:resource\n-        name="manage-portlets.js"\n-        file="manage-portlets.js"\n-        />\n-\n     <browser:page\n         for="*"\n         name="render-portlet"\ndiff --git a/plone/app/portlets/browser/manage-portlets.js b/plone/app/portlets/browser/manage-portlets.js\ndeleted file mode 100644\nindex 755bad58..00000000\n--- a/plone/app/portlets/browser/manage-portlets.js\n+++ /dev/null\n@@ -1,228 +0,0 @@\n-define([\n-  \'jquery\',\n-  \'pat-base\',\n-  \'mockup-utils\',\n-  \'mockup-patterns-modal\',\n-  \'translate\',\n-  \'pat-logger\',\n-  \'jquery.form\'\n-], function ($, Base, utils, Modal, _t, logger) {\n-  \'use strict\';\n-\n-  var log = logger.getLogger(\'pat-manage-portlets\');\n-\n-  var ManagePortlets = Base.extend({\n-    name: \'manage-portlets\',\n-    trigger: \'.pat-manage-portlets\',\n-    parser: \'mockup\',\n-    messageTimeout: 0,\n-    submitTimeout: 0,\n-    switchTimeout: 0,\n-    isModal: false,\n-    dirty: false,\n-    init: function(){\n-      var that = this;\n-      var $modal = that.$el.parents(\'.plone-modal\');\n-      if($modal.length === 1){\n-        this.isModal = true;\n-        /* want to do something on exit from modal now */\n-        var modal = $modal.data(\'pattern-plone-modal\');\n-        modal.on(\'hide\', function(){\n-          if(that.dirty){\n-            window.location.reload();\n-          }\n-        });\n-        that.loading = modal.loading;\n-      }else{\n-        that.loading = utils.loading;\n-      }\n-      that.bind();\n-    },\n-    bind: function(){\n-      var that = this;\n-      that.setupAddDropdown();\n-      that.setupSwitchPortletManager();\n-      that.setupSavePortletsSettings();\n-      that.setupPortletEdit();\n-      if(that.isModal){\n-        /* if we\'re in a modal, it\'s possible we have a link to\n-           parent case, bind the link so we can reload modal */\n-        $(\'.portlets-link-to-parent\').off(\'click\').click(function(e){\n-          that.loading.show();\n-          var $el = $(this);\n-          e.preventDefault();\n-          $.ajax({\n-            url: $el.attr(\'href\'),\n-            data: {\n-              ajax_load: 1\n-            }\n-          }).done(function(html){\n-            var $body = $(utils.parseBodyTag(html));\n-            var $modal = $el.parents(\'.plone-modal-body\');\n-            $modal.empty();\n-            var $content = $(\'#content\', $body);\n-            var $h1 = $(\'h1\', $content);\n-            $(\'.plone-modal-header\', $modal.parent()).find(\'h2\').html($h1.html());\n-            $h1.remove();\n-            $modal.append($content);\n-            that.rebind($(\'.pat-manage-portlets\', $content), true);\n-            that.loading.hide();\n-          });\n-        });\n-      }\n-    },\n-    rebind: function($el, suppress){\n-      log.info(\'rebind\');\n-      if ($.contains(document, this.$el[0])) {\n-        // $el is not detached, replace it\n-        this.$el.replaceWith($el);\n-      }\n-      this.$el = $el;\n-      this.bind();\n-      if(!suppress){\n-        this.statusMessage();\n-      }\n-      this.dirty = true;\n-    },\n-    statusMessage: function(msg){\n-      if(msg === undefined){\n-        msg = _t("Portlet changes saved");\n-      }\n-      var that = this;\n-\n-      var $message = $(\'#portlet-message\');\n-      if($message.length === 0){\n-        $message = $(\'<div class="alert alert-info" role="alert" id="portlet-message" style="opacity: 0"></div>\');\n-        if(that.isModal){\n-          $(\'.plone-modal-body:visible\').prepend($message);\n-        }else{\n-          $(\'#content-core\').prepend($message);\n-        }\n-      }\n-      $message.html(\'<strong class="mr-1">\' + _t("Info") + \'</strong>\' + msg);\n-      clearTimeout(that.messageTimeout);\n-      $message.fadeTo(500, 1);\n-      that.messageTimeout = window.setTimeout(function(){\n-        $message.fadeTo(500, 0.6);\n-      }, 3000);\n-    },\n-    showEditPortlet: function(url){\n-      log.info(\'show edit portlet in modal\');\n-      var that = this;\n-      var $a = $(\'<a/>\');\n-      $(\'body\').append($a);\n-      var pattern = new Modal($a, {\n-        ajaxUrl: url,\n-        actionOptions: {\n-          displayInModal: false,\n-          reloadWindowOnClose: false,\n-          isForm: true,\n-          onSuccess: function(modal, html){\n-            pattern.hide();\n-            var $body = $(utils.parseBodyTag(html));\n-            that.rebind($(\'#\' + that.$el.attr(\'id\'), $body).eq(0));\n-            that.statusMessage(_t(\'Portlet added\'));\n-          }\n-        }\n-      });\n-      pattern.on(\'after-render\', function(){\n-        var $el = $(\'#\' + that.$el.attr(\'id\'), pattern.$raw);\n-        /* this is a check that the add form doesn\'t just automatically\n-           create the portlet without an actual form.\n-           If element is found here, we can short circuit and\n-           continue on. */\n-        if($el.length === 1){\n-          /* hacky, trying to prevent modal parts from flickering here */\n-          $el = $el.clone();\n-          pattern.on(\'shown\', function(){\n-            pattern.hide();\n-          });\n-          that.rebind($el);\n-          that.statusMessage(_t(\'Portlet added\'));\n-        }\n-      });\n-      pattern.show();\n-    },\n-    setupPortletEdit: function(){\n-      var that = this;\n-      $(\'.managedPortlet .portletHeader > a\', that.$el).click(function(e){\n-        e.preventDefault();\n-        that.showEditPortlet($(this).attr(\'href\'));\n-      });\n-    },\n-    setupAddDropdown: function(){\n-      var that = this;\n-      $(\'.add-portlet\', that.$el).change(function(e){\n-        e.preventDefault();\n-        var $select = $(this);\n-        var $form = $select.parents(\'form\');\n-        var contextUrl = $select.attr(\'data-context-url\');\n-        var url = contextUrl + $select.val() +\n-          \'?_authenticator=\' + $(\'[name="_authenticator"]\').val() +\n-          \'&referer=\' + $(\'[name="referer"]\', $form).val();\n-        that.showEditPortlet(url);\n-      });\n-    },\n-    setupSavePortletsSettings: function(){\n-      var that = this;\n-      $(\'.portlets-settings, form.portlet-action\', that.$el).ajaxForm({\n-        beforeSubmit: function(){\n-          that.loading.show();\n-        },\n-        success: function(html){\n-          that.loading.hide();\n-          log.info(\'form submit\');\n-          var $body = $(utils.parseBodyTag(html));\n-          that.rebind($(\'#\' + that.$el.attr(\'id\'), $body).eq(0));\n-        }\n-      });\n-      // Block/unblock inherited portlets (parent, group and content type portlets)\n-      $(\'.portlets-settings select\', that.$el).change(function(){\n-        log.info(\'select change\');\n-        clearTimeout(that.submitTimeout);\n-        that.submitTimeout = window.setTimeout(function(){\n-          $(\'.portlets-settings\', that.$el).submit();\n-        }, 100);\n-      });\n-    },\n-    setupSwitchPortletManager: function(){\n-      var that = this;\n-      $(\'#main-container\').on(\'change\', \'.switch-portlet-manager\', function(e){\n-        e.stopImmediatePropagation();\n-        log.info(\'switch portlet manager\');\n-        var url_ = $(this).val();\n-        clearTimeout(that.switchTimeout);\n-        that.switchTimeout = window.setTimeout(function() {\n-          that._reloadPortletManager(url_);\n-        }, 100);\n-      });\n-      // Handle back/forward browser buttons\n-      $(window).on(\'popstate\', function(e) {\n-        e.stopImmediatePropagation();\n-        if (e && e.state === undefined) {\n-          var url_ = window.location.href;\n-          log.info("redirecting to: " + url_);\n-          that._reloadPortletManager(url_, true);\n-        }\n-      });\n-    },\n-    _reloadPortletManager: function(url_, is_popstate){\n-      var that = this;\n-      that.loading.show();\n-      $.get(url_, {ajax_load: 1}).done(function(html) {\n-        var $html = $(utils.parseBodyTag(html));\n-        var $content = (\'#content\', $html);\n-        $(\'#content\').html($content);\n-        that.rebind($(\'.pat-manage-portlets\', $content), true);\n-        if (!is_popstate) {\n-          window.history.pushState(null, null, url_);\n-        } else {\n-          window.history.replaceState(null, null, url_);\n-        }\n-        that.loading.hide();\n-      });\n-    }\n-  });\n-\n-  return ManagePortlets;\n-});\n'

Repository: plone.app.portlets


Branch: refs/heads/master
Date: 2022-03-24T15:22:20+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/plone.app.portlets/commit/adf67d6a0bc8c3239f991921241f06f55a8b274c

Merge pull request #159 from plone/es6-move-js-to-mockup

[ES6] Remove manage-portlets.js, this is part of mockup now

Files changed:
A news/159.breaking
M plone/app/portlets/browser/configure.zcml
D plone/app/portlets/browser/manage-portlets.js

b'diff --git a/news/159.breaking b/news/159.breaking\nnew file mode 100644\nindex 00000000..5def27e0\n--- /dev/null\n+++ b/news/159.breaking\n@@ -0,0 +1 @@\n+Remove manage-portlets.js, this is part of mockup now [MrTango]\n\\ No newline at end of file\ndiff --git a/plone/app/portlets/browser/configure.zcml b/plone/app/portlets/browser/configure.zcml\nindex ea8adbee..653f3487 100644\n--- a/plone/app/portlets/browser/configure.zcml\n+++ b/plone/app/portlets/browser/configure.zcml\n@@ -213,12 +213,6 @@\n \n     </configure>\n \n-    <!-- Resources -->\n-    <browser:resource\n-        name="manage-portlets.js"\n-        file="manage-portlets.js"\n-        />\n-\n     <browser:page\n         for="*"\n         name="render-portlet"\ndiff --git a/plone/app/portlets/browser/manage-portlets.js b/plone/app/portlets/browser/manage-portlets.js\ndeleted file mode 100644\nindex 755bad58..00000000\n--- a/plone/app/portlets/browser/manage-portlets.js\n+++ /dev/null\n@@ -1,228 +0,0 @@\n-define([\n-  \'jquery\',\n-  \'pat-base\',\n-  \'mockup-utils\',\n-  \'mockup-patterns-modal\',\n-  \'translate\',\n-  \'pat-logger\',\n-  \'jquery.form\'\n-], function ($, Base, utils, Modal, _t, logger) {\n-  \'use strict\';\n-\n-  var log = logger.getLogger(\'pat-manage-portlets\');\n-\n-  var ManagePortlets = Base.extend({\n-    name: \'manage-portlets\',\n-    trigger: \'.pat-manage-portlets\',\n-    parser: \'mockup\',\n-    messageTimeout: 0,\n-    submitTimeout: 0,\n-    switchTimeout: 0,\n-    isModal: false,\n-    dirty: false,\n-    init: function(){\n-      var that = this;\n-      var $modal = that.$el.parents(\'.plone-modal\');\n-      if($modal.length === 1){\n-        this.isModal = true;\n-        /* want to do something on exit from modal now */\n-        var modal = $modal.data(\'pattern-plone-modal\');\n-        modal.on(\'hide\', function(){\n-          if(that.dirty){\n-            window.location.reload();\n-          }\n-        });\n-        that.loading = modal.loading;\n-      }else{\n-        that.loading = utils.loading;\n-      }\n-      that.bind();\n-    },\n-    bind: function(){\n-      var that = this;\n-      that.setupAddDropdown();\n-      that.setupSwitchPortletManager();\n-      that.setupSavePortletsSettings();\n-      that.setupPortletEdit();\n-      if(that.isModal){\n-        /* if we\'re in a modal, it\'s possible we have a link to\n-           parent case, bind the link so we can reload modal */\n-        $(\'.portlets-link-to-parent\').off(\'click\').click(function(e){\n-          that.loading.show();\n-          var $el = $(this);\n-          e.preventDefault();\n-          $.ajax({\n-            url: $el.attr(\'href\'),\n-            data: {\n-              ajax_load: 1\n-            }\n-          }).done(function(html){\n-            var $body = $(utils.parseBodyTag(html));\n-            var $modal = $el.parents(\'.plone-modal-body\');\n-            $modal.empty();\n-            var $content = $(\'#content\', $body);\n-            var $h1 = $(\'h1\', $content);\n-            $(\'.plone-modal-header\', $modal.parent()).find(\'h2\').html($h1.html());\n-            $h1.remove();\n-            $modal.append($content);\n-            that.rebind($(\'.pat-manage-portlets\', $content), true);\n-            that.loading.hide();\n-          });\n-        });\n-      }\n-    },\n-    rebind: function($el, suppress){\n-      log.info(\'rebind\');\n-      if ($.contains(document, this.$el[0])) {\n-        // $el is not detached, replace it\n-        this.$el.replaceWith($el);\n-      }\n-      this.$el = $el;\n-      this.bind();\n-      if(!suppress){\n-        this.statusMessage();\n-      }\n-      this.dirty = true;\n-    },\n-    statusMessage: function(msg){\n-      if(msg === undefined){\n-        msg = _t("Portlet changes saved");\n-      }\n-      var that = this;\n-\n-      var $message = $(\'#portlet-message\');\n-      if($message.length === 0){\n-        $message = $(\'<div class="alert alert-info" role="alert" id="portlet-message" style="opacity: 0"></div>\');\n-        if(that.isModal){\n-          $(\'.plone-modal-body:visible\').prepend($message);\n-        }else{\n-          $(\'#content-core\').prepend($message);\n-        }\n-      }\n-      $message.html(\'<strong class="mr-1">\' + _t("Info") + \'</strong>\' + msg);\n-      clearTimeout(that.messageTimeout);\n-      $message.fadeTo(500, 1);\n-      that.messageTimeout = window.setTimeout(function(){\n-        $message.fadeTo(500, 0.6);\n-      }, 3000);\n-    },\n-    showEditPortlet: function(url){\n-      log.info(\'show edit portlet in modal\');\n-      var that = this;\n-      var $a = $(\'<a/>\');\n-      $(\'body\').append($a);\n-      var pattern = new Modal($a, {\n-        ajaxUrl: url,\n-        actionOptions: {\n-          displayInModal: false,\n-          reloadWindowOnClose: false,\n-          isForm: true,\n-          onSuccess: function(modal, html){\n-            pattern.hide();\n-            var $body = $(utils.parseBodyTag(html));\n-            that.rebind($(\'#\' + that.$el.attr(\'id\'), $body).eq(0));\n-            that.statusMessage(_t(\'Portlet added\'));\n-          }\n-        }\n-      });\n-      pattern.on(\'after-render\', function(){\n-        var $el = $(\'#\' + that.$el.attr(\'id\'), pattern.$raw);\n-        /* this is a check that the add form doesn\'t just automatically\n-           create the portlet without an actual form.\n-           If element is found here, we can short circuit and\n-           continue on. */\n-        if($el.length === 1){\n-          /* hacky, trying to prevent modal parts from flickering here */\n-          $el = $el.clone();\n-          pattern.on(\'shown\', function(){\n-            pattern.hide();\n-          });\n-          that.rebind($el);\n-          that.statusMessage(_t(\'Portlet added\'));\n-        }\n-      });\n-      pattern.show();\n-    },\n-    setupPortletEdit: function(){\n-      var that = this;\n-      $(\'.managedPortlet .portletHeader > a\', that.$el).click(function(e){\n-        e.preventDefault();\n-        that.showEditPortlet($(this).attr(\'href\'));\n-      });\n-    },\n-    setupAddDropdown: function(){\n-      var that = this;\n-      $(\'.add-portlet\', that.$el).change(function(e){\n-        e.preventDefault();\n-        var $select = $(this);\n-        var $form = $select.parents(\'form\');\n-        var contextUrl = $select.attr(\'data-context-url\');\n-        var url = contextUrl + $select.val() +\n-          \'?_authenticator=\' + $(\'[name="_authenticator"]\').val() +\n-          \'&referer=\' + $(\'[name="referer"]\', $form).val();\n-        that.showEditPortlet(url);\n-      });\n-    },\n-    setupSavePortletsSettings: function(){\n-      var that = this;\n-      $(\'.portlets-settings, form.portlet-action\', that.$el).ajaxForm({\n-        beforeSubmit: function(){\n-          that.loading.show();\n-        },\n-        success: function(html){\n-          that.loading.hide();\n-          log.info(\'form submit\');\n-          var $body = $(utils.parseBodyTag(html));\n-          that.rebind($(\'#\' + that.$el.attr(\'id\'), $body).eq(0));\n-        }\n-      });\n-      // Block/unblock inherited portlets (parent, group and content type portlets)\n-      $(\'.portlets-settings select\', that.$el).change(function(){\n-        log.info(\'select change\');\n-        clearTimeout(that.submitTimeout);\n-        that.submitTimeout = window.setTimeout(function(){\n-          $(\'.portlets-settings\', that.$el).submit();\n-        }, 100);\n-      });\n-    },\n-    setupSwitchPortletManager: function(){\n-      var that = this;\n-      $(\'#main-container\').on(\'change\', \'.switch-portlet-manager\', function(e){\n-        e.stopImmediatePropagation();\n-        log.info(\'switch portlet manager\');\n-        var url_ = $(this).val();\n-        clearTimeout(that.switchTimeout);\n-        that.switchTimeout = window.setTimeout(function() {\n-          that._reloadPortletManager(url_);\n-        }, 100);\n-      });\n-      // Handle back/forward browser buttons\n-      $(window).on(\'popstate\', function(e) {\n-        e.stopImmediatePropagation();\n-        if (e && e.state === undefined) {\n-          var url_ = window.location.href;\n-          log.info("redirecting to: " + url_);\n-          that._reloadPortletManager(url_, true);\n-        }\n-      });\n-    },\n-    _reloadPortletManager: function(url_, is_popstate){\n-      var that = this;\n-      that.loading.show();\n-      $.get(url_, {ajax_load: 1}).done(function(html) {\n-        var $html = $(utils.parseBodyTag(html));\n-        var $content = (\'#content\', $html);\n-        $(\'#content\').html($content);\n-        that.rebind($(\'.pat-manage-portlets\', $content), true);\n-        if (!is_popstate) {\n-          window.history.pushState(null, null, url_);\n-        } else {\n-          window.history.replaceState(null, null, url_);\n-        }\n-        that.loading.hide();\n-      });\n-    }\n-  });\n-\n-  return ManagePortlets;\n-});\n'

