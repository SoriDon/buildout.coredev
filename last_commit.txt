Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-06-21T13:14:23+02:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/0f9487c1b7565ce48214449a9f7d0e54a273acce

initially open collapsibles. hide with JS.

Files changed:
M Products/CMFPlone/controlpanel/browser/resourceregistry.pt

b'diff --git a/Products/CMFPlone/controlpanel/browser/resourceregistry.pt b/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\nindex e28c4da3b8..9bc4f3d53d 100644\n--- a/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\n+++ b/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\n@@ -22,6 +22,15 @@\n   </header>\n \n    <div id="content-core">\n+    <div class="portalMessage statusmessage statusmessage-error alert alert-danger js-errors">\n+        <tal:icon tal:replace="structure python:icons.tag(\'plone-statusmessage-error\', tag_alt=\'\', tag_class=\'statusmessage-icon mb-1 me-2\')" />\n+        <strong i18n:translate="">Javascript disabled or error(s) occurred</strong>\n+        <span class="content"\n+              i18n:translate="">\n+            If this message persists, a Javascript Error occurred within the\n+            resources below.\n+        </span>\n+    </div>\n     <div tal:condition="python:view.global_debug_mode()"\n          class="portalMessage statusmessage statusmessage-info alert alert-info"\n          role="alert">\n@@ -64,8 +73,8 @@\n       </div>\n     </form>\n     <div class="accordion" id="accordionRR" tal:define="dummy python:view.process_form()">\n-      <div class="accordion-item "\n-           tal:repeat="bundle python:view.bundles_data">\n+      <tal:block tal:repeat="bundle python:view.bundles_data">\n+      <div class="accordion-item ${python:\'active\' if bundle[\'name\'] == request.form.get(\'name\', None) else \'\'}">\n            <h2 class="accordion-header" id="heading-${python:bundle[\'safe_name\']}">\n             <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-${python:bundle[\'safe_name\']}" aria-expanded="false" aria-controls="collapse-${python:bundle[\'safe_name\']}">\n               <span tal:condition="python:bundle[\'name\'] and bundle[\'enabled\']" i18n:translate="" class="me-2"><tal:icon tal:replace="structure python:icons.tag(\'file-check\', tag_alt=\'Enabled bundle\')" /></span>\n@@ -75,7 +84,7 @@\n               <strong tal:condition="python:not bundle[\'name\']" i18n:translate="">Add new bundle</strong>\n             </button>\n           </h2>\n-          <div id="collapse-${python:bundle[\'safe_name\']}" class="accordion-collapse ${python:\'\' if bundle[\'name\'] == request.form.get(\'name\', None) else \'collapse\'}" aria-labelledby="heading${python:bundle[\'safe_name\']}" data-bs-parent="#accordionRR">\n+          <div id="collapse-${python:bundle[\'safe_name\']}" class="accordion-collapse collapse show" aria-labelledby="heading${python:bundle[\'safe_name\']}" data-bs-parent="#accordionRR">\n             <div class="accordion-body">\n               <form method="post" action="${python:context.absolute_url()}/@@resourceregistry-controlpanel">\n                 <input type="hidden" name="original_name" value="${python:bundle[\'name\']}" />\n@@ -126,6 +135,7 @@\n           </div>\n         </div>\n       </div>\n+      </tal:block>\n     </div>\n     <div class="mt-3">\n       <h2 i18n:translate="">Additional Resources</h2>\n@@ -145,6 +155,14 @@\n       </dl>\n     </div>\n    </div>\n+   <script>\n+     /* collapse accordion via script here, so that it stays open when JS is disabled */\n+     window.addEventListener(\'DOMContentLoaded\', async (event) => {\n+      document.querySelector(".alert.js-errors").style.display = "none";\n+      document.querySelectorAll(".accordion-item:not(.active) .accordion-button").forEach(el => el.classList.add("collapsed"));\n+      document.querySelectorAll(".accordion-item:not(.active) .accordion-collapse").forEach(el => el.classList.remove("show"));\n+    });\n+   </script>\n </metal:main>\n \n </body>\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-06-21T13:14:23+02:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/721feeaf878398b5497ee8d1354ea1da9a7193fc

add changenote

Files changed:
A news/3560.feature

b'diff --git a/news/3560.feature b/news/3560.feature\nnew file mode 100644\nindex 0000000000..4bdfe62cfb\n--- /dev/null\n+++ b/news/3560.feature\n@@ -0,0 +1,2 @@\n+Initially open accordions in resource registry. Hide via JS when no errors occur.\n+[petschki]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-06-26T10:48:42+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/6329d0e3d4a27f81ec18e535924eeaed33819b15

Merge branch 'master' into petschki-resourceregistry-accordion-fix

Files changed:
A Products/CMFPlone/image_scales/__init__.py
A Products/CMFPlone/image_scales/adapters.py
A Products/CMFPlone/image_scales/configure.zcml
A Products/CMFPlone/image_scales/indexer.py
A Products/CMFPlone/image_scales/tests/__init__.py
A Products/CMFPlone/image_scales/tests/images.xml
A Products/CMFPlone/image_scales/tests/test_image_scales_metadata.py
A Products/CMFPlone/tests/900.jpg
M CHANGES.rst
M Products/CMFPlone/configure.zcml
M Products/CMFPlone/factory.py
M Products/CMFPlone/profiles/default/catalog.xml
M Products/CMFPlone/tests/dummy.py
M Products/CMFPlone/tests/testContentTypeScripts.py
M setup.py
D news/1178.feature
D news/3188.bugfix
D news/3432.bugfix
D news/3465.feature
D news/3477.feature
D news/3487.breaking
D news/3492.breaking
D news/3493.breaking
D news/3495.feature
D news/3500.bugfix
D news/3503.bugfix
D news/3510.feature
D news/3515.bugfix.1
D news/3517.bugfix
D news/3520.breaking
D news/3522.bugfix
D news/3523.feature
D news/3527.feature
D news/3528.feature
D news/3533.bugfix
D news/3539.bugfix
D news/3555.bugfix
D news/3558.feature
D news/5.bugfix
D news/6005.bugfix

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 2426d525b3..0f98f0c248 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -12,6 +12,82 @@ Changelog\n \n .. towncrier release notes start\n \n+6.0.0a5 (2022-06-24)\n+--------------------\n+\n+Breaking changes:\n+\n+\n+- Remove Archtypes specific ``isIDAutoGenerated`` helper.\n+  This was dead code not used anywhere in Plone 6.\n+  [jensens] (#3487)\n+- ``PloneFolder`` was once used with early Archetypes.\n+  This code is dead now and got removed.\n+  [jensens] (#3492)\n+- ``DublinCore.py`` was once used with Archetypes.\n+  This code is dead now and got removed.\n+  [jensens] (#3493)\n+- Move discussion Key to ``plone.app.discussion``.\n+  [jensens] (#3520)\n+\n+\n+New features:\n+\n+\n+- Added customisable batch_size for redirects controlpanel\n+  [iulianpetchesi] (#1178)\n+- Add option to use TinyMCE in inline-mode.\n+  [pbauer] (#3465)\n+- Add image srcset\'s configuration to TinyMCE pattern settings [MrTango] (#3477)\n+- Add support for images in default search page.\n+  [agitator] (#3495)\n+- Enable auto include of styles to the TinyMCE formats menu. The file has to be named ``tinymce-formats.css`` and known by TinyMCE.\n+  [agitator] (#3510)\n+- Add ``image_scales`` to catalog metadata.\n+  [cekk, maurits] (#3521)\n+- Sort addons by title\n+  [erral] (#3523)\n+- Show more information of broken relations\n+  [pbauer] (#3527)\n+- Show link to the Volto-migration (``@@migrate_to_volto``) in the view ``@@plone-upgrade`` when the option is available.\n+  [pbauer] (#3528)\n+- SVG image as default Plone logo.\n+  [petschki] (#3558)\n+\n+\n+Bug fixes:\n+\n+\n+- Make compatible with robotframework 3-5.\n+  [maurits] (#5)\n+- Explicitly include zcml of more packages.\n+  Reorder the zcml loading.\n+  Require ``plone.resource``.\n+  [maurits] (#3188)\n+- Remove date range search fix, which was done in Products.ZCatalog.\n+  [wesleybl] (#3432)\n+- fix `@@iconresolver` to resolve names with "/" correctly (eg. "contenttype/document")\n+  [petschki] (#3500)\n+- Bugfix: Resource viewlet cache took not enough factors into account (like base url).\n+  [jnsens] (#3503)\n+- Moved ``recently_modified`` and ``recently_published`` skin templates to browser views.\n+  [maurits] (#3515)\n+- Fix for quoted search terms\n+  [petschki] (#3517)\n+- Fix robot tests for updated toolbar\n+  [petschki] (#3522)\n+- Fix rendering viewlet.resourceregistries.js when there are missing resources.\n+  [petschki] (#3533)\n+- Fix tests for updated module federation bundles.\n+  [thet] (#3539)\n+- Remove modal from login and join action.\n+  [agitator] (#3555)\n+- Fix reporting of exceptions in Products.CMFPlone.factory.addPloneSite.\n+  [davisagli] (#3561)\n+- Updated metadata version to 6005.\n+  [maurits] (#6005)\n+\n+\n 6.0.0a4 (2022-04-08)\n --------------------\n \n@@ -37,14 +113,14 @@ Breaking changes:\n   - Only "bundles" are registered - support of "resources" and "bundle resources" is removed.\n   - Some of the old bundle registry properties are deprecated and unused.\n   - Removed TTW compilation of bundles via r.js and less.js.\n-  - Property `merge_with` is no longer needed in HTTP/2 times and merging here unsupported.\n-  - Unique key for delivery is based on hash of bundle file, `last_compilation` property is deprecated.\n+  - Property ``merge_with`` is no longer needed in HTTP/2 times and merging here unsupported.\n+  - Unique key for delivery is based on hash of bundle file, ``last_compilation`` property is deprecated.\n   - A new traverser ensures uniqueness.\n   - Other related bundle properties are also deprecated.\n   - Comes with new, server side generated control panel.\n \n   [jensens] (#3325)\n-- Remove `deprecated.zcml` and `meta-bbb.zcml`.\n+- Remove ``deprecated.zcml`` and ``meta-bbb.zcml``.\n   [jensens, pbauer] (#3485)\n \n \n@@ -70,7 +146,7 @@ Bug fixes:\n \n \n - Fixed evaluating expressions on resources, and especially loading ``plone.session`` resources.\n-  Fixes `plone.session` issue 23 <https://github.com/plone/plone.session/issues/23>_.\n+  Fixes `plone.session issue 23 <https://github.com/plone/plone.session/issues/23>`_.\n   [maurits] (#23)\n - MigrationTool: use more standard ``listUpgrades`` code from GenericSetup 2.2.0.\n   I ported our special logic there.\n@@ -87,7 +163,7 @@ Bug fixes:\n   No longer register now empty skin layers ``plone_prefs`` and ``plone_form_scripts``.\n   [maurits] (#3240)\n - Fix TinyMCE configuration JSON serialization and cast entity_encoding to a list. (#3247)\n-- Make author template barceloneta/bs5 ready. Add some CSS classes to Markup. \n+- Make author template barceloneta/bs5 ready. Add some CSS classes to Markup.\n   [1letter] (#3290)\n - Use behavior-names instead of python-paths in types-controlpanel\n   [pbauer] (#3294)\n@@ -99,7 +175,7 @@ Bug fixes:\n   [1letter] (#3374)\n - Reorganize viewlets after removing the plone.header viewlet in plone.app.layout\n   [erral] (#3416)\n-- Fix `login-help` validation\n+- Fix ``login-help`` validation\n   [petschki] (#3422)\n - Fix info message (char left over) in quickinstaller template\n   [laulaz] (#3430)\n@@ -180,7 +256,7 @@ Bug fixes:\n - The Plone site root is cataloged (#3314)\n - Fix #3323DX-Site-Root: ZMI Nav-Tree is no longer expandable.\n   [jensens] (#3323)\n-- Fixes #3337: \n+- Fixes #3337:\n   Remove dead code that wont work in Py 3 anyway if called (cmp).\n   [jensens] (#3337)\n - Remove DYNAMIC_CONTENT from translation files\n@@ -273,7 +349,7 @@ Breaking changes:\n - Barceloneta LTS theming (#3061)\n - Remove six at all places where used. [jensens] (#3183)\n - Remove ``portal_utf8`` and it twin ``utf8_portal`` from ``utils`` and ``PloneTool`` since its never used nowhere. [jensens] (#3183)\n-- Remove `meta_type` index and metadata from catalog. \n+- Remove `meta_type` index and metadata from catalog.\n   Both were unused in Plone core and rarely used in addons.\n   [jensens] (#3208)\n - Plone 6 with markup update for Bootstrap.\n@@ -287,8 +363,8 @@ Breaking changes:\n New features:\n \n \n-- Custom date format strings from registry can be in the ``${}`` format as in the locales files. \n-  If theres a day or month name used, this will be translated. \n+- Custom date format strings from registry can be in the ``${}`` format as in the locales files.\n+  If theres a day or month name used, this will be translated.\n   For bbb the classic strftime ``%`` strings are still behaving like before.\n   [jensens] (#3084)\n - Add icon resolver to return url or tag for given icon.\n@@ -344,7 +420,7 @@ Bug fixes:\n   [thet] (#3195)\n - Remove traces of Archetypes\n   [pbauer] (#3214)\n-- Fix problem to remove username and password from email settings if there was already one set. \n+- Fix problem to remove username and password from email settings if there was already one set.\n   [jensens] (#3224)\n - Fix migration when we have broken objects in the app root (e.g. the temp_folder) (#3245)\n - Fixed tests in combination with Products.PluggableAuthService 2.6.0.\ndiff --git a/Products/CMFPlone/configure.zcml b/Products/CMFPlone/configure.zcml\nindex 96a76b4c51..80804657d8 100644\n--- a/Products/CMFPlone/configure.zcml\n+++ b/Products/CMFPlone/configure.zcml\n@@ -80,6 +80,9 @@\n   <include file="profiles.zcml"/>\n   <include file="catalog.zcml" />\n \n+  <!-- images scales poc -->\n+  <include package=".image_scales" />\n+\n   <cmf:registerDirectory\n       name="skins"\n       directory="skins"\ndiff --git a/Products/CMFPlone/factory.py b/Products/CMFPlone/factory.py\nindex 6a23bd1164..6249a3bf43 100644\n--- a/Products/CMFPlone/factory.py\n+++ b/Products/CMFPlone/factory.py\n@@ -1,13 +1,10 @@\n from logging import getLogger\n from plone.registry.interfaces import IRegistry\n-from plone.uuid.handlers import addAttributeUUID\n-from Products.CMFCore.interfaces import ISiteRoot\n from Products.CMFPlone import PloneMessageFactory as _\n from Products.CMFPlone.events import SiteManagerCreatedEvent\n from plone.base.interfaces import INonInstallable\n from Products.CMFPlone.Portal import PloneSite\n from Products.GenericSetup.tool import SetupTool\n-from Products.statusmessages.interfaces import IStatusMessage\n from zope.component import queryUtility\n from zope.component.hooks import setSite\n from zope.event import notify\n@@ -143,49 +140,41 @@ def addPloneSite(context, site_id, title=\'Plone site\', description=\'\',\n     notify(SiteManagerCreatedEvent(site))\n     setSite(site)\n \n-    setup_tool.setBaselineContext(\'profile-%s\' % profile_id)\n-    setup_tool.runAllImportStepsFromProfile(\'profile-%s\' % profile_id)\n-\n-    reg = queryUtility(IRegistry, context=site)\n-    reg[\'plone.portal_timezone\'] = portal_timezone\n-    reg[\'plone.available_timezones\'] = [portal_timezone]\n-    reg[\'plone.default_language\'] = default_language\n-    reg[\'plone.available_languages\'] = [default_language]\n-\n-    # Install default content types profile if user do not select "example content"\n-    # during site creation.\n-    content_types_profile = content_profile_id if setup_content else _TYPES_PROFILE\n-\n-    setup_tool.runAllImportStepsFromProfile(f\'profile-{content_types_profile}\')\n-\n-    props = dict(\n-        title=title,\n-        description=description,\n-    )\n-    # Do this before applying extension profiles, so the settings from a\n-    # properties.xml file are applied and not overwritten by this\n-    site.manage_changeProperties(**props)\n-\n-    for extension_id in extension_ids:\n-        try:\n-            setup_tool.runAllImportStepsFromProfile(\n-                \'profile-%s\' % extension_id)\n-        except Exception as msg:\n-            IStatusMessage(request).add(_(\n-                \'Could not install ${profile_id}: ${error_msg}! \'\n-                \'Please try to install it manually using the "Addons" \'\n-                \'controlpanel and report any issues to the \'\n-                \'addon maintainers.\',\n-                mapping={\n-                    \'profile_id\': extension_id,\n-                    \'error_msg\': msg.args,\n-                }),\n-                type=\'error\')\n-            logger.exception(\n-                \'Error while installing addon {}. \'\n-                \'See traceback below for details.\'.format(extension_id))\n-\n-    if snapshot is True:\n-        setup_tool.createSnapshot(\'initial_configuration\')\n-\n-    return site\n+    try:\n+        setup_tool.setBaselineContext(\'profile-%s\' % profile_id)\n+        setup_tool.runAllImportStepsFromProfile(\'profile-%s\' % profile_id)\n+\n+        reg = queryUtility(IRegistry, context=site)\n+        reg[\'plone.portal_timezone\'] = portal_timezone\n+        reg[\'plone.available_timezones\'] = [portal_timezone]\n+        reg[\'plone.default_language\'] = default_language\n+        reg[\'plone.available_languages\'] = [default_language]\n+\n+        # Install default content types profile if user do not select "example content"\n+        # during site creation.\n+        content_types_profile = content_profile_id if setup_content else _TYPES_PROFILE\n+\n+        setup_tool.runAllImportStepsFromProfile(f\'profile-{content_types_profile}\')\n+\n+        props = dict(\n+            title=title,\n+            description=description,\n+        )\n+        # Do this before applying extension profiles, so the settings from a\n+        # properties.xml file are applied and not overwritten by this\n+        site.manage_changeProperties(**props)\n+\n+        for extension_id in extension_ids:\n+            try:\n+                setup_tool.runAllImportStepsFromProfile(f"profile-{extension_id}")\n+            except Exception:\n+                logger.error(f"Error while installing profile {extension_id}:")\n+                raise\n+\n+        if snapshot is True:\n+            setup_tool.createSnapshot(\'initial_configuration\')\n+\n+        return site\n+    except Exception:\n+        setSite(None)\n+        raise\ndiff --git a/Products/CMFPlone/image_scales/__init__.py b/Products/CMFPlone/image_scales/__init__.py\nnew file mode 100644\nindex 0000000000..e69de29bb2\ndiff --git a/Products/CMFPlone/image_scales/adapters.py b/Products/CMFPlone/image_scales/adapters.py\nnew file mode 100644\nindex 0000000000..6fc7230b48\n--- /dev/null\n+++ b/Products/CMFPlone/image_scales/adapters.py\n@@ -0,0 +1,33 @@\n+from Acquisition import aq_inner\n+from plone.dexterity.interfaces import IDexterityContent\n+from plone.dexterity.utils import iterSchemata\n+from plone.base.interfaces import IImageScalesAdapter\n+from plone.base.interfaces import IImageScalesFieldAdapter\n+from zope.component import adapter\n+from zope.component import queryMultiAdapter\n+from zope.interface import implementer\n+from zope.interface import Interface\n+from zope.schema import getFields\n+\n+\n+@implementer(IImageScalesAdapter)\n+@adapter(IDexterityContent, Interface)\n+class ImageScales:\n+    def __init__(self, context, request):\n+        self.context = context\n+        self.request = request\n+\n+    def __call__(self):\n+        obj = aq_inner(self.context)\n+        res = {}\n+        for schema in iterSchemata(self.context):\n+            for name, field in getFields(schema).items():\n+                # serialize the field\n+                serializer = queryMultiAdapter(\n+                    (field, obj, self.request), IImageScalesFieldAdapter\n+                )\n+                if serializer:\n+                    scales = serializer()\n+                    if scales:\n+                        res[name] = scales\n+        return res\ndiff --git a/Products/CMFPlone/image_scales/configure.zcml b/Products/CMFPlone/image_scales/configure.zcml\nnew file mode 100644\nindex 0000000000..623a9fb12d\n--- /dev/null\n+++ b/Products/CMFPlone/image_scales/configure.zcml\n@@ -0,0 +1,14 @@\n+<configure\n+    xmlns="http://namespaces.zope.org/zope"\n+    xmlns:zcml="http://namespaces.zope.org/zcml">\n+\n+  <!-- indexer -->\n+  <adapter\n+      factory=".indexer.image_scales"\n+      name="image_scales"\n+      />\n+\n+  <!-- adapters -->\n+  <adapter factory=".adapters.ImageScales" />\n+\n+</configure>\ndiff --git a/Products/CMFPlone/image_scales/indexer.py b/Products/CMFPlone/image_scales/indexer.py\nnew file mode 100644\nindex 0000000000..2c4c9c20be\n--- /dev/null\n+++ b/Products/CMFPlone/image_scales/indexer.py\n@@ -0,0 +1,22 @@\n+from persistent.dict import PersistentDict\n+from plone.base.interfaces import IImageScalesAdapter\n+from plone.dexterity.interfaces import IDexterityContent\n+from plone.indexer.decorator import indexer\n+from zope.component import queryMultiAdapter\n+from zope.globalrequest import getRequest\n+\n+\n+@indexer(IDexterityContent)\n+def image_scales(obj):\n+    """\n+    Indexer used to store in metadata the image scales of the object.\n+    """\n+    adapter = queryMultiAdapter((obj, getRequest()), IImageScalesAdapter)\n+    if not adapter:\n+        # Raising an AttributeError does the right thing,\n+        # making sure nothing is saved in the catalog.\n+        raise AttributeError\n+    scales = adapter()\n+    if not scales:\n+        raise AttributeError\n+    return PersistentDict(scales)\ndiff --git a/Products/CMFPlone/image_scales/tests/__init__.py b/Products/CMFPlone/image_scales/tests/__init__.py\nnew file mode 100644\nindex 0000000000..e69de29bb2\ndiff --git a/Products/CMFPlone/image_scales/tests/images.xml b/Products/CMFPlone/image_scales/tests/images.xml\nnew file mode 100644\nindex 0000000000..c12dcb4a1e\n--- /dev/null\n+++ b/Products/CMFPlone/image_scales/tests/images.xml\n@@ -0,0 +1,12 @@\n+<model xmlns="http://namespaces.plone.org/supermodel/schema"\n+       xmlns:marshal="http://namespaces.plone.org/supermodel/marshal">\n+  <schema>\n+    <field name="image1" type="plone.namedfile.field.NamedBlobImage"\n+        marshal:primary="true">\n+      <title>Image 1</title>\n+    </field>\n+    <field name="image2" type="plone.namedfile.field.NamedBlobImage">\n+      <title>Image 2</title>\n+    </field>\n+  </schema>\n+</model>\ndiff --git a/Products/CMFPlone/image_scales/tests/test_image_scales_metadata.py b/Products/CMFPlone/image_scales/tests/test_image_scales_metadata.py\nnew file mode 100644\nindex 0000000000..be656d06ba\n--- /dev/null\n+++ b/Products/CMFPlone/image_scales/tests/test_image_scales_metadata.py\n@@ -0,0 +1,155 @@\n+from plone.app.testing import setRoles\n+from plone.app.testing import TEST_USER_ID\n+from plone.dexterity.fti import DexterityFTI\n+from plone.dexterity.utils import iterSchemata\n+from plone.namedfile.file import NamedImage\n+from plone.base.interfaces import IImageScalesAdapter\n+from plone.base.interfaces import IImageScalesFieldAdapter\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n+from Products.CMFPlone.tests import dummy\n+from zope.component import queryMultiAdapter\n+\n+import Missing\n+import unittest\n+\n+\n+class ImageScalesAdaptersRegisteredTest(unittest.TestCase):\n+    """Test portal actions control panel."""\n+\n+    layer = PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n+\n+    def setUp(self):\n+        self.portal = self.layer["portal"]\n+        self.request = self.layer["request"]\n+        setRoles(self.portal, TEST_USER_ID, ["Manager"])\n+\n+        news_id = self.portal.invokeFactory(\n+            "News Item",\n+            id="news",\n+            title="News",\n+        )\n+\n+        image_id = self.portal.invokeFactory(\n+            "Image",\n+            id="image",\n+            title="image",\n+            image=NamedImage(dummy.Image(), filename="dummy.gif"),\n+        )\n+\n+        self.image = self.portal[image_id]\n+        self.news = self.portal[news_id]\n+\n+    def serialize(self, context, fieldname):\n+        for schema in iterSchemata(context):\n+            if fieldname in schema:\n+                field = schema.get(fieldname)\n+                break\n+        serializer = queryMultiAdapter(\n+            (field, context, self.request), IImageScalesFieldAdapter\n+        )\n+        if serializer:\n+            return serializer()\n+        return None\n+\n+    def test_field_adapter_do_not_return_scales_for_fields_without_adapter(self):\n+        res = self.serialize(self.image, "title")\n+        self.assertEqual(res, None)\n+\n+    def test_field_adapter_return_scales_for_fields_with_adapter(self):\n+        res = self.serialize(self.image, "image")\n+        self.assertNotEqual(res, None)\n+        self.assertEqual(len(res), 1)\n+        scales = res[0]\n+        self.assertEqual(scales["content-type"], "image/gif")\n+        self.assertEqual(scales["filename"], "dummy.gif")\n+        self.assertIn("scales", scales)\n+        scales = scales["scales"]\n+        self.assertIn("listing", scales)\n+        listing_scale = scales["listing"]\n+        self.assertIn("download", listing_scale)\n+\n+    def test_field_adapter_do_not_return_scales_for_empty_fields_with_adapter(self):\n+        res = self.serialize(self.news, "image")\n+        self.assertEqual(res, None)\n+\n+    def test_field_adapter_does_not_return_larger_scales(self):\n+        # Add an image of 900 by 900 pixels.\n+        image_id = self.portal.invokeFactory(\n+            "Image",\n+            id="jpeg",\n+            title="jpeg image",\n+            image=NamedImage(dummy.JpegImage(), filename="900.jpeg"),\n+        )\n+        image = self.portal[image_id]\n+        res = self.serialize(image, "image")\n+        self.assertNotEqual(res, None)\n+        self.assertEqual(len(res), 1)\n+        scales = res[0]\n+        self.assertEqual(scales["content-type"], "image/jpeg")\n+        self.assertIn("scales", scales)\n+        self.assertEqual(scales["filename"], "900.jpeg")\n+        self.assertEqual(scales["width"], 900)\n+        self.assertEqual(scales["height"], 900)\n+        download = scales["download"]\n+        images_url = image.absolute_url() + "/@@images"\n+        self.assertTrue(download.startswith(f"{images_url}/image-900-"))\n+        self.assertTrue(download.endswith(".jpeg"))\n+        scales = scales["scales"]\n+        # larger and huge should not be in here: these scales would return the same\n+        # content as the original.\n+        self.assertEqual(\n+            ["icon", "large", "listing", "mini", "preview", "teaser", "thumb", "tile"],\n+            sorted(scales.keys()),\n+        )\n+        preview = scales["preview"]\n+        self.assertEqual(preview["width"], 400)\n+        self.assertEqual(preview["height"], 400)\n+        self.assertTrue(preview["download"].startswith(f"{images_url}/image-400-"))\n+\n+    def test_content_adapter_return_proper_scales(self):\n+        res = queryMultiAdapter((self.image, self.request), IImageScalesAdapter)()\n+        self.assertNotEqual(res, None)\n+        self.assertEqual(list(res.keys()), ["image"])\n+        self.assertEqual(len(res["image"]), 1)\n+        scales = res["image"][0]\n+        self.assertEqual(scales["content-type"], "image/gif")\n+        self.assertIn("scales", scales)\n+\n+    def test_content_adapter_do_not_return_scales_if_empty_fields(self):\n+        res = queryMultiAdapter((self.news, self.request), IImageScalesAdapter)()\n+        self.assertEqual(res, {})\n+\n+    def test_metadata_populated_with_scales(self):\n+        catalog = self.portal.portal_catalog\n+        news_brain = catalog(UID=self.news.UID())[0]\n+        image_brain = catalog(UID=self.image.UID())[0]\n+\n+        self.assertEqual(news_brain.image_scales, Missing.Value)\n+        self.assertEqual(list(image_brain.image_scales.keys()), ["image"])\n+        self.assertEqual(len(image_brain.image_scales["image"]), 1)\n+        self.assertEqual(\n+            image_brain.image_scales["image"][0]["content-type"], "image/gif"\n+        )\n+        self.assertIn("scales", image_brain.image_scales["image"][0])\n+\n+    def test_multiple_image_fields(self):\n+        # Note: since there are basically three ways to set fields on an FTI, we use\n+        # one, and make the others explicitly None, otherwise no fields may be found.\n+        fti = DexterityFTI(\n+            "multi",\n+            model_file="Products.CMFPlone.image_scales.tests:images.xml",\n+            model_source=None,\n+            schema=None,\n+        )\n+        self.portal.portal_types._setObject("multi", fti)\n+        content_id = self.portal.invokeFactory(\n+            "multi",\n+            id="multi",\n+            title="Multi",\n+            image1=NamedImage(dummy.Image()),\n+            image2=NamedImage(dummy.Image()),\n+        )\n+        multi = self.portal[content_id]\n+        catalog = self.portal.portal_catalog\n+        brain = catalog(UID=multi.UID())[0]\n+        self.assertEqual(sorted(list(brain.image_scales.keys())), ["image1", "image2"])\ndiff --git a/Products/CMFPlone/profiles/default/catalog.xml b/Products/CMFPlone/profiles/default/catalog.xml\nindex ebab330d9f..51ab0fbaa6 100644\n--- a/Products/CMFPlone/profiles/default/catalog.xml\n+++ b/Products/CMFPlone/profiles/default/catalog.xml\n@@ -127,6 +127,7 @@\n  <column value="getObjSize"/>\n  <column value="getRemoteUrl"/>\n  <column value="id"/>\n+ <column value="image_scales"/>\n  <column value="is_folderish"/>\n  <column value="listCreators"/>\n  <column value="location"/>\ndiff --git a/Products/CMFPlone/tests/900.jpg b/Products/CMFPlone/tests/900.jpg\nnew file mode 100644\nindex 0000000000..e9ef7dbb1a\nBinary files /dev/null and b/Products/CMFPlone/tests/900.jpg differ\ndiff --git a/Products/CMFPlone/tests/dummy.py b/Products/CMFPlone/tests/dummy.py\nindex 0ea980fb65..e80bf009b4 100644\n--- a/Products/CMFPlone/tests/dummy.py\n+++ b/Products/CMFPlone/tests/dummy.py\n@@ -20,6 +20,11 @@\n     os.path.dirname(__file__), os.pardir, \'tool.gif\')\n with open(GIF_FILE, \'rb\') as f:\n     GIF = f.read()\n+# jpeg file of 900x900 pixels\n+JPEG_FILE = os.path.join(\n+    os.path.dirname(__file__), \'900.jpg\')\n+with open(JPEG_FILE, \'rb\') as f:\n+    JPEG = f.read()\n \n \n class Dummy:\n@@ -105,6 +110,15 @@ class Image(File):\n     data = GIF\n \n \n+class JpegImage(File):\n+    """Dummy jpeg image upload object\n+\n+    900 by 900 pixels.\n+    """\n+    filename = "900.jpeg"\n+    data = JPEG\n+\n+\n class Folder(SimpleFolder):\n     \'\'\'Dummy Folder\n        First-class Zope object. Can be _setObject\'ed.\ndiff --git a/Products/CMFPlone/tests/testContentTypeScripts.py b/Products/CMFPlone/tests/testContentTypeScripts.py\nindex 325238d92a..0a0b5207c6 100644\n--- a/Products/CMFPlone/tests/testContentTypeScripts.py\n+++ b/Products/CMFPlone/tests/testContentTypeScripts.py\n@@ -5,72 +5,74 @@\n from Products.CMFPlone.tests import PloneTestCase\n from Products.CMFPlone.tests import dummy\n \n-AddPortalTopics = \'Add portal topics\'\n+AddPortalTopics = "Add portal topics"\n \n \n class TestContentTypeScripts(PloneTestCase.PloneTestCase):\n-\n     def afterSetUp(self):\n-        perms = self.getPermissionsOfRole(\'Member\')\n-        self.setPermissions(perms + [AddPortalTopics], \'Member\')\n+        perms = self.getPermissionsOfRole("Member")\n+        self.setPermissions(perms + [AddPortalTopics], "Member")\n         self.request = self.app.REQUEST\n \n     def getPermissionsOfRole(self, role):\n         perms = self.portal.permissionsOfRole(role)\n-        return [p[\'name\'] for p in perms if p[\'selected\']]\n+        return [p["name"] for p in perms if p["selected"]]\n \n     def testDocumentCreate(self):\n-        self.folder.invokeFactory(\n-            \'Document\', id=\'doc\', text=RichTextValue(\'data\'))\n-        self.assertEqual(self.folder.doc.text.raw, \'data\')\n-        self.assertEqual(self.folder.doc.Format(), \'text/html\')\n+        self.folder.invokeFactory("Document", id="doc", text=RichTextValue("data"))\n+        self.assertEqual(self.folder.doc.text.raw, "data")\n+        self.assertEqual(self.folder.doc.Format(), "text/html")\n \n     def testEventCreate(self):\n-        self.folder.invokeFactory(\'Event\', id=\'event\',\n-                                  title=\'Foo\',\n-                                  start=datetime(year=2003, month=9, day=18),\n-                                  end=datetime(year=2003, month=9, day=19))\n-        self.assertEqual(self.folder.event.Title(), \'Foo\')\n-        self.assertTrue(self.folder.event.start.isoformat()\n-                            .startswith(\'2003-09-18T00:00:00\'))\n-        self.assertTrue(self.folder.event.end.isoformat()\n-                            .startswith(\'2003-09-19T00:00:00\'))\n+        self.folder.invokeFactory(\n+            "Event",\n+            id="event",\n+            title="Foo",\n+            start=datetime(year=2003, month=9, day=18),\n+            end=datetime(year=2003, month=9, day=19),\n+        )\n+        self.assertEqual(self.folder.event.Title(), "Foo")\n+        self.assertTrue(\n+            self.folder.event.start.isoformat().startswith("2003-09-18T00:00:00")\n+        )\n+        self.assertTrue(\n+            self.folder.event.end.isoformat().startswith("2003-09-19T00:00:00")\n+        )\n \n     def testFileCreate(self):\n-        self.folder.invokeFactory(\n-            \'File\', id=\'file\', file=NamedFile(dummy.File()))\n+        self.folder.invokeFactory("File", id="file", file=NamedFile(dummy.File()))\n         self.assertEqual(self.folder.file.file.data, dummy.TEXT)\n \n     def testImageCreate(self):\n-        self.folder.invokeFactory(\n-            \'Image\', id=\'image\', image=NamedImage(dummy.Image()))\n+        self.folder.invokeFactory("Image", id="image", image=NamedImage(dummy.Image()))\n         self.assertEqual(self.folder.image.image.data, dummy.GIF)\n \n     def testFolderCreate(self):\n-        self.folder.invokeFactory(\'Folder\', id=\'folder\', title=\'Foo\',\n-                                  description=\'Bar\')\n-        self.assertEqual(self.folder.folder.Title(), \'Foo\')\n-        self.assertEqual(self.folder.folder.Description(), \'Bar\')\n+        self.folder.invokeFactory("Folder", id="folder", title="Foo", description="Bar")\n+        self.assertEqual(self.folder.folder.Title(), "Foo")\n+        self.assertEqual(self.folder.folder.Description(), "Bar")\n \n     def testLinkCreate(self):\n-        self.folder.invokeFactory(\'Link\', id=\'link\',\n-                                  remoteUrl=\'http://foo.com\', title=\'Foo\')\n-        self.assertEqual(self.folder.link.Title(), \'Foo\')\n-        self.assertEqual(self.folder.link.remoteUrl, \'http://foo.com\')\n+        self.folder.invokeFactory(\n+            "Link", id="link", remoteUrl="http://foo.com", title="Foo"\n+        )\n+        self.assertEqual(self.folder.link.Title(), "Foo")\n+        self.assertEqual(self.folder.link.remoteUrl, "http://foo.com")\n \n     def testNewsItemCreate(self):\n-        self.folder.invokeFactory(\'News Item\', id=\'newsitem\',\n-                                  text=RichTextValue(\'data\'), title=\'Foo\')\n-        self.assertEqual(self.folder.newsitem.text.raw, \'data\')\n-        self.assertEqual(self.folder.newsitem.Title(), \'Foo\')\n+        self.folder.invokeFactory(\n+            "News Item", id="newsitem", text=RichTextValue("data"), title="Foo"\n+        )\n+        self.assertEqual(self.folder.newsitem.text.raw, "data")\n+        self.assertEqual(self.folder.newsitem.Title(), "Foo")\n \n     # Bug tests\n \n     def test_listMetaTypes(self):\n-        self.folder.invokeFactory(\'Document\', id=\'doc\')\n+        self.folder.invokeFactory("Document", id="doc")\n         tool = self.portal.plone_utils\n         doc = self.folder.doc\n-        doc.setTitle(\'title\')\n+        doc.setTitle("title")\n         tool.listMetaTags(doc)\n         # TODO: atm it checks only of the script can be called w/o an error\n \n@@ -81,15 +83,12 @@ class TestFileURL(PloneTestCase.PloneTestCase):\n     # NOTABUG: This is how urlparse.urlparse() works.\n \n     def testFileURLWithHost(self):\n-        self.folder.invokeFactory(\'Link\', id=\'link\',\n-                                  remoteUrl=\'file://foo.com/baz.txt\')\n-        self.assertEqual(self.folder.link.remoteUrl,\n-                         \'file://foo.com/baz.txt\')\n+        self.folder.invokeFactory("Link", id="link", remoteUrl="file://foo.com/baz.txt")\n+        self.assertEqual(self.folder.link.remoteUrl, "file://foo.com/baz.txt")\n \n     def testFileURLNoHost(self):\n-        self.folder.invokeFactory(\'Link\', id=\'link\',\n-                                  remoteUrl=\'file:///foo.txt\')\n-        self.assertEqual(self.folder.link.remoteUrl, \'file:///foo.txt\')\n+        self.folder.invokeFactory("Link", id="link", remoteUrl="file:///foo.txt")\n+        self.assertEqual(self.folder.link.remoteUrl, "file:///foo.txt")\n \n     # DX does not pass url trough urlparse/urlunparse like setRemoteUrl does.\n     # def testFileURLFourSlash(self):\n@@ -115,17 +114,13 @@ def testFileURLNoHost(self):\n \n \n class TestImageProps(PloneTestCase.PloneTestCase):\n-\n     def testImageComputedProps(self):\n         from OFS.Image import Image\n+\n         tag = Image.tag\n-        kw = {\'_title\': \'some title\',\n-              \'_alt\': \'alt tag\',\n-              \'height\': 100,\n-              \'width\': 100}\n+        kw = {"_title": "some title", "_alt": "alt tag", "height": 100, "width": 100}\n         # Wrap object so that ComputedAttribute gets executed.\n         self.ob = dummy.ImageComputedProps(**kw).__of__(self.folder)\n \n-        endswith = (\'alt="alt tag" title="some title" \'\n-                    \'height="100" width="100" />\')\n-        self.assertEqual(tag(self.ob)[-len(endswith):], endswith)\n+        endswith = \'alt="alt tag" title="some title" \' \'height="100" width="100" />\'\n+        self.assertEqual(tag(self.ob)[-len(endswith) :], endswith)\ndiff --git a/news/1178.feature b/news/1178.feature\ndeleted file mode 100644\nindex af995d9515..0000000000\n--- a/news/1178.feature\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Added customisable batch_size for redirects controlpanel\n-[iulianpetchesi]\ndiff --git a/news/3188.bugfix b/news/3188.bugfix\ndeleted file mode 100644\nindex e2d2797361..0000000000\n--- a/news/3188.bugfix\n+++ /dev/null\n@@ -1,4 +0,0 @@\n-Explicitly include zcml of more packages.\n-Reorder the zcml loading.\n-Require ``plone.resource``.\n-[maurits]\ndiff --git a/news/3432.bugfix b/news/3432.bugfix\ndeleted file mode 100644\nindex dd272a593f..0000000000\n--- a/news/3432.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Remove date range search fix, which was done in Products.ZCatalog.\n-[wesleybl]\ndiff --git a/news/3465.feature b/news/3465.feature\ndeleted file mode 100644\nindex 441f09acc9..0000000000\n--- a/news/3465.feature\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Add option to use TinyMCE in inline-mode.\n-[pbauer]\n\\ No newline at end of file\ndiff --git a/news/3477.feature b/news/3477.feature\ndeleted file mode 100644\nindex 78e99ea9a1..0000000000\n--- a/news/3477.feature\n+++ /dev/null\n@@ -1 +0,0 @@\n-Add image srcset\'s configuration to TinyMCE pattern settings [MrTango]\n\\ No newline at end of file\ndiff --git a/news/3487.breaking b/news/3487.breaking\ndeleted file mode 100644\nindex d0f16829e5..0000000000\n--- a/news/3487.breaking\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-Remove Archtypes specific `isIDAutoGenerated` helper.\n-This was dead code not used anywhere in Plone 6.\n-[jensens]\ndiff --git a/news/3492.breaking b/news/3492.breaking\ndeleted file mode 100644\nindex ed0636aaf2..0000000000\n--- a/news/3492.breaking\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-`PloneFolder` was once used with early Archetypes. \n-This code is dead now and got removed.\n-[jensens]\ndiff --git a/news/3493.breaking b/news/3493.breaking\ndeleted file mode 100644\nindex 3962b0397c..0000000000\n--- a/news/3493.breaking\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-`DublinCore.py` was once used with Archetypes. \n-This code is dead now and got removed.\n-[jensens]\ndiff --git a/news/3495.feature b/news/3495.feature\ndeleted file mode 100644\nindex f5f0505020..0000000000\n--- a/news/3495.feature\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Add support for images in default search page.\n-[agitator]\n\\ No newline at end of file\ndiff --git a/news/3500.bugfix b/news/3500.bugfix\ndeleted file mode 100644\nindex cd758e0f65..0000000000\n--- a/news/3500.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-fix `@@iconresolver` to resolve names with "/" correctly (eg. "contenttype/document")\n-[petschki]\ndiff --git a/news/3503.bugfix b/news/3503.bugfix\ndeleted file mode 100644\nindex 6c2deda046..0000000000\n--- a/news/3503.bugfix\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-Bugfix: Resource viewlet cache took not enough factors into account (like base url).\n-[jnsens]\n-\ndiff --git a/news/3510.feature b/news/3510.feature\ndeleted file mode 100644\nindex 927f8ac2fe..0000000000\n--- a/news/3510.feature\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Enable auto include of styles to the TinyMCE formats menu. The file has to be named `tinymce-formats.css` and known by TinyMCE.\n-[agitator]\n\\ No newline at end of file\ndiff --git a/news/3515.bugfix.1 b/news/3515.bugfix.1\ndeleted file mode 100644\nindex 7288e59239..0000000000\n--- a/news/3515.bugfix.1\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Moved ``recently_modified`` and ``recently_published`` skin templates to browser views.\n-[maurits]\ndiff --git a/news/3517.bugfix b/news/3517.bugfix\ndeleted file mode 100644\nindex 8eb484956b..0000000000\n--- a/news/3517.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Fix for quoted search terms\n-[petschki]\ndiff --git a/news/3520.breaking b/news/3520.breaking\ndeleted file mode 100644\nindex 4ceaf83e08..0000000000\n--- a/news/3520.breaking\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Move discussion Key to plone.app.discussion\n-[jensens]\ndiff --git a/news/3522.bugfix b/news/3522.bugfix\ndeleted file mode 100644\nindex f561dd1f72..0000000000\n--- a/news/3522.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Fix robot tests for updated toolbar\n-[petschki]\ndiff --git a/news/3523.feature b/news/3523.feature\ndeleted file mode 100644\nindex 0324e21acb..0000000000\n--- a/news/3523.feature\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Sort addons by title\n-[erral]\ndiff --git a/news/3527.feature b/news/3527.feature\ndeleted file mode 100644\nindex 1f3f1e4420..0000000000\n--- a/news/3527.feature\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Show more information of broken relations\n-[pbauer]\n\\ No newline at end of file\ndiff --git a/news/3528.feature b/news/3528.feature\ndeleted file mode 100644\nindex 6b0488bd07..0000000000\n--- a/news/3528.feature\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Show link to the Volto-migration (@@migrate_to_volto) in the view @@plone-upgrade when the option is available.\n-[pbauer]\n\\ No newline at end of file\ndiff --git a/news/3533.bugfix b/news/3533.bugfix\ndeleted file mode 100644\nindex 635ea51c56..0000000000\n--- a/news/3533.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Fix rendering viewlet.resourceregistries.js when there are missing resources.\n-[petschki]\ndiff --git a/news/3539.bugfix b/news/3539.bugfix\ndeleted file mode 100644\nindex 6a03bb0dca..0000000000\n--- a/news/3539.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Fix tests for updated module federation bundles.\n-[thet]\ndiff --git a/news/3555.bugfix b/news/3555.bugfix\ndeleted file mode 100644\nindex b5a978dc3a..0000000000\n--- a/news/3555.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Remove modal from login and join action.\n-[agitator]\n\\ No newline at end of file\ndiff --git a/news/3558.feature b/news/3558.feature\ndeleted file mode 100644\nindex e7bec0e2a1..0000000000\n--- a/news/3558.feature\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-SVG image as default Plone logo.\n-[petschki]\ndiff --git a/news/5.bugfix b/news/5.bugfix\ndeleted file mode 100644\nindex cddac02902..0000000000\n--- a/news/5.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Make compatible with robotframework 3-5.\n-[maurits]\ndiff --git a/news/6005.bugfix b/news/6005.bugfix\ndeleted file mode 100644\nindex 6e4202a59b..0000000000\n--- a/news/6005.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Updated metadata version to 6005.\n-[maurits]\ndiff --git a/setup.py b/setup.py\nindex e05ac0bbfc..9fc9359096 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,7 +1,7 @@\n from setuptools import setup\n from setuptools import find_packages\n \n-version = \'6.0.0a5.dev0\'\n+version = \'6.0.0a6.dev0\'\n \n \n setup(\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-07-04T12:31:06+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/a70a75c7dbcff4cf2d462ab8f1cae66a1285f0ae

Merge branch 'master' into petschki-resourceregistry-accordion-fix

Files changed:
A news/3567.breaking
A news/3570.feature
A news/6006.bugfix
M CHANGES.rst
M Products/CMFPlone/browser/login/templates/pwreset_form.pt
M Products/CMFPlone/browser/templates/test_rendering_icons.pt
M Products/CMFPlone/controlpanel/browser/actions.pt
M Products/CMFPlone/controlpanel/browser/overview.pt
M Products/CMFPlone/controlpanel/browser/prefsmaintemplate.pt
M Products/CMFPlone/controlpanel/browser/resourceregistry.py
M Products/CMFPlone/controlpanel/browser/usergroups_groupsoverview.pt
M Products/CMFPlone/earlypatches/__init__.py
M Products/CMFPlone/image_scales/tests/test_image_scales_metadata.py
M Products/CMFPlone/profiles/default/metadata.xml
M Products/CMFPlone/resources/browser/resource.py
M Products/CMFPlone/tests/testResourceRegistries.py
M Products/CMFPlone/tests/test_expressions.py
M setup.py
D Products/CMFPlone/earlypatches/expressions.py
D Products/CMFPlone/tests/accesscontrol_sm2.pt

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 0f98f0c248..92e03dc9e6 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -12,6 +12,20 @@ Changelog\n \n .. towncrier release notes start\n \n+6.0.0a6 (2022-06-27)\n+--------------------\n+\n+Bug fixes:\n+\n+\n+- Remove the use of f-strings for translations\n+  [erral] (#3564)\n+- Fix several i18n bugs\n+  [erral] (#3565)\n+- Fix tests for `image_scale` download url update.\n+  [petschki] (#3566)\n+\n+\n 6.0.0a5 (2022-06-24)\n --------------------\n \ndiff --git a/Products/CMFPlone/browser/login/templates/pwreset_form.pt b/Products/CMFPlone/browser/login/templates/pwreset_form.pt\nindex 578b804889..5ca9f46a39 100644\n--- a/Products/CMFPlone/browser/login/templates/pwreset_form.pt\n+++ b/Products/CMFPlone/browser/login/templates/pwreset_form.pt\n@@ -128,6 +128,7 @@\n                                 value="Set my password"\n                                 i18n:attributes="value">\n                                 <span i18n:translate="">Set my password</span>\n+                            </button>\n                         </div>\n                     </div>\n                     <input type="hidden" name="form.submitted" value="1" />\ndiff --git a/Products/CMFPlone/browser/templates/test_rendering_icons.pt b/Products/CMFPlone/browser/templates/test_rendering_icons.pt\nindex 40999ad312..380a067d19 100644\n--- a/Products/CMFPlone/browser/templates/test_rendering_icons.pt\n+++ b/Products/CMFPlone/browser/templates/test_rendering_icons.pt\n@@ -8,7 +8,7 @@\n \n     <style>\n \n-    </style>    \n+    </style>\n \n     <ul class="nav nav-tabs mb-3">\n       <li class="nav-item">\n@@ -54,7 +54,7 @@\n       <tal:icon tal:replace="structure python:icons.tag(\'archive\', tag_class=\'custom-class\', tag_alt=\'foobar\')" />\n     </p>\n \n-    <h2>Registration<h2>\n+    <h2>Registration</h2>\n \n     <p>\n       Todo: List custom Icons\n@@ -88,4 +88,4 @@\n \n </body>\n \n-</html>\n\\ No newline at end of file\n+</html>\ndiff --git a/Products/CMFPlone/controlpanel/browser/actions.pt b/Products/CMFPlone/controlpanel/browser/actions.pt\nindex 808cdf3672..ed8c89431a 100644\n--- a/Products/CMFPlone/controlpanel/browser/actions.pt\n+++ b/Products/CMFPlone/controlpanel/browser/actions.pt\n@@ -52,13 +52,13 @@\n               </button>\n               <a class="pat-plone-modal btn btn-sm btn-primary standalone"\n                 tal:attributes="href string:${action/url}/@@action-form"\n-                ><tal:icon tal:replace="structure python:icons.tag(\'plone-edit\', tag_alt=\'Edit\')" /><span i18n:translate="" class="ms-2" i18n:translate="">Edit</span></a>\n+                ><tal:icon tal:replace="structure python:icons.tag(\'plone-edit\', tag_alt=\'Edit\')" /><span class="ms-2" i18n:translate="">Edit</span></a>\n               <button type="submit" class="btn btn-sm btn-danger destructive" name="delete"\n                 value="Delete"\n                 confirm-message="Delete the action?"\n                 i18n:attributes="value; confirm-message"\n                 onclick="return confirm(this.getAttribute(\'confirm-message\'));" >\n-                <tal:icon tal:replace="structure python:icons.tag(\'plone-delete\', tag_alt=\'Delete\')" /><span i18n:translate="" class="ms-2" i18n:translate="">Delete</span>\n+                <tal:icon tal:replace="structure python:icons.tag(\'plone-delete\', tag_alt=\'Delete\')" /><span class="ms-2" i18n:translate="">Delete</span>\n               </button>\n             </form>\n           </li>\n@@ -68,4 +68,4 @@\n   </div>\n </metal:main>\n </body>\n-</html>\n\\ No newline at end of file\n+</html>\ndiff --git a/Products/CMFPlone/controlpanel/browser/overview.pt b/Products/CMFPlone/controlpanel/browser/overview.pt\nindex f6742cd3fe..502561674b 100644\n--- a/Products/CMFPlone/controlpanel/browser/overview.pt\n+++ b/Products/CMFPlone/controlpanel/browser/overview.pt\n@@ -114,7 +114,7 @@\n                         src="" alt="" class="icon"\n                         tal:attributes="src action/icon;\n                                         alt action/title"\n-                        i18n:attributes="alt action/title">\n+                        i18n:attributes="alt">\n                       <tal:icon tal:condition="not: icon_url"\n                         tal:replace="structure python:icons.tag(action[\'icon\'] or \'plone-controlpanel\', tag_alt=action[\'title\'], tag_class=\'overview-icon\')" />\n                     </div>\ndiff --git a/Products/CMFPlone/controlpanel/browser/prefsmaintemplate.pt b/Products/CMFPlone/controlpanel/browser/prefsmaintemplate.pt\nindex c355e6bef5..1ca009a775 100644\n--- a/Products/CMFPlone/controlpanel/browser/prefsmaintemplate.pt\n+++ b/Products/CMFPlone/controlpanel/browser/prefsmaintemplate.pt\n@@ -43,7 +43,7 @@\n                                     src="" alt="" class="icon"\n                                     tal:attributes="src configlet/icon;\n                                                     alt configlet/title"\n-                                    i18n:attributes="alt configlet/title">\n+                                    i18n:attributes="alt">\n                                 <tal:icon tal:condition="not: icon_url"\n                                           tal:replace="structure python:icons.tag(configlet[\'icon\'] or \'plone-controlpanel\', tag_alt=configlet[\'title\'])" />\n                                 ${configlet/title}\ndiff --git a/Products/CMFPlone/controlpanel/browser/resourceregistry.py b/Products/CMFPlone/controlpanel/browser/resourceregistry.py\nindex 9f1733e2ed..5885e8dc46 100644\n--- a/Products/CMFPlone/controlpanel/browser/resourceregistry.py\n+++ b/Products/CMFPlone/controlpanel/browser/resourceregistry.py\n@@ -67,13 +67,13 @@ def _add(self):\n         bundles = self._bundles\n         if name in bundles:\n             IStatusMessage(self.request).addStatusMessage(\n-                _(f"Record {name} already exists."), "error"\n+                _("Record ${name} already exists.", name=name), "error"\n             )\n             return\n         record = bundles.add(name)\n         self._set_data_from_form(record)\n         IStatusMessage(self.request).addStatusMessage(\n-            _(f"Record {name} created."), "info"\n+            _("Record ${name} created.", name=name), "info"\n         )\n \n     def _update(self):\n@@ -93,7 +93,7 @@ def _update(self):\n                 return\n             if new_name in bundles:\n                 IStatusMessage(self.request).addStatusMessage(\n-                    _(f"Record name {new_name} already taken."), "error"\n+                    _("Record name ${new_name} already taken.", new_name=new_name), "error"\n                 )\n                 return\n             record = bundles[original_name]\n@@ -120,7 +120,7 @@ def _delete(self):\n         bundles = self._bundles\n         if name not in bundles:\n             IStatusMessage(self.request).addStatusMessage(\n-                _(f"Expected record {name} missing."), "error"\n+                _("Expected record ${name} missing.", name=name), "error"\n             )\n             return\n         del bundles[name]\ndiff --git a/Products/CMFPlone/controlpanel/browser/usergroups_groupsoverview.pt b/Products/CMFPlone/controlpanel/browser/usergroups_groupsoverview.pt\nindex e4d2042bac..2bab236cfb 100644\n--- a/Products/CMFPlone/controlpanel/browser/usergroups_groupsoverview.pt\n+++ b/Products/CMFPlone/controlpanel/browser/usergroups_groupsoverview.pt\n@@ -104,7 +104,7 @@\n                    i18n:attributes="summary summary_roles_for_groups;">\n                 <thead tal:condition="search_results">\n                     <tr>\n-                        <th class="text-start" i18n:translate="listingheader_group_name">Group name</th>\n+                        <th class="text-start" i18n:translate="listingheader_group_name">Group Name</th>\n                         <th class="rotate" tal:repeat="portal_role portal_roles"><div tal:content="portal_role" i18n:translate="">Role</div></th>\n                         <th class="rotate alert-danger"><div i18n:translate="listingheader_remove">Remove</div></th>\n                     </tr>\ndiff --git a/Products/CMFPlone/earlypatches/__init__.py b/Products/CMFPlone/earlypatches/__init__.py\nindex 8010715709..c25923d78d 100644\n--- a/Products/CMFPlone/earlypatches/__init__.py\n+++ b/Products/CMFPlone/earlypatches/__init__.py\n@@ -1,3 +1,2 @@\n # misc security fixes\n from Products.CMFPlone.earlypatches import security  # noqa\n-from Products.CMFPlone.earlypatches import expressions  # noqa\ndiff --git a/Products/CMFPlone/earlypatches/expressions.py b/Products/CMFPlone/earlypatches/expressions.py\ndeleted file mode 100644\nindex 59eb58d1ad..0000000000\n--- a/Products/CMFPlone/earlypatches/expressions.py\n+++ /dev/null\n@@ -1,214 +0,0 @@\n-from AccessControl.SecurityManagement import getSecurityManager\n-from AccessControl.ZopeGuards import guarded_getattr\n-from AccessControl.ZopeGuards import guarded_import\n-from OFS.interfaces import ITraversable\n-from Products.PageTemplates import Expressions\n-from zExceptions import NotFound\n-from zExceptions import Unauthorized\n-from zope.traversing.adapters import traversePathElement\n-\n-import os\n-import string\n-import sys\n-import types\n-import warnings\n-\n-\n-# In the \'bobo aware\' Zope traverse methods and functions, various security checks are done.\n-# For example for content items, permission checks are done.\n-# But for non-content, for example a Python module or a dictionary, the checks were originally very lax.\n-# This could be abused.  Now we know that, we want to be as strict as possible.\n-#\n-# But being stricter breaks existing code which worked fine so far,\n-# not knowing that it tried to access code which should have been disallowed.\n-# One thing that goes wrong, is that any skin template that calls context/main_template/macros/master fails,\n-# for example when viewing a revision from CMFEditions.\n-#\n-# So with this hotfix, by necessity we are still lax/forgiving, but you can change this behavior\n-# with an environment variable: STRICT_TRAVERSE_CHECK.\n-# - STRICT_TRAVERSE_CHECK=0 mostly uses the original lax/sloppy checks.\n-#   This sadly needs to be the default.\n-# - STRICT_TRAVERSE_CHECK=1 uses the strict logic.\n-#   When you know what you are doing, you can try this.\n-# - STRICT_TRAVERSE_CHECK=2 first tries the strict logic.\n-#   If this fails, log a warning and then fallback to the original lax checks.\n-#   The idea would be to use this in development or production for a while, to see which code needs a fix.\n-try:\n-    STRICT_TRAVERSE_CHECK = int(os.getenv("STRICT_TRAVERSE_CHECK", 0))\n-except (ValueError, TypeError, AttributeError):\n-    STRICT_TRAVERSE_CHECK = 0\n-# Set of names that start with an underscore but that we want to allow anyway.\n-ALLOWED_UNDERSCORE_NAMES = set([\n-    # dunder name is used in plone.app.caching, and maybe other places\n-    "__name__",\n-    # Zope allows a single underscore to avoid a test failure\n-    "_",\n-    # Special case for plone.protect.\n-    # Fixes a NotFound error when submitting a PloneFormGen form:\n-    # https://github.com/smcmahon/Products.PloneFormGen/pull/229\n-    "_authenticator",\n-])\n-# Some objects we really do not trust, even when you have found a workaround to reach them.\n-DISALLOWED_OBJECTS = [\n-    os,\n-    sys,\n-    # string.Formatter sounds innocent, but can be abused.\n-    string.Formatter,\n-]\n-_orig_boboAwareZopeTraverse = Expressions.boboAwareZopeTraverse\n-\n-\n-def guarded_import_module(base, path_items):\n-    name = path_items[0]\n-    try:\n-        guarded_import(base.__name__, fromlist=path_items)\n-        # guarded_import will do most security checking\n-        # but will not return the imported item itself,\n-        # so we need to call getattr ourselves.\n-        # Actually, not all security checks are done, so we call guarded_getattr.\n-        for name in path_items:\n-            base = guarded_getattr(base, name)\n-    except Unauthorized:\n-        # special case for OFS/zpt/main.zpt which uses\n-        # modules/AccessControl/SecurityManagement/getSecurityManager\n-        # which should have been modules/AccessControl/getSecurityManager\n-        # Fixed in Zope 4.6.1 and 5.2.1.\n-        if name == "SecurityManagement" and path_items[-1] == "getSecurityManager":\n-            return getSecurityManager\n-        # Convert Unauthorized to prevent information disclosures\n-        raise NotFound(name)\n-    except TypeError:\n-        # During testing with security-policy-implementation python\n-        # and verbose-security on, I got this error when an Unauthorized was raised\n-        # for string.Formatter.get_field:\n-        # TypeError: descriptor \'__repr__\' of \'object\' object needs an argument\n-        # This was in the item_repr function of AccessControl.ImplPython.\n-        raise NotFound(name)\n-    if base in DISALLOWED_OBJECTS:\n-        raise NotFound(name)\n-    return base\n-\n-\n-def shared_traverse(base, path_items, request, traverse_method="restrictedTraverse"):\n-    """Shared traverse method for bobo aware zope traverse function and class method.\n-\n-    They are almost exactly the same, and it is irritating and error prone\n-    to change similar code in two places.\n-    """\n-    validate = getSecurityManager().validate\n-    path_items = list(path_items)\n-    path_items.reverse()\n-\n-    while path_items:\n-        name = path_items.pop()\n-\n-        if ITraversable.providedBy(base):\n-            base = getattr(base, traverse_method)(name)\n-        elif isinstance(base, types.ModuleType):\n-            # We should be able to handle the name and all remaining path items at once.\n-            # Use the correct order again.\n-            path_items.append(name)\n-            path_items.reverse()\n-            return guarded_import_module(base, path_items)\n-        else:\n-            found = traversePathElement(base, name, path_items,\n-                                        request=request)\n-\n-            # If traverse_method is something other than\n-            # ``restrictedTraverse`` then traversal is assumed to be\n-            # unrestricted. This emulates ``unrestrictedTraverse``\n-            if traverse_method != \'restrictedTraverse\':\n-                base = found\n-                continue\n-\n-            # Special backwards compatibility exception for the name ``_``,\n-            # which was often used for translation message factories.\n-            # Allow and continue traversal.\n-            if name == \'_\':\n-                warnings.warn(\'Traversing to the name `_` is deprecated \'\n-                              \'and will be removed in Zope 6.\',\n-                              DeprecationWarning)\n-                base = found\n-                continue\n-\n-            if name.startswith(\'_\'):\n-                if name in ALLOWED_UNDERSCORE_NAMES:\n-                    base = found\n-                    continue\n-                # All other names starting with ``_`` are disallowed.\n-                # This emulates what restrictedTraverse does.\n-                raise NotFound(name)\n-\n-            if found in DISALLOWED_OBJECTS:\n-                raise NotFound(name)\n-\n-            if STRICT_TRAVERSE_CHECK:\n-                # traversePathElement doesn\'t apply any Zope security policy,\n-                # so we validate access explicitly here.\n-                try:\n-                    validate(base, base, name, found)\n-                except Unauthorized:\n-                    if STRICT_TRAVERSE_CHECK == 2:\n-                        # only warn\n-                        warnings.warn(\n-                            \'Traversing from {0} to {1} is only allowed because STRICT_TRAVERSE_CHECK=2. \'\n-                            \'Possible security problem.\'.format(object, name))\n-                    else:\n-                        # Convert Unauthorized to prevent information disclosures\n-                        raise NotFound(name)\n-\n-            base = found\n-\n-    return base\n-\n-\n-def boboAwareZopeTraverse(object, path_items, econtext):\n-    """Traverses a sequence of names, first trying attributes then items.\n-\n-    This uses zope.traversing path traversal where possible and interacts\n-    correctly with objects providing OFS.interface.ITraversable when\n-    necessary (bobo-awareness).\n-    """\n-    request = getattr(econtext, \'request\', None)\n-    result = shared_traverse(object, path_items, request)\n-    return result\n-\n-\n-Expressions.boboAwareZopeTraverse = boboAwareZopeTraverse\n-Expressions.ZopePathExpr._TRAVERSER = staticmethod(boboAwareZopeTraverse)\n-\n-# But wait, there is also a BoboAwareZopeTraverse class.\n-from Products.PageTemplates.expression import BoboAwareZopeTraverse\n-from Products.PageTemplates.expression import TrustedBoboAwareZopeTraverse\n-\n-# We do not want to change the trusted version.  It inherits the traverse method\n-# from the untrusted class.  It may be better to give it its own method.\n-# The @classmethod makes this tricky to get right.\n-# But the following line essentially makes a copy of the traverse method\n-# without needing inheritance anymore.\n-TrustedBoboAwareZopeTraverse.traverse = TrustedBoboAwareZopeTraverse.traverse\n-\n-BoboAwareZopeTraverse._orig_traverse = BoboAwareZopeTraverse.traverse\n-\n-def traverse(cls, base, request, path_items):\n-    """See ``zope.app.pagetemplate.engine``."""\n-    # When our patching is done correctly, this only gets called for the\n-    # BoboAwareZopeTraverse class, so cls.traverse_method is always restrictedTraverse.\n-    # But let\'s be careful and just pass the attribute on.\n-    result = shared_traverse(base, path_items, request, traverse_method=cls.traverse_method)\n-    return result\n-\n-BoboAwareZopeTraverse.traverse = classmethod(traverse)\n-\n-# The TrustedBoboAwareZopeTraverse and (untrusted) BoboAwareZopeTraverse class have a problem:\n-# They have a "traverse_method" attribute, but the "traverse" method\n-# calls "cls.traverseMethod" instead, so this fails.\n-# This may mean these classes do not get called anymore, except in test_expressions.py.\n-name1 = "traverse_method"\n-name2 = "traverseMethod"\n-# First do the trusted class, because it inherits from the untrusted class.\n-# Otherwise the trusted class would have traverse_method=unrestrictedTraverse\n-# and it would inherit traverseMethod=restrictedTraverse.\n-for klass in (TrustedBoboAwareZopeTraverse, BoboAwareZopeTraverse):\n-    if hasattr(klass, name1) and not hasattr(klass, name2):\n-        setattr(klass, name2, getattr(klass, name1))\ndiff --git a/Products/CMFPlone/image_scales/tests/test_image_scales_metadata.py b/Products/CMFPlone/image_scales/tests/test_image_scales_metadata.py\nindex be656d06ba..0cc5c2c1e0 100644\n--- a/Products/CMFPlone/image_scales/tests/test_image_scales_metadata.py\n+++ b/Products/CMFPlone/image_scales/tests/test_image_scales_metadata.py\n@@ -91,8 +91,7 @@ def test_field_adapter_does_not_return_larger_scales(self):\n         self.assertEqual(scales["width"], 900)\n         self.assertEqual(scales["height"], 900)\n         download = scales["download"]\n-        images_url = image.absolute_url() + "/@@images"\n-        self.assertTrue(download.startswith(f"{images_url}/image-900-"))\n+        self.assertTrue(download.startswith("@@images/image-900-"))\n         self.assertTrue(download.endswith(".jpeg"))\n         scales = scales["scales"]\n         # larger and huge should not be in here: these scales would return the same\n@@ -104,7 +103,7 @@ def test_field_adapter_does_not_return_larger_scales(self):\n         preview = scales["preview"]\n         self.assertEqual(preview["width"], 400)\n         self.assertEqual(preview["height"], 400)\n-        self.assertTrue(preview["download"].startswith(f"{images_url}/image-400-"))\n+        self.assertTrue(preview["download"].startswith("@@images/image-400-"))\n \n     def test_content_adapter_return_proper_scales(self):\n         res = queryMultiAdapter((self.image, self.request), IImageScalesAdapter)()\ndiff --git a/Products/CMFPlone/profiles/default/metadata.xml b/Products/CMFPlone/profiles/default/metadata.xml\nindex 7c4b52aa2d..2ae4b9ea65 100644\n--- a/Products/CMFPlone/profiles/default/metadata.xml\n+++ b/Products/CMFPlone/profiles/default/metadata.xml\n@@ -1,4 +1,4 @@\n <?xml version="1.0"?>\n <metadata>\n-  <version>6005</version>\n+  <version>6006</version>\n </metadata>\ndiff --git a/Products/CMFPlone/resources/browser/resource.py b/Products/CMFPlone/resources/browser/resource.py\nindex bc42561754..14d0412a26 100644\n--- a/Products/CMFPlone/resources/browser/resource.py\n+++ b/Products/CMFPlone/resources/browser/resource.py\n@@ -109,13 +109,48 @@ def update(self):\n         request_enabled_bundles, request_disabled_bundles = self._request_bundles()\n \n         # collect names\n-        js_names = {name for name, rec in records.items() if rec.jscompilation}\n-        css_names = {name for name, rec in records.items() if rec.csscompilation}\n-        all_names = {\n+        js_names = [name for name, rec in records.items() if rec.jscompilation]\n+        css_names = [name for name, rec in records.items() if rec.csscompilation]\n+        all_names = [\n             name\n             for name, rec in records.items()\n             if rec.jscompilation or rec.csscompilation\n-        }\n+        ]\n+\n+        def check_dependencies(bundle_name, depends, bundles):\n+            # "depends" can be a comma separated string of dependent\n+            # bundle names\n+            depend_names = depends.split(",") if depends else []\n+            valid_dependencies = []\n+\n+            for name in depend_names:\n+                if name in bundles:\n+                    valid_dependencies.append(name)\n+                    continue\n+                if name in all_names:\n+                    # ignore dependency on bundle outside "bundles"\n+                    continue\n+\n+                msg = f"Bundle \'{bundle_name}\' has a non existing dependeny on \'{name}\'. "\n+\n+                if name in GRACEFUL_DEPENDENCY_REWRITE:\n+                    # gracefully rewrite old bundle names\n+                    graceful_depends = GRACEFUL_DEPENDENCY_REWRITE[name]\n+                    logger.error(\n+                            msg\n+                            + f"Bundle dependency graceful rewritten to \'{graceful_depends}\' "\n+                            + "Fallback will be removed in Plone 7."\n+                        )\n+                    valid_dependencies.append(graceful_depends)\n+                    continue\n+\n+                # if the dependency does not exist, skip the bundle\n+                logger.error(\n+                    msg + "Bundle ignored - This may break your site!"\n+                )\n+                return "__broken__"\n+\n+            return valid_dependencies\n \n         # register\n         for name, record in records.items():\n@@ -126,24 +161,9 @@ def update(self):\n             include = include and name not in request_disabled_bundles\n \n             if record.jscompilation:\n-                depends = record.depends or ""\n-                if depends and depends not in js_names:\n-                    if depends in all_names:\n-                        depends = None\n-                    else:\n-                        msg = f"Bundle \'{name}\' has a non existing dependeny on \'{record.depends}\'. "\n-                        if depends not in GRACEFUL_DEPENDENCY_REWRITE:\n-                            logger.error(\n-                                msg + "Bundle ignored (JS) - This may break your site!"\n-                            )\n-                            continue\n-                        graceful_depends = GRACEFUL_DEPENDENCY_REWRITE[depends]\n-                        logger.error(\n-                            msg\n-                            + f"Bundle dependency (JS) graceful rewritten to \'{graceful_depends}\' "\n-                            + "Fallback will be removed in Plone 7."\n-                        )\n-                        depends = graceful_depends\n+                depends = check_dependencies(name, record.depends, js_names)\n+                if depends == "__broken__":\n+                    continue\n                 external = record.jscompilation.startswith("http")\n                 PloneScriptResource(\n                     context=self.context,\n@@ -162,24 +182,9 @@ def update(self):\n                     integrity=not external,\n                 )\n             if record.csscompilation:\n-                depends = record.depends or ""\n-                if depends and depends not in css_names:\n-                    if depends in all_names:\n-                        depends = None\n-                    else:\n-                        msg = f"Bundle \'{name}\' has a non existing dependeny on \'{record.depends}\'. "\n-                        if depends not in GRACEFUL_DEPENDENCY_REWRITE:\n-                            logger.error(\n-                                msg + "Bundle ignored (CSS) - This may break your site!"\n-                            )\n-                            continue\n-                        graceful_depends = GRACEFUL_DEPENDENCY_REWRITE[depends]\n-                        logger.error(\n-                            msg\n-                            + f"Bundle dependency (CSS) graceful rewritten to \'{graceful_depends}\' "\n-                            + "Fallback will be removed in Plone 7."\n-                        )\n-                        depends = graceful_depends\n+                depends = check_dependencies(name, record.depends, css_names)\n+                if depends == "__broken__":\n+                    continue\n                 external = record.csscompilation.startswith("http")\n                 PloneStyleResource(\n                     context=self.context,\ndiff --git a/Products/CMFPlone/tests/accesscontrol_sm2.pt b/Products/CMFPlone/tests/accesscontrol_sm2.pt\ndeleted file mode 100644\nindex 6be7a66cdd..0000000000\n--- a/Products/CMFPlone/tests/accesscontrol_sm2.pt\n+++ /dev/null\n@@ -1 +0,0 @@\n-<span tal:condition="nocall:modules/AccessControl/SecurityManagement/getSecurityManager">getSecurityManager is still allowed</span>\ndiff --git a/Products/CMFPlone/tests/testResourceRegistries.py b/Products/CMFPlone/tests/testResourceRegistries.py\nindex e2113462aa..4ad904ce0c 100644\n--- a/Products/CMFPlone/tests/testResourceRegistries.py\n+++ b/Products/CMFPlone/tests/testResourceRegistries.py\n@@ -159,6 +159,31 @@ def test_remove_bundle_on_request_with_subrequest(self):\n         result = scripts.render()\n         self.assertNotIn("http://test.foo/test.css", result)\n \n+    def test_bundle_depends(self):\n+        bundle = self._make_test_bundle()\n+        bundle.depends = "plone"\n+        view = ScriptsView(self.app, self.app.REQUEST, None, None)\n+        view.update()\n+        results = view.render()\n+        self.assertIn("http://foo.bar/foobar.js", results)\n+\n+    def test_bundle_depends_on_multiple(self):\n+        bundle = self._make_test_bundle()\n+        bundle.depends = "plone,eventedit"\n+        view = ScriptsView(self.app, self.app.REQUEST, None, None)\n+        view.update()\n+        results = view.render()\n+        self.assertIn("http://foo.bar/foobar.js", results)\n+\n+    def test_bundle_depends_on_missing(self):\n+        bundle = self._make_test_bundle()\n+        bundle.depends = "nonexistsinbundle"\n+        view = ScriptsView(self.app, self.app.REQUEST, None, None)\n+        view.update()\n+        results = view.render()\n+        # bundle should be skipped when rendering\n+        self.assertNotIn("http://foo.bar/foobar.js", results)\n+\n \n class TestStylesViewlet(PloneTestCase.PloneTestCase):\n     def test_styles_viewlet(self):\ndiff --git a/Products/CMFPlone/tests/test_expressions.py b/Products/CMFPlone/tests/test_expressions.py\nindex 44304311b1..9d950fae46 100644\n--- a/Products/CMFPlone/tests/test_expressions.py\n+++ b/Products/CMFPlone/tests/test_expressions.py\n@@ -86,18 +86,6 @@ def test_template_bad3(self):\n         with self.assertRaises(NotFound):\n             template()\n \n-    def test_template_name(self):\n-        # Allow accessing __name__ in a skin template or TTW template.\n-        template = self._makeOne("options_view_name.pt")\n-        # Pass view in the options.\n-        self.assertIn("dummy-view", template(view=DummyView()))\n-\n-    def test_template_authenticator(self):\n-        # Allow accessing _authenticator in a skin template or TTW template.\n-        template = self._makeOne("options_authenticator.pt")\n-        # Pass view in the options.\n-        self.assertIn("secret", template(view=DummyView()))\n-\n     def test_template_single_underscore(self):\n         # Allow accessing \'_\' in a skin template or TTW template.\n         # In the merge of the hotfix, Zope allows this, to avoid a test failure.\n@@ -117,13 +105,6 @@ def test_template_accesscontrol_sm(self):\n         template = self._makeOne("accesscontrol_sm.pt")\n         self.assertIn("getSecurityManager is allowed", template())\n \n-    def test_template_accesscontrol_sm2(self):\n-        # Zope main.zpt uses modules/AccessControl/SecurityManagement/getSecurityManager\n-        # which should have been modules/AccessControl/getSecurityManager.\n-        # So we need a special case for it, otherwise the ZMI is totally inaccessible.\n-        template = self._makeOne("accesscontrol_sm2.pt")\n-        self.assertIn("getSecurityManager is still allowed", template())\n-\n     def test_template_accesscontrol_direct(self):\n         # Via AccessControl you can access too much.\n         template = self._makeOne("accesscontrol_direct.pt")\n@@ -184,18 +165,6 @@ def test_traverse_function_hacked_names(self):\n         result = trusted_traverse_function(view, ("Formatter_hack",), None)\n         self.assertEqual(result, string.Formatter)\n \n-    def test_traverse_function_name(self):\n-        # We allow access to __name__ always as a special case.\n-        view = DummyView()\n-        self.assertEqual(traverse_function(view, ("__name__",), None), "dummy-view")\n-        self.assertEqual(trusted_traverse_function(view, ("__name__",), None), "dummy-view")\n-\n-    def test_traverse_function_authenticator(self):\n-        # We allow access to _authenticator always as a special case.\n-        view = DummyView()\n-        self.assertEqual(traverse_function(view, ("_authenticator",), None), "secret")\n-        self.assertEqual(trusted_traverse_function(view, ("_authenticator",), None), "secret")\n-\n     def test_traverse_function_single_underscore(self):\n         # We allow access to \'_\' always as a special case.\n         view = DummyView()\n@@ -219,13 +188,6 @@ def test_traverse_function_accesscontrol_getSecurityManager(self):\n         self.assertEqual(traverse_function(AccessControl, ("getSecurityManager",), None), AccessControl.getSecurityManager)\n         self.assertEqual(trusted_traverse_function(AccessControl, ("getSecurityManager",), None), AccessControl.getSecurityManager)\n \n-    def test_traverse_function_accesscontrol_getSecurityManager2(self):\n-        # Zope main.zpt uses modules/AccessControl/SecurityManagement/getSecurityManager\n-        # which should have been modules/AccessControl/getSecurityManager.\n-        # So we need a special case for it, otherwise the ZMI is totally inaccessible.\n-        self.assertEqual(traverse_function(AccessControl, ("SecurityManagement", "getSecurityManager"), None), AccessControl.getSecurityManager)\n-        self.assertEqual(trusted_traverse_function(AccessControl, ("SecurityManagement", "getSecurityManager",), None), AccessControl.getSecurityManager)\n-\n     def test_traverse_function_accesscontrol_direct(self):\n         with self.assertRaises(NotFound):\n             traverse_function(AccessControl, ("SecurityManagement",), None)\n@@ -271,12 +233,6 @@ def test_traverse_class_formatter_get_field(self):\n         result = TrustedTraverseClass.traverse(string, None, ("Formatter", "get_field"))\n         self.assertEqual(result, string.Formatter.get_field)\n \n-    def test_traverse_class_name(self):\n-        # We allow access to __name__ always as a special case.\n-        view = DummyView()\n-        self.assertEqual(TraverseClass.traverse(view, None, ("__name__",)), "dummy-view")\n-        self.assertEqual(TrustedTraverseClass.traverse(view, None, ("__name__",)), "dummy-view")\n-\n     def test_traverse_class_content(self):\n         content = DummyContent("dummy")\n         self.assertEqual(TraverseClass.traverse(content, None, ("public",))(), "I am public")\n@@ -294,10 +250,6 @@ def test_traverse_class_accesscontrol_getSecurityManager(self):\n         self.assertEqual(TraverseClass.traverse(AccessControl, None, ("getSecurityManager",)), AccessControl.getSecurityManager)\n         self.assertEqual(TrustedTraverseClass.traverse(AccessControl, None, ("getSecurityManager",)), AccessControl.getSecurityManager)\n \n-    def test_traverse_class_accesscontrol_getSecurityManager2(self):\n-        self.assertEqual(TraverseClass.traverse(AccessControl, None, ("SecurityManagement", "getSecurityManager",)), AccessControl.getSecurityManager)\n-        self.assertEqual(TrustedTraverseClass.traverse(AccessControl, None, ("SecurityManagement", "getSecurityManager",)), AccessControl.getSecurityManager)\n-\n     def test_traverse_class_accesscontrol_direct(self):\n         with self.assertRaises(NotFound):\n             TraverseClass.traverse(AccessControl, None, ("SecurityManagement",))\ndiff --git a/news/3567.breaking b/news/3567.breaking\nnew file mode 100644\nindex 0000000000..ac55a10c75\n--- /dev/null\n+++ b/news/3567.breaking\n@@ -0,0 +1,5 @@\n+Removed our expressions patch.\n+This was a patch to avoid some too strict checks by Zope / Products.PageTemplates.\n+But in Plone 6 it should be fine to be stricter.\n+The ``STRICT_TRAVERSE_CHECK`` environment variable is no longer read.\n+[maurits]\ndiff --git a/news/3570.feature b/news/3570.feature\nnew file mode 100644\nindex 0000000000..7b897a9ed6\n--- /dev/null\n+++ b/news/3570.feature\n@@ -0,0 +1,2 @@\n+Resource bundle dependency on multiple comma separated names.\n+[petschki]\ndiff --git a/news/6006.bugfix b/news/6006.bugfix\nnew file mode 100644\nindex 0000000000..9496a64339\n--- /dev/null\n+++ b/news/6006.bugfix\n@@ -0,0 +1,2 @@\n+Updated metadata version to 6006.\n+[maurits]\ndiff --git a/setup.py b/setup.py\nindex 9fc9359096..07528c42cc 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,7 +1,7 @@\n from setuptools import setup\n from setuptools import find_packages\n \n-version = \'6.0.0a6.dev0\'\n+version = \'6.0.0b1.dev0\'\n \n \n setup(\n@@ -108,7 +108,7 @@\n         \'setuptools>=36.2\',\n         \'transaction\',\n         \'plone.autoinclude\',\n-        \'webresource\',\n+        \'webresource>=1.1\',\n         \'ZODB3\',\n         \'Zope[wsgi] >= 4.0\',\n         \'zope.app.locales >= 3.6.0\',\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-07-04T12:37:59+02:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/2c60c5d0b28187146b86033133e199cd09b2361d

no async

Files changed:
M Products/CMFPlone/controlpanel/browser/resourceregistry.pt

b'diff --git a/Products/CMFPlone/controlpanel/browser/resourceregistry.pt b/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\nindex 9bc4f3d53d..52ceadb870 100644\n--- a/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\n+++ b/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\n@@ -157,7 +157,7 @@\n    </div>\n    <script>\n      /* collapse accordion via script here, so that it stays open when JS is disabled */\n-     window.addEventListener(\'DOMContentLoaded\', async (event) => {\n+     window.addEventListener(\'DOMContentLoaded\', (event) => {\n       document.querySelector(".alert.js-errors").style.display = "none";\n       document.querySelectorAll(".accordion-item:not(.active) .accordion-button").forEach(el => el.classList.add("collapsed"));\n       document.querySelectorAll(".accordion-item:not(.active) .accordion-collapse").forEach(el => el.classList.remove("show"));\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-07-04T14:02:16+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/c6e937f73654750a50006c5cba467f08f59059ac

Merge pull request #3560 from plone/petschki-resourceregistry-accordion-fix

Resource registry accordions initially open

Files changed:
A news/3560.feature
M Products/CMFPlone/controlpanel/browser/resourceregistry.pt

b'diff --git a/Products/CMFPlone/controlpanel/browser/resourceregistry.pt b/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\nindex e28c4da3b8..52ceadb870 100644\n--- a/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\n+++ b/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\n@@ -22,6 +22,15 @@\n   </header>\n \n    <div id="content-core">\n+    <div class="portalMessage statusmessage statusmessage-error alert alert-danger js-errors">\n+        <tal:icon tal:replace="structure python:icons.tag(\'plone-statusmessage-error\', tag_alt=\'\', tag_class=\'statusmessage-icon mb-1 me-2\')" />\n+        <strong i18n:translate="">Javascript disabled or error(s) occurred</strong>\n+        <span class="content"\n+              i18n:translate="">\n+            If this message persists, a Javascript Error occurred within the\n+            resources below.\n+        </span>\n+    </div>\n     <div tal:condition="python:view.global_debug_mode()"\n          class="portalMessage statusmessage statusmessage-info alert alert-info"\n          role="alert">\n@@ -64,8 +73,8 @@\n       </div>\n     </form>\n     <div class="accordion" id="accordionRR" tal:define="dummy python:view.process_form()">\n-      <div class="accordion-item "\n-           tal:repeat="bundle python:view.bundles_data">\n+      <tal:block tal:repeat="bundle python:view.bundles_data">\n+      <div class="accordion-item ${python:\'active\' if bundle[\'name\'] == request.form.get(\'name\', None) else \'\'}">\n            <h2 class="accordion-header" id="heading-${python:bundle[\'safe_name\']}">\n             <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-${python:bundle[\'safe_name\']}" aria-expanded="false" aria-controls="collapse-${python:bundle[\'safe_name\']}">\n               <span tal:condition="python:bundle[\'name\'] and bundle[\'enabled\']" i18n:translate="" class="me-2"><tal:icon tal:replace="structure python:icons.tag(\'file-check\', tag_alt=\'Enabled bundle\')" /></span>\n@@ -75,7 +84,7 @@\n               <strong tal:condition="python:not bundle[\'name\']" i18n:translate="">Add new bundle</strong>\n             </button>\n           </h2>\n-          <div id="collapse-${python:bundle[\'safe_name\']}" class="accordion-collapse ${python:\'\' if bundle[\'name\'] == request.form.get(\'name\', None) else \'collapse\'}" aria-labelledby="heading${python:bundle[\'safe_name\']}" data-bs-parent="#accordionRR">\n+          <div id="collapse-${python:bundle[\'safe_name\']}" class="accordion-collapse collapse show" aria-labelledby="heading${python:bundle[\'safe_name\']}" data-bs-parent="#accordionRR">\n             <div class="accordion-body">\n               <form method="post" action="${python:context.absolute_url()}/@@resourceregistry-controlpanel">\n                 <input type="hidden" name="original_name" value="${python:bundle[\'name\']}" />\n@@ -126,6 +135,7 @@\n           </div>\n         </div>\n       </div>\n+      </tal:block>\n     </div>\n     <div class="mt-3">\n       <h2 i18n:translate="">Additional Resources</h2>\n@@ -145,6 +155,14 @@\n       </dl>\n     </div>\n    </div>\n+   <script>\n+     /* collapse accordion via script here, so that it stays open when JS is disabled */\n+     window.addEventListener(\'DOMContentLoaded\', (event) => {\n+      document.querySelector(".alert.js-errors").style.display = "none";\n+      document.querySelectorAll(".accordion-item:not(.active) .accordion-button").forEach(el => el.classList.add("collapsed"));\n+      document.querySelectorAll(".accordion-item:not(.active) .accordion-collapse").forEach(el => el.classList.remove("show"));\n+    });\n+   </script>\n </metal:main>\n \n </body>\ndiff --git a/news/3560.feature b/news/3560.feature\nnew file mode 100644\nindex 0000000000..4bdfe62cfb\n--- /dev/null\n+++ b/news/3560.feature\n@@ -0,0 +1,2 @@\n+Initially open accordions in resource registry. Hide via JS when no errors occur.\n+[petschki]\n'

