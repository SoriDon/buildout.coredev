Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2019-02-16T16:37:07+01:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.app.multilingual/commit/e9873ec9bd75e0e53c125c837c013ae1a9204ad1

Add TG attribute to site root on setup

Files changed:
M CHANGES.rst
M src/plone/app/multilingual/setuphandlers.py
M src/plone/app/multilingual/tests/test_setup.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 49d8b58e..2f034678 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -76,6 +76,10 @@ Bug fixes:\n - Fixed tests now that Catalan has translated \xe2\x80\x98assets\xe2\x80\x99 into \xe2\x80\x98recursos\xe2\x80\x99.\n   [maurits]\n \n+- Run addAttributeTG for the site root when installing. This prevents\n+  triggering plone.protect.\n+  [jaroel]\n+\n \n 5.2.0 (2018-04-04)\n ------------------\ndiff --git a/src/plone/app/multilingual/setuphandlers.py b/src/plone/app/multilingual/setuphandlers.py\nindex 56406645..4561f7b6 100644\n--- a/src/plone/app/multilingual/setuphandlers.py\n+++ b/src/plone/app/multilingual/setuphandlers.py\n@@ -1,6 +1,8 @@\n # -*- coding: utf-8 -*-\n from logging import getLogger\n from plone.app.multilingual.browser.setup import SetupMultilingualSite\n+from plone.app.multilingual.interfaces import ITranslatable\n+from plone.app.multilingual.itg import addAttributeTG\n from Products.CMFPlone.interfaces import INonInstallable\n from Products.CMFPlone.utils import getToolByName\n from zope.component.hooks import getSite\n@@ -42,6 +44,9 @@ def step_default_various(context):\n     portal = context.getSite()\n     enable_translatable_behavior(portal)\n \n+    # Add the attribute to the site root now so plone.protect won\'t cry.\n+    addAttributeTG(portal, None)\n+\n \n def enable_translatable_behavior(portal):\n     types_tool = portal.portal_types\ndiff --git a/src/plone/app/multilingual/tests/test_setup.py b/src/plone/app/multilingual/tests/test_setup.py\nindex a288059a..7c9eca12 100644\n--- a/src/plone/app/multilingual/tests/test_setup.py\n+++ b/src/plone/app/multilingual/tests/test_setup.py\n@@ -1,7 +1,11 @@\n # -*- coding: utf-8 -*-\n+from Acquisition import aq_base\n from plone.app.multilingual.browser.setup import SetupMultilingualSite\n from plone.app.multilingual.browser.vocabularies import AllContentLanguageVocabulary  # noqa: E501\n+from plone.app.multilingual.interfaces import ATTRIBUTE_NAME\n from plone.app.multilingual.interfaces import IPloneAppMultilingualInstalled\n+from plone.app.multilingual.interfaces import ITG\n+from plone.app.multilingual.interfaces import ITranslatable\n from plone.app.multilingual.testing import PAM_INTEGRATION_PRESET_TESTING\n from plone.app.multilingual.testing import PAM_INTEGRATION_TESTING\n from Products.CMFCore.utils import getToolByName\n@@ -27,6 +31,14 @@ def test_single_language(self):\n         """Only one language is set."""\n         self.assertEqual(len(self.languages), 1)\n \n+    def test_portal_has_tg_attribute(self):\n+        """The site root should have the TG attribute set after installing"""\n+        # Check the attribute\n+        tg_attribute = getattr(aq_base(self.portal), ATTRIBUTE_NAME, None)\n+        self.assertIsNotNone(tg_attribute)\n+        # Which should allow adapting to ITG.\n+        ITG(self.portal)\n+\n     def test_no_languagefolder_created(self):\n         """On a single language no folder creation is done."""\n         portal_objects = self.portal.objectIds()\n'

Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2019-03-03T16:19:06+01:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.app.multilingual/commit/411fedc4f94640bce42e76ffdcfef8bf7d91571a

Check for ITranslatable

Files changed:
M src/plone/app/multilingual/tests/test_menu.py

b"diff --git a/src/plone/app/multilingual/tests/test_menu.py b/src/plone/app/multilingual/tests/test_menu.py\nindex 2a92bf99..59866047 100644\n--- a/src/plone/app/multilingual/tests/test_menu.py\n+++ b/src/plone/app/multilingual/tests/test_menu.py\n@@ -1,5 +1,5 @@\n # -*- coding: utf-8 -*-\n-from plone.app.multilingual.interfaces import IPloneAppMultilingualInstalled\n+from plone.app.multilingual.interfaces import IPloneAppMultilingualInstalled, ITranslatable\n from plone.app.multilingual.testing import PAM_FUNCTIONAL_TESTING\n from plone.app.testing import SITE_OWNER_NAME\n from plone.app.testing import SITE_OWNER_PASSWORD\n@@ -45,6 +45,7 @@ def test_menu_does_not_contain_translated_entries(self):\n         self.assertNotIn('translate_into_ca', self.browser.contents)\n \n     def test_menu_does_not_appear_without_ITranslatable(self):\n+        self.assertFalse(ITranslatable.providedBy(self.portal))\n         self.browser.open(self.portal.absolute_url() + '/folder_listing')\n         self.assertNotIn('Translate', self.browser.contents)\n \n"

Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2019-03-03T16:45:21+01:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.app.multilingual/commit/c3fd79e4f77d7436db60435ecba647645cef0fde

Fix stuff

Files changed:
M src/plone/app/multilingual/browser/setup.py
M src/plone/app/multilingual/setuphandlers.py

b"diff --git a/src/plone/app/multilingual/browser/setup.py b/src/plone/app/multilingual/browser/setup.py\nindex 558c4ea7..c4d393ff 100644\n--- a/src/plone/app/multilingual/browser/setup.py\n+++ b/src/plone/app/multilingual/browser/setup.py\n@@ -266,7 +266,7 @@ def setupLanguageSwitcher(self):\n \n         if 'language-switcher' not in site.view_methods:\n             methods = site.view_methods\n-            site.view_methods = methods + ('language-switcher', )\n+            site.view_methods = list(methods) + ['language-switcher', ]\n             site.default_view = 'language-switcher'\n             self.context.reindexObject()\n \ndiff --git a/src/plone/app/multilingual/setuphandlers.py b/src/plone/app/multilingual/setuphandlers.py\nindex 4561f7b6..4b28e555 100644\n--- a/src/plone/app/multilingual/setuphandlers.py\n+++ b/src/plone/app/multilingual/setuphandlers.py\n@@ -55,6 +55,8 @@ def enable_translatable_behavior(portal):\n     all_ftis = types_tool.listTypeInfo()\n     dx_ftis = [x for x in all_ftis if getattr(x, 'behaviors', False)]\n     for fti in dx_ftis:\n+        if fti.getId() == 'Plone Site':\n+            continue\n \n         # Enable translatable behavior for all types\n         behaviors = list(fti.behaviors)\n"

Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2019-03-05T16:33:17+01:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.app.multilingual/commit/aeab7394ad8ac54050bc961d84c3702e29d7ab5d

We don't make the site root translatable by default.

Files changed:
M src/plone/app/multilingual/tests/test_setup.py

b'diff --git a/src/plone/app/multilingual/tests/test_setup.py b/src/plone/app/multilingual/tests/test_setup.py\nindex 7c9eca12..c656e44a 100644\n--- a/src/plone/app/multilingual/tests/test_setup.py\n+++ b/src/plone/app/multilingual/tests/test_setup.py\n@@ -33,11 +33,8 @@ def test_single_language(self):\n \n     def test_portal_has_tg_attribute(self):\n         """The site root should have the TG attribute set after installing"""\n-        # Check the attribute\n         tg_attribute = getattr(aq_base(self.portal), ATTRIBUTE_NAME, None)\n         self.assertIsNotNone(tg_attribute)\n-        # Which should allow adapting to ITG.\n-        ITG(self.portal)\n \n     def test_no_languagefolder_created(self):\n         """On a single language no folder creation is done."""\n'

Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2019-06-21T21:17:47+02:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.app.multilingual/commit/e9e8ba29718623eee816cb8931ec26831f95b088

Merge remote-tracking branch 'origin/master' into dxcontainer-siteroot

Files changed:
M CHANGES.rst
M setup.py
M src/plone/app/multilingual/browser/setup.py
M src/plone/app/multilingual/browser/stylesheet/multilingual.css
M src/plone/app/multilingual/content/lif.py
M src/plone/app/multilingual/dx/schemaeditor.py
M src/plone/app/multilingual/interfaces.py
M src/plone/app/multilingual/profiles/default/types/LIF.xml
M src/plone/app/multilingual/profiles/default/types/LRF.xml
M src/plone/app/multilingual/setuphandlers.py
M src/plone/app/multilingual/testing.py
M src/plone/app/multilingual/tests/test_lif.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 2f034678..8ce29263 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -8,6 +8,35 @@ Changelog\n \n .. towncrier release notes start\n \n+5.3.5 (2019-05-21)\n+------------------\n+\n+Bug fixes:\n+\n+\n+- Setting named behavior instead of dotted on fti during install. [iham] (#345)\n+\n+\n+5.3.4 (2019-05-04)\n+------------------\n+\n+Bug fixes:\n+\n+\n+- Moved to named behaviors. [iham] (#342)\n+\n+\n+5.3.3 (2019-04-29)\n+------------------\n+\n+Bug fixes:\n+\n+\n+- Fix toolbar icon\n+  [agitator] (#338)\n+- Fix DeprecationWarning ``ILanguageSchema`` was moved to ``plone.i18n``. [jensens] (#339)\n+\n+\n 5.3.2 (2019-02-08)\n ------------------\n \ndiff --git a/setup.py b/setup.py\nindex 75d88f4e..54563329 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -5,7 +5,7 @@\n import os\n \n \n-version = \'5.3.3.dev0\'\n+version = \'5.3.6.dev0\'\n \n setup(\n     name=\'plone.app.multilingual\',\ndiff --git a/src/plone/app/multilingual/browser/setup.py b/src/plone/app/multilingual/browser/setup.py\nindex c4d393ff..0b7b4990 100644\n--- a/src/plone/app/multilingual/browser/setup.py\n+++ b/src/plone/app/multilingual/browser/setup.py\n@@ -281,6 +281,6 @@ def ensure_translatable(self, type_):\n \n         if IDexterityFTI.providedBy(fti):\n             behaviors = list(fti.behaviors)\n-            behaviors.append(IDexterityTranslatable.__identifier__)\n+            behaviors.append(\'plone.translatable\')\n             behaviors = tuple(set(behaviors))\n             fti._updateProperty(\'behaviors\', behaviors)\ndiff --git a/src/plone/app/multilingual/browser/stylesheet/multilingual.css b/src/plone/app/multilingual/browser/stylesheet/multilingual.css\nindex a737487c..0cf9f640 100644\n--- a/src/plone/app/multilingual/browser/stylesheet/multilingual.css\n+++ b/src/plone/app/multilingual/browser/stylesheet/multilingual.css\n@@ -71,7 +71,7 @@ a.contentmenuflags img {\n     margin-bottom: 2pt;\n }\n \n-.plone-icon-contentmenu-multilingual:before { content: \'\\e81A\'; } /* \'\xee\xa0\xa0\' */\n+.toolbar-menu-icon.icon-plone-contentmenu-multilingual:before { content: \'\\E81A\'; } /* \'\xee\xa0\xb6\' */\n \n #translations-overview td {\n     line-height: 1;\ndiff --git a/src/plone/app/multilingual/content/lif.py b/src/plone/app/multilingual/content/lif.py\nindex e78ad21f..3b265b4b 100644\n--- a/src/plone/app/multilingual/content/lif.py\n+++ b/src/plone/app/multilingual/content/lif.py\n@@ -3,6 +3,8 @@\n from Products.CMFCore.utils import getToolByName\n from zope.component.hooks import getSite\n \n+from plone.dexterity.content import Container\n+\n \n def connect_with_others(ob, event):\n     pc = getToolByName(getSite(), \'portal_catalog\')\ndiff --git a/src/plone/app/multilingual/dx/schemaeditor.py b/src/plone/app/multilingual/dx/schemaeditor.py\nindex 823eee4c..a431a6fe 100644\n--- a/src/plone/app/multilingual/dx/schemaeditor.py\n+++ b/src/plone/app/multilingual/dx/schemaeditor.py\n@@ -52,9 +52,15 @@ def _write_languageindependent(self, value):\n # additional conditions pass:\n @adapter(ISchemaContext, IField)\n def get_li_schema(schema_context, field):\n-    behavior = \'plone.app.multilingual.dx.interfaces.IDexterityTranslatable\'\n     fti = getattr(schema_context, \'fti\', None)\n-    if fti and behavior in getattr(fti, \'behaviors\', []):\n+    lang_behavior = set(\n+        (\n+            \'plone.app.multilingual.dx.interfaces.IDexterityTranslatable\',\n+            \'plone.translatable\',\n+        ),\n+    )\n+    fti_behaviors = set(getattr(fti, \'behaviors\', []))\n+    if lang_behavior.intersection(fti_behaviors):\n         return IFieldLanguageIndependent\n \n \ndiff --git a/src/plone/app/multilingual/interfaces.py b/src/plone/app/multilingual/interfaces.py\nindex a94c58ef..ac936295 100644\n--- a/src/plone/app/multilingual/interfaces.py\n+++ b/src/plone/app/multilingual/interfaces.py\n@@ -1,13 +1,18 @@\n # -*- coding: utf-8 -*-\n from plone.app.multilingual import _\n from plone.supermodel import model\n-from Products.CMFPlone.interfaces import ILanguageSchema\n from zope import schema\n from zope.interface import Attribute\n from zope.interface import Interface\n from zope.schema.vocabulary import SimpleTerm\n from zope.schema.vocabulary import SimpleVocabulary\n \n+try:\n+    from plone.i18n.interfaces import ILanguageSchema\n+except ImportError:\n+    # BBB for Plone 5.1, remove with Plone 6\n+    from Products.CMFPlone.interfaces import ILanguageSchema\n+\n \n # CONSTANTS\n SHARED_NAME = \'shared\'\ndiff --git a/src/plone/app/multilingual/profiles/default/types/LIF.xml b/src/plone/app/multilingual/profiles/default/types/LIF.xml\nindex a8199adf..c1a283bf 100644\n--- a/src/plone/app/multilingual/profiles/default/types/LIF.xml\n+++ b/src/plone/app/multilingual/profiles/default/types/LIF.xml\n@@ -23,11 +23,11 @@\n   <property name="add_permission">cmf.ManagePortal</property>\n   <property name="klass">plone.dexterity.content.Container</property>\n   <property name="behaviors">\n-    <element value="plone.app.dexterity.behaviors.metadata.IDublinCore"/>\n-    <element value="plone.app.content.interfaces.INameFromTitle"/>\n-    <element value="Products.CMFPlone.interfaces.constrains.ISelectableConstrainTypes"/>\n-    <element value="plone.app.multilingual.dx.interfaces.IDexterityTranslatable" />\n-    <element value="plone.app.dexterity.behaviors.exclfromnav.IExcludeFromNavigation"/>\n+    <element value="plone.dublincore"/>\n+    <element value="plone.namefromtitle"/>\n+    <element value="plone.constraintypes"/>\n+    <element value="plone.translatable" />\n+    <element value="plone.excludefromnavigation"/>\n   </property>\n   <property name="schema">plone.app.multilingual.interfaces.ILanguageIndependentFolder</property>\n   <property name="model_source"></property>\ndiff --git a/src/plone/app/multilingual/profiles/default/types/LRF.xml b/src/plone/app/multilingual/profiles/default/types/LRF.xml\nindex eb30503f..b1e28668 100644\n--- a/src/plone/app/multilingual/profiles/default/types/LRF.xml\n+++ b/src/plone/app/multilingual/profiles/default/types/LRF.xml\n@@ -23,12 +23,12 @@\n   <property name="add_permission">cmf.ManagePortal</property>\n   <property name="klass">plone.dexterity.content.Container</property>\n   <property name="behaviors">\n-    <element value="plone.app.dexterity.behaviors.metadata.IDublinCore"/>\n-    <element value="plone.app.content.interfaces.INameFromTitle"/>\n-    <element value="Products.CMFPlone.interfaces.constrains.ISelectableConstrainTypes"/>\n-    <element value="plone.app.multilingual.dx.interfaces.IDexterityTranslatable" />\n-    <element value="plone.app.dexterity.behaviors.exclfromnav.IExcludeFromNavigation"/>\n-    <element value="plone.app.layout.navigation.interfaces.INavigationRoot"/>\n+    <element value="plone.dublincore"/>\n+    <element value="plone.namefromtitle"/>\n+    <element value="plone.constraintypes"/>\n+    <element value="plone.translatable" />\n+    <element value="plone.excludefromnavigation"/>\n+    <element value="plone.navigationroot"/>\n   </property>\n   <property name="schema">plone.app.multilingual.interfaces.ILanguageRootFolder</property>\n   <property name="model_source"></property>\ndiff --git a/src/plone/app/multilingual/setuphandlers.py b/src/plone/app/multilingual/setuphandlers.py\nindex 4b28e555..417eebbd 100644\n--- a/src/plone/app/multilingual/setuphandlers.py\n+++ b/src/plone/app/multilingual/setuphandlers.py\n@@ -61,7 +61,7 @@ def enable_translatable_behavior(portal):\n         # Enable translatable behavior for all types\n         behaviors = list(fti.behaviors)\n         behaviors.extend([\n-            \'plone.app.multilingual.dx.interfaces.IDexterityTranslatable\',\n+            \'plone.translatable\',\n         ])\n         behaviors = tuple(set(behaviors))\n         fti._updateProperty(\'behaviors\', behaviors)\n@@ -88,7 +88,7 @@ def disable_translatable_behavior(portal):\n         # Disable translatable behavior from all types\n         behaviors = [\n             i for i in fti.behaviors if i !=\n-            \'plone.app.multilingual.dx.interfaces.IDexterityTranslatable\'\n+            \'plone.translatable\'\n         ]\n         fti._updateProperty(\'behaviors\', behaviors)\n \ndiff --git a/src/plone/app/multilingual/testing.py b/src/plone/app/multilingual/testing.py\nindex deeb7c6c..c04eceed 100644\n--- a/src/plone/app/multilingual/testing.py\n+++ b/src/plone/app/multilingual/testing.py\n@@ -167,8 +167,8 @@ def create_content_type(self, portal_type):\n         disableCSRFProtection()\n         fti = DexterityFTI(str(portal_type), title=portal_type)\n         fti.behaviors = (\n-            \'plone.app.dexterity.behaviors.metadata.IBasic\',\n-            \'plone.app.multilingual.dx.interfaces.IDexterityTranslatable\'\n+            \'plone.basic\',\n+            \'plone.translatable\',\n         )\n         fti.model_source = u"""\\\n <model xmlns="http://namespaces.plone.org/supermodel/schema">\ndiff --git a/src/plone/app/multilingual/tests/test_lif.py b/src/plone/app/multilingual/tests/test_lif.py\nindex eb98925f..d3faf4f0 100644\n--- a/src/plone/app/multilingual/tests/test_lif.py\n+++ b/src/plone/app/multilingual/tests/test_lif.py\n@@ -35,9 +35,9 @@ def setUp(self):\n \n         fti = DexterityFTI(\'Feedback\')\n         fti.behaviors = (\n-            \'plone.app.dexterity.behaviors.metadata.IBasic\',\n-            \'plone.app.content.interfaces.INameFromTitle\',\n-            \'plone.app.multilingual.dx.interfaces.IDexterityTranslatable\',\n+            \'plone.basic\',\n+            \'plone.namefromtitle\',\n+            \'plone.translatable\',\n         )\n         fti.model_source = u"""\\\n <model xmlns="http://namespaces.plone.org/supermodel/schema"\n'

Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2019-07-06T20:34:35+02:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.app.multilingual/commit/5c4178eea60ce76a14e87b26a81e2ed110910938

Merge remote-tracking branch 'origin/master' into dxcontainer-siteroot

Files changed:
A news/256.bugfix
A news/256.feature
A news/355.bugfix
A news/357.bugfix
M .gitignore
M README.rst
M setup.py
M src/plone/app/multilingual/browser/add.py
M src/plone/app/multilingual/events.py
M src/plone/app/multilingual/indexer.py
M src/plone/app/multilingual/itg.py
M src/plone/app/multilingual/manager.py
M src/plone/app/multilingual/tests/test_api.py
M src/plone/app/multilingual/tests/test_selector.py
D buildout.cfg
D jenkins.cfg
D test-plone-5.0.x.cfg
D test-plone-5.1.x.cfg
D test-plone-5.x.cfg

b'diff --git a/.gitignore b/.gitignore\nindex 5894cbb6..3a725158 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -31,9 +31,6 @@ MKcodeintel\n # Mac\n .DS_Store\n \n-# Local development\n-local.cfg\n-\n # Emacs\n .emacs.desktop*\n \ndiff --git a/README.rst b/README.rst\nindex c68965c2..eddc7a5a 100644\n--- a/README.rst\n+++ b/README.rst\n@@ -31,11 +31,11 @@ Components\n \n PAM is composed of two packages, one is mandatory:\n \n-    * plone.app.multilingual (core, UI, enables Dexterity support via a behavior)\n+* plone.app.multilingual (core, UI, enables Dexterity support via a behavior)\n \n and one optional:\n \n-    * archetypes.multilingual (enables Archetypes support)\n+* archetypes.multilingual (enables Archetypes support)\n \n \n Usage\n@@ -87,9 +87,9 @@ Translation locator policy\n \n When translating content, this policy decides how it would be placed in the site\'s structure. There are two policies in place:\n \n-    * LP way, the translation gets placed in the nearest translated folder in parent\'s hierarchy\n+* LP way, the translation gets placed in the nearest translated folder in parent\'s hierarchy\n \n-    * Ask user where to place the translated element in the destination language root folder\n+* Ask user where to place the translated element in the destination language root folder\n \n \n Language selector policy\n@@ -97,8 +97,8 @@ Language selector policy\n \n While browsing the site, the language selector viewlet allows users to switch site\'s content language and ease access between translations of the current content. There are two policies in place in case the translation of a specific language does not exist (yet):\n \n-    * LP way, the selector shows the nearest translated container.\n-    * Shows the user an informative view that shows the current available translations for the current content.\n+* LP way, the selector shows the nearest translated container.\n+* Shows the user an informative view that shows the current available translations for the current content.\n \n \n The assets folder - a shared "Language Independent Folder"\n@@ -237,12 +237,12 @@ All the internal features are implemented on the package plone.app.multilingual.\n \n The key points are:\n \n-    1. Each translation is a content object\n-    2. There is no canonical object\n-    3. The translation reference storage is external to the content object\n-    4. Adapt all the steps on translation\n-    5. Language get/set via an unified adapter\n-    6. Translatable marker interface(s)\n+1. Each translation is a content object\n+2. There is no canonical object\n+3. The translation reference storage is external to the content object\n+4. Adapt all the steps on translation\n+5. Language get/set via an unified adapter\n+6. Translatable marker interface(s)\n \n \n There is no canonical content object\n@@ -262,21 +262,26 @@ Adapt all the steps on translation\n \n The different aspects involved on a translation are adapted, so it\'s possible to create different policies for different types, sites, etc.\n \n-  * ITranslationFactory - General factory used to create a new content\n+``ITranslationFactory``\n+    General factory used to create a new content\n \n-    * ITranslationLocator - Where we are going to locate the new translated content\n+``ITranslationLocator``\n+    Where we are going to locate the new translated content\n \n-        Default : If the parent folder is translated create the content on the translated parent folder, otherwise create on the parent folder.\n+    Default : If the parent folder is translated create the content on the translated parent folder, otherwise create on the parent folder.\n \n-    * ITranslationCloner - Method to clone the original object to the new one\n+``ITranslationCloner``\n+    Method to clone the original object to the new one\n \n-        Default : Nothing\n+    Default : Nothing\n \n-    * ITranslationIdChooser - Which id is the translation\n+``ITranslationIdChooser``\n+    Which id is the translation\n \n-        Default : The original id + lang code-block\n+    Default : The original id + lang code-block\n \n-  * ILanguageIndependentFieldsManager - Manager for language independent fields\n+``ILanguageIndependentFieldsManager``\n+    Manager for language independent fields\n \n     Default: Nothing\n \ndiff --git a/buildout.cfg b/buildout.cfg\ndeleted file mode 100644\nindex d0f1508a..00000000\n--- a/buildout.cfg\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-[buildout]\n-extends =\n-    test-plone-5.1.x.cfg\ndiff --git a/jenkins.cfg b/jenkins.cfg\ndeleted file mode 100644\nindex 3c2ccdc5..00000000\n--- a/jenkins.cfg\n+++ /dev/null\n@@ -1,12 +0,0 @@\n-[buildout]\n-extends =\n-    buildout.cfg\n-    https://raw.github.com/plone/buildout.jenkins/master/jenkins.cfg\n-    https://raw.github.com/plone/buildout.jenkins/master/jenkins-code-analysis.cfg\n-jenkins-test-eggs =\n-    plone.app.multilingual[test]\n-    archetypes.multilingual[test]\n-jenkins-test-directories =\n-    src/plone/app/multilingual\n-    extras/archetypes.multilingual/src/archetypes/multilingual\n-\ndiff --git a/news/256.bugfix b/news/256.bugfix\nnew file mode 100644\nindex 00000000..046ae770\n--- /dev/null\n+++ b/news/256.bugfix\n@@ -0,0 +1,5 @@\n+Remove deprecation warnings in tests.\n+Increase readability\n+Add code comments.\n+Remove superfluos reindex of "Language" in manager.\n+[jensens]\ndiff --git a/news/256.feature b/news/256.feature\nnew file mode 100644\nindex 00000000..9ef041e9\n--- /dev/null\n+++ b/news/256.feature\n@@ -0,0 +1,3 @@\n+Add low level events and notifies:\n+on register, update and remove of a translation to a translation groups.\n+[jensens]\n\\ No newline at end of file\ndiff --git a/news/355.bugfix b/news/355.bugfix\nnew file mode 100644\nindex 00000000..01959431\n--- /dev/null\n+++ b/news/355.bugfix\n@@ -0,0 +1,2 @@\n+wrong check for default addview in addtranslation traverser\n+[mauro]\ndiff --git a/news/357.bugfix b/news/357.bugfix\nnew file mode 100644\nindex 00000000..aadfb7fe\n--- /dev/null\n+++ b/news/357.bugfix\n@@ -0,0 +1,5 @@\n+Remove any dependency to ``archetypes.multilingual``, since this is a indirection.\n+Remove all dependencies that are already part of ``Products.CMFPlone``.\n+All version specifications were reduced to use a recent ``Products.CMFPlone``.\n+The ``decorator`` dependency is no longer used.\n+[jensens]\ndiff --git a/setup.py b/setup.py\nindex 54563329..b1819d6e 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -38,29 +38,17 @@\n     include_package_data=True,\n     zip_safe=False,\n     install_requires=[\n-        \'Products.CMFPlone>=5.0b1\',\n-        \'Products.GenericSetup>=1.8.2\',\n-        # we want p.a.layout >= 2.5.22 on 2.5.x branch OR >= 2.6.3\n-        \'plone.app.layout>=2.5.22,!=2.6.0,!=2.6.1,!=2.6.2\',\n-        \'plone.app.registry\',\n-        \'plone.app.z3cform\',\n-        \'plone.behavior\',\n-        \'plone.dexterity\',\n+        \'Products.CMFPlone>=5.2rc4\',\n         \'setuptools\',\n         \'six\',\n-        \'z3c.relationfield\',\n-        \'zope.publisher\',\n     ],\n     extras_require={\n         \'archetypes\': [\n             \'archetypes.multilingual\',\n         ],\n         \'test\': [\n-            \'plone.app.testing[robot]>=4.2.2\',\n+            \'plone.app.testing[robot]\',\n             \'plone.app.robotframework\',\n-            \'plone.app.contenttypes\',\n-            \'archetypes.multilingual\',\n-            \'decorator\',  # BBB\n         ],\n     },\n     entry_points="""\ndiff --git a/src/plone/app/multilingual/browser/add.py b/src/plone/app/multilingual/browser/add.py\nindex e3ff90fe..4da120d1 100644\n--- a/src/plone/app/multilingual/browser/add.py\n+++ b/src/plone/app/multilingual/browser/add.py\n@@ -99,7 +99,7 @@ def traverse(self, name, ignored):\n             )\n         if add_view is None:\n             add_view = queryMultiAdapter((self.context, self.request, ti))\n-            if add_view is not None:\n+            if add_view is None:\n                 raise TraversalError(self.context, name)\n \n         add_view.__name__ = ti.factory\ndiff --git a/src/plone/app/multilingual/events.py b/src/plone/app/multilingual/events.py\nindex 479d4ace..b51ce8c0 100644\n--- a/src/plone/app/multilingual/events.py\n+++ b/src/plone/app/multilingual/events.py\n@@ -19,6 +19,39 @@ class IObjectTranslatedEvent(IObjectEvent):\n     language = Attribute("Target language.")\n \n \n+class ITranslationRegisteredEvent(IObjectEvent):\n+    """Sent after a new translation was registered.\n+\n+    This is meant to be notified on low-level manager level only.\n+    """\n+\n+    object = Attribute("The base object.")\n+    target = Attribute("The translated object.")\n+    language = Attribute("The language of the translated obejct.")\n+\n+\n+class ITranslationUpdatedEvent(IObjectEvent):\n+    """Sent after an translation was moved to point to a different object\n+\n+    This is meant to be notified on low-level manager level only.\n+    """\n+\n+    object = Attribute("The base object.")\n+    old_object = Attribute("The old translation, now orphaned.")\n+    language = Attribute("The language of the objects.")\n+\n+\n+class ITranslationRemovedEvent(IObjectEvent):\n+    """Sent after an translation was removed.\n+\n+    This is meant to be notified on low-level manager level only.\n+    """\n+\n+    object = Attribute("The base object.")\n+    old_object = Attribute("The old translation, now orphaned.")\n+    language = Attribute("The language of the objects.")\n+\n+\n @implementer(IObjectWillBeTranslatedEvent)\n class ObjectWillBeTranslatedEvent(object):\n     """Sent before an object is translated."""\n@@ -36,3 +69,36 @@ def __init__(self, context, target, language):\n         self.object = context\n         self.target = target\n         self.language = language\n+\n+\n+@implementer(ITranslationRegisteredEvent)\n+class TranslationRegisteredEvent(object):\n+    """Sent after a new translation was registered.\n+    """\n+\n+    def __init__(self, context, target, language):\n+        self.object = context\n+        self.target = target\n+        self.language = language\n+\n+\n+@implementer(ITranslationUpdatedEvent)\n+class TranslationUpdatedEvent(object):\n+    """Sent after an translation was moved to point to a different object\n+    """\n+\n+    def __init__(self, context, old_object, language):\n+        self.object = context\n+        self.old_object = old_object\n+        self.language = language\n+\n+\n+@implementer(ITranslationRemovedEvent)\n+class TranslationRemovedEvent(object):\n+    """Sent after an translation was moved to point to a different object\n+    """\n+\n+    def __init__(self, context, old_object, language):\n+        self.object = context\n+        self.old_object = old_object\n+        self.language = language\ndiff --git a/src/plone/app/multilingual/indexer.py b/src/plone/app/multilingual/indexer.py\nindex 1e7ca8c3..b43f60a8 100644\n--- a/src/plone/app/multilingual/indexer.py\n+++ b/src/plone/app/multilingual/indexer.py\n@@ -12,5 +12,4 @@ def itgIndexer(obj):\n \n @indexer(ITranslatable)\n def LanguageIndexer(object, **kw):\n-    language = ILanguage(object).get_language()\n-    return language\n+    return ILanguage(object).get_language()\ndiff --git a/src/plone/app/multilingual/itg.py b/src/plone/app/multilingual/itg.py\nindex c30284e5..e0f52980 100644\n--- a/src/plone/app/multilingual/itg.py\n+++ b/src/plone/app/multilingual/itg.py\n@@ -40,9 +40,11 @@ def set(self, tg):\n @adapter(ITranslatable, IObjectCreatedEvent)\n def addAttributeTG(obj, event):\n \n-    if not IObjectCopiedEvent.providedBy(event):\n-        if getattr(aq_base(obj), ATTRIBUTE_NAME, None):\n-            return  # defensive: keep existing TG on non-copy create\n+    if (\n+        not IObjectCopiedEvent.providedBy(event)\n+        and getattr(aq_base(obj), ATTRIBUTE_NAME, None)\n+    ):\n+        return  # defensive: keep existing TG on non-copy create\n \n     generator = queryUtility(IUUIDGenerator)\n     if generator is None:\ndiff --git a/src/plone/app/multilingual/manager.py b/src/plone/app/multilingual/manager.py\nindex ee9467b1..aa541e94 100644\n--- a/src/plone/app/multilingual/manager.py\n+++ b/src/plone/app/multilingual/manager.py\n@@ -1,6 +1,9 @@\n # -*- coding: utf-8 -*-\n from plone.app.multilingual.events import ObjectTranslatedEvent\n from plone.app.multilingual.events import ObjectWillBeTranslatedEvent\n+from plone.app.multilingual.events import TranslationRegisteredEvent\n+from plone.app.multilingual.events import TranslationRemovedEvent\n+from plone.app.multilingual.events import TranslationUpdatedEvent\n from plone.app.multilingual.interfaces import IMutableTG\n from plone.app.multilingual.interfaces import ITG\n from plone.app.multilingual.interfaces import ITranslationFactory\n@@ -27,7 +30,6 @@ def __init__(self, context):\n             self.tg = context\n         else:\n             self.tg = self.get_tg(context)\n-        self._canonical = None\n         site = getSite()\n         self.pcatalog = getToolByName(site, \'portal_catalog\', None)\n \n@@ -71,44 +73,53 @@ def register_translation(self, language, content):\n             raise KeyError(\'There is no target language\')\n \n         if type(content) == str:\n-            content_obj = uuidToObject(content)\n-        else:\n-            content_obj = content\n+            content = uuidToObject(content)\n \n         # Check if exists and is not myself\n         brains = self.pcatalog.unrestrictedSearchResults(\n             TranslationGroup=self.tg, Language=language)\n-        if len(brains) > 0 and brains[0].UID != self.get_id(content_obj):\n+        if len(brains) > 0 and brains[0].UID != self.get_id(content):\n             raise KeyError("Translation already exists")\n \n         # register the new translation in the canonical\n-        IMutableTG(content_obj).set(self.tg)\n-        content_obj.reindexObject(\n-            idxs=(\'Language\', \'TranslationGroup\'))\n+        IMutableTG(content).set(self.tg)\n+        content.reindexObject(idxs=(\'Language\', \'TranslationGroup\'))\n+        notify(TranslationRegisteredEvent(self.context, content, language))\n \n     def update(self):\n-        """ see interfaces"""\n+        """ Update the adapted item.\n+\n+        If unregistered, register a Translation-Grouup (TG) for it and exit.\n+\n+        Check that there aren\'t two translations on the same language\n+        This is to be used for changing the contexts language.\n+        If there is already an item in the same language,\n+        Remove the other items TG information and make the current adapted\n+        context the active language for the current TG.\n+\n+        """\n         language = ILanguage(self.context).get_language()\n-        # self.context.reindexObject(idxs=("Language", "TranslationGroup", ))\n-        # In case language is already on the translated languages we are\n-        # going to orphan the old translation\n         brains = self.pcatalog.unrestrictedSearchResults(\n-            TranslationGroup=self.tg, Language=language)\n+            TranslationGroup=self.tg,\n+            Language=language,\n+        )\n         if len(brains) == 0:\n-            # There is not a translation with this tg on this language\n+            # There is no translation within current TG for this language.\n             self.register_translation(language, self.context)\n-        else:\n-            # We need to check if the language has changed\n-            brain = brains[0]\n-            content_id = self.get_id(self.context)\n-            if brain.UID != content_id:\n-                # Is a different object -> remove the old one\n-                # We get the old uuid\n-                old_object = brain.getObject()\n-                IMutableTG(old_object).set(NOTG)\n-                old_object.reindexObject(idxs=(\n-                    "Language", "TranslationGroup",\n-                ))\n+            return\n+        # In case the language is already within the translated languages we are\n+        # going to orphan the old translation.\n+        brain = brains[0]\n+        content_id = self.get_id(self.context)\n+        if brain.UID == content_id:\n+            return\n+\n+        # It is a different object -> remove the old one\n+        # We get the old uuid\n+        old_object = brain.getObject()\n+        IMutableTG(old_object).set(NOTG)\n+        old_object.reindexObject(idxs=("TranslationGroup",))\n+        notify(TranslationUpdatedEvent(self.context, old_object, language))\n \n     def add_translation(self, language):\n         """ see interfaces """\n@@ -125,9 +136,7 @@ def add_translation(self, language):\n         # register the new translation\n         self.register_translation(language, translated_object)\n         # event\n-        notify(ObjectTranslatedEvent(self.context,\n-               translated_object, language))\n-        return\n+        notify(ObjectTranslatedEvent(self.context, translated_object, language))\n \n     def add_translation_delegated(self, language):\n         """\n@@ -147,7 +156,8 @@ def remove_translation(self, language):\n         """ see interfaces """\n         translation = self.get_translation(language)\n         IMutableTG(translation).set(NOTG)\n-        translation.reindexObject()\n+        translation.reindexObject(idxs=("TranslationGroup",))\n+        notify(TranslationRemovedEvent(self.context, translation, language))\n \n     def get_translation(self, language):\n         """ see interfaces """\n@@ -169,7 +179,8 @@ def get_translations(self):\n         """ see interfaces """\n         translations = {}\n         brains = self.pcatalog.unrestrictedSearchResults(\n-            TranslationGroup=self.tg)\n+            TranslationGroup=self.tg,\n+        )\n         for brain in brains:\n             translations[brain.Language] = brain.getObject()\n         return translations\ndiff --git a/src/plone/app/multilingual/tests/test_api.py b/src/plone/app/multilingual/tests/test_api.py\nindex 755afd97..1e1d1b57 100644\n--- a/src/plone/app/multilingual/tests/test_api.py\n+++ b/src/plone/app/multilingual/tests/test_api.py\n@@ -236,7 +236,7 @@ def test_create_destroy_link_translations(self):\n         id_a_ca = ITranslationManager(a_ca).query_canonical()\n         id_another_es = ITranslationManager(another_es).query_canonical()\n \n-        self.assertNotEquals(id_another_es, id_a_ca)\n+        self.assertNotEqual(id_another_es, id_a_ca)\n         self.assertTrue(isinstance(id_another_es, str))\n         self.assertTrue(isinstance(id_a_ca, str))\n \ndiff --git a/src/plone/app/multilingual/tests/test_selector.py b/src/plone/app/multilingual/tests/test_selector.py\nindex 31a568ef..515bc7da 100644\n--- a/src/plone/app/multilingual/tests/test_selector.py\n+++ b/src/plone/app/multilingual/tests/test_selector.py\n@@ -84,7 +84,7 @@ def test_selector_data_not_modified_by_viewlet(self):\n         selector_adapter.update()\n         selector_adapter_languages = selector_adapter.languages()\n \n-        self.assertNotEquals(\n+        self.assertNotEqual(\n             selector_adapter_languages, selector_viewlet_languages\n         )\n \ndiff --git a/test-plone-5.0.x.cfg b/test-plone-5.0.x.cfg\ndeleted file mode 100644\nindex 139db4c2..00000000\n--- a/test-plone-5.0.x.cfg\n+++ /dev/null\n@@ -1,11 +0,0 @@\n-[buildout]\n-extends =\n-    https://raw.github.com/collective/buildout.plonetest/master/test-5.0.x.cfg\n-    test-plone-5.x.cfg\n-\n-plone-series = 5.0\n-\n-[versions]\n-# Plone 5.0 needs a plone.app.layout release from the 2.5.x series\n-plone.app.layout = 2.5.22\n-coverage = >=4.2\n\\ No newline at end of file\ndiff --git a/test-plone-5.1.x.cfg b/test-plone-5.1.x.cfg\ndeleted file mode 100644\nindex 8258d2ba..00000000\n--- a/test-plone-5.1.x.cfg\n+++ /dev/null\n@@ -1,12 +0,0 @@\n-[buildout]\n-extends =\n-    https://raw.github.com/collective/buildout.plonetest/master/test-5.1.x.cfg\n-    test-plone-5.x.cfg\n-\n-plone-series = 5.1\n-\n-[versions]\n-# Plone 5.1 needs a plone.app.layout release from the 2.6.x series\n-plone.app.layout = 2.6.3\n-setuptools = 34.3.0\n-zc.buildout = 2.8.0\ndiff --git a/test-plone-5.x.cfg b/test-plone-5.x.cfg\ndeleted file mode 100644\nindex 686e2876..00000000\n--- a/test-plone-5.x.cfg\n+++ /dev/null\n@@ -1,118 +0,0 @@\n-[buildout]\n-package-name = plone.app.multilingual\n-package-extras = [test]\n-\n-extensions =\n-    mr.developer\n-\n-auto-checkout =\n-    archetypes.multilingual\n-    archetypes.testcase\n-\n-versions = versions\n-sources-dir = extras\n-always-checkout = force\n-\n-eggs =\n-    Pillow\n-    archetypes.multilingual\n-    archetypes.testcase\n-\n-test-eggs =\n-    Pillow\n-    plone.app.multilingual[test]\n-    archetypes.multilingual[test]\n-\n-parts +=\n-    zopepy\n-    i18ndude\n-    releaser\n-    ohcount\n-    coverage\n-    coverage-test\n-    checkversions\n-    omelette\n-    code-analysis\n-\n-\n-[zopepy]\n-recipe = zc.recipe.egg\n-eggs = ${instance:eggs}\n-interpreter = zopepy\n-scripts = zopepy\n-\n-\n-[i18ndude]\n-unzip = true\n-recipe = zc.recipe.egg\n-eggs = i18ndude\n-\n-\n-[releaser]\n-recipe = zc.recipe.egg\n-eggs = jarn.mkrelease\n-\n-\n-[ohcount]\n-recipe = zc.recipe.egg\n-eggs = ohconvert\n-\n-\n-[coverage]\n-recipe = zc.recipe.egg\n-eggs = z3c.coverage\n-\n-\n-[coverage-test]\n-recipe = zc.recipe.testrunner\n-eggs = ${test:eggs}\n-defaults = [\'--coverage\', \'../../coverage\', \'-v\', \'--auto-progress\']\n-\n-\n-[checkversions]\n-recipe = zc.recipe.egg\n-eggs = z3c.checkversions [buildout]\n-\n-\n-[test]\n-# Override defaults to test all our eggs, see test-4.x.x for details:\n-# https://github.com/collective/buildout.plonetest/blob/master\n-eggs =\n-    ${buildout:package-name} ${buildout:package-extras}\n-    ${buildout:test-eggs}\n-defaults = [\'--exit-with-status\', \'--auto-color\', \'--auto-progress\',\n-            \'--verbose\', \'--ndiff\']\n-\n-\n-[omelette]\n-recipe = collective.recipe.omelette\n-eggs = ${instance:eggs}\n-\n-\n-[code-analysis]\n-recipe = plone.recipe.codeanalysis\n-directory =\n-    ${buildout:directory}/src\n-    ${buildout:directory}/extras/archetypes.multilingual\n-# Conventions\n-flake8-max-complexity = 16\n-imports = True\n-prefer-single-quotes = False\n-debug-statements = True\n-# i18n\n-utf8-header = True\n-# Deprecation warnings\n-deprecated-aliases = True\n-\n-\n-[versions]\n-setuptools = >=7.0\n-zc.buildout = >=2.2.5\n-coverage =\n-\n-# Unpin this product so we are testing development code\n-plone.app.multilingual =\n-\n-[sources]\n-archetypes.multilingual =  git git://github.com/plone/archetypes.multilingual.git pushurl=git@github.com:plone/archetypes.multilingual.git\n-archetypes.testcase =  git git://github.com/sneridagh/archetypes.testcase.git pushurl=git@github.com:sneridagh/archetypes.testcase.git\n'

Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2019-12-10T11:00:10+01:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.app.multilingual/commit/9b63131ba277821bf51786881589ad5692e7270b

Merge remote-tracking branch 'origin/master' into dxcontainer-siteroot

Files changed:
A news/362.feature
M CHANGES.rst
M setup.py
M src/plone/app/multilingual/browser/modify.py
M src/plone/app/multilingual/browser/selector.py
M src/plone/app/multilingual/browser/switcher.py
M src/plone/app/multilingual/browser/update.py
M src/plone/app/multilingual/subscriber.py
M src/plone/app/multilingual/tests/robot/test_add_translation.robot
M src/plone/app/multilingual/tests/robot/test_schemaeditor.robot
M src/plone/app/multilingual/tests/robot/test_translate_content.robot
M src/plone/app/multilingual/tests/test_selector.py
D news/256.bugfix
D news/256.feature
D news/355.bugfix
D news/357.bugfix

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 8ce29263..869daa0a 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -8,6 +8,56 @@ Changelog\n \n .. towncrier release notes start\n \n+5.4.2 (2019-11-25)\n+------------------\n+\n+Bug fixes:\n+\n+\n+- Use the shared \'Plone test setup\' and \'Plone test teardown\' keywords in Robot tests.\n+  [Rotonen] (#349)\n+\n+\n+5.4.1 (2019-08-23)\n+------------------\n+\n+Bug fixes:\n+\n+\n+- fix adding new language when Language Independent Folder has content\n+  [petschki] (#358)\n+- add/update translation forms doesn\'t show error return from z3c form validation\n+  [mamico] (#360)\n+\n+\n+5.4.0 (2019-07-18)\n+------------------\n+\n+New features:\n+\n+\n+- Add low level events and notifies:\n+  on register, update and remove of a translation to a translation groups.\n+  [jensens] (#256)\n+\n+\n+Bug fixes:\n+\n+\n+- Remove deprecation warnings in tests.\n+  Increase readability\n+  Add code comments.\n+  Remove superfluos reindex of "Language" in manager.\n+  [jensens] (#256)\n+- wrong check for default addview in addtranslation traverser\n+  [mauro] (#355)\n+- Remove any dependency to ``archetypes.multilingual``, since this is a indirection.\n+  Remove all dependencies that are already part of ``Products.CMFPlone``.\n+  All version specifications were reduced to use a recent ``Products.CMFPlone``.\n+  The ``decorator`` dependency is no longer used.\n+  [jensens] (#357)\n+\n+\n 5.3.5 (2019-05-21)\n ------------------\n \n@@ -22,6 +72,8 @@ Bug fixes:\n \n Bug fixes:\n \n+- Avoid browser to permanently cache first redirection to negotiated lang (#347)\n+  [laulaz]\n \n - Moved to named behaviors. [iham] (#342)\n \ndiff --git a/news/256.bugfix b/news/256.bugfix\ndeleted file mode 100644\nindex 046ae770..00000000\n--- a/news/256.bugfix\n+++ /dev/null\n@@ -1,5 +0,0 @@\n-Remove deprecation warnings in tests.\n-Increase readability\n-Add code comments.\n-Remove superfluos reindex of "Language" in manager.\n-[jensens]\ndiff --git a/news/256.feature b/news/256.feature\ndeleted file mode 100644\nindex 9ef041e9..00000000\n--- a/news/256.feature\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-Add low level events and notifies:\n-on register, update and remove of a translation to a translation groups.\n-[jensens]\n\\ No newline at end of file\ndiff --git a/news/355.bugfix b/news/355.bugfix\ndeleted file mode 100644\nindex 01959431..00000000\n--- a/news/355.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-wrong check for default addview in addtranslation traverser\n-[mauro]\ndiff --git a/news/357.bugfix b/news/357.bugfix\ndeleted file mode 100644\nindex aadfb7fe..00000000\n--- a/news/357.bugfix\n+++ /dev/null\n@@ -1,5 +0,0 @@\n-Remove any dependency to ``archetypes.multilingual``, since this is a indirection.\n-Remove all dependencies that are already part of ``Products.CMFPlone``.\n-All version specifications were reduced to use a recent ``Products.CMFPlone``.\n-The ``decorator`` dependency is no longer used.\n-[jensens]\ndiff --git a/news/362.feature b/news/362.feature\nnew file mode 100644\nindex 00000000..6eea1d4c\n--- /dev/null\n+++ b/news/362.feature\n@@ -0,0 +1,2 @@\n+Remove the \'set_language\' parameter when \'always_set_cookie\' is enabled in language control panel. See #362\n+[erral]\ndiff --git a/setup.py b/setup.py\nindex b1819d6e..abef5970 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -5,7 +5,7 @@\n import os\n \n \n-version = \'5.3.6.dev0\'\n+version = \'5.4.3.dev0\'\n \n setup(\n     name=\'plone.app.multilingual\',\n@@ -18,6 +18,7 @@\n         open(\'CHANGES.rst\').read(),\n     ]),\n     classifiers=[\n+        \'Development Status :: 5 - Production/Stable\',\n         \'Framework :: Plone\',\n         \'Framework :: Plone :: 5.2\',\n         \'License :: OSI Approved :: GNU General Public License (GPL)\',\ndiff --git a/src/plone/app/multilingual/browser/modify.py b/src/plone/app/multilingual/browser/modify.py\nindex 152545e5..bd2cb694 100644\n--- a/src/plone/app/multilingual/browser/modify.py\n+++ b/src/plone/app/multilingual/browser/modify.py\n@@ -48,16 +48,18 @@ class ConnectTranslation(AutoExtensibleForm, Form):\n                                default=u"Connect translation"))\n     def handle_add(self, action):\n         data, errors = self.extractData()\n-        if not errors:\n-            content = data[\'content\']\n-            language = data[\'language\']\n-            ILanguage(content).set_language(language)\n-            itm = ITranslationManager(self.context)\n-            # the \'register_translation\'-method takes content OR\n-            # UUID as second parameter. We need to use the UUID\n-            # here because otherwise the catalog can\'t be acquired\n-            # and the translation index is not updated\n-            itm.register_translation(language, IUUID(content))\n+        if errors:\n+            self.status = self.formErrorsMessage\n+            return\n+        content = data[\'content\']\n+        language = data[\'language\']\n+        ILanguage(content).set_language(language)\n+        itm = ITranslationManager(self.context)\n+        # the \'register_translation\'-method takes content OR\n+        # UUID as second parameter. We need to use the UUID\n+        # here because otherwise the catalog can\'t be acquired\n+        # and the translation index is not updated\n+        itm.register_translation(language, IUUID(content))\n         return self.request.response.redirect(\n             self.context.absolute_url() + \'/modify_translations\')\n \ndiff --git a/src/plone/app/multilingual/browser/selector.py b/src/plone/app/multilingual/browser/selector.py\nindex 4335ae08..0bd6167e 100644\n--- a/src/plone/app/multilingual/browser/selector.py\n+++ b/src/plone/app/multilingual/browser/selector.py\n@@ -2,6 +2,9 @@\n from plone.app.i18n.locales.browser.selector import LanguageSelector\n from plone.app.multilingual.interfaces import ITG\n from plone.app.multilingual.interfaces import NOTG\n+from plone.i18n.interfaces import ILanguageSchema\n+from plone.registry.interfaces import IRegistry\n+from zope.component import getUtility\n from zope.component import queryAdapter\n from zope.component.hooks import getSite\n from ZTUtils import make_query\n@@ -79,16 +82,21 @@ class LanguageSelectorViewlet(LanguageSelector):\n     def languages(self):\n         languages_info = super(LanguageSelectorViewlet, self).languages()\n         results = []\n+        registry = getUtility(IRegistry)\n+        settings = registry.forInterface(ILanguageSchema, prefix="plone")\n         translation_group = queryAdapter(self.context, ITG)\n         if translation_group is None:\n             translation_group = NOTG\n+\n         for lang_info in languages_info:\n             # Avoid to modify the original language dict\n             data = lang_info.copy()\n             data[\'translated\'] = True\n-            query_extras = {\n-                \'set_language\': data[\'code\'],\n-            }\n+            query_extras = {}\n+            if not settings.set_cookie_always:\n+                query_extras.update({\n+                    \'set_language\': data[\'code\'],\n+                })\n             post_path = getPostPath(self.context, self.request)\n             if post_path:\n                 query_extras[\'post_path\'] = post_path\ndiff --git a/src/plone/app/multilingual/browser/switcher.py b/src/plone/app/multilingual/browser/switcher.py\nindex 2d9ddca1..a06477b0 100644\n--- a/src/plone/app/multilingual/browser/switcher.py\n+++ b/src/plone/app/multilingual/browser/switcher.py\n@@ -28,4 +28,4 @@ def __call__(self):\n         if not langCookie or langCookie != target:\n             self.request.response.setCookie(\'I18N_LANGUAGE\', target, path=\'/\')\n \n-        self.request.response.redirect(url, status=301)\n+        self.request.response.redirect(url, status=302)\ndiff --git a/src/plone/app/multilingual/browser/update.py b/src/plone/app/multilingual/browser/update.py\nindex 9b309665..2831e787 100644\n--- a/src/plone/app/multilingual/browser/update.py\n+++ b/src/plone/app/multilingual/browser/update.py\n@@ -20,12 +20,14 @@ class UpdateLanguageForm(form.Form):\n     @button.buttonAndHandler(_(u"update_language", default=u"Update Language"))\n     def handle_update(self, action):\n         data, errors = self.extractData()\n-        new_object = self.context\n+        if errors:\n+            self.status = self.formErrorsMessage\n+            return\n \n-        if not errors:\n-            language = data[\'language\']\n-            # We need to move the object to its place!!\n-            new_object = multilingualMoveObject(self.context, language)\n+        new_object = self.context\n+        language = data[\'language\']\n+        # We need to move the object to its place!!\n+        new_object = multilingualMoveObject(self.context, language)\n \n         return self.request.response.redirect(\n             new_object.absolute_url() + \'?set_language=\' + language)\ndiff --git a/src/plone/app/multilingual/subscriber.py b/src/plone/app/multilingual/subscriber.py\nindex 582a4890..6069fb7b 100644\n--- a/src/plone/app/multilingual/subscriber.py\n+++ b/src/plone/app/multilingual/subscriber.py\n@@ -89,13 +89,14 @@ def unindex_language_independent(ob, event):\n \n     language_tool = getToolByName(ob, \'portal_languages\')\n     language_codes = language_tool.supported_langs\n-\n+    portal = getSite()\n     uuid = IUUID(ob).split(\'-\')[0]\n+\n     for code in language_codes:\n         for brain in pc.unrestrictedSearchResults(UID=uuid + \'-\' + code):\n-            ob.unrestrictedTraverse(brain.getPath()).unindexObject()\n+            portal.unrestrictedTraverse(brain.getPath()).unindexObject()\n         for brain in pc.unrestrictedSearchResults(UID=uuid):\n-            ob.unrestrictedTraverse(brain.getPath()).unindexObject()\n+            portal.unrestrictedTraverse(brain.getPath()).unindexObject()\n \n \n # Multilingual subscribers\ndiff --git a/src/plone/app/multilingual/tests/robot/test_add_translation.robot b/src/plone/app/multilingual/tests/robot/test_add_translation.robot\nindex 2dd46e6f..6f943373 100644\n--- a/src/plone/app/multilingual/tests/robot/test_add_translation.robot\n+++ b/src/plone/app/multilingual/tests/robot/test_add_translation.robot\n@@ -1,13 +1,14 @@\n *** Settings ***\n \n-Resource  plone/app/robotframework/selenium.robot\n Resource  plone/app/robotframework/keywords.robot\n+Resource  plone/app/robotframework/saucelabs.robot\n+Resource  plone/app/robotframework/selenium.robot\n Resource  Products/CMFPlone/tests/robot/keywords.robot\n \n Library  Remote  ${PLONE_URL}/RobotRemote\n \n-Test Setup  Setup test browser\n-Test Teardown  Close all browsers\n+Test Setup  Run Keywords  Plone test setup\n+Test Teardown  Run keywords  Plone test teardown\n \n *** Test Cases ***\n \ndiff --git a/src/plone/app/multilingual/tests/robot/test_schemaeditor.robot b/src/plone/app/multilingual/tests/robot/test_schemaeditor.robot\nindex 9b35c5ab..0ce75781 100644\n--- a/src/plone/app/multilingual/tests/robot/test_schemaeditor.robot\n+++ b/src/plone/app/multilingual/tests/robot/test_schemaeditor.robot\n@@ -1,12 +1,13 @@\n *** Settings ***\n \n-Resource  plone/app/robotframework/selenium.robot\n Resource  plone/app/robotframework/keywords.robot\n+Resource  plone/app/robotframework/saucelabs.robot\n+Resource  plone/app/robotframework/selenium.robot\n \n Library  Remote  ${PLONE_URL}/RobotRemote\n \n-Test Setup  Open test browser\n-Test Teardown  Close all browsers\n+Test Setup  Run Keywords  Plone test setup\n+Test Teardown  Run keywords  Plone test teardown\n \n \n *** Test Cases ***\ndiff --git a/src/plone/app/multilingual/tests/robot/test_translate_content.robot b/src/plone/app/multilingual/tests/robot/test_translate_content.robot\nindex 49b03778..5cc97789 100644\n--- a/src/plone/app/multilingual/tests/robot/test_translate_content.robot\n+++ b/src/plone/app/multilingual/tests/robot/test_translate_content.robot\n@@ -1,12 +1,13 @@\n *** Settings ***\n \n-Resource  plone/app/robotframework/selenium.robot\n Resource  plone/app/robotframework/keywords.robot\n+Resource  plone/app/robotframework/saucelabs.robot\n+Resource  plone/app/robotframework/selenium.robot\n \n Library  Remote  ${PLONE_URL}/RobotRemote\n \n-Test Setup  Open test browser\n-Test Teardown  Close all browsers\n+Test Setup  Run Keywords  Plone test setup\n+Test Teardown  Run keywords  Plone test teardown\n \n \n *** Test Cases ***\ndiff --git a/src/plone/app/multilingual/tests/test_selector.py b/src/plone/app/multilingual/tests/test_selector.py\nindex 515bc7da..12edcb4f 100644\n--- a/src/plone/app/multilingual/tests/test_selector.py\n+++ b/src/plone/app/multilingual/tests/test_selector.py\n@@ -11,7 +11,9 @@\n from plone.app.multilingual.interfaces import ITG\n from plone.app.multilingual.testing import PAM_FUNCTIONAL_TESTING\n from plone.app.multilingual.testing import PAM_INTEGRATION_TESTING\n+from plone.app.multilingual.testing import PAM_INTEGRATION_PRESET_TESTING\n from plone.dexterity.utils import createContentInContainer\n+from plone.i18n.interfaces import ILanguageSchema\n from plone.registry.interfaces import IRegistry\n from plone.testing.z2 import Browser\n from Products.CMFCore.utils import getToolByName\n@@ -930,3 +932,142 @@ def assertUrlsEqual(self, url1, url2):\n         self.assertEqual(parsed_url_1[2], parsed_url_2[2])\n         self.assertEqual(parsed_url_1[3], parsed_url_2[3])\n         self.assertEqual(parse_qs_1, parse_qs_2)\n+\n+\n+class TestLanguageSelectorSetLanguage(unittest.TestCase):\n+    layer = PAM_INTEGRATION_PRESET_TESTING\n+\n+    def setUp(self):\n+        # Set test variables\n+        self.portal = self.layer[\'portal\']\n+        self.portal_url = self.portal.absolute_url()\n+        self.request = self.layer[\'request\']\n+        alsoProvides(self.layer[\'request\'], IPloneAppMultilingualInstalled)\n+\n+        registry = getUtility(IRegistry)\n+        self.settings = registry.forInterface(ILanguageSchema, prefix="plone")\n+\n+    def test_set_language_is_present(self):\n+        """ test the presence of set_language parameter in the urls created in the language selector"""\n+\n+        self.settings.set_cookie_always = False\n+        self.selector_viewlet = LanguageSelectorViewlet(\n+            self.portal[\'en\'], self.request, None, None\n+        )\n+        self.selector_viewlet.update()\n+\n+        selector_languages = self.selector_viewlet.languages()\n+        tg = ITG(self.portal[\'en\'])\n+\n+        self.assertListEqual(\n+            selector_languages,\n+            [\n+                {\n+                    \'code\': u\'en\',\n+                    u\'flag\': u\'/++resource++country-flags/gb.gif\',\n+                    u\'name\': u\'English\',\n+                    u\'native\': u\'English\',\n+                    \'url\': SELECTOR_VIEW_TEMPLATE\n+                    % {\n+                        \'url\': self.portal.absolute_url(),\n+                        \'tg\': tg,\n+                        \'lang\': \'en\',\n+                        \'query\': \'?set_language=en\',\n+                    },\n+                    \'selected\': True,\n+                    \'translated\': True,\n+                },\n+                {\n+                    \'code\': u\'ca\',\n+                    u\'flag\': u\'/++resource++language-flags/ca.gif\',\n+                    u\'name\': u\'Catalan\',\n+                    u\'native\': u\'Catal\\xe0\',\n+                    \'url\': SELECTOR_VIEW_TEMPLATE\n+                    % {\n+                        \'url\': self.portal.absolute_url(),\n+                        \'tg\': tg,\n+                        \'lang\': \'ca\',\n+                        \'query\': \'?set_language=ca\',\n+                    },\n+                    \'selected\': False,\n+                    \'translated\': True,\n+                },\n+                {\n+                    \'code\': u\'es\',\n+                    u\'flag\': u\'/++resource++country-flags/es.gif\',\n+                    u\'name\': u\'Spanish\',\n+                    u\'native\': u\'Espa\\xf1ol\',\n+                    \'url\': SELECTOR_VIEW_TEMPLATE\n+                    % {\n+                        \'url\': self.portal.absolute_url(),\n+                        \'tg\': tg,\n+                        \'lang\': \'es\',\n+                        \'query\': \'?set_language=es\',\n+                    },\n+                    \'selected\': False,\n+                    \'translated\': True,\n+                },\n+            ],\n+        )\n+\n+    def test_set_language_is_not_present_when_always_set_cookie_is_set(self):\n+        """ test the absence of set_language parameter in the urls created in the language selector"""\n+        self.settings.set_cookie_always = True\n+        self.selector_viewlet = LanguageSelectorViewlet(\n+            self.portal[\'en\'], self.request, None, None\n+        )\n+        self.selector_viewlet.update()\n+\n+        selector_languages = self.selector_viewlet.languages()\n+        tg = ITG(self.portal[\'en\'])\n+\n+        self.assertListEqual(\n+            selector_languages,\n+            [\n+                {\n+                    \'code\': u\'en\',\n+                    u\'flag\': u\'/++resource++country-flags/gb.gif\',\n+                    u\'name\': u\'English\',\n+                    u\'native\': u\'English\',\n+                    \'url\': SELECTOR_VIEW_TEMPLATE\n+                    % {\n+                        \'url\': self.portal.absolute_url(),\n+                        \'tg\': tg,\n+                        \'lang\': \'en\',\n+                        \'query\': \'\',\n+                    },\n+                    \'selected\': True,\n+                    \'translated\': True,\n+                },\n+                {\n+                    \'code\': u\'ca\',\n+                    u\'flag\': u\'/++resource++language-flags/ca.gif\',\n+                    u\'name\': u\'Catalan\',\n+                    u\'native\': u\'Catal\\xe0\',\n+                    \'url\': SELECTOR_VIEW_TEMPLATE\n+                    % {\n+                        \'url\': self.portal.absolute_url(),\n+                        \'tg\': tg,\n+                        \'lang\': \'ca\',\n+                        \'query\': \'\',\n+                    },\n+                    \'selected\': False,\n+                    \'translated\': True,\n+                },\n+                {\n+                    \'code\': u\'es\',\n+                    u\'flag\': u\'/++resource++country-flags/es.gif\',\n+                    u\'name\': u\'Spanish\',\n+                    u\'native\': u\'Espa\\xf1ol\',\n+                    \'url\': SELECTOR_VIEW_TEMPLATE\n+                    % {\n+                        \'url\': self.portal.absolute_url(),\n+                        \'tg\': tg,\n+                        \'lang\': \'es\',\n+                        \'query\': \'\',\n+                    },\n+                    \'selected\': False,\n+                    \'translated\': True,\n+                },\n+            ],\n+        )\n'

Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2020-02-24T20:55:57+01:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.app.multilingual/commit/d21e54f9d0bdc9e96cd2e677b54d711b6344bb93

Merge remote-tracking branch 'origin/master' into dxcontainer-siteroot

Files changed:
M CHANGES.rst
M setup.py
D .gitattributes
D news/362.feature

b"diff --git a/.gitattributes b/.gitattributes\ndeleted file mode 100644\nindex 6f9ff673..00000000\n--- a/.gitattributes\n+++ /dev/null\n@@ -1 +0,0 @@\n-CHANGES.rst merge=union\ndiff --git a/CHANGES.rst b/CHANGES.rst\nindex 869daa0a..62f46b99 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -8,6 +8,16 @@ Changelog\n \n .. towncrier release notes start\n \n+5.5.0 (2019-12-11)\n+------------------\n+\n+New features:\n+\n+\n+- Remove the 'set_language' parameter when 'always_set_cookie' is enabled in language control panel. See #362\n+  [erral] (#362)\n+\n+\n 5.4.2 (2019-11-25)\n ------------------\n \ndiff --git a/news/362.feature b/news/362.feature\ndeleted file mode 100644\nindex 6eea1d4c..00000000\n--- a/news/362.feature\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Remove the 'set_language' parameter when 'always_set_cookie' is enabled in language control panel. See #362\n-[erral]\ndiff --git a/setup.py b/setup.py\nindex abef5970..1c714ca1 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -5,7 +5,7 @@\n import os\n \n \n-version = '5.4.3.dev0'\n+version = '5.5.1.dev0'\n \n setup(\n     name='plone.app.multilingual',\n"

Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2020-03-29T21:59:04+02:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.app.multilingual/commit/288185ec8057c9b0e00c37d2391d0d3c04777090

Merge remote-tracking branch 'origin/master' into dxcontainer-siteroot

Files changed:
M setup.py

b"diff --git a/setup.py b/setup.py\nindex 1c714ca1..18ccfcd5 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -21,11 +21,13 @@\n         'Development Status :: 5 - Production/Stable',\n         'Framework :: Plone',\n         'Framework :: Plone :: 5.2',\n+        'Framework :: Plone :: Core',\n         'License :: OSI Approved :: GNU General Public License (GPL)',\n         'Programming Language :: Python',\n         'Programming Language :: Python :: 2.7',\n         'Programming Language :: Python :: 3.6',\n         'Programming Language :: Python :: 3.7',\n+        'Programming Language :: Python :: 3.8',\n         'Topic :: Software Development :: Libraries :: Python Modules',\n     ],\n     url='https://github.com/plone/plone.app.multilingual',\n"

Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2020-05-27T20:15:11+02:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.app.multilingual/commit/2ac196bf6d69c58517dc06a3bc78d1bce8a06492

Merge remote-tracking branch 'origin/master' into dxcontainer-siteroot

Files changed:
A CREDITS.rst
A news/373.bugfix
M CHANGES.rst
M setup.cfg
M setup.py
M src/plone/app/multilingual/browser/add.py
M src/plone/app/multilingual/interfaces.py
D docs/CREDITS.txt

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 62f46b99..d9854033 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -8,6 +8,33 @@ Changelog\n \n .. towncrier release notes start\n \n+5.6.0 (2020-05-06)\n+------------------\n+\n+New features:\n+\n+\n+- Inherit IPloneAppMultilingualInstalled layer from IPloneFormLayer for better\n+  LIF widget overriding.\n+  [petschki] (#371)\n+\n+\n+Bug fixes:\n+\n+\n+- Move metadata to setup.cfg in order to avoid encoding problems in CHANGES.rst running Plone 6.0 on Python 3.6, see #372.\n+  [jensens] (#372)\n+\n+\n+5.5.1 (2020-04-20)\n+------------------\n+\n+Bug fixes:\n+\n+\n+- Minor packaging updates. (#1)\n+\n+\n 5.5.0 (2019-12-11)\n ------------------\n \ndiff --git a/docs/CREDITS.txt b/CREDITS.rst\nsimilarity index 100%\nrename from docs/CREDITS.txt\nrename to CREDITS.rst\ndiff --git a/news/373.bugfix b/news/373.bugfix\nnew file mode 100644\nindex 00000000..6cff4e30\n--- /dev/null\n+++ b/news/373.bugfix\n@@ -0,0 +1 @@\n+Hide left and right portlet columns on babel add view. Fixes #373 [iham]\ndiff --git a/setup.cfg b/setup.cfg\nindex 190e1a22..f9b141da 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -1,3 +1,28 @@\n+[metadata]\n+version = 5.6.1.dev0\n+name = plone.app.multilingual\n+description = Multilingual Plone Content package\n+long_description = file: README.rst, CREDITS.rst, CHANGES.rst\n+classifiers=\n+    Development Status :: 5 - Production/Stable\n+    Framework :: Plone\n+    Framework :: Plone :: 5.2\n+    Framework :: Plone :: Core\n+    License :: OSI Approved :: GNU General Public License (GPL)\n+    Programming Language :: Python\n+    Programming Language :: Python :: 2.7\n+    Programming Language :: Python :: 3.6\n+    Programming Language :: Python :: 3.7\n+    Programming Language :: Python :: 3.8\n+    Topic :: Software Development :: Libraries :: Python Modules\n+url = https://github.com/plone/plone.app.multilingual\n+license = GPL\n+keywords = language, multilingual, content\n+author = Ramon Navarro, Victor Fernandez de Alba, awello et al\n+author_email = r.navarro@iskra.cat\n+maintainer = Plone Foundation\n+maintainer_email = releasemanager@plone.org\n+\n [check-manifest]\n ignore =\n     *.cfg\ndiff --git a/setup.py b/setup.py\nindex 18ccfcd5..3848b984 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -2,39 +2,9 @@\n from setuptools import find_packages\n from setuptools import setup\n \n-import os\n-\n-\n-version = \'5.5.1.dev0\'\n \n setup(\n-    name=\'plone.app.multilingual\',\n-    version=version,\n-    description=\'Multilingual Plone UI package, enables maintenance of \'\n-                \'translations for both Dexterity types and Archetypes\',\n-    long_description=\'\\n\\n\'.join([\n-        open(\'README.rst\').read(),\n-        open(os.path.join(\'docs\', \'CREDITS.txt\')).read(),\n-        open(\'CHANGES.rst\').read(),\n-    ]),\n-    classifiers=[\n-        \'Development Status :: 5 - Production/Stable\',\n-        \'Framework :: Plone\',\n-        \'Framework :: Plone :: 5.2\',\n-        \'Framework :: Plone :: Core\',\n-        \'License :: OSI Approved :: GNU General Public License (GPL)\',\n-        \'Programming Language :: Python\',\n-        \'Programming Language :: Python :: 2.7\',\n-        \'Programming Language :: Python :: 3.6\',\n-        \'Programming Language :: Python :: 3.7\',\n-        \'Programming Language :: Python :: 3.8\',\n-        \'Topic :: Software Development :: Libraries :: Python Modules\',\n-    ],\n-    url=\'https://github.com/plone/plone.app.multilingual\',\n-    license=\'GPL\',\n-    keywords=\'language multilingual content\',\n-    author=\'Ramon Navarro, Victor Fernandez de Alba, awello et al\',\n-    author_email=\'r.navarro@iskra.cat\',\n+    # metadata in setup.cfg\n     packages=find_packages(\'src\'),\n     package_dir={\'\': \'src\'},\n     namespace_packages=[\'plone\', \'plone.app\'],\ndiff --git a/src/plone/app/multilingual/browser/add.py b/src/plone/app/multilingual/browser/add.py\nindex 4da120d1..03ef47d8 100644\n--- a/src/plone/app/multilingual/browser/add.py\n+++ b/src/plone/app/multilingual/browser/add.py\n@@ -127,6 +127,8 @@ def portal_url(self):\n \n     def render(self):\n         self.request[\'disable_border\'] = True\n+        self.request[\'disable_plone.leftcolumn\'] = True\n+        self.request[\'disable_plone.rightcolumn\'] = True\n         self.babel_content = super(MultilingualAddForm, self).render()\n         return self.babel()\n \ndiff --git a/src/plone/app/multilingual/interfaces.py b/src/plone/app/multilingual/interfaces.py\nindex ac936295..aa1e83d3 100644\n--- a/src/plone/app/multilingual/interfaces.py\n+++ b/src/plone/app/multilingual/interfaces.py\n@@ -1,5 +1,6 @@\n # -*- coding: utf-8 -*-\n from plone.app.multilingual import _\n+from plone.app.z3cform.interfaces import IPloneFormLayer\n from plone.supermodel import model\n from zope import schema\n from zope.interface import Attribute\n@@ -166,8 +167,8 @@ class ITG(Interface):\n     """\n \n \n-class IPloneAppMultilingualInstalled(Interface):\n-    """ layer """\n+class IPloneAppMultilingualInstalled(IPloneFormLayer):\n+    """ layer inherits from PloneFormLayer for better LIF widget overriding """\n \n \n selector_policies = SimpleVocabulary(\n'

Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2020-07-19T12:25:46+02:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.app.multilingual/commit/f2f1f86989dac60ef62741e6f5129ced090bf48a

Merge remote-tracking branch 'origin/master' into dxcontainer-siteroot

Files changed:
M CHANGES.rst
M setup.cfg
D news/373.bugfix

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex d9854033..207f07e6 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -8,6 +8,15 @@ Changelog\n \n .. towncrier release notes start\n \n+5.6.1 (2020-06-24)\n+------------------\n+\n+Bug fixes:\n+\n+\n+- Hide left and right portlet columns on babel add view. Fixes #373 [iham] (#373)\n+\n+\n 5.6.0 (2020-05-06)\n ------------------\n \ndiff --git a/news/373.bugfix b/news/373.bugfix\ndeleted file mode 100644\nindex 6cff4e30..00000000\n--- a/news/373.bugfix\n+++ /dev/null\n@@ -1 +0,0 @@\n-Hide left and right portlet columns on babel add view. Fixes #373 [iham]\ndiff --git a/setup.cfg b/setup.cfg\nindex f9b141da..333e0508 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -1,5 +1,5 @@\n [metadata]\n-version = 5.6.1.dev0\n+version = 5.6.2.dev0\n name = plone.app.multilingual\n description = Multilingual Plone Content package\n long_description = file: README.rst, CREDITS.rst, CHANGES.rst\n'

Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2020-09-26T18:00:19+02:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.app.multilingual/commit/c3175ff05165eb46f2c6d0fa0446bfddd998712d

Merge remote-tracking branch 'origin/master' into dxcontainer-siteroot

Files changed:
M CHANGES.rst
M setup.cfg
M setup.py
M src/plone/app/multilingual/browser/controlpanel.py
M src/plone/app/multilingual/browser/migrator.py
M src/plone/app/multilingual/events.py
M src/plone/app/multilingual/interfaces.py
M src/plone/app/multilingual/manager.py
M src/plone/app/multilingual/tests/test_helper_views.py

b"diff --git a/CHANGES.rst b/CHANGES.rst\nindex 207f07e6..a4c40b53 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -8,6 +8,19 @@ Changelog\n \n .. towncrier release notes start\n \n+5.6.2 (2020-09-26)\n+------------------\n+\n+Bug fixes:\n+\n+\n+- Fixed deprecation warning for ComponentLookupError.\n+  Fixed deprecation warning for ILanguageSchema, depend on ``plone.i18n`` 4.0.4.\n+  Fixed deprecation warning for IObjectEvent from zope.component.\n+  Fixed deprecation warning for zope.site.hooks.\n+  [maurits] (#3130)\n+\n+\n 5.6.1 (2020-06-24)\n ------------------\n \ndiff --git a/setup.cfg b/setup.cfg\nindex 333e0508..affe4677 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -1,5 +1,5 @@\n [metadata]\n-version = 5.6.2.dev0\n+version = 5.6.3.dev0\n name = plone.app.multilingual\n description = Multilingual Plone Content package\n long_description = file: README.rst, CREDITS.rst, CHANGES.rst\ndiff --git a/setup.py b/setup.py\nindex 3848b984..0dd19a15 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -11,6 +11,7 @@\n     include_package_data=True,\n     zip_safe=False,\n     install_requires=[\n+        'plone.i18n>=4.0.4',\n         'Products.CMFPlone>=5.2rc4',\n         'setuptools',\n         'six',\ndiff --git a/src/plone/app/multilingual/browser/controlpanel.py b/src/plone/app/multilingual/browser/controlpanel.py\nindex 612e8fd1..7f3289e9 100644\n--- a/src/plone/app/multilingual/browser/controlpanel.py\n+++ b/src/plone/app/multilingual/browser/controlpanel.py\n@@ -14,7 +14,7 @@\n from z3c.form import button\n from zc.relation.interfaces import ICatalog as IRelationCatalog\n from zope.component import getUtility\n-from zope.component.interfaces import ComponentLookupError\n+from zope.interface.interfaces import ComponentLookupError\n from zope.i18nmessageid import MessageFactory\n from zope.schema.interfaces import IVocabularyFactory\n \ndiff --git a/src/plone/app/multilingual/browser/migrator.py b/src/plone/app/multilingual/browser/migrator.py\nindex 5b702957..9b21dfac 100644\n--- a/src/plone/app/multilingual/browser/migrator.py\n+++ b/src/plone/app/multilingual/browser/migrator.py\n@@ -14,7 +14,7 @@\n from zc.relation.interfaces import ICatalog\n from zope.component import getUtility\n from zope.component.hooks import getSite\n-from zope.component.interfaces import ComponentLookupError\n+from zope.interface.interfaces import ComponentLookupError\n from zope.interface import Interface\n \n import logging\ndiff --git a/src/plone/app/multilingual/events.py b/src/plone/app/multilingual/events.py\nindex b51ce8c0..f7ec2b70 100644\n--- a/src/plone/app/multilingual/events.py\n+++ b/src/plone/app/multilingual/events.py\n@@ -1,7 +1,7 @@\n # -*- coding: utf-8 -*-\n-from zope.component.interfaces import IObjectEvent\n from zope.interface import Attribute\n from zope.interface import implementer\n+from zope.interface.interfaces import IObjectEvent\n \n \n class IObjectWillBeTranslatedEvent(IObjectEvent):\ndiff --git a/src/plone/app/multilingual/interfaces.py b/src/plone/app/multilingual/interfaces.py\nindex aa1e83d3..cde3ca5a 100644\n--- a/src/plone/app/multilingual/interfaces.py\n+++ b/src/plone/app/multilingual/interfaces.py\n@@ -1,6 +1,7 @@\n # -*- coding: utf-8 -*-\n from plone.app.multilingual import _\n from plone.app.z3cform.interfaces import IPloneFormLayer\n+from plone.i18n.interfaces import ILanguageSchema\n from plone.supermodel import model\n from zope import schema\n from zope.interface import Attribute\n@@ -8,12 +9,6 @@\n from zope.schema.vocabulary import SimpleTerm\n from zope.schema.vocabulary import SimpleVocabulary\n \n-try:\n-    from plone.i18n.interfaces import ILanguageSchema\n-except ImportError:\n-    # BBB for Plone 5.1, remove with Plone 6\n-    from Products.CMFPlone.interfaces import ILanguageSchema\n-\n \n # CONSTANTS\n SHARED_NAME = 'shared'\ndiff --git a/src/plone/app/multilingual/manager.py b/src/plone/app/multilingual/manager.py\nindex aa541e94..8981e66b 100644\n--- a/src/plone/app/multilingual/manager.py\n+++ b/src/plone/app/multilingual/manager.py\n@@ -16,9 +16,9 @@\n from plone.uuid.interfaces import IUUID\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.interfaces import ILanguage\n+from zope.component.hooks import getSite\n from zope.event import notify\n from zope.interface import implementer\n-from zope.site.hooks import getSite\n \n \n @implementer(ITranslationManager)\ndiff --git a/src/plone/app/multilingual/tests/test_helper_views.py b/src/plone/app/multilingual/tests/test_helper_views.py\nindex cad7464b..9f3f07ff 100644\n--- a/src/plone/app/multilingual/tests/test_helper_views.py\n+++ b/src/plone/app/multilingual/tests/test_helper_views.py\n@@ -7,10 +7,10 @@\n from plone.app.testing import TEST_USER_NAME\n from plone.app.testing import TEST_USER_PASSWORD\n from plone.dexterity.utils import createContentInContainer\n+from plone.i18n.interfaces import ILanguageSchema\n from plone.registry.interfaces import IRegistry\n from plone.testing.z2 import Browser\n from Products.CMFPlone.interfaces import ILanguage\n-from Products.CMFPlone.interfaces import ILanguageSchema\n from zope.component import getUtility\n from zope.interface import alsoProvides\n \n"

Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2021-02-10T11:21:18+01:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.multilingual/commit/70fcd00ff539eacf43bff5fb8b06399d6ec55e5c

Minor cleanup and force view_methods to be a tuple as suggested by #341

Files changed:
M src/plone/app/multilingual/browser/setup.py
M src/plone/app/multilingual/setuphandlers.py
M src/plone/app/multilingual/tests/test_menu.py

b'diff --git a/src/plone/app/multilingual/browser/setup.py b/src/plone/app/multilingual/browser/setup.py\nindex 0b7b4990..02475db7 100644\n--- a/src/plone/app/multilingual/browser/setup.py\n+++ b/src/plone/app/multilingual/browser/setup.py\n@@ -264,9 +264,9 @@ def setupLanguageSwitcher(self):\n         tt = getToolByName(self.context, \'portal_types\')\n         site = tt[\'Plone Site\']\n \n-        if \'language-switcher\' not in site.view_methods:\n-            methods = site.view_methods\n-            site.view_methods = list(methods) + [\'language-switcher\', ]\n+        methods = tuple(site.view_methods)\n+        if \'language-switcher\' not in methods:\n+            site.view_methods = methods + (\'language-switcher\', )\n             site.default_view = \'language-switcher\'\n             self.context.reindexObject()\n \ndiff --git a/src/plone/app/multilingual/setuphandlers.py b/src/plone/app/multilingual/setuphandlers.py\nindex 417eebbd..f5846003 100644\n--- a/src/plone/app/multilingual/setuphandlers.py\n+++ b/src/plone/app/multilingual/setuphandlers.py\n@@ -51,13 +51,13 @@ def step_default_various(context):\n def enable_translatable_behavior(portal):\n     types_tool = portal.portal_types\n \n-    # Iterate through all Dexterity content type\n+    # Iterate through all Dexterity content type, except the site root\n     all_ftis = types_tool.listTypeInfo()\n-    dx_ftis = [x for x in all_ftis if getattr(x, \'behaviors\', False)]\n+    dx_ftis = (\n+        fti for fti in all_ftis\n+        if getattr(fti, \'behaviors\', False) and fti.getId() == \'Plone Site\'\n+    )\n     for fti in dx_ftis:\n-        if fti.getId() == \'Plone Site\':\n-            continue\n-\n         # Enable translatable behavior for all types\n         behaviors = list(fti.behaviors)\n         behaviors.extend([\n@@ -97,8 +97,9 @@ def disable_language_switcher(portal):\n     """Remove the use of language-switcher as default view for Plone Site"""\n     tt = getToolByName(portal, \'portal_types\')\n     site = tt[\'Plone Site\']\n-    methods = site.view_methods\n-    site.view_methods = [m for m in methods if m != \'language-switcher\']\n+    site.view_methods = tuple(\n+        method for method in site.view_methods if method != \'language-switcher\'\n+    )\n     if site.default_view == \'language-switcher\':\n         site.default_view = \'listing_view\'\n \ndiff --git a/src/plone/app/multilingual/tests/test_menu.py b/src/plone/app/multilingual/tests/test_menu.py\nindex 59866047..f5276ccd 100644\n--- a/src/plone/app/multilingual/tests/test_menu.py\n+++ b/src/plone/app/multilingual/tests/test_menu.py\n@@ -1,5 +1,6 @@\n # -*- coding: utf-8 -*-\n-from plone.app.multilingual.interfaces import IPloneAppMultilingualInstalled, ITranslatable\n+from plone.app.multilingual.interfaces import IPloneAppMultilingualInstalled\n+from plone.app.multilingual.interfaces import ITranslatable\n from plone.app.multilingual.testing import PAM_FUNCTIONAL_TESTING\n from plone.app.testing import SITE_OWNER_NAME\n from plone.app.testing import SITE_OWNER_PASSWORD\n'

Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2021-02-10T12:58:37+01:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.multilingual/commit/116bcf89313e3b1df31f41d80953700954193d65

Fix typo

Files changed:
M src/plone/app/multilingual/setuphandlers.py

b"diff --git a/src/plone/app/multilingual/setuphandlers.py b/src/plone/app/multilingual/setuphandlers.py\nindex f5846003..91673489 100644\n--- a/src/plone/app/multilingual/setuphandlers.py\n+++ b/src/plone/app/multilingual/setuphandlers.py\n@@ -55,7 +55,7 @@ def enable_translatable_behavior(portal):\n     all_ftis = types_tool.listTypeInfo()\n     dx_ftis = (\n         fti for fti in all_ftis\n-        if getattr(fti, 'behaviors', False) and fti.getId() == 'Plone Site'\n+        if getattr(fti, 'behaviors', False) and fti.getId() != 'Plone Site'\n     )\n     for fti in dx_ftis:\n         # Enable translatable behavior for all types\n"

Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2021-02-10T14:01:59+01:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.multilingual/commit/c5959e08660c37626867e86907ab95e705ebbd40

Merge remote-tracking branch 'origin/master' into dxcontainer-siteroot

Files changed:
A news/337.bugfix

b'diff --git a/news/337.bugfix b/news/337.bugfix\nnew file mode 100644\nindex 00000000..59cb544c\n--- /dev/null\n+++ b/news/337.bugfix\n@@ -0,0 +1 @@\n+Force view_methods to be a tuple on setup and uninstall\n'

Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2021-02-13T13:47:34+01:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.multilingual/commit/4a03d42180519e82d626a0e9e45e3020c9a8f6d7

Merge remote-tracking branch 'origin/master' into dxcontainer-siteroot

Files changed:
M setup.cfg
M src/plone/app/multilingual/browser/javascript/babel_helper.js
M src/plone/app/multilingual/browser/templates/add-form-is-translation.pt
M src/plone/app/multilingual/browser/templates/controlpanel.pt
M src/plone/app/multilingual/browser/templates/dexterity_edit.pt
M src/plone/app/multilingual/browser/templates/modify_translations.pt
M src/plone/app/multilingual/tests/robot/test_add_translation.robot
M src/plone/app/multilingual/tests/robot/test_translate_content.robot
M src/plone/app/multilingual/tests/test_selector.py

b'diff --git a/setup.cfg b/setup.cfg\nindex affe4677..c0b78523 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -1,5 +1,5 @@\n [metadata]\n-version = 5.6.3.dev0\n+version = 6.0.0.dev0\n name = plone.app.multilingual\n description = Multilingual Plone Content package\n long_description = file: README.rst, CREDITS.rst, CHANGES.rst\ndiff --git a/src/plone/app/multilingual/browser/javascript/babel_helper.js b/src/plone/app/multilingual/browser/javascript/babel_helper.js\nindex 4296ef56..0792d47c 100644\n--- a/src/plone/app/multilingual/browser/javascript/babel_helper.js\n+++ b/src/plone/app/multilingual/browser/javascript/babel_helper.js\n@@ -169,7 +169,7 @@\n         });\n     }\n \n-    $(window).load(function () {\n+    $(window).on("load", function () {\n \n         /* alert about language independent field */\n         $(\'.languageindependent\').click(function () {\ndiff --git a/src/plone/app/multilingual/browser/templates/add-form-is-translation.pt b/src/plone/app/multilingual/browser/templates/add-form-is-translation.pt\nindex 13a9b3fb..67af4856 100644\n--- a/src/plone/app/multilingual/browser/templates/add-form-is-translation.pt\n+++ b/src/plone/app/multilingual/browser/templates/add-form-is-translation.pt\n@@ -1,18 +1,27 @@\n <div class="container">\n-  <div class="portalMessage info" role="status">\n-    <strong i18n:translate="" i18n:domain="plone">\n-      Info\n-    </strong>\n-    <tal:block i18n:domain="plone"\n-               i18n:translate="add-form-is-translation">\n-      This object is going to be a translation to <span i18n:name="language" tal:replace="python:view.language_name(view.language())"></span> from:\n-    </tal:block>\n-    <ul>\n-      <li tal:repeat="origin view/origin"><span tal:content="python:view.language_name(origin.Language)"></span>: <a href="#" class="link-overlay" tal:attributes="href origin/getURL">  <span tal:content="origin/Title"></span></a></li>\n-    </ul>\n-    <span i18n:domain="plone" i18n:translate="create-object-without-translation">\n+    <div class="row">\n+        <div class="alert alert-info col-12" role="alert">\n+            <strong i18n:translate="" i18n:domain="plone">\n+                Info\n+            </strong>\n+            <tal:block i18n:domain="plone"\n+                     i18n:translate="add-form-is-translation">\n+                This object is going to be a translation to\n+                <span i18n:name="language" tal:replace="python:view.language_name(view.language())"></span>\n+                from:\n+            </tal:block>\n+            <ul>\n+                <li tal:repeat="origin view/origin">\n+                    <span tal:content="python:view.language_name(origin.Language)"></span>:\n+                    <a href="#"\n+                       class="link-overlay" tal:attributes="href origin/getURL">\n+                        <span tal:content="origin/Title"></span></a></li>\n+            </ul>\n+            <span i18n:domain="plone" i18n:translate="create-object-without-translation">\n       If you want to create this object without being a translation press\n-      <a href="#" class="link-overlay" i18n:name="url" tal:attributes="href view/returnURL" i18n:translate="">here</a>\n+      <a href="#"\n+         class="link-overlay" i18n:name="url" tal:attributes="href view/returnURL" i18n:translate="">here</a>\n     </span>\n-  </div>\n+        </div>\n+    </div>\n </div>\ndiff --git a/src/plone/app/multilingual/browser/templates/controlpanel.pt b/src/plone/app/multilingual/browser/templates/controlpanel.pt\nindex fca5b46e..b13b2dd9 100644\n--- a/src/plone/app/multilingual/browser/templates/controlpanel.pt\n+++ b/src/plone/app/multilingual/browser/templates/controlpanel.pt\n@@ -8,8 +8,9 @@\n \n <body>\n \n-<div metal:fill-slot="prefs_configlet_main">\n+<tal:main metal:fill-slot="prefs_configlet_main">\n \n+  <header>\n     <a id="setup-link" class="link-parent"\n        tal:attributes="href string:$portal_url/@@overview-controlpanel"\n        i18n:translate="">\n@@ -21,27 +22,27 @@\n     <div metal:use-macro="context/global_statusmessage/macros/portal_message">\n       Portal status message\n     </div>\n+  </header>\n+  <div id="content-core">\n+      <div id="layout-contents">\n+          <span tal:replace="structure view/contents" />\n+      </div>\n+      <div class="mt-4">\n+        <p i18n:translate="">\n+          The\n+          <a i18n:name="url" i18n:translate="" tal:attributes="href string:${context/absolute_url}/multilingual-map">multilingual map view\n+          </a>\n+          allows you to view in a graphical manner the already translated items and its relations.\n+        </p>\n+        <p i18n:translate=""\n+            tal:condition="view/isLPinstalled">\n+          In case you want to migrate from Products.LinguaPlone access to the\n+          <a i18n:name="url" i18n:translate="" tal:attributes="href string:${context/absolute_url}/lp-migration">migration procedure.\n+          </a>\n+        </p>\n+      </div>\n+  </div>\n \n-    <div id="content-core">\n-        <div id="layout-contents">\n-            <span tal:replace="structure view/contents" />\n-        </div>\n-        <div>\n-          <p i18n:translate="">\n-            The\n-            <a i18n:name="url" i18n:translate="" tal:attributes="href string:${context/absolute_url}/multilingual-map">multilingual map view\n-            </a>\n-            allows you to view in a graphical manner the already translated items and its relations.\n-          </p>\n-          <p i18n:translate=""\n-             tal:condition="view/isLPinstalled">\n-            In case you want to migrate from Products.LinguaPlone access to the\n-            <a i18n:name="url" i18n:translate="" tal:attributes="href string:${context/absolute_url}/lp-migration">migration procedure.\n-            </a>\n-          </p>\n-        </div>\n-    </div>\n-\n-</div>\n+</tal:main>\n </body>\n </html>\ndiff --git a/src/plone/app/multilingual/browser/templates/dexterity_edit.pt b/src/plone/app/multilingual/browser/templates/dexterity_edit.pt\nindex f1fddce5..90954606 100644\n--- a/src/plone/app/multilingual/browser/templates/dexterity_edit.pt\n+++ b/src/plone/app/multilingual/browser/templates/dexterity_edit.pt\n@@ -11,8 +11,9 @@\n     <script src="++resource++plone.app.multilingual.javascript/babel_helper.js"></script>\n     <input type="hidden" id="url_translate" value="" tal:attributes="value context/absolute_url"/>\n     <input type="hidden" id="gtranslate_service_available" value="" tal:attributes="value pamutils/gtenabled"/>\n+\n     <div class=\'col-md-6\'>\n-        <h1 i18n:translate="heading_available_translations">Available translations for this content</h1>\n+        <h2 i18n:translate="heading_available_translations">Available translations for this content</h2>\n         <div id="trans-selector"\n              tal:define="languages pamutils/translated_languages;\n              max_nr_of_buttons view/max_nr_of_buttons">\n@@ -40,7 +41,7 @@\n     </div>\n     <div class=\'col-md-6\'>\n     <div id="header-translation">\n-        <h1 i18n:translate="translation_to">Translation to <span i18n:name="language" tal:content="pamutils/current_language_name" tal:omit-tag="">es</span></h1>\n+        <h2 i18n:translate="translation_to">Translation to <span i18n:name="language" tal:content="pamutils/current_language_name" tal:omit-tag="">es</span></h2>\n     </div>\n     <div id="form-target">\n       <tal:block content="structure view/babel_content">Content edit</tal:block>\ndiff --git a/src/plone/app/multilingual/browser/templates/modify_translations.pt b/src/plone/app/multilingual/browser/templates/modify_translations.pt\nindex dbddabb8..7a500f81 100644\n--- a/src/plone/app/multilingual/browser/templates/modify_translations.pt\n+++ b/src/plone/app/multilingual/browser/templates/modify_translations.pt\n@@ -10,25 +10,25 @@\n \n <metal:main fill-slot="main">\n \n-  <h1 class="documentFirstHeading"\n-      i18n:translate=""\n-      metal:define-slot="heading">\n-    Modify translations\n-  </h1>\n+    <header>\n+      <h1 class="documentFirstHeading"\n+          i18n:translate=""\n+          metal:define-slot="heading">\n+        Modify translations\n+      </h1>\n \n-  <div class="documentDescription" i18n:translate="long_description_modify_translations">\n-    This form allows you to add or remove translations for the current object.\n-  </div>\n+      <div class="documentDescription" i18n:translate="long_description_modify_translations">\n+        This form allows you to add or remove translations for the current object.\n+      </div>\n+    </header>\n \n   <div id="content-core">\n \n-    <table class="listing" id="translations-overview" summary="Translations overview">\n+    <table class="table table-bordered table-striped table-sm" id="translations-overview" summary="Translations overview">\n       <tal:langs repeat="lang view/available_languages">\n-        <tr tal:define="translation python:view.get_translation(lang);\n-                        oddrow repeat/lang/odd;"\n-            tal:attributes="class python:oddrow and \'odd\' or \'even\'">\n-          <td class="langColumn" tal:define="activeLanguage context/Language|nothing">\n-            <span tal:attributes="class python:lang == activeLanguage and \'activeLanguage\' or None"\n+        <tr tal:define="translation python:view.get_translation(lang);">\n+          <td class="align-middle text-center" tal:define="activeLanguage context/Language|nothing">\n+            <span tal:attributes="class python:lang == activeLanguage and \'activeLanguage font-weight-bold\' or None"\n                   tal:content="lang"></span>\n           </td>\n           <td>\n@@ -42,39 +42,43 @@\n               <h3 class="translationTitle discreet" i18n:translate="">Translation missing</h3>\n             </tal:notranslation>\n           </td>\n-          <td class="actionColumn">\n+          <td class="align-middle text-center">\n             <tal:hastranslation condition="python:translation and translation != context">\n               <a href="#" title="Disconnect translation" class="pat-plone-modal disconnectTranslationAction"\n                  tal:attributes="href string:${context/absolute_url}/disconnect_translation?came_from=${context/UID}&language=${lang}"\n                  i18n:attributes="title disconnect_translation">\n-                  <svg aria-hidden="true" width="14" height="14" viewBox="0 0 1792 1792" xmlns="http://www.w3.org/2000/svg"><path d="M503 1271l-256 256q-10 9-23 9-12 0-23-9-9-10-9-23t9-23l256-256q10-9 23-9t23 9q9 10 9 23t-9 23zm169 41v320q0 14-9 23t-23 9-23-9-9-23v-320q0-14 9-23t23-9 23 9 9 23zm-224-224q0 14-9 23t-23 9h-320q-14 0-23-9t-9-23 9-23 23-9h320q14 0 23 9t9 23zm1264 128q0 120-85 203l-147 146q-83 83-203 83-121 0-204-85l-334-335q-21-21-42-56l239-18 273 274q27 27 68 27.5t68-26.5l147-146q28-28 28-67 0-40-28-68l-274-275 18-239q35 21 56 42l336 336q84 86 84 204zm-617-724l-239 18-273-274q-28-28-68-28-39 0-68 27l-147 146q-28 28-28 67 0 40 28 68l274 274-18 240q-35-21-56-42l-336-336q-84-86-84-204 0-120 85-203l147-146q83-83 203-83 121 0 204 85l334 335q21 21 42 56zm633 84q0 14-9 23t-23 9h-320q-14 0-23-9t-9-23 9-23 23-9h320q14 0 23 9t9 23zm-544-544v320q0 14-9 23t-23 9-23-9-9-23v-320q0-14 9-23t23-9 23 9 9 23zm407 151l-256 256q-11 9-23 9t-23-9q-9-10-9-23t9-23l256-256q10-9 23-9t23 9q9 10 9 23t-9 23z"/></svg>\n-                <span class="actionLabel" i18n:translate="disconnect_translation">Disconnect translation</span>\n+                  <img src="" alt="" width="20" height="20" class="icon me-2"\n+                           tal:attributes="src string:++plone++bootstrap-icons/arrows-angle-expand.svg"/><span \n+                    class="d-none d-md-inline-block text-xs-right" i18n:translate="disconnect_translation">Disconnect translation</span>\n               </a>\n             </tal:hastranslation>\n             <tal:notranslation condition="not:translation">\n               <a href="#" title="Connect existing translation" class="pat-plone-modal connectTranslationAction"\n                  tal:attributes="href string:${context/absolute_url}/connect_translation?language=${lang}"\n                  i18n:attributes="title connect_existing_translation">\n-                  <svg aria-hidden="true" width="14" height="14" viewBox="0 0 1792 1792" xmlns="http://www.w3.org/2000/svg"><path d="M1520 1216q0-40-28-68l-208-208q-28-28-68-28-42 0-72 32 3 3 19 18.5t21.5 21.5 15 19 13 25.5 3.5 27.5q0 40-28 68t-68 28q-15 0-27.5-3.5t-25.5-13-19-15-21.5-21.5-18.5-19q-33 31-33 73 0 40 28 68l206 207q27 27 68 27 40 0 68-26l147-146q28-28 28-67zm-703-705q0-40-28-68l-206-207q-28-28-68-28-39 0-68 27l-147 146q-28 28-28 67 0 40 28 68l208 208q27 27 68 27 42 0 72-31-3-3-19-18.5t-21.5-21.5-15-19-13-25.5-3.5-27.5q0-40 28-68t68-28q15 0 27.5 3.5t25.5 13 19 15 21.5 21.5 18.5 19q33-31 33-73zm895 705q0 120-85 203l-147 146q-83 83-203 83-121 0-204-85l-206-207q-83-83-83-203 0-123 88-209l-88-88q-86 88-208 88-120 0-204-84l-208-208q-84-84-84-204t85-203l147-146q83-83 203-83 121 0 204 85l206 207q83 83 83 203 0 123-88 209l88 88q86-88 208-88 120 0 204 84l208 208q84 84 84 204z"/></svg>\n-                <span class="actionLabel" i18n:translate="connect_existing_translation">Connect existing translation</span>\n+                  <img src="" alt="" width="20" height="20" class="icon me-2"\n+                           tal:attributes="src string:++plone++bootstrap-icons/arrows-angle-contract.svg"/><span \n+                    class="d-none d-md-inline-block" i18n:translate="connect_existing_translation">Connect existing translation</span>\n               </a>\n             </tal:notranslation>\n           </td>\n-          <td class="actionColumn">\n+          <td class="align-middle text-center">\n             <tal:hastranslation condition="python:translation and translation != context">\n               <a href="#" title="Delete translated item" class="pat-plone-modal deleteTranslationAction"\n                  tal:attributes="href string:${translation/absolute_url}/delete_confirmation"\n                  i18n:attributes="title delete_translated_item">\n-                <svg aria-hidden="true" width="14" height="14" viewBox="0 0 1792 1792" xmlns="http://www.w3.org/2000/svg"><path class="icon" d="M704 1376v-704q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v704q0 14 9 23t23 9h64q14 0 23-9t9-23zm256 0v-704q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v704q0 14 9 23t23 9h64q14 0 23-9t9-23zm256 0v-704q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v704q0 14 9 23t23 9h64q14 0 23-9t9-23zm-544-992h448l-48-117q-7-9-17-11h-317q-10 2-17 11zm928 32v64q0 14-9 23t-23 9h-96v948q0 83-47 143.5t-113 60.5h-832q-66 0-113-58.5t-47-141.5v-952h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h309l70-167q15-37 54-63t79-26h320q40 0 79 26t54 63l70 167h309q14 0 23 9t9 23z"/></svg>\n-                <span class="actionLabel" i18n:translate="delete_translated_item">Delete translated item</span>\n+                  <img src="" alt="" width="20" height="20" class="icon me-2"\n+                           tal:attributes="src string:++plone++bootstrap-icons/trash.svg"/><span \n+                    class="d-none d-md-inline-block" i18n:translate="delete_translated_item">Delete translated item</span>\n               </a>\n             </tal:hastranslation>\n             <tal:notranslation condition="not:translation">\n               <a href="#" title="Add translation" class="pat-plone-modal addTranslationAction"\n                  tal:attributes="href string:${context/absolute_url}/@@create_translation?language=${lang}"\n                  i18n:attributes="title add_translation">\n-                  <svg aria-hidden="true" width="14" height="14" viewBox="0 0 1792 1792" xmlns="http://www.w3.org/2000/svg"><path d="M1600 736v192q0 40-28 68t-68 28h-416v416q0 40-28 68t-68 28h-192q-40 0-68-28t-28-68v-416h-416q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h416v-416q0-40 28-68t68-28h192q40 0 68 28t28 68v416h416q40 0 68 28t28 68z"/></svg>\n-                <span class="actionLabel" i18n:translate="add_translation">Add translation</span>\n+                  <img src="" alt="" width="20" height="20"\n+                           tal:attributes="src string:++plone++bootstrap-icons/plus.svg"/><span \n+                    class="d-none d-md-inline-block" i18n:translate="add_translation">Add translation</span>\n               </a>\n             </tal:notranslation>\n           </td>\ndiff --git a/src/plone/app/multilingual/tests/robot/test_add_translation.robot b/src/plone/app/multilingual/tests/robot/test_add_translation.robot\nindex 6f943373..01908b40 100644\n--- a/src/plone/app/multilingual/tests/robot/test_add_translation.robot\n+++ b/src/plone/app/multilingual/tests/robot/test_add_translation.robot\n@@ -72,13 +72,13 @@ I link the document in English as a translation\n   Wait until element is visible  xpath=(//span[contains(., \'An English Document\')])\n   Click Element  xpath=(//span[contains(., \'An English Document\')])\n   Wait until page contains  An English Document\n-\n-  Click Element  xpath=(//*[contains(@class, \'plone-modal-footer\')]//input[@id=\'form-buttons-connect_translation\'])\n+  \n+  Click Element  xpath=(//*[contains(@class, \'plone-modal-footer\')]//button[@id=\'form-buttons-connect_translation\'])\n   Wait until page contains element  xpath=(//h3[@class="translationTitle"])\n   Sleep  5\n   Wait until element is visible  xpath=(//h3[@class="translationTitle"])\n-  Focus  xpath=(//*[@class="odd"]//a[contains(@href,"a-catalan-document")])\n-  Click Element  xpath=(//*[@class="odd"]//a[contains(@href,"a-catalan-document")])\n+  Focus  xpath=(//*[@id="translations-overview"]//a[contains(@href,"a-catalan-document")])\n+  Click Element  xpath=(//*[@id="translations-overview"]//a[contains(text(),\'/plone/ca/a-catalan-document\')])\n   Wait until page contains  A Catalan Document\n \n I switch to English\n@@ -89,6 +89,6 @@ I switch to English\n \n I can view the document in English\n   Wait until page contains element\n-  ...  xpath=//*[contains(@class, \'documentFirstHeading\')][./text()=\'An English Document\']\n+  ...  xpath=//h1[1][contains(text(),\'English Document\')]\n   Wait until page contains element\n   ...  xpath=//ul[@id=\'portal-languageselector\']/li[contains(@class, \'currentLanguage\')]/a[@title=\'English\']\ndiff --git a/src/plone/app/multilingual/tests/robot/test_translate_content.robot b/src/plone/app/multilingual/tests/robot/test_translate_content.robot\nindex 5cc97789..6c3a9d20 100644\n--- a/src/plone/app/multilingual/tests/robot/test_translate_content.robot\n+++ b/src/plone/app/multilingual/tests/robot/test_translate_content.robot\n@@ -74,6 +74,6 @@ I switch to Catalan\n \n I can view the document in Catalan\n   Page Should Contain Element\n-  ...  xpath=//*[contains(@class, \'documentFirstHeading\')][./text()=\'A Catalan Document\']\n+  ...  xpath=//h1[1][text()=\'A Catalan Document\']\n   Page Should Contain Element\n   ...  xpath=//ul[@id=\'portal-languageselector\']/li[contains(@class, \'currentLanguage\')]/a[@title=\'Catal\xc3\xa0\']\ndiff --git a/src/plone/app/multilingual/tests/test_selector.py b/src/plone/app/multilingual/tests/test_selector.py\nindex 12edcb4f..f2b98d54 100644\n--- a/src/plone/app/multilingual/tests/test_selector.py\n+++ b/src/plone/app/multilingual/tests/test_selector.py\n@@ -171,7 +171,7 @@ def assertFullyTranslatedPages(self):\n         self.assertEqual(\n             self.browser.url, a.absolute_url() + \'?set_language=en\'\n         )\n-        self.assertRegexpMatches(self.browser.contents, r"You\\s*are here")\n+        self.assertRegexpMatches(self.browser.contents, r"Distributed under the")\n \n         self.browser.open(selector_viewlet_languages[1][\'url\'])\n         self.assertEqual(\n@@ -311,7 +311,7 @@ def test_languages_partially_translated_by_closest(self):\n         )\n         self.assertIn(\'lang="en"\', self.browser.contents)\n         # But extra check, because English is the default?\n-        self.assertRegexpMatches(self.browser.contents, r"You\\s*are here")\n+        self.assertRegexpMatches(self.browser.contents, r"Distributed under the")\n \n         # Check that CA translation is only partial and a parent folder\n         # is found\n@@ -352,7 +352,7 @@ def test_languages_partially_translated_by_dialog(self):\n         )\n         # But extra check, because English is the default?\n         self.assertIn(\'lang="en"\', self.browser.contents)\n-        self.assertRegexpMatches(self.browser.contents, r"You\\s*are here")\n+        self.assertRegexpMatches(self.browser.contents, r"Distributed under the")\n \n         tgid = selector_languages[1][\'url\'].split(\'/\')[-2]\n \n@@ -399,7 +399,7 @@ def assertSiteRoot(self):\n         )\n         self.browser.open(selector_languages[0][\'url\'])\n         self.assertIn(\'lang="en"\', self.browser.contents)\n-        self.assertRegexpMatches(self.browser.contents, r"You\\s*are here")\n+        self.assertRegexpMatches(self.browser.contents, r"Distributed under the")\n \n         # Check CA root\n         self.assertEqual(\n@@ -508,7 +508,7 @@ def assertRootFolders(self):\n             self.portal[\'en\'].absolute_url() + \'?set_language=en\',\n         )\n         self.assertIn(\'lang="en"\', self.browser.contents)\n-        self.assertRegexpMatches(self.browser.contents, r"You\\s*are here")\n+        self.assertRegexpMatches(self.browser.contents, r"Distributed under the")\n \n         # Check CA\n         self.browser.open(selector_languages[1][\'url\'])\n@@ -572,7 +572,7 @@ def test_languages_preserve_view(self):\n             f_en.absolute_url() + \'/contact-info?set_language=en\',\n         )\n         self.assertIn(\'lang="en"\', self.browser.contents)\n-        self.assertRegexpMatches(self.browser.contents, r"You\\s*are here")\n+        self.assertRegexpMatches(self.browser.contents, r"Distributed under the")\n \n         # Check CA\n         self.browser.open(selector_languages[1][\'url\'])\n@@ -611,7 +611,7 @@ def test_languages_preserve_view(self):\n             f_en.absolute_url() + \'/contact-info?set_language=en\',\n         )\n         self.assertIn(\'lang="en"\', self.browser.contents)\n-        self.assertRegexpMatches(self.browser.contents, r"You\\s*are here")\n+        self.assertRegexpMatches(self.browser.contents, r"Distributed under the")\n \n         # Check CA\n         self.browser.open(selector_languages[1][\'url\'])\n@@ -676,7 +676,7 @@ def assertLanguagesPreserveQuery(self, policy):\n             ),\n         )\n         self.assertIn(\'lang="en"\', self.browser.contents)\n-        self.assertRegexpMatches(self.browser.contents, r"You\\s*are here")\n+        self.assertRegexpMatches(self.browser.contents, r"Distributed under the")\n \n         # Check CA\n         self.browser.open(selector_languages[1][\'url\'])\n'

Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2021-04-23T11:57:50+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.multilingual/commit/95885091f16abb72844191edad4b4cf7c2ea02a4

Merge remote-tracking branch 'origin/master' into dxcontainer-siteroot

Files changed:
M setup.cfg

b'diff --git a/setup.cfg b/setup.cfg\nindex c0b78523..5a70c0bd 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -5,16 +5,16 @@ description = Multilingual Plone Content package\n long_description = file: README.rst, CREDITS.rst, CHANGES.rst\n classifiers=\n     Development Status :: 5 - Production/Stable\n+    Environment :: Web Environment\n     Framework :: Plone\n-    Framework :: Plone :: 5.2\n+    Framework :: Plone :: 6.0\n     Framework :: Plone :: Core\n-    License :: OSI Approved :: GNU General Public License (GPL)\n+    Framework :: Zope :: 5\n+    License :: OSI Approved :: GNU General Public License v2 (GPLv2)\n+    Operating System :: OS Independent\n     Programming Language :: Python\n-    Programming Language :: Python :: 2.7\n-    Programming Language :: Python :: 3.6\n     Programming Language :: Python :: 3.7\n     Programming Language :: Python :: 3.8\n-    Topic :: Software Development :: Libraries :: Python Modules\n url = https://github.com/plone/plone.app.multilingual\n license = GPL\n keywords = language, multilingual, content\n'

Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2021-08-20T11:17:12+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.multilingual/commit/3c6c3c98363d1066efd006a441a96a06749362e3

Merge pull request #336 from plone/dxcontainer-siteroot

Dx container site root

Files changed:
M CHANGES.rst
M src/plone/app/multilingual/browser/setup.py
M src/plone/app/multilingual/setuphandlers.py
M src/plone/app/multilingual/tests/test_menu.py
M src/plone/app/multilingual/tests/test_setup.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex a54a2782..a064aacf 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -260,6 +260,10 @@ Bug fixes:\n - Fixed tests now that Catalan has translated \xe2\x80\x98assets\xe2\x80\x99 into \xe2\x80\x98recursos\xe2\x80\x99.\n   [maurits]\n \n+- Run addAttributeTG for the site root when installing. This prevents\n+  triggering plone.protect.\n+  [jaroel]\n+\n \n 5.2.0 (2018-04-04)\n ------------------\ndiff --git a/src/plone/app/multilingual/browser/setup.py b/src/plone/app/multilingual/browser/setup.py\nindex 9fc3c027..02475db7 100644\n--- a/src/plone/app/multilingual/browser/setup.py\n+++ b/src/plone/app/multilingual/browser/setup.py\n@@ -264,8 +264,8 @@ def setupLanguageSwitcher(self):\n         tt = getToolByName(self.context, \'portal_types\')\n         site = tt[\'Plone Site\']\n \n-        if \'language-switcher\' not in site.view_methods:\n-            methods = tuple(site.view_methods)\n+        methods = tuple(site.view_methods)\n+        if \'language-switcher\' not in methods:\n             site.view_methods = methods + (\'language-switcher\', )\n             site.default_view = \'language-switcher\'\n             self.context.reindexObject()\ndiff --git a/src/plone/app/multilingual/setuphandlers.py b/src/plone/app/multilingual/setuphandlers.py\nindex 1145a44e..91673489 100644\n--- a/src/plone/app/multilingual/setuphandlers.py\n+++ b/src/plone/app/multilingual/setuphandlers.py\n@@ -1,6 +1,8 @@\n # -*- coding: utf-8 -*-\n from logging import getLogger\n from plone.app.multilingual.browser.setup import SetupMultilingualSite\n+from plone.app.multilingual.interfaces import ITranslatable\n+from plone.app.multilingual.itg import addAttributeTG\n from Products.CMFPlone.interfaces import INonInstallable\n from Products.CMFPlone.utils import getToolByName\n from zope.component.hooks import getSite\n@@ -42,15 +44,20 @@ def step_default_various(context):\n     portal = context.getSite()\n     enable_translatable_behavior(portal)\n \n+    # Add the attribute to the site root now so plone.protect won\'t cry.\n+    addAttributeTG(portal, None)\n+\n \n def enable_translatable_behavior(portal):\n     types_tool = portal.portal_types\n \n-    # Iterate through all Dexterity content type\n+    # Iterate through all Dexterity content type, except the site root\n     all_ftis = types_tool.listTypeInfo()\n-    dx_ftis = [x for x in all_ftis if getattr(x, \'behaviors\', False)]\n+    dx_ftis = (\n+        fti for fti in all_ftis\n+        if getattr(fti, \'behaviors\', False) and fti.getId() != \'Plone Site\'\n+    )\n     for fti in dx_ftis:\n-\n         # Enable translatable behavior for all types\n         behaviors = list(fti.behaviors)\n         behaviors.extend([\n@@ -90,8 +97,9 @@ def disable_language_switcher(portal):\n     """Remove the use of language-switcher as default view for Plone Site"""\n     tt = getToolByName(portal, \'portal_types\')\n     site = tt[\'Plone Site\']\n-    methods = site.view_methods\n-    site.view_methods = tuple([m for m in methods if m != \'language-switcher\'])\n+    site.view_methods = tuple(\n+        method for method in site.view_methods if method != \'language-switcher\'\n+    )\n     if site.default_view == \'language-switcher\':\n         site.default_view = \'listing_view\'\n \ndiff --git a/src/plone/app/multilingual/tests/test_menu.py b/src/plone/app/multilingual/tests/test_menu.py\nindex 2a92bf99..f5276ccd 100644\n--- a/src/plone/app/multilingual/tests/test_menu.py\n+++ b/src/plone/app/multilingual/tests/test_menu.py\n@@ -1,5 +1,6 @@\n # -*- coding: utf-8 -*-\n from plone.app.multilingual.interfaces import IPloneAppMultilingualInstalled\n+from plone.app.multilingual.interfaces import ITranslatable\n from plone.app.multilingual.testing import PAM_FUNCTIONAL_TESTING\n from plone.app.testing import SITE_OWNER_NAME\n from plone.app.testing import SITE_OWNER_PASSWORD\n@@ -45,6 +46,7 @@ def test_menu_does_not_contain_translated_entries(self):\n         self.assertNotIn(\'translate_into_ca\', self.browser.contents)\n \n     def test_menu_does_not_appear_without_ITranslatable(self):\n+        self.assertFalse(ITranslatable.providedBy(self.portal))\n         self.browser.open(self.portal.absolute_url() + \'/folder_listing\')\n         self.assertNotIn(\'Translate\', self.browser.contents)\n \ndiff --git a/src/plone/app/multilingual/tests/test_setup.py b/src/plone/app/multilingual/tests/test_setup.py\nindex a288059a..c656e44a 100644\n--- a/src/plone/app/multilingual/tests/test_setup.py\n+++ b/src/plone/app/multilingual/tests/test_setup.py\n@@ -1,7 +1,11 @@\n # -*- coding: utf-8 -*-\n+from Acquisition import aq_base\n from plone.app.multilingual.browser.setup import SetupMultilingualSite\n from plone.app.multilingual.browser.vocabularies import AllContentLanguageVocabulary  # noqa: E501\n+from plone.app.multilingual.interfaces import ATTRIBUTE_NAME\n from plone.app.multilingual.interfaces import IPloneAppMultilingualInstalled\n+from plone.app.multilingual.interfaces import ITG\n+from plone.app.multilingual.interfaces import ITranslatable\n from plone.app.multilingual.testing import PAM_INTEGRATION_PRESET_TESTING\n from plone.app.multilingual.testing import PAM_INTEGRATION_TESTING\n from Products.CMFCore.utils import getToolByName\n@@ -27,6 +31,11 @@ def test_single_language(self):\n         """Only one language is set."""\n         self.assertEqual(len(self.languages), 1)\n \n+    def test_portal_has_tg_attribute(self):\n+        """The site root should have the TG attribute set after installing"""\n+        tg_attribute = getattr(aq_base(self.portal), ATTRIBUTE_NAME, None)\n+        self.assertIsNotNone(tg_attribute)\n+\n     def test_no_languagefolder_created(self):\n         """On a single language no folder creation is done."""\n         portal_objects = self.portal.objectIds()\n'

