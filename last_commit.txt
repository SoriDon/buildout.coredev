Repository: plone.restapi


Branch: refs/heads/master
Date: 2023-02-17T12:51:09-03:00
Author: Ã‰rico Andrei (ericof) <ericof@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/836f92dd07c8acfc0c4607103487f2c71c02d837

Implement IPurgePaths for RestAPI traversal (#1588)

* Implement IPurgePaths for RestAPI traversal

* Lint fixes

Files changed:
A news/1587.feature
A src/plone/restapi/cache/__init__.py
A src/plone/restapi/cache/configure.zcml
A src/plone/restapi/cache/paths.py
A src/plone/restapi/tests/test_cache_purge_urls.py
M src/plone/restapi/configure.zcml

b'diff --git a/news/1587.feature b/news/1587.feature\nnew file mode 100644\nindex 000000000..682a36ba7\n--- /dev/null\n+++ b/news/1587.feature\n@@ -0,0 +1 @@\n+Implement IPurgePaths for RestAPI traversal (++api++) @ericof\n\\ No newline at end of file\ndiff --git a/src/plone/restapi/cache/__init__.py b/src/plone/restapi/cache/__init__.py\nnew file mode 100644\nindex 000000000..e69de29bb\ndiff --git a/src/plone/restapi/cache/configure.zcml b/src/plone/restapi/cache/configure.zcml\nnew file mode 100644\nindex 000000000..3a5e47d4c\n--- /dev/null\n+++ b/src/plone/restapi/cache/configure.zcml\n@@ -0,0 +1,13 @@\n+<configure\n+    xmlns="http://namespaces.zope.org/zope"\n+    xmlns:zcml="http://namespaces.zope.org/zcml"\n+    >\n+\n+  <!-- Paths to purge -->\n+  <adapter\n+      factory=".paths.RestAPIPurgePaths"\n+      name="plone.restapi"\n+      zcml:condition="have plone-app-caching-3"\n+      />\n+\n+</configure>\ndiff --git a/src/plone/restapi/cache/paths.py b/src/plone/restapi/cache/paths.py\nnew file mode 100644\nindex 000000000..dc7b7ab8f\n--- /dev/null\n+++ b/src/plone/restapi/cache/paths.py\n@@ -0,0 +1,69 @@\n+from Acquisition import aq_parent\n+from plone.dexterity.content import DexterityContent\n+from plone.dexterity.interfaces import IDexterityContent\n+from typing import List\n+from z3c.caching.interfaces import IPurgePaths\n+from zope.component import adapter\n+from zope.interface import implementer\n+\n+\n+CONTEXT_ENDPOINTS = [\n+    "/@actions",\n+    "/@breadcrumbs",\n+    "/@comments",\n+    "/@navigation",\n+]\n+\n+\n+PARENT_ENDPOINTS = [\n+    "/@navigation",\n+]\n+\n+\n+@implementer(IPurgePaths)\n+@adapter(IDexterityContent)\n+class RestAPIPurgePaths:\n+    """RestAPI paths to purge for content items."""\n+\n+    TRAVERSAL_PREFIX: str = "/++api++"\n+\n+    def __init__(self, context: DexterityContent):\n+        """Initialize RestAPIPurgePaths."""\n+        self.context = context\n+\n+    def getRelativePaths(self) -> List[str]:\n+        """Return a list of paths that should be purged. The paths should be\n+        relative to the virtual hosting root, i.e. they should start with a\n+        \'/\'.\n+\n+        These paths will be rewritten to incorporate virtual hosting if\n+        necessary.\n+        """\n+        prefix = self.TRAVERSAL_PREFIX\n+        base_path = f"/{self.context.virtual_url_path()}"\n+        paths = [f"{prefix}{base_path}"]\n+\n+        # Add service endpoints for content\n+        for endpoint in CONTEXT_ENDPOINTS:\n+            path = f"{prefix}{base_path}{endpoint}"\n+            paths.append(path)\n+\n+        # Process parent context\n+        parent = aq_parent(self.context)\n+        if parent is None:\n+            return paths\n+\n+        base_path = f"/{parent.virtual_url_path()}"\n+        # Add service endpoints for parent\n+        for endpoint in PARENT_ENDPOINTS:\n+            path = f"{prefix}{base_path}{endpoint}".replace("//", "/")\n+            paths.append(path)\n+        return paths\n+\n+    def getAbsolutePaths(self) -> List[str]:\n+        """Return a list of paths that should be purged. The paths should be\n+        relative to the domain root, i.e. they should start with a \'/\'.\n+\n+        These paths will *not* be rewritten to incorporate virtual hosting.\n+        """\n+        return []\ndiff --git a/src/plone/restapi/configure.zcml b/src/plone/restapi/configure.zcml\nindex 5b1c55725..e3202531e 100644\n--- a/src/plone/restapi/configure.zcml\n+++ b/src/plone/restapi/configure.zcml\n@@ -97,6 +97,7 @@\n   <include package=".deserializer" />\n   <include package=".types" />\n   <include package=".search" />\n+  <include package=".cache" />\n \n   <include package=".upgrades" />\n \ndiff --git a/src/plone/restapi/tests/test_cache_purge_urls.py b/src/plone/restapi/tests/test_cache_purge_urls.py\nnew file mode 100644\nindex 000000000..6425f4c9b\n--- /dev/null\n+++ b/src/plone/restapi/tests/test_cache_purge_urls.py\n@@ -0,0 +1,76 @@\n+from Acquisition import aq_base\n+from Acquisition import Explicit\n+from plone.restapi.cache.paths import RestAPIPurgePaths\n+from plone.testing.zca import UNIT_TESTING\n+from Products.CMFCore.interfaces import IContentish\n+from Products.CMFDynamicViewFTI.interfaces import IBrowserDefault\n+from zope.interface import implementer\n+\n+import unittest\n+\n+\n+@implementer(IContentish)\n+class FauxNonContent(Explicit):\n+    def __init__(self, name=None):\n+        self.__name__ = name\n+        self.__parent__ = None  # may be overridden by acquisition\n+\n+    def getId(self):\n+        return self.__name__\n+\n+    def virtual_url_path(self):\n+        parent = aq_base(self.__parent__)\n+        if parent is not None:\n+            return f"{parent.virtual_url_path()}/{self.__name__}"\n+        else:\n+            return self.__name__\n+\n+    def getPhysicalPath(self):\n+        return ("",)\n+\n+    def getParentNode(self):\n+        return FauxNonContent("folder")\n+\n+\n+@implementer(IBrowserDefault)\n+class FauxContent(FauxNonContent):\n+    portal_type = "testtype"\n+\n+    def defaultView(self):\n+        return "default-view"\n+\n+\n+class TestRestAPIPurgePaths(unittest.TestCase):\n+    layer = UNIT_TESTING\n+\n+    def test_no_parent(self):\n+        context = FauxNonContent("foo")\n+        purger = RestAPIPurgePaths(context)\n+\n+        self.assertEqual(\n+            [\n+                "/++api++/foo",\n+                "/++api++/foo/@actions",\n+                "/++api++/foo/@breadcrumbs",\n+                "/++api++/foo/@comments",\n+                "/++api++/foo/@navigation",\n+            ],\n+            list(purger.getRelativePaths()),\n+        )\n+        self.assertEqual([], list(purger.getAbsolutePaths()))\n+\n+    def test_parent(self):\n+        context = FauxContent("foo").__of__(FauxContent("bar"))\n+        purger = RestAPIPurgePaths(context)\n+        self.assertEqual(\n+            [\n+                "/++api++/bar/foo",\n+                "/++api++/bar/foo/@actions",\n+                "/++api++/bar/foo/@breadcrumbs",\n+                "/++api++/bar/foo/@comments",\n+                "/++api++/bar/foo/@navigation",\n+                "/++api++/bar/@navigation",\n+            ],\n+            list(purger.getRelativePaths()),\n+        )\n+        self.assertEqual([], list(purger.getAbsolutePaths()))\n'

