Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2023-11-24T18:42:38+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/dae2875d768a1163ac1eaa0747c922534f0b8e05

Correct the behavior interface for lead image in the syndication adapter.

Files changed:
A news/3875.bugfix
M Products/CMFPlone/browser/syndication/adapters.py

b'diff --git a/Products/CMFPlone/browser/syndication/adapters.py b/Products/CMFPlone/browser/syndication/adapters.py\nindex 2d745e46e0..cf0788ba25 100644\n--- a/Products/CMFPlone/browser/syndication/adapters.py\n+++ b/Products/CMFPlone/browser/syndication/adapters.py\n@@ -1,6 +1,6 @@\n from DateTime import DateTime\n from OFS.interfaces import IItem\n-from plone.app.contenttypes.behaviors.leadimage import ILeadImage\n+from plone.app.contenttypes.behaviors.leadimage import ILeadImageBehavior\n from plone.base.interfaces.syndication import IFeed\n from plone.base.interfaces.syndication import IFeedItem\n from plone.base.interfaces.syndication import IFeedSettings\n@@ -273,7 +273,7 @@ class DexterityItem(BaseItem):\n     def __init__(self, context, feed):\n         super().__init__(context, feed)\n         self.dexterity = IDexterityContent.providedBy(context)\n-        lead = ILeadImage(self.context, None)\n+        lead = ILeadImageBehavior(self.context, None)\n         if lead:\n             if (\n                 lead.image\ndiff --git a/news/3875.bugfix b/news/3875.bugfix\nnew file mode 100644\nindex 0000000000..5ef04b030d\n--- /dev/null\n+++ b/news/3875.bugfix\n@@ -0,0 +1,2 @@\n+Correct the behavior interface for lead image in the syndication adapter.\n+[thet]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2023-12-04T13:18:45+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/70ac85e4cafdf88baf66126ee86772291970481d

Merge branch 'master' into fix-leadimage-61

Files changed:
A news/3873.bugfix
A news/3876.bugfix
M Products/CMFPlone/browser/admin.py
M Products/CMFPlone/browser/syndication/adapters.py
M Products/CMFPlone/browser/syndication/settings.py
M Products/CMFPlone/browser/templates/plone-overview.pt
M Products/CMFPlone/controlpanel/bbb/editing.py
M Products/CMFPlone/controlpanel/bbb/filter.py
M Products/CMFPlone/controlpanel/bbb/language.py
M Products/CMFPlone/controlpanel/bbb/mail.py
M Products/CMFPlone/controlpanel/bbb/maintenance.py
M Products/CMFPlone/controlpanel/bbb/markup.py
M Products/CMFPlone/controlpanel/bbb/search.py
M Products/CMFPlone/controlpanel/bbb/security.py
M Products/CMFPlone/controlpanel/bbb/site.py
M Products/CMFPlone/controlpanel/bbb/usergroups.py
M Products/CMFPlone/controlpanel/browser/actions.py

b'diff --git a/Products/CMFPlone/browser/admin.py b/Products/CMFPlone/browser/admin.py\nindex 44714defb8..6c96868982 100644\n--- a/Products/CMFPlone/browser/admin.py\n+++ b/Products/CMFPlone/browser/admin.py\n@@ -19,7 +19,7 @@\n from Products.GenericSetup.upgrade import normalize_version\n from urllib import parse\n from ZODB.broken import Broken\n-from zope.component import adapts\n+from zope.component import adapter\n from zope.component import getAllUtilitiesRegisteredFor\n from zope.component import getUtility\n from zope.component import queryMultiAdapter\n@@ -46,9 +46,8 @@\n LOGGER = logging.getLogger("Products.CMFPlone")\n \n \n+@adapter(IApplication, IRequest)\n class AppTraverser(DefaultPublishTraverse):\n-    adapts(IApplication, IRequest)\n-\n     def publishTraverse(self, request, name):\n         if name == "index_html":\n             view = queryMultiAdapter(\ndiff --git a/Products/CMFPlone/browser/syndication/adapters.py b/Products/CMFPlone/browser/syndication/adapters.py\nindex cf0788ba25..4d51bb1507 100644\n--- a/Products/CMFPlone/browser/syndication/adapters.py\n+++ b/Products/CMFPlone/browser/syndication/adapters.py\n@@ -14,7 +14,7 @@\n from Products.CMFPlone.utils import getSiteLogo\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from zope.cachedescriptors.property import Lazy as lazy_property\n-from zope.component import adapts\n+from zope.component import adapter\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n from zope.component import queryMultiAdapter\n@@ -129,9 +129,7 @@ def _brains(self):\n         )\n \n     def _items(self):\n-        """\n-        do catalog query\n-        """\n+        """Do catalog query."""\n         return [b.getObject() for b in self._brains()]\n \n     @property\n@@ -173,9 +171,9 @@ def _brains(self):\n         )[start:end]\n \n \n+@adapter(IItem, IFeed)\n @implementer(IFeedItem)\n class BaseItem(BaseFeedData):\n-    adapts(IItem, IFeed)\n \n     def __init__(self, context, feed):\n         self.context = context\n@@ -264,8 +262,8 @@ def file_type(self):\n         return self.file.getContentType()\n \n \n+@adapter(IDexterityContent, IFeed)\n class DexterityItem(BaseItem):\n-    adapts(IDexterityContent, IFeed)\n \n     file = None\n     field_name = ""\ndiff --git a/Products/CMFPlone/browser/syndication/settings.py b/Products/CMFPlone/browser/syndication/settings.py\nindex 179f55e6f0..2e31772107 100644\n--- a/Products/CMFPlone/browser/syndication/settings.py\n+++ b/Products/CMFPlone/browser/syndication/settings.py\n@@ -4,7 +4,7 @@\n from plone.base.interfaces.syndication import ISyndicatable\n from plone.registry.interfaces import IRegistry\n from zope.annotation.interfaces import IAnnotations\n-from zope.component import adapts\n+from zope.component import adapter\n from zope.component import getUtility\n from zope.interface import implementer\n \n@@ -12,10 +12,9 @@\n FEED_SETTINGS_KEY = "syndication_settings"\n \n \n+@adapter(ISyndicatable)\n @implementer(IFeedSettings)\n class FeedSettings:\n-    adapts(ISyndicatable)\n-\n     def __init__(self, context):\n         self.context = context\n         self.annotations = IAnnotations(context)\ndiff --git a/Products/CMFPlone/browser/templates/plone-overview.pt b/Products/CMFPlone/browser/templates/plone-overview.pt\nindex d84963c36b..035f0b4856 100644\n--- a/Products/CMFPlone/browser/templates/plone-overview.pt\n+++ b/Products/CMFPlone/browser/templates/plone-overview.pt\n@@ -92,7 +92,7 @@\n                     i18n:translate=""\n                     tal:condition="view/has_volto"\n                     href="${action}?site_id=Plone${site_number}&amp;classic=1"\n-                    >Create Classic Plone site</a>\n+                    >Create Classic UI Plone site</a>\n                 <a class="btn btn-secondary"\n                     i18n:translate=""\n                     href="${action}?site_id=Plone${site_number}&amp;advanced=1"\n@@ -106,7 +106,7 @@\n                 an additional frontend service to use this setup.\n             </p>\n             <p i18n:translate="help_create_plone_site_buttons_2">\n-                The \'Create Classic Plone site\' button creates a Plone site configured\n+                The \'Create Classic UI Plone site\' button creates a Plone site configured\n                 for HTML based output, as was already supported by previous Plone versions.\n                 Please consult our\n                 <a href="https://6.docs.plone.org/" title="Plone 6 developer documentation"\ndiff --git a/Products/CMFPlone/controlpanel/bbb/editing.py b/Products/CMFPlone/controlpanel/bbb/editing.py\nindex c3feaacd46..7b17529be7 100644\n--- a/Products/CMFPlone/controlpanel/bbb/editing.py\n+++ b/Products/CMFPlone/controlpanel/bbb/editing.py\n@@ -1,15 +1,14 @@\n from plone.base.interfaces import IEditingSchema\n from plone.base.interfaces import IPloneSiteRoot\n from plone.registry.interfaces import IRegistry\n-from zope.component import adapts\n+from zope.component import adapter\n from zope.component import getUtility\n from zope.interface import implementer\n \n \n+@adapter(IPloneSiteRoot)\n @implementer(IEditingSchema)\n class EditingControlPanelAdapter:\n-    adapts(IPloneSiteRoot)\n-\n     def __init__(self, context):\n         registry = getUtility(IRegistry)\n         self.settings = registry.forInterface(IEditingSchema, prefix="plone")\ndiff --git a/Products/CMFPlone/controlpanel/bbb/filter.py b/Products/CMFPlone/controlpanel/bbb/filter.py\nindex bd96a3d563..8dbcd2d526 100644\n--- a/Products/CMFPlone/controlpanel/bbb/filter.py\n+++ b/Products/CMFPlone/controlpanel/bbb/filter.py\n@@ -1,15 +1,14 @@\n from plone.base.interfaces import IFilterSchema\n from plone.base.interfaces import IPloneSiteRoot\n from plone.registry.interfaces import IRegistry\n-from zope.component import adapts\n+from zope.component import adapter\n from zope.component import getUtility\n from zope.interface import implementer\n \n \n+@adapter(IPloneSiteRoot)\n @implementer(IFilterSchema)\n class FilterControlPanelAdapter:\n-    adapts(IPloneSiteRoot)\n-\n     def __init__(self, context):\n         registry = getUtility(IRegistry)\n         self.settings = registry.forInterface(IFilterSchema, prefix="plone")\ndiff --git a/Products/CMFPlone/controlpanel/bbb/language.py b/Products/CMFPlone/controlpanel/bbb/language.py\nindex 56569adf91..55e7aa61d1 100644\n--- a/Products/CMFPlone/controlpanel/bbb/language.py\n+++ b/Products/CMFPlone/controlpanel/bbb/language.py\n@@ -1,15 +1,14 @@\n from plone.base.interfaces import IPloneSiteRoot\n from plone.i18n.interfaces import ILanguageSchema\n from plone.registry.interfaces import IRegistry\n-from zope.component import adapts\n+from zope.component import adapter\n from zope.component import getUtility\n from zope.interface import implementer\n \n \n+@adapter(IPloneSiteRoot)\n @implementer(ILanguageSchema)\n class LanguageControlPanelAdapter:\n-    adapts(IPloneSiteRoot)\n-\n     def __init__(self, context):\n         self.context = context\n         registry = getUtility(IRegistry)\ndiff --git a/Products/CMFPlone/controlpanel/bbb/mail.py b/Products/CMFPlone/controlpanel/bbb/mail.py\nindex f1c89d8682..1fb5a3a918 100644\n--- a/Products/CMFPlone/controlpanel/bbb/mail.py\n+++ b/Products/CMFPlone/controlpanel/bbb/mail.py\n@@ -2,16 +2,15 @@\n from plone.base.interfaces.controlpanel import IMailSchema\n from plone.base.utils import safe_hasattr\n from plone.registry.interfaces import IRegistry\n-from zope.component import adapts\n+from zope.component import adapter\n from zope.component import getUtility\n from zope.component.hooks import getSite\n from zope.interface import implementer\n \n \n+@adapter(IPloneSiteRoot)\n @implementer(IMailSchema)\n class MailControlPanelAdapter:\n-    adapts(IPloneSiteRoot)\n-\n     def __init__(self, context):\n         self.context = context\n         self.portal = getSite()\ndiff --git a/Products/CMFPlone/controlpanel/bbb/maintenance.py b/Products/CMFPlone/controlpanel/bbb/maintenance.py\nindex 500008a2a0..62e559e885 100644\n--- a/Products/CMFPlone/controlpanel/bbb/maintenance.py\n+++ b/Products/CMFPlone/controlpanel/bbb/maintenance.py\n@@ -1,15 +1,14 @@\n from plone.base.interfaces import IMaintenanceSchema\n from plone.base.interfaces import IPloneSiteRoot\n from plone.registry.interfaces import IRegistry\n-from zope.component import adapts\n+from zope.component import adapter\n from zope.component import getUtility\n from zope.interface import implementer\n \n \n+@adapter(IPloneSiteRoot)\n @implementer(IMaintenanceSchema)\n class MaintenanceControlPanelAdapter:\n-    adapts(IPloneSiteRoot)\n-\n     def __init__(self, context):\n         self.context = context\n         registry = getUtility(IRegistry)\ndiff --git a/Products/CMFPlone/controlpanel/bbb/markup.py b/Products/CMFPlone/controlpanel/bbb/markup.py\nindex 1f9814a3b7..3c85dec85e 100644\n--- a/Products/CMFPlone/controlpanel/bbb/markup.py\n+++ b/Products/CMFPlone/controlpanel/bbb/markup.py\n@@ -1,15 +1,14 @@\n from plone.base.interfaces import IMarkupSchema\n from plone.base.interfaces.siteroot import IPloneSiteRoot\n from plone.registry.interfaces import IRegistry\n-from zope.component import adapts\n+from zope.component import adapter\n from zope.component import getUtility\n from zope.interface import implementer\n \n \n+@adapter(IPloneSiteRoot)\n @implementer(IMarkupSchema)\n class MarkupControlPanelAdapter:\n-    adapts(IPloneSiteRoot)\n-\n     def __init__(self, context):\n         registry = getUtility(IRegistry)\n         self.settings = registry.forInterface(IMarkupSchema, prefix="plone")\ndiff --git a/Products/CMFPlone/controlpanel/bbb/search.py b/Products/CMFPlone/controlpanel/bbb/search.py\nindex 9f0562ad68..3c2d3f394e 100644\n--- a/Products/CMFPlone/controlpanel/bbb/search.py\n+++ b/Products/CMFPlone/controlpanel/bbb/search.py\n@@ -1,16 +1,15 @@\n from plone.base.interfaces import ISearchSchema\n from plone.base.interfaces.siteroot import IPloneSiteRoot\n from plone.registry.interfaces import IRegistry\n-from zope.component import adapts\n+from zope.component import adapter\n from zope.component import getUtility\n from zope.component.hooks import getSite\n from zope.interface import implementer\n \n \n+@adapter(IPloneSiteRoot)\n @implementer(ISearchSchema)\n class SearchControlPanelAdapter:\n-    adapts(IPloneSiteRoot)\n-\n     def __init__(self, context):\n         self.portal = getSite()\n         registry = getUtility(IRegistry)\ndiff --git a/Products/CMFPlone/controlpanel/bbb/security.py b/Products/CMFPlone/controlpanel/bbb/security.py\nindex 7450b9a4a9..f5d36aa0c4 100644\n--- a/Products/CMFPlone/controlpanel/bbb/security.py\n+++ b/Products/CMFPlone/controlpanel/bbb/security.py\n@@ -2,16 +2,15 @@\n from plone.base.interfaces.siteroot import IPloneSiteRoot\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n-from zope.component import adapts\n+from zope.component import adapter\n from zope.component import getUtility\n from zope.component.hooks import getSite\n from zope.interface import implementer\n \n \n+@adapter(IPloneSiteRoot)\n @implementer(ISecuritySchema)\n class SecurityControlPanelAdapter:\n-    adapts(IPloneSiteRoot)\n-\n     def __init__(self, context):\n         self.portal = getSite()\n         self.pmembership = getToolByName(context, "portal_membership")\ndiff --git a/Products/CMFPlone/controlpanel/bbb/site.py b/Products/CMFPlone/controlpanel/bbb/site.py\nindex c80e918be1..638386d5f6 100644\n--- a/Products/CMFPlone/controlpanel/bbb/site.py\n+++ b/Products/CMFPlone/controlpanel/bbb/site.py\n@@ -1,16 +1,15 @@\n from plone.base.interfaces import IPloneSiteRoot\n from plone.base.interfaces import ISiteSchema\n from plone.registry.interfaces import IRegistry\n-from zope.component import adapts\n+from zope.component import adapter\n from zope.component import getUtility\n from zope.interface import implementer\n from zope.schema.fieldproperty import FieldProperty\n \n \n+@adapter(IPloneSiteRoot)\n @implementer(ISiteSchema)\n class SiteControlPanelAdapter:\n-    adapts(IPloneSiteRoot)\n-\n     def __init__(self, context):\n         registry = getUtility(IRegistry)\n         self.settings = registry.forInterface(ISiteSchema, prefix="plone")\ndiff --git a/Products/CMFPlone/controlpanel/bbb/usergroups.py b/Products/CMFPlone/controlpanel/bbb/usergroups.py\nindex 4330421011..2cffa8ca00 100644\n--- a/Products/CMFPlone/controlpanel/bbb/usergroups.py\n+++ b/Products/CMFPlone/controlpanel/bbb/usergroups.py\n@@ -1,16 +1,15 @@\n from plone.base.interfaces import IPloneSiteRoot\n from plone.base.interfaces import IUserGroupsSettingsSchema\n from plone.registry.interfaces import IRegistry\n-from zope.component import adapts\n+from zope.component import adapter\n from zope.component import getUtility\n from zope.component.hooks import getSite\n from zope.interface import implementer\n \n \n+@adapter(IPloneSiteRoot)\n @implementer(IUserGroupsSettingsSchema)\n class UserGroupsSettingsControlPanelAdapter:\n-    adapts(IPloneSiteRoot)\n-\n     def __init__(self, context):\n         self.context = context\n         self.portal = getSite()\ndiff --git a/Products/CMFPlone/controlpanel/browser/actions.py b/Products/CMFPlone/controlpanel/browser/actions.py\nindex 9560ed1fab..4556647d5e 100644\n--- a/Products/CMFPlone/controlpanel/browser/actions.py\n+++ b/Products/CMFPlone/controlpanel/browser/actions.py\n@@ -10,7 +10,7 @@\n from Products.Five import BrowserView\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from z3c.form import form\n-from zope.component import adapts\n+from zope.component import adapter\n from zope.event import notify\n from zope.interface import implementer\n from zope.lifecycleevent import ObjectCreatedEvent\n@@ -73,12 +73,11 @@ def __call__(self):\n         return self.display()\n \n \n+@adapter(IAction)\n @implementer(IActionSchema)\n class ActionControlPanelAdapter:\n     """Adapter for action form."""\n \n-    adapts(IAction)\n-\n     def __init__(self, context):\n         self.context = context\n         self.current_category = self.context.getParentNode()\ndiff --git a/news/3873.bugfix b/news/3873.bugfix\nnew file mode 100644\nindex 0000000000..e201ecd08b\n--- /dev/null\n+++ b/news/3873.bugfix\n@@ -0,0 +1 @@\n+Corrected the name in a button and help text to "Classic UI" when creating a Plone site. @1letter\ndiff --git a/news/3876.bugfix b/news/3876.bugfix\nnew file mode 100644\nindex 0000000000..8f8d23c3dd\n--- /dev/null\n+++ b/news/3876.bugfix\n@@ -0,0 +1,2 @@\n+Change adapts to @adapter decorator.\n+[thet]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2023-12-04T20:57:38+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/70e77605bf56571a43cce9c194a543f7e437140c

Merge pull request #3875 from plone/fix-leadimage-61

Correct the behavior interface for lead image in the syndication adaper.

Files changed:
A news/3875.bugfix
M Products/CMFPlone/browser/syndication/adapters.py

b'diff --git a/Products/CMFPlone/browser/syndication/adapters.py b/Products/CMFPlone/browser/syndication/adapters.py\nindex 68475f5222..4d51bb1507 100644\n--- a/Products/CMFPlone/browser/syndication/adapters.py\n+++ b/Products/CMFPlone/browser/syndication/adapters.py\n@@ -1,6 +1,6 @@\n from DateTime import DateTime\n from OFS.interfaces import IItem\n-from plone.app.contenttypes.behaviors.leadimage import ILeadImage\n+from plone.app.contenttypes.behaviors.leadimage import ILeadImageBehavior\n from plone.base.interfaces.syndication import IFeed\n from plone.base.interfaces.syndication import IFeedItem\n from plone.base.interfaces.syndication import IFeedSettings\n@@ -271,7 +271,7 @@ class DexterityItem(BaseItem):\n     def __init__(self, context, feed):\n         super().__init__(context, feed)\n         self.dexterity = IDexterityContent.providedBy(context)\n-        lead = ILeadImage(self.context, None)\n+        lead = ILeadImageBehavior(self.context, None)\n         if lead:\n             if (\n                 lead.image\ndiff --git a/news/3875.bugfix b/news/3875.bugfix\nnew file mode 100644\nindex 0000000000..5ef04b030d\n--- /dev/null\n+++ b/news/3875.bugfix\n@@ -0,0 +1,2 @@\n+Correct the behavior interface for lead image in the syndication adapter.\n+[thet]\n'

