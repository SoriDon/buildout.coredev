Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-08-22T09:43:21+02:00
Author: tschorr (tschorr) <t_schorr@gmx.de>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/8b48f87a450c107d8660311b84c0e2fc01c459f9

add sentry support

Files changed:
A src/plone/recipe/zope2instance/sentry.py
M README.rst
M setup.py
M src/plone/recipe/zope2instance/recipe.py
M src/plone/recipe/zope2instance/tests/wsgi.txt

b"diff --git a/README.rst b/README.rst\nindex 76ca7c1..b1141f1 100644\n--- a/README.rst\n+++ b/README.rst\n@@ -311,6 +311,11 @@ access-log-custom\n   Like `event-log-custom`, a custom section for the access logger, to be able\n   to use another event logger than `logfile`. Used for ZServer only, not WSGI.\n \n+sentry_dsn\n+  Provide a Sentry DSN here to enable basic Sentry logging documented\n+  in `<https://docs.sentry.io/platforms/python/logging/>`_.\n+  Available for WSGI only.\n+\n Load non-setuptools compatible Python libraries\n -----------------------------------------------\n \ndiff --git a/setup.py b/setup.py\nindex fd0ceee..0a67577 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -50,6 +50,9 @@\n         'test': [\n             'zope.testrunner',\n         ],\n+        'sentry': [\n+            'sentry-sdk',\n+        ]\n     },\n     zip_safe=False,\n     entry_points={\n@@ -60,5 +63,8 @@\n         'paste.server_factory': [\n             'main=plone.recipe.zope2instance.ctl:server_factory',\n         ],\n+        'paste.filter_factory': [\n+            'sentry=plone.recipe.zope2instance.sentry:sdk_init',\n+        ],\n         },\n )\ndiff --git a/src/plone/recipe/zope2instance/recipe.py b/src/plone/recipe/zope2instance/recipe.py\nindex 58d87b9..9548932 100644\n--- a/src/plone/recipe/zope2instance/recipe.py\n+++ b/src/plone/recipe/zope2instance/recipe.py\n@@ -743,12 +743,21 @@ def build_wsgi_ini(self):\n             'access-log-level',\n             options.get('z2-log-level', 'INFO'))\n \n+        pipeline = []\n         if accesslog_name.lower() == 'disable':\n-            pipeline = '\\n    '.join(['egg:Zope#httpexceptions', 'zope'])\n+            pipeline = [\n+                'egg:Zope#httpexceptions']\n             event_handlers = ''\n         else:\n-            pipeline = '\\n    '.join(\n-                ['translogger', 'egg:Zope#httpexceptions', 'zope'])\n+            pipeline = [\n+                'translogger', 'egg:Zope#httpexceptions']\n+\n+        sentry_dsn = options.get('sentry_dsn', '')\n+        if sentry_dsn:\n+            pipeline.append('sentry')\n+\n+        pipeline.append('zope')\n+        pipeline = '\\n    '.join(pipeline)\n         options = {\n             'location': options['location'],\n             'http_address': listen,\n@@ -761,6 +770,7 @@ def build_wsgi_ini(self):\n             'pipeline': pipeline,\n             'eventlog_level': eventlog_level,\n             'accesslog_level': accesslog_level,\n+            'sentry_dsn': sentry_dsn,\n         }\n         wsgi_ini = wsgi_ini_template % options\n         with open(wsgi_ini_path, 'w') as f:\n@@ -1302,6 +1312,10 @@ def render_file_storage(self, file_storage, blob_storage,\n use = egg:Paste#translogger\n setup_console_handler = False\n \n+[filter:sentry]\n+use = egg:plone.recipe.zope2instance#sentry\n+dsn = %(sentry_dsn)s\n+\n [pipeline:main]\n pipeline =\n     %(pipeline)s\ndiff --git a/src/plone/recipe/zope2instance/sentry.py b/src/plone/recipe/zope2instance/sentry.py\nnew file mode 100644\nindex 0000000..cf82d08\n--- /dev/null\n+++ b/src/plone/recipe/zope2instance/sentry.py\n@@ -0,0 +1,8 @@\n+import sentry_sdk\n+\n+\n+def sdk_init(global_conf, dsn):\n+    def filter(app):\n+        sentry_sdk.init(dsn=dsn)\n+        return app\n+    return filter\ndiff --git a/src/plone/recipe/zope2instance/tests/wsgi.txt b/src/plone/recipe/zope2instance/tests/wsgi.txt\nindex 86a5ae9..d11bbc2 100644\n--- a/src/plone/recipe/zope2instance/tests/wsgi.txt\n+++ b/src/plone/recipe/zope2instance/tests/wsgi.txt\n@@ -90,7 +90,7 @@ The buildout has also created an INI file containing the waitress configuration:\n     [filter:translogger]\n     use = egg:Paste#translogger\n     setup_console_handler = False\n-    <BLANKLINE>\n+    ...\n     [pipeline:main]\n     pipeline =\n         translogger\n@@ -372,3 +372,56 @@ The buildout has updated our INI file:\n     handlers =\n     qualname = waitress\n     ...\n+\n+Sentry support\n+==============\n+\n+We want to sent logging events to Sentry.\n+Let's create a buildout:\n+\n+    >>> write('buildout.cfg',\n+    ... '''\n+    ... [buildout]\n+    ... parts = instance\n+    ... find-links = %(sample_buildout)s/eggs\n+    ...\n+    ... [instance]\n+    ... recipe = plone.recipe.zope2instance\n+    ... eggs =\n+    ...     plone.recipe.zope2instance[sentry]\n+    ... user = me:me\n+    ... sentry_dsn = https://f00ba4ba2@my.sentry.server/9999\n+    ... ''' % options)\n+\n+Let's run it::\n+\n+    >>> print(system(join('bin', 'buildout'))),\n+    Uninstalling instance.\n+    Installing instance.\n+    Getting distribution for 'sentry-sdk'.\n+    ...\n+    Generated script '.../sample-buildout/bin/instance'.\n+    ...\n+\n+The buildout has updated our INI file:\n+\n+    >>> instance = os.path.join(sample_buildout, 'parts', 'instance')\n+    >>> wsgi_ini = open(os.path.join(instance, 'etc', 'wsgi.ini')).read()\n+    >>> print(wsgi_ini)\n+    [server:main]\n+    paste.server_factory = plone.recipe.zope2instance:main\n+    use = egg:plone.recipe.zope2instance#main\n+    ...\n+    [filter:sentry]\n+    use = egg:plone.recipe.zope2instance#sentry\n+    dsn = https://f00ba4ba2@my.sentry.server/9999\n+    <BLANKLINE>\n+    [pipeline:main]\n+    pipeline =\n+        translogger\n+        egg:Zope#httpexceptions\n+        sentry\n+        zope\n+    <BLANKLINE>\n+    [loggers]\n+    ...\n"

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-08-22T09:47:57+02:00
Author: tschorr (tschorr) <t_schorr@gmx.de>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/e176cf501202bd59ecc16fcb4c024f5f4d7aa796

add changelog entry

Files changed:
A news/124.feature

b'diff --git a/news/124.feature b/news/124.feature\nnew file mode 100644\nindex 0000000..90b8f35\n--- /dev/null\n+++ b/news/124.feature\n@@ -0,0 +1 @@\n+Add Sentry support by adding a new filter to the WSGI pipeline.\n'

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-08-22T10:12:57+02:00
Author: tschorr (tschorr) <t_schorr@gmx.de>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/2441b2143882915366b6e049001ed39d99f21a0a

update readme

Files changed:
M README.rst

b'diff --git a/README.rst b/README.rst\nindex b1141f1..2dc4388 100644\n--- a/README.rst\n+++ b/README.rst\n@@ -313,7 +313,9 @@ access-log-custom\n \n sentry_dsn\n   Provide a Sentry DSN here to enable basic Sentry logging documented\n-  in `<https://docs.sentry.io/platforms/python/logging/>`_.\n+  in `<https://docs.sentry.io/platforms/python/logging/>`_. You will need to add the\n+  Python Sentry SDK, either by adding it to your eggs section directly or by adding\n+  `plone.recipe.zope2instance[sentry]`.\n   Available for WSGI only.\n \n Load non-setuptools compatible Python libraries\n'

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-08-22T12:13:12+02:00
Author: tschorr (tschorr) <t_schorr@gmx.de>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/633c15e5fa67a32ad472c154e51cfb64abbb4325

add logging options

Files changed:
M README.rst
M src/plone/recipe/zope2instance/recipe.py
M src/plone/recipe/zope2instance/sentry.py
M src/plone/recipe/zope2instance/tests/wsgi.txt

b"diff --git a/README.rst b/README.rst\nindex 2dc4388..83d87be 100644\n--- a/README.rst\n+++ b/README.rst\n@@ -318,6 +318,18 @@ sentry_dsn\n   `plone.recipe.zope2instance[sentry]`.\n   Available for WSGI only.\n \n+sentry_level\n+  Set the logging level for Sentry breadcrumbs.\n+  Available for WSGI only.\n+\n+sentry_event_level\n+  Set the logging level for Sentry events.\n+  Available for WSGI only.\n+\n+sentry_ignore\n+  Set the (space separated list of) logger names that are ignored by Sentry.\n+  Available for WSGI only.\n+\n Load non-setuptools compatible Python libraries\n -----------------------------------------------\n \ndiff --git a/src/plone/recipe/zope2instance/recipe.py b/src/plone/recipe/zope2instance/recipe.py\nindex 9548932..5ce32fb 100644\n--- a/src/plone/recipe/zope2instance/recipe.py\n+++ b/src/plone/recipe/zope2instance/recipe.py\n@@ -755,6 +755,9 @@ def build_wsgi_ini(self):\n         sentry_dsn = options.get('sentry_dsn', '')\n         if sentry_dsn:\n             pipeline.append('sentry')\n+        sentry_level = options.get('sentry_level', 'INFO')\n+        sentry_event_level = options.get('sentry_event_level', 'ERROR')\n+        sentry_ignore = options.get('sentry_ignore', '')\n \n         pipeline.append('zope')\n         pipeline = '\\n    '.join(pipeline)\n@@ -771,6 +774,9 @@ def build_wsgi_ini(self):\n             'eventlog_level': eventlog_level,\n             'accesslog_level': accesslog_level,\n             'sentry_dsn': sentry_dsn,\n+            'sentry_level': sentry_level,\n+            'sentry_event_level': sentry_event_level,\n+            'sentry_ignore': sentry_ignore,\n         }\n         wsgi_ini = wsgi_ini_template % options\n         with open(wsgi_ini_path, 'w') as f:\n@@ -1315,6 +1321,9 @@ def render_file_storage(self, file_storage, blob_storage,\n [filter:sentry]\n use = egg:plone.recipe.zope2instance#sentry\n dsn = %(sentry_dsn)s\n+level = %(sentry_level)s\n+event_level = %(sentry_event_level)s\n+ignorelist = %(sentry_ignore)s\n \n [pipeline:main]\n pipeline =\ndiff --git a/src/plone/recipe/zope2instance/sentry.py b/src/plone/recipe/zope2instance/sentry.py\nindex cf82d08..069294a 100644\n--- a/src/plone/recipe/zope2instance/sentry.py\n+++ b/src/plone/recipe/zope2instance/sentry.py\n@@ -1,8 +1,22 @@\n+import logging\n import sentry_sdk\n+from sentry_sdk.integrations.logging import LoggingIntegration, ignore_logger\n \n \n-def sdk_init(global_conf, dsn):\n+def sdk_init(\n+        global_conf,\n+        dsn,\n+        level='INFO',\n+        event_level='ERROR',\n+        ignorelist=''):\n+    sentry_logging = LoggingIntegration(\n+        level=logging.__dict__[level],\n+        event_level=logging.__dict__[event_level]\n+    )\n+    for logger in ignorelist.split():\n+        ignore_logger(logger)\n+\n     def filter(app):\n-        sentry_sdk.init(dsn=dsn)\n+        sentry_sdk.init(dsn=dsn, integrations=[sentry_logging])\n         return app\n     return filter\ndiff --git a/src/plone/recipe/zope2instance/tests/wsgi.txt b/src/plone/recipe/zope2instance/tests/wsgi.txt\nindex d11bbc2..ce05a1b 100644\n--- a/src/plone/recipe/zope2instance/tests/wsgi.txt\n+++ b/src/plone/recipe/zope2instance/tests/wsgi.txt\n@@ -415,6 +415,62 @@ The buildout has updated our INI file:\n     [filter:sentry]\n     use = egg:plone.recipe.zope2instance#sentry\n     dsn = https://f00ba4ba2@my.sentry.server/9999\n+    level = INFO\n+    event_level = ERROR\n+    ignorelist =\n+    <BLANKLINE>\n+    [pipeline:main]\n+    pipeline =\n+        translogger\n+        egg:Zope#httpexceptions\n+        sentry\n+        zope\n+    <BLANKLINE>\n+    [loggers]\n+    ...\n+\n+Let's update our buildout with some Sentry options:\n+\n+    >>> write('buildout.cfg',\n+    ... '''\n+    ... [buildout]\n+    ... parts = instance\n+    ... find-links = %(sample_buildout)s/eggs\n+    ...\n+    ... [instance]\n+    ... recipe = plone.recipe.zope2instance\n+    ... eggs =\n+    ...     plone.recipe.zope2instance[sentry]\n+    ... user = me:me\n+    ... sentry_dsn = https://f00ba4ba2@my.sentry.server/9999\n+    ... sentry_level = DEBUG\n+    ... sentry_event_level = WARNING\n+    ... sentry_ignore = waitress.queue foo\n+    ... ''' % options)\n+\n+Let's run it::\n+\n+    >>> print(system(join('bin', 'buildout'))),\n+    Uninstalling instance.\n+    Installing instance.\n+    Generated script '.../sample-buildout/bin/instance'.\n+    ...\n+\n+The buildout has updated our INI file:\n+\n+    >>> instance = os.path.join(sample_buildout, 'parts', 'instance')\n+    >>> wsgi_ini = open(os.path.join(instance, 'etc', 'wsgi.ini')).read()\n+    >>> print(wsgi_ini)\n+    [server:main]\n+    paste.server_factory = plone.recipe.zope2instance:main\n+    use = egg:plone.recipe.zope2instance#main\n+    ...\n+    [filter:sentry]\n+    use = egg:plone.recipe.zope2instance#sentry\n+    dsn = https://f00ba4ba2@my.sentry.server/9999\n+    level = DEBUG\n+    event_level = WARNING\n+    ignorelist = waitress.queue foo\n     <BLANKLINE>\n     [pipeline:main]\n     pipeline =\n"

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-08-22T17:28:28+02:00
Author: Andreas Jung (zopyx) <info@zopyx.com>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/c76e81707ec0e075fdbc200fdb9d9d1ca1607f29

Merge pull request #124 from plone/wsgi_sentry_support

Add Sentry support

Files changed:
A news/124.feature
A src/plone/recipe/zope2instance/sentry.py
M README.rst
M setup.py
M src/plone/recipe/zope2instance/recipe.py
M src/plone/recipe/zope2instance/tests/wsgi.txt

b"diff --git a/README.rst b/README.rst\nindex 76ca7c1..83d87be 100644\n--- a/README.rst\n+++ b/README.rst\n@@ -311,6 +311,25 @@ access-log-custom\n   Like `event-log-custom`, a custom section for the access logger, to be able\n   to use another event logger than `logfile`. Used for ZServer only, not WSGI.\n \n+sentry_dsn\n+  Provide a Sentry DSN here to enable basic Sentry logging documented\n+  in `<https://docs.sentry.io/platforms/python/logging/>`_. You will need to add the\n+  Python Sentry SDK, either by adding it to your eggs section directly or by adding\n+  `plone.recipe.zope2instance[sentry]`.\n+  Available for WSGI only.\n+\n+sentry_level\n+  Set the logging level for Sentry breadcrumbs.\n+  Available for WSGI only.\n+\n+sentry_event_level\n+  Set the logging level for Sentry events.\n+  Available for WSGI only.\n+\n+sentry_ignore\n+  Set the (space separated list of) logger names that are ignored by Sentry.\n+  Available for WSGI only.\n+\n Load non-setuptools compatible Python libraries\n -----------------------------------------------\n \ndiff --git a/news/124.feature b/news/124.feature\nnew file mode 100644\nindex 0000000..90b8f35\n--- /dev/null\n+++ b/news/124.feature\n@@ -0,0 +1 @@\n+Add Sentry support by adding a new filter to the WSGI pipeline.\ndiff --git a/setup.py b/setup.py\nindex fd0ceee..0a67577 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -50,6 +50,9 @@\n         'test': [\n             'zope.testrunner',\n         ],\n+        'sentry': [\n+            'sentry-sdk',\n+        ]\n     },\n     zip_safe=False,\n     entry_points={\n@@ -60,5 +63,8 @@\n         'paste.server_factory': [\n             'main=plone.recipe.zope2instance.ctl:server_factory',\n         ],\n+        'paste.filter_factory': [\n+            'sentry=plone.recipe.zope2instance.sentry:sdk_init',\n+        ],\n         },\n )\ndiff --git a/src/plone/recipe/zope2instance/recipe.py b/src/plone/recipe/zope2instance/recipe.py\nindex 58d87b9..5ce32fb 100644\n--- a/src/plone/recipe/zope2instance/recipe.py\n+++ b/src/plone/recipe/zope2instance/recipe.py\n@@ -743,12 +743,24 @@ def build_wsgi_ini(self):\n             'access-log-level',\n             options.get('z2-log-level', 'INFO'))\n \n+        pipeline = []\n         if accesslog_name.lower() == 'disable':\n-            pipeline = '\\n    '.join(['egg:Zope#httpexceptions', 'zope'])\n+            pipeline = [\n+                'egg:Zope#httpexceptions']\n             event_handlers = ''\n         else:\n-            pipeline = '\\n    '.join(\n-                ['translogger', 'egg:Zope#httpexceptions', 'zope'])\n+            pipeline = [\n+                'translogger', 'egg:Zope#httpexceptions']\n+\n+        sentry_dsn = options.get('sentry_dsn', '')\n+        if sentry_dsn:\n+            pipeline.append('sentry')\n+        sentry_level = options.get('sentry_level', 'INFO')\n+        sentry_event_level = options.get('sentry_event_level', 'ERROR')\n+        sentry_ignore = options.get('sentry_ignore', '')\n+\n+        pipeline.append('zope')\n+        pipeline = '\\n    '.join(pipeline)\n         options = {\n             'location': options['location'],\n             'http_address': listen,\n@@ -761,6 +773,10 @@ def build_wsgi_ini(self):\n             'pipeline': pipeline,\n             'eventlog_level': eventlog_level,\n             'accesslog_level': accesslog_level,\n+            'sentry_dsn': sentry_dsn,\n+            'sentry_level': sentry_level,\n+            'sentry_event_level': sentry_event_level,\n+            'sentry_ignore': sentry_ignore,\n         }\n         wsgi_ini = wsgi_ini_template % options\n         with open(wsgi_ini_path, 'w') as f:\n@@ -1302,6 +1318,13 @@ def render_file_storage(self, file_storage, blob_storage,\n use = egg:Paste#translogger\n setup_console_handler = False\n \n+[filter:sentry]\n+use = egg:plone.recipe.zope2instance#sentry\n+dsn = %(sentry_dsn)s\n+level = %(sentry_level)s\n+event_level = %(sentry_event_level)s\n+ignorelist = %(sentry_ignore)s\n+\n [pipeline:main]\n pipeline =\n     %(pipeline)s\ndiff --git a/src/plone/recipe/zope2instance/sentry.py b/src/plone/recipe/zope2instance/sentry.py\nnew file mode 100644\nindex 0000000..069294a\n--- /dev/null\n+++ b/src/plone/recipe/zope2instance/sentry.py\n@@ -0,0 +1,22 @@\n+import logging\n+import sentry_sdk\n+from sentry_sdk.integrations.logging import LoggingIntegration, ignore_logger\n+\n+\n+def sdk_init(\n+        global_conf,\n+        dsn,\n+        level='INFO',\n+        event_level='ERROR',\n+        ignorelist=''):\n+    sentry_logging = LoggingIntegration(\n+        level=logging.__dict__[level],\n+        event_level=logging.__dict__[event_level]\n+    )\n+    for logger in ignorelist.split():\n+        ignore_logger(logger)\n+\n+    def filter(app):\n+        sentry_sdk.init(dsn=dsn, integrations=[sentry_logging])\n+        return app\n+    return filter\ndiff --git a/src/plone/recipe/zope2instance/tests/wsgi.txt b/src/plone/recipe/zope2instance/tests/wsgi.txt\nindex 86a5ae9..ce05a1b 100644\n--- a/src/plone/recipe/zope2instance/tests/wsgi.txt\n+++ b/src/plone/recipe/zope2instance/tests/wsgi.txt\n@@ -90,7 +90,7 @@ The buildout has also created an INI file containing the waitress configuration:\n     [filter:translogger]\n     use = egg:Paste#translogger\n     setup_console_handler = False\n-    <BLANKLINE>\n+    ...\n     [pipeline:main]\n     pipeline =\n         translogger\n@@ -372,3 +372,112 @@ The buildout has updated our INI file:\n     handlers =\n     qualname = waitress\n     ...\n+\n+Sentry support\n+==============\n+\n+We want to sent logging events to Sentry.\n+Let's create a buildout:\n+\n+    >>> write('buildout.cfg',\n+    ... '''\n+    ... [buildout]\n+    ... parts = instance\n+    ... find-links = %(sample_buildout)s/eggs\n+    ...\n+    ... [instance]\n+    ... recipe = plone.recipe.zope2instance\n+    ... eggs =\n+    ...     plone.recipe.zope2instance[sentry]\n+    ... user = me:me\n+    ... sentry_dsn = https://f00ba4ba2@my.sentry.server/9999\n+    ... ''' % options)\n+\n+Let's run it::\n+\n+    >>> print(system(join('bin', 'buildout'))),\n+    Uninstalling instance.\n+    Installing instance.\n+    Getting distribution for 'sentry-sdk'.\n+    ...\n+    Generated script '.../sample-buildout/bin/instance'.\n+    ...\n+\n+The buildout has updated our INI file:\n+\n+    >>> instance = os.path.join(sample_buildout, 'parts', 'instance')\n+    >>> wsgi_ini = open(os.path.join(instance, 'etc', 'wsgi.ini')).read()\n+    >>> print(wsgi_ini)\n+    [server:main]\n+    paste.server_factory = plone.recipe.zope2instance:main\n+    use = egg:plone.recipe.zope2instance#main\n+    ...\n+    [filter:sentry]\n+    use = egg:plone.recipe.zope2instance#sentry\n+    dsn = https://f00ba4ba2@my.sentry.server/9999\n+    level = INFO\n+    event_level = ERROR\n+    ignorelist =\n+    <BLANKLINE>\n+    [pipeline:main]\n+    pipeline =\n+        translogger\n+        egg:Zope#httpexceptions\n+        sentry\n+        zope\n+    <BLANKLINE>\n+    [loggers]\n+    ...\n+\n+Let's update our buildout with some Sentry options:\n+\n+    >>> write('buildout.cfg',\n+    ... '''\n+    ... [buildout]\n+    ... parts = instance\n+    ... find-links = %(sample_buildout)s/eggs\n+    ...\n+    ... [instance]\n+    ... recipe = plone.recipe.zope2instance\n+    ... eggs =\n+    ...     plone.recipe.zope2instance[sentry]\n+    ... user = me:me\n+    ... sentry_dsn = https://f00ba4ba2@my.sentry.server/9999\n+    ... sentry_level = DEBUG\n+    ... sentry_event_level = WARNING\n+    ... sentry_ignore = waitress.queue foo\n+    ... ''' % options)\n+\n+Let's run it::\n+\n+    >>> print(system(join('bin', 'buildout'))),\n+    Uninstalling instance.\n+    Installing instance.\n+    Generated script '.../sample-buildout/bin/instance'.\n+    ...\n+\n+The buildout has updated our INI file:\n+\n+    >>> instance = os.path.join(sample_buildout, 'parts', 'instance')\n+    >>> wsgi_ini = open(os.path.join(instance, 'etc', 'wsgi.ini')).read()\n+    >>> print(wsgi_ini)\n+    [server:main]\n+    paste.server_factory = plone.recipe.zope2instance:main\n+    use = egg:plone.recipe.zope2instance#main\n+    ...\n+    [filter:sentry]\n+    use = egg:plone.recipe.zope2instance#sentry\n+    dsn = https://f00ba4ba2@my.sentry.server/9999\n+    level = DEBUG\n+    event_level = WARNING\n+    ignorelist = waitress.queue foo\n+    <BLANKLINE>\n+    [pipeline:main]\n+    pipeline =\n+        translogger\n+        egg:Zope#httpexceptions\n+        sentry\n+        zope\n+    <BLANKLINE>\n+    [loggers]\n+    ...\n"

