Repository: plone.app.layout


Branch: refs/heads/master
Date: 2019-02-06T22:36:29+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.layout/commit/0be302100cdfdf5ccb911d2ae7345155a0dbcbd5

Fix navigation with items with special characters. Fixes https://github.com/plone/Products.CMFPlone/issues/2731

Files changed:
M plone/app/layout/navigation/navtree.py

b"diff --git a/plone/app/layout/navigation/navtree.py b/plone/app/layout/navigation/navtree.py\nindex e391a4d..e1f993d 100644\n--- a/plone/app/layout/navigation/navtree.py\n+++ b/plone/app/layout/navigation/navtree.py\n@@ -12,6 +12,7 @@\n from Products.CMFPlone import utils\n from Products.CMFPlone.interfaces.controlpanel import ILanguageSchema\n from Products.CMFPlone.interfaces.controlpanel import INavigationSchema\n+from Products.CMFPlone.utils import safe_unicode\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n from zope.contentprovider.provider import ContentProviderBase\n@@ -439,6 +440,7 @@ def navtree(self):\n                     'uid': it.UID,\n                     'url': it.getURL(),\n                     'title': it.Title,\n+                    'title': safe_unicode(it.Title),\n                     'review_state': it.review_state,\n                 }\n                 ret.setdefault(pathkey, []).append(entry)\n"

Repository: plone.app.layout


Branch: refs/heads/master
Date: 2019-02-06T22:37:25+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.layout/commit/9673327a1fb430bb6209f7f22692d845c4f3bdcf

Respect types_use_view_action_in_listings in navigation (Fix https://github.com/plone/Products.CMFPlone/issues/2730)

Files changed:
M plone/app/layout/navigation/navtree.py

b"diff --git a/plone/app/layout/navigation/navtree.py b/plone/app/layout/navigation/navtree.py\nindex e1f993d..cb80059 100644\n--- a/plone/app/layout/navigation/navtree.py\n+++ b/plone/app/layout/navigation/navtree.py\n@@ -431,15 +431,20 @@ def navtree(self):\n             }\n             portal_catalog = getToolByName(self.context, 'portal_catalog')\n \n+            registry = getUtility(IRegistry)\n+            types_using_view = registry.get(\n+                'plone.types_use_view_action_in_listings', [])\n             res = portal_catalog.searchResults(**query)\n \n             for it in res:\n                 pathkey = '/'.join(it.getPath().split('/')[:-1])\n+                url = it.getURL()\n+                if it.portal_type in types_using_view:\n+                    url += '/view'\n                 entry = {\n                     'id': it.id,\n                     'uid': it.UID,\n-                    'url': it.getURL(),\n-                    'title': it.Title,\n+                    'url': url,\n                     'title': safe_unicode(it.Title),\n                     'review_state': it.review_state,\n                 }\n"

Repository: plone.app.layout


Branch: refs/heads/master
Date: 2019-02-06T22:42:48+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.layout/commit/d15d4bd1bf4c70edc159dc2fe37ae96cbe484897

test types_use_view_action_in_listings and special characters in navigation

Files changed:
M plone/app/layout/viewlets/tests/test_common.py

b'diff --git a/plone/app/layout/viewlets/tests/test_common.py b/plone/app/layout/viewlets/tests/test_common.py\nindex 9fd85e5..b3bee09 100644\n--- a/plone/app/layout/viewlets/tests/test_common.py\n+++ b/plone/app/layout/viewlets/tests/test_common.py\n@@ -253,3 +253,18 @@ def test_selectedtabs_navroot(self):\n         gsv.update()\n         self.assertEqual(gsv.selected_tabs, {\'portal\': \'abc\'})\n         self.assertEqual(gsv.selected_portal_tab, \'abc\')\n+\n+    def test_globalnav_respects_types_use_view_action_in_listings(self):\n+        """ Test selected tabs with a INavigationroot folder involved\n+        """\n+        setRoles(self.portal, TEST_USER_ID, [\'Manager\'])\n+        self.portal.invokeFactory(\'Image\', \'image\', title=u\'S\xc3\xb6me Image\')\n+        self.portal.invokeFactory(\'File\', \'file\', title=u\'Some File\')\n+        self.portal.invokeFactory(\'Document\', \'doc\', title=u\'Some D\xc3\xb6cument\')\n+        request = self.layer[\'request\']\n+        gsv = GlobalSectionsViewlet(self.portal, request, None)\n+        gsv.update()\n+        html = gsv.render()\n+        self.assertIn(\'href="http://nohost/plone/image/view"\', html)\n+        self.assertIn(\'href="http://nohost/plone/file/view"\', html)\n+        self.assertIn(\'href="http://nohost/plone/doc"\', html)\n'

Repository: plone.app.layout


Branch: refs/heads/master
Date: 2019-02-06T23:07:30+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.layout/commit/7093e4ea67181f572c1e6d5498751166d3408c6c

test navigation three levels deep

Files changed:
M plone/app/layout/viewlets/tests/test_common.py

b'diff --git a/plone/app/layout/viewlets/tests/test_common.py b/plone/app/layout/viewlets/tests/test_common.py\nindex b3bee09..08402fe 100644\n--- a/plone/app/layout/viewlets/tests/test_common.py\n+++ b/plone/app/layout/viewlets/tests/test_common.py\n@@ -12,8 +12,10 @@\n from plone.registry.interfaces import IRegistry\n from Products.CMFPlone.interfaces import INonStructuralFolder\n from Products.CMFPlone.interfaces import ISiteSchema\n+from zope.component import getMultiAdapter\n from zope.component import getUtility\n from zope.component.hooks import setSite\n+from zope.contentprovider.interfaces import IContentProvider\n from zope.interface import alsoProvides\n from zope.interface import directlyProvides\n from zope.interface import noLongerProvides\n@@ -268,3 +270,31 @@ def test_globalnav_respects_types_use_view_action_in_listings(self):\n         self.assertIn(\'href="http://nohost/plone/image/view"\', html)\n         self.assertIn(\'href="http://nohost/plone/file/view"\', html)\n         self.assertIn(\'href="http://nohost/plone/doc"\', html)\n+\n+    def test_globalnav_navigation_depth(self):\n+        """ Test selected tabs with a INavigationroot folder involved\n+        """\n+        setRoles(self.portal, TEST_USER_ID, [\'Manager\'])\n+        registry = getUtility(IRegistry)\n+        registry[\'plone.navigation_depth\'] = 3\n+        self.portal.invokeFactory(\'Folder\', \'folder\', title=u\'F\xc3\xb6lder\')\n+        self.portal.invokeFactory(\'Folder\', \'folder2\', title=u\'Folder 2\')\n+        self.portal.invokeFactory(\'Folder\', \'folder3\', title=u\'Folder 3\')\n+        folder = self.portal.folder\n+        folder.invokeFactory(\'Folder\', \'subfolder\', title=u\'Subfolder\')\n+        folder.invokeFactory(\'Folder\', \'subfolder2\', title=u\'S\xc3\xbcbfolder 2\')\n+        subfolder = folder.subfolder\n+        subfolder.invokeFactory(\'Folder\', \'subsubfolder\', title=u\'Sub2folder\')\n+\n+        request = self.layer[\'request\']\n+        nav_tree_provider = getMultiAdapter(\n+            (self.portal, request, None), IContentProvider, \'plone.navtree\')\n+        navtree = nav_tree_provider.navtree\n+        self.assertEqual(len(navtree), 3)\n+        self.assertEqual(len(navtree[\'/plone\']), 3)\n+        self.assertEqual(len(navtree[\'/plone/folder\']), 2)\n+        self.assertEqual(len(navtree[\'/plone/folder/subfolder\']), 1)\n+\n+        gsv = GlobalSectionsViewlet(self.portal, request, None)\n+        gsv.update()\n+        self.assertTrue(gsv.render())\n'

Repository: plone.app.layout


Branch: refs/heads/master
Date: 2019-02-06T23:10:54+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.layout/commit/e390221e8d5917ac483ce412928f29b505842171

add changenote

Files changed:
M CHANGES.rst

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 819af74..39166c7 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -18,6 +18,9 @@ Bug fixes:\n - fix python3 compatibility\n   [petschki]\n \n+- Fix some issues with the new navigation. (Fixes https://github.com/plone/Products.CMFPlone/issues/2731 and https://github.com/plone/Products.CMFPlone/issues/2730)\n+  [pbauer]\n+\n \n 3.0.0 (2018-10-30)\n ------------------\n'

Repository: plone.app.layout


Branch: refs/heads/master
Date: 2019-02-07T08:35:08+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.layout/commit/9c5b93d32d78187053dcee693d31b5d1a0f5efe7

Merge pull request #180 from plone/fix_navigation_issues

Fix navigation issues

Files changed:
M CHANGES.rst
M plone/app/layout/navigation/navtree.py
M plone/app/layout/viewlets/tests/test_common.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 819af74..39166c7 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -18,6 +18,9 @@ Bug fixes:\n - fix python3 compatibility\n   [petschki]\n \n+- Fix some issues with the new navigation. (Fixes https://github.com/plone/Products.CMFPlone/issues/2731 and https://github.com/plone/Products.CMFPlone/issues/2730)\n+  [pbauer]\n+\n \n 3.0.0 (2018-10-30)\n ------------------\ndiff --git a/plone/app/layout/navigation/navtree.py b/plone/app/layout/navigation/navtree.py\nindex e391a4d..cb80059 100644\n--- a/plone/app/layout/navigation/navtree.py\n+++ b/plone/app/layout/navigation/navtree.py\n@@ -12,6 +12,7 @@\n from Products.CMFPlone import utils\n from Products.CMFPlone.interfaces.controlpanel import ILanguageSchema\n from Products.CMFPlone.interfaces.controlpanel import INavigationSchema\n+from Products.CMFPlone.utils import safe_unicode\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n from zope.contentprovider.provider import ContentProviderBase\n@@ -430,15 +431,21 @@ def navtree(self):\n             }\n             portal_catalog = getToolByName(self.context, \'portal_catalog\')\n \n+            registry = getUtility(IRegistry)\n+            types_using_view = registry.get(\n+                \'plone.types_use_view_action_in_listings\', [])\n             res = portal_catalog.searchResults(**query)\n \n             for it in res:\n                 pathkey = \'/\'.join(it.getPath().split(\'/\')[:-1])\n+                url = it.getURL()\n+                if it.portal_type in types_using_view:\n+                    url += \'/view\'\n                 entry = {\n                     \'id\': it.id,\n                     \'uid\': it.UID,\n-                    \'url\': it.getURL(),\n-                    \'title\': it.Title,\n+                    \'url\': url,\n+                    \'title\': safe_unicode(it.Title),\n                     \'review_state\': it.review_state,\n                 }\n                 ret.setdefault(pathkey, []).append(entry)\ndiff --git a/plone/app/layout/viewlets/tests/test_common.py b/plone/app/layout/viewlets/tests/test_common.py\nindex 9fd85e5..08402fe 100644\n--- a/plone/app/layout/viewlets/tests/test_common.py\n+++ b/plone/app/layout/viewlets/tests/test_common.py\n@@ -12,8 +12,10 @@\n from plone.registry.interfaces import IRegistry\n from Products.CMFPlone.interfaces import INonStructuralFolder\n from Products.CMFPlone.interfaces import ISiteSchema\n+from zope.component import getMultiAdapter\n from zope.component import getUtility\n from zope.component.hooks import setSite\n+from zope.contentprovider.interfaces import IContentProvider\n from zope.interface import alsoProvides\n from zope.interface import directlyProvides\n from zope.interface import noLongerProvides\n@@ -253,3 +255,46 @@ def test_selectedtabs_navroot(self):\n         gsv.update()\n         self.assertEqual(gsv.selected_tabs, {\'portal\': \'abc\'})\n         self.assertEqual(gsv.selected_portal_tab, \'abc\')\n+\n+    def test_globalnav_respects_types_use_view_action_in_listings(self):\n+        """ Test selected tabs with a INavigationroot folder involved\n+        """\n+        setRoles(self.portal, TEST_USER_ID, [\'Manager\'])\n+        self.portal.invokeFactory(\'Image\', \'image\', title=u\'S\xc3\xb6me Image\')\n+        self.portal.invokeFactory(\'File\', \'file\', title=u\'Some File\')\n+        self.portal.invokeFactory(\'Document\', \'doc\', title=u\'Some D\xc3\xb6cument\')\n+        request = self.layer[\'request\']\n+        gsv = GlobalSectionsViewlet(self.portal, request, None)\n+        gsv.update()\n+        html = gsv.render()\n+        self.assertIn(\'href="http://nohost/plone/image/view"\', html)\n+        self.assertIn(\'href="http://nohost/plone/file/view"\', html)\n+        self.assertIn(\'href="http://nohost/plone/doc"\', html)\n+\n+    def test_globalnav_navigation_depth(self):\n+        """ Test selected tabs with a INavigationroot folder involved\n+        """\n+        setRoles(self.portal, TEST_USER_ID, [\'Manager\'])\n+        registry = getUtility(IRegistry)\n+        registry[\'plone.navigation_depth\'] = 3\n+        self.portal.invokeFactory(\'Folder\', \'folder\', title=u\'F\xc3\xb6lder\')\n+        self.portal.invokeFactory(\'Folder\', \'folder2\', title=u\'Folder 2\')\n+        self.portal.invokeFactory(\'Folder\', \'folder3\', title=u\'Folder 3\')\n+        folder = self.portal.folder\n+        folder.invokeFactory(\'Folder\', \'subfolder\', title=u\'Subfolder\')\n+        folder.invokeFactory(\'Folder\', \'subfolder2\', title=u\'S\xc3\xbcbfolder 2\')\n+        subfolder = folder.subfolder\n+        subfolder.invokeFactory(\'Folder\', \'subsubfolder\', title=u\'Sub2folder\')\n+\n+        request = self.layer[\'request\']\n+        nav_tree_provider = getMultiAdapter(\n+            (self.portal, request, None), IContentProvider, \'plone.navtree\')\n+        navtree = nav_tree_provider.navtree\n+        self.assertEqual(len(navtree), 3)\n+        self.assertEqual(len(navtree[\'/plone\']), 3)\n+        self.assertEqual(len(navtree[\'/plone/folder\']), 2)\n+        self.assertEqual(len(navtree[\'/plone/folder/subfolder\']), 1)\n+\n+        gsv = GlobalSectionsViewlet(self.portal, request, None)\n+        gsv.update()\n+        self.assertTrue(gsv.render())\n'

