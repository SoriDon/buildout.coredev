Repository: plone.app.contentrules


Branch: refs/heads/master
Date: 2018-09-21T12:45:17+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contentrules/commit/e47c4fbcf642da5865902012c7bd896e9447463a

fix tests in py3

Files changed:
M plone/app/contentrules/tests/test_action_mail.py

b'diff --git a/plone/app/contentrules/tests/test_action_mail.py b/plone/app/contentrules/tests/test_action_mail.py\nindex 68ac24d..4a9e4a2 100644\n--- a/plone/app/contentrules/tests/test_action_mail.py\n+++ b/plone/app/contentrules/tests/test_action_mail.py\n@@ -173,10 +173,11 @@ def testExecuteNoSource(self):\n         mail_settings.email_from_address = \'manager@portal.be\'\n         mail_settings.email_from_name = u\'plone@rulez\'\n         ex()\n+        self.assertEqual(len(dummyMailHost.messages), 2)\n         mailSent = message_from_string(dummyMailHost.messages[0])\n         self.assertEqual(\'text/plain; charset="utf-8"\',\n                          mailSent.get(\'Content-Type\'))\n-        self.assertEqual(\'bar@foo.be\', mailSent.get(\'To\'))\n+        self.assertIn(mailSent.get(\'To\'), [\'bar@foo.be\', \'foo@bar.be\'])\n         self.assertEqual(\'"plone@rulez" <manager@portal.be>\',\n                          mailSent.get(\'From\'))\n         self.assertEqual(\'Document created !\',\n@@ -193,20 +194,24 @@ def testExecuteMultiRecipients(self):\n                              IExecutable)\n         ex()\n         self.assertEqual(len(dummyMailHost.messages), 2)\n-        mailSent = message_from_string(dummyMailHost.messages[0])\n+        # in py3 the order of mails is non-determininistic\n+        # because sending iterates over a set of recipients\n+        for msg in dummyMailHost.messages:\n+            if \'bar@foo.be\' in msg:\n+                mailSent1 = message_from_string(msg)\n+            mailSent2 = message_from_string(msg)\n         self.assertEqual(\'text/plain; charset="utf-8"\',\n-                         mailSent.get(\'Content-Type\'))\n-        self.assertEqual(\'bar@foo.be\', mailSent.get(\'To\'))\n-        self.assertEqual(\'foo@bar.be\', mailSent.get(\'From\'))\n+                         mailSent1.get(\'Content-Type\'))\n+        self.assertEqual(\'bar@foo.be\', mailSent1.get(\'To\'))\n+        self.assertEqual(\'foo@bar.be\', mailSent1.get(\'From\'))\n         self.assertEqual(\'Document created !\',\n-                         mailSent.get_payload())\n-        mailSent = message_from_string(dummyMailHost.messages[1])\n+                         mailSent1.get_payload())\n         self.assertEqual(\'text/plain; charset="utf-8"\',\n-                         mailSent.get(\'Content-Type\'))\n-        self.assertEqual(\'foo@bar.be\', mailSent.get(\'To\'))\n-        self.assertEqual(\'foo@bar.be\', mailSent.get(\'From\'))\n+                         mailSent2.get(\'Content-Type\'))\n+        self.assertEqual(\'foo@bar.be\', mailSent2.get(\'To\'))\n+        self.assertEqual(\'foo@bar.be\', mailSent2.get(\'From\'))\n         self.assertEqual(\'Document created !\',\n-                         mailSent.get_payload())\n+                         mailSent2.get_payload())\n         self._teardown_mockmail()\n \n     def testExecuteExcludeActor(self):\n'

Repository: plone.app.contentrules


Branch: refs/heads/master
Date: 2018-09-21T13:40:30+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contentrules/commit/3f797aa7a08f43a3e95c2804b539b1462ef19fed

Merge pull request #38 from plone/python3

fix another test in py3

Files changed:
M plone/app/contentrules/tests/test_action_mail.py

b'diff --git a/plone/app/contentrules/tests/test_action_mail.py b/plone/app/contentrules/tests/test_action_mail.py\nindex 68ac24d..4a9e4a2 100644\n--- a/plone/app/contentrules/tests/test_action_mail.py\n+++ b/plone/app/contentrules/tests/test_action_mail.py\n@@ -173,10 +173,11 @@ def testExecuteNoSource(self):\n         mail_settings.email_from_address = \'manager@portal.be\'\n         mail_settings.email_from_name = u\'plone@rulez\'\n         ex()\n+        self.assertEqual(len(dummyMailHost.messages), 2)\n         mailSent = message_from_string(dummyMailHost.messages[0])\n         self.assertEqual(\'text/plain; charset="utf-8"\',\n                          mailSent.get(\'Content-Type\'))\n-        self.assertEqual(\'bar@foo.be\', mailSent.get(\'To\'))\n+        self.assertIn(mailSent.get(\'To\'), [\'bar@foo.be\', \'foo@bar.be\'])\n         self.assertEqual(\'"plone@rulez" <manager@portal.be>\',\n                          mailSent.get(\'From\'))\n         self.assertEqual(\'Document created !\',\n@@ -193,20 +194,24 @@ def testExecuteMultiRecipients(self):\n                              IExecutable)\n         ex()\n         self.assertEqual(len(dummyMailHost.messages), 2)\n-        mailSent = message_from_string(dummyMailHost.messages[0])\n+        # in py3 the order of mails is non-determininistic\n+        # because sending iterates over a set of recipients\n+        for msg in dummyMailHost.messages:\n+            if \'bar@foo.be\' in msg:\n+                mailSent1 = message_from_string(msg)\n+            mailSent2 = message_from_string(msg)\n         self.assertEqual(\'text/plain; charset="utf-8"\',\n-                         mailSent.get(\'Content-Type\'))\n-        self.assertEqual(\'bar@foo.be\', mailSent.get(\'To\'))\n-        self.assertEqual(\'foo@bar.be\', mailSent.get(\'From\'))\n+                         mailSent1.get(\'Content-Type\'))\n+        self.assertEqual(\'bar@foo.be\', mailSent1.get(\'To\'))\n+        self.assertEqual(\'foo@bar.be\', mailSent1.get(\'From\'))\n         self.assertEqual(\'Document created !\',\n-                         mailSent.get_payload())\n-        mailSent = message_from_string(dummyMailHost.messages[1])\n+                         mailSent1.get_payload())\n         self.assertEqual(\'text/plain; charset="utf-8"\',\n-                         mailSent.get(\'Content-Type\'))\n-        self.assertEqual(\'foo@bar.be\', mailSent.get(\'To\'))\n-        self.assertEqual(\'foo@bar.be\', mailSent.get(\'From\'))\n+                         mailSent2.get(\'Content-Type\'))\n+        self.assertEqual(\'foo@bar.be\', mailSent2.get(\'To\'))\n+        self.assertEqual(\'foo@bar.be\', mailSent2.get(\'From\'))\n         self.assertEqual(\'Document created !\',\n-                         mailSent.get_payload())\n+                         mailSent2.get_payload())\n         self._teardown_mockmail()\n \n     def testExecuteExcludeActor(self):\n'

