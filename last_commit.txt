Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2018-06-15T10:14:51+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.discussion/commit/bf0fa909b9ca43b004adc3ae212692e5257fedef

fix tests for plone.login merge

Files changed:
M CHANGES.rst
M plone/app/discussion/tests/functional_test_comment_review_workflow.txt
M plone/app/discussion/tests/functional_test_comments.txt

b"diff --git a/CHANGES.rst b/CHANGES.rst\nindex 0f9dfb50..cd847e75 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -14,6 +14,9 @@ New features:\n \n Bug fixes:\n \n+- Fix tests to work with merges plone.login.\n+  [jensens]\n+\n - More Python 2 / 3 compatibility.\n   [pbauer]\n \ndiff --git a/plone/app/discussion/tests/functional_test_comment_review_workflow.txt b/plone/app/discussion/tests/functional_test_comment_review_workflow.txt\nindex cd654d9c..a835f964 100644\n--- a/plone/app/discussion/tests/functional_test_comment_review_workflow.txt\n+++ b/plone/app/discussion/tests/functional_test_comment_review_workflow.txt\n@@ -143,7 +143,7 @@ actions.\n     >>> browser.open(portal_url + '/login_form')\n     >>> browser.getControl(name='__ac_name').value = 'jack'\n     >>> browser.getControl(name='__ac_password').value = 'secret'\n-    >>> browser.getControl(name='submit').click()\n+    >>> browser.getControl('Log in').click()\n \n     >>> browser.open(urldoc)\n \n@@ -241,7 +241,7 @@ Enable anonymous comment with email.\n     >>> browser.open(portal_url + '/login_form')\n     >>> browser.getControl(name='__ac_name').value = 'admin'\n     >>> browser.getControl(name='__ac_password').value = 'secret'\n-    >>> browser.getControl(name='submit').click()\n+    >>> browser.getControl('Log in').click()\n     >>> browser.open(portal_url+'/@@discussion-controlpanel')\n     >>> browser.getControl(name='form.widgets.anonymous_comments:list').value = 'selected'\n     >>> browser.getControl(name='form.widgets.anonymous_email_enabled:list').value = 'selected'\n@@ -274,7 +274,7 @@ The new comment is shown in moderation view with authors name and email.\n \n     >>> browser.url\n     'http://nohost/plone/@@moderate-comments'\n-    \n+\n     >>> 'John' in browser.contents\n     True\n \ndiff --git a/plone/app/discussion/tests/functional_test_comments.txt b/plone/app/discussion/tests/functional_test_comments.txt\nindex c9fe2bd8..97e195b4 100644\n--- a/plone/app/discussion/tests/functional_test_comments.txt\n+++ b/plone/app/discussion/tests/functional_test_comments.txt\n@@ -126,7 +126,7 @@ Login as user (without the 'Member' role).\n     >>> browser_user.open(portal_url + '/login_form')\n     >>> browser_user.getControl(name='__ac_name').value = 'johndoe'\n     >>> browser_user.getControl(name='__ac_password').value = 'secret'\n-    >>> browser_user.getControl(name='submit').click()\n+    >>> browser_user.getControl('Log in').click()\n \n Users without the 'Reply to item' permission will not see the comment form,\n because they don't have the 'Reply to item' permission. By default, this\n@@ -146,7 +146,7 @@ Login as user 'jim'.\n     >>> browser_member.open(portal_url + '/login_form')\n     >>> browser_member.getControl(name='__ac_name').value = 'jim'\n     >>> browser_member.getControl(name='__ac_password').value = 'secret'\n-    >>> browser_member.getControl(name='submit').click()\n+    >>> browser_member.getControl('Log in').click()\n \n Post a comment as user jim.\n \n@@ -180,7 +180,7 @@ Enable anonymous comment\n     >>> browser.open(portal_url + '/login_form')\n     >>> browser.getControl(name='__ac_name').value = 'admin'\n     >>> browser.getControl(name='__ac_password').value = 'secret'\n-    >>> browser.getControl(name='submit').click()\n+    >>> browser.getControl('Log in').click()\n     >>> browser.open(portal_url+'/@@discussion-controlpanel')\n     >>> browser.getControl(name='form.widgets.anonymous_comments:list').value = 'selected'\n     >>> browser.getControl(name='form.buttons.save').click()\n@@ -391,7 +391,7 @@ Now login as user 'reviewer'\n     >>> browser_reviewer.open(portal_url + '/login_form')\n     >>> browser_reviewer.getControl(name='__ac_name').value = 'reviewer'\n     >>> browser_reviewer.getControl(name='__ac_password').value = 'secret'\n-    >>> browser_reviewer.getControl(name='submit').click()\n+    >>> browser_reviewer.getControl('Log in').click()\n \n Admin and who have 'Delete comments' permission (reviewers for example), can delete comments\n \n@@ -461,7 +461,7 @@ Login as admin.\n     >>> browser.open(portal_url + '/login_form')\n     >>> browser.getControl(name='__ac_name').value = 'admin'\n     >>> browser.getControl(name='__ac_password').value = 'secret'\n-    >>> browser.getControl(name='submit').click()\n+    >>> browser.getControl('Log in').click()\n \n Edit the content object.\n \n@@ -490,7 +490,7 @@ Edit the control panel.\n     >>> browser.open(portal_url + '/login_form')\n     >>> browser.getControl(name='__ac_name').value = 'admin'\n     >>> browser.getControl(name='__ac_password').value = 'secret'\n-    >>> browser.getControl(name='submit').click()\n+    >>> browser.getControl('Log in').click()\n     >>> browser.open(portal_url+'/@@discussion-controlpanel')\n     >>> browser.getControl(name='form.widgets.anonymous_email_enabled:list').value = 'selected'\n     >>> browser.getControl(name='form.buttons.save').click()\n@@ -542,7 +542,7 @@ Login as user 'jim'.\n     >>> browser_member.open(portal_url + '/login_form')\n     >>> browser_member.getControl(name='__ac_name').value = 'jim'\n     >>> browser_member.getControl(name='__ac_password').value = 'secret'\n-    >>> browser_member.getControl(name='submit').click()\n+    >>> browser_member.getControl('Log in').click()\n \n Post a comment as user jim.\n \n"

Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2018-06-15T10:22:11+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.discussion/commit/58711579c46a3259f8d50041c56a5c94b34a1e42

isort

Files changed:
M docs/source/conf.py
M plone/app/discussion/browser/comment.py
M plone/app/discussion/browser/comments.py
M plone/app/discussion/comment.py
M plone/app/discussion/conversation.py
M plone/app/discussion/tests/test_conversation.py
M plone/app/discussion/tests/test_indexers.py

b'diff --git a/docs/source/conf.py b/docs/source/conf.py\nindex 71374d4b..925d1314 100644\n--- a/docs/source/conf.py\n+++ b/docs/source/conf.py\n@@ -11,8 +11,9 @@\n # All configuration values have a default; values that are commented out\n # serve to show the default.\n \n-import sys\n import os\n+import sys\n+\n \n # If extensions (or modules to document with autodoc) are in another directory,\n # add these directories to sys.path here. If the directory is relative to the\ndiff --git a/plone/app/discussion/browser/comment.py b/plone/app/discussion/browser/comment.py\nindex 6497fecb..12fa62a4 100644\n--- a/plone/app/discussion/browser/comment.py\n+++ b/plone/app/discussion/browser/comment.py\n@@ -1,8 +1,8 @@\n # coding: utf-8\n+from .comments import CommentForm\n from AccessControl import getSecurityManager\n from Acquisition import aq_inner\n from Acquisition import aq_parent\n-from .comments import CommentForm\n from plone.app.discussion import _\n from plone.registry.interfaces import IRegistry\n from plone.z3cform.layout import wrap_form\ndiff --git a/plone/app/discussion/browser/comments.py b/plone/app/discussion/browser/comments.py\nindex 2689c971..7f08f176 100644\n--- a/plone/app/discussion/browser/comments.py\n+++ b/plone/app/discussion/browser/comments.py\n@@ -32,7 +32,6 @@\n from zope.i18nmessageid import Message\n from zope.interface import alsoProvides\n \n-\n import six\n \n \ndiff --git a/plone/app/discussion/comment.py b/plone/app/discussion/comment.py\nindex 33d77f43..de9e48ff 100644\n--- a/plone/app/discussion/comment.py\n+++ b/plone/app/discussion/comment.py\n@@ -38,8 +38,6 @@\n from zope.interface import implementer\n \n import logging\n-\n-\n import six\n \n \ndiff --git a/plone/app/discussion/conversation.py b/plone/app/discussion/conversation.py\nindex e7dec306..0863504c 100644\n--- a/plone/app/discussion/conversation.py\n+++ b/plone/app/discussion/conversation.py\n@@ -37,10 +37,8 @@\n from zope.lifecycleevent import ObjectCreatedEvent\n from zope.lifecycleevent import ObjectRemovedEvent\n \n-import time\n-\n-\n import six\n+import time\n \n \n @implementer(IConversation, IHideFromBreadcrumbs)\ndiff --git a/plone/app/discussion/tests/test_conversation.py b/plone/app/discussion/tests/test_conversation.py\nindex 4b4e30b8..e88d13ee 100644\n--- a/plone/app/discussion/tests/test_conversation.py\n+++ b/plone/app/discussion/tests/test_conversation.py\n@@ -19,10 +19,8 @@\n from zope.component import createObject\n from zope.component import queryUtility\n \n-import unittest\n-\n-\n import six\n+import unittest\n \n \n try:\ndiff --git a/plone/app/discussion/tests/test_indexers.py b/plone/app/discussion/tests/test_indexers.py\nindex 118a1fe6..0c784d1c 100644\n--- a/plone/app/discussion/tests/test_indexers.py\n+++ b/plone/app/discussion/tests/test_indexers.py\n@@ -1,8 +1,8 @@\n # -*- coding: utf-8 -*-\n """Test for the plone.app.discussion indexers\n """\n-from datetime import datetime\n from DateTime import DateTime\n+from datetime import datetime\n from plone.app.discussion import catalog\n from plone.app.discussion.interfaces import IConversation\n from plone.app.discussion.testing import PLONE_APP_DISCUSSION_INTEGRATION_TESTING  # noqa\n'

Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2018-06-18T14:17:42+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.discussion/commit/0a16de852664f0e33ceded2673931a9cec7f635b

Merge pull request #132 from plone/merge-plone-login

fix tests for plone.login merge

Files changed:
M CHANGES.rst
M docs/source/conf.py
M plone/app/discussion/browser/comment.py
M plone/app/discussion/browser/comments.py
M plone/app/discussion/comment.py
M plone/app/discussion/conversation.py
M plone/app/discussion/tests/functional_test_comment_review_workflow.txt
M plone/app/discussion/tests/functional_test_comments.txt
M plone/app/discussion/tests/test_conversation.py
M plone/app/discussion/tests/test_indexers.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 0f9dfb50..cd847e75 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -14,6 +14,9 @@ New features:\n \n Bug fixes:\n \n+- Fix tests to work with merges plone.login.\n+  [jensens]\n+\n - More Python 2 / 3 compatibility.\n   [pbauer]\n \ndiff --git a/docs/source/conf.py b/docs/source/conf.py\nindex 71374d4b..925d1314 100644\n--- a/docs/source/conf.py\n+++ b/docs/source/conf.py\n@@ -11,8 +11,9 @@\n # All configuration values have a default; values that are commented out\n # serve to show the default.\n \n-import sys\n import os\n+import sys\n+\n \n # If extensions (or modules to document with autodoc) are in another directory,\n # add these directories to sys.path here. If the directory is relative to the\ndiff --git a/plone/app/discussion/browser/comment.py b/plone/app/discussion/browser/comment.py\nindex 6497fecb..12fa62a4 100644\n--- a/plone/app/discussion/browser/comment.py\n+++ b/plone/app/discussion/browser/comment.py\n@@ -1,8 +1,8 @@\n # coding: utf-8\n+from .comments import CommentForm\n from AccessControl import getSecurityManager\n from Acquisition import aq_inner\n from Acquisition import aq_parent\n-from .comments import CommentForm\n from plone.app.discussion import _\n from plone.registry.interfaces import IRegistry\n from plone.z3cform.layout import wrap_form\ndiff --git a/plone/app/discussion/browser/comments.py b/plone/app/discussion/browser/comments.py\nindex 2689c971..7f08f176 100644\n--- a/plone/app/discussion/browser/comments.py\n+++ b/plone/app/discussion/browser/comments.py\n@@ -32,7 +32,6 @@\n from zope.i18nmessageid import Message\n from zope.interface import alsoProvides\n \n-\n import six\n \n \ndiff --git a/plone/app/discussion/comment.py b/plone/app/discussion/comment.py\nindex 33d77f43..de9e48ff 100644\n--- a/plone/app/discussion/comment.py\n+++ b/plone/app/discussion/comment.py\n@@ -38,8 +38,6 @@\n from zope.interface import implementer\n \n import logging\n-\n-\n import six\n \n \ndiff --git a/plone/app/discussion/conversation.py b/plone/app/discussion/conversation.py\nindex e7dec306..0863504c 100644\n--- a/plone/app/discussion/conversation.py\n+++ b/plone/app/discussion/conversation.py\n@@ -37,10 +37,8 @@\n from zope.lifecycleevent import ObjectCreatedEvent\n from zope.lifecycleevent import ObjectRemovedEvent\n \n-import time\n-\n-\n import six\n+import time\n \n \n @implementer(IConversation, IHideFromBreadcrumbs)\ndiff --git a/plone/app/discussion/tests/functional_test_comment_review_workflow.txt b/plone/app/discussion/tests/functional_test_comment_review_workflow.txt\nindex cd654d9c..a835f964 100644\n--- a/plone/app/discussion/tests/functional_test_comment_review_workflow.txt\n+++ b/plone/app/discussion/tests/functional_test_comment_review_workflow.txt\n@@ -143,7 +143,7 @@ actions.\n     >>> browser.open(portal_url + \'/login_form\')\n     >>> browser.getControl(name=\'__ac_name\').value = \'jack\'\n     >>> browser.getControl(name=\'__ac_password\').value = \'secret\'\n-    >>> browser.getControl(name=\'submit\').click()\n+    >>> browser.getControl(\'Log in\').click()\n \n     >>> browser.open(urldoc)\n \n@@ -241,7 +241,7 @@ Enable anonymous comment with email.\n     >>> browser.open(portal_url + \'/login_form\')\n     >>> browser.getControl(name=\'__ac_name\').value = \'admin\'\n     >>> browser.getControl(name=\'__ac_password\').value = \'secret\'\n-    >>> browser.getControl(name=\'submit\').click()\n+    >>> browser.getControl(\'Log in\').click()\n     >>> browser.open(portal_url+\'/@@discussion-controlpanel\')\n     >>> browser.getControl(name=\'form.widgets.anonymous_comments:list\').value = \'selected\'\n     >>> browser.getControl(name=\'form.widgets.anonymous_email_enabled:list\').value = \'selected\'\n@@ -274,7 +274,7 @@ The new comment is shown in moderation view with authors name and email.\n \n     >>> browser.url\n     \'http://nohost/plone/@@moderate-comments\'\n-    \n+\n     >>> \'John\' in browser.contents\n     True\n \ndiff --git a/plone/app/discussion/tests/functional_test_comments.txt b/plone/app/discussion/tests/functional_test_comments.txt\nindex c9fe2bd8..97e195b4 100644\n--- a/plone/app/discussion/tests/functional_test_comments.txt\n+++ b/plone/app/discussion/tests/functional_test_comments.txt\n@@ -126,7 +126,7 @@ Login as user (without the \'Member\' role).\n     >>> browser_user.open(portal_url + \'/login_form\')\n     >>> browser_user.getControl(name=\'__ac_name\').value = \'johndoe\'\n     >>> browser_user.getControl(name=\'__ac_password\').value = \'secret\'\n-    >>> browser_user.getControl(name=\'submit\').click()\n+    >>> browser_user.getControl(\'Log in\').click()\n \n Users without the \'Reply to item\' permission will not see the comment form,\n because they don\'t have the \'Reply to item\' permission. By default, this\n@@ -146,7 +146,7 @@ Login as user \'jim\'.\n     >>> browser_member.open(portal_url + \'/login_form\')\n     >>> browser_member.getControl(name=\'__ac_name\').value = \'jim\'\n     >>> browser_member.getControl(name=\'__ac_password\').value = \'secret\'\n-    >>> browser_member.getControl(name=\'submit\').click()\n+    >>> browser_member.getControl(\'Log in\').click()\n \n Post a comment as user jim.\n \n@@ -180,7 +180,7 @@ Enable anonymous comment\n     >>> browser.open(portal_url + \'/login_form\')\n     >>> browser.getControl(name=\'__ac_name\').value = \'admin\'\n     >>> browser.getControl(name=\'__ac_password\').value = \'secret\'\n-    >>> browser.getControl(name=\'submit\').click()\n+    >>> browser.getControl(\'Log in\').click()\n     >>> browser.open(portal_url+\'/@@discussion-controlpanel\')\n     >>> browser.getControl(name=\'form.widgets.anonymous_comments:list\').value = \'selected\'\n     >>> browser.getControl(name=\'form.buttons.save\').click()\n@@ -391,7 +391,7 @@ Now login as user \'reviewer\'\n     >>> browser_reviewer.open(portal_url + \'/login_form\')\n     >>> browser_reviewer.getControl(name=\'__ac_name\').value = \'reviewer\'\n     >>> browser_reviewer.getControl(name=\'__ac_password\').value = \'secret\'\n-    >>> browser_reviewer.getControl(name=\'submit\').click()\n+    >>> browser_reviewer.getControl(\'Log in\').click()\n \n Admin and who have \'Delete comments\' permission (reviewers for example), can delete comments\n \n@@ -461,7 +461,7 @@ Login as admin.\n     >>> browser.open(portal_url + \'/login_form\')\n     >>> browser.getControl(name=\'__ac_name\').value = \'admin\'\n     >>> browser.getControl(name=\'__ac_password\').value = \'secret\'\n-    >>> browser.getControl(name=\'submit\').click()\n+    >>> browser.getControl(\'Log in\').click()\n \n Edit the content object.\n \n@@ -490,7 +490,7 @@ Edit the control panel.\n     >>> browser.open(portal_url + \'/login_form\')\n     >>> browser.getControl(name=\'__ac_name\').value = \'admin\'\n     >>> browser.getControl(name=\'__ac_password\').value = \'secret\'\n-    >>> browser.getControl(name=\'submit\').click()\n+    >>> browser.getControl(\'Log in\').click()\n     >>> browser.open(portal_url+\'/@@discussion-controlpanel\')\n     >>> browser.getControl(name=\'form.widgets.anonymous_email_enabled:list\').value = \'selected\'\n     >>> browser.getControl(name=\'form.buttons.save\').click()\n@@ -542,7 +542,7 @@ Login as user \'jim\'.\n     >>> browser_member.open(portal_url + \'/login_form\')\n     >>> browser_member.getControl(name=\'__ac_name\').value = \'jim\'\n     >>> browser_member.getControl(name=\'__ac_password\').value = \'secret\'\n-    >>> browser_member.getControl(name=\'submit\').click()\n+    >>> browser_member.getControl(\'Log in\').click()\n \n Post a comment as user jim.\n \ndiff --git a/plone/app/discussion/tests/test_conversation.py b/plone/app/discussion/tests/test_conversation.py\nindex 4b4e30b8..e88d13ee 100644\n--- a/plone/app/discussion/tests/test_conversation.py\n+++ b/plone/app/discussion/tests/test_conversation.py\n@@ -19,10 +19,8 @@\n from zope.component import createObject\n from zope.component import queryUtility\n \n-import unittest\n-\n-\n import six\n+import unittest\n \n \n try:\ndiff --git a/plone/app/discussion/tests/test_indexers.py b/plone/app/discussion/tests/test_indexers.py\nindex 118a1fe6..0c784d1c 100644\n--- a/plone/app/discussion/tests/test_indexers.py\n+++ b/plone/app/discussion/tests/test_indexers.py\n@@ -1,8 +1,8 @@\n # -*- coding: utf-8 -*-\n """Test for the plone.app.discussion indexers\n """\n-from datetime import datetime\n from DateTime import DateTime\n+from datetime import datetime\n from plone.app.discussion import catalog\n from plone.app.discussion.interfaces import IConversation\n from plone.app.discussion.testing import PLONE_APP_DISCUSSION_INTEGRATION_TESTING  # noqa\n'

