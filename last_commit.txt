Repository: plone.volto


Branch: refs/heads/main
Date: 2022-06-24T22:45:34+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.volto/commit/9c7b7da42c850a0e5d1d017274e258751ce33fcc

Fix flake heaven config and unused imports/variables (#71)

* Fix flakeheaven/pycodestyle config. Enable mccabe and pylint.

Before:

```
$ bin/flakeheaven plugins
NAME        | VERSION  | CODES            | RULES
mccabe      | 0.6.1    | C90              |
pycodestyle | 2.8.0    | E, W             | +*
pyflakes    | 2.4.0    | F                | +*
pylint      | 0.0.0    | C, E, F, I, R, W |
```

Note that mccabe and pylint are available, but not used.
See https://flakeheaven.readthedocs.io/en/latest/plugins.html

After:

```
$ bin/flakeheaven plugins
NAME        | VERSION  | CODES            | RULES
mccabe      | 0.6.1    | C90              | +*
pycodestyle | 2.8.0    | E, W             | +*, -E501, -W503
pyflakes    | 2.4.0    | F                | +*
pylint      | 0.0.0    | C, E, F, I, R, W | +*
```

* Removed unused imports and unused variables.

* flake8 gh-actions: complain when configured plugins are missing.

And show the plugins. Could be useful debugging info.

* Update isort config

Running isort and black and then isort again leads to changes, which is bad.

* isort

* Add news snippet

Files changed:
A news/71.bugfix
M .github/workflows/flake8.yml
M pyproject.toml
M setup.cfg
M setup.py
M src/plone/volto/behaviors/headtitle.py
M src/plone/volto/behaviors/navtitle.py
M src/plone/volto/behaviors/preview.py
M src/plone/volto/blocksuuidfixer.py
M src/plone/volto/browser/migrate_richtext.py
M src/plone/volto/browser/migrate_to_volto.py
M src/plone/volto/content.py
M src/plone/volto/controlpanel.py
M src/plone/volto/coresandbox/example.py
M src/plone/volto/default_homepage/default.py
M src/plone/volto/default_homepage/demo.py
M src/plone/volto/patches.py
M src/plone/volto/scripts/add_image_field_metadata.py
M src/plone/volto/scripts/auditblocks.py
M src/plone/volto/scripts/searchscalesinimageblocks.py
M src/plone/volto/scripts/utils.py
M src/plone/volto/tests/test_coresandbox.py
M src/plone/volto/tests/test_migrate_to_volto.py
M src/plone/volto/tests/test_setup.py
M src/plone/volto/tests/test_transforms.py
M src/plone/volto/tests/test_upgrades.py
M src/plone/volto/transforms.py
M src/plone/volto/vocabularies/subject.py

b'diff --git a/.github/workflows/flake8.yml b/.github/workflows/flake8.yml\nindex ee3985d..c49cf1f 100644\n--- a/.github/workflows/flake8.yml\n+++ b/.github/workflows/flake8.yml\n@@ -31,4 +31,7 @@ jobs:\n \n       # run black\n       - name: run flake8\n-        run: flakeheaven lint src/ setup.py\n+        run: |\n+          flakeheaven plugins\n+          flakeheaven missed\n+          flakeheaven lint src/ setup.py\ndiff --git a/news/71.bugfix b/news/71.bugfix\nnew file mode 100644\nindex 0000000..5076138\n--- /dev/null\n+++ b/news/71.bugfix\n@@ -0,0 +1,3 @@\n+Fixed code quality configuration.\n+Removed unused imports and variables and sorted the imports.\n+[maurits]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 05b615d..abae265 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -18,3 +18,15 @@ showcontent = true\n directory = "bugfix"\n name = "Bug fixes:"\n showcontent = true\n+\n+[tool.flakeheaven.plugins]\n+# Disable some checks.\n+# - E501 line too long\n+#   flake8 is already testing this, with max-line-length=100000 in .flake8,\n+#   so pycodestyle should not test it.\n+# - W503 line break before binary operator\n+#   Outdated recommendation, see https://www.flake8rules.com/rules/W503.html\n+mccabe = ["+*"]\n+pycodestyle = ["+*", "-E501", "-W503"]\n+pyflakes = ["+*"]\n+pylint = ["+*"]\ndiff --git a/setup.cfg b/setup.cfg\nindex 285fc29..473fa2d 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -7,9 +7,10 @@ ignore =\n     bootstrap-buildout.py\n \n [isort]\n+# black compatible Plone isort rules:\n # for details see\n-# http://docs.plone.org/develop/styleguide/python.html#grouping-and-sorting\n+# https://github.com/plone/Products.CMFPlone/issues/3497\n+profile = black\n force_alphabetical_sort = True\n force_single_line = True\n lines_after_imports = 2\n-line_length = 200\ndiff --git a/setup.py b/setup.py\nindex 1b26003..d069de0 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -3,6 +3,7 @@\n \n from setuptools import find_packages\n from setuptools import setup\n+\n import sys\n \n \ndiff --git a/src/plone/volto/behaviors/headtitle.py b/src/plone/volto/behaviors/headtitle.py\nindex 8610f3d..472ff29 100644\n--- a/src/plone/volto/behaviors/headtitle.py\n+++ b/src/plone/volto/behaviors/headtitle.py\n@@ -1,9 +1,9 @@\n # -*- coding: utf-8 -*-\n-from plone.volto import _\n from plone.autoform.interfaces import IFormFieldProvider\n from plone.supermodel import model\n-from zope.interface import provider\n+from plone.volto import _\n from zope import schema\n+from zope.interface import provider\n \n \n @provider(IFormFieldProvider)\ndiff --git a/src/plone/volto/behaviors/navtitle.py b/src/plone/volto/behaviors/navtitle.py\nindex c4f9346..f7392af 100644\n--- a/src/plone/volto/behaviors/navtitle.py\n+++ b/src/plone/volto/behaviors/navtitle.py\n@@ -1,7 +1,7 @@\n # -*- coding: utf-8 -*-\n-from plone.volto import _\n from plone.autoform.interfaces import IFormFieldProvider\n from plone.supermodel import model\n+from plone.volto import _\n from zope.interface import provider\n from zope.schema import TextLine\n \ndiff --git a/src/plone/volto/behaviors/preview.py b/src/plone/volto/behaviors/preview.py\nindex 3f002be..705b23d 100644\n--- a/src/plone/volto/behaviors/preview.py\n+++ b/src/plone/volto/behaviors/preview.py\n@@ -1,8 +1,8 @@\n # -*- coding: utf-8 -*-\n-from plone.volto import _\n from plone.autoform.interfaces import IFormFieldProvider\n from plone.namedfile import field as namedfile\n from plone.supermodel import model\n+from plone.volto import _\n from zope.interface import provider\n from zope.schema import TextLine\n \ndiff --git a/src/plone/volto/blocksuuidfixer.py b/src/plone/volto/blocksuuidfixer.py\nindex 605a641..0507173 100644\n--- a/src/plone/volto/blocksuuidfixer.py\n+++ b/src/plone/volto/blocksuuidfixer.py\n@@ -1,8 +1,8 @@\n-from Products.Five.browser import BrowserView\n from plone import api\n+from plone.protect.interfaces import IDisableCSRFProtection\n from plone.restapi.behaviors import IBlocks\n+from Products.Five.browser import BrowserView\n from zope.interface import alsoProvides\n-from plone.protect.interfaces import IDisableCSRFProtection\n \n import uuid\n \ndiff --git a/src/plone/volto/browser/migrate_richtext.py b/src/plone/volto/browser/migrate_richtext.py\nindex 0ca310f..2753d9f 100644\n--- a/src/plone/volto/browser/migrate_richtext.py\n+++ b/src/plone/volto/browser/migrate_richtext.py\n@@ -10,6 +10,7 @@\n import requests\n import transaction\n \n+\n logger = getLogger(__name__)\n \n \ndiff --git a/src/plone/volto/browser/migrate_to_volto.py b/src/plone/volto/browser/migrate_to_volto.py\nindex 4b8661b..9e64ee5 100644\n--- a/src/plone/volto/browser/migrate_to_volto.py\n+++ b/src/plone/volto/browser/migrate_to_volto.py\n@@ -2,7 +2,6 @@\n from logging import getLogger\n from plone import api\n from plone.app.contenttypes.behaviors.collection import ICollection\n-from plone.app.contenttypes.behaviors.leadimage import ILeadImage\n from plone.app.linkintegrity.utils import referencedRelationship\n from plone.app.redirector.interfaces import IRedirectionStorage\n from plone.app.textfield.value import RichTextValue\n@@ -17,6 +16,7 @@\n from zope.component import getUtility\n from zope.lifecycleevent import modified\n \n+\n try:\n     from plone.app.contenttypes.utils import migrate_base_class_to_new_class\n except ImportError:\n@@ -25,9 +25,6 @@\n         migrate_base_class_to_new_class,\n     )\n \n-import requests\n-import transaction\n-\n logger = getLogger(__name__)\n \n \n@@ -90,7 +87,6 @@ def do_migrate_folders(self):\n         for brain in catalog(portal_type="Folder", sort_on="path"):\n             obj = brain.getObject()\n             obj = make_document(obj, slate=self.slate)\n-            parent = obj.__parent__\n             migrated_default_page = False\n             if self.migrate_default_pages:\n                 migrated_default_page = self.do_migrate_default_page(obj)\ndiff --git a/src/plone/volto/content.py b/src/plone/volto/content.py\nindex 2e67e18..0756a2b 100644\n--- a/src/plone/volto/content.py\n+++ b/src/plone/volto/content.py\n@@ -1,11 +1,11 @@\n # -*- coding: utf-8 -*-\n-from plone.volto.interfaces import IFolderishDocument\n-from plone.volto.interfaces import IFolderishEvent\n-from plone.volto.interfaces import IFolderishNewsItem\n from plone.app.contenttypes.interfaces import IDocument\n from plone.app.contenttypes.interfaces import IEvent\n from plone.app.contenttypes.interfaces import INewsItem\n from plone.dexterity.content import Container\n+from plone.volto.interfaces import IFolderishDocument\n+from plone.volto.interfaces import IFolderishEvent\n+from plone.volto.interfaces import IFolderishNewsItem\n from zope.interface import implementer\n \n \ndiff --git a/src/plone/volto/controlpanel.py b/src/plone/volto/controlpanel.py\nindex 1b51adf..77007fd 100644\n--- a/src/plone/volto/controlpanel.py\n+++ b/src/plone/volto/controlpanel.py\n@@ -1,8 +1,8 @@\n # -*- coding: UTF-8 -*-\n-from plone.volto.interfaces import IVoltoSettings\n from plone.app.registry.browser.controlpanel import ControlPanelFormWrapper\n from plone.app.registry.browser.controlpanel import RegistryEditForm\n from plone.restapi.controlpanels import RegistryConfigletPanel\n+from plone.volto.interfaces import IVoltoSettings\n from zope.component import adapter\n from zope.interface import Interface\n \ndiff --git a/src/plone/volto/coresandbox/example.py b/src/plone/volto/coresandbox/example.py\nindex 51b5e6d..7b9524f 100644\n--- a/src/plone/volto/coresandbox/example.py\n+++ b/src/plone/volto/coresandbox/example.py\n@@ -7,7 +7,6 @@\n from plone.app.z3cform.widget import SelectFieldWidget\n from plone.autoform import directives\n from plone.dexterity.content import Container\n-\n from plone.namedfile.field import NamedBlobFile\n from plone.namedfile.field import NamedBlobImage\n from plone.schema import Email\n@@ -18,16 +17,14 @@\n from plone.supermodel import model\n from plone.supermodel.directives import fieldset\n from plone.supermodel.directives import primary\n-\n from z3c.form.browser.checkbox import CheckBoxFieldWidget\n from z3c.form.browser.radio import RadioFieldWidget\n-\n from z3c.relationfield.schema import RelationChoice\n from z3c.relationfield.schema import RelationList\n from zope import schema\n+from zope.i18nmessageid import MessageFactory\n from zope.interface import implementer\n \n-from zope.i18nmessageid import MessageFactory\n \n _ = PloneMessageFactory = MessageFactory("plone")\n \ndiff --git a/src/plone/volto/default_homepage/default.py b/src/plone/volto/default_homepage/default.py\nindex dba86e9..5f3166f 100644\n--- a/src/plone/volto/default_homepage/default.py\n+++ b/src/plone/volto/default_homepage/default.py\n@@ -1,5 +1,6 @@\n from datetime import datetime\n \n+\n default_home = {\n     "draftJS": {\n         "title": "Welcome to Volto!",\ndiff --git a/src/plone/volto/default_homepage/demo.py b/src/plone/volto/default_homepage/demo.py\nindex bc7ff09..34922e0 100644\n--- a/src/plone/volto/default_homepage/demo.py\n+++ b/src/plone/volto/default_homepage/demo.py\n@@ -1,5 +1,6 @@\n from datetime import datetime\n \n+\n demo_home_page = {\n     "draftJS": {\n         "title": "Welcome to Plone 6!",\ndiff --git a/src/plone/volto/patches.py b/src/plone/volto/patches.py\nindex 24ba8c7..86128ad 100644\n--- a/src/plone/volto/patches.py\n+++ b/src/plone/volto/patches.py\n@@ -1,10 +1,10 @@\n from plone.app.upgrade.utils import alias_module\n-from plone.volto import logger\n+from plone.registry.interfaces import IRegistry\n+from plone.rest.interfaces import IAPIRequest\n from plone.volto import content\n from plone.volto import interfaces\n+from plone.volto import logger\n from plone.volto.interfaces import IVoltoSettings\n-from plone.registry.interfaces import IRegistry\n-from plone.rest.interfaces import IAPIRequest\n from Products.SiteErrorLog.SiteErrorLog import _rate_restrict_burst\n from Products.SiteErrorLog.SiteErrorLog import _rate_restrict_period\n from Products.SiteErrorLog.SiteErrorLog import _rate_restrict_pool\ndiff --git a/src/plone/volto/scripts/add_image_field_metadata.py b/src/plone/volto/scripts/add_image_field_metadata.py\nindex bf4c032..ce2a860 100644\n--- a/src/plone/volto/scripts/add_image_field_metadata.py\n+++ b/src/plone/volto/scripts/add_image_field_metadata.py\n@@ -5,6 +5,7 @@\n from plone.app.contenttypes.behaviors.leadimage import ILeadImageBehavior\n from plone.volto.behaviors.preview import IPreview\n from plone.volto.scripts.utils import print_info\n+\n import transaction\n \n \ndiff --git a/src/plone/volto/scripts/auditblocks.py b/src/plone/volto/scripts/auditblocks.py\nindex efcc63a..d2c1d5c 100644\n--- a/src/plone/volto/scripts/auditblocks.py\n+++ b/src/plone/volto/scripts/auditblocks.py\n@@ -3,9 +3,9 @@\n     This script audits the blocks that you have in a site. If an optional block_name is\n     defined, then it returns where is that block defined.\n """\n+from collections import Counter\n from plone import api\n from plone.restapi.behaviors import IBlocks\n-from collections import Counter\n \n import sys\n \ndiff --git a/src/plone/volto/scripts/searchscalesinimageblocks.py b/src/plone/volto/scripts/searchscalesinimageblocks.py\nindex e298b80..1d7302c 100644\n--- a/src/plone/volto/scripts/searchscalesinimageblocks.py\n+++ b/src/plone/volto/scripts/searchscalesinimageblocks.py\n@@ -6,14 +6,15 @@\n     newservername can be empty to remove the server name\n """\n \n+from copy import deepcopy\n from plone import api\n from plone.restapi.behaviors import IBlocks\n-from copy import deepcopy\n \n import os\n import sys\n import transaction\n \n+\n PATH = "/Plone"\n \n # Make other scripts in this folder available\ndiff --git a/src/plone/volto/scripts/utils.py b/src/plone/volto/scripts/utils.py\nindex 6db0842..fa21829 100644\n--- a/src/plone/volto/scripts/utils.py\n+++ b/src/plone/volto/scripts/utils.py\n@@ -1,5 +1,5 @@\n-import logging\n import csv\n+import logging\n \n \n logger = logging.getLogger("plone.volto.scripts")\ndiff --git a/src/plone/volto/tests/test_coresandbox.py b/src/plone/volto/tests/test_coresandbox.py\nindex 2dd4143..4194e4a 100644\n--- a/src/plone/volto/tests/test_coresandbox.py\n+++ b/src/plone/volto/tests/test_coresandbox.py\n@@ -1,12 +1,11 @@\n # -*- coding: utf-8 -*-\n-from plone.volto.testing import PLONE_VOLTO_CORESANDBOX_FUNCTIONAL_TESTING\n-\n # from plone import api\n from plone.app.testing import setRoles\n from plone.app.testing import SITE_OWNER_NAME\n from plone.app.testing import SITE_OWNER_PASSWORD\n from plone.app.testing import TEST_USER_ID\n from plone.restapi.testing import RelativeSession\n+from plone.volto.testing import PLONE_VOLTO_CORESANDBOX_FUNCTIONAL_TESTING\n \n # import transaction\n import unittest\ndiff --git a/src/plone/volto/tests/test_migrate_to_volto.py b/src/plone/volto/tests/test_migrate_to_volto.py\nindex a1572a0..259d860 100644\n--- a/src/plone/volto/tests/test_migrate_to_volto.py\n+++ b/src/plone/volto/tests/test_migrate_to_volto.py\n@@ -1,7 +1,6 @@\n from Acquisition import aq_base\n from plone import api\n from plone.app.testing import setRoles\n-from plone.app.testing import SITE_OWNER_NAME, SITE_OWNER_PASSWORD\n from plone.app.testing import TEST_USER_ID\n from plone.app.textfield.value import RichTextValue\n from plone.volto.content import FolderishDocument\n@@ -14,6 +13,7 @@\n import responses\n import unittest\n \n+\n try:\n     from Products.CMFPlone.factory import PLONE60MARKER\n \n@@ -93,8 +93,8 @@ def test_items_are_migrated_to_folderish(self):\n         self.assertTrue(aq_base(event).isPrincipiaFolderish)\n         self.assertEqual(event.__class__, FolderishEvent)\n \n-        # Doc renders\n-        html = doc.__call__()\n+        # Test that doc renders without error.\n+        doc.__call__()\n         # We can add content\n         news_in_doc = api.content.create(\n             container=doc,\n@@ -105,7 +105,7 @@ def test_items_are_migrated_to_folderish(self):\n         self.assertEqual(news_in_doc.__class__, FolderishNewsItem)\n \n     def test_folders_are_migrated(self):\n-        folder = api.content.create(\n+        api.content.create(\n             container=self.portal,\n             type="Folder",\n             id="folder1",\n@@ -178,7 +178,7 @@ def test_default_pages_are_migrated(self):\n             id="folder",\n             title="Folder",\n         )\n-        default = api.content.create(\n+        api.content.create(\n             container=folder,\n             type="Document",\n             id="doc",\n@@ -204,7 +204,7 @@ def test_default_page_collections_are_migrated(self):\n             id="folder",\n             title="Folder",\n         )\n-        default = api.content.create(\n+        api.content.create(\n             container=folder,\n             type="Collection",\n             id="collection",\n@@ -233,7 +233,7 @@ def test_default_page_news_are_not_migrated(self):\n             title="Folder",\n             description="This of the folder",\n         )\n-        default = api.content.create(\n+        api.content.create(\n             container=folder,\n             type="News Item",\n             id="news",\ndiff --git a/src/plone/volto/tests/test_setup.py b/src/plone/volto/tests/test_setup.py\nindex bc4d0aa..73e692f 100644\n--- a/src/plone/volto/tests/test_setup.py\n+++ b/src/plone/volto/tests/test_setup.py\n@@ -1,7 +1,8 @@\n # -*- coding: utf-8 -*-\n """Setup tests for this package."""\n-from plone.volto.testing import PLONE_VOLTO_CORE_INTEGRATION_TESTING  # noqa\n from plone import api\n+from plone.volto.testing import PLONE_VOLTO_CORE_INTEGRATION_TESTING  # noqa\n+\n \n try:\n     from Products.CMFPlone.utils import get_installer\n@@ -12,6 +13,7 @@\n \n import unittest\n \n+\n try:\n     from Products.CMFPlone.factory import PLONE60MARKER\n \n@@ -44,8 +46,8 @@ def test_product_installed(self):\n \n     def test_browserlayer(self):\n         """Test that IPloneVoltoCoreLayer is registered."""\n-        from plone.volto.interfaces import IPloneVoltoCoreLayer\n         from plone.browserlayer import utils\n+        from plone.volto.interfaces import IPloneVoltoCoreLayer\n \n         self.assertIn(IPloneVoltoCoreLayer, utils.registered_layers())\n \n@@ -90,7 +92,7 @@ def test_product_uninstalled(self):\n \n     def test_browserlayer_removed(self):\n         """Test that IPloneVoltoCoreLayer is removed."""\n-        from plone.volto.interfaces import IPloneVoltoCoreLayer\n         from plone.browserlayer import utils\n+        from plone.volto.interfaces import IPloneVoltoCoreLayer\n \n         self.assertNotIn(IPloneVoltoCoreLayer, utils.registered_layers())\ndiff --git a/src/plone/volto/tests/test_transforms.py b/src/plone/volto/tests/test_transforms.py\nindex ebd9d6f..1204daa 100644\n--- a/src/plone/volto/tests/test_transforms.py\n+++ b/src/plone/volto/tests/test_transforms.py\n@@ -1,14 +1,14 @@\n # -*- coding: utf-8 -*-\n \n from plone.dexterity.interfaces import IDexterityFTI\n+from plone.dexterity.utils import iterSchemata\n from plone.restapi.interfaces import IDeserializeFromJson\n-from plone.volto.testing import PLONE_VOLTO_CORE_INTEGRATION_TESTING  # noqa\n+from plone.restapi.interfaces import IFieldSerializer\n from plone.uuid.interfaces import IUUID\n+from plone.volto.testing import PLONE_VOLTO_CORE_INTEGRATION_TESTING  # noqa\n+from z3c.form.interfaces import IDataManager\n from zope.component import getMultiAdapter\n from zope.component import queryUtility\n-from plone.dexterity.utils import iterSchemata\n-from plone.restapi.interfaces import IFieldSerializer\n-from z3c.form.interfaces import IDataManager\n \n import json\n import unittest\ndiff --git a/src/plone/volto/tests/test_upgrades.py b/src/plone/volto/tests/test_upgrades.py\nindex 75dfb24..5ddf714 100644\n--- a/src/plone/volto/tests/test_upgrades.py\n+++ b/src/plone/volto/tests/test_upgrades.py\n@@ -1,14 +1,14 @@\n # -*- coding: utf-8 -*-\n \n from plone.dexterity.interfaces import IDexterityFTI\n+from plone.dexterity.utils import iterSchemata\n from plone.restapi.interfaces import IDeserializeFromJson\n+from plone.restapi.interfaces import IFieldSerializer\n from plone.volto.testing import PLONE_VOLTO_CORE_INTEGRATION_TESTING  # noqa\n+from plone.volto.upgrades import from12to13_migrate_listings\n+from z3c.form.interfaces import IDataManager\n from zope.component import getMultiAdapter\n from zope.component import queryUtility\n-from plone.dexterity.utils import iterSchemata\n-from plone.restapi.interfaces import IFieldSerializer\n-from z3c.form.interfaces import IDataManager\n-from plone.volto.upgrades import from12to13_migrate_listings\n \n import json\n import unittest\ndiff --git a/src/plone/volto/transforms.py b/src/plone/volto/transforms.py\nindex 565f4e0..79942e8 100644\n--- a/src/plone/volto/transforms.py\n+++ b/src/plone/volto/transforms.py\n@@ -7,9 +7,9 @@\n from Products.CMFPlone.interfaces import IPloneSiteRoot\n from six import string_types\n from zope.component import adapter\n+from zope.component import subscribers\n from zope.interface import implementer\n from zope.publisher.interfaces.browser import IBrowserRequest\n-from zope.component import subscribers\n \n \n class NestedResolveUIDDeserializerBase(object):\ndiff --git a/src/plone/volto/vocabularies/subject.py b/src/plone/volto/vocabularies/subject.py\nindex 862e892..543b6af 100644\n--- a/src/plone/volto/vocabularies/subject.py\n+++ b/src/plone/volto/vocabularies/subject.py\n@@ -1,17 +1,16 @@\n+from BTrees.IIBTree import intersection\n+from plone.app.layout.navigation.root import getNavigationRootObject\n+from plone.app.vocabularies.terms import safe_encode\n+from plone.registry.interfaces import IRegistry\n+from Products.CMFCore.utils import getToolByName\n from zope.component import queryUtility\n+from zope.component.hooks import getSite\n from zope.interface import directlyProvides\n from zope.interface import implementer\n from zope.schema.interfaces import ITitledTokenizedTerm\n from zope.schema.interfaces import ITokenizedTerm\n from zope.schema.interfaces import IVocabularyFactory\n from zope.schema.vocabulary import SimpleVocabulary\n-from plone.app.layout.navigation.root import getNavigationRootObject\n-from plone.app.vocabularies.terms import safe_encode\n-from plone.registry.interfaces import IRegistry\n-from zope.component.hooks import getSite\n-\n-from BTrees.IIBTree import intersection\n-from Products.CMFCore.utils import getToolByName\n \n \n @implementer(ITokenizedTerm)\n'

