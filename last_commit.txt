Repository: plone.base


Branch: refs/heads/main
Date: 2022-09-09T22:01:05Z
Author: Manuel Amador (Rudd-O) (Rudd-O) <rudd-o@rudd-o.com>
Commit: https://github.com/plone/plone.base/commit/f54f18bd9a3619e0f3e37e77a4ae6dfcd1cee36b

Fix traversal during get_top_site_from_url.

My previous fix broke several tests.  This appears to be the result of trying to
traverse iteratively through the structure of a site (which my code does and the
previous code does not do in the same way), and encountering `Unauthorized`
exceptions during traversal (which is a legitimate thing to get, as /a/b/c may
be accessible to user XXX, but /a/b may not necessarily be).

The fix is to use unrestricted traversal (bypassing security), and then to return
the selected object by using *restricted* traversal in that case.

I am confident this should not result in a security issue â€” however I ask the
true expert Plonistas to verify this confidence is warranted.  Thanks.

And sorry for the breakage.  We need CI tests in `plone.base`.

Files changed:
M src/plone/base/utils.py

b'diff --git a/src/plone/base/utils.py b/src/plone/base/utils.py\nindex 1d817d5..f96cf5d 100644\n--- a/src/plone/base/utils.py\n+++ b/src/plone/base/utils.py\n@@ -246,7 +246,7 @@ def get_top_site_from_url(context, request):\n     """\n     Find the first ISite object that appears in the pre-virtual-hosting URL\n     path, falling back to the object pointed by the virtual hosting root.\n-    \n+\n     Use this method if you need a "root object" reference to generate URLs\n     that will be used by, and will work correctly from the standpoint of,\n     *browser* code (JavaScript / XML HTTP requests) after virtual hosting has\n@@ -312,7 +312,11 @@ def get_top_site_from_url(context, request):\n         for idx in range(len(url_path)):\n             _path = "/".join(url_path[: idx + 1]) or "/"\n             site_path = "/".join(request.physicalPathFromURL(_path)) or "/"\n-            _site = context.restrictedTraverse(site_path)\n+            # The following line is fine.  We do a restrictedTraverse\n+            # below to resolve the actual object, so the user (technically,\n+            # the browser) cannot ever get a reference to an object it does\n+            # not have permission to.\n+            _site = context.unrestrictedTraverse(site_path)\n             if ISite.providedBy(_site):\n                 subsites.append(idx)\n             else:\n'

Repository: plone.base


Branch: refs/heads/main
Date: 2022-09-09T22:09:46Z
Author: Manuel Amador (Rudd-O) (Rudd-O) <rudd-o@rudd-o.com>
Commit: https://github.com/plone/plone.base/commit/b2a6076daef62a5709aa217d18a8793b8e9cf56b

Add towncrier.

Files changed:
A news/19.bugfix

b'diff --git a/news/19.bugfix b/news/19.bugfix\nnew file mode 100644\nindex 0000000..8a6ad58\n--- /dev/null\n+++ b/news/19.bugfix\n@@ -0,0 +1 @@\n+* Fix issue with traversal introduced by [Rudd-O] in `get_top_site_from_url()` [Rudd-O]\n'

Repository: plone.base


Branch: refs/heads/main
Date: 2022-09-10T02:19:42+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.base/commit/0444db414b31e709d59d6d8940e35761f594b2f4

Merge pull request #19 from plone/myfix

Fix permissions during traversal executed from `get_top_site_from_url()`.

Files changed:
A news/19.bugfix
M src/plone/base/utils.py

b'diff --git a/news/19.bugfix b/news/19.bugfix\nnew file mode 100644\nindex 0000000..8a6ad58\n--- /dev/null\n+++ b/news/19.bugfix\n@@ -0,0 +1 @@\n+* Fix issue with traversal introduced by [Rudd-O] in `get_top_site_from_url()` [Rudd-O]\ndiff --git a/src/plone/base/utils.py b/src/plone/base/utils.py\nindex 1d817d5..f96cf5d 100644\n--- a/src/plone/base/utils.py\n+++ b/src/plone/base/utils.py\n@@ -246,7 +246,7 @@ def get_top_site_from_url(context, request):\n     """\n     Find the first ISite object that appears in the pre-virtual-hosting URL\n     path, falling back to the object pointed by the virtual hosting root.\n-    \n+\n     Use this method if you need a "root object" reference to generate URLs\n     that will be used by, and will work correctly from the standpoint of,\n     *browser* code (JavaScript / XML HTTP requests) after virtual hosting has\n@@ -312,7 +312,11 @@ def get_top_site_from_url(context, request):\n         for idx in range(len(url_path)):\n             _path = "/".join(url_path[: idx + 1]) or "/"\n             site_path = "/".join(request.physicalPathFromURL(_path)) or "/"\n-            _site = context.restrictedTraverse(site_path)\n+            # The following line is fine.  We do a restrictedTraverse\n+            # below to resolve the actual object, so the user (technically,\n+            # the browser) cannot ever get a reference to an object it does\n+            # not have permission to.\n+            _site = context.unrestrictedTraverse(site_path)\n             if ISite.providedBy(_site):\n                 subsites.append(idx)\n             else:\n'

