Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2017-02-25T11:26:53-08:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/7a15f055435c81a18b3cdcf2ba5e5629eed6aed7

call processQueue in CatalogTool.search too

Files changed:
M Products/CMFPlone/CatalogTool.py

diff --git a/Products/CMFPlone/CatalogTool.py b/Products/CMFPlone/CatalogTool.py
index 5c9c79d..d51cf69 100644
--- a/Products/CMFPlone/CatalogTool.py
+++ b/Products/CMFPlone/CatalogTool.py
@@ -435,7 +435,9 @@ def searchResults(self, REQUEST=None, **kw):
         # effectiveRange checking entirely even for those without portal
         # wide AccessInactivePortalContent permission.
 
+        # Make sure any pending index tasks have been processed
         processQueue()
+
         kw = kw.copy()
         show_inactive = kw.get('show_inactive', False)
         if isinstance(REQUEST, dict) and not show_inactive:
@@ -453,8 +455,11 @@ def searchResults(self, REQUEST=None, **kw):
 
     def search(self, *args, **kw):
         # Wrap search() the same way that searchResults() is
-        query = {}
 
+        # Make sure any pending index tasks have been processed
+        processQueue()
+
+        query = {}
         if args:
             query = args[0]
         elif 'query_request' in kw:


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2017-02-25T12:09:03-08:00
Author: David Glick (davisagli) <david.glick@plone.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/3a90800c0b9778175515d10b57275b4a1e65064a

Merge pull request #1954 from plone/davisagli-catalog-queue-fix

call processQueue in CatalogTool.search too

Files changed:
M Products/CMFPlone/CatalogTool.py

diff --git a/Products/CMFPlone/CatalogTool.py b/Products/CMFPlone/CatalogTool.py
index 5c9c79d..d51cf69 100644
--- a/Products/CMFPlone/CatalogTool.py
+++ b/Products/CMFPlone/CatalogTool.py
@@ -435,7 +435,9 @@ def searchResults(self, REQUEST=None, **kw):
         # effectiveRange checking entirely even for those without portal
         # wide AccessInactivePortalContent permission.
 
+        # Make sure any pending index tasks have been processed
         processQueue()
+
         kw = kw.copy()
         show_inactive = kw.get('show_inactive', False)
         if isinstance(REQUEST, dict) and not show_inactive:
@@ -453,8 +455,11 @@ def searchResults(self, REQUEST=None, **kw):
 
     def search(self, *args, **kw):
         # Wrap search() the same way that searchResults() is
-        query = {}
 
+        # Make sure any pending index tasks have been processed
+        processQueue()
+
+        query = {}
         if args:
             query = args[0]
         elif 'query_request' in kw:


