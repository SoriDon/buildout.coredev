Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2017-10-13T17:28:57+02:00
Author: Tom Gross (tomgross) <itconsense@gmail.com>
Commit: https://github.com/plone/plone.app.z3cform/commit/4d6adea9345062dd2bb6e4fce8cbd227a581e6f4

- Keep internal links with query strings as external

Files changed:
M CHANGES.rst
M plone/app/z3cform/converters.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 6cdced2..e768e6a 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -22,6 +22,9 @@ Bug fixes:
   Fixes: https://github.com/plone/Products.CMFPlone/issues/2163
   [thet]
 
+- Keep "internal" links with query strings as external links, otherwise
+  the query string is lost
+  [tomgross]
 
 3.0.2 (2017-09-06)
 ------------------
diff --git a/plone/app/z3cform/converters.py b/plone/app/z3cform/converters.py
index 9e66901..af9036d 100644
--- a/plone/app/z3cform/converters.py
+++ b/plone/app/z3cform/converters.py
@@ -341,15 +341,23 @@ def toWidgetValue(self, value):
             if '/resolveuid/' in value and (not is_absolute or is_same_domain):
                 # Take the UUID part of a resolveuid url, but onl if it's on
                 # the same domain.
-                result['internal'] = value.rsplit('/', 1)[-1]
+                uuid = value.rsplit('/', 1)[-1]
             elif not is_absolute or is_absolute and is_same_domain:
-                # Handdle relative URLs or absolute URLs on the same domain.
-                path = urlparse.urlparse(value).path
-                path = utils.replace_link_variables_by_paths(portal, path)
-                path = path.encode('ascii', 'ignore')
-                obj = portal.unrestrictedTraverse(path=path, default=None)
-                if obj is not None:
-                    uuid = IUUID(obj, None)
+                # Handle relative URLs or absolute URLs on the same domain.
+                parsed = urlparse.urlparse(value)
+                if parsed.params or parsed.query or parsed.fragment:
+                    # we don't want to loose query parameters
+                    # so we don't convert URLs pointing to internal
+                    # objects with params, querys or fragments
+                    # to uids
+                    pass
+                else:
+                    path = utils.replace_link_variables_by_paths(
+                        portal, parsed.path)
+                    path = path.encode('ascii', 'ignore')
+                    obj = portal.unrestrictedTraverse(path=path, default=None)
+                    if obj is not None:
+                        uuid = IUUID(obj, None)
             if uuid is not None:
                 result['internal'] = uuid
             else:


Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2017-10-14T20:02:21+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.z3cform/commit/c9dff6a261fb7c80f2ffff9ef974e50977004d6d

Merge pull request #79 from plone/ts-fix_interal_links_with_qs

- Keep internal links with query strings as external

Files changed:
M CHANGES.rst
M plone/app/z3cform/converters.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 6cdced2..e768e6a 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -22,6 +22,9 @@ Bug fixes:
   Fixes: https://github.com/plone/Products.CMFPlone/issues/2163
   [thet]
 
+- Keep "internal" links with query strings as external links, otherwise
+  the query string is lost
+  [tomgross]
 
 3.0.2 (2017-09-06)
 ------------------
diff --git a/plone/app/z3cform/converters.py b/plone/app/z3cform/converters.py
index 9e66901..af9036d 100644
--- a/plone/app/z3cform/converters.py
+++ b/plone/app/z3cform/converters.py
@@ -341,15 +341,23 @@ def toWidgetValue(self, value):
             if '/resolveuid/' in value and (not is_absolute or is_same_domain):
                 # Take the UUID part of a resolveuid url, but onl if it's on
                 # the same domain.
-                result['internal'] = value.rsplit('/', 1)[-1]
+                uuid = value.rsplit('/', 1)[-1]
             elif not is_absolute or is_absolute and is_same_domain:
-                # Handdle relative URLs or absolute URLs on the same domain.
-                path = urlparse.urlparse(value).path
-                path = utils.replace_link_variables_by_paths(portal, path)
-                path = path.encode('ascii', 'ignore')
-                obj = portal.unrestrictedTraverse(path=path, default=None)
-                if obj is not None:
-                    uuid = IUUID(obj, None)
+                # Handle relative URLs or absolute URLs on the same domain.
+                parsed = urlparse.urlparse(value)
+                if parsed.params or parsed.query or parsed.fragment:
+                    # we don't want to loose query parameters
+                    # so we don't convert URLs pointing to internal
+                    # objects with params, querys or fragments
+                    # to uids
+                    pass
+                else:
+                    path = utils.replace_link_variables_by_paths(
+                        portal, parsed.path)
+                    path = path.encode('ascii', 'ignore')
+                    obj = portal.unrestrictedTraverse(path=path, default=None)
+                    if obj is not None:
+                        uuid = IUUID(obj, None)
             if uuid is not None:
                 result['internal'] = uuid
             else:


