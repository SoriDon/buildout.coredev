Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-05-25T15:41:24+02:00
Author: ksuess (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.restapi/commit/24ff62fc24c184e4d8f614afe5897f1b065c6b91

Fix: Update group: Preserve title and description.

Files changed:
A news/1424.feature
M src/plone/restapi/services/groups/update.py

b'diff --git a/news/1424.feature b/news/1424.feature\nnew file mode 100644\nindex 000000000..791dd6ec7\n--- /dev/null\n+++ b/news/1424.feature\n@@ -0,0 +1 @@\n+Fix: Update group: Preserve title and description. [ksuess]\n\\ No newline at end of file\ndiff --git a/src/plone/restapi/services/groups/update.py b/src/plone/restapi/services/groups/update.py\nindex 1940cf14e..06bcf6e4d 100644\n--- a/src/plone/restapi/services/groups/update.py\n+++ b/src/plone/restapi/services/groups/update.py\n@@ -12,7 +12,23 @@\n \n @implementer(IPublishTraverse)\n class GroupsPatch(Service):\n-    """Updates an existing group."""\n+    """Update an existing group with users, roles, groups, title and description.\n+\n+    Args:\n+        data (dict): dictionary of\n+        id: str\n+        users: dict: The users object is a mapping of a user_id and a boolean indicating adding or removing from the group.\n+        roles: list of str\n+        groups: list of str\n+        title: str\n+        description: str\n+\n+    Raises:\n+        BadRequest: No group with this id exists.\n+\n+    Response:\n+        HTTP/1.1 204 No Content\n+    """\n \n     def __init__(self, context, request):\n         super().__init__(context, request)\n@@ -41,8 +57,6 @@ def reply(self):\n         if not group:\n             raise BadRequest("Trying to update a non-existing group.")\n \n-        title = data.get("title", None)\n-        description = data.get("description", None)\n         roles = data.get("roles", None)\n         groups = data.get("groups", None)\n         users = data.get("users", {})\n@@ -52,20 +66,18 @@ def reply(self):\n             alsoProvides(self.request, plone.protect.interfaces.IDisableCSRFProtection)\n \n         portal_groups = getToolByName(self.context, "portal_groups")\n-\n+        properties = dict((k, data[k]) for k in [\'title\', \'description\'] if k in data)\n         portal_groups.editGroup(\n             self._get_group_id,\n             roles=roles,\n             groups=groups,\n-            title=title,\n-            description=description,\n+            **properties,\n         )\n \n         properties = {}\n         for id, property in group.propertyItems():\n             if data.get(id, False):\n                 properties[id] = data[id]\n-\n         group.setGroupProperties(properties)\n \n         # Add/remove members\n@@ -77,5 +89,4 @@ def reply(self):\n             else:\n                 if userid in memberids:\n                     group.removeMember(userid)\n-\n         return self.reply_no_content()\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-05-25T15:44:20+02:00
Author: ksuess (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.restapi/commit/2eac08af139ff331c350aa2f61fc5cb4ea8c0235

black

Files changed:
M src/plone/restapi/services/groups/update.py

b'diff --git a/src/plone/restapi/services/groups/update.py b/src/plone/restapi/services/groups/update.py\nindex 06bcf6e4d..9d17ebc77 100644\n--- a/src/plone/restapi/services/groups/update.py\n+++ b/src/plone/restapi/services/groups/update.py\n@@ -66,7 +66,7 @@ def reply(self):\n             alsoProvides(self.request, plone.protect.interfaces.IDisableCSRFProtection)\n \n         portal_groups = getToolByName(self.context, "portal_groups")\n-        properties = dict((k, data[k]) for k in [\'title\', \'description\'] if k in data)\n+        properties = dict((k, data[k]) for k in ["title", "description"] if k in data)\n         portal_groups.editGroup(\n             self._get_group_id,\n             roles=roles,\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-06-02T09:43:04+02:00
Author: ksuess (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.restapi/commit/d30e9a132784373e1dd3dfaae27b28bf117dcdd2

Update documentation: update group: add common data to update.

Files changed:
M src/plone/restapi/tests/http-examples/groups_update.req
M src/plone/restapi/tests/test_documentation.py

b'diff --git a/src/plone/restapi/tests/http-examples/groups_update.req b/src/plone/restapi/tests/http-examples/groups_update.req\nindex 70fe75607..f33a5d789 100644\n--- a/src/plone/restapi/tests/http-examples/groups_update.req\n+++ b/src/plone/restapi/tests/http-examples/groups_update.req\n@@ -4,7 +4,16 @@ Authorization: Basic YWRtaW46c2VjcmV0\n Content-Type: application/json\n \n {\n+    "description": "Plone team members",\n     "email": "ploneteam2@plone.org",\n+    "groups": [\n+        "Site Administrators"\n+    ],\n+    "roles": [\n+        "Authenticated",\n+        "Reviewer"\n+    ],\n+    "title": "The Plone team",\n     "users": {\n         "test_user_1_": false\n     }\ndiff --git a/src/plone/restapi/tests/test_documentation.py b/src/plone/restapi/tests/test_documentation.py\nindex 3e7616ef5..92b671340 100644\n--- a/src/plone/restapi/tests/test_documentation.py\n+++ b/src/plone/restapi/tests/test_documentation.py\n@@ -1140,7 +1140,17 @@ def test_documentation_groups_update(self):\n \n         response = self.api_session.patch(\n             "/@groups/ploneteam",\n-            json={"email": "ploneteam2@plone.org", "users": {TEST_USER_ID: False}},\n+            json={\n+                "description": "Plone team members",\n+                "email": "ploneteam2@plone.org",\n+                "groups": ["Site Administrators"],\n+                "users": {TEST_USER_ID: False},\n+                "roles": [\n+                    "Authenticated",\n+                    "Reviewer"\n+                ],\n+                "title": "The Plone team"\n+            }\n         )\n         save_request_and_response_for_docs("groups_update", response)\n \n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-06-02T09:46:23+02:00
Author: ksuess (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.restapi/commit/5fad2d5d8c53fcef8aa365541157ddde496cb712

black

Files changed:
M src/plone/restapi/tests/test_documentation.py

b'diff --git a/src/plone/restapi/tests/test_documentation.py b/src/plone/restapi/tests/test_documentation.py\nindex 92b671340..525c8da28 100644\n--- a/src/plone/restapi/tests/test_documentation.py\n+++ b/src/plone/restapi/tests/test_documentation.py\n@@ -1145,12 +1145,9 @@ def test_documentation_groups_update(self):\n                 "email": "ploneteam2@plone.org",\n                 "groups": ["Site Administrators"],\n                 "users": {TEST_USER_ID: False},\n-                "roles": [\n-                    "Authenticated",\n-                    "Reviewer"\n-                ],\n-                "title": "The Plone team"\n-            }\n+                "roles": ["Authenticated", "Reviewer"],\n+                "title": "The Plone team",\n+            },\n         )\n         save_request_and_response_for_docs("groups_update", response)\n \n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-06-02T10:42:19+02:00
Author: Katja SÃ¼ss (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.restapi/commit/afaa4d75f007a6096fd50c871988f2286100bbf3

Merge pull request #1439 from plone/update-group-keep-title

"Update group": Preserve title and description when no values given

Files changed:
A news/1424.feature
M src/plone/restapi/services/groups/update.py
M src/plone/restapi/tests/http-examples/groups_update.req
M src/plone/restapi/tests/test_documentation.py

b'diff --git a/news/1424.feature b/news/1424.feature\nnew file mode 100644\nindex 000000000..791dd6ec7\n--- /dev/null\n+++ b/news/1424.feature\n@@ -0,0 +1 @@\n+Fix: Update group: Preserve title and description. [ksuess]\n\\ No newline at end of file\ndiff --git a/src/plone/restapi/services/groups/update.py b/src/plone/restapi/services/groups/update.py\nindex 1940cf14e..9d17ebc77 100644\n--- a/src/plone/restapi/services/groups/update.py\n+++ b/src/plone/restapi/services/groups/update.py\n@@ -12,7 +12,23 @@\n \n @implementer(IPublishTraverse)\n class GroupsPatch(Service):\n-    """Updates an existing group."""\n+    """Update an existing group with users, roles, groups, title and description.\n+\n+    Args:\n+        data (dict): dictionary of\n+        id: str\n+        users: dict: The users object is a mapping of a user_id and a boolean indicating adding or removing from the group.\n+        roles: list of str\n+        groups: list of str\n+        title: str\n+        description: str\n+\n+    Raises:\n+        BadRequest: No group with this id exists.\n+\n+    Response:\n+        HTTP/1.1 204 No Content\n+    """\n \n     def __init__(self, context, request):\n         super().__init__(context, request)\n@@ -41,8 +57,6 @@ def reply(self):\n         if not group:\n             raise BadRequest("Trying to update a non-existing group.")\n \n-        title = data.get("title", None)\n-        description = data.get("description", None)\n         roles = data.get("roles", None)\n         groups = data.get("groups", None)\n         users = data.get("users", {})\n@@ -52,20 +66,18 @@ def reply(self):\n             alsoProvides(self.request, plone.protect.interfaces.IDisableCSRFProtection)\n \n         portal_groups = getToolByName(self.context, "portal_groups")\n-\n+        properties = dict((k, data[k]) for k in ["title", "description"] if k in data)\n         portal_groups.editGroup(\n             self._get_group_id,\n             roles=roles,\n             groups=groups,\n-            title=title,\n-            description=description,\n+            **properties,\n         )\n \n         properties = {}\n         for id, property in group.propertyItems():\n             if data.get(id, False):\n                 properties[id] = data[id]\n-\n         group.setGroupProperties(properties)\n \n         # Add/remove members\n@@ -77,5 +89,4 @@ def reply(self):\n             else:\n                 if userid in memberids:\n                     group.removeMember(userid)\n-\n         return self.reply_no_content()\ndiff --git a/src/plone/restapi/tests/http-examples/groups_update.req b/src/plone/restapi/tests/http-examples/groups_update.req\nindex 70fe75607..f33a5d789 100644\n--- a/src/plone/restapi/tests/http-examples/groups_update.req\n+++ b/src/plone/restapi/tests/http-examples/groups_update.req\n@@ -4,7 +4,16 @@ Authorization: Basic YWRtaW46c2VjcmV0\n Content-Type: application/json\n \n {\n+    "description": "Plone team members",\n     "email": "ploneteam2@plone.org",\n+    "groups": [\n+        "Site Administrators"\n+    ],\n+    "roles": [\n+        "Authenticated",\n+        "Reviewer"\n+    ],\n+    "title": "The Plone team",\n     "users": {\n         "test_user_1_": false\n     }\ndiff --git a/src/plone/restapi/tests/test_documentation.py b/src/plone/restapi/tests/test_documentation.py\nindex 3e7616ef5..525c8da28 100644\n--- a/src/plone/restapi/tests/test_documentation.py\n+++ b/src/plone/restapi/tests/test_documentation.py\n@@ -1140,7 +1140,14 @@ def test_documentation_groups_update(self):\n \n         response = self.api_session.patch(\n             "/@groups/ploneteam",\n-            json={"email": "ploneteam2@plone.org", "users": {TEST_USER_ID: False}},\n+            json={\n+                "description": "Plone team members",\n+                "email": "ploneteam2@plone.org",\n+                "groups": ["Site Administrators"],\n+                "users": {TEST_USER_ID: False},\n+                "roles": ["Authenticated", "Reviewer"],\n+                "title": "The Plone team",\n+            },\n         )\n         save_request_and_response_for_docs("groups_update", response)\n \n'

