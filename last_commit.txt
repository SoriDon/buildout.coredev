Repository: plone.restapi


Branch: refs/heads/master
Date: 2021-11-23T07:28:04+01:00
Author: Timo Stollenwerk (tisto) <tisto@users.noreply.github.com>
Commit: https://github.com/plone/plone.restapi/commit/e788c8c8af3856318ea9d738edd5b60a33cd0103

Improve querystring-search docs (#1260)

* Start improving the querystring search docs

* Finish parameter docs

* Finish more filter docs

* Docs for text filters

* Finish querystring search docs

* ReST fixes

Files changed:
M docs/source/querystringsearch.rst

b'diff --git a/docs/source/querystringsearch.rst b/docs/source/querystringsearch.rst\nindex 5a65e9974..48fc97862 100644\n--- a/docs/source/querystringsearch.rst\n+++ b/docs/source/querystringsearch.rst\n@@ -22,3 +22,447 @@ Parameters the endpoint will accept:\n   - ``sort_order`` : ``"ascending"``, ``"descending"`` (string)\n   - ``limit`` (integer, limits the number of returned results)\n   - ``fullobjects`` : ``"true"``, ``"false``" (boolean, if true the return the full objects instead of just the summary serialization)\n+\n+Parameters\n+----------\n+\n+Batch Start (b_start)\n+^^^^^^^^^^^^^^^^^^^^^\n+\n+The `b_start` parameter defines the first item of the batch::\n+\n+  {\n+    "b_start": "5",\n+    "query": [\n+      {\n+        \'i\': \'Title\',\n+        \'o\': \'plone.app.querystring.operation.string.is\',\n+        \'v\': \'Welcome to Plone\',\n+      }\n+    ]\n+  }\n+\n+\n+The `b_size` parameter is optional and the default value is `0`.\n+\n+Batch Size (b_size)\n+^^^^^^^^^^^^^^^^^^^\n+\n+The `b_size` parameter defines the number of elements a single batch returns:: \n+\n+  {\n+    "b_size": "5",\n+    "query": [\n+      {\n+        \'i\': \'Title\',\n+        \'o\': \'plone.app.querystring.operation.string.is\',\n+        \'v\': \'Welcome to Plone\',\n+      }\n+    ]\n+  }\n+\n+The parameter is optional. And the default value is `25`.\n+\n+\n+Sort on\n+^^^^^^^\n+\n+The `sort_on` parameter defines the field that is used to sort the returned search results::\n+\n+  {\n+    "sort_on": "sortable_title",\n+    "query": [\n+      {\n+        \'i\': \'Title\',\n+        \'o\': \'plone.app.querystring.operation.string.is\',\n+        \'v\': \'Welcome to Plone\',\n+      }\n+    ]\n+  }\n+\n+The `sort_on` parameter is optional. The default value is `None`.\n+\n+Sort Order\n+^^^^^^^^^^\n+\n+The `sort_order` parameter defines the sort order when the `sort_on` field has been set::\n+\n+  {\n+    "sort_on": "sortable_title",\n+    "sort_order": "reverse",\n+    "query": [\n+      {\n+        \'i\': \'Title\',\n+        \'o\': \'plone.app.querystring.operation.string.is\',\n+        \'v\': \'Welcome to Plone\',\n+      }\n+    ]\n+  }\n+\n+The `sort_order` parameter is optional. The default value is `ascending`.\n+\n+The sort_order can be either \xe2\x80\x98ascending\xe2\x80\x99 or \xe2\x80\x98descending\xe2\x80\x99, where \xe2\x80\x98ascending\xe2\x80\x99 means from A to Z for a text field. \xe2\x80\x98reverse\xe2\x80\x99 is an alias equivalent to \xe2\x80\x98descending\xe2\x80\x99.\n+\n+\n+Limit\n+^^^^^\n+\n+Querystring Query with limit parameter::\n+\n+  {\n+    "limit": "10",\n+    "query": [\n+      {\n+        \'i\': \'Title\',\n+        \'o\': \'plone.app.querystring.operation.string.is\',\n+        \'v\': \'Welcome to Plone\',\n+      }\n+    ]\n+  }\n+\n+The `limit` parameter is optional. The default value is `1000`.\n+\n+\n+Query\n+-----\n+\n+The `query` parameter is a list that contains an arbitrary number of `filters`::\n+\n+\n+  {\n+    "query": [\n+      {\n+        \'i\': \'Title\',\n+        \'o\': \'plone.app.querystring.operation.string.is\',\n+        \'v\': \'Welcome to Plone\',\n+      }\n+    ]\n+  }\n+\n+A `filter` always contains three values:\n+\n+* `\xc3\xac`: the index of the filter (the name of the field this filter is applied to)\n+* `o`: the operator of the filter (the operator, a full list can be found here: https://github.com/plone/plone.app.querystring/blob/master/plone/app/querystring/profiles/default/registry.xml)\n+* `v`: the value of the filter (this highly depends on the index, for a text index, this is a string, for a date index this might be a date range)\n+\n+The following type of filters are available:\n+\n+* Metadata filters\n+* Date filters\n+* Text Filters\n+\n+Metadata Filters\n+^^^^^^^^^^^^^^^^\n+\n+Creator\n+,,,,,,,\n+\n+The creator of the content object.\n+\n+You can either set the currently logged in user::\n+\n+  {\n+    "query":[\n+      {\n+        "i":"Creator",\n+        "o":"plone.app.querystring.operation.string.currentUser",\n+        "v":""\n+      }\n+    ],\n+  }\n+\n+or set a username::\n+\n+  {\n+    "query":[\n+      {\n+        "i":"Creator",\n+        "o":"plone.app.querystring.operation.selection.any",\n+        "v":["noam"]\n+      }\n+    ]\n+  }\n+\n+Shortname\n+\xc2\xb4\xc2\xb4\xc2\xb4\xc2\xb4\xc2\xb4\xc2\xb4\xc2\xb4\xc2\xb4\xc2\xb4\n+\n+Shortname (the id of the object that is shown as last part of the URL)::\n+\n+  {\n+    "query":[\n+      {\n+        "i":"getId",\n+        "o":"plone.app.querystring.operation.string.is",\n+        "v":"hero"\n+      }\n+    ]\n+  }\n+\n+Location\n+,,,,,,,,\n+\n+Location is the path of the content object on the site. You can either set three kind of paths.\n+\n+The absolute path (from the portal root)::\n+\n+  {\n+    "query":[\n+      {\n+        "i":"path",\n+        "o":"plone.app.querystring.operation.string.absolutePath",\n+        "v":"/my-content-object"\n+      }\n+    ]\n+  }\n+\n+The relative path (relative from the current object)::\n+\n+  {\n+    "query":[\n+      {\n+        "i":"path",\n+        "o":"plone.app.querystring.operation.string.relativePath",\n+        "v":"../my-content-object"\n+      }\n+    ]\n+  }\n+\n+The navigation path::\n+\n+  {\n+    "query":[\n+      {\n+        "i":"path",\n+        "o":"plone.app.querystring.operation.string.path",\n+        "v":"/hero"\n+      }\n+    ]\n+  }\n+\n+The path can be stored computed::\n+\n+  {\n+    "query": [\n+      {\n+        \'i\': \'path\',\n+        \'o\': \'plone.app.querystring.operation.string.path\',\n+        \'v\': \'00000000000000001\',\n+      }\n+    ]\n+  }\n+\n+The path can contain a depth parameter (that is separated with a "::")::\n+\n+  {\n+    "query": [\n+      {\n+        \'i\': \'path\',\n+        \'o\': \'plone.app.querystring.operation.string.path\',\n+        \'v\': \'/my-content-object::2\',\n+      }\n+    ]\n+  }\n+\n+Type\n+,,,,\n+\n+Filter by portal type::\n+\n+  {\n+    "query": [\n+      {\n+        "i": "portal_type",\n+        "o": "plone.app.querystring.operation.selection.any",\n+        "v": ["Document"],\n+      }\n+    ]\n+  }\n+\n+Review State\n+,,,,,,,,,,,,\n+\n+Filter results by review state::\n+\n+  {\n+    "query":[\n+      {\n+        "i":"review_state",\n+        "o":"plone.app.querystring.operation.selection.any",\n+        "v":["published"]\n+      }\n+    ]\n+  }\n+\n+\n+Show Inactive\n+,,,,,,,,,,,,,\n+\n+Show inactive will return content objects that is expired for a given role::\n+\n+  {\n+    "query":[\n+      {\n+        "i":"show_inactive",\n+        "o":"plone.app.querystring.operation.string.showInactive",\n+        "v":["Owner"]\n+      }\n+    ]\n+  }\n+\n+Text Filters\n+^^^^^^^^^^^^\n+\n+Description\n+,,,,,,,,,,,\n+\n+Filter content that contains a term in the Description field::\n+\n+  {\n+    "query":[\n+      {\n+        "i":"Description",\n+        "o":"plone.app.querystring.operation.string.contains",\n+        "v":"Noam"\n+      }\n+    ]\n+  }\n+\n+Searchable Text\n+,,,,,,,,,,,,,,,\n+\n+Filter content that contains a term in the SearchableText (all searchable fields in the catalog)::\n+\n+  {\n+    "query":[\n+      {\n+        "i":"SearchableText",\n+        "o":"plone.app.querystring.operation.string.contains",\n+        "v":"Noam"\n+      }\n+    ]\n+  }\n+\n+Tag\n+,,,\n+\n+Filter by a tag (subjects field)::\n+\n+  {\n+    "query":[\n+      {\n+        "i":"Subject",\n+        "o":"plone.app.querystring.operation.selection.any",\n+        "v":["Astrophysics"]\n+      }\n+    ]\n+  }\n+\n+\n+Title\n+,,,,,\n+\n+Filter by exact Title match::\n+\n+  "query": [\n+    {\n+      \'i\': \'Title\',\n+      \'o\': \'plone.app.querystring.operation.string.is\',\n+      \'v\': \'Welcome to Plone\',\n+    }\n+  ]\n+\n+Date Filters\n+^^^^^^^^^^^^\n+\n+Creation Date\n+,,,,,,,,,,,,,\n+\n+Filter by creation date::\n+\n+  {\n+    "query":[\n+      {\n+        "i": "created",\n+        "o": "plone.app.querystring.operation.date.lessThan",\n+        "v": "2021-11-11"\n+      }\n+    ]\n+  }\n+\n+Effective Date\n+,,,,,,,,,,,,,,\n+\n+Filter by effective date::\n+\n+  {\n+    "query":[\n+      {\n+        "i": "effective",\n+        "o": "plone.app.querystring.operation.date.largerThan",\n+        "v": "2021-11-11"\n+        }\n+      }\n+    ]\n+  }\n+\n+Event end date\n+,,,,,,,,,,,,,,\n+\n+Filter by event end date::\n+\n+  {\n+    "query":[\n+      {\n+        "i": "end",\n+        "o": "plone.app.querystring.operation.date.lessThan",\n+        "v":"2021-11-04"\n+      }\n+    ]\n+  }\n+\n+Event start date\n+,,,,,,,,,,,,,,,,\n+\n+Filter by event start date::\n+\n+  {\n+    "query":[\n+      {\n+        "i": "end",\n+        "o": "plone.app.querystring.operation.date.lessThan",\n+        "v":"2021-11-04"\n+      }\n+    ]\n+  }\n+\n+Expiration date\n+,,,,,,,,,,,,,,,\n+\n+Filter by expiration date::\n+\n+  {\n+    "query":[\n+      {\n+        "i": "expires",\n+        "o": "plone.app.querystring.operation.date.largerThan",\n+        "v": "2021-11-11"\n+        }\n+      }\n+    ]\n+  }\n+\n+Modification date\n+,,,,,,,,,,,,,,,,,\n+\n+Filter by modification date::\n+\n+  {\n+    "query":[\n+      {\n+        "i": "modified",\n+        "o": "plone.app.querystring.operation.date.largerThan",\n+        "v": "2021-11-11"\n+        }\n+      }\n+    ]\n+  }\n'

