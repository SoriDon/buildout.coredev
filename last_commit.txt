Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-12-16T17:20:46-03:00
Author: Wesley Barroso Lopes (wesleybl) <wesleybl@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/e7d67d4a09776caffe9d87eeb41a7e7882796eb4

Internationalization of @users endpoint error messages (#1548)

* Internationalization of @users endpoint error messages

* Update translations

Files changed:
A news/1548.feature
M src/plone/restapi/locales/de/LC_MESSAGES/plone.restapi.po
M src/plone/restapi/locales/plone.restapi.pot
M src/plone/restapi/services/users/add.py
M src/plone/restapi/services/users/update.py
M src/plone/restapi/tests/test_services_users.py

b'diff --git a/news/1548.feature b/news/1548.feature\nnew file mode 100644\nindex 000000000..65d2890a6\n--- /dev/null\n+++ b/news/1548.feature\n@@ -0,0 +1 @@\n+Internationalization of ``@users`` endpoint error messages. [wesleybl]\ndiff --git a/src/plone/restapi/locales/de/LC_MESSAGES/plone.restapi.po b/src/plone/restapi/locales/de/LC_MESSAGES/plone.restapi.po\nindex 8fe0e060c..a6df67c98 100644\n--- a/src/plone/restapi/locales/de/LC_MESSAGES/plone.restapi.po\n+++ b/src/plone/restapi/locales/de/LC_MESSAGES/plone.restapi.po\n@@ -1,7 +1,7 @@\n msgid ""\n msgstr ""\n "Project-Id-Version: PACKAGE VERSION\\n"\n-"POT-Creation-Date: 2018-03-02 15:33+0000\\n"\n+"POT-Creation-Date: 2022-12-16 02:02+0000\\n"\n "PO-Revision-Date: YEAR-MO-DA HO:MI +ZONE\\n"\n "Last-Translator: Timo Stollenwerk <tisto@plone.org>\\n"\n "Language-Team: German <DE@li.org>\\n"\n@@ -18,46 +18,256 @@ msgstr ""\n msgid "${sender_fullname} via ${portal_title}"\n msgstr "${sender_fullname} via ${portal_title}"\n \n-#: plone/restapi/services/email_send/post.py:76\n+#: plone/restapi/services/email_send/post.py:74\n msgid "A portal user via ${portal_title}"\n msgstr "Ein Portal Nutzer via ${portal_title}"\n \n-#: plone/restapi/configure.zcml:39\n+#: plone/restapi/configure.zcml:73\n msgid "Adds sample content for performance testing"\n msgstr ""\n \n-#: plone/restapi/configure.zcml:31\n+#: plone/restapi/configure.zcml:56\n msgid "Adds sample content types for testing"\n msgstr ""\n \n-#: plone/restapi/configure.zcml:55\n+#: plone/restapi/configure.zcml:65\n+msgid "Adds sample workflows for testing"\n+msgstr ""\n+\n+#: plone/restapi/services/aliases/add.py:106\n+msgid "Alternative urls that point to themselves will cause an endless cycle of redirects."\n+msgstr ""\n+\n+#: plone/restapi/configure.zcml:115\n+msgid "Blocks"\n+msgstr ""\n+\n+#: plone/restapi/configure.zcml:122\n+msgid "Blocks (Editable Layout)"\n+msgstr ""\n+\n+#: plone/restapi/configure.zcml:122\n+msgid "Enables Volto Blocks (editable layout) support"\n+msgstr ""\n+\n+#: plone/restapi/configure.zcml:115\n+msgid "Enables Volto Blocks support"\n+msgstr ""\n+\n+#: plone/restapi/configure.zcml:81\n+msgid "Enables blocks on the Document content type"\n+msgstr ""\n+\n+#: plone/restapi/services/contextnavigation/get.py:133\n+msgid "Enter a valid scale name (see \'Image Handling\' control panel) to override (e.g. icon, tile, thumb, mini, preview, ... ). Leave empty to use default (see \'Site\' control panel)."\n+msgstr ""\n+\n+#: plone/restapi/services/users/add.py:163\n+msgid "Error in fields. ${errors_to_string}"\n+msgstr ""\n+\n+#. Default: "The reset_token is expired."\n+#: plone/restapi/services/users/add.py:312\n+msgid "Expired Token"\n+msgstr ""\n+\n+#: plone/restapi/services/contextnavigation/get.py:126\n+msgid "If enabled, the portlet will not show document type icons."\n+msgstr ""\n+\n+#: plone/restapi/services/contextnavigation/get.py:145\n+msgid "If enabled, the portlet will not show thumbs."\n+msgstr ""\n+\n+#: plone/restapi/services/users/add.py:296\n+msgid "If you pass \'old_password\' you have to pass \'new_password\'"\n+msgstr ""\n+\n+#: plone/restapi/services/users/add.py:290\n+msgid "If you pass \'reset_token\' you have to pass \'new_password\'"\n+msgstr ""\n+\n+#: plone/restapi/behaviors.py:23\n+msgid "Layout"\n+msgstr ""\n+\n+#: plone/restapi/services/contextnavigation/get.py:195\n+msgid "Navigation"\n+msgstr ""\n+\n+#: plone/restapi/services/contextnavigation/get.py:132\n+msgid "Override thumb scale"\n+msgstr ""\n+\n+#: plone/restapi/services/users/add.py:97\n+msgid "Property \'${fieldname}\' is not allowed."\n+msgstr ""\n+\n+#: plone/restapi/services/users/add.py:87\n+msgid "Property \'${fieldname}\' is required."\n+msgstr ""\n+\n+#: plone/restapi/configure.zcml:89\n msgid "RESTful hypermedia API for Plone - Uninstall"\n msgstr ""\n \n-#: plone/restapi/configure.zcml:22\n+#: plone/restapi/configure.zcml:47\n msgid "RESTful hypermedia API for Plone."\n msgstr ""\n \n-#: plone/restapi/services/history/patch.py:30\n+#: plone/restapi/services/history/patch.py:28\n msgid "Reverted to revision ${version}"\n msgstr ""\n \n-#: plone/restapi/services/email_send/post.py:88\n+#: plone/restapi/services/users/add.py:48\n+msgid "Roles"\n+msgstr ""\n+\n+#: plone/restapi/services/users/add.py:350\n+msgid "See the user endpoint documentation for the valid parameters."\n+msgstr ""\n+\n+#: plone/restapi/services/contextnavigation/get.py:125\n+msgid "Suppress Icons"\n+msgstr ""\n+\n+#: plone/restapi/services/contextnavigation/get.py:144\n+msgid "Suppress thumbs"\n+msgstr ""\n+\n+#: plone/restapi/services/users/add.py:342\n+msgid "The password passed as \'old_password\' is wrong."\n+msgstr ""\n+\n+#: plone/restapi/services/users/add.py:307\n+msgid "The reset_token is unknown/not valid."\n+msgstr ""\n+\n+#: plone/restapi/configure.zcml:81\n+msgid "Volto Blocks"\n+msgstr ""\n+\n+#: plone/restapi/services/users/update.py:119\n+msgid "You are not authorized to perform this action"\n+msgstr ""\n+\n+#: plone/restapi/services/email_send/post.py:91\n msgid "You are receiving this mail because ${sender_fullname} sent this message via the site ${portal_title}:"\n msgstr "Sie erhalten diese E-Mail, weil Ihnen ${sender_fullname} diese Nachricht \xc3\xbcber die Webseite ${portal_title} geschickt hat:"\n \n-#: plone/restapi/configure.zcml:22\n+#: plone/restapi/services/users/add.py:114\n+msgid "You can\'t send both password and sendPasswordReset."\n+msgstr ""\n+\n+#: plone/restapi/services/users/add.py:322\n+msgid "You can\'t set a password without a password reset token."\n+msgstr ""\n+\n+#: plone/restapi/services/users/update.py:125\n+msgid "You can\'t update the properties of this user"\n+msgstr ""\n+\n+#: plone/restapi/services/users/add.py:284\n+msgid "You can\'t use \'reset_token\' and \'old_password\' together."\n+msgstr ""\n+\n+#: plone/restapi/services/users/add.py:109\n+msgid "You have to either send a password or sendPasswordReset."\n+msgstr ""\n+\n+#: plone/restapi/services/users/add.py:154\n+msgid "You need AddPortalMember permission."\n+msgstr ""\n+\n+#: plone/restapi/services/users/add.py:329\n+msgid "You need to be logged in as the user \'${username}\' to set the password."\n+msgstr ""\n+\n+#. Default: "Missing dependency"\n+#: plone/restapi/services/addons/addons.py:207\n+msgid "dependency_missing"\n+msgstr ""\n+\n+#. Default: "If selected, the navigation tree will only show the current folder and its children at all times."\n+#: plone/restapi/services/contextnavigation/get.py:84\n+msgid "help_current_folder_only"\n+msgstr ""\n+\n+#. Default: "Whether or not to show the top, or \'root\', node in the navigation tree. This is affected by the \'Start level\' setting."\n+#: plone/restapi/services/contextnavigation/get.py:69\n+msgid "help_include_top_node"\n+msgstr ""\n+\n+#. Default: "You may search for and choose a folder to act as the root of the navigation tree. Leave blank to use the Plone site root."\n+#: plone/restapi/services/contextnavigation/get.py:58\n+msgid "help_navigation_root"\n+msgstr ""\n+\n+#. Default: "An integer value that specifies the number of folder levels below the site root that must be exceeded before the navigation tree will display. 0 means that the navigation tree should be displayed everywhere including pages in the root of the site. 1 means the tree only shows up inside folders located in the root and downwards, never showing at the top level."\n+#: plone/restapi/services/contextnavigation/get.py:96\n+msgid "help_navigation_start_level"\n+msgstr ""\n+\n+#. Default: "The title of the navigation tree."\n+#: plone/restapi/services/contextnavigation/get.py:49\n+msgid "help_navigation_title"\n+msgstr ""\n+\n+#. Default: "How many folders should be included before the navigation tree stops. 0 means no limit. 1 only includes the root folder."\n+#: plone/restapi/services/contextnavigation/get.py:113\n+msgid "help_navigation_tree_depth"\n+msgstr ""\n+\n+#. Default: "Only show the contents of the current folder."\n+#: plone/restapi/services/contextnavigation/get.py:80\n+msgid "label_current_folder_only"\n+msgstr ""\n+\n+#. Default: "Include top node"\n+#: plone/restapi/services/contextnavigation/get.py:68\n+msgid "label_include_top_node"\n+msgstr ""\n+\n+#. Default: "Root node"\n+#: plone/restapi/services/contextnavigation/get.py:57\n+msgid "label_navigation_root_path"\n+msgstr ""\n+\n+#. Default: "Start level"\n+#: plone/restapi/services/contextnavigation/get.py:95\n+msgid "label_navigation_startlevel"\n+msgstr ""\n+\n+#. Default: "Title"\n+#: plone/restapi/services/contextnavigation/get.py:48\n+msgid "label_navigation_title"\n+msgstr ""\n+\n+#. Default: "Navigation tree depth"\n+#: plone/restapi/services/contextnavigation/get.py:112\n+msgid "label_navigation_tree_depth"\n+msgstr ""\n+\n+#: plone/restapi/configure.zcml:47\n msgid "plone.restapi"\n msgstr ""\n \n-#: plone/restapi/configure.zcml:39\n+#: plone/restapi/configure.zcml:73\n msgid "plone.restapi performance testing"\n msgstr ""\n \n-#: plone/restapi/configure.zcml:31\n+#: plone/restapi/configure.zcml:56\n msgid "plone.restapi testing"\n msgstr ""\n \n-#: plone/restapi/upgrades/configure.zcml:23\n+#: plone/restapi/configure.zcml:65\n+msgid "plone.restapi testing-workflows"\n+msgstr ""\n+\n+#: plone/restapi/upgrades/configure.zcml:33\n msgid "plone.restapi.upgrades.0002"\n msgstr ""\n+\n+#: plone/restapi/upgrades/configure.zcml:52\n+msgid "plone.restapi.upgrades.0004"\n+msgstr ""\ndiff --git a/src/plone/restapi/locales/plone.restapi.pot b/src/plone/restapi/locales/plone.restapi.pot\nindex d93b93f0e..99d669117 100644\n--- a/src/plone/restapi/locales/plone.restapi.pot\n+++ b/src/plone/restapi/locales/plone.restapi.pot\n@@ -1,10 +1,10 @@\n-# --- PLEASE EDIT THE LINES BELOW CORRECTLY ---\n-# SOME DESCRIPTIVE TITLE.\n-# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.\n+#--- PLEASE EDIT THE LINES BELOW CORRECTLY ---\n+#SOME DESCRIPTIVE TITLE.\n+#FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.\n msgid ""\n msgstr ""\n "Project-Id-Version: PACKAGE VERSION\\n"\n-"POT-Creation-Date: 2018-03-02 15:33+0000\\n"\n+"POT-Creation-Date: 2022-12-16 02:02+0000\\n"\n "PO-Revision-Date: YEAR-MO-DA HO:MI +ZONE\\n"\n "Last-Translator: FULL NAME <EMAIL@ADDRESS>\\n"\n "Language-Team: LANGUAGE <LL@li.org>\\n"\n@@ -21,46 +21,256 @@ msgstr ""\n msgid "${sender_fullname} via ${portal_title}"\n msgstr ""\n \n-#: plone/restapi/services/email_send/post.py:76\n+#: plone/restapi/services/email_send/post.py:74\n msgid "A portal user via ${portal_title}"\n msgstr ""\n \n-#: plone/restapi/configure.zcml:39\n+#: plone/restapi/configure.zcml:73\n msgid "Adds sample content for performance testing"\n msgstr ""\n \n-#: plone/restapi/configure.zcml:31\n+#: plone/restapi/configure.zcml:56\n msgid "Adds sample content types for testing"\n msgstr ""\n \n-#: plone/restapi/configure.zcml:55\n+#: plone/restapi/configure.zcml:65\n+msgid "Adds sample workflows for testing"\n+msgstr ""\n+\n+#: plone/restapi/services/aliases/add.py:106\n+msgid "Alternative urls that point to themselves will cause an endless cycle of redirects."\n+msgstr ""\n+\n+#: plone/restapi/configure.zcml:115\n+msgid "Blocks"\n+msgstr ""\n+\n+#: plone/restapi/configure.zcml:122\n+msgid "Blocks (Editable Layout)"\n+msgstr ""\n+\n+#: plone/restapi/configure.zcml:122\n+msgid "Enables Volto Blocks (editable layout) support"\n+msgstr ""\n+\n+#: plone/restapi/configure.zcml:115\n+msgid "Enables Volto Blocks support"\n+msgstr ""\n+\n+#: plone/restapi/configure.zcml:81\n+msgid "Enables blocks on the Document content type"\n+msgstr ""\n+\n+#: plone/restapi/services/contextnavigation/get.py:133\n+msgid "Enter a valid scale name (see \'Image Handling\' control panel) to override (e.g. icon, tile, thumb, mini, preview, ... ). Leave empty to use default (see \'Site\' control panel)."\n+msgstr ""\n+\n+#: plone/restapi/services/users/add.py:163\n+msgid "Error in fields. ${errors_to_string}"\n+msgstr ""\n+\n+#. Default: "The reset_token is expired."\n+#: plone/restapi/services/users/add.py:312\n+msgid "Expired Token"\n+msgstr ""\n+\n+#: plone/restapi/services/contextnavigation/get.py:126\n+msgid "If enabled, the portlet will not show document type icons."\n+msgstr ""\n+\n+#: plone/restapi/services/contextnavigation/get.py:145\n+msgid "If enabled, the portlet will not show thumbs."\n+msgstr ""\n+\n+#: plone/restapi/services/users/add.py:296\n+msgid "If you pass \'old_password\' you have to pass \'new_password\'"\n+msgstr ""\n+\n+#: plone/restapi/services/users/add.py:290\n+msgid "If you pass \'reset_token\' you have to pass \'new_password\'"\n+msgstr ""\n+\n+#: plone/restapi/behaviors.py:23\n+msgid "Layout"\n+msgstr ""\n+\n+#: plone/restapi/services/contextnavigation/get.py:195\n+msgid "Navigation"\n+msgstr ""\n+\n+#: plone/restapi/services/contextnavigation/get.py:132\n+msgid "Override thumb scale"\n+msgstr ""\n+\n+#: plone/restapi/services/users/add.py:97\n+msgid "Property \'${fieldname}\' is not allowed."\n+msgstr ""\n+\n+#: plone/restapi/services/users/add.py:87\n+msgid "Property \'${fieldname}\' is required."\n+msgstr ""\n+\n+#: plone/restapi/configure.zcml:89\n msgid "RESTful hypermedia API for Plone - Uninstall"\n msgstr ""\n \n-#: plone/restapi/configure.zcml:22\n+#: plone/restapi/configure.zcml:47\n msgid "RESTful hypermedia API for Plone."\n msgstr ""\n \n-#: plone/restapi/services/history/patch.py:30\n+#: plone/restapi/services/history/patch.py:28\n msgid "Reverted to revision ${version}"\n msgstr ""\n \n-#: plone/restapi/services/email_send/post.py:88\n+#: plone/restapi/services/users/add.py:48\n+msgid "Roles"\n+msgstr ""\n+\n+#: plone/restapi/services/users/add.py:350\n+msgid "See the user endpoint documentation for the valid parameters."\n+msgstr ""\n+\n+#: plone/restapi/services/contextnavigation/get.py:125\n+msgid "Suppress Icons"\n+msgstr ""\n+\n+#: plone/restapi/services/contextnavigation/get.py:144\n+msgid "Suppress thumbs"\n+msgstr ""\n+\n+#: plone/restapi/services/users/add.py:342\n+msgid "The password passed as \'old_password\' is wrong."\n+msgstr ""\n+\n+#: plone/restapi/services/users/add.py:307\n+msgid "The reset_token is unknown/not valid."\n+msgstr ""\n+\n+#: plone/restapi/configure.zcml:81\n+msgid "Volto Blocks"\n+msgstr ""\n+\n+#: plone/restapi/services/users/update.py:119\n+msgid "You are not authorized to perform this action"\n+msgstr ""\n+\n+#: plone/restapi/services/email_send/post.py:91\n msgid "You are receiving this mail because ${sender_fullname} sent this message via the site ${portal_title}:"\n msgstr ""\n \n-#: plone/restapi/configure.zcml:22\n+#: plone/restapi/services/users/add.py:114\n+msgid "You can\'t send both password and sendPasswordReset."\n+msgstr ""\n+\n+#: plone/restapi/services/users/add.py:322\n+msgid "You can\'t set a password without a password reset token."\n+msgstr ""\n+\n+#: plone/restapi/services/users/update.py:125\n+msgid "You can\'t update the properties of this user"\n+msgstr ""\n+\n+#: plone/restapi/services/users/add.py:284\n+msgid "You can\'t use \'reset_token\' and \'old_password\' together."\n+msgstr ""\n+\n+#: plone/restapi/services/users/add.py:109\n+msgid "You have to either send a password or sendPasswordReset."\n+msgstr ""\n+\n+#: plone/restapi/services/users/add.py:154\n+msgid "You need AddPortalMember permission."\n+msgstr ""\n+\n+#: plone/restapi/services/users/add.py:329\n+msgid "You need to be logged in as the user \'${username}\' to set the password."\n+msgstr ""\n+\n+#. Default: "Missing dependency"\n+#: plone/restapi/services/addons/addons.py:207\n+msgid "dependency_missing"\n+msgstr ""\n+\n+#. Default: "If selected, the navigation tree will only show the current folder and its children at all times."\n+#: plone/restapi/services/contextnavigation/get.py:84\n+msgid "help_current_folder_only"\n+msgstr ""\n+\n+#. Default: "Whether or not to show the top, or \'root\', node in the navigation tree. This is affected by the \'Start level\' setting."\n+#: plone/restapi/services/contextnavigation/get.py:69\n+msgid "help_include_top_node"\n+msgstr ""\n+\n+#. Default: "You may search for and choose a folder to act as the root of the navigation tree. Leave blank to use the Plone site root."\n+#: plone/restapi/services/contextnavigation/get.py:58\n+msgid "help_navigation_root"\n+msgstr ""\n+\n+#. Default: "An integer value that specifies the number of folder levels below the site root that must be exceeded before the navigation tree will display. 0 means that the navigation tree should be displayed everywhere including pages in the root of the site. 1 means the tree only shows up inside folders located in the root and downwards, never showing at the top level."\n+#: plone/restapi/services/contextnavigation/get.py:96\n+msgid "help_navigation_start_level"\n+msgstr ""\n+\n+#. Default: "The title of the navigation tree."\n+#: plone/restapi/services/contextnavigation/get.py:49\n+msgid "help_navigation_title"\n+msgstr ""\n+\n+#. Default: "How many folders should be included before the navigation tree stops. 0 means no limit. 1 only includes the root folder."\n+#: plone/restapi/services/contextnavigation/get.py:113\n+msgid "help_navigation_tree_depth"\n+msgstr ""\n+\n+#. Default: "Only show the contents of the current folder."\n+#: plone/restapi/services/contextnavigation/get.py:80\n+msgid "label_current_folder_only"\n+msgstr ""\n+\n+#. Default: "Include top node"\n+#: plone/restapi/services/contextnavigation/get.py:68\n+msgid "label_include_top_node"\n+msgstr ""\n+\n+#. Default: "Root node"\n+#: plone/restapi/services/contextnavigation/get.py:57\n+msgid "label_navigation_root_path"\n+msgstr ""\n+\n+#. Default: "Start level"\n+#: plone/restapi/services/contextnavigation/get.py:95\n+msgid "label_navigation_startlevel"\n+msgstr ""\n+\n+#. Default: "Title"\n+#: plone/restapi/services/contextnavigation/get.py:48\n+msgid "label_navigation_title"\n+msgstr ""\n+\n+#. Default: "Navigation tree depth"\n+#: plone/restapi/services/contextnavigation/get.py:112\n+msgid "label_navigation_tree_depth"\n+msgstr ""\n+\n+#: plone/restapi/configure.zcml:47\n msgid "plone.restapi"\n msgstr ""\n \n-#: plone/restapi/configure.zcml:39\n+#: plone/restapi/configure.zcml:73\n msgid "plone.restapi performance testing"\n msgstr ""\n \n-#: plone/restapi/configure.zcml:31\n+#: plone/restapi/configure.zcml:56\n msgid "plone.restapi testing"\n msgstr ""\n \n-#: plone/restapi/upgrades/configure.zcml:23\n+#: plone/restapi/configure.zcml:65\n+msgid "plone.restapi testing-workflows"\n+msgstr ""\n+\n+#: plone/restapi/upgrades/configure.zcml:33\n msgid "plone.restapi.upgrades.0002"\n msgstr ""\n+\n+#: plone/restapi/upgrades/configure.zcml:52\n+msgid "plone.restapi.upgrades.0004"\n+msgstr ""\ndiff --git a/src/plone/restapi/services/users/add.py b/src/plone/restapi/services/users/add.py\nindex 8709e47dc..ab22dabf1 100644\n--- a/src/plone/restapi/services/users/add.py\n+++ b/src/plone/restapi/services/users/add.py\n@@ -1,4 +1,6 @@\n from AccessControl import getSecurityManager\n+from plone.app.users.schema import ICombinedRegisterSchema\n+from plone.restapi import _\n from plone.restapi.deserializer import json_body\n from plone.restapi.interfaces import ISerializeToJson\n from plone.restapi.services import Service\n@@ -13,6 +15,7 @@\n from zope.component import getMultiAdapter\n from zope.component import queryMultiAdapter\n from zope.component.hooks import getSite\n+from zope.i18n import translate\n from zope.interface import alsoProvides\n from zope.interface import implementer\n from zope.publisher.interfaces import IPublishTraverse\n@@ -33,6 +36,22 @@ def publishTraverse(self, request, name):\n         self.params.append(name)\n         return self\n \n+    def translate(self, msgid):\n+        return translate(\n+            msgid,\n+            context=self.request,\n+        )\n+\n+    def translate_fieldname(self, fieldname):\n+        """Not all fields that appear on Add User Form in Volto match in Plone."""\n+        if fieldname == "roles":\n+            msgid = _("Roles")\n+        elif fieldname == "sendPasswordReset":\n+            msgid = ICombinedRegisterSchema["mail_me"].title\n+        else:\n+            msgid = ICombinedRegisterSchema[fieldname].title\n+        return self.translate(msgid)\n+\n     def validate_input_data(self, portal, original_data):\n         """Returns a tuple of (required_fields, allowed_fields)"""\n         security = getAdapter(portal, ISecuritySchema)\n@@ -62,11 +81,23 @@ def validate_input_data(self, portal, original_data):\n         # check input data\n         for fieldname in required:\n             if not data.get(fieldname, None):\n-                self.add_field_error(fieldname, f"Property \'{fieldname}\' is required.")\n+                translated_fieldname = self.translate_fieldname(fieldname)\n+                self.add_field_error(\n+                    fieldname,\n+                    _(\n+                        "Property \'${fieldname}\' is required.",\n+                        mapping={"fieldname": translated_fieldname},\n+                    ),\n+                )\n         for fieldname in data:\n             if fieldname not in allowed:\n+                translated_fieldname = self.translate_fieldname(fieldname)\n                 self.add_field_error(\n-                    fieldname, f"Property \'{fieldname}\' is not allowed."\n+                    fieldname,\n+                    _(\n+                        "Property \'${fieldname}\' is not allowed.",\n+                        mapping={"fieldname": translated_fieldname},\n+                    ),\n                 )\n \n         password = data.get("password")\n@@ -75,16 +106,16 @@ def validate_input_data(self, portal, original_data):\n             if password is None and send_password_reset is None:\n                 self.add_field_error(\n                     "sendPasswordReset",\n-                    "You have to either send a password or sendPasswordReset.",\n+                    _("You have to either send a password or sendPasswordReset."),\n                 )\n             if password and send_password_reset:\n                 self.add_field_error(\n                     "sendPasswordReset",\n-                    "You can\'t send both password and sendPasswordReset.",\n+                    _("You can\'t send both password and sendPasswordReset."),\n                 )\n \n-    def add_field_error(self, field, message):\n-        self.errors.append({"field": field, "message": message})\n+    def add_field_error(self, field, msgid):\n+        self.errors.append({"field": field, "message": self.translate(msgid)})\n \n     def errors_to_string(self):\n         return " ".join([error["message"] for error in self.errors])\n@@ -117,14 +148,23 @@ def reply(self):\n \n         # Add a portal member\n         if not self.can_add_member:\n-            return self._error(403, "Forbidden", "You need AddPortalMember permission.")\n+            return self._error(\n+                403,\n+                "Forbidden",\n+                _("You need AddPortalMember permission."),\n+            )\n \n         if self.errors:\n             self.request.response.setStatus(400)\n             return dict(\n                 error=dict(\n                     type="WrongParameterError",\n-                    message=f"Error in fields. {self.errors_to_string()}",\n+                    message=self.translate(\n+                        _(\n+                            "Error in fields. ${errors_to_string}",\n+                            mapping={"errors_to_string": self.errors_to_string()},\n+                        )\n+                    ),\n                     errors=self.errors,\n                 )\n             )\n@@ -167,7 +207,12 @@ def reply(self):\n             )\n         except ValueError as e:\n             self.request.response.setStatus(400)\n-            return dict(error=dict(type="MissingParameterError", message=str(e)))\n+            return dict(\n+                error=dict(\n+                    type="MissingParameterError",\n+                    message=self.translate(str(e)),\n+                )\n+            )\n \n         if user_id != login_name:\n             # The user id differs from the login name.  Set the login\n@@ -192,9 +237,9 @@ def _get_user(self, user_id):\n     def _get_user_by_login_name(self, user_id):\n         return get_member_by_login_name(self.context, user_id, raise_exceptions=False)\n \n-    def _error(self, status, type, message):\n+    def _error(self, status, _type, msgid):\n         self.request.response.setStatus(status)\n-        return {"error": {"type": type, "message": message}}\n+        return {"error": {"type": _type, "message": self.translate(msgid)}}\n \n     @property\n     def can_manage_users(self):\n@@ -236,19 +281,19 @@ def update_password(self, data):\n             return self._error(\n                 400,\n                 "Invalid parameters",\n-                "You can\'t use \'reset_token\' and \'old_password\' together.",\n+                _("You can\'t use \'reset_token\' and \'old_password\' together."),\n             )\n         if reset_token and not new_password:\n             return self._error(\n                 400,\n                 "Invalid parameters",\n-                "If you pass \'reset_token\' you have to pass \'new_password\'",\n+                _("If you pass \'reset_token\' you have to pass \'new_password\'"),\n             )\n         if old_password and not new_password:\n             return self._error(\n                 400,\n                 "Invalid parameters",\n-                "If you pass \'old_password\' you have to pass \'new_password\'",\n+                _("If you pass \'old_password\' you have to pass \'new_password\'"),\n             )\n \n         # Reset the password with a reset token\n@@ -257,10 +302,15 @@ def update_password(self, data):\n                 pwt.resetPassword(username, reset_token, new_password)\n             except InvalidRequestError:\n                 return self._error(\n-                    403, "Unknown Token", "The reset_token is unknown/not valid."\n+                    403,\n+                    "Unknown Token",\n+                    _("The reset_token is unknown/not valid."),\n                 )\n             except ExpiredRequestError:\n-                return self._error(403, "Expired Token", "The reset_token is expired.")\n+                return self._error(\n+                    403,\n+                    _("Expired Token", "The reset_token is expired."),\n+                )\n             return\n \n         # set the new password by giving the old password\n@@ -269,18 +319,17 @@ def update_password(self, data):\n                 return self._error(\n                     403,\n                     "Not allowed",\n-                    "You can\'t set a password without " "a password reset token.",\n+                    _("You can\'t set a password without a password reset token."),\n                 )\n             authenticated_user_id = mt.getAuthenticatedMember().getId()\n             if username != authenticated_user_id:\n                 return self._error(\n                     403,\n                     "Wrong user",\n-                    (\n-                        "You need to be logged in as the user \'%s\' to set "\n-                        "the password."\n-                    )\n-                    % username,\n+                    _(\n+                        "You need to be logged in as the user \'${username}\' to set the password.",\n+                        mapping={"username": username},\n+                    ),\n                 )\n \n             check_password_auth = pas.authenticate(\n@@ -290,7 +339,7 @@ def update_password(self, data):\n                 return self._error(\n                     403,\n                     "Wrong password",\n-                    "The password passed as \'old_password\' " "is wrong.",\n+                    _("The password passed as \'old_password\' is wrong."),\n                 )\n             mt.setPassword(new_password)\n             return\n@@ -298,5 +347,5 @@ def update_password(self, data):\n         return self._error(\n             400,\n             "Invalid parameters",\n-            "See the user endpoint documentation for the " "valid parameters.",\n+            _("See the user endpoint documentation for the valid parameters."),\n         )\ndiff --git a/src/plone/restapi/services/users/update.py b/src/plone/restapi/services/users/update.py\nindex f209bfeb3..1c29d5b43 100644\n--- a/src/plone/restapi/services/users/update.py\n+++ b/src/plone/restapi/services/users/update.py\n@@ -2,6 +2,7 @@\n from Acquisition import aq_inner\n from io import BytesIO\n from OFS.Image import Image\n+from plone.restapi import _\n from plone.restapi.services import Service\n from Products.CMFCore.permissions import SetOwnPassword\n from Products.CMFCore.utils import getToolByName\n@@ -11,6 +12,7 @@\n from Products.PlonePAS.utils import scale_image\n from zope.component import getAdapter\n from zope.component.hooks import getSite\n+from zope.i18n import translate\n from zope.interface import alsoProvides\n from zope.interface import implementer\n from zope.publisher.interfaces import IPublishTraverse\n@@ -48,6 +50,12 @@ def _change_user_password(self, user, value):\n         acl_users = getToolByName(self.context, "acl_users")\n         acl_users.userSetPassword(user.getUserId(), value)\n \n+    def translate(self, msgid):\n+        return translate(\n+            msgid,\n+            context=self.request,\n+        )\n+\n     def reply(self):\n         user_settings_to_update = json.loads(self.request.get("BODY", "{}"))\n         user = self._get_user(self._get_user_id)\n@@ -108,11 +116,13 @@ def reply(self):\n                 return self._error(\n                     401,\n                     "Unauthorized",\n-                    "You are not authorized to perform this " "action",\n+                    _("You are not authorized to perform this action"),\n                 )\n             else:\n                 return self._error(\n-                    403, "Forbidden", "You can\'t update the " "properties of this user"\n+                    403,\n+                    "Forbidden",\n+                    _("You can\'t update the properties of this user"),\n                 )\n \n         return self.reply_no_content()\n@@ -127,9 +137,9 @@ def can_set_own_password(self):\n         sm = getSecurityManager()\n         return sm.checkPermission(SetOwnPassword, self.context)\n \n-    def _error(self, status, type, message):\n+    def _error(self, status, _type, msgid):\n         self.request.response.setStatus(status)\n-        return {"error": {"type": type, "message": message}}\n+        return {"error": {"type": _type, "message": self.translate(msgid)}}\n \n     @property\n     def _get_current_user(self):\n@@ -169,7 +179,7 @@ def set_member_portrait(self, user, portrait):\n         if portrait.get("scale", False):\n             # Only scale if the scale (default Plone behavior) boolean is set\n             # This should be handled by the core in the future\n-            scaled, mimetype = scale_image(BytesIO(data))\n+            scaled, _mimetype = scale_image(BytesIO(data))\n         else:\n             # Normally, the scale and cropping is going to be handled in the\n             # frontend\ndiff --git a/src/plone/restapi/tests/test_services_users.py b/src/plone/restapi/tests/test_services_users.py\nindex fac664ae2..9958b2fa7 100644\n--- a/src/plone/restapi/tests/test_services_users.py\n+++ b/src/plone/restapi/tests/test_services_users.py\n@@ -5,6 +5,7 @@\n from plone.app.testing import SITE_OWNER_PASSWORD\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import TEST_USER_PASSWORD\n+from plone.restapi.services.users.get import UsersGet\n from plone.restapi.testing import PLONE_RESTAPI_DX_FUNCTIONAL_TESTING\n from plone.restapi.testing import RelativeSession\n from Products.CMFCore.permissions import SetOwnPassword\n@@ -13,7 +14,6 @@\n from Products.MailHost.interfaces import IMailHost\n from zope.component import getAdapter\n from zope.component import getUtility\n-from plone.restapi.services.users.get import UsersGet\n \n import os\n import re\n@@ -150,7 +150,7 @@ def test_add_user_username_is_required(self):\n         transaction.commit()\n \n         self.assertEqual(400, response.status_code)\n-        self.assertTrue("Property \'username\' is required" in response.text)\n+        self.assertTrue("Property \'User Name\' is required" in response.text)\n \n     def test_add_user_password_is_required(self):\n         response = self.api_session.post("/@users", json={"username": "noamchomsky"})\n@@ -172,7 +172,7 @@ def test_add_user_email_is_required_if_email_login_is_enabled(self):\n         )\n \n         self.assertEqual(400, response.status_code)\n-        self.assertTrue("Property \'username\' is not allowed" in response.text)\n+        self.assertTrue("Property \'User Name\' is not allowed" in response.text)\n \n     def test_add_user_email_with_email_login_enabled(self):\n         # enable use_email_as_login\n@@ -204,7 +204,7 @@ def test_username_is_not_allowed_with_email_login_enabled(self):\n         transaction.commit()\n \n         self.assertEqual(400, response.status_code)\n-        self.assertTrue("Property \'username\' is not allowed" in response.text)\n+        self.assertTrue("Property \'User Name\' is not allowed" in response.text)\n \n     def test_add_user_with_email_login_enabled(self):\n         # enable use_email_as_login\n@@ -882,7 +882,7 @@ def test_anonymous_can_set_password_with_enable_user_pwd_choice(self):\n         transaction.commit()\n \n         self.assertEqual(400, response.status_code)\n-        self.assertTrue("Property \'password\' is not allowed" in response.text)\n+        self.assertTrue("Property \'Password\' is not allowed" in response.text)\n \n         security_settings.enable_user_pwd_choice = True\n         transaction.commit()\n'

