Repository: plone.app.testing


Branch: refs/heads/master
Date: 2016-01-28T23:48:18+01:00
Author: Patrick Gerken (do3cc) <patrick.gerken@zumtobelgroup.com>
Commit: https://github.com/plone/plone.app.testing/commit/331207fb8aa5aa600c3abd9878a06217b5d2c816

Add basic docs on isolation problems

Files changed:
A docs/source/isolation.rst
M docs/source/index.rst

diff --git a/docs/source/index.rst b/docs/source/index.rst
index 622eca9..c653585 100644
--- a/docs/source/index.rst
+++ b/docs/source/index.rst
@@ -12,6 +12,7 @@ Welcome to plone.app.testing's documentation!
    README
    views
    zope-testbrowser
+   isolation
 
 
 
diff --git a/docs/source/isolation.rst b/docs/source/isolation.rst
new file mode 100644
index 0000000..fa93327
--- /dev/null
+++ b/docs/source/isolation.rst
@@ -0,0 +1,31 @@
+Test Isolation is hard
+======================
+
+At the moment, it is not possible to just run all tests at once.
+Therfore we have an alltests script that groups tests together.
+
+You may wonder, why and which tests need to be separated.
+
+plone.app.testing vs ZopeTestCase
+---------------------------------
+
+plone.app.testing goes at great lengths to isolate tests.
+The zope component architecture does not provide easy ways to isolate and revert changes.
+
+So, I hear you saying let us monkey patch the zope component architecture.
+
+That is what plone.app.testing and ZopeTestCase also thought.
+
+They monkey patch in different ways.
+The practical result is, that the first time, a ZopeTestCase runs, test isolation is broken and suddenly every test runs in the same demo storage while the teardowns, tear down a totally unrelated stacked demo storage.
+
+That means that the second test with plone.app.testing will see the changes from the first test.
+
+If you create tests with both plone.app.testing and ZopeTestCase, they can have random failures depending of ordering.
+
+anything vs MockTestCase
+------------------------
+MockTestCase has integration functionality for using mockers.
+You can easily register your mocks so that they get removed after the test.
+Thing is, something patches something in such a way, that unregistering mocks stop working.
+Worse, the stack is somehow also gone so that it is impossible to figure out via pdb, what is failing.


Repository: plone.app.testing


Branch: refs/heads/master
Date: 2016-01-28T23:50:24+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.forcada@freitag.de>
Commit: https://github.com/plone/plone.app.testing/commit/3ef13fadc21cef589947988ea2778613b76dd3ea

Merge pull request #21 from plone/isolation

Isolation

Files changed:
A docs/source/isolation.rst
M docs/source/index.rst

diff --git a/docs/source/index.rst b/docs/source/index.rst
index 622eca9..c653585 100644
--- a/docs/source/index.rst
+++ b/docs/source/index.rst
@@ -12,6 +12,7 @@ Welcome to plone.app.testing's documentation!
    README
    views
    zope-testbrowser
+   isolation
 
 
 
diff --git a/docs/source/isolation.rst b/docs/source/isolation.rst
new file mode 100644
index 0000000..fa93327
--- /dev/null
+++ b/docs/source/isolation.rst
@@ -0,0 +1,31 @@
+Test Isolation is hard
+======================
+
+At the moment, it is not possible to just run all tests at once.
+Therfore we have an alltests script that groups tests together.
+
+You may wonder, why and which tests need to be separated.
+
+plone.app.testing vs ZopeTestCase
+---------------------------------
+
+plone.app.testing goes at great lengths to isolate tests.
+The zope component architecture does not provide easy ways to isolate and revert changes.
+
+So, I hear you saying let us monkey patch the zope component architecture.
+
+That is what plone.app.testing and ZopeTestCase also thought.
+
+They monkey patch in different ways.
+The practical result is, that the first time, a ZopeTestCase runs, test isolation is broken and suddenly every test runs in the same demo storage while the teardowns, tear down a totally unrelated stacked demo storage.
+
+That means that the second test with plone.app.testing will see the changes from the first test.
+
+If you create tests with both plone.app.testing and ZopeTestCase, they can have random failures depending of ordering.
+
+anything vs MockTestCase
+------------------------
+MockTestCase has integration functionality for using mockers.
+You can easily register your mocks so that they get removed after the test.
+Thing is, something patches something in such a way, that unregistering mocks stop working.
+Worse, the stack is somehow also gone so that it is impossible to figure out via pdb, what is failing.


