Repository: plone.app.content


Branch: refs/heads/master
Date: 2022-09-18T20:05:14-07:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/plone.app.content/commit/bdaaa58e05252b77d2af8e6b599cbfe2788f2990

Use longer password in tests

Files changed:
M plone/app/content/testing.py
M plone/app/content/tests/test_actions.py
M plone/app/content/tests/test_reviewlist.py
M plone/app/content/tests/test_selectdefaultpage.py
M plone/app/content/tests/test_widgets.py

b'diff --git a/plone/app/content/testing.py b/plone/app/content/testing.py\nindex 299fd58..b5a85ce 100644\n--- a/plone/app/content/testing.py\n+++ b/plone/app/content/testing.py\n@@ -4,6 +4,7 @@\n from plone.app.testing import IntegrationTesting\n from plone.app.testing import PLONE_FIXTURE\n from plone.app.testing import PloneSandboxLayer\n+from plone.app.testing import TEST_USER_PASSWORD\n from Products.CMFCore.utils import getToolByName\n from zope.configuration import xmlconfig\n from zope.interface import implementer\n@@ -48,14 +49,14 @@ class PloneAppContent(PloneSandboxLayer):\n     defaultBases = (PLONE_FIXTURE,)\n \n     USER_NAME = "johndoe"\n-    USER_PASSWORD = "secret"\n+    USER_PASSWORD = TEST_USER_PASSWORD\n     MEMBER_NAME = "janedoe"\n-    MEMBER_PASSWORD = "secret"\n+    MEMBER_PASSWORD = TEST_USER_PASSWORD\n     USER_WITH_FULLNAME_NAME = "jim"\n     USER_WITH_FULLNAME_FULLNAME = "Jim Fulton"\n-    USER_WITH_FULLNAME_PASSWORD = "secret"\n+    USER_WITH_FULLNAME_PASSWORD = TEST_USER_PASSWORD\n     MANAGER_USER_NAME = "manager"\n-    MANAGER_USER_PASSWORD = "secret"\n+    MANAGER_USER_PASSWORD = TEST_USER_PASSWORD\n \n     def setUpZope(self, app, configurationContext):\n         # Load ZCML\ndiff --git a/plone/app/content/tests/test_actions.py b/plone/app/content/tests/test_actions.py\nindex 83860c3..7b5f727 100644\n--- a/plone/app/content/tests/test_actions.py\n+++ b/plone/app/content/tests/test_actions.py\n@@ -4,6 +4,7 @@\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import TEST_USER_NAME\n+from plone.app.testing import TEST_USER_PASSWORD\n from plone.locking.interfaces import ILockable\n from plone.testing.zope import Browser\n from z3c.form.interfaces import IFormLayer\n@@ -23,7 +24,7 @@ def setUp(self):\n         self.portal = self.layer["portal"]\n         self.request = self.layer["request"]\n \n-        self.portal.acl_users.userFolderAddUser("editor", "secret", ["Editor"], [])\n+        self.portal.acl_users.userFolderAddUser("editor", TEST_USER_PASSWORD, ["Editor"], [])\n \n         # For z3c.forms request must provide IFormLayer\n         alsoProvides(self.request, IFormLayer)\n@@ -35,7 +36,7 @@ def setUp(self):\n         self.browser = Browser(self.layer["app"])\n         self.browser.handleErrors = False\n         self.browser.addHeader(\n-            "Authorization", "Basic {}:{}".format(TEST_USER_NAME, "secret")\n+            "Authorization", "Basic {}:{}".format(TEST_USER_NAME, TEST_USER_PASSWORD)\n         )\n \n     def tearDown(self):\n@@ -122,7 +123,7 @@ def prepare_for_acquisition_tests(self):\n         browser_2 = Browser(self.layer["app"])\n         browser_2.handleErrors = False\n         browser_2.addHeader(\n-            "Authorization", "Basic {}:{}".format(TEST_USER_NAME, "secret")\n+            "Authorization", "Basic {}:{}".format(TEST_USER_NAME, TEST_USER_PASSWORD)\n         )\n \n         # return the id of the root page, the nested page itself, and the\ndiff --git a/plone/app/content/tests/test_reviewlist.py b/plone/app/content/tests/test_reviewlist.py\nindex c55f794..e63b4a3 100644\n--- a/plone/app/content/tests/test_reviewlist.py\n+++ b/plone/app/content/tests/test_reviewlist.py\n@@ -1,6 +1,7 @@\n from plone.app.content.testing import PLONE_APP_CONTENT_DX_FUNCTIONAL_TESTING\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n+from plone.app.testing import TEST_USER_PASSWORD\n from plone.testing.zope import Browser\n from Products.CMFCore.utils import getToolByName\n \n@@ -16,7 +17,7 @@ class ReviewListTestCase(unittest.TestCase):\n     def setUp(self):\n         self.portal = self.layer["portal"]\n         self.uf = self.portal.acl_users\n-        self.uf.userFolderAddUser("reviewer", "secret", ["Reviewer"], [])\n+        self.uf.userFolderAddUser("reviewer", TEST_USER_PASSWORD, ["Reviewer"], [])\n         transaction.commit()\n         self.browser = Browser(self.layer["app"])\n         self.browser.handleErrors = True\n@@ -58,7 +59,7 @@ def test_authenticated(self):\n         the review list\n         """\n         self.browser.addHeader(\n-            "Authorization", "Basic {}:{}".format("reviewer", "secret")\n+            "Authorization", "Basic {}:{}".format("reviewer", TEST_USER_PASSWORD)\n         )\n         self.browser.open("http://nohost/plone/full_review_list")\n         self.assertTrue("Full review list:" in self.browser.contents)\n@@ -73,7 +74,7 @@ def test_with_content(self):\n         transaction.commit()\n \n         self.browser.addHeader(\n-            "Authorization", "Basic {}:{}".format("reviewer", "secret")\n+            "Authorization", "Basic {}:{}".format("reviewer", TEST_USER_PASSWORD)\n         )\n         self.browser.open("http://nohost/plone/full_review_list")\n         self.assertTrue("Full review list:" in self.browser.contents)\ndiff --git a/plone/app/content/tests/test_selectdefaultpage.py b/plone/app/content/tests/test_selectdefaultpage.py\nindex c914fa1..3af4f1c 100644\n--- a/plone/app/content/tests/test_selectdefaultpage.py\n+++ b/plone/app/content/tests/test_selectdefaultpage.py\n@@ -1,6 +1,7 @@\n from plone.app.content.testing import PLONE_APP_CONTENT_DX_FUNCTIONAL_TESTING\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n+from plone.app.testing import TEST_USER_PASSWORD\n from plone.testing.zope import Browser\n \n import transaction\n@@ -32,14 +33,14 @@ class SelectDefaultPageDXTestCase(unittest.TestCase):\n \n     def setUp(self):\n         self.portal = self.layer["portal"]\n-        self.portal.acl_users.userFolderAddUser("editor", "secret", ["Editor"], [])\n+        self.portal.acl_users.userFolderAddUser("editor", TEST_USER_PASSWORD, ["Editor"], [])\n \n         self._create_structure()\n         transaction.commit()\n \n         self.browser = Browser(self.layer["app"])\n         self.browser.addHeader(\n-            "Authorization", "Basic {}:{}".format("editor", "secret")\n+            "Authorization", "Basic {}:{}".format("editor", TEST_USER_PASSWORD)\n         )\n \n     def tearDown(self):\ndiff --git a/plone/app/content/tests/test_widgets.py b/plone/app/content/tests/test_widgets.py\nindex d71821a..c357713 100644\n--- a/plone/app/content/tests/test_widgets.py\n+++ b/plone/app/content/tests/test_widgets.py\n@@ -11,6 +11,7 @@\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import TEST_USER_NAME\n+from plone.app.testing import TEST_USER_PASSWORD\n from plone.app.z3cform.interfaces import IFieldPermissionChecker\n from Products.CMFCore.indexing import processQueue\n from unittest import mock\n@@ -376,7 +377,7 @@ def testVocabularyUsers(self):\n         # as alternative to the workaround in PloneHotfix20210518.\n         for i in range(amount):\n             id = "user" + str(i)\n-            acl_users.userFolderAddUser(id, "secret", ["Member"], [])\n+            acl_users.userFolderAddUser(id, TEST_USER_PASSWORD, ["Member"], [])\n             member = membership.getMemberById(id)\n             # Make user0 the hacker.\n             if i == 0:\n'

Repository: plone.app.content


Branch: refs/heads/master
Date: 2022-09-18T20:05:48-07:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/plone.app.content/commit/96455541837922107da078f18eaf5a00eefda9b9

changelog

Files changed:
A news/255.bugfix

b'diff --git a/news/255.bugfix b/news/255.bugfix\nnew file mode 100644\nindex 00000000..2d767944\n--- /dev/null\n+++ b/news/255.bugfix\n@@ -0,0 +1 @@\n+- Use longer password in tests. [davisagli]\n'

Repository: plone.app.content


Branch: refs/heads/master
Date: 2022-09-19T11:16:06+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.content/commit/55fe04369ea44bae33ace5d94d0858aab7efe7ad

Merge pull request #255 from plone/pw-length

Use longer password in tests

Files changed:
A news/255.bugfix
M plone/app/content/testing.py
M plone/app/content/tests/test_actions.py
M plone/app/content/tests/test_reviewlist.py
M plone/app/content/tests/test_selectdefaultpage.py
M plone/app/content/tests/test_widgets.py

b'diff --git a/news/255.bugfix b/news/255.bugfix\nnew file mode 100644\nindex 00000000..2d767944\n--- /dev/null\n+++ b/news/255.bugfix\n@@ -0,0 +1 @@\n+- Use longer password in tests. [davisagli]\ndiff --git a/plone/app/content/testing.py b/plone/app/content/testing.py\nindex 299fd581..b5a85ce1 100644\n--- a/plone/app/content/testing.py\n+++ b/plone/app/content/testing.py\n@@ -4,6 +4,7 @@\n from plone.app.testing import IntegrationTesting\n from plone.app.testing import PLONE_FIXTURE\n from plone.app.testing import PloneSandboxLayer\n+from plone.app.testing import TEST_USER_PASSWORD\n from Products.CMFCore.utils import getToolByName\n from zope.configuration import xmlconfig\n from zope.interface import implementer\n@@ -48,14 +49,14 @@ class PloneAppContent(PloneSandboxLayer):\n     defaultBases = (PLONE_FIXTURE,)\n \n     USER_NAME = "johndoe"\n-    USER_PASSWORD = "secret"\n+    USER_PASSWORD = TEST_USER_PASSWORD\n     MEMBER_NAME = "janedoe"\n-    MEMBER_PASSWORD = "secret"\n+    MEMBER_PASSWORD = TEST_USER_PASSWORD\n     USER_WITH_FULLNAME_NAME = "jim"\n     USER_WITH_FULLNAME_FULLNAME = "Jim Fulton"\n-    USER_WITH_FULLNAME_PASSWORD = "secret"\n+    USER_WITH_FULLNAME_PASSWORD = TEST_USER_PASSWORD\n     MANAGER_USER_NAME = "manager"\n-    MANAGER_USER_PASSWORD = "secret"\n+    MANAGER_USER_PASSWORD = TEST_USER_PASSWORD\n \n     def setUpZope(self, app, configurationContext):\n         # Load ZCML\ndiff --git a/plone/app/content/tests/test_actions.py b/plone/app/content/tests/test_actions.py\nindex 83860c3b..7b5f7279 100644\n--- a/plone/app/content/tests/test_actions.py\n+++ b/plone/app/content/tests/test_actions.py\n@@ -4,6 +4,7 @@\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import TEST_USER_NAME\n+from plone.app.testing import TEST_USER_PASSWORD\n from plone.locking.interfaces import ILockable\n from plone.testing.zope import Browser\n from z3c.form.interfaces import IFormLayer\n@@ -23,7 +24,7 @@ def setUp(self):\n         self.portal = self.layer["portal"]\n         self.request = self.layer["request"]\n \n-        self.portal.acl_users.userFolderAddUser("editor", "secret", ["Editor"], [])\n+        self.portal.acl_users.userFolderAddUser("editor", TEST_USER_PASSWORD, ["Editor"], [])\n \n         # For z3c.forms request must provide IFormLayer\n         alsoProvides(self.request, IFormLayer)\n@@ -35,7 +36,7 @@ def setUp(self):\n         self.browser = Browser(self.layer["app"])\n         self.browser.handleErrors = False\n         self.browser.addHeader(\n-            "Authorization", "Basic {}:{}".format(TEST_USER_NAME, "secret")\n+            "Authorization", "Basic {}:{}".format(TEST_USER_NAME, TEST_USER_PASSWORD)\n         )\n \n     def tearDown(self):\n@@ -122,7 +123,7 @@ def prepare_for_acquisition_tests(self):\n         browser_2 = Browser(self.layer["app"])\n         browser_2.handleErrors = False\n         browser_2.addHeader(\n-            "Authorization", "Basic {}:{}".format(TEST_USER_NAME, "secret")\n+            "Authorization", "Basic {}:{}".format(TEST_USER_NAME, TEST_USER_PASSWORD)\n         )\n \n         # return the id of the root page, the nested page itself, and the\ndiff --git a/plone/app/content/tests/test_reviewlist.py b/plone/app/content/tests/test_reviewlist.py\nindex c55f7940..e63b4a3b 100644\n--- a/plone/app/content/tests/test_reviewlist.py\n+++ b/plone/app/content/tests/test_reviewlist.py\n@@ -1,6 +1,7 @@\n from plone.app.content.testing import PLONE_APP_CONTENT_DX_FUNCTIONAL_TESTING\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n+from plone.app.testing import TEST_USER_PASSWORD\n from plone.testing.zope import Browser\n from Products.CMFCore.utils import getToolByName\n \n@@ -16,7 +17,7 @@ class ReviewListTestCase(unittest.TestCase):\n     def setUp(self):\n         self.portal = self.layer["portal"]\n         self.uf = self.portal.acl_users\n-        self.uf.userFolderAddUser("reviewer", "secret", ["Reviewer"], [])\n+        self.uf.userFolderAddUser("reviewer", TEST_USER_PASSWORD, ["Reviewer"], [])\n         transaction.commit()\n         self.browser = Browser(self.layer["app"])\n         self.browser.handleErrors = True\n@@ -58,7 +59,7 @@ def test_authenticated(self):\n         the review list\n         """\n         self.browser.addHeader(\n-            "Authorization", "Basic {}:{}".format("reviewer", "secret")\n+            "Authorization", "Basic {}:{}".format("reviewer", TEST_USER_PASSWORD)\n         )\n         self.browser.open("http://nohost/plone/full_review_list")\n         self.assertTrue("Full review list:" in self.browser.contents)\n@@ -73,7 +74,7 @@ def test_with_content(self):\n         transaction.commit()\n \n         self.browser.addHeader(\n-            "Authorization", "Basic {}:{}".format("reviewer", "secret")\n+            "Authorization", "Basic {}:{}".format("reviewer", TEST_USER_PASSWORD)\n         )\n         self.browser.open("http://nohost/plone/full_review_list")\n         self.assertTrue("Full review list:" in self.browser.contents)\ndiff --git a/plone/app/content/tests/test_selectdefaultpage.py b/plone/app/content/tests/test_selectdefaultpage.py\nindex c914fa11..3af4f1ce 100644\n--- a/plone/app/content/tests/test_selectdefaultpage.py\n+++ b/plone/app/content/tests/test_selectdefaultpage.py\n@@ -1,6 +1,7 @@\n from plone.app.content.testing import PLONE_APP_CONTENT_DX_FUNCTIONAL_TESTING\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n+from plone.app.testing import TEST_USER_PASSWORD\n from plone.testing.zope import Browser\n \n import transaction\n@@ -32,14 +33,14 @@ class SelectDefaultPageDXTestCase(unittest.TestCase):\n \n     def setUp(self):\n         self.portal = self.layer["portal"]\n-        self.portal.acl_users.userFolderAddUser("editor", "secret", ["Editor"], [])\n+        self.portal.acl_users.userFolderAddUser("editor", TEST_USER_PASSWORD, ["Editor"], [])\n \n         self._create_structure()\n         transaction.commit()\n \n         self.browser = Browser(self.layer["app"])\n         self.browser.addHeader(\n-            "Authorization", "Basic {}:{}".format("editor", "secret")\n+            "Authorization", "Basic {}:{}".format("editor", TEST_USER_PASSWORD)\n         )\n \n     def tearDown(self):\ndiff --git a/plone/app/content/tests/test_widgets.py b/plone/app/content/tests/test_widgets.py\nindex d71821a7..c3577139 100644\n--- a/plone/app/content/tests/test_widgets.py\n+++ b/plone/app/content/tests/test_widgets.py\n@@ -11,6 +11,7 @@\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import TEST_USER_NAME\n+from plone.app.testing import TEST_USER_PASSWORD\n from plone.app.z3cform.interfaces import IFieldPermissionChecker\n from Products.CMFCore.indexing import processQueue\n from unittest import mock\n@@ -376,7 +377,7 @@ def testVocabularyUsers(self):\n         # as alternative to the workaround in PloneHotfix20210518.\n         for i in range(amount):\n             id = "user" + str(i)\n-            acl_users.userFolderAddUser(id, "secret", ["Member"], [])\n+            acl_users.userFolderAddUser(id, TEST_USER_PASSWORD, ["Member"], [])\n             member = membership.getMemberById(id)\n             # Make user0 the hacker.\n             if i == 0:\n'

