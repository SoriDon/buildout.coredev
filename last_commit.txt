Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-06-08T01:45:07+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/382133913d78be92d355fdec0a70679ed1a79612

Moved brand new wait-for-element keywords to plone.app.robotframework.

Needs https://github.com/plone/plone.app.robotframework/pull/136
Use the new keywords in more tests.
This should hopefully again bring a bit more stability.

Files changed:
M Products/CMFPlone/tests/robot/keywords.robot
M Products/CMFPlone/tests/robot/test_controlpanel_actions.robot
M Products/CMFPlone/tests/robot/test_controlpanel_filter.robot
M Products/CMFPlone/tests/robot/test_controlpanel_navigation.robot
M Products/CMFPlone/tests/robot/test_controlpanel_search.robot
M Products/CMFPlone/tests/robot/test_controlpanel_security.robot
M Products/CMFPlone/tests/robot/test_controlpanel_site.robot
M Products/CMFPlone/tests/robot/test_controlpanel_social.robot
M Products/CMFPlone/tests/robot/test_edit_user_schema.robot
M Products/CMFPlone/tests/robot/test_linkintegrity.robot
M Products/CMFPlone/tests/robot/test_livesearch.robot
M Products/CMFPlone/tests/robot/test_tinymce.robot

b'diff --git a/Products/CMFPlone/tests/robot/keywords.robot b/Products/CMFPlone/tests/robot/keywords.robot\nindex 89b4a4ee21..75765ffc38 100644\n--- a/Products/CMFPlone/tests/robot/keywords.robot\n+++ b/Products/CMFPlone/tests/robot/keywords.robot\n@@ -33,23 +33,3 @@ patterns are loaded\n a folder with a document \'${title}\'\n   ${folder_uid}=  Create content  type=Folder  title=folder\n   Create content  type=Document  container=${folder_uid}  title=${title}\n-\n-Wait For Element\n-  [Arguments]  ${element}\n-  [Documentation]  Can contain css=, jquery=, or any other element selector.\n-  Wait Until Page Contains Element  ${element}\n-  Set Focus To Element  ${element}\n-  Wait Until Element Is Visible  ${element}\n-\n-Wait For Then Click Element\n-  [Arguments]  ${element}\n-  [Documentation]  Can contain css=, jquery=, or any other element selector.\n-  Wait For Element  ${element}\n-  Click Element  ${element}\n-\n-Wait For Then Click Hidden Element\n-  [Arguments]  ${element}\n-  [Documentation]  Meant for invisible elements.  Can contain css=, jquery=, or any other element selector.\n-  Wait Until Page Contains Element  ${element}\n-  Set Focus To Element  ${element}\n-  Click Element  ${element}\ndiff --git a/Products/CMFPlone/tests/robot/test_controlpanel_actions.robot b/Products/CMFPlone/tests/robot/test_controlpanel_actions.robot\nindex 3d7bfd015f..8bb0a2513c 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_actions.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_actions.robot\n@@ -71,37 +71,26 @@ I modify an action title\n   Click Link    css=section:nth-child(3) li:first-child a\n   Wait until page contains  Action Settings\n   Input Text for sure  form.widgets.title  A new site map\n-  Set Focus To Element  css=.pattern-modal-buttons > button\n-  Wait Until Element Is Visible  css=.pattern-modal-buttons > button\n-  Click Element  css=.pattern-modal-buttons > button\n+  Wait For Then Click Element  css=.pattern-modal-buttons > button\n \n I change the actions order\n   Click Link    css=section:nth-child(3) li:first-child a\n   Wait until page contains  Action Settings\n   Input Text for sure  form.widgets.position  3\n-  Set Focus To Element  css=.pattern-modal-buttons > button\n-  Wait Until Element Is Visible  css=.pattern-modal-buttons > button\n-  Click Element  css=.pattern-modal-buttons > button\n+  Wait For Then Click Element  css=.pattern-modal-buttons > button\n \n I add a new action\n   Click Link  Add new action\n   Wait until page contains  New action\n   Select From List By Label   form.widgets.category:list   User actions\n   Input Text for sure  form.widgets.id  favorites\n-  Set Focus To Element  css=.pattern-modal-buttons > button\n-  Wait Until Element Is Visible  css=.pattern-modal-buttons > button\n-  Click Element  css=.pattern-modal-buttons > button\n+  Wait For Then Click Element  css=.pattern-modal-buttons > button\n   Wait until page contains  favorites\n-  Set Focus To Element  css=section.category:last-child li:last-child a\n-  Wait Until Element Is Visible  css=section.category:last-child li:last-child a\n-  Sleep  1\n-  Click Link  css=section.category:last-child li:last-child a\n+  Wait For Then Click Element  css=section.category:last-child li:last-child a\n   Wait until page contains  Action Settings\n   Input Text for sure  form.widgets.title  My favorites\n   Input Text for sure  form.widgets.url_expr  string:\\${globals_view/navigationRootUrl}/favorites\n-  Set Focus To Element  css=.pattern-modal-buttons > button\n-  Wait Until Element Is Visible  css=.pattern-modal-buttons > button\n-  Click Element  css=.pattern-modal-buttons > button\n+  Wait For Then Click Element  css=.pattern-modal-buttons > button\n \n I delete an action\n   Click Button    css=section:nth-child(3) li:first-child button[name=delete]\ndiff --git a/Products/CMFPlone/tests/robot/test_controlpanel_filter.robot b/Products/CMFPlone/tests/robot/test_controlpanel_filter.robot\nindex d056bf0a8e..2e4ce9bade 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_filter.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_filter.robot\n@@ -77,26 +77,24 @@ Input RichText\n I add \'${tag}\' to the nasty tags list and remove it from the valid tags list\n   Input Text  name=form.widgets.nasty_tags  ${tag}\n   Remove line from textarea  form.widgets.valid_tags  ${tag}\n-  Click Button  Save\n-  Wait until page contains  Changes saved\n+  I save the form\n \n I remove \'${tag}\' from the valid tags list\n   Remove line from textarea  form.widgets.valid_tags  ${tag}\n-  Click Button  Save\n-  Wait until page contains  Changes saved\n+  I save the form\n \n I add \'${tag}\' to the valid tags list\n   Input Text  name=form.widgets.valid_tags  ${tag}\n-  Click Button  Save\n-  Wait until page contains  Changes saved\n+  I save the form\n+  Page Should Contain  ${tag}\n \n I add \'${tag}\' to the custom attributes list\n   Input Text  name=form.widgets.custom_attributes  ${tag}\n-  Click Button  Save\n-  Wait until page contains  Changes saved\n+  I save the form\n+  Page Should Contain  ${tag}\n \n I save the form\n-  Click Button  Save\n+  Wait For Then Click Element  form.buttons.save\n   Wait until page contains  Changes saved\n \n \n@@ -107,8 +105,7 @@ the \'h1\' tag is filtered out when a document is saved\n   Go To  ${PLONE_URL}/doc1/edit\n   patterns are loaded\n   Input RichText  <h1>h1 heading</h1><p>lorem ipsum</p>\n-  Click Button  Save\n-  Wait until page contains  Changes saved\n+  I save the form\n   Page should not contain  heading\n \n the \'h1\' tag is stripped when a document is saved\n@@ -116,8 +113,7 @@ the \'h1\' tag is stripped when a document is saved\n   Go To  ${PLONE_URL}/doc1/edit\n   patterns are loaded\n   Input RichText  <h1>h1 heading</h1><p>lorem ipsum</p>\n-  Click Button  Save\n-  Wait until page contains  Changes saved\n+  I save the form\n   Page should contain  heading\n   Page Should Contain Element  //div[@id=\'content-core\']//h1  limit=0  message=h1 should have been stripped out\n \n@@ -126,8 +122,7 @@ the \'${tag}\' tag is preserved when a document is saved\n   Go To  ${PLONE_URL}/doc1/edit\n   patterns are loaded\n   Input RichText  <${tag}>lorem ipsum</${tag}>\n-  Click Button  Save\n-  Wait until page contains  Changes saved\n+  I save the form\n   Page Should Contain Element  //div[@id=\'content-core\']//${tag}  limit=1  message=the ${tag} tag should have been preserved\n \n the \'${attribute}\' attribute is preserved when a document is saved\n@@ -135,8 +130,7 @@ the \'${attribute}\' attribute is preserved when a document is saved\n   Go To  ${PLONE_URL}/doc1/edit\n   patterns are loaded\n   Input RichText  <span ${attribute}="foo">lorem ipsum</span>\n-  Click Button  Save\n-  Wait until page contains  Changes saved\n+  I save the form\n   Page Should Contain Element  //span[@${attribute}]  limit=1  message=the ${attribute} tag should have been preserved\n \n success message should contain information regarding caching\ndiff --git a/Products/CMFPlone/tests/robot/test_controlpanel_navigation.robot b/Products/CMFPlone/tests/robot/test_controlpanel_navigation.robot\nindex 7518cd3a03..c277aedf52 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_navigation.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_navigation.robot\n@@ -68,37 +68,27 @@ a private document \'${title}\'\n \n I disable generate tabs\n   Unselect Checkbox  form.widgets.generate_tabs:list\n-  Set Focus To Element  form.buttons.save\n-  Wait Until Element Is Visible  form.buttons.save\n-  Click Button  Save\n+  Wait For Then Click Element  form.buttons.save\n   Wait until page contains  Changes saved\n \n I disable non-folderish tabs\n   Unselect Checkbox  xpath=//input[@value=\'Document\']\n-  Set Focus To Element  form.buttons.save\n-  Wait Until Element Is Visible  form.buttons.save\n-  Click Button  Save\n+  Wait For Then Click Element  form.buttons.save\n   Wait until page contains  Changes saved\n \n I remove \'${portal_type}\' from the displayed types list\n   Unselect Checkbox  xpath=//input[@value=\'Document\']\n-  Set Focus To Element  form.buttons.save\n-  Wait Until Element Is Visible  form.buttons.save\n-  Click Button  Save\n+  Wait For Then Click Element  form.buttons.save\n   Wait until page contains  Changes saved\n \n I enable filtering by workflow states\n   Select Checkbox  name=form.widgets.filter_on_workflow:list\n-  Set Focus To Element  form.buttons.save\n-  Wait Until Element Is Visible  form.buttons.save\n-  Click Button  Save\n+  Wait For Then Click Element  form.buttons.save\n   Wait until page contains  Changes saved\n \n I choose to show \'${workflow_state}\' items\n   Select Checkbox  xpath=//input[@value=\'${workflow_state}\']\n-  Set Focus To Element  form.buttons.save\n-  Wait Until Element Is Visible  form.buttons.save\n-  Click Button  Save\n+  Wait For Then Click Element  form.buttons.save\n   Wait until page contains  Changes saved\n \n I choose to not show \'${workflow_state}\' items\ndiff --git a/Products/CMFPlone/tests/robot/test_controlpanel_search.robot b/Products/CMFPlone/tests/robot/test_controlpanel_search.robot\nindex 395c160b30..de9c3b5cfe 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_search.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_search.robot\n@@ -49,18 +49,15 @@ the search control panel\n \n I enable livesearch\n   Select Checkbox  form.widgets.enable_livesearch:list\n-  Set Focus To Element  css=#form-buttons-save\n-  Wait Until Element Is Visible  css=#form-buttons-save\n-  Click Button  Save\n+  Wait For Then Click Element  css=#form-buttons-save\n   Wait until page contains  Changes saved\n \n I exclude the \'${portal_type}\' type from search\n   # Make sure we see the checkbox, in expanded in jenkins it gets a bit under the toolbar\n-  Set Focus To Element  xpath=//input[@name=\'form.widgets.types_not_searched:list\' and @value=\'${portal_type}\']\n-  Unselect Checkbox  xpath=//input[@name=\'form.widgets.types_not_searched:list\' and @value=\'${portal_type}\']\n-  Set Focus To Element  css=#form-buttons-save\n-  Wait Until Element Is Visible  css=#form-buttons-save\n-  Click Button  Save\n+  ${element}  Set Variable  xpath=//input[@name=\'form.widgets.types_not_searched:list\' and @value=\'${portal_type}\']\n+  Wait For Element  ${element}\n+  Unselect Checkbox  ${element}\n+  Wait For Then Click Element  css=#form-buttons-save\n   Wait until page contains  Changes saved\n \n \ndiff --git a/Products/CMFPlone/tests/robot/test_controlpanel_security.robot b/Products/CMFPlone/tests/robot/test_controlpanel_security.robot\nindex 4b7066cb31..535f96945e 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_security.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_security.robot\n@@ -64,9 +64,9 @@ the security control panel\n \n a published test folder\n   Go to  ${PLONE_URL}/test-folder\n-  Wait until element is visible  css=#plone-contentmenu-workflow\n+  Wait For Element  css=#plone-contentmenu-workflow\n   Click link  xpath=//li[@id=\'plone-contentmenu-workflow\']/a\n-  Wait until element is visible  id=workflow-transition-publish\n+  Wait For Element  id=workflow-transition-publish\n   Click link  id=workflow-transition-publish\n   Wait until page contains  Item state changed\n \n@@ -142,9 +142,7 @@ A user folder should be created when a user registers and logs in to the site\n   Input Text for sure  form.widgets.email  joe@test.com\n   Input Text for sure  form.widgets.password  supersecret\n   Input Text for sure  form.widgets.password_ctl  supersecret\n-  Set Focus To Element  css=#form-buttons-register\n-  Wait Until Element Is Visible  css=#form-buttons-register\n-  Click Button  Register\n+  Wait For Then Click Element  css=#form-buttons-register\n \n   # I login to the site\n   Go to  ${PLONE_URL}/login\n@@ -176,9 +174,7 @@ UUID should be used for the user id\n   Input Text for sure  form.widgets.email  joe@test.com\n   Input Text for sure  form.widgets.password  supersecret\n   Input Text for sure  form.widgets.password_ctl  supersecret\n-  Set Focus To Element  css=#form-buttons-register\n-  Wait Until Element Is Visible  css=#form-buttons-register\n-  Click Button  Register\n+  Wait For Then Click Element  css=#form-buttons-register\n \n   # I login to the site\n   Go to  ${PLONE_URL}/login\ndiff --git a/Products/CMFPlone/tests/robot/test_controlpanel_site.robot b/Products/CMFPlone/tests/robot/test_controlpanel_site.robot\nindex 81fee76ee0..1844ac2d65 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_site.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_site.robot\n@@ -63,44 +63,33 @@ the site control panel\n \n I enable the sitemap\n   Given patterns are loaded\n-  Set Focus To Element  css=#formfield-form-widgets-enable_sitemap\n-  Wait Until Element Is Visible  css=#formfield-form-widgets-enable_sitemap\n+  Wait For Element  css=#formfield-form-widgets-enable_sitemap\n   Select Checkbox  form.widgets.enable_sitemap:list\n-  Set Focus To Element  css=#form-buttons-save\n-  Wait Until Element Is Visible  css=#form-buttons-save\n-  Click Button  Save\n+  Wait For Then Click Element  css=#form-buttons-save\n   Wait until page contains  Changes saved\n \n I set the site title to \'${site_title}\'\n   Given patterns are loaded\n   Input Text  name=form.widgets.site_title  ${site_title}\n-  Set Focus To Element  css=#form-buttons-save\n-  Wait Until Element Is Visible  css=#form-buttons-save\n-  Click Button  Save\n+  Wait For Then Click Element  css=#form-buttons-save\n   Wait until page contains  Changes saved\n \n I set a custom logo\n   Given patterns are loaded\n   Choose File  name=form.widgets.site_logo  ${PATH_TO_TEST_FILES}/pixel.png\n-  Set Focus To Element  css=#form-buttons-save\n-  Wait Until Element Is Visible  css=#form-buttons-save\n-  Click Button  Save\n+  Wait For Then Click Element  css=#form-buttons-save\n   Wait until page contains  Changes saved\n \n I enable dublin core metadata\n   Given patterns are loaded\n   Select Checkbox  form.widgets.exposeDCMetaTags:list\n-  Set Focus To Element  css=#form-buttons-save\n-  Wait Until Element Is Visible  css=#form-buttons-save\n-  Click Button  Save\n+  Wait For Then Click Element  css=#form-buttons-save\n   Wait until page contains  Changes saved\n \n I add a Javascript snippet to the webstats javascript\n   Given patterns are loaded\n   Input Text  name=form.widgets.webstats_js  <script id="webstats_snippet"></script>\n-  Set Focus To Element  css=#form-buttons-save\n-  Wait Until Element Is Visible  css=#form-buttons-save\n-  Click Button  Save\n+  Wait For Then Click Element  css=#form-buttons-save\n   Wait until page contains  Changes saved\n \n \ndiff --git a/Products/CMFPlone/tests/robot/test_controlpanel_social.robot b/Products/CMFPlone/tests/robot/test_controlpanel_social.robot\nindex 70f106d2e0..2fae936771 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_social.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_social.robot\n@@ -44,20 +44,14 @@ the social control panel\n \n I disable social\n   UnSelect Checkbox  form.widgets.share_social_data:list\n-  Sleep  2\n-  Set Focus To Element  css=#form-buttons-save\n-  Wait Until Element Is Visible  css=#form-buttons-save\n-  Click Button  Save\n+  Wait For Then Click Element  css=#form-buttons-save\n   Wait until page contains  Changes saved\n \n I provide social settings\n   Input Text  name=form.widgets.twitter_username  plonecms\n   Input Text  name=form.widgets.facebook_app_id  123456\n   Input Text  name=form.widgets.facebook_username  plonecms\n-  Sleep  2\n-  Set Focus To Element  css=#form-buttons-save\n-  Wait Until Element Is Visible  css=#form-buttons-save\n-  Click Button  Save\n+  Wait For Then Click Element  css=#form-buttons-save\n   Wait until page contains  Changes saved\n \n \ndiff --git a/Products/CMFPlone/tests/robot/test_edit_user_schema.robot b/Products/CMFPlone/tests/robot/test_edit_user_schema.robot\nindex 74a7e1fc89..4bd8a22eee 100644\n--- a/Products/CMFPlone/tests/robot/test_edit_user_schema.robot\n+++ b/Products/CMFPlone/tests/robot/test_edit_user_schema.robot\n@@ -103,9 +103,8 @@ I add a new text field to the member fields\n \n I Open the test_field Settings\n   Go to  ${PLONE_URL}/@@member-fields\n-  Wait until page contains element  css=div[data-field_id=\'test_field\']\n-  Set Focus To Element  css=div[data-field_id=\'test_field\'] a.fieldSettings\n-  Wait Until Keyword Succeeds  3  100ms  Click link  css=div[data-field_id=\'test_field\'] a.fieldSettings\n+  Wait For Element  css=div[data-field_id=\'test_field\']\n+  Wait For Then Click Element  css=div[data-field_id=\'test_field\'] a.fieldSettings\n \n I add a new required text field to the member fields\n   Go to  ${PLONE_URL}/@@member-fields\n@@ -173,11 +172,8 @@ a logged-in user will see the field on top of the user profile\n a logged-in user will see a field with min/max constraints\n   a logged-in user will see the field in the user profile\n   Input Text  form.widgets.email  test@plone.org\n-  Set Focus To Element  css=#form-widgets-test_field\n-  Wait Until Element Is visible  css=#form-widgets-test_field\n+  Wait For Element  css=#form-widgets-test_field\n   Input Text  form.widgets.test_field  1\n-  Set Focus To Element  css=.formControls button#form-buttons-save  \n-  Wait Until Element Is visible  css=.formControls button#form-buttons-save\n-  Click Button  Save\n+  Wait For Then Click Element  css=.formControls button#form-buttons-save\n   Wait until page contains  There were some errors.\n   Page should contain  Value is too short\ndiff --git a/Products/CMFPlone/tests/robot/test_linkintegrity.robot b/Products/CMFPlone/tests/robot/test_linkintegrity.robot\nindex 69eb7aa4a4..db3f9d888f 100644\n--- a/Products/CMFPlone/tests/robot/test_linkintegrity.robot\n+++ b/Products/CMFPlone/tests/robot/test_linkintegrity.robot\n@@ -77,6 +77,8 @@ a link in rich text\n   Click Button  css=button[aria-label="Insert/edit link"]\n \n   Given patterns are loaded\n+  # Somehow this does not work:\n+  # Wait For Then Click Element  css=.pat-relateditems .select2-input.select2-default\n   Wait until element is visible  css=.pat-relateditems .select2-input.select2-default\n   Click Element  css=.pat-relateditems .select2-input.select2-default\n   Wait until element is visible  css=.pat-relateditems-result.one-level-up a.pat-relateditems-result-browse\n@@ -84,81 +86,59 @@ a link in rich text\n   Wait until element is visible  xpath=(//span[contains(., \'Foo\')])\n   Click Element  xpath=(//span[contains(., \'Foo\')])\n   Wait until page contains  Foo\n-\n-  Click Button  css=.modal-footer .btn-primary\n-\n-  Set Focus To Element  css=#form-buttons-save\n-  Wait Until Element Is Visible  css=#form-buttons-save\n-  Click Button  css=#form-buttons-save\n+  Wait For Then Click Element  css=.modal-footer .btn-primary\n+  Wait For Then Click Element  css=#form-buttons-save\n \n \n should show warning when deleting page\n \n   Go To  ${PLONE_URL}/foo\n-  Wait until element is visible  css=#plone-contentmenu-actions a\n-  Click Link  css=#plone-contentmenu-actions a\n-  Wait until element is visible  css=#plone-contentmenu-actions-delete\n-  Click Link  css=#plone-contentmenu-actions-delete\n+  Wait For Then Click Element  css=#plone-contentmenu-actions a\n+  Wait For Then Click Element  css=#plone-contentmenu-actions-delete\n   Wait until page contains element  css=.breach-container .breach-item\n \n \n should show warning when deleting page from folder_contents\n   Go To  ${PLONE_URL}/folder_contents\n-  Wait until keyword succeeds  30  1  Page should contain element  css=tr[data-id="foo"] input\n-  # Might still take a bit before it is clickable.\n-  Set Focus To Element  css=tr[data-id="foo"] input\n-  Wait Until Element Is Visible  css=tr[data-id="foo"] input\n-  Click Element  css=tr[data-id="foo"] input\n+  Wait For Then Click Element  css=tr[data-id="foo"] input\n   Checkbox Should Be Selected  css=tr[data-id="foo"] input\n   Wait until keyword succeeds  30  1  Page should not contain element  css=#btn-delete.disabled\n \n-  Set Focus To Element  css=#btngroup-mainbuttons #btn-delete\n-  Wait Until Element Is Visible  css=#btngroup-mainbuttons #btn-delete\n-  Click Element  css=#btngroup-mainbuttons #btn-delete\n+  Wait For Then Click Element  css=#btngroup-mainbuttons #btn-delete\n   Wait until page contains element  css=.popover-content .btn-danger\n   Page should contain element  css=.breach-container .breach-item\n-  Set Focus To Element  css=#popover-delete .closeBtn\n-  Wait Until Element Is Visible  css=#popover-delete .closeBtn\n-  Click Element  css=#popover-delete .closeBtn\n+  Wait For Then Click Element  css=#popover-delete .closeBtn\n   Checkbox Should Be Selected  css=tr[data-id="foo"] input\n \n \n should not show warning when deleting page from folder_contents\n   Go To  ${PLONE_URL}/folder_contents\n   Wait until page contains element  css=tr[data-id="foo"] input\n-  # Might still take a bit before it is clickable.\n-  Sleep  1\n-  Click Element  css=tr[data-id="foo"] input\n+  Wait For Then Click Element  css=tr[data-id="foo"] input\n   Checkbox Should Be Selected  css=tr[data-id="foo"] input\n   Wait until keyword succeeds  30  1  Page should not contain element  css=#btn-delete.disabled\n-  Click Element  css=#btngroup-mainbuttons #btn-delete\n+  Wait For Then Click Element  css=#btngroup-mainbuttons #btn-delete\n   Wait until page contains element  css=.popover-content .btn-danger\n   Page should not contain element  css=.breach-container .breach-item\n-  Click Element  css=#popover-delete .applyBtn\n+  Wait For Then Click Element  css=#popover-delete .applyBtn\n   Wait until page contains  Successfully delete items\n   Wait until keyword succeeds  30  1  Page should not contain Element  css=tr[data-id="foo"] input\n \n \n should not show warning when deleting page\n   Go To  ${PLONE_URL}/foo\n-  Wait until element is visible  css=#plone-contentmenu-actions a\n-  Click Link  css=#plone-contentmenu-actions a\n-  Wait until element is visible  css=#plone-contentmenu-actions-delete\n-  Click Link  css=#plone-contentmenu-actions-delete\n+  Wait For Then Click Element  css=#plone-contentmenu-actions a\n+  Wait For Then Click Element  css=#plone-contentmenu-actions-delete\n   Page should not contain element  css=.breach-container .breach-item\n \n \n remove link to page\n   Go To  ${PLONE_URL}/bar\n-  Wait until element is visible  css=#contentview-edit a\n-  Click Link  css=#contentview-edit a\n-  Wait until element is visible  css=.tox-edit-area iframe\n+  Wait For Then Click Element  css=#contentview-edit a\n+  Wait For Element  css=.tox-edit-area iframe\n   Select Frame  css=.tox-edit-area iframe\n   Input text  css=.mce-content-body  foo\n   Execute Javascript    function selectElementContents(el) {var range = document.createRange(); range.selectNodeContents(el); var sel = window.getSelection(); sel.removeAllRanges(); sel.addRange(range);} var el = document.getElementById("tinymce"); selectElementContents(el);\n   UnSelect Frame\n   Click Button  css=button[aria-label="Remove link"]\n-\n-  Set Focus To Element  css=#form-buttons-save\n-  Wait Until Element Is Visible  css=#form-buttons-save\n-  Click Button  css=#form-buttons-save\n+  Wait For Then Click Element  css=#form-buttons-save\ndiff --git a/Products/CMFPlone/tests/robot/test_livesearch.robot b/Products/CMFPlone/tests/robot/test_livesearch.robot\nindex 0cbbb8280d..8bed725311 100644\n--- a/Products/CMFPlone/tests/robot/test_livesearch.robot\n+++ b/Products/CMFPlone/tests/robot/test_livesearch.robot\n@@ -55,13 +55,13 @@ a news item\n I search for\n     [Arguments]  ${searchtext}\n     Input text  css=input#searchGadget  ${searchtext}\n-    Set Focus To Element  css=input#searchGadget\n+    Wait For Element  css=input#searchGadget\n \n I search the currentfolder only for\n     [Arguments]  ${searchtext}\n     Select checkbox  id=searchbox_currentfolder_only\n     Input text  css=input#searchGadget  ${searchtext}\n-    Set Focus To Element  css=input#searchGadget\n+    Wait For Element  css=input#searchGadget\n \n the livesearch results should contain\n     [Arguments]  ${text}\ndiff --git a/Products/CMFPlone/tests/robot/test_tinymce.robot b/Products/CMFPlone/tests/robot/test_tinymce.robot\nindex 8f56da5823..75eb8d00c7 100644\n--- a/Products/CMFPlone/tests/robot/test_tinymce.robot\n+++ b/Products/CMFPlone/tests/robot/test_tinymce.robot\n@@ -28,9 +28,7 @@ Scenario: A page is opened to edit in TinyMCE\n       and insert link\n       and insert image\n \n-    Set Focus To Element  css=#form-buttons-save\n-    Wait Until Element Is Visible  css=#form-buttons-save\n-    Click Button  Save\n+    Wait For Then Click Element  css=#form-buttons-save\n     Wait until page contains  Changes saved\n \n \n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-06-08T07:30:00+02:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/ca937830a0cdd76e8ac3d10526cfb63b83fbda0f

fix deprecated keyword "Press Key"

Files changed:
M Products/CMFPlone/tests/robot/test_edit_user_schema.robot

b'diff --git a/Products/CMFPlone/tests/robot/test_edit_user_schema.robot b/Products/CMFPlone/tests/robot/test_edit_user_schema.robot\nindex 4bd8a22eee..439bb5b074 100644\n--- a/Products/CMFPlone/tests/robot/test_edit_user_schema.robot\n+++ b/Products/CMFPlone/tests/robot/test_edit_user_schema.robot\n@@ -96,7 +96,7 @@ I add a new text field to the member fields\n   Click Link  Add new field\xe2\x80\xa6\n   Wait Until Element Is visible  css=#add-field-form #form-widgets-title\n   Input Text  css=#add-field-form #form-widgets-title  Test Field\n-  Press Key  css=#add-field-form #form-widgets-title  \\\\09\n+  Press Keys  css=#add-field-form #form-widgets-title  TAB\n   Select From List By Label  css=#form-widgets-factory  Text line (String)\n   Click button  css=.pattern-modal-buttons button#form-buttons-add\n   Wait until page contains  Field added successfully.\n@@ -112,7 +112,7 @@ I add a new required text field to the member fields\n   Click Link  Add new field\xe2\x80\xa6\n   Wait Until Element Is visible  css=#add-field-form #form-widgets-title\n   Input Text  css=#add-field-form #form-widgets-title  Test Field\n-  Press Key  css=#add-field-form #form-widgets-title  \\\\09\n+  Press Keys  css=#add-field-form #form-widgets-title  TAB\n   Select From List By Label  css=#form-widgets-factory  Text line (String)\n   Select Checkbox  form.widgets.required:list\n   Click button  css=.pattern-modal-buttons button#form-buttons-add\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-06-08T12:00:12+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/3846b81082e0edb08d055556f866ed3cccbbd0e9

Use 'Wait For Then Click Invisible Element'.

I had it called 'Hidden' at first, but 'Invisible' feels more correct.

Files changed:
M Products/CMFPlone/tests/robot/test_querystring.robot

b'diff --git a/Products/CMFPlone/tests/robot/test_querystring.robot b/Products/CMFPlone/tests/robot/test_querystring.robot\nindex d9106af259..2ab1944c6a 100644\n--- a/Products/CMFPlone/tests/robot/test_querystring.robot\n+++ b/Products/CMFPlone/tests/robot/test_querystring.robot\n@@ -291,7 +291,7 @@ I expect to be in Advanced mode\n     Element Should Contain  jquery=${selector}   Relative Path\n     Element Should Contain  jquery=${selector}   Simple Mode\n     ${selector}  Set Variable  div#select2-drop-mask\n-    Wait For Then Click Hidden Element  css=${selector}\n+    Wait For Then Click Invisible Element  css=${selector}\n     Wait Until Element Is Not Visible  css=${selector}\n \n I expect to be in Simple mode\n@@ -302,7 +302,7 @@ I expect to be in Simple mode\n     Element Should Contain  jquery=${selector}   Current (./)\n     Element Should Contain  jquery=${selector}   Advanced Mode\n     ${selector}  Set Variable  div#select2-drop-mask\n-    Wait For Then Click Hidden Element  css=${selector}\n+    Wait For Then Click Invisible Element  css=${selector}\n     Wait Until Element Is Not Visible  css=${selector}\n \n open the select box titled ${NAME}\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-06-08T12:21:38+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/c39a7a9425630e95ad86f883c82c2b60236f4105

Merge pull request #3554 from plone/robottest-fix2

Moved brand new wait-for-element keywords to plone.app.robotframework.

Files changed:
M Products/CMFPlone/tests/robot/keywords.robot
M Products/CMFPlone/tests/robot/test_controlpanel_actions.robot
M Products/CMFPlone/tests/robot/test_controlpanel_filter.robot
M Products/CMFPlone/tests/robot/test_controlpanel_navigation.robot
M Products/CMFPlone/tests/robot/test_controlpanel_search.robot
M Products/CMFPlone/tests/robot/test_controlpanel_security.robot
M Products/CMFPlone/tests/robot/test_controlpanel_site.robot
M Products/CMFPlone/tests/robot/test_controlpanel_social.robot
M Products/CMFPlone/tests/robot/test_edit_user_schema.robot
M Products/CMFPlone/tests/robot/test_linkintegrity.robot
M Products/CMFPlone/tests/robot/test_livesearch.robot
M Products/CMFPlone/tests/robot/test_querystring.robot
M Products/CMFPlone/tests/robot/test_tinymce.robot

b'diff --git a/Products/CMFPlone/tests/robot/keywords.robot b/Products/CMFPlone/tests/robot/keywords.robot\nindex 89b4a4ee21..75765ffc38 100644\n--- a/Products/CMFPlone/tests/robot/keywords.robot\n+++ b/Products/CMFPlone/tests/robot/keywords.robot\n@@ -33,23 +33,3 @@ patterns are loaded\n a folder with a document \'${title}\'\n   ${folder_uid}=  Create content  type=Folder  title=folder\n   Create content  type=Document  container=${folder_uid}  title=${title}\n-\n-Wait For Element\n-  [Arguments]  ${element}\n-  [Documentation]  Can contain css=, jquery=, or any other element selector.\n-  Wait Until Page Contains Element  ${element}\n-  Set Focus To Element  ${element}\n-  Wait Until Element Is Visible  ${element}\n-\n-Wait For Then Click Element\n-  [Arguments]  ${element}\n-  [Documentation]  Can contain css=, jquery=, or any other element selector.\n-  Wait For Element  ${element}\n-  Click Element  ${element}\n-\n-Wait For Then Click Hidden Element\n-  [Arguments]  ${element}\n-  [Documentation]  Meant for invisible elements.  Can contain css=, jquery=, or any other element selector.\n-  Wait Until Page Contains Element  ${element}\n-  Set Focus To Element  ${element}\n-  Click Element  ${element}\ndiff --git a/Products/CMFPlone/tests/robot/test_controlpanel_actions.robot b/Products/CMFPlone/tests/robot/test_controlpanel_actions.robot\nindex 3d7bfd015f..8bb0a2513c 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_actions.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_actions.robot\n@@ -71,37 +71,26 @@ I modify an action title\n   Click Link    css=section:nth-child(3) li:first-child a\n   Wait until page contains  Action Settings\n   Input Text for sure  form.widgets.title  A new site map\n-  Set Focus To Element  css=.pattern-modal-buttons > button\n-  Wait Until Element Is Visible  css=.pattern-modal-buttons > button\n-  Click Element  css=.pattern-modal-buttons > button\n+  Wait For Then Click Element  css=.pattern-modal-buttons > button\n \n I change the actions order\n   Click Link    css=section:nth-child(3) li:first-child a\n   Wait until page contains  Action Settings\n   Input Text for sure  form.widgets.position  3\n-  Set Focus To Element  css=.pattern-modal-buttons > button\n-  Wait Until Element Is Visible  css=.pattern-modal-buttons > button\n-  Click Element  css=.pattern-modal-buttons > button\n+  Wait For Then Click Element  css=.pattern-modal-buttons > button\n \n I add a new action\n   Click Link  Add new action\n   Wait until page contains  New action\n   Select From List By Label   form.widgets.category:list   User actions\n   Input Text for sure  form.widgets.id  favorites\n-  Set Focus To Element  css=.pattern-modal-buttons > button\n-  Wait Until Element Is Visible  css=.pattern-modal-buttons > button\n-  Click Element  css=.pattern-modal-buttons > button\n+  Wait For Then Click Element  css=.pattern-modal-buttons > button\n   Wait until page contains  favorites\n-  Set Focus To Element  css=section.category:last-child li:last-child a\n-  Wait Until Element Is Visible  css=section.category:last-child li:last-child a\n-  Sleep  1\n-  Click Link  css=section.category:last-child li:last-child a\n+  Wait For Then Click Element  css=section.category:last-child li:last-child a\n   Wait until page contains  Action Settings\n   Input Text for sure  form.widgets.title  My favorites\n   Input Text for sure  form.widgets.url_expr  string:\\${globals_view/navigationRootUrl}/favorites\n-  Set Focus To Element  css=.pattern-modal-buttons > button\n-  Wait Until Element Is Visible  css=.pattern-modal-buttons > button\n-  Click Element  css=.pattern-modal-buttons > button\n+  Wait For Then Click Element  css=.pattern-modal-buttons > button\n \n I delete an action\n   Click Button    css=section:nth-child(3) li:first-child button[name=delete]\ndiff --git a/Products/CMFPlone/tests/robot/test_controlpanel_filter.robot b/Products/CMFPlone/tests/robot/test_controlpanel_filter.robot\nindex d056bf0a8e..2e4ce9bade 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_filter.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_filter.robot\n@@ -77,26 +77,24 @@ Input RichText\n I add \'${tag}\' to the nasty tags list and remove it from the valid tags list\n   Input Text  name=form.widgets.nasty_tags  ${tag}\n   Remove line from textarea  form.widgets.valid_tags  ${tag}\n-  Click Button  Save\n-  Wait until page contains  Changes saved\n+  I save the form\n \n I remove \'${tag}\' from the valid tags list\n   Remove line from textarea  form.widgets.valid_tags  ${tag}\n-  Click Button  Save\n-  Wait until page contains  Changes saved\n+  I save the form\n \n I add \'${tag}\' to the valid tags list\n   Input Text  name=form.widgets.valid_tags  ${tag}\n-  Click Button  Save\n-  Wait until page contains  Changes saved\n+  I save the form\n+  Page Should Contain  ${tag}\n \n I add \'${tag}\' to the custom attributes list\n   Input Text  name=form.widgets.custom_attributes  ${tag}\n-  Click Button  Save\n-  Wait until page contains  Changes saved\n+  I save the form\n+  Page Should Contain  ${tag}\n \n I save the form\n-  Click Button  Save\n+  Wait For Then Click Element  form.buttons.save\n   Wait until page contains  Changes saved\n \n \n@@ -107,8 +105,7 @@ the \'h1\' tag is filtered out when a document is saved\n   Go To  ${PLONE_URL}/doc1/edit\n   patterns are loaded\n   Input RichText  <h1>h1 heading</h1><p>lorem ipsum</p>\n-  Click Button  Save\n-  Wait until page contains  Changes saved\n+  I save the form\n   Page should not contain  heading\n \n the \'h1\' tag is stripped when a document is saved\n@@ -116,8 +113,7 @@ the \'h1\' tag is stripped when a document is saved\n   Go To  ${PLONE_URL}/doc1/edit\n   patterns are loaded\n   Input RichText  <h1>h1 heading</h1><p>lorem ipsum</p>\n-  Click Button  Save\n-  Wait until page contains  Changes saved\n+  I save the form\n   Page should contain  heading\n   Page Should Contain Element  //div[@id=\'content-core\']//h1  limit=0  message=h1 should have been stripped out\n \n@@ -126,8 +122,7 @@ the \'${tag}\' tag is preserved when a document is saved\n   Go To  ${PLONE_URL}/doc1/edit\n   patterns are loaded\n   Input RichText  <${tag}>lorem ipsum</${tag}>\n-  Click Button  Save\n-  Wait until page contains  Changes saved\n+  I save the form\n   Page Should Contain Element  //div[@id=\'content-core\']//${tag}  limit=1  message=the ${tag} tag should have been preserved\n \n the \'${attribute}\' attribute is preserved when a document is saved\n@@ -135,8 +130,7 @@ the \'${attribute}\' attribute is preserved when a document is saved\n   Go To  ${PLONE_URL}/doc1/edit\n   patterns are loaded\n   Input RichText  <span ${attribute}="foo">lorem ipsum</span>\n-  Click Button  Save\n-  Wait until page contains  Changes saved\n+  I save the form\n   Page Should Contain Element  //span[@${attribute}]  limit=1  message=the ${attribute} tag should have been preserved\n \n success message should contain information regarding caching\ndiff --git a/Products/CMFPlone/tests/robot/test_controlpanel_navigation.robot b/Products/CMFPlone/tests/robot/test_controlpanel_navigation.robot\nindex 7518cd3a03..c277aedf52 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_navigation.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_navigation.robot\n@@ -68,37 +68,27 @@ a private document \'${title}\'\n \n I disable generate tabs\n   Unselect Checkbox  form.widgets.generate_tabs:list\n-  Set Focus To Element  form.buttons.save\n-  Wait Until Element Is Visible  form.buttons.save\n-  Click Button  Save\n+  Wait For Then Click Element  form.buttons.save\n   Wait until page contains  Changes saved\n \n I disable non-folderish tabs\n   Unselect Checkbox  xpath=//input[@value=\'Document\']\n-  Set Focus To Element  form.buttons.save\n-  Wait Until Element Is Visible  form.buttons.save\n-  Click Button  Save\n+  Wait For Then Click Element  form.buttons.save\n   Wait until page contains  Changes saved\n \n I remove \'${portal_type}\' from the displayed types list\n   Unselect Checkbox  xpath=//input[@value=\'Document\']\n-  Set Focus To Element  form.buttons.save\n-  Wait Until Element Is Visible  form.buttons.save\n-  Click Button  Save\n+  Wait For Then Click Element  form.buttons.save\n   Wait until page contains  Changes saved\n \n I enable filtering by workflow states\n   Select Checkbox  name=form.widgets.filter_on_workflow:list\n-  Set Focus To Element  form.buttons.save\n-  Wait Until Element Is Visible  form.buttons.save\n-  Click Button  Save\n+  Wait For Then Click Element  form.buttons.save\n   Wait until page contains  Changes saved\n \n I choose to show \'${workflow_state}\' items\n   Select Checkbox  xpath=//input[@value=\'${workflow_state}\']\n-  Set Focus To Element  form.buttons.save\n-  Wait Until Element Is Visible  form.buttons.save\n-  Click Button  Save\n+  Wait For Then Click Element  form.buttons.save\n   Wait until page contains  Changes saved\n \n I choose to not show \'${workflow_state}\' items\ndiff --git a/Products/CMFPlone/tests/robot/test_controlpanel_search.robot b/Products/CMFPlone/tests/robot/test_controlpanel_search.robot\nindex 395c160b30..de9c3b5cfe 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_search.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_search.robot\n@@ -49,18 +49,15 @@ the search control panel\n \n I enable livesearch\n   Select Checkbox  form.widgets.enable_livesearch:list\n-  Set Focus To Element  css=#form-buttons-save\n-  Wait Until Element Is Visible  css=#form-buttons-save\n-  Click Button  Save\n+  Wait For Then Click Element  css=#form-buttons-save\n   Wait until page contains  Changes saved\n \n I exclude the \'${portal_type}\' type from search\n   # Make sure we see the checkbox, in expanded in jenkins it gets a bit under the toolbar\n-  Set Focus To Element  xpath=//input[@name=\'form.widgets.types_not_searched:list\' and @value=\'${portal_type}\']\n-  Unselect Checkbox  xpath=//input[@name=\'form.widgets.types_not_searched:list\' and @value=\'${portal_type}\']\n-  Set Focus To Element  css=#form-buttons-save\n-  Wait Until Element Is Visible  css=#form-buttons-save\n-  Click Button  Save\n+  ${element}  Set Variable  xpath=//input[@name=\'form.widgets.types_not_searched:list\' and @value=\'${portal_type}\']\n+  Wait For Element  ${element}\n+  Unselect Checkbox  ${element}\n+  Wait For Then Click Element  css=#form-buttons-save\n   Wait until page contains  Changes saved\n \n \ndiff --git a/Products/CMFPlone/tests/robot/test_controlpanel_security.robot b/Products/CMFPlone/tests/robot/test_controlpanel_security.robot\nindex 4b7066cb31..535f96945e 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_security.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_security.robot\n@@ -64,9 +64,9 @@ the security control panel\n \n a published test folder\n   Go to  ${PLONE_URL}/test-folder\n-  Wait until element is visible  css=#plone-contentmenu-workflow\n+  Wait For Element  css=#plone-contentmenu-workflow\n   Click link  xpath=//li[@id=\'plone-contentmenu-workflow\']/a\n-  Wait until element is visible  id=workflow-transition-publish\n+  Wait For Element  id=workflow-transition-publish\n   Click link  id=workflow-transition-publish\n   Wait until page contains  Item state changed\n \n@@ -142,9 +142,7 @@ A user folder should be created when a user registers and logs in to the site\n   Input Text for sure  form.widgets.email  joe@test.com\n   Input Text for sure  form.widgets.password  supersecret\n   Input Text for sure  form.widgets.password_ctl  supersecret\n-  Set Focus To Element  css=#form-buttons-register\n-  Wait Until Element Is Visible  css=#form-buttons-register\n-  Click Button  Register\n+  Wait For Then Click Element  css=#form-buttons-register\n \n   # I login to the site\n   Go to  ${PLONE_URL}/login\n@@ -176,9 +174,7 @@ UUID should be used for the user id\n   Input Text for sure  form.widgets.email  joe@test.com\n   Input Text for sure  form.widgets.password  supersecret\n   Input Text for sure  form.widgets.password_ctl  supersecret\n-  Set Focus To Element  css=#form-buttons-register\n-  Wait Until Element Is Visible  css=#form-buttons-register\n-  Click Button  Register\n+  Wait For Then Click Element  css=#form-buttons-register\n \n   # I login to the site\n   Go to  ${PLONE_URL}/login\ndiff --git a/Products/CMFPlone/tests/robot/test_controlpanel_site.robot b/Products/CMFPlone/tests/robot/test_controlpanel_site.robot\nindex 81fee76ee0..1844ac2d65 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_site.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_site.robot\n@@ -63,44 +63,33 @@ the site control panel\n \n I enable the sitemap\n   Given patterns are loaded\n-  Set Focus To Element  css=#formfield-form-widgets-enable_sitemap\n-  Wait Until Element Is Visible  css=#formfield-form-widgets-enable_sitemap\n+  Wait For Element  css=#formfield-form-widgets-enable_sitemap\n   Select Checkbox  form.widgets.enable_sitemap:list\n-  Set Focus To Element  css=#form-buttons-save\n-  Wait Until Element Is Visible  css=#form-buttons-save\n-  Click Button  Save\n+  Wait For Then Click Element  css=#form-buttons-save\n   Wait until page contains  Changes saved\n \n I set the site title to \'${site_title}\'\n   Given patterns are loaded\n   Input Text  name=form.widgets.site_title  ${site_title}\n-  Set Focus To Element  css=#form-buttons-save\n-  Wait Until Element Is Visible  css=#form-buttons-save\n-  Click Button  Save\n+  Wait For Then Click Element  css=#form-buttons-save\n   Wait until page contains  Changes saved\n \n I set a custom logo\n   Given patterns are loaded\n   Choose File  name=form.widgets.site_logo  ${PATH_TO_TEST_FILES}/pixel.png\n-  Set Focus To Element  css=#form-buttons-save\n-  Wait Until Element Is Visible  css=#form-buttons-save\n-  Click Button  Save\n+  Wait For Then Click Element  css=#form-buttons-save\n   Wait until page contains  Changes saved\n \n I enable dublin core metadata\n   Given patterns are loaded\n   Select Checkbox  form.widgets.exposeDCMetaTags:list\n-  Set Focus To Element  css=#form-buttons-save\n-  Wait Until Element Is Visible  css=#form-buttons-save\n-  Click Button  Save\n+  Wait For Then Click Element  css=#form-buttons-save\n   Wait until page contains  Changes saved\n \n I add a Javascript snippet to the webstats javascript\n   Given patterns are loaded\n   Input Text  name=form.widgets.webstats_js  <script id="webstats_snippet"></script>\n-  Set Focus To Element  css=#form-buttons-save\n-  Wait Until Element Is Visible  css=#form-buttons-save\n-  Click Button  Save\n+  Wait For Then Click Element  css=#form-buttons-save\n   Wait until page contains  Changes saved\n \n \ndiff --git a/Products/CMFPlone/tests/robot/test_controlpanel_social.robot b/Products/CMFPlone/tests/robot/test_controlpanel_social.robot\nindex 70f106d2e0..2fae936771 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_social.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_social.robot\n@@ -44,20 +44,14 @@ the social control panel\n \n I disable social\n   UnSelect Checkbox  form.widgets.share_social_data:list\n-  Sleep  2\n-  Set Focus To Element  css=#form-buttons-save\n-  Wait Until Element Is Visible  css=#form-buttons-save\n-  Click Button  Save\n+  Wait For Then Click Element  css=#form-buttons-save\n   Wait until page contains  Changes saved\n \n I provide social settings\n   Input Text  name=form.widgets.twitter_username  plonecms\n   Input Text  name=form.widgets.facebook_app_id  123456\n   Input Text  name=form.widgets.facebook_username  plonecms\n-  Sleep  2\n-  Set Focus To Element  css=#form-buttons-save\n-  Wait Until Element Is Visible  css=#form-buttons-save\n-  Click Button  Save\n+  Wait For Then Click Element  css=#form-buttons-save\n   Wait until page contains  Changes saved\n \n \ndiff --git a/Products/CMFPlone/tests/robot/test_edit_user_schema.robot b/Products/CMFPlone/tests/robot/test_edit_user_schema.robot\nindex 74a7e1fc89..439bb5b074 100644\n--- a/Products/CMFPlone/tests/robot/test_edit_user_schema.robot\n+++ b/Products/CMFPlone/tests/robot/test_edit_user_schema.robot\n@@ -96,16 +96,15 @@ I add a new text field to the member fields\n   Click Link  Add new field\xe2\x80\xa6\n   Wait Until Element Is visible  css=#add-field-form #form-widgets-title\n   Input Text  css=#add-field-form #form-widgets-title  Test Field\n-  Press Key  css=#add-field-form #form-widgets-title  \\\\09\n+  Press Keys  css=#add-field-form #form-widgets-title  TAB\n   Select From List By Label  css=#form-widgets-factory  Text line (String)\n   Click button  css=.pattern-modal-buttons button#form-buttons-add\n   Wait until page contains  Field added successfully.\n \n I Open the test_field Settings\n   Go to  ${PLONE_URL}/@@member-fields\n-  Wait until page contains element  css=div[data-field_id=\'test_field\']\n-  Set Focus To Element  css=div[data-field_id=\'test_field\'] a.fieldSettings\n-  Wait Until Keyword Succeeds  3  100ms  Click link  css=div[data-field_id=\'test_field\'] a.fieldSettings\n+  Wait For Element  css=div[data-field_id=\'test_field\']\n+  Wait For Then Click Element  css=div[data-field_id=\'test_field\'] a.fieldSettings\n \n I add a new required text field to the member fields\n   Go to  ${PLONE_URL}/@@member-fields\n@@ -113,7 +112,7 @@ I add a new required text field to the member fields\n   Click Link  Add new field\xe2\x80\xa6\n   Wait Until Element Is visible  css=#add-field-form #form-widgets-title\n   Input Text  css=#add-field-form #form-widgets-title  Test Field\n-  Press Key  css=#add-field-form #form-widgets-title  \\\\09\n+  Press Keys  css=#add-field-form #form-widgets-title  TAB\n   Select From List By Label  css=#form-widgets-factory  Text line (String)\n   Select Checkbox  form.widgets.required:list\n   Click button  css=.pattern-modal-buttons button#form-buttons-add\n@@ -173,11 +172,8 @@ a logged-in user will see the field on top of the user profile\n a logged-in user will see a field with min/max constraints\n   a logged-in user will see the field in the user profile\n   Input Text  form.widgets.email  test@plone.org\n-  Set Focus To Element  css=#form-widgets-test_field\n-  Wait Until Element Is visible  css=#form-widgets-test_field\n+  Wait For Element  css=#form-widgets-test_field\n   Input Text  form.widgets.test_field  1\n-  Set Focus To Element  css=.formControls button#form-buttons-save  \n-  Wait Until Element Is visible  css=.formControls button#form-buttons-save\n-  Click Button  Save\n+  Wait For Then Click Element  css=.formControls button#form-buttons-save\n   Wait until page contains  There were some errors.\n   Page should contain  Value is too short\ndiff --git a/Products/CMFPlone/tests/robot/test_linkintegrity.robot b/Products/CMFPlone/tests/robot/test_linkintegrity.robot\nindex 69eb7aa4a4..db3f9d888f 100644\n--- a/Products/CMFPlone/tests/robot/test_linkintegrity.robot\n+++ b/Products/CMFPlone/tests/robot/test_linkintegrity.robot\n@@ -77,6 +77,8 @@ a link in rich text\n   Click Button  css=button[aria-label="Insert/edit link"]\n \n   Given patterns are loaded\n+  # Somehow this does not work:\n+  # Wait For Then Click Element  css=.pat-relateditems .select2-input.select2-default\n   Wait until element is visible  css=.pat-relateditems .select2-input.select2-default\n   Click Element  css=.pat-relateditems .select2-input.select2-default\n   Wait until element is visible  css=.pat-relateditems-result.one-level-up a.pat-relateditems-result-browse\n@@ -84,81 +86,59 @@ a link in rich text\n   Wait until element is visible  xpath=(//span[contains(., \'Foo\')])\n   Click Element  xpath=(//span[contains(., \'Foo\')])\n   Wait until page contains  Foo\n-\n-  Click Button  css=.modal-footer .btn-primary\n-\n-  Set Focus To Element  css=#form-buttons-save\n-  Wait Until Element Is Visible  css=#form-buttons-save\n-  Click Button  css=#form-buttons-save\n+  Wait For Then Click Element  css=.modal-footer .btn-primary\n+  Wait For Then Click Element  css=#form-buttons-save\n \n \n should show warning when deleting page\n \n   Go To  ${PLONE_URL}/foo\n-  Wait until element is visible  css=#plone-contentmenu-actions a\n-  Click Link  css=#plone-contentmenu-actions a\n-  Wait until element is visible  css=#plone-contentmenu-actions-delete\n-  Click Link  css=#plone-contentmenu-actions-delete\n+  Wait For Then Click Element  css=#plone-contentmenu-actions a\n+  Wait For Then Click Element  css=#plone-contentmenu-actions-delete\n   Wait until page contains element  css=.breach-container .breach-item\n \n \n should show warning when deleting page from folder_contents\n   Go To  ${PLONE_URL}/folder_contents\n-  Wait until keyword succeeds  30  1  Page should contain element  css=tr[data-id="foo"] input\n-  # Might still take a bit before it is clickable.\n-  Set Focus To Element  css=tr[data-id="foo"] input\n-  Wait Until Element Is Visible  css=tr[data-id="foo"] input\n-  Click Element  css=tr[data-id="foo"] input\n+  Wait For Then Click Element  css=tr[data-id="foo"] input\n   Checkbox Should Be Selected  css=tr[data-id="foo"] input\n   Wait until keyword succeeds  30  1  Page should not contain element  css=#btn-delete.disabled\n \n-  Set Focus To Element  css=#btngroup-mainbuttons #btn-delete\n-  Wait Until Element Is Visible  css=#btngroup-mainbuttons #btn-delete\n-  Click Element  css=#btngroup-mainbuttons #btn-delete\n+  Wait For Then Click Element  css=#btngroup-mainbuttons #btn-delete\n   Wait until page contains element  css=.popover-content .btn-danger\n   Page should contain element  css=.breach-container .breach-item\n-  Set Focus To Element  css=#popover-delete .closeBtn\n-  Wait Until Element Is Visible  css=#popover-delete .closeBtn\n-  Click Element  css=#popover-delete .closeBtn\n+  Wait For Then Click Element  css=#popover-delete .closeBtn\n   Checkbox Should Be Selected  css=tr[data-id="foo"] input\n \n \n should not show warning when deleting page from folder_contents\n   Go To  ${PLONE_URL}/folder_contents\n   Wait until page contains element  css=tr[data-id="foo"] input\n-  # Might still take a bit before it is clickable.\n-  Sleep  1\n-  Click Element  css=tr[data-id="foo"] input\n+  Wait For Then Click Element  css=tr[data-id="foo"] input\n   Checkbox Should Be Selected  css=tr[data-id="foo"] input\n   Wait until keyword succeeds  30  1  Page should not contain element  css=#btn-delete.disabled\n-  Click Element  css=#btngroup-mainbuttons #btn-delete\n+  Wait For Then Click Element  css=#btngroup-mainbuttons #btn-delete\n   Wait until page contains element  css=.popover-content .btn-danger\n   Page should not contain element  css=.breach-container .breach-item\n-  Click Element  css=#popover-delete .applyBtn\n+  Wait For Then Click Element  css=#popover-delete .applyBtn\n   Wait until page contains  Successfully delete items\n   Wait until keyword succeeds  30  1  Page should not contain Element  css=tr[data-id="foo"] input\n \n \n should not show warning when deleting page\n   Go To  ${PLONE_URL}/foo\n-  Wait until element is visible  css=#plone-contentmenu-actions a\n-  Click Link  css=#plone-contentmenu-actions a\n-  Wait until element is visible  css=#plone-contentmenu-actions-delete\n-  Click Link  css=#plone-contentmenu-actions-delete\n+  Wait For Then Click Element  css=#plone-contentmenu-actions a\n+  Wait For Then Click Element  css=#plone-contentmenu-actions-delete\n   Page should not contain element  css=.breach-container .breach-item\n \n \n remove link to page\n   Go To  ${PLONE_URL}/bar\n-  Wait until element is visible  css=#contentview-edit a\n-  Click Link  css=#contentview-edit a\n-  Wait until element is visible  css=.tox-edit-area iframe\n+  Wait For Then Click Element  css=#contentview-edit a\n+  Wait For Element  css=.tox-edit-area iframe\n   Select Frame  css=.tox-edit-area iframe\n   Input text  css=.mce-content-body  foo\n   Execute Javascript    function selectElementContents(el) {var range = document.createRange(); range.selectNodeContents(el); var sel = window.getSelection(); sel.removeAllRanges(); sel.addRange(range);} var el = document.getElementById("tinymce"); selectElementContents(el);\n   UnSelect Frame\n   Click Button  css=button[aria-label="Remove link"]\n-\n-  Set Focus To Element  css=#form-buttons-save\n-  Wait Until Element Is Visible  css=#form-buttons-save\n-  Click Button  css=#form-buttons-save\n+  Wait For Then Click Element  css=#form-buttons-save\ndiff --git a/Products/CMFPlone/tests/robot/test_livesearch.robot b/Products/CMFPlone/tests/robot/test_livesearch.robot\nindex 0cbbb8280d..8bed725311 100644\n--- a/Products/CMFPlone/tests/robot/test_livesearch.robot\n+++ b/Products/CMFPlone/tests/robot/test_livesearch.robot\n@@ -55,13 +55,13 @@ a news item\n I search for\n     [Arguments]  ${searchtext}\n     Input text  css=input#searchGadget  ${searchtext}\n-    Set Focus To Element  css=input#searchGadget\n+    Wait For Element  css=input#searchGadget\n \n I search the currentfolder only for\n     [Arguments]  ${searchtext}\n     Select checkbox  id=searchbox_currentfolder_only\n     Input text  css=input#searchGadget  ${searchtext}\n-    Set Focus To Element  css=input#searchGadget\n+    Wait For Element  css=input#searchGadget\n \n the livesearch results should contain\n     [Arguments]  ${text}\ndiff --git a/Products/CMFPlone/tests/robot/test_querystring.robot b/Products/CMFPlone/tests/robot/test_querystring.robot\nindex d9106af259..2ab1944c6a 100644\n--- a/Products/CMFPlone/tests/robot/test_querystring.robot\n+++ b/Products/CMFPlone/tests/robot/test_querystring.robot\n@@ -291,7 +291,7 @@ I expect to be in Advanced mode\n     Element Should Contain  jquery=${selector}   Relative Path\n     Element Should Contain  jquery=${selector}   Simple Mode\n     ${selector}  Set Variable  div#select2-drop-mask\n-    Wait For Then Click Hidden Element  css=${selector}\n+    Wait For Then Click Invisible Element  css=${selector}\n     Wait Until Element Is Not Visible  css=${selector}\n \n I expect to be in Simple mode\n@@ -302,7 +302,7 @@ I expect to be in Simple mode\n     Element Should Contain  jquery=${selector}   Current (./)\n     Element Should Contain  jquery=${selector}   Advanced Mode\n     ${selector}  Set Variable  div#select2-drop-mask\n-    Wait For Then Click Hidden Element  css=${selector}\n+    Wait For Then Click Invisible Element  css=${selector}\n     Wait Until Element Is Not Visible  css=${selector}\n \n open the select box titled ${NAME}\ndiff --git a/Products/CMFPlone/tests/robot/test_tinymce.robot b/Products/CMFPlone/tests/robot/test_tinymce.robot\nindex 8f56da5823..75eb8d00c7 100644\n--- a/Products/CMFPlone/tests/robot/test_tinymce.robot\n+++ b/Products/CMFPlone/tests/robot/test_tinymce.robot\n@@ -28,9 +28,7 @@ Scenario: A page is opened to edit in TinyMCE\n       and insert link\n       and insert image\n \n-    Set Focus To Element  css=#form-buttons-save\n-    Wait Until Element Is Visible  css=#form-buttons-save\n-    Click Button  Save\n+    Wait For Then Click Element  css=#form-buttons-save\n     Wait until page contains  Changes saved\n \n \n'

