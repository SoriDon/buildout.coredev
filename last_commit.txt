Repository: plone.app.portlets


Branch: refs/heads/master
Date: 2016-12-27T15:31:36+02:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.app.portlets/commit/b770135d2a92320a4a5b28d2cb993475360da213

Fix issue where navigation portlet ignored bottomLevel == 0

Files changed:
M CHANGES.rst
M plone/app/portlets/portlets/navigation_recurse.pt
M plone/app/portlets/tests/test_navigation_portlet.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 419a3aa..400b407 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -15,6 +15,10 @@ New features:
 
 Bug fixes:
 
+- Fix regression where navigation portlet ignored unlimited setting for
+  *Navigation tree depth* setting
+  [datakurre]
+
 - Make sure, that ``utils.assignment_mapping_from_key`` traverses only to non-unicode paths.
   OFS.traversable doesn't accept unicode paths.
   [thet]
diff --git a/plone/app/portlets/portlets/navigation_recurse.pt b/plone/app/portlets/portlets/navigation_recurse.pt
index 1768ebb..98fd238 100644
--- a/plone/app/portlets/portlets/navigation_recurse.pt
+++ b/plone/app/portlets/portlets/navigation_recurse.pt
@@ -38,7 +38,7 @@
 
         <tal:children condition="children">
             <ul tal:attributes="class string:navTree navTreeLevel${level}"
-                tal:condition="python: children and show_children and bottomLevel and level < bottomLevel">
+                tal:condition="python: children and show_children and bottomLevel and level < bottomLevel or bottomLevel == 0">
                 <span tal:replace="structure python:view.recurse(children=children, level=level+1, bottomLevel=bottomLevel)" />
             </ul>
         </tal:children>
diff --git a/plone/app/portlets/tests/test_navigation_portlet.py b/plone/app/portlets/tests/test_navigation_portlet.py
index 5b63c56..ba27956 100644
--- a/plone/app/portlets/tests/test_navigation_portlet.py
+++ b/plone/app/portlets/tests/test_navigation_portlet.py
@@ -328,6 +328,19 @@ def testBottomLevelZeroNoLimit(self):
         self.assertTrue(tree)
         self.assertEqual(tree['children'][-1]['children'][0]['item'].getPath(), '/plone/folder2/doc21')
 
+    def testBottomLevelZeroNoLimitRendering(self):
+        """Test that bottomLevel=0 means no limit for bottomLevel."""
+
+        # first we set a high integer as bottomLevel to simulate "no limit"
+        view = self.renderer(self.portal.folder2, assignment=navigation.Assignment(bottomLevel=99, topLevel=0))
+        a = view.render()
+
+        # now set bottomLevel to 0 -> outcome should be the same
+        view = self.renderer(self.portal.folder2, assignment=navigation.Assignment(bottomLevel=0, topLevel=0))
+        b = view.render()
+
+        self.assertEqual(a, b)
+
     def testNavRootWithUnicodeNavigationRoot(self):
         self.portal.folder2.invokeFactory('Folder', 'folder21')
         self.portal.folder2.folder21.invokeFactory('Document', 'doc211')


Repository: plone.app.portlets


Branch: refs/heads/master
Date: 2016-12-29T16:59:21+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.portlets/commit/647d615e089b73a8788f9ef1c6b994c2eb45ea70

Merge pull request #94 from plone/datakurre-fix-bottomLevel

Fix issue where navigation portlet ignored bottomLevel == 0

Files changed:
M CHANGES.rst
M plone/app/portlets/portlets/navigation_recurse.pt
M plone/app/portlets/tests/test_navigation_portlet.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 419a3aa..400b407 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -15,6 +15,10 @@ New features:
 
 Bug fixes:
 
+- Fix regression where navigation portlet ignored unlimited setting for
+  *Navigation tree depth* setting
+  [datakurre]
+
 - Make sure, that ``utils.assignment_mapping_from_key`` traverses only to non-unicode paths.
   OFS.traversable doesn't accept unicode paths.
   [thet]
diff --git a/plone/app/portlets/portlets/navigation_recurse.pt b/plone/app/portlets/portlets/navigation_recurse.pt
index 1768ebb..98fd238 100644
--- a/plone/app/portlets/portlets/navigation_recurse.pt
+++ b/plone/app/portlets/portlets/navigation_recurse.pt
@@ -38,7 +38,7 @@
 
         <tal:children condition="children">
             <ul tal:attributes="class string:navTree navTreeLevel${level}"
-                tal:condition="python: children and show_children and bottomLevel and level < bottomLevel">
+                tal:condition="python: children and show_children and bottomLevel and level < bottomLevel or bottomLevel == 0">
                 <span tal:replace="structure python:view.recurse(children=children, level=level+1, bottomLevel=bottomLevel)" />
             </ul>
         </tal:children>
diff --git a/plone/app/portlets/tests/test_navigation_portlet.py b/plone/app/portlets/tests/test_navigation_portlet.py
index 5b63c56..ba27956 100644
--- a/plone/app/portlets/tests/test_navigation_portlet.py
+++ b/plone/app/portlets/tests/test_navigation_portlet.py
@@ -328,6 +328,19 @@ def testBottomLevelZeroNoLimit(self):
         self.assertTrue(tree)
         self.assertEqual(tree['children'][-1]['children'][0]['item'].getPath(), '/plone/folder2/doc21')
 
+    def testBottomLevelZeroNoLimitRendering(self):
+        """Test that bottomLevel=0 means no limit for bottomLevel."""
+
+        # first we set a high integer as bottomLevel to simulate "no limit"
+        view = self.renderer(self.portal.folder2, assignment=navigation.Assignment(bottomLevel=99, topLevel=0))
+        a = view.render()
+
+        # now set bottomLevel to 0 -> outcome should be the same
+        view = self.renderer(self.portal.folder2, assignment=navigation.Assignment(bottomLevel=0, topLevel=0))
+        b = view.render()
+
+        self.assertEqual(a, b)
+
     def testNavRootWithUnicodeNavigationRoot(self):
         self.portal.folder2.invokeFactory('Folder', 'folder21')
         self.portal.folder2.folder21.invokeFactory('Document', 'doc211')


