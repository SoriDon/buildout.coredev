Repository: Products.PlonePAS


Branch: refs/heads/master
Date: 2017-11-30T23:51:24+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.PlonePAS/commit/920115dbccbe40bbcb1fb8795671d3cb193eea02

Report home_page as empty when it is suspicious.

It may for example contain javascript.
Part of PloneHotfix20171128.

Files changed:
M CHANGES.rst
M src/Products/PlonePAS/tests/test_membershiptool.py
M src/Products/PlonePAS/tools/membership.py

diff --git a/CHANGES.rst b/CHANGES.rst
index e780040..46bdb6f 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -17,7 +17,10 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Report home_page as empty when it is suspicious.
+  It may for example contain javascript.
+  Part of PloneHotfix20171128.
+  [maurits]
 
 
 5.0.14 (2017-05-09)
diff --git a/src/Products/PlonePAS/tests/test_membershiptool.py b/src/Products/PlonePAS/tests/test_membershiptool.py
index 3616979..c57210d 100644
--- a/src/Products/PlonePAS/tests/test_membershiptool.py
+++ b/src/Products/PlonePAS/tests/test_membershiptool.py
@@ -563,6 +563,30 @@ def testGetMemberInfoWithMissingProperties(self):
         info = self.membership.getMemberInfo('user3')
         self.assertEqual(info['fullname'], 'Second user')
 
+    def testGetMemberInfoHomePage(self):
+        self.membership.addMember(
+            'user4', 'secret', ['Member'], [],
+            properties={})
+        # empty home_page
+        member = self.membership.getMemberById('user4')
+        info = self.membership.getMemberInfo('user4')
+        self.assertEqual(info.get('home_page'), '')
+
+        # regular external home_page
+        member.setMemberProperties({'home_page': 'http://maurits.vanrees.org'})
+        info = self.membership.getMemberInfo('user4')
+        self.assertEqual(info.get('home_page'), 'http://maurits.vanrees.org')
+
+        # internal home_page
+        member.setMemberProperties({'home_page': 'internal_page'})
+        info = self.membership.getMemberInfo('user4')
+        self.assertEqual(info.get('home_page'), 'internal_page')
+
+        # bad home_page
+        member.setMemberProperties({'home_page': 'javascript:alert("hello")'})
+        info = self.membership.getMemberInfo('user4')
+        self.assertEqual(info.get('home_page'), '')
+
     def testGetCandidateLocalRolesIncludesLocalRolesOnObjectForManager(self):
         self.folder._addRole('my_test_role')
         self.folder.manage_setLocalRoles(TEST_USER_ID,
@@ -921,12 +945,15 @@ def testMemberInfoViewForAuthenticated(self):
         self.assertEqual(info['name_or_id'], 'Test user')
 
     def testGetMemberInfoViewForMember(self):
-        self.membership.addMember('user2', 'secret', ['Member'], [],
-                                  properties={'fullname': 'Second user'})
+        self.membership.addMember(
+            'user2', 'secret', ['Member'], [],
+            properties={'fullname': 'Second user',
+                        'home_page': 'http://maurits.vanrees.org'})
         info = self.view.info('user2')
         self.assertEqual(info['username'], 'user2')
         self.assertEqual(info['fullname'], 'Second user')
         self.assertEqual(info['name_or_id'], 'Second user')
+        self.assertEqual(info['home_page'], 'http://maurits.vanrees.org')
 
     def testGetMemberInfoViewForNonMember(self):
         # When content is owned by a user who has meanwhile been
@@ -946,6 +973,20 @@ def testGetMemberInfoViewForAnonymous(self):
         self.assertEqual(info['fullname'], '')
         self.assertEqual(info['name_or_id'], 'Anonymous User')
 
+    def testGetMemberInfoViewHomePageInternal(self):
+        self.membership.addMember(
+            'user4', 'secret', ['Member'], [],
+            properties={'home_page': 'internal_page'})
+        info = self.view.info('user4')
+        self.assertEqual(info.get('home_page'), 'internal_page')
+
+    def testGetMemberInfoViewHomePageBad(self):
+        self.membership.addMember(
+            'user4', 'secret', ['Member'], [],
+            properties={'home_page': 'javascript:alert("hello")'})
+        info = self.view.info('user4')
+        self.assertEqual(info.get('home_page'), '')
+
     def testSetGroupsWithUserNameIdDifference(self):
         pas = self.portal['acl_users']
         self.portal.portal_groups.addGroup('Editors', [], [])
diff --git a/src/Products/PlonePAS/tools/membership.py b/src/Products/PlonePAS/tools/membership.py
index 9fcaa82..591dc97 100644
--- a/src/Products/PlonePAS/tools/membership.py
+++ b/src/Products/PlonePAS/tools/membership.py
@@ -387,12 +387,27 @@ def getMemberInfo(self, memberId=None):
         if member is None:
             return None
 
+        # Special handling to avoid bad home_pages, like javascript.
+        home_page = member.getProperty('home_page', '')
+        if isinstance(home_page, basestring):
+            if (not home_page.startswith('https://') and
+                    not home_page.startswith('http://')):
+                # Suspicious.  But if it is internal, it is fine.
+                urltool = getToolByName(self, 'portal_url')
+                if not urltool.isURLInPortal(home_page):
+                    # We do not trust this url, so empty it.
+                    # It may for example be javascript.
+                    logger.warn(
+                        'Member %s has suspicious home_page property: %s',
+                        memberId, home_page)
+                    home_page = ''
+
         memberinfo = {
             'fullname': member.getProperty('fullname', ''),
             'description': member.getProperty('description', ''),
             'location': member.getProperty('location', ''),
             'language': member.getProperty('language', ''),
-            'home_page': member.getProperty('home_page', ''),
+            'home_page': home_page,
             'username': member.getUserName(),
             'has_email': bool(member.getProperty('email')),
         }


Repository: Products.PlonePAS


Branch: refs/heads/master
Date: 2017-12-01T00:43:25+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/Products.PlonePAS/commit/0fb5346133dc3965cf59cbd0d3c1522f5d2971b4

Merge pull request #29 from plone/plone-hotfix20171128-home-page-master

Report home_page as empty when it is suspicious. [master]

Files changed:
M CHANGES.rst
M src/Products/PlonePAS/tests/test_membershiptool.py
M src/Products/PlonePAS/tools/membership.py

diff --git a/CHANGES.rst b/CHANGES.rst
index e780040..46bdb6f 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -17,7 +17,10 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Report home_page as empty when it is suspicious.
+  It may for example contain javascript.
+  Part of PloneHotfix20171128.
+  [maurits]
 
 
 5.0.14 (2017-05-09)
diff --git a/src/Products/PlonePAS/tests/test_membershiptool.py b/src/Products/PlonePAS/tests/test_membershiptool.py
index 3616979..c57210d 100644
--- a/src/Products/PlonePAS/tests/test_membershiptool.py
+++ b/src/Products/PlonePAS/tests/test_membershiptool.py
@@ -563,6 +563,30 @@ def testGetMemberInfoWithMissingProperties(self):
         info = self.membership.getMemberInfo('user3')
         self.assertEqual(info['fullname'], 'Second user')
 
+    def testGetMemberInfoHomePage(self):
+        self.membership.addMember(
+            'user4', 'secret', ['Member'], [],
+            properties={})
+        # empty home_page
+        member = self.membership.getMemberById('user4')
+        info = self.membership.getMemberInfo('user4')
+        self.assertEqual(info.get('home_page'), '')
+
+        # regular external home_page
+        member.setMemberProperties({'home_page': 'http://maurits.vanrees.org'})
+        info = self.membership.getMemberInfo('user4')
+        self.assertEqual(info.get('home_page'), 'http://maurits.vanrees.org')
+
+        # internal home_page
+        member.setMemberProperties({'home_page': 'internal_page'})
+        info = self.membership.getMemberInfo('user4')
+        self.assertEqual(info.get('home_page'), 'internal_page')
+
+        # bad home_page
+        member.setMemberProperties({'home_page': 'javascript:alert("hello")'})
+        info = self.membership.getMemberInfo('user4')
+        self.assertEqual(info.get('home_page'), '')
+
     def testGetCandidateLocalRolesIncludesLocalRolesOnObjectForManager(self):
         self.folder._addRole('my_test_role')
         self.folder.manage_setLocalRoles(TEST_USER_ID,
@@ -921,12 +945,15 @@ def testMemberInfoViewForAuthenticated(self):
         self.assertEqual(info['name_or_id'], 'Test user')
 
     def testGetMemberInfoViewForMember(self):
-        self.membership.addMember('user2', 'secret', ['Member'], [],
-                                  properties={'fullname': 'Second user'})
+        self.membership.addMember(
+            'user2', 'secret', ['Member'], [],
+            properties={'fullname': 'Second user',
+                        'home_page': 'http://maurits.vanrees.org'})
         info = self.view.info('user2')
         self.assertEqual(info['username'], 'user2')
         self.assertEqual(info['fullname'], 'Second user')
         self.assertEqual(info['name_or_id'], 'Second user')
+        self.assertEqual(info['home_page'], 'http://maurits.vanrees.org')
 
     def testGetMemberInfoViewForNonMember(self):
         # When content is owned by a user who has meanwhile been
@@ -946,6 +973,20 @@ def testGetMemberInfoViewForAnonymous(self):
         self.assertEqual(info['fullname'], '')
         self.assertEqual(info['name_or_id'], 'Anonymous User')
 
+    def testGetMemberInfoViewHomePageInternal(self):
+        self.membership.addMember(
+            'user4', 'secret', ['Member'], [],
+            properties={'home_page': 'internal_page'})
+        info = self.view.info('user4')
+        self.assertEqual(info.get('home_page'), 'internal_page')
+
+    def testGetMemberInfoViewHomePageBad(self):
+        self.membership.addMember(
+            'user4', 'secret', ['Member'], [],
+            properties={'home_page': 'javascript:alert("hello")'})
+        info = self.view.info('user4')
+        self.assertEqual(info.get('home_page'), '')
+
     def testSetGroupsWithUserNameIdDifference(self):
         pas = self.portal['acl_users']
         self.portal.portal_groups.addGroup('Editors', [], [])
diff --git a/src/Products/PlonePAS/tools/membership.py b/src/Products/PlonePAS/tools/membership.py
index 9fcaa82..591dc97 100644
--- a/src/Products/PlonePAS/tools/membership.py
+++ b/src/Products/PlonePAS/tools/membership.py
@@ -387,12 +387,27 @@ def getMemberInfo(self, memberId=None):
         if member is None:
             return None
 
+        # Special handling to avoid bad home_pages, like javascript.
+        home_page = member.getProperty('home_page', '')
+        if isinstance(home_page, basestring):
+            if (not home_page.startswith('https://') and
+                    not home_page.startswith('http://')):
+                # Suspicious.  But if it is internal, it is fine.
+                urltool = getToolByName(self, 'portal_url')
+                if not urltool.isURLInPortal(home_page):
+                    # We do not trust this url, so empty it.
+                    # It may for example be javascript.
+                    logger.warn(
+                        'Member %s has suspicious home_page property: %s',
+                        memberId, home_page)
+                    home_page = ''
+
         memberinfo = {
             'fullname': member.getProperty('fullname', ''),
             'description': member.getProperty('description', ''),
             'location': member.getProperty('location', ''),
             'language': member.getProperty('language', ''),
-            'home_page': member.getProperty('home_page', ''),
+            'home_page': home_page,
             'username': member.getUserName(),
             'has_email': bool(member.getProperty('email')),
         }


