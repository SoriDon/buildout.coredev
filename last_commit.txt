Repository: plone.restapi


Branch: refs/heads/master
Date: 2019-03-24T08:48:52+01:00
Author: Andrea Cecchi (cekk) <andrea.cecchi85@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/78317100251d498a40f14e49db385cbcfc60938f

Standardize errors data structure of email-notification endpoint

Files changed:
A news/708.bugfixes
M src/plone/restapi/services/email_notification/post.py
M src/plone/restapi/tests/test_services_email_notification.py

b"diff --git a/news/708.bugfixes b/news/708.bugfixes\nnew file mode 100644\nindex 00000000..cd954ea7\n--- /dev/null\n+++ b/news/708.bugfixes\n@@ -0,0 +1,2 @@\n+Standardize errors data structure of email-notification endpoint.\n+[cekk]\ndiff --git a/src/plone/restapi/services/email_notification/post.py b/src/plone/restapi/services/email_notification/post.py\nindex 3419e488..6c7681b9 100644\n--- a/src/plone/restapi/services/email_notification/post.py\n+++ b/src/plone/restapi/services/email_notification/post.py\n@@ -1,7 +1,8 @@\n # -*- coding: utf-8 -*-\n+from plone.restapi.deserializer import json_body\n from plone.restapi.services import Service\n+from zExceptions import BadRequest\n from zope.component import getMultiAdapter\n-from plone.restapi.deserializer import json_body\n from zope.interface import alsoProvides\n \n import plone\n@@ -18,18 +19,12 @@ def reply(self):\n         subject = data.get('subject', '')\n \n         if not sender_from_address or not message:\n-            self.request.response.setStatus(400)\n-            return dict(error=dict(\n-                type='BadRequest',\n-                message='Missing from or message parameters'))\n+            raise BadRequest('Missing from or message parameters')\n \n         overview_controlpanel = getMultiAdapter((self.context, self.request),\n                                                 name='overview-controlpanel')\n         if overview_controlpanel.mailhost_warning():\n-            self.request.response.setStatus(400)\n-            return dict(error=dict(\n-                type='BadRequest',\n-                message='MailHost is not configured.'))\n+            raise BadRequest('MailHost is not configured.')\n \n         # Disable CSRF protection\n         if 'IDisableCSRFProtection' in dir(plone.protect.interfaces):\n@@ -41,10 +36,10 @@ def reply(self):\n \n         contact_info_view.send_message(\n             dict(\n-              message=message,\n-              subject=subject,\n-              sender_from_address=sender_from_address,\n-              sender_fullname=sender_fullname\n+                message=message,\n+                subject=subject,\n+                sender_from_address=sender_from_address,\n+                sender_fullname=sender_fullname\n             )\n         )\n \ndiff --git a/src/plone/restapi/tests/test_services_email_notification.py b/src/plone/restapi/tests/test_services_email_notification.py\nindex 9bd05135..0e6ce006 100644\n--- a/src/plone/restapi/tests/test_services_email_notification.py\n+++ b/src/plone/restapi/tests/test_services_email_notification.py\n@@ -49,6 +49,19 @@ def setUp(self):\n     def tearDown(self):\n         self.api_session.close()\n \n+    def test_email_notification_missing_parameters(self):\n+        response = self.api_session.post(\n+            '/@email-notification',\n+            json={\n+                'message': 'Just want to say hi.'\n+            })\n+        transaction.commit()\n+        self.assertEqual(response.status_code, 400)\n+        self.assertEqual(self.mailhost.messages, [])\n+        error = response.json()\n+        self.assertEqual(error['message'],\n+                         'Missing from or message parameters')\n+\n     def test_email_notification(self):\n         response = self.api_session.post(\n             '/@email-notification',\n"

Repository: plone.restapi


Branch: refs/heads/master
Date: 2019-05-07T12:07:19+02:00
Author: Timo Stollenwerk (tisto) <tisto@users.noreply.github.com>
Commit: https://github.com/plone/plone.restapi/commit/f85e9f663b79bdf89280f2bc1f55351a35d7bd8d

Merge pull request #723 from plone/fix-email-notification-error-2

Standardize errors data structure of email-notification endpoint (second try)

Files changed:
A news/708.bugfixes
M src/plone/restapi/services/email_notification/post.py
M src/plone/restapi/tests/test_services_email_notification.py

b"diff --git a/news/708.bugfixes b/news/708.bugfixes\nnew file mode 100644\nindex 00000000..cd954ea7\n--- /dev/null\n+++ b/news/708.bugfixes\n@@ -0,0 +1,2 @@\n+Standardize errors data structure of email-notification endpoint.\n+[cekk]\ndiff --git a/src/plone/restapi/services/email_notification/post.py b/src/plone/restapi/services/email_notification/post.py\nindex 3419e488..6c7681b9 100644\n--- a/src/plone/restapi/services/email_notification/post.py\n+++ b/src/plone/restapi/services/email_notification/post.py\n@@ -1,7 +1,8 @@\n # -*- coding: utf-8 -*-\n+from plone.restapi.deserializer import json_body\n from plone.restapi.services import Service\n+from zExceptions import BadRequest\n from zope.component import getMultiAdapter\n-from plone.restapi.deserializer import json_body\n from zope.interface import alsoProvides\n \n import plone\n@@ -18,18 +19,12 @@ def reply(self):\n         subject = data.get('subject', '')\n \n         if not sender_from_address or not message:\n-            self.request.response.setStatus(400)\n-            return dict(error=dict(\n-                type='BadRequest',\n-                message='Missing from or message parameters'))\n+            raise BadRequest('Missing from or message parameters')\n \n         overview_controlpanel = getMultiAdapter((self.context, self.request),\n                                                 name='overview-controlpanel')\n         if overview_controlpanel.mailhost_warning():\n-            self.request.response.setStatus(400)\n-            return dict(error=dict(\n-                type='BadRequest',\n-                message='MailHost is not configured.'))\n+            raise BadRequest('MailHost is not configured.')\n \n         # Disable CSRF protection\n         if 'IDisableCSRFProtection' in dir(plone.protect.interfaces):\n@@ -41,10 +36,10 @@ def reply(self):\n \n         contact_info_view.send_message(\n             dict(\n-              message=message,\n-              subject=subject,\n-              sender_from_address=sender_from_address,\n-              sender_fullname=sender_fullname\n+                message=message,\n+                subject=subject,\n+                sender_from_address=sender_from_address,\n+                sender_fullname=sender_fullname\n             )\n         )\n \ndiff --git a/src/plone/restapi/tests/test_services_email_notification.py b/src/plone/restapi/tests/test_services_email_notification.py\nindex 9bd05135..0e6ce006 100644\n--- a/src/plone/restapi/tests/test_services_email_notification.py\n+++ b/src/plone/restapi/tests/test_services_email_notification.py\n@@ -49,6 +49,19 @@ def setUp(self):\n     def tearDown(self):\n         self.api_session.close()\n \n+    def test_email_notification_missing_parameters(self):\n+        response = self.api_session.post(\n+            '/@email-notification',\n+            json={\n+                'message': 'Just want to say hi.'\n+            })\n+        transaction.commit()\n+        self.assertEqual(response.status_code, 400)\n+        self.assertEqual(self.mailhost.messages, [])\n+        error = response.json()\n+        self.assertEqual(error['message'],\n+                         'Missing from or message parameters')\n+\n     def test_email_notification(self):\n         response = self.api_session.post(\n             '/@email-notification',\n"

