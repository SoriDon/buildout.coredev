Repository: plone.app.registry


Branch: refs/heads/master
Date: 2022-04-13T13:02:13+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.registry/commit/dabcab7c1a6ebbf77c5f4b9bc26ce19d4069986b

Allow up to one dash in an a record key. Fixes https://github.com/plone/Products.CMFPlone/issues/3499

Files changed:
M plone/app/registry/browser/records.py

b'diff --git a/plone/app/registry/browser/records.py b/plone/app/registry/browser/records.py\nindex 2975953..a0f17aa 100644\n--- a/plone/app/registry/browser/records.py\n+++ b/plone/app/registry/browser/records.py\n@@ -58,16 +58,20 @@ def shouldPurge(self):\n \n \n def checkFieldName(val):\n-    for letter in val:\n-        if letter not in _valid_field_name_chars:\n-            raise Invalid(\'Not a valid field name\')\n+    # Reuse same regex as in plone.registry.registry._Records to allow dottedname with one \'/\'\n+    validkey = re.compile(\n+        r"([a-zA-Z][a-zA-Z0-9_-]*)((?:\\.[a-zA-Z0-9][a-zA-Z0-9_-]*)*)"\n+        r"([/][a-zA-Z0-9][a-zA-Z0-9_-]*)?((?:\\.[a-zA-Z0-9][a-zA-Z0-9_-]*)*)$"\n+    ).match\n+    if not validkey(val):\n+        raise Invalid(\'Not a valid field name\')\n     return True\n \n \n class IAddFieldForm(Interface):\n-    name = schema.ASCIILine(\n+    name = schema.TextLine(\n         title=_(u\'label_field_name\', default=u\'Field Name\'),\n-        description=u\'Must be in a format like "plone.my_name". Only letters, periods and underscores.\',\n+        description=u\'Must be in a format like "plone.my_name". Only letters, periods, underscores and up to one /.\',\n         required=True,\n         constraint=checkFieldName)\n \n'

Repository: plone.app.registry


Branch: refs/heads/master
Date: 2022-04-13T13:05:25+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.registry/commit/b703ce9528e621db58a75d9378223091c95f52d2

changenote

Files changed:
A news/62.bugfix

b'diff --git a/news/62.bugfix b/news/62.bugfix\nnew file mode 100644\nindex 0000000..170b1d7\n--- /dev/null\n+++ b/news/62.bugfix\n@@ -0,0 +1,2 @@\n+Allow up to one dash in key when creating an a record ttw.\n+[pbauer]\n\\ No newline at end of file\n'

Repository: plone.app.registry


Branch: refs/heads/master
Date: 2022-04-13T14:09:33+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.registry/commit/fd5d9dccca39144b95d6b46eb53946e5eee2d293

add missing import

Files changed:
M plone/app/registry/browser/records.py

b'diff --git a/plone/app/registry/browser/records.py b/plone/app/registry/browser/records.py\nindex a0f17aa..88372bb 100644\n--- a/plone/app/registry/browser/records.py\n+++ b/plone/app/registry/browser/records.py\n@@ -21,6 +21,7 @@\n from zope.schema.vocabulary import SimpleVocabulary\n \n import logging\n+import re\n import string\n \n \n'

Repository: plone.app.registry


Branch: refs/heads/master
Date: 2022-04-14T14:02:22+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.registry/commit/3e869bf850fc048d5e906c4da946f008b4ce3389

Merge pull request #62 from plone/allow_dash_in_record_key

Allow up to one dash in key when creating an a record ttw

Files changed:
A news/62.bugfix
M plone/app/registry/browser/records.py

b'diff --git a/news/62.bugfix b/news/62.bugfix\nnew file mode 100644\nindex 0000000..170b1d7\n--- /dev/null\n+++ b/news/62.bugfix\n@@ -0,0 +1,2 @@\n+Allow up to one dash in key when creating an a record ttw.\n+[pbauer]\n\\ No newline at end of file\ndiff --git a/plone/app/registry/browser/records.py b/plone/app/registry/browser/records.py\nindex 2975953..88372bb 100644\n--- a/plone/app/registry/browser/records.py\n+++ b/plone/app/registry/browser/records.py\n@@ -21,6 +21,7 @@\n from zope.schema.vocabulary import SimpleVocabulary\n \n import logging\n+import re\n import string\n \n \n@@ -58,16 +59,20 @@ def shouldPurge(self):\n \n \n def checkFieldName(val):\n-    for letter in val:\n-        if letter not in _valid_field_name_chars:\n-            raise Invalid(\'Not a valid field name\')\n+    # Reuse same regex as in plone.registry.registry._Records to allow dottedname with one \'/\'\n+    validkey = re.compile(\n+        r"([a-zA-Z][a-zA-Z0-9_-]*)((?:\\.[a-zA-Z0-9][a-zA-Z0-9_-]*)*)"\n+        r"([/][a-zA-Z0-9][a-zA-Z0-9_-]*)?((?:\\.[a-zA-Z0-9][a-zA-Z0-9_-]*)*)$"\n+    ).match\n+    if not validkey(val):\n+        raise Invalid(\'Not a valid field name\')\n     return True\n \n \n class IAddFieldForm(Interface):\n-    name = schema.ASCIILine(\n+    name = schema.TextLine(\n         title=_(u\'label_field_name\', default=u\'Field Name\'),\n-        description=u\'Must be in a format like "plone.my_name". Only letters, periods and underscores.\',\n+        description=u\'Must be in a format like "plone.my_name". Only letters, periods, underscores and up to one /.\',\n         required=True,\n         constraint=checkFieldName)\n \n'

