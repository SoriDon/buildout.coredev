Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2021-10-21T23:13:11+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/66061234dab5de04651ce3bec45717d989bf0e41

PLIP 3339: Replace z3c.autoinclude with plone.autoinclude.

Note: `includeDependencies` is no longer supported.

Files changed:
A news/3339.breaking
M Products/CMFPlone/configure.zcml
M Products/CMFPlone/meta.zcml
M Products/CMFPlone/overrides.zcml
M setup.py

b'diff --git a/Products/CMFPlone/configure.zcml b/Products/CMFPlone/configure.zcml\nindex 4594586eb8..9d9f68b282 100644\n--- a/Products/CMFPlone/configure.zcml\n+++ b/Products/CMFPlone/configure.zcml\n@@ -98,10 +98,10 @@\n       trusted="y"\n       />\n \n-  <!-- include plone plugins with z3c.autoinclude -->\n-  <includePlugins\n+  <!-- include plone plugins with plone.autoinclude -->\n+  <autoIncludePlugins\n       zcml:condition="not-have disable-autoinclude"\n-      package="plone"\n+      target="plone"\n       file="configure.zcml"\n       />\n \ndiff --git a/Products/CMFPlone/meta.zcml b/Products/CMFPlone/meta.zcml\nindex dbc42f3571..23422680dc 100644\n--- a/Products/CMFPlone/meta.zcml\n+++ b/Products/CMFPlone/meta.zcml\n@@ -25,15 +25,14 @@\n \n     <include package="plone.app.portlets" file="meta.zcml" />\n \n-    <!-- z3c.autoinclude\'s `includePlugins` directive finds\n+    <!-- plone.autoinclude\'s `autoIncludePlugins` directive finds\n          and executes ZCML files from any installed packages\n          that provide an entry point to declare themselves a\n          plone plugin -->\n-    <include package="z3c.autoinclude" file="meta.zcml" />\n-\n-    <includePlugins\n+    <include package="plone.autoinclude" file="meta.zcml" />\n+    <autoIncludePlugins\n         zcml:condition="not-have disable-autoinclude"\n-        package="plone"\n+        target="plone"\n         file="meta.zcml"\n         />\n \ndiff --git a/Products/CMFPlone/overrides.zcml b/Products/CMFPlone/overrides.zcml\nindex b607ef576a..27f8494efe 100644\n--- a/Products/CMFPlone/overrides.zcml\n+++ b/Products/CMFPlone/overrides.zcml\n@@ -12,10 +12,10 @@\n         component="Products.CMFPlone.unicodeconflictresolver.UTF8EncodingConflictResolver"\n         />\n \n-    <!-- include plone plugins with z3c.autoinclude -->\n-    <includePluginsOverrides\n+    <!-- include plone plugins with plone.autoinclude -->\n+    <autoIncludePluginsOverrides\n         zcml:condition="not-have disable-autoinclude"\n-        package="plone"\n+        target="plone"\n         file="overrides.zcml"\n         />\n \ndiff --git a/news/3339.breaking b/news/3339.breaking\nnew file mode 100644\nindex 0000000000..06a8b4e554\n--- /dev/null\n+++ b/news/3339.breaking\n@@ -0,0 +1,3 @@\n+PLIP 3339: Replace ``z3c.autoinclude`` with ``plone.autoinclude``.\n+Note: ``includeDependencies`` is no longer supported.\n+[maurits, tschorr]\ndiff --git a/setup.py b/setup.py\nindex ad54ef0dc6..8e3f0d7ea3 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -107,7 +107,7 @@\n         \'pyScss\',\n         \'setuptools>=36.2\',\n         \'transaction\',\n-        \'z3c.autoinclude\',\n+        \'plone.autoinclude\',\n         \'ZODB3\',\n         \'Zope[wsgi] >= 4.0\',\n         \'zope.app.locales >= 3.6.0\',\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2021-11-28T12:21:04+01:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/6dd93720ecd0c23b7f17001c20b65f34d3aa440d

Merge remote-tracking branch 'origin/master' into plip-3339-plone.autoinclude

Files changed:
A news/3314.bugfix
A news/3323.bugifx
A news/3337.bugfix
A news/3342.bugfix
A news/3344.feature
A news/3347.bugfix
A news/3354.bugfix
A news/3356.bugfix
A news/3357.bugfix
A news/3366.bugfix
A news/6002.bugfix
M CHANGES.rst
M Products/CMFPlone/CatalogTool.py
M Products/CMFPlone/Portal.py
M Products/CMFPlone/browser/admin.py
M Products/CMFPlone/browser/templates/plone-overview.pt
M Products/CMFPlone/catalog.zcml
M Products/CMFPlone/controlpanel/browser/redirects-controlpanel.pt
M Products/CMFPlone/profiles/default/metadata.xml
M Products/CMFPlone/relationhelper.py
M Products/CMFPlone/tests/robot/test_folder_contents.robot
M Products/CMFPlone/tests/robot/test_querystring.robot
M Products/CMFPlone/tests/testBrowserDefault.py
M Products/CMFPlone/tests/testCatalogTool.py
M Products/CMFPlone/tests/testPortalCreation.py
M setup.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 59d4138309..cf580fd6b9 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -12,6 +12,17 @@ Changelog\n \n .. towncrier release notes start\n \n+6.0.0a1 (2021-10-22)\n+--------------------\n+\n+Bug fixes:\n+\n+\n+- Release Plone 6.0.0a1.\n+  No changes since previous release.\n+  [maurits] (#3341)\n+\n+\n 6.0.0a1.dev1 (2021-10-16)\n -------------------------\n \ndiff --git a/Products/CMFPlone/CatalogTool.py b/Products/CMFPlone/CatalogTool.py\nindex 17c6001ec8..03810c863e 100644\n--- a/Products/CMFPlone/CatalogTool.py\n+++ b/Products/CMFPlone/CatalogTool.py\n@@ -255,11 +255,6 @@ def mime_type(obj):\n     return aq_base(obj).getPrimaryField().getContentType(obj)\n \n \n-@indexer(Interface)\n-def location(obj):\n-    return obj.getField(\'location\').get(obj)\n-\n-\n @implementer(IPloneCatalogTool)\n class CatalogTool(PloneBaseTool, BaseTool):\n     """Plone\'s catalog tool"""\n@@ -488,6 +483,7 @@ def indexObject(obj, path):\n                     pass\n         self.manage_catalogClear()\n         portal = aq_parent(aq_inner(self))\n+        indexObject(portal, \'\')\n         portal.ZopeFindAndApply(\n             portal,\n             search_sub=True,\ndiff --git a/Products/CMFPlone/Portal.py b/Products/CMFPlone/Portal.py\nindex c477c3fcbe..024a9e49cf 100644\n--- a/Products/CMFPlone/Portal.py\n+++ b/Products/CMFPlone/Portal.py\n@@ -6,7 +6,6 @@\n from five.localsitemanager.registry import PersistentComponents\n from OFS.ObjectManager import REPLACEABLE\n from plone.dexterity.content import Container\n-from plone.i18n.locales.interfaces import IMetadataLanguageAvailability\n from Products.CMFCore import permissions\n from Products.CMFCore.interfaces import IContentish\n from Products.CMFCore.interfaces import ISiteRoot\n@@ -34,7 +33,6 @@\n from Products.CMFPlone.permissions import ReplyToItem\n from Products.CMFPlone.permissions import View\n from Products.Five.component.interfaces import IObjectManagerSite\n-from zope.component import queryUtility\n from zope.interface.interfaces import ComponentLookupError\n from zope.event import notify\n from zope.interface import classImplementsOnly\n@@ -139,6 +137,16 @@ def __before_publishing_traverse__(self, arg1, arg2=None):\n \n         super(PloneSite, self).__before_publishing_traverse__(arg1, arg2)\n \n+    # Concept from OFS.OrderSupport\n+    @security.protected(permissions.AccessContentsInformation)\n+    def tpValues(self):\n+        # Return a list of subobjects, used by ZMI tree tag (and only there).\n+        # see also https://github.com/plone/Products.CMFPlone/issues/3323\n+        return sorted(\n+            (obj for obj in self.objectValues() if getattr(aq_base(obj), \'isPrincipiaFolderish\', False)),\n+            key=lambda obj: obj.getId(),\n+        )\n+\n     def __browser_default__(self, request):\n         """ Set default so we can return whatever we want instead\n         of index_html """\n@@ -174,8 +182,7 @@ def manage_beforeDelete(self, container, item):\n         PloneSite.inheritedAttribute(\'manage_beforeDelete\')(self, container,\n                                                             item)\n \n-    security.declareProtected(permissions.DeleteObjects, \'manage_delObjects\')\n-\n+    @security.protected(permissions.DeleteObjects)\n     def manage_delObjects(self, ids=None, REQUEST=None):\n         """We need to enforce security."""\n         if ids is None:\n@@ -195,9 +202,7 @@ def view(self):\n         """\n         return self()\n \n-    security.declareProtected(permissions.AccessContentsInformation,\n-                              \'folderlistingFolderContents\')\n-\n+    @security.protected(permissions.AccessContentsInformation)\n     def folderlistingFolderContents(self, contentFilter=None):\n         """Calls listFolderContents in protected only by ACI so that\n         folder_listing can work without the List folder contents permission.\n@@ -207,34 +212,10 @@ def folderlistingFolderContents(self, contentFilter=None):\n         """\n         return self.listFolderContents(contentFilter)\n \n-    security.declarePublic(\'availableLanguages\')\n-\n-    def availableLanguages(self):\n-        util = queryUtility(IMetadataLanguageAvailability)\n-        languages = util.getLanguageListing()\n-        languages.sort(lambda x, y: cmp(x[1], y[1]))\n-        # Put language neutral at the top.\n-        languages.insert(0, (\'\', _(\'Language neutral (site default)\')))\n-\n-        return languages\n-\n     def isEffective(self, date):\n         # Override DefaultDublinCoreImpl\'s test, since we are always viewable.\n         return 1\n \n-    # Ensure portals don\'t get cataloged.\n-    def indexObject(self):\n-        pass\n-\n-    def unindexObject(self):\n-        pass\n-\n-    def reindexObject(self, idxs=None):\n-        pass\n-\n-    def reindexObjectSecurity(self, skip_self=False):\n-        pass\n-\n \n # Remove the IContentish interface so we don\'t listen to events that won\'t\n # apply to the site root, ie handleUidAnnotationEvent\ndiff --git a/Products/CMFPlone/browser/admin.py b/Products/CMFPlone/browser/admin.py\nindex 62301e605a..50fdc7b4ac 100644\n--- a/Products/CMFPlone/browser/admin.py\n+++ b/Products/CMFPlone/browser/admin.py\n@@ -33,6 +33,14 @@\n from zope.schema.interfaces import IVocabularyFactory\n \n import logging\n+import pkg_resources\n+\n+\n+try:\n+    pkg_resources.get_distribution("plone.volto")\n+    HAS_VOLTO = True\n+except pkg_resources.DistributionNotFound:\n+    HAS_VOLTO = False\n LOGGER = logging.getLogger(\'Products.CMFPlone\')\n \n \n@@ -49,6 +57,7 @@ def publishTraverse(self, request, name):\n \n \n class Overview(BrowserView):\n+    has_volto = HAS_VOLTO\n \n     def sites(self, root=None):\n         if root is None:\n@@ -146,10 +155,22 @@ class AddPloneSite(BrowserView):\n         \'plone.app.caching:default\',\n         \'plonetheme.barceloneta:default\',\n     )\n+    # Let\'s have a separate list for Volto.\n+    volto_default_extension_profiles = (\n+        \'plone.app.caching:default\',\n+        # We could choose to not install Barceloneta:\n+        \'plonetheme.barceloneta:default\',\n+        \'plone.volto:default\',\n+        \'plone.volto:default-homepage\'\n+    )\n \n     def profiles(self):\n         base_profiles = []\n         extension_profiles = []\n+        if HAS_VOLTO and not self.request.get(\'classic\'):\n+            selected_extension_profiles = self.volto_default_extension_profiles\n+        else:\n+            selected_extension_profiles = self.default_extension_profiles\n \n         # profiles available for install/uninstall, but hidden at the time\n         # the Plone site is created\n@@ -165,7 +186,7 @@ def profiles(self):\n                info.get(\'for\') in (IPloneSiteRoot, None):\n                 profile_id = info.get(\'id\')\n                 if profile_id not in not_installable:\n-                    if profile_id in self.default_extension_profiles:\n+                    if profile_id in selected_extension_profiles:\n                         info[\'selected\'] = \'selected\'\n                     extension_profiles.append(info)\n \ndiff --git a/Products/CMFPlone/browser/templates/plone-overview.pt b/Products/CMFPlone/browser/templates/plone-overview.pt\nindex b4e78eb4f6..b1a159b988 100644\n--- a/Products/CMFPlone/browser/templates/plone-overview.pt\n+++ b/Products/CMFPlone/browser/templates/plone-overview.pt\n@@ -86,16 +86,25 @@\n             </p>\n             <form id="add-plone-site"\n                     method="get"\n-                    action="#"\n-                    tal:define="site_number python: \'\' if not sites else len(sites) + 1"\n-                    tal:attributes="action string:${context/absolute_url}/@@plone-addsite">\n+                    tal:define="site_number python: \'\' if not sites else len(sites) + 1;\n+                                action string:${context/absolute_url}/@@plone-addsite"\n+                    action="${action}">\n                 <input type="hidden" name="site_id" value="Plone${site_number}" />\n                 <button type="submit"\n                         class="btn btn-${python:\'success\' if sites else \'primary\'}"\n                         i18n:translate="">Create a new Plone site</button>\n+                <tal:comment condition="nothing">\n+                  When we have Volto, the button above will create a Volto site,\n+                  and we need an extra button below to create a Classic Plone site.\n+                </tal:comment>\n                 <a class="btn btn-secondary"\n                     i18n:translate=""\n-                    tal:attributes="href string:${context/absolute_url}/@@plone-addsite?site_id=Plone${site_number}&amp;advanced=1"\n+                    tal:condition="view/has_volto"\n+                    href="${action}?site_id=Plone${site_number}&amp;classic=1"\n+                    >Create Classic Plone site</a>\n+                <a class="btn btn-secondary"\n+                    i18n:translate=""\n+                    href="${action}?site_id=Plone${site_number}&amp;advanced=1"\n                     >Advanced</a>\n             </form>\n         </div>\ndiff --git a/Products/CMFPlone/catalog.zcml b/Products/CMFPlone/catalog.zcml\nindex 97d2852553..ddd04b531f 100644\n--- a/Products/CMFPlone/catalog.zcml\n+++ b/Products/CMFPlone/catalog.zcml\n@@ -17,7 +17,6 @@\n     <adapter factory=".CatalogTool.is_folderish"           name="is_folderish" />\n     <adapter factory=".CatalogTool.is_default_page"        name="is_default_page" />\n     <adapter factory=".CatalogTool.getIcon"                name="getIcon" />\n-    <adapter factory=".CatalogTool.location"               name="location" />\n     <adapter factory=".CatalogTool.mime_type"              name="mime_type" />\n \n </configure>\ndiff --git a/Products/CMFPlone/controlpanel/browser/redirects-controlpanel.pt b/Products/CMFPlone/controlpanel/browser/redirects-controlpanel.pt\nindex e2d8b576ea..96a4ef99bf 100644\n--- a/Products/CMFPlone/controlpanel/browser/redirects-controlpanel.pt\n+++ b/Products/CMFPlone/controlpanel/browser/redirects-controlpanel.pt\n@@ -298,8 +298,7 @@\n             <button class="btn btn-danger"\n               type="submit"\n               value="Remove selected"\n-              name="form.button.Remove"\n-              i18n:translate="" >\n+              name="form.button.Remove">\n                 <tal:icon tal:replace="structure python:icons.tag(\'trash\', tag_alt=\'Trash\')" /> <span i18n:translate="">Remove selected</span>\n             </button>\n             <button class="btn btn-danger"\ndiff --git a/Products/CMFPlone/profiles/default/metadata.xml b/Products/CMFPlone/profiles/default/metadata.xml\nindex a1c671787b..a0614cd2e6 100644\n--- a/Products/CMFPlone/profiles/default/metadata.xml\n+++ b/Products/CMFPlone/profiles/default/metadata.xml\n@@ -1,4 +1,4 @@\n <?xml version="1.0"?>\n <metadata>\n-  <version>6001</version>\n+  <version>6002</version>\n </metadata>\ndiff --git a/Products/CMFPlone/relationhelper.py b/Products/CMFPlone/relationhelper.py\nindex d0ff347abd..0a8f041ce5 100644\n--- a/Products/CMFPlone/relationhelper.py\n+++ b/Products/CMFPlone/relationhelper.py\n@@ -1,8 +1,6 @@\n from collections import Counter\n from collections import defaultdict\n from five.intid.intid import addIntIdSubscriber\n-from plone.app.iterate.dexterity import ITERATE_RELATION_NAME\n-from plone.app.iterate.dexterity.relation import StagingRelationValue\n from plone.app.linkintegrity.handlers import modifiedContent\n from plone.app.linkintegrity.utils import referencedRelationship\n from plone.app.relationfield.event import update_behavior_relations\n@@ -26,6 +24,18 @@\n from zope.intid.interfaces import ObjectMissingError\n \n import logging\n+import pkg_resources\n+\n+try:\n+    # "iterate" is not a dependency of CMFPlone, but a consumer of it\n+    pkg_resources.get_distribution("plone.app.iterate")\n+except pkg_resources.DistributionNotFound:\n+    HAS_ITERATE = False\n+else:\n+    HAS_ITERATE = True\n+    from plone.app.iterate.dexterity import ITERATE_RELATION_NAME\n+    from plone.app.iterate.dexterity.relation import StagingRelationValue\n+\n \n logger = logging.getLogger(__name__)\n \n@@ -183,7 +193,7 @@ def restore_relations(context=None, all_relations=None):\n             update_linkintegrity.add(item[\'from_uuid\'])\n             continue\n \n-        if from_attribute == ITERATE_RELATION_NAME:\n+        if HAS_ITERATE and from_attribute == ITERATE_RELATION_NAME:\n             # Iterate relations are not set as values of fields\n             relation = StagingRelationValue(to_id)\n             event._setRelation(source_obj, ITERATE_RELATION_NAME, relation)\ndiff --git a/Products/CMFPlone/tests/robot/test_folder_contents.robot b/Products/CMFPlone/tests/robot/test_folder_contents.robot\nindex 6e3275a58b..78092f2298 100644\n--- a/Products/CMFPlone/tests/robot/test_folder_contents.robot\n+++ b/Products/CMFPlone/tests/robot/test_folder_contents.robot\n@@ -61,7 +61,9 @@ I click the \'${link_name}\' link\n I select all the elements\n     Wait until page contains element  css=.pat-structure .select-all\n     Wait until page contains element  css=.itemRow\n-    Click Element  css=.pat-structure .select-all\n+    ${select_all_selector}  Set Variable  .pat-structure .select-all\n+    Wait Until Element Is Visible  css=${select_all_selector}\n+    Click Element  css=${select_all_selector}\n \n the four elements got selected\n     Checkbox Should Be Selected  css=tr[data-id="doc1"] input\ndiff --git a/Products/CMFPlone/tests/robot/test_querystring.robot b/Products/CMFPlone/tests/robot/test_querystring.robot\nindex be0c349ce6..fb98236c81 100644\n--- a/Products/CMFPlone/tests/robot/test_querystring.robot\n+++ b/Products/CMFPlone/tests/robot/test_querystring.robot\n@@ -318,10 +318,14 @@ I expect to be in Simple mode\n \n open the select box titled ${NAME}\n     Click Element  css=body\n-    Click Element  css=.querystring-criteria-${NAME} .select2-container a\n+    ${select_criteria_selector}  Set Variable  .querystring-criteria-${NAME} .select2-container a\n+    Wait Until Element Is Visible  css=${select_criteria_selector}\n+    Click Element  css=${select_criteria_selector}\n \n select index type ${INDEX}\n-    Input Text  jquery=.select2-drop-active[style*="display: block;"] input   text=${INDEX}\n+    ${input_selector}  Set Variable  .select2-drop-active[style*="display: block;"] input\n+    Wait Until Element Is Visible  jquery=${input_selector}\n+    Input Text  jquery=${input_selector}   text=${INDEX}\n     Press Key  jquery=:focus  \\\\13\n \n we expect ${NUM} hits\ndiff --git a/Products/CMFPlone/tests/testBrowserDefault.py b/Products/CMFPlone/tests/testBrowserDefault.py\nindex 3d8bc83e4d..45557b5150 100644\n--- a/Products/CMFPlone/tests/testBrowserDefault.py\n+++ b/Products/CMFPlone/tests/testBrowserDefault.py\n@@ -278,10 +278,10 @@ def testCall(self):\n         self.assertFalseDiff(resolved, target)\n \n     def testDefaultViews(self):\n-        self.assertEqual(self.portal.getLayout(), \'listing_view\')\n+        self.assertEqual(self.portal.getLayout(), \'document_view\')\n         self.assertEqual(self.portal.getDefaultPage(), \'front-page\')\n         self.assertEqual(self.portal.defaultView(), \'front-page\')\n-        self.assertEqual(self.portal.getDefaultLayout(), \'listing_view\')\n+        self.assertEqual(self.portal.getDefaultLayout(), \'document_view\')\n         layoutKeys = [v[0] for v in self.portal.getAvailableLayouts()]\n         self.assertTrue(\'listing_view\' in layoutKeys)\n         self.assertEqual(self.portal.__browser_default__(None),\n@@ -297,7 +297,7 @@ def testSetLayout(self):\n         self.assertEqual(self.portal.getLayout(), \'summary_view\')\n         self.assertEqual(self.portal.getDefaultPage(), None)\n         self.assertEqual(self.portal.defaultView(), \'summary_view\')\n-        self.assertEqual(self.portal.getDefaultLayout(), \'listing_view\')\n+        self.assertEqual(self.portal.getDefaultLayout(), \'document_view\')\n         layoutKeys = [v[0] for v in self.portal.getAvailableLayouts()]\n         self.assertTrue(\'summary_view\' in layoutKeys)\n \n@@ -327,8 +327,8 @@ def testSetDefaultPage(self):\n                          (self.portal, [\'ad\', ]))\n \n         # still have layout settings\n-        self.assertEqual(self.portal.getLayout(), \'listing_view\')\n-        self.assertEqual(self.portal.getDefaultLayout(), \'listing_view\')\n+        self.assertEqual(self.portal.getLayout(), \'document_view\')\n+        self.assertEqual(self.portal.getDefaultLayout(), \'document_view\')\n         layoutKeys = [v[0] for v in self.portal.getAvailableLayouts()]\n         self.assertTrue(\'listing_view\' in layoutKeys)\n \n@@ -373,13 +373,13 @@ def testSetLayoutUnsetsDefaultPage(self):\n \n     def testMissingTemplatesIgnored(self):\n         self.portal.getTypeInfo() \\\n-            .manage_changeProperties(view_methods=[\'listing_view\', \'foo\'])\n+            .manage_changeProperties(view_methods=[\'document_view\', \'foo\'])\n         views = [v[0] for v in self.portal.getAvailableLayouts()]\n-        self.assertTrue(views == [\'listing_view\'])\n+        self.assertTrue(views == [\'document_view\'])\n \n     def testMissingPageIgnored(self):\n         self.portal.setDefaultPage(\'inexistent\')\n         self.assertEqual(self.portal.getDefaultPage(), None)\n-        self.assertEqual(self.portal.defaultView(), \'listing_view\')\n+        self.assertEqual(self.portal.defaultView(), \'document_view\')\n         self.assertEqual(self.portal.__browser_default__(None),\n-                         (self.portal, [\'listing_view\', ]))\n+                         (self.portal, [\'document_view\', ]))\ndiff --git a/Products/CMFPlone/tests/testCatalogTool.py b/Products/CMFPlone/tests/testCatalogTool.py\nindex 2dd3fe05f2..50ab21231a 100644\n--- a/Products/CMFPlone/tests/testCatalogTool.py\n+++ b/Products/CMFPlone/tests/testCatalogTool.py\n@@ -31,7 +31,7 @@\n group2 = \'g2\'\n \n base_content = [\'Members\', \'aggregator\', \'aggregator\',\n-                \'events\', \'news\', TEST_USER_ID, \'doc\']\n+                \'events\', \'news\', \'plone\', TEST_USER_ID, \'doc\']\n \n \n class TestCatalogSetup(PloneTestCase):\ndiff --git a/Products/CMFPlone/tests/testPortalCreation.py b/Products/CMFPlone/tests/testPortalCreation.py\nindex 327f1f4bdd..8dcaea6be8 100644\n--- a/Products/CMFPlone/tests/testPortalCreation.py\n+++ b/Products/CMFPlone/tests/testPortalCreation.py\n@@ -86,6 +86,13 @@ def testWorkflowIsActionProvider(self):\n             \'portal_workflow\' in self.actions.listActionProviders()\n         )\n \n+    def testPortalIsIndexed(self):\n+        # The Plone site should be cataloged\n+        res = self.catalog(getId="plone")\n+        self.assertEqual(len(res), 1)\n+        self.assertEqual(res[0].getId, "plone")\n+        self.assertEqual(res[0].Title, "Welcome to Plone")\n+\n     def testMembersFolderMetaType(self):\n         # Members folder should have meta_type \'Dexterity Container\'\n         members = self.membership.getMembersFolder()\ndiff --git a/news/3314.bugfix b/news/3314.bugfix\nnew file mode 100644\nindex 0000000000..51014203e4\n--- /dev/null\n+++ b/news/3314.bugfix\n@@ -0,0 +1 @@\n+The Plone site root is cataloged\ndiff --git a/news/3323.bugifx b/news/3323.bugifx\nnew file mode 100644\nindex 0000000000..957a8924b3\n--- /dev/null\n+++ b/news/3323.bugifx\n@@ -0,0 +1,2 @@\n+Fix #3323DX-Site-Root: ZMI Nav-Tree is no longer expandable.\n+[jensens]\n\\ No newline at end of file\ndiff --git a/news/3337.bugfix b/news/3337.bugfix\nnew file mode 100644\nindex 0000000000..e37d1f9b8c\n--- /dev/null\n+++ b/news/3337.bugfix\n@@ -0,0 +1,3 @@\n+Fixes #3337: \n+Remove dead code that wont work in Py 3 anyway if called (cmp).\n+[jensens]\ndiff --git a/news/3342.bugfix b/news/3342.bugfix\nnew file mode 100644\nindex 0000000000..2ad28db5a2\n--- /dev/null\n+++ b/news/3342.bugfix\n@@ -0,0 +1,2 @@\n+Remove DYNAMIC_CONTENT from translation files\n+[erral]\ndiff --git a/news/3344.feature b/news/3344.feature\nnew file mode 100644\nindex 0000000000..80ac62ffc0\n--- /dev/null\n+++ b/news/3344.feature\n@@ -0,0 +1,2 @@\n+On Zope root, create Volto site by default.\n+[maurits]\ndiff --git a/news/3347.bugfix b/news/3347.bugfix\nnew file mode 100644\nindex 0000000000..426bd8d81e\n--- /dev/null\n+++ b/news/3347.bugfix\n@@ -0,0 +1 @@\n+Remove adapter for index location. [wesleybl]\n\\ No newline at end of file\ndiff --git a/news/3354.bugfix b/news/3354.bugfix\nnew file mode 100644\nindex 0000000000..6a6279cae9\n--- /dev/null\n+++ b/news/3354.bugfix\n@@ -0,0 +1,2 @@\n+Use document_view as default for site root.\n+[agitator]\n\\ No newline at end of file\ndiff --git a/news/3356.bugfix b/news/3356.bugfix\nnew file mode 100644\nindex 0000000000..5578a59bfa\n--- /dev/null\n+++ b/news/3356.bugfix\n@@ -0,0 +1 @@\n+Add missing lxml dependency [MrTango]\n\\ No newline at end of file\ndiff --git a/news/3357.bugfix b/news/3357.bugfix\nnew file mode 100644\nindex 0000000000..dfb9316305\n--- /dev/null\n+++ b/news/3357.bugfix\n@@ -0,0 +1,2 @@\n+Fixes #3352 - dependency indirection on plone.app.iterate [jensens]\n+\ndiff --git a/news/3366.bugfix b/news/3366.bugfix\nnew file mode 100644\nindex 0000000000..29be868560\n--- /dev/null\n+++ b/news/3366.bugfix\n@@ -0,0 +1,2 @@\n+In Portal: use security decorators\n+[jensens]\ndiff --git a/news/6002.bugfix b/news/6002.bugfix\nnew file mode 100644\nindex 0000000000..ff1832f979\n--- /dev/null\n+++ b/news/6002.bugfix\n@@ -0,0 +1 @@\n+Updated metadata version to 6002.  [maurits]\ndiff --git a/setup.py b/setup.py\nindex 8e3f0d7ea3..93c30658c2 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,7 +1,7 @@\n from setuptools import setup\n from setuptools import find_packages\n \n-version = \'6.0.0a1.dev2\'\n+version = \'6.0.0a2.dev0\'\n \n \n setup(\n@@ -42,6 +42,7 @@\n         \'ExtensionClass\',\n         \'five.customerize\',\n         \'five.localsitemanager\',\n+        \'lxml\',\n         \'mockup\',\n         \'Pillow\',\n         \'plone.api >= 1.4.4\',\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2021-12-02T12:30:38+01:00
Author: Alessandro Pisa (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/f3c3e98dafa51979e09b380f7ab7533f920f2271

Merge pull request #3340 from plone/plip-3339-plone.autoinclude

PLIP 3339: Replace z3c.autoinclude with plone.autoinclude.

Files changed:
A news/3339.breaking
M Products/CMFPlone/configure.zcml
M Products/CMFPlone/meta.zcml
M Products/CMFPlone/overrides.zcml
M setup.py

b'diff --git a/Products/CMFPlone/configure.zcml b/Products/CMFPlone/configure.zcml\nindex 4594586eb8..9d9f68b282 100644\n--- a/Products/CMFPlone/configure.zcml\n+++ b/Products/CMFPlone/configure.zcml\n@@ -98,10 +98,10 @@\n       trusted="y"\n       />\n \n-  <!-- include plone plugins with z3c.autoinclude -->\n-  <includePlugins\n+  <!-- include plone plugins with plone.autoinclude -->\n+  <autoIncludePlugins\n       zcml:condition="not-have disable-autoinclude"\n-      package="plone"\n+      target="plone"\n       file="configure.zcml"\n       />\n \ndiff --git a/Products/CMFPlone/meta.zcml b/Products/CMFPlone/meta.zcml\nindex dbc42f3571..23422680dc 100644\n--- a/Products/CMFPlone/meta.zcml\n+++ b/Products/CMFPlone/meta.zcml\n@@ -25,15 +25,14 @@\n \n     <include package="plone.app.portlets" file="meta.zcml" />\n \n-    <!-- z3c.autoinclude\'s `includePlugins` directive finds\n+    <!-- plone.autoinclude\'s `autoIncludePlugins` directive finds\n          and executes ZCML files from any installed packages\n          that provide an entry point to declare themselves a\n          plone plugin -->\n-    <include package="z3c.autoinclude" file="meta.zcml" />\n-\n-    <includePlugins\n+    <include package="plone.autoinclude" file="meta.zcml" />\n+    <autoIncludePlugins\n         zcml:condition="not-have disable-autoinclude"\n-        package="plone"\n+        target="plone"\n         file="meta.zcml"\n         />\n \ndiff --git a/Products/CMFPlone/overrides.zcml b/Products/CMFPlone/overrides.zcml\nindex b607ef576a..27f8494efe 100644\n--- a/Products/CMFPlone/overrides.zcml\n+++ b/Products/CMFPlone/overrides.zcml\n@@ -12,10 +12,10 @@\n         component="Products.CMFPlone.unicodeconflictresolver.UTF8EncodingConflictResolver"\n         />\n \n-    <!-- include plone plugins with z3c.autoinclude -->\n-    <includePluginsOverrides\n+    <!-- include plone plugins with plone.autoinclude -->\n+    <autoIncludePluginsOverrides\n         zcml:condition="not-have disable-autoinclude"\n-        package="plone"\n+        target="plone"\n         file="overrides.zcml"\n         />\n \ndiff --git a/news/3339.breaking b/news/3339.breaking\nnew file mode 100644\nindex 0000000000..06a8b4e554\n--- /dev/null\n+++ b/news/3339.breaking\n@@ -0,0 +1,3 @@\n+PLIP 3339: Replace ``z3c.autoinclude`` with ``plone.autoinclude``.\n+Note: ``includeDependencies`` is no longer supported.\n+[maurits, tschorr]\ndiff --git a/setup.py b/setup.py\nindex 6f4f544436..93c30658c2 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -108,7 +108,7 @@\n         \'pyScss\',\n         \'setuptools>=36.2\',\n         \'transaction\',\n-        \'z3c.autoinclude\',\n+        \'plone.autoinclude\',\n         \'ZODB3\',\n         \'Zope[wsgi] >= 4.0\',\n         \'zope.app.locales >= 3.6.0\',\n'

