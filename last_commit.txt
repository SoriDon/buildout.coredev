Repository: plone.dexterity


Branch: refs/heads/master
Date: 2017-05-05T15:06:04+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.dexterity/commit/a4663f6eee93edf52fe837c0a65f1f0751abca8e

fix problem with newer zope.interface not accepting None as name (#68)

Files changed:
M CHANGES.rst
M plone/dexterity/schema.py
M plone/dexterity/tests/test_content.py

diff --git a/CHANGES.rst b/CHANGES.rst
index dd73928..707ade6 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -15,7 +15,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Fix problem with new zope.interface not accepting None as value.
+  [jensens]
 
 
 2.5.1 (2017-02-27)
diff --git a/plone/dexterity/schema.py b/plone/dexterity/schema.py
index 4205b41..006266c 100644
--- a/plone/dexterity/schema.py
+++ b/plone/dexterity/schema.py
@@ -49,10 +49,13 @@ def volatile(func):
     def decorator(self, portal_type):
         """lookup fti from portal_type and cache
         """
-        if IDexterityFTI.providedBy(portal_type):
-            fti = portal_type
+        if portal_type is not None:
+            if IDexterityFTI.providedBy(portal_type):
+                fti = portal_type
+            else:
+                fti = queryUtility(IDexterityFTI, name=portal_type)
         else:
-            fti = queryUtility(IDexterityFTI, name=portal_type)
+            fti = None
         if fti is not None and self.cache_enabled:
             key = '_v_schema_%s' % func.__name__
             cache = getattr(fti, key, _MARKER)
@@ -213,7 +216,8 @@ def clear(self):
 
     @synchronized(lock)
     def invalidate(self, fti):
-        if not IDexterityFTI.providedBy(fti):
+        if fti is not None and not IDexterityFTI.providedBy(fti):
+            # fti is a name, lookup
             fti = queryUtility(IDexterityFTI, name=fti)
         if fti is not None:
             invalidate_cache(fti)
@@ -225,6 +229,7 @@ def modified(self, fti):
         if fti:
             return fti._p_mtime
 
+
 SCHEMA_CACHE = SchemaCache()
 
 
@@ -347,8 +352,10 @@ def __call__(self, name, module):
 
             if is_default_schema:
                 alsoProvides(schema, IContentType)
-
-        fti = queryUtility(IDexterityFTI, name=portal_type)
+        if portal_type is not None:
+            fti = queryUtility(IDexterityFTI, name=portal_type)
+        else:
+            fti = None
         if fti is None and name not in self._transient_SCHEMA_CACHE:
             self._transient_SCHEMA_CACHE[name] = schema
         elif fti is not None:
diff --git a/plone/dexterity/tests/test_content.py b/plone/dexterity/tests/test_content.py
index d92964d..e9102a1 100644
--- a/plone/dexterity/tests/test_content.py
+++ b/plone/dexterity/tests/test_content.py
@@ -259,6 +259,7 @@ class IMarker2(Interface):
         fti_mock.lookupSchema = Mock(return_value=ISchema)
         fti_mock.behaviors = ['behavior1', 'behavior2']
         self.mock_utility(fti_mock, IDexterityFTI, name=u"testtype")
+        alsoProvides(fti_mock, IDexterityFTI)
 
         # start clean
         SCHEMA_CACHE.clear()


