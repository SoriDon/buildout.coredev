Repository: plone.app.layout


Branch: refs/heads/master
Date: 2016-10-22T22:57:06-04:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.layout/commit/071a32e768e2240a85ba7cc35f331b4dbcf96ccf

Removed ZopeTestCase from the tests.

Files changed:
M CHANGES.rst
M plone/app/layout/analytics/tests/analytics.txt
M plone/app/layout/analytics/tests/test_doctests.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 864c7cb..64aefe9 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,6 +14,9 @@ New features:
 
 Bug fixes:
 
+- Removed ZopeTestCase from the tests.
+  [ivanteoh, maurits]
+
 - Add default icon for top-level contentview toolbar entries
   [alecm]
 
diff --git a/plone/app/layout/analytics/tests/analytics.txt b/plone/app/layout/analytics/tests/analytics.txt
index dc62bdb..44fec51 100644
--- a/plone/app/layout/analytics/tests/analytics.txt
+++ b/plone/app/layout/analytics/tests/analytics.txt
@@ -1,8 +1,9 @@
 We need a view on the content.
 
-    >>> request = self.app.REQUEST
+    >>> request = layer['request']
+    >>> portal = layer['portal']
     >>> from zope.publisher.browser import BrowserView
-    >>> view = BrowserView(self.portal, request)
+    >>> view = BrowserView(portal, request)
 
     >>> from plone.app.layout.viewlets.interfaces import IPortalFooter
     >>> from Products.Five.viewlet.manager import ViewletManager
@@ -10,7 +11,7 @@ We need a view on the content.
 
 Now we can instantiate the manager.
 
-    >>> manager = Footer(self.portal, request, view)
+    >>> manager = Footer(portal, request, view)
 
 Set analytics (webstats_js) code through the controlpanel
 
diff --git a/plone/app/layout/analytics/tests/test_doctests.py b/plone/app/layout/analytics/tests/test_doctests.py
index 9e74c3e..d43fa0d 100644
--- a/plone/app/layout/analytics/tests/test_doctests.py
+++ b/plone/app/layout/analytics/tests/test_doctests.py
@@ -1,5 +1,7 @@
 # -*- coding: utf-8 -*-
 from plone.app.layout.analytics.tests import base
+from plone.testing import layered
+from plone.app.layout.testing import FUNCTIONAL_TESTING
 from Testing import ZopeTestCase as ztc
 
 import doctest
@@ -10,11 +12,17 @@
                doctest.ELLIPSIS |
                doctest.NORMALIZE_WHITESPACE)
 
+normal_testfiles = [
+    'analytics.txt',
+]
+
 
 def test_suite():
-    return unittest.TestSuite((
-        ztc.ZopeDocFileSuite(
-            'tests/analytics.txt', package='plone.app.layout.analytics',
-            test_class=base.AnalyticsFunctionalTestCase,
-            optionflags=OPTIONFLAGS),
-    ))
+    suite = unittest.TestSuite()
+    suite.addTests([
+        layered(doctest.DocFileSuite(test,
+                                     optionflags=OPTIONFLAGS,
+                                     ),
+                layer=FUNCTIONAL_TESTING)
+        for test in normal_testfiles])
+    return suite


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2016-10-30T00:55:26+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/b801687eea1579c65c999e1b745c49006d4c35b7

Merge pull request #98 from plone/remove-zopetestcase

Removed ZopeTestCase from the tests.

Files changed:
M CHANGES.rst
M plone/app/layout/analytics/tests/analytics.txt
M plone/app/layout/analytics/tests/test_doctests.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 864c7cb..64aefe9 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,6 +14,9 @@ New features:
 
 Bug fixes:
 
+- Removed ZopeTestCase from the tests.
+  [ivanteoh, maurits]
+
 - Add default icon for top-level contentview toolbar entries
   [alecm]
 
diff --git a/plone/app/layout/analytics/tests/analytics.txt b/plone/app/layout/analytics/tests/analytics.txt
index dc62bdb..44fec51 100644
--- a/plone/app/layout/analytics/tests/analytics.txt
+++ b/plone/app/layout/analytics/tests/analytics.txt
@@ -1,8 +1,9 @@
 We need a view on the content.
 
-    >>> request = self.app.REQUEST
+    >>> request = layer['request']
+    >>> portal = layer['portal']
     >>> from zope.publisher.browser import BrowserView
-    >>> view = BrowserView(self.portal, request)
+    >>> view = BrowserView(portal, request)
 
     >>> from plone.app.layout.viewlets.interfaces import IPortalFooter
     >>> from Products.Five.viewlet.manager import ViewletManager
@@ -10,7 +11,7 @@ We need a view on the content.
 
 Now we can instantiate the manager.
 
-    >>> manager = Footer(self.portal, request, view)
+    >>> manager = Footer(portal, request, view)
 
 Set analytics (webstats_js) code through the controlpanel
 
diff --git a/plone/app/layout/analytics/tests/test_doctests.py b/plone/app/layout/analytics/tests/test_doctests.py
index 9e74c3e..d43fa0d 100644
--- a/plone/app/layout/analytics/tests/test_doctests.py
+++ b/plone/app/layout/analytics/tests/test_doctests.py
@@ -1,5 +1,7 @@
 # -*- coding: utf-8 -*-
 from plone.app.layout.analytics.tests import base
+from plone.testing import layered
+from plone.app.layout.testing import FUNCTIONAL_TESTING
 from Testing import ZopeTestCase as ztc
 
 import doctest
@@ -10,11 +12,17 @@
                doctest.ELLIPSIS |
                doctest.NORMALIZE_WHITESPACE)
 
+normal_testfiles = [
+    'analytics.txt',
+]
+
 
 def test_suite():
-    return unittest.TestSuite((
-        ztc.ZopeDocFileSuite(
-            'tests/analytics.txt', package='plone.app.layout.analytics',
-            test_class=base.AnalyticsFunctionalTestCase,
-            optionflags=OPTIONFLAGS),
-    ))
+    suite = unittest.TestSuite()
+    suite.addTests([
+        layered(doctest.DocFileSuite(test,
+                                     optionflags=OPTIONFLAGS,
+                                     ),
+                layer=FUNCTIONAL_TESTING)
+        for test in normal_testfiles])
+    return suite


