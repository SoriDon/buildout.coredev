Repository: plone.app.layout


Branch: refs/heads/master
Date: 2023-02-09T16:18:22+01:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/f3f7d0b3d2335d01bb5a2ce2ba77198de99a6b20

Fix the deprecation warnings

Closes #331

Files changed:
A news/331.bugfix
M plone/app/layout/globals/tests/test_context.py
M plone/app/layout/testing.py

b'diff --git a/news/331.bugfix b/news/331.bugfix\nnew file mode 100644\nindex 00000000..e72715cf\n--- /dev/null\n+++ b/news/331.bugfix\n@@ -0,0 +1 @@\n+Remove deprecation warnings\ndiff --git a/plone/app/layout/globals/tests/test_context.py b/plone/app/layout/globals/tests/test_context.py\nindex e1f5eb1c..5b41e7e6 100644\n--- a/plone/app/layout/globals/tests/test_context.py\n+++ b/plone/app/layout/globals/tests/test_context.py\n@@ -6,7 +6,7 @@\n from plone.locking.interfaces import ILockable\n from Products.CMFDynamicViewFTI.interfaces import IBrowserDefault\n from plone.base.interfaces import INonStructuralFolder\n-from Products.CMFPlone.utils import _createObjectByType\n+from plone.base.utils import unrestricted_construct_instance\n from zope.interface import alsoProvides\n from zope.interface import directlyProvides\n \n@@ -70,7 +70,7 @@ def test_view_template_id(self):\n     def test_view_template_id_nonbrowserdefault(self):\n         # The view template id is taken from the FTI for non-browserdefault\n         # (non ATContentTypes) content\n-        tf = _createObjectByType("TempFolder", self.folder, "tf")\n+        tf = unrestricted_construct_instance("TempFolder", self.folder, "tf")\n         tfview = tf.restrictedTraverse("@@plone_context_state")\n         self.assertEqual(tfview.view_template_id(), "index_html")\n \n@@ -85,7 +85,7 @@ def test_view_template_id_nonbrowserdefault_nonempty(self):\n         view_expression = view_action.getActionExpression()\n         view_action.setActionExpression("foobar")\n \n-        tf = _createObjectByType("TempFolder", self.folder, "tf")\n+        tf = unrestricted_construct_instance("TempFolder", self.folder, "tf")\n         tf.manage_addLocalRoles(TEST_USER_ID, ("Manager",))\n         tfview = tf.restrictedTraverse("@@plone_context_state")\n         self.assertEqual(tfview.view_template_id(), "foobar")\n@@ -105,7 +105,7 @@ def test_view_template_id_nonbrowserdefault_restricted(self):\n         view_perms = view_action.getPermissions()\n         view_action.edit(permissions=("Modify Portal Content",))\n \n-        tf = _createObjectByType("TempFolder", self.folder, "tf")\n+        tf = unrestricted_construct_instance("TempFolder", self.folder, "tf")\n         tf.manage_addLocalRoles(TEST_USER_ID, ("Manager",))\n         tfview = tf.restrictedTraverse("@@plone_context_state")\n         self.assertEqual(tfview.view_template_id(), "index_html")\ndiff --git a/plone/app/layout/testing.py b/plone/app/layout/testing.py\nindex 0c95f1cd..6e59c9d6 100644\n--- a/plone/app/layout/testing.py\n+++ b/plone/app/layout/testing.py\n@@ -4,7 +4,7 @@\n from plone.app.testing import PloneSandboxLayer\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import TEST_USER_PASSWORD\n-from Products.CMFPlone.utils import _createObjectByType\n+from plone.base.utils import unrestricted_construct_instance\n \n \n class Fixture(PloneSandboxLayer):\n@@ -18,7 +18,7 @@ def setUpZope(self, app, configurationContext):\n         self.loadZCML(package=plone.app.layout)\n \n     def setUpPloneSite(self, portal):\n-        _createObjectByType("Folder", portal, id="Members")\n+        unrestricted_construct_instance("Folder", portal, id="Members")\n         mtool = portal.portal_membership\n         if not mtool.getMemberareaCreationFlag():\n             mtool.setMemberareaCreationFlag()\n'

Repository: plone.app.layout


Branch: refs/heads/master
Date: 2023-02-09T16:23:54+01:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/78840c86fa07ad96887bbc24cc2e3616f2d04fdc

Import the Plone message factory from plone.base

Files changed:
M plone/app/layout/viewlets/common.py
M plone/app/layout/viewlets/content.py

b'diff --git a/plone/app/layout/viewlets/common.py b/plone/app/layout/viewlets/common.py\nindex 0beddc00..4fbe4b8f 100644\n--- a/plone/app/layout/viewlets/common.py\n+++ b/plone/app/layout/viewlets/common.py\n@@ -6,13 +6,13 @@\n from html import escape\n from plone.app.layout.globals.interfaces import IViewView\n from plone.app.layout.navigation.root import getNavigationRoot\n+from plone.base import PloneMessageFactory as _\n from plone.base.utils import safe_text\n from plone.i18n.interfaces import ILanguageSchema\n from plone.memoize.view import memoize\n from plone.protect.utils import addTokenToUrl\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone import PloneMessageFactory as _\n from plone.base.interfaces import IPloneSiteRoot\n from plone.base.interfaces import ISearchSchema\n from plone.base.interfaces import ISiteSchema\ndiff --git a/plone/app/layout/viewlets/content.py b/plone/app/layout/viewlets/content.py\nindex f52c4faf..9c65f270 100644\n--- a/plone/app/layout/viewlets/content.py\n+++ b/plone/app/layout/viewlets/content.py\n@@ -7,6 +7,7 @@\n from plone.app.multilingual.browser.vocabularies import translated_languages\n from plone.app.multilingual.interfaces import ITranslatable\n from plone.app.multilingual.interfaces import ITranslationManager\n+from plone.base import PloneMessageFactory as _\n from plone.base.interfaces import ISecuritySchema\n from plone.base.interfaces import ISiteSchema\n from plone.base.utils import base_hasattr\n@@ -18,7 +19,6 @@\n from Products.CMFCore.utils import getToolByName\n from Products.CMFCore.WorkflowCore import WorkflowException\n from Products.CMFEditions.Permissions import AccessPreviousVersions\n-from Products.CMFPlone import PloneMessageFactory as _\n from Products.CMFPlone.utils import log\n from Products.Five.browser import BrowserView\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n'

Repository: plone.app.layout


Branch: refs/heads/master
Date: 2023-02-09T23:36:37+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.layout/commit/001f1a406e4caba8931f5e86f3b05537cb16b338

Merge pull request #332 from plone/331.bugfix

Fix the deprecation warnings

Files changed:
A news/331.bugfix
M plone/app/layout/globals/tests/test_context.py
M plone/app/layout/testing.py
M plone/app/layout/viewlets/common.py
M plone/app/layout/viewlets/content.py

b'diff --git a/news/331.bugfix b/news/331.bugfix\nnew file mode 100644\nindex 00000000..e72715cf\n--- /dev/null\n+++ b/news/331.bugfix\n@@ -0,0 +1 @@\n+Remove deprecation warnings\ndiff --git a/plone/app/layout/globals/tests/test_context.py b/plone/app/layout/globals/tests/test_context.py\nindex e1f5eb1c..5b41e7e6 100644\n--- a/plone/app/layout/globals/tests/test_context.py\n+++ b/plone/app/layout/globals/tests/test_context.py\n@@ -6,7 +6,7 @@\n from plone.locking.interfaces import ILockable\n from Products.CMFDynamicViewFTI.interfaces import IBrowserDefault\n from plone.base.interfaces import INonStructuralFolder\n-from Products.CMFPlone.utils import _createObjectByType\n+from plone.base.utils import unrestricted_construct_instance\n from zope.interface import alsoProvides\n from zope.interface import directlyProvides\n \n@@ -70,7 +70,7 @@ def test_view_template_id(self):\n     def test_view_template_id_nonbrowserdefault(self):\n         # The view template id is taken from the FTI for non-browserdefault\n         # (non ATContentTypes) content\n-        tf = _createObjectByType("TempFolder", self.folder, "tf")\n+        tf = unrestricted_construct_instance("TempFolder", self.folder, "tf")\n         tfview = tf.restrictedTraverse("@@plone_context_state")\n         self.assertEqual(tfview.view_template_id(), "index_html")\n \n@@ -85,7 +85,7 @@ def test_view_template_id_nonbrowserdefault_nonempty(self):\n         view_expression = view_action.getActionExpression()\n         view_action.setActionExpression("foobar")\n \n-        tf = _createObjectByType("TempFolder", self.folder, "tf")\n+        tf = unrestricted_construct_instance("TempFolder", self.folder, "tf")\n         tf.manage_addLocalRoles(TEST_USER_ID, ("Manager",))\n         tfview = tf.restrictedTraverse("@@plone_context_state")\n         self.assertEqual(tfview.view_template_id(), "foobar")\n@@ -105,7 +105,7 @@ def test_view_template_id_nonbrowserdefault_restricted(self):\n         view_perms = view_action.getPermissions()\n         view_action.edit(permissions=("Modify Portal Content",))\n \n-        tf = _createObjectByType("TempFolder", self.folder, "tf")\n+        tf = unrestricted_construct_instance("TempFolder", self.folder, "tf")\n         tf.manage_addLocalRoles(TEST_USER_ID, ("Manager",))\n         tfview = tf.restrictedTraverse("@@plone_context_state")\n         self.assertEqual(tfview.view_template_id(), "index_html")\ndiff --git a/plone/app/layout/testing.py b/plone/app/layout/testing.py\nindex 0c95f1cd..6e59c9d6 100644\n--- a/plone/app/layout/testing.py\n+++ b/plone/app/layout/testing.py\n@@ -4,7 +4,7 @@\n from plone.app.testing import PloneSandboxLayer\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import TEST_USER_PASSWORD\n-from Products.CMFPlone.utils import _createObjectByType\n+from plone.base.utils import unrestricted_construct_instance\n \n \n class Fixture(PloneSandboxLayer):\n@@ -18,7 +18,7 @@ def setUpZope(self, app, configurationContext):\n         self.loadZCML(package=plone.app.layout)\n \n     def setUpPloneSite(self, portal):\n-        _createObjectByType("Folder", portal, id="Members")\n+        unrestricted_construct_instance("Folder", portal, id="Members")\n         mtool = portal.portal_membership\n         if not mtool.getMemberareaCreationFlag():\n             mtool.setMemberareaCreationFlag()\ndiff --git a/plone/app/layout/viewlets/common.py b/plone/app/layout/viewlets/common.py\nindex 0beddc00..4fbe4b8f 100644\n--- a/plone/app/layout/viewlets/common.py\n+++ b/plone/app/layout/viewlets/common.py\n@@ -6,13 +6,13 @@\n from html import escape\n from plone.app.layout.globals.interfaces import IViewView\n from plone.app.layout.navigation.root import getNavigationRoot\n+from plone.base import PloneMessageFactory as _\n from plone.base.utils import safe_text\n from plone.i18n.interfaces import ILanguageSchema\n from plone.memoize.view import memoize\n from plone.protect.utils import addTokenToUrl\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone import PloneMessageFactory as _\n from plone.base.interfaces import IPloneSiteRoot\n from plone.base.interfaces import ISearchSchema\n from plone.base.interfaces import ISiteSchema\ndiff --git a/plone/app/layout/viewlets/content.py b/plone/app/layout/viewlets/content.py\nindex f52c4faf..9c65f270 100644\n--- a/plone/app/layout/viewlets/content.py\n+++ b/plone/app/layout/viewlets/content.py\n@@ -7,6 +7,7 @@\n from plone.app.multilingual.browser.vocabularies import translated_languages\n from plone.app.multilingual.interfaces import ITranslatable\n from plone.app.multilingual.interfaces import ITranslationManager\n+from plone.base import PloneMessageFactory as _\n from plone.base.interfaces import ISecuritySchema\n from plone.base.interfaces import ISiteSchema\n from plone.base.utils import base_hasattr\n@@ -18,7 +19,6 @@\n from Products.CMFCore.utils import getToolByName\n from Products.CMFCore.WorkflowCore import WorkflowException\n from Products.CMFEditions.Permissions import AccessPreviousVersions\n-from Products.CMFPlone import PloneMessageFactory as _\n from Products.CMFPlone.utils import log\n from Products.Five.browser import BrowserView\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n'

