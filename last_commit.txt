Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2022-03-23T21:09:23+01:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/plone.app.discussion/commit/a79670d3a190e3bda5c85f0e38c7033600b65d70

Moved JS to Mockup control panel patterns (ES6)

Files changed:
A news/190.feature
M plone/app/discussion/browser/comments.pt
M plone/app/discussion/browser/configure.zcml
M plone/app/discussion/browser/controlpanel.pt
M plone/app/discussion/browser/moderation.pt
D plone/app/discussion/browser/javascripts/comments.js
D plone/app/discussion/browser/javascripts/controlpanel.js
D plone/app/discussion/browser/javascripts/javascripts.txt
D plone/app/discussion/browser/javascripts/moderation.js

b'diff --git a/news/190.feature b/news/190.feature\nnew file mode 100644\nindex 00000000..ba7ba0d8\n--- /dev/null\n+++ b/news/190.feature\n@@ -0,0 +1 @@\n+Moved JS to Mockup control panel patterns (ES6) [MrTango]\n\\ No newline at end of file\ndiff --git a/plone/app/discussion/browser/comments.pt b/plone/app/discussion/browser/comments.pt\nindex 9293cf6a..ab5c9e2c 100644\n--- a/plone/app/discussion/browser/comments.pt\n+++ b/plone/app/discussion/browser/comments.pt\n@@ -11,25 +11,26 @@\n                        errors options/state/getErrors|nothing;\n                        wtool context/@@plone_tools/workflow;\n                        auth_token context/@@authenticator/token|nothing"\n-           tal:condition="python:isDiscussionAllowed or has_replies"\n-           i18n:domain="plone">\n-\n-    <div class="reply" tal:condition="python:isAnon and not isAnonymousDiscussionAllowed">\n-        <form tal:attributes="action view/login_action">\n-            <button class="btn btn-primary mb-3"\n-                   type="submit"\n-                   value="Log in to add comments"\n-                   i18n:attributes="value label_login_to_add_comments;"\n-                   i18n:translate="label_login_to_add_comments"\n-                   >Log in to add comments</button>\n-        </form>\n-    </div>\n+    tal:condition="python:isDiscussionAllowed or has_replies"\n+    i18n:domain="plone">\n+    <div class="pat-discussion">\n+        <div class="reply"\n+            tal:condition="python:isAnon and not isAnonymousDiscussionAllowed">\n+            <form tal:attributes="action view/login_action">\n+                <button class="btn btn-primary mb-3"\n+                    type="submit"\n+                    value="Log in to add comments"\n+                    i18n:attributes="value label_login_to_add_comments;"\n+                    i18n:translate="label_login_to_add_comments">Log in to add comments</button>\n+            </form>\n+        </div>\n \n-    <div class="discussion" tal:condition="has_replies">\n-        <tal:getreplies repeat="reply_dict replies">\n+        <div class="discussion"\n+            tal:condition="has_replies">\n+            <tal:getreplies repeat="reply_dict replies">\n \n-            <div class="comment"\n-                 tal:define="reply reply_dict/comment;\n+                <div class="comment"\n+                    tal:define="reply reply_dict/comment;\n                              comment_id reply/getId;\n                              depth reply_dict/depth|python:0;\n                              depth python: depth > 10 and \'10\' or depth;\n@@ -40,185 +41,201 @@\n                              canEdit python:view.can_edit(reply);\n                              canDelete python:view.can_delete(reply);\n                              colorclass python:lambda x: \'state-private\' if x==\'rejected\' else (\'state-internal\' if x==\'spam\' else \'state-\'+x);"\n-                 tal:attributes="class python:\'comment level-{depth} {state}\'.format(depth= depth, state=colorclass(review_state));\n+                    tal:attributes="class python:\'comment level-{depth} {state}\'.format(depth= depth, state=colorclass(review_state));\n                                  id comment_id"\n-                 tal:condition="python:canReview or review_state == \'published\'">\n-\n-                <div class="d-flex flex-row align-items-center mb-3">\n-\n-                  <!-- commenter image -->\n-                  <div class="comment-image me-3" tal:condition="showCommenterImage">\n-                      <a href="" tal:condition="has_author_link" tal:attributes="href author_home_url">\n-                        <img src="defaultUser.png" alt="" tal:attributes="src portrait_url; alt reply/author_name" />\n-                      </a>\n-                      <img src="defaultUser.png" alt="" tal:condition="not: has_author_link" tal:attributes="src portrait_url; alt reply/author_name" />\n-                  </div>\n+                    tal:condition="python:canReview or review_state == \'published\'">\n+\n+                    <div class="d-flex flex-row align-items-center mb-3">\n+\n+                        <!-- commenter image -->\n+                        <div class="comment-image me-3"\n+                            tal:condition="showCommenterImage">\n+                            <a href=""\n+                                tal:condition="has_author_link"\n+                                tal:attributes="href author_home_url">\n+                                <img src="defaultUser.png"\n+                                    alt=""\n+                                    tal:attributes="src portrait_url; alt reply/author_name" />\n+                            </a>\n+                            <img src="defaultUser.png"\n+                                alt=""\n+                                tal:condition="not: has_author_link"\n+                                tal:attributes="src portrait_url; alt reply/author_name" />\n+                        </div>\n \n-                  <!-- commenter name and date -->\n-                  <div class="comment-author">\n+                        <!-- commenter name and date -->\n+                        <div class="comment-author">\n \n-                    <a href="" tal:condition="has_author_link" tal:attributes="href author_home_url">${reply/author_name}</a>\n+                            <a href=""\n+                                tal:condition="has_author_link"\n+                                tal:attributes="href author_home_url">${reply/author_name}</a>\n \n-                    <span tal:condition="not: has_author_link">${reply/author_name}</span>\n+                            <span tal:condition="not: has_author_link">${reply/author_name}</span>\n \n-                    <span tal:condition="not: reply/author_name" i18n:translate="label_anonymous">Anonymous</span>\n+                            <span tal:condition="not: reply/author_name"\n+                                i18n:translate="label_anonymous">Anonymous</span>\n \n-                    <br/>\n+                            <br />\n \n-                    <small class="text-muted" tal:content="python:view.format_time(reply.modification_date)">\n+                            <small class="text-muted"\n+                                tal:content="python:view.format_time(reply.modification_date)">\n                       8/23/2001 12:40:44 PM\n-                    </small>\n+                            </small>\n \n-                  </div>\n-                </div>\n+                        </div>\n+                    </div>\n \n \n \n-                <!-- comment body -->\n-                <div class="comment-body">\n+                    <!-- comment body -->\n+                    <div class="comment-body">\n \n-                    <span tal:replace="structure reply/getText" />\n+                        <span tal:replace="structure reply/getText" />\n \n-                    <!-- comment actions -->\n-                    <div class="d-flex flex-row justify-content-end mb-3">\n+                        <!-- comment actions -->\n+                        <div class="d-flex flex-row justify-content-end mb-3">\n \n-                        <div class="comment-actions actions-edit" tal:condition="python:isEditCommentAllowed and canEdit">\n+                            <div class="comment-actions actions-edit"\n+                                tal:condition="python:isEditCommentAllowed and canEdit">\n \n-                          <!-- edit -->\n-                          <a class="pat-plone-modal context comment-action action-edit btn btn-primary btn-sm"\n-                              tal:condition="auth_token"\n-                              tal:attributes="href string:${reply/absolute_url}/@@edit-comment?_authenticator=${auth_token}"\n-                              i18n:translate="Edit">Edit</a>\n+                                <!-- edit -->\n+                                <a class="pat-plone-modal context comment-action action-edit btn btn-primary btn-sm"\n+                                    tal:condition="auth_token"\n+                                    tal:attributes="href string:${reply/absolute_url}/@@edit-comment?_authenticator=${auth_token}"\n+                                    i18n:translate="Edit">Edit</a>\n \n-                          <form name="edit"\n-                                action=""\n-                                method="get"\n-                                class="comment-action action-edit"\n-                                tal:condition="not: auth_token"\n-                                tal:attributes="action string:${reply/absolute_url}/@@edit-comment;\n+                                <form name="edit"\n+                                    action=""\n+                                    method="get"\n+                                    class="comment-action action-edit"\n+                                    tal:condition="not: auth_token"\n+                                    tal:attributes="action string:${reply/absolute_url}/@@edit-comment;\n                                                 id string:edit-${comment_id}">\n \n-                              <button name="form.button.EditComment"\n-                                      class="context btn btn-primary btn-sm"\n-                                      type="submit"\n-                                      value="Edit"\n-                                      i18n:attributes="value label_edit;"\n-                                      i18n:translate="label_edit"\n-                                      >Edit</button>\n+                                    <button name="form.button.EditComment"\n+                                        class="context btn btn-primary btn-sm"\n+                                        type="submit"\n+                                        value="Edit"\n+                                        i18n:attributes="value label_edit;"\n+                                        i18n:translate="label_edit">Edit</button>\n \n-                          </form>\n+                                </form>\n \n-                        </div>\n+                            </div>\n \n-                        <div class="comment-actions actions-delete" tal:condition="python:canDelete">\n+                            <div class="comment-actions actions-delete"\n+                                tal:condition="python:canDelete">\n \n-                            <!-- delete own comment -->\n-                            <form name="delete"\n-                                action=""\n-                                method="post"\n-                                class="comment-action action-delete"\n-                                tal:condition="python:not canDelete and isDeleteOwnCommentAllowed and view.could_delete_own(reply)"\n-                                tal:attributes="action string:${reply/absolute_url}/@@delete-own-comment;\n+                                <!-- delete own comment -->\n+                                <form name="delete"\n+                                    action=""\n+                                    method="post"\n+                                    class="comment-action action-delete"\n+                                    tal:condition="python:not canDelete and isDeleteOwnCommentAllowed and view.could_delete_own(reply)"\n+                                    tal:attributes="action string:${reply/absolute_url}/@@delete-own-comment;\n                                                 style python:view.can_delete_own(reply) and \'display: inline\' or \'display: none\';\n                                                 id string:delete-${comment_id}">\n-                                <button name="form.button.DeleteComment"\n+                                    <button name="form.button.DeleteComment"\n                                         class="destructive btn btn-danger btn-sm"\n                                         type="submit"\n                                         value="Delete"\n                                         i18n:attributes="value label_delete;"\n-                                        i18n:translate="label_delete"\n-                                        >Delete</button>\n-                            </form>\n-                            \n-                            <!-- delete -->\n-                            <form name="delete"\n-                                action=""\n-                                method="post"\n-                                class="comment-action action-delete"\n-                                tal:condition="python:canDelete"\n-                                tal:attributes="action string:${reply/absolute_url}/@@moderate-delete-comment;\n+                                        i18n:translate="label_delete">Delete</button>\n+                                </form>\n+\n+                                <!-- delete -->\n+                                <form name="delete"\n+                                    action=""\n+                                    method="post"\n+                                    class="comment-action action-delete"\n+                                    tal:condition="python:canDelete"\n+                                    tal:attributes="action string:${reply/absolute_url}/@@moderate-delete-comment;\n                                                 id string:delete-${comment_id}">\n-                                <button name="form.button.DeleteComment"\n+                                    <button name="form.button.DeleteComment"\n                                         class="destructive btn btn-danger btn-sm"\n                                         type="submit"\n                                         value="Delete"\n                                         i18n:attributes="value label_delete;"\n-                                        i18n:translate="label_delete"\n-                                        >Delete</button>\n-                            </form>\n-                        \n-                        </div>\n+                                        i18n:translate="label_delete">Delete</button>\n+                                </form>\n \n-                        <div class="comment-actions actions-workflow d-flex flex-row" tal:condition="reply_dict/actions|nothing">\n-                            \n-                            <form name=""\n-                                action=""\n-                                method="get"\n-                                class="comment-action action-${action/id}"\n-                                tal:condition="canReview"\n-                                tal:repeat="action reply_dict/actions|nothing"\n-                                tal:attributes="action string:${reply/absolute_url}/@@transmit-comment;\n+                            </div>\n+\n+                            <div class="comment-actions actions-workflow d-flex flex-row"\n+                                tal:condition="reply_dict/actions|nothing">\n+\n+                                <form name=""\n+                                    action=""\n+                                    method="get"\n+                                    class="comment-action action-${action/id}"\n+                                    tal:condition="canReview"\n+                                    tal:repeat="action reply_dict/actions|nothing"\n+                                    tal:attributes="action string:${reply/absolute_url}/@@transmit-comment;\n                                                 name action/id;\n                                                 id string:${action/id}-${comment_id};\n                                                 ">\n-                                <input type="hidden" name="workflow_action" tal:attributes="value action/id" />\n-                                <button name="form.button.TransmitComment"\n+                                    <input type="hidden"\n+                                        name="workflow_action"\n+                                        tal:attributes="value action/id" />\n+                                    <button name="form.button.TransmitComment"\n                                         class="context btn btn-primary btn-sm"\n                                         type="submit"\n-                                        i18n:translate=""\n-                                        >${action/title}</button>\n-                            </form>\n+                                        i18n:translate="">${action/title}</button>\n+                                </form>\n \n-                        </div>\n+                            </div>\n \n-                    </div>\n-                    <!-- end comment actions -->\n+                        </div>\n+                        <!-- end comment actions -->\n \n \n-                </div>\n-                <button class="context reply-to-comment-button hide allowMultiSubmit btn btn-primary btn-sm"\n+                    </div>\n+                    <button class="context reply-to-comment-button hide allowMultiSubmit btn btn-primary btn-sm"\n                         tal:condition="python:isDiscussionAllowed and (isAnon and isAnonymousDiscussionAllowed or userHasReplyPermission)"\n                         i18n:translate="label_reply">\n                     Reply\n-                </button>\n+                    </button>\n \n-            </div>\n+                </div>\n \n-        </tal:getreplies>\n+            </tal:getreplies>\n \n-        <div tal:condition="python: has_replies and not isDiscussionAllowed"\n-             class="discreet"\n-             i18n:translate="label_commenting_disabled">\n+            <div tal:condition="python: has_replies and not isDiscussionAllowed"\n+                class="discreet"\n+                i18n:translate="label_commenting_disabled">\n             Commenting has been disabled.\n-        </div>\n+            </div>\n \n-    </div>\n+        </div>\n \n-    <div class="reply" tal:condition="python:has_replies and (isAnon and not isAnonymousDiscussionAllowed)">\n-        <form tal:attributes="action view/login_action" class="mb-3">\n-            <button class="standalone loginbutton btn btn-primary"\n-                   type="submit"\n-                   value="Log in to add comments"\n-                   i18n:attributes="value label_login_to_add_comments;"\n-                   i18n:translate="label_login_to_add_comments"\n-                   >Log in to add comments</button>\n-        </form>\n-    </div>\n+        <div class="reply"\n+            tal:condition="python:has_replies and (isAnon and not isAnonymousDiscussionAllowed)">\n+            <form tal:attributes="action view/login_action"\n+                class="mb-3">\n+                <button class="standalone loginbutton btn btn-primary"\n+                    type="submit"\n+                    value="Log in to add comments"\n+                    i18n:attributes="value label_login_to_add_comments;"\n+                    i18n:translate="label_login_to_add_comments">Log in to add comments</button>\n+            </form>\n+        </div>\n \n-    <div id="commenting" class="reply border p-3" tal:condition="python:isDiscussionAllowed and (isAnon and isAnonymousDiscussionAllowed or userHasReplyPermission)">\n+        <div id="commenting"\n+            class="reply border p-3"\n+            tal:condition="python:isDiscussionAllowed and (isAnon and isAnonymousDiscussionAllowed or userHasReplyPermission)">\n \n-        <fieldset>\n+            <fieldset>\n \n-            <legend i18n:translate="label_add_comment">Add comment</legend>\n+                <legend i18n:translate="label_add_comment">Add comment</legend>\n \n-            <p tal:content="view/comment_transform_message">\n+                <p tal:content="view/comment_transform_message">\n                 You can add a comment by filling out the form below. Plain text\n                 formatting.\n-            </p>\n+                </p>\n \n-            <div tal:replace="structure view/form/render" />\n+                <div tal:replace="structure view/form/render" />\n \n-        </fieldset>\n+            </fieldset>\n+        </div>\n     </div>\n-\n </tal:block>\ndiff --git a/plone/app/discussion/browser/configure.zcml b/plone/app/discussion/browser/configure.zcml\nindex 15c015f3..63f80a45 100644\n--- a/plone/app/discussion/browser/configure.zcml\n+++ b/plone/app/discussion/browser/configure.zcml\n@@ -138,13 +138,6 @@\n         permission="zope2.View"\n         />\n \n-    <!-- Resource directory for javascripts -->\n-    <plone:static\n-        name="plone.app.discussion.javascripts"\n-        type="plone"\n-        directory="javascripts"\n-        />\n-\n     <!-- Control panel -->\n     <browser:page\n         name="discussion-controlpanel"\ndiff --git a/plone/app/discussion/browser/controlpanel.pt b/plone/app/discussion/browser/controlpanel.pt\nindex d853e283..b0e57e7a 100644\n--- a/plone/app/discussion/browser/controlpanel.pt\n+++ b/plone/app/discussion/browser/controlpanel.pt\n@@ -18,10 +18,6 @@\n       <span tal:replace="structure view/contents" />\n     </div>\n \n-  <script type="text/javascript"\n-          tal:attributes="src string:${portal_url}/++plone++plone.app.discussion.javascripts/controlpanel.js">\n-  </script>\n-\n </metal:main>\n \n </body>\ndiff --git a/plone/app/discussion/browser/javascripts/comments.js b/plone/app/discussion/browser/javascripts/comments.js\ndeleted file mode 100644\nindex 89ce56a3..00000000\n--- a/plone/app/discussion/browser/javascripts/comments.js\n+++ /dev/null\n@@ -1,283 +0,0 @@\n-/******************************************************************************\n- *\n- * jQuery functions for the plone.app.discussion comment viewlet and form.\n- *\n- ******************************************************************************/\n-/* global require */\n-\n-if (require === undefined) {\n-  require = function(reqs, torun) {\n-    // jshint ignore:line\n-    "use strict";\n-    return torun(window.jQuery);\n-  };\n-}\n-\n-require([\n-  // jshint ignore:line\n-  "jquery"\n-], function($) {\n-  "use strict";\n-\n-  // This unnamed function allows us to use $ inside of a block of code\n-  // without permanently overwriting $.\n-  // http://docs.jquery.com/Using_jQuery_with_Other_Libraries\n-  /**************************************************************************\n-   * Create a reply-to-comment form right beneath the form that is passed to\n-   * the function. We do this by copying the regular comment form and\n-   * adding a hidden in_reply_to field to the form.\n-   **************************************************************************/\n-  $.createReplyForm = function(comment_div) {\n-    var comment_id = comment_div.attr("id");\n-\n-    var reply_button = comment_div.find(".reply-to-comment-button");\n-\n-    /* Clone the reply div at the end of the page template that contains\n-     * the regular comment form.\n-     */\n-    var reply_div = $("#commenting").clone(true);\n-\n-    /* Remove the ReCaptcha JS code before appending the form. If not\n-     * removed, this causes problems\n-     */\n-    reply_div\n-      .find("#formfield-form-widgets-captcha")\n-      .find("script")\n-      .remove();\n-\n-    /* Insert the cloned comment form right after the reply button of the\n-     * current comment.\n-     */\n-    reply_div.appendTo(comment_div).css("display", "none");\n-\n-    /* Remove id=\'commenting\' attribute, since we use it to uniquely define\n-           the main reply form. */\n-    // Still belongs to class=\'reply\'\n-    reply_div.removeAttr("id");\n-\n-    /* Hide the reply button (only hide, because we may want to show it\n-     * again if the user hits the cancel button).\n-     */\n-    $(reply_button).css("display", "none");\n-\n-    /* Fetch the reply form inside the reply div */\n-    var reply_form = reply_div.find("form");\n-\n-    /* Change the id of the textarea of the reply form\n-     * To avoid conflict later between textareas with same id \'form-widgets-comment-text\' while implementing a seperate instance of TinyMCE\n-     * */\n-    reply_form\n-      .find("#formfield-form-widgets-comment-text")\n-      .attr("id", "formfield-form-widgets-new-textarea" + comment_id);\n-    reply_form\n-      .find("#form-widgets-comment-text")\n-      .attr("id", "form-widgets-new-textarea" + comment_id);\n-\n-    /* Populate the hidden \'in_reply_to\' field with the correct comment\n-           id */\n-    reply_form.find(\'input[name="form.widgets.in_reply_to"]\').val(comment_id);\n-\n-    /* Add a remove-reply-to-comment Javascript function to remove the\n-           form */\n-    var cancel_reply_button = reply_div.find(".cancelreplytocomment");\n-    cancel_reply_button.attr("id", comment_id);\n-\n-    /* Show the cancel buttons. */\n-    reply_form\n-      .find(\'input[name="form.buttons.cancel"]\')\n-      .css("display", "inline");\n-\n-    /* Show the reply layer with a slide down effect */\n-    reply_div.slideDown("slow");\n-\n-    /* Show the cancel button in the reply-to-comment form */\n-    cancel_reply_button.css("display", "inline");\n-  };\n-\n-  /**************************************************************************\n-   * Remove all error messages and field values from the form that is passed\n-   * to the function.\n-   **************************************************************************/\n-  $.clearForm = function(form_div) {\n-    form_div.find(".error").removeClass("error");\n-    form_div.find(".fieldErrorBox").remove();\n-    form_div.find(\'input[type="text"]\').attr("value", "");\n-    form_div.find("textarea").attr("value", "");\n-    /* XXX: Clean all additional form extender fields. */\n-  };\n-\n-  function init_comment_eventhandler () {\n-      /**********************************************************************\n-       * Transmit a single comment.\n-       **********************************************************************/\n-      $(\'input[name="form.button.TransmitComment"]\').on("click", function(e) {\n-        e.preventDefault();\n-        var trigger = this;\n-        var form = $(this).parents("form");\n-        var data = $(form).serialize();\n-        var form_url = $(form).attr("action");\n-        var comment_id = $(this).parents(".comment").attr("id");\n-        $.ajax({\n-          type: "GET",\n-          url: form_url,\n-          data: data,\n-          context: trigger,\n-          success: function(msg) {\n-              let url = location.href;\n-              $(this).parents(".comment").load(\n-                // loading child nodes is not enough,\n-                // class attributes are needed for visualization of workflow_state\n-                url + " #" + comment_id + ".comment",\n-                function() {\n-                  $(this).find(".comment").unwrap();\n-                  init_comment_eventhandler();\n-                  $(".pat-plone-modal").patPloneModal();\n-                }\n-              );\n-          },\n-          error: function(msg) {\n-            return true;\n-          }\n-        });\n-        return false;\n-      });\n-\n-      /**********************************************************************\n-       * Edit a comment\n-       **********************************************************************/\n-      if ($.fn.prepOverlay) {\n-        $(\'form[name="edit"]\').prepOverlay({\n-          cssclass: "overlay-edit-comment",\n-          width: "60%",\n-          subtype: "ajax",\n-          filter: "#content>*"\n-        });\n-      }\n-\n-      /**********************************************************************\n-       * Delete a comment and its answers.\n-       **********************************************************************/\n-      $(\'input[name="form.button.DeleteComment"]\').on("click", function(e) {\n-        e.preventDefault();\n-        var trigger = this;\n-        var form = $(this).parents("form");\n-        var data = $(form).serialize();\n-        var form_url = $(form).attr("action");\n-        $.ajax({\n-          type: "POST",\n-          url: form_url,\n-          data: data,\n-          context: $(trigger).parents(".comment"),\n-          success: function(data) {\n-            // jshint ignore:line\n-            var comment = $(this);\n-            var clss = comment.attr("class");\n-            // remove replies\n-            var treelevel = parseInt(\n-              clss[clss.indexOf("replyTreeLevel") + "replyTreeLevel".length],\n-              10\n-            );\n-            // selector for all the following elements of lower level\n-            var selector = ".replyTreeLevel" + treelevel;\n-            for (var i = 0; i < treelevel; i++) {\n-              selector += ", .replyTreeLevel" + i;\n-            }\n-            comment.nextUntil(selector).each(function() {\n-              $(this).fadeOut("fast", function() {\n-                $(this).remove();\n-              });\n-            });\n-            // Add delete button to the parent\n-            var parent = comment.prev(\n-              \'[class*="replyTreeLevel\' + (treelevel - 1) + \'"]\'\n-            );\n-            parent.find(\'form[name="delete"]\').css("display", "inline");\n-            // remove comment\n-            $(this).fadeOut("fast", function() {\n-              $(this).remove();\n-            });\n-          },\n-          error: function(req, error) {\n-            // jshint ignore:line\n-            return true;\n-          }\n-        });\n-        return false;\n-      });\n-  };\n-\n-  $(document).ready(function() {\n-    init_comment_eventhandler();\n-\n-    /**********************************************************************\n-     * If the user has hit the reply button of a reply-to-comment form\n-     * (form was submitted with a value for the \'in_reply_to\' field in the\n-     * request), create a reply-to-comment form right under this comment.\n-     **********************************************************************/\n-    var post_comment_div = $("#commenting");\n-    var in_reply_to_field = post_comment_div.find(\n-      \'input[name="form.widgets.in_reply_to"]\'\n-    );\n-    if (in_reply_to_field.length !== 0 && in_reply_to_field.val() !== "") {\n-      var current_reply_id = "#" + in_reply_to_field.val();\n-      var current_reply_to_div = $(".discussion").find(current_reply_id);\n-      $.createReplyForm(current_reply_to_div);\n-      $.clearForm(post_comment_div);\n-    }\n-\n-    /**********************************************************************\n-     * If the user hits the \'reply\' button of an existing comment, create a\n-     * reply form right beneath this comment.\n-     **********************************************************************/\n-    $(".reply-to-comment-button").bind("click", function(e) {\n-      // jshint ignore:line\n-      var comment_div = $(this)\n-        .parents()\n-        .filter(".comment");\n-      $.createReplyForm(comment_div);\n-      $.clearForm(comment_div);\n-    });\n-\n-    /**********************************************************************\n-     * If the user hits the \'clear\' button of an open reply-to-comment form,\n-     * remove the form and show the \'reply\' button again.\n-     **********************************************************************/\n-    $("#commenting #form-buttons-cancel").bind("click", function(e) {\n-      e.preventDefault();\n-      var reply_to_comment_button = $(this)\n-        .parents()\n-        .filter(".comment")\n-        .find(".reply-to-comment-button");\n-\n-      /* Find the reply-to-comment form and hide and remove it again. */\n-      $.reply_to_comment_form = $(this)\n-        .parents()\n-        .filter(".reply");\n-      $.reply_to_comment_form.slideUp("slow", function() {\n-        $(this).remove();\n-      });\n-\n-      /* Show the reply-to-comment button again. */\n-      reply_to_comment_button.css("display", "inline");\n-    });\n-\n-    /**********************************************************************\n-     * By default, hide the reply and the cancel button for the regular add\n-     * comment form.\n-     **********************************************************************/\n-    $(".reply")\n-      .find(\'input[name="form.buttons.reply"]\')\n-      .css("display", "none");\n-    $(".reply")\n-      .find(\'input[name="form.buttons.cancel"]\')\n-      .css("display", "none");\n-\n-    /**********************************************************************\n-     * By default, show the reply button only when Javascript is enabled.\n-     * Otherwise hide it, since the reply functions only work with JS\n-     * enabled.\n-     **********************************************************************/\n-    $(".reply-to-comment-button").removeClass("hide");\n-  });\n-\n-});\ndiff --git a/plone/app/discussion/browser/javascripts/controlpanel.js b/plone/app/discussion/browser/javascripts/controlpanel.js\ndeleted file mode 100644\nindex bfb5ba6d..00000000\n--- a/plone/app/discussion/browser/javascripts/controlpanel.js\n+++ /dev/null\n@@ -1,142 +0,0 @@\n-/******************************************************************************\n- *\n- * jQuery functions for the plone.app.discussion comment viewlet and form.\n- *\n- ******************************************************************************/\n-/* global require */\n-\n-if(require === undefined){\n-    require = function(reqs, torun){  // jshint ignore:line\n-        \'use strict\';\n-        return torun(window.jQuery);\n-    };\n-}\n-\n-require([  // jshint ignore:line\n-    \'jquery\'\n-], function ($) {\n-    \'use strict\';\n-    // This unnamed function allows us to use $ inside of a block of code\n-    // without permanently overwriting $.\n-    // http://docs.jquery.com/Using_jQuery_with_Other_Libraries\n-\n-    /* Disable a control panel setting */\n-    $.disableSettings = function (settings) {\n-        $.each(settings, function (intIndex, setting) {\n-            setting.addClass(\'unclickable\');\n-            var setting_field = $(setting).find(\'input,select\');\n-            setting_field.attr(\'disabled\', \'disabled\');\n-        });\n-    };\n-\n-    /* Enable a control panel setting */\n-    $.enableSettings = function (settings) {\n-        $.each(settings, function (intIndex, setting) {\n-            setting.removeClass(\'unclickable\');\n-            var setting_field = $(setting).find(\'input,select\');\n-            setting_field.removeAttr(\'disabled\');\n-        });\n-    };\n-\n-    /* Update settings */\n-    $.updateSettings = function () {\n-\n-        var globally_enabled = $(\'#content-core\').hasClass(\'globally_enabled\');\n-        var moderation_custom = $(\'#content-core\').hasClass(\'moderation_custom\');\n-        var invalid_mail_setup = $(\'#content-core\').hasClass(\'invalid_mail_setup\');\n-\n-        /* If commenting is globally disabled, disable all settings. */\n-        if (globally_enabled === true) {\n-            $.enableSettings([\n-                $(\'#formfield-form-widgets-anonymous_comments\'),\n-                $(\'#formfield-form-widgets-anonymous_email_enabled\'),\n-                $(\'#formfield-form-widgets-moderation_enabled\'),\n-                $(\'#formfield-form-widgets-edit_comment_enabled\'),\n-                $(\'#formfield-form-widgets-delete_own_comment_enabled\'),\n-                $(\'#formfield-form-widgets-text_transform\'),\n-                $(\'#formfield-form-widgets-captcha\'),\n-                $(\'#formfield-form-widgets-show_commenter_image\'),\n-                $(\'#formfield-form-widgets-moderator_notification_enabled\'),\n-                $(\'#formfield-form-widgets-moderator_email\'),\n-                $(\'#formfield-form-widgets-user_notification_enabled\')\n-            ]);\n-        }\n-        else {\n-            $.disableSettings([\n-                $(\'#formfield-form-widgets-anonymous_comments\'),\n-                $(\'#formfield-form-widgets-anonymous_email_enabled\'),\n-                $(\'#formfield-form-widgets-moderation_enabled\'),\n-                $(\'#formfield-form-widgets-edit_comment_enabled\'),\n-                $(\'#formfield-form-widgets-delete_own_comment_enabled\'),\n-                $(\'#formfield-form-widgets-text_transform\'),\n-                $(\'#formfield-form-widgets-captcha\'),\n-                $(\'#formfield-form-widgets-show_commenter_image\'),\n-                $(\'#formfield-form-widgets-moderator_notification_enabled\'),\n-                $(\'#formfield-form-widgets-moderator_email\'),\n-                $(\'#formfield-form-widgets-user_notification_enabled\')\n-            ]);\n-        }\n-\n-        /* If the mail setup is invalid, disable the mail settings. */\n-        if (invalid_mail_setup === true) {\n-            $.disableSettings([\n-                $(\'#formfield-form-widgets-moderator_notification_enabled\'),\n-                $(\'#formfield-form-widgets-moderator_email\'),\n-                $(\'#formfield-form-widgets-user_notification_enabled\')\n-            ]);\n-        }\n-        else {\n-            /* Enable mail setup only if discussion is enabled. */\n-            if (globally_enabled === true) {\n-                $.enableSettings([\n-                    $(\'#formfield-form-widgets-moderator_notification_enabled\'),\n-                    $(\'#formfield-form-widgets-moderator_email\'),\n-                    $(\'#formfield-form-widgets-user_notification_enabled\')\n-                ]);\n-            }\n-        }\n-\n-        /* If a custom workflow for comments is enabled, disable the moderation\n-           switch. */\n-        if (moderation_custom === true) {\n-            $.disableSettings([\n-                $(\'#formfield-form-widgets-moderation_enabled\')\n-            ]);\n-        }\n-    };\n-    //#JSCOVERAGE_IF 0\n-\n-    /**************************************************************************\n-     * Window Load Function: Executes when complete page is fully loaded,\n-     * including all frames,\n-     **************************************************************************/\n-    $(document).ready(function () {\n-\n-        // Update settings on page load\n-        $.updateSettings();\n-\n-        // Set #content-core class and update settings afterwards\n-        $(\'#form-widgets-globally_enabled-0\').on(\'change\', function(){\n-            if (this.checked) {\n-                $(\'#content-core\').addClass(\'globally_enabled\');\n-            }\n-            else {\n-                $(\'#content-core\').removeClass(\'globally_enabled\');\n-            }\n-            $.updateSettings();\n-        });\n-\n-        /**********************************************************************\n-         * Remove the disabled attribute from all form elements before\n-         * submitting the form. Otherwise the z3c.form will raise errors on\n-         * the required attributes.\n-         **********************************************************************/\n-        $(\'form#DiscussionSettingsEditForm\').bind(\'submit\', function () {\n-            $(this).find(\'input,select\').removeAttr(\'disabled\');\n-        });\n-\n-    });\n-\n-    //#JSCOVERAGE_ENDIF\n-\n-});\ndiff --git a/plone/app/discussion/browser/javascripts/javascripts.txt b/plone/app/discussion/browser/javascripts/javascripts.txt\ndeleted file mode 100644\nindex 99f3056f..00000000\n--- a/plone/app/discussion/browser/javascripts/javascripts.txt\n+++ /dev/null\n@@ -1,42 +0,0 @@\n-===============================\n-plone.app.discussion Javascript\n-===============================\n-\n-This document contains a description of how the plone.app.discussion javascript\n-code works.\n-\n-HTML Structure\n---------------\n-\n-The "discussion" div contains all comments that have been posted to a specific\n-content object. Each comment div has a unique id::\n-\n-  <div class="discussion">\n-    <div class="comment" id="1282720906349675">\n-      <h3 class="commentTitle"></h3>\n-      <div class="documentByLine"></div>\n-      <div class="commentBody"> </div>\n-      <div class="commentActions">\n-        <button class="reply-to-comment-button">Reply</button>\n-      </div>\n-    </div>\n-\n-The comment form is rendered inside a "commenting" div::\n-\n-  <div id="commenting" class="reply">\n-    <fieldset>\n-      <legend i18n:translate="label_add_comment">Add comment</legend>\n-      <p>\n-        You can add a comment by filling out the form below. Plain text\n-        formatting.\n-      </p>\n-      <form>\n-        <div id="formfield-form-widgets-in_reply_to">\n-          <input id="form-widgets-in_reply_to"\n-                 name="form.widgets.in_reply_to" value=\n-                 type="hidden"\n-           />\n-        </div>\n-      </form>\n-    </fieldset>\n-  </div>\ndiff --git a/plone/app/discussion/browser/javascripts/moderation.js b/plone/app/discussion/browser/javascripts/moderation.js\ndeleted file mode 100644\nindex cc6a547c..00000000\n--- a/plone/app/discussion/browser/javascripts/moderation.js\n+++ /dev/null\n@@ -1,228 +0,0 @@\n-/******************************************************************************\n- *\n- * jQuery functions for the plone.app.discussion moderation.\n- *\n- ******************************************************************************/\n-\n-if (require === undefined) {\n-  require = function(reqs, torun) {\n-    "use strict";\n-    return torun(window.jQuery);\n-  };\n-}\n-\n-require(["jquery", "pat-registry"], function($, registry) {\n-  "use strict";\n-\n-  $(document).ready(function() {\n-    init_moderation_eventhandler();\n-  });\n-\n-  function init_moderation_eventhandler() {\n-    /**********************************************************************\n-     * Delete a single comment.\n-     **********************************************************************/\n-    $("button[name=\'form.button.moderation.DeleteComment\']").click(function(e) {\n-      e.preventDefault();\n-      var row = $(this).closest("tr");\n-      var path = row.find("[name=\'selected_obj_paths:list\']").attr("value");\n-      var auth_key = $(\'input[name="_authenticator"]\').val();\n-      var target =\n-        path + "/@@moderate-delete-comment?_authenticator=" + auth_key;\n-      $.ajax({\n-        type: "GET",\n-        url: target,\n-        success: function(msg) {\n-          // fade out row\n-          row.fadeOut(250).fadeIn(250, function() {\n-            row.remove();\n-          });\n-          // reload page if all comments have been removed\n-          var comments = $("table#review-comments > tbody > tr");\n-          if (comments.length === 1) {\n-            location.reload();\n-          }\n-        },\n-        error: function(msg) {\n-          alert("Error sending AJAX request:" + target);\n-        }\n-      });\n-    });\n-\n-    /**********************************************************************\n-     * Transmit a single comment.\n-     **********************************************************************/\n-    $(\'button[name="form.button.moderation.TransmitComment"]\').click(function(\n-      e\n-    ) {\n-      e.preventDefault();\n-      let button = $(this);\n-      var row = $(this).closest("tr");\n-      var path = $(row)\n-        .find("[name=\'selected_obj_paths:list\']")\n-        .attr("value");\n-      var workflow_action = $(this).attr("data-transition");\n-      var auth_key = $(\'input[name="_authenticator"]\').val();\n-      // distinction of workflow_action\n-      var target =\n-        path +\n-        "/@@transmit-comment?_authenticator=" +\n-        auth_key +\n-        "&workflow_action=" +\n-        workflow_action;\n-      var moderate =\n-        $(this)\n-          .closest("fieldset")\n-          .attr("id") == "fieldset-moderate-comments";\n-      $.ajax({\n-        type: "GET",\n-        url: target,\n-        success: function(msg) {\n-          if (moderate) {\n-            let url = location.href;\n-            $("#review-comments").load(\n-              url + " #review-comments > *",\n-              function() {\n-                init_moderation_eventhandler();\n-                $(".pat-plone-modal").patPloneModal();\n-              }\n-            );\n-          } else {\n-            location.reload();\n-          }\n-        },\n-        error: function(msg) {\n-          alert(\n-            "Error transmitting comment. (Error sending AJAX request:" +\n-              target +\n-              ")"\n-          );\n-        }\n-      });\n-    });\n-\n-    /**********************************************************************\n-     * Bulk actions for comments (delete, publish)\n-     **********************************************************************/\n-    $("button[name=\'form.button.BulkAction\']").click(function(e) {\n-      e.preventDefault();\n-      var form = $(this).closest("form");\n-      var target = $(form).attr("action");\n-      var params = $(form).serialize();\n-      var valArray = $("input:checkbox:checked");\n-      var selectField = $(form).find("[name=\'form.select.BulkAction\']");\n-\n-      if (selectField.val() === "-1") {\n-        // TODO: translate message\n-        alert("You haven\'t selected a bulk action. Please select one.");\n-      } else if (valArray.length === 0) {\n-        // TODO: translate message\n-        alert(\n-          "You haven\'t selected any comment for this bulk action." +\n-            "Please select at least one comment."\n-        );\n-      } else {\n-        $.post(target, params, function(data) {\n-          // reset the bulkaction select\n-          selectField.find("option[value=\'-1\']").attr("selected", "selected");\n-          // reload filtered comments\n-          $("#review-comments").load(\n-            window.location + " #review-comments",\n-            function() {\n-              init_moderation_eventhandler();\n-              $(".pat-plone-modal").patPloneModal();\n-            }\n-          );\n-        });\n-      }\n-    });\n-\n-    /**********************************************************************\n-     * Check or uncheck all checkboxes from the batch moderation page.\n-     **********************************************************************/\n-    $("input[name=\'check_all\']").click(function() {\n-      if ($(this).val() === "0") {\n-        $(this)\n-          .parents("table")\n-          .find("input:checkbox")\n-          .prop("checked", true);\n-        $(this).val("1");\n-      } else {\n-        $(this)\n-          .parents("table")\n-          .find("input:checkbox")\n-          .prop("checked", false);\n-        $(this).val("0");\n-      }\n-    });\n-\n-    /**********************************************************************\n-     * select comments with review_state\n-     **********************************************************************/\n-\n-    $("input[name=\'review_state\']").click(function() {\n-      let review_state = $(this).val();\n-      let url = location.href;\n-      if (location.search) {\n-        url = location.href.replace(\n-          location.search,\n-          "?review_state=" + review_state\n-        );\n-      } else {\n-        url = location.href + "?review_state=" + review_state;\n-      }\n-\n-      $("#fieldset-moderate-comments")\n-        .parent()\n-        .load(url + " #content form > *", function() {\n-          init_moderation_eventhandler();\n-          $(".pat-plone-modal").patPloneModal();\n-          let stateObj = { review_state: review_state };\n-          history.pushState(stateObj, "moderate comments", url);\n-        });\n-    });\n-\n-    /**********************************************************************\n-     * Show full text of a comment in the batch moderation page.\n-     **********************************************************************/\n-    $(".show-full-comment-text").click(function(e) {\n-      e.preventDefault();\n-      var target = $(this).attr("href");\n-      var parent = $(this).parent();\n-      $.ajax({\n-        type: "GET",\n-        url: target,\n-        data: "",\n-        success: function(data) {\n-          // show full text\n-          parent.html(data);\n-        },\n-        error: function(msg) {\n-          alert("Error getting full comment text:" + target);\n-        }\n-      });\n-    });\n-\n-    /**********************************************************************\n-     * Comments published: Load history for publishing date.\n-     **********************************************************************/\n-    $(".last-history-entry").each(function() {\n-      var lasthistoryentry = $(this);\n-      $.ajax({\n-        url: lasthistoryentry.attr("data-href"),\n-        success: function(data) {\n-          lasthistoryentry.html(\n-            $(data)\n-              .find(".historyByLine")\n-              .first()\n-          );\n-          // format date\n-          registry.scan(lasthistoryentry);\n-        },\n-        error: function(msg) {\n-          console.error("Error getting history.");\n-        }\n-      });\n-    });\n-  } // end init_moderation_eventhandler\n-});\ndiff --git a/plone/app/discussion/browser/moderation.pt b/plone/app/discussion/browser/moderation.pt\nindex 6ace4200..b3a94785 100644\n--- a/plone/app/discussion/browser/moderation.pt\n+++ b/plone/app/discussion/browser/moderation.pt\n@@ -1,18 +1,19 @@\n-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"\n-      xmlns:tal="http://xml.zope.org/namespaces/tal"\n-      xmlns:metal="http://xml.zope.org/namespaces/metal"\n-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n-      lang="en"\n-      metal:use-macro="context/main_template/macros/master"\n-      i18n:domain="plone">\n-<body>\n+<html xmlns="http://www.w3.org/1999/xhtml"\n+  xml:lang="en"\n+  xmlns:tal="http://xml.zope.org/namespaces/tal"\n+  xmlns:metal="http://xml.zope.org/namespaces/metal"\n+  xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+  lang="en"\n+  metal:use-macro="context/main_template/macros/master"\n+  i18n:domain="plone">\n+  <body>\n \n-<metal:override fill-slot="top_slot"\n-    tal:define="disable_column_one python:request.set(\'disable_plone.leftcolumn\',1);\n-                disable_column_two python:request.set(\'disable_plone.rightcolumn\',1);"/>\n+    <metal:override fill-slot="top_slot"\n+      tal:define="disable_column_one python:request.set(\'disable_plone.leftcolumn\',1);\n+                disable_column_two python:request.set(\'disable_plone.rightcolumn\',1);" />\n \n-<metal:main fill-slot="main">\n-    <tal:main-macro metal:define-macro="main"\n+    <metal:main fill-slot="main">\n+      <tal:main-macro metal:define-macro="main"\n         tal:define="toLocalizedTime nocall:context/@@plone/toLocalizedTime;\n                     items view/comments;\n                     filter request/review_state|nothing;\n@@ -24,9 +25,6 @@\n                     colorclass python:lambda x: \'state-private\' if x==\'rejected\' else (\'state-internal\' if x==\'spam\' else \'state-\'+x);\n                     translationhelper nocall:context/@@translationhelper;\n                     ">\n-        <script type="text/javascript"\n-            tal:attributes="src string:${context/portal_url}/++plone++plone.app.discussion.javascripts/moderation.js">\n-        </script>\n         <style>\n             #review-comments th label {\n                 margin-right: 1em;\n@@ -36,194 +34,232 @@\n         <h1 i18n:translate="heading_moderate_comments">\n             Moderate comments\n         </h1>\n-\n-        <p class="lead" i18n:translate="message_moderation_disabled">\n-            Moderation workflow is disabled. You have to\n+        <div class="alert alert-info"\n+          role="status"\n+          tal:condition="python: not moderation_enabled">\n+          <strong>Info</strong>\n+          <div i18n:translate="message_moderation_disabled">Moderation workflow is disabled. You have to\n             <a i18n:name="enable_comment_workflow"\n-                i18n:translate="message_enable_comment_workflow" href=""\n-                tal:attributes="href string:${context/portal_url}/@@content-controlpanel?type_id=Discussion Item">\n+              i18n:translate="message_enable_comment_workflow"\n+              href=""\n+              tal:attributes="href string:${context/portal_url}/@@content-controlpanel?type_id=Discussion Item">\n             enable the \'Comment Review Workflow\' for the Comment content\n-            type</a> before you can moderate comments here.\n-        </p>\n+            type</a> before you can moderate comments here.</div>\n+        </div>\n \n-      <form class="mb-3"\n-            method="post"\n-            action="#"\n-            tal:condition="moderation_enabled"\n-            tal:attributes="action string:${context/absolute_url}/@@bulk-actions"\n-            tal:define="batch python:Batch(items, b_size, int(b_start), orphan=1);">\n-          <fieldset id="fieldset-moderate-comments" class="formPanel">\n+        <form class="mb-3"\n+          method="post"\n+          action="#"\n+          tal:condition="moderation_enabled"\n+          tal:attributes="action string:${context/absolute_url}/@@bulk-actions"\n+          tal:define="batch python:Batch(items, b_size, int(b_start), orphan=1);">\n+          <fieldset id="fieldset-moderate-comments"\n+            class="formPanel">\n \n-              <div metal:use-macro="here/batch_macros/macros/navigation" />\n-              <div id="review-comments">\n+            <div metal:use-macro="here/batch_macros/macros/navigation" />\n+            <div id="review-comments">\n \n-                <div  class="row row-cols-lg-auto g-3 align-items-center mb-2 mt-2" id="bulkactions">\n-                  <tal:bulk condition="items">\n-                    <div class="col-auto">\n-                      <select class="form-select" name="form.select.BulkAction">\n-                        <option selected="selected" value="-1" i18n:translate="title_bulkactions">Bulk Actions</option>\n-                        <tal:comment tal:replace="nothing"></tal:comment>\n-                        <option value="publish"\n-                                i18n:translate="bulkactions_publish"\n-                                tal:condition="python: filter != \'published\'">Approve</option>\n-                        <option value="mark_as_spam"\n-                                i18n:translate="bulkactions_spam"\n-                                tal:condition="python: filter != \'spam\'">Spam</option>\n-                        <option value="delete" i18n:translate="bulkactions_delete">Delete</option>\n-                      </select>\n-                    </div>\n-                    <div class="col-auto">\n-                      <input type="hidden" name="filter" tal:attributes="value filter" />\n-                      <button class="standalone allowMultiSubmit btn btn-primary"\n-                              id="dobulkaction"\n-                              type="submit"\n-                              value="Apply"\n-                              name="form.button.BulkAction"\n-                              i18n:attributes="value label_apply;"\n-                              i18n:translate="label_apply">Apply</button>\n-                    </div>\n-                  </tal:bulk>\n+              <div class="row row-cols-lg-auto g-3 align-items-center mb-2 mt-2"\n+                id="bulkactions">\n+                <tal:bulk condition="items">\n+                  <div class="col-auto">\n+                    <select class="form-select"\n+                      name="form.select.BulkAction">\n+                      <option selected="selected"\n+                        value="-1"\n+                        i18n:translate="title_bulkactions">Bulk Actions</option>\n+                      <tal:comment tal:replace="nothing"></tal:comment>\n+                      <option value="publish"\n+                        i18n:translate="bulkactions_publish"\n+                        tal:condition="python: filter != \'published\'">Approve</option>\n+                      <option value="mark_as_spam"\n+                        i18n:translate="bulkactions_spam"\n+                        tal:condition="python: filter != \'spam\'">Spam</option>\n+                      <option value="delete"\n+                        i18n:translate="bulkactions_delete">Delete</option>\n+                    </select>\n+                  </div>\n+                  <div class="col-auto">\n+                    <input type="hidden"\n+                      name="filter"\n+                      tal:attributes="value filter" />\n+                    <button class="standalone allowMultiSubmit btn btn-primary"\n+                      id="dobulkaction"\n+                      type="submit"\n+                      value="Apply"\n+                      name="form.button.BulkAction"\n+                      i18n:attributes="value label_apply;"\n+                      i18n:translate="label_apply">Apply</button>\n+                  </div>\n+                </tal:bulk>\n \n-                  <div class="flex-grow-1">\n-                    <div class="row row-cols-lg-auto g-3 align-items-center justify-content-end" tal:condition="view/moderation_multiple_state_enabled">\n-                      <label i18n:translate="filter_by_state">Filter by state:</label>\n+                <div class="flex-grow-1">\n+                  <div class="row row-cols-lg-auto g-3 align-items-center justify-content-end"\n+                    tal:condition="view/moderation_multiple_state_enabled">\n+                    <label i18n:translate="filter_by_state">Filter by state:</label>\n+                    <div>\n+                      <input class="form-check-input"\n+                        type="radio"\n+                        id="all"\n+                        name="review_state"\n+                        value="all"\n+                        tal:attributes="checked python:request.review_state==\'all\'" />\n+                      <label class="form-check-label"\n+                        for="all"\n+                        i18n:translate="">all</label>\n+                    </div>\n+                    <tal:states tal:repeat="review_state python:[\'pending\', \'published\', \'rejected\', \'spam\']">\n                       <div>\n-                        <input class="form-check-input" type="radio" id="all" name="review_state" value="all"\n-                            tal:attributes="checked python:request.review_state==\'all\'" />\n-                        <label class="form-check-label" for="all" i18n:translate="">all</label>\n-                      </div>\n-                      <tal:states tal:repeat="review_state python:[\'pending\', \'published\', \'rejected\', \'spam\']">\n-                        <div>\n-                          <input class="form-check-input" type="radio" name="review_state"\n-                            tal:attributes="\n+                        <input class="form-check-input"\n+                          type="radio"\n+                          name="review_state"\n+                          tal:attributes="\n                                 value review_state;\n                                 id review_state;\n                                 checked python:request.review_state==review_state" />\n-                          <label class="form-check-label"\n-                            tal:attributes="for review_state"><span tal:content="python:translationhelper.translate_comment_review_state(review_state)">review_state</span></label>\n-                        </div>\n-                      </tal:states>\n-                    </div>\n+                        <label class="form-check-label"\n+                          tal:attributes="for review_state">\n+                          <span tal:content="python:translationhelper.translate_comment_review_state(review_state)">review_state</span>\n+                        </label>\n+                      </div>\n+                    </tal:states>\n                   </div>\n+                </div>\n \n \n-                </div>\n-                <table class="table table-bordered table-striped">\n-                  <thead>\n-                    <tr tal:condition="items">\n-                        <th scope="col" class="nosort"><input name="check_all" type="checkbox" value="0" /></th>\n-                        <th scope="col" class="nosort" i18n:translate="heading_commenter">Commenter</th>\n-                        <th scope="col" class="nosort" i18n:translate="heading_date">Date</th>\n-                        <th scope="col" class="nosort" i18n:translate="heading_in_reponse_to">In Response To</th>\n-                        <th scope="col" class="nosort" i18n:translate="heading_comment">Comment</th>\n-                        <th scope="col" class="nosort" i18n:translate="heading_changedby">Last Action</th>\n-                    </tr>\n-                  </thead>\n-                  <tbody>\n-                      <tal:block repeat="item batch"\n-                          tal:condition="items">\n-                          <tr class="commentrow"\n-                              tal:define="even repeat/item/even;\n+              </div>\n+              <table class="table table-bordered table-striped">\n+                <thead>\n+                  <tr tal:condition="items">\n+                    <th scope="col"\n+                      class="nosort">\n+                      <input name="check_all"\n+                        type="checkbox"\n+                        value="0" />\n+                    </th>\n+                    <th scope="col"\n+                      class="nosort"\n+                      i18n:translate="heading_commenter">Commenter</th>\n+                    <th scope="col"\n+                      class="nosort"\n+                      i18n:translate="heading_date">Date</th>\n+                    <th scope="col"\n+                      class="nosort"\n+                      i18n:translate="heading_in_reponse_to">In Response To</th>\n+                    <th scope="col"\n+                      class="nosort"\n+                      i18n:translate="heading_comment">Comment</th>\n+                    <th scope="col"\n+                      class="nosort"\n+                      i18n:translate="heading_changedby">Last Action</th>\n+                  </tr>\n+                </thead>\n+                <tbody>\n+                  <tal:block repeat="item batch"\n+                    tal:condition="items">\n+                    <tr class="commentrow"\n+                      tal:define="even repeat/item/even;\n                                           item_obj item/getObject;\n                                           email item_obj/author_email;\n                                           item_url item/getURL;"\n-                              tal:attributes="class python: even and \'odd\' or \'even\'">\n-                              <td class="notDraggable">\n-                                  <input type="checkbox"\n-                                         class="noborder"\n-                                         name="paths:list" id="#"\n-                                         value="#"\n-                                         tal:attributes="value   item/getPath;\n+                      tal:attributes="class python: even and \'odd\' or \'even\'">\n+                      <td class="notDraggable">\n+                        <input type="checkbox"\n+                          class="noborder"\n+                          name="paths:list"\n+                          id="#"\n+                          value="#"\n+                          tal:attributes="value   item/getPath;\n                                                          id      string:cb_${item/id};\n                                                          checked item/checked|nothing;\n                                                          alt     string:Select ${item/Title};\n                                                          title   string:Select ${item/Title}" />\n-                                  <input type="hidden" name="selected_obj_paths:list" value="#"\n-                                         tal:attributes="value item/getURL" />\n-                              </td>\n-                              <td>\n-                                  <span tal:content="python:item.author_name or item.Creator">Name</span>\n-                                  <tal:email tal:condition="email">\n-                                      <br/>\n-                                      <a tal:attributes="href string:mailto:$email;"\n-                                         tal:content="email">Email\n-                                      </a>\n-                                  </tal:email>\n-                              </td>\n-                              <td style="white-space: nowrap;" tal:content="python:toLocalizedTime(item.created, long_format=1)"/>\n-                              <td>\n-                                  <a tal:attributes="href item_url" target="_blank"\n-                                     tal:content="item/in_response_to" />\n-                              </td>\n-                              <td tal:attributes="class  python:colorclass(item.review_state)">\n-                                  <div class="mb-2">\n-                                      <span tal:replace="item/Description"/>\n-                                      <a href=""\n-                                         tal:attributes="href string:$item_url/getText"\n-                                         tal:condition="python:item.Description.endswith(\'[...]\')"\n-                                         i18n:translate="label_show_full_comment_text"\n-                                         class="show-full-comment-text">show full comment text</a>\n-                                  </div>\n-                                  <div class="actions input-group-addon">\n-                                      <input\n-                                          type="hidden"\n-                                          name="selected_obj_paths:list"\n-                                          value="#"\n-                                          tal:attributes="value item/getURL"\n-                                          />\n-                                      <!-- delete -->\n-                                      <button id=""\n-                                          class="destructive comment-delete-button btn btn-sm btn-danger"\n-                                          type="submit"\n-                                          value="Delete"\n-                                          name="form.button.moderation.DeleteComment"\n-                                          i18n:attributes="value label_delete;"\n-                                          tal:attributes="id item/id"\n-                                          i18n:translate="label_delete"\n-                                          >Delete</button>\n-                                      <!-- edit -->\n-                                      <a class="pat-plone-modal context btn btn-sm btn-primary" href="#"\n-                                          i18n:translate="label_edit"\n-                                          tal:attributes="href python:item_url+\'/@@edit-comment?review_state=\' + item.review_state">Edit</a>\n+                        <input type="hidden"\n+                          name="selected_obj_paths:list"\n+                          value="#"\n+                          tal:attributes="value item/getURL" />\n+                      </td>\n+                      <td>\n+                        <span tal:content="python:item.author_name or item.Creator">Name</span>\n+                        <tal:email tal:condition="email">\n+                          <br />\n+                          <a tal:attributes="href string:mailto:$email;"\n+                            tal:content="email">Email\n+                          </a>\n+                        </tal:email>\n+                      </td>\n+                      <td style="white-space: nowrap;"\n+                        tal:content="python:toLocalizedTime(item.created, long_format=1)" />\n+                      <td>\n+                        <a tal:attributes="href item_url"\n+                          target="_blank"\n+                          tal:content="item/in_response_to" />\n+                      </td>\n+                      <td tal:attributes="class  python:colorclass(item.review_state)">\n+                        <div class="mb-2">\n+                          <span tal:replace="item/Description" />\n+                          <a href=""\n+                            tal:attributes="href string:$item_url/getText"\n+                            tal:condition="python:item.Description.endswith(\'[...]\')"\n+                            i18n:translate="label_show_full_comment_text"\n+                            class="show-full-comment-text">show full comment text</a>\n+                        </div>\n+                        <div class="actions input-group-addon">\n+                          <input type="hidden"\n+                            name="selected_obj_paths:list"\n+                            value="#"\n+                            tal:attributes="value item/getURL" />\n+                          <!-- delete -->\n+                          <button id=""\n+                            class="destructive comment-delete-button btn btn-sm btn-danger"\n+                            type="submit"\n+                            value="Delete"\n+                            name="form.button.moderation.DeleteComment"\n+                            i18n:attributes="value label_delete;"\n+                            tal:attributes="id item/id"\n+                            i18n:translate="label_delete">Delete</button>\n+                          <!-- edit -->\n+                          <a class="pat-plone-modal context btn btn-sm btn-primary"\n+                            href="#"\n+                            i18n:translate="label_edit"\n+                            tal:attributes="href python:item_url+\'/@@edit-comment?review_state=\' + item.review_state">Edit</a>\n \n-                                      <!-- workflow actions -->\n-                                      <tal:transitions\n-                                          tal:define="\n+                          <!-- workflow actions -->\n+                          <tal:transitions tal:define="\n                                             transitions python:view.allowed_transitions(item_obj)">\n-                                          <button name="form.button.moderation.TransmitComment"\n-                                              tal:repeat="transition transitions"\n-                                              class="context btn btn-sm btn-primary"\n-                                              type="submit"\n-                                              value="Label"\n-                                              tal:content="python:translationhelper.translate(transition[\'title\'])"\n-                                              tal:attributes="id string:${item/id}_${transition/id};\n+                            <button name="form.button.moderation.TransmitComment"\n+                              tal:repeat="transition transitions"\n+                              class="context btn btn-sm btn-primary"\n+                              type="submit"\n+                              value="Label"\n+                              tal:content="python:translationhelper.translate(transition[\'title\'])"\n+                              tal:attributes="id string:${item/id}_${transition/id};\n                                                     data-transition transition/id;\n                                                     value python:translationhelper.translate(transition[\'title\']);\n                                                     style python:transition[\'id\']==\'publish\' and \'background-color: #5cb85c;; border-color: #4cae4c;;\' or \'\';\n-                                                    "\n-                                                 >Label</button>\n-                                      </tal:transitions>\n-                                  </div>\n-                              </td>\n-                              <td>\n-                                  <span class="last-history-entry"\n-                                      tal:attributes="data-href string:$item_url/@@contenthistorypopup"\n-                                      i18n:translate="">\n+                                                    ">Label</button>\n+                          </tal:transitions>\n+                        </div>\n+                      </td>\n+                      <td>\n+                        <span class="last-history-entry"\n+                          tal:attributes="data-href string:$item_url/@@contenthistorypopup"\n+                          i18n:translate="">\n                                       last history entry\n-                                  </span>\n-                              </td>\n-                          </tr>\n-                      </tal:block>\n-                  </tbody>\n+                        </span>\n+                      </td>\n+                    </tr>\n+                  </tal:block>\n+                </tbody>\n               </table>\n-              </div>\n-              <div metal:use-macro="here/batch_macros/macros/navigation" />\n+            </div>\n+            <div metal:use-macro="here/batch_macros/macros/navigation" />\n           </fieldset>\n-      </form>\n+        </form>\n \n \n-    </tal:main-macro>\n-</metal:main>\n+      </tal:main-macro>\n+    </metal:main>\n \n-</body>\n+  </body>\n </html>\n'

Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2022-03-23T21:09:23+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.discussion/commit/b9d794489cb774cdae0ba1d292520bfca1d772f6

no longer register old resources

Files changed:
M plone/app/discussion/profiles/default/registry.xml

b'diff --git a/plone/app/discussion/profiles/default/registry.xml b/plone/app/discussion/profiles/default/registry.xml\nindex ba7fe987..1e0d5355 100644\n--- a/plone/app/discussion/profiles/default/registry.xml\n+++ b/plone/app/discussion/profiles/default/registry.xml\n@@ -4,17 +4,4 @@\n     <value key="edit_comment_enabled">False</value>\n     <value key="delete_own_comment_enabled">False</value>\n   </records>\n-\n-  <records prefix="plone.resources/plone-app-discussion"\n-            interface=\'Products.CMFPlone.interfaces.IResourceRegistry\'>\n-      <value key="js">++plone++plone.app.discussion.javascripts/comments.js</value>\n-  </records>\n-  <records prefix="plone.bundles/plone-legacy"\n-            interface=\'Products.CMFPlone.interfaces.IBundleRegistry\'>\n-    <value key="resources" purge="false">\n-      <element>plone-app-discussion</element>\n-    </value>\n-    <value key="last_compilation"></value>\n-  </records>\n-\n </registry>\n'

Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2022-03-24T15:26:08+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/plone.app.discussion/commit/5f5b23c8cdc8d0ed9e320e4f22fdca7f868b1884

Merge pull request #190 from plone/es6

Move discussion JS to mockup

Files changed:
A news/190.feature
M plone/app/discussion/browser/comments.pt
M plone/app/discussion/browser/configure.zcml
M plone/app/discussion/browser/controlpanel.pt
M plone/app/discussion/browser/moderation.pt
M plone/app/discussion/profiles/default/registry.xml
D plone/app/discussion/browser/javascripts/comments.js
D plone/app/discussion/browser/javascripts/controlpanel.js
D plone/app/discussion/browser/javascripts/javascripts.txt
D plone/app/discussion/browser/javascripts/moderation.js

b'diff --git a/news/190.feature b/news/190.feature\nnew file mode 100644\nindex 00000000..ba7ba0d8\n--- /dev/null\n+++ b/news/190.feature\n@@ -0,0 +1 @@\n+Moved JS to Mockup control panel patterns (ES6) [MrTango]\n\\ No newline at end of file\ndiff --git a/plone/app/discussion/browser/comments.pt b/plone/app/discussion/browser/comments.pt\nindex 9293cf6a..ab5c9e2c 100644\n--- a/plone/app/discussion/browser/comments.pt\n+++ b/plone/app/discussion/browser/comments.pt\n@@ -11,25 +11,26 @@\n                        errors options/state/getErrors|nothing;\n                        wtool context/@@plone_tools/workflow;\n                        auth_token context/@@authenticator/token|nothing"\n-           tal:condition="python:isDiscussionAllowed or has_replies"\n-           i18n:domain="plone">\n-\n-    <div class="reply" tal:condition="python:isAnon and not isAnonymousDiscussionAllowed">\n-        <form tal:attributes="action view/login_action">\n-            <button class="btn btn-primary mb-3"\n-                   type="submit"\n-                   value="Log in to add comments"\n-                   i18n:attributes="value label_login_to_add_comments;"\n-                   i18n:translate="label_login_to_add_comments"\n-                   >Log in to add comments</button>\n-        </form>\n-    </div>\n+    tal:condition="python:isDiscussionAllowed or has_replies"\n+    i18n:domain="plone">\n+    <div class="pat-discussion">\n+        <div class="reply"\n+            tal:condition="python:isAnon and not isAnonymousDiscussionAllowed">\n+            <form tal:attributes="action view/login_action">\n+                <button class="btn btn-primary mb-3"\n+                    type="submit"\n+                    value="Log in to add comments"\n+                    i18n:attributes="value label_login_to_add_comments;"\n+                    i18n:translate="label_login_to_add_comments">Log in to add comments</button>\n+            </form>\n+        </div>\n \n-    <div class="discussion" tal:condition="has_replies">\n-        <tal:getreplies repeat="reply_dict replies">\n+        <div class="discussion"\n+            tal:condition="has_replies">\n+            <tal:getreplies repeat="reply_dict replies">\n \n-            <div class="comment"\n-                 tal:define="reply reply_dict/comment;\n+                <div class="comment"\n+                    tal:define="reply reply_dict/comment;\n                              comment_id reply/getId;\n                              depth reply_dict/depth|python:0;\n                              depth python: depth > 10 and \'10\' or depth;\n@@ -40,185 +41,201 @@\n                              canEdit python:view.can_edit(reply);\n                              canDelete python:view.can_delete(reply);\n                              colorclass python:lambda x: \'state-private\' if x==\'rejected\' else (\'state-internal\' if x==\'spam\' else \'state-\'+x);"\n-                 tal:attributes="class python:\'comment level-{depth} {state}\'.format(depth= depth, state=colorclass(review_state));\n+                    tal:attributes="class python:\'comment level-{depth} {state}\'.format(depth= depth, state=colorclass(review_state));\n                                  id comment_id"\n-                 tal:condition="python:canReview or review_state == \'published\'">\n-\n-                <div class="d-flex flex-row align-items-center mb-3">\n-\n-                  <!-- commenter image -->\n-                  <div class="comment-image me-3" tal:condition="showCommenterImage">\n-                      <a href="" tal:condition="has_author_link" tal:attributes="href author_home_url">\n-                        <img src="defaultUser.png" alt="" tal:attributes="src portrait_url; alt reply/author_name" />\n-                      </a>\n-                      <img src="defaultUser.png" alt="" tal:condition="not: has_author_link" tal:attributes="src portrait_url; alt reply/author_name" />\n-                  </div>\n+                    tal:condition="python:canReview or review_state == \'published\'">\n+\n+                    <div class="d-flex flex-row align-items-center mb-3">\n+\n+                        <!-- commenter image -->\n+                        <div class="comment-image me-3"\n+                            tal:condition="showCommenterImage">\n+                            <a href=""\n+                                tal:condition="has_author_link"\n+                                tal:attributes="href author_home_url">\n+                                <img src="defaultUser.png"\n+                                    alt=""\n+                                    tal:attributes="src portrait_url; alt reply/author_name" />\n+                            </a>\n+                            <img src="defaultUser.png"\n+                                alt=""\n+                                tal:condition="not: has_author_link"\n+                                tal:attributes="src portrait_url; alt reply/author_name" />\n+                        </div>\n \n-                  <!-- commenter name and date -->\n-                  <div class="comment-author">\n+                        <!-- commenter name and date -->\n+                        <div class="comment-author">\n \n-                    <a href="" tal:condition="has_author_link" tal:attributes="href author_home_url">${reply/author_name}</a>\n+                            <a href=""\n+                                tal:condition="has_author_link"\n+                                tal:attributes="href author_home_url">${reply/author_name}</a>\n \n-                    <span tal:condition="not: has_author_link">${reply/author_name}</span>\n+                            <span tal:condition="not: has_author_link">${reply/author_name}</span>\n \n-                    <span tal:condition="not: reply/author_name" i18n:translate="label_anonymous">Anonymous</span>\n+                            <span tal:condition="not: reply/author_name"\n+                                i18n:translate="label_anonymous">Anonymous</span>\n \n-                    <br/>\n+                            <br />\n \n-                    <small class="text-muted" tal:content="python:view.format_time(reply.modification_date)">\n+                            <small class="text-muted"\n+                                tal:content="python:view.format_time(reply.modification_date)">\n                       8/23/2001 12:40:44 PM\n-                    </small>\n+                            </small>\n \n-                  </div>\n-                </div>\n+                        </div>\n+                    </div>\n \n \n \n-                <!-- comment body -->\n-                <div class="comment-body">\n+                    <!-- comment body -->\n+                    <div class="comment-body">\n \n-                    <span tal:replace="structure reply/getText" />\n+                        <span tal:replace="structure reply/getText" />\n \n-                    <!-- comment actions -->\n-                    <div class="d-flex flex-row justify-content-end mb-3">\n+                        <!-- comment actions -->\n+                        <div class="d-flex flex-row justify-content-end mb-3">\n \n-                        <div class="comment-actions actions-edit" tal:condition="python:isEditCommentAllowed and canEdit">\n+                            <div class="comment-actions actions-edit"\n+                                tal:condition="python:isEditCommentAllowed and canEdit">\n \n-                          <!-- edit -->\n-                          <a class="pat-plone-modal context comment-action action-edit btn btn-primary btn-sm"\n-                              tal:condition="auth_token"\n-                              tal:attributes="href string:${reply/absolute_url}/@@edit-comment?_authenticator=${auth_token}"\n-                              i18n:translate="Edit">Edit</a>\n+                                <!-- edit -->\n+                                <a class="pat-plone-modal context comment-action action-edit btn btn-primary btn-sm"\n+                                    tal:condition="auth_token"\n+                                    tal:attributes="href string:${reply/absolute_url}/@@edit-comment?_authenticator=${auth_token}"\n+                                    i18n:translate="Edit">Edit</a>\n \n-                          <form name="edit"\n-                                action=""\n-                                method="get"\n-                                class="comment-action action-edit"\n-                                tal:condition="not: auth_token"\n-                                tal:attributes="action string:${reply/absolute_url}/@@edit-comment;\n+                                <form name="edit"\n+                                    action=""\n+                                    method="get"\n+                                    class="comment-action action-edit"\n+                                    tal:condition="not: auth_token"\n+                                    tal:attributes="action string:${reply/absolute_url}/@@edit-comment;\n                                                 id string:edit-${comment_id}">\n \n-                              <button name="form.button.EditComment"\n-                                      class="context btn btn-primary btn-sm"\n-                                      type="submit"\n-                                      value="Edit"\n-                                      i18n:attributes="value label_edit;"\n-                                      i18n:translate="label_edit"\n-                                      >Edit</button>\n+                                    <button name="form.button.EditComment"\n+                                        class="context btn btn-primary btn-sm"\n+                                        type="submit"\n+                                        value="Edit"\n+                                        i18n:attributes="value label_edit;"\n+                                        i18n:translate="label_edit">Edit</button>\n \n-                          </form>\n+                                </form>\n \n-                        </div>\n+                            </div>\n \n-                        <div class="comment-actions actions-delete" tal:condition="python:canDelete">\n+                            <div class="comment-actions actions-delete"\n+                                tal:condition="python:canDelete">\n \n-                            <!-- delete own comment -->\n-                            <form name="delete"\n-                                action=""\n-                                method="post"\n-                                class="comment-action action-delete"\n-                                tal:condition="python:not canDelete and isDeleteOwnCommentAllowed and view.could_delete_own(reply)"\n-                                tal:attributes="action string:${reply/absolute_url}/@@delete-own-comment;\n+                                <!-- delete own comment -->\n+                                <form name="delete"\n+                                    action=""\n+                                    method="post"\n+                                    class="comment-action action-delete"\n+                                    tal:condition="python:not canDelete and isDeleteOwnCommentAllowed and view.could_delete_own(reply)"\n+                                    tal:attributes="action string:${reply/absolute_url}/@@delete-own-comment;\n                                                 style python:view.can_delete_own(reply) and \'display: inline\' or \'display: none\';\n                                                 id string:delete-${comment_id}">\n-                                <button name="form.button.DeleteComment"\n+                                    <button name="form.button.DeleteComment"\n                                         class="destructive btn btn-danger btn-sm"\n                                         type="submit"\n                                         value="Delete"\n                                         i18n:attributes="value label_delete;"\n-                                        i18n:translate="label_delete"\n-                                        >Delete</button>\n-                            </form>\n-                            \n-                            <!-- delete -->\n-                            <form name="delete"\n-                                action=""\n-                                method="post"\n-                                class="comment-action action-delete"\n-                                tal:condition="python:canDelete"\n-                                tal:attributes="action string:${reply/absolute_url}/@@moderate-delete-comment;\n+                                        i18n:translate="label_delete">Delete</button>\n+                                </form>\n+\n+                                <!-- delete -->\n+                                <form name="delete"\n+                                    action=""\n+                                    method="post"\n+                                    class="comment-action action-delete"\n+                                    tal:condition="python:canDelete"\n+                                    tal:attributes="action string:${reply/absolute_url}/@@moderate-delete-comment;\n                                                 id string:delete-${comment_id}">\n-                                <button name="form.button.DeleteComment"\n+                                    <button name="form.button.DeleteComment"\n                                         class="destructive btn btn-danger btn-sm"\n                                         type="submit"\n                                         value="Delete"\n                                         i18n:attributes="value label_delete;"\n-                                        i18n:translate="label_delete"\n-                                        >Delete</button>\n-                            </form>\n-                        \n-                        </div>\n+                                        i18n:translate="label_delete">Delete</button>\n+                                </form>\n \n-                        <div class="comment-actions actions-workflow d-flex flex-row" tal:condition="reply_dict/actions|nothing">\n-                            \n-                            <form name=""\n-                                action=""\n-                                method="get"\n-                                class="comment-action action-${action/id}"\n-                                tal:condition="canReview"\n-                                tal:repeat="action reply_dict/actions|nothing"\n-                                tal:attributes="action string:${reply/absolute_url}/@@transmit-comment;\n+                            </div>\n+\n+                            <div class="comment-actions actions-workflow d-flex flex-row"\n+                                tal:condition="reply_dict/actions|nothing">\n+\n+                                <form name=""\n+                                    action=""\n+                                    method="get"\n+                                    class="comment-action action-${action/id}"\n+                                    tal:condition="canReview"\n+                                    tal:repeat="action reply_dict/actions|nothing"\n+                                    tal:attributes="action string:${reply/absolute_url}/@@transmit-comment;\n                                                 name action/id;\n                                                 id string:${action/id}-${comment_id};\n                                                 ">\n-                                <input type="hidden" name="workflow_action" tal:attributes="value action/id" />\n-                                <button name="form.button.TransmitComment"\n+                                    <input type="hidden"\n+                                        name="workflow_action"\n+                                        tal:attributes="value action/id" />\n+                                    <button name="form.button.TransmitComment"\n                                         class="context btn btn-primary btn-sm"\n                                         type="submit"\n-                                        i18n:translate=""\n-                                        >${action/title}</button>\n-                            </form>\n+                                        i18n:translate="">${action/title}</button>\n+                                </form>\n \n-                        </div>\n+                            </div>\n \n-                    </div>\n-                    <!-- end comment actions -->\n+                        </div>\n+                        <!-- end comment actions -->\n \n \n-                </div>\n-                <button class="context reply-to-comment-button hide allowMultiSubmit btn btn-primary btn-sm"\n+                    </div>\n+                    <button class="context reply-to-comment-button hide allowMultiSubmit btn btn-primary btn-sm"\n                         tal:condition="python:isDiscussionAllowed and (isAnon and isAnonymousDiscussionAllowed or userHasReplyPermission)"\n                         i18n:translate="label_reply">\n                     Reply\n-                </button>\n+                    </button>\n \n-            </div>\n+                </div>\n \n-        </tal:getreplies>\n+            </tal:getreplies>\n \n-        <div tal:condition="python: has_replies and not isDiscussionAllowed"\n-             class="discreet"\n-             i18n:translate="label_commenting_disabled">\n+            <div tal:condition="python: has_replies and not isDiscussionAllowed"\n+                class="discreet"\n+                i18n:translate="label_commenting_disabled">\n             Commenting has been disabled.\n-        </div>\n+            </div>\n \n-    </div>\n+        </div>\n \n-    <div class="reply" tal:condition="python:has_replies and (isAnon and not isAnonymousDiscussionAllowed)">\n-        <form tal:attributes="action view/login_action" class="mb-3">\n-            <button class="standalone loginbutton btn btn-primary"\n-                   type="submit"\n-                   value="Log in to add comments"\n-                   i18n:attributes="value label_login_to_add_comments;"\n-                   i18n:translate="label_login_to_add_comments"\n-                   >Log in to add comments</button>\n-        </form>\n-    </div>\n+        <div class="reply"\n+            tal:condition="python:has_replies and (isAnon and not isAnonymousDiscussionAllowed)">\n+            <form tal:attributes="action view/login_action"\n+                class="mb-3">\n+                <button class="standalone loginbutton btn btn-primary"\n+                    type="submit"\n+                    value="Log in to add comments"\n+                    i18n:attributes="value label_login_to_add_comments;"\n+                    i18n:translate="label_login_to_add_comments">Log in to add comments</button>\n+            </form>\n+        </div>\n \n-    <div id="commenting" class="reply border p-3" tal:condition="python:isDiscussionAllowed and (isAnon and isAnonymousDiscussionAllowed or userHasReplyPermission)">\n+        <div id="commenting"\n+            class="reply border p-3"\n+            tal:condition="python:isDiscussionAllowed and (isAnon and isAnonymousDiscussionAllowed or userHasReplyPermission)">\n \n-        <fieldset>\n+            <fieldset>\n \n-            <legend i18n:translate="label_add_comment">Add comment</legend>\n+                <legend i18n:translate="label_add_comment">Add comment</legend>\n \n-            <p tal:content="view/comment_transform_message">\n+                <p tal:content="view/comment_transform_message">\n                 You can add a comment by filling out the form below. Plain text\n                 formatting.\n-            </p>\n+                </p>\n \n-            <div tal:replace="structure view/form/render" />\n+                <div tal:replace="structure view/form/render" />\n \n-        </fieldset>\n+            </fieldset>\n+        </div>\n     </div>\n-\n </tal:block>\ndiff --git a/plone/app/discussion/browser/configure.zcml b/plone/app/discussion/browser/configure.zcml\nindex 15c015f3..63f80a45 100644\n--- a/plone/app/discussion/browser/configure.zcml\n+++ b/plone/app/discussion/browser/configure.zcml\n@@ -138,13 +138,6 @@\n         permission="zope2.View"\n         />\n \n-    <!-- Resource directory for javascripts -->\n-    <plone:static\n-        name="plone.app.discussion.javascripts"\n-        type="plone"\n-        directory="javascripts"\n-        />\n-\n     <!-- Control panel -->\n     <browser:page\n         name="discussion-controlpanel"\ndiff --git a/plone/app/discussion/browser/controlpanel.pt b/plone/app/discussion/browser/controlpanel.pt\nindex d853e283..b0e57e7a 100644\n--- a/plone/app/discussion/browser/controlpanel.pt\n+++ b/plone/app/discussion/browser/controlpanel.pt\n@@ -18,10 +18,6 @@\n       <span tal:replace="structure view/contents" />\n     </div>\n \n-  <script type="text/javascript"\n-          tal:attributes="src string:${portal_url}/++plone++plone.app.discussion.javascripts/controlpanel.js">\n-  </script>\n-\n </metal:main>\n \n </body>\ndiff --git a/plone/app/discussion/browser/javascripts/comments.js b/plone/app/discussion/browser/javascripts/comments.js\ndeleted file mode 100644\nindex 89ce56a3..00000000\n--- a/plone/app/discussion/browser/javascripts/comments.js\n+++ /dev/null\n@@ -1,283 +0,0 @@\n-/******************************************************************************\n- *\n- * jQuery functions for the plone.app.discussion comment viewlet and form.\n- *\n- ******************************************************************************/\n-/* global require */\n-\n-if (require === undefined) {\n-  require = function(reqs, torun) {\n-    // jshint ignore:line\n-    "use strict";\n-    return torun(window.jQuery);\n-  };\n-}\n-\n-require([\n-  // jshint ignore:line\n-  "jquery"\n-], function($) {\n-  "use strict";\n-\n-  // This unnamed function allows us to use $ inside of a block of code\n-  // without permanently overwriting $.\n-  // http://docs.jquery.com/Using_jQuery_with_Other_Libraries\n-  /**************************************************************************\n-   * Create a reply-to-comment form right beneath the form that is passed to\n-   * the function. We do this by copying the regular comment form and\n-   * adding a hidden in_reply_to field to the form.\n-   **************************************************************************/\n-  $.createReplyForm = function(comment_div) {\n-    var comment_id = comment_div.attr("id");\n-\n-    var reply_button = comment_div.find(".reply-to-comment-button");\n-\n-    /* Clone the reply div at the end of the page template that contains\n-     * the regular comment form.\n-     */\n-    var reply_div = $("#commenting").clone(true);\n-\n-    /* Remove the ReCaptcha JS code before appending the form. If not\n-     * removed, this causes problems\n-     */\n-    reply_div\n-      .find("#formfield-form-widgets-captcha")\n-      .find("script")\n-      .remove();\n-\n-    /* Insert the cloned comment form right after the reply button of the\n-     * current comment.\n-     */\n-    reply_div.appendTo(comment_div).css("display", "none");\n-\n-    /* Remove id=\'commenting\' attribute, since we use it to uniquely define\n-           the main reply form. */\n-    // Still belongs to class=\'reply\'\n-    reply_div.removeAttr("id");\n-\n-    /* Hide the reply button (only hide, because we may want to show it\n-     * again if the user hits the cancel button).\n-     */\n-    $(reply_button).css("display", "none");\n-\n-    /* Fetch the reply form inside the reply div */\n-    var reply_form = reply_div.find("form");\n-\n-    /* Change the id of the textarea of the reply form\n-     * To avoid conflict later between textareas with same id \'form-widgets-comment-text\' while implementing a seperate instance of TinyMCE\n-     * */\n-    reply_form\n-      .find("#formfield-form-widgets-comment-text")\n-      .attr("id", "formfield-form-widgets-new-textarea" + comment_id);\n-    reply_form\n-      .find("#form-widgets-comment-text")\n-      .attr("id", "form-widgets-new-textarea" + comment_id);\n-\n-    /* Populate the hidden \'in_reply_to\' field with the correct comment\n-           id */\n-    reply_form.find(\'input[name="form.widgets.in_reply_to"]\').val(comment_id);\n-\n-    /* Add a remove-reply-to-comment Javascript function to remove the\n-           form */\n-    var cancel_reply_button = reply_div.find(".cancelreplytocomment");\n-    cancel_reply_button.attr("id", comment_id);\n-\n-    /* Show the cancel buttons. */\n-    reply_form\n-      .find(\'input[name="form.buttons.cancel"]\')\n-      .css("display", "inline");\n-\n-    /* Show the reply layer with a slide down effect */\n-    reply_div.slideDown("slow");\n-\n-    /* Show the cancel button in the reply-to-comment form */\n-    cancel_reply_button.css("display", "inline");\n-  };\n-\n-  /**************************************************************************\n-   * Remove all error messages and field values from the form that is passed\n-   * to the function.\n-   **************************************************************************/\n-  $.clearForm = function(form_div) {\n-    form_div.find(".error").removeClass("error");\n-    form_div.find(".fieldErrorBox").remove();\n-    form_div.find(\'input[type="text"]\').attr("value", "");\n-    form_div.find("textarea").attr("value", "");\n-    /* XXX: Clean all additional form extender fields. */\n-  };\n-\n-  function init_comment_eventhandler () {\n-      /**********************************************************************\n-       * Transmit a single comment.\n-       **********************************************************************/\n-      $(\'input[name="form.button.TransmitComment"]\').on("click", function(e) {\n-        e.preventDefault();\n-        var trigger = this;\n-        var form = $(this).parents("form");\n-        var data = $(form).serialize();\n-        var form_url = $(form).attr("action");\n-        var comment_id = $(this).parents(".comment").attr("id");\n-        $.ajax({\n-          type: "GET",\n-          url: form_url,\n-          data: data,\n-          context: trigger,\n-          success: function(msg) {\n-              let url = location.href;\n-              $(this).parents(".comment").load(\n-                // loading child nodes is not enough,\n-                // class attributes are needed for visualization of workflow_state\n-                url + " #" + comment_id + ".comment",\n-                function() {\n-                  $(this).find(".comment").unwrap();\n-                  init_comment_eventhandler();\n-                  $(".pat-plone-modal").patPloneModal();\n-                }\n-              );\n-          },\n-          error: function(msg) {\n-            return true;\n-          }\n-        });\n-        return false;\n-      });\n-\n-      /**********************************************************************\n-       * Edit a comment\n-       **********************************************************************/\n-      if ($.fn.prepOverlay) {\n-        $(\'form[name="edit"]\').prepOverlay({\n-          cssclass: "overlay-edit-comment",\n-          width: "60%",\n-          subtype: "ajax",\n-          filter: "#content>*"\n-        });\n-      }\n-\n-      /**********************************************************************\n-       * Delete a comment and its answers.\n-       **********************************************************************/\n-      $(\'input[name="form.button.DeleteComment"]\').on("click", function(e) {\n-        e.preventDefault();\n-        var trigger = this;\n-        var form = $(this).parents("form");\n-        var data = $(form).serialize();\n-        var form_url = $(form).attr("action");\n-        $.ajax({\n-          type: "POST",\n-          url: form_url,\n-          data: data,\n-          context: $(trigger).parents(".comment"),\n-          success: function(data) {\n-            // jshint ignore:line\n-            var comment = $(this);\n-            var clss = comment.attr("class");\n-            // remove replies\n-            var treelevel = parseInt(\n-              clss[clss.indexOf("replyTreeLevel") + "replyTreeLevel".length],\n-              10\n-            );\n-            // selector for all the following elements of lower level\n-            var selector = ".replyTreeLevel" + treelevel;\n-            for (var i = 0; i < treelevel; i++) {\n-              selector += ", .replyTreeLevel" + i;\n-            }\n-            comment.nextUntil(selector).each(function() {\n-              $(this).fadeOut("fast", function() {\n-                $(this).remove();\n-              });\n-            });\n-            // Add delete button to the parent\n-            var parent = comment.prev(\n-              \'[class*="replyTreeLevel\' + (treelevel - 1) + \'"]\'\n-            );\n-            parent.find(\'form[name="delete"]\').css("display", "inline");\n-            // remove comment\n-            $(this).fadeOut("fast", function() {\n-              $(this).remove();\n-            });\n-          },\n-          error: function(req, error) {\n-            // jshint ignore:line\n-            return true;\n-          }\n-        });\n-        return false;\n-      });\n-  };\n-\n-  $(document).ready(function() {\n-    init_comment_eventhandler();\n-\n-    /**********************************************************************\n-     * If the user has hit the reply button of a reply-to-comment form\n-     * (form was submitted with a value for the \'in_reply_to\' field in the\n-     * request), create a reply-to-comment form right under this comment.\n-     **********************************************************************/\n-    var post_comment_div = $("#commenting");\n-    var in_reply_to_field = post_comment_div.find(\n-      \'input[name="form.widgets.in_reply_to"]\'\n-    );\n-    if (in_reply_to_field.length !== 0 && in_reply_to_field.val() !== "") {\n-      var current_reply_id = "#" + in_reply_to_field.val();\n-      var current_reply_to_div = $(".discussion").find(current_reply_id);\n-      $.createReplyForm(current_reply_to_div);\n-      $.clearForm(post_comment_div);\n-    }\n-\n-    /**********************************************************************\n-     * If the user hits the \'reply\' button of an existing comment, create a\n-     * reply form right beneath this comment.\n-     **********************************************************************/\n-    $(".reply-to-comment-button").bind("click", function(e) {\n-      // jshint ignore:line\n-      var comment_div = $(this)\n-        .parents()\n-        .filter(".comment");\n-      $.createReplyForm(comment_div);\n-      $.clearForm(comment_div);\n-    });\n-\n-    /**********************************************************************\n-     * If the user hits the \'clear\' button of an open reply-to-comment form,\n-     * remove the form and show the \'reply\' button again.\n-     **********************************************************************/\n-    $("#commenting #form-buttons-cancel").bind("click", function(e) {\n-      e.preventDefault();\n-      var reply_to_comment_button = $(this)\n-        .parents()\n-        .filter(".comment")\n-        .find(".reply-to-comment-button");\n-\n-      /* Find the reply-to-comment form and hide and remove it again. */\n-      $.reply_to_comment_form = $(this)\n-        .parents()\n-        .filter(".reply");\n-      $.reply_to_comment_form.slideUp("slow", function() {\n-        $(this).remove();\n-      });\n-\n-      /* Show the reply-to-comment button again. */\n-      reply_to_comment_button.css("display", "inline");\n-    });\n-\n-    /**********************************************************************\n-     * By default, hide the reply and the cancel button for the regular add\n-     * comment form.\n-     **********************************************************************/\n-    $(".reply")\n-      .find(\'input[name="form.buttons.reply"]\')\n-      .css("display", "none");\n-    $(".reply")\n-      .find(\'input[name="form.buttons.cancel"]\')\n-      .css("display", "none");\n-\n-    /**********************************************************************\n-     * By default, show the reply button only when Javascript is enabled.\n-     * Otherwise hide it, since the reply functions only work with JS\n-     * enabled.\n-     **********************************************************************/\n-    $(".reply-to-comment-button").removeClass("hide");\n-  });\n-\n-});\ndiff --git a/plone/app/discussion/browser/javascripts/controlpanel.js b/plone/app/discussion/browser/javascripts/controlpanel.js\ndeleted file mode 100644\nindex bfb5ba6d..00000000\n--- a/plone/app/discussion/browser/javascripts/controlpanel.js\n+++ /dev/null\n@@ -1,142 +0,0 @@\n-/******************************************************************************\n- *\n- * jQuery functions for the plone.app.discussion comment viewlet and form.\n- *\n- ******************************************************************************/\n-/* global require */\n-\n-if(require === undefined){\n-    require = function(reqs, torun){  // jshint ignore:line\n-        \'use strict\';\n-        return torun(window.jQuery);\n-    };\n-}\n-\n-require([  // jshint ignore:line\n-    \'jquery\'\n-], function ($) {\n-    \'use strict\';\n-    // This unnamed function allows us to use $ inside of a block of code\n-    // without permanently overwriting $.\n-    // http://docs.jquery.com/Using_jQuery_with_Other_Libraries\n-\n-    /* Disable a control panel setting */\n-    $.disableSettings = function (settings) {\n-        $.each(settings, function (intIndex, setting) {\n-            setting.addClass(\'unclickable\');\n-            var setting_field = $(setting).find(\'input,select\');\n-            setting_field.attr(\'disabled\', \'disabled\');\n-        });\n-    };\n-\n-    /* Enable a control panel setting */\n-    $.enableSettings = function (settings) {\n-        $.each(settings, function (intIndex, setting) {\n-            setting.removeClass(\'unclickable\');\n-            var setting_field = $(setting).find(\'input,select\');\n-            setting_field.removeAttr(\'disabled\');\n-        });\n-    };\n-\n-    /* Update settings */\n-    $.updateSettings = function () {\n-\n-        var globally_enabled = $(\'#content-core\').hasClass(\'globally_enabled\');\n-        var moderation_custom = $(\'#content-core\').hasClass(\'moderation_custom\');\n-        var invalid_mail_setup = $(\'#content-core\').hasClass(\'invalid_mail_setup\');\n-\n-        /* If commenting is globally disabled, disable all settings. */\n-        if (globally_enabled === true) {\n-            $.enableSettings([\n-                $(\'#formfield-form-widgets-anonymous_comments\'),\n-                $(\'#formfield-form-widgets-anonymous_email_enabled\'),\n-                $(\'#formfield-form-widgets-moderation_enabled\'),\n-                $(\'#formfield-form-widgets-edit_comment_enabled\'),\n-                $(\'#formfield-form-widgets-delete_own_comment_enabled\'),\n-                $(\'#formfield-form-widgets-text_transform\'),\n-                $(\'#formfield-form-widgets-captcha\'),\n-                $(\'#formfield-form-widgets-show_commenter_image\'),\n-                $(\'#formfield-form-widgets-moderator_notification_enabled\'),\n-                $(\'#formfield-form-widgets-moderator_email\'),\n-                $(\'#formfield-form-widgets-user_notification_enabled\')\n-            ]);\n-        }\n-        else {\n-            $.disableSettings([\n-                $(\'#formfield-form-widgets-anonymous_comments\'),\n-                $(\'#formfield-form-widgets-anonymous_email_enabled\'),\n-                $(\'#formfield-form-widgets-moderation_enabled\'),\n-                $(\'#formfield-form-widgets-edit_comment_enabled\'),\n-                $(\'#formfield-form-widgets-delete_own_comment_enabled\'),\n-                $(\'#formfield-form-widgets-text_transform\'),\n-                $(\'#formfield-form-widgets-captcha\'),\n-                $(\'#formfield-form-widgets-show_commenter_image\'),\n-                $(\'#formfield-form-widgets-moderator_notification_enabled\'),\n-                $(\'#formfield-form-widgets-moderator_email\'),\n-                $(\'#formfield-form-widgets-user_notification_enabled\')\n-            ]);\n-        }\n-\n-        /* If the mail setup is invalid, disable the mail settings. */\n-        if (invalid_mail_setup === true) {\n-            $.disableSettings([\n-                $(\'#formfield-form-widgets-moderator_notification_enabled\'),\n-                $(\'#formfield-form-widgets-moderator_email\'),\n-                $(\'#formfield-form-widgets-user_notification_enabled\')\n-            ]);\n-        }\n-        else {\n-            /* Enable mail setup only if discussion is enabled. */\n-            if (globally_enabled === true) {\n-                $.enableSettings([\n-                    $(\'#formfield-form-widgets-moderator_notification_enabled\'),\n-                    $(\'#formfield-form-widgets-moderator_email\'),\n-                    $(\'#formfield-form-widgets-user_notification_enabled\')\n-                ]);\n-            }\n-        }\n-\n-        /* If a custom workflow for comments is enabled, disable the moderation\n-           switch. */\n-        if (moderation_custom === true) {\n-            $.disableSettings([\n-                $(\'#formfield-form-widgets-moderation_enabled\')\n-            ]);\n-        }\n-    };\n-    //#JSCOVERAGE_IF 0\n-\n-    /**************************************************************************\n-     * Window Load Function: Executes when complete page is fully loaded,\n-     * including all frames,\n-     **************************************************************************/\n-    $(document).ready(function () {\n-\n-        // Update settings on page load\n-        $.updateSettings();\n-\n-        // Set #content-core class and update settings afterwards\n-        $(\'#form-widgets-globally_enabled-0\').on(\'change\', function(){\n-            if (this.checked) {\n-                $(\'#content-core\').addClass(\'globally_enabled\');\n-            }\n-            else {\n-                $(\'#content-core\').removeClass(\'globally_enabled\');\n-            }\n-            $.updateSettings();\n-        });\n-\n-        /**********************************************************************\n-         * Remove the disabled attribute from all form elements before\n-         * submitting the form. Otherwise the z3c.form will raise errors on\n-         * the required attributes.\n-         **********************************************************************/\n-        $(\'form#DiscussionSettingsEditForm\').bind(\'submit\', function () {\n-            $(this).find(\'input,select\').removeAttr(\'disabled\');\n-        });\n-\n-    });\n-\n-    //#JSCOVERAGE_ENDIF\n-\n-});\ndiff --git a/plone/app/discussion/browser/javascripts/javascripts.txt b/plone/app/discussion/browser/javascripts/javascripts.txt\ndeleted file mode 100644\nindex 99f3056f..00000000\n--- a/plone/app/discussion/browser/javascripts/javascripts.txt\n+++ /dev/null\n@@ -1,42 +0,0 @@\n-===============================\n-plone.app.discussion Javascript\n-===============================\n-\n-This document contains a description of how the plone.app.discussion javascript\n-code works.\n-\n-HTML Structure\n---------------\n-\n-The "discussion" div contains all comments that have been posted to a specific\n-content object. Each comment div has a unique id::\n-\n-  <div class="discussion">\n-    <div class="comment" id="1282720906349675">\n-      <h3 class="commentTitle"></h3>\n-      <div class="documentByLine"></div>\n-      <div class="commentBody"> </div>\n-      <div class="commentActions">\n-        <button class="reply-to-comment-button">Reply</button>\n-      </div>\n-    </div>\n-\n-The comment form is rendered inside a "commenting" div::\n-\n-  <div id="commenting" class="reply">\n-    <fieldset>\n-      <legend i18n:translate="label_add_comment">Add comment</legend>\n-      <p>\n-        You can add a comment by filling out the form below. Plain text\n-        formatting.\n-      </p>\n-      <form>\n-        <div id="formfield-form-widgets-in_reply_to">\n-          <input id="form-widgets-in_reply_to"\n-                 name="form.widgets.in_reply_to" value=\n-                 type="hidden"\n-           />\n-        </div>\n-      </form>\n-    </fieldset>\n-  </div>\ndiff --git a/plone/app/discussion/browser/javascripts/moderation.js b/plone/app/discussion/browser/javascripts/moderation.js\ndeleted file mode 100644\nindex cc6a547c..00000000\n--- a/plone/app/discussion/browser/javascripts/moderation.js\n+++ /dev/null\n@@ -1,228 +0,0 @@\n-/******************************************************************************\n- *\n- * jQuery functions for the plone.app.discussion moderation.\n- *\n- ******************************************************************************/\n-\n-if (require === undefined) {\n-  require = function(reqs, torun) {\n-    "use strict";\n-    return torun(window.jQuery);\n-  };\n-}\n-\n-require(["jquery", "pat-registry"], function($, registry) {\n-  "use strict";\n-\n-  $(document).ready(function() {\n-    init_moderation_eventhandler();\n-  });\n-\n-  function init_moderation_eventhandler() {\n-    /**********************************************************************\n-     * Delete a single comment.\n-     **********************************************************************/\n-    $("button[name=\'form.button.moderation.DeleteComment\']").click(function(e) {\n-      e.preventDefault();\n-      var row = $(this).closest("tr");\n-      var path = row.find("[name=\'selected_obj_paths:list\']").attr("value");\n-      var auth_key = $(\'input[name="_authenticator"]\').val();\n-      var target =\n-        path + "/@@moderate-delete-comment?_authenticator=" + auth_key;\n-      $.ajax({\n-        type: "GET",\n-        url: target,\n-        success: function(msg) {\n-          // fade out row\n-          row.fadeOut(250).fadeIn(250, function() {\n-            row.remove();\n-          });\n-          // reload page if all comments have been removed\n-          var comments = $("table#review-comments > tbody > tr");\n-          if (comments.length === 1) {\n-            location.reload();\n-          }\n-        },\n-        error: function(msg) {\n-          alert("Error sending AJAX request:" + target);\n-        }\n-      });\n-    });\n-\n-    /**********************************************************************\n-     * Transmit a single comment.\n-     **********************************************************************/\n-    $(\'button[name="form.button.moderation.TransmitComment"]\').click(function(\n-      e\n-    ) {\n-      e.preventDefault();\n-      let button = $(this);\n-      var row = $(this).closest("tr");\n-      var path = $(row)\n-        .find("[name=\'selected_obj_paths:list\']")\n-        .attr("value");\n-      var workflow_action = $(this).attr("data-transition");\n-      var auth_key = $(\'input[name="_authenticator"]\').val();\n-      // distinction of workflow_action\n-      var target =\n-        path +\n-        "/@@transmit-comment?_authenticator=" +\n-        auth_key +\n-        "&workflow_action=" +\n-        workflow_action;\n-      var moderate =\n-        $(this)\n-          .closest("fieldset")\n-          .attr("id") == "fieldset-moderate-comments";\n-      $.ajax({\n-        type: "GET",\n-        url: target,\n-        success: function(msg) {\n-          if (moderate) {\n-            let url = location.href;\n-            $("#review-comments").load(\n-              url + " #review-comments > *",\n-              function() {\n-                init_moderation_eventhandler();\n-                $(".pat-plone-modal").patPloneModal();\n-              }\n-            );\n-          } else {\n-            location.reload();\n-          }\n-        },\n-        error: function(msg) {\n-          alert(\n-            "Error transmitting comment. (Error sending AJAX request:" +\n-              target +\n-              ")"\n-          );\n-        }\n-      });\n-    });\n-\n-    /**********************************************************************\n-     * Bulk actions for comments (delete, publish)\n-     **********************************************************************/\n-    $("button[name=\'form.button.BulkAction\']").click(function(e) {\n-      e.preventDefault();\n-      var form = $(this).closest("form");\n-      var target = $(form).attr("action");\n-      var params = $(form).serialize();\n-      var valArray = $("input:checkbox:checked");\n-      var selectField = $(form).find("[name=\'form.select.BulkAction\']");\n-\n-      if (selectField.val() === "-1") {\n-        // TODO: translate message\n-        alert("You haven\'t selected a bulk action. Please select one.");\n-      } else if (valArray.length === 0) {\n-        // TODO: translate message\n-        alert(\n-          "You haven\'t selected any comment for this bulk action." +\n-            "Please select at least one comment."\n-        );\n-      } else {\n-        $.post(target, params, function(data) {\n-          // reset the bulkaction select\n-          selectField.find("option[value=\'-1\']").attr("selected", "selected");\n-          // reload filtered comments\n-          $("#review-comments").load(\n-            window.location + " #review-comments",\n-            function() {\n-              init_moderation_eventhandler();\n-              $(".pat-plone-modal").patPloneModal();\n-            }\n-          );\n-        });\n-      }\n-    });\n-\n-    /**********************************************************************\n-     * Check or uncheck all checkboxes from the batch moderation page.\n-     **********************************************************************/\n-    $("input[name=\'check_all\']").click(function() {\n-      if ($(this).val() === "0") {\n-        $(this)\n-          .parents("table")\n-          .find("input:checkbox")\n-          .prop("checked", true);\n-        $(this).val("1");\n-      } else {\n-        $(this)\n-          .parents("table")\n-          .find("input:checkbox")\n-          .prop("checked", false);\n-        $(this).val("0");\n-      }\n-    });\n-\n-    /**********************************************************************\n-     * select comments with review_state\n-     **********************************************************************/\n-\n-    $("input[name=\'review_state\']").click(function() {\n-      let review_state = $(this).val();\n-      let url = location.href;\n-      if (location.search) {\n-        url = location.href.replace(\n-          location.search,\n-          "?review_state=" + review_state\n-        );\n-      } else {\n-        url = location.href + "?review_state=" + review_state;\n-      }\n-\n-      $("#fieldset-moderate-comments")\n-        .parent()\n-        .load(url + " #content form > *", function() {\n-          init_moderation_eventhandler();\n-          $(".pat-plone-modal").patPloneModal();\n-          let stateObj = { review_state: review_state };\n-          history.pushState(stateObj, "moderate comments", url);\n-        });\n-    });\n-\n-    /**********************************************************************\n-     * Show full text of a comment in the batch moderation page.\n-     **********************************************************************/\n-    $(".show-full-comment-text").click(function(e) {\n-      e.preventDefault();\n-      var target = $(this).attr("href");\n-      var parent = $(this).parent();\n-      $.ajax({\n-        type: "GET",\n-        url: target,\n-        data: "",\n-        success: function(data) {\n-          // show full text\n-          parent.html(data);\n-        },\n-        error: function(msg) {\n-          alert("Error getting full comment text:" + target);\n-        }\n-      });\n-    });\n-\n-    /**********************************************************************\n-     * Comments published: Load history for publishing date.\n-     **********************************************************************/\n-    $(".last-history-entry").each(function() {\n-      var lasthistoryentry = $(this);\n-      $.ajax({\n-        url: lasthistoryentry.attr("data-href"),\n-        success: function(data) {\n-          lasthistoryentry.html(\n-            $(data)\n-              .find(".historyByLine")\n-              .first()\n-          );\n-          // format date\n-          registry.scan(lasthistoryentry);\n-        },\n-        error: function(msg) {\n-          console.error("Error getting history.");\n-        }\n-      });\n-    });\n-  } // end init_moderation_eventhandler\n-});\ndiff --git a/plone/app/discussion/browser/moderation.pt b/plone/app/discussion/browser/moderation.pt\nindex 6ace4200..b3a94785 100644\n--- a/plone/app/discussion/browser/moderation.pt\n+++ b/plone/app/discussion/browser/moderation.pt\n@@ -1,18 +1,19 @@\n-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"\n-      xmlns:tal="http://xml.zope.org/namespaces/tal"\n-      xmlns:metal="http://xml.zope.org/namespaces/metal"\n-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n-      lang="en"\n-      metal:use-macro="context/main_template/macros/master"\n-      i18n:domain="plone">\n-<body>\n+<html xmlns="http://www.w3.org/1999/xhtml"\n+  xml:lang="en"\n+  xmlns:tal="http://xml.zope.org/namespaces/tal"\n+  xmlns:metal="http://xml.zope.org/namespaces/metal"\n+  xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+  lang="en"\n+  metal:use-macro="context/main_template/macros/master"\n+  i18n:domain="plone">\n+  <body>\n \n-<metal:override fill-slot="top_slot"\n-    tal:define="disable_column_one python:request.set(\'disable_plone.leftcolumn\',1);\n-                disable_column_two python:request.set(\'disable_plone.rightcolumn\',1);"/>\n+    <metal:override fill-slot="top_slot"\n+      tal:define="disable_column_one python:request.set(\'disable_plone.leftcolumn\',1);\n+                disable_column_two python:request.set(\'disable_plone.rightcolumn\',1);" />\n \n-<metal:main fill-slot="main">\n-    <tal:main-macro metal:define-macro="main"\n+    <metal:main fill-slot="main">\n+      <tal:main-macro metal:define-macro="main"\n         tal:define="toLocalizedTime nocall:context/@@plone/toLocalizedTime;\n                     items view/comments;\n                     filter request/review_state|nothing;\n@@ -24,9 +25,6 @@\n                     colorclass python:lambda x: \'state-private\' if x==\'rejected\' else (\'state-internal\' if x==\'spam\' else \'state-\'+x);\n                     translationhelper nocall:context/@@translationhelper;\n                     ">\n-        <script type="text/javascript"\n-            tal:attributes="src string:${context/portal_url}/++plone++plone.app.discussion.javascripts/moderation.js">\n-        </script>\n         <style>\n             #review-comments th label {\n                 margin-right: 1em;\n@@ -36,194 +34,232 @@\n         <h1 i18n:translate="heading_moderate_comments">\n             Moderate comments\n         </h1>\n-\n-        <p class="lead" i18n:translate="message_moderation_disabled">\n-            Moderation workflow is disabled. You have to\n+        <div class="alert alert-info"\n+          role="status"\n+          tal:condition="python: not moderation_enabled">\n+          <strong>Info</strong>\n+          <div i18n:translate="message_moderation_disabled">Moderation workflow is disabled. You have to\n             <a i18n:name="enable_comment_workflow"\n-                i18n:translate="message_enable_comment_workflow" href=""\n-                tal:attributes="href string:${context/portal_url}/@@content-controlpanel?type_id=Discussion Item">\n+              i18n:translate="message_enable_comment_workflow"\n+              href=""\n+              tal:attributes="href string:${context/portal_url}/@@content-controlpanel?type_id=Discussion Item">\n             enable the \'Comment Review Workflow\' for the Comment content\n-            type</a> before you can moderate comments here.\n-        </p>\n+            type</a> before you can moderate comments here.</div>\n+        </div>\n \n-      <form class="mb-3"\n-            method="post"\n-            action="#"\n-            tal:condition="moderation_enabled"\n-            tal:attributes="action string:${context/absolute_url}/@@bulk-actions"\n-            tal:define="batch python:Batch(items, b_size, int(b_start), orphan=1);">\n-          <fieldset id="fieldset-moderate-comments" class="formPanel">\n+        <form class="mb-3"\n+          method="post"\n+          action="#"\n+          tal:condition="moderation_enabled"\n+          tal:attributes="action string:${context/absolute_url}/@@bulk-actions"\n+          tal:define="batch python:Batch(items, b_size, int(b_start), orphan=1);">\n+          <fieldset id="fieldset-moderate-comments"\n+            class="formPanel">\n \n-              <div metal:use-macro="here/batch_macros/macros/navigation" />\n-              <div id="review-comments">\n+            <div metal:use-macro="here/batch_macros/macros/navigation" />\n+            <div id="review-comments">\n \n-                <div  class="row row-cols-lg-auto g-3 align-items-center mb-2 mt-2" id="bulkactions">\n-                  <tal:bulk condition="items">\n-                    <div class="col-auto">\n-                      <select class="form-select" name="form.select.BulkAction">\n-                        <option selected="selected" value="-1" i18n:translate="title_bulkactions">Bulk Actions</option>\n-                        <tal:comment tal:replace="nothing"></tal:comment>\n-                        <option value="publish"\n-                                i18n:translate="bulkactions_publish"\n-                                tal:condition="python: filter != \'published\'">Approve</option>\n-                        <option value="mark_as_spam"\n-                                i18n:translate="bulkactions_spam"\n-                                tal:condition="python: filter != \'spam\'">Spam</option>\n-                        <option value="delete" i18n:translate="bulkactions_delete">Delete</option>\n-                      </select>\n-                    </div>\n-                    <div class="col-auto">\n-                      <input type="hidden" name="filter" tal:attributes="value filter" />\n-                      <button class="standalone allowMultiSubmit btn btn-primary"\n-                              id="dobulkaction"\n-                              type="submit"\n-                              value="Apply"\n-                              name="form.button.BulkAction"\n-                              i18n:attributes="value label_apply;"\n-                              i18n:translate="label_apply">Apply</button>\n-                    </div>\n-                  </tal:bulk>\n+              <div class="row row-cols-lg-auto g-3 align-items-center mb-2 mt-2"\n+                id="bulkactions">\n+                <tal:bulk condition="items">\n+                  <div class="col-auto">\n+                    <select class="form-select"\n+                      name="form.select.BulkAction">\n+                      <option selected="selected"\n+                        value="-1"\n+                        i18n:translate="title_bulkactions">Bulk Actions</option>\n+                      <tal:comment tal:replace="nothing"></tal:comment>\n+                      <option value="publish"\n+                        i18n:translate="bulkactions_publish"\n+                        tal:condition="python: filter != \'published\'">Approve</option>\n+                      <option value="mark_as_spam"\n+                        i18n:translate="bulkactions_spam"\n+                        tal:condition="python: filter != \'spam\'">Spam</option>\n+                      <option value="delete"\n+                        i18n:translate="bulkactions_delete">Delete</option>\n+                    </select>\n+                  </div>\n+                  <div class="col-auto">\n+                    <input type="hidden"\n+                      name="filter"\n+                      tal:attributes="value filter" />\n+                    <button class="standalone allowMultiSubmit btn btn-primary"\n+                      id="dobulkaction"\n+                      type="submit"\n+                      value="Apply"\n+                      name="form.button.BulkAction"\n+                      i18n:attributes="value label_apply;"\n+                      i18n:translate="label_apply">Apply</button>\n+                  </div>\n+                </tal:bulk>\n \n-                  <div class="flex-grow-1">\n-                    <div class="row row-cols-lg-auto g-3 align-items-center justify-content-end" tal:condition="view/moderation_multiple_state_enabled">\n-                      <label i18n:translate="filter_by_state">Filter by state:</label>\n+                <div class="flex-grow-1">\n+                  <div class="row row-cols-lg-auto g-3 align-items-center justify-content-end"\n+                    tal:condition="view/moderation_multiple_state_enabled">\n+                    <label i18n:translate="filter_by_state">Filter by state:</label>\n+                    <div>\n+                      <input class="form-check-input"\n+                        type="radio"\n+                        id="all"\n+                        name="review_state"\n+                        value="all"\n+                        tal:attributes="checked python:request.review_state==\'all\'" />\n+                      <label class="form-check-label"\n+                        for="all"\n+                        i18n:translate="">all</label>\n+                    </div>\n+                    <tal:states tal:repeat="review_state python:[\'pending\', \'published\', \'rejected\', \'spam\']">\n                       <div>\n-                        <input class="form-check-input" type="radio" id="all" name="review_state" value="all"\n-                            tal:attributes="checked python:request.review_state==\'all\'" />\n-                        <label class="form-check-label" for="all" i18n:translate="">all</label>\n-                      </div>\n-                      <tal:states tal:repeat="review_state python:[\'pending\', \'published\', \'rejected\', \'spam\']">\n-                        <div>\n-                          <input class="form-check-input" type="radio" name="review_state"\n-                            tal:attributes="\n+                        <input class="form-check-input"\n+                          type="radio"\n+                          name="review_state"\n+                          tal:attributes="\n                                 value review_state;\n                                 id review_state;\n                                 checked python:request.review_state==review_state" />\n-                          <label class="form-check-label"\n-                            tal:attributes="for review_state"><span tal:content="python:translationhelper.translate_comment_review_state(review_state)">review_state</span></label>\n-                        </div>\n-                      </tal:states>\n-                    </div>\n+                        <label class="form-check-label"\n+                          tal:attributes="for review_state">\n+                          <span tal:content="python:translationhelper.translate_comment_review_state(review_state)">review_state</span>\n+                        </label>\n+                      </div>\n+                    </tal:states>\n                   </div>\n+                </div>\n \n \n-                </div>\n-                <table class="table table-bordered table-striped">\n-                  <thead>\n-                    <tr tal:condition="items">\n-                        <th scope="col" class="nosort"><input name="check_all" type="checkbox" value="0" /></th>\n-                        <th scope="col" class="nosort" i18n:translate="heading_commenter">Commenter</th>\n-                        <th scope="col" class="nosort" i18n:translate="heading_date">Date</th>\n-                        <th scope="col" class="nosort" i18n:translate="heading_in_reponse_to">In Response To</th>\n-                        <th scope="col" class="nosort" i18n:translate="heading_comment">Comment</th>\n-                        <th scope="col" class="nosort" i18n:translate="heading_changedby">Last Action</th>\n-                    </tr>\n-                  </thead>\n-                  <tbody>\n-                      <tal:block repeat="item batch"\n-                          tal:condition="items">\n-                          <tr class="commentrow"\n-                              tal:define="even repeat/item/even;\n+              </div>\n+              <table class="table table-bordered table-striped">\n+                <thead>\n+                  <tr tal:condition="items">\n+                    <th scope="col"\n+                      class="nosort">\n+                      <input name="check_all"\n+                        type="checkbox"\n+                        value="0" />\n+                    </th>\n+                    <th scope="col"\n+                      class="nosort"\n+                      i18n:translate="heading_commenter">Commenter</th>\n+                    <th scope="col"\n+                      class="nosort"\n+                      i18n:translate="heading_date">Date</th>\n+                    <th scope="col"\n+                      class="nosort"\n+                      i18n:translate="heading_in_reponse_to">In Response To</th>\n+                    <th scope="col"\n+                      class="nosort"\n+                      i18n:translate="heading_comment">Comment</th>\n+                    <th scope="col"\n+                      class="nosort"\n+                      i18n:translate="heading_changedby">Last Action</th>\n+                  </tr>\n+                </thead>\n+                <tbody>\n+                  <tal:block repeat="item batch"\n+                    tal:condition="items">\n+                    <tr class="commentrow"\n+                      tal:define="even repeat/item/even;\n                                           item_obj item/getObject;\n                                           email item_obj/author_email;\n                                           item_url item/getURL;"\n-                              tal:attributes="class python: even and \'odd\' or \'even\'">\n-                              <td class="notDraggable">\n-                                  <input type="checkbox"\n-                                         class="noborder"\n-                                         name="paths:list" id="#"\n-                                         value="#"\n-                                         tal:attributes="value   item/getPath;\n+                      tal:attributes="class python: even and \'odd\' or \'even\'">\n+                      <td class="notDraggable">\n+                        <input type="checkbox"\n+                          class="noborder"\n+                          name="paths:list"\n+                          id="#"\n+                          value="#"\n+                          tal:attributes="value   item/getPath;\n                                                          id      string:cb_${item/id};\n                                                          checked item/checked|nothing;\n                                                          alt     string:Select ${item/Title};\n                                                          title   string:Select ${item/Title}" />\n-                                  <input type="hidden" name="selected_obj_paths:list" value="#"\n-                                         tal:attributes="value item/getURL" />\n-                              </td>\n-                              <td>\n-                                  <span tal:content="python:item.author_name or item.Creator">Name</span>\n-                                  <tal:email tal:condition="email">\n-                                      <br/>\n-                                      <a tal:attributes="href string:mailto:$email;"\n-                                         tal:content="email">Email\n-                                      </a>\n-                                  </tal:email>\n-                              </td>\n-                              <td style="white-space: nowrap;" tal:content="python:toLocalizedTime(item.created, long_format=1)"/>\n-                              <td>\n-                                  <a tal:attributes="href item_url" target="_blank"\n-                                     tal:content="item/in_response_to" />\n-                              </td>\n-                              <td tal:attributes="class  python:colorclass(item.review_state)">\n-                                  <div class="mb-2">\n-                                      <span tal:replace="item/Description"/>\n-                                      <a href=""\n-                                         tal:attributes="href string:$item_url/getText"\n-                                         tal:condition="python:item.Description.endswith(\'[...]\')"\n-                                         i18n:translate="label_show_full_comment_text"\n-                                         class="show-full-comment-text">show full comment text</a>\n-                                  </div>\n-                                  <div class="actions input-group-addon">\n-                                      <input\n-                                          type="hidden"\n-                                          name="selected_obj_paths:list"\n-                                          value="#"\n-                                          tal:attributes="value item/getURL"\n-                                          />\n-                                      <!-- delete -->\n-                                      <button id=""\n-                                          class="destructive comment-delete-button btn btn-sm btn-danger"\n-                                          type="submit"\n-                                          value="Delete"\n-                                          name="form.button.moderation.DeleteComment"\n-                                          i18n:attributes="value label_delete;"\n-                                          tal:attributes="id item/id"\n-                                          i18n:translate="label_delete"\n-                                          >Delete</button>\n-                                      <!-- edit -->\n-                                      <a class="pat-plone-modal context btn btn-sm btn-primary" href="#"\n-                                          i18n:translate="label_edit"\n-                                          tal:attributes="href python:item_url+\'/@@edit-comment?review_state=\' + item.review_state">Edit</a>\n+                        <input type="hidden"\n+                          name="selected_obj_paths:list"\n+                          value="#"\n+                          tal:attributes="value item/getURL" />\n+                      </td>\n+                      <td>\n+                        <span tal:content="python:item.author_name or item.Creator">Name</span>\n+                        <tal:email tal:condition="email">\n+                          <br />\n+                          <a tal:attributes="href string:mailto:$email;"\n+                            tal:content="email">Email\n+                          </a>\n+                        </tal:email>\n+                      </td>\n+                      <td style="white-space: nowrap;"\n+                        tal:content="python:toLocalizedTime(item.created, long_format=1)" />\n+                      <td>\n+                        <a tal:attributes="href item_url"\n+                          target="_blank"\n+                          tal:content="item/in_response_to" />\n+                      </td>\n+                      <td tal:attributes="class  python:colorclass(item.review_state)">\n+                        <div class="mb-2">\n+                          <span tal:replace="item/Description" />\n+                          <a href=""\n+                            tal:attributes="href string:$item_url/getText"\n+                            tal:condition="python:item.Description.endswith(\'[...]\')"\n+                            i18n:translate="label_show_full_comment_text"\n+                            class="show-full-comment-text">show full comment text</a>\n+                        </div>\n+                        <div class="actions input-group-addon">\n+                          <input type="hidden"\n+                            name="selected_obj_paths:list"\n+                            value="#"\n+                            tal:attributes="value item/getURL" />\n+                          <!-- delete -->\n+                          <button id=""\n+                            class="destructive comment-delete-button btn btn-sm btn-danger"\n+                            type="submit"\n+                            value="Delete"\n+                            name="form.button.moderation.DeleteComment"\n+                            i18n:attributes="value label_delete;"\n+                            tal:attributes="id item/id"\n+                            i18n:translate="label_delete">Delete</button>\n+                          <!-- edit -->\n+                          <a class="pat-plone-modal context btn btn-sm btn-primary"\n+                            href="#"\n+                            i18n:translate="label_edit"\n+                            tal:attributes="href python:item_url+\'/@@edit-comment?review_state=\' + item.review_state">Edit</a>\n \n-                                      <!-- workflow actions -->\n-                                      <tal:transitions\n-                                          tal:define="\n+                          <!-- workflow actions -->\n+                          <tal:transitions tal:define="\n                                             transitions python:view.allowed_transitions(item_obj)">\n-                                          <button name="form.button.moderation.TransmitComment"\n-                                              tal:repeat="transition transitions"\n-                                              class="context btn btn-sm btn-primary"\n-                                              type="submit"\n-                                              value="Label"\n-                                              tal:content="python:translationhelper.translate(transition[\'title\'])"\n-                                              tal:attributes="id string:${item/id}_${transition/id};\n+                            <button name="form.button.moderation.TransmitComment"\n+                              tal:repeat="transition transitions"\n+                              class="context btn btn-sm btn-primary"\n+                              type="submit"\n+                              value="Label"\n+                              tal:content="python:translationhelper.translate(transition[\'title\'])"\n+                              tal:attributes="id string:${item/id}_${transition/id};\n                                                     data-transition transition/id;\n                                                     value python:translationhelper.translate(transition[\'title\']);\n                                                     style python:transition[\'id\']==\'publish\' and \'background-color: #5cb85c;; border-color: #4cae4c;;\' or \'\';\n-                                                    "\n-                                                 >Label</button>\n-                                      </tal:transitions>\n-                                  </div>\n-                              </td>\n-                              <td>\n-                                  <span class="last-history-entry"\n-                                      tal:attributes="data-href string:$item_url/@@contenthistorypopup"\n-                                      i18n:translate="">\n+                                                    ">Label</button>\n+                          </tal:transitions>\n+                        </div>\n+                      </td>\n+                      <td>\n+                        <span class="last-history-entry"\n+                          tal:attributes="data-href string:$item_url/@@contenthistorypopup"\n+                          i18n:translate="">\n                                       last history entry\n-                                  </span>\n-                              </td>\n-                          </tr>\n-                      </tal:block>\n-                  </tbody>\n+                        </span>\n+                      </td>\n+                    </tr>\n+                  </tal:block>\n+                </tbody>\n               </table>\n-              </div>\n-              <div metal:use-macro="here/batch_macros/macros/navigation" />\n+            </div>\n+            <div metal:use-macro="here/batch_macros/macros/navigation" />\n           </fieldset>\n-      </form>\n+        </form>\n \n \n-    </tal:main-macro>\n-</metal:main>\n+      </tal:main-macro>\n+    </metal:main>\n \n-</body>\n+  </body>\n </html>\ndiff --git a/plone/app/discussion/profiles/default/registry.xml b/plone/app/discussion/profiles/default/registry.xml\nindex ba7fe987..1e0d5355 100644\n--- a/plone/app/discussion/profiles/default/registry.xml\n+++ b/plone/app/discussion/profiles/default/registry.xml\n@@ -4,17 +4,4 @@\n     <value key="edit_comment_enabled">False</value>\n     <value key="delete_own_comment_enabled">False</value>\n   </records>\n-\n-  <records prefix="plone.resources/plone-app-discussion"\n-            interface=\'Products.CMFPlone.interfaces.IResourceRegistry\'>\n-      <value key="js">++plone++plone.app.discussion.javascripts/comments.js</value>\n-  </records>\n-  <records prefix="plone.bundles/plone-legacy"\n-            interface=\'Products.CMFPlone.interfaces.IBundleRegistry\'>\n-    <value key="resources" purge="false">\n-      <element>plone-app-discussion</element>\n-    </value>\n-    <value key="last_compilation"></value>\n-  </records>\n-\n </registry>\n'

