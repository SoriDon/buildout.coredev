Repository: plone.restapi


Branch: refs/heads/master
Date: 2023-03-06T10:08:10+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.restapi/commit/31a18e12f00a3c41ad70247bab824df10a202da9

Support Decimal fields while deserializing. (#903)

Support Decimal fields while de-serializing and add section to docs.

Co-authored-by: David Glick &lt;david@glicksoftware.com&gt;

Files changed:
A news/903.bugfix
M docs/source/usage/serialization.md
M src/plone/restapi/deserializer/configure.zcml
M src/plone/restapi/deserializer/dxfields.py
M src/plone/restapi/tests/dxtypes.py
M src/plone/restapi/tests/test_dxfield_deserializer.py
M src/plone/restapi/tests/test_dxfield_serializer.py

b'diff --git a/docs/source/usage/serialization.md b/docs/source/usage/serialization.md\nindex aebe2b0a3..e77b7a5a0 100644\n--- a/docs/source/usage/serialization.md\n+++ b/docs/source/usage/serialization.md\n@@ -31,6 +31,16 @@ Since JSON does not have native support for dates and times, the Python and Zope\n | `DateTime("2015/11/23 19:45:55")`    | `"2015-11-23T19:45:55"` |\n \n \n+## Decimal Type\n+\n+The [Python Decimal type](https://docs.python.org/3/library/decimal.html) supports correctly rounded decimal floating point arithmetic.\n+To keep the precision, serializing the value to JSON results in a string.\n+\n+| Python                               | JSON                    |\n+| ------------------------------------ | ----------------------- |\n+| `Decimal("3.14159265359")`           | `"3.14159265359"`       |\n+\n+\n ## RichText fields\n \n RichText fields will be serialized as follows:\n@@ -38,9 +48,11 @@ RichText fields will be serialized as follows:\n A `RichTextValue` such as the following:\n \n ```python\n-RichTextValue(u\'<p>Hall\xc3\xb6chen</p>\',\n-              mimeType=\'text/html\',\n-              outputMimeType=\'text/html\')\n+RichTextValue(\n+    "<p>Hall\xc3\xb6chen</p>",\n+    mimeType="text/html",\n+    outputMimeType="text/html",\n+)\n ```\n \n \xe2\x80\xa6will be serialized to:\ndiff --git a/news/903.bugfix b/news/903.bugfix\nnew file mode 100644\nindex 000000000..3a0b13b66\n--- /dev/null\n+++ b/news/903.bugfix\n@@ -0,0 +1,2 @@\n+Fix missing `Decimal` field deserializer.\n+[jensens]\ndiff --git a/src/plone/restapi/deserializer/configure.zcml b/src/plone/restapi/deserializer/configure.zcml\nindex e6a8bea9a..f7b4d5c5a 100644\n--- a/src/plone/restapi/deserializer/configure.zcml\n+++ b/src/plone/restapi/deserializer/configure.zcml\n@@ -18,6 +18,7 @@\n   <adapter factory=".dxfields.TimedeltaFieldDeserializer" />\n   <adapter factory=".dxfields.NamedFieldDeserializer" />\n   <adapter factory=".dxfields.RichTextFieldDeserializer" />\n+  <adapter factory=".dxfields.DecimalFieldDeserializer" />\n   <adapter factory=".blocks.BlocksJSONFieldDeserializer" />\n \n   <subscriber\ndiff --git a/src/plone/restapi/deserializer/dxfields.py b/src/plone/restapi/deserializer/dxfields.py\nindex 8f75b3f20..534291b87 100644\n--- a/src/plone/restapi/deserializer/dxfields.py\n+++ b/src/plone/restapi/deserializer/dxfields.py\n@@ -1,4 +1,5 @@\n from datetime import timedelta\n+from decimal import Decimal\n from plone.app.contenttypes.interfaces import ILink\n from plone.app.textfield.interfaces import IRichText\n from plone.app.textfield.value import RichTextValue\n@@ -18,6 +19,7 @@\n from zope.schema.interfaces import IChoice\n from zope.schema.interfaces import ICollection\n from zope.schema.interfaces import IDatetime\n+from zope.schema.interfaces import IDecimal\n from zope.schema.interfaces import IDict\n from zope.schema.interfaces import IField\n from zope.schema.interfaces import IFromUnicode\n@@ -296,3 +298,13 @@ def __call__(self, value):\n         )\n         self.field.validate(value)\n         return value\n+\n+\n+@implementer(IFieldDeserializer)\n+@adapter(IDecimal, IDexterityContent, IBrowserRequest)\n+class DecimalFieldDeserializer(DefaultFieldDeserializer):\n+    def __call__(self, value):\n+        if not isinstance(value, Decimal):\n+            value = Decimal(value)\n+        self.field.validate(value)\n+        return value\ndiff --git a/src/plone/restapi/tests/dxtypes.py b/src/plone/restapi/tests/dxtypes.py\nindex 493801524..b3632d41d 100644\n--- a/src/plone/restapi/tests/dxtypes.py\n+++ b/src/plone/restapi/tests/dxtypes.py\n@@ -144,7 +144,6 @@ def vocabularyRequireingContextFactory(context):\n \n \n class IDXTestDocumentSchema(model.Schema):\n-\n     # zope.schema fields\n     test_ascii_field = schema.ASCII(required=False)\n     test_asciiline_field = schema.ASCIILine(required=False)\n@@ -310,7 +309,6 @@ class DXTestDocument(Item):\n \n @provider(IFormFieldProvider)\n class ITestBehavior(model.Schema):\n-\n     test_behavior_field = schema.TextLine(required=False)\n     # Add nav_title to test if it gets substituted in Navigation service\n     nav_title = schema.TextLine(required=False)\n@@ -318,5 +316,4 @@ class ITestBehavior(model.Schema):\n \n @provider(IFormFieldProvider)\n class ITestAnnotationsBehavior(model.Schema):\n-\n     test_annotations_behavior_field = schema.TextLine(required=False)\ndiff --git a/src/plone/restapi/tests/test_dxfield_deserializer.py b/src/plone/restapi/tests/test_dxfield_deserializer.py\nindex d40f88c00..0410a1e04 100644\n--- a/src/plone/restapi/tests/test_dxfield_deserializer.py\n+++ b/src/plone/restapi/tests/test_dxfield_deserializer.py\n@@ -184,6 +184,16 @@ def test_float_deserialization_returns_float(self):\n         self.assertTrue(isinstance(value, float), "Not a <float>")\n         self.assertEqual(1.0, value)\n \n+    def test_float_deserialization_returns_decimal(self):\n+        value = self.deserialize("test_decimal_field", 1.111)\n+        self.assertTrue(isinstance(value, Decimal), "Not a <Decimal>")\n+        # a float from JSON to decimal can not work properly, so you would get\n+        # real floating point precision only\n+        self.assertEqual(\n+            Decimal("1.1109999999999999875655021241982467472553253173828125"),\n+            value,\n+        )\n+\n     def test_frozenset_deserialization_returns_frozenset(self):\n         value = self.deserialize("test_frozenset_field", ["foo", "bar"])\n         self.assertTrue(isinstance(value, frozenset), "Not a <frozenset>")\ndiff --git a/src/plone/restapi/tests/test_dxfield_serializer.py b/src/plone/restapi/tests/test_dxfield_serializer.py\nindex eb1e83c15..6c386ece6 100644\n--- a/src/plone/restapi/tests/test_dxfield_serializer.py\n+++ b/src/plone/restapi/tests/test_dxfield_serializer.py\n@@ -104,10 +104,10 @@ def test_datetime_field_serialization_returns_unicode(self):\n         self.assertTrue(isinstance(value, str), "Not an <unicode>")\n         self.assertEqual("2015-06-20T13:22:04", value)\n \n-    def test_decimal_field_serialization_returns_unicode(self):\n-        value = self.serialize("test_decimal_field", Decimal("1.1"))\n-        self.assertTrue(isinstance(value, str), "Not an <unicode>")\n-        self.assertEqual("1.1", value)\n+    def test_decimal_field_serialization_returns_str(self):\n+        value = self.serialize("test_decimal_field", Decimal("1.111"))\n+        self.assertTrue(isinstance(value, str), "Not an <str>")\n+        self.assertEqual("1.111", value)\n \n     def test_dict_field_serialization_returns_dict(self):\n         value = self.serialize(\n'

