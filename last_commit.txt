Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2016-07-25T15:23:30+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.querystring/commit/e0d3207780558afe0827268c75112a017491723b

Introduce IQueryModifier, refactor INavigationRoot stickyness.

Files changed:
A plone/app/querystring/querymodifiers.py
M CHANGES.rst
M plone/app/querystring/configure.zcml
M plone/app/querystring/interfaces.py
M plone/app/querystring/querybuilder.py
M setup.py

diff --git a/CHANGES.rst b/CHANGES.rst
index fb3545b..61bec11 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -1,8 +1,8 @@
 Changelog
 =========
 
-1.3.16 (unreleased)
--------------------
+1.4.0 (unreleased)
+------------------
 
 Breaking changes:
 
@@ -10,7 +10,11 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- Refactor addition of criteria to stick inside ``INavigationRoot`` in querybuilder.
+  Added a simple ``IQueryModifier`` interfaces expecting a query and returning a query.
+  Iterates over all sorted utilities providing such an interfaces and calls it right before the query is parsed.
+  Code to add the ``INavigationRoot`` stickyness was moved to such a query modifier.
+  [jensens]
 
 Bug fixes:
 
diff --git a/plone/app/querystring/configure.zcml b/plone/app/querystring/configure.zcml
index c3b56e3..c9b8f79 100644
--- a/plone/app/querystring/configure.zcml
+++ b/plone/app/querystring/configure.zcml
@@ -59,5 +59,8 @@
     permission="zope2.View"
     for="*"
     />
-
+  <utility
+    component=".querymodifiers.modify_query_to_enforce_navigation_root"
+    name="1000"
+    />
 </configure>
diff --git a/plone/app/querystring/interfaces.py b/plone/app/querystring/interfaces.py
index aacf056..0fba61a 100644
--- a/plone/app/querystring/interfaces.py
+++ b/plone/app/querystring/interfaces.py
@@ -43,3 +43,13 @@ def __call__(value):
         if the index name returned is different from the native one, caller
         must replace treated index with the new ones.
         """
+
+
+class IQueryModifier(Interface):
+    """Modifies a query in order to inject specific or change given criteria.
+    """
+
+    def __call__(query):
+        """
+        modify the query and return an new one.
+        """
diff --git a/plone/app/querystring/querybuilder.py b/plone/app/querystring/querybuilder.py
index dd6522d..2e6cebd 100644
--- a/plone/app/querystring/querybuilder.py
+++ b/plone/app/querystring/querybuilder.py
@@ -1,21 +1,21 @@
-import json
-import logging
-
+# -*- coding: utf-8 -*-
+from operator import itemgetter
+from plone.app.contentlisting.interfaces import IContentListing
+from plone.app.querystring import queryparser
+from plone.app.querystring.interfaces import IParsedQueryIndexModifier
+from plone.app.querystring.interfaces import IQueryModifier
+from plone.app.querystring.interfaces import IQuerystringRegistryReader
+from plone.batching import Batch
+from plone.registry.interfaces import IRegistry
+from Products.CMFCore.utils import getToolByName
 from zope.component import getMultiAdapter, getUtility, getUtilitiesFor
 from zope.i18n import translate
-
 from zope.i18nmessageid import MessageFactory
 from zope.publisher.browser import BrowserView
 
-from plone.app.contentlisting.interfaces import IContentListing
-from plone.registry.interfaces import IRegistry
-from plone.app.querystring import queryparser
-from plone.app.querystring.interfaces import IParsedQueryIndexModifier
-
-from Products.CMFCore.utils import getToolByName
-from plone.batching import Batch
+import json
+import logging
 
-from .interfaces import IQuerystringRegistryReader
 
 logger = logging.getLogger('plone.app.querystring')
 _ = MessageFactory('plone')
@@ -105,19 +105,9 @@ def _makequery(self, query=None, batch=False, b_start=0, b_size=30,
                    sort_on=None, sort_order=None, limit=0, brains=False,
                    custom_query=None):
         """Parse the (form)query and return using multi-adapter"""
-        # Reproduce path behaviours of Collection
-        # See p.a.contenttypes.behaviours.collection.Collection
-        if query:
-            has_path_criteria = any(
-                (criteria['i'] == 'path')
-                for criteria in query
-            )
-            if not has_path_criteria:
-                query.append({
-                    'i': 'path',
-                    'o': 'plone.app.querystring.operation.string.path',
-                    'v': '/',
-                })
+        query_modifiers = getUtilitiesFor(IQueryModifier)
+        for name, modifier in sorted(query_modifiers, key=itemgetter(0)):
+            query = modifier(query)
 
         parsedquery = queryparser.parseFormquery(
             self.context, query, sort_on, sort_order)
diff --git a/plone/app/querystring/querymodifiers.py b/plone/app/querystring/querymodifiers.py
new file mode 100644
index 0000000..f8adbc4
--- /dev/null
+++ b/plone/app/querystring/querymodifiers.py
@@ -0,0 +1,27 @@
+# -*- coding: utf-8 -*-
+from plone.app.querystring.interfaces import IQueryModifier
+from zope.interface import provider
+
+
+@provider(IQueryModifier)
+def modify_query_to_enforce_navigation_root(query):
+    """enforce a search in the current navigation root
+
+    if not already a path was given we search only for contents in the current
+    IVavigationRoot.
+    """
+    if not query:
+        return query
+
+    has_path_criteria = any(
+        (criteria['i'] == 'path')
+        for criteria in query
+    )
+    if not has_path_criteria:
+        query = list(query)
+        query.append({
+            'i': 'path',
+            'o': 'plone.app.querystring.operation.string.path',
+            'v': '/',
+        })
+    return query
diff --git a/setup.py b/setup.py
index 7eba75b..163f3f8 100644
--- a/setup.py
+++ b/setup.py
@@ -1,6 +1,6 @@
 from setuptools import setup, find_packages
 
-version = '1.3.16.dev0'
+version = '1.4.0.dev0'
 
 long_description = open("README.rst").read() + "\n"
 long_description += open("CHANGES.rst").read()


Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2016-07-25T18:25:55+02:00
Author: agitator (agitator) <hpeter@agitator.com>
Commit: https://github.com/plone/plone.app.querystring/commit/fe08bcea9b0b0476e31f35a8384a197a9046178b

Merge pull request #65 from plone/feature-querymodifier

Introduce IQueryModifier, refactor INavigationRoot stickyness.

Files changed:
A plone/app/querystring/querymodifiers.py
M CHANGES.rst
M plone/app/querystring/configure.zcml
M plone/app/querystring/interfaces.py
M plone/app/querystring/querybuilder.py
M setup.py

diff --git a/CHANGES.rst b/CHANGES.rst
index fb3545b..61bec11 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -1,8 +1,8 @@
 Changelog
 =========
 
-1.3.16 (unreleased)
--------------------
+1.4.0 (unreleased)
+------------------
 
 Breaking changes:
 
@@ -10,7 +10,11 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- Refactor addition of criteria to stick inside ``INavigationRoot`` in querybuilder.
+  Added a simple ``IQueryModifier`` interfaces expecting a query and returning a query.
+  Iterates over all sorted utilities providing such an interfaces and calls it right before the query is parsed.
+  Code to add the ``INavigationRoot`` stickyness was moved to such a query modifier.
+  [jensens]
 
 Bug fixes:
 
diff --git a/plone/app/querystring/configure.zcml b/plone/app/querystring/configure.zcml
index c3b56e3..c9b8f79 100644
--- a/plone/app/querystring/configure.zcml
+++ b/plone/app/querystring/configure.zcml
@@ -59,5 +59,8 @@
     permission="zope2.View"
     for="*"
     />
-
+  <utility
+    component=".querymodifiers.modify_query_to_enforce_navigation_root"
+    name="1000"
+    />
 </configure>
diff --git a/plone/app/querystring/interfaces.py b/plone/app/querystring/interfaces.py
index aacf056..0fba61a 100644
--- a/plone/app/querystring/interfaces.py
+++ b/plone/app/querystring/interfaces.py
@@ -43,3 +43,13 @@ def __call__(value):
         if the index name returned is different from the native one, caller
         must replace treated index with the new ones.
         """
+
+
+class IQueryModifier(Interface):
+    """Modifies a query in order to inject specific or change given criteria.
+    """
+
+    def __call__(query):
+        """
+        modify the query and return an new one.
+        """
diff --git a/plone/app/querystring/querybuilder.py b/plone/app/querystring/querybuilder.py
index dd6522d..2e6cebd 100644
--- a/plone/app/querystring/querybuilder.py
+++ b/plone/app/querystring/querybuilder.py
@@ -1,21 +1,21 @@
-import json
-import logging
-
+# -*- coding: utf-8 -*-
+from operator import itemgetter
+from plone.app.contentlisting.interfaces import IContentListing
+from plone.app.querystring import queryparser
+from plone.app.querystring.interfaces import IParsedQueryIndexModifier
+from plone.app.querystring.interfaces import IQueryModifier
+from plone.app.querystring.interfaces import IQuerystringRegistryReader
+from plone.batching import Batch
+from plone.registry.interfaces import IRegistry
+from Products.CMFCore.utils import getToolByName
 from zope.component import getMultiAdapter, getUtility, getUtilitiesFor
 from zope.i18n import translate
-
 from zope.i18nmessageid import MessageFactory
 from zope.publisher.browser import BrowserView
 
-from plone.app.contentlisting.interfaces import IContentListing
-from plone.registry.interfaces import IRegistry
-from plone.app.querystring import queryparser
-from plone.app.querystring.interfaces import IParsedQueryIndexModifier
-
-from Products.CMFCore.utils import getToolByName
-from plone.batching import Batch
+import json
+import logging
 
-from .interfaces import IQuerystringRegistryReader
 
 logger = logging.getLogger('plone.app.querystring')
 _ = MessageFactory('plone')
@@ -105,19 +105,9 @@ def _makequery(self, query=None, batch=False, b_start=0, b_size=30,
                    sort_on=None, sort_order=None, limit=0, brains=False,
                    custom_query=None):
         """Parse the (form)query and return using multi-adapter"""
-        # Reproduce path behaviours of Collection
-        # See p.a.contenttypes.behaviours.collection.Collection
-        if query:
-            has_path_criteria = any(
-                (criteria['i'] == 'path')
-                for criteria in query
-            )
-            if not has_path_criteria:
-                query.append({
-                    'i': 'path',
-                    'o': 'plone.app.querystring.operation.string.path',
-                    'v': '/',
-                })
+        query_modifiers = getUtilitiesFor(IQueryModifier)
+        for name, modifier in sorted(query_modifiers, key=itemgetter(0)):
+            query = modifier(query)
 
         parsedquery = queryparser.parseFormquery(
             self.context, query, sort_on, sort_order)
diff --git a/plone/app/querystring/querymodifiers.py b/plone/app/querystring/querymodifiers.py
new file mode 100644
index 0000000..f8adbc4
--- /dev/null
+++ b/plone/app/querystring/querymodifiers.py
@@ -0,0 +1,27 @@
+# -*- coding: utf-8 -*-
+from plone.app.querystring.interfaces import IQueryModifier
+from zope.interface import provider
+
+
+@provider(IQueryModifier)
+def modify_query_to_enforce_navigation_root(query):
+    """enforce a search in the current navigation root
+
+    if not already a path was given we search only for contents in the current
+    IVavigationRoot.
+    """
+    if not query:
+        return query
+
+    has_path_criteria = any(
+        (criteria['i'] == 'path')
+        for criteria in query
+    )
+    if not has_path_criteria:
+        query = list(query)
+        query.append({
+            'i': 'path',
+            'o': 'plone.app.querystring.operation.string.path',
+            'v': '/',
+        })
+    return query
diff --git a/setup.py b/setup.py
index 7eba75b..163f3f8 100644
--- a/setup.py
+++ b/setup.py
@@ -1,6 +1,6 @@
 from setuptools import setup, find_packages
 
-version = '1.3.16.dev0'
+version = '1.4.0.dev0'
 
 long_description = open("README.rst").read() + "\n"
 long_description += open("CHANGES.rst").read()


