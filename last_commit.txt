Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2017-02-07T17:40:08+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/a94c9d4ecaa8d830e260a8304edda73b2f8e73a4

Fixed SafeFormatter import in mixins.py.

Clarified safe_format, which is renamed to _safe_format to discourage importing it outside CMFPlone.

Files changed:
M Products/CMFPlone/__init__.py
M Products/CMFPlone/resources/browser/mixins.py
M Products/CMFPlone/utils.py

diff --git a/Products/CMFPlone/__init__.py b/Products/CMFPlone/__init__.py
index 535f979..e359a79 100644
--- a/Products/CMFPlone/__init__.py
+++ b/Products/CMFPlone/__init__.py
@@ -118,14 +118,14 @@ def initialize(context):
 
     # We want to allow all methods on string type except 'format'.
     # That one needs special handling to avoid access to attributes.
-    from Products.CMFPlone.utils import safe_format
+    from Products.CMFPlone.utils import _safe_format
     rules = dict([(m, True) for m in dir(str) if not m.startswith('_')])
-    rules['format'] = safe_format
+    rules['format'] = _safe_format
     allow_type(str, rules)
 
     # Same for unicode instead of str.
     rules = dict([(m, True) for m in dir(unicode) if not m.startswith('_')])
-    rules['format'] = safe_format
+    rules['format'] = _safe_format
     allow_type(unicode, rules)
 
     # Apply monkey patches
diff --git a/Products/CMFPlone/resources/browser/mixins.py b/Products/CMFPlone/resources/browser/mixins.py
index 5fcc671..5cfe2e5 100644
--- a/Products/CMFPlone/resources/browser/mixins.py
+++ b/Products/CMFPlone/resources/browser/mixins.py
@@ -1,7 +1,6 @@
 # -*- coding: utf-8 -*-
 from plone.registry.interfaces import IRegistry
 from Products.CMFPlone.interfaces import IResourceRegistry
-from Products.CMFPlone.utils import safe_format
 from Products.CMFPlone.utils import SafeFormatter
 from Products.Five.browser import BrowserView
 from urlparse import urlparse
diff --git a/Products/CMFPlone/utils.py b/Products/CMFPlone/utils.py
index e64046e..c7e9d33 100644
--- a/Products/CMFPlone/utils.py
+++ b/Products/CMFPlone/utils.py
@@ -847,8 +847,10 @@ def safe_format(self, *args, **kwargs):
         return self.vformat(self.value, args, kwargs)
 
 
-def safe_format(inst, method):
-    """
-    Use our SafeFormatter that uses guarded_getattr for attribute access
+def _safe_format(inst, method):
+    """Use our SafeFormatter that uses guarded_getattr for attribute access.
+
+    This is for use with AccessControl.allow_type,
+    as we do in CMFPlone/__init__.py.
     """
     return SafeFormatter(inst).safe_format


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2017-02-07T20:42:37+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/4025b44eb9faff6a966575725548c695725a4c43

Merge pull request #1945 from plone/clarify-hotfix-formatter-51

Fixed SafeFormatter import in mixins.py. [5.1]

Files changed:
M Products/CMFPlone/__init__.py
M Products/CMFPlone/resources/browser/mixins.py
M Products/CMFPlone/utils.py

diff --git a/Products/CMFPlone/__init__.py b/Products/CMFPlone/__init__.py
index 535f979..e359a79 100644
--- a/Products/CMFPlone/__init__.py
+++ b/Products/CMFPlone/__init__.py
@@ -118,14 +118,14 @@ def initialize(context):
 
     # We want to allow all methods on string type except 'format'.
     # That one needs special handling to avoid access to attributes.
-    from Products.CMFPlone.utils import safe_format
+    from Products.CMFPlone.utils import _safe_format
     rules = dict([(m, True) for m in dir(str) if not m.startswith('_')])
-    rules['format'] = safe_format
+    rules['format'] = _safe_format
     allow_type(str, rules)
 
     # Same for unicode instead of str.
     rules = dict([(m, True) for m in dir(unicode) if not m.startswith('_')])
-    rules['format'] = safe_format
+    rules['format'] = _safe_format
     allow_type(unicode, rules)
 
     # Apply monkey patches
diff --git a/Products/CMFPlone/resources/browser/mixins.py b/Products/CMFPlone/resources/browser/mixins.py
index 5fcc671..5cfe2e5 100644
--- a/Products/CMFPlone/resources/browser/mixins.py
+++ b/Products/CMFPlone/resources/browser/mixins.py
@@ -1,7 +1,6 @@
 # -*- coding: utf-8 -*-
 from plone.registry.interfaces import IRegistry
 from Products.CMFPlone.interfaces import IResourceRegistry
-from Products.CMFPlone.utils import safe_format
 from Products.CMFPlone.utils import SafeFormatter
 from Products.Five.browser import BrowserView
 from urlparse import urlparse
diff --git a/Products/CMFPlone/utils.py b/Products/CMFPlone/utils.py
index e64046e..c7e9d33 100644
--- a/Products/CMFPlone/utils.py
+++ b/Products/CMFPlone/utils.py
@@ -847,8 +847,10 @@ def safe_format(self, *args, **kwargs):
         return self.vformat(self.value, args, kwargs)
 
 
-def safe_format(inst, method):
-    """
-    Use our SafeFormatter that uses guarded_getattr for attribute access
+def _safe_format(inst, method):
+    """Use our SafeFormatter that uses guarded_getattr for attribute access.
+
+    This is for use with AccessControl.allow_type,
+    as we do in CMFPlone/__init__.py.
     """
     return SafeFormatter(inst).safe_format


