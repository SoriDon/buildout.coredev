Repository: mockup


Branch: refs/heads/master
Date: 2022-07-07T23:25:16+02:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/mockup/commit/a58eeabea00c014a00fb616885b277d15d60eb18

feat: Register jQuery and bootstrap globally with the main mockup bundle.

Files changed:
M src/index.js
M src/patterns.js
M webpack.config.js

b'diff --git a/src/index.js b/src/index.js\nindex f106c13ec..b8d88ec71 100644\n--- a/src/index.js\n+++ b/src/index.js\n@@ -20,3 +20,16 @@ import "@patternslib/patternslib/webpack/module_federation";\n \n // And now load this bundle\'s actual entry point.\n import("./patterns");\n+\n+// Register Bootstrap and jQuery gloablly\n+async function register_global_libraries() {\n+    // Register Bootstrap globally\n+    const bootstrap = await import("bootstrap");\n+    window.bootstrap = bootstrap;\n+\n+    // Register jQuery globally\n+    const jquery = (await import("jquery")).default;\n+    window.jQuery = jquery;\n+    window.$ = jquery;\n+}\n+register_global_libraries();\ndiff --git a/src/patterns.js b/src/patterns.js\nindex 52a40e337..df8e8005b 100644\n--- a/src/patterns.js\n+++ b/src/patterns.js\n@@ -3,7 +3,6 @@\n  */\n \n // Core\n-import "@patternslib/patternslib/src/globals";\n import registry from "@patternslib/patternslib/src/core/registry";\n \n // Patternslib patterns\ndiff --git a/webpack.config.js b/webpack.config.js\nindex aa6813a51..5d03ecb51 100644\n--- a/webpack.config.js\n+++ b/webpack.config.js\n@@ -27,6 +27,18 @@ module.exports = (env, argv) => {\n                 ...patternslib_package_json.dependencies,\n                 ...package_json.dependencies,\n             },\n+            shared: {\n+                bootstrap: {\n+                    singleton: true,\n+                    requiredVersion: package_json.dependencies["bootstrap"],\n+                    eager: true,\n+                },\n+                jquery: {\n+                    singleton: true,\n+                    requiredVersion: package_json.dependencies["jquery"],\n+                    eager: true,\n+                },\n+            },\n         })\n     );\n     config.plugins.push(\n'

Repository: mockup


Branch: refs/heads/master
Date: 2022-07-07T23:25:16+02:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/mockup/commit/7596a14bfa1d7cbaf1ffeb37d6019f3b1ffe2cdd

breaking: Remove jquery bundle.

Files changed:
M webpack.config.js
D src/index-jquery.js

b'diff --git a/src/index-jquery.js b/src/index-jquery.js\ndeleted file mode 100644\nindex aaca0047d..000000000\n--- a/src/index-jquery.js\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-// Bundle entry for jQuery\n-import "@patternslib/patternslib/src/globals";\ndiff --git a/webpack.config.js b/webpack.config.js\nindex 5d03ecb51..91ff55577 100644\n--- a/webpack.config.js\n+++ b/webpack.config.js\n@@ -10,7 +10,6 @@ module.exports = (env, argv) => {\n         entry: {\n             "bundle.min": path.resolve(__dirname, "src/index.js"),\n             "bootstrap.min": path.resolve(__dirname, "src/index-bootstrap.js"),\n-            "jquery.min": path.resolve(__dirname, "src/index-jquery.js"),\n         },\n     };\n \n@@ -51,16 +50,6 @@ module.exports = (env, argv) => {\n             },\n         })\n     );\n-    config.plugins.push(\n-        mf_config({\n-            name: "jquery",\n-            filename: "jquery-remote.min.js",\n-            remote_entry: config.entry["jquery.min"],\n-            dependencies: {\n-                jquery: package_json.dependencies["jquery"],\n-            },\n-        })\n-    );\n \n     if (process.env.NODE_ENV === "development") {\n         // Note: ``publicPath`` is set to "auto" in Patternslib,\n'

Repository: mockup


Branch: refs/heads/master
Date: 2022-07-07T23:25:16+02:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/mockup/commit/4cd878ed86db4a11225474eb6c50813d9e08a8fe

breaking: Remove bootstrap bundle.

Files changed:
M webpack.config.js
D src/index-bootstrap.js

b'diff --git a/src/index-bootstrap.js b/src/index-bootstrap.js\ndeleted file mode 100644\nindex 0fdd085f6..000000000\n--- a/src/index-bootstrap.js\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-// Bundle entry for Bootstrap\n-import "bootstrap";\ndiff --git a/webpack.config.js b/webpack.config.js\nindex 91ff55577..c4309383d 100644\n--- a/webpack.config.js\n+++ b/webpack.config.js\n@@ -9,7 +9,6 @@ module.exports = (env, argv) => {\n     let config = {\n         entry: {\n             "bundle.min": path.resolve(__dirname, "src/index.js"),\n-            "bootstrap.min": path.resolve(__dirname, "src/index-bootstrap.js"),\n         },\n     };\n \n@@ -40,16 +39,6 @@ module.exports = (env, argv) => {\n             },\n         })\n     );\n-    config.plugins.push(\n-        mf_config({\n-            name: "bootstrap",\n-            filename: "bootstrap-remote.min.js",\n-            remote_entry: config.entry["bootstrap.min"],\n-            dependencies: {\n-                bootstrap: package_json.dependencies["bootstrap"],\n-            },\n-        })\n-    );\n \n     if (process.env.NODE_ENV === "development") {\n         // Note: ``publicPath`` is set to "auto" in Patternslib,\n'

Repository: mockup


Branch: refs/heads/master
Date: 2022-07-08T09:06:02+02:00
Author: Peter Mathis (petschki) <petschki@users.noreply.github.com>
Commit: https://github.com/plone/mockup/commit/a71d37bf1600968eff3c9471eedea903fc00ab92

Merge pull request #1185 from plone/register-globally-thet

Register jQuery and Bootstrap globally - alternative approach

Files changed:
M src/index.js
M src/patterns.js
M webpack.config.js
D src/index-bootstrap.js
D src/index-jquery.js

b'diff --git a/src/index-bootstrap.js b/src/index-bootstrap.js\ndeleted file mode 100644\nindex 0fdd085f6..000000000\n--- a/src/index-bootstrap.js\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-// Bundle entry for Bootstrap\n-import "bootstrap";\ndiff --git a/src/index-jquery.js b/src/index-jquery.js\ndeleted file mode 100644\nindex aaca0047d..000000000\n--- a/src/index-jquery.js\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-// Bundle entry for jQuery\n-import "@patternslib/patternslib/src/globals";\ndiff --git a/src/index.js b/src/index.js\nindex f106c13ec..b8d88ec71 100644\n--- a/src/index.js\n+++ b/src/index.js\n@@ -20,3 +20,16 @@ import "@patternslib/patternslib/webpack/module_federation";\n \n // And now load this bundle\'s actual entry point.\n import("./patterns");\n+\n+// Register Bootstrap and jQuery gloablly\n+async function register_global_libraries() {\n+    // Register Bootstrap globally\n+    const bootstrap = await import("bootstrap");\n+    window.bootstrap = bootstrap;\n+\n+    // Register jQuery globally\n+    const jquery = (await import("jquery")).default;\n+    window.jQuery = jquery;\n+    window.$ = jquery;\n+}\n+register_global_libraries();\ndiff --git a/src/patterns.js b/src/patterns.js\nindex 52a40e337..df8e8005b 100644\n--- a/src/patterns.js\n+++ b/src/patterns.js\n@@ -3,7 +3,6 @@\n  */\n \n // Core\n-import "@patternslib/patternslib/src/globals";\n import registry from "@patternslib/patternslib/src/core/registry";\n \n // Patternslib patterns\ndiff --git a/webpack.config.js b/webpack.config.js\nindex aa6813a51..c4309383d 100644\n--- a/webpack.config.js\n+++ b/webpack.config.js\n@@ -9,8 +9,6 @@ module.exports = (env, argv) => {\n     let config = {\n         entry: {\n             "bundle.min": path.resolve(__dirname, "src/index.js"),\n-            "bootstrap.min": path.resolve(__dirname, "src/index-bootstrap.js"),\n-            "jquery.min": path.resolve(__dirname, "src/index-jquery.js"),\n         },\n     };\n \n@@ -27,25 +25,17 @@ module.exports = (env, argv) => {\n                 ...patternslib_package_json.dependencies,\n                 ...package_json.dependencies,\n             },\n-        })\n-    );\n-    config.plugins.push(\n-        mf_config({\n-            name: "bootstrap",\n-            filename: "bootstrap-remote.min.js",\n-            remote_entry: config.entry["bootstrap.min"],\n-            dependencies: {\n-                bootstrap: package_json.dependencies["bootstrap"],\n-            },\n-        })\n-    );\n-    config.plugins.push(\n-        mf_config({\n-            name: "jquery",\n-            filename: "jquery-remote.min.js",\n-            remote_entry: config.entry["jquery.min"],\n-            dependencies: {\n-                jquery: package_json.dependencies["jquery"],\n+            shared: {\n+                bootstrap: {\n+                    singleton: true,\n+                    requiredVersion: package_json.dependencies["bootstrap"],\n+                    eager: true,\n+                },\n+                jquery: {\n+                    singleton: true,\n+                    requiredVersion: package_json.dependencies["jquery"],\n+                    eager: true,\n+                },\n             },\n         })\n     );\n'

