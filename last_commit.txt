Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-11-29T21:43:04-08:00
Author: Mikel Larreategi (erral) <mlarreategi@codesyntax.com>
Commit: https://github.com/plone/plone.restapi/commit/994987fdf43dacf9cfdb127a4bd475ae9ad0a985

Mock addon versions in documentation tests (#1544)

* mock addon versions when testing

* changelog

Files changed:
A news/1538.bugfix
M src/plone/restapi/tests/helpers.py
M src/plone/restapi/tests/http-examples/translated_messages_addons.resp
M src/plone/restapi/tests/test_documentation.py

b'diff --git a/news/1538.bugfix b/news/1538.bugfix\nnew file mode 100644\nindex 000000000..c9da7dd2c\n--- /dev/null\n+++ b/news/1538.bugfix\n@@ -0,0 +1,2 @@\n+Mock addon versions in documentation\n+[erral]\ndiff --git a/src/plone/restapi/tests/helpers.py b/src/plone/restapi/tests/helpers.py\nindex dd01a6d51..3a03dbc0a 100644\n--- a/src/plone/restapi/tests/helpers.py\n+++ b/src/plone/restapi/tests/helpers.py\n@@ -3,6 +3,7 @@\n from Products.CMFCore.utils import getToolByName\n from unittest.mock import patch\n from urllib.parse import urlparse\n+from plone.restapi.services.addons.addons import Addons\n \n import quopri\n \n@@ -73,3 +74,14 @@ def patch_scale_uuid(value):\n             storage.AnnotationStorage, "_modified_since", return_value=True\n         ):\n             yield\n+\n+\n+@contextmanager\n+def patch_addon_versions(value):\n+    """Patch the method that extracts the version of each of the addons.\n+    Without this patch we get version errors each time an addon is upgraded\n+    which is really annoying when a new version of plone.restapi is released\n+    because all PRs need to be updated\n+    """\n+    with patch.object(Addons, "get_product_version", return_value=value):\n+        yield\ndiff --git a/src/plone/restapi/tests/http-examples/translated_messages_addons.resp b/src/plone/restapi/tests/http-examples/translated_messages_addons.resp\nindex c486b06c0..ab08dab00 100644\n--- a/src/plone/restapi/tests/http-examples/translated_messages_addons.resp\n+++ b/src/plone/restapi/tests/http-examples/translated_messages_addons.resp\n@@ -13,7 +13,7 @@ Content-Type: application/json\n             "title": "Soporte de Pol\\u00edtica de Flujo de trabajo (CMFPlacefulWorkflow)",\n             "uninstall_profile_id": "Products.CMFPlacefulWorkflow:uninstall",\n             "upgrade_info": {},\n-            "version": "3.0.0b2"\n+            "version": "1.2.3"\n         },\n         {\n             "@id": "http://localhost:55001/plone/@addons/collective.MockMailHost",\n@@ -28,10 +28,10 @@ Content-Type: application/json\n                 "available": false,\n                 "hasProfile": true,\n                 "installedVersion": "2.0.0",\n-                "newVersion": "2.0.0",\n-                "required": false\n+                "newVersion": "1.2.3",\n+                "required": true\n             },\n-            "version": "2.0.0"\n+            "version": "1.2.3"\n         },\n         {\n             "@id": "http://localhost:55001/plone/@addons/plone.app.iterate",\n@@ -43,7 +43,7 @@ Content-Type: application/json\n             "title": "Soporte de Copia de Trabajo (Repetir)",\n             "uninstall_profile_id": "plone.app.iterate:uninstall",\n             "upgrade_info": {},\n-            "version": "4.0.3"\n+            "version": "1.2.3"\n         },\n         {\n             "@id": "http://localhost:55001/plone/@addons/plone.app.multilingual",\n@@ -55,7 +55,7 @@ Content-Type: application/json\n             "title": "Soporte Multiidioma",\n             "uninstall_profile_id": "plone.app.multilingual:uninstall",\n             "upgrade_info": {},\n-            "version": "6.0.0b3"\n+            "version": "1.2.3"\n         },\n         {\n             "@id": "http://localhost:55001/plone/@addons/plone.restapi",\n@@ -73,7 +73,7 @@ Content-Type: application/json\n                 "newVersion": "0006",\n                 "required": false\n             },\n-            "version": "8.32.4.dev0"\n+            "version": "1.2.3"\n         },\n         {\n             "@id": "http://localhost:55001/plone/@addons/plone.session",\n@@ -85,7 +85,7 @@ Content-Type: application/json\n             "title": "Soporte de actualizaci\\u00f3n de sesi\\u00f3n",\n             "uninstall_profile_id": "plone.session:uninstall",\n             "upgrade_info": {},\n-            "version": "4.0.0b2"\n+            "version": "1.2.3"\n         }\n     ]\n }\ndiff --git a/src/plone/restapi/tests/test_documentation.py b/src/plone/restapi/tests/test_documentation.py\nindex 05934d8ec..9d6535386 100644\n--- a/src/plone/restapi/tests/test_documentation.py\n+++ b/src/plone/restapi/tests/test_documentation.py\n@@ -27,7 +27,7 @@\n from plone.restapi.testing import PLONE_RESTAPI_ITERATE_FUNCTIONAL_TESTING\n from plone.restapi.testing import register_static_uuid_utility\n from plone.restapi.testing import RelativeSession\n-from plone.restapi.tests.helpers import patch_scale_uuid\n+from plone.restapi.tests.helpers import patch_scale_uuid, patch_addon_versions\n from plone.restapi.tests.statictime import StaticTime\n from plone.testing.z2 import Browser\n from zope.component import createObject\n@@ -1371,7 +1371,7 @@ def test_documentation_vocabularies_get_fields(self):\n \n     def test_documentation_vocabularies_get_filtered_by_title(self):\n         response = self.api_session.get(\n-            "/@vocabularies/plone.app.vocabularies.ReallyUserFriendlyTypes?" "title=doc"\n+            "/@vocabularies/plone.app.vocabularies.ReallyUserFriendlyTypes?title=doc"\n         )\n         save_request_and_response_for_docs(\n             "vocabularies_get_filtered_by_title", response\n@@ -1583,8 +1583,7 @@ def test_locking_lock(self):\n         # Replace dynamic lock token with a static one\n         response._content = re.sub(\n             b\'"token": "[^"]+"\',\n-            b\'"token":\'\n-            b\' "0.684672730996-0.25195226375-00105A989226:1477076400.000"\',  # noqa\n+            b\'"token": "0.684672730996-0.25195226375-00105A989226:1477076400.000"\',  # noqa\n             response.content,\n         )\n         save_request_and_response_for_docs("lock", response)\n@@ -1597,8 +1596,7 @@ def test_locking_lock_nonstealable_and_timeout(self):\n         # Replace dynamic lock token with a static one\n         response._content = re.sub(\n             b\'"token": "[^"]+"\',\n-            b\'"token":\'\n-            b\' "0.684672730996-0.25195226375-00105A989226:1477076400.000"\',  # noqa\n+            b\'"token": "0.684672730996-0.25195226375-00105A989226:1477076400.000"\',  # noqa\n             response.content,\n         )\n         save_request_and_response_for_docs("lock_nonstealable_timeout", response)\n@@ -1624,8 +1622,7 @@ def test_locking_refresh_lock(self):\n         # Replace dynamic lock token with a static one\n         response._content = re.sub(\n             b\'"token": "[^"]+"\',\n-            b\'"token":\'\n-            b\' "0.684672730996-0.25195226375-00105A989226:1477076400.000"\',  # noqa\n+            b\'"token": "0.684672730996-0.25195226375-00105A989226:1477076400.000"\',  # noqa\n             response.content,\n         )\n         save_request_and_response_for_docs("refresh_lock", response)\n@@ -1741,8 +1738,9 @@ def test_translate_messages_object_history(self):\n         )\n \n     def test_translate_messages_addons(self):\n-        response = self.api_session.get("/@addons")\n-        save_request_and_response_for_docs("translated_messages_addons", response)\n+        with patch_addon_versions("1.2.3"):\n+            response = self.api_session.get("/@addons")\n+            save_request_and_response_for_docs("translated_messages_addons", response)\n \n \n class TestCommenting(TestDocumentationBase):\n'

