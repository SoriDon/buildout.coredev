Repository: plone.app.widgets


Branch: refs/heads/master
Date: 2019-03-27T09:45:49+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.widgets/commit/1dfc5739bbd4e6b5dda1c1d55ac9a24b4b2ee11e

get_ajaxselect_options is no longer used

in plone.app.z3c.form, deprecate

refactor get_relateditems_options to be more specific

Files changed:
M plone/app/widgets/utils.py

b'diff --git a/plone/app/widgets/utils.py b/plone/app/widgets/utils.py\nindex 70a5357..2ec4d59 100644\n--- a/plone/app/widgets/utils.py\n+++ b/plone/app/widgets/utils.py\n@@ -13,8 +13,10 @@\n from zope.component import ComponentLookupError\n from zope.component import getMultiAdapter\n from zope.component import providedBy\n+from zope.component import getUtility\n from zope.component import queryUtility\n from zope.component.hooks import getSite\n+from zope.deprecation import deprecate\n from zope.globalrequest import getRequest\n from zope.i18n import translate\n from zope.i18nmessageid import MessageFactory\n@@ -91,8 +93,10 @@ def get_datetime_options(request):\n     return options\n \n \n+@deprecate("features were moved into the AjaxSelectWidget, remove in Plone 6")\n def get_ajaxselect_options(context, value, separator, vocabulary_name,\n                            vocabulary_view, field_name=None):\n+    # code now part of the widget, let it in here for BBB and remove in Plone 6\n     options = {\'separator\': separator}\n     if vocabulary_name:\n         options[\'vocabularyUrl\'] = \'{}/{}?name={}\'.format(\n@@ -132,14 +136,37 @@ def get_relateditems_options(context, value, separator, vocabulary_name,\n \n     request = getRequest()\n     site = get_top_site_from_url(context, request)\n-    options = get_ajaxselect_options(\n-        site,\n-        value,\n-        separator,\n-        vocabulary_name,\n-        vocabulary_view,\n-        field_name\n+    options = {\n+        \'separator\': separator,\n+    }\n+    if not vocabulary_name:\n+        # we need a vocabulary!\n+        raise ValueError(\'RelatedItems needs a vocabulary\')\n+    options[\'vocabularyUrl\'] = \'{0}/{1}?name={2}\'.format(\n+        get_context_url(site), vocabulary_view, vocabulary_name,\n     )\n+    if field_name:\n+        options[\'vocabularyUrl\'] += \'&field={0}\'.format(field_name)\n+    if value:\n+        factory = getUtility(IVocabularyFactory, vocabulary_name)\n+        if vocabulary_name == \'plone.app.vocabularies.Catalog\':\n+            vocabulary = factory(\n+                site,\n+                query=[\n+                    {  # plone.app.querystring style expected\n+                        \'i\': \'UID\',\n+                        \'o\': \'plone.app.querystring.operation.string.is\',\n+                        \'v\': value.split(separator)\n+                    }\n+                ],\n+            )\n+        options[\'initialValues\'] = {}\n+        for value in value.split(separator):\n+            try:\n+                term = vocabulary.getTerm(value)\n+                options[\'initialValues\'][term.token] = term.title\n+            except LookupError:\n+                options[\'initialValues\'][value] = value\n \n     nav_root = getNavigationRootObject(context, site)\n \n@@ -199,14 +226,7 @@ def get_querystring_options(context, querystring_view):\n         \'previewURL\': \'%s/@@querybuilder_html_results\' % base_url,\n         \'previewCountURL\': \'%s/@@querybuildernumberofresults\' % base_url,\n         \'patternDateOptions\': get_date_options(getRequest()),\n-        \'patternAjaxSelectOptions\': get_ajaxselect_options(\n-            context,\n-            None,\n-            \';\',\n-            None,\n-            None,\n-            None\n-        ),\n+        \'patternAjaxSelectOptions\': {\'separator\': \';\'},\n         \'patternRelateditemsOptions\': get_relateditems_options(\n             context,\n             None,\n'

Repository: plone.app.widgets


Branch: refs/heads/master
Date: 2019-03-27T10:02:04+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.widgets/commit/1833a6bbf8f2170de73f5d90428db0564a8e2b4b

show that those two interfaces are deprecated

Files changed:
M plone/app/widgets/interfaces.py

b'diff --git a/plone/app/widgets/interfaces.py b/plone/app/widgets/interfaces.py\nindex 4c01d44..a5432da 100644\n--- a/plone/app/widgets/interfaces.py\n+++ b/plone/app/widgets/interfaces.py\n@@ -1,15 +1,18 @@\n from zope.interface import Interface\n from plone.app.z3cform.interfaces import IPloneFormLayer\n-from zope.filerepresentation.interfaces import IFileFactory\n \n \n class IWidgetsLayer(IPloneFormLayer):\n     """Browser layer used to indicate that plone.app.widgets is installed\n+\n+    DEPRECATED\n     """\n \n \n class IWidgetsView(Interface):\n     """A view that gives access to various widget related functions.\n+\n+    DEPRECATED\n     """\n \n     def getVocabulary():\n'

Repository: plone.app.widgets


Branch: refs/heads/master
Date: 2019-03-28T14:28:50+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.widgets/commit/a0747213dfdb894df48f23f3436e2e16eabb2767

removed unused classes and move other one

Files changed:
M plone/app/widgets/interfaces.py

b'diff --git a/plone/app/widgets/interfaces.py b/plone/app/widgets/interfaces.py\nindex a5432da..e1c9fe6 100644\n--- a/plone/app/widgets/interfaces.py\n+++ b/plone/app/widgets/interfaces.py\n@@ -1,27 +1,13 @@\n+# -*- coding: utf-8 -*-\n from zope.interface import Interface\n-from plone.app.z3cform.interfaces import IPloneFormLayer\n \n+import zope.deferredimport\n \n-class IWidgetsLayer(IPloneFormLayer):\n-    """Browser layer used to indicate that plone.app.widgets is installed\n-\n-    DEPRECATED\n-    """\n-\n-\n-class IWidgetsView(Interface):\n-    """A view that gives access to various widget related functions.\n-\n-    DEPRECATED\n-    """\n-\n-    def getVocabulary():\n-        """Returns vocabulary\n-        """\n-\n-    def bodyDataOptions():\n-        """Returns the data attributes to be used on the body tag.\n-        """\n+zope.deferredimport.initialize()\n+zope.deferredimport.deprecated(\n+    \'Import from new.baz.baaz instead\',\n+    IFileFactory=\'zope.filerepresentation:interfaces.IFileFactory\',\n+)\n \n \n class IFieldPermissionChecker(Interface):\n'

Repository: plone.app.widgets


Branch: refs/heads/master
Date: 2019-03-28T14:52:05+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.widgets/commit/179a3cfb3db45352fbe79b869b4cbe86aa76f1ce

hard depend on plone.app.event, its always there

Files changed:
M plone/app/widgets/utils.py

b"diff --git a/plone/app/widgets/utils.py b/plone/app/widgets/utils.py\nindex 2ec4d59..701a26d 100644\n--- a/plone/app/widgets/utils.py\n+++ b/plone/app/widgets/utils.py\n@@ -1,10 +1,10 @@\n # -*- coding: utf-8 -*-\n-\n from Acquisition import aq_base\n from Acquisition import aq_parent\n from datetime import datetime\n from OFS.interfaces import IFolder\n from OFS.interfaces import ISimpleItem\n+from plone.app.event import base as pae_base\n from plone.app.layout.navigation.root import getNavigationRootObject\n from Products.CMFCore.interfaces import ISiteRoot\n from Products.CMFCore.utils import getToolByName\n@@ -12,8 +12,8 @@\n from z3c.form.interfaces import IForm\n from zope.component import ComponentLookupError\n from zope.component import getMultiAdapter\n-from zope.component import providedBy\n from zope.component import getUtility\n+from zope.component import providedBy\n from zope.component import queryUtility\n from zope.component.hooks import getSite\n from zope.deprecation import deprecate\n@@ -28,26 +28,11 @@\n _ = MessageFactory('plone')\n \n \n-try:\n-    from plone.app.event import base as pae_base\n-    HAS_PAE = True\n-except ImportError:\n-    HAS_PAE = False\n-\n-\n def first_weekday():\n-    if HAS_PAE:\n-        wkday = pae_base.wkday_to_mon1(pae_base.first_weekday())\n-        if wkday > 1:\n-            return 1  # Default to Monday\n-        return wkday\n-    else:\n-        cal = getToolByName(getSite(), 'portal_calendar', None)\n-        if cal:\n-            wkday = cal.firstweekday\n-            if wkday == 6:  # portal_calendar's Sunday is 6\n-                return 0  # Sunday\n-        return 1  # other cases: Monday\n+    wkday = pae_base.wkday_to_mon1(pae_base.first_weekday())\n+    if wkday > 1:\n+        return 1  # Default to Monday\n+    return wkday\n \n \n class NotImplemented(Exception):\n"

Repository: plone.app.widgets


Branch: refs/heads/master
Date: 2019-03-28T14:52:33+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.widgets/commit/d4b771772c37f93c213b576096538361c80622a7

move IFieldPermissionChecker and Zope2FileUploadStorable to plone.app.z3cform

Files changed:
M plone/app/widgets/configure.zcml
M plone/app/widgets/factories.py
M plone/app/widgets/interfaces.py

b'diff --git a/plone/app/widgets/configure.zcml b/plone/app/widgets/configure.zcml\nindex 3e900b4..c7c446c 100644\n--- a/plone/app/widgets/configure.zcml\n+++ b/plone/app/widgets/configure.zcml\n@@ -8,10 +8,4 @@\n \n   <include package="mockup" />\n \n-  <utility\n-    name="ZPublisher.HTTPRequest.FileUpload"\n-    provides="plone.namedfile.interfaces.IStorage"\n-    factory=".factories.Zope2FileUploadStorable"\n-    />\n-\n </configure>\ndiff --git a/plone/app/widgets/factories.py b/plone/app/widgets/factories.py\nindex 952e145..30e5f87 100644\n--- a/plone/app/widgets/factories.py\n+++ b/plone/app/widgets/factories.py\n@@ -1,17 +1,9 @@\n-from zope.interface import implementer\n-from plone.namedfile.storages import MAXCHUNKSIZE\n-from plone.namedfile.interfaces import IStorage\n-\n-\n-@implementer(IStorage)\n-class Zope2FileUploadStorable(object):\n-\n-    def store(self, data, blob):\n-        data.seek(0)\n-\n-        fp = blob.open(\'w\')\n-        block = data.read(MAXCHUNKSIZE)\n-        while block:\n-            fp.write(block)\n-            block = data.read(MAXCHUNKSIZE)\n-        fp.close()\n+# -*- coding: utf-8 -*-\n+import zope.deferredimport\n+\n+# can be removed in Plone 6\n+zope.deferredimport.initialize()\n+zope.deferredimport.deprecated(\n+    \'Import Zope2FileUploadStorable from plone.app.z3cform.factories instead\',\n+    Zope2FileUploadStorable=\'plone.app.z3cform:factories.Zope2FileUploadStorable\',\n+)\ndiff --git a/plone/app/widgets/interfaces.py b/plone/app/widgets/interfaces.py\nindex e1c9fe6..838bcb7 100644\n--- a/plone/app/widgets/interfaces.py\n+++ b/plone/app/widgets/interfaces.py\n@@ -1,23 +1,14 @@\n # -*- coding: utf-8 -*-\n-from zope.interface import Interface\n-\n import zope.deferredimport\n \n+# FileFactory only needed by ATContentTypes\n zope.deferredimport.initialize()\n zope.deferredimport.deprecated(\n-    \'Import from new.baz.baaz instead\',\n+    \'Import IFileFactory from zope.filerepresentation.interfaces instead\',\n     IFileFactory=\'zope.filerepresentation:interfaces.IFileFactory\',\n )\n \n-\n-class IFieldPermissionChecker(Interface):\n-    """Adapter factory for checking whether a user has permission to\n-    edit a specific field on a content object.\n-    """\n-\n-    def validate(field_name, vocabulary_name=None):\n-        """Returns True if the current user has permission to edit the\n-        `field_name` field.  Returns False if the user does not have\n-        permission.  Raises and AttributeError if the field cannot be\n-        found.\n-        """\n+zope.deferredimport.deprecated(\n+    \'Import IFieldPermissionChecker from plone.app.z3cform.interfaces instead\',\n+    IFieldPermissionChecker=\'plone.app.z3cform:interfaces.IFieldPermissionChecker\',  # noqa\n+)\n'

Repository: plone.app.widgets


Branch: refs/heads/master
Date: 2019-03-28T16:07:52+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.widgets/commit/ea72a70d20a67d7c9be3432bdd5b91b6b8f37271

use first_weekday from p.a.event.base

Files changed:
M plone/app/widgets/tests/test_utils.py
M plone/app/widgets/utils.py

b"diff --git a/plone/app/widgets/tests/test_utils.py b/plone/app/widgets/tests/test_utils.py\nindex f1f62bc..3812213 100644\n--- a/plone/app/widgets/tests/test_utils.py\n+++ b/plone/app/widgets/tests/test_utils.py\n@@ -1,5 +1,4 @@\n # -*- coding: utf-8 -*-\n-from mock import Mock\n from mock import patch\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n@@ -7,53 +6,10 @@\n from plone.app.widgets.utils import get_querystring_options\n from plone.app.widgets.utils import get_relateditems_options\n from plone.app.widgets.utils import get_tinymce_options\n-from six.moves import reload_module\n \n import unittest\n \n \n-class MockTool(Mock):\n-    firstweekday = 6\n-\n-\n-class UtilsTests(unittest.TestCase):\n-\n-    def test__first_weekday(self):\n-        # make sure, plone.app.event is available and mock it.\n-        mock = Mock()\n-        modules = {\n-            'plone': mock,\n-            'plone.app': mock.module,\n-            'plone.app.event': mock.module.module,\n-            'plone.app.event.base': mock.module.module.module,\n-        }\n-        with patch('Products.CMFCore.utils.getToolByName', new=MockTool), \\\n-                patch.dict('sys.modules', modules):\n-            # test for plone.app.event installed\n-            from plone.app.event import base\n-            base.first_weekday = lambda: 0\n-            base.wkday_to_mon1 = lambda x: x\n-            from plone.app.widgets import utils\n-            # reload utils, so that plone.app.event mock import\n-            # works, even if it was imported before.\n-            reload_module(utils)\n-            orig_HAS_PAE = utils.HAS_PAE\n-            utils.HAS_PAE = True\n-            self.assertEqual(utils.first_weekday(), 0)\n-            base.first_weekday = lambda: 1\n-            self.assertEqual(utils.first_weekday(), 1)\n-            base.first_weekday = lambda: 5\n-            self.assertEqual(utils.first_weekday(), 1)\n-\n-            # test without plone.app.event installed\n-            utils.HAS_PAE = False\n-            self.assertEqual(utils.first_weekday(), 0)\n-\n-        # restore original state\n-        utils.HAS_PAE = orig_HAS_PAE\n-        reload_module(utils)\n-\n-\n class TestQueryStringOptions(unittest.TestCase):\n     layer = PLONEAPPWIDGETS_INTEGRATION_TESTING\n \ndiff --git a/plone/app/widgets/utils.py b/plone/app/widgets/utils.py\nindex 701a26d..21ef58b 100644\n--- a/plone/app/widgets/utils.py\n+++ b/plone/app/widgets/utils.py\n@@ -23,16 +23,16 @@\n from zope.schema.interfaces import IVocabularyFactory\n \n import json\n+import zope.deferredimport\n \n \n _ = MessageFactory('plone')\n \n \n-def first_weekday():\n-    wkday = pae_base.wkday_to_mon1(pae_base.first_weekday())\n-    if wkday > 1:\n-        return 1  # Default to Monday\n-    return wkday\n+zope.deferredimport.deprecated(\n+    'Import first_weekday from plone.app.event.base instead',\n+    first_weekday='plone.app.event:base.first_weekday',\n+)\n \n \n class NotImplemented(Exception):\n"

Repository: plone.app.widgets


Branch: refs/heads/master
Date: 2019-04-01T11:39:50+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.widgets/commit/40913b30802e126d36700de8ad914bdb188d0d40

probably wrong usage of deferreredimport

Files changed:
M plone/app/widgets/factories.py
M plone/app/widgets/interfaces.py
M plone/app/widgets/utils.py

b"diff --git a/plone/app/widgets/factories.py b/plone/app/widgets/factories.py\nindex 30e5f87..77df043 100644\n--- a/plone/app/widgets/factories.py\n+++ b/plone/app/widgets/factories.py\n@@ -5,5 +5,5 @@\n zope.deferredimport.initialize()\n zope.deferredimport.deprecated(\n     'Import Zope2FileUploadStorable from plone.app.z3cform.factories instead',\n-    Zope2FileUploadStorable='plone.app.z3cform:factories.Zope2FileUploadStorable',\n+    Zope2FileUploadStorable='plone.app.z3cform.factories:Zope2FileUploadStorable',\n )\ndiff --git a/plone/app/widgets/interfaces.py b/plone/app/widgets/interfaces.py\nindex 838bcb7..e101a63 100644\n--- a/plone/app/widgets/interfaces.py\n+++ b/plone/app/widgets/interfaces.py\n@@ -5,10 +5,10 @@\n zope.deferredimport.initialize()\n zope.deferredimport.deprecated(\n     'Import IFileFactory from zope.filerepresentation.interfaces instead',\n-    IFileFactory='zope.filerepresentation:interfaces.IFileFactory',\n+    IFileFactory='zope.filerepresentation.interfaces:IFileFactory',\n )\n \n zope.deferredimport.deprecated(\n     'Import IFieldPermissionChecker from plone.app.z3cform.interfaces instead',\n-    IFieldPermissionChecker='plone.app.z3cform:interfaces.IFieldPermissionChecker',  # noqa\n+    IFieldPermissionChecker='plone.app.z3cform.interfaces:IFieldPermissionChecker',  # noqa\n )\ndiff --git a/plone/app/widgets/utils.py b/plone/app/widgets/utils.py\nindex 21ef58b..6ca761e 100644\n--- a/plone/app/widgets/utils.py\n+++ b/plone/app/widgets/utils.py\n@@ -31,7 +31,7 @@\n \n zope.deferredimport.deprecated(\n     'Import first_weekday from plone.app.event.base instead',\n-    first_weekday='plone.app.event:base.first_weekday',\n+    first_weekday='plone.app.event.base:first_weekday',\n )\n \n \n"

Repository: plone.app.widgets


Branch: refs/heads/master
Date: 2019-04-08T13:49:07+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.widgets/commit/c400894380c2ba32584109b02a5f603c4b22674f

document chnages

Files changed:
A news/194.breaking
M setup.py

b"diff --git a/news/194.breaking b/news/194.breaking\nnew file mode 100644\nindex 0000000..7f09f25\n--- /dev/null\n+++ b/news/194.breaking\n@@ -0,0 +1,7 @@\n+Deprecate ``get_ajaxselect_options`` (no longer used).\n+``IWidgetsLayer`` and ``IWidgetsView`` are no longer used, remove them.\n+Deprecated ``IFileFactory`` import, use ``zope.filerepresentation`` instead.\n+Hard depend on ``plone.app.event``, it is meanwhile a dependenciy of Plone core.\n+Move ``IFieldPermissionChecker`` and ``Zope2FileUploadStorable`` to ``plone.app.z3cform`` in order to slowly fade out this package.\n+Use util ``first_weekday`` from ``plone.app.event`` and do not duplicate here; deprecated import placed.\n+[jensens]\n\\ No newline at end of file\ndiff --git a/setup.py b/setup.py\nindex 3a8be7b..d45fb5e 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,6 +1,6 @@\n from setuptools import setup, find_packages\n \n-version = '2.4.2.dev0'\n+version = '3.0.0.dev0'\n \n setup(\n     name='plone.app.widgets',\n"

Repository: plone.app.widgets


Branch: refs/heads/master
Date: 2019-04-08T14:50:34+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.widgets/commit/0cb689de61123dc60923188246687e3ffeab04ef

simplify title lookup and do not depend on half baken CatalogVocabulary implementation

Files changed:
M plone/app/widgets/utils.py

b"diff --git a/plone/app/widgets/utils.py b/plone/app/widgets/utils.py\nindex 6ca761e..3594b7f 100644\n--- a/plone/app/widgets/utils.py\n+++ b/plone/app/widgets/utils.py\n@@ -4,7 +4,6 @@\n from datetime import datetime\n from OFS.interfaces import IFolder\n from OFS.interfaces import ISimpleItem\n-from plone.app.event import base as pae_base\n from plone.app.layout.navigation.root import getNavigationRootObject\n from Products.CMFCore.interfaces import ISiteRoot\n from Products.CMFCore.utils import getToolByName\n@@ -12,7 +11,6 @@\n from z3c.form.interfaces import IForm\n from zope.component import ComponentLookupError\n from zope.component import getMultiAdapter\n-from zope.component import getUtility\n from zope.component import providedBy\n from zope.component import queryUtility\n from zope.component.hooks import getSite\n@@ -133,25 +131,16 @@ def get_relateditems_options(context, value, separator, vocabulary_name,\n     if field_name:\n         options['vocabularyUrl'] += '&field={0}'.format(field_name)\n     if value:\n-        factory = getUtility(IVocabularyFactory, vocabulary_name)\n-        if vocabulary_name == 'plone.app.vocabularies.Catalog':\n-            vocabulary = factory(\n-                site,\n-                query=[\n-                    {  # plone.app.querystring style expected\n-                        'i': 'UID',\n-                        'o': 'plone.app.querystring.operation.string.is',\n-                        'v': value.split(separator)\n-                    }\n-                ],\n-            )\n         options['initialValues'] = {}\n+        catalog = False\n+        if vocabulary_name == 'plone.app.vocabularies.Catalog':\n+            catalog = getToolByName(getSite(), 'portal_catalog')\n         for value in value.split(separator):\n-            try:\n-                term = vocabulary.getTerm(value)\n-                options['initialValues'][term.token] = term.title\n-            except LookupError:\n-                options['initialValues'][value] = value\n+            title = value\n+            if catalog:\n+                result = catalog(UID=value)\n+                title = result[0].Title if result else value\n+            options['initialValues'][value] = title\n \n     nav_root = getNavigationRootObject(context, site)\n \n"

Repository: plone.app.widgets


Branch: refs/heads/master
Date: 2019-04-11T14:04:51+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.widgets/commit/917edc62bd78cc01d0a02beeebafab38917a0dd6

Merge pull request #194 from plone/changes-for-plone.app.z3cform

get_ajaxselect_options is no longer used in plone.app.z3cform

Files changed:
A news/194.breaking
M plone/app/widgets/configure.zcml
M plone/app/widgets/factories.py
M plone/app/widgets/interfaces.py
M plone/app/widgets/tests/test_utils.py
M plone/app/widgets/utils.py
M setup.py

b'diff --git a/news/194.breaking b/news/194.breaking\nnew file mode 100644\nindex 0000000..7f09f25\n--- /dev/null\n+++ b/news/194.breaking\n@@ -0,0 +1,7 @@\n+Deprecate ``get_ajaxselect_options`` (no longer used).\n+``IWidgetsLayer`` and ``IWidgetsView`` are no longer used, remove them.\n+Deprecated ``IFileFactory`` import, use ``zope.filerepresentation`` instead.\n+Hard depend on ``plone.app.event``, it is meanwhile a dependenciy of Plone core.\n+Move ``IFieldPermissionChecker`` and ``Zope2FileUploadStorable`` to ``plone.app.z3cform`` in order to slowly fade out this package.\n+Use util ``first_weekday`` from ``plone.app.event`` and do not duplicate here; deprecated import placed.\n+[jensens]\n\\ No newline at end of file\ndiff --git a/plone/app/widgets/configure.zcml b/plone/app/widgets/configure.zcml\nindex 3e900b4..c7c446c 100644\n--- a/plone/app/widgets/configure.zcml\n+++ b/plone/app/widgets/configure.zcml\n@@ -8,10 +8,4 @@\n \n   <include package="mockup" />\n \n-  <utility\n-    name="ZPublisher.HTTPRequest.FileUpload"\n-    provides="plone.namedfile.interfaces.IStorage"\n-    factory=".factories.Zope2FileUploadStorable"\n-    />\n-\n </configure>\ndiff --git a/plone/app/widgets/factories.py b/plone/app/widgets/factories.py\nindex 952e145..77df043 100644\n--- a/plone/app/widgets/factories.py\n+++ b/plone/app/widgets/factories.py\n@@ -1,17 +1,9 @@\n-from zope.interface import implementer\n-from plone.namedfile.storages import MAXCHUNKSIZE\n-from plone.namedfile.interfaces import IStorage\n-\n-\n-@implementer(IStorage)\n-class Zope2FileUploadStorable(object):\n-\n-    def store(self, data, blob):\n-        data.seek(0)\n-\n-        fp = blob.open(\'w\')\n-        block = data.read(MAXCHUNKSIZE)\n-        while block:\n-            fp.write(block)\n-            block = data.read(MAXCHUNKSIZE)\n-        fp.close()\n+# -*- coding: utf-8 -*-\n+import zope.deferredimport\n+\n+# can be removed in Plone 6\n+zope.deferredimport.initialize()\n+zope.deferredimport.deprecated(\n+    \'Import Zope2FileUploadStorable from plone.app.z3cform.factories instead\',\n+    Zope2FileUploadStorable=\'plone.app.z3cform.factories:Zope2FileUploadStorable\',\n+)\ndiff --git a/plone/app/widgets/interfaces.py b/plone/app/widgets/interfaces.py\nindex 4c01d44..e101a63 100644\n--- a/plone/app/widgets/interfaces.py\n+++ b/plone/app/widgets/interfaces.py\n@@ -1,34 +1,14 @@\n-from zope.interface import Interface\n-from plone.app.z3cform.interfaces import IPloneFormLayer\n-from zope.filerepresentation.interfaces import IFileFactory\n-\n-\n-class IWidgetsLayer(IPloneFormLayer):\n-    """Browser layer used to indicate that plone.app.widgets is installed\n-    """\n-\n-\n-class IWidgetsView(Interface):\n-    """A view that gives access to various widget related functions.\n-    """\n-\n-    def getVocabulary():\n-        """Returns vocabulary\n-        """\n-\n-    def bodyDataOptions():\n-        """Returns the data attributes to be used on the body tag.\n-        """\n-\n-\n-class IFieldPermissionChecker(Interface):\n-    """Adapter factory for checking whether a user has permission to\n-    edit a specific field on a content object.\n-    """\n-\n-    def validate(field_name, vocabulary_name=None):\n-        """Returns True if the current user has permission to edit the\n-        `field_name` field.  Returns False if the user does not have\n-        permission.  Raises and AttributeError if the field cannot be\n-        found.\n-        """\n+# -*- coding: utf-8 -*-\n+import zope.deferredimport\n+\n+# FileFactory only needed by ATContentTypes\n+zope.deferredimport.initialize()\n+zope.deferredimport.deprecated(\n+    \'Import IFileFactory from zope.filerepresentation.interfaces instead\',\n+    IFileFactory=\'zope.filerepresentation.interfaces:IFileFactory\',\n+)\n+\n+zope.deferredimport.deprecated(\n+    \'Import IFieldPermissionChecker from plone.app.z3cform.interfaces instead\',\n+    IFieldPermissionChecker=\'plone.app.z3cform.interfaces:IFieldPermissionChecker\',  # noqa\n+)\ndiff --git a/plone/app/widgets/tests/test_utils.py b/plone/app/widgets/tests/test_utils.py\nindex f1f62bc..3812213 100644\n--- a/plone/app/widgets/tests/test_utils.py\n+++ b/plone/app/widgets/tests/test_utils.py\n@@ -1,5 +1,4 @@\n # -*- coding: utf-8 -*-\n-from mock import Mock\n from mock import patch\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n@@ -7,53 +6,10 @@\n from plone.app.widgets.utils import get_querystring_options\n from plone.app.widgets.utils import get_relateditems_options\n from plone.app.widgets.utils import get_tinymce_options\n-from six.moves import reload_module\n \n import unittest\n \n \n-class MockTool(Mock):\n-    firstweekday = 6\n-\n-\n-class UtilsTests(unittest.TestCase):\n-\n-    def test__first_weekday(self):\n-        # make sure, plone.app.event is available and mock it.\n-        mock = Mock()\n-        modules = {\n-            \'plone\': mock,\n-            \'plone.app\': mock.module,\n-            \'plone.app.event\': mock.module.module,\n-            \'plone.app.event.base\': mock.module.module.module,\n-        }\n-        with patch(\'Products.CMFCore.utils.getToolByName\', new=MockTool), \\\n-                patch.dict(\'sys.modules\', modules):\n-            # test for plone.app.event installed\n-            from plone.app.event import base\n-            base.first_weekday = lambda: 0\n-            base.wkday_to_mon1 = lambda x: x\n-            from plone.app.widgets import utils\n-            # reload utils, so that plone.app.event mock import\n-            # works, even if it was imported before.\n-            reload_module(utils)\n-            orig_HAS_PAE = utils.HAS_PAE\n-            utils.HAS_PAE = True\n-            self.assertEqual(utils.first_weekday(), 0)\n-            base.first_weekday = lambda: 1\n-            self.assertEqual(utils.first_weekday(), 1)\n-            base.first_weekday = lambda: 5\n-            self.assertEqual(utils.first_weekday(), 1)\n-\n-            # test without plone.app.event installed\n-            utils.HAS_PAE = False\n-            self.assertEqual(utils.first_weekday(), 0)\n-\n-        # restore original state\n-        utils.HAS_PAE = orig_HAS_PAE\n-        reload_module(utils)\n-\n-\n class TestQueryStringOptions(unittest.TestCase):\n     layer = PLONEAPPWIDGETS_INTEGRATION_TESTING\n \ndiff --git a/plone/app/widgets/utils.py b/plone/app/widgets/utils.py\nindex 70a5357..3594b7f 100644\n--- a/plone/app/widgets/utils.py\n+++ b/plone/app/widgets/utils.py\n@@ -1,5 +1,4 @@\n # -*- coding: utf-8 -*-\n-\n from Acquisition import aq_base\n from Acquisition import aq_parent\n from datetime import datetime\n@@ -15,37 +14,23 @@\n from zope.component import providedBy\n from zope.component import queryUtility\n from zope.component.hooks import getSite\n+from zope.deprecation import deprecate\n from zope.globalrequest import getRequest\n from zope.i18n import translate\n from zope.i18nmessageid import MessageFactory\n from zope.schema.interfaces import IVocabularyFactory\n \n import json\n+import zope.deferredimport\n \n \n _ = MessageFactory(\'plone\')\n \n \n-try:\n-    from plone.app.event import base as pae_base\n-    HAS_PAE = True\n-except ImportError:\n-    HAS_PAE = False\n-\n-\n-def first_weekday():\n-    if HAS_PAE:\n-        wkday = pae_base.wkday_to_mon1(pae_base.first_weekday())\n-        if wkday > 1:\n-            return 1  # Default to Monday\n-        return wkday\n-    else:\n-        cal = getToolByName(getSite(), \'portal_calendar\', None)\n-        if cal:\n-            wkday = cal.firstweekday\n-            if wkday == 6:  # portal_calendar\'s Sunday is 6\n-                return 0  # Sunday\n-        return 1  # other cases: Monday\n+zope.deferredimport.deprecated(\n+    \'Import first_weekday from plone.app.event.base instead\',\n+    first_weekday=\'plone.app.event.base:first_weekday\',\n+)\n \n \n class NotImplemented(Exception):\n@@ -91,8 +76,10 @@ def get_datetime_options(request):\n     return options\n \n \n+@deprecate("features were moved into the AjaxSelectWidget, remove in Plone 6")\n def get_ajaxselect_options(context, value, separator, vocabulary_name,\n                            vocabulary_view, field_name=None):\n+    # code now part of the widget, let it in here for BBB and remove in Plone 6\n     options = {\'separator\': separator}\n     if vocabulary_name:\n         options[\'vocabularyUrl\'] = \'{}/{}?name={}\'.format(\n@@ -132,14 +119,28 @@ def get_relateditems_options(context, value, separator, vocabulary_name,\n \n     request = getRequest()\n     site = get_top_site_from_url(context, request)\n-    options = get_ajaxselect_options(\n-        site,\n-        value,\n-        separator,\n-        vocabulary_name,\n-        vocabulary_view,\n-        field_name\n+    options = {\n+        \'separator\': separator,\n+    }\n+    if not vocabulary_name:\n+        # we need a vocabulary!\n+        raise ValueError(\'RelatedItems needs a vocabulary\')\n+    options[\'vocabularyUrl\'] = \'{0}/{1}?name={2}\'.format(\n+        get_context_url(site), vocabulary_view, vocabulary_name,\n     )\n+    if field_name:\n+        options[\'vocabularyUrl\'] += \'&field={0}\'.format(field_name)\n+    if value:\n+        options[\'initialValues\'] = {}\n+        catalog = False\n+        if vocabulary_name == \'plone.app.vocabularies.Catalog\':\n+            catalog = getToolByName(getSite(), \'portal_catalog\')\n+        for value in value.split(separator):\n+            title = value\n+            if catalog:\n+                result = catalog(UID=value)\n+                title = result[0].Title if result else value\n+            options[\'initialValues\'][value] = title\n \n     nav_root = getNavigationRootObject(context, site)\n \n@@ -199,14 +200,7 @@ def get_querystring_options(context, querystring_view):\n         \'previewURL\': \'%s/@@querybuilder_html_results\' % base_url,\n         \'previewCountURL\': \'%s/@@querybuildernumberofresults\' % base_url,\n         \'patternDateOptions\': get_date_options(getRequest()),\n-        \'patternAjaxSelectOptions\': get_ajaxselect_options(\n-            context,\n-            None,\n-            \';\',\n-            None,\n-            None,\n-            None\n-        ),\n+        \'patternAjaxSelectOptions\': {\'separator\': \';\'},\n         \'patternRelateditemsOptions\': get_relateditems_options(\n             context,\n             None,\ndiff --git a/setup.py b/setup.py\nindex 3a8be7b..d45fb5e 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,6 +1,6 @@\n from setuptools import setup, find_packages\n \n-version = \'2.4.2.dev0\'\n+version = \'3.0.0.dev0\'\n \n setup(\n     name=\'plone.app.widgets\',\n'

