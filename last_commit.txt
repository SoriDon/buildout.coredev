Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2016-10-15T23:59:00-07:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/dddf689c775dd5aef393b409e1f5f779688edfe3

avoid dependency on plone.app.imaging

Files changed:
M CHANGES.rst
M Products/CMFPlone/controlpanel/browser/configure.zcml
M Products/CMFPlone/utils.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 737c777..523ec53 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -34,6 +34,8 @@ New features:
 
 Bug fixes:
 
+- Avoid dependency on plone.app.imaging. [davisagli]
+
 - Add utf8 headers to all Python source files. [jensens]
 
 - Apply security hotfix 20160830 for ``z3c.form`` widgets.  [maurits]
diff --git a/Products/CMFPlone/controlpanel/browser/configure.zcml b/Products/CMFPlone/controlpanel/browser/configure.zcml
index 6acbc6b..996c7a8 100644
--- a/Products/CMFPlone/controlpanel/browser/configure.zcml
+++ b/Products/CMFPlone/controlpanel/browser/configure.zcml
@@ -2,8 +2,13 @@
     xmlns="http://namespaces.zope.org/zope"
     xmlns:browser="http://namespaces.zope.org/browser">
 
-  <!-- needed for control panel permission -->
-  <include package="plone.app.imaging" />
+  <!-- the condition is to avoid a conflict with the
+       older permission that is registered by plone.app.imaging -->
+  <configure zcml:condition="not-installed plone.app.imaging">
+    <permission
+        id="plone.app.controlpanel.Imaging"
+        title="Plone Site Setup: Imaging" />
+  </configure>
 
   <permission
       id="plone.app.controlpanel.TinyMCE"
diff --git a/Products/CMFPlone/utils.py b/Products/CMFPlone/utils.py
index 6c805c3..84c042b 100644
--- a/Products/CMFPlone/utils.py
+++ b/Products/CMFPlone/utils.py
@@ -666,15 +666,31 @@ def bodyfinder(text):
     return text[bodystart:bodyend]
 
 
-# XXX nasty? better than re-writting same method. Circular import issues here
 def getAllowedSizes():
-    from plone.app.imaging.utils import getAllowedSizes as func
-    return func()
+    registry = queryUtility(IRegistry)
+    if not registry:
+        return None
+    settings = registry.forInterface(
+        IImagingSchema, prefix="plone", check=False)
+    if not settings.allowed_sizes:
+        return None
+    sizes = {}
+    for line in settings.allowed_sizes:
+        line = line.strip()
+        if line:
+            name, width, height = pattern.match(line).groups()
+            name = name.strip().replace(' ', '_')
+            sizes[name] = int(width), int(height)
+    return sizes
 
 
 def getQuality():
-    from plone.app.imaging.utils import getQuality as func
-    return func()
+    registry = queryUtility(IRegistry)
+    if registry:
+        settings = registry.forInterface(
+            IImagingSchema, prefix="plone", check=False)
+        return settings.quality or QUALITY_DEFAULT
+    return QUALITY_DEFAULT
 
 
 def getSiteLogo(site=None):


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2016-10-16T21:53:18-07:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/b3fa93318ce875fbb90bbcdb0cca4e5ec5ccf914

add missing zcml namespace

Files changed:
M Products/CMFPlone/controlpanel/browser/configure.zcml

diff --git a/Products/CMFPlone/controlpanel/browser/configure.zcml b/Products/CMFPlone/controlpanel/browser/configure.zcml
index 996c7a8..5115a52 100644
--- a/Products/CMFPlone/controlpanel/browser/configure.zcml
+++ b/Products/CMFPlone/controlpanel/browser/configure.zcml
@@ -1,6 +1,7 @@
 <configure
     xmlns="http://namespaces.zope.org/zope"
-    xmlns:browser="http://namespaces.zope.org/browser">
+    xmlns:browser="http://namespaces.zope.org/browser"
+    xmlns:zcml="http://namespaces.zope.org/zcml">
 
   <!-- the condition is to avoid a conflict with the
        older permission that is registered by plone.app.imaging -->


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2016-10-17T11:12:49-04:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/fda7ecae8870151115be931b0b028cedd5461c0e

fix missing import

Files changed:
M Products/CMFPlone/utils.py

diff --git a/Products/CMFPlone/utils.py b/Products/CMFPlone/utils.py
index 84c042b..3beaf5e 100644
--- a/Products/CMFPlone/utils.py
+++ b/Products/CMFPlone/utils.py
@@ -20,6 +20,7 @@
 from Products.CMFCore.utils import getToolByName
 from Products.CMFCore.utils import ToolInit as CMFCoreToolInit
 from Products.CMFPlone import PloneMessageFactory as _
+from Products.CMFPlone.interfaces.controlpanel import IImagingSchema
 from Products.CMFPlone.interfaces.siteroot import IPloneSiteRoot
 from types import ClassType
 from webdav.interfaces import IWriteLock


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2016-10-17T13:02:08-05:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/6c8fd6a8e48157c9e7b61edef8eceecf2d0db6a4

Merge pull request #1793 from plone/davisagli-AT-cleanup

avoid dependency on plone.app.imaging

Files changed:
M CHANGES.rst
M Products/CMFPlone/controlpanel/browser/configure.zcml
M Products/CMFPlone/utils.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 737c777..523ec53 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -34,6 +34,8 @@ New features:
 
 Bug fixes:
 
+- Avoid dependency on plone.app.imaging. [davisagli]
+
 - Add utf8 headers to all Python source files. [jensens]
 
 - Apply security hotfix 20160830 for ``z3c.form`` widgets.  [maurits]
diff --git a/Products/CMFPlone/controlpanel/browser/configure.zcml b/Products/CMFPlone/controlpanel/browser/configure.zcml
index 6acbc6b..5115a52 100644
--- a/Products/CMFPlone/controlpanel/browser/configure.zcml
+++ b/Products/CMFPlone/controlpanel/browser/configure.zcml
@@ -1,9 +1,15 @@
 <configure
     xmlns="http://namespaces.zope.org/zope"
-    xmlns:browser="http://namespaces.zope.org/browser">
-
-  <!-- needed for control panel permission -->
-  <include package="plone.app.imaging" />
+    xmlns:browser="http://namespaces.zope.org/browser"
+    xmlns:zcml="http://namespaces.zope.org/zcml">
+
+  <!-- the condition is to avoid a conflict with the
+       older permission that is registered by plone.app.imaging -->
+  <configure zcml:condition="not-installed plone.app.imaging">
+    <permission
+        id="plone.app.controlpanel.Imaging"
+        title="Plone Site Setup: Imaging" />
+  </configure>
 
   <permission
       id="plone.app.controlpanel.TinyMCE"
diff --git a/Products/CMFPlone/utils.py b/Products/CMFPlone/utils.py
index 6c805c3..3beaf5e 100644
--- a/Products/CMFPlone/utils.py
+++ b/Products/CMFPlone/utils.py
@@ -20,6 +20,7 @@
 from Products.CMFCore.utils import getToolByName
 from Products.CMFCore.utils import ToolInit as CMFCoreToolInit
 from Products.CMFPlone import PloneMessageFactory as _
+from Products.CMFPlone.interfaces.controlpanel import IImagingSchema
 from Products.CMFPlone.interfaces.siteroot import IPloneSiteRoot
 from types import ClassType
 from webdav.interfaces import IWriteLock
@@ -666,15 +667,31 @@ def bodyfinder(text):
     return text[bodystart:bodyend]
 
 
-# XXX nasty? better than re-writting same method. Circular import issues here
 def getAllowedSizes():
-    from plone.app.imaging.utils import getAllowedSizes as func
-    return func()
+    registry = queryUtility(IRegistry)
+    if not registry:
+        return None
+    settings = registry.forInterface(
+        IImagingSchema, prefix="plone", check=False)
+    if not settings.allowed_sizes:
+        return None
+    sizes = {}
+    for line in settings.allowed_sizes:
+        line = line.strip()
+        if line:
+            name, width, height = pattern.match(line).groups()
+            name = name.strip().replace(' ', '_')
+            sizes[name] = int(width), int(height)
+    return sizes
 
 
 def getQuality():
-    from plone.app.imaging.utils import getQuality as func
-    return func()
+    registry = queryUtility(IRegistry)
+    if registry:
+        settings = registry.forInterface(
+            IImagingSchema, prefix="plone", check=False)
+        return settings.quality or QUALITY_DEFAULT
+    return QUALITY_DEFAULT
 
 
 def getSiteLogo(site=None):


