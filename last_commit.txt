Repository: plone.restapi


Branch: refs/heads/master
Date: 2023-01-19T21:02:45+01:00
Author: Andrei Grigore (andreiggr) <44702393+andreiggr@users.noreply.github.com>
Commit: https://github.com/plone/plone.restapi/commit/8166e1149734bd91b4355287f2bf7103d4d4789e

depth is bottomLevel (#1562)

* depth is bottomLevel

* clearup

* rootpath vs currentpath in query

* bottomLevel 0 is max depth

* Change logs

* flake8ed &amp; blacked

* depth is bottomLevel

* clearup

* rootpath vs currentpath in query

* bottomLevel 0 is max depth

* Change logs

* flake8ed &amp; blacked

* fresh tests

* not using json anymore

* flake8ed &amp; blacked

* changelog reform

* clean

Co-authored-by: Timo Stollenwerk &lt;tisto@users.noreply.github.com&gt;

Files changed:
A news/1562.bug
M src/plone/restapi/services/contextnavigation/get.py
M src/plone/restapi/tests/http-examples/contextnavigation.resp
M src/plone/restapi/tests/test_services_contextnavigation.py

b'diff --git a/news/1562.bug b/news/1562.bug\nnew file mode 100644\nindex 000000000..647241e00\n--- /dev/null\n+++ b/news/1562.bug\n@@ -0,0 +1 @@\n+Fix context navigation endpoint @contextnavigation to serve the navigation tree based on depth (bottomLevel).\n\\ No newline at end of file\ndiff --git a/src/plone/restapi/services/contextnavigation/get.py b/src/plone/restapi/services/contextnavigation/get.py\nindex ceb234f04..2431faaf1 100644\n--- a/src/plone/restapi/services/contextnavigation/get.py\n+++ b/src/plone/restapi/services/contextnavigation/get.py\n@@ -646,10 +646,15 @@ def __init__(self, context, data):\n         # nothing (since we explicitly start from the root always). Hence,\n         # use a regular depth-1 query in this case.\n \n+        depth = data.bottomLevel\n+\n+        if depth == 0:\n+            depth = 999\n+\n         if currentPath != rootPath and not currentPath.startswith(rootPath + "/"):\n-            query["path"] = {"query": rootPath, "depth": 1}\n+            query["path"] = {"query": rootPath, "depth": depth}\n         else:\n-            query["path"] = {"query": currentPath, "navtree": 1}\n+            query["path"] = {"query": currentPath, "depth": depth, "navtree": 1}\n \n         topLevel = data.topLevel\n         if topLevel and topLevel > 0:\ndiff --git a/src/plone/restapi/tests/http-examples/contextnavigation.resp b/src/plone/restapi/tests/http-examples/contextnavigation.resp\nindex d5f8f0acf..5e4f7be09 100644\n--- a/src/plone/restapi/tests/http-examples/contextnavigation.resp\n+++ b/src/plone/restapi/tests/http-examples/contextnavigation.resp\n@@ -14,7 +14,39 @@ Content-Type: application/json\n             "is_current": false,\n             "is_folderish": true,\n             "is_in_path": false,\n-            "items": [],\n+            "items": [\n+                {\n+                    "@id": "http://localhost:55001/plone/folder/subfolder1/thirdlevelfolder",\n+                    "description": "",\n+                    "href": "http://localhost:55001/plone/folder/subfolder1/thirdlevelfolder",\n+                    "icon": "",\n+                    "is_current": false,\n+                    "is_folderish": true,\n+                    "is_in_path": false,\n+                    "items": [\n+                        {\n+                            "@id": "http://localhost:55001/plone/folder/subfolder1/thirdlevelfolder/fourthlevelfolder",\n+                            "description": "",\n+                            "href": "http://localhost:55001/plone/folder/subfolder1/thirdlevelfolder/fourthlevelfolder",\n+                            "icon": "",\n+                            "is_current": false,\n+                            "is_folderish": true,\n+                            "is_in_path": false,\n+                            "items": [],\n+                            "normalized_id": "fourthlevelfolder",\n+                            "review_state": "private",\n+                            "thumb": "",\n+                            "title": "Fourth Level Folder",\n+                            "type": "folder"\n+                        }\n+                    ],\n+                    "normalized_id": "thirdlevelfolder",\n+                    "review_state": "private",\n+                    "thumb": "",\n+                    "title": "Third Level Folder",\n+                    "type": "folder"\n+                }\n+            ],\n             "normalized_id": "subfolder1",\n             "review_state": "private",\n             "thumb": "",\ndiff --git a/src/plone/restapi/tests/test_services_contextnavigation.py b/src/plone/restapi/tests/test_services_contextnavigation.py\nindex 102c348f0..ea91f9a16 100644\n--- a/src/plone/restapi/tests/test_services_contextnavigation.py\n+++ b/src/plone/restapi/tests/test_services_contextnavigation.py\n@@ -201,8 +201,8 @@ def test_contextnavigation_with_no_params_gets_only_top_level_mixed_content(self\n \n         res = {\n             "@id": "%s/folder2/@contextnavigation" % base,\n-            "has_custom_name": False,\n             "available": True,\n+            "has_custom_name": False,\n             "items": [\n                 {\n                     "@id": "%s/folder2/doc21" % base,\n@@ -257,7 +257,38 @@ def test_contextnavigation_with_no_params_gets_only_top_level_mixed_content(self\n                     "is_current": False,\n                     "is_folderish": True,\n                     "is_in_path": False,\n-                    "items": [],\n+                    "items": [\n+                        {\n+                            "@id": "%s/folder2/folder21/doc211" % base,\n+                            "description": "",\n+                            "href": "%s/folder2/folder21/doc211" % base,\n+                            "icon": "",\n+                            "is_current": False,\n+                            "is_folderish": False,\n+                            "is_in_path": False,\n+                            "items": [],\n+                            "normalized_id": "doc211",\n+                            "review_state": "private",\n+                            "thumb": "",\n+                            "title": "doc211",\n+                            "type": "document",\n+                        },\n+                        {\n+                            "@id": "%s/folder2/folder21/doc212" % base,\n+                            "description": "",\n+                            "href": "%s/folder2/folder21/doc212" % base,\n+                            "icon": "",\n+                            "is_current": False,\n+                            "is_folderish": False,\n+                            "is_in_path": False,\n+                            "items": [],\n+                            "normalized_id": "doc212",\n+                            "review_state": "private",\n+                            "thumb": "",\n+                            "title": "doc212",\n+                            "type": "document",\n+                        },\n+                    ],\n                     "normalized_id": "folder21",\n                     "review_state": "private",\n                     "thumb": "",\n@@ -268,13 +299,8 @@ def test_contextnavigation_with_no_params_gets_only_top_level_mixed_content(self\n             "title": "Navigation",\n             "url": "%s/sitemap" % base,\n         }\n-        self.assertEqual(\n-            response.json(),\n-            res,\n-        )\n \n-        # self.assertTrue(tree)\n-        # self.assertEqual(tree["children"][-1]["currentItem"], True)\n+        self.assertEqual(res, response.json())\n \n     def testHeadingLinkRooted(self):\n         """\n@@ -516,11 +542,12 @@ def testNonStructuralFolderHidesChildren(self):\n             self.portal.folder1.ns_folder, opts(includeTop=True, topLevel=0)\n         )\n         tree = view.getNavTree()\n-        self.assertEqual(\n-            tree["items"][3]["items"][3]["href"],\n-            "%s/folder1/ns_folder" % base,\n-        )\n-        self.assertEqual(len(tree["items"][3]["items"][3]["items"]), 0)\n+        if tree["items"][3]["items"][0]["href"]:\n+            self.assertEqual(\n+                tree["items"][3]["items"][0]["href"],\n+                "%s/folder1/ns_folder" % base,\n+            )\n+            self.assertEqual(len(tree["items"][3]["items"][0]["items"]), 0)\n \n     def testTopLevel(self):\n         # Use default setting of Plone 6\n@@ -730,7 +757,7 @@ def testRootIsNotPortal(self):\n         )\n         tree = view.getNavTree()\n         self.assertTrue(tree)\n-        self.assertEqual(tree["items"][0]["href"], "%s/folder2/doc21" % base)\n+        self.assertEqual(tree["items"][0]["href"], "%s/folder2/file21/view" % base)\n \n     def testRootDoesNotExist(self):\n         view = self.renderer(\n'

