Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2021-12-02T11:26:26+01:00
Author: Jan Mevissen (jmevissen) <mevissen@interaktiv.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/a73bcbd96528b380f137383ce09c11c95e0f4e9b

ref #3241 Move prefs_error_log* from skins to browser views

Files changed:
A Products/CMFPlone/controlpanel/browser/prefs_error_log_form.pt
A Products/CMFPlone/controlpanel/browser/prefs_error_log_form.py
A Products/CMFPlone/controlpanel/browser/prefs_error_log_showEntry.pt
A Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_error_log.py
A news/3241.bugfix
M Products/CMFPlone/controlpanel/browser/configure.zcml

b'diff --git a/Products/CMFPlone/controlpanel/browser/configure.zcml b/Products/CMFPlone/controlpanel/browser/configure.zcml\nindex 48dc844325..f3aaffd702 100644\n--- a/Products/CMFPlone/controlpanel/browser/configure.zcml\n+++ b/Products/CMFPlone/controlpanel/browser/configure.zcml\n@@ -111,6 +111,35 @@\n       permission="cmf.ManagePortal"\n       />\n \n+  <!-- Prefs Error Log Form Control Panel -->\n+  <browser:page\n+      name="prefs_error_log_form"\n+      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      class=".prefs_error_log_form.PrefsErrorLogForm"\n+      permission="cmf.ManagePortal"\n+      />\n+\n+  <browser:page\n+      name="prefs_error_log_showEntry"\n+      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      class=".prefs_error_log_form.PrefsErrorLogShowEntry"\n+      permission="cmf.ManagePortal"\n+      />\n+\n+  <browser:page\n+      name="prefs_error_log_update"\n+      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      class=".prefs_error_log_form.PrefsErrorLogUpdate"\n+      permission="cmf.ManagePortal"\n+      />\n+\n+  <browser:page\n+      name="prefs_error_log_setProperties"\n+      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      class=".prefs_error_log_form.PrefsErrorLogSetProperties"\n+      permission="cmf.ManagePortal"\n+      />\n+\n   <!-- Site Control Panel -->\n   <browser:page\n       name="site-controlpanel"\ndiff --git a/Products/CMFPlone/controlpanel/browser/prefs_error_log_form.pt b/Products/CMFPlone/controlpanel/browser/prefs_error_log_form.pt\nnew file mode 100644\nindex 0000000000..471fb43195\n--- /dev/null\n+++ b/Products/CMFPlone/controlpanel/browser/prefs_error_log_form.pt\n@@ -0,0 +1,183 @@\n+<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"\n+      xmlns:tal="http://xml.zope.org/namespaces/tal"\n+      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+      xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+      lang="en"\n+      metal:use-macro="context/prefs_main_template/macros/master"\n+      i18n:domain="plone">\n+\n+<body>\n+\n+<metal:main fill-slot="prefs_configlet_main">\n+\n+    <h1 class="documentFirstHeading"\n+        i18n:translate="heading_error_log">Error log</h1>\n+\n+    <div class="documentDescription" i18n:translate="description_error_log_setup">\n+        This page lists the exceptions that have occurred in this site\n+        recently. You can configure how many exceptions should be kept\n+        and whether the exceptions should be copied to Zope\'s event log\n+        file(s).\n+    </div>\n+\n+    <div id="content-core">\n+\n+        <p>\n+            <a href="https://docs.plone.org/appendices/error-reference.html"\n+               i18n:translate="description_error_rerference_link">\n+                Refer to the plone.org error reference for more information about\n+                these exceptions.\n+            </a>\n+        </p>\n+\n+        <form action="prefs_error_log_update" method="get">\n+\n+            <fieldset tal:define="entries context/error_log/getLogEntries">\n+\n+                <legend i18n:translate="legend_logexception">Exception Log (most recent first)</legend>\n+\n+                <div class="field">\n+                    <label for="search_entry"\n+                           i18n:translate="label_search_entry">Search for an error log entry <span class="formHelp"> (such as "1257962690.640.49636048561")</span></label>\n+\n+                    <input type="text"\n+                           name="search_entry"\n+                           id="search_entry"\n+                           size="35" />\n+                </div>\n+\n+                <div class="field" tal:condition="not:entries" i18n:translate="legend_lognoexceptions">\n+                    No exceptions logged.\n+                </div>\n+\n+                <div class="formControls">\n+                    <input class="btn btn-primary"\n+                           type="submit"\n+                           name="form.button.search"\n+                           value="Search"\n+                           i18n:attributes="value label_search;" />\n+                    <input class="btn btn-secondary"\n+                           type="submit"\n+                           name="form.button.refresh"\n+                           value="Refresh"\n+                           i18n:attributes="value label_refresh;" />\n+                    <input class="btn btn-secondary"\n+                           type="submit"\n+                           name="form.button.clear"\n+                           value="Clear Displayed Entries"\n+                           i18n:attributes="value label_clear_displayed_entries;" />\n+                    <input class="btn btn-secondary"\n+                           type="submit"\n+                           name="form.button.showall"\n+                           value="Show all entries"\n+                           i18n:attributes="value label_show_all_entries;" />\n+                </div>\n+\n+                <table class="listing"\n+                       id="sortable"\n+                       summary="Exception Log (most recent first)"\n+                       i18n:attributes="summary summary_exception_log;"\n+                       tal:condition="entries">\n+                    <thead>\n+                        <tr>\n+                            <th i18n:translate="label_time">Time</th>\n+                            <th i18n:translate="label_user_name">User Name</th>\n+                            <th i18n:translate="label_exception">Exception</th>\n+                        </tr>\n+                    </thead>\n+\n+                    <tbody tal:define="member context/@@plone_portal_state/member;\n+                                       updatetime python:member.getProperty(\'error_log_update\', 0.0);\n+                                       updatetime python:updatetime and updatetime or 0.0;\n+                                       updatetime python:float(updatetime)">\n+\n+                        <tal:entry tal:repeat="entry entries">\n+                        <tr tal:define="oddrow repeat/entry/odd;"\n+                            tal:attributes="class python: oddrow and \'odd\' or \'even\'"\n+                            tal:condition="python: entry[\'time\'] > updatetime">\n+\n+                            <td\n+                                tal:define="toLocalizedTime nocall:context/@@plone/toLocalizedTime;"\n+                                tal:content="python:toLocalizedTime(entry[\'time\'], long_format=True)">13:04:41</td>\n+                            <td tal:content="string:${entry/username} (${entry/userid})">joe</td>\n+                            <td>\n+                                <a href="showEntry"\n+                                   tal:attributes="href string:prefs_error_log_showEntry?id=${entry/id}">\n+                                    <span tal:replace="entry/type">AttributeError</span>:\n+                                    <span tal:define="value entry/value"\n+                                          tal:content="python: len(value) &lt; 70 and value or value[:70] + \'...\'">\n+                                    Application object has no attribute "gak"\n+                                    </span>\n+                                </a>\n+                            </td>\n+                        </tr>\n+                        </tal:entry>\n+                    </tbody>\n+                </table>\n+\n+            </fieldset>\n+        </form>\n+\n+        <form action="prefs_error_log_setProperties"\n+              method="post"\n+              class="pat-formunloadalert">\n+\n+            <fieldset tal:define="props context/error_log/getProperties">\n+\n+                <legend i18n:translate="legend_logdetails">Log details</legend>\n+\n+                <div class="field">\n+                    <label for="keep_entries"\n+                           i18n:translate="label_number_exceptions">Number of exceptions to keep</label>\n+\n+                    <div></div>\n+\n+                    <input type="text"\n+                           name="keep_entries"\n+                           id="keep_entries"\n+                           size="40"\n+                           tal:attributes="value props/keep_entries" />\n+                </div>\n+\n+                <div class="field">\n+                    <input type="checkbox"\n+                           class="noborder"\n+                           id="cb_copy_to_zlog"\n+                           name="copy_to_zlog"\n+                           tal:attributes="checked props/copy_to_zlog;\n+                                           disabled not:context/error_log/checkEventLogPermission|nothing" />\n+\n+                    <label for="cb_copy_to_zlog" i18n:translate="label_copy_exceptions">\n+                        Copy exceptions to the event log\n+                    </label>\n+\n+                </div>\n+\n+                <div class="field">\n+                    <label for="ignored_exceptions"\n+                           i18n:translate="label_ignored_exception">Ignored exception types</label>\n+\n+                    <textarea name="ignored_exceptions:lines"\n+                              id="ignored_exceptions"\n+                              cols="40"\n+                              rows="3"\n+                              tal:content="python: \'\\n\'.join(props[\'ignored_exceptions\'])"></textarea>\n+                </div>\n+\n+                <div class="formControls">\n+                    <input class="btn btn-primary"\n+                           type="submit"\n+                           name="submit"\n+                           value="Save"\n+                           i18n:attributes="value label_save;" />\n+                </div>\n+\n+            </fieldset>\n+\n+        </form>\n+    </div>\n+\n+</metal:main>\n+\n+</body>\n+</html>\ndiff --git a/Products/CMFPlone/controlpanel/browser/prefs_error_log_form.py b/Products/CMFPlone/controlpanel/browser/prefs_error_log_form.py\nnew file mode 100644\nindex 0000000000..15b41174e9\n--- /dev/null\n+++ b/Products/CMFPlone/controlpanel/browser/prefs_error_log_form.py\n@@ -0,0 +1,63 @@\n+import plone.api as api\n+from DateTime import DateTime\n+from Products.CMFPlone import PloneMessageFactory as _\n+from Products.CMFPlone.utils import safe_nativestring\n+from Products.Five import BrowserView\n+from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n+\n+\n+class PrefsErrorLogForm(BrowserView):\n+\n+    template = ViewPageTemplateFile(\'prefs_error_log_form.pt\')\n+\n+    def __call__(self):\n+        return self.template(self)\n+\n+\n+class PrefsErrorLogShowEntry(BrowserView):\n+\n+    template = ViewPageTemplateFile(\'prefs_error_log_showEntry.pt\')\n+\n+    def __call__(self):\n+        return self.template(self)\n+\n+\n+class PrefsErrorLogUpdate(BrowserView):\n+\n+    def __call__(self):\n+        member = api.user.get_current()\n+\n+        if getattr(self.request, \'form.button.search\', None) is not None:\n+            search = self.request.form.get(\'search_entry\')\n+            if search == \'\':\n+                member.setProperties(error_log_update=0.0)\n+                self.context.plone_utils.addPortalMessage(_(\'Showing all entries\'))\n+                return self.request.RESPONSE.redirect(self.context.absolute_url() + \'/prefs_error_log_form\')\n+            return self.request.RESPONSE.redirect(self.context.absolute_url() + \'/prefs_error_log_showEntry?id=%s\' % search)\n+\n+        elif getattr(self.request, \'form.button.showall\', None) is not None:\n+            member.setProperties(error_log_update=0.0)\n+            self.context.plone_utils.addPortalMessage(_(\'Showing all entries\'))\n+            return self.request.RESPONSE.redirect(self.context.absolute_url() + \'/prefs_error_log_form\')\n+\n+        elif getattr(self.request, \'form.button.clear\', None) is not None:\n+            member.setProperties(error_log_update=DateTime().timeTime())\n+            self.context.plone_utils.addPortalMessage(_(\'Entries cleared\'))\n+            return self.request.RESPONSE.redirect(self.context.absolute_url() + \'/prefs_error_log_form\')\n+\n+        else:\n+            return self.request.RESPONSE.redirect(self.context.absolute_url() + \'/prefs_error_log_form\')\n+\n+\n+class PrefsErrorLogSetProperties(BrowserView):\n+\n+    def __call__(self):\n+        keep_entries = self.request.form.get(\'keep_entries\')\n+        ignored_exceptions = self.request.form.get(\'ignored_exceptions\')\n+        copy_to_zlog = self.request.form.get(\'copy_to_zlog\', 0)\n+\n+        ignored_exceptions = map(safe_nativestring, ignored_exceptions)\n+        self.context.error_log.setProperties(keep_entries, copy_to_zlog, ignored_exceptions)\n+        self.context.plone_utils.addPortalMessage(_(\'Changes made.\'))\n+\n+        return self.request.RESPONSE.redirect(self.context.absolute_url() + \'/prefs_error_log_form\')\ndiff --git a/Products/CMFPlone/controlpanel/browser/prefs_error_log_showEntry.pt b/Products/CMFPlone/controlpanel/browser/prefs_error_log_showEntry.pt\nnew file mode 100644\nindex 0000000000..dbaa22cfff\n--- /dev/null\n+++ b/Products/CMFPlone/controlpanel/browser/prefs_error_log_showEntry.pt\n@@ -0,0 +1,91 @@\n+<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"\n+      xmlns:tal="http://xml.zope.org/namespaces/tal"\n+      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+      xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+      lang="en"\n+      metal:use-macro="context/prefs_main_template/macros/master"\n+      i18n:domain="plone">\n+\n+<body>\n+\n+<metal:main fill-slot="prefs_configlet_main"\n+     tal:define="member context/@@plone_portal_state/member;\n+                 userid python:request.get(\'userid\', member.getId());\n+                 errors python:request.get(\'errors\', {});\n+                 portal_url context/portal_url;">\n+\n+    <h1 class="documentFirstHeading"\n+        i18n:translate="heading_exception_details">Exception Details</h1>\n+\n+    <div id="content-core">\n+        <a href=""\n+           class="link-parent"\n+           tal:attributes="href string:$portal_url/prefs_error_log_form"\n+           i18n:translate="label_back_to_errorlog">\n+        Back to Error Log\n+        </a>\n+\n+        <div tal:define="entry python:context.error_log.getLogEntryById(request.get(\'id\'))">\n+\n+            <div class="portalMessage error"\n+                 role="alert"\n+                 tal:condition="not:entry">\n+                <strong i18n:translate="">\n+                    Error\n+                </strong>\n+                <span tal:omit-tag=""\n+                    i18n:translate="text_errlog_notfound">\n+                        The specified log entry was not found. It may have expired.\n+                        If you are using a load-balanced ZEO (cluster) setup, try\n+                        reloading until you get the right server in the cluster.\n+                </span>\n+            </div>\n+\n+            <div tal:condition="entry">\n+\n+                <dl>\n+                    <dt i18n:translate="label_time">Time</dt>\n+                    <dd\n+                        tal:define="toLocalizedTime nocall:context/@@plone/toLocalizedTime;"\n+                        tal:content="python:toLocalizedTime(entry[\'time\'], long_format=True)"></dd>\n+\n+                    <dt align="left" valign="top"\n+                        i18n:translate="label_user_name">User Name</dt>\n+                    <dd tal:content="string:${entry/username} (${entry/userid})">joe (joe)</dd>\n+\n+                    <dt align="left" valign="top"\n+                        i18n:translate="label_request_url">Request URL</dt>\n+                    <dd tal:content="entry/url">http://example.com</dd>\n+\n+                    <dt align="left" valign="top"\n+                        i18n:translate="label_exception_type">Exception Type</dt>\n+                    <dd tal:content="entry/type">AttributeError</dd>\n+\n+                    <dt align="left" valign="top"\n+                        i18n:translate="label_exception_value">Exception Value</dt>\n+                    <dd tal:content="entry/value">gak</dd>\n+                </dl>\n+\n+                <div tal:condition="entry/tb_html" tal:content="structure entry/tb_html">\n+                Traceback (HTML)\n+                </div>\n+                <pre tal:condition="not:entry/tb_html" tal:content="entry/tb_text">\n+                    Traceback (text)\n+                </pre>\n+\n+                <p tal:condition="entry/tb_text"><a href="" tal:attributes="href\n+                    string:error_log/getLogEntryAsText?id=${entry/id}"\n+                    i18n:translate="label_traceback_as_text">Display traceback as text</a></p>\n+\n+                <div tal:condition="entry/req_html">\n+                    <h3 i18n:translate="heading_request">REQUEST</h3>\n+                    <div tal:replace="structure entry/req_html"></div>\n+                </div>\n+            </div>\n+\n+        </div>\n+    </div>\n+\n+</metal:main>\n+</body>\n+</html>\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_error_log.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_error_log.py\nnew file mode 100644\nindex 0000000000..848a9e721d\n--- /dev/null\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_error_log.py\n@@ -0,0 +1,64 @@\n+import unittest\n+\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n+from plone.app.testing import SITE_OWNER_NAME\n+from plone.app.testing import SITE_OWNER_PASSWORD\n+from plone.testing.zope import Browser\n+from zope.component import getMultiAdapter\n+\n+\n+class ErrorLogControlPanelFunctionalTest(unittest.TestCase):\n+    """Test for Controlpanel Error Log\n+    """\n+\n+    layer = PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n+    error_log_properties = None\n+\n+    def setUp(self):\n+        self.app = self.layer[\'app\']\n+        self.request = self.layer[\'request\']\n+        self.portal = self.layer[\'portal\']\n+        self.portal_url = self.portal.absolute_url()\n+\n+        # keep initial error_log_properties to reset them\n+        self.error_log_properties = self.portal.error_log.getProperties()\n+\n+        self.browser = Browser(self.app)\n+        self.browser.handleErrors = False\n+        self.browser.addHeader(\n+            \'Authorization\',\n+            f\'Basic {SITE_OWNER_NAME}:{SITE_OWNER_PASSWORD}\'\n+        )\n+\n+    def tearDown(self):\n+        # reset error log properties\n+        keep_entries = self.error_log_properties[\'keep_entries\']\n+        copy_to_zlog = self.error_log_properties[\'copy_to_zlog\']\n+        ignored_exceptions = self.error_log_properties[\'ignored_exceptions\']\n+        self.portal.error_log.setProperties(keep_entries, copy_to_zlog, ignored_exceptions)\n+\n+    def test_error_log_control_panel_link(self):\n+        self.browser.open("%s/@@overview-controlpanel" % self.portal_url)\n+        self.browser.getLink(\'Errors\').click()\n+\n+        self.assertEqual(self.browser.url, "%s/prefs_error_log_form" % self.portal_url)\n+        self.assertIn(\'<h1 class="documentFirstHeading">Error log</h1>\', self.browser.contents)\n+\n+    def test_error_log_set_properties(self):\n+        self.assertEqual(self.error_log_properties[\'keep_entries\'], 20)\n+        self.assertEqual(self.error_log_properties[\'copy_to_zlog\'], True)\n+        self.assertEqual(self.error_log_properties[\'ignored_exceptions\'], (\'Unauthorized\', \'NotFound\', \'Redirect\'))\n+\n+        self.request.form = {\n+            \'keep_entries\': 40,\n+            \'ignored_exceptions\': [\'NotFound\', \'Redirect\']\n+        }\n+\n+        set_properties_view = getMultiAdapter((self.portal, self.request),\n+                                name=\'prefs_error_log_setProperties\')\n+        set_properties_view()\n+\n+        error_log_properties = self.portal.error_log.getProperties()\n+        self.assertEqual(error_log_properties[\'keep_entries\'], 40)\n+        self.assertEqual(error_log_properties[\'copy_to_zlog\'], False)\n+        self.assertEqual(error_log_properties[\'ignored_exceptions\'], (\'NotFound\', \'Redirect\'))\ndiff --git a/news/3241.bugfix b/news/3241.bugfix\nnew file mode 100644\nindex 0000000000..3a444a19dc\n--- /dev/null\n+++ b/news/3241.bugfix\n@@ -0,0 +1,2 @@\n+Move prefs_error_log* from skins to browser views\n+[jmevissen]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2021-12-02T11:35:58+01:00
Author: Jan Mevissen (jmevissen) <mevissen@interaktiv.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/4186de2e4708d77f8d27df2799a56a52df5fb4c3

ref #3241 Move prefs_error_log* from skins to browser views

Files changed:
D Products/CMFPlone/skins/plone_prefs/prefs_error_log_form.pt
D Products/CMFPlone/skins/plone_prefs/prefs_error_log_form.pt.metadata
D Products/CMFPlone/skins/plone_prefs/prefs_error_log_setProperties.py
D Products/CMFPlone/skins/plone_prefs/prefs_error_log_showEntry.pt
D Products/CMFPlone/skins/plone_prefs/prefs_error_log_showEntry.pt.metadata
D Products/CMFPlone/skins/plone_prefs/prefs_error_log_update.py

b'diff --git a/Products/CMFPlone/skins/plone_prefs/prefs_error_log_form.pt b/Products/CMFPlone/skins/plone_prefs/prefs_error_log_form.pt\ndeleted file mode 100644\nindex f52ff51c75..0000000000\n--- a/Products/CMFPlone/skins/plone_prefs/prefs_error_log_form.pt\n+++ /dev/null\n@@ -1,183 +0,0 @@\n-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"\n-      xmlns:tal="http://xml.zope.org/namespaces/tal"\n-      xmlns:metal="http://xml.zope.org/namespaces/metal"\n-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n-      lang="en"\n-      metal:use-macro="context/prefs_main_template/macros/master"\n-      i18n:domain="plone">\n-\n-<body>\n-\n-<metal:main fill-slot="prefs_configlet_main">\n-\n-    <h1 class="documentFirstHeading"\n-        i18n:translate="heading_error_log">Error log</h1>\n-\n-    <div class="documentDescription" i18n:translate="description_error_log_setup">\n-        This page lists the exceptions that have occurred in this site\n-        recently. You can configure how many exceptions should be kept\n-        and whether the exceptions should be copied to Zope\'s event log\n-        file(s).\n-    </div>\n-\n-    <div id="content-core">\n-\n-        <p>\n-            <a href="https://docs.plone.org/appendices/error-reference.html"\n-               i18n:translate="description_error_rerference_link">\n-                Refer to the plone.org error reference for more information about\n-                these exceptions.\n-            </a>\n-        </p>\n-\n-        <form action="prefs_error_log_update" method="get">\n-\n-            <fieldset tal:define="entries context/error_log/getLogEntries">\n-\n-                <legend i18n:translate="legend_logexception">Exception Log (most recent first)</legend>\n-\n-                <div class="field">\n-                    <label for="search_entry"\n-                           i18n:translate="label_search_entry">Search for an error log entry <span class="formHelp"> (such as "1257962690.640.49636048561")</span></label>\n-\n-                    <input type="text"\n-                           name="search_entry"\n-                           id="search_entry"\n-                           size="35" />\n-                </div>\n-\n-                <div class="field" tal:condition="not:entries" i18n:translate="legend_lognoexceptions">\n-                    No exceptions logged.\n-                </div>\n-\n-                <div class="formControls">\n-                    <input class="btn btn-primary"\n-                           type="submit"\n-                           name="form.button.search"\n-                           value="Search"\n-                           i18n:attributes="value label_search;" />\n-                    <input class="btn btn-secondary"\n-                           type="submit"\n-                           name="form.button.refresh"\n-                           value="Refresh"\n-                           i18n:attributes="value label_refresh;" />\n-                    <input class="btn btn-secondary"\n-                           type="submit"\n-                           name="form.button.clear"\n-                           value="Clear Displayed Entries"\n-                           i18n:attributes="value label_clear_displayed_entries;" />\n-                    <input class="btn btn-secondary"\n-                           type="submit"\n-                           name="form.button.showall"\n-                           value="Show all entries"\n-                           i18n:attributes="value label_show_all_entries;" />\n-                </div>\n-\n-                <table class="listing"\n-                       id="sortable"\n-                       summary="Exception Log (most recent first)"\n-                       i18n:attributes="summary summary_exception_log;"\n-                       tal:condition="entries">\n-                    <thead>\n-                        <tr>\n-                            <th i18n:translate="label_time">Time</th>\n-                            <th i18n:translate="label_user_name">User Name</th>\n-                            <th i18n:translate="label_exception">Exception</th>\n-                        </tr>\n-                    </thead>\n-\n-                    <tbody tal:define="member context/@@plone_portal_state/member;\n-                                       updatetime python:member.getProperty(\'error_log_update\', 0.0);\n-                                       updatetime python:updatetime and updatetime or 0.0;\n-                                       updatetime python:float(updatetime)">\n-\n-                        <tal:entry tal:repeat="entry entries">\n-                        <tr tal:define="oddrow repeat/entry/odd;"\n-                            tal:attributes="class python:test(oddrow, \'even\', \'odd\')"\n-                            tal:condition="python: test(entry[\'time\'] > updatetime,1,0)">\n-\n-                            <td\n-                                tal:define="toLocalizedTime nocall:context/@@plone/toLocalizedTime;"\n-                                tal:content="python:toLocalizedTime(DateTime(entry[\'time\']), long_format=True)">13:04:41</td>\n-                            <td tal:content="string:${entry/username} (${entry/userid})">joe</td>\n-                            <td>\n-                                <a href="showEntry"\n-                                   tal:attributes="href string:prefs_error_log_showEntry?id=${entry/id}">\n-                                    <span tal:replace="entry/type">AttributeError</span>:\n-                                    <span tal:define="value entry/value"\n-                                          tal:content="python: len(value) &lt; 70 and value or value[:70] + \'...\'">\n-                                    Application object has no attribute "gak"\n-                                    </span>\n-                                </a>\n-                            </td>\n-                        </tr>\n-                        </tal:entry>\n-                    </tbody>\n-                </table>\n-\n-            </fieldset>\n-        </form>\n-\n-        <form action="prefs_error_log_setProperties"\n-              method="post"\n-              class="pat-formunloadalert">\n-\n-            <fieldset tal:define="props context/error_log/getProperties">\n-\n-                <legend i18n:translate="legend_logdetails">Log details</legend>\n-\n-                <div class="field">\n-                    <label for="keep_entries"\n-                           i18n:translate="label_number_exceptions">Number of exceptions to keep</label>\n-\n-                    <div></div>\n-\n-                    <input type="text"\n-                           name="keep_entries"\n-                           id="keep_entries"\n-                           size="40"\n-                           tal:attributes="value props/keep_entries" />\n-                </div>\n-\n-                <div class="field">\n-                    <input type="checkbox"\n-                           class="noborder"\n-                           id="cb_copy_to_zlog"\n-                           name="copy_to_zlog"\n-                           tal:attributes="checked props/copy_to_zlog;\n-                                           disabled not:context/error_log/checkEventLogPermission|nothing" />\n-\n-                    <label for="cb_copy_to_zlog" i18n:translate="label_copy_exceptions">\n-                        Copy exceptions to the event log\n-                    </label>\n-\n-                </div>\n-\n-                <div class="field">\n-                    <label for="ignored_exceptions"\n-                           i18n:translate="label_ignored_exception">Ignored exception types</label>\n-\n-                    <textarea name="ignored_exceptions:lines"\n-                              id="ignored_exceptions"\n-                              cols="40"\n-                              rows="3"\n-                              tal:content="python: \'\\n\'.join(props[\'ignored_exceptions\'])"></textarea>\n-                </div>\n-\n-                <div class="formControls">\n-                    <input class="btn btn-primary"\n-                           type="submit"\n-                           name="submit"\n-                           value="Save"\n-                           i18n:attributes="value label_save;" />\n-                </div>\n-\n-            </fieldset>\n-\n-        </form>\n-    </div>\n-\n-</metal:main>\n-\n-</body>\n-</html>\ndiff --git a/Products/CMFPlone/skins/plone_prefs/prefs_error_log_form.pt.metadata b/Products/CMFPlone/skins/plone_prefs/prefs_error_log_form.pt.metadata\ndeleted file mode 100644\nindex d9c2bf48c9..0000000000\n--- a/Products/CMFPlone/skins/plone_prefs/prefs_error_log_form.pt.metadata\n+++ /dev/null\n@@ -1,5 +0,0 @@\n-[default]\n-title=Error Log\n-\n-[security]\n-View = 0:Manager\ndiff --git a/Products/CMFPlone/skins/plone_prefs/prefs_error_log_setProperties.py b/Products/CMFPlone/skins/plone_prefs/prefs_error_log_setProperties.py\ndeleted file mode 100644\nindex 254eba829e..0000000000\n--- a/Products/CMFPlone/skins/plone_prefs/prefs_error_log_setProperties.py\n+++ /dev/null\n@@ -1,20 +0,0 @@\n-## Script (Python) "prefs_error_log_setProperties"\n-##bind container=container\n-##bind context=context\n-##bind namespace=\n-##bind script=script\n-##bind subpath=traverse_subpath\n-##parameters=keep_entries,ignored_exceptions,copy_to_zlog=0\n-##title=\n-\n-from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.utils import safe_nativestring\n-\n-request = context.REQUEST\n-\n-ignored_exceptions = map(safe_nativestring, ignored_exceptions)\n-context.error_log.setProperties(keep_entries, copy_to_zlog, ignored_exceptions)\n-context.plone_utils.addPortalMessage(_(\'Changes made.\'))\n-\n-return request.RESPONSE.redirect(\n-            context.absolute_url() + \'/prefs_error_log_form\')\ndiff --git a/Products/CMFPlone/skins/plone_prefs/prefs_error_log_showEntry.pt b/Products/CMFPlone/skins/plone_prefs/prefs_error_log_showEntry.pt\ndeleted file mode 100644\nindex ca10e1ed15..0000000000\n--- a/Products/CMFPlone/skins/plone_prefs/prefs_error_log_showEntry.pt\n+++ /dev/null\n@@ -1,91 +0,0 @@\n-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"\n-      xmlns:tal="http://xml.zope.org/namespaces/tal"\n-      xmlns:metal="http://xml.zope.org/namespaces/metal"\n-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n-      lang="en"\n-      metal:use-macro="context/prefs_main_template/macros/master"\n-      i18n:domain="plone">\n-\n-<body>\n-\n-<metal:main fill-slot="prefs_configlet_main"\n-     tal:define="member context/@@plone_portal_state/member;\n-                 userid python:request.get(\'userid\', member.getId());\n-                 errors python:request.get(\'errors\', {});\n-                 portal_url context/portal_url;">\n-\n-    <h1 class="documentFirstHeading"\n-        i18n:translate="heading_exception_details">Exception Details</h1>\n-\n-    <div id="content-core">\n-        <a href=""\n-           class="link-parent"\n-           tal:attributes="href string:$portal_url/prefs_error_log_form"\n-           i18n:translate="label_back_to_errorlog">\n-        Back to Error Log\n-        </a>\n-\n-        <div tal:define="entry python:context.error_log.getLogEntryById(request.get(\'id\'))">\n-\n-            <div class="portalMessage error"\n-                 role="alert"\n-                 tal:condition="not:entry">\n-                <strong i18n:translate="">\n-                    Error\n-                </strong>\n-                <span tal:omit-tag=""\n-                    i18n:translate="text_errlog_notfound">\n-                        The specified log entry was not found. It may have expired.\n-                        If you are using a load-balanced ZEO (cluster) setup, try\n-                        reloading until you get the right server in the cluster.\n-                </span>\n-            </div>\n-\n-            <div tal:condition="entry">\n-\n-                <dl>\n-                    <dt i18n:translate="label_time">Time</dt>\n-                    <dd\n-                        tal:define="toLocalizedTime nocall:context/@@plone/toLocalizedTime;"\n-                        tal:content="python:toLocalizedTime(DateTime(entry[\'time\']), long_format=True)"></dd>\n-\n-                    <dt align="left" valign="top"\n-                        i18n:translate="label_user_name">User Name</dt>\n-                    <dd tal:content="string:${entry/username} (${entry/userid})">joe (joe)</dd>\n-\n-                    <dt align="left" valign="top"\n-                        i18n:translate="label_request_url">Request URL</dt>\n-                    <dd tal:content="entry/url">http://example.com</dd>\n-\n-                    <dt align="left" valign="top"\n-                        i18n:translate="label_exception_type">Exception Type</dt>\n-                    <dd tal:content="entry/type">AttributeError</dd>\n-\n-                    <dt align="left" valign="top"\n-                        i18n:translate="label_exception_value">Exception Value</dt>\n-                    <dd tal:content="entry/value">gak</dd>\n-                </dl>\n-\n-                <div tal:condition="entry/tb_html" tal:content="structure entry/tb_html">\n-                Traceback (HTML)\n-                </div>\n-                <pre tal:condition="not:entry/tb_html" tal:content="entry/tb_text">\n-                    Traceback (text)\n-                </pre>\n-\n-                <p tal:condition="entry/tb_text"><a href="" tal:attributes="href\n-                    string:error_log/getLogEntryAsText?id=${entry/id}"\n-                    i18n:translate="label_traceback_as_text">Display traceback as text</a></p>\n-\n-                <div tal:condition="entry/req_html">\n-                    <h3 i18n:translate="heading_request">REQUEST</h3>\n-                    <div tal:replace="structure entry/req_html"></div>\n-                </div>\n-            </div>\n-\n-        </div>\n-    </div>\n-\n-</metal:main>\n-</body>\n-</html>\ndiff --git a/Products/CMFPlone/skins/plone_prefs/prefs_error_log_showEntry.pt.metadata b/Products/CMFPlone/skins/plone_prefs/prefs_error_log_showEntry.pt.metadata\ndeleted file mode 100644\nindex 3028b2bbc4..0000000000\n--- a/Products/CMFPlone/skins/plone_prefs/prefs_error_log_showEntry.pt.metadata\n+++ /dev/null\n@@ -1,5 +0,0 @@\n-[default]\n-title=Error Log Entry\n-\n-[security]\n-View=0:Authenticated\ndiff --git a/Products/CMFPlone/skins/plone_prefs/prefs_error_log_update.py b/Products/CMFPlone/skins/plone_prefs/prefs_error_log_update.py\ndeleted file mode 100644\nindex b636dda8f1..0000000000\n--- a/Products/CMFPlone/skins/plone_prefs/prefs_error_log_update.py\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-## Script (Python) "prefs_error_log_update"\n-## Giorgio, Lorty - Plone Castle Sprint\n-\n-from Products.CMFPlone import PloneMessageFactory as _\n-\n-request = context.REQUEST\n-membership_tool = context.portal_membership\n-member = membership_tool.getAuthenticatedMember()\n-\n-if getattr(request, \'form.button.search\', None) is not None:\n-    search = request.form.get(\'search_entry\')\n-    if search == \'\':\n-        member.setProperties(error_log_update=0.0)\n-        context.plone_utils.addPortalMessage(_(\'Showing all entries\'))\n-        return request.RESPONSE.redirect(context.absolute_url() + \'/prefs_error_log_form\')\n-    return request.RESPONSE.redirect(context.absolute_url() + \'/prefs_error_log_showEntry?id=%s\' % search)\n-elif getattr(request, \'form.button.showall\', None) is not None:\n-    member.setProperties(error_log_update=0.0)\n-    context.plone_utils.addPortalMessage(_(\'Showing all entries\'))\n-    return request.RESPONSE.redirect(context.absolute_url() + \'/prefs_error_log_form\')\n-elif getattr(request, \'form.button.clear\', None) is not None:\n-    member.setProperties(error_log_update=DateTime().timeTime())\n-    context.plone_utils.addPortalMessage(_(\'Entries cleared\'))\n-    return request.RESPONSE.redirect(context.absolute_url() + \'/prefs_error_log_form\')\n-else:\n-    return request.RESPONSE.redirect(context.absolute_url() + \'/prefs_error_log_form\')\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2021-12-03T18:43:08+01:00
Author: Maurits van Rees (mauritsvanrees) <m.van.rees@zestsoftware.nl>
Commit: https://github.com/plone/Products.CMFPlone/commit/105cf307f07e72d2b60c4b532e603514a8b0f88a

Merge branch 'master' into jmevissen-3241_move_prefs_error_log_from_skins_to_browser_view

Files changed:
A news/3339.breaking
M Products/CMFPlone/configure.zcml
M Products/CMFPlone/meta.zcml
M Products/CMFPlone/overrides.zcml
M setup.py

b'diff --git a/Products/CMFPlone/configure.zcml b/Products/CMFPlone/configure.zcml\nindex 4594586eb8..9d9f68b282 100644\n--- a/Products/CMFPlone/configure.zcml\n+++ b/Products/CMFPlone/configure.zcml\n@@ -98,10 +98,10 @@\n       trusted="y"\n       />\n \n-  <!-- include plone plugins with z3c.autoinclude -->\n-  <includePlugins\n+  <!-- include plone plugins with plone.autoinclude -->\n+  <autoIncludePlugins\n       zcml:condition="not-have disable-autoinclude"\n-      package="plone"\n+      target="plone"\n       file="configure.zcml"\n       />\n \ndiff --git a/Products/CMFPlone/meta.zcml b/Products/CMFPlone/meta.zcml\nindex dbc42f3571..23422680dc 100644\n--- a/Products/CMFPlone/meta.zcml\n+++ b/Products/CMFPlone/meta.zcml\n@@ -25,15 +25,14 @@\n \n     <include package="plone.app.portlets" file="meta.zcml" />\n \n-    <!-- z3c.autoinclude\'s `includePlugins` directive finds\n+    <!-- plone.autoinclude\'s `autoIncludePlugins` directive finds\n          and executes ZCML files from any installed packages\n          that provide an entry point to declare themselves a\n          plone plugin -->\n-    <include package="z3c.autoinclude" file="meta.zcml" />\n-\n-    <includePlugins\n+    <include package="plone.autoinclude" file="meta.zcml" />\n+    <autoIncludePlugins\n         zcml:condition="not-have disable-autoinclude"\n-        package="plone"\n+        target="plone"\n         file="meta.zcml"\n         />\n \ndiff --git a/Products/CMFPlone/overrides.zcml b/Products/CMFPlone/overrides.zcml\nindex b607ef576a..27f8494efe 100644\n--- a/Products/CMFPlone/overrides.zcml\n+++ b/Products/CMFPlone/overrides.zcml\n@@ -12,10 +12,10 @@\n         component="Products.CMFPlone.unicodeconflictresolver.UTF8EncodingConflictResolver"\n         />\n \n-    <!-- include plone plugins with z3c.autoinclude -->\n-    <includePluginsOverrides\n+    <!-- include plone plugins with plone.autoinclude -->\n+    <autoIncludePluginsOverrides\n         zcml:condition="not-have disable-autoinclude"\n-        package="plone"\n+        target="plone"\n         file="overrides.zcml"\n         />\n \ndiff --git a/news/3339.breaking b/news/3339.breaking\nnew file mode 100644\nindex 0000000000..06a8b4e554\n--- /dev/null\n+++ b/news/3339.breaking\n@@ -0,0 +1,3 @@\n+PLIP 3339: Replace ``z3c.autoinclude`` with ``plone.autoinclude``.\n+Note: ``includeDependencies`` is no longer supported.\n+[maurits, tschorr]\ndiff --git a/setup.py b/setup.py\nindex 6f4f544436..93c30658c2 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -108,7 +108,7 @@\n         \'pyScss\',\n         \'setuptools>=36.2\',\n         \'transaction\',\n-        \'z3c.autoinclude\',\n+        \'plone.autoinclude\',\n         \'ZODB3\',\n         \'Zope[wsgi] >= 4.0\',\n         \'zope.app.locales >= 3.6.0\',\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2021-12-03T23:07:01+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/7b29047db244c6f964eae40be263a34affcb0b02

Merge pull request #3372 from plone/jmevissen-3241_move_prefs_error_log_from_skins_to_browser_view

Jmevissen 3241 move prefs error log from skins to browser view

Files changed:
A Products/CMFPlone/controlpanel/browser/prefs_error_log_form.pt
A Products/CMFPlone/controlpanel/browser/prefs_error_log_form.py
A Products/CMFPlone/controlpanel/browser/prefs_error_log_showEntry.pt
A Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_error_log.py
A news/3241.bugfix
M Products/CMFPlone/controlpanel/browser/configure.zcml
D Products/CMFPlone/skins/plone_prefs/prefs_error_log_form.pt
D Products/CMFPlone/skins/plone_prefs/prefs_error_log_form.pt.metadata
D Products/CMFPlone/skins/plone_prefs/prefs_error_log_setProperties.py
D Products/CMFPlone/skins/plone_prefs/prefs_error_log_showEntry.pt
D Products/CMFPlone/skins/plone_prefs/prefs_error_log_showEntry.pt.metadata
D Products/CMFPlone/skins/plone_prefs/prefs_error_log_update.py

b'diff --git a/Products/CMFPlone/controlpanel/browser/configure.zcml b/Products/CMFPlone/controlpanel/browser/configure.zcml\nindex 48dc844325..f3aaffd702 100644\n--- a/Products/CMFPlone/controlpanel/browser/configure.zcml\n+++ b/Products/CMFPlone/controlpanel/browser/configure.zcml\n@@ -111,6 +111,35 @@\n       permission="cmf.ManagePortal"\n       />\n \n+  <!-- Prefs Error Log Form Control Panel -->\n+  <browser:page\n+      name="prefs_error_log_form"\n+      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      class=".prefs_error_log_form.PrefsErrorLogForm"\n+      permission="cmf.ManagePortal"\n+      />\n+\n+  <browser:page\n+      name="prefs_error_log_showEntry"\n+      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      class=".prefs_error_log_form.PrefsErrorLogShowEntry"\n+      permission="cmf.ManagePortal"\n+      />\n+\n+  <browser:page\n+      name="prefs_error_log_update"\n+      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      class=".prefs_error_log_form.PrefsErrorLogUpdate"\n+      permission="cmf.ManagePortal"\n+      />\n+\n+  <browser:page\n+      name="prefs_error_log_setProperties"\n+      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      class=".prefs_error_log_form.PrefsErrorLogSetProperties"\n+      permission="cmf.ManagePortal"\n+      />\n+\n   <!-- Site Control Panel -->\n   <browser:page\n       name="site-controlpanel"\ndiff --git a/Products/CMFPlone/skins/plone_prefs/prefs_error_log_form.pt b/Products/CMFPlone/controlpanel/browser/prefs_error_log_form.pt\nsimilarity index 96%\nrename from Products/CMFPlone/skins/plone_prefs/prefs_error_log_form.pt\nrename to Products/CMFPlone/controlpanel/browser/prefs_error_log_form.pt\nindex f52ff51c75..471fb43195 100644\n--- a/Products/CMFPlone/skins/plone_prefs/prefs_error_log_form.pt\n+++ b/Products/CMFPlone/controlpanel/browser/prefs_error_log_form.pt\n@@ -93,12 +93,12 @@\n \n                         <tal:entry tal:repeat="entry entries">\n                         <tr tal:define="oddrow repeat/entry/odd;"\n-                            tal:attributes="class python:test(oddrow, \'even\', \'odd\')"\n-                            tal:condition="python: test(entry[\'time\'] > updatetime,1,0)">\n+                            tal:attributes="class python: oddrow and \'odd\' or \'even\'"\n+                            tal:condition="python: entry[\'time\'] > updatetime">\n \n                             <td\n                                 tal:define="toLocalizedTime nocall:context/@@plone/toLocalizedTime;"\n-                                tal:content="python:toLocalizedTime(DateTime(entry[\'time\']), long_format=True)">13:04:41</td>\n+                                tal:content="python:toLocalizedTime(entry[\'time\'], long_format=True)">13:04:41</td>\n                             <td tal:content="string:${entry/username} (${entry/userid})">joe</td>\n                             <td>\n                                 <a href="showEntry"\ndiff --git a/Products/CMFPlone/controlpanel/browser/prefs_error_log_form.py b/Products/CMFPlone/controlpanel/browser/prefs_error_log_form.py\nnew file mode 100644\nindex 0000000000..15b41174e9\n--- /dev/null\n+++ b/Products/CMFPlone/controlpanel/browser/prefs_error_log_form.py\n@@ -0,0 +1,63 @@\n+import plone.api as api\n+from DateTime import DateTime\n+from Products.CMFPlone import PloneMessageFactory as _\n+from Products.CMFPlone.utils import safe_nativestring\n+from Products.Five import BrowserView\n+from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n+\n+\n+class PrefsErrorLogForm(BrowserView):\n+\n+    template = ViewPageTemplateFile(\'prefs_error_log_form.pt\')\n+\n+    def __call__(self):\n+        return self.template(self)\n+\n+\n+class PrefsErrorLogShowEntry(BrowserView):\n+\n+    template = ViewPageTemplateFile(\'prefs_error_log_showEntry.pt\')\n+\n+    def __call__(self):\n+        return self.template(self)\n+\n+\n+class PrefsErrorLogUpdate(BrowserView):\n+\n+    def __call__(self):\n+        member = api.user.get_current()\n+\n+        if getattr(self.request, \'form.button.search\', None) is not None:\n+            search = self.request.form.get(\'search_entry\')\n+            if search == \'\':\n+                member.setProperties(error_log_update=0.0)\n+                self.context.plone_utils.addPortalMessage(_(\'Showing all entries\'))\n+                return self.request.RESPONSE.redirect(self.context.absolute_url() + \'/prefs_error_log_form\')\n+            return self.request.RESPONSE.redirect(self.context.absolute_url() + \'/prefs_error_log_showEntry?id=%s\' % search)\n+\n+        elif getattr(self.request, \'form.button.showall\', None) is not None:\n+            member.setProperties(error_log_update=0.0)\n+            self.context.plone_utils.addPortalMessage(_(\'Showing all entries\'))\n+            return self.request.RESPONSE.redirect(self.context.absolute_url() + \'/prefs_error_log_form\')\n+\n+        elif getattr(self.request, \'form.button.clear\', None) is not None:\n+            member.setProperties(error_log_update=DateTime().timeTime())\n+            self.context.plone_utils.addPortalMessage(_(\'Entries cleared\'))\n+            return self.request.RESPONSE.redirect(self.context.absolute_url() + \'/prefs_error_log_form\')\n+\n+        else:\n+            return self.request.RESPONSE.redirect(self.context.absolute_url() + \'/prefs_error_log_form\')\n+\n+\n+class PrefsErrorLogSetProperties(BrowserView):\n+\n+    def __call__(self):\n+        keep_entries = self.request.form.get(\'keep_entries\')\n+        ignored_exceptions = self.request.form.get(\'ignored_exceptions\')\n+        copy_to_zlog = self.request.form.get(\'copy_to_zlog\', 0)\n+\n+        ignored_exceptions = map(safe_nativestring, ignored_exceptions)\n+        self.context.error_log.setProperties(keep_entries, copy_to_zlog, ignored_exceptions)\n+        self.context.plone_utils.addPortalMessage(_(\'Changes made.\'))\n+\n+        return self.request.RESPONSE.redirect(self.context.absolute_url() + \'/prefs_error_log_form\')\ndiff --git a/Products/CMFPlone/skins/plone_prefs/prefs_error_log_showEntry.pt b/Products/CMFPlone/controlpanel/browser/prefs_error_log_showEntry.pt\nsimilarity index 97%\nrename from Products/CMFPlone/skins/plone_prefs/prefs_error_log_showEntry.pt\nrename to Products/CMFPlone/controlpanel/browser/prefs_error_log_showEntry.pt\nindex ca10e1ed15..dbaa22cfff 100644\n--- a/Products/CMFPlone/skins/plone_prefs/prefs_error_log_showEntry.pt\n+++ b/Products/CMFPlone/controlpanel/browser/prefs_error_log_showEntry.pt\n@@ -47,7 +47,7 @@\n                     <dt i18n:translate="label_time">Time</dt>\n                     <dd\n                         tal:define="toLocalizedTime nocall:context/@@plone/toLocalizedTime;"\n-                        tal:content="python:toLocalizedTime(DateTime(entry[\'time\']), long_format=True)"></dd>\n+                        tal:content="python:toLocalizedTime(entry[\'time\'], long_format=True)"></dd>\n \n                     <dt align="left" valign="top"\n                         i18n:translate="label_user_name">User Name</dt>\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_error_log.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_error_log.py\nnew file mode 100644\nindex 0000000000..848a9e721d\n--- /dev/null\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_error_log.py\n@@ -0,0 +1,64 @@\n+import unittest\n+\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n+from plone.app.testing import SITE_OWNER_NAME\n+from plone.app.testing import SITE_OWNER_PASSWORD\n+from plone.testing.zope import Browser\n+from zope.component import getMultiAdapter\n+\n+\n+class ErrorLogControlPanelFunctionalTest(unittest.TestCase):\n+    """Test for Controlpanel Error Log\n+    """\n+\n+    layer = PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n+    error_log_properties = None\n+\n+    def setUp(self):\n+        self.app = self.layer[\'app\']\n+        self.request = self.layer[\'request\']\n+        self.portal = self.layer[\'portal\']\n+        self.portal_url = self.portal.absolute_url()\n+\n+        # keep initial error_log_properties to reset them\n+        self.error_log_properties = self.portal.error_log.getProperties()\n+\n+        self.browser = Browser(self.app)\n+        self.browser.handleErrors = False\n+        self.browser.addHeader(\n+            \'Authorization\',\n+            f\'Basic {SITE_OWNER_NAME}:{SITE_OWNER_PASSWORD}\'\n+        )\n+\n+    def tearDown(self):\n+        # reset error log properties\n+        keep_entries = self.error_log_properties[\'keep_entries\']\n+        copy_to_zlog = self.error_log_properties[\'copy_to_zlog\']\n+        ignored_exceptions = self.error_log_properties[\'ignored_exceptions\']\n+        self.portal.error_log.setProperties(keep_entries, copy_to_zlog, ignored_exceptions)\n+\n+    def test_error_log_control_panel_link(self):\n+        self.browser.open("%s/@@overview-controlpanel" % self.portal_url)\n+        self.browser.getLink(\'Errors\').click()\n+\n+        self.assertEqual(self.browser.url, "%s/prefs_error_log_form" % self.portal_url)\n+        self.assertIn(\'<h1 class="documentFirstHeading">Error log</h1>\', self.browser.contents)\n+\n+    def test_error_log_set_properties(self):\n+        self.assertEqual(self.error_log_properties[\'keep_entries\'], 20)\n+        self.assertEqual(self.error_log_properties[\'copy_to_zlog\'], True)\n+        self.assertEqual(self.error_log_properties[\'ignored_exceptions\'], (\'Unauthorized\', \'NotFound\', \'Redirect\'))\n+\n+        self.request.form = {\n+            \'keep_entries\': 40,\n+            \'ignored_exceptions\': [\'NotFound\', \'Redirect\']\n+        }\n+\n+        set_properties_view = getMultiAdapter((self.portal, self.request),\n+                                name=\'prefs_error_log_setProperties\')\n+        set_properties_view()\n+\n+        error_log_properties = self.portal.error_log.getProperties()\n+        self.assertEqual(error_log_properties[\'keep_entries\'], 40)\n+        self.assertEqual(error_log_properties[\'copy_to_zlog\'], False)\n+        self.assertEqual(error_log_properties[\'ignored_exceptions\'], (\'NotFound\', \'Redirect\'))\ndiff --git a/Products/CMFPlone/skins/plone_prefs/prefs_error_log_form.pt.metadata b/Products/CMFPlone/skins/plone_prefs/prefs_error_log_form.pt.metadata\ndeleted file mode 100644\nindex d9c2bf48c9..0000000000\n--- a/Products/CMFPlone/skins/plone_prefs/prefs_error_log_form.pt.metadata\n+++ /dev/null\n@@ -1,5 +0,0 @@\n-[default]\n-title=Error Log\n-\n-[security]\n-View = 0:Manager\ndiff --git a/Products/CMFPlone/skins/plone_prefs/prefs_error_log_setProperties.py b/Products/CMFPlone/skins/plone_prefs/prefs_error_log_setProperties.py\ndeleted file mode 100644\nindex 254eba829e..0000000000\n--- a/Products/CMFPlone/skins/plone_prefs/prefs_error_log_setProperties.py\n+++ /dev/null\n@@ -1,20 +0,0 @@\n-## Script (Python) "prefs_error_log_setProperties"\n-##bind container=container\n-##bind context=context\n-##bind namespace=\n-##bind script=script\n-##bind subpath=traverse_subpath\n-##parameters=keep_entries,ignored_exceptions,copy_to_zlog=0\n-##title=\n-\n-from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.utils import safe_nativestring\n-\n-request = context.REQUEST\n-\n-ignored_exceptions = map(safe_nativestring, ignored_exceptions)\n-context.error_log.setProperties(keep_entries, copy_to_zlog, ignored_exceptions)\n-context.plone_utils.addPortalMessage(_(\'Changes made.\'))\n-\n-return request.RESPONSE.redirect(\n-            context.absolute_url() + \'/prefs_error_log_form\')\ndiff --git a/Products/CMFPlone/skins/plone_prefs/prefs_error_log_showEntry.pt.metadata b/Products/CMFPlone/skins/plone_prefs/prefs_error_log_showEntry.pt.metadata\ndeleted file mode 100644\nindex 3028b2bbc4..0000000000\n--- a/Products/CMFPlone/skins/plone_prefs/prefs_error_log_showEntry.pt.metadata\n+++ /dev/null\n@@ -1,5 +0,0 @@\n-[default]\n-title=Error Log Entry\n-\n-[security]\n-View=0:Authenticated\ndiff --git a/Products/CMFPlone/skins/plone_prefs/prefs_error_log_update.py b/Products/CMFPlone/skins/plone_prefs/prefs_error_log_update.py\ndeleted file mode 100644\nindex b636dda8f1..0000000000\n--- a/Products/CMFPlone/skins/plone_prefs/prefs_error_log_update.py\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-## Script (Python) "prefs_error_log_update"\n-## Giorgio, Lorty - Plone Castle Sprint\n-\n-from Products.CMFPlone import PloneMessageFactory as _\n-\n-request = context.REQUEST\n-membership_tool = context.portal_membership\n-member = membership_tool.getAuthenticatedMember()\n-\n-if getattr(request, \'form.button.search\', None) is not None:\n-    search = request.form.get(\'search_entry\')\n-    if search == \'\':\n-        member.setProperties(error_log_update=0.0)\n-        context.plone_utils.addPortalMessage(_(\'Showing all entries\'))\n-        return request.RESPONSE.redirect(context.absolute_url() + \'/prefs_error_log_form\')\n-    return request.RESPONSE.redirect(context.absolute_url() + \'/prefs_error_log_showEntry?id=%s\' % search)\n-elif getattr(request, \'form.button.showall\', None) is not None:\n-    member.setProperties(error_log_update=0.0)\n-    context.plone_utils.addPortalMessage(_(\'Showing all entries\'))\n-    return request.RESPONSE.redirect(context.absolute_url() + \'/prefs_error_log_form\')\n-elif getattr(request, \'form.button.clear\', None) is not None:\n-    member.setProperties(error_log_update=DateTime().timeTime())\n-    context.plone_utils.addPortalMessage(_(\'Entries cleared\'))\n-    return request.RESPONSE.redirect(context.absolute_url() + \'/prefs_error_log_form\')\n-else:\n-    return request.RESPONSE.redirect(context.absolute_url() + \'/prefs_error_log_form\')\ndiff --git a/news/3241.bugfix b/news/3241.bugfix\nnew file mode 100644\nindex 0000000000..3a444a19dc\n--- /dev/null\n+++ b/news/3241.bugfix\n@@ -0,0 +1,2 @@\n+Move prefs_error_log* from skins to browser views\n+[jmevissen]\n'

