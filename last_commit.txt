Repository: plone.protect


Branch: refs/heads/master
Date: 2018-06-15T10:03:52+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.protect/commit/b67a3f0e0285efb5cec3f5f767944db93906d603

Fixed tests to work with merged plone.login

Files changed:
M CHANGES.rst
M plone/protect/tests/testAuto.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex ff756b9..297504a 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -21,6 +21,9 @@ New features:\n \n Bug fixes:\n \n+- Fixed tests to work with merged plone.login\n+  [jensens]\n+\n - Avoid CSRF warnings due to generating image scales\n   stored in a plone.scale.storage.ScalesDict.\n   [davisagli]\ndiff --git a/plone/protect/tests/testAuto.py b/plone/protect/tests/testAuto.py\nindex 097c32c..f1fe5f8 100644\n--- a/plone/protect/tests/testAuto.py\n+++ b/plone/protect/tests/testAuto.py\n@@ -47,7 +47,7 @@ def test_does_not_add_csrf_protection_to_different_domain(self):\n         try:\n             form.getControl(name="_authenticator")\n             self.assertEqual(\'should not add authenticator\', \'\')\n-        except:\n+        except Exception:\n             pass\n \n     def test_does_not_add_csrf_protection_to_different_domain_scheme_relative(\n@@ -57,7 +57,7 @@ def test_does_not_add_csrf_protection_to_different_domain_scheme_relative(\n         try:\n             form.getControl(name="_authenticator")\n             self.assertEqual(\'should not add authenticator\', \'\')\n-        except:\n+        except Exception:\n             pass\n \n     def test_authentication_works_automatically(self):\n@@ -97,8 +97,9 @@ def setUp(self):\n         self.browser.open(self.portal.absolute_url() + \'/login_form\')\n         self.browser.getControl(name=\'__ac_name\').value = TEST_USER_NAME\n         self.browser.getControl(\n-            name=\'__ac_password\').value = TEST_USER_PASSWORD\n-        self.browser.getControl(name=\'submit\').click()\n+            name=\'__ac_password\'\n+        ).value = TEST_USER_PASSWORD\n+        self.browser.getControl(\'Log in\').click()\n \n     def open(self, path):\n         self.browser.open(self.portal.absolute_url() + \'/\' + path)\n@@ -131,7 +132,9 @@ def setUp(self):\n         self.browser = Browser(self.layer[\'app\'])\n         self.request = self.layer[\'request\']\n         self.browser.addHeader(\n-            \'Authorization\', \'Basic %s:%s\' % (SITE_OWNER_NAME, SITE_OWNER_PASSWORD,))\n+            \'Authorization\',\n+            \'Basic %s:%s\' % (SITE_OWNER_NAME, SITE_OWNER_PASSWORD,)\n+        )\n \n     def open(self, path):\n         self.browser.open(self.portal.aq_parent.absolute_url() + \'/\' + path)\n@@ -158,7 +161,7 @@ def test_keyrings_get_rotated_on_login(self):\n         self.browser.getControl(name=\'__ac_name\').value = TEST_USER_NAME\n         self.browser.getControl(\n             name=\'__ac_password\').value = TEST_USER_PASSWORD\n-        self.browser.getControl(name=\'submit\').click()\n+        self.browser.getControl(\'Log in\').click()\n \n         self.assertNotEqual(keys, ring.data)\n         self.assertNotEqual(ring.last_rotation, 0)\n@@ -183,6 +186,7 @@ def test_safe_write_empty_returns_true(self):\n         transform._registered_objects = lambda: [self.portal]\n         self.assertTrue(transform._check())\n \n+\n class TestAutoTransform(unittest.TestCase):\n     layer = PROTECT_FUNCTIONAL_TESTING\n \n@@ -202,6 +206,7 @@ def test_empty_no_error(self):\n     def test_html(self):\n         transform = ProtectTransform(self.portal, self.request)\n         result = transform.transform([(\n-            \'<html>\\n<body><form action="http://nohost/myaction" method="POST">\'\n+            \'<html>\\n<body>\'\n+            \'<form action="http://nohost/myaction" method="POST">\'\n             \'</form></body>\\n</html>\')], \'utf-8\')\n         self.failUnless(\'_authenticator\' in result.serialize())\n'

Repository: plone.protect


Branch: refs/heads/master
Date: 2018-06-18T13:36:47+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.protect/commit/e95da0e7a12ea3400447eb98269fed81c92d98b6

Merge pull request #78 from plone/merge-plone-login

Fixed tests to work with merged plone.login

Files changed:
M CHANGES.rst
M plone/protect/tests/testAuto.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex ff756b9..297504a 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -21,6 +21,9 @@ New features:\n \n Bug fixes:\n \n+- Fixed tests to work with merged plone.login\n+  [jensens]\n+\n - Avoid CSRF warnings due to generating image scales\n   stored in a plone.scale.storage.ScalesDict.\n   [davisagli]\ndiff --git a/plone/protect/tests/testAuto.py b/plone/protect/tests/testAuto.py\nindex 097c32c..f1fe5f8 100644\n--- a/plone/protect/tests/testAuto.py\n+++ b/plone/protect/tests/testAuto.py\n@@ -47,7 +47,7 @@ def test_does_not_add_csrf_protection_to_different_domain(self):\n         try:\n             form.getControl(name="_authenticator")\n             self.assertEqual(\'should not add authenticator\', \'\')\n-        except:\n+        except Exception:\n             pass\n \n     def test_does_not_add_csrf_protection_to_different_domain_scheme_relative(\n@@ -57,7 +57,7 @@ def test_does_not_add_csrf_protection_to_different_domain_scheme_relative(\n         try:\n             form.getControl(name="_authenticator")\n             self.assertEqual(\'should not add authenticator\', \'\')\n-        except:\n+        except Exception:\n             pass\n \n     def test_authentication_works_automatically(self):\n@@ -97,8 +97,9 @@ def setUp(self):\n         self.browser.open(self.portal.absolute_url() + \'/login_form\')\n         self.browser.getControl(name=\'__ac_name\').value = TEST_USER_NAME\n         self.browser.getControl(\n-            name=\'__ac_password\').value = TEST_USER_PASSWORD\n-        self.browser.getControl(name=\'submit\').click()\n+            name=\'__ac_password\'\n+        ).value = TEST_USER_PASSWORD\n+        self.browser.getControl(\'Log in\').click()\n \n     def open(self, path):\n         self.browser.open(self.portal.absolute_url() + \'/\' + path)\n@@ -131,7 +132,9 @@ def setUp(self):\n         self.browser = Browser(self.layer[\'app\'])\n         self.request = self.layer[\'request\']\n         self.browser.addHeader(\n-            \'Authorization\', \'Basic %s:%s\' % (SITE_OWNER_NAME, SITE_OWNER_PASSWORD,))\n+            \'Authorization\',\n+            \'Basic %s:%s\' % (SITE_OWNER_NAME, SITE_OWNER_PASSWORD,)\n+        )\n \n     def open(self, path):\n         self.browser.open(self.portal.aq_parent.absolute_url() + \'/\' + path)\n@@ -158,7 +161,7 @@ def test_keyrings_get_rotated_on_login(self):\n         self.browser.getControl(name=\'__ac_name\').value = TEST_USER_NAME\n         self.browser.getControl(\n             name=\'__ac_password\').value = TEST_USER_PASSWORD\n-        self.browser.getControl(name=\'submit\').click()\n+        self.browser.getControl(\'Log in\').click()\n \n         self.assertNotEqual(keys, ring.data)\n         self.assertNotEqual(ring.last_rotation, 0)\n@@ -183,6 +186,7 @@ def test_safe_write_empty_returns_true(self):\n         transform._registered_objects = lambda: [self.portal]\n         self.assertTrue(transform._check())\n \n+\n class TestAutoTransform(unittest.TestCase):\n     layer = PROTECT_FUNCTIONAL_TESTING\n \n@@ -202,6 +206,7 @@ def test_empty_no_error(self):\n     def test_html(self):\n         transform = ProtectTransform(self.portal, self.request)\n         result = transform.transform([(\n-            \'<html>\\n<body><form action="http://nohost/myaction" method="POST">\'\n+            \'<html>\\n<body>\'\n+            \'<form action="http://nohost/myaction" method="POST">\'\n             \'</form></body>\\n</html>\')], \'utf-8\')\n         self.failUnless(\'_authenticator\' in result.serialize())\n'

