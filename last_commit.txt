Repository: plone.restapi


Branch: refs/heads/master
Date: 2019-04-25T09:45:59+02:00
Author: Victor Fernandez de Alba (sneridagh) <sneridagh@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/14a0323745ff3eb8ce6304cc5c6f0d2f9c00bf6e

Exact match the token for vocabularies endpoint, fix the changelog and amend the docs

Files changed:
M CHANGES.rst
M docs/source/vocabularies.rst
M src/plone/restapi/serializer/vocabularies.py
M src/plone/restapi/tests/http-examples/vocabularies_get_filtered_by_token.resp
M src/plone/restapi/tests/test_services_vocabularies.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex d7687e82..033cdc7d 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -7,7 +7,7 @@ Changelog\n Breaking Changes:\n \n - `@vocabularies` service:\n-  \n+\n   - No longer returns an ``@id`` for terms.\n   - Results are batched, and terms are now listed as ``items``\n     instead of ``terms`` to match other batched responses.\n@@ -32,7 +32,8 @@ Breaking Changes:\n \n New Features:\n \n-- ``@vocabularies`` service: Use ``q`` parameter to filter terms by title\n+- ``@vocabularies`` service: Use ``title`` parameter to filter terms by title\n+  and ``token`` for getting the title of a term given a token.\n   (case-insensitive).\n   [davisagli]\n \ndiff --git a/docs/source/vocabularies.rst b/docs/source/vocabularies.rst\nindex e7c194fb..35bd7eca 100644\n--- a/docs/source/vocabularies.rst\n+++ b/docs/source/vocabularies.rst\n@@ -3,7 +3,7 @@ Vocabularies\n \n Vocabularies are utilities containing a list of values grouped by interest or different Plone features.\n For example, ``plone.app.vocabularies.ReallyUserFriendlyTypes`` will return all the content types registered in Plone.\n-The vocabularies return a list of objects with the items ``@id``, ``title`` and ``token``.\n+The vocabularies return a list of objects with the items ``title`` and ``token``.\n \n .. note::\n \tThese docs are generated by code tests, therefore you will see some \'test\' contenttypes appear here.\n@@ -56,7 +56,8 @@ E.g. search for all terms that contain the string ``doc`` in the title:\n    :language: http\n \n Use the ``token`` paramenter to filter vocabulary terms by token.\n-E.g. search for all terms that contain the string ``doc`` in the token:\n+This is useful in case that you have the token and you need to retrieve the ``title``.\n+E.g. search the term ``doc`` in the token:\n \n ..  http:example:: curl httpie python-requests\n     :request: ../../src/plone/restapi/tests/http-examples/vocabularies_get_filtered_by_token.req\ndiff --git a/src/plone/restapi/serializer/vocabularies.py b/src/plone/restapi/serializer/vocabularies.py\nindex c891fa15..181459c9 100644\n--- a/src/plone/restapi/serializer/vocabularies.py\n+++ b/src/plone/restapi/serializer/vocabularies.py\n@@ -34,7 +34,7 @@ def __call__(self, vocabulary_id):\n                 )\n \n             if token:\n-                if token.lower() not in term.token.lower():\n+                if token.lower() != term.token.lower():\n                     continue\n                 terms.append(term)\n             else:\ndiff --git a/src/plone/restapi/tests/http-examples/vocabularies_get_filtered_by_token.resp b/src/plone/restapi/tests/http-examples/vocabularies_get_filtered_by_token.resp\nindex cf7b13cd..787e716f 100644\n--- a/src/plone/restapi/tests/http-examples/vocabularies_get_filtered_by_token.resp\n+++ b/src/plone/restapi/tests/http-examples/vocabularies_get_filtered_by_token.resp\n@@ -3,19 +3,6 @@ Content-Type: application/json\n \n {\n   "@id": "http://localhost:55001/plone/@vocabularies/plone.app.vocabularies.ReallyUserFriendlyTypes?token=doc", \n-  "items": [\n-    {\n-      "title": "DX Test Document", \n-      "token": "DXTestDocument"\n-    }, \n-    {\n-      "title": "Page", \n-      "token": "Document"\n-    }, \n-    {\n-      "title": "Test Document", \n-      "token": "ATTestDocument"\n-    }\n-  ], \n-  "items_total": 3\n+  "items": [], \n+  "items_total": 0\n }\n\\ No newline at end of file\ndiff --git a/src/plone/restapi/tests/test_services_vocabularies.py b/src/plone/restapi/tests/test_services_vocabularies.py\nindex f4f4e114..69a9a8d0 100644\n--- a/src/plone/restapi/tests/test_services_vocabularies.py\n+++ b/src/plone/restapi/tests/test_services_vocabularies.py\n@@ -138,6 +138,22 @@ def test_get_vocabulary_filtered_by_token(self):\n             }\n         )\n \n+    def test_get_vocabulary_filtered_by_token_partial_not_match(self):\n+        response = self.api_session.get(\n+            \'/@vocabularies/plone.restapi.tests.test_vocabulary?token=token\'\n+        )\n+\n+        self.assertEqual(200, response.status_code)\n+        response = response.json()\n+        self.assertEqual(\n+            response,\n+            {\n+                u\'@id\': self.portal_url + u\'/@vocabularies/plone.restapi.tests.test_vocabulary?token=token\',  # noqa\n+                u\'items\': [],\n+                u\'items_total\': 0,\n+            }\n+        )\n+\n     def test_get_vocabulary_filtered_by_title_and_token_returns_error(self):\n         response = self.api_session.get(\n             \'/@vocabularies/plone.restapi.tests.test_vocabulary?token=token1&title=Title\'  # noqa\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2019-04-25T17:23:51+02:00
Author: Timo Stollenwerk (tisto) <tisto@plone.org>
Commit: https://github.com/plone/plone.restapi/commit/42566720ad212b9212050d1f157260cf238aa017

Improve filter by token example for vocabularies endpoint.

Files changed:
M src/plone/restapi/tests/http-examples/vocabularies_get_filtered_by_token.req
M src/plone/restapi/tests/http-examples/vocabularies_get_filtered_by_token.resp
M src/plone/restapi/tests/test_documentation.py

b'diff --git a/src/plone/restapi/tests/http-examples/vocabularies_get_filtered_by_token.req b/src/plone/restapi/tests/http-examples/vocabularies_get_filtered_by_token.req\nindex c3101157..d8295310 100644\n--- a/src/plone/restapi/tests/http-examples/vocabularies_get_filtered_by_token.req\n+++ b/src/plone/restapi/tests/http-examples/vocabularies_get_filtered_by_token.req\n@@ -1,3 +1,3 @@\n-GET /plone/@vocabularies/plone.app.vocabularies.ReallyUserFriendlyTypes?token=doc HTTP/1.1\n+GET /plone/@vocabularies/plone.app.vocabularies.ReallyUserFriendlyTypes?token=Document HTTP/1.1\n Accept: application/json\n Authorization: Basic YWRtaW46c2VjcmV0\ndiff --git a/src/plone/restapi/tests/http-examples/vocabularies_get_filtered_by_token.resp b/src/plone/restapi/tests/http-examples/vocabularies_get_filtered_by_token.resp\nindex 787e716f..a46e062c 100644\n--- a/src/plone/restapi/tests/http-examples/vocabularies_get_filtered_by_token.resp\n+++ b/src/plone/restapi/tests/http-examples/vocabularies_get_filtered_by_token.resp\n@@ -2,7 +2,12 @@ HTTP/1.1 200 OK\n Content-Type: application/json\n \n {\n-  "@id": "http://localhost:55001/plone/@vocabularies/plone.app.vocabularies.ReallyUserFriendlyTypes?token=doc", \n-  "items": [], \n-  "items_total": 0\n+  "@id": "http://localhost:55001/plone/@vocabularies/plone.app.vocabularies.ReallyUserFriendlyTypes?token=Document", \n+  "items": [\n+    {\n+      "title": "Page", \n+      "token": "Document"\n+    }\n+  ], \n+  "items_total": 1\n }\n\\ No newline at end of file\ndiff --git a/src/plone/restapi/tests/test_documentation.py b/src/plone/restapi/tests/test_documentation.py\nindex 61aafe68..009e2036 100644\n--- a/src/plone/restapi/tests/test_documentation.py\n+++ b/src/plone/restapi/tests/test_documentation.py\n@@ -1135,7 +1135,7 @@ def test_documentation_vocabularies_get_filtered_by_title(self):\n     def test_documentation_vocabularies_get_filtered_by_token(self):\n         response = self.api_session.get(\n             \'/@vocabularies/plone.app.vocabularies.ReallyUserFriendlyTypes?\'\n-            \'token=doc\'\n+            \'token=Document\'\n         )\n         save_request_and_response_for_docs(\n             \'vocabularies_get_filtered_by_token\', response)\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2019-04-25T21:44:09+02:00
Author: Timo Stollenwerk (tisto) <tisto@users.noreply.github.com>
Commit: https://github.com/plone/plone.restapi/commit/02cac0f3b500872b0b2d00a143377a3ea2a98a87

Merge pull request #720 from plone/exacttokenvocabs

Exact match the token for vocabularies endpoint, fix the changelog anâ€¦

Files changed:
M CHANGES.rst
M docs/source/vocabularies.rst
M src/plone/restapi/serializer/vocabularies.py
M src/plone/restapi/tests/http-examples/vocabularies_get_filtered_by_token.req
M src/plone/restapi/tests/http-examples/vocabularies_get_filtered_by_token.resp
M src/plone/restapi/tests/test_documentation.py
M src/plone/restapi/tests/test_services_vocabularies.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex d7687e82..033cdc7d 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -7,7 +7,7 @@ Changelog\n Breaking Changes:\n \n - `@vocabularies` service:\n-  \n+\n   - No longer returns an ``@id`` for terms.\n   - Results are batched, and terms are now listed as ``items``\n     instead of ``terms`` to match other batched responses.\n@@ -32,7 +32,8 @@ Breaking Changes:\n \n New Features:\n \n-- ``@vocabularies`` service: Use ``q`` parameter to filter terms by title\n+- ``@vocabularies`` service: Use ``title`` parameter to filter terms by title\n+  and ``token`` for getting the title of a term given a token.\n   (case-insensitive).\n   [davisagli]\n \ndiff --git a/docs/source/vocabularies.rst b/docs/source/vocabularies.rst\nindex e7c194fb..35bd7eca 100644\n--- a/docs/source/vocabularies.rst\n+++ b/docs/source/vocabularies.rst\n@@ -3,7 +3,7 @@ Vocabularies\n \n Vocabularies are utilities containing a list of values grouped by interest or different Plone features.\n For example, ``plone.app.vocabularies.ReallyUserFriendlyTypes`` will return all the content types registered in Plone.\n-The vocabularies return a list of objects with the items ``@id``, ``title`` and ``token``.\n+The vocabularies return a list of objects with the items ``title`` and ``token``.\n \n .. note::\n \tThese docs are generated by code tests, therefore you will see some \'test\' contenttypes appear here.\n@@ -56,7 +56,8 @@ E.g. search for all terms that contain the string ``doc`` in the title:\n    :language: http\n \n Use the ``token`` paramenter to filter vocabulary terms by token.\n-E.g. search for all terms that contain the string ``doc`` in the token:\n+This is useful in case that you have the token and you need to retrieve the ``title``.\n+E.g. search the term ``doc`` in the token:\n \n ..  http:example:: curl httpie python-requests\n     :request: ../../src/plone/restapi/tests/http-examples/vocabularies_get_filtered_by_token.req\ndiff --git a/src/plone/restapi/serializer/vocabularies.py b/src/plone/restapi/serializer/vocabularies.py\nindex c891fa15..181459c9 100644\n--- a/src/plone/restapi/serializer/vocabularies.py\n+++ b/src/plone/restapi/serializer/vocabularies.py\n@@ -34,7 +34,7 @@ def __call__(self, vocabulary_id):\n                 )\n \n             if token:\n-                if token.lower() not in term.token.lower():\n+                if token.lower() != term.token.lower():\n                     continue\n                 terms.append(term)\n             else:\ndiff --git a/src/plone/restapi/tests/http-examples/vocabularies_get_filtered_by_token.req b/src/plone/restapi/tests/http-examples/vocabularies_get_filtered_by_token.req\nindex c3101157..d8295310 100644\n--- a/src/plone/restapi/tests/http-examples/vocabularies_get_filtered_by_token.req\n+++ b/src/plone/restapi/tests/http-examples/vocabularies_get_filtered_by_token.req\n@@ -1,3 +1,3 @@\n-GET /plone/@vocabularies/plone.app.vocabularies.ReallyUserFriendlyTypes?token=doc HTTP/1.1\n+GET /plone/@vocabularies/plone.app.vocabularies.ReallyUserFriendlyTypes?token=Document HTTP/1.1\n Accept: application/json\n Authorization: Basic YWRtaW46c2VjcmV0\ndiff --git a/src/plone/restapi/tests/http-examples/vocabularies_get_filtered_by_token.resp b/src/plone/restapi/tests/http-examples/vocabularies_get_filtered_by_token.resp\nindex cf7b13cd..a46e062c 100644\n--- a/src/plone/restapi/tests/http-examples/vocabularies_get_filtered_by_token.resp\n+++ b/src/plone/restapi/tests/http-examples/vocabularies_get_filtered_by_token.resp\n@@ -2,20 +2,12 @@ HTTP/1.1 200 OK\n Content-Type: application/json\n \n {\n-  "@id": "http://localhost:55001/plone/@vocabularies/plone.app.vocabularies.ReallyUserFriendlyTypes?token=doc", \n+  "@id": "http://localhost:55001/plone/@vocabularies/plone.app.vocabularies.ReallyUserFriendlyTypes?token=Document", \n   "items": [\n-    {\n-      "title": "DX Test Document", \n-      "token": "DXTestDocument"\n-    }, \n     {\n       "title": "Page", \n       "token": "Document"\n-    }, \n-    {\n-      "title": "Test Document", \n-      "token": "ATTestDocument"\n     }\n   ], \n-  "items_total": 3\n+  "items_total": 1\n }\n\\ No newline at end of file\ndiff --git a/src/plone/restapi/tests/test_documentation.py b/src/plone/restapi/tests/test_documentation.py\nindex 61aafe68..009e2036 100644\n--- a/src/plone/restapi/tests/test_documentation.py\n+++ b/src/plone/restapi/tests/test_documentation.py\n@@ -1135,7 +1135,7 @@ def test_documentation_vocabularies_get_filtered_by_title(self):\n     def test_documentation_vocabularies_get_filtered_by_token(self):\n         response = self.api_session.get(\n             \'/@vocabularies/plone.app.vocabularies.ReallyUserFriendlyTypes?\'\n-            \'token=doc\'\n+            \'token=Document\'\n         )\n         save_request_and_response_for_docs(\n             \'vocabularies_get_filtered_by_token\', response)\ndiff --git a/src/plone/restapi/tests/test_services_vocabularies.py b/src/plone/restapi/tests/test_services_vocabularies.py\nindex f4f4e114..69a9a8d0 100644\n--- a/src/plone/restapi/tests/test_services_vocabularies.py\n+++ b/src/plone/restapi/tests/test_services_vocabularies.py\n@@ -138,6 +138,22 @@ def test_get_vocabulary_filtered_by_token(self):\n             }\n         )\n \n+    def test_get_vocabulary_filtered_by_token_partial_not_match(self):\n+        response = self.api_session.get(\n+            \'/@vocabularies/plone.restapi.tests.test_vocabulary?token=token\'\n+        )\n+\n+        self.assertEqual(200, response.status_code)\n+        response = response.json()\n+        self.assertEqual(\n+            response,\n+            {\n+                u\'@id\': self.portal_url + u\'/@vocabularies/plone.restapi.tests.test_vocabulary?token=token\',  # noqa\n+                u\'items\': [],\n+                u\'items_total\': 0,\n+            }\n+        )\n+\n     def test_get_vocabulary_filtered_by_title_and_token_returns_error(self):\n         response = self.api_session.get(\n             \'/@vocabularies/plone.restapi.tests.test_vocabulary?token=token1&title=Title\'  # noqa\n'

