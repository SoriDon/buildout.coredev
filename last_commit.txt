Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2021-11-24T21:35:51+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/ec781c7154e3184f6d1bfc75e264f11e58e28435

remove dead code that wont work in Py 3 anyway if called (cmp).

Files changed:
M Products/CMFPlone/Portal.py

b'diff --git a/Products/CMFPlone/Portal.py b/Products/CMFPlone/Portal.py\nindex 0474b4f6ca..0da246ba29 100644\n--- a/Products/CMFPlone/Portal.py\n+++ b/Products/CMFPlone/Portal.py\n@@ -6,7 +6,6 @@\n from five.localsitemanager.registry import PersistentComponents\n from OFS.ObjectManager import REPLACEABLE\n from plone.dexterity.content import Container\n-from plone.i18n.locales.interfaces import IMetadataLanguageAvailability\n from Products.CMFCore import permissions\n from Products.CMFCore.interfaces import IContentish\n from Products.CMFCore.interfaces import ISiteRoot\n@@ -207,17 +206,6 @@ def folderlistingFolderContents(self, contentFilter=None):\n         """\n         return self.listFolderContents(contentFilter)\n \n-    security.declarePublic(\'availableLanguages\')\n-\n-    def availableLanguages(self):\n-        util = queryUtility(IMetadataLanguageAvailability)\n-        languages = util.getLanguageListing()\n-        languages.sort(lambda x, y: cmp(x[1], y[1]))\n-        # Put language neutral at the top.\n-        languages.insert(0, (\'\', _(\'Language neutral (site default)\')))\n-\n-        return languages\n-\n     def isEffective(self, date):\n         # Override DefaultDublinCoreImpl\'s test, since we are always viewable.\n         return 1\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2021-11-24T21:39:24+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/6a94541982fd75c7ce793df3789bc6bb03476c10

use security decorators

Files changed:
M Products/CMFPlone/Portal.py

b'diff --git a/Products/CMFPlone/Portal.py b/Products/CMFPlone/Portal.py\nindex 0da246ba29..65a09f0b7f 100644\n--- a/Products/CMFPlone/Portal.py\n+++ b/Products/CMFPlone/Portal.py\n@@ -173,8 +173,7 @@ def manage_beforeDelete(self, container, item):\n         PloneSite.inheritedAttribute(\'manage_beforeDelete\')(self, container,\n                                                             item)\n \n-    security.declareProtected(permissions.DeleteObjects, \'manage_delObjects\')\n-\n+    @security.protected(permissions.DeleteObjects)\n     def manage_delObjects(self, ids=None, REQUEST=None):\n         """We need to enforce security."""\n         if ids is None:\n@@ -194,9 +193,7 @@ def view(self):\n         """\n         return self()\n \n-    security.declareProtected(permissions.AccessContentsInformation,\n-                              \'folderlistingFolderContents\')\n-\n+    @security.protected(permissions.AccessContentsInformation)\n     def folderlistingFolderContents(self, contentFilter=None):\n         """Calls listFolderContents in protected only by ACI so that\n         folder_listing can work without the List folder contents permission.\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2021-11-24T22:13:01+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/a2cf803a02310f5bf6d4032ddba5a0f2d904f1cb

rm unused import

Files changed:
M Products/CMFPlone/Portal.py

b'diff --git a/Products/CMFPlone/Portal.py b/Products/CMFPlone/Portal.py\nindex 65a09f0b7f..8710dbbb18 100644\n--- a/Products/CMFPlone/Portal.py\n+++ b/Products/CMFPlone/Portal.py\n@@ -33,7 +33,6 @@\n from Products.CMFPlone.permissions import ReplyToItem\n from Products.CMFPlone.permissions import View\n from Products.Five.component.interfaces import IObjectManagerSite\n-from zope.component import queryUtility\n from zope.interface.interfaces import ComponentLookupError\n from zope.event import notify\n from zope.interface import classImplementsOnly\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2021-11-25T00:30:51+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/d90cf6b42b82efe6dc04fdeea3bdede9bc5e6692

document changes

Files changed:
A news/3366.bugfix

b'diff --git a/news/3366.bugfix b/news/3366.bugfix\nnew file mode 100644\nindex 0000000000..8b00710426\n--- /dev/null\n+++ b/news/3366.bugfix\n@@ -0,0 +1,2 @@\n+In Portal: use security decorators and remove dead code that wont work in Py 3 anyway if called (cmp).\n+[jensens]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2021-11-25T00:34:31+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/5bda0c11409d930576520494c7b999edf7e04e7b

better split news

Files changed:
A news/3337.bugfix
M news/3366.bugfix

b'diff --git a/news/3337.bugfix b/news/3337.bugfix\nnew file mode 100644\nindex 0000000000..e37d1f9b8c\n--- /dev/null\n+++ b/news/3337.bugfix\n@@ -0,0 +1,3 @@\n+Fixes #3337: \n+Remove dead code that wont work in Py 3 anyway if called (cmp).\n+[jensens]\ndiff --git a/news/3366.bugfix b/news/3366.bugfix\nindex 8b00710426..29be868560 100644\n--- a/news/3366.bugfix\n+++ b/news/3366.bugfix\n@@ -1,2 +1,2 @@\n-In Portal: use security decorators and remove dead code that wont work in Py 3 anyway if called (cmp).\n+In Portal: use security decorators\n [jensens]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2021-11-25T12:33:07+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/2d95fbf4ca26a4670fc5e4381ddf67bbfd574243

Merge pull request #3366 from plone/cleanup-Portal

Cleanup Portal

Files changed:
A news/3337.bugfix
A news/3366.bugfix
M Products/CMFPlone/Portal.py

b'diff --git a/Products/CMFPlone/Portal.py b/Products/CMFPlone/Portal.py\nindex 0474b4f6ca..8710dbbb18 100644\n--- a/Products/CMFPlone/Portal.py\n+++ b/Products/CMFPlone/Portal.py\n@@ -6,7 +6,6 @@\n from five.localsitemanager.registry import PersistentComponents\n from OFS.ObjectManager import REPLACEABLE\n from plone.dexterity.content import Container\n-from plone.i18n.locales.interfaces import IMetadataLanguageAvailability\n from Products.CMFCore import permissions\n from Products.CMFCore.interfaces import IContentish\n from Products.CMFCore.interfaces import ISiteRoot\n@@ -34,7 +33,6 @@\n from Products.CMFPlone.permissions import ReplyToItem\n from Products.CMFPlone.permissions import View\n from Products.Five.component.interfaces import IObjectManagerSite\n-from zope.component import queryUtility\n from zope.interface.interfaces import ComponentLookupError\n from zope.event import notify\n from zope.interface import classImplementsOnly\n@@ -174,8 +172,7 @@ def manage_beforeDelete(self, container, item):\n         PloneSite.inheritedAttribute(\'manage_beforeDelete\')(self, container,\n                                                             item)\n \n-    security.declareProtected(permissions.DeleteObjects, \'manage_delObjects\')\n-\n+    @security.protected(permissions.DeleteObjects)\n     def manage_delObjects(self, ids=None, REQUEST=None):\n         """We need to enforce security."""\n         if ids is None:\n@@ -195,9 +192,7 @@ def view(self):\n         """\n         return self()\n \n-    security.declareProtected(permissions.AccessContentsInformation,\n-                              \'folderlistingFolderContents\')\n-\n+    @security.protected(permissions.AccessContentsInformation)\n     def folderlistingFolderContents(self, contentFilter=None):\n         """Calls listFolderContents in protected only by ACI so that\n         folder_listing can work without the List folder contents permission.\n@@ -207,17 +202,6 @@ def folderlistingFolderContents(self, contentFilter=None):\n         """\n         return self.listFolderContents(contentFilter)\n \n-    security.declarePublic(\'availableLanguages\')\n-\n-    def availableLanguages(self):\n-        util = queryUtility(IMetadataLanguageAvailability)\n-        languages = util.getLanguageListing()\n-        languages.sort(lambda x, y: cmp(x[1], y[1]))\n-        # Put language neutral at the top.\n-        languages.insert(0, (\'\', _(\'Language neutral (site default)\')))\n-\n-        return languages\n-\n     def isEffective(self, date):\n         # Override DefaultDublinCoreImpl\'s test, since we are always viewable.\n         return 1\ndiff --git a/news/3337.bugfix b/news/3337.bugfix\nnew file mode 100644\nindex 0000000000..e37d1f9b8c\n--- /dev/null\n+++ b/news/3337.bugfix\n@@ -0,0 +1,3 @@\n+Fixes #3337: \n+Remove dead code that wont work in Py 3 anyway if called (cmp).\n+[jensens]\ndiff --git a/news/3366.bugfix b/news/3366.bugfix\nnew file mode 100644\nindex 0000000000..29be868560\n--- /dev/null\n+++ b/news/3366.bugfix\n@@ -0,0 +1,2 @@\n+In Portal: use security decorators\n+[jensens]\n'

