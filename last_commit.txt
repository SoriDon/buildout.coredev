Repository: plone.app.uuid


Branch: refs/heads/master
Date: 2022-08-17T01:25:40+05:30
Author: Anirudh H Kashyap (anirudhhkashyap) <68481927+anirudhhkashyap@users.noreply.github.com>
Commit: https://github.com/plone/plone.app.uuid/commit/65cdc16a81a9ed12453829fd3fd37d3aca5ac328

Add optional security check for uuidToObject (#14)

* Add optional security check for uuidToObject

Sometimes the user is allowed to view the object. The unrestricted flag is used to check this. It is False by default and when set to True allows the object to be accessed. This resolves issue #13.

* Update 13.bugfix

Append contributor name.

Files changed:
A news/13.bugfix
M plone/app/uuid/tests.py
M plone/app/uuid/utils.py

b'diff --git a/news/13.bugfix b/news/13.bugfix\nnew file mode 100644\nindex 0000000..62bb39f\n--- /dev/null\n+++ b/news/13.bugfix\n@@ -0,0 +1 @@\n+Add optional security check for uuidToObject [anirudhhkashyap]\ndiff --git a/plone/app/uuid/tests.py b/plone/app/uuid/tests.py\nindex f8b641a..4bf62b8 100644\n--- a/plone/app/uuid/tests.py\n+++ b/plone/app/uuid/tests.py\n@@ -245,11 +245,14 @@ def test_access_private_published(self):\n         self.assertEqual(published_url, uuidToURL(published_uuid))\n         self.assertEqual(published_path, uuidToCatalogBrain(published_uuid).getPath())\n         self.assertEqual(aq_base(published), aq_base(uuidToObject(published_uuid)))\n+    \n \n         # Currently, anonymous can also see the private item with most functions.\n         # See the docstring of this test method.\n         # But: when you get a brain with unrestrictedSearchResults,\n         # the getObject may fail.\n+        # Object can be accessed when unrestricted flag is set to True\n+        self.assertEqual(aq_base(private), aq_base(uuidToObject(private_uuid, True)))\n         self.assertEqual(private_path, uuidToPhysicalPath(private_uuid))\n         self.assertEqual(private_url, uuidToURL(private_uuid))\n         brain = uuidToCatalogBrain(private_uuid)\ndiff --git a/plone/app/uuid/utils.py b/plone/app/uuid/utils.py\nindex 7df8a49..70871d3 100644\n--- a/plone/app/uuid/utils.py\n+++ b/plone/app/uuid/utils.py\n@@ -71,12 +71,14 @@ def uuidToURL(uuid):\n     return brain.getURL()\n \n \n-def uuidToObject(uuid):\n+def uuidToObject(uuid, unrestricted = False):\n     """Given a UUID, attempt to return a content object. Will return\n     None if the UUID can\'t be found.\n \n     Note: the user may not be authorized to view the object.\n     It is up to the caller to check this, if needed.\n+\n+    If the author is authorised to view the object, unrestricted flag should be set to True\n     """\n     path = uuidToPhysicalPath(uuid)\n     if not path:\n@@ -88,6 +90,9 @@ def uuidToObject(uuid):\n     parent_path, final_path = path.rpartition("/")[::2]\n     parent = site.unrestrictedTraverse(parent_path)\n     # Do check restrictions for the final object.\n+    # Check if the object has restrictions\n+    if unrestricted:\n+        return parent.unrestrictedTraverse(final_path)\n     return parent.restrictedTraverse(final_path)\n \n \n'

