Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2021-07-28T09:33:51+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/5015411d80d6e8dec94d438968070373c19ea3c5

Use behavior-names instead of python-paths in types-controlpanel

Files changed:
M Products/CMFPlone/controlpanel/browser/types.py

b'diff --git a/Products/CMFPlone/controlpanel/browser/types.py b/Products/CMFPlone/controlpanel/browser/types.py\nindex 7797b148d4..830065698c 100644\n--- a/Products/CMFPlone/controlpanel/browser/types.py\n+++ b/Products/CMFPlone/controlpanel/browser/types.py\n@@ -54,7 +54,7 @@ class TypesControlPanel(AutoExtensibleForm, form.EditForm):\n     form_name = _("Types settings")\n     control_panel_view = "content-controlpanel"\n     template = ViewPageTemplateFile(\'types.pt\')\n-    behavior_name = \'plone.app.versioningbehavior.behaviors.IVersionable\'\n+    behavior_name = \'plone.versioning\'\n \n     @button.buttonAndHandler(_(\'Save\'), name=\'save\')\n     def handleSave(self, action):\n@@ -94,7 +94,7 @@ def add_versioning_behavior(self, fti):\n         if self.behavior_name not in behaviors:\n             behaviors.append(self.behavior_name)\n         # locking must be turned on for versioning support on the type\n-        locking = \'plone.app.lockingbehavior.behaviors.ILocking\'\n+        locking = \'plone.locking\'\n         if locking not in behaviors:\n             behaviors.append(locking)\n \n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2021-07-28T09:35:59+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/20662d3565d973c27df64facee019132690b3639

update changelog

Files changed:
A news/3294.bugfix

b'diff --git a/news/3294.bugfix b/news/3294.bugfix\nnew file mode 100644\nindex 0000000000..c3a4c869bf\n--- /dev/null\n+++ b/news/3294.bugfix\n@@ -0,0 +1,2 @@\n+Use behavior-names instead of python-paths in types-controlpanel\n+[pbauer]\n\\ No newline at end of file\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2021-09-07T11:52:15+02:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/418aaeabe44178be1ea5d24d03db0f1e377b7092

renamed behavios in tests

Files changed:
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_types.py

b'diff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_types.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_types.py\nindex 57313133f2..ae275bde1a 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_types.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_types.py\n@@ -114,7 +114,7 @@ def test_disable_versioning_removes_behavior(self):\n         portal_types = self.portal.portal_types\n         doc_type = portal_types.Document\n         self.assertTrue(\n-            \'plone.app.versioningbehavior.behaviors.IVersionable\'\n+            \'plone.versioning\'\n             not in doc_type.behaviors)  # noqa\n \n     def test_enable_versioning_behavior_on_document(self):\n@@ -127,14 +127,14 @@ def test_enable_versioning_behavior_on_document(self):\n         portal_types = self.portal.portal_types\n         doc_type = portal_types.Document\n         self.assertTrue(\n-            \'plone.app.versioningbehavior.behaviors.IVersionable\'\n+            \'plone.versioning\'\n             not in doc_type.behaviors)  # noqa\n \n         self.browser.getControl(name=\'versionpolicy\').value = [\'manual\']\n         self.browser.getControl(name="form.button.Save").click()\n \n         self.assertTrue(\n-            \'plone.app.versioningbehavior.behaviors.IVersionable\'\n+            \'plone.versioning\'\n             in doc_type.behaviors)\n \n     def test_enable_versioning_behavior_on_file(self):\n@@ -149,20 +149,20 @@ def test_enable_versioning_behavior_on_file(self):\n \n         # File has no Versioning and no Locking on default, but needs it\n         self.assertTrue(\n-            \'plone.app.versioningbehavior.behaviors.IVersionable\'\n+            \'plone.versioning\'\n             not in file_type.behaviors)  # noqa\n         self.assertTrue(\n-            \'plone.app.lockingbehavior.behaviors.ILocking\'\n+            \'plone.locking\'\n             not in file_type.behaviors)  # noqa\n \n         self.browser.getControl(name=\'versionpolicy\').value = [\'manual\']\n         self.browser.getControl(\'Save\').click()\n \n         self.assertTrue(\n-            \'plone.app.versioningbehavior.behaviors.IVersionable\'\n+            \'plone.versioning\'\n             in file_type.behaviors)\n         self.assertTrue(\n-            \'plone.app.lockingbehavior.behaviors.ILocking\'\n+            \'plone.locking\'\n             in file_type.behaviors)\n \n     def test_dont_update_settings_when_switch_types(self):\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2021-09-07T12:33:35+02:00
Author: Peter Mathis (petschki) <petschki@users.noreply.github.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/f7d1232243ac6e3cd17fd4c34fda5f24da1cbc29

Merge branch 'master' into use-behavior-names

Files changed:
A Products/CMFPlone/controlpanel/browser/relations.py
A Products/CMFPlone/controlpanel/browser/relations_inspect.pt
A Products/CMFPlone/controlpanel/browser/relations_rebuild.pt
A Products/CMFPlone/controlpanel/tests/test_controlpanel_relations.py
A Products/CMFPlone/relationhelper.py
A SECURITY.md
A docs/HISTORY.rst
A news/3231.feature
A news/3297.feature
A news/3299.bugfix
A news/3303.bugfix
M CHANGES.rst
M Products/CMFPlone/browser/navigation.py
M Products/CMFPlone/controlpanel/browser/configure.zcml
M Products/CMFPlone/controlpanel/permissions.zcml
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_usergroups_siteadmin_role.py
M Products/CMFPlone/profiles/default/actions.xml
M Products/CMFPlone/profiles/default/controlpanel.xml
M Products/CMFPlone/tests/dummy.py
M Products/CMFPlone/tests/test_expressions.py
M news/3274.bugfix.1
M news/3274.bugfix.2
M setup.cfg
M setup.py
D docs/HISTORY.txt

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex a3ae16923b..541f7f2c78 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -1,6 +1,6 @@\n .. This file should contain the changes for the last release only, which\n    will be included on the package\'s page on pypi. All older entries are\n-   kept in HISTORY.txt\n+   kept in docs/HISTORY.rst\n \n Changelog\n =========\n@@ -11,654 +11,3 @@ Changelog\n    https://github.com/plone/plone.releaser/blob/master/ADD-A-NEWS-ITEM.rst\n \n .. towncrier release notes start\n-\n-5.2.2 (2020-08-16)\n-------------------\n-\n-Bug fixes:\n-\n-\n-- Release Plone 5.2.2 final.\n-  No changes with last release candidate, except that the versions will contain Products.isurlinportal 1.1.0 with a minor security hardening fix.\n-  [maurits] (#3510)\n-\n-\n-5.2.2rc3 (2020-08-16)\n----------------------\n-\n-Bug fixes:\n-\n-\n-- Return a Zope aware engine for page templates based on ``zope.pagetemplate`` instead of ``Products.PageTemplates``.\n-  Fixes possible problems with such templates, for example z3c.form ones, with Zope 4.4 and higher.\n-  See `issue 3141 <https://github.com/plone/Products.CMFPlone/issues/3141>`_.\n-  [maurits] (#3141)\n-- Depend on new package ``Products.isurlinportal``.\n-  This contains the ``isURLInPortal`` method that was split off from our ``URLTool``.\n-  See `issue 3150 <https://github.com/plone/Products.CMFPlone/issues/3150>`_.\n-  [maurits] (#3150)\n-- Redirection view: refactor our navigation root editing to a separate method ``edit_for_navigation_root``.\n-  Since Plone 5.2 the redirectiontool respects INavigationroot:\n-  with a manual redirect you cannot enter a path starting with ``/`` which \'escapes\' the NavigationRoot to the SiteRoot to link to another part of the Plone instance.\n-  This refactor makes it possible to override this method to return the redirection unchanged, brining back the pre Plone 5.2 behavior of the ``Products.RedirectionTool`` add-on.\n-  [maurits] (#3153)\n-- Control panel configlets: first check visibility, then check condition.\n-  Visibility is cheaper to check.\n-  Also fixes `bug 3154 <https://github.com/plone/Products.CMFPlone/issues/3154>`_.\n-  [maurits] (#3154)\n-\n-\n-5.2.2rc2 (2020-07-17)\n----------------------\n-\n-Bug fixes:\n-\n-\n-- Fix an issue in mail_password_template.pt in the message showing the ip to really try the request.REMOTE_ADDR variable if request.HTTP_X_FORWARDED_FOR is empty (when you\'re not behind apache or nginx).\n-  [vincentfretin] (#2949)\n-- mail_password form: Do not crash if the userid is not provided or the user doesn\'t have an email configured\n-  [frapell] (#3008)\n-\n-\n-5.2.2rc1 (2020-06-28)\n----------------------\n-\n-New features:\n-\n-\n-- Image caption support\n-  Allow ``figcaption`` in rich text editor as a valid tag.\n-  Add registry setting for plone.image_caption outputfilter transform.\n-  [thet] (#2887)\n-- Add markdown extension settings to markup control panel.\n-  [thomasmassmann] (#3076)\n-- Insert virtual custom.css bundle into the header after diazo bundle.\n-  Only add this when custom css is set in the theming control panel.\n-  [MrTango] (#3086)\n-\n-\n-Bug fixes:\n-\n-\n-- Change control panel item sorting and sort them by title\n-  [erral] (#721)\n-- Update HTMLFilter settings to enable TinyMCE styling features. See #2329, #2482, #2535\n-  [petschki] (#2482)\n-- If \'tinymce-content-css\' option is missing in themes manifest.cfg prevent unnecessary loading of a css at nav_root_url while editing a page.  [krissik] (#2861)\n-- Redirect (when possible) also ajax requests and do not return an unuseful body\n-  [ale-rt] (#3014)\n-- Merge Hotfix20200121 Check of the strength of password could be skipped. (#3021)\n-- Merge Hotfix20200121: isURLInPortal could be tricked into accepting malicious links. (#3021)\n-- Improve tests for the workflow tool method listWFStatesByTitle (#3032)\n-- Fix index_html on PortalRoot: ReplaceableWrapper did not work.\n-  [jensens] (#3060)\n-- Allow accessing ``plone_view.patterns_settings``.\n-  This was no problem until now, but a newer ``Zope/zope.tales/Chameleon``  is rightly stricter.\n-  [maurits] (#3066)\n-- Fix Python 3.8 ``time.clock`` removal in CatalogTool [jensens] (#3082)\n-- Fixed TypeError when adding both a group and a user to a group.\n-  [maurits] (#3084)\n-- Make the resource registry scripts output more robust when a bundle resource is missing. This prevents\n-  breaking your whole Plone site and access to the resource registry control panel after inserting\n-  one missing resource.\n-  [fredvd] (#3096)\n-- Bugfix for #3103\n-  [petschki] (#3105)\n-- Fixed saving ignored exception types in Python 3.  [maurits] (#3115)\n-\n-\n-5.2.1 (2020-01-13)\n-------------------\n-\n-New features:\n-\n-\n-- Add plone.staticresources to list of addons which are automatically upgraded if upgrade steps are available.\n-  [thet] (#2976)\n-\n-\n-Bug fixes:\n-\n-\n-- fix creation of Plone site not adding default Dexterity content types if example content not explicitily selected by user.\n-  [ericof] (#1318)\n-- fix default value for email msgid\n-  [erral] (#2790)\n-- Fix: PasswordResetView::getErrors is called, this ensures password is validated through RegistrationTool before attempting to reset password.\n-  [nazrulword] (#2917)\n-- Breadcrumbs: consider hidden folders when creating urls [ksuess] (#2935)\n-- Add Collection to the default_page_types list\n-  [erral] (#2956)\n-- Fix localization of "Site setup" in some control panels [vincentfretin] (#2958)\n-- Fix TTW Bundle compilation broken.\n-  [thet] (#2969)\n-- Do not save type settings in "content-controlpanel" when switching between types.\n-  [cekk] (#2986)\n-- Correctly fire events when user autologin after the password has been reset.\n-  [ericof] (#2993)\n-\n-\n-5.2.0 (2019-07-10)\n-------------------\n-\n-Bug fixes:\n-\n-\n-- Don\'t activate all sorting tabs when no sort option has been chosen.\n-  [gyst, rodfersou, jensens] (#1789)\n-- Fix test failures exposed in Python 3.8\n-  [pbauer] (#2903)\n-\n-\n-5.2rc5 (2019-06-27)\n--------------------\n-\n-New features:\n-\n-\n-- Add support for Python 3.8 [pbauer] (#2896)\n-\n-\n-Bug fixes:\n-\n-\n-- Add missing i18n:translate calls\n-  [erral] (#2891)\n-- Fix login-help layout on mobile.\n-  [jensens] (#2893)\n-\n-\n-5.2rc4 (2019-06-20)\n--------------------\n-\n-New features:\n-\n-\n-- Remove verifydb, it was moved to standalone package zodbverify.\n-  [jensens] (#2858)\n-\n-\n-Bug fixes:\n-\n-\n-- If specified in the registry, let the user autologin after the password has been reset (#2439)\n-- Allow empty ``default_page`` registry setting\n-  [petschki] (#2813)\n-- Always add ``data-default-sort`` attribute to search results.  [maurits] (#2854)\n-- Fix deprecation warnings.\n-  [jensens] (#2862)\n-- Use the shared \'Plone test setup\' and \'Plone test teardown\' keywords in Robot tests.\n-  [Rotonen] (#2864)\n-- Fix script resource parsing error because of self closing tags.\n-  [Netroxen] (#2870)\n-\n-\n-5.2rc3 (2019-05-04)\n--------------------\n-\n-New features:\n-\n-\n-- Allow filtering on date and manual/automatic in redirection controlpanel. (#2799)\n-- Add a button to export the alternative urls in redirection controlpanel. (#2799)\n-- Add a button to remove all alternative urls that match the filter.\n-  See `issue 2799 <https://github.com/plone/Products.CMFPlone/issues/2799>`_.\n-  [maurits] (#2799)\n-\n-\n-Bug fixes:\n-\n-\n-- gracefully handle tracebacks during addon installation\n-  [petschki] (#2228)\n-- Add workaround for the case when a inifite recusion in a page-template that uses the main-template crashes the instance instead of raising a RecursionError.\n-  [pbauer, esteele] (#2666)\n-- Fixed unstable Markup Control Panel robot test again.  [maurits] (#2809)\n-- add a missing space in an error message in the redirects control panel and replace "deffered" by "deferred" [vincentfretin] (#2821)\n-- Fixes: Cooking resources with non ASCII resulted in encoding error.\n-  Further, writing legacy resources resulted in ValueError. [jensens] (#2827)\n-- restore ``exclude_from_nav`` combined with ``show_excluded_items`` handling\n-  [petschki] (#2828)\n-- Fix DeprecationWarning in syndication-view. [jensens] (#2831)\n-- Fix malformed url when redirecting to external login. [ericof] (#2842)\n-- Make navigation (CatalogNavigationTabs) subclassing easier. [iham] (#2849)\n-\n-\n-5.2rc2 (2019-03-21)\n--------------------\n-\n-Bug fixes:\n-\n-\n-- Fix excluded items in navigation [ale-rt] (#2516)\n-- Add basic validators for the portal action controlpanel forms (#2689)\n-- Fix wrong msgids in link management control panel [erral] (#2788)\n-- Fix errors that abort the verification when debugging a DB with ./bin/instance verifydb -D.\n-  [pbauer] (#2792)\n-- Add summary of all errors when verifying a DB with ./bin/instance verifydb.\n-  [pbauer] (#2798)\n-- Fixed unstable SearchableText and Scenario Type querystring robot tests.  [maurits] (#2808)\n-- Fixed unstable Markup Control Panel and other robot tests.   [maurits] (#2809)\n-\n-\n-5.2rc1 (2019-03-04)\n--------------------\n-\n-New features:\n-\n-\n-- Views for title and description. [iham] (#2740)\n-- Display wsgi-state plus name and version of the server in the controlpanel\n-  [pbauer] (#2770)\n-- Enable dropdown-navigation for new sites by default. [pbauer] (#2772)\n-\n-\n-Bug fixes:\n-\n-\n-- Resolve circular dependency between `Products.CMFPlone` and `plone.i18n` by\n-  moving `ILanguageSchema` there. [sallner] (#2049)\n-- Use correct permission for mail controlpanel form so that Site Administrators\n-  can also edit. [fredvd] (#2688)\n-- Make linkintegrity robot test more reliable [MrTango] (#2752)\n-- Check only once if Products.ATContentTypes is available. [gforcada] (#2765)\n-- Fix redirection to `came_from` when url matches LOGIN_TEMPLATE_ID partly\n-  [petschki] (#2771)\n-\n-\n-5.2b1 (2019-02-13)\n-------------------\n-\n-Breaking changes:\n-\n-\n-- Factor out all static resources and the ``plone-compile-resources`` script\n-  into plone.staticresources. [thet] (#2542)\n-\n-\n-New features:\n-\n-\n-- PLIP 1486: Merge Products.RedirectionTool into core. Allow users to manage\n-  redirects on their site and aliases to content. See\n-  https://github.com/plone/Products.CMFPlone/issues/1486 [staeff, maurits]\n-  (#1486)\n-- Added multilevel dropdown navigation [agitator] (#2516)\n-- No longer mark special links by default. [pbauer] (#2736)\n-\n-\n-Bug fixes:\n-\n-\n-- Switched allowedRolesAndUsers indexer from \'View\' to the correct permission\n-  \'Access contents information\' for displaying metadata. \'View\' permission\n-  should be used on the item itself. The change should not matter for default\n-  Plone workflows, since they always use those permissions together. [agitator]\n-  (#260)\n-- deprecate catalog_get_all(catalog) in favor of catalog.getAllBrains()\n-  [pbauer] (#2258)\n-- Restore the possibility to sort catalog query results with multiple indexes\n-  (#2464)\n-- Review list portlet showed nothing to review with plone.app.multilingual, As\n-  WorkflowTool bypassed languages only for p.a.m<2.x or linguaplone. fixed and\n-  now compatible to both lang-bypassing methods. [iham] (#2595)\n-- Fixed fallback to default view when selected layout does not exist for\n-  Folder. [gbastien] (#2645)\n-- The patched init method for the class zope.sendmail.mailer.SMTPMailer has\n-  been updated, fixing a bug that was preventing to send emails. [ale-rt,\n-  nazrulworld] (#2665)\n-- a11y: Added role attribute for portalMessage [nzambello] (#2675)\n-- Fix several warnings shown when running tests on Python 3+. [gforcada]\n-  (#2683)\n-- fixed Python 3 related str decoding issue in breadcrumbs (#2694)\n-- Fixed unstable robot test Scenario: A page is opened to edit in TinyMCE.\n-  [maurits] (#2707)\n-\n-\n-5.2a2 (2018-12-30)\n-------------------\n-\n-New features:\n-\n-\n-- New robot tests for querystring in Collection type. Now almost all\n-  querystring types are robot tested. [llisa123] (#2489)\n-- Add ``load_async`` and ``load_defer`` attributes to resource registries\n-  bundle settings. When set, ``<script>`` tags are rendered with\n-  ``async="async"`` resp. ``defer="defer"`` attributes. You also need to empty\n-  the ``merge_with`` property of your bundle, because production bundles\n-  (``default.js`` and ``logged-in.js``) are never loaded with async or defer.\n-  The default.js includes jQuery and requirejs and those are needed at many\n-  places and therefore cannot be loaded asynchronously. Refs: #2649, #2657.\n-  [thet] (#2649)\n-\n-\n-Bug fixes:\n-\n-\n-- Delete ``fa_ir.js``. Keep ```fa_IR.js``. [maurits] (#2620)\n-- Forward port TinyMCE fixes from 5.1 [vangheem] (#2630)\n-- Fix robot test test_edit_user_schema: Fieldname was set duplicate (first by\n-  JS, then by robot). [jensens] (#2669)\n-\n-5.2a1 (2018-11-08)\n-------------------\n-\n-Breaking changes:\n-\n-- Removed generateUniqueId.py skins script (after it was added to Products.Archetypes).\n-  This script is no longer available outside Archetypes world.\n-  #1801\n-  [jensens]\n-\n-- Remove all dependencies on plone.app.controlpanel.\n-  Third party code need either to depend on plone.app.controlpanel 4.0,\n-  which is a backward compatibility package only, or also update to not depend on it anymore.\n-  [jensens]\n-\n-- Removed check_id.py skin script.  Replaced with utils.check_id function.\n-  #1801 and #2582.\n-  [maurits]\n-\n-- Removed my_worklist.py skin script. #1801\n-  [reinhardt]\n-\n-- Removed getObjectsFromPathList.py skin script. #1801\n-  [reinhardt]\n-\n-- Removed isExpired.py skin script. #1801\n-  [reinhardt]\n-\n-- Removed redirectToReferrer.py skin script. #1801\n-  [tlotze]\n-\n-- Removed enableHTTPCompression.py skin script. #1801\n-  [tlotze]\n-\n-- Removed setAuthCookie.py skin script. #1801\n-  [tlotze]\n-\n-- Stop configuring \'View History\' permission which was removed from Zope.\n-  [davisagli]\n-\n-- Removed legacy resource registries portal_css and portal_javascripts;\n-  no conditional handling.\n-  [ksuess]\n-\n-New features:\n-\n-- Factored out human_readable_size method for replacing getObjSize.py;\n-  removed getObjSize.py. #1801\n-  [reinhardt]\n-\n-- Update TinyMCE to 4.7.13\n-  [erral]\n-\n-- New browser view based login code - merged from plone.login (credits to esteele, pbauer, agitator, jensens, et al).\n-  `portal_skins/plone_login` is now gone, see PLIP #2092.\n-  Also, password reset view moved to login subfolder to keep things together.\n-  Some testbrowser based tests needed changes because of z3c.form based login form .\n-  The Plone specific, rarely used cross site __ac cookie SSO feature/hack was removed.\n-  In case somebody needs this, please make it an addon package.\n-  Better use a field proven, more secure way, like OAuth2, Shibboleth or someting similar.\n-  [jensens, et al]\n-\n-- Upgrade grunt + plugins to same versions as in\n-  mockup https://github.com/plone/mockup/pull/870\n-  [sunew]\n-\n-- Upgrade less in bower.json to the same version as already used\n-  in the generated package.json in compile_resources.py.\n-  [sunew]\n-\n-- Add utility-method safe_nativestring.\n-  [pbauer]\n-\n-- Rename safe_unicode to safe_text and safe_encode to safe_bytes. Keep old aliases.\n-  [pbauer]\n-- Add a ``bin/instance verifydb`` command which can be used to check\n-  that all records in the database can be successfully loaded.\n-  This is intended to help with verifying a database conversion\n-  from Python 2 to Python 3.\n-  [davisagli]\n-\n-Bug fixes:\n-\n-- Modernize robot keywords that use "Get Element Attribute"\n-  [ale-rt]\n-\n-- remove plone.app.folder dependency\n-  [petschki]\n-\n-- move GopipIndex Class to plone.folder\n-  [petschki]\n-\n-- Fixed getObjSize indexer for Python 3. #2526\n-  [reinhardt]\n-- Fix toolbar menu on mobile #2333.\n-- make groups_modify_roles test more robust.\n-  [tschorr]\n-\n--- Fix wrong CSS property to allow correct word-break.\n-  [tmassman]\n-\n- Fix toolbar menu on mobile #2333.\n-  [tmassman]\n-\n-- Removed the ``raiseUnauthorized`` skin script.\n-  If you use this, please do permission checking in your own Python code instead (likely in a browser view).\n-  Refs `issue 1801 <https://github.com/plone/Products.CMFPlone/issues/1801>`_.\n-  [maurits]\n-\n-- Remove the devdependencies from bower.json - they are just used for running tests in mockup, not here.\n-  [sunew]\n-\n-- Adapt tests to `Products.GenericSetup >= 2.0` thus requiring at least that\n-  version.\n-  [icemac]\n-\n-- Some tools from CMFCore are now utilities\n-  [pbauer]\n-\n-- Fix failing thememapper robot test after rebuild of thememapper bundle in p.a.theming PR 148\n-  [sunew]\n-\n-- Remove five.pt for Zope 4\n-  [jensens]\n-\n-- Changes for Zope 4 compatibility in maintenance controlpanel.\n-  [thet]\n-\n-- Render exceptions using an exception view instead of standard_error_message.\n-  [davisagli]\n-\n-- Remove old PlacelessTranslationService.\n-  [jensens, ksuess]\n-\n-- Fix controlpanel quickinstaller view:\n-  A not yet installed product must not return any upgrade info.\n-  [jensens]\n-\n-- Fix to make plone/plone.session#11 work:\n-  Make test for installation of  plone.session more explicit.\n-  [jensens]\n-\n-- Advanced Catalog Clear And Rebuild feature showed wrong processing time due to new queue processing.\n-  This was fixed bei calling ``processQueue()`` after indexing.\n-  [jensens]\n-\n-- Some nested `section id="edit-bar"` tag in folder_contents page #2322\n-  [terapyon]\n-\n-- Remove ``plone-generate-gruntfile`` (it is all available through ``plone-compile-resources``).\n-  [jensens]\n-\n-- Migrate from ``slimit`` to ``calmjs.parse`` for the JavaScript cooker #2616\n-  [metatoaster]\n-\n-\n-New Features:\n-\n-- Update to latest mockup\n-  [frapell]\n-\n-- Provide an utility ``dump_json_to_text`` that works both on Python 2.7 an Python 3.\n-  [ale-rt]\n-\n-- Prepare for Python 2 / 3 compatibility.\n-  [pbauer]\n-\n-- Fix imports to work with Python 3.\n-  [pbauer]\n-\n-- Mockup update.\n-  [thet]\n-\n-- add link to Plone.org VPAT accessibility statement\n-  [tkimnguyen]\n-\n-Bug Fixes:\n-\n-- Remove last legacy Javascript ``highlight-searchterms.js``.\n-  Removes also the skins folder ``plone_ecmascript``.\n-  It was broken for all (Google, other search engines, own live search);\n-  JS worked only when coming from Plone detailed search.\n-  [jensens]\n-\n-- Fix an undefined variable in a test helper function\n-  [ale-rt]\n-\n-- Let the ``combine-bundles`` import step also work when the ``IBundleRegistry`` keyword is not in ``registry.xml``, but in a ``registry`` directory.\n-  `Issue 2520 <https://github.com/plone/Products.CMFPlone/issues/2502>`_.\n-  [maurits]\n-\n-- Get rid of obsolete ``X-UA-Compatible`` header.\n-  [hvelarde]\n-\n-- Fix registration of ``robots.txt`` browser view to avoid ``AttributeError`` on Zope\'s root (fixes `#2052 <https://github.com/plone/Products.CMFPlone/issues/2052>`_).\n-  [hvelarde]\n-\n-- Get rid of obsolete ``X-UA-Compatible`` header.\n-  [hvelarde]\n-\n-- Add test for issue #2469.\n-  [jensens]\n-\n-- Fixed tests when IRichText behavior is used.\n-  IRichText -> IRichTextBehavior\n-  This is a follow up to `issue 476 <https://github.com/plone/plone.app.contenttypes/issues/476>`_.\n-  [iham]\n-\n-- Remove unused mail_password.py from skins/plone_scripts\n-  [agitator]\n-\n-- Hide ``plone.app.querystring`` from add-ons control panel.\n-  Fixes `issue 2426 <https://github.com/plone/Products.CMFPlone/issues/2426>`_.\n-  [maurits]\n-\n-- Fix tests after changes in disallowed object ids in Zope.\n-  [pbauer]\n-\n-- Do not include too new upgrades when upgrading Plone Site.\n-  Otherwise the Plone Site ends up at a newer version that the filesystem code supports,\n-  giving an error when upgrading, and resulting in possibly missed upgrades later.\n-  Fixes `issue 2377 <https://github.com/plone/Products.CMFPlone/issues/2377>`_.\n-  [maurits]\n-\n-- After site creation, do not render the add-site template: we redirect anyway.\n-  [maurits]\n-\n-- Unflakied a unit test.\n-  [Rotonen]\n-\n-- Do not show TinyMCE menu items with no subitems, Fixes #2245.\n-  [mrsaicharan1]\n-\n-- Fix Exception-View when main_template can\'t be rendered. Fixes #2325.\n-  [pbauer]\n-\n-- Render exceptions as text, not html to fix format of infos after traceback.\n-  Display as <pre> for basic and normal error templates.\n-  [pbauer]\n-\n-- Removed extra methods and tests for CMFQuickInstallerTool.\n-  Moved those to the Products.CMFQuickInstallerTool package.\n-  [maurits]\n-\n-- Added tests for add-ons control panel.\n-  Add a link to the Site Setup.\n-  Let ``get_product_version`` work when you call it with ``CMFPlacefulWorkflow`` too.\n-  [maurits]\n-\n-- Fix bad domain for translating password reset mails.\n-  [allusa]\n-\n-- Ignore invalid ``sort_on`` parameters in catalog ``searchResults``.\n-  Otherwise you get a ``CatalogError``.\n-  I get crazy sort_ons like \'194\' or \'null\'.\n-  [maurits]\n-\n-- Register the ``ExceptionView`` for the unspecific ``zope.interface.Interface`` for easier overloading.\n-  Fixes a problem, where plone.rest couldn\'t overload the ExceptionView with an adapter bound to ``plone.rest.interfaces.IAPIRequest``.\n-  [thet]\n-\n-- Fixed linkintegrity robot tests.  [maurits]\n-\n-- Fixed flaky actions controlpanel tests by waiting longer.  [maurits]\n-\n-- Require AccessControl 4.0b1 so ``guarded_getitem`` is used.\n-  Part of PloneHotfix20171128.  [maurits]\n-\n-- Improved isURLInPortal according to PloneHotfix20171128.\n-  Accept only http/https, and doubly check escaped urls.  [maurits]\n-\n-- Fix exception view when called on Zope-root. Fixes #2203.\n-  [pbauer]\n-\n-- added CSS hyphenation support for toolbar for avoiding ugly text wrapping\n-  Fixes `issue 723 <https://github.com/plone/Products.CMFPlone/issues/723>`_.\n-  [ajung]\n-\n-- Increase compatibility with Python3.\n-  [ale-rt]\n-\n-- Show example for expression in actions control panel.\n-  [maurits]\n-\n-- Fix test where you cannot instanciate a PythonScript with the id script.\n-  [pbauer]\n-\n-- Set the status of an exception view according to the exception type.\n-  Fixes `issue 2187 <https://github.com/plone/Products.CMFPlone/issues/2187>`_.\n-  [maurits]\n-\n-- Use absolute imports for Python3 compatibility\n-  [ale-rt]\n-\n-- Fallback for missing date in DefaultDublinCoreImpl no longer relies on\n-  bobobase_modification_time.\n-  [pbauer]\n-\n-- Display real version of Zope, not of the empty meta-package Zope2.\n-  [pbauer]\n-\n-- Add zcml-condition plone-52 for conditional configuration.\n-  [pbauer]\n-\n-- Use getSite in set_own_login_name to get the portals acl_users.\n-  [pbauer]\n-\n-- Fix test issue with rarely used multi-site SSO feature.\n-  ``came_from`` on ``@register`` link would point to wrong site.\n-  Completly removed ``came_from`` on ``@@register`` link.\n-  It does not make much sense anyway and we test nowhere if there is a came_from on that link.\n-  [jensens]\n-\n-- Remove depricated ``type`` attribute from ``script`` and ``link`` tags.\n-  [newbazz]\n-\n-- Render tinymce attributes correctly in Python3.\n-  [sallner]\n-\n-- Remove unresolved dependencies of plone-final to cssregistry and jsregistry.\n-  [pbauer]\ndiff --git a/Products/CMFPlone/browser/navigation.py b/Products/CMFPlone/browser/navigation.py\nindex 2c57508c21..6a86610057 100644\n--- a/Products/CMFPlone/browser/navigation.py\n+++ b/Products/CMFPlone/browser/navigation.py\n@@ -45,7 +45,7 @@ def get_view_url(context):\n     item_url = get_url(context)\n     name = get_id(context)\n \n-    if getattr(context, \'portal_type\', {}) in view_action_types:\n+    if item_url and getattr(context, \'portal_type\', {}) in view_action_types:\n         item_url += \'/view\'\n         name += \'/view\'\n \ndiff --git a/Products/CMFPlone/controlpanel/browser/configure.zcml b/Products/CMFPlone/controlpanel/browser/configure.zcml\nindex 8e2cafd0b6..48dc844325 100644\n--- a/Products/CMFPlone/controlpanel/browser/configure.zcml\n+++ b/Products/CMFPlone/controlpanel/browser/configure.zcml\n@@ -321,4 +321,22 @@\n       allowed_attributes="redirects view_url"\n       />\n \n+  <!-- Relations -->\n+\n+  <browser:page\n+      name="inspect-relations"\n+      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      class=".relations.RelationsInspectControlpanel"\n+      template="relations_inspect.pt"\n+      permission="Products.CMFPlone.InspectRelations"\n+      />\n+\n+  <browser:page\n+      name="rebuild-relations"\n+      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      class=".relations.RelationsRebuildControlpanel"\n+      template="relations_rebuild.pt"\n+      permission="cmf.ManagePortal"\n+      />\n+\n </configure>\ndiff --git a/Products/CMFPlone/controlpanel/browser/relations.py b/Products/CMFPlone/controlpanel/browser/relations.py\nnew file mode 100644\nindex 0000000000..03aa2141dc\n--- /dev/null\n+++ b/Products/CMFPlone/controlpanel/browser/relations.py\n@@ -0,0 +1,93 @@\n+from collections import defaultdict\n+from operator import itemgetter\n+from plone.registry.interfaces import IRegistry\n+from Products.CMFPlone import PloneMessageFactory as _\n+from Products.CMFPlone.relationhelper import get_relations_stats\n+from Products.CMFPlone.relationhelper import rebuild_relations\n+from Products.Five.browser import BrowserView\n+from Products.statusmessages.interfaces import IStatusMessage\n+from zc.relation.interfaces import ICatalog\n+from zope.annotation.interfaces import IAnnotations\n+from zope.component import getUtility\n+from zope.component import queryUtility\n+from zope.intid.interfaces import IIntIds\n+from zope.intid.interfaces import IntIdMissingError\n+\n+import logging\n+\n+logger = logging.getLogger(__name__)\n+\n+\n+class RelationsRebuildControlpanel(BrowserView):\n+\n+    def __call__(self, rebuild=False, flush_and_rebuild_intids=False):\n+        self.done = False\n+        if rebuild:\n+            rebuild_relations(flush_and_rebuild_intids=flush_and_rebuild_intids)\n+            self.done = True\n+            IStatusMessage(self.request).addStatusMessage(\n+                _(\'Finished! See log for details.\'), \'info\')\n+\n+        self.relations_stats, self.broken = get_relations_stats()\n+        return self.index()\n+\n+\n+class RelationsInspectControlpanel(BrowserView):\n+\n+    def __call__(self, relation=None, inspect_backrelation=False):\n+        self.relation = relation or self.request.get(\'relation\')\n+        self.inspect_backrelation = inspect_backrelation or self.request.get(\'inspect_backrelation\')\n+\n+        self.relations = []\n+        self.relations_stats, self.broken = get_relations_stats()\n+        registry = getUtility(IRegistry)\n+        view_action = registry[\'plone.types_use_view_action_in_listings\']\n+\n+        if not self.relation:\n+            IStatusMessage(self.request).addStatusMessage(\n+                _(\'Please select a relation\'), \'info\')\n+            return self.index()\n+\n+        intids = queryUtility(IIntIds)\n+        relation_catalog = getUtility(ICatalog)\n+        query = {\'from_attribute\': self.relation}\n+        info = defaultdict(list)\n+\n+        # relations: column_1 = source, column_2 = target(s)\n+        # backrelation: column_1 = target, column_2 source(s)\n+        for rel in relation_catalog.findRelations(query):\n+            if rel.isBroken():\n+                continue\n+            try:\n+                hasattr(rel, \'from_id\')\n+                hasattr(rel, \'to_id\')\n+            except IntIdMissingError:\n+                continue\n+            if self.inspect_backrelation:\n+                info[rel.to_id].append(rel.from_id)\n+            else:\n+                info[rel.from_id].append(rel.to_id)\n+\n+        for column_1_intid in info:\n+            obj = intids.getObject(column_1_intid)\n+            use_view_action = obj.portal_type in view_action\n+            url = obj.absolute_url() + \'/view\' if use_view_action else obj.absolute_url()\n+            item = {}\n+            item[\'column_1\'] = {\n+                \'title\': obj.title_or_id(),\n+                \'url\': url,\n+                \'portal_type\': obj.portal_type,\n+            }\n+            item[\'column_2\'] = []\n+            for column_2_intid in info[column_1_intid]:\n+                obj = intids.getObject(column_2_intid)\n+                use_view_action = obj.portal_type in view_action\n+                url = obj.absolute_url() + \'/view\' if use_view_action else obj.absolute_url()\n+                item[\'column_2\'].append({\n+                    \'title\': obj.title_or_id(),\n+                    \'url\': url,\n+                    \'portal_type\': obj.portal_type,\n+                    })\n+            self.relations.append(item)\n+        self.relations.sort(key=lambda x: x[\'column_1\'][\'title\'])\n+        return self.index()\ndiff --git a/Products/CMFPlone/controlpanel/browser/relations_inspect.pt b/Products/CMFPlone/controlpanel/browser/relations_inspect.pt\nnew file mode 100644\nindex 0000000000..d5771e0a50\n--- /dev/null\n+++ b/Products/CMFPlone/controlpanel/browser/relations_inspect.pt\n@@ -0,0 +1,134 @@\n+<html xmlns="http://www.w3.org/1999/xhtml"\n+      xml:lang="en"\n+      xmlns:tal="http://xml.zope.org/namespaces/tal"\n+      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+      xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+      lang="en"\n+      metal:use-macro="context/prefs_main_template/macros/master"\n+      i18n:domain="plone">\n+\n+<body>\n+\n+  <metal:main metal:fill-slot="prefs_configlet_main" i18n:domain="plone"\n+      tal:define="inspect_backrelation python: view.inspect_backrelation;\n+                  relation python: view.relation;">\n+\n+      <a id="setup-link" class="link-parent"\n+         tal:attributes="href string:$portal_url/@@overview-controlpanel"\n+         i18n:translate="">\n+          Site Setup\n+      </a>\n+\n+    <header>\n+      <h1 class="documentFirstHeading"\n+          tal:condition="python: not inspect_backrelation">\n+        <span i18n:translate="">Inspect relations</span>\n+        <strong tal:content="python: relation">relation</strong>\n+      </h1>\n+\n+      <h1 class="documentFirstHeading"\n+          tal:condition="python: inspect_backrelation">\n+        <span i18n:translate="">Inspect backrelations</span>\n+        <strong tal:content="python: relation">backrelation</strong>\n+      </h1>\n+\n+    </header>\n+\n+    <div id="content-core"\n+         tal:define="relations_stats python: view.relations_stats">\n+\n+      <div tal:condition="python: view.broken"\n+           class="portalMessage warning alert alert-warning" role="alert"\n+           i18n:translate="">\n+             <strong>Warning!</strong> You have broken relations!\n+             You can <a href="@@rebuild_relations">inspect and rebuild all relations</a>.\n+      </div>\n+\n+      <form id="relationinfo" method="post" action="@@inspect-relations" enctype="multipart/form-data">\n+\n+        <div class="mb-3 field">\n+          <select class="form-select" aria-label="Default select example" name="relation" id="relation">\n+            <option value="" i18n:translate="">Select a relation</option>\n+            <tal:rels tal:repeat="from_attribute python: sorted(relations_stats)">\n+              <option tal:attributes="value python: from_attribute;\n+                                      selected python: relation == from_attribute"\n+                      tal:content="python:\'{} ({})\'.format(from_attribute, relations_stats[from_attribute])">\n+                  relationname (amount)\n+              </option>\n+            </tal:rels>\n+          </select>\n+        </div>\n+\n+        <div class="mb-3 field">\n+          <div class="form-check" id="inspect_backrelation">\n+            <input id="inspect-backrelation"\n+                   name="inspect_backrelation"\n+                   class="form-check-input single-checkbox-bool-widget bool-field"\n+                   value="selected"\n+                   type="checkbox"\n+                   checked="checked"\n+                   tal:attributes="checked python: \'checked\' if inspect_backrelation else \'\'">\n+            <label for="inspect-backrelation"\n+                   class="form-check-label"\n+                   i18n:translate="">\n+              Show backrelations\n+            </label>\n+            <div class="form-text" i18n:translate="">Display relations grouped by their target.</div>\n+          </div>\n+        </div>\n+\n+        <button class="context btn btn-primary" type="submit" name="submit" value="submit" i18n:translate="">Inspect</button>\n+      </form>\n+\n+      <table class="listing table table-striped"\n+             tal:condition="python:view.relations">\n+        <thead>\n+          <tr tal:condition="python: not inspect_backrelation">\n+            <th i18n:translate="">Source</th>\n+            <th>&rarr;</th>\n+            <th i18n:translate="">Target(s)</th>\n+          </tr>\n+\n+          <tr tal:condition="python: inspect_backrelation">\n+            <th i18n:translate="">Target</th>\n+            <th>&larr;</th>\n+            <th i18n:translate="">Source(s)</th>\n+          </tr>\n+        </thead>\n+        <tbody>\n+          <tr tal:repeat="item python:view.relations">\n+            <td>\n+              <a tal:attributes="href python:item[\'column_1\'][\'url\'];\n+                                 title python:item[\'column_1\'][\'portal_type\'];"\n+                 tal:content="python:item[\'column_1\'][\'title\']">\n+                Object\n+              </a>\n+            </td>\n+\n+            <td tal:condition="python: not inspect_backrelation">&rarr;</td>\n+            <td tal:condition="python: inspect_backrelation">&larr;</td>\n+            <td>\n+              <ul>\n+                <li tal:repeat="target python:item[\'column_2\']">\n+                  <a href=""\n+                     tal:attributes="href python:target[\'url\'];\n+                                     title python:target[\'portal_type\']; "\n+                     tal:content="python:target[\'title\']">\n+                    Target\n+                  </a>\n+                </li>\n+              </ul>\n+            </td>\n+          </tr>\n+        </tbody>\n+      </table>\n+\n+      <p><a href="@@rebuild-relations" i18n:translate="">Inspect and rebuild all relations</a>.</p>\n+\n+    </div>\n+\n+  </metal:main>\n+\n+</body>\n+\n+</html>\ndiff --git a/Products/CMFPlone/controlpanel/browser/relations_rebuild.pt b/Products/CMFPlone/controlpanel/browser/relations_rebuild.pt\nnew file mode 100644\nindex 0000000000..5007082020\n--- /dev/null\n+++ b/Products/CMFPlone/controlpanel/browser/relations_rebuild.pt\n@@ -0,0 +1,105 @@\n+<html xmlns="http://www.w3.org/1999/xhtml"\n+      xml:lang="en"\n+      xmlns:tal="http://xml.zope.org/namespaces/tal"\n+      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+      xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+      lang="en"\n+      metal:use-macro="context/prefs_main_template/macros/master"\n+      i18n:domain="plone">\n+\n+<body>\n+\n+  <metal:main metal:fill-slot="prefs_configlet_main">\n+\n+      <a id="setup-link" class="link-parent"\n+         tal:attributes="href string:$portal_url/@@overview-controlpanel"\n+         i18n:translate="">\n+          Site Setup\n+      </a>\n+\n+    <header>\n+      <h1 class="documentFirstHeading" i18n:translate="">Rebuild relations</h1>\n+    </header>\n+\n+    <div id="content-core">\n+\n+      <span tal:condition="python:view.done" i18n:translate="">Success!</span>\n+      <h3 i18n:translate="">\n+         Current relations in the relation catalog\n+      </h3>\n+\n+      <table class="listing table table-striped"\n+            tal:define="relations_stats python: getattr(view, \'relations_stats\', None)"\n+            tal:condition="python: relations_stats">\n+        <thead>\n+          <tr>\n+            <th i18n:translate="">Relation</th>\n+            <th i18n:translate="">Amount</th>\n+          </tr>\n+        </thead>\n+        <tbody>\n+          <tr tal:repeat="item python: sorted(relations_stats)">\n+            <td>\n+              <a href=""\n+                 target="_blank"\n+                 tal:attributes="href python:\'@@inspect-relations?relation={}\'.format(item)"\n+                 tal:content="python:item"\n+                 title="Inspect relations">\n+               Type\n+              </a>\n+            </td>\n+            <td tal:content="python:relations_stats[item]">Amount</td>\n+          </tr>\n+        </tbody>\n+      </table>\n+\n+      <h3 i18n:translate="">Common relations:</h3>\n+      <dl>\n+        <dt>relatedItems</dt>\n+        <dd i18n:translate="">Relations between content using the default "Related items" field</dd>\n+\n+        <dt>isReferencing</dt>\n+        <dd i18n:translate="">Linkintegrity relations (source has a html-link to target)</dd>\n+\n+        <dt>iterate-working-copy</dt>\n+        <dd i18n:translate="">Relation from content to a working copy (using plone.app.iterate)</dd>\n+\n+        <dt>staging-working-copy</dt>\n+        <dd i18n:translate="">Outdated relation from content to a working copy (using plone.app.stagingbehavior)</dd>\n+\n+        <dt>(broken)</dt>\n+        <dd i18n:translate="">Either source or target no longer exist</dd>\n+\n+        <dt><i>all other</i></dt>\n+        <dd i18n:translate="">Custom attribute/fieldname used to describe the relation</dd>\n+      </dl>\n+\n+      <form id="rebuild_relations" method="post" action="@@rebuild-relations" enctype="multipart/form-data">\n+        <h3 i18n:translate="">Purge and rebuild relation-catalog</h3>\n+        <p i18n:translate="">Clicking here will do the following:</p>\n+        <ul>\n+          <li i18n:translate="">Get all relations from zc.relation catalog and store them in a annotation on the portal.</li>\n+          <li i18n:translate="">Remove all entries form zc.relation catalog.</li>\n+          <li i18n:translate="">Clean up or flush and rebuild intids - this depends on your selection below</li>\n+          <li i18n:translate="">Restore relations from the annotation on the portal.</li>\n+        </ul>\n+\n+        <div class="form-check">\n+          <input class="form-check-input" type="checkbox" name="flush_and_rebuild_intids" id="flush_intids">\n+          <label class="form-check-label" for="flush_intids" i18n:translate="">Flush and rebuild intids</label>\n+          <p i18n:translate="">\n+             This will delete all intids and create new one.<br/>\n+             Warning: If you have a lot of relations this can take some time. Check the log for details!<br/>\n+             If you have relations on tiles, flushing and rebuilding intids will destroy them b/c intids changed.\n+          </p>\n+        </div>\n+        <button class="context btn btn-danger" type="submit" name="rebuild" value="rebuild" i18n:translate="">Rebuild</button>\n+\n+      </form>\n+    </div>\n+\n+  </metal:main>\n+\n+</body>\n+\n+</html>\ndiff --git a/Products/CMFPlone/controlpanel/permissions.zcml b/Products/CMFPlone/controlpanel/permissions.zcml\nindex 7c128c1307..249aeb6c71 100644\n--- a/Products/CMFPlone/controlpanel/permissions.zcml\n+++ b/Products/CMFPlone/controlpanel/permissions.zcml\n@@ -79,4 +79,10 @@\n     <role name="Site Administrator"/>\n   </permission>\n \n+  <permission id="Products.CMFPlone.InspectRelations"\n+              title="Inspect Relations">\n+    <role name="Manager"/>\n+    <role name="Site Administrator"/>\n+  </permission>\n+\n </configure>\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_usergroups_siteadmin_role.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_usergroups_siteadmin_role.py\nindex cf4edb6e30..5b5dea724e 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_usergroups_siteadmin_role.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_usergroups_siteadmin_role.py\n@@ -7,7 +7,6 @@\n from plone.testing.zope import Browser\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n-from io import StringIO\n from urllib.parse import urlencode\n \n import re\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_relations.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_relations.py\nnew file mode 100644\nindex 0000000000..07c0d232ec\n--- /dev/null\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_relations.py\n@@ -0,0 +1,155 @@\n+from persistent.list import PersistentList\n+from plone.app.testing import TEST_USER_ID, setRoles\n+from Products.CMFPlone.controlpanel.browser.relations import get_relations_stats\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n+from z3c.relationfield import RelationValue\n+from zope.component import getMultiAdapter\n+from zope.component import getUtility\n+from zope.intid.interfaces import IIntIds\n+from zope.lifecycleevent import modified\n+\n+import unittest\n+\n+\n+class TestRelationsControlpanel(unittest.TestCase):\n+\n+    layer = PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n+\n+    def setUp(self):\n+        self.portal = self.layer[\'portal\']\n+        self.request = self.layer[\'request\']\n+        setRoles(self.portal, TEST_USER_ID, (\'Manager\',))\n+\n+    def test_relations_stats(self):\n+        self.portal.invokeFactory(\'Document\', id=\'doc1\', title=\'doc1\')\n+        doc1 = self.portal[\'doc1\']\n+        self.portal.invokeFactory(\'Document\', id=\'doc2\', title=\'doc2\')\n+        doc2 = self.portal[\'doc2\']\n+        intids = getUtility(IIntIds)\n+        doc1.relatedItems = PersistentList()\n+        doc1.relatedItems.append(RelationValue(intids.getId(doc2)))\n+        modified(doc1)\n+        # TODO: simplify when relation-support is merged into plone.api\n+        # api.relation.create(doc1, doc2, \'relatedItems\')\n+\n+        stats, broken = get_relations_stats()\n+        self.assertEqual(dict(stats), {\'relatedItems\': 1})\n+        self.assertEqual(dict(broken), {})\n+        view = getMultiAdapter((self.portal, self.request), name=\'inspect-relations\')\n+        self.assertTrue(view())\n+        self.assertTrue(view(relation=\'relatedItems\'))\n+\n+    def test_relations_stats_broken(self):\n+        self.portal.invokeFactory(\'Document\', id=\'doc1\', title=\'doc1\')\n+        doc1 = self.portal[\'doc1\']\n+        self.portal.invokeFactory(\'Document\', id=\'doc2\', title=\'doc2\')\n+        doc2 = self.portal[\'doc2\']\n+        self.portal.invokeFactory(\'Document\', id=\'doc3\', title=\'doc3\')\n+        doc3 = self.portal[\'doc3\']\n+\n+        intids = getUtility(IIntIds)\n+        doc1.relatedItems = PersistentList()\n+        doc1.relatedItems.append(RelationValue(intids.getId(doc2)))\n+        doc1.relatedItems.append(RelationValue(intids.getId(doc3)))\n+        modified(doc1)\n+        # api.relation.create(doc1, doc2, \'relatedItems\')\n+        # api.relation.create(doc1, doc3, \'relatedItems\')\n+\n+        self.portal._delObject(\'doc2\')\n+        stats, broken = get_relations_stats()\n+        self.assertEqual(dict(stats), {\'relatedItems\': 1})\n+        self.assertEqual(dict(broken), {\'relatedItems\': 1})\n+        view = getMultiAdapter((self.portal, self.request), name=\'inspect-relations\')\n+        self.assertTrue(view())\n+        self.assertTrue(view(relation=\'relatedItems\'))\n+\n+    def test_rebuild_relations(self):\n+        self.portal.invokeFactory(\'Document\', id=\'doc1\', title=\'doc1\')\n+        doc1 = self.portal[\'doc1\']\n+        self.portal.invokeFactory(\'Document\', id=\'doc2\', title=\'doc2\')\n+        doc2 = self.portal[\'doc2\']\n+        self.portal.invokeFactory(\'Document\', id=\'doc3\', title=\'doc3\')\n+        doc3 = self.portal[\'doc3\']\n+        intids = getUtility(IIntIds)\n+        doc1_intid = intids.getId(doc1)\n+        doc2_intid = intids.getId(doc2)\n+        doc3_intid = intids.getId(doc3)\n+\n+        doc1.relatedItems = PersistentList()\n+        doc1.relatedItems.append(RelationValue(doc2_intid))\n+        doc1.relatedItems.append(RelationValue(doc3_intid))\n+        modified(doc1)\n+        # api.relation.create(doc1, doc2, \'relatedItems\')\n+        # api.relation.create(doc1, doc3, \'relatedItems\')\n+\n+        stats, broken = get_relations_stats()\n+        self.assertEqual(dict(stats), {\'relatedItems\': 2})\n+        self.assertEqual(dict(broken), {})\n+\n+        view = getMultiAdapter((self.portal, self.request), name=\'rebuild-relations\')\n+        results = view(rebuild=True)\n+\n+        # relations are the same after a rebuild\n+        stats, broken = get_relations_stats()\n+        self.assertEqual(dict(stats), {\'relatedItems\': 2})\n+        self.assertEqual(dict(broken), {})\n+\n+        # intids are not changed\n+        doc1_intid_after = intids.getId(doc1)\n+        doc2_intid_after = intids.getId(doc2)\n+        doc3_intid_after = intids.getId(doc3)\n+        self.assertEqual(doc1_intid, doc1_intid_after)\n+        self.assertEqual(doc2_intid, doc2_intid_after)\n+        self.assertEqual(doc3_intid, doc3_intid_after)\n+\n+        # break a relation\n+        self.portal._delObject(\'doc2\')\n+\n+        stats, broken = get_relations_stats()\n+        self.assertEqual(dict(stats), {\'relatedItems\': 1})\n+        self.assertEqual(dict(broken), {\'relatedItems\': 1})\n+\n+        # broken relations are gone after rebuilding\n+        view = getMultiAdapter((self.portal, self.request), name=\'rebuild-relations\')\n+        results = view(rebuild=True)\n+        stats, broken = get_relations_stats()\n+        self.assertEqual(dict(stats), {\'relatedItems\': 1})\n+        self.assertEqual(dict(broken), {})\n+\n+    def test_rebuild_relations_with_intid(self):\n+        self.portal.invokeFactory(\'Document\', id=\'doc1\', title=\'doc1\')\n+        doc1 = self.portal[\'doc1\']\n+        self.portal.invokeFactory(\'Document\', id=\'doc2\', title=\'doc2\')\n+        doc2 = self.portal[\'doc2\']\n+        self.portal.invokeFactory(\'Document\', id=\'doc3\', title=\'doc3\')\n+        doc3 = self.portal[\'doc3\']\n+        intids = getUtility(IIntIds)\n+        doc1_intid = intids.getId(doc1)\n+        doc2_intid = intids.getId(doc2)\n+        doc3_intid = intids.getId(doc3)\n+        doc1.relatedItems = PersistentList()\n+        doc1.relatedItems.append(RelationValue(doc2_intid))\n+        doc1.relatedItems.append(RelationValue(doc3_intid))\n+        modified(doc1)\n+        # api.relation.create(doc1, doc2, \'relatedItems\')\n+        # api.relation.create(doc1, doc3, \'relatedItems\')\n+\n+        stats, broken = get_relations_stats()\n+        self.assertEqual(dict(stats), {\'relatedItems\': 2})\n+        self.assertEqual(dict(broken), {})\n+\n+        view = getMultiAdapter((self.portal, self.request), name=\'rebuild-relations\')\n+        results = view(rebuild=True, flush_and_rebuild_intids=True)\n+\n+        # relations are the same after a rebuild\n+        stats, broken = get_relations_stats()\n+        self.assertEqual(dict(stats), {\'relatedItems\': 2})\n+        self.assertEqual(dict(broken), {})\n+\n+        # intids are now changed\n+        doc1_intid_after = intids.getId(doc1)\n+        doc2_intid_after = intids.getId(doc2)\n+        doc3_intid_after = intids.getId(doc3)\n+        self.assertNotEqual(doc1_intid, doc1_intid_after)\n+        self.assertNotEqual(doc2_intid, doc2_intid_after)\n+        self.assertNotEqual(doc3_intid, doc3_intid_after)\ndiff --git a/Products/CMFPlone/profiles/default/actions.xml b/Products/CMFPlone/profiles/default/actions.xml\nindex 9d23e6f2a8..18f0a826bf 100644\n--- a/Products/CMFPlone/profiles/default/actions.xml\n+++ b/Products/CMFPlone/profiles/default/actions.xml\n@@ -101,7 +101,7 @@\n    <property name="icon_expr">string:toolbar-action/history</property>\n    <property name="available_expr"></property>\n    <property name="permissions">\n-    <element value="View"/>\n+    <element value="Modify portal content"/>\n    </property>\n    <property name="visible">True</property>\n   </object>\ndiff --git a/Products/CMFPlone/profiles/default/controlpanel.xml b/Products/CMFPlone/profiles/default/controlpanel.xml\nindex 6507e38c31..05f46d25ed 100644\n--- a/Products/CMFPlone/profiles/default/controlpanel.xml\n+++ b/Products/CMFPlone/profiles/default/controlpanel.xml\n@@ -213,4 +213,13 @@\n     i18n:attributes="title">\n   <permission>Manage Portal Aliases</permission>\n  </configlet>\n+ <configlet title="Relations" action_id="inspectrelations"\n+    icon_expr="string:share-fill"\n+    appId="Relations" category="plone-content"\n+    condition_expr=""\n+    url_expr="string:${portal_url}/@@inspect-relations"\n+    visible="True"\n+    i18n:attributes="title">\n+  <permission>Inspect Relations</permission>\n+ </configlet>\n </object>\ndiff --git a/Products/CMFPlone/relationhelper.py b/Products/CMFPlone/relationhelper.py\nnew file mode 100644\nindex 0000000000..d0ff347abd\n--- /dev/null\n+++ b/Products/CMFPlone/relationhelper.py\n@@ -0,0 +1,311 @@\n+from collections import Counter\n+from collections import defaultdict\n+from five.intid.intid import addIntIdSubscriber\n+from plone.app.iterate.dexterity import ITERATE_RELATION_NAME\n+from plone.app.iterate.dexterity.relation import StagingRelationValue\n+from plone.app.linkintegrity.handlers import modifiedContent\n+from plone.app.linkintegrity.utils import referencedRelationship\n+from plone.app.relationfield.event import update_behavior_relations\n+from plone.app.uuid.utils import uuidToObject\n+from plone.dexterity.interfaces import IDexterityContent\n+from plone.dexterity.utils import iterSchemataForType\n+from Products.CMFCore.interfaces import IContentish\n+from Products.CMFPlone import PloneMessageFactory as _\n+from z3c.relationfield import event\n+from z3c.relationfield import RelationValue\n+from z3c.relationfield.event import updateRelations\n+from z3c.relationfield.schema import Relation\n+from z3c.relationfield.schema import RelationChoice\n+from z3c.relationfield.schema import RelationList\n+from zc.relation.interfaces import ICatalog\n+from zope.annotation.interfaces import IAnnotations\n+from zope.component import getUtility\n+from zope.component import queryUtility\n+from zope.component.hooks import getSite\n+from zope.intid.interfaces import IIntIds\n+from zope.intid.interfaces import ObjectMissingError\n+\n+import logging\n+\n+logger = logging.getLogger(__name__)\n+\n+RELATIONS_KEY = \'ALL_REFERENCES\'\n+\n+\n+def rebuild_relations(context=None, flush_and_rebuild_intids=False):\n+    store_relations()\n+    purge_relations()\n+    if flush_and_rebuild_intids:\n+        flush_intids()\n+        rebuild_intids()\n+    else:\n+        cleanup_intids()\n+    restore_relations()\n+\n+\n+def get_relations_stats():\n+    info = defaultdict(int)\n+    broken = defaultdict(int)\n+    relation_catalog = getUtility(ICatalog)\n+    for token in relation_catalog.findRelationTokens():\n+        try:\n+            rel = relation_catalog.resolveRelationToken(token)\n+        except ObjectMissingError:\n+            broken[\'Object is missing\'] += 1\n+            logger.info(\'Token {} has no object.\'.format(token))\n+            continue\n+\n+        if rel.isBroken():\n+            broken[rel.from_attribute] += 1\n+        else:\n+            info[rel.from_attribute] += 1\n+    return info, broken\n+\n+\n+def get_all_relations():\n+    """Get all data from zc.relation catalog.\n+    Logs some useful statistics.\n+    """\n+    results = []\n+    info = defaultdict(int)\n+\n+    relation_catalog = getUtility(ICatalog)\n+    for token in relation_catalog.findRelationTokens():\n+        try:\n+            rel = relation_catalog.resolveRelationToken(token)\n+        except ObjectMissingError:\n+            logger.info(\'Token {} has no object.\'.format(token))\n+            continue\n+\n+        if rel.from_object and rel.to_object:\n+            try:\n+                results.append({\n+                    \'from_uuid\': rel.from_object.UID(),\n+                    \'to_uuid\': rel.to_object.UID(),\n+                    \'from_attribute\': rel.from_attribute,\n+                })\n+                info[rel.from_attribute] += 1\n+            except AttributeError as ex:\n+                logger.info(f\'Something went wrong while storing {rel}: \\n {ex}\')\n+        else:\n+            logger.info(f\'Dropping relation {rel.from_attribute} from {rel.from_object} to {rel.to_object}\')\n+    msg = \'\'\n+    for key, value in info.items():\n+        msg += f\'{key}: {value}\\n\'\n+    logger.info(f\'\\nFound the following relations:\\n{msg}\')\n+    return results\n+\n+\n+def store_relations(context=None):\n+    """Store all relations in a annotation on the portal.\n+    """\n+    all_relations = get_all_relations()\n+    portal = getSite()\n+    IAnnotations(portal)[RELATIONS_KEY] = all_relations\n+    logger.info(f\'Stored {len(all_relations)} relations on the portal\')\n+\n+\n+def purge_relations(context=None):\n+    """Removes all entries form zc.relation catalog.\n+    RelationValues that were set as attribute on content are still there!\n+    These are removed/overwritten when restoring the relations.\n+    """\n+    rel_catalog = getUtility(ICatalog)\n+    rel_catalog.clear()\n+    logger.info(\'Purged zc.relation catalog\')\n+\n+\n+def restore_relations(context=None, all_relations=None):\n+    """Restore relations from a annotation on the portal.\n+    """\n+\n+    portal = getSite()\n+    if all_relations is None:\n+        all_relations = IAnnotations(portal)[RELATIONS_KEY]\n+    logger.info(f\'Loaded {len(all_relations)} relations to restore\')\n+    update_linkintegrity = set()\n+    modified_items = set()\n+    modified_relation_lists = defaultdict(list)\n+\n+    # remove duplicates but keep original order\n+    unique_relations = []\n+    seen = set()\n+    seen_add = seen.add\n+    for rel in all_relations:\n+        hashable = tuple(rel.items())\n+        if hashable not in seen:\n+            unique_relations.append(rel)\n+            seen_add(hashable)\n+        else:\n+            logger.info(f\'Dropping duplicate: {hashable}\')\n+\n+    if len(unique_relations) < len(all_relations):\n+        logger.info(f\'Dropping {len(all_relations) - len(unique_relations)} duplicates\')\n+        all_relations = unique_relations\n+\n+    intids = getUtility(IIntIds)\n+    for index, item in enumerate(all_relations, start=1):\n+        if not index % 500:\n+            logger.info(f\'Restored {index} of {len(all_relations)} relations...\')\n+\n+        try:\n+            source_obj = uuidToObject(item[\'from_uuid\'])\n+        except KeyError:\n+            # brain exists but no object\n+            source_obj = None\n+        try:\n+            target_obj = uuidToObject(item[\'to_uuid\'])\n+        except KeyError:\n+            # brain exists but no object\n+            target_obj = None\n+\n+        if not source_obj:\n+            logger.info(f\'{item["from_uuid"]} is missing\')\n+            continue\n+\n+        if not target_obj:\n+            logger.info(f\'{item["to_uuid"]} is missing\')\n+            continue\n+\n+        if not IDexterityContent.providedBy(source_obj):\n+            logger.info(f\'{source_obj} is no dexterity content\')\n+            continue\n+\n+        if not IDexterityContent.providedBy(target_obj):\n+            logger.info(f\'{target_obj} is no dexterity content\')\n+            continue\n+\n+        from_attribute = item[\'from_attribute\']\n+        to_id = intids.getId(target_obj)\n+\n+        if from_attribute == referencedRelationship:\n+            # Ignore linkintegrity for now. We\'ll rebuilt it at the end!\n+            update_linkintegrity.add(item[\'from_uuid\'])\n+            continue\n+\n+        if from_attribute == ITERATE_RELATION_NAME:\n+            # Iterate relations are not set as values of fields\n+            relation = StagingRelationValue(to_id)\n+            event._setRelation(source_obj, ITERATE_RELATION_NAME, relation)\n+            continue\n+\n+        field_and_schema = get_field_and_schema_for_fieldname(from_attribute, source_obj.portal_type)\n+        if field_and_schema is None:\n+            # the from_attribute is no field\n+            logger.info(f\'No field. Setting relation: {item}\')\n+            event._setRelation(source_obj, from_attribute, RelationValue(to_id))\n+            continue\n+\n+        field, schema = field_and_schema\n+        relation = RelationValue(to_id)\n+\n+        if isinstance(field, RelationList):\n+            logger.info(f\'Add relation to relationslist {from_attribute} from {source_obj.absolute_url()} to {target_obj.absolute_url()}\')\n+            if item[\'from_uuid\'] in modified_relation_lists.get(from_attribute, []):\n+                # Do not purge relations\n+                existing_relations = getattr(source_obj, from_attribute, [])\n+            else:\n+                # First touch. Make sure we purge!\n+                existing_relations = []\n+            existing_relations.append(relation)\n+            setattr(source_obj, from_attribute, existing_relations)\n+            modified_items.add(item[\'from_uuid\'])\n+            modified_relation_lists[from_attribute].append(item[\'from_uuid\'])\n+            continue\n+\n+        elif isinstance(field, (Relation, RelationChoice)):\n+            logger.info(f\'Add relation {from_attribute} from {source_obj.absolute_url()} to {target_obj.absolute_url()}\')\n+            setattr(source_obj, from_attribute, relation)\n+            modified_items.add(item[\'from_uuid\'])\n+            continue\n+\n+        else:\n+            # we should never end up here!\n+            logger.warn(f\'Unexpected relation {from_attribute} from {source_obj.absolute_url()} to {target_obj.absolute_url()}\')\n+\n+    update_linkintegrity = set(update_linkintegrity)\n+    logger.info(f\'Updating linkintegrity for {len(update_linkintegrity)} items\')\n+    for uuid in sorted(update_linkintegrity):\n+        modifiedContent(uuidToObject(uuid), None)\n+    logger.info(f\'Updating relations for {len(modified_items)} items\')\n+    for uuid in sorted(modified_items):\n+        obj = uuidToObject(uuid)\n+        # updateRelations from z3c.relationfield does not properly update relations in behaviors\n+        # that are registered with a marker-interface.\n+        # update_behavior_relations (from plone.app.relationfield) does that but does not update\n+        # those in the main schema. Duh!\n+        updateRelations(obj, None)\n+        update_behavior_relations(obj, None)\n+\n+    # purge annotation from portal if they exist\n+    if RELATIONS_KEY in IAnnotations(portal):\n+        del IAnnotations(portal)[RELATIONS_KEY]\n+    logger.info(\'Done!\')\n+\n+\n+def get_intid(obj):\n+    """Intid from intid-catalog"""\n+    intids = queryUtility(IIntIds)\n+    if intids is None:\n+        return\n+    # check that the object has an intid, otherwise there\'s nothing to be done\n+    try:\n+        return intids.getId(obj)\n+    except KeyError:  # noqa\n+        # The object has not been added to the ZODB yet\n+        return\n+\n+\n+def get_field_and_schema_for_fieldname(field_id, portal_type):\n+    """Get field and its schema from a portal_type.\n+    """\n+    # Turn form.widgets.IDublinCore.title into title\n+    field_id = field_id.split(\'.\')[-1]\n+    for schema in iterSchemataForType(portal_type):\n+        field = schema.get(field_id, None)\n+        if field is not None:\n+            return (field, schema)\n+\n+\n+def cleanup_intids(context=None):\n+    intids = getUtility(IIntIds)\n+    all_refs = [f\'{i.object.__class__.__module__}.{i.object.__class__.__name__}\'\n+                for i in intids.refs.values()]\n+    logger.info(Counter(all_refs))\n+\n+    count = 0\n+    refs = [i for i in intids.refs.values() if isinstance(i.object, RelationValue)]\n+    for ref in refs:\n+        intids.unregister(ref)\n+        count += 1\n+    logger.info(f\'Removed all {count} RelationValues from IntId-tool\')\n+\n+    count = 0\n+    for ref in intids.refs.values():\n+        if \'broken\' in repr(ref.object):\n+            intids.unregister(ref)\n+    logger.info(f\'Removed {count} broken refs from IntId-tool\')\n+    all_refs = [\'{i.object.__class__.__module__}.{i.object.__class__.__name__}\'\n+                for i in intids.refs.values()]\n+    logger.info(Counter(all_refs))\n+\n+\n+def flush_intids():\n+    """ Flush all intids\n+    """\n+    intids = getUtility(IIntIds)\n+    intids.ids = intids.family.OI.BTree()\n+    intids.refs = intids.family.IO.BTree()\n+\n+\n+def rebuild_intids():\n+    """ Create new intids\n+    """\n+    def add_to_intids(obj, path):\n+        if IContentish.providedBy(obj):\n+            logger.info(f\'Added {obj} at {path} to intid\')\n+            addIntIdSubscriber(obj, None)\n+    portal = getSite()\n+    portal.ZopeFindAndApply(portal,\n+                            search_sub=True,\n+                            apply_func=add_to_intids)\ndiff --git a/Products/CMFPlone/tests/dummy.py b/Products/CMFPlone/tests/dummy.py\nindex c89a7b3852..5ff3e8db1b 100644\n--- a/Products/CMFPlone/tests/dummy.py\n+++ b/Products/CMFPlone/tests/dummy.py\n@@ -6,7 +6,6 @@\n from OFS.SimpleItem import SimpleItem\n from Products.CMFPlone.interfaces import INonStructuralFolder\n from Products.CMFPlone.interfaces import IWorkflowChain\n-from io import StringIO\n from io import BytesIO\n from zope.interface import implementer\n from zope.interface import Interface\ndiff --git a/Products/CMFPlone/tests/test_expressions.py b/Products/CMFPlone/tests/test_expressions.py\nindex 7815889b8b..44304311b1 100644\n--- a/Products/CMFPlone/tests/test_expressions.py\n+++ b/Products/CMFPlone/tests/test_expressions.py\n@@ -13,7 +13,6 @@\n from Products.PageTemplates.Expressions import boboAwareZopeTraverse as traverse_function\n from Products.PageTemplates.Expressions import trustedBoboAwareZopeTraverse as trusted_traverse_function\n from Products.PageTemplates.PageTemplateFile import PageTemplateFile\n-from random import _os\n from zExceptions import NotFound\n from zExceptions import Unauthorized\n \ndiff --git a/SECURITY.md b/SECURITY.md\nnew file mode 100644\nindex 0000000000..40909ad71e\n--- /dev/null\n+++ b/SECURITY.md\n@@ -0,0 +1,17 @@\n+# Security Policy\n+\n+The most up to date information about Plone security is on https://plone.org/security\n+\n+## Supported Versions\n+\n+For supported versions, see the [security update policy](https://plone.org/security/update-policy)\n+\n+The [release schedule](https://plone.org/download/release-schedule) also has helpful information.\n+\n+There may be hotfixes available to increase the security of your version of Plone. Please check the [available hotfixes](https://plone.org/security/hotfixes).\n+\n+## Reporting a Vulnerability\n+\n+Please do **NOT** create a public bug report if you think this may be a security issue.\n+Instead, please contact the Plone Security Team via email: security@plone.org.\n+See also https://plone.org/security/report\ndiff --git a/docs/HISTORY.txt b/docs/HISTORY.rst\nsimilarity index 95%\nrename from docs/HISTORY.txt\nrename to docs/HISTORY.rst\nindex 06a08a99aa..15e39e0977 100644\n--- a/docs/HISTORY.txt\n+++ b/docs/HISTORY.rst\n@@ -1,7 +1,663 @@\n Historical release notes\n ========================\n \n-For what\'s new in this release, see CHANGES.txt.\n+This contains the changelogs from older releases.\n+Note that there are large gaps, for example there is nothing between 4.3.3 and 5.0.0.\n+So the value of this historical record is currently doubtful.\n+\n+For what\'s new in the current release, see CHANGES.txt.\n+\n+\n+5.2.2 (2020-08-16)\n+------------------\n+\n+Bug fixes:\n+\n+\n+- Release Plone 5.2.2 final.\n+  No changes with last release candidate, except that the versions will contain Products.isurlinportal 1.1.0 with a minor security hardening fix.\n+  [maurits] (#3510)\n+\n+\n+5.2.2rc3 (2020-08-16)\n+---------------------\n+\n+Bug fixes:\n+\n+\n+- Return a Zope aware engine for page templates based on ``zope.pagetemplate`` instead of ``Products.PageTemplates``.\n+  Fixes possible problems with such templates, for example z3c.form ones, with Zope 4.4 and higher.\n+  See `issue 3141 <https://github.com/plone/Products.CMFPlone/issues/3141>`_.\n+  [maurits] (#3141)\n+- Depend on new package ``Products.isurlinportal``.\n+  This contains the ``isURLInPortal`` method that was split off from our ``URLTool``.\n+  See `issue 3150 <https://github.com/plone/Products.CMFPlone/issues/3150>`_.\n+  [maurits] (#3150)\n+- Redirection view: refactor our navigation root editing to a separate method ``edit_for_navigation_root``.\n+  Since Plone 5.2 the redirectiontool respects INavigationroot:\n+  with a manual redirect you cannot enter a path starting with ``/`` which \'escapes\' the NavigationRoot to the SiteRoot to link to another part of the Plone instance.\n+  This refactor makes it possible to override this method to return the redirection unchanged, brining back the pre Plone 5.2 behavior of the ``Products.RedirectionTool`` add-on.\n+  [maurits] (#3153)\n+- Control panel configlets: first check visibility, then check condition.\n+  Visibility is cheaper to check.\n+  Also fixes `bug 3154 <https://github.com/plone/Products.CMFPlone/issues/3154>`_.\n+  [maurits] (#3154)\n+\n+\n+5.2.2rc2 (2020-07-17)\n+---------------------\n+\n+Bug fixes:\n+\n+\n+- Fix an issue in mail_password_template.pt in the message showing the ip to really try the request.REMOTE_ADDR variable if request.HTTP_X_FORWARDED_FOR is empty (when you\'re not behind apache or nginx).\n+  [vincentfretin] (#2949)\n+- mail_password form: Do not crash if the userid is not provided or the user doesn\'t have an email configured\n+  [frapell] (#3008)\n+\n+\n+5.2.2rc1 (2020-06-28)\n+---------------------\n+\n+New features:\n+\n+\n+- Image caption support\n+  Allow ``figcaption`` in rich text editor as a valid tag.\n+  Add registry setting for plone.image_caption outputfilter transform.\n+  [thet] (#2887)\n+- Add markdown extension settings to markup control panel.\n+  [thomasmassmann] (#3076)\n+- Insert virtual custom.css bundle into the header after diazo bundle.\n+  Only add this when custom css is set in the theming control panel.\n+  [MrTango] (#3086)\n+\n+\n+Bug fixes:\n+\n+\n+- Change control panel item sorting and sort them by title\n+  [erral] (#721)\n+- Update HTMLFilter settings to enable TinyMCE styling features. See #2329, #2482, #2535\n+  [petschki] (#2482)\n+- If \'tinymce-content-css\' option is missing in themes manifest.cfg prevent unnecessary loading of a css at nav_root_url while editing a page.  [krissik] (#2861)\n+- Redirect (when possible) also ajax requests and do not return an unuseful body\n+  [ale-rt] (#3014)\n+- Merge Hotfix20200121 Check of the strength of password could be skipped. (#3021)\n+- Merge Hotfix20200121: isURLInPortal could be tricked into accepting malicious links. (#3021)\n+- Improve tests for the workflow tool method listWFStatesByTitle (#3032)\n+- Fix index_html on PortalRoot: ReplaceableWrapper did not work.\n+  [jensens] (#3060)\n+- Allow accessing ``plone_view.patterns_settings``.\n+  This was no problem until now, but a newer ``Zope/zope.tales/Chameleon``  is rightly stricter.\n+  [maurits] (#3066)\n+- Fix Python 3.8 ``time.clock`` removal in CatalogTool [jensens] (#3082)\n+- Fixed TypeError when adding both a group and a user to a group.\n+  [maurits] (#3084)\n+- Make the resource registry scripts output more robust when a bundle resource is missing. This prevents\n+  breaking your whole Plone site and access to the resource registry control panel after inserting\n+  one missing resource.\n+  [fredvd] (#3096)\n+- Bugfix for #3103\n+  [petschki] (#3105)\n+- Fixed saving ignored exception types in Python 3.  [maurits] (#3115)\n+\n+\n+5.2.1 (2020-01-13)\n+------------------\n+\n+New features:\n+\n+\n+- Add plone.staticresources to list of addons which are automatically upgraded if upgrade steps are available.\n+  [thet] (#2976)\n+\n+\n+Bug fixes:\n+\n+\n+- fix creation of Plone site not adding default Dexterity content types if example content not explicitily selected by user.\n+  [ericof] (#1318)\n+- fix default value for email msgid\n+  [erral] (#2790)\n+- Fix: PasswordResetView::getErrors is called, this ensures password is validated through RegistrationTool before attempting to reset password.\n+  [nazrulword] (#2917)\n+- Breadcrumbs: consider hidden folders when creating urls [ksuess] (#2935)\n+- Add Collection to the default_page_types list\n+  [erral] (#2956)\n+- Fix localization of "Site setup" in some control panels [vincentfretin] (#2958)\n+- Fix TTW Bundle compilation broken.\n+  [thet] (#2969)\n+- Do not save type settings in "content-controlpanel" when switching between types.\n+  [cekk] (#2986)\n+- Correctly fire events when user autologin after the password has been reset.\n+  [ericof] (#2993)\n+\n+\n+5.2.0 (2019-07-10)\n+------------------\n+\n+Bug fixes:\n+\n+\n+- Don\'t activate all sorting tabs when no sort option has been chosen.\n+  [gyst, rodfersou, jensens] (#1789)\n+- Fix test failures exposed in Python 3.8\n+  [pbauer] (#2903)\n+\n+\n+5.2rc5 (2019-06-27)\n+-------------------\n+\n+New features:\n+\n+\n+- Add support for Python 3.8 [pbauer] (#2896)\n+\n+\n+Bug fixes:\n+\n+\n+- Add missing i18n:translate calls\n+  [erral] (#2891)\n+- Fix login-help layout on mobile.\n+  [jensens] (#2893)\n+\n+\n+5.2rc4 (2019-06-20)\n+-------------------\n+\n+New features:\n+\n+\n+- Remove verifydb, it was moved to standalone package zodbverify.\n+  [jensens] (#2858)\n+\n+\n+Bug fixes:\n+\n+\n+- If specified in the registry, let the user autologin after the password has been reset (#2439)\n+- Allow empty ``default_page`` registry setting\n+  [petschki] (#2813)\n+- Always add ``data-default-sort`` attribute to search results.  [maurits] (#2854)\n+- Fix deprecation warnings.\n+  [jensens] (#2862)\n+- Use the shared \'Plone test setup\' and \'Plone test teardown\' keywords in Robot tests.\n+  [Rotonen] (#2864)\n+- Fix script resource parsing error because of self closing tags.\n+  [Netroxen] (#2870)\n+\n+\n+5.2rc3 (2019-05-04)\n+-------------------\n+\n+New features:\n+\n+\n+- Allow filtering on date and manual/automatic in redirection controlpanel. (#2799)\n+- Add a button to export the alternative urls in redirection controlpanel. (#2799)\n+- Add a button to remove all alternative urls that match the filter.\n+  See `issue 2799 <https://github.com/plone/Products.CMFPlone/issues/2799>`_.\n+  [maurits] (#2799)\n+\n+\n+Bug fixes:\n+\n+\n+- gracefully handle tracebacks during addon installation\n+  [petschki] (#2228)\n+- Add workaround for the case when a inifite recusion in a page-template that uses the main-template crashes the instance instead of raising a RecursionError.\n+  [pbauer, esteele] (#2666)\n+- Fixed unstable Markup Control Panel robot test again.  [maurits] (#2809)\n+- add a missing space in an error message in the redirects control panel and replace "deffered" by "deferred" [vincentfretin] (#2821)\n+- Fixes: Cooking resources with non ASCII resulted in encoding error.\n+  Further, writing legacy resources resulted in ValueError. [jensens] (#2827)\n+- restore ``exclude_from_nav`` combined with ``show_excluded_items`` handling\n+  [petschki] (#2828)\n+- Fix DeprecationWarning in syndication-view. [jensens] (#2831)\n+- Fix malformed url when redirecting to external login. [ericof] (#2842)\n+- Make navigation (CatalogNavigationTabs) subclassing easier. [iham] (#2849)\n+\n+\n+5.2rc2 (2019-03-21)\n+-------------------\n+\n+Bug fixes:\n+\n+\n+- Fix excluded items in navigation [ale-rt] (#2516)\n+- Add basic validators for the portal action controlpanel forms (#2689)\n+- Fix wrong msgids in link management control panel [erral] (#2788)\n+- Fix errors that abort the verification when debugging a DB with ./bin/instance verifydb -D.\n+  [pbauer] (#2792)\n+- Add summary of all errors when verifying a DB with ./bin/instance verifydb.\n+  [pbauer] (#2798)\n+- Fixed unstable SearchableText and Scenario Type querystring robot tests.  [maurits] (#2808)\n+- Fixed unstable Markup Control Panel and other robot tests.   [maurits] (#2809)\n+\n+\n+5.2rc1 (2019-03-04)\n+-------------------\n+\n+New features:\n+\n+\n+- Views for title and description. [iham] (#2740)\n+- Display wsgi-state plus name and version of the server in the controlpanel\n+  [pbauer] (#2770)\n+- Enable dropdown-navigation for new sites by default. [pbauer] (#2772)\n+\n+\n+Bug fixes:\n+\n+\n+- Resolve circular dependency between `Products.CMFPlone` and `plone.i18n` by\n+  moving `ILanguageSchema` there. [sallner] (#2049)\n+- Use correct permission for mail controlpanel form so that Site Administrators\n+  can also edit. [fredvd] (#2688)\n+- Make linkintegrity robot test more reliable [MrTango] (#2752)\n+- Check only once if Products.ATContentTypes is available. [gforcada] (#2765)\n+- Fix redirection to `came_from` when url matches LOGIN_TEMPLATE_ID partly\n+  [petschki] (#2771)\n+\n+\n+5.2b1 (2019-02-13)\n+------------------\n+\n+Breaking changes:\n+\n+\n+- Factor out all static resources and the ``plone-compile-resources`` script\n+  into plone.staticresources. [thet] (#2542)\n+\n+\n+New features:\n+\n+\n+- PLIP 1486: Merge Products.RedirectionTool into core. Allow users to manage\n+  redirects on their site and aliases to content. See\n+  https://github.com/plone/Products.CMFPlone/issues/1486 [staeff, maurits]\n+  (#1486)\n+- Added multilevel dropdown navigation [agitator] (#2516)\n+- No longer mark special links by default. [pbauer] (#2736)\n+\n+\n+Bug fixes:\n+\n+\n+- Switched allowedRolesAndUsers indexer from \'View\' to the correct permission\n+  \'Access contents information\' for displaying metadata. \'View\' permission\n+  should be used on the item itself. The change should not matter for default\n+  Plone workflows, since they always use those permissions together. [agitator]\n+  (#260)\n+- deprecate catalog_get_all(catalog) in favor of catalog.getAllBrains()\n+  [pbauer] (#2258)\n+- Restore the possibility to sort catalog query results with multiple indexes\n+  (#2464)\n+- Review list portlet showed nothing to review with plone.app.multilingual, As\n+  WorkflowTool bypassed languages only for p.a.m<2.x or linguaplone. fixed and\n+  now compatible to both lang-bypassing methods. [iham] (#2595)\n+- Fixed fallback to default view when selected layout does not exist for\n+  Folder. [gbastien] (#2645)\n+- The patched init method for the class zope.sendmail.mailer.SMTPMailer has\n+  been updated, fixing a bug that was preventing to send emails. [ale-rt,\n+  nazrulworld] (#2665)\n+- a11y: Added role attribute for portalMessage [nzambello] (#2675)\n+- Fix several warnings shown when running tests on Python 3+. [gforcada]\n+  (#2683)\n+- fixed Python 3 related str decoding issue in breadcrumbs (#2694)\n+- Fixed unstable robot test Scenario: A page is opened to edit in TinyMCE.\n+  [maurits] (#2707)\n+\n+\n+5.2a2 (2018-12-30)\n+------------------\n+\n+New features:\n+\n+\n+- New robot tests for querystring in Collection type. Now almost all\n+  querystring types are robot tested. [llisa123] (#2489)\n+- Add ``load_async`` and ``load_defer`` attributes to resource registries\n+  bundle settings. When set, ``<script>`` tags are rendered with\n+  ``async="async"`` resp. ``defer="defer"`` attributes. You also need to empty\n+  the ``merge_with`` property of your bundle, because production bundles\n+  (``default.js`` and ``logged-in.js``) are never loaded with async or defer.\n+  The default.js includes jQuery and requirejs and those are needed at many\n+  places and therefore cannot be loaded asynchronously. Refs: #2649, #2657.\n+  [thet] (#2649)\n+\n+\n+Bug fixes:\n+\n+\n+- Delete ``fa_ir.js``. Keep ```fa_IR.js``. [maurits] (#2620)\n+- Forward port TinyMCE fixes from 5.1 [vangheem] (#2630)\n+- Fix robot test test_edit_user_schema: Fieldname was set duplicate (first by\n+  JS, then by robot). [jensens] (#2669)\n+\n+5.2a1 (2018-11-08)\n+------------------\n+\n+Breaking changes:\n+\n+- Removed generateUniqueId.py skins script (after it was added to Products.Archetypes).\n+  This script is no longer available outside Archetypes world.\n+  #1801\n+  [jensens]\n+\n+- Remove all dependencies on plone.app.controlpanel.\n+  Third party code need either to depend on plone.app.controlpanel 4.0,\n+  which is a backward compatibility package only, or also update to not depend on it anymore.\n+  [jensens]\n+\n+- Removed check_id.py skin script.  Replaced with utils.check_id function.\n+  #1801 and #2582.\n+  [maurits]\n+\n+- Removed my_worklist.py skin script. #1801\n+  [reinhardt]\n+\n+- Removed getObjectsFromPathList.py skin script. #1801\n+  [reinhardt]\n+\n+- Removed isExpired.py skin script. #1801\n+  [reinhardt]\n+\n+- Removed redirectToReferrer.py skin script. #1801\n+  [tlotze]\n+\n+- Removed enableHTTPCompression.py skin script. #1801\n+  [tlotze]\n+\n+- Removed setAuthCookie.py skin script. #1801\n+  [tlotze]\n+\n+- Stop configuring \'View History\' permission which was removed from Zope.\n+  [davisagli]\n+\n+- Removed legacy resource registries portal_css and portal_javascripts;\n+  no conditional handling.\n+  [ksuess]\n+\n+New features:\n+\n+- Factored out human_readable_size method for replacing getObjSize.py;\n+  removed getObjSize.py. #1801\n+  [reinhardt]\n+\n+- Update TinyMCE to 4.7.13\n+  [erral]\n+\n+- New browser view based login code - merged from plone.login (credits to esteele, pbauer, agitator, jensens, et al).\n+  `portal_skins/plone_login` is now gone, see PLIP #2092.\n+  Also, password reset view moved to login subfolder to keep things together.\n+  Some testbrowser based tests needed changes because of z3c.form based login form .\n+  The Plone specific, rarely used cross site __ac cookie SSO feature/hack was removed.\n+  In case somebody needs this, please make it an addon package.\n+  Better use a field proven, more secure way, like OAuth2, Shibboleth or someting similar.\n+  [jensens, et al]\n+\n+- Upgrade grunt + plugins to same versions as in\n+  mockup https://github.com/plone/mockup/pull/870\n+  [sunew]\n+\n+- Upgrade less in bower.json to the same version as already used\n+  in the generated package.json in compile_resources.py.\n+  [sunew]\n+\n+- Add utility-method safe_nativestring.\n+  [pbauer]\n+\n+- Rename safe_unicode to safe_text and safe_encode to safe_bytes. Keep old aliases.\n+  [pbauer]\n+- Add a ``bin/instance verifydb`` command which can be used to check\n+  that all records in the database can be successfully loaded.\n+  This is intended to help with verifying a database conversion\n+  from Python 2 to Python 3.\n+  [davisagli]\n+\n+Bug fixes:\n+\n+- Modernize robot keywords that use "Get Element Attribute"\n+  [ale-rt]\n+\n+- remove plone.app.folder dependency\n+  [petschki]\n+\n+- move GopipIndex Class to plone.folder\n+  [petschki]\n+\n+- Fixed getObjSize indexer for Python 3. #2526\n+  [reinhardt]\n+- Fix toolbar menu on mobile #2333.\n+- make groups_modify_roles test more robust.\n+  [tschorr]\n+\n+-- Fix wrong CSS property to allow correct word-break.\n+  [tmassman]\n+\n+ Fix toolbar menu on mobile #2333.\n+  [tmassman]\n+\n+- Removed the ``raiseUnauthorized`` skin script.\n+  If you use this, please do permission checking in your own Python code instead (likely in a browser view).\n+  Refs `issue 1801 <https://github.com/plone/Products.CMFPlone/issues/1801>`_.\n+  [maurits]\n+\n+- Remove the devdependencies from bower.json - they are just used for running tests in mockup, not here.\n+  [sunew]\n+\n+- Adapt tests to `Products.GenericSetup >= 2.0` thus requiring at least that\n+  version.\n+  [icemac]\n+\n+- Some tools from CMFCore are now utilities\n+  [pbauer]\n+\n+- Fix failing thememapper robot test after rebuild of thememapper bundle in p.a.theming PR 148\n+  [sunew]\n+\n+- Remove five.pt for Zope 4\n+  [jensens]\n+\n+- Changes for Zope 4 compatibility in maintenance controlpanel.\n+  [thet]\n+\n+- Render exceptions using an exception view instead of standard_error_message.\n+  [davisagli]\n+\n+- Remove old PlacelessTranslationService.\n+  [jensens, ksuess]\n+\n+- Fix controlpanel quickinstaller view:\n+  A not yet installed product must not return any upgrade info.\n+  [jensens]\n+\n+- Fix to make plone/plone.session#11 work:\n+  Make test for installation of  plone.session more explicit.\n+  [jensens]\n+\n+- Advanced Catalog Clear And Rebuild feature showed wrong processing time due to new queue processing.\n+  This was fixed bei calling ``processQueue()`` after indexing.\n+  [jensens]\n+\n+- Some nested `section id="edit-bar"` tag in folder_contents page #2322\n+  [terapyon]\n+\n+- Remove ``plone-generate-gruntfile`` (it is all available through ``plone-compile-resources``).\n+  [jensens]\n+\n+- Migrate from ``slimit`` to ``calmjs.parse`` for the JavaScript cooker #2616\n+  [metatoaster]\n+\n+\n+New Features:\n+\n+- Update to latest mockup\n+  [frapell]\n+\n+- Provide an utility ``dump_json_to_text`` that works both on Python 2.7 an Python 3.\n+  [ale-rt]\n+\n+- Prepare for Python 2 / 3 compatibility.\n+  [pbauer]\n+\n+- Fix imports to work with Python 3.\n+  [pbauer]\n+\n+- Mockup update.\n+  [thet]\n+\n+- add link to Plone.org VPAT accessibility statement\n+  [tkimnguyen]\n+\n+Bug Fixes:\n+\n+- Remove last legacy Javascript ``highlight-searchterms.js``.\n+  Removes also the skins folder ``plone_ecmascript``.\n+  It was broken for all (Google, other search engines, own live search);\n+  JS worked only when coming from Plone detailed search.\n+  [jensens]\n+\n+- Fix an undefined variable in a test helper function\n+  [ale-rt]\n+\n+- Let the ``combine-bundles`` import step also work when the ``IBundleRegistry`` keyword is not in ``registry.xml``, but in a ``registry`` directory.\n+  `Issue 2520 <https://github.com/plone/Products.CMFPlone/issues/2502>`_.\n+  [maurits]\n+\n+- Get rid of obsolete ``X-UA-Compatible`` header.\n+  [hvelarde]\n+\n+- Fix registration of ``robots.txt`` browser view to avoid ``AttributeError`` on Zope\'s root (fixes `#2052 <https://github.com/plone/Products.CMFPlone/issues/2052>`_).\n+  [hvelarde]\n+\n+- Get rid of obsolete ``X-UA-Compatible`` header.\n+  [hvelarde]\n+\n+- Add test for issue #2469.\n+  [jensens]\n+\n+- Fixed tests when IRichText behavior is used.\n+  IRichText -> IRichTextBehavior\n+  This is a follow up to `issue 476 <https://github.com/plone/plone.app.contenttypes/issues/476>`_.\n+  [iham]\n+\n+- Remove unused mail_password.py from skins/plone_scripts\n+  [agitator]\n+\n+- Hide ``plone.app.querystring`` from add-ons control panel.\n+  Fixes `issue 2426 <https://github.com/plone/Products.CMFPlone/issues/2426>`_.\n+  [maurits]\n+\n+- Fix tests after changes in disallowed object ids in Zope.\n+  [pbauer]\n+\n+- Do not include too new upgrades when upgrading Plone Site.\n+  Otherwise the Plone Site ends up at a newer version that the filesystem code supports,\n+  giving an error when upgrading, and resulting in possibly missed upgrades later.\n+  Fixes `issue 2377 <https://github.com/plone/Products.CMFPlone/issues/2377>`_.\n+  [maurits]\n+\n+- After site creation, do not render the add-site template: we redirect anyway.\n+  [maurits]\n+\n+- Unflakied a unit test.\n+  [Rotonen]\n+\n+- Do not show TinyMCE menu items with no subitems, Fixes #2245.\n+  [mrsaicharan1]\n+\n+- Fix Exception-View when main_template can\'t be rendered. Fixes #2325.\n+  [pbauer]\n+\n+- Render exceptions as text, not html to fix format of infos after traceback.\n+  Display as <pre> for basic and normal error templates.\n+  [pbauer]\n+\n+- Removed extra methods and tests for CMFQuickInstallerTool.\n+  Moved those to the Products.CMFQuickInstallerTool package.\n+  [maurits]\n+\n+- Added tests for add-ons control panel.\n+  Add a link to the Site Setup.\n+  Let ``get_product_version`` work when you call it with ``CMFPlacefulWorkflow`` too.\n+  [maurits]\n+\n+- Fix bad domain for translating password reset mails.\n+  [allusa]\n+\n+- Ignore invalid ``sort_on`` parameters in catalog ``searchResults``.\n+  Otherwise you get a ``CatalogError``.\n+  I get crazy sort_ons like \'194\' or \'null\'.\n+  [maurits]\n+\n+- Register the ``ExceptionView`` for the unspecific ``zope.interface.Interface`` for easier overloading.\n+  Fixes a problem, where plone.rest couldn\'t overload the ExceptionView with an adapter bound to ``plone.rest.interfaces.IAPIRequest``.\n+  [thet]\n+\n+- Fixed linkintegrity robot tests.  [maurits]\n+\n+- Fixed flaky actions controlpanel tests by waiting longer.  [maurits]\n+\n+- Require AccessControl 4.0b1 so ``guarded_getitem`` is used.\n+  Part of PloneHotfix20171128.  [maurits]\n+\n+- Improved isURLInPortal according to PloneHotfix20171128.\n+  Accept only http/https, and doubly check escaped urls.  [maurits]\n+\n+- Fix exception view when called on Zope-root. Fixes #2203.\n+  [pbauer]\n+\n+- added CSS hyphenation support for toolbar for avoiding ugly text wrapping\n+  Fixes `issue 723 <https://github.com/plone/Products.CMFPlone/issues/723>`_.\n+  [ajung]\n+\n+- Increase compatibility with Python3.\n+  [ale-rt]\n+\n+- Show example for expression in actions control panel.\n+  [maurits]\n+\n+- Fix test where you cannot instanciate a PythonScript with the id script.\n+  [pbauer]\n+\n+- Set the status of an exception view according to the exception type.\n+  Fixes `issue 2187 <https://github.com/plone/Products.CMFPlone/issues/2187>`_.\n+  [maurits]\n+\n+- Use absolute imports for Python3 compatibility\n+  [ale-rt]\n+\n+- Fallback for missing date in DefaultDublinCoreImpl no longer relies on\n+  bobobase_modification_time.\n+  [pbauer]\n+\n+- Display real version of Zope, not of the empty meta-package Zope2.\n+  [pbauer]\n+\n+- Add zcml-condition plone-52 for conditional configuration.\n+  [pbauer]\n+\n+- Use getSite in set_own_login_name to get the portals acl_users.\n+  [pbauer]\n+\n+- Fix test issue with rarely used multi-site SSO feature.\n+  ``came_from`` on ``@register`` link would point to wrong site.\n+  Completly removed ``came_from`` on ``@@register`` link.\n+  It does not make much sense anyway and we test nowhere if there is a came_from on that link.\n+  [jensens]\n+\n+- Remove depricated ``type`` attribute from ``script`` and ``link`` tags.\n+  [newbazz]\n+\n+- Render tinymce attributes correctly in Python3.\n+  [sallner]\n+\n+- Remove unresolved dependencies of plone-final to cssregistry and jsregistry.\n+  [pbauer]\n \n \n 5.1rc2 (unreleased)\n@@ -155,7 +811,7 @@ Bug fixes:\n - Gruntfile generation no longer fails on introspecting resourceDirectory\n   configurations using a plone.browserlayer layer, by loading all layers\n   configured for the site used during generation.\n-  Fixes Issue `#2080`_.\n+  Fixes `issue 2080 <https://github.com/plone/Products.CMFPlone/issues/2080>`_.\n   [seanupton]\n \n - fixed css-classes for thumb scales ...\n@@ -2380,7 +3036,7 @@ Fixes:\n \n \n 4.2.1.1 (2012-08-23)\n-------------------\n+--------------------\n \n - Fixed i18n of image view improvement introduced in 4.2.1.\n   [vincentfretin]\n@@ -2400,8 +3056,10 @@ Fixes:\n   [thomasdesvenain]\n \n - Improve image view:\n+\n     - Add a download button.\n     - Display View button only if image is a web format (jpeg, png, gif...)\n+\n   [thomasdesvenain]\n \n - zope.globalrequest is a required dependency on tests.\ndiff --git a/news/3231.feature b/news/3231.feature\nnew file mode 100644\nindex 0000000000..e7254a3b72\n--- /dev/null\n+++ b/news/3231.feature\n@@ -0,0 +1,2 @@\n+Include a controlpanel to inspect and rebuild relations.\n+[pbauer]\n\\ No newline at end of file\ndiff --git a/news/3274.bugfix.1 b/news/3274.bugfix.1\nindex 7d9f538d12..af26a7e9eb 100644\n--- a/news/3274.bugfix.1\n+++ b/news/3274.bugfix.1\n@@ -1,3 +1,3 @@\n Removed the docstring from various methods to avoid making them available via a url.\n-From `Products.PloneHotfix20210518 <https://plone.org/security/hotfix/20210518/reflected-xss-in-various-spots>`_.\n+From the `Products.PloneHotfix20210518 reflected XSS fix <https://plone.org/security/hotfix/20210518/reflected-xss-in-various-spots>`_.\n [maurits]\ndiff --git a/news/3274.bugfix.2 b/news/3274.bugfix.2\nindex eaefaa3547..cfe4f9372e 100644\n--- a/news/3274.bugfix.2\n+++ b/news/3274.bugfix.2\n@@ -1,3 +1,3 @@\n-Add the expressions patch from `Products.PloneHotfix20210518 <https://plone.org/security/hotfix/20210518/remote-code-execution-via-traversal-in-expressions>`_.\n+Add the remote code execution fix from the `Products.PloneHotfix20210518 expressions patch <https://plone.org/security/hotfix/20210518/remote-code-execution-via-traversal-in-expressions>`_.\n We need this because Zope 4.6.2 is too strict for us.\n [maurits]\ndiff --git a/news/3297.feature b/news/3297.feature\nnew file mode 100644\nindex 0000000000..9005da5193\n--- /dev/null\n+++ b/news/3297.feature\n@@ -0,0 +1,2 @@\n+Protect @@historyview with Modify portal content permission. Fixes #3297\n+[pbauer]\n\\ No newline at end of file\ndiff --git a/news/3299.bugfix b/news/3299.bugfix\nnew file mode 100644\nindex 0000000000..49fabfc5bc\n--- /dev/null\n+++ b/news/3299.bugfix\n@@ -0,0 +1 @@\n+Remove unused imports. [jensens]\ndiff --git a/news/3303.bugfix b/news/3303.bugfix\nnew file mode 100644\nindex 0000000000..7ee79ba704\n--- /dev/null\n+++ b/news/3303.bugfix\n@@ -0,0 +1 @@\n+Fix TypeError when adding a portlet. [daggelpop]\ndiff --git a/setup.cfg b/setup.cfg\nindex 77b09549f4..fedd44695f 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -2,7 +2,7 @@\n extra-message = [ci skip]\n \n [bdist_wheel]\n-universal = 1\n+universal = 0\n \n [isort]\n force_alphabetical_sort=True\ndiff --git a/setup.py b/setup.py\nindex 7772b420bd..3b123a81de 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,7 +1,7 @@\n from setuptools import setup\n from setuptools import find_packages\n \n-version = \'6.0a1.dev0\'\n+version = \'6.0.0a1.dev0\'\n \n \n setup(\n@@ -22,6 +22,7 @@\n         "Programming Language :: Python",\n         "Programming Language :: Python :: 3.7",\n         "Programming Language :: Python :: 3.8",\n+        "Programming Language :: Python :: 3.9",\n     ],\n     keywords=\'Plone CMF Python Zope CMS Webapplication\',\n     author=\'Plone Foundation\',\n@@ -33,7 +34,7 @@\n     include_package_data=True,\n     zip_safe=False,\n     install_requires=[\n-        \'AccessControl >= 4.0b1\',\n+        \'AccessControl >= 4.0\',\n         \'Acquisition\',\n         \'borg.localrole\',\n         \'calmjs.parse\',\n@@ -46,14 +47,14 @@\n         \'plone.api >= 1.4.4\',\n         \'plone.app.content\',\n         \'plone.app.contentlisting\',\n-        \'plone.app.contentmenu >= 1.1.6dev-r22380\',\n+        \'plone.app.contentmenu >= 2.0.1\',\n         \'plone.app.contentrules\',\n         \'plone.app.contenttypes\',\n         \'plone.app.customerize\',\n         \'plone.app.dexterity\',\n         \'plone.app.discussion\',\n         \'plone.app.i18n\',\n-        \'plone.app.layout >=1.1.7dev-r23744\',\n+        \'plone.app.layout >= 2.5.15\',\n         \'plone.app.linkintegrity >=1.0.3\',\n         \'plone.app.locales\',\n         \'plone.app.multilingual\',\n@@ -67,10 +68,10 @@\n         \'plone.app.vocabularies\',\n         \'plone.app.workflow\',\n         \'plone.batching\',\n-        \'plone.browserlayer >= 1.0rc4\',\n+        \'plone.browserlayer >= 2.1.5\',\n         \'plone.contentrules\',\n         \'plone.folder\',\n-        \'plone.i18n >= 4.0.4.dev0\',\n+        \'plone.i18n >= 4.0.5\',\n         \'plone.indexer\',\n         \'plone.intelligenttext\',\n         \'plone.locking\',\n@@ -79,7 +80,7 @@\n         \'plone.portlet.collection\',\n         \'plone.portlet.static\',\n         \'plone.portlets\',\n-        \'plone.protect >= 3.0.0a1\',\n+        \'plone.protect >= 3.0.0\',\n         \'plone.registry\',\n         \'plone.schema\',\n         \'plone.session\',\n@@ -94,7 +95,7 @@\n         \'Products.CMFUid\',\n         \'Products.DCWorkflow\',\n         \'Products.ExtendedPathIndex\',\n-        \'Products.GenericSetup >= 2.0.dev0\',\n+        \'Products.GenericSetup >= 2.0\',\n         \'Products.isurlinportal\',\n         \'Products.MimetypesRegistry\',\n         \'Products.PlonePAS\',\n@@ -108,7 +109,7 @@\n         \'transaction\',\n         \'z3c.autoinclude\',\n         \'ZODB3\',\n-        \'Zope[wsgi] >= 4.0b5\',\n+        \'Zope[wsgi] >= 4.0\',\n         \'zope.app.locales >= 3.6.0\',\n         \'zope.cachedescriptors\',\n         \'zope.component\',\n@@ -133,7 +134,7 @@\n         \'test\': [\n             \'lxml\',\n             \'mock\',\n-            \'plone.app.robotframework>0.9.16\',\n+            \'plone.app.robotframework>=1.0\',\n             \'robotframework-debuglibrary\',\n             \'plone.app.testing\',\n             \'zope.globalrequest\',\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-31T07:25:45+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/26798f86ad6c0a692c5875d5c0e965bcc28c4f59

Merge branch 'master' into use-behavior-names

Files changed:
A .github/SECURITY.md
A Products/CMFPlone/browser/favicon.py
A Products/CMFPlone/browser/static/favicon.ico
A Products/CMFPlone/browser/templates/test_rendering_cheatsheet.pt
A Products/CMFPlone/browser/templates/test_rendering_icons.pt
A Products/CMFPlone/controlpanel/browser/error_log_form.pt
A Products/CMFPlone/controlpanel/browser/error_log_form.py
A Products/CMFPlone/controlpanel/browser/error_log_show_entry.pt
A Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_error_log.py
A Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_relations.py
A Products/CMFPlone/resources/utils.py
A Products/CMFPlone/resources/webresource.py
A news/23.bugfix
A news/282.bugfix
A news/3031.bugfix
A news/3240.bugfix
A news/3247-2.breaking
A news/3247.breaking
A news/3247.bugfix
A news/3279.feature
A news/3290.bugfix
A news/3322.bugfix
A news/3325.breaking
A news/3351.feature
A news/3374.bugfix
A news/3416.bugfix
A news/3422.bugfix
A news/3430.bugfix
A news/3440.feature
A news/3442.bugfix
A news/3447.bugfix
A news/3453.bugfix
A news/3459.feature
A news/3463.bugfix
A news/3468.bugfix
A news/500.bugfix
A news/6004.bugfix
M CHANGES.rst
M Products/CMFPlone/CatalogTool.py
M Products/CMFPlone/MigrationTool.py
M Products/CMFPlone/Portal.py
M Products/CMFPlone/__init__.py
M Products/CMFPlone/browser/admin.py
M Products/CMFPlone/browser/configure.zcml
M Products/CMFPlone/browser/login/login.py
M Products/CMFPlone/browser/login/password_reset.py
M Products/CMFPlone/browser/login/templates/insufficient_privileges.pt
M Products/CMFPlone/browser/login/templates/login_help.pt
M Products/CMFPlone/browser/login/templates/mail_password_form.pt
M Products/CMFPlone/browser/login/templates/registered_notify_template.pt
M Products/CMFPlone/browser/navigation.py
M Products/CMFPlone/browser/ploneview.py
M Products/CMFPlone/browser/static/plone-admin-ui.css
M Products/CMFPlone/browser/templates/ajax_main_template.pt
M Products/CMFPlone/browser/templates/author.pt
M Products/CMFPlone/browser/templates/error_message.pt
M Products/CMFPlone/browser/templates/main_template.pt
M Products/CMFPlone/browser/templates/plone-addsite.pt
M Products/CMFPlone/browser/templates/plone-admin-logged-out.pt
M Products/CMFPlone/browser/templates/plone-frontpage.pt
M Products/CMFPlone/browser/templates/plone-overview.pt
M Products/CMFPlone/browser/templates/plone-upgrade.pt
M Products/CMFPlone/browser/templates/search.pt
M Products/CMFPlone/browser/templates/test_rendering.pt
M Products/CMFPlone/browser/test_rendering.py
M Products/CMFPlone/catalog.zcml
M Products/CMFPlone/configure.zcml
M Products/CMFPlone/controlpanel/README.rst
M Products/CMFPlone/controlpanel/browser/configure.zcml
M Products/CMFPlone/controlpanel/browser/emaillogin.pt
M Products/CMFPlone/controlpanel/browser/overview.py
M Products/CMFPlone/controlpanel/browser/prefsmaintemplate.pt
M Products/CMFPlone/controlpanel/browser/quickinstaller.pt
M Products/CMFPlone/controlpanel/browser/redirects-controlpanel.pt
M Products/CMFPlone/controlpanel/browser/relations_inspect.pt
M Products/CMFPlone/controlpanel/browser/resourceregistry.pt
M Products/CMFPlone/controlpanel/browser/resourceregistry.py
M Products/CMFPlone/controlpanel/browser/site.py
M Products/CMFPlone/controlpanel/browser/types.pt
M Products/CMFPlone/controlpanel/browser/usergroups_groupdetails.pt
M Products/CMFPlone/controlpanel/browser/usergroups_usersoverview.pt
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_navigation_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_filter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_usergroups_siteadmin_role.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_overview.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_relations.py
M Products/CMFPlone/exportimport/configure.zcml
M Products/CMFPlone/factory.py
M Products/CMFPlone/interfaces/controlpanel.py
M Products/CMFPlone/interfaces/resources.py
M Products/CMFPlone/meta.zcml
M Products/CMFPlone/overrides.zcml
M Products/CMFPlone/patterns/tinymce.py
M Products/CMFPlone/profiles/default/controlpanel.xml
M Products/CMFPlone/profiles/default/metadata.xml
M Products/CMFPlone/profiles/default/skins.xml
M Products/CMFPlone/profiles/default/types.xml
M Products/CMFPlone/profiles/default/types/Plone_Site.xml
M Products/CMFPlone/profiles/default/viewlets.xml
M Products/CMFPlone/profiles/dependencies/registry.xml
M Products/CMFPlone/relationhelper.py
M Products/CMFPlone/resources/__init__.py
M Products/CMFPlone/resources/browser/combine.py
M Products/CMFPlone/resources/browser/configure.zcml
M Products/CMFPlone/resources/browser/resource.py
M Products/CMFPlone/skins/plone_scripts/externalEditorEnabled.py
M Products/CMFPlone/tests/base_tag_not_present.txt
M Products/CMFPlone/tests/csrf.txt
M Products/CMFPlone/tests/robot/robodoc/README.rst
M Products/CMFPlone/tests/robot/robodoc/collaboration-advanced_control.robot
M Products/CMFPlone/tests/robot/robodoc/config-screens.robot
M Products/CMFPlone/tests/robot/robodoc/managing-working_copy.robot
M Products/CMFPlone/tests/robot/robodoc/working_with_tinymce.robot
M Products/CMFPlone/tests/robot/test_actionmenu.robot
M Products/CMFPlone/tests/robot/test_controlpanel_actions.robot
M Products/CMFPlone/tests/robot/test_controlpanel_navigation.robot
M Products/CMFPlone/tests/robot/test_controlpanel_search.robot
M Products/CMFPlone/tests/robot/test_controlpanel_security.robot
M Products/CMFPlone/tests/robot/test_controlpanel_site.robot
M Products/CMFPlone/tests/robot/test_controlpanel_social.robot
M Products/CMFPlone/tests/robot/test_edit_user_schema.robot
M Products/CMFPlone/tests/robot/test_folder_contents.robot
M Products/CMFPlone/tests/robot/test_linkintegrity.robot
M Products/CMFPlone/tests/robot/test_overlays.robot
M Products/CMFPlone/tests/robot/test_querystring.robot
M Products/CMFPlone/tests/robot/test_tinymce.robot
M Products/CMFPlone/tests/testActionsTool.py
M Products/CMFPlone/tests/testBrowserDefault.py
M Products/CMFPlone/tests/testCatalogTool.py
M Products/CMFPlone/tests/testControlPanel.py
M Products/CMFPlone/tests/testControlPanelScripts.py
M Products/CMFPlone/tests/testNavigationView.py
M Products/CMFPlone/tests/testPloneFolder.py
M Products/CMFPlone/tests/testPloneView.py
M Products/CMFPlone/tests/testPortalCreation.py
M Products/CMFPlone/tests/testResourceRegistries.py
M Products/CMFPlone/tests/testSecurity.py
M Products/CMFPlone/tests/testWebDAV.py
M Products/CMFPlone/tests/test_icons.py
M Products/CMFPlone/tests/test_safe_formatter.py
M Products/CMFPlone/traversal.py
M Products/CMFPlone/www/addPropertySheet.zpt
M README.rst
M setup.cfg
M setup.py
D Products/CMFPlone/browser/static/search.js
D Products/CMFPlone/resources/browser/configjs.py
D Products/CMFPlone/resources/browser/cook.py
D Products/CMFPlone/resources/browser/interfaces.py
D Products/CMFPlone/resources/browser/mixins.py
D Products/CMFPlone/resources/browser/scripts.pt
D Products/CMFPlone/resources/browser/scripts.py
D Products/CMFPlone/resources/browser/styles.pt
D Products/CMFPlone/resources/browser/styles.py
D Products/CMFPlone/resources/bundle.py
D Products/CMFPlone/resources/exportimport/__init__.py
D Products/CMFPlone/resources/exportimport/bundles.py
D Products/CMFPlone/resources/exportimport/resourceregistry.py
D Products/CMFPlone/skins/plone_form_scripts/plone_change_password.py
D Products/CMFPlone/skins/plone_images/favicon.ico
D Products/CMFPlone/skins/plone_prefs/password_form.pt
D Products/CMFPlone/skins/plone_prefs/password_form.pt.metadata
D Products/CMFPlone/skins/plone_prefs/prefs_error_log_form.pt
D Products/CMFPlone/skins/plone_prefs/prefs_error_log_form.pt.metadata
D Products/CMFPlone/skins/plone_prefs/prefs_error_log_setProperties.py
D Products/CMFPlone/skins/plone_prefs/prefs_error_log_showEntry.pt
D Products/CMFPlone/skins/plone_prefs/prefs_error_log_showEntry.pt.metadata
D Products/CMFPlone/skins/plone_prefs/prefs_error_log_update.py
D Products/CMFPlone/skins/plone_templates/index_html.pt
D Products/CMFPlone/skins/plone_templates/index_html.pt.metadata
D Products/CMFPlone/tests/robot/test_thememapper.robot
D Products/CMFPlone/tests/testCSSandJSRegistry.py
D Products/CMFPlone/tests/test_metabundles.py
D SECURITY.md
D news/1775.breaking
D news/1924.bugfix
D news/2957.breaking
D news/2957.bugfix
D news/3007.bugfix
D news/3021.bugfix.1
D news/3021.bugfix.2
D news/3032.bugfix
D news/3039.bugfix
D news/3041.breaking
D news/3057.breaking.1
D news/3057.breaking.2
D news/3057.breaking.3
D news/3061.breaking
D news/3084.feature
D news/3130.bugfix.1
D news/3130.bugfix.2
D news/3130.bugfix.3
D news/3175.bugfix
D news/3176.bugfix
D news/3178.bugfix
D news/3183.breaking.1
D news/3183.breaking.2
D news/3185.bugfix
D news/3192.feature
D news/3195.bugfix
D news/3208.breaking
D news/3214.bugfix
D news/3224.bugfix
D news/3231.feature
D news/3245.bugfix
D news/3249.breaking
D news/3251.bugfix
D news/3252.bugfix
D news/3257.feature
D news/3274.bugfix.1
D news/3274.bugfix.2
D news/3297.feature
D news/3299.bugfix
D news/3303.bugfix
D news/721.bugfix

b'diff --git a/SECURITY.md b/.github/SECURITY.md\nsimilarity index 60%\nrename from SECURITY.md\nrename to .github/SECURITY.md\nindex 40909ad71e..8d6d6e3323 100644\n--- a/SECURITY.md\n+++ b/.github/SECURITY.md\n@@ -15,3 +15,7 @@ There may be hotfixes available to increase the security of your version of Plon\n Please do **NOT** create a public bug report if you think this may be a security issue.\n Instead, please contact the Plone Security Team via email: security@plone.org.\n See also https://plone.org/security/report\n+\n+Only bug reports submitted directly to the security team email will be treated as responsible disclosure.\n+Any offered for sale to third parties or submitted to public bug bounty programmes will be treated as irresponsible public disclosure.\n+We will not confirm any submissions on third party platforms such as "huntr" or "hackerone" and do not give permission for those systems to accept reports on our behalf or to represent themselves as a conduit for vulnerability reports.\ndiff --git a/CHANGES.rst b/CHANGES.rst\nindex 541f7f2c78..35ed72df43 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -11,3 +11,243 @@ Changelog\n    https://github.com/plone/plone.releaser/blob/master/ADD-A-NEWS-ITEM.rst\n \n .. towncrier release notes start\n+\n+6.0.0a3 (2022-01-28)\n+--------------------\n+\n+New features:\n+\n+\n+- add a new entry in site-controlpanel to change the favicon and its MIME-type\n+  The favicon can be a .ico/png or SVG-file\n+  [talarias] (plip-barceloneta_lts_favicon)\n+- The @@plone view exposes the human_readable_size helper\n+  [ale-rt] (#3146)\n+- Allow ``from warnings import warn`` and ``warn("message", DeprecationWarning)`` TTW, like in Python Scripts.\n+  [jensens] (#3376)\n+- Customize breadcrumbs hook ``customize_entry`` for subclasses (like already in global navigation).\n+  [jensens] (#3377)\n+\n+\n+Bug fixes:\n+\n+\n+- Cleanup Error Log Form after Review\n+  [jmevissen] (#3241)\n+- Removed management_page_charset support from usergroup-groupdetails page.\n+  This is related to deprecated unicode property types, like ustring.\n+  Part of `issue 3305 <https://github.com/plone/Products.CMFPlone/issues/3305>`_.\n+  [maurits] (#3305)\n+- Update Controlpanel Error Log Form Layout\n+  Rename ControlPanel Error Log Form View prefs_error_log_form -> error-log-form\n+  [jmevissen] (#3393)\n+- Use label_site_administration instead of label_site_admin in error and mail_password_form templates (#3397)\n+- Updated metadata version to 6003.  [maurits] (#6003)\n+\n+\n+6.0.0a2 (2021-12-03)\n+--------------------\n+\n+Breaking changes:\n+\n+\n+- PLIP 3339: Replace ``z3c.autoinclude`` with ``plone.autoinclude``.\n+  Note: ``includeDependencies`` is no longer supported.\n+  [maurits, tschorr] (#3339)\n+\n+\n+New features:\n+\n+\n+- On Zope root, create Volto site by default.\n+  [maurits] (#3344)\n+\n+\n+Bug fixes:\n+\n+\n+- Move prefs_error_log* from skins to browser views\n+  [jmevissen] (#3241)\n+- The Plone site root is cataloged (#3314)\n+- Fix #3323DX-Site-Root: ZMI Nav-Tree is no longer expandable.\n+  [jensens] (#3323)\n+- Fixes #3337: \n+  Remove dead code that wont work in Py 3 anyway if called (cmp).\n+  [jensens] (#3337)\n+- Remove DYNAMIC_CONTENT from translation files\n+  [erral] (#3342)\n+- Remove adapter for index location. [wesleybl] (#3347)\n+- Use document_view as default for site root.\n+  [agitator] (#3354)\n+- Add missing lxml dependency [MrTango] (#3356)\n+- Fixes #3352 - dependency indirection on plone.app.iterate [jensens] (#3357)\n+- In Portal: use security decorators\n+  [jensens] (#3366)\n+- Updated metadata version to 6002.  [maurits] (#6002)\n+\n+\n+6.0.0a1 (2021-10-22)\n+--------------------\n+\n+Bug fixes:\n+\n+\n+- Release Plone 6.0.0a1.\n+  No changes since previous release.\n+  [maurits] (#3341)\n+\n+\n+6.0.0a1.dev1 (2021-10-16)\n+-------------------------\n+\n+Bug fixes:\n+\n+\n+- Use HTML5 meta charset.\n+  [malthe] (#2025)\n+- add icon_expr to view/edit action for @@iconresolver\n+  [petschki] (#3327)\n+- Set the "Show excluded items" (``show_excluded_items``) to False per default.\n+  Setting it to ``True`` can introduce a performance problem.\n+  ``False`` should be the default, also from user expectation for the ``exclude_from_nav`` setting on content items.\n+  No upgrade step!\n+  Previous behavior is just kept, unless you override it manually.\n+  See: #3055, first comment.\n+  Use this registry snippet to set it false::\n+\n+      <?xml version="1.0"?>\n+      <registry>\n+        <records prefix="plone" interface="Products.CMFPlone.interfaces.controlpanel.INavigationSchema">\n+          <value key="show_excluded_items">False</value>\n+        </records>\n+      </registry>\n+\n+  Fixes: #3035\n+  [thet] (#3329)\n+- Remove typo in ajax_main_template\n+  [petschki] (#3333)\n+- Fix some template issues to have properly translated messages (#3334)\n+- Updated metadata version to 6001.\n+  [maurits] (#6001)\n+\n+\n+6.0.0a1.dev0 (2021-09-15)\n+-------------------------\n+\n+Breaking changes:\n+\n+\n+- Removed our CMFQuickInstallerTool code completely.\n+  See `PLIP 1775 <https://github.com/plone/Products.CMFPlone/issues/1775>`_.\n+  [maurits] (#1775)\n+- Use Dexterity for the Plone Site root object.\n+  This is `PLIP 2454 <https://github.com/plone/Products.CMFPlone/issues/2454>`_.\n+  [jaroel, ale-rt] (#2454)\n+- Removed dependency on ``Products.TemporaryFolder``.\n+  Note: in your ``plone.recipe.zope2instance`` buildout part, you must set ``zodb-temporary-storage = off``,\n+  otherwise you get errors when starting Plone.\n+  See `issue 2957 <https://github.com/plone/Products.CMFPlone/issues/2957>`_.\n+  [maurits] (#2957)\n+- A part of "Drop Python 2 Support for Plone 6" #2812:\n+  Reflect dropping of Python 2 support in setup.py.\n+  Bump version to 6.0\n+  [jensens] (#3041)\n+- Removed ``folder_publish.cpy`` script.\n+  Replaced with folder_publish browser view in ``plone.app.content``.\n+  Removed deprecated transitionObjectsByPaths.\n+  [maurits] (#3057)\n+- Removed Products.CMFFormController dependency.\n+  [maurits] (#3057)\n+- Removed ``content_status_modify.cpy`` script and its validator ``validate_content_status_modify.vpy``.\n+  Replaced with ``content_status_modify`` browser view in ``plone.app.content``.\n+  [maurits] (#3057)\n+- Barceloneta LTS theming (#3061)\n+- Remove six at all places where used. [jensens] (#3183)\n+- Remove ``portal_utf8`` and it twin ``utf8_portal`` from ``utils`` and ``PloneTool`` since its never used nowhere. [jensens] (#3183)\n+- Remove `meta_type` index and metadata from catalog. \n+  Both were unused in Plone core and rarely used in addons.\n+  [jensens] (#3208)\n+- Plone 6 with markup update for Bootstrap.\n+  Extensive overhaul of Plone ui elements based on Bootstrap components.\n+  Introduction of icon resolver with use of icon_epr definitions.\n+  [1letter, agitator, ale-rt, balavec, ericof, erral, frapell, fredvd, fulv, gomez, jensens, krissik,\n+  mauritsvanrees,  mrtango, nilshofer, petschki, santonelli, thet, thomasmassmann, tkimngyuen,\n+  tschorr] (#3249)\n+\n+\n+New features:\n+\n+\n+- Custom date format strings from registry can be in the ``${}`` format as in the locales files. \n+  If theres a day or month name used, this will be translated. \n+  For bbb the classic strftime ``%`` strings are still behaving like before.\n+  [jensens] (#3084)\n+- Add icon resolver to return url or tag for given icon.\n+  [santonelli] (#3192)\n+- Include a controlpanel to inspect and rebuild relations.\n+  [pbauer] (#3231)\n+- Add PLONE60MARKER (and PLONE52MARKER) Python marker\n+  [sneridagh] (#3257)\n+- Protect @@historyview with Modify portal content permission. Fixes #3297\n+  [pbauer] (#3297)\n+\n+\n+Bug fixes:\n+\n+\n+- Add ``plone.app.caching`` to the list of add-ons that is upgraded when upgrading Plone.\n+  [maurits] (#82)\n+- Change control panel item sorting and sort them by title\n+  [erral] (#721)\n+- No longer doubly undo a response Content-Type change when combining bundles.\n+  [maurits] (#1924)\n+- Removed dependency on Products.Sessions.\n+  It is still pulled in by Products.PluggableAuthService though.\n+  See also `CMFPlacefulWorkflow issue 35 <https://github.com/plone/Products.CMFPlacefulWorkflow/issues/35>`_.\n+  [maurits] (#2957)\n+- Fix issue with @@search view when filtering by creation date\n+  [frapell] (#3007)\n+- Merge Hotfix20200121: isURLInPortal could be tricked into accepting malicious links. (#3021)\n+- Merge Hotfix20200121 Check of the strength of password could be skipped. (#3021)\n+- Improve tests for the workflow tool method listWFStatesByTitle (#3032)\n+- A default WSGI configuration requires Paste which is only installed with the Zope[wsgi] extra..\n+  [tschorr] (#3039)\n+- Fixed deprecation warning for zope.site.hooks.\n+  [maurits] (#3130)\n+- Fixed use of own ``utils.isDefaultPage``, which should be ``defaultpage.check_default_page_via_view``.\n+  [maurits] (#3130)\n+- Fixed invalid escape sequences in regular expressions.\n+  [maurits] (#3130)\n+- PloneBatch: define ``__bool__`` as copy of ``__nonzero__``.\n+  Python 3 calls ``__bool__`` when doing ``bool(batch)``.\n+  [maurits] (#3175)\n+- No longer consider calling ``len(batch)`` as deprecated.\n+  The deprecation warning is unvoidable with current ``Products.PageTemplates`` code.\n+  Fixes `issue 3176 <https://github.com/plone/Products.CMFPlone/issues/3176>`_.\n+  maurits (#3176)\n+- Fix tests with Products.MailHost 4.10.\n+  [maurits] (#3178)\n+- Applied: `find . -name "*.py" |grep -v skins|xargs pyupgrade --py36-plus --py3-only`.\n+  This auto-rewrites Python 2.7 specific syntax and code to Python 3.6+.\n+  [jensens] (#3185)\n+- Robot tests: Do not use jQuery.size() but use ``.length`` instead.\n+  ``.size()`` is deprecated since 1.8.\n+  [thet] (#3195)\n+- Remove traces of Archetypes\n+  [pbauer] (#3214)\n+- Fix problem to remove username and password from email settings if there was already one set. \n+  [jensens] (#3224)\n+- Fix migration when we have broken objects in the app root (e.g. the temp_folder) (#3245)\n+- Fixed tests in combination with Products.PluggableAuthService 2.6.0.\n+  [maurits] (#3251)\n+- Fix closing curly brace in search.pt template.\n+  [balavec] (#3252)\n+- Add the remote code execution fix from the `Products.PloneHotfix20210518 expressions patch <https://plone.org/security/hotfix/20210518/remote-code-execution-via-traversal-in-expressions>`_.\n+  We need this because Zope 4.6.2 is too strict for us.\n+  [maurits] (#3274)\n+- Removed the docstring from various methods to avoid making them available via a url.\n+  From the `Products.PloneHotfix20210518 reflected XSS fix <https://plone.org/security/hotfix/20210518/reflected-xss-in-various-spots>`_.\n+  [maurits] (#3274)\n+- Remove unused imports. [jensens] (#3299)\n+- Fix TypeError when adding a portlet. [daggelpop] (#3303)\n+- The portal catalog will not try to index itself anymore [ale-rt] (#3312)\ndiff --git a/Products/CMFPlone/CatalogTool.py b/Products/CMFPlone/CatalogTool.py\nindex d0732672b4..03810c863e 100644\n--- a/Products/CMFPlone/CatalogTool.py\n+++ b/Products/CMFPlone/CatalogTool.py\n@@ -255,11 +255,6 @@ def mime_type(obj):\n     return aq_base(obj).getPrimaryField().getContentType(obj)\n \n \n-@indexer(Interface)\n-def location(obj):\n-    return obj.getField(\'location\').get(obj)\n-\n-\n @implementer(IPloneCatalogTool)\n class CatalogTool(PloneBaseTool, BaseTool):\n     """Plone\'s catalog tool"""\n@@ -465,8 +460,11 @@ def clearFindAndRebuild(self):\n         idxs = list(self.indexes())\n \n         def indexObject(obj, path):\n-            if (base_hasattr(obj, \'reindexObject\') and\n-                    safe_callable(obj.reindexObject)):\n+            if (\n+                obj != self\n+                and base_hasattr(obj, \'reindexObject\')\n+                and safe_callable(obj.reindexObject)\n+            ):\n                 try:\n                     self.reindexObject(obj, idxs=idxs)\n                     # index conversions from plone.app.discussion\n@@ -485,6 +483,7 @@ def indexObject(obj, path):\n                     pass\n         self.manage_catalogClear()\n         portal = aq_parent(aq_inner(self))\n+        indexObject(portal, \'\')\n         portal.ZopeFindAndApply(\n             portal,\n             search_sub=True,\ndiff --git a/Products/CMFPlone/MigrationTool.py b/Products/CMFPlone/MigrationTool.py\nindex a7bf17b886..95dfaff1d8 100644\n--- a/Products/CMFPlone/MigrationTool.py\n+++ b/Products/CMFPlone/MigrationTool.py\n@@ -79,25 +79,47 @@ def upgrade_all(self, context):\n         setup = getToolByName(context, \'portal_setup\')\n         for addon in self:\n             if addon.safe():\n-                setup.upgradeProfile(addon.profile_id)\n+                setup.upgradeProfile(addon.profile_id, quiet=True)\n \n \n # List of upgradeable packages.  Obvious items to add here, are all\n # core packages that actually have upgrade steps.\n # Good start is portal_setup.listProfilesWithUpgrades()\n+# Please use \'check_module\' for packages that are not direct dependencies\n+# of Products.CMFPlone, but of the Plone package.\n ADDON_LIST = AddonList([\n     Addon(profile_id=\'Products.CMFEditions:CMFEditions\'),\n-    Addon(profile_id=\'Products.CMFPlacefulWorkflow:CMFPlacefulWorkflow\'),\n+    Addon(\n+        profile_id=\'Products.CMFPlacefulWorkflow:CMFPlacefulWorkflow\',\n+        check_module=\'Products.CMFPlacefulWorkflow\'\n+    ),\n+    Addon(profile_id=\'Products.PlonePAS:PlonePAS\'),\n+    Addon(\n+        profile_id=\'plone.app.caching:default\',\n+        check_module=\'plone.app.caching\'\n+    ),\n     Addon(profile_id=\'plone.app.contenttypes:default\'),\n     Addon(profile_id=\'plone.app.dexterity:default\'),\n     Addon(profile_id=\'plone.app.discussion:default\'),\n     Addon(profile_id=\'plone.app.event:default\'),\n-    Addon(profile_id=\'plone.app.iterate:plone.app.iterate\'),\n+    Addon(\n+        profile_id=\'plone.app.iterate:default\',\n+        check_module=\'plone.app.iterate\'\n+    ),\n     Addon(profile_id=\'plone.app.multilingual:default\'),\n     Addon(profile_id=\'plone.app.querystring:default\'),\n     Addon(profile_id=\'plone.app.theming:default\'),\n     Addon(profile_id=\'plone.app.users:default\'),\n+    Addon(\n+        profile_id=\'plone.restapi:default\',\n+        check_module=\'plone.restapi\'\n+    ),\n+    Addon(profile_id=\'plone.session:default\'),\n     Addon(profile_id=\'plone.staticresources:default\'),\n+    Addon(\n+        profile_id=\'plone.volto:default\',\n+        check_module=\'plone.volto\'\n+    ),\n ])\n \n \ndiff --git a/Products/CMFPlone/Portal.py b/Products/CMFPlone/Portal.py\nindex 60477253cb..024a9e49cf 100644\n--- a/Products/CMFPlone/Portal.py\n+++ b/Products/CMFPlone/Portal.py\n@@ -1,20 +1,29 @@\n from AccessControl import ClassSecurityInfo\n-from AccessControl import Permissions\n from AccessControl import Unauthorized\n from AccessControl.class_init import InitializeClass\n from Acquisition import aq_base\n from ComputedAttribute import ComputedAttribute\n+from five.localsitemanager.registry import PersistentComponents\n from OFS.ObjectManager import REPLACEABLE\n+from plone.dexterity.content import Container\n from Products.CMFCore import permissions\n+from Products.CMFCore.interfaces import IContentish\n+from Products.CMFCore.interfaces import ISiteRoot\n+from Products.CMFCore.permissions import AccessContentsInformation\n+from Products.CMFCore.permissions import AddPortalMember\n+from Products.CMFCore.permissions import MailForgottenPassword\n+from Products.CMFCore.permissions import RequestReview\n+from Products.CMFCore.permissions import ReviewPortalContent\n+from Products.CMFCore.permissions import SetOwnPassword\n+from Products.CMFCore.permissions import SetOwnProperties\n+from Products.CMFCore.PortalFolder import PortalFolderBase\n from Products.CMFCore.PortalObject import PortalObjectBase\n-from Products.CMFCore.utils import UniqueObject\n+from Products.CMFCore.Skinnable import SkinnableObjectManager\n from Products.CMFCore.utils import _checkPermission\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFDynamicViewFTI.browserdefault import BrowserDefaultMixin\n-from Products.CMFPlone import PloneMessageFactory as _\n+from Products.CMFCore.utils import UniqueObject\n from Products.CMFPlone import bbb\n-from Products.CMFPlone.DublinCore import DefaultDublinCoreImpl\n-from Products.CMFPlone.PloneFolder import OrderedContainer\n+from Products.CMFPlone import PloneMessageFactory as _\n from Products.CMFPlone.interfaces.siteroot import IPloneSiteRoot\n from Products.CMFPlone.interfaces.syndication import ISyndicatable\n from Products.CMFPlone.permissions import AddPortalContent\n@@ -23,27 +32,66 @@\n from Products.CMFPlone.permissions import ModifyPortalContent\n from Products.CMFPlone.permissions import ReplyToItem\n from Products.CMFPlone.permissions import View\n-from plone.i18n.locales.interfaces import IMetadataLanguageAvailability\n-from zope.component import queryUtility\n+from Products.Five.component.interfaces import IObjectManagerSite\n+from zope.interface.interfaces import ComponentLookupError\n+from zope.event import notify\n+from zope.interface import classImplementsOnly\n+from zope.interface import implementedBy\n from zope.interface import implementer\n+from zope.traversing.interfaces import BeforeTraverseEvent\n+\n \n if bbb.HAS_ZSERVER:\n     from webdav.NullResource import NullResource\n \n \n-@implementer(IPloneSiteRoot, ISyndicatable)\n-class PloneSite(PortalObjectBase, DefaultDublinCoreImpl, OrderedContainer,\n-                BrowserDefaultMixin, UniqueObject):\n+@implementer(IPloneSiteRoot, ISiteRoot, ISyndicatable, IObjectManagerSite)\n+class PloneSite(Container, SkinnableObjectManager, UniqueObject):\n     """ The Plone site object. """\n \n     security = ClassSecurityInfo()\n     meta_type = portal_type = \'Plone Site\'\n \n+    # Ensure certain attributes come from the correct base class.\n+    _checkId = SkinnableObjectManager._checkId\n+    manage_main = PortalFolderBase.manage_main\n+\n+    def __getattr__(self, name):\n+        try:\n+            # Try DX\n+            return super().__getattr__(name)\n+        except AttributeError:\n+            # Check portal_skins\n+            return SkinnableObjectManager.__getattr__(self, name)\n+\n+    def __setattr__(self, name, obj):\n+        # handle re setting an item as an attribute\n+        if self._tree is not None and name in self:\n+            del self[name]\n+            self[name] = obj\n+        else:\n+            super().__setattr__(name, obj)\n+\n+    def __delattr__(self, name):\n+        try:\n+            return super().__delattr__(name)\n+        except AttributeError:\n+            return self.__delitem__(name)\n+\n+    # Removes the \'Components Folder\'\n+\n     manage_options = (\n-        PortalObjectBase.manage_options[:2] +\n-        PortalObjectBase.manage_options[3:])\n+        Container.manage_options[:2] +\n+        Container.manage_options[3:])\n \n     __ac_permissions__ = (\n+        (AccessContentsInformation, ()),\n+        (AddPortalMember, ()),\n+        (SetOwnPassword, ()),\n+        (SetOwnProperties, ()),\n+        (MailForgottenPassword, ()),\n+        (RequestReview, ()),\n+        (ReviewPortalContent, ()),\n         (AddPortalContent, ()),\n         (AddPortalFolders, ()),\n         (ListPortalMembers, ()),\n@@ -53,13 +101,6 @@ class PloneSite(PortalObjectBase, DefaultDublinCoreImpl, OrderedContainer,\n                                \'manage_renameForm\', \'manage_renameObject\',\n                                \'manage_renameObjects\')))\n \n-    security.declareProtected(Permissions.copy_or_move, \'manage_copyObjects\')\n-\n-    manage_renameObject = OrderedContainer.manage_renameObject\n-\n-    moveObject = OrderedContainer.moveObject\n-    moveObjectsByDelta = OrderedContainer.moveObjectsByDelta\n-\n     # Switch off ZMI ordering interface as it assumes a slightly\n     # different functionality\n     has_order_support = 0\n@@ -73,9 +114,38 @@ class PloneSite(PortalObjectBase, DefaultDublinCoreImpl, OrderedContainer,\n     description = \'\'\n     icon = \'misc_/CMFPlone/tool.gif\'\n \n+    # From PortalObjectBase\n     def __init__(self, id, title=\'\'):\n-        PortalObjectBase.__init__(self, id, title)\n-        DefaultDublinCoreImpl.__init__(self)\n+        super(PloneSite, self).__init__(id, title=title)\n+        components = PersistentComponents(\'++etc++site\')\n+        components.__parent__ = self\n+        self.setSiteManager(components)\n+\n+    # From PortalObjectBase\n+    def __before_publishing_traverse__(self, arg1, arg2=None):\n+        """ Pre-traversal hook.\n+        """\n+        # XXX hack around a bug(?) in BeforeTraverse.MultiHook\n+        REQUEST = arg2 or arg1\n+\n+        try:\n+            notify(BeforeTraverseEvent(self, REQUEST))\n+        except ComponentLookupError:\n+            # allow ZMI access, even if the portal\'s site manager is missing\n+            pass\n+        self.setupCurrentSkin(REQUEST)\n+\n+        super(PloneSite, self).__before_publishing_traverse__(arg1, arg2)\n+\n+    # Concept from OFS.OrderSupport\n+    @security.protected(permissions.AccessContentsInformation)\n+    def tpValues(self):\n+        # Return a list of subobjects, used by ZMI tree tag (and only there).\n+        # see also https://github.com/plone/Products.CMFPlone/issues/3323\n+        return sorted(\n+            (obj for obj in self.objectValues() if getattr(aq_base(obj), \'isPrincipiaFolderish\', False)),\n+            key=lambda obj: obj.getId(),\n+        )\n \n     def __browser_default__(self, request):\n         """ Set default so we can return whatever we want instead\n@@ -112,8 +182,7 @@ def manage_beforeDelete(self, container, item):\n         PloneSite.inheritedAttribute(\'manage_beforeDelete\')(self, container,\n                                                             item)\n \n-    security.declareProtected(permissions.DeleteObjects, \'manage_delObjects\')\n-\n+    @security.protected(permissions.DeleteObjects)\n     def manage_delObjects(self, ids=None, REQUEST=None):\n         """We need to enforce security."""\n         if ids is None:\n@@ -133,9 +202,7 @@ def view(self):\n         """\n         return self()\n \n-    security.declareProtected(permissions.AccessContentsInformation,\n-                              \'folderlistingFolderContents\')\n-\n+    @security.protected(permissions.AccessContentsInformation)\n     def folderlistingFolderContents(self, contentFilter=None):\n         """Calls listFolderContents in protected only by ACI so that\n         folder_listing can work without the List folder contents permission.\n@@ -145,32 +212,13 @@ def folderlistingFolderContents(self, contentFilter=None):\n         """\n         return self.listFolderContents(contentFilter)\n \n-    security.declarePublic(\'availableLanguages\')\n-\n-    def availableLanguages(self):\n-        util = queryUtility(IMetadataLanguageAvailability)\n-        languages = util.getLanguageListing()\n-        languages.sort(lambda x, y: cmp(x[1], y[1]))\n-        # Put language neutral at the top.\n-        languages.insert(0, (\'\', _(\'Language neutral (site default)\')))\n-\n-        return languages\n-\n     def isEffective(self, date):\n         # Override DefaultDublinCoreImpl\'s test, since we are always viewable.\n         return 1\n \n-    # Ensure portals don\'t get cataloged.\n-    def indexObject(self):\n-        pass\n-\n-    def unindexObject(self):\n-        pass\n-\n-    def reindexObject(self, idxs=None):\n-        pass\n \n-    def reindexObjectSecurity(self, skip_self=False):\n-        pass\n+# Remove the IContentish interface so we don\'t listen to events that won\'t\n+# apply to the site root, ie handleUidAnnotationEvent\n+classImplementsOnly(PloneSite, implementedBy(PloneSite) - IContentish)\n \n InitializeClass(PloneSite)\ndiff --git a/Products/CMFPlone/__init__.py b/Products/CMFPlone/__init__.py\nindex 1a53d1856c..e54581a80d 100644\n--- a/Products/CMFPlone/__init__.py\n+++ b/Products/CMFPlone/__init__.py\n@@ -112,6 +112,9 @@ def initialize(context):\n     # Make cgi.escape available TTW\n     ModuleSecurityInfo(\'cgi\').declarePublic(\'escape\')\n \n+    # Make warnings available TTW\n+    ModuleSecurityInfo(\'warnings\').declarePublic(\'warn\')\n+\n     # Apply monkey patches\n     from Products.CMFPlone import patches  # noqa\n \ndiff --git a/Products/CMFPlone/browser/admin.py b/Products/CMFPlone/browser/admin.py\nindex 1c149370a8..50fdc7b4ac 100644\n--- a/Products/CMFPlone/browser/admin.py\n+++ b/Products/CMFPlone/browser/admin.py\n@@ -33,6 +33,14 @@\n from zope.schema.interfaces import IVocabularyFactory\n \n import logging\n+import pkg_resources\n+\n+\n+try:\n+    pkg_resources.get_distribution("plone.volto")\n+    HAS_VOLTO = True\n+except pkg_resources.DistributionNotFound:\n+    HAS_VOLTO = False\n LOGGER = logging.getLogger(\'Products.CMFPlone\')\n \n \n@@ -49,6 +57,7 @@ def publishTraverse(self, request, name):\n \n \n class Overview(BrowserView):\n+    has_volto = HAS_VOLTO\n \n     def sites(self, root=None):\n         if root is None:\n@@ -70,7 +79,12 @@ def sites(self, root=None):\n         return result\n \n     def outdated(self, obj):\n-        mig = obj.get(\'portal_migration\', None)\n+        # Try to pick the portal_migration as an attribute\n+        # (Plone 5 unmigrated site root) or as an item\n+        mig = (\n+            getattr(obj, "portal_migration", None)\n+            or obj.get(\'portal_migration\', None)\n+        )\n         if mig is not None:\n             return mig.needUpgrading()\n         return False\n@@ -141,10 +155,22 @@ class AddPloneSite(BrowserView):\n         \'plone.app.caching:default\',\n         \'plonetheme.barceloneta:default\',\n     )\n+    # Let\'s have a separate list for Volto.\n+    volto_default_extension_profiles = (\n+        \'plone.app.caching:default\',\n+        # We could choose to not install Barceloneta:\n+        \'plonetheme.barceloneta:default\',\n+        \'plone.volto:default\',\n+        \'plone.volto:default-homepage\'\n+    )\n \n     def profiles(self):\n         base_profiles = []\n         extension_profiles = []\n+        if HAS_VOLTO and not self.request.get(\'classic\'):\n+            selected_extension_profiles = self.volto_default_extension_profiles\n+        else:\n+            selected_extension_profiles = self.default_extension_profiles\n \n         # profiles available for install/uninstall, but hidden at the time\n         # the Plone site is created\n@@ -160,7 +186,7 @@ def profiles(self):\n                info.get(\'for\') in (IPloneSiteRoot, None):\n                 profile_id = info.get(\'id\')\n                 if profile_id not in not_installable:\n-                    if profile_id in self.default_extension_profiles:\n+                    if profile_id in selected_extension_profiles:\n                         info[\'selected\'] = \'selected\'\n                     extension_profiles.append(info)\n \ndiff --git a/Products/CMFPlone/browser/configure.zcml b/Products/CMFPlone/browser/configure.zcml\nindex 313c944bab..726123c677 100644\n--- a/Products/CMFPlone/browser/configure.zcml\n+++ b/Products/CMFPlone/browser/configure.zcml\n@@ -32,6 +32,13 @@\n       permission="zope.Public"\n       />\n \n+  <browser:page\n+      for="plone.app.layout.navigation.interfaces.INavigationRoot"\n+      name="favicon.ico"\n+      class=".favicon.SiteFavicon"\n+      permission="zope.Public"\n+      />\n+\n   <browser:page\n       for="*"\n       name="sendto_form"\n@@ -210,11 +217,6 @@\n       for="plone.app.layout.navigation.interfaces.INavigationRoot"\n       />\n \n-  <browser:resource\n-      name="search.js"\n-      file="static/search.js"\n-      />\n-\n   <!-- AtD Support -->\n   <browser:page\n       for="*"\n@@ -270,6 +272,20 @@\n       permission="zope2.View"\n       />\n \n+  <browser:page\n+      name="test-rendering-cheatsheet"\n+      for="*"\n+      class=".test_rendering.TestRenderingCheatsheetView"\n+      permission="zope2.View"\n+      />\n+\n+  <browser:page\n+      name="test-rendering-icons"\n+      for="*"\n+      class=".test_rendering.TestRenderingIconsView"\n+      permission="zope2.View"\n+      />\n+\n   <browser:page\n       for="*"\n       name="iconresolver"\ndiff --git a/Products/CMFPlone/browser/favicon.py b/Products/CMFPlone/browser/favicon.py\nnew file mode 100644\nindex 0000000000..a6812cfb84\n--- /dev/null\n+++ b/Products/CMFPlone/browser/favicon.py\n@@ -0,0 +1,41 @@\n+from Products.CMFPlone.interfaces import ISiteSchema\n+from plone.formwidget.namedfile.converter import b64decode_file\n+from plone.memoize import ram\n+from plone.namedfile.browser import DisplayFile\n+from plone.namedfile.file import NamedImage\n+from plone.registry.interfaces import IRegistry\n+from zope.component import getUtility\n+\n+import os.path\n+\n+\n+class SiteFavicon(DisplayFile):\n+    # The following attribute disables the use of an allowlist that\n+    # would otherwise cause image/vnd.microsoft.icon MIMEtyped files\n+    # to be served as downloads.  This allowlist list is sadly not\n+    # complete, at the top of the plone.namedfile.browser.py, but\n+    # fixing that is beyond the scope of this pull request.\n+    use_denylist = True\n+\n+    def __init__(self, context, request):\n+        super().__init__(context, request)\n+\n+        mimetype = "image/vnd.microsoft.icon"\n+        settings = getUtility(IRegistry).forInterface(ISiteSchema, prefix="plone")\n+        if getattr(settings, "site_favicon", False):\n+            # The user has customized the favicon via the Site configlet.\n+            filename, data = b64decode_file(settings.site_favicon)\n+            # Retrieve the MIME type auto-set by the configlet, with a\n+            # valid fallback to a well-known MIME type.\n+            mimetype = getattr(settings, "site_favicon_mimetype", mimetype)\n+        else:\n+            # No registry favicon, we use Plone\'s static copy here.\n+            filename = "favicon.ico"\n+            fallback_path = os.path.join(os.path.dirname(__file__), "static", filename)\n+            with open(fallback_path, "rb") as icon:\n+                data = icon.read()\n+        self.data = NamedImage(data=data, contentType=mimetype, filename=filename)\n+        self.filename = filename\n+\n+    def _getFile(self):\n+        return self.data\ndiff --git a/Products/CMFPlone/browser/login/login.py b/Products/CMFPlone/browser/login/login.py\nindex db2875f7ba..b4b8f2af93 100644\n--- a/Products/CMFPlone/browser/login/login.py\n+++ b/Products/CMFPlone/browser/login/login.py\n@@ -90,22 +90,24 @@ def _get_auth(self):\n                 pass\n \n     def updateWidgets(self):\n+        super().updateWidgets(prefix=\'\')\n+\n         auth = self._get_auth()\n \n         if auth:\n-            fieldname_name = auth.get(\'name_cookie\', \'__ac_name\')\n-            fieldname_password = auth.get(\'pw_cookie\', \'__ac_password\')\n+            widgetname_login = auth.get(\'name_cookie\', \'__ac_name\')\n+            widgetname_password = auth.get(\'pw_cookie\', \'__ac_password\')\n         else:\n-            fieldname_name = \'__ac_name\'\n-            fieldname_password = \'__ac_password\'\n+            widgetname_login = \'__ac_name\'\n+            widgetname_password = \'__ac_password\'\n \n-        self.fields[\'ac_name\'].__name__ = fieldname_name\n-        self.fields[\'ac_password\'].__name__ = fieldname_password\n-\n-        super().updateWidgets(prefix=\'\')\n+        self.widgets[\'ac_name\'].name = widgetname_login\n+        self.widgets[\'ac_name\'].id = widgetname_login\n+        self.widgets[\'ac_password\'].name = widgetname_password\n+        self.widgets[\'ac_password\'].id = widgetname_password\n \n         if self.use_email_as_login():\n-            self.widgets[fieldname_name].label = _(\'label_email\',\n+            self.widgets[\'ac_name\'].label = _(\'label_email\',\n                                                    default=\'Email\')\n         self.widgets[\'came_from\'].mode = HIDDEN_MODE\n         self.widgets[\'came_from\'].value = self.get_came_from()\ndiff --git a/Products/CMFPlone/browser/login/password_reset.py b/Products/CMFPlone/browser/login/password_reset.py\nindex 7594dc5461..98ebe496cd 100644\n--- a/Products/CMFPlone/browser/login/password_reset.py\n+++ b/Products/CMFPlone/browser/login/password_reset.py\n@@ -1,4 +1,5 @@\n from AccessControl.SecurityManagement import getSecurityManager\n+from DateTime import DateTime\n from email.header import Header\n from plone.app.layout.navigation.interfaces import INavigationRoot\n from plone.memoize import view\n@@ -108,8 +109,9 @@ def _auto_login(self, userid, password):\n             # with the given userid\n             user = getSecurityManager().getUser()\n \n-        login_time = user.getProperty(\'login_time\', None)\n-        if login_time is None:\n+        default = DateTime(\'2000/01/01\')\n+        login_time = user.getProperty(\'login_time\', default)\n+        if login_time == default:\n             notify(UserInitialLoginInEvent(user))\n         else:\n             notify(UserLoggedInEvent(user))\ndiff --git a/Products/CMFPlone/browser/login/templates/insufficient_privileges.pt b/Products/CMFPlone/browser/login/templates/insufficient_privileges.pt\nindex dc0b859b71..5ce1abb146 100644\n--- a/Products/CMFPlone/browser/login/templates/insufficient_privileges.pt\n+++ b/Products/CMFPlone/browser/login/templates/insufficient_privileges.pt\n@@ -29,4 +29,5 @@\n       </div>\n \n    </metal:content>\n-</html>\n+</body>\n+</html>\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/browser/login/templates/login_help.pt b/Products/CMFPlone/browser/login/templates/login_help.pt\nindex f6867222ae..07fee80d49 100644\n--- a/Products/CMFPlone/browser/login/templates/login_help.pt\n+++ b/Products/CMFPlone/browser/login/templates/login_help.pt\n@@ -18,7 +18,7 @@\n         tal:content="structure view/description">Form description</p>\n \n       <div id="content-core">\n-        <form action="." method="post"\n+        <form action="." method="post" novalidate\n           tal:attributes="action view/action; enctype view/enctype"\n           tal:define="subforms view/subforms">\n \ndiff --git a/Products/CMFPlone/browser/login/templates/mail_password_form.pt b/Products/CMFPlone/browser/login/templates/mail_password_form.pt\nindex 8c90b0e6a3..b82d74286b 100644\n--- a/Products/CMFPlone/browser/login/templates/mail_password_form.pt\n+++ b/Products/CMFPlone/browser/login/templates/mail_password_form.pt\n@@ -76,7 +76,7 @@\n             name or your email address has changed), contact the\n             <span i18n:name="site_admin">\n             <a href="#"\n-               i18n:translate="label_site_admin"\n+               i18n:translate="label_site_administration"\n                tal:attributes="href string:${portal_url}/contact-info">site administration</a></span>.\n         </p>\n \n@@ -86,7 +86,7 @@\n             address has changed), contact the\n             <span i18n:name="site_admin">\n             <a href="#"\n-               i18n:translate="label_site_admin"\n+               i18n:translate="label_site_administration"\n                tal:attributes="href string:${portal_url}/contact-info">site administration</a></span>.\n         </p>\n \ndiff --git a/Products/CMFPlone/browser/login/templates/registered_notify_template.pt b/Products/CMFPlone/browser/login/templates/registered_notify_template.pt\nindex f7d0980a0c..41789b7049 100644\n--- a/Products/CMFPlone/browser/login/templates/registered_notify_template.pt\n+++ b/Products/CMFPlone/browser/login/templates/registered_notify_template.pt\n@@ -13,7 +13,7 @@ Precedence: bulk\n      tal:omit-tag=""\n      tal:define="fullname python:member.getProperty(\'fullname\')">\n     Welcome <span i18n:name="fullname" tal:replace="fullname" />,\n-  \n+\n     Your user account has been created.\n   Your username is <span i18n:name="member" tal:replace="python:member.getUserName()" />.\n   Please activate it by visiting\ndiff --git a/Products/CMFPlone/browser/navigation.py b/Products/CMFPlone/browser/navigation.py\nindex 6a86610057..e90e29d651 100644\n--- a/Products/CMFPlone/browser/navigation.py\n+++ b/Products/CMFPlone/browser/navigation.py\n@@ -22,7 +22,7 @@\n def get_url(item):\n     if not item:\n         return None\n-    if hasattr(aq_base(item), \'getURL\'):\n+    if hasattr(aq_base(item), "getURL"):\n         # Looks like a brain\n         return item.getURL()\n     return item.absolute_url()\n@@ -31,7 +31,7 @@ def get_url(item):\n def get_id(item):\n     if not item:\n         return None\n-    getId = getattr(item, \'getId\')\n+    getId = getattr(item, "getId")\n     if not utils.safe_callable(getId):\n         # Looks like a brain\n         return getId\n@@ -40,21 +40,19 @@ def get_id(item):\n \n def get_view_url(context):\n     registry = getUtility(IRegistry)\n-    view_action_types = registry.get(\n-        \'plone.types_use_view_action_in_listings\', [])\n+    view_action_types = registry.get("plone.types_use_view_action_in_listings", [])\n     item_url = get_url(context)\n     name = get_id(context)\n \n-    if item_url and getattr(context, \'portal_type\', {}) in view_action_types:\n-        item_url += \'/view\'\n-        name += \'/view\'\n+    if item_url and getattr(context, "portal_type", {}) in view_action_types:\n+        item_url += "/view"\n+        name += "/view"\n \n     return name, item_url\n \n \n @implementer(ISiteMap)\n class CatalogSiteMap(BrowserView):\n-\n     def siteMap(self):\n         context = aq_inner(self.context)\n \n@@ -62,69 +60,60 @@ def siteMap(self):\n         query = queryBuilder()\n         strategy = getMultiAdapter((context, self), INavtreeStrategy)\n \n-        return buildFolderTree(\n-            context, obj=context,\n-            query=query, strategy=strategy\n-        )\n+        return buildFolderTree(context, obj=context, query=query, strategy=strategy)\n \n \n @implementer(INavigationTabs)\n class CatalogNavigationTabs(BrowserView):\n-\n     def _getNavQuery(self):\n         # check whether we only want actions\n         registry = getUtility(IRegistry)\n         navigation_settings = registry.forInterface(\n-            INavigationSchema,\n-            prefix="plone",\n-            check=False\n+            INavigationSchema, prefix="plone", check=False\n         )\n-        customQuery = getattr(self.context, \'getCustomNavQuery\', False)\n+        customQuery = getattr(self.context, "getCustomNavQuery", False)\n         if customQuery is not None and utils.safe_callable(customQuery):\n             query = customQuery()\n         else:\n             query = {}\n \n-        query[\'path\'] = {\n-            \'query\': getNavigationRoot(self.context),\n-            \'depth\': 1\n-        }\n-        query[\'portal_type\'] = [t for t in navigation_settings.displayed_types]\n-        query[\'sort_on\'] = navigation_settings.sort_tabs_on\n+        query["path"] = {"query": getNavigationRoot(self.context), "depth": 1}\n+        query["portal_type"] = [t for t in navigation_settings.displayed_types]\n+        query["sort_on"] = navigation_settings.sort_tabs_on\n         if navigation_settings.sort_tabs_reversed:\n-            query[\'sort_order\'] = \'reverse\'\n+            query["sort_order"] = "reverse"\n         else:\n-            query[\'sort_order\'] = \'ascending\'\n+            query["sort_order"] = "ascending"\n \n         if navigation_settings.filter_on_workflow:\n-            query[\'review_state\'] = navigation_settings.workflow_states_to_show\n+            query["review_state"] = navigation_settings.workflow_states_to_show\n \n-        query[\'is_default_page\'] = False\n+        query["is_default_page"] = False\n \n         if not navigation_settings.show_excluded_items:\n-            query[\'exclude_from_nav\'] = False\n+            # Note:\n+            # Careful with that axe, Eugene!\n+            # This introduces a performance decrease.\n+            query["exclude_from_nav"] = False\n \n         if not navigation_settings.nonfolderish_tabs:\n-            query[\'is_folderish\'] = True\n+            query["is_folderish"] = True\n \n         return query\n \n-    def topLevelTabs(self, actions=None, category=\'portal_tabs\'):\n+    def topLevelTabs(self, actions=None, category="portal_tabs"):\n         context = aq_inner(self.context)\n         registry = getUtility(IRegistry)\n         navigation_settings = registry.forInterface(\n-            INavigationSchema,\n-            prefix="plone",\n-            check=False\n+            INavigationSchema, prefix="plone", check=False\n         )\n-        mtool = getToolByName(context, \'portal_membership\')\n+        mtool = getToolByName(context, "portal_membership")\n         member = mtool.getAuthenticatedMember().id\n-        catalog = getToolByName(context, \'portal_catalog\')\n+        catalog = getToolByName(context, "portal_catalog")\n \n         if actions is None:\n             context_state = getMultiAdapter(\n-                (context, self.request),\n-                name=\'plone_context_state\'\n+                (context, self.request), name="plone_context_state"\n             )\n             actions = context_state.actions(category)\n \n@@ -133,7 +122,7 @@ def topLevelTabs(self, actions=None, category=\'portal_tabs\'):\n         # first the actions\n         for actionInfo in actions:\n             data = actionInfo.copy()\n-            data[\'name\'] = data[\'title\']\n+            data["name"] = data["title"]\n             self.customize_entry(data)\n             result.append(data)\n \n@@ -150,20 +139,22 @@ def _get_url(item):\n                 return (get_id(item), item.getRemoteUrl)\n             return get_view_url(item)\n \n-        context_path = \'/\'.join(context.getPhysicalPath())\n+        context_path = "/".join(context.getPhysicalPath())\n \n         # now add the content to results\n         for item in rawresult:\n-            if item.exclude_from_nav and not context_path.startswith(item.getPath()):  # noqa: E501\n+            if item.exclude_from_nav and not context_path.startswith(\n+                item.getPath()\n+            ):  # noqa: E501\n                 # skip excluded items if they\'re not in our context path\n                 continue\n             cid, item_url = _get_url(item)\n             data = {\n-                \'name\': utils.pretty_title_or_id(context, item),\n-                \'id\': item.getId,\n-                \'url\': item_url,\n-                \'description\': item.Description,\n-                \'review_state\': item.review_state\n+                "name": utils.pretty_title_or_id(context, item),\n+                "id": item.getId,\n+                "url": item_url,\n+                "description": item.Description,\n+                "review_state": item.review_state,\n             }\n             self.customize_entry(data, item)\n             result.append(data)\n@@ -174,21 +165,21 @@ def customize_entry(self, entry, brain=None):\n         """a little helper to enlarge customizability."""\n         pass\n \n+\n @implementer(INavigationBreadcrumbs)\n class CatalogNavigationBreadcrumbs(BrowserView):\n-\n     def breadcrumbs(self):\n         context = aq_inner(self.context)\n-        catalog = getToolByName(context, \'portal_catalog\')\n+        catalog = getToolByName(context, "portal_catalog")\n         query = {}\n \n         # Check to see if the current page is a folder default view, if so\n         # get breadcrumbs from the parent folder\n         if check_default_page_via_view(context, self.request):\n-            currentPath = \'/\'.join(utils.parent(context).getPhysicalPath())\n+            currentPath = "/".join(utils.parent(context).getPhysicalPath())\n         else:\n-            currentPath = \'/\'.join(context.getPhysicalPath())\n-        query[\'path\'] = {\'query\': currentPath, \'navtree\': 1, \'depth\': 0}\n+            currentPath = "/".join(context.getPhysicalPath())\n+        query["path"] = {"query": currentPath, "navtree": 1, "depth": 0}\n \n         rawresult = catalog(**query)\n \n@@ -210,8 +201,8 @@ def breadcrumbs(self):\n \n             cid, item_url = get_view_url(item)\n             data = {\n-                \'Title\': utils.pretty_title_or_id(context, item),\n-                \'absolute_url\': item_url\n+                "Title": utils.pretty_title_or_id(context, item),\n+                "absolute_url": item_url,\n             }\n             result.append(data)\n         return result\n@@ -219,7 +210,6 @@ def breadcrumbs(self):\n \n @implementer(INavigationBreadcrumbs)\n class PhysicalNavigationBreadcrumbs(BrowserView):\n-\n     def breadcrumbs(self):\n         context = aq_inner(self.context)\n         request = self.request\n@@ -228,12 +218,14 @@ def breadcrumbs(self):\n         name, item_url = get_view_url(context)\n \n         if container is None:\n-            return ({\n-                \'absolute_url\': item_url,\n-                \'Title\': utils.pretty_title_or_id(context, context),\n-            },)\n+            return (\n+                {\n+                    "absolute_url": item_url,\n+                    "Title": utils.pretty_title_or_id(context, context),\n+                },\n+            )\n \n-        view = getMultiAdapter((container, request), name=\'breadcrumbs_view\')\n+        view = getMultiAdapter((container, request), name="breadcrumbs_view")\n         base = tuple(view.breadcrumbs())\n \n         # Some things want to be hidden from the breadcrumbs\n@@ -241,22 +233,28 @@ def breadcrumbs(self):\n             return base\n \n         rootPath = getNavigationRoot(context)\n-        itemPath = \'/\'.join(context.getPhysicalPath())\n+        itemPath = "/".join(context.getPhysicalPath())\n \n         # don\'t show default pages in breadcrumbs or pages above the navigation\n         # root\n-        if not check_default_page_via_view(context, request) \\\n-           and not rootPath.startswith(itemPath):\n-            base += ({\n-                \'absolute_url\': item_url,\n-                \'Title\': utils.pretty_title_or_id(context, context),\n-            },)\n+        if not check_default_page_via_view(\n+            context, request\n+        ) and not rootPath.startswith(itemPath):\n+            entry = {\n+                "absolute_url": item_url,\n+                "Title": utils.pretty_title_or_id(context, context),\n+            }\n+            self.customize_entry(entry, context)\n+            base += (entry,)\n         return base\n \n+    def customize_entry(self, entry, context=None):\n+        """a little helper to enlarge customizability."""\n+        pass\n+\n \n @implementer(INavigationBreadcrumbs)\n class RootPhysicalNavigationBreadcrumbs(BrowserView):\n-\n     def breadcrumbs(self):\n         # XXX Root never gets included, it\'s hardcoded as \'Home\' in\n         # the template. We will fix and remove the hardcoding and fix\ndiff --git a/Products/CMFPlone/browser/ploneview.py b/Products/CMFPlone/browser/ploneview.py\nindex 7bae74eb74..c9735e95c8 100644\n--- a/Products/CMFPlone/browser/ploneview.py\n+++ b/Products/CMFPlone/browser/ploneview.py\n@@ -211,3 +211,7 @@ def patterns_settings(self):\n         return getMultiAdapter(\n             (context, self.request),\n             name=\'plone_patterns_settings\')()\n+\n+    @property\n+    def human_readable_size(self):\n+        return utils.human_readable_size\ndiff --git a/Products/CMFPlone/skins/plone_images/favicon.ico b/Products/CMFPlone/browser/static/favicon.ico\nsimilarity index 100%\nrename from Products/CMFPlone/skins/plone_images/favicon.ico\nrename to Products/CMFPlone/browser/static/favicon.ico\ndiff --git a/Products/CMFPlone/browser/static/plone-admin-ui.css b/Products/CMFPlone/browser/static/plone-admin-ui.css\nindex 16f9a1ab95..822b02697a 100644\n--- a/Products/CMFPlone/browser/static/plone-admin-ui.css\n+++ b/Products/CMFPlone/browser/static/plone-admin-ui.css\n@@ -1,7 +1,7 @@\n-body { \n-  background: #f4f4f4; \n+body {\n+  background: #f4f4f4;\n }\n-.admin { \n-  background: rgba(255,255,255,.95); \n+.admin {\n+  background: rgba(255,255,255,.95);\n   max-width: 800px;\n }\ndiff --git a/Products/CMFPlone/browser/static/search.js b/Products/CMFPlone/browser/static/search.js\ndeleted file mode 100644\nindex be7b97a6f0..0000000000\n--- a/Products/CMFPlone/browser/static/search.js\n+++ /dev/null\n@@ -1,149 +0,0 @@\n-/* The following line defines global variables defined elsewhere. */\n-/*globals require*/\n-\n-\n-if(require === undefined){\n-  require = function(reqs, torun){\n-    \'use strict\';\n-    return torun(window.jQuery);\n-  };\n-}\n-\n-require([\n-  \'jquery\',\n-], function($) {\n-  \'use strict\';\n-\n-  var $loader = $(\'.plone-loader\');\n-  if($loader.length === 0){\n-    $loader = $(\'<div class="plone-loader"><div class="spinner-border text-secondary" role="status"></div></div>\');\n-    $(\'body\').append($loader);\n-  }\n-\n-  var $filter = $(\'#search-filter\');\n-  var $filterBtn = $(\'#search-filter-toggle\', $filter);\n-  var $advSearchInput = $(\'#advanced-search-input\');\n-  var $ctSelectAll = $(\'#pt_toggle\');\n-  var $selectAllContainer = $(\'.search-type-options\');\n-  var $sortingContainer = $(\'#sorting-options\');\n-\n-\n-  /* handle history */\n-  if (window.history && window.history.pushState){\n-    $(window).bind(\'popstate\', function () {\n-      /* we\'re just going to cheat and reload the page so\n-         we aren\'t keep moving around state here.. \n-         Here, I\'m lazy, we\'re not using react here... */\n-      window.location = window.location.href;\n-    });\n-  }\n-\n-  var pushHistory = function(){\n-    if(window.history && window.history.pushState){\n-      var url = window.location.origin + window.location.pathname + \'?\' + $(\'#searchform\').serialize();\n-      window.history.pushState(null, null, url);\n-    }\n-  };\n-\n-  var timeout = 0;\n-  var search = function(){\n-    $loader.show();\n-    pushHistory();\n-    $.ajax({\n-      url: window.location.origin + window.location.pathname + \'?ajax_load=1\',\n-      data: $(\'#searchform\').serialize()\n-    }).done(function(html){\n-      var $html = $(html);\n-      $(\'#search-results\').replaceWith($(\'#search-results\', $html));\n-      $(\'#search-term\').replaceWith($(\'#search-term\', $html));\n-      $(\'#results-count\').replaceWith($(\'#results-count\', $html));\n-      $loader.hide();\n-    });\n-  };\n-  var searchDelayed = function(){\n-    clearTimeout(timeout);\n-    timeout = setTimeout(search, 200);\n-  };\n-\n-  var setBatchStart = function(b_start){\n-    $("#search-batch-start").attr("value", b_start);\n-  };\n-\n-  // for sorme reason the backend always flag with active class the sorting options\n-  var updateSortingState = function($el){\n-    $(\'a\', $sortingContainer).removeClass(\'active\');\n-    $el.addClass(\'active\');\n-  };\n-  var default_sort = $(\'#search-results\').attr(\'data-default-sort\');\n-  updateSortingState($(\'a[data-sort=\'+default_sort+\']\'));\n-\n-  /* sorting */\n-  $(\'a\', $sortingContainer).click(function(e){\n-    e.preventDefault();\n-    updateSortingState($(this));\n-    var sort = $(this).attr(\'data-sort\');\n-    var order = $(this).attr(\'data-order\');\n-    if(sort){\n-      $(\'[name="sort_on"]\').attr(\'value\', sort);\n-      if(order && order == \'reverse\'){\n-        $(\'[name="sort_order"]\').attr(\'value\', \'reverse\');\n-      }else{\n-        $(\'[name="sort_order"]\').attr(\'value\', \'\');\n-      }\n-    }else{\n-      $(\'[name="sort_on"]\').attr(\'value\', \'\');\n-      $(\'[name="sort_order"]\').attr(\'value\', \'\');\n-    }\n-    search();\n-  });\n-\n-\n-  /* form submission */\n-  $(\'.searchPage\').submit(function(e){\n-    e.preventDefault();\n-    setBatchStart("0");\n-    search();\n-  });\n-\n-\n-  /* filters */\n-  $filterBtn.click(function(e){\n-    e.preventDefault();\n-    $filter.toggleClass(\'activated\');\n-    if($filter.hasClass(\'activated\')){\n-      $advSearchInput.attr(\'value\', \'True\');\n-    }else{\n-      $advSearchInput.attr(\'value\', \'False\');\n-    }\n-  });\n-\n-  $ctSelectAll.change(function(){\n-    if($ctSelectAll[0].checked){\n-      $(\'input\', $selectAllContainer).each(function(){\n-        this.checked = true;\n-      });\n-    }else{\n-      $(\'input\', $selectAllContainer).each(function(){\n-        this.checked = false;\n-      });\n-    }\n-  });\n-\n-  $(\'input\', $filter).change(function(){\n-    setBatchStart("0");\n-    searchDelayed();\n-  });\n-\n-  /* pagination */\n-  $("#searchform").on("click", ".pagination a", function(e) {\n-    var urlParams = new URLSearchParams($(e.currentTarget).attr("href")),\n-        b_start = urlParams.get("b_start:int");\n-    if(!b_start) {\n-      // not plone pagination\n-      return;\n-    }\n-    e.preventDefault();\n-    setBatchStart(b_start);\n-    search();\n-  })\n-});\ndiff --git a/Products/CMFPlone/browser/templates/ajax_main_template.pt b/Products/CMFPlone/browser/templates/ajax_main_template.pt\nindex bb06444942..3f8ef8bc10 100644\n--- a/Products/CMFPlone/browser/templates/ajax_main_template.pt\n+++ b/Products/CMFPlone/browser/templates/ajax_main_template.pt\n@@ -24,7 +24,7 @@\n     <metal:cache tal:replace="structure provider:plone.httpheaders" />\n \n <head>\n-    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />\n+    <meta charset="utf-8" />\n \n     <tal:ajaxhead condition="ajax_include_head">\n     <div tal:replace="structure provider:plone.htmlhead" />\n@@ -83,7 +83,7 @@\n                          </metal:title>\n \n                          <metal:description define-slot="content-description">\n-                            <div class="documentDescription">${python:context.Description()}></div>\n+                            <div class="documentDescription">${python:context.Description()}</div>\n                             <metal:comment tal:content="nothing">\n                                 If you write a custom description always use\n                                 <div class="documentDescription"></div> for it\ndiff --git a/Products/CMFPlone/browser/templates/author.pt b/Products/CMFPlone/browser/templates/author.pt\nindex cded443192..19cd4b0d6e 100644\n--- a/Products/CMFPlone/browser/templates/author.pt\n+++ b/Products/CMFPlone/browser/templates/author.pt\n@@ -78,11 +78,11 @@\n                 </h1>\n \n                 <div class="autotabs" tal:omit-tag="not:isOwner">\n-                  <nav class="autotoc-nav" tal:condition="isOwner">\n-                    <a class="active"\n+                  <nav class="autotoc-nav nav nav-tabs" tal:condition="isOwner">\n+                    <a class="nav-link active"\n                        href="${portal_url}/author/${view/member_info/url}"\n                        i18n:translate="label_view">View</a>\n-                    <a href="${portal_url}/@@personal-information"\n+                    <a class="nav-link" href="${portal_url}/@@personal-information"\n                        i18n:translate="label_edit">Edit</a>\n                   </nav>\n \n@@ -192,7 +192,7 @@\n                           </h2>\n \n                           <div metal:define-macro="user_content_listing">\n-                          <table class="vertical listing"\n+                          <table class="table"\n                                  summary="Lists content written by an author grouped by content type"\n                                  i18n:attributes="summary summary_author_content_list;">\n                               <thead>\ndiff --git a/Products/CMFPlone/browser/templates/error_message.pt b/Products/CMFPlone/browser/templates/error_message.pt\nindex f68a5d4774..bb375632f7 100644\n--- a/Products/CMFPlone/browser/templates/error_message.pt\n+++ b/Products/CMFPlone/browser/templates/error_message.pt\n@@ -31,7 +31,7 @@\n                         If you are certain you have the correct web address but are encountering an error, please\n                         contact the <span i18n:name="site_admin">\n                         <a href="#"\n-                           i18n:translate="label_site_admin"\n+                           i18n:translate="label_site_administration"\n                            tal:attributes="href string:${context/portal_url}/contact-info">site administration</a></span>.\n                     </p>\n \ndiff --git a/Products/CMFPlone/browser/templates/main_template.pt b/Products/CMFPlone/browser/templates/main_template.pt\nindex 333ee0a205..cdebe3b295 100644\n--- a/Products/CMFPlone/browser/templates/main_template.pt\n+++ b/Products/CMFPlone/browser/templates/main_template.pt\n@@ -24,7 +24,7 @@\n     <metal:cache tal:replace="structure provider:plone.httpheaders" />\n \n   <head>\n-    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />\n+    <meta charset="utf-8" />\n \n     <div tal:replace="structure provider:plone.htmlhead" />\n \n@@ -56,6 +56,10 @@\n \n     <header id="portal-top" i18n:domain="plone">\n       <div tal:replace="structure provider:plone.portaltop" />\n+      <div id="portal-header">\n+        <div tal:replace="structure provider:plone.portalheader" />\n+      </div>\n+\n     </header>\n \n     <div id="portal-mainnavigation" tal:content="structure provider:plone.mainnavigation">\ndiff --git a/Products/CMFPlone/browser/templates/plone-addsite.pt b/Products/CMFPlone/browser/templates/plone-addsite.pt\nindex 9bd9ce862b..7dff6a74c5 100644\n--- a/Products/CMFPlone/browser/templates/plone-addsite.pt\n+++ b/Products/CMFPlone/browser/templates/plone-addsite.pt\n@@ -75,7 +75,7 @@\n           <div class="col-md-12 mb-3">\n             <label for="default_language" class="form-label" i18n:translate="">Language</label>\n \n-            <select name="default_language" class="form-control"\n+            <select name="default_language" class="form-select"\n                     tal:define="browser_language view/browser_language;\n                                 grouped_languages python:view.grouped_languages(browser_language)">\n               <optgroup tal:repeat="group grouped_languages"\n@@ -105,7 +105,7 @@\n \n             <select id="portal_timezone"\n                     name="portal_timezone"\n-                    class="form-control"\n+                    class="form-select"\n                     tal:define="tz_list view/timezones">\n               <optgroup tal:repeat="group tz_list"\n                         tal:attributes="label group">\ndiff --git a/Products/CMFPlone/browser/templates/plone-admin-logged-out.pt b/Products/CMFPlone/browser/templates/plone-admin-logged-out.pt\nindex 54d44bc571..b12de5f1e0 100644\n--- a/Products/CMFPlone/browser/templates/plone-admin-logged-out.pt\n+++ b/Products/CMFPlone/browser/templates/plone-admin-logged-out.pt\n@@ -11,10 +11,10 @@\n   <meta charset="utf-8"/>\n   <meta name="viewport" content="width=device-width, initial-scale=1"/>\n   <title i18n:translate="">Logged out</title>\n-  <link rel="stylesheet" \n-        type="text/css" \n+  <link rel="stylesheet"\n+        type="text/css"\n         href="${string:${context/absolute_url}/++theme++barceloneta/css/barceloneta.min.css}" />\n-  <link rel="stylesheet" \n+  <link rel="stylesheet"\n         type="text/css"\n         href="${string:${context/absolute_url}/++resource++plone-admin-ui.css}" />\n </head>\n@@ -23,18 +23,18 @@\n \n   <div class="container admin mt-5 mb-5 p-4">\n     <div class="row">\n-      <p><img src="/++resource++plone-logo.png" \n+      <p><img src="/++resource++plone-logo.png"\n               width="215" height="56"\n-              tal:attributes="src string:${context/absolute_url}/++resource++plone-logo.png" \n+              tal:attributes="src string:${context/absolute_url}/++resource++plone-logo.png"\n               alt="Plone logo"\n               i18n:attributes="alt" /></p>\n-      <h1 i18n:translate="">You are now logged out.<h1>\n+      <h1 i18n:translate="">You are now logged out.</h1>\n       <a href="${context/absolute_url}"\n           class="btn btn-primary"\n           i18n:translate="">\n         Go back to your site.\n       </a>\n-    </div>   \n-  </div>       \n+    </div>\n+  </div>\n </body>\n </html>\ndiff --git a/Products/CMFPlone/browser/templates/plone-frontpage.pt b/Products/CMFPlone/browser/templates/plone-frontpage.pt\nindex d04d845f15..badf8795fe 100644\n--- a/Products/CMFPlone/browser/templates/plone-frontpage.pt\n+++ b/Products/CMFPlone/browser/templates/plone-frontpage.pt\n@@ -1,10 +1,11 @@\n+<tal:doctype tal:replace="structure string:&lt;!DOCTYPE html&gt;" />\n <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"\n       xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n       lang="en"\n       i18n:domain="plonefrontpage">\n \n <head>\n-    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />\n+    <meta charset="utf-8" />\n </head>\n \n <body i18n:translate="front-text">\ndiff --git a/Products/CMFPlone/browser/templates/plone-overview.pt b/Products/CMFPlone/browser/templates/plone-overview.pt\nindex e268598b67..b1a159b988 100644\n--- a/Products/CMFPlone/browser/templates/plone-overview.pt\n+++ b/Products/CMFPlone/browser/templates/plone-overview.pt\n@@ -11,10 +11,10 @@\n   <meta charset="utf-8"/>\n   <meta name="viewport" content="width=device-width, initial-scale=1"/>\n   <title>Plone</title>\n-  <link rel="stylesheet" \n-        type="text/css" \n+  <link rel="stylesheet"\n+        type="text/css"\n         href="${string:${context/absolute_url}/++theme++barceloneta/css/barceloneta.min.css}" />\n-  <link rel="stylesheet" \n+  <link rel="stylesheet"\n         type="text/css"\n         href="${string:${context/absolute_url}/++resource++plone-admin-ui.css}" />\n </head>\n@@ -24,9 +24,9 @@\n                   many python:len(sites) > 1;">\n   <div class="container admin mt-5 mb-5 p-4">\n     <header class="row">\n-        <p><img src="/++resource++plone-logo.png" \n+        <p><img src="/++resource++plone-logo.png"\n                  width="215" height="56"\n-                 tal:attributes="src string:${context/absolute_url}/++resource++plone-logo.png" \n+                 tal:attributes="src string:${context/absolute_url}/++resource++plone-logo.png"\n                  alt="Plone logo"\n                  i18n:attributes="alt" /></p>\n         <h1 i18n:translate="">Plone is up and running.</h1>\n@@ -41,7 +41,7 @@\n               title="Plone Community Home"\n               i18n:attributes="title label_plone_org_title;">plone.org</a>.\n           </p>\n-      \n+\n     </header>\n \n     <article class="row mb-5">\n@@ -75,27 +75,36 @@\n         </div>\n         <div class="col-md-12">\n             <h2 i18n:translate="" >Add Plone site</h2>\n-            <p i18n:translate="" \n+            <p i18n:translate=""\n                tal:condition="sites">\n                 You can add another Plone site to the server.\n             </p>\n-            <p i18n:translate="" \n+            <p i18n:translate=""\n                tal:condition="not:sites"\n                class="alert-warning p-1">\n                 Your Plone site has not been added yet.\n             </p>\n             <form id="add-plone-site"\n                     method="get"\n-                    action="#"\n-                    tal:define="site_number python: \'\' if not sites else len(sites) + 1"\n-                    tal:attributes="action string:${context/absolute_url}/@@plone-addsite">\n+                    tal:define="site_number python: \'\' if not sites else len(sites) + 1;\n+                                action string:${context/absolute_url}/@@plone-addsite"\n+                    action="${action}">\n                 <input type="hidden" name="site_id" value="Plone${site_number}" />\n                 <button type="submit"\n                         class="btn btn-${python:\'success\' if sites else \'primary\'}"\n                         i18n:translate="">Create a new Plone site</button>\n+                <tal:comment condition="nothing">\n+                  When we have Volto, the button above will create a Volto site,\n+                  and we need an extra button below to create a Classic Plone site.\n+                </tal:comment>\n+                <a class="btn btn-secondary"\n+                    i18n:translate=""\n+                    tal:condition="view/has_volto"\n+                    href="${action}?site_id=Plone${site_number}&amp;classic=1"\n+                    >Create Classic Plone site</a>\n                 <a class="btn btn-secondary"\n                     i18n:translate=""\n-                    tal:attributes="href string:${context/absolute_url}/@@plone-addsite?site_id=Plone${site_number}&amp;advanced=1"\n+                    href="${action}?site_id=Plone${site_number}&amp;advanced=1"\n                     >Advanced</a>\n             </form>\n         </div>\ndiff --git a/Products/CMFPlone/browser/templates/plone-upgrade.pt b/Products/CMFPlone/browser/templates/plone-upgrade.pt\nindex 265fa08b7d..c4a09be6dd 100644\n--- a/Products/CMFPlone/browser/templates/plone-upgrade.pt\n+++ b/Products/CMFPlone/browser/templates/plone-upgrade.pt\n@@ -11,28 +11,28 @@\n   <meta charset="utf-8"/>\n   <meta name="viewport" content="width=device-width, initial-scale=1"/>\n   <title i18n:translate="">Upgrade this site</title>\n-  <link rel="stylesheet" \n-        type="text/css" \n+  <link rel="stylesheet"\n+        type="text/css"\n         href="${string:${context/absolute_url}/++theme++barceloneta/css/barceloneta.min.css}" />\n-  <link rel="stylesheet" \n+  <link rel="stylesheet"\n         type="text/css"\n         href="${string:${context/absolute_url}/++resource++plone-admin-ui.css}" />\n </head>\n \n <body id="plone-upgrade-screen"\n-      tal:define="versions view/versions; \n+      tal:define="versions view/versions;\n                   report options/report|nothing;">\n \n     <div class="container admin mt-5 mb-5 p-4">\n         <header class="row">\n-            <p><img src="/++resource++plone-logo.png" \n+            <p><img src="/++resource++plone-logo.png"\n                     width="215" height="56"\n-                    tal:attributes="src string:${context/absolute_url}/++resource++plone-logo.png" \n+                    tal:attributes="src string:${context/absolute_url}/++resource++plone-logo.png"\n                     alt="Plone logo"\n                     i18n:attributes="alt" /></p>\n             <h1>\n-              <span i18n:translate="">Upgrade this site</span>              \n-            <h1>\n+              <span i18n:translate="">Upgrade this site</span>\n+            </h1>\n             <h2>${context/Title} <small>(${context/getId})</small></h2>\n             <p class="lead" i18n:translate="">\n                 More information about the upgrade procedure can be found in the documentation section of plone.org in the\n@@ -40,13 +40,13 @@\n                    i18n:name="upgrade_guide"\n                    i18n:translate="">Upgrade Guide</a>.\n             </p>\n-        \n-        </header>    \n+\n+        </header>\n         <article class="row mb-4">\n           <div class="col-md-12 mb-3">\n             <p class="alert-success p-2" tal:condition="versions/equal">\n               <span i18n:translate="" tal:omit-tag="">Your site is up to date.</span>\n-            </p>     \n+            </p>\n \n             <p class="alert-danger p-2" tal:condition="versions/instance_gt">\n               <strong i18n:translate="">Warning!</strong> <span i18n:translate="">Your database requires a newer version of Plone than you are currently using. This is a dangerous situation. Please upgrade your Plone version as soon as possible.</span>\n@@ -54,7 +54,7 @@\n \n             <p class="alert-warning p-2" tal:condition="versions/instance_lt">\n               <span i18n:translate="">The site configuration is outdated and needs to be upgraded.</span>\n-            </p>  \n+            </p>\n             <dl tal:condition="versions/instance_lt">\n               <dt i18n:translate="">\n                 Current active configuration\n@@ -127,14 +127,14 @@\n           <input class="form-check-input" id="dry_run" name="dry_run" type="checkbox" value="1:int" />\n           <label class="form-check-label" for="dry_run" i18n:translate="">Dry run mode</label>\n \n-          <div class="form-text"  \n+          <div class="form-text"\n                i18n:translate="">\n             Run the upgrade and show the result without actually writing anything to the database.\n           </div>\n         </div>\n \n         <input type="hidden" name="form.submitted:boolean" value="True" />\n-        <button type="submit" \n+        <button type="submit"\n                 name="submit"\n                 class="btn btn-primary"\n                 i18n:translate="" >Upgrade</button>\n@@ -153,13 +153,13 @@\n \n     </tal:report>\n   </article>\n-  <footer class="row" \n+  <footer class="row"\n           tal:define="corelist versions/corelist">\n     <h2 i18n:translate="heading_version_overview">Version Overview</h2>\n     <div>Plone <span tal:replace="corelist/Plone" /></div>\n     <div>Zope <span tal:replace="corelist/Zope" /></div>\n     <div>Python <span tal:replace="corelist/Python" /></div>\n-  </footer> \n+  </footer>\n \n     </div>\n </body>\ndiff --git a/Products/CMFPlone/browser/templates/search.pt b/Products/CMFPlone/browser/templates/search.pt\nindex 1031272371..ef4d271e8d 100644\n--- a/Products/CMFPlone/browser/templates/search.pt\n+++ b/Products/CMFPlone/browser/templates/search.pt\n@@ -32,7 +32,7 @@\n           id="searchform"\n           action="@@search"\n           role="search"\n-          class="searchPage pat-formautofocus"\n+          class="searchPage pat-formautofocus pat-search"\n           tal:define="portal context/@@plone_portal_state/portal;\n                       first_call not:request/advanced_search|nothing;\n                       st python:request.get(\'SearchableText\', \'\');\n@@ -310,8 +310,6 @@\n         </div>\n \n     </form>\n-\n-    <script type="text/javascript" src="${context/portal_url}/++resource++search.js"></script>\n   </div>\n \n </body>\ndiff --git a/Products/CMFPlone/browser/templates/test_rendering.pt b/Products/CMFPlone/browser/templates/test_rendering.pt\nindex 6fe6ebd04d..55793fa423 100644\n--- a/Products/CMFPlone/browser/templates/test_rendering.pt\n+++ b/Products/CMFPlone/browser/templates/test_rendering.pt\n@@ -6,6 +6,22 @@\n \n   <metal:main fill-slot="main">\n \n+    <style>\n+\n+    </style>\n+\n+    <ul class="nav nav-tabs mb-3">\n+      <li class="nav-item">\n+        <a class="nav-link active" href="${portal_url}/@@test-rendering">Test Rendering</a>\n+      </li>\n+      <li class="nav-item">\n+        <a class="nav-link" href="${portal_url}/@@test-rendering-cheatsheet">Bootstrap Cheatsheet</a>\n+      </li>\n+      <li class="nav-item">\n+        <a class="nav-link" href="${portal_url}/@@test-rendering-icons">Icons</a>\n+      </li>\n+    </ul>\n+\n     <h1>Plone User Interface elements test page</h1>\n \n     <p class="lead">\n@@ -15,525 +31,33 @@\n       bad behaviour on this front.\n     </p>\n \n-    <p>Check out Bootstrap\'s <a href="https://getbootstrap.com/docs/4.5/getting-started/introduction/" target="_blank" title="Bootstrap Documentation">Documentation</a> and examples for Bootstrap typography, including global settings, headings, body text, lists, and more. Everything is available in Plone now!</p>\n-\n-    <h1>Headings</h1>\n-\n-    <p>All HTML headings, &lt;h1&gt; through &lt;h6&gt;, are available. .h1 through .h6 classes are also available, for when you want to match the font styling of a heading but cannot use the associated HTML element.</p>\n-\n-    <h1>h1. Bootstrap heading</h1>\n-    <h2>h2. Bootstrap heading</h2>\n-    <h3>h3. Bootstrap heading</h3>\n-    <h4>h4. Bootstrap heading</h4>\n-    <h5>h5. Bootstrap heading</h5>\n-    <h6>h6. Bootstrap heading</h6>\n-\n-    <h1>Icons</h1>\n-\n-    <p>Description to explain icon resolver</p>\n-\n-\n-    <h2>Get Icon URL</h2>\n-\n-    <p>\n-      <code>&lt;img src="" tal:attributes="src python:icons.url(\'alarm\')" class="custom-class" alt="foo" /&gt;</code>\n-    </p>\n-\n-    <p>\n-      <img src="${python:icons.url(\'alarm\')}" class="custom-class" alt="foo" />\n-    </p>\n-\n-    <h2>Get Icon Tag</h2>\n-\n-    <p>\n-      <code>&lt;tal:icon tal:replace="structure python:icons.tag(\'archive\', tag_class=\'custom-class\', tag_alt=\'foobar\')" /&gt;</code>\n-    </p>\n-\n-    <p>\n-      <tal:icon tal:replace="structure python:icons.tag(\'archive\', tag_class=\'custom-class\', tag_alt=\'foobar\')" />\n-    </p>\n-\n-    <tal:comment tal:replace="nothing">\n-    <div id="content-core">\n-      <pre>Headlines</pre>\n-\n-      <h1>Headline h1</h1>\n-      <p>And a paragraph</p>\n-      <h2>Headline h2</h2>\n-      <p>And a paragraph</p>\n-      <h3>Headline h3</h3>\n-      <p>And a paragraph</p>\n-      <h4>Headline h4</h4>\n-      <p>And a paragraph</p>\n-      <h5>Headline h5</h5>\n-      <p>And a paragraph</p>\n-      <h6>Headline h6</h6>\n-\n-      <pre>Example document rendering</pre>\n-\n-      <div class="portalMessage info" role="status">\n-        <strong>\n-          Info\n-        </strong>\n-        <span tal:omit-tag="">\n-          The portalMessage class, can also contain <a href="#">links</a> - used to\n-          give the user temporary status messages.\n-        </span>\n-      </div>\n-\n-      <dl class="portalMessage error" role="alert">\n-        <dt>\n-          Error\n-        </dt>\n-        <dd>\n-          The portalMessage \'error\' class, can also contain <a href="#">links</a> - used to\n-          give the user temporary status messages.\n-        </dd>\n-      </dl>\n-\n-      <dl class="portalMessage warning" role="status">\n-        <dt>\n-          Warning\n-        </dt>\n-        <dd>\n-          The portalMessage \'warning\' class, can also contain <a href="#">links</a> - used to\n-          give the user temporary status messages.\n-        </dd>\n-      </dl>\n-\n-      <h1 class="documentFirstHeading">Document Headline</h1>\n-\n-      <div id="plone-document-byline" class="documentByLine">\n-        <span class="documentAuthor">\n-          by\n-          <a href="http://localhost:8080/Plone/author/admin">admin</a>\n-        </span>\n-\n-        <span class="documentModified">\n-          &mdash;\n-          <span>\n-            last modified\n-          </span>\n-          May 21, 2010 10:02 AM\n-        </span>\n-\n-        <span id="content-history" class="contentHistory">\n-          &mdash;\n-          <a href="http://localhost:8080/Plone/front-page/@@historyview" rel="#pb_4" class="link-overlay"\n-            style="cursor: pointer;">History</a>\n-        </span>\n-      </div>\n-\n-      <div class="documentDescription">\n-        The document description\n-      </div>\n-\n-      <p>\n-        Normal document body text,\n-        <strong>strong text</strong>,\n-        <em>emphasised text</em>,\n-        Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Quisque odio sem, aliquam ut, suscipit at,\n-        aliquet non, justo. Vestibulum vitae urna et mi volutpat luctus. Nulla auctor, lacus ut consectetuer\n-        sagittis, erat odio vulputate sapien, eu placerat diam mauris id turpis. Aenean quis ipsum. Cum sociis\n-        natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Pellentesque rutrum. Sed\n-        mattis turpis sit amet ipsum viverra pharetra. Nunc facilisis, augue non dapibus gravida, risus quam\n-        vulputate quam, non venenatis dui massa in leo. Maecenas scelerisque dapibus libero. Suspendisse\n-        potenti.\n-        example <a href="#">Normal internal site link</a> inside a paragraph,\n-        example <a href="http://plone.org">External link to plone.org</a>,\n-        example <a href="https://plone.org">Secure (HTTPS) link to plone.org</a>,\n-        example <a href="mailto:some@address">Mailto link</a>,\n-        example <a href="ftp://some.site">FTP link</a>,\n-        example <a href="news://some.site">NNTP (news) link</a>,\n-        example <a href="webcal://some.site">WebCal link</a>,\n-        example <a href="feed://some.site">RSS feed link</a>,\n-        example <a href="irc://some.network/#channel">IRC link</a>.\n-      </p>\n-\n-      <ul>\n-        <li>Unordered list element 1\n-          <ul>\n-            <li>Unordered list subelement 1</li>\n-          </ul>\n-        </li>\n-        <li>Unordered list element 2</li>\n-        <li>Unordered list element 3</li>\n-      </ul>\n-\n-      <ol>\n-        <li>Ordered list element 1\n-          <ol>\n-            <li>Ordered list subelement 1</li>\n-          </ol>\n-        </li>\n-        <li>Ordered list element 2</li>\n-        <li>Ordered list element 3</li>\n-      </ol>\n-\n-      <dl>\n-        <dt>Definition list term</dt>\n-        <dd>Definition List description, Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Quisque odio\n-          sem, aliquam ut, suscipit at, aliquet non, justo.\n-        </dd>\n-        <dd>Another Definition List description, Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\n-          Quisque odio sem, aliquam ut, suscipit at, aliquet non, justo.\n-        </dd>\n-      </dl>\n-\n-      <h3>Definition List deprecation</h3>\n-\n-      As of Plone 5, we try to get rid of Definition Lists where they don\'t act as\n-      definition lists. We replace them in the following manners.\n-\n-\n-      <h4>in portal messages</h4>\n-\n-      <div class="portalMessage info" role="status">\n-        <strong>Not important</strong>\n-        This message is here to tell you something went just as you expected.\n-      </div>\n-      <div class="portalMessage warning" role="status">\n-        <strong>You might run into problems</strong>\n-        Please check your settings, be sure what you\'re doing is right.\n-      </div>\n-      <div class="portalMessage error" role="alert">\n-        <strong>Something went wrong</strong>\n-        This is bad, you must notice this.\n-      </div>\n-\n-      <h4>in listings</h4>\n-\n-      <div>\n-        <article>\n-          <heading><a href="">Item one</a></heading>\n-          <p>Description</p>\n-        </article>\n-        <article>\n-          <heading><a href="">Item two</a></heading>\n-          <p>Description</p>\n-        </article>\n-      </div>\n-\n-      <h2>\n-        Table of class <code>listing</code>\n-      </h2>\n-\n-      <table class="listing" id="someid" summary="Sortable table example">\n-        <!-- By giving a table an ID, it gets the sortable option.\n-         Use class="nosort" to override on a table or column basis. -->\n-        <thead>\n-          <tr>\n-            <th>Table heading</th>\n-            <th>Another heading (sortable, click to sort)</th>\n-            <th class="nosort">Fixed column (not sortable)</th>\n-          </tr>\n-        </thead>\n-        <tbody>\n-          <tr class="odd">\n-            <td>Odd table item</td>\n-            <td>Item 1</td>\n-            <td>Another item</td>\n-          </tr>\n-          <tr class="even">\n-            <td>Even table item</td>\n-            <td>Item 2</td>\n-            <td>Yet another item</td>\n-          </tr>\n-          <tr class="odd">\n-            <td>Odd table item</td>\n-            <td>Item 3</td>\n-            <td>And one more item</td>\n-          </tr>\n-        </tbody>\n-      </table>\n-\n-      <h2>\n-        Table of class <code>vertical listing</code>\n-      </h2>\n-\n-      <table class="vertical listing" summary="Vertical listing example">\n-        <tbody>\n-          <tr>\n-            <th>Table heading</th>\n-            <td>Odd table item</td>\n-          </tr>\n-          <tr>\n-            <th>Another heading</th>\n-            <td>Even table item</td>\n-          </tr>\n-        </tbody>\n-      </table>\n-\n-      <h2>Forms</h2>\n-\n-      <form>\n-        <fieldset>\n-          <legend>Fieldset legend</legend>\n-\n-          <div class="field">\n-            <label for="onefield">Text field</label>\n-            <span class="fieldRequired" title="Required" i18n:attributes="title title_required;"\n-              i18n:translate="label_required">(Required)</span>\n-            <div class="formHelp">\n-              This is the help for this form field. And <a href="#">links are also possible</a>.\n-            </div>\n-            <input type="text" id="onefield" value="Some content" />\n-          </div>\n-          <div class="field error">\n-            <label for="anotherfield">Text field with error</label>\n-            <span class="fieldRequired" title="Required" i18n:attributes="title title_required;"\n-              i18n:translate="label_required">(Required)</span>\n-            <div class="formHelp">\n-              This field is just here to demonstrate an error message.\n-            </div>\n-            <div>This is the error message.</div>\n-            <input type="text" id="anotherfield" value="Some content" />\n-          </div>\n-          <div class="field">\n-            <label for="onecheckbox">Checkbox</label>\n-            <span class="fieldRequired" title="Required" i18n:attributes="title title_required;"\n-              i18n:translate="label_required">(Required)</span>\n-            <div class="formHelp">\n-              This is a checkbox field.\n-            </div>\n-            <input type="checkbox" id="onecheckbox" />\n-          </div>\n-          <div class="field error">\n-            <label for="anothercheckbox">Checkbox with error</label>\n-            <span class="fieldRequired" title="Required" i18n:attributes="title title_required;"\n-              i18n:translate="label_required">(Required)</span>\n-            <div class="formHelp">\n-              This checkbox field is just here to demonstrate an error message.\n-            </div>\n-            <div>This is the error message.</div>\n-            <input type="checkbox" id="anothercheckbox" />\n-          </div>\n-          <div class="field">\n-            <label for="onestylishcheckbox">Checkbox without border</label>\n-            <span class="fieldRequired" title="Required" i18n:attributes="title title_required;"\n-              i18n:translate="label_required">(Required)</span>\n-            <div class="formHelp">\n-              This is a checkbox field.\n-            </div>\n-            <input type="checkbox" class="noborder" id="onestylishcheckbox" />\n-          </div>\n-          <div class="field error">\n-            <label for="anotherstylishcheckbox">\n-              Checkbox without border with error</label>\n-            <span class="fieldRequired" title="Required" i18n:attributes="title title_required;"\n-              i18n:translate="label_required">(Required)</span>\n-            <div class="formHelp">\n-              This checkbox field is just here to demonstrate an error message.\n-            </div>\n-            <div>This is the error message.</div>\n-            <input type="checkbox" class="noborder" id="anotherstylishcheckbox" />\n-          </div>\n-          <div class="field">\n-            <label>Radio</label>\n-            <span class="fieldRequired" title="Required" i18n:attributes="title title_required;"\n-              i18n:translate="label_required">(Required)</span>\n-            <div class="formHelp">\n-              This is a checkbox field.\n-            </div>\n-            <label>First\n-              <input class="noborder" type="radio" name="radio_group1" />\n-            </label>\n-            <br />\n-            <label>Second\n-              <input class="noborder" type="radio" name="radio_group1" />\n-            </label>\n-            <br />\n-            <label>Third\n-              <input class="noborder" type="radio" name="radio_group1" />\n-            </label>\n-            <br />\n-          </div>\n-          <div class="field error">\n-            <label>Radio with error</label>\n-            <span class="fieldRequired" title="Required" i18n:attributes="title title_required;"\n-              i18n:translate="label_required">(Required)</span>\n-            <div class="formHelp">\n-              This checkbox field is just here to demonstrate an error message.\n-            </div>\n-            <div>This is the error message.</div>\n-            <label>First\n-              <input class="noborder" type="radio" name="radio_group2" />\n-            </label>\n-            <br />\n-            <label>Second\n-              <input class="noborder" type="radio" name="radio_group2" />\n-            </label>\n-            <br />\n-            <label>Third\n-              <input class="noborder" type="radio" name="radio_group2" />\n-            </label>\n-            <br />\n-          </div>\n-          <div class="formControls">\n-            <input class="context" type="submit" value="Context submit" />\n-            <input class="standalone" type="submit" value="Standalone submit" />\n-            <input class="destructive" type="submit" value="Destructive submit" />\n-            <input type="submit" value="Submit" />\n-          </div>\n-          <div class="formControls">\n-            <input class="context" type="button" value="Context button" />\n-            <input class="standalone" type="button" value="Standalone button" />\n-            <input class="destructive" type="button" value="Destructive button" />\n-            <input type="button" value="Button" />\n-          </div>\n-        </fieldset>\n-      </form>\n-\n-      <h2>Table with form elements</h2>\n-\n-      <form>\n-        <table id="sortable" class="listing" summary="Content listing" cellpadding="0" cellspacing="0">\n-          <thead>\n-            <tr>\n-              <th class="nosort">\n-                <input class="noborder" type="checkbox" src="select_all_icons.png" name="selectButton"\n-                  title="Select all items" onClick="toggleSelect(this,\'paths:list\');"\n-                  tal:attributes="src string:${context/portal_url}/select_all_icons.png" alt="Select all items"\n-                  i18n:attributes="title label_select_all_items; alt label_select_all_items;" />\n-              </th>\n-              <th>&nbsp;Title&nbsp;</th>\n-              <th>&nbsp;Stuff&nbsp;</th>\n-            </tr>\n-          </thead>\n-          <tbody>\n-            <tr class="odd">\n-              <td>\n-                <input type="checkbox" class="noborder" name="paths:list" id="#" value="#" />\n-              </td>\n-              <td><a href="#">Title</a></td>\n-              <td>with class noborder</td>\n-            </tr>\n-            <tr class="even">\n-              <td>\n-                <input type="checkbox" class="noborder" name="paths:list" id="#" value="#" />\n-              </td>\n-              <td><a href="#">Title</a></td>\n-              <td>with class noborder</td>\n-            </tr>\n-          </tbody>\n-        </table>\n-      </form>\n-\n-      <div>\n-        <h2>Collapsible form</h2>\n-        <form id="searchform" name="search" method="get" class="pat-formautofocus" action="search">\n-\n-          <div class="field collapsible">\n-            <label class="collapser collapsed" for="created">New items since</label>\n-\n-            <div class="collapse" style="display: none;">\n-              <div class="formHelp">\n-                Return items added since you were last logged on, the last week, etc.\n-              </div>\n-\n-\n-              <select id="created" name="created:list:date">\n-                <option value="2010/09/06 17:50:45.971272 GMT-7">Last log-in</option>\n-                <option value="2010/09/05"> Yesterday </option>\n-                <option value="2010/08/30"> Last week </option>\n-                <option value="2010/08/06"> Last month </option>\n-                <option selected="selected" class="default_option" value="1970/02/01"> Ever </option>\n-              </select>\n-\n-            </div>\n-\n-          </div>\n-\n-\n-          <div class="field collapsible">\n-            <label class="collapser collapsed" for="Creator">Author</label>\n-\n-            <div class="collapse" style="display: none;">\n-              <div class="formHelp">\n-                Return items created by a particular person.\n-              </div>\n-\n-\n-              <select id="Creator" name="Creator">\n-                <option class="default_option" value="">Any Author</option>\n-\n-                <option value="admin">admin</option>\n-\n-              </select>\n-            </div>\n-          </div>\n-\n-          <div id="clear-space-before-submit" class="visualClear">\n-            <!-- -->\n-          </div>\n-\n-        </form>\n-      </div>\n-\n-      <div>\n-        <h2>Select All/None</h2>\n-        <form id="searchform" name="search" method="get" class="pat-formautofocus" action="search">\n-          <div>\n-            <label>Item type</label>\n-          </div>\n-          <div class="formHelp">\n-            Return items of a specific type.\n-          </div>\n-          <span class="optionsToggle">\n-            <input type="checkbox" checked="checked" class="noborder" id="pt_toggle" value="#" name="pt_toggle"\n-              onclick="javascript:toggleSelect(this, \'portal_type:list\', true)"\n-              src="http://localhost:8080/Plone/select_all_icons.png">\n-            <label for="pt_toggle">Select All/None</label>\n-          </span>\n-          <br>\n-          <div style="float: left; margin-right: 2em;">\n-            <input type="checkbox" id="portal_type_1_1" checked="checked" class="noborder" value="Document"\n-              name="portal_type:list">\n-            <label for="portal_type_1_1">Page</label>\n-            <br>\n-            <input type="checkbox" id="portal_type_1_2" checked="checked" class="noborder" value="Folder"\n-              name="portal_type:list">\n-            <label for="portal_type_1_2">Folder</label>\n-            <br>\n-          </div>\n-          <div style="float: left; margin-right: 2em;">\n-            <input type="checkbox" id="portal_type_2_1" checked="checked" class="noborder" value="Topic"\n-              name="portal_type:list">\n-            <label for="portal_type_2_1">Collection</label>\n-            <br>\n-          </div>\n-        </form>\n-        <div class="visualClear"></div>\n-      </div>\n-\n-\n-      <div>\n-        <h2>Action menu</h2>\n-        <dl class="actionMenu" id="actioMenuDemo">\n-          <dt class="actionMenuHeader">\n-            <a href="#">Action menu title</a>\n-          </dt>\n-          <dd class="actionMenuContent">\n-            Menu content\n-          </dd>\n-        </dl>\n-      </div>\n-\n-      <div>\n-        <h2>Collapsible section</h2>\n-        <dl class="collapsible">\n-          <dt class="collapsibleHeader">\n-            Collapsible section title\n-          </dt>\n-          <dd class="collapsibleContent">\n-            Collapsible section content\n-          </dd>\n-        </dl>\n-      </div>\n-\n+    <h2 class="mt-5">Alerts</h2>\n+    <p><a href="https://getbootstrap.com/docs/5.1/components/alerts/">https://getbootstrap.com/docs/5.1/components/alerts/</a></p>\n \n+    <div class="alert alert-primary" role="alert">\n+      <span>Mollit minim ullamco aliqua do culpa amet ullamco eu tempor. <a href="http://localhost:8080/Plone27/docs/edit">nulla proident velit</a></span>\n+    </div>\n+    <div class="alert alert-secondary" role="alert">\n+      <span>Mollit minim ullamco aliqua do culpa amet ullamco eu tempor. <a href="http://localhost:8080/Plone27/docs/edit">nulla proident velit</a></span>\n+    </div>\n+    <div class="alert alert-success" role="alert">\n+      <span>Mollit minim ullamco aliqua do culpa amet ullamco eu tempor. <a href="http://localhost:8080/Plone27/docs/edit">nulla proident velit</a></span>\n+    </div>\n+    <div class="alert alert-info" role="alert">\n+      <span>Mollit minim ullamco aliqua do culpa amet ullamco eu tempor. <a href="http://localhost:8080/Plone27/docs/edit">nulla proident velit</a></span>\n+    </div>\n+    <div class="alert alert-warning" role="alert">\n+      <span>Mollit minim ullamco aliqua do culpa amet ullamco eu tempor. <a href="http://localhost:8080/Plone27/docs/edit">nulla proident velit</a></span>\n+    </div>\n+    <div class="alert alert-danger" role="alert">\n+      <span>Mollit minim ullamco aliqua do culpa amet ullamco eu tempor. <a href="http://localhost:8080/Plone27/docs/edit">nulla proident velit</a></span>\n+    </div>\n+    <div class="alert alert-light" role="alert">\n+      <span>Mollit minim ullamco aliqua do culpa amet ullamco eu tempor. <a href="http://localhost:8080/Plone27/docs/edit">nulla proident velit</a></span>\n+    </div>\n+    <div class="alert alert-dark" role="alert">\n+      <span>Mollit minim ullamco aliqua do culpa amet ullamco eu tempor. <a href="http://localhost:8080/Plone27/docs/edit">nulla proident velit</a></span>\n     </div>\n-    </tal:comment>\n \n   </metal:main>\n \ndiff --git a/Products/CMFPlone/browser/templates/test_rendering_cheatsheet.pt b/Products/CMFPlone/browser/templates/test_rendering_cheatsheet.pt\nnew file mode 100644\nindex 0000000000..d22c353640\n--- /dev/null\n+++ b/Products/CMFPlone/browser/templates/test_rendering_cheatsheet.pt\n@@ -0,0 +1,1695 @@\n+<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" xmlns:tal="http://xml.zope.org/namespaces/tal"\n+  xmlns:metal="http://xml.zope.org/namespaces/metal" xmlns:i18n="http://xml.zope.org/namespaces/i18n" lang="en"\n+  metal:use-macro="context/@@main_template/macros/master" i18n:domain="plone">\n+\n+<body>\n+\n+  <metal:main fill-slot="main">\n+\n+    <style>\n+\n+      .bd-cheatsheet h2,\n+      .bd-cheatsheet .bd-heading\n+        {\n+          padding: 1em 0;\n+          background-color: #fff;\n+        }\n+\n+    </style>    \n+\n+    <ul class="nav nav-tabs mb-3">\n+      <li class="nav-item">\n+        <a class="nav-link" href="${portal_url}/@@test-rendering">Test Rendering</a>\n+      </li>\n+      <li class="nav-item">\n+        <a class="nav-link active" href="${portal_url}/@@test-rendering-cheatsheet">Bootstrap Cheatsheet</a>\n+      </li>\n+      <li class="nav-item">\n+        <a class="nav-link" href="${portal_url}/@@test-rendering-icons">Icons</a>\n+      </li>\n+    </ul>\n+\n+    <h1>Bootstrap Cheatsheet</h1>\n+\n+    <p class="lead">\n+      Kitchen sink of Bootstrap components. This page is borrowd from the <a href="https://getbootstrap.com/docs/5.1/examples/cheatsheet/" target="_blank">Bootstrap Examples Cheatsheet"</a>.\n+    </p>\n+\n+    <!--\n+      \n+      Todos to fix markup\n+\n+      Change <div class="bd-cheatsheet container-fluid bg-body"> to <div class="bd-cheatsheet bg-body">\n+      Search and replace /docs/5.1 by https://getbootstrap.com/docs/5.1\n+    \n+    -->\n+\n+    <!-- Bootstrap Cheatsheet -->\n+\n+    <div class="bd-cheatsheet bg-body">\n+      <section id="content">\n+        <h2 class="sticky-xl-top fw-bold pt-3 pt-xl-5 pb-2 pb-xl-3">Contents</h2>\n+\n+        <article class="my-3" id="typography">\n+\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Typography</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/content/typography/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <p class="display-1">Display 1</p>\n+            <p class="display-2">Display 2</p>\n+            <p class="display-3">Display 3</p>\n+            <p class="display-4">Display 4</p>\n+            <p class="display-5">Display 5</p>\n+            <p class="display-6">Display 6</p>\n+            </div>\n+\n+            <div class="bd-example">\n+            <p class="h1">Heading 1</p>\n+            <p class="h2">Heading 2</p>\n+            <p class="h3">Heading 3</p>\n+            <p class="h4">Heading 4</p>\n+            <p class="h5">Heading 5</p>\n+            <p class="h6">Heading 6</p>\n+            </div>\n+\n+            <div class="bd-example">\n+            <p class="lead">\n+              This is a lead paragraph. It stands out from regular paragraphs.\n+            </p>\n+            </div>\n+\n+            <div class="bd-example">\n+            <p>You can use the mark tag to <mark>highlight</mark> text.</p>\n+            <p><del>This line of text is meant to be treated as deleted text.</del></p>\n+            <p><s>This line of text is meant to be treated as no longer accurate.</s></p>\n+            <p><ins>This line of text is meant to be treated as an addition to the document.</ins></p>\n+            <p><u>This line of text will render as underlined.</u></p>\n+            <p><small>This line of text is meant to be treated as fine print.</small></p>\n+            <p><strong>This line rendered as bold text.</strong></p>\n+            <p><em>This line rendered as italicized text.</em></p>\n+            </div>\n+\n+            <div class="bd-example">\n+            <blockquote class="blockquote">\n+              <p>A well-known quote, contained in a blockquote element.</p>\n+              <footer class="blockquote-footer">Someone famous in <cite title="Source Title">Source Title</cite></footer>\n+            </blockquote>\n+            </div>\n+\n+            <div class="bd-example">\n+            <ul class="list-unstyled">\n+              <li>This is a list.</li>\n+              <li>It appears completely unstyled.</li>\n+              <li>Structurally, it\'s still a list.</li>\n+              <li>However, this style only applies to immediate child elements.</li>\n+              <li>Nested lists:\n+                <ul>\n+                  <li>are unaffected by this style</li>\n+                  <li>will still show a bullet</li>\n+                  <li>and have appropriate left margin</li>\n+                </ul>\n+              </li>\n+              <li>This may still come in handy in some situations.</li>\n+            </ul>\n+            </div>\n+\n+            <div class="bd-example">\n+            <ul class="list-inline">\n+              <li class="list-inline-item">This is a list item.</li>\n+              <li class="list-inline-item">And another one.</li>\n+              <li class="list-inline-item">But they\'re displayed inline.</li>\n+            </ul>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="images">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Images</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/content/images/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <svg class="bd-placeholder-img bd-placeholder-img-lg img-fluid" width="100%" height="250" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: Responsive image" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#868e96"/><text x="50%" y="50%" fill="#dee2e6" dy=".3em">Responsive image</text></svg>\n+\n+            </div>\n+\n+            <div class="bd-example">\n+            <svg class="bd-placeholder-img img-thumbnail" width="200" height="200" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="A generic square placeholder image with a white border around it, making it resemble a photograph taken with an old instant camera: 200x200" preserveAspectRatio="xMidYMid slice" focusable="false"><title>A generic square placeholder image with a white border around it, making it resemble a photograph taken with an old instant camera</title><rect width="100%" height="100%" fill="#868e96"/><text x="50%" y="50%" fill="#dee2e6" dy=".3em">200x200</text></svg>\n+\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="tables">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Tables</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/content/tables/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <table class="table table-striped">\n+              <thead>\n+              <tr>\n+                <th scope="col">#</th>\n+                <th scope="col">First</th>\n+                <th scope="col">Last</th>\n+                <th scope="col">Handle</th>\n+              </tr>\n+              </thead>\n+              <tbody>\n+              <tr>\n+                <th scope="row">1</th>\n+                <td>Mark</td>\n+                <td>Otto</td>\n+                <td>@mdo</td>\n+              </tr>\n+              <tr>\n+                <th scope="row">2</th>\n+                <td>Jacob</td>\n+                <td>Thornton</td>\n+                <td>@fat</td>\n+              </tr>\n+              <tr>\n+                <th scope="row">3</th>\n+                <td colspan="2">Larry the Bird</td>\n+                <td>@twitter</td>\n+              </tr>\n+              </tbody>\n+            </table>\n+            </div>\n+\n+            <div class="bd-example">\n+            <table class="table table-dark table-borderless">\n+              <thead>\n+              <tr>\n+                <th scope="col">#</th>\n+                <th scope="col">First</th>\n+                <th scope="col">Last</th>\n+                <th scope="col">Handle</th>\n+              </tr>\n+              </thead>\n+              <tbody>\n+              <tr>\n+                <th scope="row">1</th>\n+                <td>Mark</td>\n+                <td>Otto</td>\n+                <td>@mdo</td>\n+              </tr>\n+              <tr>\n+                <th scope="row">2</th>\n+                <td>Jacob</td>\n+                <td>Thornton</td>\n+                <td>@fat</td>\n+              </tr>\n+              <tr>\n+                <th scope="row">3</th>\n+                <td colspan="2">Larry the Bird</td>\n+                <td>@twitter</td>\n+              </tr>\n+              </tbody>\n+            </table>\n+            </div>\n+\n+            <div class="bd-example">\n+            <table class="table table-hover">\n+              <thead>\n+              <tr>\n+                <th scope="col">Class</th>\n+                <th scope="col">Heading</th>\n+                <th scope="col">Heading</th>\n+              </tr>\n+              </thead>\n+              <tbody>\n+              <tr>\n+                <th scope="row">Default</th>\n+                <td>Cell</td>\n+                <td>Cell</td>\n+              </tr>\n+              \n+              <tr class="table-primary">\n+                <th scope="row">Primary</th>\n+                <td>Cell</td>\n+                <td>Cell</td>\n+              </tr>\n+              <tr class="table-secondary">\n+                <th scope="row">Secondary</th>\n+                <td>Cell</td>\n+                <td>Cell</td>\n+              </tr>\n+              <tr class="table-success">\n+                <th scope="row">Success</th>\n+                <td>Cell</td>\n+                <td>Cell</td>\n+              </tr>\n+              <tr class="table-danger">\n+                <th scope="row">Danger</th>\n+                <td>Cell</td>\n+                <td>Cell</td>\n+              </tr>\n+              <tr class="table-warning">\n+                <th scope="row">Warning</th>\n+                <td>Cell</td>\n+                <td>Cell</td>\n+              </tr>\n+              <tr class="table-info">\n+                <th scope="row">Info</th>\n+                <td>Cell</td>\n+                <td>Cell</td>\n+              </tr>\n+              <tr class="table-light">\n+                <th scope="row">Light</th>\n+                <td>Cell</td>\n+                <td>Cell</td>\n+              </tr>\n+              <tr class="table-dark">\n+                <th scope="row">Dark</th>\n+                <td>Cell</td>\n+                <td>Cell</td>\n+              </tr>\n+              </tbody>\n+            </table>\n+            </div>\n+\n+            <div class="bd-example">\n+            <table class="table table-sm table-bordered">\n+              <thead>\n+              <tr>\n+                <th scope="col">#</th>\n+                <th scope="col">First</th>\n+                <th scope="col">Last</th>\n+                <th scope="col">Handle</th>\n+              </tr>\n+              </thead>\n+              <tbody>\n+              <tr>\n+                <th scope="row">1</th>\n+                <td>Mark</td>\n+                <td>Otto</td>\n+                <td>@mdo</td>\n+              </tr>\n+              <tr>\n+                <th scope="row">2</th>\n+                <td>Jacob</td>\n+                <td>Thornton</td>\n+                <td>@fat</td>\n+              </tr>\n+              <tr>\n+                <th scope="row">3</th>\n+                <td colspan="2">Larry the Bird</td>\n+                <td>@twitter</td>\n+              </tr>\n+              </tbody>\n+            </table>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="figures">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Figures</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/content/figures/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <figure class="figure">\n+              <svg class="bd-placeholder-img figure-img img-fluid rounded" width="400" height="300" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: 400x300" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#868e96"/><text x="50%" y="50%" fill="#dee2e6" dy=".3em">400x300</text></svg>\n+\n+              <figcaption class="figure-caption">A caption for the above image.</figcaption>\n+            </figure>\n+            </div>\n+          </div>\n+        </article>\n+      </section>\n+\n+      <section id="forms">\n+        <h2 class="sticky-xl-top fw-bold pt-3 pt-xl-5 pb-2 pb-xl-3">Forms</h2>\n+\n+        <article class="my-3" id="overview">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Overview</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/forms/overview/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <form>\n+              <div class="mb-3">\n+                <label for="exampleInputEmail1" class="form-label">Email address</label>\n+                <input type="email" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp">\n+                <div id="emailHelp" class="form-text">We\'ll never share your email with anyone else.</div>\n+              </div>\n+              <div class="mb-3">\n+                <label for="exampleInputPassword1" class="form-label">Password</label>\n+                <input type="password" class="form-control" id="exampleInputPassword1">\n+              </div>\n+              <div class="mb-3 form-check">\n+                <input type="checkbox" class="form-check-input" id="exampleCheck1">\n+                <label class="form-check-label" for="exampleCheck1">Check me out</label>\n+              </div>\n+              <fieldset class="mb-3">\n+                <legend>Radios buttons</legend>\n+                <div class="form-check">\n+                  <input type="radio" name="radios" class="form-check-input" id="exampleRadio1">\n+                  <label class="form-check-label" for="exampleRadio1">Default radio</label>\n+                </div>\n+                <div class="mb-3 form-check">\n+                  <input type="radio" name="radios" class="form-check-input" id="exampleRadio2">\n+                  <label class="form-check-label" for="exampleRadio2">Another radio</label>\n+                </div>\n+              </fieldset>\n+              <div class="mb-3">\n+                <label class="form-label" for="customFile">Upload</label>\n+                <input type="file" class="form-control" id="customFile">\n+              </div>\n+              <div class="mb-3 form-check form-switch">\n+                <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckChecked" checked>\n+                <label class="form-check-label" for="flexSwitchCheckChecked">Checked switch checkbox input</label>\n+              </div>\n+              <div class="mb-3">\n+                <label for="customRange3" class="form-label">Example range</label>\n+                <input type="range" class="form-range" min="0" max="5" step="0.5" id="customRange3">\n+              </div>\n+              <button type="submit" class="btn btn-primary">Submit</button>\n+            </form>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="disabled-forms">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Disabled forms</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/forms/overview/#disabled-forms">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <form>\n+              <fieldset disabled aria-label="Disabled fieldset example">\n+                <div class="mb-3">\n+                  <label for="disabledTextInput" class="form-label">Disabled input</label>\n+                  <input type="text" id="disabledTextInput" class="form-control" placeholder="Disabled input">\n+                </div>\n+                <div class="mb-3">\n+                  <label for="disabledSelect" class="form-label">Disabled select menu</label>\n+                  <select id="disabledSelect" class="form-select">\n+                    <option>Disabled select</option>\n+                  </select>\n+                </div>\n+                <div class="mb-3">\n+                  <div class="form-check">\n+                    <input class="form-check-input" type="checkbox" id="disabledFieldsetCheck" disabled>\n+                    <label class="form-check-label" for="disabledFieldsetCheck">\n+                      Can\'t check this\n+                    </label>\n+                  </div>\n+                </div>\n+                <fieldset class="mb-3">\n+                  <legend>Disabled radios buttons</legend>\n+                  <div class="form-check">\n+                    <input type="radio" name="radios" class="form-check-input" id="disabledRadio1" disabled>\n+                    <label class="form-check-label" for="disabledRadio1">Disabled radio</label>\n+                  </div>\n+                  <div class="mb-3 form-check">\n+                    <input type="radio" name="radios" class="form-check-input" id="disabledRadio2" disabled>\n+                    <label class="form-check-label" for="disabledRadio2">Another radio</label>\n+                  </div>\n+                </fieldset>\n+                <div class="mb-3">\n+                  <label class="form-label" for="disabledCustomFile">Upload</label>\n+                  <input type="file" class="form-control" id="disabledCustomFile" disabled>\n+                </div>\n+                <div class="mb-3 form-check form-switch">\n+                  <input class="form-check-input" type="checkbox" role="switch" id="disabledSwitchCheckChecked" checked disabled>\n+                  <label class="form-check-label" for="disabledSwitchCheckChecked">Disabled checked switch checkbox input</label>\n+                </div>\n+                <div class="mb-3">\n+                  <label for="disabledRange" class="form-label">Disabled range</label>\n+                  <input type="range" class="form-range" min="0" max="5" step="0.5" id="disabledRange">\n+                </div>\n+                <button type="submit" class="btn btn-primary">Submit</button>\n+              </fieldset>\n+            </form>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="sizing">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Sizing</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/forms/form-control/#sizing">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <div class="mb-3">\n+              <input class="form-control form-control-lg" type="text" placeholder=".form-control-lg" aria-label=".form-control-lg example">\n+            </div>\n+            <div class="mb-3">\n+              <select class="form-select form-select-lg mb-3" aria-label=".form-select-lg example">\n+                <option selected>Open this select menu</option>\n+                <option value="1">One</option>\n+                <option value="2">Two</option>\n+                <option value="3">Three</option>\n+              </select>\n+            </div>\n+            <div class="mb-3">\n+              <input type="file" class="form-control form-control-lg" aria-label="Large file input example">\n+            </div>\n+            </div>\n+\n+            <div class="bd-example">\n+            <div class="mb-3">\n+              <input class="form-control form-control-sm" type="text" placeholder=".form-control-sm" aria-label=".form-control-sm example">\n+            </div>\n+            <div class="mb-3">\n+              <select class="form-select form-select-sm" aria-label=".form-select-sm example">\n+                <option selected>Open this select menu</option>\n+                <option value="1">One</option>\n+                <option value="2">Two</option>\n+                <option value="3">Three</option>\n+              </select>\n+            </div>\n+            <div class="mb-3">\n+              <input type="file" class="form-control form-control-sm" aria-label="Small file input example">\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="input-group">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Input group</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/forms/input-group/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <div class="input-group mb-3">\n+              <span class="input-group-text" id="basic-addon1">@</span>\n+              <input type="text" class="form-control" placeholder="Username" aria-label="Username" aria-describedby="basic-addon1">\n+            </div>\n+            <div class="input-group mb-3">\n+              <input type="text" class="form-control" placeholder="Recipient\'s username" aria-label="Recipient\'s username" aria-describedby="basic-addon2">\n+              <span class="input-group-text" id="basic-addon2">@example.com</span>\n+            </div>\n+            <label for="basic-url" class="form-label">Your vanity URL</label>\n+            <div class="input-group mb-3">\n+              <span class="input-group-text" id="basic-addon3">https://example.com/users/</span>\n+              <input type="text" class="form-control" id="basic-url" aria-describedby="basic-addon3">\n+            </div>\n+            <div class="input-group mb-3">\n+              <span class="input-group-text">$</span>\n+              <input type="text" class="form-control" aria-label="Amount (to the nearest dollar)">\n+              <span class="input-group-text">.00</span>\n+            </div>\n+            <div class="input-group">\n+              <span class="input-group-text">With textarea</span>\n+              <textarea class="form-control" aria-label="With textarea"></textarea>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="floating-labels">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Floating labels</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/forms/floating-labels/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <form>\n+              <div class="form-floating mb-3">\n+                <input type="email" class="form-control" id="floatingInput" placeholder="name@example.com">\n+                <label for="floatingInput">Email address</label>\n+              </div>\n+              <div class="form-floating">\n+                <input type="password" class="form-control" id="floatingPassword" placeholder="Password">\n+                <label for="floatingPassword">Password</label>\n+              </div>\n+            </form>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="validation">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Validation</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/forms/validation/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <form class="row g-3">\n+              <div class="col-md-4">\n+                <label for="validationServer01" class="form-label">First name</label>\n+                <input type="text" class="form-control is-valid" id="validationServer01" value="Mark" required>\n+                <div class="valid-feedback">\n+                  Looks good!\n+                </div>\n+              </div>\n+              <div class="col-md-4">\n+                <label for="validationServer02" class="form-label">Last name</label>\n+                <input type="text" class="form-control is-valid" id="validationServer02" value="Otto" required>\n+                <div class="valid-feedback">\n+                  Looks good!\n+                </div>\n+              </div>\n+              <div class="col-md-4">\n+                <label for="validationServerUsername" class="form-label">Username</label>\n+                <div class="input-group has-validation">\n+                  <span class="input-group-text" id="inputGroupPrepend3">@</span>\n+                  <input type="text" class="form-control is-invalid" id="validationServerUsername" aria-describedby="inputGroupPrepend3" required>\n+                  <div class="invalid-feedback">\n+                    Please choose a username.\n+                  </div>\n+                </div>\n+              </div>\n+              <div class="col-md-6">\n+                <label for="validationServer03" class="form-label">City</label>\n+                <input type="text" class="form-control is-invalid" id="validationServer03" required>\n+                <div class="invalid-feedback">\n+                  Please provide a valid city.\n+                </div>\n+              </div>\n+              <div class="col-md-3">\n+                <label for="validationServer04" class="form-label">State</label>\n+                <select class="form-select is-invalid" id="validationServer04" required>\n+                  <option selected disabled value="">Choose...</option>\n+                  <option>...</option>\n+                </select>\n+                <div class="invalid-feedback">\n+                  Please select a valid state.\n+                </div>\n+              </div>\n+              <div class="col-md-3">\n+                <label for="validationServer05" class="form-label">Zip</label>\n+                <input type="text" class="form-control is-invalid" id="validationServer05" required>\n+                <div class="invalid-feedback">\n+                  Please provide a valid zip.\n+                </div>\n+              </div>\n+              <div class="col-12">\n+                <div class="form-check">\n+                  <input class="form-check-input is-invalid" type="checkbox" value="" id="invalidCheck3" required>\n+                  <label class="form-check-label" for="invalidCheck3">\n+                    Agree to terms and conditions\n+                  </label>\n+                  <div class="invalid-feedback">\n+                    You must agree before submitting.\n+                  </div>\n+                </div>\n+              </div>\n+              <div class="col-12">\n+                <button class="btn btn-primary" type="submit">Submit form</button>\n+              </div>\n+            </form>\n+            </div>\n+          </div>\n+        </article>\n+      </section>\n+\n+      <section id="components">\n+        <h2 class="sticky-xl-top fw-bold pt-3 pt-xl-5 pb-2 pb-xl-3">Components</h2>\n+\n+        <article class="my-3" id="accordion">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Accordion</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/accordion/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <div class="accordion" id="accordionExample">\n+              <div class="accordion-item">\n+                <h4 class="accordion-header" id="headingOne">\n+                  <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">\n+                    Accordion Item #1\n+                  </button>\n+                </h4>\n+                <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#accordionExample">\n+                  <div class="accordion-body">\n+                    <strong>This is the first item\'s accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It\'s also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n+                  </div>\n+                </div>\n+              </div>\n+              <div class="accordion-item">\n+                <h4 class="accordion-header" id="headingTwo">\n+                  <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">\n+                    Accordion Item #2\n+                  </button>\n+                </h4>\n+                <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#accordionExample">\n+                  <div class="accordion-body">\n+                    <strong>This is the second item\'s accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It\'s also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n+                  </div>\n+                </div>\n+              </div>\n+              <div class="accordion-item">\n+                <h4 class="accordion-header" id="headingThree">\n+                  <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">\n+                    Accordion Item #3\n+                  </button>\n+                </h4>\n+                <div id="collapseThree" class="accordion-collapse collapse" aria-labelledby="headingThree" data-bs-parent="#accordionExample">\n+                  <div class="accordion-body">\n+                    <strong>This is the third item\'s accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It\'s also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n+                  </div>\n+                </div>\n+              </div>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="alerts">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Alerts</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/alerts/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            \n+            <div class="alert alert-primary alert-dismissible fade show" role="alert">\n+              A simple primary alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.\n+              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n+            </div>\n+            <div class="alert alert-secondary alert-dismissible fade show" role="alert">\n+              A simple secondary alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.\n+              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n+            </div>\n+            <div class="alert alert-success alert-dismissible fade show" role="alert">\n+              A simple success alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.\n+              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n+            </div>\n+            <div class="alert alert-danger alert-dismissible fade show" role="alert">\n+              A simple danger alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.\n+              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n+            </div>\n+            <div class="alert alert-warning alert-dismissible fade show" role="alert">\n+              A simple warning alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.\n+              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n+            </div>\n+            <div class="alert alert-info alert-dismissible fade show" role="alert">\n+              A simple info alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.\n+              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n+            </div>\n+            <div class="alert alert-light alert-dismissible fade show" role="alert">\n+              A simple light alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.\n+              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n+            </div>\n+            <div class="alert alert-dark alert-dismissible fade show" role="alert">\n+              A simple dark alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.\n+              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n+            </div>\n+            </div>\n+\n+            <div class="bd-example">\n+            <div class="alert alert-success" role="alert">\n+              <h4 class="alert-heading">Well done!</h4>\n+              <p>Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.</p>\n+              <hr>\n+              <p class="mb-0">Whenever you need to, be sure to use margin utilities to keep things nice and tidy.</p>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="badge">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Badge</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/badge/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <p class="h1">Example heading <span class="badge bg-primary">New</span></p>\n+            <p class="h2">Example heading <span class="badge bg-secondary">New</span></p>\n+            <p class="h3">Example heading <span class="badge bg-success">New</span></p>\n+            <p class="h4">Example heading <span class="badge bg-danger">New</span></p>\n+            <p class="h5">Example heading <span class="badge bg-warning text-dark">New</span></p>\n+            <p class="h6">Example heading <span class="badge bg-info text-dark">New</span></p>\n+            <p class="h6">Example heading <span class="badge bg-light text-dark">New</span></p>\n+            <p class="h6">Example heading <span class="badge bg-dark">New</span></p>\n+            </div>\n+\n+            <div class="bd-example">\n+            \n+            <span class="badge rounded-pill bg-primary">Primary</span>\n+            <span class="badge rounded-pill bg-secondary">Secondary</span>\n+            <span class="badge rounded-pill bg-success">Success</span>\n+            <span class="badge rounded-pill bg-danger">Danger</span>\n+            <span class="badge rounded-pill bg-warning text-dark">Warning</span>\n+            <span class="badge rounded-pill bg-info text-dark">Info</span>\n+            <span class="badge rounded-pill bg-light text-dark">Light</span>\n+            <span class="badge rounded-pill bg-dark">Dark</span>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="breadcrumb">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Breadcrumb</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/breadcrumb/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <nav aria-label="breadcrumb">\n+              <ol class="breadcrumb">\n+                <li class="breadcrumb-item"><a href="#">Home</a></li>\n+                <li class="breadcrumb-item"><a href="#">Library</a></li>\n+                <li class="breadcrumb-item active" aria-current="page">Data</li>\n+              </ol>\n+            </nav>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="buttons">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Buttons</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/buttons/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            \n+            <button type="button" class="btn btn-primary">Primary</button>\n+            <button type="button" class="btn btn-secondary">Secondary</button>\n+            <button type="button" class="btn btn-success">Success</button>\n+            <button type="button" class="btn btn-danger">Danger</button>\n+            <button type="button" class="btn btn-warning">Warning</button>\n+            <button type="button" class="btn btn-info">Info</button>\n+            <button type="button" class="btn btn-light">Light</button>\n+            <button type="button" class="btn btn-dark">Dark</button>\n+\n+            <button type="button" class="btn btn-link">Link</button>\n+            </div>\n+\n+            <div class="bd-example">\n+            \n+            <button type="button" class="btn btn-outline-primary">Primary</button>\n+            <button type="button" class="btn btn-outline-secondary">Secondary</button>\n+            <button type="button" class="btn btn-outline-success">Success</button>\n+            <button type="button" class="btn btn-outline-danger">Danger</button>\n+            <button type="button" class="btn btn-outline-warning">Warning</button>\n+            <button type="button" class="btn btn-outline-info">Info</button>\n+            <button type="button" class="btn btn-outline-light">Light</button>\n+            <button type="button" class="btn btn-outline-dark">Dark</button>\n+            </div>\n+\n+            <div class="bd-example">\n+            <button type="button" class="btn btn-primary btn-sm">Small button</button>\n+            <button type="button" class="btn btn-primary">Standard button</button>\n+            <button type="button" class="btn btn-primary btn-lg">Large button</button>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="button-group">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Button group</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/button-group/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <div class="btn-toolbar" role="toolbar" aria-label="Toolbar with button groups">\n+              <div class="btn-group me-2" role="group" aria-label="First group">\n+                <button type="button" class="btn btn-secondary">1</button>\n+                <button type="button" class="btn btn-secondary">2</button>\n+                <button type="button" class="btn btn-secondary">3</button>\n+                <button type="button" class="btn btn-secondary">4</button>\n+              </div>\n+              <div class="btn-group me-2" role="group" aria-label="Second group">\n+                <button type="button" class="btn btn-secondary">5</button>\n+                <button type="button" class="btn btn-secondary">6</button>\n+                <button type="button" class="btn btn-secondary">7</button>\n+              </div>\n+              <div class="btn-group" role="group" aria-label="Third group">\n+                <button type="button" class="btn btn-secondary">8</button>\n+              </div>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="card">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Card</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/card/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <div class="row  row-cols-1 row-cols-md-2 g-4">\n+              <div class="col">\n+                <div class="card">\n+                  <svg class="bd-placeholder-img card-img-top" width="100%" height="180" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: Image cap" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#868e96"/><text x="50%" y="50%" fill="#dee2e6" dy=".3em">Image cap</text></svg>\n+\n+                  <div class="card-body">\n+                    <h5 class="card-title">Card title</h5>\n+                    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card\'s content.</p>\n+                    <a href="#" class="btn btn-primary">Go somewhere</a>\n+                  </div>\n+                </div>\n+              </div>\n+              <div class="col">\n+                <div class="card">\n+                  <div class="card-header">\n+                    Featured\n+                  </div>\n+                  <div class="card-body">\n+                    <h5 class="card-title">Card title</h5>\n+                    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card\'s content.</p>\n+                    <a href="#" class="btn btn-primary">Go somewhere</a>\n+                  </div>\n+                  <div class="card-footer text-muted">\n+                    2 days ago\n+                  </div>\n+                </div>\n+              </div>\n+              <div class="col">\n+                <div class="card">\n+                  <div class="card-body">\n+                    <h5 class="card-title">Card title</h5>\n+                    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card\'s content.</p>\n+                  </div>\n+                  <ul class="list-group list-group-flush">\n+                    <li class="list-group-item">An item</li>\n+                    <li class="list-group-item">A second item</li>\n+                    <li class="list-group-item">A third item</li>\n+                  </ul>\n+                  <div class="card-body">\n+                    <a href="#" class="card-link">Card link</a>\n+                    <a href="#" class="card-link">Another link</a>\n+                  </div>\n+                </div>\n+              </div>\n+              <div class="col">\n+                <div class="card">\n+                  <div class="row g-0">\n+                    <div class="col-md-4">\n+                      <svg class="bd-placeholder-img" width="100%" height="250" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: Image" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#868e96"/><text x="50%" y="50%" fill="#dee2e6" dy=".3em">Image</text></svg>\n+\n+                    </div>\n+                    <div class="col-md-8">\n+                      <div class="card-body">\n+                        <h5 class="card-title">Card title</h5>\n+                        <p class="card-text">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\n+                        <p class="card-text"><small class="text-muted">Last updated 3 mins ago</small></p>\n+                      </div>\n+                    </div>\n+                  </div>\n+                </div>\n+              </div>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="carousel">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Carousel</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/carousel/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <div id="carouselExampleCaptions" class="carousel slide" data-bs-ride="carousel">\n+              <div class="carousel-indicators">\n+                <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>\n+                <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="1" aria-label="Slide 2"></button>\n+                <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="2" aria-label="Slide 3"></button>\n+              </div>\n+              <div class="carousel-inner">\n+                <div class="carousel-item active">\n+                  <svg class="bd-placeholder-img bd-placeholder-img-lg d-block w-100" width="800" height="400" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: First slide" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#777"/><text x="50%" y="50%" fill="#555" dy=".3em">First slide</text></svg>\n+\n+                  <div class="carousel-caption d-none d-md-block">\n+                    <h5>First slide label</h5>\n+                    <p>Some representative placeholder content for the first slide.</p>\n+                  </div>\n+                </div>\n+                <div class="carousel-item">\n+                  <svg class="bd-placeholder-img bd-placeholder-img-lg d-block w-100" width="800" height="400" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: Second slide" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#666"/><text x="50%" y="50%" fill="#444" dy=".3em">Second slide</text></svg>\n+\n+                  <div class="carousel-caption d-none d-md-block">\n+                    <h5>Second slide label</h5>\n+                    <p>Some representative placeholder content for the second slide.</p>\n+                  </div>\n+                </div>\n+                <div class="carousel-item">\n+                  <svg class="bd-placeholder-img bd-placeholder-img-lg d-block w-100" width="800" height="400" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: Third slide" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#555"/><text x="50%" y="50%" fill="#333" dy=".3em">Third slide</text></svg>\n+\n+                  <div class="carousel-caption d-none d-md-block">\n+                    <h5>Third slide label</h5>\n+                    <p>Some representative placeholder content for the third slide.</p>\n+                  </div>\n+                </div>\n+              </div>\n+              <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleCaptions"  data-bs-slide="prev">\n+                <span class="carousel-control-prev-icon" aria-hidden="true"></span>\n+                <span class="visually-hidden">Previous</span>\n+              </button>\n+              <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleCaptions"  data-bs-slide="next">\n+                <span class="carousel-control-next-icon" aria-hidden="true"></span>\n+                <span class="visually-hidden">Next</span>\n+              </button>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="dropdowns">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Dropdowns</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/dropdowns/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <div class="btn-group w-100 align-items-center justify-content-between flex-wrap">\n+              <div class="dropdown">\n+                <button class="btn btn-secondary btn-sm dropdown-toggle" type="button" id="dropdownMenuButtonSM" data-bs-toggle="dropdown" aria-expanded="false">\n+                  Dropdown button\n+                </button>\n+                <ul class="dropdown-menu" aria-labelledby="dropdownMenuButtonSM">\n+                  <li><h6 class="dropdown-header">Dropdown header</h6></li>\n+                  <li><a class="dropdown-item" href="#">Action</a></li>\n+                  <li><a class="dropdown-item" href="#">Another action</a></li>\n+                  <li><a class="dropdown-item" href="#">Something else here</a></li>\n+                  <li><hr class="dropdown-divider"></li>\n+                  <li><a class="dropdown-item" href="#">Separated link</a></li>\n+                </ul>\n+              </div>\n+              <div class="dropdown">\n+                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">\n+                  Dropdown button\n+                </button>\n+                <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">\n+                  <li><h6 class="dropdown-header">Dropdown header</h6></li>\n+                  <li><a class="dropdown-item" href="#">Action</a></li>\n+                  <li><a class="dropdown-item" href="#">Another action</a></li>\n+                  <li><a class="dropdown-item" href="#">Something else here</a></li>\n+                  <li><hr class="dropdown-divider"></li>\n+                  <li><a class="dropdown-item" href="#">Separated link</a></li>\n+                </ul>\n+              </div>\n+              <div class="dropdown">\n+                <button class="btn btn-secondary btn-lg dropdown-toggle" type="button" id="dropdownMenuButtonLG" data-bs-toggle="dropdown" aria-expanded="false">\n+                  Dropdown button\n+                </button>\n+                <ul class="dropdown-menu" aria-labelledby="dropdownMenuButtonLG">\n+                  <li><h6 class="dropdown-header">Dropdown header</h6></li>\n+                  <li><a class="dropdown-item" href="#">Action</a></li>\n+                  <li><a class="dropdown-item" href="#">Another action</a></li>\n+                  <li><a class="dropdown-item" href="#">Something else here</a></li>\n+                  <li><hr class="dropdown-divider"></li>\n+                  <li><a class="dropdown-item" href="#">Separated link</a></li>\n+                </ul>\n+              </div>\n+            </div>\n+            </div>\n+\n+            <div class="bd-example">\n+            <div class="btn-group">\n+              <button type="button" class="btn btn-primary">Primary</button>\n+              <button type="button" class="btn btn-primary dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">\n+                <span class="visually-hidden">Toggle Dropdown</span>\n+              </button>\n+              <ul class="dropdown-menu">\n+                <li><a class="dropdown-item" href="#">Action</a></li>\n+                <li><a class="dropdown-item" href="#">Another action</a></li>\n+                <li><a class="dropdown-item" href="#">Something else here</a></li>\n+              </ul>\n+            </div><!-- /btn-group -->\n+            <div class="btn-group">\n+              <button type="button" class="btn btn-secondary">Secondary</button>\n+              <button type="button" class="btn btn-secondary dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">\n+                <span class="visually-hidden">Toggle Dropdown</span>\n+              </button>\n+              <ul class="dropdown-menu">\n+                <li><a class="dropdown-item" href="#">Action</a></li>\n+                <li><a class="dropdown-item" href="#">Another action</a></li>\n+                <li><a class="dropdown-item" href="#">Something else here</a></li>\n+              </ul>\n+            </div><!-- /btn-group -->\n+            <div class="btn-group">\n+              <button type="button" class="btn btn-success">Success</button>\n+              <button type="button" class="btn btn-success dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">\n+                <span class="visually-hidden">Toggle Dropdown</span>\n+              </button>\n+              <ul class="dropdown-menu">\n+                <li><a class="dropdown-item" href="#">Action</a></li>\n+                <li><a class="dropdown-item" href="#">Another action</a></li>\n+                <li><a class="dropdown-item" href="#">Something else here</a></li>\n+              </ul>\n+            </div><!-- /btn-group -->\n+            <div class="btn-group">\n+              <button type="button" class="btn btn-info">Info</button>\n+              <button type="button" class="btn btn-info dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">\n+                <span class="visually-hidden">Toggle Dropdown</span>\n+              </button>\n+              <ul class="dropdown-menu">\n+                <li><a class="dropdown-item" href="#">Action</a></li>\n+                <li><a class="dropdown-item" href="#">Another action</a></li>\n+                <li><a class="dropdown-item" href="#">Something else here</a></li>\n+              </ul>\n+            </div><!-- /btn-group -->\n+            <div class="btn-group">\n+              <button type="button" class="btn btn-warning">Warning</button>\n+              <button type="button" class="btn btn-warning dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">\n+                <span class="visually-hidden">Toggle Dropdown</span>\n+              </button>\n+              <ul class="dropdown-menu">\n+                <li><a class="dropdown-item" href="#">Action</a></li>\n+                <li><a class="dropdown-item" href="#">Another action</a></li>\n+                <li><a class="dropdown-item" href="#">Something else here</a></li>\n+              </ul>\n+            </div><!-- /btn-group -->\n+            <div class="btn-group">\n+              <button type="button" class="btn btn-danger">Danger</button>\n+              <button type="button" class="btn btn-danger dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">\n+                <span class="visually-hidden">Toggle Dropdown</span>\n+              </button>\n+              <ul class="dropdown-menu">\n+                <li><a class="dropdown-item" href="#">Action</a></li>\n+                <li><a class="dropdown-item" href="#">Another action</a></li>\n+                <li><a class="dropdown-item" href="#">Something else here</a></li>\n+              </ul>\n+            </div><!-- /btn-group -->\n+            </div>\n+\n+            <div class="bd-example">\n+            <div class="btn-group w-100 align-items-center justify-content-between flex-wrap">\n+              <div class="dropend">\n+                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropendMenuButton" data-bs-toggle="dropdown" aria-expanded="false">\n+                  Dropend button\n+                </button>\n+                <ul class="dropdown-menu" aria-labelledby="dropendMenuButton">\n+                  <li><h6 class="dropdown-header">Dropdown header</h6></li>\n+                  <li><a class="dropdown-item" href="#">Action</a></li>\n+                  <li><a class="dropdown-item" href="#">Another action</a></li>\n+                  <li><a class="dropdown-item" href="#">Something else here</a></li>\n+                  <li><hr class="dropdown-divider"></li>\n+                  <li><a class="dropdown-item" href="#">Separated link</a></li>\n+                </ul>\n+              </div>\n+              <div class="dropup">\n+                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropupMenuButton" data-bs-toggle="dropdown" aria-expanded="false">\n+                  Dropup button\n+                </button>\n+                <ul class="dropdown-menu" aria-labelledby="dropupMenuButton">\n+                  <li><h6 class="dropdown-header">Dropdown header</h6></li>\n+                  <li><a class="dropdown-item" href="#">Action</a></li>\n+                  <li><a class="dropdown-item" href="#">Another action</a></li>\n+                  <li><a class="dropdown-item" href="#">Something else here</a></li>\n+                  <li><hr class="dropdown-divider"></li>\n+                  <li><a class="dropdown-item" href="#">Separated link</a></li>\n+                </ul>\n+              </div>\n+              <div class="dropstart">\n+                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropstartMenuButton" data-bs-toggle="dropdown" aria-expanded="false">\n+                  Dropstart button\n+                </button>\n+                <ul class="dropdown-menu" aria-labelledby="dropstartMenuButton">\n+                  <li><h6 class="dropdown-header">Dropdown header</h6></li>\n+                  <li><a class="dropdown-item" href="#">Action</a></li>\n+                  <li><a class="dropdown-item" href="#">Another action</a></li>\n+                  <li><a class="dropdown-item" href="#">Something else here</a></li>\n+                  <li><hr class="dropdown-divider"></li>\n+                  <li><a class="dropdown-item" href="#">Separated link</a></li>\n+                </ul>\n+              </div>\n+            </div>\n+            </div>\n+\n+            <div class="bd-example">\n+            <div class="btn-group">\n+              <div class="dropdown">\n+                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownRightMenuButton" data-bs-toggle="dropdown" aria-expanded="false">\n+                  End-aligned menu\n+                </button>\n+                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownRightMenuButton">\n+                  <li><h6 class="dropdown-header">Dropdown header</h6></li>\n+                  <li><a class="dropdown-item" href="#">Action</a></li>\n+                  <li><a class="dropdown-item" href="#">Another action</a></li>\n+                  <li><hr class="dropdown-divider"></li>\n+                  <li><a class="dropdown-item" href="#">Separated link</a></li>\n+                </ul>\n+              </div>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="list-group">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>List group</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/list-group/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <ul class="list-group">\n+              <li class="list-group-item disabled" aria-disabled="true">A disabled item</li>\n+              <li class="list-group-item">A second item</li>\n+              <li class="list-group-item">A third item</li>\n+              <li class="list-group-item">A fourth item</li>\n+              <li class="list-group-item">And a fifth one</li>\n+            </ul>\n+            </div>\n+\n+            <div class="bd-example">\n+            <ul class="list-group list-group-flush">\n+              <li class="list-group-item">An item</li>\n+              <li class="list-group-item">A second item</li>\n+              <li class="list-group-item">A third item</li>\n+              <li class="list-group-item">A fourth item</li>\n+              <li class="list-group-item">And a fifth one</li>\n+            </ul>\n+            </div>\n+\n+            <div class="bd-example">\n+            <div class="list-group">\n+              <a href="#" class="list-group-item list-group-item-action">A simple default list group item</a>\n+              \n+              <a href="#" class="list-group-item list-group-item-action list-group-item-primary">A simple primary list group item</a>\n+              <a href="#" class="list-group-item list-group-item-action list-group-item-secondary">A simple secondary list group item</a>\n+              <a href="#" class="list-group-item list-group-item-action list-group-item-success">A simple success list group item</a>\n+              <a href="#" class="list-group-item list-group-item-action list-group-item-danger">A simple danger list group item</a>\n+              <a href="#" class="list-group-item list-group-item-action list-group-item-warning">A simple warning list group item</a>\n+              <a href="#" class="list-group-item list-group-item-action list-group-item-info">A simple info list group item</a>\n+              <a href="#" class="list-group-item list-group-item-action list-group-item-light">A simple light list group item</a>\n+              <a href="#" class="list-group-item list-group-item-action list-group-item-dark">A simple dark list group item</a>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="modal">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Modal</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/modal/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <div class="d-flex justify-content-between flex-wrap">\n+              <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModalDefault">\n+                Launch demo modal\n+              </button>\n+              <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdropLive">\n+                Launch static backdrop modal\n+              </button>\n+              <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModalCenteredScrollable">\n+                Vertically centered scrollable modal\n+              </button>\n+              <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModalFullscreen">\n+                Full screen\n+              </button>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="navs">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Navs</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/navs-tabs/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <nav class="nav">\n+              <a class="nav-link active" aria-current="page" href="#">Active</a>\n+              <a class="nav-link" href="#">Link</a>\n+              <a class="nav-link" href="#">Link</a>\n+              <a class="nav-link disabled">Disabled</a>\n+            </nav>\n+            </div>\n+\n+            <div class="bd-example">\n+            <nav>\n+              <div class="nav nav-tabs mb-3" id="nav-tab" role="tablist">\n+                <button class="nav-link active" id="nav-home-tab" data-bs-toggle="tab" data-bs-target="#nav-home" type="button" role="tab" aria-controls="nav-home" aria-selected="true">Home</button>\n+                <button class="nav-link" id="nav-profile-tab" data-bs-toggle="tab" data-bs-target="#nav-profile" type="button" role="tab" aria-controls="nav-profile" aria-selected="false">Profile</button>\n+                <button class="nav-link" id="nav-contact-tab" data-bs-toggle="tab" data-bs-target="#nav-contact" type="button" role="tab" aria-controls="nav-contact" aria-selected="false">Contact</button>\n+              </div>\n+            </nav>\n+            <div class="tab-content" id="nav-tabContent">\n+              <div class="tab-pane fade show active" id="nav-home" role="tabpanel" aria-labelledby="nav-home-tab">\n+                <p><strong>This is some placeholder content the Home tab\'s associated content.</strong> Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other <code>.nav</code>-powered navigation.</p>\n+              </div>\n+              <div class="tab-pane fade" id="nav-profile" role="tabpanel" aria-labelledby="nav-profile-tab">\n+                <p><strong>This is some placeholder content the Profile tab\'s associated content.</strong> Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other <code>.nav</code>-powered navigation.</p>\n+              </div>\n+              <div class="tab-pane fade" id="nav-contact" role="tabpanel" aria-labelledby="nav-contact-tab">\n+                <p><strong>This is some placeholder content the Contact tab\'s associated content.</strong> Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other <code>.nav</code>-powered navigation.</p>\n+              </div>\n+            </div>\n+            </div>\n+\n+            <div class="bd-example">\n+            <ul class="nav nav-pills">\n+              <li class="nav-item">\n+                <a class="nav-link active" aria-current="page" href="#">Active</a>\n+              </li>\n+              <li class="nav-item">\n+                <a class="nav-link" href="#">Link</a>\n+              </li>\n+              <li class="nav-item">\n+                <a class="nav-link" href="#">Link</a>\n+              </li>\n+              <li class="nav-item">\n+                <a class="nav-link disabled">Disabled</a>\n+              </li>\n+            </ul>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="navbar">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Navbar</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/navbar/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <nav class="navbar navbar-expand-lg navbar-light bg-light">\n+              <div class="container-fluid">\n+                <a class="navbar-brand" href="#">\n+                  <img src="https://getbootstrap.com/docs/5.1/assets/brand/bootstrap-logo-white.svg" width="38" height="30" class="d-inline-block align-top" alt="Bootstrap" loading="lazy"\n+                      style="filter: invert(1) grayscale(100%) brightness(200%);">\n+                </a>\n+                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">\n+                  <span class="navbar-toggler-icon"></span>\n+                </button>\n+                <div class="collapse navbar-collapse" id="navbarSupportedContent">\n+                  <ul class="navbar-nav me-auto mb-2 mb-lg-0">\n+                    <li class="nav-item">\n+                      <a class="nav-link active" aria-current="page" href="#">Home</a>\n+                    </li>\n+                    <li class="nav-item">\n+                      <a class="nav-link" href="#">Link</a>\n+                    </li>\n+                    <li class="nav-item dropdown">\n+                      <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">\n+                        Dropdown\n+                      </a>\n+                      <ul class="dropdown-menu" aria-labelledby="navbarDropdown">\n+                        <li><a class="dropdown-item" href="#">Action</a></li>\n+                        <li><a class="dropdown-item" href="#">Another action</a></li>\n+                        <li><hr class="dropdown-divider"></li>\n+                        <li><a class="dropdown-item" href="#">Something else here</a></li>\n+                      </ul>\n+                    </li>\n+                    <li class="nav-item">\n+                      <a class="nav-link disabled">Disabled</a>\n+                    </li>\n+                  </ul>\n+                  <form class="d-flex">\n+                    <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">\n+                    <button class="btn btn-outline-dark" type="submit">Search</button>\n+                  </form>\n+                </div>\n+              </div>\n+            </nav>\n+\n+            <nav class="navbar navbar-expand-lg navbar-dark bg-primary mt-5">\n+              <div class="container-fluid">\n+                <a class="navbar-brand" href="#">\n+                  <img src="https://getbootstrap.com/docs/5.1/assets/brand/bootstrap-logo-white.svg" width="38" height="30" class="d-inline-block align-top" alt="Bootstrap" loading="lazy">\n+                </a>\n+                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent2" aria-controls="navbarSupportedContent2" aria-expanded="false" aria-label="Toggle navigation">\n+                  <span class="navbar-toggler-icon"></span>\n+                </button>\n+                <div class="collapse navbar-collapse" id="navbarSupportedContent2">\n+                  <ul class="navbar-nav me-auto mb-2 mb-lg-0">\n+                    <li class="nav-item">\n+                      <a class="nav-link active" aria-current="page" href="#">Home</a>\n+                    </li>\n+                    <li class="nav-item">\n+                      <a class="nav-link" href="#">Link</a>\n+                    </li>\n+                    <li class="nav-item dropdown">\n+                      <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown2" role="button" data-bs-toggle="dropdown" aria-expanded="false">\n+                        Dropdown\n+                      </a>\n+                      <ul class="dropdown-menu" aria-labelledby="navbarDropdown2">\n+                        <li><a class="dropdown-item" href="#">Action</a></li>\n+                        <li><a class="dropdown-item" href="#">Another action</a></li>\n+                        <li><hr class="dropdown-divider"></li>\n+                        <li><a class="dropdown-item" href="#">Something else here</a></li>\n+                      </ul>\n+                    </li>\n+                    <li class="nav-item">\n+                      <a class="nav-link disabled">Disabled</a>\n+                    </li>\n+                  </ul>\n+                  <form class="d-flex">\n+                    <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">\n+                    <button class="btn btn-outline-light" type="submit">Search</button>\n+                  </form>\n+                </div>\n+              </div>\n+            </nav>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="pagination">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Pagination</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/pagination/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <nav aria-label="Pagination example">\n+              <ul class="pagination pagination-sm">\n+                <li class="page-item"><a class="page-link" href="#">1</a></li>\n+                <li class="page-item active" aria-current="page">\n+                  <a class="page-link" href="#">2</a>\n+                </li>\n+                <li class="page-item"><a class="page-link" href="#">3</a></li>\n+              </ul>\n+            </nav>\n+            </div>\n+\n+            <div class="bd-example">\n+            <nav aria-label="Standard pagination example">\n+              <ul class="pagination">\n+                <li class="page-item">\n+                  <a class="page-link" href="#" aria-label="Previous">\n+                    <span aria-hidden="true">&laquo;</span>\n+                  </a>\n+                </li>\n+                <li class="page-item"><a class="page-link" href="#">1</a></li>\n+                <li class="page-item"><a class="page-link" href="#">2</a></li>\n+                <li class="page-item"><a class="page-link" href="#">3</a></li>\n+                <li class="page-item">\n+                  <a class="page-link" href="#" aria-label="Next">\n+                    <span aria-hidden="true">&raquo;</span>\n+                  </a>\n+                </li>\n+              </ul>\n+            </nav>\n+            </div>\n+\n+            <div class="bd-example">\n+            <nav aria-label="Another pagination example">\n+              <ul class="pagination pagination-lg flex-wrap">\n+                <li class="page-item disabled">\n+                  <a class="page-link">Previous</a>\n+                </li>\n+                <li class="page-item"><a class="page-link" href="#">1</a></li>\n+                <li class="page-item active" aria-current="page">\n+                  <a class="page-link" href="#">2</a>\n+                </li>\n+                <li class="page-item"><a class="page-link" href="#">3</a></li>\n+                <li class="page-item">\n+                  <a class="page-link" href="#">Next</a>\n+                </li>\n+              </ul>\n+            </nav>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="popovers">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Popovers</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/popovers/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <button type="button" class="btn btn-lg btn-danger" data-bs-toggle="popover" title="Popover title" data-bs-content="And here\'s some amazing content. It\'s very engaging. Right?">Click to toggle popover</button>\n+            </div>\n+\n+            <div class="bd-example">\n+            <button type="button" class="btn btn-secondary" data-bs-container="body" data-bs-toggle="popover" data-bs-placement="top" data-bs-content="Vivamus sagittis lacus vel augue laoreet rutrum faucibus.">\n+              Popover on top\n+            </button>\n+            <button type="button" class="btn btn-secondary" data-bs-container="body" data-bs-toggle="popover" data-bs-placement="right" data-bs-content="Vivamus sagittis lacus vel augue laoreet rutrum faucibus.">\n+              Popover on end\n+            </button>\n+            <button type="button" class="btn btn-secondary" data-bs-container="body" data-bs-toggle="popover" data-bs-placement="bottom" data-bs-content="Vivamus sagittis lacus vel augue laoreet rutrum faucibus.">\n+              Popover on bottom\n+            </button>\n+            <button type="button" class="btn btn-secondary" data-bs-container="body" data-bs-toggle="popover" data-bs-placement="left" data-bs-content="Vivamus sagittis lacus vel augue laoreet rutrum faucibus.">\n+              Popover on start\n+            </button>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="progress">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Progress</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/progress/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <div class="progress mb-3">\n+              <div class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">0%</div>\n+            </div>\n+            <div class="progress mb-3">\n+              <div class="progress-bar bg-success w-25" role="progressbar" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">25%</div>\n+            </div>\n+            <div class="progress mb-3">\n+              <div class="progress-bar bg-info text-dark w-50" role="progressbar" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100">50%</div>\n+            </div>\n+            <div class="progress mb-3">\n+              <div class="progress-bar bg-warning text-dark w-75" role="progressbar" aria-valuenow="75" aria-valuemin="0" aria-valuemax="100">75%</div>\n+            </div>\n+            <div class="progress">\n+              <div class="progress-bar bg-danger w-100" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100">100%</div>\n+            </div>\n+            </div>\n+\n+            <div class="bd-example">\n+            <div class="progress">\n+              <div class="progress-bar" role="progressbar" style="width: 15%" aria-valuenow="15" aria-valuemin="0" aria-valuemax="100"></div>\n+              <div class="progress-bar progress-bar-striped progress-bar-animated bg-success" role="progressbar" style="width: 40%" aria-valuenow="40" aria-valuemin="0" aria-valuemax="100"></div>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="scrollspy">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Scrollspy</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/scrollspy/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+              <nav id="navbar-example2" class="navbar navbar-light bg-light px-3">\n+                <a class="navbar-brand" href="#">Navbar</a>\n+                <ul class="nav nav-pills">\n+                  <li class="nav-item">\n+                    <a class="nav-link active" href="#scrollspyHeading1">First</a>\n+                  </li>\n+                  <li class="nav-item">\n+                    <a class="nav-link" href="#scrollspyHeading2">Second</a>\n+                  </li>\n+                  <li class="nav-item dropdown">\n+                    <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" role="button" aria-expanded="false">Dropdown</a>\n+                    <ul class="dropdown-menu">\n+                      <li><a class="dropdown-item" href="#scrollspyHeading3">Third</a></li>\n+                      <li><a class="dropdown-item" href="#scrollspyHeading4">Fourth</a></li>\n+                      <li><hr class="dropdown-divider"></li>\n+                      <li><a class="dropdown-item" href="#scrollspyHeading5">Fifth</a></li>\n+                    </ul>\n+                  </li>\n+                </ul>\n+              </nav>\n+            <div data-bs-spy="scroll" data-bs-target="#navbar-example2" data-bs-offset="0" class="scrollspy-example" tabindex="0">\n+                <h4 id="scrollspyHeading1">First heading</h4>\n+                <p>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It\'s repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.</p>\n+                <h4 id="scrollspyHeading2">Second heading</h4>\n+                <p>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It\'s repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.</p>\n+                <h4 id="scrollspyHeading3">Third heading</h4>\n+                <p>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It\'s repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.</p>\n+                <h4 id="scrollspyHeading4">Fourth heading</h4>\n+                <p>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It\'s repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.</p>\n+                <h4 id="scrollspyHeading5">Fifth heading</h4>\n+                <p>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It\'s repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.</p>\n+              </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="spinners">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Spinners</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/spinners/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            \n+            <div class="spinner-border text-primary" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-border text-secondary" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-border text-success" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-border text-danger" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-border text-warning" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-border text-info" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-border text-light" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-border text-dark" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            </div>\n+\n+            <div class="bd-example">\n+            \n+            <div class="spinner-grow text-primary" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-grow text-secondary" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-grow text-success" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-grow text-danger" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-grow text-warning" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-grow text-info" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-grow text-light" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-grow text-dark" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="toasts">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Toasts</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/toasts/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example bg-dark p-5 align-items-center">\n+            <div class="toast" role="alert" aria-live="assertive" aria-atomic="true">\n+              <div class="toast-header">\n+                <svg class="bd-placeholder-img rounded me-2" width="20" height="20" xmlns="http://www.w3.org/2000/svg" aria-hidden="true" preserveAspectRatio="xMidYMid slice" focusable="false"><rect width="100%" height="100%" fill="#007aff"/></svg>\n+\n+                <strong class="me-auto">Bootstrap</strong>\n+                <small class="text-muted">11 mins ago</small>\n+                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>\n+              </div>\n+              <div class="toast-body">\n+                Hello, world! This is a toast message.\n+              </div>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="mt-3 mb-5 pb-5" id="tooltips">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Tooltips</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/tooltips/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example tooltip-demo">\n+            <button type="button" class="btn btn-secondary" data-bs-toggle="tooltip" data-bs-placement="top" title="Tooltip on top">Tooltip on top</button>\n+            <button type="button" class="btn btn-secondary" data-bs-toggle="tooltip" data-bs-placement="right" title="Tooltip on end">Tooltip on end</button>\n+            <button type="button" class="btn btn-secondary" data-bs-toggle="tooltip" data-bs-placement="bottom" title="Tooltip on bottom">Tooltip on bottom</button>\n+            <button type="button" class="btn btn-secondary" data-bs-toggle="tooltip" data-bs-placement="left" title="Tooltip on start">Tooltip on start</button>\n+            <button type="button" class="btn btn-secondary" data-bs-toggle="tooltip" data-bs-html="true" title="<em>Tooltip</em> <u>with</u> <b>HTML</b>">Tooltip with HTML</button>\n+            </div>\n+          </div>\n+        </article>\n+      </section>\n+    </div>\n+\n+    <div class="modal fade" id="exampleModalDefault" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">\n+      <div class="modal-dialog">\n+        <div class="modal-content">\n+          <div class="modal-header">\n+            <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>\n+            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>\n+          </div>\n+          <div class="modal-body">\n+            ...\n+          </div>\n+          <div class="modal-footer">\n+            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>\n+            <button type="button" class="btn btn-primary">Save changes</button>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+    <div class="modal fade" id="staticBackdropLive" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLiveLabel" aria-hidden="true">\n+      <div class="modal-dialog">\n+        <div class="modal-content">\n+          <div class="modal-header">\n+            <h5 class="modal-title" id="staticBackdropLiveLabel">Modal title</h5>\n+            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>\n+          </div>\n+          <div class="modal-body">\n+            <p>I will not close if you click outside me. Don\'t even try to press escape key.</p>\n+          </div>\n+          <div class="modal-footer">\n+            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>\n+            <button type="button" class="btn btn-primary">Understood</button>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+    <div class="modal fade" id="exampleModalCenteredScrollable" tabindex="-1" aria-labelledby="exampleModalCenteredScrollableTitle" aria-hidden="true">\n+      <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">\n+        <div class="modal-content">\n+          <div class="modal-header">\n+            <h5 class="modal-title" id="exampleModalCenteredScrollableTitle">Modal title</h5>\n+            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>\n+          </div>\n+          <div class="modal-body">\n+            <p>This is some placeholder content to show the scrolling behavior for modals. We use repeated line breaks to demonstrate how content can exceed minimum inner height, thereby showing inner scrolling. When content becomes longer than the predefined max-height of modal, content will be cropped and scrollable within the modal.</p>\n+            <br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>\n+            <p>This content should appear at the bottom after you scroll.</p>\n+          </div>\n+          <div class="modal-footer">\n+            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>\n+            <button type="button" class="btn btn-primary">Save changes</button>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+    <div class="modal fade" id="exampleModalFullscreen" tabindex="-1" aria-labelledby="exampleModalFullscreenLabel" aria-hidden="true">\n+      <div class="modal-dialog modal-fullscreen">\n+        <div class="modal-content">\n+          <div class="modal-header">\n+            <h5 class="modal-title h4" id="exampleModalFullscreenLabel">Full screen modal</h5>\n+            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>\n+          </div>\n+          <div class="modal-body">\n+            ...\n+          </div>\n+          <div class="modal-footer">\n+            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+\n+    <!-- End Bootstrap Cheatsheet -->\n+\n+  </metal:main>\n+\n+</body>\n+\n+</html>\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/browser/templates/test_rendering_icons.pt b/Products/CMFPlone/browser/templates/test_rendering_icons.pt\nnew file mode 100644\nindex 0000000000..40999ad312\n--- /dev/null\n+++ b/Products/CMFPlone/browser/templates/test_rendering_icons.pt\n@@ -0,0 +1,91 @@\n+<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" xmlns:tal="http://xml.zope.org/namespaces/tal"\n+  xmlns:metal="http://xml.zope.org/namespaces/metal" xmlns:i18n="http://xml.zope.org/namespaces/i18n" lang="en"\n+  metal:use-macro="context/@@main_template/macros/master" i18n:domain="plone">\n+\n+<body>\n+\n+  <metal:main fill-slot="main">\n+\n+    <style>\n+\n+    </style>    \n+\n+    <ul class="nav nav-tabs mb-3">\n+      <li class="nav-item">\n+        <a class="nav-link active" href="${portal_url}/@@test-rendering">Test Rendering</a>\n+      </li>\n+      <li class="nav-item">\n+        <a class="nav-link" href="${portal_url}/@@test-rendering-cheatsheet">Bootstrap Cheatsheet</a>\n+      </li>\n+      <li class="nav-item">\n+        <a class="nav-link" href="${portal_url}/@@test-rendering-icons">Icons</a>\n+      </li>\n+    </ul>\n+\n+    <h1>Plone Icons test page</h1>\n+\n+    <p class="lead">\n+      This page shows the Icon story of Plone 6. We use <a href="https://icons.getbootstrap.com/" target="_blank">Bootstrap Icons</a> by default.\n+    </p>\n+\n+    <h1>Icons</h1>\n+\n+    <p>\n+      Description to explain icon resolver\n+    </p>\n+\n+    <h2>Get Icon URL</h2>\n+\n+    <p>\n+      <code>&lt;img src="" tal:attributes="src python:icons.url(\'alarm\')" class="custom-class" alt="foo" /&gt;</code>\n+    </p>\n+\n+    <p>\n+      <img src="${python:icons.url(\'alarm\')}" class="custom-class" alt="foo" />\n+    </p>\n+\n+    <h2>Get Icon Tag</h2>\n+\n+    <p>\n+      <code>&lt;tal:icon tal:replace="structure python:icons.tag(\'archive\', tag_class=\'custom-class\', tag_alt=\'foobar\')" /&gt;</code>\n+    </p>\n+\n+    <p>\n+      <tal:icon tal:replace="structure python:icons.tag(\'archive\', tag_class=\'custom-class\', tag_alt=\'foobar\')" />\n+    </p>\n+\n+    <h2>Registration<h2>\n+\n+    <p>\n+      Todo: List custom Icons\n+    </p>\n+\n+    <ul>\n+      <li>\n+        <a href="https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/profiles/default/registry/icons_bootstrap.xml" target="_blank">Bootstrap</a>\n+      </li>\n+      <li>\n+        <a href="https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/profiles/default/registry/icons_contenttype.xml" target="_blank">Content Types</a>\n+      </li>\n+      <li>\n+        <a href="https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/profiles/default/registry/icons_country_flags.xml" target="_blank">Country Flags</a>\n+      </li>\n+      <li>\n+        <a href="https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/profiles/default/registry/icons_language_flags.xml" target="_blank">Language Flags</a>\n+      </li>\n+      <li>\n+        <a href="https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/profiles/default/registry/icons_mimetype.xml" target="_blank">MIME Types</a>\n+      </li>\n+      <li>\n+        <a href="https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/profiles/default/registry/icons_plone.xml" target="_blank">Plone</a>\n+      </li>\n+      <li>\n+        <a href="https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/profiles/default/registry/icons_toolbar.xml" target="_blank">Toolbar</a>\n+      </li>\n+    </ul>\n+\n+  </metal:main>\n+\n+</body>\n+\n+</html>\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/browser/test_rendering.py b/Products/CMFPlone/browser/test_rendering.py\nindex 513dc0e839..b3c567068d 100644\n--- a/Products/CMFPlone/browser/test_rendering.py\n+++ b/Products/CMFPlone/browser/test_rendering.py\n@@ -11,3 +11,23 @@ def __call__(self):\n         self.request.set(\'disable_plone.rightcolumn\', 1)\n         self.request.set(\'disable_plone.leftcolumn\', 1)\n         return self.template()\n+\n+\n+class TestRenderingCheatsheetView(BrowserView):\n+\n+    template = ViewPageTemplateFile(\'templates/test_rendering_cheatsheet.pt\')\n+\n+    def __call__(self):\n+        self.request.set(\'disable_plone.rightcolumn\', 1)\n+        self.request.set(\'disable_plone.leftcolumn\', 1)\n+        return self.template()\n+\n+\n+class TestRenderingIconsView(BrowserView):\n+\n+    template = ViewPageTemplateFile(\'templates/test_rendering_icons.pt\')\n+\n+    def __call__(self):\n+        self.request.set(\'disable_plone.rightcolumn\', 1)\n+        self.request.set(\'disable_plone.leftcolumn\', 1)\n+        return self.template()\ndiff --git a/Products/CMFPlone/catalog.zcml b/Products/CMFPlone/catalog.zcml\nindex 97d2852553..ddd04b531f 100644\n--- a/Products/CMFPlone/catalog.zcml\n+++ b/Products/CMFPlone/catalog.zcml\n@@ -17,7 +17,6 @@\n     <adapter factory=".CatalogTool.is_folderish"           name="is_folderish" />\n     <adapter factory=".CatalogTool.is_default_page"        name="is_default_page" />\n     <adapter factory=".CatalogTool.getIcon"                name="getIcon" />\n-    <adapter factory=".CatalogTool.location"               name="location" />\n     <adapter factory=".CatalogTool.mime_type"              name="mime_type" />\n \n </configure>\ndiff --git a/Products/CMFPlone/configure.zcml b/Products/CMFPlone/configure.zcml\nindex d2cdac1e8c..d4ab0a8a9d 100644\n--- a/Products/CMFPlone/configure.zcml\n+++ b/Products/CMFPlone/configure.zcml\n@@ -29,14 +29,13 @@\n   <include package="plone.app.vocabularies" />\n   <include package="plone.app.workflow" />\n   <include package="plone.batching" />\n+  <include package="plone.dexterity" />\n   <include package="plone.memoize" />\n   <include package="plone.outputfilters" />\n   <include package="plone.session" />\n   <include package="plone.protect" />\n   <include package="plone.indexer" />\n \n-  <!-- mockup -->\n-  <include package="mockup" />\n   <include package="plone.staticresources" />\n \n   <!-- viewlets zope 3 layers support for themes -->\n@@ -97,10 +96,10 @@\n       trusted="y"\n       />\n \n-  <!-- include plone plugins with z3c.autoinclude -->\n-  <includePlugins\n+  <!-- include plone plugins with plone.autoinclude -->\n+  <autoIncludePlugins\n       zcml:condition="not-have disable-autoinclude"\n-      package="plone"\n+      target="plone"\n       file="configure.zcml"\n       />\n \ndiff --git a/Products/CMFPlone/controlpanel/README.rst b/Products/CMFPlone/controlpanel/README.rst\nindex 428d89614e..72e195a909 100644\n--- a/Products/CMFPlone/controlpanel/README.rst\n+++ b/Products/CMFPlone/controlpanel/README.rst\n@@ -132,7 +132,7 @@ Navigation Control Panel\n   ()\n \n   >>> navigation_settings.show_excluded_items\n-  True\n+  False\n \n \n Search Control Panel\ndiff --git a/Products/CMFPlone/controlpanel/browser/configure.zcml b/Products/CMFPlone/controlpanel/browser/configure.zcml\nindex 48dc844325..1204b15af6 100644\n--- a/Products/CMFPlone/controlpanel/browser/configure.zcml\n+++ b/Products/CMFPlone/controlpanel/browser/configure.zcml\n@@ -111,6 +111,35 @@\n       permission="cmf.ManagePortal"\n       />\n \n+  <!-- Error Log Form Control Panel -->\n+  <browser:page\n+      name="error-log-form"\n+      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      template="error_log_form.pt"\n+      permission="cmf.ManagePortal"\n+      />\n+\n+  <browser:page\n+      name="error-log-show-entry"\n+      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      template="error_log_show_entry.pt"\n+      permission="cmf.ManagePortal"\n+      />\n+\n+  <browser:page\n+      name="error-log-update"\n+      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      class=".error_log_form.ErrorLogUpdate"\n+      permission="cmf.ManagePortal"\n+      />\n+\n+  <browser:page\n+      name="error-log-set-properties"\n+      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      class=".error_log_form.ErrorLogSetProperties"\n+      permission="cmf.ManagePortal"\n+      />\n+\n   <!-- Site Control Panel -->\n   <browser:page\n       name="site-controlpanel"\ndiff --git a/Products/CMFPlone/controlpanel/browser/emaillogin.pt b/Products/CMFPlone/controlpanel/browser/emaillogin.pt\nindex 45ca3d98ab..8eec779af9 100644\n--- a/Products/CMFPlone/controlpanel/browser/emaillogin.pt\n+++ b/Products/CMFPlone/controlpanel/browser/emaillogin.pt\n@@ -33,7 +33,7 @@\n           </p>\n           <div clas="list-group">\n             <div class="list-group-item" tal:repeat="dup view/duplicates">\n-              <span tal:content="python:dup[0]" />: \n+              <span tal:content="python:dup[0]" />:\n               <span tal:repeat="account python:dup[1]" tal:content="account" />\n             </div>\n           </div>\ndiff --git a/Products/CMFPlone/controlpanel/browser/error_log_form.pt b/Products/CMFPlone/controlpanel/browser/error_log_form.pt\nnew file mode 100644\nindex 0000000000..221df55ae8\n--- /dev/null\n+++ b/Products/CMFPlone/controlpanel/browser/error_log_form.pt\n@@ -0,0 +1,166 @@\n+<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"\n+      xmlns:tal="http://xml.zope.org/namespaces/tal"\n+      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+      xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+      lang="en"\n+      metal:use-macro="context/prefs_main_template/macros/master"\n+      i18n:domain="plone">\n+\n+<body>\n+\n+<metal:main fill-slot="prefs_configlet_main">\n+\n+    <header>\n+      <h1 i18n:translate="heading_error_log">Error log</h1>\n+      <p class="lead" i18n:translate="description_error_log_setup">\n+        This page lists the exceptions that have occurred in this site\n+        recently. You can configure how many exceptions should be kept\n+        and whether the exceptions should be copied to Zope\'s event log\n+        file(s).\n+      </p>\n+      <p class="discreet">\n+        <a href="https://docs.plone.org/appendices/error-reference.html"\n+           i18n:translate="description_error_rerference_link">\n+          Refer to the plone.org error reference for more information about\n+          these exceptions.\n+        </a>\n+      </p>\n+    </header>\n+\n+    <div id="content-core">\n+      <div id="layout-contents">\n+\n+        <form class="mb-4" action="@@error-log-update" method="get">\n+          <fieldset class="mb-3" tal:define="entries context/error_log/getLogEntries">\n+            <div class="field" tal:condition="not:entries" i18n:translate="legend_lognoexceptions">\n+              No exceptions logged.\n+            </div>\n+\n+            <table class="table table-responsive table-bordered table-striped" tal:condition="entries">\n+              <caption i18n:translate="summary_exception_log">Error Log (most recent first)</caption>\n+\n+              <thead>\n+                <tr>\n+                  <th i18n:translate="label_time">Time</th>\n+                  <th i18n:translate="label_user_name">User Name</th>\n+                  <th i18n:translate="label_exception">Exception</th>\n+                </tr>\n+              </thead>\n+\n+              <tbody tal:define="member context/@@plone_portal_state/member;\n+                                 updatetime python:member.getProperty(\'error_log_update\', 0.0);\n+                                 updatetime python:updatetime and updatetime or 0.0;\n+                                 updatetime python:float(updatetime)">\n+\n+                <tal:entry tal:repeat="entry entries">\n+                  <tr tal:define="oddrow repeat/entry/odd;"\n+                      tal:attributes="class python: oddrow and \'odd\' or \'even\'"\n+                      tal:condition="python: entry[\'time\'] > updatetime">\n+\n+                    <td tal:define="toLocalizedTime nocall:context/@@plone/toLocalizedTime;"\n+                        tal:content="python:toLocalizedTime(entry[\'time\'], long_format=True)">13:04:41</td>\n+                    <td tal:content="string:${entry/username} (${entry/userid})">joe</td>\n+                    <td>\n+                      <a href="showEntry"\n+                         tal:attributes="href string:@@error-log-show-entry?id=${entry/id}">\n+                        <span tal:replace="entry/type">AttributeError</span>:\n+                        <span tal:define="value entry/value"\n+                              tal:content="python: len(value) &lt; 70 and value or value[:70] + \'...\'">\n+                          Application object has no attribute "gak"\n+                        </span>\n+                      </a>\n+                    </td>\n+                  </tr>\n+                </tal:entry>\n+              </tbody>\n+            </table>\n+\n+          </fieldset>\n+        </form>\n+\n+        <form class="mb-4" action="@@error-log-update" method="get">\n+          <fieldset class="mb-3">\n+            <legend i18n:translate="label_search_entry">\n+              Search for an error log entry <span class="formHelp"> (such as "1257962690.640.49636048561")\n+            </legend>\n+\n+            <div class="mb-3 field widget-mode-input">\n+              <input type="text"\n+                     name="search_entry"\n+                     id="search_entry"\n+                     class="form-control text-widget textline-field"/>\n+            </div>\n+\n+            <div class="formControls">\n+              <input class="btn btn-primary"\n+                     type="submit"\n+                     name="form.button.search"\n+                     value="Search"\n+                     i18n:attributes="value label_search;" />\n+            </div>\n+\n+          </fieldset>\n+        </form>\n+\n+        <hr />\n+\n+        <form class="mb-4" action="@@error-log-set-properties" method="post">\n+          <fieldset class="mb-3" tal:define="props context/error_log/getProperties">\n+\n+            <legend i18n:translate="legend_logdetails">Log details</legend>\n+\n+            <div class="mb-3 field widget-mode-input">\n+              <label class="form-label" for="keep_entries"\n+                     i18n:translate="label_number_exceptions">Number of exceptions to keep</label>\n+\n+              <input type="text"\n+                     name="keep_entries"\n+                     id="keep_entries"\n+                     class="form-control text-widget textline-field"\n+                     tal:attributes="value props/keep_entries" />\n+            </div>\n+\n+            <div class="mb-3 form-check">\n+              <input type="checkbox"\n+                     class="form-check-input single-checkbox-bool-widget bool-field"\n+                     id="cb_copy_to_zlog"\n+                     name="copy_to_zlog"\n+                     tal:attributes="checked props/copy_to_zlog;\n+                                     disabled not:context/error_log/checkEventLogPermission|nothing" />\n+\n+              <label class="form-check-label" for="cb_copy_to_zlog" i18n:translate="label_copy_exceptions">\n+                Copy exceptions to the event log\n+              </label>\n+            </div>\n+\n+            <div class="mb-3 field widget-mode-input">\n+              <label class="form-label" for="ignored_exceptions"\n+                     i18n:translate="label_ignored_exception">Ignored exception types</label>\n+\n+              <br>\n+              <textarea name="ignored_exceptions:lines"\n+                        id="ignored_exceptions"\n+                        cols="40"\n+                        rows="3"\n+                        class="form-control textarea-widget list-field"\n+                        tal:content="python: \'\\n\'.join(props[\'ignored_exceptions\'])"></textarea>\n+            </div>\n+\n+            <div class="formControls">\n+              <input class="btn btn-primary"\n+                     type="submit"\n+                     name="submit"\n+                     value="Save"\n+                     i18n:attributes="value label_save;" />\n+            </div>\n+\n+          </fieldset>\n+        </form>\n+\n+      </div>\n+    </div>\n+\n+</metal:main>\n+\n+</body>\n+</html>\ndiff --git a/Products/CMFPlone/controlpanel/browser/error_log_form.py b/Products/CMFPlone/controlpanel/browser/error_log_form.py\nnew file mode 100644\nindex 0000000000..c2d2d2f495\n--- /dev/null\n+++ b/Products/CMFPlone/controlpanel/browser/error_log_form.py\n@@ -0,0 +1,46 @@\n+import plone.api as api\n+from DateTime import DateTime\n+from Products.CMFPlone import PloneMessageFactory as _\n+from Products.CMFPlone.utils import safe_nativestring\n+from Products.Five import BrowserView\n+\n+\n+class ErrorLogUpdate(BrowserView):\n+\n+    def __call__(self):\n+        member = api.user.get_current()\n+\n+        if getattr(self.request, \'form.button.search\', None) is not None:\n+            search = self.request.form.get(\'search_entry\')\n+            if search == \'\':\n+                member.setProperties(error_log_update=0.0)\n+                self.context.plone_utils.addPortalMessage(_(\'Showing all entries\'))\n+                return self.request.RESPONSE.redirect(self.context.absolute_url() + \'/@@error-log-form\')\n+            return self.request.RESPONSE.redirect(self.context.absolute_url() + \'/@@error-log-show-entry?id=%s\' % search)\n+\n+        elif getattr(self.request, \'form.button.showall\', None) is not None:\n+            member.setProperties(error_log_update=0.0)\n+            self.context.plone_utils.addPortalMessage(_(\'Showing all entries\'))\n+            return self.request.RESPONSE.redirect(self.context.absolute_url() + \'/@@error-log-form\')\n+\n+        elif getattr(self.request, \'form.button.clear\', None) is not None:\n+            member.setProperties(error_log_update=DateTime().timeTime())\n+            self.context.plone_utils.addPortalMessage(_(\'Entries cleared\'))\n+            return self.request.RESPONSE.redirect(self.context.absolute_url() + \'/@@error-log-form\')\n+\n+        else:\n+            return self.request.RESPONSE.redirect(self.context.absolute_url() + \'/@@error-log-form\')\n+\n+\n+class ErrorLogSetProperties(BrowserView):\n+\n+    def __call__(self):\n+        keep_entries = self.request.form.get(\'keep_entries\')\n+        ignored_exceptions = self.request.form.get(\'ignored_exceptions\')\n+        copy_to_zlog = self.request.form.get(\'copy_to_zlog\', 0)\n+\n+        ignored_exceptions = map(safe_nativestring, ignored_exceptions)\n+        self.context.error_log.setProperties(keep_entries, copy_to_zlog, ignored_exceptions)\n+        self.context.plone_utils.addPortalMessage(_(\'Changes made.\'))\n+\n+        return self.request.RESPONSE.redirect(self.context.absolute_url() + \'/@@error-log-form\')\ndiff --git a/Products/CMFPlone/skins/plone_prefs/prefs_error_log_showEntry.pt b/Products/CMFPlone/controlpanel/browser/error_log_show_entry.pt\nsimilarity index 95%\nrename from Products/CMFPlone/skins/plone_prefs/prefs_error_log_showEntry.pt\nrename to Products/CMFPlone/controlpanel/browser/error_log_show_entry.pt\nindex ca10e1ed15..2e89da22ba 100644\n--- a/Products/CMFPlone/skins/plone_prefs/prefs_error_log_showEntry.pt\n+++ b/Products/CMFPlone/controlpanel/browser/error_log_show_entry.pt\n@@ -20,7 +20,7 @@\n     <div id="content-core">\n         <a href=""\n            class="link-parent"\n-           tal:attributes="href string:$portal_url/prefs_error_log_form"\n+           tal:attributes="href string:$portal_url/@@error-log-form"\n            i18n:translate="label_back_to_errorlog">\n         Back to Error Log\n         </a>\n@@ -47,7 +47,7 @@\n                     <dt i18n:translate="label_time">Time</dt>\n                     <dd\n                         tal:define="toLocalizedTime nocall:context/@@plone/toLocalizedTime;"\n-                        tal:content="python:toLocalizedTime(DateTime(entry[\'time\']), long_format=True)"></dd>\n+                        tal:content="python:toLocalizedTime(entry[\'time\'], long_format=True)"></dd>\n \n                     <dt align="left" valign="top"\n                         i18n:translate="label_user_name">User Name</dt>\ndiff --git a/Products/CMFPlone/controlpanel/browser/overview.py b/Products/CMFPlone/controlpanel/browser/overview.py\nindex 208fded1e9..47657ded96 100644\n--- a/Products/CMFPlone/controlpanel/browser/overview.py\n+++ b/Products/CMFPlone/controlpanel/browser/overview.py\n@@ -12,9 +12,11 @@\n from ZPublisher.HTTPRequest import WSGIRequest\n \n import pkg_resources\n+import warnings\n \n try:\n     import plone.app.event\n+\n     plone.app.event  # pyflakes\n     HAS_PAE = True\n except ImportError:\n@@ -23,70 +25,76 @@\n \n class OverviewControlPanel(controlpanel.RegistryEditForm):\n \n-    template = ViewPageTemplateFile(\'overview.pt\')\n+    template = ViewPageTemplateFile("overview.pt")\n \n-    base_category = \'controlpanel\'\n-    ignored_categories = (\'controlpanel_user\')\n+    base_category = "controlpanel"\n+    ignored_categories = "controlpanel_user"\n \n     def __call__(self):\n-        self.request.set(\'disable_border\', 1)\n+        self.request.set("disable_border", 1)\n         return self.template()\n \n     @memoize\n     def cptool(self):\n-        return getToolByName(aq_inner(self.context), \'portal_controlpanel\')\n+        return getToolByName(aq_inner(self.context), "portal_controlpanel")\n \n     @memoize\n     def migration(self):\n-        return getToolByName(aq_inner(self.context), \'portal_migration\')\n+        return getToolByName(aq_inner(self.context), "portal_migration")\n \n     @memoize\n     def core_versions(self):\n         return self.migration().coreVersions()\n \n     def pil(self):\n-        return \'PIL\' in self.core_versions()\n+        return "PIL" in self.core_versions()\n \n     def server_info(self):\n         wsgi = isinstance(self.request, WSGIRequest)\n-        server_name = \'unknown\'\n-        server_version = \'\'\n+        server_name = "unknown"\n+        server_version = ""\n \n-        server_name = self.request.get(\'SERVER_SOFTWARE\')\n+        server_name = self.request.get("SERVER_SOFTWARE")\n         if server_name:\n-            if \'ZServer\' in server_name:\n-                server_name = \'ZServer\'\n+            if "ZServer" in server_name:\n+                server_name = "ZServer"\n+            elif "/" in server_name:\n+                server_name = server_name.split("/")[0]\n             try:\n                 server = pkg_resources.get_distribution(server_name)\n                 server_version = server.version\n-            except (pkg_resources.DistributionNotFound,\n-                    pkg_resources.RequirementParseError):\n-                pass\n+            except Exception:\n+                warnings.warn(\n+                    "Cannot find or parse version for %r"\n+                    % self.request.get("SERVER_SOFTWARE"),\n+                )\n         return {\n-            \'wsgi\': wsgi,\n-            \'server_name\': server_name,\n-            \'version\': server_version,\n+            "wsgi": wsgi,\n+            "server_name": server_name,\n+            "version": server_version,\n         }\n \n     def version_overview(self):\n \n         core_versions = self.core_versions()\n         versions = [\n-            \'Plone {} ({})\'.format(core_versions[\'Plone\'],\n-                               core_versions[\'Plone Instance\'])]\n-\n-        for v in (\'CMF\', \'Zope\', \'Python\'):\n-            versions.append(v + \' \' + core_versions.get(v))\n-        pil = core_versions.get(\'PIL\', None)\n+            "Plone {} ({})".format(\n+                core_versions["Plone"], core_versions["Plone Instance"]\n+            )\n+        ]\n+\n+        for v in ("CMF", "Zope", "Python"):\n+            versions.append(v + " " + core_versions.get(v))\n+        pil = core_versions.get("PIL", None)\n         if pil is not None:\n-            versions.append(\'PIL \' + pil)\n+            versions.append("PIL " + pil)\n         return versions\n \n     def is_dev_mode(self):\n         return getConfiguration().debug_mode\n \n     def upgrade_warning(self):\n-        mt = getToolByName(aq_inner(self.context), \'portal_migration\')\n+        mt = getToolByName(aq_inner(self.context), "portal_migration")\n         if mt.needUpgrading():\n             # if the user can\'t run the upgrade, no sense in displaying the\n             # message\n@@ -97,8 +105,7 @@ def upgrade_warning(self):\n \n     def mailhost_warning(self):\n         registry = getUtility(IRegistry)\n-        mail_settings = registry.forInterface(\n-            IMailSchema, prefix=\'plone\', check=False)\n+        mail_settings = registry.forInterface(IMailSchema, prefix="plone", check=False)\n         mailhost = mail_settings.smtp_host\n         email = mail_settings.email_from_address\n         if mailhost and email:\n@@ -106,8 +113,7 @@ def mailhost_warning(self):\n         return True\n \n     def timezone_warning(self):\n-        """Returns true, if the portal_timezone is not set in the registry.\n-        """\n+        """Returns true, if the portal_timezone is not set in the registry."""\n         if not HAS_PAE:\n             # No point of having a portal timezone configured without\n             # plone.app.event installed.\n@@ -121,7 +127,7 @@ def timezone_warning(self):\n         if reg_key not in registry:\n             # else use \'plone.app.event.portal_timezone\'\n             # < Plone 5\n-            reg_key = \'plone.app.event.portal_timezone\'\n+            reg_key = "plone.app.event.portal_timezone"\n         if reg_key not in registry:\n             return True\n         portal_timezone = registry[reg_key]\ndiff --git a/Products/CMFPlone/controlpanel/browser/prefsmaintemplate.pt b/Products/CMFPlone/controlpanel/browser/prefsmaintemplate.pt\nindex c4588f1940..c355e6bef5 100644\n--- a/Products/CMFPlone/controlpanel/browser/prefsmaintemplate.pt\n+++ b/Products/CMFPlone/controlpanel/browser/prefsmaintemplate.pt\n@@ -25,7 +25,7 @@\n                   <ul class="nav nav-tabs">\n                     <li class="nav-item"\n                         tal:define="overview_url string:$portal_url/@@overview-controlpanel">\n-                      <a class="nav-link ${python:\'active\' if overview_url in current_url else \'\'}" aria-current="page" href="${overview_url}">Overview</a>\n+                      <a class="nav-link ${python:\'active\' if overview_url in current_url else \'\'}" aria-current="page" href="${overview_url}" i18n:translate="">Site Setup</a>\n                     </li>\n                     <tal:group tal:repeat="group groups">\n                       <li tal:define="configlets python:controlPanel.enumConfiglets(group=group[\'id\']);\ndiff --git a/Products/CMFPlone/controlpanel/browser/quickinstaller.pt b/Products/CMFPlone/controlpanel/browser/quickinstaller.pt\nindex cba8e02fe2..9b694c0a25 100644\n--- a/Products/CMFPlone/controlpanel/browser/quickinstaller.pt\n+++ b/Products/CMFPlone/controlpanel/browser/quickinstaller.pt\n@@ -188,7 +188,7 @@\n               </div>\n               <div class="alert alert-info mt-2 mb-0"\n                   role="status"\n-                  tal:condition="not:product/uninstall_profile">                  >\n+                  tal:condition="not:product/uninstall_profile">\n                 <strong i18n:translate="">Info</strong>\n                 <span i18n:translate="">This product cannot be uninstalled!</span>\n             </div>\ndiff --git a/Products/CMFPlone/controlpanel/browser/redirects-controlpanel.pt b/Products/CMFPlone/controlpanel/browser/redirects-controlpanel.pt\nindex e2d8b576ea..96a4ef99bf 100644\n--- a/Products/CMFPlone/controlpanel/browser/redirects-controlpanel.pt\n+++ b/Products/CMFPlone/controlpanel/browser/redirects-controlpanel.pt\n@@ -298,8 +298,7 @@\n             <button class="btn btn-danger"\n               type="submit"\n               value="Remove selected"\n-              name="form.button.Remove"\n-              i18n:translate="" >\n+              name="form.button.Remove">\n                 <tal:icon tal:replace="structure python:icons.tag(\'trash\', tag_alt=\'Trash\')" /> <span i18n:translate="">Remove selected</span>\n             </button>\n             <button class="btn btn-danger"\ndiff --git a/Products/CMFPlone/controlpanel/browser/relations_inspect.pt b/Products/CMFPlone/controlpanel/browser/relations_inspect.pt\nindex d5771e0a50..c1601d78e0 100644\n--- a/Products/CMFPlone/controlpanel/browser/relations_inspect.pt\n+++ b/Products/CMFPlone/controlpanel/browser/relations_inspect.pt\n@@ -41,13 +41,13 @@\n            class="portalMessage warning alert alert-warning" role="alert"\n            i18n:translate="">\n              <strong>Warning!</strong> You have broken relations!\n-             You can <a href="@@rebuild_relations">inspect and rebuild all relations</a>.\n+             You can <a href="${portal_url}/@@rebuild-relations">inspect and rebuild all relations</a>.\n       </div>\n \n-      <form id="relationinfo" method="post" action="@@inspect-relations" enctype="multipart/form-data">\n+      <form id="relationinfo" method="post" action="${portal_url}/@@inspect-relations" enctype="multipart/form-data">\n \n         <div class="mb-3 field">\n-          <select class="form-select" aria-label="Default select example" name="relation" id="relation">\n+          <select class="form-select" i18n:attributes="aria-label label_default_select_example" aria-label="Default select example" name="relation" id="relation">\n             <option value="" i18n:translate="">Select a relation</option>\n             <tal:rels tal:repeat="from_attribute python: sorted(relations_stats)">\n               <option tal:attributes="value python: from_attribute;\n@@ -123,7 +123,7 @@\n         </tbody>\n       </table>\n \n-      <p><a href="@@rebuild-relations" i18n:translate="">Inspect and rebuild all relations</a>.</p>\n+      <p><a href="${portal_url}/@@rebuild-relations" i18n:translate="">Inspect and rebuild all relations</a>.</p>\n \n     </div>\n \ndiff --git a/Products/CMFPlone/controlpanel/browser/resourceregistry.pt b/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\nindex b1ac950250..641bea1b08 100644\n--- a/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\n+++ b/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\n@@ -13,49 +13,138 @@\n   <header>\n \n     <h1 class="documentFirstHeading"\n-        i18n:translate="">Resource Registries</h1>\n+        i18n:translate="">Resource Registry</h1>\n \n     <div class="text-muted"\n        i18n:translate="">\n-      Configure, enable, disable, debug and build Plone JavaScript/LESS/CSS resources.\n-      Plone utilizes RequireJS and LESS CSS to build its resources.\n-      Re-building a Plone bundle TTW requires a modern web browser.\n+      Configure Plone JavaScript/CSS resource bundles.\n     </div>\n   </header>\n \n    <div id="content-core">\n-      <span tal:replace="structure context/@@authenticator/authenticator"/>\n-      <div class="pat-resourceregistry" tal:attributes="data-pat-resourceregistry view/config">\n-        <div class="alert alert-info" role="status">\n-          <strong i18n:translate="">Info</strong>\n-          <span i18n:translate="">If you see this, it is because there was an error rendering the resource registry\n-          configuration. It\'s possible you saved a bundle that gives a JavaScript error\n-          and it is preventing the resource registry from loading.</span>\n+    <div tal:condition="python:view.global_debug_mode()"\n+         class="portalMessage statusmessage statusmessage-info alert alert-info"\n+         role="alert">\n+        <tal:icon tal:replace="structure python:icons.tag(\'plone-statusmessage-info\', tag_alt=\'\', tag_class=\'statusmessage-icon mb-1 me-2\')" />\n+        <strong i18n:translate="">Global Debug Mode Activated</strong>\n+        <span class="content"\n+              i18n:translate="">\n+            This is great for development.\n+            Resource hashes will be recalculated on each request.\n+            This is expensive, do not use use in production!\n+        </span>\n+    </div>\n+    <form tal:condition="python:not view.global_debug_mode() and view.debug_mode()"\n+          method="post" action="${python:context.absolute_url()}/@@resourceregistry-controlpanel">\n+      <div class="portalMessage statusmessage statusmessage-info alert alert-warning"\n+         role="alert">\n+          <button name="action" value="deactivate_cache" type="submit" class="btn btn-primary ms-1 me-1 mb-1 float-end">Deactivate</button>\n+        <tal:icon tal:replace="structure python:icons.tag(\'plone-statusmessage-warning\', tag_alt=\'\', tag_class=\'statusmessage-icon mb-1\')" />\n+        <strong i18n:translate="">Resource Debug Mode Activated</strong>\n+        <span class="content"\n+              i18n:translate="">\n+            Resources are not cached in Plone.\n+            Their hashes will be recalculated on each request.\n+            This is expensive, do not use use in production!\n+        </span>\n+      </div>\n+    </form>\n+    <form tal:condition="python:not view.global_debug_mode() and not view.debug_mode()"\n+          method="post" action="${python:context.absolute_url()}/@@resourceregistry-controlpanel">\n+      <div class="portalMessage statusmessage statusmessage-info alert alert-info"\n+         role="alert">\n+          <button name="action" value="activate_cache" type="submit" class="btn btn-primary ms-1 me-1 mb-1 float-end">Activate Debug Mode</button>\n+        <tal:icon tal:replace="structure python:icons.tag(\'plone-statusmessage-info\', tag_alt=\'\', tag_class=\'statusmessage-icon mb-1\')" />\n+        <strong i18n:translate="">Production Mode Activated</strong>\n+        <span class="content"\n+              i18n:translate="">\n+            Resources are fast and hashes are cached in Plone.\n+            Changes in resource settings are not applied directly.\n+        </span>\n+      </div>\n+    </form>\n+    <div class="accordion" id="accordionRR" tal:define="dummy python:view.process_form()">\n+      <div class="accordion-item "\n+           tal:repeat="bundle python:view.bundles_data">\n+           <h2 class="accordion-header" id="heading-${python:bundle[\'safe_name\']}">\n+            <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-${python:bundle[\'safe_name\']}" aria-expanded="false" aria-controls="collapse-${python:bundle[\'safe_name\']}">\n+              <span tal:condition="python:bundle[\'name\'] and bundle[\'enabled\']" i18n:translate="" class="me-2"><tal:icon tal:replace="structure python:icons.tag(\'file-check\', tag_alt=\'Enabled bundle\')" /></span>\n+              <span tal:condition="python:bundle[\'name\'] and not bundle[\'enabled\']" i18n:translate="" class="me-2"><tal:icon tal:replace="structure python:icons.tag(\'file-x\', tag_alt=\'Disabled bundle\')" /></span>\n+              <span tal:condition="python:not bundle[\'name\']" i18n:translate="" class="me-2"><tal:icon tal:replace="structure python:icons.tag(\'file-plus\', tag_alt=\'Add a bundle\')" /></span>\n+              <strong tal:condition="python:bundle[\'name\']">${python:bundle["name"]}</strong>\n+              <strong tal:condition="python:not bundle[\'name\']">Add new bundle</strong>\n+            </button>\n+          </h2>\n+          <div id="collapse-${python:bundle[\'safe_name\']}" class="accordion-collapse ${python:\'\' if bundle[\'name\'] == request.form.get(\'name\', None) else \'collapse\'}" aria-labelledby="heading${python:bundle[\'safe_name\']}" data-bs-parent="#accordionRR">\n+            <div class="accordion-body">\n+              <form method="post" action="${python:context.absolute_url()}/@@resourceregistry-controlpanel">\n+                <input type="hidden" name="original_name" value="${python:bundle[\'name\']}" />\n+                <div class="mb-3">\n+                  <label for="name" class="form-label">Name</label>\n+                  <input type="text" class="form-control" name="name" value="${python:bundle[\'name\']}"/>\n+                </div>\n+                <div class="mb-3">\n+                  <label for="jscompilation" class="form-label">Javascript</label>\n+                  <input type="text" class="form-control" name="jscompilation" value="${python:bundle[\'jscompilation\']}"/>\n+                </div>\n+                <div class="mb-3">\n+                  <label for="csscompilation" class="form-label">CSS</label>\n+                  <input type="text" class="form-control" name="csscompilation" value="${python:bundle[\'csscompilation\']}"/>\n+                </div>\n+                <div class="form-check mb-3">\n+                  <input class="form-check-input" type="checkbox" value="" name="enabled" ${python:"checked" if bundle["enabled"] else \'\'} />\n+                  <label class="form-check-label" for="enabled">\n+                    enabled\n+                  </label>\n+                </div>\n+                <div class="mb-3">\n+                  <label for="expression" class="form-label">Condition</label>\n+                  <input type="text" class="form-control" name="expression" value="${python:bundle[\'expression\']}" placeholder="expression"/>\n+                </div>\n+                <div class="mb-3">\n+                  <label for="depends" class="form-label">Depends on</label>\n+                  <input type="text" class="form-control" name="depends" value="${python:bundle[\'depends\']}" />\n+                </div>\n+                <div class="form-check mb-3">\n+                  <input class="form-check-input" type="checkbox" value="1" name="load_async" ${python:"checked" if bundle["load_async"] else \'\'} />\n+                  <label class="form-check-label" for="load_async">\n+                    Async\n+                  </label>\n+                </div>\n+                <div class="form-check mb-3">\n+                  <input class="form-check-input" type="checkbox" value="1" name="load_defer" ${python:"checked" if bundle["load_defer"] else \'\'} />\n+                  <label class="form-check-label" for="load_defer">\n+                    Defer\n+                  </label>\n+                </div>\n+                <div class="mb-3">\n+                  <button tal:condition="python:bundle[\'name\']" name="action" value="update" type="submit" class="btn btn-primary me-1">Save</button>\n+                  <button tal:condition="python:not bundle[\'name\']" name="action" value="add" type="submit" class="btn btn-success me-1">Add</button>\n+                  <button tal:condition="python:bundle[\'name\']" name="action" value="delete" type="submit" class="btn btn-danger">Delete</button>\n+                </div>\n+              </form>\n+          </div>\n         </div>\n-        <h2 i18n:translate="">Available Options</h2>\n-        <ul>\n-          <li i18n:translate="">Reload the page. There could be a intermittent issue.</li>\n-          <li i18n:translate="">Go to the <a i18n:name="configuration_registry" i18n:translate=""\n-              href="${portal_url}/portal_registry">Configuration Registry</a>\n-              and manually edit the configuration to enable development mode\n-              on the resource registry and try to rebuild.</li>\n-          <li><span i18n:translate="" tal:omit-tag="">You can also attempt to delete your customizations/builds and see if that fixes it.</span>\n-            <ul>\n-              <tal:overrides tal:repeat="override python: view.get_overrides()">\n-                <li>\n-                  <form method="POST">\n-                    <input type="hidden" name="action" value="delete-file" />\n-                    <input type="hidden" name="response" value="html" />\n-                    <input type="hidden" name="filepath" value="${override}" />\n-                    <input type="submit" value="Delete ${override}" i18n:attributes="value" />\n-                  </form>\n-                </li>\n-              </tal:overrides>\n-            </ul>\n-          </li>\n-        </ul>\n       </div>\n     </div>\n+    <div class="mt-3">\n+      <h2 i18n:translate="">Additional Resources</h2>\n+      <p i18n:translate="">After the above resources, the following might get loaded:</p>\n+      <dl>\n+        <dt i18n:translate="">Theme CSS and JavaScript</dt>\n+        <dd i18n:translate="">\n+          The activated Plone-Theme usually provides one CSS bundle and sometimes a javascript bundle.\n+        </dd>\n+        <dt i18n:translate="">Custom CSS</dt>\n+        <dd i18n:translate="">\n+          At last a custom CSS is loaded, if non-empty.\n+          It can be used to override the previous loaded CSS.\n+          It is provided for tinkerers and those in need of urgent through-the-web changes.\n+          Hint: <a href="${python:context.absolute_url()}/@@theming-controlpanel#autotoc-item-autotoc-1" i18n:name="link" i18n:translate="">Edit the Custom CSS in the Theming-Control-Panel</a>.\n+        </dd>\n+      </dl>\n+    </div>\n+   </div>\n </metal:main>\n \n </body>\ndiff --git a/Products/CMFPlone/controlpanel/browser/resourceregistry.py b/Products/CMFPlone/controlpanel/browser/resourceregistry.py\nindex 2c0dcace27..1bfae52ae8 100644\n--- a/Products/CMFPlone/controlpanel/browser/resourceregistry.py\n+++ b/Products/CMFPlone/controlpanel/browser/resourceregistry.py\n@@ -1,424 +1,150 @@\n-from datetime import datetime\n-from plone.memoize.view import memoize\n-from plone.registry import field\n+from App.config import getConfiguration\n from plone.registry.interfaces import IRegistry\n-from plone.registry.record import Record\n-from plone.resource.interfaces import IResourceDirectory\n+from Products.CMFPlone import PloneMessageFactory as _\n from Products.CMFPlone.interfaces import IBundleRegistry\n-from Products.CMFPlone.interfaces import IResourceRegistry\n-from Products.CMFPlone.interfaces.resources import OVERRIDE_RESOURCE_DIRECTORY_NAME  # noqa\n-from Products.CMFPlone.resources import add_bundle_on_request\n-from Products.CMFPlone.resources import RESOURCE_DEVELOPMENT_MODE\n-from Products.CMFPlone.resources.browser.configjs import RequireJsView\n-from Products.CMFPlone.resources.browser.cook import cookWhenChangingSettings\n+from Products.Five.browser import BrowserView\n from Products.statusmessages.interfaces import IStatusMessage\n-from urllib import parse\n-from zExceptions import NotFound\n from zope.component import getUtility\n \n-import json\n-import posixpath\n-import re\n+import operator\n \n \n-CSS_URL_REGEX = re.compile(r\'url\\(([^)]+)\\)\')\n-\n-\n-class JSONEncoder(json.JSONEncoder):\n-\n-    def default(self, obj):\n-        if hasattr(obj, \'isoformat\'):\n-            return obj.isoformat()\n-        else:\n-            return json.JSONEncoder.default(self, obj)\n-\n-\n-def recordsToDict(record):\n-    data = {}\n-    for name in record.__schema__.names():\n-        data[name] = getattr(record, name)\n-    return data\n-\n-\n-def updateRecordFromDict(record, data):\n-    for name in record.__schema__.names():\n-        if name in [\'last_compilation\']:\n-            continue\n-        if name in data:\n-            # almost all string data needs to be str, not unicode\n-            val = data[name]\n-            if isinstance(val, list):\n-                newval = []\n-                for item in val:\n-                    newval.append(item)\n-                val = newval\n-\n-            full_name = record.__prefix__ + name\n-            try:\n-                record.__registry__[full_name] = val\n-            except (AttributeError, KeyError):\n-                # upgrade record on the fly, try to at least\n-                if not val:\n-                    continue\n-                if type(val) == bool:\n-                    record.__registry__.records[full_name] = Record(\n-                        field.Bool(title=""), val)\n-                else:\n-                    raise\n-\n-\n-class OverrideFolderManager:\n-\n-    def __init__(self, context):\n-        self.context = context\n-        persistent_directory = getUtility(IResourceDirectory, name="persistent")  # noqa\n-        if OVERRIDE_RESOURCE_DIRECTORY_NAME not in persistent_directory:\n-            persistent_directory.makeDirectory(OVERRIDE_RESOURCE_DIRECTORY_NAME)  # noqa\n-        self.container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n-\n-    def save_file(self, filepath, data):\n-        resource_name, resource_filepath = filepath.split(\'/\', 1)\n-        if resource_name not in self.container:\n-            self.container.makeDirectory(resource_name)\n-        folder = self.container[resource_name]\n-        if \'.css\' in resource_filepath:\n-            data = self.make_links_relative(filepath, data)\n-        folder.writeFile(resource_filepath, data)\n-        return folder[resource_filepath]\n-\n-    def _rewrite_url(self, css_url, asset_url):\n-        """\n-        Pulled from:\n-        http://stackoverflow.com/questions/7469573/how-to-construct-relative-url-given-two-absolute-urls-in-python\n-\n-        """\n-        base = parse.urlparse(css_url)\n-        target = parse.urlparse(asset_url)\n-        if base.netloc != target.netloc:\n-            return asset_url\n-        base_dir = \'.\' + posixpath.dirname(base.path)\n-        target = \'.\' + target.path\n-        return posixpath.relpath(target, start=base_dir)\n-\n-    def make_links_relative(self, filepath, data):\n-        """\n-        make sure we don\'t write out any full urls.\n-        filepath will be something like foo/bar.css\n-        and the full real url will be something like http://site-url/++plone++foo/bar.css\n-\n-        So we\'ll be everything relative the resource path.\n-\n-\n-        """\n-        site_url = self.context.absolute_url()\n-        full_resource_url = f\'{site_url}/++plone++{filepath}\'\n-        for css_url in CSS_URL_REGEX.findall(data):\n-            if css_url.startswith("data:"):\n-                continue\n-            if css_url.find("data:image") > 0:\n-                continue\n-\n-            css_url = css_url.lstrip(\'url(\').rstrip(\')\').\\\n-                strip(\'"\').strip("\'")\n-            if css_url.startswith(site_url):\n-                data = data.replace(css_url, self._rewrite_url(\n-                    full_resource_url, css_url))\n-\n-        return data\n-\n-    def delete_file(self, filepath):\n-        resource_name, resource_filepath = filepath.split(\'/\', 1)\n+class ResourceRegistryControlPanelView(BrowserView):\n+    @property\n+    def _bundles(self):\n+        registry = getUtility(IRegistry)\n+        return registry.collectionOfInterface(\n+            IBundleRegistry, prefix="plone.bundles", check=False\n+        )\n \n-        if resource_name not in self.container:\n-            return\n-        folder = self.container[resource_name]\n-        try:\n-            fi = folder[resource_filepath]\n-        except NotFound:\n+    @property\n+    def bundles_data(self):\n+        result = []\n+        for name, record in self._bundles.items():\n+            result.append(\n+                {\n+                    "name": name,\n+                    "safe_name": name.replace(".", "-"),\n+                    "jscompilation": record.jscompilation,\n+                    "csscompilation": record.csscompilation,\n+                    "expression": record.expression,\n+                    "enabled": record.enabled,\n+                    "depends": record.depends,\n+                    "load_async": record.load_async,\n+                    "load_defer": record.load_defer,\n+                }\n+            )\n+        result = list(sorted(result, key=operator.itemgetter("name")))\n+        result.append(\n+            {\n+                "name": "",\n+                "safe_name": "",\n+                "jscompilation": "",\n+                "csscompilation": "",\n+                "expression": "",\n+                "enabled": False,\n+                "depends": "",\n+                "load_async": False,\n+                "load_defer": False,\n+            }\n+        )\n+        return result\n+\n+    def global_debug_mode(self):\n+        return getConfiguration().debug_mode\n+\n+    def debug_mode(self):\n+        registry = getUtility(IRegistry)\n+        return registry["plone.resources.development"]\n+\n+    def _add(self):\n+        name = self.request.form.get("name", None)\n+        if name is None or name == "":\n+            IStatusMessage(self.request).addStatusMessage(\n+                _("Name can not be empty."), "error"\n+            )\n             return\n-        parent = self.get_parent(fi)\n-        del parent[fi.getId()]\n-        if filepath not in self.container:\n+        bundles = self._bundles\n+        if name in bundles:\n+            IStatusMessage(self.request).addStatusMessage(\n+                _(f"Record {name} already exists."), "error"\n+            )\n             return\n-        folder = self.container[resource_name]\n-        try:\n-            fi = folder[resource_filepath]\n-        except NotFound:\n+        record = bundles.add(name)\n+        self._set_data_from_form(record)\n+        IStatusMessage(self.request).addStatusMessage(\n+            _(f"Record {name} created."), "info"\n+        )\n+\n+    def _update(self):\n+        new_name = self.request.form.get("name", None)\n+        if new_name is None or new_name == "":\n+            IStatusMessage(self.request).addStatusMessage(\n+                _("Name can not be empty."), "error"\n+            )\n             return\n-        parent = self.get_parent(fi)\n-        del parent[fi.getId()]\n-\n-    def get_parent(self, item):\n-        path = \'/\'.join(item.getPhysicalPath()[:-1])\n-        return self.context.restrictedTraverse(path)\n-\n-    def list_dir(self, container):\n-        if hasattr(container, \'listDirectory\'):\n-            return container.listDirectory()\n-        else:\n-            return container.objectIds()\n-\n-\n-class ResourceRegistryControlPanelView(RequireJsView):\n-\n-    def __call__(self):\n-        add_bundle_on_request(self.request, \'resourceregistry\')\n-        req = self.request\n-        if req.REQUEST_METHOD == \'POST\':\n-            action = req.get(\'action\', \'\')\n-            method = action.replace(\'-\', \'_\')\n-            if hasattr(self, method):\n-                return getattr(self, method)()\n-            else:\n-                return json.dumps({\n-                    \'success\': False,\n-                    \'msg\': \'Invalid action: \' + action\n-                })\n+        original_name = self.request.form.get("original_name", None)\n+        bundles = self._bundles\n+        if new_name != original_name:\n+            if original_name not in bundles:\n+                IStatusMessage(self.request).addStatusMessage(\n+                    _("Expected record missing."), "error"\n+                )\n+                return\n+            if new_name in bundles:\n+                IStatusMessage(self.request).addStatusMessage(\n+                    _(f"Record name {new_name} already taken."), "error"\n+                )\n+                return\n+            record = bundles[original_name]\n+            del bundles[original_name]\n+            bundles[new_name] = record\n         else:\n-            if RESOURCE_DEVELOPMENT_MODE:\n-                messages = IStatusMessage(self.request)\n-                messages.add("The FEDEV environment variable is set. No matter "\n-                             "what settings are done here, all bundles will "\n-                             "always be in development mode.", type="warn")\n-            return self.index()\n-\n-    @property\n-    @memoize\n-    def registry(self):\n-        return getUtility(IRegistry)\n-\n-    def update_registry_collection(self, itype, prefix, newdata):\n-        rdata = self.registry.collectionOfInterface(\n-            itype, prefix=prefix, check=False)\n-        for key, data in newdata.items():\n-            if key not in rdata:\n-                record = rdata.add(key)\n-            else:\n-                record = rdata[key]\n-            updateRecordFromDict(record, data)\n-        # remove missing ones\n-        for key in set(rdata.keys()) - set(newdata.keys()):\n-            del rdata[key]\n-\n-    def save_registry(self):\n-        req = self.request\n+            record = bundles[original_name]\n+        self._set_data_from_form(record)\n+        IStatusMessage(self.request).addStatusMessage(_("Changes saved."), "info")\n+\n+    def _set_data_from_form(self, record):\n+        names = record.__schema__.names()\n+        data = {k: v for k, v in self.request.form.items() if k in names}\n+        bool_names = ["enabled", "load_async", "load_defer"]\n+        for bool_name in bool_names:\n+            data[bool_name] = bool_name in data\n+        for field_name, value in data.items():\n+            full_name = record.__prefix__ + field_name\n+            record.__registry__[full_name] = value\n+        self._switch_cache(False)\n+\n+    def _delete(self):\n+        name = self.request.form.get("original_name", None)\n+        bundles = self._bundles\n+        if name not in bundles:\n+            IStatusMessage(self.request).addStatusMessage(\n+                _(f"Expected record {name} missing."), "error"\n+            )\n+            return\n+        del bundles[name]\n+        self._switch_cache(False)\n+        IStatusMessage(self.request).addStatusMessage(_("Record deleted."), "info")\n \n-        if req.get(\'resources\') and req.get(\'bundles\'):\n-            self.update_registry_collection(\n-                IResourceRegistry, "plone.resources",\n-                json.loads(req.get(\'resources\')))\n-            self.update_registry_collection(\n-                IBundleRegistry, "plone.bundles",\n-                json.loads(req.get(\'bundles\')))\n+    def _switch_cache(self, state):\n+        registry = getUtility(IRegistry)\n+        registry["plone.resources.development"] = state\n \n-        if self.request.form.get(\'development\', \'\').lower() == \'true\':\n-            self.registry[\'plone.resources.development\'] = True\n+    def process_form(self):\n+        if self.request["method"] != "POST":\n+            return\n+        action = self.request.form["action"]\n+        if action == "add":\n+            self._add()\n+        elif action == "update":\n+            self._update()\n+        elif action == "delete":\n+            self._delete()\n+        elif action == "activate_cache":\n+            self._switch_cache(True)\n+        elif action == "deactivate_cache":\n+            self._switch_cache(False)\n         else:\n-            self.registry[\'plone.resources.development\'] = False\n-\n-        # it\'d be difficult to know if the legacy bundle settings\n-        # changed or not so we need to just set the last import date\n-        # back so it gets re-built\n-        self.registry.records[\n-            \'plone.resources.last_legacy_import\'].value = datetime.now()\n-        cookWhenChangingSettings(self.context)\n-\n-        return json.dumps({\n-            \'success\': True\n-        })\n-\n-    def save_file(self):\n-        req = self.request\n-        resource_path = req.form.get(\'filepath\').split(\'++plone++\')[-1]\n-        overrides = OverrideFolderManager(self.context)\n-        overrides.save_file(resource_path, req.form[\'data\'])\n-        return json.dumps({\n-            \'success\': True\n-        })\n-\n-    def delete_file(self):\n-        req = self.request\n-        resource_path = req.form.get(\'filepath\').split(\'++plone++\')[-1]\n-        overrides = OverrideFolderManager(self.context)\n-        overrides.delete_file(resource_path)\n-\n-        if req.form.get(\'response\') == \'html\':\n-            return req.response.redirect(req.URL)\n-        return json.dumps({\n-            \'success\': True\n-        })\n-\n-    def get_bundles(self):\n-        return self.registry.collectionOfInterface(\n-            IBundleRegistry, prefix="plone.bundles", check=False)\n-\n-    def get_resources(self):\n-        return self.registry.collectionOfInterface(\n-            IResourceRegistry, prefix="plone.resources", check=False)\n-\n-    def less_build_config(self):\n-        site_url = self.context.portal_url()\n-        bundles = self.get_bundles()\n-        bundle = self.request.get(\'bundle\', None)\n-        resources = self.get_resources()\n-        less_files = []\n-        if bundle and bundle in bundles:\n-            bundle_obj = bundles[bundle]\n-            for resource in bundle_obj.resources:\n-                if resource in resources:\n-                    for css in resources[resource].css:\n-                        url = parse.urlparse(css)\n-                        if url.netloc == \'\':\n-                            # Local\n-                            src = f"{site_url}/{css}"\n-                        else:\n-                            src = "%s" % (css)\n-\n-                        extension = url.path.split(\'.\')[-1]\n-                        if extension == \'less\':\n-                            less_files.append(src)\n-        return json.dumps({\n-            \'less\': less_files,\n-        })\n-\n-    def js_build_config(self):\n-        (paths, shims) = self.get_requirejs_config()\n-        bundles = self.get_bundles()\n-        resources = self.get_resources()\n-\n-        bundle = self.request.get(\'bundle\', None)\n-        includes = []\n-        if bundle and bundle in bundles:\n-            bundle_obj = bundles[bundle]\n-            for resource_name in bundle_obj.resources:\n-                # need to check if this resource has a js file\n-                # it could just be a css resource\n-                try:\n-                    resource = resources[resource_name]\n-                    if resource.js:\n-                        includes.append(resource_name)\n-                except KeyError:\n-                    # skip if missing\n-                    pass\n-            if bundle_obj.stub_js_modules:\n-                for module in bundle_obj.stub_js_modules:\n-                    paths[module] = \'empty:\'\n-        return json.dumps({\n-            \'include\': includes,\n-            \'shim\': shims,\n-            \'paths\': paths,\n-            \'wrapShim\': True,\n-            \'optimize\': \'none\'\n-        })\n-\n-    def save_js_build(self):\n-        """\n-        \'\xc3\x82\'\n-        """\n-        overrides = OverrideFolderManager(self.context)\n-        req = self.request\n-        filepath = \'static/%s-compiled.js\' % req.form[\'bundle\']\n-\n-        data = req.form[\'data\']\n-        overrides.save_file(filepath, data)\n-        bundle = self.get_bundles().get(req.form[\'bundle\'])\n-        if bundle:\n-            bundle.last_compilation = datetime.now()\n-            bundle.jscompilation = f\'++plone++{filepath}\'\n-        return json.dumps({\n-            \'success\': True,\n-            \'filepath\': \'++plone++\' + filepath\n-        })\n-\n-    def save_less_build(self):\n-        overrides = OverrideFolderManager(self.context)\n-        req = self.request\n-        filepath = \'static/%s-compiled.css\' % req.form[\'bundle\']\n-        data = \'\'\n-        for key, value in req.form.items():\n-            if not key.startswith(\'data-\'):\n-                continue\n-            if isinstance(value, str):\n-                value = [value]\n-            data += \'\\n\'.join(value) + \'\\n\'\n-        overrides.save_file(filepath, data)\n-        bundle = self.get_bundles().get(req.form[\'bundle\'])\n-        if bundle:\n-            bundle.last_compilation = datetime.now()\n-            bundle.csscompilation = f\'++plone++{filepath}\'\n-        return json.dumps({\n-            \'success\': True,\n-            \'filepath\': \'++plone++\' + filepath\n-        })\n-\n-    def save_less_variables(self):\n-        data = {}\n-        for key, val in json.loads(self.request.form.get(\'data\')).items():\n-            data[key] = val\n-        self.registry[\'plone.lessvariables\'] = data\n-        return json.dumps({\n-            \'success\': True\n-        })\n-\n-    def save_pattern_options(self):\n-        data = {}\n-        for key, val in json.loads(self.request.form.get(\'data\')).items():\n-            data[key] = val\n-        self.registry[\'plone.patternoptions\'] = data\n-        return json.dumps({\n-            \'success\': True\n-        })\n-\n-    def get_overrides(self):\n-        overrides = OverrideFolderManager(self.context)\n-\n-        def _read_folder(folder):\n-            files = []\n-            for filename in folder.listDirectory():\n-                try:\n-                    item = folder[filename]\n-                except NotFound:\n-                    continue\n-                if folder.isDirectory(filename):\n-                    files.extend(_read_folder(item))\n-                else:\n-                    files.append(item)\n-            return files\n-        files = _read_folder(overrides.container)\n-        results = []\n-        site_path = self.context.getPhysicalPath()\n-        for fi in files:\n-            path = fi.getPhysicalPath()\n-            rel_path = path[len(site_path) + 2:]\n-            results.append(\'++plone++{}/{}\'.format(\n-                rel_path[0], \'/\'.join(rel_path[1:])))\n-        return results\n-\n-    def config(self):\n-        base_url = self.context.absolute_url()\n-        resources = self.get_resources()\n-\n-        less_url = self.registry[\'plone.resources.lessc\']\n-        rjs_url = self.registry[\'plone.resources.rjs\']\n-\n-        data = {\n-            \'development\': self.registry[\'plone.resources.development\'],\n-            \'lessvariables\': self.registry[\'plone.lessvariables\'],\n-            \'resources\': {},\n-            \'bundles\': {},\n-            \'javascripts\': {},\n-            \'css\': {},\n-            \'baseUrl\': base_url,\n-            \'manageUrl\': \'%s/@@resourceregistry-controlpanel\' % base_url,\n-            \'lessUrl\': f\'{base_url}/{less_url}\',\n-            \'lessConfigUrl\': \'%s/less-variables.js\' % base_url,\n-            \'rjsUrl\': rjs_url,\n-            \'patternoptions\': self.registry[\'plone.patternoptions\']\n-        }\n-        bundles = self.get_bundles()\n-        for key, resource in resources.items():\n-            data[\'resources\'][key] = recordsToDict(resource)\n-        for key, bundle in bundles.items():\n-            data[\'bundles\'][key] = recordsToDict(bundle)\n-        data[\'overrides\'] = self.get_overrides()\n-        return json.dumps(data, cls=JSONEncoder)\n+            raise ValueError("Invalid form data")\n+        self.request.response.redirect(self.request["ACTUAL_URL"])\ndiff --git a/Products/CMFPlone/controlpanel/browser/site.py b/Products/CMFPlone/controlpanel/browser/site.py\nindex 269fe1b029..f87c056104 100644\n--- a/Products/CMFPlone/controlpanel/browser/site.py\n+++ b/Products/CMFPlone/controlpanel/browser/site.py\n@@ -16,6 +16,7 @@ class SiteControlPanelForm(controlpanel.RegistryEditForm):\n     def updateFields(self):\n         super().updateFields()\n         self.fields[\'site_logo\'].widgetFactory = NamedImageFieldWidget\n+        self.fields[\'site_favicon\'].widgetFactory = NamedImageFieldWidget\n \n     def updateWidgets(self):\n         super().updateWidgets()\ndiff --git a/Products/CMFPlone/controlpanel/browser/types.pt b/Products/CMFPlone/controlpanel/browser/types.pt\nindex fbe06c46fd..2f30312d72 100644\n--- a/Products/CMFPlone/controlpanel/browser/types.pt\n+++ b/Products/CMFPlone/controlpanel/browser/types.pt\n@@ -183,7 +183,7 @@\n                                    name="form.button.SelectWorkflow"\n                                    class="btn btn-primary"\n                                    value="Change"\n-                                   i18n:attributes="value label_change;">Change</button>\n+                                   i18n:attributes="value label_change;" i18n:translate="label_change">Change</button>\n                         </noscript>\n                     </div>\n \ndiff --git a/Products/CMFPlone/controlpanel/browser/usergroups_groupdetails.pt b/Products/CMFPlone/controlpanel/browser/usergroups_groupdetails.pt\nindex cb1c97ebc3..67e738a52d 100644\n--- a/Products/CMFPlone/controlpanel/browser/usergroups_groupdetails.pt\n+++ b/Products/CMFPlone/controlpanel/browser/usergroups_groupdetails.pt\n@@ -93,14 +93,6 @@\n                             tal:attributes="value view/groupname | string:"/>\n                   </div>\n \n-                   <tal:set tal:condition="targetobject/management_page_charset|nothing"\n-                            tal:define="dummy python:request.set(\'management_page_charset_tag\',\'\')" />\n-\n-                   <tal:set tal:condition="not:targetobject/management_page_charset|nothing">\n-                      <tal:defines define="dummy python:request.set(\'management_page_charset\',\'UTF-8\');\n-                                           dummy python:request.set(\'management_page_charset_tag\',\'UTF-8:\');" />\n-                   </tal:set>\n-\n                   <tal:properties repeat="property targetobject/propertyMap">\n                       <div class="field mb-3"\n                            tal:define="id property/id;\n@@ -125,14 +117,18 @@\n \n                       <input type="text" name="id" size="35" class="form-control"\n                               tal:condition="python:type in (\'float\',\'date\')"\n-                              tal:attributes="name string:$id:${request/management_page_charset_tag}$type;\n+                              tal:attributes="name string:$id:$type;\n                                               id id;\n                                               value python:propertyvalue if propertyvalue else \'\';\n                                               disabled disabled;" />\n-\n+                      <tal:comment condition="nothing">\n+                        Unicode property types, like ustring, are deprecated and should not be used in Plone 6 (Zope 5).\n+                        Core Plone should not need them, but there could be custom groups that use them,\n+                        so we keep the compatibility checks in here.\n+                      </tal:comment>\n                       <input type="text" name="string and ustring" size="35" class="form-control"\n                               tal:condition="python:type in (\'string\',\'ustring\')"\n-                              tal:attributes="name string:$id:${request/management_page_charset_tag}$type;\n+                              tal:attributes="name string:$id:$type;\n                                               id id;\n                                               value python:propertyvalue if propertyvalue else \'\';\n                                               disabled disabled;" />\n@@ -149,7 +145,7 @@\n \n                       <input name="tokens and utokens" value="" type="text" size="35" class="form-control"\n                               tal:condition="python:type in (\'tokens\', \'utokens\')"\n-                              tal:attributes="name string:$id:${request/management_page_charset_tag}$type;\n+                              tal:attributes="name string:$id:$type;\n                                               value python:propertyvalue if propertyvalue else \'\';\n                                               disabled disabled;" />\n \n@@ -157,7 +153,7 @@\n                               rows="6"\n                               cols="35"\n                               tal:condition="python: type in (\'text\', \'utext\')"\n-                              tal:attributes="name string:$id:${request/management_page_charset_tag}$type;\n+                              tal:attributes="name string:$id:$type;\n                                               disabled disabled;"\n                               tal:content="propertyvalue">some data</textarea>\n \n@@ -165,7 +161,7 @@\n                               rows="6"\n                               cols="35"\n                               tal:condition="python: type in (\'lines\', \'ulines\')"\n-                              tal:attributes="name string:$id:${request/management_page_charset_tag}$type;\n+                              tal:attributes="name string:$id:$type;\n                                               disabled disabled;"\n                               tal:content="python: propertyvalue and \'\\n\'.join(propertyvalue) or \'\'">\n                       </textarea>\n@@ -176,7 +172,7 @@\n                                       select_value python:select_variable and path(\'context/%s\' %select_variable) or [];">\n \n                       <select name="selection" tal:condition="python:type in (\'selection\',)"\n-                          tal:attributes="name string:$id:${request/management_page_charset_tag}text;\n+                          tal:attributes="name string:$id:text;\n                                           disabled disabled;">\n                           <tal:values repeat="option select_value">\n                               <option tal:attributes="SELECTED python:\'SELECTED\' if propertyvalue==option else \'\'"\n@@ -185,7 +181,7 @@\n                       </select>\n \n                       <select name="multiple selection" multiple="multiple" tal:condition="python:type in (\'multiple selection\',)"\n-                              tal:attributes="name string:$id:${request/management_page_charset_tag}list:string;\n+                              tal:attributes="name string:$id:list:string;\n                                               size python:min(7, len(select_value));\n                                               disabled disabled;">\n                           <tal:values repeat="option select_value">\ndiff --git a/Products/CMFPlone/controlpanel/browser/usergroups_usersoverview.pt b/Products/CMFPlone/controlpanel/browser/usergroups_usersoverview.pt\nindex 997c4befdb..6bf0192991 100644\n--- a/Products/CMFPlone/controlpanel/browser/usergroups_usersoverview.pt\n+++ b/Products/CMFPlone/controlpanel/browser/usergroups_usersoverview.pt\n@@ -61,7 +61,12 @@\n \n         <div class="mb-3 input-group">\n           <a class="pat-plone-modal me-3 btn btn-success " id="add-user"\n-             data-pat-plone-modal="{&quot;actionOptions&quot;: {&quot;displayInModal&quot;: false}}"\n+             data-pat-plone-modal=\'{\n+                "actionOptions": {\n+                  "redirectOnResponse": true,\n+                  "redirectToUrl": "${portal_url}/@@usergroup-userprefs"\n+                }\n+              }\'\n              tal:attributes="href string:${portal_url}/@@new-user"\n              i18n:translate="label_add_new_user">Add New User</a>\n           <span class="input-group-text" id="quickSearchLabel" i18n:translate="label_user_search">User Search</span>\n@@ -95,8 +100,8 @@\n                 <tr>\n                   <th  class="text-start" i18n:translate="listingheader_user_name">User name</th>\n                   <th class="rotate" tal:repeat="portal_role portal_roles"><div tal:content="portal_role" i18n:translate="">Role</div></th>\n-                  <th class="rotate alert-warning"><div i18n:translate="listingheader_reset_password">Reset Password</div></th>\n-                  <th class="rotate alert-danger"><div i18n:translate="listingheader_remove">Remove</div></th>\n+                  <th class="rotate table-warning"><div i18n:translate="listingheader_reset_password">Reset Password</div></th>\n+                  <th class="rotate table-danger"><div i18n:translate="listingheader_remove">Remove</div></th>\n                 </tr>\n               </thead>\n               <tbody>\n@@ -139,7 +144,7 @@\n \n                         </td>\n \n-                        <td class="listingCheckbox alert-warning">\n+                        <td class="listingCheckbox table-warning">\n                           <input type="checkbox"\n                                  class="noborder"\n                                  name="users.resetpassword:records"\n@@ -149,7 +154,7 @@\n                                                  disabled python:user[\'can_set_password\'] and default or \'disabled\'" />\n                         </td>\n \n-                        <td class="listingCheckbox alert-danger">\n+                        <td class="listingCheckbox table-danger">\n                           <input type="checkbox"\n                                          class="noborder notify"\n                                          name="delete:list"\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_navigation_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_navigation_adapter.py\nindex 2f0d0eacfb..8fa4ea9704 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_navigation_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_navigation_adapter.py\n@@ -134,21 +134,21 @@ def test_set_workflow_states_to_show(self):\n     def test_get_show_excluded_items(self):\n         self.assertEqual(\n             getAdapter(self.portal, INavigationSchema).show_excluded_items,\n-            True\n+            False\n         )\n-        self.navigation_settings.show_excluded_items = False\n+        self.navigation_settings.show_excluded_items = True\n         self.assertEqual(\n             getAdapter(self.portal, INavigationSchema).show_excluded_items,\n-            False\n+            True\n         )\n \n     def test_set_show_excluded_items(self):\n         self.assertEqual(\n             self.navigation_settings.show_excluded_items,\n-            True\n+            False\n         )\n-        getAdapter(self.portal, INavigationSchema).show_excluded_items = False\n+        getAdapter(self.portal, INavigationSchema).show_excluded_items = True\n         self.assertEqual(\n             self.navigation_settings.show_excluded_items,\n-            False\n+            True\n         )\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_error_log.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_error_log.py\nnew file mode 100644\nindex 0000000000..ae797cd070\n--- /dev/null\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_error_log.py\n@@ -0,0 +1,64 @@\n+import unittest\n+\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n+from plone.app.testing import SITE_OWNER_NAME\n+from plone.app.testing import SITE_OWNER_PASSWORD\n+from plone.testing.zope import Browser\n+from zope.component import getMultiAdapter\n+\n+\n+class ErrorLogControlPanelFunctionalTest(unittest.TestCase):\n+    """Test for Controlpanel Error Log\n+    """\n+\n+    layer = PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n+    error_log_properties = None\n+\n+    def setUp(self):\n+        self.app = self.layer[\'app\']\n+        self.request = self.layer[\'request\']\n+        self.portal = self.layer[\'portal\']\n+        self.portal_url = self.portal.absolute_url()\n+\n+        # keep initial error_log_properties to reset them\n+        self.error_log_properties = self.portal.error_log.getProperties()\n+\n+        self.browser = Browser(self.app)\n+        self.browser.handleErrors = False\n+        self.browser.addHeader(\n+            \'Authorization\',\n+            f\'Basic {SITE_OWNER_NAME}:{SITE_OWNER_PASSWORD}\'\n+        )\n+\n+    def tearDown(self):\n+        # reset error log properties\n+        keep_entries = self.error_log_properties[\'keep_entries\']\n+        copy_to_zlog = self.error_log_properties[\'copy_to_zlog\']\n+        ignored_exceptions = self.error_log_properties[\'ignored_exceptions\']\n+        self.portal.error_log.setProperties(keep_entries, copy_to_zlog, ignored_exceptions)\n+\n+    def test_error_log_control_panel_link(self):\n+        self.browser.open("%s/@@overview-controlpanel" % self.portal_url)\n+        self.browser.getLink(\'Errors\').click()\n+\n+        self.assertEqual(self.browser.url, "%s/@@error-log-form" % self.portal_url)\n+        self.assertIn(\'<h1>Error log</h1>\', self.browser.contents)\n+\n+    def test_error_log_set_properties(self):\n+        self.assertEqual(self.error_log_properties[\'keep_entries\'], 20)\n+        self.assertEqual(self.error_log_properties[\'copy_to_zlog\'], True)\n+        self.assertEqual(self.error_log_properties[\'ignored_exceptions\'], (\'Unauthorized\', \'NotFound\', \'Redirect\'))\n+\n+        self.request.form = {\n+            \'keep_entries\': 40,\n+            \'ignored_exceptions\': [\'NotFound\', \'Redirect\']\n+        }\n+\n+        set_properties_view = getMultiAdapter((self.portal, self.request),\n+                                name=\'error-log-set-properties\')\n+        set_properties_view()\n+\n+        error_log_properties = self.portal.error_log.getProperties()\n+        self.assertEqual(error_log_properties[\'keep_entries\'], 40)\n+        self.assertEqual(error_log_properties[\'copy_to_zlog\'], False)\n+        self.assertEqual(error_log_properties[\'ignored_exceptions\'], (\'NotFound\', \'Redirect\'))\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_filter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_filter.py\nindex e6b04e0a5c..c0154ea161 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_filter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_filter.py\n@@ -103,5 +103,5 @@ def test_nasty_tags(self):\n         ds = datastream(\'dummy_name\')\n         self.assertEqual(\n             self.safe_html.convert(good_html, ds).getData(),\n-            \'<p/>\'\n+            \'<p></p>\'\n         )\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_relations.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_relations.py\nnew file mode 100644\nindex 0000000000..a99d71950a\n--- /dev/null\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_relations.py\n@@ -0,0 +1,74 @@\n+import unittest\n+\n+from plone.app.testing import SITE_OWNER_NAME, SITE_OWNER_PASSWORD\n+from plone.testing.zope import Browser\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n+\n+\n+class RelationsControlPanelFunctionalTest(unittest.TestCase):\n+    """Test that links and actions in controlpanel starts with to absolute portal url."""\n+\n+    layer = PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n+\n+    def _add_broken_relation(self):\n+        import transaction\n+        from persistent.list import PersistentList\n+        from z3c.relationfield import RelationValue\n+        from zope.component import getUtility\n+        from zope.intid.interfaces import IIntIds\n+        from zope.lifecycleevent import modified\n+\n+        self.portal.invokeFactory("Document", id="doc1", title="doc1")\n+        doc1 = self.portal["doc1"]\n+        self.portal.invokeFactory("Document", id="doc2", title="doc2")\n+        doc2 = self.portal["doc2"]\n+\n+        intids = getUtility(IIntIds)\n+        doc1.relatedItems = PersistentList()\n+        doc1.relatedItems.append(RelationValue(intids.getId(doc2)))\n+        modified(doc1)\n+        self.portal._delObject("doc2")\n+        transaction.commit()\n+\n+    def setUp(self):\n+        self.app = self.layer["app"]\n+        self.portal = self.layer["portal"]\n+        self.portal_url = self.portal.absolute_url()\n+        self.browser = Browser(self.app)\n+        self.browser.handleErrors = False\n+        self.browser.addHeader(\n+            "Authorization", f"Basic {SITE_OWNER_NAME}:{SITE_OWNER_PASSWORD}"\n+        )\n+\n+    def test_inspect_realtions_form_action(self):\n+        from io import StringIO\n+\n+        from lxml import etree\n+\n+        self.browser.open(f"{self.portal_url}/@@inspect-relations")\n+        tree = etree.parse(StringIO(self.browser.contents), etree.HTMLParser())\n+        action_url = tree.xpath("//form[@id=\'relationinfo\']/@action")[0]\n+        self.assertTrue(\n+            action_url.startswith(self.portal_url),\n+            "URL in relationinfo form should start with portal url",\n+        )\n+\n+    def test_rebuild_relations_links(self):\n+        from io import StringIO\n+\n+        from lxml import etree\n+\n+        # first we need a broken relation\n+        # for conditional rendering alert panel in controlpanel\n+        self._add_broken_relation()\n+\n+        self.browser.open(f"{self.portal_url}/@@inspect-relations")\n+        tree = etree.parse(StringIO(self.browser.contents), etree.HTMLParser())\n+        hrefs = tree.xpath(\n+            "//div[@id=\'content-core\']//a[contains(@href, \'@@rebuild-relations\')]/@href"\n+        )\n+        for href in hrefs:\n+            self.assertTrue(\n+                href.startswith(self.portal_url),\n+                "URL in Link should start with portal url",\n+            )\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_usergroups_siteadmin_role.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_usergroups_siteadmin_role.py\nindex 5b5dea724e..9b567ea24c 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_usergroups_siteadmin_role.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_usergroups_siteadmin_role.py\n@@ -298,7 +298,7 @@ def test_users_overview_blocks_deleting_managers(self):\n         # Manager role\n         self.browser.addHeader(\n             \'Authorization\', \'Basic siteadmin:secret\')\n-            \n+\n         self.browser.open(self.usergroups_url)\n         contents = self._simplify_white_space(self.browser.contents)\n         self.assertTrue(\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_overview.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_overview.py\nindex 55a368e5d5..974d6c3828 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_overview.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_overview.py\n@@ -4,6 +4,7 @@\n from plone.registry.interfaces import IRegistry\n from zope.component import getUtility\n from unittest import mock\n+import os\n import unittest\n \n \n@@ -12,15 +13,15 @@ def mock_getUtility1(iface):\n \n \n def mock_getUtility2(iface):\n-    return {\'plone.portal_timezone\': None}\n+    return {"plone.portal_timezone": None}\n \n \n def mock_getUtility3(iface):\n-    return {\'plone.portal_timezone\': \'Europe/Amsterdam\'}\n+    return {"plone.portal_timezone": "Europe/Amsterdam"}\n \n \n def mock_getUtility4(iface):\n-    return {\'plone.app.event.portal_timezone\': \'Europe/Amsterdam\'}\n+    return {"plone.app.event.portal_timezone": "Europe/Amsterdam"}\n \n \n class TestControlPanel(unittest.TestCase):\n@@ -28,34 +29,49 @@ class TestControlPanel(unittest.TestCase):\n     layer = PLONE_INTEGRATION_TESTING\n \n     def setUp(self):\n-        self.portal = self.layer[\'portal\']\n-        self.request = self.layer[\'request\']\n-        setRoles(self.portal, TEST_USER_ID, [\'Manager\'])\n+        self.portal = self.layer["portal"]\n+        self.request = self.layer["request"]\n+        setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-    @mock.patch(\'Products.CMFPlone.controlpanel.browser.overview.getUtility\',\n-                new=mock_getUtility1)\n+    @mock.patch(\n+        "Products.CMFPlone.controlpanel.browser.overview.getUtility",\n+        new=mock_getUtility1,\n+    )\n     def test_timezone_warning__noreg(self):\n         # If no registry key is available, return True\n         registry = getUtility(IRegistry)\n         reg_key = "plone.portal_timezone"\n         del registry.records[reg_key]\n         self.assertFalse(reg_key in registry)\n-        view = self.portal.restrictedTraverse(\'@@overview-controlpanel\')\n+        view = self.portal.restrictedTraverse("@@overview-controlpanel")\n         self.assertTrue(view.timezone_warning())\n \n-    @mock.patch(\'Products.CMFPlone.controlpanel.browser.overview.getUtility\',\n-                new=mock_getUtility2)\n+    @mock.patch(\n+        "Products.CMFPlone.controlpanel.browser.overview.getUtility",\n+        new=mock_getUtility2,\n+    )\n     def test_timezone_warning__emptyreg(self):\n         # If registry key value is empty, return True\n         registry = getUtility(IRegistry)\n         reg_key = "plone.portal_timezone"\n         registry[reg_key] = None\n-        view = self.portal.restrictedTraverse(\'@@overview-controlpanel\')\n+        view = self.portal.restrictedTraverse("@@overview-controlpanel")\n         self.assertTrue(view.timezone_warning())\n \n-    @mock.patch(\'Products.CMFPlone.controlpanel.browser.overview.getUtility\',\n-                new=mock_getUtility3)\n+    @mock.patch(\n+        "Products.CMFPlone.controlpanel.browser.overview.getUtility",\n+        new=mock_getUtility3,\n+    )\n     def test_timezone_warning__set(self):\n         # If new plone.portal_timezone is set, return False\n-        view = self.portal.restrictedTraverse(\'@@overview-controlpanel\')\n+        view = self.portal.restrictedTraverse("@@overview-controlpanel")\n         self.assertFalse(view.timezone_warning())\n+\n+    def test_gunicorn_server_name(self):\n+        self.request["SERVER_SOFTWARE"] = "gunicorn/19.6.0"\n+        view = self.portal.restrictedTraverse("@@overview-controlpanel")\n+        self.assertEqual(view.server_info()["server_name"], "gunicorn")\n+        self.request["SERVER_SOFTWARE"] = "bad-gunicorn-name/19.6.0"\n+        view = self.portal.restrictedTraverse("@@overview-controlpanel")\n+        with self.assertWarns(Warning):\n+            view.server_info()["server_name"]\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_relations.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_relations.py\nindex 07c0d232ec..a6bf021866 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_relations.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_relations.py\n@@ -82,6 +82,9 @@ def test_rebuild_relations(self):\n         # api.relation.create(doc1, doc2, \'relatedItems\')\n         # api.relation.create(doc1, doc3, \'relatedItems\')\n \n+        # Make sure the catalog index queue is flushed.\n+        self.portal.portal_catalog.searchResults({})\n+\n         stats, broken = get_relations_stats()\n         self.assertEqual(dict(stats), {\'relatedItems\': 2})\n         self.assertEqual(dict(broken), {})\n@@ -134,6 +137,9 @@ def test_rebuild_relations_with_intid(self):\n         # api.relation.create(doc1, doc2, \'relatedItems\')\n         # api.relation.create(doc1, doc3, \'relatedItems\')\n \n+        # Make sure the catalog index queue is flushed.\n+        self.portal.portal_catalog.searchResults({})\n+\n         stats, broken = get_relations_stats()\n         self.assertEqual(dict(stats), {\'relatedItems\': 2})\n         self.assertEqual(dict(broken), {})\ndiff --git a/Products/CMFPlone/exportimport/configure.zcml b/Products/CMFPlone/exportimport/configure.zcml\nindex 3607947997..b3a1ada1ba 100644\n--- a/Products/CMFPlone/exportimport/configure.zcml\n+++ b/Products/CMFPlone/exportimport/configure.zcml\n@@ -76,14 +76,6 @@\n       description="Import CMFDiffTool settings">\n   </genericsetup:importStep>\n \n-  <genericsetup:importStep\n-      name="combine-bundles"\n-      title="Bundle combination"\n-      description="Combine JS/CSS bundles together"\n-      handler="Products.CMFPlone.resources.exportimport.bundles.combine">\n-    <depends name="plone.app.registry" />\n-  </genericsetup:importStep>\n-\n   <genericsetup:exportStep\n       name="content"\n       title="Content"\ndiff --git a/Products/CMFPlone/factory.py b/Products/CMFPlone/factory.py\nindex 5336f3f493..41f47a1c81 100644\n--- a/Products/CMFPlone/factory.py\n+++ b/Products/CMFPlone/factory.py\n@@ -1,5 +1,7 @@\n from logging import getLogger\n from plone.registry.interfaces import IRegistry\n+from plone.uuid.handlers import addAttributeUUID\n+from Products.CMFCore.interfaces import ISiteRoot\n from Products.CMFPlone import PloneMessageFactory as _\n from Products.CMFPlone.events import SiteManagerCreatedEvent\n from Products.CMFPlone.interfaces import INonInstallable\n@@ -10,6 +12,7 @@\n from zope.component.hooks import setSite\n from zope.event import notify\n from zope.interface import implementer\n+from zope.lifecycleevent import ObjectCreatedEvent\n \n _TOOL_ID = \'portal_setup\'\n _DEFAULT_PROFILE = \'Products.CMFPlone:plone\'\n@@ -120,8 +123,12 @@ def addPloneSite(context, site_id, title=\'Plone site\', description=\'\',\n                  extension_ids=(), setup_content=True,\n                  default_language=\'en\', portal_timezone=\'UTC\'):\n     """Add a PloneSite to the context."""\n-    context._setObject(site_id, PloneSite(site_id))\n-    site = context._getOb(site_id)\n+\n+    site = PloneSite(site_id)\n+    notify(ObjectCreatedEvent(site))\n+    context[site_id] = site\n+\n+    site = context[site_id]\n     site.setLanguage(default_language)\n     # Set the accepted language for the rest of the request.  This makes sure\n     # the front-page text gets the correct translation also when your browser\ndiff --git a/Products/CMFPlone/interfaces/controlpanel.py b/Products/CMFPlone/interfaces/controlpanel.py\nindex 24245cf481..b46119af83 100644\n--- a/Products/CMFPlone/interfaces/controlpanel.py\n+++ b/Products/CMFPlone/interfaces/controlpanel.py\n@@ -18,7 +18,7 @@\n \n deprecated(\n     "It has been moved to plone.i18n.interfaces, import from there instead.",\n-    ILanguageSchema=\'plone.i18n.interfaces:ILanguageSchema\',\n+    ILanguageSchema="plone.i18n.interfaces:ILanguageSchema",\n )\n \n \n@@ -62,10 +62,13 @@ def validate_json(value):\n     try:\n         json.loads(value)\n     except ValueError as exc:\n+\n         class JSONError(schema.ValidationError):\n-            __doc__ = _("Must be empty or a valid JSON-formatted "\n-                        "configuration \xe2\x80\x93 ${message}.", mapping={\n-                            \'message\': str(exc)})\n+            __doc__ = _(\n+                "Must be empty or a valid JSON-formatted "\n+                "configuration \xe2\x80\x93 ${message}.",\n+                mapping={"message": str(exc)},\n+            )\n \n         raise JSONError(value)\n \n@@ -73,359 +76,419 @@ class JSONError(schema.ValidationError):\n \n \n class IControlPanel(IPloneBaseTool):\n-    """ Interface for the ControlPanel """\n-\n-    def registerConfiglet(id, name, action, condition=\'\', permission=\'\',  # NOQA\n-                          category=\'Plone\', visible=1, appId=None,\n-                          imageUrl=None, description=\'\', REQUEST=None):\n-        """ Registration of a Configlet """\n+    """Interface for the ControlPanel"""\n+\n+    def registerConfiglet(\n+        id,\n+        name,\n+        action,\n+        condition="",\n+        permission="",  # NOQA\n+        category="Plone",\n+        visible=1,\n+        appId=None,\n+        imageUrl=None,\n+        description="",\n+        REQUEST=None,\n+    ):\n+        """Registration of a Configlet"""\n \n     def unregisterConfiglet(id):  # NOQA\n-        """ unregister Configlet """\n+        """unregister Configlet"""\n \n     def unregisterApplication(appId):  # NOQA\n-        """ unregister Application with all configlets """\n+        """unregister Application with all configlets"""\n \n     def getGroupIds():  # NOQA\n-        """ list of the group ids """\n+        """list of the group ids"""\n \n     def getGroups():  # NOQA\n-        """ list of groups as dicts with id and title """\n+        """list of groups as dicts with id and title"""\n \n     def enumConfiglets(group=None):  # NOQA\n-        """ lists the Configlets of a group, returns them as dicts by\n-            calling .getAction() on each of them """\n+        """lists the Configlets of a group, returns them as dicts by\n+        calling .getAction() on each of them"""\n \n \n class IEditingSchema(Interface):\n \n     available_editors = schema.List(\n-        title=_(\'Available editors\'),\n-        description=_(\'Available editors in the portal.\'),\n-        default=[\'TinyMCE\', \'None\'],\n+        title=_("Available editors"),\n+        description=_("Available editors in the portal."),\n+        default=["TinyMCE", "None"],\n         value_type=schema.TextLine(),\n         missing_value=[],\n-        required=True\n+        required=True,\n     )\n \n     default_editor = schema.Choice(\n-        title=_(\'Default editor\'),\n+        title=_("Default editor"),\n         description=_(\n-            \'Select the default wysiwyg \'\n-            \'editor. Users will be able to choose their \'\n-            \'own or select to use the site default.\'),\n-        default=\'TinyMCE\',\n+            "Select the default wysiwyg "\n+            "editor. Users will be able to choose their "\n+            "own or select to use the site default."\n+        ),\n+        default="TinyMCE",\n         missing_value=set(),\n-        vocabulary=\'plone.app.vocabularies.AvailableEditors\',\n-        required=True)\n+        vocabulary="plone.app.vocabularies.AvailableEditors",\n+        required=True,\n+    )\n \n     ext_editor = schema.Bool(\n-        title=_(\'Enable External Editor feature\'),\n+        title=_("Enable External Editor feature"),\n         description=_(\n-            \'Determines if the external editor \'\n-            \'feature is enabled. This feature requires a \'\n-            \'special client-side application installed. The \'\n-            \'users also have to enable this in their \'\n-            \'preferences.\'),\n+            "Determines if the external editor "\n+            "feature is enabled. This feature requires a "\n+            "special client-side application installed. The "\n+            "users also have to enable this in their "\n+            "preferences."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     enable_link_integrity_checks = schema.Bool(\n-        title=_(\'Enable link integrity checks\'),\n+        title=_("Enable link integrity checks"),\n         description=_(\n-            \'Determines if the users should get \'\n-            \'warnings when they delete or move content that \'\n-            \'is linked from inside the site.\'),\n+            "Determines if the users should get "\n+            "warnings when they delete or move content that "\n+            "is linked from inside the site."\n+        ),\n         default=True,\n-        required=False)\n+        required=False,\n+    )\n \n     lock_on_ttw_edit = schema.Bool(\n-        title=_(\'Enable locking for through-the-web edits\'),\n+        title=_("Enable locking for through-the-web edits"),\n         description=_(\n-            \'Disabling locking here will only \'\n-            \'affect users editing content through the \'\n-            \'Plone web UI.  Content edited via WebDAV \'\n-            \'clients will still be subject to locking.\'),\n+            "Disabling locking here will only "\n+            "affect users editing content through the "\n+            "Plone web UI.  Content edited via WebDAV "\n+            "clients will still be subject to locking."\n+        ),\n         default=True,\n-        required=False)\n+        required=False,\n+    )\n \n     subjects_of_navigation_root = schema.Bool(\n-        title=_(\'Limit tags/keywords to the current navigation root\'),\n+        title=_("Limit tags/keywords to the current navigation root"),\n         description=_(\n-            \'Limit tags aka keywords vocabulary used for Tags field and \'\n-            \'in searches to the terms used inside the subtree of the current \'\n+            "Limit tags aka keywords vocabulary used for Tags field and "\n+            "in searches to the terms used inside the subtree of the current "\n             "navigation root. This can be used together with Plone\'s "\n-            \'multilingual extension plone.app.multilingual to only offer \'\n-            \'keywords of the current selected language. Other addons may \'\n-            \'utilize this feature for its specific purposes.\'),\n+            "multilingual extension plone.app.multilingual to only offer "\n+            "keywords of the current selected language. Other addons may "\n+            "utilize this feature for its specific purposes."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n \n class ITagAttrPair(Interface):\n-    tags = schema.TextLine(title=\'tags\')\n-    attributes = schema.TextLine(title=\'attributes\')\n+    tags = schema.TextLine(title="tags")\n+    attributes = schema.TextLine(title="attributes")\n \n \n @implementer(ITagAttrPair)\n class TagAttrPair:\n-\n-    def __init__(self, tags=\'\', attributes=\'\'):\n+    def __init__(self, tags="", attributes=""):\n         self.tags = tags\n         self.attributes = attributes\n \n \n class IFilterSchema(Interface):\n-    """Combined schema for the adapter lookup.\n-    """\n+    """Combined schema for the adapter lookup."""\n \n     # class IFilterTagsSchema(Interface):\n \n     disable_filtering = schema.Bool(\n-        title=_(\'Disable HTML filtering\'),\n-        description=_(\'Warning: disabling this can be dangerous. \'\n-                      \'Only disable if you know what you are doing.\'),\n+        title=_("Disable HTML filtering"),\n+        description=_(\n+            "Warning: disabling this can be dangerous. "\n+            "Only disable if you know what you are doing."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     nasty_tags = schema.List(\n-        title=_(\'Nasty tags\'),\n-        description=_(\'These tags and their content are completely blocked \'\n-                      \'when a page is saved or rendered. They are only deleted\'\n-                      \' if they are not marked as valid_tags\'),\n-        default=[\'style\', \'object\', \'embed\', \'applet\', \'script\', \'meta\'],\n+        title=_("Nasty tags"),\n+        description=_(\n+            "These tags and their content are completely blocked "\n+            "when a page is saved or rendered. They are only deleted"\n+            " if they are not marked as valid_tags"\n+        ),\n+        default=["style", "object", "embed", "applet", "script", "meta"],\n         value_type=schema.TextLine(),\n         missing_value=[],\n-        required=False)\n+        required=False,\n+    )\n \n     valid_tags = schema.List(\n-        title=_(\'Valid tags\'),\n-        description=_(\'A list of valid tags which will be not filtered out.\'),\n+        title=_("Valid tags"),\n+        description=_("A list of valid tags which will be not filtered out."),\n         default=[\n-            \'a\',\n-            \'abbr\',\n-            \'acronym\',\n-            \'address\',\n-            \'article\',\n-            \'aside\',\n-            \'audio\',\n-            \'b\',\n-            \'bdo\',\n-            \'big\',\n-            \'blockquote\',\n-            \'body\',\n-            \'br\',\n-            \'canvas\',\n-            \'caption\',\n-            \'cite\',\n-            \'code\',\n-            \'col\',\n-            \'colgroup\',\n-            \'command\',\n-            \'datalist\',\n-            \'dd\',\n-            \'del\',\n-            \'details\',\n-            \'dfn\',\n-            \'dialog\',\n-            \'div\',\n-            \'dl\',\n-            \'dt\',\n-            \'em\',\n-            \'figure\',\n-            \'figcaption\',\n-            \'footer\',\n-            \'h1\',\n-            \'h2\',\n-            \'h3\',\n-            \'h4\',\n-            \'h5\',\n-            \'h6\',\n-            \'head\',\n-            \'header\',\n-            \'hgroup\',\n-            \'hr\',\n-            \'html\',\n-            \'i\',\n-            \'iframe\',\n-            \'img\',\n-            \'ins\',\n-            \'kbd\',\n-            \'keygen\',\n-            \'li\',\n-            \'map\',\n-            \'mark\',\n-            \'meter\',\n-            \'nav\',\n-            \'ol\',\n-            \'output\',\n-            \'p\',\n-            \'pre\',\n-            \'progress\',\n-            \'q\',\n-            \'rp\',\n-            \'rt\',\n-            \'ruby\',\n-            \'samp\',\n-            \'section\',\n-            \'small\',\n-            \'source\',\n-            \'span\',\n-            \'strong\',\n-            \'sub\',\n-            \'sup\',\n-            \'table\',\n-            \'tbody\',\n-            \'td\',\n-            \'tfoot\',\n-            \'th\',\n-            \'thead\',\n-            \'time\',\n-            \'title\',\n-            \'tr\',\n-            \'tt\',\n-            \'u\',\n-            \'ul\',\n-            \'var\',\n-            \'video\',\n+            "a",\n+            "abbr",\n+            "acronym",\n+            "address",\n+            "article",\n+            "aside",\n+            "audio",\n+            "b",\n+            "bdo",\n+            "big",\n+            "blockquote",\n+            "body",\n+            "br",\n+            "canvas",\n+            "caption",\n+            "cite",\n+            "code",\n+            "col",\n+            "colgroup",\n+            "command",\n+            "datalist",\n+            "dd",\n+            "del",\n+            "details",\n+            "dfn",\n+            "dialog",\n+            "div",\n+            "dl",\n+            "dt",\n+            "em",\n+            "figure",\n+            "figcaption",\n+            "footer",\n+            "h1",\n+            "h2",\n+            "h3",\n+            "h4",\n+            "h5",\n+            "h6",\n+            "head",\n+            "header",\n+            "hgroup",\n+            "hr",\n+            "html",\n+            "i",\n+            "iframe",\n+            "img",\n+            "ins",\n+            "kbd",\n+            "keygen",\n+            "li",\n+            "map",\n+            "mark",\n+            "meter",\n+            "nav",\n+            "ol",\n+            "output",\n+            "p",\n+            "pre",\n+            "progress",\n+            "q",\n+            "rp",\n+            "rt",\n+            "ruby",\n+            "samp",\n+            "section",\n+            "small",\n+            "source",\n+            "span",\n+            "strong",\n+            "sub",\n+            "sup",\n+            "table",\n+            "tbody",\n+            "td",\n+            "tfoot",\n+            "th",\n+            "thead",\n+            "time",\n+            "title",\n+            "tr",\n+            "tt",\n+            "u",\n+            "ul",\n+            "var",\n+            "video",\n         ],\n         value_type=schema.TextLine(),\n         missing_value=[],\n-        required=False)\n+        required=False,\n+    )\n \n     custom_attributes = schema.List(\n-        title=_(\'Custom attributes\'),\n-        description=_(\'These attributes are additionally allowed.\'),\n-        default=[\'style\'],\n+        title=_("Custom attributes"),\n+        description=_("These attributes are additionally allowed."),\n+        default=["style", "controls", "poster", "autoplay"],\n         value_type=schema.TextLine(),\n         missing_value=[],\n-        required=False)\n+        required=False,\n+    )\n \n \n class ITinyMCELayoutSchema(Interface):\n     """This interface defines the layout properties."""\n \n     resizing = schema.Bool(\n-        title=_(\'Enable resizing the editor window.\'),\n-        description=_(\'This option gives you the ability to enable/disable \'\n-                      \'resizing the editor window. \'),\n+        title=_("Enable resizing the editor window."),\n+        description=_(\n+            "This option gives you the ability to enable/disable "\n+            "resizing the editor window. "\n+        ),\n         default=True,\n-        required=False)\n+        required=False,\n+    )\n \n     autoresize = schema.Bool(\n-        title=_(\'Enable auto resizing of the editor window.\'),\n-        description=_(\'This option gives you the ability to enable/disable \'\n-                      \'auto resizing the editor window depending \'\n-                      \'on the content.\'),\n+        title=_("Enable auto resizing of the editor window."),\n+        description=_(\n+            "This option gives you the ability to enable/disable "\n+            "auto resizing the editor window depending "\n+            "on the content."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     # TODO: add validation to assert % and px in the value\n     editor_width = schema.TextLine(\n-        title=_(\'Editor width\'),\n-        description=_(\'This option gives you the ability to specify the \'\n-                      \'width of the editor (like 100% or 400px).\'),\n+        title=_("Editor width"),\n+        description=_(\n+            "This option gives you the ability to specify the "\n+            "width of the editor (like 100% or 400px)."\n+        ),\n         default=None,\n-        required=False)\n+        required=False,\n+    )\n \n     # TODO: add validation to assert % and px in the value\n     editor_height = schema.TextLine(\n-        title=_(\'Editor height\'),\n-        description=_(\'This option gives you the ability to specify the \'\n-                      \'height of the editor in pixels. \'\n-                      \'If auto resize is enabled this value is used \'\n-                      \'as minimum height.\'),\n+        title=_("Editor height"),\n+        description=_(\n+            "This option gives you the ability to specify the "\n+            "height of the editor in pixels. "\n+            "If auto resize is enabled this value is used "\n+            "as minimum height."\n+        ),\n         default=None,\n-        required=False)\n+        required=False,\n+    )\n \n     content_css = schema.List(\n-        title=_(\'Choose the CSS used in WYSIWYG Editor Area\'),\n-        description=_(\'This option enables you to specify a custom CSS file \'\n-                      \'that provides content CSS. \'\n-                      \'This CSS file is the one used within the editor \'\n-                      \'(the editable area). In addition to what is listed, \'\n-                      \'here the plone bundle CSS and diazo themes using the \'\n-                      \'tinymce-content-css setting are also added.\'),\n+        title=_("Choose the CSS used in WYSIWYG Editor Area"),\n+        description=_(\n+            "This option enables you to specify CSS files "\n+            "that will be used within the the editable area of the editor "\n+            "(e.g. ++plone++mystyles/tinymce.css). "\n+            "In addition to what is listed here, "\n+            "the barceloneta bundle CSS is also added."\n+        ),\n         value_type=schema.TextLine(),\n         missing_value=[],\n-        default=[\n-            \'++plone++static/components/tinymce/\'\n-            \'skins/lightgray/content.min.css\'\n-        ],\n-        required=False)\n+        default=[],\n+        required=False,\n+    )\n \n     header_styles = schema.List(\n-        title=_(\'Header styles\'),\n-        description=_(\'Name|tag\'),\n+        title=_("Header styles"),\n+        description=_("Name|tag"),\n         value_type=schema.TextLine(),\n         missing_value=[],\n         default=[\n-            \'Header 1|h1\',\n-            \'Header 2|h2\',\n-            \'Header 3|h3\',\n-            \'Header 4|h4\',\n-            \'Header 5|h5\',\n-            \'Header 6|h6\'\n-        ])\n+            "Header 1|h1",\n+            "Header 2|h2",\n+            "Header 3|h3",\n+            "Header 4|h4",\n+            "Header 5|h5",\n+            "Header 6|h6",\n+        ],\n+    )\n \n     inline_styles = schema.List(\n-        title=_(\'Inline styles\'),\n-        description=_(\'Name|format|icon\'),\n+        title=_("Inline styles"),\n+        description=_("Name|format|icon"),\n         value_type=schema.TextLine(),\n         missing_value=[],\n         default=[\n-            \'Bold|bold|bold\',\n-            \'Italic|italic|italic\',\n-            \'Underline|underline|underline\',\n-            \'Strikethrough|strikethrough|strikethrough\',\n-            \'Superscript|superscript|superscript\',\n-            \'Subscript|subscript|subscript\',\n-            \'Code|code|code\'])\n+            "Bold|bold|bold",\n+            "Italic|italic|italic",\n+            "Underline|underline|underline",\n+            "Strikethrough|strikethrough|strikethrough",\n+            "Superscript|superscript|superscript",\n+            "Subscript|subscript|subscript",\n+            "Code|code|code",\n+            "Text in 2 columns|textcolumns2",\n+            "Text in 3 columns|textcolumns3",\n+        ],\n+    )\n \n     block_styles = schema.List(\n-        title=_(\'Block styles\'),\n-        description=_(\'Name|format\'),\n+        title=_("Block styles"),\n+        description=_("Name|format"),\n         value_type=schema.TextLine(),\n         missing_value=[],\n-        default=[\n-            \'Paragraph|p\',\n-            \'Blockquote|blockquote\',\n-            \'Div|div\',\n-            \'Pre|pre\'])\n+        default=["Paragraph|p", "Blockquote|blockquote", "Div|div", "Pre|pre"],\n+    )\n \n     alignment_styles = schema.List(\n-        title=_(\'Alignment styles\'),\n-        description=_(\'Name|format|icon\'),\n+        title=_("Alignment styles"),\n+        description=_("Name|format|icon"),\n         value_type=schema.TextLine(),\n         missing_value=[],\n         default=[\n-            \'Left|alignleft|alignleft\',\n-            \'Center|aligncenter|aligncenter\',\n-            \'Right|alignright|alignright\',\n-            \'Justify|alignjustify|alignjustify\'])\n+            "Left|alignleft|align-left",\n+            "Center|aligncenter|align-center",\n+            "Right|alignright|align-right",\n+            "Justify|alignjustify|align-justify",\n+        ],\n+    )\n \n     table_styles = schema.List(\n-        title=_(\'Table styles\'),\n-        description=_(\'Name|class\'),\n+        title=_("Table styles"),\n+        description=_("Name|class"),\n         value_type=schema.TextLine(),\n         missing_value=[],\n-        default=[\n-            \'Listing|listing\',\n-            \'Invisible Grid|invisible-grid\'\n-        ])\n+        default=["Listing|listing", "Invisible Grid|invisible-grid"],\n+    )\n \n     formats = schema.Text(\n-        title=_(\'Formats\'),\n+        title=_("Formats"),\n         description=_(\n-            \'Enter a JSON-formatted style format configuration. \'\n-            \'A format is for example the style that get applied when \'\n-            \'you press the bold button inside the editor. \'\n-            \'See https://www.tinymce.com/docs/configure/content-formatting/#formats\'),  # NOQA: E501\n+            "Enter a JSON-formatted style format configuration. "\n+            "A format is for example the style that get applied when "\n+            "you press the bold button inside the editor. "\n+            "See https://www.tinymce.com/docs/configure/content-formatting/#formats"\n+        ),  # NOQA: E501\n         constraint=validate_json,\n-        default=dump_json_to_text({\n-            \'discreet\': {\'inline\': \'span\', \'classes\': \'discreet\'},\n-            \'clearfix\': {\'block\': \'div\', \'classes\': \'clearfix\'}\n-        }),\n+        default=dump_json_to_text(\n+            {\n+                "discreet": {"inline": "span", "classes": "discreet"},\n+                "clearfix": {"block": "div", "classes": "clearfix"},\n+                "alignleft": {\n+                    "selector": "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table",\n+                    "classes": "text-start",\n+                },\n+                "aligncenter": {\n+                    "selector": "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table",\n+                    "classes": "text-center",\n+                },\n+                "alignright": {\n+                    "selector": "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table",\n+                    "classes": "text-end",\n+                },\n+                "alignjustify": {\n+                    "selector": "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table",\n+                    "classes": "text-justify",\n+                },\n+                "textcolumns2": {"selector": "p", "classes": "text-columns-2"},\n+                "textcolumns3": {"selector": "p", "classes": "text-columns-3"}\n+            }\n+        ),\n         required=True,\n     )\n \n@@ -434,135 +497,168 @@ class ITinyMCEPluginSchema(Interface):\n     """This interface defines the toolbar properties."""\n \n     plugins = schema.List(\n-        title=_(\'label_tinymce_plugins\', default=\'Editor plugins\'),\n-        description=_(\'help_tinymce_plugins\', default=(\n-            \'Select plugins to include with tinymce\')),\n-        value_type=schema.Choice(vocabulary=SimpleVocabulary([\n-            SimpleTerm(\'advlist\', \'advlist\', \'advlist\'),\n-            SimpleTerm(\'anchor\', \'anchor\', \'anchor\'),\n-            SimpleTerm(\'autosave\', \'autosave\', \'autosave\'),\n-            SimpleTerm(\'charmap\', \'charmap\', \'charmap\'),\n-            SimpleTerm(\'code\', \'code\', \'code\'),\n-            SimpleTerm(\'colorpicker\', \'colorpicker\', \'colorpicker\'),\n-            SimpleTerm(\'contextmenu\', \'contextmenu\', \'contextmenu\'),\n-            SimpleTerm(\'directionality\', \'directionality\', \'directionality\'),\n-            SimpleTerm(\'emoticons\', \'emoticons\', \'emoticons\'),\n-            SimpleTerm(\'fullpage\', \'fullpage\', \'fullpage\'),\n-            SimpleTerm(\'fullscreen\', \'fullscreen\', \'fullscreen\'),\n-            SimpleTerm(\'hr\', \'hr\', \'hr\'),\n-            SimpleTerm(\'insertdatetime\', \'insertdatetime\', \'insertdatetime\'),\n-            SimpleTerm(\'layer\', \'layer\', \'layer\'),\n-            SimpleTerm(\'lists\', \'lists\', \'lists\'),\n-            SimpleTerm(\'media\', \'media\', \'media\'),\n-            SimpleTerm(\'nonbreaking\', \'nonbreaking\', \'nonbreaking\'),\n-            SimpleTerm(\'noneditable\', \'noneditable\', \'noneditable\'),\n-            SimpleTerm(\'pagebreak\', \'pagebreak\', \'pagebreak\'),\n-            SimpleTerm(\'paste\', \'paste\', \'paste\'),\n-            SimpleTerm(\'preview\', \'preview\', \'preview\'),\n-            SimpleTerm(\'print\', \'print\', \'print\'),\n-            # XXX disable save button since it is not implemeneted\n-            # SimpleTerm(\'save\', \'save\', u\'save\'),\n-            SimpleTerm(\'searchreplace\', \'searchreplace\', \'searchreplace\'),\n-            SimpleTerm(\'tabfocus\', \'tabfocus\', \'tabfocus\'),\n-            SimpleTerm(\'table\', \'table\', \'table\'),\n-            SimpleTerm(\'textcolor\', \'textcolor\', \'textcolor\'),\n-            SimpleTerm(\'textpattern\', \'textpattern\', \'textpattern\'),\n-            SimpleTerm(\'visualblocks\', \'visualblocks\', \'visualblocks\'),\n-            SimpleTerm(\'visualchars\', \'visualchars\', \'visualchars\'),\n-            SimpleTerm(\'wordcount\', \'wordcount\', \'wordcount\')\n-        ])),\n-        default=[\'advlist\', \'fullscreen\', \'hr\', \'lists\', \'media\',\n-                 \'nonbreaking\', \'noneditable\', \'pagebreak\', \'paste\', \'preview\',\n-                 \'print\', \'searchreplace\', \'tabfocus\', \'table\',\n-                 \'visualchars\', \'wordcount\', \'code\'],\n+        title=_("label_tinymce_plugins", default="Editor plugins"),\n+        description=_(\n+            "help_tinymce_plugins", default=("Select plugins to include with tinymce")\n+        ),\n+        value_type=schema.Choice(\n+            vocabulary=SimpleVocabulary(\n+                [\n+                    SimpleTerm("advlist", "advlist", "advlist"),\n+                    SimpleTerm("anchor", "anchor", "anchor"),\n+                    SimpleTerm("autosave", "autosave", "autosave"),\n+                    SimpleTerm("charmap", "charmap", "charmap"),\n+                    SimpleTerm("code", "code", "code"),\n+                    SimpleTerm("colorpicker", "colorpicker", "colorpicker"),\n+                    SimpleTerm("contextmenu", "contextmenu", "contextmenu"),\n+                    SimpleTerm("directionality", "directionality", "directionality"),\n+                    SimpleTerm("emoticons", "emoticons", "emoticons"),\n+                    SimpleTerm("fullpage", "fullpage", "fullpage"),\n+                    SimpleTerm("fullscreen", "fullscreen", "fullscreen"),\n+                    SimpleTerm("hr", "hr", "hr"),\n+                    SimpleTerm("insertdatetime", "insertdatetime", "insertdatetime"),\n+                    SimpleTerm("layer", "layer", "layer"),\n+                    SimpleTerm("lists", "lists", "lists"),\n+                    SimpleTerm("media", "media", "media"),\n+                    SimpleTerm("nonbreaking", "nonbreaking", "nonbreaking"),\n+                    SimpleTerm("noneditable", "noneditable", "noneditable"),\n+                    SimpleTerm("pagebreak", "pagebreak", "pagebreak"),\n+                    SimpleTerm("paste", "paste", "paste"),\n+                    SimpleTerm("preview", "preview", "preview"),\n+                    SimpleTerm("print", "print", "print"),\n+                    # XXX disable save button since it is not implemeneted\n+                    # SimpleTerm(\'save\', \'save\', u\'save\'),\n+                    SimpleTerm("searchreplace", "searchreplace", "searchreplace"),\n+                    SimpleTerm("tabfocus", "tabfocus", "tabfocus"),\n+                    SimpleTerm("table", "table", "table"),\n+                    SimpleTerm("textcolor", "textcolor", "textcolor"),\n+                    SimpleTerm("textpattern", "textpattern", "textpattern"),\n+                    SimpleTerm("template", "template", "template"),\n+                    SimpleTerm("visualblocks", "visualblocks", "visualblocks"),\n+                    SimpleTerm("visualchars", "visualchars", "visualchars"),\n+                    SimpleTerm("wordcount", "wordcount", "wordcount"),\n+                ]\n+            )\n+        ),\n+        default=[\n+            "advlist",\n+            "fullscreen",\n+            "hr",\n+            "lists",\n+            "media",\n+            "nonbreaking",\n+            "noneditable",\n+            "pagebreak",\n+            "paste",\n+            "preview",\n+            "print",\n+            "searchreplace",\n+            "tabfocus",\n+            "table",\n+            "visualchars",\n+            "wordcount",\n+            "code",\n+        ],\n         missing_value=[],\n-        required=False)\n+        required=False,\n+    )\n \n     menubar = schema.List(\n-        title=_(\'label_tinymce_menubar\', default=\'Menubar\'),\n-        description=_(\'help_tinymce_menubar\', default=(\n-            \'Enter what items you would like in the menu bar.\')),\n+        title=_("label_tinymce_menubar", default="Menubar"),\n+        description=_(\n+            "help_tinymce_menubar",\n+            default=("Enter what items you would like in the menu bar."),\n+        ),\n         required=True,\n         value_type=schema.TextLine(),\n         missing_value=[],\n-        default=[\n-            \'edit\', \'table\', \'format\',\n-            \'tools\' \'view\', \'insert\'])\n+        default=["edit", "table", "format", "tools", "view", "insert"],\n+    )\n \n     menu = schema.Text(\n-        title=_(\'label_tinymce_menu\', \'Menu\'),\n-        description=_(\'hint_tinymce_menu\',\n-                      default=\'JSON formatted Menu configuration.\'),\n+        title=_("label_tinymce_menu", "Menu"),\n+        description=_(\n+            "hint_tinymce_menu", default="JSON formatted Menu configuration."\n+        ),\n         constraint=validate_json,\n-        default=dump_json_to_text({\n-            \'edit\': {\n-                \'title\': \'Edit\',\n-                \'items\': \'undo redo | cut copy paste pastetext | \'\n-                         \'searchreplace textpattern selectall | textcolor\'},\n-            \'insert\': {\'title\': \'Insert\', \'items\': \'link media | template hr\'},\n-            \'view\': {\n-                \'title\': \'View\',\n-                \'items\': \'visualaid visualchars visualblocks preview \'\n-                         \'fullpage fullscreen\',\n-            },\n-            \'format\': {\n-                \'title\': \'Format\',\n-                \'items\': \'bold italic underline strikethrough \'\n-                         \'superscript subscript | formats | removeformat\'\n-            },\n-            \'table\': {\n-                \'title\': \'Table\',\n-                \'items\': \'inserttable tableprops deletetable | cell row column\'\n-            },\n-            \'tools\': {\n-                \'title\': \'Tools\',\n-                \'items\': \'spellchecker charmap emoticons insertdatetime \'\n-                         \'layer code\'\n+        default=dump_json_to_text(\n+            {\n+                "edit": {\n+                    "title": "Edit",\n+                    "items": "undo redo | cut copy paste pastetext | "\n+                    "searchreplace textpattern selectall | textcolor",\n+                },\n+                "insert": {"title": "Insert", "items": "link media | template hr"},\n+                "view": {\n+                    "title": "View",\n+                    "items": "visualaid visualchars visualblocks preview "\n+                    "fullpage fullscreen code",\n+                },\n+                "format": {\n+                    "title": "Format",\n+                    "items": "bold italic underline strikethrough "\n+                    "superscript subscript | formats | removeformat",\n+                },\n+                "table": {\n+                    "title": "Table",\n+                    "items": "inserttable tableprops deletetable | cell row column",\n+                },\n+                "tools": {\n+                    "title": "Tools",\n+                    "items": "spellchecker charmap emoticons insertdatetime " "layer",\n+                },\n             }\n-        })\n+        ),\n     )\n \n     templates = schema.Text(\n-        title=_(\'label_tinymce_templates\', default=\'Templates\'),\n+        title=_("label_tinymce_templates", default="Templates"),\n         description=_(\n-            \'help_tinymce_templates\',\n+            "help_tinymce_templates",\n             default=(\n-                \'Enter the list of templates in json format \'\n-                \'https://www.tinymce.com/docs/plugins/template/\'\n-            )\n+                "Enter the list of templates in json format "\n+                "https://www.tinymce.com/docs/plugins/template/"\n+            ),\n         ),\n         required=False,\n         constraint=validate_json,\n-        default=dump_json_to_text({}))\n+        default=dump_json_to_text({}),\n+    )\n \n     toolbar = schema.Text(\n-        title=_(\'label_tinymce_toolbar\', default=\'Toolbar\'),\n-        description=_(\'help_tinymce_toolbar\', default=(\n-            \'Enter how you would like the toolbar items to list.\')),\n+        title=_("label_tinymce_toolbar", default="Toolbar"),\n+        description=_(\n+            "help_tinymce_toolbar",\n+            default=("Enter how you would like the toolbar items to list."),\n+        ),\n         required=True,\n-        default=\'ltr rtl | undo redo | styleselect | bold italic | \'\n-                \'alignleft aligncenter alignright alignjustify | \'\n-                \'bullist numlist outdent indent | \'\n-                \'unlink plonelink ploneimage\')\n+        default="ltr rtl | undo redo | styleselect | bold italic | "\n+        "alignleft aligncenter alignright alignjustify | "\n+        "bullist numlist outdent indent | "\n+        "unlink plonelink ploneimage",\n+    )\n \n     custom_plugins = schema.List(\n-        title=_(\'Custom plugins\'),\n-        description=_(\'Enter a list of custom plugins which will be loaded \'\n-                      \'in the editor. Format is \'\n-                      \'pluginname|location, one per line.\'),\n+        title=_("Custom plugins"),\n+        description=_(\n+            "Enter a list of custom plugins which will be loaded "\n+            "in the editor. Format is "\n+            "pluginname|location, one per line."\n+        ),\n         required=False,\n         value_type=schema.TextLine(),\n         missing_value=[],\n-        default=[])\n+        default=[],\n+    )\n \n     custom_buttons = schema.List(\n-        title=_(\'Custom buttons\'),\n-        description=_(\n-            \'Enter a list of custom buttons which will be added to toolbar\'),\n+        title=_("Custom buttons"),\n+        description=_("Enter a list of custom buttons which will be added to toolbar"),\n         required=False,\n         value_type=schema.TextLine(),\n         missing_value=[],\n-        default=[])\n+        default=[],\n+    )\n \n \n ITinyMCELibrariesSchema = ITinyMCEPluginSchema  # bw compat\n@@ -572,69 +668,75 @@ class ITinyMCESpellCheckerSchema(Interface):\n     """This interface defines the libraries properties."""\n \n     libraries_spellchecker_choice = schema.Choice(\n-        title=_(\'Spellchecker plugin to use\'),\n-        description=_(\'This option allows you to choose the spellchecker for \'\n-                      \'TinyMCE.\'),\n+        title=_("Spellchecker plugin to use"),\n+        description=_(\n+            "This option allows you to choose the spellchecker for " "TinyMCE."\n+        ),\n         missing_value=set(),\n-        vocabulary=SimpleVocabulary([\n-            SimpleTerm(\'browser\', \'browser\',\n-                       _(\'Default browser spellchecker\')),\n-            SimpleTerm(\'AtD\', \'AtD\',\n-                       _(\'After the deadline (FLOSS)\')),\n-        ]),\n-        default=\'browser\',\n-        required=False)\n+        vocabulary=SimpleVocabulary(\n+            [\n+                SimpleTerm("browser", "browser", _("Default browser spellchecker")),\n+                SimpleTerm("AtD", "AtD", _("After the deadline (FLOSS)")),\n+            ]\n+        ),\n+        default="browser",\n+        required=False,\n+    )\n \n     libraries_atd_ignore_strings = schema.List(\n-        title=_(\'AtD ignore strings\'),\n+        title=_("AtD ignore strings"),\n         description=_(\n-            \'label_atd_ignore_strings\',\n+            "label_atd_ignore_strings",\n             default=\'A list of strings which the "After the Deadline" \'\n-                    \'spellchecker should ignore. \'\n-                    \'Note: This option is only applicable when the \'\n-                    \'appropriate spellchecker has been chosen above.\'),\n-        default=[\n-            \'Zope\',\n-            \'Plone\',\n-            \'TinyMCE\'],\n+            "spellchecker should ignore. "\n+            "Note: This option is only applicable when the "\n+            "appropriate spellchecker has been chosen above.",\n+        ),\n+        default=["Zope", "Plone", "TinyMCE"],\n         value_type=schema.TextLine(),\n         missing_value=[],\n-        required=False)\n+        required=False,\n+    )\n \n     libraries_atd_show_types = schema.List(\n-        title=_(\'AtD error types to show\'),\n+        title=_("AtD error types to show"),\n         description=_(\n-            \'help_atderrortypes_to_show\',\n-            default=\'A list of error types which the \'\n-                    \'"After the Deadline" spellchecker should check for. \'\n-                    \'By default, all the available error type will be \'\n-                    \'listed here.\'),\n+            "help_atderrortypes_to_show",\n+            default="A list of error types which the "\n+            \'"After the Deadline" spellchecker should check for. \'\n+            "By default, all the available error type will be "\n+            "listed here.",\n+        ),\n         value_type=schema.TextLine(),\n         default=[\n-            \'Bias Language\',\n-            \'Cliches\',\n-            \'Complex Expression\',\n-            \'Diacritical Marks\',\n-            \'Double Negatives\',\n-            \'Hidden Verbs\',\n-            \'Jargon Language\',\n-            \'Passive voice\',\n-            \'Phrases to Avoid\',\n-            \'Redundant Expression\'],\n+            "Bias Language",\n+            "Cliches",\n+            "Complex Expression",\n+            "Diacritical Marks",\n+            "Double Negatives",\n+            "Hidden Verbs",\n+            "Jargon Language",\n+            "Passive voice",\n+            "Phrases to Avoid",\n+            "Redundant Expression",\n+        ],\n         missing_value=[],\n-        required=False)\n+        required=False,\n+    )\n \n     libraries_atd_service_url = schema.TextLine(\n-        title=_(\'AtD service URL\'),\n+        title=_("AtD service URL"),\n         description=_(\n-            \'help_atd_service_url\',\n+            "help_atd_service_url",\n             default=\'The URL of the "After the Deadline" grammar and spell \'\n-                    \'checking server. \'\n-                    \'The default value is the public server, \'\n-                    \'but ideally you should download and install your own \'\n-                    \'and specify its address here.\'),\n+            "checking server. "\n+            "The default value is the public server, "\n+            "but ideally you should download and install your own "\n+            "and specify its address here.",\n+        ),\n         required=True,\n-        default=\'service.afterthedeadline.com\',)\n+        default="service.afterthedeadline.com",\n+    )\n \n \n class ITinyMCEResourceTypesSchema(Interface):\n@@ -650,52 +752,60 @@ class ITinyMCEResourceTypesSchema(Interface):\n     #    required=False)\n \n     contains_objects = schema.List(\n-        title=_(\'Contains objects\'),\n-        description=_(\'Enter a list of content types which can contain other \'\n-                      \'objects. Format is one contenttype per line.\'),\n+        title=_("Contains objects"),\n+        description=_(\n+            "Enter a list of content types which can contain other "\n+            "objects. Format is one contenttype per line."\n+        ),\n         value_type=schema.TextLine(),\n-        default=[\n-            \'Folder\',\n-            \'Large Plone Folder\',\n-            \'Plone Site\'],\n+        default=["Folder", "Large Plone Folder", "Plone Site"],\n         missing_value=[],\n-        required=False)\n+        required=False,\n+    )\n \n     image_objects = schema.List(\n-        title=_(\'Image objects\'),\n-        description=_(\'Enter a list of content types which can be used as \'\n-                      \'images. Format is one contenttype per line.\'),\n-        default=[\'Image\'],\n+        title=_("Image objects"),\n+        description=_(\n+            "Enter a list of content types which can be used as "\n+            "images. Format is one contenttype per line."\n+        ),\n+        default=["Image"],\n         value_type=schema.TextLine(),\n         missing_value=[],\n-        required=False)\n+        required=False,\n+    )\n \n     entity_encoding = schema.Choice(\n-        title=_(\'Entity encoding\'),\n-        description=_(\n-            \'This option controls how entities/characters get processed. \'\n-            \'Named: Characters will be converted into named entities \'\n-            \'based on the entities option. \'\n-            \'Numeric: Characters will be converted into numeric entities. \'\n-            \'Raw: All characters will be stored in non-entity form \'\n-            \'except these XML default entities: amp lt gt quot\'),\n-        missing_value=set(),\n+        title=_("Entity encoding"),\n+        description=_(\n+            "This option controls how entities/characters get processed. "\n+            "Named: Characters will be converted into named entities "\n+            "based on the entities option. "\n+            "Numeric: Characters will be converted into numeric entities. "\n+            "Raw: All characters will be stored in non-entity form "\n+            "except these XML default entities: amp lt gt quot"\n+        ),\n+        # missing_value=set(),\n         vocabulary=SimpleVocabulary(\n-            [SimpleTerm(\'named\', \'named\', _(\'Named\')),\n-             SimpleTerm(\'numeric\', \'numeric\', _(\'Numeric\')),\n-             SimpleTerm(\'raw\', \'raw\', _(\'Raw\'))]),\n+            [\n+                SimpleTerm("named", "named", _("Named")),\n+                SimpleTerm("numeric", "numeric", _("Numeric")),\n+                SimpleTerm("raw", "raw", _("Raw")),\n+            ]\n+        ),\n         default="raw",\n-        required=False)\n+        required=False,\n+    )\n \n \n class ITinyMCEAdvancedSchema(Interface):\n     """This interface defines the resource types properties."""\n \n     other_settings = schema.Text(\n-        title=_(\'label_tinymce_other_settings\', \'Other settings\'),\n+        title=_("label_tinymce_other_settings", "Other settings"),\n         description=_(\n-            \'hint_tinymce_other_settings\',\n-            default=\'Other TinyMCE configuration formatted as JSON.\'\n+            "hint_tinymce_other_settings",\n+            default="Other TinyMCE configuration formatted as JSON.",\n         ),\n         required=False,\n         constraint=validate_json,\n@@ -708,7 +818,7 @@ class ITinyMCESchema(\n     ITinyMCEPluginSchema,\n     ITinyMCESpellCheckerSchema,\n     ITinyMCEResourceTypesSchema,\n-    ITinyMCEAdvancedSchema\n+    ITinyMCEAdvancedSchema,\n ):\n     """TinyMCE Schema"""\n \n@@ -716,151 +826,142 @@ class ITinyMCESchema(\n class IMaintenanceSchema(Interface):\n \n     days = schema.Int(\n-        title=_(\'Days of object history to keep after packing\'),\n+        title=_("Days of object history to keep after packing"),\n         description=_(\n-            \'You should pack your database regularly. This number \'\n-            \'indicates how many days of undo history you want to \'\n-            \'keep. It is unrelated to versioning, so even if you \'\n-            \'pack the database, the history of the content changes \'\n-            \'will be kept. Recommended value is 7 days.\'\n+            "You should pack your database regularly. This number "\n+            "indicates how many days of undo history you want to "\n+            "keep. It is unrelated to versioning, so even if you "\n+            "pack the database, the history of the content changes "\n+            "will be kept. Recommended value is 7 days."\n         ),\n         default=7,\n         min=0,\n-        required=True\n+        required=True,\n     )\n \n \n class INavigationSchema(Interface):\n \n     navigation_depth = schema.Int(\n-        title=_(\'Navigation depth\'),\n-        description=_(\'Number of folder levels to show in the navigation.\'),\n+        title=_("Navigation depth"),\n+        description=_("Number of folder levels to show in the navigation."),\n         default=3,\n-        required=True\n+        required=True,\n     )\n \n     generate_tabs = schema.Bool(\n-        title=_(\'Automatically generate tabs\'),\n+        title=_("Automatically generate tabs"),\n         description=_(\n-            \'By default, all items created at the root level will \'\n-            \'appear as tabs. You can turn this off if you prefer manually \'\n-            \'constructing this part of the navigation.\'),\n+            "By default, all items created at the root level will "\n+            "appear as tabs. You can turn this off if you prefer manually "\n+            "constructing this part of the navigation."\n+        ),\n         default=True,\n-        required=False)\n+        required=False,\n+    )\n \n     nonfolderish_tabs = schema.Bool(\n-        title=_(\'Generate tabs for items other than folders.\'),\n+        title=_("Generate tabs for items other than folders."),\n         description=_(\n-            \'By default, any content item in the root of the portal will \'\n-            \'appear as a tab. If you turn this option off, only folders \'\n-            \'will be shown. This only has an effect if \\\'automatically \'\n-            \'generate tabs\\\' is enabled.\'),\n+            "By default, any content item in the root of the portal will "\n+            "appear as a tab. If you turn this option off, only folders "\n+            "will be shown. This only has an effect if \'automatically "\n+            "generate tabs\' is enabled."\n+        ),\n         default=True,\n-        required=False)\n+        required=False,\n+    )\n \n     sort_tabs_on = schema.Choice(\n-        title=_(\'Sort tabs on\'),\n-        description=_(\n-            \'Index used to sort the tabs\'\n-        ),\n+        title=_("Sort tabs on"),\n+        description=_("Index used to sort the tabs"),\n         required=True,\n-        default=\'getObjPositionInParent\',\n-        vocabulary=SimpleVocabulary([\n-            # there is no vocabulary of sortable indexes by now, so hard code\n-            # some options here\n-            SimpleTerm(\n-                \'getObjPositionInParent\',\n-                \'getObjPositionInParent\',\n-                _(\'Position in Parent\')\n-            ),\n-            SimpleTerm(\n-                \'sortable_title\',\n-                \'sortable_title\',\n-                _(\'Title\')\n-            ),\n-            SimpleTerm(\n-                \'getId\',\n-                \'getId\',\n-                _(\'Short Name (ID)\')\n-            ),\n-        ]),\n+        default="getObjPositionInParent",\n+        vocabulary=SimpleVocabulary(\n+            [\n+                # there is no vocabulary of sortable indexes by now, so hard code\n+                # some options here\n+                SimpleTerm(\n+                    "getObjPositionInParent",\n+                    "getObjPositionInParent",\n+                    _("Position in Parent"),\n+                ),\n+                SimpleTerm("sortable_title", "sortable_title", _("Title")),\n+                SimpleTerm("getId", "getId", _("Short Name (ID)")),\n+            ]\n+        ),\n     )\n     sort_tabs_reversed = schema.Bool(\n-        title=_(\'Reversed sort order for tabs.\'),\n-        description=_(\n-            \'Sort tabs in descending.\'),\n+        title=_("Reversed sort order for tabs."),\n+        description=_("Sort tabs in descending."),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     displayed_types = schema.Tuple(\n-        title=_(\'Displayed content types\'),\n+        title=_("Displayed content types"),\n         description=_(\n-            \'The content types that should be shown in the navigation and \'\n-            \'site map.\'),\n-        required=False,\n-        default=(\n-            \'Image\',\n-            \'File\',\n-            \'Link\',\n-            \'News Item\',\n-            \'Folder\',\n-            \'Document\',\n-            \'Event\'\n+            "The content types that should be shown in the navigation and " "site map."\n         ),\n+        required=False,\n+        default=("Image", "File", "Link", "News Item", "Folder", "Document", "Event"),\n         missing_value=(),\n         value_type=schema.Choice(\n-            source=\'plone.app.vocabularies.ReallyUserFriendlyTypes\'\n-        ))\n+            source="plone.app.vocabularies.ReallyUserFriendlyTypes"\n+        ),\n+    )\n \n     filter_on_workflow = schema.Bool(\n-        title=_(\'Filter on workflow state\'),\n+        title=_("Filter on workflow state"),\n         description=_(\n-            \'The workflow states that should be shown in the navigation \'\n-            \'and the site map.\'),\n+            "The workflow states that should be shown in the navigation "\n+            "and the site map."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     workflow_states_to_show = schema.Tuple(\n         required=False,\n         default=(),\n         missing_value=(),\n-        value_type=schema.Choice(\n-            source=\'plone.app.vocabularies.WorkflowStates\'))\n+        value_type=schema.Choice(source="plone.app.vocabularies.WorkflowStates"),\n+    )\n \n     show_excluded_items = schema.Bool(\n         title=_(\n-            \'Show items normally excluded from navigation if viewing their \'\n-            \'children.\'),\n+            "Show items normally excluded from navigation if viewing their " "children."\n+        ),\n         description=_(\n-            \'If an item has been excluded from navigation should it be \'\n-            \'shown in navigation when viewing content contained within it \'\n-            \'or within a subfolder.\'),\n-        default=True,\n-        required=False)\n+            "If an item has been excluded from navigation should it be "\n+            "shown in navigation when viewing content contained within it "\n+            "or within a subfolder."\n+        ),\n+        default=False,\n+        required=False,\n+    )\n \n     root = schema.TextLine(\n-        title=_(\n-            \'Root\'),\n+        title=_("Root"),\n         description=_(\n-            \'Path to be used as navigation root, relative to Plone site root.\'\n-            \'Starts with \\\'/\\\'\'\n+            "Path to be used as navigation root, relative to Plone site root."\n+            "Starts with \'/\'"\n         ),\n-        default=\'/\',\n-        required=True\n+        default="/",\n+        required=True,\n     )\n \n     sitemap_depth = schema.Int(\n-        title=_(\'Sitemap depth\'),\n-        description=_(\'Number of folder levels to show in the site map.\'),\n+        title=_("Sitemap depth"),\n+        description=_("Number of folder levels to show in the site map."),\n         default=3,\n-        required=True\n+        required=True,\n     )\n \n     parent_types_not_to_query = schema.List(\n-        title=_(\'Hide children of these types\'),\n-        description=_(\n-            \'Hide content inside the following types in Navigation.\'),\n-        default=[\'TempFolder\'],\n+        title=_("Hide children of these types"),\n+        description=_("Hide content inside the following types in Navigation."),\n+        default=["TempFolder"],\n         value_type=schema.TextLine(),\n         missing_value=(),\n         required=False,\n@@ -870,482 +971,552 @@ class INavigationSchema(Interface):\n class ISearchSchema(Interface):\n \n     enable_livesearch = schema.Bool(\n-        title=_(\'Enable LiveSearch\'),\n+        title=_("Enable LiveSearch"),\n         description=_(\n-            \'Enables the LiveSearch feature, which shows live \'\n-            \'results if the browser supports JavaScript.\'),\n+            "Enables the LiveSearch feature, which shows live "\n+            "results if the browser supports JavaScript."\n+        ),\n         default=True,\n-        required=False\n+        required=False,\n     )\n \n     types_not_searched = schema.Tuple(\n-        title=_(\'Define the types to be shown in the site and searched\'),\n+        title=_("Define the types to be shown in the site and searched"),\n         description=_(\n-            \'Define the types that should be searched and be \'\n-            \'available in the user facing part of the site. \'\n-            \'Note that if new content types are installed, they \'\n-            \'will be enabled by default unless explicitly turned \'\n-            \'off here or by the relevant installer.\'\n+            "Define the types that should be searched and be "\n+            "available in the user facing part of the site. "\n+            "Note that if new content types are installed, they "\n+            "will be enabled by default unless explicitly turned "\n+            "off here or by the relevant installer."\n         ),\n         required=False,\n         default=(\n-            \'Discussion Item\',\n-            \'Plone Site\',\n-            \'TempFolder\',\n+            "Discussion Item",\n+            "Plone Site",\n+            "TempFolder",\n         ),\n         missing_value=(),\n-        value_type=schema.Choice(\n-            source=\'plone.app.vocabularies.PortalTypes\'\n-        ),\n+        value_type=schema.Choice(source="plone.app.vocabularies.PortalTypes"),\n     )\n \n     search_results_description_length = schema.Int(\n-        title=_(\'Crop the item description in search result listings \'\n-                \'after a number of characters.\'),\n+        title=_(\n+            "Crop the item description in search result listings "\n+            "after a number of characters."\n+        ),\n         required=False,\n         default=160,\n     )\n \n     sort_on = schema.Choice(\n-        title=_(\'label_sort_on\', default=\'Sort on\'),\n-        description=_(\'Sort the default search on this index\'),\n-        vocabulary=SimpleVocabulary([\n-            SimpleTerm(\'relevance\', \'relevance\', _(\'relevance\')),\n-            SimpleTerm(\'Date\', \'Date\', _(\'date (newest first)\')),\n-            SimpleTerm(\'sortable_title\', \'sortable_title\',\n-                       _(\'alphabetically\'))]),\n-        default=\'relevance\',\n-        required=True\n+        title=_("label_sort_on", default="Sort on"),\n+        description=_("Sort the default search on this index"),\n+        vocabulary=SimpleVocabulary(\n+            [\n+                SimpleTerm("relevance", "relevance", _("relevance")),\n+                SimpleTerm("Date", "Date", _("date (newest first)")),\n+                SimpleTerm("sortable_title", "sortable_title", _("alphabetically")),\n+            ]\n+        ),\n+        default="relevance",\n+        required=True,\n     )\n \n \n class ISecuritySchema(Interface):\n \n     enable_self_reg = schema.Bool(\n-        title=_(\'Enable self-registration\'),\n+        title=_("Enable self-registration"),\n         description=_(\n-            \'Allows users to register themselves on the site. If \'\n-            \'not selected, only site managers can add new users.\'),\n+            "Allows users to register themselves on the site. If "\n+            "not selected, only site managers can add new users."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     enable_user_pwd_choice = schema.Bool(\n-        title=_(\'Let users select their own passwords\'),\n+        title=_("Let users select their own passwords"),\n         description=_(\n-            \'If not selected, a URL will be generated and \'\n-            \'e-mailed. Users are instructed to follow the link to \'\n-            \'reach a page where they can change their password and \'\n-            \'complete the registration process; this also verifies \'\n-            \'that they have entered a valid email address.\'),\n+            "If not selected, a URL will be generated and "\n+            "e-mailed. Users are instructed to follow the link to "\n+            "reach a page where they can change their password and "\n+            "complete the registration process; this also verifies "\n+            "that they have entered a valid email address."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     enable_user_folders = schema.Bool(\n-        title=_(\'Enable User Folders\'),\n+        title=_("Enable User Folders"),\n         description=_(\n-            \'If selected, home folders where users can create \'\n-            \'content will be created when they log in.\'),\n+            "If selected, home folders where users can create "\n+            "content will be created when they log in."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     allow_anon_views_about = schema.Bool(\n-        title=_(\'Allow anyone to view \\\'about\\\' information\'),\n+        title=_("Allow anyone to view \'about\' information"),\n         description=_(\n-            \'If not selected only logged-in users will be able to \'\n-            \'view information about who created an item and when it \'\n-            \'was modified.\'),\n+            "If not selected only logged-in users will be able to "\n+            "view information about who created an item and when it "\n+            "was modified."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     use_email_as_login = schema.Bool(\n-        title=_(\'Use email address as login name\'),\n-        description=_(\n-            \'Allows users to login with their email address instead \'\n-            \'of specifying a separate login name. This also updates \'\n-            \'the login name of existing users, which may take a \'\n-            \'while on large sites. The login name is saved as \'\n-            \'lower case, but to be userfriendly it does not matter \'\n-            \'which case you use to login. When duplicates are found, \'\n-            \'saving this form will fail. You can use the \'\n-            \'@@migrate-to-emaillogin page to show the duplicates.\'),\n+        title=_("Use email address as login name"),\n+        description=_(\n+            "Allows users to login with their email address instead "\n+            "of specifying a separate login name. This also updates "\n+            "the login name of existing users, which may take a "\n+            "while on large sites. The login name is saved as "\n+            "lower case, but to be userfriendly it does not matter "\n+            "which case you use to login. When duplicates are found, "\n+            "saving this form will fail. You can use the "\n+            "@@migrate-to-emaillogin page to show the duplicates."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     use_uuid_as_userid = schema.Bool(\n-        title=_(\'Use UUID user ids\'),\n+        title=_("Use UUID user ids"),\n         description=_(\n-            \'Use automatically generated UUIDs as user id for new users. \'\n-            \'When not turned on, the default is to use the same as the \'\n-            \'login name, or when using the email address as login name we \'\n-            \'generate a user id based on the fullname.\'),\n+            "Use automatically generated UUIDs as user id for new users. "\n+            "When not turned on, the default is to use the same as the "\n+            "login name, or when using the email address as login name we "\n+            "generate a user id based on the fullname."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     autologin_after_password_reset = schema.Bool(\n-        title=_(\'Login user after password reset\'),\n+        title=_("Login user after password reset"),\n         description=_(\n-            \'After successful password reset the user will be logged \'\n-            \'in automatically.\'),\n+            "After successful password reset the user will be logged "\n+            "in automatically."\n+        ),\n         default=True,\n-        required=False)\n+        required=False,\n+    )\n \n \n class ISiteSchema(Interface):\n \n     site_title = schema.TextLine(\n-        title=_(\'Site title\'),\n+        title=_("Site title"),\n         description=_(\n-            \'This shows up in the title bar of \'\n-            \'browsers and in syndication feeds.\'),\n-        default=\'Plone site\')\n+            "This shows up in the title bar of " "browsers and in syndication feeds."\n+        ),\n+        default="Plone site",\n+    )\n \n     site_logo = schema.Bytes(\n-        title=_(\'Site Logo\'),\n-        description=_(\'This shows a custom logo on your site.\'),\n+        title=_("Site Logo"),\n+        description=_("This shows a custom logo on your site."),\n+        required=False,\n+    )\n+\n+    site_favicon_mimetype = schema.TextLine(\n+        title=_("MIME type of the site favicon"),\n+        description=_(\n+            "MIME type of the favicon (automatically set when a new favicon is uploaded)"\n+        ),\n+        required=False,\n+        default="image/vnd.microsoft.icon",\n+    )\n+\n+    site_favicon = schema.Bytes(\n+        title=_("Site Favicon"),\n+        description=_("This shows a custom favicon on your site."),\n         required=False,\n     )\n \n     exposeDCMetaTags = schema.Bool(\n-        title=_(\'Expose Dublin Core metadata\'),\n-        description=_(\'Exposes the Dublin Core properties as metatags.\'),\n+        title=_("Expose Dublin Core metadata"),\n+        description=_("Exposes the Dublin Core properties as metatags."),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     enable_sitemap = schema.Bool(\n-        title=_(\'Expose sitemap.xml.gz\'),\n-        description=_(\n-            \'Exposes your content as a file \'\n-            \'according to the \'\n-            \'<a href=\\\'http://sitemaps.org\\\'>sitemaps.org</a> \'\n-            \'standard. You \'\n-            \'can submit this to compliant search engines \'\n-            \'like Google, Yahoo and Microsoft. It allows \'\n-            \'these search engines to more intelligently \'\n-            \'crawl your site.\'),\n+        title=_("Expose sitemap.xml.gz"),\n+        description=_(\n+            "Exposes your content as a file "\n+            "according to the "\n+            "<a href=\'http://sitemaps.org\'>sitemaps.org</a> "\n+            "standard. You "\n+            "can submit this to compliant search engines "\n+            "like Google, Yahoo and Microsoft. It allows "\n+            "these search engines to more intelligently "\n+            "crawl your site."\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     webstats_js = schema.SourceText(\n-        title=_(\'JavaScript for web statistics support\'),\n+        title=_("JavaScript for web statistics support"),\n         description=_(\n-            \'For enabling web statistics support \'\n-            \'from external providers (e.g. Google \'\n-            \'Analytics). Paste the provided code snippet here. \'\n-            \'It will be rendered as \'\n-            \'entered near the end of the page.\'),\n-        default=\'\',\n-        required=False)\n+            "For enabling web statistics support "\n+            "from external providers (e.g. Google "\n+            "Analytics). Paste the provided code snippet here. "\n+            "It will be rendered as "\n+            "entered near the end of the page."\n+        ),\n+        default="",\n+        required=False,\n+    )\n \n     display_publication_date_in_byline = schema.Bool(\n-        title=_(\'Display publication date\'),\n-        description=_(\n-            \'Show in the byline the date a content item was published.\'),\n+        title=_("Display publication date"),\n+        description=_("Show in the byline the date a content item was published."),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     icon_visibility = schema.Choice(\n-        title=_(\'Icon visibility\'),\n-        description=_(\'Show icons in listings\'),\n-        default=\'enabled\',\n-        vocabulary=SimpleVocabulary([\n-            SimpleTerm(\'false\', \'false\', _(\'Never\')),\n-            SimpleTerm(\'enabled\', \'enabled\', _(\'Always\')),\n-            SimpleTerm(\'authenticated\', \'authenticated\',\n-                       _(\'For authenticated users only\'))]),\n-        required=True)\n+        title=_("Icon visibility"),\n+        description=_("Show icons in listings"),\n+        default="enabled",\n+        vocabulary=SimpleVocabulary(\n+            [\n+                SimpleTerm("false", "false", _("Never")),\n+                SimpleTerm("enabled", "enabled", _("Always")),\n+                SimpleTerm(\n+                    "authenticated", "authenticated", _("For authenticated users only")\n+                ),\n+            ]\n+        ),\n+        required=True,\n+    )\n \n     thumb_visibility = schema.Choice(\n-        title=_(\'Thumb visibility\'),\n-        description=_(\'Show thumbnail images in listings\'),\n-        default=\'enabled\',\n-        vocabulary=SimpleVocabulary([\n-            SimpleTerm(\'false\', \'false\', _(\'Never\')),\n-            SimpleTerm(\'enabled\', \'enabled\', _(\'Always\')),\n-            SimpleTerm(\'authenticated\', \'authenticated\',\n-                       _(\'For authenticated users only\'))]),\n-        required=True)\n+        title=_("Thumb visibility"),\n+        description=_("Show thumbnail images in listings"),\n+        default="enabled",\n+        vocabulary=SimpleVocabulary(\n+            [\n+                SimpleTerm("false", "false", _("Never")),\n+                SimpleTerm("enabled", "enabled", _("Always")),\n+                SimpleTerm(\n+                    "authenticated", "authenticated", _("For authenticated users only")\n+                ),\n+            ]\n+        ),\n+        required=True,\n+    )\n \n     no_thumbs_portlet = schema.Bool(\n-        title=_(\'No Thumbs in portlets\'),\n+        title=_("No Thumbs in portlets"),\n         description=_(\n-            \'Suppress thumbs in all portlets;\'\n-            \' this default can be overridden individually \'\n-            \'in selected portlets\'),\n+            "Suppress thumbs in all portlets;"\n+            " this default can be overridden individually "\n+            "in selected portlets"\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     no_thumbs_lists = schema.Bool(\n-        title=_(\'No thumbs in list views\'),\n-        description=_(\'Suppress thumbs in all list views; \'\n-                      \'this default can be overriden individually\'),\n+        title=_("No thumbs in list views"),\n+        description=_(\n+            "Suppress thumbs in all list views; "\n+            "this default can be overriden individually"\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     no_thumbs_summary = schema.Bool(\n-        title=_(\'No thumbs in summary views\'),\n-        description=_(\'Suppress thumbs in all summary views; \'\n-                      \'this default can be overriden individually\'),\n+        title=_("No thumbs in summary views"),\n+        description=_(\n+            "Suppress thumbs in all summary views; "\n+            "this default can be overriden individually"\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     no_thumbs_tables = schema.Bool(\n-        title=_(\'No thumbs in table views\'), description=_(\n-            \'Suppress thumbs in all tableviews and in folder contents view; \'\n-            \'this default can be overriden individually\'),\n+        title=_("No thumbs in table views"),\n+        description=_(\n+            "Suppress thumbs in all tableviews and in folder contents view; "\n+            "this default can be overriden individually"\n+        ),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     thumb_scale_portlet = schema.Choice(\n-        title=_(\'Thumb scale for portlets\'),\n-        description=_(\'This default can be overriden individually.\'),\n-        default=\'icon\',\n-        vocabulary=\'plone.app.vocabularies.ImagesScales\',\n-        required=True)\n+        title=_("Thumb scale for portlets"),\n+        description=_("This default can be overriden individually."),\n+        default="icon",\n+        vocabulary="plone.app.vocabularies.ImagesScales",\n+        required=True,\n+    )\n \n     thumb_scale_listing = schema.Choice(\n-        title=_(\'Thumb scale for listings\'),\n-        description=_(\'E.g. standard view;\'\n-                      \' This default can be overriden individually.\'),\n-        default=\'thumb\',\n-        vocabulary=\'plone.app.vocabularies.ImagesScales\',\n-        required=True)\n+        title=_("Thumb scale for listings"),\n+        description=_(\n+            "E.g. standard view;" " This default can be overriden individually."\n+        ),\n+        default="thumb",\n+        vocabulary="plone.app.vocabularies.ImagesScales",\n+        required=True,\n+    )\n \n     thumb_scale_table = schema.Choice(\n-        title=_(\'Thumb scale for tables\'),\n-        description=_(\'E.g., tabular view, folder content listing;\'\n-                      \' This default can be overriden individually.\'),\n-        default=\'tile\',\n-        vocabulary=\'plone.app.vocabularies.ImagesScales\',\n-        required=True)\n+        title=_("Thumb scale for tables"),\n+        description=_(\n+            "E.g., tabular view, folder content listing;"\n+            " This default can be overriden individually."\n+        ),\n+        default="tile",\n+        vocabulary="plone.app.vocabularies.ImagesScales",\n+        required=True,\n+    )\n \n     thumb_scale_summary = schema.Choice(\n-        title=_(\'Thumb scale for summary view\'),\n-        description=_(\'This default can be overriden individually.\'),\n-        default=\'mini\',\n-        vocabulary=\'plone.app.vocabularies.ImagesScales\',\n-        required=True)\n+        title=_("Thumb scale for summary view"),\n+        description=_("This default can be overriden individually."),\n+        default="mini",\n+        vocabulary="plone.app.vocabularies.ImagesScales",\n+        required=True,\n+    )\n \n     toolbar_position = schema.Choice(\n-        title=_(\'Toolbar position\'),\n+        title=_("Toolbar position"),\n         description=_(\n-            \'It can be on the side (vertical mode) \'\n-            \'or on the top (horizontal mode)\'),\n-        default=\'side\',\n-        vocabulary=SimpleVocabulary([\n-            SimpleTerm(\'side\', \'side\', _(\'Side\')),\n-            SimpleTerm(\'top\', \'top\', _(\'Top\'))]),\n-        required=True)\n+            "It can be on the side (vertical mode) " "or on the top (horizontal mode)"\n+        ),\n+        default="side",\n+        vocabulary=SimpleVocabulary(\n+            [SimpleTerm("side", "side", _("Side")), SimpleTerm("top", "top", _("Top"))]\n+        ),\n+        required=True,\n+    )\n \n     toolbar_logo = schema.TextLine(\n-        title=_(\'Relative URL for the toolbar logo\'),\n+        title=_("Relative URL for the toolbar logo"),\n         description=_(\n-            \'This must be a URL relative to the site root. \'\n-            \'By default it is /++plone++static/plone-toolbarlogo.svg\'),\n-        default=\'/++plone++static/plone-toolbarlogo.svg\',\n+            "This must be a URL relative to the site root. "\n+            "By default it is /++plone++static/plone-toolbarlogo.svg"\n+        ),\n+        default="/++plone++static/plone-toolbarlogo.svg",\n         required=False,\n     )\n \n     robots_txt = schema.SourceText(\n-        title=_(\'robots.txt\'),\n-        description=_(\n-            \'help_robots_txt\',\n-            default=\'robots.txt is read by search engines to \'\n-                    \'determine how to index your site. \'\n-                    \'For details see <a href=\\\'http://www.robotstxt.org\\\'>\'\n-                    \'http://www.robotstxt.org</a>. \'\n-                    \'Use \\\'{portal_url}\\\' for the site URL.\'),\n+        title=_("robots.txt"),\n+        description=_(\n+            "help_robots_txt",\n+            default="robots.txt is read by search engines to "\n+            "determine how to index your site. "\n+            "For details see <a href=\'http://www.robotstxt.org\'>"\n+            "http://www.robotstxt.org</a>. "\n+            "Use \'{portal_url}\' for the site URL.",\n+        ),\n         default=ROBOTS_TXT,\n         required=False,\n     )\n \n     default_page = schema.List(\n-        title=_(\'Default page IDs\'),\n+        title=_("Default page IDs"),\n         description=_(\n-            \'Select which IDs (short names) can act as fallback \'\n-            \'default pages for a container.\'),\n+            "Select which IDs (short names) can act as fallback "\n+            "default pages for a container."\n+        ),\n         required=False,\n-        default=[\n-            \'index_html\',\n-            \'index.html\',\n-            \'index.htm\',\n-            \'FrontPage\'],\n+        default=["index_html", "index.html", "index.htm", "FrontPage"],\n         missing_value=[],\n-        value_type=schema.TextLine())\n+        value_type=schema.TextLine(),\n+    )\n \n     roles_allowed_to_add_keywords = schema.List(\n-        title=_(\'Roles that can add keywords\'),\n+        title=_("Roles that can add keywords"),\n         description=_(\n-            \'help_allow_roles_to_add_keywords\',\n-            default=\'Only the following roles can add new keywords \'),\n+            "help_allow_roles_to_add_keywords",\n+            default="Only the following roles can add new keywords ",\n+        ),\n         required=False,\n         default=[\n-            \'Manager\',\n-            \'Site Administrator\',\n-            \'Reviewer\',\n+            "Manager",\n+            "Site Administrator",\n+            "Reviewer",\n         ],\n         missing_value=[],\n-        value_type=schema.Choice(vocabulary=\'plone.app.vocabularies.Roles\'),\n+        value_type=schema.Choice(vocabulary="plone.app.vocabularies.Roles"),\n     )\n \n \n class IDateAndTimeSchema(Interface):\n-    """Controlpanel settings for date and time related settings.\n-    """\n+    """Controlpanel settings for date and time related settings."""\n \n     portal_timezone = schema.Choice(\n-        title=_(\'Portal default timezone\'),\n+        title=_("Portal default timezone"),\n         description=_(\n-            \'help_portal_timezone\',\n-            default=\'The timezone setting of the portal. Users can set \'\n-                    \'their own timezone, if available timezones are \'\n-                    \'defined.\'),\n+            "help_portal_timezone",\n+            default="The timezone setting of the portal. Users can set "\n+            "their own timezone, if available timezones are "\n+            "defined.",\n+        ),\n         required=True,\n         default=None,\n-        vocabulary=\'plone.app.vocabularies.CommonTimezones\')\n+        vocabulary="plone.app.vocabularies.CommonTimezones",\n+    )\n \n     available_timezones = schema.List(\n-        title=_(\'Available timezones\'),\n+        title=_("Available timezones"),\n         description=_(\n-            \'help_available_timezones\',\n-            default=\'The timezones, which should be available for the \'\n-                    \'portal. Can be set for users and events\'),\n+            "help_available_timezones",\n+            default="The timezones, which should be available for the "\n+            "portal. Can be set for users and events",\n+        ),\n         required=False,\n         default=[],\n         missing_value=[],\n-        value_type=schema.Choice(\n-            vocabulary=\'plone.app.vocabularies.Timezones\'))\n+        value_type=schema.Choice(vocabulary="plone.app.vocabularies.Timezones"),\n+    )\n \n     first_weekday = schema.Choice(\n-        title=_(\'label_first_weekday\', default=\'First weekday\'),\n-        description=_(\n-            \'help_first_weekday\',\n-            default=\'First day in the week.\'),\n+        title=_("label_first_weekday", default="First weekday"),\n+        description=_("help_first_weekday", default="First day in the week."),\n         required=True,\n         default=None,\n-        vocabulary=\'plone.app.vocabularies.Weekdays\')\n+        vocabulary="plone.app.vocabularies.Weekdays",\n+    )\n \n \n class ITypesSchema(Interface):\n-    """Controlpanel settings for the types settings.\n-    """\n+    """Controlpanel settings for the types settings."""\n \n     types_use_view_action_in_listings = schema.List(\n-        title=_(\'Types which use the view action in listing views.\'),\n+        title=_("Types which use the view action in listing views."),\n         description=_(\n-            \'help_types_use_view_action_in_listings\',\n-            default=\'When clicking items in listing views, these \'\n-                    \'types will use the \\\'view\\\' action instead of using \'\n-                    \'their default view.\'),\n+            "help_types_use_view_action_in_listings",\n+            default="When clicking items in listing views, these "\n+            "types will use the \'view\' action instead of using "\n+            "their default view.",\n+        ),\n         required=False,\n-        default=[\'Image\',\n-                 \'File\'],\n+        default=["Image", "File"],\n         missing_value=[],\n         value_type=schema.TextLine(),\n     )\n \n     redirect_links = schema.Bool(\n-        title=_(\'Redirect links\'),\n+        title=_("Redirect links"),\n         description=_(\n-            \'help_redirect_links\',\n-            default=\'When clicking on a Link type, should the user be \'\n-                    \'taken to the default view or be redirected to the \'\n-                    \'Link\\\'s URL?\'),\n+            "help_redirect_links",\n+            default="When clicking on a Link type, should the user be "\n+            "taken to the default view or be redirected to the "\n+            "Link\'s URL?",\n+        ),\n         required=False,\n-        default=True\n+        default=True,\n     )\n \n     default_page_types = schema.List(\n-        title=_(\'Types that can be set as a default page\'),\n+        title=_("Types that can be set as a default page"),\n         description=_(\n-            \'The content types that should be available for selection \'\n-            \'when setting a default page.\'),\n+            "The content types that should be available for selection "\n+            "when setting a default page."\n+        ),\n         required=False,\n         missing_value=[],\n         default=[\n-            \'Document\',\n-            \'Event\',\n-            \'News Item\',\n-            \'Collection\',\n+            "Document",\n+            "Event",\n+            "News Item",\n+            "Collection",\n         ],\n-        value_type=schema.TextLine()\n+        value_type=schema.TextLine(),\n     )\n \n \n class IMailSchema(Interface):\n \n     smtp_host = schema.TextLine(\n-        title=_(\n-            \'label_smtp_server\',\n-            default=\'SMTP server\'),\n+        title=_("label_smtp_server", default="SMTP server"),\n         description=_(\n-            \'help_smtp_server\',\n-            default=\'The address of your local \'\n-                    \'SMTP (outgoing e-mail) server. Usually \'\n-                    \'\\\'localhost\\\', unless you use an \'\n-                    \'external server to send e-mail.\'),\n-        default=\'localhost\',\n-        required=True)\n+            "help_smtp_server",\n+            default="The address of your local "\n+            "SMTP (outgoing e-mail) server. Usually "\n+            "\'localhost\', unless you use an "\n+            "external server to send e-mail.",\n+        ),\n+        default="localhost",\n+        required=True,\n+    )\n \n     smtp_port = schema.Int(\n-        title=_(\'label_smtp_port\',\n-                default=\'SMTP port\'),\n+        title=_("label_smtp_port", default="SMTP port"),\n         description=_(\n-            \'help_smtp_port\',\n-            default=\'The port of your local SMTP \'\n-                    \'(outgoing e-mail) server. Usually \\\'25\\\'.\'\n+            "help_smtp_port",\n+            default="The port of your local SMTP "\n+            "(outgoing e-mail) server. Usually \'25\'.",\n         ),\n         default=25,\n-        required=True)\n+        required=True,\n+    )\n \n     smtp_userid = schema.TextLine(\n-        title=_(\n-            \'label_smtp_userid\',\n-            default=\'ESMTP username\'),\n+        title=_("label_smtp_userid", default="ESMTP username"),\n         description=_(\n-            \'help_smtp_userid\',\n-            default=\'Username for authentication \'\n-                    \'to your e-mail server. Not required \'\n-                    \'unless you are using ESMTP.\'),\n+            "help_smtp_userid",\n+            default="Username for authentication "\n+            "to your e-mail server. Not required "\n+            "unless you are using ESMTP.",\n+        ),\n         default=None,\n-        required=False)\n+        required=False,\n+    )\n \n     smtp_pass = schema.Password(\n-        title=_(\n-            \'label_smtp_pass\',\n-            default=\'ESMTP password\'),\n+        title=_("label_smtp_pass", default="ESMTP password"),\n         description=_(\n-            \'help_smtp_pass\',\n-            default=\'The password for the ESMTP \'\n-                    \'user account.\'),\n+            "help_smtp_pass", default="The password for the ESMTP " "user account."\n+        ),\n         default=None,\n-        required=False)\n+        required=False,\n+    )\n \n     email_from_name = schema.TextLine(\n-        title=_(\'Site \\\'From\\\' name\'),\n+        title=_("Site \'From\' name"),\n         description=_(\n-            \'Plone generates e-mail using \'\n-            \'this name as the e-mail \'\n-            \'sender.\'),\n+            "Plone generates e-mail using " "this name as the e-mail " "sender."\n+        ),\n         default=None,\n-        required=True)\n+        required=True,\n+    )\n \n     email_from_address = schema.ASCIILine(\n-        title=_(\'Site \\\'From\\\' address\'),\n-        description=_(\n-            \'Plone generates e-mail using \'\n-            \'this address as the e-mail \'\n-            \'return address. It is also \'\n-            \'used as the destination \'\n-            \'address for the site-wide \'\n-            \'contact form and the \\\'Send test \'\n-            \'e-mail\\\' feature.\'),\n+        title=_("Site \'From\' address"),\n+        description=_(\n+            "Plone generates e-mail using "\n+            "this address as the e-mail "\n+            "return address. It is also "\n+            "used as the destination "\n+            "address for the site-wide "\n+            "contact form and the \'Send test "\n+            "e-mail\' feature."\n+        ),\n         default=None,\n-        required=True)\n+        required=True,\n+    )\n \n     email_charset = schema.ASCIILine(\n-        title=_(\'E-mail characterset\'),\n-        description=_(\'Characterset to use when sending e-mails.\'),\n-        default=\'utf-8\',\n+        title=_("E-mail characterset"),\n+        description=_("Characterset to use when sending e-mails."),\n+        default="utf-8",\n         required=True,\n     )\n \n@@ -1353,260 +1524,272 @@ class IMailSchema(Interface):\n class IMarkupSchema(Interface):\n \n     default_type = schema.Choice(\n-        title=_(\'Default format\'),\n+        title=_("Default format"),\n         description=_(\n-            \'Select the default format of textfields for newly \'\n-            \'created content objects.\'\n+            "Select the default format of textfields for newly "\n+            "created content objects."\n         ),\n-        default=\'text/html\',\n-        vocabulary=\'plone.app.vocabularies.AllowableContentTypes\',\n-        required=True\n+        default="text/html",\n+        vocabulary="plone.app.vocabularies.AllowableContentTypes",\n+        required=True,\n     )\n \n     allowed_types = schema.Tuple(\n-        title=_(\'Alternative formats\'),\n+        title=_("Alternative formats"),\n         description=_(\n-            \'Select which formats are available for users as \'\n-            \'alternative to the default format. Note that if new \'\n-            \'formats are installed, they will be enabled for text \'\n-            \'fields by default unless explicitly turned off here \'\n-            \'or by the relevant installer.\'\n+            "Select which formats are available for users as "\n+            "alternative to the default format. Note that if new "\n+            "formats are installed, they will be enabled for text "\n+            "fields by default unless explicitly turned off here "\n+            "or by the relevant installer."\n         ),\n         required=True,\n-        default=(\'text/html\', \'text/x-web-textile\'),\n+        default=("text/html", "text/x-web-textile"),\n         missing_value=(),\n         value_type=schema.Choice(\n-            vocabulary=\'plone.app.vocabularies.AllowableContentTypes\'\n-        )\n+            vocabulary="plone.app.vocabularies.AllowableContentTypes"\n+        ),\n     )\n \n     markdown_extensions = schema.List(\n         default=[\n-            \'markdown.extensions.fenced_code\',\n-            \'markdown.extensions.nl2br\',\n+            "markdown.extensions.fenced_code",\n+            "markdown.extensions.nl2br",\n         ],\n         description=_(\n-            \'Look for available extensions at \'\n-            \'https://python-markdown.github.io/extensions/ or write your own.\'\n+            "Look for available extensions at "\n+            "https://python-markdown.github.io/extensions/ or write your own."\n         ),\n         missing_value=(),\n         required=False,\n-        title=_(\'Enabled markdown extensions\'),\n-        value_type=schema.TextLine()\n+        title=_("Enabled markdown extensions"),\n+        value_type=schema.TextLine(),\n     )\n \n \n class IUserGroupsSettingsSchema(Interface):\n \n     many_groups = schema.Bool(\n-        title=_(\'Many groups?\'),\n-        description=_(\n-            \'Determines if your Plone is optimized \'\n-            \'for small or large sites. In environments with a \'\n-            \'lot of groups it can be very slow or impossible \'\n-            \'to build a list all groups. This option tunes the \'\n-            \'user interface and behaviour of Plone for this \'\n-            \'case by allowing you to search for groups instead \'\n-            \'of listing all of them.\'),\n+        title=_("Many groups?"),\n+        description=_(\n+            "Determines if your Plone is optimized "\n+            "for small or large sites. In environments with a "\n+            "lot of groups it can be very slow or impossible "\n+            "to build a list all groups. This option tunes the "\n+            "user interface and behaviour of Plone for this "\n+            "case by allowing you to search for groups instead "\n+            "of listing all of them."\n+        ),\n         default=False,\n         required=False,\n     )\n \n     many_users = schema.Bool(\n-        title=_(\'Many users?\'),\n-        description=_(\n-            \'Determines if your Plone is optimized \'\n-            \'for small or large sites. In environments with a \'\n-            \'lot of users it can be very slow or impossible to \'\n-            \'build a list all users. This option tunes the user \'\n-            \'interface and behaviour of Plone for this case by \'\n-            \'allowing you to search for users instead of \'\n-            \'listing all of them.\'),\n+        title=_("Many users?"),\n+        description=_(\n+            "Determines if your Plone is optimized "\n+            "for small or large sites. In environments with a "\n+            "lot of users it can be very slow or impossible to "\n+            "build a list all users. This option tunes the user "\n+            "interface and behaviour of Plone for this case by "\n+            "allowing you to search for users instead of "\n+            "listing all of them."\n+        ),\n         default=False,\n         required=False,\n     )\n \n \n def validate_twitter_username(value):\n-    if value and value.startswith(\'@\'):\n-        raise Invalid(\n-            \'Twitter username should not include the "@" prefix character.\')\n+    if value and value.startswith("@"):\n+        raise Invalid(\'Twitter username should not include the "@" prefix character.\')\n     return True\n \n \n class ISocialMediaSchema(Interface):\n \n     share_social_data = schema.Bool(\n-        title=_(\'Share social data\'),\n-        description=_(\'Include meta tags on pages to give hints to \'\n-                      \'social media on how to better render your pages \'\n-                      \'when shared\'),\n-        default=True)\n+        title=_("Share social data"),\n+        description=_(\n+            "Include meta tags on pages to give hints to "\n+            "social media on how to better render your pages "\n+            "when shared"\n+        ),\n+        default=True,\n+        required=False,\n+    )\n \n     twitter_username = schema.ASCIILine(\n-        title=_(\'Twitter username\'),\n+        title=_("Twitter username"),\n         description=_(\n-            \'To identify things like Twitter Cards. \'\n+            "To identify things like Twitter Cards. "\n             \'Do not include the "@" prefix character.\'\n         ),\n         required=False,\n-        default=\'\',\n+        default="",\n         constraint=validate_twitter_username,\n     )\n \n     facebook_app_id = schema.ASCIILine(\n-        title=_(\'Facebook App ID\'),\n-        description=_(\n-            \'To be used with some integrations like Open Graph data\'),\n+        title=_("Facebook App ID"),\n+        description=_("To be used with some integrations like Open Graph data"),\n         required=False,\n-        default=\'\')\n+        default="",\n+    )\n \n     facebook_username = schema.ASCIILine(\n-        title=_(\'Facebook username\'),\n-        description=_(\'For linking Open Graph data to a Facebook account\'),\n+        title=_("Facebook username"),\n+        description=_("For linking Open Graph data to a Facebook account"),\n         required=False,\n-        default=\'\')\n+        default="",\n+    )\n \n \n class IImagingSchema(Interface):\n     allowed_sizes = schema.List(\n-        title=_(\'Allowed image sizes\'),\n+        title=_("Allowed image sizes"),\n         description=_(\n-            \'Specify all allowed maximum image dimensions, one per line. The \'\n-            \'required format is &lt;name&gt; &lt;width&gt;:&lt;height&gt;.\'\n+            "Specify all allowed maximum image dimensions, one per line. The "\n+            "required format is &lt;name&gt; &lt;width&gt;:&lt;height&gt;."\n         ),\n         value_type=schema.TextLine(),\n         default=[\n-            \'large 768:768\',\n-            \'preview 400:400\',\n-            \'mini 200:200\',\n-            \'thumb 128:128\',\n-            \'tile 64:64\',\n-            \'icon 32:32\',\n-            \'listing 16:16\'],\n+            "huge 1600:65536",\n+            "great 1200:65536",\n+            "larger 1000:65536",\n+            "large 800:65536",\n+            "teaser 600:65536",\n+            "preview 400:65536",\n+            "mini 200:65536",\n+            "thumb 128:128",\n+            "tile 64:64",\n+            "icon 32:32",\n+            "listing 16:16"\n+        ],\n         missing_value=[],\n         required=False,\n     )\n \n     quality = schema.Int(\n-        title=_(\'Scaled image quality\'),\n-        description=_(\'A value for the quality of scaled images, from 1 \'\n-                      \'(lowest) to 95 (highest). A value of 0 will mean \'\n-                      \'plone.scaling\\\'s default will be used, which is \'\n-                      \'currently 88.\'),\n+        title=_("Scaled image quality"),\n+        description=_(\n+            "A value for the quality of scaled images, from 1 "\n+            "(lowest) to 95 (highest). A value of 0 will mean "\n+            "plone.scaling\'s default will be used, which is "\n+            "currently 88."\n+        ),\n         min=0,\n         max=95,\n-        default=88\n+        default=88,\n     )\n \n     highpixeldensity_scales = schema.Choice(\n-        title=_(\'High pixel density mode\'),\n-        description=_(\'\'),\n-        default=\'disabled\',\n-        vocabulary=SimpleVocabulary([\n-            SimpleTerm(\'disabled\', \'disabled\', \'Disabled\'),\n-            SimpleTerm(\'2x\', \'2x\', \'Enabled (2x)\'),\n-            SimpleTerm(\'3x\', \'3x\', \'Enabled (2x, 3x)\')\n-        ]),\n+        title=_("High pixel density mode"),\n+        description=_(""),\n+        default="disabled",\n+        vocabulary=SimpleVocabulary(\n+            [\n+                SimpleTerm("disabled", "disabled", "Disabled"),\n+                SimpleTerm("2x", "2x", "Enabled (2x)"),\n+                SimpleTerm("3x", "3x", "Enabled (2x, 3x)"),\n+            ]\n+        ),\n     )\n \n     quality_2x = schema.Int(\n-        title=_(\'Image quality at 2x\'),\n-        description=_(\'A value for the quality of 2x high pixel density images, from 1 \'\n-                      \'(lowest) to 95 (highest). A value of 0 will mean \'\n-                      \'plone.scaling\\\'s default will be used, which is \'\n-                      \'currently 62.\'),\n+        title=_("Image quality at 2x"),\n+        description=_(\n+            "A value for the quality of 2x high pixel density images, from 1 "\n+            "(lowest) to 95 (highest). A value of 0 will mean "\n+            "plone.scaling\'s default will be used, which is "\n+            "currently 62."\n+        ),\n         min=0,\n         max=95,\n         default=62,\n     )\n \n     quality_3x = schema.Int(\n-        title=_(\'Image quality at 3x\'),\n-        description=_(\'A value for the quality of 3x high pixel density images, from 1 \'\n-                      \'(lowest) to 95 (highest). A value of 0 will mean \'\n-                      \'plone.scaling\\\'s default will be used, which is \'\n-                      \'currently 51.\'),\n+        title=_("Image quality at 3x"),\n+        description=_(\n+            "A value for the quality of 3x high pixel density images, from 1 "\n+            "(lowest) to 95 (highest). A value of 0 will mean "\n+            "plone.scaling\'s default will be used, which is "\n+            "currently 51."\n+        ),\n         min=0,\n         max=95,\n         default=51,\n     )\n \n     image_captioning = schema.Bool(\n-        title=_(\'image_captioning_title\', \'Enable image captioning\'),\n+        title=_("image_captioning_title", "Enable image captioning"),\n         description=_(\n-            \'image_captioning_description\',\n-            \'Enable automatic image captioning for images set in the richtext editor based on the description of images.\'\n+            "image_captioning_description",\n+            "Enable automatic image captioning for images set in the richtext editor based on the description of images.",\n         ),\n         default=True,\n-        required=False\n+        required=False,\n     )\n \n \n class ILoginSchema(Interface):\n \n     auth_cookie_length = schema.Int(\n-        title=_(\'Auth cookie length\'),\n-        default=0,\n-        required=False\n+        title=_("Auth cookie length"), default=0, required=False\n     )\n \n     verify_login_name = schema.Bool(\n-        title=_(\'Verify login name\'),\n-        default=True,\n-        required=False\n+        title=_("Verify login name"), default=True, required=False\n     )\n \n     allow_external_login_sites = schema.Tuple(\n-        title=_(\'Allow external login sites\'),\n+        title=_("Allow external login sites"),\n         default=(),\n         value_type=schema.ASCIILine(),\n-        required=False\n+        required=False,\n     )\n \n     external_login_url = schema.ASCIILine(\n-        title=_(\'External login url\'),\n-        default=None,\n-        required=False\n+        title=_("External login url"), default=None, required=False\n     )\n \n     external_logout_url = schema.ASCIILine(\n-        title=_(\'External logout url\'),\n-        default=None,\n-        required=False\n+        title=_("External logout url"), default=None, required=False\n     )\n \n     external_login_iframe = schema.Bool(\n-        title=_(\'External login iframe\'),\n-        default=False,\n-        required=False\n+        title=_("External login iframe"), default=False, required=False\n     )\n \n \n class ILinkSchema(Interface):\n \n     external_links_open_new_window = schema.Bool(\n-        title=_(\'Open external links in new a window\'),\n-        description=_(\'\'),\n+        title=_("Open external links in new a window"),\n+        description=_(""),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n     mark_special_links = schema.Bool(\n-        title=_(\'Mark special links\'),\n-        description=_(\'Marks external or special protocol links with class.\'),\n+        title=_("Mark special links"),\n+        description=_("Marks external or special protocol links with class."),\n         default=False,\n-        required=False)\n+        required=False,\n+    )\n \n \n def _check_tales_expression(value):\n     from Products.PageTemplates.Expressions import getEngine\n+\n     try:\n         getEngine().compile(value)\n     except Exception:\n         raise Invalid(\n             _(\n                 \'The expression "${value}" is invalid\',\n-                mapping={\'value\': value},\n+                mapping={"value": value},\n             )\n         )\n     return True\n@@ -1615,86 +1798,81 @@ def _check_tales_expression(value):\n class IActionSchema(Interface):\n \n     category = schema.Choice(\n-        title=_(\'Category\'),\n-        vocabulary=\'plone.app.vocabularies.PortalActionCategories\',\n-        required=True)\n+        title=_("Category"),\n+        vocabulary="plone.app.vocabularies.PortalActionCategories",\n+        required=True,\n+    )\n \n-    title = schema.TextLine(\n-        title=_(\'Title\'),\n-        required=True)\n+    title = schema.TextLine(title=_("Title"), required=True)\n \n-    description = schema.Text(\n-        title=_(\'Description\'),\n-        required=False)\n+    description = schema.Text(title=_("Description"), required=False)\n \n     i18n_domain = schema.TextLine(\n-        title=_(\'i18n_domain_heading\', default=\'I18n domain\'),\n-        default=\'plone\',\n-        required=False)\n+        title=_("i18n_domain_heading", default="I18n domain"),\n+        default="plone",\n+        required=False,\n+    )\n \n     url_expr = schema.ASCIILine(\n-        title=_(\'action_url_heading\', default=\'Action URL\'),\n+        title=_("action_url_heading", default="Action URL"),\n         description=_(\n-            \'action_url_description\',\n-            default=\'An expression producing the called URL. \'\n-            \'Example: string:${globals_view/navigationRootUrl}/page\'\n+            "action_url_description",\n+            default="An expression producing the called URL. "\n+            "Example: string:${globals_view/navigationRootUrl}/page",\n         ),\n         required=True,\n         constraint=_check_tales_expression,\n     )\n \n     available_expr = schema.ASCIILine(\n-        title=_(\'action_condition_heading\', default=\'Condition\'),\n-        description=_(\n-            \'action_condition_description\',\n-            default=\'A boolean expression\'\n-        ),\n-        required=False)\n+        title=_("action_condition_heading", default="Condition"),\n+        description=_("action_condition_description", default="A boolean expression"),\n+        required=False,\n+    )\n \n     permissions = schema.List(\n-        title=_(\'action_permissions_heading\', default=\'Permissions\'),\n+        title=_("action_permissions_heading", default="Permissions"),\n         required=True,\n-        default=[\'View\'],\n+        default=["View"],\n         missing_value=[],\n-        value_type=schema.Choice(\n-            vocabulary=\'plone.app.vocabularies.Permissions\'\n-        )\n+        value_type=schema.Choice(vocabulary="plone.app.vocabularies.Permissions"),\n     )\n \n     visible = schema.Bool(\n-        title=_(\'action_visibility_heading\', default=\'Visible?\'),\n+        title=_("action_visibility_heading", default="Visible?"),\n         default=True,\n-        required=False)\n+        required=False,\n+    )\n \n     position = schema.Int(\n-        title=_(\'action_position_heading\', default=\'Position\'),\n+        title=_("action_position_heading", default="Position"),\n         default=1,\n         min=1,\n-        required=True)\n+        required=True,\n+    )\n \n \n class INewActionSchema(Interface):\n \n     category = schema.Choice(\n-        title=_(\'Category\'),\n-        vocabulary=\'plone.app.vocabularies.PortalActionCategories\',\n-        required=True)\n+        title=_("Category"),\n+        vocabulary="plone.app.vocabularies.PortalActionCategories",\n+        required=True,\n+    )\n \n-    id = schema.ASCIILine(\n-        title=_(\'Id\'),\n-        required=True)\n+    id = schema.ASCIILine(title=_("Id"), required=True)\n \n     @invariant\n     def validate_category_id(data):\n         categoryid = data.category\n-        pa = getToolByName(getSite(), \'portal_actions\')\n+        pa = getToolByName(getSite(), "portal_actions")\n         category = pa.get(categoryid, {})\n         actionid = data.id\n         if actionid in category:\n             raise Invalid(\n                 _(\n                     \'An action with the id "${actionid}" already exists\',\n-                    mapping={\'actionid\': actionid},\n+                    mapping={"actionid": actionid},\n                 )\n             )\n         try:\n@@ -1703,19 +1881,17 @@ def validate_category_id(data):\n             raise Invalid(\n                 _(\n                     \'The id "${actionid}" is invalid\',\n-                    mapping={\'actionid\': actionid},\n+                    mapping={"actionid": actionid},\n                 )\n             )\n \n \n class IPloneControlPanelView(Interface):\n-    """A marker interface for views showing a controlpanel.\n-    """\n+    """A marker interface for views showing a controlpanel."""\n \n \n class IPloneControlPanelForm(IPloneControlPanelView):\n-    """Forms using plone.app.controlpanel\n-    """\n+    """Forms using plone.app.controlpanel"""\n \n     def _on_save():\n         """Callback mehod which can be implemented by control panels to\n@@ -1728,8 +1904,7 @@ def _on_save():\n \n \n class IConfigurationChangedEvent(Interface):\n-    """An event which is fired after a configuration setting has been changed.\n-    """\n+    """An event which is fired after a configuration setting has been changed."""\n \n     context = Attribute("The configuration context which was changed.")\n \ndiff --git a/Products/CMFPlone/interfaces/resources.py b/Products/CMFPlone/interfaces/resources.py\nindex 91a16a0d8e..e26304814d 100644\n--- a/Products/CMFPlone/interfaces/resources.py\n+++ b/Products/CMFPlone/interfaces/resources.py\n@@ -1,143 +1,153 @@\n-import zope.interface\n-import zope.component\n+from Products.CMFPlone import PloneMessageFactory as _\n from zope import schema\n from zope.schema.vocabulary import SimpleTerm\n from zope.schema.vocabulary import SimpleVocabulary\n \n-from Products.CMFPlone import PloneMessageFactory as _\n+import zope.component\n+import zope.interface\n+\n \n-OVERRIDE_RESOURCE_DIRECTORY_NAME = \'resource_overrides\'\n+OVERRIDE_RESOURCE_DIRECTORY_NAME = "resource_overrides"\n \n \n class IResourceRegistry(zope.interface.Interface):\n \n-    url = schema.ASCIILine(\n-        title=_("Resources base URL"),\n-        required=False)\n+    # DEPRECATED\n \n-    js = schema.ASCIILine(\n-        title=_("Main js file"),\n-        required=False)\n+    url = schema.ASCIILine(title=_("Resources base URL"), required=False)\n+\n+    js = schema.ASCIILine(title=_("Main js file"), required=False)\n \n     css = schema.List(\n         title=_("CSS/LESS files"),\n         value_type=schema.ASCIILine(title=_("URL")),\n         default=[],\n-        required=False)\n+        required=False,\n+    )\n \n-    init = schema.ASCIILine(\n-        title=_("Init instruction for shim"),\n-        required=False)\n+    init = schema.ASCIILine(title=_("Init instruction for shim"), required=False)\n \n     deps = schema.ASCIILine(\n         title=_("Dependencies for shim"),\n         description=_("Comma separated values of resource for shim"),\n-        required=False)\n+        required=False,\n+    )\n \n-    export = schema.ASCIILine(\n-        title=_("Export vars for shim"),\n-        required=False)\n+    export = schema.ASCIILine(title=_("Export vars for shim"), required=False)\n \n     conf = schema.Text(\n         title=_("Configuration in JSON for the widget"),\n         description=_("Should be accessible on @@getWCconfig?id=name"),\n-        required=False)\n+        required=False,\n+    )\n \n \n class IBundleRegistry(zope.interface.Interface):\n \n     jscompilation = schema.ASCIILine(\n-        title=_("URL of the last js compilation"),\n-        required=False)\n+        title=_("URL of the last js compilation"), required=False\n+    )\n \n     csscompilation = schema.ASCIILine(\n-        title=_("URL of the last css compilation"),\n-        required=False)\n-\n-    last_compilation = schema.Datetime(\n-        title=_("Last compiled date"),\n-        description=_("Date time of the last compilation of this bundle"),\n-        required=False)\n+        title=_("URL of the last css compilation"), required=False\n+    )\n \n     expression = schema.ASCIILine(\n         title=_("Expression to render"),\n         description=_(\n             "In case its a bundle we can have a condition to render it (it "\n-            "does not apply if the bundle is merged)."),\n-        required=False)\n+            "does not apply if the bundle is merged)."\n+        ),\n+        required=False,\n+    )\n \n-    conditionalcomment = schema.ASCIILine(\n-        title=_("Conditional comment"),\n+    enabled = schema.Bool(title=_("It\'s enabled?"), default=True, required=False)\n+\n+    depends = schema.ASCIILine(\n+        title=_("Depends on another bundle"),\n         description=_(\n-            "In case you want to render this resource on conditional comment "\n-            "(it does not apply if the bundle is merged)."),\n-        required=False)\n+            "In case you want to be the last: *, in case its the first should be empty"\n+        ),\n+        required=False,\n+    )\n \n-    resources = schema.List(\n-        title=_("Loaded resources"),\n+    load_async = schema.Bool(\n+        title=_("Load asynchronously"),\n         description=_(\n-            "The resources that are going to be loaded on this bundle in order"),\n-        value_type=schema.ASCIILine(title=_("Resource name")),\n-        required=False)\n+            "Load the JavaScript files asynchronously by adding an ``async`` attribute to the script tag."\n+        ),\n+        default=False,\n+        required=False,\n+    )\n \n-    enabled = schema.Bool(\n-        title=_("It\'s enabled?"),\n-        default=True,\n-        required=False)\n+    load_defer = schema.Bool(\n+        title=_("Load deferred"),\n+        description=_(\n+            "Load the JavaScript files deferred after the document has been parsed but before ``DOMContentLoaded`` by adding a ``defer`` attribute to the script tag."\n+        ),\n+        default=False,\n+        required=False,\n+    )\n \n+    # DEPRECATED IN Plone 6, for now keep for BBB\n     compile = schema.Bool(\n-        title=_("Does your bundle contains any RequireJS or LESS file?"),\n+        title=_("(DEPRECATED) Does your bundle contains any RequireJS or LESS file?"),\n         description=_(\n-            "If its true and you modify this bundle you need to build it before production"),\n+            "If its true and you modify this bundle you need to build it before production"\n+        ),\n         default=True,\n-        required=False)\n+        required=False,\n+    )\n \n-    depends = schema.ASCIILine(\n-        title=_("Depends on another bundle"),\n+    resources = schema.List(\n+        title=_("(DEPRECATED) Loaded resources"),\n         description=_(\n-            "In case you want to be the last: *, in case its the first should be empty"),\n-        required=False)\n+            "The resources that are going to be loaded on this bundle in order"\n+        ),\n+        value_type=schema.ASCIILine(title=_("Resource name")),\n+        required=False,\n+    )\n+\n+    last_compilation = schema.Datetime(\n+        title=_("(DEPRECATED) Last compiled date"),\n+        description=_("Date time of the last compilation of this bundle"),\n+        required=False,\n+    )\n \n     develop_javascript = schema.Bool(\n-        title=_(\'Develop JavaScript\'),\n-        default=False)\n+        title=_("(DEPRECATED) Develop JavaScript"), default=False\n+    )\n \n-    develop_css = schema.Bool(\n-        title=_(\'Develop CSS\'),\n-        default=False)\n+    develop_css = schema.Bool(title=_("(DEPRECATED) Develop CSS"), default=False)\n \n     stub_js_modules = schema.List(\n-        title=_(\'Stub JavaScript modules\'),\n-        description=_(\'Define list of modules that will be defined empty \'\n-                      \'on RequireJS build steps to prevent loading modules multiple times.\'),\n+        title=_("(DEPRECATED) Stub JavaScript modules"),\n+        description=_(\n+            "Define list of modules that will be defined empty "\n+            "on RequireJS build steps to prevent loading modules multiple times."\n+        ),\n         value_type=schema.ASCIILine(title=_("Resource name")),\n         required=False,\n         missing_value=[],\n-        default=[])\n+        default=[],\n+    )\n \n     merge_with = schema.Choice(\n-        title=_("Merge with"),\n+        title=_("(DEPRECATED) Merge with"),\n         description=_(\n             "In production mode, bundles are merged together to reduce the "\n             "quantity of JS and CSS resources loaded by the browser. Choose "\n             "\'default\' if this bundle must be available for all the visitors, "\n             "choose \'logged-in\' if it must be available for logged-in users "\n-            "only, or leave it empty if it must not be merged."),\n+            "only, or leave it empty if it must not be merged."\n+        ),\n         vocabulary=SimpleVocabulary(\n-            [SimpleTerm(\'\', \'\', _("")),\n-             SimpleTerm(\'default\', \'default\', \'default\'),\n-             SimpleTerm(\'logged-in\', \'logged-in\', \'logged-in\')]),\n+            [\n+                SimpleTerm("", "", _("")),\n+                SimpleTerm("default", "default", "default"),\n+                SimpleTerm("logged-in", "logged-in", "logged-in"),\n+            ]\n+        ),\n         default="",\n-        required=False)\n-\n-    load_async = schema.Bool(\n-        title=_("Load asynchronously"),\n-        description=_("Load the JavaScript files asynchronously by adding an ``async`` attribute to the script tag."),\n-        default=False,\n-        required=False)\n-\n-    load_defer = schema.Bool(\n-        title=_("Load deferred"),\n-        description=_("Load the JavaScript files deferred after the document has been parsed but before ``DOMContentLoaded`` by adding a ``defer`` attribute to the script tag."),\n-        default=False,\n-        required=False)\n+        required=False,\n+    )\ndiff --git a/Products/CMFPlone/meta.zcml b/Products/CMFPlone/meta.zcml\nindex dbc42f3571..23422680dc 100644\n--- a/Products/CMFPlone/meta.zcml\n+++ b/Products/CMFPlone/meta.zcml\n@@ -25,15 +25,14 @@\n \n     <include package="plone.app.portlets" file="meta.zcml" />\n \n-    <!-- z3c.autoinclude\'s `includePlugins` directive finds\n+    <!-- plone.autoinclude\'s `autoIncludePlugins` directive finds\n          and executes ZCML files from any installed packages\n          that provide an entry point to declare themselves a\n          plone plugin -->\n-    <include package="z3c.autoinclude" file="meta.zcml" />\n-\n-    <includePlugins\n+    <include package="plone.autoinclude" file="meta.zcml" />\n+    <autoIncludePlugins\n         zcml:condition="not-have disable-autoinclude"\n-        package="plone"\n+        target="plone"\n         file="meta.zcml"\n         />\n \ndiff --git a/Products/CMFPlone/overrides.zcml b/Products/CMFPlone/overrides.zcml\nindex b607ef576a..27f8494efe 100644\n--- a/Products/CMFPlone/overrides.zcml\n+++ b/Products/CMFPlone/overrides.zcml\n@@ -12,10 +12,10 @@\n         component="Products.CMFPlone.unicodeconflictresolver.UTF8EncodingConflictResolver"\n         />\n \n-    <!-- include plone plugins with z3c.autoinclude -->\n-    <includePluginsOverrides\n+    <!-- include plone plugins with plone.autoinclude -->\n+    <autoIncludePluginsOverrides\n         zcml:condition="not-have disable-autoinclude"\n-        package="plone"\n+        target="plone"\n         file="overrides.zcml"\n         />\n \ndiff --git a/Products/CMFPlone/patterns/tinymce.py b/Products/CMFPlone/patterns/tinymce.py\nindex 075d7a9e40..c3d206530a 100644\n--- a/Products/CMFPlone/patterns/tinymce.py\n+++ b/Products/CMFPlone/patterns/tinymce.py\n@@ -32,7 +32,7 @@ def get_theme(self):\n         return theming_policy().get_theme()\n \n     def get_content_css(self, style_css=""):\n-        files = [f"{self.nav_root_url}/++plone++static/plone-compiled.css"]\n+        files = []\n         if style_css:\n             files.extend(style_css.split(","))\n         content_css = self.settings.content_css or []\n@@ -94,9 +94,7 @@ def get_all_style_formats(self):\n \n     def get_tiny_config(self):\n         settings = self.settings\n-        importcss_file_filter = "%s/++plone++static/tinymce-styles.css" % (\n-            self.nav_root_url\n-        )\n+        importcss_file_filter = ""\n \n         theme = self.get_theme()\n         if theme and getattr(theme, "tinymce_styles_css", None):\ndiff --git a/Products/CMFPlone/profiles/default/controlpanel.xml b/Products/CMFPlone/profiles/default/controlpanel.xml\nindex 05f46d25ed..2ab92c9020 100644\n--- a/Products/CMFPlone/profiles/default/controlpanel.xml\n+++ b/Products/CMFPlone/profiles/default/controlpanel.xml\n@@ -50,20 +50,6 @@\n     i18n:attributes="title">\n   <permission>Plone Site Setup: Users and Groups</permission>\n  </configlet>\n- <configlet title="Personal Preferences" action_id="MemberPrefs" appId="Plone"\n-    category="Member" condition_expr=""\n-    icon_expr="string:person"\n-    url_expr="string:${portal_url}/@@personal-preferences" visible="True"\n-    i18n:attributes="title">\n-  <permission>Set own properties</permission>\n- </configlet>\n- <configlet title="Change Password" action_id="MemberPassword" appId="Plone"\n-    category="Member" condition_expr="python:member.canPasswordSet()"\n-    icon_expr="string:lock"\n-    url_expr="string:${portal_url}/password_form" visible="True"\n-    i18n:attributes="title">\n-  <permission>Set own password</permission>\n- </configlet>\n  <configlet title="Mail" action_id="MailHost" appId="MailHost"\n     category="plone-general" condition_expr=""\n     icon_expr="string:envelope-open"\n@@ -88,7 +74,7 @@\n  <configlet title="Errors" action_id="errorLog" appId="ErrorLog"\n     category="plone-security" condition_expr=""\n     icon_expr="string:exclamation-square"\n-    url_expr="string:${portal_url}/prefs_error_log_form" visible="True"\n+    url_expr="string:${portal_url}/@@error-log-form" visible="True"\n     i18n:attributes="title">\n   <permission>Manage portal</permission>\n  </configlet>\n@@ -100,7 +86,7 @@\n   <permission>Plone Site Setup: Types</permission>\n  </configlet>\n  <configlet title="Markup" action_id="MarkupSettings" appId="MarkupSettings"\n-    category="plone-content" condition_expr="" \n+    category="plone-content" condition_expr=""\n     icon_expr="string:code-slash"\n     url_expr="string:${portal_url}/@@markup-controlpanel" visible="True"\n     i18n:attributes="title">\ndiff --git a/Products/CMFPlone/profiles/default/metadata.xml b/Products/CMFPlone/profiles/default/metadata.xml\nindex bf392ac8e1..782b58753c 100644\n--- a/Products/CMFPlone/profiles/default/metadata.xml\n+++ b/Products/CMFPlone/profiles/default/metadata.xml\n@@ -1,4 +1,4 @@\n <?xml version="1.0"?>\n <metadata>\n-  <version>6000</version>\n+  <version>6004</version>\n </metadata>\ndiff --git a/Products/CMFPlone/profiles/default/skins.xml b/Products/CMFPlone/profiles/default/skins.xml\nindex b8be444eff..0a115c2ebc 100644\n--- a/Products/CMFPlone/profiles/default/skins.xml\n+++ b/Products/CMFPlone/profiles/default/skins.xml\n@@ -3,12 +3,8 @@\n    cookie_persistence="False" default_skin="Plone Default"\n    request_varname="plone_skin">\n  <object name="custom" meta_type="Folder"/>\n- <object name="plone_form_scripts" meta_type="Filesystem Directory View"\n-    directory="Products.CMFPlone:skins/plone_form_scripts"/>\n  <object name="plone_images" meta_type="Filesystem Directory View"\n     directory="Products.CMFPlone:skins/plone_images"/>\n- <object name="plone_prefs" meta_type="Filesystem Directory View"\n-    directory="Products.CMFPlone:skins/plone_prefs"/>\n  <object name="plone_scripts" meta_type="Filesystem Directory View"\n     directory="Products.CMFPlone:skins/plone_scripts"/>\n  <object name="plone_templates" meta_type="Filesystem Directory View"\n@@ -18,9 +14,7 @@\n  <skin-path name="Plone Default">\n   <layer name="custom"/>\n   <layer name="plone_wysiwyg"/>\n-  <layer name="plone_prefs"/>\n   <layer name="plone_templates"/>\n-  <layer name="plone_form_scripts"/>\n   <layer name="plone_scripts"/>\n   <layer name="plone_images"/>\n  </skin-path>\ndiff --git a/Products/CMFPlone/profiles/default/types.xml b/Products/CMFPlone/profiles/default/types.xml\nindex 93d91d8054..324c5fa186 100644\n--- a/Products/CMFPlone/profiles/default/types.xml\n+++ b/Products/CMFPlone/profiles/default/types.xml\n@@ -3,7 +3,6 @@\n  <property\n     name="title">Controls the available content types in your portal</property>\n  <object name="Discussion Item" meta_type="Factory-based Type Information"/>\n- <object name="Plone Site"\n-    meta_type="Factory-based Type Information with dynamic views"/>\n  <object name="TempFolder" meta_type="Factory-based Type Information"/>\n+ <object name="Plone Site" meta_type="Dexterity FTI" />\n </object>\ndiff --git a/Products/CMFPlone/profiles/default/types/Plone_Site.xml b/Products/CMFPlone/profiles/default/types/Plone_Site.xml\nindex 8cdc3035c2..b89fca2444 100644\n--- a/Products/CMFPlone/profiles/default/types/Plone_Site.xml\n+++ b/Products/CMFPlone/profiles/default/types/Plone_Site.xml\n@@ -1,34 +1,86 @@\n <?xml version="1.0"?>\n-<object name="Plone Site"\n-   meta_type="Factory-based Type Information with dynamic views"\n-   i18n:domain="plone" xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n- <property name="title" i18n:translate=""></property>\n- <property name="description"\n-      i18n:translate="">The root object in a Plone site.</property>\n- <property name="icon_expr"></property>\n- <property name="content_meta_type">Plone Site</property>\n- <property name="product">CMFPlone</property>\n- <property name="factory">manage_addSite</property>\n- <property name="immediate_view">folder_listing</property>\n- <property name="global_allow">False</property>\n- <property name="filter_content_types">False</property>\n- <property name="allowed_content_types"/>\n- <property name="allow_discussion">False</property>\n- <property name="default_view">folder_listing</property>\n- <property name="view_methods">\n-  <element value="folder_listing"/>\n-  <element value="folder_summary_view"/>\n-  <element value="folder_full_view"/>\n-  <element value="folder_tabular_view"/>\n-  <element value="atct_album_view"/>\n- </property>\n+<object\n+    i18n:domain="plone"\n+    meta_type="Dexterity FTI"\n+    name="Plone Site"\n+    xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n+\n+  <!-- Basic properties -->\n+  <property\n+      i18n:translate=""\n+      name="title">Plone Site</property>\n+  <property\n+      i18n:translate=""\n+      name="description"></property>\n+\n+  <property name="allow_discussion">False</property>\n+  <property name="factory">manage_addSite</property>\n+  <property name="icon_expr"></property>\n+  <property name="link_target"></property>\n+\n+  <!-- Hierarchy control -->\n+  <property name="allowed_content_types"/>\n+  <property name="filter_content_types">False</property>\n+  <property name="global_allow">False</property>\n+\n+  <!-- Schema, class and security -->\n+  <property name="add_permission">cmf.AddPortalContent</property>\n+  <property name="klass">Products.CMFPlone.Portal.PloneSite</property>\n+  <property name="model_file">plone.app.contenttypes.schema:folder.xml</property>\n+  <property name="model_source"></property>\n+  <property name="schema"></property>\n+\n+  <!-- Enabled behaviors -->\n+  <property name="behaviors" purge="false">\n+    <element value="plone.dublincore" />\n+    <element value="plone.richtext" />\n+    <element value="plone.relateditems" />\n+    <element value="plone.locking" />\n+    <element value="plone.allowdiscussion" />\n+    <element value="plone.excludefromnavigation" />\n+    <element value="plone.tableofcontents" />\n+  </property>\n+\n+  <!-- View information -->\n+  <property name="add_view_expr">string:${folder_url}/addPlone Site</property>\n+  <property name="default_view">listing_view</property>\n+  <property name="default_view_fallback">False</property>\n+  <property name="immediate_view">view</property>\n+  <property name="view_methods">\n+    <element value="album_view"/>\n+    <element value="event_listing"/>\n+    <element value="full_view"/>\n+    <element value="listing_view"/>\n+    <element value="summary_view"/>\n+    <element value="tabular_view"/>\n+  </property>\n+\n+  <!-- Method aliases -->\n  <alias from="(Default)" to="(dynamic view)"/>\n- <alias from="edit" to="@@site-controlpanel"/>\n+ <alias from="edit" to="@@edit"/>\n  <alias from="sharing" to="@@sharing"/>\n  <alias from="view" to="(selected layout)"/>\n- <action title="View" action_id="view" category="object" condition_expr=""\n-    url_expr="string:${object_url}" visible="True"\n+ <action\n+    title="View"\n+    action_id="view"\n+    category="object"\n+    condition_expr=""\n+    url_expr="string:${object_url}"\n+    icon_expr="string:toolbar-action/view"\n+    visible="True"\n     i18n:attributes="title">\n   <permission value="View"/>\n  </action>\n+ <action\n+    action_id="edit"\n+    category="object"\n+    condition_expr="not:object/@@plone_lock_info/is_locked_for_current_user|python:True"\n+    i18n:attributes="title"\n+    title="Edit"\n+    url_expr="string:${object_url}/edit"\n+    icon_expr="string:toolbar-action/edit"\n+    visible="True">\n+  <permission value="Modify portal content"/>\n+ </action>\n+\n </object>\ndiff --git a/Products/CMFPlone/profiles/default/viewlets.xml b/Products/CMFPlone/profiles/default/viewlets.xml\nindex 4e86ae7d91..5622b3eb67 100644\n--- a/Products/CMFPlone/profiles/default/viewlets.xml\n+++ b/Products/CMFPlone/profiles/default/viewlets.xml\n@@ -1,12 +1,13 @@\n <?xml version="1.0"?>\n <object>\n   <order manager="plone.portaltop" skinname="Plone Default">\n-    <viewlet name="plone.header" />\n+\n   </order>\n   <order manager="plone.portalheader" skinname="Plone Default">\n     <viewlet name="plone.anontools" />\n     <viewlet name="plone.membertools" />\n     <viewlet name="plone.logo" />\n+    <viewlet name="plone.favicon" />\n     <viewlet name="plone.searchbox" />\n     <viewlet name="plone.app.i18n.locales.languageselector" />\n     <viewlet name="plone.app.multilingual.languageselector" />\ndiff --git a/Products/CMFPlone/profiles/dependencies/registry.xml b/Products/CMFPlone/profiles/dependencies/registry.xml\nindex b03d081331..a2868d12c5 100644\n--- a/Products/CMFPlone/profiles/dependencies/registry.xml\n+++ b/Products/CMFPlone/profiles/dependencies/registry.xml\n@@ -18,6 +18,8 @@\n            prefix="plone" />\n   <records interface="Products.CMFPlone.interfaces.ISiteSchema"\n            prefix="plone" />\n+  <records interface="Products.CMFPlone.interfaces.ITinyMCESchema"\n+           prefix="plone" />\n   <records interface="Products.CMFPlone.interfaces.IDateAndTimeSchema"\n            prefix="plone" />\n   <records interface="Products.CMFPlone.interfaces.IMarkupSchema"\n@@ -89,85 +91,11 @@\n   <record name="plone.resources.development">\n     <field type="plone.registry.field.Bool">\n       <title>Frontend development mode</title>\n+      <required>False</required>\n     </field>\n     <value>False</value>\n   </record>\n \n-  <!-- Plone generated resources -->\n-  <record name="plone.resources.configjs">\n-    <field type="plone.registry.field.ASCII">\n-      <title>config.js</title>\n-    </field>\n-    <value>config.js</value>\n-  </record>\n-  <record name="plone.resources.less-modify">\n-    <field type="plone.registry.field.ASCII">\n-      <title>less-modify js</title>\n-    </field>\n-    <value>less-modify.js</value>\n-  </record>\n-  <record name="plone.resources.less-variables">\n-      <field type="plone.registry.field.ASCII">\n-        <title>LESS variables js definer</title>\n-      </field>\n-      <value key="js">less-variables.js</value>\n-  </record>\n-\n-  <!-- Mixins vars for less with the paths -->\n-  <record name="plone.lessvariables">\n-    <field type="plone.registry.field.Dict">\n-      <title>Less variables</title>\n-      <description>Variables that are going to be compiled on less</description>\n-      <key_type type="plone.registry.field.ASCIILine" />\n-      <value_type type="plone.registry.field.TextLine" />\n-    </field>\n-    <value>\n-      <element key="icon-font-path">\\"../fonts/\\"</element>\n-      <element key="bowerPath">\\"{site_url}/++plone++static/components/\\"</element>\n-      <element key="mockupPath">\\"{site_url}/++resource++mockup/\\"</element>\n-      <element key="mockuplessPath">\\"{site_url}/++resource++mockupless/\\"</element>\n-\n-      <element key="plone-link-color">rgba(0,123,179,1)</element>\n-      <element key="plone-gray-lighter">lighten(#000, 80%)</element>\n-      <element key="plone-gray-light">lighten(#000, 46.5%)</element>\n-\n-      <element key="plone-toolbar-bg">rgba(0,0,0,.9)</element>\n-      <element key="plone-toolbar-submenu-bg">rgba(45,45,45,.96)</element>\n-      <element key="plone-toolbar-submenu-width">180px</element>\n-      <element key="plone-toolbar-font-primary">Roboto, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif</element>\n-      <element key="plone-toolbar-font-secondary">Roboto, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif</element>\n-      <element key="plone-toolbar-separator-color">rgba(255,255,255,.17)</element>\n-      <element key="plone-toolbar-link">{plone-link-color}</element>\n-      <element key="plone-toolbar-text-color">rgba(255,255,255,1)</element>\n-      <element key="plone-toolbar-submenu-text-color">lighten(#000, 90%)</element>\n-      <element key="plone-toolbar-submenu-header-color">lighten(#000, 80%)</element>\n-      <element key="plone-toolbar-published-color">{plone-link-color}</element>\n-      <element key="plone-toolbar-draft-color">rgb(250,184,42)</element>\n-      <element key="plone-toolbar-pending-color">rgb(226,231,33)</element>\n-      <element key="plone-toolbar-private-color">rgb(196,24,60)</element>\n-      <element key="plone-toolbar-internal-color">rgb(250,184,42)</element>\n-      <element key="plone-toolbar-internally-published-color">rgb(136,61,250)</element>\n-\n-      <element key="plone-screen-xs-min">480px</element>\n-      <element key="plone-screen-sm-min">768px</element>\n-      <element key="plone-screen-md-min">992px</element>\n-      <element key="plone-screen-lg-min">1200px</element>\n-\n-      <element key="plone-left-toolbar-expanded">120px</element>\n-      <element key="plone-left-toolbar">60px</element>\n-\n-      <element key="plone-container-sm">750px</element>\n-      <element key="plone-container-md">970px</element>\n-      <element key="plone-container-lg">1170px</element>\n-\n-      <element key="plone-screen-xs-max">(@plone-screen-sm-min - 1)</element>\n-      <element key="plone-screen-sm-max">(@plone-screen-md-min - 1)</element>\n-      <element key="plone-screen-md-max">(@plone-screen-lg-min - 1)</element>\n-\n-    </value>\n-  </record>\n-\n-\n   <record name="plone.patternoptions">\n     <field type="plone.registry.field.Dict">\n       <title>Patterns configuration</title>\ndiff --git a/Products/CMFPlone/relationhelper.py b/Products/CMFPlone/relationhelper.py\nindex d0ff347abd..da92cccb97 100644\n--- a/Products/CMFPlone/relationhelper.py\n+++ b/Products/CMFPlone/relationhelper.py\n@@ -1,8 +1,6 @@\n from collections import Counter\n from collections import defaultdict\n from five.intid.intid import addIntIdSubscriber\n-from plone.app.iterate.dexterity import ITERATE_RELATION_NAME\n-from plone.app.iterate.dexterity.relation import StagingRelationValue\n from plone.app.linkintegrity.handlers import modifiedContent\n from plone.app.linkintegrity.utils import referencedRelationship\n from plone.app.relationfield.event import update_behavior_relations\n@@ -26,6 +24,18 @@\n from zope.intid.interfaces import ObjectMissingError\n \n import logging\n+import pkg_resources\n+\n+try:\n+    # "iterate" is not a dependency of CMFPlone, but a consumer of it\n+    pkg_resources.get_distribution("plone.app.iterate")\n+except pkg_resources.DistributionNotFound:\n+    HAS_ITERATE = False\n+else:\n+    HAS_ITERATE = True\n+    from plone.app.iterate.dexterity import ITERATE_RELATION_NAME\n+    from plone.app.iterate.dexterity.relation import StagingRelationValue\n+\n \n logger = logging.getLogger(__name__)\n \n@@ -176,14 +186,18 @@ def restore_relations(context=None, all_relations=None):\n             continue\n \n         from_attribute = item[\'from_attribute\']\n-        to_id = intids.getId(target_obj)\n+        try:\n+            to_id = intids.getId(target_obj)\n+        except KeyError as e:\n+            logger.warning(f\'No intid for {target_obj}\')\n+            continue\n \n         if from_attribute == referencedRelationship:\n             # Ignore linkintegrity for now. We\'ll rebuilt it at the end!\n             update_linkintegrity.add(item[\'from_uuid\'])\n             continue\n \n-        if from_attribute == ITERATE_RELATION_NAME:\n+        if HAS_ITERATE and from_attribute == ITERATE_RELATION_NAME:\n             # Iterate relations are not set as values of fields\n             relation = StagingRelationValue(to_id)\n             event._setRelation(source_obj, ITERATE_RELATION_NAME, relation)\ndiff --git a/Products/CMFPlone/resources/__init__.py b/Products/CMFPlone/resources/__init__.py\nindex f64da4a538..092fcafe89 100644\n--- a/Products/CMFPlone/resources/__init__.py\n+++ b/Products/CMFPlone/resources/__init__.py\n@@ -1,20 +1,21 @@\n+from zope.deprecation import deprecate\n+\n import os\n \n \n RESOURCE_DEVELOPMENT_MODE = os.getenv("FEDEV", "").lower() == "true"\n \n \n+@deprecate(\n+    "Adding single resources is no longer supported in Plone 6, use \'add_bundle_on_request\' instead"\n+)\n def add_resource_on_request(request, resource):\n-    """Adds the resource to the request"""\n-    if not isinstance(resource, str):\n-        raise ValueError("add_resource_on_request expects a string value for resource")\n-    request.enabled_resources = getattr(request, "enabled_resources", [])\n-    if resource not in request.enabled_resources:\n-        request.enabled_resources.append(resource)\n+    """(DEPRECATED) Adds the resource to the request."""\n+    return\n \n \n def add_bundle_on_request(request, bundle):\n-    """Adds the bundle to the request"""\n+    """Adds the bundle to the request."""\n     if not isinstance(bundle, str):\n         raise ValueError("add_bundle_on_request expects a string value for bundle")\n     request.enabled_bundles = getattr(request, "enabled_bundles", [])\n@@ -23,7 +24,7 @@ def add_bundle_on_request(request, bundle):\n \n \n def remove_bundle_on_request(request, bundle):\n-    """Removes the bundle to the request"""\n+    """Removes the bundle to the request."""\n     if not isinstance(bundle, str):\n         raise ValueError("remove_bundle_on_request expects a string value for bundle")\n     request.disabled_bundles = getattr(request, "disabled_bundles", [])\ndiff --git a/Products/CMFPlone/resources/browser/combine.py b/Products/CMFPlone/resources/browser/combine.py\nindex 607d86d603..e2be703e4b 100644\n--- a/Products/CMFPlone/resources/browser/combine.py\n+++ b/Products/CMFPlone/resources/browser/combine.py\n@@ -1,168 +1,9 @@\n-from Acquisition import aq_base\n-from datetime import datetime\n-from io import BytesIO\n-from plone.registry.interfaces import IRegistry\n-from plone.resource.file import FilesystemFile\n-from plone.resource.interfaces import IResourceDirectory\n-from Products.CMFPlone.interfaces import IBundleRegistry\n-from Products.CMFPlone.interfaces.resources import (\n-    OVERRIDE_RESOURCE_DIRECTORY_NAME,\n-)  # noqa\n-from zExceptions import NotFound\n-from zope.component import getUtility\n-from zope.component import queryUtility\n+import zope.deferredimport\n \n-import logging\n-import re\n+zope.deferredimport.initialize()\n \n-\n-PRODUCTION_RESOURCE_DIRECTORY = "production"\n-logger = logging.getLogger(__name__)\n-\n-\n-def get_production_resource_directory():\n-    persistent_directory = queryUtility(IResourceDirectory, name="persistent")\n-    if persistent_directory is None:\n-        return ""\n-    container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n-    try:\n-        production_folder = container[PRODUCTION_RESOURCE_DIRECTORY]\n-    except NotFound:\n-        return "%s/++unique++1" % PRODUCTION_RESOURCE_DIRECTORY\n-    if "timestamp.txt" not in production_folder:\n-        return "%s/++unique++1" % PRODUCTION_RESOURCE_DIRECTORY\n-    timestamp = production_folder.readFile("timestamp.txt")\n-    if isinstance(timestamp, bytes):\n-        timestamp = timestamp.decode()\n-    return "{}/++unique++{}".format(PRODUCTION_RESOURCE_DIRECTORY, timestamp)\n-\n-\n-def get_resource(context, path):\n-    if path.startswith("++plone++"):\n-        # ++plone++ resources can be customized, we return their override\n-        # value if any\n-        overrides = get_override_directory(context)\n-        filepath = path[9:]\n-        if overrides.isFile(filepath):\n-            return overrides.readFile(filepath)\n-\n-    try:\n-        resource = context.unrestrictedTraverse(path)\n-    except (NotFound, AttributeError):\n-        logger.warning(\n-            f"Could not find resource {path}. You may have to create it first."\n-        )  # noqa\n-        return\n-\n-    if isinstance(resource, FilesystemFile):\n-        (directory, sep, filename) = path.rpartition("/")\n-        return context.unrestrictedTraverse(directory).readFile(filename)\n-\n-    # calling the resource may modify the header, i.e. the content-type.\n-    # we do not want this, so keep the original header intact.\n-    response_before = context.REQUEST.response\n-    context.REQUEST.response = response_before.__class__()\n-    if hasattr(aq_base(resource), "GET"):\n-        # for FileResource\n-        result = resource.GET()\n-    else:\n-        # any BrowserView\n-        result = resource()\n-    context.REQUEST.response = response_before\n-    return result\n-\n-\n-def write_js(context, folder, meta_bundle):\n-    registry = getUtility(IRegistry)\n-    resources = []\n-\n-    # default resources\n-    if meta_bundle == "default" and registry.records.get("plone.resources/jquery.js"):\n-        resources.append(\n-            get_resource(context, registry.records["plone.resources/jquery.js"].value)\n-        )\n-        resources.append(\n-            get_resource(context, registry.records["plone.resources.requirejs"].value)\n-        )\n-        resources.append(\n-            get_resource(context, registry.records["plone.resources.configjs"].value)\n-        )\n-\n-    # bundles\n-    bundles = registry.collectionOfInterface(\n-        IBundleRegistry, prefix="plone.bundles", check=False\n-    )\n-    for bundle in bundles.values():\n-        if bundle.merge_with == meta_bundle and bundle.jscompilation:\n-            resource = get_resource(context, bundle.jscompilation)\n-            if not resource:\n-                continue\n-            resources.append(resource)\n-\n-    fi = BytesIO()\n-    for script in resources:\n-        if not isinstance(script, bytes):\n-            script = script.encode()\n-        fi.write(script + b"\\n")\n-    folder.writeFile(meta_bundle + ".js", fi)\n-    logger.info(\'Wrote combined JS bundle "%s".\' % meta_bundle)\n-\n-\n-def write_css(context, folder, meta_bundle):\n-    registry = getUtility(IRegistry)\n-    resources = []\n-\n-    bundles = registry.collectionOfInterface(\n-        IBundleRegistry, prefix="plone.bundles", check=False\n-    )\n-    for bundle in bundles.values():\n-        if bundle.merge_with == meta_bundle and bundle.csscompilation:\n-            css = get_resource(context, bundle.csscompilation)\n-            if not css:\n-                continue\n-            (path, sep, filename) = bundle.csscompilation.rpartition("/")\n-            # Process relative urls:\n-            # we prefix with current resource path any url not starting with\n-            # \'/\' or http: or data:\n-            if not isinstance(path, bytes):\n-                path = path.encode()\n-            css = re.sub(\n-                br"""(url\\([\'"]?(?![\'"]?([a-z]+:|\\/)))""", br"\\1%s/" % path, css\n-            )\n-            resources.append(css)\n-\n-    fi = BytesIO()\n-    for script in resources:\n-        if not isinstance(script, bytes):\n-            script = script.encode()\n-        fi.write(script + b"\\n")\n-    folder.writeFile(meta_bundle + ".css", fi)\n-    logger.info(\'Wrote combined CSS bundle "%s".\' % meta_bundle)\n-\n-\n-def get_override_directory(context):\n-    persistent_directory = queryUtility(IResourceDirectory, name="persistent")\n-    if persistent_directory is None:\n-        return\n-    if OVERRIDE_RESOURCE_DIRECTORY_NAME not in persistent_directory:\n-        persistent_directory.makeDirectory(OVERRIDE_RESOURCE_DIRECTORY_NAME)\n-    return persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n-\n-\n-def combine_bundles(context):\n-    container = get_override_directory(context)\n-    if PRODUCTION_RESOURCE_DIRECTORY not in container:\n-        container.makeDirectory(PRODUCTION_RESOURCE_DIRECTORY)\n-    production_folder = container[PRODUCTION_RESOURCE_DIRECTORY]\n-\n-    # store timestamp\n-    fi = BytesIO()\n-    fi.write(datetime.now().isoformat().encode())\n-    production_folder.writeFile("timestamp.txt", fi)\n-\n-    # generate new combined bundles\n-    write_js(context, production_folder, "default")\n-    write_js(context, production_folder, "logged-in")\n-    write_css(context, production_folder, "default")\n-    write_css(context, production_folder, "logged-in")\n-    logger.info("Finished bundle compilation.")\n+zope.deferredimport.deprecated(\n+    "Import from Products.CMFPlone.resources.utils instead",\n+    PRODUCTION_RESOURCE_DIRECTORY="Products.CMFPlone:resources.utils.PRODUCTION_RESOURCE_DIRECTORY",\n+    get_override_directory="Products.CMFPlone:resources.utils.get_override_directory",\n+)\ndiff --git a/Products/CMFPlone/resources/browser/configjs.py b/Products/CMFPlone/resources/browser/configjs.py\ndeleted file mode 100644\nindex 0d8e362aaf..0000000000\n--- a/Products/CMFPlone/resources/browser/configjs.py\n+++ /dev/null\n@@ -1,95 +0,0 @@\n-from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import IResourceRegistry\n-from Products.Five.browser import BrowserView\n-from zope.component import getUtility\n-\n-import json\n-import re\n-\n-\n-configjs = """requirejs.config({\n-    baseUrl: PORTAL_URL,\n-    paths: %s,\n-    shim: %s,\n-    optimize: \'uglify\',\n-    wrapShim: true\n-});"""\n-\n-\n-def _format_shims(shims):\n-    result = []\n-    for name, val in shims.items():\n-        options = []\n-        if val.get("exports"):\n-            options.append(\'exports: "%s"\' % val["exports"])\n-        if val.get("deps"):\n-            options.append("deps: " + json.dumps(val["deps"]))\n-        if val.get("init"):\n-            # function, no escaping here\n-            options.append("init: %s" % val["init"])\n-        result.append(\n-            """\n-        "{}": {{\n-            {}\n-        }}""".format(\n-                name, ",\\n            ".join(options)\n-            )\n-        )\n-    return "{" + ",".join(result) + "\\n    }"\n-\n-\n-class RequireJsView(BrowserView):\n-    """\n-    This view creates the config.js for requirejs with all the registered\n-    resources\n-\n-    It\'s used on development for the config.js and on compilation for the\n-    optimize.js\n-    """\n-\n-    @property\n-    def registry(self):\n-        return getUtility(IRegistry)\n-\n-    def registryResources(self):\n-        return self.registry.collectionOfInterface(\n-            IResourceRegistry, prefix="plone.resources", check=False\n-        )\n-\n-    def get_requirejs_config(self):\n-        """\n-        Returns the information for requirejs configuration\n-        """\n-        registry = self.registryResources()\n-        paths = {}\n-        shims = {}\n-        for name, script in registry.items():\n-            if script.js:\n-                # Main resource js file\n-                src = re.sub(r"\\.js$", "", script.js)\n-                paths[name] = src\n-                exports = script.export\n-                deps = script.deps\n-                inits = script.init\n-                if exports or deps or inits:\n-                    shims[name] = {}\n-                    if exports not in ("", None):\n-                        shims[name]["exports"] = exports\n-                    if deps not in ("", None):\n-                        shims[name]["deps"] = deps.split(",")\n-                    if inits not in ("", None):\n-                        shims[name]["init"] = inits\n-            if script.url:\n-                # Resources available under name-url name\n-                src = script.url\n-                paths[name + "-url"] = src\n-        return (paths, shims)\n-\n-\n-class ConfigJsView(RequireJsView):\n-    """ config.js for requirejs for script rendering. """\n-\n-    def __call__(self):\n-        (paths, shims) = self.get_requirejs_config()\n-        self.request.response.setHeader("Content-Type", "application/javascript")\n-        return configjs % (json.dumps(paths, indent=4), _format_shims(shims))\ndiff --git a/Products/CMFPlone/resources/browser/configure.zcml b/Products/CMFPlone/resources/browser/configure.zcml\nindex 18875cfdb1..32ca958596 100644\n--- a/Products/CMFPlone/resources/browser/configure.zcml\n+++ b/Products/CMFPlone/resources/browser/configure.zcml\n@@ -6,47 +6,22 @@\n   <browser:viewlet\n       name="plone.resourceregistries.scripts"\n       manager="plone.app.layout.viewlets.interfaces.IScripts"\n-      class="Products.CMFPlone.resources.browser.scripts.ScriptsView"\n-      template="scripts.pt"\n+      class="Products.CMFPlone.resources.browser.resource.ScriptsView"\n       permission="zope2.View"\n       />\n \n   <browser:viewlet\n       name="plone.resourceregistries.styles"\n       manager="plone.app.layout.viewlets.interfaces.IHtmlHeadLinks"\n-      class="Products.CMFPlone.resources.browser.styles.StylesView"\n-      template="styles.pt"\n+      class="Products.CMFPlone.resources.browser.resource.StylesView"\n       permission="zope2.View"\n       />\n \n-\n-  <browser:page\n-      for="*"\n-      name="config.js"\n-      class=".configjs.ConfigJsView"\n-      permission="zope.Public"\n-      />\n-\n-  <browser:page\n-      for="*"\n-      name="less-variables.js"\n-      class=".mixins.LessConfiguration"\n-      permission="zope.Public"\n-      />\n-\n-  <browser:page\n-      for="*"\n-      name="less-modify.js"\n-      class=".mixins.LessModifyConfiguration"\n-      permission="zope.Public"\n-      />\n-\n-\n-  <browser:page\n-      for="*"\n-      name="plone_less_dependency.less"\n-      class=".mixins.LessDependency"\n-      permission="zope.Public"\n+  <adapter\n+      name="webresource"\n+      for="* zope.publisher.interfaces.IRequest"\n+      provides="zope.traversing.interfaces.ITraversable"\n+      factory="plone.resource.traversal.UniqueResourceTraverser"\n       />\n \n </configure>\ndiff --git a/Products/CMFPlone/resources/browser/cook.py b/Products/CMFPlone/resources/browser/cook.py\ndeleted file mode 100644\nindex f61c8fdc16..0000000000\n--- a/Products/CMFPlone/resources/browser/cook.py\n+++ /dev/null\n@@ -1,170 +0,0 @@\n-from calmjs.parse import es5\n-from datetime import datetime\n-from io import BytesIO\n-from plone.protect.interfaces import IDisableCSRFProtection\n-from plone.registry.interfaces import IRegistry\n-from plone.resource.interfaces import IResourceDirectory\n-from plone.subrequest import subrequest\n-from Products.CMFPlone.interfaces.resources import IBundleRegistry\n-from Products.CMFPlone.interfaces.resources import IResourceRegistry\n-from Products.CMFPlone.interfaces.resources import (\n-    OVERRIDE_RESOURCE_DIRECTORY_NAME,\n-)  # noqa\n-from Products.CMFPlone.resources.browser.combine import combine_bundles\n-from scss import Compiler\n-from zExceptions import NotFound\n-from zope.component import getUtility\n-from zope.component.hooks import getSite\n-from zope.globalrequest import getRequest\n-from zope.interface import alsoProvides\n-\n-import logging\n-\n-\n-logger = logging.getLogger("Products.CMFPlone")\n-\n-REQUIREJS_RESET_PREFIX = """\n-/* reset requirejs definitions so that people who\n-   put requirejs in legacy compilation do not get errors */\n-var _old_define = define;\n-var _old_require = require;\n-define = undefined;\n-require = undefined;\n-try{\n-"""\n-REQUIREJS_RESET_POSTFIX = """\n-}catch(e){\n-    // log it\n-    if (typeof console !== "undefined"){\n-        console.log(\'Error loading javascripts!\' + e);\n-    }\n-}finally{\n-    define = _old_define;\n-    require = _old_require;\n-}\n-"""\n-\n-\n-def cookWhenChangingSettings(context, bundle=None):\n-    """When our settings are changed, re-cook the not compilable bundles"""\n-    registry = getUtility(IRegistry)\n-    resources = registry.collectionOfInterface(\n-        IResourceRegistry, prefix="plone.resources", check=False\n-    )\n-    if bundle is None:\n-        # default to cooking legacy bundle\n-        bundles = registry.collectionOfInterface(\n-            IBundleRegistry, prefix="plone.bundles", check=False\n-        )\n-        if "plone-legacy" in bundles:\n-            bundle = bundles["plone-legacy"]\n-        else:\n-            bundle = bundles.setdefault("plone-legacy")\n-            bundle.resources = []\n-\n-    if not bundle.resources:\n-        # you can have a bundle without any resources defined and it\'s just\n-        # shipped as a legacy compiled js file\n-        return\n-\n-    js_path = bundle.jscompilation\n-    css_path = bundle.csscompilation\n-\n-    if not js_path and not css_path:\n-        logger.warning(\n-            "No js_path or css_path found. We need a plone.resource "\n-            "based resource path in order to store the compiled JS and CSS."\n-        )\n-        return\n-\n-    # Let\'s join all css and js\n-    css_compiler = Compiler(output_style="compressed")\n-    cooked_css = ""\n-    cooked_js = REQUIREJS_RESET_PREFIX\n-    siteUrl = getSite().absolute_url()\n-    request = getRequest()\n-    for package in bundle.resources or []:\n-        if package not in resources:\n-            continue\n-        resource = resources[package]\n-\n-        if css_path:\n-            for css_resource in resource.css:\n-                css_url = siteUrl + "/" + css_resource\n-                response = subrequest(css_url)\n-                if response.status == 200:\n-                    logger.info("Cooking css %s", css_resource)\n-                    css = response.getBody()\n-                    if css_resource[-8:] != ".min.css":\n-                        css = css_compiler.compile_string(css)\n-                    if not isinstance(css, str):\n-                        css = css.decode("utf8")\n-                    cooked_css += "\\n/* Resource: {} */\\n{}\\n".format(css_resource, css)\n-                else:\n-                    cooked_css += "\\n/* Could not find resource: {} */\\n\\n".format(\n-                        css_resource\n-                    )\n-                    logger.warning("Could not find resource: %s", css_resource)\n-        if not resource.js or not js_path:\n-            continue\n-        js_url = siteUrl + "/" + resource.js\n-        response = subrequest(js_url)\n-        if response.status == 200:\n-            logger.info("Cooking js %s", resource.js)\n-            js = response.getBody()\n-            if not isinstance(js, str):\n-                js = js.decode("utf8")\n-            try:\n-                cooked_js += "\\n/* resource: {} */\\n{}".format(\n-                    resource.js,\n-                    js if resource.js.endswith(".min.js") else es5.minify_print(js),\n-                )\n-            except SyntaxError:\n-                cooked_js += "\\n/* Resource (error cooking): {} */\\n{}".format(\n-                    resource.js, js\n-                )\n-                logger.warning("Error cooking resource: %s", resource.js)\n-        else:\n-            logger.warning("Could not find resource: %s", resource.js)\n-            cooked_js += "\\n/* Could not find resource: {} */\\n\\n".format(js_url)\n-\n-    cooked_js += REQUIREJS_RESET_POSTFIX\n-\n-    persistent_directory = getUtility(IResourceDirectory, name="persistent")\n-    if OVERRIDE_RESOURCE_DIRECTORY_NAME not in persistent_directory:\n-        persistent_directory.makeDirectory(OVERRIDE_RESOURCE_DIRECTORY_NAME)\n-    container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n-\n-    def _write_resource(resource_path, cooked_string):\n-        if not resource_path:\n-            return\n-        if "++plone++" in resource_path:\n-            resource_path = resource_path.split("++plone++")[-1]\n-        if "/" in resource_path:\n-            resource_name, resource_filepath = resource_path.split("/", 1)\n-        else:\n-            resource_name = "legacy"\n-            resource_filepath = resource_path\n-        if resource_name not in container:\n-            container.makeDirectory(resource_name)\n-        if not isinstance(\n-            cooked_string, bytes\n-        ):  # handle Error of OFS.Image  # noqa: E501\n-            cooked_string = cooked_string.encode("ascii", errors="ignore")\n-        try:\n-            folder = container[resource_name]\n-            fi = BytesIO(cooked_string)\n-            folder.writeFile(resource_filepath, fi)\n-            logger.info("Writing cooked resource: %s", resource_path)\n-        except NotFound:\n-            logger.warning("Error writing cooked resource: %s", resource_path)\n-\n-    _write_resource(js_path, cooked_js)\n-    _write_resource(css_path, cooked_css)\n-\n-    bundle.last_compilation = datetime.now()\n-    # refresh production meta bundles\n-    combine_bundles(context)\n-\n-    # Disable CSRF protection on this request\n-    alsoProvides(request, IDisableCSRFProtection)\ndiff --git a/Products/CMFPlone/resources/browser/interfaces.py b/Products/CMFPlone/resources/browser/interfaces.py\ndeleted file mode 100644\nindex 8ebe8cc452..0000000000\n--- a/Products/CMFPlone/resources/browser/interfaces.py\n+++ /dev/null\n@@ -1,11 +0,0 @@\n-from zope.interface import Interface\n-\n-\n-class IScriptsView(Interface):\n-    def scripts():\n-        """ Returns a list of dicts with information for scripts rendering. """\n-\n-\n-class IStylesView(Interface):\n-    def styles():\n-        """ Returns a list of dicts with information for style rendering. """\ndiff --git a/Products/CMFPlone/resources/browser/mixins.py b/Products/CMFPlone/resources/browser/mixins.py\ndeleted file mode 100644\nindex 7ca42c38e1..0000000000\n--- a/Products/CMFPlone/resources/browser/mixins.py\n+++ /dev/null\n@@ -1,162 +0,0 @@\n-from AccessControl.safe_formatter import SafeFormatter\n-from plone.registry.interfaces import IRegistry\n-from urllib.parse import urlparse\n-from Products.CMFPlone.interfaces import IResourceRegistry\n-from Products.Five.browser import BrowserView\n-from zope.component import getMultiAdapter\n-from zope.component import getUtility\n-\n-\n-lessconfig = """\n- window.less = {\n-    env: "development",\n-    logLevel: %i,\n-    async: false,\n-    fileAsync: false,\n-    errorReporting: window.lessErrorReporting || \'console\',\n-    poll: 1000,\n-    functions: {},\n-    relativeUrls: true,\n-    dumpLineNumbers: "comments",\n-    globalVars: {\n-      %s\n-    },\n-    modifyVars: {\n-      %s\n-    }\n-  };\n-"""\n-\n-lessmodify = """\n-less.modifyVars({\n-    %s\n-})\n-"""\n-\n-\n-class LessConfiguration(BrowserView):\n-    """Browser view that gets the definition of less variables on plone."""\n-\n-    def registry(self):\n-        registryUtility = getUtility(IRegistry)\n-        return registryUtility.records["plone.lessvariables"].value\n-\n-    def resource_registry(self):\n-        registryUtility = getUtility(IRegistry)\n-        return registryUtility.collectionOfInterface(\n-            IResourceRegistry, prefix="plone.resources", check=False\n-        )\n-\n-    def __call__(self):\n-        registry = self.registry()\n-        portal_state = getMultiAdapter(\n-            (self.context, self.request), name="plone_portal_state"\n-        )\n-        site_url = portal_state.portal_url()\n-        result = ""\n-        result += "sitePath: \'\\"%s\\"\',\\n" % site_url\n-        result += "isPlone: true,\\n"\n-        result += "isMockup: false,\\n"\n-        result += "staticPath: \'\\"%s/++plone++static\\"\',\\n" % site_url\n-        result += "barcelonetaPath: \'\\"%s/++theme++barceloneta\\"\',\\n" % site_url\n-\n-        less_vars_params = {\n-            "site_url": site_url,\n-        }\n-\n-        # Storing variables to use them on further vars\n-        for name, value in registry.items():\n-            less_vars_params[name] = value\n-\n-        for name, value in registry.items():\n-            t = SafeFormatter(value).safe_format(**less_vars_params)\n-            result += f"\'{name}\': \\"{t}\\",\\n"\n-\n-        # Adding all plone.resource entries css values as less vars\n-        for name, value in self.resource_registry().items():\n-            for css in value.css:\n-\n-                url = urlparse(css)\n-                if url.netloc == "":\n-                    # Local\n-                    src = f"{site_url}/{css}"\n-                else:\n-                    src = "%s" % (css)\n-                # less vars can\'t have dots on it\n-                result += "\'{}\': \'\\"{}\\"\',\\n".format(name.replace(".", "_"), src)\n-\n-        self.request.response.setHeader("Content-Type", "application/javascript")\n-\n-        try:\n-            debug_level = int(self.request.get("debug", 2))\n-        except:\n-            debug_level = 2\n-        return lessconfig % (debug_level, result, result)\n-\n-\n-class LessModifyConfiguration(LessConfiguration):\n-    def __call__(self):\n-        registry = self.registry()\n-        portal_state = getMultiAdapter(\n-            (self.context, self.request), name="plone_portal_state"\n-        )\n-        site_url = portal_state.portal_url()\n-        result2 = ""\n-        result2 += "\'@sitePath\': \'\\"%s\\"\',\\n" % site_url\n-        result2 += "\'@isPlone\': true,\\n"\n-        result2 += "\'@isMockup\': false,\\n"\n-        result2 += "\'@staticPath: \'\\"%s/++plone++static\\"\',\\n" % site_url\n-        result2 += "\'@barcelonetaPath: \'\\"%s/++theme++barceloneta\\"\',\\n" % site_url\n-\n-        less_vars_params = {\n-            "site_url": site_url,\n-        }\n-\n-        # Storing variables to use them on further vars\n-        for name, value in registry.items():\n-            less_vars_params[name] = value\n-\n-        for name, value in registry.items():\n-            t = SafeFormatter(value).safe_format(**less_vars_params)\n-            result2 += f"\'@{name}\': \\"{t}\\",\\n"\n-\n-        self.request.response.setHeader("Content-Type", "application/javascript")\n-\n-        return lessmodify % (result2)\n-\n-\n-class LessDependency(BrowserView):\n-    """Browser view that returns the less/css on less format for specific\n-    resource.\n-    """\n-\n-    def registry(self):\n-        registryUtility = getUtility(IRegistry)\n-        return registryUtility.collectionOfInterface(\n-            IResourceRegistry, prefix="plone.resources", check=False\n-        )\n-\n-    def __call__(self):\n-        portal_state = getMultiAdapter(\n-            (self.context, self.request), name="plone_portal_state"\n-        )\n-        site_url = portal_state.portal_url()\n-\n-        registry = self.registry()\n-        resource = self.request.get("resource", None)\n-        result = ""\n-        if resource:\n-            if resource in registry:\n-                for css in registry[resource].css:\n-                    url = urlparse(css)\n-                    if url.netloc == "":\n-                        # Local\n-                        src = f"{site_url}/{css}"\n-                    else:\n-                        src = "%s" % (css)\n-\n-                    result += "@import url(\'%s\');\\n" % src\n-\n-        self.request.response.setHeader("Content-Type", "stylesheet/less")\n-\n-        return result\ndiff --git a/Products/CMFPlone/resources/browser/resource.py b/Products/CMFPlone/resources/browser/resource.py\nindex e32b5b2377..b345e96736 100644\n--- a/Products/CMFPlone/resources/browser/resource.py\n+++ b/Products/CMFPlone/resources/browser/resource.py\n@@ -1,109 +1,63 @@\n-from Acquisition import aq_base\n-from Acquisition import aq_inner\n-from Acquisition import aq_parent\n+from ..webresource import PloneScriptResource\n+from ..webresource import PloneStyleResource\n from App.config import getConfiguration\n from plone.app.layout.viewlets.common import ViewletBase\n+from plone.app.theming.interfaces import IThemeSettings\n from plone.app.theming.utils import theming_policy\n-from plone.memoize.view import memoize\n from plone.registry.interfaces import IRegistry\n-from Products.CMFCore.Expression import createExprContext\n-from Products.CMFCore.Expression import Expression\n-from Products.CMFCore.utils import _getAuthenticatedUser\n-from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.interfaces import IBundleRegistry\n-from Products.CMFPlone.interfaces import IResourceRegistry\n-from Products.CMFPlone.resources import RESOURCE_DEVELOPMENT_MODE\n-from Products.CMFPlone.resources.browser.combine import (\n-    get_production_resource_directory,\n-)  # noqa\n-from Products.CMFPlone.resources.bundle import Bundle\n-from Products.CMFPlone.utils import get_top_request\n-from zope import component\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n-from zope.ramcache.interfaces import ram\n+\n+import logging\n+import webresource\n+\n+logger = logging.getLogger(__name__)\n+\n+REQUEST_CACHE_KEY = "_WEBRESOURCE_CACHE_"\n+\n+GRACEFUL_DEPENDENCY_REWRITE = {\n+    "plone-base": "plone",\n+    "plone-legacy": "plone",\n+    "plone-logged-in": "plone",\n+}\n \n \n class ResourceBase:\n     """Information for script rendering.\n \n     This is a mixin base class for a browser view, a viewlet or a tile\n-    or anything similar with a context and a request set on initialization.\n+    or anything similar with a context and a request set on\n+    initialization.\n     """\n \n     @property\n-    @memoize\n-    def anonymous(self):\n-        return _getAuthenticatedUser(self.context).getUserName() == "Anonymous User"\n-\n-    @property\n-    @memoize\n-    def development(self):\n-        """\n-        To set development mode:\n-\n-        - we can define a envvar: FEDEV\n-        - otherwise if its anonymous is using production mode\n-        - finally is checked on the registry entry\n-        """\n-        if RESOURCE_DEVELOPMENT_MODE:\n-            return True\n-        if self.anonymous and not self.debug_mode:\n-            return False\n-        return self.registry.records["plone.resources.development"].value\n-\n-    @property\n-    def debug_mode(self):\n-        return getConfiguration().debug_mode\n-\n-    def develop_bundle(self, bundle, attr):\n-        return RESOURCE_DEVELOPMENT_MODE or (\n-            self.development and getattr(bundle, attr, False)\n-        )\n+    def _rendered_cache(self):\n+        if getConfiguration().debug_mode:\n+            return\n+        self.registry = getUtility(IRegistry)\n+        if not self.registry["plone.resources.development"]:\n+            return getattr(\n+                self.context, f"_v_renderend_cached_{self.__class__.__name__}", None\n+            )\n \n-    @property\n-    def last_legacy_import(self):\n-        return self.registry.records["plone.resources.last_legacy_import"].value  # noqa\n-\n-    def evaluateExpression(self, expression, context):\n-        """Evaluate an object\'s TALES condition to see if it should be\n-        displayed.\n-        """\n-        try:\n-            if expression.text and context is not None:\n-                portal = getToolByName(context, "portal_url").getPortalObject()\n-\n-                # Find folder (code courtesy of CMFCore.ActionsTool)\n-                if context is None or not hasattr(context, "aq_base"):\n-                    folder = portal\n-                else:\n-                    folder = context\n-                    # Search up the containment hierarchy until we find an\n-                    # object that claims it\'s PrincipiaFolderish.\n-                    while folder is not None:\n-                        if getattr(aq_base(folder), "isPrincipiaFolderish", 0):\n-                            # found it.\n-                            break\n-                        else:\n-                            folder = aq_parent(aq_inner(folder))\n-\n-                __traceback_info__ = (folder, portal, context, expression)\n-                ec = createExprContext(folder, portal, context)\n-                # add \'context\' as an alias for \'object\'\n-                ec.setGlobal("context", context)\n-                return expression(ec)\n-            else:\n-                return True\n-        except AttributeError:\n-            return True\n+    @_rendered_cache.setter\n+    def _rendered_cache(self, value):\n+        setattr(self.context, f"_v_renderend_cached_{self.__class__.__name__}", value)\n \n     def update(self):\n+        # cache on request\n+        cached = getattr(self.request, REQUEST_CACHE_KEY, None)\n+        if cached is not None:\n+            self.renderer = cached\n+            return\n+\n+        # prepare\n         self.portal_state = getMultiAdapter(\n             (self.context, self.request), name="plone_portal_state"\n         )\n-        self.site_url = self.portal_state.portal_url()\n-        self.registry = getUtility(IRegistry)\n-        self.production_path = get_production_resource_directory()\n+        if not getattr(self, "registry", None):\n+            self.registry = getUtility(IRegistry)\n \n         theme = None\n         policy = theming_policy(self.request)\n@@ -111,117 +65,218 @@ def update(self):\n             # Check if Diazo is enabled\n             theme = policy.get_theme() or None\n \n-        self.diazo_production_css = getattr(theme, "production_css", None)\n-        self.diazo_development_css = getattr(theme, "development_css", None)\n-        self.diazo_production_js = getattr(theme, "production_js", None)\n-        self.diazo_development_js = getattr(theme, "development_js", None)\n-        self.theme_enabled_bundles = getattr(theme, "enabled_bundles", [])\n-        self.theme_disabled_bundles = getattr(theme, "disabled_bundles", [])\n+        # we have two groups for two viewlets (historical reasons)\n+        root_group_js = webresource.ResourceGroup(name="root_js")\n+        root_group_css = webresource.ResourceGroup(name="root_css")\n \n-    def get_bundles(self):\n-        result = {}\n+        # register all bundles from registry\n+        registry_group_js = webresource.ResourceGroup(\n+            name="registry_js", group=root_group_js\n+        )\n+        registry_group_css = webresource.ResourceGroup(\n+            name="registry_css", group=root_group_css\n+        )\n         records = self.registry.collectionOfInterface(\n             IBundleRegistry, prefix="plone.bundles", check=False\n         )\n+        unique = True\n+\n+        theme_enabled_bundles = getattr(theme, "enabled_bundles", [])\n+        theme_disabled_bundles = getattr(theme, "disabled_bundles", [])\n+\n+        # include sub/parent request\n+        request = self.request\n+        request_enabled_bundles = set(getattr(request, "enabled_bundles", []))\n+        request_disabled_bundles = set(getattr(request, "disabled_bundles", []))\n+        while request.get("PARENT_REQUEST", None):\n+            request = request["PARENT_REQUEST"]\n+            request_enabled_bundles.update(getattr(request, "enabled_bundles", []))\n+            request_disabled_bundles.update(getattr(request, "disabled_bundles", []))\n+\n+        # collect names\n+        js_names = {name for name, rec in records.items() if rec.jscompilation}\n+        css_names = {name for name, rec in records.items() if rec.csscompilation}\n+        all_names = {name for name, rec in records.items() if rec.jscompilation or rec.csscompilation}\n+\n+        # register\n         for name, record in records.items():\n-            result[name] = Bundle(record)\n-        return result\n+            include = record.enabled\n+            include = include or name in theme_enabled_bundles\n+            include = include and name not in theme_disabled_bundles\n+            include = include or name in request_enabled_bundles\n+            include = include and name not in request_disabled_bundles\n \n-    def get_resources(self):\n-        return self.registry.collectionOfInterface(\n-            IResourceRegistry, prefix="plone.resources", check=False\n-        )\n+            if record.jscompilation:\n+                depends = record.depends or ""\n+                if depends and depends not in js_names:\n+                    if depends in all_names:\n+                        depends = None\n+                    else:\n+                        msg = f"Bundle \'{name}\' has a non existing dependeny on \'{record.depends}\'. "\n+                        if depends not in GRACEFUL_DEPENDENCY_REWRITE:\n+                            logger.error(\n+                                msg + "Bundle ignored (JS) - This may break your site!"\n+                            )\n+                            continue\n+                        graceful_depends = GRACEFUL_DEPENDENCY_REWRITE[depends]\n+                        logger.error(\n+                            msg\n+                            + f"Bundle dependency (JS) graceful rewritten to \'{graceful_depends}\' "\n+                            + "Fallback will be removed in Plone 7."\n+                        )\n+                        depends = graceful_depends\n+                external = record.jscompilation.startswith("http")\n+                resource = PloneScriptResource(\n+                    context=self.context,\n+                    name=name,\n+                    depends=depends,\n+                    resource=record.jscompilation if not external else None,\n+                    compressed=record.jscompilation if not external else None,\n+                    include=include,\n+                    expression=record.expression,\n+                    unique=unique,\n+                    group=registry_group_js,\n+                    url=record.jscompilation if external else None,\n+                    crossorigin="anonymous" if external else None,\n+                    async_=record.load_async or None,\n+                    defer=record.load_defer or None,\n+                    integrity=not external,\n+                )\n+            if record.csscompilation:\n+                depends = record.depends or ""\n+                if depends and depends not in css_names:\n+                    if depends in all_names:\n+                        depends = None\n+                    else:\n+                        msg = f"Bundle \'{name}\' has a non existing dependeny on \'{record.depends}\'. "\n+                        if depends not in GRACEFUL_DEPENDENCY_REWRITE:\n+                            logger.error(\n+                                msg + "Bundle ignored (CSS) - This may break your site!"\n+                            )\n+                            continue\n+                        graceful_depends = GRACEFUL_DEPENDENCY_REWRITE[depends]\n+                        logger.error(\n+                            msg\n+                            + f"Bundle dependency (CSS) graceful rewritten to \'{graceful_depends}\' "\n+                            + "Fallback will be removed in Plone 7."\n+                        )\n+                        depends = graceful_depends\n+                external = record.csscompilation.startswith("http")\n+                resource = PloneStyleResource(\n+                    context=self.context,\n+                    name=name,\n+                    depends=depends,\n+                    resource=record.csscompilation if not external else None,\n+                    compressed=record.csscompilation if not external else None,\n+                    include=include,\n+                    expression=record.expression,\n+                    unique=unique,\n+                    group=registry_group_css,\n+                    url=record.csscompilation if external else None,\n+                    media="all",\n+                    rel="stylesheet",\n+                )\n+\n+        # Collect theme data\n+        themedata = {}\n+        themedata["production_css"] = getattr(theme, "production_css", None)\n+        themedata["development_css"] = getattr(theme, "development_css", None)\n+        themedata["production_js"] = getattr(theme, "production_js", None)\n+        themedata["development_js"] = getattr(theme, "development_js", None)\n \n-    def eval_expression(self, expression, bundle_name):\n-        if not expression:\n-            return True\n-        cache = component.queryUtility(ram.IRAMCache)\n-        cooked_expression = None\n-        if cache is not None:\n-            cooked_expression = cache.query(\n-                "plone.bundles.cooked_expressions",\n-                key=dict(prefix=bundle_name),\n-                default=None,\n+        # add Theme JS\n+        if themedata["production_js"]:\n+            # we ignore development_js for external detection\n+            external = themedata["production_js"].startswith("http")\n+            PloneScriptResource(\n+                context=self.context,\n+                name="theme",\n+                depends="",\n+                resource=(\n+                    themedata["development_js"] or themedata["production_js"]\n+                    if not external\n+                    else None\n+                ),\n+                compressed=themedata["production_js"] if not external else None,\n+                include=True,\n+                unique=unique,\n+                group=root_group_js,\n+                url=themedata["production_js"] if external else None,\n+                crossorigin="anonymous" if external else None,\n+                integrity=not external,\n             )\n-        if cooked_expression is None or cooked_expression.text != expression:\n-            cooked_expression = Expression(expression)\n-            if cache is not None:\n-                cache.set(\n-                    cooked_expression,\n-                    "plone.bundles.cooked_expressions",\n-                    key=dict(prefix=bundle_name),\n-                )\n-        return self.evaluateExpression(cooked_expression, self.context)\n-\n-    def get_cooked_bundles(self):\n-        """\n-        Get the cooked bundles\n-        """\n-        request = get_top_request(self.request)  # might be a subrequest\n-\n-        # theme specific set bundles\n-        enabled_bundles = set(self.theme_enabled_bundles)\n-        disabled_bundles = set(self.theme_disabled_bundles)\n-\n-        # Request set bundles\n-        enabled_bundles.update(getattr(request, "enabled_bundles", []))\n-        disabled_bundles.update(getattr(request, "disabled_bundles", []))\n-\n-        for key, bundle in self.get_bundles().items():\n-            # The diazo manifest and request bundles are more important than\n-            # the disabled bundle on registry.\n-            # We can access the site with diazo.off=1 without diazo bundles\n-            if (\n-                key in disabled_bundles\n-                or (key not in enabled_bundles and not bundle.enabled)\n-                or not self.eval_expression(bundle.expression, bundle.name)\n-            ):\n-                continue\n-\n-            yield key, bundle\n-\n-    def ordered_bundles_result(self, production=False):\n-        """\n-        It gets the ordered result of bundles\n-        """\n-        result = []\n-        inserted = []\n-        depends_on = {}\n-        for key, bundle in self.get_cooked_bundles():\n-            if bundle.depends is None or bundle.depends == "":\n-                # its the first one\n-                if not (production and bundle.merge_with):\n-                    self.get_data(bundle, result)\n-                inserted.append(key)\n-            else:\n-                name = bundle.depends.strip()\n-                if name in depends_on:\n-                    depends_on[name].append(bundle)\n-                else:\n-                    depends_on[name] = [bundle]\n-\n-        # We need to check all dependencies\n-        while len(depends_on) > 0:\n-            found = False\n-            for key, bundles_to_add in list(depends_on.items()):\n-                if key not in inserted:\n-                    continue\n-                found = True\n-                for bundle in bundles_to_add:\n-                    if not (production and bundle.merge_with):\n-                        self.get_data(bundle, result)\n-                    inserted.append(bundle.name)\n-                del depends_on[key]\n-            if not found:\n-                break\n-\n-        # The ones that does not get the dependencies\n-        for bundles_to_add in depends_on.values():\n-            for bundle in bundles_to_add:\n-                if not (production and bundle.merge_with):\n-                    self.get_data(bundle, result)\n-        return result\n+\n+        # add Theme CSS\n+        if themedata["production_css"]:\n+            # we ignore development_css for external detection\n+            external = themedata["production_css"].startswith("http")\n+            PloneStyleResource(\n+                context=self.context,\n+                name="theme",\n+                depends="",\n+                resource=(\n+                    themedata["development_css"] or themedata["production_css"]\n+                    if not external\n+                    else None\n+                ),\n+                compressed=themedata["production_css"] if not external else None,\n+                include=True,\n+                unique=unique,\n+                group=root_group_css,\n+                url=themedata["production_css"] if external else None,\n+                media="all",\n+                rel="stylesheet",\n+            )\n+\n+        # add Custom CSS\n+        registry = getUtility(IRegistry)\n+        theme_settings = registry.forInterface(IThemeSettings, False)\n+        if theme_settings.custom_css:\n+            PloneStyleResource(\n+                context=self.context,\n+                name="custom",\n+                depends="",\n+                resource="@@custom.css",\n+                include=True,\n+                unique=unique,\n+                group=root_group_css,\n+                media="all",\n+                rel="stylesheet",\n+            )\n+\n+        self.renderer = {}\n+        setattr(self.request, REQUEST_CACHE_KEY, self.renderer)\n+        resolver_js = webresource.ResourceResolver(root_group_js)\n+        self.renderer["js"] = webresource.ResourceRenderer(\n+            resolver_js, base_url=self.portal_state.portal_url()\n+        )\n+        resolver_css = webresource.ResourceResolver(root_group_css)\n+        self.renderer["css"] = webresource.ResourceRenderer(\n+            resolver_css, base_url=self.portal_state.portal_url()\n+        )\n \n \n class ResourceView(ResourceBase, ViewletBase):\n     """Viewlet Information for script rendering."""\n+\n+\n+class ScriptsView(ResourceView):\n+    """Script Viewlet."""\n+\n+    def index(self):\n+        rendered = self._rendered_cache\n+        if not rendered:\n+            rendered = self.renderer["js"].render()\n+            self._rendered_cache = rendered\n+        return rendered\n+\n+\n+class StylesView(ResourceView):\n+    """Styles Viewlet."""\n+\n+    def index(self):\n+        rendered = self._rendered_cache\n+        if not rendered:\n+            rendered = self.renderer["css"].render()\n+            self._rendered_cache = rendered\n+        return rendered\ndiff --git a/Products/CMFPlone/resources/browser/scripts.pt b/Products/CMFPlone/resources/browser/scripts.pt\ndeleted file mode 100644\nindex d3d762fd7f..0000000000\n--- a/Products/CMFPlone/resources/browser/scripts.pt\n+++ /dev/null\n@@ -1,38 +0,0 @@\n-<script tal:content="string:PORTAL_URL = \'${view/site_url}\';"></script>\n-\n-<tal:scripts repeat="script view/scripts">\n-  <tal:block define="condcomment script/conditionalcomment; resetrjs script/resetrjs|nothing">\n-\n-    <tal:if condition="resetrjs">\n-      <tal:openreset content=\'structure string:&lt;script&gt;\'></tal:openreset>\n-\n-      <tal:comment tal:replace="nothing">\n-        Reset RequireJS definitions so that people who put RequireJS in a legacy compilation do not get errors\n-      </tal:comment>\n-\n-      var _old_define = define;\n-      var _old_require = require;\n-      define = undefined;\n-      require = undefined;\n-      <tal:endreset content=\'structure string:&lt;/script&gt;\'></tal:endreset>\n-    </tal:if>\n-\n-    <tal:if condition="condcomment">\n-      <tal:opencc tal:replace="structure string:&lt;!--[if ${condcomment}]&gt;"></tal:opencc>\n-    </tal:if>\n-\n-    <script type="text/javascript" tal:attributes="src script/src; data-bundle script/bundle; async script/async|nothing; defer script/defer|nothing"></script>\n-\n-    <tal:if condition="condcomment">\n-      <tal:closecc tal:condition="condcomment" tal:replace="structure string:&lt;![endif]--&gt;"></tal:closecc>\n-    </tal:if>\n-\n-    <tal:if condition="resetrjs">\n-      <tal:openredefine content=\'structure string:&lt;script&gt;\'></tal:openredefine>\n-      define = _old_define;\n-      require = _old_require;\n-      <tal:endredefine content=\'structure string:&lt;/script&gt;\'></tal:endredefine>\n-    </tal:if>\n-\n-  </tal:block>\n-</tal:scripts>\ndiff --git a/Products/CMFPlone/resources/browser/scripts.py b/Products/CMFPlone/resources/browser/scripts.py\ndeleted file mode 100644\nindex b2b52a0a07..0000000000\n--- a/Products/CMFPlone/resources/browser/scripts.py\n+++ /dev/null\n@@ -1,219 +0,0 @@\n-from Products.CMFPlone.resources.browser.cook import cookWhenChangingSettings\n-from Products.CMFPlone.resources.browser.resource import ResourceView\n-from Products.CMFPlone.utils import get_top_request\n-from urllib import parse\n-from zope.component import getMultiAdapter\n-\n-\n-class ScriptsView(ResourceView):\n-    """Information for script rendering."""\n-\n-    def _add_resources(\n-        self,\n-        resources_to_add,\n-        result,\n-        bundle_name="none",\n-        resetrjs=False,\n-        conditionalcomment="",\n-    ):\n-        resources = self.get_resources()\n-        for resource in resources_to_add:\n-            data = resources.get(resource, None)\n-            if data is None or not data.js:\n-                continue\n-            url = parse.urlparse(data.js)\n-            if url.netloc == "":\n-                # Local\n-                src = f"{self.site_url}/{data.js}"\n-            else:\n-                src = data.js\n-            data = {\n-                "bundle": bundle_name,\n-                "conditionalcomment": conditionalcomment,\n-                "src": src,\n-                # Reset RequireJS if bundle is in non-compile to\n-                # avoid "Mismatched anonymous define()" in legacy\n-                # scripts.\n-                "resetrjs": resetrjs,\n-            }\n-            result.append(data)\n-\n-    def get_data(self, bundle, result):\n-        if self.develop_bundle(bundle, "develop_javascript"):\n-            # Bundle development mode\n-            self._add_resources(\n-                bundle.resources,\n-                result,\n-                bundle_name=bundle.name,\n-                resetrjs=bundle.compile is False,\n-                conditionalcomment=bundle.conditionalcomment,\n-            )\n-            return\n-        if (\n-            not bundle.compile\n-            and (\n-                not bundle.last_compilation\n-                or self.last_legacy_import > bundle.last_compilation\n-            )\n-            and bundle.resources\n-        ):\n-            # Its a legacy bundle OR compiling is happening outside of plone\n-\n-            # We need to combine files. It\'s possible no resources are\n-            # defined because the compiling is done outside of plone\n-            cookWhenChangingSettings(self.context, bundle)\n-        if bundle.jscompilation:\n-            js_path = bundle.jscompilation\n-            if "++plone++" in js_path:\n-                resource_path = js_path.split("++plone++")[-1]\n-                resource_name, resource_filepath = resource_path.split("/", 1)\n-                js_location = "{}/++plone++{}/++unique++{}/{}".format(\n-                    self.site_url,\n-                    resource_name,\n-                    parse.quote(str(bundle.last_compilation)),\n-                    resource_filepath,\n-                )\n-            else:\n-                js_location = "{}/{}?version={}".format(\n-                    self.site_url,\n-                    bundle.jscompilation,\n-                    parse.quote(str(bundle.last_compilation)),\n-                )\n-\n-            load_async = (\n-                "async" if getattr(bundle, "load_async", None) else None\n-            )  # noqa\n-            load_defer = (\n-                "defer" if getattr(bundle, "load_defer", None) else None\n-            )  # noqa\n-\n-            result.append(\n-                {\n-                    "bundle": bundle.name,\n-                    "conditionalcomment": bundle.conditionalcomment,\n-                    "src": js_location,\n-                    "async": load_async,\n-                    "defer": load_defer,\n-                }\n-            )\n-\n-    def default_resources(self):\n-        """Default resources used by Plone itself"""\n-        result = []\n-        # We always add jquery resource\n-        result.append(\n-            {\n-                "src": "{}/{}".format(\n-                    self.site_url,\n-                    self.registry.records["plone.resources/jquery.js"].value,\n-                ),\n-                "conditionalcomment": None,\n-                "bundle": "basic",\n-            }\n-        )\n-        if self.development:\n-            # We need to add require.js and config.js\n-            result.append(\n-                {\n-                    "src": "{}/{}".format(\n-                        self.site_url,\n-                        self.registry.records["plone.resources.less-variables"].value,\n-                    ),  # noqa\n-                    "conditionalcomment": None,\n-                    "bundle": "basic",\n-                }\n-            )\n-            result.append(\n-                {\n-                    "src": "{}/{}".format(\n-                        self.site_url,\n-                        self.registry.records["plone.resources.lessc"].value,\n-                    ),\n-                    "conditionalcomment": None,\n-                    "bundle": "basic",\n-                }\n-            )\n-        result.append(\n-            {\n-                "src": "{}/{}".format(\n-                    self.site_url,\n-                    self.registry.records["plone.resources.requirejs"].value,\n-                ),\n-                "conditionalcomment": None,\n-                "bundle": "basic",\n-            }\n-        )\n-        result.append(\n-            {\n-                "src": "{}/{}".format(\n-                    self.site_url,\n-                    self.registry.records["plone.resources.configjs"].value,\n-                ),\n-                "conditionalcomment": None,\n-                "bundle": "basic",\n-            }\n-        )\n-        return result\n-\n-    def base_url(self):\n-        portal_state = getMultiAdapter(\n-            (self.context, self.request), name="plone_portal_state"\n-        )\n-        site_url = portal_state.portal_url()\n-        return site_url\n-\n-    def scripts(self):\n-        """The requirejs scripts, the ones that are not resources are loaded on\n-        configjs.py\n-        """\n-        if self.debug_mode or self.development or not self.production_path:\n-            result = self.default_resources()\n-            result.extend(self.ordered_bundles_result())\n-        else:\n-            result = [\n-                {\n-                    "src": "{}/++plone++{}".format(\n-                        self.site_url, self.production_path + "/default.js"\n-                    ),\n-                    "conditionalcomment": None,\n-                    "bundle": "production",\n-                    "async": None,  # Do not load ``async`` or\n-                    "defer": None,  # ``defer`` for production bundles.\n-                }\n-            ]\n-            if not self.anonymous:\n-                result.append(\n-                    {\n-                        "src": "{}/++plone++{}".format(\n-                            self.site_url, self.production_path + "/logged-in.js"\n-                        ),\n-                        "conditionalcomment": None,\n-                        "bundle": "production",\n-                        "async": None,  # Do not load ``async`` or\n-                        "defer": None,  # ``defer`` for production bundles.\n-                    }\n-                )\n-            result.extend(self.ordered_bundles_result(production=True))\n-\n-        # Add manual added resources\n-        request = get_top_request(self.request)  # might be a subrequest\n-        enabled_resources = getattr(request, "enabled_resources", [])\n-        if enabled_resources:\n-            self._add_resources(enabled_resources, result)\n-\n-        # Add diazo url\n-        origin = None\n-        if self.diazo_production_js and not self.development:\n-            origin = self.diazo_production_js\n-        if self.diazo_development_js and self.development:\n-            origin = self.diazo_development_js\n-        if origin:\n-            result.append(\n-                {\n-                    "bundle": "diazo",\n-                    "conditionalcomment": "",\n-                    "src": f"{self.site_url}/{origin}",\n-                }\n-            )\n-\n-        return result\ndiff --git a/Products/CMFPlone/resources/browser/styles.pt b/Products/CMFPlone/resources/browser/styles.pt\ndeleted file mode 100644\nindex 8efe677417..0000000000\n--- a/Products/CMFPlone/resources/browser/styles.pt\n+++ /dev/null\n@@ -1,13 +0,0 @@\n-<tal:styles repeat="style view/styles"\n-  ><tal:block define="condcomment style/conditionalcomment"\n-    ><tal:wcondcomment tal:condition="condcomment">\n-        <tal:opencc tal:replace="structure string:&lt;!--[if ${condcomment}]&gt;" />\n-    </tal:wcondcomment\n-    ><link rel="style"\n-          tal:attributes="href style/src;\n-                          rel style/rel;\n-                          data-bundle style/bundle;" /><tal:wcondcomment tal:condition="condcomment">\n-        <tal:closecc tal:replace="structure string:&lt;![endif]--&gt;" />\n-    </tal:wcondcomment\n-  ></tal:block\n-></tal:styles>\ndiff --git a/Products/CMFPlone/resources/browser/styles.py b/Products/CMFPlone/resources/browser/styles.py\ndeleted file mode 100644\nindex f1ee9c242e..0000000000\n--- a/Products/CMFPlone/resources/browser/styles.py\n+++ /dev/null\n@@ -1,180 +0,0 @@\n-from plone.app.layout.viewlets.common import ViewletBase\n-from plone.app.theming.interfaces import IThemeSettings\n-from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.resources.browser.cook import cookWhenChangingSettings\n-from Products.CMFPlone.resources.browser.resource import ResourceBase\n-from Products.CMFPlone.utils import get_top_request\n-from urllib import parse\n-from zope.component import getUtility\n-\n-\n-class StylesBase(ResourceBase):\n-\n-    """ Information for style rendering. """\n-\n-    def get_urls(self, style, bundle):\n-        """\n-        Extracts the urls for the specific resource\n-        """\n-        for css in style.css:\n-            url = parse.urlparse(css)\n-            if url.netloc == "":\n-                # Local\n-                src = f"{self.site_url}/{css}"\n-            else:\n-                src = "%s" % (css)\n-\n-            extension = url.path.split(".")[-1]\n-            rel = "stylesheet"\n-            if extension != "" and extension != "css":\n-                rel = "stylesheet/%s" % extension\n-\n-            data = {\n-                "rel": rel,\n-                "bundle": bundle.name if bundle else "none",\n-                "conditionalcomment": bundle.conditionalcomment if bundle else "",\n-                "src": src,\n-            }\n-            yield data\n-\n-    def get_data(self, bundle, result):\n-        """\n-        Gets the needed information for the bundle\n-        and stores it on the result list\n-        """\n-        if self.develop_bundle(bundle, "develop_css"):\n-            self.resources = self.get_resources()\n-            # The bundle resources\n-            for resource in bundle.resources:\n-                if resource in self.resources:\n-                    style = self.resources[resource]\n-                    for data in self.get_urls(style, bundle):\n-                        result.append(data)\n-        else:\n-            if bundle.compile is False:\n-                # Its a legacy css bundle\n-                if (\n-                    not bundle.last_compilation\n-                    or self.last_legacy_import > bundle.last_compilation\n-                ):\n-                    # We need to compile\n-                    cookWhenChangingSettings(self.context, bundle)\n-\n-            if bundle.csscompilation:\n-                css_path = bundle.csscompilation\n-                if "++plone++" in css_path:\n-                    resource_path = css_path.split("++plone++")[-1]\n-                    resource_name, resource_filepath = resource_path.split("/", 1)\n-                    css_location = "{}/++plone++{}/++unique++{}/{}".format(\n-                        self.site_url,\n-                        resource_name,\n-                        parse.quote(str(bundle.last_compilation)),\n-                        resource_filepath,\n-                    )\n-                else:\n-                    css_location = "{}/{}?version={}".format(\n-                        self.site_url,\n-                        bundle.csscompilation,\n-                        parse.quote(str(bundle.last_compilation)),\n-                    )\n-                result.append(\n-                    {\n-                        "bundle": bundle.name,\n-                        "rel": "stylesheet",\n-                        "conditionalcomment": bundle.conditionalcomment,\n-                        "src": css_location,\n-                    }\n-                )\n-\n-    @property\n-    def _theme_settings(self):\n-        registry = getUtility(IRegistry)\n-        return registry.forInterface(IThemeSettings, False)\n-\n-    @property\n-    def custom_css(self):\n-        return self._theme_settings.custom_css\n-\n-    @property\n-    def custom_css_timestamp(self):\n-        return self._theme_settings.custom_css_timestamp\n-\n-    def styles(self):\n-        """\n-        Get all the styles\n-        """\n-        if self.development or self.debug_mode or not self.production_path:\n-            result = self.ordered_bundles_result()\n-        else:\n-            result = [\n-                {\n-                    "src": "{}/++plone++{}".format(\n-                        self.site_url, self.production_path + "/default.css"\n-                    ),\n-                    "conditionalcomment": None,\n-                    "rel": "stylesheet",\n-                    "bundle": "production",\n-                },\n-            ]\n-            if not self.anonymous:\n-                result.append(\n-                    {\n-                        "src": "{}/++plone++{}".format(\n-                            self.site_url, self.production_path + "/logged-in.css"\n-                        ),\n-                        "conditionalcomment": None,\n-                        "rel": "stylesheet",\n-                        "bundle": "production",\n-                    }\n-                )\n-            result.extend(self.ordered_bundles_result(production=True))\n-\n-        # Add manual added resources\n-        resources = self.get_resources()\n-        request = get_top_request(self.request)  # might be a subrequest\n-        if hasattr(request, "enabled_resources"):\n-            for resource in request.enabled_resources:\n-                if resource in resources:\n-                    for data in self.get_urls(resources[resource], None):\n-                        result.append(data)\n-\n-        # Add diazo css\n-        origin = None\n-        if self.diazo_production_css and self.development is False:\n-            origin = self.diazo_production_css\n-        if self.diazo_development_css and self.development is True:\n-            origin = self.diazo_development_css\n-        if origin:\n-            url = parse.urlparse(origin)\n-            if url.netloc == "":\n-                # Local\n-                src = f"{self.site_url}/{origin}"\n-            else:\n-                src = "%s" % (origin)\n-\n-            extension = url.path.split(".")[-1]\n-            rel = "stylesheet"\n-            if extension != "" and extension != "css":\n-                rel = "stylesheet/%s" % extension\n-\n-            data = {"rel": rel, "conditionalcomment": "", "src": src, "bundle": "diazo"}\n-\n-            result.append(data)\n-\n-        # custom.css\n-        if self.custom_css:\n-            custom_css = {\n-                "rel": "stylesheet",\n-                "conditionalcomment": "",\n-                "src": "{}/custom.css?timestamp={}".format(\n-                    self.site_url,\n-                    self.custom_css_timestamp,\n-                ),\n-                "bundle": "custom-css",\n-            }\n-            result.append(custom_css)\n-        return result\n-\n-\n-class StylesView(StylesBase, ViewletBase):\n-    """Styles Viewlet"""\ndiff --git a/Products/CMFPlone/resources/bundle.py b/Products/CMFPlone/resources/bundle.py\ndeleted file mode 100644\nindex 08027f2a58..0000000000\n--- a/Products/CMFPlone/resources/bundle.py\n+++ /dev/null\n@@ -1,101 +0,0 @@\n-from datetime import datetime\n-from plone.resource.directory import FilesystemResourceDirectory\n-from plone.resource.file import FilesystemFile\n-from Products.CMFCore.FSFile import FSFile\n-from Products.Five.browser.resource import DirectoryResource\n-from Products.Five.browser.resource import FileResource\n-from zExceptions import NotFound\n-from zope.component.hooks import getSite\n-\n-import os\n-\n-\n-class Bundle:\n-    """Wraps pure bundles RecordsProxy and enrich with logic\n-    .\n-    Proxy attributes and provide some utility functions\n-    """\n-\n-    def __init__(self, data):\n-        """initialize Bunde.initialize\n-\n-        data is a\n-        - registry record\n-        - with interfaces\'IResourceRegistry\'\n-        - with prefix \'plone.bundles\'\n-        """\n-        self.data = data\n-\n-    def _real_path(self, ctx):\n-        if ctx == "js":\n-            resource_path = self.data.jscompilation\n-        else:\n-            resource_path = self.data.csscompilation\n-        try:\n-            resource = getSite().restrictedTraverse(resource_path)\n-        except (NotFound, KeyError):\n-            return None, None\n-        if resource.__module__ == "Products.Five.metaclass":\n-            try:\n-                return "fs", resource.chooseContext().path\n-            except:\n-                try:\n-                    return "fs", resource.context.path\n-                except:\n-                    try:\n-                        if callable(resource):\n-                            return None, None\n-                        else:\n-                            return None, None\n-                    except:\n-                        return None, None\n-        elif isinstance(resource, FilesystemFile):\n-            return "fs", resource.path\n-        elif isinstance(resource, FileResource):\n-            return "fs", resource.chooseContext().path\n-        elif isinstance(resource, DirectoryResource):\n-            return "fs", resource.context.path\n-        elif isinstance(resource, FilesystemResourceDirectory):\n-            return "fs", resource.directory\n-        elif isinstance(resource, FSFile):\n-            return "zodb", resource._filepath\n-        else:\n-            return "zodb", None\n-\n-    @property\n-    def name(self):\n-        return self.data.__prefix__.split("/", 1)[1].rstrip(".")\n-\n-    @property\n-    def last_compilation(self):\n-        """check bundles last compilation using filesystem date or date of OFS.\n-\n-        if bundle has a last_compilation date newer than filesystem/OFS it wins\n-        always.\n-        """\n-        mods = []\n-        for ctx in ["js", "css"]:\n-            loc, path = self._real_path(ctx)\n-            if loc == "fs" and os.path.exists(path):\n-                mods.append(datetime.fromtimestamp(os.path.getmtime(path)))\n-            elif loc == "zodb":\n-                self.data.last_compilation\n-        if self.data.last_compilation and mods:\n-            if self.data.last_compilation > max(mods):\n-                return self.data.last_compilation\n-            else:\n-                return max(mods)\n-        return self.data.last_compilation\n-\n-    @last_compilation.setter\n-    def last_compilation(self, value):\n-        self.data.last_compilation = value\n-\n-    def __getattr__(self, name):\n-        """act as r/o wrapper"""\n-        return getattr(self.data, name)\n-\n-    def __repr__(self):\n-        return \'<{}.{} object "{}" at {}>\'.format(\n-            self.__class__.__module__, self.__class__.__name__, self.name, id(self)\n-        )\ndiff --git a/Products/CMFPlone/resources/exportimport/__init__.py b/Products/CMFPlone/resources/exportimport/__init__.py\ndeleted file mode 100644\nindex e69de29bb2..0000000000\ndiff --git a/Products/CMFPlone/resources/exportimport/bundles.py b/Products/CMFPlone/resources/exportimport/bundles.py\ndeleted file mode 100644\nindex f380b846e2..0000000000\n--- a/Products/CMFPlone/resources/exportimport/bundles.py\n+++ /dev/null\n@@ -1,33 +0,0 @@\n-from ..browser.combine import combine_bundles\n-from plone.registry.interfaces import IRegistry\n-from zope.component import queryUtility\n-\n-\n-def combine(context):\n-    logger = context.getLogger("bundles")\n-    registry = queryUtility(IRegistry)\n-\n-    if registry is None:\n-        logger.info("Cannot find registry")\n-        return\n-\n-    # Look for a keyword in registry.xml or the registry directory.\n-    filepaths = ["registry.xml"]\n-    if context.isDirectory("registry"):\n-        for filename in context.listDirectory("registry"):\n-            filepaths.append("registry/" + filename)\n-    found = False\n-    for filepath in filepaths:\n-        body = context.readDataFile(filepath)\n-        if body is not None and b"IBundleRegistry" in body:\n-            found = True\n-            break\n-    if not found:\n-        return\n-\n-    # Calling combine_bundles used to have as side effect that the\n-    # Content-Type header of the response was set to application/javascript,\n-    # which we do not want.  But that was fixed already in Plone 5.1b2.\n-    # See https://github.com/plone/Products.CMFPlone/pull/1924\n-    site = context.getSite()\n-    combine_bundles(site)\ndiff --git a/Products/CMFPlone/resources/exportimport/resourceregistry.py b/Products/CMFPlone/resources/exportimport/resourceregistry.py\ndeleted file mode 100644\nindex 9d29740475..0000000000\n--- a/Products/CMFPlone/resources/exportimport/resourceregistry.py\n+++ /dev/null\n@@ -1,170 +0,0 @@\n-from datetime import datetime\n-from plone.i18n.normalizer.interfaces import IIDNormalizer\n-from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import IBundleRegistry\n-from Products.CMFPlone.interfaces import IResourceRegistry\n-from Products.CMFPlone.resources.browser.cook import cookWhenChangingSettings\n-from Products.GenericSetup.interfaces import IBody\n-from Products.GenericSetup.utils import XMLAdapterBase\n-from zope.component import queryMultiAdapter\n-from zope.component import queryUtility\n-from zope.interface.interfaces import ComponentLookupError\n-\n-\n-def importResRegistry(context, reg_id, reg_title, filename):\n-    """Import resource registry."""\n-    site = context.getSite()\n-    logger = context.getLogger("resourceregistry")\n-\n-    body = context.readDataFile(filename)\n-    if body is None:\n-        return\n-\n-    res_reg = getToolByName(site, reg_id)\n-\n-    importer = queryMultiAdapter((res_reg, context), IBody)\n-    if importer is None:\n-        logger.warning("%s: Import adapter missing." % reg_title)\n-        return\n-    try:\n-        importer.registry = getToolByName(site, "portal_registry")\n-    except AttributeError:\n-        # Upgrade 3.x no registry there\n-        importer.registry = None\n-    importer.body = body\n-    logger.info("%s imported." % reg_title)\n-\n-\n-class ResourceRegistryNodeAdapter(XMLAdapterBase):\n-\n-    resource_blacklist = set()\n-    registry = None\n-\n-    def _importNode(self, node):\n-        """Import the object from the DOM node."""\n-        if self.registry is None:\n-            # Upgrade 3.x no registry there\n-            return\n-        resources = self.registry.collectionOfInterface(\n-            IResourceRegistry, prefix="plone.resources", check=False\n-        )\n-\n-        bundles = self.registry.collectionOfInterface(\n-            IBundleRegistry, prefix="plone.bundles", check=False\n-        )\n-        if "plone-legacy" in bundles:\n-            legacy = bundles["plone-legacy"]\n-        else:\n-            legacy = bundles.setdefault("plone-legacy")\n-            legacy.resources = []\n-            legacy.enabled = True\n-\n-        for child in node.childNodes:\n-            if child.nodeName != self.resource_type:\n-                continue\n-\n-            data = {}\n-            add = True\n-            remove = False\n-            position = res_id = None\n-            for key, value in child.attributes.items():\n-                key = str(key)\n-                if key == "update":\n-                    continue\n-                if key == "remove" and value in (True, "true", "True"):\n-                    add = False\n-                    remove = True\n-                    continue\n-                if key in ("position-before", "insert-before"):\n-                    position = (\n-                        "before",\n-                        queryUtility(IIDNormalizer).normalize(str(value)),\n-                    )\n-                    continue\n-                if key in ("position-after", "insert-after"):\n-                    position = (\n-                        "after",\n-                        queryUtility(IIDNormalizer).normalize(str(value)),\n-                    )\n-                    continue\n-                if key in ("position-top", "insert-top"):\n-                    position = ("*",)\n-                    continue\n-                if key in ("position-bottom", "insert-bottom"):\n-                    position = ("",)\n-                    continue\n-                if key == "id":\n-                    if value in self.resource_blacklist:\n-                        add = False\n-                        data.clear()\n-                        break\n-                    res_id = queryUtility(IIDNormalizer).normalize(str(value))\n-                    data["url"] = str(value)\n-                elif value.lower() == "false":\n-                    data[key] = False\n-                elif value.lower() == "true":\n-                    data[key] = True\n-                else:\n-                    try:\n-                        data[key] = int(value)\n-                    except ValueError:\n-                        data[key] = str(value)\n-\n-            if add:\n-                proxy = resources.setdefault(res_id)\n-                if self.resource_type == "javascript":\n-                    proxy.js = data["url"]\n-                elif self.resource_type == "stylesheet":\n-                    proxy.css = [data["url"]]\n-                if "enabled" in data and not data["enabled"]:\n-                    # if we are disabling it, we need to remove from legacy\n-                    # resources\n-                    if res_id in legacy.resources:\n-                        legacy.resources.remove(res_id)\n-                    continue\n-                if res_id in legacy.resources:\n-                    # remove here so we can possible re-insert into whatever\n-                    # position is preferred below and then we do not\n-                    # re-add same resource multiple times\n-                    legacy.resources.remove(res_id)\n-                if position is None:\n-                    position = ("",)\n-                if position[0] == "*":\n-                    legacy.resources.insert(0, res_id)\n-                elif position[0] == "":\n-                    legacy.resources.append(res_id)\n-                elif position[0] == "after":\n-                    if position[1] in legacy.resources:\n-                        legacy.resources.insert(\n-                            legacy.resources.index(position[1]) + 1, res_id\n-                        )\n-                    else:\n-                        legacy.resources.append(res_id)\n-                elif position[0] == "before":\n-                    if position[1] in legacy.resources:\n-                        legacy.resources.insert(\n-                            legacy.resources.index(position[1]), res_id\n-                        )\n-                    else:\n-                        legacy.resources.append(res_id)\n-\n-            elif remove:\n-                if res_id in legacy.resources:\n-                    legacy.resources.remove(res_id)\n-                if res_id in resources:\n-                    del resources[res_id]\n-\n-            # make sure to trigger committing to db\n-            # not sure this is necessary...\n-            legacy.resources = legacy.resources\n-\n-        if "plone.resources.last_legacy_import" in self.registry.records:  # noqa\n-            self.registry.records[\n-                "plone.resources.last_legacy_import"\n-            ].value = datetime.now()\n-            try:\n-                cookWhenChangingSettings(self.context, legacy)\n-            except (AssertionError, ComponentLookupError):\n-                # zope.globalrequest and the site might not be setup, don\'t\n-                # error out\n-                pass\ndiff --git a/Products/CMFPlone/resources/utils.py b/Products/CMFPlone/resources/utils.py\nnew file mode 100644\nindex 0000000000..ec2e7fb9e0\n--- /dev/null\n+++ b/Products/CMFPlone/resources/utils.py\n@@ -0,0 +1,116 @@\n+from Acquisition import aq_base\n+from Acquisition import aq_inner\n+from Acquisition import aq_parent\n+from plone.resource.file import FilesystemFile\n+from plone.resource.interfaces import IResourceDirectory\n+from Products.CMFCore.Expression import createExprContext\n+from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone.interfaces.resources import OVERRIDE_RESOURCE_DIRECTORY_NAME\n+from zExceptions import NotFound\n+from zope.component import queryUtility\n+\n+import logging\n+\n+\n+PRODUCTION_RESOURCE_DIRECTORY = "production"\n+logger = logging.getLogger(__name__)\n+\n+\n+def get_production_resource_directory():\n+    persistent_directory = queryUtility(IResourceDirectory, name="persistent")\n+    if persistent_directory is None:\n+        return ""\n+    container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n+    try:\n+        production_folder = container[PRODUCTION_RESOURCE_DIRECTORY]\n+    except NotFound:\n+        return "%s/++unique++1" % PRODUCTION_RESOURCE_DIRECTORY\n+    if "timestamp.txt" not in production_folder:\n+        return "%s/++unique++1" % PRODUCTION_RESOURCE_DIRECTORY\n+    timestamp = production_folder.readFile("timestamp.txt")\n+    if isinstance(timestamp, bytes):\n+        timestamp = timestamp.decode()\n+    return "{}/++unique++{}".format(PRODUCTION_RESOURCE_DIRECTORY, timestamp)\n+\n+\n+def get_resource(context, path):\n+    if path.startswith("++plone++"):\n+        # ++plone++ resources can be customized, we return their override\n+        # value if any\n+        overrides = get_override_directory(context)\n+        filepath = path[9:]\n+        if overrides.isFile(filepath):\n+            return overrides.readFile(filepath)\n+\n+    if "?" in path:\n+        # Example from plone.session:\n+        # "acl_users/session/refresh?session_refresh=true&type=css&minutes=5"\n+        # Traversing will not work then.  In this example we could split on "?"\n+        # and traverse to the first part, acl_users/session/refresh, but this\n+        # gives a function, and this fails when we call it below, missing a\n+        # REQUEST argument\n+        return\n+    try:\n+        resource = context.unrestrictedTraverse(path)\n+    except (NotFound, AttributeError):\n+        logger.warning(\n+            f"Could not find resource {path}. You may have to create it first."\n+        )  # noqa\n+        return\n+\n+    if isinstance(resource, FilesystemFile):\n+        (directory, sep, filename) = path.rpartition("/")\n+        return context.unrestrictedTraverse(directory).readFile(filename)\n+\n+    # calling the resource may modify the header, i.e. the content-type.\n+    # we do not want this, so keep the original header intact.\n+    response_before = context.REQUEST.response\n+    context.REQUEST.response = response_before.__class__()\n+    if hasattr(aq_base(resource), "GET"):\n+        # for FileResource\n+        result = resource.GET()\n+    else:\n+        # any BrowserView\n+        result = resource()\n+    context.REQUEST.response = response_before\n+    return result\n+\n+\n+def get_override_directory(context):\n+    persistent_directory = queryUtility(IResourceDirectory, name="persistent")\n+    if persistent_directory is None:\n+        return\n+    if OVERRIDE_RESOURCE_DIRECTORY_NAME not in persistent_directory:\n+        persistent_directory.makeDirectory(OVERRIDE_RESOURCE_DIRECTORY_NAME)\n+    return persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n+\n+\n+def evaluateExpression(expression, context):\n+    """Evaluate an object\'s TALES condition to see if it should be\n+    displayed."""\n+    try:\n+        if expression.text and context is not None:\n+            portal = getToolByName(context, "portal_url").getPortalObject()\n+\n+            # Find folder (code courtesy of CMFCore.ActionsTool)\n+            if context is None or not hasattr(context, "aq_base"):\n+                folder = portal\n+            else:\n+                folder = context\n+                # Search up the containment hierarchy until we find an\n+                # object that claims it\'s PrincipiaFolderish.\n+                while folder is not None:\n+                    if getattr(aq_base(folder), "isPrincipiaFolderish", 0):\n+                        # found it.\n+                        break\n+                    else:\n+                        folder = aq_parent(aq_inner(folder))\n+\n+            __traceback_info__ = (folder, portal, context, expression)\n+            ec = createExprContext(folder, portal, context)\n+            # add \'context\' as an alias for \'object\'\n+            ec.setGlobal("context", context)\n+            return expression(ec)\n+        return True\n+    except AttributeError:\n+        return True\ndiff --git a/Products/CMFPlone/resources/webresource.py b/Products/CMFPlone/resources/webresource.py\nnew file mode 100644\nindex 0000000000..b3d6233660\n--- /dev/null\n+++ b/Products/CMFPlone/resources/webresource.py\n@@ -0,0 +1,75 @@\n+from .utils import evaluateExpression\n+from .utils import get_resource\n+from Products.CMFCore.Expression import Expression\n+from webresource import ScriptResource\n+from webresource import StyleResource\n+from zope.component import queryUtility\n+from zope.ramcache.interfaces import ram\n+\n+\n+class PloneBaseResource:\n+    """Mixin to override certain aspects of a webresource for Plone needs."""\n+\n+    def __init__(self, context, **kw):\n+        """Initialize with Plone context"""\n+        self.context = context\n+        self.expression = kw.pop("expression", "")\n+        super().__init__(**kw)\n+\n+    @property\n+    def file_data(self):\n+        """Fetch data from using a resource via traversal"""\n+        data = get_resource(self.context, self.resource)\n+        if data is None:\n+            # This happens with plone.session when trying to get a resource\n+            # with this path:\n+            # "acl_users/session/refresh?session_refresh=true&type=css&minutes=5"\n+            # We could \'return b""\', but let\'s take the resource path instead.\n+            data = self.resource\n+        if isinstance(data, str):\n+            data = data.encode("utf8")\n+        return data\n+\n+    @property\n+    def include(self):\n+        if callable(self._include):\n+            # Note: at time of writing, this is not used in core Plone.\n+            # But upstream webresource has it, so let\'s keep it.\n+            return self._include()\n+        if not self._include:\n+            return False\n+        # We want to include the resource, but must evaluate the expression first.\n+        return self.eval_expression()\n+\n+    @include.setter\n+    def include(self, include):\n+        self._include = include\n+\n+    def eval_expression(self):\n+        if not self.expression:\n+            return True\n+        cache = queryUtility(ram.IRAMCache)\n+        cooked_expression = None\n+        if cache is not None:\n+            cooked_expression = cache.query(\n+                "plone.bundles.cooked_expressions",\n+                key=dict(prefix=self.name),\n+                default=None,\n+            )\n+        if cooked_expression is None or cooked_expression.text != self.expression:\n+            cooked_expression = Expression(self.expression)\n+            if cache is not None:\n+                cache.set(\n+                    cooked_expression,\n+                    "plone.bundles.cooked_expressions",\n+                    key=dict(prefix=self.name),\n+                )\n+        return evaluateExpression(cooked_expression, self.context)\n+\n+\n+class PloneScriptResource(PloneBaseResource, ScriptResource):\n+    """Webresource based ScriptResource for Plone"""\n+\n+\n+class PloneStyleResource(PloneBaseResource, StyleResource):\n+    """Webresource based StyleResource for Plone"""\ndiff --git a/Products/CMFPlone/skins/plone_form_scripts/plone_change_password.py b/Products/CMFPlone/skins/plone_form_scripts/plone_change_password.py\ndeleted file mode 100644\nindex 77a5ee90b0..0000000000\n--- a/Products/CMFPlone/skins/plone_form_scripts/plone_change_password.py\n+++ /dev/null\n@@ -1,54 +0,0 @@\n-## Script (Python) "plone_change_password"\n-##bind container=container\n-##bind context=context\n-##bind namespace=\n-##bind script=script\n-##bind subpath=traverse_subpath\n-##title=Action to change password\n-##parameters=password, password_confirm, current, domains=None\n-\n-from Products.CMFPlone import PloneMessageFactory as _\n-\n-REQUEST = context.REQUEST\n-if \'cancel\' in REQUEST.form:\n-    context.plone_utils.addPortalMessage(_(\'Password change was canceled.\'),\n-                                         \'warning\')\n-    return context.REQUEST.RESPONSE.redirect(\n-            \'%s/@@personal-preferences\' % context.absolute_url())\n-\n-mt = context.portal_membership\n-\n-if not mt.testCurrentPassword(current):\n-    failMessage = _(\'Does not match current password.\')\n-    context.plone_utils.addPortalMessage(failMessage, \'error\')\n-    return context.password_form(context,\n-                                 REQUEST,\n-                                 error=failMessage)\n-\n-failMessage = context.portal_registration \\\n-                    .testPasswordValidity(password, password_confirm)\n-if failMessage:\n-    context.plone_utils.addPortalMessage(failMessage, \'error\')\n-    return context.password_form(context,\n-                                 REQUEST,\n-                                 error=failMessage)\n-\n-member = mt.getAuthenticatedMember()\n-try:\n-    mt.setPassword(password, domains, REQUEST=context.REQUEST)\n-except AttributeError:\n-    failMessage = _(\'While changing your password an AttributeError \'\n-                    \'occurred. This is usually caused by your user being \'\n-                    \'defined outside the portal.\')\n-    context.plone_utils.addPortalMessage(failMessage, \'error\')\n-    return context.password_form(context,\n-                                 REQUEST,\n-                                 error=failMessage)\n-\n-from Products.CMFPlone.utils import transaction_note\n-transaction_note(\'Changed password for %s\' % (member.getUserName()))\n-\n-context.plone_utils.addPortalMessage(_(\'Password changed.\'))\n-\n-return context.REQUEST.RESPONSE.redirect(\n-            \'%s/@@personal-preferences\' % context.absolute_url())\ndiff --git a/Products/CMFPlone/skins/plone_prefs/password_form.pt b/Products/CMFPlone/skins/plone_prefs/password_form.pt\ndeleted file mode 100644\nindex 45d75b9915..0000000000\n--- a/Products/CMFPlone/skins/plone_prefs/password_form.pt\n+++ /dev/null\n@@ -1,98 +0,0 @@\n-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"\n-      xmlns:tal="http://xml.zope.org/namespaces/tal"\n-      xmlns:metal="http://xml.zope.org/namespaces/metal"\n-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n-      lang="en"\n-      metal:use-macro="context/prefs_main_template/macros/master"\n-      i18n:domain="plone">\n-\n-<body>\n-\n-<metal:main fill-slot="prefs_configlet_main">\n-\n-    <h1 class="documentFirstHeading"\n-        i18n:translate="heading_change_password_for">\n-        Change password for <span tal:content="user/getUserName" tal:omit-tag="" i18n:name="user">user</span>\n-    </h1>\n-\n-    <div id="content-core">\n-        <a href=""\n-           class="link-parent"\n-           tal:attributes="href string:${context/@@plone_portal_state/navigation_root_url}/dashboard"\n-           i18n:translate="label_to_dashboard">\n-            Up to my dashboard\n-        </a>\n-        <form action="plone_change_password"\n-              class="pat-formautofocus pat-formunloadalert"\n-              name="change_password"\n-              method="post">\n-\n-            <fieldset>\n-                <legend i18n:translate="legend_password_details">Password Details</legend>\n-\n-                <div class="field">\n-                    <label for="current" i18n:translate="label_current_password">Current password</label>\n-\n-                    <div class="formHelp" i18n:translate="help_current_password">\n-                    Enter your current password.\n-                    </div>\n-\n-                    <input type="password"\n-                           id="current"\n-                           name="current"\n-                           size="10"\n-                           />\n-                </div>\n-\n-                <div class="field">\n-                    <label for="password" i18n:translate="label_new_password">New password</label>\n-\n-                    <div class="formHelp" i18n:translate="help_new_password">\n-                    Enter your new password.\n-                    </div>\n-\n-                    <input type="password"\n-                           id="password"\n-                           name="password"\n-                           size="10"\n-                           />\n-                </div>\n-\n-                <div class="field">\n-                    <label for="password_confirm" i18n:translate="label_confirm_password">Confirm password</label>\n-\n-                    <div class="formHelp" i18n:translate="help_confirm_password">\n-                    Re-enter the password. Make sure the passwords are identical.\n-                    </div>\n-\n-                    <input type="password"\n-                           id="password_confirm"\n-                           name="password_confirm"\n-                           size="10"\n-                           />\n-                </div>\n-\n-                <div class="formControls">\n-                    <input class="btn btn-primary"\n-                           type="submit"\n-                           value="Change Password"\n-                           i18n:attributes="value label_change_password;"\n-                           />\n-                    <input class="btn btn-secondary"\n-                           type="submit"\n-                           name="cancel"\n-                           value="Cancel"\n-                           i18n:attributes="value label_cancel;"\n-                           />\n-                </div>\n-\n-                <input tal:replace="structure context/@@authenticator/authenticator" />\n-\n-            </fieldset>\n-        </form>\n-    </div>\n-\n-</metal:main>\n-\n-</body>\n-</html>\ndiff --git a/Products/CMFPlone/skins/plone_prefs/password_form.pt.metadata b/Products/CMFPlone/skins/plone_prefs/password_form.pt.metadata\ndeleted file mode 100644\nindex 51853704e4..0000000000\n--- a/Products/CMFPlone/skins/plone_prefs/password_form.pt.metadata\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-[default]\n-title=Change password\ndiff --git a/Products/CMFPlone/skins/plone_prefs/prefs_error_log_form.pt b/Products/CMFPlone/skins/plone_prefs/prefs_error_log_form.pt\ndeleted file mode 100644\nindex f52ff51c75..0000000000\n--- a/Products/CMFPlone/skins/plone_prefs/prefs_error_log_form.pt\n+++ /dev/null\n@@ -1,183 +0,0 @@\n-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"\n-      xmlns:tal="http://xml.zope.org/namespaces/tal"\n-      xmlns:metal="http://xml.zope.org/namespaces/metal"\n-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n-      lang="en"\n-      metal:use-macro="context/prefs_main_template/macros/master"\n-      i18n:domain="plone">\n-\n-<body>\n-\n-<metal:main fill-slot="prefs_configlet_main">\n-\n-    <h1 class="documentFirstHeading"\n-        i18n:translate="heading_error_log">Error log</h1>\n-\n-    <div class="documentDescription" i18n:translate="description_error_log_setup">\n-        This page lists the exceptions that have occurred in this site\n-        recently. You can configure how many exceptions should be kept\n-        and whether the exceptions should be copied to Zope\'s event log\n-        file(s).\n-    </div>\n-\n-    <div id="content-core">\n-\n-        <p>\n-            <a href="https://docs.plone.org/appendices/error-reference.html"\n-               i18n:translate="description_error_rerference_link">\n-                Refer to the plone.org error reference for more information about\n-                these exceptions.\n-            </a>\n-        </p>\n-\n-        <form action="prefs_error_log_update" method="get">\n-\n-            <fieldset tal:define="entries context/error_log/getLogEntries">\n-\n-                <legend i18n:translate="legend_logexception">Exception Log (most recent first)</legend>\n-\n-                <div class="field">\n-                    <label for="search_entry"\n-                           i18n:translate="label_search_entry">Search for an error log entry <span class="formHelp"> (such as "1257962690.640.49636048561")</span></label>\n-\n-                    <input type="text"\n-                           name="search_entry"\n-                           id="search_entry"\n-                           size="35" />\n-                </div>\n-\n-                <div class="field" tal:condition="not:entries" i18n:translate="legend_lognoexceptions">\n-                    No exceptions logged.\n-                </div>\n-\n-                <div class="formControls">\n-                    <input class="btn btn-primary"\n-                           type="submit"\n-                           name="form.button.search"\n-                           value="Search"\n-                           i18n:attributes="value label_search;" />\n-                    <input class="btn btn-secondary"\n-                           type="submit"\n-                           name="form.button.refresh"\n-                           value="Refresh"\n-                           i18n:attributes="value label_refresh;" />\n-                    <input class="btn btn-secondary"\n-                           type="submit"\n-                           name="form.button.clear"\n-                           value="Clear Displayed Entries"\n-                           i18n:attributes="value label_clear_displayed_entries;" />\n-                    <input class="btn btn-secondary"\n-                           type="submit"\n-                           name="form.button.showall"\n-                           value="Show all entries"\n-                           i18n:attributes="value label_show_all_entries;" />\n-                </div>\n-\n-                <table class="listing"\n-                       id="sortable"\n-                       summary="Exception Log (most recent first)"\n-                       i18n:attributes="summary summary_exception_log;"\n-                       tal:condition="entries">\n-                    <thead>\n-                        <tr>\n-                            <th i18n:translate="label_time">Time</th>\n-                            <th i18n:translate="label_user_name">User Name</th>\n-                            <th i18n:translate="label_exception">Exception</th>\n-                        </tr>\n-                    </thead>\n-\n-                    <tbody tal:define="member context/@@plone_portal_state/member;\n-                                       updatetime python:member.getProperty(\'error_log_update\', 0.0);\n-                                       updatetime python:updatetime and updatetime or 0.0;\n-                                       updatetime python:float(updatetime)">\n-\n-                        <tal:entry tal:repeat="entry entries">\n-                        <tr tal:define="oddrow repeat/entry/odd;"\n-                            tal:attributes="class python:test(oddrow, \'even\', \'odd\')"\n-                            tal:condition="python: test(entry[\'time\'] > updatetime,1,0)">\n-\n-                            <td\n-                                tal:define="toLocalizedTime nocall:context/@@plone/toLocalizedTime;"\n-                                tal:content="python:toLocalizedTime(DateTime(entry[\'time\']), long_format=True)">13:04:41</td>\n-                            <td tal:content="string:${entry/username} (${entry/userid})">joe</td>\n-                            <td>\n-                                <a href="showEntry"\n-                                   tal:attributes="href string:prefs_error_log_showEntry?id=${entry/id}">\n-                                    <span tal:replace="entry/type">AttributeError</span>:\n-                                    <span tal:define="value entry/value"\n-                                          tal:content="python: len(value) &lt; 70 and value or value[:70] + \'...\'">\n-                                    Application object has no attribute "gak"\n-                                    </span>\n-                                </a>\n-                            </td>\n-                        </tr>\n-                        </tal:entry>\n-                    </tbody>\n-                </table>\n-\n-            </fieldset>\n-        </form>\n-\n-        <form action="prefs_error_log_setProperties"\n-              method="post"\n-              class="pat-formunloadalert">\n-\n-            <fieldset tal:define="props context/error_log/getProperties">\n-\n-                <legend i18n:translate="legend_logdetails">Log details</legend>\n-\n-                <div class="field">\n-                    <label for="keep_entries"\n-                           i18n:translate="label_number_exceptions">Number of exceptions to keep</label>\n-\n-                    <div></div>\n-\n-                    <input type="text"\n-                           name="keep_entries"\n-                           id="keep_entries"\n-                           size="40"\n-                           tal:attributes="value props/keep_entries" />\n-                </div>\n-\n-                <div class="field">\n-                    <input type="checkbox"\n-                           class="noborder"\n-                           id="cb_copy_to_zlog"\n-                           name="copy_to_zlog"\n-                           tal:attributes="checked props/copy_to_zlog;\n-                                           disabled not:context/error_log/checkEventLogPermission|nothing" />\n-\n-                    <label for="cb_copy_to_zlog" i18n:translate="label_copy_exceptions">\n-                        Copy exceptions to the event log\n-                    </label>\n-\n-                </div>\n-\n-                <div class="field">\n-                    <label for="ignored_exceptions"\n-                           i18n:translate="label_ignored_exception">Ignored exception types</label>\n-\n-                    <textarea name="ignored_exceptions:lines"\n-                              id="ignored_exceptions"\n-                              cols="40"\n-                              rows="3"\n-                              tal:content="python: \'\\n\'.join(props[\'ignored_exceptions\'])"></textarea>\n-                </div>\n-\n-                <div class="formControls">\n-                    <input class="btn btn-primary"\n-                           type="submit"\n-                           name="submit"\n-                           value="Save"\n-                           i18n:attributes="value label_save;" />\n-                </div>\n-\n-            </fieldset>\n-\n-        </form>\n-    </div>\n-\n-</metal:main>\n-\n-</body>\n-</html>\ndiff --git a/Products/CMFPlone/skins/plone_prefs/prefs_error_log_form.pt.metadata b/Products/CMFPlone/skins/plone_prefs/prefs_error_log_form.pt.metadata\ndeleted file mode 100644\nindex d9c2bf48c9..0000000000\n--- a/Products/CMFPlone/skins/plone_prefs/prefs_error_log_form.pt.metadata\n+++ /dev/null\n@@ -1,5 +0,0 @@\n-[default]\n-title=Error Log\n-\n-[security]\n-View = 0:Manager\ndiff --git a/Products/CMFPlone/skins/plone_prefs/prefs_error_log_setProperties.py b/Products/CMFPlone/skins/plone_prefs/prefs_error_log_setProperties.py\ndeleted file mode 100644\nindex 254eba829e..0000000000\n--- a/Products/CMFPlone/skins/plone_prefs/prefs_error_log_setProperties.py\n+++ /dev/null\n@@ -1,20 +0,0 @@\n-## Script (Python) "prefs_error_log_setProperties"\n-##bind container=container\n-##bind context=context\n-##bind namespace=\n-##bind script=script\n-##bind subpath=traverse_subpath\n-##parameters=keep_entries,ignored_exceptions,copy_to_zlog=0\n-##title=\n-\n-from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.utils import safe_nativestring\n-\n-request = context.REQUEST\n-\n-ignored_exceptions = map(safe_nativestring, ignored_exceptions)\n-context.error_log.setProperties(keep_entries, copy_to_zlog, ignored_exceptions)\n-context.plone_utils.addPortalMessage(_(\'Changes made.\'))\n-\n-return request.RESPONSE.redirect(\n-            context.absolute_url() + \'/prefs_error_log_form\')\ndiff --git a/Products/CMFPlone/skins/plone_prefs/prefs_error_log_showEntry.pt.metadata b/Products/CMFPlone/skins/plone_prefs/prefs_error_log_showEntry.pt.metadata\ndeleted file mode 100644\nindex 3028b2bbc4..0000000000\n--- a/Products/CMFPlone/skins/plone_prefs/prefs_error_log_showEntry.pt.metadata\n+++ /dev/null\n@@ -1,5 +0,0 @@\n-[default]\n-title=Error Log Entry\n-\n-[security]\n-View=0:Authenticated\ndiff --git a/Products/CMFPlone/skins/plone_prefs/prefs_error_log_update.py b/Products/CMFPlone/skins/plone_prefs/prefs_error_log_update.py\ndeleted file mode 100644\nindex b636dda8f1..0000000000\n--- a/Products/CMFPlone/skins/plone_prefs/prefs_error_log_update.py\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-## Script (Python) "prefs_error_log_update"\n-## Giorgio, Lorty - Plone Castle Sprint\n-\n-from Products.CMFPlone import PloneMessageFactory as _\n-\n-request = context.REQUEST\n-membership_tool = context.portal_membership\n-member = membership_tool.getAuthenticatedMember()\n-\n-if getattr(request, \'form.button.search\', None) is not None:\n-    search = request.form.get(\'search_entry\')\n-    if search == \'\':\n-        member.setProperties(error_log_update=0.0)\n-        context.plone_utils.addPortalMessage(_(\'Showing all entries\'))\n-        return request.RESPONSE.redirect(context.absolute_url() + \'/prefs_error_log_form\')\n-    return request.RESPONSE.redirect(context.absolute_url() + \'/prefs_error_log_showEntry?id=%s\' % search)\n-elif getattr(request, \'form.button.showall\', None) is not None:\n-    member.setProperties(error_log_update=0.0)\n-    context.plone_utils.addPortalMessage(_(\'Showing all entries\'))\n-    return request.RESPONSE.redirect(context.absolute_url() + \'/prefs_error_log_form\')\n-elif getattr(request, \'form.button.clear\', None) is not None:\n-    member.setProperties(error_log_update=DateTime().timeTime())\n-    context.plone_utils.addPortalMessage(_(\'Entries cleared\'))\n-    return request.RESPONSE.redirect(context.absolute_url() + \'/prefs_error_log_form\')\n-else:\n-    return request.RESPONSE.redirect(context.absolute_url() + \'/prefs_error_log_form\')\ndiff --git a/Products/CMFPlone/skins/plone_scripts/externalEditorEnabled.py b/Products/CMFPlone/skins/plone_scripts/externalEditorEnabled.py\nindex b31ebce4ea..ad62e1c912 100644\n--- a/Products/CMFPlone/skins/plone_scripts/externalEditorEnabled.py\n+++ b/Products/CMFPlone/skins/plone_scripts/externalEditorEnabled.py\n@@ -16,11 +16,6 @@\n if mtool.isAnonymousUser():\n     return False\n \n-# Temporary content cannot be changed through EE (raises AttributeError)\n-portal_factory = getToolByName(portal, \'portal_factory\', None)\n-if portal_factory and portal_factory.isTemporary(context):\n-    return False\n-\n # Check if the member property\n member = mtool.getAuthenticatedMember()\n if not member.getProperty(\'ext_editor\', False):\ndiff --git a/Products/CMFPlone/skins/plone_templates/index_html.pt b/Products/CMFPlone/skins/plone_templates/index_html.pt\ndeleted file mode 100644\nindex bceba801f3..0000000000\n--- a/Products/CMFPlone/skins/plone_templates/index_html.pt\n+++ /dev/null\n@@ -1,24 +0,0 @@\n-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"\n-      xmlns:tal="http://xml.zope.org/namespaces/tal"\n-      xmlns:metal="http://xml.zope.org/namespaces/metal"\n-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n-      lang="en"\n-      metal:use-macro="context/@@main_template/macros/master"\n-      i18n:domain="plone">\n-\n-<body>\n-\n-<metal:main fill-slot="main">\n-\n-    <h1 class="documentFirstHeading" i18n:translate="heading_welcome_to">Welcome to\n-        <span i18n:name="sitename" tal:omit-tag="" tal:content="context/Title">Portal title</span>\n-    </h1>\n-\n-    <p class="documentDescription" tal:content="context/description">\n-        Portal description\n-    </p>\n-\n-</metal:main>\n-\n-</body>\n-</html>\ndiff --git a/Products/CMFPlone/skins/plone_templates/index_html.pt.metadata b/Products/CMFPlone/skins/plone_templates/index_html.pt.metadata\ndeleted file mode 100644\nindex 6660362fbc..0000000000\n--- a/Products/CMFPlone/skins/plone_templates/index_html.pt.metadata\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-[default]\n-title=Default frontpage\ndiff --git a/Products/CMFPlone/tests/base_tag_not_present.txt b/Products/CMFPlone/tests/base_tag_not_present.txt\nindex 786e5cec3c..1a7960154a 100644\n--- a/Products/CMFPlone/tests/base_tag_not_present.txt\n+++ b/Products/CMFPlone/tests/base_tag_not_present.txt\n@@ -9,7 +9,7 @@ that in fact is not being injected in some other way.\n   >>> from plone.app.testing import SITE_OWNER_PASSWORD\n   >>> app = layer[\'app\']\n   >>> browser = Browser(app)\n-  \n+\n   >>> browser.open(\'http://nohost/plone/login_form\')\n   >>> browser.getControl(\'Login Name\').value = SITE_OWNER_NAME\n   >>> browser.getControl(\'Password\').value = SITE_OWNER_PASSWORD\n@@ -20,13 +20,13 @@ Create object\n   >>> browser.getLink(\'Page\').click()\n   >>> browser.getControl(\'Title\').value = \'Front Page\'\n   >>> browser.getControl(\'Save\').click()\n-  \n+\n Check object view\n \n   >>> browser.open(\'http://nohost/plone/front-page\')\n   >>> \'<base\' in browser.contents\n   False\n-  \n+\n Check edit view\n \n   >>> browser.open(\'http://nohost/plone/front-page/edit\')\ndiff --git a/Products/CMFPlone/tests/csrf.txt b/Products/CMFPlone/tests/csrf.txt\nindex e64145723a..dfc77bb85c 100644\n--- a/Products/CMFPlone/tests/csrf.txt\n+++ b/Products/CMFPlone/tests/csrf.txt\n@@ -313,7 +313,7 @@ Now rename\n   >>> browser.getControl(name=\'entries.role_Editor:records\').value\n   []\n \n-Change the value of the second _authenticator and check for Exception  \n+Change the value of the second _authenticator and check for Exception\n \n   >>> browser.getControl(name=\'_authenticator\', index=1).value = \'invalid!\'\n   >>> browser.getControl(name=\'entries.role_Editor:records\').value = [\'True\']\ndiff --git a/Products/CMFPlone/tests/robot/robodoc/README.rst b/Products/CMFPlone/tests/robot/robodoc/README.rst\nindex 225c445d98..d25585bf30 100644\n--- a/Products/CMFPlone/tests/robot/robodoc/README.rst\n+++ b/Products/CMFPlone/tests/robot/robodoc/README.rst\n@@ -62,7 +62,7 @@ or\n \n .. code:: bash\n \n-   $\xc2\xa0CONFIGURE_PACKAGES=plone.app.iterate APPLY_PROFILES=plone.app.contenttypes:plone-content,plone.app.iterate:plone.app.iterate bin/robot-server plone.app.robotframework.PLONE_ROBOT_TESTING\n+   $\xc2\xa0CONFIGURE_PACKAGES=plone.app.iterate APPLY_PROFILES=plone.app.contenttypes:plone-content,plone.app.iterate:default bin/robot-server plone.app.robotframework.PLONE_ROBOT_TESTING\n \n and\n \ndiff --git a/Products/CMFPlone/tests/robot/robodoc/collaboration-advanced_control.robot b/Products/CMFPlone/tests/robot/robodoc/collaboration-advanced_control.robot\nindex 4427dea3f3..a81141374d 100644\n--- a/Products/CMFPlone/tests/robot/robodoc/collaboration-advanced_control.robot\n+++ b/Products/CMFPlone/tests/robot/robodoc/collaboration-advanced_control.robot\n@@ -37,8 +37,8 @@ Show state menu\n \n     Click link  workflow-transition-advanced\n     Wait until element is visible\n-    ...   css=div.plone-modal-content\n+    ...   css=div.modal-content\n \n     Capture and crop page screenshot\n     ...  ${CURDIR}/_robot/workflow-advanced.png\n-    ...  css=div.plone-modal-wrapper\n+    ...  css=div.modal-wrapper\ndiff --git a/Products/CMFPlone/tests/robot/robodoc/config-screens.robot b/Products/CMFPlone/tests/robot/robodoc/config-screens.robot\nindex 230a0e4552..36697f6176 100644\n--- a/Products/CMFPlone/tests/robot/robodoc/config-screens.robot\n+++ b/Products/CMFPlone/tests/robot/robodoc/config-screens.robot\n@@ -78,7 +78,7 @@ Show Editing setup screen\n     ...  css=#content\n \n Show Error log setup screen\n-    Go to  ${PLONE_URL}/prefs_error_log_form\n+    Go to  ${PLONE_URL}/@@error-log-form\n     Capture and crop page screenshot\n     ...  ${CURDIR}/_robot/errorlog-setup.png\n     ...  css=#content\n@@ -141,10 +141,6 @@ Show Resource Registry screen\n     Capture and crop page screenshot\n     ...  ${CURDIR}/_robot/resource-registry.png\n     ...  css=#content\n-    Click link  Less Variables\n-    Capture and crop page screenshot\n-    ...  ${CURDIR}/_robot/less-variables.png\n-    ...  css=#content\n \n Show Search setup screen\n     Go to  ${PLONE_URL}/@@search-controlpanel\n@@ -213,4 +209,4 @@ Changing the logo\n     Capture and crop page screenshot\n     ...    ${CURDIR}/_robot/change-logo-in-site-control-panel.png\n     ...    css=#content\n-    ...    css=#formfield-form-widgets-site_logo\n\\ No newline at end of file\n+    ...    css=#formfield-form-widgets-site_logo\ndiff --git a/Products/CMFPlone/tests/robot/robodoc/managing-working_copy.robot b/Products/CMFPlone/tests/robot/robodoc/managing-working_copy.robot\nindex 797e17ee51..6677e9cb83 100644\n--- a/Products/CMFPlone/tests/robot/robodoc/managing-working_copy.robot\n+++ b/Products/CMFPlone/tests/robot/robodoc/managing-working_copy.robot\n@@ -8,7 +8,7 @@ Suite Teardown  Common Suite Teardown\n *** Variables ***\n \n @{CONFIGURE_PACKAGES}  plone.app.iterate\n-@{APPLY_PROFILES}  plone.app.contenttypes:plone-content  plone.app.iterate:plone.app.iterate\n+@{APPLY_PROFILES}  plone.app.contenttypes:plone-content  plone.app.iterate:default\n # ${REGISTER_TRANSLATIONS}  ${CURDIR}/../../_locales\n \n *** Test Cases ***\ndiff --git a/Products/CMFPlone/tests/robot/robodoc/working_with_tinymce.robot b/Products/CMFPlone/tests/robot/robodoc/working_with_tinymce.robot\nindex acd9963e8a..296ba742c0 100644\n--- a/Products/CMFPlone/tests/robot/robodoc/working_with_tinymce.robot\n+++ b/Products/CMFPlone/tests/robot/robodoc/working_with_tinymce.robot\n@@ -39,14 +39,14 @@ Show TinyMCE image\n \n     Click element  css=#mceu_15 button\n     Wait until element is visible\n-    ...  css=h2.plone-modal-title\n+    ...  css=h2.modal-title\n     Wait until element is visible\n     ...  css=div.common-controls\n-    \n+\n     Capture and crop page screenshot\n     ...  ${CURDIR}/_robot/tinymce-imgdialog.png\n     ...  css=div.outer-wrapper\n-    ...  css=div.plone-modal-content\n+    ...  css=div.modal-content\n \n Show TinyMCE insert links\n     Go to  ${PLONE_URL}/samplepage\n@@ -61,7 +61,7 @@ Show TinyMCE insert links\n     Capture and crop page screenshot\n     ...  ${CURDIR}/_robot/tinymce-linkdialog.png\n     ...  css=div.outer-wrapper\n-    ...  css=div.plone-modal-content\n+    ...  css=div.modal-content\n \n Show TinyMCE insert tables\n     Go to  ${PLONE_URL}/samplepage\ndiff --git a/Products/CMFPlone/tests/robot/test_actionmenu.robot b/Products/CMFPlone/tests/robot/test_actionmenu.robot\nindex 945faefd9a..4182e6a59e 100644\n--- a/Products/CMFPlone/tests/robot/test_actionmenu.robot\n+++ b/Products/CMFPlone/tests/robot/test_actionmenu.robot\n@@ -107,11 +107,11 @@ I click outside of menu\n \n workflow link is clicked\n     # store current state\n-    ${OLD_STATE} =  Get Text  xpath=(//span[contains(@class,\'state-\')])[2]\n+    ${OLD_STATE} =  Get Text  xpath=(//span[contains(@class,\'state-\')])\n     Set Suite Variable  ${OLD_STATE}  ${OLD_STATE}\n     Given patterns are loaded\n     Click Link  xpath=//li[@id=\'plone-contentmenu-workflow\']/a\n-    Click Link  xpath=(//li[@id=\'plone-contentmenu-workflow\']/ul/li/a)[1]\n+    Click Link  xpath=(//li[@id=\'plone-contentmenu-workflow\']/div/ul/li/a)[1]\n     Page Should Contain  Item state changed.\n     # FIXME: The above \'Click Link\' fails on Internet Explorer, but the\n     # following keywords \'workflow link is clicked softly\' passes. Until we\n@@ -140,17 +140,17 @@ Open Menu\n Open Action Menu\n     Given patterns are loaded\n     Click link  xpath=//li[@id=\'plone-contentmenu-actions\']/a\n-    Wait until keyword succeeds  5  1  Element Should Be Visible  css=.plonetoolbar-content-action\n+    Wait until keyword succeeds  5  1  Element Should Be Visible  css=#plone-contentmenu-actions .collapse\n \n I copy the page\n     Open Action Menu\n-    Click Link  link=Copy\n+    Click Link  css=#plone-contentmenu-actions .actionicon-object_buttons-copy\n     Page should contain  copied\n \n I paste\n     Go to  ${PLONE_URL}\n     Open Action Menu\n-    Click Link  link=Paste\n+    Click Link  css=#plone-contentmenu-actions .actionicon-object_buttons-paste\n \n \n # --- THEN -------------------------------------------------------------------\n@@ -183,7 +183,7 @@ I should see \'${message}\' in the page\n \n state should have changed\n     Wait until page contains  Item state changed\n-    ${NEW_STATE} =  Get Text  xpath=(//span[contains(@class,\'state-\')])[2]\n+    ${NEW_STATE} =  Get Text  xpath=(//span[contains(@class,\'state-\')])\n     # Should Not Be Equal  ${NEW_STATE}  ${OLD_STATE}\n \n second menu should be visible\ndiff --git a/Products/CMFPlone/tests/robot/test_controlpanel_actions.robot b/Products/CMFPlone/tests/robot/test_controlpanel_actions.robot\nindex 7444e96e9a..afee018bef 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_actions.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_actions.robot\n@@ -71,12 +71,16 @@ I modify an action title\n   Click Link    css=section:nth-child(3) li:first-child a\n   Wait until page contains  Action Settings\n   Input Text for sure  form.widgets.title  A new site map\n+  Set Focus To Element  css=.pattern-modal-buttons > button\n+  Wait Until Element Is Visible  css=.pattern-modal-buttons > button\n   Click Element  css=.pattern-modal-buttons > button\n \n I change the actions order\n   Click Link    css=section:nth-child(3) li:first-child a\n   Wait until page contains  Action Settings\n   Input Text for sure  form.widgets.position  3\n+  Set Focus To Element  css=.pattern-modal-buttons > button\n+  Wait Until Element Is Visible  css=.pattern-modal-buttons > button\n   Click Element  css=.pattern-modal-buttons > button\n \n I add a new action\n@@ -84,14 +88,19 @@ I add a new action\n   Wait until page contains  New action\n   Select From List By Label   form.widgets.category:list   User actions\n   Input Text for sure  form.widgets.id  favorites\n+  Set Focus To Element  css=.pattern-modal-buttons > button\n+  Wait Until Element Is Visible  css=.pattern-modal-buttons > button\n   Click Element  css=.pattern-modal-buttons > button\n   Wait until page contains  favorites\n-  Execute JavaScript  window.scrollTo(0, document.body.scrollHeight)\n+  Set Focus To Element  css=section.category:last-child li:last-child a\n+  Wait Until Element Is Visible  css=section.category:last-child li:last-child a\n   Sleep  1\n-  Click Link     css=section.category:last-child li:last-child a\n+  Click Link  css=section.category:last-child li:last-child a\n   Wait until page contains  Action Settings\n   Input Text for sure  form.widgets.title  My favorites\n   Input Text for sure  form.widgets.url_expr  string:\\${globals_view/navigationRootUrl}/favorites\n+  Set Focus To Element  css=.pattern-modal-buttons > button\n+  Wait Until Element Is Visible  css=.pattern-modal-buttons > button\n   Click Element  css=.pattern-modal-buttons > button\n \n I delete an action\ndiff --git a/Products/CMFPlone/tests/robot/test_controlpanel_navigation.robot b/Products/CMFPlone/tests/robot/test_controlpanel_navigation.robot\nindex 80a85c8bf9..bdad652733 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_navigation.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_navigation.robot\n@@ -68,26 +68,36 @@ a private document \'${title}\'\n \n I disable generate tabs\n   Unselect Checkbox  form.widgets.generate_tabs:list\n+  Set Focus To Element  form.buttons.save\n+  Wait Until Element Is Visible  form.buttons.save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n I disable non-folderish tabs\n   Unselect Checkbox  xpath=//input[@value=\'Document\']\n+  Set Focus To Element  form.buttons.save\n+  Wait Until Element Is Visible  form.buttons.save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n I remove \'${portal_type}\' from the displayed types list\n   Unselect Checkbox  xpath=//input[@value=\'Document\']\n+  Set Focus To Element  form.buttons.save\n+  Wait Until Element Is Visible  form.buttons.save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n I enable filtering by workflow states\n   Select Checkbox  name=form.widgets.filter_on_workflow:list\n+  Set Focus To Element  form.buttons.save\n+  Wait Until Element Is Visible  form.buttons.save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n I choose to show \'${workflow_state}\' items\n   Select Checkbox  xpath=//input[@value=\'${workflow_state}\']\n+  Set Focus To Element  form.buttons.save\n+  Wait Until Element Is Visible  form.buttons.save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \ndiff --git a/Products/CMFPlone/tests/robot/test_controlpanel_search.robot b/Products/CMFPlone/tests/robot/test_controlpanel_search.robot\nindex 6d9bebe766..dc0185a2b4 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_search.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_search.robot\n@@ -49,13 +49,17 @@ the search control panel\n \n I enable livesearch\n   Select Checkbox  form.widgets.enable_livesearch:list\n+  Set Focus To Element  css=#form-buttons-save\n+  Wait Until Element Is Visible  css=#form-buttons-save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n I exclude the \'${portal_type}\' type from search\n   # Make sure we see the checkbox, in expanded in jenkins it gets a bit under the toolbar\n-  Click Link  css=a.plone-toolbar-logo\n+  Set Focus To Element  xpath=//input[@name=\'form.widgets.types_not_searched:list\' and @value=\'${portal_type}\']\n   Unselect Checkbox  xpath=//input[@name=\'form.widgets.types_not_searched:list\' and @value=\'${portal_type}\']\n+  Set Focus To Element  css=#form-buttons-save\n+  Wait Until Element Is Visible  css=#form-buttons-save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \ndiff --git a/Products/CMFPlone/tests/robot/test_controlpanel_security.robot b/Products/CMFPlone/tests/robot/test_controlpanel_security.robot\nindex 65175f7d01..4b7066cb31 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_security.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_security.robot\n@@ -11,7 +11,6 @@ Resource  keywords.robot\n Test Setup  Run keywords  Plone Test Setup\n Test Teardown  Run keywords  Plone Test Teardown\n \n-\n *** Test Cases ***************************************************************\n \n Scenario: Enable self registration in the Security Control Panel\n@@ -143,6 +142,8 @@ A user folder should be created when a user registers and logs in to the site\n   Input Text for sure  form.widgets.email  joe@test.com\n   Input Text for sure  form.widgets.password  supersecret\n   Input Text for sure  form.widgets.password_ctl  supersecret\n+  Set Focus To Element  css=#form-buttons-register\n+  Wait Until Element Is Visible  css=#form-buttons-register\n   Click Button  Register\n \n   # I login to the site\n@@ -175,6 +176,8 @@ UUID should be used for the user id\n   Input Text for sure  form.widgets.email  joe@test.com\n   Input Text for sure  form.widgets.password  supersecret\n   Input Text for sure  form.widgets.password_ctl  supersecret\n+  Set Focus To Element  css=#form-buttons-register\n+  Wait Until Element Is Visible  css=#form-buttons-register\n   Click Button  Register\n \n   # I login to the site\n@@ -184,9 +187,8 @@ UUID should be used for the user id\n   Input text for sure  __ac_password  supersecret\n   Click Button  Log in\n   Wait until page contains  You are now logged in\n-\n   # XXX: Here we can\'t really test that this is a uuid, since it\'s random, so\n   # we just check that user id is not equal to username or email\n-  ${userid}=  Get Text  xpath=//li[@id=\'portal-personaltools\']//li[contains(@class, \'plone-toolbar-submenu-header\')]//span\n+  ${userid}=  Get Text  xpath=//a[@id=\'personaltools-menulink\']\n   Should Not Be Equal As Strings  ${userid}  joe\n   Should Not Be Equal As Strings  ${userid}  joe@test.com\ndiff --git a/Products/CMFPlone/tests/robot/test_controlpanel_site.robot b/Products/CMFPlone/tests/robot/test_controlpanel_site.robot\nindex e425f19b9c..81fee76ee0 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_site.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_site.robot\n@@ -63,31 +63,43 @@ the site control panel\n \n I enable the sitemap\n   Given patterns are loaded\n+  Set Focus To Element  css=#formfield-form-widgets-enable_sitemap\n+  Wait Until Element Is Visible  css=#formfield-form-widgets-enable_sitemap\n   Select Checkbox  form.widgets.enable_sitemap:list\n+  Set Focus To Element  css=#form-buttons-save\n+  Wait Until Element Is Visible  css=#form-buttons-save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n I set the site title to \'${site_title}\'\n   Given patterns are loaded\n   Input Text  name=form.widgets.site_title  ${site_title}\n+  Set Focus To Element  css=#form-buttons-save\n+  Wait Until Element Is Visible  css=#form-buttons-save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n I set a custom logo\n   Given patterns are loaded\n   Choose File  name=form.widgets.site_logo  ${PATH_TO_TEST_FILES}/pixel.png\n+  Set Focus To Element  css=#form-buttons-save\n+  Wait Until Element Is Visible  css=#form-buttons-save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n I enable dublin core metadata\n   Given patterns are loaded\n   Select Checkbox  form.widgets.exposeDCMetaTags:list\n+  Set Focus To Element  css=#form-buttons-save\n+  Wait Until Element Is Visible  css=#form-buttons-save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n I add a Javascript snippet to the webstats javascript\n   Given patterns are loaded\n   Input Text  name=form.widgets.webstats_js  <script id="webstats_snippet"></script>\n+  Set Focus To Element  css=#form-buttons-save\n+  Wait Until Element Is Visible  css=#form-buttons-save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \ndiff --git a/Products/CMFPlone/tests/robot/test_controlpanel_social.robot b/Products/CMFPlone/tests/robot/test_controlpanel_social.robot\nindex 233a36d829..70f106d2e0 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_social.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_social.robot\n@@ -45,6 +45,8 @@ the social control panel\n I disable social\n   UnSelect Checkbox  form.widgets.share_social_data:list\n   Sleep  2\n+  Set Focus To Element  css=#form-buttons-save\n+  Wait Until Element Is Visible  css=#form-buttons-save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n@@ -53,6 +55,8 @@ I provide social settings\n   Input Text  name=form.widgets.facebook_app_id  123456\n   Input Text  name=form.widgets.facebook_username  plonecms\n   Sleep  2\n+  Set Focus To Element  css=#form-buttons-save\n+  Wait Until Element Is Visible  css=#form-buttons-save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \ndiff --git a/Products/CMFPlone/tests/robot/test_edit_user_schema.robot b/Products/CMFPlone/tests/robot/test_edit_user_schema.robot\nindex 6fa463c2d7..bbb8e87b4f 100644\n--- a/Products/CMFPlone/tests/robot/test_edit_user_schema.robot\n+++ b/Products/CMFPlone/tests/robot/test_edit_user_schema.robot\n@@ -93,58 +93,52 @@ site registration enabled\n I add a new text field to the member fields\n   Go to  ${PLONE_URL}/@@member-fields\n   Wait until page contains element  css=#add-field\n-  Click Button  Add new field\xe2\x80\xa6\n+  Click Link  Add new field\xe2\x80\xa6\n   Wait Until Element Is visible  css=#add-field-form #form-widgets-title\n   Input Text  css=#add-field-form #form-widgets-title  Test Field\n   Press Key  css=#add-field-form #form-widgets-title  \\\\09\n   Select From List By Label  css=#form-widgets-factory  Text line (String)\n   Click button  css=.pattern-modal-buttons button#form-buttons-add\n-  # XXX: This is really really bad! We need a UI notification like:\n-  # Wait until page contains  Field created.\n-  Sleep  1\n+  Wait until page contains  Field added successfully.\n+\n+I Open the test_field Settings\n+  Go to  ${PLONE_URL}/@@member-fields\n+  Wait until page contains element  css=div[data-field_id=\'test_field\']\n+  Set Focus To Element  css=div[data-field_id=\'test_field\'] a.fieldSettings\n+  Wait Until Keyword Succeeds  3  100ms  Click link  css=div[data-field_id=\'test_field\'] a.fieldSettings\n \n I add a new required text field to the member fields\n   Go to  ${PLONE_URL}/@@member-fields\n   Wait until page contains element  css=#add-field\n-  Click Button  Add new field\xe2\x80\xa6\n+  Click Link  Add new field\xe2\x80\xa6\n   Wait Until Element Is visible  css=#add-field-form #form-widgets-title\n   Input Text  css=#add-field-form #form-widgets-title  Test Field\n   Press Key  css=#add-field-form #form-widgets-title  \\\\09\n   Select From List By Label  css=#form-widgets-factory  Text line (String)\n   Select Checkbox  form.widgets.required:list\n   Click button  css=.pattern-modal-buttons button#form-buttons-add\n-  # XXX: This is really really bad! We need a UI notification like:\n-  # Wait until page contains  Field created.\n-  Sleep  1\n+  Wait until page contains  Field added successfully.\n \n choose to show the field on registration\n-  Go to  ${PLONE_URL}/@@member-fields\n-  Wait until page contains element  css=div[data-field_id=\'test_field\']\n-  Click link  css=div[data-field_id=\'test_field\'] a.fieldSettings\n+  I Open the test_field Settings\n   Wait Until Element Is visible  form.widgets.IUserFormSelection.forms:list\n   Select Checkbox  css=#form-widgets-IUserFormSelection-forms-0\n   Click button  css=.pattern-modal-buttons button#form-buttons-save\n-  # XXX: This is really really bad! We need a UI notification like:\n-  # Wait until page contains  Field created.\n-  Sleep  1\n+  Wait until page contains  Data successfully updated.\n \n choose to show the field in the user profile\n-  Go to  ${PLONE_URL}/@@member-fields\n-  Wait until page contains element  css=div[data-field_id=\'test_field\']\n-  Click link  css=div[data-field_id=\'test_field\'] a.fieldSettings\n+  I Open the test_field Settings\n   Wait Until Element Is visible  form.widgets.IUserFormSelection.forms:list\n   Select Checkbox  css=#form-widgets-IUserFormSelection-forms-1\n   Click button  css=.pattern-modal-buttons button#form-buttons-save\n-  # XXX: This is really really bad! We need a UI notification like:\n-  # Wait until page contains  Field created.\n-  Sleep  1\n+  Wait until page contains  Data successfully updated.\n \n I move the new field to the top\n   # XXX: Drag and drop is not working!!!\n   Drag And Drop  xpath=//div[@data-field_id="test_field"]//span[contains(@class, "draghandle")]  xpath=//div[@data-field_id="home_page"]\n \n add a min/max constraint to the field\n-  Click Link  xpath=//div[@data-field_id=\'test_field\']//a[contains(@class, \'fieldSettings\')]\n+  I Open the test_field Settings\n   Wait until page contains element  form.widgets.min_length\n   Input Text  form.widgets.min_length  4\n   Input Text  form.widgets.max_length  6\n@@ -169,14 +163,15 @@ a logged-in user will see the field in the user profile\n \n a logged-in user will see the required field in the user profile\n   a logged-in user will see the field in the user profile\n-  XPath Should Match X Times  //div[@id=\'formfield-form-widgets-test_field\']//span[contains(@class, \'required\')]  1  message=test_field should be required\n+  Page Should Contain Element  //div[@id=\'formfield-form-widgets-test_field\']//span[contains(@class, \'required\')]  limit=1  message=test_field should be required\n \n a logged-in user will see the field on top of the user profile\n   a logged-in user will see the field in the user profile\n-  XPath Should Match X Times  //form[@id=\'form\']/div[1]//input[@id=\'form-widgets-test_field\']  1  message=test_field should be on top\n+  Page Should Contain Element  //form[@id=\'form\']/div[1]//input[@id=\'form-widgets-test_field\']  limit=1  message=test_field should be on top\n \n a logged-in user will see a field with min/max constraints\n   a logged-in user will see the field in the user profile\n+  Input Text  form.widgets.email  test@plone.org\n   Input Text  form.widgets.test_field  1\n   Click Button  Save\n   Wait until page contains  There were some errors.\ndiff --git a/Products/CMFPlone/tests/robot/test_folder_contents.robot b/Products/CMFPlone/tests/robot/test_folder_contents.robot\nindex 6e3275a58b..78092f2298 100644\n--- a/Products/CMFPlone/tests/robot/test_folder_contents.robot\n+++ b/Products/CMFPlone/tests/robot/test_folder_contents.robot\n@@ -61,7 +61,9 @@ I click the \'${link_name}\' link\n I select all the elements\n     Wait until page contains element  css=.pat-structure .select-all\n     Wait until page contains element  css=.itemRow\n-    Click Element  css=.pat-structure .select-all\n+    ${select_all_selector}  Set Variable  .pat-structure .select-all\n+    Wait Until Element Is Visible  css=${select_all_selector}\n+    Click Element  css=${select_all_selector}\n \n the four elements got selected\n     Checkbox Should Be Selected  css=tr[data-id="doc1"] input\ndiff --git a/Products/CMFPlone/tests/robot/test_linkintegrity.robot b/Products/CMFPlone/tests/robot/test_linkintegrity.robot\nindex 03d386a767..bf2b03adcf 100644\n--- a/Products/CMFPlone/tests/robot/test_linkintegrity.robot\n+++ b/Products/CMFPlone/tests/robot/test_linkintegrity.robot\n@@ -69,23 +69,23 @@ a page to edit\n \n a link in rich text\n   Go To  ${PLONE_URL}/bar/edit\n-  Wait until element is visible  css=.mce-edit-area iframe\n-  Select Frame  css=.mce-edit-area iframe\n+  Wait until element is visible  css=.tox-edit-area iframe\n+  Select Frame  css=.tox-edit-area iframe\n   Input text  css=.mce-content-body  foo\n   Execute Javascript    function selectElementContents(el) {var range = document.createRange(); range.selectNodeContents(el); var sel = window.getSelection(); sel.removeAllRanges(); sel.addRange(range);} var el = document.getElementById("tinymce"); selectElementContents(el);\n   UnSelect Frame\n-  Click Button  css=div[aria-label="Insert/edit link"] button\n+  Click Button  css=button[aria-label="Insert/edit link"]\n \n   Given patterns are loaded\n   Wait until element is visible  css=.pat-relateditems .select2-input.select2-default\n   Click Element  css=.pat-relateditems .select2-input.select2-default\n-  Wait until element is visible  css=.pattern-relateditems-result.one-level-up a.pattern-relateditems-result-browse\n-  Click Element  css=.pattern-relateditems-result.one-level-up a.pattern-relateditems-result-browse\n+  Wait until element is visible  css=.pat-relateditems-result.one-level-up a.pat-relateditems-result-browse\n+  Click Element  css=.pat-relateditems-result.one-level-up a.pat-relateditems-result-browse\n   Wait until element is visible  xpath=(//span[contains(., \'Foo\')])\n   Click Element  xpath=(//span[contains(., \'Foo\')])\n   Wait until page contains  Foo\n \n-  Click Button  css=.plone-modal-footer .plone-btn-primary\n+  Click Button  css=.modal-footer .btn-primary\n   Click Button  css=#form-buttons-save\n \n \n@@ -142,10 +142,10 @@ remove link to page\n   Go To  ${PLONE_URL}/bar\n   Wait until element is visible  css=#contentview-edit a\n   Click Link  css=#contentview-edit a\n-  Wait until element is visible  css=.mce-edit-area iframe\n-  Select Frame  css=.mce-edit-area iframe\n+  Wait until element is visible  css=.tox-edit-area iframe\n+  Select Frame  css=.tox-edit-area iframe\n   Input text  css=.mce-content-body  foo\n   Execute Javascript    function selectElementContents(el) {var range = document.createRange(); range.selectNodeContents(el); var sel = window.getSelection(); sel.removeAllRanges(); sel.addRange(range);} var el = document.getElementById("tinymce"); selectElementContents(el);\n   UnSelect Frame\n-  Click Button  css=div[aria-label="Remove link"] button\n+  Click Button  css=button[aria-label="Remove link"]\n   Click Button  css=#form-buttons-save\ndiff --git a/Products/CMFPlone/tests/robot/test_overlays.robot b/Products/CMFPlone/tests/robot/test_overlays.robot\nindex bebb048492..deee0bdd98 100644\n--- a/Products/CMFPlone/tests/robot/test_overlays.robot\n+++ b/Products/CMFPlone/tests/robot/test_overlays.robot\n@@ -180,7 +180,7 @@ Scenario: New user overlay remains on wrong data\n       And I trigger the add a new user action\n      When I send the register form\n      Then overlay should remain open\n-      And overlay shows an error\n+      And overlay requires to compile a field\n \n Scenario: New user overlay closes on valid data\n     Given a logged-in site administrator\n@@ -229,20 +229,20 @@ I click the \'${link_name}\' link\n the \'${link_name}\' overlay\n     Wait until page contains  ${link_name}\n     Click Link  xpath=//a[descendant-or-self::*[contains(text(), \'${link_name}\')]]\n-    Wait until keyword succeeds  30  1  Page should contain element  css=div.plone-modal-dialog\n+    Wait until keyword succeeds  30  1  Page should contain element  css=div.modal-dialog\n \n overlay should open\n-    Wait until keyword succeeds  30  1  Element Should Be Visible  css=div.plone-modal-dialog\n+    Wait until keyword succeeds  30  1  Element Should Be Visible  css=div.modal-dialog\n \n overlay should remain open\n-    Wait until page contains element  css=div.plone-modal-wrapper\n-    Wait until element is visible  css=div.plone-modal-wrapper\n+    Wait until page contains element  css=div.modal-wrapper\n+    Wait until element is visible  css=div.modal-wrapper\n \n I close the overlay\n-    Click Element  css=div.plone-modal-header a.plone-modal-close\n+    Click Element  css=div.modal-header button.modal-close\n \n overlay should close\n-    Wait until keyword succeeds  40  1  Page should not contain element  css=div.plone-modal-dialog\n+    Wait until keyword succeeds  40  1  Page should not contain element  css=div.modal-dialog\n \n login overlay shows an error\n     Wait Until Page Contains  Error\n@@ -250,20 +250,23 @@ login overlay shows an error\n overlay shows an error\n     Wait Until Page Contains  There were errors\n \n+overlay requires to compile a field\n+    Wait Until Page Contains  Required input is missing\n+\n I \'${action}\' the form\n-    Wait until keyword succeeds  30  1  Element Should Be Visible  css=div.plone-modal-footer button[name="form.buttons.${action}"]\n-    Click Element  css=div.plone-modal-footer button[name="form.buttons.${action}"]\n+    Wait until keyword succeeds  30  1  Element Should Be Visible  css=div.modal-footer button[name="form.buttons.${action}"]\n+    Click Element  css=div.modal-footer button[name="form.buttons.${action}"]\n \n I enter wrong credentials\n     Input text  __ac_name  wrong\n     Input text  __ac_password  user\n-    Click Button  css=div.plone-modal-footer button\n+    Click Button  css=div.modal-footer button\n \n I enter valid credentials\n     Wait until page contains element  name=__ac_name\n     Input text for sure  __ac_name  ${SITE_OWNER_NAME}\n     Input text for sure  __ac_password  ${SITE_OWNER_PASSWORD}\n-    Click Button  css=div.plone-modal-footer button\n+    Click Button  css=div.modal-footer button\n \n I enter valid user data\n     Wait until page contains element  name=form.widgets.password_ctl\n@@ -278,8 +281,8 @@ I enter valid register user data\n     Input text  form.widgets.email          my@email.eu\n \n I send the register form\n-    Wait until page contains element  css=div.plone-modal-footer #form-buttons-register\n-    Click Element  css=div.plone-modal-footer #form-buttons-register\n+    Wait until page contains element  css=div.modal-footer #form-buttons-register\n+    Click Element  css=div.modal-footer #form-buttons-register\n \n I trigger the add a new user action\n     Click Element  id=add-user\n@@ -304,7 +307,7 @@ a document as the default view of the test folder\n     Wait until element is visible  id=contextSetDefaultPage\n     Click link  id=contextSetDefaultPage\n     Click element  id=doc\n-    Click element  css=div.plone-modal-footer button[name="form.buttons.Save"]\n+    Click element  css=div.modal-footer button[name="form.buttons.Save"]\n \n I change the default content view of the test folder\n     Go to  ${PLONE_URL}/${TEST_FOLDER}\n@@ -320,11 +323,11 @@ I trigger the \'${action}\' action menu item of the test folder\n     Click link  xpath=//li[@id=\'plone-contentmenu-actions\']/a\n     Wait until element is visible  id=plone-contentmenu-actions-${action}\n     Click link  id=plone-contentmenu-actions-${action}\n-    Wait until page contains Element  css=div.plone-modal-dialog\n+    Wait until page contains Element  css=div.modal-dialog\n \n I confirm deletion of the content\n     # Note: The \'delete\' button has no standard z3c.form name attribute\n-    Wait until keyword succeeds  2  2  Click Element  css=div.plone-modal-footer button#form-buttons-Delete\n+    Wait until keyword succeeds  2  2  Click Element  css=div.modal-footer button#form-buttons-Delete\n \n modals loaded\n-    Wait For Condition  return window.jQuery(\'.plone-modal-wrapper\').size() > 0\n+    Wait For Condition  return window.jQuery(\'.modal-wrapper\').size() > 0\ndiff --git a/Products/CMFPlone/tests/robot/test_querystring.robot b/Products/CMFPlone/tests/robot/test_querystring.robot\nindex be0c349ce6..ef22e81206 100644\n--- a/Products/CMFPlone/tests/robot/test_querystring.robot\n+++ b/Products/CMFPlone/tests/robot/test_querystring.robot\n@@ -134,10 +134,10 @@ Scenario Event end date query\n     and the querystring pattern\n     # Before date\n     When I activate the default operator in the criteria Event end date\n-    and Execute Javascript  $(\'.querystring-criteria-value .pattern-pickadate-date-wrapper > input[type="text"]\').pickadate(\'picker\').set(\'select\', new Date(2018, 7, 1))\n+    and Execute Javascript  $(\'.querystring-criteria-value input[type="date"]\').val(\'2018-07-01\')\n     Then we do not expect any hits\n \n-    # When Execute Javascript  $(\'.querystring-criteria-value .pattern-pickadate-date-wrapper > input[type="text"]\').pickadate(\'picker\').set(\'select\', new Date(2018, 7, 6))\n+    # When Execute Javascript  $(\'.querystring-criteria-value input[type="date"]\').val(\'2018-07-06\')\n \n     # !!! BUG in plone.app.robotframework?\n     # File "~/.buildout/shared-eggs/plone.app.event-3.2.1-py3.6.egg/plone/app/event/recurrence.py", line 77, in occurrences\n@@ -245,9 +245,9 @@ a bunch of folders\n \n a bunch of events\n     ${F1}=  a bunch of folders\n-    Create content  type=Event  title=Event1  start=2018-08-01 15:00  end=2018-08-01 17:00  container=${F1}\n-    Create content  type=Event  title=Event2  start=2018-08-05 16:00  end=2018-08-07 11:00  container=${F1}\n-    Create content  type=Event  title=Event3  start=2018-08-05 16:30  open_end-empty-marker=1  container=${F1}\n+    Create content  type=Event  title=Event1  start=2018-08-01T15:00  end=2018-08-01T17:00  container=${F1}\n+    Create content  type=Event  title=Event2  start=2018-08-05T16:00  end=2018-08-07T11:00  container=${F1}\n+    Create content  type=Event  title=Event3  start=2018-08-05T16:30  open_end-empty-marker=1  container=${F1}\n     Create content  type=Event  title=Event4  start=2018-08-06  end=2018-08-06  whole_day-empty-marker=1  container=${F1}\n \n I activate the default operator in the criteria ${CRITERIA}\n@@ -296,7 +296,7 @@ I search in ${NAME} subfolder in the related items widget\n     mark results\n     Click Element  css=ul.select2-choices\n     Wait Until Page Contains  ${NAME}\n-    Click Element  //a[contains(concat(\' \', normalize-space(@class), \' \'), \' pattern-relateditems-result-select \')]//span[contains(text(),\'${NAME}\')]\n+    Click Element  //a[contains(concat(\' \', normalize-space(@class), \' \'), \' pat-relateditems-result-select \')]//span[contains(text(),\'${NAME}\')]\n \n I expect to be in Advanced mode\n     open the select box titled operator\n@@ -318,10 +318,14 @@ I expect to be in Simple mode\n \n open the select box titled ${NAME}\n     Click Element  css=body\n-    Click Element  css=.querystring-criteria-${NAME} .select2-container a\n+    ${select_criteria_selector}  Set Variable  .querystring-criteria-${NAME} .select2-container a\n+    Wait Until Element Is Visible  css=${select_criteria_selector}\n+    Click Element  css=${select_criteria_selector}\n \n select index type ${INDEX}\n-    Input Text  jquery=.select2-drop-active[style*="display: block;"] input   text=${INDEX}\n+    ${input_selector}  Set Variable  .select2-drop-active[style*="display: block;"] input\n+    Wait Until Element Is Visible  jquery=${input_selector}\n+    Input Text  jquery=${input_selector}   text=${INDEX}\n     Press Key  jquery=:focus  \\\\13\n \n we expect ${NUM} hits\ndiff --git a/Products/CMFPlone/tests/robot/test_thememapper.robot b/Products/CMFPlone/tests/robot/test_thememapper.robot\ndeleted file mode 100644\nindex 4701ca2e07..0000000000\n--- a/Products/CMFPlone/tests/robot/test_thememapper.robot\n+++ /dev/null\n@@ -1,118 +0,0 @@\n-*** Settings *****************************************************************\n-\n-Resource  plone/app/robotframework/keywords.robot\n-Resource  plone/app/robotframework/saucelabs.robot\n-Resource  plone/app/robotframework/selenium.robot\n-\n-Library  Remote  ${PLONE_URL}/RobotRemote\n-\n-Resource  keywords.robot\n-\n-Test Setup  Run keywords  Plone Test Setup\n-Test Teardown  Run keywords  Plone Test Teardown\n-\n-*** Variables ***\n-\n-${LESS}     @color: blue; body { background: @color; }\n-${LESSFILE}     test.less\n-${CSSFILE}      output.less\n-${CSS}      background: blue;\n-\n-*** Test Cases **************************************************************\n-\n-Scenario: Thememapper basic functionality\n-    Given a logged-in site administrator\n-    and a new theme to edit\n-    When I open rules.xml\n-    Then I expect 2 tabs to be open\n-    and I expect a tab labeled "rules.xml" to be open\n-\n-    When I close the tab labeled "rules.xml"\n-    Then I expect 1 tabs to be open\n-\n-    When I create a new file called "${LESSFILE}"\n-    Then I expect 2 tabs to be open\n-    and I expect a tab labeled "${LESSFILE}" to be open\n-\n-    When I type some code into the editor\n-    and I save the current document\n-    I expect the document ${LESSFILE} to contain ${LESS}\n-\n-Scenario: Thememapper LESS builder\n-    Given a logged-in site administrator\n-    and a new theme to edit\n-    and I create a new file called "${LESSFILE}"\n-    and I type some code into the editor\n-    and I save the current document\n-    When I use the LESS builder on "${LESSFILE}"\n-    Then I expect the compiled CSS to contain "${CSS}"\n-\n-*** Keywords ****************************************************************\n-\n-a new theme to edit\n-    Go to  ${PLONE_URL}/theming-controlpanel\n-    Wait until page contains  Theme settings\n-    Click Element   jquery=a[href="#modal-copy-barceloneta"]\n-    Wait Until Element Is Visible   jquery=.plone-modal-body input[type="text"]\n-    Input Text  jquery=.plone-modal-body input[type="text"]   Test\n-    Click Element   jquery=.plone-modal-body input[type="submit"]\n-    Wait Until Element Is Visible   css=.nav-and-editor\n-    Page Should Contain     backend.xml\n-\n-I open ${NAME}\n-    Click Element   jquery=.jqtree-element:contains("${NAME}")\n-\n-I expect ${NUM} tabs to be open\n-    Sleep  1\n-    ${hits}=    Execute Javascript  return window.jQuery(\'.navbar-nav li\').length.toString();\n-    Should Be Equal     ${hits}     ${NUM}\n-\n-I expect a tab labeled "${LABEL}" to be open\n-    Wait Until Element Is Visible   jquery=.navbar-nav li:contains("${LABEL}")\n-\n-I close the tab labeled "${LABEL}"\n-    Click Element   jquery=.navbar-nav li:contains("${LABEL}") .remove\n-\n-I create a new file called "${NAME}"\n-    Click Element   css=#btngroup-main #btngroup-dropdown-file_menu #dropdown-menu-\n-    Click Element   css=#alink-addnew\n-    Input Text  jquery=.addnew input[type="text"]   ${NAME}\n-    Click Element   jquery=.addnew .btn-primary\n-    Sleep   1\n-\n-I type some code into the editor\n-    Click Element   css=.ace_content\n-    ${ace_id}=     Execute Javascript   return window.jQuery(\'.ace_editor\').attr(\'id\');\n-    Execute Javascript      ace.edit(${ace_id}).setValue("${LESS}");\n-\n-I expect the editors value to be "${MESSAGE}"\n-    ${ace_id}=      Execute Javascript  return window.jQuery(\'.ace_editor\').attr(\'id\');\n-    ${value}=   Execute Javascript      return ace.edit(\'${ace_id}\').getValue();\n-    Should Be Equal     ${value}    ${MESSAGE}\n-\n-I expect the editors value to contain "${MESSAGE}"\n-    ${ace_id}=      Execute Javascript  return window.jQuery(\'.ace_editor\').attr(\'id\');\n-    ${value}=   Execute Javascript      return ace.edit(\'${ace_id}\').getValue();\n-    Should Contain  ${value}    ${MESSAGE}\n-\n-I save the current document\n-    Click Element   css=#btn-save\n-    Sleep   1\n-\n-I expect the document ${NAME} to contain ${MESSAGE}\n-    Go To   ${PLONE_URL}/++theme++test/@@theming-controlpanel-mapper\n-    Wait Until Element Is Visible    css=.ace_editor\n-    I open ${NAME}\n-    I expect the editors value to be "${MESSAGE}"\n-\n-I use the LESS builder on "${file}"\n-    I open ${file}\n-    Click Element   css=#btngroup-mapper #btngroup-dropdown-file_menu #dropdown-menu-\n-    Click Element   css=#alink-buildless\n-    Input Text      css=#lessFileName   ${CSSFILE}\n-    Click element   css=#compileBtn\n-    Sleep   1\n-\n-I expect the compiled CSS to contain "${TEXT}"\n-    I open ${CSSFILE}\n-    I expect the editors value to contain "${TEXT}"\ndiff --git a/Products/CMFPlone/tests/robot/test_tinymce.robot b/Products/CMFPlone/tests/robot/test_tinymce.robot\nindex 2f39805371..8f56da5823 100644\n--- a/Products/CMFPlone/tests/robot/test_tinymce.robot\n+++ b/Products/CMFPlone/tests/robot/test_tinymce.robot\n@@ -28,13 +28,10 @@ Scenario: A page is opened to edit in TinyMCE\n       and insert link\n       and insert image\n \n-    Click Button  css=#form-buttons-save\n-    # in FF 34 this fails. in FF46 or chrome this is not a problem at all.\n-    # remove "Run Keyword And Ignore Error" when https://github.com/plone/jenkins.plone.org/issues/179\n-    # was solved\n-    Run Keyword And Ignore Error  Element Should Be Visible  css=#parent-fieldname-text img[alt="SomeAlt"]\n-    Run Keyword And Ignore Error  Element Should Be Visible  css=#parent-fieldname-text img[title="SomeTitle"]\n-    Element Should Be Visible  css=#parent-fieldname-text a\n+    Set Focus To Element  css=#form-buttons-save\n+    Wait Until Element Is Visible  css=#form-buttons-save\n+    Click Button  Save\n+    Wait until page contains  Changes saved\n \n \n *** Keywords *****************************************************************\n@@ -50,34 +47,33 @@ an uploaded image\n     Create content  type=Image  title=an-image\n \n text inserted into wysiwyg\n-    Select Frame  css=.mce-edit-area iframe\n+    Wait Until Element Is Visible  css=.tox-edit-area iframe\n+    Select Frame  css=.tox-edit-area iframe\n     Input text  css=.mce-content-body  foobar\n     UnSelect Frame\n \n insert link\n-    Select Frame  css=.mce-edit-area iframe\n+    Select Frame  css=.tox-edit-area iframe\n     Execute Javascript    function selectElementContents(el) {var range = document.createRange(); range.selectNodeContents(el); var sel = window.getSelection(); sel.removeAllRanges(); sel.addRange(range);} var el = document.getElementById("tinymce"); selectElementContents(el);\n     UnSelect Frame\n-    Click Button  css=div[aria-label="Insert/edit link"] button\n-    Click Button  css=.pattern-relateditems-container button.favorites\n-    Click Link  css=.pattern-relateditems-container .favorites a.fav[href=\'/\']\n-    Wait Until Element Is Visible  css=.pattern-relateditems-result-select.selectable\n-    Click Link  css=.pattern-relateditems-result-select.selectable\n-    Click Button  css=.plone-modal-footer .plone-btn-primary\n-    Select Frame  css=.mce-edit-area iframe\n+    Click Button  css=button[aria-label="Insert/edit link"]\n+    Click Button  css=.pat-relateditems-container button.favorites\n+    Click Link  css=.pat-relateditems-container .favorites a.fav[href=\'/\']\n+    Wait Until Element Is Visible  css=.pat-relateditems-result-select.selectable\n+    Click Link  css=.pat-relateditems-result-select.selectable\n+    Click Button  css=.modal-footer input[name="insert"]\n+    Select Frame  css=.tox-edit-area iframe\n     Execute Javascript  window.getSelection().removeAllRanges()\n     UnSelect Frame\n-    Wait Until Element Is Not Visible  css=.plone-modal-footer .plone-btn-primary\n+    Wait Until Element Is Not Visible  css=.modal-footer input[name="insert"]\n \n insert image\n-    Click Button  css=div[aria-label="Insert/edit image"] button\n-    Click Button  css=.pattern-relateditems-container button.favorites\n-    Click Link  css=.pattern-relateditems-container .favorites a.fav[href=\'/\']\n-    Wait Until Element Is Visible  css=.pattern-relateditems-result-select.selectable\n-    Click Link  css=.pattern-relateditems-result-select.selectable\n-    Input Text  css=.plone-modal-body [name="title"]  SomeTitle\n-    Input Text  css=.plone-modal-body [name="alt"]  SomeAlt\n-    Click Button  css=.plone-modal-footer .plone-btn-primary[name=\'insert\']\n-    # in FF 34 we need to click twice. in FF46 or chrome this is not a problem at all.\n-    Run Keyword And Ignore Error  Click Button  css=.plone-modal-footer .plone-btn-primary[name=\'insert\']\n-    Wait Until Element Is Not Visible  css=.plone-modal-footer .plone-btn-primary[name=\'insert\']\n+    Click Button  css=button[aria-label="Insert/edit image"]\n+    Click Button  css=.pat-relateditems-container button.favorites\n+    Click Link  css=.pat-relateditems-container .favorites a.fav[href=\'/\']\n+    Wait Until Element Is Visible  css=.pat-relateditems-result-select.selectable\n+    Click Link  css=.pat-relateditems-result-select.selectable\n+    Input Text  css=.modal-body [name="title"]  SomeTitle\n+    Input Text  css=.modal-body [name="alt"]  SomeAlt\n+    Click Button  css=.modal-footer input[name="insert"]\n+    Wait Until Element Is Not Visible  css=.modal-footer input[name="insert"]\ndiff --git a/Products/CMFPlone/tests/testActionsTool.py b/Products/CMFPlone/tests/testActionsTool.py\nindex 1b304e438b..8bcaed7d3a 100644\n--- a/Products/CMFPlone/tests/testActionsTool.py\n+++ b/Products/CMFPlone/tests/testActionsTool.py\n@@ -64,7 +64,7 @@ def testMissingActionProvider(self):\n             self.fail_tb(\'Should not bomb out if a provider is missing\')\n \n     def testBrokenActionProvider(self):\n-        self.portal.portal_types = None\n+        self.portal.portal_types = self.portal.portal_catalog\n         try:\n             self.actions.listFilteredActionsFor(self.portal)\n         except:\ndiff --git a/Products/CMFPlone/tests/testBrowserDefault.py b/Products/CMFPlone/tests/testBrowserDefault.py\nindex 3d8bc83e4d..45557b5150 100644\n--- a/Products/CMFPlone/tests/testBrowserDefault.py\n+++ b/Products/CMFPlone/tests/testBrowserDefault.py\n@@ -278,10 +278,10 @@ def testCall(self):\n         self.assertFalseDiff(resolved, target)\n \n     def testDefaultViews(self):\n-        self.assertEqual(self.portal.getLayout(), \'listing_view\')\n+        self.assertEqual(self.portal.getLayout(), \'document_view\')\n         self.assertEqual(self.portal.getDefaultPage(), \'front-page\')\n         self.assertEqual(self.portal.defaultView(), \'front-page\')\n-        self.assertEqual(self.portal.getDefaultLayout(), \'listing_view\')\n+        self.assertEqual(self.portal.getDefaultLayout(), \'document_view\')\n         layoutKeys = [v[0] for v in self.portal.getAvailableLayouts()]\n         self.assertTrue(\'listing_view\' in layoutKeys)\n         self.assertEqual(self.portal.__browser_default__(None),\n@@ -297,7 +297,7 @@ def testSetLayout(self):\n         self.assertEqual(self.portal.getLayout(), \'summary_view\')\n         self.assertEqual(self.portal.getDefaultPage(), None)\n         self.assertEqual(self.portal.defaultView(), \'summary_view\')\n-        self.assertEqual(self.portal.getDefaultLayout(), \'listing_view\')\n+        self.assertEqual(self.portal.getDefaultLayout(), \'document_view\')\n         layoutKeys = [v[0] for v in self.portal.getAvailableLayouts()]\n         self.assertTrue(\'summary_view\' in layoutKeys)\n \n@@ -327,8 +327,8 @@ def testSetDefaultPage(self):\n                          (self.portal, [\'ad\', ]))\n \n         # still have layout settings\n-        self.assertEqual(self.portal.getLayout(), \'listing_view\')\n-        self.assertEqual(self.portal.getDefaultLayout(), \'listing_view\')\n+        self.assertEqual(self.portal.getLayout(), \'document_view\')\n+        self.assertEqual(self.portal.getDefaultLayout(), \'document_view\')\n         layoutKeys = [v[0] for v in self.portal.getAvailableLayouts()]\n         self.assertTrue(\'listing_view\' in layoutKeys)\n \n@@ -373,13 +373,13 @@ def testSetLayoutUnsetsDefaultPage(self):\n \n     def testMissingTemplatesIgnored(self):\n         self.portal.getTypeInfo() \\\n-            .manage_changeProperties(view_methods=[\'listing_view\', \'foo\'])\n+            .manage_changeProperties(view_methods=[\'document_view\', \'foo\'])\n         views = [v[0] for v in self.portal.getAvailableLayouts()]\n-        self.assertTrue(views == [\'listing_view\'])\n+        self.assertTrue(views == [\'document_view\'])\n \n     def testMissingPageIgnored(self):\n         self.portal.setDefaultPage(\'inexistent\')\n         self.assertEqual(self.portal.getDefaultPage(), None)\n-        self.assertEqual(self.portal.defaultView(), \'listing_view\')\n+        self.assertEqual(self.portal.defaultView(), \'document_view\')\n         self.assertEqual(self.portal.__browser_default__(None),\n-                         (self.portal, [\'listing_view\', ]))\n+                         (self.portal, [\'document_view\', ]))\ndiff --git a/Products/CMFPlone/tests/testCSSandJSRegistry.py b/Products/CMFPlone/tests/testCSSandJSRegistry.py\ndeleted file mode 100644\nindex cf8ee57a78..0000000000\n--- a/Products/CMFPlone/tests/testCSSandJSRegistry.py\n+++ /dev/null\n@@ -1,73 +0,0 @@\n-from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import IBundleRegistry\n-from Products.CMFPlone.interfaces import IResourceRegistry\n-from Products.CMFPlone.tests.PloneTestCase import PloneTestCase\n-from zope.component import getUtility\n-\n-\n-class TestCSSRegistry(PloneTestCase):\n-\n-    def afterSetUp(self):\n-        self.registry = getUtility(IRegistry)\n-\n-    def testDefaultCssIsInstalled(self):\n-        installedResources = self.registry.collectionOfInterface(\n-            IResourceRegistry,\n-            prefix=\'plone.resources\'\n-        )\n-        expected = [\n-            \'++plone++static/plone.less\',\n-        ]\n-        css_files = [y for x in installedResources.values() for y in x.css]\n-        for e in expected:\n-            self.assertTrue(e in css_files, e)\n-\n-    def testBundleIsInstalled(self):\n-        installedBundles = self.registry.collectionOfInterface(\n-            IBundleRegistry, prefix=\'plone.bundles\')\n-        expected = [\n-            \'plone\',\n-            \'plone-legacy\'\n-        ]\n-        for e in expected:\n-            self.assertTrue(e in installedBundles.keys(), e)\n-\n-    # def testRTLShouldHaveHigherPrecedence(self):\n-    #     installedStylesheetIds = self.tool.getResourceIds()\n-    #     indexRTLStylesheet = self.tool.getResourcePosition(\'RTL.css\')\n-    #     comes_before = [\'++resource++plone.css\']\n-    #     for cb in comes_before:\n-    #         self.assertTrue(\n-    #             cb in installedStylesheetIds[:indexRTLStylesheet],\n-    #             cb\n-    #         )\n-\n-    def testJSIsInsertedInPage(self):\n-        self.registry[\'plone.resources.development\'] = True\n-        self.registry[\'plone.bundles/plone.develop_css\'] = True\n-        page = self.portal.view()\n-        self.assertTrue(\'++plone++static/plone.less\' in page)\n-\n-\n-class TestJSRegistry(PloneTestCase):\n-\n-    def afterSetUp(self):\n-        self.registry = getUtility(IRegistry)\n-\n-    def testDefaultJSIsInstalled(self):\n-        installedResources = self.registry.collectionOfInterface(\n-            IResourceRegistry,\n-            prefix=\'plone.resources\'\n-        )\n-        expected = [\n-            \'++resource++plone.js\',\n-        ]\n-        js_files = {x.js for x in installedResources.values()}\n-        for e in expected:\n-            self.assertTrue(e in js_files, e)\n-\n-    def testJSIsInsertedInPage(self):\n-        self.registry[\'plone.resources.development\'] = True\n-        self.registry[\'plone.bundles/plone.develop_javascript\'] = True\n-        page = self.portal.view()\n-        self.assertTrue(\'++resource++plone.js\' in page)\ndiff --git a/Products/CMFPlone/tests/testCatalogTool.py b/Products/CMFPlone/tests/testCatalogTool.py\nindex 87cb05456b..50ab21231a 100644\n--- a/Products/CMFPlone/tests/testCatalogTool.py\n+++ b/Products/CMFPlone/tests/testCatalogTool.py\n@@ -31,7 +31,7 @@\n group2 = \'g2\'\n \n base_content = [\'Members\', \'aggregator\', \'aggregator\',\n-                \'events\', \'news\', TEST_USER_ID, \'front-page\', \'doc\']\n+                \'events\', \'news\', \'plone\', TEST_USER_ID, \'doc\']\n \n \n class TestCatalogSetup(PloneTestCase):\ndiff --git a/Products/CMFPlone/tests/testControlPanel.py b/Products/CMFPlone/tests/testControlPanel.py\nindex 159e1ee627..0ce80c7acf 100644\n--- a/Products/CMFPlone/tests/testControlPanel.py\n+++ b/Products/CMFPlone/tests/testControlPanel.py\n@@ -13,8 +13,8 @@ def setUp(self):\n         # get the expected default groups and configlets\n         self.groups = [\'Plone\', \'Products\']\n         self.configlets = [\'QuickInstaller\', \'MailHost\',\n-                           \'UsersGroups\', \'MemberPrefs\', \'PortalSkin\',\n-                           \'MemberPassword\', \'ZMI\', \'SecuritySettings\',\n+                           \'UsersGroups\', \'PortalSkin\',\n+                           \'ZMI\', \'SecuritySettings\',\n                            \'NavigationSettings\', \'SearchSettings\',\n                            \'errorLog\', \'PloneReconfig\', \'TypesSettings\',\n                            \'FilterSettings\',\ndiff --git a/Products/CMFPlone/tests/testControlPanelScripts.py b/Products/CMFPlone/tests/testControlPanelScripts.py\nindex e0428af4cb..d37e54f2ef 100644\n--- a/Products/CMFPlone/tests/testControlPanelScripts.py\n+++ b/Products/CMFPlone/tests/testControlPanelScripts.py\n@@ -1,35 +1,7 @@\n-from DateTime import DateTime\n from plone.app.testing import SITE_OWNER_NAME\n from plone.app.testing import SITE_OWNER_PASSWORD\n from plone.app.testing import TEST_USER_ID\n-from plone.app.testing import TEST_USER_NAME\n-from plone.app.testing import TEST_USER_PASSWORD\n-from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from Products.CMFPlone.tests.PloneTestCase import PloneTestCase\n-from zExceptions import Forbidden\n-\n-import unittest\n-\n-\n-class TestPrefsUserManage(unittest.TestCase):\n-\n-    layer = PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n-\n-    def setUp(self):\n-        self.portal = self.layer[\'portal\']\n-        self.membership = self.portal.portal_membership\n-        self.membership.memberareaCreationFlag = 0\n-        # self.setupAuthenticator()\n-\n-    def test_ploneChangePasswordPostOnly(self):\n-        # self.login(TEST_USER_NAME)\n-        self.layer[\'request\'].method = \'GET\'\n-        with self.assertRaises(Forbidden):\n-            self.portal.plone_change_password(\n-                current=TEST_USER_PASSWORD,\n-                password=TEST_USER_PASSWORD,\n-                password_confirm=TEST_USER_PASSWORD,\n-            )\n \n \n class TestAccessControlPanelScripts(PloneTestCase):\ndiff --git a/Products/CMFPlone/tests/testNavigationView.py b/Products/CMFPlone/tests/testNavigationView.py\nindex cb6acb4844..0c323400c9 100644\n--- a/Products/CMFPlone/tests/testNavigationView.py\n+++ b/Products/CMFPlone/tests/testNavigationView.py\n@@ -502,12 +502,12 @@ def testCreateTopLevelTabs(self):\n         # Everything shows up by default\n         tabs = view.topLevelTabs(actions=[])\n         self.assertTrue(tabs)\n-        self.assertEqual(len(tabs), 8)\n+        self.assertEqual(len(tabs), 7)\n \n         # Only the folders show up (Members, news, events, folder1, folder2)\n         self.navigation_settings.nonfolderish_tabs = False\n         tabs = view.topLevelTabs(actions=[])\n-        self.assertEqual(len(tabs), 5)\n+        self.assertEqual(len(tabs), 4)\n \n     def testTabsRespectFolderOrder(self):\n         # See if reordering causes a change in the tab order\n@@ -604,18 +604,18 @@ def testTabsExcludeItemsWithExcludeProperty(self):\n         tab_names = [t[\'id\'] for t in tabs]\n         self.assertNotIn(\'folder2\', tab_names)\n \n-        # but if we\'re inside, it should be visible\n+        # if we\'re inside, it also should stay hidden\n         view = self.view_class(self.portal.folder2, self.request)\n         tabs = view.topLevelTabs(actions=[])\n         tab_names = [t[\'id\'] for t in tabs]\n-        self.assertIn(\'folder2\', tab_names)\n+        self.assertNotIn(\'folder2\', tab_names)\n \n         # Now we flip the setting for plone.show_excluded_items\n-        self.navigation_settings.show_excluded_items = False\n+        self.navigation_settings.show_excluded_items = True\n         view = self.view_class(self.portal.folder2, self.request)\n         tabs = view.topLevelTabs(actions=[])\n         tab_names = [t[\'id\'] for t in tabs]\n-        self.assertNotIn(\'folder2\', tab_names)\n+        self.assertIn(\'folder2\', tab_names)\n \n     def testTabsRespectsTypesWithViewAction(self):\n         # With a type in types_use_view_action_in_listings as current action it\ndiff --git a/Products/CMFPlone/tests/testPloneFolder.py b/Products/CMFPlone/tests/testPloneFolder.py\nindex 3ccbc81431..757b6129f6 100644\n--- a/Products/CMFPlone/tests/testPloneFolder.py\n+++ b/Products/CMFPlone/tests/testPloneFolder.py\n@@ -3,7 +3,7 @@\n \n from Products.CMFPlone.utils import _createObjectByType\n \n-from AccessControl import Unauthorized\n+from zExceptions import Unauthorized\n from Products.CMFCore.permissions import DeleteObjects\n \n from zExceptions import BadRequest\ndiff --git a/Products/CMFPlone/tests/testPloneView.py b/Products/CMFPlone/tests/testPloneView.py\nindex 4f68681a98..5efdcc84bd 100644\n--- a/Products/CMFPlone/tests/testPloneView.py\n+++ b/Products/CMFPlone/tests/testPloneView.py\n@@ -151,3 +151,8 @@ def testCropText(self):\n     def testSiteEncoding(self):\n         view = Plone(self.portal, self.app.REQUEST)\n         self.assertEqual(\'utf-8\', view.site_encoding())\n+\n+    def test_human_readable_size(self):\n+        view = Plone(self.portal, self.app.REQUEST)\n+        from Products.CMFPlone.utils import human_readable_size\n+        self.assertIs(view.human_readable_size, human_readable_size)\ndiff --git a/Products/CMFPlone/tests/testPortalCreation.py b/Products/CMFPlone/tests/testPortalCreation.py\nindex fca5d5358a..8dcaea6be8 100644\n--- a/Products/CMFPlone/tests/testPortalCreation.py\n+++ b/Products/CMFPlone/tests/testPortalCreation.py\n@@ -86,6 +86,13 @@ def testWorkflowIsActionProvider(self):\n             \'portal_workflow\' in self.actions.listActionProviders()\n         )\n \n+    def testPortalIsIndexed(self):\n+        # The Plone site should be cataloged\n+        res = self.catalog(getId="plone")\n+        self.assertEqual(len(res), 1)\n+        self.assertEqual(res[0].getId, "plone")\n+        self.assertEqual(res[0].Title, "Welcome to Plone")\n+\n     def testMembersFolderMetaType(self):\n         # Members folder should have meta_type \'Dexterity Container\'\n         members = self.membership.getMembersFolder()\n@@ -419,18 +426,16 @@ def testTTWLockableProperty(self):\n         self.assertEqual(True, registry[\'plone.lock_on_ttw_edit\'])\n \n     def testPortalFTIIsDynamicFTI(self):\n-        # Plone Site FTI should be a DynamicView FTI\n+        # Plone Site FTI should be a Dexterity FTI\n         fti = self.portal.getTypeInfo()\n-        self.assertEqual(\n-            fti.meta_type, \'Factory-based Type Information with dynamic views\'\n-        )\n+        self.assertEqual(fti.meta_type, \'Dexterity FTI\')\n \n     def testPloneSiteFTIHasMethodAliases(self):\n         # Should add method aliases to the Plone Site FTI\n         expected_aliases = {\n             \'(Default)\': \'(dynamic view)\',\n             \'view\': \'(selected layout)\',\n-            \'edit\': \'@@site-controlpanel\',\n+            \'edit\': \'@@edit\',\n             \'sharing\': \'@@sharing\',\n         }\n         fti = self.portal.getTypeInfo()\n@@ -532,13 +537,6 @@ def testSyndicationTabDisabled(self):\n                     "Actions tool still has visible \'syndication\' action"\n                 )\n \n-    def testObjectButtonActionsInvisibleOnPortalRoot(self):\n-        # only a manager would have proper permissions\n-        self.setRoles([\'Manager\', \'Member\'])\n-        acts = self.actions.listFilteredActionsFor(self.portal)\n-        buttons = acts.get(\'object_buttons\', [])\n-        self.assertEqual(0, len(buttons))\n-\n     def testObjectButtonActionsInvisibleOnPortalDefaultDocument(self):\n         # only a manager would have proper permissions\n         self.setRoles([\'Manager\', \'Member\'])\n@@ -1023,8 +1021,11 @@ def test_addsite_en_as_nl(self):\n         self.request.form[\'default_language\'] = \'en\'\n         self.addsite()\n         plonesite = self.app.plonesite1\n-        fp = plonesite[\'front-page\']\n         # Unfortunately, the next test passes even without the fix (overriding\n         # HTTP_ACCEPT_LANGUAGE on the request in factory.py).  This seems to be\n         # because translations are not available in the tests.\n-        self.assertIn(\'Learn more about Plone\', fp.text.raw)\n+        self.assertIn(\'Learn more about Plone\', plonesite.text.raw)\n+\n+        # XXX maybe it is better to reset the sire in the @@plone-addsite view\n+        # or somewhere else?\n+        setSite(None)\ndiff --git a/Products/CMFPlone/tests/testResourceRegistries.py b/Products/CMFPlone/tests/testResourceRegistries.py\nindex d17106da82..37ad8d13a1 100644\n--- a/Products/CMFPlone/tests/testResourceRegistries.py\n+++ b/Products/CMFPlone/tests/testResourceRegistries.py\n@@ -1,609 +1,349 @@\n from plone.app.testing import logout\n+from plone.registry import field as regfield\n+from plone.registry import Record\n from plone.registry.interfaces import IRegistry\n-from plone.resource.interfaces import IResourceDirectory\n-from plone.subrequest import subrequest\n-from Products.CMFPlone.controlpanel.browser.resourceregistry import OverrideFolderManager  # noqa\n-from Products.CMFPlone.controlpanel.browser.resourceregistry import ResourceRegistryControlPanelView  # noqa\n from Products.CMFPlone.interfaces import IBundleRegistry\n-from Products.CMFPlone.interfaces import IResourceRegistry\n-from Products.CMFPlone.interfaces.resources import OVERRIDE_RESOURCE_DIRECTORY_NAME  # noqa\n from Products.CMFPlone.resources import add_bundle_on_request\n-from Products.CMFPlone.resources import add_resource_on_request\n from Products.CMFPlone.resources import remove_bundle_on_request\n-from Products.CMFPlone.resources.browser.cook import cookWhenChangingSettings\n-from Products.CMFPlone.resources.browser.scripts import ScriptsView\n-from Products.CMFPlone.resources.browser.styles import StylesView\n-from Products.CMFPlone.resources.bundle import Bundle\n-from Products.CMFPlone.resources.exportimport.resourceregistry import ResourceRegistryNodeAdapter  # noqa\n+from Products.CMFPlone.resources.browser.resource import ScriptsView\n+from Products.CMFPlone.resources.browser.resource import StylesView\n from Products.CMFPlone.tests import PloneTestCase\n-from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from zope.component import getUtility\n \n-import json\n-from unittest import mock\n-import os\n \n-\n-class TestResourceRegistries(PloneTestCase.PloneTestCase):\n-\n-    def test_cooking_resources(self):\n+class TestScriptsViewlet(PloneTestCase.PloneTestCase):\n+    def _make_test_bundle(self):\n         registry = getUtility(IRegistry)\n-        bundles = registry.collectionOfInterface(IBundleRegistry,\n-                                                 prefix="plone.bundles")\n-        bundle = bundles.add(\'foobar\')\n-        bundle.jscompilation = \'++plone++static/foobar-compiled.js\'\n-        bundle.csscompilation = \'++plone++static/foobar-compiled.css\'\n-\n-        resources = registry.collectionOfInterface(IResourceRegistry,\n-                                                   prefix="plone.resources")\n-        resource = resources.add(\'foobar\')\n-\n-        resource.js = \'++plone++static/foobar.js\'\n-        resource.css = [\'++plone++static/foobar.css\']\n-        bundle.resources = [\'foobar\']\n-\n-        persistent_directory = getUtility(\n-            IResourceDirectory, name="persistent")\n-        if OVERRIDE_RESOURCE_DIRECTORY_NAME not in persistent_directory:\n-            persistent_directory.makeDirectory(\n-                OVERRIDE_RESOURCE_DIRECTORY_NAME)\n-        container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n-        container.makeDirectory(\'static\')\n-        directory = container[\'static\']\n-        directory.writeFile(\'foobar.js\', \'alert("Hi!");\\n\\nalert("Ho!");\')\n-        directory.writeFile(\'foobar.css\', \'body {\\ncolor: blue;\\n}\')\n-\n-        cookWhenChangingSettings(self.portal, bundle)\n-\n-        resp_js = subrequest(\n-            \'{}/++plone++static/foobar-compiled.js\'.format(\n-                self.portal.absolute_url()\n-            )\n-        )\n-        self.assertIn(b\'alert("Hi!");alert("Ho!");\', resp_js.getBody())\n \n-        resp_css = subrequest(\n-            \'{}/++plone++static/foobar-compiled.css\'.format(\n-                self.portal.absolute_url()\n-            )\n+        bundles = registry.collectionOfInterface(\n+            IBundleRegistry, prefix="plone.bundles"\n         )\n-        self.assertIn(b\'body{color:blue}\', resp_css.getBody())\n+        bundle = bundles.add("foobar")\n+        bundle.name = "foobar"\n+        bundle.jscompilation = "http://foo.bar/foobar.js"\n+        bundle.csscompilation = "http://foo.bar/foobar.css"\n+        bundle.resources = ["foobar"]\n+        return bundle\n+\n+    def test_bundle_defernot_asyncnot(self):\n+        bundle = self._make_test_bundle()\n+        view = ScriptsView(self.app, self.app.REQUEST, None, None)\n+        view.update()\n+        rendered = view.render()\n+        self.assertTrue("async=" not in rendered)\n+        self.assertTrue("defer=" not in rendered)\n \n-    def test_dont_minify_already_minified(self):\n-        registry = getUtility(IRegistry)\n-        bundles = registry.collectionOfInterface(IBundleRegistry,\n-                                                 prefix="plone.bundles")\n-        bundle = bundles.add(\'foobar\')\n-        bundle.jscompilation = \'++plone++static/foobar-compiled.js\'\n-        bundle.csscompilation = \'++plone++static/foobar-compiled.css\'\n-\n-        resources = registry.collectionOfInterface(IResourceRegistry,\n-                                                   prefix="plone.resources")\n-        resource = resources.add(\'foobar\')\n-\n-        resource.js = \'++plone++static/foobar.min.js\'\n-        resource.css = [\'++plone++static/foobar.min.css\']\n-        bundle.resources = [\'foobar\']\n-\n-        persistent_directory = getUtility(\n-            IResourceDirectory, name="persistent")\n-        if OVERRIDE_RESOURCE_DIRECTORY_NAME not in persistent_directory:\n-            persistent_directory.makeDirectory(\n-                OVERRIDE_RESOURCE_DIRECTORY_NAME)\n-        container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n-        container.makeDirectory(\'static\')\n-        directory = container[\'static\']\n-        directory.writeFile(\'foobar.min.js\', b\'alert("Hi!");\\n\\nalert("Ho!");\')\n-        directory.writeFile(\'foobar.min.css\', b\'body {\\ncolor: blue;\\n}\')\n-\n-        cookWhenChangingSettings(self.portal, bundle)\n-\n-        resp_js = subrequest(\n-            \'{}/++plone++static/foobar-compiled.js\'.format(\n-                self.portal.absolute_url()\n-            )\n-        )\n-        self.assertIn(b\'alert("Hi!");\\n\\nalert("Ho!");\', resp_js.getBody())\n+    def test_bundle_defernot_async(self):\n+        bundle = self._make_test_bundle()\n+        bundle.load_async = True\n+        bundle.load_defer = False\n+        view = ScriptsView(self.app, self.app.REQUEST, None, None)\n+        view.update()\n+        rendered = view.render()\n \n-        resp_css = subrequest(\n-            \'{}/++plone++static/foobar-compiled.css\'.format(\n-                self.portal.absolute_url()\n-            )\n-        )\n-        self.assertIn(b\'body {\\ncolor: blue;\\n}\', resp_css.getBody())\n+    def test_bundle_defer_asyncnot(self):\n+        bundle = self._make_test_bundle()\n+        bundle.load_async = False\n+        bundle.load_defer = True\n+        view = ScriptsView(self.app, self.app.REQUEST, None, None)\n+        view.update()\n+        rendered = view.render()\n+        self.assertTrue("async=" not in rendered)\n+        self.assertTrue("defer=" in rendered)\n \n-    def test_cook_only_css(self):\n-        registry = getUtility(IRegistry)\n-        bundles = registry.collectionOfInterface(IBundleRegistry,\n-                                                 prefix="plone.bundles")\n-        bundle = bundles.add(\'foobar\')\n-        bundle.jscompilation = \'\'\n-        bundle.csscompilation = \'++plone++static/foobar-compiled.css\'\n-\n-        resources = registry.collectionOfInterface(IResourceRegistry,\n-                                                   prefix="plone.resources")\n-        resource = resources.add(\'foobar\')\n-\n-        resource.css = [\'++plone++static/foobar.min.css\']\n-        bundle.resources = [\'foobar\']\n-\n-        persistent_directory = getUtility(\n-            IResourceDirectory, name="persistent")\n-        if OVERRIDE_RESOURCE_DIRECTORY_NAME not in persistent_directory:\n-            persistent_directory.makeDirectory(\n-                OVERRIDE_RESOURCE_DIRECTORY_NAME)\n-        container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n-        container.makeDirectory(\'static\')\n-        directory = container[\'static\']\n-        directory.writeFile(\'foobar.min.css\', \'body {\\ncolor: red;\\n}\')\n-\n-        cookWhenChangingSettings(self.portal, bundle)\n-\n-        resp_css = subrequest(\n-            \'{}/++plone++static/foobar-compiled.css\'.format(\n-                self.portal.absolute_url()\n-            )\n-        )\n-        self.assertIn(b\'body {\\ncolor: red;\\n}\', resp_css.getBody())\n+    def test_bundle_defernot_async(self):\n+        bundle = self._make_test_bundle()\n+        bundle.load_async = True\n+        bundle.load_defer = False\n+        request = self.app.REQUEST\n+        view = ScriptsView(self.app, self.app.REQUEST, None, None)\n+        view.update()\n+        rendered = view.render()\n+        self.assertTrue("async=" in rendered)\n+        self.assertTrue("defer=" not in rendered)\n \n-    def test_cooking_missing(self):\n-        registry = getUtility(IRegistry)\n-        bundles = registry.collectionOfInterface(IBundleRegistry,\n-                                                 prefix="plone.bundles")\n-        bundle = bundles.add(\'foobar\')\n-        bundle.jscompilation = \'++plone++static/foobar-compiled.js\'\n-        bundle.csscompilation = \'++plone++static/foobar-compiled.css\'\n-\n-        resources = registry.collectionOfInterface(IResourceRegistry,\n-                                                   prefix="plone.resources")\n-        resource = resources.add(\'foobar\')\n-\n-        resource.js = \'++plone++static/foobar.js\'\n-        bundle.resources = [\'foobar\']\n-\n-        bundle = Bundle(bundle)\n-\n-        cookWhenChangingSettings(self.portal, bundle)\n-        resp = subrequest(\n-            \'{}/++plone++static/foobar-compiled.js\'.format(\n-                self.portal.absolute_url()\n-            )\n-        )\n-        self.assertIn(b\'Could not find resource\', resp.getBody())\n+    def test_bundle_defer_async(self):\n+        bundle = self._make_test_bundle()\n+        bundle.load_async = True\n+        bundle.load_defer = True\n+        view = ScriptsView(self.app, self.app.REQUEST, None, None)\n+        view.update()\n+        rendered = view.render()\n+        self.assertTrue("async=" in rendered)\n+        self.assertTrue("defer=" in rendered)\n \n-    def test_cooking_missing_browserresource(self):\n-        registry = getUtility(IRegistry)\n-        registry[\'plone.resources.development\'] = True\n-        bundles = registry.collectionOfInterface(IBundleRegistry,\n-                                                 prefix="plone.bundles")\n-        bundle = bundles.add(\'barbar\')\n-        bundle.jscompilation = \'++resource++notfound/barbar-compiled.js\'\n-        bundle.csscompilation = \'++resource++notfound/barbar-compiled.css\'\n-        bundle.compile = False\n-        bundle.merge_with = \'default\'\n-\n-        bundle = Bundle(bundle)\n-\n-        # cookWhenChangingSettings(self.portal, bundle)\n-        scripts = ScriptsView(\n-            self.layer[\'portal\'],\n-            self.layer[\'request\'],\n-            None\n-        )\n+    def test_scripts_viewlet(self):\n+        scripts = ScriptsView(self.layer["portal"], self.layer["request"], None)\n         scripts.update()\n-        results = scripts.scripts()\n-        # at least have jquery.min.js, config.js, require.js, etc.\n-        self.assertTrue(len(results)>2)\n-\n-    def test_error(self):\n-        registry = getUtility(IRegistry)\n-        bundles = registry.collectionOfInterface(IBundleRegistry,\n-                                                 prefix="plone.bundles")\n-        bundle = bundles.add(\'foobar\')\n-        bundle.jscompilation = \'++plone++static/foobar-compiled.js\'\n-        bundle.csscompilation = \'++plone++static/foobar-compiled.css\'\n-\n-        resources = registry.collectionOfInterface(IResourceRegistry,\n-                                                   prefix="plone.resources")\n-        resource = resources.add(\'foobar\')\n-\n-        resource.js = \'++plone++static/foobar.js\'\n-        bundle.resources = [\'foobar\']\n-\n-        persistent_directory = getUtility(\n-            IResourceDirectory, name="persistent")\n-        if OVERRIDE_RESOURCE_DIRECTORY_NAME not in persistent_directory:\n-            persistent_directory.makeDirectory(\n-                OVERRIDE_RESOURCE_DIRECTORY_NAME)\n-        container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n-        container.makeDirectory(\'static\')\n-        directory = container[\'static\']\n-        directory.writeFile(\'foobar.js\', \'sdlfk ldsf lksdjfl s\')\n-\n-        cookWhenChangingSettings(self.portal, bundle)\n-        resp = subrequest(\n-            \'{}/++plone++static/foobar-compiled.js\'.format(\n-                self.portal.absolute_url()\n-            )\n+        results = scripts.render()\n+        self.assertIn("++plone++static/bundle-jquery/jquery.min.js", results)\n+        self.assertIn(\n+            "++plone++static/bundle-bootstrap/js/bootstrap.bundle.min.js", results\n         )\n-        self.assertIn(b\'error cooking\', resp.getBody())\n-\n-    def test_bundle_defer_async(self):\n-        registry = getUtility(IRegistry)\n+        self.assertIn("++plone++static/bundle-plone/bundle.min.js", results)\n+        self.assertIn("http://nohost/plone/++webresource++", results)\n \n-        bundles = registry.collectionOfInterface(\n-            IBundleRegistry,\n-            prefix="plone.bundles"\n+    def test_scripts_viewlet_anonymous(self):\n+        logout()\n+        scripts = ScriptsView(self.layer["portal"], self.layer["request"], None)\n+        scripts.update()\n+        results = scripts.render()\n+        self.assertIn("++plone++static/bundle-jquery/jquery.min.js", results)\n+        self.assertIn(\n+            "++plone++static/bundle-bootstrap/js/bootstrap.bundle.min.js", results\n         )\n-        bundle = bundles.add(\'foobar\')\n-        bundle.name = \'foobar\'\n-        bundle.jscompilation = \'foobar.js\'\n-        bundle.csscompilation = \'foobar.css\'\n-        bundle.resources = [\'foobar\']\n+        self.assertIn("++plone++static/bundle-plone/bundle.min.js", results)\n+        self.assertIn("http://nohost/plone/++webresource++", results)\n \n-        view = ScriptsView(self.app, self.app.REQUEST, None, None)\n-        view.get_cooked_bundles = lambda: [(\'foobar\', bundle)]\n+    def test_request_bundles_not_add_same_twice(self):\n+        req = self.layer["request"]\n+        add_bundle_on_request(req, "foo")\n+        add_bundle_on_request(req, "foo")\n \n-        import Products.CMFPlone.resources.browser\n-        path = os.path.dirname(Products.CMFPlone.resources.browser.__file__)\n-        view.index = ViewPageTemplateFile(\'scripts.pt\', path)\n-        view.update()\n+        self.assertEqual(len(req.enabled_bundles), 1)\n \n-        self.assertTrue(\'async="async"\' not in view.index(view))\n-        self.assertTrue(\'defer="defer"\' not in view.index(view))\n+    def test_disabled_bundle_not_rendered(self):\n+        # request\n+        req = self.layer["request"]\n \n-        bundle.load_async = True\n-        bundle.load_defer = False\n-        self.assertTrue(\'async="async"\' in view.index(view))\n-        self.assertTrue(\'defer="defer"\' not in view.index(view))\n-\n-        bundle.load_async = False\n-        bundle.load_defer = True\n-        self.assertTrue(\'async="async"\' not in view.index(view))\n-        self.assertTrue(\'defer="defer"\' in view.index(view))\n+        # create a subrequest.\n+        subreq = req.clone()\n+        subreq["PARENT_REQUEST"] = req\n \n-        bundle.load_async = True\n-        bundle.load_defer = True\n+        scripts = ScriptsView(self.layer["portal"], subreq, None)\n \n-        self.assertTrue(\'async="async"\' in view.index(view))\n-        self.assertTrue(\'defer="defer"\' in view.index(view))\n+        # add some bundle to test with\n+        bundle = self._make_test_bundle()\n+        bundle.enabled = False\n+        scripts.update()\n+        result = scripts.render()\n+        self.assertNotIn("http://foo.bar/foobar.js", result)\n \n-        bundle.load_async = False\n-        bundle.load_defer = False\n+    def test_add_bundle_on_request_with_subrequest(self):\n+        # request\n+        req = self.layer["request"]\n \n-        self.assertTrue(\'async="async"\' not in view.index(view))\n-        self.assertTrue(\'defer="defer"\' not in view.index(view))\n+        # create a subrequest.\n+        subreq = req.clone()\n+        subreq["PARENT_REQUEST"] = req\n \n-    def test_bundle_defer_async_production(self):\n-        """The default and logged-in production bundles should never be loaded\n-        async or defered.\n-        For bundles to be loaded async or defered, you need to empty merge_with\n-        """\n-        registry = getUtility(IRegistry)\n+        # add a bundle via the main request\n+        add_bundle_on_request(req, "foobar")\n \n-        bundles = registry.collectionOfInterface(\n-            IBundleRegistry,\n-            prefix="plone.bundles"\n-        )\n-        bundles[\'plone\'].load_async = False\n-        bundles[\'plone\'].load_defer = False\n-        bundles[\'plone-logged-in\'].load_async = False\n-        bundles[\'plone-logged-in\'].load_defer = False\n+        scripts = ScriptsView(self.layer["portal"], subreq, None)\n \n-        view = ScriptsView(self.app, self.app.REQUEST, None, None)\n+        # add some bundle to test with\n+        bundle = self._make_test_bundle()\n+        bundle.enabled = False\n+        scripts.update()\n+        result = scripts.render()\n+        self.assertIn("http://foo.bar/foobar.js", result)\n \n-        import Products.CMFPlone.resources.browser\n-        path = os.path.dirname(Products.CMFPlone.resources.browser.__file__)\n-        view.index = ViewPageTemplateFile(\'scripts.pt\', path)\n-        view.update()\n+    def test_remove_bundle_on_request_with_subrequest(self):\n+        # request\n+        req = self.layer["request"]\n \n-        self.assertTrue(\'async="async"\' not in view.index(view))\n-        self.assertTrue(\'defer="defer"\' not in view.index(view))\n-\n-        bundles[\'plone\'].load_async = True\n-        bundles[\'plone\'].load_defer = True\n-        self.assertEqual(view.index(view).count(\'async="async"\'), 0)\n-        self.assertEqual(view.index(view).count(\'defer="defer"\'), 0)\n-\n-        bundles[\'plone\'].merge_with = \'\'\n-        bundles[\'plone\'].load_async = True\n-        bundles[\'plone\'].load_defer = True\n-        self.assertEqual(view.index(view).count(\'async="async"\'), 1)\n-        self.assertEqual(view.index(view).count(\'defer="defer"\'), 1)\n-\n-        bundles[\'plone\'].merge_with = \'\'\n-        bundles[\'plone\'].load_async = True\n-        bundles[\'plone\'].load_defer = True\n-        bundles[\'plone-logged-in\'].merge_with = \'\'\n-        bundles[\'plone-logged-in\'].load_async = True\n-        bundles[\'plone-logged-in\'].load_defer = True\n-        self.assertEqual(view.index(view).count(\'async="async"\'), 2)\n-        self.assertEqual(view.index(view).count(\'defer="defer"\'), 2)\n-\n-\n-class TestConfigJs(PloneTestCase.PloneTestCase):\n-\n-    def test_init_shim_works_with_function(self):\n-        config = self.portal.restrictedTraverse(\'config.js\')()\n-        self.assertTrue(\'init: function\' in config)\n-\n-\n-class TestControlPanel(PloneTestCase.PloneTestCase):\n-\n-    def test_save_override_file(self):\n-        req = self.layer[\'request\']\n-        req.environ[\'PATH_INFO\'] = \'++plone++foo/bar.css\'\n-        mng = OverrideFolderManager(self.portal)\n-        mng.save_file(\'foo/bar.css\', \'foobar\')\n-        value = self.portal.restrictedTraverse(\'++plone++foo/bar.css\')\n-        self.assertEqual(value.data, b\'foobar\')\n-\n-    def test_override_rewrite_links(self):\n-        req = self.layer[\'request\']\n-        req.environ[\'PATH_INFO\'] = \'++plone++foo/bar.css\'\n-        mng = OverrideFolderManager(self.portal)\n-        css = """\n-.foo {{\n-    background-image: url("{site_url}/foobar.css");\n-}}\n-.bar {{\n-    background-image: url("{site_url}/++plone++foo/bar/foobar.css");\n-}}\n-.foobar {{\n-    background-image: url("{site_url}/foo/bar/foobar.css");\n-}}""".format(site_url=self.portal.absolute_url())\n-        mng.save_file(\'foo/bar.css\', css)\n-        value = self.portal.restrictedTraverse(\'++plone++foo/bar.css\')\n-        match = b"""\n-.foo {\n-    background-image: url("../foobar.css");\n-}\n-.bar {\n-    background-image: url("bar/foobar.css");\n-}\n-.foobar {\n-    background-image: url("../foo/bar/foobar.css");\n-}"""\n-        self.assertEqual(value.data, match)\n-\n-    def test_get_require_js_config_uses_stub_modules(self):\n-        view = ResourceRegistryControlPanelView(\n-            self.portal, self.layer[\'request\'])\n-        self.layer[\'request\'].form[\'bundle\'] = \'plone-logged-in\'\n-        config = json.loads(view.js_build_config())\n-        self.assertEqual(config[\'paths\'][\'jquery\'], \'empty:\')\n-\n-\n-class DummyResource:\n-    def __init__(self, name):\n-        self.js = name\n-        self.css = [name, ]\n-\n-\n-class DummyBundle:\n-    def __init__(self, name, enabled=True):\n-        self.__prefix__ = \'test/\' + name\n-        self.compile = True\n-        self.conditionalcomment = None\n-        self.csscompilation = \'++resource++\' + name + \'.css\'\n-        self.depends = None\n-        self.enabled = enabled\n-        self.expression = None\n-        self.jscompilation = \'++resource++\' + name + \'.js\'\n-        self.last_compilation = \'123\'\n-        self.resources = []\n+        # create a subrequest.\n+        subreq = req.clone()\n+        subreq["PARENT_REQUEST"] = req\n \n+        # add a bundle via the main request\n+        add_bundle_on_request(req, "foobar")\n \n-class TestScriptsViewlet(PloneTestCase.PloneTestCase):\n+        scripts = ScriptsView(self.layer["portal"], subreq, None)\n \n-    def test_scripts_viewlet(self):\n-        scripts = ScriptsView(\n-            self.layer[\'portal\'],\n-            self.layer[\'request\'],\n-            None\n-        )\n+        # add some bundle to test with\n+        bundle = self._make_test_bundle()\n+        bundle.enabled = True\n         scripts.update()\n-        results = scripts.scripts()\n-        self.assertEqual(results[0][\'bundle\'], \'production\')\n-        self.assertTrue(results[0][\'src\'].startswith(\n-            \'http://nohost/plone/++plone++production/++unique++\'))\n-        self.assertTrue(results[0][\'src\'].endswith(\'/default.js\'))\n-        self.assertEqual(results[1][\'bundle\'], \'production\')\n-        self.assertTrue(results[1][\'src\'].startswith(\n-            \'http://nohost/plone/++plone++production/++unique++\'))\n-        self.assertTrue(results[1][\'src\'].endswith(\'/logged-in.js\'))\n-        self.assertEqual(len(results), 2)\n+        result = scripts.render()\n+        self.assertNotIn("http://test.foo/test.css", result)\n \n-    def test_scripts_viewlet_anonymous(self):\n-        logout()\n-        scripts = ScriptsView(\n-            self.layer[\'portal\'],\n-            self.layer[\'request\'],\n-            None\n-        )\n-        scripts.update()\n-        results = scripts.scripts()\n-        self.assertEqual(results[0][\'bundle\'], \'production\')\n-        self.assertTrue(results[0][\'src\'].startswith(\n-            \'http://nohost/plone/++plone++production/++unique++\'))\n-        self.assertTrue(results[0][\'src\'].endswith(\'/default.js\'))\n-        self.assertEqual(len(results), 1)\n-\n-    @mock.patch.object(\n-        ScriptsView,\n-        \'get_resources\',\n-        new=lambda self: {\'foo\': DummyResource(\'++resource++foo.js\')}\n-    )\n-    def test_request_resources(self):\n-        add_resource_on_request(self.layer[\'request\'], \'foo\')\n-        scripts = ScriptsView(\n-            self.layer[\'portal\'],\n-            self.layer[\'request\'],\n-            None\n-        )\n-        scripts.update()\n-        results = scripts.scripts()\n-        self.assertEqual(\n-            results[-1], {\'src\': \'http://nohost/plone/++resource++foo.js\',\n-                          \'conditionalcomment\': \'\',\n-                          \'resetrjs\': False,\n-                          \'bundle\': \'none\'})\n \n-    def test_request_resources_not_add_same_twice(self):\n-        req = self.layer[\'request\']\n-        add_resource_on_request(req, \'foo\')\n-        add_resource_on_request(req, \'foo\')\n+class TestStylesViewlet(PloneTestCase.PloneTestCase):\n+    def test_styles_viewlet(self):\n+        styles = StylesView(self.layer["portal"], self.layer["request"], None)\n+        styles.update()\n+        results = styles.render()\n+        self.assertIn("++theme++barceloneta/css/barceloneta.min.css", results)\n+        self.assertIn("http://nohost/plone/++webresource++", results)\n \n-        self.assertEqual(len(req.enabled_resources), 1)\n+    def test_styles_viewlet_anonymous(self):\n+        logout()\n+        styles = StylesView(self.layer["portal"], self.layer["request"], None)\n+        styles.update()\n+        results = styles.render()\n+        self.assertIn("++theme++barceloneta/css/barceloneta.min.css", results)\n+        self.assertIn("http://nohost/plone/++webresource++", results)\n \n     def test_request_bundles_not_add_same_twice(self):\n-        req = self.layer[\'request\']\n-        add_bundle_on_request(req, \'foo\')\n-        add_bundle_on_request(req, \'foo\')\n-\n+        req = self.layer["request"]\n+        add_bundle_on_request(req, "foo")\n+        add_bundle_on_request(req, "foo")\n         self.assertEqual(len(req.enabled_bundles), 1)\n \n-    @mock.patch.object(\n-        ScriptsView,\n-        \'get_bundles\',\n-        new=lambda self: {\'foo\': Bundle(DummyBundle(\'foo\', enabled=False))}\n-    )\n     def test_add_bundle_on_request_with_subrequest(self):\n-        req = self.layer[\'request\']\n+        # request\n+        req = self.layer["request"]\n \n         # create a subrequest.\n         subreq = req.clone()\n-        subreq[\'PARENT_REQUEST\'] = req\n+        subreq["PARENT_REQUEST"] = req\n \n         # add a bundle via the main request\n-        add_bundle_on_request(req, \'foo\')\n-\n-        scripts = ScriptsView(self.layer[\'portal\'], subreq, None)\n-\n-        # Send resource registry in development mode\n-        # Via a fake registry to allow accessing like this:\n-        # self.registry.records[\'plone.resources.development\'].value\n-        scripts.registry = type(\n-            \'reg\',\n-            (object, ),\n-            {\'records\': {\n-                \'plone.resources.development\': type(\n-                    \'val\',\n-                    (object, ),\n-                    {\'value\': True}\n-                )()\n-            }}\n-        )()\n-        self.assertTrue(scripts.development)\n+        add_bundle_on_request(req, "testbundle")\n+\n+        scripts = ScriptsView(self.layer["portal"], subreq, None)\n+\n+        # add some bundle to test with\n+        registry = getUtility(IRegistry)\n+        data = {\n+            "jscompilation": ("http://test.foo/test.min.js", regfield.TextLine()),\n+            "csscompilation": ("http://test.foo/test.css", regfield.TextLine()),\n+            "expression": ("", regfield.TextLine()),\n+            "enabled": (False, regfield.Bool()),\n+            "depends": ("", regfield.TextLine()),\n+            "load_async": (True, regfield.Bool()),\n+            "load_defer": (True, regfield.Bool()),\n+        }\n+        for key, regdef in data.items():\n+            record = Record(regdef[1])\n+            record.value = regdef[0]\n+            registry.records[f"plone.bundles/testbundle.{key}"] = record\n \n         scripts.update()\n-        result = scripts.scripts()[-1]\n-        self.assertEqual(\n-            result[\'src\'],\n-            \'http://nohost/plone/++resource++foo.js?version=123\'\n-        )\n-        self.assertEqual(\n-             result[\'conditionalcomment\'],\n-             None\n-        )\n-        self.assertEqual(\n-            result[\'bundle\'],\n-            \'foo\',\n-        )\n-        self.assertEqual(\n-            result[\'async\'],\n-            None\n-        )\n-        self.assertEqual(\n-            result[\'defer\'],\n-            None\n-        )\n+        result = scripts.render()\n+        self.assertIn("http://test.foo/test.min.js", result)\n \n-    @mock.patch.object(\n-        ScriptsView,\n-        \'get_bundles\',\n-        new=lambda self: {\'foo\': Bundle(DummyBundle(\'foo\', enabled=True))}\n-    )\n     def test_remove_bundle_on_request_with_subrequest(self):\n-        req = self.layer[\'request\']\n+        # request\n+        req = self.layer["request"]\n \n         # create a subrequest.\n         subreq = req.clone()\n-        subreq[\'PARENT_REQUEST\'] = req\n-\n-        # remove the enabled \'foo\' bundle\n-        remove_bundle_on_request(req, \'foo\')\n-\n-        scripts = ScriptsView(self.layer[\'portal\'], subreq, None)\n-\n-        # Send resource registry in development mode\n-        # Via a fake registry to allow accessing like this:\n-        # self.registry.records[\'plone.resources.development\'].value\n-        scripts.registry = type(\n-            \'reg\',\n-            (object, ),\n-            {\'records\': {\n-                \'plone.resources.development\': type(\n-                    \'val\',\n-                    (object, ),\n-                    {\'value\': True}\n-                )()\n-            }}\n-        )()\n-        self.assertTrue(scripts.development)\n+        subreq["PARENT_REQUEST"] = req\n \n-        scripts.update()\n-        results = scripts.scripts()\n-        self.assertEqual(\n-            [i for i in results if \'foo\' in i[\'src\']],\n-            []\n-        )\n+        # remove a bundle via the main request\n+        remove_bundle_on_request(req, "testbundle")\n \n-    @mock.patch.object(\n-        ScriptsView,\n-        \'get_resources\',\n-        new=lambda self: {\'foo\': DummyResource(\'++resource++foo.js\')}\n-    )\n-    @mock.patch.object(\n-        StylesView,\n-        \'get_resources\',\n-        new=lambda self: {\'foo\': DummyResource(\'++resource++foo.css\')}\n-    )\n-    def test_add_resource_on_request_with_subrequest(self):\n-        """Check, if a resource added at a main request is picked up from a\n-        subrequest for creating the header scripts section.\n-        """\n-        req = self.layer[\'request\']\n+        scripts = ScriptsView(self.layer["portal"], subreq, None)\n \n-        # create a subrequest.\n-        subreq = req.clone()\n-        subreq[\'PARENT_REQUEST\'] = req\n-\n-        # add a resource to main request\n-        add_resource_on_request(req, \'foo\')\n+        # add some bundle to test with\n+        registry = getUtility(IRegistry)\n+        data = {\n+            "jscompilation": ("http://test.foo/test.min.js", regfield.TextLine()),\n+            "csscompilation": ("http://test.foo/test.css", regfield.TextLine()),\n+            "expression": ("", regfield.TextLine()),\n+            "enabled": (True, regfield.Bool()),\n+            "depends": ("", regfield.TextLine()),\n+            "load_async": (True, regfield.Bool()),\n+            "load_defer": (True, regfield.Bool()),\n+        }\n+        for key, regdef in data.items():\n+            record = Record(regdef[1])\n+            record.value = regdef[0]\n+            registry.records[f"plone.bundles/testbundle.{key}"] = record\n \n-        scripts = ScriptsView(self.layer[\'portal\'], subreq, None)\n         scripts.update()\n-        results = scripts.scripts()\n-        self.assertEqual(\n-            results[-1],\n-            {\n-                \'src\': \'http://nohost/plone/++resource++foo.js\',\n-                \'conditionalcomment\': \'\',\n-                \'resetrjs\': False,\n-                \'bundle\': \'none\',\n-            }\n-        )\n+        result = scripts.render()\n+        self.assertNotIn("http://test.foo/test.min.js", result)\n \n-        styles = StylesView(self.layer[\'portal\'], subreq, None)\n+\n+class TestExpressions(PloneTestCase.PloneTestCase):\n+\n+    def setUp(self):\n+        # Add three bundles with three different expressions.\n+        registry = getUtility(IRegistry)\n+        data = {\n+            "jscompilation": ("http://test.foo/test.min.js", regfield.TextLine()),\n+            "csscompilation": ("http://test.foo/test.css", regfield.TextLine()),\n+            "expression": ("python: False", regfield.TextLine()),\n+            "enabled": (True, regfield.Bool()),\n+            "depends": ("", regfield.TextLine()),\n+            "load_async": (True, regfield.Bool()),\n+            "load_defer": (True, regfield.Bool()),\n+        }\n+        for key, regdef in data.items():\n+            record = Record(regdef[1])\n+            record.value = regdef[0]\n+            registry.records[f"plone.bundles/testbundle.{key}"] = record\n+\n+        data = {\n+            "jscompilation": ("http://test2.foo/member.min.js", regfield.TextLine()),\n+            "csscompilation": ("http://test2.foo/member.css", regfield.TextLine()),\n+            "expression": ("python: member is not None", regfield.TextLine()),\n+            "enabled": (True, regfield.Bool()),\n+            "depends": ("", regfield.TextLine()),\n+            "load_async": (True, regfield.Bool()),\n+            "load_defer": (True, regfield.Bool()),\n+        }\n+        for key, regdef in data.items():\n+            record = Record(regdef[1])\n+            record.value = regdef[0]\n+            registry.records[f"plone.bundles/testbundle2.{key}"] = record\n+\n+        data = {\n+            "jscompilation": ("http://test3.foo/test.min.js", regfield.TextLine()),\n+            "csscompilation": ("http://test3.foo/test.css", regfield.TextLine()),\n+            "expression": ("python: True", regfield.TextLine()),\n+            "enabled": (True, regfield.Bool()),\n+            "depends": ("", regfield.TextLine()),\n+            "load_async": (True, regfield.Bool()),\n+            "load_defer": (True, regfield.Bool()),\n+        }\n+        for key, regdef in data.items():\n+            record = Record(regdef[1])\n+            record.value = regdef[0]\n+            registry.records[f"plone.bundles/testbundle3.{key}"] = record\n+\n+    def test_styles_authenticated(self):\n+        styles = StylesView(self.layer["portal"], self.layer["request"], None)\n         styles.update()\n-        results = styles.styles()\n-        self.assertListEqual(\n-            list(filter(lambda it: \'foo\' in it[\'src\'], results)),\n-            [{\n-                \'src\': \'http://nohost/plone/++resource++foo.css\',\n-                \'conditionalcomment\': \'\',\n-                \'rel\': \'stylesheet\',\n-                \'bundle\': \'none\',\n-            }]\n-        )\n+        results = styles.render()\n+        # Check that standard resources are still there, signalling that\n+        # rendering works without throwing an exception.\n+        self.assertIn("++theme++barceloneta/css/barceloneta.min.css", results)\n+        self.assertIn("http://nohost/plone/++webresource++", results)\n+        # Test our additional bundles.\n+        # self.assertNotIn("http://test.foo/test.css", results)\n+        self.assertIn("http://test2.foo/member.css", results)\n+        self.assertIn("http://test3.foo/test.css", results)\n+\n+    def test_styles_anonymous(self):\n+        logout()\n+        styles = StylesView(self.layer["portal"], self.layer["request"], None)\n+        styles.update()\n+        results = styles.render()\n+        # Check that standard resources are still there, signalling that\n+        # rendering works without throwing an exception.\n+        self.assertIn("++theme++barceloneta/css/barceloneta.min.css", results)\n+        self.assertIn("http://nohost/plone/++webresource++", results)\n+        # Test our additional bundles.\n+        # self.assertNotIn("http://test.foo/test.css", results)\n+        self.assertNotIn("http://test2.foo/member.css", results)\n+        self.assertIn("http://test3.foo/test.css", results)\n+\n+    def test_scripts_authenticated(self):\n+        scripts = ScriptsView(self.layer["portal"], self.layer["request"], None)\n+        scripts.update()\n+        results = scripts.render()\n+        # Check that standard resources are still there, signalling that\n+        # rendering works without throwing an exception.\n+        self.assertIn("++plone++static/bundle-plone/bundle.min.js", results)\n+        # The first one should be included, the second one not.\n+        # self.assertNotIn("http://test.foo/test.min.js", results)\n+        self.assertIn("http://test2.foo/member.min.js", results)\n+        self.assertIn("http://test3.foo/test.min.js", results)\n+\n+    def test_scripts_anonymous(self):\n+        logout()\n+        scripts = ScriptsView(self.layer["portal"], self.layer["request"], None)\n+        scripts.update()\n+        results = scripts.render()\n+        # Check that standard resources are still there, signalling that\n+        # rendering works without throwing an exception.\n+        self.assertIn("++plone++static/bundle-plone/bundle.min.js", results)\n+        # The first one should be included, the second one not.\n+        # self.assertNotIn("http://test.foo/test.min.js", results)\n+        self.assertNotIn("http://test2.foo/member.min.js", results)\n+        self.assertIn("http://test3.foo/test.min.js", results)\ndiff --git a/Products/CMFPlone/tests/testSecurity.py b/Products/CMFPlone/tests/testSecurity.py\nindex ee2fa5c467..5286d8ee2a 100644\n--- a/Products/CMFPlone/tests/testSecurity.py\n+++ b/Products/CMFPlone/tests/testSecurity.py\n@@ -159,7 +159,8 @@ def get_admin_browser(self):\n         return browser\n \n     def test_plonetool(self):\n-        base_url = self.layer["portal"].absolute_url() + "/plone_utils"\n+        portal_url = self.layer["portal"].absolute_url()\n+        base_url = portal_url + "/plone_utils"\n         browser = self.get_admin_browser()\n         method_names = (\n             "addPortalMessage",\n@@ -173,6 +174,9 @@ def test_plonetool(self):\n             "normalizeString",\n             "getEmptyTitle",\n         )\n+        # First open a url that actually works.\n+        # This avoids an error with zope.component 5+.\n+        browser.open(portal_url)\n         for method_name in method_names:\n             with self.assertRaises(NotFound):\n                 browser.open(base_url + "/" + method_name)\n@@ -226,6 +230,9 @@ def test_hotfix_20160419(self):\n             "propertyLabel",\n             "propertyDescription",\n         )\n+        # First open a url that actually works.\n+        # This avoids an error with zope.component 5+.\n+        browser.open(portal_url)\n         for method_name in method_names:\n             with self.assertRaises(NotFound):\n                 browser.open(portal_url + "/" + method_name)\ndiff --git a/Products/CMFPlone/tests/testWebDAV.py b/Products/CMFPlone/tests/testWebDAV.py\nindex 63ca592faa..7ab89b0644 100644\n--- a/Products/CMFPlone/tests/testWebDAV.py\n+++ b/Products/CMFPlone/tests/testWebDAV.py\n@@ -303,8 +303,6 @@ def testPUTIndexHtml(self):\n     def testPUTIndexHtmlIntoPortal(self):\n         # Create an index_html document in the portal via FTP/DAV\n         self.assertFalse(\'index_html\' in self.portal)\n-        self.assertEqual(self.portal.index_html.meta_type,\n-                         \'Filesystem Page Template\')\n         self.setRoles([\'Manager\'])\n \n         response = self.publish(\ndiff --git a/Products/CMFPlone/tests/test_icons.py b/Products/CMFPlone/tests/test_icons.py\nindex 4832c8b0db..9b720c546f 100644\n--- a/Products/CMFPlone/tests/test_icons.py\n+++ b/Products/CMFPlone/tests/test_icons.py\n@@ -36,4 +36,39 @@ def test_icons_url(self):\n     def test_icons_tag(self):\n         page = self.app\n         view = page.restrictedTraverse(\'@@iconresolver\')\n-        self.assertIn(b\'bi bi-bug\', view.tag(\'bug\'))\n\\ No newline at end of file\n+        self.assertIn(b\'bi bi-bug\', view.tag(\'bug\'))\n+\n+\n+\n+class IconTraverserTest(unittest.TestCase):\n+    """Test the icon traverser or PloneBundlesTraverser."""\n+\n+    layer = PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n+\n+    def setUp(self):\n+        self.portal = self.layer[\'portal\']\n+        self.request = self.layer[\'request\']\n+\n+    def test_default_icon(self):\n+        self.portal.restrictedTraverse("++plone++icons/plone.svg")\n+\n+    def test_bootstrap_icon(self):\n+        self.portal.restrictedTraverse("++plone++bootstrap-icons/clock.svg")\n+\n+    def test_bootstrap_icon_with_path_info(self):\n+        """Get bootstrap icon while request has a PATH_INFO.\n+\n+        When the request has PATH_INFO, which it normally has,\n+        the code originally ignored the remaining name (clock.svg)\n+        and tried to traverse based on this PATH_INFO.\n+        This works fine when the url of the request is for an icon.\n+        But when the url is for a normal page which tries to load an icon\n+        in the template, it fails.\n+\n+        I don\'t know why most of the time it goes right.\n+        But I have occasionally seen failures.\n+        And it happens at least in plone.i18n tests.\n+        https://github.com/plone/plone.i18n/pull/41\n+        """\n+        self.request.environ["PATH_INFO"] = "plone"\n+        self.portal.restrictedTraverse("++plone++bootstrap-icons/clock.svg")\ndiff --git a/Products/CMFPlone/tests/test_metabundles.py b/Products/CMFPlone/tests/test_metabundles.py\ndeleted file mode 100644\nindex 57874b4b3f..0000000000\n--- a/Products/CMFPlone/tests/test_metabundles.py\n+++ /dev/null\n@@ -1,144 +0,0 @@\n-from plone.resource.interfaces import IResourceDirectory\n-from Products.CMFPlone.interfaces.resources import (\n-    OVERRIDE_RESOURCE_DIRECTORY_NAME,\n-)\n-from zope.component import getUtility\n-\n-from Products.CMFPlone.resources.browser.combine import (\n-    PRODUCTION_RESOURCE_DIRECTORY,\n-    combine_bundles,\n-)\n-from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n-from Products.GenericSetup.tests import common\n-\n-import unittest\n-\n-\n-class DummyImportContext(common.DummyImportContext):\n-    # Copied from plone.app.registry tests.\n-    # This expands the context with directories.\n-\n-    _directories = {}\n-\n-    def listDirectory(self, path):\n-        return self._directories.get(path, [])\n-\n-    def isDirectory(self, path):\n-        return path in self._directories\n-\n-\n-class ProductsCMFPloneSetupTest(unittest.TestCase):\n-\n-    layer = PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n-\n-    def setUp(self):\n-        self.portal = self.layer[\'portal\']\n-        combine_bundles(self.portal)\n-        persistent_directory = getUtility(\n-            IResourceDirectory, name="persistent")\n-        container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n-        self.production_folder = container[PRODUCTION_RESOURCE_DIRECTORY]\n-\n-    def test_production_directory(self):\n-        self.assertEqual(\n-            self.production_folder.listDirectory(),\n-            [\n-                \'default.css\',\n-                \'default.js\',\n-                \'logged-in.css\',\n-                \'logged-in.js\',\n-                \'timestamp.txt\'\n-            ]\n-        )\n-\n-    def test_default_js_bundle(self):\n-        self.assertIn(\n-            b"jQuery",\n-            self.production_folder.readFile(\'default.js\')\n-        )\n-\n-    def test_overrides(self):\n-        persistent_directory = getUtility(\n-            IResourceDirectory, name="persistent")\n-        container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n-        container.makeDirectory(\'static\')\n-        static = container[\'static\']\n-        static.writeFile(\'plone-legacy-compiled.js\', \'alert("Overrided legacy!");\')\n-        combine_bundles(self.portal)\n-        self.assertIn(\n-            b\'alert("Overrided legacy!");\',\n-            self.production_folder.readFile(\'default.js\')\n-        )\n-\n-    def test_import(self):\n-        # If IBundleRegistry is in registry.xml, the combine-bundles import step\n-        # will call combine_bundles.\n-        from Products.CMFPlone.resources.exportimport.bundles import combine\n-        # from Products.CMFPlone.resources.browser.combine import get_override_directory\n-        # from Products.CMFPlone.resources.browser.combine import PRODUCTION_RESOURCE_DIRECTORY\n-\n-        # Prepare some registry xml files with or without the key IBundleRegistry.\n-        xml_with = b\'<registry>with IBundleRegistry</registry>\'\n-        xml_without = b\'<registry>without bundle registry</registry>\'\n-        xml_without2 = b\'<registry>without bundle registry</registry>\'\n-        context = DummyImportContext(self.portal, purge=False)\n-\n-        def get_timestamp():\n-            # If combine_bundles is run, a timestamp is updated.\n-            return self.production_folder.readFile(\'timestamp.txt\')\n-\n-        ts1 = get_timestamp()\n-        self.assertTrue(ts1)\n-\n-        # call the import step on a file without bundles\n-        context._files = {\'registry.xml\': xml_without}\n-        combine(context)\n-        ts2 = get_timestamp()\n-        self.assertEqual(ts1, ts2)\n-\n-        # call the import step on a file with bundles\n-        context._files = {\'registry.xml\': xml_with}\n-        combine(context)\n-        ts3 = get_timestamp()\n-        self.assertLess(ts2, ts3)\n-\n-        # call the import step on a file without bundles\n-        context._files = {\'registry.xml\': xml_without2}\n-        combine(context)\n-        ts4 = get_timestamp()\n-        self.assertEqual(ts3, ts4)\n-\n-        # Since Plone 5.1 the registry xml can also be a directory.\n-        # Set one file with bundles.\n-        context._files = {\n-            \'registry.xml\': xml_without,\n-            \'registry/foo2.xml\': xml_with,\n-            \'registry/foo3.xml\': xml_without2,\n-        }\n-        context._directories = {\n-            \'registry\': [\n-                \'foo2.xml\',\n-                \'foo3.xml\',\n-            ]\n-        }\n-        combine(context)\n-        ts10 = get_timestamp()\n-        self.assertLess(ts4, ts10)\n-\n-        # The registry.xml file itself may be missing.\n-        context._files = {\n-            \'registry/foo2.xml\': xml_with,\n-            \'registry/foo3.xml\': xml_without2,\n-        }\n-        combine(context)\n-        ts11 = get_timestamp()\n-        self.assertLess(ts10, ts11)\n-\n-        # Now without any bundle info.\n-        context._files = {\n-            \'registry/foo2.xml\': xml_without,\n-            \'registry/foo3.xml\': xml_without2,\n-        }\n-        combine(context)\n-        ts12 = get_timestamp()\n-        self.assertEqual(ts11, ts12)\ndiff --git a/Products/CMFPlone/tests/test_safe_formatter.py b/Products/CMFPlone/tests/test_safe_formatter.py\nindex bb90285cdd..65076d1c8a 100644\n--- a/Products/CMFPlone/tests/test_safe_formatter.py\n+++ b/Products/CMFPlone/tests/test_safe_formatter.py\n@@ -118,7 +118,7 @@ def test_cook_zope2_page_templates_good_format_attr_str(self):\n         hack_pt(pt, self.portal)\n         self.assertEqual(\n             pt.pt_render().strip(),\n-            \'<p>title of &lt;PloneSite at plone&gt; is Plone site</p>\')\n+            \'<p>title of &lt;PloneSite at plone&gt; is Welcome to Plone</p>\')\n \n     def test_cook_zope2_page_templates_good_format_attr_unicode(self):\n         from Products.PageTemplates.ZopePageTemplate import ZopePageTemplate\n@@ -126,7 +126,7 @@ def test_cook_zope2_page_templates_good_format_attr_unicode(self):\n         hack_pt(pt, self.portal)\n         self.assertEqual(\n             pt.pt_render().strip(),\n-            \'<p>title of &lt;PloneSite at plone&gt; is Plone site</p>\')\n+            \'<p>title of &lt;PloneSite at plone&gt; is Welcome to Plone</p>\')\n \n     def test_access_to_private_content_not_allowed_via_rich_text(self):\n         try:\n@@ -324,28 +324,6 @@ def test_standard_error_message(self):\n         # We expect a json string back.\n         self.assertTrue(response.body, \'{"error_type": "None"}\')\n \n-    def test_resource_registry_vector(self):\n-        for vector in (\'less-variables.js\', \'less-modify.js\'):\n-            src = \'\'\'\n-class ctx:\n-  def format(self, *args, **kwargs):\n-    self.foo=context\n-    return "foo"\n-\n-context.portal_registry[\'plone.lessvariables\'][\'foo\'] = ctx()\n-context.portal_registry[\'plone.lessvariables\'][\'bar\'] = "{foo.foo.__class__}"\n-js = context.restrictedTraverse("%s")\n-return js()\n-\'\'\' % vector\n-            from Products.PythonScripts.PythonScript import PythonScript\n-            script = PythonScript(\'evil\')\n-            script._filepath = \'evil\'\n-            script.write(src)\n-            self.portal.evil = script\n-            output = self.publish(\'/plone/evil\')\n-            self.assertFalse(\n-                b\'Products.CMFPlone.Portal.PloneSite\' in output.body)\n-\n     def test_cook_zope2_page_templates_bad_key_str(self):\n         from Products.PageTemplates.ZopePageTemplate import ZopePageTemplate\n         pt = ZopePageTemplate(\'mytemplate\', BAD_KEY_STR)\ndiff --git a/Products/CMFPlone/traversal.py b/Products/CMFPlone/traversal.py\nindex ebeb4a9120..77f33f36a0 100644\n--- a/Products/CMFPlone/traversal.py\n+++ b/Products/CMFPlone/traversal.py\n@@ -33,7 +33,14 @@ def traverse(self, name, remaining):\n             return super().traverse(name, remaining)\n \n         resource_path = req.environ[\'PATH_INFO\'].split(\'++plone++\')[-1]\n-        resource_name, resource_filepath = resource_path.split(\'/\', 1)\n+        try:\n+            resource_name, resource_filepath = resource_path.split(\'/\', 1)\n+        except ValueError:\n+            # Not the path info / url that we expected.\n+            # So the request is not for a resource,\n+            # but for a page that traverses to a resource.\n+            # The standard resource traverser can handle this.\n+            return super().traverse(name, remaining)\n \n         # If we have additional traversers in the path we should not use them\n         # in the file lookup\ndiff --git a/Products/CMFPlone/www/addPropertySheet.zpt b/Products/CMFPlone/www/addPropertySheet.zpt\nindex 33287009f0..2d01f3bcda 100644\n--- a/Products/CMFPlone/www/addPropertySheet.zpt\n+++ b/Products/CMFPlone/www/addPropertySheet.zpt\n@@ -1,4 +1,4 @@\n-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" "http://www.w3.org/TR/REC-html40/loose.dtd">\n+<tal:doctype tal:replace="structure string:&lt;!DOCTYPE html&gt;" />\n <html>\n <head>\n <meta http-equiv="content-type" content="text/html;charset=utf-8"\ndiff --git a/README.rst b/README.rst\nindex 4638a5788f..85245e5725 100644\n--- a/README.rst\n+++ b/README.rst\n@@ -3,7 +3,7 @@ About Plone\n \n Plone is a mature, secure and user-friendly Content Management System (CMS).\n \n-Plone - and the Open Source community behind it - aggregates more than 15 years experience in content management.\n+Plone - and the Open Source community behind it - aggregates more than 20 years experience in content management.\n It offers all major features expected by a modern CMS out-of-the-box.\n \n Lots of customizations can be made trough-the-web, such as creating content types, themes, workflows and much more.\n@@ -90,7 +90,6 @@ files, etc.\n \n Official Resources\n ------------------\n-* `plone.com <https://plone.com/>`_ - Official website for decision makers and evaluators.\n * `plone.org <https://plone.org/>`_ - Official website for developers and community.\n * `Plone support <https://plone.org/support>`_ - Where to find help.\n * `community.plone.org <https://community.plone.org/>`_ - Official community forum, the best place to get help.\n@@ -98,5 +97,5 @@ Official Resources\n * `training.plone.org <https://training.plone.org/>`_ - Training classes for developers/integrators/users/designers.\n * `plone.api <https://docs.plone.org/develop/plone.api/docs/index.html>`_ - Documentation for plone.api.\n * `plone.restapi <https://plonerestapi.readthedocs.io/en/latest/>`_ - Documentation for plone.restapi.\n-* `official Gitter chat <https://gitter.im/plone/public>`_ - monitored.\n+* `official Discord chat <https://discord.gg/w8e5WCAKGs>`_ - Join link.\n \ndiff --git a/news/1775.breaking b/news/1775.breaking\ndeleted file mode 100644\nindex 57adb5939b..0000000000\n--- a/news/1775.breaking\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-Removed our CMFQuickInstallerTool code completely.\n-See `PLIP 1775 <https://github.com/plone/Products.CMFPlone/issues/1775>`_.\n-[maurits]\ndiff --git a/news/1924.bugfix b/news/1924.bugfix\ndeleted file mode 100644\nindex 2e529f9963..0000000000\n--- a/news/1924.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-No longer doubly undo a response Content-Type change when combining bundles.\n-[maurits]\ndiff --git a/news/23.bugfix b/news/23.bugfix\nnew file mode 100644\nindex 0000000000..9fdeac6cb1\n--- /dev/null\n+++ b/news/23.bugfix\n@@ -0,0 +1,3 @@\n+Fixed evaluating expressions on resources, and especially loading ``plone.session`` resources.\n+Fixes `plone.session` issue 23 <https://github.com/plone/plone.session/issues/23>_.\n+[maurits]\ndiff --git a/news/282.bugfix b/news/282.bugfix\nnew file mode 100644\nindex 0000000000..10c579d2dc\n--- /dev/null\n+++ b/news/282.bugfix\n@@ -0,0 +1 @@\n+Handle /favicon.ico accesses on Plone sites.\ndiff --git a/news/2957.breaking b/news/2957.breaking\ndeleted file mode 100644\nindex 58fbf1be1e..0000000000\n--- a/news/2957.breaking\n+++ /dev/null\n@@ -1,5 +0,0 @@\n-Removed dependency on ``Products.TemporaryFolder``.\n-Note: in your ``plone.recipe.zope2instance`` buildout part, you must set ``zodb-temporary-storage = off``,\n-otherwise you get errors when starting Plone.\n-See `issue 2957 <https://github.com/plone/Products.CMFPlone/issues/2957>`_.\n-[maurits]\ndiff --git a/news/2957.bugfix b/news/2957.bugfix\ndeleted file mode 100644\nindex 1d66515284..0000000000\n--- a/news/2957.bugfix\n+++ /dev/null\n@@ -1,4 +0,0 @@\n-Removed dependency on Products.Sessions.\n-It is still pulled in by Products.PluggableAuthService though.\n-See also `CMFPlacefulWorkflow issue 35 <https://github.com/plone/Products.CMFPlacefulWorkflow/issues/35>`_.\n-[maurits]\ndiff --git a/news/3007.bugfix b/news/3007.bugfix\ndeleted file mode 100644\nindex a451e1cb14..0000000000\n--- a/news/3007.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Fix issue with @@search view when filtering by creation date\n-[frapell]\ndiff --git a/news/3021.bugfix.1 b/news/3021.bugfix.1\ndeleted file mode 100644\nindex 23fa8a5e79..0000000000\n--- a/news/3021.bugfix.1\n+++ /dev/null\n@@ -1 +0,0 @@\n-Merge Hotfix20200121 Check of the strength of password could be skipped.\ndiff --git a/news/3021.bugfix.2 b/news/3021.bugfix.2\ndeleted file mode 100644\nindex b48698a2db..0000000000\n--- a/news/3021.bugfix.2\n+++ /dev/null\n@@ -1 +0,0 @@\n-Merge Hotfix20200121: isURLInPortal could be tricked into accepting malicious links.\ndiff --git a/news/3031.bugfix b/news/3031.bugfix\nnew file mode 100644\nindex 0000000000..a856dc7521\n--- /dev/null\n+++ b/news/3031.bugfix\n@@ -0,0 +1,5 @@\n+Remove Configlets, Change Member Password and Member Prefs not needed in Overview Controlpanel\n+both Views available via User Control Panel\n+\n+the deleton of "Change Member Password" Configlet remove also the issue #3031\n+[1letter]\n\\ No newline at end of file\ndiff --git a/news/3032.bugfix b/news/3032.bugfix\ndeleted file mode 100644\nindex b39fbdbd46..0000000000\n--- a/news/3032.bugfix\n+++ /dev/null\n@@ -1 +0,0 @@\n-Improve tests for the workflow tool method listWFStatesByTitle\ndiff --git a/news/3039.bugfix b/news/3039.bugfix\ndeleted file mode 100644\nindex b6bbf9b03a..0000000000\n--- a/news/3039.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-A default WSGI configuration requires Paste which is only installed with the Zope[wsgi] extra..\n-[tschorr]\ndiff --git a/news/3041.breaking b/news/3041.breaking\ndeleted file mode 100644\nindex 35dd0001eb..0000000000\n--- a/news/3041.breaking\n+++ /dev/null\n@@ -1,4 +0,0 @@\n-A part of "Drop Python 2 Support for Plone 6" #2812:\n-Reflect dropping of Python 2 support in setup.py.\n-Bump version to 6.0\n-[jensens]\n\\ No newline at end of file\ndiff --git a/news/3057.breaking.1 b/news/3057.breaking.1\ndeleted file mode 100644\nindex 2a3f6fe38a..0000000000\n--- a/news/3057.breaking.1\n+++ /dev/null\n@@ -1,4 +0,0 @@\n-Removed ``folder_publish.cpy`` script.\n-Replaced with folder_publish browser view in ``plone.app.content``.\n-Removed deprecated transitionObjectsByPaths.\n-[maurits]\ndiff --git a/news/3057.breaking.2 b/news/3057.breaking.2\ndeleted file mode 100644\nindex cc952a6de4..0000000000\n--- a/news/3057.breaking.2\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-Removed ``content_status_modify.cpy`` script and its validator ``validate_content_status_modify.vpy``.\n-Replaced with ``content_status_modify`` browser view in ``plone.app.content``.\n-[maurits]\ndiff --git a/news/3057.breaking.3 b/news/3057.breaking.3\ndeleted file mode 100644\nindex 8c34c587f0..0000000000\n--- a/news/3057.breaking.3\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Removed Products.CMFFormController dependency.\n-[maurits]\ndiff --git a/news/3061.breaking b/news/3061.breaking\ndeleted file mode 100644\nindex 54bb0be3be..0000000000\n--- a/news/3061.breaking\n+++ /dev/null\n@@ -1 +0,0 @@\n-Barceloneta LTS theming\ndiff --git a/news/3084.feature b/news/3084.feature\ndeleted file mode 100644\nindex f0401c53cf..0000000000\n--- a/news/3084.feature\n+++ /dev/null\n@@ -1,4 +0,0 @@\n-Custom date format strings from registry can be in the ``${}`` format as in the locales files. \n-If theres a day or month name used, this will be translated. \n-For bbb the classic strftime ``%`` strings are still behaving like before.\n-[jensens]\ndiff --git a/news/3130.bugfix.1 b/news/3130.bugfix.1\ndeleted file mode 100644\nindex 8d468956a7..0000000000\n--- a/news/3130.bugfix.1\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Fixed deprecation warning for zope.site.hooks.\n-[maurits]\ndiff --git a/news/3130.bugfix.2 b/news/3130.bugfix.2\ndeleted file mode 100644\nindex eaf1dfb681..0000000000\n--- a/news/3130.bugfix.2\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Fixed invalid escape sequences in regular expressions.\n-[maurits]\ndiff --git a/news/3130.bugfix.3 b/news/3130.bugfix.3\ndeleted file mode 100644\nindex cd3f6d8005..0000000000\n--- a/news/3130.bugfix.3\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Fixed use of own ``utils.isDefaultPage``, which should be ``defaultpage.check_default_page_via_view``.\n-[maurits]\ndiff --git a/news/3175.bugfix b/news/3175.bugfix\ndeleted file mode 100644\nindex 87c3366fe6..0000000000\n--- a/news/3175.bugfix\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-PloneBatch: define ``__bool__`` as copy of ``__nonzero__``.\n-Python 3 calls ``__bool__`` when doing ``bool(batch)``.\n-[maurits]\ndiff --git a/news/3176.bugfix b/news/3176.bugfix\ndeleted file mode 100644\nindex 56e075e5e5..0000000000\n--- a/news/3176.bugfix\n+++ /dev/null\n@@ -1,4 +0,0 @@\n-No longer consider calling ``len(batch)`` as deprecated.\n-The deprecation warning is unvoidable with current ``Products.PageTemplates`` code.\n-Fixes `issue 3176 <https://github.com/plone/Products.CMFPlone/issues/3176>`_.\n-maurits\ndiff --git a/news/3178.bugfix b/news/3178.bugfix\ndeleted file mode 100644\nindex c62697d906..0000000000\n--- a/news/3178.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Fix tests with Products.MailHost 4.10.\n-[maurits]\ndiff --git a/news/3183.breaking.1 b/news/3183.breaking.1\ndeleted file mode 100644\nindex 5e033098be..0000000000\n--- a/news/3183.breaking.1\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Remove six at all places where used. [jensens]\n-\ndiff --git a/news/3183.breaking.2 b/news/3183.breaking.2\ndeleted file mode 100644\nindex 471fabfa1e..0000000000\n--- a/news/3183.breaking.2\n+++ /dev/null\n@@ -1 +0,0 @@\n-Remove ``portal_utf8`` and it twin ``utf8_portal`` from ``utils`` and ``PloneTool`` since its never used nowhere. [jensens]\ndiff --git a/news/3185.bugfix b/news/3185.bugfix\ndeleted file mode 100644\nindex c5811901a6..0000000000\n--- a/news/3185.bugfix\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-Applied: `find . -name "*.py" |grep -v skins|xargs pyupgrade --py36-plus --py3-only`.\n-This auto-rewrites Python 2.7 specific syntax and code to Python 3.6+.\n-[jensens]\ndiff --git a/news/3192.feature b/news/3192.feature\ndeleted file mode 100644\nindex 47a0d3add4..0000000000\n--- a/news/3192.feature\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Add icon resolver to return url or tag for given icon.\n-[santonelli]\n\\ No newline at end of file\ndiff --git a/news/3195.bugfix b/news/3195.bugfix\ndeleted file mode 100644\nindex 85ee3939e4..0000000000\n--- a/news/3195.bugfix\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-Robot tests: Do not use jQuery.size() but use ``.length`` instead.\n-``.size()`` is deprecated since 1.8.\n-[thet]\ndiff --git a/news/3208.breaking b/news/3208.breaking\ndeleted file mode 100644\nindex 8b3631dc40..0000000000\n--- a/news/3208.breaking\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-Remove `meta_type` index and metadata from catalog. \n-Both were unused in Plone core and rarely used in addons.\n-[jensens]\ndiff --git a/news/3214.bugfix b/news/3214.bugfix\ndeleted file mode 100644\nindex 8404902d38..0000000000\n--- a/news/3214.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Remove traces of Archetypes\n-[pbauer]\n\\ No newline at end of file\ndiff --git a/news/3224.bugfix b/news/3224.bugfix\ndeleted file mode 100644\nindex 6acf0a529f..0000000000\n--- a/news/3224.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Fix problem to remove username and password from email settings if there was already one set. \n-[jensens]\ndiff --git a/news/3231.feature b/news/3231.feature\ndeleted file mode 100644\nindex e7254a3b72..0000000000\n--- a/news/3231.feature\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Include a controlpanel to inspect and rebuild relations.\n-[pbauer]\n\\ No newline at end of file\ndiff --git a/news/3240.bugfix b/news/3240.bugfix\nnew file mode 100644\nindex 0000000000..a22c67adf0\n--- /dev/null\n+++ b/news/3240.bugfix\n@@ -0,0 +1,3 @@\n+Removed no longer used ``password_form.pt`` and ``plone_change_password.py``.\n+No longer register now empty skin layers ``plone_prefs`` and ``plone_form_scripts``.\n+[maurits]\ndiff --git a/news/3245.bugfix b/news/3245.bugfix\ndeleted file mode 100644\nindex bd3c4db6e8..0000000000\n--- a/news/3245.bugfix\n+++ /dev/null\n@@ -1 +0,0 @@\n-Fix migration when we have broken objects in the app root (e.g. the temp_folder)\ndiff --git a/news/3247-2.breaking b/news/3247-2.breaking\nnew file mode 100644\nindex 0000000000..a7b2e6edad\n--- /dev/null\n+++ b/news/3247-2.breaking\n@@ -0,0 +1,2 @@\n+Remove dependency on mockup. Mockup is now a npm package only and as such a dependency of plone.staticresources.\n+[thet]\ndiff --git a/news/3247.breaking b/news/3247.breaking\nnew file mode 100644\nindex 0000000000..b453b200ff\n--- /dev/null\n+++ b/news/3247.breaking\n@@ -0,0 +1,6 @@\n+PLIP 3211 - Remove RequireJS.\n+PLIP 3211 - Remove default resource jQuery. It is added to the global namespace via the bundle.\n+PLIP 3211 - Remove support for conditional comments in script and style tags.\n+            It\'s not supported since IE10.\n+            See: https://en.wikipedia.org/wiki/Conditional_comment\n+[MrTango, thet]\ndiff --git a/news/3247.bugfix b/news/3247.bugfix\nnew file mode 100644\nindex 0000000000..a40ff15c33\n--- /dev/null\n+++ b/news/3247.bugfix\n@@ -0,0 +1 @@\n+Fix TinyMCE configuration JSON serialization and cast entity_encoding to a list.\ndiff --git a/news/3249.breaking b/news/3249.breaking\ndeleted file mode 100644\nindex ccc092ee08..0000000000\n--- a/news/3249.breaking\n+++ /dev/null\n@@ -1,6 +0,0 @@\n-Plone 6 with markup update for Bootstrap.\n-Extensive overhaul of Plone ui elements based on Bootstrap components.\n-Introduction of icon resolver with use of icon_epr definitions.\n-[1letter, agitator, ale-rt, balavec, ericof, erral, frapell, fredvd, fulv, gomez, jensens, krissik,\n-mauritsvanrees,  mrtango, nilshofer, petschki, santonelli, thet, thomasmassmann, tkimngyuen,\n-tschorr]\n\\ No newline at end of file\ndiff --git a/news/3251.bugfix b/news/3251.bugfix\ndeleted file mode 100644\nindex 5240287ecf..0000000000\n--- a/news/3251.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Fixed tests in combination with Products.PluggableAuthService 2.6.0.\n-[maurits]\ndiff --git a/news/3252.bugfix b/news/3252.bugfix\ndeleted file mode 100644\nindex c1a17534d6..0000000000\n--- a/news/3252.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Fix closing curly brace in search.pt template.\n-[balavec]\ndiff --git a/news/3257.feature b/news/3257.feature\ndeleted file mode 100644\nindex ededa6542e..0000000000\n--- a/news/3257.feature\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Add PLONE60MARKER (and PLONE52MARKER) Python marker\n-[sneridagh]\ndiff --git a/news/3274.bugfix.1 b/news/3274.bugfix.1\ndeleted file mode 100644\nindex af26a7e9eb..0000000000\n--- a/news/3274.bugfix.1\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-Removed the docstring from various methods to avoid making them available via a url.\n-From the `Products.PloneHotfix20210518 reflected XSS fix <https://plone.org/security/hotfix/20210518/reflected-xss-in-various-spots>`_.\n-[maurits]\ndiff --git a/news/3274.bugfix.2 b/news/3274.bugfix.2\ndeleted file mode 100644\nindex cfe4f9372e..0000000000\n--- a/news/3274.bugfix.2\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-Add the remote code execution fix from the `Products.PloneHotfix20210518 expressions patch <https://plone.org/security/hotfix/20210518/remote-code-execution-via-traversal-in-expressions>`_.\n-We need this because Zope 4.6.2 is too strict for us.\n-[maurits]\ndiff --git a/news/3279.feature b/news/3279.feature\nnew file mode 100644\nindex 0000000000..83482e9526\n--- /dev/null\n+++ b/news/3279.feature\n@@ -0,0 +1,2 @@\n+PLIP #3279: Implement modern images scales. Add huge (1600px), great (1200px), larger (1000px), teaser (600px). Amend preview and mini (remove height constraint).\n+[tisto]\n\\ No newline at end of file\ndiff --git a/news/3290.bugfix b/news/3290.bugfix\nnew file mode 100644\nindex 0000000000..4c7d673144\n--- /dev/null\n+++ b/news/3290.bugfix\n@@ -0,0 +1,2 @@\n+Make author template barceloneta/bs5 ready. Add some CSS classes to Markup. \n+[1letter]\n\\ No newline at end of file\ndiff --git a/news/3297.feature b/news/3297.feature\ndeleted file mode 100644\nindex 9005da5193..0000000000\n--- a/news/3297.feature\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Protect @@historyview with Modify portal content permission. Fixes #3297\n-[pbauer]\n\\ No newline at end of file\ndiff --git a/news/3299.bugfix b/news/3299.bugfix\ndeleted file mode 100644\nindex 49fabfc5bc..0000000000\n--- a/news/3299.bugfix\n+++ /dev/null\n@@ -1 +0,0 @@\n-Remove unused imports. [jensens]\ndiff --git a/news/3303.bugfix b/news/3303.bugfix\ndeleted file mode 100644\nindex 7ee79ba704..0000000000\n--- a/news/3303.bugfix\n+++ /dev/null\n@@ -1 +0,0 @@\n-Fix TypeError when adding a portlet. [daggelpop]\ndiff --git a/news/3322.bugfix b/news/3322.bugfix\nnew file mode 100644\nindex 0000000000..80d2748229\n--- /dev/null\n+++ b/news/3322.bugfix\n@@ -0,0 +1,4 @@\n+Fix broken link in the RelationsInspectControlpanel\n+prepend absolute portal url to links\n+add RelationsControlPanelFunctionalTest\n+[1letter]\n\\ No newline at end of file\ndiff --git a/news/3325.breaking b/news/3325.breaking\nnew file mode 100644\nindex 0000000000..a34eda5b42\n--- /dev/null\n+++ b/news/3325.breaking\n@@ -0,0 +1,14 @@\n+New resource registry to simplify CSS/JS registration.\n+\n+- Completely (almost) rewritten ResourceRegistry based on the "webresource" project.\n+- removed >1600LOC.\n+- Sane dependency resolution using "webresource".\n+- Only "bundles" are registered - support of "resources" and "bundle resources" is removed.\n+- Some of the old bundle registry properties are deprecated and unused.\n+- Removed TTW compilation of bundles via r.js and less.js.\n+- Property `merge_with` is no longer needed in HTTP/2 times and merging here unsupported.\n+- Unique key for delivery is based on hash of bundle file, `last_compilation` property is deprecated.\n+- A new traverser ensures uniqueness.\n+- Other related bundle properties are also deprecated.\n+- Comes with new, server side generated control panel.\n+[jensens]\ndiff --git a/news/3351.feature b/news/3351.feature\nnew file mode 100644\nindex 0000000000..1c863a80fa\n--- /dev/null\n+++ b/news/3351.feature\n@@ -0,0 +1 @@\n+Add TinyMCE template plugin to the plugins vocabulary [MrTango]\n\\ No newline at end of file\ndiff --git a/news/3374.bugfix b/news/3374.bugfix\nnew file mode 100644\nindex 0000000000..3324da5bf3\n--- /dev/null\n+++ b/news/3374.bugfix\n@@ -0,0 +1,2 @@\n+Fix missing closing BODY tag in insufficient_privileges.pt\n+[1letter]\n\\ No newline at end of file\ndiff --git a/news/3416.bugfix b/news/3416.bugfix\nnew file mode 100644\nindex 0000000000..4cadd00894\n--- /dev/null\n+++ b/news/3416.bugfix\n@@ -0,0 +1,2 @@\n+Reorganize viewlets after removing the plone.header viewlet in plone.app.layout\n+[erral]\ndiff --git a/news/3422.bugfix b/news/3422.bugfix\nnew file mode 100644\nindex 0000000000..ac5f6a80ef\n--- /dev/null\n+++ b/news/3422.bugfix\n@@ -0,0 +1,2 @@\n+Fix `login-help` validation\n+[petschki]\ndiff --git a/news/3430.bugfix b/news/3430.bugfix\nnew file mode 100644\nindex 0000000000..d2039c79f2\n--- /dev/null\n+++ b/news/3430.bugfix\n@@ -0,0 +1,2 @@\n+Fix info message (char left over) in quickinstaller template\n+[laulaz]\ndiff --git a/news/3440.feature b/news/3440.feature\nnew file mode 100644\nindex 0000000000..fd00b51026\n--- /dev/null\n+++ b/news/3440.feature\n@@ -0,0 +1 @@\n+Add TinyMCE alignment classes, to avoid style usage [MrTango]\n\\ No newline at end of file\ndiff --git a/news/3442.bugfix b/news/3442.bugfix\nnew file mode 100644\nindex 0000000000..211b196b26\n--- /dev/null\n+++ b/news/3442.bugfix\n@@ -0,0 +1,2 @@\n+Fix overview-controlpanel view for Gunicorn WSGI HTTP Server.\n+[bsuttor]\ndiff --git a/news/3447.bugfix b/news/3447.bugfix\nnew file mode 100644\nindex 0000000000..ab80f61905\n--- /dev/null\n+++ b/news/3447.bugfix\n@@ -0,0 +1 @@\n+Fix detection of initial login time [MrTango]\n\\ No newline at end of file\ndiff --git a/news/3453.bugfix b/news/3453.bugfix\nnew file mode 100644\nindex 0000000000..cfbfe6ca99\n--- /dev/null\n+++ b/news/3453.bugfix\n@@ -0,0 +1,3 @@\n+Updated the list of core profiles that are upgraded during a Plone upgrade.\n+Added ``Products.PlonePAS`` and ``plone.session``, and the optional ``plone.restapi`` and ``plone.volto``.\n+[maurits]\ndiff --git a/news/3459.feature b/news/3459.feature\nnew file mode 100644\nindex 0000000000..c1a15aec03\n--- /dev/null\n+++ b/news/3459.feature\n@@ -0,0 +1,2 @@\n+Compatibility with z3c.form >= 4\n+[petschki]\ndiff --git a/news/3463.bugfix b/news/3463.bugfix\nnew file mode 100644\nindex 0000000000..dcd5766edf\n--- /dev/null\n+++ b/news/3463.bugfix\n@@ -0,0 +1,2 @@\n+Remove obsolete css files previously used in tinymce.\n+[pbauer]\n\\ No newline at end of file\ndiff --git a/news/3468.bugfix b/news/3468.bugfix\nnew file mode 100644\nindex 0000000000..a9cdb27d1d\n--- /dev/null\n+++ b/news/3468.bugfix\n@@ -0,0 +1,2 @@\n+Remove obsolte combine_bundles and related code.\n+[pbauer]\n\\ No newline at end of file\ndiff --git a/news/500.bugfix b/news/500.bugfix\nnew file mode 100644\nindex 0000000000..c9f39b6b50\n--- /dev/null\n+++ b/news/500.bugfix\n@@ -0,0 +1,2 @@\n+Fixed tests when run with ``zope.component`` 5+.\n+[maurits]\ndiff --git a/news/6004.bugfix b/news/6004.bugfix\nnew file mode 100644\nindex 0000000000..d9f2abae8c\n--- /dev/null\n+++ b/news/6004.bugfix\n@@ -0,0 +1,2 @@\n+Updated metadata version to 6004.\n+[maurits]\ndiff --git a/news/721.bugfix b/news/721.bugfix\ndeleted file mode 100644\nindex d6b094302b..0000000000\n--- a/news/721.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Change control panel item sorting and sort them by title\n-[erral]\ndiff --git a/setup.cfg b/setup.cfg\nindex fedd44695f..a9ab3befbf 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -5,9 +5,7 @@ extra-message = [ci skip]\n universal = 0\n \n [isort]\n+profile = black\n force_alphabetical_sort=True\n force_single_line=True\n lines_after_imports=2\n-line_length=80\n-not_skip=__init__.py\n-\ndiff --git a/setup.py b/setup.py\nindex 3b123a81de..5728362ca5 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,7 +1,7 @@\n from setuptools import setup\n from setuptools import find_packages\n \n-version = \'6.0.0a1.dev0\'\n+version = \'6.0.0a4.dev0\'\n \n \n setup(\n@@ -37,12 +37,11 @@\n         \'AccessControl >= 4.0\',\n         \'Acquisition\',\n         \'borg.localrole\',\n-        \'calmjs.parse\',\n         \'DateTime\',\n         \'ExtensionClass\',\n         \'five.customerize\',\n         \'five.localsitemanager\',\n-        \'mockup\',\n+        \'lxml\',\n         \'Pillow\',\n         \'plone.api >= 1.4.4\',\n         \'plone.app.content\',\n@@ -104,10 +103,10 @@\n         \'Products.PortalTransforms\',\n         \'Products.SiteErrorLog\',\n         \'Products.statusmessages\',\n-        \'pyScss\',\n         \'setuptools>=36.2\',\n         \'transaction\',\n-        \'z3c.autoinclude\',\n+        \'plone.autoinclude\',\n+        \'webresource\',\n         \'ZODB3\',\n         \'Zope[wsgi] >= 4.0\',\n         \'zope.app.locales >= 3.6.0\',\n@@ -139,6 +138,7 @@\n             \'plone.app.testing\',\n             \'zope.globalrequest\',\n             \'zope.testing\',\n+            \'gunicorn\',\n         ]\n     },\n )\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-31T08:35:11+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/1f09a8585c152ed559fdc24056bd8b77941b248a

Merge pull request #3294 from plone/use-behavior-names

Use behavior-names instead of python-paths in types-controlpanel

Files changed:
A news/3294.bugfix
M Products/CMFPlone/controlpanel/browser/types.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_types.py

b'diff --git a/Products/CMFPlone/controlpanel/browser/types.py b/Products/CMFPlone/controlpanel/browser/types.py\nindex 7797b148d4..830065698c 100644\n--- a/Products/CMFPlone/controlpanel/browser/types.py\n+++ b/Products/CMFPlone/controlpanel/browser/types.py\n@@ -54,7 +54,7 @@ class TypesControlPanel(AutoExtensibleForm, form.EditForm):\n     form_name = _("Types settings")\n     control_panel_view = "content-controlpanel"\n     template = ViewPageTemplateFile(\'types.pt\')\n-    behavior_name = \'plone.app.versioningbehavior.behaviors.IVersionable\'\n+    behavior_name = \'plone.versioning\'\n \n     @button.buttonAndHandler(_(\'Save\'), name=\'save\')\n     def handleSave(self, action):\n@@ -94,7 +94,7 @@ def add_versioning_behavior(self, fti):\n         if self.behavior_name not in behaviors:\n             behaviors.append(self.behavior_name)\n         # locking must be turned on for versioning support on the type\n-        locking = \'plone.app.lockingbehavior.behaviors.ILocking\'\n+        locking = \'plone.locking\'\n         if locking not in behaviors:\n             behaviors.append(locking)\n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_types.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_types.py\nindex 57313133f2..ae275bde1a 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_types.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_types.py\n@@ -114,7 +114,7 @@ def test_disable_versioning_removes_behavior(self):\n         portal_types = self.portal.portal_types\n         doc_type = portal_types.Document\n         self.assertTrue(\n-            \'plone.app.versioningbehavior.behaviors.IVersionable\'\n+            \'plone.versioning\'\n             not in doc_type.behaviors)  # noqa\n \n     def test_enable_versioning_behavior_on_document(self):\n@@ -127,14 +127,14 @@ def test_enable_versioning_behavior_on_document(self):\n         portal_types = self.portal.portal_types\n         doc_type = portal_types.Document\n         self.assertTrue(\n-            \'plone.app.versioningbehavior.behaviors.IVersionable\'\n+            \'plone.versioning\'\n             not in doc_type.behaviors)  # noqa\n \n         self.browser.getControl(name=\'versionpolicy\').value = [\'manual\']\n         self.browser.getControl(name="form.button.Save").click()\n \n         self.assertTrue(\n-            \'plone.app.versioningbehavior.behaviors.IVersionable\'\n+            \'plone.versioning\'\n             in doc_type.behaviors)\n \n     def test_enable_versioning_behavior_on_file(self):\n@@ -149,20 +149,20 @@ def test_enable_versioning_behavior_on_file(self):\n \n         # File has no Versioning and no Locking on default, but needs it\n         self.assertTrue(\n-            \'plone.app.versioningbehavior.behaviors.IVersionable\'\n+            \'plone.versioning\'\n             not in file_type.behaviors)  # noqa\n         self.assertTrue(\n-            \'plone.app.lockingbehavior.behaviors.ILocking\'\n+            \'plone.locking\'\n             not in file_type.behaviors)  # noqa\n \n         self.browser.getControl(name=\'versionpolicy\').value = [\'manual\']\n         self.browser.getControl(\'Save\').click()\n \n         self.assertTrue(\n-            \'plone.app.versioningbehavior.behaviors.IVersionable\'\n+            \'plone.versioning\'\n             in file_type.behaviors)\n         self.assertTrue(\n-            \'plone.app.lockingbehavior.behaviors.ILocking\'\n+            \'plone.locking\'\n             in file_type.behaviors)\n \n     def test_dont_update_settings_when_switch_types(self):\ndiff --git a/news/3294.bugfix b/news/3294.bugfix\nnew file mode 100644\nindex 0000000000..c3a4c869bf\n--- /dev/null\n+++ b/news/3294.bugfix\n@@ -0,0 +1,2 @@\n+Use behavior-names instead of python-paths in types-controlpanel\n+[pbauer]\n\\ No newline at end of file\n'

