Repository: plone.resourceeditor


Branch: refs/heads/master
Date: 2019-01-16T21:46:04+02:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/plone.resourceeditor/commit/50c14077cea774ec6edd08b313f731b38721cbd5

fix UnicodeDecodeError while using Build CSS in Theme Editor #2698

Files changed:
M CHANGES.rst
M plone/resourceeditor/browser.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex bff144d..100294c 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -14,7 +14,8 @@ New features:\n \n Bug fixes:\n \n-- *add item here*\n+- fix UnicodeDecodeError while using Build CSS in Theme Editor #2698\n+  [MrTango]\n \n \n 2.1.3 (2018-11-02)\ndiff --git a/plone/resourceeditor/browser.py b/plone/resourceeditor/browser.py\nindex 56b6de8..815f10f 100644\n--- a/plone/resourceeditor/browser.py\n+++ b/plone/resourceeditor/browser.py\n@@ -8,6 +8,7 @@\n from plone.resource.interfaces import IResourceDirectory\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.utils import safe_unicode\n+from Products.CMFPlone.utils import safe_encode\n from Products.Five.browser.decode import processInputs\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from six.moves import urllib\n@@ -87,7 +88,7 @@ def getFolder(self, path):\n         in a file system tree.\n         """\n         if six.PY2 and isinstance(path, six.text_type):\n-            path = path.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n \n         folders = []\n         files = []\n@@ -110,7 +111,7 @@ def getFolder(self, path):\n \n     def getFile(self, path):\n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n         path = self.normalizePath(path)\n         ext = self.getExtension(path=path)\n         result = {\'ext\': ext}\n@@ -220,10 +221,10 @@ def getInfo(self, obj, path=\'/\'):\n     def saveFile(self, path, value):\n         path = path.lstrip(\'/\')\n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n         value = value.strip()\n         if six.PY2:\n-            value = value.encode(\'utf-8\')\n+            value = safe_encode(value, \'utf-8\')\n \n         value = value.replace(\'\\r\\n\', \'\\n\')\n \n@@ -263,8 +264,8 @@ def addFolder(self, path, name):\n         """Create a new directory on the server within the given path.\n         """\n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n-            name = name.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n+            name = safe_encode(name, \'utf-8\')\n \n         code = 0\n         error = \'\'\n@@ -315,8 +316,8 @@ def addFile(self, path, name):\n         """Add a new empty file in the given directory\n         """\n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n-            name = name.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n+            name = safe_encode(name, \'utf-8\')\n \n         error = \'\'\n         code = 0\n@@ -358,7 +359,7 @@ def delete(self, path):\n         """Delete the item at the given path.\n         """\n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n \n         npath = self.normalizePath(path)\n         parentPath = \'/\'.join(npath.split(\'/\')[:-1])\n@@ -394,8 +395,8 @@ def renameFile(self, path, newName):\n         """\n \n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n-            newName = newName.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n+            newName = safe_encode(newName, \'utf-8\')\n \n         npath = self.normalizePath(path)\n         oldPath = newPath = \'/\'.join(npath.split(\'/\')[:-1])\n@@ -438,8 +439,8 @@ def move(self, path, directory):\n         """Move the item at the given path to a new directory\n         """\n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n-            directory = directory.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n+            directory = safe_encode(directory, \'utf-8\')\n \n         npath = self.normalizePath(path)\n         newParentPath = self.normalizePath(directory)\n@@ -560,7 +561,7 @@ def download(self, path):\n         """Serve the requested file to the user\n         """\n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n \n         npath = self.normalizePath(path)\n         parentPath = \'/\'.join(npath.split(\'/\')[:-1])\n@@ -773,7 +774,7 @@ def getFolder(self, path, getSizes=False):\n         in a file system tree.\n         """\n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n \n         folders = []\n         files = []\n@@ -798,7 +799,7 @@ def getInfo(self, path, getSize=False):\n         returned.\n         """\n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n \n         path = self.normalizePath(path)\n         obj = self.getObject(path)\n@@ -876,8 +877,8 @@ def addFolder(self, path, name):\n         """Create a new directory on the server within the given path.\n         """\n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n-            name = name.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n+            name = safe_encode(name, \'utf-8\')\n \n         code = 0\n         error = \'\'\n@@ -935,9 +936,9 @@ def add(self, path, newfile, replacepath=None):\n         """\n \n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n         if six.PY2 and replacepath is not None:\n-            replacepath = replacepath.encode(\'utf-8\')\n+            replacepath = safe_encode(replacepath, \'utf-8\')\n \n         parentPath = self.normalizePath(path)\n \n@@ -946,7 +947,7 @@ def add(self, path, newfile, replacepath=None):\n \n         name = newfile.filename\n         if six.PY2 and isinstance(name, six.text_type):\n-            name = name.encode(\'utf-8\')\n+            name = safe_encode(name, \'utf-8\')\n \n         if replacepath:\n             newPath = replacepath\n@@ -988,8 +989,8 @@ def addNew(self, path, name):\n         """Add a new empty file in the given directory\n         """\n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n-            name = name.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n+            name = safe_encode(name, \'utf-8\')\n \n         error = \'\'\n         code = 0\n@@ -1029,8 +1030,8 @@ def rename(self, path, newName):\n         """Rename the item at the given path to the new name\n         """\n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n-            newName = newName.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n+            newName = safe_encode(newName, \'utf-8\')\n \n         npath = self.normalizePath(path)\n         oldPath = newPath = \'/\'.join(npath.split(\'/\')[:-1])\n@@ -1070,7 +1071,7 @@ def delete(self, path):\n         """Delete the item at the given path.\n         """\n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n \n         npath = self.normalizePath(path)\n         parentPath = \'/\'.join(npath.split(\'/\')[:-1])\n@@ -1104,8 +1105,8 @@ def move(self, path, directory):\n         """Move the item at the given path to a new directory\n         """\n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n-            directory = directory.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n+            directory = safe_encode(directory, \'utf-8\')\n \n         npath = self.normalizePath(path)\n         newParentPath = self.normalizePath(directory)\n@@ -1168,7 +1169,7 @@ def download(self, path):\n         """Serve the requested file to the user\n         """\n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n \n         npath = self.normalizePath(path)\n         parentPath = \'/\'.join(npath.split(\'/\')[:-1])\n@@ -1213,7 +1214,7 @@ def getExtension(self, path, obj):\n     def getFile(self, path):\n         self.setup()\n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n \n         path = self.normalizePath(path)\n         file = self.context.context.unrestrictedTraverse(path)\n@@ -1234,8 +1235,8 @@ def saveFile(self, path, value):\n         path = self.request.form.get(\'path\', path)\n         value = self.request.form.get(\'value\', value)\n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n-            value = value.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n+            value = safe_encode(value, \'utf-8\')\n         path = path.lstrip(\'/\')\n         value = value.replace(\'\\r\\n\', \'\\n\')\n         self.context.writeFile(path, value)\n'

Repository: plone.resourceeditor


Branch: refs/heads/master
Date: 2019-02-08T17:13:38+01:00
Author: Alessandro Pisa (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.resourceeditor/commit/3199ff02bc6590ad522ec4901be906064f5d8b9f

Merge pull request #25 from plone/mrtango-fix-2698

fix UnicodeDecodeError while using Build CSS in Theme Editor #2698

Files changed:
M CHANGES.rst
M plone/resourceeditor/browser.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex bff144d..100294c 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -14,7 +14,8 @@ New features:\n \n Bug fixes:\n \n-- *add item here*\n+- fix UnicodeDecodeError while using Build CSS in Theme Editor #2698\n+  [MrTango]\n \n \n 2.1.3 (2018-11-02)\ndiff --git a/plone/resourceeditor/browser.py b/plone/resourceeditor/browser.py\nindex 56b6de8..815f10f 100644\n--- a/plone/resourceeditor/browser.py\n+++ b/plone/resourceeditor/browser.py\n@@ -8,6 +8,7 @@\n from plone.resource.interfaces import IResourceDirectory\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.utils import safe_unicode\n+from Products.CMFPlone.utils import safe_encode\n from Products.Five.browser.decode import processInputs\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from six.moves import urllib\n@@ -87,7 +88,7 @@ def getFolder(self, path):\n         in a file system tree.\n         """\n         if six.PY2 and isinstance(path, six.text_type):\n-            path = path.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n \n         folders = []\n         files = []\n@@ -110,7 +111,7 @@ def getFolder(self, path):\n \n     def getFile(self, path):\n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n         path = self.normalizePath(path)\n         ext = self.getExtension(path=path)\n         result = {\'ext\': ext}\n@@ -220,10 +221,10 @@ def getInfo(self, obj, path=\'/\'):\n     def saveFile(self, path, value):\n         path = path.lstrip(\'/\')\n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n         value = value.strip()\n         if six.PY2:\n-            value = value.encode(\'utf-8\')\n+            value = safe_encode(value, \'utf-8\')\n \n         value = value.replace(\'\\r\\n\', \'\\n\')\n \n@@ -263,8 +264,8 @@ def addFolder(self, path, name):\n         """Create a new directory on the server within the given path.\n         """\n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n-            name = name.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n+            name = safe_encode(name, \'utf-8\')\n \n         code = 0\n         error = \'\'\n@@ -315,8 +316,8 @@ def addFile(self, path, name):\n         """Add a new empty file in the given directory\n         """\n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n-            name = name.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n+            name = safe_encode(name, \'utf-8\')\n \n         error = \'\'\n         code = 0\n@@ -358,7 +359,7 @@ def delete(self, path):\n         """Delete the item at the given path.\n         """\n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n \n         npath = self.normalizePath(path)\n         parentPath = \'/\'.join(npath.split(\'/\')[:-1])\n@@ -394,8 +395,8 @@ def renameFile(self, path, newName):\n         """\n \n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n-            newName = newName.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n+            newName = safe_encode(newName, \'utf-8\')\n \n         npath = self.normalizePath(path)\n         oldPath = newPath = \'/\'.join(npath.split(\'/\')[:-1])\n@@ -438,8 +439,8 @@ def move(self, path, directory):\n         """Move the item at the given path to a new directory\n         """\n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n-            directory = directory.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n+            directory = safe_encode(directory, \'utf-8\')\n \n         npath = self.normalizePath(path)\n         newParentPath = self.normalizePath(directory)\n@@ -560,7 +561,7 @@ def download(self, path):\n         """Serve the requested file to the user\n         """\n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n \n         npath = self.normalizePath(path)\n         parentPath = \'/\'.join(npath.split(\'/\')[:-1])\n@@ -773,7 +774,7 @@ def getFolder(self, path, getSizes=False):\n         in a file system tree.\n         """\n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n \n         folders = []\n         files = []\n@@ -798,7 +799,7 @@ def getInfo(self, path, getSize=False):\n         returned.\n         """\n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n \n         path = self.normalizePath(path)\n         obj = self.getObject(path)\n@@ -876,8 +877,8 @@ def addFolder(self, path, name):\n         """Create a new directory on the server within the given path.\n         """\n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n-            name = name.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n+            name = safe_encode(name, \'utf-8\')\n \n         code = 0\n         error = \'\'\n@@ -935,9 +936,9 @@ def add(self, path, newfile, replacepath=None):\n         """\n \n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n         if six.PY2 and replacepath is not None:\n-            replacepath = replacepath.encode(\'utf-8\')\n+            replacepath = safe_encode(replacepath, \'utf-8\')\n \n         parentPath = self.normalizePath(path)\n \n@@ -946,7 +947,7 @@ def add(self, path, newfile, replacepath=None):\n \n         name = newfile.filename\n         if six.PY2 and isinstance(name, six.text_type):\n-            name = name.encode(\'utf-8\')\n+            name = safe_encode(name, \'utf-8\')\n \n         if replacepath:\n             newPath = replacepath\n@@ -988,8 +989,8 @@ def addNew(self, path, name):\n         """Add a new empty file in the given directory\n         """\n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n-            name = name.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n+            name = safe_encode(name, \'utf-8\')\n \n         error = \'\'\n         code = 0\n@@ -1029,8 +1030,8 @@ def rename(self, path, newName):\n         """Rename the item at the given path to the new name\n         """\n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n-            newName = newName.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n+            newName = safe_encode(newName, \'utf-8\')\n \n         npath = self.normalizePath(path)\n         oldPath = newPath = \'/\'.join(npath.split(\'/\')[:-1])\n@@ -1070,7 +1071,7 @@ def delete(self, path):\n         """Delete the item at the given path.\n         """\n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n \n         npath = self.normalizePath(path)\n         parentPath = \'/\'.join(npath.split(\'/\')[:-1])\n@@ -1104,8 +1105,8 @@ def move(self, path, directory):\n         """Move the item at the given path to a new directory\n         """\n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n-            directory = directory.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n+            directory = safe_encode(directory, \'utf-8\')\n \n         npath = self.normalizePath(path)\n         newParentPath = self.normalizePath(directory)\n@@ -1168,7 +1169,7 @@ def download(self, path):\n         """Serve the requested file to the user\n         """\n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n \n         npath = self.normalizePath(path)\n         parentPath = \'/\'.join(npath.split(\'/\')[:-1])\n@@ -1213,7 +1214,7 @@ def getExtension(self, path, obj):\n     def getFile(self, path):\n         self.setup()\n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n \n         path = self.normalizePath(path)\n         file = self.context.context.unrestrictedTraverse(path)\n@@ -1234,8 +1235,8 @@ def saveFile(self, path, value):\n         path = self.request.form.get(\'path\', path)\n         value = self.request.form.get(\'value\', value)\n         if six.PY2:\n-            path = path.encode(\'utf-8\')\n-            value = value.encode(\'utf-8\')\n+            path = safe_encode(path, \'utf-8\')\n+            value = safe_encode(value, \'utf-8\')\n         path = path.lstrip(\'/\')\n         value = value.replace(\'\\r\\n\', \'\\n\')\n         self.context.writeFile(path, value)\n'

