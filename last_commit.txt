Repository: plone.subrequest


Branch: refs/heads/master
Date: 2023-02-01T21:46:09+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.subrequest/commit/2035801e347537d03ac7725938f86c8c30ef6067

Configuring with plone/meta

Files changed:
M lint-requirements.txt
M pyproject.toml
M setup.cfg
M tox.ini

b'diff --git a/lint-requirements.txt b/lint-requirements.txt\nindex 129db4d..d2b64ff 100644\n--- a/lint-requirements.txt\n+++ b/lint-requirements.txt\n@@ -5,4 +5,6 @@ check-manifest==0.49\n codespell==2.2.2\n flake8==6.0.0\n isort==5.11.4\n+pyroma==4.1\n pyupgrade==3.3.1\n+z3c.dependencychecker==2.10\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 0f96c85..5f88f97 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -41,3 +41,6 @@ profile = "plone"\n \n [tool.black]\n target-version = ["py38"]\n+\n+[tool.dependencychecker]\n+Zope = [\'OFS\', \'Products.Five\', \'Products.SiteAccess\', \'ZPublisher\']\ndiff --git a/setup.cfg b/setup.cfg\nindex b4adcb1..8849fbc 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -20,3 +20,4 @@ ignore =\n     .editorconfig\n     .meta.toml\n     tox.ini\n+    lint-requirements.txt\ndiff --git a/tox.ini b/tox.ini\nindex 5d1a605..c4810c9 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -30,10 +30,21 @@ skip_install = true\n deps =\n     flake8\n     codespell\n+    tomli  # needed for codespell to read pyproject.toml\n     check-manifest\n+    pyroma\n     -c lint-requirements.txt\n commands =\n     sh -c \'{[testenv]py_files} | xargs flake8\'\n     sh -c \'{[testenv]py_files} | xargs codespell\'\n     sh -c \'{[testenv]text_files} | xargs codespell\'\n     check-manifest\n+    pyroma -n 10 .\n+\n+[testenv:dependencies]\n+description = check if the package defines all its dependencies\n+deps =\n+    z3c.dependencychecker\n+    -c lint-requirements.txt\n+commands =\n+    dependencychecker\n'

Repository: plone.subrequest


Branch: refs/heads/master
Date: 2023-02-01T21:46:45+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.subrequest/commit/313ad551ff85f4f458bdddffeb9f4d8681556159

feat: configure z3c.dependencychecker

Files changed:
M .meta.toml

b'diff --git a/.meta.toml b/.meta.toml\nindex fbaceac..96f8c7c 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -2,4 +2,9 @@\n # https://github.com/plone/meta/tree/master/config/default\n [meta]\n template = "default"\n-commit-id = "05a78883"\n+commit-id = "49620d68"\n+\n+[dependencies]\n+mappings = [\n+    "Zope = [\'OFS\', \'Products.Five\', \'Products.SiteAccess\', \'ZPublisher\']",\n+    ]\n'

Repository: plone.subrequest


Branch: refs/heads/master
Date: 2023-02-01T21:46:57+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.subrequest/commit/cedd6aed9a6fb91b10bc4b66109dc1130efd22ef

feat: declare dependencies

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex 34c7f63..d42451e 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -46,14 +46,22 @@\n     zip_safe=False,\n     python_requires=">=3.8",\n     install_requires=[\n+        "AccessControl",\n+        "Acquisition",\n+        "plone.protect",\n         "setuptools",\n+        "zope.component",\n         "zope.globalrequest",\n+        "zope.interface",\n+        "zope.publisher",\n     ],\n     extras_require={\n         "test": [\n             "five.localsitemanager",\n             "manuel",\n             "plone.testing[zope]",\n+            "ZServer",\n+            "zope.configuration",\n         ],\n     },\n     entry_points="""\n'

Repository: plone.subrequest


Branch: refs/heads/master
Date: 2023-02-01T22:09:18+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.subrequest/commit/b590e332d1becd5ebe7ee9bb490a99201adca3ad

cleanup: remove dead code

ZServer has not been ported to Python 3, and plone.subrequest is only
python 3 compatible already, so this code will never be reached.

Files changed:
M plone/subrequest/testing.py
M plone/subrequest/testing.zcml
M plone/subrequest/tests.py
M setup.py

b'diff --git a/plone/subrequest/testing.py b/plone/subrequest/testing.py\nindex 9dc4380..bb40ac1 100644\n--- a/plone/subrequest/testing.py\n+++ b/plone/subrequest/testing.py\n@@ -70,24 +70,6 @@ def __call__(self):\n         return response.body\n \n \n-class StreamIteratorView(BrowserView):\n-    def __call__(self):\n-        from ZServer.tests.test_responses import test_streamiterator\n-\n-        response = self.request.response\n-        response.setHeader("content-length", 5)\n-        return test_streamiterator()\n-\n-\n-class FileStreamIteratorView(BrowserView):\n-    def __call__(self):\n-        from pkg_resources import resource_filename\n-        from ZPublisher.Iterators import filestream_iterator\n-\n-        filename = resource_filename("plone.subrequest", "testfile.txt")\n-        return filestream_iterator(filename)\n-\n-\n def singleton(cls):\n     return cls()\n \ndiff --git a/plone/subrequest/testing.zcml b/plone/subrequest/testing.zcml\nindex d63d512..8c7e507 100644\n--- a/plone/subrequest/testing.zcml\n+++ b/plone/subrequest/testing.zcml\n@@ -54,28 +54,6 @@\n         permission="zope.Public"\n         />\n \n-    <browser:page\n-        name="stream"\n-        for="*"\n-        class="plone.subrequest.testing.StreamIteratorView"\n-        permission="zope.Public"\n-        />\n-\n-    <browser:page\n-        name="filestream"\n-        for="*"\n-        class="plone.subrequest.testing.FileStreamIteratorView"\n-        permission="zope.Public"\n-        />\n-\n-    <browser:page\n-        name="blobstream"\n-        for="*"\n-        class="plone.subrequest.testing.BlobStreamIteratorView"\n-        permission="zope.Public"\n-        zcml:condition="installed plone.app.blob"\n-        />\n-\n     <browser:defaultView\n         for="OFS.Folder.Folder"\n         name="test"\ndiff --git a/plone/subrequest/tests.py b/plone/subrequest/tests.py\nindex a607a26..523c57c 100644\n--- a/plone/subrequest/tests.py\n+++ b/plone/subrequest/tests.py\n@@ -11,14 +11,6 @@\n import unittest\n \n \n-try:\n-    from ZServer.HTTPResponse import ZServerHTTPResponse\n-except ImportError:\n-    HAS_ZSERVER = False\n-else:\n-    HAS_ZSERVER = True\n-\n-\n def traverse(url):\n     request = getRequest()\n     request.traverse(url)\n@@ -188,25 +180,6 @@ def test_subrequest_cookies(self):\n         response = subrequest("/folder1/@@test?url=/folder1/cookie")\n         self.assertTrue("cookie_name" in response.cookies)\n \n-    @unittest.skipUnless(HAS_ZSERVER, "needs ZServer")\n-    def test_stream_iterator(self):\n-        # Only a ZServerHTTPResponse is IStreamIterator Aware\n-        request = getRequest()\n-        request.response.__class__ = ZServerHTTPResponse\n-        response = subrequest("/@@stream")\n-        self.assertEqual(response.getBody(), "hello")\n-\n-    @unittest.skipUnless(HAS_ZSERVER, "needs ZServer")\n-    def test_filestream_iterator(self):\n-        # Only a ZServerHTTPResponse is IStreamIterator Aware\n-        request = getRequest()\n-        request.response.__class__ = ZServerHTTPResponse\n-        response = subrequest("/@@filestream")\n-        from ZPublisher.Iterators import filestream_iterator\n-\n-        self.assertTrue(isinstance(response.stdout, filestream_iterator))\n-        self.assertEqual(response.getBody(), "Test")\n-\n     def test_other_variables(self):\n         request = getRequest()\n         request["foo"] = "bar"\ndiff --git a/setup.py b/setup.py\nindex d42451e..96ebd97 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -60,7 +60,6 @@\n             "five.localsitemanager",\n             "manuel",\n             "plone.testing[zope]",\n-            "ZServer",\n             "zope.configuration",\n         ],\n     },\n'

Repository: plone.subrequest


Branch: refs/heads/master
Date: 2023-02-01T22:09:27+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.subrequest/commit/b53ca1212b688cc0072a80e38ff45a8532c7a294

Add news entry

Files changed:
A news/1.bugfix

b'diff --git a/news/1.bugfix b/news/1.bugfix\nnew file mode 100644\nindex 0000000..dcf727c\n--- /dev/null\n+++ b/news/1.bugfix\n@@ -0,0 +1,2 @@\n+Declare dependencies as found by z3c.dependencychecker.\n+[gforcada]\n'

Repository: plone.subrequest


Branch: refs/heads/master
Date: 2023-02-02T00:39:24+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.subrequest/commit/f2e9c26e49d239eccc3f127e954deac63b584fe2

Merge pull request #28 from plone/config-with-default-template-ba55f2c2

Config with default template (dependencies)

Files changed:
A news/1.bugfix
M .meta.toml
M lint-requirements.txt
M plone/subrequest/testing.py
M plone/subrequest/testing.zcml
M plone/subrequest/tests.py
M pyproject.toml
M setup.cfg
M setup.py
M tox.ini

b'diff --git a/.meta.toml b/.meta.toml\nindex fbaceac..96f8c7c 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -2,4 +2,9 @@\n # https://github.com/plone/meta/tree/master/config/default\n [meta]\n template = "default"\n-commit-id = "05a78883"\n+commit-id = "49620d68"\n+\n+[dependencies]\n+mappings = [\n+    "Zope = [\'OFS\', \'Products.Five\', \'Products.SiteAccess\', \'ZPublisher\']",\n+    ]\ndiff --git a/lint-requirements.txt b/lint-requirements.txt\nindex 129db4d..d2b64ff 100644\n--- a/lint-requirements.txt\n+++ b/lint-requirements.txt\n@@ -5,4 +5,6 @@ check-manifest==0.49\n codespell==2.2.2\n flake8==6.0.0\n isort==5.11.4\n+pyroma==4.1\n pyupgrade==3.3.1\n+z3c.dependencychecker==2.10\ndiff --git a/news/1.bugfix b/news/1.bugfix\nnew file mode 100644\nindex 0000000..dcf727c\n--- /dev/null\n+++ b/news/1.bugfix\n@@ -0,0 +1,2 @@\n+Declare dependencies as found by z3c.dependencychecker.\n+[gforcada]\ndiff --git a/plone/subrequest/testing.py b/plone/subrequest/testing.py\nindex 9dc4380..bb40ac1 100644\n--- a/plone/subrequest/testing.py\n+++ b/plone/subrequest/testing.py\n@@ -70,24 +70,6 @@ def __call__(self):\n         return response.body\n \n \n-class StreamIteratorView(BrowserView):\n-    def __call__(self):\n-        from ZServer.tests.test_responses import test_streamiterator\n-\n-        response = self.request.response\n-        response.setHeader("content-length", 5)\n-        return test_streamiterator()\n-\n-\n-class FileStreamIteratorView(BrowserView):\n-    def __call__(self):\n-        from pkg_resources import resource_filename\n-        from ZPublisher.Iterators import filestream_iterator\n-\n-        filename = resource_filename("plone.subrequest", "testfile.txt")\n-        return filestream_iterator(filename)\n-\n-\n def singleton(cls):\n     return cls()\n \ndiff --git a/plone/subrequest/testing.zcml b/plone/subrequest/testing.zcml\nindex d63d512..8c7e507 100644\n--- a/plone/subrequest/testing.zcml\n+++ b/plone/subrequest/testing.zcml\n@@ -54,28 +54,6 @@\n         permission="zope.Public"\n         />\n \n-    <browser:page\n-        name="stream"\n-        for="*"\n-        class="plone.subrequest.testing.StreamIteratorView"\n-        permission="zope.Public"\n-        />\n-\n-    <browser:page\n-        name="filestream"\n-        for="*"\n-        class="plone.subrequest.testing.FileStreamIteratorView"\n-        permission="zope.Public"\n-        />\n-\n-    <browser:page\n-        name="blobstream"\n-        for="*"\n-        class="plone.subrequest.testing.BlobStreamIteratorView"\n-        permission="zope.Public"\n-        zcml:condition="installed plone.app.blob"\n-        />\n-\n     <browser:defaultView\n         for="OFS.Folder.Folder"\n         name="test"\ndiff --git a/plone/subrequest/tests.py b/plone/subrequest/tests.py\nindex a607a26..523c57c 100644\n--- a/plone/subrequest/tests.py\n+++ b/plone/subrequest/tests.py\n@@ -11,14 +11,6 @@\n import unittest\n \n \n-try:\n-    from ZServer.HTTPResponse import ZServerHTTPResponse\n-except ImportError:\n-    HAS_ZSERVER = False\n-else:\n-    HAS_ZSERVER = True\n-\n-\n def traverse(url):\n     request = getRequest()\n     request.traverse(url)\n@@ -188,25 +180,6 @@ def test_subrequest_cookies(self):\n         response = subrequest("/folder1/@@test?url=/folder1/cookie")\n         self.assertTrue("cookie_name" in response.cookies)\n \n-    @unittest.skipUnless(HAS_ZSERVER, "needs ZServer")\n-    def test_stream_iterator(self):\n-        # Only a ZServerHTTPResponse is IStreamIterator Aware\n-        request = getRequest()\n-        request.response.__class__ = ZServerHTTPResponse\n-        response = subrequest("/@@stream")\n-        self.assertEqual(response.getBody(), "hello")\n-\n-    @unittest.skipUnless(HAS_ZSERVER, "needs ZServer")\n-    def test_filestream_iterator(self):\n-        # Only a ZServerHTTPResponse is IStreamIterator Aware\n-        request = getRequest()\n-        request.response.__class__ = ZServerHTTPResponse\n-        response = subrequest("/@@filestream")\n-        from ZPublisher.Iterators import filestream_iterator\n-\n-        self.assertTrue(isinstance(response.stdout, filestream_iterator))\n-        self.assertEqual(response.getBody(), "Test")\n-\n     def test_other_variables(self):\n         request = getRequest()\n         request["foo"] = "bar"\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 0f96c85..5f88f97 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -41,3 +41,6 @@ profile = "plone"\n \n [tool.black]\n target-version = ["py38"]\n+\n+[tool.dependencychecker]\n+Zope = [\'OFS\', \'Products.Five\', \'Products.SiteAccess\', \'ZPublisher\']\ndiff --git a/setup.cfg b/setup.cfg\nindex b4adcb1..8849fbc 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -20,3 +20,4 @@ ignore =\n     .editorconfig\n     .meta.toml\n     tox.ini\n+    lint-requirements.txt\ndiff --git a/setup.py b/setup.py\nindex 34c7f63..96ebd97 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -46,14 +46,21 @@\n     zip_safe=False,\n     python_requires=">=3.8",\n     install_requires=[\n+        "AccessControl",\n+        "Acquisition",\n+        "plone.protect",\n         "setuptools",\n+        "zope.component",\n         "zope.globalrequest",\n+        "zope.interface",\n+        "zope.publisher",\n     ],\n     extras_require={\n         "test": [\n             "five.localsitemanager",\n             "manuel",\n             "plone.testing[zope]",\n+            "zope.configuration",\n         ],\n     },\n     entry_points="""\ndiff --git a/tox.ini b/tox.ini\nindex 5d1a605..c4810c9 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -30,10 +30,21 @@ skip_install = true\n deps =\n     flake8\n     codespell\n+    tomli  # needed for codespell to read pyproject.toml\n     check-manifest\n+    pyroma\n     -c lint-requirements.txt\n commands =\n     sh -c \'{[testenv]py_files} | xargs flake8\'\n     sh -c \'{[testenv]py_files} | xargs codespell\'\n     sh -c \'{[testenv]text_files} | xargs codespell\'\n     check-manifest\n+    pyroma -n 10 .\n+\n+[testenv:dependencies]\n+description = check if the package defines all its dependencies\n+deps =\n+    z3c.dependencychecker\n+    -c lint-requirements.txt\n+commands =\n+    dependencychecker\n'

