Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2022-09-05T17:47:19+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.upgrade/commit/48ba3306c0b41260220dd1fc4ec70560b18302b0

Add an upgrade step to update the dexterity indexer behavior name

Renames `collective.dexteritytextindexer` to `plone.textindexer`

Fixes #300
Refs. https://github.com/plone/Products.CMFPlone/issues/2780

Files changed:
A news/300.bugfix
M plone/app/upgrade/v60/betas.py
M plone/app/upgrade/v60/configure.zcml
M plone/app/upgrade/v60/tests.py

b'diff --git a/news/300.bugfix b/news/300.bugfix\nnew file mode 100644\nindex 00000000..6df74ed3\n--- /dev/null\n+++ b/news/300.bugfix\n@@ -0,0 +1 @@\n+Add an upgrade step to fix the dexterity indexer behavior\ndiff --git a/plone/app/upgrade/v60/betas.py b/plone/app/upgrade/v60/betas.py\nindex 979335b9..470bbf0a 100644\n--- a/plone/app/upgrade/v60/betas.py\n+++ b/plone/app/upgrade/v60/betas.py\n@@ -75,3 +75,31 @@ def _set_icon_expr(action, icon_expr):\n                 _set_icon_expr(action, new)\n             elif action.icon_expr != new:\n                 logger.info("Skipping action %r, it looks customized", action_path)\n+\n+\n+def rename_dexteritytextindexer_behavior(context):\n+    """Rename collective.dexteritytextindexer behavior to plone.textindexer"""\n+    portal_types = getToolByName(context, "portal_types")\n+\n+    # Gather the FTIs that have the obsolete behavior\n+    ftis_to_fix = (\n+        fti\n+        for fti in portal_types.objectValues("Dexterity FTI")\n+        if "collective.dexteritytextindexer" in fti.behaviors\n+    )\n+\n+    for fti in ftis_to_fix:\n+        # Rename the behavior\n+        behaviors = [\n+            "plone.textindexer"\n+            if behavior == "collective.dexteritytextindexer"\n+            else behavior\n+            for behavior in fti.behaviors\n+        ]\n+\n+        # Ensure we did not have the behavior more than once\n+        while behaviors.count("plone.textindexer") > 1:\n+            behaviors.remove("plone.textindexer")\n+\n+        # Set the updated behaviors\n+        fti.behaviors = tuple(behaviors)\ndiff --git a/plone/app/upgrade/v60/configure.zcml b/plone/app/upgrade/v60/configure.zcml\nindex a2b0a763..9393b8de 100644\n--- a/plone/app/upgrade/v60/configure.zcml\n+++ b/plone/app/upgrade/v60/configure.zcml\n@@ -153,6 +153,11 @@\n           handler=".betas.add_action_icons"\n           />\n \n+      <gs:upgradeStep\n+          title="Rename the behavior collective.dexteritytextindexer to plone.textindexer"\n+          handler=".betas.rename_dexteritytextindexer_behavior"\n+          />\n+\n     </gs:upgradeSteps>\n \n </configure>\ndiff --git a/plone/app/upgrade/v60/tests.py b/plone/app/upgrade/v60/tests.py\nindex 49847df1..c2845dd0 100644\n--- a/plone/app/upgrade/v60/tests.py\n+++ b/plone/app/upgrade/v60/tests.py\n@@ -2,6 +2,7 @@\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from zope.component import getUtility\n+from plone.dexterity.interfaces import IDexterityFTI\n \n import unittest\n \n@@ -134,3 +135,27 @@ def test_upgrade_plone_module_profiles_multilingual(self):\n         self.assertEqual(setup.getLastVersionForProfile(profile_id), UNKNOWN)\n         upgrade_plone_module_profiles(setup)\n         self.assertEqual(setup.getLastVersionForProfile(profile_id), UNKNOWN)\n+\n+    def test_rename_dexteritytextindexer_behavior(self):\n+        from plone.app.upgrade.v60.betas import rename_dexteritytextindexer_behavior\n+\n+        portal = self.layer["portal"]\n+\n+        fti = getUtility(IDexterityFTI, name="Document")\n+\n+        original_behaviors = fti.behaviors\n+\n+        # If the dexteritytextindexer behavior is not present nothing should change\n+        rename_dexteritytextindexer_behavior(portal)\n+        self.assertTupleEqual(fti.behaviors, original_behaviors)\n+\n+        # If the dexteritytextindexer behavior is present it should be renamed\n+        fti.behaviors = fti.behaviors + ("collective.dexteritytextindexer",)\n+        rename_dexteritytextindexer_behavior(portal)\n+        self.assertTupleEqual(fti.behaviors, original_behaviors + ("plone.textindexer",))\n+\n+        # If the old and new dexteritytextindexer behaviors are present,\n+        # we should only have the new one\n+        fti.behaviors = fti.behaviors + ("collective.dexteritytextindexer",)\n+        rename_dexteritytextindexer_behavior(portal)\n+        self.assertTupleEqual(fti.behaviors, original_behaviors + ("plone.textindexer",))\n'

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2022-09-08T14:18:05+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.upgrade/commit/4b0a6120497dca48d03b9a666003ed57a39ddf00

fixup! Add an upgrade step to update the dexterity indexer behavior name

Files changed:
M plone/app/upgrade/v60/betas.py
M plone/app/upgrade/v60/tests.py

b'diff --git a/plone/app/upgrade/v60/betas.py b/plone/app/upgrade/v60/betas.py\nindex 470bbf0a..f9f3b649 100644\n--- a/plone/app/upgrade/v60/betas.py\n+++ b/plone/app/upgrade/v60/betas.py\n@@ -81,19 +81,22 @@ def rename_dexteritytextindexer_behavior(context):\n     """Rename collective.dexteritytextindexer behavior to plone.textindexer"""\n     portal_types = getToolByName(context, "portal_types")\n \n-    # Gather the FTIs that have the obsolete behavior\n+    # Gather the FTIs that have the obsolete behavior,\n+    # it can appear with the name or the interface identifier\n+    old_behaviors = {\n+        "collective.dexteritytextindexer",\n+        "collective.dexteritytextindexer.behavior.IDexterityTextIndexer",\n+    }\n     ftis_to_fix = (\n         fti\n         for fti in portal_types.objectValues("Dexterity FTI")\n-        if "collective.dexteritytextindexer" in fti.behaviors\n+        if set(fti.behaviors) & old_behaviors\n     )\n \n     for fti in ftis_to_fix:\n         # Rename the behavior\n         behaviors = [\n-            "plone.textindexer"\n-            if behavior == "collective.dexteritytextindexer"\n-            else behavior\n+            "plone.textindexer" if behavior in old_behaviors else behavior\n             for behavior in fti.behaviors\n         ]\n \ndiff --git a/plone/app/upgrade/v60/tests.py b/plone/app/upgrade/v60/tests.py\nindex c2845dd0..ba15a3dd 100644\n--- a/plone/app/upgrade/v60/tests.py\n+++ b/plone/app/upgrade/v60/tests.py\n@@ -144,7 +144,7 @@ def test_rename_dexteritytextindexer_behavior(self):\n         fti = getUtility(IDexterityFTI, name="Document")\n \n         original_behaviors = fti.behaviors\n-\n+        expected_behaviors = original_behaviors + ("plone.textindexer",)\n         # If the dexteritytextindexer behavior is not present nothing should change\n         rename_dexteritytextindexer_behavior(portal)\n         self.assertTupleEqual(fti.behaviors, original_behaviors)\n@@ -152,10 +152,17 @@ def test_rename_dexteritytextindexer_behavior(self):\n         # If the dexteritytextindexer behavior is present it should be renamed\n         fti.behaviors = fti.behaviors + ("collective.dexteritytextindexer",)\n         rename_dexteritytextindexer_behavior(portal)\n-        self.assertTupleEqual(fti.behaviors, original_behaviors + ("plone.textindexer",))\n+        self.assertTupleEqual(fti.behaviors, expected_behaviors)\n \n         # If the old and new dexteritytextindexer behaviors are present,\n         # we should only have the new one\n         fti.behaviors = fti.behaviors + ("collective.dexteritytextindexer",)\n         rename_dexteritytextindexer_behavior(portal)\n-        self.assertTupleEqual(fti.behaviors, original_behaviors + ("plone.textindexer",))\n+        self.assertTupleEqual(fti.behaviors, expected_behaviors)\n+\n+        # Check that the fix also works with the interface identifier\n+        fti.behaviors = original_behaviors + (\n+            "collective.dexteritytextindexer.behavior.IDexterityTextIndexer",\n+        )\n+        rename_dexteritytextindexer_behavior(portal)\n+        self.assertTupleEqual(fti.behaviors, expected_behaviors)\n'

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2022-09-09T00:48:02+02:00
Author: Maurits van Rees (mauritsvanrees) <m.van.rees@zestsoftware.nl>
Commit: https://github.com/plone/plone.app.upgrade/commit/a11a44bb77edb97d202556064f034e50d26c951b

Merge pull request #301 from plone/300-bugfix

Add an upgrade step to update the dexterity indexer behavior name

Files changed:
A news/300.bugfix
M plone/app/upgrade/v60/betas.py
M plone/app/upgrade/v60/configure.zcml
M plone/app/upgrade/v60/tests.py

b'diff --git a/news/300.bugfix b/news/300.bugfix\nnew file mode 100644\nindex 00000000..6df74ed3\n--- /dev/null\n+++ b/news/300.bugfix\n@@ -0,0 +1 @@\n+Add an upgrade step to fix the dexterity indexer behavior\ndiff --git a/plone/app/upgrade/v60/betas.py b/plone/app/upgrade/v60/betas.py\nindex 979335b9..f9f3b649 100644\n--- a/plone/app/upgrade/v60/betas.py\n+++ b/plone/app/upgrade/v60/betas.py\n@@ -75,3 +75,34 @@ def _set_icon_expr(action, icon_expr):\n                 _set_icon_expr(action, new)\n             elif action.icon_expr != new:\n                 logger.info("Skipping action %r, it looks customized", action_path)\n+\n+\n+def rename_dexteritytextindexer_behavior(context):\n+    """Rename collective.dexteritytextindexer behavior to plone.textindexer"""\n+    portal_types = getToolByName(context, "portal_types")\n+\n+    # Gather the FTIs that have the obsolete behavior,\n+    # it can appear with the name or the interface identifier\n+    old_behaviors = {\n+        "collective.dexteritytextindexer",\n+        "collective.dexteritytextindexer.behavior.IDexterityTextIndexer",\n+    }\n+    ftis_to_fix = (\n+        fti\n+        for fti in portal_types.objectValues("Dexterity FTI")\n+        if set(fti.behaviors) & old_behaviors\n+    )\n+\n+    for fti in ftis_to_fix:\n+        # Rename the behavior\n+        behaviors = [\n+            "plone.textindexer" if behavior in old_behaviors else behavior\n+            for behavior in fti.behaviors\n+        ]\n+\n+        # Ensure we did not have the behavior more than once\n+        while behaviors.count("plone.textindexer") > 1:\n+            behaviors.remove("plone.textindexer")\n+\n+        # Set the updated behaviors\n+        fti.behaviors = tuple(behaviors)\ndiff --git a/plone/app/upgrade/v60/configure.zcml b/plone/app/upgrade/v60/configure.zcml\nindex a2b0a763..9393b8de 100644\n--- a/plone/app/upgrade/v60/configure.zcml\n+++ b/plone/app/upgrade/v60/configure.zcml\n@@ -153,6 +153,11 @@\n           handler=".betas.add_action_icons"\n           />\n \n+      <gs:upgradeStep\n+          title="Rename the behavior collective.dexteritytextindexer to plone.textindexer"\n+          handler=".betas.rename_dexteritytextindexer_behavior"\n+          />\n+\n     </gs:upgradeSteps>\n \n </configure>\ndiff --git a/plone/app/upgrade/v60/tests.py b/plone/app/upgrade/v60/tests.py\nindex 49847df1..ba15a3dd 100644\n--- a/plone/app/upgrade/v60/tests.py\n+++ b/plone/app/upgrade/v60/tests.py\n@@ -2,6 +2,7 @@\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from zope.component import getUtility\n+from plone.dexterity.interfaces import IDexterityFTI\n \n import unittest\n \n@@ -134,3 +135,34 @@ def test_upgrade_plone_module_profiles_multilingual(self):\n         self.assertEqual(setup.getLastVersionForProfile(profile_id), UNKNOWN)\n         upgrade_plone_module_profiles(setup)\n         self.assertEqual(setup.getLastVersionForProfile(profile_id), UNKNOWN)\n+\n+    def test_rename_dexteritytextindexer_behavior(self):\n+        from plone.app.upgrade.v60.betas import rename_dexteritytextindexer_behavior\n+\n+        portal = self.layer["portal"]\n+\n+        fti = getUtility(IDexterityFTI, name="Document")\n+\n+        original_behaviors = fti.behaviors\n+        expected_behaviors = original_behaviors + ("plone.textindexer",)\n+        # If the dexteritytextindexer behavior is not present nothing should change\n+        rename_dexteritytextindexer_behavior(portal)\n+        self.assertTupleEqual(fti.behaviors, original_behaviors)\n+\n+        # If the dexteritytextindexer behavior is present it should be renamed\n+        fti.behaviors = fti.behaviors + ("collective.dexteritytextindexer",)\n+        rename_dexteritytextindexer_behavior(portal)\n+        self.assertTupleEqual(fti.behaviors, expected_behaviors)\n+\n+        # If the old and new dexteritytextindexer behaviors are present,\n+        # we should only have the new one\n+        fti.behaviors = fti.behaviors + ("collective.dexteritytextindexer",)\n+        rename_dexteritytextindexer_behavior(portal)\n+        self.assertTupleEqual(fti.behaviors, expected_behaviors)\n+\n+        # Check that the fix also works with the interface identifier\n+        fti.behaviors = original_behaviors + (\n+            "collective.dexteritytextindexer.behavior.IDexterityTextIndexer",\n+        )\n+        rename_dexteritytextindexer_behavior(portal)\n+        self.assertTupleEqual(fti.behaviors, expected_behaviors)\n'

