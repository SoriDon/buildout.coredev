Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2023-03-16T00:10:49+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.upgrade/commit/fb6d8b4fabb9be88a2b38d0f63d41a84c17c35f6

Add Site Administrator role to various permissions.

This is needed to compensate for the change in https://github.com/plone/Products.CMFPlone/pull/3225.
See comments there.

Files changed:
A news/3225.bugfix
A plone/app/upgrade/v60/final.py
M plone/app/upgrade/v60/configure.zcml

b'diff --git a/news/3225.bugfix b/news/3225.bugfix\nnew file mode 100644\nindex 00000000..79177154\n--- /dev/null\n+++ b/news/3225.bugfix\n@@ -0,0 +1,2 @@\n+Add Site Administrator role to various permissions.\n+[maurits]\ndiff --git a/plone/app/upgrade/v60/configure.zcml b/plone/app/upgrade/v60/configure.zcml\nindex 13554140..37be6a8c 100644\n--- a/plone/app/upgrade/v60/configure.zcml\n+++ b/plone/app/upgrade/v60/configure.zcml\n@@ -250,8 +250,8 @@\n         <!-- Plone 6.0.3 -->\n \n         <gs:upgradeStep\n-            title="Miscellaneous"\n-            handler="..utils.null_upgrade_step"\n+            title="Update rolemap for Site Administrator"\n+            handler=".final.rolemap_site_admin"\n             />\n \n     </gs:upgradeSteps>\ndiff --git a/plone/app/upgrade/v60/final.py b/plone/app/upgrade/v60/final.py\nnew file mode 100644\nindex 00000000..82a7c735\n--- /dev/null\n+++ b/plone/app/upgrade/v60/final.py\n@@ -0,0 +1,70 @@\n+from AccessControl.Permission import Permission\n+from zope.component.hooks import getSite\n+\n+import logging\n+\n+\n+logger = logging.getLogger(__name__)\n+SITE_ADMIN = "Site Administrator"\n+SITE_ADMIN_PERMISSIONS = [\n+    "Inspect Relations",\n+    "Plone Site Setup: Editing",\n+    "Plone Site Setup: Filtering",\n+    "Plone Site Setup: Language",\n+    "Plone Site Setup: Mail",\n+    "Plone Site Setup: Markup",\n+    "Plone Site Setup: Navigation",\n+    "Plone Site Setup: Overview",\n+    "Plone Site Setup: Search",\n+    "Plone Site Setup: Security",\n+    "Plone Site Setup: Site",\n+    "Plone Site Setup: Themes",\n+    "Plone Site Setup: TinyMCE",\n+    "Plone Site Setup: Types",\n+    "Plone Site Setup: Users and Groups",\n+]\n+\n+\n+def rolemap_site_admin(context):\n+    """Add Site Administrator role to various permissions.\n+\n+    Especially for control panels, permissions were defined in Python or zcml\n+    with both Manager and Site Administrator in the roles.\n+    On startup, this is set on the Zope level, NOT the Plone level.\n+    And on the Zope level the Site Administrator role is not defined.\n+    This works, but can give problems.\n+    So setting the Site Administrator role was moved to rolemap.xml\n+    See https://github.com/plone/Products.CMFPlone/pull/3225\n+\n+    That works for new sites, but migrated sites now had a problem.\n+    Site Administrators lost all those permissions, and could not even\n+    see the Site Setup.  How to fix that?  Here we more or less follow this plan:\n+    https://github.com/plone/Products.CMFPlone/pull/3225#issuecomment-1467095416\n+    Not entirely though.  What we do for real, is described in inline comments below.\n+    """\n+    portal = getSite()\n+    for perm in portal.ac_inherited_permissions(1):\n+        # perm is a tuple: name, value, inherited roles.\n+        # (\'Plone Site Setup: Editing\', (), (\'Manager\',))\n+        name, value = perm[:2]\n+        for permission in SITE_ADMIN_PERMISSIONS:\n+            if name == permission:\n+                perm = Permission(name, value, portal)\n+                # getRoles gives the roles set on the current level (Plone),\n+                # so not inherited from Zope.\n+                # Note: when nothing is set explicitly, you still get [\'Manager\'].\n+                roles = perm.getRoles()\n+                if SITE_ADMIN in roles:\n+                    # nothing to do\n+                    continue\n+                # If roles is a list, then it is acquired.\n+                # It roles is a tuple, then it is not acquired.\n+                # If the permission is NOT acquired, this means that the user\n+                # has explicitly switched this off.  We leave it alone then.\n+                acquired = isinstance(roles, list)\n+                if acquired:\n+                    # This is the main thing we want to change:\n+                    # add Site Administrator to the roles on Plone level.\n+                    roles.append(SITE_ADMIN)\n+                    perm.setRoles(roles)\n+                    logger.info("Added %s role to \'%s\' permission.", SITE_ADMIN, name)\n'

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2023-03-16T23:42:39+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.upgrade/commit/c508b0ebeaf6e5ae599961eedbb0ff23d8af990d

Merge pull request #313 from plone/maurits-site-admin

Add Site Administrator role to various permissions.

Files changed:
A news/3225.bugfix
A plone/app/upgrade/v60/final.py
M plone/app/upgrade/v60/configure.zcml

b'diff --git a/news/3225.bugfix b/news/3225.bugfix\nnew file mode 100644\nindex 00000000..79177154\n--- /dev/null\n+++ b/news/3225.bugfix\n@@ -0,0 +1,2 @@\n+Add Site Administrator role to various permissions.\n+[maurits]\ndiff --git a/plone/app/upgrade/v60/configure.zcml b/plone/app/upgrade/v60/configure.zcml\nindex 13554140..37be6a8c 100644\n--- a/plone/app/upgrade/v60/configure.zcml\n+++ b/plone/app/upgrade/v60/configure.zcml\n@@ -250,8 +250,8 @@\n         <!-- Plone 6.0.3 -->\n \n         <gs:upgradeStep\n-            title="Miscellaneous"\n-            handler="..utils.null_upgrade_step"\n+            title="Update rolemap for Site Administrator"\n+            handler=".final.rolemap_site_admin"\n             />\n \n     </gs:upgradeSteps>\ndiff --git a/plone/app/upgrade/v60/final.py b/plone/app/upgrade/v60/final.py\nnew file mode 100644\nindex 00000000..82a7c735\n--- /dev/null\n+++ b/plone/app/upgrade/v60/final.py\n@@ -0,0 +1,70 @@\n+from AccessControl.Permission import Permission\n+from zope.component.hooks import getSite\n+\n+import logging\n+\n+\n+logger = logging.getLogger(__name__)\n+SITE_ADMIN = "Site Administrator"\n+SITE_ADMIN_PERMISSIONS = [\n+    "Inspect Relations",\n+    "Plone Site Setup: Editing",\n+    "Plone Site Setup: Filtering",\n+    "Plone Site Setup: Language",\n+    "Plone Site Setup: Mail",\n+    "Plone Site Setup: Markup",\n+    "Plone Site Setup: Navigation",\n+    "Plone Site Setup: Overview",\n+    "Plone Site Setup: Search",\n+    "Plone Site Setup: Security",\n+    "Plone Site Setup: Site",\n+    "Plone Site Setup: Themes",\n+    "Plone Site Setup: TinyMCE",\n+    "Plone Site Setup: Types",\n+    "Plone Site Setup: Users and Groups",\n+]\n+\n+\n+def rolemap_site_admin(context):\n+    """Add Site Administrator role to various permissions.\n+\n+    Especially for control panels, permissions were defined in Python or zcml\n+    with both Manager and Site Administrator in the roles.\n+    On startup, this is set on the Zope level, NOT the Plone level.\n+    And on the Zope level the Site Administrator role is not defined.\n+    This works, but can give problems.\n+    So setting the Site Administrator role was moved to rolemap.xml\n+    See https://github.com/plone/Products.CMFPlone/pull/3225\n+\n+    That works for new sites, but migrated sites now had a problem.\n+    Site Administrators lost all those permissions, and could not even\n+    see the Site Setup.  How to fix that?  Here we more or less follow this plan:\n+    https://github.com/plone/Products.CMFPlone/pull/3225#issuecomment-1467095416\n+    Not entirely though.  What we do for real, is described in inline comments below.\n+    """\n+    portal = getSite()\n+    for perm in portal.ac_inherited_permissions(1):\n+        # perm is a tuple: name, value, inherited roles.\n+        # (\'Plone Site Setup: Editing\', (), (\'Manager\',))\n+        name, value = perm[:2]\n+        for permission in SITE_ADMIN_PERMISSIONS:\n+            if name == permission:\n+                perm = Permission(name, value, portal)\n+                # getRoles gives the roles set on the current level (Plone),\n+                # so not inherited from Zope.\n+                # Note: when nothing is set explicitly, you still get [\'Manager\'].\n+                roles = perm.getRoles()\n+                if SITE_ADMIN in roles:\n+                    # nothing to do\n+                    continue\n+                # If roles is a list, then it is acquired.\n+                # It roles is a tuple, then it is not acquired.\n+                # If the permission is NOT acquired, this means that the user\n+                # has explicitly switched this off.  We leave it alone then.\n+                acquired = isinstance(roles, list)\n+                if acquired:\n+                    # This is the main thing we want to change:\n+                    # add Site Administrator to the roles on Plone level.\n+                    roles.append(SITE_ADMIN)\n+                    perm.setRoles(roles)\n+                    logger.info("Added %s role to \'%s\' permission.", SITE_ADMIN, name)\n'

