Repository: plone.session


Branch: refs/heads/master
Date: 2023-03-12T01:17:01+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.session/commit/38dfe9a133b2de0436749866f6c5554fb22b3631

chore: upstream plone/meta has such mapping already

Files changed:
M .meta.toml

b'diff --git a/.meta.toml b/.meta.toml\nindex 9c45210..cb35385 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -6,8 +6,3 @@ commit-id = "78307cdf"\n \n [codespell]\n additional-ignores = "bund"\n-\n-[dependencies]\n-mappings = [\n-    "Zope = [\'App\', \'OFS\', \'Products.Five\', \'Products.PageTemplates\']",\n-    ]\n'

Repository: plone.session


Branch: refs/heads/master
Date: 2023-03-12T01:17:19+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.session/commit/12372a9f17fbc8957e2b94cc54eae3354aae82c4

Configuring with plone/meta

Files changed:
A .pre-commit-config.yaml
A news/a533099d.internal
M .meta.toml
M pyproject.toml
M setup.cfg
M tox.ini

b'diff --git a/.meta.toml b/.meta.toml\nindex cb35385..98f5076 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -2,7 +2,7 @@\n # https://github.com/plone/meta/tree/master/config/default\n [meta]\n template = "default"\n-commit-id = "78307cdf"\n+commit-id = "a533099d"\n \n [codespell]\n additional-ignores = "bund"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nnew file mode 100644\nindex 0000000..582f8ac\n--- /dev/null\n+++ b/.pre-commit-config.yaml\n@@ -0,0 +1,42 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+ci:\n+    autofix_prs: false\n+    autoupdate_schedule: monthly\n+\n+repos:\n+-   repo: https://github.com/asottile/pyupgrade\n+    rev: v3.3.1\n+    hooks:\n+    -   id: pyupgrade\n+        args: [--py38-plus]\n+-   repo: https://github.com/pycqa/isort\n+    rev: 5.12.0\n+    hooks:\n+    -   id: isort\n+-   repo: https://github.com/psf/black\n+    rev: 23.1.0\n+    hooks:\n+    -   id: black\n+-   repo: https://github.com/collective/zpretty\n+    rev: 3.0.2\n+    hooks:\n+    -   id: zpretty\n+-   repo: https://github.com/PyCQA/flake8\n+    rev: 6.0.0\n+    hooks:\n+    -   id: flake8\n+-   repo: https://github.com/codespell-project/codespell\n+    rev: v2.2.2\n+    hooks:\n+    -   id: codespell\n+        additional_dependencies:\n+          - tomli\n+-   repo: https://github.com/mgedmin/check-manifest\n+    rev: "0.49"\n+    hooks:\n+    -   id: check-manifest\n+-   repo: https://github.com/regebro/pyroma\n+    rev: "4.2"\n+    hooks:\n+    -   id: pyroma\ndiff --git a/news/a533099d.internal b/news/a533099d.internal\nnew file mode 100644\nindex 0000000..c08f539\n--- /dev/null\n+++ b/news/a533099d.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex f5c61e9..85a60bd 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -46,4 +46,20 @@ target-version = ["py38"]\n ignore-words-list = "bund"\n \n [tool.dependencychecker]\n-Zope = [\'App\', \'OFS\', \'Products.Five\', \'Products.PageTemplates\']\n+Zope = [\n+  # Zope own provided namespaces\n+  \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n+  \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n+  \'Zope2\', \'webdav\', \'zmi\',\n+  # Zope dependencies\n+  \'Acquisition\', \'DateTime\', \'transaction\', \'zExceptions\', \'ZODB\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.deferredimport\', \'zope.event\',\n+  \'zope.exceptions\', \'zope.globalrequest\', \'zope.i18n\', \'zope.i18nmessageid\',\n+  \'zope.interface\', \'zope.lifecycleevent\', \'zope.location\', \'zope.publisher\',\n+  \'zope.schema\', \'zope.security\', \'zope.site\', \'zope.traversing\', \'AccessControl\',\n+]\n+\'plone.base\' = [\n+  \'setuptools\', \'AccessControl\', \'Products.BTreeFolder2\', \'Products.CMFCore\',\n+  \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n+]\n+python-dateutil = [\'dateutil\']\ndiff --git a/setup.cfg b/setup.cfg\nindex 8849fbc..0da8f8f 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -19,5 +19,5 @@ ignore =\n ignore =\n     .editorconfig\n     .meta.toml\n+    .pre-commit-config.yaml\n     tox.ini\n-    lint-requirements.txt\ndiff --git a/tox.ini b/tox.ini\nindex c4810c9..fa69435 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -4,47 +4,47 @@\n envlist =\n     format\n     lint\n+    test\n \n [testenv]\n-py_files = git ls-files "*.py"\n-text_files = git ls-files "*.rst" "*.md"\n allowlist_externals =\n     sh\n \n [testenv:format]\n-description = automatically reformat python code\n+description = automatically reformat code\n skip_install = true\n deps =\n-    pyupgrade\n-    isort\n-    black\n-    -c lint-requirements.txt\n+    pre-commit\n commands =\n-    sh -c \'{[testenv]py_files} | xargs pyupgrade --py38-plus\'\n-    sh -c \'{[testenv]py_files} | xargs isort\'\n-    sh -c \'{[testenv]py_files} | xargs black\'\n+    pre-commit run -a pyupgrade\n+    pre-commit run -a isort\n+    pre-commit run -a black\n+    pre-commit run -a zpretty\n \n [testenv:lint]\n description = run linters that will help improve the code style\n skip_install = true\n deps =\n-    flake8\n-    codespell\n-    tomli  # needed for codespell to read pyproject.toml\n-    check-manifest\n-    pyroma\n-    -c lint-requirements.txt\n+    pre-commit\n commands =\n-    sh -c \'{[testenv]py_files} | xargs flake8\'\n-    sh -c \'{[testenv]py_files} | xargs codespell\'\n-    sh -c \'{[testenv]text_files} | xargs codespell\'\n-    check-manifest\n-    pyroma -n 10 .\n+    pre-commit run -a\n \n [testenv:dependencies]\n-description = check if the package defines all its dependencies\n+description = check if the package defines all its dependencies and generate a graph out of them\n deps =\n-    z3c.dependencychecker\n-    -c lint-requirements.txt\n+    z3c.dependencychecker==2.11\n+    pipdeptree==2.5.1\n+    graphviz  # optional dependency of pipdeptree\n commands =\n     dependencychecker\n+    sh -c \'pipdeptree --exclude setuptools,pipdeptree,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+\n+[testenv:test]\n+usedevelop = true\n+deps =\n+    zope.testrunner\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    zope-testrunner --test-path={toxinidir} -s plone.session\n+extras =\n+    test\n'

Repository: plone.session


Branch: refs/heads/master
Date: 2023-03-12T01:18:06+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.session/commit/941aef1e9e4e7bd1e5f6efcf35ef2d1c67fab06e

chore: zpretty

Files changed:
M plone/session/configure.zcml
M plone/session/meta.zcml
M plone/session/plugins/secret.pt
M plone/session/plugins/session.zpt
M plone/session/profiles.zcml
M plone/session/profiles/default/metadata.xml
M plone/session/profiles/default/registry.xml
M plone/session/profiles/uninstall/registry.xml
M plone/session/resources.zcml
M plone/session/tests/configure.zcml

b'diff --git a/plone/session/configure.zcml b/plone/session/configure.zcml\nindex 844cbb2..30b73c2 100644\n--- a/plone/session/configure.zcml\n+++ b/plone/session/configure.zcml\n@@ -1,18 +1,19 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:five="http://namespaces.zope.org/five"\n-    xmlns:zcml="http://namespaces.zope.org/zcml">\n+    xmlns:zcml="http://namespaces.zope.org/zcml"\n+    >\n \n   <five:registerPackage\n-      initialize=".initialize"\n       package="."\n-  />\n+      initialize=".initialize"\n+      />\n \n   <include package="plone.protect" />\n   <include file="resources.zcml" />\n   <include\n       file="profiles.zcml"\n       zcml:condition="installed plone.base"\n-  />\n+      />\n \n </configure>\ndiff --git a/plone/session/meta.zcml b/plone/session/meta.zcml\nindex e2c5e48..b1843ad 100644\n--- a/plone/session/meta.zcml\n+++ b/plone/session/meta.zcml\n@@ -1,6 +1,12 @@\n <configure xmlns="http://namespaces.zope.org/zope">\n \n-    <include package="Products.Five" file="meta.zcml" />\n-    <include package="plone.keyring" file="meta.zcml" />\n+  <include\n+      package="Products.Five"\n+      file="meta.zcml"\n+      />\n+  <include\n+      package="plone.keyring"\n+      file="meta.zcml"\n+      />\n \n </configure>\ndiff --git a/plone/session/plugins/secret.pt b/plone/session/plugins/secret.pt\nindex 0f37379..3bf2200 100644\n--- a/plone/session/plugins/secret.pt\n+++ b/plone/session/plugins/secret.pt\n@@ -1,65 +1,95 @@\n-<h1 tal:replace="structure here/manage_page_header"> PAGE HEADER </h1>\n-<h2 tal:replace="structure here/manage_tabs"> PAGE HEADER </h2>\n+<h1 tal:replace="structure here/manage_page_header">\n+  PAGE HEADER\n+</h1>\n+<h2 tal:replace="structure here/manage_tabs">\n+  PAGE HEADER\n+</h2>\n \n-<h3> Session identifier management</h3>\n+<h3>\n+  Session identifier management</h3>\n \n <div class="form-help">\n-    <p> You may use either a shared secret or the plone.keyring ring of five secrets\n+  <p>\n+     You may use either a shared secret or the plone.keyring ring of five secrets\n         (shared with the plone.protect CSRF protection framework.)\n-    </p>\n-    <p>The following properties may be set through the Properties tab:\n-    </p>\n-    <dl>\n-      <dt>Cookie validity timeout (in seconds)</dt>\n-      <dd>After this, the session is invalid and the user must login again. Set to 0\n+  </p>\n+  <p>The following properties may be set through the Properties tab:\n+  </p>\n+  <dl>\n+    <dt>Cookie validity timeout (in seconds)</dt>\n+    <dd>After this, the session is invalid and the user must login again. Set to 0\n           for the cookie to remain valid indefinitely. Note that when the user\n           folder has caching enabled, cookie validity may not be checked on every\n-          request.</dd>\n+      request.</dd>\n \n-      <dt>Use mod_auth_tkt compatible hashing algorithm</dt>\n-      <dd>Compatibility with other implemenations, but at the cost of using a weaker\n-          hashing algorithm.</dd>\n+    <dt>Use mod_auth_tkt compatible hashing algorithm</dt>\n+    <dd>Compatibility with other implemenations, but at the cost of using a weaker\n+      hashing algorithm.</dd>\n \n-      <dt>Cookie name</dt>\n-      <dd>Which cookie to use. This must also be set on the\n-          `credentials_cookie_auth`` plugin.</dd>\n+    <dt>Cookie name</dt>\n+    <dd>Which cookie to use. This must also be set on the\n+      `credentials_cookie_auth`` plugin.</dd>\n \n-      <dt>Cookie lifetime (in days)</dt>\n-      <dd>This makes the cookie persistent across opening and closing the browser.</dd>\n+    <dt>Cookie lifetime (in days)</dt>\n+    <dd>This makes the cookie persistent across opening and closing the browser.</dd>\n \n-      <dt>Cookie domain</dt>\n-      <dd>A cookie may be shared across www1.example.com and www2.example.com by\n-          setting the cookie domain to ``.example.com``. (blank for the user\'s current domain)</dd>\n+    <dt>Cookie domain</dt>\n+    <dd>A cookie may be shared across www1.example.com and www2.example.com by\n+      setting the cookie domain to ``.example.com``. (blank for the user\'s current domain)</dd>\n \n-      <dt>Cookie path</dt>\n-      <dd>What path the cookie is set valid (defaults to ``/``.)</dd>\n+    <dt>Cookie path</dt>\n+    <dd>What path the cookie is set valid (defaults to ``/``.)</dd>\n   </dl>\n \n </div>\n \n-<h3>Shared secret <span tal:condition="context/haveSharedSecret">(enabled)</span></h3>\n+<h3>Shared secret\n+  <span tal:condition="context/haveSharedSecret">(enabled)</span></h3>\n \n <p>\n To enable logins between sites or other mod_auth_tkt systems, set the shared secret.\n </p>\n-<form method="post" action="." tal:attributes="action string:${context/absolute_url}">\n-\n-    <label for="shared_secret">Shared secret:</label>\n-    <input type="text" name="shared_secret" value="" autocomplete="off" size="50"/>\n-    <input type="submit" name="manage_setSharedSecret:method" value="Set shared secret" /><br/>\n-    <input tal:replace="structure context/@@authenticator/authenticator" />\n+<form action="."\n+      method="post"\n+      tal:attributes="\n+        action string:${context/absolute_url};\n+      "\n+>\n+\n+  <label for="shared_secret">Shared secret:</label>\n+  <input autocomplete="off"\n+         name="shared_secret"\n+         size="50"\n+         type="text"\n+         value=""\n+  />\n+  <input name="manage_setSharedSecret:method"\n+         type="submit"\n+         value="Set shared secret"\n+  /><br />\n+  <input tal:replace="structure context/@@authenticator/authenticator" />\n </form>\n \n \n-<form method="post" action="." tal:attributes="action string:${context/absolute_url}" tal:condition="context/haveSharedSecret">\n-    <p>\n+<form action="."\n+      method="post"\n+      tal:condition="context/haveSharedSecret"\n+      tal:attributes="\n+        action string:${context/absolute_url};\n+      "\n+>\n+  <p>\n     To use the plone.keyring secrets, remove the shared secret.\n-    </p>\n-    <input type="submit" name="manage_removeSharedSecret:method" value="Remove shared secret"/>\n-    <input tal:replace="structure context/@@authenticator/authenticator" />\n+  </p>\n+  <input name="manage_removeSharedSecret:method"\n+         type="submit"\n+         value="Remove shared secret"\n+  />\n+  <input tal:replace="structure context/@@authenticator/authenticator" />\n </form>\n \n-<h3>plone.keyring secrets <span tal:condition="not:context/haveSharedSecret">(enabled)</span></h3>\n+<h3>plone.keyring secrets\n+  <span tal:condition="not:context/haveSharedSecret">(enabled)</span></h3>\n \n <p>\n This implementation uses a ring of five secrets: one of them is used to\n@@ -76,9 +106,17 @@ require them to log in again.\n <p tal:condition="context/per_user_keyring">\n In addition to the system keyring each user keyring will also be invalidated (since per-user keyrings are enabled).\n </p>\n-<form method="post" action="." tal:attributes="action string:${context/absolute_url}">\n-    <input type="submit" name="manage_clearSecrets:method" value="Clear secrets"/>\n-    <input tal:replace="structure context/@@authenticator/authenticator" />\n+<form action="."\n+      method="post"\n+      tal:attributes="\n+        action string:${context/absolute_url};\n+      "\n+>\n+  <input name="manage_clearSecrets:method"\n+         type="submit"\n+         value="Clear secrets"\n+  />\n+  <input tal:replace="structure context/@@authenticator/authenticator" />\n </form>\n \n <h4>Create a new (signing) secret</h4>\n@@ -87,9 +125,17 @@ By clicking the button below a new signing secret will be created and added\n to the ring. This will remove the oldest secret from the ring if there already\n were five secrets present.\n </p>\n-<form method="post" action="." tal:attributes="action string:${context/absolute_url}">\n-    <input type="submit" name="manage_createNewSecret:method" value="New secret"/>\n-    <input tal:replace="structure context/@@authenticator/authenticator" />\n+<form action="."\n+      method="post"\n+      tal:attributes="\n+        action string:${context/absolute_url};\n+      "\n+>\n+  <input name="manage_createNewSecret:method"\n+         type="submit"\n+         value="New secret"\n+  />\n+  <input tal:replace="structure context/@@authenticator/authenticator" />\n </form>\n \n <h4>Use per-user keyrings (server-side logout)<span tal:condition="context/per_user_keyring">(enabled)</span></h4>\n@@ -103,11 +149,22 @@ Per-user keyrings use a single secret.\n Users that have an active, valid session will still be able to use it (system keyring) until it expires.\n They will then switch to their own keyring when they log in again.\n </p>\n-<form method="post" action="." tal:attributes="action string:${context/absolute_url}">\n-    <input type="submit" name="manage_togglePerUserKeyring:method"\n-        tal:attributes="value python:test(context.per_user_keyring, \'Disable per-user keyrings\', \'Enable per-user keyrings\')"/>\n-    <input tal:replace="structure context/@@authenticator/authenticator" />\n+<form action="."\n+      method="post"\n+      tal:attributes="\n+        action string:${context/absolute_url};\n+      "\n+>\n+  <input name="manage_togglePerUserKeyring:method"\n+         type="submit"\n+         tal:attributes="\n+           value python:test(context.per_user_keyring, \'Disable per-user keyrings\', \'Enable per-user keyrings\');\n+         "\n+  />\n+  <input tal:replace="structure context/@@authenticator/authenticator" />\n </form>\n \n \n-<h1 tal:replace="structure here/manage_page_footer"> PAGE FOOTER </h1>\n+<h1 tal:replace="structure here/manage_page_footer">\n+  PAGE FOOTER\n+</h1>\ndiff --git a/plone/session/plugins/session.zpt b/plone/session/plugins/session.zpt\nindex 31750fe..36803d7 100644\n--- a/plone/session/plugins/session.zpt\n+++ b/plone/session/plugins/session.zpt\n@@ -1,52 +1,89 @@\n <h1 tal:replace="structure here/manage_page_header">Header</h1>\n \n-<h2 tal:define="form_title string:Add Session Plugin"\n-    tal:replace="structure here/manage_form_title">Form Title</h2>\n+<h2 tal:define="\n+      form_title string:Add Session Plugin;\n+    "\n+    tal:replace="structure here/manage_form_title"\n+>Form Title</h2>\n \n <p class="form-help">\n   plone.session is a session plugin which does not use Zope sessions.\n </p>\n \n-<form action="manage_addSessionPlugin" method="post"\n-      enctype="multipart/form-data">\n-  <table cellspacing="0" cellpadding="2" border="0">\n+<form action="manage_addSessionPlugin"\n+      enctype="multipart/form-data"\n+      method="post"\n+>\n+  <table border="0"\n+         cellpadding="2"\n+         cellspacing="0"\n+  >\n     <tr>\n-      <td align="left" valign="top">\n+      <td align="left"\n+          valign="top"\n+      >\n         <div class="form-label">\n           Id\n         </div>\n       </td>\n-      <td align="left" valign="top">\n-        <input type="text" name="id" size="40" />\n+      <td align="left"\n+          valign="top"\n+      >\n+        <input name="id"\n+               size="40"\n+               type="text"\n+        />\n       </td>\n     </tr>\n     <tr>\n-      <td align="left" valign="top">\n+      <td align="left"\n+          valign="top"\n+      >\n         <div class="form-optional">\n           Title\n         </div>\n       </td>\n-      <td align="left" valign="top">\n-        <input type="text" name="title" size="40" />\n+      <td align="left"\n+          valign="top"\n+      >\n+        <input name="title"\n+               size="40"\n+               type="text"\n+        />\n       </td>\n     </tr>\n     <tr>\n-      <td align="left" valign="top">\n+      <td align="left"\n+          valign="top"\n+      >\n         <div class="form-optional">\n           Cookie Path\n         </div>\n       </td>\n-      <td align="left" valign="top">\n-        <input type="text" name="path" value="/" size="40" />\n+      <td align="left"\n+          valign="top"\n+      >\n+        <input name="path"\n+               size="40"\n+               type="text"\n+               value="/"\n+        />\n       </td>\n     </tr>\n     <tr>\n-      <td align="left" valign="top">\n+      <td align="left"\n+          valign="top"\n+      >\n       </td>\n-      <td align="left" valign="top">\n+      <td align="left"\n+          valign="top"\n+      >\n         <div class="form-element">\n-          <input class="form-element" type="submit" name="submit"\n-                 value=" Add " />\n+          <input class="form-element"\n+                 name="submit"\n+                 type="submit"\n+                 value=" Add "\n+          />\n         </div>\n       </td>\n     </tr>\ndiff --git a/plone/session/profiles.zcml b/plone/session/profiles.zcml\nindex bcef73d..3475357 100644\n--- a/plone/session/profiles.zcml\n+++ b/plone/session/profiles.zcml\n@@ -1,35 +1,36 @@\n <configure\n-    i18n_domain="plone"\n     xmlns="http://namespaces.zope.org/zope"\n-    xmlns:gs="http://namespaces.zope.org/genericsetup">\n+    xmlns:gs="http://namespaces.zope.org/genericsetup"\n+    i18n_domain="plone"\n+    >\n \n   <gs:registerProfile\n-      description="Optional plone.session refresh support."\n-      directory="profiles/default"\n       name="default"\n-      provides="Products.GenericSetup.interfaces.EXTENSION"\n       title="Session refresh support"\n-  />\n+      description="Optional plone.session refresh support."\n+      provides="Products.GenericSetup.interfaces.EXTENSION"\n+      directory="profiles/default"\n+      />\n \n   <gs:upgradeDepends\n-    source="1002"\n-    destination="1003"\n-    profile="plone.session:default"\n-    title="Update plone-session bundle dependencies."\n-    import_steps="plone.app.registry"\n-  />\n+      title="Update plone-session bundle dependencies."\n+      profile="plone.session:default"\n+      source="1002"\n+      destination="1003"\n+      import_steps="plone.app.registry"\n+      />\n \n   <gs:registerProfile\n-      description="Optional plone.session refresh support. [uninstall]"\n-      directory="profiles/uninstall"\n       name="uninstall"\n-      provides="Products.GenericSetup.interfaces.EXTENSION"\n       title="Session refresh support [uninstall]"\n-  />\n+      description="Optional plone.session refresh support. [uninstall]"\n+      provides="Products.GenericSetup.interfaces.EXTENSION"\n+      directory="profiles/uninstall"\n+      />\n \n   <utility\n-      name="plone.session"\n       factory=".hiddenprofiles.HiddenProfiles"\n-    />\n+      name="plone.session"\n+      />\n \n </configure>\ndiff --git a/plone/session/profiles/default/metadata.xml b/plone/session/profiles/default/metadata.xml\nindex 6a89889..85485a6 100644\n--- a/plone/session/profiles/default/metadata.xml\n+++ b/plone/session/profiles/default/metadata.xml\n@@ -1,4 +1,4 @@\n-<?xml version="1.0"?>\n+<?xml version="1.0" encoding="utf-8"?>\n <metadata>\n   <!-- Note: it is good to create upgrade steps in this package,\n        but the upgrade to 1002 is done in plone.app.upgrade,\ndiff --git a/plone/session/profiles/default/registry.xml b/plone/session/profiles/default/registry.xml\nindex f3426b8..9f18755 100644\n--- a/plone/session/profiles/default/registry.xml\n+++ b/plone/session/profiles/default/registry.xml\n@@ -1,13 +1,13 @@\n-<?xml version="1.0"?>\n+<?xml version="1.0" encoding="utf-8"?>\n <registry>\n   <!--\n   ===============================\n   Resource Registry Configuration\n   ===============================\n   -->\n-  <records\n-      interface="plone.base.interfaces.IBundleRegistry"\n-      prefix="plone.bundles/plone-session">\n+  <records interface="plone.base.interfaces.IBundleRegistry"\n+           prefix="plone.bundles/plone-session"\n+  >\n     <value key="enabled">True</value>\n     <value key="jscompilation">++resource++plone.session.refreshsupport.js</value>\n     <!-- This is a pseudo CSS generating a link in the Head .\ndiff --git a/plone/session/profiles/uninstall/registry.xml b/plone/session/profiles/uninstall/registry.xml\nindex f82bf15..68495f2 100644\n--- a/plone/session/profiles/uninstall/registry.xml\n+++ b/plone/session/profiles/uninstall/registry.xml\n@@ -1,10 +1,10 @@\n-<?xml version="1.0"?>\n+<?xml version="1.0" encoding="utf-8"?>\n <registry>\n \n-  <records\n-      interface="plone.base.interfaces.IBundleRegistry"\n-      prefix="plone.bundles/plone-session"\n-      remove="true">\n-  </records>\n+  <records interface="plone.base.interfaces.IBundleRegistry"\n+           prefix="plone.bundles/plone-session"\n+           remove="true"\n+  >\n+</records>\n \n </registry>\ndiff --git a/plone/session/resources.zcml b/plone/session/resources.zcml\nindex a940585..10757ab 100644\n--- a/plone/session/resources.zcml\n+++ b/plone/session/resources.zcml\n@@ -1,8 +1,8 @@\n <configure xmlns="http://namespaces.zope.org/browser">\n \n   <resource\n-      file="resources/refreshsupport.js"\n       name="plone.session.refreshsupport.js"\n-  />\n+      file="resources/refreshsupport.js"\n+      />\n \n </configure>\ndiff --git a/plone/session/tests/configure.zcml b/plone/session/tests/configure.zcml\nindex 22e417c..9f5a61c 100644\n--- a/plone/session/tests/configure.zcml\n+++ b/plone/session/tests/configure.zcml\n@@ -1,5 +1,4 @@\n-<configure\n-    xmlns="http://namespaces.zope.org/zope">\n+<configure xmlns="http://namespaces.zope.org/zope">\n \n   <utility\n       factory="plone.keyring.keymanager.KeyManager"\n'

Repository: plone.session


Branch: refs/heads/master
Date: 2023-03-12T01:18:44+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.session/commit/d4abb5d57adfd07510ca50143ae491b2f2c3b4fa

chore: remove obsolete file

Files changed:
D lint-requirements.txt

b'diff --git a/lint-requirements.txt b/lint-requirements.txt\ndeleted file mode 100644\nindex d2b64ff..0000000\n--- a/lint-requirements.txt\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-# Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n-black==22.12.0\n-check-manifest==0.49\n-codespell==2.2.2\n-flake8==6.0.0\n-isort==5.11.4\n-pyroma==4.1\n-pyupgrade==3.3.1\n-z3c.dependencychecker==2.10\n'

Repository: plone.session


Branch: refs/heads/master
Date: 2023-03-12T01:22:21+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.session/commit/34119db60dd7019bae40a3b44bd99bdf144769ac

feat: codespell

Files changed:
M plone/session/plugins/secret.pt

b'diff --git a/plone/session/plugins/secret.pt b/plone/session/plugins/secret.pt\nindex 3bf2200..670f6d8 100644\n--- a/plone/session/plugins/secret.pt\n+++ b/plone/session/plugins/secret.pt\n@@ -23,7 +23,7 @@\n       request.</dd>\n \n     <dt>Use mod_auth_tkt compatible hashing algorithm</dt>\n-    <dd>Compatibility with other implemenations, but at the cost of using a weaker\n+    <dd>Compatibility with other implementations, but at the cost of using a weaker\n       hashing algorithm.</dd>\n \n     <dt>Cookie name</dt>\n@@ -93,8 +93,8 @@ To enable logins between sites or other mod_auth_tkt systems, set the shared sec\n \n <p>\n This implementation uses a ring of five secrets: one of them is used to\n-generate new session identifiters, the others are older signing secrets which\n-are still considerd to be valid.\n+generate new session identifiers, the others are older signing secrets which\n+are still considered to be valid.\n </p>\n \n <h4>Invalidate all session identifiers</h4>\n'

Repository: plone.session


Branch: refs/heads/master
Date: 2023-03-12T04:32:23+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.session/commit/eeb083cd4e84948625dabfa5a666beb559fecba6

Merge pull request #37 from plone/config-with-default-template-965a7446

Config with default template

Files changed:
A .pre-commit-config.yaml
A news/a533099d.internal
M .meta.toml
M plone/session/configure.zcml
M plone/session/meta.zcml
M plone/session/plugins/secret.pt
M plone/session/plugins/session.zpt
M plone/session/profiles.zcml
M plone/session/profiles/default/metadata.xml
M plone/session/profiles/default/registry.xml
M plone/session/profiles/uninstall/registry.xml
M plone/session/resources.zcml
M plone/session/tests/configure.zcml
M pyproject.toml
M setup.cfg
M tox.ini
D lint-requirements.txt

b'diff --git a/.meta.toml b/.meta.toml\nindex 9c45210..98f5076 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -2,12 +2,7 @@\n # https://github.com/plone/meta/tree/master/config/default\n [meta]\n template = "default"\n-commit-id = "78307cdf"\n+commit-id = "a533099d"\n \n [codespell]\n additional-ignores = "bund"\n-\n-[dependencies]\n-mappings = [\n-    "Zope = [\'App\', \'OFS\', \'Products.Five\', \'Products.PageTemplates\']",\n-    ]\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nnew file mode 100644\nindex 0000000..582f8ac\n--- /dev/null\n+++ b/.pre-commit-config.yaml\n@@ -0,0 +1,42 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+ci:\n+    autofix_prs: false\n+    autoupdate_schedule: monthly\n+\n+repos:\n+-   repo: https://github.com/asottile/pyupgrade\n+    rev: v3.3.1\n+    hooks:\n+    -   id: pyupgrade\n+        args: [--py38-plus]\n+-   repo: https://github.com/pycqa/isort\n+    rev: 5.12.0\n+    hooks:\n+    -   id: isort\n+-   repo: https://github.com/psf/black\n+    rev: 23.1.0\n+    hooks:\n+    -   id: black\n+-   repo: https://github.com/collective/zpretty\n+    rev: 3.0.2\n+    hooks:\n+    -   id: zpretty\n+-   repo: https://github.com/PyCQA/flake8\n+    rev: 6.0.0\n+    hooks:\n+    -   id: flake8\n+-   repo: https://github.com/codespell-project/codespell\n+    rev: v2.2.2\n+    hooks:\n+    -   id: codespell\n+        additional_dependencies:\n+          - tomli\n+-   repo: https://github.com/mgedmin/check-manifest\n+    rev: "0.49"\n+    hooks:\n+    -   id: check-manifest\n+-   repo: https://github.com/regebro/pyroma\n+    rev: "4.2"\n+    hooks:\n+    -   id: pyroma\ndiff --git a/lint-requirements.txt b/lint-requirements.txt\ndeleted file mode 100644\nindex d2b64ff..0000000\n--- a/lint-requirements.txt\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-# Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n-black==22.12.0\n-check-manifest==0.49\n-codespell==2.2.2\n-flake8==6.0.0\n-isort==5.11.4\n-pyroma==4.1\n-pyupgrade==3.3.1\n-z3c.dependencychecker==2.10\ndiff --git a/news/a533099d.internal b/news/a533099d.internal\nnew file mode 100644\nindex 0000000..c08f539\n--- /dev/null\n+++ b/news/a533099d.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/plone/session/configure.zcml b/plone/session/configure.zcml\nindex 844cbb2..30b73c2 100644\n--- a/plone/session/configure.zcml\n+++ b/plone/session/configure.zcml\n@@ -1,18 +1,19 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:five="http://namespaces.zope.org/five"\n-    xmlns:zcml="http://namespaces.zope.org/zcml">\n+    xmlns:zcml="http://namespaces.zope.org/zcml"\n+    >\n \n   <five:registerPackage\n-      initialize=".initialize"\n       package="."\n-  />\n+      initialize=".initialize"\n+      />\n \n   <include package="plone.protect" />\n   <include file="resources.zcml" />\n   <include\n       file="profiles.zcml"\n       zcml:condition="installed plone.base"\n-  />\n+      />\n \n </configure>\ndiff --git a/plone/session/meta.zcml b/plone/session/meta.zcml\nindex e2c5e48..b1843ad 100644\n--- a/plone/session/meta.zcml\n+++ b/plone/session/meta.zcml\n@@ -1,6 +1,12 @@\n <configure xmlns="http://namespaces.zope.org/zope">\n \n-    <include package="Products.Five" file="meta.zcml" />\n-    <include package="plone.keyring" file="meta.zcml" />\n+  <include\n+      package="Products.Five"\n+      file="meta.zcml"\n+      />\n+  <include\n+      package="plone.keyring"\n+      file="meta.zcml"\n+      />\n \n </configure>\ndiff --git a/plone/session/plugins/secret.pt b/plone/session/plugins/secret.pt\nindex 0f37379..670f6d8 100644\n--- a/plone/session/plugins/secret.pt\n+++ b/plone/session/plugins/secret.pt\n@@ -1,70 +1,100 @@\n-<h1 tal:replace="structure here/manage_page_header"> PAGE HEADER </h1>\n-<h2 tal:replace="structure here/manage_tabs"> PAGE HEADER </h2>\n+<h1 tal:replace="structure here/manage_page_header">\n+  PAGE HEADER\n+</h1>\n+<h2 tal:replace="structure here/manage_tabs">\n+  PAGE HEADER\n+</h2>\n \n-<h3> Session identifier management</h3>\n+<h3>\n+  Session identifier management</h3>\n \n <div class="form-help">\n-    <p> You may use either a shared secret or the plone.keyring ring of five secrets\n+  <p>\n+     You may use either a shared secret or the plone.keyring ring of five secrets\n         (shared with the plone.protect CSRF protection framework.)\n-    </p>\n-    <p>The following properties may be set through the Properties tab:\n-    </p>\n-    <dl>\n-      <dt>Cookie validity timeout (in seconds)</dt>\n-      <dd>After this, the session is invalid and the user must login again. Set to 0\n+  </p>\n+  <p>The following properties may be set through the Properties tab:\n+  </p>\n+  <dl>\n+    <dt>Cookie validity timeout (in seconds)</dt>\n+    <dd>After this, the session is invalid and the user must login again. Set to 0\n           for the cookie to remain valid indefinitely. Note that when the user\n           folder has caching enabled, cookie validity may not be checked on every\n-          request.</dd>\n+      request.</dd>\n \n-      <dt>Use mod_auth_tkt compatible hashing algorithm</dt>\n-      <dd>Compatibility with other implemenations, but at the cost of using a weaker\n-          hashing algorithm.</dd>\n+    <dt>Use mod_auth_tkt compatible hashing algorithm</dt>\n+    <dd>Compatibility with other implementations, but at the cost of using a weaker\n+      hashing algorithm.</dd>\n \n-      <dt>Cookie name</dt>\n-      <dd>Which cookie to use. This must also be set on the\n-          `credentials_cookie_auth`` plugin.</dd>\n+    <dt>Cookie name</dt>\n+    <dd>Which cookie to use. This must also be set on the\n+      `credentials_cookie_auth`` plugin.</dd>\n \n-      <dt>Cookie lifetime (in days)</dt>\n-      <dd>This makes the cookie persistent across opening and closing the browser.</dd>\n+    <dt>Cookie lifetime (in days)</dt>\n+    <dd>This makes the cookie persistent across opening and closing the browser.</dd>\n \n-      <dt>Cookie domain</dt>\n-      <dd>A cookie may be shared across www1.example.com and www2.example.com by\n-          setting the cookie domain to ``.example.com``. (blank for the user\'s current domain)</dd>\n+    <dt>Cookie domain</dt>\n+    <dd>A cookie may be shared across www1.example.com and www2.example.com by\n+      setting the cookie domain to ``.example.com``. (blank for the user\'s current domain)</dd>\n \n-      <dt>Cookie path</dt>\n-      <dd>What path the cookie is set valid (defaults to ``/``.)</dd>\n+    <dt>Cookie path</dt>\n+    <dd>What path the cookie is set valid (defaults to ``/``.)</dd>\n   </dl>\n \n </div>\n \n-<h3>Shared secret <span tal:condition="context/haveSharedSecret">(enabled)</span></h3>\n+<h3>Shared secret\n+  <span tal:condition="context/haveSharedSecret">(enabled)</span></h3>\n \n <p>\n To enable logins between sites or other mod_auth_tkt systems, set the shared secret.\n </p>\n-<form method="post" action="." tal:attributes="action string:${context/absolute_url}">\n-\n-    <label for="shared_secret">Shared secret:</label>\n-    <input type="text" name="shared_secret" value="" autocomplete="off" size="50"/>\n-    <input type="submit" name="manage_setSharedSecret:method" value="Set shared secret" /><br/>\n-    <input tal:replace="structure context/@@authenticator/authenticator" />\n+<form action="."\n+      method="post"\n+      tal:attributes="\n+        action string:${context/absolute_url};\n+      "\n+>\n+\n+  <label for="shared_secret">Shared secret:</label>\n+  <input autocomplete="off"\n+         name="shared_secret"\n+         size="50"\n+         type="text"\n+         value=""\n+  />\n+  <input name="manage_setSharedSecret:method"\n+         type="submit"\n+         value="Set shared secret"\n+  /><br />\n+  <input tal:replace="structure context/@@authenticator/authenticator" />\n </form>\n \n \n-<form method="post" action="." tal:attributes="action string:${context/absolute_url}" tal:condition="context/haveSharedSecret">\n-    <p>\n+<form action="."\n+      method="post"\n+      tal:condition="context/haveSharedSecret"\n+      tal:attributes="\n+        action string:${context/absolute_url};\n+      "\n+>\n+  <p>\n     To use the plone.keyring secrets, remove the shared secret.\n-    </p>\n-    <input type="submit" name="manage_removeSharedSecret:method" value="Remove shared secret"/>\n-    <input tal:replace="structure context/@@authenticator/authenticator" />\n+  </p>\n+  <input name="manage_removeSharedSecret:method"\n+         type="submit"\n+         value="Remove shared secret"\n+  />\n+  <input tal:replace="structure context/@@authenticator/authenticator" />\n </form>\n \n-<h3>plone.keyring secrets <span tal:condition="not:context/haveSharedSecret">(enabled)</span></h3>\n+<h3>plone.keyring secrets\n+  <span tal:condition="not:context/haveSharedSecret">(enabled)</span></h3>\n \n <p>\n This implementation uses a ring of five secrets: one of them is used to\n-generate new session identifiters, the others are older signing secrets which\n-are still considerd to be valid.\n+generate new session identifiers, the others are older signing secrets which\n+are still considered to be valid.\n </p>\n \n <h4>Invalidate all session identifiers</h4>\n@@ -76,9 +106,17 @@ require them to log in again.\n <p tal:condition="context/per_user_keyring">\n In addition to the system keyring each user keyring will also be invalidated (since per-user keyrings are enabled).\n </p>\n-<form method="post" action="." tal:attributes="action string:${context/absolute_url}">\n-    <input type="submit" name="manage_clearSecrets:method" value="Clear secrets"/>\n-    <input tal:replace="structure context/@@authenticator/authenticator" />\n+<form action="."\n+      method="post"\n+      tal:attributes="\n+        action string:${context/absolute_url};\n+      "\n+>\n+  <input name="manage_clearSecrets:method"\n+         type="submit"\n+         value="Clear secrets"\n+  />\n+  <input tal:replace="structure context/@@authenticator/authenticator" />\n </form>\n \n <h4>Create a new (signing) secret</h4>\n@@ -87,9 +125,17 @@ By clicking the button below a new signing secret will be created and added\n to the ring. This will remove the oldest secret from the ring if there already\n were five secrets present.\n </p>\n-<form method="post" action="." tal:attributes="action string:${context/absolute_url}">\n-    <input type="submit" name="manage_createNewSecret:method" value="New secret"/>\n-    <input tal:replace="structure context/@@authenticator/authenticator" />\n+<form action="."\n+      method="post"\n+      tal:attributes="\n+        action string:${context/absolute_url};\n+      "\n+>\n+  <input name="manage_createNewSecret:method"\n+         type="submit"\n+         value="New secret"\n+  />\n+  <input tal:replace="structure context/@@authenticator/authenticator" />\n </form>\n \n <h4>Use per-user keyrings (server-side logout)<span tal:condition="context/per_user_keyring">(enabled)</span></h4>\n@@ -103,11 +149,22 @@ Per-user keyrings use a single secret.\n Users that have an active, valid session will still be able to use it (system keyring) until it expires.\n They will then switch to their own keyring when they log in again.\n </p>\n-<form method="post" action="." tal:attributes="action string:${context/absolute_url}">\n-    <input type="submit" name="manage_togglePerUserKeyring:method"\n-        tal:attributes="value python:test(context.per_user_keyring, \'Disable per-user keyrings\', \'Enable per-user keyrings\')"/>\n-    <input tal:replace="structure context/@@authenticator/authenticator" />\n+<form action="."\n+      method="post"\n+      tal:attributes="\n+        action string:${context/absolute_url};\n+      "\n+>\n+  <input name="manage_togglePerUserKeyring:method"\n+         type="submit"\n+         tal:attributes="\n+           value python:test(context.per_user_keyring, \'Disable per-user keyrings\', \'Enable per-user keyrings\');\n+         "\n+  />\n+  <input tal:replace="structure context/@@authenticator/authenticator" />\n </form>\n \n \n-<h1 tal:replace="structure here/manage_page_footer"> PAGE FOOTER </h1>\n+<h1 tal:replace="structure here/manage_page_footer">\n+  PAGE FOOTER\n+</h1>\ndiff --git a/plone/session/plugins/session.zpt b/plone/session/plugins/session.zpt\nindex 31750fe..36803d7 100644\n--- a/plone/session/plugins/session.zpt\n+++ b/plone/session/plugins/session.zpt\n@@ -1,52 +1,89 @@\n <h1 tal:replace="structure here/manage_page_header">Header</h1>\n \n-<h2 tal:define="form_title string:Add Session Plugin"\n-    tal:replace="structure here/manage_form_title">Form Title</h2>\n+<h2 tal:define="\n+      form_title string:Add Session Plugin;\n+    "\n+    tal:replace="structure here/manage_form_title"\n+>Form Title</h2>\n \n <p class="form-help">\n   plone.session is a session plugin which does not use Zope sessions.\n </p>\n \n-<form action="manage_addSessionPlugin" method="post"\n-      enctype="multipart/form-data">\n-  <table cellspacing="0" cellpadding="2" border="0">\n+<form action="manage_addSessionPlugin"\n+      enctype="multipart/form-data"\n+      method="post"\n+>\n+  <table border="0"\n+         cellpadding="2"\n+         cellspacing="0"\n+  >\n     <tr>\n-      <td align="left" valign="top">\n+      <td align="left"\n+          valign="top"\n+      >\n         <div class="form-label">\n           Id\n         </div>\n       </td>\n-      <td align="left" valign="top">\n-        <input type="text" name="id" size="40" />\n+      <td align="left"\n+          valign="top"\n+      >\n+        <input name="id"\n+               size="40"\n+               type="text"\n+        />\n       </td>\n     </tr>\n     <tr>\n-      <td align="left" valign="top">\n+      <td align="left"\n+          valign="top"\n+      >\n         <div class="form-optional">\n           Title\n         </div>\n       </td>\n-      <td align="left" valign="top">\n-        <input type="text" name="title" size="40" />\n+      <td align="left"\n+          valign="top"\n+      >\n+        <input name="title"\n+               size="40"\n+               type="text"\n+        />\n       </td>\n     </tr>\n     <tr>\n-      <td align="left" valign="top">\n+      <td align="left"\n+          valign="top"\n+      >\n         <div class="form-optional">\n           Cookie Path\n         </div>\n       </td>\n-      <td align="left" valign="top">\n-        <input type="text" name="path" value="/" size="40" />\n+      <td align="left"\n+          valign="top"\n+      >\n+        <input name="path"\n+               size="40"\n+               type="text"\n+               value="/"\n+        />\n       </td>\n     </tr>\n     <tr>\n-      <td align="left" valign="top">\n+      <td align="left"\n+          valign="top"\n+      >\n       </td>\n-      <td align="left" valign="top">\n+      <td align="left"\n+          valign="top"\n+      >\n         <div class="form-element">\n-          <input class="form-element" type="submit" name="submit"\n-                 value=" Add " />\n+          <input class="form-element"\n+                 name="submit"\n+                 type="submit"\n+                 value=" Add "\n+          />\n         </div>\n       </td>\n     </tr>\ndiff --git a/plone/session/profiles.zcml b/plone/session/profiles.zcml\nindex bcef73d..3475357 100644\n--- a/plone/session/profiles.zcml\n+++ b/plone/session/profiles.zcml\n@@ -1,35 +1,36 @@\n <configure\n-    i18n_domain="plone"\n     xmlns="http://namespaces.zope.org/zope"\n-    xmlns:gs="http://namespaces.zope.org/genericsetup">\n+    xmlns:gs="http://namespaces.zope.org/genericsetup"\n+    i18n_domain="plone"\n+    >\n \n   <gs:registerProfile\n-      description="Optional plone.session refresh support."\n-      directory="profiles/default"\n       name="default"\n-      provides="Products.GenericSetup.interfaces.EXTENSION"\n       title="Session refresh support"\n-  />\n+      description="Optional plone.session refresh support."\n+      provides="Products.GenericSetup.interfaces.EXTENSION"\n+      directory="profiles/default"\n+      />\n \n   <gs:upgradeDepends\n-    source="1002"\n-    destination="1003"\n-    profile="plone.session:default"\n-    title="Update plone-session bundle dependencies."\n-    import_steps="plone.app.registry"\n-  />\n+      title="Update plone-session bundle dependencies."\n+      profile="plone.session:default"\n+      source="1002"\n+      destination="1003"\n+      import_steps="plone.app.registry"\n+      />\n \n   <gs:registerProfile\n-      description="Optional plone.session refresh support. [uninstall]"\n-      directory="profiles/uninstall"\n       name="uninstall"\n-      provides="Products.GenericSetup.interfaces.EXTENSION"\n       title="Session refresh support [uninstall]"\n-  />\n+      description="Optional plone.session refresh support. [uninstall]"\n+      provides="Products.GenericSetup.interfaces.EXTENSION"\n+      directory="profiles/uninstall"\n+      />\n \n   <utility\n-      name="plone.session"\n       factory=".hiddenprofiles.HiddenProfiles"\n-    />\n+      name="plone.session"\n+      />\n \n </configure>\ndiff --git a/plone/session/profiles/default/metadata.xml b/plone/session/profiles/default/metadata.xml\nindex 6a89889..85485a6 100644\n--- a/plone/session/profiles/default/metadata.xml\n+++ b/plone/session/profiles/default/metadata.xml\n@@ -1,4 +1,4 @@\n-<?xml version="1.0"?>\n+<?xml version="1.0" encoding="utf-8"?>\n <metadata>\n   <!-- Note: it is good to create upgrade steps in this package,\n        but the upgrade to 1002 is done in plone.app.upgrade,\ndiff --git a/plone/session/profiles/default/registry.xml b/plone/session/profiles/default/registry.xml\nindex f3426b8..9f18755 100644\n--- a/plone/session/profiles/default/registry.xml\n+++ b/plone/session/profiles/default/registry.xml\n@@ -1,13 +1,13 @@\n-<?xml version="1.0"?>\n+<?xml version="1.0" encoding="utf-8"?>\n <registry>\n   <!--\n   ===============================\n   Resource Registry Configuration\n   ===============================\n   -->\n-  <records\n-      interface="plone.base.interfaces.IBundleRegistry"\n-      prefix="plone.bundles/plone-session">\n+  <records interface="plone.base.interfaces.IBundleRegistry"\n+           prefix="plone.bundles/plone-session"\n+  >\n     <value key="enabled">True</value>\n     <value key="jscompilation">++resource++plone.session.refreshsupport.js</value>\n     <!-- This is a pseudo CSS generating a link in the Head .\ndiff --git a/plone/session/profiles/uninstall/registry.xml b/plone/session/profiles/uninstall/registry.xml\nindex f82bf15..68495f2 100644\n--- a/plone/session/profiles/uninstall/registry.xml\n+++ b/plone/session/profiles/uninstall/registry.xml\n@@ -1,10 +1,10 @@\n-<?xml version="1.0"?>\n+<?xml version="1.0" encoding="utf-8"?>\n <registry>\n \n-  <records\n-      interface="plone.base.interfaces.IBundleRegistry"\n-      prefix="plone.bundles/plone-session"\n-      remove="true">\n-  </records>\n+  <records interface="plone.base.interfaces.IBundleRegistry"\n+           prefix="plone.bundles/plone-session"\n+           remove="true"\n+  >\n+</records>\n \n </registry>\ndiff --git a/plone/session/resources.zcml b/plone/session/resources.zcml\nindex a940585..10757ab 100644\n--- a/plone/session/resources.zcml\n+++ b/plone/session/resources.zcml\n@@ -1,8 +1,8 @@\n <configure xmlns="http://namespaces.zope.org/browser">\n \n   <resource\n-      file="resources/refreshsupport.js"\n       name="plone.session.refreshsupport.js"\n-  />\n+      file="resources/refreshsupport.js"\n+      />\n \n </configure>\ndiff --git a/plone/session/tests/configure.zcml b/plone/session/tests/configure.zcml\nindex 22e417c..9f5a61c 100644\n--- a/plone/session/tests/configure.zcml\n+++ b/plone/session/tests/configure.zcml\n@@ -1,5 +1,4 @@\n-<configure\n-    xmlns="http://namespaces.zope.org/zope">\n+<configure xmlns="http://namespaces.zope.org/zope">\n \n   <utility\n       factory="plone.keyring.keymanager.KeyManager"\ndiff --git a/pyproject.toml b/pyproject.toml\nindex f5c61e9..85a60bd 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -46,4 +46,20 @@ target-version = ["py38"]\n ignore-words-list = "bund"\n \n [tool.dependencychecker]\n-Zope = [\'App\', \'OFS\', \'Products.Five\', \'Products.PageTemplates\']\n+Zope = [\n+  # Zope own provided namespaces\n+  \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n+  \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n+  \'Zope2\', \'webdav\', \'zmi\',\n+  # Zope dependencies\n+  \'Acquisition\', \'DateTime\', \'transaction\', \'zExceptions\', \'ZODB\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.deferredimport\', \'zope.event\',\n+  \'zope.exceptions\', \'zope.globalrequest\', \'zope.i18n\', \'zope.i18nmessageid\',\n+  \'zope.interface\', \'zope.lifecycleevent\', \'zope.location\', \'zope.publisher\',\n+  \'zope.schema\', \'zope.security\', \'zope.site\', \'zope.traversing\', \'AccessControl\',\n+]\n+\'plone.base\' = [\n+  \'setuptools\', \'AccessControl\', \'Products.BTreeFolder2\', \'Products.CMFCore\',\n+  \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n+]\n+python-dateutil = [\'dateutil\']\ndiff --git a/setup.cfg b/setup.cfg\nindex 8849fbc..0da8f8f 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -19,5 +19,5 @@ ignore =\n ignore =\n     .editorconfig\n     .meta.toml\n+    .pre-commit-config.yaml\n     tox.ini\n-    lint-requirements.txt\ndiff --git a/tox.ini b/tox.ini\nindex c4810c9..fa69435 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -4,47 +4,47 @@\n envlist =\n     format\n     lint\n+    test\n \n [testenv]\n-py_files = git ls-files "*.py"\n-text_files = git ls-files "*.rst" "*.md"\n allowlist_externals =\n     sh\n \n [testenv:format]\n-description = automatically reformat python code\n+description = automatically reformat code\n skip_install = true\n deps =\n-    pyupgrade\n-    isort\n-    black\n-    -c lint-requirements.txt\n+    pre-commit\n commands =\n-    sh -c \'{[testenv]py_files} | xargs pyupgrade --py38-plus\'\n-    sh -c \'{[testenv]py_files} | xargs isort\'\n-    sh -c \'{[testenv]py_files} | xargs black\'\n+    pre-commit run -a pyupgrade\n+    pre-commit run -a isort\n+    pre-commit run -a black\n+    pre-commit run -a zpretty\n \n [testenv:lint]\n description = run linters that will help improve the code style\n skip_install = true\n deps =\n-    flake8\n-    codespell\n-    tomli  # needed for codespell to read pyproject.toml\n-    check-manifest\n-    pyroma\n-    -c lint-requirements.txt\n+    pre-commit\n commands =\n-    sh -c \'{[testenv]py_files} | xargs flake8\'\n-    sh -c \'{[testenv]py_files} | xargs codespell\'\n-    sh -c \'{[testenv]text_files} | xargs codespell\'\n-    check-manifest\n-    pyroma -n 10 .\n+    pre-commit run -a\n \n [testenv:dependencies]\n-description = check if the package defines all its dependencies\n+description = check if the package defines all its dependencies and generate a graph out of them\n deps =\n-    z3c.dependencychecker\n-    -c lint-requirements.txt\n+    z3c.dependencychecker==2.11\n+    pipdeptree==2.5.1\n+    graphviz  # optional dependency of pipdeptree\n commands =\n     dependencychecker\n+    sh -c \'pipdeptree --exclude setuptools,pipdeptree,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+\n+[testenv:test]\n+usedevelop = true\n+deps =\n+    zope.testrunner\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    zope-testrunner --test-path={toxinidir} -s plone.session\n+extras =\n+    test\n'

