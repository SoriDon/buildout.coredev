Repository: plone.restapi


Branch: refs/heads/master
Date: 2019-09-12T12:20:56+02:00
Author: Víctor Fernández de Alba (sneridagh) <sneridagh@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/d8e65b1d2d96c1ea2c79c6a9c0199e290fdb7efe

Querystring search endpoint @querystring-search implementation (#792)

* First working version

add changelog

Change endpoint name to a dashed one

Fix names

* Revert change in requirements.txt

* Add documentation

* Fix 4.3 wrong operator

* Add docs req/resp

* Add doc in the doctree

* Fix port in resp

* Polish and improve batching support, remove unrequired batch adapter

* Cast to int b_size, b_start and limit on BODY, add sort_order param

* Last update for the resp and improvements to the docs

Files changed:
A docs/source/querystringsearch.rst
A news/789.feature
A sphinx_build.log
A src/plone/restapi/services/querystringsearch/__init__.py
A src/plone/restapi/services/querystringsearch/configure.zcml
A src/plone/restapi/services/querystringsearch/get.py
A src/plone/restapi/tests/http-examples/querystringsearch_post.req
A src/plone/restapi/tests/http-examples/querystringsearch_post.resp
A src/plone/restapi/tests/test_services_querystringsearch.py
M docs/source/index.rst
M src/plone/restapi/batching.py
M src/plone/restapi/services/configure.zcml
M src/plone/restapi/tests/test_documentation.py

b'diff --git a/docs/source/index.rst b/docs/source/index.rst\nindex a44836c0..32471389 100644\n--- a/docs/source/index.rst\n+++ b/docs/source/index.rst\n@@ -47,6 +47,7 @@ Contents\n    controlpanels\n    tiles\n    querystring\n+   querystringsearch\n    customization\n    conventions\n    translations\ndiff --git a/docs/source/querystringsearch.rst b/docs/source/querystringsearch.rst\nnew file mode 100644\nindex 00000000..c9343cc0\n--- /dev/null\n+++ b/docs/source/querystringsearch.rst\n@@ -0,0 +1,24 @@\n+Querystring Search\n+==================\n+\n+The ``@querystring-search`` endpoint given a p.a.querystring query returns the results.\n+\n+You can call the ``/@querystring-search`` endpoint with a ``POST`` request and the p.a.querystring query in JSON BODY, along with the others querystring options:\n+\n+..  http:example:: curl httpie python-requests\n+    :request: ../../src/plone/restapi/tests/http-examples/querystringsearch_post.req\n+\n+The server will respond with the results:\n+\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/querystringsearch_post.resp\n+   :language: http\n+\n+The endpoint accepts the same parameters than the querystring search accept:\n+\n+  - ``b_start``\n+  - ``b_size``\n+  - ``sort_on``\n+  - ``sort_order``\n+  - ``limit``\n+\n+and also the ``fullobjects`` parameter for return the whole objects instead of the summary serialization of them.\ndiff --git a/news/789.feature b/news/789.feature\nnew file mode 100644\nindex 00000000..0b718586\n--- /dev/null\n+++ b/news/789.feature\n@@ -0,0 +1,2 @@\n+Add @querystring-search endpoint that returns the results of a search using a p.a.querystring query.\n+[sneridagh]\ndiff --git a/sphinx_build.log b/sphinx_build.log\nnew file mode 100644\nindex 00000000..15f464ce\n--- /dev/null\n+++ b/sphinx_build.log\n@@ -0,0 +1,114 @@\n+/Development/plone/plone.restapi/bin/sphinxPython /Development/plone/plone.restapi/bin/sphinx-build -b html -d /Development/plone/plone.restapi/docs/doctrees   /Development/plone/plone.restapi/docs/source /Development/plone/plone.restapi/docs/html\n+Running Sphinx v1.6.5\n+making output directory...\n+loading pickled environment... not yet created\n+building [mo]: targets for 0 po files that are out of date\n+building [html]: targets for 43 source files that are out of date\n+updating environment: 43 added, 0 changed, 0 removed\n+reading sources... [  2%] actions\n+reading sources... [  4%] authentication\n+reading sources... [  6%] batching\n+reading sources... [  9%] breadcrumbs\n+reading sources... [ 11%] comments\n+reading sources... [ 13%] components\n+reading sources... [ 16%] content\n+reading sources... [ 18%] content-negotiation\n+reading sources... [ 20%] contributing\n+reading sources... [ 23%] controlpanels\n+reading sources... [ 25%] conventions\n+reading sources... [ 27%] copymove\n+reading sources... [ 30%] customization\n+reading sources... [ 32%] email-notification\n+reading sources... [ 34%] email-send\n+reading sources... [ 37%] expansion\n+reading sources... [ 39%] exploring\n+reading sources... [ 41%] glossary\n+reading sources... [ 44%] groups\n+reading sources... [ 46%] history\n+reading sources... [ 48%] http-status-codes\n+reading sources... [ 51%] i18n\n+reading sources... [ 53%] index\n+reading sources... [ 55%] introduction\n+reading sources... [ 58%] locking\n+reading sources... [ 60%] navigation\n+reading sources... [ 62%] plone-content\n+reading sources... [ 65%] principals\n+reading sources... [ 67%] querystring\n+reading sources... [ 69%] registry\n+reading sources... [ 72%] roles\n+reading sources... [ 74%] searching\n+reading sources... [ 76%] serialization\n+reading sources... [ 79%] sharing\n+reading sources... [ 81%] tiles\n+reading sources... [ 83%] translations\n+reading sources... [ 86%] tusupload\n+reading sources... [ 88%] types\n+reading sources... [ 90%] types-schema\n+reading sources... [ 93%] upgrade-guide\n+reading sources... [ 95%] users\n+reading sources... [ 97%] vocabularies\n+reading sources... [100%] workflow\n+\n+looking for now-outdated files... none found\n+pickling environment... done\n+checking consistency... done\n+preparing documents... done\n+writing output... [  2%] actions\n+writing output... [  4%] authentication\n+writing output... [  6%] batching\n+writing output... [  9%] breadcrumbs\n+writing output... [ 11%] comments\n+writing output... [ 13%] components\n+writing output... [ 16%] content\n+writing output... [ 18%] content-negotiation\n+writing output... [ 20%] contributing\n+writing output... [ 23%] controlpanels\n+writing output... [ 25%] conventions\n+writing output... [ 27%] copymove\n+writing output... [ 30%] customization\n+writing output... [ 32%] email-notification\n+writing output... [ 34%] email-send\n+writing output... [ 37%] expansion\n+writing output... [ 39%] exploring\n+writing output... [ 41%] glossary\n+writing output... [ 44%] groups\n+writing output... [ 46%] history\n+writing output... [ 48%] http-status-codes\n+writing output... [ 51%] i18n\n+writing output... [ 53%] index\n+writing output... [ 55%] introduction\n+writing output... [ 58%] locking\n+writing output... [ 60%] navigation\n+writing output... [ 62%] plone-content\n+writing output... [ 65%] principals\n+writing output... [ 67%] querystring\n+writing output... [ 69%] registry\n+writing output... [ 72%] roles\n+writing output... [ 74%] searching\n+writing output... [ 76%] serialization\n+writing output... [ 79%] sharing\n+writing output... [ 81%] tiles\n+writing output... [ 83%] translations\n+writing output... [ 86%] tusupload\n+writing output... [ 88%] types\n+writing output... [ 90%] types-schema\n+writing output... [ 93%] upgrade-guide\n+writing output... [ 95%] users\n+writing output... [ 97%] vocabularies\n+writing output... [100%] workflow\n+\n+generating indices... genindex\n+writing additional pages... search\n+copying images... [ 20%] ./_static/img/postman_retain_headers.png\n+copying images... [ 40%] ./_static/img/postman_request.png\n+copying images... [ 60%] ./_static/img/postman_basic_auth.png\n+copying images... [ 80%] ./_static/img/postman_headers.png\n+copying images... [100%] ./_static/img/postman_response.png\n+\n+copying static files... done\n+copying extra files... done\n+dumping search index in English (code: en) ... done\n+dumping object inventory... done\n+build succeeded.\n+\n+Build finished. The HTML pages are in /Development/plone/plone.restapi/docs/html.\ndiff --git a/src/plone/restapi/batching.py b/src/plone/restapi/batching.py\nindex 9930c21b..46407c3b 100644\n--- a/src/plone/restapi/batching.py\n+++ b/src/plone/restapi/batching.py\n@@ -1,5 +1,6 @@\n # -*- coding: utf-8 -*-\n from plone.batching.batch import Batch\n+from plone.restapi.deserializer import json_body\n from six.moves.urllib.parse import parse_qsl\n from six.moves.urllib.parse import urlencode\n \n@@ -11,8 +12,8 @@ class HypermediaBatch(object):\n     def __init__(self, request, results):\n         self.request = request\n \n-        self.b_start = int(self.request.form.get("b_start", 0))\n-        self.b_size = int(self.request.form.get("b_size", DEFAULT_BATCH_SIZE))\n+        self.b_start = int(json_body(self.request).get(\'b_start\', False)) or int(self.request.form.get("b_start", 0))\n+        self.b_size = int(json_body(self.request).get(\'b_size\', False)) or int(self.request.form.get("b_size", DEFAULT_BATCH_SIZE))\n \n         self.batch = Batch(results, self.b_size, self.b_start)\n \ndiff --git a/src/plone/restapi/services/configure.zcml b/src/plone/restapi/services/configure.zcml\nindex 6ecd2c9d..83955132 100644\n--- a/src/plone/restapi/services/configure.zcml\n+++ b/src/plone/restapi/services/configure.zcml\n@@ -20,6 +20,7 @@\n   <include package=".locking" />\n   <include package=".principals"/>\n   <include package=".querystring"/>\n+  <include package=".querystringsearch"/>\n   <include package=".registry"/>\n   <include package=".roles"/>\n   <include package=".search"/>\ndiff --git a/src/plone/restapi/services/querystringsearch/__init__.py b/src/plone/restapi/services/querystringsearch/__init__.py\nnew file mode 100644\nindex 00000000..e69de29b\ndiff --git a/src/plone/restapi/services/querystringsearch/configure.zcml b/src/plone/restapi/services/querystringsearch/configure.zcml\nnew file mode 100644\nindex 00000000..ab195655\n--- /dev/null\n+++ b/src/plone/restapi/services/querystringsearch/configure.zcml\n@@ -0,0 +1,13 @@\n+<configure\n+    xmlns="http://namespaces.zope.org/zope"\n+    xmlns:plone="http://namespaces.plone.org/plone">\n+\n+  <plone:service\n+    method="POST"\n+    for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+    factory=".get.QuerystringSearchPost"\n+    name="@querystring-search"\n+    permission="zope2.View"\n+    />\n+\n+</configure>\ndiff --git a/src/plone/restapi/services/querystringsearch/get.py b/src/plone/restapi/services/querystringsearch/get.py\nnew file mode 100644\nindex 00000000..01aae2fe\n--- /dev/null\n+++ b/src/plone/restapi/services/querystringsearch/get.py\n@@ -0,0 +1,44 @@\n+# -*- coding: utf-8 -*-\n+from plone.restapi.deserializer import json_body\n+from plone.restapi.interfaces import ISerializeToJson\n+from plone.restapi.services import Service\n+from zope.component import getMultiAdapter\n+\n+\n+class QuerystringSearchPost(Service):\n+    """Returns the querystring search results given a p.a.querystring data.\n+    """\n+\n+    def reply(self):\n+        data = json_body(self.request)\n+        query = data.get("query", None)\n+        b_start = int(data.get("b_start", 0))\n+        b_size = int(data.get("b_size", 25))\n+        sort_on = data.get("sort_on", None)\n+        sort_order = data.get("sort_order", None)\n+        limit = int(data.get("limit", 1000))\n+        fullobjects = data.get("fullobjects", False)\n+\n+        if query is None:\n+            raise Exception("No query supplied")\n+\n+        if sort_order:\n+            sort_order = \'descending\' if sort_order else \'ascending\'\n+\n+        querybuilder = getMultiAdapter(\n+            (self.context, self.request), name="querybuilderresults"\n+        )\n+        results = querybuilder(\n+            query=query,\n+            brains=True,\n+            b_start=b_start,\n+            b_size=b_size,\n+            sort_on=sort_on,\n+            sort_order=sort_order,\n+            limit=limit,\n+        )\n+\n+        results = getMultiAdapter((results, self.request), ISerializeToJson)(\n+            fullobjects=fullobjects\n+        )\n+        return results\ndiff --git a/src/plone/restapi/tests/http-examples/querystringsearch_post.req b/src/plone/restapi/tests/http-examples/querystringsearch_post.req\nnew file mode 100644\nindex 00000000..04457d7e\n--- /dev/null\n+++ b/src/plone/restapi/tests/http-examples/querystringsearch_post.req\n@@ -0,0 +1,16 @@\n+POST /plone/@querystring-search HTTP/1.1\n+Accept: application/json\n+Authorization: Basic YWRtaW46c2VjcmV0\n+Content-Type: application/json\n+\n+{\n+    "query": [\n+        {\n+            "i": "portal_type",\n+            "o": "plone.app.querystring.operation.selection.any",\n+            "v": [\n+                "Document"\n+            ]\n+        }\n+    ]\n+}\n\\ No newline at end of file\ndiff --git a/src/plone/restapi/tests/http-examples/querystringsearch_post.resp b/src/plone/restapi/tests/http-examples/querystringsearch_post.resp\nnew file mode 100644\nindex 00000000..723a9ef3\n--- /dev/null\n+++ b/src/plone/restapi/tests/http-examples/querystringsearch_post.resp\n@@ -0,0 +1,23 @@\n+HTTP/1.1 200 OK\n+Content-Type: application/json\n+\n+{\n+  "@id": "http://localhost:55001/plone/@querystring-search", \n+  "items": [\n+    {\n+      "@id": "http://localhost:55001/plone/front-page", \n+      "@type": "Document", \n+      "description": "Congratulations! You have successfully installed Plone.", \n+      "review_state": "private", \n+      "title": "Welcome to Plone"\n+    }, \n+    {\n+      "@id": "http://localhost:55001/plone/testdocument", \n+      "@type": "Document", \n+      "description": "", \n+      "review_state": "private", \n+      "title": "Test Document"\n+    }\n+  ], \n+  "items_total": 2\n+}\n\\ No newline at end of file\ndiff --git a/src/plone/restapi/tests/test_documentation.py b/src/plone/restapi/tests/test_documentation.py\nindex 1c116702..1ff89a0a 100644\n--- a/src/plone/restapi/tests/test_documentation.py\n+++ b/src/plone/restapi/tests/test_documentation.py\n@@ -1297,6 +1297,27 @@ def test_querystring_get(self):\n         response = self.api_session.get(url)\n         save_request_and_response_for_docs("querystring_get", response)\n \n+    def test_querystringsearch_post(self):\n+        url = "/@querystring-search"\n+\n+        self.portal.invokeFactory("Document",\n+                                  "testdocument",\n+                                  title="Test Document")\n+        transaction.commit()\n+\n+        response = self.api_session.post(\n+            url,\n+            json={\n+                "query": [\n+                    {\n+                        "i": "portal_type",\n+                        "o": "plone.app.querystring.operation.selection.any",\n+                        "v": ["Document"],\n+                    }\n+                ]\n+            })\n+        save_request_and_response_for_docs("querystringsearch_post", response)\n+\n \n class TestDocumentationMessageTranslations(unittest.TestCase):\n \ndiff --git a/src/plone/restapi/tests/test_services_querystringsearch.py b/src/plone/restapi/tests/test_services_querystringsearch.py\nnew file mode 100644\nindex 00000000..0346b0a4\n--- /dev/null\n+++ b/src/plone/restapi/tests/test_services_querystringsearch.py\n@@ -0,0 +1,131 @@\n+# -*- coding: utf-8 -*-\n+from plone.app.testing import setRoles\n+from plone.app.testing import SITE_OWNER_NAME\n+from plone.app.testing import SITE_OWNER_PASSWORD\n+from plone.app.testing import TEST_USER_ID\n+from plone.restapi.testing import PLONE_RESTAPI_DX_FUNCTIONAL_TESTING\n+from plone.restapi.testing import RelativeSession\n+\n+import transaction\n+import unittest\n+\n+\n+class TestQuerystringSearchEndpoint(unittest.TestCase):\n+\n+    layer = PLONE_RESTAPI_DX_FUNCTIONAL_TESTING\n+\n+    def setUp(self):\n+        self.app = self.layer["app"]\n+        self.portal = self.layer["portal"]\n+        self.portal_url = self.portal.absolute_url()\n+        setRoles(self.portal, TEST_USER_ID, ["Manager"])\n+\n+        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session.headers.update({"Accept": "application/json"})\n+        self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n+\n+        self.portal.invokeFactory("Document", "testdocument", title="Test Document")\n+        self.doc = self.portal.testdocument\n+\n+        transaction.commit()\n+\n+    def tearDown(self):\n+        self.api_session.close()\n+\n+    def test_querystringsearch_basic(self):\n+        response = self.api_session.post(\n+            "/@querystring-search",\n+            json={\n+                "query": [\n+                    {\n+                        "i": "portal_type",\n+                        "o": "plone.app.querystring.operation.selection.is",\n+                        "v": ["Document"],\n+                    }\n+                ]\n+            },\n+        )\n+\n+        self.assertEqual(response.status_code, 200)\n+        self.assertIn("items", response.json())\n+        self.assertIn("items_total", response.json())\n+        self.assertEquals(response.json()["items_total"], 1)\n+        self.assertEquals(len(response.json()["items"]), 1)\n+        self.assertNotIn("effective", response.json()["items"][0])\n+\n+    def test_querystringsearch_fullobjects(self):\n+        response = self.api_session.post(\n+            "/@querystring-search",\n+            json={\n+                "query": [\n+                    {\n+                        "i": "portal_type",\n+                        "o": "plone.app.querystring.operation.selection.is",\n+                        "v": ["Document"],\n+                    }\n+                ],\n+                "fullobjects": True,\n+            },\n+        )\n+\n+        self.assertEqual(response.status_code, 200)\n+        self.assertIn("items", response.json())\n+        self.assertIn("items_total", response.json())\n+        self.assertIn("effective", response.json()["items"][0])\n+        self.assertEquals(response.json()["items_total"], 1)\n+        self.assertEquals(len(response.json()["items"]), 1)\n+\n+    def test_querystringsearch_complex(self):\n+\n+        for a in range(1, 10):\n+            self.portal.invokeFactory(\n+                "Document", "testdocument" + str(a), title="Test Document " + str(a)\n+            )\n+            self.doc = self.portal.testdocument\n+\n+        transaction.commit()\n+\n+        response = self.api_session.post(\n+            "/@querystring-search",\n+            json={\n+                "query": [\n+                    {\n+                        "i": "portal_type",\n+                        "o": "plone.app.querystring.operation.selection.is",\n+                        "v": ["Document"],\n+                    }\n+                ],\n+                "b_size": 5,\n+            },\n+        )\n+\n+        self.assertEqual(response.status_code, 200)\n+        self.assertIn("items", response.json())\n+        self.assertIn("items_total", response.json())\n+        self.assertEquals(response.json()["items_total"], 10)\n+        self.assertEquals(len(response.json()["items"]), 5)\n+        self.assertNotIn("effective", response.json()["items"][0])\n+        self.assertEquals(response.json()["items"][4]["title"], u"Test Document 4")\n+\n+        response = self.api_session.post(\n+            "/@querystring-search",\n+            json={\n+                "query": [\n+                    {\n+                        "i": "portal_type",\n+                        "o": "plone.app.querystring.operation.selection.is",\n+                        "v": ["Document"],\n+                    }\n+                ],\n+                "b_size": 5,\n+                "b_start": 5,\n+            },\n+        )\n+\n+        self.assertEqual(response.status_code, 200)\n+        self.assertIn("items", response.json())\n+        self.assertIn("items_total", response.json())\n+        self.assertEquals(response.json()["items_total"], 10)\n+        self.assertEquals(len(response.json()["items"]), 5)\n+        self.assertNotIn("effective", response.json()["items"][0])\n+        self.assertEquals(response.json()["items"][4]["title"], u"Test Document 9")\n'

