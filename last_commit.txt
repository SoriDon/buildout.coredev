Repository: mockup


Branch: refs/heads/master
Date: 2022-03-28T17:56:39-03:00
Author: Franco Pellegrini (frapell) <frapell@gmail.com>
Commit: https://github.com/plone/mockup/commit/aea3272ebbd6c0c832d29b7c8c126866d9e5747f

use .cloneDeep from lodash instead of .clone from underscore

Files changed:
M src/pat/structure/js/actionmenu.js

b'diff --git a/src/pat/structure/js/actionmenu.js b/src/pat/structure/js/actionmenu.js\nindex 794a499b8..1ffca4877 100644\n--- a/src/pat/structure/js/actionmenu.js\n+++ b/src/pat/structure/js/actionmenu.js\n@@ -1,4 +1,4 @@\n-import _ from "underscore";\n+import _ from "lodash";\n import _t from "../../../core/i18n-wrapper";\n \n const menuOptions = {\n@@ -93,7 +93,7 @@ const ActionMenu = function (menu) {\n     const model = menu.model.attributes;\n     const app = menu.app;\n \n-    const result = _.clone(menuOptions);\n+    const result = _.cloneDeep(menuOptions);\n     if (!(app.pasteAllowed() && model.is_folderish)) {\n         delete result.pasteItem;\n     }\n'

Repository: mockup


Branch: refs/heads/master
Date: 2022-03-28T17:59:03-03:00
Author: Franco Pellegrini (frapell) <frapell@gmail.com>
Commit: https://github.com/plone/mockup/commit/8f44b16d41063f82fda2c38e54c82a05f625a4b2

Use different cache keys whether icon should be returned as_node or not

Files changed:
M src/core/utils.js

b'diff --git a/src/core/utils.js b/src/core/utils.js\nindex 3263307c8..d36d7b0c8 100644\n--- a/src/core/utils.js\n+++ b/src/core/utils.js\n@@ -381,13 +381,14 @@ const resolveIcon = async function (name, as_node, css_class) {\n     // const dropdownIcon: await utils.resolveIcon(\'plone-settings\');\n     // if (name === \'plone.icon.plone-rearrange\'){debugger}\n     const iconLookupName = `plone.icon.${name}`;\n+    const cache_key = as_node ? iconLookupName + \'_as_node\' : iconLookupName;\n     // const cached_icon = iconCache.has(iconLookupName) ? iconCache.get(iconLookupName) :\n-    const cached_icon = iconCache.get(iconLookupName);\n+    const cached_icon = iconCache.get(cache_key);\n     if(cached_icon){\n-        console.log("use cached icon: ", name)\n+        console.log("use cached icon: ", cache_key)\n         return cached_icon;\n     }\n-    console.log("resolve icon: ", name)\n+    console.log("resolve icon: ", iconLookupName)\n     const baseUrl = $("body").attr("data-portal-url");\n     let icon = null;\n     if(baseUrl){\n@@ -425,7 +426,7 @@ const resolveIcon = async function (name, as_node, css_class) {\n     if (as_node && css_class) {\n         icon.classList.add(css_class);\n     }\n-    iconCache.set(iconLookupName, icon);\n+    iconCache.set(cache_key, icon);\n     return icon;\n };\n \n'

