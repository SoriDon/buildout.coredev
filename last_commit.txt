Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-01-19T15:11:48+01:00
Author: Víctor Fernández de Alba (sneridagh) <sneridagh@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/267daa4b452cd98826fe9cde92aac010d8015bdb

Add support for multilingual language independent fields in field serialization (#1317)

Files changed:
A news/1316.feature
M src/plone/restapi/tests/test_types.py
M src/plone/restapi/types/adapters.py
M src/plone/restapi/types/utils.py

b'diff --git a/news/1316.feature b/news/1316.feature\nnew file mode 100644\nindex 000000000..a1f2475f4\n--- /dev/null\n+++ b/news/1316.feature\n@@ -0,0 +1,2 @@\n+Add support for multilingual language independent fields in field serialization\n+[sneridagh]\ndiff --git a/src/plone/restapi/tests/test_types.py b/src/plone/restapi/tests/test_types.py\nindex 90f8cde7d..a19186ca0 100644\n--- a/src/plone/restapi/tests/test_types.py\n+++ b/src/plone/restapi/tests/test_types.py\n@@ -1,5 +1,6 @@\n from datetime import date\n from decimal import Decimal\n+from plone.app.multilingual.dx import directives\n from plone.app.textfield import RichText\n from plone.autoform import directives as form\n from plone.dexterity.fti import DexterityFTI\n@@ -53,6 +54,11 @@ class ITaggedValuesSchema(model.Schema):\n     )\n     form.widget(not_parametrized_widget_field=TextWidget)\n \n+    directives.languageindependent("test_language_independent_field")\n+    test_language_independent_field = schema.TextLine(\n+        required=False,\n+    )\n+\n \n class TestJsonSchemaUtils(TestCase):\n \n@@ -185,6 +191,28 @@ def test_resolve_callable_widget_params(self):\n             ),\n         )\n \n+    def test_get_jsonschema_with_language_independent_fields(self):\n+        ttool = getToolByName(self.portal, "portal_types")\n+        jsonschema = get_jsonschema_for_fti(\n+            ttool["TaggedDocument"], self.portal, self.request\n+        )\n+\n+        self.assertIn(\n+            "multilingual_options",\n+            jsonschema["properties"]["test_language_independent_field"],\n+        )\n+        self.assertIn(\n+            "language_independent",\n+            jsonschema["properties"]["test_language_independent_field"][\n+                "multilingual_options"\n+            ],\n+        )\n+        self.assertTrue(\n+            jsonschema["properties"]["test_language_independent_field"][\n+                "multilingual_options"\n+            ]\n+        )\n+\n \n class TestJsonSchemaProviders(TestCase):\n \ndiff --git a/src/plone/restapi/types/adapters.py b/src/plone/restapi/types/adapters.py\nindex 25f8ab759..5bbb9dd8e 100644\n--- a/src/plone/restapi/types/adapters.py\n+++ b/src/plone/restapi/types/adapters.py\n@@ -7,6 +7,7 @@\n from plone.restapi.types.utils import get_source_url\n from plone.restapi.types.utils import get_vocabulary_url\n from plone.restapi.types.utils import get_widget_params\n+from plone.restapi.types.utils import get_multilingual_directives\n from plone.schema import IEmail\n from plone.schema import IJSONField\n from z3c.formwidget.query.interfaces import IQuerySource\n@@ -83,6 +84,10 @@ def get_schema(self):\n         if widget_options:\n             schema["widgetOptions"] = widget_options\n \n+        multilingual_options = self.get_multilingual_directives()\n+        if multilingual_options:\n+            schema["multilingual_options"] = multilingual_options\n+\n         if self.field.default is not None:\n             schema["default"] = self.field.default\n \n@@ -108,6 +113,11 @@ def get_widget_params(self):\n             }\n         return params\n \n+    def get_multilingual_directives(self):\n+        all_params = get_multilingual_directives([self.field.interface])\n+        params = all_params.get(self.field.getName(), {})\n+        return params\n+\n \n @adapter(IBytes, Interface, Interface)\n @implementer(IJsonSchemaProvider)\ndiff --git a/src/plone/restapi/types/utils.py b/src/plone/restapi/types/utils.py\nindex bb50a372f..756fe2d38 100644\n--- a/src/plone/restapi/types/utils.py\n+++ b/src/plone/restapi/types/utils.py\n@@ -40,6 +40,8 @@\n from zope.i18n import translate\n from zope.interface import implementer\n from zope.schema.interfaces import IVocabularyFactory\n+from plone.app.multilingual.dx.interfaces import MULTILINGUAL_KEY\n+from plone.supermodel.utils import mergedTaggedValueList\n \n try:\n     # Plone 5.1+\n@@ -196,6 +198,20 @@ def get_widget_params(schemas):\n     return params\n \n \n+def get_multilingual_directives(schemas):\n+    params = {}\n+    for schema in schemas:\n+        if not schema:\n+            continue\n+        tagged_values = mergedTaggedValueList(schema, MULTILINGUAL_KEY)\n+        result = {field_name: value for _, field_name, value in tagged_values}\n+\n+        for field_name, value in result.items():\n+            params[field_name] = {}\n+            params[field_name]["language_independent"] = value\n+    return params\n+\n+\n def get_jsonschema_for_fti(fti, context, request, excluded_fields=None):\n     """Build a complete JSON schema for the given FTI."""\n     if excluded_fields is None:\n'

