Repository: plone.restapi


Branch: refs/heads/master
Date: 2019-06-12T16:41:22+02:00
Author: Joni Orponen (Rotonen) <j.orponen@4teamwork.ch>
Commit: https://github.com/plone/plone.restapi/commit/d31c295193be549aa32ac7e707d1d0d31bea3bc0

Handle terms without titles in the vocabulary serializer.

Files changed:
A news/742.bugfix.1
A news/742.bugfix.2
M src/plone/restapi/serializer/vocabularies.py
M src/plone/restapi/tests/test_services_vocabularies.py

b'diff --git a/news/742.bugfix.1 b/news/742.bugfix.1\nnew file mode 100644\nindex 00000000..7e91aa14\n--- /dev/null\n+++ b/news/742.bugfix.1\n@@ -0,0 +1,2 @@\n+Handle ``None`` as a vocabulary term title in the vocabulary serializer.\n+[Rotonen]\ndiff --git a/news/742.bugfix.2 b/news/742.bugfix.2\nnew file mode 100644\nindex 00000000..dc0d812b\n--- /dev/null\n+++ b/news/742.bugfix.2\n@@ -0,0 +1,2 @@\n+Handle a term not having a title attribute in the vocabulary serializer.\n+[Rotonen]\ndiff --git a/src/plone/restapi/serializer/vocabularies.py b/src/plone/restapi/serializer/vocabularies.py\nindex b9240f01..050c56ce 100644\n--- a/src/plone/restapi/serializer/vocabularies.py\n+++ b/src/plone/restapi/serializer/vocabularies.py\n@@ -39,7 +39,8 @@ def __call__(self, vocabulary_id):\n                     continue\n                 terms.append(term)\n             else:\n-                if title.lower() not in term.title.lower():\n+                term_title = getattr(term, "title", None) or ""\n+                if title.lower() not in term_title.lower():\n                     continue\n                 terms.append(term)\n \ndiff --git a/src/plone/restapi/tests/test_services_vocabularies.py b/src/plone/restapi/tests/test_services_vocabularies.py\nindex 8e7d0391..db5711f2 100644\n--- a/src/plone/restapi/tests/test_services_vocabularies.py\n+++ b/src/plone/restapi/tests/test_services_vocabularies.py\n@@ -8,6 +8,7 @@\n from plone.restapi.testing import RelativeSession\n from zope.component import getGlobalSiteManager\n from zope.component import provideUtility\n+from zope.componentvocabulary.vocabulary import UtilityTerm\n from zope.schema.interfaces import IVocabularyFactory\n from zope.schema.vocabulary import SimpleVocabulary\n from zope.schema.vocabulary import SimpleTerm\n@@ -18,7 +19,9 @@\n \n TEST_TERM_1 = SimpleTerm(42, token="token1", title=u"Title 1")\n TEST_TERM_2 = SimpleTerm(43, token="token2", title=u"Title 2")\n-TEST_VOCABULARY = SimpleVocabulary([TEST_TERM_1, TEST_TERM_2])\n+TEST_TERM_3 = SimpleTerm(44, token="token3")\n+TEST_TERM_4 = UtilityTerm(45, "token4")\n+TEST_VOCABULARY = SimpleVocabulary([TEST_TERM_1, TEST_TERM_2, TEST_TERM_3, TEST_TERM_4])\n \n \n def test_vocabulary_factory(context):\n@@ -70,8 +73,10 @@ def test_get_vocabulary(self):\n                 u"items": [\n                     {u"title": u"Title 1", u"token": u"token1"},\n                     {u"title": u"Title 2", u"token": u"token2"},\n+                    {u"title": u"token3", u"token": u"token3"},\n+                    {u"title": u"token4", u"token": u"token4"},\n                 ],\n-                u"items_total": 2,\n+                u"items_total": 4,\n             },\n         )\n \n@@ -93,12 +98,12 @@ def test_get_vocabulary_batched(self):\n                     u"first": self.portal_url\n                     + u"/@vocabularies/plone.restapi.tests.test_vocabulary?b_start=0&b_size=1",  # noqa\n                     u"last": self.portal_url\n-                    + u"/@vocabularies/plone.restapi.tests.test_vocabulary?b_start=1&b_size=1",  # noqa\n+                    + u"/@vocabularies/plone.restapi.tests.test_vocabulary?b_start=3&b_size=1",  # noqa\n                     u"next": self.portal_url\n                     + u"/@vocabularies/plone.restapi.tests.test_vocabulary?b_start=1&b_size=1",  # noqa\n                 },\n                 u"items": [{u"title": u"Title 1", u"token": u"token1"}],\n-                u"items_total": 2,\n+                u"items_total": 4,\n             },\n         )\n \n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2019-06-12T16:41:31+02:00
Author: Joni Orponen (Rotonen) <j.orponen@4teamwork.ch>
Commit: https://github.com/plone/plone.restapi/commit/fbf2233a4d6557d26b91e23b82636dad90be255d

Handle serializing non-ASCII title attributes on terms in vocabularies.

Files changed:
A news/743.bugfix
M src/plone/restapi/serializer/vocabularies.py
M src/plone/restapi/tests/test_services_vocabularies.py

b'diff --git a/news/743.bugfix b/news/743.bugfix\nnew file mode 100644\nindex 00000000..82efad2d\n--- /dev/null\n+++ b/news/743.bugfix\n@@ -0,0 +1,3 @@\n+Handle a term having a non-ASCII ``str`` title attribute in the vocabulary\n+serializer.\n+[Rotonen]\ndiff --git a/src/plone/restapi/serializer/vocabularies.py b/src/plone/restapi/serializer/vocabularies.py\nindex 050c56ce..9eedb31a 100644\n--- a/src/plone/restapi/serializer/vocabularies.py\n+++ b/src/plone/restapi/serializer/vocabularies.py\n@@ -10,6 +10,8 @@\n from zope.schema.interfaces import ITokenizedTerm\n from zope.schema.interfaces import IVocabulary\n \n+import six\n+\n \n @implementer(ISerializeToJson)\n @adapter(IVocabulary, Interface)\n@@ -75,4 +77,6 @@ def __call__(self):\n         term = self.context\n         token = term.token\n         title = term.title if ITitledTokenizedTerm.providedBy(term) else token\n+        if isinstance(title, six.binary_type):\n+            title = title.decode("UTF-8")\n         return {"token": token, "title": translate(title, context=self.request)}\ndiff --git a/src/plone/restapi/tests/test_services_vocabularies.py b/src/plone/restapi/tests/test_services_vocabularies.py\nindex db5711f2..3110f70f 100644\n--- a/src/plone/restapi/tests/test_services_vocabularies.py\n+++ b/src/plone/restapi/tests/test_services_vocabularies.py\n@@ -13,6 +13,7 @@\n from zope.schema.vocabulary import SimpleVocabulary\n from zope.schema.vocabulary import SimpleTerm\n \n+import six\n import transaction\n import unittest\n \n@@ -21,7 +22,16 @@\n TEST_TERM_2 = SimpleTerm(43, token="token2", title=u"Title 2")\n TEST_TERM_3 = SimpleTerm(44, token="token3")\n TEST_TERM_4 = UtilityTerm(45, "token4")\n-TEST_VOCABULARY = SimpleVocabulary([TEST_TERM_1, TEST_TERM_2, TEST_TERM_3, TEST_TERM_4])\n+if six.PY2:\n+    TEST_TERM_5 = SimpleTerm(46, token="token5", title=u"T\\xf6tle 5")\n+    TEST_TERM_6 = SimpleTerm(47, token="token6", title="T\\xc3\\xb6tle 6")\n+else:\n+    TEST_TERM_5 = SimpleTerm(46, token="token5", title="T\xc3\xb6tle 5")\n+    TEST_TERM_6 = SimpleTerm(47, token="token6", title="T\xc3\xb6tle 6")\n+\n+TEST_VOCABULARY = SimpleVocabulary(\n+    [TEST_TERM_1, TEST_TERM_2, TEST_TERM_3, TEST_TERM_4, TEST_TERM_5, TEST_TERM_6]\n+)\n \n \n def test_vocabulary_factory(context):\n@@ -75,8 +85,10 @@ def test_get_vocabulary(self):\n                     {u"title": u"Title 2", u"token": u"token2"},\n                     {u"title": u"token3", u"token": u"token3"},\n                     {u"title": u"token4", u"token": u"token4"},\n+                    {u"title": u"T\\xf6tle 5", u"token": u"token5"},\n+                    {u"title": u"T\\xf6tle 6", u"token": u"token6"},\n                 ],\n-                u"items_total": 4,\n+                u"items_total": 6,\n             },\n         )\n \n@@ -98,12 +110,12 @@ def test_get_vocabulary_batched(self):\n                     u"first": self.portal_url\n                     + u"/@vocabularies/plone.restapi.tests.test_vocabulary?b_start=0&b_size=1",  # noqa\n                     u"last": self.portal_url\n-                    + u"/@vocabularies/plone.restapi.tests.test_vocabulary?b_start=3&b_size=1",  # noqa\n+                    + u"/@vocabularies/plone.restapi.tests.test_vocabulary?b_start=5&b_size=1",  # noqa\n                     u"next": self.portal_url\n                     + u"/@vocabularies/plone.restapi.tests.test_vocabulary?b_start=1&b_size=1",  # noqa\n                 },\n                 u"items": [{u"title": u"Title 1", u"token": u"token1"}],\n-                u"items_total": 4,\n+                u"items_total": 6,\n             },\n         )\n \n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2019-06-13T11:01:07+02:00
Author: Joni Orponen (Rotonen) <Rotonen@users.noreply.github.com>
Commit: https://github.com/plone/plone.restapi/commit/d90c181c01d1978065282124a798b1d348a2a45c

Merge pull request #744 from plone/jo-fix-vocabulary-serializer

Robustify the vocabularies serializer

Files changed:
A news/742.bugfix.1
A news/742.bugfix.2
A news/743.bugfix
M src/plone/restapi/serializer/vocabularies.py
M src/plone/restapi/tests/test_services_vocabularies.py

b'diff --git a/news/742.bugfix.1 b/news/742.bugfix.1\nnew file mode 100644\nindex 00000000..7e91aa14\n--- /dev/null\n+++ b/news/742.bugfix.1\n@@ -0,0 +1,2 @@\n+Handle ``None`` as a vocabulary term title in the vocabulary serializer.\n+[Rotonen]\ndiff --git a/news/742.bugfix.2 b/news/742.bugfix.2\nnew file mode 100644\nindex 00000000..dc0d812b\n--- /dev/null\n+++ b/news/742.bugfix.2\n@@ -0,0 +1,2 @@\n+Handle a term not having a title attribute in the vocabulary serializer.\n+[Rotonen]\ndiff --git a/news/743.bugfix b/news/743.bugfix\nnew file mode 100644\nindex 00000000..82efad2d\n--- /dev/null\n+++ b/news/743.bugfix\n@@ -0,0 +1,3 @@\n+Handle a term having a non-ASCII ``str`` title attribute in the vocabulary\n+serializer.\n+[Rotonen]\ndiff --git a/src/plone/restapi/serializer/vocabularies.py b/src/plone/restapi/serializer/vocabularies.py\nindex b9240f01..9eedb31a 100644\n--- a/src/plone/restapi/serializer/vocabularies.py\n+++ b/src/plone/restapi/serializer/vocabularies.py\n@@ -10,6 +10,8 @@\n from zope.schema.interfaces import ITokenizedTerm\n from zope.schema.interfaces import IVocabulary\n \n+import six\n+\n \n @implementer(ISerializeToJson)\n @adapter(IVocabulary, Interface)\n@@ -39,7 +41,8 @@ def __call__(self, vocabulary_id):\n                     continue\n                 terms.append(term)\n             else:\n-                if title.lower() not in term.title.lower():\n+                term_title = getattr(term, "title", None) or ""\n+                if title.lower() not in term_title.lower():\n                     continue\n                 terms.append(term)\n \n@@ -74,4 +77,6 @@ def __call__(self):\n         term = self.context\n         token = term.token\n         title = term.title if ITitledTokenizedTerm.providedBy(term) else token\n+        if isinstance(title, six.binary_type):\n+            title = title.decode("UTF-8")\n         return {"token": token, "title": translate(title, context=self.request)}\ndiff --git a/src/plone/restapi/tests/test_services_vocabularies.py b/src/plone/restapi/tests/test_services_vocabularies.py\nindex 8e7d0391..3110f70f 100644\n--- a/src/plone/restapi/tests/test_services_vocabularies.py\n+++ b/src/plone/restapi/tests/test_services_vocabularies.py\n@@ -8,17 +8,30 @@\n from plone.restapi.testing import RelativeSession\n from zope.component import getGlobalSiteManager\n from zope.component import provideUtility\n+from zope.componentvocabulary.vocabulary import UtilityTerm\n from zope.schema.interfaces import IVocabularyFactory\n from zope.schema.vocabulary import SimpleVocabulary\n from zope.schema.vocabulary import SimpleTerm\n \n+import six\n import transaction\n import unittest\n \n \n TEST_TERM_1 = SimpleTerm(42, token="token1", title=u"Title 1")\n TEST_TERM_2 = SimpleTerm(43, token="token2", title=u"Title 2")\n-TEST_VOCABULARY = SimpleVocabulary([TEST_TERM_1, TEST_TERM_2])\n+TEST_TERM_3 = SimpleTerm(44, token="token3")\n+TEST_TERM_4 = UtilityTerm(45, "token4")\n+if six.PY2:\n+    TEST_TERM_5 = SimpleTerm(46, token="token5", title=u"T\\xf6tle 5")\n+    TEST_TERM_6 = SimpleTerm(47, token="token6", title="T\\xc3\\xb6tle 6")\n+else:\n+    TEST_TERM_5 = SimpleTerm(46, token="token5", title="T\xc3\xb6tle 5")\n+    TEST_TERM_6 = SimpleTerm(47, token="token6", title="T\xc3\xb6tle 6")\n+\n+TEST_VOCABULARY = SimpleVocabulary(\n+    [TEST_TERM_1, TEST_TERM_2, TEST_TERM_3, TEST_TERM_4, TEST_TERM_5, TEST_TERM_6]\n+)\n \n \n def test_vocabulary_factory(context):\n@@ -70,8 +83,12 @@ def test_get_vocabulary(self):\n                 u"items": [\n                     {u"title": u"Title 1", u"token": u"token1"},\n                     {u"title": u"Title 2", u"token": u"token2"},\n+                    {u"title": u"token3", u"token": u"token3"},\n+                    {u"title": u"token4", u"token": u"token4"},\n+                    {u"title": u"T\\xf6tle 5", u"token": u"token5"},\n+                    {u"title": u"T\\xf6tle 6", u"token": u"token6"},\n                 ],\n-                u"items_total": 2,\n+                u"items_total": 6,\n             },\n         )\n \n@@ -93,12 +110,12 @@ def test_get_vocabulary_batched(self):\n                     u"first": self.portal_url\n                     + u"/@vocabularies/plone.restapi.tests.test_vocabulary?b_start=0&b_size=1",  # noqa\n                     u"last": self.portal_url\n-                    + u"/@vocabularies/plone.restapi.tests.test_vocabulary?b_start=1&b_size=1",  # noqa\n+                    + u"/@vocabularies/plone.restapi.tests.test_vocabulary?b_start=5&b_size=1",  # noqa\n                     u"next": self.portal_url\n                     + u"/@vocabularies/plone.restapi.tests.test_vocabulary?b_start=1&b_size=1",  # noqa\n                 },\n                 u"items": [{u"title": u"Title 1", u"token": u"token1"}],\n-                u"items_total": 2,\n+                u"items_total": 6,\n             },\n         )\n \n'

