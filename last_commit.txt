Repository: Products.ATContentTypes


Branch: refs/heads/master
Date: 2017-10-25T09:04:50+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.ATContentTypes/commit/06c80e8338f6e857a7426e8a7049cd357a2cf875

Fix doctests to adapt to changes in http-headers.

Files changed:
M CHANGES.rst
M Products/ATContentTypes/tests/browser_collection_views.txt
M Products/ATContentTypes/tests/http_access.txt

diff --git a/CHANGES.rst b/CHANGES.rst
index b71b469a..615768db 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,19 +14,21 @@ New features:
 
 Bug fixes:
 
-- Zope4 compatibility: 
-   
+- Zope4 compatibility:
+
   - Do not call views in TAL.
 
   - Fix checkPermission call (it was acquired from portal_membership until CMF 2.3).
 
   [davisagli, pbauer]
-  
+
 - Added verbosity to the multiple GS profiles popping up.
   Mark all as ``old`` and ``backward compatibility``.
   This hopefully reduces the error rate in site setup.
   [jensens]
 
+- Fix doctests to adapt to changes in http-headers.
+  [pbauer]
 
 2.3.6 (2017-06-26)
 ------------------
diff --git a/Products/ATContentTypes/tests/browser_collection_views.txt b/Products/ATContentTypes/tests/browser_collection_views.txt
index 9fd0e9fd..46be5b69 100644
--- a/Products/ATContentTypes/tests/browser_collection_views.txt
+++ b/Products/ATContentTypes/tests/browser_collection_views.txt
@@ -1,8 +1,8 @@
 Collection (Topic) views
 ------------------------
 
-Ensure Title, description and text are actually shown at the various views for 
-a Collection - http://dev.plone.org/plone/ticket/10226: 
+Ensure Title, description and text are actually shown at the various views for
+a Collection - http://dev.plone.org/plone/ticket/10226:
 
 atct_album_view (Thumbnail view)
 atct_topic_view (Collection, the default view)
@@ -15,7 +15,7 @@ First create a folder and a demo collection:
     >>> setRoles(portal, TEST_USER_ID, ['Manager'])
     >>> folder = portal[portal.invokeFactory('Folder', 'folder')]
     >>> folder.setTitle('Folder title')
-    >>> folder.setDescription('Folder description')    
+    >>> folder.setDescription('Folder description')
     >>> collection = folder[folder.invokeFactory('Topic', 'collection')]
     >>> collection_title = 'Title. Lorem ipsum dolor sit amet'
     >>> collection.setTitle(collection_title)
@@ -32,6 +32,7 @@ Now let's login and visit the collection in the test browser:
     >>> from plone.app.testing import TEST_USER_NAME, TEST_USER_PASSWORD
 
     >>> browser = Browser(layer['app'])
+    >>> browser.handleErrors = False
     >>> browser.open('http://nohost/plone/login_form')
     >>> browser.getControl('Login Name').value = TEST_USER_NAME
     >>> browser.getControl('Password').value = TEST_USER_PASSWORD
diff --git a/Products/ATContentTypes/tests/http_access.txt b/Products/ATContentTypes/tests/http_access.txt
index d9c1790e..df7379d9 100644
--- a/Products/ATContentTypes/tests/http_access.txt
+++ b/Products/ATContentTypes/tests/http_access.txt
@@ -248,13 +248,10 @@ ATImage
   ... Authorization: Basic %s:%s
   ... """ % (imgpath, user_name, user_password))
   HTTP/1.1 200 OK
-  Accept-Ranges: none
-  Content-Length: 105
-  Content-Type: image/gif
-  Etag: ts...
-  Last-Modified: ...
   ...
-  <BLANKLINE>
+  Etag: ts...
+  Content-Type: image/gif
+  Content-Length: 105
 
 HTTP Range request
 ==================
@@ -275,12 +272,11 @@ HTTP Range request
   ... Range: bytes=0-4
   ... """ % (imgpath, user_name, user_password))
   HTTP/1.1 206 Partial Content
-  Accept-Ranges: bytes
-  Content-Disposition: inline; filename="test-image"
+  ...
   Content-Length: 5
-  Content-Range: bytes 0-4/105
+  Content-Disposition: inline; filename="test-image"
+  ...
   Content-Type: image/gif
-  Last-Modified: ...
   <BLANKLINE>
   GIF87
 
@@ -295,13 +291,15 @@ HTTP Range request
   ... Range: bytes=0-4
   ... """ % (imgpath, user_name, user_password, rfc1123_date(past)))
   HTTP/1.1 200 OK
-  Accept-Ranges: bytes
-  Content-Disposition: inline; filename="test-image"
+  ...
   Content-Length: 105
-  Content-Type: image/gif...
+  Content-Disposition: inline; filename="test-image"
+  Accept-Ranges: bytes
   ...
+  Content-Type: image/gif
   <BLANKLINE>
   GIF87...
+  ...
 
   It can also contain an etag. Etags are starting with ts. In order to change
   the etag I'm altering the title. update() calls reindexObject() which calls
@@ -319,13 +317,10 @@ HTTP Range request
   ... Range: bytes=0-4
   ... """ % (imgpath, user_name, user_password, etag))
   HTTP/1.1 200 OK
-  Accept-Ranges: bytes
-  Content-Disposition: inline; filename="test-image"
-  Content-Length: 105
-  Content-Type: image/gif...
   ...
   <BLANKLINE>
   GIF87...
+  ...
 
 
 HTTP If modified since
@@ -343,10 +338,11 @@ HTTP If modified since
   ... If-Modified-Since: %s
   ... """ % (imgpath, user_name, user_password, rfc1123_date(future)))
   HTTP/1.1 304 Not Modified
+  ...
   Accept-Ranges: bytes
+  Content-Type: image/gif
+  X-Frame-Options: SAMEORIGIN
   Content-Length: 0
-  Content-Type: image/gif...
-  ...
 
   The image wasn't there in the past. If modified since returns the
   image with a response code of 200.
@@ -357,12 +353,13 @@ HTTP If modified since
   ... If-Modified-Since: %s
   ... """ % (imgpath, user_name, user_password, rfc1123_date(past)))
   HTTP/1.1 200 OK
-  Accept-Ranges: bytes
-  Content-Disposition: inline; filename="test-image"
+  ...
   Content-Length: 105
-  Content-Type: image/gif...
+  Content-Disposition: inline; filename="test-image"
+  Accept-Ranges: bytes
   ...
+  Content-Type: image/gif...
   <BLANKLINE>
-  GIF87...
+  GIF87a...
 
   >>> AppZapper().clear()


