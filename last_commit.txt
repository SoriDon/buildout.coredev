Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2018-10-03T12:21:23+02:00
Author: Thomas Lotze (tlotze) <thomas@thomas-lotze.net>
Commit: https://github.com/plone/Products.CMFPlone/commit/1581a56987822ca0fbd1242a766be0475e421d9c

re #1801: Removed enableHTTPCompression.py skin script.

Files changed:
M CHANGES.rst
D Products/CMFPlone/skins/plone_scripts/enableHTTPCompression.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex b0194199e..957e63cdf 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -16,6 +16,8 @@ Breaking changes:\n   [jensens]\n - Removed getObjectsFromPathList.py skin script. #1801\n   [reinhardt]\n+- Removed enableHTTPCompression.py skin script. #1801\n+  [tlotze]\n \n New features:\n \ndiff --git a/Products/CMFPlone/skins/plone_scripts/enableHTTPCompression.py b/Products/CMFPlone/skins/plone_scripts/enableHTTPCompression.py\ndeleted file mode 100644\nindex d53764e63..000000000\n--- a/Products/CMFPlone/skins/plone_scripts/enableHTTPCompression.py\n+++ /dev/null\n@@ -1,25 +0,0 @@\n-## Script (Python) "enableHTTPCompression"\n-##bind container=container\n-##bind context=context\n-##bind namespace=\n-##bind script=script\n-##bind subpath=traverse_subpath\n-##parameters=request=None, force=0, debug=0, enable=0\n-##title=Enable zlib based HTTP compression\n-\n-# force: force http compression even if the browser doesn\'t send an accept\n-# debug: return compression state (0: no, 1: yes, 2: force)\n-\n-if not enable:\n-    if debug:\n-        return \'<!-- compression status: disabled -->\'\n-    else:\n-        return\n-\n-if request is None:\n-    request = context.REQUEST\n-\n-result = request.RESPONSE.enableHTTPCompression(REQUEST=request, force=force)\n-\n-if debug:\n-    return \'<!-- compression status: %s -->\' % result\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2018-10-04T13:48:23+02:00
Author: Manuel Reinhardt (reinhardt) <reinhardt@syslab.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/bad29fa7d2fbb9cb81acd91681fb4e3cc14643e0

Merge branch 'master' into 1801-remove-enableHTTPCompression

Files changed:
M CHANGES.rst
M Products/CMFPlone/static/patterns/toolbar/src/toolbar.js
D Products/CMFPlone/skins/plone_scripts/setAuthCookie.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 957e63cdf..f3ce4407c 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -14,11 +14,15 @@ Breaking changes:\n   Third party code need either to depend on plone.app.controlpanel 4.0,\n   which is a backward compatibilit package only, or also update to not depend on it anymore.\n   [jensens]\n+\n - Removed getObjectsFromPathList.py skin script. #1801\n   [reinhardt]\n - Removed enableHTTPCompression.py skin script. #1801\n   [tlotze]\n \n+- Removed setAuthCookie.py skin script. #1801\n+  [tlotze]\n+\n New features:\n \n - Factored out human_readable_size method for replacing getObjSize.py. #1801\n@@ -47,6 +51,9 @@ New features:\n \n Bug fixes:\n \n+- Fix toolbar menu on mobile #2333.\n+  [tmassman]\n+\n - Removed the ``raiseUnauthorized`` skin script.\n   If you use this, please do permission checking in your own Python code instead (likely in a browser view).\n   Refs `issue 1801 <https://github.com/plone/Products.CMFPlone/issues/1801>`_.\n@@ -95,6 +102,7 @@ Bug fixes:\n - Remove ``plone-generate-gruntfile`` (it is all available through ``plone-compile-resources``).\n   [jensens]\n \n+\n New Features:\n \n - Update to latest mockup\ndiff --git a/Products/CMFPlone/skins/plone_scripts/setAuthCookie.py b/Products/CMFPlone/skins/plone_scripts/setAuthCookie.py\ndeleted file mode 100644\nindex 02a3a93af..000000000\n--- a/Products/CMFPlone/skins/plone_scripts/setAuthCookie.py\n+++ /dev/null\n@@ -1,24 +0,0 @@\n-## Script (Python) "setAuthCookie"\n-##title=Set Authentication Cookie\n-##parameters=resp, cookie_name, cookie_value\n-\n-try:\n-    length = context.portal_registry[\'plone.auth_cookie_length\']\n-except AttributeError:\n-    length = 0\n-\n-try:\n-    length = int(length)\n-except ValueError:\n-    length = 0\n-\n-cookie_path = \'/\'\n-if length:\n-    expires = (DateTime() + length).toZone(\'GMT\').rfc822()\n-    resp.setCookie(\n-        cookie_name,\n-        cookie_value,\n-        path=cookie_path,\n-        expires=expires)\n-else:\n-    resp.setCookie(cookie_name, cookie_value, path=cookie_path)\ndiff --git a/Products/CMFPlone/static/patterns/toolbar/src/toolbar.js b/Products/CMFPlone/static/patterns/toolbar/src/toolbar.js\nindex fb29ec552..f17049678 100644\n--- a/Products/CMFPlone/static/patterns/toolbar/src/toolbar.js\n+++ b/Products/CMFPlone/static/patterns/toolbar/src/toolbar.js\n@@ -32,11 +32,11 @@ define([\n       desktop_width: \'768px\'\n     },\n     pxToInt: function(px) {\n-      return parseInt(this.options.desktop_width.split(\'px\')[0], 10);\n+      return parseInt(px.split(\'px\')[0], 10);\n     },\n     setupMobile: function() {\n       var that = this;\n-      that.$container.css(\'right\', \'-\' + this.options.toolbar_width);\n+      that.$container.css(\'right\', \'-\' + that.options.toolbar_width);\n       // make sure we are in expanded mode\n       $(\'body\').addClass(that.options.classNames.leftExpanded);\n       $(\'body\').addClass(that.options.classNames.expanded);\n@@ -46,9 +46,9 @@ define([\n       $(\'body\').removeClass(that.options.classNames.topDefault);\n       $(\'body\').removeClass(that.options.classNames.default);\n       $(\'.\' + that.options.classNames.logo, that.$container).off(\'click\').on(\'click\', function() {\n-        var $el = $(this);\n+        var $el = $(that.$el);\n         if ($el.hasClass(\'open\')){\n-          that.$container.css(\'right\', \'-\' + this.options.toolbar_width);\n+          that.$container.css(\'right\', \'-\' + that.options.toolbar_width);\n           $(\'html\').css(\'margin-left\', \'0\');\n           $(\'html\').css(\'margin-right\', \'0\');\n           $el.removeClass(\'open\');\n@@ -56,8 +56,8 @@ define([\n         } else {\n           that.$container.css(\'right\', \'0\');\n           $el.addClass(\'open\');\n-          $(\'html\').css(\'margin-left\', \'-\' + this.options.toolbar_width);\n-          $( \'html\' ).css(\'margin-right\', this.options.toolbar_width);\n+          $(\'html\').css(\'margin-left\', \'-\' + that.options.toolbar_width);\n+          $( \'html\' ).css(\'margin-right\', that.options.toolbar_width);\n         }\n       });\n       // Remove desktop event binding\n@@ -69,14 +69,14 @@ define([\n         var $el = $(this).parent();\n         if ($el.hasClass(that.options.classNames.active)) {\n           that.$container.css(\'right\', \'0\');\n-          $(\'html\').css(\'margin-left\', \'-\' + this.options.toolbar_width);\n-          $(\'html\').css(\'margin-right\', this.options.toolbar_width);\n+          $(\'html\').css(\'margin-left\', \'-\' + that.options.toolbar_width);\n+          $(\'html\').css(\'margin-right\', that.options.toolbar_width);\n           $(\'nav li\', that.$container).removeClass(that.options.classNames.active);\n         } else {\n           $(\'nav li\', that.$container).removeClass(that.options.classNames.active);\n           $el.addClass(that.options.classNames.active);\n-          that.$container.css(\'right\', this.options.submenu_width);\n-          var margin = this.pxToInt(this.options.toolbar_width) + this.pxToInt(this.options.submenu_width);\n+          that.$container.css(\'right\', that.options.submenu_width);\n+          var margin = that.pxToInt(that.options.toolbar_width) + that.pxToInt(that.options.submenu_width);\n           $(\'html\').css(\'margin-left\', \'-\' + margin + \'px\' );\n           $(\'html\').css(\'margin-right\', + margin + \'px\');\n         }\n@@ -296,7 +296,7 @@ define([\n     },\n     hideElements: function() {\n       var that = this;\n-      if (this.state.left){\n+      if (that.state.left){\n         // only when on top\n         return;\n       }\n@@ -380,7 +380,7 @@ define([\n       }else {\n         that.setupMobile();\n       }\n-      this.$el.addClass(\'initialized\');\n+      that.$el.addClass(\'initialized\');\n \n       /* folder contents changes the context.\n          This is for usability so the menu changes along with\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2018-10-04T13:49:06+02:00
Author: Manuel Reinhardt (reinhardt) <reinhardt@syslab.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/da30049306b2d7a0d4f0644161f1c91316b0e56c

Merge pull request #2558 from plone/1801-remove-enableHTTPCompression

re #1801: Removed enableHTTPCompression.py skin script.

Files changed:
M CHANGES.rst
D Products/CMFPlone/skins/plone_scripts/enableHTTPCompression.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 9e08546b3..f3ce4407c 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -17,6 +17,8 @@ Breaking changes:\n \n - Removed getObjectsFromPathList.py skin script. #1801\n   [reinhardt]\n+- Removed enableHTTPCompression.py skin script. #1801\n+  [tlotze]\n \n - Removed setAuthCookie.py skin script. #1801\n   [tlotze]\ndiff --git a/Products/CMFPlone/skins/plone_scripts/enableHTTPCompression.py b/Products/CMFPlone/skins/plone_scripts/enableHTTPCompression.py\ndeleted file mode 100644\nindex d53764e63..000000000\n--- a/Products/CMFPlone/skins/plone_scripts/enableHTTPCompression.py\n+++ /dev/null\n@@ -1,25 +0,0 @@\n-## Script (Python) "enableHTTPCompression"\n-##bind container=container\n-##bind context=context\n-##bind namespace=\n-##bind script=script\n-##bind subpath=traverse_subpath\n-##parameters=request=None, force=0, debug=0, enable=0\n-##title=Enable zlib based HTTP compression\n-\n-# force: force http compression even if the browser doesn\'t send an accept\n-# debug: return compression state (0: no, 1: yes, 2: force)\n-\n-if not enable:\n-    if debug:\n-        return \'<!-- compression status: disabled -->\'\n-    else:\n-        return\n-\n-if request is None:\n-    request = context.REQUEST\n-\n-result = request.RESPONSE.enableHTTPCompression(REQUEST=request, force=force)\n-\n-if debug:\n-    return \'<!-- compression status: %s -->\' % result\n'

