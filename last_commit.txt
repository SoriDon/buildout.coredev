Repository: plone.namedfile


Branch: refs/heads/master
Date: 2022-06-27T11:54:53+02:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/plone.namedfile/commit/f8ff13e07c9a7e5c175b73386699c566060ad80c

Do not use full url in image_scales dictionary

Files changed:
M plone/namedfile/adapters.py
M plone/namedfile/scaling.py

b'diff --git a/plone/namedfile/adapters.py b/plone/namedfile/adapters.py\nindex c38bdda..8c147cf 100644\n--- a/plone/namedfile/adapters.py\n+++ b/plone/namedfile/adapters.py\n@@ -69,7 +69,7 @@ def __call__(self):\n                 "filename": image.filename,\n                 "content-type": image.contentType,\n                 "size": image.getSize(),\n-                "download": url,\n+                "download": self._scale_view_from_url(url),\n                 "width": width,\n                 "height": height,\n                 "scales": scales,\n@@ -109,7 +109,7 @@ def get_scales(self, field, width, height):\n             actual_height = scale.height\n \n             scales[name] = {\n-                "download": url,\n+                "download": self._scale_view_from_url(url),\n                 "width": actual_width,\n                 "height": actual_height,\n             }\n@@ -127,3 +127,6 @@ def get_original_image_url(self, fieldname, width, height):\n         )\n         # Corrupt images may not have a scale.\n         return scale.url if scale else None\n+\n+    def _scale_view_from_url(self, url):\n+        return url.replace(self.context.absolute_url(), "").lstrip("/")\ndiff --git a/plone/namedfile/scaling.py b/plone/namedfile/scaling.py\nindex 074662c..2855592 100644\n--- a/plone/namedfile/scaling.py\n+++ b/plone/namedfile/scaling.py\n@@ -752,7 +752,7 @@ def _tag_from_brain_image_scales(\n         if alt is _marker:\n             alt = title\n         values = [\n-            ("src", data["download"]),\n+            ("src", f"{brain.getURL()}/{data[\'download\']}"),\n             ("alt", alt),\n             ("title", title),\n             ("height", data["height"]),\n'

Repository: plone.namedfile


Branch: refs/heads/master
Date: 2022-06-27T11:54:59+02:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/plone.namedfile/commit/39bbe7d0173045cb4f16f267da4bcc0e3c94794e

add changenote

Files changed:
A news/123.bugfix

b'diff --git a/news/123.bugfix b/news/123.bugfix\nnew file mode 100644\nindex 0000000..6d2933e\n--- /dev/null\n+++ b/news/123.bugfix\n@@ -0,0 +1,2 @@\n+Do not use full url in `image_scales` dictionary.\n+[petschki]\n'

Repository: plone.namedfile


Branch: refs/heads/master
Date: 2022-06-27T12:03:17+02:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/plone.namedfile/commit/136fa544a426c851ed028f320b27946340225c0d

fix tests

Files changed:
M plone/namedfile/tests/test_adapters.py

b'diff --git a/plone/namedfile/tests/test_adapters.py b/plone/namedfile/tests/test_adapters.py\nindex b144aeb..7a14782 100644\n--- a/plone/namedfile/tests/test_adapters.py\n+++ b/plone/namedfile/tests/test_adapters.py\n@@ -85,8 +85,7 @@ def test_field_adapter_return_scales(self):\n             },\n         )\n         # Note: self.content.absolute_url() is actually empty in this test.\n-        images_url = self.content.absolute_url() + "/@@images"\n-        self.assertTrue(download.startswith(f"{images_url}/image1-16-"))\n+        self.assertTrue(download.startswith(f"@@images/image1-16-"))\n         self.assertTrue(download.endswith(".gif"))\n         self.assertIn("listing", scales)\n         self.assertEqual(len(scales), 1)\n@@ -95,7 +94,7 @@ def test_field_adapter_return_scales(self):\n         self.assertEqual(listing["height"], 16)\n         self.assertEqual(listing["width"], 16)\n         download = listing["download"]\n-        self.assertTrue(download.startswith(f"{images_url}/image1-16-"))\n+        self.assertTrue(download.startswith(f"@@images/image1-16-"))\n         self.assertTrue(download.endswith(".gif"))\n \n     @unittest.skipIf(IImageScalesFieldAdapter is not None, "Skipping on Plone 6")\n@@ -132,8 +131,7 @@ def test_field_adapter_does_not_return_larger_scales(self):\n             },\n         )\n         # Note: self.content.absolute_url() is actually empty in this test.\n-        images_url = self.content.absolute_url() + "/@@images"\n-        self.assertTrue(download.startswith(f"{images_url}/image1-900-"))\n+        self.assertTrue(download.startswith(f"@@images/image1-900-"))\n         self.assertTrue(download.endswith(".jpeg"))\n         # larger and huge should not be in here: these scales would return the same\n         # content as the original.\n@@ -144,4 +142,4 @@ def test_field_adapter_does_not_return_larger_scales(self):\n         preview = scales["preview"]\n         self.assertEqual(preview["width"], 400)\n         self.assertEqual(preview["height"], 400)\n-        self.assertTrue(preview["download"].startswith(f"{images_url}/image1-400-"))\n+        self.assertTrue(preview["download"].startswith(f"@@images/image1-400-"))\n'

Repository: plone.namedfile


Branch: refs/heads/master
Date: 2022-06-27T14:48:19+02:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/plone.namedfile/commit/59db77651d813386fa0e8304ae6e23a2b51948af

comment why saving scale view only

Files changed:
M plone/namedfile/adapters.py

b'diff --git a/plone/namedfile/adapters.py b/plone/namedfile/adapters.py\nindex 8c147cf..dc831b2 100644\n--- a/plone/namedfile/adapters.py\n+++ b/plone/namedfile/adapters.py\n@@ -129,4 +129,8 @@ def get_original_image_url(self, fieldname, width, height):\n         return scale.url if scale else None\n \n     def _scale_view_from_url(self, url):\n+        # The "download" information for scales is the path to\n+        # "@@images/foo-scale" only.\n+        # The full URL to the scale is rendered by the scaling adapter at\n+        # runtime to make sure they are correct in virtual hostings.\n         return url.replace(self.context.absolute_url(), "").lstrip("/")\n'

Repository: plone.namedfile


Branch: refs/heads/master
Date: 2022-06-27T14:56:29+02:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/plone.namedfile/commit/11aae67f25c5b74e9d4f6586c1fbebf933d0123c

check if metadata scale url starts with "http"

Files changed:
M plone/namedfile/scaling.py

b'diff --git a/plone/namedfile/scaling.py b/plone/namedfile/scaling.py\nindex 2855592..1b75a27 100644\n--- a/plone/namedfile/scaling.py\n+++ b/plone/namedfile/scaling.py\n@@ -751,8 +751,17 @@ def _tag_from_brain_image_scales(\n                 title = title()\n         if alt is _marker:\n             alt = title\n+\n+        # common case is a local path to "@@images/img-scale"\n+        # but it might be a custom url starting with "http"\n+        src = (\n+            data["download"]\n+            if data["download"].startswith("http")\n+            else f"{brain.getURL()}/{data[\'download\']}"\n+        )\n+\n         values = [\n-            ("src", f"{brain.getURL()}/{data[\'download\']}"),\n+            ("src", src),\n             ("alt", alt),\n             ("title", title),\n             ("height", data["height"]),\n'

Repository: plone.namedfile


Branch: refs/heads/master
Date: 2022-06-27T15:47:14+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.namedfile/commit/d2bbbce427b55bdb8b77f3e45ef657168d7e2c9d

Merge pull request #124 from plone/issue-123

Do not use full url in `image_scales` dictionary

Files changed:
A news/123.bugfix
M plone/namedfile/adapters.py
M plone/namedfile/scaling.py
M plone/namedfile/tests/test_adapters.py

b'diff --git a/news/123.bugfix b/news/123.bugfix\nnew file mode 100644\nindex 0000000..6d2933e\n--- /dev/null\n+++ b/news/123.bugfix\n@@ -0,0 +1,2 @@\n+Do not use full url in `image_scales` dictionary.\n+[petschki]\ndiff --git a/plone/namedfile/adapters.py b/plone/namedfile/adapters.py\nindex c38bdda..dc831b2 100644\n--- a/plone/namedfile/adapters.py\n+++ b/plone/namedfile/adapters.py\n@@ -69,7 +69,7 @@ def __call__(self):\n                 "filename": image.filename,\n                 "content-type": image.contentType,\n                 "size": image.getSize(),\n-                "download": url,\n+                "download": self._scale_view_from_url(url),\n                 "width": width,\n                 "height": height,\n                 "scales": scales,\n@@ -109,7 +109,7 @@ def get_scales(self, field, width, height):\n             actual_height = scale.height\n \n             scales[name] = {\n-                "download": url,\n+                "download": self._scale_view_from_url(url),\n                 "width": actual_width,\n                 "height": actual_height,\n             }\n@@ -127,3 +127,10 @@ def get_original_image_url(self, fieldname, width, height):\n         )\n         # Corrupt images may not have a scale.\n         return scale.url if scale else None\n+\n+    def _scale_view_from_url(self, url):\n+        # The "download" information for scales is the path to\n+        # "@@images/foo-scale" only.\n+        # The full URL to the scale is rendered by the scaling adapter at\n+        # runtime to make sure they are correct in virtual hostings.\n+        return url.replace(self.context.absolute_url(), "").lstrip("/")\ndiff --git a/plone/namedfile/scaling.py b/plone/namedfile/scaling.py\nindex 074662c..1b75a27 100644\n--- a/plone/namedfile/scaling.py\n+++ b/plone/namedfile/scaling.py\n@@ -751,8 +751,17 @@ def _tag_from_brain_image_scales(\n                 title = title()\n         if alt is _marker:\n             alt = title\n+\n+        # common case is a local path to "@@images/img-scale"\n+        # but it might be a custom url starting with "http"\n+        src = (\n+            data["download"]\n+            if data["download"].startswith("http")\n+            else f"{brain.getURL()}/{data[\'download\']}"\n+        )\n+\n         values = [\n-            ("src", data["download"]),\n+            ("src", src),\n             ("alt", alt),\n             ("title", title),\n             ("height", data["height"]),\ndiff --git a/plone/namedfile/tests/test_adapters.py b/plone/namedfile/tests/test_adapters.py\nindex b144aeb..7a14782 100644\n--- a/plone/namedfile/tests/test_adapters.py\n+++ b/plone/namedfile/tests/test_adapters.py\n@@ -85,8 +85,7 @@ def test_field_adapter_return_scales(self):\n             },\n         )\n         # Note: self.content.absolute_url() is actually empty in this test.\n-        images_url = self.content.absolute_url() + "/@@images"\n-        self.assertTrue(download.startswith(f"{images_url}/image1-16-"))\n+        self.assertTrue(download.startswith(f"@@images/image1-16-"))\n         self.assertTrue(download.endswith(".gif"))\n         self.assertIn("listing", scales)\n         self.assertEqual(len(scales), 1)\n@@ -95,7 +94,7 @@ def test_field_adapter_return_scales(self):\n         self.assertEqual(listing["height"], 16)\n         self.assertEqual(listing["width"], 16)\n         download = listing["download"]\n-        self.assertTrue(download.startswith(f"{images_url}/image1-16-"))\n+        self.assertTrue(download.startswith(f"@@images/image1-16-"))\n         self.assertTrue(download.endswith(".gif"))\n \n     @unittest.skipIf(IImageScalesFieldAdapter is not None, "Skipping on Plone 6")\n@@ -132,8 +131,7 @@ def test_field_adapter_does_not_return_larger_scales(self):\n             },\n         )\n         # Note: self.content.absolute_url() is actually empty in this test.\n-        images_url = self.content.absolute_url() + "/@@images"\n-        self.assertTrue(download.startswith(f"{images_url}/image1-900-"))\n+        self.assertTrue(download.startswith(f"@@images/image1-900-"))\n         self.assertTrue(download.endswith(".jpeg"))\n         # larger and huge should not be in here: these scales would return the same\n         # content as the original.\n@@ -144,4 +142,4 @@ def test_field_adapter_does_not_return_larger_scales(self):\n         preview = scales["preview"]\n         self.assertEqual(preview["width"], 400)\n         self.assertEqual(preview["height"], 400)\n-        self.assertTrue(preview["download"].startswith(f"{images_url}/image1-400-"))\n+        self.assertTrue(preview["download"].startswith(f"@@images/image1-400-"))\n'

