Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2022-11-24T16:09:37+01:00
Author: Mikel Larreategi (erral) <mlarreategi@codesyntax.com>
Commit: https://github.com/plone/plone.app.upgrade/commit/d0a05a326afaf5930c9c2a01a540ee6608dd9ea8

Apply volto.blocks behavior if the site was being used as a Volto site

Files changed:
A news/304.bugfix
M plone/app/upgrade/v60/alphas.py

b'diff --git a/news/304.bugfix b/news/304.bugfix\nnew file mode 100644\nindex 00000000..2598305c\n--- /dev/null\n+++ b/news/304.bugfix\n@@ -0,0 +1,2 @@\n+Apply volto.blocks behavior if the site was being used as a Volto site\n+[erral]\ndiff --git a/plone/app/upgrade/v60/alphas.py b/plone/app/upgrade/v60/alphas.py\nindex c56b87c5..dd9eb667 100644\n--- a/plone/app/upgrade/v60/alphas.py\n+++ b/plone/app/upgrade/v60/alphas.py\n@@ -13,6 +13,7 @@\n from zope.component import queryUtility\n from zope.component.hooks import getSite\n \n+import json\n import logging\n import os\n \n@@ -77,6 +78,26 @@ def change_plone_site_fti(context):\n         fti._setPropValue(prop, value)\n \n \n+def make_volto_site(context):\n+    """Check if the portal was being used as a Volto site, and if so apply the relevant behaviors"""\n+    if context.hasProperty("blocks") and context.hasProperty("blocks_layout"):\n+        # If the portal object has those properties it was being used\n+        # as a Volto site, so we need to set the volto.blocks behavior to the FTI\n+        # and copy the content of those properties to the fields\n+        pt = getToolByName(context, "portal_types")\n+        fti = pt.getTypeInfo("Plone Site")\n+        fti.behaviors = fti.behaviors + ("volto.blocks",)\n+\n+        blocks_property_value = context.getProperty("blocks")\n+        blocks_layout_property_value = context.getProperty("blocks_layout")\n+        context.manage_delProperties(["blocks", "blocks_layout"])\n+\n+        context.blocks = json.loads(blocks_property_value)\n+        context.blocks_layout = json.loads(blocks_layout_property_value)\n+\n+        logger.info("Applied volto.blocks behavior and migrated existing blocks")\n+\n+\n def make_site_dx(context):\n     """Make the Plone Site a dexterity container"""\n     portal = getSite()\n@@ -103,6 +124,8 @@ def make_site_dx(context):\n     delattr(portal, "_objects")\n     portal._p_changed = True\n \n+    make_volto_site(portal)\n+\n \n def add_uuid_to_dxsiteroot(context):\n     """Give the Plone Site an UUID."""\n@@ -350,9 +373,7 @@ def update_catalog_for_image_scales(context):\n     update_catalog_metadata(context, column=column)\n     end = time()\n     minutes = (end - start) / 60\n-    logger.info(\n-        "Time taken to update catalog for image scales: %.1f minutes.", minutes\n-    )\n+    logger.info("Time taken to update catalog for image scales: %.1f minutes.", minutes)\n \n \n def upgrade_plone_module_profiles(context):\n'

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2022-11-29T12:26:20+01:00
Author: Katja Süss (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.app.upgrade/commit/7ed8ccb469f3d7fd4f0e6e45f3d572b60a2dc479

Add separate upgrade step to migrate Plone 5 site root blocks.

Files changed:
M plone/app/upgrade/v60/alphas.py
M plone/app/upgrade/v60/configure.zcml

b'diff --git a/plone/app/upgrade/v60/alphas.py b/plone/app/upgrade/v60/alphas.py\nindex dd9eb667..67fb53dc 100644\n--- a/plone/app/upgrade/v60/alphas.py\n+++ b/plone/app/upgrade/v60/alphas.py\n@@ -78,22 +78,23 @@ def change_plone_site_fti(context):\n         fti._setPropValue(prop, value)\n \n \n-def make_volto_site(context):\n+def migrate_blocks_of_root(context):\n     """Check if the portal was being used as a Volto site, and if so apply the relevant behaviors"""\n-    if context.hasProperty("blocks") and context.hasProperty("blocks_layout"):\n+    portal = getSite()\n+    if portal.hasProperty("blocks") and portal.hasProperty("blocks_layout"):\n         # If the portal object has those properties it was being used\n         # as a Volto site, so we need to set the volto.blocks behavior to the FTI\n         # and copy the content of those properties to the fields\n-        pt = getToolByName(context, "portal_types")\n+        pt = getToolByName(portal, "portal_types")\n         fti = pt.getTypeInfo("Plone Site")\n         fti.behaviors = fti.behaviors + ("volto.blocks",)\n \n-        blocks_property_value = context.getProperty("blocks")\n-        blocks_layout_property_value = context.getProperty("blocks_layout")\n-        context.manage_delProperties(["blocks", "blocks_layout"])\n+        blocks_property_value = portal.getProperty("blocks")\n+        blocks_layout_property_value = portal.getProperty("blocks_layout")\n+        portal.manage_delProperties(["blocks", "blocks_layout"])\n \n-        context.blocks = json.loads(blocks_property_value)\n-        context.blocks_layout = json.loads(blocks_layout_property_value)\n+        portal.blocks = json.loads(blocks_property_value)\n+        portal.blocks_layout = json.loads(blocks_layout_property_value)\n \n         logger.info("Applied volto.blocks behavior and migrated existing blocks")\n \n@@ -124,8 +125,6 @@ def make_site_dx(context):\n     delattr(portal, "_objects")\n     portal._p_changed = True\n \n-    make_volto_site(portal)\n-\n \n def add_uuid_to_dxsiteroot(context):\n     """Give the Plone Site an UUID."""\ndiff --git a/plone/app/upgrade/v60/configure.zcml b/plone/app/upgrade/v60/configure.zcml\nindex 020b160d..891ea0a4 100644\n--- a/plone/app/upgrade/v60/configure.zcml\n+++ b/plone/app/upgrade/v60/configure.zcml\n@@ -21,6 +21,11 @@\n            handler=".alphas.make_site_dx"\n            />\n \n+      <gs:upgradeStep\n+           title="Migrate blocks of Plone Site root"\n+           handler=".alphas.migrate_blocks_of_root"\n+           />\n+\n       <gs:upgradeDepends\n            title="Run to6000 upgrade profile."\n            import_profile="plone.app.upgrade.v60:to6000"\n'

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2022-11-29T15:45:50+01:00
Author: Katja Süss (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.app.upgrade/commit/54e99b8dd9861ed7cb82829a2edc18b302b33ae5

Move upgrade step "migration of site root blocks" to current rc2 upgrade steps group

Files changed:
M plone/app/upgrade/v60/configure.zcml

b'diff --git a/plone/app/upgrade/v60/configure.zcml b/plone/app/upgrade/v60/configure.zcml\nindex 891ea0a4..5ac1413d 100644\n--- a/plone/app/upgrade/v60/configure.zcml\n+++ b/plone/app/upgrade/v60/configure.zcml\n@@ -21,11 +21,6 @@\n            handler=".alphas.make_site_dx"\n            />\n \n-      <gs:upgradeStep\n-           title="Migrate blocks of Plone Site root"\n-           handler=".alphas.migrate_blocks_of_root"\n-           />\n-\n       <gs:upgradeDepends\n            title="Run to6000 upgrade profile."\n            import_profile="plone.app.upgrade.v60:to6000"\n@@ -202,9 +197,8 @@\n         <!-- Plone 6.0.0rc2 -->\n \n         <gs:upgradeStep\n-            title="Miscellaneous"\n-            description=""\n-            handler="..utils.null_upgrade_step"\n+            title="Migrate blocks of Plone Site root"\n+            handler=".alphas.migrate_blocks_of_root"\n             />\n \n     </gs:upgradeSteps>\n'

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2022-11-30T08:48:51+01:00
Author: Katja Süss (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.app.upgrade/commit/2abcea1156443844c498cefffd232056d0eda884

Move "migration of blocks" to first alpha upgrade step group inside step "Make root Dexterity FTI"

Files changed:
M plone/app/upgrade/v60/alphas.py
M plone/app/upgrade/v60/configure.zcml

b'diff --git a/plone/app/upgrade/v60/alphas.py b/plone/app/upgrade/v60/alphas.py\nindex 67fb53dc..badb5998 100644\n--- a/plone/app/upgrade/v60/alphas.py\n+++ b/plone/app/upgrade/v60/alphas.py\n@@ -56,6 +56,29 @@ def remove_temp_folder(context):\n ]\n \n \n+def _migrate_blocks_of_root(portal):\n+    """Check if the portal was being used as a Volto site, and if so apply the relevant behavior"""\n+\n+    if portal.hasProperty("blocks") and portal.hasProperty("blocks_layout"):\n+        # If the portal object has those properties it was being used\n+        # as a Volto site, so we need to set the volto.blocks behavior to the FTI\n+        # and copy the content of those properties to the fields\n+        pt = getToolByName(portal, "portal_types")\n+        fti = pt.getTypeInfo("Plone Site")\n+        fti.behaviors = fti.behaviors + ("volto.blocks",)\n+\n+        blocks_property_value = portal.getProperty("blocks")\n+        blocks_layout_property_value = portal.getProperty("blocks_layout")\n+        portal.manage_delProperties(["blocks", "blocks_layout"])\n+\n+        portal.blocks = json.loads(blocks_property_value)\n+        portal.blocks_layout = json.loads(blocks_layout_property_value)\n+\n+        logger.info(\n+            "Applied volto.blocks behavior and migrated existing blocks of root properties."\n+        )\n+\n+\n def change_plone_site_fti(context):\n     pt = getToolByName(context, "portal_types")\n     fti = pt.getTypeInfo("Plone Site")\n@@ -77,26 +100,8 @@ def change_plone_site_fti(context):\n     for prop, value in keep.items():\n         fti._setPropValue(prop, value)\n \n-\n-def migrate_blocks_of_root(context):\n-    """Check if the portal was being used as a Volto site, and if so apply the relevant behaviors"""\n     portal = getSite()\n-    if portal.hasProperty("blocks") and portal.hasProperty("blocks_layout"):\n-        # If the portal object has those properties it was being used\n-        # as a Volto site, so we need to set the volto.blocks behavior to the FTI\n-        # and copy the content of those properties to the fields\n-        pt = getToolByName(portal, "portal_types")\n-        fti = pt.getTypeInfo("Plone Site")\n-        fti.behaviors = fti.behaviors + ("volto.blocks",)\n-\n-        blocks_property_value = portal.getProperty("blocks")\n-        blocks_layout_property_value = portal.getProperty("blocks_layout")\n-        portal.manage_delProperties(["blocks", "blocks_layout"])\n-\n-        portal.blocks = json.loads(blocks_property_value)\n-        portal.blocks_layout = json.loads(blocks_layout_property_value)\n-\n-        logger.info("Applied volto.blocks behavior and migrated existing blocks")\n+    _migrate_blocks_of_root(portal)\n \n \n def make_site_dx(context):\ndiff --git a/plone/app/upgrade/v60/configure.zcml b/plone/app/upgrade/v60/configure.zcml\nindex 5ac1413d..020b160d 100644\n--- a/plone/app/upgrade/v60/configure.zcml\n+++ b/plone/app/upgrade/v60/configure.zcml\n@@ -197,8 +197,9 @@\n         <!-- Plone 6.0.0rc2 -->\n \n         <gs:upgradeStep\n-            title="Migrate blocks of Plone Site root"\n-            handler=".alphas.migrate_blocks_of_root"\n+            title="Miscellaneous"\n+            description=""\n+            handler="..utils.null_upgrade_step"\n             />\n \n     </gs:upgradeSteps>\n'

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2022-12-01T14:53:43+01:00
Author: Maurits van Rees (mauritsvanrees) <m.van.rees@zestsoftware.nl>
Commit: https://github.com/plone/plone.app.upgrade/commit/b932f599b92012f0594400451ee30e063c6fb512

Merge pull request #307 from plone/erral-issue-304

Apply volto.blocks behavior if the site was being used as a Volto site

Files changed:
A news/304.bugfix
M plone/app/upgrade/v60/alphas.py

b'diff --git a/news/304.bugfix b/news/304.bugfix\nnew file mode 100644\nindex 00000000..2598305c\n--- /dev/null\n+++ b/news/304.bugfix\n@@ -0,0 +1,2 @@\n+Apply volto.blocks behavior if the site was being used as a Volto site\n+[erral]\ndiff --git a/plone/app/upgrade/v60/alphas.py b/plone/app/upgrade/v60/alphas.py\nindex c56b87c5..badb5998 100644\n--- a/plone/app/upgrade/v60/alphas.py\n+++ b/plone/app/upgrade/v60/alphas.py\n@@ -13,6 +13,7 @@\n from zope.component import queryUtility\n from zope.component.hooks import getSite\n \n+import json\n import logging\n import os\n \n@@ -55,6 +56,29 @@ def remove_temp_folder(context):\n ]\n \n \n+def _migrate_blocks_of_root(portal):\n+    """Check if the portal was being used as a Volto site, and if so apply the relevant behavior"""\n+\n+    if portal.hasProperty("blocks") and portal.hasProperty("blocks_layout"):\n+        # If the portal object has those properties it was being used\n+        # as a Volto site, so we need to set the volto.blocks behavior to the FTI\n+        # and copy the content of those properties to the fields\n+        pt = getToolByName(portal, "portal_types")\n+        fti = pt.getTypeInfo("Plone Site")\n+        fti.behaviors = fti.behaviors + ("volto.blocks",)\n+\n+        blocks_property_value = portal.getProperty("blocks")\n+        blocks_layout_property_value = portal.getProperty("blocks_layout")\n+        portal.manage_delProperties(["blocks", "blocks_layout"])\n+\n+        portal.blocks = json.loads(blocks_property_value)\n+        portal.blocks_layout = json.loads(blocks_layout_property_value)\n+\n+        logger.info(\n+            "Applied volto.blocks behavior and migrated existing blocks of root properties."\n+        )\n+\n+\n def change_plone_site_fti(context):\n     pt = getToolByName(context, "portal_types")\n     fti = pt.getTypeInfo("Plone Site")\n@@ -76,6 +100,9 @@ def change_plone_site_fti(context):\n     for prop, value in keep.items():\n         fti._setPropValue(prop, value)\n \n+    portal = getSite()\n+    _migrate_blocks_of_root(portal)\n+\n \n def make_site_dx(context):\n     """Make the Plone Site a dexterity container"""\n@@ -350,9 +377,7 @@ def update_catalog_for_image_scales(context):\n     update_catalog_metadata(context, column=column)\n     end = time()\n     minutes = (end - start) / 60\n-    logger.info(\n-        "Time taken to update catalog for image scales: %.1f minutes.", minutes\n-    )\n+    logger.info("Time taken to update catalog for image scales: %.1f minutes.", minutes)\n \n \n def upgrade_plone_module_profiles(context):\n'

