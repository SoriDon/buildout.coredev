Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-05-25T02:54:12+02:00
Author: Andrea Cecchi (cekk) <andrea.cecchi85@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/90bf9dd244c09325acf8817d469c80dc9ea0cd1e

Do not break path2uid with strange links (#1428)

* handle edge-case in path2uid

* handle edge-case in path2uid

* add changelog

Files changed:
A news/1428.bugfix
M src/plone/restapi/deserializer/utils.py
M src/plone/restapi/tests/test_blocks_deserializer.py

b'diff --git a/news/1428.bugfix b/news/1428.bugfix\nnew file mode 100644\nindex 000000000..45186b098\n--- /dev/null\n+++ b/news/1428.bugfix\n@@ -0,0 +1,2 @@\n+Do not break path2uid with some edge-cases.\n+[cekk]\ndiff --git a/src/plone/restapi/deserializer/utils.py b/src/plone/restapi/deserializer/utils.py\nindex 1c9190cb1..7b9c206cc 100644\n--- a/src/plone/restapi/deserializer/utils.py\n+++ b/src/plone/restapi/deserializer/utils.py\n@@ -30,9 +30,11 @@ def path2uid(context, link):\n     suffix = ""\n     while not IUUIDAware.providedBy(obj):\n         obj = aq_parent(obj)\n+        if obj is None:\n+            break\n         suffix += "/" + segments.pop()\n     # check if obj is wrong because of acquisition\n-    if "/".join(obj.getPhysicalPath()) != "/".join(segments):\n+    if not obj or "/".join(obj.getPhysicalPath()) != "/".join(segments):\n         return link\n     href = relative_up * "../" + "resolveuid/" + IUUID(obj)\n     if suffix:\ndiff --git a/src/plone/restapi/tests/test_blocks_deserializer.py b/src/plone/restapi/tests/test_blocks_deserializer.py\nindex 9264b04c9..b926c90e0 100644\n--- a/src/plone/restapi/tests/test_blocks_deserializer.py\n+++ b/src/plone/restapi/tests/test_blocks_deserializer.py\n@@ -417,3 +417,23 @@ def test_aquisition_messing_with_link_deserializer(self):\n             self.portal.doc1.blocks["123"]["href"][0]["@id"],\n             f"../resolveuid/{wrong_uid}",\n         )\n+\n+        # another use-case: pass "../.." as link. Do not change the link.\n+        self.deserialize(\n+            blocks={\n+                "123": {\n+                    "@type": "foo",\n+                    "href": [\n+                        {\n+                            # Pointing to a not created yet object, but matches because acquisition\n+                            # with another existing parent content with alike-ish path structure\n+                            "@id": "../.."\n+                        }\n+                    ],\n+                }\n+            }\n+        )\n+        self.assertEqual(\n+            self.portal.doc1.blocks["123"]["href"][0]["@id"],\n+            "../..",\n+        )\n'

