Repository: plone.dexterity


Branch: refs/heads/master
Date: 2019-03-29T21:40:32+01:00
Author: Gil Forcada (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.dexterity/commit/4cab6b29a76a445efdb91cf4e5472daf0bef6824

feat: ignore more attribute names

This is mostly an optimization, see the rationale at the linked issue.

Fixes https://github.com/plone/plone.dexterity/issues/98

Files changed:
M plone/dexterity/content.py

b'diff --git a/plone/dexterity/content.py b/plone/dexterity/content.py\nindex 3cb25ad..c177aa6 100644\n--- a/plone/dexterity/content.py\n+++ b/plone/dexterity/content.py\n@@ -56,6 +56,14 @@\n FLOOR_DATE = DateTime(1970, 0)  # always effective\n CEILING_DATE = DateTime(2500, 0)  # never expires\n \n+# see comment in DexterityContent.__getattr__ method\n+ATTRIBUTE_NAMES_TO_IGNORE = (\n+    \'_v__providedBy__\',\n+    \'im_self\',  # python 2 only, on python 3 it was renamed to __self__\n+    \'aq_inner\',\n+    \'_Access_contents_information_Permission\'\n+)\n+\n \n def _default_from_schema(context, schema, fieldname):\n     """helper to lookup default value of a field\n@@ -331,7 +339,9 @@ def __getattr__(self, name):\n         # wouldn\'t be in here if the class had such an attribute\n         # defined).\n         # also handle special dynamic providedBy cache here.\n-        if name.startswith(\'__\') or name == \'_v__providedBy__\':\n+        # Ignore also some other well known names like\n+        # Acquisition and AccessControl related ones.\n+        if name.startswith(\'__\') or name in ATTRIBUTE_NAMES_TO_IGNORE:\n             raise AttributeError(name)\n \n         # attribute was not found; try to look it up in the schema and return\n'

Repository: plone.dexterity


Branch: refs/heads/master
Date: 2019-03-29T21:40:32+01:00
Author: Gil Forcada (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.dexterity/commit/a8cc9c9ce2165f4ca8a1485f78bc571ab35ad6b3

Add news entry

Files changed:
A news/98.feature

b'diff --git a/news/98.feature b/news/98.feature\nnew file mode 100644\nindex 0000000..847883f\n--- /dev/null\n+++ b/news/98.feature\n@@ -0,0 +1,2 @@\n+Avoid expensive lookups for other common attributes.\n+[gforcada]\n'

Repository: plone.dexterity


Branch: refs/heads/master
Date: 2019-04-01T15:22:20+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.dexterity/commit/e3749d290af7ce6f15506b7380a5c14453700f5b

Merge pull request #99 from plone/minor-optimization

Minor optimization

Files changed:
A news/98.feature
M plone/dexterity/content.py

b'diff --git a/news/98.feature b/news/98.feature\nnew file mode 100644\nindex 0000000..847883f\n--- /dev/null\n+++ b/news/98.feature\n@@ -0,0 +1,2 @@\n+Avoid expensive lookups for other common attributes.\n+[gforcada]\ndiff --git a/plone/dexterity/content.py b/plone/dexterity/content.py\nindex 3cb25ad..c177aa6 100644\n--- a/plone/dexterity/content.py\n+++ b/plone/dexterity/content.py\n@@ -56,6 +56,14 @@\n FLOOR_DATE = DateTime(1970, 0)  # always effective\n CEILING_DATE = DateTime(2500, 0)  # never expires\n \n+# see comment in DexterityContent.__getattr__ method\n+ATTRIBUTE_NAMES_TO_IGNORE = (\n+    \'_v__providedBy__\',\n+    \'im_self\',  # python 2 only, on python 3 it was renamed to __self__\n+    \'aq_inner\',\n+    \'_Access_contents_information_Permission\'\n+)\n+\n \n def _default_from_schema(context, schema, fieldname):\n     """helper to lookup default value of a field\n@@ -331,7 +339,9 @@ def __getattr__(self, name):\n         # wouldn\'t be in here if the class had such an attribute\n         # defined).\n         # also handle special dynamic providedBy cache here.\n-        if name.startswith(\'__\') or name == \'_v__providedBy__\':\n+        # Ignore also some other well known names like\n+        # Acquisition and AccessControl related ones.\n+        if name.startswith(\'__\') or name in ATTRIBUTE_NAMES_TO_IGNORE:\n             raise AttributeError(name)\n \n         # attribute was not found; try to look it up in the schema and return\n'

