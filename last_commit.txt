Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2019-04-10T15:19:36+02:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/813ff18e3ebfe7ac65bac1581facff7bc7d4909b

fix regression in show_excluded_items in combination with exclude_from_nav setings

Files changed:
A news/2828.bugfix
M Products/CMFPlone/browser/navigation.py
M Products/CMFPlone/tests/testNavigationView.py

b"diff --git a/Products/CMFPlone/browser/navigation.py b/Products/CMFPlone/browser/navigation.py\nindex ba9c12031..321879d70 100644\n--- a/Products/CMFPlone/browser/navigation.py\n+++ b/Products/CMFPlone/browser/navigation.py\n@@ -72,7 +72,7 @@ def siteMap(self):\n class CatalogNavigationTabs(BrowserView):\n \n     def _getNavQuery(self):\n-                # check whether we only want actions\n+        # check whether we only want actions\n         registry = getUtility(IRegistry)\n         navigation_settings = registry.forInterface(\n             INavigationSchema,\n@@ -101,6 +101,9 @@ def _getNavQuery(self):\n \n         query['is_default_page'] = False\n \n+        if not navigation_settings.show_excluded_items:\n+            query['exclude_from_nav'] = False\n+\n         if not navigation_settings.nonfolderish_tabs:\n             query['is_folderish'] = True\n \n@@ -146,11 +149,13 @@ def _get_url(item):\n                 return (get_id(item), item.getRemoteUrl)\n             return get_view_url(item)\n \n+        context_path = '/'.join(context.getPhysicalPath())\n+\n         # now add the content to results\n         for item in rawresult:\n-            if not navigation_settings.show_excluded_items:\n-                if item.exclude_from_nav:\n-                    continue\n+            if not context_path.startswith(item.getPath()) and item.exclude_from_nav:  # noqa: E501\n+                # skip excluded items if they're not in our context path\n+                continue\n             cid, item_url = _get_url(item)\n             data = {\n                 'name': utils.pretty_title_or_id(context, item),\ndiff --git a/Products/CMFPlone/tests/testNavigationView.py b/Products/CMFPlone/tests/testNavigationView.py\nindex e18f08897..bc343ce22 100644\n--- a/Products/CMFPlone/tests/testNavigationView.py\n+++ b/Products/CMFPlone/tests/testNavigationView.py\n@@ -596,28 +596,25 @@ def testDisableFolderTabs(self):\n         self.assertEqual(tabs, [])\n \n     def testTabsExcludeItemsWithExcludeProperty(self):\n-        # Make sure that items witht he exclude_from_nav property are purged\n-        view = self.view_class(self.portal, self.request.clone())\n-        tabs = view.topLevelTabs(actions=[])\n-        orig_len = len(tabs)\n         self.portal.folder2.exclude_from_nav = True\n         self.portal.folder2.reindexObject()\n \n-        # For the moment nothing changes because the default for\n-        # plone.show_excluded_items is True\n-        view = self.view_class(self.portal, self.request.clone())\n+        # if we're not in context of the excluded item it should disappear\n+        view = self.view_class(self.portal, self.request)\n+        tabs = view.topLevelTabs(actions=[])\n+        tab_names = [t['id'] for t in tabs]\n+        self.assertNotIn('folder2', tab_names)\n+\n+        # but if we're inside, it should be visible\n+        view = self.view_class(self.portal.folder2, self.request)\n         tabs = view.topLevelTabs(actions=[])\n-        self.assertTrue(tabs)\n-        self.assertEqual(len(tabs), orig_len)\n         tab_names = [t['id'] for t in tabs]\n         self.assertIn('folder2', tab_names)\n \n         # Now we flip the setting for plone.show_excluded_items\n         self.navigation_settings.show_excluded_items = False\n-        view = self.view_class(self.portal, self.request)\n+        view = self.view_class(self.portal.folder2, self.request)\n         tabs = view.topLevelTabs(actions=[])\n-        self.assertTrue(tabs)\n-        self.assertEqual(len(tabs), orig_len - 1)\n         tab_names = [t['id'] for t in tabs]\n         self.assertNotIn('folder2', tab_names)\n \ndiff --git a/news/2828.bugfix b/news/2828.bugfix\nnew file mode 100644\nindex 000000000..9971ac605\n--- /dev/null\n+++ b/news/2828.bugfix\n@@ -0,0 +1,2 @@\n+restore ``exclude_from_nav`` combined with ``show_excluded_items`` handling\n+[petschki]\n"

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2019-04-10T23:49:50+02:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/7bbb88eec550189562e8ab7f1018b2f0bb9ba3c4

performance tweak

Files changed:
M Products/CMFPlone/browser/navigation.py

b"diff --git a/Products/CMFPlone/browser/navigation.py b/Products/CMFPlone/browser/navigation.py\nindex 321879d70..895830322 100644\n--- a/Products/CMFPlone/browser/navigation.py\n+++ b/Products/CMFPlone/browser/navigation.py\n@@ -153,7 +153,7 @@ def _get_url(item):\n \n         # now add the content to results\n         for item in rawresult:\n-            if not context_path.startswith(item.getPath()) and item.exclude_from_nav:  # noqa: E501\n+            if item.exclude_from_nav and not context_path.startswith(item.getPath()):  # noqa: E501\n                 # skip excluded items if they're not in our context path\n                 continue\n             cid, item_url = _get_url(item)\n"

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2019-04-11T07:59:01+02:00
Author: Peter Mathis (petschki) <petschki@users.noreply.github.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/1ef1e23fc3654a5008786760093954af3802149c

Merge pull request #2829 from plone/petschki_issue_2828

fix show_excluded_items regression

Files changed:
A news/2828.bugfix
M Products/CMFPlone/browser/navigation.py
M Products/CMFPlone/tests/testNavigationView.py

b"diff --git a/Products/CMFPlone/browser/navigation.py b/Products/CMFPlone/browser/navigation.py\nindex ba9c12031..895830322 100644\n--- a/Products/CMFPlone/browser/navigation.py\n+++ b/Products/CMFPlone/browser/navigation.py\n@@ -72,7 +72,7 @@ def siteMap(self):\n class CatalogNavigationTabs(BrowserView):\n \n     def _getNavQuery(self):\n-                # check whether we only want actions\n+        # check whether we only want actions\n         registry = getUtility(IRegistry)\n         navigation_settings = registry.forInterface(\n             INavigationSchema,\n@@ -101,6 +101,9 @@ def _getNavQuery(self):\n \n         query['is_default_page'] = False\n \n+        if not navigation_settings.show_excluded_items:\n+            query['exclude_from_nav'] = False\n+\n         if not navigation_settings.nonfolderish_tabs:\n             query['is_folderish'] = True\n \n@@ -146,11 +149,13 @@ def _get_url(item):\n                 return (get_id(item), item.getRemoteUrl)\n             return get_view_url(item)\n \n+        context_path = '/'.join(context.getPhysicalPath())\n+\n         # now add the content to results\n         for item in rawresult:\n-            if not navigation_settings.show_excluded_items:\n-                if item.exclude_from_nav:\n-                    continue\n+            if item.exclude_from_nav and not context_path.startswith(item.getPath()):  # noqa: E501\n+                # skip excluded items if they're not in our context path\n+                continue\n             cid, item_url = _get_url(item)\n             data = {\n                 'name': utils.pretty_title_or_id(context, item),\ndiff --git a/Products/CMFPlone/tests/testNavigationView.py b/Products/CMFPlone/tests/testNavigationView.py\nindex e18f08897..bc343ce22 100644\n--- a/Products/CMFPlone/tests/testNavigationView.py\n+++ b/Products/CMFPlone/tests/testNavigationView.py\n@@ -596,28 +596,25 @@ def testDisableFolderTabs(self):\n         self.assertEqual(tabs, [])\n \n     def testTabsExcludeItemsWithExcludeProperty(self):\n-        # Make sure that items witht he exclude_from_nav property are purged\n-        view = self.view_class(self.portal, self.request.clone())\n-        tabs = view.topLevelTabs(actions=[])\n-        orig_len = len(tabs)\n         self.portal.folder2.exclude_from_nav = True\n         self.portal.folder2.reindexObject()\n \n-        # For the moment nothing changes because the default for\n-        # plone.show_excluded_items is True\n-        view = self.view_class(self.portal, self.request.clone())\n+        # if we're not in context of the excluded item it should disappear\n+        view = self.view_class(self.portal, self.request)\n+        tabs = view.topLevelTabs(actions=[])\n+        tab_names = [t['id'] for t in tabs]\n+        self.assertNotIn('folder2', tab_names)\n+\n+        # but if we're inside, it should be visible\n+        view = self.view_class(self.portal.folder2, self.request)\n         tabs = view.topLevelTabs(actions=[])\n-        self.assertTrue(tabs)\n-        self.assertEqual(len(tabs), orig_len)\n         tab_names = [t['id'] for t in tabs]\n         self.assertIn('folder2', tab_names)\n \n         # Now we flip the setting for plone.show_excluded_items\n         self.navigation_settings.show_excluded_items = False\n-        view = self.view_class(self.portal, self.request)\n+        view = self.view_class(self.portal.folder2, self.request)\n         tabs = view.topLevelTabs(actions=[])\n-        self.assertTrue(tabs)\n-        self.assertEqual(len(tabs), orig_len - 1)\n         tab_names = [t['id'] for t in tabs]\n         self.assertNotIn('folder2', tab_names)\n \ndiff --git a/news/2828.bugfix b/news/2828.bugfix\nnew file mode 100644\nindex 000000000..9971ac605\n--- /dev/null\n+++ b/news/2828.bugfix\n@@ -0,0 +1,2 @@\n+restore ``exclude_from_nav`` combined with ``show_excluded_items`` handling\n+[petschki]\n"

