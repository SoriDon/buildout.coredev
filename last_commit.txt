Repository: plone.portlet.static


Branch: refs/heads/master
Date: 2022-11-30T04:14:19+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.portlet.static/commit/5b21639f946cc3bc95f21027001045221a38a27c

chore: run pyupgrade --py38-plus

Files changed:
M plone/portlet/__init__.py
M plone/portlet/static/__init__.py
M plone/portlet/static/static.py
M plone/portlet/static/testing.py
M plone/portlet/static/tests/__init__.py
M plone/portlet/static/tests/test_portlet_static.py

b'diff --git a/plone/portlet/__init__.py b/plone/portlet/__init__.py\nindex 68c04af..de40ea7 100644\n--- a/plone/portlet/__init__.py\n+++ b/plone/portlet/__init__.py\n@@ -1,2 +1 @@\n-# -*- coding: utf-8 -*-\n __import__(\'pkg_resources\').declare_namespace(__name__)\ndiff --git a/plone/portlet/static/__init__.py b/plone/portlet/static/__init__.py\nindex 0c37cfb..45a4f72 100644\n--- a/plone/portlet/static/__init__.py\n+++ b/plone/portlet/static/__init__.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n from AccessControl.Permission import addPermission\n from zope.i18nmessageid import MessageFactory\n \ndiff --git a/plone/portlet/static/static.py b/plone/portlet/static/static.py\nindex 5a4514e..75cdf2c 100644\n--- a/plone/portlet/static/static.py\n+++ b/plone/portlet/static/static.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n from Acquisition import aq_inner\n from plone.app.portlets.portlets import base\n from plone.app.textfield import RichText\n@@ -32,35 +31,35 @@ class IStaticPortlet(IPortletDataProvider):\n     """\n \n     header = schema.TextLine(\n-        title=_(u"Portlet header"),\n-        description=_(u"Title of the rendered portlet"),\n+        title=_("Portlet header"),\n+        description=_("Title of the rendered portlet"),\n         constraint=re.compile(r"[^\\s]").match,\n         required=False)\n \n     directives.widget(text=RichTextFieldWidget)\n     text = RichText(\n-        title=_(u"Text"),\n-        description=_(u"The text to render"),\n+        title=_("Text"),\n+        description=_("The text to render"),\n         required=True)\n \n     omit_border = schema.Bool(\n-        title=_(u"Omit portlet border"),\n+        title=_("Omit portlet border"),\n         description=_(\n-            u"Tick this box if you want to render the text above "\n+            "Tick this box if you want to render the text above "\n             "without the standard header, border or footer."\n         ),\n         required=False,\n         default=False)\n \n     footer = schema.TextLine(\n-        title=_(u"Portlet footer"),\n-        description=_(u"Text to be shown in the footer"),\n+        title=_("Portlet footer"),\n+        description=_("Text to be shown in the footer"),\n         required=False)\n \n     more_url = schema.ASCIILine(\n-        title=_(u"Details link"),\n+        title=_("Details link"),\n         description=_(\n-            u"If given, the header and footer will link to this URL."\n+            "If given, the header and footer will link to this URL."\n         ),\n         required=False)\n \n@@ -73,13 +72,13 @@ class Assignment(base.Assignment):\n     with columns.\n     """\n \n-    header = _(u"title_static_portlet", default=u"Static text portlet")\n-    text = u""\n+    header = _("title_static_portlet", default="Static text portlet")\n+    text = ""\n     omit_border = False\n-    footer = u""\n+    footer = ""\n     more_url = \'\'\n \n-    def __init__(self, header=u"", text=u"", omit_border=False, footer=u"",\n+    def __init__(self, header="", text="", omit_border=False, footer="",\n                  more_url=\'\'):\n         self.header = header\n         self.text = text\n@@ -93,7 +92,7 @@ def title(self):\n         "manage portlets" screen. Here, we use the title that the user gave or\n         static string if title not defined.\n         """\n-        return self.header or _(u\'portlet_static\', default=u"Static Portlet")\n+        return self.header or _(\'portlet_static\', default="Static Portlet")\n \n \n class Renderer(base.Renderer):\n@@ -131,7 +130,7 @@ def transformed(self, mt=\'text/x-html-safe\'):\n         if isinstance(orig, RichTextValue):\n             orig = orig.raw\n \n-        if not isinstance(orig, six.text_type):\n+        if not isinstance(orig, str):\n             # Apply a potentially lossy transformation, and hope we stored\n             # utf-8 text. There were bugs in earlier versions of this portlet\n             # which stored text directly as sent by the browser, which could\n@@ -143,7 +142,7 @@ def transformed(self, mt=\'text/x-html-safe\'):\n             )\n \n         # Portal transforms on py2 needs encoded strings\n-        if six.PY2 and isinstance(orig, six.text_type):\n+        if six.PY2 and isinstance(orig, str):\n             orig = orig.encode(\'utf-8\')\n \n         transformer = getToolByName(context, \'portal_transforms\')\n@@ -170,10 +169,10 @@ class AddForm(base.AddForm):\n     """\n     schema = IStaticPortlet\n \n-    label = _(u"title_add_static_portlet", default=u"Add static text portlet")\n+    label = _("title_add_static_portlet", default="Add static text portlet")\n     description = _(\n-        u"description_static_portlet",\n-        default=u"A portlet which can display static HTML text."\n+        "description_static_portlet",\n+        default="A portlet which can display static HTML text."\n     )\n \n     def create(self, data):\n@@ -188,10 +187,10 @@ class EditForm(base.EditForm):\n     schema = IStaticPortlet\n \n     label = _(\n-        u"title_edit_static_portlet",\n-        default=u"Edit static text portlet"\n+        "title_edit_static_portlet",\n+        default="Edit static text portlet"\n     )\n     description = _(\n-        u"description_static_portlet",\n-        default=u"A portlet which can display static HTML text."\n+        "description_static_portlet",\n+        default="A portlet which can display static HTML text."\n     )\ndiff --git a/plone/portlet/static/testing.py b/plone/portlet/static/testing.py\nindex 8b49af5..3356081 100644\n--- a/plone/portlet/static/testing.py\n+++ b/plone/portlet/static/testing.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n from plone.app.testing import PloneSandboxLayer\n from plone.app.testing import applyProfile\n from plone.app.testing.layers import IntegrationTesting\ndiff --git a/plone/portlet/static/tests/__init__.py b/plone/portlet/static/tests/__init__.py\nindex 40a96af..e69de29 100644\n--- a/plone/portlet/static/tests/__init__.py\n+++ b/plone/portlet/static/tests/__init__.py\n@@ -1 +0,0 @@\n-# -*- coding: utf-8 -*-\ndiff --git a/plone/portlet/static/tests/test_portlet_static.py b/plone/portlet/static/tests/test_portlet_static.py\nindex 4bb00d9..61e0daa 100644\n--- a/plone/portlet/static/tests/test_portlet_static.py\n+++ b/plone/portlet/static/tests/test_portlet_static.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n from plone.app.portlets.storage import PortletAssignmentMapping\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import TEST_USER_NAME\n@@ -45,7 +44,7 @@ def testPortletTypeRegistered(self):\n         self.assertEqual(portlet.addview, \'plone.portlet.static.Static\')\n \n     def testInterfaces(self):\n-        portlet = static.Assignment(header=u"title", text="text")\n+        portlet = static.Assignment(header="title", text="text")\n         self.assertTrue(IPortletAssignment.providedBy(portlet))\n         self.assertTrue(IPortletDataProvider.providedBy(portlet.data))\n \n@@ -59,7 +58,7 @@ def testInvokeAddview(self):\n         addview = mapping.restrictedTraverse(\'+/\' + portlet.addview)\n \n         addview.createAndAdd(\n-            data={\'header\': u"test title", \'text\': u"test text"}\n+            data={\'header\': "test title", \'text\': "test text"}\n         )\n \n         self.assertEqual(len(mapping), 1)\n@@ -69,7 +68,7 @@ def testInvokeEditView(self):\n         mapping = PortletAssignmentMapping()\n         request = self.portal.REQUEST\n \n-        mapping[\'foo\'] = static.Assignment(header=u"title", text="text")\n+        mapping[\'foo\'] = static.Assignment(header="title", text="text")\n         editview = getMultiAdapter((mapping[\'foo\'], request), name=\'edit\')\n         self.assertTrue(isinstance(editview, static.EditForm))\n \n@@ -82,7 +81,7 @@ def testRenderer(self):\n             name=\'plone.rightcolumn\',\n             context=self.portal\n         )\n-        assignment = static.Assignment(header=u"title", text="text")\n+        assignment = static.Assignment(header="title", text="text")\n \n         renderer = getMultiAdapter(\n             (context, request, view, manager, assignment),\n@@ -114,7 +113,7 @@ def renderer(self, context=None, request=None, view=None, manager=None,\n             context=self.portal\n         )\n         assignment = assignment or static.Assignment(\n-            header=u"title",\n+            header="title",\n             text="text"\n         )\n         ren = getMultiAdapter(\n@@ -130,7 +129,7 @@ def test_render(self):\n         r = self.renderer(\n             context=self.portal,\n             assignment=static.Assignment(\n-                header=u"title",\n+                header="title",\n                 text="<b>text</b>"\n             )\n         )\n@@ -156,7 +155,7 @@ def test_css_class(self):\n         r = self.renderer(\n             context=self.portal,\n             assignment=static.Assignment(\n-                header=u"Welcome text",\n+                header="Welcome text",\n                 text="<b>text</b>"\n             )\n         )\n'

Repository: plone.portlet.static


Branch: refs/heads/master
Date: 2022-11-30T04:15:24+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.portlet.static/commit/903242f88528701b8a19d10a399915edf812d990

fix: remove six dependency

Files changed:
M plone/portlet/static/static.py
M setup.py

b'diff --git a/plone/portlet/static/static.py b/plone/portlet/static/static.py\nindex 75cdf2c..1911442 100644\n--- a/plone/portlet/static/static.py\n+++ b/plone/portlet/static/static.py\n@@ -16,7 +16,6 @@\n \n import logging\n import re\n-import six\n \n \n logger = logging.getLogger(\'plone.portlet.static\')\n@@ -141,10 +140,6 @@ def transformed(self, mt=\'text/x-html-safe\'):\n                 "Assuming utf-8 encoding." % context.absolute_url()\n             )\n \n-        # Portal transforms on py2 needs encoded strings\n-        if six.PY2 and isinstance(orig, str):\n-            orig = orig.encode(\'utf-8\')\n-\n         transformer = getToolByName(context, \'portal_transforms\')\n         transformer_context = context\n         if hasattr(self, \'__portlet_metadata__\'):\ndiff --git a/setup.py b/setup.py\nindex 3532495..fafdd4d 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -58,7 +58,6 @@ def read(*rnames):\n         "plone.app.portlets",\n         "plone.app.textfield",\n         "plone.i18n",\n-        \'six\',\n         \'zope.component\',\n         \'zope.i18nmessageid\',\n         \'zope.interface\',\n'

Repository: plone.portlet.static


Branch: refs/heads/master
Date: 2022-11-30T04:17:21+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.portlet.static/commit/0e99f1f7fd68ce71ec36c4a4129cd78ac50f1a14

Add news entry

Files changed:
A news/1.bugfix

b'diff --git a/news/1.bugfix b/news/1.bugfix\nnew file mode 100644\nindex 0000000..5d232da\n--- /dev/null\n+++ b/news/1.bugfix\n@@ -0,0 +1,2 @@\n+Remove six dependency.\n+[gforcada]\n'

Repository: plone.portlet.static


Branch: refs/heads/master
Date: 2022-11-30T06:39:22+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.portlet.static/commit/5bf7d35cc12b030a7f6af6505eea73323b742aae

Merge pull request #24 from plone/remove-six

Remove six

Files changed:
A news/1.bugfix
M plone/portlet/__init__.py
M plone/portlet/static/__init__.py
M plone/portlet/static/static.py
M plone/portlet/static/testing.py
M plone/portlet/static/tests/__init__.py
M plone/portlet/static/tests/test_portlet_static.py
M setup.py

b'diff --git a/news/1.bugfix b/news/1.bugfix\nnew file mode 100644\nindex 0000000..5d232da\n--- /dev/null\n+++ b/news/1.bugfix\n@@ -0,0 +1,2 @@\n+Remove six dependency.\n+[gforcada]\ndiff --git a/plone/portlet/__init__.py b/plone/portlet/__init__.py\nindex 68c04af..de40ea7 100644\n--- a/plone/portlet/__init__.py\n+++ b/plone/portlet/__init__.py\n@@ -1,2 +1 @@\n-# -*- coding: utf-8 -*-\n __import__(\'pkg_resources\').declare_namespace(__name__)\ndiff --git a/plone/portlet/static/__init__.py b/plone/portlet/static/__init__.py\nindex 0c37cfb..45a4f72 100644\n--- a/plone/portlet/static/__init__.py\n+++ b/plone/portlet/static/__init__.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n from AccessControl.Permission import addPermission\n from zope.i18nmessageid import MessageFactory\n \ndiff --git a/plone/portlet/static/static.py b/plone/portlet/static/static.py\nindex 5a4514e..1911442 100644\n--- a/plone/portlet/static/static.py\n+++ b/plone/portlet/static/static.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n from Acquisition import aq_inner\n from plone.app.portlets.portlets import base\n from plone.app.textfield import RichText\n@@ -17,7 +16,6 @@\n \n import logging\n import re\n-import six\n \n \n logger = logging.getLogger(\'plone.portlet.static\')\n@@ -32,35 +30,35 @@ class IStaticPortlet(IPortletDataProvider):\n     """\n \n     header = schema.TextLine(\n-        title=_(u"Portlet header"),\n-        description=_(u"Title of the rendered portlet"),\n+        title=_("Portlet header"),\n+        description=_("Title of the rendered portlet"),\n         constraint=re.compile(r"[^\\s]").match,\n         required=False)\n \n     directives.widget(text=RichTextFieldWidget)\n     text = RichText(\n-        title=_(u"Text"),\n-        description=_(u"The text to render"),\n+        title=_("Text"),\n+        description=_("The text to render"),\n         required=True)\n \n     omit_border = schema.Bool(\n-        title=_(u"Omit portlet border"),\n+        title=_("Omit portlet border"),\n         description=_(\n-            u"Tick this box if you want to render the text above "\n+            "Tick this box if you want to render the text above "\n             "without the standard header, border or footer."\n         ),\n         required=False,\n         default=False)\n \n     footer = schema.TextLine(\n-        title=_(u"Portlet footer"),\n-        description=_(u"Text to be shown in the footer"),\n+        title=_("Portlet footer"),\n+        description=_("Text to be shown in the footer"),\n         required=False)\n \n     more_url = schema.ASCIILine(\n-        title=_(u"Details link"),\n+        title=_("Details link"),\n         description=_(\n-            u"If given, the header and footer will link to this URL."\n+            "If given, the header and footer will link to this URL."\n         ),\n         required=False)\n \n@@ -73,13 +71,13 @@ class Assignment(base.Assignment):\n     with columns.\n     """\n \n-    header = _(u"title_static_portlet", default=u"Static text portlet")\n-    text = u""\n+    header = _("title_static_portlet", default="Static text portlet")\n+    text = ""\n     omit_border = False\n-    footer = u""\n+    footer = ""\n     more_url = \'\'\n \n-    def __init__(self, header=u"", text=u"", omit_border=False, footer=u"",\n+    def __init__(self, header="", text="", omit_border=False, footer="",\n                  more_url=\'\'):\n         self.header = header\n         self.text = text\n@@ -93,7 +91,7 @@ def title(self):\n         "manage portlets" screen. Here, we use the title that the user gave or\n         static string if title not defined.\n         """\n-        return self.header or _(u\'portlet_static\', default=u"Static Portlet")\n+        return self.header or _(\'portlet_static\', default="Static Portlet")\n \n \n class Renderer(base.Renderer):\n@@ -131,7 +129,7 @@ def transformed(self, mt=\'text/x-html-safe\'):\n         if isinstance(orig, RichTextValue):\n             orig = orig.raw\n \n-        if not isinstance(orig, six.text_type):\n+        if not isinstance(orig, str):\n             # Apply a potentially lossy transformation, and hope we stored\n             # utf-8 text. There were bugs in earlier versions of this portlet\n             # which stored text directly as sent by the browser, which could\n@@ -142,10 +140,6 @@ def transformed(self, mt=\'text/x-html-safe\'):\n                 "Assuming utf-8 encoding." % context.absolute_url()\n             )\n \n-        # Portal transforms on py2 needs encoded strings\n-        if six.PY2 and isinstance(orig, six.text_type):\n-            orig = orig.encode(\'utf-8\')\n-\n         transformer = getToolByName(context, \'portal_transforms\')\n         transformer_context = context\n         if hasattr(self, \'__portlet_metadata__\'):\n@@ -170,10 +164,10 @@ class AddForm(base.AddForm):\n     """\n     schema = IStaticPortlet\n \n-    label = _(u"title_add_static_portlet", default=u"Add static text portlet")\n+    label = _("title_add_static_portlet", default="Add static text portlet")\n     description = _(\n-        u"description_static_portlet",\n-        default=u"A portlet which can display static HTML text."\n+        "description_static_portlet",\n+        default="A portlet which can display static HTML text."\n     )\n \n     def create(self, data):\n@@ -188,10 +182,10 @@ class EditForm(base.EditForm):\n     schema = IStaticPortlet\n \n     label = _(\n-        u"title_edit_static_portlet",\n-        default=u"Edit static text portlet"\n+        "title_edit_static_portlet",\n+        default="Edit static text portlet"\n     )\n     description = _(\n-        u"description_static_portlet",\n-        default=u"A portlet which can display static HTML text."\n+        "description_static_portlet",\n+        default="A portlet which can display static HTML text."\n     )\ndiff --git a/plone/portlet/static/testing.py b/plone/portlet/static/testing.py\nindex 8b49af5..3356081 100644\n--- a/plone/portlet/static/testing.py\n+++ b/plone/portlet/static/testing.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n from plone.app.testing import PloneSandboxLayer\n from plone.app.testing import applyProfile\n from plone.app.testing.layers import IntegrationTesting\ndiff --git a/plone/portlet/static/tests/__init__.py b/plone/portlet/static/tests/__init__.py\nindex 40a96af..e69de29 100644\n--- a/plone/portlet/static/tests/__init__.py\n+++ b/plone/portlet/static/tests/__init__.py\n@@ -1 +0,0 @@\n-# -*- coding: utf-8 -*-\ndiff --git a/plone/portlet/static/tests/test_portlet_static.py b/plone/portlet/static/tests/test_portlet_static.py\nindex 4bb00d9..61e0daa 100644\n--- a/plone/portlet/static/tests/test_portlet_static.py\n+++ b/plone/portlet/static/tests/test_portlet_static.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n from plone.app.portlets.storage import PortletAssignmentMapping\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import TEST_USER_NAME\n@@ -45,7 +44,7 @@ def testPortletTypeRegistered(self):\n         self.assertEqual(portlet.addview, \'plone.portlet.static.Static\')\n \n     def testInterfaces(self):\n-        portlet = static.Assignment(header=u"title", text="text")\n+        portlet = static.Assignment(header="title", text="text")\n         self.assertTrue(IPortletAssignment.providedBy(portlet))\n         self.assertTrue(IPortletDataProvider.providedBy(portlet.data))\n \n@@ -59,7 +58,7 @@ def testInvokeAddview(self):\n         addview = mapping.restrictedTraverse(\'+/\' + portlet.addview)\n \n         addview.createAndAdd(\n-            data={\'header\': u"test title", \'text\': u"test text"}\n+            data={\'header\': "test title", \'text\': "test text"}\n         )\n \n         self.assertEqual(len(mapping), 1)\n@@ -69,7 +68,7 @@ def testInvokeEditView(self):\n         mapping = PortletAssignmentMapping()\n         request = self.portal.REQUEST\n \n-        mapping[\'foo\'] = static.Assignment(header=u"title", text="text")\n+        mapping[\'foo\'] = static.Assignment(header="title", text="text")\n         editview = getMultiAdapter((mapping[\'foo\'], request), name=\'edit\')\n         self.assertTrue(isinstance(editview, static.EditForm))\n \n@@ -82,7 +81,7 @@ def testRenderer(self):\n             name=\'plone.rightcolumn\',\n             context=self.portal\n         )\n-        assignment = static.Assignment(header=u"title", text="text")\n+        assignment = static.Assignment(header="title", text="text")\n \n         renderer = getMultiAdapter(\n             (context, request, view, manager, assignment),\n@@ -114,7 +113,7 @@ def renderer(self, context=None, request=None, view=None, manager=None,\n             context=self.portal\n         )\n         assignment = assignment or static.Assignment(\n-            header=u"title",\n+            header="title",\n             text="text"\n         )\n         ren = getMultiAdapter(\n@@ -130,7 +129,7 @@ def test_render(self):\n         r = self.renderer(\n             context=self.portal,\n             assignment=static.Assignment(\n-                header=u"title",\n+                header="title",\n                 text="<b>text</b>"\n             )\n         )\n@@ -156,7 +155,7 @@ def test_css_class(self):\n         r = self.renderer(\n             context=self.portal,\n             assignment=static.Assignment(\n-                header=u"Welcome text",\n+                header="Welcome text",\n                 text="<b>text</b>"\n             )\n         )\ndiff --git a/setup.py b/setup.py\nindex 3532495..fafdd4d 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -58,7 +58,6 @@ def read(*rnames):\n         "plone.app.portlets",\n         "plone.app.textfield",\n         "plone.i18n",\n-        \'six\',\n         \'zope.component\',\n         \'zope.i18nmessageid\',\n         \'zope.interface\',\n'

