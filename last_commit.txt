Repository: plone.app.theming


Branch: refs/heads/master
Date: 2022-01-28T18:30:53+01:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/plone.app.theming/commit/5fed9466c374fc5887cea716aa2c59b7de29ca46

Load barceloneta css in theming control panel to have it styled

Files changed:
M src/plone/app/theming/browser/controlpanel.pt

b'diff --git a/src/plone/app/theming/browser/controlpanel.pt b/src/plone/app/theming/browser/controlpanel.pt\nindex 5960671..b3b2fd5 100644\n--- a/src/plone/app/theming/browser/controlpanel.pt\n+++ b/src/plone/app/theming/browser/controlpanel.pt\n@@ -23,6 +23,11 @@\n \n     <div tal:replace="structure provider:plone.htmlhead" />\n     <link tal:replace="structure provider:plone.htmlhead.links" />\n+    <link\n+        rel="stylesheet"\n+        type="text/css"\n+        tal:attributes="href string:${context/portal_url}/++theme++barceloneta/css/barceloneta.min.css"\n+        />\n     <link\n         rel="stylesheet"\n         type="text/css"\n'

Repository: plone.app.theming


Branch: refs/heads/master
Date: 2022-01-28T18:30:53+01:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/plone.app.theming/commit/80f01630fc05e3e0913206517c67d5bc27911650

Deactivate copy button and modal in theming control panel

Files changed:
M src/plone/app/theming/browser/controlpanel.pt

b'diff --git a/src/plone/app/theming/browser/controlpanel.pt b/src/plone/app/theming/browser/controlpanel.pt\nindex b3b2fd5..a40bcb1 100644\n--- a/src/plone/app/theming/browser/controlpanel.pt\n+++ b/src/plone/app/theming/browser/controlpanel.pt\n@@ -186,11 +186,12 @@\n                                     name="form.button.InvalidateCache">Clear Cache</button>\n                             </form>\n \n-                            <a href="#" class="plone-btn plone-btn-default pat-plone-modal"\n+                            <!-- <a class="plone-btn plone-btn-default pat-plone-modal"\n+                                data-pat-plone-modal="{\'buttons\': [\'.plone-btn\']}"\n                                 tal:attributes="href python:\'#modal-copy-{0}\'.format(theme[\'name\'].replace(\'.\', \'-\'))"\n-                                i18n:translate="">Copy</a>\n+                                i18n:translate="">Copy</a> -->\n                             <!-- Copy theme overlay -->\n-                            <div class="plone-modal"\n+                            <!-- <div class="modal"\n                                 tal:attributes="id python:\'modal-copy-{0}\'.format(theme[\'name\'].replace(\'.\', \'-\'))">\n                                 <h1 id="overlayTitleCopyTheme" class="documentFirstHeading" i18n:translate="theming_controlpanel_copy_theme">Create copy of <span i18n:name="theme_name"\n                                     tal:content="string:${theme/name}"></span></h1>\n@@ -267,7 +268,7 @@\n                                     <input tal:replace="structure context/@@authenticator/authenticator" />\n \n                                 </form>\n-                            </div>\n+                            </div> -->\n \n                             <form method="get" target="_blank" tal:attributes="action string:${context/absolute_url}/++theme++${theme/name}/@@download-zip">\n                                 <button i18n:translate=""\n'

Repository: plone.app.theming


Branch: refs/heads/master
Date: 2022-01-28T18:30:53+01:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/plone.app.theming/commit/504be45ddcb731fe77336a61ef37642b51bdc256

Use pat-code-editor for custom-css field

Files changed:
A news/205.feature
M src/plone/app/theming/browser/controlpanel.pt
M src/plone/app/theming/browser/resources/controlpanel.css

b'diff --git a/news/205.feature b/news/205.feature\nnew file mode 100644\nindex 0000000..6c62b06\n--- /dev/null\n+++ b/news/205.feature\n@@ -0,0 +1,3 @@\n+- Use pat-code-editor for custom-css field [MrTango]\n+- Deactivate copy button and modal in theming control panel [MrTango]\n+- Load barceloneta css in theming control panel to have it styled [MrTango]\ndiff --git a/src/plone/app/theming/browser/controlpanel.pt b/src/plone/app/theming/browser/controlpanel.pt\nindex a40bcb1..7d2cf08 100644\n--- a/src/plone/app/theming/browser/controlpanel.pt\n+++ b/src/plone/app/theming/browser/controlpanel.pt\n@@ -617,6 +617,8 @@\n                             placeholder="Put your plain css..."\n                             i18n:attributes="placeholder"\n                             tal:content="custom_css"\n+                            class="pat-code-editor"\n+                            data-pat-code-editor="language: css; theme: tomorrow"\n                             ></textarea>\n \n                     </div>\ndiff --git a/src/plone/app/theming/browser/resources/controlpanel.css b/src/plone/app/theming/browser/resources/controlpanel.css\nindex 981ef5d..0bec723 100644\n--- a/src/plone/app/theming/browser/resources/controlpanel.css\n+++ b/src/plone/app/theming/browser/resources/controlpanel.css\n@@ -2,10 +2,14 @@ body {\n     font-family: Roboto, sans-serif;\n }\n \n+\n body a {\n     color: #888\n }\n \n+body aside, body article{\n+    padding: 1rem;\n+}\n fieldset {\n     color: #333;\n }\n'

Repository: plone.app.theming


Branch: refs/heads/master
Date: 2022-01-28T18:30:53+01:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/plone.app.theming/commit/b1d353a6ca10a3792244f32045531a34ba7b0643

Improve theming-controlpanel layout, fix modals

Files changed:
M src/plone/app/theming/browser/controlpanel.pt

b'diff --git a/src/plone/app/theming/browser/controlpanel.pt b/src/plone/app/theming/browser/controlpanel.pt\nindex 7d2cf08..a42a349 100644\n--- a/src/plone/app/theming/browser/controlpanel.pt\n+++ b/src/plone/app/theming/browser/controlpanel.pt\n@@ -97,22 +97,22 @@\n             or select an existing theme from a the list below.\n         </p>\n \n-        <div class="plone-btn-group">\n-            <a href="#overlay-new-theme" class="plone-btn plone-btn-large plone-btn-primary pat-plone-modal"\n+        <div class="btn-group">\n+            <!-- <a href="#overlay-new-theme" class="btn btn-large btn-primary pat-plone-modal"\n                 data-pat-plone-modal="width: 80%"\n-                i18n:translate="">New theme</a>\n+                i18n:translate="">New theme</a> -->\n \n-            <a href="#overlay-upload" class="plone-btn plone-btn-large plone-btn-primary pat-plone-modal"\n+            <a href="#overlay-upload" class="btn btn-large btn-primary pat-plone-modal"\n                 data-pat-plone-modal="width: 80%"\n                 i18n:translate="">Upload Zip file</a>\n \n             <a tal:attributes="href string:$site_url/test_rendering#top"\n-                class="plone-btn plone-btn-large plone-btn-primary"\n+                class="btn btn-large btn-primary"\n                 target="_blank"\n                 i18n:translate="">Test Styles</a>\n \n             <a tal:attributes="href string:$site_url/@@theming-controlpanel-help"\n-                class="plone-btn plone-btn-large plone-btn-primary pat-plone-modal"\n+                class="btn btn-large btn-primary pat-plone-modal"\n                 data-pat-plone-modal="\n                     width: 85%;\n                     loadLinksWithinModal: true;\n@@ -163,31 +163,31 @@\n                                 <button\n                                     tal:condition="not:theme/selected"\n                                     i18n:translate=""\n-                                    class="plone-btn plone-btn-default"\n+                                    class="btn btn-default"\n                                     type="submit"\n                                     name="form.button.Enable">Activate</button>\n                                 <button\n                                     tal:condition="theme/selected"\n                                     i18n:translate=""\n-                                    class="plone-btn plone-btn-default"\n+                                    class="btn btn-default"\n                                     type="submit"\n                                     name="form.button.Enable">Update</button>\n                                 <button\n                                     tal:condition="theme/selected"\n                                     i18n:translate=""\n-                                    class="plone-btn plone-btn-default"\n+                                    class="btn btn-default"\n                                     type="submit"\n                                     name="form.button.Disable">Deactivate</button>\n                                 <button\n                                     tal:condition="theme/selected"\n                                     i18n:translate=""\n-                                    class="plone-btn plone-btn-default"\n+                                    class="btn btn-default"\n                                     type="submit"\n                                     name="form.button.InvalidateCache">Clear Cache</button>\n                             </form>\n \n-                            <!-- <a class="plone-btn plone-btn-default pat-plone-modal"\n-                                data-pat-plone-modal="{\'buttons\': [\'.plone-btn\']}"\n+                            <!-- <a class="btn btn-default pat-plone-modal"\n+                                data-pat-plone-modal="{\'buttons\': [\'.btn\']}"\n                                 tal:attributes="href python:\'#modal-copy-{0}\'.format(theme[\'name\'].replace(\'.\', \'-\'))"\n                                 i18n:translate="">Copy</a> -->\n                             <!-- Copy theme overlay -->\n@@ -248,18 +248,18 @@\n                                         </div>\n                                     </div>\n \n-                                    <div class="plone-btn-group">\n+                                    <div class="btn-group">\n                                         <input\n                                             type="submit"\n                                             name="form.button.CreateTheme"\n-                                            class="plone-btn plone-btn-success save"\n+                                            class="btn btn-success save"\n                                             value="Create"\n                                             i18n:attributes="value"\n                                             />\n                                         <input\n                                             type="submit"\n                                             name="form.button.Cancel"\n-                                            class="plone-btn plone-btn-default cancel"\n+                                            class="btn btn-default cancel"\n                                             value="Cancel"\n                                             i18n:attributes="value"\n                                             />\n@@ -272,19 +272,19 @@\n \n                             <form method="get" target="_blank" tal:attributes="action string:${context/absolute_url}/++theme++${theme/name}/@@download-zip">\n                                 <button i18n:translate=""\n-                                    class="plone-btn plone-btn-default">Download</button>\n+                                    class="btn btn-default">Download</button>\n                             </form>\n \n                             <form method="get" tal:attributes="action string:${context/portal_url}/++theme++${theme/name}/@@theming-controlpanel-mapper">\n                                 <button tal:condition="theme/editable"\n-                                    class="plone-btn plone-btn-default"\n+                                    class="btn btn-default"\n                                     i18n:translate="">Modify theme</button>\n                                 <button tal:condition="not:theme/editable"\n-                                    class="plone-btn plone-btn-default"\n+                                    class="btn btn-default"\n                                     i18n:translate="">Inspect theme</button>\n                             </form>\n \n-                            <a href="#" class="plone-btn plone-btn-danger pat-plone-modal"\n+                            <a href="#" class="btn btn-danger pat-plone-modal"\n                                 tal:condition="theme/editable"\n                                 tal:attributes="href string:#modal-delete-${theme/name}"\n                                 i18n:translate="">Delete</a>\n@@ -308,17 +308,17 @@\n                                     <input type="hidden" name="themes:list"\n                                         id="deleteConfirmTheme"\n                                         tal:attributes="value string:${theme/name}" />\n-                                    <div class="plone-btn-group">\n+                                    <div class="btn-group">\n                                         <input\n                                             type="submit"\n                                             name="form.button.DeleteSelected"\n-                                            class="plone-btn plone-btn-danger save"\n+                                            class="btn btn-danger save"\n                                             value="Delete"\n                                             i18n:attributes="value"\n                                             />\n                                         <input\n                                             type="submit"\n-                                            class="plone-btn plone-btn-default cancel"\n+                                            class="btn btn-default cancel"\n                                             name="form.button.Cancel"\n                                             value="Cancel"\n                                             i18n:attributes="value"\n@@ -626,18 +626,18 @@\n             </div>\n \n \n-            <div class="plone-btn-group">\n+            <div class="btn-group">\n                 <input\n                     type="submit"\n                     name="form.button.AdvancedSave"\n-                    class="plone-btn plone-btn-success save"\n+                    class="btn btn-success save"\n                     value="Save"\n                     i18n:attributes="value" />\n \n                 <input\n                     type="submit"\n                     name="form.button.Cancel"\n-                    class="plone-btn plone-btn-default cancel"\n+                    class="btn btn-default cancel"\n                     value="Cancel"\n                     i18n:attributes="value" />\n             </div>\n@@ -653,7 +653,7 @@\n </div>\n \n <!-- New theme overlay -->\n-<div id="overlay-new-theme" class="plone-modal">\n+<!-- <div id="overlay-new-theme" class="plone-modal">\n     <h1 id="overlayTitleNewTheme"  class="documentFirstHeading" i18n:translate="theming_controlpanel_new_theme">New theme</h1>\n \n     <p class="documentDescription" i18n:translate="theming_controlpanel_new_theme_description">\n@@ -708,18 +708,18 @@\n             </div>\n         </div>\n \n-        <div class="plone-btn-group">\n+        <div class="btn-group">\n             <input\n                 type="submit"\n                 name="form.button.CreateTheme"\n-                class="plone-btn plone-btn-success save"\n+                class="btn btn-success save"\n                 value="Create"\n                 i18n:attributes="value"\n                 />\n             <input\n                 type="submit"\n                 name="form.button.Cancel"\n-                class="plone-btn plone-btn-default cancel"\n+                class="btn btn-default cancel"\n                 value="Cancel"\n                 i18n:attributes="value"\n                 />\n@@ -728,10 +728,10 @@\n         <input tal:replace="structure context/@@authenticator/authenticator" />\n \n     </form>\n-</div>\n+</div> -->\n \n <!-- Upload overlay -->\n-<div id="overlay-upload" class="plone-modal">\n+<div id="overlay-upload" class="modal">\n     <div>\n         <h1 class="documentFirstHeading" i18n:translate="theming_controlpanel_upload">Upload theme</h1>\n \n@@ -798,18 +798,18 @@\n                 </div>\n             </div>\n \n-            <div class="plone-btn-group">\n+            <div class="btn-group">\n                 <input\n                     type="submit"\n                     name="form.button.Import"\n-                    class="plone-btn plone-btn-success save"\n+                    class="btn btn-success save"\n                     value="Import"\n                     i18n:attributes="value" />\n \n                 <input\n                     type="submit"\n                     name="form.button.Cancel"\n-                    class="plone-btn plone-btn-default cancel"\n+                    class="btn btn-default cancel"\n                     value="Cancel"\n                     i18n:attributes="value" />\n             </div>\n'

Repository: plone.app.theming


Branch: refs/heads/master
Date: 2022-01-28T18:30:53+01:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/plone.app.theming/commit/b2a6f7718488c35c9221607158081d1e29bd3c20

improve themeing control panel styling

Files changed:
M src/plone/app/theming/browser/controlpanel.pt
M src/plone/app/theming/browser/resources/controlpanel.css

b'diff --git a/src/plone/app/theming/browser/controlpanel.pt b/src/plone/app/theming/browser/controlpanel.pt\nindex a42a349..e280f2b 100644\n--- a/src/plone/app/theming/browser/controlpanel.pt\n+++ b/src/plone/app/theming/browser/controlpanel.pt\n@@ -163,30 +163,30 @@\n                                 <button\n                                     tal:condition="not:theme/selected"\n                                     i18n:translate=""\n-                                    class="btn btn-default"\n+                                    class="btn btn-primary"\n                                     type="submit"\n                                     name="form.button.Enable">Activate</button>\n                                 <button\n                                     tal:condition="theme/selected"\n                                     i18n:translate=""\n-                                    class="btn btn-default"\n+                                    class="btn btn-primary"\n                                     type="submit"\n                                     name="form.button.Enable">Update</button>\n                                 <button\n                                     tal:condition="theme/selected"\n                                     i18n:translate=""\n-                                    class="btn btn-default"\n+                                    class="btn btn-secondary"\n                                     type="submit"\n                                     name="form.button.Disable">Deactivate</button>\n                                 <button\n                                     tal:condition="theme/selected"\n                                     i18n:translate=""\n-                                    class="btn btn-default"\n+                                    class="btn btn-primary"\n                                     type="submit"\n                                     name="form.button.InvalidateCache">Clear Cache</button>\n                             </form>\n \n-                            <!-- <a class="btn btn-default pat-plone-modal"\n+                            <!-- <a class="btn btn-primary pat-plone-modal"\n                                 data-pat-plone-modal="{\'buttons\': [\'.btn\']}"\n                                 tal:attributes="href python:\'#modal-copy-{0}\'.format(theme[\'name\'].replace(\'.\', \'-\'))"\n                                 i18n:translate="">Copy</a> -->\n@@ -259,7 +259,7 @@\n                                         <input\n                                             type="submit"\n                                             name="form.button.Cancel"\n-                                            class="btn btn-default cancel"\n+                                            class="btn btn-primary cancel"\n                                             value="Cancel"\n                                             i18n:attributes="value"\n                                             />\n@@ -272,15 +272,15 @@\n \n                             <form method="get" target="_blank" tal:attributes="action string:${context/absolute_url}/++theme++${theme/name}/@@download-zip">\n                                 <button i18n:translate=""\n-                                    class="btn btn-default">Download</button>\n+                                    class="btn btn-primary">Download</button>\n                             </form>\n \n                             <form method="get" tal:attributes="action string:${context/portal_url}/++theme++${theme/name}/@@theming-controlpanel-mapper">\n                                 <button tal:condition="theme/editable"\n-                                    class="btn btn-default"\n+                                    class="btn btn-primary"\n                                     i18n:translate="">Modify theme</button>\n                                 <button tal:condition="not:theme/editable"\n-                                    class="btn btn-default"\n+                                    class="btn btn-primary"\n                                     i18n:translate="">Inspect theme</button>\n                             </form>\n \n@@ -318,7 +318,7 @@\n                                             />\n                                         <input\n                                             type="submit"\n-                                            class="btn btn-default cancel"\n+                                            class="btn btn-primary cancel"\n                                             name="form.button.Cancel"\n                                             value="Cancel"\n                                             i18n:attributes="value"\n@@ -637,7 +637,7 @@\n                 <input\n                     type="submit"\n                     name="form.button.Cancel"\n-                    class="btn btn-default cancel"\n+                    class="btn btn-primary cancel"\n                     value="Cancel"\n                     i18n:attributes="value" />\n             </div>\n@@ -719,7 +719,7 @@\n             <input\n                 type="submit"\n                 name="form.button.Cancel"\n-                class="btn btn-default cancel"\n+                class="btn btn-primary cancel"\n                 value="Cancel"\n                 i18n:attributes="value"\n                 />\n@@ -809,7 +809,7 @@\n                 <input\n                     type="submit"\n                     name="form.button.Cancel"\n-                    class="btn btn-default cancel"\n+                    class="btn btn-primary cancel"\n                     value="Cancel"\n                     i18n:attributes="value" />\n             </div>\ndiff --git a/src/plone/app/theming/browser/resources/controlpanel.css b/src/plone/app/theming/browser/resources/controlpanel.css\nindex 0bec723..671c2c2 100644\n--- a/src/plone/app/theming/browser/resources/controlpanel.css\n+++ b/src/plone/app/theming/browser/resources/controlpanel.css\n@@ -36,7 +36,7 @@ fieldset label {\n     margin-bottom: 10px;\n }\n \n-a.plone-btn {\n+a.btn {\n     text-decoration: none;\n }\n \n@@ -114,6 +114,6 @@ a.plone-btn {\n     font-size: smaller;\n }\n \n-.plone-btn-group {\n+.btn-group {\n     margin: 10px;\n }\n'

Repository: plone.app.theming


Branch: refs/heads/master
Date: 2022-01-28T18:30:53+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/plone.app.theming/commit/071abfa538c43d2079bd404ae51c2c088171758a

PLIP 3211 - Remove references to lessc and less-variables.

Files changed:
M src/plone/app/theming/browser/mapper.py

b"diff --git a/src/plone/app/theming/browser/mapper.py b/src/plone/app/theming/browser/mapper.py\nindex 5008c35..ba6b25c 100644\n--- a/src/plone/app/theming/browser/mapper.py\n+++ b/src/plone/app/theming/browser/mapper.py\n@@ -84,14 +84,6 @@ def setup(self):\n         self.themeBasePathEncoded = urllib.parse.quote_plus(self.themeBasePath)\n         self.themeBaseUrl = '/'.join([self.portalUrl, self.themeBasePath])\n \n-        try:\n-            registry = getUtility(IRegistry)\n-            self.lessUrl = registry['plone.resources.lessc']\n-            self.lessVariables = self.portalUrl + '/' + registry['plone.resources.less-variables']\n-        except:\n-            self.lessUrl = None\n-            self.lessVariables = None\n-\n         self.editable = IWritableResourceDirectory.providedBy(\n             self.resourceDirectory\n         )\n@@ -130,8 +122,6 @@ def get_thememapper_config(self):\n         config = {\n             'themeUrl': self.resourceUrl,\n             'editable': self.editable,\n-            'lessUrl': self.lessUrl,\n-            'lessVariables': self.lessVariables,\n             'filemanagerConfig': {\n                 'actionUrl': '{0}/@@plone.resourceeditor.filemanager-actions'.format(  # noqa\n                     self.themeBaseUrl\n"

Repository: plone.app.theming


Branch: refs/heads/master
Date: 2022-01-28T18:30:53+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.theming/commit/d22bdbe2058c2afb82dbafb6b5d9c30bed63d566

Remove all thememapper functionality from theming control panel.

This includes removing the Inspect/Modify theme buttons and the Preview.
These were not working anymore.

Files changed:
M news/205.feature
M src/plone/app/theming/browser/configure.zcml
M src/plone/app/theming/browser/controlpanel.pt
M src/plone/app/theming/browser/controlpanel.py
D src/plone/app/theming/browser/mapper.pt
D src/plone/app/theming/browser/mapper.py

b'diff --git a/news/205.feature b/news/205.feature\nindex 6c62b06..7a546d8 100644\n--- a/news/205.feature\n+++ b/news/205.feature\n@@ -1,3 +1,5 @@\n - Use pat-code-editor for custom-css field [MrTango]\n - Deactivate copy button and modal in theming control panel [MrTango]\n - Load barceloneta css in theming control panel to have it styled [MrTango]\n+- Remove all thememapper functionality from theming control panel,\n+  including Inspect/Modify theme and the Preview. [maurits]\ndiff --git a/src/plone/app/theming/browser/configure.zcml b/src/plone/app/theming/browser/configure.zcml\nindex 8ff8a1e..799374a 100644\n--- a/src/plone/app/theming/browser/configure.zcml\n+++ b/src/plone/app/theming/browser/configure.zcml\n@@ -31,22 +31,6 @@\n         permission="zope2.View"\n         />\n \n-    <browser:page\n-        name="theming-controlpanel-mapper"\n-        for="plone.resource.interfaces.IResourceDirectory"\n-        class=".mapper.ThemeMapper"\n-        template="mapper.pt"\n-        permission="plone.app.controlpanel.Themes"\n-        />\n-\n-    <browser:page\n-        name="theming-controlpanel-mapper-getframe"\n-        for="plone.resource.interfaces.IResourceDirectory"\n-        class=".mapper.ThemeMapper"\n-        attribute="getFrame"\n-        permission="plone.app.controlpanel.Themes"\n-        />\n-\n \t<browser:page\n         name="themeFileUpload"\n         for="*"\ndiff --git a/src/plone/app/theming/browser/controlpanel.pt b/src/plone/app/theming/browser/controlpanel.pt\nindex e280f2b..2ddbeb7 100644\n--- a/src/plone/app/theming/browser/controlpanel.pt\n+++ b/src/plone/app/theming/browser/controlpanel.pt\n@@ -142,16 +142,9 @@\n \n                     <div class="themeEntryWrapper">\n \n-                        <a class="previewImageContainer"\n-                            title="Click to view a live preview. Forms will be disabled in the preview."\n-                            i18n:attributes="title tooltip_theme_preview"\n-                            tal:attributes="href string:${context/portal_url}/++theme++${theme/name}/@@theming-controlpanel-mapper-getframe?path=/&amp;theme=apply&amp;forms=disable&amp;links=replace&amp;title=Preview:+${theme/title}"\n-                            target="_new"\n-                            href="#">\n-                            <img\n-                                tal:attributes="src theme/preview"\n-                                />\n-                        </a>\n+                        <div class="previewImageContainer">\n+                            <img tal:attributes="src theme/preview" />\n+                        </div>\n \n                         <div class="themeDescription" tal:content="theme/description" />\n \n@@ -186,110 +179,18 @@\n                                     name="form.button.InvalidateCache">Clear Cache</button>\n                             </form>\n \n-                            <!-- <a class="btn btn-primary pat-plone-modal"\n-                                data-pat-plone-modal="{\'buttons\': [\'.btn\']}"\n-                                tal:attributes="href python:\'#modal-copy-{0}\'.format(theme[\'name\'].replace(\'.\', \'-\'))"\n-                                i18n:translate="">Copy</a> -->\n-                            <!-- Copy theme overlay -->\n-                            <!-- <div class="modal"\n-                                tal:attributes="id python:\'modal-copy-{0}\'.format(theme[\'name\'].replace(\'.\', \'-\'))">\n-                                <h1 id="overlayTitleCopyTheme" class="documentFirstHeading" i18n:translate="theming_controlpanel_copy_theme">Create copy of <span i18n:name="theme_name"\n-                                    tal:content="string:${theme/name}"></span></h1>\n-\n-                                <p class="documentDescription" i18n:translate="theming_controlpanel_new_theme_description">\n-                                    Please enter the details of your new theme\n-                                </p>\n-\n-                                <form name="create" method="post" tal:attributes="action request/URL" tal:define="errors view/errors">\n-\n-                                    <div\n-                                        tal:define="error errors/title | nothing"\n-                                        tal:attributes="class python:\'field error\' if error else \'field\'">\n-\n-                                        <label for="title" i18n:translate="label_new_theme_title">Title</label>\n-                                        <div class="formHelp" i18n:translate="help_new_theme_title">\n-                                            Enter a short, descriptive title for your theme\n-                                        </div>\n-\n-                                        <div class="errorMessage" tal:content="error" tal:condition="error" />\n-\n-                                        <input\n-                                            type="text"\n-                                            name="title"\n-                                            id="title"\n-                                            tal:attributes="value request/title | nothing"\n-                                            />\n-                                    </div>\n-\n-                                    <div class="field">\n-                                        <label for="description" i18n:translate="label_new_theme_description">Description</label>\n-                                        <div class="formHelp" i18n:translate="help_new_theme_description">\n-                                            You may also provide a longer description for your theme.\n-                                        </div>\n-                                        <textarea\n-                                            name="description"\n-                                            id="description"\n-                                            tal:content="request/description | nothing"></textarea>\n-                                    </div>\n-\n-                                    <input type="hidden" name="baseOn" id="baseOn" tal:attributes="value string:${theme/name}" />\n-\n-                                    <div\n-                                        class="field"\n-                                        tal:define="selected python:request.get(\'enableImmediately\', False)">\n-                                        <input type="hidden" value="" name="enableImmediately:boolean:default" />\n-                                        <input type="checkbox" value="1" name="enableImmediately:boolean" id="enableImmediately"\n-                                            tal:attributes="checked python:\'enableImmediately\' if selected else None"\n-                                            />\n-                                        <label for="enableImmediately" i18n:translate="label_enable_immediately">Immediately enable new theme</label>\n-                                        <div class="formHelp" i18n:translate="help_enable_immediately">\n-                                            Select this option to enable the newly created theme\n-                                            immediately.\n-                                        </div>\n-                                    </div>\n-\n-                                    <div class="btn-group">\n-                                        <input\n-                                            type="submit"\n-                                            name="form.button.CreateTheme"\n-                                            class="btn btn-success save"\n-                                            value="Create"\n-                                            i18n:attributes="value"\n-                                            />\n-                                        <input\n-                                            type="submit"\n-                                            name="form.button.Cancel"\n-                                            class="btn btn-primary cancel"\n-                                            value="Cancel"\n-                                            i18n:attributes="value"\n-                                            />\n-                                    </div>\n-\n-                                    <input tal:replace="structure context/@@authenticator/authenticator" />\n-\n-                                </form>\n-                            </div> -->\n-\n                             <form method="get" target="_blank" tal:attributes="action string:${context/absolute_url}/++theme++${theme/name}/@@download-zip">\n                                 <button i18n:translate=""\n                                     class="btn btn-primary">Download</button>\n                             </form>\n \n-                            <form method="get" tal:attributes="action string:${context/portal_url}/++theme++${theme/name}/@@theming-controlpanel-mapper">\n-                                <button tal:condition="theme/editable"\n-                                    class="btn btn-primary"\n-                                    i18n:translate="">Modify theme</button>\n-                                <button tal:condition="not:theme/editable"\n-                                    class="btn btn-primary"\n-                                    i18n:translate="">Inspect theme</button>\n-                            </form>\n-\n                             <a href="#" class="btn btn-danger pat-plone-modal"\n                                 tal:condition="theme/editable"\n                                 tal:attributes="href string:#modal-delete-${theme/name}"\n                                 i18n:translate="">Delete</a>\n                                 <!-- Delete confirmation overlay -->\n                             <div class="plone-modal"\n+                                style="display:none"\n                                 tal:attributes="id string:modal-delete-${theme/name}"\n                                 tal:condition="theme/editable">\n                                 <h1 class="documentFirstHeading" i18n:translate="theming_controlpanel_delete_confirm">\n@@ -652,84 +553,6 @@\n \n </div>\n \n-<!-- New theme overlay -->\n-<!-- <div id="overlay-new-theme" class="plone-modal">\n-    <h1 id="overlayTitleNewTheme"  class="documentFirstHeading" i18n:translate="theming_controlpanel_new_theme">New theme</h1>\n-\n-    <p class="documentDescription" i18n:translate="theming_controlpanel_new_theme_description">\n-        Please enter the details of your new theme\n-    </p>\n-\n-    <form name="create" method="post" tal:attributes="action request/URL" tal:define="errors view/errors">\n-\n-        <div\n-            tal:define="error errors/title | nothing"\n-            tal:attributes="class python:\'field error\' if error else \'field\'">\n-\n-            <label for="title" i18n:translate="label_new_theme_title">Title</label>\n-            <div class="formHelp" i18n:translate="help_new_theme_title">\n-                Enter a short, descriptive title for your theme\n-            </div>\n-\n-            <div class="errorMessage" tal:content="error" tal:condition="error" />\n-\n-            <input\n-                type="text"\n-                name="title"\n-                id="title"\n-                tal:attributes="value request/title | nothing"\n-                />\n-        </div>\n-\n-        <div class="field">\n-            <label for="description" i18n:translate="label_new_theme_description">Description</label>\n-            <div class="formHelp" i18n:translate="help_new_theme_description">\n-                You may also provide a longer description for your theme.\n-            </div>\n-            <textarea\n-                name="description"\n-                id="description"\n-                tal:content="request/description | nothing"></textarea>\n-        </div>\n-\n-        <input type="hidden" name="baseOn" id="baseOn" tal:attributes="value request/baseOn | string:template" />\n-\n-        <div\n-            class="field"\n-            tal:define="selected python:request.get(\'enableImmediately\', False)">\n-            <input type="hidden" value="" name="enableImmediately:boolean:default" />\n-            <input type="checkbox" value="1" name="enableImmediately:boolean" id="enableImmediately"\n-                tal:attributes="checked python:\'enableImmediately\' if selected else None"\n-                />\n-            <label for="enableImmediately" i18n:translate="label_enable_immediately">Immediately enable new theme</label>\n-            <div class="formHelp" i18n:translate="help_enable_immediately">\n-                Select this option to enable the newly created theme\n-                immediately.\n-            </div>\n-        </div>\n-\n-        <div class="btn-group">\n-            <input\n-                type="submit"\n-                name="form.button.CreateTheme"\n-                class="btn btn-success save"\n-                value="Create"\n-                i18n:attributes="value"\n-                />\n-            <input\n-                type="submit"\n-                name="form.button.Cancel"\n-                class="btn btn-primary cancel"\n-                value="Cancel"\n-                i18n:attributes="value"\n-                />\n-        </div>\n-\n-        <input tal:replace="structure context/@@authenticator/authenticator" />\n-\n-    </form>\n-</div> -->\n-\n <!-- Upload overlay -->\n <div id="overlay-upload" class="modal">\n     <div>\ndiff --git a/src/plone/app/theming/browser/controlpanel.py b/src/plone/app/theming/browser/controlpanel.py\nindex 746d6ea..f264e33 100644\n--- a/src/plone/app/theming/browser/controlpanel.py\n+++ b/src/plone/app/theming/browser/controlpanel.py\n@@ -10,7 +10,6 @@\n from plone.app.theming.plugins.utils import getPlugins\n from plone.app.theming.plugins.utils import getPluginSettings\n from plone.app.theming.utils import applyTheme\n-from plone.app.theming.utils import createThemeFromTemplate\n from plone.app.theming.utils import extractThemeInfo\n from plone.app.theming.utils import getAvailableThemes\n from plone.app.theming.utils import getOrCreatePersistentResourceDirectory\n@@ -20,7 +19,6 @@\n from plone.registry.interfaces import IRegistry\n from plone.resource.utils import queryResourceDirectory\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.utils import safe_unicode\n from Products.CMFPlone.utils import safe_nativestring\n from Products.CMFPlone.interfaces import ILinkSchema\n from Products.statusmessages.interfaces import IStatusMessage\n@@ -341,9 +339,8 @@ def update(self):\n \n             if not self.errors:\n                 self.redirect(\n-                    "{0}/++theme++{1}/@@theming-controlpanel-mapper".format(\n+                    "{0}/@@theming-controlpanel".format(\n                         self.site_url,\n-                        themeData.__name__\n                     )\n                 )\n                 return False\n@@ -356,53 +353,6 @@ def update(self):\n                 self.renderOverlay(\'upload\')\n                 return True\n \n-        if \'form.button.CreateTheme\' in form:\n-            self.authorize()\n-\n-            title = form.get(\'title\')\n-            description = form.get(\'description\') or \'\'\n-            baseOn = form.get(\'baseOn\', TEMPLATE_THEME)\n-            enableImmediately = form.get(\'enableImmediately\', True)\n-\n-            if not title:\n-                self.errors[\'title\'] = _(u"Title is required")\n-\n-                IStatusMessage(self.request).add(\n-                    _(u"There were errors"),\n-                    \'error\'\n-                )\n-\n-                self.renderOverlay(\'new-theme\')\n-                return True\n-\n-            else:\n-\n-                if any(x.__name__ == title for x in getZODBThemes()):\n-                    self.errors[\'title\'] = _(u"Duplicate title")\n-\n-                    IStatusMessage(self.request).add(\n-                        _(u"This title is already in use"),\n-                        \'error\'\n-                    )\n-\n-                    return True\n-\n-                name = createThemeFromTemplate(title, description, baseOn)\n-                self._setup()\n-\n-                if enableImmediately:\n-                    themeData = self.getThemeData(self.availableThemes, name)\n-                    applyTheme(themeData)\n-                    self.theme_settings.enabled = True\n-\n-                self.redirect(\n-                    "{0}/++theme++{1}/@@theming-controlpanel-mapper".format(\n-                        self.site_url,\n-                        name\n-                    )\n-                )\n-                return False\n-\n         if \'form.button.DeleteSelected\' in form:\n             self.authorize()\n \ndiff --git a/src/plone/app/theming/browser/mapper.pt b/src/plone/app/theming/browser/mapper.pt\ndeleted file mode 100644\nindex 808cf8d..0000000\n--- a/src/plone/app/theming/browser/mapper.pt\n+++ /dev/null\n@@ -1,115 +0,0 @@\n-<tal:doctype tal:replace="structure string:&lt;!DOCTYPE html&gt;" />\n-\n-<html xmlns="http://www.w3.org/1999/xhtml"\n-      xmlns:tal="http://xml.zope.org/namespaces/tal"\n-      xmlns:metal="http://xml.zope.org/namespaces/metal"\n-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n-      tal:define="portal_state context/@@plone_portal_state;\n-          plone_view context/@@plone;\n-          plone_layout context/@@plone_layout;\n-          lang portal_state/language;\n-          view nocall:view | nocall: plone_view;\n-          portal_url portal_state/portal_url;\n-          ajax_load python:False;\n-          toolbar_class python:request.cookies.get(\'plone-toolbar\', \'plone-toolbar-left pat-toolbar\')"\n-      i18n:domain="plone"\n-      tal:attributes="lang lang;">\n-\n-    <metal:cache tal:replace="structure provider:plone.httpheaders" />\n-\n-  <head>\n-    <meta charset="utf-8" />\n-\n-    <!-- provide this so menu still shows and is styled -->\n-    <link rel="stylesheet"\n-          tal:attributes="href string:${portal_url}/++plone++static/plone-compiled.css" />\n-    <link rel="stylesheet/less" type="text/css"\n-          tal:condition="view/development"\n-          tal:attributes="href string:${portal_url}/++plone++static/thememapper.less" />\n-    <link rel="stylesheet"\n-          tal:condition="not: view/development"\n-          tal:attributes="href string:${portal_url}/++plone++static/thememapper-compiled.css" />\n-\n-    <tal:comment replace="nothing">\n-        Various slots where you can insert elements in the header from a template.\n-    </tal:comment>\n-\n-    <div tal:replace="structure provider:plone.scripts" />\n-\n-    <meta name="generator" content="Plone - http://plone.org" />\n-\n-  </head>\n-\n-  <body tal:define="isRTL portal_state/is_rtl;\n-                    sl python:plone_layout.have_portlets(\'plone.leftcolumn\', view);\n-                    sr python:plone_layout.have_portlets(\'plone.rightcolumn\', view);\n-                    body_class python:plone_layout.bodyClass(template, view);"\n-        tal:attributes="class body_class;\n-                        dir python:isRTL and \'rtl\' or \'ltr\';\n-                        python:plone_view.patterns_settings()"\n-        id="visual-portal-wrapper">\n-\n-    <section id="edit-bar" role="toolbar">\n-      <div id="edit-zone" role="toolbar" tal:attributes="class toolbar_class">\n-        <div class="plone-toolbar-container">\n-          <a class="plone-toolbar-logo">\n-            <img alt="Plone Toolbar" i18n:attributes="alt label_plone_toolbar_logo" tal:attributes="src string:${portal_url}/++plone++static/plone-toolbarlogo.svg" />\n-          </a>\n-          <a class="plone-toolbar-switcher"><span i18n:translate="label_toolbar_switcher">Left-Top switcher</span></a>\n-          <nav>\n-            <ul>\n-              <div tal:replace="structure provider:plone.toolbar">\n-              </div>\n-            </ul>\n-          </nav>\n-        </div>\n-      </div>\n-    </section>\n-\n-    <aside id="global_statusmessage">\n-      <tal:message tal:content="structure provider:plone.globalstatusmessage"/>\n-      <div class="portalMessage warning"\n-           role="status"\n-           tal:condition="python:view.active and view.editable">\n-        <strong i18n:translate="">Warning</strong>\n-        <span tal:omit-tag="" i18n:translate="theming_mapper_warning_live">\n-            This theme is currently active. Any changes made will be immediately\n-            reflected on the live site.\n-        </span>\n-      </div>\n-      <div class="portalMessage warning"\n-           role="status"\n-           tal:condition="not: view/editable">\n-        <strong i18n:translate="">Warning</strong>\n-        <span tal:omit-tag="" i18n:translate="theming_mapper_warning_cannot_edit">\n-            This is a built-in theme, and cannot be edited.\n-        </span>\n-      </div>\n-    </aside>\n-\n-\n-    <article id="portal-column-content">\n-\n-      <div metal:define-macro="content">\n-\n-        <article id="content">\n-\n-          <header>\n-            <div id="viewlet-above-content-title" tal:content="structure provider:plone.abovecontenttitle" />\n-            <a href=""\n-                class="link-parent"\n-                tal:attributes="href string:${context/portal_url}/theming-controlpanel"\n-                i18n:translate="label_up_to_theming_controlpanel">\n-                    Back to the control panel\n-            </a>\n-          </header>\n-\n-          <section id="content-core">\n-            <input tal:replace="structure context/@@authenticator/authenticator" />\n-            <div class="pat-thememapper" data-pat-thememapper=\'${view/get_thememapper_config}\'></div>\n-          </section>\n-        </article>\n-      </div>\n-    </article>\n-  </body>\n-</html>\ndiff --git a/src/plone/app/theming/browser/mapper.py b/src/plone/app/theming/browser/mapper.py\ndeleted file mode 100644\nindex ba6b25c..0000000\n--- a/src/plone/app/theming/browser/mapper.py\n+++ /dev/null\n@@ -1,346 +0,0 @@\n-# -*- coding: utf-8 -*-\n-from AccessControl import Unauthorized\n-from diazo.utils import quote_param\n-from plone.app.theming.interfaces import RULE_FILENAME\n-from plone.app.theming.interfaces import THEME_EXTENSIONS\n-from plone.app.theming.interfaces import THEME_RESOURCE_NAME\n-from plone.app.theming.utils import compileThemeTransform\n-from plone.app.theming.utils import findPathContext\n-from plone.app.theming.utils import getPortal\n-from plone.app.theming.utils import getThemeFromResourceDirectory\n-from plone.app.theming.utils import prepareThemeParameters\n-from plone.app.theming.utils import theming_policy\n-from plone.memoize import view\n-from plone.registry.interfaces import IRegistry\n-from plone.resource.interfaces import IWritableResourceDirectory\n-from plone.subrequest import subrequest\n-from Products.CMFCore.utils import _getAuthenticatedUser\n-from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.resources import add_bundle_on_request\n-from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n-from Products.statusmessages.interfaces import IStatusMessage\n-from repoze.xmliter.utils import getHTMLSerializer\n-from six.moves import urllib\n-from zExceptions import NotFound\n-from zope.component import getMultiAdapter\n-from zope.component import getUtility\n-from zope.component.hooks import getSite\n-from zope.publisher.browser import BrowserView\n-\n-import json\n-import lxml.etree\n-import lxml.html\n-import lxml.html.builder\n-import os.path\n-import six\n-\n-\n-try:\n-    # Zope 4\n-    from Products.Five.browser.decode import processInputs\n-except ImportError:\n-    # Zope 5\n-    processInputs = None\n-\n-\n-class ThemeMapper(BrowserView):\n-\n-    theme_error_template = ViewPageTemplateFile("theme-error.pt")\n-\n-    def __call__(self):\n-        add_bundle_on_request(self.request, \'thememapper\')\n-        self.setup()\n-\n-        if self.update():\n-            # Evil hack to deal with the lack of implicit acquisition from\n-            # resource directories\n-            self.context = getSite()\n-            return self.index()\n-        return \'\'\n-\n-    @view.memoize\n-    def development(self):\n-        registry = getUtility(IRegistry)\n-        current_username = _getAuthenticatedUser(self.context).getUserName()\n-        if current_username == \'Anonymous User\':\n-            return False\n-        return registry.records[\'plone.resources.development\'].value\n-\n-    def setup(self):\n-        self.request.response.setHeader(\'X-Theme-Disabled\', \'1\')\n-        if processInputs is not None:\n-            processInputs(self.request)\n-\n-        self.resourceDirectory = self.context\n-        self.theme = getThemeFromResourceDirectory(self.context)\n-        self.name = self.resourceDirectory.__name__\n-        self.title = self.theme.title\n-\n-        self.portalUrl = getToolByName(self.context, \'portal_url\')()\n-        self.themeBasePath = "++{0:s}++{1:s}".format(\n-            THEME_RESOURCE_NAME,\n-            self.name\n-        )\n-        self.themeBasePathEncoded = urllib.parse.quote_plus(self.themeBasePath)\n-        self.themeBaseUrl = \'/\'.join([self.portalUrl, self.themeBasePath])\n-\n-        self.editable = IWritableResourceDirectory.providedBy(\n-            self.resourceDirectory\n-        )\n-\n-        if self.editable:\n-            self.resourceUrl = self.resourceDirectory.context.absolute_url()\n-        else:\n-            self.resourceUrl = None\n-\n-        policy = theming_policy(self.request)\n-        settings = policy.getSettings()\n-        self.active = (settings.enabled\n-                       and self.name == policy.getCurrentTheme())\n-\n-        self.rulesFileName = RULE_FILENAME\n-\n-    def update(self):\n-        self.themeFiles = self.findThemeFiles(self.resourceDirectory)\n-\n-        self.defaultThemeFile = None\n-        for t in self.themeFiles:\n-\n-            # Select the first .html theme file\n-            if self.defaultThemeFile is None:\n-                self.defaultThemeFile = t[\'path\']\n-\n-            # Prefer the first index.html or theme.html\n-            if t[\'filename\'].lower() in (\'index.html\', \'index.htm\',\n-                                         \'theme.html\', \'theme.htm\',):\n-                self.defaultThemeFile = t[\'path\']\n-                break\n-\n-        return True\n-\n-    def get_thememapper_config(self):\n-        config = {\n-            \'themeUrl\': self.resourceUrl,\n-            \'editable\': self.editable,\n-            \'filemanagerConfig\': {\n-                \'actionUrl\': \'{0}/@@plone.resourceeditor.filemanager-actions\'.format(  # noqa\n-                    self.themeBaseUrl\n-                ),\n-            },\n-            \'mockupUrl\': \'{0}/@@theming-controlpanel-mapper-getframe?path=/{1}/{2}&theme=off\'.format(  # noqa\n-                self.themeBaseUrl,\n-                self.themeBasePathEncoded,\n-                self.defaultThemeFile\n-            ),\n-            \'unthemedUrl\': \'{0}/@@theming-controlpanel-mapper-getframe?path=/&diazo.off=1\'.format(  # noqa\n-                self.themeBaseUrl\n-            ),\n-            \'previewUrl\': \'{0}/++theme++{1}/@@theming-controlpanel-mapper-getframe?path=/&theme=apply&forms=disable&links=replace&title=Preview:+{2}\'.format(  # noqa\n-                self.portalUrl,\n-                self.name,\n-                self.title\n-            ),\n-            \'helpUrl\': \'http://docs.diazo.org/en/latest\'\n-        }\n-        return json.dumps(config)\n-\n-    def authorize(self):\n-        authenticator = getMultiAdapter((self.context, self.request),\n-                                        name=u"authenticator")\n-        if not authenticator.verify():\n-            raise Unauthorized\n-\n-    def redirect(self, message):\n-        IStatusMessage(self.request).add(message)\n-        self.request.response.redirect(\n-            "{0:s}/@@theming-controlpanel".format(self.portalUrl)\n-        )\n-\n-    def findThemeFiles(self, directory, files=None, prefix=\'\'):\n-        """Depth-first search of files with known extensions.\n-        Returns a list of dicts with keys path, filename and extension.\n-        """\n-\n-        if files is None:\n-            files = []\n-\n-        dirs = []\n-\n-        for filename in directory.listDirectory():\n-            if not filename or filename == RULE_FILENAME:\n-                continue\n-\n-            if directory.isDirectory(filename):\n-                dirs.append(filename)\n-            else:\n-\n-                path = filename\n-                if prefix:\n-                    path = prefix + \'/\' + filename\n-\n-                basename, ext = os.path.splitext(filename)\n-                ext = ext[1:].lower()\n-                if ext in THEME_EXTENSIONS:\n-                    files.append({\n-                        \'path\': \'/\' + path,\n-                        \'filename\': filename,\n-                        \'extension\': ext,\n-                    })\n-\n-        # Do directories last\n-        for filename in dirs:\n-            path = filename\n-            if prefix:\n-                path = prefix + \'/\' + filename\n-            self.findThemeFiles(directory[filename], files=files, prefix=path)\n-\n-        return files\n-\n-    def getFrame(self):\n-        """AJAX method to load a frame\'s contents\n-\n-        Expects two query string parameters: ``path`` - the path to fetch - and\n-        ``theme``, which can be \'off\', to disable the theme and \'apply\' to\n-        apply the current theme to the response.\n-\n-        Additionally:\n-\n-        - a query string parameter ``links`` can be set to one of ``disable``\n-          or ``replace``. The former will disable hyperlinks; the latter will\n-          replace them with links using the\n-          ``@@themeing-controlpanel-getframe`` view.\n-        - a query string parameter ``forms`` can be set to one of ``disable``\n-          or ``replace``. The former will disable forms ; the latter will\n-          replace them with links using the\n-          ``@@themeing-controlpanel-getframe`` view.\n-        - a query string parameter ``title`` can be set to give a new page\n-          title\n-        """\n-        if processInputs is not None:\n-            processInputs(self.request)\n-\n-        path = self.request.form.get(\'path\', \'/\')\n-        theme = self.request.form.get(\'theme\', \'off\')\n-        links = self.request.form.get(\'links\', None)\n-        forms = self.request.form.get(\'forms\', None)\n-        title = self.request.form.get(\'title\', None)\n-\n-        portal = getPortal()\n-        portal_url = portal.absolute_url()\n-        response = subrequest(path, root=portal)\n-\n-        result = response.getBody()\n-        content_type = response.headers.get(\'content-type\')\n-        encoding = None\n-        if content_type is not None and \';\' in content_type:\n-            content_type, encoding = content_type.split(\';\', 1)\n-        if encoding is None:\n-            encoding = \'utf-8\'\n-        else:\n-            # e.g. charset=utf-8\n-            encoding = encoding.split(\'=\', 1)[1].strip()\n-\n-        # Not HTML? Return as-is\n-        if content_type is None or not content_type.startswith(\'text/html\'):\n-            if len(result) == 0:\n-                result = \' \'  # Zope does not deal well with empty responses\n-            return result\n-\n-        result = result.decode(encoding).encode(\'ascii\', \'xmlcharrefreplace\')\n-        if len(result) == 0:\n-            result = \' \'  # Zope does not deal well with empty responses\n-\n-        if theme == \'off\':\n-            self.request.response.setHeader(\'X-Theme-Disabled\', \'1\')\n-        elif theme == \'apply\':\n-            self.request.response.setHeader(\'X-Theme-Disabled\', \'1\')\n-            themeInfo = getThemeFromResourceDirectory(self.context)\n-\n-            policy = theming_policy(self.request)\n-            settings = policy.getSettings()\n-\n-            context = findPathContext(path) or portal\n-\n-            serializer = getHTMLSerializer([result], pretty_print=False)\n-\n-            try:\n-                transform = compileThemeTransform(\n-                    themeInfo.rules, themeInfo.absolutePrefix,\n-                    settings.readNetwork, themeInfo.parameterExpressions or {})\n-            except lxml.etree.XMLSyntaxError as e:\n-                return self.theme_error_template(error=e.msg)\n-\n-            params = prepareThemeParameters(\n-                context, self.request, themeInfo.parameterExpressions or {})\n-\n-            # Fix url and path since the request gave us this view\n-            params[\'url\'] = quote_param(\'\'.join((portal_url, path,)))\n-            params[\'path\'] = quote_param(\n-                \'\'.join((portal.absolute_url_path(), path,))\n-            )\n-\n-            if themeInfo.doctype:\n-                serializer.doctype = themeInfo.doctype\n-                if not serializer.doctype.endswith(\'\\n\'):\n-                    serializer.doctype += \'\\n\'\n-\n-            serializer.tree = transform(serializer.tree, **params)\n-            result = b\'\'.join(serializer)\n-\n-        if title or links or forms:\n-            tree = lxml.html.fromstring(result)\n-\n-            def encodeUrl(orig):\n-                origUrl = urllib.parse.urlparse(orig)\n-                newPath = origUrl.path\n-                newQuery = urllib.parse.parse_qs(origUrl.query)\n-\n-                # relative?\n-                if not origUrl.netloc:\n-                    newPath = urllib.parse.urljoin(\n-                        path.rstrip("/") + "/", newPath.lstrip("/"))\n-                elif not orig.lower().startswith(portal_url.lower()):\n-                    # Not an internal URL - ignore\n-                    return orig\n-\n-                newQuery[\'path\'] = newPath\n-                newQuery[\'theme\'] = theme\n-                if links:\n-                    newQuery[\'links\'] = links\n-                if forms:\n-                    newQuery[\'forms\'] = forms\n-                if title:\n-                    if isinstance(title, six.text_type):\n-                        newQuery[\'title\'] = title.encode(\'utf-8\', \'replace\')\n-                    else:\n-                        newQuery[\'title\'] = title\n-\n-                return self.request.getURL() + \'?\' + urllib.parse.urlencode(newQuery)\n-\n-            if title:\n-                titleElement = tree.cssselect("html head title")\n-                if titleElement:\n-                    titleElement[0].text = title\n-                else:\n-                    headElement = tree.cssselect("html head")\n-                    if headElement:\n-                        headElement[0].append(lxml.html.builder.TITLE(title))\n-\n-            if links:\n-                for n in tree.cssselect("a[href]"):\n-                    if links == \'disable\':\n-                        n.attrib[\'href\'] = \'#\'\n-                    elif links == \'replace\':\n-                        n.attrib[\'href\'] = encodeUrl(n.attrib[\'href\'])\n-\n-            if forms:\n-                for n in tree.cssselect("form[action]"):\n-                    if forms == \'disable\':\n-                        n.attrib[\'action\'] = \'#\'\n-                        n.attrib[\'onsubmit\'] = \'javascript:return false;\'\n-                    elif forms == \'replace\':\n-                        n.attrib[\'action\'] = encodeUrl(n.attrib[\'action\'])\n-\n-            result = lxml.html.tostring(tree)\n-\n-        return result\n'

Repository: plone.app.theming


Branch: refs/heads/master
Date: 2022-01-28T18:30:53+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.theming/commit/6ac12cd836c6ffa8b2c74253dc16c6498cf01c53

Fixed test that tried to use the removed theme mapper preview.

Files changed:
M src/plone/app/theming/tests/test_utils.py

b'diff --git a/src/plone/app/theming/tests/test_utils.py b/src/plone/app/theming/tests/test_utils.py\nindex 4629d41..cd6ddf8 100644\n--- a/src/plone/app/theming/tests/test_utils.py\n+++ b/src/plone/app/theming/tests/test_utils.py\n@@ -576,17 +576,6 @@ def test_available_themes(self):\n             # Can you view the portal anonymously?\n             browser = self.get_anon_browser()\n             browser.open(self.portal.absolute_url())\n-            # Can you see the preview as admin?\n-            # This can give errors that are otherwise swallowed by the\n-            # diazo/theming transform, effectively disabling the theme.\n-            if theme.__name__ in ("another-theme", "secondary-theme"):\n-                # Some of the test themes give problems.\n-                # We are only interested in the Sunburst and other official themes.\n-                continue\n+            # Can you view the portal as admin anonymously?\n             browser = self.get_admin_browser()\n-            browser.open(\n-                self.portal.absolute_url()\n-                + theme.absolutePrefix\n-                + "/@@theming-controlpanel-mapper-getframe?path=/&theme=apply"\n-                + "&forms=disable&links=replace&title=Preview"\n-            )\n+            browser.open(self.portal.absolute_url())\n'

Repository: plone.app.theming


Branch: refs/heads/master
Date: 2022-03-24T15:20:22+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/plone.app.theming/commit/29e3fd505fddc96882e47e14ae174388064d67c0

Merge pull request #205 from plone/es6

Es6

Files changed:
A news/205.feature
M src/plone/app/theming/browser/configure.zcml
M src/plone/app/theming/browser/controlpanel.pt
M src/plone/app/theming/browser/controlpanel.py
M src/plone/app/theming/browser/resources/controlpanel.css
M src/plone/app/theming/tests/test_utils.py
D src/plone/app/theming/browser/mapper.pt
D src/plone/app/theming/browser/mapper.py

b'diff --git a/news/205.feature b/news/205.feature\nnew file mode 100644\nindex 0000000..7a546d8\n--- /dev/null\n+++ b/news/205.feature\n@@ -0,0 +1,5 @@\n+- Use pat-code-editor for custom-css field [MrTango]\n+- Deactivate copy button and modal in theming control panel [MrTango]\n+- Load barceloneta css in theming control panel to have it styled [MrTango]\n+- Remove all thememapper functionality from theming control panel,\n+  including Inspect/Modify theme and the Preview. [maurits]\ndiff --git a/src/plone/app/theming/browser/configure.zcml b/src/plone/app/theming/browser/configure.zcml\nindex 8ff8a1e..799374a 100644\n--- a/src/plone/app/theming/browser/configure.zcml\n+++ b/src/plone/app/theming/browser/configure.zcml\n@@ -31,22 +31,6 @@\n         permission="zope2.View"\n         />\n \n-    <browser:page\n-        name="theming-controlpanel-mapper"\n-        for="plone.resource.interfaces.IResourceDirectory"\n-        class=".mapper.ThemeMapper"\n-        template="mapper.pt"\n-        permission="plone.app.controlpanel.Themes"\n-        />\n-\n-    <browser:page\n-        name="theming-controlpanel-mapper-getframe"\n-        for="plone.resource.interfaces.IResourceDirectory"\n-        class=".mapper.ThemeMapper"\n-        attribute="getFrame"\n-        permission="plone.app.controlpanel.Themes"\n-        />\n-\n \t<browser:page\n         name="themeFileUpload"\n         for="*"\ndiff --git a/src/plone/app/theming/browser/controlpanel.pt b/src/plone/app/theming/browser/controlpanel.pt\nindex 5960671..2ddbeb7 100644\n--- a/src/plone/app/theming/browser/controlpanel.pt\n+++ b/src/plone/app/theming/browser/controlpanel.pt\n@@ -23,6 +23,11 @@\n \n     <div tal:replace="structure provider:plone.htmlhead" />\n     <link tal:replace="structure provider:plone.htmlhead.links" />\n+    <link\n+        rel="stylesheet"\n+        type="text/css"\n+        tal:attributes="href string:${context/portal_url}/++theme++barceloneta/css/barceloneta.min.css"\n+        />\n     <link\n         rel="stylesheet"\n         type="text/css"\n@@ -92,22 +97,22 @@\n             or select an existing theme from a the list below.\n         </p>\n \n-        <div class="plone-btn-group">\n-            <a href="#overlay-new-theme" class="plone-btn plone-btn-large plone-btn-primary pat-plone-modal"\n+        <div class="btn-group">\n+            <!-- <a href="#overlay-new-theme" class="btn btn-large btn-primary pat-plone-modal"\n                 data-pat-plone-modal="width: 80%"\n-                i18n:translate="">New theme</a>\n+                i18n:translate="">New theme</a> -->\n \n-            <a href="#overlay-upload" class="plone-btn plone-btn-large plone-btn-primary pat-plone-modal"\n+            <a href="#overlay-upload" class="btn btn-large btn-primary pat-plone-modal"\n                 data-pat-plone-modal="width: 80%"\n                 i18n:translate="">Upload Zip file</a>\n \n             <a tal:attributes="href string:$site_url/test_rendering#top"\n-                class="plone-btn plone-btn-large plone-btn-primary"\n+                class="btn btn-large btn-primary"\n                 target="_blank"\n                 i18n:translate="">Test Styles</a>\n \n             <a tal:attributes="href string:$site_url/@@theming-controlpanel-help"\n-                class="plone-btn plone-btn-large plone-btn-primary pat-plone-modal"\n+                class="btn btn-large btn-primary pat-plone-modal"\n                 data-pat-plone-modal="\n                     width: 85%;\n                     loadLinksWithinModal: true;\n@@ -137,16 +142,9 @@\n \n                     <div class="themeEntryWrapper">\n \n-                        <a class="previewImageContainer"\n-                            title="Click to view a live preview. Forms will be disabled in the preview."\n-                            i18n:attributes="title tooltip_theme_preview"\n-                            tal:attributes="href string:${context/portal_url}/++theme++${theme/name}/@@theming-controlpanel-mapper-getframe?path=/&amp;theme=apply&amp;forms=disable&amp;links=replace&amp;title=Preview:+${theme/title}"\n-                            target="_new"\n-                            href="#">\n-                            <img\n-                                tal:attributes="src theme/preview"\n-                                />\n-                        </a>\n+                        <div class="previewImageContainer">\n+                            <img tal:attributes="src theme/preview" />\n+                        </div>\n \n                         <div class="themeDescription" tal:content="theme/description" />\n \n@@ -158,132 +156,41 @@\n                                 <button\n                                     tal:condition="not:theme/selected"\n                                     i18n:translate=""\n-                                    class="plone-btn plone-btn-default"\n+                                    class="btn btn-primary"\n                                     type="submit"\n                                     name="form.button.Enable">Activate</button>\n                                 <button\n                                     tal:condition="theme/selected"\n                                     i18n:translate=""\n-                                    class="plone-btn plone-btn-default"\n+                                    class="btn btn-primary"\n                                     type="submit"\n                                     name="form.button.Enable">Update</button>\n                                 <button\n                                     tal:condition="theme/selected"\n                                     i18n:translate=""\n-                                    class="plone-btn plone-btn-default"\n+                                    class="btn btn-secondary"\n                                     type="submit"\n                                     name="form.button.Disable">Deactivate</button>\n                                 <button\n                                     tal:condition="theme/selected"\n                                     i18n:translate=""\n-                                    class="plone-btn plone-btn-default"\n+                                    class="btn btn-primary"\n                                     type="submit"\n                                     name="form.button.InvalidateCache">Clear Cache</button>\n                             </form>\n \n-                            <a href="#" class="plone-btn plone-btn-default pat-plone-modal"\n-                                tal:attributes="href python:\'#modal-copy-{0}\'.format(theme[\'name\'].replace(\'.\', \'-\'))"\n-                                i18n:translate="">Copy</a>\n-                            <!-- Copy theme overlay -->\n-                            <div class="plone-modal"\n-                                tal:attributes="id python:\'modal-copy-{0}\'.format(theme[\'name\'].replace(\'.\', \'-\'))">\n-                                <h1 id="overlayTitleCopyTheme" class="documentFirstHeading" i18n:translate="theming_controlpanel_copy_theme">Create copy of <span i18n:name="theme_name"\n-                                    tal:content="string:${theme/name}"></span></h1>\n-\n-                                <p class="documentDescription" i18n:translate="theming_controlpanel_new_theme_description">\n-                                    Please enter the details of your new theme\n-                                </p>\n-\n-                                <form name="create" method="post" tal:attributes="action request/URL" tal:define="errors view/errors">\n-\n-                                    <div\n-                                        tal:define="error errors/title | nothing"\n-                                        tal:attributes="class python:\'field error\' if error else \'field\'">\n-\n-                                        <label for="title" i18n:translate="label_new_theme_title">Title</label>\n-                                        <div class="formHelp" i18n:translate="help_new_theme_title">\n-                                            Enter a short, descriptive title for your theme\n-                                        </div>\n-\n-                                        <div class="errorMessage" tal:content="error" tal:condition="error" />\n-\n-                                        <input\n-                                            type="text"\n-                                            name="title"\n-                                            id="title"\n-                                            tal:attributes="value request/title | nothing"\n-                                            />\n-                                    </div>\n-\n-                                    <div class="field">\n-                                        <label for="description" i18n:translate="label_new_theme_description">Description</label>\n-                                        <div class="formHelp" i18n:translate="help_new_theme_description">\n-                                            You may also provide a longer description for your theme.\n-                                        </div>\n-                                        <textarea\n-                                            name="description"\n-                                            id="description"\n-                                            tal:content="request/description | nothing"></textarea>\n-                                    </div>\n-\n-                                    <input type="hidden" name="baseOn" id="baseOn" tal:attributes="value string:${theme/name}" />\n-\n-                                    <div\n-                                        class="field"\n-                                        tal:define="selected python:request.get(\'enableImmediately\', False)">\n-                                        <input type="hidden" value="" name="enableImmediately:boolean:default" />\n-                                        <input type="checkbox" value="1" name="enableImmediately:boolean" id="enableImmediately"\n-                                            tal:attributes="checked python:\'enableImmediately\' if selected else None"\n-                                            />\n-                                        <label for="enableImmediately" i18n:translate="label_enable_immediately">Immediately enable new theme</label>\n-                                        <div class="formHelp" i18n:translate="help_enable_immediately">\n-                                            Select this option to enable the newly created theme\n-                                            immediately.\n-                                        </div>\n-                                    </div>\n-\n-                                    <div class="plone-btn-group">\n-                                        <input\n-                                            type="submit"\n-                                            name="form.button.CreateTheme"\n-                                            class="plone-btn plone-btn-success save"\n-                                            value="Create"\n-                                            i18n:attributes="value"\n-                                            />\n-                                        <input\n-                                            type="submit"\n-                                            name="form.button.Cancel"\n-                                            class="plone-btn plone-btn-default cancel"\n-                                            value="Cancel"\n-                                            i18n:attributes="value"\n-                                            />\n-                                    </div>\n-\n-                                    <input tal:replace="structure context/@@authenticator/authenticator" />\n-\n-                                </form>\n-                            </div>\n-\n                             <form method="get" target="_blank" tal:attributes="action string:${context/absolute_url}/++theme++${theme/name}/@@download-zip">\n                                 <button i18n:translate=""\n-                                    class="plone-btn plone-btn-default">Download</button>\n-                            </form>\n-\n-                            <form method="get" tal:attributes="action string:${context/portal_url}/++theme++${theme/name}/@@theming-controlpanel-mapper">\n-                                <button tal:condition="theme/editable"\n-                                    class="plone-btn plone-btn-default"\n-                                    i18n:translate="">Modify theme</button>\n-                                <button tal:condition="not:theme/editable"\n-                                    class="plone-btn plone-btn-default"\n-                                    i18n:translate="">Inspect theme</button>\n+                                    class="btn btn-primary">Download</button>\n                             </form>\n \n-                            <a href="#" class="plone-btn plone-btn-danger pat-plone-modal"\n+                            <a href="#" class="btn btn-danger pat-plone-modal"\n                                 tal:condition="theme/editable"\n                                 tal:attributes="href string:#modal-delete-${theme/name}"\n                                 i18n:translate="">Delete</a>\n                                 <!-- Delete confirmation overlay -->\n                             <div class="plone-modal"\n+                                style="display:none"\n                                 tal:attributes="id string:modal-delete-${theme/name}"\n                                 tal:condition="theme/editable">\n                                 <h1 class="documentFirstHeading" i18n:translate="theming_controlpanel_delete_confirm">\n@@ -302,17 +209,17 @@\n                                     <input type="hidden" name="themes:list"\n                                         id="deleteConfirmTheme"\n                                         tal:attributes="value string:${theme/name}" />\n-                                    <div class="plone-btn-group">\n+                                    <div class="btn-group">\n                                         <input\n                                             type="submit"\n                                             name="form.button.DeleteSelected"\n-                                            class="plone-btn plone-btn-danger save"\n+                                            class="btn btn-danger save"\n                                             value="Delete"\n                                             i18n:attributes="value"\n                                             />\n                                         <input\n                                             type="submit"\n-                                            class="plone-btn plone-btn-default cancel"\n+                                            class="btn btn-primary cancel"\n                                             name="form.button.Cancel"\n                                             value="Cancel"\n                                             i18n:attributes="value"\n@@ -611,6 +518,8 @@\n                             placeholder="Put your plain css..."\n                             i18n:attributes="placeholder"\n                             tal:content="custom_css"\n+                            class="pat-code-editor"\n+                            data-pat-code-editor="language: css; theme: tomorrow"\n                             ></textarea>\n \n                     </div>\n@@ -618,18 +527,18 @@\n             </div>\n \n \n-            <div class="plone-btn-group">\n+            <div class="btn-group">\n                 <input\n                     type="submit"\n                     name="form.button.AdvancedSave"\n-                    class="plone-btn plone-btn-success save"\n+                    class="btn btn-success save"\n                     value="Save"\n                     i18n:attributes="value" />\n \n                 <input\n                     type="submit"\n                     name="form.button.Cancel"\n-                    class="plone-btn plone-btn-default cancel"\n+                    class="btn btn-primary cancel"\n                     value="Cancel"\n                     i18n:attributes="value" />\n             </div>\n@@ -644,86 +553,8 @@\n \n </div>\n \n-<!-- New theme overlay -->\n-<div id="overlay-new-theme" class="plone-modal">\n-    <h1 id="overlayTitleNewTheme"  class="documentFirstHeading" i18n:translate="theming_controlpanel_new_theme">New theme</h1>\n-\n-    <p class="documentDescription" i18n:translate="theming_controlpanel_new_theme_description">\n-        Please enter the details of your new theme\n-    </p>\n-\n-    <form name="create" method="post" tal:attributes="action request/URL" tal:define="errors view/errors">\n-\n-        <div\n-            tal:define="error errors/title | nothing"\n-            tal:attributes="class python:\'field error\' if error else \'field\'">\n-\n-            <label for="title" i18n:translate="label_new_theme_title">Title</label>\n-            <div class="formHelp" i18n:translate="help_new_theme_title">\n-                Enter a short, descriptive title for your theme\n-            </div>\n-\n-            <div class="errorMessage" tal:content="error" tal:condition="error" />\n-\n-            <input\n-                type="text"\n-                name="title"\n-                id="title"\n-                tal:attributes="value request/title | nothing"\n-                />\n-        </div>\n-\n-        <div class="field">\n-            <label for="description" i18n:translate="label_new_theme_description">Description</label>\n-            <div class="formHelp" i18n:translate="help_new_theme_description">\n-                You may also provide a longer description for your theme.\n-            </div>\n-            <textarea\n-                name="description"\n-                id="description"\n-                tal:content="request/description | nothing"></textarea>\n-        </div>\n-\n-        <input type="hidden" name="baseOn" id="baseOn" tal:attributes="value request/baseOn | string:template" />\n-\n-        <div\n-            class="field"\n-            tal:define="selected python:request.get(\'enableImmediately\', False)">\n-            <input type="hidden" value="" name="enableImmediately:boolean:default" />\n-            <input type="checkbox" value="1" name="enableImmediately:boolean" id="enableImmediately"\n-                tal:attributes="checked python:\'enableImmediately\' if selected else None"\n-                />\n-            <label for="enableImmediately" i18n:translate="label_enable_immediately">Immediately enable new theme</label>\n-            <div class="formHelp" i18n:translate="help_enable_immediately">\n-                Select this option to enable the newly created theme\n-                immediately.\n-            </div>\n-        </div>\n-\n-        <div class="plone-btn-group">\n-            <input\n-                type="submit"\n-                name="form.button.CreateTheme"\n-                class="plone-btn plone-btn-success save"\n-                value="Create"\n-                i18n:attributes="value"\n-                />\n-            <input\n-                type="submit"\n-                name="form.button.Cancel"\n-                class="plone-btn plone-btn-default cancel"\n-                value="Cancel"\n-                i18n:attributes="value"\n-                />\n-        </div>\n-\n-        <input tal:replace="structure context/@@authenticator/authenticator" />\n-\n-    </form>\n-</div>\n-\n <!-- Upload overlay -->\n-<div id="overlay-upload" class="plone-modal">\n+<div id="overlay-upload" class="modal">\n     <div>\n         <h1 class="documentFirstHeading" i18n:translate="theming_controlpanel_upload">Upload theme</h1>\n \n@@ -790,18 +621,18 @@\n                 </div>\n             </div>\n \n-            <div class="plone-btn-group">\n+            <div class="btn-group">\n                 <input\n                     type="submit"\n                     name="form.button.Import"\n-                    class="plone-btn plone-btn-success save"\n+                    class="btn btn-success save"\n                     value="Import"\n                     i18n:attributes="value" />\n \n                 <input\n                     type="submit"\n                     name="form.button.Cancel"\n-                    class="plone-btn plone-btn-default cancel"\n+                    class="btn btn-primary cancel"\n                     value="Cancel"\n                     i18n:attributes="value" />\n             </div>\ndiff --git a/src/plone/app/theming/browser/controlpanel.py b/src/plone/app/theming/browser/controlpanel.py\nindex 746d6ea..f264e33 100644\n--- a/src/plone/app/theming/browser/controlpanel.py\n+++ b/src/plone/app/theming/browser/controlpanel.py\n@@ -10,7 +10,6 @@\n from plone.app.theming.plugins.utils import getPlugins\n from plone.app.theming.plugins.utils import getPluginSettings\n from plone.app.theming.utils import applyTheme\n-from plone.app.theming.utils import createThemeFromTemplate\n from plone.app.theming.utils import extractThemeInfo\n from plone.app.theming.utils import getAvailableThemes\n from plone.app.theming.utils import getOrCreatePersistentResourceDirectory\n@@ -20,7 +19,6 @@\n from plone.registry.interfaces import IRegistry\n from plone.resource.utils import queryResourceDirectory\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.utils import safe_unicode\n from Products.CMFPlone.utils import safe_nativestring\n from Products.CMFPlone.interfaces import ILinkSchema\n from Products.statusmessages.interfaces import IStatusMessage\n@@ -341,9 +339,8 @@ def update(self):\n \n             if not self.errors:\n                 self.redirect(\n-                    "{0}/++theme++{1}/@@theming-controlpanel-mapper".format(\n+                    "{0}/@@theming-controlpanel".format(\n                         self.site_url,\n-                        themeData.__name__\n                     )\n                 )\n                 return False\n@@ -356,53 +353,6 @@ def update(self):\n                 self.renderOverlay(\'upload\')\n                 return True\n \n-        if \'form.button.CreateTheme\' in form:\n-            self.authorize()\n-\n-            title = form.get(\'title\')\n-            description = form.get(\'description\') or \'\'\n-            baseOn = form.get(\'baseOn\', TEMPLATE_THEME)\n-            enableImmediately = form.get(\'enableImmediately\', True)\n-\n-            if not title:\n-                self.errors[\'title\'] = _(u"Title is required")\n-\n-                IStatusMessage(self.request).add(\n-                    _(u"There were errors"),\n-                    \'error\'\n-                )\n-\n-                self.renderOverlay(\'new-theme\')\n-                return True\n-\n-            else:\n-\n-                if any(x.__name__ == title for x in getZODBThemes()):\n-                    self.errors[\'title\'] = _(u"Duplicate title")\n-\n-                    IStatusMessage(self.request).add(\n-                        _(u"This title is already in use"),\n-                        \'error\'\n-                    )\n-\n-                    return True\n-\n-                name = createThemeFromTemplate(title, description, baseOn)\n-                self._setup()\n-\n-                if enableImmediately:\n-                    themeData = self.getThemeData(self.availableThemes, name)\n-                    applyTheme(themeData)\n-                    self.theme_settings.enabled = True\n-\n-                self.redirect(\n-                    "{0}/++theme++{1}/@@theming-controlpanel-mapper".format(\n-                        self.site_url,\n-                        name\n-                    )\n-                )\n-                return False\n-\n         if \'form.button.DeleteSelected\' in form:\n             self.authorize()\n \ndiff --git a/src/plone/app/theming/browser/mapper.pt b/src/plone/app/theming/browser/mapper.pt\ndeleted file mode 100644\nindex 808cf8d..0000000\n--- a/src/plone/app/theming/browser/mapper.pt\n+++ /dev/null\n@@ -1,115 +0,0 @@\n-<tal:doctype tal:replace="structure string:&lt;!DOCTYPE html&gt;" />\n-\n-<html xmlns="http://www.w3.org/1999/xhtml"\n-      xmlns:tal="http://xml.zope.org/namespaces/tal"\n-      xmlns:metal="http://xml.zope.org/namespaces/metal"\n-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n-      tal:define="portal_state context/@@plone_portal_state;\n-          plone_view context/@@plone;\n-          plone_layout context/@@plone_layout;\n-          lang portal_state/language;\n-          view nocall:view | nocall: plone_view;\n-          portal_url portal_state/portal_url;\n-          ajax_load python:False;\n-          toolbar_class python:request.cookies.get(\'plone-toolbar\', \'plone-toolbar-left pat-toolbar\')"\n-      i18n:domain="plone"\n-      tal:attributes="lang lang;">\n-\n-    <metal:cache tal:replace="structure provider:plone.httpheaders" />\n-\n-  <head>\n-    <meta charset="utf-8" />\n-\n-    <!-- provide this so menu still shows and is styled -->\n-    <link rel="stylesheet"\n-          tal:attributes="href string:${portal_url}/++plone++static/plone-compiled.css" />\n-    <link rel="stylesheet/less" type="text/css"\n-          tal:condition="view/development"\n-          tal:attributes="href string:${portal_url}/++plone++static/thememapper.less" />\n-    <link rel="stylesheet"\n-          tal:condition="not: view/development"\n-          tal:attributes="href string:${portal_url}/++plone++static/thememapper-compiled.css" />\n-\n-    <tal:comment replace="nothing">\n-        Various slots where you can insert elements in the header from a template.\n-    </tal:comment>\n-\n-    <div tal:replace="structure provider:plone.scripts" />\n-\n-    <meta name="generator" content="Plone - http://plone.org" />\n-\n-  </head>\n-\n-  <body tal:define="isRTL portal_state/is_rtl;\n-                    sl python:plone_layout.have_portlets(\'plone.leftcolumn\', view);\n-                    sr python:plone_layout.have_portlets(\'plone.rightcolumn\', view);\n-                    body_class python:plone_layout.bodyClass(template, view);"\n-        tal:attributes="class body_class;\n-                        dir python:isRTL and \'rtl\' or \'ltr\';\n-                        python:plone_view.patterns_settings()"\n-        id="visual-portal-wrapper">\n-\n-    <section id="edit-bar" role="toolbar">\n-      <div id="edit-zone" role="toolbar" tal:attributes="class toolbar_class">\n-        <div class="plone-toolbar-container">\n-          <a class="plone-toolbar-logo">\n-            <img alt="Plone Toolbar" i18n:attributes="alt label_plone_toolbar_logo" tal:attributes="src string:${portal_url}/++plone++static/plone-toolbarlogo.svg" />\n-          </a>\n-          <a class="plone-toolbar-switcher"><span i18n:translate="label_toolbar_switcher">Left-Top switcher</span></a>\n-          <nav>\n-            <ul>\n-              <div tal:replace="structure provider:plone.toolbar">\n-              </div>\n-            </ul>\n-          </nav>\n-        </div>\n-      </div>\n-    </section>\n-\n-    <aside id="global_statusmessage">\n-      <tal:message tal:content="structure provider:plone.globalstatusmessage"/>\n-      <div class="portalMessage warning"\n-           role="status"\n-           tal:condition="python:view.active and view.editable">\n-        <strong i18n:translate="">Warning</strong>\n-        <span tal:omit-tag="" i18n:translate="theming_mapper_warning_live">\n-            This theme is currently active. Any changes made will be immediately\n-            reflected on the live site.\n-        </span>\n-      </div>\n-      <div class="portalMessage warning"\n-           role="status"\n-           tal:condition="not: view/editable">\n-        <strong i18n:translate="">Warning</strong>\n-        <span tal:omit-tag="" i18n:translate="theming_mapper_warning_cannot_edit">\n-            This is a built-in theme, and cannot be edited.\n-        </span>\n-      </div>\n-    </aside>\n-\n-\n-    <article id="portal-column-content">\n-\n-      <div metal:define-macro="content">\n-\n-        <article id="content">\n-\n-          <header>\n-            <div id="viewlet-above-content-title" tal:content="structure provider:plone.abovecontenttitle" />\n-            <a href=""\n-                class="link-parent"\n-                tal:attributes="href string:${context/portal_url}/theming-controlpanel"\n-                i18n:translate="label_up_to_theming_controlpanel">\n-                    Back to the control panel\n-            </a>\n-          </header>\n-\n-          <section id="content-core">\n-            <input tal:replace="structure context/@@authenticator/authenticator" />\n-            <div class="pat-thememapper" data-pat-thememapper=\'${view/get_thememapper_config}\'></div>\n-          </section>\n-        </article>\n-      </div>\n-    </article>\n-  </body>\n-</html>\ndiff --git a/src/plone/app/theming/browser/mapper.py b/src/plone/app/theming/browser/mapper.py\ndeleted file mode 100644\nindex 5008c35..0000000\n--- a/src/plone/app/theming/browser/mapper.py\n+++ /dev/null\n@@ -1,356 +0,0 @@\n-# -*- coding: utf-8 -*-\n-from AccessControl import Unauthorized\n-from diazo.utils import quote_param\n-from plone.app.theming.interfaces import RULE_FILENAME\n-from plone.app.theming.interfaces import THEME_EXTENSIONS\n-from plone.app.theming.interfaces import THEME_RESOURCE_NAME\n-from plone.app.theming.utils import compileThemeTransform\n-from plone.app.theming.utils import findPathContext\n-from plone.app.theming.utils import getPortal\n-from plone.app.theming.utils import getThemeFromResourceDirectory\n-from plone.app.theming.utils import prepareThemeParameters\n-from plone.app.theming.utils import theming_policy\n-from plone.memoize import view\n-from plone.registry.interfaces import IRegistry\n-from plone.resource.interfaces import IWritableResourceDirectory\n-from plone.subrequest import subrequest\n-from Products.CMFCore.utils import _getAuthenticatedUser\n-from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.resources import add_bundle_on_request\n-from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n-from Products.statusmessages.interfaces import IStatusMessage\n-from repoze.xmliter.utils import getHTMLSerializer\n-from six.moves import urllib\n-from zExceptions import NotFound\n-from zope.component import getMultiAdapter\n-from zope.component import getUtility\n-from zope.component.hooks import getSite\n-from zope.publisher.browser import BrowserView\n-\n-import json\n-import lxml.etree\n-import lxml.html\n-import lxml.html.builder\n-import os.path\n-import six\n-\n-\n-try:\n-    # Zope 4\n-    from Products.Five.browser.decode import processInputs\n-except ImportError:\n-    # Zope 5\n-    processInputs = None\n-\n-\n-class ThemeMapper(BrowserView):\n-\n-    theme_error_template = ViewPageTemplateFile("theme-error.pt")\n-\n-    def __call__(self):\n-        add_bundle_on_request(self.request, \'thememapper\')\n-        self.setup()\n-\n-        if self.update():\n-            # Evil hack to deal with the lack of implicit acquisition from\n-            # resource directories\n-            self.context = getSite()\n-            return self.index()\n-        return \'\'\n-\n-    @view.memoize\n-    def development(self):\n-        registry = getUtility(IRegistry)\n-        current_username = _getAuthenticatedUser(self.context).getUserName()\n-        if current_username == \'Anonymous User\':\n-            return False\n-        return registry.records[\'plone.resources.development\'].value\n-\n-    def setup(self):\n-        self.request.response.setHeader(\'X-Theme-Disabled\', \'1\')\n-        if processInputs is not None:\n-            processInputs(self.request)\n-\n-        self.resourceDirectory = self.context\n-        self.theme = getThemeFromResourceDirectory(self.context)\n-        self.name = self.resourceDirectory.__name__\n-        self.title = self.theme.title\n-\n-        self.portalUrl = getToolByName(self.context, \'portal_url\')()\n-        self.themeBasePath = "++{0:s}++{1:s}".format(\n-            THEME_RESOURCE_NAME,\n-            self.name\n-        )\n-        self.themeBasePathEncoded = urllib.parse.quote_plus(self.themeBasePath)\n-        self.themeBaseUrl = \'/\'.join([self.portalUrl, self.themeBasePath])\n-\n-        try:\n-            registry = getUtility(IRegistry)\n-            self.lessUrl = registry[\'plone.resources.lessc\']\n-            self.lessVariables = self.portalUrl + \'/\' + registry[\'plone.resources.less-variables\']\n-        except:\n-            self.lessUrl = None\n-            self.lessVariables = None\n-\n-        self.editable = IWritableResourceDirectory.providedBy(\n-            self.resourceDirectory\n-        )\n-\n-        if self.editable:\n-            self.resourceUrl = self.resourceDirectory.context.absolute_url()\n-        else:\n-            self.resourceUrl = None\n-\n-        policy = theming_policy(self.request)\n-        settings = policy.getSettings()\n-        self.active = (settings.enabled\n-                       and self.name == policy.getCurrentTheme())\n-\n-        self.rulesFileName = RULE_FILENAME\n-\n-    def update(self):\n-        self.themeFiles = self.findThemeFiles(self.resourceDirectory)\n-\n-        self.defaultThemeFile = None\n-        for t in self.themeFiles:\n-\n-            # Select the first .html theme file\n-            if self.defaultThemeFile is None:\n-                self.defaultThemeFile = t[\'path\']\n-\n-            # Prefer the first index.html or theme.html\n-            if t[\'filename\'].lower() in (\'index.html\', \'index.htm\',\n-                                         \'theme.html\', \'theme.htm\',):\n-                self.defaultThemeFile = t[\'path\']\n-                break\n-\n-        return True\n-\n-    def get_thememapper_config(self):\n-        config = {\n-            \'themeUrl\': self.resourceUrl,\n-            \'editable\': self.editable,\n-            \'lessUrl\': self.lessUrl,\n-            \'lessVariables\': self.lessVariables,\n-            \'filemanagerConfig\': {\n-                \'actionUrl\': \'{0}/@@plone.resourceeditor.filemanager-actions\'.format(  # noqa\n-                    self.themeBaseUrl\n-                ),\n-            },\n-            \'mockupUrl\': \'{0}/@@theming-controlpanel-mapper-getframe?path=/{1}/{2}&theme=off\'.format(  # noqa\n-                self.themeBaseUrl,\n-                self.themeBasePathEncoded,\n-                self.defaultThemeFile\n-            ),\n-            \'unthemedUrl\': \'{0}/@@theming-controlpanel-mapper-getframe?path=/&diazo.off=1\'.format(  # noqa\n-                self.themeBaseUrl\n-            ),\n-            \'previewUrl\': \'{0}/++theme++{1}/@@theming-controlpanel-mapper-getframe?path=/&theme=apply&forms=disable&links=replace&title=Preview:+{2}\'.format(  # noqa\n-                self.portalUrl,\n-                self.name,\n-                self.title\n-            ),\n-            \'helpUrl\': \'http://docs.diazo.org/en/latest\'\n-        }\n-        return json.dumps(config)\n-\n-    def authorize(self):\n-        authenticator = getMultiAdapter((self.context, self.request),\n-                                        name=u"authenticator")\n-        if not authenticator.verify():\n-            raise Unauthorized\n-\n-    def redirect(self, message):\n-        IStatusMessage(self.request).add(message)\n-        self.request.response.redirect(\n-            "{0:s}/@@theming-controlpanel".format(self.portalUrl)\n-        )\n-\n-    def findThemeFiles(self, directory, files=None, prefix=\'\'):\n-        """Depth-first search of files with known extensions.\n-        Returns a list of dicts with keys path, filename and extension.\n-        """\n-\n-        if files is None:\n-            files = []\n-\n-        dirs = []\n-\n-        for filename in directory.listDirectory():\n-            if not filename or filename == RULE_FILENAME:\n-                continue\n-\n-            if directory.isDirectory(filename):\n-                dirs.append(filename)\n-            else:\n-\n-                path = filename\n-                if prefix:\n-                    path = prefix + \'/\' + filename\n-\n-                basename, ext = os.path.splitext(filename)\n-                ext = ext[1:].lower()\n-                if ext in THEME_EXTENSIONS:\n-                    files.append({\n-                        \'path\': \'/\' + path,\n-                        \'filename\': filename,\n-                        \'extension\': ext,\n-                    })\n-\n-        # Do directories last\n-        for filename in dirs:\n-            path = filename\n-            if prefix:\n-                path = prefix + \'/\' + filename\n-            self.findThemeFiles(directory[filename], files=files, prefix=path)\n-\n-        return files\n-\n-    def getFrame(self):\n-        """AJAX method to load a frame\'s contents\n-\n-        Expects two query string parameters: ``path`` - the path to fetch - and\n-        ``theme``, which can be \'off\', to disable the theme and \'apply\' to\n-        apply the current theme to the response.\n-\n-        Additionally:\n-\n-        - a query string parameter ``links`` can be set to one of ``disable``\n-          or ``replace``. The former will disable hyperlinks; the latter will\n-          replace them with links using the\n-          ``@@themeing-controlpanel-getframe`` view.\n-        - a query string parameter ``forms`` can be set to one of ``disable``\n-          or ``replace``. The former will disable forms ; the latter will\n-          replace them with links using the\n-          ``@@themeing-controlpanel-getframe`` view.\n-        - a query string parameter ``title`` can be set to give a new page\n-          title\n-        """\n-        if processInputs is not None:\n-            processInputs(self.request)\n-\n-        path = self.request.form.get(\'path\', \'/\')\n-        theme = self.request.form.get(\'theme\', \'off\')\n-        links = self.request.form.get(\'links\', None)\n-        forms = self.request.form.get(\'forms\', None)\n-        title = self.request.form.get(\'title\', None)\n-\n-        portal = getPortal()\n-        portal_url = portal.absolute_url()\n-        response = subrequest(path, root=portal)\n-\n-        result = response.getBody()\n-        content_type = response.headers.get(\'content-type\')\n-        encoding = None\n-        if content_type is not None and \';\' in content_type:\n-            content_type, encoding = content_type.split(\';\', 1)\n-        if encoding is None:\n-            encoding = \'utf-8\'\n-        else:\n-            # e.g. charset=utf-8\n-            encoding = encoding.split(\'=\', 1)[1].strip()\n-\n-        # Not HTML? Return as-is\n-        if content_type is None or not content_type.startswith(\'text/html\'):\n-            if len(result) == 0:\n-                result = \' \'  # Zope does not deal well with empty responses\n-            return result\n-\n-        result = result.decode(encoding).encode(\'ascii\', \'xmlcharrefreplace\')\n-        if len(result) == 0:\n-            result = \' \'  # Zope does not deal well with empty responses\n-\n-        if theme == \'off\':\n-            self.request.response.setHeader(\'X-Theme-Disabled\', \'1\')\n-        elif theme == \'apply\':\n-            self.request.response.setHeader(\'X-Theme-Disabled\', \'1\')\n-            themeInfo = getThemeFromResourceDirectory(self.context)\n-\n-            policy = theming_policy(self.request)\n-            settings = policy.getSettings()\n-\n-            context = findPathContext(path) or portal\n-\n-            serializer = getHTMLSerializer([result], pretty_print=False)\n-\n-            try:\n-                transform = compileThemeTransform(\n-                    themeInfo.rules, themeInfo.absolutePrefix,\n-                    settings.readNetwork, themeInfo.parameterExpressions or {})\n-            except lxml.etree.XMLSyntaxError as e:\n-                return self.theme_error_template(error=e.msg)\n-\n-            params = prepareThemeParameters(\n-                context, self.request, themeInfo.parameterExpressions or {})\n-\n-            # Fix url and path since the request gave us this view\n-            params[\'url\'] = quote_param(\'\'.join((portal_url, path,)))\n-            params[\'path\'] = quote_param(\n-                \'\'.join((portal.absolute_url_path(), path,))\n-            )\n-\n-            if themeInfo.doctype:\n-                serializer.doctype = themeInfo.doctype\n-                if not serializer.doctype.endswith(\'\\n\'):\n-                    serializer.doctype += \'\\n\'\n-\n-            serializer.tree = transform(serializer.tree, **params)\n-            result = b\'\'.join(serializer)\n-\n-        if title or links or forms:\n-            tree = lxml.html.fromstring(result)\n-\n-            def encodeUrl(orig):\n-                origUrl = urllib.parse.urlparse(orig)\n-                newPath = origUrl.path\n-                newQuery = urllib.parse.parse_qs(origUrl.query)\n-\n-                # relative?\n-                if not origUrl.netloc:\n-                    newPath = urllib.parse.urljoin(\n-                        path.rstrip("/") + "/", newPath.lstrip("/"))\n-                elif not orig.lower().startswith(portal_url.lower()):\n-                    # Not an internal URL - ignore\n-                    return orig\n-\n-                newQuery[\'path\'] = newPath\n-                newQuery[\'theme\'] = theme\n-                if links:\n-                    newQuery[\'links\'] = links\n-                if forms:\n-                    newQuery[\'forms\'] = forms\n-                if title:\n-                    if isinstance(title, six.text_type):\n-                        newQuery[\'title\'] = title.encode(\'utf-8\', \'replace\')\n-                    else:\n-                        newQuery[\'title\'] = title\n-\n-                return self.request.getURL() + \'?\' + urllib.parse.urlencode(newQuery)\n-\n-            if title:\n-                titleElement = tree.cssselect("html head title")\n-                if titleElement:\n-                    titleElement[0].text = title\n-                else:\n-                    headElement = tree.cssselect("html head")\n-                    if headElement:\n-                        headElement[0].append(lxml.html.builder.TITLE(title))\n-\n-            if links:\n-                for n in tree.cssselect("a[href]"):\n-                    if links == \'disable\':\n-                        n.attrib[\'href\'] = \'#\'\n-                    elif links == \'replace\':\n-                        n.attrib[\'href\'] = encodeUrl(n.attrib[\'href\'])\n-\n-            if forms:\n-                for n in tree.cssselect("form[action]"):\n-                    if forms == \'disable\':\n-                        n.attrib[\'action\'] = \'#\'\n-                        n.attrib[\'onsubmit\'] = \'javascript:return false;\'\n-                    elif forms == \'replace\':\n-                        n.attrib[\'action\'] = encodeUrl(n.attrib[\'action\'])\n-\n-            result = lxml.html.tostring(tree)\n-\n-        return result\ndiff --git a/src/plone/app/theming/browser/resources/controlpanel.css b/src/plone/app/theming/browser/resources/controlpanel.css\nindex 981ef5d..671c2c2 100644\n--- a/src/plone/app/theming/browser/resources/controlpanel.css\n+++ b/src/plone/app/theming/browser/resources/controlpanel.css\n@@ -2,10 +2,14 @@ body {\n     font-family: Roboto, sans-serif;\n }\n \n+\n body a {\n     color: #888\n }\n \n+body aside, body article{\n+    padding: 1rem;\n+}\n fieldset {\n     color: #333;\n }\n@@ -32,7 +36,7 @@ fieldset label {\n     margin-bottom: 10px;\n }\n \n-a.plone-btn {\n+a.btn {\n     text-decoration: none;\n }\n \n@@ -110,6 +114,6 @@ a.plone-btn {\n     font-size: smaller;\n }\n \n-.plone-btn-group {\n+.btn-group {\n     margin: 10px;\n }\ndiff --git a/src/plone/app/theming/tests/test_utils.py b/src/plone/app/theming/tests/test_utils.py\nindex 4629d41..cd6ddf8 100644\n--- a/src/plone/app/theming/tests/test_utils.py\n+++ b/src/plone/app/theming/tests/test_utils.py\n@@ -576,17 +576,6 @@ def test_available_themes(self):\n             # Can you view the portal anonymously?\n             browser = self.get_anon_browser()\n             browser.open(self.portal.absolute_url())\n-            # Can you see the preview as admin?\n-            # This can give errors that are otherwise swallowed by the\n-            # diazo/theming transform, effectively disabling the theme.\n-            if theme.__name__ in ("another-theme", "secondary-theme"):\n-                # Some of the test themes give problems.\n-                # We are only interested in the Sunburst and other official themes.\n-                continue\n+            # Can you view the portal as admin anonymously?\n             browser = self.get_admin_browser()\n-            browser.open(\n-                self.portal.absolute_url()\n-                + theme.absolutePrefix\n-                + "/@@theming-controlpanel-mapper-getframe?path=/&theme=apply"\n-                + "&forms=disable&links=replace&title=Preview"\n-            )\n+            browser.open(self.portal.absolute_url())\n'

