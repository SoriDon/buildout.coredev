Repository: plone.restapi


Branch: refs/heads/master
Date: 2019-06-22T17:55:15+02:00
Author: Lukas Graf (lukasgraf) <lukas.graf@4teamwork.ch>
Commit: https://github.com/plone/plone.restapi/commit/46dcd61274ce321ffd603a703cf890edcf46dbab

Gracefully handle corrupt images when serializing scales.

Files changed:
A news/729.bugfix
M src/plone/restapi/imaging.py
M src/plone/restapi/tests/test_dxfield_serializer.py

b'diff --git a/news/729.bugfix b/news/729.bugfix\nnew file mode 100644\nindex 00000000..769095bb\n--- /dev/null\n+++ b/news/729.bugfix\n@@ -0,0 +1,2 @@\n+Gracefully handle corrupt images when serializing scales.\n+[lgraf]\ndiff --git a/src/plone/restapi/imaging.py b/src/plone/restapi/imaging.py\nindex 5a94ef1c..19949a75 100644\n--- a/src/plone/restapi/imaging.py\n+++ b/src/plone/restapi/imaging.py\n@@ -33,6 +33,10 @@ def get_scales(context, field, width, height):\n                 field.__name__, width=actual_width, height=actual_height\n             )\n \n+        if scale is None:\n+            # If we still can\'t get a scale, it\'s probably a corrupt image\n+            continue\n+\n         url = scale.url\n         actual_width = scale.width\n         actual_height = scale.height\n@@ -52,6 +56,9 @@ def get_original_image_url(context, fieldname, width, height):\n     scale = images_view.scale(\n         fieldname, width=width, height=height, direction="thumbnail"\n     )\n+    if not scale:\n+        # This might happen for corrupt images.\n+        return None\n \n     return scale.url\n \ndiff --git a/src/plone/restapi/tests/test_dxfield_serializer.py b/src/plone/restapi/tests/test_dxfield_serializer.py\nindex cd6b04f1..c662642f 100644\n--- a/src/plone/restapi/tests/test_dxfield_serializer.py\n+++ b/src/plone/restapi/tests/test_dxfield_serializer.py\n@@ -257,6 +257,28 @@ def test_namedimage_field_serialization_returns_dict(self):\n                 value,\n             )\n \n+    def test_namedimage_field_serialization_doesnt_choke_on_corrupt_image(self):\n+        image_data = b\'INVALID IMAGE DATA\'\n+        fn = "test_namedimage_field"\n+        with patch.object(storage, "uuid4", return_value="uuid_1"):\n+            value = self.serialize(\n+                fn,\n+                NamedImage(\n+                    data=image_data, contentType=u"image/gif", filename=u"1024x768.gif"\n+                ),\n+            )\n+        self.assertEqual(\n+            {\n+                u\'content-type\': u\'image/gif\',\n+                u\'download\': None,\n+                u\'filename\': u\'1024x768.gif\',\n+                u\'height\': -1,\n+                u\'scales\': {},\n+                u\'size\': 18,\n+                u\'width\': -1,\n+            },\n+            value)\n+\n     def test_namedblobfile_field_serialization_returns_dict(self):\n         value = self.serialize(\n             "test_namedblobfile_field",\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2019-06-24T08:01:56+02:00
Author: Timo Stollenwerk (tisto) <tisto@users.noreply.github.com>
Commit: https://github.com/plone/plone.restapi/commit/d6597a54d454e7abeb11a54b614bdd730b312079

Merge pull request #763 from plone/image-scales-handle-corrupt-images

Gracefully handle corrupt images when serializing scales.

Files changed:
A news/729.bugfix
M src/plone/restapi/imaging.py
M src/plone/restapi/tests/test_dxfield_serializer.py

b'diff --git a/news/729.bugfix b/news/729.bugfix\nnew file mode 100644\nindex 00000000..769095bb\n--- /dev/null\n+++ b/news/729.bugfix\n@@ -0,0 +1,2 @@\n+Gracefully handle corrupt images when serializing scales.\n+[lgraf]\ndiff --git a/src/plone/restapi/imaging.py b/src/plone/restapi/imaging.py\nindex 5a94ef1c..19949a75 100644\n--- a/src/plone/restapi/imaging.py\n+++ b/src/plone/restapi/imaging.py\n@@ -33,6 +33,10 @@ def get_scales(context, field, width, height):\n                 field.__name__, width=actual_width, height=actual_height\n             )\n \n+        if scale is None:\n+            # If we still can\'t get a scale, it\'s probably a corrupt image\n+            continue\n+\n         url = scale.url\n         actual_width = scale.width\n         actual_height = scale.height\n@@ -52,6 +56,9 @@ def get_original_image_url(context, fieldname, width, height):\n     scale = images_view.scale(\n         fieldname, width=width, height=height, direction="thumbnail"\n     )\n+    if not scale:\n+        # This might happen for corrupt images.\n+        return None\n \n     return scale.url\n \ndiff --git a/src/plone/restapi/tests/test_dxfield_serializer.py b/src/plone/restapi/tests/test_dxfield_serializer.py\nindex cd6b04f1..c662642f 100644\n--- a/src/plone/restapi/tests/test_dxfield_serializer.py\n+++ b/src/plone/restapi/tests/test_dxfield_serializer.py\n@@ -257,6 +257,28 @@ def test_namedimage_field_serialization_returns_dict(self):\n                 value,\n             )\n \n+    def test_namedimage_field_serialization_doesnt_choke_on_corrupt_image(self):\n+        image_data = b\'INVALID IMAGE DATA\'\n+        fn = "test_namedimage_field"\n+        with patch.object(storage, "uuid4", return_value="uuid_1"):\n+            value = self.serialize(\n+                fn,\n+                NamedImage(\n+                    data=image_data, contentType=u"image/gif", filename=u"1024x768.gif"\n+                ),\n+            )\n+        self.assertEqual(\n+            {\n+                u\'content-type\': u\'image/gif\',\n+                u\'download\': None,\n+                u\'filename\': u\'1024x768.gif\',\n+                u\'height\': -1,\n+                u\'scales\': {},\n+                u\'size\': 18,\n+                u\'width\': -1,\n+            },\n+            value)\n+\n     def test_namedblobfile_field_serialization_returns_dict(self):\n         value = self.serialize(\n             "test_namedblobfile_field",\n'

