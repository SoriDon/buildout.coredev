Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2017-06-08T16:18:48+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.contenttypes/commit/595c4d665e243fc40a0b2621275ba6bf42865508

Made sure the text field of Collections is searchable.

Included upgrade step to reindex the SearchableText index for existing Collections.

See https://github.com/plone/plone.app.contenttypes/issues/406

Files changed:
M CHANGES.rst
M plone/app/contenttypes/indexers.py
M plone/app/contenttypes/indexers.zcml
M plone/app/contenttypes/profiles/default/metadata.xml
M plone/app/contenttypes/tests/test_indexes.py
M plone/app/contenttypes/upgrades.py
M plone/app/contenttypes/upgrades.zcml

diff --git a/CHANGES.rst b/CHANGES.rst
index e19f0381..94cbadd5 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,9 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Made sure the text field of Collections is searchable.
+  `Issue 406 <https://github.com/plone/plone.app.contenttypes/issues/406>`_.
+  [maurits]
 
 
 1.4 (2017-06-03)
diff --git a/plone/app/contenttypes/indexers.py b/plone/app/contenttypes/indexers.py
index 390129e4..7c4d3900 100644
--- a/plone/app/contenttypes/indexers.py
+++ b/plone/app/contenttypes/indexers.py
@@ -2,6 +2,7 @@
 from Acquisition import aq_base
 from logging import getLogger
 from plone.app.contenttypes.behaviors.richtext import IRichText
+from plone.app.contenttypes.interfaces import ICollection
 from plone.app.contenttypes.interfaces import IDocument
 from plone.app.contenttypes.interfaces import IFile
 from plone.app.contenttypes.interfaces import IFolder
@@ -73,6 +74,11 @@ def SearchableText_document(obj):
     return _unicode_save_string_concat(SearchableText(obj))
 
 
+@indexer(ICollection)
+def SearchableText_collection(obj):
+    return _unicode_save_string_concat(SearchableText(obj))
+
+
 @indexer(IFile)
 def SearchableText_file(obj):
     try:
diff --git a/plone/app/contenttypes/indexers.zcml b/plone/app/contenttypes/indexers.zcml
index ebcebf39..a48ba512 100644
--- a/plone/app/contenttypes/indexers.zcml
+++ b/plone/app/contenttypes/indexers.zcml
@@ -5,6 +5,7 @@
     xmlns:genericsetup="http://namespaces.zope.org/genericsetup"
     i18n_domain="plone">
 
+  <adapter name="SearchableText" factory=".indexers.SearchableText_collection" />
   <adapter name="SearchableText" factory=".indexers.SearchableText_document" />
   <adapter name="SearchableText" factory=".indexers.SearchableText_file" />
   <adapter name="SearchableText" factory=".indexers.SearchableText_folder" />
diff --git a/plone/app/contenttypes/profiles/default/metadata.xml b/plone/app/contenttypes/profiles/default/metadata.xml
index bebaa1f1..afb40d82 100644
--- a/plone/app/contenttypes/profiles/default/metadata.xml
+++ b/plone/app/contenttypes/profiles/default/metadata.xml
@@ -1,5 +1,5 @@
 <metadata>
- <version>1104</version>
+ <version>1105</version>
  <dependencies>
   <dependency>profile-plone.app.dexterity:default</dependency>
   <dependency>profile-plone.app.event:default</dependency>
diff --git a/plone/app/contenttypes/tests/test_indexes.py b/plone/app/contenttypes/tests/test_indexes.py
index 23681f99..f2485535 100644
--- a/plone/app/contenttypes/tests/test_indexes.py
+++ b/plone/app/contenttypes/tests/test_indexes.py
@@ -40,6 +40,10 @@ def setUp(self):
             'file'
         )
         self.folder.invokeFactory(
+            'Collection',
+            'collection'
+        )
+        self.folder.invokeFactory(
             'Folder',
             'folder'
         )
@@ -48,6 +52,8 @@ def setUp(self):
         self.link = self.folder.link
         self.image = self.folder.image
         self.file = self.folder.file
+        self.collection = self.folder.collection
+        # Note: this changes self.folder.
         self.folder = self.folder.folder
         self.catalog = getToolByName(self.portal, 'portal_catalog')
 
@@ -143,12 +149,18 @@ def test_text_in_searchable_text_index(self):
             'text/plain',
             'text/html'
         )
+        self.collection.text = RichTextValue(
+            u'Lorem ipsum',
+            'text/plain',
+            'text/html'
+        )
         self.document.reindexObject()
         self.news_item.reindexObject()
+        self.collection.reindexObject()
         brains = self.catalog.searchResults(dict(
             SearchableText=u'Lorem ipsum',
         ))
-        self.assertEqual(len(brains), 2)
+        self.assertEqual(len(brains), 3)
 
         paths = [it.getPath() for it in brains]
         self.assertTrue(
@@ -157,6 +169,38 @@ def test_text_in_searchable_text_index(self):
         self.assertTrue(
             '/plone/folder/document' in paths
         )
+        self.assertTrue(
+            '/plone/folder/collection' in paths
+        )
+
+    def test_collection_text_in_searchable_text_index_after_upgrade(self):
+        # At first, the text field of Collections did not end up
+        # in the SearchableText index.
+        # To mimic this, we reindex the object and afterwards set the text.
+        self.collection.reindexObject()
+        # Check that nothing is found yet.
+        # This is needed to force a flush of the indexing queue.
+        brains = self.catalog.searchResults(dict(
+            SearchableText=u'Lorem ipsum',
+        ))
+        self.assertEqual(len(brains), 0)
+        self.collection.text = RichTextValue(
+            u'Lorem ipsum',
+            'text/plain',
+            'text/html'
+        )
+        brains = self.catalog.searchResults(dict(
+            SearchableText=u'Lorem ipsum',
+        ))
+        self.assertEqual(len(brains), 0)
+        # Now we apply the upgrade.
+        from plone.app.contenttypes.upgrades import searchabletext_collections
+        searchabletext_collections(self.portal.portal_setup)
+        brains = self.catalog.searchResults(dict(
+            SearchableText=u'Lorem ipsum',
+        ))
+        self.assertEqual(len(brains), 1)
+        self.assertEqual(brains[0].getPath(), '/plone/folder/collection')
 
     def test_html_stripped_searchable_text_index(self):
         """Ensure, html tags are stripped out from the content and not indexed.
diff --git a/plone/app/contenttypes/upgrades.py b/plone/app/contenttypes/upgrades.py
index 5eea8bd2..849d8766 100644
--- a/plone/app/contenttypes/upgrades.py
+++ b/plone/app/contenttypes/upgrades.py
@@ -209,3 +209,12 @@ def _fixup(obj, view_map):
             _fixup(obj, LISTING_VIEW_MAPPING)
         if portal_type == 'Plone Site':
             _fixup(context, LISTING_VIEW_MAPPING)
+
+
+def searchabletext_collections(context):
+    """Reindex Collections for SearchableText."""
+    catalog = getToolByName(context, 'portal_catalog')
+    search = catalog.unrestrictedSearchResults
+    for brain in search(portal_type='Collection'):
+        obj = brain.getObject()
+        obj.reindexObject(idxs=['SearchableText'])
diff --git a/plone/app/contenttypes/upgrades.zcml b/plone/app/contenttypes/upgrades.zcml
index f4cf0f51..ed10c076 100644
--- a/plone/app/contenttypes/upgrades.zcml
+++ b/plone/app/contenttypes/upgrades.zcml
@@ -71,4 +71,12 @@
       handler=".upgrades.use_new_view_names"
       />
 
+  <genericsetup:upgradeStep
+      source="1104"
+      destination="1105"
+      title="Reindex SearchableText for Collections"
+      profile="plone.app.contenttypes:default"
+      handler=".upgrades.searchabletext_collections"
+      />
+
 </configure>


Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2017-06-08T21:19:07+02:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/feca50f23f394e9fcac7a0c6ff61db362717edc8

Merge pull request #407 from plone/issue-406-searchabletext-collection-master

Made sure the text field of Collections is searchable. [master]

Files changed:
M CHANGES.rst
M plone/app/contenttypes/indexers.py
M plone/app/contenttypes/indexers.zcml
M plone/app/contenttypes/profiles/default/metadata.xml
M plone/app/contenttypes/tests/test_indexes.py
M plone/app/contenttypes/upgrades.py
M plone/app/contenttypes/upgrades.zcml

diff --git a/CHANGES.rst b/CHANGES.rst
index 0b3994ce..9d318c43 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -15,7 +15,9 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Made sure the text field of Collections is searchable.
+  `Issue 406 <https://github.com/plone/plone.app.contenttypes/issues/406>`_.
+  [maurits]
 
 
 1.4 (2017-06-03)
diff --git a/plone/app/contenttypes/indexers.py b/plone/app/contenttypes/indexers.py
index 390129e4..7c4d3900 100644
--- a/plone/app/contenttypes/indexers.py
+++ b/plone/app/contenttypes/indexers.py
@@ -2,6 +2,7 @@
 from Acquisition import aq_base
 from logging import getLogger
 from plone.app.contenttypes.behaviors.richtext import IRichText
+from plone.app.contenttypes.interfaces import ICollection
 from plone.app.contenttypes.interfaces import IDocument
 from plone.app.contenttypes.interfaces import IFile
 from plone.app.contenttypes.interfaces import IFolder
@@ -73,6 +74,11 @@ def SearchableText_document(obj):
     return _unicode_save_string_concat(SearchableText(obj))
 
 
+@indexer(ICollection)
+def SearchableText_collection(obj):
+    return _unicode_save_string_concat(SearchableText(obj))
+
+
 @indexer(IFile)
 def SearchableText_file(obj):
     try:
diff --git a/plone/app/contenttypes/indexers.zcml b/plone/app/contenttypes/indexers.zcml
index ebcebf39..a48ba512 100644
--- a/plone/app/contenttypes/indexers.zcml
+++ b/plone/app/contenttypes/indexers.zcml
@@ -5,6 +5,7 @@
     xmlns:genericsetup="http://namespaces.zope.org/genericsetup"
     i18n_domain="plone">
 
+  <adapter name="SearchableText" factory=".indexers.SearchableText_collection" />
   <adapter name="SearchableText" factory=".indexers.SearchableText_document" />
   <adapter name="SearchableText" factory=".indexers.SearchableText_file" />
   <adapter name="SearchableText" factory=".indexers.SearchableText_folder" />
diff --git a/plone/app/contenttypes/profiles/default/metadata.xml b/plone/app/contenttypes/profiles/default/metadata.xml
index bebaa1f1..afb40d82 100644
--- a/plone/app/contenttypes/profiles/default/metadata.xml
+++ b/plone/app/contenttypes/profiles/default/metadata.xml
@@ -1,5 +1,5 @@
 <metadata>
- <version>1104</version>
+ <version>1105</version>
  <dependencies>
   <dependency>profile-plone.app.dexterity:default</dependency>
   <dependency>profile-plone.app.event:default</dependency>
diff --git a/plone/app/contenttypes/tests/test_indexes.py b/plone/app/contenttypes/tests/test_indexes.py
index 23681f99..f2485535 100644
--- a/plone/app/contenttypes/tests/test_indexes.py
+++ b/plone/app/contenttypes/tests/test_indexes.py
@@ -40,6 +40,10 @@ def setUp(self):
             'file'
         )
         self.folder.invokeFactory(
+            'Collection',
+            'collection'
+        )
+        self.folder.invokeFactory(
             'Folder',
             'folder'
         )
@@ -48,6 +52,8 @@ def setUp(self):
         self.link = self.folder.link
         self.image = self.folder.image
         self.file = self.folder.file
+        self.collection = self.folder.collection
+        # Note: this changes self.folder.
         self.folder = self.folder.folder
         self.catalog = getToolByName(self.portal, 'portal_catalog')
 
@@ -143,12 +149,18 @@ def test_text_in_searchable_text_index(self):
             'text/plain',
             'text/html'
         )
+        self.collection.text = RichTextValue(
+            u'Lorem ipsum',
+            'text/plain',
+            'text/html'
+        )
         self.document.reindexObject()
         self.news_item.reindexObject()
+        self.collection.reindexObject()
         brains = self.catalog.searchResults(dict(
             SearchableText=u'Lorem ipsum',
         ))
-        self.assertEqual(len(brains), 2)
+        self.assertEqual(len(brains), 3)
 
         paths = [it.getPath() for it in brains]
         self.assertTrue(
@@ -157,6 +169,38 @@ def test_text_in_searchable_text_index(self):
         self.assertTrue(
             '/plone/folder/document' in paths
         )
+        self.assertTrue(
+            '/plone/folder/collection' in paths
+        )
+
+    def test_collection_text_in_searchable_text_index_after_upgrade(self):
+        # At first, the text field of Collections did not end up
+        # in the SearchableText index.
+        # To mimic this, we reindex the object and afterwards set the text.
+        self.collection.reindexObject()
+        # Check that nothing is found yet.
+        # This is needed to force a flush of the indexing queue.
+        brains = self.catalog.searchResults(dict(
+            SearchableText=u'Lorem ipsum',
+        ))
+        self.assertEqual(len(brains), 0)
+        self.collection.text = RichTextValue(
+            u'Lorem ipsum',
+            'text/plain',
+            'text/html'
+        )
+        brains = self.catalog.searchResults(dict(
+            SearchableText=u'Lorem ipsum',
+        ))
+        self.assertEqual(len(brains), 0)
+        # Now we apply the upgrade.
+        from plone.app.contenttypes.upgrades import searchabletext_collections
+        searchabletext_collections(self.portal.portal_setup)
+        brains = self.catalog.searchResults(dict(
+            SearchableText=u'Lorem ipsum',
+        ))
+        self.assertEqual(len(brains), 1)
+        self.assertEqual(brains[0].getPath(), '/plone/folder/collection')
 
     def test_html_stripped_searchable_text_index(self):
         """Ensure, html tags are stripped out from the content and not indexed.
diff --git a/plone/app/contenttypes/upgrades.py b/plone/app/contenttypes/upgrades.py
index 5eea8bd2..849d8766 100644
--- a/plone/app/contenttypes/upgrades.py
+++ b/plone/app/contenttypes/upgrades.py
@@ -209,3 +209,12 @@ def _fixup(obj, view_map):
             _fixup(obj, LISTING_VIEW_MAPPING)
         if portal_type == 'Plone Site':
             _fixup(context, LISTING_VIEW_MAPPING)
+
+
+def searchabletext_collections(context):
+    """Reindex Collections for SearchableText."""
+    catalog = getToolByName(context, 'portal_catalog')
+    search = catalog.unrestrictedSearchResults
+    for brain in search(portal_type='Collection'):
+        obj = brain.getObject()
+        obj.reindexObject(idxs=['SearchableText'])
diff --git a/plone/app/contenttypes/upgrades.zcml b/plone/app/contenttypes/upgrades.zcml
index f4cf0f51..ed10c076 100644
--- a/plone/app/contenttypes/upgrades.zcml
+++ b/plone/app/contenttypes/upgrades.zcml
@@ -71,4 +71,12 @@
       handler=".upgrades.use_new_view_names"
       />
 
+  <genericsetup:upgradeStep
+      source="1104"
+      destination="1105"
+      title="Reindex SearchableText for Collections"
+      profile="plone.app.contenttypes:default"
+      handler=".upgrades.searchabletext_collections"
+      />
+
 </configure>


