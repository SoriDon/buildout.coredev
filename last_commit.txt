Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2017-02-02T18:22:53+01:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/plone.app.dexterity/commit/46445116a554d485f0eee226c0ee80fb399e002e

fix testbrowser tests

Files changed:
M CHANGES.rst
M plone/app/dexterity/tests/editing.txt
M plone/app/dexterity/tests/filename.txt

diff --git a/CHANGES.rst b/CHANGES.rst
index 29dfef0..2f1adfe 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -20,6 +20,8 @@ Bug fixes:
   It is only imported over there.
   [jensens]
 
+- Fix tests when using zope.testbrowser 5.0 [davisagli]
+
 
 2.3.6 (2017-01-20)
 ------------------
diff --git a/plone/app/dexterity/tests/editing.txt b/plone/app/dexterity/tests/editing.txt
index 40eb745..cb9cb37 100644
--- a/plone/app/dexterity/tests/editing.txt
+++ b/plone/app/dexterity/tests/editing.txt
@@ -291,7 +291,7 @@ Cloning a content type
 A content type can be cloned.
 
   >>> browser.open('http://nohost/plone/dexterity-types')
-  >>> browser.getControl(name='crud-edit.plonista.widgets.select:list').value = ['0']
+  >>> browser.getControl(name='crud-edit.plonista.widgets.select:list').controls[0].selected = True
   >>> browser.getControl('Clone').click()
   >>> browser.url
   'http://nohost/plone/dexterity-types/plonista/@@clone'
@@ -340,7 +340,7 @@ To avoid confusion, the title must also be unique.
 Similar checks are performed when cloning.
 
   >>> browser.open('http://nohost/plone/dexterity-types')
-  >>> browser.getControl(name='crud-edit.plonista.widgets.select:list').value = ['0']
+  >>> browser.getControl(name='crud-edit.plonista.widgets.select:list').controls[0].selected = True
   >>> browser.getControl('Clone').click()
   >>> browser.getControl('Type Name').value = 'foobar'
   >>> browser.getControl('Short Name').value = 'plonista'
@@ -351,7 +351,7 @@ Similar checks are performed when cloning.
   True
 
   >>> browser.open('http://nohost/plone/dexterity-types')
-  >>> browser.getControl(name='crud-edit.plonista.widgets.select:list').value = ['0']
+  >>> browser.getControl(name='crud-edit.plonista.widgets.select:list').controls[0].selected = True
   >>> browser.getControl('Clone').click()
   >>> browser.getControl('Type Name').value = 'Plonista'
   >>> browser.getControl('Short Name').value = 'foobar'
@@ -410,7 +410,7 @@ We can control which content types are allowed to be added into the
 container::
 
   >>> browser.open('http://nohost/plone/dexterity-types/plonista-folder')
-  >>> browser.getControl('Some content types').click()
+  >>> browser.getControl('Some content types', index=0).click()
   >>> select = browser.getControl(name="form.widgets.allowed_content_types:list")
   >>> select
   <ListControl name='form.widgets.allowed_content_types:list' type='select'>
@@ -441,7 +441,7 @@ Removing a content type
 We can also delete a content type via the configlet::
 
   >>> browser.open('http://nohost/plone/@@dexterity-types')
-  >>> browser.getControl(name='crud-edit.plonista.widgets.select:list').value = ['0']
+  >>> browser.getControl(name='crud-edit.plonista.widgets.select:list').controls[0].selected = True
   >>> browser.getControl('Delete').click()
 
 Now the FTI for the type should no longer be present in portal_types::
@@ -470,8 +470,8 @@ their checkboxes, push the export types button, and get a download for a
 zip archive containing files ready to drop into our profile::
 
     >>> browser.open('http://nohost/plone/dexterity-types')
-    >>> browser.getControl(name='crud-edit.plonista2.widgets.select:list').value = ['0']
-    >>> browser.getControl(name='crud-edit.plonista-folder.widgets.select:list').value = ['0']
+    >>> browser.getControl(name='crud-edit.plonista2.widgets.select:list').controls[0].selected = True
+    >>> browser.getControl(name='crud-edit.plonista-folder.widgets.select:list').controls[0].selected = True
     >>> browser.getControl('Export Type Profiles').click()
     >>> browser.url
     'http://nohost/plone/dexterity-types/@@types-export?selected=plonista2%2Cplonista-folder'
@@ -499,8 +499,8 @@ their checkboxes, push the export models button, and get a download for a
 zip archive containing supermodel xml files::
 
     >>> browser.open('http://nohost/plone/dexterity-types')
-    >>> browser.getControl(name='crud-edit.plonista2.widgets.select:list').value = ['0']
-    >>> browser.getControl(name='crud-edit.plonista-folder.widgets.select:list').value = ['0']
+    >>> browser.getControl(name='crud-edit.plonista2.widgets.select:list').controls[0].selected = True
+    >>> browser.getControl(name='crud-edit.plonista-folder.widgets.select:list').controls[0].selected = True
     >>> browser.getControl('Export Schema Models').click()
     >>> browser.url
     'http://nohost/plone/dexterity-types/@@models-export?selected=plonista2%2Cplonista-folder'
@@ -528,7 +528,7 @@ If there's only one item selected, we get a single XML file rather than a zip
 file::
 
     >>> browser.open('http://nohost/plone/dexterity-types')
-    >>> browser.getControl(name='crud-edit.plonista2.widgets.select:list').value = ['0']
+    >>> browser.getControl(name='crud-edit.plonista2.widgets.select:list').controls[0].selected = True
     >>> browser.getControl('Export Schema Models').click()
     >>> browser.url
     'http://nohost/plone/dexterity-types/@@models-export?selected=plonista2'
diff --git a/plone/app/dexterity/tests/filename.txt b/plone/app/dexterity/tests/filename.txt
index 65a857e..944420f 100644
--- a/plone/app/dexterity/tests/filename.txt
+++ b/plone/app/dexterity/tests/filename.txt
@@ -37,9 +37,9 @@ appropriately::
 
   >>> browser.open('http://nohost/plone/++add++file_type')
   >>> browser.getControl('Title').value = 'A test file'
-  >>> from cStringIO import StringIO
+  >>> from io import BytesIO
   >>> browser.getControl(name="form.widgets.file").add_file(
-  ...     StringIO('File contents'), 'text/plain', 'foo.txt')
+  ...     BytesIO(b'File contents'), 'text/plain', 'foo.txt')
   >>> browser.getControl('Save').click()
   >>> browser.url
   'http://nohost/plone/foo.txt/view'


Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2017-02-02T19:56:21+01:00
Author: David Glick (davisagli) <david.glick@plone.org>
Commit: https://github.com/plone/plone.app.dexterity/commit/bfa7a7d4e8338f30601cd20e757b5561ce92b81a

Merge pull request #235 from plone/plonezope4

fix testbrowser tests

Files changed:
M CHANGES.rst
M plone/app/dexterity/tests/editing.txt
M plone/app/dexterity/tests/filename.txt

diff --git a/CHANGES.rst b/CHANGES.rst
index 29dfef0..2f1adfe 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -20,6 +20,8 @@ Bug fixes:
   It is only imported over there.
   [jensens]
 
+- Fix tests when using zope.testbrowser 5.0 [davisagli]
+
 
 2.3.6 (2017-01-20)
 ------------------
diff --git a/plone/app/dexterity/tests/editing.txt b/plone/app/dexterity/tests/editing.txt
index 40eb745..cb9cb37 100644
--- a/plone/app/dexterity/tests/editing.txt
+++ b/plone/app/dexterity/tests/editing.txt
@@ -291,7 +291,7 @@ Cloning a content type
 A content type can be cloned.
 
   >>> browser.open('http://nohost/plone/dexterity-types')
-  >>> browser.getControl(name='crud-edit.plonista.widgets.select:list').value = ['0']
+  >>> browser.getControl(name='crud-edit.plonista.widgets.select:list').controls[0].selected = True
   >>> browser.getControl('Clone').click()
   >>> browser.url
   'http://nohost/plone/dexterity-types/plonista/@@clone'
@@ -340,7 +340,7 @@ To avoid confusion, the title must also be unique.
 Similar checks are performed when cloning.
 
   >>> browser.open('http://nohost/plone/dexterity-types')
-  >>> browser.getControl(name='crud-edit.plonista.widgets.select:list').value = ['0']
+  >>> browser.getControl(name='crud-edit.plonista.widgets.select:list').controls[0].selected = True
   >>> browser.getControl('Clone').click()
   >>> browser.getControl('Type Name').value = 'foobar'
   >>> browser.getControl('Short Name').value = 'plonista'
@@ -351,7 +351,7 @@ Similar checks are performed when cloning.
   True
 
   >>> browser.open('http://nohost/plone/dexterity-types')
-  >>> browser.getControl(name='crud-edit.plonista.widgets.select:list').value = ['0']
+  >>> browser.getControl(name='crud-edit.plonista.widgets.select:list').controls[0].selected = True
   >>> browser.getControl('Clone').click()
   >>> browser.getControl('Type Name').value = 'Plonista'
   >>> browser.getControl('Short Name').value = 'foobar'
@@ -410,7 +410,7 @@ We can control which content types are allowed to be added into the
 container::
 
   >>> browser.open('http://nohost/plone/dexterity-types/plonista-folder')
-  >>> browser.getControl('Some content types').click()
+  >>> browser.getControl('Some content types', index=0).click()
   >>> select = browser.getControl(name="form.widgets.allowed_content_types:list")
   >>> select
   <ListControl name='form.widgets.allowed_content_types:list' type='select'>
@@ -441,7 +441,7 @@ Removing a content type
 We can also delete a content type via the configlet::
 
   >>> browser.open('http://nohost/plone/@@dexterity-types')
-  >>> browser.getControl(name='crud-edit.plonista.widgets.select:list').value = ['0']
+  >>> browser.getControl(name='crud-edit.plonista.widgets.select:list').controls[0].selected = True
   >>> browser.getControl('Delete').click()
 
 Now the FTI for the type should no longer be present in portal_types::
@@ -470,8 +470,8 @@ their checkboxes, push the export types button, and get a download for a
 zip archive containing files ready to drop into our profile::
 
     >>> browser.open('http://nohost/plone/dexterity-types')
-    >>> browser.getControl(name='crud-edit.plonista2.widgets.select:list').value = ['0']
-    >>> browser.getControl(name='crud-edit.plonista-folder.widgets.select:list').value = ['0']
+    >>> browser.getControl(name='crud-edit.plonista2.widgets.select:list').controls[0].selected = True
+    >>> browser.getControl(name='crud-edit.plonista-folder.widgets.select:list').controls[0].selected = True
     >>> browser.getControl('Export Type Profiles').click()
     >>> browser.url
     'http://nohost/plone/dexterity-types/@@types-export?selected=plonista2%2Cplonista-folder'
@@ -499,8 +499,8 @@ their checkboxes, push the export models button, and get a download for a
 zip archive containing supermodel xml files::
 
     >>> browser.open('http://nohost/plone/dexterity-types')
-    >>> browser.getControl(name='crud-edit.plonista2.widgets.select:list').value = ['0']
-    >>> browser.getControl(name='crud-edit.plonista-folder.widgets.select:list').value = ['0']
+    >>> browser.getControl(name='crud-edit.plonista2.widgets.select:list').controls[0].selected = True
+    >>> browser.getControl(name='crud-edit.plonista-folder.widgets.select:list').controls[0].selected = True
     >>> browser.getControl('Export Schema Models').click()
     >>> browser.url
     'http://nohost/plone/dexterity-types/@@models-export?selected=plonista2%2Cplonista-folder'
@@ -528,7 +528,7 @@ If there's only one item selected, we get a single XML file rather than a zip
 file::
 
     >>> browser.open('http://nohost/plone/dexterity-types')
-    >>> browser.getControl(name='crud-edit.plonista2.widgets.select:list').value = ['0']
+    >>> browser.getControl(name='crud-edit.plonista2.widgets.select:list').controls[0].selected = True
     >>> browser.getControl('Export Schema Models').click()
     >>> browser.url
     'http://nohost/plone/dexterity-types/@@models-export?selected=plonista2'
diff --git a/plone/app/dexterity/tests/filename.txt b/plone/app/dexterity/tests/filename.txt
index 65a857e..944420f 100644
--- a/plone/app/dexterity/tests/filename.txt
+++ b/plone/app/dexterity/tests/filename.txt
@@ -37,9 +37,9 @@ appropriately::
 
   >>> browser.open('http://nohost/plone/++add++file_type')
   >>> browser.getControl('Title').value = 'A test file'
-  >>> from cStringIO import StringIO
+  >>> from io import BytesIO
   >>> browser.getControl(name="form.widgets.file").add_file(
-  ...     StringIO('File contents'), 'text/plain', 'foo.txt')
+  ...     BytesIO(b'File contents'), 'text/plain', 'foo.txt')
   >>> browser.getControl('Save').click()
   >>> browser.url
   'http://nohost/plone/foo.txt/view'


