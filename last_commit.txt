Repository: plone.subrequest


Branch: refs/heads/master
Date: 2019-04-16T11:55:36+02:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/plone.subrequest/commit/5c447aa7312be6fcd5aa1f547e08bf864e9f7c40

fix-encoding-error-while-error-logging

Files changed:
M plone/subrequest/__init__.py

b"diff --git a/plone/subrequest/__init__.py b/plone/subrequest/__init__.py\nindex c9118aa..d41c858 100644\n--- a/plone/subrequest/__init__.py\n+++ b/plone/subrequest/__init__.py\n@@ -167,7 +167,7 @@ def subrequest(url, root=None, stdout=None, exception_handler=None):\n             for key, value in request.response.cookies.items():\n                 parent_request.response.cookies[key] = value\n         except Exception as e:\n-            logger.exception('Error handling subrequest to {0}'.format(url))\n+            logger.exception(u'Error handling subrequest to {0}'.format(url))\n             if exception_handler is not None:\n                 exception_handler(response, e)\n             else:\n"

Repository: plone.subrequest


Branch: refs/heads/master
Date: 2019-04-17T10:22:52+02:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/plone.subrequest/commit/e84d86f15a63b9c7525e70b9e693709eae6d045f

fix regression bug which was breaking Python 2.7 when tiles contain non-ascii characters.

Files changed:
M plone/subrequest/__init__.py

b"diff --git a/plone/subrequest/__init__.py b/plone/subrequest/__init__.py\nindex d41c858..fbc5852 100644\n--- a/plone/subrequest/__init__.py\n+++ b/plone/subrequest/__init__.py\n@@ -78,8 +78,8 @@ class IDisableCSRFProtection(Interface):\n \n def subrequest(url, root=None, stdout=None, exception_handler=None):\n     assert url is not None, 'You must pass a url'\n-    if isinstance(url, six.binary_type):\n-        url = url.decode('utf-8')\n+    if six.PY2 and isinstance(url, six.text_type):\n+        url = url.encode('utf-8')\n     _, _, path, query, _ = urlsplit(url)\n     parent_request = getRequest()\n     assert parent_request is not None, \\\n"

Repository: plone.subrequest


Branch: refs/heads/master
Date: 2019-04-17T10:28:08+02:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/plone.subrequest/commit/c04ed6b91b7eee99f090036a0296b45a3e272b02

Add changelog entry

Files changed:
A news/22.bugfix

b'diff --git a/news/22.bugfix b/news/22.bugfix\nnew file mode 100644\nindex 0000000..1d95d3c\n--- /dev/null\n+++ b/news/22.bugfix\n@@ -0,0 +1 @@\n+fix regression bug which was breaking in Python 2.7 when tiles contain non-ascii characters [MrTango]\n\\ No newline at end of file\n'

Repository: plone.subrequest


Branch: refs/heads/master
Date: 2019-04-17T11:42:02+02:00
Author: Maik Derstappen (MrTango) <md@derico.de>
Commit: https://github.com/plone/plone.subrequest/commit/3571a969e97c5ab0848fd2c6c29d53ffa5074a9f

Merge pull request #22 from plone/MrTango/fix-encoding-error-while-error-logging

fix-encoding-error-while-error-logging

Files changed:
A news/22.bugfix
M plone/subrequest/__init__.py

b"diff --git a/news/22.bugfix b/news/22.bugfix\nnew file mode 100644\nindex 0000000..1d95d3c\n--- /dev/null\n+++ b/news/22.bugfix\n@@ -0,0 +1 @@\n+fix regression bug which was breaking in Python 2.7 when tiles contain non-ascii characters [MrTango]\n\\ No newline at end of file\ndiff --git a/plone/subrequest/__init__.py b/plone/subrequest/__init__.py\nindex c9118aa..fbc5852 100644\n--- a/plone/subrequest/__init__.py\n+++ b/plone/subrequest/__init__.py\n@@ -78,8 +78,8 @@ class IDisableCSRFProtection(Interface):\n \n def subrequest(url, root=None, stdout=None, exception_handler=None):\n     assert url is not None, 'You must pass a url'\n-    if isinstance(url, six.binary_type):\n-        url = url.decode('utf-8')\n+    if six.PY2 and isinstance(url, six.text_type):\n+        url = url.encode('utf-8')\n     _, _, path, query, _ = urlsplit(url)\n     parent_request = getRequest()\n     assert parent_request is not None, \\\n@@ -167,7 +167,7 @@ def subrequest(url, root=None, stdout=None, exception_handler=None):\n             for key, value in request.response.cookies.items():\n                 parent_request.response.cookies[key] = value\n         except Exception as e:\n-            logger.exception('Error handling subrequest to {0}'.format(url))\n+            logger.exception(u'Error handling subrequest to {0}'.format(url))\n             if exception_handler is not None:\n                 exception_handler(response, e)\n             else:\n"

