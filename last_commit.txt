Repository: plone.dexterity


Branch: refs/heads/master
Date: 2023-03-06T09:53:16+01:00
Author: Aadarsh Nagrath (Coder-aadarsh) <92307537+Coder-aadarsh@users.noreply.github.com>
Commit: https://github.com/plone/plone.dexterity/commit/69a0280cceef8c98470e2d787571c364e9ca869e

Changes made to file primary.py to return none (#177)

fixes #59: Wrong usage of 'could not adapt' in IPrimaryFieldInfo implementation

* Changes made to file primary.py in order to solve the issue of Type error , and now a None value is returned if no adaptor is available
* bugfix file added

Files changed:
A news/59.bugfix.rst
M plone/dexterity/primary.py

b'diff --git a/news/59.bugfix.rst b/news/59.bugfix.rst\nnew file mode 100644\nindex 0000000..1032b43\n--- /dev/null\n+++ b/news/59.bugfix.rst\n@@ -0,0 +1,12 @@\n+Changelog Entry\n+===============\n+\n+3.0.1 (2023-03-04)\n+------------------\n+Bug fixes:\n+\n+- Type error is removed and none is returned.\n+  In this modified version of the code, if no primary field adapter is found, the fieldname and field attributes are set to None. The value property checks whether the field attribute is None, and returns None if it is, instead of raising an error.\n+  [Coder-aadarsh] (#59)\n+  Bugfixed for issue id :59\n+--\n\\ No newline at end of file\ndiff --git a/plone/dexterity/primary.py b/plone/dexterity/primary.py\nindex 3e98ffe..2d974ac 100644\n--- a/plone/dexterity/primary.py\n+++ b/plone/dexterity/primary.py\n@@ -19,10 +19,9 @@ def __init__(self, context):\n                 if IPrimaryField.providedBy(field):\n                     primary = (name, field)\n                     break\n-        if not primary:\n-            raise TypeError("Could not adapt", context, IPrimaryFieldInfo)\n-        self.fieldname, self.field = primary\n+        self.fieldname, self.field = primary or (None, None)\n \n     @property\n     def value(self):\n-        return self.field.get(self.context)\n+        return self.field.get(self.context) if self.field else None\n+\n'

