Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2018-07-30T21:57:56+02:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.app.contenttypes/commit/66339cb282e8668356f006008d054fb719117502

Just put the content on the site root

Files changed:
M plone/app/contenttypes/setuphandlers.py

b"diff --git a/plone/app/contenttypes/setuphandlers.py b/plone/app/contenttypes/setuphandlers.py\nindex e28d1bb2..773c8d2a 100644\n--- a/plone/app/contenttypes/setuphandlers.py\n+++ b/plone/app/contenttypes/setuphandlers.py\n@@ -153,9 +153,7 @@ def _setup_constrains(container, allowed_types):\n \n \n def create_frontpage(portal, target_language):\n-    frontpage_id = 'front-page'\n-\n-    if frontpage_id not in portal.keys():\n+    if True:\n         title = _translate(\n             u'front-title',\n             target_language,\n@@ -165,12 +163,8 @@ def create_frontpage(portal, target_language):\n             u'front-description', target_language,\n             u'Congratulations! You have successfully installed Plone.'\n         )\n-        content = createContent(\n-            'Document', id=frontpage_id,\n-            title=title,\n-            description=description,\n-            language=target_language.replace('_', '-').lower())\n-        content = addContentToContainer(portal, content)\n+        portal.title= title\n+        portal.description = description\n         front_text = None\n         if target_language != 'en':\n             util = queryUtility(ITranslationDomain, 'plonefrontpage')\n@@ -189,15 +183,12 @@ def create_frontpage(portal, target_language):\n             )\n             if view is not None:\n                 front_text = bodyfinder(view.index()).strip()\n-        content.text = RichTextValue(\n+        portal.text = RichTextValue(\n             front_text,\n             'text/html',\n             'text/x-html-safe'\n         )\n-\n-        portal.setDefaultPage('front-page')\n-        _publish(content)\n-        content.reindexObject()\n+        portal.reindexObject()\n \n \n def create_news_topic(portal, target_language):\n"

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2018-07-31T22:51:41+02:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.app.contenttypes/commit/7349f54be0c50d6a6b23b6d3560a42ce97538043

Remove old tests + update changelog

Files changed:
M CHANGES.rst
M plone/app/contenttypes/tests/test_content_profile.py

b"diff --git a/CHANGES.rst b/CHANGES.rst\nindex 3d683f9a..898a47e6 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -19,6 +19,11 @@ Breaking changes:\n     'plone.app.contenttypes.behaviors.richtext.IRichTextBehavior'\n   [iham]\n \n+- Plone Site is now a DX container. This means that the front-page object no\n+  longer exists.\n+  Refs PLIP 2454.\n+  [jaroel]\n+\n New features:\n \n - By using correct (Marker-)Interfaces for the ILeadImage and IRichText,\ndiff --git a/plone/app/contenttypes/tests/test_content_profile.py b/plone/app/contenttypes/tests/test_content_profile.py\nindex befdee18..d1d0c370 100644\n--- a/plone/app/contenttypes/tests/test_content_profile.py\n+++ b/plone/app/contenttypes/tests/test_content_profile.py\n@@ -45,27 +45,6 @@ def setUp(self):\n         self.portal = self.layer['portal']\n         self.portal_workflow = getToolByName(self.portal, 'portal_workflow')\n \n-    # #################### #\n-    #   front-page tests   #\n-    # #################### #\n-\n-    def test_frontpage_was_created(self):\n-        # Was the object created?\n-        obj = self.portal['front-page']\n-        self.assertEqual(obj.portal_type, 'Document')\n-\n-    def test_frontpage_is_default_page(self):\n-        # Has the object been set on the container as the default page?\n-        self.assertEqual(self.portal.default_page, 'front-page')\n-\n-    def test_frontpage_is_published(self):\n-        # Has the content object been published?\n-        front_page = self.portal['front-page']\n-        current_state = self.portal_workflow.getInfoFor(\n-            front_page,\n-            'review_state')\n-        self.assertEqual(current_state, 'published')\n-\n     # ################# #\n     #   Members tests   #\n     # ################# #\n"

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2019-02-11T21:58:26+01:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.app.contenttypes/commit/099de5f3eee36f17766cedf02f0a8ba0a7079544

Merge remote-tracking branch 'origin/master' into dxcontainer-siteroot

Files changed:
A news/.gitkeep
A news/480.bugfix
A news/497.bugfix
A news/500.bugfix
A news/503.bugfix
A pyproject.toml
M CHANGES.rst
M MANIFEST.in
M docs/README.rst
M plone/app/contenttypes/behaviors/configure.zcml
M plone/app/contenttypes/browser/file.py
M plone/app/contenttypes/browser/folder.py
M plone/app/contenttypes/browser/link_redirect_view.py
M plone/app/contenttypes/content.py
M plone/app/contenttypes/indexers.py
M plone/app/contenttypes/migration/browser.py
M plone/app/contenttypes/migration/dxmigration.py
M plone/app/contenttypes/migration/migration.py
M plone/app/contenttypes/migration/topics.py
M plone/app/contenttypes/migration/utils.py
M plone/app/contenttypes/permissions.py
M plone/app/contenttypes/tests/robot/test_collection_location_criterion.robot
M plone/app/contenttypes/tests/test_behaviors_leadimage.py
M plone/app/contenttypes/tests/test_collection.py
M plone/app/contenttypes/tests/test_collection_rss.py
M plone/app/contenttypes/tests/test_content_profile.py
M plone/app/contenttypes/tests/test_document.py
M plone/app/contenttypes/tests/test_event.py
M plone/app/contenttypes/tests/test_file.py
M plone/app/contenttypes/tests/test_folder.py
M plone/app/contenttypes/tests/test_image.py
M plone/app/contenttypes/tests/test_indexes.py
M plone/app/contenttypes/tests/test_link.py
M plone/app/contenttypes/tests/test_migration_browser.py
M plone/app/contenttypes/tests/test_news_item.py
M plone/app/contenttypes/tests/test_upgrades_migrate_to_pa_event.py
M plone/app/contenttypes/tests/test_webdav.py
M plone/app/contenttypes/utils.py
M setup.cfg
M setup.py
D .gitattributes
D plone/app/contenttypes/tests/test_utils.py

b'diff --git a/.gitattributes b/.gitattributes\ndeleted file mode 100644\nindex 6f9ff673..00000000\n--- a/.gitattributes\n+++ /dev/null\n@@ -1 +0,0 @@\n-CHANGES.rst merge=union\ndiff --git a/CHANGES.rst b/CHANGES.rst\nindex 898a47e6..7c213f07 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -1,22 +1,70 @@\n Changelog\n =========\n \n-1.4.12 (unreleased)\n+.. You should *NOT* be adding new change log entries to this file.\n+   You should create a file in the news directory instead.\n+   For helpful instructions, please see:\n+   https://github.com/plone/plone.releaser/blob/master/ADD-A-NEWS-ITEM.rst\n+\n+.. towncrier release notes start\n+\n+2.0.0 (2018-10-30)\n+------------------\n+\n+Breaking changes:\n+\n+- ILeadImage and IRichText behaviors now have proper "Marker"-Interfaces.\n+  As this was only possible by renaming the schema adapter to *Behavior* to\n+  not break with implementations inside the collective, the FTI-behavior-definition\n+  has changed:\n+\n+  - ``plone.app.contenttypes.behaviors.leadimage.ILeadImage``\n+    becomes\n+    ``plone.app.contenttypes.behaviors.leadimage.ILeadImageBehavior``\n+    and\n+  - ``plone.app.contenttypes.behaviors.richtext.IRichText``\n+    becomes\n+    ``plone.app.contenttypes.behaviors.richtext.IRichTextBehavior``\n+\n+  [iham]\n+\n+New features:\n+\n+- By using correct (Marker-)Interfaces for the ILeadImage and IRichText,\n+  the factories are now working properly and can be reconfigured\n+  wherever you might need them. ZCA FTW!\n+  [iham]\n+- Use human_readable_size from Products.CMFPlone.utils to replace getObjSize\n+  script. #1801\n+  [reinhardt]\n+\n+Bug fixes:\n+\n+- The ``Format`` accessor should actually return the ``format`` attribute\n+  (see plone/Products.CMFPlone#2540)\n+  [ale-rt]\n+\n+- Fix resource warnings.\n+  [davisagli]\n+\n+1.4.12 (2018-09-23)\n -------------------\n \n Breaking changes:\n \n - ILeadImage and IRichText behaviors now have proper "Marker"-Interfaces.\n-  As this was only possible by renaming the schema adapter to *Behavior to\n+  As this was only possible by renaming the schema adapter to *Behavior* to\n   not break with implementations inside the collective, the FTI-behavior-definition\n-  has changed\n-    \'plone.app.contenttypes.behaviors.leadimage.ILeadImage\'\n+  has changed:\n+\n+  - ``plone.app.contenttypes.behaviors.leadimage.ILeadImage``\n     becomes\n-    \'plone.app.contenttypes.behaviors.leadimage.ILeadImageBehavior\'\n+    ``plone.app.contenttypes.behaviors.leadimage.ILeadImageBehavior``\n     and\n-    \'plone.app.contenttypes.behaviors.richtext.IRichText\'\n+  - ``plone.app.contenttypes.behaviors.richtext.IRichText``\n     becomes\n-    \'plone.app.contenttypes.behaviors.richtext.IRichTextBehavior\'\n+    ``plone.app.contenttypes.behaviors.richtext.IRichTextBehavior``\n+\n   [iham]\n \n - Plone Site is now a DX container. This means that the front-page object no\n@@ -33,6 +81,15 @@ New features:\n \n Bug fixes:\n \n+- Fix folder layout property migration. The default listing_view layout was\n+  always set if a folder didn\'t have a layout property.\n+  Also a default_page property could be inherited from parent folders or\n+  the Plone Siteroot, causing \'front-page\' default_pages on many folders.\n+  Now only a direct layout property is copied and in that case on the local\n+  default_page if set is copied again.\n+  see `issue 444 <https://github.com/plone/plone.app.contenttypes/issues/444>`\n+  [fredvd]\n+\n - Fixed false implemented Factories and Markers for ILeadImage and IRichText.\n   see `issue 457 <https://github.com/plone/plone.app.contenttypes/issues/476>`\n   [iham]\n@@ -47,6 +104,9 @@ Bug fixes:\n - pep8 cleanup.\n   [iham]\n \n+- Fix various issues in py3\n+  [pbauer]\n+\n \n 1.4.11 (2018-06-18)\n -------------------\n@@ -82,9 +142,11 @@ Bug fixes:\n   [hvelarde]\n \n - Migrations:\n+\n   - Handle ignore catalog errors where a brain can\'t find it\'s object.\n   - Try to delete the layout attribute before setting the layout.\n     Rework parts where the layout is set by always setting the layout.\n+\n   [thet]\n \n - In folder listings, when a content object has no title show it\'s id instead of an empty title.\ndiff --git a/MANIFEST.in b/MANIFEST.in\nindex 90086303..74225c91 100644\n--- a/MANIFEST.in\n+++ b/MANIFEST.in\n@@ -1,6 +1,10 @@\n include *.rst\n+include pyproject.toml\n \n graft docs\n graft plone\n \n global-exclude *.pyc\n+\n+recursive-exclude news *\n+exclude news\ndiff --git a/docs/README.rst b/docs/README.rst\nindex 6bcd4cd4..f7bf6325 100644\n--- a/docs/README.rst\n+++ b/docs/README.rst\n@@ -418,7 +418,10 @@ Information for Addon-Developers\n Design decisions\n ^^^^^^^^^^^^^^^^\n \n-The schemata for the types File, Image and Link are defined in xml-files using ``plone.supermodel``. This allows the types to be editable trough the web. The types Document, News Item, Folder and Event have no schemata at all but only use behaviors to provide their fields.\n+Schemata that are defined in XML-files using ``plone.supermodel`` allow editing those types\' schemata through the web. \n+This is the case for the default File, Image and Link content types. \n+Schemata coming from behaviors, on the other hand, are not editable through the web.\n+The Document, News Item, Folder and Event default types, for example, have no schemata of their own at all, all their fields are provided by behaviors.\n \n \n Installation as a dependency from another product\ndiff --git a/news/.gitkeep b/news/.gitkeep\nnew file mode 100644\nindex 00000000..e69de29b\ndiff --git a/news/480.bugfix b/news/480.bugfix\nnew file mode 100644\nindex 00000000..83060cf3\n--- /dev/null\n+++ b/news/480.bugfix\n@@ -0,0 +1,7 @@\n+Following the rename of the lead image and rich text behaviors, use the new\n+setting of plone.behavior to register their ``former_dotted_names``, so that\n+consumers that have stored the old dotted name have a chance of recovering.\n+This is especially needed for plone.app.versioningbehavior,\n+see `issue <https://github.com/plone/plone.app.versioningbehavior/pull/45>`\n+[pysailor]\n+\ndiff --git a/news/497.bugfix b/news/497.bugfix\nnew file mode 100644\nindex 00000000..738f3510\n--- /dev/null\n+++ b/news/497.bugfix\n@@ -0,0 +1,3 @@\n+Fixed sorting error after Changing the base class for existing objects.\n+see `issue <https://github.com/plone/plone.app.contenttypes/issues/487>`\n+[jianaijun]\ndiff --git a/news/500.bugfix b/news/500.bugfix\nnew file mode 100644\nindex 00000000..128d36de\n--- /dev/null\n+++ b/news/500.bugfix\n@@ -0,0 +1,4 @@\n+Fix for folder view when there is one item more than the batch size.\n+see `issue <https://github.com/plone/plone.app.contenttypes/issues/500>`\n+[reinhardt]\n+\ndiff --git a/news/503.bugfix b/news/503.bugfix\nnew file mode 100644\nindex 00000000..5669cecf\n--- /dev/null\n+++ b/news/503.bugfix\n@@ -0,0 +1,2 @@\n+replace catalog_get_all(catalog) with catalog.getAllBrains()\n+[pbauer]\ndiff --git a/plone/app/contenttypes/behaviors/configure.zcml b/plone/app/contenttypes/behaviors/configure.zcml\nindex 69cb53fb..a5136858 100644\n--- a/plone/app/contenttypes/behaviors/configure.zcml\n+++ b/plone/app/contenttypes/behaviors/configure.zcml\n@@ -15,6 +15,7 @@\n     factory=".leadimage.LeadImage"\n     for="plone.dexterity.interfaces.IDexterityContent"\n     marker=".leadimage.ILeadImage"\n+    former_dotted_names="plone.app.contenttypes.behaviors.leadimage.ILeadImage"\n     />\n \n   <browser:viewlet\n@@ -53,6 +54,7 @@\n     factory=".richtext.RichText"\n     for="plone.dexterity.interfaces.IDexterityContent"\n     marker=".richtext.IRichText"\n+    former_dotted_names="plone.app.contenttypes.behaviors.richtext.IRichText"\n     />\n \n   <plone:behavior\ndiff --git a/plone/app/contenttypes/browser/file.py b/plone/app/contenttypes/browser/file.py\nindex cbe05ddd..ce09ea38 100644\n--- a/plone/app/contenttypes/browser/file.py\n+++ b/plone/app/contenttypes/browser/file.py\n@@ -1,6 +1,6 @@\n # -*- coding: utf-8 -*-\n from plone.app.contenttypes.browser.utils import Utils\n-from plone.app.contenttypes.utils import human_readable_size\n+from Products.CMFPlone.utils import human_readable_size\n \n \n class FileView(Utils):\ndiff --git a/plone/app/contenttypes/browser/folder.py b/plone/app/contenttypes/browser/folder.py\nindex 3e1f7541..9b77f6b7 100644\n--- a/plone/app/contenttypes/browser/folder.py\n+++ b/plone/app/contenttypes/browser/folder.py\n@@ -89,6 +89,7 @@ def results(self, **kwargs):\n         kwargs.setdefault(\'batch\', True)\n         kwargs.setdefault(\'b_size\', self.b_size)\n         kwargs.setdefault(\'b_start\', self.b_start)\n+        kwargs.setdefault(\'orphan\', 1)\n \n         listing = aq_inner(self.context).restrictedTraverse(\n             \'@@folderListing\', None)\ndiff --git a/plone/app/contenttypes/browser/link_redirect_view.py b/plone/app/contenttypes/browser/link_redirect_view.py\nindex b9c385f3..3287fd2e 100644\n--- a/plone/app/contenttypes/browser/link_redirect_view.py\n+++ b/plone/app/contenttypes/browser/link_redirect_view.py\n@@ -7,6 +7,8 @@\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from zope.component import getUtility\n \n+import six\n+\n \n # links starting with these URL scheme should not be redirected to\n NON_REDIRECTABLE_URL_SCHEMES = [\n@@ -53,8 +55,10 @@ def __call__(self):\n             and not self._url_uses_scheme(NON_REDIRECTABLE_URL_SCHEMES)\n \n         if redirect_links and not can_edit:\n-            return self.request.RESPONSE.redirect(\n-                self.absolute_target_url().encode(\'utf-8\'))\n+            target_url = self.absolute_target_url()\n+            if six.PY2:\n+                target_url = target_url.encode(\'utf-8\')\n+            return self.request.RESPONSE.redirect(target_url)\n         else:\n             return self.index()\n \ndiff --git a/plone/app/contenttypes/content.py b/plone/app/contenttypes/content.py\nindex 053262d5..b9068c88 100644\n--- a/plone/app/contenttypes/content.py\n+++ b/plone/app/contenttypes/content.py\n@@ -76,6 +76,14 @@ def results(self, **kwargs):\n class Document(Item):\n     """Convenience subclass for ``Document`` portal type\n     """\n+    def Format(self):\n+        \'\'\' Provide a proper accessor for the format attribute\n+        See https://github.com/plone/Products.CMFPlone/issues/2540\n+        \'\'\'\n+        format = self.format\n+        if six.PY2 and isinstance(format, six.text_type):\n+            format = self.format.encode()\n+        return format\n \n \n @implementer(IFile)\n@@ -100,7 +108,7 @@ def PUT(self, REQUEST=None, RESPONSE=None):\n         return response\n \n     def get_size(self):\n-        return getattr(self.file, \'size\', None)\n+        return getattr(self.file, \'size\', 0)\n \n     def content_type(self):\n         return getattr(self.file, \'contentType\', None)\n@@ -134,7 +142,7 @@ def PUT(self, REQUEST=None, RESPONSE=None):\n         return response\n \n     def get_size(self):\n-        return getattr(self.image, \'size\', None)\n+        return getattr(self.image, \'size\', 0)\n \n     def content_type(self):\n         return getattr(self.image, \'contentType\', None)\ndiff --git a/plone/app/contenttypes/indexers.py b/plone/app/contenttypes/indexers.py\nindex 2273ae41..a2ba27fb 100644\n--- a/plone/app/contenttypes/indexers.py\n+++ b/plone/app/contenttypes/indexers.py\n@@ -16,6 +16,7 @@\n from plone.rfc822.interfaces import IPrimaryFieldInfo\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.utils import safe_unicode\n+from Products.CMFPlone.utils import human_readable_size\n from Products.PortalTransforms.libtransforms.utils import MissingBinary\n from ZODB.POSException import ConflictError\n \n@@ -113,7 +114,9 @@ def SearchableText_file(obj):\n     if transforms._findPath(mimetype, \'text/plain\') is None:\n         # check if there is a valid transform available first\n         return SearchableText(obj)\n-    value = str(primary_field.value.data)\n+    value = primary_field.value.data\n+    if six.PY2:\n+        value = str(value)\n     filename = primary_field.value.filename\n     try:\n         transformed_value = transforms.convertTo(\'text/plain\', value,\n@@ -137,7 +140,10 @@ def SearchableText_file(obj):\n \n @indexer(ILink)\n def SearchableText_link(obj):\n-    return _unicode_save_string_concat(SearchableText(obj), obj.remoteUrl)\n+    if obj.remoteUrl:\n+        return _unicode_save_string_concat(SearchableText(obj), obj.remoteUrl)\n+    else:\n+        SearchableText(obj)\n \n \n @indexer(IFolder)\n@@ -160,7 +166,7 @@ def getObjSize_image(obj):\n             u\'please reindex!\'.format(obj.absolute_url())\n         )\n         return\n-    return obj.getObjSize(None, primary_field_info.value.size)\n+    return human_readable_size(primary_field_info.value.size)\n \n \n @indexer(IFile)\n@@ -173,7 +179,7 @@ def getObjSize_file(obj):\n             u\'please reindex!\'.format(obj.absolute_url())\n         )\n         return\n-    return obj.getObjSize(None, primary_field_info.value.size)\n+    return human_readable_size(primary_field_info.value.size)\n \n \n @indexer(IDexterityContent)\ndiff --git a/plone/app/contenttypes/migration/browser.py b/plone/app/contenttypes/migration/browser.py\nindex b02ed140..13a2d8f0 100644\n--- a/plone/app/contenttypes/migration/browser.py\n+++ b/plone/app/contenttypes/migration/browser.py\n@@ -375,7 +375,7 @@ def updateWidgets(self):\n         # Only override when rendering the form. When you unselect\n         # everything the value will be [], not ())\n         if ct_widget.value == ():\n-            ct_widget.value = ATCT_LIST.keys()\n+            ct_widget.value = list(ATCT_LIST)\n             # Call update again since the list-items checked-states are\n             # assigned in z3c.form.browser.checkbox.CheckBoxWidget.update\n             # using the widget.value.\n@@ -481,7 +481,7 @@ def objects_to_be_migrated(self):\n     def estimated_migration_time(self):\n         """ Return the estimated migration time """\n         total_time = self.objects_to_be_migrated() * ONE_OBJECT_MIGRATION_TIME\n-        hours, remainder = divmod(total_time / 1000, 3600)\n+        hours, remainder = divmod(total_time // 1000, 3600)\n         minutes, seconds = divmod(remainder, 60)\n         return {\n             \'hours\': hours,\ndiff --git a/plone/app/contenttypes/migration/dxmigration.py b/plone/app/contenttypes/migration/dxmigration.py\nindex c0a87d55..25e24a25 100644\n--- a/plone/app/contenttypes/migration/dxmigration.py\n+++ b/plone/app/contenttypes/migration/dxmigration.py\n@@ -4,6 +4,7 @@\n from plone.dexterity.interfaces import IDexterityContent\n from plone.dexterity.interfaces import IDexterityFTI\n from plone.event.utils import default_timezone\n+from plone.folder.interfaces import IOrdering\n from Products.BTreeFolder2.BTreeFolder2 import BTreeFolder2Base\n from Products.CMFCore.utils import getToolByName\n from Products.contentmigration.basemigrator.migrator import CMFItemMigrator\n@@ -12,6 +13,7 @@\n from zope.annotation.interfaces import IAnnotations\n from zope.component import queryUtility\n from zope.component.hooks import getSite\n+from zope.interface import alsoProvides\n \n import importlib\n import logging\n@@ -160,6 +162,7 @@ def migrate_base_class_to_new_class(obj,\n     is_container = isinstance(obj, BTreeFolder2Base)\n \n     if was_item and is_container or migrate_to_folderish and is_container:\n+        alsoProvides(obj, IOrdering)\n         #  If Itemish becomes Folderish we have to update obj _tree\n         BTreeFolder2Base._initBTrees(obj)\n \ndiff --git a/plone/app/contenttypes/migration/migration.py b/plone/app/contenttypes/migration/migration.py\nindex df6d66b0..4ee3dd64 100644\n--- a/plone/app/contenttypes/migration/migration.py\n+++ b/plone/app/contenttypes/migration/migration.py\n@@ -32,6 +32,7 @@\n from Products.contentmigration.basemigrator.migrator import CMFItemMigrator\n from Products.contentmigration.basemigrator.walker import CatalogWalker\n from Products.contentmigration.walker import CustomQueryWalker\n+from Acquisition import aq_base\n from zExceptions import NotFound\n from zope.component import adapter\n from zope.component import getAdapters\n@@ -205,19 +206,19 @@ def last_migrate_layout(self):\n         migrate_criteria may get overriden by a later call to\n         migrate_properties.\n         """\n-        old_layout = self.old.getLayout() or getattr(self.old, \'layout\', None)\n+        old_layout = getattr(aq_base(self.old), \'layout\', None)\n         if old_layout:\n-            default_page = self.old.getDefaultPage() or \\\n-                getattr(self.old, \'default_page\', None)\n+            default_page = getattr(aq_base(self.old), \'default_page\', None)\n             try:\n                 # Delete old-style layout attribute.\n                 del self.new.layout\n             except AttributeError:\n                 pass\n+            # always copy over the layout, transform if necessary\n             self.new.setLayout(LISTING_VIEW_MAPPING.get(old_layout, old_layout))  # noqa\n             if default_page:\n                 # any defaultPage is switched of by setLayout\n-                # and needs to set again\n+                # and needs to set again if it was directly on the object\n                 self.new.setDefaultPage(default_page)\n \n \ndiff --git a/plone/app/contenttypes/migration/topics.py b/plone/app/contenttypes/migration/topics.py\nindex fb021fa9..d843cde9 100644\n--- a/plone/app/contenttypes/migration/topics.py\n+++ b/plone/app/contenttypes/migration/topics.py\n@@ -573,7 +573,7 @@ def last_migrate_layout(self):\n             return\n \n         old_layout = self.old.getLayout() or getattr(self.old, \'layout\', None)\n-        if old_layout in LISTING_VIEW_MAPPING.keys():\n+        if old_layout in LISTING_VIEW_MAPPING:\n             self.new.setLayout(LISTING_VIEW_MAPPING[old_layout])\n \n \ndiff --git a/plone/app/contenttypes/migration/utils.py b/plone/app/contenttypes/migration/utils.py\nindex 1ba948a8..2b9adfd1 100644\n--- a/plone/app/contenttypes/migration/utils.py\n+++ b/plone/app/contenttypes/migration/utils.py\n@@ -296,25 +296,13 @@ def __call__(self):\n         return json.dumps(data)\n \n \n-def catalog_get_all(catalog, unique_idx=\'UID\'):\n-    """Get all brains from the catalog.\n-    """\n-    res = [\n-        catalog({\n-            unique_idx: catalog._catalog.getIndexDataForRID(it)[unique_idx]\n-        })[0]\n-        for it in catalog._catalog.data\n-    ]\n-    return res\n-\n-\n def get_all_references(context):\n     results = []\n     # Archetypes\n     # Get all data from the reference_catalog if it exists\n     reference_catalog = getToolByName(context, REFERENCE_CATALOG, None)\n     if reference_catalog is not None:\n-        for brain in catalog_get_all(reference_catalog):\n+        for brain in reference_catalog.getAllBrains():\n             results.append({\n                 \'from_uuid\': brain.sourceUID,\n                 \'to_uuid\': brain.targetUID,\ndiff --git a/plone/app/contenttypes/permissions.py b/plone/app/contenttypes/permissions.py\nindex 486ede08..cacfbba0 100644\n--- a/plone/app/contenttypes/permissions.py\n+++ b/plone/app/contenttypes/permissions.py\n@@ -1,8 +1,7 @@\n # -*- coding: utf-8 -*-\n+from AccessControl.Permission import addPermission\n from AccessControl.SecurityInfo import ModuleSecurityInfo\n from plone.app.contenttypes.utils import DEFAULT_TYPES\n-from Products.CMFCore.permissions import setDefaultRoles\n-\n \n security = ModuleSecurityInfo(\'plone.app.contenttypes\')\n \n@@ -14,7 +13,7 @@\n     permid = \'Add\' + typename\n     permname = \'plone.app.contenttypes: Add \' + typename\n     security.declarePublic(permid)\n-    setDefaultRoles(permname, TYPE_ROLES)\n+    addPermission(permname, default_roles=TYPE_ROLES)\n \n AddCollection = \'plone.app.contenttypes: Add Collection\'\n AddDocument = \'plone.app.contenttypes: Add Document\'\ndiff --git a/plone/app/contenttypes/tests/robot/test_collection_location_criterion.robot b/plone/app/contenttypes/tests/robot/test_collection_location_criterion.robot\nindex 39e394c7..7cca6bb9 100644\n--- a/plone/app/contenttypes/tests/robot/test_collection_location_criterion.robot\n+++ b/plone/app/contenttypes/tests/robot/test_collection_location_criterion.robot\n@@ -22,7 +22,6 @@ Test Teardown  Close all browsers\n *** Test cases ***************************************************************\n \n Scenario: Test Relative Location Criterion\n-    [Tags]  unstable\n     [Documentation]  This sometimes fails with:\n     ...              Element locator \'css=#select2-drop input\' did not match any elements after 30 seconds\n     Given I am logged in as site owner\n@@ -35,7 +34,6 @@ Scenario: Test Relative Location Criterion\n \n \n Scenario: Test Absolute Location Criterion\n-    [Tags]  unstable\n     [Documentation]  This sometimes fails with:\n     ...              Element locator \'css=#select2-drop input\' did not match any elements after 30 seconds\n     ...              Or with: Element \'id=content\' should not contain text \'Document outside Folder\' but it did.\ndiff --git a/plone/app/contenttypes/tests/test_behaviors_leadimage.py b/plone/app/contenttypes/tests/test_behaviors_leadimage.py\nindex f397118f..a42331db 100644\n--- a/plone/app/contenttypes/tests/test_behaviors_leadimage.py\n+++ b/plone/app/contenttypes/tests/test_behaviors_leadimage.py\n@@ -62,7 +62,8 @@ def test_lead_image_viewlet_shows_up(self):\n         file_ctl = self.browser.getControl(\n             name=\'form.widgets.ILeadImageBehavior.image\'\n         )\n-        file_ctl.add_file(io.FileIO(file_path), \'image/png\', \'image.jpg\')\n+        with io.FileIO(file_path, \'rb\') as f:\n+            file_ctl.add_file(f, \'image/png\', \'image.jpg\')\n         # Image caption\n         self.browser.getControl(\n             name=\'form.widgets.ILeadImageBehavior.image_caption\'\ndiff --git a/plone/app/contenttypes/tests/test_collection.py b/plone/app/contenttypes/tests/test_collection.py\nindex 5377c749..5f3569fc 100644\n--- a/plone/app/contenttypes/tests/test_collection.py\n+++ b/plone/app/contenttypes/tests/test_collection.py\n@@ -36,8 +36,10 @@\n def dummy_image():\n     from plone.namedfile.file import NamedBlobImage\n     filename = os.path.join(os.path.dirname(__file__), u\'image.png\')\n+    with open(filename, \'rb\') as f:\n+        image_data = f.read() \n     return NamedBlobImage(\n-        data=open(filename, \'r\').read(),\n+        data=image_data,\n         filename=filename\n     )\n \n@@ -115,7 +117,7 @@ def test_schema(self):\n     def test_fti(self):\n         fti = queryUtility(IDexterityFTI,\n                            name=\'Collection\')\n-        self.assertNotEquals(None, fti)\n+        self.assertNotEqual(None, fti)\n \n     def test_factory(self):\n         fti = queryUtility(IDexterityFTI,\ndiff --git a/plone/app/contenttypes/tests/test_collection_rss.py b/plone/app/contenttypes/tests/test_collection_rss.py\nindex ed17d42c..caa07cf2 100644\n--- a/plone/app/contenttypes/tests/test_collection_rss.py\n+++ b/plone/app/contenttypes/tests/test_collection_rss.py\n@@ -10,10 +10,8 @@\n from Products.CMFPlone.interfaces.syndication import ISiteSyndicationSettings\n from zope.component import getUtility\n \n-import unittest\n-\n-\n import six\n+import unittest\n \n \n query = [{\n@@ -69,4 +67,4 @@ def test_view(self):\n     def test_view_is_valid(self):\n         view = self.collection.restrictedTraverse(\'@@RSS\')\n         result = self.assertIsValidRSS(view())\n-        self.assertTrue(\'Collection Test Page\' in etree.tostring(result))\n+        self.assertTrue(b\'Collection Test Page\' in etree.tostring(result))\ndiff --git a/plone/app/contenttypes/tests/test_content_profile.py b/plone/app/contenttypes/tests/test_content_profile.py\nindex d1d0c370..1a772255 100644\n--- a/plone/app/contenttypes/tests/test_content_profile.py\n+++ b/plone/app/contenttypes/tests/test_content_profile.py\n@@ -153,5 +153,5 @@ def test_news_aggregator_settings(self):\n         collection = self.portal[\'news\'][\'aggregator\']\n         self.assertEqual(collection.sort_on, u\'effective\')\n         self.assertEqual(collection.sort_reversed, True)\n-        self.assertItemsEqual(collection.query, query)\n+        self.assertEqual(collection.query, query)\n         self.assertEqual(collection.getLayout(), \'summary_view\')\ndiff --git a/plone/app/contenttypes/tests/test_document.py b/plone/app/contenttypes/tests/test_document.py\nindex 62c79f87..81655a29 100644\n--- a/plone/app/contenttypes/tests/test_document.py\n+++ b/plone/app/contenttypes/tests/test_document.py\n@@ -39,7 +39,7 @@ def test_fti(self):\n             IDexterityFTI,\n             name=\'Document\'\n         )\n-        self.assertNotEquals(None, fti)\n+        self.assertNotEqual(None, fti)\n \n     def test_factory(self):\n         fti = queryUtility(\ndiff --git a/plone/app/contenttypes/tests/test_event.py b/plone/app/contenttypes/tests/test_event.py\nindex f0c50f64..40b53ed7 100644\n--- a/plone/app/contenttypes/tests/test_event.py\n+++ b/plone/app/contenttypes/tests/test_event.py\n@@ -40,7 +40,7 @@ def test_fti(self):\n             IDexterityFTI,\n             name=\'Event\'\n         )\n-        self.assertNotEquals(None, fti)\n+        self.assertNotEqual(None, fti)\n \n     def test_factory(self):\n         fti = queryUtility(\ndiff --git a/plone/app/contenttypes/tests/test_file.py b/plone/app/contenttypes/tests/test_file.py\nindex 147aaa21..022c0aa0 100644\n--- a/plone/app/contenttypes/tests/test_file.py\n+++ b/plone/app/contenttypes/tests/test_file.py\n@@ -43,7 +43,7 @@ def test_fti(self):\n             IDexterityFTI,\n             name=\'File\'\n         )\n-        self.assertNotEquals(None, fti)\n+        self.assertNotEqual(None, fti)\n \n     def test_factory(self):\n         fti = queryUtility(\n@@ -133,7 +133,8 @@ def test_add_file(self):\n         self.browser.getControl(name=widget).value = \'This is my file.\'\n         file_path = os.path.join(os.path.dirname(__file__), \'image.jpg\')\n         file_ctl = self.browser.getControl(name=\'form.widgets.file\')\n-        file_ctl.add_file(io.FileIO(file_path), \'image/png\', \'image.jpg\')\n+        with io.FileIO(file_path, \'rb\') as f:\n+            file_ctl.add_file(f, \'image/png\', \'image.jpg\')\n         self.browser.getControl(\'Save\').click()\n         self.assertTrue(self.browser.url.endswith(\'image.jpg/view\'))\n         self.assertTrue(\'My file\' in self.browser.contents)\n@@ -148,7 +149,8 @@ def test_shortname_file(self):\n         self.browser.getControl(name=widget).value = \'my-special-file\'\n         file_path = os.path.join(os.path.dirname(__file__), \'image.jpg\')\n         file_ctl = self.browser.getControl(name=\'form.widgets.file\')\n-        file_ctl.add_file(io.FileIO(file_path), \'image/png\', \'image.jpg\')\n+        with io.FileIO(file_path, \'rb\') as f:\n+            file_ctl.add_file(f, \'image/png\', \'image.jpg\')\n         self.browser.getControl(\'Save\').click()\n         self.assertTrue(self.browser.url.endswith(\'my-special-file/view\'))\n \n@@ -162,7 +164,8 @@ def test_mime_icon_pdf_for_file_(self):\n         self.browser.getControl(name=widget).value = \'This is my pdf file.\'\n         file_path = os.path.join(os.path.dirname(__file__), \'file.pdf\')\n         file_ctl = self.browser.getControl(name=\'form.widgets.file\')\n-        file_ctl.add_file(io.FileIO(file_path), \'application/pdf\', \'file.pdf\')\n+        with io.FileIO(file_path, \'rb\') as f:\n+            file_ctl.add_file(f, \'application/pdf\', \'file.pdf\')\n         self.browser.getControl(\'Save\').click()\n         self.assertTrue(self.browser.url.endswith(\'file.pdf/view\'))\n         self.assertTrue(\'pdf.png\' in self.browser.contents)\n@@ -181,8 +184,8 @@ def test_alternative_mime_icon_doc_for_file(self):\n         self.browser.getControl(name=widget).value = \'This is my doc file.\'\n         file_path = os.path.join(os.path.dirname(__file__), \'file.doc\')\n         file_ctl = self.browser.getControl(name=\'form.widgets.file\')\n-        file_ctl.add_file(io.FileIO(file_path), \'application/msword\',\n-                          \'file.doc\')\n+        with io.FileIO(file_path, \'rb\') as f:\n+            file_ctl.add_file(f, \'application/msword\', \'file.doc\')\n         self.browser.getControl(\'Save\').click()\n         self.assertTrue(self.browser.url.endswith(\'file.doc/view\'))\n         self.assertTrue(\'custom.png\' in self.browser.contents)\n@@ -197,9 +200,11 @@ def test_mime_icon_odt_for_file_(self):\n         self.browser.getControl(name=widget).value = \'This is my odt file.\'\n         file_path = os.path.join(os.path.dirname(__file__), \'file.odt\')\n         file_ctl = self.browser.getControl(name=\'form.widgets.file\')\n-        file_ctl.add_file(io.FileIO(file_path),\n-                          \'application/vnd.oasis.opendocument.text\',\n-                          \'file.odt\')\n+        with io.FileIO(file_path, \'rb\') as f:\n+            file_ctl.add_file(\n+                f,\n+                \'application/vnd.oasis.opendocument.text\',\n+                \'file.odt\')\n         self.browser.getControl(\'Save\').click()\n         self.assertTrue(self.browser.url.endswith(\'file.odt/view\'))\n         self.assertTrue(\'application.png\' in self.browser.contents)\ndiff --git a/plone/app/contenttypes/tests/test_folder.py b/plone/app/contenttypes/tests/test_folder.py\nindex fa3717a4..a883bead 100644\n--- a/plone/app/contenttypes/tests/test_folder.py\n+++ b/plone/app/contenttypes/tests/test_folder.py\n@@ -38,7 +38,7 @@ def test_fti(self):\n             IDexterityFTI,\n             name=\'Folder\'\n         )\n-        self.assertNotEquals(None, fti)\n+        self.assertNotEqual(None, fti)\n \n     def test_factory(self):\n         fti = queryUtility(\n@@ -98,6 +98,33 @@ def test_result_filtering(self):\n         )\n         self.assertEqual(len(res), 1)\n \n+    def test_result_batching(self):\n+        for idx in range(5):\n+            self.portal.invokeFactory(\'Document\', \'document{}\'.format(idx))\n+        request = self.request.clone()\n+        request.form[\'b_size\'] = 5\n+        view = FolderView(self.portal, request)\n+\n+        batch = view.batch()\n+        self.assertEqual(batch.length, 5)\n+        self.assertEqual(len([item for item in batch]), 5)\n+        self.assertFalse(batch.has_next)\n+\n+        self.portal.invokeFactory(\'Document\', \'document5\')\n+\n+        batch = view.batch()\n+        self.assertEqual(batch.length, 6)\n+        self.assertEqual(len([item for item in batch]), 6)\n+        self.assertFalse(batch.has_next)\n+\n+        self.portal.invokeFactory(\'Document\', \'document6\')\n+\n+        batch = view.batch()\n+        self.assertEqual(batch.length, 5)\n+        self.assertEqual(len([item for item in batch]), 5)\n+        self.assertTrue(batch.has_next)\n+        self.assertEqual(batch.next_item_count, 2)\n+\n \n class FolderFunctionalTest(unittest.TestCase):\n \ndiff --git a/plone/app/contenttypes/tests/test_image.py b/plone/app/contenttypes/tests/test_image.py\nindex e86bbe3b..9974c82e 100644\n--- a/plone/app/contenttypes/tests/test_image.py\n+++ b/plone/app/contenttypes/tests/test_image.py\n@@ -15,14 +15,17 @@\n \n import io\n import os.path\n+import six\n import unittest\n \n \n def dummy_image(filename=u\'image.jpg\'):\n     from plone.namedfile.file import NamedBlobImage\n     filename = os.path.join(os.path.dirname(__file__), filename)\n+    with open(filename, \'rb\') as f:\n+        image_data = f.read()\n     return NamedBlobImage(\n-        data=open(filename, \'r\').read(),\n+        data=image_data,\n         filename=filename\n     )\n \n@@ -49,7 +52,7 @@ def test_fti(self):\n             IDexterityFTI,\n             name=\'Image\'\n         )\n-        self.assertNotEquals(None, fti)\n+        self.assertNotEqual(None, fti)\n \n     def test_factory(self):\n         fti = queryUtility(\n@@ -72,6 +75,15 @@ class ImageViewIntegrationTest(unittest.TestCase):\n \n     layer = PLONE_APP_CONTENTTYPES_INTEGRATION_TESTING\n \n+    if six.PY2:\n+        def assertRegex(self, value, pattern):\n+            # Python 2 backwards compatibility\n+            import re\n+            if not re.search(pattern, value):\n+                raise self.failureException(\n+                    \'%r not found in %s\' % (pattern, value)\n+                )\n+\n     def setUp(self):\n         self.portal = self.layer[\'portal\']\n         self.request = self.layer[\'request\']\n@@ -110,9 +122,9 @@ def test_image_view(self):\n     def test_svg_image(self):\n         self.image.image = dummy_image(u\'image.svg\')\n         scale = self.image.restrictedTraverse(\'@@images\')\n-        self.assertRegexpMatches(\n+        self.assertRegex(\n             scale.scale(\'image\', scale=\'large\').tag(),\n-            r\'<img src="http://nohost/plone/image/@@images/[a-z0-9--]*.svg" alt="My Image" title="My Image" height="768" width="768" />\'  # noqa E501\n+            r\'<img src="http://nohost/plone/image/@@images/[a-z0-9--]*.svg" alt="My Image" title="My Image" height="768" width="768" />\'  # noqa: E501\n         )\n \n \n@@ -143,7 +155,8 @@ def test_add_image(self):\n         self.browser.getControl(name=widget).value = \'my-special-image.jpg\'\n         image_path = os.path.join(os.path.dirname(__file__), \'image.jpg\')\n         image_ctl = self.browser.getControl(name=\'form.widgets.image\')\n-        image_ctl.add_file(io.FileIO(image_path), \'image/png\', \'image.jpg\')\n+        with io.FileIO(image_path, \'rb\') as f:\n+            image_ctl.add_file(f, \'image/png\', \'image.jpg\')\n         self.browser.getControl(\'Save\').click()\n         self.assertTrue(self.browser.url.endswith(\'image.jpg/view\'))\n         self.assertIn(\'My image\', self.browser.contents)\n@@ -159,7 +172,8 @@ def test_add_image_with_shortname(self):\n         self.browser.getControl(name=widget).value = \'my-special-image.jpg\'\n         image_path = os.path.join(os.path.dirname(__file__), \'image.jpg\')\n         image_ctl = self.browser.getControl(name=\'form.widgets.image\')\n-        image_ctl.add_file(io.FileIO(image_path), \'image/png\', \'image.jpg\')\n+        with io.FileIO(image_path, \'rb\') as f:\n+            image_ctl.add_file(f, \'image/png\', \'image.jpg\')\n         self.browser.getControl(\'Save\').click()\n         self.assertTrue(self.browser.url.endswith(\'my-special-image.jpg/view\'))\n \n@@ -175,7 +189,8 @@ def test_image_view_fullscreen(self):\n         self.browser.getControl(name=widget).value = \'This is my image.\'\n         image_path = os.path.join(os.path.dirname(__file__), \'image.jpg\')\n         image_ctl = self.browser.getControl(name=\'form.widgets.image\')\n-        image_ctl.add_file(io.FileIO(image_path), \'image/png\', \'image.jpg\')\n+        with io.FileIO(image_path, \'rb\') as f:\n+            image_ctl.add_file(f, \'image/png\', \'image.jpg\')\n         self.browser.getControl(\'Save\').click()\n         self.browser.getLink(\'Click to view full-size image\').click()\n         self.assertTrue(\ndiff --git a/plone/app/contenttypes/tests/test_indexes.py b/plone/app/contenttypes/tests/test_indexes.py\nindex 52fa7fc4..e10eef5d 100644\n--- a/plone/app/contenttypes/tests/test_indexes.py\n+++ b/plone/app/contenttypes/tests/test_indexes.py\n@@ -244,6 +244,28 @@ def test_raw_text_searchable_text_index(self):\n         self.assertEqual(index_data[\'SearchableText\'].count(\'script\'), 0)\n         self.assertEqual(index_data[\'SearchableText\'].count(\'text\'), 0)\n \n+    def test_file_fulltext_in_searchable_text_plain(self):\n+        from plone.namedfile.file import NamedBlobFile\n+        data = (\'Lorem ipsum. K\xc3\xb6ln <!-- ...oder M\xc3\xbcnchen, das ist hier die \'\n+                \'Frage. -->\')\n+        test_file = NamedBlobFile(data=data, filename=u\'string.txt\')\n+\n+        primary_field_info = IPrimaryFieldInfo(self.file)\n+        primary_field_info.field.set(self.file, test_file)\n+        self.file.reindexObject()\n+\n+        brains = self.catalog.searchResults(dict(\n+            SearchableText=u\'Lorem ipsum\'))\n+        self.assertEqual(len(brains), 1)\n+\n+        brains = self.catalog.searchResults(dict(\n+            SearchableText=u\'K\xc3\xb6ln\'))\n+        self.assertEqual(len(brains), 1)\n+\n+        brains = self.catalog.searchResults(dict(\n+            SearchableText=u\'M\xc3\xbcnchen\'))\n+        self.assertEqual(len(brains), 1)\n+\n     def test_file_fulltext_in_searchable_text_index_string(self):\n         from plone.namedfile.file import NamedBlobFile\n         data = (\'Lorem ipsum. K\xc3\xb6ln <!-- ...oder M\xc3\xbcnchen, das ist hier die \'\n@@ -348,9 +370,8 @@ def test_getobjsize_image(self):\n             path=\'/plone/folder/image\',\n         ))\n \n-        # XXX: Do we still rely on getObjSize in portal_skins/plone_scripts?\n         self.assertEqual(\n-            self.portal.getObjSize(None, primary_field_info.value.size),\n+            \'5.0 KB\',\n             brains[0].getObjSize,\n         )\n \n@@ -358,8 +379,11 @@ def test_getobjsize_file(self):\n         from plone.namedfile.file import NamedBlobFile\n \n         filename = os.path.join(os.path.dirname(__file__), u\'image.jpg\')\n-        test_file = NamedBlobFile(data=open(filename, \'r\').read(),\n-                                  filename=filename)\n+        with open(filename, \'rb\') as f:\n+            file_data = f.read()\n+        test_file = NamedBlobFile(\n+            data=file_data,\n+            filename=filename)\n \n         primary_field_info = IPrimaryFieldInfo(self.file)\n         primary_field_info.field.set(self.file, test_file)\n@@ -369,8 +393,7 @@ def test_getobjsize_file(self):\n             path=\'/plone/folder/file\',\n         ))\n \n-        # XXX: Do we still rely on getObjSize in portal_skins/plone_scripts?\n         self.assertEqual(\n-            self.portal.getObjSize(None, primary_field_info.value.size),\n+            \'5.0 KB\',\n             brains[0].getObjSize,\n         )\ndiff --git a/plone/app/contenttypes/tests/test_link.py b/plone/app/contenttypes/tests/test_link.py\nindex 69e7324a..5f729ba2 100644\n--- a/plone/app/contenttypes/tests/test_link.py\n+++ b/plone/app/contenttypes/tests/test_link.py\n@@ -48,7 +48,7 @@ def test_fti(self):\n             IDexterityFTI,\n             name=\'Link\'\n         )\n-        self.assertNotEquals(None, fti)\n+        self.assertNotEqual(None, fti)\n \n     def test_factory(self):\n         fti = queryUtility(\ndiff --git a/plone/app/contenttypes/tests/test_migration_browser.py b/plone/app/contenttypes/tests/test_migration_browser.py\nindex d98d7c70..f9e4e1c3 100644\n--- a/plone/app/contenttypes/tests/test_migration_browser.py\n+++ b/plone/app/contenttypes/tests/test_migration_browser.py\n@@ -121,11 +121,9 @@ def test_install_dx_type_if_needed(self):\n \n     def test_install_dx_type_if_needed_wrong_type_name(self):\n         from plone.app.contenttypes.migration.utils import installTypeIfNeeded\n-        self.assertRaises(KeyError, installTypeIfNeeded, [\'Unknown\'])\n-        try:\n+        with self.assertRaises(KeyError) as e:\n             installTypeIfNeeded(\'Unknown\')\n-        except KeyError as e:\n-            self.assertEqual(\n-                e.message,\n-                \'Unknown is not one of the default types\'\n-            )\n+        self.assertEqual(\n+            e.exception.args[0],\n+            \'Unknown is not one of the default types\'\n+        )\ndiff --git a/plone/app/contenttypes/tests/test_news_item.py b/plone/app/contenttypes/tests/test_news_item.py\nindex b1277ab6..a2299aa3 100644\n--- a/plone/app/contenttypes/tests/test_news_item.py\n+++ b/plone/app/contenttypes/tests/test_news_item.py\n@@ -47,7 +47,7 @@ def test_fti(self):\n             IDexterityFTI,\n             name=\'News Item\'\n         )\n-        self.assertNotEquals(None, fti)\n+        self.assertNotEqual(None, fti)\n \n     def test_factory(self):\n         fti = queryUtility(\ndiff --git a/plone/app/contenttypes/tests/test_upgrades_migrate_to_pa_event.py b/plone/app/contenttypes/tests/test_upgrades_migrate_to_pa_event.py\nindex ecd92f12..b494254b 100644\n--- a/plone/app/contenttypes/tests/test_upgrades_migrate_to_pa_event.py\n+++ b/plone/app/contenttypes/tests/test_upgrades_migrate_to_pa_event.py\n@@ -1,6 +1,7 @@\n # -*- coding: utf-8 -*-\n from datetime import datetime\n from plone.app.contenttypes.testing import PLONE_APP_CONTENTTYPES_MIGRATION_TESTING  # noqa\n+from plone.app.contenttypes.testing import TEST_MIGRATION\n from plone.app.contenttypes.tests.oldtypes import create1_0EventType\n from plone.app.testing import applyProfile\n from plone.app.testing import login\n@@ -73,6 +74,10 @@ def createOldEvent(self, container, id, start_date, end_date):\n             outputMimeType=\'text/x-html-safe\'\n         )\n \n+    @unittest.skipUnless(\n+        TEST_MIGRATION,\n+        \'Migration tests require ATContentTypes\',\n+    )\n     def test_pact_1_0_dxevent_is_migrated(self):\n         def getNewEventDetail(obj):\n             acc = IEventAccessor(obj)\ndiff --git a/plone/app/contenttypes/tests/test_utils.py b/plone/app/contenttypes/tests/test_utils.py\ndeleted file mode 100644\nindex 91befe16..00000000\n--- a/plone/app/contenttypes/tests/test_utils.py\n+++ /dev/null\n@@ -1,23 +0,0 @@\n-# -*- coding: utf-8 -*-\n-from plone.app.contenttypes.utils import human_readable_size\n-\n-import unittest\n-\n-\n-class PloneAppContenttypesUtilsTestCase(unittest.TestCase):\n-\n-    def test_human_readable_size(self):\n-        self.assertEqual(human_readable_size(0), \'0 B\')\n-        self.assertEqual(human_readable_size(1), \'1 B\')\n-        size = 1000\n-        self.assertEqual(human_readable_size(1000), \'1000 B\')\n-        size += 24\n-        self.assertEqual(human_readable_size(size), \'1.0 KB\')\n-        size += 512\n-        self.assertEqual(human_readable_size(size), \'1.5 KB\')\n-        size *= 1024\n-        self.assertEqual(human_readable_size(size), \'1.5 MB\')\n-        size *= 1024\n-        self.assertEqual(human_readable_size(size), \'1.5 GB\')\n-        size *= 1024\n-        self.assertEqual(human_readable_size(size), \'1536.0 GB\')\ndiff --git a/plone/app/contenttypes/tests/test_webdav.py b/plone/app/contenttypes/tests/test_webdav.py\nindex 0b516541..a4ee5d33 100644\n--- a/plone/app/contenttypes/tests/test_webdav.py\n+++ b/plone/app/contenttypes/tests/test_webdav.py\n@@ -38,7 +38,7 @@ def test_image_put(self):\n         """Upload an image through webdav."""\n         filename = os.path.join(os.path.dirname(__file__), u\'image.jpg\')\n         request = DAVTestRequest(environ={\n-            \'BODYFILE\': open(filename),\n+            \'BODYFILE\': open(filename, \'rb\'),\n             \'PATH_INFO\': \'/foo/bar/image.jpg\',\n         })\n         self.image.REQUEST = request\n@@ -51,7 +51,7 @@ def test_file_put(self):\n         """Upload a file through webdav."""\n         filename = os.path.join(os.path.dirname(__file__), u\'file.pdf\')\n         request = DAVTestRequest(environ={\n-            \'BODYFILE\': open(filename),\n+            \'BODYFILE\': open(filename, \'rb\'),\n             \'PATH_INFO\': \'/foo/bar/file.pdf\',\n         })\n         self.file.REQUEST = request\ndiff --git a/plone/app/contenttypes/utils.py b/plone/app/contenttypes/utils.py\nindex 39858ef5..262fac81 100644\n--- a/plone/app/contenttypes/utils.py\n+++ b/plone/app/contenttypes/utils.py\n@@ -42,18 +42,3 @@ def replace_link_variables_by_paths(context, url):\n def _replace_variable_by_path(url, variable, obj):\n     path = \'/\'.join(obj.getPhysicalPath())\n     return url.replace(variable, path)\n-\n-\n-def human_readable_size(size):\n-    """Return human readable size.\n-    Based on https://stackoverflow.com/a/1094933\n-    """\n-    if size < 1024:\n-        return \'{size} B\'.format(size=size)\n-\n-    for unit in (\'KB\', \'MB\', \'GB\'):\n-        size /= 1024.0\n-        if size < 1024.0:\n-            return \'{size:.1f} {unit}\'.format(size=size, unit=unit)\n-\n-    return \'{size:.1f} GB\'.format(size=size)\ndiff --git a/pyproject.toml b/pyproject.toml\nnew file mode 100644\nindex 00000000..05b615de\n--- /dev/null\n+++ b/pyproject.toml\n@@ -0,0 +1,20 @@\n+[tool.towncrier]\n+filename = "CHANGES.rst"\n+directory = "news/"\n+title_format = "{version} ({project_date})"\n+underlines = ["-", ""]\n+\n+[[tool.towncrier.type]]\n+directory = "breaking"\n+name = "Breaking changes:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "feature"\n+name = "New features:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "bugfix"\n+name = "Bug fixes:"\n+showcontent = true\ndiff --git a/setup.cfg b/setup.cfg\nindex dca4adc4..e015a683 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -8,5 +8,6 @@ ignore =\n     .gitattributes\n     bootstrap-buildout.py\n \n-[zest.releaser]\n-create-wheel = yes\n+\n+[bdist_wheel]\n+universal = 1\ndiff --git a/setup.py b/setup.py\nindex df00e59c..a6a729fe 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -5,7 +5,7 @@\n import os\n \n \n-version = \'1.4.12.dev0\'\n+version = \'2.0.1.dev0\'\n \n \n def read(*rnames):\n@@ -27,16 +27,19 @@ def read(*rnames):\n           "Development Status :: 6 - Mature",\n           "Framework :: Plone",\n           "Framework :: Plone :: 5.1",\n+          "Framework :: Plone :: 5.2",\n           "License :: OSI Approved :: GNU General Public License (GPL)",\n           "Programming Language :: Python",\n           "Programming Language :: Python :: 2.7",\n+          "Programming Language :: Python :: 3.6",\n+          "Programming Language :: Python :: 3.7",\n       ],\n       keywords=\'plone content types dexterity\',\n       author=\'Plone Foundation\',\n       author_email=\'plone-developers@lists.sourceforge.net\',\n       url=\'https://github.com/plone/plone.app.contenttypes\',\n       license=\'GPL\',\n-      packages=find_packages(exclude=[\'ez_setup\']),\n+      packages=find_packages(),\n       namespace_packages=[\'plone\', \'plone.app\'],\n       include_package_data=True,\n       zip_safe=False,\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2019-02-16T16:24:01+01:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.app.contenttypes/commit/566286fb4792588bed0d42b337fa9444da9480e7

Merge remote-tracking branch 'origin/master' into dxcontainer-siteroot

Files changed:
M CHANGES.rst
M plone/app/contenttypes/tests/test_migration.py
M setup.py
D news/480.bugfix
D news/497.bugfix
D news/500.bugfix
D news/503.bugfix

b"diff --git a/CHANGES.rst b/CHANGES.rst\nindex 7c213f07..7b2d22c7 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -8,6 +8,27 @@ Changelog\n \n .. towncrier release notes start\n \n+2.0.1 (2019-02-13)\n+------------------\n+\n+Bug fixes:\n+\n+\n+- Following the rename of the lead image and rich text behaviors, use the new\n+  setting of plone.behavior to register their ``former_dotted_names``, so that\n+  consumers that have stored the old dotted name have a chance of recovering.\n+  This is especially needed for plone.app.versioningbehavior, see `issue\n+  <https://github.com/plone/plone.app.versioningbehavior/pull/45>` [pysailor]\n+  (#480)\n+- Fixed sorting error after Changing the base class for existing objects. see\n+  `issue <https://github.com/plone/plone.app.contenttypes/issues/487>`\n+  [jianaijun] (#497)\n+- Fix for folder view when there is one item more than the batch size. see\n+  `issue <https://github.com/plone/plone.app.contenttypes/issues/500>`\n+  [reinhardt] (#500)\n+- replace catalog_get_all(catalog) with catalog.getAllBrains() [pbauer] (#503)\n+\n+\n 2.0.0 (2018-10-30)\n ------------------\n \ndiff --git a/news/480.bugfix b/news/480.bugfix\ndeleted file mode 100644\nindex 83060cf3..00000000\n--- a/news/480.bugfix\n+++ /dev/null\n@@ -1,7 +0,0 @@\n-Following the rename of the lead image and rich text behaviors, use the new\n-setting of plone.behavior to register their ``former_dotted_names``, so that\n-consumers that have stored the old dotted name have a chance of recovering.\n-This is especially needed for plone.app.versioningbehavior,\n-see `issue <https://github.com/plone/plone.app.versioningbehavior/pull/45>`\n-[pysailor]\n-\ndiff --git a/news/497.bugfix b/news/497.bugfix\ndeleted file mode 100644\nindex 738f3510..00000000\n--- a/news/497.bugfix\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-Fixed sorting error after Changing the base class for existing objects.\n-see `issue <https://github.com/plone/plone.app.contenttypes/issues/487>`\n-[jianaijun]\ndiff --git a/news/500.bugfix b/news/500.bugfix\ndeleted file mode 100644\nindex 128d36de..00000000\n--- a/news/500.bugfix\n+++ /dev/null\n@@ -1,4 +0,0 @@\n-Fix for folder view when there is one item more than the batch size.\n-see `issue <https://github.com/plone/plone.app.contenttypes/issues/500>`\n-[reinhardt]\n-\ndiff --git a/news/503.bugfix b/news/503.bugfix\ndeleted file mode 100644\nindex 5669cecf..00000000\n--- a/news/503.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-replace catalog_get_all(catalog) with catalog.getAllBrains()\n-[pbauer]\ndiff --git a/plone/app/contenttypes/tests/test_migration.py b/plone/app/contenttypes/tests/test_migration.py\nindex f28cac21..8da6ce76 100644\n--- a/plone/app/contenttypes/tests/test_migration.py\n+++ b/plone/app/contenttypes/tests/test_migration.py\n@@ -2008,8 +2008,11 @@ def setUp(self):\n \n         # Change Document conent type to folderish\n         self.browser.open(self.manage_document_url)\n-        self.browser.getControl(name='klass:string') \\\n-            .value = 'plone.app.contenttypes.content.Collection'\n+        try:\n+            klass_ctlr = self.browser.getControl(name='klass:UTF-8:string')\n+        except LookupError:\n+            klass_ctlr = self.browser.getControl(name='klass:string')\n+        klass_ctlr.value = 'plone.app.contenttypes.content.Collection'\n         self.browser.getControl('Save Changes').click()\n         self.browser.open(\n             '{0}/@@base_class_migrator_form'.format(self.portal_url))\ndiff --git a/setup.py b/setup.py\nindex a6a729fe..36b24b72 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -5,7 +5,7 @@\n import os\n \n \n-version = '2.0.1.dev0'\n+version = '2.0.2.dev0'\n \n \n def read(*rnames):\n"

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2019-03-03T11:26:30+01:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.app.contenttypes/commit/4b34c98f6595365a1faa7c324d4d3c6c430d2619

Merge remote-tracking branch 'origin/master' into dxcontainer-siteroot

Files changed:
A news/511.bugfix
M plone/app/contenttypes/tests/robot/test_folderlisting.robot
M setup.py

b"diff --git a/news/511.bugfix b/news/511.bugfix\nnew file mode 100644\nindex 00000000..bb8d0d34\n--- /dev/null\n+++ b/news/511.bugfix\n@@ -0,0 +1,2 @@\n+Fix robots test after dropdownnavigation is enabled for new sites.\n+[pbauer]\n\\ No newline at end of file\ndiff --git a/plone/app/contenttypes/tests/robot/test_folderlisting.robot b/plone/app/contenttypes/tests/robot/test_folderlisting.robot\nindex 76b7a036..f5885a38 100644\n--- a/plone/app/contenttypes/tests/robot/test_folderlisting.robot\n+++ b/plone/app/contenttypes/tests/robot/test_folderlisting.robot\n@@ -14,6 +14,7 @@ Test Teardown  Close all browsers\n \n Scenario: Test listing views\n     Given I am logged in as site owner\n+    I disable dropdown navigation\n \n     When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/listing_view\n     Then Listing should list contained content\n@@ -196,3 +197,9 @@ Setup Testcontent\n I go to\n     [Arguments]  ${location}\n     Go to  ${location}\n+\n+I disable dropdown navigation\n+  Go to  ${PLONE_URL}/@@navigation-controlpanel\n+  Input Text  name=form.widgets.navigation_depth  1\n+  Click Button  Save\n+  Wait until page contains  Changes saved\ndiff --git a/setup.py b/setup.py\nindex 36b24b72..81be5e79 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -56,6 +56,7 @@ def read(*rnames):\n           'plone.namedfile [blobs] >= 4.2.0',\n           'plone.app.versioningbehavior',\n           'plone.app.lockingbehavior',\n+          'plone.behavior >= 1.3.0',\n           'pytz',\n           'plone.app.z3cform>=1.1.0.dev0',\n           'six',\n"

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2019-03-04T16:00:40+01:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.app.contenttypes/commit/fed9890853decd5b5e2bffee855919eaa91e8b59

strip whitespace in robot test and stick value

Files changed:
M plone/app/contenttypes/tests/robot/keywords.txt

b"diff --git a/plone/app/contenttypes/tests/robot/keywords.txt b/plone/app/contenttypes/tests/robot/keywords.txt\nindex fa4df7d8..adca67fb 100644\n--- a/plone/app/contenttypes/tests/robot/keywords.txt\n+++ b/plone/app/contenttypes/tests/robot/keywords.txt\n@@ -127,8 +127,6 @@ I set the criteria ${type} in row ${number} to the options '${label}'\n \n I set the criteria ${type} in row ${number} to the text '${label}'\n   ${criteria_row} =  Convert to String  .querystring-criteria-wrapper:nth-child(${number})\n-  Input text  css=${criteria_row} .querystring-criteria-value input  ${label}\\t\n+  Input text  css=${criteria_row} .querystring-criteria-value input  ${label.strip()}\n   [Documentation]  Shift the focus so the input sticks, and wait a bit\n-  Sleep  1.5\n-  Focus  css=.querystring-sortreverse\n-  Sleep  1.5\n+  Click Element  css=.querystring-preview\n"

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2019-04-06T20:03:06+02:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.app.contenttypes/commit/bfbbf52e89700aa10875bd546d4705c0c51cdb98

Merge remote-tracking branch 'origin/master' into dxcontainer-siteroot

Files changed:
A news/514.bugfix
M CHANGES.rst
M plone/app/contenttypes/browser/templates/listing_summary.pt
M plone/app/contenttypes/content.py
M plone/app/contenttypes/tests/test_webdav.py
M setup.py
D news/511.bugfix

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 7b2d22c7..d12bb798 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -8,6 +8,25 @@ Changelog\n \n .. towncrier release notes start\n \n+2.0.3 (2019-03-21)\n+------------------\n+\n+Bug fixes:\n+\n+\n+- Detect whether a webdav request is RFC822 or pure payload and handle accordingly. (#2781)\n+\n+\n+2.0.2 (2019-03-03)\n+------------------\n+\n+Bug fixes:\n+\n+\n+- Fix robots test after dropdownnavigation is enabled for new sites. [pbauer]\n+  (#511)\n+\n+\n 2.0.1 (2019-02-13)\n ------------------\n \ndiff --git a/news/511.bugfix b/news/511.bugfix\ndeleted file mode 100644\nindex bb8d0d34..00000000\n--- a/news/511.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Fix robots test after dropdownnavigation is enabled for new sites.\n-[pbauer]\n\\ No newline at end of file\ndiff --git a/news/514.bugfix b/news/514.bugfix\nnew file mode 100644\nindex 00000000..74e27a3d\n--- /dev/null\n+++ b/news/514.bugfix\n@@ -0,0 +1,2 @@\n+Add \'content-core\' macro definition to summary_view.pt so it can be reused\n+[petschki]\ndiff --git a/plone/app/contenttypes/browser/templates/listing_summary.pt b/plone/app/contenttypes/browser/templates/listing_summary.pt\nindex ddf660a4..0a923e35 100644\n--- a/plone/app/contenttypes/browser/templates/listing_summary.pt\n+++ b/plone/app/contenttypes/browser/templates/listing_summary.pt\n@@ -8,6 +8,8 @@\n <body>\n \n <metal:content-core fill-slot="content-core">\n+<metal:block define-macro="content-core">\n+\n <metal:block use-macro="context/@@listing_view/macros/content-core">\n \n   <metal:entries fill-slot="entries">\n@@ -58,6 +60,8 @@\n     </metal:block>\n   </metal:entries>\n \n+</metal:block>\n+\n </metal:block>\n </metal:content-core>\n \ndiff --git a/plone/app/contenttypes/content.py b/plone/app/contenttypes/content.py\nindex b9068c88..d191da2e 100644\n--- a/plone/app/contenttypes/content.py\n+++ b/plone/app/contenttypes/content.py\n@@ -1,4 +1,5 @@\n # -*- coding: utf-8 -*-\n+from email.feedparser import headerRE\n from plone.app.contenttypes.interfaces import ICollection\n from plone.app.contenttypes.interfaces import IDocument\n from plone.app.contenttypes.interfaces import IEvent\n@@ -11,6 +12,7 @@\n from plone.dexterity.content import Item\n from plone.namedfile.file import NamedBlobFile\n from plone.namedfile.file import NamedBlobImage\n+from Products.CMFPlone.utils import safe_text\n from zope.deprecation import deprecation\n from zope.interface import implementer\n from zope.lifecycleevent import modified\n@@ -96,16 +98,21 @@ def PUT(self, REQUEST=None, RESPONSE=None):\n         request = REQUEST if REQUEST is not None else self.REQUEST\n         response = RESPONSE if RESPONSE is not None else request.response\n \n-        self.dav__init(request, response)\n-        self.dav__simpleifhandler(request, response, refresh=1)\n-\n         infile = request.get(\'BODYFILE\', None)\n-        filename = request[\'PATH_INFO\'].split(\'/\')[-1]\n-        self.file = NamedBlobFile(\n-            data=infile.read(), filename=six.text_type(filename))\n+        first_line = infile.readline()\n+        infile.seek(0)\n+        if not headerRE.match(safe_text(first_line)):\n+            self.dav__init(request, response)\n+            self.dav__simpleifhandler(request, response, refresh=1)\n+\n+            filename = request[\'PATH_INFO\'].split(\'/\')[-1]\n+            self.file = NamedBlobFile(\n+                data=infile.read(), filename=six.text_type(filename))\n \n-        modified(self)\n-        return response\n+            modified(self)\n+            return response\n+        else:\n+            return super(File, self).PUT(REQUEST=request, RESPONSE=response)\n \n     def get_size(self):\n         return getattr(self.file, \'size\', 0)\n@@ -130,16 +137,22 @@ def PUT(self, REQUEST=None, RESPONSE=None):\n         request = REQUEST if REQUEST is not None else self.REQUEST\n         response = RESPONSE if RESPONSE is not None else request.response\n \n-        self.dav__init(request, response)\n-        self.dav__simpleifhandler(request, response, refresh=1)\n-\n         infile = request.get(\'BODYFILE\', None)\n-        filename = request[\'PATH_INFO\'].split(\'/\')[-1]\n-        self.image = NamedBlobImage(\n-            data=infile.read(), filename=six.text_type(filename))\n-\n-        modified(self)\n-        return response\n+        first_line = infile.readline()\n+        infile.seek(0)\n+        if not headerRE.match(safe_text(first_line)):\n+            self.dav__init(request, response)\n+            self.dav__simpleifhandler(request, response, refresh=1)\n+\n+            infile = request.get(\'BODYFILE\', None)\n+            filename = request[\'PATH_INFO\'].split(\'/\')[-1]\n+            self.image = NamedBlobImage(\n+                data=infile.read(), filename=six.text_type(filename))\n+\n+            modified(self)\n+            return response\n+        else:\n+            return super(Image, self).PUT(REQUEST=request, RESPONSE=response)\n \n     def get_size(self):\n         return getattr(self.image, \'size\', 0)\ndiff --git a/plone/app/contenttypes/tests/test_webdav.py b/plone/app/contenttypes/tests/test_webdav.py\nindex a4ee5d33..6a19a0fd 100644\n--- a/plone/app/contenttypes/tests/test_webdav.py\n+++ b/plone/app/contenttypes/tests/test_webdav.py\n@@ -2,13 +2,22 @@\n from plone.app.contenttypes.testing import PLONE_APP_CONTENTTYPES_INTEGRATION_TESTING  # noqa\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n+from io import BytesIO\n from zope.publisher.browser import TestRequest\n from ZPublisher.HTTPResponse import HTTPResponse\n \n import os.path\n+import pkg_resources\n import unittest\n \n \n+HAS_ZSERVER = True\n+try:\n+    dist = pkg_resources.get_distribution(\'ZServer\')\n+except pkg_resources.DistributionNotFound:\n+    HAS_ZSERVER = False\n+\n+\n class DAVTestRequest(TestRequest):\n     """Mock webdav request."""\n \n@@ -59,3 +68,49 @@ def test_file_put(self):\n         self.assertEqual(self.file.file.filename, u\'file.pdf\')\n         self.assertEqual(self.file.get_size(), 8561)\n         self.assertEqual(self.file.content_type(), \'application/pdf\')\n+\n+    @unittest.skipIf(not HAS_ZSERVER, \'RFC822 not supported without ZServer\')\n+    def test_image_put_rfc822(self):\n+        """Upload an image through webdav/rfc822."""\n+        filename = os.path.join(os.path.dirname(__file__), u\'image.jpg\')\n+        body = BytesIO()\n+        body.write(b"""title: My image\n+Content-Type: image/jpeg\n+Content-Disposition: attachment; filename*="utf-8\'\'image.jpg"\n+Portal-Type: Image\n+\n+""" + open(filename, \'rb\').read()\n+        )\n+        body.seek(0)\n+        request = DAVTestRequest(environ={\n+            \'BODYFILE\': body,\n+            \'PATH_INFO\': \'/foo/bar/image.jpg\',\n+        })\n+        self.image.REQUEST = request\n+        self.image.PUT()\n+        self.assertEqual(self.image.image.filename, u\'image.jpg\')\n+        self.assertEqual(self.image.get_size(), 5131)\n+        self.assertEqual(self.image.content_type(), \'image/jpeg\')\n+\n+    @unittest.skipIf(not HAS_ZSERVER, \'RFC822 not supported without ZServer\')\n+    def test_file_put_rfc822(self):\n+        """Upload a file through webdav/rfc822."""\n+        filename = os.path.join(os.path.dirname(__file__), u\'file.pdf\')\n+        body = BytesIO()\n+        body.write(b"""title: My file\n+Content-Type: application/pdf\n+Content-Disposition: attachment; filename*="utf-8\'\'file.pdf"\n+Portal-Type: File\n+\n+""" + open(filename, \'rb\').read()\n+        )\n+        body.seek(0)\n+        request = DAVTestRequest(environ={\n+            \'BODYFILE\': body,\n+            \'PATH_INFO\': \'/foo/bar/file.pdf\',\n+        })\n+        self.file.REQUEST = request\n+        self.file.PUT()\n+        self.assertEqual(self.file.file.filename, u\'file.pdf\')\n+        self.assertEqual(self.file.get_size(), 8561)\n+        self.assertEqual(self.file.content_type(), \'application/pdf\')\ndiff --git a/setup.py b/setup.py\nindex 81be5e79..a22a0647 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -5,7 +5,7 @@\n import os\n \n \n-version = \'2.0.2.dev0\'\n+version = \'2.0.4.dev0\'\n \n \n def read(*rnames):\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2019-06-21T21:04:13+02:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.app.contenttypes/commit/455975d7f333063af658ddfd5f95138c61d34a20

Merge remote-tracking branch 'origin/master' into dxcontainer-siteroot

Files changed:
M CHANGES.rst
M plone/app/contenttypes/browser/collection.py
M plone/app/contenttypes/browser/folder.py
M plone/app/contenttypes/browser/templates/file.pt
M plone/app/contenttypes/browser/templates/full_view.pt
M plone/app/contenttypes/browser/templates/image.pt
M plone/app/contenttypes/browser/templates/link.pt
M plone/app/contenttypes/browser/templates/listing.pt
M plone/app/contenttypes/browser/templates/listing_album.pt
M plone/app/contenttypes/browser/templates/listing_summary.pt
M plone/app/contenttypes/browser/templates/listing_tabular.pt
M plone/app/contenttypes/browser/templates/newsitem.pt
M plone/app/contenttypes/migration/atct_migrator.pt
M plone/app/contenttypes/migration/atct_migrator_results.pt
M plone/app/contenttypes/migration/browser.py
M plone/app/contenttypes/migration/custom_migration.pt
M plone/app/contenttypes/migration/pac_installer.pt
M plone/app/contenttypes/migration/utils.py
M plone/app/contenttypes/profiles/default/types/Collection.xml
M plone/app/contenttypes/profiles/default/types/Document.xml
M plone/app/contenttypes/profiles/default/types/Event.xml
M plone/app/contenttypes/profiles/default/types/File.xml
M plone/app/contenttypes/profiles/default/types/Folder.xml
M plone/app/contenttypes/profiles/default/types/Image.xml
M plone/app/contenttypes/profiles/default/types/Link.xml
M plone/app/contenttypes/profiles/default/types/News_Item.xml
M plone/app/contenttypes/tests/robot/test_collection_creator_criterion.robot
M plone/app/contenttypes/tests/robot/test_collection_location_criterion.robot
M plone/app/contenttypes/tests/robot/test_collection_review_state_criterion.robot
M plone/app/contenttypes/tests/robot/test_collection_short_name_criterion.robot
M plone/app/contenttypes/tests/robot/test_collection_type_criterion.robot
M plone/app/contenttypes/tests/robot/test_folderlisting.robot
M plone/app/contenttypes/upgrades.py
M setup.py
D news/514.bugfix
D plone/app/contenttypes/tests/robot/contenttypes_keywords.txt

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex d12bb798..e1c7d6e7 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -8,6 +8,46 @@ Changelog\n \n .. towncrier release notes start\n \n+2.1.0 (2019-06-19)\n+------------------\n+\n+New features:\n+\n+\n+- Support ILeadImage behavior when display collection album view.\n+  [rodfersou] (#524)\n+- Add more log-messages during migration from AT to DX.\n+  [pbauer] (#526)\n+\n+\n+Bug fixes:\n+\n+\n+- Use the shared \'Plone test setup\' and \'Plone test teardown\' keywords in Robot tests.\n+  [Rotonen] (#522)\n+\n+\n+2.0.5 (2019-05-04)\n+------------------\n+\n+Bug fixes:\n+\n+\n+- Move dotted behaviors to named behaviors. [iham] (#519)\n+\n+\n+2.0.4 (2019-04-29)\n+------------------\n+\n+Bug fixes:\n+\n+\n+- Add \'content-core\' macro definition to summary_view.pt so it can be reused\n+  [petschki] (#514)\n+- Speed up traversal to main_template by markling it as a browser-view.\n+  [pbauer] (#517)\n+\n+\n 2.0.3 (2019-03-21)\n ------------------\n \ndiff --git a/news/514.bugfix b/news/514.bugfix\ndeleted file mode 100644\nindex 74e27a3d..00000000\n--- a/news/514.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Add \'content-core\' macro definition to summary_view.pt so it can be reused\n-[petschki]\ndiff --git a/plone/app/contenttypes/browser/collection.py b/plone/app/contenttypes/browser/collection.py\nindex fea264b7..a41b6959 100644\n--- a/plone/app/contenttypes/browser/collection.py\n+++ b/plone/app/contenttypes/browser/collection.py\n@@ -2,6 +2,7 @@\n from Acquisition import aq_inner\n from plone.app.contenttypes import _\n from plone.app.contenttypes.behaviors.collection import ICollection\n+from plone.app.contenttypes.behaviors.leadimage import ILeadImage\n from plone.app.contenttypes.browser.folder import FolderView\n from plone.app.contenttypes.interfaces import IFolder\n from plone.app.contenttypes.interfaces import IImage\n@@ -56,10 +57,11 @@ def _album_results(self):\n         for it in results:\n             # TODO: potentially expensive!\n             ob = it.getObject()\n-            if IImage.providedBy(ob):\n-                images.append(it)\n-            elif IFolder.providedBy(ob):\n+            if IFolder.providedBy(ob):\n                 folders.append(it)\n+            elif IImage.providedBy(ob) or \\\n+                 ILeadImage.providedBy(ob):\n+                images.append(it)\n         return {\'images\': images, \'folders\': folders}\n \n     @property\ndiff --git a/plone/app/contenttypes/browser/folder.py b/plone/app/contenttypes/browser/folder.py\nindex 9b77f6b7..99fdd13a 100644\n--- a/plone/app/contenttypes/browser/folder.py\n+++ b/plone/app/contenttypes/browser/folder.py\n@@ -1,13 +1,14 @@\n # -*- coding: utf-8 -*-\n from Acquisition import aq_base\n from Acquisition import aq_inner\n-from Products.CMFPlone.interfaces import ISiteSchema\n from plone.app.contenttypes import _\n+from plone.app.contenttypes.behaviors.leadimage import ILeadImage\n from plone.app.contenttypes.interfaces import IFolder\n from plone.app.contenttypes.interfaces import IImage\n from plone.event.interfaces import IEvent\n from plone.memoize.view import memoize\n from plone.registry.interfaces import IRegistry\n+from Products.CMFPlone.interfaces import ISiteSchema\n from Products.CMFPlone.PloneBatch import Batch\n from Products.CMFPlone.utils import safe_callable\n from Products.Five import BrowserView\n@@ -207,9 +208,13 @@ def formatted_date(self, item):\n     def album_images(self):\n         """Get all images within this folder.\n         """\n+        provides = [\n+            IImage.__identifier__,\n+            ILeadImage.__identifier__,\n+        ]\n         images = self.results(\n             batch=False,\n-            object_provides=IImage.__identifier__\n+            object_provides=provides\n         )\n         return images\n \ndiff --git a/plone/app/contenttypes/browser/templates/file.pt b/plone/app/contenttypes/browser/templates/file.pt\nindex fcdab4f2..25946fe4 100644\n--- a/plone/app/contenttypes/browser/templates/file.pt\n+++ b/plone/app/contenttypes/browser/templates/file.pt\n@@ -3,7 +3,7 @@\n     xmlns:metal="http://xml.zope.org/namespaces/metal"\n     xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n     lang="en"\n-    metal:use-macro="context/main_template/macros/master"\n+    metal:use-macro="context/@@main_template/macros/master"\n     i18n:domain="plone">\n <body>\n \ndiff --git a/plone/app/contenttypes/browser/templates/full_view.pt b/plone/app/contenttypes/browser/templates/full_view.pt\nindex 8d71e34b..85191c0c 100644\n--- a/plone/app/contenttypes/browser/templates/full_view.pt\n+++ b/plone/app/contenttypes/browser/templates/full_view.pt\n@@ -3,7 +3,7 @@\n     xmlns:metal="http://xml.zope.org/namespaces/metal"\n     xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n     lang="en"\n-    metal:use-macro="context/main_template/macros/master"\n+    metal:use-macro="context/@@main_template/macros/master"\n     i18n:domain="plone">\n <body>\n \ndiff --git a/plone/app/contenttypes/browser/templates/image.pt b/plone/app/contenttypes/browser/templates/image.pt\nindex 8f154187..dcebeb9f 100644\n--- a/plone/app/contenttypes/browser/templates/image.pt\n+++ b/plone/app/contenttypes/browser/templates/image.pt\n@@ -3,7 +3,7 @@\n     xmlns:metal="http://xml.zope.org/namespaces/metal"\n     xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n     lang="en"\n-    metal:use-macro="context/main_template/macros/master"\n+    metal:use-macro="context/@@main_template/macros/master"\n     i18n:domain="plone">\n <body>\n \ndiff --git a/plone/app/contenttypes/browser/templates/link.pt b/plone/app/contenttypes/browser/templates/link.pt\nindex 10079cb5..b0a94f56 100644\n--- a/plone/app/contenttypes/browser/templates/link.pt\n+++ b/plone/app/contenttypes/browser/templates/link.pt\n@@ -3,7 +3,7 @@\n     xmlns:metal="http://xml.zope.org/namespaces/metal"\n     xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n     lang="en"\n-    metal:use-macro="context/main_template/macros/master"\n+    metal:use-macro="context/@@main_template/macros/master"\n     i18n:domain="plone">\n <body>\n \ndiff --git a/plone/app/contenttypes/browser/templates/listing.pt b/plone/app/contenttypes/browser/templates/listing.pt\nindex ec1c7bb8..c82dd6ce 100644\n--- a/plone/app/contenttypes/browser/templates/listing.pt\n+++ b/plone/app/contenttypes/browser/templates/listing.pt\n@@ -3,7 +3,7 @@\n     xmlns:metal="http://xml.zope.org/namespaces/metal"\n     xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n     lang="en"\n-    metal:use-macro="context/main_template/macros/master"\n+    metal:use-macro="context/@@main_template/macros/master"\n     i18n:domain="plone">\n <body>\n \ndiff --git a/plone/app/contenttypes/browser/templates/listing_album.pt b/plone/app/contenttypes/browser/templates/listing_album.pt\nindex 1f0d6089..1b517bc7 100644\n--- a/plone/app/contenttypes/browser/templates/listing_album.pt\n+++ b/plone/app/contenttypes/browser/templates/listing_album.pt\n@@ -24,11 +24,13 @@\n       tal:define="portal context/@@plone_portal_state/portal;\n                   image_scale portal/@@image_scale">\n   <tal:images tal:repeat="image images">\n-    <div class="photoAlbumEntry">\n+    <div class="photoAlbumEntry"\n+         tal:define="scale python:image_scale.tag(image, \'image\', scale=\'thumb\')"\n+         tal:condition="scale">\n       <a tal:attributes="href string:${image/getURL}/view;\n                          title image/Description">\n         <span class="photoAlbumEntryWrapper">\n-          <img tal:replace="structure python:image_scale.tag(image, \'image\', scale=\'thumb\')" />\n+          <img tal:replace="structure scale" />\n         </span>\n         <span class="photoAlbumEntryTitle" tal:content="image/Title">\n             Title\ndiff --git a/plone/app/contenttypes/browser/templates/listing_summary.pt b/plone/app/contenttypes/browser/templates/listing_summary.pt\nindex 0a923e35..40dba020 100644\n--- a/plone/app/contenttypes/browser/templates/listing_summary.pt\n+++ b/plone/app/contenttypes/browser/templates/listing_summary.pt\n@@ -3,7 +3,7 @@\n     xmlns:metal="http://xml.zope.org/namespaces/metal"\n     xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n     lang="en"\n-    metal:use-macro="context/main_template/macros/master"\n+    metal:use-macro="context/@@main_template/macros/master"\n     i18n:domain="plone">\n <body>\n \ndiff --git a/plone/app/contenttypes/browser/templates/listing_tabular.pt b/plone/app/contenttypes/browser/templates/listing_tabular.pt\nindex 064062cf..b9b44218 100644\n--- a/plone/app/contenttypes/browser/templates/listing_tabular.pt\n+++ b/plone/app/contenttypes/browser/templates/listing_tabular.pt\n@@ -3,7 +3,7 @@\n     xmlns:metal="http://xml.zope.org/namespaces/metal"\n     xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n     lang="en"\n-    metal:use-macro="context/main_template/macros/master"\n+    metal:use-macro="context/@@main_template/macros/master"\n     i18n:domain="plone">\n <body>\n \ndiff --git a/plone/app/contenttypes/browser/templates/newsitem.pt b/plone/app/contenttypes/browser/templates/newsitem.pt\nindex 9f642abd..18feb59f 100644\n--- a/plone/app/contenttypes/browser/templates/newsitem.pt\n+++ b/plone/app/contenttypes/browser/templates/newsitem.pt\n@@ -3,7 +3,7 @@\n     xmlns:metal="http://xml.zope.org/namespaces/metal"\n     xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n     lang="en"\n-    metal:use-macro="context/main_template/macros/master"\n+    metal:use-macro="context/@@main_template/macros/master"\n     i18n:domain="plone">\n <body>\n \ndiff --git a/plone/app/contenttypes/migration/atct_migrator.pt b/plone/app/contenttypes/migration/atct_migrator.pt\nindex 42b22a96..c6a49e54 100644\n--- a/plone/app/contenttypes/migration/atct_migrator.pt\n+++ b/plone/app/contenttypes/migration/atct_migrator.pt\n@@ -3,7 +3,7 @@\n       xmlns:metal="http://xml.zope.org/namespaces/metal"\n       xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n       lang="en"\n-      metal:use-macro="context/main_template/macros/master"\n+      metal:use-macro="context/@@main_template/macros/master"\n       i18n:domain="plone">\n \n <metal:block fill-slot="top_slot"\ndiff --git a/plone/app/contenttypes/migration/atct_migrator_results.pt b/plone/app/contenttypes/migration/atct_migrator_results.pt\nindex 470dc3ea..65875308 100644\n--- a/plone/app/contenttypes/migration/atct_migrator_results.pt\n+++ b/plone/app/contenttypes/migration/atct_migrator_results.pt\n@@ -3,7 +3,7 @@\n       xmlns:metal="http://xml.zope.org/namespaces/metal"\n       xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n       lang="en"\n-      metal:use-macro="context/main_template/macros/master"\n+      metal:use-macro="context/@@main_template/macros/master"\n       i18n:domain="plone">\n \n <metal:block fill-slot="top_slot"\ndiff --git a/plone/app/contenttypes/migration/browser.py b/plone/app/contenttypes/migration/browser.py\nindex 13a2d8f0..2332aabb 100644\n--- a/plone/app/contenttypes/migration/browser.py\n+++ b/plone/app/contenttypes/migration/browser.py\n@@ -218,6 +218,7 @@ def __call__(self,\n         use_new_view_names(portal, types_to_fix=[\'Plone Site\'])\n \n         if reindex_catalog:\n+            logger.info(\'Rebuiling catalog. This may take a while...\')\n             catalog.clearFindAndRebuild()\n \n         # restore references\ndiff --git a/plone/app/contenttypes/migration/custom_migration.pt b/plone/app/contenttypes/migration/custom_migration.pt\nindex 386f8b20..6a27b2cd 100644\n--- a/plone/app/contenttypes/migration/custom_migration.pt\n+++ b/plone/app/contenttypes/migration/custom_migration.pt\n@@ -3,7 +3,7 @@\n       xmlns:metal="http://xml.zope.org/namespaces/metal"\n       xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n       lang="en"\n-      metal:use-macro="context/main_template/macros/master"\n+      metal:use-macro="context/@@main_template/macros/master"\n       i18n:domain="plone">\n \n <metal:block fill-slot="top_slot"\ndiff --git a/plone/app/contenttypes/migration/pac_installer.pt b/plone/app/contenttypes/migration/pac_installer.pt\nindex edad6383..fd6eaa84 100644\n--- a/plone/app/contenttypes/migration/pac_installer.pt\n+++ b/plone/app/contenttypes/migration/pac_installer.pt\n@@ -2,7 +2,7 @@\n       xmlns:tal="http://xml.zope.org/namespaces/tal"\n       xmlns:metal="http://xml.zope.org/namespaces/metal"\n       xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n-      metal:use-macro="context/main_template/macros/master"\n+      metal:use-macro="context/@@main_template/macros/master"\n       i18n:domain="plone">\n \n     <metal:block fill-slot="top_slot"\ndiff --git a/plone/app/contenttypes/migration/utils.py b/plone/app/contenttypes/migration/utils.py\nindex 2b9adfd1..cd231160 100644\n--- a/plone/app/contenttypes/migration/utils.py\n+++ b/plone/app/contenttypes/migration/utils.py\n@@ -334,7 +334,11 @@ def restore_references(context):\n     the content-types framework.\n     """\n     key = \'ALL_REFERENCES\'\n-    for ref in IAnnotations(context)[key]:\n+    all_references = IAnnotations(context)[key]\n+    logger.info(\'Restoring {0} relations.\'.format(\n+        len(all_references))\n+    )\n+    for index, ref in enumerate(all_references):\n         source_obj = uuidToObject(ref[\'from_uuid\'])\n         target_obj = uuidToObject(ref[\'to_uuid\'])\n         relationship = ref[\'relationship\']\n@@ -350,6 +354,9 @@ def restore_references(context):\n                     \'/\'.join(context.getPhysicalPath())\n                 )\n             )\n+        if not index % 100:\n+            logger.info(\'Restoring relations: {}/{}\'.format(\n+                index, len(all_references)))\n     del IAnnotations(context)[key]\n \n \ndiff --git a/plone/app/contenttypes/profiles/default/types/Collection.xml b/plone/app/contenttypes/profiles/default/types/Collection.xml\nindex dd4ddea0..5dd416eb 100644\n--- a/plone/app/contenttypes/profiles/default/types/Collection.xml\n+++ b/plone/app/contenttypes/profiles/default/types/Collection.xml\n@@ -32,15 +32,15 @@\n \n   <!-- Enabled behaviors -->\n   <property name="behaviors" purge="false">\n-    <element value="plone.app.content.interfaces.INameFromTitle"/>\n-    <element value="plone.app.contenttypes.behaviors.collection.ICollection"/>\n-    <element value="plone.app.dexterity.behaviors.discussion.IAllowDiscussion"/>\n-    <element value="plone.app.dexterity.behaviors.id.IShortName"/>\n-    <element value="plone.app.dexterity.behaviors.exclfromnav.IExcludeFromNavigation"/>\n-    <element value="plone.app.dexterity.behaviors.metadata.IDublinCore"/>\n-    <element value="plone.app.contenttypes.behaviors.richtext.IRichTextBehavior"/>\n-    <element value="plone.app.relationfield.behavior.IRelatedItems"/>\n-    <element value="plone.app.lockingbehavior.behaviors.ILocking" />\n+    <element value="plone.namefromtitle" />\n+    <element value="plone.collection" />\n+    <element value="plone.allowdiscussion" />\n+    <element value="plone.shortname" />\n+    <element value="plone.excludefromnavigation" />\n+    <element value="plone.dublincore" />\n+    <element value="plone.richtext" />\n+    <element value="plone.relateditems" />\n+    <element value="plone.locking" />\n   </property>\n \n   <!-- View information -->\ndiff --git a/plone/app/contenttypes/profiles/default/types/Document.xml b/plone/app/contenttypes/profiles/default/types/Document.xml\nindex e23152da..5429d949 100644\n--- a/plone/app/contenttypes/profiles/default/types/Document.xml\n+++ b/plone/app/contenttypes/profiles/default/types/Document.xml\n@@ -32,16 +32,16 @@\n \n   <!-- Enabled behaviors -->\n   <property name="behaviors" purge="false">\n-    <element value="plone.app.content.interfaces.INameFromTitle"/>\n-    <element value="plone.app.dexterity.behaviors.discussion.IAllowDiscussion"/>\n-    <element value="plone.app.dexterity.behaviors.exclfromnav.IExcludeFromNavigation"/>\n-    <element value="plone.app.dexterity.behaviors.id.IShortName"/>\n-    <element value="plone.app.dexterity.behaviors.metadata.IDublinCore"/>\n-    <element value="plone.app.contenttypes.behaviors.richtext.IRichTextBehavior"/>\n-    <element value="plone.app.relationfield.behavior.IRelatedItems"/>\n-    <element value="plone.app.versioningbehavior.behaviors.IVersionable" />\n-    <element value="plone.app.contenttypes.behaviors.tableofcontents.ITableOfContents"/>\n-    <element value="plone.app.lockingbehavior.behaviors.ILocking" />\n+    <element value="plone.namefromtitle" />\n+    <element value="plone.allowdiscussion" />\n+    <element value="plone.excludefromnavigation" />\n+    <element value="plone.shortname" />\n+    <element value="plone.dublincore" />\n+    <element value="plone.richtext" />\n+    <element value="plone.relateditems" />\n+    <element value="plone.versioning" />\n+    <element value="plone.tableofcontents" />\n+    <element value="plone.locking" />\n   </property>\n \n   <!-- View information -->\ndiff --git a/plone/app/contenttypes/profiles/default/types/Event.xml b/plone/app/contenttypes/profiles/default/types/Event.xml\nindex 676a7b57..6ea632b6 100644\n--- a/plone/app/contenttypes/profiles/default/types/Event.xml\n+++ b/plone/app/contenttypes/profiles/default/types/Event.xml\n@@ -32,20 +32,20 @@\n \n   <!-- Enabled behaviors -->\n   <property name="behaviors" purge="false">\n-    <element value="plone.app.event.dx.behaviors.IEventBasic"/>\n-    <element value="plone.app.event.dx.behaviors.IEventRecurrence"/>\n-    <element value="plone.app.event.dx.behaviors.IEventLocation"/>\n-    <element value="plone.app.event.dx.behaviors.IEventAttendees"/>\n-    <element value="plone.app.event.dx.behaviors.IEventContact"/>\n-    <element value="plone.app.dexterity.behaviors.metadata.IDublinCore"/>\n-    <element value="plone.app.content.interfaces.INameFromTitle"/>\n-    <element value="plone.app.contenttypes.behaviors.richtext.IRichTextBehavior"/>\n-    <element value="plone.app.dexterity.behaviors.discussion.IAllowDiscussion"/>\n-    <element value="plone.app.dexterity.behaviors.exclfromnav.IExcludeFromNavigation"/>\n-    <element value="plone.app.dexterity.behaviors.id.IShortName"/>\n-    <element value="plone.app.relationfield.behavior.IRelatedItems"/>\n-    <element value="plone.app.versioningbehavior.behaviors.IVersionable" />\n-    <element value="plone.app.lockingbehavior.behaviors.ILocking" />\n+    <element value="plone.eventbasic" />\n+    <element value="plone.eventrecurrence" />\n+    <element value="plone.eventlocation" />\n+    <element value="plone.eventattendees" />\n+    <element value="plone.eventcontact" />\n+    <element value="plone.dublincore" />\n+    <element value="plone.namefromtitle" />\n+    <element value="plone.richtext" />\n+    <element value="plone.allowdiscussion" />\n+    <element value="plone.excludefromnavigation" />\n+    <element value="plone.shortname" />\n+    <element value="plone.relateditems" />\n+    <element value="plone.versioning" />\n+    <element value="plone.locking" />\n   </property>\n \n   <!-- View information -->\ndiff --git a/plone/app/contenttypes/profiles/default/types/File.xml b/plone/app/contenttypes/profiles/default/types/File.xml\nindex 6423b8c8..b5f6315a 100644\n--- a/plone/app/contenttypes/profiles/default/types/File.xml\n+++ b/plone/app/contenttypes/profiles/default/types/File.xml\n@@ -32,14 +32,14 @@\n \n   <!-- Enabled behaviors -->\n   <property name="behaviors" purge="false">\n-    <element value="plone.app.dexterity.behaviors.metadata.ICategorization"/>\n-    <element value="plone.app.dexterity.behaviors.metadata.IPublication"/>\n-    <element value="plone.app.dexterity.behaviors.metadata.IOwnership"/>\n-    <element value="plone.app.dexterity.behaviors.filename.INameFromFileName"/>\n-    <element value="plone.app.dexterity.behaviors.discussion.IAllowDiscussion"/>\n-    <element value="plone.app.dexterity.behaviors.id.IShortName"/>\n-    <element value="plone.app.dexterity.behaviors.exclfromnav.IExcludeFromNavigation"/>\n-    <element value="plone.app.relationfield.behavior.IRelatedItems"/>\n+    <element value="plone.categorization" />\n+    <element value="plone.publication" />\n+    <element value="plone.ownership" />\n+    <element value="plone.namefromfilename" />\n+    <element value="plone.allowdiscussion" />\n+    <element value="plone.shortname" />\n+    <element value="plone.excludefromnavigation" />\n+    <element value="plone.relateditems" />\n   </property>\n \n   <!-- View information -->\ndiff --git a/plone/app/contenttypes/profiles/default/types/Folder.xml b/plone/app/contenttypes/profiles/default/types/Folder.xml\nindex 64772df9..c1af01b9 100644\n--- a/plone/app/contenttypes/profiles/default/types/Folder.xml\n+++ b/plone/app/contenttypes/profiles/default/types/Folder.xml\n@@ -32,14 +32,14 @@\n \n   <!-- Enabled behaviors -->\n   <property name="behaviors" purge="false">\n-    <element value="plone.app.dexterity.behaviors.metadata.IDublinCore"/>\n-    <element value="plone.app.content.interfaces.INameFromTitle"/>\n-    <element value="plone.app.dexterity.behaviors.discussion.IAllowDiscussion"/>\n-    <element value="plone.app.dexterity.behaviors.exclfromnav.IExcludeFromNavigation"/>\n-    <element value="plone.app.dexterity.behaviors.id.IShortName"/>\n-    <element value="Products.CMFPlone.interfaces.constrains.ISelectableConstrainTypes"/>\n-    <element value="plone.app.relationfield.behavior.IRelatedItems"/>\n-    <element value="plone.app.dexterity.behaviors.nextprevious.INextPreviousToggle"/>\n+    <element value="plone.dublincore" />\n+    <element value="plone.namefromtitle" />\n+    <element value="plone.allowdiscussion" />\n+    <element value="plone.excludefromnavigation" />\n+    <element value="plone.shortname" />\n+    <element value="plone.constraintypes" />\n+    <element value="plone.relateditems" />\n+    <element value="plone.nextprevioustoggle" />\n   </property>\n \n   <!-- View information -->\ndiff --git a/plone/app/contenttypes/profiles/default/types/Image.xml b/plone/app/contenttypes/profiles/default/types/Image.xml\nindex 7a9beb8f..54e1e5b1 100644\n--- a/plone/app/contenttypes/profiles/default/types/Image.xml\n+++ b/plone/app/contenttypes/profiles/default/types/Image.xml\n@@ -32,14 +32,14 @@\n \n   <!-- Enabled behaviors -->\n   <property name="behaviors" purge="false">\n-    <element value="plone.app.dexterity.behaviors.metadata.ICategorization"/>\n-    <element value="plone.app.dexterity.behaviors.metadata.IPublication"/>\n-    <element value="plone.app.dexterity.behaviors.metadata.IOwnership"/>\n-    <element value="plone.app.dexterity.behaviors.discussion.IAllowDiscussion"/>\n-    <element value="plone.app.dexterity.behaviors.id.IShortName"/>\n-    <element value="plone.app.dexterity.behaviors.filename.INameFromFileName"/>\n-    <element value="plone.app.dexterity.behaviors.exclfromnav.IExcludeFromNavigation"/>\n-    <element value="plone.app.relationfield.behavior.IRelatedItems"/>\n+    <element value="plone.categorization" />\n+    <element value="plone.publication" />\n+    <element value="plone.ownership" />\n+    <element value="plone.allowdiscussion" />\n+    <element value="plone.shortname" />\n+    <element value="plone.namefromfilename" />\n+    <element value="plone.excludefromnavigation" />\n+    <element value="plone.relateditems" />\n   </property>\n \n   <!-- View information -->\ndiff --git a/plone/app/contenttypes/profiles/default/types/Link.xml b/plone/app/contenttypes/profiles/default/types/Link.xml\nindex f1b035bb..9674c870 100644\n--- a/plone/app/contenttypes/profiles/default/types/Link.xml\n+++ b/plone/app/contenttypes/profiles/default/types/Link.xml\n@@ -32,12 +32,12 @@\n \n   <!-- Enabled behaviors -->\n   <property name="behaviors" purge="false">\n-    <element value="plone.app.dexterity.behaviors.discussion.IAllowDiscussion"/>\n-    <element value="plone.app.dexterity.behaviors.id.IShortName"/>\n-    <element value="plone.app.dexterity.behaviors.metadata.IDublinCore"/>\n-    <element value="plone.app.content.interfaces.INameFromTitle"/>\n-    <element value="plone.app.dexterity.behaviors.exclfromnav.IExcludeFromNavigation"/>\n-    <element value="plone.app.versioningbehavior.behaviors.IVersionable" />\n+    <element value="plone.allowdiscussion" />\n+    <element value="plone.shortname" />\n+    <element value="plone.dublincore" />\n+    <element value="plone.namefromtitle" />\n+    <element value="plone.excludefromnavigation" />\n+    <element value="plone.versioning" />\n   </property>\n \n   <!-- View information -->\ndiff --git a/plone/app/contenttypes/profiles/default/types/News_Item.xml b/plone/app/contenttypes/profiles/default/types/News_Item.xml\nindex aab2baea..59afd979 100644\n--- a/plone/app/contenttypes/profiles/default/types/News_Item.xml\n+++ b/plone/app/contenttypes/profiles/default/types/News_Item.xml\n@@ -32,16 +32,16 @@\n \n   <!-- Enabled behaviors -->\n   <property name="behaviors" purge="false">\n-    <element value="plone.app.dexterity.behaviors.metadata.IDublinCore"/>\n-    <element value="plone.app.contenttypes.behaviors.richtext.IRichTextBehavior"/>\n-    <element value="plone.app.content.interfaces.INameFromTitle"/>\n-    <element value="plone.app.dexterity.behaviors.discussion.IAllowDiscussion"/>\n-    <element value="plone.app.dexterity.behaviors.id.IShortName"/>\n-    <element value="plone.app.dexterity.behaviors.exclfromnav.IExcludeFromNavigation"/>\n-    <element value="plone.app.relationfield.behavior.IRelatedItems"/>\n-    <element value="plone.app.contenttypes.behaviors.leadimage.ILeadImageBehavior"/>\n-    <element value="plone.app.versioningbehavior.behaviors.IVersionable" />\n-    <element value="plone.app.lockingbehavior.behaviors.ILocking" />\n+    <element value="plone.dublincore" />\n+    <element value="plone.richtext" />\n+    <element value="plone.namefromtitle" />\n+    <element value="plone.allowdiscussion" />\n+    <element value="plone.shortname" />\n+    <element value="plone.excludefromnavigation" />\n+    <element value="plone.relateditems" />\n+    <element value="plone.leadimage" />\n+    <element value="plone.versioning" />\n+    <element value="plone.locking" />\n   </property>\n \n   <!-- View information -->\ndiff --git a/plone/app/contenttypes/tests/robot/contenttypes_keywords.txt b/plone/app/contenttypes/tests/robot/contenttypes_keywords.txt\ndeleted file mode 100644\nindex 43611ed2..00000000\n--- a/plone/app/contenttypes/tests/robot/contenttypes_keywords.txt\n+++ /dev/null\n@@ -1,99 +0,0 @@\n-Variables  plone/app/contenttypes/tests/robot/variables.py\n-\n-*** Keywords ***\n-\n-Suite Setup\n-    Open browser  ${front-page}\n-\n-Suite Teardown\n-    Close All Browsers\n-\n-Log in\n-    [Documentation]  Log in to the site as ${userid} using ${password}. There\n-    ...              is no guarantee of where in the site you are once this is\n-    ...              done. (You are responsible for knowing where you are and\n-    ...              where you want to be)\n-    [Arguments]  ${userid}  ${password}\n-\n-    Go to  ${PLONE_URL}/login_form\n-    Page should contain element  __ac_name\n-    Page should contain element  __ac_password\n-    Page should contain button  Log in\n-    Input text  __ac_name  ${userid}\n-    Input text  __ac_password  ${password}\n-    Click Button  Log in\n-\n-Log in as site owner\n-    [Documentation]  Log in as the SITE_OWNER provided by plone.app.testing,\n-    ...              with all the rights and privileges of that user.\n-    Log in  ${SITE_OWNER_NAME}  ${SITE_OWNER_PASSWORD}\n-\n-Create Event\n-    [Arguments]  ${title}\n-    Go to  ${test-folder}/++add++Event\n-\n-    Input text  name=form.widgets.IDublinCore.title  ${title}\n-    Input text  name=form.widgets.start_date-day  10\n-    Input text  name=form.widgets.start_date-year  2013\n-    Input text  name=form.widgets.end_date-day  10\n-    Input text  name=form.widgets.end_date-year  2013\n-\n-    Click Button  Save\n-    Page Should Contain  Item created\n-\n-Create News Item\n-    [Arguments]  ${title}\n-    Go to  ${test-folder}/++add++News Item\n-\n-    Input text  name=form.widgets.IDublinCore.title  ${title}\n-    Click Button  Save\n-\n-    Page Should Contain  Item created\n-\n-Create Link\n-    [Arguments]  ${title}\n-    Go to  ${test-folder}/++add++Link\n-\n-    Input text  name=form.widgets.IDublinCore.title  ${title}\n-    Input text  name=form.widgets.remoteUrl  http://plone.org\n-    Click Button  Save\n-\n-    Page Should Contain  Item created\n-\n-Create Collection\n-    [Arguments]  ${title}\n-    Go to  ${test-folder}/++add++Collection\n-\n-    Input text  name=form.widgets.IDublinCore.title  ${title}\n-    Click Button  Save\n-\n-    Page Should Contain  Item created\n-\n-Create Folder\n-    [Arguments]  ${title}\n-    Go to  ${test-folder}/++add++Folder\n-\n-    Input text  name=form.widgets.IDublinCore.title  ${title}\n-    Click Button  Save\n-\n-    Page Should Contain  Item created\n-\n-Create Document\n-    [Arguments]  ${title}\n-    Go to  ${test-folder}/++add++Document\n-\n-    Input text  name=form.widgets.IDublinCore.title  ${title}\n-    Click Button  Save\n-\n-    Page Should Contain  Item created\n-\n-Create Image\n-    [Arguments]  ${title}\n-    Go to  ${test-folder}/++add++Image\n-\n-    Input text  name=form.widgets.title  ${title}\n-    Choose File  name=form.widgets.image  ${PATH_TO_TEST_FILES}/image.jpg\n-    Click Button  Save\n-\n-    Page Should Contain  Item created\n-    Page Should Contain  Click to view full-size image\ndiff --git a/plone/app/contenttypes/tests/robot/test_collection_creator_criterion.robot b/plone/app/contenttypes/tests/robot/test_collection_creator_criterion.robot\nindex 0d89eeca..bed9c9f3 100644\n--- a/plone/app/contenttypes/tests/robot/test_collection_creator_criterion.robot\n+++ b/plone/app/contenttypes/tests/robot/test_collection_creator_criterion.robot\n@@ -12,12 +12,13 @@\n \n Resource  plone/app/robotframework/keywords.robot\n Resource  plone/app/robotframework/saucelabs.robot\n+Resource  plone/app/robotframework/selenium.robot\n Resource  plone/app/contenttypes/tests/robot/keywords.txt\n \n Library  Remote  ${PLONE_URL}/RobotRemote\n \n-Test Setup  Open SauceLabs test browser\n-Test Teardown  Run keywords  Report test status  Close all browsers\n+Test Setup  Run Keywords  Plone test setup\n+Test Teardown  Run keywords  Plone test teardown\n \n \n *** Test cases ***************************************************************\ndiff --git a/plone/app/contenttypes/tests/robot/test_collection_location_criterion.robot b/plone/app/contenttypes/tests/robot/test_collection_location_criterion.robot\nindex 7cca6bb9..12054104 100644\n--- a/plone/app/contenttypes/tests/robot/test_collection_location_criterion.robot\n+++ b/plone/app/contenttypes/tests/robot/test_collection_location_criterion.robot\n@@ -11,12 +11,14 @@\n *** Settings *****************************************************************\n \n Resource  plone/app/robotframework/keywords.robot\n+Resource  plone/app/robotframework/saucelabs.robot\n+Resource  plone/app/robotframework/selenium.robot\n Resource  plone/app/contenttypes/tests/robot/keywords.txt\n \n Variables  plone/app/contenttypes/tests/robot/variables.py\n \n-Test Setup  Run keywords  Open test browser\n-Test Teardown  Close all browsers\n+Test Setup  Run Keywords  Plone test setup\n+Test Teardown  Run keywords  Plone test teardown\n \n \n *** Test cases ***************************************************************\ndiff --git a/plone/app/contenttypes/tests/robot/test_collection_review_state_criterion.robot b/plone/app/contenttypes/tests/robot/test_collection_review_state_criterion.robot\nindex dc542fb9..24dbb035 100644\n--- a/plone/app/contenttypes/tests/robot/test_collection_review_state_criterion.robot\n+++ b/plone/app/contenttypes/tests/robot/test_collection_review_state_criterion.robot\n@@ -11,10 +11,12 @@\n *** Settings *****************************************************************\n \n Resource  plone/app/robotframework/keywords.robot\n+Resource  plone/app/robotframework/saucelabs.robot\n+Resource  plone/app/robotframework/selenium.robot\n Resource  plone/app/contenttypes/tests/robot/keywords.txt\n \n-Test Setup  Run keywords  Open test browser\n-Test Teardown  Close all browsers\n+Test Setup  Run Keywords  Plone test setup\n+Test Teardown  Run keywords  Plone test teardown\n \n \n *** Test cases ***************************************************************\ndiff --git a/plone/app/contenttypes/tests/robot/test_collection_short_name_criterion.robot b/plone/app/contenttypes/tests/robot/test_collection_short_name_criterion.robot\nindex 1c242c31..6d435b8e 100644\n--- a/plone/app/contenttypes/tests/robot/test_collection_short_name_criterion.robot\n+++ b/plone/app/contenttypes/tests/robot/test_collection_short_name_criterion.robot\n@@ -11,10 +11,12 @@\n *** Settings *****************************************************************\n \n Resource  plone/app/robotframework/keywords.robot\n+Resource  plone/app/robotframework/saucelabs.robot\n+Resource  plone/app/robotframework/selenium.robot\n Resource  plone/app/contenttypes/tests/robot/keywords.txt\n \n-Test Setup  Run keywords  Open test browser\n-Test Teardown  Close all browsers\n+Test Setup  Run Keywords  Plone test setup\n+Test Teardown  Run keywords  Plone test teardown\n \n \n *** Test cases ***************************************************************\ndiff --git a/plone/app/contenttypes/tests/robot/test_collection_type_criterion.robot b/plone/app/contenttypes/tests/robot/test_collection_type_criterion.robot\nindex c2aabdc5..20588b1d 100644\n--- a/plone/app/contenttypes/tests/robot/test_collection_type_criterion.robot\n+++ b/plone/app/contenttypes/tests/robot/test_collection_type_criterion.robot\n@@ -11,10 +11,12 @@\n *** Settings *****************************************************************\n \n Resource  plone/app/robotframework/keywords.robot\n+Resource  plone/app/robotframework/saucelabs.robot\n+Resource  plone/app/robotframework/selenium.robot\n Resource  plone/app/contenttypes/tests/robot/keywords.txt\n \n-Test Setup  Run keywords  Open test browser\n-Test Teardown  Close all browsers\n+Test Setup  Run Keywords  Plone test setup\n+Test Teardown  Run keywords  Plone test teardown\n \n \n *** Test cases ***************************************************************\ndiff --git a/plone/app/contenttypes/tests/robot/test_folderlisting.robot b/plone/app/contenttypes/tests/robot/test_folderlisting.robot\nindex f5885a38..4fa9075f 100644\n--- a/plone/app/contenttypes/tests/robot/test_folderlisting.robot\n+++ b/plone/app/contenttypes/tests/robot/test_folderlisting.robot\n@@ -1,12 +1,15 @@\n *** Settings ***\n \n Resource  plone/app/robotframework/keywords.robot\n+Resource  plone/app/robotframework/saucelabs.robot\n+Resource  plone/app/robotframework/selenium.robot\n Resource  plone/app/contenttypes/tests/robot/keywords.txt\n \n Variables  plone/app/contenttypes/tests/robot/variables.py\n \n-Test Setup  Run keywords  Setup Testcontent  Open test browser\n-Test Teardown  Close all browsers\n+\n+Test Setup  Run Keywords  Setup Testcontent  Plone test setup\n+Test Teardown  Run keywords  Plone test teardown\n \n *** Variables ***\n \n@@ -158,7 +161,9 @@ Listing should list all content in detail\n \n Album should list all images and albums\n   Page Should Contain  Test Image\n-  Xpath Should Match X Times  //img[@title="Test Image"]  3\n+  Xpath Should Match X Times  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test Image"]  1\n+  Page Should Contain  Test News Item\n+  Xpath Should Match X Times  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test News Item"]  1\n   Page Should Contain  Test Album Image 1\n   Xpath Should Match X Times  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test Album Image 1"]  1\n   Page Should Contain  Test Album Image 2\n@@ -173,7 +178,7 @@ Album should list all images and albums\n   Xpath Should Match X Times  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test Sub Album Image 3"]  1\n   Page Should Contain  Test Album\n   Page Should Contain  Test Sub Album\n-\n+  Page Should Contain  Test Folder\n \n \n Setup Testcontent\ndiff --git a/plone/app/contenttypes/upgrades.py b/plone/app/contenttypes/upgrades.py\nindex 19c83819..026a8e08 100644\n--- a/plone/app/contenttypes/upgrades.py\n+++ b/plone/app/contenttypes/upgrades.py\n@@ -152,6 +152,7 @@ def enable_shortname_behavior(context):\n def use_new_view_names(context, types_to_fix=None):  # noqa\n     """Migrate old view names to new view names."""\n     # Don\'t reload the profile. Only change the settings.\n+    logger.info(\'Start updating view names...\')\n     portal = getSite()\n     portal_types = getToolByName(portal, \'portal_types\')\n     if types_to_fix is None:\n@@ -220,6 +221,7 @@ def _fixup(obj, view_map):\n     catalog = getToolByName(portal, \'portal_catalog\')\n     search = catalog.unrestrictedSearchResults\n     for portal_type in types_to_fix:\n+        logger.info(\'Updating view names for {}\'.format(portal_type))\n         brains = search(portal_type=portal_type)\n         objs = _brains2objs(brains)\n         for obj in objs:\ndiff --git a/setup.py b/setup.py\nindex a22a0647..9aa56f57 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -5,7 +5,7 @@\n import os\n \n \n-version = \'2.0.4.dev0\'\n+version = \'2.1.1.dev0\'\n \n \n def read(*rnames):\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2019-07-06T20:35:03+02:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.app.contenttypes/commit/1ccce19bf7febe5ec08aeb87a1c03ba5048027c6

Merge remote-tracking branch 'origin/master' into dxcontainer-siteroot

Files changed:
A news/527.bugfix
M plone/app/contenttypes/tests/test_image.py

b'diff --git a/news/527.bugfix b/news/527.bugfix\nnew file mode 100644\nindex 00000000..3b78a0dc\n--- /dev/null\n+++ b/news/527.bugfix\n@@ -0,0 +1,2 @@\n+Don\'t test for hard coded image size in test.\n+[agitator]\n\\ No newline at end of file\ndiff --git a/plone/app/contenttypes/tests/test_image.py b/plone/app/contenttypes/tests/test_image.py\nindex 9974c82e..bd948d3b 100644\n--- a/plone/app/contenttypes/tests/test_image.py\n+++ b/plone/app/contenttypes/tests/test_image.py\n@@ -124,7 +124,7 @@ def test_svg_image(self):\n         scale = self.image.restrictedTraverse(\'@@images\')\n         self.assertRegex(\n             scale.scale(\'image\', scale=\'large\').tag(),\n-            r\'<img src="http://nohost/plone/image/@@images/[a-z0-9--]*.svg" alt="My Image" title="My Image" height="768" width="768" />\'  # noqa: E501\n+            r\'<img src="http://nohost/plone/image/@@images/[a-z0-9--]*.svg" alt="My Image" title="My Image" height="[a-z0-9--]*" width="[a-z0-9--]*" />\',  # noqa: E501\n         )\n \n \n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2019-12-10T10:58:29+01:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.app.contenttypes/commit/51351943b9b74e35879e4d93a71754711d7621b4

Merge remote-tracking branch 'origin/master' into dxcontainer-siteroot

Files changed:
M CHANGES.rst
M plone/app/contenttypes/behaviors/richtext.py
M plone/app/contenttypes/configure.zcml
M plone/app/contenttypes/migration/browser.py
M plone/app/contenttypes/migration/dxmigration.py
M plone/app/contenttypes/testing.py
M plone/app/contenttypes/tests/robot/keywords.txt
M plone/app/contenttypes/tests/robot/test_folderlisting.robot
M plone/app/contenttypes/tests/test_migration.py
M setup.py
D news/527.bugfix

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex e1c7d6e7..cec00b1c 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -8,6 +8,60 @@ Changelog\n \n .. towncrier release notes start\n \n+2.1.5 (2019-11-25)\n+------------------\n+\n+Bug fixes:\n+\n+\n+- for migration tests uninstall plone.app.contenttypes if previously installed\n+  [ericof] (#535)\n+\n+\n+2.1.4 (2019-10-22)\n+------------------\n+\n+Bug fixes:\n+\n+\n+- Fix richtext ``getText`` view to use the correct schema interface.\n+  [thet]\n+\n+- Robot tests: split big content listing scenario, fix deprecations.\n+  [maurits] (#533)\n+\n+\n+2.1.3 (2019-10-12)\n+------------------\n+\n+Bug fixes:\n+\n+\n+- Clear schema cache after migration step ``migrate_to_pa_event``. [jensens] (#531)\n+- Explicitly load zcml of dependencies, instead of using ``includeDependencies``\n+  [maurits] (#2952)\n+\n+\n+2.1.2 (2019-07-18)\n+------------------\n+\n+Bug fixes:\n+\n+\n+- Speedup stats during migration by not waking up all objects.\n+  [pbauer] (#529)\n+\n+\n+2.1.1 (2019-07-06)\n+------------------\n+\n+Bug fixes:\n+\n+\n+- Don\'t test for hard coded image size in test.\n+  [agitator] (#527)\n+\n+\n 2.1.0 (2019-06-19)\n ------------------\n \ndiff --git a/news/527.bugfix b/news/527.bugfix\ndeleted file mode 100644\nindex 3b78a0dc..00000000\n--- a/news/527.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Don\'t test for hard coded image size in test.\n-[agitator]\n\\ No newline at end of file\ndiff --git a/plone/app/contenttypes/behaviors/richtext.py b/plone/app/contenttypes/behaviors/richtext.py\nindex c89857d5..5809a65c 100644\n--- a/plone/app/contenttypes/behaviors/richtext.py\n+++ b/plone/app/contenttypes/behaviors/richtext.py\n@@ -46,4 +46,4 @@ def text(self, value):\n \n \n class WidgetView(WidgetsView):\n-    schema = IRichText\n+    schema = IRichTextBehavior\ndiff --git a/plone/app/contenttypes/configure.zcml b/plone/app/contenttypes/configure.zcml\nindex 2157d4db..c26d2c0f 100644\n--- a/plone/app/contenttypes/configure.zcml\n+++ b/plone/app/contenttypes/configure.zcml\n@@ -7,8 +7,25 @@\n            xmlns:plone="http://namespaces.plone.org/plone"\n            i18n_domain="plone">\n \n-  <includeDependencies package="." />\n+  <include package="Products.CMFPlone" file="meta.zcml"/>\n+  <include package="plone.behavior" file="meta.zcml"/>\n+  <include package="plone.dexterity" file="meta.zcml"/>\n+  <include package="plone.app.dexterity" file="meta.zcml"/>\n+\n+  <include package="Products.CMFPlone" />\n+  <include package="plone.behavior" />\n+  <include package="plone.dexterity" />\n+  <include package="plone.namedfile" />\n+  <include package="plone.app.contentmenu" />\n+  <include package="plone.app.dexterity" />\n   <include package="plone.app.event" />\n+  <include package="plone.app.linkintegrity" />\n+  <include package="plone.app.lockingbehavior" />\n+  <include package="plone.app.querystring" />\n+  <include package="plone.app.relationfield" />\n+  <include package="plone.app.versioningbehavior" />\n+  <include package="plone.app.z3cform" />\n+\n   <include file="profiles.zcml" />\n \n   <include package=".behaviors" />\ndiff --git a/plone/app/contenttypes/migration/browser.py b/plone/app/contenttypes/migration/browser.py\nindex 2332aabb..b36cb9fc 100644\n--- a/plone/app/contenttypes/migration/browser.py\n+++ b/plone/app/contenttypes/migration/browser.py\n@@ -180,7 +180,8 @@ def __call__(self,\n                 \'object_provides\': v[\'iface\'].__identifier__,\n                 \'meta_type\': v[\'old_meta_type\'],\n             }\n-            amount_to_be_migrated = len(catalog(query))\n+            amount_to_be_migrated = len(\n+                catalog.unrestrictedSearchResults(query))\n             starttime_for_current = datetime.now()\n             logger.info(\n                 \'Start migrating {0} objects from {1} to {2}\'.format(\n@@ -268,11 +269,8 @@ def stats(self):\n         results = {}\n         catalog = self.context.portal_catalog\n         for brain in catalog():\n-            try:\n-                classname = brain.getObject().__class__.__name__\n-            except (KeyError, NotFound):\n-                continue\n-            results[classname] = results.get(classname, 0) + 1\n+            descriptor = \'{} ({})\'.format(brain.portal_type, brain.meta_type)\n+            results[descriptor] = results.get(descriptor, 0) + 1\n         return results\n \n \ndiff --git a/plone/app/contenttypes/migration/dxmigration.py b/plone/app/contenttypes/migration/dxmigration.py\nindex 25e24a25..b356ddbd 100644\n--- a/plone/app/contenttypes/migration/dxmigration.py\n+++ b/plone/app/contenttypes/migration/dxmigration.py\n@@ -3,6 +3,7 @@\n from plone.app.contenttypes.migration.field_migrators import datetime_fixer\n from plone.dexterity.interfaces import IDexterityContent\n from plone.dexterity.interfaces import IDexterityFTI\n+from plone.dexterity.schema import SCHEMA_CACHE\n from plone.event.utils import default_timezone\n from plone.folder.interfaces import IOrdering\n from Products.BTreeFolder2.BTreeFolder2 import BTreeFolder2Base\n@@ -47,6 +48,7 @@ def migrate_to_pa_event(context):\n     )\n     portal = getSite()\n     migrate(portal, DXOldEventMigrator)\n+    SCHEMA_CACHE.clear()\n \n \n class DXOldEventMigrator(ContentMigrator):\ndiff --git a/plone/app/contenttypes/testing.py b/plone/app/contenttypes/testing.py\nindex 6d4966c7..dc93f034 100644\n--- a/plone/app/contenttypes/testing.py\n+++ b/plone/app/contenttypes/testing.py\n@@ -12,6 +12,7 @@\n from plone.app.testing import SITE_OWNER_NAME\n from plone.app.testing import SITE_OWNER_PASSWORD\n from plone.testing import z2\n+from Products.CMFPlone.utils import get_installer\n from zope.interface import alsoProvides\n \n import pkg_resources\n@@ -108,6 +109,11 @@ def setUpPloneSite(self, portal):\n         if not TEST_MIGRATION:\n             return\n \n+        # Uninstall plone.app.contenttypes if already installed\n+        qi = get_installer(portal)\n+        if qi.is_product_installed(\'plone.app.contenttypes\'):\n+            qi.uninstall_product(\'plone.app.contenttypes\')\n+\n         # install Products.ATContentTypes manually if profile is available\n         # (this is only needed for Plone >= 5)\n         profiles = [x[\'id\'] for x in portal.portal_setup.listProfileInfo()]\ndiff --git a/plone/app/contenttypes/tests/robot/keywords.txt b/plone/app/contenttypes/tests/robot/keywords.txt\nindex adca67fb..e6d34652 100644\n--- a/plone/app/contenttypes/tests/robot/keywords.txt\n+++ b/plone/app/contenttypes/tests/robot/keywords.txt\n@@ -107,15 +107,15 @@ I set the criteria ${type} in row ${number} to the option \'${label}\'\n   Wait until page contains element  css=${criteria_row} .querystring-criteria-${type} .select2-choice\n   Click Element  css=${criteria_row} .querystring-criteria-${type} .select2-choice\n   Sleep  1.5\n-  Focus  css=body\n+  Set Focus To Element  css=body\n   Wait until element is visible  css=#select2-drop input\n   Input Text  css=#select2-drop input  ${label}\n   Sleep  1.5\n-  Focus  css=body\n+  Set Focus To Element  css=body\n   Wait until element is visible  css=#select2-drop .select2-match\n   Click Element  css=#select2-drop .select2-match\n   Sleep  1.5\n-  Focus  css=body\n+  Set Focus To Element  css=body\n \n I set the criteria ${type} in row ${number} to the options \'${label}\'\n   ${criteria_row} =  Convert to String  .querystring-criteria-wrapper:nth-child(${number})\n@@ -129,4 +129,6 @@ I set the criteria ${type} in row ${number} to the text \'${label}\'\n   ${criteria_row} =  Convert to String  .querystring-criteria-wrapper:nth-child(${number})\n   Input text  css=${criteria_row} .querystring-criteria-value input  ${label.strip()}\n   [Documentation]  Shift the focus so the input sticks, and wait a bit\n-  Click Element  css=.querystring-preview\n+  Sleep  1.5\n+  Set Focus To Element  css=.querystring-sortreverse\n+  Sleep  1.5\ndiff --git a/plone/app/contenttypes/tests/robot/test_folderlisting.robot b/plone/app/contenttypes/tests/robot/test_folderlisting.robot\nindex 4fa9075f..70081634 100644\n--- a/plone/app/contenttypes/tests/robot/test_folderlisting.robot\n+++ b/plone/app/contenttypes/tests/robot/test_folderlisting.robot\n@@ -15,38 +15,64 @@ Test Teardown  Run keywords  Plone test teardown\n \n *** Test cases ***\n \n-Scenario: Test listing views\n+Scenario: Test folder listing view\n     Given I am logged in as site owner\n     I disable dropdown navigation\n \n     When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/listing_view\n     Then Listing should list contained content\n \n+Scenario: Test folder summary view\n+    Given I am logged in as site owner\n+    I disable dropdown navigation\n     When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/summary_view\n     Then Listing should list contained content\n \n+Scenario: Test folder tabular view\n+    Given I am logged in as site owner\n+    I disable dropdown navigation\n     When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/tabular_view\n     Then Listing should list contained content\n \n+Scenario: Test folder full view\n+    Given I am logged in as site owner\n+    I disable dropdown navigation\n     When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/full_view\n     Then Listing should list contained content in detail\n \n+Scenario: Test folder album view\n+    Given I am logged in as site owner\n+    I disable dropdown navigation\n     When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_album/album_view\n     Then Album should list contained images and albums\n \n-\n+Scenario: Test collection listing view\n+    Given I am logged in as site owner\n+    I disable dropdown navigation\n     When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/listing_view\n     Then Listing should list all content\n \n+Scenario: Test collection summary view\n+    Given I am logged in as site owner\n+    I disable dropdown navigation\n     When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/summary_view\n     Then Listing should list all content\n \n+Scenario: Test collection tabular view\n+    Given I am logged in as site owner\n+    I disable dropdown navigation\n     When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/tabular_view\n     Then Listing should list all content\n \n+Scenario: Test collection full view\n+    Given I am logged in as site owner\n+    I disable dropdown navigation\n     When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/full_view\n     Then Listing should list all content in detail\n \n+Scenario: Test collection album view\n+    Given I am logged in as site owner\n+    I disable dropdown navigation\n     When I Go to  ${PLONE_URL}/${TEST_FOLDER_ID}/test_collection/album_view\n     Then Album should list all images and albums\n \n@@ -54,131 +80,131 @@ Scenario: Test listing views\n *** Keywords ***\n \n Listing should list contained content\n-  Page Should Contain  Test Document\n-  Page Should Contain  Test News Item\n-  Page Should Contain  Test Event\n-  Page Should Contain  Test Collection\n-  Page Should Contain  Test Link\n-  Page Should Contain  Test File\n-  Page Should Contain  Test Image\n-  Page Should Contain  Test Album\n-  Page Should Not Contain  Test Album Image 1\n-  Page Should Not Contain  Test Album Image 2\n-  Page Should Not Contain  Test Album Image 3\n-  Page Should Not Contain  Test Sub Album\n-  Page Should Not Contain  Test Sub Album Image 1\n-  Page Should Not Contain  Test Sub Album Image 2\n-  Page Should Not Contain  Test Sub Album Image 3\n+  the content area should contain  Test Document\n+  the content area should contain  Test News Item\n+  the content area should contain  Test Event\n+  the content area should contain  Test Collection\n+  the content area should contain  Test Link\n+  the content area should contain  Test File\n+  the content area should contain  Test Image\n+  the content area should contain  Test Album\n+  the content area should not contain  Test Album Image 1\n+  the content area should not contain  Test Album Image 2\n+  the content area should not contain  Test Album Image 3\n+  the content area should not contain  Test Sub Album\n+  the content area should not contain  Test Sub Album Image 1\n+  the content area should not contain  Test Sub Album Image 2\n+  the content area should not contain  Test Sub Album Image 3\n \n Listing should list contained content in detail\n-  Page Should Contain  Test Document\n-  Page Should Contain  this is a test document\n-  Page Should Contain  Test News Item\n-  Page Should Contain  this is a test news item\n-  Xpath Should Match X Times  //img[@title="Test News Item"]  2\n-  Page Should Contain  Test Event\n-  Page Should Contain  this is a test event\n-  Page Should Contain  Test Collection\n-  Page Should Contain  this is a test collection\n-  Page Should Contain  Test Link\n-  Page Should Contain  http://plone.org\n-  Page Should Contain  Test File\n-  Page Should Contain  file.pdf\n-  Page Should Contain  Test Image\n-  Xpath Should Match X Times  //img[@title="Test Image"]  3\n-  Page Should Contain  Test Album\n-  Page Should Contain  Test Album Image 1\n-  Xpath Should Match X Times  //img[@title="Test Album Image 1"]  2\n-  Page Should Contain  Test Album Image 2\n-  Xpath Should Match X Times  //img[@title="Test Album Image 2"]  2\n-  Page Should Contain  Test Album Image 3\n-  Xpath Should Match X Times  //img[@title="Test Album Image 3"]  2\n-  Page Should Contain  Test Sub Album\n-  Page Should Contain  Test Sub Album Image 1\n-  Xpath Should Match X Times  //img[@title="Test Sub Album Image 1"]  1\n-  Page Should Contain  Test Sub Album Image 2\n-  Xpath Should Match X Times  //img[@title="Test Sub Album Image 2"]  1\n-  Page Should Contain  Test Sub Album Image 3\n-  Xpath Should Match X Times  //img[@title="Test Sub Album Image 3"]  1\n+  the content area should contain  Test Document\n+  the content area should contain  this is a test document\n+  the content area should contain  Test News Item\n+  the content area should contain  this is a test news item\n+  Page Should Contain Element  //img[@title="Test News Item"]  2\n+  the content area should contain  Test Event\n+  the content area should contain  this is a test event\n+  the content area should contain  Test Collection\n+  the content area should contain  this is a test collection\n+  the content area should contain  Test Link\n+  the content area should contain  http://plone.org\n+  the content area should contain  Test File\n+  the content area should contain  file.pdf\n+  the content area should contain  Test Image\n+  Page Should Contain Element  //img[@title="Test Image"]  3\n+  the content area should contain  Test Album\n+  the content area should contain  Test Album Image 1\n+  Page Should Contain Element  //img[@title="Test Album Image 1"]  2\n+  the content area should contain  Test Album Image 2\n+  Page Should Contain Element  //img[@title="Test Album Image 2"]  2\n+  the content area should contain  Test Album Image 3\n+  Page Should Contain Element  //img[@title="Test Album Image 3"]  2\n+  the content area should contain  Test Sub Album\n+  the content area should contain  Test Sub Album Image 1\n+  Page Should Contain Element  //img[@title="Test Sub Album Image 1"]  1\n+  the content area should contain  Test Sub Album Image 2\n+  Page Should Contain Element  //img[@title="Test Sub Album Image 2"]  1\n+  the content area should contain  Test Sub Album Image 3\n+  Page Should Contain Element  //img[@title="Test Sub Album Image 3"]  1\n \n Album should list contained images and albums\n-  Page Should Contain  Test Album Image 1\n-  Xpath Should Match X Times  //img[@title="Test Album Image 1"]  2\n-  Page Should Contain  Test Album Image 2\n-  Xpath Should Match X Times  //img[@title="Test Album Image 2"]  2\n-  Page Should Contain  Test Album Image 3\n-  Xpath Should Match X Times  //img[@title="Test Album Image 3"]  2\n-  Page Should Contain  Test Sub Album\n+  the content area should contain  Test Album Image 1\n+  Page Should Contain Element  //img[@title="Test Album Image 1"]  2\n+  the content area should contain  Test Album Image 2\n+  Page Should Contain Element  //img[@title="Test Album Image 2"]  2\n+  the content area should contain  Test Album Image 3\n+  Page Should Contain Element  //img[@title="Test Album Image 3"]  2\n+  the content area should contain  Test Sub Album\n \n \n Listing should list all content\n-  Page Should Contain  Test Document\n-  Page Should Contain  Test News Item\n-  Page Should Contain  Test Event\n-  Page Should Contain  Test Collection\n-  Page Should Contain  Test Link\n-  Page Should Contain  Test File\n-  Page Should Contain  Test Image\n-  Page Should Contain  Test Album\n-  Page Should Contain  Test Album Image 1\n-  Page Should Contain  Test Album Image 2\n-  Page Should Contain  Test Album Image 3\n-  Page Should Contain  Test Sub Album\n-  Page Should Contain  Test Sub Album Image 1\n-  Page Should Contain  Test Sub Album Image 2\n-  Page Should Contain  Test Sub Album Image 3\n+  the content area should contain  Test Document\n+  the content area should contain  Test News Item\n+  the content area should contain  Test Event\n+  the content area should contain  Test Collection\n+  the content area should contain  Test Link\n+  the content area should contain  Test File\n+  the content area should contain  Test Image\n+  the content area should contain  Test Album\n+  the content area should contain  Test Album Image 1\n+  the content area should contain  Test Album Image 2\n+  the content area should contain  Test Album Image 3\n+  the content area should contain  Test Sub Album\n+  the content area should contain  Test Sub Album Image 1\n+  the content area should contain  Test Sub Album Image 2\n+  the content area should contain  Test Sub Album Image 3\n \n Listing should list all content in detail\n-  Page Should Contain  Test Document\n-  Page Should Contain  this is a test document\n-  Page Should Contain  Test News Item\n-  Page Should Contain  this is a test news item\n-  Xpath Should Match X Times  //img[@title="Test News Item"]  2\n-  Page Should Contain  Test Event\n-  Page Should Contain  this is a test event\n-  Page Should Contain  Test Collection\n-  Page Should Contain  this is a test collection\n-  Page Should Contain  Test Link\n-  Page Should Contain  http://plone.org\n-  Page Should Contain  Test File\n-  Page Should Contain  file.pdf\n-  Page Should Contain  Test Image\n-  Xpath Should Match X Times  //img[@title="Test Image"]  3\n-  Page Should Contain  Test Album\n-  Page Should Contain  Test Album Image 1\n-  Xpath Should Match X Times  //img[@title="Test Album Image 1"]  2\n-  Page Should Contain  Test Album Image 2\n-  Xpath Should Match X Times  //img[@title="Test Album Image 2"]  2\n-  Page Should Contain  Test Album Image 3\n-  Xpath Should Match X Times  //img[@title="Test Album Image 3"]  2\n-  Page Should Contain  Test Sub Album\n-  Page Should Contain  Test Sub Album Image 1\n-  Xpath Should Match X Times  //img[@title="Test Sub Album Image 1"]  2\n-  Page Should Contain  Test Sub Album Image 2\n-  Xpath Should Match X Times  //img[@title="Test Sub Album Image 2"]  2\n-  Page Should Contain  Test Sub Album Image 3\n-  Xpath Should Match X Times  //img[@title="Test Sub Album Image 3"]  2\n+  the content area should contain  Test Document\n+  the content area should contain  this is a test document\n+  the content area should contain  Test News Item\n+  the content area should contain  this is a test news item\n+  Page Should Contain Element  //img[@title="Test News Item"]  2\n+  the content area should contain  Test Event\n+  the content area should contain  this is a test event\n+  the content area should contain  Test Collection\n+  the content area should contain  this is a test collection\n+  the content area should contain  Test Link\n+  the content area should contain  http://plone.org\n+  the content area should contain  Test File\n+  the content area should contain  file.pdf\n+  the content area should contain  Test Image\n+  Page Should Contain Element  //img[@title="Test Image"]  3\n+  the content area should contain  Test Album\n+  the content area should contain  Test Album Image 1\n+  Page Should Contain Element  //img[@title="Test Album Image 1"]  2\n+  the content area should contain  Test Album Image 2\n+  Page Should Contain Element  //img[@title="Test Album Image 2"]  2\n+  the content area should contain  Test Album Image 3\n+  Page Should Contain Element  //img[@title="Test Album Image 3"]  2\n+  the content area should contain  Test Sub Album\n+  the content area should contain  Test Sub Album Image 1\n+  Page Should Contain Element  //img[@title="Test Sub Album Image 1"]  2\n+  the content area should contain  Test Sub Album Image 2\n+  Page Should Contain Element  //img[@title="Test Sub Album Image 2"]  2\n+  the content area should contain  Test Sub Album Image 3\n+  Page Should Contain Element  //img[@title="Test Sub Album Image 3"]  2\n \n Album should list all images and albums\n-  Page Should Contain  Test Image\n-  Xpath Should Match X Times  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test Image"]  1\n-  Page Should Contain  Test News Item\n-  Xpath Should Match X Times  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test News Item"]  1\n-  Page Should Contain  Test Album Image 1\n-  Xpath Should Match X Times  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test Album Image 1"]  1\n-  Page Should Contain  Test Album Image 2\n-  Xpath Should Match X Times  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test Album Image 2"]  1\n-  Page Should Contain  Test Album Image 3\n-  Xpath Should Match X Times  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test Album Image 3"]  1\n-  Page Should Contain  Test Sub Album Image 1\n-  Xpath Should Match X Times  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test Sub Album Image 1"]  1\n-  Page Should Contain  Test Sub Album Image 2\n-  Xpath Should Match X Times  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test Sub Album Image 2"]  1\n-  Page Should Contain  Test Sub Album Image 3\n-  Xpath Should Match X Times  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test Sub Album Image 3"]  1\n-  Page Should Contain  Test Album\n-  Page Should Contain  Test Sub Album\n-  Page Should Contain  Test Folder\n+  the content area should contain  Test Image\n+  Page Should Contain Element  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test Image"]  1\n+  the content area should contain  Test News Item\n+  Page Should Contain Element  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test News Item"]  1\n+  the content area should contain  Test Album Image 1\n+  Page Should Contain Element  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test Album Image 1"]  1\n+  the content area should contain  Test Album Image 2\n+  Page Should Contain Element  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test Album Image 2"]  1\n+  the content area should contain  Test Album Image 3\n+  Page Should Contain Element  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test Album Image 3"]  1\n+  the content area should contain  Test Sub Album Image 1\n+  Page Should Contain Element  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test Sub Album Image 1"]  1\n+  the content area should contain  Test Sub Album Image 2\n+  Page Should Contain Element  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test Sub Album Image 2"]  1\n+  the content area should contain  Test Sub Album Image 3\n+  Page Should Contain Element  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test Sub Album Image 3"]  1\n+  the content area should contain  Test Album\n+  the content area should contain  Test Sub Album\n+  the content area should contain  Test Folder\n \n \n Setup Testcontent\ndiff --git a/plone/app/contenttypes/tests/test_migration.py b/plone/app/contenttypes/tests/test_migration.py\nindex 8da6ce76..709945ed 100644\n--- a/plone/app/contenttypes/tests/test_migration.py\n+++ b/plone/app/contenttypes/tests/test_migration.py\n@@ -1424,15 +1424,15 @@ def test_stats(self):\n         applyProfile(self.portal, \'plone.app.contenttypes:default\')\n         migrationview = MigrationView(self.portal, None)\n         stats = migrationview.stats()\n-        self.assertEqual(str(stats), "{\'ATDocument\': 2}")\n+        self.assertEqual(str(stats), "{\'Document (ATDocument)\': 2}")\n         migrator = self.get_migrator(at_doc1, DocumentMigrator)\n         migrator.migrate()\n         stats = migrationview.stats()\n-        self.assertEqual(str(stats), "{\'Document\': 1, \'ATDocument\': 1}")\n+        self.assertEqual(str(stats), "{\'Document (ATDocument)\': 1, \'Document (Dexterity Item)\': 1}")  # noqa: E501\n         migrator = self.get_migrator(at_doc2, DocumentMigrator)\n         migrator.migrate()\n         stats = migrationview.stats()\n-        self.assertEqual(str(stats), "{\'Document\': 2}")\n+        self.assertEqual(str(stats), "{\'Document (Dexterity Item)\': 2}")\n \n     def test_migration_atctypes_vocabulary_registered(self):\n         name = \'plone.app.contenttypes.migration.atctypes\'\n@@ -2111,13 +2111,15 @@ def test_pac_installer_with_content(self):\n         self.assertTrue(IDexterityFTI.providedBy(portal_types[\'News Item\']))\n         self.assertTrue(qi.is_product_installed(\'plone.app.contenttypes\'))\n         self.assertIn(\'Migration control panel\', self.browser.contents)\n-        self.assertIn(\'You currently have <span class="strong">1</span> archetypes objects to be migrated.\', self.browser.contents)  # noqa\n+        self.assertIn(\'You currently have <span class="strong">1</span> archetypes objects to be migrated.\', self.browser.contents)  # noqa E501\n \n     def test_atct_migration_form(self):\n         # add some at content:\n         self.portal.invokeFactory(\'Document\', \'doc1\')\n         self.portal.invokeFactory(\'News Item\', \'news1\')\n         self.portal.invokeFactory(\'News Item\', \'news2\')\n+        self.portal.invokeFactory(\'Folder\', \'folder\')\n+        self.portal[\'folder\'].invokeFactory(\'Document\', \'doc2\')\n         transaction.commit()\n         from zExceptions import NotFound\n         self.assertRaises(\n@@ -2129,16 +2131,19 @@ def test_atct_migration_form(self):\n         self.browser.getControl(\'Install\').click()\n         # check statistics before\n         self.assertIn(\n-            \'You currently have <span class="strong">3</span> archetypes \'\n+            \'You currently have <span class="strong">5</span> archetypes \'\n             \'objects to be migrated.\',\n             self.browser.contents,\n         )\n         widget = \'form.widgets.content_types:list\'\n         ct_widget = self.browser.getControl(name=widget)\n-        self.assertEqual(ct_widget.options, [\'Document\', \'News Item\'])\n+        self.assertEqual(\n+            ct_widget.options,\n+            [\'Document\', \'Folder\', \'News Item\'])\n         # all types are auto-selected\n-        self.assertEqual(ct_widget.value, [\'Document\', \'News Item\'])\n+        self.assertEqual(ct_widget.value, [\'Document\', \'Folder\', \'News Item\'])\n         widget = \'form.widgets.content_types:list\'\n+        # we only migrate Documents\n         self.browser.getControl(name=widget).value = [\'Document\']\n         widget = \'form.widgets.migrate_references:list\'\n         self.assertEqual(\n@@ -2148,13 +2153,37 @@ def test_atct_migration_form(self):\n         self.browser.getControl(name=\'form.buttons.migrate\').click()\n         from plone.app.contenttypes.interfaces import IDocument\n         from plone.app.contenttypes.interfaces import INewsItem\n+        from plone.app.contenttypes.interfaces import IFolder\n         self.assertTrue(IDocument.providedBy(self.portal[\'doc1\']))\n         self.assertFalse(INewsItem.providedBy(self.portal[\'news1\']))\n+        self.assertFalse(IFolder.providedBy(self.portal[\'folder\']))\n+        self.assertTrue(IDocument.providedBy(self.portal[\'folder\'][\'doc2\']))\n         self.assertIn(\n             \'Congratulations! You migrated from Archetypes to Dexterity.\',\n             self.browser.contents\n         )\n-        msg = \'<td>ATDocument</td>\\n      <td>Document</td>\\n      <td>1</td>\'\n+        msg = \'<td>ATDocument</td>\\n      <td>Document</td>\\n      <td>2</td>\'\n+        self.assertIn(msg, self.browser.contents)\n+        msg = \'<td>Document (ATDocument)</td>\\n      <td>2</td>\'\n+        self.assertIn(msg, self.browser.contents)\n+        msg = \'<td>News Item (ATNewsItem)</td>\\n      <td>2</td>\'\n+        self.assertIn(msg, self.browser.contents)\n+        msg = \'<td>Document (Dexterity Item)</td>\\n      <td>2</td>\'\n+        self.assertIn(msg, self.browser.contents)\n+        msg = \'<td>News Item (Dexterity Item)</td>\\n      <td>2</td>\'\n+        self.assertNotIn(msg, self.browser.contents)\n+        msg = \'<td>Folder (Dexterity Container)</td>\\n      <td>1</td>\'\n+        self.assertNotIn(msg, self.browser.contents)\n+\n+        # we only migrated Document, now we migrate the rest\n+        self.browser.getLink(\'Back to the Migration-Form\').click()\n+        widget = \'form.widgets.content_types:list\'\n+        ct_widget = self.browser.getControl(name=widget)\n+        self.assertEqual(ct_widget.options, [\'Folder\', \'News Item\'])\n+        self.browser.getControl(name=\'form.buttons.migrate\').click()\n+        self.assertTrue(INewsItem.providedBy(self.portal[\'news1\']))\n+        self.assertTrue(IFolder.providedBy(self.portal[\'folder\']))\n+        msg = \'<td>News Item (Dexterity Item)</td>\\n      <td>2</td>\'\n         self.assertIn(msg, self.browser.contents)\n-        msg = \'<tr>\\n      <td>ATNewsItem</td>\\n      <td>2</td>\\n    </tr>\'\n+        msg = \'<td>Folder (Dexterity Container)</td>\\n      <td>1</td>\'\n         self.assertIn(msg, self.browser.contents)\ndiff --git a/setup.py b/setup.py\nindex 9aa56f57..cf2779dc 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -5,7 +5,7 @@\n import os\n \n \n-version = \'2.1.1.dev0\'\n+version = \'2.1.6.dev0\'\n \n \n def read(*rnames):\n@@ -21,12 +21,10 @@ def read(*rnames):\n       version=version,\n       description="Default content types for Plone based on Dexterity",\n       long_description=long_description,\n-      # Get more strings from\n-      # https://pypi.python.org/pypi?:action=list_classifiers\n+      # Get more strings from https://pypi.org/classifiers/\n       classifiers=[\n           "Development Status :: 6 - Mature",\n           "Framework :: Plone",\n-          "Framework :: Plone :: 5.1",\n           "Framework :: Plone :: 5.2",\n           "License :: OSI Approved :: GNU General Public License (GPL)",\n           "Programming Language :: Python",\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2020-02-24T20:55:36+01:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.app.contenttypes/commit/cc293911885692f309849b9dbd48e541230d0312

Merge remote-tracking branch 'origin/master' into dxcontainer-siteroot

Files changed:
A plone/app/contenttypes/tests/test_security.py
M CHANGES.rst
M plone/app/contenttypes/browser/templates/document.pt
M plone/app/contenttypes/content.py
M setup.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex cec00b1c..4e9dad90 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -8,6 +8,20 @@ Changelog\n \n .. towncrier release notes start\n \n+2.1.6 (2020-02-16)\n+------------------\n+\n+Bug fixes:\n+\n+\n+- Integrate PloneHotFix20200121: add more permission checks.\n+  See https://plone.org/security/hotfix/20200121/privilege-escalation-for-overwriting-content\n+  [maurits] (#3021)\n+- Add a guard in the document.pt template to allow the Document type not to have the RichText\n+  enforce the behavior enabled.\n+  [sneridagh] (#3047)\n+\n+\n 2.1.5 (2019-11-25)\n ------------------\n \ndiff --git a/plone/app/contenttypes/browser/templates/document.pt b/plone/app/contenttypes/browser/templates/document.pt\nindex 9f642abd..efa7decc 100644\n--- a/plone/app/contenttypes/browser/templates/document.pt\n+++ b/plone/app/contenttypes/browser/templates/document.pt\n@@ -11,7 +11,7 @@\n <metal:content-core define-macro="content-core"\n                     tal:define="toc context/table_of_contents|nothing;">\n   <div id="parent-fieldname-text"\n-      tal:condition="context/text"\n+      tal:condition="context/text | nothing"\n       tal:content="structure python:context.text.output_relative_to(view.context)"\n       tal:attributes="class python: toc and \'pat-autotoc\' or \'\'" />\n </metal:content-core>\ndiff --git a/plone/app/contenttypes/content.py b/plone/app/contenttypes/content.py\nindex d191da2e..d4f8537b 100644\n--- a/plone/app/contenttypes/content.py\n+++ b/plone/app/contenttypes/content.py\n@@ -1,4 +1,5 @@\n # -*- coding: utf-8 -*-\n+from AccessControl.SecurityInfo import ClassSecurityInfo\n from email.feedparser import headerRE\n from plone.app.contenttypes.interfaces import ICollection\n from plone.app.contenttypes.interfaces import IDocument\n@@ -12,6 +13,7 @@\n from plone.dexterity.content import Item\n from plone.namedfile.file import NamedBlobFile\n from plone.namedfile.file import NamedBlobImage\n+from Products.CMFCore import permissions\n from Products.CMFPlone.utils import safe_text\n from zope.deprecation import deprecation\n from zope.interface import implementer\n@@ -25,8 +27,11 @@\n class Collection(Item):\n     """Convenience subclass for ``Collection`` portal type\n     """\n+    security = ClassSecurityInfo()\n+\n     # BBB\n \n+    @security.protected(permissions.View)\n     def listMetaDataFields(self, exclude=True):\n         """Return a list of all metadata fields from portal_catalog.\n \n@@ -34,6 +39,7 @@ def listMetaDataFields(self, exclude=True):\n         """\n         return []\n \n+    @security.protected(permissions.View)\n     def selectedViewFields(self):\n         """Returns a list of all metadata fields from the catalog that were\n            selected.\n@@ -42,9 +48,11 @@ def selectedViewFields(self):\n             ICollection as ICollection_behavior\n         return ICollection_behavior(self).selectedViewFields()\n \n+    @security.protected(permissions.ModifyPortalContent)\n     def setQuery(self, query):\n         self.query = query\n \n+    @security.protected(permissions.View)\n     def getQuery(self):\n         """Return the query as a list of dict; note that this method\n         returns a list of CatalogContentListingObject in\n@@ -53,21 +61,26 @@ def getQuery(self):\n         return self.query\n \n     @deprecation.deprecate(\'getRawQuery() is deprecated; use getQuery().\')\n+    @security.protected(permissions.View)\n     def getRawQuery(self):\n         return self.getQuery()\n \n+    @security.protected(permissions.ModifyPortalContent)\n     def setSort_on(self, sort_on):\n         self.sort_on = sort_on\n \n+    @security.protected(permissions.ModifyPortalContent)\n     def setSort_reversed(self, sort_reversed):\n         self.sort_reversed = sort_reversed\n \n+    @security.protected(permissions.View)\n     def queryCatalog(self, batch=True, b_start=0, b_size=30, sort_on=None):\n         from plone.app.contenttypes.behaviors.collection import \\\n             ICollection as ICollection_behavior\n         return ICollection_behavior(self).results(\n             batch, b_start, b_size, sort_on=sort_on)\n \n+    @security.protected(permissions.View)\n     def results(self, **kwargs):\n         from plone.app.contenttypes.behaviors.collection import \\\n             ICollection as ICollection_behavior\n@@ -78,6 +91,9 @@ def results(self, **kwargs):\n class Document(Item):\n     """Convenience subclass for ``Document`` portal type\n     """\n+    security = ClassSecurityInfo()\n+\n+    @security.protected(permissions.View)\n     def Format(self):\n         \'\'\' Provide a proper accessor for the format attribute\n         See https://github.com/plone/Products.CMFPlone/issues/2540\n@@ -92,7 +108,9 @@ def Format(self):\n class File(Item):\n     """Convenience subclass for ``File`` portal type\n     """\n+    security = ClassSecurityInfo()\n \n+    @security.protected(permissions.ModifyPortalContent)\n     def PUT(self, REQUEST=None, RESPONSE=None):\n         """DAV method to replace the file field with a new resource."""\n         request = REQUEST if REQUEST is not None else self.REQUEST\n@@ -114,9 +132,11 @@ def PUT(self, REQUEST=None, RESPONSE=None):\n         else:\n             return super(File, self).PUT(REQUEST=request, RESPONSE=response)\n \n+    @security.protected(permissions.View)\n     def get_size(self):\n         return getattr(self.file, \'size\', 0)\n \n+    @security.protected(permissions.View)\n     def content_type(self):\n         return getattr(self.file, \'contentType\', None)\n \n@@ -131,7 +151,9 @@ class Folder(Container):\n class Image(Item):\n     """Convenience subclass for ``Image`` portal type\n     """\n+    security = ClassSecurityInfo()\n \n+    @security.protected(permissions.ModifyPortalContent)\n     def PUT(self, REQUEST=None, RESPONSE=None):\n         """DAV method to replace image field with a new resource."""\n         request = REQUEST if REQUEST is not None else self.REQUEST\n@@ -154,9 +176,11 @@ def PUT(self, REQUEST=None, RESPONSE=None):\n         else:\n             return super(Image, self).PUT(REQUEST=request, RESPONSE=response)\n \n+    @security.protected(permissions.View)\n     def get_size(self):\n         return getattr(self.image, \'size\', 0)\n \n+    @security.protected(permissions.View)\n     def content_type(self):\n         return getattr(self.image, \'contentType\', None)\n \ndiff --git a/plone/app/contenttypes/tests/test_security.py b/plone/app/contenttypes/tests/test_security.py\nnew file mode 100644\nindex 00000000..ce3a83de\n--- /dev/null\n+++ b/plone/app/contenttypes/tests/test_security.py\n@@ -0,0 +1,258 @@\n+# -*- coding: utf-8 -*-\n+from io import BytesIO\n+from plone.app.contenttypes.testing import PLONE_APP_CONTENTTYPES_FUNCTIONAL_TESTING  # noqa\n+from plone.app.testing import login\n+from plone.app.testing import logout\n+from plone.app.testing import setRoles\n+from plone.app.testing import TEST_USER_ID\n+from plone.app.testing import TEST_USER_NAME\n+from plone.testing.z2 import Browser\n+\n+import base64\n+import os\n+import pkg_resources\n+import re\n+import sys\n+import transaction\n+import unittest\n+\n+\n+# List various possibly read methods.\n+# Not all classes have all of them.\n+# Some may be inherited.\n+READ_METHODS = (\n+    "content_type",\n+    "Format",\n+    "get_size",\n+    "getFoldersAndImages",\n+    "getQuery",\n+    "getRawQuery",\n+    "index_html",\n+    "listMetaDataFields",\n+    "manage_DAVget",\n+    "manage_FTPget",\n+    "queryCatalog",\n+    "results",\n+    "selectedViewFields",\n+)\n+WRITE_METHODS = ("setQuery", "setSort_on", "setSort_reversed", "PUT")\n+\n+\n+class ResponseWrapper:\n+    """Decorates a response object with additional introspective methods."""\n+\n+    _bodyre = re.compile("\\r\\n\\r\\n(.*)", re.MULTILINE | re.DOTALL)\n+\n+    def __init__(self, response, outstream, path):\n+        self._response = response\n+        self._outstream = outstream\n+        self._path = path\n+\n+    def __getattr__(self, name):\n+        return getattr(self._response, name)\n+\n+    def getOutput(self):\n+        """Returns the complete output, headers and all."""\n+        return self._outstream.getvalue()\n+\n+    def getBody(self):\n+        """Returns the page body, i.e. the output par headers."""\n+        body = self._bodyre.search(self.getOutput())\n+        if body is not None:\n+            body = body.group(1)\n+        return body\n+\n+    def getPath(self):\n+        """Returns the path used by the request."""\n+        return self._path\n+\n+    def getHeader(self, name):\n+        """Returns the value of a response header."""\n+        return self.headers.get(name.lower())\n+\n+    def getCookie(self, name):\n+        """Returns a response cookie."""\n+        return self.cookies.get(name)\n+\n+\n+class TestSecurity(unittest.TestCase):\n+    layer = PLONE_APP_CONTENTTYPES_FUNCTIONAL_TESTING\n+\n+    def setUp(self):\n+        self.portal = self.layer[\'portal\']\n+        self.request = self.layer[\'request\']\n+        # self.request[\'ACTUAL_URL\'] = self.portal.absolute_url()\n+        setRoles(self.portal, TEST_USER_ID, [\'Manager\'])\n+\n+    def publish(\n+        self,\n+        path,\n+        basic=None,\n+        env=None,\n+        extra=None,\n+        request_method="GET",\n+        stdin=None,\n+        handle_errors=True,\n+    ):\n+        """\n+        Mostly pulled from Testing.functional\n+        """\n+        from ZPublisher.Request import Request\n+        from ZPublisher.Response import Response\n+\n+        # Note: the next import fail in Python 3, because it needs ZServer.\n+        from ZPublisher.Publish import publish_module\n+\n+        transaction.commit()\n+\n+        if env is None:\n+            env = {}\n+\n+        env["SERVER_NAME"] = self.request["SERVER_NAME"]\n+        env["SERVER_PORT"] = self.request["SERVER_PORT"]\n+        env["REQUEST_METHOD"] = request_method\n+\n+        p = path.split("?")\n+        if len(p) == 1:\n+            env["PATH_INFO"] = p[0]\n+        elif len(p) == 2:\n+            [env["PATH_INFO"], env["QUERY_STRING"]] = p\n+        else:\n+            raise TypeError("")\n+\n+        if basic:\n+            env["HTTP_AUTHORIZATION"] = "Basic %s" % base64.encodestring(basic)\n+\n+        if stdin is None:\n+            stdin = BytesIO()\n+\n+        outstream = BytesIO()\n+        response = Response(stdout=outstream, stderr=sys.stderr)\n+        request = Request(stdin, env, response)\n+\n+        publish_module(\n+            "Zope2", debug=not handle_errors, request=request, response=response\n+        )\n+\n+        return ResponseWrapper(response, outstream, path)\n+\n+    def test_put_gives_401(self):\n+        try:\n+            # pkg_resources.get_distribution("ZServer") is not good enough,\n+            # because ZServer may be included in the Zope2 package.\n+            import ZServer  # noqa\n+        except ImportError:\n+            print("Ignoring PUT request method tests, as we miss the ZServer.")\n+            return\n+\n+        login(self.portal, TEST_USER_NAME)\n+        self.portal.invokeFactory("Collection", id="collection")\n+        self.portal.invokeFactory("Document", id="page")\n+        self.portal.invokeFactory("File", id="file")\n+        self.portal.invokeFactory("Folder", id="folder")\n+        self.portal.invokeFactory("Image", id="image")\n+        collection = self.portal.collection\n+        fi = self.portal.file\n+        folder = self.portal.folder\n+        image = self.portal.image\n+        page = self.portal.page\n+        logout()\n+\n+        # from zope.publisher.browser import TestRequest\n+\n+        # import pdb; pdb.set_trace()\n+        # request = TestRequest(request_method="PUT")\n+        # collection.REQUEST = request\n+        # x = collection()\n+\n+        path = "/" + collection.absolute_url(relative=True)\n+        response = self.publish(path=path, env={}, request_method="PUT")\n+        self.assertEqual(response.getStatus(), 401)\n+\n+        path = "/" + fi.absolute_url(relative=True)\n+        response = self.publish(path=path, env={}, request_method="PUT")\n+        self.assertEqual(response.getStatus(), 401)\n+\n+        path = "/" + folder.absolute_url(relative=True)\n+        response = self.publish(path=path, env={}, request_method="PUT")\n+        self.assertEqual(response.getStatus(), 401)\n+\n+        path = "/" + image.absolute_url(relative=True)\n+        response = self.publish(path=path, env={}, request_method="PUT")\n+        self.assertEqual(response.getStatus(), 401)\n+\n+        path = "/" + page.absolute_url(relative=True)\n+        response = self.publish(path=path, env={}, request_method="PUT")\n+        self.assertEqual(response.getStatus(), 401)\n+\n+    def DISABLED_test_listDAVobjects_gives_401(self):\n+        # This actually gives 302, both with and without the patch.  It is\n+        # protected with AccessControl.Permissions.webdav_access.\n+        login(self.portal, TEST_USER_NAME)\n+        # only defined for folderish items\n+        self.portal.invokeFactory("Folder", id="folder")\n+        folder = self.portal.folder\n+        logout()\n+\n+        folder_path = "/" + folder.absolute_url(relative=True)\n+        path = folder_path + "/listDAVObjects"\n+        response = self.publish(path=path, env={}, request_method="GET")\n+        self.assertEqual(response.getStatus(), 401)\n+\n+    def get_permission_mapping(self, klass):\n+        permissions = klass.__ac_permissions__\n+        mapping = {}\n+        for permission in permissions:\n+            # permission can have two or three items:\n+            # (\'WebDAV access\',\n+            #  (\'PROPFIND\', \'listDAVObjects\', \'manage_DAVget\'),\n+            #  (\'Manager\', \'Authenticated\'))\n+            perm, methods = list(permission)[:2]\n+            for method in methods:\n+                mapping[method] = perm\n+        return mapping\n+\n+    def _test_class_protected(self, klass):\n+        mapping = self.get_permission_mapping(klass)\n+        for method in READ_METHODS:\n+            if method in klass.__dict__.keys():\n+                self.assertEqual(\n+                    mapping.get(method),\n+                    "View",\n+                    "Method {0} missing view protection".format(method),\n+                )\n+        for method in WRITE_METHODS:\n+            if method in klass.__dict__.keys():\n+                self.assertEqual(\n+                    mapping.get(method),\n+                    "Modify portal content",\n+                    "Method {0} missing edit protection".format(method),\n+                )\n+\n+    def testCollection_protected(self):\n+        try:\n+            from plone.app.contenttypes.content import Collection\n+        except ImportError:\n+            return\n+        self._test_class_protected(Collection)\n+\n+    def testDocument_protected(self):\n+        try:\n+            from plone.app.contenttypes.content import Document\n+        except ImportError:\n+            return\n+        self._test_class_protected(Document)\n+\n+    def testFile_protected(self):\n+        try:\n+            from plone.app.contenttypes.content import File\n+        except ImportError:\n+            return\n+        self._test_class_protected(File)\n+\n+    def testImage_protected(self):\n+        try:\n+            from plone.app.contenttypes.content import Image\n+        except ImportError:\n+            return\n+        self._test_class_protected(Image)\ndiff --git a/setup.py b/setup.py\nindex cf2779dc..7e2c85ad 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -5,7 +5,7 @@\n import os\n \n \n-version = \'2.1.6.dev0\'\n+version = \'2.1.7.dev0\'\n \n \n def read(*rnames):\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2020-03-29T21:59:20+02:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.app.contenttypes/commit/41206f9db5d02a66507ded942c642f3b5aad2b91

Merge remote-tracking branch 'origin/master' into dxcontainer-siteroot

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex 7e2c85ad..952afa53 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -26,11 +26,13 @@ def read(*rnames):\n           "Development Status :: 6 - Mature",\n           "Framework :: Plone",\n           "Framework :: Plone :: 5.2",\n+          "Framework :: Plone :: Core",\n           "License :: OSI Approved :: GNU General Public License (GPL)",\n           "Programming Language :: Python",\n           "Programming Language :: Python :: 2.7",\n           "Programming Language :: Python :: 3.6",\n           "Programming Language :: Python :: 3.7",\n+          "Programming Language :: Python :: 3.8",\n       ],\n       keywords=\'plone content types dexterity\',\n       author=\'Plone Foundation\',\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2020-05-27T20:14:55+02:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.app.contenttypes/commit/ea6af80e972e78826e168ea78862b55f9de4d8db

Merge remote-tracking branch 'origin/master' into dxcontainer-siteroot

Files changed:
M CHANGES.rst
M setup.py

b"diff --git a/CHANGES.rst b/CHANGES.rst\nindex 4e9dad90..55a10a7a 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -8,6 +8,15 @@ Changelog\n \n .. towncrier release notes start\n \n+2.1.7 (2020-04-20)\n+------------------\n+\n+Bug fixes:\n+\n+\n+- Minor packaging updates. (#1)\n+\n+\n 2.1.6 (2020-02-16)\n ------------------\n \ndiff --git a/setup.py b/setup.py\nindex 952afa53..d3b07588 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -5,7 +5,7 @@\n import os\n \n \n-version = '2.1.7.dev0'\n+version = '2.1.8.dev0'\n \n \n def read(*rnames):\n"

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2020-07-19T12:24:37+02:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.app.contenttypes/commit/1940d02b3d158d93c9ffd2c9c27971e85c481fa6

Merge remote-tracking branch 'origin/master' into dxcontainer-siteroot

Files changed:
M CHANGES.rst
M docs/README.rst
M plone/app/contenttypes/behaviors/collection.py
M plone/app/contenttypes/behaviors/configure.zcml
M plone/app/contenttypes/browser/collection.py
M plone/app/contenttypes/browser/folder.py
M plone/app/contenttypes/browser/templates/image.pt
M plone/app/contenttypes/browser/templates/listing.pt
M plone/app/contenttypes/browser/templates/listing_tabular.pt
M plone/app/contenttypes/configure.zcml
M plone/app/contenttypes/tests/test_collection.py
M setup.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 55a10a7a..f1aef5df 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -8,6 +8,28 @@ Changelog\n \n .. towncrier release notes start\n \n+2.1.9 (2020-07-17)\n+------------------\n+\n+Bug fixes:\n+\n+\n+- Display the image size rounded with 1 decimal digit [ale-rt] (#554)\n+- Avoid doing the search twice in listings by reusing the batch variable.\n+  [vincentfretin] (#560)\n+\n+\n+2.1.8 (2020-06-30)\n+------------------\n+\n+Bug fixes:\n+\n+\n+- Internationalize selectable columns in collection and tabular view.\n+  This fixes https://github.com/plone/Products.CMFPlone/issues/2597\n+  [vincentfretin] (#559)\n+\n+\n 2.1.7 (2020-04-20)\n ------------------\n \ndiff --git a/docs/README.rst b/docs/README.rst\nindex f7bf6325..7a548698 100644\n--- a/docs/README.rst\n+++ b/docs/README.rst\n@@ -617,4 +617,4 @@ Contributors\n * Bogdan Girman <bogdan.girman@gmail.com>\n * Martin Opstad Reistadbakk <martin@blaastolen.com>\n * Florent Michon <fmichon@atreal.fr>\n-* H\xc3\xa9ctor Velarde <hector.velarde@gmail.com>\n+* Hector Velarde <hector.velarde@gmail.com>\ndiff --git a/plone/app/contenttypes/behaviors/collection.py b/plone/app/contenttypes/behaviors/collection.py\nindex 234bac44..1d1f2d50 100644\n--- a/plone/app/contenttypes/behaviors/collection.py\n+++ b/plone/app/contenttypes/behaviors/collection.py\n@@ -13,26 +13,22 @@\n from zope.component import adapter\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n+from zope.deferredimport import deprecated\n from zope.interface import implementer\n from zope.interface import provider\n from zope.schema.interfaces import IVocabularyFactory\n-from zope.schema.vocabulary import SimpleTerm\n-from zope.schema.vocabulary import SimpleVocabulary\n \n \n-@implementer(IVocabularyFactory)\n-class MetaDataFieldsVocabulary(object):\n+deprecated(\n+    "Import from plone.app.vocabularies.metadatafields instead (this compatibility layer will be removed in Plone 6)",\n+    MetaDataFieldsVocabulary=\'plone.app.vocabularies.metadatafields:MetaDataFieldsVocabulary\',\n+)\n \n-    def __call__(self, context):\n-        cat = getToolByName(context, \'portal_catalog\')\n-        items = [\n-            SimpleTerm(column, column, column)\n-            for column in cat.schema()\n-        ]\n-        return SimpleVocabulary(items)\n \n-\n-MetaDataFieldsVocabularyFactory = MetaDataFieldsVocabulary()\n+deprecated(\n+    "Import from plone.app.vocabularies.metadatafields instead (this compatibility layer will be removed in Plone 6)",\n+    MetaDataFieldsVocabularyFactory=\'plone.app.vocabularies.metadatafields:MetaDataFieldsVocabularyFactory\',\n+)\n \n \n @provider(IFormFieldProvider, ISyndicatable)\n@@ -84,7 +80,7 @@ class ICollection(model.Schema):\n                       u"\'Tabular view\' is selected in the display menu."),\n         default=[\'Title\', \'Creator\', \'Type\', \'ModificationDate\'],\n         value_type=schema.Choice(\n-            vocabulary=\'plone.app.contenttypes.metadatafields\'),\n+            vocabulary=\'plone.app.vocabularies.MetadataFields\'),\n         required=False,\n     )\n \n@@ -130,7 +126,7 @@ def selectedViewFields(self):\n         """\n         _mapping = {}\n         vocab = getUtility(IVocabularyFactory,\n-                           name=\'plone.app.contenttypes.metadatafields\')\n+                           name=\'plone.app.vocabularies.MetadataFields\')\n         for field in vocab(self.context):\n             _mapping[field.value] = (field.value, field.title)\n         ret = [_mapping[field] for field in self.customViewFields]\ndiff --git a/plone/app/contenttypes/behaviors/configure.zcml b/plone/app/contenttypes/behaviors/configure.zcml\nindex a5136858..92560d5e 100644\n--- a/plone/app/contenttypes/behaviors/configure.zcml\n+++ b/plone/app/contenttypes/behaviors/configure.zcml\n@@ -72,8 +72,10 @@\n     template="richtext_gettext.pt"\n     />\n \n+  <!-- Register the plone.app.vocabularies.MetadataFields under the old\n+       name for backward compatibility. -->\n   <utility\n-      component=".collection.MetaDataFieldsVocabularyFactory"\n+      component="plone.app.vocabularies.metadatafields.MetaDataFieldsVocabularyFactory"\n       name="plone.app.contenttypes.metadatafields" />\n \n   <adapter factory=".collection.CollectionFeed"\ndiff --git a/plone/app/contenttypes/browser/collection.py b/plone/app/contenttypes/browser/collection.py\nindex a41b6959..09559831 100644\n--- a/plone/app/contenttypes/browser/collection.py\n+++ b/plone/app/contenttypes/browser/collection.py\n@@ -77,7 +77,7 @@ def album_folders(self):\n         return self._album_results[\'folders\']\n \n     def tabular_fields(self):\n-        """Returns a list of all metadata fields from the catalog that were\n+        """Return a list of all metadata fields from the catalog that were\n            selected.\n         """\n         context = aq_inner(self.context)\ndiff --git a/plone/app/contenttypes/browser/folder.py b/plone/app/contenttypes/browser/folder.py\nindex 99fdd13a..644bd468 100644\n--- a/plone/app/contenttypes/browser/folder.py\n+++ b/plone/app/contenttypes/browser/folder.py\n@@ -3,6 +3,7 @@\n from Acquisition import aq_inner\n from plone.app.contenttypes import _\n from plone.app.contenttypes.behaviors.leadimage import ILeadImage\n+from plone.app.vocabularies.metadatafields import get_field_label\n from plone.app.contenttypes.interfaces import IFolder\n from plone.app.contenttypes.interfaces import IImage\n from plone.event.interfaces import IEvent\n@@ -167,6 +168,12 @@ def tabular_fields(self):\n             ret.append(\'ModificationDate\')\n         return ret\n \n+    def tabular_field_label(self, field):\n+        """Return the internationalized label (Message object) corresponding\n+           to the field.\n+        """\n+        return get_field_label(field)\n+\n     def tabular_fielddata(self, item, fieldname):\n         value = getattr(item, fieldname, \'\')\n         if safe_callable(value):\ndiff --git a/plone/app/contenttypes/browser/templates/image.pt b/plone/app/contenttypes/browser/templates/image.pt\nindex dcebeb9f..2a1d0779 100644\n--- a/plone/app/contenttypes/browser/templates/image.pt\n+++ b/plone/app/contenttypes/browser/templates/image.pt\n@@ -8,7 +8,9 @@\n <body>\n \n <metal:content-core fill-slot="content-core">\n-<metal:block define-macro="content-core" tal:define="size context/image/getSize">\n+<metal:block define-macro="content-core" tal:define="size context/image/getSize;\n+                                                     use_MB python: size > 1024*1024;\n+                                                     ">\n   <figure class="image-product">\n     <a class="discreet"\n         tal:attributes="href string:${context/@@plone_context_state/object_url}/image_view_fullscreen"\n@@ -18,7 +20,11 @@\n     <img tal:replace="structure img_tag" />\n     <figcaption class="discreet">\n       <strong class="sr-only" i18n:translate="label_click_to_view_full_image">Click to view full-size image&hellip;</strong>\n-      <span><tal:span i18n:translate="label_size">Size</tal:span>: <tal:span tal:replace="python:size/1024"> File size </tal:span>KB</span>\n+      <span>\n+        <tal:span i18n:translate="label_size">Size</tal:span>:\n+        <tal:MB condition="use_MB">${python:round(size/1024/1024, 1)} MB</tal:MB>\n+        <tal:KB condition="not: use_MB">${python:round(size/1024, 1)} KB</tal:KB>\n+      </span>\n     </figcaption>\n     </a>\n   </figure>\ndiff --git a/plone/app/contenttypes/browser/templates/listing.pt b/plone/app/contenttypes/browser/templates/listing.pt\nindex c82dd6ce..350d24d2 100644\n--- a/plone/app/contenttypes/browser/templates/listing.pt\n+++ b/plone/app/contenttypes/browser/templates/listing.pt\n@@ -129,7 +129,7 @@\n \n       <metal:empty metal:define-slot="no_items_in_listing">\n         <p class="discreet"\n-            tal:condition="not: view/batch"\n+            tal:condition="not: batch"\n             tal:content="view/no_items_message">\n           There are currently no items in this folder.\n         </p>\ndiff --git a/plone/app/contenttypes/browser/templates/listing_tabular.pt b/plone/app/contenttypes/browser/templates/listing_tabular.pt\nindex b9b44218..61dbc874 100644\n--- a/plone/app/contenttypes/browser/templates/listing_tabular.pt\n+++ b/plone/app/contenttypes/browser/templates/listing_tabular.pt\n@@ -37,7 +37,7 @@\n               <th class="nosort"\n                   i18n:translate=""\n                   tal:repeat="field view/tabular_fields"\n-                  tal:content="field">Field name</th>\n+                  tal:content="python:view.tabular_field_label(field)">Field name</th>\n             </tr>\n           </thead>\n           <tbody tal:define="portal context/@@plone_portal_state/portal;\n@@ -105,7 +105,7 @@\n \n     <metal:empty metal:define-slot="no_items_in_listing">\n     <p class="discreet"\n-    tal:condition="not: view/batch"\n+    tal:condition="not: batch"\n     tal:content="view/no_items_message">\n     There are currently no items in this folder.\n     </p>\ndiff --git a/plone/app/contenttypes/configure.zcml b/plone/app/contenttypes/configure.zcml\nindex c26d2c0f..3399fbc3 100644\n--- a/plone/app/contenttypes/configure.zcml\n+++ b/plone/app/contenttypes/configure.zcml\n@@ -24,6 +24,7 @@\n   <include package="plone.app.querystring" />\n   <include package="plone.app.relationfield" />\n   <include package="plone.app.versioningbehavior" />\n+  <include package="plone.app.vocabularies" />\n   <include package="plone.app.z3cform" />\n \n   <include file="profiles.zcml" />\ndiff --git a/plone/app/contenttypes/tests/test_collection.py b/plone/app/contenttypes/tests/test_collection.py\nindex 5f3569fc..a4bafb35 100644\n--- a/plone/app/contenttypes/tests/test_collection.py\n+++ b/plone/app/contenttypes/tests/test_collection.py\n@@ -64,12 +64,12 @@ def test_results(self):\n     def test_bbb_selectedViewFields(self):\n         self.assertEqual(\n             self.collection.selectedViewFields(),\n-            [(\'Title\', \'Title\'), (\'Creator\', \'Creator\'),\n-             (\'Type\', \'Type\'), (\'ModificationDate\', \'ModificationDate\')]\n+            [(\'Title\', u\'Title\'), (\'Creator\', u\'Creator\'),\n+             (\'Type\', u\'Type\'), (\'ModificationDate\', u\'Last modified\')]\n         )\n         self.collection.customViewFields = [\'Title\', \'Description\']\n         self.assertEqual(self.collection.selectedViewFields(),\n-                         [(\'Title\', \'Title\'), (\'Description\', \'Description\')])\n+                         [(\'Title\', u\'Title\'), (\'Description\', u\'Description\')])\n \n     def test_bbb_setQuery(self):\n         self.collection.setQuery(query)\ndiff --git a/setup.py b/setup.py\nindex d3b07588..3f974cd5 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -5,7 +5,7 @@\n import os\n \n \n-version = \'2.1.8.dev0\'\n+version = \'2.1.10.dev0\'\n \n \n def read(*rnames):\n@@ -55,6 +55,7 @@ def read(*rnames):\n           \'plone.app.relationfield\',\n           \'plone.namedfile [blobs] >= 4.2.0\',\n           \'plone.app.versioningbehavior\',\n+          \'plone.app.vocabularies>4.1.2\',\n           \'plone.app.lockingbehavior\',\n           \'plone.behavior >= 1.3.0\',\n           \'pytz\',\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2020-08-22T15:54:13+02:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.app.contenttypes/commit/e78bc9dbb92d34e126f0e2265cde4911a7c449d8

Merge remote-tracking branch 'origin/master' into dxcontainer-siteroot

Files changed:
A plone/app/contenttypes/tests/test_browser_utils.py
M CHANGES.rst
M plone/app/contenttypes/browser/utils.py
M plone/app/contenttypes/migration/migration.py
M plone/app/contenttypes/migration/utils.py
M plone/app/contenttypes/tests/test_migration.py
M setup.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex f1aef5df..0e763df6 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -8,6 +8,21 @@ Changelog\n \n .. towncrier release notes start\n \n+2.1.10 (2020-08-14)\n+-------------------\n+\n+Bug fixes:\n+\n+\n+- Handle cases where the __parent__ of a discussion was not set to the migrated DX object.\n+  [pbauer] (#566)\n+- In the edge case where the meta_type could not be resolved assume is_folderish being false.\n+  [pbauer] (#567)\n+- Fixed problems in ``getMimeTypeIcon``.\n+  The contentType of the file was ignored, and icon paths could have a duplicate ``++resource++mimetype.icons/``.\n+  [maurits] (#569)\n+\n+\n 2.1.9 (2020-07-17)\n ------------------\n \ndiff --git a/plone/app/contenttypes/browser/utils.py b/plone/app/contenttypes/browser/utils.py\nindex ba07fb31..6448f087 100644\n--- a/plone/app/contenttypes/browser/utils.py\n+++ b/plone/app/contenttypes/browser/utils.py\n@@ -9,6 +9,9 @@\n from zope.interface import Interface\n \n \n+PREFIX = "++resource++mimetype.icons/"\n+\n+\n class IUtils(Interface):\n     """\n     """\n@@ -21,43 +24,39 @@ def getMimeTypeIcon(content_file):\n \n @implementer(IUtils)\n class Utils(BrowserView):\n+    def _get_mimes(self, content_file):\n+        # We use \'yield\' so iteration can be cut short\n+        # if the calling code is happy.\n+        context = aq_inner(self.context)\n+        mtr = getToolByName(context, "mimetypes_registry")\n+        if content_file.contentType:\n+            # this gives a tuple\n+            for mime in mtr.lookup(content_file.contentType):\n+                yield mime\n+        if content_file.filename:\n+            # this gives a single mime type\n+            yield mtr.lookupExtension(content_file.filename)\n+        for mime in mtr.lookup("application/octet-stream"):\n+            yield mime\n \n     @memoize\n     def getMimeTypeIcon(self, content_file):\n+        # Get possible mime types, and try to find an icon path.\n+        # Keep the first one, in case there is no good match.\n+        first = None\n+        for mime in self._get_mimes(content_file):\n+            if first is None:\n+                first = mime\n+            if hasattr(mime, "icon_path"):\n+                icon_path = mime.icon_path\n+                if not icon_path.startswith("++"):\n+                    icon_path = PREFIX + icon_path\n+                return icon_path\n+\n+        if first is None:\n+            # Probably does not happen in practice.\n+            return ""\n         context = aq_inner(self.context)\n-        pstate = getMultiAdapter(\n-            (context, self.request),\n-            name=u\'plone_portal_state\'\n-        )\n+        pstate = getMultiAdapter((context, self.request), name=u"plone_portal_state")\n         portal_url = pstate.portal_url()\n-        mtr = getToolByName(context, \'mimetypes_registry\')\n-        mime = []\n-        if content_file.contentType:\n-            mime.append(mtr.lookup(content_file.contentType))\n-        if content_file.filename:\n-            mime.append(mtr.lookupExtension(content_file.filename))\n-        mime.append(mtr.lookup(\'application/octet-stream\')[0])\n-        icon_paths = [\'++resource++mimetype.icons/\' + m.icon_path\n-                      for m in mime if hasattr(m, \'icon_path\')]\n-        if icon_paths:\n-            return icon_paths[0]\n-\n-        return portal_url + \'/\' + guess_icon_path(mime[0])\n-\n-        # function works but is possibly not best implementation. following\n-        # code might work for files where the mimetype is not directly\n-        # recognized\n-\n-#        if len(mime) > 0:\n-#            icon = portal_url + "/" + guess_icon_path(mime[0])\n-#        else:\n-#            mime = mtr.lookupExtension(content_file.filename)\n-#            if mime <> "":\n-#                icon = portal_url + "/" + guess_icon_path(mime)\n-#            else:\n-#                logger.info(\n-#                   "No MimeType Icon found for MimeType: " + \\\n-#                   str(content_file.contentType)\n-#                   )\n-#                icon = portal_url + "/application.png"\n-#        return icon\n+        return portal_url + "/" + guess_icon_path(first)\ndiff --git a/plone/app/contenttypes/migration/migration.py b/plone/app/contenttypes/migration/migration.py\nindex 4ee3dd64..b9c8894c 100644\n--- a/plone/app/contenttypes/migration/migration.py\n+++ b/plone/app/contenttypes/migration/migration.py\n@@ -524,6 +524,8 @@ def migrateCustomAT(fields_mapping,\n             is_folderish = getattr(src_obj, \'isPrincipiaFolderish\', False)\n             src_meta_type = src_obj.meta_type\n     else:\n+        # fallback\n+        is_folderish = False\n         # Get info from at-fti\n         src_meta_type = fti.content_meta_type\n         archetype_tool = getToolByName(portal, \'archetype_tool\', None)\n@@ -533,6 +535,7 @@ def migrateCustomAT(fields_mapping,\n             if info.get(\'meta_type\') == src_meta_type:\n                 klass = info.get(\'klass\', None)\n                 is_folderish = klass.isPrincipiaFolderish\n+                break\n \n     migrator = makeCustomATMigrator(context=portal,\n                                     src_type=src_type,\ndiff --git a/plone/app/contenttypes/migration/utils.py b/plone/app/contenttypes/migration/utils.py\nindex cd231160..1689eec4 100644\n--- a/plone/app/contenttypes/migration/utils.py\n+++ b/plone/app/contenttypes/migration/utils.py\n@@ -10,7 +10,6 @@\n from plone.app.contenttypes.migration.field_migrators import migrate_imagefield\n from plone.app.contenttypes.migration.field_migrators import migrate_simplefield  # noqa\n from plone.app.contenttypes.utils import DEFAULT_TYPES\n-from plone.app.discussion.conversation import ANNOTATION_KEY as DISCUSSION_KEY\n from plone.app.discussion.interfaces import IConversation\n from plone.app.linkintegrity.handlers import modifiedArchetype\n from plone.app.linkintegrity.handlers import modifiedDexterity\n@@ -28,6 +27,7 @@\n from Products.Archetypes.config import REFERENCE_CATALOG\n from Products.Archetypes.interfaces.referenceable import IReferenceable\n from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone import DISCUSSION_ANNOTATION_KEY\n from Products.CMFPlone.interfaces import IPloneSiteRoot\n from Products.CMFPlone.utils import safe_hasattr\n from Products.Five.browser import BrowserView\n@@ -151,21 +151,25 @@ def move_comments(source_object, target_object):\n     and then removing the comments from the source (not the annotation).\n     """\n     source_annotations = IAnnotations(source_object)\n-    comments = source_annotations.get(DISCUSSION_KEY, None)\n+    comments = source_annotations.get(DISCUSSION_ANNOTATION_KEY, None)\n     if comments is not None:\n         target_annotations = IAnnotations(target_object)\n-        if target_annotations.get(DISCUSSION_KEY, None) is not None:\n+        if target_annotations.get(DISCUSSION_ANNOTATION_KEY, None) is not None:\n             logger.error(\'Comments exist on {0}\').format(\n                 target_object.absolute_url())\n-        target_annotations[DISCUSSION_KEY] = deepcopy(comments)\n+        # reset the parent before copying\n+        del comments.__parent__\n+        copy_of_comments = deepcopy(comments)\n+        copy_of_comments.__parent__ = target_object\n+        target_annotations[DISCUSSION_ANNOTATION_KEY] = copy_of_comments\n \n-        # Delete comments from the portal where wthey were stored temporarily.\n+        # Delete comments from the portal where whey were stored temporarily.\n         # Comments on the old objects will be removed with the objects.\n         if IPloneSiteRoot.providedBy(source_object):\n             source_conversation = IConversation(source_object)\n             for comment in source_conversation.getComments():\n                 del source_conversation[comment.comment_id]\n-            del source_annotations[DISCUSSION_KEY]\n+            del source_annotations[DISCUSSION_ANNOTATION_KEY]\n \n \n def copy_contentrules(source_object, target_object):\ndiff --git a/plone/app/contenttypes/tests/test_browser_utils.py b/plone/app/contenttypes/tests/test_browser_utils.py\nnew file mode 100644\nindex 00000000..e1fa2846\n--- /dev/null\n+++ b/plone/app/contenttypes/tests/test_browser_utils.py\n@@ -0,0 +1,54 @@\n+# -*- coding: utf-8 -*-\n+from plone.app.contenttypes.testing import (\n+    PLONE_APP_CONTENTTYPES_INTEGRATION_TESTING,\n+)  # noqa\n+from zope.component import getMultiAdapter\n+\n+import unittest\n+\n+\n+# The default fallback is the icon for \'application/octet-stream\':\n+FALLBACK = "++resource++mimetype.icons/application.png"\n+# Most or all icons should have this as prefix:\n+PREFIX = "++resource++mimetype.icons/"\n+\n+\n+class DummyFile(object):\n+    """Dummy file object.\n+\n+    For these tests, we only need a contentType and filename.\n+    """\n+\n+    def __init__(self, contentType, filename):\n+        self.contentType = contentType\n+        self.filename = filename\n+\n+\n+class MimeTypeIconIntegrationTest(unittest.TestCase):\n+\n+    layer = PLONE_APP_CONTENTTYPES_INTEGRATION_TESTING\n+\n+    def setUp(self):\n+        portal = self.layer["portal"]\n+        request = self.layer["request"]\n+        self.view = getMultiAdapter((portal, request), name="contenttype_utils")\n+\n+    def test_none(self):\n+        self.assertEqual(self.view.getMimeTypeIcon(DummyFile(None, None)), FALLBACK)\n+\n+    def test_unknown(self):\n+        self.assertEqual(\n+            self.view.getMimeTypeIcon(DummyFile("some/unknown", "unkown.unknown")),\n+            FALLBACK,\n+        )\n+\n+    def test_contenttype_pdf(self):\n+        self.assertEqual(\n+            self.view.getMimeTypeIcon(DummyFile("application/pdf", None)),\n+            PREFIX + "pdf.png",\n+        )\n+\n+    def test_filename_pdf(self):\n+        self.assertEqual(\n+            self.view.getMimeTypeIcon(DummyFile(None, "plone.pdf")), PREFIX + "pdf.png"\n+        )\ndiff --git a/plone/app/contenttypes/tests/test_migration.py b/plone/app/contenttypes/tests/test_migration.py\nindex 709945ed..ac1000e9 100644\n--- a/plone/app/contenttypes/tests/test_migration.py\n+++ b/plone/app/contenttypes/tests/test_migration.py\n@@ -1830,6 +1830,7 @@ def test_comments_are_migrated(self):\n         at_comment = [i for i in at_comments][0]\n         at_plone_uuid = getattr(at_comment, \'_plone.uuid\')\n         at_comment_id = getattr(at_comment, \'comment_id\')\n+        self.assertEqual(at_conversation.__parent__, at_document)\n \n         # migrate\n         applyProfile(self.portal, \'plone.app.contenttypes:default\')\n@@ -1843,6 +1844,7 @@ def test_comments_are_migrated(self):\n         self.assertFalse(portal_conversation)\n         # comments were migrated\n         dx_conversation = IConversation(dx_document)\n+        self.assertEqual(dx_conversation.__parent__, dx_document)\n         self.assertEqual(\n             len(dx_conversation),\n             1\ndiff --git a/setup.py b/setup.py\nindex 3f974cd5..9508bf83 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -5,7 +5,7 @@\n import os\n \n \n-version = \'2.1.10.dev0\'\n+version = \'2.1.11.dev0\'\n \n \n def read(*rnames):\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2020-09-26T17:54:35+02:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.app.contenttypes/commit/cdd5fa00ac12f4a577dfe2d7bf0d26776f56d49c

Merge remote-tracking branch 'origin/master' into dxcontainer-siteroot

Files changed:
A news/3130.bugfix
A news/572.feature
M plone/app/contenttypes/migration/migration.py
M plone/app/contenttypes/testing.py
M plone/app/contenttypes/tests/test_behaviors_collection.py
M plone/app/contenttypes/tests/test_behaviors_leadimage.py
M plone/app/contenttypes/tests/test_behaviors_richtext.py
M plone/app/contenttypes/tests/test_behaviors_table_of_contents.py
M plone/app/contenttypes/tests/test_collection.py
M plone/app/contenttypes/tests/test_document.py
M plone/app/contenttypes/tests/test_event.py
M plone/app/contenttypes/tests/test_file.py
M plone/app/contenttypes/tests/test_folder.py
M plone/app/contenttypes/tests/test_image.py
M plone/app/contenttypes/tests/test_link.py
M plone/app/contenttypes/tests/test_migration.py
M plone/app/contenttypes/tests/test_migration_custom.py
M plone/app/contenttypes/tests/test_news_item.py
M plone/app/contenttypes/tests/test_security.py
M plone/app/contenttypes/tests/test_webdav.py

b'diff --git a/news/3130.bugfix b/news/3130.bugfix\nnew file mode 100644\nindex 00000000..7f19ed94\n--- /dev/null\n+++ b/news/3130.bugfix\n@@ -0,0 +1,2 @@\n+Fix various deprecation warnings.\n+[maurits]\ndiff --git a/news/572.feature b/news/572.feature\nnew file mode 100644\nindex 00000000..7a49f2fa\n--- /dev/null\n+++ b/news/572.feature\n@@ -0,0 +1 @@\n+Allow passing a custom catalog-query to migrateCustomAT to constrain which objects to migrate. [pbauer]\n\\ No newline at end of file\ndiff --git a/plone/app/contenttypes/migration/migration.py b/plone/app/contenttypes/migration/migration.py\nindex b9c8894c..f547d752 100644\n--- a/plone/app/contenttypes/migration/migration.py\n+++ b/plone/app/contenttypes/migration/migration.py\n@@ -484,6 +484,7 @@ def migrateCustomAT(fields_mapping,\n                     dry_run=False,\n                     patch_linkintegrity=False,\n                     patch_searchabletext=False,\n+                    query=None,\n                     ):\n     """\n     Try to get types infos from archetype_tool, then set a migrator and pass it\n@@ -554,6 +555,8 @@ def migrateCustomAT(fields_mapping,\n                            \'src_meta_type\': src_meta_type,\n                            \'dst_meta_type\': \'\',\n                            \'use_savepoint\': True}\n+        if query:\n+            walker_settings[\'query\'] = query\n         if dry_run:\n             walker_settings[\'limit\'] = 1\n         walker = CustomQueryWalker(**walker_settings)\ndiff --git a/plone/app/contenttypes/testing.py b/plone/app/contenttypes/testing.py\nindex dc93f034..3e943ebb 100644\n--- a/plone/app/contenttypes/testing.py\n+++ b/plone/app/contenttypes/testing.py\n@@ -11,7 +11,7 @@\n from plone.app.testing import PloneSandboxLayer\n from plone.app.testing import SITE_OWNER_NAME\n from plone.app.testing import SITE_OWNER_PASSWORD\n-from plone.testing import z2\n+from plone.testing import zope\n from Products.CMFPlone.utils import get_installer\n from zope.interface import alsoProvides\n \n@@ -86,19 +86,19 @@ def setUpZope(self, app, configurationContext):\n \n         # prepare installing Products.ATContentTypes\n         self.loadZCML(package=Products.ATContentTypes)\n-        z2.installProduct(app, \'Products.Archetypes\')\n-        z2.installProduct(app, \'Products.ATContentTypes\')\n-        z2.installProduct(app, \'plone.app.blob\')\n+        zope.installProduct(app, \'Products.Archetypes\')\n+        zope.installProduct(app, \'Products.ATContentTypes\')\n+        zope.installProduct(app, \'plone.app.blob\')\n \n         # prepare installing plone.app.collection\n         try:\n             pkg_resources.get_distribution(\'plone.app.collection\')\n-            z2.installProduct(app, \'plone.app.collection\')\n+            zope.installProduct(app, \'plone.app.collection\')\n         except pkg_resources.DistributionNotFound:\n             pass\n \n         # prepare installing plone.app.contenttypes\n-        z2.installProduct(app, \'Products.DateRecurringIndex\')\n+        zope.installProduct(app, \'Products.DateRecurringIndex\')\n \n         import plone.app.contenttypes\n         self.loadZCML(package=plone.app.contenttypes)\n@@ -142,12 +142,12 @@ def tearDownZope(self, app):\n \n         try:\n             pkg_resources.get_distribution(\'plone.app.collection\')\n-            z2.uninstallProduct(app, \'plone.app.collection\')\n+            zope.uninstallProduct(app, \'plone.app.collection\')\n         except pkg_resources.DistributionNotFound:\n             pass\n-        z2.uninstallProduct(app, \'plone.app.blob\')\n-        z2.uninstallProduct(app, \'Products.ATContentTypes\')\n-        z2.uninstallProduct(app, \'Products.Archetypes\')\n+        zope.uninstallProduct(app, \'plone.app.blob\')\n+        zope.uninstallProduct(app, \'Products.ATContentTypes\')\n+        zope.uninstallProduct(app, \'Products.Archetypes\')\n \n \n PLONE_APP_CONTENTTYPES_FIXTURE = PloneAppContenttypes()\n@@ -163,7 +163,7 @@ def tearDownZope(self, app):\n PLONE_APP_CONTENTTYPES_ROBOT_TESTING = FunctionalTesting(\n     bases=(\n         PLONE_APP_CONTENTTYPES_ROBOT_FIXTURE,\n-        z2.ZSERVER_FIXTURE\n+        zope.WSGI_SERVER_FIXTURE\n     ),\n     name=\'PloneAppContenttypes:Robot\'\n )\ndiff --git a/plone/app/contenttypes/tests/test_behaviors_collection.py b/plone/app/contenttypes/tests/test_behaviors_collection.py\nindex 7b2377ba..247f0471 100644\n--- a/plone/app/contenttypes/tests/test_behaviors_collection.py\n+++ b/plone/app/contenttypes/tests/test_behaviors_collection.py\n@@ -6,7 +6,7 @@\n from plone.app.testing import SITE_OWNER_PASSWORD\n from plone.app.testing import TEST_USER_ID\n from plone.dexterity.fti import DexterityFTI\n-from plone.testing.z2 import Browser\n+from plone.testing.zope import Browser\n from zope.interface import alsoProvides\n \n import json\ndiff --git a/plone/app/contenttypes/tests/test_behaviors_leadimage.py b/plone/app/contenttypes/tests/test_behaviors_leadimage.py\nindex a42331db..2474024e 100644\n--- a/plone/app/contenttypes/tests/test_behaviors_leadimage.py\n+++ b/plone/app/contenttypes/tests/test_behaviors_leadimage.py\n@@ -6,7 +6,7 @@\n from plone.app.testing import SITE_OWNER_PASSWORD\n from plone.app.testing import TEST_USER_ID\n from plone.dexterity.fti import DexterityFTI\n-from plone.testing.z2 import Browser\n+from plone.testing.zope import Browser\n from zope.interface import alsoProvides\n \n import io\ndiff --git a/plone/app/contenttypes/tests/test_behaviors_richtext.py b/plone/app/contenttypes/tests/test_behaviors_richtext.py\nindex d61220e0..f7727986 100644\n--- a/plone/app/contenttypes/tests/test_behaviors_richtext.py\n+++ b/plone/app/contenttypes/tests/test_behaviors_richtext.py\n@@ -6,7 +6,7 @@\n from plone.app.testing import SITE_OWNER_PASSWORD\n from plone.app.testing import TEST_USER_ID\n from plone.dexterity.fti import DexterityFTI\n-from plone.testing.z2 import Browser\n+from plone.testing.zope import Browser\n from Products.CMFCore.utils import getToolByName\n \n import unittest\ndiff --git a/plone/app/contenttypes/tests/test_behaviors_table_of_contents.py b/plone/app/contenttypes/tests/test_behaviors_table_of_contents.py\nindex 4da0844b..3b729d9b 100644\n--- a/plone/app/contenttypes/tests/test_behaviors_table_of_contents.py\n+++ b/plone/app/contenttypes/tests/test_behaviors_table_of_contents.py\n@@ -6,7 +6,7 @@\n from plone.app.testing import SITE_OWNER_PASSWORD\n from plone.app.testing import TEST_USER_ID\n from plone.dexterity.fti import DexterityFTI\n-from plone.testing.z2 import Browser\n+from plone.testing.zope import Browser\n from zope.interface import alsoProvides\n \n import unittest\ndiff --git a/plone/app/contenttypes/tests/test_collection.py b/plone/app/contenttypes/tests/test_collection.py\nindex a4bafb35..08c95f33 100644\n--- a/plone/app/contenttypes/tests/test_collection.py\n+++ b/plone/app/contenttypes/tests/test_collection.py\n@@ -16,7 +16,7 @@\n from plone.app.testing import TEST_USER_NAME\n from plone.app.textfield.value import RichTextValue\n from plone.dexterity.interfaces import IDexterityFTI\n-from plone.testing.z2 import Browser\n+from plone.testing.zope import Browser\n from transaction import commit\n from zope.component import createObject\n from zope.component import queryUtility\ndiff --git a/plone/app/contenttypes/tests/test_document.py b/plone/app/contenttypes/tests/test_document.py\nindex 81655a29..2127da11 100644\n--- a/plone/app/contenttypes/tests/test_document.py\n+++ b/plone/app/contenttypes/tests/test_document.py\n@@ -9,7 +9,7 @@\n from plone.app.textfield.value import RichTextValue\n from plone.app.z3cform.interfaces import IPloneFormLayer\n from plone.dexterity.interfaces import IDexterityFTI\n-from plone.testing.z2 import Browser\n+from plone.testing.zope import Browser\n from zope.component import createObject\n from zope.component import queryUtility\n from zope.interface import alsoProvides\ndiff --git a/plone/app/contenttypes/tests/test_event.py b/plone/app/contenttypes/tests/test_event.py\nindex 40b53ed7..39a499e1 100644\n--- a/plone/app/contenttypes/tests/test_event.py\n+++ b/plone/app/contenttypes/tests/test_event.py\n@@ -9,7 +9,7 @@\n from plone.app.z3cform.interfaces import IPloneFormLayer\n from plone.dexterity.interfaces import IDexterityFTI\n from plone.event.interfaces import IEvent\n-from plone.testing.z2 import Browser\n+from plone.testing.zope import Browser\n from zope.component import createObject\n from zope.component import queryUtility\n from zope.interface import alsoProvides\ndiff --git a/plone/app/contenttypes/tests/test_file.py b/plone/app/contenttypes/tests/test_file.py\nindex 022c0aa0..27c72fb7 100644\n--- a/plone/app/contenttypes/tests/test_file.py\n+++ b/plone/app/contenttypes/tests/test_file.py\n@@ -10,7 +10,7 @@\n from plone.app.z3cform.interfaces import IPloneFormLayer\n from plone.dexterity.interfaces import IDexterityFTI\n from plone.namedfile.file import NamedFile\n-from plone.testing.z2 import Browser\n+from plone.testing.zope import Browser\n from zope.component import createObject\n from zope.component import queryUtility\n from zope.interface import alsoProvides\ndiff --git a/plone/app/contenttypes/tests/test_folder.py b/plone/app/contenttypes/tests/test_folder.py\nindex a883bead..9c3ea64f 100644\n--- a/plone/app/contenttypes/tests/test_folder.py\n+++ b/plone/app/contenttypes/tests/test_folder.py\n@@ -9,7 +9,7 @@\n from plone.app.testing import SITE_OWNER_PASSWORD\n from plone.app.testing import TEST_USER_ID\n from plone.dexterity.interfaces import IDexterityFTI\n-from plone.testing.z2 import Browser\n+from plone.testing.zope import Browser\n from zope.component import createObject\n from zope.component import queryUtility\n \ndiff --git a/plone/app/contenttypes/tests/test_image.py b/plone/app/contenttypes/tests/test_image.py\nindex bd948d3b..52bbdf08 100644\n--- a/plone/app/contenttypes/tests/test_image.py\n+++ b/plone/app/contenttypes/tests/test_image.py\n@@ -8,7 +8,7 @@\n from plone.app.testing import TEST_USER_ID\n from plone.app.z3cform.interfaces import IPloneFormLayer\n from plone.dexterity.interfaces import IDexterityFTI\n-from plone.testing.z2 import Browser\n+from plone.testing.zope import Browser\n from zope.component import createObject\n from zope.component import queryUtility\n from zope.interface import alsoProvides\n@@ -124,7 +124,7 @@ def test_svg_image(self):\n         scale = self.image.restrictedTraverse(\'@@images\')\n         self.assertRegex(\n             scale.scale(\'image\', scale=\'large\').tag(),\n-            r\'<img src="http://nohost/plone/image/@@images/[a-z0-9--]*.svg" alt="My Image" title="My Image" height="[a-z0-9--]*" width="[a-z0-9--]*" />\',  # noqa: E501\n+            r\'<img src="http://nohost/plone/image/@@images/[a-z0-9\\-]*.svg" alt="My Image" title="My Image" height="[a-z0-9\\-]*" width="[a-z0-9\\-]*" />\',  # noqa: E501\n         )\n \n \ndiff --git a/plone/app/contenttypes/tests/test_link.py b/plone/app/contenttypes/tests/test_link.py\nindex 5f729ba2..1f956c9d 100644\n--- a/plone/app/contenttypes/tests/test_link.py\n+++ b/plone/app/contenttypes/tests/test_link.py\n@@ -12,7 +12,7 @@\n from plone.app.testing import TEST_USER_ID\n from plone.app.z3cform.interfaces import IPloneFormLayer\n from plone.dexterity.interfaces import IDexterityFTI\n-from plone.testing.z2 import Browser\n+from plone.testing.zope import Browser\n from plone.uuid.interfaces import IUUID\n from Products.CMFCore.utils import getToolByName\n from zope.component import createObject\ndiff --git a/plone/app/contenttypes/tests/test_migration.py b/plone/app/contenttypes/tests/test_migration.py\nindex ac1000e9..c4eeebb8 100644\n--- a/plone/app/contenttypes/tests/test_migration.py\n+++ b/plone/app/contenttypes/tests/test_migration.py\n@@ -29,7 +29,7 @@\n     from plone.dexterity.interfaces import IDexterityFTI\n     from plone.event.interfaces import IEventAccessor\n     from plone.namedfile.file import NamedBlobImage\n-    from plone.testing.z2 import Browser\n+    from plone.testing.zope import Browser\n     from Products.CMFCore.utils import getToolByName\n     from Products.CMFPlone.utils import get_installer\n     from z3c.relationfield import RelationValue\n@@ -226,12 +226,12 @@ def test_patct_event_is_migrated(self):\n     def test_pae_atevent_is_migrated(self):\n         """Can we migrate a plone.app.event AT event?"""\n         from DateTime import DateTime\n-        from plone.testing import z2\n+        from plone.testing import zope\n         from plone.app.testing import applyProfile\n         from plone.app.contenttypes.migration.migration import migrate_events\n \n         # Enable plone.app.event.at\n-        z2.installProduct(self.layer[\'app\'], \'plone.app.event.at\')\n+        zope.installProduct(self.layer[\'app\'], \'plone.app.event.at\')\n         applyProfile(self.portal, \'plone.app.event.at:default\')\n \n         self.portal.invokeFactory(\'Event\', \'pae-at-event\')\ndiff --git a/plone/app/contenttypes/tests/test_migration_custom.py b/plone/app/contenttypes/tests/test_migration_custom.py\nindex f9b3a68f..b353a722 100644\n--- a/plone/app/contenttypes/tests/test_migration_custom.py\n+++ b/plone/app/contenttypes/tests/test_migration_custom.py\n@@ -17,7 +17,7 @@\n     from plone.app.testing import SITE_OWNER_NAME\n     from plone.app.testing import SITE_OWNER_PASSWORD\n     from plone.app.testing import TEST_USER_ID\n-    from plone.testing.z2 import Browser\n+    from plone.testing.zope import Browser\n     from Products.CMFCore.utils import getToolByName\n     from Products.CMFPlone.utils import safe_unicode\n \ndiff --git a/plone/app/contenttypes/tests/test_news_item.py b/plone/app/contenttypes/tests/test_news_item.py\nindex a2299aa3..3e140e16 100644\n--- a/plone/app/contenttypes/tests/test_news_item.py\n+++ b/plone/app/contenttypes/tests/test_news_item.py\n@@ -9,7 +9,7 @@\n from plone.app.textfield.value import RichTextValue\n from plone.app.z3cform.interfaces import IPloneFormLayer\n from plone.dexterity.interfaces import IDexterityFTI\n-from plone.testing.z2 import Browser\n+from plone.testing.zope import Browser\n from Products.Five.browser import BrowserView as View\n from zope.component import createObject\n from zope.component import queryMultiAdapter\ndiff --git a/plone/app/contenttypes/tests/test_security.py b/plone/app/contenttypes/tests/test_security.py\nindex ce3a83de..5a2ef0b8 100644\n--- a/plone/app/contenttypes/tests/test_security.py\n+++ b/plone/app/contenttypes/tests/test_security.py\n@@ -6,7 +6,7 @@\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import TEST_USER_NAME\n-from plone.testing.z2 import Browser\n+from plone.testing.zope import Browser\n \n import base64\n import os\ndiff --git a/plone/app/contenttypes/tests/test_webdav.py b/plone/app/contenttypes/tests/test_webdav.py\nindex 6a19a0fd..78f166d2 100644\n--- a/plone/app/contenttypes/tests/test_webdav.py\n+++ b/plone/app/contenttypes/tests/test_webdav.py\n@@ -46,12 +46,13 @@ def setUp(self):\n     def test_image_put(self):\n         """Upload an image through webdav."""\n         filename = os.path.join(os.path.dirname(__file__), u\'image.jpg\')\n-        request = DAVTestRequest(environ={\n-            \'BODYFILE\': open(filename, \'rb\'),\n-            \'PATH_INFO\': \'/foo/bar/image.jpg\',\n-        })\n-        self.image.REQUEST = request\n-        self.image.PUT()\n+        with open(filename, \'rb\') as myfile:\n+            request = DAVTestRequest(environ={\n+                \'BODYFILE\': myfile,\n+                \'PATH_INFO\': \'/foo/bar/image.jpg\',\n+            })\n+            self.image.REQUEST = request\n+            self.image.PUT()\n         self.assertEqual(self.image.image.filename, u\'image.jpg\')\n         self.assertEqual(self.image.get_size(), 5131)\n         self.assertEqual(self.image.content_type(), \'image/jpeg\')\n@@ -59,12 +60,13 @@ def test_image_put(self):\n     def test_file_put(self):\n         """Upload a file through webdav."""\n         filename = os.path.join(os.path.dirname(__file__), u\'file.pdf\')\n-        request = DAVTestRequest(environ={\n-            \'BODYFILE\': open(filename, \'rb\'),\n-            \'PATH_INFO\': \'/foo/bar/file.pdf\',\n-        })\n-        self.file.REQUEST = request\n-        self.file.PUT()\n+        with open(filename, \'rb\') as myfile:\n+            request = DAVTestRequest(environ={\n+                \'BODYFILE\': myfile,\n+                \'PATH_INFO\': \'/foo/bar/file.pdf\',\n+            })\n+            self.file.REQUEST = request\n+            self.file.PUT()\n         self.assertEqual(self.file.file.filename, u\'file.pdf\')\n         self.assertEqual(self.file.get_size(), 8561)\n         self.assertEqual(self.file.content_type(), \'application/pdf\')\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2020-10-04T14:59:07+02:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.app.contenttypes/commit/dd225e65d48b85ac780d765d2aac0c48d8277f4e

Merge remote-tracking branch 'origin/master' into dxcontainer-siteroot

Files changed:
M CHANGES.rst
M setup.py
D news/3130.bugfix
D news/572.feature

b"diff --git a/CHANGES.rst b/CHANGES.rst\nindex 0e763df6..c2f41fd2 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -8,6 +8,22 @@ Changelog\n \n .. towncrier release notes start\n \n+2.2.0 (2020-09-28)\n+------------------\n+\n+New features:\n+\n+\n+- Allow passing a custom catalog-query to migrateCustomAT to constrain which objects to migrate. [pbauer] (#572)\n+\n+\n+Bug fixes:\n+\n+\n+- Fix various deprecation warnings.\n+  [maurits] (#3130)\n+\n+\n 2.1.10 (2020-08-14)\n -------------------\n \ndiff --git a/news/3130.bugfix b/news/3130.bugfix\ndeleted file mode 100644\nindex 7f19ed94..00000000\n--- a/news/3130.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Fix various deprecation warnings.\n-[maurits]\ndiff --git a/news/572.feature b/news/572.feature\ndeleted file mode 100644\nindex 7a49f2fa..00000000\n--- a/news/572.feature\n+++ /dev/null\n@@ -1 +0,0 @@\n-Allow passing a custom catalog-query to migrateCustomAT to constrain which objects to migrate. [pbauer]\n\\ No newline at end of file\ndiff --git a/setup.py b/setup.py\nindex 9508bf83..c859aec6 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -5,7 +5,7 @@\n import os\n \n \n-version = '2.1.11.dev0'\n+version = '2.2.1.dev0'\n \n \n def read(*rnames):\n"

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2020-12-09T20:03:59+01:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.app.contenttypes/commit/1ae3523d048b9bd17f1eddbbb183d41f16d8d382

Merge remote-tracking branch 'origin/master' into dxcontainer-siteroot

Files changed:
M CHANGES.rst
M plone/app/contenttypes/tests/test_collection.py
M plone/app/contenttypes/tests/test_document.py
M plone/app/contenttypes/tests/test_event.py
M plone/app/contenttypes/tests/test_file.py
M plone/app/contenttypes/tests/test_folder.py
M plone/app/contenttypes/tests/test_image.py
M plone/app/contenttypes/tests/test_link.py
M plone/app/contenttypes/tests/test_news_item.py
M setup.py

b"diff --git a/CHANGES.rst b/CHANGES.rst\nindex c2f41fd2..ed56abcb 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -8,6 +8,17 @@ Changelog\n \n .. towncrier release notes start\n \n+2.2.1 (2020-10-12)\n+------------------\n+\n+Bug fixes:\n+\n+\n+- Update tests to fix updated schema cache.\n+  See https://github.com/plone/plone.dexterity/pull/137\n+  [@avoinea] (#573)\n+\n+\n 2.2.0 (2020-09-28)\n ------------------\n \ndiff --git a/plone/app/contenttypes/tests/test_collection.py b/plone/app/contenttypes/tests/test_collection.py\nindex 08c95f33..29c89225 100644\n--- a/plone/app/contenttypes/tests/test_collection.py\n+++ b/plone/app/contenttypes/tests/test_collection.py\n@@ -112,7 +112,7 @@ def test_schema(self):\n         fti = queryUtility(IDexterityFTI,\n                            name='Collection')\n         schema = fti.lookupSchema()\n-        self.assertEqual(schema.getName(), 'plone_0_Collection')\n+        self.assertTrue(schema.getName().endswith('_0_Collection'))\n \n     def test_fti(self):\n         fti = queryUtility(IDexterityFTI,\ndiff --git a/plone/app/contenttypes/tests/test_document.py b/plone/app/contenttypes/tests/test_document.py\nindex 2127da11..f18990e7 100644\n--- a/plone/app/contenttypes/tests/test_document.py\n+++ b/plone/app/contenttypes/tests/test_document.py\n@@ -32,7 +32,7 @@ def test_schema(self):\n             IDexterityFTI,\n             name='Document')\n         schema = fti.lookupSchema()\n-        self.assertEqual(schema.getName(), 'plone_0_Document')\n+        self.assertTrue(schema.getName().endswith('_0_Document'))\n \n     def test_fti(self):\n         fti = queryUtility(\ndiff --git a/plone/app/contenttypes/tests/test_event.py b/plone/app/contenttypes/tests/test_event.py\nindex 39a499e1..b7df78cb 100644\n--- a/plone/app/contenttypes/tests/test_event.py\n+++ b/plone/app/contenttypes/tests/test_event.py\n@@ -33,7 +33,7 @@ def test_schema(self):\n             IDexterityFTI,\n             name='Event')\n         schema = fti.lookupSchema()\n-        self.assertEqual(schema.getName(), 'plone_0_Event')\n+        self.assertTrue(schema.getName().endswith('_0_Event'))\n \n     def test_fti(self):\n         fti = queryUtility(\ndiff --git a/plone/app/contenttypes/tests/test_file.py b/plone/app/contenttypes/tests/test_file.py\nindex 27c72fb7..26a70beb 100644\n--- a/plone/app/contenttypes/tests/test_file.py\n+++ b/plone/app/contenttypes/tests/test_file.py\n@@ -36,7 +36,7 @@ def test_schema(self):\n             IDexterityFTI,\n             name='File')\n         schema = fti.lookupSchema()\n-        self.assertEqual(schema.getName(), 'plone_0_File')\n+        self.assertTrue(schema.getName().endswith('_0_File'))\n \n     def test_fti(self):\n         fti = queryUtility(\ndiff --git a/plone/app/contenttypes/tests/test_folder.py b/plone/app/contenttypes/tests/test_folder.py\nindex 9c3ea64f..e8bd54df 100644\n--- a/plone/app/contenttypes/tests/test_folder.py\n+++ b/plone/app/contenttypes/tests/test_folder.py\n@@ -31,7 +31,7 @@ def test_schema(self):\n             IDexterityFTI,\n             name='Folder')\n         schema = fti.lookupSchema()\n-        self.assertEqual(schema.getName(), 'plone_0_Folder')\n+        self.assertTrue(schema.getName().endswith('_0_Folder'))\n \n     def test_fti(self):\n         fti = queryUtility(\ndiff --git a/plone/app/contenttypes/tests/test_image.py b/plone/app/contenttypes/tests/test_image.py\nindex 52bbdf08..5b2ddbd4 100644\n--- a/plone/app/contenttypes/tests/test_image.py\n+++ b/plone/app/contenttypes/tests/test_image.py\n@@ -45,7 +45,7 @@ def test_schema(self):\n             IDexterityFTI,\n             name='Image')\n         schema = fti.lookupSchema()\n-        self.assertEqual(schema.getName(), 'plone_0_Image')\n+        self.assertTrue(schema.getName().endswith('_0_Image'))\n \n     def test_fti(self):\n         fti = queryUtility(\ndiff --git a/plone/app/contenttypes/tests/test_link.py b/plone/app/contenttypes/tests/test_link.py\nindex 1f956c9d..a9a82497 100644\n--- a/plone/app/contenttypes/tests/test_link.py\n+++ b/plone/app/contenttypes/tests/test_link.py\n@@ -41,7 +41,7 @@ def test_schema(self):\n             IDexterityFTI,\n             name='Link')\n         schema = fti.lookupSchema()\n-        self.assertEqual(schema.getName(), 'plone_0_Link')\n+        self.assertTrue(schema.getName().endswith('_0_Link'))\n \n     def test_fti(self):\n         fti = queryUtility(\ndiff --git a/plone/app/contenttypes/tests/test_news_item.py b/plone/app/contenttypes/tests/test_news_item.py\nindex 3e140e16..41c89a63 100644\n--- a/plone/app/contenttypes/tests/test_news_item.py\n+++ b/plone/app/contenttypes/tests/test_news_item.py\n@@ -40,7 +40,7 @@ def test_schema(self):\n             IDexterityFTI,\n             name='News Item')\n         schema = fti.lookupSchema()\n-        self.assertEqual(schema.getName(), 'plone_0_News_1_Item')\n+        self.assertTrue(schema.getName().endswith('_0_News_1_Item'))\n \n     def test_fti(self):\n         fti = queryUtility(\ndiff --git a/setup.py b/setup.py\nindex c859aec6..6a7ecfcc 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -5,7 +5,7 @@\n import os\n \n \n-version = '2.2.1.dev0'\n+version = '2.2.2.dev0'\n \n \n def read(*rnames):\n"

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2020-12-12T18:14:53+01:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.app.contenttypes/commit/942c48cf1a6e75f7e14b385d7e637d69e75bc180

Fix robot tests.

Files changed:
M plone/app/contenttypes/tests/robot/test_collection_location_criterion.robot
M plone/app/contenttypes/tests/robot/test_collection_short_name_criterion.robot

b"diff --git a/plone/app/contenttypes/tests/robot/test_collection_location_criterion.robot b/plone/app/contenttypes/tests/robot/test_collection_location_criterion.robot\nindex 12054104..f3c52760 100644\n--- a/plone/app/contenttypes/tests/robot/test_collection_location_criterion.robot\n+++ b/plone/app/contenttypes/tests/robot/test_collection_location_criterion.robot\n@@ -76,6 +76,8 @@ I set the collection's relative location criterion to\n     I set the criteria operator in row 1 to the option 'Relative path'\n     I set the criteria value in row 1 to the text '${criterion}'\n \n+    Click Element  form.widgets.IDublinCore.title\n+    Sleep  1.5\n     Click Button  Save\n     Wait until page contains  Changes saved\n \n@@ -91,5 +93,7 @@ I set the collection's absolute location criterion to\n     I set the criteria operator in row 1 to the option 'Absolute path'\n     I set the criteria value in row 1 to the text '${criterion}'\n \n+    Click Element  form.widgets.IDublinCore.title\n+    Sleep  1.5\n     Click Button  Save\n     Wait until page contains  Changes saved\ndiff --git a/plone/app/contenttypes/tests/robot/test_collection_short_name_criterion.robot b/plone/app/contenttypes/tests/robot/test_collection_short_name_criterion.robot\nindex 6d435b8e..7067a574 100644\n--- a/plone/app/contenttypes/tests/robot/test_collection_short_name_criterion.robot\n+++ b/plone/app/contenttypes/tests/robot/test_collection_short_name_criterion.robot\n@@ -42,6 +42,7 @@ I set the collection short name (id) criterion to\n     I set the criteria operator in row 1 to the option 'Is'\n     I set the criteria value in row 1 to the text '${criterion}'\n \n-    Sleep  1\n+    Click Element  form.widgets.IDublinCore.title\n+    Sleep  1.5\n     Click Button  Save\n     Wait until page contains  Changes saved\n"

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2021-01-26T18:56:49+01:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.app.contenttypes/commit/8bfa7d957d4ed96a53a7171fc4fd53a82ba3ecd0

Merge remote-tracking branch 'origin/master' into dxcontainer-siteroot

Files changed:
A news/582.bugfix
A news/584.bugfix
M plone/app/contenttypes/migration/field_migrators.py
M plone/app/contenttypes/migration/migration.py

b'diff --git a/news/582.bugfix b/news/582.bugfix\nnew file mode 100644\nindex 00000000..8281b794\n--- /dev/null\n+++ b/news/582.bugfix\n@@ -0,0 +1,2 @@\n+Catch AttributeError for ``getNextPreviousEnabled`` during migration.\n+[maurits]\ndiff --git a/news/584.bugfix b/news/584.bugfix\nnew file mode 100644\nindex 00000000..45024b81\n--- /dev/null\n+++ b/news/584.bugfix\n@@ -0,0 +1,3 @@\n+migrate_datetimefield: do nothing when old value is None.\n+This fixes ``AttributeError: \'NoneType\' object has no attribute \'asdatetime\'``.\n+[maurits]\ndiff --git a/plone/app/contenttypes/migration/field_migrators.py b/plone/app/contenttypes/migration/field_migrators.py\nindex fad4c1dd..d4be41ab 100644\n--- a/plone/app/contenttypes/migration/field_migrators.py\n+++ b/plone/app/contenttypes/migration/field_migrators.py\n@@ -148,7 +148,7 @@ def migrate_filefield(src_obj, dst_obj, src_fieldname, dst_fieldname):\n def migrate_datetimefield(src_obj, dst_obj, src_fieldname, dst_fieldname):\n     """Migrate a datefield."""\n     old_value = src_obj.getField(src_fieldname).get(src_obj)\n-    if old_value == \'\':\n+    if old_value == \'\' or old_value is None:\n         return\n     if src_obj.getField(\'timezone\', None) is not None:\n         old_timezone = src_obj.getField(\'timezone\').get(src_obj)\ndiff --git a/plone/app/contenttypes/migration/migration.py b/plone/app/contenttypes/migration/migration.py\nindex f547d752..050c75bb 100644\n--- a/plone/app/contenttypes/migration/migration.py\n+++ b/plone/app/contenttypes/migration/migration.py\n@@ -188,9 +188,14 @@ def migrate_leadimage(self):\n         migrate_leadimage(self.old, self.new)\n \n     def migrate_nextprevious(self):\n-        if self.old.getNextPreviousEnabled():\n-            if INextPreviousToggle.providedBy(self.new):\n-                self.new.nextPreviousEnabled = True\n+        try:\n+            enabled = self.old.getNextPreviousEnabled()\n+        except AttributeError:\n+            # The old type may not have this.\n+            # https://github.com/plone/plone.app.contenttypes/issues/582\n+            return\n+        if enabled and INextPreviousToggle.providedBy(self.new):\n+            self.new.nextPreviousEnabled = True\n \n     def last_migrate_comments(self):\n         """Migrate the plone.app.discussion comments.\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2021-02-10T09:56:28+01:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/c4d837db2396cf6f37a5168195bfd7fb1e2890a6

Try to not change an already configured site

Files changed:
M plone/app/contenttypes/setuphandlers.py

b"diff --git a/plone/app/contenttypes/setuphandlers.py b/plone/app/contenttypes/setuphandlers.py\nindex 773c8d2a..3b6f3a2f 100644\n--- a/plone/app/contenttypes/setuphandlers.py\n+++ b/plone/app/contenttypes/setuphandlers.py\n@@ -153,18 +153,21 @@ def _setup_constrains(container, allowed_types):\n \n \n def create_frontpage(portal, target_language):\n-    if True:\n-        title = _translate(\n+    changed = False\n+    if not portal.title:\n+        portal.title = _translate(\n             u'front-title',\n             target_language,\n             u'Welcome to Plone'\n         )\n-        description = _translate(\n+        changed = True\n+    if not portal.description:\n+        portal.description = _translate(\n             u'front-description', target_language,\n             u'Congratulations! You have successfully installed Plone.'\n         )\n-        portal.title= title\n-        portal.description = description\n+        changed = True\n+    if not portal.text:\n         front_text = None\n         if target_language != 'en':\n             util = queryUtility(ITranslationDomain, 'plonefrontpage')\n@@ -188,6 +191,8 @@ def create_frontpage(portal, target_language):\n             'text/html',\n             'text/x-html-safe'\n         )\n+        changed = True\n+    if changed:\n         portal.reindexObject()\n \n \n"

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2021-02-10T09:56:51+01:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/6707890b082cd2d8115a2e866b84777540e419ca

Merge remote-tracking branch 'origin/master' into dxcontainer-siteroot

Files changed:
A news/510.bugfix
M plone/app/contenttypes/migration/utils.py

b'diff --git a/news/510.bugfix b/news/510.bugfix\nnew file mode 100644\nindex 00000000..c987a4b1\n--- /dev/null\n+++ b/news/510.bugfix\n@@ -0,0 +1,9 @@\n+Various fixes for restoring references:\n+\n+- Migrate ``relatesTo`` AT relation to ``relatedItems`` DX relation.\n+- In DX check the schema to see if relation field is list or item.\n+  Taken over from `collective.relationhelpers <https://github.com/collective/collective.relationhelpers/>`_.\n+- ``restore_references``: accept ``relationship_fieldname_mapping`` argument.\n+  This must be a dictionary with a relationship name as key and fieldname as value, instead of always using ``relatedItems`` as fieldname.\n+\n+[maurits]\ndiff --git a/plone/app/contenttypes/migration/utils.py b/plone/app/contenttypes/migration/utils.py\nindex 1689eec4..16cd92a3 100644\n--- a/plone/app/contenttypes/migration/utils.py\n+++ b/plone/app/contenttypes/migration/utils.py\n@@ -15,6 +15,7 @@\n from plone.app.linkintegrity.handlers import modifiedDexterity\n from plone.app.linkintegrity.handlers import referencedRelationship\n from plone.app.uuid.utils import uuidToObject\n+from plone.dexterity.utils import iterSchemataForType\n from plone.contentrules.engine.interfaces import IRuleAssignmentManager\n from plone.contentrules.engine.interfaces import IRuleStorage\n from plone.dexterity.interfaces import IDexterityContent\n@@ -34,6 +35,9 @@\n from Products.GenericSetup.context import DirectoryImportContext\n from Products.GenericSetup.utils import importObjects\n from z3c.relationfield import RelationValue\n+from z3c.relationfield.schema import Relation\n+from z3c.relationfield.schema import RelationChoice\n+from z3c.relationfield.schema import RelationList\n from zc.relation.interfaces import ICatalog\n from zExceptions import NotFound\n from zope.annotation.interfaces import IAnnotations\n@@ -331,24 +335,49 @@ def get_all_references(context):\n     return results\n \n \n-def restore_references(context):\n+def restore_references(context, relationship_fieldname_mapping=None):\n     """Recreate all references stored in an annotation on the context.\n \n     Iterate over the stored references and restore them all according to\n     the content-types framework.\n+\n+    Accepts an optional relationship_fieldname_mapping argument.\n+    This must be a dictionary with a relationship name as key and fieldname as value.\n+    For example:\n+    relationship_fieldname_mapping =  {\n+        \'advisory_contact\': \'contact\',\n+        \'study_contact\': \'contact\',\n+    }\n+    In this case, old Archetypes content types Advisory and Study both had a\n+    reference field \'contact\' to a content type Contact.\n+    This relationship was stored under different names for the two contenttypes.\n+    After migration to Dexterity, the above mapping makes sure the relation is still\n+    stored on the \'contact\' field in both cases.\n+    The attribute_name of the RelationValue will be the same as this fieldname,\n+    which is what happens by default when setting relations.\n+\n+    By default we will also map the \'relatesTo\' relation to the \'relatedItems\' field.\n+    This is needed for ATContentTypes.\n     """\n+    if relationship_fieldname_mapping is None:\n+        relationship_fieldname_mapping = {}\n+    if \'relatesTo\' not in relationship_fieldname_mapping:\n+        # ATContentTypes used this relation.\n+        relationship_fieldname_mapping[\'relatesTo\'] = \'relatedItems\'\n     key = \'ALL_REFERENCES\'\n     all_references = IAnnotations(context)[key]\n     logger.info(\'Restoring {0} relations.\'.format(\n         len(all_references))\n     )\n-    for index, ref in enumerate(all_references):\n+    for index, ref in enumerate(all_references, 1):\n         source_obj = uuidToObject(ref[\'from_uuid\'])\n         target_obj = uuidToObject(ref[\'to_uuid\'])\n         relationship = ref[\'relationship\']\n         if source_obj and target_obj:\n             relationship = ref[\'relationship\']\n-            link_items(context, source_obj, target_obj, relationship)\n+            # By default use the relationship as fieldname.  Fall back to the relationship.\n+            fieldname = relationship_fieldname_mapping.get(relationship, relationship)\n+            link_items(context, source_obj, target_obj, relationship, fieldname)\n         else:\n             logger.warn(\n                 \'Could not restore reference from uid \'\n@@ -376,6 +405,10 @@ def link_items(  # noqa\n     This uses the field \'relatedItems\' and works for Archetypes and Dexterity.\n     By passing a fieldname and a relationship it can be used to create\n     arbitrary relations.\n+\n+    Note: for the relatedItems field, Products.ATContentTypes uses \'relatesTo\'\n+    and plone.app.contenttypes uses \'relatedItems\'.\n+    We switch between these two, based on the source object.\n     """\n     # relations from AT to DX and from DX to AT are only possible through\n     # the referenceable-behavior:\n@@ -387,19 +420,6 @@ def link_items(  # noqa\n         # Thou shalt not relate to yourself.\n         return\n \n-    # if fieldname != \'relatedItems\':\n-        # \'relatedItems\' is the default field for AT and DX\n-        # See plone.app.relationfield.behavior.IRelatedItems for DX and\n-        # Products.ATContentTypes.content.schemata.relatedItemsField for AT\n-        # They always use these relationships:\n-        # \'relatesTo\' (Archetpyes) and \'relatedItems\' (Dexterity)\n-        # Maybe be we should handle custom relations somewhat different?\n-\n-    if relationship in [\'relatesTo\', \'relatedItems\']:\n-        # These are the two default-relationships used by AT and DX\n-        # for the field \'relatedItems\' respectively.\n-        pass\n-\n     if IDexterityContent.providedBy(source_obj):\n         source_type = \'DX\'\n     else:\n@@ -411,7 +431,7 @@ def link_items(  # noqa\n         target_type = \'AT\'\n \n     if relationship == referencedRelationship:\n-        # \'relatesTo\' is the relationship for linkintegrity-relations.\n+        # \'isReferencing\' is the relationship for linkintegrity-relations.\n         # Linkintegrity-relations should automatically be (re)created by\n         # plone.app.linkintegrity.handlers.modifiedDexterity or\n         # plone.app.linkintegrity.handlers.modifiedArchetype\n@@ -425,6 +445,8 @@ def link_items(  # noqa\n         return\n \n     if source_type == \'AT\':\n+        if relationship == \'relatedItems\':\n+            relationship = \'relatesTo\'\n         # If there is any Archetypes-content there is also the\n         # reference_catalog. For a site without AT content this\n         # might not be there at all.\n@@ -480,6 +502,8 @@ def link_items(  # noqa\n         return\n \n     if source_type is \'DX\':\n+        if relationship == \'relatesTo\':\n+            relationship = \'relatedItems\'\n         if target_type is \'AT\' and not is_referenceable(source_obj):\n             logger.info(drop_msg % (\n                 source_obj.absolute_url(), target_obj.absolute_url()))\n@@ -491,17 +515,39 @@ def link_items(  # noqa\n \n         intids = getUtility(IIntIds)\n         to_id = intids.getId(target_obj)\n-        existing_dx_relations = getattr(source_obj, fieldname, [])\n-        # purge broken relations\n-        existing_dx_relations = [\n-            i for i in existing_dx_relations if i.to_id is not None]\n-\n-        if to_id not in [i.to_id for i in existing_dx_relations]:\n-            existing_dx_relations.append(RelationValue(to_id))\n-            setattr(source_obj, fieldname, existing_dx_relations)\n+        # Before we set the fieldname attribute on the source object,\n+        # we need to know if this should be a list or a single item.\n+        # Might be None at the moment.\n+        # We check the field definition.\n+        fti = getUtility(IDexterityFTI, name=source_obj.portal_type)\n+        field = None\n+        for schema in iterSchemataForType(fti):\n+            field = schema.get(fieldname, None)\n+            if field is not None:\n+                break\n+        if isinstance(field, RelationList):\n+            existing_relations = getattr(source_obj, fieldname, [])\n+            if existing_relations is None:\n+                existing_relations = []\n+            else:\n+                # purge broken relations\n+                existing_relations = [\n+                    i for i in existing_relations if i.to_id is not None]\n+            if to_id not in [i.to_id for i in existing_relations]:\n+                existing_relations.append(RelationValue(to_id))\n+                setattr(source_obj, fieldname, existing_relations)\n+                modified(source_obj)\n+                return\n+            return\n+        elif isinstance(field, (Relation, RelationChoice)):\n+            setattr(source_obj, fieldname, RelationValue(to_id))\n             modified(source_obj)\n             return\n \n+        # We should never end up here!\n+        logger.warning(\'Ignoring unknown fieldname %s when restoring relation %s from %s to %s\',\n+            fieldname, relationship, source_obj.absolute_url(), target_obj.absolute_url())\n+\n \n def is_referenceable(obj):\n     """Find out if this object (AT or DX) is referenceable.\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2021-02-10T10:46:44+01:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/c4cac77014ff6c247f327836daf65c362b21cd3c

Modify the plone site when there is no text

Files changed:
M plone/app/contenttypes/setuphandlers.py

b"diff --git a/plone/app/contenttypes/setuphandlers.py b/plone/app/contenttypes/setuphandlers.py\nindex 3b6f3a2f..a2261918 100644\n--- a/plone/app/contenttypes/setuphandlers.py\n+++ b/plone/app/contenttypes/setuphandlers.py\n@@ -153,47 +153,42 @@ def _setup_constrains(container, allowed_types):\n \n \n def create_frontpage(portal, target_language):\n-    changed = False\n-    if not portal.title:\n-        portal.title = _translate(\n-            u'front-title',\n-            target_language,\n-            u'Welcome to Plone'\n-        )\n-        changed = True\n-    if not portal.description:\n-        portal.description = _translate(\n-            u'front-description', target_language,\n-            u'Congratulations! You have successfully installed Plone.'\n-        )\n-        changed = True\n-    if not portal.text:\n-        front_text = None\n-        if target_language != 'en':\n-            util = queryUtility(ITranslationDomain, 'plonefrontpage')\n-            if util is not None:\n-                translated_text = util.translate(\n-                    u'front-text',\n-                    target_language=target_language\n-                )\n-                if translated_text != u'front-text':\n-                    front_text = translated_text\n-        request = getattr(portal, 'REQUEST', None)\n-        if front_text is None and request is not None:\n-            view = queryMultiAdapter(\n-                (portal, request),\n-                name='plone-frontpage-setup'\n+    if portal.text:\n+        # Do not overwrite existing content\n+        return\n+    portal.title = _translate(\n+        u'front-title',\n+        target_language,\n+        u'Welcome to Plone'\n+    )\n+    portal.description = _translate(\n+        u'front-description', target_language,\n+        u'Congratulations! You have successfully installed Plone.'\n+    )\n+    front_text = None\n+    if target_language != 'en':\n+        util = queryUtility(ITranslationDomain, 'plonefrontpage')\n+        if util is not None:\n+            translated_text = util.translate(\n+                u'front-text',\n+                target_language=target_language\n             )\n-            if view is not None:\n-                front_text = bodyfinder(view.index()).strip()\n-        portal.text = RichTextValue(\n-            front_text,\n-            'text/html',\n-            'text/x-html-safe'\n+            if translated_text != u'front-text':\n+                front_text = translated_text\n+    request = getattr(portal, 'REQUEST', None)\n+    if front_text is None and request is not None:\n+        view = queryMultiAdapter(\n+            (portal, request),\n+            name='plone-frontpage-setup'\n         )\n-        changed = True\n-    if changed:\n-        portal.reindexObject()\n+        if view is not None:\n+            front_text = bodyfinder(view.index()).strip()\n+    portal.text = RichTextValue(\n+        front_text,\n+        'text/html',\n+        'text/x-html-safe'\n+    )\n+    portal.reindexObject()\n \n \n def create_news_topic(portal, target_language):\n"

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2021-02-10T11:06:58+01:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/6fcbf966fcfd0a0f730557386601ea87743d2bf7

Restore some tests

Files changed:
M plone/app/contenttypes/tests/robot/test_collection_location_criterion.robot
M plone/app/contenttypes/tests/robot/test_collection_short_name_criterion.robot
M plone/app/contenttypes/tests/test_content_profile.py

b'diff --git a/plone/app/contenttypes/tests/robot/test_collection_location_criterion.robot b/plone/app/contenttypes/tests/robot/test_collection_location_criterion.robot\nindex f3c52760..12054104 100644\n--- a/plone/app/contenttypes/tests/robot/test_collection_location_criterion.robot\n+++ b/plone/app/contenttypes/tests/robot/test_collection_location_criterion.robot\n@@ -76,8 +76,6 @@ I set the collection\'s relative location criterion to\n     I set the criteria operator in row 1 to the option \'Relative path\'\n     I set the criteria value in row 1 to the text \'${criterion}\'\n \n-    Click Element  form.widgets.IDublinCore.title\n-    Sleep  1.5\n     Click Button  Save\n     Wait until page contains  Changes saved\n \n@@ -93,7 +91,5 @@ I set the collection\'s absolute location criterion to\n     I set the criteria operator in row 1 to the option \'Absolute path\'\n     I set the criteria value in row 1 to the text \'${criterion}\'\n \n-    Click Element  form.widgets.IDublinCore.title\n-    Sleep  1.5\n     Click Button  Save\n     Wait until page contains  Changes saved\ndiff --git a/plone/app/contenttypes/tests/robot/test_collection_short_name_criterion.robot b/plone/app/contenttypes/tests/robot/test_collection_short_name_criterion.robot\nindex 7067a574..6d435b8e 100644\n--- a/plone/app/contenttypes/tests/robot/test_collection_short_name_criterion.robot\n+++ b/plone/app/contenttypes/tests/robot/test_collection_short_name_criterion.robot\n@@ -42,7 +42,6 @@ I set the collection short name (id) criterion to\n     I set the criteria operator in row 1 to the option \'Is\'\n     I set the criteria value in row 1 to the text \'${criterion}\'\n \n-    Click Element  form.widgets.IDublinCore.title\n-    Sleep  1.5\n+    Sleep  1\n     Click Button  Save\n     Wait until page contains  Changes saved\ndiff --git a/plone/app/contenttypes/tests/test_content_profile.py b/plone/app/contenttypes/tests/test_content_profile.py\nindex 1a772255..b2f1c471 100644\n--- a/plone/app/contenttypes/tests/test_content_profile.py\n+++ b/plone/app/contenttypes/tests/test_content_profile.py\n@@ -45,6 +45,18 @@ def setUp(self):\n         self.portal = self.layer[\'portal\']\n         self.portal_workflow = getToolByName(self.portal, \'portal_workflow\')\n \n+    # #################### #\n+    #   front-page tests   #\n+    # #################### #\n+\n+    def test_homepage(self):\n+        self.assertEqual(self.portal.title, "Welcome to Plone")\n+        self.assertEqual(\n+            self.portal.description,\n+            "Congratulations! You have successfully installed Plone."\n+        )\n+        self.assertIn("Welcome!", self.portal.text.raw)\n+\n     # ################# #\n     #   Members tests   #\n     # ################# #\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2021-02-11T16:16:00+01:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/b3bf8f1402d9f693e57613a00a3e228c171a57ae

Restore robot test

Files changed:
M plone/app/contenttypes/tests/robot/keywords.txt

b"diff --git a/plone/app/contenttypes/tests/robot/keywords.txt b/plone/app/contenttypes/tests/robot/keywords.txt\nindex e6d34652..f9323934 100644\n--- a/plone/app/contenttypes/tests/robot/keywords.txt\n+++ b/plone/app/contenttypes/tests/robot/keywords.txt\n@@ -127,7 +127,7 @@ I set the criteria ${type} in row ${number} to the options '${label}'\n \n I set the criteria ${type} in row ${number} to the text '${label}'\n   ${criteria_row} =  Convert to String  .querystring-criteria-wrapper:nth-child(${number})\n-  Input text  css=${criteria_row} .querystring-criteria-value input  ${label.strip()}\n+  Input text  css=${criteria_row} .querystring-criteria-value input  ${label}\\t\n   [Documentation]  Shift the focus so the input sticks, and wait a bit\n   Sleep  1.5\n   Set Focus To Element  css=.querystring-sortreverse\n"

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2021-02-11T16:27:31+01:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/6b40140617675a7545afc69594de29d65ad702ad

Move the changelog entry to the news folder

Files changed:
A news/475.breaking
M CHANGES.rst

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex ed56abcb..029e2d64 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -288,11 +288,6 @@ Breaking changes:\n \n   [iham]\n \n-- Plone Site is now a DX container. This means that the front-page object no\n-  longer exists.\n-  Refs PLIP 2454.\n-  [jaroel]\n-\n New features:\n \n - By using correct (Marker-)Interfaces for the ILeadImage and IRichText,\ndiff --git a/news/475.breaking b/news/475.breaking\nnew file mode 100644\nindex 00000000..d5345a2d\n--- /dev/null\n+++ b/news/475.breaking\n@@ -0,0 +1,4 @@\n+Plone Site is now a DX container. This means that the front-page object no\n+longer exists.\n+Refs PLIP 2454.\n+[jaroel]\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2021-02-13T13:47:05+01:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/635cfaa6c9f0f0d37807cf584de455ee643b21b6

Merge remote-tracking branch 'origin/master' into dxcontainer-siteroot

Files changed:
A news/579.bugfix
M plone/app/contenttypes/behaviors/leadimage.pt
M plone/app/contenttypes/browser/collection.py
M plone/app/contenttypes/browser/configure.zcml
M plone/app/contenttypes/browser/file.py
M plone/app/contenttypes/browser/templates/document.pt
M plone/app/contenttypes/browser/templates/file.pt
M plone/app/contenttypes/browser/templates/full_view.pt
M plone/app/contenttypes/browser/templates/full_view_item.pt
M plone/app/contenttypes/browser/templates/image.pt
M plone/app/contenttypes/browser/templates/image_view_fullscreen.pt
M plone/app/contenttypes/browser/templates/link.pt
M plone/app/contenttypes/browser/templates/listing.pt
M plone/app/contenttypes/browser/templates/listing_album.pt
M plone/app/contenttypes/browser/templates/listing_summary.pt
M plone/app/contenttypes/browser/templates/listing_tabular.pt
M plone/app/contenttypes/browser/templates/newsitem.pt
M plone/app/contenttypes/migration/custom_migration.pt
M plone/app/contenttypes/profiles/default/types/Collection.xml
M plone/app/contenttypes/profiles/default/types/Document.xml
M plone/app/contenttypes/profiles/default/types/Event.xml
M plone/app/contenttypes/profiles/default/types/File.xml
M plone/app/contenttypes/profiles/default/types/Folder.xml
M plone/app/contenttypes/profiles/default/types/Image.xml
M plone/app/contenttypes/profiles/default/types/Link.xml
M plone/app/contenttypes/profiles/default/types/News_Item.xml
M plone/app/contenttypes/profiles/default/types/Plone_Site.xml
M plone/app/contenttypes/tests/robot/keywords.txt
M plone/app/contenttypes/tests/robot/test_folderlisting.robot
M plone/app/contenttypes/tests/test_behaviors_collection.py
M plone/app/contenttypes/tests/test_behaviors_leadimage.py
M plone/app/contenttypes/tests/test_file.py
M setup.py
D plone/app/contenttypes/browser/templates/archetypes_warning_viewlet.pt
D plone/app/contenttypes/browser/viewlets.py

b'diff --git a/news/579.bugfix b/news/579.bugfix\nnew file mode 100644\nindex 00000000..b0383964\n--- /dev/null\n+++ b/news/579.bugfix\n@@ -0,0 +1,2 @@\n+Use python statements in templates.\n+[pbauer, mliebischer, ladplone]\n\\ No newline at end of file\ndiff --git a/plone/app/contenttypes/behaviors/leadimage.pt b/plone/app/contenttypes/behaviors/leadimage.pt\nindex 38d5a633..4ce5494c 100644\n--- a/plone/app/contenttypes/behaviors/leadimage.pt\n+++ b/plone/app/contenttypes/behaviors/leadimage.pt\n@@ -1,18 +1,10 @@\n-<div class="leadImage"\n-     tal:condition="view/available"\n-     tal:define="scale_func context/@@images;\n-                 scaled_image python: getattr(context.aq_explicit, \'image\', False) and scale_func.scale(\'image\', scale=\'mini\')">\n+<section id="section-leadimage" tal:condition="python: view.available" tal:define="scale_func context/@@images; scaled_image python: getattr(context.aq_explicit, \'image\', False) and scale_func.scale(\'image\', scale=\'large\')">\n \n   <figure class="newsImageContainer" tal:condition="python: scaled_image">\n-    <a tal:define="here_url context/@@plone_context_state/object_url;\n-                   large_image python: scale_func.scale(\'image\', scale=\'large\');"\n-        class="pat-plone-modal" data-pat-plone-modal="image: true"\n-        tal:attributes="href large_image/url; data-modal-srcset large_image/srcset_attribute">\n-      <img tal:replace="structure python: scaled_image.tag(css_class=\'newsImage\')" />\n-      <figcaption tal:condition="context/image_caption|nothing"\n-          tal:content="context/image_caption">\n+      <img tal:replace="structure python: scaled_image.tag(css_class=\'figure-img img-fluid\')" />\n+      <figcaption class="figure-caption" tal:condition="python: getattr(context, \'image_caption\', None)" tal:content="python: context.image_caption">\n+        Image caption\n       </figcaption>\n-    </a>\n   </figure>\n \n-</div>\n+</section>\ndiff --git a/plone/app/contenttypes/browser/collection.py b/plone/app/contenttypes/browser/collection.py\nindex 09559831..e75252c2 100644\n--- a/plone/app/contenttypes/browser/collection.py\n+++ b/plone/app/contenttypes/browser/collection.py\n@@ -86,6 +86,7 @@ def tabular_fields(self):\n         fields = [field[0] for field in fields]\n         return fields\n \n+    @property\n     def no_items_message(self):\n         return _(\n             \'description_no_results_found\',\ndiff --git a/plone/app/contenttypes/browser/configure.zcml b/plone/app/contenttypes/browser/configure.zcml\nindex bcde0135..519254d4 100644\n--- a/plone/app/contenttypes/browser/configure.zcml\n+++ b/plone/app/contenttypes/browser/configure.zcml\n@@ -206,18 +206,6 @@\n       permission="zope2.View"\n       />\n \n-  <configure zcml:condition="installed Products.Archetypes">\n-    <browser:viewlet\n-      name="archetypes_warning_viewlet"\n-      for="Products.Archetypes.interfaces.base.IBaseObject"\n-      manager="plone.app.layout.viewlets.interfaces.IAboveContent"\n-      class=".viewlets.ATWarningViewlet"\n-      template="templates/archetypes_warning_viewlet.pt"\n-      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"\n-      permission="cmf.ModifyPortalContent"\n-      />\n-  </configure>\n-\n   <!-- BBB OlD VIEW NAME REGISTRATIONS -->\n   <browser:pages\n       for="plone.dexterity.interfaces.IDexterityContainer"\ndiff --git a/plone/app/contenttypes/browser/file.py b/plone/app/contenttypes/browser/file.py\nindex ce09ea38..d32b859c 100644\n--- a/plone/app/contenttypes/browser/file.py\n+++ b/plone/app/contenttypes/browser/file.py\n@@ -2,6 +2,7 @@\n from plone.app.contenttypes.browser.utils import Utils\n from Products.CMFPlone.utils import human_readable_size\n \n+import re\n \n class FileView(Utils):\n \n@@ -18,3 +19,19 @@ def get_mimetype_icon(self):\n \n     def human_readable_size(self):\n         return human_readable_size(self.context.file.getSize())\n+\n+    def icon(self):\n+        if "text" in self.context.file.contentType:\n+            return "contenttype-text"\n+        if "html" in self.context.file.contentType:\n+            return "contenttype-text"\n+        if re.search(r"(archive|zip|compressed)", self.context.file.contentType):\n+            return "contenttype-archive"\n+        if "audio" in self.context.file.contentType:\n+            return "contenttype-audio"\n+        if "video" in self.context.file.contentType:\n+            return "contenttype-video"\n+        if "pdf" in self.context.file.contentType:\n+            return "contenttype-pdf"\n+        else:\n+            return "contenttype-file"\ndiff --git a/plone/app/contenttypes/browser/templates/archetypes_warning_viewlet.pt b/plone/app/contenttypes/browser/templates/archetypes_warning_viewlet.pt\ndeleted file mode 100644\nindex 789a05de..00000000\n--- a/plone/app/contenttypes/browser/templates/archetypes_warning_viewlet.pt\n+++ /dev/null\n@@ -1,19 +0,0 @@\n-<tal:available condition="view/available">\n-  <div class="portalMessage alert-box secondary warning" i18n:domain="plone">\n-    <strong i18n:translate="">Warning</strong>\n-    <tal:manager tal:condition="not:view/can_migrate">\n-      <span i18n:translate="">You can\'t edit this content. Ask your administrator to migrate to Dexterity!</span>\n-    </tal:manager>\n-    <tal:manager tal:condition="view/can_migrate">\n-      <span i18n:translate="">You can\'t edit this content unless you\n-        <a href="#" i18n:name="migrate" i18n:translate=""\n-          tal:attributes="href string:${context/plone_portal_state/portal_url}/@@atct_migrator">\n-          migrate the default content-types to Dexterity.\n-        </a>\n-      </span>\n-    </tal:manager>\n-  </div>\n-  <style type="text/css">\n-    #contentview-edit {display: None;}\n-  </style>\n-</tal:available>\ndiff --git a/plone/app/contenttypes/browser/templates/document.pt b/plone/app/contenttypes/browser/templates/document.pt\nindex efa7decc..92b450a1 100644\n--- a/plone/app/contenttypes/browser/templates/document.pt\n+++ b/plone/app/contenttypes/browser/templates/document.pt\n@@ -3,17 +3,20 @@\n     xmlns:metal="http://xml.zope.org/namespaces/metal"\n     xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n     lang="en"\n-    metal:use-macro="context/main_template/macros/master"\n+    metal:use-macro="context/@@main_template/macros/master"\n     i18n:domain="plone">\n <body>\n \n <metal:content-core fill-slot="content-core">\n <metal:content-core define-macro="content-core"\n-                    tal:define="toc context/table_of_contents|nothing;">\n-  <div id="parent-fieldname-text"\n-      tal:condition="context/text | nothing"\n-      tal:content="structure python:context.text.output_relative_to(view.context)"\n-      tal:attributes="class python: toc and \'pat-autotoc\' or \'\'" />\n+                    tal:define="toc python:  getattr(context, \'table_of_contents\', False);">\n+\n+  <section id="section-text">\n+    <div id="parent-fieldname-text" tal:condition="context/text" tal:content="structure python:context.text.output_relative_to(view.context)" tal:attributes="class python: toc and \'pat-autotoc\' or \'\'">\n+      Text\n+    </div>\n+  </section>\n+\n </metal:content-core>\n </metal:content-core>\n \ndiff --git a/plone/app/contenttypes/browser/templates/file.pt b/plone/app/contenttypes/browser/templates/file.pt\nindex 25946fe4..44418f89 100644\n--- a/plone/app/contenttypes/browser/templates/file.pt\n+++ b/plone/app/contenttypes/browser/templates/file.pt\n@@ -9,29 +9,42 @@\n \n <metal:content-core fill-slot="content-core">\n <metal:block define-macro="content-core"\n-    tal:define="content_type context/file/contentType|nothing;\n-                download_url string:${context/absolute_url}/@@download/file/${context/file/filename}">\n-  <p>\n-    <a tal:attributes="href download_url">\n-      <img tal:attributes="src view/get_mimetype_icon;\n-                           alt content_type;" border="0" />\n-      <tal:name tal:content="context/file/filename" >Filename</tal:name>\n-    </a>\n-    <span class="discreet">&mdash; <span tal:replace="view/human_readable_size" /></span>\n-  </p>\n+             tal:define="content_type python: context.file.contentType;\n+                         filename python: context.file.filename;\n+                         mimetype_icon python: \'mimetype-\' + content_type;\n+                         download_url python: \'{}/@@download/file/{}\'.format(context.absolute_url(), filename)">\n \n-  <video tal:condition="view/is_videotype" controls="controls">\n-    <source tal:attributes="src download_url; type content_type"></source>\n-  </video>\n+  <section id="section-details" class="mb-5">\n+    <tal:icon tal:replace="structure python:icons.tag(mimetype_icon)" />\n+    <a class="" href="${python:download_url}" tal:content="python: filename">Filename</a>\n+    <small class="meta-type text-muted">\xe2\x80\x93 <span i18n:translate="image_kind_label" tal:omit-tag="">Type</span>: <span tal:replace="python: content_type">image/jpeg</span></small>\n+    <small class="meta-size text-muted">\xe2\x80\x93 <span i18n:translate="image_size_label" tal:omit-tag="">Size</span>: <span tal:define="size python: context.file.getSize()" tal:content="python: size">1000</span> kB</small>\n+  </section>\n \n-  <audio tal:condition="view/is_audiotype" controls="controls">\n-    <source tal:attributes="src download_url; type content_type"></source>\n-  </audio>\n+  <section id="section-video" tal:condition="python: view.is_videotype()">\n+    <h2 i18n:translate="heading_file_video">Video</h2>\n+    <video class="w-100" controls="controls">\n+      <source src="${python:download_url}" type="${python:content_type}"></source>\n+      <tal:translation i18n:translate="embedded_video_not_supported">Sorry, your browser doesn\'t support embedded videos.</tal:translation>\n+    </video>\n+  </section>\n \n-  <div tal:condition="python: content_type.startswith(\'text\')">\n+  <section id="section-audio" tal:condition="python: view.is_audiotype()">\n+    <h2 i18n:translate="heading_file_audio">Audio</h2>\n+    <audio class="w-100" controls="controls">\n+      <source tal:attributes="src python: download_url; type python: content_type"></source>\n+      <tal:translation i18n:translate="embedded_audio_not_supported">Sorry, your browser doesn\'t support embedded audio.</tal:translation>\n+    </audio>\n+  </section>\n+\n+  <section id="section-text" tal:condition="python: content_type.startswith(\'text\')">\n     <h2 i18n:translate="heading_file_contents">File contents</h2>\n-    <pre tal:content="context/file/data|nothing" />\n-  </div>\n+    <div class="card">\n+      <div class="card-body">\n+        <pre tal:content="python: getattr(context.file, \'data\', None)" />\n+      </div>\n+    </div>\n+  </section>\n \n </metal:block>\n </metal:content-core>\ndiff --git a/plone/app/contenttypes/browser/templates/full_view.pt b/plone/app/contenttypes/browser/templates/full_view.pt\nindex 85191c0c..39f6570b 100644\n--- a/plone/app/contenttypes/browser/templates/full_view.pt\n+++ b/plone/app/contenttypes/browser/templates/full_view.pt\n@@ -8,18 +8,22 @@\n <body>\n \n <metal:content-core fill-slot="content-core">\n-<metal:block define-macro="content-core"\n-             tal:define="uuid context/@@uuid |\xc2\xa0nothing">\n+<metal:block define-macro="content-core" tal:define="uuid context/@@uuid |\xc2\xa0nothing">\n+\n   <metal:listing use-macro="context/@@listing_view/macros/content-core">\n-    <!-- we don\'t want the dl -->\n     <metal:entries fill-slot="entries">\n+\n       <metal:block use-macro="context/@@listing_view/macros/entries">\n+\n         <metal:entry fill-slot="entry" tal:condition="python: item.UID != uuid">\n           <div tal:define="obj item/getObject;" tal:replace="structure obj/@@full_view_item | nothing" />\n         </metal:entry>\n+\n       </metal:block>\n+\n     </metal:entries>\n   </metal:listing>\n+\n </metal:block>\n </metal:content-core>\n \ndiff --git a/plone/app/contenttypes/browser/templates/full_view_item.pt b/plone/app/contenttypes/browser/templates/full_view_item.pt\nindex f8407d7f..0f656564 100644\n--- a/plone/app/contenttypes/browser/templates/full_view_item.pt\n+++ b/plone/app/contenttypes/browser/templates/full_view_item.pt\n@@ -7,35 +7,32 @@\n     tal:omit-tag="">\n <body tal:omit-tag="">\n \n-  <div class="item visualIEFloatFix"\n-      tal:define="item_macro nocall:view/item_macros/content-core|nothing;\n-      item_url view/item_url;\n-      rendering_error python:[];">\n+  <div class="item"\n+       tal:define="item_macro nocall:view/item_macros/content-core|nothing;\n+                   item_url view/item_url;\n+                   rendering_error python:[];">\n \n     <div tal:replace="structure provider:plone.abovecontenttitle" />\n \n-    <h2 class="headline">\n-      <a class="summary url" tal:content="context/Title"\n-        tal:attributes="href item_url;">\n+    <h1>\n+      <a class="summary url" tal:content="context/Title" tal:attributes="href item_url;">\n         Title\n       </a>\n-    </h2>\n+    </h1>\n \n     <div tal:replace="structure provider:plone.belowcontenttitle" />\n \n-    <div class="description"\n-        tal:content="context/Description"\n-        tal:condition="context/Description">\n+    <p class="lead" tal:content="context/Description" tal:condition="context/Description">\n       Description\n-    </div>\n+    </p>\n \n-    <tal:block tal:condition="item_macro">\n-      <!-- tal:on-error="python:rendering_error.append(True)"-->\n+    <section id="section-item" class="mb-5" tal:condition="item_macro">\n \n       <div tal:replace="structure provider:plone.abovecontentbody" />\n \n       <div tal:define="view nocall:view/default_view;\n                        plone_view context/@@plone;\n+                       icons python:context.restrictedTraverse(\'@@iconresolver\');\n                        portal_state context/@@plone_portal_state;\n                        context_state context/@@plone_context_state;\n                        plone_layout context/@@plone_layout;\n@@ -44,28 +41,27 @@\n                        portal_url portal_state/portal_url;\n                        checkPermission nocall: context/portal_membership/checkPermission;\n                        site_properties context/portal_properties/site_properties;">\n+\n         <div metal:use-macro="item_macro">\n           content\n         </div>\n+\n       </div>\n \n       <div tal:replace="structure provider:plone.belowcontentbody" />\n \n-    </tal:block>\n+    </section>\n \n     <tal:block tal:condition="rendering_error">\n       <!-- Error rendering item macro -->\n     </tal:block>\n \n     <p class="more" tal:condition="python:not(item_macro) or rendering_error">\n-      <a tal:attributes="href item_url"\n-          i18n:translate="read_more">\n+      <a tal:attributes="href item_url" i18n:translate="read_more">\n         Read More&hellip;\n       </a>\n     </p>\n \n-    <div class="visualClear"><!-- --></div>\n-\n   </div>\n </body>\n </html>\ndiff --git a/plone/app/contenttypes/browser/templates/image.pt b/plone/app/contenttypes/browser/templates/image.pt\nindex 2a1d0779..27334ebb 100644\n--- a/plone/app/contenttypes/browser/templates/image.pt\n+++ b/plone/app/contenttypes/browser/templates/image.pt\n@@ -11,23 +11,63 @@\n <metal:block define-macro="content-core" tal:define="size context/image/getSize;\n                                                      use_MB python: size > 1024*1024;\n                                                      ">\n-  <figure class="image-product">\n-    <a class="discreet"\n-        tal:attributes="href string:${context/@@plone_context_state/object_url}/image_view_fullscreen"\n-        tal:define="scale context/@@images;\n-                    img_tag python:scale.scale(\'image\', scale=\'large\').tag()"\n-        tal:on-error="string: Image cannot be displayed">\n-    <img tal:replace="structure img_tag" />\n-    <figcaption class="discreet">\n-      <strong class="sr-only" i18n:translate="label_click_to_view_full_image">Click to view full-size image&hellip;</strong>\n-      <span>\n-        <tal:span i18n:translate="label_size">Size</tal:span>:\n-        <tal:MB condition="use_MB">${python:round(size/1024/1024, 1)} MB</tal:MB>\n-        <tal:KB condition="not: use_MB">${python:round(size/1024, 1)} KB</tal:KB>\n-      </span>\n-    </figcaption>\n-    </a>\n-  </figure>\n+\n+  <section id="section-image">\n+\n+    <figure class="figure">\n+      <a tal:attributes="href string:${context/@@plone_context_state/object_url}/image_view_fullscreen"\n+         tal:define="scale context/@@images; img_tag python:scale.scale(\'image\', scale=\'large\').tag(css_class=\'figure-img img-fluid\')"\n+         tal:on-error="string: Image cannot be displayed">\n+        <img tal:replace="structure img_tag" />\n+      </a>\n+      <figcaption class="d-flex justify-content-center mt-2 text-muted">\n+\n+          <div class="ms-3 me-3" tal:define="content_type context/image/contentType|nothing" tal:condition="content_type">\n+            <span class="meta-icon me-1">\n+              <svg width="1.0625em" height="1em" viewBox="0 0 17 16" class="bi bi-image" fill="currentColor" xmlns="http://www.w3.org/2000/svg">\n+                <path fill-rule="evenodd" d="M14.002 2h-12a1 1 0 0 0-1 1v9l2.646-2.354a.5.5 0 0 1 .63-.062l2.66 1.773 3.71-3.71a.5.5 0 0 1 .577-.094L15.002 9.5V3a1 1 0 0 0-1-1zm-12-1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2h-12zm4 4.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/>\n+              </svg>\n+            </span>\n+            <span i18n:translate="image_kind_label" class="d-none">Type</span> <span tal:replace="content_type">image/jpeg</span>\n+          </div>\n+\n+          <div class="ms-3 me-3" tal:define="size context/image/getImageSize; dimension python: str(size[0])+\'x\'+str(size[1])" tal:condition="size">\n+            <span class="meta-icon me-1">\n+              <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-aspect-ratio" fill="currentColor" xmlns="http://www.w3.org/2000/svg">\n+                <path fill-rule="evenodd" d="M0 3.5A1.5 1.5 0 0 1 1.5 2h13A1.5 1.5 0 0 1 16 3.5v9a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 0 12.5v-9zM1.5 3a.5.5 0 0 0-.5.5v9a.5.5 0 0 0 .5.5h13a.5.5 0 0 0 .5-.5v-9a.5.5 0 0 0-.5-.5h-13z"/>\n+                <path fill-rule="evenodd" d="M2 4.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1H3v2.5a.5.5 0 0 1-1 0v-3zm12 7a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1 0-1H13V8.5a.5.5 0 0 1 1 0v3z"/>\n+              </svg>\n+            </span>\n+            <span i18n:translate="image_dimension_label" class="d-none">Dimension</span> <span tal:content="dimension">800x600</span>px\n+          </div>\n+\n+          <div class="ms-3 me-3" tal:define="size context/image/getSize" tal:condition="size">\n+            <span class="meta-icon me-1">\n+              <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-file-binary" fill="currentColor" xmlns="http://www.w3.org/2000/svg">\n+                <path fill-rule="evenodd" d="M4 0h8a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm0 1a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H4z"/>\n+                <path d="M5.526 13.09c.976 0 1.524-.79 1.524-2.205 0-1.412-.548-2.203-1.524-2.203-.978 0-1.526.79-1.526 2.203 0 1.415.548 2.206 1.526 2.206zm-.832-2.205c0-1.05.29-1.612.832-1.612.358 0 .607.247.733.721L4.7 11.137a6.749 6.749 0 0 1-.006-.252zm.832 1.614c-.36 0-.606-.246-.732-.718l1.556-1.145c.003.079.005.164.005.249 0 1.052-.29 1.614-.829 1.614zm5.329.501v-.595H9.73V8.772h-.69l-1.19.786v.688L8.986 9.5h.05v2.906h-1.18V13h3z"/>\n+              </svg>\n+            </span>\n+            <span i18n:translate="image_size_label" class="d-none">File size</span> <span tal:content="size">1000</span> KB\n+          </div>\n+\n+      </figcaption>\n+\n+      <div class="d-flex justify-content-center mt-4">\n+        <a type="button" class="btn btn-sm btn-outline-secondary"\n+          href="${context/@@plone_context_state/object_url}/image_view_fullscreen">\n+          <span class="meta-icon me-2">\n+            <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-arrows-fullscreen" fill="currentColor" xmlns="http://www.w3.org/2000/svg">\n+              <path fill-rule="evenodd" d="M5.828 10.172a.5.5 0 0 0-.707 0l-4.096 4.096V11.5a.5.5 0 0 0-1 0v3.975a.5.5 0 0 0 .5.5H4.5a.5.5 0 0 0 0-1H1.732l4.096-4.096a.5.5 0 0 0 0-.707zm4.344 0a.5.5 0 0 1 .707 0l4.096 4.096V11.5a.5.5 0 1 1 1 0v3.975a.5.5 0 0 1-.5.5H11.5a.5.5 0 0 1 0-1h2.768l-4.096-4.096a.5.5 0 0 1 0-.707zm0-4.344a.5.5 0 0 0 .707 0l4.096-4.096V4.5a.5.5 0 1 0 1 0V.525a.5.5 0 0 0-.5-.5H11.5a.5.5 0 0 0 0 1h2.768l-4.096 4.096a.5.5 0 0 0 0 .707zm-4.344 0a.5.5 0 0 1-.707 0L1.025 1.732V4.5a.5.5 0 0 1-1 0V.525a.5.5 0 0 1 .5-.5H4.5a.5.5 0 0 1 0 1H1.732l4.096 4.096a.5.5 0 0 1 0 .707z"/>\n+            </svg>\n+          </span>\n+          <span i18n:translate="label_click_to_view_full_image">Click to view full-size image</span>\n+        </a>\n+      </div>\n+    </figure>\n+\n+  </section>\n+\n </metal:block>\n </metal:content-core>\n \ndiff --git a/plone/app/contenttypes/browser/templates/image_view_fullscreen.pt b/plone/app/contenttypes/browser/templates/image_view_fullscreen.pt\nindex 4b83ce3c..8eb7e590 100644\n--- a/plone/app/contenttypes/browser/templates/image_view_fullscreen.pt\n+++ b/plone/app/contenttypes/browser/templates/image_view_fullscreen.pt\n@@ -10,51 +10,52 @@\n   <meta name="viewport" content="width=device-width, initial-scale=1">\n   <title tal:content="context/Title">Title</title>\n   <style type="text/css" media="screen">\n+\n     body {\n-      background-color: white;\n-      color: black;\n       font-family: Helvetica, Arial, sans-serif;\n       font-size: 14px;\n-      padding:0;\n-      margin:0;\n-    }\n-    @media screen and (max-width: 768px) {\n-        body {\n-          font-size: 100%;\n-        }\n+      padding: 0;\n+      margin: 0;\n     }\n+\n     a {\n-      color: #08c;\n       text-decoration: none;\n-      text-align:center;\n+      text-align: center;\n+      padding: 12px;\n+    }\n+\n+    a:hover {\n+      text-decoration:underline;\n     }\n-    a:hover {text-decoration:underline;}\n+\n     a span {\n-      display:block;\n-      line-height:1.5em;\n-      padding:12px;\n+      display: block;\n+      line-height: 1.5em;\n+      padding: 12px;\n     }\n+\n     img {\n       border: 0;\n-      display:block;\n-      margin:0 auto;\n-      max-width: 100%; height: auto;\n+      display: block;\n+      margin: 0 auto;\n+      max-width: 100%;\n+      height: auto;\n     }\n+\n   </style>\n </head>\n \n <body>\n   <div id="content-core" tal:condition="context/@@images">\n-    <a tal:attributes="href request/HTTP_REFERER"\n-        tal:condition="request/HTTP_REFERER"\n-      ><span i18n:translate="label_back_to_site">Back to site</span>\n+    <a tal:attributes="href request/HTTP_REFERER" tal:condition="request/HTTP_REFERER">\n       <tal:block replace="structure context/@@images/image" />\n+      <span i18n:translate="label_back_to_site">Back to site</span>\n     </a>\n-    <a tal:attributes="href context/portal_url"\n-        tal:condition="not: request/HTTP_REFERER"\n-      ><span i18n:translate="label_home">Home</span>\n+    <a tal:attributes="href context/portal_url" tal:condition="not: request/HTTP_REFERER">\n       <tal:block replace="structure context/@@images/image" />\n+      <span i18n:translate="label_home">Home</span>\n     </a>\n   </div>\n </body>\n+\n </html>\ndiff --git a/plone/app/contenttypes/browser/templates/link.pt b/plone/app/contenttypes/browser/templates/link.pt\nindex b0a94f56..2815e00e 100644\n--- a/plone/app/contenttypes/browser/templates/link.pt\n+++ b/plone/app/contenttypes/browser/templates/link.pt\n@@ -9,20 +9,33 @@\n \n <metal:content-core fill-slot="content-core">\n <metal:block define-macro="content-core">\n-  <div class="portalMessage info"\n-      tal:define="redirect_links python:context.portal_registry[\'plone.redirect_links\']"\n-      tal:condition="python: redirect_links and checkPermission(\'Modify portal content\', context)">\n+\n+  <div class="alert alert-primary mb-4" role="alert" tal:define="redirect_links python:context.portal_registry[\'plone.redirect_links\']" tal:condition="python: redirect_links and checkPermission(\'Modify portal content\', context)">\n     <strong i18n:translate="">Info</strong>\n-    <span tal:omit-tag=""\n-        i18n:translate="message_permissions_blocking_link_redirect">\n+    <span tal:omit-tag="" i18n:translate="message_permissions_blocking_link_redirect">\n       You see this page because you have permission to edit this link.\n       Others will be immediately redirected to the link\'s target URL.\n     </span>\n   </div>\n-  <p>\n-    <span i18n:translate="link_address">The link address is:</span>\n-    <a tal:attributes="href view/absolute_target_url" tal:content="view/url">remote url</a>\n-  </p>\n+\n+  <section id="section-details">\n+\n+    <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3">\n+      <div class="col mb-4">\n+        <div class="card">\n+          <div class="card-icon">\n+            <tal:icon tal:replace="structure python:icons.tag(\'link\')" />\n+          </div>\n+          <div class="card-body text-center">\n+            <strong i18n:translate="link_address_label">Adresse</strong>\n+            <p class="card-text"><a href="" class="stretched-link" tal:attributes="href python: view.absolute_target_url()" tal:content="python: view.url()">remote url</a></p>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+\n+  </section>\n+\n </metal:block>\n </metal:content-core>\n \ndiff --git a/plone/app/contenttypes/browser/templates/listing.pt b/plone/app/contenttypes/browser/templates/listing.pt\nindex 350d24d2..0b5c71c8 100644\n--- a/plone/app/contenttypes/browser/templates/listing.pt\n+++ b/plone/app/contenttypes/browser/templates/listing.pt\n@@ -12,90 +12,89 @@\n \n   <div metal:define-macro="text-field-view"\n       id="parent-fieldname-text" class="stx"\n-      tal:define="text view/text"\n-      tal:condition="text"\n-      tal:attributes="class view/text_class">\n+      tal:define="text python:view.text"\n+      tal:condition="python:text"\n+      tal:attributes="class python:view.text_class">\n     <div metal:define-slot="inside" tal:replace="structure text">The body</div>\n   </div>\n \n+\n   <metal:listingmacro define-macro="listing">\n-    <tal:results define="batch view/batch;\n-                         thumb_scale_list view/get_thumb_scale_list;\n-                         thumb_scale_table view/get_thumb_scale_table;\n-                         thumb_scale_summary view/get_thumb_scale_summary;\n-                         img_class python:\'thumb-%s pull-right\' % thumb_scale_list;\n-                         showicons view/show_icons">\n-      <tal:listing condition="batch">\n+    <tal:results define="batch python:view.batch();\n+                         thumb_scale_list python:view.get_thumb_scale_list();\n+                         thumb_scale_table python:view.get_thumb_scale_table();\n+                         thumb_scale_summary python:view.get_thumb_scale_summary();\n+                         img_class python:\'thumb-{} float-end\'.format(thumb_scale_list);\n+                         showicons python:view.show_icons()">\n+      <tal:listing condition="python:batch">\n         <div class="entries" metal:define-slot="entries"\n-            tal:define="portal context/@@plone_portal_state/portal;\n+            tal:define="portal python:portal_state.portal();\n                         image_scale portal/@@image_scale">\n-          <tal:repeat repeat="item batch" metal:define-macro="entries">\n-            <tal:block tal:define="obj item/getObject;\n-                item_url item/getURL;\n-                item_id item/getId;\n-                item_title item/Title;\n+\n+          <tal:repeat repeat="item python:batch" metal:define-macro="entries">\n+            <tal:block tal:define="obj python:item.getObject();\n+                item_url python:item.getURL();\n+                item_id python:item.getId();\n+                item_title python:item.Title();\n                 item_title python:item_title or item_id;\n-                item_description item/Description;\n-                item_type item/PortalType;\n-                item_modified item/ModificationDate;\n-                item_created item/CreationDate;\n-                item_wf_state item/review_state;\n+                item_description python:item.Description();\n+                item_type python:item.PortalType();\n+                item_modified python:item.ModificationDate();\n+                item_created python:item.CreationDate();\n+                item_wf_state python:item.review_state();\n                 item_wf_state_class python:\'state-\' + view.normalizeString(item_wf_state);\n-                item_creator item/Creator;\n+                item_creator python:item.Creator();\n                 item_link python:item_type in view.use_view_action and item_url+\'/view\' or item_url;\n                 item_is_event python:view.is_event(obj);\n                 item_has_image python:item.getIcon;\n                 item_type_class python:(\'contenttype-\' + view.normalizeString(item_type)) if showicons else \'\' ;\n                 ">\n               <metal:block define-slot="entry">\n-                <article class="entry">\n-                  <header metal:define-macro="listitem" tal:attributes="class python:\'vevent\' if item_is_event else None">\n-                    <span class="summary" tal:attributes="title item_type">\n-                      <a tal:condition="python:item_type == \'File\' and showicons"\n-                         tal:attributes="href item_link;\n-                                         class string:$item_type_class $item_wf_state_class url;\n-                                         title item_type">\n-                         <img class="mime-icon"\n-                                tal:attributes="src item/MimeTypeIcon">\n-                      </a>\n-                      <a tal:attributes="href item_link;\n-                                            class string:$item_type_class $item_wf_state_class url;\n-                                            title item_type"\n-                         tal:content="item_title">Item Title\n-                      </a>\n-                      <a tal:attributes="href item_link;"\n-                         tal:condition="python: item_has_image and thumb_scale_list">\n-                         <img tal:replace="structure python:image_scale.tag(item, \'image\', scale=thumb_scale_list, css_class=img_class)" />\n-                      </a>\n-                    </span>\n-                    <metal:block metal:define-macro="document_byline">\n-                      <div class="documentByLine">\n-                        <tal:event condition="item_is_event">\n+\n+                <article class="mb-3">\n+\n+                  <div metal:define-macro="listitem">\n+\n+                      <div class="mb-1">\n+                        <a tal:attributes="href python:item_link; class string:$item_type_class $item_wf_state_class url; title item_type" tal:content="python:item_title">\n+                          Item Title\n+                        </a>\n+                        <a tal:attributes="href python:item_link;" tal:condition="python:item_has_image and thumb_scale_list">\n+                          <img tal:replace="structure python:image_scale.tag(item, \'image\', scale=thumb_scale_list, css_class=img_class)" />\n+                        </a>\n+                      </div>\n+\n+                      <metal:block metal:define-macro="document_byline">\n+                      <div class="mb-1">\n+\n+                        <tal:event condition="python:item_is_event">\n                           <tal:date tal:replace="structure python:view.formatted_date(obj)"/>\n-                          <span tal:condition="item/location" i18n:translate="label_event_byline_location">&mdash;\n-                            <span tal:content="string:${item/location}" class="location" i18n:name="location">Oslo</span>,\n+                          <span tal:condition="python:item.location" i18n:translate="label_event_byline_location">\n+                            &mdash;\n+                            <span tal:content="python:item.location" class="location" i18n:name="location">Oslo</span>\n                           </span>\n-                        </tal:event>\n-                        <tal:byline condition="view/show_about">\n                           &mdash;\n-                          <tal:name tal:condition="item_creator"\n+                        </tal:event>\n+\n+                        <tal:byline condition="python:view.show_about">\n+                          <tal:name tal:condition="python:item_creator"\n                               tal:define="author python:view.pas_member.info(item_creator);\n-                                          creator_short_form author/username;\n-                                          creator_long_form string:?author=${author/username};\n+                                          creator_short_form python:author.get(\'username\');\n+                                          creator_long_form string:?author=$${python:author.username};\n                                           creator_is_openid python:\'/\' in creator_short_form;\n                                           creator_id python:(creator_short_form, creator_long_form)[creator_is_openid];">\n                           <span i18n:translate="label_by_author">\n                             by\n                             <a tal:attributes="href string:${view/navigation_root_url}/author/${item_creator}"\n-                                tal:content="author/name_or_id"\n-                                tal:omit-tag="not:author"\n+                                tal:content="python: author.get(\'name_or_id\')"\n+                                tal:omit-tag="python: not author"\n                                 i18n:name="author">\n                               Bob Dobalina\n                             </a>\n                           </span>\n                           </tal:name>\n \n-                          <tal:modified condition="python: item_type != \'Event\'">\n+                          <tal:modified condition="python:item_type != \'Event\'">\n                             &mdash;\n                             <tal:mod i18n:translate="box_last_modified">last modified</tal:mod>\n                             <span tal:replace="python:view.toLocalizedTime(item_modified,long_format=1)">\n@@ -108,16 +107,19 @@\n                               Place custom listing info for custom types here\n                             </tal:comment>\n                           </metal:description>\n+\n                         </tal:byline>\n                       </div>\n-                    </metal:block>\n-                  </header>\n-                  <p class="description discreet"\n-                      tal:condition="item_description"\n-                      tal:content="item_description">\n+                      </metal:block>\n+\n+                  </div>\n+\n+                  <p class="me-3" tal:condition="python:item_description" tal:content="python:item_description">\n                     description\n                   </p>\n+\n                 </article>\n+\n               </metal:block>\n             </tal:block>\n           </tal:repeat>\n@@ -129,8 +131,8 @@\n \n       <metal:empty metal:define-slot="no_items_in_listing">\n         <p class="discreet"\n-            tal:condition="not: batch"\n-            tal:content="view/no_items_message">\n+            tal:condition="python: not batch"\n+            tal:content="python: view.no_items_message">\n           There are currently no items in this folder.\n         </p>\n       </metal:empty>\ndiff --git a/plone/app/contenttypes/browser/templates/listing_album.pt b/plone/app/contenttypes/browser/templates/listing_album.pt\nindex 1b517bc7..a49a4fc3 100644\n--- a/plone/app/contenttypes/browser/templates/listing_album.pt\n+++ b/plone/app/contenttypes/browser/templates/listing_album.pt\n@@ -8,67 +8,52 @@\n <body>\n \n <metal:content-core fill-slot="content-core">\n-<metal:main_macro define-macro="content-core"\n-    tal:define="images view/album_images;\n-                albums view/album_folders">\n+<metal:main_macro define-macro="content-core" tal:define="images view/album_images; albums view/album_folders">\n \n-  <div metal:define-macro="text-field-view"\n-      id="parent-fieldname-text" class="stx"\n-      tal:define="text view/text"\n-      tal:condition="text"\n-      tal:attributes="class view/text_class">\n+  <div metal:define-macro="text-field-view" id="parent-fieldname-text" class="stx" tal:define="text view/text" tal:condition="text" tal:attributes="class view/text_class">\n     <div metal:define-slot="inside" tal:replace="structure text">The body</div>\n   </div>\n \n-  <metal:listingmacro define-macro="listing"\n-      tal:define="portal context/@@plone_portal_state/portal;\n-                  image_scale portal/@@image_scale">\n+  <metal:listingmacro define-macro="listing" tal:define="portal context/@@plone_portal_state/portal; image_scale portal/@@image_scale">\n+\n+  <div class="row">\n+\n   <tal:images tal:repeat="image images">\n-    <div class="photoAlbumEntry"\n-         tal:define="scale python:image_scale.tag(image, \'image\', scale=\'thumb\')"\n-         tal:condition="scale">\n-      <a tal:attributes="href string:${image/getURL}/view;\n-                         title image/Description">\n-        <span class="photoAlbumEntryWrapper">\n+    <div class="col mb-5">\n+      <div class="card h-100">\n+        <div tal:define="scale python:image_scale.tag(image, \'image\', scale=\'mini\')" tal:condition="scale" class="card-image d-flex justify-content-center align-items-center" style="height: 14rem;">\n           <img tal:replace="structure scale" />\n-        </span>\n-        <span class="photoAlbumEntryTitle" tal:content="image/Title">\n-            Title\n-        </span>\n-      </a>\n+        </div>\n+        <div class="card-body">\n+          <h5 class="card-title" tal:content="image/Title">Image title</h5>\n+          <p class="card-text" tal:content="image/Description">Description</p>\n+          <a class="card-link stretched-link" tal:attributes="href string:${image/getURL}/view; title image/Description">View</a>\n+        </div>\n+      </div>\n     </div>\n   </tal:images>\n \n-  <div class="visualClear"><!-- --></div>\n-\n   <tal:albums tal:repeat="album albums">\n-    <div class="photoAlbumEntry photoAlbumFolder"\n-        tal:define="album_ob album/getObject;\n-                    subalbum_view nocall:album_ob/@@album_view;\n-                    random_image subalbum_view/album_random_image;\n-                    number_images subalbum_view/album_number_images"\n-        tal:condition="random_image">\n-      <a tal:attributes="href album/getURL;\n-                         title album/Description">\n-        <span class="photoAlbumEntryWrapper">\n-          <img tal:replace="structure python:image_scale.tag(random_image, fieldname=\'image\', scale=\'thumb\')" />\n-        </span>\n-        <span class="photoAlbumEntryTitle">\n-          <tal:title content="album/Title">Title</tal:title>\n-          (<tal:number content="number_images" />)\n-        </span>\n-      </a>\n+    <div class="col mb-5">\n+      <div class="card album h-100">\n+        <div tal:define="scale python:image_scale.tag(album, \'image\', scale=\'mini\')" tal:condition="scale" class="card-image d-flex justify-content-center align-items-center" style="height: 14rem;">\n+          <img tal:replace="structure scale" />\n+        </div>\n+        <div class="card-body">\n+          <h5 class="card-title" tal:content="album/Title">Image title</h5>\n+          <p class="card-text" tal:content="album/Description">Description</p>\n+          <a class="card-link stretched-link" tal:attributes="href string:${album/getURL}/view; title album/Description">View</a>\n+        </div>\n+      </div>\n     </div>\n   </tal:albums>\n \n-  <div class="visualClear"><!-- --></div>\n+  </div>\n \n   <div metal:use-macro="context/batch_macros/macros/navigation" />\n \n   <metal:empty metal:define-slot="no_items_in_listing">\n-    <p class="discreet"\n-        tal:condition="python: not images and not albums"\n-        tal:content="view/no_items_message">\n+    <p tal:condition="python: not images and not albums" tal:content="view/no_items_message">\n       There are currently no items in this folder.\n     </p>\n   </metal:empty>\ndiff --git a/plone/app/contenttypes/browser/templates/listing_summary.pt b/plone/app/contenttypes/browser/templates/listing_summary.pt\nindex 40dba020..c16b08ff 100644\n--- a/plone/app/contenttypes/browser/templates/listing_summary.pt\n+++ b/plone/app/contenttypes/browser/templates/listing_summary.pt\n@@ -13,46 +13,43 @@\n <metal:block use-macro="context/@@listing_view/macros/content-core">\n \n   <metal:entries fill-slot="entries">\n-    <metal:block use-macro="context/@@listing_view/macros/entries"\n-        tal:define="portal context/@@plone_portal_state/portal;\n-                    image_scale portal/@@image_scale">\n+    <metal:block use-macro="context/@@listing_view/macros/entries" tal:define="portal context/@@plone_portal_state/portal; image_scale portal/@@image_scale">\n+\n       <metal:entry fill-slot="entry">\n \n-        <article class="tileItem">\n-          <h2 class="tileHeadline" metal:define-macro="listitem">\n-            <a class="summary url"\n-                tal:attributes="href item_link;\n-                                title item_type"\n-                tal:content="item_title">\n+        <article class="d-flex mb-3">\n+\n+          <div class="me-3">\n+\n+          <h2 metal:define-macro="listitem">\n+            <a class="summary url" tal:attributes="href item_link; title item_type" tal:content="item_title">\n               Item Title\n             </a>\n           </h2>\n \n-          <div metal:use-macro="context/@@listing_view/macros/document_byline"></div>\n-\n-          <div tal:define="thumb_url python:item_url + \'/@@images/image/\' + thumb_scale_summary;"\n-               tal:condition="python: item_has_image and thumb_scale_summary"\n-               tal:attributes="class python: \'tileImage\' if item_description else \'tileImageNoFloat\'">\n-            <a tal:attributes="href item_link">\n-              <img tal:replace="structure python:image_scale.tag(item, \'image\', scale=thumb_scale_summary, css_class=\'thumb-\' + thumb_scale_summary)" />\n-\n-            </a>\n+          <div class="mb-3">\n+            <div metal:use-macro="context/@@listing_view/macros/document_byline"></div>\n           </div>\n \n-          <div class="tileBody" tal:condition="item_description">\n+          <div class="mb-1" tal:condition="item_description">\n             <span class="description" tal:content="item_description">\n               description\n             </span>\n           </div>\n \n-          <div class="tileFooter">\n-            <a tal:attributes="href item_link"\n-                i18n:translate="read_more">\n+          <div class="mb-1">\n+            <a tal:attributes="href item_link" i18n:translate="read_more">\n               Read More&hellip;\n             </a>\n           </div>\n \n-          <div class="visualClear"><!-- --></div>\n+          </div>\n+\n+          <div tal:define="thumb_url python:item_url + \'/@@images/image/\' + thumb_scale_summary;" tal:condition="python: item_has_image and thumb_scale_summary" tal:attributes="class python: \'tileImage\' if item_description else \'tileImageNoFloat\'">\n+            <a tal:attributes="href item_link">\n+              <img tal:replace="structure python:image_scale.tag(item, \'image\', scale=thumb_scale_summary, css_class=\'thumb-\' + thumb_scale_summary)" />\n+            </a>\n+          </div>\n \n         </article>\n \ndiff --git a/plone/app/contenttypes/browser/templates/listing_tabular.pt b/plone/app/contenttypes/browser/templates/listing_tabular.pt\nindex 61dbc874..c715bf57 100644\n--- a/plone/app/contenttypes/browser/templates/listing_tabular.pt\n+++ b/plone/app/contenttypes/browser/templates/listing_tabular.pt\n@@ -10,93 +10,83 @@\n <metal:content-core fill-slot="content-core">\n <metal:block define-macro="content-core">\n \n-  <div metal:define-macro="text-field-view"\n-      id="parent-fieldname-text" class="stx"\n-      tal:define="text view/text"\n-      tal:condition="text"\n-      tal:attributes="class view/text_class">\n-    <div metal:define-slot="inside" tal:replace="structure text">The body</div>\n+  <div metal:define-macro="text-field-view" id="parent-fieldname-text" class="stx" tal:define="text python:view.text" tal:condition="python:text" tal:attributes="class python:view.text_class">\n+    <div metal:define-slot="inside" tal:replace="structure python:text">The body</div>\n   </div>\n \n   <metal:listingmacro define-macro="listing">\n-  <tal:results define="batch view/batch">\n-    <tal:listing condition="batch">\n+  <tal:results define="batch python:view.batch()">\n+    <tal:listing condition="python:batch">\n \n       <div metal:use-macro="context/batch_macros/macros/navigation" />\n-      <div class="has-table">\n-        <table\n-            tal:define="thumb_scale_table view/get_thumb_scale_table;\n-                        img_class python:\'thumb-%s pull-right\' % thumb_scale_table;\n-                        showicons  view/show_icons;\n-                        "\n-            class="listing"\n-            summary="Content listing"\n-            i18n:attributes="summary summary_content_listing;">\n+\n+      <div class="table-responsive">\n+\n+        <table class="table table-striped" tal:define="tabular_fields view/tabular_fields; thumb_scale_table python:view.get_thumb_scale_table(); img_class python:\'thumb-%s float-end\' % thumb_scale_table; showicons  python:view.show_icons();" summary="Content listing" i18n:attributes="summary summary_content_listing;">\n+\n           <thead>\n             <tr>\n-              <th class="nosort"\n-                  i18n:translate=""\n-                  tal:repeat="field view/tabular_fields"\n-                  tal:content="python:view.tabular_field_label(field)">Field name</th>\n+              <th class="text-nowrap"></th>\n+              <th class="text-nowrap" tal:repeat="field tabular_fields" tal:content="python:view.tabular_field_label(field)">Field name</th>\n+              <th class="text-nowrap" i18n:translate="image">Image</th>\n             </tr>\n           </thead>\n-          <tbody tal:define="portal context/@@plone_portal_state/portal;\n-                             image_scale portal/@@image_scale">\n-            <tal:entries tal:repeat="item batch">\n-              <tal:block tal:define="item_url item/getURL;\n-                                     item_id item/getId;\n-                                     item_title item/Title;\n-                                     item_title python:item_title or item_id;\n-                                     item_description item/Description;\n-                                     item_type item/PortalType;\n-                                     item_type_class python:\'contenttype-\' + view.normalizeString(item_type) if showicons else \'\';\n-                                     item_wf_state item/review_state;\n-                                     item_wf_state_class python:\'state-\' + view.normalizeString(item_wf_state);\n-                                     item_creator item/Creator;\n-                                     item_has_image python:item.getIcon;\n-                                     item_link python:item_type in view.use_view_action and item_url+\'/view\' or item_url;\n-                                     ">\n-                <tr metal:define-macro="listitem"\n-                    tal:define="oddrow repeat/item/odd;"\n-                    tal:attributes="class python: oddrow and \'even\' or \'odd\'">\n-\n-                  <tal:block tal:repeat="field view/tabular_fields">\n-                    <td tal:condition="python:field not in [\'Title\', \'Creator\', \'getIcon\']"\n-                        tal:define="field_data python:view.tabular_fielddata(item, field)">\n-                      <tal:block tal:replace="field_data/value" />\n-                    </td>\n-                    <td tal:condition="python:field == \'Title\'">\n-                      <a tal:condition="python:item_type == \'File\' and showicons"\n-                         tal:attributes="href item_link;\n-                                         class string:$item_type_class $item_wf_state_class url;\n-                                         title item_type">\n-                         <img class="mime-icon"\n-                                tal:attributes="src item/MimeTypeIcon">\n-                      </a>\n-                      <a tal:attributes="href item_link;\n-                                         class string:$item_type_class $item_wf_state_class url;\n-                                         title item_type"\n-                         tal:content="item_title">Item Title\n-                      </a>\n-                      <a tal:condition="python:item_has_image and thumb_scale_table">\n-                         <img tal:attributes="href item_link"\n-                              tal:replace="structure python:image_scale.tag(item, \'image\', scale=thumb_scale_table, css_class=img_class)" />\n-                      </a>\n-                    </td>\n-                    <td tal:condition="python:field == \'Creator\'"\n-                        tal:define="author python:view.pas_member.info(item_creator);\n-                                    name python:author[\'fullname\'] or author[\'username\']">\n-                      <a tal:condition="author"\n-                          tal:attributes="href string:${view/navigation_root_url}/author/${item_creator}"\n-                          tal:content="name">Jos Henken</a>\n-                    </td>\n+\n+          <tbody tal:define="portal python:portal_state.portal(); image_scale portal/@@image_scale">\n+            <tal:entries tal:repeat="item python:batch">\n+              <tal:block tal:define="item_url python:item.getURL();\n+                                      item_id python:item.getId();\n+                                      item_title python:item.Title();\n+                                      item_title python:item_title or item_id;\n+                                      item_type python:item.PortalType();\n+                                      item_type_class python:\'contenttype/\' + view.normalizeString(item_type) if showicons else \'\';\n+                                      item_wf_state python:item.review_state();\n+                                      item_wf_state_class python:\'state-\' + view.normalizeString(item_wf_state);\n+                                      item_creator python:item.Creator();\n+                                      item_has_image python:item.getIcon;\n+                                      item_link python:item_type in view.use_view_action and item_url+\'/view\' or item_url;\n+                                      item_mime_type python:item.mime_type;\n+                                      item_mime_type_icon python: \'mimetype-\' + item_mime_type;\n+                                      ">\n+\n+                <tr metal:define-macro="listitem">\n+\n+                  <td>\n+                    <tal:icon tal:condition="python: item_type == \'File\'" tal:replace="structure python:icons.tag(item_mime_type_icon)" />\n+                    <tal:icon tal:condition="python: item_type != \'File\'" tal:replace="structure python:icons.tag(item_type_class)" />\n+                  </td>\n+\n+                  <tal:block tal:repeat="field python:tabular_fields">\n+\n+                  <td class="text-nowrap" tal:condition="python:field not in [\'Title\', \'Creator\', \'getIcon\']" tal:define="field_data python:view.tabular_fielddata(item, field)">\n+                    <tal:block tal:replace="python: field_data.get(\'value\')" />\n+                  </td>\n+\n+                  <td class="text-nowrap" tal:condition="python:field == \'Title\'">\n+                    <a tal:attributes="href python:item_link; class string:$item_type_class $item_wf_state_class url; title python:item_type" tal:content="python: item_title">\n+                      Item Title\n+                    </a>\n+                  </td>\n+\n+                  <td class="text-nowrap" tal:condition="python:field == \'Creator\'" tal:define="author python:view.pas_member.info(item_creator); name python:author[\'fullname\'] or author[\'username\']">\n+                    <a tal:condition="python: author" tal:attributes="href string:${view.navigation_root_url}/author/${item_creator}" tal:content="python: name">Jos Henken</a>\n+                  </td>\n+\n                   </tal:block>\n \n+                  <td>\n+                    <a tal:condition="python:item_has_image and thumb_scale_table">\n+                      <img tal:attributes="href python: item_link" tal:replace="structure python:image_scale.tag(item, \'image\', scale=thumb_scale_table, css_class=img_class)" />\n+                    </a>\n+                  </td>\n+\n                 </tr>\n+\n               </tal:block>\n             </tal:entries>\n           </tbody>\n         </table>\n+\n       </div>\n \n       <div metal:use-macro="context/batch_macros/macros/navigation" />\n@@ -104,10 +94,8 @@\n     </tal:listing>\n \n     <metal:empty metal:define-slot="no_items_in_listing">\n-    <p class="discreet"\n-    tal:condition="not: batch"\n-    tal:content="view/no_items_message">\n-    There are currently no items in this folder.\n+    <p tal:condition="python: not batch" tal:content="python: view.no_items_message">\n+      There are currently no items in this folder.\n     </p>\n     </metal:empty>\n \ndiff --git a/plone/app/contenttypes/browser/templates/newsitem.pt b/plone/app/contenttypes/browser/templates/newsitem.pt\nindex 18feb59f..36632235 100644\n--- a/plone/app/contenttypes/browser/templates/newsitem.pt\n+++ b/plone/app/contenttypes/browser/templates/newsitem.pt\n@@ -9,11 +9,14 @@\n \n <metal:content-core fill-slot="content-core">\n <metal:content-core define-macro="content-core"\n-                    tal:define="toc context/table_of_contents|nothing;">\n-  <div id="parent-fieldname-text"\n-      tal:condition="context/text"\n-      tal:content="structure python:context.text.output_relative_to(view.context)"\n-      tal:attributes="class python: toc and \'pat-autotoc\' or \'\'" />\n+                    tal:define="toc python: getattr(context, \'table_of_contents\', False)">\n+\n+  <section id="section-text">\n+    <div id="parent-fieldname-text" tal:condition="python: context.text" tal:content="structure python:context.text.output_relative_to(view.context)" tal:attributes="class python: toc and \'pat-autotoc\' or \'\'">\n+      Text\n+    </div>\n+  </section>\n+\n </metal:content-core>\n </metal:content-core>\n \ndiff --git a/plone/app/contenttypes/browser/viewlets.py b/plone/app/contenttypes/browser/viewlets.py\ndeleted file mode 100644\nindex 01910e0b..00000000\n--- a/plone/app/contenttypes/browser/viewlets.py\n+++ /dev/null\n@@ -1,50 +0,0 @@\n-# -*- coding: utf-8 -*-\n-from AccessControl import getSecurityManager\n-from Acquisition import aq_inner\n-from plone.app.layout.viewlets import ViewletBase\n-from plone.dexterity.interfaces import IDexterityFTI\n-from Products.CMFCore.permissions import ManagePortal\n-\n-import pkg_resources\n-\n-\n-try:\n-    pkg_resources.get_distribution(\'Products.Archetypes\')\n-except pkg_resources.DistributionNotFound:\n-    HAS_ARCHETYPES = False\n-else:\n-    from Products.Archetypes.interfaces.base import IBaseObject\n-    HAS_ARCHETYPES = True\n-\n-\n-class ATWarningViewlet(ViewletBase):\n-\n-    def update(self):\n-        self.available = False\n-        if not HAS_ARCHETYPES:\n-            return\n-        self.context = aq_inner(self.context)\n-        replaced_types = [\n-            \'ATFolder\',\n-            \'ATDocument\',\n-            \'ATFile\',\n-            \'ATImage\',\n-            \'ATNewsItem\',\n-            \'ATLink\',\n-            \'ATEvent\',\n-            \'ATBlobImage\',\n-            \'ATBlobFile\',\n-            \'Collection\'\n-        ]\n-        if self.context.meta_type not in replaced_types:\n-            return\n-        if not IBaseObject.providedBy(self.context):\n-            return\n-        context_fti = self.context.getTypeInfo()\n-        if IDexterityFTI.providedBy(context_fti):\n-            self.available = True\n-\n-    def can_migrate(self):\n-        sm = getSecurityManager()\n-        if sm.checkPermission(ManagePortal, self.context):\n-            return True\ndiff --git a/plone/app/contenttypes/migration/custom_migration.pt b/plone/app/contenttypes/migration/custom_migration.pt\nindex 6a27b2cd..7d19a2cb 100644\n--- a/plone/app/contenttypes/migration/custom_migration.pt\n+++ b/plone/app/contenttypes/migration/custom_migration.pt\n@@ -129,7 +129,7 @@\n                         <div class="testConfig">\n                             <input type="submit"\n                                    name="form.button.Test"\n-                                   class="context"\n+                                   class="btn btn-primary"\n                                    value="Test configuration"\n                                    i18n:attributes="value"\n                                    i18n:domain="plone"/>&nbsp;\n@@ -140,8 +140,8 @@\n             </table>\n             <div>\n               <br />\n-              <input type="submit" name="form.button.Migrate" class="context" value="Migrate" i18n:attributes="value" i18n:domain="plone"/>&nbsp;\n-              <input type="submit" name="form.button.Cancel" class="standalone" value="Cancel" i18n:attributes="value" i18n:domain="plone"/>\n+              <input type="submit" name="form.button.Migrate" class="btn btn-primary" value="Migrate" i18n:attributes="value" i18n:domain="plone"/>&nbsp;\n+              <input type="submit" name="form.button.Cancel" class="btn btn-secondary" value="Cancel" i18n:attributes="value" i18n:domain="plone"/>\n             </div>\n             </form>\n           </div>\ndiff --git a/plone/app/contenttypes/profiles/default/types/Collection.xml b/plone/app/contenttypes/profiles/default/types/Collection.xml\nindex 5dd416eb..2f9e192b 100644\n--- a/plone/app/contenttypes/profiles/default/types/Collection.xml\n+++ b/plone/app/contenttypes/profiles/default/types/Collection.xml\n@@ -15,7 +15,7 @@\n \n   <property name="allow_discussion">False</property>\n   <property name="factory">Collection</property>\n-  <property name="icon_expr"></property>\n+  <property name="icon_expr">string:contenttype/collection</property>\n   <property name="link_target"></property>\n \n   <!-- Hierarchy control -->\n@@ -83,6 +83,7 @@\n       i18n:attributes="title"\n       title="View"\n       url_expr="string:${object_url}"\n+      icon_expr="string:toolbar-action/view"\n       visible="True">\n     <permission value="View"/>\n   </action>\n@@ -93,6 +94,7 @@\n       i18n:attributes="title"\n       title="Edit"\n       url_expr="string:${object_url}/edit"\n+      icon_expr="string:toolbar-action/edit"\n       visible="True">\n     <permission value="Modify portal content"/>\n   </action>\ndiff --git a/plone/app/contenttypes/profiles/default/types/Document.xml b/plone/app/contenttypes/profiles/default/types/Document.xml\nindex 5429d949..152c6173 100644\n--- a/plone/app/contenttypes/profiles/default/types/Document.xml\n+++ b/plone/app/contenttypes/profiles/default/types/Document.xml\n@@ -15,7 +15,7 @@\n \n   <property name="allow_discussion">False</property>\n   <property name="factory">Document</property>\n-  <property name="icon_expr"></property>\n+  <property name="icon_expr">string:contenttype/document</property>\n   <property name="link_target"></property>\n \n   <!-- Hierarchy control -->\n@@ -79,6 +79,7 @@\n       i18n:attributes="title"\n       title="View"\n       url_expr="string:${object_url}"\n+      icon_expr="string:toolbar-action/view"\n       visible="True">\n     <permission value="View"/>\n   </action>\n@@ -89,6 +90,7 @@\n       i18n:attributes="title"\n       title="Edit"\n       url_expr="string:${object_url}/edit"\n+      icon_expr="string:toolbar-action/edit"\n       visible="True">\n     <permission value="Modify portal content"/>\n   </action>\ndiff --git a/plone/app/contenttypes/profiles/default/types/Event.xml b/plone/app/contenttypes/profiles/default/types/Event.xml\nindex 6ea632b6..8076925d 100644\n--- a/plone/app/contenttypes/profiles/default/types/Event.xml\n+++ b/plone/app/contenttypes/profiles/default/types/Event.xml\n@@ -15,7 +15,7 @@\n \n   <property name="allow_discussion">False</property>\n   <property name="factory">Event</property>\n-  <property name="icon_expr"></property>\n+  <property name="icon_expr">string:contenttype/event</property>\n   <property name="link_target"></property>\n \n   <!-- Hierarchy control -->\n@@ -83,6 +83,7 @@\n       i18n:attributes="title"\n       title="View"\n       url_expr="string:${object_url}"\n+      icon_expr="string:toolbar-action/view"\n       visible="True">\n     <permission value="View"/>\n   </action>\n@@ -93,6 +94,7 @@\n       i18n:attributes="title"\n       title="Edit"\n       url_expr="string:${object_url}/edit"\n+      icon_expr="string:toolbar-action/edit"\n       visible="True">\n     <permission value="Modify portal content"/>\n   </action>\ndiff --git a/plone/app/contenttypes/profiles/default/types/File.xml b/plone/app/contenttypes/profiles/default/types/File.xml\nindex b5f6315a..634be6c9 100644\n--- a/plone/app/contenttypes/profiles/default/types/File.xml\n+++ b/plone/app/contenttypes/profiles/default/types/File.xml\n@@ -15,7 +15,7 @@\n \n   <property name="allow_discussion">False</property>\n   <property name="factory">File</property>\n-  <property name="icon_expr"></property>\n+  <property name="icon_expr">string:contenttype/file</property>\n   <property name="link_target"></property>\n \n   <!-- Hierarchy control -->\n@@ -76,7 +76,8 @@\n       condition_expr=""\n       i18n:attributes="title"\n       title="View"\n-      url_expr="string:${object_url}/view"\n+      url_expr="string:${object_url}"\n+      icon_expr="string:toolbar-action/view"\n       visible="True">\n     <permission value="View"/>\n   </action>\n@@ -87,6 +88,7 @@\n       i18n:attributes="title"\n       title="Edit"\n       url_expr="string:${object_url}/edit"\n+      icon_expr="string:toolbar-action/edit"\n       visible="True">\n     <permission value="Modify portal content"/>\n   </action>\ndiff --git a/plone/app/contenttypes/profiles/default/types/Folder.xml b/plone/app/contenttypes/profiles/default/types/Folder.xml\nindex c1af01b9..09cd7653 100644\n--- a/plone/app/contenttypes/profiles/default/types/Folder.xml\n+++ b/plone/app/contenttypes/profiles/default/types/Folder.xml\n@@ -15,7 +15,7 @@\n \n   <property name="allow_discussion">False</property>\n   <property name="factory">Folder</property>\n-  <property name="icon_expr"></property>\n+  <property name="icon_expr">string:contenttype/folder</property>\n   <property name="link_target"></property>\n \n   <!-- Hierarchy control -->\n@@ -82,6 +82,7 @@\n       i18n:attributes="title"\n       title="View"\n       url_expr="string:${object_url}"\n+      icon_expr="string:toolbar-action/view"\n       visible="True">\n     <permission value="View"/>\n   </action>\n@@ -92,6 +93,7 @@\n       i18n:attributes="title"\n       title="Edit"\n       url_expr="string:${object_url}/edit"\n+      icon_expr="string:toolbar-action/edit"\n       visible="True">\n     <permission value="Modify portal content"/>\n   </action>\ndiff --git a/plone/app/contenttypes/profiles/default/types/Image.xml b/plone/app/contenttypes/profiles/default/types/Image.xml\nindex 54e1e5b1..1df16a50 100644\n--- a/plone/app/contenttypes/profiles/default/types/Image.xml\n+++ b/plone/app/contenttypes/profiles/default/types/Image.xml\n@@ -15,7 +15,7 @@\n \n   <property name="allow_discussion">False</property>\n   <property name="factory">Image</property>\n-  <property name="icon_expr"></property>\n+  <property name="icon_expr">string:contenttype/image</property>\n   <property name="link_target"></property>\n \n   <!-- Hierarchy control -->\n@@ -77,6 +77,7 @@\n       i18n:attributes="title"\n       title="View"\n       url_expr="string:${object_url}"\n+      icon_expr="string:toolbar-action/view"\n       visible="True">\n     <permission value="View"/>\n   </action>\n@@ -87,6 +88,7 @@\n       i18n:attributes="title"\n       title="Edit"\n       url_expr="string:${object_url}/edit"\n+      icon_expr="string:toolbar-action/edit"\n       visible="True">\n     <permission value="Modify portal content"/>\n   </action>\ndiff --git a/plone/app/contenttypes/profiles/default/types/Link.xml b/plone/app/contenttypes/profiles/default/types/Link.xml\nindex 9674c870..11858f63 100644\n--- a/plone/app/contenttypes/profiles/default/types/Link.xml\n+++ b/plone/app/contenttypes/profiles/default/types/Link.xml\n@@ -15,7 +15,7 @@\n \n   <property name="allow_discussion">False</property>\n   <property name="factory">Link</property>\n-  <property name="icon_expr"></property>\n+  <property name="icon_expr">string:contenttype/link</property>\n   <property name="link_target"></property>\n \n   <!-- Hierarchy control -->\n@@ -75,6 +75,7 @@\n       i18n:attributes="title"\n       title="View"\n       url_expr="string:${object_url}"\n+      icon_expr="string:toolbar-action/view"\n       visible="True">\n     <permission value="View"/>\n   </action>\n@@ -85,6 +86,7 @@\n       i18n:attributes="title"\n       title="Edit"\n       url_expr="string:${object_url}/edit"\n+      icon_expr="string:toolbar-action/edit"\n       visible="True">\n     <permission value="Modify portal content"/>\n   </action>\ndiff --git a/plone/app/contenttypes/profiles/default/types/News_Item.xml b/plone/app/contenttypes/profiles/default/types/News_Item.xml\nindex 59afd979..30538d7d 100644\n--- a/plone/app/contenttypes/profiles/default/types/News_Item.xml\n+++ b/plone/app/contenttypes/profiles/default/types/News_Item.xml\n@@ -15,7 +15,7 @@\n \n   <property name="allow_discussion">False</property>\n   <property name="factory">News Item</property>\n-  <property name="icon_expr"></property>\n+  <property name="icon_expr">string:contenttype/news-item</property>\n   <property name="link_target"></property>\n \n   <!-- Hierarchy control -->\n@@ -79,6 +79,7 @@\n       i18n:attributes="title"\n       title="View"\n       url_expr="string:${object_url}"\n+      icon_expr="string:toolbar-action/view"\n       visible="True">\n     <permission value="View"/>\n   </action>\n@@ -89,6 +90,7 @@\n       i18n:attributes="title"\n       title="Edit"\n       url_expr="string:${object_url}/edit"\n+      icon_expr="string:toolbar-action/edit"\n       visible="True">\n     <permission value="Modify portal content"/>\n   </action>\ndiff --git a/plone/app/contenttypes/profiles/default/types/Plone_Site.xml b/plone/app/contenttypes/profiles/default/types/Plone_Site.xml\nindex f847a020..3d72a8ff 100644\n--- a/plone/app/contenttypes/profiles/default/types/Plone_Site.xml\n+++ b/plone/app/contenttypes/profiles/default/types/Plone_Site.xml\n@@ -4,6 +4,8 @@\n     name="Plone Site"\n     xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n \n+  <property name="icon_expr">string:contenttype/plone</property>\n+\n   <property name="immediate_view">listing_view</property>\n   <property name="default_view">listing_view</property>\n   <property name="view_methods">\ndiff --git a/plone/app/contenttypes/tests/robot/keywords.txt b/plone/app/contenttypes/tests/robot/keywords.txt\nindex f9323934..ec033494 100644\n--- a/plone/app/contenttypes/tests/robot/keywords.txt\n+++ b/plone/app/contenttypes/tests/robot/keywords.txt\n@@ -84,7 +84,7 @@ the content area should not contain\n the collection should contain\n   [Arguments]  ${title}\n   Wait until page contains element  xpath=//*[@id=\'content-core\']\n-  xpath should match x times  //*[@id=\'content-core\']//*[@class=\'entry\']//a[contains(text(), \'${title}\')]  1\n+  Page should contain element  //*[@id=\'content-core\']//article//a[contains(text(), \'${title}\')]  limit=1\n \n \n the collection should not contain\ndiff --git a/plone/app/contenttypes/tests/robot/test_folderlisting.robot b/plone/app/contenttypes/tests/robot/test_folderlisting.robot\nindex 70081634..f549a71d 100644\n--- a/plone/app/contenttypes/tests/robot/test_folderlisting.robot\n+++ b/plone/app/contenttypes/tests/robot/test_folderlisting.robot\n@@ -187,24 +187,23 @@ Listing should list all content in detail\n \n Album should list all images and albums\n   the content area should contain  Test Image\n-  Page Should Contain Element  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test Image"]  1\n+  Page Should Contain Element  //div[contains(@class, "card-image")]//img[@title="Test Image"]  1\n   the content area should contain  Test News Item\n-  Page Should Contain Element  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test News Item"]  1\n+  Page Should Contain Element  //div[contains(@class, "card-image")]//img[@title="Test News Item"]  1\n   the content area should contain  Test Album Image 1\n-  Page Should Contain Element  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test Album Image 1"]  1\n+  Page Should Contain Element  //div[contains(@class, "card-image")]//img[@title="Test Album Image 1"]  1\n   the content area should contain  Test Album Image 2\n-  Page Should Contain Element  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test Album Image 2"]  1\n+  Page Should Contain Element  //div[contains(@class, "card-image")]//img[@title="Test Album Image 2"]  1\n   the content area should contain  Test Album Image 3\n-  Page Should Contain Element  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test Album Image 3"]  1\n+  Page Should Contain Element  //div[contains(@class, "card-image")]//img[@title="Test Album Image 3"]  1\n   the content area should contain  Test Sub Album Image 1\n-  Page Should Contain Element  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test Sub Album Image 1"]  1\n+  Page Should Contain Element  //div[contains(@class, "card-image")]//img[@title="Test Sub Album Image 1"]  1\n   the content area should contain  Test Sub Album Image 2\n-  Page Should Contain Element  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test Sub Album Image 2"]  1\n+  Page Should Contain Element  //div[contains(@class, "card-image")]//img[@title="Test Sub Album Image 2"]  1\n   the content area should contain  Test Sub Album Image 3\n-  Page Should Contain Element  //div[@class="photoAlbumEntry" and not(@class="photoAlbumFolder")]//img[@title="Test Sub Album Image 3"]  1\n+  Page Should Contain Element  //div[contains(@class, "card-image")]//img[@title="Test Sub Album Image 3"]  1\n   the content area should contain  Test Album\n   the content area should contain  Test Sub Album\n-  the content area should contain  Test Folder\n \n \n Setup Testcontent\ndiff --git a/plone/app/contenttypes/tests/test_behaviors_collection.py b/plone/app/contenttypes/tests/test_behaviors_collection.py\nindex 247f0471..a6aa9b92 100644\n--- a/plone/app/contenttypes/tests/test_behaviors_collection.py\n+++ b/plone/app/contenttypes/tests/test_behaviors_collection.py\n@@ -81,7 +81,7 @@ def test_collection_tabular_view(self):\n         start = browser.contents.find(\'content-core\')\n         # The test string should be within the search results.\n         self.assertTrue(\'Collection Test Page\' in\n-                        browser.contents[start:start + 1000])\n+                        browser.contents[start:start + 2000])\n \n     def test_collection_in_edit_form(self):\n         browser = self._get_browser()\ndiff --git a/plone/app/contenttypes/tests/test_behaviors_leadimage.py b/plone/app/contenttypes/tests/test_behaviors_leadimage.py\nindex 2474024e..6fda6bc5 100644\n--- a/plone/app/contenttypes/tests/test_behaviors_leadimage.py\n+++ b/plone/app/contenttypes/tests/test_behaviors_leadimage.py\n@@ -74,8 +74,8 @@ def test_lead_image_viewlet_shows_up(self):\n         self.assertTrue(\'My image caption\' in self.browser.contents)\n         self.assertTrue(\'image.jpg\' in self.browser.contents)\n \n-        self.assertTrue(\'<div class="leadImage">\' in self.browser.contents)\n+        self.assertTrue(\'<section id="section-leadimage">\' in self.browser.contents)\n \n         # But doesn\'t show up on folder_contents, which is not a default view\n         self.browser.open(self.portal_url + \'/leadimagefolder/folder_contents\')\n-        self.assertTrue(\'<div class="leadImage">\' not in self.browser.contents)\n+        self.assertTrue(\'<section id="section-leadimage">\' not in self.browser.contents)\ndiff --git a/plone/app/contenttypes/tests/test_file.py b/plone/app/contenttypes/tests/test_file.py\nindex 26a70beb..f855b296 100644\n--- a/plone/app/contenttypes/tests/test_file.py\n+++ b/plone/app/contenttypes/tests/test_file.py\n@@ -117,6 +117,7 @@ def setUp(self):\n         self.portal = self.layer[\'portal\']\n         self.request = self.layer[\'request\']\n         self.portal_url = self.portal.absolute_url()\n+        self.icons = self.portal.restrictedTraverse("@@iconresolver")\n         self.browser = Browser(app)\n         self.browser.handleErrors = False\n         self.browser.addHeader(\n@@ -168,7 +169,10 @@ def test_mime_icon_pdf_for_file_(self):\n             file_ctl.add_file(f, \'application/pdf\', \'file.pdf\')\n         self.browser.getControl(\'Save\').click()\n         self.assertTrue(self.browser.url.endswith(\'file.pdf/view\'))\n-        self.assertTrue(\'pdf.png\' in self.browser.contents)\n+        # check icon\n+        self.assertEqual(\n+            \'http://nohost/plone/++plone++bootstrap-icons/file-earmark-richtext.svg\',\n+            self._get_icon_url(self.portal["file.pdf"].file.contentType))\n \n     def test_alternative_mime_icon_doc_for_file(self):\n         mtr = self.portal.mimetypes_registry\n@@ -188,7 +192,10 @@ def test_alternative_mime_icon_doc_for_file(self):\n             file_ctl.add_file(f, \'application/msword\', \'file.doc\')\n         self.browser.getControl(\'Save\').click()\n         self.assertTrue(self.browser.url.endswith(\'file.doc/view\'))\n-        self.assertTrue(\'custom.png\' in self.browser.contents)\n+        # check icon\n+        self.assertEqual(\n+            \'http://nohost/plone/++plone++bootstrap-icons/file-earmark-code.svg\',\n+            self._get_icon_url(self.portal["file.doc"].file.contentType))\n \n     def test_mime_icon_odt_for_file_(self):\n         self.browser.open(self.portal_url)\n@@ -207,4 +214,10 @@ def test_mime_icon_odt_for_file_(self):\n                 \'file.odt\')\n         self.browser.getControl(\'Save\').click()\n         self.assertTrue(self.browser.url.endswith(\'file.odt/view\'))\n-        self.assertTrue(\'application.png\' in self.browser.contents)\n+        # check icon\n+        self.assertEqual(\n+            \'http://nohost/plone/++plone++bootstrap-icons/file-earmark-code.svg\',\n+            self._get_icon_url(self.portal["file.odt"].file.contentType))\n+\n+    def _get_icon_url(self, mime_type):\n+        return self.icons.url("mimetype-" + mime_type)\ndiff --git a/setup.py b/setup.py\nindex 6a7ecfcc..59d59899 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -5,7 +5,7 @@\n import os\n \n \n-version = \'2.2.2.dev0\'\n+version = \'3.0.0.dev0\'\n \n \n def read(*rnames):\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2021-04-23T11:56:53+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/527a40190dc76359396cc48cc3f440896e2b4624

Merge remote-tracking branch 'origin/master' into dxcontainer-siteroot

Files changed:
A news/598.feature
A plone/app/contenttypes/profiles/upgrades/1107/types.xml
A plone/app/contenttypes/profiles/upgrades/1107/types/Collection.xml
A plone/app/contenttypes/profiles/upgrades/1107/types/Document.xml
A plone/app/contenttypes/profiles/upgrades/1107/types/Event.xml
A plone/app/contenttypes/profiles/upgrades/1107/types/File.xml
A plone/app/contenttypes/profiles/upgrades/1107/types/Folder.xml
A plone/app/contenttypes/profiles/upgrades/1107/types/Image.xml
A plone/app/contenttypes/profiles/upgrades/1107/types/Link.xml
A plone/app/contenttypes/profiles/upgrades/1107/types/News_Item.xml
A plone/app/contenttypes/profiles/upgrades/1107/types/Plone_Site.xml
M CHANGES.rst
M plone/app/contenttypes/browser/link_redirect_view.py
M plone/app/contenttypes/browser/templates/document.pt
M plone/app/contenttypes/browser/templates/file.pt
M plone/app/contenttypes/browser/templates/full_view.pt
M plone/app/contenttypes/browser/templates/image.pt
M plone/app/contenttypes/browser/templates/link.pt
M plone/app/contenttypes/browser/templates/listing_tabular.pt
M plone/app/contenttypes/profiles/default/metadata.xml
M plone/app/contenttypes/setuphandlers.py
M plone/app/contenttypes/upgrades.zcml
M setup.py
D news/510.bugfix
D news/579.bugfix
D news/582.bugfix
D news/584.bugfix

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 029e2d64..409842b2 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -8,6 +8,39 @@ Changelog\n \n .. towncrier release notes start\n \n+3.0.0a1 (2021-04-20)\n+--------------------\n+\n+Breaking changes:\n+\n+\n+- Update for Plone 6 with Bootstrap markup\n+  [agitator, ale-rt, ladplone, mliebischer, pbauer, petschki, santonelli] (#589)\n+\n+\n+Bug fixes:\n+\n+\n+- Various fixes for restoring references:\n+\n+  - Migrate ``relatesTo`` AT relation to ``relatedItems`` DX relation.\n+  - In DX check the schema to see if relation field is list or item.\n+    Taken over from `collective.relationhelpers <https://github.com/collective/collective.relationhelpers/>`_.\n+  - ``restore_references``: accept ``relationship_fieldname_mapping`` argument.\n+    This must be a dictionary with a relationship name as key and fieldname as value, instead of always using ``relatedItems`` as fieldname.\n+\n+  [maurits] (#510)\n+- Use python statements in templates.\n+  [pbauer, mliebischer, ladplone] (#579)\n+- Catch AttributeError for ``getNextPreviousEnabled`` during migration.\n+  [maurits] (#582)\n+- migrate_datetimefield: do nothing when old value is None.\n+  This fixes ``AttributeError: \'NoneType\' object has no attribute \'asdatetime\'``.\n+  [maurits] (#584)\n+- Fix condition in ``document.pt``\n+  [petschki] (#596)\n+\n+\n 2.2.1 (2020-10-12)\n ------------------\n \ndiff --git a/news/510.bugfix b/news/510.bugfix\ndeleted file mode 100644\nindex c987a4b1..00000000\n--- a/news/510.bugfix\n+++ /dev/null\n@@ -1,9 +0,0 @@\n-Various fixes for restoring references:\n-\n-- Migrate ``relatesTo`` AT relation to ``relatedItems`` DX relation.\n-- In DX check the schema to see if relation field is list or item.\n-  Taken over from `collective.relationhelpers <https://github.com/collective/collective.relationhelpers/>`_.\n-- ``restore_references``: accept ``relationship_fieldname_mapping`` argument.\n-  This must be a dictionary with a relationship name as key and fieldname as value, instead of always using ``relatedItems`` as fieldname.\n-\n-[maurits]\ndiff --git a/news/579.bugfix b/news/579.bugfix\ndeleted file mode 100644\nindex b0383964..00000000\n--- a/news/579.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Use python statements in templates.\n-[pbauer, mliebischer, ladplone]\n\\ No newline at end of file\ndiff --git a/news/582.bugfix b/news/582.bugfix\ndeleted file mode 100644\nindex 8281b794..00000000\n--- a/news/582.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Catch AttributeError for ``getNextPreviousEnabled`` during migration.\n-[maurits]\ndiff --git a/news/584.bugfix b/news/584.bugfix\ndeleted file mode 100644\nindex 45024b81..00000000\n--- a/news/584.bugfix\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-migrate_datetimefield: do nothing when old value is None.\n-This fixes ``AttributeError: \'NoneType\' object has no attribute \'asdatetime\'``.\n-[maurits]\ndiff --git a/news/598.feature b/news/598.feature\nnew file mode 100644\nindex 00000000..114f3cc4\n--- /dev/null\n+++ b/news/598.feature\n@@ -0,0 +1,2 @@\n+Rework contenttype views.\n+[agitator]\n\\ No newline at end of file\ndiff --git a/plone/app/contenttypes/browser/link_redirect_view.py b/plone/app/contenttypes/browser/link_redirect_view.py\nindex 3287fd2e..ad75b9a9 100644\n--- a/plone/app/contenttypes/browser/link_redirect_view.py\n+++ b/plone/app/contenttypes/browser/link_redirect_view.py\n@@ -1,10 +1,12 @@\n # -*- coding: utf-8 -*-\n from plone.app.contenttypes.utils import replace_link_variables_by_paths\n+from plone.app.uuid.utils import uuidToObject\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.interfaces import ITypesSchema\n from Products.Five.browser import BrowserView\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n+from urllib.parse import urlparse\n from zope.component import getUtility\n \n import six\n@@ -71,6 +73,36 @@ def url(self):\n         )\n         return url\n \n+    def display_link(self):\n+        """Format the url for display \n+        """\n+    \n+        url = self.url()\n+        if \'resolveuid\' in url:\n+            uid = url.split(\'/\')[-1]\n+            obj = uuidToObject(uid)\n+            if obj:\n+                title = obj.Title()\n+                meta = \'/\'.join(obj.getPhysicalPath()[2:])\n+                if not meta.startswith(\'/\'):\n+                    meta = \'/\' + meta\n+                return {\n+                    \'title\': title,\n+                    \'meta\': meta,\n+                }\n+\n+        parsed = urlparse(url())\n+        if parsed.scheme == \'mailto\':\n+            return {\n+                \'title\': parsed.path,\n+                \'meta\': \'\',\n+            }\n+\n+        return {\n+                \'title\': url,\n+                \'meta\': \'\',\n+            }\n+\n     def absolute_target_url(self):\n         """Compute the absolute target URL."""\n         url = self.url()\ndiff --git a/plone/app/contenttypes/browser/templates/document.pt b/plone/app/contenttypes/browser/templates/document.pt\nindex 92b450a1..93c1f19b 100644\n--- a/plone/app/contenttypes/browser/templates/document.pt\n+++ b/plone/app/contenttypes/browser/templates/document.pt\n@@ -12,7 +12,9 @@\n                     tal:define="toc python:  getattr(context, \'table_of_contents\', False);">\n \n   <section id="section-text">\n-    <div id="parent-fieldname-text" tal:condition="context/text" tal:content="structure python:context.text.output_relative_to(view.context)" tal:attributes="class python: toc and \'pat-autotoc\' or \'\'">\n+    <div id="parent-fieldname-text" class="${python: toc and \'pat-autotoc\' or \'\'}"\n+         tal:condition="python:getattr(context, \'text\', None)"\n+         tal:content="structure python:context.text.output_relative_to(view.context)">\n       Text\n     </div>\n   </section>\ndiff --git a/plone/app/contenttypes/browser/templates/file.pt b/plone/app/contenttypes/browser/templates/file.pt\nindex 44418f89..59580a7d 100644\n--- a/plone/app/contenttypes/browser/templates/file.pt\n+++ b/plone/app/contenttypes/browser/templates/file.pt\n@@ -14,36 +14,43 @@\n                          mimetype_icon python: \'mimetype-\' + content_type;\n                          download_url python: \'{}/@@download/file/{}\'.format(context.absolute_url(), filename)">\n \n-  <section id="section-details" class="mb-5">\n-    <tal:icon tal:replace="structure python:icons.tag(mimetype_icon)" />\n-    <a class="" href="${python:download_url}" tal:content="python: filename">Filename</a>\n-    <small class="meta-type text-muted">\xe2\x80\x93 <span i18n:translate="image_kind_label" tal:omit-tag="">Type</span>: <span tal:replace="python: content_type">image/jpeg</span></small>\n-    <small class="meta-size text-muted">\xe2\x80\x93 <span i18n:translate="image_size_label" tal:omit-tag="">Size</span>: <span tal:define="size python: context.file.getSize()" tal:content="python: size">1000</span> kB</small>\n-  </section>\n+  <section class="section section-main">\n+    \n+    <div tal:condition="python: not view.is_videotype() and not view.is_audiotype()">\n+      <tal:icon tal:replace="structure python:icons.tag(mimetype_icon, tag_class=\'icon-x4 mb-2\')" />\n+    </div>\n \n-  <section id="section-video" tal:condition="python: view.is_videotype()">\n-    <h2 i18n:translate="heading_file_video">Video</h2>\n-    <video class="w-100" controls="controls">\n+    <video class="w-100 mb-3" controls="controls" tal:condition="python: view.is_videotype()">\n       <source src="${python:download_url}" type="${python:content_type}"></source>\n-      <tal:translation i18n:translate="embedded_video_not_supported">Sorry, your browser doesn\'t support embedded videos.</tal:translation>\n+      <tal:icon tal:replace="structure python:icons.tag(mimetype_icon, tag_class=\'icon-x4 mb-2\')" />\n+      <div i18n:translate="embedded_video_not_supported" class="small text-muted">Sorry, your browser doesn\'t support embedded videos.</div>\n     </video>\n-  </section>\n \n-  <section id="section-audio" tal:condition="python: view.is_audiotype()">\n-    <h2 i18n:translate="heading_file_audio">Audio</h2>\n-    <audio class="w-100" controls="controls">\n+    <audio class="w-100 mb-3" controls="controls" tal:condition="python:view.is_audiotype()">\n       <source tal:attributes="src python: download_url; type python: content_type"></source>\n-      <tal:translation i18n:translate="embedded_audio_not_supported">Sorry, your browser doesn\'t support embedded audio.</tal:translation>\n+      <tal:icon tal:replace="structure python:icons.tag(mimetype_icon, tag_class=\'icon-x4 mb-2\')" />\n+      <div i18n:translate="embedded_audio_not_supported" class="small text-muted">Sorry, your browser doesn\'t support embedded audio.</div>\n     </audio>\n-  </section>\n \n-  <section id="section-text" tal:condition="python: content_type.startswith(\'text\')">\n-    <h2 i18n:translate="heading_file_contents">File contents</h2>\n-    <div class="card">\n-      <div class="card-body">\n-        <pre tal:content="python: getattr(context.file, \'data\', None)" />\n+    <div class="h5 mb-2">\n+      <a href="${python:download_url}" tal:content="python: filename">Filename</a>\n+    </div>\n+\n+    <div class="metadata d-flex justify-content-center text-muted small">\n+      <div class="px-2">\n+        <tal:icon tal:replace="structure python:icons.tag(mimetype_icon, tag_class=\'icon-inline\', tag_alt=content_type)" />\n+        <span tal:replace="python: content_type">image/jpeg</span>\n+      </div>\n+      <div class="px-2">\n+        <tal:icon tal:replace="structure python:icons.tag(\'file-binary\', tag_class=\'icon-inline\', tag_alt=\'Size\')" />\n+        <span tal:define="size python: context.file.getSize()" tal:content="python: size">1000</span> kB\n       </div>\n     </div>\n+\n+  </section>\n+\n+  <section class="section section-actions">\n+    <a class="btn btn-primary download" href="${python:download_url}">Download</a>\n   </section>\n \n </metal:block>\ndiff --git a/plone/app/contenttypes/browser/templates/full_view.pt b/plone/app/contenttypes/browser/templates/full_view.pt\nindex 39f6570b..898e2c9a 100644\n--- a/plone/app/contenttypes/browser/templates/full_view.pt\n+++ b/plone/app/contenttypes/browser/templates/full_view.pt\n@@ -8,7 +8,7 @@\n <body>\n \n <metal:content-core fill-slot="content-core">\n-<metal:block define-macro="content-core" tal:define="uuid context/@@uuid |\xc2\xa0nothing">\n+<metal:block define-macro="content-core" tal:define="uuid context/@@uuid | nothing">\n \n   <metal:listing use-macro="context/@@listing_view/macros/content-core">\n     <metal:entries fill-slot="entries">\ndiff --git a/plone/app/contenttypes/browser/templates/image.pt b/plone/app/contenttypes/browser/templates/image.pt\nindex 27334ebb..765d1bd8 100644\n--- a/plone/app/contenttypes/browser/templates/image.pt\n+++ b/plone/app/contenttypes/browser/templates/image.pt\n@@ -8,66 +8,56 @@\n <body>\n \n <metal:content-core fill-slot="content-core">\n-<metal:block define-macro="content-core" tal:define="size context/image/getSize;\n-                                                     use_MB python: size > 1024*1024;\n+<metal:block define-macro="content-core" \n+             tal:define="content_type python: context.image.contentType;\n+                         size context/image/getSize; \n+                         image_dimension context/image/getImageSize; \n+                         use_MB python: size > 1024*1024;\n+                         dimension python: str(image_dimension[0])+\'x\'+str(image_dimension[1]);\n+                         filename python: context.image.filename;\n+                         mimetype_icon python: \'mimetype-\' + content_type;\n+                         download_url python: \'{}/@@download/image/{}\'.format(context.absolute_url(), filename)\n                                                      ">\n \n-  <section id="section-image">\n-\n+  <section class="section section-main">\n     <figure class="figure">\n       <a tal:attributes="href string:${context/@@plone_context_state/object_url}/image_view_fullscreen"\n          tal:define="scale context/@@images; img_tag python:scale.scale(\'image\', scale=\'large\').tag(css_class=\'figure-img img-fluid\')"\n          tal:on-error="string: Image cannot be displayed">\n         <img tal:replace="structure img_tag" />\n       </a>\n-      <figcaption class="d-flex justify-content-center mt-2 text-muted">\n-\n-          <div class="ms-3 me-3" tal:define="content_type context/image/contentType|nothing" tal:condition="content_type">\n-            <span class="meta-icon me-1">\n-              <svg width="1.0625em" height="1em" viewBox="0 0 17 16" class="bi bi-image" fill="currentColor" xmlns="http://www.w3.org/2000/svg">\n-                <path fill-rule="evenodd" d="M14.002 2h-12a1 1 0 0 0-1 1v9l2.646-2.354a.5.5 0 0 1 .63-.062l2.66 1.773 3.71-3.71a.5.5 0 0 1 .577-.094L15.002 9.5V3a1 1 0 0 0-1-1zm-12-1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2h-12zm4 4.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/>\n-              </svg>\n-            </span>\n-            <span i18n:translate="image_kind_label" class="d-none">Type</span> <span tal:replace="content_type">image/jpeg</span>\n-          </div>\n-\n-          <div class="ms-3 me-3" tal:define="size context/image/getImageSize; dimension python: str(size[0])+\'x\'+str(size[1])" tal:condition="size">\n-            <span class="meta-icon me-1">\n-              <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-aspect-ratio" fill="currentColor" xmlns="http://www.w3.org/2000/svg">\n-                <path fill-rule="evenodd" d="M0 3.5A1.5 1.5 0 0 1 1.5 2h13A1.5 1.5 0 0 1 16 3.5v9a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 0 12.5v-9zM1.5 3a.5.5 0 0 0-.5.5v9a.5.5 0 0 0 .5.5h13a.5.5 0 0 0 .5-.5v-9a.5.5 0 0 0-.5-.5h-13z"/>\n-                <path fill-rule="evenodd" d="M2 4.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1H3v2.5a.5.5 0 0 1-1 0v-3zm12 7a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1 0-1H13V8.5a.5.5 0 0 1 1 0v3z"/>\n-              </svg>\n-            </span>\n-            <span i18n:translate="image_dimension_label" class="d-none">Dimension</span> <span tal:content="dimension">800x600</span>px\n-          </div>\n-\n-          <div class="ms-3 me-3" tal:define="size context/image/getSize" tal:condition="size">\n-            <span class="meta-icon me-1">\n-              <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-file-binary" fill="currentColor" xmlns="http://www.w3.org/2000/svg">\n-                <path fill-rule="evenodd" d="M4 0h8a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm0 1a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H4z"/>\n-                <path d="M5.526 13.09c.976 0 1.524-.79 1.524-2.205 0-1.412-.548-2.203-1.524-2.203-.978 0-1.526.79-1.526 2.203 0 1.415.548 2.206 1.526 2.206zm-.832-2.205c0-1.05.29-1.612.832-1.612.358 0 .607.247.733.721L4.7 11.137a6.749 6.749 0 0 1-.006-.252zm.832 1.614c-.36 0-.606-.246-.732-.718l1.556-1.145c.003.079.005.164.005.249 0 1.052-.29 1.614-.829 1.614zm5.329.501v-.595H9.73V8.772h-.69l-1.19.786v.688L8.986 9.5h.05v2.906h-1.18V13h3z"/>\n-              </svg>\n-            </span>\n-            <span i18n:translate="image_size_label" class="d-none">File size</span> <span tal:content="size">1000</span> KB\n-          </div>\n-\n-      </figcaption>\n+    </figure>\n \n-      <div class="d-flex justify-content-center mt-4">\n-        <a type="button" class="btn btn-sm btn-outline-secondary"\n-          href="${context/@@plone_context_state/object_url}/image_view_fullscreen">\n-          <span class="meta-icon me-2">\n-            <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-arrows-fullscreen" fill="currentColor" xmlns="http://www.w3.org/2000/svg">\n-              <path fill-rule="evenodd" d="M5.828 10.172a.5.5 0 0 0-.707 0l-4.096 4.096V11.5a.5.5 0 0 0-1 0v3.975a.5.5 0 0 0 .5.5H4.5a.5.5 0 0 0 0-1H1.732l4.096-4.096a.5.5 0 0 0 0-.707zm4.344 0a.5.5 0 0 1 .707 0l4.096 4.096V11.5a.5.5 0 1 1 1 0v3.975a.5.5 0 0 1-.5.5H11.5a.5.5 0 0 1 0-1h2.768l-4.096-4.096a.5.5 0 0 1 0-.707zm0-4.344a.5.5 0 0 0 .707 0l4.096-4.096V4.5a.5.5 0 1 0 1 0V.525a.5.5 0 0 0-.5-.5H11.5a.5.5 0 0 0 0 1h2.768l-4.096 4.096a.5.5 0 0 0 0 .707zm-4.344 0a.5.5 0 0 1-.707 0L1.025 1.732V4.5a.5.5 0 0 1-1 0V.525a.5.5 0 0 1 .5-.5H4.5a.5.5 0 0 1 0 1H1.732l4.096 4.096a.5.5 0 0 1 0 .707z"/>\n-            </svg>\n-          </span>\n-          <span i18n:translate="label_click_to_view_full_image">Click to view full-size image</span>\n-        </a>\n+    <div class="h5 mb-2">\n+      <a href="${python:download_url}" tal:content="python: filename">Filename</a>\n+    </div>\n+    <div class="metadata d-flex justify-content-center text-muted small">\n+      <div class="px-2">\n+        <tal:icon tal:replace="structure python:icons.tag(mimetype_icon, tag_class=\'icon-inline\', tag_alt=content_type)" />\n+        <span i18n:translate="image_kind_label" class="d-none">Type</span>\n+        <span tal:replace="python: content_type">image/jpeg</span>\n       </div>\n-    </figure>\n+      <div class="px-2">\n+        <tal:icon tal:replace="structure python:icons.tag(\'aspect-ratio\', tag_class=\'icon-inline\', tag_alt=\'Dimension\')" />\n+        <span i18n:translate="image_dimension_label" class="d-none">Dimension</span>\n+        <span tal:replace="python: dimension">400x300</span>\n+      </div>\n+      <div class="px-2">\n+        <tal:icon tal:replace="structure python:icons.tag(\'file-binary\', tag_class=\'icon-inline\', tag_alt=\'Size\')" />\n+        <span i18n:translate="image_size_label" class="d-none">File size</span>\n+        <tal:MB condition="use_MB">${python:round(size/1024/1024, 1)} MB</tal:MB>\n+        <tal:KB condition="not: use_MB">${python:round(size/1024, 1)} KB</tal:KB>\n+      </div>\n+    </div>\n \n   </section>\n \n+  <section class="section section-actions">\n+    <a class="btn btn-primary download" href="${python:download_url}">Download</a>\n+    <a class="btn btn-primary fullscreen" href="${context/@@plone_context_state/object_url}/image_view_fullscreen"><span i18n:translate="label_click_to_view_full_image">View full-size image</span></a>\n+  </section>\n+\n+\n </metal:block>\n </metal:content-core>\n \ndiff --git a/plone/app/contenttypes/browser/templates/link.pt b/plone/app/contenttypes/browser/templates/link.pt\nindex 2815e00e..36f3a132 100644\n--- a/plone/app/contenttypes/browser/templates/link.pt\n+++ b/plone/app/contenttypes/browser/templates/link.pt\n@@ -8,30 +8,38 @@\n <body>\n \n <metal:content-core fill-slot="content-core">\n-<metal:block define-macro="content-core">\n+<metal:block define-macro="content-core"\n+             tal:define="external python:view.url().startswith(\'http\');\n+                         mail python:view.url().startswith(\'mailto\');\n+                         link python: not external and not mail;\n+                         display_link python: view.display_link()">\n \n-  <div class="alert alert-primary mb-4" role="alert" tal:define="redirect_links python:context.portal_registry[\'plone.redirect_links\']" tal:condition="python: redirect_links and checkPermission(\'Modify portal content\', context)">\n-    <strong i18n:translate="">Info</strong>\n-    <span tal:omit-tag="" i18n:translate="message_permissions_blocking_link_redirect">\n-      You see this page because you have permission to edit this link.\n-      Others will be immediately redirected to the link\'s target URL.\n-    </span>\n-  </div>\n \n-  <section id="section-details">\n+  <section class="section section-main">\n+    <div>\n+      <tal:icon tal:condition="link"\n+        tal:replace="structure python:icons.tag(\'plone-link\', tag_class=\'icon-x4 mb-2\')" />\n+      <tal:icon tal:condition="external"\n+        tal:replace="structure python:icons.tag(\'plone-link/external\', tag_class=\'icon-x4 mb-2\')" />\n+      <tal:icon tal:condition="mail"\n+        tal:replace="structure python:icons.tag(\'plone-link/mail\', tag_class=\'icon-x4 mb-2\')" />\n+    </div>\n+    <div class="h5 mb-2">\n+      <a href="" tal:attributes="href python: view.absolute_target_url()" \n+         tal:content="python: display_link[\'title\']">remote url</a>\n+    </div>\n+    <div class="metadata d-flex justify-content-center text-muted small"\n+        tal:condition="python: display_link[\'meta\']">\n+      <div tal:replace="python: display_link[\'meta\']"></div>\n+    </div>\n \n-    <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3">\n-      <div class="col mb-4">\n-        <div class="card">\n-          <div class="card-icon">\n-            <tal:icon tal:replace="structure python:icons.tag(\'link\')" />\n-          </div>\n-          <div class="card-body text-center">\n-            <strong i18n:translate="link_address_label">Adresse</strong>\n-            <p class="card-text"><a href="" class="stretched-link" tal:attributes="href python: view.absolute_target_url()" tal:content="python: view.url()">remote url</a></p>\n-          </div>\n-        </div>\n-      </div>\n+    <div class="info-redirect small text-muted mt-4" \n+      tal:define="redirect_links python:context.portal_registry[\'plone.redirect_links\']" \n+      tal:condition="python: redirect_links and checkPermission(\'Modify portal content\', context)">\n+      <span tal:omit-tag="" i18n:translate="message_permissions_blocking_link_redirect">\n+        You see this page because you have permission to edit this link.\n+        Others will be immediately redirected to the link\'s target URL.\n+      </span>\n     </div>\n \n   </section>\ndiff --git a/plone/app/contenttypes/browser/templates/listing_tabular.pt b/plone/app/contenttypes/browser/templates/listing_tabular.pt\nindex c715bf57..877b9d45 100644\n--- a/plone/app/contenttypes/browser/templates/listing_tabular.pt\n+++ b/plone/app/contenttypes/browser/templates/listing_tabular.pt\n@@ -28,7 +28,7 @@\n             <tr>\n               <th class="text-nowrap"></th>\n               <th class="text-nowrap" tal:repeat="field tabular_fields" tal:content="python:view.tabular_field_label(field)">Field name</th>\n-              <th class="text-nowrap" i18n:translate="image">Image</th>\n+              <th class="text-nowrap" i18n:translate="image" tal:condition="python:thumb_scale_table">Image</th>\n             </tr>\n           </thead>\n \ndiff --git a/plone/app/contenttypes/profiles/default/metadata.xml b/plone/app/contenttypes/profiles/default/metadata.xml\nindex 73b9cd24..687667d6 100644\n--- a/plone/app/contenttypes/profiles/default/metadata.xml\n+++ b/plone/app/contenttypes/profiles/default/metadata.xml\n@@ -1,5 +1,5 @@\n <metadata>\n- <version>1106</version>\n+ <version>1107</version>\n  <dependencies>\n   <dependency>profile-plone.app.dexterity:default</dependency>\n   <dependency>profile-plone.app.event:default</dependency>\ndiff --git a/plone/app/contenttypes/profiles/upgrades/1107/types.xml b/plone/app/contenttypes/profiles/upgrades/1107/types.xml\nnew file mode 100644\nindex 00000000..7992932d\n--- /dev/null\n+++ b/plone/app/contenttypes/profiles/upgrades/1107/types.xml\n@@ -0,0 +1,13 @@\n+<?xml version="1.0"?>\n+<object meta_type="Plone Types Tool" name="portal_types">\n+\n+ <object meta_type="Dexterity FTI" name="Collection" />\n+ <object meta_type="Dexterity FTI" name="Document" />\n+ <object meta_type="Dexterity FTI" name="Folder" />\n+ <object meta_type="Dexterity FTI" name="Link" />\n+ <object meta_type="Dexterity FTI" name="File" />\n+ <object meta_type="Dexterity FTI" name="Image" />\n+ <object meta_type="Dexterity FTI" name="News Item" />\n+ <object meta_type="Dexterity FTI" name="Event" />\n+\n+</object>\ndiff --git a/plone/app/contenttypes/profiles/upgrades/1107/types/Collection.xml b/plone/app/contenttypes/profiles/upgrades/1107/types/Collection.xml\nnew file mode 100644\nindex 00000000..c0e91930\n--- /dev/null\n+++ b/plone/app/contenttypes/profiles/upgrades/1107/types/Collection.xml\n@@ -0,0 +1,20 @@\n+<?xml version="1.0"?>\n+<object\n+    name="Collection"\n+    meta_type="Dexterity FTI"\n+    i18n:domain="plone"\n+    xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n+\n+  <property name="icon_expr">string:contenttype/collection</property>\n+\n+  <action\n+      title="View"\n+      action_id="view"\n+      icon_expr="string:toolbar-action/view" />\n+\n+  <action\n+      title="Edit"\n+      action_id="edit"\n+      icon_expr="string:toolbar-action/edit" />\n+\n+</object>\ndiff --git a/plone/app/contenttypes/profiles/upgrades/1107/types/Document.xml b/plone/app/contenttypes/profiles/upgrades/1107/types/Document.xml\nnew file mode 100644\nindex 00000000..fb666e67\n--- /dev/null\n+++ b/plone/app/contenttypes/profiles/upgrades/1107/types/Document.xml\n@@ -0,0 +1,20 @@\n+<?xml version="1.0"?>\n+<object\n+    i18n:domain="plone"\n+    meta_type="Dexterity FTI"\n+    name="Document"\n+    xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n+\n+  <property name="icon_expr">string:contenttype/document</property>\n+\n+  <action\n+      title="View"\n+      action_id="view"\n+      icon_expr="string:toolbar-action/view" />\n+\n+  <action\n+      title="Edit"\n+      action_id="edit"\n+      icon_expr="string:toolbar-action/edit" />\n+\n+</object>\ndiff --git a/plone/app/contenttypes/profiles/upgrades/1107/types/Event.xml b/plone/app/contenttypes/profiles/upgrades/1107/types/Event.xml\nnew file mode 100644\nindex 00000000..23f0ec59\n--- /dev/null\n+++ b/plone/app/contenttypes/profiles/upgrades/1107/types/Event.xml\n@@ -0,0 +1,20 @@\n+<?xml version="1.0"?>\n+<object\n+    i18n:domain="plone"\n+    meta_type="Dexterity FTI"\n+    name="Event"\n+    xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n+\n+  <property name="icon_expr">string:contenttype/event</property>\n+\n+  <action\n+      title="View"\n+      action_id="view"\n+      icon_expr="string:toolbar-action/view" />\n+\n+  <action\n+      title="Edit"\n+      action_id="edit"\n+      icon_expr="string:toolbar-action/edit" />\n+\n+</object>\ndiff --git a/plone/app/contenttypes/profiles/upgrades/1107/types/File.xml b/plone/app/contenttypes/profiles/upgrades/1107/types/File.xml\nnew file mode 100644\nindex 00000000..f4d1f9e4\n--- /dev/null\n+++ b/plone/app/contenttypes/profiles/upgrades/1107/types/File.xml\n@@ -0,0 +1,20 @@\n+<?xml version="1.0"?>\n+<object\n+    i18n:domain="plone"\n+    meta_type="Dexterity FTI"\n+    name="File"\n+    xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n+\n+  <property name="icon_expr">string:contenttype/file</property>\n+\n+  <action\n+      title="View"\n+      action_id="view"\n+      icon_expr="string:toolbar-action/view" />\n+\n+  <action\n+      title="Edit"\n+      action_id="edit"\n+      icon_expr="string:toolbar-action/edit" />\n+\n+</object>\ndiff --git a/plone/app/contenttypes/profiles/upgrades/1107/types/Folder.xml b/plone/app/contenttypes/profiles/upgrades/1107/types/Folder.xml\nnew file mode 100644\nindex 00000000..ea9b18b8\n--- /dev/null\n+++ b/plone/app/contenttypes/profiles/upgrades/1107/types/Folder.xml\n@@ -0,0 +1,20 @@\n+<?xml version="1.0"?>\n+<object\n+    i18n:domain="plone"\n+    meta_type="Dexterity FTI"\n+    name="Folder"\n+    xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n+\n+  <property name="icon_expr">string:contenttype/folder</property>\n+\n+  <action\n+      title="View"\n+      action_id="view"\n+      icon_expr="string:toolbar-action/view" />\n+\n+  <action\n+      title="Edit"\n+      action_id="edit"\n+      icon_expr="string:toolbar-action/edit" />\n+\n+</object>\ndiff --git a/plone/app/contenttypes/profiles/upgrades/1107/types/Image.xml b/plone/app/contenttypes/profiles/upgrades/1107/types/Image.xml\nnew file mode 100644\nindex 00000000..1d853e16\n--- /dev/null\n+++ b/plone/app/contenttypes/profiles/upgrades/1107/types/Image.xml\n@@ -0,0 +1,20 @@\n+<?xml version="1.0"?>\n+<object\n+    i18n:domain="plone"\n+    meta_type="Dexterity FTI"\n+    name="Image"\n+    xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n+\n+  <property name="icon_expr">string:contenttype/image</property>\n+\n+  <action\n+      title="View"\n+      action_id="view"\n+      icon_expr="string:toolbar-action/view" />\n+\n+  <action\n+      title="Edit"\n+      action_id="edit"\n+      icon_expr="string:toolbar-action/edit" />\n+\n+</object>\ndiff --git a/plone/app/contenttypes/profiles/upgrades/1107/types/Link.xml b/plone/app/contenttypes/profiles/upgrades/1107/types/Link.xml\nnew file mode 100644\nindex 00000000..bb555473\n--- /dev/null\n+++ b/plone/app/contenttypes/profiles/upgrades/1107/types/Link.xml\n@@ -0,0 +1,20 @@\n+<?xml version="1.0"?>\n+<object\n+    i18n:domain="plone"\n+    meta_type="Dexterity FTI"\n+    name="Link"\n+    xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n+\n+  <property name="icon_expr">string:contenttype/link</property>\n+\n+  <action\n+      title="View"\n+      action_id="view"\n+      icon_expr="string:toolbar-action/view" />\n+\n+  <action\n+      title="Edit"\n+      action_id="edit"\n+      icon_expr="string:toolbar-action/edit" />\n+\n+</object>\ndiff --git a/plone/app/contenttypes/profiles/upgrades/1107/types/News_Item.xml b/plone/app/contenttypes/profiles/upgrades/1107/types/News_Item.xml\nnew file mode 100644\nindex 00000000..656d74c1\n--- /dev/null\n+++ b/plone/app/contenttypes/profiles/upgrades/1107/types/News_Item.xml\n@@ -0,0 +1,20 @@\n+<?xml version="1.0"?>\n+<object\n+    i18n:domain="plone"\n+    meta_type="Dexterity FTI"\n+    name="News Item"\n+    xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n+\n+  <property name="icon_expr">string:contenttype/news-item</property>\n+\n+  <action\n+      title="View"\n+      action_id="view"\n+      icon_expr="string:toolbar-action/view" />\n+\n+  <action\n+      title="Edit"\n+      action_id="edit"\n+      icon_expr="string:toolbar-action/edit" />\n+\n+</object>\ndiff --git a/plone/app/contenttypes/profiles/upgrades/1107/types/Plone_Site.xml b/plone/app/contenttypes/profiles/upgrades/1107/types/Plone_Site.xml\nnew file mode 100644\nindex 00000000..21ddcfe1\n--- /dev/null\n+++ b/plone/app/contenttypes/profiles/upgrades/1107/types/Plone_Site.xml\n@@ -0,0 +1,9 @@\n+<?xml version="1.0"?>\n+<object\n+    i18n:domain="plone"\n+    name="Plone Site"\n+    xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n+\n+  <property name="icon_expr">string:contenttype/plone</property>\n+\n+</object>\ndiff --git a/plone/app/contenttypes/setuphandlers.py b/plone/app/contenttypes/setuphandlers.py\nindex a2261918..1ced3011 100644\n--- a/plone/app/contenttypes/setuphandlers.py\n+++ b/plone/app/contenttypes/setuphandlers.py\n@@ -39,6 +39,7 @@ def getNonInstallableProfiles(self):\n         return [\n             u\'plone.app.contenttypes:uninstall\',\n             u\'plone.app.contenttypes:default\',\n+            u\'plone.app.contenttypes:1007\',\n         ]\n \n \ndiff --git a/plone/app/contenttypes/upgrades.zcml b/plone/app/contenttypes/upgrades.zcml\nindex 0ad9f2ac..96fadb76 100644\n--- a/plone/app/contenttypes/upgrades.zcml\n+++ b/plone/app/contenttypes/upgrades.zcml\n@@ -87,4 +87,18 @@\n       handler=".upgrades.searchabletext_richtext"\n       />\n \n+  <genericsetup:registerProfile name="1007"\n+      title="Update bundles"\n+      description=\'Configuration for version 1007\'\n+      directory="profiles/upgrades/1107"\n+      for="Products.CMFPlone.interfaces.IMigratingPloneSiteRoot"\n+      provides="Products.GenericSetup.interfaces.EXTENSION" />\n+\n+  <genericsetup:upgradeDepends\n+      source="1106"\n+      destination="1107"\n+      profile="plone.app.contenttypes:default"\n+      title="Update Type icons"\n+      import_profile="plone.app.contenttypes:1007" />\n+\n </configure>\ndiff --git a/setup.py b/setup.py\nindex 59d59899..758b72c2 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -5,7 +5,7 @@\n import os\n \n \n-version = \'3.0.0.dev0\'\n+version = \'3.0.0a2.dev0\'\n \n \n def read(*rnames):\n@@ -23,16 +23,17 @@ def read(*rnames):\n       long_description=long_description,\n       # Get more strings from https://pypi.org/classifiers/\n       classifiers=[\n-          "Development Status :: 6 - Mature",\n-          "Framework :: Plone",\n-          "Framework :: Plone :: 5.2",\n-          "Framework :: Plone :: Core",\n-          "License :: OSI Approved :: GNU General Public License (GPL)",\n-          "Programming Language :: Python",\n-          "Programming Language :: Python :: 2.7",\n-          "Programming Language :: Python :: 3.6",\n-          "Programming Language :: Python :: 3.7",\n-          "Programming Language :: Python :: 3.8",\n+        "Development Status :: 5 - Production/Stable",\n+        "Environment :: Web Environment",\n+        "Framework :: Plone",\n+        "Framework :: Plone :: 6.0",\n+        "Framework :: Plone :: Core",\n+        "Framework :: Zope :: 5",\n+        "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",\n+        "Operating System :: OS Independent",\n+        "Programming Language :: Python",\n+        "Programming Language :: Python :: 3.7",\n+        "Programming Language :: Python :: 3.8",\n       ],\n       keywords=\'plone content types dexterity\',\n       author=\'Plone Foundation\',\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2021-04-23T15:24:53+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/6fc1777d79ea08fb1553d1e0549e988ed1c1dfef

url is a string, so it is not callable

Files changed:
M plone/app/contenttypes/browser/link_redirect_view.py

b"diff --git a/plone/app/contenttypes/browser/link_redirect_view.py b/plone/app/contenttypes/browser/link_redirect_view.py\nindex ad75b9a9..fc8e7419 100644\n--- a/plone/app/contenttypes/browser/link_redirect_view.py\n+++ b/plone/app/contenttypes/browser/link_redirect_view.py\n@@ -91,7 +91,7 @@ def display_link(self):\n                     'meta': meta,\n                 }\n \n-        parsed = urlparse(url())\n+        parsed = urlparse(url)\n         if parsed.scheme == 'mailto':\n             return {\n                 'title': parsed.path,\n"

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2021-04-23T17:52:49+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/0a319ee00b17efec4beab4cc6a70be79d4be7bd3

Merge remote-tracking branch 'origin/master' into dxcontainer-siteroot

Files changed:
M plone/app/contenttypes/tests/test_image.py

b"diff --git a/plone/app/contenttypes/tests/test_image.py b/plone/app/contenttypes/tests/test_image.py\nindex 5b2ddbd4..58d305c5 100644\n--- a/plone/app/contenttypes/tests/test_image.py\n+++ b/plone/app/contenttypes/tests/test_image.py\n@@ -192,7 +192,7 @@ def test_image_view_fullscreen(self):\n         with io.FileIO(image_path, 'rb') as f:\n             image_ctl.add_file(f, 'image/png', 'image.jpg')\n         self.browser.getControl('Save').click()\n-        self.browser.getLink('Click to view full-size image').click()\n+        self.browser.getLink(url='/image_view_fullscreen').click()\n         self.assertTrue(\n             self.browser.url.endswith('image.jpg/image_view_fullscreen')\n         )\n"

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2021-08-21T01:39:12+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.contenttypes/commit/594d52ab5a3c26694b031c7bbcc4052574ea241a

Merge remote-tracking branch 'origin/master' into dxcontainer-siteroot

Files changed:
M CHANGES.rst
M setup.py
D news/598.feature

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 409842b2..ad90db56 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -8,6 +8,16 @@ Changelog\n \n .. towncrier release notes start\n \n+3.0.0a2 (2021-05-11)\n+--------------------\n+\n+New features:\n+\n+\n+- Rework contenttype views.\n+  [agitator] (#598)\n+\n+\n 3.0.0a1 (2021-04-20)\n --------------------\n \ndiff --git a/news/598.feature b/news/598.feature\ndeleted file mode 100644\nindex 114f3cc4..00000000\n--- a/news/598.feature\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Rework contenttype views.\n-[agitator]\n\\ No newline at end of file\ndiff --git a/setup.py b/setup.py\nindex 758b72c2..08f91fcb 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -5,24 +5,23 @@\n import os\n \n \n-version = \'3.0.0a2.dev0\'\n+version = "3.0.0a3.dev0"\n \n \n def read(*rnames):\n     return open(os.path.join(os.path.dirname(__file__), *rnames)).read()\n \n \n-long_description = \\\n-    read(\'README.rst\') + \'\\n\\n\' + \\\n-    read(\'CHANGES.rst\')\n+long_description = read("README.rst") + "\\n\\n" + read("CHANGES.rst")\n \n \n-setup(name=\'plone.app.contenttypes\',\n-      version=version,\n-      description="Default content types for Plone based on Dexterity",\n-      long_description=long_description,\n-      # Get more strings from https://pypi.org/classifiers/\n-      classifiers=[\n+setup(\n+    name="plone.app.contenttypes",\n+    version=version,\n+    description="Default content types for Plone based on Dexterity",\n+    long_description=long_description,\n+    # Get more strings from https://pypi.org/classifiers/\n+    classifiers=[\n         "Development Status :: 5 - Production/Stable",\n         "Environment :: Web Environment",\n         "Framework :: Plone",\n@@ -34,55 +33,55 @@ def read(*rnames):\n         "Programming Language :: Python",\n         "Programming Language :: Python :: 3.7",\n         "Programming Language :: Python :: 3.8",\n-      ],\n-      keywords=\'plone content types dexterity\',\n-      author=\'Plone Foundation\',\n-      author_email=\'plone-developers@lists.sourceforge.net\',\n-      url=\'https://github.com/plone/plone.app.contenttypes\',\n-      license=\'GPL\',\n-      packages=find_packages(),\n-      namespace_packages=[\'plone\', \'plone.app\'],\n-      include_package_data=True,\n-      zip_safe=False,\n-      install_requires=[\n-          \'setuptools\',\n-          \'Products.CMFPlone\',\n-          \'plone.app.contentmenu\',\n-          \'plone.app.event >= 2.0a4\',\n-          \'plone.app.dexterity >= 2.0.7\',  # has a fix for INameFromFilename\n-          \'plone.app.linkintegrity\',\n-          \'plone.app.querystring >= 1.2.2\',  # custom_query support\n-          \'plone.dexterity >= 2.2.1\',  # behaviors can provide primaryfields\n-          \'plone.app.relationfield\',\n-          \'plone.namedfile [blobs] >= 4.2.0\',\n-          \'plone.app.versioningbehavior\',\n-          \'plone.app.vocabularies>4.1.2\',\n-          \'plone.app.lockingbehavior\',\n-          \'plone.behavior >= 1.3.0\',\n-          \'pytz\',\n-          \'plone.app.z3cform>=1.1.0.dev0\',\n-          \'six\',\n-          \'zope.deprecation\',\n-      ],\n-      extras_require={\n-          \'test\': [\n-              \'lxml\',\n-              \'plone.app.robotframework [debug] > 0.9.8\',  # create image and file content for Image, File and News Item if not given.  # noqa\n-              \'plone.app.testing [robot] >= 4.2.4\',  # we need ROBOT_TEST_LEVEL\n-          ],\n-          \'archetypes\': [\n-              \'archetypes.schemaextender\',\n-              \'Products.ATContentTypes\',\n-              \'Products.contentmigration >= 2.1.8.dev0\',\n-              \'plone.app.referenceablebehavior\',\n-          ],\n-          \'atrefs\': [\n-              \'plone.app.referenceablebehavior\',\n-          ],\n-      },\n-      entry_points="""\n+    ],\n+    keywords="plone content types dexterity",\n+    author="Plone Foundation",\n+    author_email="plone-developers@lists.sourceforge.net",\n+    url="https://github.com/plone/plone.app.contenttypes",\n+    license="GPL",\n+    packages=find_packages(),\n+    namespace_packages=["plone", "plone.app"],\n+    include_package_data=True,\n+    zip_safe=False,\n+    install_requires=[\n+        "setuptools",\n+        "Products.CMFPlone",\n+        "plone.app.contentmenu",\n+        "plone.app.event >= 2.0a4",\n+        "plone.app.dexterity >= 2.0.7",  # has a fix for INameFromFilename\n+        "plone.app.linkintegrity",\n+        "plone.app.querystring >= 1.2.2",  # custom_query support\n+        "plone.dexterity >= 2.2.1",  # behaviors can provide primaryfields\n+        "plone.app.relationfield",\n+        "plone.namedfile [blobs] >= 4.2.0",\n+        "plone.app.versioningbehavior",\n+        "plone.app.vocabularies>4.1.2",\n+        "plone.app.lockingbehavior",\n+        "plone.behavior >= 1.3.0",\n+        "pytz",\n+        "plone.app.z3cform>=1.1.0.dev0",\n+        "six",\n+        "zope.deprecation",\n+    ],\n+    extras_require={\n+        "test": [\n+            "lxml",\n+            "plone.app.robotframework [debug] > 0.9.8",  # create image and file content for Image, File and News Item if not given.  # noqa\n+            "plone.app.testing [robot] >= 4.2.4",  # we need ROBOT_TEST_LEVEL\n+        ],\n+        "archetypes": [\n+            "archetypes.schemaextender",\n+            "Products.ATContentTypes",\n+            "Products.contentmigration >= 2.1.8.dev0",\n+            "plone.app.referenceablebehavior",\n+        ],\n+        "atrefs": [\n+            "plone.app.referenceablebehavior",\n+        ],\n+    },\n+    entry_points="""\n       # -*- Entry points: -*-\n       [z3c.autoinclude.plugin]\n       target = plone\n       """,\n-      )\n+)\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2021-09-11T23:09:14+02:00
Author: Maurits van Rees (mauritsvanrees) <m.van.rees@zestsoftware.nl>
Commit: https://github.com/plone/plone.app.contenttypes/commit/324e6996f8dd450d9a3fba2886507ae852a0a1d5

Merge pull request #475 from plone/dxcontainer-siteroot

Dx container site root

Files changed:
A news/475.breaking
M plone/app/contenttypes/setuphandlers.py
M plone/app/contenttypes/tests/test_content_profile.py

b'diff --git a/news/475.breaking b/news/475.breaking\nnew file mode 100644\nindex 00000000..d5345a2d\n--- /dev/null\n+++ b/news/475.breaking\n@@ -0,0 +1,4 @@\n+Plone Site is now a DX container. This means that the front-page object no\n+longer exists.\n+Refs PLIP 2454.\n+[jaroel]\ndiff --git a/plone/app/contenttypes/setuphandlers.py b/plone/app/contenttypes/setuphandlers.py\nindex 80e81228..1ced3011 100644\n--- a/plone/app/contenttypes/setuphandlers.py\n+++ b/plone/app/contenttypes/setuphandlers.py\n@@ -154,51 +154,42 @@ def _setup_constrains(container, allowed_types):\n \n \n def create_frontpage(portal, target_language):\n-    frontpage_id = \'front-page\'\n-\n-    if frontpage_id not in portal.keys():\n-        title = _translate(\n-            u\'front-title\',\n-            target_language,\n-            u\'Welcome to Plone\'\n-        )\n-        description = _translate(\n-            u\'front-description\', target_language,\n-            u\'Congratulations! You have successfully installed Plone.\'\n-        )\n-        content = createContent(\n-            \'Document\', id=frontpage_id,\n-            title=title,\n-            description=description,\n-            language=target_language.replace(\'_\', \'-\').lower())\n-        content = addContentToContainer(portal, content)\n-        front_text = None\n-        if target_language != \'en\':\n-            util = queryUtility(ITranslationDomain, \'plonefrontpage\')\n-            if util is not None:\n-                translated_text = util.translate(\n-                    u\'front-text\',\n-                    target_language=target_language\n-                )\n-                if translated_text != u\'front-text\':\n-                    front_text = translated_text\n-        request = getattr(portal, \'REQUEST\', None)\n-        if front_text is None and request is not None:\n-            view = queryMultiAdapter(\n-                (portal, request),\n-                name=\'plone-frontpage-setup\'\n+    if portal.text:\n+        # Do not overwrite existing content\n+        return\n+    portal.title = _translate(\n+        u\'front-title\',\n+        target_language,\n+        u\'Welcome to Plone\'\n+    )\n+    portal.description = _translate(\n+        u\'front-description\', target_language,\n+        u\'Congratulations! You have successfully installed Plone.\'\n+    )\n+    front_text = None\n+    if target_language != \'en\':\n+        util = queryUtility(ITranslationDomain, \'plonefrontpage\')\n+        if util is not None:\n+            translated_text = util.translate(\n+                u\'front-text\',\n+                target_language=target_language\n             )\n-            if view is not None:\n-                front_text = bodyfinder(view.index()).strip()\n-        content.text = RichTextValue(\n-            front_text,\n-            \'text/html\',\n-            \'text/x-html-safe\'\n+            if translated_text != u\'front-text\':\n+                front_text = translated_text\n+    request = getattr(portal, \'REQUEST\', None)\n+    if front_text is None and request is not None:\n+        view = queryMultiAdapter(\n+            (portal, request),\n+            name=\'plone-frontpage-setup\'\n         )\n-\n-        portal.setDefaultPage(\'front-page\')\n-        _publish(content)\n-        content.reindexObject()\n+        if view is not None:\n+            front_text = bodyfinder(view.index()).strip()\n+    portal.text = RichTextValue(\n+        front_text,\n+        \'text/html\',\n+        \'text/x-html-safe\'\n+    )\n+    portal.reindexObject()\n \n \n def create_news_topic(portal, target_language):\ndiff --git a/plone/app/contenttypes/tests/test_content_profile.py b/plone/app/contenttypes/tests/test_content_profile.py\nindex 86d33d06..b2f1c471 100644\n--- a/plone/app/contenttypes/tests/test_content_profile.py\n+++ b/plone/app/contenttypes/tests/test_content_profile.py\n@@ -49,22 +49,13 @@ def setUp(self):\n     #   front-page tests   #\n     # #################### #\n \n-    def test_frontpage_was_created(self):\n-        # Was the object created?\n-        obj = self.portal[\'front-page\']\n-        self.assertEqual(obj.portal_type, \'Document\')\n-\n-    def test_frontpage_is_default_page(self):\n-        # Has the object been set on the container as the default page?\n-        self.assertEqual(self.portal.default_page, \'front-page\')\n-\n-    def test_frontpage_is_published(self):\n-        # Has the content object been published?\n-        front_page = self.portal[\'front-page\']\n-        current_state = self.portal_workflow.getInfoFor(\n-            front_page,\n-            \'review_state\')\n-        self.assertEqual(current_state, \'published\')\n+    def test_homepage(self):\n+        self.assertEqual(self.portal.title, "Welcome to Plone")\n+        self.assertEqual(\n+            self.portal.description,\n+            "Congratulations! You have successfully installed Plone."\n+        )\n+        self.assertIn("Welcome!", self.portal.text.raw)\n \n     # ################# #\n     #   Members tests   #\n'

