Repository: mockup


Branch: refs/heads/master
Date: 2017-06-06T23:12:52Z
Author: Oshane Bailey (b4oshany) <b4.oshany@gmail.com>
Commit: https://github.com/plone/mockup/commit/ed84bda4d4a4bdaabfbe62c069bd5d596d8f8179

Add file search functionality to the filemanager pattern.

Files changed:
A mockup/patterns/filemanager/js/filesearch.js
M mockup/patterns/filemanager/pattern.js

diff --git a/mockup/patterns/filemanager/js/filesearch.js b/mockup/patterns/filemanager/js/filesearch.js
new file mode 100644
index 00000000..be5c35d1
--- /dev/null
+++ b/mockup/patterns/filemanager/js/filesearch.js
@@ -0,0 +1,73 @@
+define([
+  'jquery',
+  'underscore',
+  'mockup-patterns-filemanager-url/js/basepopover',
+  'translate'
+], function($, _, PopoverView, _t) {
+  'use strict';
+
+  var FileSearchView = PopoverView.extend({
+    className: 'popover filesearch',
+    title: _.template('<%= _t("File Search") %>'),
+    content: _.template(
+      '<form>' +
+        '<div class="input-group">' +
+          '<input type="text" class="search form-control" ' +
+                  'id="file-search-field" placeholder="<%= _t("Find theme resource in plone") %>">' +
+          '<span class="input-group-btn">' +
+            '<input type="submit" class="btn btn-primary" value="<%= _t("Search") %>"/>' +
+          '</span>' +
+        '</div>' +
+      '</form>' +
+      '<ul class="results list-group">' +
+      '</ul>'
+    ),
+    render: function() {
+      var self = this;
+      PopoverView.prototype.render.call(this);
+      self.$form = self.$('form');
+      self.$results = self.$('.results');
+      self.$form.submit(function(e) {
+        e.preventDefault();
+        $.ajax({
+          url: self.app.options.resourceSearchUrl,
+          dataType: 'json',
+          success: function(data) {
+            self.$results.empty();
+            _.each(data, function(item) {
+              var $item = $(
+                '<li class="list-group-item" data-id="' + item.id + '">' +
+                  '<span class="badge"><a href=#">' + _t('Customize') + '</a></span>' +
+                  item.id +
+                '</li>');
+              $('a', $item).click(function(e) {
+                e.preventDefault();
+                self.customize($(this).parents('li').eq(0).attr('data-id'));
+              });
+              self.$results.append($item);
+            });
+          }
+        });
+      });
+      return self;
+    },
+    customize: function(resource) {
+      var self = this;
+      self.app.doAction('customize', {
+        type: 'POST',
+        data: {
+          resource: resource
+        },
+        success: function(data) {
+          self.hide();
+          // clear out
+          self.$('input.search').attr('value', '');
+          self.$results.empty();
+          self.app.refreshTree();
+        }
+      });
+    }
+  });
+
+  return FileSearchView;
+});
diff --git a/mockup/patterns/filemanager/pattern.js b/mockup/patterns/filemanager/pattern.js
index 24a14c54..5ab7b96a 100644
--- a/mockup/patterns/filemanager/pattern.js
+++ b/mockup/patterns/filemanager/pattern.js
@@ -42,6 +42,7 @@ define([
   'mockup-ui-url/views/buttongroup',
   'mockup-patterns-filemanager-url/js/addnew',
   'mockup-patterns-filemanager-url/js/newfolder',
+  'mockup-patterns-filemanager-url/js/filesearch',
   'mockup-patterns-filemanager-url/js/delete',
   'mockup-patterns-filemanager-url/js/customize',
   'mockup-patterns-filemanager-url/js/rename',
@@ -51,6 +52,7 @@ define([
   'text!mockup-ui-url/templates/popover.xml'
 ], function($, Base, _, Tree, TextEditor, AppTemplate, Toolbar,
   ButtonView, ButtonGroup, AddNewView, NewFolderView, DeleteView,
+  FileSearchView,
   CustomizeView, RenameView, UploadView, _t, utils) {
   'use strict';
 
@@ -135,6 +137,16 @@ define([
         }),
         app: self
       });
+      var fileSearchView = new FileSearchView({
+        triggerView: new ButtonView({
+          id: 'filesarch',
+          title: _t('File Search'),
+          tooltip: _t('Find theme resource in plone'),
+          icon: 'file',
+          context: 'default'
+        }),
+        app: self
+      });
       var renameView = new RenameView({
         triggerView: new ButtonView({
           id: 'rename',
@@ -159,12 +171,14 @@ define([
       self.views = [
         newFolderView,
         addNewView,
+        fileSearchView,
         renameView,
         deleteView
       ];
       var mainButtons = [
         self.saveBtn,
         newFolderView.triggerView,
+        fileSearchView.triggerView,
         addNewView.triggerView,
         renameView.triggerView,
         deleteView.triggerView


Repository: mockup


Branch: refs/heads/master
Date: 2017-06-11T23:10:19-05:00
Author: Oshane Bailey (b4oshany) <b4.oshany@gmail.com>
Commit: https://github.com/plone/mockup/commit/85981066f4b3d808a84e188f075835e14506a85c

Closes #772, search for files and text within files.

Files changed:
A mockup/js/ui/templates/dropdown.xml
A mockup/js/ui/views/anchor.js
A mockup/js/ui/views/dropdown.js
A mockup/patterns/filemanager/js/findfile.js
A mockup/patterns/filemanager/js/findinfiles.js
A mockup/patterns/filemanager/templates/popover.xml
M CHANGES.rst
M mockup/patterns/filemanager/js/basepopover.js
M mockup/patterns/filemanager/pattern.filemanager.less
M mockup/patterns/filemanager/pattern.js
M mockup/patterns/filemanager/templates/app.xml
M mockup/patterns/relateditems/pattern.js
D mockup/patterns/filemanager/js/filesearch.js

diff --git a/CHANGES.rst b/CHANGES.rst
index 5d839f8a..a74c15fe 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,12 +10,17 @@ Breaking changes:
 
 New features:
 
- - make thumb size in folder contents listing adjustable/supressable 
+ - Search for files and opening the file upon click
+ - Search for text within files and opening the file upon click
+ - Added Bootstrap Dropdown menu to the UI views
+ - Added Anchor (a) tag to the UI views
+
+ - make thumb size in folder contents listing adjustable/supressable
    replace meaningless paper clip icon (fontello) with mime type icons
    from mimetype registry
    https://github.com/plone/Products.CMFPlone/issues/1734
    [fgrcon]
- 
+
 - For ``pat-modal``, let the ajax modal variant acquire it's ajax url when the modal is shown instead when the pattern is initialized.
   This makes the modal respect a dynamically changed href attribute on a anchor tag, after it was initialized.
   [thet]
diff --git a/mockup/js/ui/templates/dropdown.xml b/mockup/js/ui/templates/dropdown.xml
new file mode 100644
index 00000000..ffb2492a
--- /dev/null
+++ b/mockup/js/ui/templates/dropdown.xml
@@ -0,0 +1,9 @@
+
+<a style="padding-top: 8px" href="#" class="btn btn-default dropdown-toggle" type="button" id="dropdown-menu-" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
+  <span class="dropdown-title">
+
+  </span>
+  <span class="caret"></span>
+</a>
+<ul class="dropdown-menu items dropdown-content" aria-labelledby="dropdown-menu-">
+</ul>
diff --git a/mockup/js/ui/views/anchor.js b/mockup/js/ui/views/anchor.js
new file mode 100644
index 00000000..df83e45e
--- /dev/null
+++ b/mockup/js/ui/views/anchor.js
@@ -0,0 +1,56 @@
+define([
+  'underscore',
+  'mockup-ui-url/views/base',
+  'mockup-patterns-tooltip'
+], function(_, BaseView, Tooltip) {
+  'use strict';
+
+  var AnchorView = BaseView.extend({
+    tagName: 'a',
+    className: 'alink',
+    eventPrefix: 'button',
+    context: 'default',
+    idPrefix: 'alink-',
+    attributes: {
+      'href': '#'
+    },
+    extraClasses: [],
+    tooltip: null,
+    template: '<% if (icon) { %><span class="glyphicon glyphicon-<%= icon %>"></span><% } %> <%= title %>',
+    events: {
+      'click': 'handleClick'
+    },
+    initialize: function(options) {
+      if (!options.id) {
+        var title = options.title || '';
+        options.id = title !== '' ? title.toLowerCase().replace(' ', '-') : this.cid;
+      }
+      BaseView.prototype.initialize.apply(this, [options]);
+
+      this.on('render', function() {
+        this.$el.attr('title', this.options.title || '');
+        this.$el.attr('aria-label', this.options.title || this.options.tooltip || '');
+        _.each(this.extraClasses, function(klass){
+          this.$el.addClass(klass);
+        });
+      }, this);
+    },
+    handleClick: function(e) {
+      e.preventDefault();
+      if (!this.$el.prop('disabled')) {
+        this.uiEventTrigger('click', this, e);
+      }
+    },
+    serializedModel: function() {
+      return _.extend({'icon': '', 'title': ''}, this.options);
+    },
+    disable: function() {
+      this.$el.prop('disabled', true);
+    },
+    enable: function() {
+      this.$el.prop('disabled', false);
+    }
+  });
+
+  return AnchorView;
+});
diff --git a/mockup/js/ui/views/dropdown.js b/mockup/js/ui/views/dropdown.js
new file mode 100644
index 00000000..6e4505a0
--- /dev/null
+++ b/mockup/js/ui/views/dropdown.js
@@ -0,0 +1,56 @@
+define([
+  'underscore',
+  'mockup-ui-url/views/buttongroup',
+  'text!mockup-ui-url/templates/dropdown.xml',
+], function(_, ButtonGroup, DropdownTemplate) {
+  'use strict';
+
+  var DropdownView = ButtonGroup.extend({
+    idPrefix: 'btngroup-dropdown-',
+    template: DropdownTemplate,
+    itemContainer: "ul.dropdown-content",
+    title: null,
+
+    initialize: function(options) {
+      ButtonGroup.prototype.initialize.apply(this, [options]);
+
+      this.on('render', function() {
+        this.renderTitle();
+      }, this);
+    },
+
+    renderTitle: function() {
+      var title = this.options.title;
+      if(this.options.title == undefined){
+        title = this.title;
+        if(this.title == null){
+          title = "Menu Option";
+        }
+      }
+      this.$('.dropdown-title').empty().append(title);
+    },
+
+    renderItems: function() {
+      var $container;
+
+      if (this.itemContainer !== null) {
+        $container = $(this.itemContainer, this.$el);
+        if ($container.length === 0) {
+          throw 'Item Container element not found.';
+        }
+      } else {
+        $container = this.$el;
+      }
+
+      var $item = null;
+      _.each(this.items, function(view) {
+        $item = $("<li></li>");
+        $item.append(view.render().$el.removeClass("btn"));
+        $container.append($item);
+      }, this);
+    },
+
+  });
+
+  return DropdownView;
+});
diff --git a/mockup/patterns/filemanager/js/basepopover.js b/mockup/patterns/filemanager/js/basepopover.js
index fee2ab53..61796918 100644
--- a/mockup/patterns/filemanager/js/basepopover.js
+++ b/mockup/patterns/filemanager/js/basepopover.js
@@ -1,22 +1,52 @@
 define([
   'underscore',
-  'mockup-ui-url/views/popover'
-], function(_, PopoverView) {
+  'mockup-ui-url/views/popover',
+  'text!mockup-patterns-filemanager-url/templates/popover.xml',
+], function(_, PopoverView, PopoverTemplate) {
   'use strict';
 
   var FileManagerPopover = PopoverView.extend({
     className: 'popover',
     title: _.template('nothing'),
     content: _.template('<div/>'),
+    template: PopoverTemplate,
     initialize: function(options) {
       this.app = options.app;
       PopoverView.prototype.initialize.apply(this, [options]);
     },
+    afterRender: function () {
+      var self = this;
+      self.$el.find(".popover-close").click(function(e){
+        self.hide(true);
+      });
+      return self;
+    },
+    getBodyClassName: function(){
+      var name = 'popover-';
+      if(this.options.id){
+        name += this.options.id + '-';
+      }
+      name += 'active';
+      return name;
+    },
     render: function() {
       var self = this;
       PopoverView.prototype.render.call(this);
       return self;
     },
+    hide: function(closePopover) {
+      if(this.closeOnOutClick || closePopover == true){
+        this.opened = false;
+        this.$el.removeClass('active');
+        if (this.triggerView) {
+          this.triggerView.$el.removeClass('active');
+          this.triggerView.$el.attr('aria-hidden', 'true');
+        }
+        this.uiEventTrigger('hide', this);
+        this.$el.attr('aria-hidden', 'true');
+        $('body').removeClass(this.getBodyClassName());
+      }
+    },
     toggle: function(button, e) {
       PopoverView.prototype.toggle.apply(this, [button, e]);
       var self = this;
diff --git a/mockup/patterns/filemanager/js/filesearch.js b/mockup/patterns/filemanager/js/filesearch.js
deleted file mode 100644
index be5c35d1..00000000
--- a/mockup/patterns/filemanager/js/filesearch.js
+++ /dev/null
@@ -1,73 +0,0 @@
-define([
-  'jquery',
-  'underscore',
-  'mockup-patterns-filemanager-url/js/basepopover',
-  'translate'
-], function($, _, PopoverView, _t) {
-  'use strict';
-
-  var FileSearchView = PopoverView.extend({
-    className: 'popover filesearch',
-    title: _.template('<%= _t("File Search") %>'),
-    content: _.template(
-      '<form>' +
-        '<div class="input-group">' +
-          '<input type="text" class="search form-control" ' +
-                  'id="file-search-field" placeholder="<%= _t("Find theme resource in plone") %>">' +
-          '<span class="input-group-btn">' +
-            '<input type="submit" class="btn btn-primary" value="<%= _t("Search") %>"/>' +
-          '</span>' +
-        '</div>' +
-      '</form>' +
-      '<ul class="results list-group">' +
-      '</ul>'
-    ),
-    render: function() {
-      var self = this;
-      PopoverView.prototype.render.call(this);
-      self.$form = self.$('form');
-      self.$results = self.$('.results');
-      self.$form.submit(function(e) {
-        e.preventDefault();
-        $.ajax({
-          url: self.app.options.resourceSearchUrl,
-          dataType: 'json',
-          success: function(data) {
-            self.$results.empty();
-            _.each(data, function(item) {
-              var $item = $(
-                '<li class="list-group-item" data-id="' + item.id + '">' +
-                  '<span class="badge"><a href=#">' + _t('Customize') + '</a></span>' +
-                  item.id +
-                '</li>');
-              $('a', $item).click(function(e) {
-                e.preventDefault();
-                self.customize($(this).parents('li').eq(0).attr('data-id'));
-              });
-              self.$results.append($item);
-            });
-          }
-        });
-      });
-      return self;
-    },
-    customize: function(resource) {
-      var self = this;
-      self.app.doAction('customize', {
-        type: 'POST',
-        data: {
-          resource: resource
-        },
-        success: function(data) {
-          self.hide();
-          // clear out
-          self.$('input.search').attr('value', '');
-          self.$results.empty();
-          self.app.refreshTree();
-        }
-      });
-    }
-  });
-
-  return FileSearchView;
-});
diff --git a/mockup/patterns/filemanager/js/findfile.js b/mockup/patterns/filemanager/js/findfile.js
new file mode 100644
index 00000000..d4c0c3dd
--- /dev/null
+++ b/mockup/patterns/filemanager/js/findfile.js
@@ -0,0 +1,101 @@
+define([
+  'jquery',
+  'underscore',
+  'mockup-patterns-filemanager-url/js/basepopover',
+  'translate'
+], function($, _, PopoverView, _t) {
+  'use strict';
+
+  var FindFile = PopoverView.extend({
+    className: 'popover filesearch',
+    closeOnOutClick: false,
+    backdropOptions: {
+      zIndex: '1009',
+      opacity: '0.4',
+      className: 'backdrop backdrop-popover',
+      classActiveName: 'backdrop-active',
+      closeOnEsc: false,
+      closeOnClick: false
+    },
+    title: _.template('<%= _t("Find File") %>'),
+    content: _.template(
+      '<form>' +
+        '<div class="input-group">' +
+          '<input type="text" class="search form-control" ' +
+                  'id="file-search-field" placeholder="<%= _t("Find theme resource in plone") %>">' +
+        '</div>' +
+        '<div class="input-group">' +
+          '<input type="submit" class="btn btn-primary" value="<%= _t("Search") %>"/>' +
+        '</div>' +
+      '</form><br/>' +
+      '<ul class="results list-group">' +
+      '</ul>'
+    ),
+    appendToResults: function(item){
+      var self = this;
+      var $item = $(
+        '<li class="list-group-item">' +
+          '<span class="badge"><a data-target="' + item.path + '" href=#">' +
+          _t(item.filename) + '</a></span>' +
+        '</li>');
+      $('a', $item).click(function(e) {
+        e.preventDefault();
+        self.findfile($(this).attr('data-target'));
+      });
+      self.$results.append($item);
+    },
+    filterFiles: function(patt, data){
+      var self = this;
+      _.each(data, function(item) {
+        if(item.folder){
+          self.filterFiles(patt, item.children);
+        }else{
+          if(patt.test(item.filename)){
+            self.appendToResults(item);
+            self.noMatches++;
+          }
+        }
+      });
+    },
+    render: function() {
+      var self = this;
+      PopoverView.prototype.render.call(this);
+      self.$form = self.$('form');
+      self.$searchFor = self.$("input");
+      self.$results = self.$('.results');
+      self.$form.submit(function(e) {
+        e.preventDefault();
+        $.ajax({
+          url: self.app.options.actionUrl + '?action=dataTree',
+          dataType: 'json',
+          success: function(data) {
+            self.$results.empty();
+            self.noMatches = 0;
+            var searchFor = self.$searchFor.val();
+            var patt = new RegExp(searchFor, "g");
+            self.filterFiles(patt, data);
+            if(self.noMatches == 0){
+              self.$results.append("<span>No results found for " + searchFor + "</span>");
+            }
+          }
+        });
+      });
+      return self;
+    },
+    findfile: function(resource) {
+      var self = this;
+      self.app.doAction('getFile', {
+        data: {
+          path: resource
+        },
+        dataType: 'json',
+        success: function(data) {
+          self.app.fileData[resource] = data;
+          self.app.openEditor(resource);
+        }
+      });
+    }
+  });
+
+  return FindFile;
+});
diff --git a/mockup/patterns/filemanager/js/findinfiles.js b/mockup/patterns/filemanager/js/findinfiles.js
new file mode 100644
index 00000000..904741f9
--- /dev/null
+++ b/mockup/patterns/filemanager/js/findinfiles.js
@@ -0,0 +1,134 @@
+define([
+  'jquery',
+  'underscore',
+  'mockup-patterns-filemanager-url/js/basepopover',
+  'translate'
+], function($, _, PopoverView, _t) {
+  'use strict';
+
+  var FindInFiles = PopoverView.extend({
+    className: 'popover filesearch',
+    closeOnOutClick: false,
+    backdropOptions: {
+      zIndex: '1009',
+      opacity: '0.4',
+      className: 'backdrop backdrop-popover',
+      classActiveName: 'backdrop-active',
+      closeOnEsc: false,
+      closeOnClick: false
+    },
+    title: _.template('<%= _t("File in File") %>'),
+    content: _.template(
+      '<form>' +
+        '<div class="input-group">' +
+          '<input type="text" class="search form-control" ' +
+                  'id="file-search-field" placeholder="<%= _t("Find text witin theme resource in plone") %>">' +
+        '</div>' +
+        '<div class="input-group">' +
+          '<input type="submit" class="btn btn-primary" value="<%= _t("Search") %>"/>' +
+        '</div>' +
+      '</form><br/>' +
+      '<ul style="max-height: 400px; overflow: auto;" class="results list-group">' +
+      '</ul>'
+    ),
+    appendToResults: function(item){
+      var self = this, seen = null;
+      var file_item =
+        '<li class="list-group-item" data-id="' + item.file.label + '">' +
+          '<span class="badge">' + _t(item.file.filename) + '</span><ul>';
+      for(var x in item.lines){
+        seen = item.lines[x];
+        file_item += '<li class="list-group-item" data-id="' + item.file.label + '">' +
+          '<span class="badge"><a class="ff-open-file" data-target="'+item.file.path+'" ' +
+          'target-line="'+seen.line+'" href="#">Line ' +
+          '<span style="display: inline-block; width: 100px;">' + seen.line +
+          '</span><span>'+seen.text+'</span><a></span></li>';
+      }
+      file_item += '</ul></li>';
+      var $item = $(file_item);
+      $('a', $item).click(function(e) {
+        e.preventDefault();
+        self.findinfiles($(this).attr("data-target"));
+      });
+      self.$results.append($item);
+    },
+
+    filterFile: function(patt, item){
+      var self = this;
+      $.ajax({
+        url: self.app.options.actionUrl + '?action=getFile&path='+item.path.replace("/", "%2F"),
+        dataType: 'json',
+        success: function(data) {
+          var contents = data["contents"];
+          if(contents == undefined){
+            return;
+          }
+          var lines = contents.split("\n");
+          var seen = [], line = '';
+          var result = null;
+          for(var x in lines){
+            line = lines[x];
+            result = patt.exec(line);
+            if(result != null){
+              seen.push({
+                "line": parseInt(x) + 1,
+                "text": '<b>'+result[0]+'</b>'+line.substr(result["index"] + result[0].length, 20)
+              });
+            }
+          }
+          if(seen.length > 0){
+            self.appendToResults({file: item, lines: seen});
+            self.noMatches += seen.length;
+          }
+        }
+      });
+    },
+    filterFiles: function(patt, data){
+      var self = this;
+      _.each(data, function(item) {
+        if(item.folder){
+          self.filterFiles(patt, item.children);
+        }else{
+          self.filterFile(patt, item);
+        }
+      });
+    },
+    render: function() {
+      var self = this;
+      PopoverView.prototype.render.call(this);
+      self.$form = self.$('form');
+      self.$searchFor = self.$("input");
+      self.$results = self.$('.results');
+      self.$form.submit(function(e) {
+        e.preventDefault();
+        $.ajax({
+          url: self.app.options.actionUrl + '?action=dataTree',
+          dataType: 'json',
+          success: function(data) {
+            self.$results.empty();
+            self.noMatches = 0;
+            var searchFor = self.$searchFor.val();
+            var patt = new RegExp(searchFor, "g");
+            self.filterFiles(patt, data);
+          }
+        });
+      });
+      return self;
+    },
+    findinfiles: function(resource) {
+      var self = this;
+      self.app.doAction('getFile', {
+        data: {
+          path: resource
+        },
+        dataType: 'json',
+        success: function(data) {
+          self.app.fileData[resource] = data;
+          self.app.openEditor(resource);
+        }
+      });
+    }
+  });
+
+  return FindInFiles;
+});
diff --git a/mockup/patterns/filemanager/pattern.filemanager.less b/mockup/patterns/filemanager/pattern.filemanager.less
index b5fd4216..c37f28ac 100644
--- a/mockup/patterns/filemanager/pattern.filemanager.less
+++ b/mockup/patterns/filemanager/pattern.filemanager.less
@@ -27,6 +27,11 @@
     .popover:extend(.popover all){}
     .popover-title:extend(.popover-title all){}
     .popover-content:extend(.popover-content all){}
+
+    .popover{
+        max-width: 600px;
+    }
+
     .arrow:extend(.arrow all){}
 
     .table:extend(.table all){}
diff --git a/mockup/patterns/filemanager/pattern.js b/mockup/patterns/filemanager/pattern.js
index 5ab7b96a..916780f3 100644
--- a/mockup/patterns/filemanager/pattern.js
+++ b/mockup/patterns/filemanager/pattern.js
@@ -40,19 +40,23 @@ define([
   'mockup-ui-url/views/toolbar',
   'mockup-ui-url/views/button',
   'mockup-ui-url/views/buttongroup',
+  'mockup-ui-url/views/anchor',
+  'mockup-ui-url/views/dropdown',
   'mockup-patterns-filemanager-url/js/addnew',
   'mockup-patterns-filemanager-url/js/newfolder',
-  'mockup-patterns-filemanager-url/js/filesearch',
+  'mockup-patterns-filemanager-url/js/findfile',
+  'mockup-patterns-filemanager-url/js/findinfiles',
   'mockup-patterns-filemanager-url/js/delete',
   'mockup-patterns-filemanager-url/js/customize',
   'mockup-patterns-filemanager-url/js/rename',
   'mockup-patterns-filemanager-url/js/upload',
   'translate',
   'mockup-utils',
-  'text!mockup-ui-url/templates/popover.xml'
+  'text!mockup-ui-url/templates/popover.xml',
+  'text!mockup-ui-url/templates/dropdown.xml'
 ], function($, Base, _, Tree, TextEditor, AppTemplate, Toolbar,
-  ButtonView, ButtonGroup, AddNewView, NewFolderView, DeleteView,
-  FileSearchView,
+  ButtonView, ButtonGroup, AnchorView, DropdownView,
+  AddNewView, NewFolderView, FindFileView, FindInFilesView, DeleteView,
   CustomizeView, RenameView, UploadView, _t, utils) {
   'use strict';
 
@@ -137,16 +141,26 @@ define([
         }),
         app: self
       });
-      var fileSearchView = new FileSearchView({
-        triggerView: new ButtonView({
-          id: 'filesarch',
-          title: _t('File Search'),
+      var findFileView = new FindFileView({
+        triggerView: new AnchorView({
+          id: 'findfile',
+          title: _t('Find File'),
           tooltip: _t('Find theme resource in plone'),
           icon: 'file',
           context: 'default'
         }),
         app: self
       });
+      var findinFilesView = new FindInFilesView({
+        triggerView: new AnchorView({
+          id: 'findinfiles',
+          title: _t('Find in Files'),
+          tooltip: _t('Find text within theme resource in plone'),
+          icon: 'file',
+          context: 'default'
+        }),
+        app: self
+      });
       var renameView = new RenameView({
         triggerView: new ButtonView({
           id: 'rename',
@@ -168,18 +182,29 @@ define([
         app: self
       });
 
+      var find_menu = new DropdownView({
+        title: _t('Find'),
+        items: [
+          findFileView.triggerView,
+          findinFilesView.triggerView
+        ],
+        id: 'find',
+        app: self
+      })
+
       self.views = [
         newFolderView,
         addNewView,
-        fileSearchView,
+        findFileView,
+        findinFilesView,
         renameView,
         deleteView
       ];
       var mainButtons = [
         self.saveBtn,
         newFolderView.triggerView,
-        fileSearchView.triggerView,
         addNewView.triggerView,
+        find_menu,
         renameView.triggerView,
         deleteView.triggerView
       ];
@@ -304,6 +329,7 @@ define([
         }
       });
 
+
       self.$tree.bind('tree.select', function(e) {
         if (e.node === null) {
           self.toggleButtons(false);
diff --git a/mockup/patterns/filemanager/templates/app.xml b/mockup/patterns/filemanager/templates/app.xml
index 11d594ff..e5194500 100644
--- a/mockup/patterns/filemanager/templates/app.xml
+++ b/mockup/patterns/filemanager/templates/app.xml
@@ -1,5 +1,7 @@
 <div id="toolbar">
 </div>
+<div id="toolbar-action">
+</div>
 <div class="container">
     <div class="tree">
     </div>
@@ -14,4 +16,4 @@
                 </div>
             </div>
         </nav>
-</div>
\ No newline at end of file
+</div>
diff --git a/mockup/patterns/filemanager/templates/popover.xml b/mockup/patterns/filemanager/templates/popover.xml
new file mode 100644
index 00000000..a276f070
--- /dev/null
+++ b/mockup/patterns/filemanager/templates/popover.xml
@@ -0,0 +1,12 @@
+<div class="arrow"></div>
+<div class="popover-label">
+<div style="position: relative;" class="popover-title">
+</div>
+<a style="position: absolute; top: 5px; right: 3px; font-size: 16px; color: #999;"
+   href="#" class="popover-close">
+  <span class="glyphicon glyphicon-remove"></span>
+</a>
+</div>
+<div class="items popover-content">
+</div>
+
diff --git a/mockup/patterns/relateditems/pattern.js b/mockup/patterns/relateditems/pattern.js
index f10d3145..00ff3883 100644
--- a/mockup/patterns/relateditems/pattern.js
+++ b/mockup/patterns/relateditems/pattern.js
@@ -98,11 +98,11 @@ define([
   'mockup-utils',
   'pat-registry',
   'translate',
-  'text!mockup-patterns-relateditems-url/templates/breadcrumb.xml',
-  'text!mockup-patterns-relateditems-url/templates/favorite.xml',
-  'text!mockup-patterns-relateditems-url/templates/result.xml',
-  'text!mockup-patterns-relateditems-url/templates/selection.xml',
-  'text!mockup-patterns-relateditems-url/templates/toolbar.xml',
+//  'text!mockup-patterns-relateditems-url/templates/breadcrumb.xml',
+//  'text!mockup-patterns-relateditems-url/templates/favorite.xml',
+//  'text!mockup-patterns-relateditems-url/templates/result.xml',
+//  'text!mockup-patterns-relateditems-url/templates/selection.xml',
+//  'text!mockup-patterns-relateditems-url/templates/toolbar.xml',
   'bootstrap-dropdown'
 ], function($, _, Base, Select2, ButtonView, utils, registry, _t,
             BreadcrumbTemplate,


Repository: mockup


Branch: refs/heads/master
Date: 2017-06-12T12:43:31Z
Author: Oshane Bailey (b4oshany) <b4.oshany@gmail.com>
Commit: https://github.com/plone/mockup/commit/996f67e0b13f3e76ebb8fbe78ecccbe6efdeccc1

Merge branch 'master' into theme-filemanager-searching-feature

Files changed:
M CHANGES.rst
M mockup/js/ui/views/dropdown.js
M mockup/patterns/relateditems/pattern.js
M mockup/patterns/tinymce/js/links.js
M mockup/patterns/tinymce/pattern.js

diff --git a/CHANGES.rst b/CHANGES.rst
index a74c15fe..e8a476db 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,6 @@ New features:
  - Search for text within files and opening the file upon click
  - Added Bootstrap Dropdown menu to the UI views
  - Added Anchor (a) tag to the UI views
-
  - make thumb size in folder contents listing adjustable/supressable
    replace meaningless paper clip icon (fontello) with mime type icons
    from mimetype registry
@@ -56,6 +55,9 @@ New features:
 
 Bug fixes:
 
+- In the insert link/image modal, pass use the correct related items widget options from the ``linkModal`` attribute.
+  [thet]
+
 - Fixed path to tooltip less files.
   This gave an ugly site in develoment mode when editing the loggedin bundle css.
   Fixes `issue 1843 <https://github.com/plone/Products.CMFPlone/issues/1843>`_.
diff --git a/mockup/js/ui/views/dropdown.js b/mockup/js/ui/views/dropdown.js
index 6e4505a0..9df2b1f2 100644
--- a/mockup/js/ui/views/dropdown.js
+++ b/mockup/js/ui/views/dropdown.js
@@ -21,9 +21,9 @@ define([
 
     renderTitle: function() {
       var title = this.options.title;
-      if(this.options.title == undefined){
+      if(this.options.title === undefined){
         title = this.title;
-        if(this.title == null){
+        if(this.title === null){
           title = "Menu Option";
         }
       }
@@ -34,7 +34,7 @@ define([
       var $container;
 
       if (this.itemContainer !== null) {
-        $container = $(this.itemContainer, this.$el);
+        $container = this.$(this.itemContainer, this.$el);
         if ($container.length === 0) {
           throw 'Item Container element not found.';
         }
@@ -44,7 +44,7 @@ define([
 
       var $item = null;
       _.each(this.items, function(view) {
-        $item = $("<li></li>");
+        $item = this.$("<li></li>");
         $item.append(view.render().$el.removeClass("btn"));
         $container.append($item);
       }, this);
diff --git a/mockup/patterns/relateditems/pattern.js b/mockup/patterns/relateditems/pattern.js
index 00ff3883..f10d3145 100644
--- a/mockup/patterns/relateditems/pattern.js
+++ b/mockup/patterns/relateditems/pattern.js
@@ -98,11 +98,11 @@ define([
   'mockup-utils',
   'pat-registry',
   'translate',
-//  'text!mockup-patterns-relateditems-url/templates/breadcrumb.xml',
-//  'text!mockup-patterns-relateditems-url/templates/favorite.xml',
-//  'text!mockup-patterns-relateditems-url/templates/result.xml',
-//  'text!mockup-patterns-relateditems-url/templates/selection.xml',
-//  'text!mockup-patterns-relateditems-url/templates/toolbar.xml',
+  'text!mockup-patterns-relateditems-url/templates/breadcrumb.xml',
+  'text!mockup-patterns-relateditems-url/templates/favorite.xml',
+  'text!mockup-patterns-relateditems-url/templates/result.xml',
+  'text!mockup-patterns-relateditems-url/templates/selection.xml',
+  'text!mockup-patterns-relateditems-url/templates/toolbar.xml',
   'bootstrap-dropdown'
 ], function($, _, Base, Select2, ButtonView, utils, registry, _t,
             BreadcrumbTemplate,
diff --git a/mockup/patterns/tinymce/js/links.js b/mockup/patterns/tinymce/js/links.js
index db1ce110..0896d58d 100644
--- a/mockup/patterns/tinymce/js/links.js
+++ b/mockup/patterns/tinymce/js/links.js
@@ -84,7 +84,7 @@ define([
     },
 
     createRelatedItems: function() {
-      var options = this.tinypattern.options.relatedItems;
+      var options = this.linkModal.options.relatedItems;
       options.upload = false;  // ensure that related items upload is off.
       this.relatedItems = new RelatedItems(this.getEl(), options);
     },
diff --git a/mockup/patterns/tinymce/pattern.js b/mockup/patterns/tinymce/pattern.js
index 76377961..54f36387 100644
--- a/mockup/patterns/tinymce/pattern.js
+++ b/mockup/patterns/tinymce/pattern.js
@@ -223,11 +223,6 @@ define([
             insertHeading: _t('Insert Image')
           },
           relatedItems: {
-            baseCriteria: [{
-              i: 'portal_type',
-              o: 'plone.app.querystring.operation.list.contains',
-              v: self.options.imageTypes.concat(self.options.folderTypes)
-            }],
             selectableTypes: self.options.imageTypes
           }
         });


Repository: mockup


Branch: refs/heads/master
Date: 2017-06-12T13:26:25Z
Author: Oshane Bailey (b4oshany) <b4.oshany@gmail.com>
Commit: https://github.com/plone/mockup/commit/90bbdd9ffa55a7e73d6d3d15cdc21c3651650586

Closes #772, search for files and text within files.

Files changed:
M CHANGES.rst
M mockup/patterns/relateditems/pattern.js

diff --git a/CHANGES.rst b/CHANGES.rst
index e8a476db..f42f4217 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,10 +10,11 @@ Breaking changes:
 
 New features:
 
- - Search for files and opening the file upon click
- - Search for text within files and opening the file upon click
- - Added Bootstrap Dropdown menu to the UI views
- - Added Anchor (a) tag to the UI views
+ - Search for files and opening the file upon click.
+ - Search for text within files and opening the file upon click.
+ - Added Bootstrap Dropdown menu to the UI views.
+ - Added Anchor (a) tag to the UI views.
+ 
  - make thumb size in folder contents listing adjustable/supressable
    replace meaningless paper clip icon (fontello) with mime type icons
    from mimetype registry
diff --git a/mockup/patterns/relateditems/pattern.js b/mockup/patterns/relateditems/pattern.js
index f10d3145..00ff3883 100644
--- a/mockup/patterns/relateditems/pattern.js
+++ b/mockup/patterns/relateditems/pattern.js
@@ -98,11 +98,11 @@ define([
   'mockup-utils',
   'pat-registry',
   'translate',
-  'text!mockup-patterns-relateditems-url/templates/breadcrumb.xml',
-  'text!mockup-patterns-relateditems-url/templates/favorite.xml',
-  'text!mockup-patterns-relateditems-url/templates/result.xml',
-  'text!mockup-patterns-relateditems-url/templates/selection.xml',
-  'text!mockup-patterns-relateditems-url/templates/toolbar.xml',
+//  'text!mockup-patterns-relateditems-url/templates/breadcrumb.xml',
+//  'text!mockup-patterns-relateditems-url/templates/favorite.xml',
+//  'text!mockup-patterns-relateditems-url/templates/result.xml',
+//  'text!mockup-patterns-relateditems-url/templates/selection.xml',
+//  'text!mockup-patterns-relateditems-url/templates/toolbar.xml',
   'bootstrap-dropdown'
 ], function($, _, Base, Select2, ButtonView, utils, registry, _t,
             BreadcrumbTemplate,


Repository: mockup


Branch: refs/heads/master
Date: 2017-06-12T13:56:27Z
Author: Oshane Bailey (b4oshany) <b4.oshany@gmail.com>
Commit: https://github.com/plone/mockup/commit/49f2df121c431011a80dcf788eac4c4026a4dedd

Fix the test result.

Files changed:
M mockup/js/ui/views/dropdown.js

diff --git a/mockup/js/ui/views/dropdown.js b/mockup/js/ui/views/dropdown.js
index 9df2b1f2..88aa53ef 100644
--- a/mockup/js/ui/views/dropdown.js
+++ b/mockup/js/ui/views/dropdown.js
@@ -1,8 +1,9 @@
 define([
+  'jquery',
   'underscore',
   'mockup-ui-url/views/buttongroup',
   'text!mockup-ui-url/templates/dropdown.xml',
-], function(_, ButtonGroup, DropdownTemplate) {
+], function($, _, ButtonGroup, DropdownTemplate) {
   'use strict';
 
   var DropdownView = ButtonGroup.extend({
@@ -31,10 +32,11 @@ define([
     },
 
     renderItems: function() {
+      var self = this;
       var $container;
 
       if (this.itemContainer !== null) {
-        $container = this.$(this.itemContainer, this.$el);
+        $container = $(this.itemContainer, this.$el);
         if ($container.length === 0) {
           throw 'Item Container element not found.';
         }
@@ -44,7 +46,7 @@ define([
 
       var $item = null;
       _.each(this.items, function(view) {
-        $item = this.$("<li></li>");
+        $item = $("<li></li>");
         $item.append(view.render().$el.removeClass("btn"));
         $container.append($item);
       }, this);


Repository: mockup


Branch: refs/heads/master
Date: 2017-06-13T03:04:22Z
Author: Oshane Bailey (b4oshany) <b4.oshany@gmail.com>
Commit: https://github.com/plone/mockup/commit/787f066162a743b2549816ae71d5f9c2247ad11d

Bug fixes.

Files changed:
M mockup/js/ui/views/anchor.js
M mockup/js/ui/views/dropdown.js
M mockup/patterns/relateditems/pattern.js

diff --git a/mockup/js/ui/views/anchor.js b/mockup/js/ui/views/anchor.js
index df83e45e..9e0f8e4a 100644
--- a/mockup/js/ui/views/anchor.js
+++ b/mockup/js/ui/views/anchor.js
@@ -30,7 +30,7 @@ define([
       this.on('render', function() {
         this.$el.attr('title', this.options.title || '');
         this.$el.attr('aria-label', this.options.title || this.options.tooltip || '');
-        _.each(this.extraClasses, function(klass){
+        _.each(this.extraClasses, function(klass) {
           this.$el.addClass(klass);
         });
       }, this);
diff --git a/mockup/js/ui/views/dropdown.js b/mockup/js/ui/views/dropdown.js
index 88aa53ef..53cddacb 100644
--- a/mockup/js/ui/views/dropdown.js
+++ b/mockup/js/ui/views/dropdown.js
@@ -22,9 +22,9 @@ define([
 
     renderTitle: function() {
       var title = this.options.title;
-      if(this.options.title === undefined){
+      if(this.options.title === undefined) {
         title = this.title;
-        if(this.title === null){
+        if(this.title === null) {
           title = "Menu Option";
         }
       }
diff --git a/mockup/patterns/relateditems/pattern.js b/mockup/patterns/relateditems/pattern.js
index 00ff3883..f10d3145 100644
--- a/mockup/patterns/relateditems/pattern.js
+++ b/mockup/patterns/relateditems/pattern.js
@@ -98,11 +98,11 @@ define([
   'mockup-utils',
   'pat-registry',
   'translate',
-//  'text!mockup-patterns-relateditems-url/templates/breadcrumb.xml',
-//  'text!mockup-patterns-relateditems-url/templates/favorite.xml',
-//  'text!mockup-patterns-relateditems-url/templates/result.xml',
-//  'text!mockup-patterns-relateditems-url/templates/selection.xml',
-//  'text!mockup-patterns-relateditems-url/templates/toolbar.xml',
+  'text!mockup-patterns-relateditems-url/templates/breadcrumb.xml',
+  'text!mockup-patterns-relateditems-url/templates/favorite.xml',
+  'text!mockup-patterns-relateditems-url/templates/result.xml',
+  'text!mockup-patterns-relateditems-url/templates/selection.xml',
+  'text!mockup-patterns-relateditems-url/templates/toolbar.xml',
   'bootstrap-dropdown'
 ], function($, _, Base, Select2, ButtonView, utils, registry, _t,
             BreadcrumbTemplate,


Repository: mockup


Branch: refs/heads/master
Date: 2017-06-19T08:59:18-05:00
Author: Oshane Bailey (b4oshany) <b4.oshany@gmail.com>
Commit: https://github.com/plone/mockup/commit/2ce3819e1a6eccbd88a5fc759c2d329c995ed034

Merge branch 'master' into theme-filemanager-searching-feature

Files changed:
M CHANGES.rst
M mockup/patterns/formunloadalert/pattern.js
M mockup/patterns/modal/pattern.js
M mockup/patterns/structure/js/views/tablerow.js
M mockup/patterns/structure/templates/tablerow.xml
M mockup/patterns/upload/pattern.js
M mockup/tests/pattern-structure-test.js

diff --git a/CHANGES.rst b/CHANGES.rst
index f42f4217..71ff57df 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,10 +14,8 @@ New features:
  - Search for text within files and opening the file upon click.
  - Added Bootstrap Dropdown menu to the UI views.
  - Added Anchor (a) tag to the UI views.
- 
- - make thumb size in folder contents listing adjustable/supressable
-   replace meaningless paper clip icon (fontello) with mime type icons
-   from mimetype registry
+ - Make thumb scale in folder contents listing adjustable/supressable.
+   Replace meaningless paper clip icon (fontello) with mime type icons from mimetype registry.
    https://github.com/plone/Products.CMFPlone/issues/1734
    [fgrcon]
 
@@ -56,6 +54,22 @@ New features:
 
 Bug fixes:
 
+- Upload pattern: Fix missing plone.protect authenticator token which led to broken uploads.
+  [thet]
+
+- fixed css-classes for thumb scales ...
+  https://github.com/plone/Products.CMFPlone/issues/2077
+  [fgrcon]
+
+- modal: Fixed duplicate window.confirm on form unload.
+  Fixes `issue 777 <https://github.com/plone/mockup/issues/777>`_.
+  [seanupton]
+
+- formunloadalert: Fixed incorrect use of Function.prototype.apply,
+  when call() was seemingly intended; fixes case where modal close leads to
+  exception.  Fixes `issue 776 <https://github.com/plone/mockup/issues/776>`_.
+  [seanupton]
+
 - In the insert link/image modal, pass use the correct related items widget options from the ``linkModal`` attribute.
   [thet]
 
diff --git a/mockup/patterns/formunloadalert/pattern.js b/mockup/patterns/formunloadalert/pattern.js
index 1988efaa..f79d3992 100644
--- a/mockup/patterns/formunloadalert/pattern.js
+++ b/mockup/patterns/formunloadalert/pattern.js
@@ -65,7 +65,7 @@ define([
         $modal.data('patternPloneModal').on('hide', function(e) {
           var modal = $modal.data('patternPloneModal');
           if (modal) {
-            modal._suppressHide = self._handleUnload.apply(self, e);
+            modal._suppressHide = self._handleUnload.call(self, e);
           }
         });
       } else {
diff --git a/mockup/patterns/modal/pattern.js b/mockup/patterns/modal/pattern.js
index 21673a4f..c3dbadea 100644
--- a/mockup/patterns/modal/pattern.js
+++ b/mockup/patterns/modal/pattern.js
@@ -872,6 +872,7 @@ define([
       }
       self.$wrapper.remove();
       if ($('.plone-modal', $('body')).size() < 1) {
+        self._suppressHide = undefined;
         self.backdrop.hide();
         $('body').removeClass('plone-modal-open');
         $(window.parent).off('resize.plone-modal.patterns');
diff --git a/mockup/patterns/structure/js/views/tablerow.js b/mockup/patterns/structure/js/views/tablerow.js
index 8f91671d..61f53551 100644
--- a/mockup/patterns/structure/js/views/tablerow.js
+++ b/mockup/patterns/structure/js/views/tablerow.js
@@ -57,7 +57,7 @@ define([
       data.portal_type = data.portal_type ? data.portal_type : '';
       data.contenttype = data.portal_type.toLowerCase().replace(/\.| /g, '-');
       data._authenticator = utils.getAuthenticator();
-      data.thumbSize = self.app.thumbSize;
+      data.thumb_scale = self.app.thumb_scale;
 
       var viewAction = self.app.typeToViewAction && self.app.typeToViewAction[data.attributes.portal_type] || '';
       data.viewURL = data.attributes.getURL + viewAction;
diff --git a/mockup/patterns/structure/templates/tablerow.xml b/mockup/patterns/structure/templates/tablerow.xml
index fb0f181a..cffb48d5 100644
--- a/mockup/patterns/structure/templates/tablerow.xml
+++ b/mockup/patterns/structure/templates/tablerow.xml
@@ -27,8 +27,8 @@
     </p>
     <% } %>
   </div>
-  <% if(attributes["getIcon"] && ( thumbSize != 'none') ){ %>
-    <img class="image-<%- thumbSize %> pull-right" src="<%- getURL %>/@@images/image/<%- thumbSize %>">
+  <% if(attributes["getIcon"] && thumb_scale) { %>
+    <img class="thumb-<%- thumb_scale %> pull-right" src="<%- getURL %>/@@images/image/<%- thumb_scale %>">
   <% } %>
 </td>
 
diff --git a/mockup/patterns/upload/pattern.js b/mockup/patterns/upload/pattern.js
index 554efb5b..87e05c25 100644
--- a/mockup/patterns/upload/pattern.js
+++ b/mockup/patterns/upload/pattern.js
@@ -48,9 +48,9 @@ define([
   'dropzone',
   'text!mockup-patterns-upload-url/templates/upload.xml',
   'text!mockup-patterns-upload-url/templates/preview.xml',
+  'mockup-utils',
   'translate'
-], function($, _, Base, RelatedItems, Dropzone,
-            UploadTemplate, PreviewTemplate, _t) {
+], function($, _, Base, RelatedItems, Dropzone, UploadTemplate, PreviewTemplate, utils, _t) {
   'use strict';
 
   /* we do not want this plugin to auto discover */
@@ -341,6 +341,10 @@ define([
       var options = $.extend({}, self.options);
       options.url = self.getUrl();
 
+      options.headers = {
+        'X-CSRF-TOKEN': utils.getAuthenticator()
+      };
+
       // XXX force to only upload one to the server at a time,
       // right now we don't support multiple for backends
       options.uploadMultiple = false;
@@ -442,7 +446,8 @@ define([
       window.tus.upload(file, {
         endpoint: self.dropzone.options.url,
         headers: {
-          'FILENAME': file.name
+          'FILENAME': file.name,
+          'X-CSRF-TOKEN': utils.getAuthenticator()
         },
         chunkSize: chunkSize
       }).fail(function() {
diff --git a/mockup/tests/pattern-structure-test.js b/mockup/tests/pattern-structure-test.js
index 0c3ad2e9..dcf2b148 100644
--- a/mockup/tests/pattern-structure-test.js
+++ b/mockup/tests/pattern-structure-test.js
@@ -610,7 +610,7 @@ define([
     });
 
     it('should display an icon for contents with images', function() {
-      this.app.thumbSize = 'tile';
+      this.app.thumb_scale = 'tile';
 
       var model = new Result({
           'Title': "Dummy Document",
@@ -628,7 +628,7 @@ define([
       var el = row.render().el;
 
       expect($('.title img', el).length).to.equal(1);
-      expect($('.title img', el).attr('class')).to.have.string('image-tile');
+      expect($('.title img', el).attr('class')).to.have.string('thumb-tile');
     });
 
     it('should display no icon for contents without images', function() {


Repository: mockup


Branch: refs/heads/master
Date: 2017-06-24T18:15:24-05:00
Author: Oshane Bailey (b4oshany) <b4.oshany@gmail.com>
Commit: https://github.com/plone/mockup/commit/1982f804044de455ee44dafdd4669efdda47ec74

Closes #772, search for files and text within files.

Files changed:
M .gitignore
M CHANGES.rst
M mockup/patterns/relateditems/pattern.js

diff --git a/.gitignore b/.gitignore
index 687ae184..69d17555 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,3 +1,4 @@
+*.orig
 *.egg-info
 *.py?
 .idea
diff --git a/CHANGES.rst b/CHANGES.rst
index 71ff57df..5bebefdb 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -16,6 +16,14 @@ New features:
  - Added Anchor (a) tag to the UI views.
  - Make thumb scale in folder contents listing adjustable/supressable.
    Replace meaningless paper clip icon (fontello) with mime type icons from mimetype registry.
+ - Search for files and opening the file upon click
+ - Search for text within files and opening the file upon click
+ - Added Bootstrap Dropdown menu to the UI views
+ - Added Anchor (a) tag to the UI views
+
+ - make thumb size in folder contents listing adjustable/supressable
+   replace meaningless paper clip icon (fontello) with mime type icons
+   from mimetype registry
    https://github.com/plone/Products.CMFPlone/issues/1734
    [fgrcon]
 
diff --git a/mockup/patterns/relateditems/pattern.js b/mockup/patterns/relateditems/pattern.js
index f10d3145..00ff3883 100644
--- a/mockup/patterns/relateditems/pattern.js
+++ b/mockup/patterns/relateditems/pattern.js
@@ -98,11 +98,11 @@ define([
   'mockup-utils',
   'pat-registry',
   'translate',
-  'text!mockup-patterns-relateditems-url/templates/breadcrumb.xml',
-  'text!mockup-patterns-relateditems-url/templates/favorite.xml',
-  'text!mockup-patterns-relateditems-url/templates/result.xml',
-  'text!mockup-patterns-relateditems-url/templates/selection.xml',
-  'text!mockup-patterns-relateditems-url/templates/toolbar.xml',
+//  'text!mockup-patterns-relateditems-url/templates/breadcrumb.xml',
+//  'text!mockup-patterns-relateditems-url/templates/favorite.xml',
+//  'text!mockup-patterns-relateditems-url/templates/result.xml',
+//  'text!mockup-patterns-relateditems-url/templates/selection.xml',
+//  'text!mockup-patterns-relateditems-url/templates/toolbar.xml',
   'bootstrap-dropdown'
 ], function($, _, Base, Select2, ButtonView, utils, registry, _t,
             BreadcrumbTemplate,


Repository: mockup


Branch: refs/heads/master
Date: 2017-06-24T18:15:24-05:00
Author: Oshane Bailey (b4oshany) <b4.oshany@gmail.com>
Commit: https://github.com/plone/mockup/commit/164aff244af8460ba4c4f48b294916b3eaa63ca8

Closes #772, search for files and text within files.

Files changed:
M CHANGES.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index 5bebefdb..49c5c7fd 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -21,6 +21,11 @@ New features:
  - Added Bootstrap Dropdown menu to the UI views
  - Added Anchor (a) tag to the UI views
 
+ - Search for files and opening the file upon click.
+ - Search for text within files and opening the file upon click.
+ - Added Bootstrap Dropdown menu to the UI views.
+ - Added Anchor (a) tag to the UI views.
+ 
  - make thumb size in folder contents listing adjustable/supressable
    replace meaningless paper clip icon (fontello) with mime type icons
    from mimetype registry


Repository: mockup


Branch: refs/heads/master
Date: 2017-06-24T18:15:24-05:00
Author: Oshane Bailey (b4oshany) <b4.oshany@gmail.com>
Commit: https://github.com/plone/mockup/commit/e83ab7ddc88c9251ed5bff021aab2f42e19493ee

Bug fixes.

Files changed:
M mockup/patterns/relateditems/pattern.js

diff --git a/mockup/patterns/relateditems/pattern.js b/mockup/patterns/relateditems/pattern.js
index 00ff3883..f10d3145 100644
--- a/mockup/patterns/relateditems/pattern.js
+++ b/mockup/patterns/relateditems/pattern.js
@@ -98,11 +98,11 @@ define([
   'mockup-utils',
   'pat-registry',
   'translate',
-//  'text!mockup-patterns-relateditems-url/templates/breadcrumb.xml',
-//  'text!mockup-patterns-relateditems-url/templates/favorite.xml',
-//  'text!mockup-patterns-relateditems-url/templates/result.xml',
-//  'text!mockup-patterns-relateditems-url/templates/selection.xml',
-//  'text!mockup-patterns-relateditems-url/templates/toolbar.xml',
+  'text!mockup-patterns-relateditems-url/templates/breadcrumb.xml',
+  'text!mockup-patterns-relateditems-url/templates/favorite.xml',
+  'text!mockup-patterns-relateditems-url/templates/result.xml',
+  'text!mockup-patterns-relateditems-url/templates/selection.xml',
+  'text!mockup-patterns-relateditems-url/templates/toolbar.xml',
   'bootstrap-dropdown'
 ], function($, _, Base, Select2, ButtonView, utils, registry, _t,
             BreadcrumbTemplate,


Repository: mockup


Branch: refs/heads/master
Date: 2017-06-24T18:15:24-05:00
Author: Oshane Bailey (b4oshany) <b4.oshany@gmail.com>
Commit: https://github.com/plone/mockup/commit/6ffa6a706e0210b542636fadd85b00fa77dd48c4

Enable drag and drop inside of the theme editor file tree.

Files changed:
M CHANGES.rst
M bower.json
M mockup/patterns/filemanager/pattern.js

diff --git a/CHANGES.rst b/CHANGES.rst
index 49c5c7fd..55d21dea 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -15,17 +15,14 @@ New features:
  - Added Bootstrap Dropdown menu to the UI views.
  - Added Anchor (a) tag to the UI views.
  - Make thumb scale in folder contents listing adjustable/supressable.
-   Replace meaningless paper clip icon (fontello) with mime type icons from mimetype registry.
- - Search for files and opening the file upon click
- - Search for text within files and opening the file upon click
- - Added Bootstrap Dropdown menu to the UI views
- - Added Anchor (a) tag to the UI views
-
+ - Replace meaningless paper clip icon (fontello) with mime type icons from mimetype registry.
+ - Enable Drag and Drop inside of the theme editor file tree.
+ - Upgrade JQTree to 1.4.1
  - Search for files and opening the file upon click.
  - Search for text within files and opening the file upon click.
  - Added Bootstrap Dropdown menu to the UI views.
  - Added Anchor (a) tag to the UI views.
- 
+
  - make thumb size in folder contents listing adjustable/supressable
    replace meaningless paper clip icon (fontello) with mime type icons
    from mimetype registry
diff --git a/bower.json b/bower.json
index 7603daf8..55232710 100644
--- a/bower.json
+++ b/bower.json
@@ -9,7 +9,7 @@
     "console-polyfill": "0.2.2",
     "dropzone": "4.3.0",
     "es5-shim": "4.5.9",
-    "jqtree": "1.3.3",
+    "jqtree": "1.4.1",
     "jquery": "1.11.3",
     "jquery-form": "3.51",
     "jquery.cookie": "1.4.1",
diff --git a/mockup/patterns/filemanager/pattern.js b/mockup/patterns/filemanager/pattern.js
index 916780f3..d711e972 100644
--- a/mockup/patterns/filemanager/pattern.js
+++ b/mockup/patterns/filemanager/pattern.js
@@ -95,13 +95,13 @@ define([
 
       self.options.treeConfig = $.extend(true, {}, self.treeConfig, {
         dataUrl: self.options.actionUrl + '?action=dataTree',
+        dragAndDrop: true,
         onCreateLi: function(node, li) {
           var imageTypes = ['png', 'jpg', 'jpeg', 'gif', 'ico'];
           var themeTypes = ['css', 'html', 'htm', 'txt', 'xml', 'js', 'cfg', 'less'];
-
           $('span', li).addClass('glyphicon');
           if (node.folder) {
-            $('span', li).addClass('glyphicon-folder-close');
+            $('span', li).addClass('glyphicon-folder-close').addClass("droptarget");
           } else if ($.inArray(node.fileType, imageTypes) >= 0) {
             $('span', li).addClass('glyphicon-picture');
           } else if ($.inArray(node.fileType, themeTypes) >= 0) {
@@ -339,6 +339,23 @@ define([
         }
       });
 
+      self.$tree.bind('tree.move', function(event) {
+        self.doAction('move', {
+          data: {
+            source: event.move_info.moved_node.path,
+            destination: event.move_info.target_node.path
+          },
+          dataType: 'json',
+          success: function(data) {
+            console.log(data);
+            var jdata = JSON.parse(data);
+            if(jdata.error != ''){
+              alert(jdata.error);
+            }
+          }
+        });
+      });
+
       self.$tree.bind('tree.open', function(e) {
         var element = $(e.node.element).find(':first').find('.glyphicon');
         $(element).addClass('glyphicon-folder-open');


Repository: mockup


Branch: refs/heads/master
Date: 2017-06-27T02:03:58+03:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/mockup/commit/37455f82062c4cc594a3b8957bfe89a3a0103682

Disable disabling from find menu

Files changed:
M mockup/patterns/filemanager/pattern.js

diff --git a/mockup/patterns/filemanager/pattern.js b/mockup/patterns/filemanager/pattern.js
index d711e972..de0290dc 100644
--- a/mockup/patterns/filemanager/pattern.js
+++ b/mockup/patterns/filemanager/pattern.js
@@ -189,7 +189,8 @@ define([
           findinFilesView.triggerView
         ],
         id: 'find',
-        app: self
+        app: self,
+        disable: function() {}
       })
 
       self.views = [


Repository: mockup


Branch: refs/heads/master
Date: 2017-06-27T02:04:11+03:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/mockup/commit/6b2dd5b2c92c0a1e2f3933f85bb3d4a2847c83f6

Fix less file path to use alias

Files changed:
M mockup/patterns/thememapper/pattern.thememapper.less

diff --git a/mockup/patterns/thememapper/pattern.thememapper.less b/mockup/patterns/thememapper/pattern.thememapper.less
index 7666065a..4c58cce6 100644
--- a/mockup/patterns/thememapper/pattern.thememapper.less
+++ b/mockup/patterns/thememapper/pattern.thememapper.less
@@ -1,6 +1,6 @@
 @import "@{mockuplessPath}/ui.less";
 /* just be lazy here and include all of bootstrap... */
-@import "@{mockupPath}/filemanager/pattern.filemanager.less";
+@import "@{mockup-patterns-filemanager}";
 
 body.plone-toolbar-left-default {
 	padding-left: 0px;


Repository: mockup


Branch: refs/heads/master
Date: 2017-06-27T18:38:34-05:00
Author: Oshane Bailey (b4oshany) <b4.oshany@gmail.com>
Commit: https://github.com/plone/mockup/commit/bd3cb616c69875fe922e37cdcc0cad3ad08b3826

Merge pull request #782 from plone/datakurre-theme-filemanager-searching-feature

Theme filemanager searching feature fixes

Files changed:
M mockup/patterns/filemanager/pattern.js
M mockup/patterns/thememapper/pattern.thememapper.less

diff --git a/mockup/patterns/filemanager/pattern.js b/mockup/patterns/filemanager/pattern.js
index d711e972..de0290dc 100644
--- a/mockup/patterns/filemanager/pattern.js
+++ b/mockup/patterns/filemanager/pattern.js
@@ -189,7 +189,8 @@ define([
           findinFilesView.triggerView
         ],
         id: 'find',
-        app: self
+        app: self,
+        disable: function() {}
       })
 
       self.views = [
diff --git a/mockup/patterns/thememapper/pattern.thememapper.less b/mockup/patterns/thememapper/pattern.thememapper.less
index 7666065a..4c58cce6 100644
--- a/mockup/patterns/thememapper/pattern.thememapper.less
+++ b/mockup/patterns/thememapper/pattern.thememapper.less
@@ -1,6 +1,6 @@
 @import "@{mockuplessPath}/ui.less";
 /* just be lazy here and include all of bootstrap... */
-@import "@{mockupPath}/filemanager/pattern.filemanager.less";
+@import "@{mockup-patterns-filemanager}";
 
 body.plone-toolbar-left-default {
 	padding-left: 0px;


Repository: mockup


Branch: refs/heads/master
Date: 2017-06-27T18:40:08-05:00
Author: Oshane Bailey (b4oshany) <b4.oshany@gmail.com>
Commit: https://github.com/plone/mockup/commit/613d3cf9b3a4b73c4e9534431c36fd3354d3e72c

Add file search functionality to the filemanager pattern.

Files changed:
A mockup/patterns/filemanager/js/filesearch.js
M mockup/patterns/filemanager/pattern.js

diff --git a/mockup/patterns/filemanager/js/filesearch.js b/mockup/patterns/filemanager/js/filesearch.js
new file mode 100644
index 00000000..be5c35d1
--- /dev/null
+++ b/mockup/patterns/filemanager/js/filesearch.js
@@ -0,0 +1,73 @@
+define([
+  'jquery',
+  'underscore',
+  'mockup-patterns-filemanager-url/js/basepopover',
+  'translate'
+], function($, _, PopoverView, _t) {
+  'use strict';
+
+  var FileSearchView = PopoverView.extend({
+    className: 'popover filesearch',
+    title: _.template('<%= _t("File Search") %>'),
+    content: _.template(
+      '<form>' +
+        '<div class="input-group">' +
+          '<input type="text" class="search form-control" ' +
+                  'id="file-search-field" placeholder="<%= _t("Find theme resource in plone") %>">' +
+          '<span class="input-group-btn">' +
+            '<input type="submit" class="btn btn-primary" value="<%= _t("Search") %>"/>' +
+          '</span>' +
+        '</div>' +
+      '</form>' +
+      '<ul class="results list-group">' +
+      '</ul>'
+    ),
+    render: function() {
+      var self = this;
+      PopoverView.prototype.render.call(this);
+      self.$form = self.$('form');
+      self.$results = self.$('.results');
+      self.$form.submit(function(e) {
+        e.preventDefault();
+        $.ajax({
+          url: self.app.options.resourceSearchUrl,
+          dataType: 'json',
+          success: function(data) {
+            self.$results.empty();
+            _.each(data, function(item) {
+              var $item = $(
+                '<li class="list-group-item" data-id="' + item.id + '">' +
+                  '<span class="badge"><a href=#">' + _t('Customize') + '</a></span>' +
+                  item.id +
+                '</li>');
+              $('a', $item).click(function(e) {
+                e.preventDefault();
+                self.customize($(this).parents('li').eq(0).attr('data-id'));
+              });
+              self.$results.append($item);
+            });
+          }
+        });
+      });
+      return self;
+    },
+    customize: function(resource) {
+      var self = this;
+      self.app.doAction('customize', {
+        type: 'POST',
+        data: {
+          resource: resource
+        },
+        success: function(data) {
+          self.hide();
+          // clear out
+          self.$('input.search').attr('value', '');
+          self.$results.empty();
+          self.app.refreshTree();
+        }
+      });
+    }
+  });
+
+  return FileSearchView;
+});
diff --git a/mockup/patterns/filemanager/pattern.js b/mockup/patterns/filemanager/pattern.js
index 24a14c54..5ab7b96a 100644
--- a/mockup/patterns/filemanager/pattern.js
+++ b/mockup/patterns/filemanager/pattern.js
@@ -42,6 +42,7 @@ define([
   'mockup-ui-url/views/buttongroup',
   'mockup-patterns-filemanager-url/js/addnew',
   'mockup-patterns-filemanager-url/js/newfolder',
+  'mockup-patterns-filemanager-url/js/filesearch',
   'mockup-patterns-filemanager-url/js/delete',
   'mockup-patterns-filemanager-url/js/customize',
   'mockup-patterns-filemanager-url/js/rename',
@@ -51,6 +52,7 @@ define([
   'text!mockup-ui-url/templates/popover.xml'
 ], function($, Base, _, Tree, TextEditor, AppTemplate, Toolbar,
   ButtonView, ButtonGroup, AddNewView, NewFolderView, DeleteView,
+  FileSearchView,
   CustomizeView, RenameView, UploadView, _t, utils) {
   'use strict';
 
@@ -135,6 +137,16 @@ define([
         }),
         app: self
       });
+      var fileSearchView = new FileSearchView({
+        triggerView: new ButtonView({
+          id: 'filesarch',
+          title: _t('File Search'),
+          tooltip: _t('Find theme resource in plone'),
+          icon: 'file',
+          context: 'default'
+        }),
+        app: self
+      });
       var renameView = new RenameView({
         triggerView: new ButtonView({
           id: 'rename',
@@ -159,12 +171,14 @@ define([
       self.views = [
         newFolderView,
         addNewView,
+        fileSearchView,
         renameView,
         deleteView
       ];
       var mainButtons = [
         self.saveBtn,
         newFolderView.triggerView,
+        fileSearchView.triggerView,
         addNewView.triggerView,
         renameView.triggerView,
         deleteView.triggerView


Repository: mockup


Branch: refs/heads/master
Date: 2017-06-27T18:40:08-05:00
Author: Oshane Bailey (b4oshany) <b4.oshany@gmail.com>
Commit: https://github.com/plone/mockup/commit/851b85caf702f72d64aa67907d251a9babe51518

Closes #772, search for files and text within files.

Files changed:
A mockup/js/ui/templates/dropdown.xml
A mockup/js/ui/views/anchor.js
A mockup/js/ui/views/dropdown.js
A mockup/patterns/filemanager/js/findfile.js
A mockup/patterns/filemanager/js/findinfiles.js
A mockup/patterns/filemanager/templates/popover.xml
M CHANGES.rst
M mockup/patterns/filemanager/js/basepopover.js
M mockup/patterns/filemanager/pattern.filemanager.less
M mockup/patterns/filemanager/pattern.js
M mockup/patterns/filemanager/templates/app.xml
M mockup/patterns/relateditems/pattern.js
D mockup/patterns/filemanager/js/filesearch.js

diff --git a/CHANGES.rst b/CHANGES.rst
index e57d16a7..254e796a 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -12,6 +12,14 @@ New features:
 
  - Make thumb scale in folder contents listing adjustable/supressable.
    Replace meaningless paper clip icon (fontello) with mime type icons from mimetype registry.
+ - Search for files and opening the file upon click
+ - Search for text within files and opening the file upon click
+ - Added Bootstrap Dropdown menu to the UI views
+ - Added Anchor (a) tag to the UI views
+
+ - make thumb size in folder contents listing adjustable/supressable
+   replace meaningless paper clip icon (fontello) with mime type icons
+   from mimetype registry
    https://github.com/plone/Products.CMFPlone/issues/1734
    [fgrcon]
 
diff --git a/mockup/js/ui/templates/dropdown.xml b/mockup/js/ui/templates/dropdown.xml
new file mode 100644
index 00000000..ffb2492a
--- /dev/null
+++ b/mockup/js/ui/templates/dropdown.xml
@@ -0,0 +1,9 @@
+
+<a style="padding-top: 8px" href="#" class="btn btn-default dropdown-toggle" type="button" id="dropdown-menu-" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
+  <span class="dropdown-title">
+
+  </span>
+  <span class="caret"></span>
+</a>
+<ul class="dropdown-menu items dropdown-content" aria-labelledby="dropdown-menu-">
+</ul>
diff --git a/mockup/js/ui/views/anchor.js b/mockup/js/ui/views/anchor.js
new file mode 100644
index 00000000..df83e45e
--- /dev/null
+++ b/mockup/js/ui/views/anchor.js
@@ -0,0 +1,56 @@
+define([
+  'underscore',
+  'mockup-ui-url/views/base',
+  'mockup-patterns-tooltip'
+], function(_, BaseView, Tooltip) {
+  'use strict';
+
+  var AnchorView = BaseView.extend({
+    tagName: 'a',
+    className: 'alink',
+    eventPrefix: 'button',
+    context: 'default',
+    idPrefix: 'alink-',
+    attributes: {
+      'href': '#'
+    },
+    extraClasses: [],
+    tooltip: null,
+    template: '<% if (icon) { %><span class="glyphicon glyphicon-<%= icon %>"></span><% } %> <%= title %>',
+    events: {
+      'click': 'handleClick'
+    },
+    initialize: function(options) {
+      if (!options.id) {
+        var title = options.title || '';
+        options.id = title !== '' ? title.toLowerCase().replace(' ', '-') : this.cid;
+      }
+      BaseView.prototype.initialize.apply(this, [options]);
+
+      this.on('render', function() {
+        this.$el.attr('title', this.options.title || '');
+        this.$el.attr('aria-label', this.options.title || this.options.tooltip || '');
+        _.each(this.extraClasses, function(klass){
+          this.$el.addClass(klass);
+        });
+      }, this);
+    },
+    handleClick: function(e) {
+      e.preventDefault();
+      if (!this.$el.prop('disabled')) {
+        this.uiEventTrigger('click', this, e);
+      }
+    },
+    serializedModel: function() {
+      return _.extend({'icon': '', 'title': ''}, this.options);
+    },
+    disable: function() {
+      this.$el.prop('disabled', true);
+    },
+    enable: function() {
+      this.$el.prop('disabled', false);
+    }
+  });
+
+  return AnchorView;
+});
diff --git a/mockup/js/ui/views/dropdown.js b/mockup/js/ui/views/dropdown.js
new file mode 100644
index 00000000..6e4505a0
--- /dev/null
+++ b/mockup/js/ui/views/dropdown.js
@@ -0,0 +1,56 @@
+define([
+  'underscore',
+  'mockup-ui-url/views/buttongroup',
+  'text!mockup-ui-url/templates/dropdown.xml',
+], function(_, ButtonGroup, DropdownTemplate) {
+  'use strict';
+
+  var DropdownView = ButtonGroup.extend({
+    idPrefix: 'btngroup-dropdown-',
+    template: DropdownTemplate,
+    itemContainer: "ul.dropdown-content",
+    title: null,
+
+    initialize: function(options) {
+      ButtonGroup.prototype.initialize.apply(this, [options]);
+
+      this.on('render', function() {
+        this.renderTitle();
+      }, this);
+    },
+
+    renderTitle: function() {
+      var title = this.options.title;
+      if(this.options.title == undefined){
+        title = this.title;
+        if(this.title == null){
+          title = "Menu Option";
+        }
+      }
+      this.$('.dropdown-title').empty().append(title);
+    },
+
+    renderItems: function() {
+      var $container;
+
+      if (this.itemContainer !== null) {
+        $container = $(this.itemContainer, this.$el);
+        if ($container.length === 0) {
+          throw 'Item Container element not found.';
+        }
+      } else {
+        $container = this.$el;
+      }
+
+      var $item = null;
+      _.each(this.items, function(view) {
+        $item = $("<li></li>");
+        $item.append(view.render().$el.removeClass("btn"));
+        $container.append($item);
+      }, this);
+    },
+
+  });
+
+  return DropdownView;
+});
diff --git a/mockup/patterns/filemanager/js/basepopover.js b/mockup/patterns/filemanager/js/basepopover.js
index fee2ab53..61796918 100644
--- a/mockup/patterns/filemanager/js/basepopover.js
+++ b/mockup/patterns/filemanager/js/basepopover.js
@@ -1,22 +1,52 @@
 define([
   'underscore',
-  'mockup-ui-url/views/popover'
-], function(_, PopoverView) {
+  'mockup-ui-url/views/popover',
+  'text!mockup-patterns-filemanager-url/templates/popover.xml',
+], function(_, PopoverView, PopoverTemplate) {
   'use strict';
 
   var FileManagerPopover = PopoverView.extend({
     className: 'popover',
     title: _.template('nothing'),
     content: _.template('<div/>'),
+    template: PopoverTemplate,
     initialize: function(options) {
       this.app = options.app;
       PopoverView.prototype.initialize.apply(this, [options]);
     },
+    afterRender: function () {
+      var self = this;
+      self.$el.find(".popover-close").click(function(e){
+        self.hide(true);
+      });
+      return self;
+    },
+    getBodyClassName: function(){
+      var name = 'popover-';
+      if(this.options.id){
+        name += this.options.id + '-';
+      }
+      name += 'active';
+      return name;
+    },
     render: function() {
       var self = this;
       PopoverView.prototype.render.call(this);
       return self;
     },
+    hide: function(closePopover) {
+      if(this.closeOnOutClick || closePopover == true){
+        this.opened = false;
+        this.$el.removeClass('active');
+        if (this.triggerView) {
+          this.triggerView.$el.removeClass('active');
+          this.triggerView.$el.attr('aria-hidden', 'true');
+        }
+        this.uiEventTrigger('hide', this);
+        this.$el.attr('aria-hidden', 'true');
+        $('body').removeClass(this.getBodyClassName());
+      }
+    },
     toggle: function(button, e) {
       PopoverView.prototype.toggle.apply(this, [button, e]);
       var self = this;
diff --git a/mockup/patterns/filemanager/js/filesearch.js b/mockup/patterns/filemanager/js/filesearch.js
deleted file mode 100644
index be5c35d1..00000000
--- a/mockup/patterns/filemanager/js/filesearch.js
+++ /dev/null
@@ -1,73 +0,0 @@
-define([
-  'jquery',
-  'underscore',
-  'mockup-patterns-filemanager-url/js/basepopover',
-  'translate'
-], function($, _, PopoverView, _t) {
-  'use strict';
-
-  var FileSearchView = PopoverView.extend({
-    className: 'popover filesearch',
-    title: _.template('<%= _t("File Search") %>'),
-    content: _.template(
-      '<form>' +
-        '<div class="input-group">' +
-          '<input type="text" class="search form-control" ' +
-                  'id="file-search-field" placeholder="<%= _t("Find theme resource in plone") %>">' +
-          '<span class="input-group-btn">' +
-            '<input type="submit" class="btn btn-primary" value="<%= _t("Search") %>"/>' +
-          '</span>' +
-        '</div>' +
-      '</form>' +
-      '<ul class="results list-group">' +
-      '</ul>'
-    ),
-    render: function() {
-      var self = this;
-      PopoverView.prototype.render.call(this);
-      self.$form = self.$('form');
-      self.$results = self.$('.results');
-      self.$form.submit(function(e) {
-        e.preventDefault();
-        $.ajax({
-          url: self.app.options.resourceSearchUrl,
-          dataType: 'json',
-          success: function(data) {
-            self.$results.empty();
-            _.each(data, function(item) {
-              var $item = $(
-                '<li class="list-group-item" data-id="' + item.id + '">' +
-                  '<span class="badge"><a href=#">' + _t('Customize') + '</a></span>' +
-                  item.id +
-                '</li>');
-              $('a', $item).click(function(e) {
-                e.preventDefault();
-                self.customize($(this).parents('li').eq(0).attr('data-id'));
-              });
-              self.$results.append($item);
-            });
-          }
-        });
-      });
-      return self;
-    },
-    customize: function(resource) {
-      var self = this;
-      self.app.doAction('customize', {
-        type: 'POST',
-        data: {
-          resource: resource
-        },
-        success: function(data) {
-          self.hide();
-          // clear out
-          self.$('input.search').attr('value', '');
-          self.$results.empty();
-          self.app.refreshTree();
-        }
-      });
-    }
-  });
-
-  return FileSearchView;
-});
diff --git a/mockup/patterns/filemanager/js/findfile.js b/mockup/patterns/filemanager/js/findfile.js
new file mode 100644
index 00000000..d4c0c3dd
--- /dev/null
+++ b/mockup/patterns/filemanager/js/findfile.js
@@ -0,0 +1,101 @@
+define([
+  'jquery',
+  'underscore',
+  'mockup-patterns-filemanager-url/js/basepopover',
+  'translate'
+], function($, _, PopoverView, _t) {
+  'use strict';
+
+  var FindFile = PopoverView.extend({
+    className: 'popover filesearch',
+    closeOnOutClick: false,
+    backdropOptions: {
+      zIndex: '1009',
+      opacity: '0.4',
+      className: 'backdrop backdrop-popover',
+      classActiveName: 'backdrop-active',
+      closeOnEsc: false,
+      closeOnClick: false
+    },
+    title: _.template('<%= _t("Find File") %>'),
+    content: _.template(
+      '<form>' +
+        '<div class="input-group">' +
+          '<input type="text" class="search form-control" ' +
+                  'id="file-search-field" placeholder="<%= _t("Find theme resource in plone") %>">' +
+        '</div>' +
+        '<div class="input-group">' +
+          '<input type="submit" class="btn btn-primary" value="<%= _t("Search") %>"/>' +
+        '</div>' +
+      '</form><br/>' +
+      '<ul class="results list-group">' +
+      '</ul>'
+    ),
+    appendToResults: function(item){
+      var self = this;
+      var $item = $(
+        '<li class="list-group-item">' +
+          '<span class="badge"><a data-target="' + item.path + '" href=#">' +
+          _t(item.filename) + '</a></span>' +
+        '</li>');
+      $('a', $item).click(function(e) {
+        e.preventDefault();
+        self.findfile($(this).attr('data-target'));
+      });
+      self.$results.append($item);
+    },
+    filterFiles: function(patt, data){
+      var self = this;
+      _.each(data, function(item) {
+        if(item.folder){
+          self.filterFiles(patt, item.children);
+        }else{
+          if(patt.test(item.filename)){
+            self.appendToResults(item);
+            self.noMatches++;
+          }
+        }
+      });
+    },
+    render: function() {
+      var self = this;
+      PopoverView.prototype.render.call(this);
+      self.$form = self.$('form');
+      self.$searchFor = self.$("input");
+      self.$results = self.$('.results');
+      self.$form.submit(function(e) {
+        e.preventDefault();
+        $.ajax({
+          url: self.app.options.actionUrl + '?action=dataTree',
+          dataType: 'json',
+          success: function(data) {
+            self.$results.empty();
+            self.noMatches = 0;
+            var searchFor = self.$searchFor.val();
+            var patt = new RegExp(searchFor, "g");
+            self.filterFiles(patt, data);
+            if(self.noMatches == 0){
+              self.$results.append("<span>No results found for " + searchFor + "</span>");
+            }
+          }
+        });
+      });
+      return self;
+    },
+    findfile: function(resource) {
+      var self = this;
+      self.app.doAction('getFile', {
+        data: {
+          path: resource
+        },
+        dataType: 'json',
+        success: function(data) {
+          self.app.fileData[resource] = data;
+          self.app.openEditor(resource);
+        }
+      });
+    }
+  });
+
+  return FindFile;
+});
diff --git a/mockup/patterns/filemanager/js/findinfiles.js b/mockup/patterns/filemanager/js/findinfiles.js
new file mode 100644
index 00000000..904741f9
--- /dev/null
+++ b/mockup/patterns/filemanager/js/findinfiles.js
@@ -0,0 +1,134 @@
+define([
+  'jquery',
+  'underscore',
+  'mockup-patterns-filemanager-url/js/basepopover',
+  'translate'
+], function($, _, PopoverView, _t) {
+  'use strict';
+
+  var FindInFiles = PopoverView.extend({
+    className: 'popover filesearch',
+    closeOnOutClick: false,
+    backdropOptions: {
+      zIndex: '1009',
+      opacity: '0.4',
+      className: 'backdrop backdrop-popover',
+      classActiveName: 'backdrop-active',
+      closeOnEsc: false,
+      closeOnClick: false
+    },
+    title: _.template('<%= _t("File in File") %>'),
+    content: _.template(
+      '<form>' +
+        '<div class="input-group">' +
+          '<input type="text" class="search form-control" ' +
+                  'id="file-search-field" placeholder="<%= _t("Find text witin theme resource in plone") %>">' +
+        '</div>' +
+        '<div class="input-group">' +
+          '<input type="submit" class="btn btn-primary" value="<%= _t("Search") %>"/>' +
+        '</div>' +
+      '</form><br/>' +
+      '<ul style="max-height: 400px; overflow: auto;" class="results list-group">' +
+      '</ul>'
+    ),
+    appendToResults: function(item){
+      var self = this, seen = null;
+      var file_item =
+        '<li class="list-group-item" data-id="' + item.file.label + '">' +
+          '<span class="badge">' + _t(item.file.filename) + '</span><ul>';
+      for(var x in item.lines){
+        seen = item.lines[x];
+        file_item += '<li class="list-group-item" data-id="' + item.file.label + '">' +
+          '<span class="badge"><a class="ff-open-file" data-target="'+item.file.path+'" ' +
+          'target-line="'+seen.line+'" href="#">Line ' +
+          '<span style="display: inline-block; width: 100px;">' + seen.line +
+          '</span><span>'+seen.text+'</span><a></span></li>';
+      }
+      file_item += '</ul></li>';
+      var $item = $(file_item);
+      $('a', $item).click(function(e) {
+        e.preventDefault();
+        self.findinfiles($(this).attr("data-target"));
+      });
+      self.$results.append($item);
+    },
+
+    filterFile: function(patt, item){
+      var self = this;
+      $.ajax({
+        url: self.app.options.actionUrl + '?action=getFile&path='+item.path.replace("/", "%2F"),
+        dataType: 'json',
+        success: function(data) {
+          var contents = data["contents"];
+          if(contents == undefined){
+            return;
+          }
+          var lines = contents.split("\n");
+          var seen = [], line = '';
+          var result = null;
+          for(var x in lines){
+            line = lines[x];
+            result = patt.exec(line);
+            if(result != null){
+              seen.push({
+                "line": parseInt(x) + 1,
+                "text": '<b>'+result[0]+'</b>'+line.substr(result["index"] + result[0].length, 20)
+              });
+            }
+          }
+          if(seen.length > 0){
+            self.appendToResults({file: item, lines: seen});
+            self.noMatches += seen.length;
+          }
+        }
+      });
+    },
+    filterFiles: function(patt, data){
+      var self = this;
+      _.each(data, function(item) {
+        if(item.folder){
+          self.filterFiles(patt, item.children);
+        }else{
+          self.filterFile(patt, item);
+        }
+      });
+    },
+    render: function() {
+      var self = this;
+      PopoverView.prototype.render.call(this);
+      self.$form = self.$('form');
+      self.$searchFor = self.$("input");
+      self.$results = self.$('.results');
+      self.$form.submit(function(e) {
+        e.preventDefault();
+        $.ajax({
+          url: self.app.options.actionUrl + '?action=dataTree',
+          dataType: 'json',
+          success: function(data) {
+            self.$results.empty();
+            self.noMatches = 0;
+            var searchFor = self.$searchFor.val();
+            var patt = new RegExp(searchFor, "g");
+            self.filterFiles(patt, data);
+          }
+        });
+      });
+      return self;
+    },
+    findinfiles: function(resource) {
+      var self = this;
+      self.app.doAction('getFile', {
+        data: {
+          path: resource
+        },
+        dataType: 'json',
+        success: function(data) {
+          self.app.fileData[resource] = data;
+          self.app.openEditor(resource);
+        }
+      });
+    }
+  });
+
+  return FindInFiles;
+});
diff --git a/mockup/patterns/filemanager/pattern.filemanager.less b/mockup/patterns/filemanager/pattern.filemanager.less
index b5fd4216..c37f28ac 100644
--- a/mockup/patterns/filemanager/pattern.filemanager.less
+++ b/mockup/patterns/filemanager/pattern.filemanager.less
@@ -27,6 +27,11 @@
     .popover:extend(.popover all){}
     .popover-title:extend(.popover-title all){}
     .popover-content:extend(.popover-content all){}
+
+    .popover{
+        max-width: 600px;
+    }
+
     .arrow:extend(.arrow all){}
 
     .table:extend(.table all){}
diff --git a/mockup/patterns/filemanager/pattern.js b/mockup/patterns/filemanager/pattern.js
index 5ab7b96a..916780f3 100644
--- a/mockup/patterns/filemanager/pattern.js
+++ b/mockup/patterns/filemanager/pattern.js
@@ -40,19 +40,23 @@ define([
   'mockup-ui-url/views/toolbar',
   'mockup-ui-url/views/button',
   'mockup-ui-url/views/buttongroup',
+  'mockup-ui-url/views/anchor',
+  'mockup-ui-url/views/dropdown',
   'mockup-patterns-filemanager-url/js/addnew',
   'mockup-patterns-filemanager-url/js/newfolder',
-  'mockup-patterns-filemanager-url/js/filesearch',
+  'mockup-patterns-filemanager-url/js/findfile',
+  'mockup-patterns-filemanager-url/js/findinfiles',
   'mockup-patterns-filemanager-url/js/delete',
   'mockup-patterns-filemanager-url/js/customize',
   'mockup-patterns-filemanager-url/js/rename',
   'mockup-patterns-filemanager-url/js/upload',
   'translate',
   'mockup-utils',
-  'text!mockup-ui-url/templates/popover.xml'
+  'text!mockup-ui-url/templates/popover.xml',
+  'text!mockup-ui-url/templates/dropdown.xml'
 ], function($, Base, _, Tree, TextEditor, AppTemplate, Toolbar,
-  ButtonView, ButtonGroup, AddNewView, NewFolderView, DeleteView,
-  FileSearchView,
+  ButtonView, ButtonGroup, AnchorView, DropdownView,
+  AddNewView, NewFolderView, FindFileView, FindInFilesView, DeleteView,
   CustomizeView, RenameView, UploadView, _t, utils) {
   'use strict';
 
@@ -137,16 +141,26 @@ define([
         }),
         app: self
       });
-      var fileSearchView = new FileSearchView({
-        triggerView: new ButtonView({
-          id: 'filesarch',
-          title: _t('File Search'),
+      var findFileView = new FindFileView({
+        triggerView: new AnchorView({
+          id: 'findfile',
+          title: _t('Find File'),
           tooltip: _t('Find theme resource in plone'),
           icon: 'file',
           context: 'default'
         }),
         app: self
       });
+      var findinFilesView = new FindInFilesView({
+        triggerView: new AnchorView({
+          id: 'findinfiles',
+          title: _t('Find in Files'),
+          tooltip: _t('Find text within theme resource in plone'),
+          icon: 'file',
+          context: 'default'
+        }),
+        app: self
+      });
       var renameView = new RenameView({
         triggerView: new ButtonView({
           id: 'rename',
@@ -168,18 +182,29 @@ define([
         app: self
       });
 
+      var find_menu = new DropdownView({
+        title: _t('Find'),
+        items: [
+          findFileView.triggerView,
+          findinFilesView.triggerView
+        ],
+        id: 'find',
+        app: self
+      })
+
       self.views = [
         newFolderView,
         addNewView,
-        fileSearchView,
+        findFileView,
+        findinFilesView,
         renameView,
         deleteView
       ];
       var mainButtons = [
         self.saveBtn,
         newFolderView.triggerView,
-        fileSearchView.triggerView,
         addNewView.triggerView,
+        find_menu,
         renameView.triggerView,
         deleteView.triggerView
       ];
@@ -304,6 +329,7 @@ define([
         }
       });
 
+
       self.$tree.bind('tree.select', function(e) {
         if (e.node === null) {
           self.toggleButtons(false);
diff --git a/mockup/patterns/filemanager/templates/app.xml b/mockup/patterns/filemanager/templates/app.xml
index 11d594ff..e5194500 100644
--- a/mockup/patterns/filemanager/templates/app.xml
+++ b/mockup/patterns/filemanager/templates/app.xml
@@ -1,5 +1,7 @@
 <div id="toolbar">
 </div>
+<div id="toolbar-action">
+</div>
 <div class="container">
     <div class="tree">
     </div>
@@ -14,4 +16,4 @@
                 </div>
             </div>
         </nav>
-</div>
\ No newline at end of file
+</div>
diff --git a/mockup/patterns/filemanager/templates/popover.xml b/mockup/patterns/filemanager/templates/popover.xml
new file mode 100644
index 00000000..a276f070
--- /dev/null
+++ b/mockup/patterns/filemanager/templates/popover.xml
@@ -0,0 +1,12 @@
+<div class="arrow"></div>
+<div class="popover-label">
+<div style="position: relative;" class="popover-title">
+</div>
+<a style="position: absolute; top: 5px; right: 3px; font-size: 16px; color: #999;"
+   href="#" class="popover-close">
+  <span class="glyphicon glyphicon-remove"></span>
+</a>
+</div>
+<div class="items popover-content">
+</div>
+
diff --git a/mockup/patterns/relateditems/pattern.js b/mockup/patterns/relateditems/pattern.js
index f10d3145..00ff3883 100644
--- a/mockup/patterns/relateditems/pattern.js
+++ b/mockup/patterns/relateditems/pattern.js
@@ -98,11 +98,11 @@ define([
   'mockup-utils',
   'pat-registry',
   'translate',
-  'text!mockup-patterns-relateditems-url/templates/breadcrumb.xml',
-  'text!mockup-patterns-relateditems-url/templates/favorite.xml',
-  'text!mockup-patterns-relateditems-url/templates/result.xml',
-  'text!mockup-patterns-relateditems-url/templates/selection.xml',
-  'text!mockup-patterns-relateditems-url/templates/toolbar.xml',
+//  'text!mockup-patterns-relateditems-url/templates/breadcrumb.xml',
+//  'text!mockup-patterns-relateditems-url/templates/favorite.xml',
+//  'text!mockup-patterns-relateditems-url/templates/result.xml',
+//  'text!mockup-patterns-relateditems-url/templates/selection.xml',
+//  'text!mockup-patterns-relateditems-url/templates/toolbar.xml',
   'bootstrap-dropdown'
 ], function($, _, Base, Select2, ButtonView, utils, registry, _t,
             BreadcrumbTemplate,


Repository: mockup


Branch: refs/heads/master
Date: 2017-06-27T18:40:08-05:00
Author: Oshane Bailey (b4oshany) <b4.oshany@gmail.com>
Commit: https://github.com/plone/mockup/commit/e8b3f95881fe43a6c30b170a955d46206827ea7b

Closes #772, search for files and text within files.

Files changed:
M CHANGES.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index 254e796a..f4a82310 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -17,6 +17,11 @@ New features:
  - Added Bootstrap Dropdown menu to the UI views
  - Added Anchor (a) tag to the UI views
 
+ - Search for files and opening the file upon click.
+ - Search for text within files and opening the file upon click.
+ - Added Bootstrap Dropdown menu to the UI views.
+ - Added Anchor (a) tag to the UI views.
+ 
  - make thumb size in folder contents listing adjustable/supressable
    replace meaningless paper clip icon (fontello) with mime type icons
    from mimetype registry


Repository: mockup


Branch: refs/heads/master
Date: 2017-06-27T18:40:08-05:00
Author: Oshane Bailey (b4oshany) <b4.oshany@gmail.com>
Commit: https://github.com/plone/mockup/commit/cbe388ffe83bca45a3884d2dc80e96f7361db2b4

Fix the test result.

Files changed:
M mockup/js/ui/views/dropdown.js

diff --git a/mockup/js/ui/views/dropdown.js b/mockup/js/ui/views/dropdown.js
index 6e4505a0..7a04f5d8 100644
--- a/mockup/js/ui/views/dropdown.js
+++ b/mockup/js/ui/views/dropdown.js
@@ -1,8 +1,9 @@
 define([
+  'jquery',
   'underscore',
   'mockup-ui-url/views/buttongroup',
   'text!mockup-ui-url/templates/dropdown.xml',
-], function(_, ButtonGroup, DropdownTemplate) {
+], function($, _, ButtonGroup, DropdownTemplate) {
   'use strict';
 
   var DropdownView = ButtonGroup.extend({
@@ -31,6 +32,7 @@ define([
     },
 
     renderItems: function() {
+      var self = this;
       var $container;
 
       if (this.itemContainer !== null) {


Repository: mockup


Branch: refs/heads/master
Date: 2017-06-27T18:40:55-05:00
Author: Oshane Bailey (b4oshany) <b4.oshany@gmail.com>
Commit: https://github.com/plone/mockup/commit/b353bb193b3ada5b84198505e784719a233735be

Bug fixes.

Files changed:
M mockup/js/ui/views/anchor.js
M mockup/js/ui/views/dropdown.js
M mockup/patterns/relateditems/pattern.js

diff --git a/mockup/js/ui/views/anchor.js b/mockup/js/ui/views/anchor.js
index df83e45e..9e0f8e4a 100644
--- a/mockup/js/ui/views/anchor.js
+++ b/mockup/js/ui/views/anchor.js
@@ -30,7 +30,7 @@ define([
       this.on('render', function() {
         this.$el.attr('title', this.options.title || '');
         this.$el.attr('aria-label', this.options.title || this.options.tooltip || '');
-        _.each(this.extraClasses, function(klass){
+        _.each(this.extraClasses, function(klass) {
           this.$el.addClass(klass);
         });
       }, this);
diff --git a/mockup/js/ui/views/dropdown.js b/mockup/js/ui/views/dropdown.js
index 7a04f5d8..53cddacb 100644
--- a/mockup/js/ui/views/dropdown.js
+++ b/mockup/js/ui/views/dropdown.js
@@ -22,9 +22,9 @@ define([
 
     renderTitle: function() {
       var title = this.options.title;
-      if(this.options.title == undefined){
+      if(this.options.title === undefined) {
         title = this.title;
-        if(this.title == null){
+        if(this.title === null) {
           title = "Menu Option";
         }
       }
diff --git a/mockup/patterns/relateditems/pattern.js b/mockup/patterns/relateditems/pattern.js
index 00ff3883..f10d3145 100644
--- a/mockup/patterns/relateditems/pattern.js
+++ b/mockup/patterns/relateditems/pattern.js
@@ -98,11 +98,11 @@ define([
   'mockup-utils',
   'pat-registry',
   'translate',
-//  'text!mockup-patterns-relateditems-url/templates/breadcrumb.xml',
-//  'text!mockup-patterns-relateditems-url/templates/favorite.xml',
-//  'text!mockup-patterns-relateditems-url/templates/result.xml',
-//  'text!mockup-patterns-relateditems-url/templates/selection.xml',
-//  'text!mockup-patterns-relateditems-url/templates/toolbar.xml',
+  'text!mockup-patterns-relateditems-url/templates/breadcrumb.xml',
+  'text!mockup-patterns-relateditems-url/templates/favorite.xml',
+  'text!mockup-patterns-relateditems-url/templates/result.xml',
+  'text!mockup-patterns-relateditems-url/templates/selection.xml',
+  'text!mockup-patterns-relateditems-url/templates/toolbar.xml',
   'bootstrap-dropdown'
 ], function($, _, Base, Select2, ButtonView, utils, registry, _t,
             BreadcrumbTemplate,


Repository: mockup


Branch: refs/heads/master
Date: 2017-06-27T18:40:55-05:00
Author: Oshane Bailey (b4oshany) <b4.oshany@gmail.com>
Commit: https://github.com/plone/mockup/commit/f17d846a9013e9d73f6c5ab71725c7e1225f4a20

Closes #772, search for files and text within files.

Files changed:
M .gitignore
M CHANGES.rst
M mockup/patterns/relateditems/pattern.js

diff --git a/.gitignore b/.gitignore
index 687ae184..69d17555 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,3 +1,4 @@
+*.orig
 *.egg-info
 *.py?
 .idea
diff --git a/CHANGES.rst b/CHANGES.rst
index f4a82310..ea9f7880 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -25,6 +25,16 @@ New features:
  - make thumb size in folder contents listing adjustable/supressable
    replace meaningless paper clip icon (fontello) with mime type icons
    from mimetype registry
+ - Make thumb scale in folder contents listing adjustable/supressable.
+   Replace meaningless paper clip icon (fontello) with mime type icons from mimetype registry.
+ - Search for files and opening the file upon click
+ - Search for text within files and opening the file upon click
+ - Added Bootstrap Dropdown menu to the UI views
+ - Added Anchor (a) tag to the UI views
+
+ - make thumb size in folder contents listing adjustable/supressable
+   replace meaningless paper clip icon (fontello) with mime type icons
+   from mimetype registry
    https://github.com/plone/Products.CMFPlone/issues/1734
    [fgrcon]
 
diff --git a/mockup/patterns/relateditems/pattern.js b/mockup/patterns/relateditems/pattern.js
index f10d3145..00ff3883 100644
--- a/mockup/patterns/relateditems/pattern.js
+++ b/mockup/patterns/relateditems/pattern.js
@@ -98,11 +98,11 @@ define([
   'mockup-utils',
   'pat-registry',
   'translate',
-  'text!mockup-patterns-relateditems-url/templates/breadcrumb.xml',
-  'text!mockup-patterns-relateditems-url/templates/favorite.xml',
-  'text!mockup-patterns-relateditems-url/templates/result.xml',
-  'text!mockup-patterns-relateditems-url/templates/selection.xml',
-  'text!mockup-patterns-relateditems-url/templates/toolbar.xml',
+//  'text!mockup-patterns-relateditems-url/templates/breadcrumb.xml',
+//  'text!mockup-patterns-relateditems-url/templates/favorite.xml',
+//  'text!mockup-patterns-relateditems-url/templates/result.xml',
+//  'text!mockup-patterns-relateditems-url/templates/selection.xml',
+//  'text!mockup-patterns-relateditems-url/templates/toolbar.xml',
   'bootstrap-dropdown'
 ], function($, _, Base, Select2, ButtonView, utils, registry, _t,
             BreadcrumbTemplate,


Repository: mockup


Branch: refs/heads/master
Date: 2017-06-27T18:40:55-05:00
Author: Oshane Bailey (b4oshany) <b4.oshany@gmail.com>
Commit: https://github.com/plone/mockup/commit/759beb777c96eb24e446dc2f641a5ca867e11708

Closes #772, search for files and text within files.

Files changed:
M CHANGES.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index ea9f7880..ac3d8bf4 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -32,6 +32,11 @@ New features:
  - Added Bootstrap Dropdown menu to the UI views
  - Added Anchor (a) tag to the UI views
 
+ - Search for files and opening the file upon click.
+ - Search for text within files and opening the file upon click.
+ - Added Bootstrap Dropdown menu to the UI views.
+ - Added Anchor (a) tag to the UI views.
+ 
  - make thumb size in folder contents listing adjustable/supressable
    replace meaningless paper clip icon (fontello) with mime type icons
    from mimetype registry


Repository: mockup


Branch: refs/heads/master
Date: 2017-06-27T18:40:55-05:00
Author: Oshane Bailey (b4oshany) <b4.oshany@gmail.com>
Commit: https://github.com/plone/mockup/commit/e2fe4eeef2f7b24b00719bcc1986e1b9910d6edd

Bug fixes.

Files changed:
M mockup/patterns/relateditems/pattern.js

diff --git a/mockup/patterns/relateditems/pattern.js b/mockup/patterns/relateditems/pattern.js
index 00ff3883..f10d3145 100644
--- a/mockup/patterns/relateditems/pattern.js
+++ b/mockup/patterns/relateditems/pattern.js
@@ -98,11 +98,11 @@ define([
   'mockup-utils',
   'pat-registry',
   'translate',
-//  'text!mockup-patterns-relateditems-url/templates/breadcrumb.xml',
-//  'text!mockup-patterns-relateditems-url/templates/favorite.xml',
-//  'text!mockup-patterns-relateditems-url/templates/result.xml',
-//  'text!mockup-patterns-relateditems-url/templates/selection.xml',
-//  'text!mockup-patterns-relateditems-url/templates/toolbar.xml',
+  'text!mockup-patterns-relateditems-url/templates/breadcrumb.xml',
+  'text!mockup-patterns-relateditems-url/templates/favorite.xml',
+  'text!mockup-patterns-relateditems-url/templates/result.xml',
+  'text!mockup-patterns-relateditems-url/templates/selection.xml',
+  'text!mockup-patterns-relateditems-url/templates/toolbar.xml',
   'bootstrap-dropdown'
 ], function($, _, Base, Select2, ButtonView, utils, registry, _t,
             BreadcrumbTemplate,


Repository: mockup


Branch: refs/heads/master
Date: 2017-06-27T18:40:55-05:00
Author: Oshane Bailey (b4oshany) <b4.oshany@gmail.com>
Commit: https://github.com/plone/mockup/commit/a776d8d03eab55a5f21da655615d59101c45affe

Enable drag and drop inside of the theme editor file tree.

Files changed:
M CHANGES.rst
M bower.json
M mockup/patterns/filemanager/pattern.js

diff --git a/CHANGES.rst b/CHANGES.rst
index ac3d8bf4..6bfc5445 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -26,17 +26,14 @@ New features:
    replace meaningless paper clip icon (fontello) with mime type icons
    from mimetype registry
  - Make thumb scale in folder contents listing adjustable/supressable.
-   Replace meaningless paper clip icon (fontello) with mime type icons from mimetype registry.
- - Search for files and opening the file upon click
- - Search for text within files and opening the file upon click
- - Added Bootstrap Dropdown menu to the UI views
- - Added Anchor (a) tag to the UI views
-
+ - Replace meaningless paper clip icon (fontello) with mime type icons from mimetype registry.
+ - Enable Drag and Drop inside of the theme editor file tree.
+ - Upgrade JQTree to 1.4.1
  - Search for files and opening the file upon click.
  - Search for text within files and opening the file upon click.
  - Added Bootstrap Dropdown menu to the UI views.
  - Added Anchor (a) tag to the UI views.
- 
+
  - make thumb size in folder contents listing adjustable/supressable
    replace meaningless paper clip icon (fontello) with mime type icons
    from mimetype registry
diff --git a/bower.json b/bower.json
index 7603daf8..55232710 100644
--- a/bower.json
+++ b/bower.json
@@ -9,7 +9,7 @@
     "console-polyfill": "0.2.2",
     "dropzone": "4.3.0",
     "es5-shim": "4.5.9",
-    "jqtree": "1.3.3",
+    "jqtree": "1.4.1",
     "jquery": "1.11.3",
     "jquery-form": "3.51",
     "jquery.cookie": "1.4.1",
diff --git a/mockup/patterns/filemanager/pattern.js b/mockup/patterns/filemanager/pattern.js
index 916780f3..d711e972 100644
--- a/mockup/patterns/filemanager/pattern.js
+++ b/mockup/patterns/filemanager/pattern.js
@@ -95,13 +95,13 @@ define([
 
       self.options.treeConfig = $.extend(true, {}, self.treeConfig, {
         dataUrl: self.options.actionUrl + '?action=dataTree',
+        dragAndDrop: true,
         onCreateLi: function(node, li) {
           var imageTypes = ['png', 'jpg', 'jpeg', 'gif', 'ico'];
           var themeTypes = ['css', 'html', 'htm', 'txt', 'xml', 'js', 'cfg', 'less'];
-
           $('span', li).addClass('glyphicon');
           if (node.folder) {
-            $('span', li).addClass('glyphicon-folder-close');
+            $('span', li).addClass('glyphicon-folder-close').addClass("droptarget");
           } else if ($.inArray(node.fileType, imageTypes) >= 0) {
             $('span', li).addClass('glyphicon-picture');
           } else if ($.inArray(node.fileType, themeTypes) >= 0) {
@@ -339,6 +339,23 @@ define([
         }
       });
 
+      self.$tree.bind('tree.move', function(event) {
+        self.doAction('move', {
+          data: {
+            source: event.move_info.moved_node.path,
+            destination: event.move_info.target_node.path
+          },
+          dataType: 'json',
+          success: function(data) {
+            console.log(data);
+            var jdata = JSON.parse(data);
+            if(jdata.error != ''){
+              alert(jdata.error);
+            }
+          }
+        });
+      });
+
       self.$tree.bind('tree.open', function(e) {
         var element = $(e.node.element).find(':first').find('.glyphicon');
         $(element).addClass('glyphicon-folder-open');


Repository: mockup


Branch: refs/heads/master
Date: 2017-06-28T06:08:14-05:00
Author: Oshane Bailey (b4oshany) <b4.oshany@gmail.com>
Commit: https://github.com/plone/mockup/commit/289a7985a8010cef872d939073e977500f4b8d5f

Merge branch 'theme-filemanager-searching-feature' of github.com:plone/mockup into theme-filemanager-searching-feature

Files changed:
M CHANGES.rst
M mockup/patterns/filemanager/pattern.js
M mockup/patterns/thememapper/pattern.thememapper.less

diff --git a/CHANGES.rst b/CHANGES.rst
index 6bfc5445..72b85eb1 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,6 +10,10 @@ Breaking changes:
 
 New features:
 
+ - Search for files and opening the file upon click.
+ - Search for text within files and opening the file upon click.
+ - Added Bootstrap Dropdown menu to the UI views.
+ - Added Anchor (a) tag to the UI views.
  - Make thumb scale in folder contents listing adjustable/supressable.
    Replace meaningless paper clip icon (fontello) with mime type icons from mimetype registry.
  - Search for files and opening the file upon click
@@ -37,6 +41,17 @@ New features:
  - make thumb size in folder contents listing adjustable/supressable
    replace meaningless paper clip icon (fontello) with mime type icons
    from mimetype registry
+ - Replace meaningless paper clip icon (fontello) with mime type icons from mimetype registry.
+ - Enable Drag and Drop inside of the theme editor file tree.
+ - Upgrade JQTree to 1.4.1
+ - Search for files and opening the file upon click.
+ - Search for text within files and opening the file upon click.
+ - Added Bootstrap Dropdown menu to the UI views.
+ - Added Anchor (a) tag to the UI views.
+
+ - make thumb size in folder contents listing adjustable/supressable
+   replace meaningless paper clip icon (fontello) with mime type icons
+   from mimetype registry
    https://github.com/plone/Products.CMFPlone/issues/1734
    [fgrcon]
 
diff --git a/mockup/patterns/filemanager/pattern.js b/mockup/patterns/filemanager/pattern.js
index d711e972..3bcc6e2a 100644
--- a/mockup/patterns/filemanager/pattern.js
+++ b/mockup/patterns/filemanager/pattern.js
@@ -189,7 +189,8 @@ define([
           findinFilesView.triggerView
         ],
         id: 'find',
-        app: self
+        app: self,
+        disable: function() {}
       })
 
       self.views = [
@@ -329,7 +330,6 @@ define([
         }
       });
 
-
       self.$tree.bind('tree.select', function(e) {
         if (e.node === null) {
           self.toggleButtons(false);
diff --git a/mockup/patterns/thememapper/pattern.thememapper.less b/mockup/patterns/thememapper/pattern.thememapper.less
index 7666065a..4c58cce6 100644
--- a/mockup/patterns/thememapper/pattern.thememapper.less
+++ b/mockup/patterns/thememapper/pattern.thememapper.less
@@ -1,6 +1,6 @@
 @import "@{mockuplessPath}/ui.less";
 /* just be lazy here and include all of bootstrap... */
-@import "@{mockupPath}/filemanager/pattern.filemanager.less";
+@import "@{mockup-patterns-filemanager}";
 
 body.plone-toolbar-left-default {
 	padding-left: 0px;


Repository: mockup


Branch: refs/heads/master
Date: 2017-06-28T14:10:54-05:00
Author: Oshane Bailey (b4oshany) <b4.oshany@gmail.com>
Commit: https://github.com/plone/mockup/commit/8918bdb40ac9cfe195974c33bf410335f054bf2a

Improve the UI and functionality of the find command.

Files changed:
M mockup/js/bundles/filemanager.js
M mockup/js/ui/templates/dropdown.xml
M mockup/js/ui/views/dropdown.js
M mockup/patterns/filemanager/js/findinfiles.js
M mockup/patterns/filemanager/pattern.filemanager.less
M mockup/patterns/filemanager/pattern.js

diff --git a/mockup/js/bundles/filemanager.js b/mockup/js/bundles/filemanager.js
index 18c3b196..84778497 100644
--- a/mockup/js/bundles/filemanager.js
+++ b/mockup/js/bundles/filemanager.js
@@ -1,6 +1,6 @@
 define([
   'pat-registry',
-  'mockup-patterns-filemanager'
+  'mockup-patterns-filemanager',
 ], function(registry) {
   'use strict';
   // initialize only if we are in top frame
diff --git a/mockup/js/ui/templates/dropdown.xml b/mockup/js/ui/templates/dropdown.xml
index ffb2492a..34c20d25 100644
--- a/mockup/js/ui/templates/dropdown.xml
+++ b/mockup/js/ui/templates/dropdown.xml
@@ -1,5 +1,6 @@
 
-<a style="padding-top: 8px" href="#" class="btn btn-default dropdown-toggle" type="button" id="dropdown-menu-" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
+<a href="#" class="btn btn-default dropdown-toggle" type="button" id="dropdown-menu-" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
+  <span class="glyphicon glyphicon-search"></span>
   <span class="dropdown-title">
 
   </span>
diff --git a/mockup/js/ui/views/dropdown.js b/mockup/js/ui/views/dropdown.js
index 53cddacb..90eb79f9 100644
--- a/mockup/js/ui/views/dropdown.js
+++ b/mockup/js/ui/views/dropdown.js
@@ -9,6 +9,7 @@ define([
   var DropdownView = ButtonGroup.extend({
     idPrefix: 'btngroup-dropdown-',
     template: DropdownTemplate,
+    className: 'btn-group-dropdown',
     itemContainer: "ul.dropdown-content",
     title: null,
 
diff --git a/mockup/patterns/filemanager/js/findinfiles.js b/mockup/patterns/filemanager/js/findinfiles.js
index 904741f9..32b4dd80 100644
--- a/mockup/patterns/filemanager/js/findinfiles.js
+++ b/mockup/patterns/filemanager/js/findinfiles.js
@@ -48,7 +48,10 @@ define([
       var $item = $(file_item);
       $('a', $item).click(function(e) {
         e.preventDefault();
-        self.findinfiles($(this).attr("data-target"));
+        self.findinfiles(
+          $(this).attr("data-target"),
+          parseInt($(this).attr("target-line"))
+        );
       });
       self.$results.append($item);
     },
@@ -115,7 +118,7 @@ define([
       });
       return self;
     },
-    findinfiles: function(resource) {
+    findinfiles: function(resource, line) {
       var self = this;
       self.app.doAction('getFile', {
         data: {
@@ -124,7 +127,7 @@ define([
         dataType: 'json',
         success: function(data) {
           self.app.fileData[resource] = data;
-          self.app.openEditor(resource);
+          self.app.openEditor(resource, {goToLine: line});
         }
       });
     }
diff --git a/mockup/patterns/filemanager/pattern.filemanager.less b/mockup/patterns/filemanager/pattern.filemanager.less
index c37f28ac..85d01cdc 100644
--- a/mockup/patterns/filemanager/pattern.filemanager.less
+++ b/mockup/patterns/filemanager/pattern.filemanager.less
@@ -43,6 +43,10 @@
     .btn-primary:extend(.btn-primary all){}
     .btn-group:extend(.btn-group all){}
     .btn-success:extend(.btn-success all){}
+    .btn-group-dropdown:extend(.btn-group all){
+        display: inline-block;
+        margin: 0 !important;
+    }
     .input-group:extend(.input-group all){}
     .input-group-addon:extend(.input-group-addon all){}
     .input-group-btn:extend(.input-group-btn all){}
@@ -117,6 +121,33 @@
             margin-bottom: 0.5em;
             text-decoration: none;
         }
+        .btn-group > .btn-group-dropdown{
+            float: none;
+            display: inline-block;
+            text-decoration: none;
+
+            & > a.btn {
+                margin-bottom: 0.5em;
+                border-radius: 0;
+                float: none;
+                display: inline-block;
+                text-decoration: none;
+                padding: 5px 5px 8px 5px;
+                line-height: 10px;
+                font-size: 13px;
+            }
+
+            &:last-child > a.btn{
+                border-bottom-right-radius: 4px;
+                border-top-right-radius: 4px;
+            }
+
+            &:first-child > a.btn{
+                border-bottom-left-radius: 4px;
+                border-top-left-radius: 4px;
+            }
+
+        }
     }
     .navbar-default {
         min-height: 250px
diff --git a/mockup/patterns/filemanager/pattern.js b/mockup/patterns/filemanager/pattern.js
index 3bcc6e2a..c36020e7 100644
--- a/mockup/patterns/filemanager/pattern.js
+++ b/mockup/patterns/filemanager/pattern.js
@@ -96,6 +96,7 @@ define([
       self.options.treeConfig = $.extend(true, {}, self.treeConfig, {
         dataUrl: self.options.actionUrl + '?action=dataTree',
         dragAndDrop: true,
+        useContextMenu: true,
         onCreateLi: function(node, li) {
           var imageTypes = ['png', 'jpg', 'jpeg', 'gif', 'ico'];
           var themeTypes = ['css', 'html', 'htm', 'txt', 'xml', 'js', 'cfg', 'less'];
@@ -120,65 +121,73 @@ define([
         icon: 'floppy-disk',
         context: 'primary'
       });
-
-      var newFolderView = new NewFolderView({
-        triggerView: new ButtonView({
+      self.btns = {
+        "newfolder": new ButtonView({
           id: 'newfolder',
           title: _t('New folder'),
           tooltip: _t('Add new folder to current directory'),
           icon: 'folder-open',
           context: 'default'
         }),
-        app: self
-      });
-      var addNewView = new AddNewView({
-        triggerView: new ButtonView({
+        "newfile": new ButtonView({
           id: 'addnew',
           title: _t('Add new file'),
           tooltip: _t('Add new file to current folder'),
           icon: 'file',
           context: 'default'
         }),
-        app: self
-      });
-      var findFileView = new FindFileView({
-        triggerView: new AnchorView({
+        "findfile": new AnchorView({
           id: 'findfile',
           title: _t('Find File'),
           tooltip: _t('Find theme resource in plone'),
           icon: 'file',
           context: 'default'
         }),
-        app: self
-      });
-      var findinFilesView = new FindInFilesView({
-        triggerView: new AnchorView({
+        "findtextinfile": new AnchorView({
           id: 'findinfiles',
           title: _t('Find in Files'),
           tooltip: _t('Find text within theme resource in plone'),
           icon: 'file',
           context: 'default'
         }),
-        app: self
-      });
-      var renameView = new RenameView({
-        triggerView: new ButtonView({
+        "rename": new ButtonView({
           id: 'rename',
           title: _t('Rename'),
           tooltip: _t('Rename currently selected resource'),
           icon: 'random',
           context: 'default'
         }),
-        app: self
-      });
-      var deleteView = new DeleteView({
-        triggerView: new ButtonView({
+        "delete": new ButtonView({
           id: 'delete',
           title: _t('Delete'),
           tooltip: _t('Delete currently selected resource'),
           icon: 'trash',
           context: 'danger'
-        }),
+        })
+      };
+
+      var newFolderView = new NewFolderView({
+        triggerView: self.btns["newfolder"],
+        app: self
+      });
+      var addNewView = new AddNewView({
+        triggerView: self.btns["newfile"],
+        app: self
+      });
+      var findFileView = new FindFileView({
+        triggerView: self.btns["findfile"],
+        app: self
+      });
+      var findinFilesView = new FindInFilesView({
+        triggerView: self.btns["findfile"],
+        app: self
+      });
+      var renameView = new RenameView({
+        triggerView: self.btns["rename"],
+        app: self
+      });
+      var deleteView = new DeleteView({
+        triggerView: self.btns["delete"],
         app: self
       });
 
@@ -582,12 +591,15 @@ define([
         failure: options.failure || function() {}
       });
     },
-    openEditor: function(path) {
+    openEditor: function(path, options) {
       var self = this;
 
       if (path !== undefined) {
         self.updateTabs(path);
       }
+      if (options === undefined) {
+        options = {};
+      }
 
       // first we need to save the current editor content
       if (self.currentPath) {
@@ -624,6 +636,10 @@ define([
       }
 
       self.resizeEditor();
+      if(options.goToLine != undefined){
+        self.ace.editor.gotoLine(options.goToLine, 0, true);
+      }
+
       self.$el.trigger('fileChange');
       self.ace.editor.on('change', function() {
         if (self.ace.editor.curOp && self.ace.editor.curOp.command.name) {


Repository: mockup


Branch: refs/heads/master
Date: 2017-06-28T15:39:02-05:00
Author: Oshane Bailey (b4oshany) <b4.oshany@gmail.com>
Commit: https://github.com/plone/mockup/commit/13ede2fde1d4de876e3f5f76b3aadd1d60c088a3

Update CHANGES.rst

Files changed:
M CHANGES.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index 72b85eb1..075c0314 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,48 +10,21 @@ Breaking changes:
 
 New features:
 
- - Search for files and opening the file upon click.
- - Search for text within files and opening the file upon click.
+ - Search for files and text within files and opening the file upon click.
+  [b4oshany]
  - Added Bootstrap Dropdown menu to the UI views.
- - Added Anchor (a) tag to the UI views.
- - Make thumb scale in folder contents listing adjustable/supressable.
-   Replace meaningless paper clip icon (fontello) with mime type icons from mimetype registry.
- - Search for files and opening the file upon click
- - Search for text within files and opening the file upon click
- - Added Bootstrap Dropdown menu to the UI views
- - Added Anchor (a) tag to the UI views
-
- - Search for files and opening the file upon click.
- - Search for text within files and opening the file upon click.
- - Added Bootstrap Dropdown menu to the UI views.
- - Added Anchor (a) tag to the UI views.
- 
- - make thumb size in folder contents listing adjustable/supressable
-   replace meaningless paper clip icon (fontello) with mime type icons
-   from mimetype registry
- - Make thumb scale in folder contents listing adjustable/supressable.
- - Replace meaningless paper clip icon (fontello) with mime type icons from mimetype registry.
+  [b4oshany]
  - Enable Drag and Drop inside of the theme editor file tree.
- - Upgrade JQTree to 1.4.1
- - Search for files and opening the file upon click.
- - Search for text within files and opening the file upon click.
- - Added Bootstrap Dropdown menu to the UI views.
+  [b4oshany]
  - Added Anchor (a) tag to the UI views.
-
- - make thumb size in folder contents listing adjustable/supressable
-   replace meaningless paper clip icon (fontello) with mime type icons
-   from mimetype registry
- - Replace meaningless paper clip icon (fontello) with mime type icons from mimetype registry.
- - Enable Drag and Drop inside of the theme editor file tree.
+  [b4oshany]
  - Upgrade JQTree to 1.4.1
- - Search for files and opening the file upon click.
- - Search for text within files and opening the file upon click.
- - Added Bootstrap Dropdown menu to the UI views.
- - Added Anchor (a) tag to the UI views.
+  [b4oshany]
+ - Enable Drag and Drop inside of the theme editor file tree.
+  [b4oshany]
 
- - make thumb size in folder contents listing adjustable/supressable
-   replace meaningless paper clip icon (fontello) with mime type icons
-   from mimetype registry
+ - Make thumb scale in folder contents listing adjustable/supressable.
+   Replace meaningless paper clip icon (fontello) with mime type icons from mimetype registry.
    https://github.com/plone/Products.CMFPlone/issues/1734
    [fgrcon]
 


Repository: mockup


Branch: refs/heads/master
Date: 2017-06-28T16:55:16-05:00
Author: Oshane Bailey (b4oshany) <b4.oshany@gmail.com>
Commit: https://github.com/plone/mockup/commit/8b93df763a54f35e6a1cca1c636e9b2033133ae1

Fix the UI for the find menu and allow files to be open at a specific line in file.

Files changed:
M CHANGES.rst
M mockup/patterns/filemanager/pattern.js

diff --git a/CHANGES.rst b/CHANGES.rst
index 075c0314..6ec527bf 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,17 +10,13 @@ Breaking changes:
 
 New features:
 
- - Search for files and text within files and opening the file upon click.
-  [b4oshany]
- - Added Bootstrap Dropdown menu to the UI views.
-  [b4oshany]
- - Enable Drag and Drop inside of the theme editor file tree.
-  [b4oshany]
- - Added Anchor (a) tag to the UI views.
-  [b4oshany]
- - Upgrade JQTree to 1.4.1
-  [b4oshany]
- - Enable Drag and Drop inside of the theme editor file tree.
+ - Improve the user experience for the theme editor
+  - Search for files and text within files and opening the file upon click.
+  - Add Bootstrap Dropdown menu to the UI views.
+  - Enable Drag and Drop inside of the theme editor file tree.
+  - Add Anchor (a) tag to the UI views.
+  - Upgrade JQTree to 1.4.1
+  - Enable Drag and Drop inside of the theme editor file tree.
   [b4oshany]
 
  - Make thumb scale in folder contents listing adjustable/supressable.
diff --git a/mockup/patterns/filemanager/pattern.js b/mockup/patterns/filemanager/pattern.js
index c36020e7..f12b7b7a 100644
--- a/mockup/patterns/filemanager/pattern.js
+++ b/mockup/patterns/filemanager/pattern.js
@@ -179,7 +179,7 @@ define([
         app: self
       });
       var findinFilesView = new FindInFilesView({
-        triggerView: self.btns["findfile"],
+        triggerView: self.btns["findtextinfile"],
         app: self
       });
       var renameView = new RenameView({


Repository: mockup


Branch: refs/heads/master
Date: 2017-07-10T21:09:18-05:00
Author: Oshane Bailey (b4oshany) <b4.oshany@gmail.com>
Commit: https://github.com/plone/mockup/commit/99ab2740b4134a7d552fec594c82a8a3dbcc1a1f

Fixes the autoscroll issue and dragging files to root folders.

Files changed:
M CHANGES.rst
M mockup/patterns/filemanager/pattern.filemanager.less
M mockup/patterns/filemanager/pattern.js
M mockup/patterns/tree/pattern.js

diff --git a/CHANGES.rst b/CHANGES.rst
index 6ec527bf..2146bf88 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,6 +14,8 @@ New features:
   - Search for files and text within files and opening the file upon click.
   - Add Bootstrap Dropdown menu to the UI views.
   - Enable Drag and Drop inside of the theme editor file tree.
+  - Fixed the Drag and Drop files to root of the file tree.
+  - Fixed the autoscrolling issue when dragging a file in the file tree.
   - Add Anchor (a) tag to the UI views.
   - Upgrade JQTree to 1.4.1
   - Enable Drag and Drop inside of the theme editor file tree.
diff --git a/mockup/patterns/filemanager/pattern.filemanager.less b/mockup/patterns/filemanager/pattern.filemanager.less
index 85d01cdc..f2049f80 100644
--- a/mockup/patterns/filemanager/pattern.filemanager.less
+++ b/mockup/patterns/filemanager/pattern.filemanager.less
@@ -46,6 +46,7 @@
     .btn-group-dropdown:extend(.btn-group all){
         display: inline-block;
         margin: 0 !important;
+        vertical-align: initial !important;
     }
     .input-group:extend(.input-group all){}
     .input-group-addon:extend(.input-group-addon all){}
diff --git a/mockup/patterns/filemanager/pattern.js b/mockup/patterns/filemanager/pattern.js
index f12b7b7a..d6a37f3c 100644
--- a/mockup/patterns/filemanager/pattern.js
+++ b/mockup/patterns/filemanager/pattern.js
@@ -97,6 +97,13 @@ define([
         dataUrl: self.options.actionUrl + '?action=dataTree',
         dragAndDrop: true,
         useContextMenu: true,
+        onCanMoveTo: function(moved, target, position) {
+          /* if not using folder option, just allow, otherwise, only allow if folder */
+          if (position === "inside") {
+            return target.folder === undefined || target.folder === true;
+          }
+          return true;
+        },
         onCreateLi: function(node, li) {
           var imageTypes = ['png', 'jpg', 'jpeg', 'gif', 'ico'];
           var themeTypes = ['css', 'html', 'htm', 'txt', 'xml', 'js', 'cfg', 'less'];
@@ -349,10 +356,17 @@ define([
       });
 
       self.$tree.bind('tree.move', function(event) {
+        
+        var srcpath = event.move_info.moved_node.path;
+        var newpath = event.move_info.target_node.path;
+        if (event.move_info.position !== "inside" ){
+          newpath = newpath.substring(newpath.indexOf('/'), newpath.lastIndexOf('/'));
+        }
+        
         self.doAction('move', {
           data: {
-            source: event.move_info.moved_node.path,
-            destination: event.move_info.target_node.path
+            source: srcpath,
+            destination: newpath
           },
           dataType: 'json',
           success: function(data) {
diff --git a/mockup/patterns/tree/pattern.js b/mockup/patterns/tree/pattern.js
index 2be19804..3667140c 100644
--- a/mockup/patterns/tree/pattern.js
+++ b/mockup/patterns/tree/pattern.js
@@ -79,11 +79,14 @@ define([
         }
       }
 
-      if (self.options.dragAndDrop && self.options.onCanMoveTo === undefined) {
+      if (self.options.onCanMoveTo === undefined) {
         self.options.onCanMoveTo = function(moved, target, position) {
           /* if not using folder option, just allow, otherwise, only allow if folder */
-          return target.folder === undefined || target.folder === true;
-        };
+          if (position === "inside") {
+            return target.folder === undefined || target.folder === true;
+          }
+          return true;
+        }
       }
 
       if (self.options.data && typeof(self.options.data) === 'string') {


Repository: mockup


Branch: refs/heads/master
Date: 2017-07-13T23:13:28+03:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/mockup/commit/8598842aa8c7c9d428f461dafe549aedd95c3e83

Add missing jquery dependency for basepopover

Files changed:
M mockup/patterns/filemanager/js/basepopover.js

diff --git a/mockup/patterns/filemanager/js/basepopover.js b/mockup/patterns/filemanager/js/basepopover.js
index 61796918..301002b3 100644
--- a/mockup/patterns/filemanager/js/basepopover.js
+++ b/mockup/patterns/filemanager/js/basepopover.js
@@ -1,8 +1,9 @@
 define([
+  'jquery',
   'underscore',
   'mockup-ui-url/views/popover',
   'text!mockup-patterns-filemanager-url/templates/popover.xml',
-], function(_, PopoverView, PopoverTemplate) {
+], function($, _, PopoverView, PopoverTemplate) {
   'use strict';
 
   var FileManagerPopover = PopoverView.extend({


Repository: mockup


Branch: refs/heads/master
Date: 2017-07-14T00:11:39+03:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/mockup/commit/413bc2b66ef07d28d1a850cd61853397aacb5c22

Merge pull request #773 from plone/theme-filemanager-searching-feature

Add search menu to search files by name and contents in filemanager pattern

Files changed:
A mockup/js/ui/templates/dropdown.xml
A mockup/js/ui/views/anchor.js
A mockup/js/ui/views/dropdown.js
A mockup/patterns/filemanager/js/findfile.js
A mockup/patterns/filemanager/js/findinfiles.js
A mockup/patterns/filemanager/templates/popover.xml
M .gitignore
M CHANGES.rst
M mockup/js/bundles/filemanager.js
M mockup/patterns/filemanager/js/basepopover.js
M mockup/patterns/filemanager/pattern.filemanager.less
M mockup/patterns/filemanager/pattern.js
M mockup/patterns/filemanager/templates/app.xml
M mockup/patterns/thememapper/pattern.thememapper.less
M mockup/patterns/tree/pattern.js

diff --git a/.gitignore b/.gitignore
index 687ae184..69d17555 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,3 +1,4 @@
+*.orig
 *.egg-info
 *.py?
 .idea
diff --git a/CHANGES.rst b/CHANGES.rst
index acb27972..a5f16fbb 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -23,6 +23,17 @@ Bug fixes:
 
 New features:
 
+ - Improve the user experience for the theme editor
+  - Search for files and text within files and opening the file upon click.
+  - Add Bootstrap Dropdown menu to the UI views.
+  - Enable Drag and Drop inside of the theme editor file tree.
+  - Fixed the Drag and Drop files to root of the file tree.
+  - Fixed the autoscrolling issue when dragging a file in the file tree.
+  - Add Anchor (a) tag to the UI views.
+  - Upgrade JQTree to 1.4.1
+  - Enable Drag and Drop inside of the theme editor file tree.
+  [b4oshany]
+
  - Make thumb scale in folder contents listing adjustable/supressable.
    Replace meaningless paper clip icon (fontello) with mime type icons from mimetype registry.
    https://github.com/plone/Products.CMFPlone/issues/1734
diff --git a/mockup/js/bundles/filemanager.js b/mockup/js/bundles/filemanager.js
index 18c3b196..84778497 100644
--- a/mockup/js/bundles/filemanager.js
+++ b/mockup/js/bundles/filemanager.js
@@ -1,6 +1,6 @@
 define([
   'pat-registry',
-  'mockup-patterns-filemanager'
+  'mockup-patterns-filemanager',
 ], function(registry) {
   'use strict';
   // initialize only if we are in top frame
diff --git a/mockup/js/ui/templates/dropdown.xml b/mockup/js/ui/templates/dropdown.xml
new file mode 100644
index 00000000..34c20d25
--- /dev/null
+++ b/mockup/js/ui/templates/dropdown.xml
@@ -0,0 +1,10 @@
+
+<a href="#" class="btn btn-default dropdown-toggle" type="button" id="dropdown-menu-" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
+  <span class="glyphicon glyphicon-search"></span>
+  <span class="dropdown-title">
+
+  </span>
+  <span class="caret"></span>
+</a>
+<ul class="dropdown-menu items dropdown-content" aria-labelledby="dropdown-menu-">
+</ul>
diff --git a/mockup/js/ui/views/anchor.js b/mockup/js/ui/views/anchor.js
new file mode 100644
index 00000000..9e0f8e4a
--- /dev/null
+++ b/mockup/js/ui/views/anchor.js
@@ -0,0 +1,56 @@
+define([
+  'underscore',
+  'mockup-ui-url/views/base',
+  'mockup-patterns-tooltip'
+], function(_, BaseView, Tooltip) {
+  'use strict';
+
+  var AnchorView = BaseView.extend({
+    tagName: 'a',
+    className: 'alink',
+    eventPrefix: 'button',
+    context: 'default',
+    idPrefix: 'alink-',
+    attributes: {
+      'href': '#'
+    },
+    extraClasses: [],
+    tooltip: null,
+    template: '<% if (icon) { %><span class="glyphicon glyphicon-<%= icon %>"></span><% } %> <%= title %>',
+    events: {
+      'click': 'handleClick'
+    },
+    initialize: function(options) {
+      if (!options.id) {
+        var title = options.title || '';
+        options.id = title !== '' ? title.toLowerCase().replace(' ', '-') : this.cid;
+      }
+      BaseView.prototype.initialize.apply(this, [options]);
+
+      this.on('render', function() {
+        this.$el.attr('title', this.options.title || '');
+        this.$el.attr('aria-label', this.options.title || this.options.tooltip || '');
+        _.each(this.extraClasses, function(klass) {
+          this.$el.addClass(klass);
+        });
+      }, this);
+    },
+    handleClick: function(e) {
+      e.preventDefault();
+      if (!this.$el.prop('disabled')) {
+        this.uiEventTrigger('click', this, e);
+      }
+    },
+    serializedModel: function() {
+      return _.extend({'icon': '', 'title': ''}, this.options);
+    },
+    disable: function() {
+      this.$el.prop('disabled', true);
+    },
+    enable: function() {
+      this.$el.prop('disabled', false);
+    }
+  });
+
+  return AnchorView;
+});
diff --git a/mockup/js/ui/views/dropdown.js b/mockup/js/ui/views/dropdown.js
new file mode 100644
index 00000000..90eb79f9
--- /dev/null
+++ b/mockup/js/ui/views/dropdown.js
@@ -0,0 +1,59 @@
+define([
+  'jquery',
+  'underscore',
+  'mockup-ui-url/views/buttongroup',
+  'text!mockup-ui-url/templates/dropdown.xml',
+], function($, _, ButtonGroup, DropdownTemplate) {
+  'use strict';
+
+  var DropdownView = ButtonGroup.extend({
+    idPrefix: 'btngroup-dropdown-',
+    template: DropdownTemplate,
+    className: 'btn-group-dropdown',
+    itemContainer: "ul.dropdown-content",
+    title: null,
+
+    initialize: function(options) {
+      ButtonGroup.prototype.initialize.apply(this, [options]);
+
+      this.on('render', function() {
+        this.renderTitle();
+      }, this);
+    },
+
+    renderTitle: function() {
+      var title = this.options.title;
+      if(this.options.title === undefined) {
+        title = this.title;
+        if(this.title === null) {
+          title = "Menu Option";
+        }
+      }
+      this.$('.dropdown-title').empty().append(title);
+    },
+
+    renderItems: function() {
+      var self = this;
+      var $container;
+
+      if (this.itemContainer !== null) {
+        $container = $(this.itemContainer, this.$el);
+        if ($container.length === 0) {
+          throw 'Item Container element not found.';
+        }
+      } else {
+        $container = this.$el;
+      }
+
+      var $item = null;
+      _.each(this.items, function(view) {
+        $item = $("<li></li>");
+        $item.append(view.render().$el.removeClass("btn"));
+        $container.append($item);
+      }, this);
+    },
+
+  });
+
+  return DropdownView;
+});
diff --git a/mockup/patterns/filemanager/js/basepopover.js b/mockup/patterns/filemanager/js/basepopover.js
index fee2ab53..301002b3 100644
--- a/mockup/patterns/filemanager/js/basepopover.js
+++ b/mockup/patterns/filemanager/js/basepopover.js
@@ -1,22 +1,53 @@
 define([
+  'jquery',
   'underscore',
-  'mockup-ui-url/views/popover'
-], function(_, PopoverView) {
+  'mockup-ui-url/views/popover',
+  'text!mockup-patterns-filemanager-url/templates/popover.xml',
+], function($, _, PopoverView, PopoverTemplate) {
   'use strict';
 
   var FileManagerPopover = PopoverView.extend({
     className: 'popover',
     title: _.template('nothing'),
     content: _.template('<div/>'),
+    template: PopoverTemplate,
     initialize: function(options) {
       this.app = options.app;
       PopoverView.prototype.initialize.apply(this, [options]);
     },
+    afterRender: function () {
+      var self = this;
+      self.$el.find(".popover-close").click(function(e){
+        self.hide(true);
+      });
+      return self;
+    },
+    getBodyClassName: function(){
+      var name = 'popover-';
+      if(this.options.id){
+        name += this.options.id + '-';
+      }
+      name += 'active';
+      return name;
+    },
     render: function() {
       var self = this;
       PopoverView.prototype.render.call(this);
       return self;
     },
+    hide: function(closePopover) {
+      if(this.closeOnOutClick || closePopover == true){
+        this.opened = false;
+        this.$el.removeClass('active');
+        if (this.triggerView) {
+          this.triggerView.$el.removeClass('active');
+          this.triggerView.$el.attr('aria-hidden', 'true');
+        }
+        this.uiEventTrigger('hide', this);
+        this.$el.attr('aria-hidden', 'true');
+        $('body').removeClass(this.getBodyClassName());
+      }
+    },
     toggle: function(button, e) {
       PopoverView.prototype.toggle.apply(this, [button, e]);
       var self = this;
diff --git a/mockup/patterns/filemanager/js/findfile.js b/mockup/patterns/filemanager/js/findfile.js
new file mode 100644
index 00000000..d4c0c3dd
--- /dev/null
+++ b/mockup/patterns/filemanager/js/findfile.js
@@ -0,0 +1,101 @@
+define([
+  'jquery',
+  'underscore',
+  'mockup-patterns-filemanager-url/js/basepopover',
+  'translate'
+], function($, _, PopoverView, _t) {
+  'use strict';
+
+  var FindFile = PopoverView.extend({
+    className: 'popover filesearch',
+    closeOnOutClick: false,
+    backdropOptions: {
+      zIndex: '1009',
+      opacity: '0.4',
+      className: 'backdrop backdrop-popover',
+      classActiveName: 'backdrop-active',
+      closeOnEsc: false,
+      closeOnClick: false
+    },
+    title: _.template('<%= _t("Find File") %>'),
+    content: _.template(
+      '<form>' +
+        '<div class="input-group">' +
+          '<input type="text" class="search form-control" ' +
+                  'id="file-search-field" placeholder="<%= _t("Find theme resource in plone") %>">' +
+        '</div>' +
+        '<div class="input-group">' +
+          '<input type="submit" class="btn btn-primary" value="<%= _t("Search") %>"/>' +
+        '</div>' +
+      '</form><br/>' +
+      '<ul class="results list-group">' +
+      '</ul>'
+    ),
+    appendToResults: function(item){
+      var self = this;
+      var $item = $(
+        '<li class="list-group-item">' +
+          '<span class="badge"><a data-target="' + item.path + '" href=#">' +
+          _t(item.filename) + '</a></span>' +
+        '</li>');
+      $('a', $item).click(function(e) {
+        e.preventDefault();
+        self.findfile($(this).attr('data-target'));
+      });
+      self.$results.append($item);
+    },
+    filterFiles: function(patt, data){
+      var self = this;
+      _.each(data, function(item) {
+        if(item.folder){
+          self.filterFiles(patt, item.children);
+        }else{
+          if(patt.test(item.filename)){
+            self.appendToResults(item);
+            self.noMatches++;
+          }
+        }
+      });
+    },
+    render: function() {
+      var self = this;
+      PopoverView.prototype.render.call(this);
+      self.$form = self.$('form');
+      self.$searchFor = self.$("input");
+      self.$results = self.$('.results');
+      self.$form.submit(function(e) {
+        e.preventDefault();
+        $.ajax({
+          url: self.app.options.actionUrl + '?action=dataTree',
+          dataType: 'json',
+          success: function(data) {
+            self.$results.empty();
+            self.noMatches = 0;
+            var searchFor = self.$searchFor.val();
+            var patt = new RegExp(searchFor, "g");
+            self.filterFiles(patt, data);
+            if(self.noMatches == 0){
+              self.$results.append("<span>No results found for " + searchFor + "</span>");
+            }
+          }
+        });
+      });
+      return self;
+    },
+    findfile: function(resource) {
+      var self = this;
+      self.app.doAction('getFile', {
+        data: {
+          path: resource
+        },
+        dataType: 'json',
+        success: function(data) {
+          self.app.fileData[resource] = data;
+          self.app.openEditor(resource);
+        }
+      });
+    }
+  });
+
+  return FindFile;
+});
diff --git a/mockup/patterns/filemanager/js/findinfiles.js b/mockup/patterns/filemanager/js/findinfiles.js
new file mode 100644
index 00000000..32b4dd80
--- /dev/null
+++ b/mockup/patterns/filemanager/js/findinfiles.js
@@ -0,0 +1,137 @@
+define([
+  'jquery',
+  'underscore',
+  'mockup-patterns-filemanager-url/js/basepopover',
+  'translate'
+], function($, _, PopoverView, _t) {
+  'use strict';
+
+  var FindInFiles = PopoverView.extend({
+    className: 'popover filesearch',
+    closeOnOutClick: false,
+    backdropOptions: {
+      zIndex: '1009',
+      opacity: '0.4',
+      className: 'backdrop backdrop-popover',
+      classActiveName: 'backdrop-active',
+      closeOnEsc: false,
+      closeOnClick: false
+    },
+    title: _.template('<%= _t("File in File") %>'),
+    content: _.template(
+      '<form>' +
+        '<div class="input-group">' +
+          '<input type="text" class="search form-control" ' +
+                  'id="file-search-field" placeholder="<%= _t("Find text witin theme resource in plone") %>">' +
+        '</div>' +
+        '<div class="input-group">' +
+          '<input type="submit" class="btn btn-primary" value="<%= _t("Search") %>"/>' +
+        '</div>' +
+      '</form><br/>' +
+      '<ul style="max-height: 400px; overflow: auto;" class="results list-group">' +
+      '</ul>'
+    ),
+    appendToResults: function(item){
+      var self = this, seen = null;
+      var file_item =
+        '<li class="list-group-item" data-id="' + item.file.label + '">' +
+          '<span class="badge">' + _t(item.file.filename) + '</span><ul>';
+      for(var x in item.lines){
+        seen = item.lines[x];
+        file_item += '<li class="list-group-item" data-id="' + item.file.label + '">' +
+          '<span class="badge"><a class="ff-open-file" data-target="'+item.file.path+'" ' +
+          'target-line="'+seen.line+'" href="#">Line ' +
+          '<span style="display: inline-block; width: 100px;">' + seen.line +
+          '</span><span>'+seen.text+'</span><a></span></li>';
+      }
+      file_item += '</ul></li>';
+      var $item = $(file_item);
+      $('a', $item).click(function(e) {
+        e.preventDefault();
+        self.findinfiles(
+          $(this).attr("data-target"),
+          parseInt($(this).attr("target-line"))
+        );
+      });
+      self.$results.append($item);
+    },
+
+    filterFile: function(patt, item){
+      var self = this;
+      $.ajax({
+        url: self.app.options.actionUrl + '?action=getFile&path='+item.path.replace("/", "%2F"),
+        dataType: 'json',
+        success: function(data) {
+          var contents = data["contents"];
+          if(contents == undefined){
+            return;
+          }
+          var lines = contents.split("\n");
+          var seen = [], line = '';
+          var result = null;
+          for(var x in lines){
+            line = lines[x];
+            result = patt.exec(line);
+            if(result != null){
+              seen.push({
+                "line": parseInt(x) + 1,
+                "text": '<b>'+result[0]+'</b>'+line.substr(result["index"] + result[0].length, 20)
+              });
+            }
+          }
+          if(seen.length > 0){
+            self.appendToResults({file: item, lines: seen});
+            self.noMatches += seen.length;
+          }
+        }
+      });
+    },
+    filterFiles: function(patt, data){
+      var self = this;
+      _.each(data, function(item) {
+        if(item.folder){
+          self.filterFiles(patt, item.children);
+        }else{
+          self.filterFile(patt, item);
+        }
+      });
+    },
+    render: function() {
+      var self = this;
+      PopoverView.prototype.render.call(this);
+      self.$form = self.$('form');
+      self.$searchFor = self.$("input");
+      self.$results = self.$('.results');
+      self.$form.submit(function(e) {
+        e.preventDefault();
+        $.ajax({
+          url: self.app.options.actionUrl + '?action=dataTree',
+          dataType: 'json',
+          success: function(data) {
+            self.$results.empty();
+            self.noMatches = 0;
+            var searchFor = self.$searchFor.val();
+            var patt = new RegExp(searchFor, "g");
+            self.filterFiles(patt, data);
+          }
+        });
+      });
+      return self;
+    },
+    findinfiles: function(resource, line) {
+      var self = this;
+      self.app.doAction('getFile', {
+        data: {
+          path: resource
+        },
+        dataType: 'json',
+        success: function(data) {
+          self.app.fileData[resource] = data;
+          self.app.openEditor(resource, {goToLine: line});
+        }
+      });
+    }
+  });
+
+  return FindInFiles;
+});
diff --git a/mockup/patterns/filemanager/pattern.filemanager.less b/mockup/patterns/filemanager/pattern.filemanager.less
index b5fd4216..f2049f80 100644
--- a/mockup/patterns/filemanager/pattern.filemanager.less
+++ b/mockup/patterns/filemanager/pattern.filemanager.less
@@ -27,6 +27,11 @@
     .popover:extend(.popover all){}
     .popover-title:extend(.popover-title all){}
     .popover-content:extend(.popover-content all){}
+
+    .popover{
+        max-width: 600px;
+    }
+
     .arrow:extend(.arrow all){}
 
     .table:extend(.table all){}
@@ -38,6 +43,11 @@
     .btn-primary:extend(.btn-primary all){}
     .btn-group:extend(.btn-group all){}
     .btn-success:extend(.btn-success all){}
+    .btn-group-dropdown:extend(.btn-group all){
+        display: inline-block;
+        margin: 0 !important;
+        vertical-align: initial !important;
+    }
     .input-group:extend(.input-group all){}
     .input-group-addon:extend(.input-group-addon all){}
     .input-group-btn:extend(.input-group-btn all){}
@@ -112,6 +122,33 @@
             margin-bottom: 0.5em;
             text-decoration: none;
         }
+        .btn-group > .btn-group-dropdown{
+            float: none;
+            display: inline-block;
+            text-decoration: none;
+
+            & > a.btn {
+                margin-bottom: 0.5em;
+                border-radius: 0;
+                float: none;
+                display: inline-block;
+                text-decoration: none;
+                padding: 5px 5px 8px 5px;
+                line-height: 10px;
+                font-size: 13px;
+            }
+
+            &:last-child > a.btn{
+                border-bottom-right-radius: 4px;
+                border-top-right-radius: 4px;
+            }
+
+            &:first-child > a.btn{
+                border-bottom-left-radius: 4px;
+                border-top-left-radius: 4px;
+            }
+
+        }
     }
     .navbar-default {
         min-height: 250px
diff --git a/mockup/patterns/filemanager/pattern.js b/mockup/patterns/filemanager/pattern.js
index 24a14c54..d6a37f3c 100644
--- a/mockup/patterns/filemanager/pattern.js
+++ b/mockup/patterns/filemanager/pattern.js
@@ -40,17 +40,23 @@ define([
   'mockup-ui-url/views/toolbar',
   'mockup-ui-url/views/button',
   'mockup-ui-url/views/buttongroup',
+  'mockup-ui-url/views/anchor',
+  'mockup-ui-url/views/dropdown',
   'mockup-patterns-filemanager-url/js/addnew',
   'mockup-patterns-filemanager-url/js/newfolder',
+  'mockup-patterns-filemanager-url/js/findfile',
+  'mockup-patterns-filemanager-url/js/findinfiles',
   'mockup-patterns-filemanager-url/js/delete',
   'mockup-patterns-filemanager-url/js/customize',
   'mockup-patterns-filemanager-url/js/rename',
   'mockup-patterns-filemanager-url/js/upload',
   'translate',
   'mockup-utils',
-  'text!mockup-ui-url/templates/popover.xml'
+  'text!mockup-ui-url/templates/popover.xml',
+  'text!mockup-ui-url/templates/dropdown.xml'
 ], function($, Base, _, Tree, TextEditor, AppTemplate, Toolbar,
-  ButtonView, ButtonGroup, AddNewView, NewFolderView, DeleteView,
+  ButtonView, ButtonGroup, AnchorView, DropdownView,
+  AddNewView, NewFolderView, FindFileView, FindInFilesView, DeleteView,
   CustomizeView, RenameView, UploadView, _t, utils) {
   'use strict';
 
@@ -89,13 +95,21 @@ define([
 
       self.options.treeConfig = $.extend(true, {}, self.treeConfig, {
         dataUrl: self.options.actionUrl + '?action=dataTree',
+        dragAndDrop: true,
+        useContextMenu: true,
+        onCanMoveTo: function(moved, target, position) {
+          /* if not using folder option, just allow, otherwise, only allow if folder */
+          if (position === "inside") {
+            return target.folder === undefined || target.folder === true;
+          }
+          return true;
+        },
         onCreateLi: function(node, li) {
           var imageTypes = ['png', 'jpg', 'jpeg', 'gif', 'ico'];
           var themeTypes = ['css', 'html', 'htm', 'txt', 'xml', 'js', 'cfg', 'less'];
-
           $('span', li).addClass('glyphicon');
           if (node.folder) {
-            $('span', li).addClass('glyphicon-folder-close');
+            $('span', li).addClass('glyphicon-folder-close').addClass("droptarget");
           } else if ($.inArray(node.fileType, imageTypes) >= 0) {
             $('span', li).addClass('glyphicon-picture');
           } else if ($.inArray(node.fileType, themeTypes) >= 0) {
@@ -114,51 +128,92 @@ define([
         icon: 'floppy-disk',
         context: 'primary'
       });
-
-      var newFolderView = new NewFolderView({
-        triggerView: new ButtonView({
+      self.btns = {
+        "newfolder": new ButtonView({
           id: 'newfolder',
           title: _t('New folder'),
           tooltip: _t('Add new folder to current directory'),
           icon: 'folder-open',
           context: 'default'
         }),
-        app: self
-      });
-      var addNewView = new AddNewView({
-        triggerView: new ButtonView({
+        "newfile": new ButtonView({
           id: 'addnew',
           title: _t('Add new file'),
           tooltip: _t('Add new file to current folder'),
           icon: 'file',
           context: 'default'
         }),
-        app: self
-      });
-      var renameView = new RenameView({
-        triggerView: new ButtonView({
+        "findfile": new AnchorView({
+          id: 'findfile',
+          title: _t('Find File'),
+          tooltip: _t('Find theme resource in plone'),
+          icon: 'file',
+          context: 'default'
+        }),
+        "findtextinfile": new AnchorView({
+          id: 'findinfiles',
+          title: _t('Find in Files'),
+          tooltip: _t('Find text within theme resource in plone'),
+          icon: 'file',
+          context: 'default'
+        }),
+        "rename": new ButtonView({
           id: 'rename',
           title: _t('Rename'),
           tooltip: _t('Rename currently selected resource'),
           icon: 'random',
           context: 'default'
         }),
-        app: self
-      });
-      var deleteView = new DeleteView({
-        triggerView: new ButtonView({
+        "delete": new ButtonView({
           id: 'delete',
           title: _t('Delete'),
           tooltip: _t('Delete currently selected resource'),
           icon: 'trash',
           context: 'danger'
-        }),
+        })
+      };
+
+      var newFolderView = new NewFolderView({
+        triggerView: self.btns["newfolder"],
+        app: self
+      });
+      var addNewView = new AddNewView({
+        triggerView: self.btns["newfile"],
+        app: self
+      });
+      var findFileView = new FindFileView({
+        triggerView: self.btns["findfile"],
+        app: self
+      });
+      var findinFilesView = new FindInFilesView({
+        triggerView: self.btns["findtextinfile"],
+        app: self
+      });
+      var renameView = new RenameView({
+        triggerView: self.btns["rename"],
+        app: self
+      });
+      var deleteView = new DeleteView({
+        triggerView: self.btns["delete"],
         app: self
       });
 
+      var find_menu = new DropdownView({
+        title: _t('Find'),
+        items: [
+          findFileView.triggerView,
+          findinFilesView.triggerView
+        ],
+        id: 'find',
+        app: self,
+        disable: function() {}
+      })
+
       self.views = [
         newFolderView,
         addNewView,
+        findFileView,
+        findinFilesView,
         renameView,
         deleteView
       ];
@@ -166,6 +221,7 @@ define([
         self.saveBtn,
         newFolderView.triggerView,
         addNewView.triggerView,
+        find_menu,
         renameView.triggerView,
         deleteView.triggerView
       ];
@@ -299,6 +355,30 @@ define([
         }
       });
 
+      self.$tree.bind('tree.move', function(event) {
+        
+        var srcpath = event.move_info.moved_node.path;
+        var newpath = event.move_info.target_node.path;
+        if (event.move_info.position !== "inside" ){
+          newpath = newpath.substring(newpath.indexOf('/'), newpath.lastIndexOf('/'));
+        }
+        
+        self.doAction('move', {
+          data: {
+            source: srcpath,
+            destination: newpath
+          },
+          dataType: 'json',
+          success: function(data) {
+            console.log(data);
+            var jdata = JSON.parse(data);
+            if(jdata.error != ''){
+              alert(jdata.error);
+            }
+          }
+        });
+      });
+
       self.$tree.bind('tree.open', function(e) {
         var element = $(e.node.element).find(':first').find('.glyphicon');
         $(element).addClass('glyphicon-folder-open');
@@ -525,12 +605,15 @@ define([
         failure: options.failure || function() {}
       });
     },
-    openEditor: function(path) {
+    openEditor: function(path, options) {
       var self = this;
 
       if (path !== undefined) {
         self.updateTabs(path);
       }
+      if (options === undefined) {
+        options = {};
+      }
 
       // first we need to save the current editor content
       if (self.currentPath) {
@@ -567,6 +650,10 @@ define([
       }
 
       self.resizeEditor();
+      if(options.goToLine != undefined){
+        self.ace.editor.gotoLine(options.goToLine, 0, true);
+      }
+
       self.$el.trigger('fileChange');
       self.ace.editor.on('change', function() {
         if (self.ace.editor.curOp && self.ace.editor.curOp.command.name) {
diff --git a/mockup/patterns/filemanager/templates/app.xml b/mockup/patterns/filemanager/templates/app.xml
index 11d594ff..e5194500 100644
--- a/mockup/patterns/filemanager/templates/app.xml
+++ b/mockup/patterns/filemanager/templates/app.xml
@@ -1,5 +1,7 @@
 <div id="toolbar">
 </div>
+<div id="toolbar-action">
+</div>
 <div class="container">
     <div class="tree">
     </div>
@@ -14,4 +16,4 @@
                 </div>
             </div>
         </nav>
-</div>
\ No newline at end of file
+</div>
diff --git a/mockup/patterns/filemanager/templates/popover.xml b/mockup/patterns/filemanager/templates/popover.xml
new file mode 100644
index 00000000..a276f070
--- /dev/null
+++ b/mockup/patterns/filemanager/templates/popover.xml
@@ -0,0 +1,12 @@
+<div class="arrow"></div>
+<div class="popover-label">
+<div style="position: relative;" class="popover-title">
+</div>
+<a style="position: absolute; top: 5px; right: 3px; font-size: 16px; color: #999;"
+   href="#" class="popover-close">
+  <span class="glyphicon glyphicon-remove"></span>
+</a>
+</div>
+<div class="items popover-content">
+</div>
+
diff --git a/mockup/patterns/thememapper/pattern.thememapper.less b/mockup/patterns/thememapper/pattern.thememapper.less
index 7666065a..4c58cce6 100644
--- a/mockup/patterns/thememapper/pattern.thememapper.less
+++ b/mockup/patterns/thememapper/pattern.thememapper.less
@@ -1,6 +1,6 @@
 @import "@{mockuplessPath}/ui.less";
 /* just be lazy here and include all of bootstrap... */
-@import "@{mockupPath}/filemanager/pattern.filemanager.less";
+@import "@{mockup-patterns-filemanager}";
 
 body.plone-toolbar-left-default {
 	padding-left: 0px;
diff --git a/mockup/patterns/tree/pattern.js b/mockup/patterns/tree/pattern.js
index 2be19804..3667140c 100644
--- a/mockup/patterns/tree/pattern.js
+++ b/mockup/patterns/tree/pattern.js
@@ -79,11 +79,14 @@ define([
         }
       }
 
-      if (self.options.dragAndDrop && self.options.onCanMoveTo === undefined) {
+      if (self.options.onCanMoveTo === undefined) {
         self.options.onCanMoveTo = function(moved, target, position) {
           /* if not using folder option, just allow, otherwise, only allow if folder */
-          return target.folder === undefined || target.folder === true;
-        };
+          if (position === "inside") {
+            return target.folder === undefined || target.folder === true;
+          }
+          return true;
+        }
       }
 
       if (self.options.data && typeof(self.options.data) === 'string') {


