Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-07-04T16:09:15+02:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/764ce29785f626092531790d6195e861f1622dab

Fix adding/updating resources TTW

Files changed:
M Products/CMFPlone/controlpanel/browser/resourceregistry.py
M Products/CMFPlone/tests/testResourceRegistries.py

b'diff --git a/Products/CMFPlone/controlpanel/browser/resourceregistry.py b/Products/CMFPlone/controlpanel/browser/resourceregistry.py\nindex 5885e8dc46..7f754b993c 100644\n--- a/Products/CMFPlone/controlpanel/browser/resourceregistry.py\n+++ b/Products/CMFPlone/controlpanel/browser/resourceregistry.py\n@@ -67,13 +67,13 @@ def _add(self):\n         bundles = self._bundles\n         if name in bundles:\n             IStatusMessage(self.request).addStatusMessage(\n-                _("Record ${name} already exists.", name=name), "error"\n+                _("Record ${name} already exists.", mapping=dict(name=name)), "error"\n             )\n             return\n         record = bundles.add(name)\n         self._set_data_from_form(record)\n         IStatusMessage(self.request).addStatusMessage(\n-            _("Record ${name} created.", name=name), "info"\n+            _("Record ${name} created.", mapping=dict(name=name)), "info"\n         )\n \n     def _update(self):\n@@ -93,11 +93,13 @@ def _update(self):\n                 return\n             if new_name in bundles:\n                 IStatusMessage(self.request).addStatusMessage(\n-                    _("Record name ${new_name} already taken.", new_name=new_name), "error"\n+                    _("Record name ${new_name} already taken.", mapping=dict(new_name=new_name)), "error"\n                 )\n                 return\n             record = bundles[original_name]\n             del bundles[original_name]\n+            # update prefix\n+            record.__prefix__ = record.__prefix__.replace(original_name, new_name)\n             bundles[new_name] = record\n         else:\n             record = bundles[original_name]\n@@ -120,7 +122,7 @@ def _delete(self):\n         bundles = self._bundles\n         if name not in bundles:\n             IStatusMessage(self.request).addStatusMessage(\n-                _("Expected record ${name} missing.", name=name), "error"\n+                _("Expected record ${name} missing.", mapping=dict(name=name)), "error"\n             )\n             return\n         del bundles[name]\ndiff --git a/Products/CMFPlone/tests/testResourceRegistries.py b/Products/CMFPlone/tests/testResourceRegistries.py\nindex 4ad904ce0c..6049d5f2e1 100644\n--- a/Products/CMFPlone/tests/testResourceRegistries.py\n+++ b/Products/CMFPlone/tests/testResourceRegistries.py\n@@ -1,8 +1,11 @@\n from plone.app.testing import logout\n+from plone.app.testing import SITE_OWNER_NAME\n+from plone.app.testing import SITE_OWNER_PASSWORD\n+from plone.base.interfaces import IBundleRegistry\n from plone.registry import field as regfield\n from plone.registry import Record\n from plone.registry.interfaces import IRegistry\n-from plone.base.interfaces import IBundleRegistry\n+from plone.testing.zope import Browser\n from Products.CMFPlone.resources import add_bundle_on_request\n from Products.CMFPlone.resources import remove_bundle_on_request\n from Products.CMFPlone.resources.browser.resource import ScriptsView\n@@ -372,3 +375,52 @@ def test_scripts_anonymous(self):\n         # self.assertNotIn("http://test.foo/test.min.js", results)\n         self.assertNotIn("http://test2.foo/member.min.js", results)\n         self.assertIn("http://test3.foo/test.min.js", results)\n+\n+\n+class TestRRControlPanel(PloneTestCase.PloneTestCase):\n+\n+    def setUp(self):\n+        self.portal = self.layer[\'portal\']\n+        self.app = self.layer[\'app\']\n+        self.browser = Browser(self.app)\n+        self.browser.handleErrors = False\n+        self.browser.addHeader(\n+            \'Authorization\',\n+            f\'Basic {SITE_OWNER_NAME}:{SITE_OWNER_PASSWORD}\'\n+        )\n+        self.browser.open(self.portal.absolute_url() + "/@@resourceregistry-controlpanel")\n+\n+    def test_controlpanel(self):\n+        self.assertIn("<h1 class=\\"documentFirstHeading\\">Resource Registry</h1>", self.browser.contents)\n+        self.assertIn("++plone++static/bundle-plone/bundle.min.js", self.browser.contents)\n+\n+    def test_add_resource(self):\n+        # the last form is the add form\n+        add_form = self.browser.getForm(index=7)\n+        add_form.getControl(name="name").value = "my-resource"\n+        add_form.getControl(name="jscompilation").value = "++resource++my.resource.js"\n+        add_form.getControl(name="enabled").value = "checked"\n+        add_form.getControl("add").click()\n+\n+        self.assertIn(\n+            "<h2 class=\\"accordion-header\\" id=\\"heading-my-resource\\">",\n+            self.browser.contents,\n+        )\n+\n+    def test_update_resource(self):\n+        # try to set already existing name should fail\n+        form = self.browser.getForm(index=6)\n+        form.getControl(name="name").value = "plone"\n+        form.getControl("update").click()\n+\n+        self.assertIn("Record name plone already taken.", self.browser.contents)\n+\n+        # set new name\n+        form = self.browser.getForm(index=6)\n+        form.getControl(name="name").value = "new-resource-name"\n+        form.getControl("update").click()\n+\n+        self.assertIn(\n+             "<h2 class=\\"accordion-header\\" id=\\"heading-new-resource-name\\">",\n+            self.browser.contents,\n+        )\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-07-04T16:10:53+02:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/c003c37b3f65abfc029c50c893e88fa39d80fc82

changenote

Files changed:
A news/3574.bugfix

b'diff --git a/news/3574.bugfix b/news/3574.bugfix\nnew file mode 100644\nindex 0000000000..f5e29ecc77\n--- /dev/null\n+++ b/news/3574.bugfix\n@@ -0,0 +1,2 @@\n+Fix adding/renaming resources TTW.\n+[petschki]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-07-06T09:49:08+02:00
Author: Peter Mathis (petschki) <petschki@users.noreply.github.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/299b7baab1de47a921085531402605a0d8e83cdc

Merge pull request #3574 from plone/petschki-add-rename-rr

Fix adding/updating resources TTW

Files changed:
A news/3574.bugfix
M Products/CMFPlone/controlpanel/browser/resourceregistry.py
M Products/CMFPlone/tests/testResourceRegistries.py

b'diff --git a/Products/CMFPlone/controlpanel/browser/resourceregistry.py b/Products/CMFPlone/controlpanel/browser/resourceregistry.py\nindex 5885e8dc46..7f754b993c 100644\n--- a/Products/CMFPlone/controlpanel/browser/resourceregistry.py\n+++ b/Products/CMFPlone/controlpanel/browser/resourceregistry.py\n@@ -67,13 +67,13 @@ def _add(self):\n         bundles = self._bundles\n         if name in bundles:\n             IStatusMessage(self.request).addStatusMessage(\n-                _("Record ${name} already exists.", name=name), "error"\n+                _("Record ${name} already exists.", mapping=dict(name=name)), "error"\n             )\n             return\n         record = bundles.add(name)\n         self._set_data_from_form(record)\n         IStatusMessage(self.request).addStatusMessage(\n-            _("Record ${name} created.", name=name), "info"\n+            _("Record ${name} created.", mapping=dict(name=name)), "info"\n         )\n \n     def _update(self):\n@@ -93,11 +93,13 @@ def _update(self):\n                 return\n             if new_name in bundles:\n                 IStatusMessage(self.request).addStatusMessage(\n-                    _("Record name ${new_name} already taken.", new_name=new_name), "error"\n+                    _("Record name ${new_name} already taken.", mapping=dict(new_name=new_name)), "error"\n                 )\n                 return\n             record = bundles[original_name]\n             del bundles[original_name]\n+            # update prefix\n+            record.__prefix__ = record.__prefix__.replace(original_name, new_name)\n             bundles[new_name] = record\n         else:\n             record = bundles[original_name]\n@@ -120,7 +122,7 @@ def _delete(self):\n         bundles = self._bundles\n         if name not in bundles:\n             IStatusMessage(self.request).addStatusMessage(\n-                _("Expected record ${name} missing.", name=name), "error"\n+                _("Expected record ${name} missing.", mapping=dict(name=name)), "error"\n             )\n             return\n         del bundles[name]\ndiff --git a/Products/CMFPlone/tests/testResourceRegistries.py b/Products/CMFPlone/tests/testResourceRegistries.py\nindex 4ad904ce0c..6049d5f2e1 100644\n--- a/Products/CMFPlone/tests/testResourceRegistries.py\n+++ b/Products/CMFPlone/tests/testResourceRegistries.py\n@@ -1,8 +1,11 @@\n from plone.app.testing import logout\n+from plone.app.testing import SITE_OWNER_NAME\n+from plone.app.testing import SITE_OWNER_PASSWORD\n+from plone.base.interfaces import IBundleRegistry\n from plone.registry import field as regfield\n from plone.registry import Record\n from plone.registry.interfaces import IRegistry\n-from plone.base.interfaces import IBundleRegistry\n+from plone.testing.zope import Browser\n from Products.CMFPlone.resources import add_bundle_on_request\n from Products.CMFPlone.resources import remove_bundle_on_request\n from Products.CMFPlone.resources.browser.resource import ScriptsView\n@@ -372,3 +375,52 @@ def test_scripts_anonymous(self):\n         # self.assertNotIn("http://test.foo/test.min.js", results)\n         self.assertNotIn("http://test2.foo/member.min.js", results)\n         self.assertIn("http://test3.foo/test.min.js", results)\n+\n+\n+class TestRRControlPanel(PloneTestCase.PloneTestCase):\n+\n+    def setUp(self):\n+        self.portal = self.layer[\'portal\']\n+        self.app = self.layer[\'app\']\n+        self.browser = Browser(self.app)\n+        self.browser.handleErrors = False\n+        self.browser.addHeader(\n+            \'Authorization\',\n+            f\'Basic {SITE_OWNER_NAME}:{SITE_OWNER_PASSWORD}\'\n+        )\n+        self.browser.open(self.portal.absolute_url() + "/@@resourceregistry-controlpanel")\n+\n+    def test_controlpanel(self):\n+        self.assertIn("<h1 class=\\"documentFirstHeading\\">Resource Registry</h1>", self.browser.contents)\n+        self.assertIn("++plone++static/bundle-plone/bundle.min.js", self.browser.contents)\n+\n+    def test_add_resource(self):\n+        # the last form is the add form\n+        add_form = self.browser.getForm(index=7)\n+        add_form.getControl(name="name").value = "my-resource"\n+        add_form.getControl(name="jscompilation").value = "++resource++my.resource.js"\n+        add_form.getControl(name="enabled").value = "checked"\n+        add_form.getControl("add").click()\n+\n+        self.assertIn(\n+            "<h2 class=\\"accordion-header\\" id=\\"heading-my-resource\\">",\n+            self.browser.contents,\n+        )\n+\n+    def test_update_resource(self):\n+        # try to set already existing name should fail\n+        form = self.browser.getForm(index=6)\n+        form.getControl(name="name").value = "plone"\n+        form.getControl("update").click()\n+\n+        self.assertIn("Record name plone already taken.", self.browser.contents)\n+\n+        # set new name\n+        form = self.browser.getForm(index=6)\n+        form.getControl(name="name").value = "new-resource-name"\n+        form.getControl("update").click()\n+\n+        self.assertIn(\n+             "<h2 class=\\"accordion-header\\" id=\\"heading-new-resource-name\\">",\n+            self.browser.contents,\n+        )\ndiff --git a/news/3574.bugfix b/news/3574.bugfix\nnew file mode 100644\nindex 0000000000..f5e29ecc77\n--- /dev/null\n+++ b/news/3574.bugfix\n@@ -0,0 +1,2 @@\n+Fix adding/renaming resources TTW.\n+[petschki]\n'

