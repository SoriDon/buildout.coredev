Repository: plone.base


Branch: refs/heads/main
Date: 2023-04-27T13:27:48+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.base/commit/4b0b692b86a5c8fbd29fd2c7c2f3afbac80856f9

move and refactor test from plone.app.layout

Files changed:
A news/move-navroot-test.bugfix
A src/plone/base/tests/test_root.py

b'diff --git a/news/move-navroot-test.bugfix b/news/move-navroot-test.bugfix\nnew file mode 100644\nindex 0000000..7aa27fc\n--- /dev/null\n+++ b/news/move-navroot-test.bugfix\n@@ -0,0 +1,2 @@\n+Move test for navigationroot from plone.app.layout und refactor.\n+[@jensens]\ndiff --git a/src/plone/base/tests/test_root.py b/src/plone/base/tests/test_root.py\nnew file mode 100644\nindex 0000000..d2c3bb7\n--- /dev/null\n+++ b/src/plone/base/tests/test_root.py\n@@ -0,0 +1,58 @@\n+from AccessControl.SecurityManagement import newSecurityManager\n+from plone.base.navigationroot import get_navigation_root_object\n+from Products.CMFCore.interfaces import ITypesTool\n+from Products.CMFCore.PortalFolder import PortalFolder\n+from Products.CMFCore.PortalFolder import PortalFolderFactory\n+from Products.CMFCore.testing import TraversingEventZCMLLayer\n+from Products.CMFCore.tests.base.dummy import DummySite\n+from Products.CMFCore.tests.base.dummy import DummyUserFolder\n+from Products.CMFCore.tests.base.testcase import SecurityTest\n+from Products.CMFCore.tests.base.tidata import FTIDATA_DUMMY\n+from Products.CMFCore.TypesTool import FactoryTypeInformation\n+from Products.CMFCore.TypesTool import TypesTool\n+from zope.component import getSiteManager\n+from zope.component.interfaces import IFactory\n+from Products.CMFCore.testing import TraversingEventZCMLLayer\n+\n+import unittest\n+\n+\n+class PortalFolderFactoryTests(SecurityTest):\n+    layer = TraversingEventZCMLLayer\n+    _PORTAL_TYPE = "Test Folder"\n+\n+    def setUp(self):\n+        # simple dummy site\n+        # setUp see Products.CMFCore.tests.test_PortalFolder.py\n+        SecurityTest.setUp(self)\n+        self.portal = DummySite("site").__of__(self.app)\n+        acl_users = self.portal._setObject("acl_users", DummyUserFolder())\n+        newSecurityManager(None, acl_users.all_powerful_Oz)\n+\n+        self.ttool = ttool = TypesTool()\n+        ttool._setObject(\n+            self._PORTAL_TYPE,\n+            FactoryTypeInformation(\n+                id=self._PORTAL_TYPE,\n+                title="Folder or Directory",\n+                meta_type=PortalFolder.meta_type,\n+                factory="cmf.folder",\n+                filter_content_types=0,\n+            ),\n+        )\n+        ttool._setObject(\n+            "Dummy Content", FactoryTypeInformation(**FTIDATA_DUMMY[0].copy())\n+        )\n+        sm = getSiteManager()\n+        sm.registerUtility(ttool, ITypesTool)\n+        sm.registerUtility(PortalFolderFactory, IFactory, "cmf.folder")\n+\n+        self.f = self.portal._setObject("container", PortalFolder("container"))\n+        self.f._setPortalTypeName(self._PORTAL_TYPE)\n+\n+    def test_get_navigation_root_object_no_context(self):\n+        """\n+        If you don\'t know the context then you also don\'t know what the\n+        navigation root is.\n+        """\n+        self.assertEqual(None, get_navigation_root_object(None, self.portal))\n'

Repository: plone.base


Branch: refs/heads/main
Date: 2023-04-27T11:36:02Z
Author: pre-commit-ci[bot] (pre-commit-ci[bot]) <66853113+pre-commit-ci[bot]@users.noreply.github.com>
Commit: https://github.com/plone/plone.base/commit/4061c9689d9b81455ff7e88d70da7734925e5fcc

[pre-commit.ci] auto fixes from pre-commit.com hooks

for more information, see https://pre-commit.ci

Files changed:
M src/plone/base/tests/test_root.py

b'diff --git a/src/plone/base/tests/test_root.py b/src/plone/base/tests/test_root.py\nindex d2c3bb7..e66f0cd 100644\n--- a/src/plone/base/tests/test_root.py\n+++ b/src/plone/base/tests/test_root.py\n@@ -12,7 +12,6 @@\n from Products.CMFCore.TypesTool import TypesTool\n from zope.component import getSiteManager\n from zope.component.interfaces import IFactory\n-from Products.CMFCore.testing import TraversingEventZCMLLayer\n \n import unittest\n \n'

Repository: plone.base


Branch: refs/heads/main
Date: 2023-04-27T13:38:20+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.base/commit/67edaeabf3e1e75c61f4266329fb2151d3f77ab4

rm unused import

Files changed:
M src/plone/base/tests/test_root.py

b'diff --git a/src/plone/base/tests/test_root.py b/src/plone/base/tests/test_root.py\nindex e66f0cd..f4fabb1 100644\n--- a/src/plone/base/tests/test_root.py\n+++ b/src/plone/base/tests/test_root.py\n@@ -13,8 +13,6 @@\n from zope.component import getSiteManager\n from zope.component.interfaces import IFactory\n \n-import unittest\n-\n \n class PortalFolderFactoryTests(SecurityTest):\n     layer = TraversingEventZCMLLayer\n'

Repository: plone.base


Branch: refs/heads/main
Date: 2023-04-27T16:18:55+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.base/commit/714cbd69c9a47de8bbab1060347c4bf508f7e99b

Merge pull request #39 from plone/move-navroot-test

move and refactor test from plone.app.layout

Files changed:
A news/move-navroot-test.bugfix
A src/plone/base/tests/test_root.py

b'diff --git a/news/move-navroot-test.bugfix b/news/move-navroot-test.bugfix\nnew file mode 100644\nindex 0000000..7aa27fc\n--- /dev/null\n+++ b/news/move-navroot-test.bugfix\n@@ -0,0 +1,2 @@\n+Move test for navigationroot from plone.app.layout und refactor.\n+[@jensens]\ndiff --git a/src/plone/base/tests/test_root.py b/src/plone/base/tests/test_root.py\nnew file mode 100644\nindex 0000000..f4fabb1\n--- /dev/null\n+++ b/src/plone/base/tests/test_root.py\n@@ -0,0 +1,55 @@\n+from AccessControl.SecurityManagement import newSecurityManager\n+from plone.base.navigationroot import get_navigation_root_object\n+from Products.CMFCore.interfaces import ITypesTool\n+from Products.CMFCore.PortalFolder import PortalFolder\n+from Products.CMFCore.PortalFolder import PortalFolderFactory\n+from Products.CMFCore.testing import TraversingEventZCMLLayer\n+from Products.CMFCore.tests.base.dummy import DummySite\n+from Products.CMFCore.tests.base.dummy import DummyUserFolder\n+from Products.CMFCore.tests.base.testcase import SecurityTest\n+from Products.CMFCore.tests.base.tidata import FTIDATA_DUMMY\n+from Products.CMFCore.TypesTool import FactoryTypeInformation\n+from Products.CMFCore.TypesTool import TypesTool\n+from zope.component import getSiteManager\n+from zope.component.interfaces import IFactory\n+\n+\n+class PortalFolderFactoryTests(SecurityTest):\n+    layer = TraversingEventZCMLLayer\n+    _PORTAL_TYPE = "Test Folder"\n+\n+    def setUp(self):\n+        # simple dummy site\n+        # setUp see Products.CMFCore.tests.test_PortalFolder.py\n+        SecurityTest.setUp(self)\n+        self.portal = DummySite("site").__of__(self.app)\n+        acl_users = self.portal._setObject("acl_users", DummyUserFolder())\n+        newSecurityManager(None, acl_users.all_powerful_Oz)\n+\n+        self.ttool = ttool = TypesTool()\n+        ttool._setObject(\n+            self._PORTAL_TYPE,\n+            FactoryTypeInformation(\n+                id=self._PORTAL_TYPE,\n+                title="Folder or Directory",\n+                meta_type=PortalFolder.meta_type,\n+                factory="cmf.folder",\n+                filter_content_types=0,\n+            ),\n+        )\n+        ttool._setObject(\n+            "Dummy Content", FactoryTypeInformation(**FTIDATA_DUMMY[0].copy())\n+        )\n+        sm = getSiteManager()\n+        sm.registerUtility(ttool, ITypesTool)\n+        sm.registerUtility(PortalFolderFactory, IFactory, "cmf.folder")\n+\n+        self.f = self.portal._setObject("container", PortalFolder("container"))\n+        self.f._setPortalTypeName(self._PORTAL_TYPE)\n+\n+    def test_get_navigation_root_object_no_context(self):\n+        """\n+        If you don\'t know the context then you also don\'t know what the\n+        navigation root is.\n+        """\n+        self.assertEqual(None, get_navigation_root_object(None, self.portal))\n'

