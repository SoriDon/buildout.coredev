Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-09-08T18:49:09Z
Author: Rudd-O (Rudd-O) <rudd-o@rudd-o.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/f002c684ae3626504c8c768620a0f5a88978503f

Add the styles CSS from the theme to the content CSS to load.

Without this, the theme creator's styles CSS is never loaded by TinyMCE.  `importcss_file_filter` acts only as a filter lambda "permit these paths to load", but if these paths are not added to the `content_css` setting, then they are never loaded by TinyMCE.

Files changed:
M Products/CMFPlone/patterns/tinymce.py

b'diff --git a/Products/CMFPlone/patterns/tinymce.py b/Products/CMFPlone/patterns/tinymce.py\nindex 0ae8528f46..2e9a1185ca 100644\n--- a/Products/CMFPlone/patterns/tinymce.py\n+++ b/Products/CMFPlone/patterns/tinymce.py\n@@ -97,14 +97,17 @@ def get_tiny_config(self):\n         importcss_file_filter = "tinymce-formats.css"\n \n         theme = self.get_theme()\n+        extra_content_css = ""\n         if theme and getattr(theme, "tinymce_styles_css", None):\n-            importcss_file_filter += ",{}/{}".format(\n+            extra = ",{}/{}".format(\n                 self.nav_root_url, theme.tinymce_styles_css.lstrip("/")\n             )\n+            extra_content_css += extra\n+            importcss_file_filter += extra\n \n         tiny_config = {\n             "resize": "both" if settings.resizing else False,\n-            "content_css": self.get_content_css(),\n+            "content_css": self.get_content_css() + extra_content_css,\n             "plugins": ["plonelink", "ploneimage", "importcss"] + settings.plugins,\n             "external_plugins": {},\n             "toolbar": settings.toolbar,\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-09-08T18:50:34Z
Author: Rudd-O (Rudd-O) <rudd-o@rudd-o.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/cfac3c3848710bf565e576d1ab7ef2caea3c00d7

Towncrier update.

Files changed:
A news/3638.bugfix

b'diff --git a/news/3638.bugfix b/news/3638.bugfix\nnew file mode 100644\nindex 0000000000..0d63733cd3\n--- /dev/null\n+++ b/news/3638.bugfix\n@@ -0,0 +1 @@\n+* Actually load theme-specified styles CSS in TinyMCE [Rudd-O]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-09-10T12:25:39+05:30
Author: Rohan Shaw (rohnsha0) <86848116+rohnsha0@users.noreply.github.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/0e17d8e98ceead77ecc24cfa524d33b0381e2871

Merge branch 'master' into master

Files changed:
A news/6008.bugfix
M CHANGES.rst
M Products/CMFPlone/profiles/default/metadata.xml
M setup.py
D news/1290.bugfix
D news/1959.bugfix
D news/3382.bugfix
D news/3475.bugfix
D news/3536.bugfix
D news/3568.bugfix
D news/3581.bugfix
D news/3582.bugfix
D news/3584.bugfix
D news/3587.bugfix
D news/3599.bugfix
D news/3600.bugfix
D news/3601.bugfix
D news/3605.bugfix
D news/3609.bugfix
D news/3610.bugfix
D news/3614-2.bugfix
D news/3614.bugfix
D news/3615.bugfix
D news/3616.bugfix
D news/6007.bugfix

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 57fafe41c8..c1b1f6e3a4 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -12,6 +12,69 @@ Changelog\n \n .. towncrier release notes start\n \n+6.0.0b2 (2022-09-10)\n+--------------------\n+\n+Breaking changes:\n+\n+\n+- Officially drop Python 3.7 support and add 3.10 support.\n+  Currently everything still work in 3.7, all tests pass, but beta 2 is the last release where this is the case.\n+  See discussion in `this issue <https://github.com/plone/Products.CMFPlone/issues/3635>`_ and especially `this community poll <https://community.plone.org/t/plone-6-0-drop-support-for-python-3-7-and-3-8/15549>`_.\n+  [maurits] (#3635)\n+\n+\n+Bug fixes:\n+\n+\n+- Moved CSFR patches addressing CMFPlone itself to decorators.\n+  [jensens] (3614-2)\n+- Fixed an issue that prevented the user to select the preferred timezone (#1290)\n+- Fixed adding control panel action via ZMI.\n+  [maurits] (#1959)\n+- Changed \'Powered by\' text\n+  [rohnsha0] (#3382)\n+- Fix active tab in ``@@test-rendering-icons``.\n+  [petschki] (#3475)\n+- Do not create title tag for svg icons when tag_alt is not given.\n+  [agitator] (#3536)\n+- Fixed all known instances of plone.com in plone/Products.CMFPlone\n+  [rohnsha0] (#3568)\n+- Allow access to the macros of the main_template, also from skin templates.\n+  [maurits] (#3581)\n+- Robot tests: be more specific when clicking some elements.\n+  [maurits] (#3582)\n+- Set portal title in registry when creating a new Plone site\n+  [erral] (#3584)\n+- Change test to make sure e-mail is sent in utf-8\n+  [erral] (#3587)\n+- Fixed \'Site Setup\' link appearing on various parts of Control Panel\n+  [rohnsha0] (#3599)\n+- Fixed Inconsistent font issues in Control Panel\n+  [rohnsha0] (#3600)\n+- Fix visual issue with long action name in @@actions-controlpanel.\n+  [petschki] (#3601)\n+- Fixed an error where Main Template (line: 42) referenced plone.com istead of plone.org\n+  [rohnsha0] (#3605)\n+- In traversal.py remove a Zope 4 BBB code, add a comment about bundle traverser and apply black.isort on the file.\n+  [jensens] (#3609)\n+- Supress warning of intentional deprecated import for BBB.\n+  [jensens] (#3610)\n+- Use plone.base and reduce deprecation warnings.\n+  In utils remove functions already moved to plone.base and add deferred import with message.\n+  Deprecate correct, where prior only comments or old logging.\n+  Some black/isort where touched.\n+  [jensens] (#3614)\n+- Move utils.getQuality and utils.getAllowedSizes to plone.namedfile.utils.\n+  This helps untangling circular dependencies.\n+  [jensens] (#3615)\n+- Do not use deprecated calls in actions expressions.\n+  ActionsTool and PloneBasetool got an code style overhaul.\n+  [jensens] (#3616)\n+- Updated metadata version to 6007.\n+  [maurits] (#6007)\n+\n+\n 6.0.0b1 (2022-07-23)\n --------------------\n \ndiff --git a/Products/CMFPlone/profiles/default/metadata.xml b/Products/CMFPlone/profiles/default/metadata.xml\nindex a51ef8dc57..fb8396b585 100644\n--- a/Products/CMFPlone/profiles/default/metadata.xml\n+++ b/Products/CMFPlone/profiles/default/metadata.xml\n@@ -1,4 +1,4 @@\n <?xml version="1.0"?>\n <metadata>\n-  <version>6007</version>\n+  <version>6008</version>\n </metadata>\ndiff --git a/news/1290.bugfix b/news/1290.bugfix\ndeleted file mode 100644\nindex cb082c4f98..0000000000\n--- a/news/1290.bugfix\n+++ /dev/null\n@@ -1 +0,0 @@\n-Fixed an issue that prevented the user to select the preferred timezone\ndiff --git a/news/1959.bugfix b/news/1959.bugfix\ndeleted file mode 100644\nindex 04254865c2..0000000000\n--- a/news/1959.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Fixed adding control panel action via ZMI.\n-[maurits]\ndiff --git a/news/3382.bugfix b/news/3382.bugfix\ndeleted file mode 100644\nindex 6060ed990a..0000000000\n--- a/news/3382.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Changed \'Powered by\' text\n-[rohnsha0]\ndiff --git a/news/3475.bugfix b/news/3475.bugfix\ndeleted file mode 100644\nindex cb38b56977..0000000000\n--- a/news/3475.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Fix active tab in ``@@test-rendering-icons``.\n-[petschki]\ndiff --git a/news/3536.bugfix b/news/3536.bugfix\ndeleted file mode 100644\nindex b5bbe81cbc..0000000000\n--- a/news/3536.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Do not create title tag for svg icons when tag_alt is not given.\n-[agitator]\n\\ No newline at end of file\ndiff --git a/news/3568.bugfix b/news/3568.bugfix\ndeleted file mode 100644\nindex 450997a173..0000000000\n--- a/news/3568.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Fixed all known instances of plone.com in plone/Products.CMFPlone\n-[rohnsha0]\ndiff --git a/news/3581.bugfix b/news/3581.bugfix\ndeleted file mode 100644\nindex 32eba96b1f..0000000000\n--- a/news/3581.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Allow access to the macros of the main_template, also from skin templates.\n-[maurits]\ndiff --git a/news/3582.bugfix b/news/3582.bugfix\ndeleted file mode 100644\nindex 805f4bdb48..0000000000\n--- a/news/3582.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Robot tests: be more specific when clicking some elements.\n-[maurits]\ndiff --git a/news/3584.bugfix b/news/3584.bugfix\ndeleted file mode 100644\nindex b83dbc1f59..0000000000\n--- a/news/3584.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Set portal title in registry when creating a new Plone site\n-[erral]\ndiff --git a/news/3587.bugfix b/news/3587.bugfix\ndeleted file mode 100644\nindex dd9e106c25..0000000000\n--- a/news/3587.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Change test to make sure e-mail is sent in utf-8\n-[erral]\ndiff --git a/news/3599.bugfix b/news/3599.bugfix\ndeleted file mode 100644\nindex f3d4ac9158..0000000000\n--- a/news/3599.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Fixed \'Site Setup\' link appearing on various parts of Control Panel\n-[rohnsha0]\ndiff --git a/news/3600.bugfix b/news/3600.bugfix\ndeleted file mode 100644\nindex b37691c066..0000000000\n--- a/news/3600.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Fixed Inconsistent font issues in Control Panel\n-[rohnsha0]\ndiff --git a/news/3601.bugfix b/news/3601.bugfix\ndeleted file mode 100644\nindex 32921649a6..0000000000\n--- a/news/3601.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Fix visual issue with long action name in @@actions-controlpanel.\n-[petschki]\ndiff --git a/news/3605.bugfix b/news/3605.bugfix\ndeleted file mode 100644\nindex eb2d6e2a4a..0000000000\n--- a/news/3605.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Fixed an error where Main Template (line: 42) referenced plone.com istead of plone.org\n-[rohnsha0]\ndiff --git a/news/3609.bugfix b/news/3609.bugfix\ndeleted file mode 100644\nindex 47ffdc293f..0000000000\n--- a/news/3609.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-In traversal.py remoe a Zope 4 BBB code, add a comment about bundle traverser and apply black.isort on the file.\n-[jensens]\ndiff --git a/news/3610.bugfix b/news/3610.bugfix\ndeleted file mode 100644\nindex 009d99d62a..0000000000\n--- a/news/3610.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Supress warning of intentional deprecated import for BBB.\n-[jensens]\ndiff --git a/news/3614-2.bugfix b/news/3614-2.bugfix\ndeleted file mode 100644\nindex 6e01b0f8c7..0000000000\n--- a/news/3614-2.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Moved CSFR patches addressing CMFPlone itself to decorators.\n-[jensens]\ndiff --git a/news/3614.bugfix b/news/3614.bugfix\ndeleted file mode 100644\nindex c1691ac58c..0000000000\n--- a/news/3614.bugfix\n+++ /dev/null\n@@ -1,7 +0,0 @@\n-Use plone.base and reduce deprecation warnings.\n-In utils remove functions already moved to plone.base and add deferred import with message.\n-Deprecate correct, where prior only comments or old logging.\n-Some black/isort where touched.\n-[jensens]\n-\n-\ndiff --git a/news/3615.bugfix b/news/3615.bugfix\ndeleted file mode 100644\nindex 45df6ff908..0000000000\n--- a/news/3615.bugfix\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-Move utils.getQuality and utils.getAllowedSizes to plone.namedfile.utils.\n-This helps untangling circular dependencies.\n-[jensens]\ndiff --git a/news/3616.bugfix b/news/3616.bugfix\ndeleted file mode 100644\nindex 178ec178c5..0000000000\n--- a/news/3616.bugfix\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-Do not use deprecated calls in actions expressions.\n-ActionsTool and PloneBasetool got an code style overhaul.\n-[jensens]\ndiff --git a/news/6007.bugfix b/news/6007.bugfix\ndeleted file mode 100644\nindex c0a2a0215b..0000000000\n--- a/news/6007.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Updated metadata version to 6007.\n-[maurits]\ndiff --git a/news/6008.bugfix b/news/6008.bugfix\nnew file mode 100644\nindex 0000000000..9dd983d4c4\n--- /dev/null\n+++ b/news/6008.bugfix\n@@ -0,0 +1 @@\n+Updated metadata version to 6008.  [maurits]\ndiff --git a/setup.py b/setup.py\nindex 2f0a3c5e0f..0087a15be4 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,7 +1,7 @@\n from setuptools import setup\n from setuptools import find_packages\n \n-version = \'6.0.0b2.dev0\'\n+version = \'6.0.0b3.dev0\'\n \n \n setup(\n@@ -20,9 +20,9 @@\n         "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",\n         "Operating System :: OS Independent",\n         "Programming Language :: Python",\n-        "Programming Language :: Python :: 3.7",\n         "Programming Language :: Python :: 3.8",\n         "Programming Language :: Python :: 3.9",\n+        "Programming Language :: Python :: 3.10",\n     ],\n     keywords=\'Plone CMF Python Zope CMS Webapplication\',\n     author=\'Plone Foundation\',\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-10-01T16:35:07Z
Author: Rudd-O (Rudd-O) <rudd-o@rudd-o.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/b558ca6164344fa0cd897ee1b0e039b9e8b5594c

Merge branch 'master' into master

Files changed:
A news/125.bugfix
A news/3635.bugfix
A news/3640.bugfix
A news/3641.bugfix
A news/3646.bugfix
M Products/CMFPlone/CatalogTool.py
M Products/CMFPlone/MigrationTool.py
M Products/CMFPlone/PasswordResetTool.py
M Products/CMFPlone/PloneBatch.py
M Products/CMFPlone/PloneControlPanel.py
M Products/CMFPlone/Portal.py
M Products/CMFPlone/PropertiesTool.py
M Products/CMFPlone/TypesTool.py
M Products/CMFPlone/URLTool.py
M Products/CMFPlone/WorkflowTool.py
M Products/CMFPlone/bbb.py
M Products/CMFPlone/browser/admin.py
M Products/CMFPlone/browser/atd.py
M Products/CMFPlone/browser/contact_info.py
M Products/CMFPlone/browser/defaultpage.py
M Products/CMFPlone/browser/favicon.py
M Products/CMFPlone/browser/global_statusmessage.py
M Products/CMFPlone/browser/icons.py
M Products/CMFPlone/browser/interfaces.py
M Products/CMFPlone/browser/login/login.py
M Products/CMFPlone/browser/login/login_help.py
M Products/CMFPlone/browser/login/password_reset.py
M Products/CMFPlone/browser/navtree.py
M Products/CMFPlone/browser/robots.py
M Products/CMFPlone/browser/search.py
M Products/CMFPlone/browser/sendto.py
M Products/CMFPlone/browser/sitemap.py
M Products/CMFPlone/browser/static/plone-admin-ui.css
M Products/CMFPlone/browser/syndication/adapters.py
M Products/CMFPlone/browser/syndication/settings.py
M Products/CMFPlone/browser/syndication/tool.py
M Products/CMFPlone/browser/syndication/utils.py
M Products/CMFPlone/browser/syndication/views.py
M Products/CMFPlone/browser/templates/plone-overview.pt
M Products/CMFPlone/browser/templates/plone-upgrade.pt
M Products/CMFPlone/browser/templates/test_rendering_cheatsheet.pt
M Products/CMFPlone/browser/test_rendering.py
M Products/CMFPlone/controlpanel/bbb/editing.py
M Products/CMFPlone/controlpanel/bbb/language.py
M Products/CMFPlone/controlpanel/bbb/mail.py
M Products/CMFPlone/controlpanel/bbb/navigation.py
M Products/CMFPlone/controlpanel/bbb/search.py
M Products/CMFPlone/controlpanel/bbb/security.py
M Products/CMFPlone/controlpanel/bbb/site.py
M Products/CMFPlone/controlpanel/bbb/usergroups.py
M Products/CMFPlone/controlpanel/browser/actions.py
M Products/CMFPlone/controlpanel/browser/dateandtime.py
M Products/CMFPlone/controlpanel/browser/editing.py
M Products/CMFPlone/controlpanel/browser/error_log_form.py
M Products/CMFPlone/controlpanel/browser/filter.py
M Products/CMFPlone/controlpanel/browser/imaging.py
M Products/CMFPlone/controlpanel/browser/language.py
M Products/CMFPlone/controlpanel/browser/mail.py
M Products/CMFPlone/controlpanel/browser/maintenance.py
M Products/CMFPlone/controlpanel/browser/markup.py
M Products/CMFPlone/controlpanel/browser/navigation.py
M Products/CMFPlone/controlpanel/browser/overview.py
M Products/CMFPlone/controlpanel/browser/quickinstaller.py
M Products/CMFPlone/controlpanel/browser/redirects.py
M Products/CMFPlone/controlpanel/browser/relations.py
M Products/CMFPlone/controlpanel/browser/search.py
M Products/CMFPlone/controlpanel/browser/security.py
M Products/CMFPlone/controlpanel/browser/site.py
M Products/CMFPlone/controlpanel/browser/socialmedia.py
M Products/CMFPlone/controlpanel/browser/syndication.py
M Products/CMFPlone/controlpanel/browser/tinymce.py
M Products/CMFPlone/controlpanel/browser/types.py
M Products/CMFPlone/controlpanel/browser/usergroups.py
M Products/CMFPlone/controlpanel/browser/usergroups_groupdetails.py
M Products/CMFPlone/controlpanel/browser/usergroups_groupmembership.py
M Products/CMFPlone/controlpanel/browser/usergroups_groupsoverview.py
M Products/CMFPlone/controlpanel/browser/usergroups_usermembership.py
M Products/CMFPlone/controlpanel/browser/usergroups_usersoverview.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_actions.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_editing_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_filter_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_language_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_mail_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_maintenance_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_markup_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_navigation_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_search_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_security_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_site_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_usergroups_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_editing.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_error_log.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_filter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_language.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_mail.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_maintenance.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_markup.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_navigation.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_redirection.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_relations.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_search.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_security.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_site.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_syndication.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_types.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_usergroups.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_usergroups_siteadmin_role.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_dateandtime.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_doctest.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_editing.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_events.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_filter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_installer.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_language.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_mail.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_markup.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_navigation.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_overview.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_relations.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_search.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_security.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_site.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_types.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_usergroups.py
M Products/CMFPlone/controlpanel/tests/test_doctests.py
M Products/CMFPlone/defaultpage.py
M Products/CMFPlone/earlypatches/security.py
M Products/CMFPlone/exportimport/controlpanel.py
M Products/CMFPlone/exportimport/memberdata_properties.py
M Products/CMFPlone/exportimport/propertiestool.py
M Products/CMFPlone/exportimport/tests/base.py
M Products/CMFPlone/exportimport/tests/testControlPanel.py
M Products/CMFPlone/exportimport/tests/testPropertiesTool.py
M Products/CMFPlone/factory.py
M Products/CMFPlone/i18nl10n.py
M Products/CMFPlone/image_scales/adapters.py
M Products/CMFPlone/image_scales/tests/test_image_scales_metadata.py
M Products/CMFPlone/interfaces/__init__.py
M Products/CMFPlone/interfaces/atd.py
M Products/CMFPlone/interfaces/basetool.py
M Products/CMFPlone/interfaces/breadcrumbs.py
M Products/CMFPlone/interfaces/constrains.py
M Products/CMFPlone/interfaces/controlpanel.py
M Products/CMFPlone/interfaces/defaultpage.py
M Products/CMFPlone/interfaces/events.py
M Products/CMFPlone/interfaces/installable.py
M Products/CMFPlone/interfaces/interface.py
M Products/CMFPlone/interfaces/language.py
M Products/CMFPlone/interfaces/login.py
M Products/CMFPlone/interfaces/migration.py
M Products/CMFPlone/interfaces/password_reset.py
M Products/CMFPlone/interfaces/patterns.py
M Products/CMFPlone/interfaces/properties.py
M Products/CMFPlone/interfaces/resources.py
M Products/CMFPlone/interfaces/siteroot.py
M Products/CMFPlone/interfaces/structure.py
M Products/CMFPlone/interfaces/syndication.py
M Products/CMFPlone/interfaces/translationservice.py
M Products/CMFPlone/log.py
M Products/CMFPlone/patches/__init__.py
M Products/CMFPlone/patches/addzmiplonesite.py
M Products/CMFPlone/patches/addzmisecuritywarning.py
M Products/CMFPlone/patches/csrf.py
M Products/CMFPlone/patches/dateIndexPatch.py
M Products/CMFPlone/patches/gtbn.py
M Products/CMFPlone/patches/publishing.py
M Products/CMFPlone/patches/sendmail.py
M Products/CMFPlone/patches/speed.py
M Products/CMFPlone/patches/templatecookcheck.py
M Products/CMFPlone/patches/unicodeFallbackPatch.py
M Products/CMFPlone/patches/unicodehacks.py
M Products/CMFPlone/patterns/__init__.py
M Products/CMFPlone/patterns/settings.py
M Products/CMFPlone/patterns/tinymce.py
M Products/CMFPlone/permissions.py
M Products/CMFPlone/relationhelper.py
M Products/CMFPlone/resources/utils.py
M Products/CMFPlone/setuphandlers.py
M Products/CMFPlone/skins/plone_scripts/externalEditorEnabled.py
M Products/CMFPlone/skins/plone_scripts/external_edit.py
M Products/CMFPlone/skins/plone_scripts/getFolderContents.py
M Products/CMFPlone/skins/plone_scripts/queryCatalog.py
M Products/CMFPlone/skins/plone_scripts/translate.py
M Products/CMFPlone/skins/plone_scripts/utranslate.py
M Products/CMFPlone/testing.py
M Products/CMFPlone/tests/LoginAndLogout.rst
M Products/CMFPlone/tests/PloneTestCase.py
M Products/CMFPlone/tests/csrf.txt
M Products/CMFPlone/tests/dummy.py
M Products/CMFPlone/tests/pwreset_browser.rst
M Products/CMFPlone/tests/robot/robot_setup.py
M Products/CMFPlone/tests/robot/test_overlays.robot
M Products/CMFPlone/tests/robot/variables.py
M Products/CMFPlone/tests/search_form.rst
M Products/CMFPlone/tests/testActionsTool.py
M Products/CMFPlone/tests/testBatch.py
M Products/CMFPlone/tests/testBrowserLayerPrecedence.py
M Products/CMFPlone/tests/testCSRFProtection.py
M Products/CMFPlone/tests/testCatalogTool.py
M Products/CMFPlone/tests/testContentSecurity.py
M Products/CMFPlone/tests/testContentTypeScripts.py
M Products/CMFPlone/tests/testCookieAuth.py
M Products/CMFPlone/tests/testCutPasteSecurity.py
M Products/CMFPlone/tests/testDateIndexRanges.py
M Products/CMFPlone/tests/testDateTimeIntegration.py
M Products/CMFPlone/tests/testEmailLogin.py
M Products/CMFPlone/tests/testExternalEditorEnabled.py
M Products/CMFPlone/tests/testIImagingSchema.py
M Products/CMFPlone/tests/testInterfaces.py
M Products/CMFPlone/tests/testMigrationTool.py
M Products/CMFPlone/tests/testNavigationView.py
M Products/CMFPlone/tests/testNextPrevious.py
M Products/CMFPlone/tests/testPloneTool.py
M Products/CMFPlone/tests/testPortalCreation.py
M Products/CMFPlone/tests/testQueryCatalog.py
M Products/CMFPlone/tests/testRegistrationTool.py
M Products/CMFPlone/tests/testRestrictedAcquisition.py
M Products/CMFPlone/tests/testSearch.py
M Products/CMFPlone/tests/testSecurity.py
M Products/CMFPlone/tests/testSecurityDeclarations.py
M Products/CMFPlone/tests/testSyndication.py
M Products/CMFPlone/tests/testTranslationServiceTool.py
M Products/CMFPlone/tests/testURLTool.py
M Products/CMFPlone/tests/testUnicodeSplitter.py
M Products/CMFPlone/tests/testUserFolderBasics.py
M Products/CMFPlone/tests/testWebDAV.py
M Products/CMFPlone/tests/testWorkflowTool.py
M Products/CMFPlone/tests/test_defaultpage.py
M Products/CMFPlone/tests/test_doctests.py
M Products/CMFPlone/tests/test_expressions.py
M Products/CMFPlone/tests/test_factory.py
M Products/CMFPlone/tests/test_functional.py
M Products/CMFPlone/tests/test_login_form.py
M Products/CMFPlone/tests/test_login_logout.py
M Products/CMFPlone/tests/test_mails.py
M Products/CMFPlone/tests/test_patternsettings.py
M Products/CMFPlone/tests/test_redirect_after_login.py
M Products/CMFPlone/tests/test_robot.py
M Products/CMFPlone/tests/test_robots_txt.py
M Products/CMFPlone/tests/test_safe_formatter.py
M Products/CMFPlone/tests/test_sitelogo.py
M Products/CMFPlone/tests/test_sitemap.py
M Products/CMFPlone/tests/test_utils.py
M Products/CMFPlone/tests/test_zmi.py
M Products/CMFPlone/tests/utils.py
M Products/CMFPlone/unicodeconflictresolver.py
M Products/CMFPlone/utils.py
M Products/CMFPlone/workflow.py
M setup.py

b'diff --git a/Products/CMFPlone/CatalogTool.py b/Products/CMFPlone/CatalogTool.py\nindex 54a24caf45..64e11a1a10 100644\n--- a/Products/CMFPlone/CatalogTool.py\n+++ b/Products/CMFPlone/CatalogTool.py\n@@ -45,7 +45,6 @@\n import urllib\n \n \n-\n logger = logging.getLogger(\'Plone\')\n \n _marker = object()\n@@ -151,8 +150,8 @@ def allowedRolesAndUsers(obj):\n @indexer(Interface)\n def object_provides(obj):\n     return tuple(\n-        [i.__identifier__ for i in providedBy(obj).flattened()\n-         if i.__identifier__ not in DENIED_INTERFACES]\n+        i.__identifier__ for i in providedBy(obj).flattened()\n+         if i.__identifier__ not in DENIED_INTERFACES\n     )\n \n \ndiff --git a/Products/CMFPlone/MigrationTool.py b/Products/CMFPlone/MigrationTool.py\nindex 7b56c901ee..37abca6e4a 100644\n--- a/Products/CMFPlone/MigrationTool.py\n+++ b/Products/CMFPlone/MigrationTool.py\n@@ -1,16 +1,16 @@\n from AccessControl import ClassSecurityInfo\n-from AccessControl.requestmethod import postonly\n from AccessControl.class_init import InitializeClass\n+from AccessControl.requestmethod import postonly\n from App.config import getConfiguration\n+from io import StringIO\n from OFS.SimpleItem import SimpleItem\n+from plone.base.interfaces import IMigrationTool\n from Products.CMFCore.permissions import ManagePortal\n from Products.CMFCore.utils import getToolByName\n from Products.CMFCore.utils import registerToolInterface\n from Products.CMFCore.utils import UniqueObject\n from Products.CMFPlone.factory import _DEFAULT_PROFILE\n-from plone.base.interfaces import IMigrationTool\n from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n-from io import StringIO\n from ZODB.POSException import ConflictError\n from zope.interface import implementer\n \n@@ -19,6 +19,7 @@\n import sys\n import transaction\n \n+\n logger = logging.getLogger(\'plone.app.upgrade\')\n _upgradePaths = {}\n \ndiff --git a/Products/CMFPlone/PasswordResetTool.py b/Products/CMFPlone/PasswordResetTool.py\nindex 2f5f74e4e2..620a34a0b7 100644\n--- a/Products/CMFPlone/PasswordResetTool.py\n+++ b/Products/CMFPlone/PasswordResetTool.py\n@@ -8,16 +8,17 @@\n from AccessControl.class_init import InitializeClass\n from BTrees.OOBTree import OOBTree\n from OFS.SimpleItem import SimpleItem\n+from plone.base.interfaces import IPWResetTool\n+from plone.base.interfaces import ISecuritySchema\n from plone.registry.interfaces import IRegistry\n from plone.uuid.interfaces import IUUIDGenerator\n from Products.CMFCore.permissions import ManagePortal\n from Products.CMFCore.utils import getToolByName\n from Products.CMFCore.utils import UniqueObject\n-from plone.base.interfaces import IPWResetTool\n-from plone.base.interfaces import ISecuritySchema\n from Products.CMFPlone.RegistrationTool import get_member_by_login_name\n from zope.component import getUtility\n from zope.interface import implementer\n+\n import datetime\n \n \ndiff --git a/Products/CMFPlone/PloneBatch.py b/Products/CMFPlone/PloneBatch.py\nindex f0f2c5eaa2..b96f72402a 100644\n--- a/Products/CMFPlone/PloneBatch.py\n+++ b/Products/CMFPlone/PloneBatch.py\n@@ -1,3 +1,4 @@\n from zope.deprecation import moved\n \n+\n moved(\'plone.base.batch\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/PloneControlPanel.py b/Products/CMFPlone/PloneControlPanel.py\nindex 494841d45f..fa04987c11 100644\n--- a/Products/CMFPlone/PloneControlPanel.py\n+++ b/Products/CMFPlone/PloneControlPanel.py\n@@ -3,16 +3,18 @@\n from App.special_dtml import DTMLFile\n from OFS.Folder import Folder\n from OFS.PropertyManager import PropertyManager\n+from plone.base.interfaces import IControlPanel\n from Products.CMFCore.ActionInformation import ActionInformation\n from Products.CMFCore.ActionProviderBase import ActionProviderBase\n-from Products.CMFCore.Expression import Expression, createExprContext\n-from Products.CMFCore.permissions import ManagePortal, View\n+from Products.CMFCore.Expression import createExprContext\n+from Products.CMFCore.Expression import Expression\n+from Products.CMFCore.permissions import ManagePortal\n+from Products.CMFCore.permissions import View\n from Products.CMFCore.utils import _checkPermission\n from Products.CMFCore.utils import getToolByName\n from Products.CMFCore.utils import registerToolInterface\n from Products.CMFCore.utils import UniqueObject\n from Products.CMFPlone import PloneMessageFactory as _\n-from plone.base.interfaces import IControlPanel\n from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n from zope.component.hooks import getSite\n from zope.i18n import translate\ndiff --git a/Products/CMFPlone/Portal.py b/Products/CMFPlone/Portal.py\nindex a3057b0a6a..15541f38b8 100644\n--- a/Products/CMFPlone/Portal.py\n+++ b/Products/CMFPlone/Portal.py\n@@ -116,7 +116,7 @@ def __delattr__(self, name):\n \n     # From PortalObjectBase\n     def __init__(self, id, title=\'\'):\n-        super(PloneSite, self).__init__(id, title=title)\n+        super().__init__(id, title=title)\n         components = PersistentComponents(\'++etc++site\')\n         components.__parent__ = self\n         self.setSiteManager(components)\n@@ -135,7 +135,7 @@ def __before_publishing_traverse__(self, arg1, arg2=None):\n             pass\n         self.setupCurrentSkin(REQUEST)\n \n-        super(PloneSite, self).__before_publishing_traverse__(arg1, arg2)\n+        super().__before_publishing_traverse__(arg1, arg2)\n \n     # Concept from OFS.OrderSupport\n     @security.protected(permissions.AccessContentsInformation)\ndiff --git a/Products/CMFPlone/PropertiesTool.py b/Products/CMFPlone/PropertiesTool.py\nindex d8ce537a1d..f0ea227709 100644\n--- a/Products/CMFPlone/PropertiesTool.py\n+++ b/Products/CMFPlone/PropertiesTool.py\n@@ -1,24 +1,24 @@\n-from Acquisition import aq_parent, aq_inner\n-from Products.CMFCore.permissions import ManagePortal\n-from Products.CMFCore.utils import UniqueObject\n-\n-from Products.PageTemplates.PageTemplateFile import PageTemplateFile\n-from OFS.Folder import Folder\n+from AccessControl import ClassSecurityInfo\n from AccessControl.class_init import InitializeClass\n+from Acquisition import aq_inner\n+from Acquisition import aq_parent\n from App.special_dtml import DTMLFile\n-from zope.interface import implementer\n-\n+from OFS.Folder import Folder\n from OFS.PropertyManager import PropertyManager\n from OFS.SimpleItem import SimpleItem\n-from AccessControl import ClassSecurityInfo\n+from plone.base.interfaces import IPropertiesTool\n+from plone.base.interfaces import ISimpleItemWithProperties\n+from Products.CMFCore.interfaces import ISiteRoot\n+from Products.CMFCore.permissions import ManagePortal\n+from Products.CMFCore.utils import UniqueObject\n from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n-from plone.base.interfaces \\\n-    import IPropertiesTool, ISimpleItemWithProperties\n from Products.CMFPlone.utils import WWW_DIR\n from Products.MailHost.interfaces import IMailHost\n+from Products.PageTemplates.PageTemplateFile import PageTemplateFile\n from zope.component import getUtility\n from zope.component import queryUtility\n-from Products.CMFCore.interfaces import ISiteRoot\n+from zope.deprecation import deprecate\n+from zope.interface import implementer\n \n \n @implementer(IPropertiesTool)\n@@ -106,6 +106,17 @@ def title(self):\n     def smtp_server(self):\n         return getUtility(IMailHost).smtp_host\n \n+\n+    @deprecate(\n+        "The portal portal_properties tool will be removed in Plone 6.1. "\n+        "Use the portal_registry instead. "\n+        "Check https://github.com/plone/Products.CMFPlone/issues/125 "\n+        "for more details."\n+    )\n+    def hasProperty(self, id):\n+        return super().hasProperty(id)\n+\n+\n InitializeClass(PropertiesTool)\n \n \n@@ -125,4 +136,14 @@ def __init__(self, id, title=\'\'):\n     manage_options = (PropertyManager.manage_options\n                       + SimpleItem.manage_options)\n \n+    @deprecate(\n+        "The portal portal_properties tool will be removed in Plone 6.1. "\n+        "Use the portal_registry instead. "\n+        "Check https://github.com/plone/Products.CMFPlone/issues/125 "\n+        "for more details."\n+    )\n+    def hasProperty(self, id):\n+        return super().hasProperty(id)\n+\n+\n InitializeClass(SimpleItemWithProperties)\ndiff --git a/Products/CMFPlone/TypesTool.py b/Products/CMFPlone/TypesTool.py\nindex cf94213cdd..4a4c773db4 100644\n--- a/Products/CMFPlone/TypesTool.py\n+++ b/Products/CMFPlone/TypesTool.py\n@@ -1,10 +1,8 @@\n from AccessControl import ClassSecurityInfo\n from AccessControl.class_init import InitializeClass\n-\n from Products.CMFCore.ActionInformation import ActionInfo\n from Products.CMFCore.interfaces import IAction\n from Products.CMFCore.TypesTool import TypesTool as BaseTool\n-\n from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n \n \ndiff --git a/Products/CMFPlone/URLTool.py b/Products/CMFPlone/URLTool.py\nindex c7d22bf174..87683ac434 100644\n--- a/Products/CMFPlone/URLTool.py\n+++ b/Products/CMFPlone/URLTool.py\n@@ -1,11 +1,11 @@\n from AccessControl import ClassSecurityInfo\n+from AccessControl.class_init import InitializeClass\n from Acquisition import aq_inner\n from Acquisition import aq_parent\n-from AccessControl.class_init import InitializeClass\n from Products.CMFCore.interfaces import ISiteRoot\n from Products.CMFCore.URLTool import URLTool as BaseTool\n-from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n from Products.CMFPlone.patches.gtbn import rewrap_in_request_container\n+from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n from zope.component import getUtility\n \n \ndiff --git a/Products/CMFPlone/WorkflowTool.py b/Products/CMFPlone/WorkflowTool.py\nindex 7085bb42c5..53ab7b1732 100644\n--- a/Products/CMFPlone/WorkflowTool.py\n+++ b/Products/CMFPlone/WorkflowTool.py\n@@ -1,19 +1,19 @@\n-from zope.component import getMultiAdapter\n-\n-from Products.CMFCore.utils import getToolByName\n-from Products.CMFCore.WorkflowTool import WorkflowTool as BaseTool\n-from plone.base.interfaces import IWorkflowChain\n-from ZODB.POSException import ConflictError\n-from Acquisition import aq_base\n-\n+from AccessControl import ClassSecurityInfo\n+from AccessControl import getSecurityManager\n from AccessControl.class_init import InitializeClass\n-from AccessControl import getSecurityManager, ClassSecurityInfo\n+from Acquisition import aq_base\n+from plone.base.interfaces import IWorkflowChain\n from Products.CMFCore.permissions import ManagePortal\n-from Products.DCWorkflow.Transitions import TRIGGER_USER_ACTION\n+from Products.CMFCore.utils import getToolByName\n+from Products.CMFCore.WorkflowTool import WorkflowTool as BaseTool\n from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n+from Products.DCWorkflow.Transitions import TRIGGER_USER_ACTION\n+from ZODB.POSException import ConflictError\n+from zope.component import getMultiAdapter\n \n import pkg_resources\n \n+\n try:\n     pkg_resources.get_distribution(\'plone.app.multilingual\')\n except pkg_resources.DistributionNotFound:\n@@ -258,7 +258,7 @@ def getWorklistsResults(self):\n                                 objects_by_path[absurl] = (o.modified(), o)\n \n         results = objects_by_path.values()\n-        return tuple([obj[1] for obj in sorted(results)])\n+        return tuple(obj[1] for obj in sorted(results))\n \n     security.declareProtected(ManagePortal, \'getChainForPortalType\')\n \ndiff --git a/Products/CMFPlone/bbb.py b/Products/CMFPlone/bbb.py\nindex ee3d242008..c92083cb24 100644\n--- a/Products/CMFPlone/bbb.py\n+++ b/Products/CMFPlone/bbb.py\n@@ -1,5 +1,6 @@\n import pkg_resources\n \n+\n HAS_ZSERVER = True\n try:\n     dist = pkg_resources.get_distribution(\'ZServer\')\ndiff --git a/Products/CMFPlone/browser/admin.py b/Products/CMFPlone/browser/admin.py\nindex e7728186d3..8478f0c692 100644\n--- a/Products/CMFPlone/browser/admin.py\n+++ b/Products/CMFPlone/browser/admin.py\n@@ -13,7 +13,8 @@\n from Products.CMFPlone.factory import _DEFAULT_PROFILE\n from Products.CMFPlone.factory import addPloneSite\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n-from Products.GenericSetup import BASE, EXTENSION\n+from Products.GenericSetup import BASE\n+from Products.GenericSetup import EXTENSION\n from Products.GenericSetup import profile_registry\n from Products.GenericSetup.upgrade import normalize_version\n from urllib import parse\n@@ -24,7 +25,8 @@\n from zope.component import queryMultiAdapter\n from zope.component import queryUtility\n from zope.i18n.interfaces import IUserPreferredLanguages\n-from zope.i18n.locales import locales, LoadLocaleError\n+from zope.i18n.locales import LoadLocaleError\n+from zope.i18n.locales import locales\n from zope.interface import alsoProvides\n from zope.interface import Interface\n from zope.publisher.browser import BrowserView\ndiff --git a/Products/CMFPlone/browser/atd.py b/Products/CMFPlone/browser/atd.py\nindex a4dc2d4201..161c430f33 100644\n--- a/Products/CMFPlone/browser/atd.py\n+++ b/Products/CMFPlone/browser/atd.py\n@@ -1,9 +1,9 @@\n-from Products.CMFCore.utils import getToolByName\n-from zope.component import getUtility\n-from plone.registry.interfaces import IRegistry\n from http import client as http_client\n from plone.base.interfaces import ITinyMCESchema\n from plone.base.interfaces.atd import IATDProxyView\n+from plone.registry.interfaces import IRegistry\n+from Products.CMFCore.utils import getToolByName\n+from zope.component import getUtility\n from zope.interface import implementer\n \n \ndiff --git a/Products/CMFPlone/browser/contact_info.py b/Products/CMFPlone/browser/contact_info.py\nindex 1c2dcd3fc5..5b113269a3 100644\n--- a/Products/CMFPlone/browser/contact_info.py\n+++ b/Products/CMFPlone/browser/contact_info.py\n@@ -1,19 +1,21 @@\n+from email.mime.text import MIMEText\n+from plone.autoform.form import AutoExtensibleForm\n+from plone.base.interfaces.controlpanel import IMailSchema\n+from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n from Products.CMFPlone.browser.interfaces import IContactForm\n-from plone.base.interfaces.controlpanel import IMailSchema\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.statusmessages.interfaces import IStatusMessage\n-from email.mime.text import MIMEText\n-from plone.autoform.form import AutoExtensibleForm\n-from plone.registry.interfaces import IRegistry\n from smtplib import SMTPException\n-from z3c.form import form, button\n+from z3c.form import button\n+from z3c.form import form\n from zope.component import getUtility\n from zope.component.hooks import getSite\n \n import logging\n \n+\n log = logging.getLogger(__name__)\n \n \ndiff --git a/Products/CMFPlone/browser/defaultpage.py b/Products/CMFPlone/browser/defaultpage.py\nindex b8523814e3..026b54e94b 100644\n--- a/Products/CMFPlone/browser/defaultpage.py\n+++ b/Products/CMFPlone/browser/defaultpage.py\n@@ -1,7 +1,7 @@\n from Acquisition import aq_inner\n-from plone.base.interfaces.defaultpage import IDefaultPage\n from plone.base.defaultpage import get_default_page\n from plone.base.defaultpage import is_default_page\n+from plone.base.interfaces.defaultpage import IDefaultPage\n from Products.Five.browser import BrowserView\n from zope.interface import implementer\n \ndiff --git a/Products/CMFPlone/browser/favicon.py b/Products/CMFPlone/browser/favicon.py\nindex a6812cfb84..d2583794d5 100644\n--- a/Products/CMFPlone/browser/favicon.py\n+++ b/Products/CMFPlone/browser/favicon.py\n@@ -1,9 +1,9 @@\n-from Products.CMFPlone.interfaces import ISiteSchema\n from plone.formwidget.namedfile.converter import b64decode_file\n from plone.memoize import ram\n from plone.namedfile.browser import DisplayFile\n from plone.namedfile.file import NamedImage\n from plone.registry.interfaces import IRegistry\n+from Products.CMFPlone.interfaces import ISiteSchema\n from zope.component import getUtility\n \n import os.path\ndiff --git a/Products/CMFPlone/browser/global_statusmessage.py b/Products/CMFPlone/browser/global_statusmessage.py\nindex 552bc9e4af..b0971d10f6 100644\n--- a/Products/CMFPlone/browser/global_statusmessage.py\n+++ b/Products/CMFPlone/browser/global_statusmessage.py\n@@ -1,9 +1,7 @@\n-from zope.interface import implementer\n-\n+from Products.CMFPlone.browser.interfaces import IGlobalStatusMessage\n from Products.Five import BrowserView\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n-\n-from Products.CMFPlone.browser.interfaces import IGlobalStatusMessage\n+from zope.interface import implementer\n \n \n @implementer(IGlobalStatusMessage)\ndiff --git a/Products/CMFPlone/browser/icons.py b/Products/CMFPlone/browser/icons.py\nindex 572fe3cf1c..6858edb649 100644\n--- a/Products/CMFPlone/browser/icons.py\n+++ b/Products/CMFPlone/browser/icons.py\n@@ -1,9 +1,8 @@\n-# -*- coding: utf-8 -*-\n from lxml import etree\n from OFS.Image import File\n from plone.registry.interfaces import IRegistry\n-from Products.Five.browser import BrowserView\n from Products.CMFCore.interfaces import ISiteRoot\n+from Products.Five.browser import BrowserView\n from zExceptions import NotFound\n from zope.component import adapter\n from zope.component import getUtility\n@@ -11,12 +10,12 @@\n from zope.interface import implementer\n from zope.interface import Interface\n from zope.location.interfaces import LocationError\n-from zope.traversing.interfaces import ITraversable\n from zope.publisher.interfaces import IPublishTraverse\n-from zExceptions import NotFound\n+from zope.traversing.interfaces import ITraversable\n \n import logging\n \n+\n logger = logging.getLogger(__name__)\n \n \ndiff --git a/Products/CMFPlone/browser/interfaces.py b/Products/CMFPlone/browser/interfaces.py\nindex 9a09561e91..732f11e05a 100644\n--- a/Products/CMFPlone/browser/interfaces.py\n+++ b/Products/CMFPlone/browser/interfaces.py\n@@ -1,13 +1,11 @@\n+from plone.schema import Email\n+from Products.CMFPlone import PloneMessageFactory as _\n from zope import schema\n from zope.interface import Attribute\n from zope.interface import Interface\n \n-from plone.schema import Email\n-\n import zope.deferredimport\n \n-from Products.CMFPlone import PloneMessageFactory as _\n-\n \n # This is used as a persistent marker interface, we need to provide an upgrade\n # step to update the class reference before removing it.\ndiff --git a/Products/CMFPlone/browser/login/login.py b/Products/CMFPlone/browser/login/login.py\nindex d655c226ea..5fdc4cef68 100644\n--- a/Products/CMFPlone/browser/login/login.py\n+++ b/Products/CMFPlone/browser/login/login.py\n@@ -1,14 +1,14 @@\n from DateTime import DateTime\n from plone.app.users.browser.passwordpanel import PasswordPanel\n-from plone.registry.interfaces import IRegistry\n-from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone import PloneMessageFactory as _\n from plone.base.interfaces import IForcePasswordChange\n from plone.base.interfaces import IInitialLogin\n from plone.base.interfaces import ILoginForm\n from plone.base.interfaces import ILoginFormSchema\n from plone.base.interfaces import IRedirectAfterLogin\n from plone.base.interfaces import ISecuritySchema\n+from plone.registry.interfaces import IRegistry\n+from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone import PloneMessageFactory as _\n from Products.Five.browser import BrowserView\n from Products.statusmessages.interfaces import IStatusMessage\n from urllib import parse\n@@ -251,7 +251,7 @@ def __call__(self):\n             url = f\'{portal.absolute_url():s}/login\'\n             came_from = self.request.get(\'came_from\', None)\n             if came_from:\n-                url += \'?came_from={:s}\'.format(parse.quote(came_from))\n+                url += f\'?came_from={parse.quote(came_from):s}\'\n         else:\n             url = f\'{portal.absolute_url():s}/insufficient-privileges\'\n \ndiff --git a/Products/CMFPlone/browser/login/login_help.py b/Products/CMFPlone/browser/login/login_help.py\nindex 7409a585e8..5ad934823c 100644\n--- a/Products/CMFPlone/browser/login/login_help.py\n+++ b/Products/CMFPlone/browser/login/login_help.py\n@@ -1,13 +1,13 @@\n from email import message_from_string\n from email.header import Header\n-from plone.registry.interfaces import IRegistry\n-from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone import PloneMessageFactory as _\n from plone.base.interfaces import ILoginHelpForm\n from plone.base.interfaces import ILoginHelpFormSchema\n from plone.base.interfaces import ISecuritySchema\n from plone.base.interfaces.controlpanel import IMailSchema\n from plone.base.utils import safe_text\n+from plone.registry.interfaces import IRegistry\n+from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone import PloneMessageFactory as _\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.statusmessages.interfaces import IStatusMessage\n from smtplib import SMTPException\n@@ -54,7 +54,7 @@ class RequestResetPassword(form.Form):\n     render = ViewPageTemplateFile(\'templates/subform_render.pt\')\n \n     def updateActions(self):\n-        super(RequestResetPassword, self).updateActions()\n+        super().updateActions()\n         self.actions[\'reset\'].addClass(\'btn-primary\')\n \n     def updateWidgets(self):\n@@ -107,7 +107,7 @@ class RequestUsername(form.Form):\n     render = ViewPageTemplateFile(\'templates/subform_render.pt\')\n \n     def updateActions(self):\n-        super(RequestUsername, self).updateActions()\n+        super().updateActions()\n         self.actions[\'get_username\'].addClass(\'btn-primary\')\n \n     @button.buttonAndHandler(\n@@ -188,7 +188,7 @@ def encoded_mail_sender(self):\n         mail_settings = registry.forInterface(IMailSchema, prefix="plone")\n         from_ = mail_settings.email_from_name\n         mail = mail_settings.email_from_address\n-        return \'"{}" <{}>\'.format(self.encode_mail_header(from_), mail)\n+        return f\'"{self.encode_mail_header(from_)}" <{mail}>\'\n \n \n @implementer(ILoginHelpForm)\ndiff --git a/Products/CMFPlone/browser/login/password_reset.py b/Products/CMFPlone/browser/login/password_reset.py\nindex f2369f35d6..e65eadaf24 100644\n--- a/Products/CMFPlone/browser/login/password_reset.py\n+++ b/Products/CMFPlone/browser/login/password_reset.py\n@@ -17,8 +17,7 @@\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.PlonePAS.events import UserInitialLoginInEvent\n from Products.PlonePAS.events import UserLoggedInEvent\n-from Products.PluggableAuthService.interfaces.plugins import \\\n-    ICredentialsUpdatePlugin\n+from Products.PluggableAuthService.interfaces.plugins import ICredentialsUpdatePlugin\n from Products.statusmessages.interfaces import IStatusMessage\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n@@ -48,7 +47,7 @@ def encoded_mail_sender(self):\n         mail_settings = registry.forInterface(IMailSchema, prefix="plone")\n         from_ = mail_settings.email_from_name\n         mail = mail_settings.email_from_address\n-        return \'"{}" <{}>\'.format(self.encode_mail_header(from_).encode(), mail)\n+        return f\'"{self.encode_mail_header(from_).encode()}" <{mail}>\'\n \n     def registered_notify_subject(self):\n         portal_name = self.portal_state().portal_title()\ndiff --git a/Products/CMFPlone/browser/navtree.py b/Products/CMFPlone/browser/navtree.py\nindex d066dc4e12..bba401a21b 100644\n--- a/Products/CMFPlone/browser/navtree.py\n+++ b/Products/CMFPlone/browser/navtree.py\n@@ -8,15 +8,17 @@\n from plone.app.layout.navigation.interfaces import INavtreeStrategy\n from plone.app.layout.navigation.navtree import NavtreeStrategyBase\n from plone.app.layout.navigation.root import getNavigationRoot\n+from plone.base.interfaces import INavigationSchema\n from plone.i18n.normalizer.interfaces import IIDNormalizer\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import utils\n-from plone.base.interfaces import INavigationSchema\n-from zope.component import getMultiAdapter, queryUtility\n+from zope.component import getMultiAdapter\n from zope.component import getUtility\n+from zope.component import queryUtility\n from zope.interface import implementer\n \n+\n # Strategy objects for the navtree creation code. You can subclass these\n # to expand the default navtree behaviour, and pass instances of your\n # subclasses to buildFolderTree().\ndiff --git a/Products/CMFPlone/browser/robots.py b/Products/CMFPlone/browser/robots.py\nindex eb4e2535bb..a80557d91d 100644\n--- a/Products/CMFPlone/browser/robots.py\n+++ b/Products/CMFPlone/browser/robots.py\n@@ -1,8 +1,8 @@\n from plone.base.interfaces.controlpanel import ISiteSchema\n-from Products.Five.browser import BrowserView\n from plone.registry.interfaces import IRegistry\n-from zope.component import getUtility\n+from Products.Five.browser import BrowserView\n from zope.component import getMultiAdapter\n+from zope.component import getUtility\n \n \n class Robots(BrowserView):\ndiff --git a/Products/CMFPlone/browser/search.py b/Products/CMFPlone/browser/search.py\nindex 08709607c8..4d3e25cd2d 100644\n--- a/Products/CMFPlone/browser/search.py\n+++ b/Products/CMFPlone/browser/search.py\n@@ -18,6 +18,7 @@\n import json\n import re\n \n+\n _ = MessageFactory(\'plone\')\n \n # We should accept both a simple space, unicode u\'\\u0020 but also a\ndiff --git a/Products/CMFPlone/browser/sendto.py b/Products/CMFPlone/browser/sendto.py\nindex 864dc1f27a..95d63034a4 100644\n--- a/Products/CMFPlone/browser/sendto.py\n+++ b/Products/CMFPlone/browser/sendto.py\n@@ -15,6 +15,7 @@\n \n import logging\n \n+\n logger = logging.getLogger("Plone")\n \n \ndiff --git a/Products/CMFPlone/browser/sitemap.py b/Products/CMFPlone/browser/sitemap.py\nindex 08b7071994..b835a89ea2 100644\n--- a/Products/CMFPlone/browser/sitemap.py\n+++ b/Products/CMFPlone/browser/sitemap.py\n@@ -1,11 +1,9 @@\n from Acquisition import aq_inner\n-from zope.component import getMultiAdapter\n-from zope.interface import implementer\n-\n+from Products.CMFPlone.browser.interfaces import ISitemapView\n from Products.Five import BrowserView\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n-\n-from Products.CMFPlone.browser.interfaces import ISitemapView\n+from zope.component import getMultiAdapter\n+from zope.interface import implementer\n \n \n @implementer(ISitemapView)\ndiff --git a/Products/CMFPlone/browser/static/plone-admin-ui.css b/Products/CMFPlone/browser/static/plone-admin-ui.css\nindex 822b02697a..93745280cc 100644\n--- a/Products/CMFPlone/browser/static/plone-admin-ui.css\n+++ b/Products/CMFPlone/browser/static/plone-admin-ui.css\n@@ -5,3 +5,8 @@ body {\n   background: rgba(255,255,255,.95);\n   max-width: 800px;\n }\n+#go-to-site-link,\n+#go-to-site-link:visited,\n+#go-to-site-link:active {\n+  color: #fff;\n+}\ndiff --git a/Products/CMFPlone/browser/syndication/adapters.py b/Products/CMFPlone/browser/syndication/adapters.py\nindex 8963610609..aa7c48a47e 100644\n--- a/Products/CMFPlone/browser/syndication/adapters.py\n+++ b/Products/CMFPlone/browser/syndication/adapters.py\n@@ -1,32 +1,26 @@\n-from zope.component.hooks import getSite\n-from zope.component import adapts\n-from zope.interface import implementer\n-from zope.interface import Interface\n-from zope.component import getMultiAdapter\n-from zope.component import queryMultiAdapter\n-from zope.component import getUtility\n-\n from DateTime import DateTime\n from OFS.interfaces import IItem\n-\n-from Products.CMFCore.utils import getToolByName\n-from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n-\n+from plone.app.contenttypes.behaviors.leadimage import ILeadImage\n from plone.base.interfaces.syndication import IFeed\n from plone.base.interfaces.syndication import IFeedItem\n-from plone.base.interfaces.syndication import ISearchFeed\n from plone.base.interfaces.syndication import IFeedSettings\n-from Products.CMFPlone.utils import getSiteLogo\n-\n+from plone.base.interfaces.syndication import ISearchFeed\n+from plone.dexterity.interfaces import IDexterityContent\n+from plone.namedfile.interfaces import INamedField\n from plone.registry.interfaces import IRegistry\n+from plone.rfc822.interfaces import IPrimaryFieldInfo\n from plone.uuid.interfaces import IUUID\n+from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone.utils import getSiteLogo\n+from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from zope.cachedescriptors.property import Lazy as lazy_property\n-\n-from plone.dexterity.interfaces import IDexterityContent\n-from plone.rfc822.interfaces import IPrimaryFieldInfo\n-from plone.namedfile.interfaces import INamedField\n-\n-from plone.app.contenttypes.behaviors.leadimage import ILeadImage\n+from zope.component import adapts\n+from zope.component import getMultiAdapter\n+from zope.component import getUtility\n+from zope.component import queryMultiAdapter\n+from zope.component.hooks import getSite\n+from zope.interface import implementer\n+from zope.interface import Interface\n \n \n class BaseFeedData:\ndiff --git a/Products/CMFPlone/browser/syndication/settings.py b/Products/CMFPlone/browser/syndication/settings.py\nindex 9158f83858..da4daca293 100644\n--- a/Products/CMFPlone/browser/syndication/settings.py\n+++ b/Products/CMFPlone/browser/syndication/settings.py\n@@ -1,12 +1,13 @@\n-from zope.component import adapts\n-from zope.interface import implementer\n+from persistent.dict import PersistentDict\n from plone.base.interfaces.syndication import IFeedSettings\n+from plone.base.interfaces.syndication import ISiteSyndicationSettings\n from plone.base.interfaces.syndication import ISyndicatable\n+from plone.registry.interfaces import IRegistry\n from zope.annotation.interfaces import IAnnotations\n-from persistent.dict import PersistentDict\n-from plone.base.interfaces.syndication import ISiteSyndicationSettings\n+from zope.component import adapts\n from zope.component import getUtility\n-from plone.registry.interfaces import IRegistry\n+from zope.interface import implementer\n+\n \n FEED_SETTINGS_KEY = \'syndication_settings\'\n \ndiff --git a/Products/CMFPlone/browser/syndication/tool.py b/Products/CMFPlone/browser/syndication/tool.py\nindex ba622337e6..94a93823e0 100644\n--- a/Products/CMFPlone/browser/syndication/tool.py\n+++ b/Products/CMFPlone/browser/syndication/tool.py\n@@ -1,21 +1,17 @@\n-from Acquisition import aq_parent\n from AccessControl import Unauthorized\n-\n-from zope.component import getAdapter\n-from zope.interface import implementer\n-from zope.component import getUtility\n-\n-from Products.CMFCore.interfaces import ISyndicationTool\n-from Products.CMFCore.utils import registerToolInterface\n-from Products.CMFCore.utils import _checkPermission\n-from Products.CMFCore.permissions import ModifyPortalContent\n-from Products.CMFCore.permissions import ManagePortal\n-\n+from Acquisition import aq_parent\n from plone.base.interfaces.syndication import IFeed\n-from plone.base.interfaces.syndication import ISiteSyndicationSettings\n from plone.base.interfaces.syndication import IFeedSettings\n-\n+from plone.base.interfaces.syndication import ISiteSyndicationSettings\n from plone.registry.interfaces import IRegistry\n+from Products.CMFCore.interfaces import ISyndicationTool\n+from Products.CMFCore.permissions import ManagePortal\n+from Products.CMFCore.permissions import ModifyPortalContent\n+from Products.CMFCore.utils import _checkPermission\n+from Products.CMFCore.utils import registerToolInterface\n+from zope.component import getAdapter\n+from zope.component import getUtility\n+from zope.interface import implementer\n \n \n @implementer(ISyndicationTool)\ndiff --git a/Products/CMFPlone/browser/syndication/utils.py b/Products/CMFPlone/browser/syndication/utils.py\nindex 9e3171ba61..2fac9a8d9b 100644\n--- a/Products/CMFPlone/browser/syndication/utils.py\n+++ b/Products/CMFPlone/browser/syndication/utils.py\n@@ -1,17 +1,14 @@\n-from zExceptions import NotFound\n-from Products.Five import BrowserView\n-\n-from zope.schema.interfaces import IVocabularyFactory\n-from zope.interface import implementer\n-from zope.component import getUtility\n-\n-from plone.base.interfaces.syndication import ISyndicationUtil\n from plone.base.interfaces.syndication import IFeedSettings\n from plone.base.interfaces.syndication import ISiteSyndicationSettings\n from plone.base.interfaces.syndication import ISyndicatable\n-\n-from plone.registry.interfaces import IRegistry\n+from plone.base.interfaces.syndication import ISyndicationUtil\n from plone.memoize.view import memoize\n+from plone.registry.interfaces import IRegistry\n+from Products.Five import BrowserView\n+from zExceptions import NotFound\n+from zope.component import getUtility\n+from zope.interface import implementer\n+from zope.schema.interfaces import IVocabularyFactory\n \n \n @implementer(ISyndicationUtil)\ndiff --git a/Products/CMFPlone/browser/syndication/views.py b/Products/CMFPlone/browser/syndication/views.py\nindex cda7137a35..8e41e7233e 100644\n--- a/Products/CMFPlone/browser/syndication/views.py\n+++ b/Products/CMFPlone/browser/syndication/views.py\n@@ -1,9 +1,9 @@\n from DateTime import DateTime\n-from plone.z3cform.layout import wrap_form\n-from Products.CMFPlone import PloneMessageFactory as _\n from plone.base.interfaces.syndication import IFeed\n from plone.base.interfaces.syndication import IFeedSettings\n from plone.base.interfaces.syndication import ISearchFeed\n+from plone.z3cform.layout import wrap_form\n+from Products.CMFPlone import PloneMessageFactory as _\n from Products.Five import BrowserView\n from uuid import NAMESPACE_OID\n from uuid import uuid3\ndiff --git a/Products/CMFPlone/browser/templates/plone-overview.pt b/Products/CMFPlone/browser/templates/plone-overview.pt\nindex 9081f153d7..2ee17266fb 100644\n--- a/Products/CMFPlone/browser/templates/plone-overview.pt\n+++ b/Products/CMFPlone/browser/templates/plone-overview.pt\n@@ -46,7 +46,7 @@\n                 <div tal:define="outdated python: view.outdated(site);"\n                      class="mb-3 ${python: \'p-3 alert-warning\' if outdated else \'\'}">\n                     <p tal:condition="outdated" i18n:translate="">This site configuration is outdated and needs to be upgraded:</p>\n-                    <a href="#" class="btn btn-primary ${python:\'btn-lg\' if not many and not outdated  else \'\'}"\n+                    <a href="#" id="go-to-site-link" class="btn btn-primary ${python:\'btn-lg\' if not many and not outdated  else \'\'}"\n                         tal:attributes="href site/absolute_url"\n                         title="Go to your instance"\n                         i18n:attributes="title;">\ndiff --git a/Products/CMFPlone/browser/templates/plone-upgrade.pt b/Products/CMFPlone/browser/templates/plone-upgrade.pt\nindex 3d899aa99c..de42615fe6 100644\n--- a/Products/CMFPlone/browser/templates/plone-upgrade.pt\n+++ b/Products/CMFPlone/browser/templates/plone-upgrade.pt\n@@ -33,7 +33,8 @@\n             <h1>\n               <span i18n:translate="">Upgrade this site</span>\n             </h1>\n-            <h2>${context/Title} <small>(${context/getId})</small></h2>\n+            <h2>${context/Title}</h2>\n+            <p><span i18n:translate="">at path</span> <a href="${context/absolute_url}">${python:\'/\'.join(context.getPhysicalPath())}</a></p>\n             <p class="lead" i18n:translate="">\n                 More information about the upgrade procedure can be found in the documentation section of plone.org in the\n                 <a href="http://docs.plone.org/manage/upgrading"\ndiff --git a/Products/CMFPlone/browser/templates/test_rendering_cheatsheet.pt b/Products/CMFPlone/browser/templates/test_rendering_cheatsheet.pt\nindex d22c353640..d6f964111f 100644\n--- a/Products/CMFPlone/browser/templates/test_rendering_cheatsheet.pt\n+++ b/Products/CMFPlone/browser/templates/test_rendering_cheatsheet.pt\n@@ -15,7 +15,7 @@\n           background-color: #fff;\n         }\n \n-    </style>    \n+    </style>\n \n     <ul class="nav nav-tabs mb-3">\n       <li class="nav-item">\n@@ -36,12 +36,12 @@\n     </p>\n \n     <!--\n-      \n+\n       Todos to fix markup\n \n       Change <div class="bd-cheatsheet container-fluid bg-body"> to <div class="bd-cheatsheet bg-body">\n       Search and replace /docs/5.1 by https://getbootstrap.com/docs/5.1\n-    \n+\n     -->\n \n     <!-- Bootstrap Cheatsheet -->\n@@ -230,7 +230,7 @@\n                 <td>Cell</td>\n                 <td>Cell</td>\n               </tr>\n-              \n+\n               <tr class="table-primary">\n                 <th scope="row">Primary</th>\n                 <td>Cell</td>\n@@ -669,7 +669,7 @@\n \n           <div>\n             <div class="bd-example">\n-            \n+\n             <div class="alert alert-primary alert-dismissible fade show" role="alert">\n               A simple primary alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.\n               <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n@@ -733,7 +733,7 @@\n             </div>\n \n             <div class="bd-example">\n-            \n+\n             <span class="badge rounded-pill bg-primary">Primary</span>\n             <span class="badge rounded-pill bg-secondary">Secondary</span>\n             <span class="badge rounded-pill bg-success">Success</span>\n@@ -771,7 +771,7 @@\n \n           <div>\n             <div class="bd-example">\n-            \n+\n             <button type="button" class="btn btn-primary">Primary</button>\n             <button type="button" class="btn btn-secondary">Secondary</button>\n             <button type="button" class="btn btn-success">Success</button>\n@@ -785,7 +785,7 @@\n             </div>\n \n             <div class="bd-example">\n-            \n+\n             <button type="button" class="btn btn-outline-primary">Primary</button>\n             <button type="button" class="btn btn-outline-secondary">Secondary</button>\n             <button type="button" class="btn btn-outline-success">Success</button>\n@@ -1167,7 +1167,7 @@\n             <div class="bd-example">\n             <div class="list-group">\n               <a href="#" class="list-group-item list-group-item-action">A simple default list group item</a>\n-              \n+\n               <a href="#" class="list-group-item list-group-item-action list-group-item-primary">A simple primary list group item</a>\n               <a href="#" class="list-group-item list-group-item-action list-group-item-secondary">A simple secondary list group item</a>\n               <a href="#" class="list-group-item list-group-item-action list-group-item-success">A simple success list group item</a>\n@@ -1518,7 +1518,7 @@\n \n           <div>\n             <div class="bd-example">\n-            \n+\n             <div class="spinner-border text-primary" role="status">\n               <span class="visually-hidden">Loading...</span>\n             </div>\n@@ -1546,7 +1546,7 @@\n             </div>\n \n             <div class="bd-example">\n-            \n+\n             <div class="spinner-grow text-primary" role="status">\n               <span class="visually-hidden">Loading...</span>\n             </div>\n@@ -1692,4 +1692,4 @@\n \n </body>\n \n-</html>\n\\ No newline at end of file\n+</html>\ndiff --git a/Products/CMFPlone/browser/test_rendering.py b/Products/CMFPlone/browser/test_rendering.py\nindex b3c567068d..b4c42e9cc0 100644\n--- a/Products/CMFPlone/browser/test_rendering.py\n+++ b/Products/CMFPlone/browser/test_rendering.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n from Products.Five import BrowserView\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n \ndiff --git a/Products/CMFPlone/controlpanel/bbb/editing.py b/Products/CMFPlone/controlpanel/bbb/editing.py\nindex 41649f4eff..f5614a8cd9 100644\n--- a/Products/CMFPlone/controlpanel/bbb/editing.py\n+++ b/Products/CMFPlone/controlpanel/bbb/editing.py\n@@ -1,10 +1,9 @@\n+from plone.base.interfaces import IEditingSchema\n+from plone.base.interfaces import IPloneSiteRoot\n+from plone.registry.interfaces import IRegistry\n from zope.component import adapts\n-from zope.interface import implementer\n from zope.component import getUtility\n-from plone.registry.interfaces import IRegistry\n-from plone.base.interfaces import IPloneSiteRoot\n-\n-from plone.base.interfaces import IEditingSchema\n+from zope.interface import implementer\n \n \n @implementer(IEditingSchema)\ndiff --git a/Products/CMFPlone/controlpanel/bbb/language.py b/Products/CMFPlone/controlpanel/bbb/language.py\nindex 1094d8b49c..8085b28cfb 100644\n--- a/Products/CMFPlone/controlpanel/bbb/language.py\n+++ b/Products/CMFPlone/controlpanel/bbb/language.py\n@@ -1,10 +1,9 @@\n-from zope.component import adapts\n-from zope.interface import implementer\n-from zope.component import getUtility\n-from plone.i18n.interfaces import ILanguageSchema\n from plone.base.interfaces import IPloneSiteRoot\n-\n+from plone.i18n.interfaces import ILanguageSchema\n from plone.registry.interfaces import IRegistry\n+from zope.component import adapts\n+from zope.component import getUtility\n+from zope.interface import implementer\n \n \n @implementer(ILanguageSchema)\ndiff --git a/Products/CMFPlone/controlpanel/bbb/mail.py b/Products/CMFPlone/controlpanel/bbb/mail.py\nindex 5ec1135f69..cdddaa2e8d 100644\n--- a/Products/CMFPlone/controlpanel/bbb/mail.py\n+++ b/Products/CMFPlone/controlpanel/bbb/mail.py\n@@ -1,11 +1,11 @@\n from plone.base.interfaces import IPloneSiteRoot\n from plone.base.interfaces.controlpanel import IMailSchema\n-from Products.CMFPlone.utils import safe_hasattr\n from plone.registry.interfaces import IRegistry\n+from Products.CMFPlone.utils import safe_hasattr\n from zope.component import adapts\n from zope.component import getUtility\n-from zope.interface import implementer\n from zope.component.hooks import getSite\n+from zope.interface import implementer\n \n \n @implementer(IMailSchema)\ndiff --git a/Products/CMFPlone/controlpanel/bbb/navigation.py b/Products/CMFPlone/controlpanel/bbb/navigation.py\nindex 85bf7108b5..05705ccb77 100644\n--- a/Products/CMFPlone/controlpanel/bbb/navigation.py\n+++ b/Products/CMFPlone/controlpanel/bbb/navigation.py\n@@ -1,6 +1,6 @@\n-from plone.registry.interfaces import IRegistry\n from plone.base.interfaces import INavigationSchema\n from plone.base.interfaces import IPloneSiteRoot\n+from plone.registry.interfaces import IRegistry\n from zope.component import adapter\n from zope.component import getUtility\n from zope.interface import implementer\ndiff --git a/Products/CMFPlone/controlpanel/bbb/search.py b/Products/CMFPlone/controlpanel/bbb/search.py\nindex 6d0ec1f510..784a30d448 100644\n--- a/Products/CMFPlone/controlpanel/bbb/search.py\n+++ b/Products/CMFPlone/controlpanel/bbb/search.py\n@@ -3,8 +3,8 @@\n from plone.registry.interfaces import IRegistry\n from zope.component import adapts\n from zope.component import getUtility\n-from zope.interface import implementer\n from zope.component.hooks import getSite\n+from zope.interface import implementer\n \n \n @implementer(ISearchSchema)\ndiff --git a/Products/CMFPlone/controlpanel/bbb/security.py b/Products/CMFPlone/controlpanel/bbb/security.py\nindex 5870b25910..b1b48f16ae 100644\n--- a/Products/CMFPlone/controlpanel/bbb/security.py\n+++ b/Products/CMFPlone/controlpanel/bbb/security.py\n@@ -1,11 +1,11 @@\n-from Products.CMFCore.utils import getToolByName\n-from plone.base.interfaces.siteroot import IPloneSiteRoot\n from plone.base.interfaces import ISecuritySchema\n+from plone.base.interfaces.siteroot import IPloneSiteRoot\n from plone.registry.interfaces import IRegistry\n+from Products.CMFCore.utils import getToolByName\n from zope.component import adapts\n from zope.component import getUtility\n-from zope.interface import implementer\n from zope.component.hooks import getSite\n+from zope.interface import implementer\n \n \n @implementer(ISecuritySchema)\ndiff --git a/Products/CMFPlone/controlpanel/bbb/site.py b/Products/CMFPlone/controlpanel/bbb/site.py\nindex 9098791b27..73402b154d 100644\n--- a/Products/CMFPlone/controlpanel/bbb/site.py\n+++ b/Products/CMFPlone/controlpanel/bbb/site.py\n@@ -1,10 +1,10 @@\n-from zope.schema.fieldproperty import FieldProperty\n from plone.base.interfaces import IPloneSiteRoot\n from plone.base.interfaces import ISiteSchema\n from plone.registry.interfaces import IRegistry\n from zope.component import adapts\n from zope.component import getUtility\n from zope.interface import implementer\n+from zope.schema.fieldproperty import FieldProperty\n \n \n @implementer(ISiteSchema)\ndiff --git a/Products/CMFPlone/controlpanel/bbb/usergroups.py b/Products/CMFPlone/controlpanel/bbb/usergroups.py\nindex ce88769f52..0c819c7136 100644\n--- a/Products/CMFPlone/controlpanel/bbb/usergroups.py\n+++ b/Products/CMFPlone/controlpanel/bbb/usergroups.py\n@@ -1,10 +1,10 @@\n+from plone.base.interfaces import IPloneSiteRoot\n+from plone.base.interfaces import IUserGroupsSettingsSchema\n+from plone.registry.interfaces import IRegistry\n from zope.component import adapts\n from zope.component import getUtility\n-from zope.interface import implementer\n from zope.component.hooks import getSite\n-from plone.registry.interfaces import IRegistry\n-from plone.base.interfaces import IUserGroupsSettingsSchema\n-from plone.base.interfaces import IPloneSiteRoot\n+from zope.interface import implementer\n \n \n @implementer(IUserGroupsSettingsSchema)\ndiff --git a/Products/CMFPlone/controlpanel/browser/actions.py b/Products/CMFPlone/controlpanel/browser/actions.py\nindex 2037fd95cb..4f66ab1e0a 100644\n--- a/Products/CMFPlone/controlpanel/browser/actions.py\n+++ b/Products/CMFPlone/controlpanel/browser/actions.py\n@@ -1,9 +1,11 @@\n from plone.autoform.form import AutoExtensibleForm\n+from plone.base.interfaces import IActionSchema\n+from plone.base.interfaces import INewActionSchema\n from Products.CMFCore.ActionInformation import Action\n-from Products.CMFCore.interfaces import IAction, IActionCategory\n+from Products.CMFCore.interfaces import IAction\n+from Products.CMFCore.interfaces import IActionCategory\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n-from plone.base.interfaces import IActionSchema, INewActionSchema\n from Products.Five import BrowserView\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from z3c.form import form\ndiff --git a/Products/CMFPlone/controlpanel/browser/dateandtime.py b/Products/CMFPlone/controlpanel/browser/dateandtime.py\nindex 9eec7408bb..a5d1ab3a2f 100644\n--- a/Products/CMFPlone/controlpanel/browser/dateandtime.py\n+++ b/Products/CMFPlone/controlpanel/browser/dateandtime.py\n@@ -1,7 +1,7 @@\n-from Products.CMFPlone import PloneMessageFactory as _\n-from plone.base.interfaces import IDateAndTimeSchema\n from plone.app.registry.browser.controlpanel import ControlPanelFormWrapper\n from plone.app.registry.browser.controlpanel import RegistryEditForm\n+from plone.base.interfaces import IDateAndTimeSchema\n+from Products.CMFPlone import PloneMessageFactory as _\n \n \n class DateAndTimeControlPanelForm(RegistryEditForm):\ndiff --git a/Products/CMFPlone/controlpanel/browser/editing.py b/Products/CMFPlone/controlpanel/browser/editing.py\nindex fef3947988..fe565eb88f 100644\n--- a/Products/CMFPlone/controlpanel/browser/editing.py\n+++ b/Products/CMFPlone/controlpanel/browser/editing.py\n@@ -1,6 +1,6 @@\n-from Products.CMFPlone import PloneMessageFactory as _\n-from plone.base.interfaces import IEditingSchema\n from plone.app.registry.browser import controlpanel\n+from plone.base.interfaces import IEditingSchema\n+from Products.CMFPlone import PloneMessageFactory as _\n from z3c.form import interfaces\n \n \ndiff --git a/Products/CMFPlone/controlpanel/browser/error_log_form.py b/Products/CMFPlone/controlpanel/browser/error_log_form.py\nindex c2d2d2f495..2500840461 100644\n--- a/Products/CMFPlone/controlpanel/browser/error_log_form.py\n+++ b/Products/CMFPlone/controlpanel/browser/error_log_form.py\n@@ -1,9 +1,10 @@\n-import plone.api as api\n from DateTime import DateTime\n from Products.CMFPlone import PloneMessageFactory as _\n from Products.CMFPlone.utils import safe_nativestring\n from Products.Five import BrowserView\n \n+import plone.api as api\n+\n \n class ErrorLogUpdate(BrowserView):\n \ndiff --git a/Products/CMFPlone/controlpanel/browser/filter.py b/Products/CMFPlone/controlpanel/browser/filter.py\nindex ff021fe988..9e9955eb5b 100644\n--- a/Products/CMFPlone/controlpanel/browser/filter.py\n+++ b/Products/CMFPlone/controlpanel/browser/filter.py\n@@ -1,7 +1,7 @@\n from plone.app.registry.browser import controlpanel\n+from plone.base.interfaces import IFilterSchema\n from plone.z3cform import layout\n from Products.CMFPlone import PloneMessageFactory as _  # NOQA\n-from plone.base.interfaces import IFilterSchema\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.statusmessages.interfaces import IStatusMessage\n from z3c.form import button\ndiff --git a/Products/CMFPlone/controlpanel/browser/imaging.py b/Products/CMFPlone/controlpanel/browser/imaging.py\nindex 369c78a410..f1ac6b1461 100644\n--- a/Products/CMFPlone/controlpanel/browser/imaging.py\n+++ b/Products/CMFPlone/controlpanel/browser/imaging.py\n@@ -1,7 +1,8 @@\n-from Products.CMFPlone import PloneMessageFactory as _\n-from plone.base.interfaces.controlpanel import IImagingSchema\n from logging import getLogger\n from plone.app.registry.browser import controlpanel\n+from plone.base.interfaces.controlpanel import IImagingSchema\n+from Products.CMFPlone import PloneMessageFactory as _\n+\n \n log = getLogger(\'Plone\')\n \ndiff --git a/Products/CMFPlone/controlpanel/browser/language.py b/Products/CMFPlone/controlpanel/browser/language.py\nindex 4c8714ae9c..9b4085c63d 100644\n--- a/Products/CMFPlone/controlpanel/browser/language.py\n+++ b/Products/CMFPlone/controlpanel/browser/language.py\n@@ -1,7 +1,6 @@\n-from Products.CMFPlone import PloneMessageFactory as _\n from plone.app.registry.browser import controlpanel\n-\n from plone.i18n.interfaces import ILanguageSchema\n+from Products.CMFPlone import PloneMessageFactory as _\n from Products.statusmessages.interfaces import IStatusMessage\n from z3c.form import button\n \ndiff --git a/Products/CMFPlone/controlpanel/browser/mail.py b/Products/CMFPlone/controlpanel/browser/mail.py\nindex 6f09498c3e..44714bd389 100644\n--- a/Products/CMFPlone/controlpanel/browser/mail.py\n+++ b/Products/CMFPlone/controlpanel/browser/mail.py\n@@ -1,11 +1,11 @@\n+from logging import getLogger\n+from plone.app.registry.browser import controlpanel\n+from plone.base.interfaces.controlpanel import IMailSchema\n+from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n-from plone.base.interfaces.controlpanel import IMailSchema\n from Products.MailHost.MailHost import MailHostError\n from Products.statusmessages.interfaces import IStatusMessage\n-from logging import getLogger\n-from plone.app.registry.browser import controlpanel\n-from plone.registry.interfaces import IRegistry\n from z3c.form import button\n from zope.component import getUtility\n \n@@ -13,6 +13,7 @@\n import socket\n import sys\n \n+\n log = getLogger(\'Plone\')\n \n \ndiff --git a/Products/CMFPlone/controlpanel/browser/maintenance.py b/Products/CMFPlone/controlpanel/browser/maintenance.py\nindex 58d1da57fb..6e0d91c356 100644\n--- a/Products/CMFPlone/controlpanel/browser/maintenance.py\n+++ b/Products/CMFPlone/controlpanel/browser/maintenance.py\n@@ -3,11 +3,11 @@\n from Acquisition import aq_inner\n from App.config import getConfiguration\n from plone.autoform.form import AutoExtensibleForm\n+from plone.base.interfaces import IMaintenanceSchema\n from plone.memoize.view import memoize\n from plone.protect import CheckAuthenticator\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n-from plone.base.interfaces import IMaintenanceSchema\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from z3c.form import button\n from z3c.form import form\n@@ -17,6 +17,7 @@\n import os\n import time\n \n+\n LIFETIME = True\n try:\n     from Lifetime import shutdown\ndiff --git a/Products/CMFPlone/controlpanel/browser/markup.py b/Products/CMFPlone/controlpanel/browser/markup.py\nindex dc97a36c8d..6c3db1588c 100644\n--- a/Products/CMFPlone/controlpanel/browser/markup.py\n+++ b/Products/CMFPlone/controlpanel/browser/markup.py\n@@ -1,6 +1,6 @@\n-from Products.CMFPlone import PloneMessageFactory as _\n-from plone.base.interfaces import IMarkupSchema\n from plone.app.registry.browser import controlpanel\n+from plone.base.interfaces import IMarkupSchema\n+from Products.CMFPlone import PloneMessageFactory as _\n from z3c.form.browser.checkbox import CheckBoxFieldWidget\n \n \ndiff --git a/Products/CMFPlone/controlpanel/browser/navigation.py b/Products/CMFPlone/controlpanel/browser/navigation.py\nindex 8149211b00..e6a3d8b117 100644\n--- a/Products/CMFPlone/controlpanel/browser/navigation.py\n+++ b/Products/CMFPlone/controlpanel/browser/navigation.py\n@@ -1,6 +1,6 @@\n-from Products.CMFPlone import PloneMessageFactory as _\n-from plone.base.interfaces import INavigationSchema\n from plone.app.registry.browser import controlpanel\n+from plone.base.interfaces import INavigationSchema\n+from Products.CMFPlone import PloneMessageFactory as _\n from z3c.form.browser.checkbox import CheckBoxFieldWidget\n \n \ndiff --git a/Products/CMFPlone/controlpanel/browser/overview.py b/Products/CMFPlone/controlpanel/browser/overview.py\nindex f0e275ce5b..ab5be04ade 100644\n--- a/Products/CMFPlone/controlpanel/browser/overview.py\n+++ b/Products/CMFPlone/controlpanel/browser/overview.py\n@@ -1,19 +1,20 @@\n from AccessControl import getSecurityManager\n from Acquisition import aq_inner\n from App.config import getConfiguration\n+from plone.app.registry.browser import controlpanel\n from plone.base.interfaces.controlpanel import IMailSchema\n+from plone.memoize.instance import memoize\n+from plone.registry.interfaces import IRegistry\n from Products.CMFCore.permissions import ManagePortal\n from Products.CMFCore.utils import getToolByName\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n-from plone.app.registry.browser import controlpanel\n-from plone.memoize.instance import memoize\n-from plone.registry.interfaces import IRegistry\n from zope.component import getUtility\n from ZPublisher.HTTPRequest import WSGIRequest\n \n import pkg_resources\n import warnings\n \n+\n try:\n     import plone.app.event\n \ndiff --git a/Products/CMFPlone/controlpanel/browser/quickinstaller.py b/Products/CMFPlone/controlpanel/browser/quickinstaller.py\nindex 3a8b574afb..9d4533a3d8 100644\n--- a/Products/CMFPlone/controlpanel/browser/quickinstaller.py\n+++ b/Products/CMFPlone/controlpanel/browser/quickinstaller.py\n@@ -1,13 +1,14 @@\n+from plone.base.interfaces import INonInstallable\n+from plone.memoize import view\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n-from plone.base.interfaces import INonInstallable\n from Products.Five.browser import BrowserView\n from Products.GenericSetup import EXTENSION\n from Products.GenericSetup.tool import UNKNOWN\n from Products.statusmessages.interfaces import IStatusMessage\n-from plone.memoize import view\n from zope.component import getAllUtilitiesRegisteredFor\n from zope.i18n import translate\n+\n import logging\n import pkg_resources\n import transaction\ndiff --git a/Products/CMFPlone/controlpanel/browser/redirects.py b/Products/CMFPlone/controlpanel/browser/redirects.py\nindex e1488abf06..7216c4520c 100644\n--- a/Products/CMFPlone/controlpanel/browser/redirects.py\n+++ b/Products/CMFPlone/controlpanel/browser/redirects.py\n@@ -20,6 +20,7 @@\n import logging\n import tempfile\n \n+\n try:\n     # use this to stream csv data if we can\n     from ZPublisher.Iterators import filestream_iterator\ndiff --git a/Products/CMFPlone/controlpanel/browser/relations.py b/Products/CMFPlone/controlpanel/browser/relations.py\nindex 97a3ce2038..843623f4aa 100644\n--- a/Products/CMFPlone/controlpanel/browser/relations.py\n+++ b/Products/CMFPlone/controlpanel/browser/relations.py\n@@ -15,6 +15,7 @@\n \n import logging\n \n+\n logger = logging.getLogger(__name__)\n \n \ndiff --git a/Products/CMFPlone/controlpanel/browser/search.py b/Products/CMFPlone/controlpanel/browser/search.py\nindex de2fc54a14..e447d466dd 100644\n--- a/Products/CMFPlone/controlpanel/browser/search.py\n+++ b/Products/CMFPlone/controlpanel/browser/search.py\n@@ -1,7 +1,7 @@\n-from Products.CMFPlone import PloneMessageFactory as _\n+from plone.app.registry.browser import controlpanel\n from plone.base.interfaces import ISearchSchema\n+from Products.CMFPlone import PloneMessageFactory as _\n from Products.CMFPlone.controlpanel.widgets import ReverseCheckBoxFieldWidget\n-from plone.app.registry.browser import controlpanel\n from zope.component import queryUtility\n from zope.schema.interfaces import IVocabularyFactory\n \ndiff --git a/Products/CMFPlone/controlpanel/browser/security.py b/Products/CMFPlone/controlpanel/browser/security.py\nindex ae52e9ac63..3b45e30195 100644\n--- a/Products/CMFPlone/controlpanel/browser/security.py\n+++ b/Products/CMFPlone/controlpanel/browser/security.py\n@@ -1,15 +1,16 @@\n from Acquisition import aq_inner\n+from collections import defaultdict\n+from plone.app.registry.browser import controlpanel\n+from plone.base.interfaces import ISecuritySchema\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.controlpanel.utils import migrate_to_email_login\n from Products.CMFPlone.controlpanel.utils import migrate_from_email_login\n-from plone.base.interfaces import ISecuritySchema\n+from Products.CMFPlone.controlpanel.utils import migrate_to_email_login\n from Products.Five.browser import BrowserView\n-from collections import defaultdict\n-from plone.app.registry.browser import controlpanel\n \n import logging\n \n+\n logger = logging.getLogger(\'Products.CMFPlone\')\n \n \ndiff --git a/Products/CMFPlone/controlpanel/browser/site.py b/Products/CMFPlone/controlpanel/browser/site.py\nindex 2bd9e99418..f9412964f0 100644\n--- a/Products/CMFPlone/controlpanel/browser/site.py\n+++ b/Products/CMFPlone/controlpanel/browser/site.py\n@@ -1,7 +1,7 @@\n-from Products.CMFPlone import PloneMessageFactory as _\n-from plone.base.interfaces import ISiteSchema\n from plone.app.registry.browser import controlpanel\n+from plone.base.interfaces import ISiteSchema\n from plone.formwidget.namedfile.widget import NamedImageFieldWidget\n+from Products.CMFPlone import PloneMessageFactory as _\n from z3c.form import interfaces\n \n \ndiff --git a/Products/CMFPlone/controlpanel/browser/socialmedia.py b/Products/CMFPlone/controlpanel/browser/socialmedia.py\nindex dc48368a0e..9704671325 100644\n--- a/Products/CMFPlone/controlpanel/browser/socialmedia.py\n+++ b/Products/CMFPlone/controlpanel/browser/socialmedia.py\n@@ -1,6 +1,6 @@\n-from Products.CMFPlone import PloneMessageFactory as _\n-from plone.base.interfaces import ISocialMediaSchema\n from plone.app.registry.browser import controlpanel\n+from plone.base.interfaces import ISocialMediaSchema\n+from Products.CMFPlone import PloneMessageFactory as _\n \n \n class SocialControlPanelForm(controlpanel.RegistryEditForm):\ndiff --git a/Products/CMFPlone/controlpanel/browser/syndication.py b/Products/CMFPlone/controlpanel/browser/syndication.py\nindex be92de8e60..452ec185da 100644\n--- a/Products/CMFPlone/controlpanel/browser/syndication.py\n+++ b/Products/CMFPlone/controlpanel/browser/syndication.py\n@@ -1,10 +1,10 @@\n-from Products.CMFCore.utils import getToolByName\n-from zope.i18nmessageid import MessageFactory\n-from plone.base.interfaces.syndication import ISiteSyndicationSettings\n from plone.app.registry.browser import controlpanel\n-from z3c.form import button\n-from Products.statusmessages.interfaces import IStatusMessage\n from plone.app.z3cform.widget import SelectFieldWidget\n+from plone.base.interfaces.syndication import ISiteSyndicationSettings\n+from Products.CMFCore.utils import getToolByName\n+from Products.statusmessages.interfaces import IStatusMessage\n+from z3c.form import button\n+from zope.i18nmessageid import MessageFactory\n \n \n _ = MessageFactory(\'plone\')\ndiff --git a/Products/CMFPlone/controlpanel/browser/tinymce.py b/Products/CMFPlone/controlpanel/browser/tinymce.py\nindex e70c93525d..c2d30b50c0 100644\n--- a/Products/CMFPlone/controlpanel/browser/tinymce.py\n+++ b/Products/CMFPlone/controlpanel/browser/tinymce.py\n@@ -1,11 +1,11 @@\n-from Products.CMFPlone import PloneMessageFactory as _\n+from plone.app.registry.browser import controlpanel\n+from plone.base.interfaces import ITinyMCEAdvancedSchema\n from plone.base.interfaces import ITinyMCELayoutSchema\n-from plone.base.interfaces import ITinyMCESpellCheckerSchema\n+from plone.base.interfaces import ITinyMCEPluginSchema\n from plone.base.interfaces import ITinyMCEResourceTypesSchema\n-from plone.base.interfaces import ITinyMCEAdvancedSchema\n from plone.base.interfaces import ITinyMCESchema\n-from plone.base.interfaces import ITinyMCEPluginSchema\n-from plone.app.registry.browser import controlpanel\n+from plone.base.interfaces import ITinyMCESpellCheckerSchema\n+from Products.CMFPlone import PloneMessageFactory as _\n from z3c.form import field\n from z3c.form import group\n from z3c.form.browser.checkbox import CheckBoxFieldWidget\ndiff --git a/Products/CMFPlone/controlpanel/browser/types.py b/Products/CMFPlone/controlpanel/browser/types.py\nindex e534c0318c..41a2f62bb0 100644\n--- a/Products/CMFPlone/controlpanel/browser/types.py\n+++ b/Products/CMFPlone/controlpanel/browser/types.py\n@@ -1,24 +1,24 @@\n from Acquisition import aq_inner\n-from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.controlpanel.events import ConfigurationChangedEvent\n-from plone.base.interfaces import ISearchSchema\n-from plone.base.interfaces import ITypesSchema\n-from plone.base.utils import safe_text\n-from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n-from Products.statusmessages.interfaces import IStatusMessage\n from operator import itemgetter\n from plone.app.workflow.remap import remap_workflow\n from plone.autoform.form import AutoExtensibleForm\n+from plone.base.interfaces import ISearchSchema\n+from plone.base.interfaces import ITypesSchema\n+from plone.base.utils import safe_text\n+from plone.dexterity.interfaces import IDexterityFTI\n from plone.memoize.instance import memoize\n from plone.registry.interfaces import IRegistry\n+from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone import PloneMessageFactory as _\n+from Products.CMFPlone.controlpanel.events import ConfigurationChangedEvent\n+from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n+from Products.statusmessages.interfaces import IStatusMessage\n from z3c.form import button\n from z3c.form import form\n from zope.component import getUtility\n from zope.event import notify\n from zope.i18n import translate\n from zope.schema.interfaces import IVocabularyFactory\n-from plone.dexterity.interfaces import IDexterityFTI\n \n \n def format_description(text, request=None):\ndiff --git a/Products/CMFPlone/controlpanel/browser/usergroups.py b/Products/CMFPlone/controlpanel/browser/usergroups.py\nindex 2819742a47..fbe30201c8 100644\n--- a/Products/CMFPlone/controlpanel/browser/usergroups.py\n+++ b/Products/CMFPlone/controlpanel/browser/usergroups.py\n@@ -1,22 +1,21 @@\n-from Products.CMFCore.permissions import ManagePortal\n-from ZTUtils import make_query\n-from itertools import chain\n+from AccessControl import getSecurityManager\n from Acquisition import aq_inner\n-from Products.CMFPlone.utils import normalizeString\n-from zope.component import getAdapter\n+from itertools import chain\n+from plone.autoform.form import AutoExtensibleForm\n from plone.base.interfaces import ISecuritySchema\n-from zope.component import getMultiAdapter\n-from AccessControl import getSecurityManager\n-from Products.Five.browser import BrowserView\n-from Products.CMFCore.utils import getToolByName\n-from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n+from plone.base.interfaces import IUserGroupsSettingsSchema\n from plone.z3cform import layout\n-from plone.autoform.form import AutoExtensibleForm\n+from Products.CMFCore.permissions import ManagePortal\n+from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n-from z3c.form import form\n-\n-from plone.base.interfaces import IUserGroupsSettingsSchema\n+from Products.CMFPlone.utils import normalizeString\n+from Products.Five.browser import BrowserView\n+from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from z3c.form import button\n+from z3c.form import form\n+from zope.component import getAdapter\n+from zope.component import getMultiAdapter\n+from ZTUtils import make_query\n \n \n class UserGroupsSettingsControlPanel(AutoExtensibleForm, form.EditForm):\ndiff --git a/Products/CMFPlone/controlpanel/browser/usergroups_groupdetails.py b/Products/CMFPlone/controlpanel/browser/usergroups_groupdetails.py\nindex 0e405fac45..a5cd6c9110 100644\n--- a/Products/CMFPlone/controlpanel/browser/usergroups_groupdetails.py\n+++ b/Products/CMFPlone/controlpanel/browser/usergroups_groupdetails.py\n@@ -1,9 +1,10 @@\n from Acquisition import aq_inner\n-from Products.CMFPlone.controlpanel.browser.usergroups import \\\n-    UsersGroupsControlPanelView\n from plone.protect import CheckAuthenticator\n-from Products.CMFPlone import PloneMessageFactory as _\n from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone import PloneMessageFactory as _\n+from Products.CMFPlone.controlpanel.browser.usergroups import (\n+    UsersGroupsControlPanelView,\n+)\n from Products.statusmessages.interfaces import IStatusMessage\n \n \ndiff --git a/Products/CMFPlone/controlpanel/browser/usergroups_groupmembership.py b/Products/CMFPlone/controlpanel/browser/usergroups_groupmembership.py\nindex b2ba666721..9dad09d7d0 100644\n--- a/Products/CMFPlone/controlpanel/browser/usergroups_groupmembership.py\n+++ b/Products/CMFPlone/controlpanel/browser/usergroups_groupmembership.py\n@@ -1,9 +1,10 @@\n-from Products.CMFPlone import PloneMessageFactory as _\n-from zExceptions import Forbidden\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.controlpanel.browser.usergroups import \\\n-    UsersGroupsControlPanelView\n+from Products.CMFPlone import PloneMessageFactory as _\n+from Products.CMFPlone.controlpanel.browser.usergroups import (\n+    UsersGroupsControlPanelView,\n+)\n from Products.CMFPlone.utils import normalizeString\n+from zExceptions import Forbidden\n \n \n class GroupMembershipControlPanel(UsersGroupsControlPanelView):\ndiff --git a/Products/CMFPlone/controlpanel/browser/usergroups_groupsoverview.py b/Products/CMFPlone/controlpanel/browser/usergroups_groupsoverview.py\nindex 276ca39f40..2ea0089388 100644\n--- a/Products/CMFPlone/controlpanel/browser/usergroups_groupsoverview.py\n+++ b/Products/CMFPlone/controlpanel/browser/usergroups_groupsoverview.py\n@@ -1,13 +1,14 @@\n-from itertools import chain\n from Acquisition import aq_inner\n-from Products.CMFPlone.controlpanel.browser.usergroups import \\\n-    UsersGroupsControlPanelView\n-from Products.PluggableAuthService.interfaces.plugins import IRolesPlugin\n+from itertools import chain\n from plone.protect import CheckAuthenticator\n-from zope.component import getMultiAdapter\n-from zExceptions import Forbidden\n-from Products.CMFPlone import PloneMessageFactory as _\n from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone import PloneMessageFactory as _\n+from Products.CMFPlone.controlpanel.browser.usergroups import (\n+    UsersGroupsControlPanelView,\n+)\n+from Products.PluggableAuthService.interfaces.plugins import IRolesPlugin\n+from zExceptions import Forbidden\n+from zope.component import getMultiAdapter\n \n \n class GroupsOverviewControlPanel(UsersGroupsControlPanelView):\ndiff --git a/Products/CMFPlone/controlpanel/browser/usergroups_usermembership.py b/Products/CMFPlone/controlpanel/browser/usergroups_usermembership.py\nindex 5e46e792af..0089076bdc 100644\n--- a/Products/CMFPlone/controlpanel/browser/usergroups_usermembership.py\n+++ b/Products/CMFPlone/controlpanel/browser/usergroups_usermembership.py\n@@ -1,9 +1,10 @@\n-from Products.CMFPlone import PloneMessageFactory as _\n-from zExceptions import Forbidden\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.controlpanel.browser.usergroups import \\\n-    UsersGroupsControlPanelView\n+from Products.CMFPlone import PloneMessageFactory as _\n+from Products.CMFPlone.controlpanel.browser.usergroups import (\n+    UsersGroupsControlPanelView,\n+)\n from Products.CMFPlone.utils import normalizeString\n+from zExceptions import Forbidden\n \n \n class UserMembershipControlPanel(UsersGroupsControlPanelView):\ndiff --git a/Products/CMFPlone/controlpanel/browser/usergroups_usersoverview.py b/Products/CMFPlone/controlpanel/browser/usergroups_usersoverview.py\nindex 2a4a97d278..c4e08cdbb6 100644\n--- a/Products/CMFPlone/controlpanel/browser/usergroups_usersoverview.py\n+++ b/Products/CMFPlone/controlpanel/browser/usergroups_usersoverview.py\n@@ -1,21 +1,21 @@\n from Acquisition import aq_inner\n-from zExceptions import Forbidden\n from itertools import chain\n-\n-from Products.PluggableAuthService.interfaces.plugins import IRolesPlugin\n-from zope.component import getUtility\n from plone.protect import CheckAuthenticator\n-from zope.component import getMultiAdapter\n from Products.CMFCore.interfaces import ISiteRoot\n-from Products.CMFPlone import PloneMessageFactory as _\n from Products.CMFCore.utils import getToolByName\n-\n+from Products.CMFPlone import PloneMessageFactory as _\n+from Products.CMFPlone.controlpanel.browser.usergroups import (\n+    UsersGroupsControlPanelView,\n+)\n from Products.CMFPlone.utils import normalizeString\n-from Products.CMFPlone.controlpanel.browser.usergroups import \\\n-    UsersGroupsControlPanelView\n+from Products.PluggableAuthService.interfaces.plugins import IRolesPlugin\n+from zExceptions import Forbidden\n+from zope.component import getMultiAdapter\n+from zope.component import getUtility\n \n import logging\n \n+\n logger = logging.getLogger(\'Products.CMFPlone\')\n \n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_actions.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_actions.py\nindex 98202efb60..4261a8e4e8 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_actions.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_actions.py\n@@ -1,6 +1,7 @@\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from zope.component import getMultiAdapter\n+\n import unittest\n \n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_editing_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_editing_adapter.py\nindex a1ca337498..4cb4c82690 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_editing_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_editing_adapter.py\n@@ -1,10 +1,11 @@\n-from plone.base.interfaces import IEditingSchema\n-from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n-from plone.app.testing import TEST_USER_ID\n from plone.app.testing import setRoles\n+from plone.app.testing import TEST_USER_ID\n+from plone.base.interfaces import IEditingSchema\n from plone.registry.interfaces import IRegistry\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from zope.component import getAdapter\n from zope.component import getUtility\n+\n import unittest\n \n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_filter_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_filter_adapter.py\nindex ef03ef4699..1558e1d814 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_filter_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_filter_adapter.py\n@@ -1,10 +1,11 @@\n-from plone.base.interfaces import IFilterSchema\n-from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n-from plone.app.testing import TEST_USER_ID\n from plone.app.testing import setRoles\n+from plone.app.testing import TEST_USER_ID\n+from plone.base.interfaces import IFilterSchema\n from plone.registry.interfaces import IRegistry\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from zope.component import getAdapter\n from zope.component import getUtility\n+\n import unittest\n \n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_language_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_language_adapter.py\nindex ff02c08697..724b1f20f4 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_language_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_language_adapter.py\n@@ -1,11 +1,10 @@\n-from Products.CMFPlone.testing import \\\n-    PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n-\n-from plone.app.testing import TEST_USER_ID, setRoles\n+from plone.app.testing import setRoles\n+from plone.app.testing import TEST_USER_ID\n from plone.i18n.interfaces import ILanguageSchema\n from plone.registry.interfaces import IRegistry\n-from zope.component import getUtility\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from zope.component import getAdapter\n+from zope.component import getUtility\n \n import unittest\n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_mail_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_mail_adapter.py\nindex d936b92091..ecf2feb855 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_mail_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_mail_adapter.py\n@@ -1,10 +1,10 @@\n+from plone.app.testing import setRoles\n+from plone.app.testing import TEST_USER_ID\n from plone.base.interfaces import IMailSchema\n-from Products.CMFPlone.testing import \\\n-    PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n-from plone.app.testing import TEST_USER_ID, setRoles\n from plone.registry.interfaces import IRegistry\n-from zope.component import getUtility\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from zope.component import getAdapter\n+from zope.component import getUtility\n \n import unittest\n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_maintenance_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_maintenance_adapter.py\nindex c002629e18..ab48904965 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_maintenance_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_maintenance_adapter.py\n@@ -1,10 +1,11 @@\n-from plone.base.interfaces import IMaintenanceSchema\n-from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n-from plone.app.testing import TEST_USER_ID\n from plone.app.testing import setRoles\n+from plone.app.testing import TEST_USER_ID\n+from plone.base.interfaces import IMaintenanceSchema\n from plone.registry.interfaces import IRegistry\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from zope.component import getAdapter\n from zope.component import getUtility\n+\n import unittest\n \n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_markup_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_markup_adapter.py\nindex f5f3c8135a..7ec8e09c4e 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_markup_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_markup_adapter.py\n@@ -1,10 +1,12 @@\n+from plone.app.testing import setRoles\n+from plone.app.testing import TEST_USER_ID\n from plone.base.interfaces import IMarkupSchema\n-from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n+from zope.component import getAdapter\n from zope.component import getUtility\n+\n import unittest\n-from plone.app.testing import TEST_USER_ID, setRoles\n-from zope.component import getAdapter\n \n \n class MarkupControlPanelAdapterTest(unittest.TestCase):\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_navigation_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_navigation_adapter.py\nindex fdec408974..819c4a8ebb 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_navigation_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_navigation_adapter.py\n@@ -1,9 +1,11 @@\n+from plone.app.testing import setRoles\n+from plone.app.testing import TEST_USER_ID\n from plone.base.interfaces import INavigationSchema\n-from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n-from plone.app.testing import TEST_USER_ID, setRoles\n from plone.registry.interfaces import IRegistry\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from zope.component import getAdapter\n from zope.component import getUtility\n+\n import unittest\n \n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_search_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_search_adapter.py\nindex c2bf2ecd91..28905f2dec 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_search_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_search_adapter.py\n@@ -1,9 +1,11 @@\n+from plone.app.testing import setRoles\n+from plone.app.testing import TEST_USER_ID\n from plone.base.interfaces import ISearchSchema\n-from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n-from plone.app.testing import TEST_USER_ID, setRoles\n from plone.registry.interfaces import IRegistry\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from zope.component import getAdapter\n from zope.component import getUtility\n+\n import unittest\n \n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_security_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_security_adapter.py\nindex a98e190663..8be6d76154 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_security_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_security_adapter.py\n@@ -1,8 +1,7 @@\n-from Products.CMFPlone.testing import \\\n-    PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n-from plone.base.interfaces import ISecuritySchema\n-from plone.app.testing import TEST_USER_ID\n from plone.app.testing import setRoles\n+from plone.app.testing import TEST_USER_ID\n+from plone.base.interfaces import ISecuritySchema\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from zope.component import getAdapter\n \n import unittest\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_site_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_site_adapter.py\nindex 443f5f20c8..5901222888 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_site_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_site_adapter.py\n@@ -1,10 +1,11 @@\n-from plone.base.interfaces import ISiteSchema\n-from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n-from plone.app.testing import TEST_USER_ID\n from plone.app.testing import setRoles\n+from plone.app.testing import TEST_USER_ID\n+from plone.base.interfaces import ISiteSchema\n from plone.registry.interfaces import IRegistry\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from zope.component import getAdapter\n from zope.component import getUtility\n+\n import unittest\n \n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_usergroups_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_usergroups_adapter.py\nindex 2f7229a9ad..7140b64110 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_usergroups_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_usergroups_adapter.py\n@@ -1,15 +1,13 @@\n from plone.app.testing import setRoles\n-from plone.base.interfaces import IUserGroupsSettingsSchema\n-from zope.component import getAdapter\n from plone.app.testing import TEST_USER_ID\n+from plone.base.interfaces import IUserGroupsSettingsSchema\n from plone.registry.interfaces import IRegistry\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n+from zope.component import getAdapter\n from zope.component import getUtility\n \n import unittest\n \n-from Products.CMFPlone.testing import \\\n-    PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n-\n \n class UserGroupsControlPanelAdapterTest(unittest.TestCase):\n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_editing.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_editing.py\nindex 3b0be82fb7..2157771f56 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_editing.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_editing.py\n@@ -1,11 +1,12 @@\n-from plone.base.interfaces import IEditingSchema\n-from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from plone.app.linkintegrity.utils import linkintegrity_enabled\n from plone.app.testing import SITE_OWNER_NAME\n from plone.app.testing import SITE_OWNER_PASSWORD\n+from plone.base.interfaces import IEditingSchema\n from plone.registry.interfaces import IRegistry\n from plone.testing.zope import Browser\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from zope.component import getUtility\n+\n import unittest\n \n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_error_log.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_error_log.py\nindex ae797cd070..2ec0ca1b1b 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_error_log.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_error_log.py\n@@ -1,11 +1,11 @@\n-import unittest\n-\n-from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from plone.app.testing import SITE_OWNER_NAME\n from plone.app.testing import SITE_OWNER_PASSWORD\n from plone.testing.zope import Browser\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from zope.component import getMultiAdapter\n \n+import unittest\n+\n \n class ErrorLogControlPanelFunctionalTest(unittest.TestCase):\n     """Test for Controlpanel Error Log\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_filter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_filter.py\nindex 5ede8606b1..60eb00aaf8 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_filter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_filter.py\n@@ -1,12 +1,14 @@\n-from plone.app.testing import SITE_OWNER_NAME, SITE_OWNER_PASSWORD\n+from plone.app.testing import SITE_OWNER_NAME\n+from plone.app.testing import SITE_OWNER_PASSWORD\n+from plone.base.interfaces import IFilterSchema\n from plone.registry.interfaces import IRegistry\n from plone.testing.zope import Browser\n from Products.CMFCore.utils import getToolByName\n-from plone.base.interfaces import IFilterSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from Products.PortalTransforms.data import datastream\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n+\n import unittest\n \n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_language.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_language.py\nindex cff39080e8..35ebc885fc 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_language.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_language.py\n@@ -1,14 +1,12 @@\n-from plone.app.testing import SITE_OWNER_NAME, SITE_OWNER_PASSWORD\n+from plone.app.testing import SITE_OWNER_NAME\n+from plone.app.testing import SITE_OWNER_PASSWORD\n from plone.i18n.interfaces import ILanguageSchema\n from plone.registry.interfaces import IRegistry\n from plone.testing.zope import Browser\n-\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n \n-from Products.CMFPlone.testing import \\\n-    PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n-\n import unittest\n import webtest\n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_mail.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_mail.py\nindex c575f7f438..23b62dec2f 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_mail.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_mail.py\n@@ -1,14 +1,12 @@\n-from plone.app.testing import SITE_OWNER_NAME, SITE_OWNER_PASSWORD\n+from plone.app.testing import SITE_OWNER_NAME\n+from plone.app.testing import SITE_OWNER_PASSWORD\n+from plone.base.interfaces import IMailSchema\n from plone.registry.interfaces import IRegistry\n from plone.testing.zope import Browser\n-\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n \n-from plone.base.interfaces import IMailSchema\n-from Products.CMFPlone.testing import \\\n-    PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n-\n import unittest\n \n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_maintenance.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_maintenance.py\nindex 868bf1fe6c..c8add25703 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_maintenance.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_maintenance.py\n@@ -1,11 +1,13 @@\n-from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n+from App.ApplicationManager import ApplicationManager\n+from pkg_resources import get_distribution\n from plone.app.testing import TEST_USER_NAME\n from plone.app.testing import TEST_USER_PASSWORD\n from plone.testing.zope import Browser\n from plone.testing.zope import login\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n+\n import unittest\n-from App.ApplicationManager import ApplicationManager\n-from pkg_resources import get_distribution\n+\n \n has_zope4 = get_distribution(\'Zope2\').version.startswith(\'4\')\n \n@@ -26,14 +28,14 @@ def setUp(self):\n         self.browser.handleErrors = False\n         # we have to create a user on the zope root. this just does not work\n         # with plone.app.testing and TEST_USER or SITE_OWNER\n-        self.app.acl_users.userFolderAddUser(\'app\', \'secret\', [\'Manager\'], [])\n+        self.app.acl_users.userFolderAddUser(\'app\', TEST_USER_PASSWORD, [\'Manager\'], [])\n         login(self.app[\'acl_users\'], \'app\')\n \n         import transaction\n         transaction.commit()\n         self.browser.addHeader(\n             \'Authorization\',\n-            \'Basic {}:{}\'.format(\'app\', \'secret\')\n+            \'Basic {}:{}\'.format(\'app\', TEST_USER_PASSWORD)\n         )\n \n         self.site_administrator_browser = Browser(self.app)\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_markup.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_markup.py\nindex cd34913f44..8436d3fb3f 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_markup.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_markup.py\n@@ -1,10 +1,12 @@\n+from plone.app.testing import SITE_OWNER_NAME\n+from plone.app.testing import SITE_OWNER_PASSWORD\n from plone.base.interfaces import IMarkupSchema\n-from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n-from plone.app.testing import SITE_OWNER_NAME, SITE_OWNER_PASSWORD\n from plone.registry.interfaces import IRegistry\n from plone.testing.zope import Browser\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n+\n import unittest\n \n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_navigation.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_navigation.py\nindex 66e79d0d0e..93f614c828 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_navigation.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_navigation.py\n@@ -1,10 +1,12 @@\n+from plone.app.testing import SITE_OWNER_NAME\n+from plone.app.testing import SITE_OWNER_PASSWORD\n from plone.base.interfaces import INavigationSchema\n-from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n-from plone.app.testing import SITE_OWNER_NAME, SITE_OWNER_PASSWORD\n from plone.registry.interfaces import IRegistry\n from plone.testing.zope import Browser\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n+\n import unittest\n \n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_redirection.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_redirection.py\nindex abf44c5cdd..ffc779744c 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_redirection.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_redirection.py\n@@ -3,10 +3,10 @@\n from plone.app.testing import SITE_OWNER_NAME\n from plone.app.testing import SITE_OWNER_PASSWORD\n from plone.base.batch import Batch\n+from plone.base.utils import safe_bytes\n from plone.testing.zope import Browser\n from Products.CMFPlone.controlpanel.browser.redirects import RedirectionSet\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n-from plone.base.utils import safe_bytes\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n \n@@ -139,8 +139,8 @@ def test_redirection_controlpanel_set(self):\n         now = DateTime(\'2022-02-03\')\n         for i in range(1000):\n             storage.add(\n-                \'{:s}/foo/{:s}\'.format(portal_path, str(i)),\n-                \'{:s}/bar/{:s}\'.format(portal_path, str(i)),\n+                f\'{portal_path:s}/foo/{str(i):s}\',\n+                f\'{portal_path:s}/bar/{str(i):s}\',\n                 now=now,\n             )\n         redirects = RedirectionSet()\n@@ -182,8 +182,8 @@ def test_redirection_controlpanel_batching(self):\n         portal_path = self.layer[\'portal\'].absolute_url_path()\n         for i in range(1000):\n             storage.add(\n-                \'{:s}/foo/{:s}\'.format(portal_path, str(i)),\n-                \'{:s}/bar/{:s}\'.format(portal_path, str(i)),\n+                f\'{portal_path:s}/foo/{str(i):s}\',\n+                f\'{portal_path:s}/bar/{str(i):s}\',\n             )\n         view = getMultiAdapter(\n             (self.layer[\'portal\'], self.layer[\'request\']),\n@@ -225,13 +225,13 @@ def test_redirection_controlpanel_filtering(self):\n         portal_path = self.layer[\'portal\'].absolute_url_path()\n         for i in range(1000):\n             storage.add(\n-                \'{:s}/foo1/{:s}\'.format(portal_path, str(i)),\n-                \'{:s}/bar/{:s}\'.format(portal_path, str(i)),\n+                f\'{portal_path:s}/foo1/{str(i):s}\',\n+                f\'{portal_path:s}/bar/{str(i):s}\',\n             )\n         for i in range(1000):\n             storage.add(\n-                \'{:s}/foo2/{:s}\'.format(portal_path, str(i)),\n-                \'{:s}/bar/{:s}\'.format(portal_path, str(i)),\n+                f\'{portal_path:s}/foo2/{str(i):s}\',\n+                f\'{portal_path:s}/bar/{str(i):s}\',\n             )\n \n         redirects = RedirectionSet()\n@@ -282,14 +282,14 @@ def test_redirection_controlpanel_filter_manual(self):\n         portal_path = self.layer[\'portal\'].absolute_url_path()\n         for i in range(100):\n             storage.add(\n-                \'{:s}/foo/{:s}\'.format(portal_path, str(i)),\n-                \'{:s}/bar/{:s}\'.format(portal_path, str(i)),\n+                f\'{portal_path:s}/foo/{str(i):s}\',\n+                f\'{portal_path:s}/bar/{str(i):s}\',\n                 manual=False,\n             )\n         for i in range(100, 300):\n             storage.add(\n-                \'{:s}/foo/{:s}\'.format(portal_path, str(i)),\n-                \'{:s}/bar/{:s}\'.format(portal_path, str(i)),\n+                f\'{portal_path:s}/foo/{str(i):s}\',\n+                f\'{portal_path:s}/bar/{str(i):s}\',\n                 manual=True,\n             )\n \n@@ -333,8 +333,8 @@ def test_redirection_controlpanel_filter_date(self):\n         time0 = DateTime(\'2001-01-01\')\n         for i in range(400):\n             storage.add(\n-                \'{:s}/foo/{:s}\'.format(portal_path, str(i)),\n-                \'{:s}/bar/{:s}\'.format(portal_path, str(i)),\n+                f\'{portal_path:s}/foo/{str(i):s}\',\n+                f\'{portal_path:s}/bar/{str(i):s}\',\n                 now=time0 + i,\n             )\n \n@@ -471,8 +471,8 @@ def test_manage_aliases_remove(self):\n         self.assertEqual(storage.get(\'/plone/alias3\'), \'/plone/test-folder\')\n \n     def test_manage_aliases_navigation_root(self):\n-        from zope.interface import alsoProvides\n         from plone.app.layout.navigation.interfaces import INavigationRoot\n+        from zope.interface import alsoProvides\n \n         storage = getUtility(IRedirectionStorage)\n         folder = self.portal[\'test-folder\']\n@@ -802,8 +802,8 @@ def test_download_bigger(self):\n         now = DateTime(\'2019/01/27 10:00:00 GMT-3\')\n         for i in range(2000):\n             storage.add(\n-                \'{:s}/foo/{:s}\'.format(portal_path, str(i)),\n-                \'{:s}/bar/{:s}\'.format(portal_path, str(i)),\n+                f\'{portal_path:s}/foo/{str(i):s}\',\n+                f\'{portal_path:s}/bar/{str(i):s}\',\n                 now=now,\n                 manual=True,\n             )\n@@ -839,7 +839,7 @@ def test_download_upload(self):\n         now = DateTime(\'2019/01/27 10:00:00 GMT-3\')\n         for i in range(10):\n             storage.add(\n-                \'{:s}/foo/{:s}\'.format(portal_path, str(i)),\n+                f\'{portal_path:s}/foo/{str(i):s}\',\n                 f\'{portal_path:s}/test-folder\',\n                 now=now,\n                 manual=True,\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_relations.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_relations.py\nindex dd9a2b76ed..258a2aa9f9 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_relations.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_relations.py\n@@ -1,4 +1,5 @@\n-from plone.app.testing import SITE_OWNER_NAME, SITE_OWNER_PASSWORD\n+from plone.app.testing import SITE_OWNER_NAME\n+from plone.app.testing import SITE_OWNER_PASSWORD\n from plone.testing.zope import Browser\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n \n@@ -11,13 +12,14 @@ class RelationsControlPanelFunctionalTest(unittest.TestCase):\n     layer = PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n \n     def _add_broken_relation(self):\n-        import transaction\n         from persistent.list import PersistentList\n         from z3c.relationfield import RelationValue\n         from zope.component import getUtility\n         from zope.intid.interfaces import IIntIds\n         from zope.lifecycleevent import modified\n \n+        import transaction\n+\n         self.portal.invokeFactory("Document", id="doc1", title="doc1")\n         doc1 = self.portal["doc1"]\n         self.portal.invokeFactory("Document", id="doc2", title="doc2")\n@@ -42,7 +44,6 @@ def setUp(self):\n \n     def test_inspect_realtions_form_action(self):\n         from io import StringIO\n-\n         from lxml import etree\n \n         self.browser.open(f"{self.portal_url}/@@inspect-relations")\n@@ -55,7 +56,6 @@ def test_inspect_realtions_form_action(self):\n \n     def test_rebuild_relations_links(self):\n         from io import StringIO\n-\n         from lxml import etree\n \n         # first we need a broken relation\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_search.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_search.py\nindex 3b2d7d17c0..4772dbe5c4 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_search.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_search.py\n@@ -1,10 +1,12 @@\n+from plone.app.testing import SITE_OWNER_NAME\n+from plone.app.testing import SITE_OWNER_PASSWORD\n from plone.base.interfaces import ISearchSchema\n-from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n-from plone.app.testing import SITE_OWNER_NAME, SITE_OWNER_PASSWORD\n from plone.registry.interfaces import IRegistry\n from plone.testing.zope import Browser\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n+\n import unittest\n \n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_security.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_security.py\nindex 89c57b5113..fb1f64ecf9 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_security.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_security.py\n@@ -1,9 +1,9 @@\n+from plone.app.testing import SITE_OWNER_NAME\n+from plone.app.testing import SITE_OWNER_PASSWORD\n from plone.base.interfaces import ISecuritySchema\n-from Products.CMFPlone.testing import \\\n-    PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n-from plone.app.testing import SITE_OWNER_NAME, SITE_OWNER_PASSWORD\n from plone.registry.interfaces import IRegistry\n from plone.testing.zope import Browser\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from zope.component import getUtility\n \n import unittest\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_site.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_site.py\nindex e5cf80998d..3bf8436942 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_site.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_site.py\n@@ -1,14 +1,16 @@\n-from plone.app.testing import SITE_OWNER_NAME, SITE_OWNER_PASSWORD\n+from io import BytesIO\n+from plone.app.testing import SITE_OWNER_NAME\n+from plone.app.testing import SITE_OWNER_PASSWORD\n+from plone.base.interfaces import ISiteSchema\n from plone.registry.interfaces import IRegistry\n from plone.testing.zope import Browser\n-from plone.base.interfaces import ISiteSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n-from io import BytesIO\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n \n import unittest\n \n+\n # Red pixel with filename pixel.png\n SITE_LOGO_BASE64 = b\'filenameb64:cGl4ZWwucG5n;datab64:iVBORw0KGgoAAAANSUhEUgA\'\\\n                    b\'AAAEAAAABCAIAAACQd1PeAAAADElEQVQI12P4z8AAAAMBAQAY3Y2wAAA\'\\\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_syndication.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_syndication.py\nindex c014f9dfe2..60da102499 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_syndication.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_syndication.py\n@@ -1,7 +1,9 @@\n-from plone.app.testing import SITE_OWNER_NAME, SITE_OWNER_PASSWORD\n+from plone.app.testing import SITE_OWNER_NAME\n+from plone.app.testing import SITE_OWNER_PASSWORD\n from plone.testing.zope import Browser\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from zope.component import getMultiAdapter\n+\n import transaction\n import unittest\n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_types.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_types.py\nindex ae275bde1a..0cf2a5624f 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_types.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_types.py\n@@ -1,6 +1,8 @@\n-from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n-from plone.app.testing import SITE_OWNER_NAME, SITE_OWNER_PASSWORD\n+from plone.app.testing import SITE_OWNER_NAME\n+from plone.app.testing import SITE_OWNER_PASSWORD\n from plone.testing.zope import Browser\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n+\n import unittest\n \n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_usergroups.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_usergroups.py\nindex 4a24a758fe..ad954f6288 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_usergroups.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_usergroups.py\n@@ -1,13 +1,12 @@\n-from plone.app.testing import SITE_OWNER_NAME, SITE_OWNER_PASSWORD\n-from Products.CMFCore.utils import getToolByName\n+from plone.app.testing import SITE_OWNER_NAME\n+from plone.app.testing import SITE_OWNER_PASSWORD\n from plone.testing.zope import Browser\n+from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from Products.CMFPlone.utils import normalizeString\n \n-from Products.CMFPlone.testing import \\\n-    PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n-\n-import unittest\n import transaction\n+import unittest\n \n \n class UserGroupsControlPanelFunctionalTest(unittest.TestCase):\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_usergroups_siteadmin_role.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_usergroups_siteadmin_role.py\nindex 9b567ea24c..d2803c0cde 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_usergroups_siteadmin_role.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_usergroups_siteadmin_role.py\n@@ -21,9 +21,9 @@ class TestSiteAdministratorRoleFunctional(unittest.TestCase):\n \n     def _generateUsers(self):\n         rtool = getToolByName(self.portal, \'portal_registration\')\n-        rtool.addMember(\'DIispfuF\', \'secret\', [\'Member\'], [])\n-        rtool.addMember(\'siteadmin\', \'secret\', [\'Site Administrator\'], [])\n-        rtool.addMember(\'root\', \'secret\', [\'Manager\'], [])\n+        rtool.addMember(\'DIispfuF\', TEST_USER_PASSWORD, [\'Member\'], [])\n+        rtool.addMember(\'siteadmin\', TEST_USER_PASSWORD, [\'Site Administrator\'], [])\n+        rtool.addMember(\'root\', TEST_USER_PASSWORD, [\'Manager\'], [])\n \n     def setUp(self):\n         self.app = self.layer[\'app\']\n@@ -108,7 +108,7 @@ def testManagerCanDelegateManagerRoleForUsers(self):\n     def testNonManagersCannotDelegateManagerRoleForUsers(self):\n         # a user without the Manager role cannot delegate the Manager role\n         self.browser.addHeader(\n-            \'Authorization\', \'Basic siteadmin:secret\')\n+            \'Authorization\', f\'Basic siteadmin:{TEST_USER_PASSWORD}\')\n         self.browser.open(self.usergroups_url)\n         form = {\n             \'_authenticator\': self._get_authenticator(),\n@@ -127,7 +127,7 @@ def testNonManagersCanEditOtherRolesOfUsersWithManagerRole(self):\n         roles = self.portal.acl_users.getUserById(\'root\').getRoles()\n         self.assertEqual([\'Manager\', \'Authenticated\'], roles)\n         self.browser.addHeader(\n-            \'Authorization\', \'Basic siteadmin:secret\')\n+            \'Authorization\', f\'Basic siteadmin:{TEST_USER_PASSWORD}\')\n         self.browser.open(self.usergroups_url)\n         form = {\n             \'_authenticator\': self._get_authenticator(),\n@@ -143,7 +143,7 @@ def testNonManagersCanEditOtherRolesOfUsersWithManagerRole(self):\n \n     def testGroupManagerRoleCheckboxIsDisabledForNonManagers(self):\n         self.browser.addHeader(\n-            \'Authorization\', \'Basic siteadmin:secret\')\n+            \'Authorization\', f\'Basic siteadmin:{TEST_USER_PASSWORD}\')\n         self.browser.open(self.groups_url)\n         contents = self._simplify_white_space(self.browser.contents)\n         self.assertTrue(\'<input type="checkbox" class="noborder" \'\n@@ -173,7 +173,7 @@ def testManagerCanDelegateManagerRoleForGroups(self):\n     def testNonManagersCannotDelegateManagerRoleForGroups(self):\n         # a user without the Manager role cannot delegate the Manager role\n         self.browser.addHeader(\n-            \'Authorization\', \'Basic siteadmin:secret\')\n+            \'Authorization\', f\'Basic siteadmin:{TEST_USER_PASSWORD}\')\n \n         self.browser.open(self.groups_url)\n         form = {\n@@ -191,7 +191,7 @@ def testNonManagersCannotDelegateManagerRoleForGroups(self):\n \n     def testNonManagersCanEditOtherRolesOfGroupsWithManagerRole(self):\n         self.browser.addHeader(\n-            \'Authorization\', \'Basic siteadmin:secret\')\n+            \'Authorization\', f\'Basic siteadmin:{TEST_USER_PASSWORD}\')\n \n         roles = self.portal.acl_users.getUserById(\'root\').getRoles()\n         self.assertEqual([\'Manager\', \'Authenticated\'], roles)\n@@ -210,7 +210,7 @@ def testNonManagersCanEditOtherRolesOfGroupsWithManagerRole(self):\n \n     def test_usergroup_usermembership_blocks_escalation(self):\n         self.browser.addHeader(\n-            \'Authorization\', \'Basic siteadmin:secret\')\n+            \'Authorization\', f\'Basic siteadmin:{TEST_USER_PASSWORD}\')\n \n         # groups granting the Manager role shouldn\'t show as a valid option to\n         # add\n@@ -241,7 +241,7 @@ def test_usergroup_groupmembership_blocks_escalation(self):\n         # should not show section to add users for groups granting the Manager\n         # role\n         self.browser.addHeader(\n-            \'Authorization\', \'Basic siteadmin:secret\')\n+            \'Authorization\', f\'Basic siteadmin:{TEST_USER_PASSWORD}\')\n \n         self.browser.open(\n             self.portal_url + \'/@@usergroup-groupmembership?groupname=Administrators\'\n@@ -268,7 +268,7 @@ def test_user_registration_form_blocks_escalation(self):\n         # groups granting the Manager role should not be available for\n         # selection\n         self.browser.addHeader(\n-            \'Authorization\', \'Basic siteadmin:secret\')\n+            \'Authorization\', f\'Basic siteadmin:{TEST_USER_PASSWORD}\')\n         self.browser.open(self.portal_url + \'/@@new-user\')\n         contents = self._simplify_white_space(self.browser.contents)\n         self.assertFalse(\n@@ -281,8 +281,8 @@ def test_user_registration_form_blocks_escalation(self):\n             \'_authenticator\': self._get_authenticator(),\n             \'form.widgets.username\': \'newuser\',\n             \'form.widgets.email\': \'newuser@example.com\',\n-            \'form.widgets.password\': \'secret\',\n-            \'form.widgets.password_ctl\': \'secret\',\n+            \'form.widgets.password\': TEST_USER_PASSWORD,\n+            \'form.widgets.password_ctl\': TEST_USER_PASSWORD,\n             \'form.widgets.groups:list\': \'Administrators\',\n             \'form.widgets.groups-empty-marker\': \'1\',\n             \'form.buttons.register\': \'Register\',\n@@ -297,7 +297,7 @@ def test_users_overview_blocks_deleting_managers(self):\n         # a user without the Manager role cannot delete a user with the\n         # Manager role\n         self.browser.addHeader(\n-            \'Authorization\', \'Basic siteadmin:secret\')\n+            \'Authorization\', f\'Basic siteadmin:{TEST_USER_PASSWORD}\')\n \n         self.browser.open(self.usergroups_url)\n         contents = self._simplify_white_space(self.browser.contents)\n@@ -324,7 +324,7 @@ def test_groups_overview_blocks_deleting_managers(self):\n         # a user without the Manager role cannot delete a group with the\n         # Manager role\n         self.browser.addHeader(\n-            \'Authorization\', \'Basic siteadmin:secret\')\n+            \'Authorization\', f\'Basic siteadmin:{TEST_USER_PASSWORD}\')\n \n         self.browser.open(self.groups_url)\n         contents = self._simplify_white_space(self.browser.contents)\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_dateandtime.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_dateandtime.py\nindex 9a86dee7be..37c6e41dbd 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_dateandtime.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_dateandtime.py\n@@ -1,7 +1,8 @@\n+from plone.app.testing import setRoles\n+from plone.app.testing import TEST_USER_ID\n from plone.base.interfaces import IDateAndTimeSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n-from plone.app.testing import TEST_USER_ID\n-from plone.app.testing import setRoles\n+\n import unittest\n \n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_doctest.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_doctest.py\nindex 03926c62ca..764cb3781d 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_doctest.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_doctest.py\n@@ -1,7 +1,8 @@\n """Functional Doctests for control panel.\n """\n-from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from plone.testing import layered\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n+\n import doctest\n import pprint\n import unittest\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_editing.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_editing.py\nindex 037d4b166e..1d86e488b7 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_editing.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_editing.py\n@@ -1,9 +1,10 @@\n-from Products.CMFCore.utils import getToolByName\n from plone.base.interfaces import IEditingSchema\n-from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n+from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n+\n import unittest\n \n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_events.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_events.py\nindex 0e053ff69f..eba74102c5 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_events.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_events.py\n@@ -1,9 +1,8 @@\n-from Products.CMFPlone.testing import \\\n-    PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n-from Products.CMFCore.utils import getToolByName\n-from plone.base.interfaces import ISecuritySchema\n-from plone.app.testing import TEST_USER_ID\n from plone.app.testing import setRoles\n+from plone.app.testing import TEST_USER_ID\n+from plone.base.interfaces import ISecuritySchema\n+from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from zope.component import getAdapter\n \n import unittest\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_filter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_filter.py\nindex 44b5fcd01f..1970bb4cf7 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_filter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_filter.py\n@@ -1,9 +1,10 @@\n-from Products.CMFCore.utils import getToolByName\n from plone.base.interfaces import IFilterSchema\n-from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n+from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n+\n import unittest\n \n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_installer.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_installer.py\nindex 5ebfd94772..b2d95e779a 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_installer.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_installer.py\n@@ -32,8 +32,7 @@ def test_addons_in_controlpanel(self):\n         ])\n \n     def test_installer_view(self):\n-        from Products.CMFPlone.controlpanel.browser.quickinstaller import \\\n-            InstallerView\n+        from Products.CMFPlone.controlpanel.browser.quickinstaller import InstallerView\n         view = getMultiAdapter((self.portal, self.portal.REQUEST),\n                                name="installer")\n         self.assertTrue(isinstance(view, InstallerView))\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_language.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_language.py\nindex b5277dd0e3..41e509718c 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_language.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_language.py\n@@ -1,11 +1,9 @@\n-from zope.component import getMultiAdapter\n-from zope.component import getUtility\n from plone.i18n.interfaces import ILanguageSchema\n from plone.registry.interfaces import IRegistry\n-\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.testing import \\\n-    PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n+from zope.component import getMultiAdapter\n+from zope.component import getUtility\n \n import unittest\n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_mail.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_mail.py\nindex 0de6c66436..dfbbb241dd 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_mail.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_mail.py\n@@ -1,11 +1,9 @@\n-from zope.component import getMultiAdapter\n-from zope.component import getUtility\n+from plone.base.interfaces import IMailSchema\n from plone.registry.interfaces import IRegistry\n-\n from Products.CMFCore.utils import getToolByName\n-from plone.base.interfaces import IMailSchema\n-from Products.CMFPlone.testing import \\\n-    PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n+from zope.component import getMultiAdapter\n+from zope.component import getUtility\n \n import unittest\n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_markup.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_markup.py\nindex 248e27602c..ffdae9d135 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_markup.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_markup.py\n@@ -1,9 +1,10 @@\n-from Products.CMFCore.utils import getToolByName\n from plone.base.interfaces import IMarkupSchema\n-from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n+from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n+\n import unittest\n \n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_navigation.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_navigation.py\nindex 955ed19c40..70c54a5fd5 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_navigation.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_navigation.py\n@@ -1,9 +1,10 @@\n-from Products.CMFCore.utils import getToolByName\n from plone.base.interfaces import INavigationSchema\n-from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n+from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n+\n import unittest\n \n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_overview.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_overview.py\nindex 974d6c3828..54b4fe1e78 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_overview.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_overview.py\n@@ -1,9 +1,10 @@\n from plone.app.testing import PLONE_INTEGRATION_TESTING\n-from plone.app.testing import TEST_USER_ID\n from plone.app.testing import setRoles\n+from plone.app.testing import TEST_USER_ID\n from plone.registry.interfaces import IRegistry\n-from zope.component import getUtility\n from unittest import mock\n+from zope.component import getUtility\n+\n import os\n import unittest\n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_relations.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_relations.py\nindex a6bf021866..67a37b5fe8 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_relations.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_relations.py\n@@ -1,5 +1,6 @@\n from persistent.list import PersistentList\n-from plone.app.testing import TEST_USER_ID, setRoles\n+from plone.app.testing import setRoles\n+from plone.app.testing import TEST_USER_ID\n from Products.CMFPlone.controlpanel.browser.relations import get_relations_stats\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from z3c.relationfield import RelationValue\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_search.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_search.py\nindex 8cab7e457c..ebf06c1e1f 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_search.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_search.py\n@@ -1,9 +1,10 @@\n-from Products.CMFCore.utils import getToolByName\n from plone.base.interfaces import ISearchSchema\n-from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n+from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n+\n import unittest\n \n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_security.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_security.py\nindex 12898194be..c7025e5f33 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_security.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_security.py\n@@ -1,9 +1,9 @@\n-from Products.CMFCore.utils import getToolByName\n+from plone.app.testing import setRoles\n+from plone.app.testing import TEST_USER_ID\n from plone.base.interfaces import ISecuritySchema\n-from Products.CMFPlone.testing import \\\n-    PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n-from plone.app.testing import TEST_USER_ID, setRoles\n from plone.registry.interfaces import IRegistry\n+from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_site.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_site.py\nindex d8786bbb95..d3eedb379b 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_site.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_site.py\n@@ -1,9 +1,10 @@\n-from Products.CMFCore.utils import getToolByName\n from plone.base.interfaces import ISiteSchema\n-from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from plone.registry.interfaces import IRegistry\n+from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n+\n import unittest\n \n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_types.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_types.py\nindex 311d29b9e3..76e96669d7 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_types.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_types.py\n@@ -1,9 +1,10 @@\n-from Products.CMFCore.utils import getToolByName\n from plone.base.interfaces import ITypesSchema\n-from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n+from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n+\n import unittest\n \n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_usergroups.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_usergroups.py\nindex 7e92c90e83..26c7085fe2 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_usergroups.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_usergroups.py\n@@ -1,6 +1,6 @@\n+from plone.base.interfaces import IUserGroupsSettingsSchema\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n-from plone.base.interfaces import IUserGroupsSettingsSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from zope.component import getMultiAdapter\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_doctests.py b/Products/CMFPlone/controlpanel/tests/test_doctests.py\nindex 9a93a8552e..75788e32b8 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_doctests.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_doctests.py\n@@ -1,5 +1,5 @@\n-from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from plone.testing import layered\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n \n import doctest\n import re\ndiff --git a/Products/CMFPlone/defaultpage.py b/Products/CMFPlone/defaultpage.py\nindex bdf7402894..b83a13acf1 100644\n--- a/Products/CMFPlone/defaultpage.py\n+++ b/Products/CMFPlone/defaultpage.py\n@@ -1,3 +1,4 @@\n from zope.deprecation import moved\n \n+\n moved(\'plone.base.defaultpage\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/earlypatches/security.py b/Products/CMFPlone/earlypatches/security.py\nindex 5be72b0e7a..f0ad36b657 100644\n--- a/Products/CMFPlone/earlypatches/security.py\n+++ b/Products/CMFPlone/earlypatches/security.py\n@@ -1,10 +1,14 @@\n # 1. make sure allow_module can\'t be called from restricted code\n import AccessControl\n+\n+\n AccessControl.allow_module.__roles__ = ()\n \n # 2. make sure /@@ doesn\'t traverse to annotations\n from zope.traversing import namespace\n from zope.traversing.interfaces import TraversalError\n+\n+\n old_traverse = namespace.view.traverse\n \n \n@@ -16,10 +20,12 @@ def traverse(self, name, ignored):\n \n # 3. be sure to check Access contents information permission for FTP users\n from Products.CMFPlone import bbb\n+\n+\n if bbb.HAS_ZSERVER:\n     from AccessControl import getSecurityManager\n-    from zExceptions import Unauthorized\n     from OFS.ObjectManager import ObjectManager\n+    from zExceptions import Unauthorized\n     ObjectManager.__old_manage_FTPlist = ObjectManager.manage_FTPlist\n \n \n@@ -40,6 +46,8 @@ def manage_FTPlist(self, REQUEST):\n \n # 4. Make sure z3c.form widgets don\'t get declared as public\n from AccessControl.metaconfigure import ClassDirective\n+\n+\n old_require = ClassDirective.require\n \n \n@@ -54,15 +62,20 @@ def require(self, *args, **kw):\n \n # 6. Protect some methods in ZCatalog\n from Products.ZCatalog.ZCatalog import ZCatalog\n+\n+\n ZCatalog.resolve_path__roles__ = ()\n ZCatalog.resolve_url__roles__ = ()\n \n-# 7. Prevent publish traversal of the request\n-from ZPublisher.BaseRequest import BaseRequest\n-from ZPublisher.HTTPRequest import HTTPRequest\n from zope.publisher.base import BaseRequest as ZPBaseRequest\n from zope.publisher.ftp import FTPRequest\n from zope.publisher.http import HTTPRequest as ZPHTTPRequest\n+\n+# 7. Prevent publish traversal of the request\n+from ZPublisher.BaseRequest import BaseRequest\n+from ZPublisher.HTTPRequest import HTTPRequest\n+\n+\n for c in [BaseRequest, HTTPRequest, ZPBaseRequest, FTPRequest, ZPHTTPRequest]:\n     try:\n         del c.__doc__\ndiff --git a/Products/CMFPlone/exportimport/controlpanel.py b/Products/CMFPlone/exportimport/controlpanel.py\nindex 48ca8c891d..0870d8f25a 100644\n--- a/Products/CMFPlone/exportimport/controlpanel.py\n+++ b/Products/CMFPlone/exportimport/controlpanel.py\n@@ -14,16 +14,13 @@\n \n $Id$\n """\n-from zope.i18nmessageid import Message\n-\n+from plone.base.interfaces import IControlPanel\n+from Products.CMFCore.interfaces import IActionProvider\n+from Products.CMFCore.utils import getToolByName\n from Products.GenericSetup.utils import exportObjects\n from Products.GenericSetup.utils import importObjects\n from Products.GenericSetup.utils import XMLAdapterBase\n-\n-from Products.CMFCore.interfaces import IActionProvider\n-from Products.CMFCore.utils import getToolByName\n-\n-from plone.base.interfaces import IControlPanel\n+from zope.i18nmessageid import Message\n \n \n class ControlPanelXMLAdapter(XMLAdapterBase):\ndiff --git a/Products/CMFPlone/exportimport/memberdata_properties.py b/Products/CMFPlone/exportimport/memberdata_properties.py\nindex 28583460a8..5a7c948d07 100644\n--- a/Products/CMFPlone/exportimport/memberdata_properties.py\n+++ b/Products/CMFPlone/exportimport/memberdata_properties.py\n@@ -3,9 +3,10 @@\n $Id:$\n """\n \n-from zope.component import queryMultiAdapter\n from Products.CMFCore.utils import getToolByName\n from Products.GenericSetup.interfaces import IBody\n+from zope.component import queryMultiAdapter\n+\n \n _FILENAME = \'memberdata_properties.xml\'\n \ndiff --git a/Products/CMFPlone/exportimport/propertiestool.py b/Products/CMFPlone/exportimport/propertiestool.py\nindex 3bc7ea923b..5838ef5d17 100644\n--- a/Products/CMFPlone/exportimport/propertiestool.py\n+++ b/Products/CMFPlone/exportimport/propertiestool.py\n@@ -3,17 +3,17 @@\n $Id:$\n """\n \n-from zope.component import queryMultiAdapter\n+from plone.base.interfaces import IPropertiesTool as IPlonePropertiesTool\n+from plone.base.interfaces import ISimpleItemWithProperties\n from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone.PropertiesTool import SimpleItemWithProperties\n from Products.GenericSetup.interfaces import IBody\n from Products.GenericSetup.interfaces import INode\n-from Products.GenericSetup.utils import XMLAdapterBase\n from Products.GenericSetup.utils import ObjectManagerHelpers\n from Products.GenericSetup.utils import PropertyManagerHelpers\n-from Products.CMFPlone.PropertiesTool import SimpleItemWithProperties\n-from plone.base.interfaces \\\n-    import IPropertiesTool as IPlonePropertiesTool\n-from plone.base.interfaces import ISimpleItemWithProperties\n+from Products.GenericSetup.utils import XMLAdapterBase\n+from zope.component import queryMultiAdapter\n+\n \n _FILENAME = \'propertiestool.xml\'\n \ndiff --git a/Products/CMFPlone/exportimport/tests/base.py b/Products/CMFPlone/exportimport/tests/base.py\nindex fdbb490224..dd27aa8351 100644\n--- a/Products/CMFPlone/exportimport/tests/base.py\n+++ b/Products/CMFPlone/exportimport/tests/base.py\n@@ -1,6 +1,7 @@\n from plone.testing.zca import UNIT_TESTING\n from Products.GenericSetup.testing import BodyAdapterTestCase\n from Products.GenericSetup.testing import NodeAdapterTestCase\n+\n import unittest\n \n \ndiff --git a/Products/CMFPlone/exportimport/tests/testControlPanel.py b/Products/CMFPlone/exportimport/tests/testControlPanel.py\nindex cb016c97c0..dbe17bd76a 100644\n--- a/Products/CMFPlone/exportimport/tests/testControlPanel.py\n+++ b/Products/CMFPlone/exportimport/tests/testControlPanel.py\n@@ -1,9 +1,10 @@\n from OFS.Folder import Folder\n-from Products.CMFPlone.exportimport.tests.base import BodyAdapterTestCase\n from plone.base.interfaces import IControlPanel\n+from Products.CMFPlone.exportimport.tests.base import BodyAdapterTestCase\n from Products.CMFPlone.PloneControlPanel import PloneControlPanel\n-from zope.component import provideUtility\n from zope.component import provideAdapter\n+from zope.component import provideUtility\n+\n \n _CONTROLPANEL_XML = b"""\\\n <?xml version="1.0" encoding="utf-8"?>\n@@ -22,8 +23,7 @@\n class ControlPanelXMLAdapterTests(BodyAdapterTestCase):\n \n     def _getTargetClass(self):\n-        from Products.CMFPlone.exportimport.controlpanel \\\n-            import ControlPanelXMLAdapter\n+        from Products.CMFPlone.exportimport.controlpanel import ControlPanelXMLAdapter\n         return ControlPanelXMLAdapter\n \n     def _populate(self, obj):\n@@ -39,8 +39,8 @@ def _populate(self, obj):\n         )\n \n     def setUp(self):\n-        from Products.GenericSetup.interfaces import ISetupEnviron\n         from Products.GenericSetup.interfaces import IBody\n+        from Products.GenericSetup.interfaces import ISetupEnviron\n         self.site = Folder(\'site\')\n         self.site.portal_control_panel = PloneControlPanel()\n         provideUtility(self.site.portal_control_panel, IControlPanel)\n@@ -51,7 +51,8 @@ def setUp(self):\n \n \n def test_suite():\n-    from unittest import TestSuite, makeSuite\n+    from unittest import makeSuite\n+    from unittest import TestSuite\n     suite = TestSuite()\n     suite.addTest(makeSuite(ControlPanelXMLAdapterTests))\n     return suite\ndiff --git a/Products/CMFPlone/exportimport/tests/testPropertiesTool.py b/Products/CMFPlone/exportimport/tests/testPropertiesTool.py\nindex 317b19100d..44dcbaa8a5 100644\n--- a/Products/CMFPlone/exportimport/tests/testPropertiesTool.py\n+++ b/Products/CMFPlone/exportimport/tests/testPropertiesTool.py\n@@ -3,6 +3,7 @@\n from Products.CMFPlone.PropertiesTool import SimpleItemWithProperties\n from zope.component import provideAdapter\n \n+\n _PROPERTYSHEET_XML = b"""\\\n <?xml version="1.0" encoding="utf-8"?>\n <object name="site_properties" meta_type="Plone Property Sheet">\n@@ -27,8 +28,9 @@\n class PropertySheetXMLAdapterTests(BodyAdapterTestCase):\n \n     def _getTargetClass(self):\n-        from Products.CMFPlone.exportimport.propertiestool \\\n-            import SimpleItemWithPropertiesXMLAdapter\n+        from Products.CMFPlone.exportimport.propertiestool import (\n+            SimpleItemWithPropertiesXMLAdapter,\n+        )\n         return SimpleItemWithPropertiesXMLAdapter\n \n     def _populate(self, obj):\n@@ -38,8 +40,8 @@ def _populate(self, obj):\n \n     def setUp(self):\n         from plone.base.interfaces import ISimpleItemWithProperties\n-        from Products.GenericSetup.interfaces import ISetupEnviron\n         from Products.GenericSetup.interfaces import IBody\n+        from Products.GenericSetup.interfaces import ISetupEnviron\n         provideAdapter(\n             self._getTargetClass(),\n             (ISimpleItemWithProperties, ISetupEnviron), IBody)\n@@ -51,8 +53,9 @@ def setUp(self):\n class PropertiesToolXMLAdapterTests(BodyAdapterTestCase):\n \n     def _getTargetClass(self):\n-        from Products.CMFPlone.exportimport.propertiestool \\\n-            import PlonePropertiesToolXMLAdapter\n+        from Products.CMFPlone.exportimport.propertiestool import (\n+            PlonePropertiesToolXMLAdapter,\n+        )\n         return PlonePropertiesToolXMLAdapter\n \n     def _populate(self, obj):\n@@ -64,12 +67,13 @@ def _populate(self, obj):\n             \'displayPublicationDateInByline\', True, \'boolean\')\n \n     def setUp(self):\n-        from Products.CMFPlone.exportimport.propertiestool \\\n-            import SimpleItemWithPropertiesXMLAdapter\n         from plone.base.interfaces import IPropertiesTool\n         from plone.base.interfaces import ISimpleItemWithProperties\n-        from Products.GenericSetup.interfaces import ISetupEnviron\n+        from Products.CMFPlone.exportimport.propertiestool import (\n+            SimpleItemWithPropertiesXMLAdapter,\n+        )\n         from Products.GenericSetup.interfaces import IBody\n+        from Products.GenericSetup.interfaces import ISetupEnviron\n         provideAdapter(\n             self._getTargetClass(), (IPropertiesTool, ISetupEnviron), IBody)\n         provideAdapter(\n@@ -81,7 +85,8 @@ def setUp(self):\n \n \n def test_suite():\n-    from unittest import TestSuite, makeSuite\n+    from unittest import makeSuite\n+    from unittest import TestSuite\n     suite = TestSuite()\n     suite.addTest(makeSuite(PropertySheetXMLAdapterTests))\n     suite.addTest(makeSuite(PropertiesToolXMLAdapterTests))\ndiff --git a/Products/CMFPlone/factory.py b/Products/CMFPlone/factory.py\nindex 550784c1a0..8e0e6e2702 100644\n--- a/Products/CMFPlone/factory.py\n+++ b/Products/CMFPlone/factory.py\n@@ -1,8 +1,8 @@\n from logging import getLogger\n+from plone.base.interfaces import INonInstallable\n from plone.registry.interfaces import IRegistry\n from Products.CMFPlone import PloneMessageFactory as _\n from Products.CMFPlone.events import SiteManagerCreatedEvent\n-from plone.base.interfaces import INonInstallable\n from Products.CMFPlone.Portal import PloneSite\n from Products.GenericSetup.tool import SetupTool\n from zope.component import queryUtility\n@@ -11,6 +11,7 @@\n from zope.interface import implementer\n from zope.lifecycleevent import ObjectCreatedEvent\n \n+\n _TOOL_ID = \'portal_setup\'\n _DEFAULT_PROFILE = \'Products.CMFPlone:plone\'\n _TYPES_PROFILE = \'plone.app.contenttypes:default\'\ndiff --git a/Products/CMFPlone/i18nl10n.py b/Products/CMFPlone/i18nl10n.py\nindex d9980a07e9..5c7eea59ea 100644\n--- a/Products/CMFPlone/i18nl10n.py\n+++ b/Products/CMFPlone/i18nl10n.py\n@@ -1,3 +1,4 @@\n from zope.deprecation import moved\n \n+\n moved(\'plone.base.i18nl10n\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/image_scales/adapters.py b/Products/CMFPlone/image_scales/adapters.py\nindex 6fc7230b48..88a79e9ff2 100644\n--- a/Products/CMFPlone/image_scales/adapters.py\n+++ b/Products/CMFPlone/image_scales/adapters.py\n@@ -1,8 +1,8 @@\n from Acquisition import aq_inner\n-from plone.dexterity.interfaces import IDexterityContent\n-from plone.dexterity.utils import iterSchemata\n from plone.base.interfaces import IImageScalesAdapter\n from plone.base.interfaces import IImageScalesFieldAdapter\n+from plone.dexterity.interfaces import IDexterityContent\n+from plone.dexterity.utils import iterSchemata\n from zope.component import adapter\n from zope.component import queryMultiAdapter\n from zope.interface import implementer\ndiff --git a/Products/CMFPlone/image_scales/tests/test_image_scales_metadata.py b/Products/CMFPlone/image_scales/tests/test_image_scales_metadata.py\nindex 0cc5c2c1e0..6ae04f3c46 100644\n--- a/Products/CMFPlone/image_scales/tests/test_image_scales_metadata.py\n+++ b/Products/CMFPlone/image_scales/tests/test_image_scales_metadata.py\n@@ -1,10 +1,10 @@\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n+from plone.base.interfaces import IImageScalesAdapter\n+from plone.base.interfaces import IImageScalesFieldAdapter\n from plone.dexterity.fti import DexterityFTI\n from plone.dexterity.utils import iterSchemata\n from plone.namedfile.file import NamedImage\n-from plone.base.interfaces import IImageScalesAdapter\n-from plone.base.interfaces import IImageScalesFieldAdapter\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from Products.CMFPlone.tests import dummy\n from zope.component import queryMultiAdapter\ndiff --git a/Products/CMFPlone/interfaces/__init__.py b/Products/CMFPlone/interfaces/__init__.py\nindex f5e6813e6b..f00871004f 100644\n--- a/Products/CMFPlone/interfaces/__init__.py\n+++ b/Products/CMFPlone/interfaces/__init__.py\n@@ -1,5 +1,6 @@\n from zope.deferredimport import deprecated\n \n+\n deprecated(\n     "Moved to plone.base.interfaces, import from there instead (will be removed in Plone 7).",\n     IPloneBaseTool="plone.base.interfaces.basetool:IPloneBaseTool",\ndiff --git a/Products/CMFPlone/interfaces/atd.py b/Products/CMFPlone/interfaces/atd.py\nindex f43019c7d8..e19354b987 100644\n--- a/Products/CMFPlone/interfaces/atd.py\n+++ b/Products/CMFPlone/interfaces/atd.py\n@@ -1,3 +1,4 @@\n from zope.deprecation import moved\n \n-moved(\'plone.base.interfaces.atd\', \'Version 7.0\')\n\\ No newline at end of file\n+\n+moved(\'plone.base.interfaces.atd\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/interfaces/basetool.py b/Products/CMFPlone/interfaces/basetool.py\nindex 2ddb20e69b..3d9ab298f7 100644\n--- a/Products/CMFPlone/interfaces/basetool.py\n+++ b/Products/CMFPlone/interfaces/basetool.py\n@@ -1,3 +1,4 @@\n from zope.deprecation import moved\n \n-moved(\'plone.base.interfaces.basetool\', \'Version 7.0\')\n\\ No newline at end of file\n+\n+moved(\'plone.base.interfaces.basetool\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/interfaces/breadcrumbs.py b/Products/CMFPlone/interfaces/breadcrumbs.py\nindex 5be8cc296c..7f3ab83bdc 100644\n--- a/Products/CMFPlone/interfaces/breadcrumbs.py\n+++ b/Products/CMFPlone/interfaces/breadcrumbs.py\n@@ -1,3 +1,4 @@\n from zope.deprecation import moved\n \n-moved(\'plone.base.interfaces.breadcrumbs\', \'Version 7.0\')\n\\ No newline at end of file\n+\n+moved(\'plone.base.interfaces.breadcrumbs\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/interfaces/constrains.py b/Products/CMFPlone/interfaces/constrains.py\nindex 720eed0ec3..f4ac92580c 100644\n--- a/Products/CMFPlone/interfaces/constrains.py\n+++ b/Products/CMFPlone/interfaces/constrains.py\n@@ -1,3 +1,4 @@\n from zope.deprecation import moved\n \n-moved(\'plone.base.interfaces.constrains\', \'Version 7.0\')\n\\ No newline at end of file\n+\n+moved(\'plone.base.interfaces.constrains\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/interfaces/controlpanel.py b/Products/CMFPlone/interfaces/controlpanel.py\nindex 9731ce70f2..9139510242 100644\n--- a/Products/CMFPlone/interfaces/controlpanel.py\n+++ b/Products/CMFPlone/interfaces/controlpanel.py\n@@ -1,3 +1,4 @@\n from zope.deprecation import moved\n \n+\n moved(\'plone.base.interfaces.controlpanel\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/interfaces/defaultpage.py b/Products/CMFPlone/interfaces/defaultpage.py\nindex 4b9a4c610b..2a4e02ccbe 100644\n--- a/Products/CMFPlone/interfaces/defaultpage.py\n+++ b/Products/CMFPlone/interfaces/defaultpage.py\n@@ -1,3 +1,4 @@\n from zope.deprecation import moved\n \n-moved(\'plone.base.interfaces.defaultpage\', \'Version 7.0\')\n\\ No newline at end of file\n+\n+moved(\'plone.base.interfaces.defaultpage\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/interfaces/events.py b/Products/CMFPlone/interfaces/events.py\nindex 57f9fb71b6..b2d28b6eb0 100644\n--- a/Products/CMFPlone/interfaces/events.py\n+++ b/Products/CMFPlone/interfaces/events.py\n@@ -1,3 +1,4 @@\n from zope.deprecation import moved\n \n-moved(\'plone.base.interfaces.events\', \'Version 7.0\')\n\\ No newline at end of file\n+\n+moved(\'plone.base.interfaces.events\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/interfaces/installable.py b/Products/CMFPlone/interfaces/installable.py\nindex 79006705e0..884cd3b384 100644\n--- a/Products/CMFPlone/interfaces/installable.py\n+++ b/Products/CMFPlone/interfaces/installable.py\n@@ -1,3 +1,4 @@\n from zope.deprecation import moved\n \n-moved(\'plone.base.interfaces.installable\', \'Version 7.0\')\n\\ No newline at end of file\n+\n+moved(\'plone.base.interfaces.installable\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/interfaces/interface.py b/Products/CMFPlone/interfaces/interface.py\nindex 1d12e69c6c..33f962c53a 100644\n--- a/Products/CMFPlone/interfaces/interface.py\n+++ b/Products/CMFPlone/interfaces/interface.py\n@@ -1,3 +1,4 @@\n from zope.deprecation import moved\n \n-moved(\'plone.base.interfaces.interface\', \'Version 7.0\')\n\\ No newline at end of file\n+\n+moved(\'plone.base.interfaces.interface\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/interfaces/language.py b/Products/CMFPlone/interfaces/language.py\nindex e8f180cf11..0a984adc0f 100644\n--- a/Products/CMFPlone/interfaces/language.py\n+++ b/Products/CMFPlone/interfaces/language.py\n@@ -1,3 +1,4 @@\n from zope.deprecation import moved\n \n-moved(\'plone.base.interfaces.language\', \'Version 7.0\')\n\\ No newline at end of file\n+\n+moved(\'plone.base.interfaces.language\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/interfaces/login.py b/Products/CMFPlone/interfaces/login.py\nindex 19e30f8a8f..a6a2b31292 100644\n--- a/Products/CMFPlone/interfaces/login.py\n+++ b/Products/CMFPlone/interfaces/login.py\n@@ -1,3 +1,4 @@\n from zope.deprecation import moved\n \n-moved(\'plone.base.interfaces.login\', \'Version 7.0\')\n\\ No newline at end of file\n+\n+moved(\'plone.base.interfaces.login\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/interfaces/migration.py b/Products/CMFPlone/interfaces/migration.py\nindex 5672aac457..7c337fbe0b 100644\n--- a/Products/CMFPlone/interfaces/migration.py\n+++ b/Products/CMFPlone/interfaces/migration.py\n@@ -1,3 +1,4 @@\n from zope.deprecation import moved\n \n-moved(\'plone.base.interfaces.migration\', \'Version 7.0\')\n\\ No newline at end of file\n+\n+moved(\'plone.base.interfaces.migration\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/interfaces/password_reset.py b/Products/CMFPlone/interfaces/password_reset.py\nindex 97fd367189..dd7d2f429b 100644\n--- a/Products/CMFPlone/interfaces/password_reset.py\n+++ b/Products/CMFPlone/interfaces/password_reset.py\n@@ -1,3 +1,4 @@\n from zope.deprecation import moved\n \n-moved(\'plone.base.interfaces.password_reset\', \'Version 7.0\')\n\\ No newline at end of file\n+\n+moved(\'plone.base.interfaces.password_reset\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/interfaces/patterns.py b/Products/CMFPlone/interfaces/patterns.py\nindex 91983316aa..38419fac65 100644\n--- a/Products/CMFPlone/interfaces/patterns.py\n+++ b/Products/CMFPlone/interfaces/patterns.py\n@@ -1,3 +1,4 @@\n from zope.deprecation import moved\n \n-moved(\'plone.base.interfaces.patterns\', \'Version 7.0\')\n\\ No newline at end of file\n+\n+moved(\'plone.base.interfaces.patterns\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/interfaces/properties.py b/Products/CMFPlone/interfaces/properties.py\nindex 4c4b228fff..9619c121f0 100644\n--- a/Products/CMFPlone/interfaces/properties.py\n+++ b/Products/CMFPlone/interfaces/properties.py\n@@ -1,3 +1,4 @@\n from zope.deprecation import moved\n \n-moved(\'plone.base.interfaces.properties\', \'Version 7.0\')\n\\ No newline at end of file\n+\n+moved(\'plone.base.interfaces.properties\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/interfaces/resources.py b/Products/CMFPlone/interfaces/resources.py\nindex 5e1cab52d3..198a1045e4 100644\n--- a/Products/CMFPlone/interfaces/resources.py\n+++ b/Products/CMFPlone/interfaces/resources.py\n@@ -1,3 +1,4 @@\n from zope.deprecation import moved\n \n+\n moved(\'plone.base.interfaces.resources\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/interfaces/siteroot.py b/Products/CMFPlone/interfaces/siteroot.py\nindex e05bac1d96..85df8e7c18 100644\n--- a/Products/CMFPlone/interfaces/siteroot.py\n+++ b/Products/CMFPlone/interfaces/siteroot.py\n@@ -1,3 +1,4 @@\n from zope.deprecation import moved\n \n-moved(\'plone.base.interfaces.siteroot\', \'Version 7.0\')\n\\ No newline at end of file\n+\n+moved(\'plone.base.interfaces.siteroot\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/interfaces/structure.py b/Products/CMFPlone/interfaces/structure.py\nindex 1de8c04966..dd4bb753ce 100644\n--- a/Products/CMFPlone/interfaces/structure.py\n+++ b/Products/CMFPlone/interfaces/structure.py\n@@ -1,3 +1,4 @@\n from zope.deprecation import moved\n \n-moved(\'plone.base.interfaces.structure\', \'Version 7.0\')\n\\ No newline at end of file\n+\n+moved(\'plone.base.interfaces.structure\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/interfaces/syndication.py b/Products/CMFPlone/interfaces/syndication.py\nindex e2bdf7315c..e6a459d7a7 100644\n--- a/Products/CMFPlone/interfaces/syndication.py\n+++ b/Products/CMFPlone/interfaces/syndication.py\n@@ -1,3 +1,4 @@\n from zope.deprecation import moved\n \n-moved(\'plone.base.interfaces.syndication\', \'Version 7.0\')\n\\ No newline at end of file\n+\n+moved(\'plone.base.interfaces.syndication\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/interfaces/translationservice.py b/Products/CMFPlone/interfaces/translationservice.py\nindex f840d67732..c91a2ec402 100644\n--- a/Products/CMFPlone/interfaces/translationservice.py\n+++ b/Products/CMFPlone/interfaces/translationservice.py\n@@ -1,3 +1,4 @@\n from zope.deprecation import moved\n \n-moved(\'plone.base.interfaces.translationservice\', \'Version 7.0\')\n\\ No newline at end of file\n+\n+moved(\'plone.base.interfaces.translationservice\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/log.py b/Products/CMFPlone/log.py\nindex 7cf1dfa8ca..4b2df2ba85 100644\n--- a/Products/CMFPlone/log.py\n+++ b/Products/CMFPlone/log.py\n@@ -6,6 +6,7 @@\n \n import logging\n \n+\n logger = logging.getLogger(\'Plone\')\n \n \ndiff --git a/Products/CMFPlone/patches/__init__.py b/Products/CMFPlone/patches/__init__.py\nindex 2a66068710..5adf744414 100644\n--- a/Products/CMFPlone/patches/__init__.py\n+++ b/Products/CMFPlone/patches/__init__.py\n@@ -2,30 +2,34 @@\n # from . import addzmiplonesite          # Add an explicit link to add a new Plone\n # site to the ZMI for faster access\n \n-from . import addzmisecuritywarning    # Add a warning to the ZMI security tab\n+from . import addzmisecuritywarning  # Add a warning to the ZMI security tab\n+from . import csrf  # Protects most important methods from\n+from . import dateIndexPatch  # Avoid OverflowErrors in Date*Indexes\n+from . import unicodeFallbackPatch  # Makes the TAL engine in Zope 2.10+ accept\n+\n+\n # that you shouldn\'t use it\n \n-from . import dateIndexPatch           # Avoid OverflowErrors in Date*Indexes\n \n-from . import unicodeFallbackPatch     # Makes the TAL engine in Zope 2.10+ accept\n # utf-8 encoded strings as well as Unicode\n \n-from . import csrf                     # Protects most important methods from\n csrf.applyPatches()             # CSRF attacks\n \n-from . import speed                    # Various caching patches to improve speed\n+from . import iso8601  # use `DateTime.ISO8601` for `DateTime.ISO`\n+from . import speed  # Various caching patches to improve speed\n+\n \n-from . import iso8601                  # use `DateTime.ISO8601` for `DateTime.ISO`\n iso8601.applyPatches()\n \n from . import sendmail\n-sendmail.applyPatches()\n \n-from . import templatecookcheck        # Make sure templates aren\'t re-read in\n-# production sites\n \n-from . import publishing\n+sendmail.applyPatches()\n \n+from . import gtbn\n+from . import publishing\n+from . import templatecookcheck  # Make sure templates aren\'t re-read in\n from . import z3c_form\n \n-from . import gtbn\n+\n+# production sites\ndiff --git a/Products/CMFPlone/patches/addzmiplonesite.py b/Products/CMFPlone/patches/addzmiplonesite.py\nindex 9bf09e93ce..922157ab20 100644\n--- a/Products/CMFPlone/patches/addzmiplonesite.py\n+++ b/Products/CMFPlone/patches/addzmiplonesite.py\n@@ -1,5 +1,6 @@\n from OFS.ObjectManager import ObjectManager\n \n+\n # FIXME: This no longer works with the new ZMI\n \n ADD_PLONE_SITE_HTML = \'\'\'\ndiff --git a/Products/CMFPlone/patches/addzmisecuritywarning.py b/Products/CMFPlone/patches/addzmisecuritywarning.py\nindex 373de8a3c7..edc8a821ab 100644\n--- a/Products/CMFPlone/patches/addzmisecuritywarning.py\n+++ b/Products/CMFPlone/patches/addzmisecuritywarning.py\n@@ -1,5 +1,6 @@\n from OFS.role import RoleManager\n \n+\n ADD_SECURITY_WARNING = \'\'\'\n <!-- Added security warning -->\n <dtml-unless expr="getattr(context, \'meta_type\') == \'Plone Site\' or \'PloneSite\' not in [o.__class__.__name__ for o in this().aq_chain]">\ndiff --git a/Products/CMFPlone/patches/csrf.py b/Products/CMFPlone/patches/csrf.py\nindex e93f68d5a0..fed69d0da3 100644\n--- a/Products/CMFPlone/patches/csrf.py\n+++ b/Products/CMFPlone/patches/csrf.py\n@@ -1,4 +1,6 @@\n-from plone.protect import protect, CheckAuthenticator\n+from plone.protect import CheckAuthenticator\n+from plone.protect import protect\n+\n \n # apply csrf-protection decorator to the given callable\n patch = protect(CheckAuthenticator)\n@@ -36,8 +38,9 @@ def setProperties(self, properties=None, REQUEST=None, **kw):\n     GroupsTool.removePrincipalFromGroup = patch(\n         GroupsTool.removePrincipalFromGroup)\n \n-    from Products.PluggableAuthService.PluggableAuthService import \\\n-        PluggableAuthService as PAS\n+    from Products.PluggableAuthService.PluggableAuthService import (\n+        PluggableAuthService as PAS,\n+    )\n     PAS.userFolderAddUser = patch(PAS.userFolderAddUser)\n     PAS.userFolderEditUser = patch(PAS.userFolderEditUser)\n     PAS.userFolderDelUsers = patch(PAS.userFolderDelUsers)\ndiff --git a/Products/CMFPlone/patches/dateIndexPatch.py b/Products/CMFPlone/patches/dateIndexPatch.py\nindex fe8c9d6188..f4b5b0a66d 100644\n--- a/Products/CMFPlone/patches/dateIndexPatch.py\n+++ b/Products/CMFPlone/patches/dateIndexPatch.py\n@@ -1,8 +1,9 @@\n # Avoid OverflowErrors in Date*Indexes\n \n+from DateTime import DateTime\n from Products.PluginIndexes.DateIndex.DateIndex import DateIndex\n from Products.PluginIndexes.DateRangeIndex.DateRangeIndex import DateRangeIndex\n-from DateTime import DateTime\n+\n \n maxDate = DateTime(4008, 0)\n \ndiff --git a/Products/CMFPlone/patches/gtbn.py b/Products/CMFPlone/patches/gtbn.py\nindex 5f358b1aad..f5855776ae 100644\n--- a/Products/CMFPlone/patches/gtbn.py\n+++ b/Products/CMFPlone/patches/gtbn.py\n@@ -1,4 +1,6 @@\n-from Acquisition import aq_parent, aq_base, aq_inner\n+from Acquisition import aq_base\n+from Acquisition import aq_inner\n+from Acquisition import aq_parent\n from Acquisition import IAcquirer\n from Products.CMFCore import utils\n from zope.globalrequest import getRequest\ndiff --git a/Products/CMFPlone/patches/publishing.py b/Products/CMFPlone/patches/publishing.py\nindex 340f372c33..5c86d0c274 100644\n--- a/Products/CMFPlone/patches/publishing.py\n+++ b/Products/CMFPlone/patches/publishing.py\n@@ -2,9 +2,9 @@\n # Plus extras for properties.\n # Plus Products.PloneHotfix20210518.\n from OFS.PropertyManager import PropertyManager\n-from Products.CMFPlone.Portal import PloneSite\n-from plone.dexterity.content import Item\n from plone.dexterity.content import Container\n+from plone.dexterity.content import Item\n+from Products.CMFPlone.Portal import PloneSite\n \n \n def delete_method_docstring(klass, method_name):\ndiff --git a/Products/CMFPlone/patches/sendmail.py b/Products/CMFPlone/patches/sendmail.py\nindex d699ceee01..5d048674f0 100644\n--- a/Products/CMFPlone/patches/sendmail.py\n+++ b/Products/CMFPlone/patches/sendmail.py\n@@ -1,5 +1,5 @@\n-from plone.registry.interfaces import IRegistry\n from plone.base.interfaces import IMailSchema\n+from plone.registry.interfaces import IRegistry\n from transaction._transaction import Status\n from zope.component import getUtility\n from zope.sendmail.mailer import _SMTPState\ndiff --git a/Products/CMFPlone/patches/speed.py b/Products/CMFPlone/patches/speed.py\nindex ad73b017d1..17297da87b 100644\n--- a/Products/CMFPlone/patches/speed.py\n+++ b/Products/CMFPlone/patches/speed.py\n@@ -1,5 +1,6 @@\n-from plone.memoize import forever\n from os import environ\n+from plone.memoize import forever\n+\n \n # Remember the installed products and packages (unless running tests)\n if not \'ZOPETESTCASE\' in environ:\n@@ -17,6 +18,8 @@ def new_init(*args, **kwargs):\n     return new_init\n \n from zope.tal.talinterpreter import TALInterpreter\n+\n+\n TALInterpreter.__init__ = wrap_init(TALInterpreter.__init__)\n \n \n@@ -30,4 +33,6 @@ def opaqueItems(self):\n     return ()\n \n from Products.CMFCore.CMFCatalogAware import OpaqueItemManager\n+\n+\n OpaqueItemManager.opaqueItems = opaqueItems\ndiff --git a/Products/CMFPlone/patches/templatecookcheck.py b/Products/CMFPlone/patches/templatecookcheck.py\nindex 4fdb35222f..e9255b1dad 100644\n--- a/Products/CMFPlone/patches/templatecookcheck.py\n+++ b/Products/CMFPlone/patches/templatecookcheck.py\n@@ -5,6 +5,7 @@\n \n from App.config import getConfiguration\n from zope.pagetemplate.pagetemplatefile import PageTemplateFile\n+\n import logging\n import os\n \ndiff --git a/Products/CMFPlone/patches/unicodeFallbackPatch.py b/Products/CMFPlone/patches/unicodeFallbackPatch.py\nindex 577108cb3f..fc3a186961 100644\n--- a/Products/CMFPlone/patches/unicodeFallbackPatch.py\n+++ b/Products/CMFPlone/patches/unicodeFallbackPatch.py\n@@ -10,15 +10,16 @@\n # Therefor these patches will probably stay here for quite a while.\n \n # import hacks\n-from .unicodehacks import new__call__\n from .unicodehacks import _nulljoin\n from .unicodehacks import _unicode_replace\n from .unicodehacks import FasterStringIO\n+from .unicodehacks import new__call__\n+from zope.pagetemplate import pagetemplate\n \n # import the poor victims of our monkey patches\n from zope.tal import talinterpreter\n from zope.tales import expressions\n-from zope.pagetemplate import pagetemplate\n+\n \n # Enable use of utf-8 text in tales inserts, until all code is changed to use\n # pure Unicode only. This will only work for sites with a portal encoding of\ndiff --git a/Products/CMFPlone/patches/unicodehacks.py b/Products/CMFPlone/patches/unicodehacks.py\nindex ab13277482..c6ebf7499f 100644\n--- a/Products/CMFPlone/patches/unicodehacks.py\n+++ b/Products/CMFPlone/patches/unicodehacks.py\n@@ -14,11 +14,11 @@ def _nulljoin(valuelist):\n \n def new__call__(self, econtext):\n     try:\n-        return self._expr % tuple([var(econtext) for var in self._vars])\n+        return self._expr % tuple(var(econtext) for var in self._vars)\n     except UnicodeDecodeError:\n         pass\n-    return self._expr % tuple([_unicode_replace(var(econtext))\n-                               for var in self._vars])\n+    return self._expr % tuple(_unicode_replace(var(econtext))\n+                               for var in self._vars)\n \n \n class FasterStringIO(list):\ndiff --git a/Products/CMFPlone/patterns/__init__.py b/Products/CMFPlone/patterns/__init__.py\nindex d55d4a7d11..77887c6779 100644\n--- a/Products/CMFPlone/patterns/__init__.py\n+++ b/Products/CMFPlone/patterns/__init__.py\n@@ -1,5 +1,6 @@\n from zope.deferredimport import deprecated\n \n+\n deprecated(\n     "Import from Products.CMFPlone.patterns.tinymce instead",\n     TinyMCESettingsGenerator="Products.CMFPlone.patterns.tinymce.TinyMCESettingsGenerator",  # noqa: E501\ndiff --git a/Products/CMFPlone/patterns/settings.py b/Products/CMFPlone/patterns/settings.py\nindex a8fe05d5a2..73fbfddd47 100644\n--- a/Products/CMFPlone/patterns/settings.py\n+++ b/Products/CMFPlone/patterns/settings.py\n@@ -4,13 +4,13 @@\n from plone.app.content.browser.interfaces import IFolderContentsView\n from plone.app.widgets.utils import get_relateditems_options\n from plone.app.z3cform.utils import call_callables\n-from plone.registry.interfaces import IRegistry\n-from plone.uuid.interfaces import IUUID\n-from Products.CMFCore.interfaces._content import IFolderish\n from plone.base.interfaces import IImagingSchema\n from plone.base.interfaces import ILinkSchema\n from plone.base.interfaces import IPatternsSettings\n from plone.base.interfaces import IPloneSiteRoot\n+from plone.registry.interfaces import IRegistry\n+from plone.uuid.interfaces import IUUID\n+from Products.CMFCore.interfaces._content import IFolderish\n from Products.CMFPlone.patterns.tinymce import TinyMCESettingsGenerator\n from Products.CMFPlone.utils import get_portal\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/patterns/tinymce.py b/Products/CMFPlone/patterns/tinymce.py\nindex 2e9a1185ca..6b005593c0 100644\n--- a/Products/CMFPlone/patterns/tinymce.py\n+++ b/Products/CMFPlone/patterns/tinymce.py\n@@ -1,12 +1,12 @@\n from lxml import html\n from plone.app.layout.navigation.root import getNavigationRootObject\n from plone.app.theming.utils import theming_policy\n-from plone.registry.interfaces import IRegistry\n-from Products.CMFCore.utils import getToolByName\n from plone.base.interfaces import IFilterSchema\n from plone.base.interfaces import ITinyMCESchema\n-from Products.CMFPlone.utils import get_portal\n from plone.base.utils import safe_text\n+from plone.registry.interfaces import IRegistry\n+from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone.utils import get_portal\n from zope.component import getUtility\n \n import json\ndiff --git a/Products/CMFPlone/permissions.py b/Products/CMFPlone/permissions.py\nindex 4230ff54eb..27b024b1de 100644\n--- a/Products/CMFPlone/permissions.py\n+++ b/Products/CMFPlone/permissions.py\n@@ -1,3 +1,4 @@\n from zope.deprecation import moved\n \n-moved(\'plone.base.permissions\', \'Version 7.0\')\n\\ No newline at end of file\n+\n+moved(\'plone.base.permissions\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/relationhelper.py b/Products/CMFPlone/relationhelper.py\nindex da92cccb97..14b4c37c9e 100644\n--- a/Products/CMFPlone/relationhelper.py\n+++ b/Products/CMFPlone/relationhelper.py\n@@ -26,6 +26,7 @@\n import logging\n import pkg_resources\n \n+\n try:\n     # "iterate" is not a dependency of CMFPlone, but a consumer of it\n     pkg_resources.get_distribution("plone.app.iterate")\n@@ -62,7 +63,7 @@ def get_relations_stats():\n             rel = relation_catalog.resolveRelationToken(token)\n         except ObjectMissingError:\n             broken[\'Object is missing\'] += 1\n-            logger.info(\'Token {} has no object.\'.format(token))\n+            logger.info(f\'Token {token} has no object.\')\n             continue\n \n         if rel.isBroken():\n@@ -84,7 +85,7 @@ def get_all_relations():\n         try:\n             rel = relation_catalog.resolveRelationToken(token)\n         except ObjectMissingError:\n-            logger.info(\'Token {} has no object.\'.format(token))\n+            logger.info(f\'Token {token} has no object.\')\n             continue\n \n         if rel.from_object and rel.to_object:\ndiff --git a/Products/CMFPlone/resources/utils.py b/Products/CMFPlone/resources/utils.py\nindex 3409e53549..e72f9553fe 100644\n--- a/Products/CMFPlone/resources/utils.py\n+++ b/Products/CMFPlone/resources/utils.py\n@@ -30,7 +30,7 @@ def get_production_resource_directory():\n     timestamp = production_folder.readFile("timestamp.txt")\n     if isinstance(timestamp, bytes):\n         timestamp = timestamp.decode()\n-    return "{}/++unique++{}".format(PRODUCTION_RESOURCE_DIRECTORY, timestamp)\n+    return f"{PRODUCTION_RESOURCE_DIRECTORY}/++unique++{timestamp}"\n \n \n def get_resource(context, path):\ndiff --git a/Products/CMFPlone/setuphandlers.py b/Products/CMFPlone/setuphandlers.py\nindex 9bc454e82a..0f97284c92 100644\n--- a/Products/CMFPlone/setuphandlers.py\n+++ b/Products/CMFPlone/setuphandlers.py\n@@ -1,14 +1,15 @@\n from Acquisition import aq_base\n-from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.factory import _DEFAULT_PROFILE\n+from borg.localrole.utils import replace_local_role_manager\n from plone.base.interfaces import IMigrationTool\n from plone.base.interfaces.resources import OVERRIDE_RESOURCE_DIRECTORY_NAME\n-from Products.StandardCacheManagers.AcceleratedHTTPCacheManager \\\n-    import AcceleratedHTTPCacheManager\n-from Products.StandardCacheManagers.RAMCacheManager import RAMCacheManager\n-from borg.localrole.utils import replace_local_role_manager\n from plone.registry.interfaces import IRegistry\n from plone.resource.interfaces import IResourceDirectory\n+from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone.factory import _DEFAULT_PROFILE\n+from Products.StandardCacheManagers.AcceleratedHTTPCacheManager import (\n+    AcceleratedHTTPCacheManager,\n+)\n+from Products.StandardCacheManagers.RAMCacheManager import RAMCacheManager\n from zope.component import getUtility\n from zope.component import queryUtility\n from zope.component.hooks import getSite\ndiff --git a/Products/CMFPlone/skins/plone_scripts/externalEditorEnabled.py b/Products/CMFPlone/skins/plone_scripts/externalEditorEnabled.py\nindex ad62e1c912..a2c953f854 100644\n--- a/Products/CMFPlone/skins/plone_scripts/externalEditorEnabled.py\n+++ b/Products/CMFPlone/skins/plone_scripts/externalEditorEnabled.py\n@@ -10,6 +10,7 @@\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.utils import webdav_enabled\n \n+\n portal = getToolByName(context, \'portal_url\').getPortalObject()\n mtool = getToolByName(portal, \'portal_membership\')\n \ndiff --git a/Products/CMFPlone/skins/plone_scripts/external_edit.py b/Products/CMFPlone/skins/plone_scripts/external_edit.py\nindex c962afdd14..6e61312ab3 100644\n--- a/Products/CMFPlone/skins/plone_scripts/external_edit.py\n+++ b/Products/CMFPlone/skins/plone_scripts/external_edit.py\n@@ -9,6 +9,7 @@\n \n from Products.PythonScripts.standard import url_quote\n \n+\n request = context.REQUEST\n \n if \'Mac OS X\' in request.get(\'HTTP_USER_AGENT\', \'\'):\ndiff --git a/Products/CMFPlone/skins/plone_scripts/getFolderContents.py b/Products/CMFPlone/skins/plone_scripts/getFolderContents.py\nindex 4bfa9d5d17..f60a08c8b1 100644\n--- a/Products/CMFPlone/skins/plone_scripts/getFolderContents.py\n+++ b/Products/CMFPlone/skins/plone_scripts/getFolderContents.py\n@@ -11,6 +11,8 @@\n #       @@folderListing in plone.app.contentlisting\n \n from zExceptions import Forbidden\n+\n+\n if container.REQUEST.get(\'PUBLISHED\') is script:\n     raise Forbidden(\'Script may not be published.\')\n \ndiff --git a/Products/CMFPlone/skins/plone_scripts/queryCatalog.py b/Products/CMFPlone/skins/plone_scripts/queryCatalog.py\nindex 12d3b5678e..dce2c90911 100644\n--- a/Products/CMFPlone/skins/plone_scripts/queryCatalog.py\n+++ b/Products/CMFPlone/skins/plone_scripts/queryCatalog.py\n@@ -7,10 +7,11 @@\n ##parameters=REQUEST=None,show_all=0,quote_logic=0,quote_logic_indexes=[\'SearchableText\',\'Description\',\'Title\'],use_types_blacklist=False,show_inactive=False,use_navigation_root=False\n ##title=wraps the portal_catalog with a rules qualified query\n \n-from ZODB.POSException import ConflictError\n-from Products.ZCTextIndex.ParseTree import ParseError\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.browser.navtree import getNavigationRoot\n+from Products.ZCTextIndex.ParseTree import ParseError\n+from ZODB.POSException import ConflictError\n+\n \n results = []\n catalog = context.portal_catalog\ndiff --git a/Products/CMFPlone/skins/plone_scripts/translate.py b/Products/CMFPlone/skins/plone_scripts/translate.py\nindex 7443e29203..e1d19bc95b 100644\n--- a/Products/CMFPlone/skins/plone_scripts/translate.py\n+++ b/Products/CMFPlone/skins/plone_scripts/translate.py\n@@ -7,6 +7,8 @@\n ##parameters=msgid, mapping={}, default=None, domain=\'plone\', target_language=None, escape_for_js=False\n \n from zExceptions import Forbidden\n+\n+\n if container.REQUEST.get(\'PUBLISHED\') is script:\n     raise Forbidden(\'Script may not be published.\')\n \n@@ -17,6 +19,7 @@\n \n from Products.CMFCore.utils import getToolByName\n \n+\n # get tool\n tool = getToolByName(context, \'translation_service\')\n \ndiff --git a/Products/CMFPlone/skins/plone_scripts/utranslate.py b/Products/CMFPlone/skins/plone_scripts/utranslate.py\nindex bb2f782940..e7cb75e147 100644\n--- a/Products/CMFPlone/skins/plone_scripts/utranslate.py\n+++ b/Products/CMFPlone/skins/plone_scripts/utranslate.py\n@@ -7,6 +7,8 @@\n ##parameters=msgid, mapping={}, default=None, domain=\'plone\', target_language=None, escape_for_js=False\n \n from zExceptions import Forbidden\n+\n+\n if container.REQUEST.get(\'PUBLISHED\') is script:\n     raise Forbidden(\'Script may not be published.\')\n \n@@ -17,6 +19,7 @@\n \n from Products.CMFCore.utils import getToolByName\n \n+\n # get tool\n tool = getToolByName(context, \'translation_service\')\n \ndiff --git a/Products/CMFPlone/testing.py b/Products/CMFPlone/testing.py\nindex 49548c9595..b65165f6fe 100644\n--- a/Products/CMFPlone/testing.py\n+++ b/Products/CMFPlone/testing.py\n@@ -8,6 +8,7 @@\n from plone.app.testing import PloneSandboxLayer\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n+from plone.app.testing import TEST_USER_PASSWORD\n from plone.app.testing.layers import FunctionalTesting\n from plone.app.testing.layers import IntegrationTesting\n from plone.testing import zope\n@@ -40,7 +41,7 @@ def setUpZope(self, app, configurationContext):\n     def setUpPloneSite(self, portal):\n         portal.acl_users.userFolderAddUser(\n             \'admin\',\n-            \'secret\',\n+            TEST_USER_PASSWORD,\n             [\'Manager\'],\n             []\n         )\ndiff --git a/Products/CMFPlone/tests/LoginAndLogout.rst b/Products/CMFPlone/tests/LoginAndLogout.rst\nindex 0245fc5a15..ecae01adf1 100644\n--- a/Products/CMFPlone/tests/LoginAndLogout.rst\n+++ b/Products/CMFPlone/tests/LoginAndLogout.rst\n@@ -115,11 +115,11 @@ A user defined in the root user folder should be able to log in into\n the site:\n \n     >>> browser.getLink(\'Home\').click()\n-    >>> app.acl_users.userFolderAddUser(\'rootuser\', \'secret\', [], [])\n+    >>> app.acl_users.userFolderAddUser(\'rootuser\', TEST_USER_PASSWORD, [], [])\n     >>> transaction.commit()\n     >>> browser.open(\'http://nohost/plone/login_form\')\n     >>> browser.getControl(\'Login Name\').value = \'rootuser\'\n-    >>> browser.getControl(\'Password\').value = \'secret\'\n+    >>> browser.getControl(\'Password\').value = TEST_USER_PASSWORD\n     >>> browser.getControl(\'Log in\').click()\n     >>> \'You are now logged in\' in browser.contents\n     True\ndiff --git a/Products/CMFPlone/tests/PloneTestCase.py b/Products/CMFPlone/tests/PloneTestCase.py\nindex 3e78448490..adaab0fc59 100644\n--- a/Products/CMFPlone/tests/PloneTestCase.py\n+++ b/Products/CMFPlone/tests/PloneTestCase.py\n@@ -1,14 +1,15 @@\n-from plone.testing.zope import Browser\n-from plone.app.testing.bbb import PloneTestCase\n from plone.app.testing import PLONE_SITE_ID as portal_name\n from plone.app.testing import TEST_USER_ID as default_user\n from plone.app.testing import TEST_USER_NAME\n from plone.app.testing import TEST_USER_PASSWORD as default_password\n-\n+from plone.app.testing.bbb import PloneTestCase\n from plone.protect.authenticator import AuthenticatorView\n+from plone.testing.zope import Browser\n from re import match\n+\n import transaction\n \n+\n # We do not use these, but someone might import them.\n portal_name, default_user  # pyflakes\n \ndiff --git a/Products/CMFPlone/tests/csrf.txt b/Products/CMFPlone/tests/csrf.txt\nindex b5f8e22098..f03dbbb376 100644\n--- a/Products/CMFPlone/tests/csrf.txt\n+++ b/Products/CMFPlone/tests/csrf.txt\n@@ -98,8 +98,8 @@ be able to add new users himself if he wishes so:\n   >>> browser.getControl(\'Full Name\').value = \'John Doe\'\n   >>> browser.getControl(\'User Name\').value = \'john\'\n   >>> browser.getControl(\'Email\').value = \'john@foo-security.com\'\n-  >>> browser.getControl(\'Password\').value = \'y0d4Wg\'\n-  >>> browser.getControl(\'Confirm password\').value = \'y0d4Wg\'\n+  >>> browser.getControl(\'Password\').value = \'correct horse battery staple\'\n+  >>> browser.getControl(\'Confirm password\').value = \'correct horse battery staple\'\n   >>> browser.getControl(\'Register\').click()\n   >>> \'User added.\' in browser.contents\n   True\n@@ -145,17 +145,17 @@ know the current passwort to exploit this, but we\'ll check nevertheless:\n \n   >>> browser.open(\'http://nohost/plone/@@change-password\')\n   >>> browser.getControl(\'Current password\').value = TEST_USER_PASSWORD\n-  >>> browser.getControl(\'New password\').value = \'y0d4Wg\'\n-  >>> browser.getControl(\'Confirm password\').value = \'y0d4Wg\'\n+  >>> browser.getControl(\'New password\').value = \'new password\'\n+  >>> browser.getControl(\'Confirm password\').value = \'new password\'\n   >>> browser.getControl(\'Change Password\').click()\n   >>> browser.contents\n   \'...Info...Password changed...\'\n \n   >>> browser.goBack()\n   >>> browser.getControl(name=\'_authenticator\', index=0).value = \'invalid!\'\n-  >>> browser.getControl(\'Current password\').value = \'y0d4Wg\'\n-  >>> browser.getControl(\'New password\').value = \'y0d4Wg!\'\n-  >>> browser.getControl(\'Confirm password\').value = \'y0d4Wg!\'\n+  >>> browser.getControl(\'Current password\').value = \'new password\'\n+  >>> browser.getControl(\'New password\').value = \'newer password\'\n+  >>> browser.getControl(\'Confirm password\').value = \'newer password\'\n   >>> browser.getControl(\'Change Password\').click()\n   Traceback (most recent call last):\n   ...\n@@ -201,8 +201,8 @@ anymore (which at the same time tests the security control panel):\n   >>> browser.getLink(\'Add New User\').click()\n   >>> browser.getControl(\'User Name\').value = \'johnny\'\n   >>> browser.getControl(\'Email\').value = \'john@foo-security.com\'\n-  >>> browser.getControl(\'Password\').value = \'y0d4Wg!\'\n-  >>> browser.getControl(\'Confirm password\').value = \'y0d4Wg!\'\n+  >>> browser.getControl(\'Password\').value = TEST_USER_PASSWORD\n+  >>> browser.getControl(\'Confirm password\').value = TEST_USER_PASSWORD\n   >>> browser.getControl(\'Register\').click()\n   >>> browser.contents\n   \'...Info...User added...\'\n@@ -423,12 +423,12 @@ limitations, which is why we need to log in as the portal owner first:\n \n   >>> app_browser = Browser(app)\n   >>> app_browser.handleErrors = False\n-  >>> app.acl_users.userFolderAddUser(\'app\', \'secret\', [\'Manager\'], [])\n+  >>> app.acl_users.userFolderAddUser(\'app\', TEST_USER_PASSWORD, [\'Manager\'], [])\n   >>> from plone.testing import zope\n   >>> zope.logout()\n   >>> zope.login(app[\'acl_users\'], \'app\')\n   >>> import transaction; transaction.commit()\n-  >>> app_browser.addHeader(\'Authorization\', \'Basic app:secret\')\n+  >>> app_browser.addHeader(\'Authorization\', f\'Basic app:{TEST_USER_PASSWORD}\')\n   >>> app_browser.open(\'http://nohost/plone/@@overview-controlpanel\')\n   >>> app_browser.getLink(\'Maintenance\').click()\n   >>> app_browser.getControl(name=\'_authenticator\', index=0).value = \'invalid!\'\ndiff --git a/Products/CMFPlone/tests/dummy.py b/Products/CMFPlone/tests/dummy.py\nindex e80bf009b4..15a48a1279 100644\n--- a/Products/CMFPlone/tests/dummy.py\n+++ b/Products/CMFPlone/tests/dummy.py\n@@ -2,11 +2,11 @@\n # Helper objects for the Plone test suite\n #\n from ComputedAttribute import ComputedAttribute\n+from io import BytesIO\n from OFS.Folder import Folder as SimpleFolder\n from OFS.SimpleItem import SimpleItem\n from plone.base.interfaces import INonStructuralFolder\n from plone.base.interfaces import IWorkflowChain\n-from io import BytesIO\n from zope.interface import implementer\n from zope.interface import Interface\n from ZPublisher.HTTPRequest import FileUpload\ndiff --git a/Products/CMFPlone/tests/pwreset_browser.rst b/Products/CMFPlone/tests/pwreset_browser.rst\nindex da70832d02..795e781d95 100644\n--- a/Products/CMFPlone/tests/pwreset_browser.rst\n+++ b/Products/CMFPlone/tests/pwreset_browser.rst\n@@ -127,8 +127,8 @@ Now register a new user:\n \n   >>> browser.getControl(\'User Name\').value = \'jsmith\'\n   >>> browser.getControl(\'Email\').value = \'jsmith@example.com\'\n-  >>> browser.getControl(\'Password\').value = \'secret\'\n-  >>> browser.getControl(\'Confirm password\').value = \'secret\'\n+  >>> browser.getControl(\'Password\').value = TEST_USER_PASSWORD\n+  >>> browser.getControl(\'Confirm password\').value = TEST_USER_PASSWORD\n   >>> browser.getControl(\'Register\').click()\n \n XXX Make sure we don\'t have a way to receive our credentials via\n@@ -143,7 +143,7 @@ We are not logged in yet at this point.  Let\'s try to log in:\n   >>> browser.url.startswith(\'http://nohost/plone/login\')\n   True\n   >>> browser.getControl(name=\'__ac_name\').value = \'jsmith\'\n-  >>> browser.getControl(name=\'__ac_password\').value = \'secret\'\n+  >>> browser.getControl(name=\'__ac_password\').value = TEST_USER_PASSWORD\n   >>> browser.getControl(name=\'buttons.login\').click()\n   >>> "You are now logged in" in browser.contents\n   True\n@@ -168,7 +168,7 @@ We check if the old password still works.\n \n   >>> browser.open(\'http://nohost/plone/login\')\n   >>> browser.getControl(name=\'__ac_name\').value = \'jsmith\'\n-  >>> browser.getControl(name=\'__ac_password\').value = \'secret\'\n+  >>> browser.getControl(name=\'__ac_password\').value = TEST_USER_PASSWORD\n   >>> browser.getControl(name=\'buttons.login\').click()\n \n We should be logged in now:\n@@ -377,7 +377,7 @@ Log out again and then join:\n \n We shouldn\'t be able to fill in our password:\n \n-  >>> browser.getControl(\'Password\').value = \'secret\' # doctest: +ELLIPSIS\n+  >>> browser.getControl(\'Password\').value = TEST_USER_PASSWORD # doctest: +ELLIPSIS\n   Traceback (most recent call last):\n   ...\n   LookupError: label \'Password\'\n@@ -425,8 +425,8 @@ Now that we have the address, we will reset our password:\n   >>> "Please fill out the form below to set your password" in browser.contents\n   True\n   >>> browser.getControl(name=\'userid\').value = \'bsmith\'\n-  >>> browser.getControl(name=\'password\').value = \'secret\'\n-  >>> browser.getControl(name=\'password2\').value = \'secret\'\n+  >>> browser.getControl(name=\'password\').value = TEST_USER_PASSWORD\n+  >>> browser.getControl(name=\'password2\').value = TEST_USER_PASSWORD\n   >>> browser.getControl("Set my password").click()\n   >>> "Password reset successful, you are logged in now!" in browser.contents\n   True\n@@ -471,8 +471,8 @@ We navigate to the Users Adding page and register a new user:\n   >>> browser.open(\'http://nohost/plone/@@new-user\')\n   >>> browser.getControl(\'User Name\').value = \'wwwsmith\'\n   >>> browser.getControl(\'Email\').value = \'wwwsmith@example.com\'\n-  >>> browser.getControl(\'Password\').value = \'secret\'\n-  >>> browser.getControl(\'Confirm password\').value = \'secret\'\n+  >>> browser.getControl(\'Password\').value = TEST_USER_PASSWORD\n+  >>> browser.getControl(\'Confirm password\').value = TEST_USER_PASSWORD\n   >>> browser.getControl(\'Send a confirmation mail with a link to set the password\').selected = True\n \n Now register and logout:\ndiff --git a/Products/CMFPlone/tests/robot/robot_setup.py b/Products/CMFPlone/tests/robot/robot_setup.py\nindex ae9760f5da..8f0c6adb44 100644\n--- a/Products/CMFPlone/tests/robot/robot_setup.py\n+++ b/Products/CMFPlone/tests/robot/robot_setup.py\n@@ -1,10 +1,9 @@\n from plone.app.robotframework.remote import RemoteLibrary\n from plone.app.robotframework.utils import disableCSRFProtection\n-\n-from zope.component import queryUtility\n-from plone.registry.interfaces import IRegistry\n from plone.base.interfaces import IMailSchema\n from plone.base.interfaces import ISecuritySchema\n+from plone.registry.interfaces import IRegistry\n+from zope.component import queryUtility\n \n \n class CMFPloneRemoteKeywords(RemoteLibrary):\ndiff --git a/Products/CMFPlone/tests/robot/test_overlays.robot b/Products/CMFPlone/tests/robot/test_overlays.robot\nindex 83070070fc..b8fca6d3d9 100644\n--- a/Products/CMFPlone/tests/robot/test_overlays.robot\n+++ b/Products/CMFPlone/tests/robot/test_overlays.robot\n@@ -272,8 +272,8 @@ I enter valid user data\n     Wait until page contains element  name=form.widgets.password_ctl\n     Input text for sure  form.widgets.username       myuser\n     Input text for sure  form.widgets.email          my@email.eu\n-    Input text for sure  form.widgets.password       123123\n-    Input text for sure  form.widgets.password_ctl   123123\n+    Input text for sure  form.widgets.password       newpassword\n+    Input text for sure  form.widgets.password_ctl   newpassword\n \n I enter valid register user data\n     Wait until page contains element  name=form.widgets.username\ndiff --git a/Products/CMFPlone/tests/robot/variables.py b/Products/CMFPlone/tests/robot/variables.py\nindex a32e833f5f..b45dd82498 100644\n--- a/Products/CMFPlone/tests/robot/variables.py\n+++ b/Products/CMFPlone/tests/robot/variables.py\n@@ -1,3 +1,4 @@\n import os\n \n+\n PATH_TO_TEST_FILES = os.path.join(os.path.dirname(__file__))  # noqa\ndiff --git a/Products/CMFPlone/tests/search_form.rst b/Products/CMFPlone/tests/search_form.rst\nindex 466e1a97c8..4777363743 100644\n--- a/Products/CMFPlone/tests/search_form.rst\n+++ b/Products/CMFPlone/tests/search_form.rst\n@@ -3,6 +3,7 @@ We want to test the search form and the resulting page.\n Let\'s create a user to test upon\n see: testControlPanelScripts.txt:\n     >>> from DateTime import DateTime\n+    >>> from plone.app.testing import TEST_USER_PASSWORD\n     >>> app = layer[\'app\']\n     >>> portal = layer[\'portal\']\n     >>> fullname = \'Test User Full Name\'\n@@ -10,7 +11,7 @@ see: testControlPanelScripts.txt:\n     >>> email = \'test@plone.org\'\n     >>> last_login_time = DateTime()\n     >>> membership = portal.portal_membership\n-    >>> membership.addMember(username, \'secret\', [], [])\n+    >>> membership.addMember(username, TEST_USER_PASSWORD, [], [])\n     >>> member = membership.getMemberById(username)\n     >>> member.setMemberProperties({\'fullname\': fullname, \'email\': email,\n     ...                             \'last_login_time\': last_login_time,})\ndiff --git a/Products/CMFPlone/tests/testActionsTool.py b/Products/CMFPlone/tests/testActionsTool.py\nindex 8bcaed7d3a..1d6870ce6f 100644\n--- a/Products/CMFPlone/tests/testActionsTool.py\n+++ b/Products/CMFPlone/tests/testActionsTool.py\n@@ -1,6 +1,7 @@\n from Acquisition import Explicit\n from OFS.SimpleItem import Item\n from plone.app.testing import login\n+from plone.app.testing import TEST_USER_PASSWORD\n from Products.CMFCore.ActionInformation import Action\n from Products.CMFCore.ActionInformation import ActionInfo\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n@@ -23,7 +24,7 @@ class TestActionsTool(unittest.TestCase):\n     def setUp(self):\n         self.portal = self.layer[\'portal\']\n         self.actions = self.portal.portal_actions\n-        self.portal.acl_users._doAddUser(\'user1\', \'secret\', [\'Member\'], [])\n+        self.portal.acl_users._doAddUser(\'user1\', TEST_USER_PASSWORD, [\'Member\'], [])\n         self.portal.invokeFactory(\'Folder\', \'f1\')\n         self.folder = self.portal[\'f1\']\n \ndiff --git a/Products/CMFPlone/tests/testBatch.py b/Products/CMFPlone/tests/testBatch.py\nindex f892192e5d..1e2c70e734 100644\n--- a/Products/CMFPlone/tests/testBatch.py\n+++ b/Products/CMFPlone/tests/testBatch.py\n@@ -2,6 +2,7 @@\n \n import unittest\n \n+\n class TestBatchIntegration(unittest.TestCase):\n \n     layer = PRODUCTS_CMFPLONE_INTEGRATION_TESTING\ndiff --git a/Products/CMFPlone/tests/testBrowserLayerPrecedence.py b/Products/CMFPlone/tests/testBrowserLayerPrecedence.py\nindex f8d90b229f..e11c0bd5af 100644\n--- a/Products/CMFPlone/tests/testBrowserLayerPrecedence.py\n+++ b/Products/CMFPlone/tests/testBrowserLayerPrecedence.py\n@@ -3,12 +3,12 @@\n # add-on products (a la plone.browserlayer).\n \n from plone.app.testing.bbb import PloneTestCase\n-\n+from plone.browserlayer.utils import register_layer\n+from plone.browserlayer.utils import unregister_layer\n from zope.event import notify\n from zope.interface import Interface\n from zope.publisher.interfaces.browser import IDefaultBrowserLayer\n from zope.traversing.interfaces import BeforeTraverseEvent\n-from plone.browserlayer.utils import register_layer, unregister_layer\n \n \n class IAdditiveLayer(Interface):\ndiff --git a/Products/CMFPlone/tests/testCSRFProtection.py b/Products/CMFPlone/tests/testCSRFProtection.py\nindex fd0d7afb6b..704300b4e7 100644\n--- a/Products/CMFPlone/tests/testCSRFProtection.py\n+++ b/Products/CMFPlone/tests/testCSRFProtection.py\n@@ -1,10 +1,10 @@\n+from io import BytesIO\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import TEST_USER_NAME\n from plone.app.testing import TEST_USER_PASSWORD\n from plone.app.testing.bbb import PloneTestCase\n from plone.keyring.interfaces import IKeyManager\n from plone.protect.authenticator import AuthenticatorView\n-from io import BytesIO\n from zope.component import queryUtility\n \n \n@@ -50,13 +50,13 @@ def test_PloneTool_renameObjectsByPaths(self):\n     def test_RegistrationTool_editMember(self):\n         self.checkAuthenticator(\n             \'/portal_registration/editMember\',\n-            \'member_id=%s&password=y0d4Wg&properties.foo:record=\' % (\n+            \'member_id=%s&password=correct+horse+battery+staple&properties.foo:record=\' % (\n                 TEST_USER_ID))\n \n     def test_MembershipTool_setPassword(self):\n         self.checkAuthenticator(\n             \'/portal_membership/setPassword\',\n-            \'password=y0d4Wg\',\n+            \'password=correct+horse+battery+staple\',\n             status=204)\n \n     def test_MembershipTool_deleteMemberArea(self):\ndiff --git a/Products/CMFPlone/tests/testCatalogTool.py b/Products/CMFPlone/tests/testCatalogTool.py\nindex 50ab21231a..909e7f9178 100644\n--- a/Products/CMFPlone/tests/testCatalogTool.py\n+++ b/Products/CMFPlone/tests/testCatalogTool.py\n@@ -5,6 +5,7 @@\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import TEST_USER_NAME\n+from plone.app.testing import TEST_USER_PASSWORD\n from plone.app.textfield import RichTextValue\n from plone.dexterity.content import CEILING_DATE\n from plone.indexer.wrapper import IndexableObjectWrapper\n@@ -365,7 +366,7 @@ def afterSetUp(self):\n         self.workflow = self.portal.portal_workflow\n         self.groups = self.portal.portal_groups\n \n-        self.portal.acl_users._doAddUser(user2, \'secret\', [], [])\n+        self.portal.acl_users._doAddUser(user2, TEST_USER_PASSWORD, [], [])\n \n         self.folder.invokeFactory(\'Document\', id=\'doc\', text=\'foo\')\n         self.folder.invokeFactory(\'Folder\', id=\'folder2\')\n@@ -1016,7 +1017,7 @@ def afterSetUp(self):\n         self.folder.invokeFactory(\'Document\', id=\'doc\')\n \n         # Create unprivileged user\n-        self.portal.acl_users._doAddUser(user2, \'secret\', [\'Member\'], [])\n+        self.portal.acl_users._doAddUser(user2, TEST_USER_PASSWORD, [\'Member\'], [])\n \n     def nofx(self):\n         # Removes effective and expires to make sure we only test\n@@ -1324,8 +1325,8 @@ def test_is_folderishWithNonStructuralFolder(self):\n         self.assertFalse(is_folderish(f)())\n \n     def test_provided(self):\n-        from Products.CMFCore.interfaces import IContentish\n         from plone.indexer.interfaces import IIndexableObjectWrapper\n+        from Products.CMFCore.interfaces import IContentish\n         from Products.CMFCore.tests.base.dummy import DummyContent\n \n         obj = DummyContent()\ndiff --git a/Products/CMFPlone/tests/testContentSecurity.py b/Products/CMFPlone/tests/testContentSecurity.py\nindex 5d8945cd30..aea5cc0e2a 100644\n--- a/Products/CMFPlone/tests/testContentSecurity.py\n+++ b/Products/CMFPlone/tests/testContentSecurity.py\n@@ -1,5 +1,6 @@\n from AccessControl import Unauthorized\n from Acquisition import aq_base\n+from plone.app.testing import TEST_USER_PASSWORD\n from Products.CMFPlone.tests.PloneTestCase import PloneTestCase\n from zExceptions.unauthorized import Unauthorized as zUnauthorized\n from zope.component import getMultiAdapter\n@@ -9,10 +10,10 @@ class TestContentSecurity(PloneTestCase):\n \n     def afterSetUp(self):\n         self.request = self.layer["request"]\n-        self.portal.acl_users._doAddUser(\'user1\', \'secret\', [\'Member\'], [])\n-        self.portal.acl_users._doAddUser(\'user2\', \'secret\', [\'Member\'], [])\n+        self.portal.acl_users._doAddUser(\'user1\', TEST_USER_PASSWORD, [\'Member\'], [])\n+        self.portal.acl_users._doAddUser(\'user2\', TEST_USER_PASSWORD, [\'Member\'], [])\n         #_ender_\'s member who\'s not a Member usecase\n-        self.portal.acl_users._doAddUser(\'user3\', \'secret\', [], [])\n+        self.portal.acl_users._doAddUser(\'user3\', TEST_USER_PASSWORD, [], [])\n         self.membership = self.portal.portal_membership\n         self.workflow = self.portal.portal_workflow\n         self.createMemberarea(\'user1\')\ndiff --git a/Products/CMFPlone/tests/testContentTypeScripts.py b/Products/CMFPlone/tests/testContentTypeScripts.py\nindex 0a0b5207c6..d29e5e6b36 100644\n--- a/Products/CMFPlone/tests/testContentTypeScripts.py\n+++ b/Products/CMFPlone/tests/testContentTypeScripts.py\n@@ -2,8 +2,9 @@\n from plone.app.textfield import RichTextValue\n from plone.namedfile.file import NamedFile\n from plone.namedfile.file import NamedImage\n-from Products.CMFPlone.tests import PloneTestCase\n from Products.CMFPlone.tests import dummy\n+from Products.CMFPlone.tests import PloneTestCase\n+\n \n AddPortalTopics = "Add portal topics"\n \ndiff --git a/Products/CMFPlone/tests/testCookieAuth.py b/Products/CMFPlone/tests/testCookieAuth.py\nindex 98071cc2be..9c57d1fd2d 100644\n--- a/Products/CMFPlone/tests/testCookieAuth.py\n+++ b/Products/CMFPlone/tests/testCookieAuth.py\n@@ -6,6 +6,7 @@\n \n import unittest\n \n+\n try:\n     from base64 import encodebytes\n except ImportError:\ndiff --git a/Products/CMFPlone/tests/testCutPasteSecurity.py b/Products/CMFPlone/tests/testCutPasteSecurity.py\nindex d2eb66e2a5..bf99c6252e 100644\n--- a/Products/CMFPlone/tests/testCutPasteSecurity.py\n+++ b/Products/CMFPlone/tests/testCutPasteSecurity.py\n@@ -1,22 +1,22 @@\n from AccessControl import Unauthorized\n from Acquisition import aq_base\n from OFS.CopySupport import CopyError\n-from Products.CMFPlone.tests.PloneTestCase import PloneTestCase\n+from plone.app.testing import TEST_USER_PASSWORD\n from Products.CMFCore.interfaces import IContentish\n-from zope.component import provideHandler, getGlobalSiteManager\n-from zope.lifecycleevent.interfaces import IObjectMovedEvent\n+from Products.CMFPlone.tests.PloneTestCase import PloneTestCase\n from urllib.error import HTTPError\n+from zope.component import getGlobalSiteManager\n+from zope.component import provideHandler\n+from zope.lifecycleevent.interfaces import IObjectMovedEvent\n \n import transaction\n \n \n-\n-\n class TestCutPasteSecurity(PloneTestCase):\n \n     def afterSetUp(self):\n-        self.portal.acl_users._doAddUser(\'user1\', \'secret\', [\'Member\'], [])\n-        self.portal.acl_users._doAddUser(\'user2\', \'secret\', [\'Member\'], [])\n+        self.portal.acl_users._doAddUser(\'user1\', TEST_USER_PASSWORD, [\'Member\'], [])\n+        self.portal.acl_users._doAddUser(\'user2\', TEST_USER_PASSWORD, [\'Member\'], [])\n         self.membership = self.portal.portal_membership\n         self.createMemberarea(\'user1\')\n         self.createMemberarea(\'user2\')\ndiff --git a/Products/CMFPlone/tests/testDateIndexRanges.py b/Products/CMFPlone/tests/testDateIndexRanges.py\nindex a1954f49c6..1028b54c00 100644\n--- a/Products/CMFPlone/tests/testDateIndexRanges.py\n+++ b/Products/CMFPlone/tests/testDateIndexRanges.py\n@@ -1,6 +1,5 @@\n-from Products.CMFPlone.tests import PloneTestCase\n-\n from DateTime import DateTime\n+from Products.CMFPlone.tests import PloneTestCase\n \n \n class TestDateIndexRanges(PloneTestCase.PloneTestCase):\ndiff --git a/Products/CMFPlone/tests/testDateTimeIntegration.py b/Products/CMFPlone/tests/testDateTimeIntegration.py\nindex 15d39b5f68..b3bafc9503 100644\n--- a/Products/CMFPlone/tests/testDateTimeIntegration.py\n+++ b/Products/CMFPlone/tests/testDateTimeIntegration.py\n@@ -8,8 +8,8 @@\n # for more information about this.  please also note that these tests\n # may produce false positives when run in the GMT time zone!\n \n-from Products.CMFPlone.tests.PloneTestCase import PloneTestCase\n from DateTime import DateTime\n+from Products.CMFPlone.tests.PloneTestCase import PloneTestCase\n from zope.event import notify\n from zope.lifecycleevent import ObjectModifiedEvent\n \ndiff --git a/Products/CMFPlone/tests/testEmailLogin.py b/Products/CMFPlone/tests/testEmailLogin.py\nindex 075b3bc6b8..0e12786f3c 100644\n--- a/Products/CMFPlone/tests/testEmailLogin.py\n+++ b/Products/CMFPlone/tests/testEmailLogin.py\n@@ -1,11 +1,12 @@\n from AccessControl import Unauthorized\n from plone.app.testing import SITE_OWNER_NAME\n+from plone.app.testing import TEST_USER_PASSWORD\n+from plone.base.interfaces import ISecuritySchema\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n-from plone.base.interfaces import ISecuritySchema\n+from Products.CMFPlone.RegistrationTool import get_member_by_login_name\n from Products.CMFPlone.tests import PloneTestCase\n from Products.CMFPlone.utils import set_own_login_name\n-from Products.CMFPlone.RegistrationTool import get_member_by_login_name\n from zope.component import getUtility\n \n \n@@ -30,7 +31,7 @@ def testSetOwnLoginName(self):\n \n     def testSetLoginNameOfOther(self):\n         memship = self.portal.portal_membership\n-        memship.addMember(\'maurits\', \'secret\', [], [])\n+        memship.addMember(\'maurits\', TEST_USER_PASSWORD, [], [])\n         member = memship.getMemberById(\'maurits\')\n         self.assertRaises(Unauthorized, set_own_login_name, member, \'vanrees\')\n         # The admin *should* be able to change the login name of\ndiff --git a/Products/CMFPlone/tests/testExternalEditorEnabled.py b/Products/CMFPlone/tests/testExternalEditorEnabled.py\nindex 860c6a2612..5333d831e4 100644\n--- a/Products/CMFPlone/tests/testExternalEditorEnabled.py\n+++ b/Products/CMFPlone/tests/testExternalEditorEnabled.py\n@@ -1,6 +1,9 @@\n-import unittest\n+from plone.app.testing import TEST_USER_PASSWORD\n from Products.CMFPlone.tests import PloneTestCase\n \n+import unittest\n+\n+\n try:\n     import Products.ExternalEditor\n except ImportError:\n@@ -19,7 +22,7 @@ def afterSetUp(self):\n         self.doc = self.folder.doc\n         self.folder.invokeFactory(\'Folder\', \'folder2\')\n         self.folder = self.folder.folder2\n-        self.portal.acl_users._doAddUser(\'user1\', \'secret\', [\'Member\'], [])\n+        self.portal.acl_users._doAddUser(\'user1\', TEST_USER_PASSWORD, [\'Member\'], [])\n         self.mtool = self.portal.portal_membership\n         member = self.mtool.getAuthenticatedMember()\n         member.setMemberProperties({\'ext_editor\': 1})\ndiff --git a/Products/CMFPlone/tests/testIImagingSchema.py b/Products/CMFPlone/tests/testIImagingSchema.py\nindex 20b302c059..6f404df211 100644\n--- a/Products/CMFPlone/tests/testIImagingSchema.py\n+++ b/Products/CMFPlone/tests/testIImagingSchema.py\n@@ -1,6 +1,6 @@\n from plone.app.testing import PLONE_INTEGRATION_TESTING\n-from plone.registry.interfaces import IRegistry\n from plone.base.interfaces.controlpanel import IImagingSchema\n+from plone.registry.interfaces import IRegistry\n from zope.component import getUtility\n \n import unittest\ndiff --git a/Products/CMFPlone/tests/testInterfaces.py b/Products/CMFPlone/tests/testInterfaces.py\nindex 833ef3b456..46c1cb6afd 100644\n--- a/Products/CMFPlone/tests/testInterfaces.py\n+++ b/Products/CMFPlone/tests/testInterfaces.py\n@@ -14,9 +14,11 @@\n from Products.CMFPlone.URLTool import URLTool\n from Products.CMFPlone.WorkflowTool import WorkflowTool\n from unittest import TestCase\n-from zope.interface import implementedBy, providedBy\n+from zope.interface import implementedBy\n+from zope.interface import providedBy\n from zope.interface.interface import InterfaceClass\n \n+\n # for Python 2\n try:\n     from types import ClassType\n@@ -64,10 +66,10 @@ class InterfaceTest(TestCase):\n \n     def interfaceImplementedByInstanceOf(self, klass, interface):\n         """ tests if the klass implements the interface in the right way """\n-        from zope.interface.verify import verifyClass\n-        from zope.interface.exceptions \\\n-            import BrokenImplementation, DoesNotImplement\n+        from zope.interface.exceptions import BrokenImplementation\n         from zope.interface.exceptions import BrokenMethodImplementation\n+        from zope.interface.exceptions import DoesNotImplement\n+        from zope.interface.verify import verifyClass\n \n         # is the class really implemented by the given interface?\n         self.assertTrue(interface.implementedBy(klass),\n@@ -83,10 +85,10 @@ def interfaceImplementedByInstanceOf(self, klass, interface):\n \n     def interfaceImplementedBy(self, instance, interface):\n         """ tests if the instance implements the interface in the right way """\n-        from zope.interface.verify import verifyObject\n-        from zope.interface.exceptions \\\n-            import BrokenImplementation, DoesNotImplement\n+        from zope.interface.exceptions import BrokenImplementation\n         from zope.interface.exceptions import BrokenMethodImplementation\n+        from zope.interface.exceptions import DoesNotImplement\n+        from zope.interface.verify import verifyObject\n \n         # is the class really implemented by the given interface?\n         self.assertTrue(interface.providedBy(instance),\n@@ -170,10 +172,10 @@ class zope_interface_test(TestCase):\n     def interfaceImplementedBy(self, klass, interface):\n         """ tests if the klass implements the interface in the right way """\n \n-        from zope.interface.verify import verifyClass\n-        from zope.interface.exceptions \\\n-            import BrokenImplementation, DoesNotImplement\n+        from zope.interface.exceptions import BrokenImplementation\n         from zope.interface.exceptions import BrokenMethodImplementation\n+        from zope.interface.exceptions import DoesNotImplement\n+        from zope.interface.verify import verifyClass\n \n         # is the class really implemented by the given interface?\n         self.assertTrue(interface.implementedBy(klass),\n@@ -189,10 +191,10 @@ def interfaceImplementedBy(self, klass, interface):\n \n     def interfaceProvidedBy(self, instance, interface):\n         """ tests if the instance implements the interface in the right way """\n-        from zope.interface.verify import verifyObject\n-        from zope.interface.exceptions \\\n-            import BrokenImplementation, DoesNotImplement\n+        from zope.interface.exceptions import BrokenImplementation\n         from zope.interface.exceptions import BrokenMethodImplementation\n+        from zope.interface.exceptions import DoesNotImplement\n+        from zope.interface.verify import verifyObject\n \n         # is the class really implemented by the given interface?\n         self.assertTrue(interface.providedBy(instance),\n@@ -297,5 +299,5 @@ class KlassInterfaceTest(zope_interface_test):\n def test_suite():\n     suite = unittest.TestSuite()\n     for test in tests:\n-        suite.addTest(unittest.makeSuite(test))\n+        suite.addTest(unittest.defaultTestLoader.loadTestsFromTestCase(test))\n     return suite\ndiff --git a/Products/CMFPlone/tests/testMigrationTool.py b/Products/CMFPlone/tests/testMigrationTool.py\nindex 5cbc746040..48f1647d16 100644\n--- a/Products/CMFPlone/tests/testMigrationTool.py\n+++ b/Products/CMFPlone/tests/testMigrationTool.py\n@@ -1,7 +1,6 @@\n-from Products.CMFPlone.tests import PloneTestCase\n-\n-from Products.CMFPlone.factory import _DEFAULT_PROFILE\n from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone.factory import _DEFAULT_PROFILE\n+from Products.CMFPlone.tests import PloneTestCase\n \n \n # Python 3 is only supported on 5.2+.\n@@ -170,6 +169,7 @@ def test_addon_repr(self):\n     def test_upgrade_all(self):\n         from Products.CMFPlone.MigrationTool import Addon\n         from Products.CMFPlone.MigrationTool import AddonList\n+\n         # real ones:\n         cmfeditions = Addon(profile_id=\'Products.CMFEditions:CMFEditions\')\n         discussion = Addon(profile_id=\'plone.app.discussion:default\')\n@@ -226,6 +226,7 @@ def test_upgrade_all(self):\n     def test_plone_addonlist_upgrade_all(self):\n         # Test the actual filled addon list.\n         from Products.CMFPlone.MigrationTool import ADDON_LIST\n+\n         # Several addons did not get fully upgraded in the past, which\n         # is why this list was created.\n         cmfeditions_id = \'Products.CMFEditions:CMFEditions\'\ndiff --git a/Products/CMFPlone/tests/testNavigationView.py b/Products/CMFPlone/tests/testNavigationView.py\nindex ee8b3b64e8..d7db6964c9 100644\n--- a/Products/CMFPlone/tests/testNavigationView.py\n+++ b/Products/CMFPlone/tests/testNavigationView.py\n@@ -1,11 +1,11 @@\n+from plone.base.interfaces import IHideFromBreadcrumbs\n+from plone.base.interfaces import INavigationSchema\n+from plone.base.interfaces import ITypesSchema\n from plone.registry.interfaces import IRegistry\n from Products.CMFPlone.browser.navigation import CatalogNavigationBreadcrumbs\n from Products.CMFPlone.browser.navigation import CatalogNavigationTabs\n from Products.CMFPlone.browser.navigation import CatalogSiteMap\n from Products.CMFPlone.browser.navigation import PhysicalNavigationBreadcrumbs\n-from plone.base.interfaces import IHideFromBreadcrumbs\n-from plone.base.interfaces import INavigationSchema\n-from plone.base.interfaces import ITypesSchema\n from Products.CMFPlone.tests import dummy\n from Products.CMFPlone.tests import PloneTestCase\n from Products.CMFPlone.tests.utils import folder_position\n@@ -16,6 +16,7 @@\n import random\n import string\n \n+\n portal_name = PloneTestCase.portal_name\n \n \n@@ -788,7 +789,8 @@ def testBreadcrumbsFilterByInterface2(self):\n \n \n def test_suite():\n-    from unittest import TestSuite, makeSuite\n+    from unittest import makeSuite\n+    from unittest import TestSuite\n     suite = TestSuite()\n     suite.addTest(makeSuite(TestCatalogPortalTabs))\n     suite.addTest(makeSuite(TestSiteMap))\ndiff --git a/Products/CMFPlone/tests/testNextPrevious.py b/Products/CMFPlone/tests/testNextPrevious.py\nindex 6f98616085..06139e9f71 100644\n--- a/Products/CMFPlone/tests/testNextPrevious.py\n+++ b/Products/CMFPlone/tests/testNextPrevious.py\n@@ -1,5 +1,5 @@\n-from Products.CMFPlone.tests import PloneTestCase\n from plone.app.layout.nextprevious.interfaces import INextPreviousProvider\n+from Products.CMFPlone.tests import PloneTestCase\n \n \n class TestNextPrevious(PloneTestCase.PloneTestCase):\ndiff --git a/Products/CMFPlone/tests/testPloneTool.py b/Products/CMFPlone/tests/testPloneTool.py\nindex 86a8d2b365..712dbb04aa 100644\n--- a/Products/CMFPlone/tests/testPloneTool.py\n+++ b/Products/CMFPlone/tests/testPloneTool.py\n@@ -1,5 +1,6 @@\n from Acquisition import Implicit\n from plone.app.testing import SITE_OWNER_NAME\n+from plone.app.testing import TEST_USER_PASSWORD\n from plone.base.interfaces import IReorderedEvent\n from plone.base.interfaces import ISearchSchema\n from plone.registry.interfaces import IRegistry\n@@ -171,7 +172,7 @@ class TestOwnershipStuff(PloneTestCase.PloneTestCase):\n     def afterSetUp(self):\n         self.utils = self.portal.plone_utils\n         self.membership = self.portal.portal_membership\n-        self.membership.addMember("new_owner", "secret", ["Member"], [])\n+        self.membership.addMember("new_owner", TEST_USER_PASSWORD, ["Member"], [])\n         self.folder.invokeFactory("Folder", "folder1")\n         self.folder1 = self.folder.folder1\n         self.folder1.invokeFactory("Folder", "folder2")\ndiff --git a/Products/CMFPlone/tests/testPortalCreation.py b/Products/CMFPlone/tests/testPortalCreation.py\nindex 0fc4b4aa12..bca91df49e 100644\n--- a/Products/CMFPlone/tests/testPortalCreation.py\n+++ b/Products/CMFPlone/tests/testPortalCreation.py\n@@ -1,4 +1,7 @@\n from Acquisition import aq_base\n+from plone.base.interfaces import IFilterSchema\n+from plone.base.interfaces import INavigationSchema\n+from plone.base.interfaces import ISearchSchema\n from plone.portlets.constants import CONTEXT_CATEGORY as CONTEXT_PORTLETS\n from plone.portlets.interfaces import ILocalPortletAssignmentManager\n from plone.portlets.interfaces import IPortletAssignmentMapping\n@@ -10,9 +13,6 @@\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import setuphandlers\n from Products.CMFPlone.factory import _DEFAULT_PROFILE\n-from plone.base.interfaces import IFilterSchema\n-from plone.base.interfaces import INavigationSchema\n-from plone.base.interfaces import ISearchSchema\n from Products.CMFPlone.tests import dummy\n from Products.CMFPlone.tests import PloneTestCase\n from Products.CMFPlone.UnicodeSplitter import I18NNormalizer\n@@ -20,7 +20,7 @@\n from Products.GenericSetup.browser.manage import ExportStepsView\n from Products.GenericSetup.browser.manage import ImportStepsView\n from Products.StandardCacheManagers.AcceleratedHTTPCacheManager import (\n-    AcceleratedHTTPCacheManager\n+    AcceleratedHTTPCacheManager,\n )\n from Products.StandardCacheManagers.RAMCacheManager import RAMCacheManager\n from zope.component import getGlobalSiteManager\ndiff --git a/Products/CMFPlone/tests/testQueryCatalog.py b/Products/CMFPlone/tests/testQueryCatalog.py\nindex 2073903c67..ab33de3a50 100644\n--- a/Products/CMFPlone/tests/testQueryCatalog.py\n+++ b/Products/CMFPlone/tests/testQueryCatalog.py\n@@ -1,9 +1,9 @@\n # Test queryCatalog and plone search forms\n from plone.app.textfield.value import RichTextValue\n-from plone.registry.interfaces import IRegistry\n from plone.base.interfaces import INavigationSchema\n from plone.base.interfaces import ISearchSchema\n from plone.base.interfaces.syndication import ISiteSyndicationSettings\n+from plone.registry.interfaces import IRegistry\n from Products.CMFPlone.tests import PloneTestCase\n from Products.ZCTextIndex.ParseTree import ParseError\n from zExceptions import NotFound\ndiff --git a/Products/CMFPlone/tests/testRegistrationTool.py b/Products/CMFPlone/tests/testRegistrationTool.py\nindex f9e722d42d..a49561a014 100644\n--- a/Products/CMFPlone/tests/testRegistrationTool.py\n+++ b/Products/CMFPlone/tests/testRegistrationTool.py\n@@ -1,14 +1,19 @@\n-import unittest\n-\n+from re import T\n from AccessControl import Unauthorized\n+from plone.app.testing import TEST_USER_PASSWORD\n+from plone.base.interfaces.controlpanel import IMailSchema\n+from plone.base.interfaces.controlpanel import ISiteSchema\n+from plone.registry.interfaces import IRegistry\n from Products.CMFCore.permissions import AddPortalMember\n from Products.CMFPlone.RegistrationTool import _checkEmail\n-from plone.base.interfaces.controlpanel import IMailSchema, ISiteSchema\n from Products.CMFPlone.tests import PloneTestCase\n from Products.CMFPlone.tests.utils import MockMailHost\n from Products.MailHost.interfaces import IMailHost\n-from plone.registry.interfaces import IRegistry\n-from zope.component import getSiteManager, getUtility\n+from zope.component import getSiteManager\n+from zope.component import getUtility\n+\n+import unittest\n+\n \n member_id = \'new_member\'\n \n@@ -29,7 +34,7 @@ def afterSetUp(self):\n         self.portal.acl_users._doAddGroup("groupid", ())\n \n     def testJoinCreatesUser(self):\n-        self.registration.addMember(member_id, \'secret\',\n+        self.registration.addMember(member_id, TEST_USER_PASSWORD,\n                                     properties={\'username\': member_id,\n                                                 \'email\': \'foo@bar.com\'})\n         user = self.portal.acl_users.getUserById(member_id)\n@@ -39,12 +44,12 @@ def testCannotRegisterWithRootAdminUsername(self):\n         root_user = self.portal.aq_parent.acl_users.users.listUserIds()[0]\n         self.assertRaises(ValueError,\n                           self.registration.addMember,\n-                          root_user, \'secret\',\n+                          root_user, TEST_USER_PASSWORD,\n                           properties={\'username\': root_user,\n                                       \'email\': \'foo@bar.com\'})\n \n     def testJoinWithUppercaseEmailCreatesUser(self):\n-        self.registration.addMember(member_id, \'secret\',\n+        self.registration.addMember(member_id, TEST_USER_PASSWORD,\n                                     properties={\'username\': member_id,\n                                                 \'email\': \'FOO@BAR.COM\'})\n         user = self.portal.acl_users.getUserById(member_id)\n@@ -53,13 +58,13 @@ def testJoinWithUppercaseEmailCreatesUser(self):\n     def testJoinWithoutEmailRaisesValueError(self):\n         self.assertRaises(ValueError,\n                           self.registration.addMember,\n-                          member_id, \'secret\',\n+                          member_id, TEST_USER_PASSWORD,\n                           properties={\'username\': member_id, \'email\': \'\'})\n \n     def testJoinWithBadEmailRaisesValueError(self):\n         self.assertRaises(ValueError,\n                           self.registration.addMember,\n-                          member_id, \'secret\',\n+                          member_id, TEST_USER_PASSWORD,\n                           properties={\n                               \'username\': member_id,\n                               \'email\': \'foo@bar.com, fred@bedrock.com\'})\n@@ -67,23 +72,23 @@ def testJoinWithBadEmailRaisesValueError(self):\n     def testJoinAsExistingMemberRaisesValueError(self):\n         self.assertRaises(ValueError,\n                           self.registration.addMember,\n-                          PloneTestCase.default_user, \'secret\',\n+                          PloneTestCase.default_user, TEST_USER_PASSWORD,\n                           properties={\'username\': \'Dr FooBar\',\n                                       \'email\': \'foo@bar.com\'})\n \n     def testJoinAsExistingNonMemberUserRaisesValueError(self):\n         # http://dev.plone.org/plone/ticket/3221\n-        self.portal.acl_users._doAddUser(member_id, \'secret\', [], [])\n+        self.portal.acl_users._doAddUser(member_id, TEST_USER_PASSWORD, [], [])\n         self.assertRaises(ValueError,\n                           self.registration.addMember,\n-                          member_id, \'secret\',\n+                          member_id, TEST_USER_PASSWORD,\n                           properties={\'username\': member_id,\n                                       \'email\': \'foo@bar.com\'})\n \n     def testJoinWithPortalIdAsUsernameRaisesValueError(self):\n         self.assertRaises(ValueError,\n                           self.registration.addMember,\n-                          self.portal.getId(), \'secret\',\n+                          self.portal.getId(), TEST_USER_PASSWORD,\n                           properties={\'username\': \'Dr FooBar\',\n                                       \'email\': \'foo@bar.com\'})\n \n@@ -101,23 +106,23 @@ def testTestPasswordValidityConfirm(self):\n             \'validpassword\', confirm=\'anotherpassword\') is None)\n \n     def testTestPasswordValidityPolicy(self):\n-        self.assertIsNone(self.registration.testPasswordValidity("abcde", confirm=None))\n+        self.assertIsNone(self.registration.testPasswordValidity(TEST_USER_PASSWORD, confirm=None))\n         self.assertEqual(\n             self.registration.testPasswordValidity("abcd", confirm=None),\n-            "Your password must contain at least 5 characters.",\n+            "Your password must contain at least ${min_chars} characters.",\n         )\n         # Password validity is checked with an empty password\n         # to get a nice help message to show for the input field.\n         self.assertEqual(\n             self.registration.testPasswordValidity("", confirm=None),\n-            "Minimum 5 characters.",\n+            "Minimum ${min_chars} characters.",\n         )\n \n     def testPasValidation(self):\n-        self.assertIsNone(self.registration.pasValidation("password", "abcde"))\n+        self.assertIsNone(self.registration.pasValidation("password", TEST_USER_PASSWORD))\n         self.assertEqual(\n             self.registration.pasValidation("password", "abcd"),\n-            "Your password must contain at least 5 characters.",\n+            "Your password must contain at least ${min_chars} characters.",\n         )\n \n     def testNewIdAllowed(self):\n@@ -141,7 +146,7 @@ def testRegisteredNotify(self):\n         sm.unregisterUtility(provided=IMailHost)\n         sm.registerUtility(mails, IMailHost)\n         # Register a user\n-        self.registration.addMember(member_id, \'secret\',\n+        self.registration.addMember(member_id, TEST_USER_PASSWORD,\n                                     properties={\'username\': member_id,\n                                                 \'email\': \'foo@bar.com\'})\n \n@@ -171,7 +176,7 @@ def testRegisteredNotifyEncoding(self):\n         sm.unregisterUtility(provided=IMailHost)\n         sm.registerUtility(mails, IMailHost)\n         # Register a user\n-        self.registration.addMember(member_id, \'secret\',\n+        self.registration.addMember(member_id, TEST_USER_PASSWORD,\n                                     properties={\'username\': member_id,\n                                                 \'email\': \'foo@bar.com\'})\n         registry = getUtility(IRegistry)\n@@ -200,7 +205,7 @@ def testMailPassword(self):\n         sm.unregisterUtility(provided=IMailHost)\n         sm.registerUtility(mails, IMailHost)\n         # Register a user\n-        self.registration.addMember(member_id, \'secret\',\n+        self.registration.addMember(member_id, TEST_USER_PASSWORD,\n                                     properties={\'username\': member_id,\n                                                 \'email\': \'foo@bar.com\'})\n \n@@ -231,7 +236,7 @@ def testMailPasswordEncoding(self):\n         sm.unregisterUtility(provided=IMailHost)\n         sm.registerUtility(mails, IMailHost)\n         # Register a user\n-        self.registration.addMember(member_id, \'secret\',\n+        self.registration.addMember(member_id, TEST_USER_PASSWORD,\n                                     properties={\'username\': member_id,\n                                                 \'email\': \'foo@bar.com\'})\n         registry = getUtility(IRegistry)\ndiff --git a/Products/CMFPlone/tests/testRestrictedAcquisition.py b/Products/CMFPlone/tests/testRestrictedAcquisition.py\nindex dda5d66426..ba285c00ee 100644\n--- a/Products/CMFPlone/tests/testRestrictedAcquisition.py\n+++ b/Products/CMFPlone/tests/testRestrictedAcquisition.py\n@@ -8,11 +8,10 @@\n # root. Rolling back the abovementioned checkin restores functionality.\n #\n \n-from Products.CMFPlone.tests import PloneTestCase\n-\n-from AccessControl.class_init import InitializeClass\n from AccessControl import ClassSecurityInfo\n+from AccessControl.class_init import InitializeClass\n from OFS.SimpleItem import SimpleItem\n+from Products.CMFPlone.tests import PloneTestCase\n \n \n class AllowedItem(SimpleItem):\ndiff --git a/Products/CMFPlone/tests/testSearch.py b/Products/CMFPlone/tests/testSearch.py\nindex 0e6f786e55..367bd7ed63 100644\n--- a/Products/CMFPlone/tests/testSearch.py\n+++ b/Products/CMFPlone/tests/testSearch.py\n@@ -1,32 +1,28 @@\n-import sys\n-import time\n-import unittest\n-\n from DateTime import DateTime\n-\n-from plone.app.testing import TEST_USER_NAME, TEST_USER_ID\n+from plone.app.contentlisting.interfaces import IContentListing\n+from plone.app.testing import applyProfile\n+from plone.app.testing import IntegrationTesting\n from plone.app.testing import login\n+from plone.app.testing import PLONE_FIXTURE\n+from plone.app.testing import PloneSandboxLayer\n from plone.app.testing import setRoles\n+from plone.app.testing import TEST_USER_ID\n+from plone.app.testing import TEST_USER_NAME\n+from plone.app.textfield import RichTextValue\n+from plone.base.interfaces import ISearchSchema\n+from plone.registry.interfaces import IRegistry\n+from z3c.form.interfaces import IFormLayer\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n-from plone.registry.interfaces import IRegistry\n-\n-from plone.base.interfaces import ISearchSchema\n-\n-from plone.app.contentlisting.interfaces import IContentListing\n-from plone.app.textfield import RichTextValue\n-\n from zope.configuration import xmlconfig\n from zope.interface import alsoProvides\n from zope.publisher.browser import setDefaultSkin\n-from z3c.form.interfaces import IFormLayer\n-from ZPublisher.HTTPResponse import HTTPResponse\n from ZPublisher.HTTPRequest import HTTPRequest\n+from ZPublisher.HTTPResponse import HTTPResponse\n \n-from plone.app.testing import PloneSandboxLayer\n-from plone.app.testing import applyProfile\n-from plone.app.testing import PLONE_FIXTURE\n-from plone.app.testing import IntegrationTesting\n+import sys\n+import time\n+import unittest\n \n \n def test_request():\n@@ -366,5 +362,5 @@ def test_suite():\n     above\n     """\n     suite = unittest.TestSuite()\n-    suite.addTest(unittest.makeSuite(TestSection))\n+    suite.addTest(unittest.defaultTestLoader.loadTestsFromTestCase(TestSection))\n     return suite\ndiff --git a/Products/CMFPlone/tests/testSecurity.py b/Products/CMFPlone/tests/testSecurity.py\nindex dc1eff08c1..84a6ee12fb 100644\n--- a/Products/CMFPlone/tests/testSecurity.py\n+++ b/Products/CMFPlone/tests/testSecurity.py\n@@ -1,5 +1,3 @@\n-from Products.CMFPlone.tests.PloneTestCase import PloneTestCase\n-from Testing.makerequest import makerequest\n from plone.app.testing import login\n from plone.app.testing import logout\n from plone.app.testing import SITE_OWNER_NAME\n@@ -156,7 +154,7 @@ def get_admin_browser(self):\n         browser.handleErrors = False\n         browser.addHeader(\n             "Authorization",\n-            "Basic {0}:{1}".format(SITE_OWNER_NAME, SITE_OWNER_PASSWORD),\n+            f"Basic {SITE_OWNER_NAME}:{SITE_OWNER_PASSWORD}",\n         )\n         return browser\n \ndiff --git a/Products/CMFPlone/tests/testSecurityDeclarations.py b/Products/CMFPlone/tests/testSecurityDeclarations.py\nindex fd6a447558..af3d333a52 100644\n--- a/Products/CMFPlone/tests/testSecurityDeclarations.py\n+++ b/Products/CMFPlone/tests/testSecurityDeclarations.py\n@@ -1,15 +1,14 @@\n # Tests the security declarations Plone makes on resources\n # for access by restricted code (aka PythonScripts)\n \n-from Products.CMFPlone.tests import PloneTestCase\n-from Products.CMFPlone.tests import dummy\n-\n-from zExceptions import Unauthorized\n-from ZODB.POSException import ConflictError\n-from Products.ZCTextIndex.ParseTree import ParseError\n from OFS.CopySupport import CopyError\n from plone.testing import zope\n+from Products.CMFPlone.tests import dummy\n+from Products.CMFPlone.tests import PloneTestCase\n+from Products.ZCTextIndex.ParseTree import ParseError\n from unittest import TestCase\n+from zExceptions import Unauthorized\n+from ZODB.POSException import ConflictError\n \n \n class RestrictedPythonTest(TestCase):\ndiff --git a/Products/CMFPlone/tests/testSyndication.py b/Products/CMFPlone/tests/testSyndication.py\nindex 4dd52fe92a..a3b4c0e55a 100644\n--- a/Products/CMFPlone/tests/testSyndication.py\n+++ b/Products/CMFPlone/tests/testSyndication.py\n@@ -1,15 +1,16 @@\n-import re\n-from Products.CMFCore.utils import getToolByName\n from AccessControl import Unauthorized\n from plone.app.textfield import RichTextValue\n-from Products.CMFPlone.tests import PloneTestCase\n+from plone.base.interfaces.syndication import IFeed\n from plone.base.interfaces.syndication import IFeedSettings\n from plone.base.interfaces.syndication import ISiteSyndicationSettings\n from plone.registry.interfaces import IRegistry\n-from zope.component import getUtility\n-from zExceptions import NotFound\n-from plone.base.interfaces.syndication import IFeed\n+from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.browser.syndication.adapters import DexterityItem\n+from Products.CMFPlone.tests import PloneTestCase\n+from zExceptions import NotFound\n+from zope.component import getUtility\n+\n+import re\n \n \n class BaseSyndicationTest(PloneTestCase.PloneTestCase):\ndiff --git a/Products/CMFPlone/tests/testTranslationServiceTool.py b/Products/CMFPlone/tests/testTranslationServiceTool.py\nindex 801a6098a0..456ea03de6 100644\n--- a/Products/CMFPlone/tests/testTranslationServiceTool.py\n+++ b/Products/CMFPlone/tests/testTranslationServiceTool.py\n@@ -1,7 +1,7 @@\n # Test toLocalizedTime script and TranslationServiceTool.\n \n-from Products.CMFPlone.tests import PloneTestCase\n from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone.tests import PloneTestCase\n \n \n class TestUTranslate(PloneTestCase.PloneTestCase):\ndiff --git a/Products/CMFPlone/tests/testURLTool.py b/Products/CMFPlone/tests/testURLTool.py\nindex a84271b953..2488fb74a6 100644\n--- a/Products/CMFPlone/tests/testURLTool.py\n+++ b/Products/CMFPlone/tests/testURLTool.py\n@@ -1,14 +1,13 @@\n-import unittest\n-\n-from Products.CMFCore.tests.base.dummy import DummySite\n-from Products.CMFCore.tests.base.dummy import DummyFolder\n-from Products.CMFCore.tests.base.dummy import DummyContent\n-\n from Acquisition import aq_parent\n-from plone.registry.interfaces import IRegistry\n from plone.base.interfaces import ILoginSchema\n+from plone.registry.interfaces import IRegistry\n+from Products.CMFCore.tests.base.dummy import DummyContent\n+from Products.CMFCore.tests.base.dummy import DummyFolder\n+from Products.CMFCore.tests.base.dummy import DummySite\n from zope.component import getSiteManager\n \n+import unittest\n+\n \n class DummyFolder(DummyFolder):\n \ndiff --git a/Products/CMFPlone/tests/testUnicodeSplitter.py b/Products/CMFPlone/tests/testUnicodeSplitter.py\nindex 6e1fa69b53..06aa2be046 100644\n--- a/Products/CMFPlone/tests/testUnicodeSplitter.py\n+++ b/Products/CMFPlone/tests/testUnicodeSplitter.py\n@@ -5,6 +5,7 @@\n from Products.CMFCore.tests.base.dummy import DummyContent\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n+\n # adding UnicodeSplitterPatcth\n from Products.CMFPlone.UnicodeSplitter import CaseNormalizer\n from Products.CMFPlone.UnicodeSplitter import process_str\ndiff --git a/Products/CMFPlone/tests/testUserFolderBasics.py b/Products/CMFPlone/tests/testUserFolderBasics.py\nindex d8d5919b22..1cf5338cb0 100644\n--- a/Products/CMFPlone/tests/testUserFolderBasics.py\n+++ b/Products/CMFPlone/tests/testUserFolderBasics.py\n@@ -4,16 +4,17 @@\n from AccessControl import Unauthorized\n from plone.app.testing import login\n from plone.app.testing import logout\n+from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import TEST_USER_NAME\n from plone.app.testing import TEST_USER_PASSWORD\n-from plone.app.testing import setRoles\n from plone.app.testing.bbb import _createMemberarea\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from ZPublisher.utils import basic_auth_encode\n \n import unittest\n \n+\n user_role = \'Member\'\n \n \ndiff --git a/Products/CMFPlone/tests/testWebDAV.py b/Products/CMFPlone/tests/testWebDAV.py\nindex 7ab89b0644..2adf356901 100644\n--- a/Products/CMFPlone/tests/testWebDAV.py\n+++ b/Products/CMFPlone/tests/testWebDAV.py\n@@ -448,7 +448,8 @@ def test_propfind_folder_index_html_not_exists(self):\n \n \n def test_suite():\n-    from unittest import TestSuite, makeSuite\n+    from unittest import makeSuite\n+    from unittest import TestSuite\n     suite = TestSuite()\n     if bbb.HAS_ZSERVER:\n         suite.addTest(makeSuite(TestDAVProperties))\ndiff --git a/Products/CMFPlone/tests/testWorkflowTool.py b/Products/CMFPlone/tests/testWorkflowTool.py\nindex d9a64e7d5c..298c20fcef 100644\n--- a/Products/CMFPlone/tests/testWorkflowTool.py\n+++ b/Products/CMFPlone/tests/testWorkflowTool.py\n@@ -1,8 +1,13 @@\n-from zope.interface import directlyProvides, Interface\n-from zope.component import provideAdapter, getGlobalSiteManager\n-from Products.CMFPlone.tests import PloneTestCase\n-from Products.CMFPlone.tests.dummy import Dummy, DummyWorkflowChainAdapter\n+from plone.app.testing import TEST_USER_PASSWORD\n from Products.CMFCore.interfaces import IWorkflowTool\n+from Products.CMFPlone.tests import PloneTestCase\n+from Products.CMFPlone.tests.dummy import Dummy\n+from Products.CMFPlone.tests.dummy import DummyWorkflowChainAdapter\n+from zope.component import getGlobalSiteManager\n+from zope.component import provideAdapter\n+from zope.interface import directlyProvides\n+from zope.interface import Interface\n+\n \n default_user = PloneTestCase.default_user\n \n@@ -17,10 +22,10 @@ class TestWorkflowTool(PloneTestCase.PloneTestCase):\n     def afterSetUp(self):\n         self.workflow = self.portal.portal_workflow\n \n-        self.portal.acl_users._doAddUser(\'member\', \'secret\', [\'Member\'], [])\n-        self.portal.acl_users._doAddUser(\'reviewer\', \'secret\',\n+        self.portal.acl_users._doAddUser(\'member\', TEST_USER_PASSWORD, [\'Member\'], [])\n+        self.portal.acl_users._doAddUser(\'reviewer\', TEST_USER_PASSWORD,\n                                          [\'Reviewer\'], [])\n-        self.portal.acl_users._doAddUser(\'manager\', \'secret\', [\'Manager\'], [])\n+        self.portal.acl_users._doAddUser(\'manager\', TEST_USER_PASSWORD, [\'Manager\'], [])\n \n         self.folder.invokeFactory(\'Document\', id=\'doc\')\n         self.doc = self.folder.doc\ndiff --git a/Products/CMFPlone/tests/test_defaultpage.py b/Products/CMFPlone/tests/test_defaultpage.py\nindex 9b4e86fe11..95de30452c 100644\n--- a/Products/CMFPlone/tests/test_defaultpage.py\n+++ b/Products/CMFPlone/tests/test_defaultpage.py\n@@ -1,8 +1,8 @@\n-from zope.component import getUtility\n-from plone.registry.interfaces import IRegistry\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n+from plone.registry.interfaces import IRegistry\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n+from zope.component import getUtility\n \n import unittest\n \n@@ -41,7 +41,9 @@ def test_get_default_page_step_2(self):\n \n         # 2) a folder also provides an fti that implements\n         #    IDynamicViewTypeInformation\n-        from Products.CMFDynamicViewFTI.interfaces import IDynamicViewTypeInformation  # noqa\n+        from Products.CMFDynamicViewFTI.interfaces import (  # noqa\n+            IDynamicViewTypeInformation,\n+        )\n         fti = self.folder.getTypeInfo()\n         self.assertTrue(IDynamicViewTypeInformation.providedBy(fti))\n \ndiff --git a/Products/CMFPlone/tests/test_doctests.py b/Products/CMFPlone/tests/test_doctests.py\nindex 3c2a3596b8..44034408a8 100644\n--- a/Products/CMFPlone/tests/test_doctests.py\n+++ b/Products/CMFPlone/tests/test_doctests.py\n@@ -2,6 +2,7 @@\n \n import doctest\n \n+\n def test_suite():\n     suites = (\n         doctest.DocTestSuite(\'Products.CMFPlone.TranslationServiceTool\'),\ndiff --git a/Products/CMFPlone/tests/test_expressions.py b/Products/CMFPlone/tests/test_expressions.py\nindex 9d950fae46..b825392ff9 100644\n--- a/Products/CMFPlone/tests/test_expressions.py\n+++ b/Products/CMFPlone/tests/test_expressions.py\n@@ -1,17 +1,23 @@\n-# -*- coding: utf-8 -*-\n from AccessControl.class_init import InitializeClass\n from AccessControl.Permissions import view_management_screens\n from AccessControl.SecurityInfo import ClassSecurityInfo\n from OFS.SimpleItem import SimpleItem\n from plone.testing.zope import Browser\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n+\n # Expressions.boboAwareZopeTraverse is a function\n # expression(s).BoboAwareZopeTraverse is a class\n # Import them with names that are easier to tell apart.\n from Products.PageTemplates.expression import BoboAwareZopeTraverse as TraverseClass\n-from Products.PageTemplates.expression import TrustedBoboAwareZopeTraverse as TrustedTraverseClass\n-from Products.PageTemplates.Expressions import boboAwareZopeTraverse as traverse_function\n-from Products.PageTemplates.Expressions import trustedBoboAwareZopeTraverse as trusted_traverse_function\n+from Products.PageTemplates.expression import (\n+    TrustedBoboAwareZopeTraverse as TrustedTraverseClass,\n+)\n+from Products.PageTemplates.Expressions import (\n+    boboAwareZopeTraverse as traverse_function,\n+)\n+from Products.PageTemplates.Expressions import (\n+    trustedBoboAwareZopeTraverse as trusted_traverse_function,\n+)\n from Products.PageTemplates.PageTemplateFile import PageTemplateFile\n from zExceptions import NotFound\n from zExceptions import Unauthorized\n@@ -29,7 +35,7 @@\n path = os.path.dirname(__file__)\n \n \n-class DummyView(object):\n+class DummyView:\n \n     __name__ = "dummy-view"\n     _authenticator = "secret"\ndiff --git a/Products/CMFPlone/tests/test_factory.py b/Products/CMFPlone/tests/test_factory.py\nindex a797e54ad0..723aaa7bc3 100644\n--- a/Products/CMFPlone/tests/test_factory.py\n+++ b/Products/CMFPlone/tests/test_factory.py\n@@ -1,10 +1,10 @@\n from plone.dexterity.interfaces import IDexterityFTI\n+from plone.registry.interfaces import IRegistry\n from Products.CMFPlone.factory import addPloneSite\n-from Products.CMFPlone.utils import get_installer\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n-from zope.component import queryUtility\n+from Products.CMFPlone.utils import get_installer\n from zope.component import getUtility\n-from plone.registry.interfaces import IRegistry\n+from zope.component import queryUtility\n \n import unittest\n \ndiff --git a/Products/CMFPlone/tests/test_functional.py b/Products/CMFPlone/tests/test_functional.py\nindex 8a5d695d3e..aba2297201 100644\n--- a/Products/CMFPlone/tests/test_functional.py\n+++ b/Products/CMFPlone/tests/test_functional.py\n@@ -1,4 +1,6 @@\n-from plone.app.contenttypes.testing import PLONE_APP_CONTENTTYPES_FUNCTIONAL_TESTING  # noqa\n+from plone.app.contenttypes.testing import (  # noqa\n+    PLONE_APP_CONTENTTYPES_FUNCTIONAL_TESTING,\n+)\n from plone.app.testing import PLONE_FUNCTIONAL_TESTING\n from plone.testing import layered\n \ndiff --git a/Products/CMFPlone/tests/test_login_form.py b/Products/CMFPlone/tests/test_login_form.py\nindex 78fc2cbc44..94dfc4683a 100644\n--- a/Products/CMFPlone/tests/test_login_form.py\n+++ b/Products/CMFPlone/tests/test_login_form.py\n@@ -1,5 +1,6 @@\n from DateTime import DateTime\n from plone.app.z3cform.interfaces import IPloneFormLayer\n+from plone.app.testing import TEST_USER_PASSWORD\n from Products.CMFCore.permissions import SetOwnProperties\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n@@ -7,8 +8,8 @@\n from zope.interface import alsoProvides\n \n import re\n-import unittest\n import time\n+import unittest\n \n \n FORM_ID = \'login\'\n@@ -43,7 +44,7 @@ def _setup_authenticator_request(self):\n     def test_form_update(self):\n         self._setup_authenticator_request()\n         self.request[\'__ac_name\'] = \'test\'\n-        self.request[\'__ac_password\'] = \'secret\'\n+        self.request[\'__ac_password\'] = TEST_USER_PASSWORD\n         self.request[\'form.widgets.came_from\'] = [\'\']\n         form = self.portal.restrictedTraverse(FORM_ID)\n         form.update()\n@@ -61,7 +62,7 @@ def test_failsafe_login_form(self):\n     def test_failsafe_login_form_update(self):\n         self._setup_authenticator_request()\n         self.request[\'__ac_name\'] = \'test\'\n-        self.request[\'__ac_password\'] = \'secret\'\n+        self.request[\'__ac_password\'] = TEST_USER_PASSWORD\n         self.request[\'form.widgets.came_from\'] = [\'\']\n         form = self.portal.restrictedTraverse(\'failsafe_login\')\n         form.update()\ndiff --git a/Products/CMFPlone/tests/test_login_logout.py b/Products/CMFPlone/tests/test_login_logout.py\nindex 8998d07549..2dea7c43e7 100644\n--- a/Products/CMFPlone/tests/test_login_logout.py\n+++ b/Products/CMFPlone/tests/test_login_logout.py\n@@ -63,14 +63,14 @@ def test_login_with_user_defined_in_root_user_folder(self):\n         """\n         self.layer[\'app\'].acl_users.userFolderAddUser(\n             \'rootuser\',\n-            \'secret\',\n+            TEST_USER_PASSWORD,\n             [],\n             []\n         )\n         transaction.commit()\n         self.browser.open(\'http://nohost/plone/login\')\n         self.browser.getControl(\'Login Name\').value = \'rootuser\'\n-        self.browser.getControl(\'Password\').value = \'secret\'\n+        self.browser.getControl(\'Password\').value = TEST_USER_PASSWORD\n         self.browser.getControl(\'Log in\').click()\n         self.assertIn(\'You are now logged in\', self.browser.contents)\n \ndiff --git a/Products/CMFPlone/tests/test_mails.py b/Products/CMFPlone/tests/test_mails.py\nindex 751718a6c1..d33861fc54 100644\n--- a/Products/CMFPlone/tests/test_mails.py\n+++ b/Products/CMFPlone/tests/test_mails.py\n@@ -2,9 +2,9 @@\n from plone.app.testing import MOCK_MAILHOST_FIXTURE\n from plone.app.testing import PLONE_FIXTURE\n from plone.app.testing import PloneSandboxLayer\n+from plone.base.interfaces.controlpanel import IMailSchema\n from plone.registry.interfaces import IRegistry\n from plone.testing import layered\n-from plone.base.interfaces.controlpanel import IMailSchema\n from zope.component import getUtility\n \n import doctest\ndiff --git a/Products/CMFPlone/tests/test_patternsettings.py b/Products/CMFPlone/tests/test_patternsettings.py\nindex 9a70e75faa..fd4c38fe0f 100644\n--- a/Products/CMFPlone/tests/test_patternsettings.py\n+++ b/Products/CMFPlone/tests/test_patternsettings.py\n@@ -1,7 +1,7 @@\n from plone.app.testing import login\n from plone.app.testing import TEST_USER_NAME\n-from plone.registry.interfaces import IRegistry\n from plone.base.interfaces import ITinyMCESchema\n+from plone.registry.interfaces import IRegistry\n from Products.CMFPlone.patterns.view import PatternsSettingsView\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\ndiff --git a/Products/CMFPlone/tests/test_redirect_after_login.py b/Products/CMFPlone/tests/test_redirect_after_login.py\nindex 821e762be8..cce982f158 100644\n--- a/Products/CMFPlone/tests/test_redirect_after_login.py\n+++ b/Products/CMFPlone/tests/test_redirect_after_login.py\n@@ -1,9 +1,9 @@\n from plone.app.testing import TEST_USER_NAME\n from plone.app.testing import TEST_USER_PASSWORD\n-from plone.testing.zope import Browser\n-from Products.CMFPlone.browser.login.login import LoginForm\n from plone.base.interfaces import IInitialLogin\n from plone.base.interfaces import IRedirectAfterLogin\n+from plone.testing.zope import Browser\n+from Products.CMFPlone.browser.login.login import LoginForm\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from zope.interface import implementer\ndiff --git a/Products/CMFPlone/tests/test_robot.py b/Products/CMFPlone/tests/test_robot.py\nindex d282eab3d2..6536d3a84c 100644\n--- a/Products/CMFPlone/tests/test_robot.py\n+++ b/Products/CMFPlone/tests/test_robot.py\n@@ -1,9 +1,10 @@\n-from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_ROBOT_TESTING\n from plone.app.testing import ROBOT_TEST_LEVEL\n from plone.testing import layered\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_ROBOT_TESTING\n+\n import os\n-import unittest\n import robotsuite\n+import unittest\n \n \n def test_suite():\ndiff --git a/Products/CMFPlone/tests/test_robots_txt.py b/Products/CMFPlone/tests/test_robots_txt.py\nindex e7f73966b5..bf916945bc 100644\n--- a/Products/CMFPlone/tests/test_robots_txt.py\n+++ b/Products/CMFPlone/tests/test_robots_txt.py\n@@ -1,7 +1,8 @@\n from plone.base.interfaces import ISiteSchema\n-from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from zope.component import getUtility\n+\n import unittest\n \n \ndiff --git a/Products/CMFPlone/tests/test_safe_formatter.py b/Products/CMFPlone/tests/test_safe_formatter.py\nindex 65076d1c8a..c80841e870 100644\n--- a/Products/CMFPlone/tests/test_safe_formatter.py\n+++ b/Products/CMFPlone/tests/test_safe_formatter.py\n@@ -254,6 +254,7 @@ def test_access_to_private_content_not_allowed_in_any_way(self):\n \n     def test_cook_zope3_page_templates_normal(self):\n         from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n+\n         # Note: on Plone 3.3 this is actually a ZopeTwoPageTemplateFile.\n         pt = ViewPageTemplateFile(\'normal_zope3_page_template.pt\')\n         hack_pt(pt)\n@@ -266,6 +267,7 @@ def test_cook_zope3_page_templates_normal(self):\n \n     def test_cook_zope3_page_templates_using_format(self):\n         from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n+\n         # Note: on Plone 3.3 this is actually a ZopeTwoPageTemplateFile.\n         pt = ViewPageTemplateFile(\'using_format_zope3_page_template.pt\')\n         hack_pt(pt)\n@@ -292,6 +294,7 @@ class TestFunctionalSafeFormatter(PloneTestCase):\n \n     def test_safe_format_properly_applied(self):\n         from AccessControl.SimpleObjectPolicies import ContainerAssertions\n+\n         import types\n         ca = ContainerAssertions\n         self.assertTrue(str in ca)\n@@ -375,9 +378,9 @@ def test_cook_zope2_page_templates_bad_item_unicode(self):\n         self.assertRaises(Unauthorized, pt.pt_render)\n \n     def assert_is_checked_via_security_manager(self, pt_content):\n-        from Products.PageTemplates.ZopePageTemplate import ZopePageTemplate\n-        from AccessControl.SecurityManager import setSecurityPolicy\n         from AccessControl.SecurityManagement import noSecurityManager\n+        from AccessControl.SecurityManager import setSecurityPolicy\n+        from Products.PageTemplates.ZopePageTemplate import ZopePageTemplate\n \n         pt = ZopePageTemplate(\'mytemplate\', pt_content)\n         noSecurityManager()\ndiff --git a/Products/CMFPlone/tests/test_sitelogo.py b/Products/CMFPlone/tests/test_sitelogo.py\nindex 0f07e67ac0..c47e14130c 100644\n--- a/Products/CMFPlone/tests/test_sitelogo.py\n+++ b/Products/CMFPlone/tests/test_sitelogo.py\n@@ -1,9 +1,11 @@\n from plone.base.interfaces import ISiteSchema\n-from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from zope.component import getUtility\n+\n import unittest\n \n+\n # Red pixel with filename pixel.png\n SITE_LOGO_BASE64 = b\'filenameb64:cGl4ZWwucG5n;datab64:iVBORw0KGgoAAAANSUhEUgA\'\\\n                    b\'AAAEAAAABCAIAAACQd1PeAAAADElEQVQI12P4z8AAAAMBAQAY3Y2wAAA\'\\\ndiff --git a/Products/CMFPlone/tests/test_sitemap.py b/Products/CMFPlone/tests/test_sitemap.py\nindex a1c9f2fca8..8e9bc76a48 100644\n--- a/Products/CMFPlone/tests/test_sitemap.py\n+++ b/Products/CMFPlone/tests/test_sitemap.py\n@@ -1,17 +1,14 @@\n-import unittest\n-import transaction\n-import lxml\n-\n-from plone.app.contenttypes.testing import (\n-    PLONE_APP_CONTENTTYPES_FUNCTIONAL_TESTING\n-)\n-\n+from plone.app.contenttypes.testing import PLONE_APP_CONTENTTYPES_FUNCTIONAL_TESTING\n+from plone.app.testing import setRoles\n from plone.app.testing import SITE_OWNER_NAME\n from plone.app.testing import SITE_OWNER_PASSWORD\n-from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n from plone.testing.zope import Browser\n \n+import lxml\n+import transaction\n+import unittest\n+\n \n class ProductsCMFPloneSetupTest(unittest.TestCase):\n \ndiff --git a/Products/CMFPlone/tests/test_utils.py b/Products/CMFPlone/tests/test_utils.py\nindex eb30c720bf..21031a5886 100644\n--- a/Products/CMFPlone/tests/test_utils.py\n+++ b/Products/CMFPlone/tests/test_utils.py\n@@ -1,12 +1,12 @@\n """ Unit tests for utils module. """\n \n+from plone.base.interfaces import ISiteSchema\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.tests.base.content import FAUX_HTML_LEADING_TEXT\n from Products.CMFCore.tests.base.content import SIMPLE_HTML\n from Products.CMFCore.tests.base.content import SIMPLE_STRUCTUREDTEXT\n from Products.CMFCore.tests.base.content import SIMPLE_XHTML\n from Products.CMFCore.tests.base.content import STX_WITH_HTML\n-from plone.base.interfaces import ISiteSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from zope.component import getUtility\n \ndiff --git a/Products/CMFPlone/tests/test_zmi.py b/Products/CMFPlone/tests/test_zmi.py\nindex 33ac444e52..01d7f90787 100644\n--- a/Products/CMFPlone/tests/test_zmi.py\n+++ b/Products/CMFPlone/tests/test_zmi.py\n@@ -1,4 +1,6 @@\n-from plone.app.contenttypes.testing import PLONE_APP_CONTENTTYPES_INTEGRATION_TESTING  # noqa: E501\n+from plone.app.contenttypes.testing import (  # noqa: E501\n+    PLONE_APP_CONTENTTYPES_INTEGRATION_TESTING,\n+)\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n \ndiff --git a/Products/CMFPlone/tests/utils.py b/Products/CMFPlone/tests/utils.py\nindex 61b740cb3a..ef857ca3fe 100644\n--- a/Products/CMFPlone/tests/utils.py\n+++ b/Products/CMFPlone/tests/utils.py\n@@ -1,9 +1,10 @@\n from persistent.list import PersistentList\n-import re\n-\n from Products.MailHost.MailHost import _mungeHeaders\n from Products.MailHost.MailHost import MailBase\n \n+import re\n+\n+\n # regexp for a valid CSS identifier without the leading #\n VALID_CSS_ID = re.compile("[A-Za-z_@][A-Za-z0-9_@-]*")\n \ndiff --git a/Products/CMFPlone/unicodeconflictresolver.py b/Products/CMFPlone/unicodeconflictresolver.py\nindex cdea9bc71c..11cd35f4d5 100644\n--- a/Products/CMFPlone/unicodeconflictresolver.py\n+++ b/Products/CMFPlone/unicodeconflictresolver.py\n@@ -1,7 +1,6 @@\n-from zope.interface import implementer\n-from Products.PageTemplates.interfaces import IUnicodeEncodingConflictResolver\n-\n from Products.CMFPlone.patches.unicodehacks import _unicode_replace\n+from Products.PageTemplates.interfaces import IUnicodeEncodingConflictResolver\n+from zope.interface import implementer\n \n \n @implementer(IUnicodeEncodingConflictResolver)\ndiff --git a/Products/CMFPlone/utils.py b/Products/CMFPlone/utils.py\nindex 6a2da74b8e..e731e62532 100644\n--- a/Products/CMFPlone/utils.py\n+++ b/Products/CMFPlone/utils.py\n@@ -79,9 +79,9 @@\n \n deprecated_import(\n     "Import from plone.namedfile.utils instead (will be removed in Plone 7)",\n-    getHighPixelDensityScales="plone.namedfile.utils.getHighPixelDensityScales",\n-    getAllowedSizes="plone.namedfile.utils.getAllowedSizes",\n-    getQuality="plone.namedfile.utils.getQuality",\n+    getHighPixelDensityScales="plone.namedfile.utils:getHighPixelDensityScales",\n+    getAllowedSizes="plone.namedfile.utils:getAllowedSizes",\n+    getQuality="plone.namedfile.utils:getQuality",\n )\n \n @deprecate("Use plone.base.utils.safe_bytes instead (will be removed in Plone 7)")\n@@ -400,7 +400,7 @@ def _unrestricted_rename(container, id, new_id):\n             action=\'manage_main\'))\n     ob = container._getOb(id)\n     if not ob.cb_isMoveable():\n-        raise CopyError(\'Not Supported {}\'.format(escape(id)))\n+        raise CopyError(f\'Not Supported {escape(id)}\')\n     try:\n         ob._notifyOfCopyTo(container, op=1)\n     except:\ndiff --git a/Products/CMFPlone/workflow.py b/Products/CMFPlone/workflow.py\nindex 199fdfbc40..71b0599c7a 100644\n--- a/Products/CMFPlone/workflow.py\n+++ b/Products/CMFPlone/workflow.py\n@@ -1,8 +1,9 @@\n-from zope.interface import Interface, implementer\n-from zope.component import adapter\n from Acquisition import aq_base\n-from Products.CMFCore.interfaces import IWorkflowTool\n from plone.base.interfaces import IWorkflowChain\n+from Products.CMFCore.interfaces import IWorkflowTool\n+from zope.component import adapter\n+from zope.interface import implementer\n+from zope.interface import Interface\n \n \n @adapter(Interface, IWorkflowTool)\ndiff --git a/news/125.bugfix b/news/125.bugfix\nnew file mode 100644\nindex 0000000000..951a089444\n--- /dev/null\n+++ b/news/125.bugfix\n@@ -0,0 +1 @@\n+Deprecate the portal_properties tool\ndiff --git a/news/3635.bugfix b/news/3635.bugfix\nnew file mode 100644\nindex 0000000000..0b65b9fba5\n--- /dev/null\n+++ b/news/3635.bugfix\n@@ -0,0 +1 @@\n+Require Python 3.8 or higher.  [maurits]\ndiff --git a/news/3640.bugfix b/news/3640.bugfix\nnew file mode 100644\nindex 0000000000..b4672c6e75\n--- /dev/null\n+++ b/news/3640.bugfix\n@@ -0,0 +1 @@\n+Minor visual fixes in admin UI [jensens]\ndiff --git a/news/3641.bugfix b/news/3641.bugfix\nnew file mode 100644\nindex 0000000000..b5ed5ef967\n--- /dev/null\n+++ b/news/3641.bugfix\n@@ -0,0 +1,2 @@\n+Fix aliased helpers\n+[ale-rt]\ndiff --git a/news/3646.bugfix b/news/3646.bugfix\nnew file mode 100644\nindex 0000000000..b2b72981ed\n--- /dev/null\n+++ b/news/3646.bugfix\n@@ -0,0 +1 @@\n+- Fix tests to work with longer minimum password length [davisagli]\ndiff --git a/setup.py b/setup.py\nindex 0087a15be4..dafbabf163 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,5 +1,6 @@\n-from setuptools import setup\n from setuptools import find_packages\n+from setuptools import setup\n+\n \n version = \'6.0.0b3.dev0\'\n \n@@ -24,6 +25,7 @@\n         "Programming Language :: Python :: 3.9",\n         "Programming Language :: Python :: 3.10",\n     ],\n+    python_requires=\'>=3.8\',\n     keywords=\'Plone CMF Python Zope CMS Webapplication\',\n     author=\'Plone Foundation\',\n     author_email=\'releasemanager@plone.org\',\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-10-02T19:54:24+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/474bd8efbe603520d8531ebeb56a6d99673f4e2e

Merge pull request #3638 from Rudd-O/master

Add the styles CSS from the theme to the content CSS to load.

Files changed:
A news/3638.bugfix
M Products/CMFPlone/patterns/tinymce.py

b'diff --git a/Products/CMFPlone/patterns/tinymce.py b/Products/CMFPlone/patterns/tinymce.py\nindex abdf0738ee..6b005593c0 100644\n--- a/Products/CMFPlone/patterns/tinymce.py\n+++ b/Products/CMFPlone/patterns/tinymce.py\n@@ -97,14 +97,17 @@ def get_tiny_config(self):\n         importcss_file_filter = "tinymce-formats.css"\n \n         theme = self.get_theme()\n+        extra_content_css = ""\n         if theme and getattr(theme, "tinymce_styles_css", None):\n-            importcss_file_filter += ",{}/{}".format(\n+            extra = ",{}/{}".format(\n                 self.nav_root_url, theme.tinymce_styles_css.lstrip("/")\n             )\n+            extra_content_css += extra\n+            importcss_file_filter += extra\n \n         tiny_config = {\n             "resize": "both" if settings.resizing else False,\n-            "content_css": self.get_content_css(),\n+            "content_css": self.get_content_css() + extra_content_css,\n             "plugins": ["plonelink", "ploneimage", "importcss"] + settings.plugins,\n             "external_plugins": {},\n             "toolbar": settings.toolbar,\ndiff --git a/news/3638.bugfix b/news/3638.bugfix\nnew file mode 100644\nindex 0000000000..0d63733cd3\n--- /dev/null\n+++ b/news/3638.bugfix\n@@ -0,0 +1 @@\n+* Actually load theme-specified styles CSS in TinyMCE [Rudd-O]\n'

