Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2016-10-22T09:23:23-04:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/2b83df203e3a2d581752ad0c68376e97bd639c38

Fixed adding same resource/bundle to the request multiple times

Files changed:
M CHANGES.rst
M Products/CMFPlone/resources/__init__.py
M Products/CMFPlone/tests/testResourceRegistries.py

diff --git a/CHANGES.rst b/CHANGES.rst
index ce5a65d..ba8bb59 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -153,6 +153,8 @@ Bug fixes:
 
 - Upgrade ``less-plugin-inline-urls`` to ``1.2.0`` to properly handle VML url node values in CSS.
   [thet]
+- Fixed adding same resource/bundle to the request multiple times.
+  [vangheem]
 
 - Fixed missing keyword in robot tests due to wrong documentation lines.
   [maurits]
diff --git a/Products/CMFPlone/resources/__init__.py b/Products/CMFPlone/resources/__init__.py
index 42cdec2..8b8aa98 100644
--- a/Products/CMFPlone/resources/__init__.py
+++ b/Products/CMFPlone/resources/__init__.py
@@ -10,21 +10,21 @@
 def add_resource_on_request(request, resource):
     """ Adds the resource to the request
     """
-    if hasattr(request, 'enabled_resources'):
-        if isinstance(resource, str):
-            request.enabled_resources.append(resource)
-    else:
-        request.enabled_resources = [resource]
+    if not hasattr(request, 'enabled_resources'):
+        request.enabled_resources = []
+
+    if isinstance(resource, str) and resource not in request.enabled_resources:
+        request.enabled_resources.append(resource)
 
 
 def add_bundle_on_request(request, bundle):
     """ Adds the bundle to the request
     """
-    if hasattr(request, 'enabled_bundles'):
-        if isinstance(bundle, str):
-            request.enabled_bundles.append(bundle)
-    else:
-        request.enabled_bundles = [bundle]
+    if not hasattr(request, 'enabled_bundles'):
+        request.enabled_bundles = []
+
+    if isinstance(bundle, str) and bundle not in request.enabled_bundles:
+        request.enabled_bundles.append(bundle)
 
 
 def remove_bundle_on_request(request, bundle):
diff --git a/Products/CMFPlone/tests/testResourceRegistries.py b/Products/CMFPlone/tests/testResourceRegistries.py
index 60aede1..21a145a 100644
--- a/Products/CMFPlone/tests/testResourceRegistries.py
+++ b/Products/CMFPlone/tests/testResourceRegistries.py
@@ -1,27 +1,27 @@
 # -*- coding: utf-8 -*-
-import json
-import mock
-
+from plone.app.testing import logout
+from plone.registry.interfaces import IRegistry
+from plone.resource.interfaces import IResourceDirectory
+from plone.subrequest import subrequest
 from Products.CMFCore.utils import getToolByName
 from Products.CMFPlone.controlpanel.browser.resourceregistry import OverrideFolderManager
 from Products.CMFPlone.controlpanel.browser.resourceregistry import ResourceRegistryControlPanelView
 from Products.CMFPlone.interfaces import IBundleRegistry
 from Products.CMFPlone.interfaces import IResourceRegistry
 from Products.CMFPlone.interfaces.resources import OVERRIDE_RESOURCE_DIRECTORY_NAME
-from Products.CMFPlone.resources.browser.cook import cookWhenChangingSettings
+from Products.CMFPlone.resources import add_bundle_on_request
 from Products.CMFPlone.resources import add_resource_on_request
+from Products.CMFPlone.resources.browser.cook import cookWhenChangingSettings
 from Products.CMFPlone.resources.browser.scripts import ScriptsView
-from Products.CMFPlone.resources.exportimport.resourceregistry import (
-    ResourceRegistryNodeAdapter)
+from Products.CMFPlone.resources.exportimport.resourceregistry import ResourceRegistryNodeAdapter
 from Products.CMFPlone.tests import PloneTestCase
 from Products.GenericSetup.context import SetupEnviron
-from plone.app.testing import logout
-from plone.registry.interfaces import IRegistry
-from plone.resource.interfaces import IResourceDirectory
-from plone.subrequest import subrequest
 from xml.dom.minidom import parseString
 from zope.component import getUtility
 
+import json
+import mock
+
 
 class TestResourceRegistries(PloneTestCase.PloneTestCase):
 
@@ -346,3 +346,16 @@ def test_request_resources(self):
                           'conditionalcomment': '',
                           'bundle': 'none'})
 
+    def test_request_resources_not_add_same_twice(self):
+        req = self.layer['request']
+        add_resource_on_request(req, 'foo')
+        add_resource_on_request(req, 'foo')
+
+        self.assertEqual(len(req.enabled_resources), 1)
+
+    def test_request_bundles_not_add_same_twice(self):
+        req = self.layer['request']
+        add_bundle_on_request(req, 'foo')
+        add_bundle_on_request(req, 'foo')
+
+        self.assertEqual(len(req.enabled_bundles), 1)


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2016-10-22T12:02:35-04:00
Author: Nathan Van Gheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/cea3d52eeb65644c717abdc0cba65a6ac260c621

Merge pull request #1706 from plone/add-resource-twice-5-1

Fixed adding same resource/bundle to the request multiple times

Files changed:
M CHANGES.rst
M Products/CMFPlone/resources/__init__.py
M Products/CMFPlone/tests/testResourceRegistries.py

diff --git a/CHANGES.rst b/CHANGES.rst
index ce5a65d..ba8bb59 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -153,6 +153,8 @@ Bug fixes:
 
 - Upgrade ``less-plugin-inline-urls`` to ``1.2.0`` to properly handle VML url node values in CSS.
   [thet]
+- Fixed adding same resource/bundle to the request multiple times.
+  [vangheem]
 
 - Fixed missing keyword in robot tests due to wrong documentation lines.
   [maurits]
diff --git a/Products/CMFPlone/resources/__init__.py b/Products/CMFPlone/resources/__init__.py
index 42cdec2..8b8aa98 100644
--- a/Products/CMFPlone/resources/__init__.py
+++ b/Products/CMFPlone/resources/__init__.py
@@ -10,21 +10,21 @@
 def add_resource_on_request(request, resource):
     """ Adds the resource to the request
     """
-    if hasattr(request, 'enabled_resources'):
-        if isinstance(resource, str):
-            request.enabled_resources.append(resource)
-    else:
-        request.enabled_resources = [resource]
+    if not hasattr(request, 'enabled_resources'):
+        request.enabled_resources = []
+
+    if isinstance(resource, str) and resource not in request.enabled_resources:
+        request.enabled_resources.append(resource)
 
 
 def add_bundle_on_request(request, bundle):
     """ Adds the bundle to the request
     """
-    if hasattr(request, 'enabled_bundles'):
-        if isinstance(bundle, str):
-            request.enabled_bundles.append(bundle)
-    else:
-        request.enabled_bundles = [bundle]
+    if not hasattr(request, 'enabled_bundles'):
+        request.enabled_bundles = []
+
+    if isinstance(bundle, str) and bundle not in request.enabled_bundles:
+        request.enabled_bundles.append(bundle)
 
 
 def remove_bundle_on_request(request, bundle):
diff --git a/Products/CMFPlone/tests/testResourceRegistries.py b/Products/CMFPlone/tests/testResourceRegistries.py
index 60aede1..21a145a 100644
--- a/Products/CMFPlone/tests/testResourceRegistries.py
+++ b/Products/CMFPlone/tests/testResourceRegistries.py
@@ -1,27 +1,27 @@
 # -*- coding: utf-8 -*-
-import json
-import mock
-
+from plone.app.testing import logout
+from plone.registry.interfaces import IRegistry
+from plone.resource.interfaces import IResourceDirectory
+from plone.subrequest import subrequest
 from Products.CMFCore.utils import getToolByName
 from Products.CMFPlone.controlpanel.browser.resourceregistry import OverrideFolderManager
 from Products.CMFPlone.controlpanel.browser.resourceregistry import ResourceRegistryControlPanelView
 from Products.CMFPlone.interfaces import IBundleRegistry
 from Products.CMFPlone.interfaces import IResourceRegistry
 from Products.CMFPlone.interfaces.resources import OVERRIDE_RESOURCE_DIRECTORY_NAME
-from Products.CMFPlone.resources.browser.cook import cookWhenChangingSettings
+from Products.CMFPlone.resources import add_bundle_on_request
 from Products.CMFPlone.resources import add_resource_on_request
+from Products.CMFPlone.resources.browser.cook import cookWhenChangingSettings
 from Products.CMFPlone.resources.browser.scripts import ScriptsView
-from Products.CMFPlone.resources.exportimport.resourceregistry import (
-    ResourceRegistryNodeAdapter)
+from Products.CMFPlone.resources.exportimport.resourceregistry import ResourceRegistryNodeAdapter
 from Products.CMFPlone.tests import PloneTestCase
 from Products.GenericSetup.context import SetupEnviron
-from plone.app.testing import logout
-from plone.registry.interfaces import IRegistry
-from plone.resource.interfaces import IResourceDirectory
-from plone.subrequest import subrequest
 from xml.dom.minidom import parseString
 from zope.component import getUtility
 
+import json
+import mock
+
 
 class TestResourceRegistries(PloneTestCase.PloneTestCase):
 
@@ -346,3 +346,16 @@ def test_request_resources(self):
                           'conditionalcomment': '',
                           'bundle': 'none'})
 
+    def test_request_resources_not_add_same_twice(self):
+        req = self.layer['request']
+        add_resource_on_request(req, 'foo')
+        add_resource_on_request(req, 'foo')
+
+        self.assertEqual(len(req.enabled_resources), 1)
+
+    def test_request_bundles_not_add_same_twice(self):
+        req = self.layer['request']
+        add_bundle_on_request(req, 'foo')
+        add_bundle_on_request(req, 'foo')
+
+        self.assertEqual(len(req.enabled_bundles), 1)


