Repository: plone.i18n


Branch: refs/heads/master
Date: 2023-02-27T00:58:21+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.i18n/commit/d391bef4e13a0ce37f9190825e7dfcbef4e950da

Configuring with plone/meta

Files changed:
A .editorconfig
A .meta.toml
A .pre-commit-config.yaml
A news/25f71b87.internal
A tox.ini
M pyproject.toml
M setup.cfg

b'diff --git a/.editorconfig b/.editorconfig\nnew file mode 100644\nindex 0000000..b4158b8\n--- /dev/null\n+++ b/.editorconfig\n@@ -0,0 +1,39 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+#\n+# EditorConfig Configuration file, for more details see:\n+# http://EditorConfig.org\n+# EditorConfig is a convention description, that could be interpreted\n+# by multiple editors to enforce common coding conventions for specific\n+# file types\n+\n+# top-most EditorConfig file:\n+# Will ignore other EditorConfig files in Home directory or upper tree level.\n+root = true\n+\n+\n+[*]  # For All Files\n+# Unix-style newlines with a newline ending every file\n+end_of_line = lf\n+insert_final_newline = true\n+trim_trailing_whitespace = true\n+# Set default charset\n+charset = utf-8\n+# Indent style default\n+indent_style = space\n+# Max Line Length - a hard line wrap, should be disabled\n+max_line_length = off\n+\n+[*.{py,cfg,ini}]\n+# 4 space indentation\n+indent_size = 4\n+\n+[*.{yml,zpt,pt,dtml,zcml}]\n+# 2 space indentation\n+indent_size = 2\n+\n+[{Makefile,.gitmodules}]\n+# Tab indentation (no size specified, but view as 4 spaces)\n+indent_style = tab\n+indent_size = unset\n+tab_width = unset\ndiff --git a/.meta.toml b/.meta.toml\nnew file mode 100644\nindex 0000000..f7d5d8d\n--- /dev/null\n+++ b/.meta.toml\n@@ -0,0 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[meta]\n+template = "default"\n+commit-id = "25f71b87"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nnew file mode 100644\nindex 0000000..a3085c9\n--- /dev/null\n+++ b/.pre-commit-config.yaml\n@@ -0,0 +1,42 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+ci:\n+    autofix_prs: false\n+    autoupdate_schedule: monthly\n+\n+repos:\n+-   repo: https://github.com/asottile/pyupgrade\n+    rev: v3.3.1\n+    hooks:\n+    -   id: pyupgrade\n+        args: [--py38-plus]\n+-   repo: https://github.com/pycqa/isort\n+    rev: 5.12.0\n+    hooks:\n+    -   id: isort\n+-   repo: https://github.com/psf/black\n+    rev: 23.1.0\n+    hooks:\n+    -   id: black\n+-   repo: https://github.com/collective/zpretty\n+    rev: 3.0.1\n+    hooks:\n+    -   id: zpretty\n+-   repo: https://github.com/PyCQA/flake8\n+    rev: 6.0.0\n+    hooks:\n+    -   id: flake8\n+-   repo: https://github.com/codespell-project/codespell\n+    rev: v2.2.2\n+    hooks:\n+    -   id: codespell\n+        additional_dependencies:\n+          - tomli\n+-   repo: https://github.com/mgedmin/check-manifest\n+    rev: "0.49"\n+    hooks:\n+    -   id: check-manifest\n+-   repo: https://github.com/regebro/pyroma\n+    rev: "4.1"\n+    hooks:\n+    -   id: pyroma\ndiff --git a/news/25f71b87.internal b/news/25f71b87.internal\nnew file mode 100644\nindex 0000000..c08f539\n--- /dev/null\n+++ b/news/25f71b87.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 05b615d..0f96c85 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,3 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [tool.towncrier]\n filename = "CHANGES.rst"\n directory = "news/"\n@@ -18,3 +20,24 @@ showcontent = true\n directory = "bugfix"\n name = "Bug fixes:"\n showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "internal"\n+name = "Internal:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "documentation"\n+name = "Documentation:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "tests"\n+name = "Tests"\n+showcontent = true\n+\n+[tool.isort]\n+profile = "plone"\n+\n+[tool.black]\n+target-version = ["py38"]\ndiff --git a/setup.cfg b/setup.cfg\nindex 5c35790..e70eb25 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -1,16 +1,24 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[bdist_wheel]\n+universal = 0\n+\n+[flake8]\n+doctests = 1\n+ignore =\n+    # black takes care of line length\n+    E501,\n+    # black takes care of where to break lines\n+    W503,\n+    # black takes care of spaces within slicing (list[:])\n+    E203,\n+    # black takes care of spaces after commas\n+    E231,\n+\n [check-manifest]\n ignore =\n-    *.cfg\n-    .coveragerc\n     .editorconfig\n-    .gitattributes\n-\n-[isort]\n-# black compatible Plone isort rules:\n-profile = black\n-force_alphabetical_sort = True\n-force_single_line = True\n-lines_after_imports = 2\n-\n-[bdist_wheel]\n-universal = 0\n+    .meta.toml\n+    .pre-commit-config.yaml\n+    tox.ini\n+    lint-requirements.txt\ndiff --git a/tox.ini b/tox.ini\nnew file mode 100644\nindex 0000000..401525a\n--- /dev/null\n+++ b/tox.ini\n@@ -0,0 +1,50 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[tox]\n+envlist =\n+    format\n+    lint\n+\n+[testenv]\n+allowlist_externals =\n+    sh\n+\n+[testenv:format]\n+description = automatically reformat code\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a pyupgrade\n+    pre-commit run -a isort\n+    pre-commit run -a black\n+    pre-commit run -a zpretty\n+\n+[testenv:lint]\n+description = run linters that will help improve the code style\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a\n+\n+[testenv:dependencies]\n+description = check if the package defines all its dependencies and generate a graph out of them\n+deps =\n+    z3c.dependencychecker==2.10\n+    pipdeptree==2.3.3\n+    graphviz  # optional dependency of pipdeptree\n+commands =\n+    dependencychecker\n+    sh -c \'pipdeptree --exclude setuptools,pipdeptree,wheel --graph-output svg > dependencies.svg\'\n+\n+[testenv:test]\n+description = run the tests of the distribution\n+deps =\n+    plone.i18n[test]\n+    pytest\n+    gocept.pytestlayer\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    pip install -e .[test]\n+    pytest\n'

Repository: plone.i18n


Branch: refs/heads/master
Date: 2023-02-27T00:59:04+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.i18n/commit/bd21507f14f66985e4c923788857abf129176a5a

chore: black

Files changed:
M plone/i18n/locales/languages.py
M plone/i18n/negotiate/ptsnegotiator.py
M plone/i18n/normalizer/ja.py
M plone/i18n/tests/base.py
M plone/i18n/tests/test_negotiation.py
M plone/i18n/utility.py

b'diff --git a/plone/i18n/locales/languages.py b/plone/i18n/locales/languages.py\nindex 6cbc7f8..63e1ebc 100644\n--- a/plone/i18n/locales/languages.py\n+++ b/plone/i18n/locales/languages.py\n@@ -562,9 +562,7 @@ class MetadataLanguageAvailability(LanguageAvailability):\n # Character sets are a thing now.\n # See https://github.com/collective/plone.app.locales/issues/326\n # At the moment only for Serbian.\n-_zope_i18n_allowed_languages = os.environ.get(\n-    "zope_i18n_allowed_languages", ""\n-)\n+_zope_i18n_allowed_languages = os.environ.get("zope_i18n_allowed_languages", "")\n if "sr@Latn" in _zope_i18n_allowed_languages:\n     _languagelist["sr"] = {\n         "native": "Srpski",\ndiff --git a/plone/i18n/negotiate/ptsnegotiator.py b/plone/i18n/negotiate/ptsnegotiator.py\nindex a380d02..148bb59 100644\n--- a/plone/i18n/negotiate/ptsnegotiator.py\n+++ b/plone/i18n/negotiate/ptsnegotiator.py\n@@ -76,7 +76,6 @@ def _false(*a, **kw):\n \n \n class BrowserAccept:\n-\n     filters = {\n         "content-type": (str_lower,),\n         "language": (str_lower, lang_normalize, str_strip),\n@@ -198,7 +197,6 @@ def setCookieLanguage(request, lang, REQUEST=None):\n \n \n class Negotiator:\n-\n     tests = {"content-type": type_accepted, "language": lang_accepted}\n \n     def negotiate(self, choices, request, kind="content-type"):\ndiff --git a/plone/i18n/normalizer/ja.py b/plone/i18n/normalizer/ja.py\nindex 6242e17..29d457f 100644\n--- a/plone/i18n/normalizer/ja.py\n+++ b/plone/i18n/normalizer/ja.py\n@@ -10,7 +10,7 @@\n \n \n def _gethashed(obj, n):\n-    num = hash(obj) % (TABLE_LEN ** n)\n+    num = hash(obj) % (TABLE_LEN**n)\n     while True:\n         d, m = divmod(num, TABLE_LEN)\n         num = d\ndiff --git a/plone/i18n/tests/base.py b/plone/i18n/tests/base.py\nindex b332467..61c901c 100644\n--- a/plone/i18n/tests/base.py\n+++ b/plone/i18n/tests/base.py\n@@ -7,8 +7,8 @@\n \n # XXX: testing with dependency indirection!\n \n-class PloneI18nLayer(PloneSandboxLayer):\n \n+class PloneI18nLayer(PloneSandboxLayer):\n     defaultBases = (PLONE_APP_CONTENTTYPES_FIXTURE,)\n \n     def setUpZope(self, app, configurationContext):\ndiff --git a/plone/i18n/tests/test_negotiation.py b/plone/i18n/tests/test_negotiation.py\nindex 4bf4b1e..e5c079a 100644\n--- a/plone/i18n/tests/test_negotiation.py\n+++ b/plone/i18n/tests/test_negotiation.py\n@@ -50,7 +50,6 @@ def afterSetUp(self):\n         self.settings.display_flags = 0\n \n     def testLanguageNegotiation(self):\n-\n         # Test simple supported codes\n         response = self.publish(\n             self.portal_path,\n@@ -90,7 +89,6 @@ def afterSetUp(self):\n         self.settings.display_flags = 0\n \n     def testLanguageNegotiation(self):\n-\n         # Test simple supported codes\n         response = self.publish(\n             self.portal_path,\ndiff --git a/plone/i18n/utility.py b/plone/i18n/utility.py\nindex b1cc8de..a2b45a0 100644\n--- a/plone/i18n/utility.py\n+++ b/plone/i18n/utility.py\n@@ -71,7 +71,6 @@ def onRequest(object, event):\n \n @implementer(ILanguageUtility)\n class LanguageUtility:\n-\n     # resources that must not use language specific URLs\n     exclude_paths = frozenset(\n         ("portal_css", "portal_javascripts", "portal_kss", "portal_factory")\n@@ -166,9 +165,7 @@ def setDefaultLanguage(self, langCode):\n         if langCode not in self.settings.available_languages:\n             # If its not in supported langs\n             if len(self.settings.available_languages) > 0:\n-                self.settings.default_language = self.settings.available_languages[\n-                    0\n-                ]\n+                self.settings.default_language = self.settings.available_languages[0]\n             return\n         self.settings.default_language = langCode\n \n'

Repository: plone.i18n


Branch: refs/heads/master
Date: 2023-02-27T01:00:38+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.i18n/commit/c19770677f304a4aabe274cb032ca7a10a1648cb

chore: zpretty

Files changed:
M plone/i18n/configure.zcml
M plone/i18n/locales/browser/configure.zcml
M plone/i18n/locales/configure.zcml
M plone/i18n/normalizer/configure.zcml
M plone/i18n/overrides.zcml

b'diff --git a/plone/i18n/configure.zcml b/plone/i18n/configure.zcml\nindex 2c98c55..a032421 100644\n--- a/plone/i18n/configure.zcml\n+++ b/plone/i18n/configure.zcml\n@@ -1,18 +1,21 @@\n-<configure\n-    xmlns="http://namespaces.zope.org/zope">\n+<configure xmlns="http://namespaces.zope.org/zope">\n \n-    <include package="plone.registry" />\n+  <include package="plone.registry" />\n \n-    <include package=".locales" />\n-    <include package=".normalizer" />\n+  <include package=".locales" />\n+  <include package=".normalizer" />\n \n-    <utility factory=".utility.LanguageUtility"/>\n-    <adapter for="* *" factory=".negotiate.negotiate.NegotiateLanguage"/>\n+  <utility factory=".utility.LanguageUtility" />\n+  <adapter\n+      factory=".negotiate.negotiate.NegotiateLanguage"\n+      for="*\n+           *"\n+      />\n \n-    <subscriber\n-       for="Products.CMFCore.interfaces.ISiteRoot\n-            zope.traversing.interfaces.IBeforeTraverseEvent"\n-       handler=".utility.onRequest"\n-       />\n+  <subscriber\n+      for="Products.CMFCore.interfaces.ISiteRoot\n+           zope.traversing.interfaces.IBeforeTraverseEvent"\n+      handler=".utility.onRequest"\n+      />\n \n </configure>\ndiff --git a/plone/i18n/locales/browser/configure.zcml b/plone/i18n/locales/browser/configure.zcml\nindex 6293b32..a4c9982 100644\n--- a/plone/i18n/locales/browser/configure.zcml\n+++ b/plone/i18n/locales/browser/configure.zcml\n@@ -1,13 +1,16 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n-    xmlns:browser="http://namespaces.zope.org/browser">\n+    xmlns:browser="http://namespaces.zope.org/browser"\n+    >\n \n-    <browser:resourceDirectory\n-        name="country-flags"\n-        directory="country-flags" />\n+  <browser:resourceDirectory\n+      name="country-flags"\n+      directory="country-flags"\n+      />\n \n-    <browser:resourceDirectory\n-        name="language-flags"\n-        directory="language-flags" />\n+  <browser:resourceDirectory\n+      name="language-flags"\n+      directory="language-flags"\n+      />\n \n </configure>\ndiff --git a/plone/i18n/locales/configure.zcml b/plone/i18n/locales/configure.zcml\nindex 96fa779..ec2a961 100644\n--- a/plone/i18n/locales/configure.zcml\n+++ b/plone/i18n/locales/configure.zcml\n@@ -1,26 +1,29 @@\n-<configure\n-    xmlns="http://namespaces.zope.org/zope">\n+<configure xmlns="http://namespaces.zope.org/zope">\n \n-    <include package=".browser" />\n+  <include package=".browser" />\n \n-    <utility\n-        provides=".interfaces.ICountryAvailability"\n-        component=".countries.countries"\n-        permission="zope.Public" />\n+  <utility\n+      provides=".interfaces.ICountryAvailability"\n+      component=".countries.countries"\n+      permission="zope.Public"\n+      />\n \n-    <utility\n-        provides=".interfaces.IContentLanguageAvailability"\n-        component=".languages.contentlanguages"\n-        permission="zope.Public" />\n+  <utility\n+      provides=".interfaces.IContentLanguageAvailability"\n+      component=".languages.contentlanguages"\n+      permission="zope.Public"\n+      />\n \n-    <utility\n-        provides=".interfaces.IMetadataLanguageAvailability"\n-        component=".languages.metadatalanguages"\n-        permission="zope.Public" />\n+  <utility\n+      provides=".interfaces.IMetadataLanguageAvailability"\n+      component=".languages.metadatalanguages"\n+      permission="zope.Public"\n+      />\n \n-    <utility\n-        provides=".interfaces.ICcTLDInformation"\n-        component=".cctld.ccTLDInformation"\n-        permission="zope.Public" />\n+  <utility\n+      provides=".interfaces.ICcTLDInformation"\n+      component=".cctld.ccTLDInformation"\n+      permission="zope.Public"\n+      />\n \n </configure>\ndiff --git a/plone/i18n/normalizer/configure.zcml b/plone/i18n/normalizer/configure.zcml\nindex a0cc069..ae4a985 100644\n--- a/plone/i18n/normalizer/configure.zcml\n+++ b/plone/i18n/normalizer/configure.zcml\n@@ -1,163 +1,187 @@\n-<configure\n-    xmlns="http://namespaces.zope.org/zope">\n+<configure xmlns="http://namespaces.zope.org/zope">\n \n   <utility\n       provides=".interfaces.IIDNormalizer"\n       component=".idnormalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n       provides=".interfaces.IFileNameNormalizer"\n       component=".filenamenormalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n       provides=".interfaces.IURLNormalizer"\n       component=".urlnormalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="de"\n       provides=".interfaces.IFileNameNormalizer"\n+      name="de"\n       component=".de.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="de"\n       provides=".interfaces.IURLNormalizer"\n+      name="de"\n       component=".de.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="el"\n       provides=".interfaces.IFileNameNormalizer"\n+      name="el"\n       component=".el.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="el"\n       provides=".interfaces.IURLNormalizer"\n+      name="el"\n       component=".el.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="fr"\n       provides=".interfaces.IFileNameNormalizer"\n+      name="fr"\n       component=".fr.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="fr"\n       provides=".interfaces.IURLNormalizer"\n+      name="fr"\n       component=".fr.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="ja"\n       provides=".interfaces.IFileNameNormalizer"\n+      name="ja"\n       component=".ja.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="ja"\n       provides=".interfaces.IURLNormalizer"\n+      name="ja"\n       component=".ja.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="pl"\n       provides=".interfaces.IFileNameNormalizer"\n+      name="pl"\n       component=".pl.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="pl"\n       provides=".interfaces.IURLNormalizer"\n+      name="pl"\n       component=".pl.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="pt"\n       provides=".interfaces.IFileNameNormalizer"\n+      name="pt"\n       component=".pt.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="pt"\n       provides=".interfaces.IURLNormalizer"\n+      name="pt"\n       component=".pt.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="ru"\n       provides=".interfaces.IFileNameNormalizer"\n+      name="ru"\n       component=".ru.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="ru"\n       provides=".interfaces.IURLNormalizer"\n+      name="ru"\n       component=".ru.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="tr"\n       provides=".interfaces.IFileNameNormalizer"\n+      name="tr"\n       component=".tr.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="tr"\n       provides=".interfaces.IURLNormalizer"\n+      name="tr"\n       component=".tr.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="bg"\n       provides=".interfaces.IFileNameNormalizer"\n+      name="bg"\n       component=".bg.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="bg"\n       provides=".interfaces.IURLNormalizer"\n+      name="bg"\n       component=".bg.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="uk"\n       provides=".interfaces.IFileNameNormalizer"\n+      name="uk"\n       component=".uk.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="uk"\n       provides=".interfaces.IURLNormalizer"\n+      name="uk"\n       component=".uk.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="es"\n       provides=".interfaces.IFileNameNormalizer"\n+      name="es"\n       component=".es.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="es"\n       provides=".interfaces.IURLNormalizer"\n+      name="es"\n       component=".es.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <adapter\n-      for="zope.publisher.interfaces.http.IHTTPRequest"\n-      provides=".interfaces.IUserPreferredFileNameNormalizer"\n       factory=".adapters.UserPreferredFileNameNormalizer"\n+      provides=".interfaces.IUserPreferredFileNameNormalizer"\n+      for="zope.publisher.interfaces.http.IHTTPRequest"\n       />\n \n   <adapter\n-      for="zope.publisher.interfaces.http.IHTTPRequest"\n-      provides=".interfaces.IUserPreferredURLNormalizer"\n       factory=".adapters.UserPreferredURLNormalizer"\n+      provides=".interfaces.IUserPreferredURLNormalizer"\n+      for="zope.publisher.interfaces.http.IHTTPRequest"\n       />\n \n </configure>\ndiff --git a/plone/i18n/overrides.zcml b/plone/i18n/overrides.zcml\nindex cbc0507..eba654f 100644\n--- a/plone/i18n/overrides.zcml\n+++ b/plone/i18n/overrides.zcml\n@@ -1,9 +1,9 @@\n <configure xmlns="http://namespaces.zope.org/zope">\n \n   <adapter\n-    for="zope.publisher.interfaces.http.IHTTPRequest"\n-    provides="zope.i18n.interfaces.IUserPreferredLanguages"\n-    factory=".negotiate.ptsnegotiator.PTSLanguages"\n-    />\n+      factory=".negotiate.ptsnegotiator.PTSLanguages"\n+      provides="zope.i18n.interfaces.IUserPreferredLanguages"\n+      for="zope.publisher.interfaces.http.IHTTPRequest"\n+      />\n \n </configure>\n'

Repository: plone.i18n


Branch: refs/heads/master
Date: 2023-03-03T00:32:05+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.i18n/commit/25c4f0af146dbf51a4d651dd3f1dd97d7cd37297

feat: flake8 errors

Files changed:
M plone/i18n/negotiate/ptsnegotiator.py
M plone/i18n/tests/base.py
M plone/i18n/utility.py

b'diff --git a/plone/i18n/negotiate/ptsnegotiator.py b/plone/i18n/negotiate/ptsnegotiator.py\nindex 148bb59..c9cc27c 100644\n--- a/plone/i18n/negotiate/ptsnegotiator.py\n+++ b/plone/i18n/negotiate/ptsnegotiator.py\n@@ -101,8 +101,8 @@ def getAccepted(self, request, kind="content-type"):\n         ):\n             user_accepts = [a.strip() for a in user_accepts.split(",")]\n             http_accepts = [a.strip() for a in http_accepts.split(",")]\n-            for l in user_accepts:\n-                if l not in http_accepts:\n+            for value in user_accepts:\n+                if value not in http_accepts:\n                     req_accepts = user_accepts + http_accepts\n                     break\n                 else:\n@@ -125,12 +125,12 @@ def getAccepted(self, request, kind="content-type"):\n             for normalizer in filters:\n                 accept = normalizer(accept)\n             if accept:\n-                ll = accept.split(";", 2)\n+                value = accept.split(";", 2)\n                 quality = []\n \n-                if len(ll) == 2:\n+                if len(value) == 2:\n                     try:\n-                        q = l[1]\n+                        q = value[1]\n                         if q.startswith("q="):\n                             q = q.split("=", 2)[1]\n                             quality = float(q)\n@@ -140,7 +140,7 @@ def getAccepted(self, request, kind="content-type"):\n                 if quality == []:\n                     quality = float(length - i)\n \n-                accepts.append((quality, ll[0]))\n+                accepts.append((quality, value[0]))\n                 i += 1\n \n         # sort and reverse it\ndiff --git a/plone/i18n/tests/base.py b/plone/i18n/tests/base.py\nindex 61c901c..885c2ca 100644\n--- a/plone/i18n/tests/base.py\n+++ b/plone/i18n/tests/base.py\n@@ -2,7 +2,6 @@\n from plone.app.testing import bbb\n from plone.app.testing import FunctionalTesting\n from plone.app.testing import PloneSandboxLayer\n-from plone.testing import z2\n \n \n # XXX: testing with dependency indirection!\ndiff --git a/plone/i18n/utility.py b/plone/i18n/utility.py\nindex a2b45a0..843c195 100644\n--- a/plone/i18n/utility.py\n+++ b/plone/i18n/utility.py\n@@ -43,7 +43,7 @@ def setLanguageBinding(request):\n     binding = request.get("LANGUAGE_TOOL", None)\n     try:\n         settings = getMultiAdapter((getSite(), request), INegotiateLanguage)\n-    except:\n+    except Exception:\n         # We may be on a site before upgrading so return None\n         # No registry is registered\n         return None\n@@ -242,7 +242,7 @@ def getPathLanguage(self, request):\n                     return item\n         except (ConflictError, KeyboardInterrupt):\n             raise\n-        except:\n+        except Exception:\n             pass\n         return None\n \n@@ -287,7 +287,7 @@ def getContentLanguage(self, request):\n                     return None\n         except ConflictError:\n             raise\n-        except:\n+        except Exception:\n             pass\n         return None\n \n@@ -344,7 +344,7 @@ def getRequestLanguages(self, request):\n                         if q.startswith("q="):\n                             q = q.split("=", 2)[1]\n                             quality = float(q)\n-                    except:\n+                    except Exception:\n                         pass\n \n                 if quality == []:\n@@ -399,7 +399,7 @@ def listAvailableCountries(self):\n         """Returns the sorted list of available countries (code, name)."""\n         util = getUtility(ICountryAvailability)\n         countries = util.getCountryListing()\n-        countries.sort(lambda x, y: cmp(x[1], y[1]))\n+        countries = sorted(countries, key=lambda x: x[1])\n         return countries\n \n     def getNameForCountryCode(self, countryCode):\n'

Repository: plone.i18n


Branch: refs/heads/master
Date: 2023-03-03T00:38:49+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.i18n/commit/05c0c40faa587d390aca7cd20b407eddd090e753

chore: codespell typos

Files changed:
M CHANGES.rst
M plone/i18n/locales/countries.py
M plone/i18n/locales/languages.py
M plone/i18n/negotiate/ptsnegotiator.py
M plone/i18n/normalizer/interfaces.py
M plone/i18n/tests/test_negotiation.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 7df2700..565870f 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -371,7 +371,7 @@ Fixes:\n ------------------\n \n - In practice the Unidecode data didn\'t produce good enough results for various\n-  languages. We therefor limit the transliteration approach again to latin-like\n+  languages. We therefore limit the transliteration approach again to latin-like\n   languages and introduce a UNIDECODE_LIMIT. This closes\n   http://dev.plone.org/plone/ticket/10107.\n   [hannosch]\ndiff --git a/plone/i18n/locales/countries.py b/plone/i18n/locales/countries.py\nindex af2226f..b626d72 100644\n--- a/plone/i18n/locales/countries.py\n+++ b/plone/i18n/locales/countries.py\n@@ -4,7 +4,7 @@\n \n @implementer(ICountryAvailability)\n class CountryAvailability:\n-    """A list of available coutries."""\n+    """A list of available countries."""\n \n     def getAvailableCountries(self):\n         """Return a sequence of country tags for available countries."""\n@@ -21,7 +21,7 @@ def getCountryListing(self):\n \n countries = CountryAvailability()\n \n-# This is a dictionary of dictonaries:\n+# This is a dictionary of dictionaries:\n #\n # \'country-code\' : {\n #     u\'name\' : \'English name\',\ndiff --git a/plone/i18n/locales/languages.py b/plone/i18n/locales/languages.py\nindex 63e1ebc..c3a3463 100644\n--- a/plone/i18n/locales/languages.py\n+++ b/plone/i18n/locales/languages.py\n@@ -47,7 +47,7 @@ class MetadataLanguageAvailability(LanguageAvailability):\n \n metadatalanguages = MetadataLanguageAvailability()\n \n-# This is a dictionary of dictonaries:\n+# This is a dictionary of dictionaries:\n #\n # \'langcode-variation\' : {\n #     u\'native\' : \'Native name\',\ndiff --git a/plone/i18n/negotiate/ptsnegotiator.py b/plone/i18n/negotiate/ptsnegotiator.py\nindex c9cc27c..28c48e9 100644\n--- a/plone/i18n/negotiate/ptsnegotiator.py\n+++ b/plone/i18n/negotiate/ptsnegotiator.py\n@@ -23,7 +23,7 @@ def registerLangPrefsMethod(prefs, kind="language"):\n     # add chain for kind\n     if kind not in _langPrefsRegistry:\n         _langPrefsRegistry[kind] = []\n-    # backwards compatibilty monkey patch\n+    # backwards compatibility monkey patch\n     if not hasattr(prefs["klass"], "getAccepted"):\n         prefs["klass"].getAccepted = getAcceptedHelper\n     # add this pref helper\n@@ -33,7 +33,7 @@ def registerLangPrefsMethod(prefs, kind="language"):\n \n \n def getLangPrefs(env, kind="language"):\n-    """get higest prio method for kind"""\n+    """get highest priority method for kind"""\n     for pref in _langPrefsRegistry[kind]:\n         handler = pref["klass"](env)\n         accepted = handler.getAccepted(env, kind)\ndiff --git a/plone/i18n/normalizer/interfaces.py b/plone/i18n/normalizer/interfaces.py\nindex 78384ba..84bc05f 100644\n--- a/plone/i18n/normalizer/interfaces.py\n+++ b/plone/i18n/normalizer/interfaces.py\n@@ -9,7 +9,7 @@ class INormalizer(Interface):\n     def normalize(text, locale=None, max_length=None):\n         """The normalize method takes and input unicode text and an optional\n         locale string and returns a normalized version of the text.\n-        If the locale is not None the ouput might differ dependent on the\n+        If the locale is not None the output might differ dependent on the\n         locale. The max_length argument allows you to override the default\n         values used by the normalizers on a case-by-case basis.\n         """\ndiff --git a/plone/i18n/tests/test_negotiation.py b/plone/i18n/tests/test_negotiation.py\nindex e5c079a..5b81eb0 100644\n--- a/plone/i18n/tests/test_negotiation.py\n+++ b/plone/i18n/tests/test_negotiation.py\n@@ -258,7 +258,7 @@ def testDutchDomain(self):\n         self.checkLanguage(response, "nl")\n \n     def testAcceptedLanguages(self):\n-        # Brazil uses Portugese, which is not in the accepted languages list\n+        # Brazil uses Portuguese, which is not in the accepted languages list\n         response = self.publish(\n             self.portal_path,\n             self.basic_auth,\n@@ -326,7 +326,7 @@ def testDutchDomain(self):\n         self.checkLanguage(response, "nl")\n \n     def testAcceptedLanguages(self):\n-        # Brazil uses Portugese, which is not in the accepted languages list\n+        # Brazil uses Portuguese, which is not in the accepted languages list\n         response = self.publish(\n             self.portal_path,\n             self.basic_auth,\n'

Repository: plone.i18n


Branch: refs/heads/master
Date: 2023-03-03T00:43:09+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.i18n/commit/dd0225a860b360323a7bdd45bb8fd47f8d38d257

Configuring with plone/meta

Files changed:
M .meta.toml
M pyproject.toml

b'diff --git a/.meta.toml b/.meta.toml\nindex f7d5d8d..3a3d3b1 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -3,3 +3,6 @@\n [meta]\n template = "default"\n commit-id = "25f71b87"\n+\n+[codespell]\n+additional-ignores = "fo,nam,nd,te,ue"\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 0f96c85..90aaf4a 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -41,3 +41,6 @@ profile = "plone"\n \n [tool.black]\n target-version = ["py38"]\n+\n+[tool.codespell]\n+ignore-words-list = "fo,nam,nd,te,ue"\n'

Repository: plone.i18n


Branch: refs/heads/master
Date: 2023-03-08T14:00:08+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.i18n/commit/11bf8094ec5f870a9bcee71848c74f6a17f512df

Merge pull request #50 from plone/config-with-default-template-05c0c40f

Config with default template

Files changed:
A .editorconfig
A .meta.toml
A .pre-commit-config.yaml
A news/25f71b87.internal
A tox.ini
M CHANGES.rst
M plone/i18n/configure.zcml
M plone/i18n/locales/browser/configure.zcml
M plone/i18n/locales/configure.zcml
M plone/i18n/locales/countries.py
M plone/i18n/locales/languages.py
M plone/i18n/negotiate/ptsnegotiator.py
M plone/i18n/normalizer/configure.zcml
M plone/i18n/normalizer/interfaces.py
M plone/i18n/normalizer/ja.py
M plone/i18n/overrides.zcml
M plone/i18n/tests/base.py
M plone/i18n/tests/test_negotiation.py
M plone/i18n/utility.py
M pyproject.toml
M setup.cfg

b'diff --git a/.editorconfig b/.editorconfig\nnew file mode 100644\nindex 0000000..b4158b8\n--- /dev/null\n+++ b/.editorconfig\n@@ -0,0 +1,39 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+#\n+# EditorConfig Configuration file, for more details see:\n+# http://EditorConfig.org\n+# EditorConfig is a convention description, that could be interpreted\n+# by multiple editors to enforce common coding conventions for specific\n+# file types\n+\n+# top-most EditorConfig file:\n+# Will ignore other EditorConfig files in Home directory or upper tree level.\n+root = true\n+\n+\n+[*]  # For All Files\n+# Unix-style newlines with a newline ending every file\n+end_of_line = lf\n+insert_final_newline = true\n+trim_trailing_whitespace = true\n+# Set default charset\n+charset = utf-8\n+# Indent style default\n+indent_style = space\n+# Max Line Length - a hard line wrap, should be disabled\n+max_line_length = off\n+\n+[*.{py,cfg,ini}]\n+# 4 space indentation\n+indent_size = 4\n+\n+[*.{yml,zpt,pt,dtml,zcml}]\n+# 2 space indentation\n+indent_size = 2\n+\n+[{Makefile,.gitmodules}]\n+# Tab indentation (no size specified, but view as 4 spaces)\n+indent_style = tab\n+indent_size = unset\n+tab_width = unset\ndiff --git a/.meta.toml b/.meta.toml\nnew file mode 100644\nindex 0000000..3a3d3b1\n--- /dev/null\n+++ b/.meta.toml\n@@ -0,0 +1,8 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[meta]\n+template = "default"\n+commit-id = "25f71b87"\n+\n+[codespell]\n+additional-ignores = "fo,nam,nd,te,ue"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nnew file mode 100644\nindex 0000000..a3085c9\n--- /dev/null\n+++ b/.pre-commit-config.yaml\n@@ -0,0 +1,42 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+ci:\n+    autofix_prs: false\n+    autoupdate_schedule: monthly\n+\n+repos:\n+-   repo: https://github.com/asottile/pyupgrade\n+    rev: v3.3.1\n+    hooks:\n+    -   id: pyupgrade\n+        args: [--py38-plus]\n+-   repo: https://github.com/pycqa/isort\n+    rev: 5.12.0\n+    hooks:\n+    -   id: isort\n+-   repo: https://github.com/psf/black\n+    rev: 23.1.0\n+    hooks:\n+    -   id: black\n+-   repo: https://github.com/collective/zpretty\n+    rev: 3.0.1\n+    hooks:\n+    -   id: zpretty\n+-   repo: https://github.com/PyCQA/flake8\n+    rev: 6.0.0\n+    hooks:\n+    -   id: flake8\n+-   repo: https://github.com/codespell-project/codespell\n+    rev: v2.2.2\n+    hooks:\n+    -   id: codespell\n+        additional_dependencies:\n+          - tomli\n+-   repo: https://github.com/mgedmin/check-manifest\n+    rev: "0.49"\n+    hooks:\n+    -   id: check-manifest\n+-   repo: https://github.com/regebro/pyroma\n+    rev: "4.1"\n+    hooks:\n+    -   id: pyroma\ndiff --git a/CHANGES.rst b/CHANGES.rst\nindex 7df2700..565870f 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -371,7 +371,7 @@ Fixes:\n ------------------\n \n - In practice the Unidecode data didn\'t produce good enough results for various\n-  languages. We therefor limit the transliteration approach again to latin-like\n+  languages. We therefore limit the transliteration approach again to latin-like\n   languages and introduce a UNIDECODE_LIMIT. This closes\n   http://dev.plone.org/plone/ticket/10107.\n   [hannosch]\ndiff --git a/news/25f71b87.internal b/news/25f71b87.internal\nnew file mode 100644\nindex 0000000..c08f539\n--- /dev/null\n+++ b/news/25f71b87.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/plone/i18n/configure.zcml b/plone/i18n/configure.zcml\nindex 2c98c55..a032421 100644\n--- a/plone/i18n/configure.zcml\n+++ b/plone/i18n/configure.zcml\n@@ -1,18 +1,21 @@\n-<configure\n-    xmlns="http://namespaces.zope.org/zope">\n+<configure xmlns="http://namespaces.zope.org/zope">\n \n-    <include package="plone.registry" />\n+  <include package="plone.registry" />\n \n-    <include package=".locales" />\n-    <include package=".normalizer" />\n+  <include package=".locales" />\n+  <include package=".normalizer" />\n \n-    <utility factory=".utility.LanguageUtility"/>\n-    <adapter for="* *" factory=".negotiate.negotiate.NegotiateLanguage"/>\n+  <utility factory=".utility.LanguageUtility" />\n+  <adapter\n+      factory=".negotiate.negotiate.NegotiateLanguage"\n+      for="*\n+           *"\n+      />\n \n-    <subscriber\n-       for="Products.CMFCore.interfaces.ISiteRoot\n-            zope.traversing.interfaces.IBeforeTraverseEvent"\n-       handler=".utility.onRequest"\n-       />\n+  <subscriber\n+      for="Products.CMFCore.interfaces.ISiteRoot\n+           zope.traversing.interfaces.IBeforeTraverseEvent"\n+      handler=".utility.onRequest"\n+      />\n \n </configure>\ndiff --git a/plone/i18n/locales/browser/configure.zcml b/plone/i18n/locales/browser/configure.zcml\nindex 6293b32..a4c9982 100644\n--- a/plone/i18n/locales/browser/configure.zcml\n+++ b/plone/i18n/locales/browser/configure.zcml\n@@ -1,13 +1,16 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n-    xmlns:browser="http://namespaces.zope.org/browser">\n+    xmlns:browser="http://namespaces.zope.org/browser"\n+    >\n \n-    <browser:resourceDirectory\n-        name="country-flags"\n-        directory="country-flags" />\n+  <browser:resourceDirectory\n+      name="country-flags"\n+      directory="country-flags"\n+      />\n \n-    <browser:resourceDirectory\n-        name="language-flags"\n-        directory="language-flags" />\n+  <browser:resourceDirectory\n+      name="language-flags"\n+      directory="language-flags"\n+      />\n \n </configure>\ndiff --git a/plone/i18n/locales/configure.zcml b/plone/i18n/locales/configure.zcml\nindex 96fa779..ec2a961 100644\n--- a/plone/i18n/locales/configure.zcml\n+++ b/plone/i18n/locales/configure.zcml\n@@ -1,26 +1,29 @@\n-<configure\n-    xmlns="http://namespaces.zope.org/zope">\n+<configure xmlns="http://namespaces.zope.org/zope">\n \n-    <include package=".browser" />\n+  <include package=".browser" />\n \n-    <utility\n-        provides=".interfaces.ICountryAvailability"\n-        component=".countries.countries"\n-        permission="zope.Public" />\n+  <utility\n+      provides=".interfaces.ICountryAvailability"\n+      component=".countries.countries"\n+      permission="zope.Public"\n+      />\n \n-    <utility\n-        provides=".interfaces.IContentLanguageAvailability"\n-        component=".languages.contentlanguages"\n-        permission="zope.Public" />\n+  <utility\n+      provides=".interfaces.IContentLanguageAvailability"\n+      component=".languages.contentlanguages"\n+      permission="zope.Public"\n+      />\n \n-    <utility\n-        provides=".interfaces.IMetadataLanguageAvailability"\n-        component=".languages.metadatalanguages"\n-        permission="zope.Public" />\n+  <utility\n+      provides=".interfaces.IMetadataLanguageAvailability"\n+      component=".languages.metadatalanguages"\n+      permission="zope.Public"\n+      />\n \n-    <utility\n-        provides=".interfaces.ICcTLDInformation"\n-        component=".cctld.ccTLDInformation"\n-        permission="zope.Public" />\n+  <utility\n+      provides=".interfaces.ICcTLDInformation"\n+      component=".cctld.ccTLDInformation"\n+      permission="zope.Public"\n+      />\n \n </configure>\ndiff --git a/plone/i18n/locales/countries.py b/plone/i18n/locales/countries.py\nindex af2226f..b626d72 100644\n--- a/plone/i18n/locales/countries.py\n+++ b/plone/i18n/locales/countries.py\n@@ -4,7 +4,7 @@\n \n @implementer(ICountryAvailability)\n class CountryAvailability:\n-    """A list of available coutries."""\n+    """A list of available countries."""\n \n     def getAvailableCountries(self):\n         """Return a sequence of country tags for available countries."""\n@@ -21,7 +21,7 @@ def getCountryListing(self):\n \n countries = CountryAvailability()\n \n-# This is a dictionary of dictonaries:\n+# This is a dictionary of dictionaries:\n #\n # \'country-code\' : {\n #     u\'name\' : \'English name\',\ndiff --git a/plone/i18n/locales/languages.py b/plone/i18n/locales/languages.py\nindex 6cbc7f8..c3a3463 100644\n--- a/plone/i18n/locales/languages.py\n+++ b/plone/i18n/locales/languages.py\n@@ -47,7 +47,7 @@ class MetadataLanguageAvailability(LanguageAvailability):\n \n metadatalanguages = MetadataLanguageAvailability()\n \n-# This is a dictionary of dictonaries:\n+# This is a dictionary of dictionaries:\n #\n # \'langcode-variation\' : {\n #     u\'native\' : \'Native name\',\n@@ -562,9 +562,7 @@ class MetadataLanguageAvailability(LanguageAvailability):\n # Character sets are a thing now.\n # See https://github.com/collective/plone.app.locales/issues/326\n # At the moment only for Serbian.\n-_zope_i18n_allowed_languages = os.environ.get(\n-    "zope_i18n_allowed_languages", ""\n-)\n+_zope_i18n_allowed_languages = os.environ.get("zope_i18n_allowed_languages", "")\n if "sr@Latn" in _zope_i18n_allowed_languages:\n     _languagelist["sr"] = {\n         "native": "Srpski",\ndiff --git a/plone/i18n/negotiate/ptsnegotiator.py b/plone/i18n/negotiate/ptsnegotiator.py\nindex a380d02..28c48e9 100644\n--- a/plone/i18n/negotiate/ptsnegotiator.py\n+++ b/plone/i18n/negotiate/ptsnegotiator.py\n@@ -23,7 +23,7 @@ def registerLangPrefsMethod(prefs, kind="language"):\n     # add chain for kind\n     if kind not in _langPrefsRegistry:\n         _langPrefsRegistry[kind] = []\n-    # backwards compatibilty monkey patch\n+    # backwards compatibility monkey patch\n     if not hasattr(prefs["klass"], "getAccepted"):\n         prefs["klass"].getAccepted = getAcceptedHelper\n     # add this pref helper\n@@ -33,7 +33,7 @@ def registerLangPrefsMethod(prefs, kind="language"):\n \n \n def getLangPrefs(env, kind="language"):\n-    """get higest prio method for kind"""\n+    """get highest priority method for kind"""\n     for pref in _langPrefsRegistry[kind]:\n         handler = pref["klass"](env)\n         accepted = handler.getAccepted(env, kind)\n@@ -76,7 +76,6 @@ def _false(*a, **kw):\n \n \n class BrowserAccept:\n-\n     filters = {\n         "content-type": (str_lower,),\n         "language": (str_lower, lang_normalize, str_strip),\n@@ -102,8 +101,8 @@ def getAccepted(self, request, kind="content-type"):\n         ):\n             user_accepts = [a.strip() for a in user_accepts.split(",")]\n             http_accepts = [a.strip() for a in http_accepts.split(",")]\n-            for l in user_accepts:\n-                if l not in http_accepts:\n+            for value in user_accepts:\n+                if value not in http_accepts:\n                     req_accepts = user_accepts + http_accepts\n                     break\n                 else:\n@@ -126,12 +125,12 @@ def getAccepted(self, request, kind="content-type"):\n             for normalizer in filters:\n                 accept = normalizer(accept)\n             if accept:\n-                ll = accept.split(";", 2)\n+                value = accept.split(";", 2)\n                 quality = []\n \n-                if len(ll) == 2:\n+                if len(value) == 2:\n                     try:\n-                        q = l[1]\n+                        q = value[1]\n                         if q.startswith("q="):\n                             q = q.split("=", 2)[1]\n                             quality = float(q)\n@@ -141,7 +140,7 @@ def getAccepted(self, request, kind="content-type"):\n                 if quality == []:\n                     quality = float(length - i)\n \n-                accepts.append((quality, ll[0]))\n+                accepts.append((quality, value[0]))\n                 i += 1\n \n         # sort and reverse it\n@@ -198,7 +197,6 @@ def setCookieLanguage(request, lang, REQUEST=None):\n \n \n class Negotiator:\n-\n     tests = {"content-type": type_accepted, "language": lang_accepted}\n \n     def negotiate(self, choices, request, kind="content-type"):\ndiff --git a/plone/i18n/normalizer/configure.zcml b/plone/i18n/normalizer/configure.zcml\nindex a0cc069..ae4a985 100644\n--- a/plone/i18n/normalizer/configure.zcml\n+++ b/plone/i18n/normalizer/configure.zcml\n@@ -1,163 +1,187 @@\n-<configure\n-    xmlns="http://namespaces.zope.org/zope">\n+<configure xmlns="http://namespaces.zope.org/zope">\n \n   <utility\n       provides=".interfaces.IIDNormalizer"\n       component=".idnormalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n       provides=".interfaces.IFileNameNormalizer"\n       component=".filenamenormalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n       provides=".interfaces.IURLNormalizer"\n       component=".urlnormalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="de"\n       provides=".interfaces.IFileNameNormalizer"\n+      name="de"\n       component=".de.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="de"\n       provides=".interfaces.IURLNormalizer"\n+      name="de"\n       component=".de.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="el"\n       provides=".interfaces.IFileNameNormalizer"\n+      name="el"\n       component=".el.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="el"\n       provides=".interfaces.IURLNormalizer"\n+      name="el"\n       component=".el.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="fr"\n       provides=".interfaces.IFileNameNormalizer"\n+      name="fr"\n       component=".fr.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="fr"\n       provides=".interfaces.IURLNormalizer"\n+      name="fr"\n       component=".fr.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="ja"\n       provides=".interfaces.IFileNameNormalizer"\n+      name="ja"\n       component=".ja.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="ja"\n       provides=".interfaces.IURLNormalizer"\n+      name="ja"\n       component=".ja.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="pl"\n       provides=".interfaces.IFileNameNormalizer"\n+      name="pl"\n       component=".pl.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="pl"\n       provides=".interfaces.IURLNormalizer"\n+      name="pl"\n       component=".pl.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="pt"\n       provides=".interfaces.IFileNameNormalizer"\n+      name="pt"\n       component=".pt.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="pt"\n       provides=".interfaces.IURLNormalizer"\n+      name="pt"\n       component=".pt.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="ru"\n       provides=".interfaces.IFileNameNormalizer"\n+      name="ru"\n       component=".ru.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="ru"\n       provides=".interfaces.IURLNormalizer"\n+      name="ru"\n       component=".ru.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="tr"\n       provides=".interfaces.IFileNameNormalizer"\n+      name="tr"\n       component=".tr.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="tr"\n       provides=".interfaces.IURLNormalizer"\n+      name="tr"\n       component=".tr.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="bg"\n       provides=".interfaces.IFileNameNormalizer"\n+      name="bg"\n       component=".bg.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="bg"\n       provides=".interfaces.IURLNormalizer"\n+      name="bg"\n       component=".bg.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="uk"\n       provides=".interfaces.IFileNameNormalizer"\n+      name="uk"\n       component=".uk.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="uk"\n       provides=".interfaces.IURLNormalizer"\n+      name="uk"\n       component=".uk.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="es"\n       provides=".interfaces.IFileNameNormalizer"\n+      name="es"\n       component=".es.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <utility\n-      name="es"\n       provides=".interfaces.IURLNormalizer"\n+      name="es"\n       component=".es.normalizer"\n-      permission="zope.Public" />\n+      permission="zope.Public"\n+      />\n \n   <adapter\n-      for="zope.publisher.interfaces.http.IHTTPRequest"\n-      provides=".interfaces.IUserPreferredFileNameNormalizer"\n       factory=".adapters.UserPreferredFileNameNormalizer"\n+      provides=".interfaces.IUserPreferredFileNameNormalizer"\n+      for="zope.publisher.interfaces.http.IHTTPRequest"\n       />\n \n   <adapter\n-      for="zope.publisher.interfaces.http.IHTTPRequest"\n-      provides=".interfaces.IUserPreferredURLNormalizer"\n       factory=".adapters.UserPreferredURLNormalizer"\n+      provides=".interfaces.IUserPreferredURLNormalizer"\n+      for="zope.publisher.interfaces.http.IHTTPRequest"\n       />\n \n </configure>\ndiff --git a/plone/i18n/normalizer/interfaces.py b/plone/i18n/normalizer/interfaces.py\nindex 78384ba..84bc05f 100644\n--- a/plone/i18n/normalizer/interfaces.py\n+++ b/plone/i18n/normalizer/interfaces.py\n@@ -9,7 +9,7 @@ class INormalizer(Interface):\n     def normalize(text, locale=None, max_length=None):\n         """The normalize method takes and input unicode text and an optional\n         locale string and returns a normalized version of the text.\n-        If the locale is not None the ouput might differ dependent on the\n+        If the locale is not None the output might differ dependent on the\n         locale. The max_length argument allows you to override the default\n         values used by the normalizers on a case-by-case basis.\n         """\ndiff --git a/plone/i18n/normalizer/ja.py b/plone/i18n/normalizer/ja.py\nindex 6242e17..29d457f 100644\n--- a/plone/i18n/normalizer/ja.py\n+++ b/plone/i18n/normalizer/ja.py\n@@ -10,7 +10,7 @@\n \n \n def _gethashed(obj, n):\n-    num = hash(obj) % (TABLE_LEN ** n)\n+    num = hash(obj) % (TABLE_LEN**n)\n     while True:\n         d, m = divmod(num, TABLE_LEN)\n         num = d\ndiff --git a/plone/i18n/overrides.zcml b/plone/i18n/overrides.zcml\nindex cbc0507..eba654f 100644\n--- a/plone/i18n/overrides.zcml\n+++ b/plone/i18n/overrides.zcml\n@@ -1,9 +1,9 @@\n <configure xmlns="http://namespaces.zope.org/zope">\n \n   <adapter\n-    for="zope.publisher.interfaces.http.IHTTPRequest"\n-    provides="zope.i18n.interfaces.IUserPreferredLanguages"\n-    factory=".negotiate.ptsnegotiator.PTSLanguages"\n-    />\n+      factory=".negotiate.ptsnegotiator.PTSLanguages"\n+      provides="zope.i18n.interfaces.IUserPreferredLanguages"\n+      for="zope.publisher.interfaces.http.IHTTPRequest"\n+      />\n \n </configure>\ndiff --git a/plone/i18n/tests/base.py b/plone/i18n/tests/base.py\nindex b332467..885c2ca 100644\n--- a/plone/i18n/tests/base.py\n+++ b/plone/i18n/tests/base.py\n@@ -2,13 +2,12 @@\n from plone.app.testing import bbb\n from plone.app.testing import FunctionalTesting\n from plone.app.testing import PloneSandboxLayer\n-from plone.testing import z2\n \n \n # XXX: testing with dependency indirection!\n \n-class PloneI18nLayer(PloneSandboxLayer):\n \n+class PloneI18nLayer(PloneSandboxLayer):\n     defaultBases = (PLONE_APP_CONTENTTYPES_FIXTURE,)\n \n     def setUpZope(self, app, configurationContext):\ndiff --git a/plone/i18n/tests/test_negotiation.py b/plone/i18n/tests/test_negotiation.py\nindex 4bf4b1e..5b81eb0 100644\n--- a/plone/i18n/tests/test_negotiation.py\n+++ b/plone/i18n/tests/test_negotiation.py\n@@ -50,7 +50,6 @@ def afterSetUp(self):\n         self.settings.display_flags = 0\n \n     def testLanguageNegotiation(self):\n-\n         # Test simple supported codes\n         response = self.publish(\n             self.portal_path,\n@@ -90,7 +89,6 @@ def afterSetUp(self):\n         self.settings.display_flags = 0\n \n     def testLanguageNegotiation(self):\n-\n         # Test simple supported codes\n         response = self.publish(\n             self.portal_path,\n@@ -260,7 +258,7 @@ def testDutchDomain(self):\n         self.checkLanguage(response, "nl")\n \n     def testAcceptedLanguages(self):\n-        # Brazil uses Portugese, which is not in the accepted languages list\n+        # Brazil uses Portuguese, which is not in the accepted languages list\n         response = self.publish(\n             self.portal_path,\n             self.basic_auth,\n@@ -328,7 +326,7 @@ def testDutchDomain(self):\n         self.checkLanguage(response, "nl")\n \n     def testAcceptedLanguages(self):\n-        # Brazil uses Portugese, which is not in the accepted languages list\n+        # Brazil uses Portuguese, which is not in the accepted languages list\n         response = self.publish(\n             self.portal_path,\n             self.basic_auth,\ndiff --git a/plone/i18n/utility.py b/plone/i18n/utility.py\nindex b1cc8de..843c195 100644\n--- a/plone/i18n/utility.py\n+++ b/plone/i18n/utility.py\n@@ -43,7 +43,7 @@ def setLanguageBinding(request):\n     binding = request.get("LANGUAGE_TOOL", None)\n     try:\n         settings = getMultiAdapter((getSite(), request), INegotiateLanguage)\n-    except:\n+    except Exception:\n         # We may be on a site before upgrading so return None\n         # No registry is registered\n         return None\n@@ -71,7 +71,6 @@ def onRequest(object, event):\n \n @implementer(ILanguageUtility)\n class LanguageUtility:\n-\n     # resources that must not use language specific URLs\n     exclude_paths = frozenset(\n         ("portal_css", "portal_javascripts", "portal_kss", "portal_factory")\n@@ -166,9 +165,7 @@ def setDefaultLanguage(self, langCode):\n         if langCode not in self.settings.available_languages:\n             # If its not in supported langs\n             if len(self.settings.available_languages) > 0:\n-                self.settings.default_language = self.settings.available_languages[\n-                    0\n-                ]\n+                self.settings.default_language = self.settings.available_languages[0]\n             return\n         self.settings.default_language = langCode\n \n@@ -245,7 +242,7 @@ def getPathLanguage(self, request):\n                     return item\n         except (ConflictError, KeyboardInterrupt):\n             raise\n-        except:\n+        except Exception:\n             pass\n         return None\n \n@@ -290,7 +287,7 @@ def getContentLanguage(self, request):\n                     return None\n         except ConflictError:\n             raise\n-        except:\n+        except Exception:\n             pass\n         return None\n \n@@ -347,7 +344,7 @@ def getRequestLanguages(self, request):\n                         if q.startswith("q="):\n                             q = q.split("=", 2)[1]\n                             quality = float(q)\n-                    except:\n+                    except Exception:\n                         pass\n \n                 if quality == []:\n@@ -402,7 +399,7 @@ def listAvailableCountries(self):\n         """Returns the sorted list of available countries (code, name)."""\n         util = getUtility(ICountryAvailability)\n         countries = util.getCountryListing()\n-        countries.sort(lambda x, y: cmp(x[1], y[1]))\n+        countries = sorted(countries, key=lambda x: x[1])\n         return countries\n \n     def getNameForCountryCode(self, countryCode):\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 05b615d..90aaf4a 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,3 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [tool.towncrier]\n filename = "CHANGES.rst"\n directory = "news/"\n@@ -18,3 +20,27 @@ showcontent = true\n directory = "bugfix"\n name = "Bug fixes:"\n showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "internal"\n+name = "Internal:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "documentation"\n+name = "Documentation:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "tests"\n+name = "Tests"\n+showcontent = true\n+\n+[tool.isort]\n+profile = "plone"\n+\n+[tool.black]\n+target-version = ["py38"]\n+\n+[tool.codespell]\n+ignore-words-list = "fo,nam,nd,te,ue"\ndiff --git a/setup.cfg b/setup.cfg\nindex 5c35790..e70eb25 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -1,16 +1,24 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[bdist_wheel]\n+universal = 0\n+\n+[flake8]\n+doctests = 1\n+ignore =\n+    # black takes care of line length\n+    E501,\n+    # black takes care of where to break lines\n+    W503,\n+    # black takes care of spaces within slicing (list[:])\n+    E203,\n+    # black takes care of spaces after commas\n+    E231,\n+\n [check-manifest]\n ignore =\n-    *.cfg\n-    .coveragerc\n     .editorconfig\n-    .gitattributes\n-\n-[isort]\n-# black compatible Plone isort rules:\n-profile = black\n-force_alphabetical_sort = True\n-force_single_line = True\n-lines_after_imports = 2\n-\n-[bdist_wheel]\n-universal = 0\n+    .meta.toml\n+    .pre-commit-config.yaml\n+    tox.ini\n+    lint-requirements.txt\ndiff --git a/tox.ini b/tox.ini\nnew file mode 100644\nindex 0000000..401525a\n--- /dev/null\n+++ b/tox.ini\n@@ -0,0 +1,50 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[tox]\n+envlist =\n+    format\n+    lint\n+\n+[testenv]\n+allowlist_externals =\n+    sh\n+\n+[testenv:format]\n+description = automatically reformat code\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a pyupgrade\n+    pre-commit run -a isort\n+    pre-commit run -a black\n+    pre-commit run -a zpretty\n+\n+[testenv:lint]\n+description = run linters that will help improve the code style\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a\n+\n+[testenv:dependencies]\n+description = check if the package defines all its dependencies and generate a graph out of them\n+deps =\n+    z3c.dependencychecker==2.10\n+    pipdeptree==2.3.3\n+    graphviz  # optional dependency of pipdeptree\n+commands =\n+    dependencychecker\n+    sh -c \'pipdeptree --exclude setuptools,pipdeptree,wheel --graph-output svg > dependencies.svg\'\n+\n+[testenv:test]\n+description = run the tests of the distribution\n+deps =\n+    plone.i18n[test]\n+    pytest\n+    gocept.pytestlayer\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    pip install -e .[test]\n+    pytest\n'

