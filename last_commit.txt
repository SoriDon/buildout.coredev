Repository: plone.scale


Branch: refs/heads/master
Date: 2016-05-12T09:01:22+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.scale/commit/72b61f2509b9c82bf5cd2a6eec80946fbeeffe1f

less restrictive factory passing. assume priority for passed factories.

Files changed:
M plone/scale/interfaces.py
M plone/scale/storage.py

diff --git a/plone/scale/interfaces.py b/plone/scale/interfaces.py
index e99eadd..f68aa2c 100644
--- a/plone/scale/interfaces.py
+++ b/plone/scale/interfaces.py
@@ -23,6 +23,7 @@ def _call__(
         direction='thumbnail',
         height=None,
         width=None,
+        scale=None,
         **parameters
     ):
         """Interface defining an actual scaling operation.
@@ -41,6 +42,10 @@ def _call__(
         ``width`` and ``height``
             target size
 
+        ``scale``
+            name of the current scale, if there is one. Can be used to retrieve
+             additional information such as cropping boxes.
+
         ``**parameters``
             is a dict with optional additional expected keyword arguments
 
diff --git a/plone/scale/storage.py b/plone/scale/storage.py
index 36e112c..5d3cbc4 100644
--- a/plone/scale/storage.py
+++ b/plone/scale/storage.py
@@ -171,9 +171,13 @@ def scale(self, factory=None, **parameters):
         # BBB/Deprecation handling
         if factory is not None:
             if scaling_factory is not None:
-                raise ValueError(
+                warnings.warn(
+                    'Deprecated usage of factory in plone.scale. '
                     'Factory is passed to plone.scale but also an adapter '
-                    'was found. No way to decide which one to execute.'
+                    'was found. No way to really decide which one to execute.'
+                    'To be nice and with a look at backward compatibility the '
+                    'passed one is used.',
+                    DeprecationWarning
                 )
             else:
                 warnings.warn(
@@ -182,7 +186,7 @@ def scale(self, factory=None, **parameters):
                     'dropped with plone.scale 3.0',
                     DeprecationWarning
                 )
-                result = factory(**parameters)
+            result = factory(**parameters)
         elif scaling_factory is not None:
             # this is what we want, keep this after deprecaton phase
             result = scaling_factory(**parameters)


Repository: plone.scale


Branch: refs/heads/master
Date: 2016-05-12T11:14:35+02:00
Author: agitator (agitator) <hpeter@agitator.com>
Commit: https://github.com/plone/plone.scale/commit/92b7a638e3e9815c576f5ad7acfd861fd1ddde60

Merge pull request #10 from plone/less-restrictive-passed-factory-usage

less restrictive factory passing. assume priority for passed factories.

Files changed:
M plone/scale/interfaces.py
M plone/scale/storage.py

diff --git a/plone/scale/interfaces.py b/plone/scale/interfaces.py
index e99eadd..f68aa2c 100644
--- a/plone/scale/interfaces.py
+++ b/plone/scale/interfaces.py
@@ -23,6 +23,7 @@ def _call__(
         direction='thumbnail',
         height=None,
         width=None,
+        scale=None,
         **parameters
     ):
         """Interface defining an actual scaling operation.
@@ -41,6 +42,10 @@ def _call__(
         ``width`` and ``height``
             target size
 
+        ``scale``
+            name of the current scale, if there is one. Can be used to retrieve
+             additional information such as cropping boxes.
+
         ``**parameters``
             is a dict with optional additional expected keyword arguments
 
diff --git a/plone/scale/storage.py b/plone/scale/storage.py
index 36e112c..5d3cbc4 100644
--- a/plone/scale/storage.py
+++ b/plone/scale/storage.py
@@ -171,9 +171,13 @@ def scale(self, factory=None, **parameters):
         # BBB/Deprecation handling
         if factory is not None:
             if scaling_factory is not None:
-                raise ValueError(
+                warnings.warn(
+                    'Deprecated usage of factory in plone.scale. '
                     'Factory is passed to plone.scale but also an adapter '
-                    'was found. No way to decide which one to execute.'
+                    'was found. No way to really decide which one to execute.'
+                    'To be nice and with a look at backward compatibility the '
+                    'passed one is used.',
+                    DeprecationWarning
                 )
             else:
                 warnings.warn(
@@ -182,7 +186,7 @@ def scale(self, factory=None, **parameters):
                     'dropped with plone.scale 3.0',
                     DeprecationWarning
                 )
-                result = factory(**parameters)
+            result = factory(**parameters)
         elif scaling_factory is not None:
             # this is what we want, keep this after deprecaton phase
             result = scaling_factory(**parameters)


