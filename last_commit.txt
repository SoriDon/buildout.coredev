Repository: plone.namedfile


Branch: refs/heads/master
Date: 2016-06-13T23:10:10+02:00
Author: Gil Forcada (gforcada) <gforcada@gnome.org>
Commit: https://github.com/plone/plone.namedfile/commit/b3bfd18a35d17fb330680942082353164a14aab7

Minor round of cleanups

Files changed:
M CHANGES.rst
M plone/namedfile/__init__.py
M plone/namedfile/copy.py
M plone/namedfile/handler.py
M plone/namedfile/scaling.py
M plone/namedfile/testing.py
M plone/namedfile/tests/test_blobfile.py
M plone/namedfile/tests/test_doctests.py
M plone/namedfile/tests/test_image.py
M plone/namedfile/tests/test_scaling.py
M plone/namedfile/tests/test_scaling_functional.py

diff --git a/CHANGES.rst b/CHANGES.rst
index d22c60c..767c5a7 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -45,6 +45,9 @@ Fixes:
 - Fix warning on testing.zcml missing an i18n:domain.
   [gforcada]
 
+- Fix some code analysis warnings.
+  [gforcada]
+
 3.0.8 (2016-02-26)
 ------------------
 
diff --git a/plone/namedfile/__init__.py b/plone/namedfile/__init__.py
index 2e59844..bc51c28 100644
--- a/plone/namedfile/__init__.py
+++ b/plone/namedfile/__init__.py
@@ -1,5 +1,5 @@
 # -*- coding: utf-8 -*-
-from plone.namedfile.file import NamedBlobFile    # noqa
-from plone.namedfile.file import NamedBlobImage   # noqa
-from plone.namedfile.file import NamedFile        # noqa
-from plone.namedfile.file import NamedImage       # noqa
+from plone.namedfile.file import NamedBlobFile  # noqa
+from plone.namedfile.file import NamedBlobImage  # noqa
+from plone.namedfile.file import NamedFile  # noqa
+from plone.namedfile.file import NamedImage  # noqa
diff --git a/plone/namedfile/copy.py b/plone/namedfile/copy.py
index 525cc5a..d189c39 100644
--- a/plone/namedfile/copy.py
+++ b/plone/namedfile/copy.py
@@ -1,8 +1,9 @@
 # -*- coding: utf-8 -*-
 """Copy hook for proper copying blob data
+
+This file was borrowed from z3c.blobfile and is licensed under the terms of
+the ZPL.
 """
-# This file was borrowed from z3c.blobfile and is licensed under the terms of
-# the ZPL.
 from plone.namedfile.interfaces import INamedBlobFile
 from ZODB.blob import Blob
 from zope.component import adapter
diff --git a/plone/namedfile/handler.py b/plone/namedfile/handler.py
index 2081393..933b36a 100644
--- a/plone/namedfile/handler.py
+++ b/plone/namedfile/handler.py
@@ -1,6 +1,6 @@
 # -*- coding: utf-8 -*-
-from plone.supermodel.exportimport import ObjectHandler
 from plone.namedfile import field
+from plone.supermodel.exportimport import ObjectHandler
 
 
 class FileFieldHandler(ObjectHandler):
diff --git a/plone/namedfile/scaling.py b/plone/namedfile/scaling.py
index 1cc1c1e..6dd32ac 100644
--- a/plone/namedfile/scaling.py
+++ b/plone/namedfile/scaling.py
@@ -223,9 +223,10 @@ def __call__(
             raise
         except Exception:
             logger.exception(
-                'Could not scale "%r" of %r',
-                orig_value,
-                self.context.absolute_url()
+                'Could not scale "{0!r}" of {1!r}'.format(
+                    orig_value,
+                    self.context.absolute_url
+                ),
             )
             return
         if result is None:
diff --git a/plone/namedfile/testing.py b/plone/namedfile/testing.py
index e716aab..49ee830 100644
--- a/plone/namedfile/testing.py
+++ b/plone/namedfile/testing.py
@@ -33,11 +33,11 @@ def tearDown(self):
 PLONE_NAMEDFILE_FIXTURE = NamedFileTestLayer()
 
 PLONE_NAMEDFILE_INTEGRATION_TESTING = z2.IntegrationTesting(
-    bases=(PLONE_NAMEDFILE_FIXTURE,),
-    name="plone.namedfile:NamedFileTestLayerIntegration"
+    bases=(PLONE_NAMEDFILE_FIXTURE, ),
+    name='plone.namedfile:NamedFileTestLayerIntegration',
 )
 
 PLONE_NAMEDFILE_FUNCTIONAL_TESTING = z2.FunctionalTesting(
-    bases=(PLONE_NAMEDFILE_FIXTURE,),
-    name="plone.namedfile:NamedFileTestLayerFunctional"
+    bases=(PLONE_NAMEDFILE_FIXTURE, ),
+    name='plone.namedfile:NamedFileTestLayerFunctional',
 )
diff --git a/plone/namedfile/tests/test_blobfile.py b/plone/namedfile/tests/test_blobfile.py
index 020fafb..ec14bfd 100644
--- a/plone/namedfile/tests/test_blobfile.py
+++ b/plone/namedfile/tests/test_blobfile.py
@@ -22,8 +22,8 @@
 from plone.namedfile.interfaces import INamedBlobFile
 from plone.namedfile.interfaces import INamedBlobImage
 from plone.namedfile.interfaces import IStorage
-from plone.namedfile.testing import PLONE_NAMEDFILE_INTEGRATION_TESTING
 from plone.namedfile.testing import PLONE_NAMEDFILE_FUNCTIONAL_TESTING
+from plone.namedfile.testing import PLONE_NAMEDFILE_INTEGRATION_TESTING
 from plone.namedfile.tests.test_image import zptlogo
 from zope.component import provideUtility
 from zope.interface.verify import verifyClass
@@ -37,22 +37,22 @@ def registerUtilities():
     provideUtility(
         storages.StringStorable(),
         IStorage,
-        name="__builtin__.str"
+        name='__builtin__.str'
     )
     provideUtility(
         storages.UnicodeStorable(),
         IStorage,
-        name="__builtin__.unicode"
+        name='__builtin__.unicode'
     )
     provideUtility(
         storages.FileChunkStorable(),
         IStorage,
-        name="plone.namedfile.file.FileChunk"
+        name='plone.namedfile.file.FileChunk'
     )
     provideUtility(
         storages.FileDescriptorStorable(),
         IStorage,
-        name="__builtin__.file"
+        name='__builtin__.file'
     )
 
 
diff --git a/plone/namedfile/tests/test_doctests.py b/plone/namedfile/tests/test_doctests.py
index 6be6cb7..25f400a 100644
--- a/plone/namedfile/tests/test_doctests.py
+++ b/plone/namedfile/tests/test_doctests.py
@@ -2,10 +2,10 @@
 from plone.namedfile.testing import PLONE_NAMEDFILE_FUNCTIONAL_TESTING
 from plone.testing import layered
 
-
 import doctest
 import unittest
 
+
 TEST_FILES = [
     'usage.rst',
     'handler.rst',
diff --git a/plone/namedfile/tests/test_image.py b/plone/namedfile/tests/test_image.py
index dc702e5..f6f58a7 100644
--- a/plone/namedfile/tests/test_image.py
+++ b/plone/namedfile/tests/test_image.py
@@ -6,8 +6,8 @@
 from plone.namedfile.utils import get_contenttype
 from zope.interface.verify import verifyClass
 
-import unittest
 import os
+import unittest
 
 
 def getFile(filename):
diff --git a/plone/namedfile/tests/test_scaling.py b/plone/namedfile/tests/test_scaling.py
index 65e80ee..c237460 100644
--- a/plone/namedfile/tests/test_scaling.py
+++ b/plone/namedfile/tests/test_scaling.py
@@ -105,8 +105,11 @@ def testGetScaleByName(self):
 
         tag = foo.tag()
         base = self.item.absolute_url()
-        expected = r'<img src="%s/@@images/([-0-9a-f]{36}).(jpeg|gif|png)" ' \
-            r'alt="foo" title="foo" height="(\d+)" width="(\d+)" />' % base
+        expected = \
+            r'<img src="{0}/@@images/([-0-9a-f]{{36}}).(jpeg|gif|png)" ' \
+            r'alt="foo" title="foo" height="(\d+)" width="(\d+)" />'.format(
+                base
+            )
         groups = re.match(expected, tag).groups()
         self.assertTrue(groups, tag)
 
@@ -123,7 +126,7 @@ def testScaleInvalidation(self):
         data = getFile('image.jpg').read()
         self.item.image = NamedImage(data, 'image/jpeg', u'image.jpg')
         foo2 = self.scaling.scale('image', scale='foo')
-        self.failIf(foo1.data == foo2.data, 'scale not updated?')
+        self.assertFalse(foo1.data == foo2.data, 'scale not updated?')
 
     def testCustomSizeChange(self):
         # set custom image sizes & view a scale
@@ -172,24 +175,33 @@ def testGetImageSize(self):
     def testGetOriginalScaleTag(self):
         tag = self.scaling.tag('image')
         base = self.item.absolute_url()
-        expected = r'<img src="%s/@@images/([-0-9a-f]{36}).(jpeg|gif|png)" ' \
-            r'alt="foo" title="foo" height="(\d+)" width="(\d+)" />' % base
+        expected = \
+            r'<img src="{0}/@@images/([-0-9a-f]{{36}}).(jpeg|gif|png)" ' \
+            r'alt="foo" title="foo" height="(\d+)" width="(\d+)" />'.format(
+                base
+            )
         self.assertTrue(re.match(expected, tag).groups())
 
     def testScaleOnItemWithNonASCIITitle(self):
         self.item.title = '\xc3\xbc'
         tag = self.scaling.tag('image')
         base = self.item.absolute_url()
-        expected = r'<img src="%s/@@images/([-0-9a-f]{36}).(jpeg|gif|png)" ' \
-            r'alt="\xfc" title="\xfc" height="(\d+)" width="(\d+)" />' % base
+        expected = \
+            r'<img src="{0}/@@images/([-0-9a-f]{{36}}).(jpeg|gif|png)" ' \
+            r'alt="\xfc" title="\xfc" height="(\d+)" width="(\d+)" />'.format(
+                base
+            )
         self.assertTrue(re.match(expected, tag).groups())
 
     def testScaleOnItemWithUnicodeTitle(self):
         self.item.Title = lambda: '\xc3\xbc'.decode('utf8')
         tag = self.scaling.tag('image')
         base = self.item.absolute_url()
-        expected = r'<img src="%s/@@images/([-0-9a-f]{36}).(jpeg|gif|png)" ' \
-            r'alt="\xfc" title="\xfc" height="(\d+)" width="(\d+)" />' % base
+        expected = \
+            r'<img src="{0}/@@images/([-0-9a-f]{{36}}).(jpeg|gif|png)" ' \
+            r'alt="\xfc" title="\xfc" height="(\d+)" width="(\d+)" />'.format(
+                base
+            )
         self.assertTrue(re.match(expected, tag).groups())
 
     def testScaledJpegImageQuality(self):
@@ -240,8 +252,11 @@ def traverse(self, path=''):
         scale = stack.pop(0)
         tag = static_traverser.traverse(scale, stack)
         base = self.item.absolute_url()
-        expected = r'<img src="%s/@@images/([-0-9a-f]{36}).(jpeg|gif|png)" ' \
-            r'alt="foo" title="foo" height="(\d+)" width="(\d+)" />' % base
+        expected = \
+            r'<img src="{0}/@@images/([-0-9a-f]{{36}}).(jpeg|gif|png)" ' \
+            r'alt="foo" title="foo" height="(\d+)" width="(\d+)" />'.format(
+                base
+            )
         groups = re.match(expected, tag).groups()
         self.assertTrue(groups, tag)
         uid, ext, height, width = groups
diff --git a/plone/namedfile/tests/test_scaling_functional.py b/plone/namedfile/tests/test_scaling_functional.py
index 7166132..7eb2934 100644
--- a/plone/namedfile/tests/test_scaling_functional.py
+++ b/plone/namedfile/tests/test_scaling_functional.py
@@ -113,7 +113,7 @@ def testHeadRequestMethod(self):
 
         class HeadRequest(Request):
             def get_method(self):
-                return "HEAD"
+                return 'HEAD'
 
         head_request = HeadRequest(scale.url)
         mbrowser = self.browser.mech_browser


Repository: plone.namedfile


Branch: refs/heads/master
Date: 2016-06-14T09:33:34+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.namedfile/commit/d07ec4e88c477e099fb0958037a1d9fcc0b13f51

Merge pull request #29 from plone/gforcada-code-analysis

Minor round of cleanups

Files changed:
M CHANGES.rst
M plone/namedfile/__init__.py
M plone/namedfile/copy.py
M plone/namedfile/handler.py
M plone/namedfile/scaling.py
M plone/namedfile/testing.py
M plone/namedfile/tests/test_blobfile.py
M plone/namedfile/tests/test_doctests.py
M plone/namedfile/tests/test_image.py
M plone/namedfile/tests/test_scaling.py
M plone/namedfile/tests/test_scaling_functional.py

diff --git a/CHANGES.rst b/CHANGES.rst
index d22c60c..767c5a7 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -45,6 +45,9 @@ Fixes:
 - Fix warning on testing.zcml missing an i18n:domain.
   [gforcada]
 
+- Fix some code analysis warnings.
+  [gforcada]
+
 3.0.8 (2016-02-26)
 ------------------
 
diff --git a/plone/namedfile/__init__.py b/plone/namedfile/__init__.py
index 2e59844..bc51c28 100644
--- a/plone/namedfile/__init__.py
+++ b/plone/namedfile/__init__.py
@@ -1,5 +1,5 @@
 # -*- coding: utf-8 -*-
-from plone.namedfile.file import NamedBlobFile    # noqa
-from plone.namedfile.file import NamedBlobImage   # noqa
-from plone.namedfile.file import NamedFile        # noqa
-from plone.namedfile.file import NamedImage       # noqa
+from plone.namedfile.file import NamedBlobFile  # noqa
+from plone.namedfile.file import NamedBlobImage  # noqa
+from plone.namedfile.file import NamedFile  # noqa
+from plone.namedfile.file import NamedImage  # noqa
diff --git a/plone/namedfile/copy.py b/plone/namedfile/copy.py
index 525cc5a..d189c39 100644
--- a/plone/namedfile/copy.py
+++ b/plone/namedfile/copy.py
@@ -1,8 +1,9 @@
 # -*- coding: utf-8 -*-
 """Copy hook for proper copying blob data
+
+This file was borrowed from z3c.blobfile and is licensed under the terms of
+the ZPL.
 """
-# This file was borrowed from z3c.blobfile and is licensed under the terms of
-# the ZPL.
 from plone.namedfile.interfaces import INamedBlobFile
 from ZODB.blob import Blob
 from zope.component import adapter
diff --git a/plone/namedfile/handler.py b/plone/namedfile/handler.py
index 2081393..933b36a 100644
--- a/plone/namedfile/handler.py
+++ b/plone/namedfile/handler.py
@@ -1,6 +1,6 @@
 # -*- coding: utf-8 -*-
-from plone.supermodel.exportimport import ObjectHandler
 from plone.namedfile import field
+from plone.supermodel.exportimport import ObjectHandler
 
 
 class FileFieldHandler(ObjectHandler):
diff --git a/plone/namedfile/scaling.py b/plone/namedfile/scaling.py
index 1cc1c1e..6dd32ac 100644
--- a/plone/namedfile/scaling.py
+++ b/plone/namedfile/scaling.py
@@ -223,9 +223,10 @@ def __call__(
             raise
         except Exception:
             logger.exception(
-                'Could not scale "%r" of %r',
-                orig_value,
-                self.context.absolute_url()
+                'Could not scale "{0!r}" of {1!r}'.format(
+                    orig_value,
+                    self.context.absolute_url
+                ),
             )
             return
         if result is None:
diff --git a/plone/namedfile/testing.py b/plone/namedfile/testing.py
index e716aab..49ee830 100644
--- a/plone/namedfile/testing.py
+++ b/plone/namedfile/testing.py
@@ -33,11 +33,11 @@ def tearDown(self):
 PLONE_NAMEDFILE_FIXTURE = NamedFileTestLayer()
 
 PLONE_NAMEDFILE_INTEGRATION_TESTING = z2.IntegrationTesting(
-    bases=(PLONE_NAMEDFILE_FIXTURE,),
-    name="plone.namedfile:NamedFileTestLayerIntegration"
+    bases=(PLONE_NAMEDFILE_FIXTURE, ),
+    name='plone.namedfile:NamedFileTestLayerIntegration',
 )
 
 PLONE_NAMEDFILE_FUNCTIONAL_TESTING = z2.FunctionalTesting(
-    bases=(PLONE_NAMEDFILE_FIXTURE,),
-    name="plone.namedfile:NamedFileTestLayerFunctional"
+    bases=(PLONE_NAMEDFILE_FIXTURE, ),
+    name='plone.namedfile:NamedFileTestLayerFunctional',
 )
diff --git a/plone/namedfile/tests/test_blobfile.py b/plone/namedfile/tests/test_blobfile.py
index 020fafb..ec14bfd 100644
--- a/plone/namedfile/tests/test_blobfile.py
+++ b/plone/namedfile/tests/test_blobfile.py
@@ -22,8 +22,8 @@
 from plone.namedfile.interfaces import INamedBlobFile
 from plone.namedfile.interfaces import INamedBlobImage
 from plone.namedfile.interfaces import IStorage
-from plone.namedfile.testing import PLONE_NAMEDFILE_INTEGRATION_TESTING
 from plone.namedfile.testing import PLONE_NAMEDFILE_FUNCTIONAL_TESTING
+from plone.namedfile.testing import PLONE_NAMEDFILE_INTEGRATION_TESTING
 from plone.namedfile.tests.test_image import zptlogo
 from zope.component import provideUtility
 from zope.interface.verify import verifyClass
@@ -37,22 +37,22 @@ def registerUtilities():
     provideUtility(
         storages.StringStorable(),
         IStorage,
-        name="__builtin__.str"
+        name='__builtin__.str'
     )
     provideUtility(
         storages.UnicodeStorable(),
         IStorage,
-        name="__builtin__.unicode"
+        name='__builtin__.unicode'
     )
     provideUtility(
         storages.FileChunkStorable(),
         IStorage,
-        name="plone.namedfile.file.FileChunk"
+        name='plone.namedfile.file.FileChunk'
     )
     provideUtility(
         storages.FileDescriptorStorable(),
         IStorage,
-        name="__builtin__.file"
+        name='__builtin__.file'
     )
 
 
diff --git a/plone/namedfile/tests/test_doctests.py b/plone/namedfile/tests/test_doctests.py
index 6be6cb7..25f400a 100644
--- a/plone/namedfile/tests/test_doctests.py
+++ b/plone/namedfile/tests/test_doctests.py
@@ -2,10 +2,10 @@
 from plone.namedfile.testing import PLONE_NAMEDFILE_FUNCTIONAL_TESTING
 from plone.testing import layered
 
-
 import doctest
 import unittest
 
+
 TEST_FILES = [
     'usage.rst',
     'handler.rst',
diff --git a/plone/namedfile/tests/test_image.py b/plone/namedfile/tests/test_image.py
index dc702e5..f6f58a7 100644
--- a/plone/namedfile/tests/test_image.py
+++ b/plone/namedfile/tests/test_image.py
@@ -6,8 +6,8 @@
 from plone.namedfile.utils import get_contenttype
 from zope.interface.verify import verifyClass
 
-import unittest
 import os
+import unittest
 
 
 def getFile(filename):
diff --git a/plone/namedfile/tests/test_scaling.py b/plone/namedfile/tests/test_scaling.py
index 65e80ee..c237460 100644
--- a/plone/namedfile/tests/test_scaling.py
+++ b/plone/namedfile/tests/test_scaling.py
@@ -105,8 +105,11 @@ def testGetScaleByName(self):
 
         tag = foo.tag()
         base = self.item.absolute_url()
-        expected = r'<img src="%s/@@images/([-0-9a-f]{36}).(jpeg|gif|png)" ' \
-            r'alt="foo" title="foo" height="(\d+)" width="(\d+)" />' % base
+        expected = \
+            r'<img src="{0}/@@images/([-0-9a-f]{{36}}).(jpeg|gif|png)" ' \
+            r'alt="foo" title="foo" height="(\d+)" width="(\d+)" />'.format(
+                base
+            )
         groups = re.match(expected, tag).groups()
         self.assertTrue(groups, tag)
 
@@ -123,7 +126,7 @@ def testScaleInvalidation(self):
         data = getFile('image.jpg').read()
         self.item.image = NamedImage(data, 'image/jpeg', u'image.jpg')
         foo2 = self.scaling.scale('image', scale='foo')
-        self.failIf(foo1.data == foo2.data, 'scale not updated?')
+        self.assertFalse(foo1.data == foo2.data, 'scale not updated?')
 
     def testCustomSizeChange(self):
         # set custom image sizes & view a scale
@@ -172,24 +175,33 @@ def testGetImageSize(self):
     def testGetOriginalScaleTag(self):
         tag = self.scaling.tag('image')
         base = self.item.absolute_url()
-        expected = r'<img src="%s/@@images/([-0-9a-f]{36}).(jpeg|gif|png)" ' \
-            r'alt="foo" title="foo" height="(\d+)" width="(\d+)" />' % base
+        expected = \
+            r'<img src="{0}/@@images/([-0-9a-f]{{36}}).(jpeg|gif|png)" ' \
+            r'alt="foo" title="foo" height="(\d+)" width="(\d+)" />'.format(
+                base
+            )
         self.assertTrue(re.match(expected, tag).groups())
 
     def testScaleOnItemWithNonASCIITitle(self):
         self.item.title = '\xc3\xbc'
         tag = self.scaling.tag('image')
         base = self.item.absolute_url()
-        expected = r'<img src="%s/@@images/([-0-9a-f]{36}).(jpeg|gif|png)" ' \
-            r'alt="\xfc" title="\xfc" height="(\d+)" width="(\d+)" />' % base
+        expected = \
+            r'<img src="{0}/@@images/([-0-9a-f]{{36}}).(jpeg|gif|png)" ' \
+            r'alt="\xfc" title="\xfc" height="(\d+)" width="(\d+)" />'.format(
+                base
+            )
         self.assertTrue(re.match(expected, tag).groups())
 
     def testScaleOnItemWithUnicodeTitle(self):
         self.item.Title = lambda: '\xc3\xbc'.decode('utf8')
         tag = self.scaling.tag('image')
         base = self.item.absolute_url()
-        expected = r'<img src="%s/@@images/([-0-9a-f]{36}).(jpeg|gif|png)" ' \
-            r'alt="\xfc" title="\xfc" height="(\d+)" width="(\d+)" />' % base
+        expected = \
+            r'<img src="{0}/@@images/([-0-9a-f]{{36}}).(jpeg|gif|png)" ' \
+            r'alt="\xfc" title="\xfc" height="(\d+)" width="(\d+)" />'.format(
+                base
+            )
         self.assertTrue(re.match(expected, tag).groups())
 
     def testScaledJpegImageQuality(self):
@@ -240,8 +252,11 @@ def traverse(self, path=''):
         scale = stack.pop(0)
         tag = static_traverser.traverse(scale, stack)
         base = self.item.absolute_url()
-        expected = r'<img src="%s/@@images/([-0-9a-f]{36}).(jpeg|gif|png)" ' \
-            r'alt="foo" title="foo" height="(\d+)" width="(\d+)" />' % base
+        expected = \
+            r'<img src="{0}/@@images/([-0-9a-f]{{36}}).(jpeg|gif|png)" ' \
+            r'alt="foo" title="foo" height="(\d+)" width="(\d+)" />'.format(
+                base
+            )
         groups = re.match(expected, tag).groups()
         self.assertTrue(groups, tag)
         uid, ext, height, width = groups
diff --git a/plone/namedfile/tests/test_scaling_functional.py b/plone/namedfile/tests/test_scaling_functional.py
index 7166132..7eb2934 100644
--- a/plone/namedfile/tests/test_scaling_functional.py
+++ b/plone/namedfile/tests/test_scaling_functional.py
@@ -113,7 +113,7 @@ def testHeadRequestMethod(self):
 
         class HeadRequest(Request):
             def get_method(self):
-                return "HEAD"
+                return 'HEAD'
 
         head_request = HeadRequest(scale.url)
         mbrowser = self.browser.mech_browser


