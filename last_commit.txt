Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2022-03-24T15:19:06+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.upgrade/commit/a914ef84f7d9a8aa0b4af938a656b7a0fd2b8e89

add upgrades to migrate existing site to es6

Files changed:
A news/269.feature
A plone/app/upgrade/v60/profiles/to6004/registry.xml
M plone/app/upgrade/v60/alphas.py
M plone/app/upgrade/v60/configure.zcml
M plone/app/upgrade/v60/profiles.zcml
M plone/app/upgrade/v60/profiles/to6003/registry.xml

b'diff --git a/news/269.feature b/news/269.feature\nnew file mode 100644\nindex 00000000..87a24d96\n--- /dev/null\n+++ b/news/269.feature\n@@ -0,0 +1 @@\n+Add upgrades to migrate existing site to es6. [pbauer]\n\\ No newline at end of file\ndiff --git a/plone/app/upgrade/v60/alphas.py b/plone/app/upgrade/v60/alphas.py\nindex d0adb75f..781e06d1 100644\n--- a/plone/app/upgrade/v60/alphas.py\n+++ b/plone/app/upgrade/v60/alphas.py\n@@ -1,11 +1,14 @@\n # -*- coding: utf-8 -*-\n from plone.app.upgrade.utils import loadMigrationProfile\n from plone.dexterity.fti import DexterityFTI\n+from plone.registry.interfaces import IRegistry\n from plone.uuid.interfaces import ATTRIBUTE_NAME\n from plone.uuid.interfaces import IUUIDGenerator\n from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone.interfaces import IBundleRegistry\n from Products.CMFPlone.utils import safe_unicode\n from ZODB.broken import Broken\n+from zope.component import getUtility\n from zope.component import queryUtility\n from zope.component.hooks import getSite\n \n@@ -278,3 +281,75 @@ def fix_unicode_properties(context):\n     portal = getSite()\n     portal.reindexObject()\n     portal.ZopeFindAndApply(portal, search_sub=1, apply_func=fix_properties)\n+\n+\n+def cleanup_resources_and_bundles_in_registry(context=None):\n+    """Fix registry for es6 resources and new resource registry.\n+    """\n+    registry = getUtility(IRegistry)\n+\n+    # We need to upgrade staticresources first.\n+    # Otherwise the bundles we delete will come back to haunt us\n+    context.upgradeProfile("plone.staticresources:default", dest="208")\n+\n+    # Remove all plone.resouces from the registry\n+    to_delete = []\n+    for key in registry.records:\n+        if key.startswith("plone.resources/"):\n+            to_delete.append(key)\n+    for key in to_delete:\n+        del registry.records[key]\n+    logger.info(u"Removed {} plone.resources records from registry".format(len(to_delete)))\n+\n+    # make sure they are all gone\n+    try:\n+        from Products.CMFPlone.interfaces import IResourceRegistry\n+        records = registry.collectionOfInterface(\n+            IResourceRegistry, prefix="plone.resources", check=False\n+        )\n+        assert(len(records) == 0)\n+    except ImportError:\n+        # the interface may be removed at some point\n+        pass\n+\n+    # Remove obsolete bundles and reload the default bundles\n+    # The default bundles are reloaded in v60/profiles/to6003/registry.xml\n+    removed_bundles = [\n+        "filemanager",\n+        "plone-base",\n+        "plone-datatables",\n+        "plone-editor-tools",\n+        "plone-fontello",\n+        "plone-glyphicons",\n+        "plone-moment",\n+        "plone-tinymce",\n+        "resourceregistry",\n+        "thememapper",\n+        "plone-legacy",\n+        "plone-logged-in",\n+    ]\n+    bundles = registry.collectionOfInterface(\n+        IBundleRegistry, prefix="plone.bundles", check=False\n+    )\n+    for name in removed_bundles:\n+        if name in bundles:\n+            del bundles[name]\n+            logger.info(u"Removed bundle {}".format(name))\n+\n+    # Remove deprecated bundle fields\n+    removed_fields = [\n+        "compile",\n+        "develop_javascript",\n+        "last_compilation",\n+        "merge_with",\n+        "resources",\n+        "stub_js_modules",\n+    ]\n+    to_delete = []\n+    for key in registry.records:\n+        for removed_field in removed_fields:\n+            if key.startswith("plone.bundles/") and key.endswith(removed_field):\n+                to_delete.append(key)\n+    for key in to_delete:\n+        del registry.records[key]\n+    logger.info(u"Removed {} deprecated bundle attributes from registry".format(len(to_delete)))\ndiff --git a/plone/app/upgrade/v60/configure.zcml b/plone/app/upgrade/v60/configure.zcml\nindex 7858c180..c30aedf5 100644\n--- a/plone/app/upgrade/v60/configure.zcml\n+++ b/plone/app/upgrade/v60/configure.zcml\n@@ -83,9 +83,14 @@\n         profile="Products.CMFPlone:plone">\n \n       <gs:upgradeDepends\n-           title="Run to6004 upgrade profile."\n-           import_profile="plone.app.upgrade.v60:to6004"\n-           />\n+          title="Run to6004 upgrade profile."\n+          import_profile="plone.app.upgrade.v60:to6004"\n+          />\n+\n+      <gs:upgradeStep\n+          title="Cleanup resources and bundles"\n+          handler=".alphas.cleanup_resources_and_bundles_in_registry"\n+          />\n \n     </gs:upgradeSteps>\n \ndiff --git a/plone/app/upgrade/v60/profiles.zcml b/plone/app/upgrade/v60/profiles.zcml\nindex e31f4f4a..bcd8857c 100644\n--- a/plone/app/upgrade/v60/profiles.zcml\n+++ b/plone/app/upgrade/v60/profiles.zcml\n@@ -27,7 +27,6 @@\n       provides="Products.GenericSetup.interfaces.EXTENSION"\n       />\n \n-\n   <!--\n     This is special, we want to reread the profile to create the FTI only if the old FTI\n     is not already a Dexterity one\ndiff --git a/plone/app/upgrade/v60/profiles/to6003/registry.xml b/plone/app/upgrade/v60/profiles/to6003/registry.xml\nindex 0ea3e25b..5f6ee08b 100644\n--- a/plone/app/upgrade/v60/profiles/to6003/registry.xml\n+++ b/plone/app/upgrade/v60/profiles/to6003/registry.xml\n@@ -2,4 +2,4 @@\n <registry>\n     <records interface="Products.CMFPlone.interfaces.ISiteSchema"\n            prefix="plone" />\n-</registry>\n\\ No newline at end of file\n+</registry>\ndiff --git a/plone/app/upgrade/v60/profiles/to6004/registry.xml b/plone/app/upgrade/v60/profiles/to6004/registry.xml\nnew file mode 100644\nindex 00000000..eca85d1c\n--- /dev/null\n+++ b/plone/app/upgrade/v60/profiles/to6004/registry.xml\n@@ -0,0 +1,42 @@\n+<?xml version="1.0"?>\n+<registry>\n+  <record name="plone.resources.development">\n+    <field type="plone.registry.field.Bool">\n+      <title>Frontend development mode</title>\n+      <required>False</required>\n+    </field>\n+  </record>\n+\n+  <!-- Load default bundles with default values for all fields (e.g. to get rid of a depdendency on plone.base) -->\n+  <records prefix="plone.bundles/bootstrap-js" interface=\'Products.CMFPlone.interfaces.IBundleRegistry\' purge="true">\n+    <value key="enabled">False</value>\n+    <value key="jscompilation">++plone++static/bundle-bootstrap/js/bootstrap.bundle.min.js</value>\n+    <value key="csscompilation"></value>\n+    <value key="expression"></value>\n+    <value key="depends"></value>\n+    <value key="load_async">False</value>\n+    <value key="load_defer">False</value>\n+  </records>\n+\n+  <records prefix="plone.bundles/plone" interface=\'Products.CMFPlone.interfaces.IBundleRegistry\' purge="true">\n+    <value key="enabled">True</value>\n+    <value key="jscompilation">++plone++static/bundle-plone/bundle.min.js</value>\n+    <value key="csscompilation"></value>\n+    <value key="expression"></value>\n+    <value key="depends"></value>\n+    <value key="load_async">False</value>\n+    <value key="load_defer">False</value>\n+  </records>\n+\n+  <records prefix="plone.bundles/plone-logged-in" interface=\'Products.CMFPlone.interfaces.IBundleRegistry\' purge="true">\n+    <value key="merge_with">logged-in</value><!-- needs to be here -->\n+    <value key="enabled">False</value>\n+    <value key="expression">python: False</value>\n+    <value key="jscompilation">++plone++static/plone-logged-in-compiled.min.js</value><!-- needs to be here -->\n+    <value key="csscompilation"></value>\n+    <value key="depends"></value>\n+    <value key="load_async">False</value>\n+    <value key="load_defer">False</value>\n+  </records>\n+\n+</registry>\n'

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2022-03-24T15:19:06+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.upgrade/commit/e5101f41ba44385d6d8445b5301416a5c7208181

Remove more records (like plone.lessvariables and plone.resources.requirejs)

Files changed:
M plone/app/upgrade/v60/alphas.py

b'diff --git a/plone/app/upgrade/v60/alphas.py b/plone/app/upgrade/v60/alphas.py\nindex 781e06d1..708c55e7 100644\n--- a/plone/app/upgrade/v60/alphas.py\n+++ b/plone/app/upgrade/v60/alphas.py\n@@ -292,14 +292,27 @@ def cleanup_resources_and_bundles_in_registry(context=None):\n     # Otherwise the bundles we delete will come back to haunt us\n     context.upgradeProfile("plone.staticresources:default", dest="208")\n \n-    # Remove all plone.resouces from the registry\n+    # Remove obsolete records from the registry\n+    removed_keys = [\n+        "plone.resources/",\n+        "plone.lessvariables",\n+        "plone.resources.configjs",\n+        "plone.resources.last_legacy_import",\n+        "plone.resources.less-modify",\n+        "plone.resources.less-variables",\n+        "plone.resources.lessc",\n+        "plone.resources.requirejs",\n+        "plone.resources.rjs",\n+    ]\n     to_delete = []\n     for key in registry.records:\n-        if key.startswith("plone.resources/"):\n-            to_delete.append(key)\n+        for removed_key in removed_keys:\n+            if key.startswith(removed_key):\n+                to_delete.append(key)\n+                logger.debug(u"Removed record {}".format(key))\n     for key in to_delete:\n         del registry.records[key]\n-    logger.info(u"Removed {} plone.resources records from registry".format(len(to_delete)))\n+    logger.info(u"Removed {} records from registry".format(len(to_delete)))\n \n     # make sure they are all gone\n     try:\n@@ -350,6 +363,7 @@ def cleanup_resources_and_bundles_in_registry(context=None):\n         for removed_field in removed_fields:\n             if key.startswith("plone.bundles/") and key.endswith(removed_field):\n                 to_delete.append(key)\n+                logger.debug(u"Removed record {}".format(key))\n     for key in to_delete:\n         del registry.records[key]\n     logger.info(u"Removed {} deprecated bundle attributes from registry".format(len(to_delete)))\n'

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2022-03-24T15:19:06+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.upgrade/commit/7c05188e66d0db5b449c0d457a469746f89e7f12

reload default controlpanels (we mostly want the icons but hey)

Files changed:
M plone/app/upgrade/v60/alphas.py

b'diff --git a/plone/app/upgrade/v60/alphas.py b/plone/app/upgrade/v60/alphas.py\nindex 708c55e7..3effcb5c 100644\n--- a/plone/app/upgrade/v60/alphas.py\n+++ b/plone/app/upgrade/v60/alphas.py\n@@ -6,6 +6,7 @@\n from plone.uuid.interfaces import IUUIDGenerator\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.interfaces import IBundleRegistry\n+from Products.CMFPlone.utils import get_installer\n from Products.CMFPlone.utils import safe_unicode\n from ZODB.broken import Broken\n from zope.component import getUtility\n@@ -367,3 +368,15 @@ def cleanup_resources_and_bundles_in_registry(context=None):\n     for key in to_delete:\n         del registry.records[key]\n     logger.info(u"Removed {} deprecated bundle attributes from registry".format(len(to_delete)))\n+\n+    # local default controlpanel icons\n+    installer = get_installer(context)\n+    loadMigrationProfile(context, "profile-Products.CMFPlone:plone", steps=["controlpanel"])\n+    if installer.is_profile_installed("plone.app.theming:default"):\n+        loadMigrationProfile(context, "profile-plone.app.theming:default", steps=["controlpanel"])\n+    if installer.is_profile_installed("plone.app.registry:default"):\n+        loadMigrationProfile(context, "profile-plone.app.registry:default", steps=["controlpanel"])\n+    if installer.is_profile_installed("plone.app.caching:default"):\n+        loadMigrationProfile(context, "profile-plone.app.caching:default", steps=["controlpanel"])\n+    if installer.is_profile_installed("Products.CMFPlacefulWorkflow:base"):\n+        loadMigrationProfile(context, "profile-Products.CMFPlacefulWorkflow:base", steps=["controlpanel"])\n'

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2022-03-24T15:19:06+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.upgrade/commit/e331672dafeb6f5aaac7e18928e73cedf3a1cf6b

cleanup_resources_and_bundles_in_registry: break when a key is deleted.

Files changed:
M plone/app/upgrade/v60/alphas.py

b'diff --git a/plone/app/upgrade/v60/alphas.py b/plone/app/upgrade/v60/alphas.py\nindex 3effcb5c..c0c53b9d 100644\n--- a/plone/app/upgrade/v60/alphas.py\n+++ b/plone/app/upgrade/v60/alphas.py\n@@ -311,6 +311,7 @@ def cleanup_resources_and_bundles_in_registry(context=None):\n             if key.startswith(removed_key):\n                 to_delete.append(key)\n                 logger.debug(u"Removed record {}".format(key))\n+                break\n     for key in to_delete:\n         del registry.records[key]\n     logger.info(u"Removed {} records from registry".format(len(to_delete)))\n'

