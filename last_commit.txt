Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-01-29T03:49:02Z
Author: Rudd-O (Rudd-O) <rudd-o@rudd-o.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/00bc73e04b7791549e89a6d5013ce019e3febbb1

Allow access to /favicon.ico for apps that do not consult HTML before accessing the favicon.

There is the justified use case of apps that don't know what favicon URL should be accessed in order to render the URL, such as RSS readers (deployed in the field) and others.

This addresses that problem and fixes https://github.com/plone/plone.app.layout/issues/288 .

Files changed:
M Products/CMFPlone/browser/configure.zcml

b'diff --git a/Products/CMFPlone/browser/configure.zcml b/Products/CMFPlone/browser/configure.zcml\nindex f92dbef537..4f5d97c1ee 100644\n--- a/Products/CMFPlone/browser/configure.zcml\n+++ b/Products/CMFPlone/browser/configure.zcml\n@@ -39,6 +39,14 @@\n       permission="zope.Public"\n       />\n \n+  <!-- handles the case of apps like RSS agents blindly accessing /favicon.ico -->\n+  <browser:page\n+      for="*"\n+      name="favicon.icon"\n+      class=".favicon.SiteFavicon"\n+      permission="zope.Public"\n+      />\n+\n   <browser:page\n       for="*"\n       name="sendto_form"\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-01-29T03:50:18Z
Author: Rudd-O (Rudd-O) <rudd-o@rudd-o.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/5d8ee13e55aaf96d4970d491b817ba03305ef76d

Create 282.bugfix

Files changed:
A news/282.bugfix

b'diff --git a/news/282.bugfix b/news/282.bugfix\nnew file mode 100644\nindex 0000000000..10c579d2dc\n--- /dev/null\n+++ b/news/282.bugfix\n@@ -0,0 +1 @@\n+Handle /favicon.ico accesses on Plone sites.\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-01-29T04:27:13Z
Author: Manuel Amador (Rudd-O) (Rudd-O) <rudd-o@rudd-o.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/652497b84c77122e27642997e9afb675c73638b6

Handle default case, and correct the mimetype with the right default.

Files changed:
M Products/CMFPlone/browser/configure.zcml
M Products/CMFPlone/browser/favicon.py

b'diff --git a/Products/CMFPlone/browser/configure.zcml b/Products/CMFPlone/browser/configure.zcml\nindex 4f5d97c1ee..91248082e9 100644\n--- a/Products/CMFPlone/browser/configure.zcml\n+++ b/Products/CMFPlone/browser/configure.zcml\n@@ -42,7 +42,7 @@\n   <!-- handles the case of apps like RSS agents blindly accessing /favicon.ico -->\n   <browser:page\n       for="*"\n-      name="favicon.icon"\n+      name="favicon.ico"\n       class=".favicon.SiteFavicon"\n       permission="zope.Public"\n       />\ndiff --git a/Products/CMFPlone/browser/favicon.py b/Products/CMFPlone/browser/favicon.py\nindex 2753869081..c6034432f3 100644\n--- a/Products/CMFPlone/browser/favicon.py\n+++ b/Products/CMFPlone/browser/favicon.py\n@@ -1,10 +1,12 @@\n+import os\n+\n from Products.CMFPlone.interfaces import ISiteSchema\n from plone.formwidget.namedfile.converter import b64decode_file\n+from plone.memoize import ram\n from plone.namedfile.browser import Download\n from plone.namedfile.file import NamedImage\n from plone.registry.interfaces import IRegistry\n from zope.component import getUtility\n-from plone.memoize import ram\n \n \n class SiteFavicon(Download):\n@@ -18,9 +20,16 @@ def __init__(self, context, request):\n         settings = registry.forInterface(ISiteSchema, prefix="plone")\n         if getattr(settings, \'site_favicon\', False):\n             filename, data = b64decode_file(settings.site_favicon)\n-            data = NamedImage(data=data, filename=filename)\n+            mimetype = getattr(settings, \'site_favicon_mimetype\', "image/vnd.microsoft.icon")\n+            data = NamedImage(data=data, contentType=mimetype, filename=filename)\n             self.data = data\n             self.filename = filename\n+        else:\n+            basedir = os.path.dirname(os.path.dirname(__file__))\n+            with open(os.path.join(basedir, "skins", "plone_images", "favicon.ico"), "rb") as icon:\n+                data = NamedImage(data=icon.read(), contentType="image/vnd.microsoft.icon", filename="favicon.ico")\n+            self.data = data\n+            self.filename = "favicon.ico"\n \n     def _getFile(self):\n         return self.data\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-01-29T05:17:29Z
Author: Manuel Amador (Rudd-O) (Rudd-O) <rudd-o@rudd-o.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/fadadc759401b12eca87946b1cb46b240d3182f8

We must rename the default favicon.

Otherwise skin precedence does not let the browser view take.

Files changed:
A Products/CMFPlone/skins/plone_images/default-favicon.ico
M Products/CMFPlone/browser/favicon.py
D Products/CMFPlone/skins/plone_images/favicon.ico

b'diff --git a/Products/CMFPlone/browser/favicon.py b/Products/CMFPlone/browser/favicon.py\nindex c6034432f3..ef7242c038 100644\n--- a/Products/CMFPlone/browser/favicon.py\n+++ b/Products/CMFPlone/browser/favicon.py\n@@ -26,7 +26,7 @@ def __init__(self, context, request):\n             self.filename = filename\n         else:\n             basedir = os.path.dirname(os.path.dirname(__file__))\n-            with open(os.path.join(basedir, "skins", "plone_images", "favicon.ico"), "rb") as icon:\n+            with open(os.path.join(basedir, "skins", "plone_images", "default-favicon.ico"), "rb") as icon:\n                 data = NamedImage(data=icon.read(), contentType="image/vnd.microsoft.icon", filename="favicon.ico")\n             self.data = data\n             self.filename = "favicon.ico"\ndiff --git a/Products/CMFPlone/skins/plone_images/favicon.ico b/Products/CMFPlone/skins/plone_images/default-favicon.ico\nsimilarity index 100%\nrename from Products/CMFPlone/skins/plone_images/favicon.ico\nrename to Products/CMFPlone/skins/plone_images/default-favicon.ico\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-01-31T13:43:43Z
Author: Manuel Amador (Rudd-O) (Rudd-O) <rudd-o@rudd-o.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/ef4f79dc124def7cfb817589d606ad64fffca39f

INavigationRoot instead of "*" to prevent favicons on every folder.

Files changed:
M Products/CMFPlone/browser/configure.zcml

b'diff --git a/Products/CMFPlone/browser/configure.zcml b/Products/CMFPlone/browser/configure.zcml\nindex 91248082e9..7f62bd6ed5 100644\n--- a/Products/CMFPlone/browser/configure.zcml\n+++ b/Products/CMFPlone/browser/configure.zcml\n@@ -32,8 +32,9 @@\n       permission="zope.Public"\n       />\n \n+  <!-- handles the case of the /favicon path defined in plone.app.layout viewlets.py:FaviconViewlet -->\n   <browser:page\n-      for="*"\n+      for="plone.app.layout.navigation.interfaces.INavigationRoot"\n       name="favicon"\n       class=".favicon.SiteFavicon"\n       permission="zope.Public"\n@@ -41,7 +42,7 @@\n \n   <!-- handles the case of apps like RSS agents blindly accessing /favicon.ico -->\n   <browser:page\n-      for="*"\n+      for="plone.app.layout.navigation.interfaces.INavigationRoot"\n       name="favicon.ico"\n       class=".favicon.SiteFavicon"\n       permission="zope.Public"\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-02-01T23:13:57Z
Author: Manuel Amador (Rudd-O) (Rudd-O) <rudd-o@rudd-o.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/000514ce5de7f6eed1b0d91934c2f5fd981ef441

CMFPlone-side favicon reorg.  plone.app.layout incoming.

Files changed:
A Products/CMFPlone/browser/static/favicon.ico
M Products/CMFPlone/browser/configure.zcml
M Products/CMFPlone/browser/favicon.py
D Products/CMFPlone/skins/plone_images/default-favicon.ico

b'diff --git a/Products/CMFPlone/browser/configure.zcml b/Products/CMFPlone/browser/configure.zcml\nindex 7f62bd6ed5..e9989aa94a 100644\n--- a/Products/CMFPlone/browser/configure.zcml\n+++ b/Products/CMFPlone/browser/configure.zcml\n@@ -32,15 +32,6 @@\n       permission="zope.Public"\n       />\n \n-  <!-- handles the case of the /favicon path defined in plone.app.layout viewlets.py:FaviconViewlet -->\n-  <browser:page\n-      for="plone.app.layout.navigation.interfaces.INavigationRoot"\n-      name="favicon"\n-      class=".favicon.SiteFavicon"\n-      permission="zope.Public"\n-      />\n-\n-  <!-- handles the case of apps like RSS agents blindly accessing /favicon.ico -->\n   <browser:page\n       for="plone.app.layout.navigation.interfaces.INavigationRoot"\n       name="favicon.ico"\ndiff --git a/Products/CMFPlone/browser/favicon.py b/Products/CMFPlone/browser/favicon.py\nindex ef7242c038..90be0b9515 100644\n--- a/Products/CMFPlone/browser/favicon.py\n+++ b/Products/CMFPlone/browser/favicon.py\n@@ -1,4 +1,4 @@\n-import os\n+from os.path import dirname\n \n from Products.CMFPlone.interfaces import ISiteSchema\n from plone.formwidget.namedfile.converter import b64decode_file\n@@ -10,7 +10,6 @@\n \n \n class SiteFavicon(Download):\n-\n     def __init__(self, context, request):\n         super().__init__(context, request)\n         self.filename = None\n@@ -18,18 +17,22 @@ def __init__(self, context, request):\n \n         registry = getUtility(IRegistry)\n         settings = registry.forInterface(ISiteSchema, prefix="plone")\n-        if getattr(settings, \'site_favicon\', False):\n+        mimetype = "image/vnd.microsoft.icon"\n+        filename = "favicon.ico"\n+        if getattr(settings, "site_favicon", False):\n+            # The user has customized the favicon via the Site configlet.\n             filename, data = b64decode_file(settings.site_favicon)\n-            mimetype = getattr(settings, \'site_favicon_mimetype\', "image/vnd.microsoft.icon")\n-            data = NamedImage(data=data, contentType=mimetype, filename=filename)\n-            self.data = data\n-            self.filename = filename\n+            # Retrieve the MIME type auto-set by the configlet, with a\n+            # valid fallback to a well-known MIME type.\n+            mimetype = getattr(settings, "site_favicon_mimetype", mimetype)\n         else:\n-            basedir = os.path.dirname(os.path.dirname(__file__))\n-            with open(os.path.join(basedir, "skins", "plone_images", "default-favicon.ico"), "rb") as icon:\n-                data = NamedImage(data=icon.read(), contentType="image/vnd.microsoft.icon", filename="favicon.ico")\n-            self.data = data\n-            self.filename = "favicon.ico"\n+            # No registry favicon, we use our static copy here.\n+            # Defaults were set above before the if branch.\n+            fallback_path = os.path.join(dirname(__file__), "static", filename)\n+            with open(fallback_path, "rb") as icon:\n+                data = icon.read()\n+        self.data = NamedImage(data=data, contentType=mimetype, filename=filename)\n+        self.filename = filename\n \n     def _getFile(self):\n         return self.data\ndiff --git a/Products/CMFPlone/skins/plone_images/default-favicon.ico b/Products/CMFPlone/browser/static/favicon.ico\nsimilarity index 100%\nrename from Products/CMFPlone/skins/plone_images/default-favicon.ico\nrename to Products/CMFPlone/browser/static/favicon.ico\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-02-01T23:35:19Z
Author: Manuel Amador (Rudd-O) (Rudd-O) <rudd-o@rudd-o.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/2ecdf6d32adadafedc888e768335e4805b0a3d28

Do not use Download -- use DisplayFile instead, since the favicon is not meant for downloading, but rather for display.

Files changed:
M Products/CMFPlone/browser/favicon.py

b'diff --git a/Products/CMFPlone/browser/favicon.py b/Products/CMFPlone/browser/favicon.py\nindex 90be0b9515..e25759495e 100644\n--- a/Products/CMFPlone/browser/favicon.py\n+++ b/Products/CMFPlone/browser/favicon.py\n@@ -3,13 +3,13 @@\n from Products.CMFPlone.interfaces import ISiteSchema\n from plone.formwidget.namedfile.converter import b64decode_file\n from plone.memoize import ram\n-from plone.namedfile.browser import Download\n+from plone.namedfile.browser import DisplayFile\n from plone.namedfile.file import NamedImage\n from plone.registry.interfaces import IRegistry\n from zope.component import getUtility\n \n \n-class SiteFavicon(Download):\n+class SiteFavicon(DisplayFile):\n     def __init__(self, context, request):\n         super().__init__(context, request)\n         self.filename = None\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-02-01T23:42:35Z
Author: Manuel Amador (Rudd-O) (Rudd-O) <rudd-o@rudd-o.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/103f171affc3ead2b23dbad52d289f728f926a1e

Disable the use of the allowlist for content disposition attachment.

Files changed:
M Products/CMFPlone/browser/favicon.py

b'diff --git a/Products/CMFPlone/browser/favicon.py b/Products/CMFPlone/browser/favicon.py\nindex e25759495e..025bbc93e3 100644\n--- a/Products/CMFPlone/browser/favicon.py\n+++ b/Products/CMFPlone/browser/favicon.py\n@@ -14,6 +14,12 @@ def __init__(self, context, request):\n         super().__init__(context, request)\n         self.filename = None\n         self.data = None\n+        # The following attribute disables the use of an allowlist that\n+        # would otherwise cause image/vnd.microsoft.icon MIMEtyped files\n+        # to be served as downloads.  This allowlist list is sadly not\n+        # complete, at the top of the plone.namedfile.browser.py, but\n+        # fixing that is beyond the scope of this pull request.\n+        self.use_denylist = True\n \n         registry = getUtility(IRegistry)\n         settings = registry.forInterface(ISiteSchema, prefix="plone")\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-02-01T23:49:25Z
Author: Manuel Amador (Rudd-O) (Rudd-O) <rudd-o@rudd-o.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/750f692d408f35e6003e55e7ef5a7773be7110bf

Correct missing import.

Files changed:
M Products/CMFPlone/browser/favicon.py

b'diff --git a/Products/CMFPlone/browser/favicon.py b/Products/CMFPlone/browser/favicon.py\nindex 025bbc93e3..d8a3b21461 100644\n--- a/Products/CMFPlone/browser/favicon.py\n+++ b/Products/CMFPlone/browser/favicon.py\n@@ -1,4 +1,4 @@\n-from os.path import dirname\n+from os.path import dirname, join\n \n from Products.CMFPlone.interfaces import ISiteSchema\n from plone.formwidget.namedfile.converter import b64decode_file\n@@ -34,7 +34,7 @@ def __init__(self, context, request):\n         else:\n             # No registry favicon, we use our static copy here.\n             # Defaults were set above before the if branch.\n-            fallback_path = os.path.join(dirname(__file__), "static", filename)\n+            fallback_path = join(dirname(__file__), "static", filename)\n             with open(fallback_path, "rb") as icon:\n                 data = icon.read()\n         self.data = NamedImage(data=data, contentType=mimetype, filename=filename)\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-02-02T00:11:51Z
Author: Manuel Amador (Rudd-O) (Rudd-O) <rudd-o@rudd-o.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/5c596e3a6f127176832499be780422f6999f293e

Change default icon mime type to correct one.

Files changed:
M Products/CMFPlone/interfaces/controlpanel.py

b"diff --git a/Products/CMFPlone/interfaces/controlpanel.py b/Products/CMFPlone/interfaces/controlpanel.py\nindex 13c4139873..d79e8d13f7 100644\n--- a/Products/CMFPlone/interfaces/controlpanel.py\n+++ b/Products/CMFPlone/interfaces/controlpanel.py\n@@ -1009,7 +1009,7 @@ class ISiteSchema(Interface):\n         title=_('MIME type of the site favicon'),\n         description=_('MIME type of the favicon (automatically set when a new favicon is uploaded)'),\n         required=False,\n-        default='image/x-icon'\n+        default='image/vnd.microsoft.icon'\n     )\n \n     site_favicon = schema.Bytes(\n"

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-02-03T11:56:31Z
Author: Manuel Amador (Rudd-O) (Rudd-O) <rudd-o@rudd-o.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/5edf2573bbacb853ec8ffdad49b836dfeba7a5f8

Address review comments.

Files changed:
M Products/CMFPlone/browser/favicon.py

b'diff --git a/Products/CMFPlone/browser/favicon.py b/Products/CMFPlone/browser/favicon.py\nindex d8a3b21461..f1fb853177 100644\n--- a/Products/CMFPlone/browser/favicon.py\n+++ b/Products/CMFPlone/browser/favicon.py\n@@ -10,21 +10,18 @@\n \n \n class SiteFavicon(DisplayFile):\n+    # The following attribute disables the use of an allowlist that\n+    # would otherwise cause image/vnd.microsoft.icon MIMEtyped files\n+    # to be served as downloads.  This allowlist list is sadly not\n+    # complete, at the top of the plone.namedfile.browser.py, but\n+    # fixing that is beyond the scope of this pull request.\n+    use_denylist = True\n+\n     def __init__(self, context, request):\n         super().__init__(context, request)\n-        self.filename = None\n-        self.data = None\n-        # The following attribute disables the use of an allowlist that\n-        # would otherwise cause image/vnd.microsoft.icon MIMEtyped files\n-        # to be served as downloads.  This allowlist list is sadly not\n-        # complete, at the top of the plone.namedfile.browser.py, but\n-        # fixing that is beyond the scope of this pull request.\n-        self.use_denylist = True\n \n-        registry = getUtility(IRegistry)\n-        settings = registry.forInterface(ISiteSchema, prefix="plone")\n         mimetype = "image/vnd.microsoft.icon"\n-        filename = "favicon.ico"\n+        settings = getUtility(IRegistry).forInterface(ISiteSchema, prefix="plone")\n         if getattr(settings, "site_favicon", False):\n             # The user has customized the favicon via the Site configlet.\n             filename, data = b64decode_file(settings.site_favicon)\n@@ -32,8 +29,8 @@ def __init__(self, context, request):\n             # valid fallback to a well-known MIME type.\n             mimetype = getattr(settings, "site_favicon_mimetype", mimetype)\n         else:\n-            # No registry favicon, we use our static copy here.\n-            # Defaults were set above before the if branch.\n+            # No registry favicon, we use Plone\'s static copy here.\n+            filename = "favicon.ico"\n             fallback_path = join(dirname(__file__), "static", filename)\n             with open(fallback_path, "rb") as icon:\n                 data = icon.read()\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-02-03T23:38:02Z
Author: Manuel Amador (Rudd-O) (Rudd-O) <rudd-o@rudd-o.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/0153c3a8803c1a202a54956f71d20646d3e1a750

Address other review comments.

Files changed:
M Products/CMFPlone/browser/favicon.py

b'diff --git a/Products/CMFPlone/browser/favicon.py b/Products/CMFPlone/browser/favicon.py\nindex f1fb853177..a6812cfb84 100644\n--- a/Products/CMFPlone/browser/favicon.py\n+++ b/Products/CMFPlone/browser/favicon.py\n@@ -1,5 +1,3 @@\n-from os.path import dirname, join\n-\n from Products.CMFPlone.interfaces import ISiteSchema\n from plone.formwidget.namedfile.converter import b64decode_file\n from plone.memoize import ram\n@@ -8,6 +6,8 @@\n from plone.registry.interfaces import IRegistry\n from zope.component import getUtility\n \n+import os.path\n+\n \n class SiteFavicon(DisplayFile):\n     # The following attribute disables the use of an allowlist that\n@@ -31,7 +31,7 @@ def __init__(self, context, request):\n         else:\n             # No registry favicon, we use Plone\'s static copy here.\n             filename = "favicon.ico"\n-            fallback_path = join(dirname(__file__), "static", filename)\n+            fallback_path = os.path.join(os.path.dirname(__file__), "static", filename)\n             with open(fallback_path, "rb") as icon:\n                 data = icon.read()\n         self.data = NamedImage(data=data, contentType=mimetype, filename=filename)\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-02-04T00:43:01Z
Author: Rudd-O (Rudd-O) <rudd-o@rudd-o.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/dd25c2f1fef979f18f6d5c1183bc4568e8b6684f

Merge pull request #3418 from Rudd-O/master

 Allow access to the favicon via conventional /favicon.ico, simplifying both customizable and fallback favicon handling.

Files changed:
A Products/CMFPlone/browser/static/favicon.ico
A news/282.bugfix
M Products/CMFPlone/browser/configure.zcml
M Products/CMFPlone/browser/favicon.py
M Products/CMFPlone/interfaces/controlpanel.py
D Products/CMFPlone/skins/plone_images/favicon.ico

b'diff --git a/Products/CMFPlone/browser/configure.zcml b/Products/CMFPlone/browser/configure.zcml\nindex f92dbef537..e9989aa94a 100644\n--- a/Products/CMFPlone/browser/configure.zcml\n+++ b/Products/CMFPlone/browser/configure.zcml\n@@ -33,8 +33,8 @@\n       />\n \n   <browser:page\n-      for="*"\n-      name="favicon"\n+      for="plone.app.layout.navigation.interfaces.INavigationRoot"\n+      name="favicon.ico"\n       class=".favicon.SiteFavicon"\n       permission="zope.Public"\n       />\ndiff --git a/Products/CMFPlone/browser/favicon.py b/Products/CMFPlone/browser/favicon.py\nindex 2753869081..a6812cfb84 100644\n--- a/Products/CMFPlone/browser/favicon.py\n+++ b/Products/CMFPlone/browser/favicon.py\n@@ -1,26 +1,41 @@\n from Products.CMFPlone.interfaces import ISiteSchema\n from plone.formwidget.namedfile.converter import b64decode_file\n-from plone.namedfile.browser import Download\n+from plone.memoize import ram\n+from plone.namedfile.browser import DisplayFile\n from plone.namedfile.file import NamedImage\n from plone.registry.interfaces import IRegistry\n from zope.component import getUtility\n-from plone.memoize import ram\n+\n+import os.path\n \n \n-class SiteFavicon(Download):\n+class SiteFavicon(DisplayFile):\n+    # The following attribute disables the use of an allowlist that\n+    # would otherwise cause image/vnd.microsoft.icon MIMEtyped files\n+    # to be served as downloads.  This allowlist list is sadly not\n+    # complete, at the top of the plone.namedfile.browser.py, but\n+    # fixing that is beyond the scope of this pull request.\n+    use_denylist = True\n \n     def __init__(self, context, request):\n         super().__init__(context, request)\n-        self.filename = None\n-        self.data = None\n \n-        registry = getUtility(IRegistry)\n-        settings = registry.forInterface(ISiteSchema, prefix="plone")\n-        if getattr(settings, \'site_favicon\', False):\n+        mimetype = "image/vnd.microsoft.icon"\n+        settings = getUtility(IRegistry).forInterface(ISiteSchema, prefix="plone")\n+        if getattr(settings, "site_favicon", False):\n+            # The user has customized the favicon via the Site configlet.\n             filename, data = b64decode_file(settings.site_favicon)\n-            data = NamedImage(data=data, filename=filename)\n-            self.data = data\n-            self.filename = filename\n+            # Retrieve the MIME type auto-set by the configlet, with a\n+            # valid fallback to a well-known MIME type.\n+            mimetype = getattr(settings, "site_favicon_mimetype", mimetype)\n+        else:\n+            # No registry favicon, we use Plone\'s static copy here.\n+            filename = "favicon.ico"\n+            fallback_path = os.path.join(os.path.dirname(__file__), "static", filename)\n+            with open(fallback_path, "rb") as icon:\n+                data = icon.read()\n+        self.data = NamedImage(data=data, contentType=mimetype, filename=filename)\n+        self.filename = filename\n \n     def _getFile(self):\n         return self.data\ndiff --git a/Products/CMFPlone/skins/plone_images/favicon.ico b/Products/CMFPlone/browser/static/favicon.ico\nsimilarity index 100%\nrename from Products/CMFPlone/skins/plone_images/favicon.ico\nrename to Products/CMFPlone/browser/static/favicon.ico\ndiff --git a/Products/CMFPlone/interfaces/controlpanel.py b/Products/CMFPlone/interfaces/controlpanel.py\nindex 13c4139873..d79e8d13f7 100644\n--- a/Products/CMFPlone/interfaces/controlpanel.py\n+++ b/Products/CMFPlone/interfaces/controlpanel.py\n@@ -1009,7 +1009,7 @@ class ISiteSchema(Interface):\n         title=_(\'MIME type of the site favicon\'),\n         description=_(\'MIME type of the favicon (automatically set when a new favicon is uploaded)\'),\n         required=False,\n-        default=\'image/x-icon\'\n+        default=\'image/vnd.microsoft.icon\'\n     )\n \n     site_favicon = schema.Bytes(\ndiff --git a/news/282.bugfix b/news/282.bugfix\nnew file mode 100644\nindex 0000000000..10c579d2dc\n--- /dev/null\n+++ b/news/282.bugfix\n@@ -0,0 +1 @@\n+Handle /favicon.ico accesses on Plone sites.\n'

