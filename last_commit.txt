Repository: plone.namedfile


Branch: refs/heads/master
Date: 2022-11-21T17:47:26+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.namedfile/commit/68d23edfd491e97dc36e34d4b7d89fa98616994a

Log a warning when a scale for a picture variant is not found.

Until now this gave an exception.
Fixes https://github.com/plone/plone.namedfile/issues/134

Files changed:
A news/134.bugfix
M plone/namedfile/picture.py

b'diff --git a/news/134.bugfix b/news/134.bugfix\nnew file mode 100644\nindex 0000000..e92ee10\n--- /dev/null\n+++ b/news/134.bugfix\n@@ -0,0 +1,3 @@\n+Log a warning when a scale for a picture variant is not found.\n+Until now this gave an exception.\n+[maurits]\ndiff --git a/plone/namedfile/picture.py b/plone/namedfile/picture.py\nindex 1bc5ebc..dbf4f7d 100644\n--- a/plone/namedfile/picture.py\n+++ b/plone/namedfile/picture.py\n@@ -15,7 +15,7 @@\n     from Products.CMFPlone.interfaces.controlpanel import IImagingSchema\n \n \n-logger = logging.getLogger("plone.outputfilter.picture_variant")\n+logger = logging.getLogger(__name__)\n appendix_re = re.compile("^(.*)([?#].*)$")\n resolveuid_re = re.compile("^[./]*resolve[Uu]id/([^/]*)/?(.*)$")\n \n@@ -47,6 +47,8 @@ def get_scale_width(self, scale):\n         """\n         allowed_scales = get_allowed_scales()\n         scale_info = allowed_scales.get(scale)\n+        if not scale_info:\n+            return\n         return scale_info[0]\n \n     def create_picture_tag(\n@@ -80,6 +82,10 @@ def create_picture_tag(\n             source_scales = [target_scale] + additional_scales\n             source_srcset = []\n             for scale in source_scales:\n+                scale_width = self.get_scale_width(scale)\n+                if not scale_width:\n+                    logger.warning("No width found for scale %s.", scale)\n+                    continue\n                 if resolve_urls and obj:\n                     scale_view = obj.unrestrictedTraverse("@@images", None)\n                     scale_obj = scale_view.scale(fieldname, scale, pre=True)\n@@ -90,7 +96,6 @@ def create_picture_tag(\n                     # scale_obj = scale_view.scale(fieldname, scale, pre=True)\n                     # scale_url = scale_obj.url\n                     scale_url = self.update_src_scale(src=src, scale=scale)\n-                scale_width = self.get_scale_width(scale)\n                 source_srcset.append(f"{scale_url} {scale_width}w")\n             source_tag = soup.new_tag("source", srcset=",\\n".join(source_srcset))\n             if media:\n'

Repository: plone.namedfile


Branch: refs/heads/master
Date: 2022-11-21T21:56:20+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.namedfile/commit/59ca577d28f4ca0cc40fb13d3f0b93a24c4d86a0

Prevent exception when an anonymous user is the first to load a page with a private image.

Anonymous still gets an Unauthorized when loading the image, but that is to be expected.
The html at least shows normally.
Fixes https://github.com/plone/plone.namedfile/issues/135.
We require plone.app.uuid 2.2.0 or higher for this.

Files changed:
A news/135.bugfix
M plone/namedfile/picture.py
M setup.py
M sources-52.ini

b'diff --git a/news/135.bugfix b/news/135.bugfix\nnew file mode 100644\nindex 0000000..a14089c\n--- /dev/null\n+++ b/news/135.bugfix\n@@ -0,0 +1,5 @@\n+Prevent exception when an anonymous user is the first to load a page with a private image.\n+Anonymous still gets an Unauthorized when loading the image, but that is to be expected.\n+The html at least shows normally.\n+Fixes `issue 135 <https://github.com/plone/plone.namedfile/issues/135>`_.\n+[maurits]\ndiff --git a/plone/namedfile/picture.py b/plone/namedfile/picture.py\nindex dbf4f7d..6b38786 100644\n--- a/plone/namedfile/picture.py\n+++ b/plone/namedfile/picture.py\n@@ -63,7 +63,7 @@ def create_picture_tag(\n         soup = BeautifulSoup("", "html.parser")\n         allowed_scales = get_allowed_scales()\n         if uid:\n-            obj = uuidToObject(uid)\n+            obj = uuidToObject(uid, unrestricted=True)\n         else:\n             obj = self.resolve_uid_url(src)\n         picture_tag = soup.new_tag("picture")\n@@ -135,7 +135,7 @@ def resolve_uid_url(self, href):\n         match = resolveuid_re.match(subpath)\n         if match is not None:\n             uid, _subpath = match.groups()\n-            obj = uuidToObject(uid)\n+            obj = uuidToObject(uid, unrestricted=True)\n         return obj\n \n     def update_src_scale(self, src, scale):\ndiff --git a/setup.py b/setup.py\nindex cf325cc..10df51c 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -48,7 +48,7 @@\n     install_requires=[\n         "persistent",\n         "piexif",\n-        "plone.app.uuid",\n+        "plone.app.uuid>=2.2.0",\n         "plone.rfc822>=2.0.0",\n         "plone.scale[storage] >=3.0",\n         "plone.schemaeditor",\ndiff --git a/sources-52.ini b/sources-52.ini\nindex f5e58aa..2474738 100644\n--- a/sources-52.ini\n+++ b/sources-52.ini\n@@ -10,7 +10,10 @@ constraints-out = constraints-52-mxdev.txt\n ignores =\n     plone.namedfile\n     plone.scale\n+version-overrides =\n+    # We need the unrestricted=True option:\n+    plone.app.uuid==2.2.1\n \n-[plone.scale]\n-url = https://github.com/plone/plone.scale.git\n-branch = pre-scale\n+# [plone.scale]\n+# url = https://github.com/plone/plone.scale.git\n+# branch = master\n'

Repository: plone.namedfile


Branch: refs/heads/master
Date: 2022-11-21T22:04:26+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.namedfile/commit/d4982268fb8e43d00e511273c0cac8302c4126c8

Use mxdev pre release (3.0.0b1) for testing.

Files changed:
M tox.ini

b'diff --git a/tox.ini b/tox.ini\nindex b9ba29d..9a2cbaa 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -19,13 +19,13 @@ commands =\n \n [testenv:plone52-py{37,38}]\n commands_pre =\n-    pip install mxdev\n+    pip install -U --pre mxdev\n     mxdev -c sources-52.ini\n     pip install --use-deprecated legacy-resolver -rrequirements-52-mxdev.txt\n \n [testenv:plone60-py{38,39,310,311}]\n commands_pre =\n     pip install -U pip\n-    pip install mxdev\n+    pip install -U --pre mxdev\n     mxdev -c sources-60.ini\n     pip install -rrequirements-60-mxdev.txt\n'

Repository: plone.namedfile


Branch: refs/heads/master
Date: 2022-11-22T21:13:49+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.namedfile/commit/294fd510d19f5fe2b25e13e7c2115b8cbb63a80a

Merge pull request #138 from plone/maurits-picture-variant-more-robust

Make picture variant code more robust/forgiving

Files changed:
A news/134.bugfix
A news/135.bugfix
M plone/namedfile/picture.py
M setup.py
M sources-52.ini
M tox.ini

b'diff --git a/news/134.bugfix b/news/134.bugfix\nnew file mode 100644\nindex 0000000..e92ee10\n--- /dev/null\n+++ b/news/134.bugfix\n@@ -0,0 +1,3 @@\n+Log a warning when a scale for a picture variant is not found.\n+Until now this gave an exception.\n+[maurits]\ndiff --git a/news/135.bugfix b/news/135.bugfix\nnew file mode 100644\nindex 0000000..a14089c\n--- /dev/null\n+++ b/news/135.bugfix\n@@ -0,0 +1,5 @@\n+Prevent exception when an anonymous user is the first to load a page with a private image.\n+Anonymous still gets an Unauthorized when loading the image, but that is to be expected.\n+The html at least shows normally.\n+Fixes `issue 135 <https://github.com/plone/plone.namedfile/issues/135>`_.\n+[maurits]\ndiff --git a/plone/namedfile/picture.py b/plone/namedfile/picture.py\nindex 1bc5ebc..6b38786 100644\n--- a/plone/namedfile/picture.py\n+++ b/plone/namedfile/picture.py\n@@ -15,7 +15,7 @@\n     from Products.CMFPlone.interfaces.controlpanel import IImagingSchema\n \n \n-logger = logging.getLogger("plone.outputfilter.picture_variant")\n+logger = logging.getLogger(__name__)\n appendix_re = re.compile("^(.*)([?#].*)$")\n resolveuid_re = re.compile("^[./]*resolve[Uu]id/([^/]*)/?(.*)$")\n \n@@ -47,6 +47,8 @@ def get_scale_width(self, scale):\n         """\n         allowed_scales = get_allowed_scales()\n         scale_info = allowed_scales.get(scale)\n+        if not scale_info:\n+            return\n         return scale_info[0]\n \n     def create_picture_tag(\n@@ -61,7 +63,7 @@ def create_picture_tag(\n         soup = BeautifulSoup("", "html.parser")\n         allowed_scales = get_allowed_scales()\n         if uid:\n-            obj = uuidToObject(uid)\n+            obj = uuidToObject(uid, unrestricted=True)\n         else:\n             obj = self.resolve_uid_url(src)\n         picture_tag = soup.new_tag("picture")\n@@ -80,6 +82,10 @@ def create_picture_tag(\n             source_scales = [target_scale] + additional_scales\n             source_srcset = []\n             for scale in source_scales:\n+                scale_width = self.get_scale_width(scale)\n+                if not scale_width:\n+                    logger.warning("No width found for scale %s.", scale)\n+                    continue\n                 if resolve_urls and obj:\n                     scale_view = obj.unrestrictedTraverse("@@images", None)\n                     scale_obj = scale_view.scale(fieldname, scale, pre=True)\n@@ -90,7 +96,6 @@ def create_picture_tag(\n                     # scale_obj = scale_view.scale(fieldname, scale, pre=True)\n                     # scale_url = scale_obj.url\n                     scale_url = self.update_src_scale(src=src, scale=scale)\n-                scale_width = self.get_scale_width(scale)\n                 source_srcset.append(f"{scale_url} {scale_width}w")\n             source_tag = soup.new_tag("source", srcset=",\\n".join(source_srcset))\n             if media:\n@@ -130,7 +135,7 @@ def resolve_uid_url(self, href):\n         match = resolveuid_re.match(subpath)\n         if match is not None:\n             uid, _subpath = match.groups()\n-            obj = uuidToObject(uid)\n+            obj = uuidToObject(uid, unrestricted=True)\n         return obj\n \n     def update_src_scale(self, src, scale):\ndiff --git a/setup.py b/setup.py\nindex cf325cc..10df51c 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -48,7 +48,7 @@\n     install_requires=[\n         "persistent",\n         "piexif",\n-        "plone.app.uuid",\n+        "plone.app.uuid>=2.2.0",\n         "plone.rfc822>=2.0.0",\n         "plone.scale[storage] >=3.0",\n         "plone.schemaeditor",\ndiff --git a/sources-52.ini b/sources-52.ini\nindex f5e58aa..2474738 100644\n--- a/sources-52.ini\n+++ b/sources-52.ini\n@@ -10,7 +10,10 @@ constraints-out = constraints-52-mxdev.txt\n ignores =\n     plone.namedfile\n     plone.scale\n+version-overrides =\n+    # We need the unrestricted=True option:\n+    plone.app.uuid==2.2.1\n \n-[plone.scale]\n-url = https://github.com/plone/plone.scale.git\n-branch = pre-scale\n+# [plone.scale]\n+# url = https://github.com/plone/plone.scale.git\n+# branch = master\ndiff --git a/tox.ini b/tox.ini\nindex b9ba29d..9a2cbaa 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -19,13 +19,13 @@ commands =\n \n [testenv:plone52-py{37,38}]\n commands_pre =\n-    pip install mxdev\n+    pip install -U --pre mxdev\n     mxdev -c sources-52.ini\n     pip install --use-deprecated legacy-resolver -rrequirements-52-mxdev.txt\n \n [testenv:plone60-py{38,39,310,311}]\n commands_pre =\n     pip install -U pip\n-    pip install mxdev\n+    pip install -U --pre mxdev\n     mxdev -c sources-60.ini\n     pip install -rrequirements-60-mxdev.txt\n'

