Repository: plone.app.layout


Branch: refs/heads/master
Date: 2019-04-10T15:40:10+02:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/plone.app.layout/commit/3870136d348d2ff864dcba91cfc2ec9445f64dc3

fix regression in show_excluded_items

Files changed:
A news/190.bugfix
M plone/app/layout/viewlets/common.py
M plone/app/layout/viewlets/tests/test_common.py

b"diff --git a/news/190.bugfix b/news/190.bugfix\nnew file mode 100644\nindex 00000000..148559b1\n--- /dev/null\n+++ b/news/190.bugfix\n@@ -0,0 +1,2 @@\n+fix ``show_excluded_items`` in combination with ``exclude_from_nav`` setting\n+[petschki]\ndiff --git a/plone/app/layout/viewlets/common.py b/plone/app/layout/viewlets/common.py\nindex 7843316f..d4ea248f 100644\n--- a/plone/app/layout/viewlets/common.py\n+++ b/plone/app/layout/viewlets/common.py\n@@ -302,6 +302,7 @@ def navtree(self):\n             'sort_on': self.settings.sort_tabs_on,\n             'is_default_page': False,\n         }\n+\n         if self.settings.sort_tabs_reversed:\n             query['sort_order'] = 'reverse'\n \n@@ -316,6 +317,7 @@ def navtree(self):\n         if not self.settings.show_excluded_items:\n             query['exclude_from_nav'] = False\n \n+        context_path = '/'.join(self.context.getPhysicalPath())\n         portal_catalog = getToolByName(self.context, 'portal_catalog')\n         brains = portal_catalog.searchResults(**query)\n \n@@ -324,11 +326,14 @@ def navtree(self):\n             'plone.types_use_view_action_in_listings', [])\n \n         for brain in brains:\n-            brain_path = '/'.join(brain.getPath().split('/'))\n+            brain_path = brain.getPath()\n             brain_parent_path = brain_path.rpartition('/')[0]\n             if brain_parent_path == navtree_path:\n                 # This should be already provided by the portal_tabs_view\n                 continue\n+            if not context_path.startswith(brain_path) and brain.exclude_from_nav:  # noqa: E501\n+                # skip excluded items if they're not in our context path\n+                continue\n             url = brain.getURL()\n             if brain.portal_type in types_using_view:\n                 url += '/view'\ndiff --git a/plone/app/layout/viewlets/tests/test_common.py b/plone/app/layout/viewlets/tests/test_common.py\nindex 601dfa17..dcc3a688 100644\n--- a/plone/app/layout/viewlets/tests/test_common.py\n+++ b/plone/app/layout/viewlets/tests/test_common.py\n@@ -235,8 +235,10 @@ def setUp(self):\n         self.folder.reindexObject()\n         setRoles(self.portal, TEST_USER_ID, ['Manager'])\n \n-    def _get_navtree(self):\n-        gsv = GlobalSectionsViewlet(self.portal, self.request.clone(), None)\n+    def _get_navtree(self, context=None):\n+        if context is None:\n+            context = self.portal\n+        gsv = GlobalSectionsViewlet(context, self.request.clone(), None)\n         return gsv.navtree\n \n     def test_selectedtabs(self):\n@@ -481,7 +483,6 @@ def test_generate_tabs_exclude_from_nav(self):\n                 '/plone/index_html',\n                 '/plone/Members',\n                 '/plone/test-folder',\n-                '/plone/excluded-folder',\n             ],\n         )\n \n@@ -534,3 +535,24 @@ def test_generate_tabs_exclude_from_nav(self):\n             [item['path'] for item in navtree['/plone']],\n             ['/plone/index_html', '/plone/Members', '/plone/test-folder'],\n         )\n+\n+        # check for 'show_excluded_items' in navtree\n+        self.registry['plone.show_excluded_items'] = True\n+        navtree = self._get_navtree()\n+        # if we're not in (sub)context of an excluded item don't show it\n+        self.assertListEqual(\n+            [item['path'] for item in navtree['/plone']],\n+            ['/plone/index_html', '/plone/Members', '/plone/test-folder'],\n+        )\n+        # but if so, keep the tree\n+        navtree = self._get_navtree(\n+            self.portal['excluded-folder']['sub-folder'])\n+        self.assertListEqual(\n+            [item['path'] for item in navtree['/plone']],\n+            ['/plone/index_html', '/plone/Members', '/plone/test-folder',\n+             '/plone/excluded-folder'],\n+        )\n+        self.assertListEqual(\n+            [item['path'] for item in navtree['/plone/excluded-folder']],\n+            ['/plone/excluded-folder/sub-folder'],\n+        )\n"

Repository: plone.app.layout


Branch: refs/heads/master
Date: 2019-04-10T23:43:36+02:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/plone.app.layout/commit/7502f34846d32af4659d637bb2028d97899bd30f

switch conditions for performance reason

Files changed:
M plone/app/layout/viewlets/common.py

b"diff --git a/plone/app/layout/viewlets/common.py b/plone/app/layout/viewlets/common.py\nindex d4ea248f..3a17bc11 100644\n--- a/plone/app/layout/viewlets/common.py\n+++ b/plone/app/layout/viewlets/common.py\n@@ -331,7 +331,7 @@ def navtree(self):\n             if brain_parent_path == navtree_path:\n                 # This should be already provided by the portal_tabs_view\n                 continue\n-            if not context_path.startswith(brain_path) and brain.exclude_from_nav:  # noqa: E501\n+            if brain.exclude_from_nav and not context_path.startswith(brain_path):  # noqa: E501\n                 # skip excluded items if they're not in our context path\n                 continue\n             url = brain.getURL()\n"

Repository: plone.app.layout


Branch: refs/heads/master
Date: 2019-04-11T07:58:25+02:00
Author: Peter Mathis (petschki) <petschki@users.noreply.github.com>
Commit: https://github.com/plone/plone.app.layout/commit/aaabb868ca112e6856885bd6b21a46025ec70a4f

Merge pull request #192 from plone/issue_190

fix regression in show_excluded_items

Files changed:
A news/190.bugfix
M plone/app/layout/viewlets/common.py
M plone/app/layout/viewlets/tests/test_common.py

b"diff --git a/news/190.bugfix b/news/190.bugfix\nnew file mode 100644\nindex 00000000..148559b1\n--- /dev/null\n+++ b/news/190.bugfix\n@@ -0,0 +1,2 @@\n+fix ``show_excluded_items`` in combination with ``exclude_from_nav`` setting\n+[petschki]\ndiff --git a/plone/app/layout/viewlets/common.py b/plone/app/layout/viewlets/common.py\nindex 7843316f..3a17bc11 100644\n--- a/plone/app/layout/viewlets/common.py\n+++ b/plone/app/layout/viewlets/common.py\n@@ -302,6 +302,7 @@ def navtree(self):\n             'sort_on': self.settings.sort_tabs_on,\n             'is_default_page': False,\n         }\n+\n         if self.settings.sort_tabs_reversed:\n             query['sort_order'] = 'reverse'\n \n@@ -316,6 +317,7 @@ def navtree(self):\n         if not self.settings.show_excluded_items:\n             query['exclude_from_nav'] = False\n \n+        context_path = '/'.join(self.context.getPhysicalPath())\n         portal_catalog = getToolByName(self.context, 'portal_catalog')\n         brains = portal_catalog.searchResults(**query)\n \n@@ -324,11 +326,14 @@ def navtree(self):\n             'plone.types_use_view_action_in_listings', [])\n \n         for brain in brains:\n-            brain_path = '/'.join(brain.getPath().split('/'))\n+            brain_path = brain.getPath()\n             brain_parent_path = brain_path.rpartition('/')[0]\n             if brain_parent_path == navtree_path:\n                 # This should be already provided by the portal_tabs_view\n                 continue\n+            if brain.exclude_from_nav and not context_path.startswith(brain_path):  # noqa: E501\n+                # skip excluded items if they're not in our context path\n+                continue\n             url = brain.getURL()\n             if brain.portal_type in types_using_view:\n                 url += '/view'\ndiff --git a/plone/app/layout/viewlets/tests/test_common.py b/plone/app/layout/viewlets/tests/test_common.py\nindex 601dfa17..dcc3a688 100644\n--- a/plone/app/layout/viewlets/tests/test_common.py\n+++ b/plone/app/layout/viewlets/tests/test_common.py\n@@ -235,8 +235,10 @@ def setUp(self):\n         self.folder.reindexObject()\n         setRoles(self.portal, TEST_USER_ID, ['Manager'])\n \n-    def _get_navtree(self):\n-        gsv = GlobalSectionsViewlet(self.portal, self.request.clone(), None)\n+    def _get_navtree(self, context=None):\n+        if context is None:\n+            context = self.portal\n+        gsv = GlobalSectionsViewlet(context, self.request.clone(), None)\n         return gsv.navtree\n \n     def test_selectedtabs(self):\n@@ -481,7 +483,6 @@ def test_generate_tabs_exclude_from_nav(self):\n                 '/plone/index_html',\n                 '/plone/Members',\n                 '/plone/test-folder',\n-                '/plone/excluded-folder',\n             ],\n         )\n \n@@ -534,3 +535,24 @@ def test_generate_tabs_exclude_from_nav(self):\n             [item['path'] for item in navtree['/plone']],\n             ['/plone/index_html', '/plone/Members', '/plone/test-folder'],\n         )\n+\n+        # check for 'show_excluded_items' in navtree\n+        self.registry['plone.show_excluded_items'] = True\n+        navtree = self._get_navtree()\n+        # if we're not in (sub)context of an excluded item don't show it\n+        self.assertListEqual(\n+            [item['path'] for item in navtree['/plone']],\n+            ['/plone/index_html', '/plone/Members', '/plone/test-folder'],\n+        )\n+        # but if so, keep the tree\n+        navtree = self._get_navtree(\n+            self.portal['excluded-folder']['sub-folder'])\n+        self.assertListEqual(\n+            [item['path'] for item in navtree['/plone']],\n+            ['/plone/index_html', '/plone/Members', '/plone/test-folder',\n+             '/plone/excluded-folder'],\n+        )\n+        self.assertListEqual(\n+            [item['path'] for item in navtree['/plone/excluded-folder']],\n+            ['/plone/excluded-folder/sub-folder'],\n+        )\n"

