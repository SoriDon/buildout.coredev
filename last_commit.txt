Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2016-11-12T23:35:32-08:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/b797587f6154616a75732d3ef6eb3a1b7cd4fb2f

remove @@plone view methods that were marked for removal in 5.1

Files changed:
M CHANGES.rst
M Products/CMFPlone/browser/interfaces.py
M Products/CMFPlone/browser/ploneview.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 207371b..e30998f 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -46,6 +46,16 @@ Breaking changes:
 - Move script ``datecomponents.py`` to Archetypes
   [jensens]
 
+- Remove methods of the ``@@plone`` view that were marked for deprecation:
+  - ``showEditableBorder`` (use ``@@plone/showToolbar``)
+  - ``mark_view`` (use ``@@plone_layout/mark_view``)
+  - ``hide_columns`` (use ``@@plone_layout/hide_columns``)
+  - ``icons_visible`` (use ``@@plone_layout/icons_visible``)
+  - ``getIcon`` (use ``@@plone_layout/getIcon``)
+  - ``have_portlets`` (use ``@@plone_layout/have_portlets``)
+  - ``bodyClass`` (use ``@@plone_layout/bodyClass``)
+  [davisagli]
+
 New features:
 
 - The password reset templates were changed to make use of ``content-core`` macros.
diff --git a/Products/CMFPlone/browser/interfaces.py b/Products/CMFPlone/browser/interfaces.py
index a59027a..f4372cd 100644
--- a/Products/CMFPlone/browser/interfaces.py
+++ b/Products/CMFPlone/browser/interfaces.py
@@ -232,11 +232,6 @@ def isStructuralFolder():
         as a folder by the navtree, the tab generation etc.
         """
 
-    def hide_columns(self, column_left, column_right):
-        """ Returns the CSS class used by the page layout hide empty
-            portlet columns.
-        """
-
     def navigationRootPath():
         """Get the current navigation root path
         """
@@ -296,22 +291,9 @@ def displayContentsTab():
     def cropText(text, length, ellipsis):
         """ Crop text on a word boundary """
 
-    def have_portlets(manager_name, view=None):
-        """Determine whether a column should be shown."""
-
-    def mark_view(view):
-        """ Adds a marker interface to the view if it is "the" view for the context
-            May only be called from a template.
-        """
-
     def site_encoding():
         """ returns site encoding """
 
-    def bodyClass(template, view):
-        """ returns template or view name to mark body tag with
-            template-${template_id} CSS class
-        """
-
 
 class ISendToForm(Interface):
     """ Interface for describing the 'sendto' form """
diff --git a/Products/CMFPlone/browser/ploneview.py b/Products/CMFPlone/browser/ploneview.py
index aa3189c..8f28c41 100644
--- a/Products/CMFPlone/browser/ploneview.py
+++ b/Products/CMFPlone/browser/ploneview.py
@@ -6,7 +6,6 @@
 from Products.CMFPlone.browser.interfaces import IPlone
 from Products.Five import BrowserView
 from zope.component import getMultiAdapter
-from zope.deprecation import deprecate
 from zope.i18n import translate
 from zope.interface import implementer
 from zope.size import byteDisplay
@@ -101,11 +100,6 @@ def showToolbar(self):
 
         return False
 
-    @deprecate('showEditableBorder is renamed to showToolbar')
-    def showEditableBorder(self):
-        # remove in 5.1
-        return self.showToolbar()
-
     def normalizeString(self, text):
         """Normalizes a title to an id.
         """
@@ -212,81 +206,9 @@ def getViewTemplateId(self):
             name=u'plone_context_state')
         return context_state.view_template_id()
 
-    @deprecate(
-        "@@plone_view/mark_view as been deprecated, you should use "
-        "@@plone_layout/mark_view"
-    )
-    def mark_view(self, view):
-        """Adds a marker interface to the view if it is "the" view for the
-        context May only be called from a template.
-        """
-        context = aq_inner(self.context)
-        layout = getMultiAdapter((context, self.request), name=u'plone_layout')
-        layout.mark_view(view)
-
     @memoize
     def patterns_settings(self):
         context = aq_inner(self.context)
         return getMultiAdapter(
             (context, self.request),
             name=u'plone_patterns_settings')()
-
-    @deprecate(  # remove in Plone 5.1
-        "@@plone_view/hide_columns as been deprecated, you should use "
-        "@@plone_layout/hide_columns"
-    )
-    def hide_columns(self, column_left, column_right):
-        """Returns a CSS class matching the current column status.
-        """
-        context = aq_inner(self.context)
-        layout = getMultiAdapter((context, self.request), name=u'plone_layout')
-        return layout.hide_columns(column_left, column_right)
-
-    @deprecate(  # remove in Plone 5.1
-        "@@plone_view/icons_visible as been deprecated, you should use "
-        "@@plone_layout/icons_visible"
-    )
-    def icons_visible(self):
-        """Returns True if icons should be shown or False otherwise.
-        """
-        context = aq_inner(self.context)
-        layout = getMultiAdapter((context, self.request), name=u'plone_layout')
-        return layout.icons_visible()
-
-    @deprecate(  # remove in Plone 5.1
-        "@@plone_view/getIcon as been deprecated, you should use "
-        "@@plone_layout/getIcon"
-    )
-    def getIcon(self, item):
-        """Returns an object which implements the IContentIcon interface and
-        provides the informations necessary to render an icon. The item
-        parameter needs to be adaptable to IContentIcon. Icons can be disabled
-        globally or just for anonymous users with the icon_visibility site
-        setting.
-        """
-        context = aq_inner(self.context)
-        layout = getMultiAdapter((context, self.request), name=u'plone_layout')
-        return layout.getIcon(item)
-
-    @deprecate(  # remove in Plone 5.1
-        "@@plone_view/have_portlets as been deprecated, you should "
-        "use @@plone_layout/have_portlets"
-    )
-    def have_portlets(self, manager_name, view=None):
-        """Determine whether a column should be shown. The left column is
-        called plone.leftcolumn; the right column is called plone.rightcolumn.
-        """
-        context = aq_inner(self.context)
-        layout = getMultiAdapter((context, self.request), name=u'plone_layout')
-        return layout.have_portlets(manager_name, view=view)
-
-    @deprecate(  # remove in Plone 5.1
-        "@@plone_view/bodyClass as been deprecated, you should use "
-        "@@plone_layout/bodyClass"
-    )
-    def bodyClass(self, template, view):
-        """Returns the CSS class to be used on the body tag.
-        """
-        context = aq_inner(self.context)
-        layout = getMultiAdapter((context, self.request), name=u'plone_layout')
-        return layout.bodyClass(template, view)


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2016-11-13T23:31:37+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/78456286b47c29dd6409ea269450851d87fee55e

Merge pull request #1838 from plone/davisagli-cleanup-deprecations

remove @@plone view methods that were marked for removal in 5.1

Files changed:
M CHANGES.rst
M Products/CMFPlone/browser/interfaces.py
M Products/CMFPlone/browser/ploneview.py

diff --git a/CHANGES.rst b/CHANGES.rst
index f477836..0bb8fa7 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -48,6 +48,16 @@ Breaking changes:
 - Move scripts ``datecomponents.py`` and ``show_id.py`` to Archetypes
   [jensens, davisagli]
 
+- Remove methods of the ``@@plone`` view that were marked for deprecation:
+  - ``showEditableBorder`` (use ``@@plone/showToolbar``)
+  - ``mark_view`` (use ``@@plone_layout/mark_view``)
+  - ``hide_columns`` (use ``@@plone_layout/hide_columns``)
+  - ``icons_visible`` (use ``@@plone_layout/icons_visible``)
+  - ``getIcon`` (use ``@@plone_layout/getIcon``)
+  - ``have_portlets`` (use ``@@plone_layout/have_portlets``)
+  - ``bodyClass`` (use ``@@plone_layout/bodyClass``)
+  [davisagli]
+
 New features:
 
 - The password reset templates were changed to make use of ``content-core`` macros.
diff --git a/Products/CMFPlone/browser/interfaces.py b/Products/CMFPlone/browser/interfaces.py
index 56f1ffe..14881f6 100644
--- a/Products/CMFPlone/browser/interfaces.py
+++ b/Products/CMFPlone/browser/interfaces.py
@@ -232,11 +232,6 @@ def isStructuralFolder():
         as a folder by the navtree, the tab generation etc.
         """
 
-    def hide_columns(self, column_left, column_right):
-        """ Returns the CSS class used by the page layout hide empty
-            portlet columns.
-        """
-
     def navigationRootPath():
         """Get the current navigation root path
         """
@@ -290,22 +285,9 @@ def showToolbar():
     def cropText(text, length, ellipsis):
         """ Crop text on a word boundary """
 
-    def have_portlets(manager_name, view=None):
-        """Determine whether a column should be shown."""
-
-    def mark_view(view):
-        """ Adds a marker interface to the view if it is "the" view for the context
-            May only be called from a template.
-        """
-
     def site_encoding():
         """ returns site encoding """
 
-    def bodyClass(template, view):
-        """ returns template or view name to mark body tag with
-            template-${template_id} CSS class
-        """
-
 
 class ISendToForm(Interface):
     """ Interface for describing the 'sendto' form """
diff --git a/Products/CMFPlone/browser/ploneview.py b/Products/CMFPlone/browser/ploneview.py
index aa3189c..8f28c41 100644
--- a/Products/CMFPlone/browser/ploneview.py
+++ b/Products/CMFPlone/browser/ploneview.py
@@ -6,7 +6,6 @@
 from Products.CMFPlone.browser.interfaces import IPlone
 from Products.Five import BrowserView
 from zope.component import getMultiAdapter
-from zope.deprecation import deprecate
 from zope.i18n import translate
 from zope.interface import implementer
 from zope.size import byteDisplay
@@ -101,11 +100,6 @@ def showToolbar(self):
 
         return False
 
-    @deprecate('showEditableBorder is renamed to showToolbar')
-    def showEditableBorder(self):
-        # remove in 5.1
-        return self.showToolbar()
-
     def normalizeString(self, text):
         """Normalizes a title to an id.
         """
@@ -212,81 +206,9 @@ def getViewTemplateId(self):
             name=u'plone_context_state')
         return context_state.view_template_id()
 
-    @deprecate(
-        "@@plone_view/mark_view as been deprecated, you should use "
-        "@@plone_layout/mark_view"
-    )
-    def mark_view(self, view):
-        """Adds a marker interface to the view if it is "the" view for the
-        context May only be called from a template.
-        """
-        context = aq_inner(self.context)
-        layout = getMultiAdapter((context, self.request), name=u'plone_layout')
-        layout.mark_view(view)
-
     @memoize
     def patterns_settings(self):
         context = aq_inner(self.context)
         return getMultiAdapter(
             (context, self.request),
             name=u'plone_patterns_settings')()
-
-    @deprecate(  # remove in Plone 5.1
-        "@@plone_view/hide_columns as been deprecated, you should use "
-        "@@plone_layout/hide_columns"
-    )
-    def hide_columns(self, column_left, column_right):
-        """Returns a CSS class matching the current column status.
-        """
-        context = aq_inner(self.context)
-        layout = getMultiAdapter((context, self.request), name=u'plone_layout')
-        return layout.hide_columns(column_left, column_right)
-
-    @deprecate(  # remove in Plone 5.1
-        "@@plone_view/icons_visible as been deprecated, you should use "
-        "@@plone_layout/icons_visible"
-    )
-    def icons_visible(self):
-        """Returns True if icons should be shown or False otherwise.
-        """
-        context = aq_inner(self.context)
-        layout = getMultiAdapter((context, self.request), name=u'plone_layout')
-        return layout.icons_visible()
-
-    @deprecate(  # remove in Plone 5.1
-        "@@plone_view/getIcon as been deprecated, you should use "
-        "@@plone_layout/getIcon"
-    )
-    def getIcon(self, item):
-        """Returns an object which implements the IContentIcon interface and
-        provides the informations necessary to render an icon. The item
-        parameter needs to be adaptable to IContentIcon. Icons can be disabled
-        globally or just for anonymous users with the icon_visibility site
-        setting.
-        """
-        context = aq_inner(self.context)
-        layout = getMultiAdapter((context, self.request), name=u'plone_layout')
-        return layout.getIcon(item)
-
-    @deprecate(  # remove in Plone 5.1
-        "@@plone_view/have_portlets as been deprecated, you should "
-        "use @@plone_layout/have_portlets"
-    )
-    def have_portlets(self, manager_name, view=None):
-        """Determine whether a column should be shown. The left column is
-        called plone.leftcolumn; the right column is called plone.rightcolumn.
-        """
-        context = aq_inner(self.context)
-        layout = getMultiAdapter((context, self.request), name=u'plone_layout')
-        return layout.have_portlets(manager_name, view=view)
-
-    @deprecate(  # remove in Plone 5.1
-        "@@plone_view/bodyClass as been deprecated, you should use "
-        "@@plone_layout/bodyClass"
-    )
-    def bodyClass(self, template, view):
-        """Returns the CSS class to be used on the body tag.
-        """
-        context = aq_inner(self.context)
-        layout = getMultiAdapter((context, self.request), name=u'plone_layout')
-        return layout.bodyClass(template, view)


