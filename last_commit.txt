Repository: plone.volto


Branch: refs/heads/main
Date: 2022-07-21T13:11:56-03:00
Author: Érico Andrei (ericof) <ericof@gmail.com>
Commit: https://github.com/plone/plone.volto/commit/7a47fb9dac414d93f7e06d544337e724fc4ca915

Add  to the default summary serialization.

Files changed:
A news/74.feature
M src/plone/volto/summary.py

b'diff --git a/news/74.feature b/news/74.feature\nnew file mode 100644\nindex 0000000..7a9277c\n--- /dev/null\n+++ b/news/74.feature\n@@ -0,0 +1,2 @@\n+- Use new metadata utility for adding the ``image_scales`` to the default serialization.\n+  [ericof]\n\\ No newline at end of file\ndiff --git a/src/plone/volto/summary.py b/src/plone/volto/summary.py\nindex 8b314e9..b2e5dda 100644\n--- a/src/plone/volto/summary.py\n+++ b/src/plone/volto/summary.py\n@@ -7,4 +7,5 @@ class JSONSummarySerializerMetadata:\n     def default_metadata_fields(self):\n         return {\n             "image_field",\n+            "image_scales",\n         }\n'

Repository: plone.volto


Branch: refs/heads/main
Date: 2022-07-21T15:36:34-03:00
Author: Érico Andrei (ericof) <ericof@gmail.com>
Commit: https://github.com/plone/plone.volto/commit/8c46cfb2802404b7614358101c97bd4872b90a8a

Add test to check if default_metadata_fields are added to summary

Files changed:
A src/plone/volto/tests/test_summary_serialization.py
M news/74.feature

b'diff --git a/news/74.feature b/news/74.feature\nindex 7a9277c..32c4609 100644\n--- a/news/74.feature\n+++ b/news/74.feature\n@@ -1,2 +1,2 @@\n - Use new metadata utility for adding the ``image_scales`` to the default serialization.\n-  [ericof]\n\\ No newline at end of file\n+  [ericof]\ndiff --git a/src/plone/volto/tests/test_summary_serialization.py b/src/plone/volto/tests/test_summary_serialization.py\nnew file mode 100644\nindex 0000000..ff58730\n--- /dev/null\n+++ b/src/plone/volto/tests/test_summary_serialization.py\n@@ -0,0 +1,43 @@\n+from plone.dexterity.utils import createContentInContainer\n+from plone.restapi.interfaces import ISerializeToJsonSummary\n+from plone.volto.testing import PLONE_VOLTO_CORE_INTEGRATION_TESTING  # noqa\n+from Products.CMFCore.utils import getToolByName\n+from zope.component import getMultiAdapter\n+\n+import unittest\n+\n+\n+class TestSummarySerialization(unittest.TestCase):\n+\n+    layer = PLONE_VOLTO_CORE_INTEGRATION_TESTING\n+\n+    def setUp(self):\n+        self.app = self.layer["app"]\n+        self.portal = self.layer["portal"]\n+        self.request = self.layer["request"]\n+        self.catalog = getToolByName(self.portal, "portal_catalog")\n+        self.doc1 = createContentInContainer(\n+            self.portal,\n+            "Document",\n+            id="doc1",\n+            title="Lorem Ipsum",\n+            description="Description",\n+        )\n+\n+    def test_brain_summary_contains_default_metadata_fields(self):\n+        brain = self.catalog(UID=self.doc1.UID())[0]\n+        summary = getMultiAdapter((brain, self.request), ISerializeToJsonSummary)()\n+        self.assertIn("image_field", summary)\n+        self.assertIn("image_scales", summary)\n+\n+    def test_brain_summary_does_not_fail_if_column_not_there(self):\n+        # First remove the image_field column, if it exists\n+        column = "image_field"\n+        column_exists = column in self.catalog.schema()\n+        if column_exists:\n+            self.catalog.delColumn(column)\n+        brain = self.catalog(UID=self.doc1.UID())[0]\n+        summary = getMultiAdapter((brain, self.request), ISerializeToJsonSummary)()\n+        self.assertIn("image_field", summary)\n+        if column_exists:\n+            self.catalog.addColumn(column)\n'

Repository: plone.volto


Branch: refs/heads/main
Date: 2022-07-21T15:41:45-03:00
Author: Érico Andrei (ericof) <ericof@gmail.com>
Commit: https://github.com/plone/plone.volto/commit/f3c7f042452ee83a484d177365785e3a38cf7b0e

Make test more resilient

Files changed:
M src/plone/volto/tests/test_summary_serialization.py

b'diff --git a/src/plone/volto/tests/test_summary_serialization.py b/src/plone/volto/tests/test_summary_serialization.py\nindex ff58730..3eae4a9 100644\n--- a/src/plone/volto/tests/test_summary_serialization.py\n+++ b/src/plone/volto/tests/test_summary_serialization.py\n@@ -36,8 +36,10 @@ def test_brain_summary_does_not_fail_if_column_not_there(self):\n         column_exists = column in self.catalog.schema()\n         if column_exists:\n             self.catalog.delColumn(column)\n-        brain = self.catalog(UID=self.doc1.UID())[0]\n-        summary = getMultiAdapter((brain, self.request), ISerializeToJsonSummary)()\n-        self.assertIn("image_field", summary)\n-        if column_exists:\n-            self.catalog.addColumn(column)\n+        try:\n+            brain = self.catalog(UID=self.doc1.UID())[0]\n+            summary = getMultiAdapter((brain, self.request), ISerializeToJsonSummary)()\n+            self.assertIn("image_field", summary)\n+        finally:\n+            if column_exists:\n+                self.catalog.addColumn(column)\n'

Repository: plone.volto


Branch: refs/heads/main
Date: 2022-07-21T18:06:13-03:00
Author: Érico Andrei (ericof) <ericof@gmail.com>
Commit: https://github.com/plone/plone.volto/commit/b9dbfafa66d706ffd9ed1503071b07bfa0223c07

Merge pull request #75 from plone/issue-74-image_scales

Add image_scales the default summary serialization.

Files changed:
A news/74.feature
A src/plone/volto/tests/test_summary_serialization.py
M src/plone/volto/summary.py

b'diff --git a/news/74.feature b/news/74.feature\nnew file mode 100644\nindex 0000000..32c4609\n--- /dev/null\n+++ b/news/74.feature\n@@ -0,0 +1,2 @@\n+- Use new metadata utility for adding the ``image_scales`` to the default serialization.\n+  [ericof]\ndiff --git a/src/plone/volto/summary.py b/src/plone/volto/summary.py\nindex 8b314e9..b2e5dda 100644\n--- a/src/plone/volto/summary.py\n+++ b/src/plone/volto/summary.py\n@@ -7,4 +7,5 @@ class JSONSummarySerializerMetadata:\n     def default_metadata_fields(self):\n         return {\n             "image_field",\n+            "image_scales",\n         }\ndiff --git a/src/plone/volto/tests/test_summary_serialization.py b/src/plone/volto/tests/test_summary_serialization.py\nnew file mode 100644\nindex 0000000..3eae4a9\n--- /dev/null\n+++ b/src/plone/volto/tests/test_summary_serialization.py\n@@ -0,0 +1,45 @@\n+from plone.dexterity.utils import createContentInContainer\n+from plone.restapi.interfaces import ISerializeToJsonSummary\n+from plone.volto.testing import PLONE_VOLTO_CORE_INTEGRATION_TESTING  # noqa\n+from Products.CMFCore.utils import getToolByName\n+from zope.component import getMultiAdapter\n+\n+import unittest\n+\n+\n+class TestSummarySerialization(unittest.TestCase):\n+\n+    layer = PLONE_VOLTO_CORE_INTEGRATION_TESTING\n+\n+    def setUp(self):\n+        self.app = self.layer["app"]\n+        self.portal = self.layer["portal"]\n+        self.request = self.layer["request"]\n+        self.catalog = getToolByName(self.portal, "portal_catalog")\n+        self.doc1 = createContentInContainer(\n+            self.portal,\n+            "Document",\n+            id="doc1",\n+            title="Lorem Ipsum",\n+            description="Description",\n+        )\n+\n+    def test_brain_summary_contains_default_metadata_fields(self):\n+        brain = self.catalog(UID=self.doc1.UID())[0]\n+        summary = getMultiAdapter((brain, self.request), ISerializeToJsonSummary)()\n+        self.assertIn("image_field", summary)\n+        self.assertIn("image_scales", summary)\n+\n+    def test_brain_summary_does_not_fail_if_column_not_there(self):\n+        # First remove the image_field column, if it exists\n+        column = "image_field"\n+        column_exists = column in self.catalog.schema()\n+        if column_exists:\n+            self.catalog.delColumn(column)\n+        try:\n+            brain = self.catalog(UID=self.doc1.UID())[0]\n+            summary = getMultiAdapter((brain, self.request), ISerializeToJsonSummary)()\n+            self.assertIn("image_field", summary)\n+        finally:\n+            if column_exists:\n+                self.catalog.addColumn(column)\n'

