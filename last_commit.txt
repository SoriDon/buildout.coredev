Repository: plone.api


Branch: refs/heads/master
Date: 2022-05-17T21:35:48+02:00
Author: ksuess (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.api/commit/92aee0478dec76feec4608d82773ecc830831d9f

No unicode literals in documentation.

 plone.api 2.x is for Python 3, Plone 6

Files changed:
M docs/content.md
M docs/portal.md

b"diff --git a/docs/content.md b/docs/content.md\nindex f372e252..94d360fe 100644\n--- a/docs/content.md\n+++ b/docs/content.md\n@@ -495,7 +495,7 @@ view = api.content.get_view(\n \n % invisible-code-block: python\n %\n-% self.assertEqual(view.__name__, u'plone')\n+% self.assertEqual(view.__name__, 'plone')\n \n Since version `2.0.0`, the `request` argument can be omitted.\n In that case the global request will be used.\ndiff --git a/docs/portal.md b/docs/portal.md\nindex 070e138e..b1e89a20 100644\n--- a/docs/portal.md\n+++ b/docs/portal.md\n@@ -156,7 +156,7 @@ msg = api.portal.translate('Edited', lang='es')\n % invisible-code-block: python\n %\n % # assert that the translation is correct\n-% self.assertEqual(msg, u'Editado')\n+% self.assertEqual(msg, 'Editado')\n \n (portal-send-email-example)=\n \n@@ -323,7 +323,7 @@ One common pattern when using registry records is to define an interface with al\n % registry = getUtility(IRegistry)\n % registry.registerInterface(IMyRegistrySettings)\n % records = registry.forInterface(IMyRegistrySettings)\n-% records.field_one = u'my text'\n+% records.field_one = 'my text'\n \n ```python\n from plone import api\n@@ -334,7 +334,7 @@ api.portal.get_registry_record('field_one', interface=IMyRegistrySettings)\n %\n % self.assertEqual(\n %     api.portal.get_registry_record('field_one', interface=IMyRegistrySettings),\n-%     u'my text'\n+%     'my text'\n % )\n \n It is possible to provide a default value\n@@ -343,8 +343,8 @@ if the queried record is not found.\n \n ```python\n from plone import api\n-api.portal.get_registry_record('foo', interface=IMyRegistrySettings, default=u'bar')\n-api.portal.get_registry_record('foo', default=u'baz')\n+api.portal.get_registry_record('foo', interface=IMyRegistrySettings, default='bar')\n+api.portal.get_registry_record('foo', default='baz')\n ```\n \n % invisible-code-block: python\n@@ -352,13 +352,13 @@ api.portal.get_registry_record('foo', default=u'baz')\n %     api.portal.get_registry_record(\n %         'foo',\n %         interface=IMyRegistrySettings,\n-%         default=u'bar'\n+%         default='bar'\n %     ),\n-%     u'bar',\n+%     'bar',\n % )\n % self.assertEqual(\n-%     api.portal.get_registry_record('foo', default=u'baz'),\n-%     u'baz',\n+%     api.portal.get_registry_record('foo', default='baz'),\n+%     'baz',\n % )\n \n (portal-set-registry-record-example)=\n@@ -400,14 +400,14 @@ api.portal.set_registry_record('my.package.someoption', False)\n \n ```python\n from plone import api\n-api.portal.set_registry_record('field_one', u'new value', interface=IMyRegistrySettings)\n+api.portal.set_registry_record('field_one', 'new value', interface=IMyRegistrySettings)\n ```\n \n % invisible-code-block: python\n %\n % self.assertEqual(\n %     api.portal.get_registry_record('field_one', interface=IMyRegistrySettings),\n-%     u'new value'\n+%     'new value'\n % )\n \n ## Further reading\n"

Repository: plone.api


Branch: refs/heads/master
Date: 2022-05-17T21:35:48+02:00
Author: ksuess (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.api/commit/04deee0928d3a0888ff515a15a35eee3633a0089

Add change log entry.

Files changed:
A news/483.bugfix

b'diff --git a/news/483.bugfix b/news/483.bugfix\nnew file mode 100644\nindex 00000000..e7b9350f\n--- /dev/null\n+++ b/news/483.bugfix\n@@ -0,0 +1 @@\n+No unicode literals in documentation. [ksuess]\n\\ No newline at end of file\n'

Repository: plone.api


Branch: refs/heads/master
Date: 2022-05-19T11:30:01+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.api/commit/86a9e98a9f609acdcab3a99e0ff7b1b6b6844a2f

Merge pull request #482 from plone/documentation-unicode

No unicode literals in documentation.

Files changed:
A news/483.bugfix
M docs/content.md
M docs/portal.md

b"diff --git a/docs/content.md b/docs/content.md\nindex f372e252..94d360fe 100644\n--- a/docs/content.md\n+++ b/docs/content.md\n@@ -495,7 +495,7 @@ view = api.content.get_view(\n \n % invisible-code-block: python\n %\n-% self.assertEqual(view.__name__, u'plone')\n+% self.assertEqual(view.__name__, 'plone')\n \n Since version `2.0.0`, the `request` argument can be omitted.\n In that case the global request will be used.\ndiff --git a/docs/portal.md b/docs/portal.md\nindex 070e138e..b1e89a20 100644\n--- a/docs/portal.md\n+++ b/docs/portal.md\n@@ -156,7 +156,7 @@ msg = api.portal.translate('Edited', lang='es')\n % invisible-code-block: python\n %\n % # assert that the translation is correct\n-% self.assertEqual(msg, u'Editado')\n+% self.assertEqual(msg, 'Editado')\n \n (portal-send-email-example)=\n \n@@ -323,7 +323,7 @@ One common pattern when using registry records is to define an interface with al\n % registry = getUtility(IRegistry)\n % registry.registerInterface(IMyRegistrySettings)\n % records = registry.forInterface(IMyRegistrySettings)\n-% records.field_one = u'my text'\n+% records.field_one = 'my text'\n \n ```python\n from plone import api\n@@ -334,7 +334,7 @@ api.portal.get_registry_record('field_one', interface=IMyRegistrySettings)\n %\n % self.assertEqual(\n %     api.portal.get_registry_record('field_one', interface=IMyRegistrySettings),\n-%     u'my text'\n+%     'my text'\n % )\n \n It is possible to provide a default value\n@@ -343,8 +343,8 @@ if the queried record is not found.\n \n ```python\n from plone import api\n-api.portal.get_registry_record('foo', interface=IMyRegistrySettings, default=u'bar')\n-api.portal.get_registry_record('foo', default=u'baz')\n+api.portal.get_registry_record('foo', interface=IMyRegistrySettings, default='bar')\n+api.portal.get_registry_record('foo', default='baz')\n ```\n \n % invisible-code-block: python\n@@ -352,13 +352,13 @@ api.portal.get_registry_record('foo', default=u'baz')\n %     api.portal.get_registry_record(\n %         'foo',\n %         interface=IMyRegistrySettings,\n-%         default=u'bar'\n+%         default='bar'\n %     ),\n-%     u'bar',\n+%     'bar',\n % )\n % self.assertEqual(\n-%     api.portal.get_registry_record('foo', default=u'baz'),\n-%     u'baz',\n+%     api.portal.get_registry_record('foo', default='baz'),\n+%     'baz',\n % )\n \n (portal-set-registry-record-example)=\n@@ -400,14 +400,14 @@ api.portal.set_registry_record('my.package.someoption', False)\n \n ```python\n from plone import api\n-api.portal.set_registry_record('field_one', u'new value', interface=IMyRegistrySettings)\n+api.portal.set_registry_record('field_one', 'new value', interface=IMyRegistrySettings)\n ```\n \n % invisible-code-block: python\n %\n % self.assertEqual(\n %     api.portal.get_registry_record('field_one', interface=IMyRegistrySettings),\n-%     u'new value'\n+%     'new value'\n % )\n \n ## Further reading\ndiff --git a/news/483.bugfix b/news/483.bugfix\nnew file mode 100644\nindex 00000000..e7b9350f\n--- /dev/null\n+++ b/news/483.bugfix\n@@ -0,0 +1 @@\n+No unicode literals in documentation. [ksuess]\n\\ No newline at end of file\n"

