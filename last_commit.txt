Repository: plone.volto


Branch: refs/heads/main
Date: 2023-03-12T22:33:16+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.volto/commit/3df9d4434be3bc3755536126d5444316112e660f

Use correct service_url when calling make_document (#112)

* Use correct service_url when calling make_document. Fix #95

* black

---------

Co-authored-by: Timo Stollenwerk &lt;tisto@users.noreply.github.com&gt;

Files changed:
A news/95.bugfix
M src/plone/volto/browser/migrate_to_volto.py

b'diff --git a/news/95.bugfix b/news/95.bugfix\nnew file mode 100644\nindex 0000000..a339487\n--- /dev/null\n+++ b/news/95.bugfix\n@@ -0,0 +1,2 @@\n+Use correct service_url when calling make_document. Fix #95\n+[pbauer]\ndiff --git a/src/plone/volto/browser/migrate_to_volto.py b/src/plone/volto/browser/migrate_to_volto.py\nindex d1092e6..e356816 100644\n--- a/src/plone/volto/browser/migrate_to_volto.py\n+++ b/src/plone/volto/browser/migrate_to_volto.py\n@@ -105,7 +105,7 @@ def do_migrate_folders(self):\n         catalog = getToolByName(self.context, "portal_catalog")\n         for brain in catalog(portal_type="Folder", sort_on="path"):\n             obj = brain.getObject()\n-            obj = make_document(obj, slate=self.slate)\n+            obj = make_document(obj, service_url=self.service_url, slate=self.slate)\n             migrated_default_page = False\n             if self.migrate_default_pages:\n                 migrated_default_page = self.do_migrate_default_page(obj)\n@@ -122,7 +122,7 @@ def migrate_collections(self):\n         catalog = getToolByName(self.context, "portal_catalog")\n         for brain in catalog(portal_type="Collection", sort_on="path"):\n             obj = brain.getObject()\n-            obj = make_document(obj, slate=self.slate)\n+            obj = make_document(obj, service_url=self.service_url, slate=self.slate)\n \n     def do_migrate_default_page(self, obj):\n         """This assumes the obj is already a FolderishDocument"""\n@@ -281,7 +281,7 @@ def generate_listing_block_from_collection(obj, move_relative_path=False):\n     return uuid, block\n \n \n-def make_document(obj, slate=True):\n+def make_document(obj, service_url="http://localhost:5000/html", slate=True):\n     """Convert any item to a FolderishDocument"""\n     blocks = {}\n     blocks_layout = {"items": []}\n@@ -307,7 +307,9 @@ def make_document(obj, slate=True):\n             text = text.raw\n         if text and text.strip():\n             # We have Richtext. Get the block-data for it\n-            text_blocks, uuids = get_blocks_from_richtext(text, slate=slate)\n+            text_blocks, uuids = get_blocks_from_richtext(\n+                text, service_url=service_url, slate=slate\n+            )\n             if uuids:\n                 blocks.update(text_blocks)\n                 blocks_layout["items"] += uuids\n'

