Repository: plone.restapi


Branch: refs/heads/master
Date: 2019-06-22T18:27:13+02:00
Author: Lukas Graf (lukasgraf) <lukas.graf@4teamwork.ch>
Commit: https://github.com/plone/plone.restapi/commit/6acfa8cbadd17d80125455fd0e067bcd05260a54

Remove 'schema' from expansion examples - that component

doesn't currently exist any more.

Files changed:
M docs/source/expansion.rst
M src/plone/restapi/tests/test_documentation.py

b'diff --git a/docs/source/expansion.rst b/docs/source/expansion.rst\nindex c56b7dfb..56647d63 100644\n--- a/docs/source/expansion.rst\n+++ b/docs/source/expansion.rst\n@@ -26,7 +26,6 @@ in the reponse of any content GET request::\n         {"@id": "http://localhost:55001/plone/front-page/@actions"},\n         {"@id": "http://localhost:55001/plone/front-page/@breadcrumbs"},\n         {"@id": "http://localhost:55001/plone/front-page/@navigation"},\n-        {"@id": "http://localhost:55001/plone/front-page/@schema"},\n         {"@id": "http://localhost:55001/plone/front-page/@workflow"},\n         ...\n     },\ndiff --git a/src/plone/restapi/tests/test_documentation.py b/src/plone/restapi/tests/test_documentation.py\nindex a9bda9ff..52cf34a5 100644\n--- a/src/plone/restapi/tests/test_documentation.py\n+++ b/src/plone/restapi/tests/test_documentation.py\n@@ -1090,7 +1090,7 @@ def test_documentation_expansion_expanded(self):\n \n     def test_documentation_expansion_expanded_full(self):\n         response = self.api_session.get(\n-            "/front-page?expand=actions,breadcrumbs,navigation,schema,workflow"\n+            "/front-page?expand=actions,breadcrumbs,navigation,workflow"\n         )\n         save_request_and_response_for_docs("expansion_expanded_full", response)\n \n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2019-06-22T21:51:40+02:00
Author: Lukas Graf (lukasgraf) <lukas.graf@4teamwork.ch>
Commit: https://github.com/plone/plone.restapi/commit/708e04a8435ced7c83f88e98e3559054bc685c97

Make @types endpoint expandable.

Files changed:
A news/766.feature
M docs/source/expansion.rst
M src/plone/restapi/services/types/configure.zcml
M src/plone/restapi/services/types/get.py
M src/plone/restapi/tests/http-examples/collection.resp
M src/plone/restapi/tests/http-examples/content_get.resp
M src/plone/restapi/tests/http-examples/content_patch_representation.resp
M src/plone/restapi/tests/http-examples/content_post.resp
M src/plone/restapi/tests/http-examples/document.resp
M src/plone/restapi/tests/http-examples/event.resp
M src/plone/restapi/tests/http-examples/expansion.resp
M src/plone/restapi/tests/http-examples/expansion_expanded.resp
M src/plone/restapi/tests/http-examples/expansion_expanded_full.req
M src/plone/restapi/tests/http-examples/expansion_expanded_full.resp
M src/plone/restapi/tests/http-examples/file.resp
M src/plone/restapi/tests/http-examples/folder.resp
M src/plone/restapi/tests/http-examples/image.resp
M src/plone/restapi/tests/http-examples/link.resp
M src/plone/restapi/tests/http-examples/newsitem.resp
M src/plone/restapi/tests/http-examples/search_fullobjects.resp
M src/plone/restapi/tests/test_documentation.py
M src/plone/restapi/tests/test_expansion.py

b'diff --git a/docs/source/expansion.rst b/docs/source/expansion.rst\nindex 56647d63..5c0b2111 100644\n--- a/docs/source/expansion.rst\n+++ b/docs/source/expansion.rst\n@@ -26,6 +26,7 @@ in the reponse of any content GET request::\n         {"@id": "http://localhost:55001/plone/front-page/@actions"},\n         {"@id": "http://localhost:55001/plone/front-page/@breadcrumbs"},\n         {"@id": "http://localhost:55001/plone/front-page/@navigation"},\n+        {"@id": "http://localhost:55001/plone/front-page/@types"},\n         {"@id": "http://localhost:55001/plone/front-page/@workflow"},\n         ...\n     },\ndiff --git a/news/766.feature b/news/766.feature\nnew file mode 100644\nindex 00000000..40e0a073\n--- /dev/null\n+++ b/news/766.feature\n@@ -0,0 +1,2 @@\n+Make @types endpoint expandable.\n+[lgraf]\ndiff --git a/src/plone/restapi/services/types/configure.zcml b/src/plone/restapi/services/types/configure.zcml\nindex 8354ec33..8d2de276 100644\n--- a/src/plone/restapi/services/types/configure.zcml\n+++ b/src/plone/restapi/services/types/configure.zcml\n@@ -11,4 +11,6 @@\n     permission="zope2.View"\n     />\n \n+  <adapter factory=".get.TypesInfo" name="types"/>\n+\n </configure>\ndiff --git a/src/plone/restapi/services/types/get.py b/src/plone/restapi/services/types/get.py\nindex 495a482d..dc392cf4 100644\n--- a/src/plone/restapi/services/types/get.py\n+++ b/src/plone/restapi/services/types/get.py\n@@ -1,17 +1,80 @@\n # -*- coding: utf-8 -*-\n+from plone.dexterity.interfaces import IDexterityContent\n+from plone.restapi.interfaces import IExpandableElement\n from plone.restapi.services import Service\n from plone.restapi.types.utils import get_jsonschema_for_portal_type\n from Products.CMFCore.interfaces import IFolderish\n from Products.CMFCore.utils import getToolByName\n from zExceptions import Unauthorized\n+from zope.component import adapter\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n from zope.i18n import translate\n from zope.interface import implementer\n+from zope.interface import Interface\n from zope.publisher.interfaces import IPublishTraverse\n from zope.schema.interfaces import IVocabularyFactory\n \n \n+def check_security(context):\n+    # Only expose type information to authenticated users\n+    portal_membership = getToolByName(context, "portal_membership")\n+    if portal_membership.isAnonymousUser():\n+        raise Unauthorized\n+\n+\n+@implementer(IExpandableElement)\n+@adapter(IDexterityContent, Interface)\n+class TypesInfo(object):\n+\n+    def __init__(self, context, request):\n+        self.context = context\n+        self.request = request\n+\n+    def __call__(self, expand=False):\n+        result = {\n+            "types": {"@id": "{}/@types".format(self.context.absolute_url())}\n+        }\n+        if not expand:\n+            return result\n+\n+        check_security(self.context)\n+\n+        vocab_factory = getUtility(\n+            IVocabularyFactory, name="plone.app.vocabularies.ReallyUserFriendlyTypes"\n+        )\n+\n+        portal_types = getToolByName(self.context, "portal_types")\n+\n+        # allowedContentTypes already checks for permissions\n+        allowed_types = [x.getId() for x in self.context.allowedContentTypes()]\n+\n+        portal = getMultiAdapter(\n+            (self.context, self.request), name="plone_portal_state"\n+        ).portal()\n+        portal_url = portal.absolute_url()\n+\n+        # only addables if the content type is folderish\n+        can_add = IFolderish.providedBy(self.context)\n+\n+        # Filter out any type that doesn\'t have lookupSchema. We are depended\n+        # on that in lower level code.\n+        ftis = [portal_types[x.value] for x in vocab_factory(self.context)]\n+        ftis = [fti for fti in ftis if getattr(fti, "lookupSchema", None)]\n+\n+        result[\'types\'] = [\n+            {\n+                "@id": "{}/@types/{}".format(portal_url, fti.getId()),\n+                "title": translate(fti.Title(), context=self.request),\n+                "addable": fti.getId() in allowed_types if can_add else False,\n+            }\n+            for fti in ftis\n+        ]\n+\n+        return result\n+\n+\n+# @implementer(IExpandableElement)\n @implementer(IPublishTraverse)\n class TypesGet(Service):\n     def __init__(self, context, request):\n@@ -33,16 +96,10 @@ def _get_record_name(self):\n \n         return self.params[0]\n \n-    def check_security(self):\n-        # Only expose type information to authenticated users\n-        portal_membership = getToolByName(self.context, "portal_membership")\n-        if portal_membership.isAnonymousUser():\n-            raise Unauthorized\n-\n     def reply(self):\n-        self.check_security()\n-\n         if self.params and len(self.params) > 0:\n+            # Return schema for a specific type\n+            check_security(self.context)\n             self.content_type = "application/json+schema"\n             try:\n                 portal_type = self.params.pop()\n@@ -56,33 +113,7 @@ def reply(self):\n                     "type": "NotFound",\n                     "message": \'Type "{}" could not be found.\'.format(portal_type),\n                 }\n-        vocab_factory = getUtility(\n-            IVocabularyFactory, name="plone.app.vocabularies.ReallyUserFriendlyTypes"\n-        )\n-\n-        portal_types = getToolByName(self.context, "portal_types")\n-\n-        # allowedContentTypes already checks for permissions\n-        allowed_types = [x.getId() for x in self.context.allowedContentTypes()]\n-\n-        portal = getMultiAdapter(\n-            (self.context, self.request), name="plone_portal_state"\n-        ).portal()\n-        portal_url = portal.absolute_url()\n-\n-        # only addables if the content type is folderish\n-        can_add = IFolderish.providedBy(self.context)\n \n-        # Filter out any type that doesn\'t have lookupSchema. We are depended\n-        # on that in lower level code.\n-        ftis = [portal_types[x.value] for x in vocab_factory(self.context)]\n-        ftis = [fti for fti in ftis if getattr(fti, "lookupSchema", None)]\n-\n-        return [\n-            {\n-                "@id": "{}/@types/{}".format(portal_url, fti.getId()),\n-                "title": translate(fti.Title(), context=self.request),\n-                "addable": fti.getId() in allowed_types if can_add else False,\n-            }\n-            for fti in ftis\n-        ]\n+        # List type info, including addable_types\n+        info = TypesInfo(self.context, self.request)\n+        return info(expand=True)["types"]\ndiff --git a/src/plone/restapi/tests/http-examples/collection.resp b/src/plone/restapi/tests/http-examples/collection.resp\nindex 7421a1c3..9d950dac 100644\n--- a/src/plone/restapi/tests/http-examples/collection.resp\n+++ b/src/plone/restapi/tests/http-examples/collection.resp\n@@ -12,6 +12,9 @@ Content-Type: application/json\n     "navigation": {\n       "@id": "http://localhost:55001/plone/collection/@navigation"\n     }, \n+    "types": {\n+      "@id": "http://localhost:55001/plone/collection/@types"\n+    }, \n     "workflow": {\n       "@id": "http://localhost:55001/plone/collection/@workflow"\n     }\ndiff --git a/src/plone/restapi/tests/http-examples/content_get.resp b/src/plone/restapi/tests/http-examples/content_get.resp\nindex 3cee3662..fb30f741 100644\n--- a/src/plone/restapi/tests/http-examples/content_get.resp\n+++ b/src/plone/restapi/tests/http-examples/content_get.resp\n@@ -12,6 +12,9 @@ Content-Type: application/json\n     "navigation": {\n       "@id": "http://localhost:55001/plone/folder/my-document/@navigation"\n     }, \n+    "types": {\n+      "@id": "http://localhost:55001/plone/folder/my-document/@types"\n+    }, \n     "workflow": {\n       "@id": "http://localhost:55001/plone/folder/my-document/@workflow"\n     }\ndiff --git a/src/plone/restapi/tests/http-examples/content_patch_representation.resp b/src/plone/restapi/tests/http-examples/content_patch_representation.resp\nindex 7596044f..e738c14a 100644\n--- a/src/plone/restapi/tests/http-examples/content_patch_representation.resp\n+++ b/src/plone/restapi/tests/http-examples/content_patch_representation.resp\n@@ -12,6 +12,9 @@ Content-Type: application/json\n     "navigation": {\n       "@id": "http://localhost:55001/plone/folder/my-document/@navigation"\n     }, \n+    "types": {\n+      "@id": "http://localhost:55001/plone/folder/my-document/@types"\n+    }, \n     "workflow": {\n       "@id": "http://localhost:55001/plone/folder/my-document/@workflow"\n     }\ndiff --git a/src/plone/restapi/tests/http-examples/content_post.resp b/src/plone/restapi/tests/http-examples/content_post.resp\nindex 63b4140c..95d6e5ed 100644\n--- a/src/plone/restapi/tests/http-examples/content_post.resp\n+++ b/src/plone/restapi/tests/http-examples/content_post.resp\n@@ -13,6 +13,9 @@ Location: http://localhost:55001/plone/folder/my-document\n     "navigation": {\n       "@id": "http://localhost:55001/plone/folder/my-document/@navigation"\n     }, \n+    "types": {\n+      "@id": "http://localhost:55001/plone/folder/my-document/@types"\n+    }, \n     "workflow": {\n       "@id": "http://localhost:55001/plone/folder/my-document/@workflow"\n     }\ndiff --git a/src/plone/restapi/tests/http-examples/document.resp b/src/plone/restapi/tests/http-examples/document.resp\nindex 14009c36..feeca1b7 100644\n--- a/src/plone/restapi/tests/http-examples/document.resp\n+++ b/src/plone/restapi/tests/http-examples/document.resp\n@@ -12,6 +12,9 @@ Content-Type: application/json\n     "navigation": {\n       "@id": "http://localhost:55001/plone/front-page/@navigation"\n     }, \n+    "types": {\n+      "@id": "http://localhost:55001/plone/front-page/@types"\n+    }, \n     "workflow": {\n       "@id": "http://localhost:55001/plone/front-page/@workflow"\n     }\ndiff --git a/src/plone/restapi/tests/http-examples/event.resp b/src/plone/restapi/tests/http-examples/event.resp\nindex 759a3259..ead362ec 100644\n--- a/src/plone/restapi/tests/http-examples/event.resp\n+++ b/src/plone/restapi/tests/http-examples/event.resp\n@@ -12,6 +12,9 @@ Content-Type: application/json\n     "navigation": {\n       "@id": "http://localhost:55001/plone/event/@navigation"\n     }, \n+    "types": {\n+      "@id": "http://localhost:55001/plone/event/@types"\n+    }, \n     "workflow": {\n       "@id": "http://localhost:55001/plone/event/@workflow"\n     }\ndiff --git a/src/plone/restapi/tests/http-examples/expansion.resp b/src/plone/restapi/tests/http-examples/expansion.resp\nindex 14009c36..feeca1b7 100644\n--- a/src/plone/restapi/tests/http-examples/expansion.resp\n+++ b/src/plone/restapi/tests/http-examples/expansion.resp\n@@ -12,6 +12,9 @@ Content-Type: application/json\n     "navigation": {\n       "@id": "http://localhost:55001/plone/front-page/@navigation"\n     }, \n+    "types": {\n+      "@id": "http://localhost:55001/plone/front-page/@types"\n+    }, \n     "workflow": {\n       "@id": "http://localhost:55001/plone/front-page/@workflow"\n     }\ndiff --git a/src/plone/restapi/tests/http-examples/expansion_expanded.resp b/src/plone/restapi/tests/http-examples/expansion_expanded.resp\nindex 2881430a..1f2858c3 100644\n--- a/src/plone/restapi/tests/http-examples/expansion_expanded.resp\n+++ b/src/plone/restapi/tests/http-examples/expansion_expanded.resp\n@@ -18,6 +18,9 @@ Content-Type: application/json\n     "navigation": {\n       "@id": "http://localhost:55001/plone/front-page/@navigation"\n     }, \n+    "types": {\n+      "@id": "http://localhost:55001/plone/front-page/@types"\n+    }, \n     "workflow": {\n       "@id": "http://localhost:55001/plone/front-page/@workflow"\n     }\ndiff --git a/src/plone/restapi/tests/http-examples/expansion_expanded_full.req b/src/plone/restapi/tests/http-examples/expansion_expanded_full.req\nindex f0d7135f..10ab7185 100644\n--- a/src/plone/restapi/tests/http-examples/expansion_expanded_full.req\n+++ b/src/plone/restapi/tests/http-examples/expansion_expanded_full.req\n@@ -1,3 +1,3 @@\n-GET /plone/front-page?expand=actions,breadcrumbs,navigation,schema,workflow HTTP/1.1\n+GET /plone/front-page?expand=actions,breadcrumbs,navigation,workflow,types HTTP/1.1\n Accept: application/json\n Authorization: Basic YWRtaW46c2VjcmV0\ndiff --git a/src/plone/restapi/tests/http-examples/expansion_expanded_full.resp b/src/plone/restapi/tests/http-examples/expansion_expanded_full.resp\nindex 08ce461b..3a21c739 100644\n--- a/src/plone/restapi/tests/http-examples/expansion_expanded_full.resp\n+++ b/src/plone/restapi/tests/http-examples/expansion_expanded_full.resp\n@@ -125,6 +125,53 @@ Content-Type: application/json\n         }\n       ]\n     }, \n+    "types": [\n+      {\n+        "@id": "http://localhost:55001/plone/@types/Collection", \n+        "addable": false, \n+        "title": "Collection"\n+      }, \n+      {\n+        "@id": "http://localhost:55001/plone/@types/DXTestDocument", \n+        "addable": false, \n+        "title": "DX Test Document"\n+      }, \n+      {\n+        "@id": "http://localhost:55001/plone/@types/Event", \n+        "addable": false, \n+        "title": "Event"\n+      }, \n+      {\n+        "@id": "http://localhost:55001/plone/@types/File", \n+        "addable": false, \n+        "title": "File"\n+      }, \n+      {\n+        "@id": "http://localhost:55001/plone/@types/Folder", \n+        "addable": false, \n+        "title": "Folder"\n+      }, \n+      {\n+        "@id": "http://localhost:55001/plone/@types/Image", \n+        "addable": false, \n+        "title": "Image"\n+      }, \n+      {\n+        "@id": "http://localhost:55001/plone/@types/Link", \n+        "addable": false, \n+        "title": "Link"\n+      }, \n+      {\n+        "@id": "http://localhost:55001/plone/@types/News Item", \n+        "addable": false, \n+        "title": "News Item"\n+      }, \n+      {\n+        "@id": "http://localhost:55001/plone/@types/Document", \n+        "addable": false, \n+        "title": "Page"\n+      }\n+    ], \n     "workflow": {\n       "@id": "http://localhost:55001/plone/front-page/@workflow", \n       "history": [\ndiff --git a/src/plone/restapi/tests/http-examples/file.resp b/src/plone/restapi/tests/http-examples/file.resp\nindex b76c1f95..2c1db3ed 100644\n--- a/src/plone/restapi/tests/http-examples/file.resp\n+++ b/src/plone/restapi/tests/http-examples/file.resp\n@@ -12,6 +12,9 @@ Content-Type: application/json\n     "navigation": {\n       "@id": "http://localhost:55001/plone/file/@navigation"\n     }, \n+    "types": {\n+      "@id": "http://localhost:55001/plone/file/@types"\n+    }, \n     "workflow": {\n       "@id": "http://localhost:55001/plone/file/@workflow"\n     }\ndiff --git a/src/plone/restapi/tests/http-examples/folder.resp b/src/plone/restapi/tests/http-examples/folder.resp\nindex 2905c0a2..93656a16 100644\n--- a/src/plone/restapi/tests/http-examples/folder.resp\n+++ b/src/plone/restapi/tests/http-examples/folder.resp\n@@ -12,6 +12,9 @@ Content-Type: application/json\n     "navigation": {\n       "@id": "http://localhost:55001/plone/folder/@navigation"\n     }, \n+    "types": {\n+      "@id": "http://localhost:55001/plone/folder/@types"\n+    }, \n     "workflow": {\n       "@id": "http://localhost:55001/plone/folder/@workflow"\n     }\ndiff --git a/src/plone/restapi/tests/http-examples/image.resp b/src/plone/restapi/tests/http-examples/image.resp\nindex c2e1a516..5039415c 100644\n--- a/src/plone/restapi/tests/http-examples/image.resp\n+++ b/src/plone/restapi/tests/http-examples/image.resp\n@@ -12,6 +12,9 @@ Content-Type: application/json\n     "navigation": {\n       "@id": "http://localhost:55001/plone/image/@navigation"\n     }, \n+    "types": {\n+      "@id": "http://localhost:55001/plone/image/@types"\n+    }, \n     "workflow": {\n       "@id": "http://localhost:55001/plone/image/@workflow"\n     }\ndiff --git a/src/plone/restapi/tests/http-examples/link.resp b/src/plone/restapi/tests/http-examples/link.resp\nindex 0e3e74db..c20050e3 100644\n--- a/src/plone/restapi/tests/http-examples/link.resp\n+++ b/src/plone/restapi/tests/http-examples/link.resp\n@@ -12,6 +12,9 @@ Content-Type: application/json\n     "navigation": {\n       "@id": "http://localhost:55001/plone/link/@navigation"\n     }, \n+    "types": {\n+      "@id": "http://localhost:55001/plone/link/@types"\n+    }, \n     "workflow": {\n       "@id": "http://localhost:55001/plone/link/@workflow"\n     }\ndiff --git a/src/plone/restapi/tests/http-examples/newsitem.resp b/src/plone/restapi/tests/http-examples/newsitem.resp\nindex 235d894f..f9a0d0af 100644\n--- a/src/plone/restapi/tests/http-examples/newsitem.resp\n+++ b/src/plone/restapi/tests/http-examples/newsitem.resp\n@@ -12,6 +12,9 @@ Content-Type: application/json\n     "navigation": {\n       "@id": "http://localhost:55001/plone/newsitem/@navigation"\n     }, \n+    "types": {\n+      "@id": "http://localhost:55001/plone/newsitem/@types"\n+    }, \n     "workflow": {\n       "@id": "http://localhost:55001/plone/newsitem/@workflow"\n     }\ndiff --git a/src/plone/restapi/tests/http-examples/search_fullobjects.resp b/src/plone/restapi/tests/http-examples/search_fullobjects.resp\nindex aff87ad6..01a5d6d4 100644\n--- a/src/plone/restapi/tests/http-examples/search_fullobjects.resp\n+++ b/src/plone/restapi/tests/http-examples/search_fullobjects.resp\n@@ -15,6 +15,9 @@ Content-Type: application/json\n         "navigation": {\n           "@id": "http://localhost:55001/plone/doc1/@navigation"\n         }, \n+        "types": {\n+          "@id": "http://localhost:55001/plone/doc1/@types"\n+        }, \n         "workflow": {\n           "@id": "http://localhost:55001/plone/doc1/@workflow"\n         }\ndiff --git a/src/plone/restapi/tests/test_documentation.py b/src/plone/restapi/tests/test_documentation.py\nindex 52cf34a5..7e91c81e 100644\n--- a/src/plone/restapi/tests/test_documentation.py\n+++ b/src/plone/restapi/tests/test_documentation.py\n@@ -1090,7 +1090,7 @@ def test_documentation_expansion_expanded(self):\n \n     def test_documentation_expansion_expanded_full(self):\n         response = self.api_session.get(\n-            "/front-page?expand=actions,breadcrumbs,navigation,workflow"\n+            "/front-page?expand=actions,breadcrumbs,navigation,workflow,types"\n         )\n         save_request_and_response_for_docs("expansion_expanded_full", response)\n \ndiff --git a/src/plone/restapi/tests/test_expansion.py b/src/plone/restapi/tests/test_expansion.py\nindex 13274ab7..91190e36 100644\n--- a/src/plone/restapi/tests/test_expansion.py\n+++ b/src/plone/restapi/tests/test_expansion.py\n@@ -257,6 +257,53 @@ def test_workflow_expanded(self):\n             response.json()["@components"]["workflow"]["transitions"],\n         )\n \n+    def test_types_is_expandable(self):\n+        response = self.api_session.get("/folder")\n+\n+        self.assertEqual(response.status_code, 200)\n+        self.assertIn("types", list(response.json().get("@components")))\n+\n+    def test_types_expanded(self):\n+        response = self.api_session.get("/folder", params={"expand": "types"})\n+\n+        self.assertEqual(response.status_code, 200)\n+\n+        # XXX: Note: The @types endpoint currently doesn\'t conform to JSON-LD\n+        # because it\'s directly returning a list, and does not have an @id\n+        # property.\n+\n+        base_url = self.portal.absolute_url()\n+\n+        self.assertEqual([\n+            {u\'@id\': u\'/\'.join((base_url, \'@types/Collection\')),\n+             u\'addable\': True,\n+             u\'title\': u\'Collection\'},\n+            {u\'@id\': u\'/\'.join((base_url, \'@types/DXTestDocument\')),\n+             u\'addable\': True,\n+             u\'title\': u\'DX Test Document\'},\n+            {u\'@id\': u\'/\'.join((base_url, \'@types/Event\')),\n+             u\'addable\': True,\n+             u\'title\': u\'Event\'},\n+            {u\'@id\': u\'/\'.join((base_url, \'@types/File\')),\n+             u\'addable\': True,\n+             u\'title\': u\'File\'},\n+            {u\'@id\': u\'/\'.join((base_url, \'@types/Folder\')),\n+             u\'addable\': True,\n+             u\'title\': u\'Folder\'},\n+            {u\'@id\': u\'/\'.join((base_url, \'@types/Image\')),\n+             u\'addable\': True,\n+             u\'title\': u\'Image\'},\n+            {u\'@id\': u\'/\'.join((base_url, \'@types/Link\')),\n+             u\'addable\': True,\n+             u\'title\': u\'Link\'},\n+            {u\'@id\': u\'/\'.join((base_url, \'@types/News Item\')),\n+             u\'addable\': True,\n+             u\'title\': u\'News Item\'},\n+            {u\'@id\': u\'/\'.join((base_url, \'@types/Document\')),\n+             u\'addable\': True,\n+             u\'title\': u\'Page\'}],\n+            response.json().get("@components").get("types"))\n+\n \n @unittest.skipUnless(\n     PAM_INSTALLED, "plone.app.multilingual is installed by default only in Plone 5"\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2019-06-22T21:51:40+02:00
Author: Lukas Graf (lukasgraf) <lukas.graf@4teamwork.ch>
Commit: https://github.com/plone/plone.restapi/commit/e9305122033dce90469c1093073aee33206d7d77

Docs: Remove redundant expansion example response.

Files changed:
M docs/source/expansion.rst

b'diff --git a/docs/source/expansion.rst b/docs/source/expansion.rst\nindex 5c0b2111..ac2958d7 100644\n--- a/docs/source/expansion.rst\n+++ b/docs/source/expansion.rst\n@@ -35,61 +35,25 @@ in the reponse of any content GET request::\n     ...\n   }\n \n-Request Unexpanded:\n+Request (unexpanded):\n \n ..  http:example:: curl httpie python-requests\n     :request: ../../src/plone/restapi/tests/http-examples/expansion.req\n \n-Response Unexpanded:\n+Response (unexpanded):\n \n .. literalinclude:: ../../src/plone/restapi/tests/http-examples/expansion.resp\n    :language: http\n \n-In order to expand and embed one or more components, use the "expand" GET\n+In order to expand and embed one or more components, use the ``expand`` GET\n parameter and provide either a single component or a comma-separated list\n-of the components you want to embed. Say you want to expand the "breadcrumbs"\n-component::\n-\n-  GET /plone/front-page?expand=breadcrumbs HTTP/1.1\n-  Accept: application/json\n-  Authorization: Basic YWRtaW46c2VjcmV0\n-\n-  {\n-    "@id": "http://localhost:55001/plone/front-page",\n-    "@type": "Document",\n-    "@components": {\n-      "actions": {\n-        "@id": "http://localhost:55001/plone/front-page/@actions"\n-      },\n-      "breadcrumbs": {\n-        "@id": "http://localhost:55001/plone/front-page/@components/breadcrumbs",\n-        "items": [\n-          {\n-            "title": "Welcome to Plone",\n-            "url": "http://localhost:55001/plone/front-page"\n-          }\n-        ]\n-      },\n-      "navigation": {\n-        "@id": "http://localhost:55001/plone/front-page/@navigation"\n-      },\n-      "schema": {\n-        "@id": "http://localhost:55001/plone/front-page/@schema"\n-      },\n-      "workflow": {\n-        "@id": http://localhost:55001/plone/front-page/@workflow"\n-      },\n-    },\n-    "UID": "1f699ffa110e45afb1ba502f75f7ec33",\n-    "title": "Welcome to Plone"\n-  }\n-\n-Request Expanded:\n+of the components you want to embed. Say you want to expand the ``breadcrumbs``\n+component:\n \n ..  http:example:: curl httpie python-requests\n     :request: ../../src/plone/restapi/tests/http-examples/expansion_expanded.req\n \n-Response Expanded:\n+Response (breadcrumbs expanded):\n \n .. literalinclude:: ../../src/plone/restapi/tests/http-examples/expansion_expanded.resp\n    :language: http\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2019-06-29T10:31:16+02:00
Author: Timo Stollenwerk (tisto) <tisto@users.noreply.github.com>
Commit: https://github.com/plone/plone.restapi/commit/579afe56cdbb740aa1153cc512973c1b2ea405ed

Merge pull request #768 from plone/expandable-types-endpoint

Make @types endpoint expandable.

Files changed:
A news/766.feature
M docs/source/expansion.rst
M src/plone/restapi/services/types/configure.zcml
M src/plone/restapi/services/types/get.py
M src/plone/restapi/tests/http-examples/collection.resp
M src/plone/restapi/tests/http-examples/content_get.resp
M src/plone/restapi/tests/http-examples/content_patch_representation.resp
M src/plone/restapi/tests/http-examples/content_post.resp
M src/plone/restapi/tests/http-examples/document.resp
M src/plone/restapi/tests/http-examples/event.resp
M src/plone/restapi/tests/http-examples/expansion.resp
M src/plone/restapi/tests/http-examples/expansion_expanded.resp
M src/plone/restapi/tests/http-examples/expansion_expanded_full.req
M src/plone/restapi/tests/http-examples/expansion_expanded_full.resp
M src/plone/restapi/tests/http-examples/file.resp
M src/plone/restapi/tests/http-examples/folder.resp
M src/plone/restapi/tests/http-examples/image.resp
M src/plone/restapi/tests/http-examples/link.resp
M src/plone/restapi/tests/http-examples/newsitem.resp
M src/plone/restapi/tests/http-examples/search_fullobjects.resp
M src/plone/restapi/tests/test_documentation.py
M src/plone/restapi/tests/test_expansion.py

b'diff --git a/docs/source/expansion.rst b/docs/source/expansion.rst\nindex c56b7dfb..ac2958d7 100644\n--- a/docs/source/expansion.rst\n+++ b/docs/source/expansion.rst\n@@ -26,7 +26,7 @@ in the reponse of any content GET request::\n         {"@id": "http://localhost:55001/plone/front-page/@actions"},\n         {"@id": "http://localhost:55001/plone/front-page/@breadcrumbs"},\n         {"@id": "http://localhost:55001/plone/front-page/@navigation"},\n-        {"@id": "http://localhost:55001/plone/front-page/@schema"},\n+        {"@id": "http://localhost:55001/plone/front-page/@types"},\n         {"@id": "http://localhost:55001/plone/front-page/@workflow"},\n         ...\n     },\n@@ -35,61 +35,25 @@ in the reponse of any content GET request::\n     ...\n   }\n \n-Request Unexpanded:\n+Request (unexpanded):\n \n ..  http:example:: curl httpie python-requests\n     :request: ../../src/plone/restapi/tests/http-examples/expansion.req\n \n-Response Unexpanded:\n+Response (unexpanded):\n \n .. literalinclude:: ../../src/plone/restapi/tests/http-examples/expansion.resp\n    :language: http\n \n-In order to expand and embed one or more components, use the "expand" GET\n+In order to expand and embed one or more components, use the ``expand`` GET\n parameter and provide either a single component or a comma-separated list\n-of the components you want to embed. Say you want to expand the "breadcrumbs"\n-component::\n-\n-  GET /plone/front-page?expand=breadcrumbs HTTP/1.1\n-  Accept: application/json\n-  Authorization: Basic YWRtaW46c2VjcmV0\n-\n-  {\n-    "@id": "http://localhost:55001/plone/front-page",\n-    "@type": "Document",\n-    "@components": {\n-      "actions": {\n-        "@id": "http://localhost:55001/plone/front-page/@actions"\n-      },\n-      "breadcrumbs": {\n-        "@id": "http://localhost:55001/plone/front-page/@components/breadcrumbs",\n-        "items": [\n-          {\n-            "title": "Welcome to Plone",\n-            "url": "http://localhost:55001/plone/front-page"\n-          }\n-        ]\n-      },\n-      "navigation": {\n-        "@id": "http://localhost:55001/plone/front-page/@navigation"\n-      },\n-      "schema": {\n-        "@id": "http://localhost:55001/plone/front-page/@schema"\n-      },\n-      "workflow": {\n-        "@id": http://localhost:55001/plone/front-page/@workflow"\n-      },\n-    },\n-    "UID": "1f699ffa110e45afb1ba502f75f7ec33",\n-    "title": "Welcome to Plone"\n-  }\n-\n-Request Expanded:\n+of the components you want to embed. Say you want to expand the ``breadcrumbs``\n+component:\n \n ..  http:example:: curl httpie python-requests\n     :request: ../../src/plone/restapi/tests/http-examples/expansion_expanded.req\n \n-Response Expanded:\n+Response (breadcrumbs expanded):\n \n .. literalinclude:: ../../src/plone/restapi/tests/http-examples/expansion_expanded.resp\n    :language: http\ndiff --git a/news/766.feature b/news/766.feature\nnew file mode 100644\nindex 00000000..40e0a073\n--- /dev/null\n+++ b/news/766.feature\n@@ -0,0 +1,2 @@\n+Make @types endpoint expandable.\n+[lgraf]\ndiff --git a/src/plone/restapi/services/types/configure.zcml b/src/plone/restapi/services/types/configure.zcml\nindex 8354ec33..8d2de276 100644\n--- a/src/plone/restapi/services/types/configure.zcml\n+++ b/src/plone/restapi/services/types/configure.zcml\n@@ -11,4 +11,6 @@\n     permission="zope2.View"\n     />\n \n+  <adapter factory=".get.TypesInfo" name="types"/>\n+\n </configure>\ndiff --git a/src/plone/restapi/services/types/get.py b/src/plone/restapi/services/types/get.py\nindex 495a482d..dc392cf4 100644\n--- a/src/plone/restapi/services/types/get.py\n+++ b/src/plone/restapi/services/types/get.py\n@@ -1,17 +1,80 @@\n # -*- coding: utf-8 -*-\n+from plone.dexterity.interfaces import IDexterityContent\n+from plone.restapi.interfaces import IExpandableElement\n from plone.restapi.services import Service\n from plone.restapi.types.utils import get_jsonschema_for_portal_type\n from Products.CMFCore.interfaces import IFolderish\n from Products.CMFCore.utils import getToolByName\n from zExceptions import Unauthorized\n+from zope.component import adapter\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n from zope.i18n import translate\n from zope.interface import implementer\n+from zope.interface import Interface\n from zope.publisher.interfaces import IPublishTraverse\n from zope.schema.interfaces import IVocabularyFactory\n \n \n+def check_security(context):\n+    # Only expose type information to authenticated users\n+    portal_membership = getToolByName(context, "portal_membership")\n+    if portal_membership.isAnonymousUser():\n+        raise Unauthorized\n+\n+\n+@implementer(IExpandableElement)\n+@adapter(IDexterityContent, Interface)\n+class TypesInfo(object):\n+\n+    def __init__(self, context, request):\n+        self.context = context\n+        self.request = request\n+\n+    def __call__(self, expand=False):\n+        result = {\n+            "types": {"@id": "{}/@types".format(self.context.absolute_url())}\n+        }\n+        if not expand:\n+            return result\n+\n+        check_security(self.context)\n+\n+        vocab_factory = getUtility(\n+            IVocabularyFactory, name="plone.app.vocabularies.ReallyUserFriendlyTypes"\n+        )\n+\n+        portal_types = getToolByName(self.context, "portal_types")\n+\n+        # allowedContentTypes already checks for permissions\n+        allowed_types = [x.getId() for x in self.context.allowedContentTypes()]\n+\n+        portal = getMultiAdapter(\n+            (self.context, self.request), name="plone_portal_state"\n+        ).portal()\n+        portal_url = portal.absolute_url()\n+\n+        # only addables if the content type is folderish\n+        can_add = IFolderish.providedBy(self.context)\n+\n+        # Filter out any type that doesn\'t have lookupSchema. We are depended\n+        # on that in lower level code.\n+        ftis = [portal_types[x.value] for x in vocab_factory(self.context)]\n+        ftis = [fti for fti in ftis if getattr(fti, "lookupSchema", None)]\n+\n+        result[\'types\'] = [\n+            {\n+                "@id": "{}/@types/{}".format(portal_url, fti.getId()),\n+                "title": translate(fti.Title(), context=self.request),\n+                "addable": fti.getId() in allowed_types if can_add else False,\n+            }\n+            for fti in ftis\n+        ]\n+\n+        return result\n+\n+\n+# @implementer(IExpandableElement)\n @implementer(IPublishTraverse)\n class TypesGet(Service):\n     def __init__(self, context, request):\n@@ -33,16 +96,10 @@ def _get_record_name(self):\n \n         return self.params[0]\n \n-    def check_security(self):\n-        # Only expose type information to authenticated users\n-        portal_membership = getToolByName(self.context, "portal_membership")\n-        if portal_membership.isAnonymousUser():\n-            raise Unauthorized\n-\n     def reply(self):\n-        self.check_security()\n-\n         if self.params and len(self.params) > 0:\n+            # Return schema for a specific type\n+            check_security(self.context)\n             self.content_type = "application/json+schema"\n             try:\n                 portal_type = self.params.pop()\n@@ -56,33 +113,7 @@ def reply(self):\n                     "type": "NotFound",\n                     "message": \'Type "{}" could not be found.\'.format(portal_type),\n                 }\n-        vocab_factory = getUtility(\n-            IVocabularyFactory, name="plone.app.vocabularies.ReallyUserFriendlyTypes"\n-        )\n-\n-        portal_types = getToolByName(self.context, "portal_types")\n-\n-        # allowedContentTypes already checks for permissions\n-        allowed_types = [x.getId() for x in self.context.allowedContentTypes()]\n-\n-        portal = getMultiAdapter(\n-            (self.context, self.request), name="plone_portal_state"\n-        ).portal()\n-        portal_url = portal.absolute_url()\n-\n-        # only addables if the content type is folderish\n-        can_add = IFolderish.providedBy(self.context)\n \n-        # Filter out any type that doesn\'t have lookupSchema. We are depended\n-        # on that in lower level code.\n-        ftis = [portal_types[x.value] for x in vocab_factory(self.context)]\n-        ftis = [fti for fti in ftis if getattr(fti, "lookupSchema", None)]\n-\n-        return [\n-            {\n-                "@id": "{}/@types/{}".format(portal_url, fti.getId()),\n-                "title": translate(fti.Title(), context=self.request),\n-                "addable": fti.getId() in allowed_types if can_add else False,\n-            }\n-            for fti in ftis\n-        ]\n+        # List type info, including addable_types\n+        info = TypesInfo(self.context, self.request)\n+        return info(expand=True)["types"]\ndiff --git a/src/plone/restapi/tests/http-examples/collection.resp b/src/plone/restapi/tests/http-examples/collection.resp\nindex 7421a1c3..9d950dac 100644\n--- a/src/plone/restapi/tests/http-examples/collection.resp\n+++ b/src/plone/restapi/tests/http-examples/collection.resp\n@@ -12,6 +12,9 @@ Content-Type: application/json\n     "navigation": {\n       "@id": "http://localhost:55001/plone/collection/@navigation"\n     }, \n+    "types": {\n+      "@id": "http://localhost:55001/plone/collection/@types"\n+    }, \n     "workflow": {\n       "@id": "http://localhost:55001/plone/collection/@workflow"\n     }\ndiff --git a/src/plone/restapi/tests/http-examples/content_get.resp b/src/plone/restapi/tests/http-examples/content_get.resp\nindex 3cee3662..fb30f741 100644\n--- a/src/plone/restapi/tests/http-examples/content_get.resp\n+++ b/src/plone/restapi/tests/http-examples/content_get.resp\n@@ -12,6 +12,9 @@ Content-Type: application/json\n     "navigation": {\n       "@id": "http://localhost:55001/plone/folder/my-document/@navigation"\n     }, \n+    "types": {\n+      "@id": "http://localhost:55001/plone/folder/my-document/@types"\n+    }, \n     "workflow": {\n       "@id": "http://localhost:55001/plone/folder/my-document/@workflow"\n     }\ndiff --git a/src/plone/restapi/tests/http-examples/content_patch_representation.resp b/src/plone/restapi/tests/http-examples/content_patch_representation.resp\nindex 7596044f..e738c14a 100644\n--- a/src/plone/restapi/tests/http-examples/content_patch_representation.resp\n+++ b/src/plone/restapi/tests/http-examples/content_patch_representation.resp\n@@ -12,6 +12,9 @@ Content-Type: application/json\n     "navigation": {\n       "@id": "http://localhost:55001/plone/folder/my-document/@navigation"\n     }, \n+    "types": {\n+      "@id": "http://localhost:55001/plone/folder/my-document/@types"\n+    }, \n     "workflow": {\n       "@id": "http://localhost:55001/plone/folder/my-document/@workflow"\n     }\ndiff --git a/src/plone/restapi/tests/http-examples/content_post.resp b/src/plone/restapi/tests/http-examples/content_post.resp\nindex 63b4140c..95d6e5ed 100644\n--- a/src/plone/restapi/tests/http-examples/content_post.resp\n+++ b/src/plone/restapi/tests/http-examples/content_post.resp\n@@ -13,6 +13,9 @@ Location: http://localhost:55001/plone/folder/my-document\n     "navigation": {\n       "@id": "http://localhost:55001/plone/folder/my-document/@navigation"\n     }, \n+    "types": {\n+      "@id": "http://localhost:55001/plone/folder/my-document/@types"\n+    }, \n     "workflow": {\n       "@id": "http://localhost:55001/plone/folder/my-document/@workflow"\n     }\ndiff --git a/src/plone/restapi/tests/http-examples/document.resp b/src/plone/restapi/tests/http-examples/document.resp\nindex 14009c36..feeca1b7 100644\n--- a/src/plone/restapi/tests/http-examples/document.resp\n+++ b/src/plone/restapi/tests/http-examples/document.resp\n@@ -12,6 +12,9 @@ Content-Type: application/json\n     "navigation": {\n       "@id": "http://localhost:55001/plone/front-page/@navigation"\n     }, \n+    "types": {\n+      "@id": "http://localhost:55001/plone/front-page/@types"\n+    }, \n     "workflow": {\n       "@id": "http://localhost:55001/plone/front-page/@workflow"\n     }\ndiff --git a/src/plone/restapi/tests/http-examples/event.resp b/src/plone/restapi/tests/http-examples/event.resp\nindex 759a3259..ead362ec 100644\n--- a/src/plone/restapi/tests/http-examples/event.resp\n+++ b/src/plone/restapi/tests/http-examples/event.resp\n@@ -12,6 +12,9 @@ Content-Type: application/json\n     "navigation": {\n       "@id": "http://localhost:55001/plone/event/@navigation"\n     }, \n+    "types": {\n+      "@id": "http://localhost:55001/plone/event/@types"\n+    }, \n     "workflow": {\n       "@id": "http://localhost:55001/plone/event/@workflow"\n     }\ndiff --git a/src/plone/restapi/tests/http-examples/expansion.resp b/src/plone/restapi/tests/http-examples/expansion.resp\nindex 14009c36..feeca1b7 100644\n--- a/src/plone/restapi/tests/http-examples/expansion.resp\n+++ b/src/plone/restapi/tests/http-examples/expansion.resp\n@@ -12,6 +12,9 @@ Content-Type: application/json\n     "navigation": {\n       "@id": "http://localhost:55001/plone/front-page/@navigation"\n     }, \n+    "types": {\n+      "@id": "http://localhost:55001/plone/front-page/@types"\n+    }, \n     "workflow": {\n       "@id": "http://localhost:55001/plone/front-page/@workflow"\n     }\ndiff --git a/src/plone/restapi/tests/http-examples/expansion_expanded.resp b/src/plone/restapi/tests/http-examples/expansion_expanded.resp\nindex 2881430a..1f2858c3 100644\n--- a/src/plone/restapi/tests/http-examples/expansion_expanded.resp\n+++ b/src/plone/restapi/tests/http-examples/expansion_expanded.resp\n@@ -18,6 +18,9 @@ Content-Type: application/json\n     "navigation": {\n       "@id": "http://localhost:55001/plone/front-page/@navigation"\n     }, \n+    "types": {\n+      "@id": "http://localhost:55001/plone/front-page/@types"\n+    }, \n     "workflow": {\n       "@id": "http://localhost:55001/plone/front-page/@workflow"\n     }\ndiff --git a/src/plone/restapi/tests/http-examples/expansion_expanded_full.req b/src/plone/restapi/tests/http-examples/expansion_expanded_full.req\nindex f0d7135f..10ab7185 100644\n--- a/src/plone/restapi/tests/http-examples/expansion_expanded_full.req\n+++ b/src/plone/restapi/tests/http-examples/expansion_expanded_full.req\n@@ -1,3 +1,3 @@\n-GET /plone/front-page?expand=actions,breadcrumbs,navigation,schema,workflow HTTP/1.1\n+GET /plone/front-page?expand=actions,breadcrumbs,navigation,workflow,types HTTP/1.1\n Accept: application/json\n Authorization: Basic YWRtaW46c2VjcmV0\ndiff --git a/src/plone/restapi/tests/http-examples/expansion_expanded_full.resp b/src/plone/restapi/tests/http-examples/expansion_expanded_full.resp\nindex 08ce461b..3a21c739 100644\n--- a/src/plone/restapi/tests/http-examples/expansion_expanded_full.resp\n+++ b/src/plone/restapi/tests/http-examples/expansion_expanded_full.resp\n@@ -125,6 +125,53 @@ Content-Type: application/json\n         }\n       ]\n     }, \n+    "types": [\n+      {\n+        "@id": "http://localhost:55001/plone/@types/Collection", \n+        "addable": false, \n+        "title": "Collection"\n+      }, \n+      {\n+        "@id": "http://localhost:55001/plone/@types/DXTestDocument", \n+        "addable": false, \n+        "title": "DX Test Document"\n+      }, \n+      {\n+        "@id": "http://localhost:55001/plone/@types/Event", \n+        "addable": false, \n+        "title": "Event"\n+      }, \n+      {\n+        "@id": "http://localhost:55001/plone/@types/File", \n+        "addable": false, \n+        "title": "File"\n+      }, \n+      {\n+        "@id": "http://localhost:55001/plone/@types/Folder", \n+        "addable": false, \n+        "title": "Folder"\n+      }, \n+      {\n+        "@id": "http://localhost:55001/plone/@types/Image", \n+        "addable": false, \n+        "title": "Image"\n+      }, \n+      {\n+        "@id": "http://localhost:55001/plone/@types/Link", \n+        "addable": false, \n+        "title": "Link"\n+      }, \n+      {\n+        "@id": "http://localhost:55001/plone/@types/News Item", \n+        "addable": false, \n+        "title": "News Item"\n+      }, \n+      {\n+        "@id": "http://localhost:55001/plone/@types/Document", \n+        "addable": false, \n+        "title": "Page"\n+      }\n+    ], \n     "workflow": {\n       "@id": "http://localhost:55001/plone/front-page/@workflow", \n       "history": [\ndiff --git a/src/plone/restapi/tests/http-examples/file.resp b/src/plone/restapi/tests/http-examples/file.resp\nindex b76c1f95..2c1db3ed 100644\n--- a/src/plone/restapi/tests/http-examples/file.resp\n+++ b/src/plone/restapi/tests/http-examples/file.resp\n@@ -12,6 +12,9 @@ Content-Type: application/json\n     "navigation": {\n       "@id": "http://localhost:55001/plone/file/@navigation"\n     }, \n+    "types": {\n+      "@id": "http://localhost:55001/plone/file/@types"\n+    }, \n     "workflow": {\n       "@id": "http://localhost:55001/plone/file/@workflow"\n     }\ndiff --git a/src/plone/restapi/tests/http-examples/folder.resp b/src/plone/restapi/tests/http-examples/folder.resp\nindex 2905c0a2..93656a16 100644\n--- a/src/plone/restapi/tests/http-examples/folder.resp\n+++ b/src/plone/restapi/tests/http-examples/folder.resp\n@@ -12,6 +12,9 @@ Content-Type: application/json\n     "navigation": {\n       "@id": "http://localhost:55001/plone/folder/@navigation"\n     }, \n+    "types": {\n+      "@id": "http://localhost:55001/plone/folder/@types"\n+    }, \n     "workflow": {\n       "@id": "http://localhost:55001/plone/folder/@workflow"\n     }\ndiff --git a/src/plone/restapi/tests/http-examples/image.resp b/src/plone/restapi/tests/http-examples/image.resp\nindex c2e1a516..5039415c 100644\n--- a/src/plone/restapi/tests/http-examples/image.resp\n+++ b/src/plone/restapi/tests/http-examples/image.resp\n@@ -12,6 +12,9 @@ Content-Type: application/json\n     "navigation": {\n       "@id": "http://localhost:55001/plone/image/@navigation"\n     }, \n+    "types": {\n+      "@id": "http://localhost:55001/plone/image/@types"\n+    }, \n     "workflow": {\n       "@id": "http://localhost:55001/plone/image/@workflow"\n     }\ndiff --git a/src/plone/restapi/tests/http-examples/link.resp b/src/plone/restapi/tests/http-examples/link.resp\nindex 0e3e74db..c20050e3 100644\n--- a/src/plone/restapi/tests/http-examples/link.resp\n+++ b/src/plone/restapi/tests/http-examples/link.resp\n@@ -12,6 +12,9 @@ Content-Type: application/json\n     "navigation": {\n       "@id": "http://localhost:55001/plone/link/@navigation"\n     }, \n+    "types": {\n+      "@id": "http://localhost:55001/plone/link/@types"\n+    }, \n     "workflow": {\n       "@id": "http://localhost:55001/plone/link/@workflow"\n     }\ndiff --git a/src/plone/restapi/tests/http-examples/newsitem.resp b/src/plone/restapi/tests/http-examples/newsitem.resp\nindex 235d894f..f9a0d0af 100644\n--- a/src/plone/restapi/tests/http-examples/newsitem.resp\n+++ b/src/plone/restapi/tests/http-examples/newsitem.resp\n@@ -12,6 +12,9 @@ Content-Type: application/json\n     "navigation": {\n       "@id": "http://localhost:55001/plone/newsitem/@navigation"\n     }, \n+    "types": {\n+      "@id": "http://localhost:55001/plone/newsitem/@types"\n+    }, \n     "workflow": {\n       "@id": "http://localhost:55001/plone/newsitem/@workflow"\n     }\ndiff --git a/src/plone/restapi/tests/http-examples/search_fullobjects.resp b/src/plone/restapi/tests/http-examples/search_fullobjects.resp\nindex aff87ad6..01a5d6d4 100644\n--- a/src/plone/restapi/tests/http-examples/search_fullobjects.resp\n+++ b/src/plone/restapi/tests/http-examples/search_fullobjects.resp\n@@ -15,6 +15,9 @@ Content-Type: application/json\n         "navigation": {\n           "@id": "http://localhost:55001/plone/doc1/@navigation"\n         }, \n+        "types": {\n+          "@id": "http://localhost:55001/plone/doc1/@types"\n+        }, \n         "workflow": {\n           "@id": "http://localhost:55001/plone/doc1/@workflow"\n         }\ndiff --git a/src/plone/restapi/tests/test_documentation.py b/src/plone/restapi/tests/test_documentation.py\nindex a9bda9ff..7e91c81e 100644\n--- a/src/plone/restapi/tests/test_documentation.py\n+++ b/src/plone/restapi/tests/test_documentation.py\n@@ -1090,7 +1090,7 @@ def test_documentation_expansion_expanded(self):\n \n     def test_documentation_expansion_expanded_full(self):\n         response = self.api_session.get(\n-            "/front-page?expand=actions,breadcrumbs,navigation,schema,workflow"\n+            "/front-page?expand=actions,breadcrumbs,navigation,workflow,types"\n         )\n         save_request_and_response_for_docs("expansion_expanded_full", response)\n \ndiff --git a/src/plone/restapi/tests/test_expansion.py b/src/plone/restapi/tests/test_expansion.py\nindex 13274ab7..91190e36 100644\n--- a/src/plone/restapi/tests/test_expansion.py\n+++ b/src/plone/restapi/tests/test_expansion.py\n@@ -257,6 +257,53 @@ def test_workflow_expanded(self):\n             response.json()["@components"]["workflow"]["transitions"],\n         )\n \n+    def test_types_is_expandable(self):\n+        response = self.api_session.get("/folder")\n+\n+        self.assertEqual(response.status_code, 200)\n+        self.assertIn("types", list(response.json().get("@components")))\n+\n+    def test_types_expanded(self):\n+        response = self.api_session.get("/folder", params={"expand": "types"})\n+\n+        self.assertEqual(response.status_code, 200)\n+\n+        # XXX: Note: The @types endpoint currently doesn\'t conform to JSON-LD\n+        # because it\'s directly returning a list, and does not have an @id\n+        # property.\n+\n+        base_url = self.portal.absolute_url()\n+\n+        self.assertEqual([\n+            {u\'@id\': u\'/\'.join((base_url, \'@types/Collection\')),\n+             u\'addable\': True,\n+             u\'title\': u\'Collection\'},\n+            {u\'@id\': u\'/\'.join((base_url, \'@types/DXTestDocument\')),\n+             u\'addable\': True,\n+             u\'title\': u\'DX Test Document\'},\n+            {u\'@id\': u\'/\'.join((base_url, \'@types/Event\')),\n+             u\'addable\': True,\n+             u\'title\': u\'Event\'},\n+            {u\'@id\': u\'/\'.join((base_url, \'@types/File\')),\n+             u\'addable\': True,\n+             u\'title\': u\'File\'},\n+            {u\'@id\': u\'/\'.join((base_url, \'@types/Folder\')),\n+             u\'addable\': True,\n+             u\'title\': u\'Folder\'},\n+            {u\'@id\': u\'/\'.join((base_url, \'@types/Image\')),\n+             u\'addable\': True,\n+             u\'title\': u\'Image\'},\n+            {u\'@id\': u\'/\'.join((base_url, \'@types/Link\')),\n+             u\'addable\': True,\n+             u\'title\': u\'Link\'},\n+            {u\'@id\': u\'/\'.join((base_url, \'@types/News Item\')),\n+             u\'addable\': True,\n+             u\'title\': u\'News Item\'},\n+            {u\'@id\': u\'/\'.join((base_url, \'@types/Document\')),\n+             u\'addable\': True,\n+             u\'title\': u\'Page\'}],\n+            response.json().get("@components").get("types"))\n+\n \n @unittest.skipUnless(\n     PAM_INSTALLED, "plone.app.multilingual is installed by default only in Plone 5"\n'

