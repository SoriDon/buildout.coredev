Repository: plone.api


Branch: refs/heads/master
Date: 2021-09-28T16:20:20+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.api/commit/c8c260df719fc349a5af25821de22932f037aeb1

Fixed IndexError when calling set_registry_record with wrong value.

Fixes https://github.com/plone/plone.api/issues/435 for master

Files changed:
A news/435.bugfix
M src/plone/api/portal.py
M src/plone/api/tests/test_portal.py

b'diff --git a/news/435.bugfix b/news/435.bugfix\nnew file mode 100644\nindex 0000000..2bdb127\n--- /dev/null\n+++ b/news/435.bugfix\n@@ -0,0 +1,2 @@\n+Fixed IndexError when calling set_registry_record with wrong value.\n+[maurits]\ndiff --git a/src/plone/api/portal.py b/src/plone/api/portal.py\nindex 7a95113..49b9127 100644\n--- a/src/plone/api/portal.py\n+++ b/src/plone/api/portal.py\n@@ -354,11 +354,11 @@ def set_registry_record(name=None, value=None, interface=None):\n         try:\n             registry[interface.__identifier__ + \'.\' + name] = value\n         except WrongType:\n-            field_type = [\n-                field[1]\n-                for field in interface.namesAndDescriptions()\n-                if field[0] == \'field_one\'\n-            ][0]\n+            field_type = None\n+            for field in interface.namesAndDescriptions():\n+                if field[0] == name:\n+                    field_type = field[1]\n+                    break\n             raise InvalidParameterError(\n                 \'The value parameter for the field {name} needs to be \'\n                 \'{of_class} instead of {of_type}\'.format(\ndiff --git a/src/plone/api/tests/test_portal.py b/src/plone/api/tests/test_portal.py\nindex 998aeed..595366d 100644\n--- a/src/plone/api/tests/test_portal.py\n+++ b/src/plone/api/tests/test_portal.py\n@@ -49,6 +49,14 @@ class IMyRegistrySettings(Interface):\n     )\n \n \n+class IMyOtherRegistrySettings(Interface):\n+\n+    field_three = schema.TextLine(\n+        title=\'something\',\n+        description=\'something else\',\n+    )\n+\n+\n class ImNotAnInterface:\n     pass\n \n@@ -711,6 +719,29 @@ def test_set_registry_record_from_interface(self):\n             text,\n         )\n \n+    def test_set_registry_record_with_invalid_value(self):\n+        """Test setting an invalid value on a record from an interface.\n+\n+        This should give an invalid parameter error.\n+        See also https://github.com/plone/plone.api/issues/435\n+        and duplicate: https://github.com/plone/plone.api/issues/464\n+        """\n+        from plone.api.exc import InvalidParameterError\n+        registry = getUtility(IRegistry)\n+        registry.registerInterface(IMyOtherRegistrySettings)\n+        with self.assertRaises(InvalidParameterError) as cm:\n+            portal.set_registry_record(\n+                \'field_three\',\n+                42,\n+                interface=IMyOtherRegistrySettings,\n+            )\n+        exc_str = str(cm.exception)\n+\n+        self.assertIn(\n+            "The value parameter for the field field_three", exc_str\n+        )\n+        self.assertIn("TextLine", exc_str)\n+\n     def test_set_registry_record_on_invalid_interface(self):\n         """Test that passing an invalid interface raises an Exception."""\n         from plone.api.exc import InvalidParameterError\n'

Repository: plone.api


Branch: refs/heads/master
Date: 2021-09-29T14:29:46+02:00
Author: Maurits van Rees (mauritsvanrees) <m.van.rees@zestsoftware.nl>
Commit: https://github.com/plone/plone.api/commit/b54bbad976ee4b8bcb0b6571ca6c8cb88c50e9a5

Merge pull request #466 from plone/maurits/issue-435-set-registry-record-master

Fixed IndexError when calling set_registry_record with wrong value. [master]

Files changed:
A news/435.bugfix
M src/plone/api/portal.py
M src/plone/api/tests/test_portal.py

b'diff --git a/news/435.bugfix b/news/435.bugfix\nnew file mode 100644\nindex 0000000..2bdb127\n--- /dev/null\n+++ b/news/435.bugfix\n@@ -0,0 +1,2 @@\n+Fixed IndexError when calling set_registry_record with wrong value.\n+[maurits]\ndiff --git a/src/plone/api/portal.py b/src/plone/api/portal.py\nindex 7a95113..49b9127 100644\n--- a/src/plone/api/portal.py\n+++ b/src/plone/api/portal.py\n@@ -354,11 +354,11 @@ def set_registry_record(name=None, value=None, interface=None):\n         try:\n             registry[interface.__identifier__ + \'.\' + name] = value\n         except WrongType:\n-            field_type = [\n-                field[1]\n-                for field in interface.namesAndDescriptions()\n-                if field[0] == \'field_one\'\n-            ][0]\n+            field_type = None\n+            for field in interface.namesAndDescriptions():\n+                if field[0] == name:\n+                    field_type = field[1]\n+                    break\n             raise InvalidParameterError(\n                 \'The value parameter for the field {name} needs to be \'\n                 \'{of_class} instead of {of_type}\'.format(\ndiff --git a/src/plone/api/tests/test_portal.py b/src/plone/api/tests/test_portal.py\nindex 998aeed..595366d 100644\n--- a/src/plone/api/tests/test_portal.py\n+++ b/src/plone/api/tests/test_portal.py\n@@ -49,6 +49,14 @@ class IMyRegistrySettings(Interface):\n     )\n \n \n+class IMyOtherRegistrySettings(Interface):\n+\n+    field_three = schema.TextLine(\n+        title=\'something\',\n+        description=\'something else\',\n+    )\n+\n+\n class ImNotAnInterface:\n     pass\n \n@@ -711,6 +719,29 @@ def test_set_registry_record_from_interface(self):\n             text,\n         )\n \n+    def test_set_registry_record_with_invalid_value(self):\n+        """Test setting an invalid value on a record from an interface.\n+\n+        This should give an invalid parameter error.\n+        See also https://github.com/plone/plone.api/issues/435\n+        and duplicate: https://github.com/plone/plone.api/issues/464\n+        """\n+        from plone.api.exc import InvalidParameterError\n+        registry = getUtility(IRegistry)\n+        registry.registerInterface(IMyOtherRegistrySettings)\n+        with self.assertRaises(InvalidParameterError) as cm:\n+            portal.set_registry_record(\n+                \'field_three\',\n+                42,\n+                interface=IMyOtherRegistrySettings,\n+            )\n+        exc_str = str(cm.exception)\n+\n+        self.assertIn(\n+            "The value parameter for the field field_three", exc_str\n+        )\n+        self.assertIn("TextLine", exc_str)\n+\n     def test_set_registry_record_on_invalid_interface(self):\n         """Test that passing an invalid interface raises an Exception."""\n         from plone.api.exc import InvalidParameterError\n'

