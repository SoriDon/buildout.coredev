Repository: Products.CMFDynamicViewFTI


Branch: refs/heads/master
Date: 2019-06-26T20:33:55+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFDynamicViewFTI/commit/f8c839f058727f0855c1f67eeb55578bb4394165

missing migrated security decorator

Files changed:
M Products/CMFDynamicViewFTI/fti.py

b"diff --git a/Products/CMFDynamicViewFTI/fti.py b/Products/CMFDynamicViewFTI/fti.py\nindex c5f2294..3997a6e 100644\n--- a/Products/CMFDynamicViewFTI/fti.py\n+++ b/Products/CMFDynamicViewFTI/fti.py\n@@ -51,6 +51,7 @@ def om_has_key(context, key):\n             return True\n     return False\n \n+\n fti_meta_type = 'Factory-based Type Information with dynamic views'\n \n \n@@ -206,8 +207,7 @@ def defaultView(self, context):\n             fallback = self.default_view_fallback\n             return self.getViewMethod(context, check_exists=fallback)\n \n-    security.declarePublic('queryMethodID')\n-\n+    @security.public\n     def queryMethodID(self, alias, default=None, context=None):\n         # Query method ID by alias.\n \n@@ -244,4 +244,5 @@ def queryMethodID(self, alias, default=None, context=None):\n \n         return methodTarget\n \n+\n InitializeClass(DynamicViewTypeInformation)\n"

Repository: Products.CMFDynamicViewFTI


Branch: refs/heads/master
Date: 2019-06-26T20:40:45+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFDynamicViewFTI/commit/97e27a8fb3a7067bbfd826b72f591dbcf0f6bfdb

fixes crashing interpreter with Fatal Python error: Cannot recover from stack overflow.

see plone/Products.CMFPlone#2874

Files changed:
A news/20.bugfix
M Products/CMFDynamicViewFTI/browserdefault.py

b'diff --git a/Products/CMFDynamicViewFTI/browserdefault.py b/Products/CMFDynamicViewFTI/browserdefault.py\nindex 53decad..8380824 100644\n--- a/Products/CMFDynamicViewFTI/browserdefault.py\n+++ b/Products/CMFDynamicViewFTI/browserdefault.py\n@@ -49,7 +49,7 @@ class BrowserDefaultMixin(Base):\n         \'sharing\': \'folder_localrole_form\',\n         \'gethtml\': \'\',\n         \'mkdir\': \'\',\n-        }\n+    }\n \n     default_view = "base_view"\n     suppl_views = ()\n@@ -72,7 +72,19 @@ def __call__(self):\n         Resolve and return the selected view template applied to the object.\n         This should not consider the default page.\n         """\n-        template = self.unrestrictedTraverse(self.getLayout())\n+        layout = self.getLayout()\n+        if layout is None:\n+            # here we would run in a infinite recursion, because\n+            # self.unrestrictedTraverse(None) will always return\n+            # self and then it calls itself again\n+            # since this may lead to a stack overflow crashing the whole\n+            # interpreter it is important to catch this beforehand.\n+            raise ValueError(\n+                "No layout found. "\n+                "This may happen b/c nothing was set. "\n+                "Hint: If no FTI was found this happens as well."\n+            )\n+        template = self.unrestrictedTraverse(layout)\n         return template()\n \n     @security.protected(View)\n@@ -226,6 +238,7 @@ def getAvailableLayouts(self):\n                     result.append((mid, title))\n         return result\n \n+\n InitializeClass(BrowserDefaultMixin)\n \n \ndiff --git a/news/20.bugfix b/news/20.bugfix\nnew file mode 100644\nindex 0000000..176aad5\n--- /dev/null\n+++ b/news/20.bugfix\n@@ -0,0 +1,4 @@\n+Fixes plone/Products.CMFPlone#2874\n+``Fatal crash: Fatal Python error: Cannot recover from stack overflow``\n+Which crashes the interpreter.\n+[jensens]\n\\ No newline at end of file\n'

Repository: Products.CMFDynamicViewFTI


Branch: refs/heads/master
Date: 2019-06-27T19:52:52+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFDynamicViewFTI/commit/96aa51565ba0fdfb4612168b3a8ce2a13c9043c5

Merge pull request #20 from plone/fix_cmfplone_2874

Fix cmfplone 2874

Files changed:
A news/20.bugfix
M Products/CMFDynamicViewFTI/browserdefault.py
M Products/CMFDynamicViewFTI/fti.py

b'diff --git a/Products/CMFDynamicViewFTI/browserdefault.py b/Products/CMFDynamicViewFTI/browserdefault.py\nindex 53decad..8380824 100644\n--- a/Products/CMFDynamicViewFTI/browserdefault.py\n+++ b/Products/CMFDynamicViewFTI/browserdefault.py\n@@ -49,7 +49,7 @@ class BrowserDefaultMixin(Base):\n         \'sharing\': \'folder_localrole_form\',\n         \'gethtml\': \'\',\n         \'mkdir\': \'\',\n-        }\n+    }\n \n     default_view = "base_view"\n     suppl_views = ()\n@@ -72,7 +72,19 @@ def __call__(self):\n         Resolve and return the selected view template applied to the object.\n         This should not consider the default page.\n         """\n-        template = self.unrestrictedTraverse(self.getLayout())\n+        layout = self.getLayout()\n+        if layout is None:\n+            # here we would run in a infinite recursion, because\n+            # self.unrestrictedTraverse(None) will always return\n+            # self and then it calls itself again\n+            # since this may lead to a stack overflow crashing the whole\n+            # interpreter it is important to catch this beforehand.\n+            raise ValueError(\n+                "No layout found. "\n+                "This may happen b/c nothing was set. "\n+                "Hint: If no FTI was found this happens as well."\n+            )\n+        template = self.unrestrictedTraverse(layout)\n         return template()\n \n     @security.protected(View)\n@@ -226,6 +238,7 @@ def getAvailableLayouts(self):\n                     result.append((mid, title))\n         return result\n \n+\n InitializeClass(BrowserDefaultMixin)\n \n \ndiff --git a/Products/CMFDynamicViewFTI/fti.py b/Products/CMFDynamicViewFTI/fti.py\nindex c5f2294..3997a6e 100644\n--- a/Products/CMFDynamicViewFTI/fti.py\n+++ b/Products/CMFDynamicViewFTI/fti.py\n@@ -51,6 +51,7 @@ def om_has_key(context, key):\n             return True\n     return False\n \n+\n fti_meta_type = \'Factory-based Type Information with dynamic views\'\n \n \n@@ -206,8 +207,7 @@ def defaultView(self, context):\n             fallback = self.default_view_fallback\n             return self.getViewMethod(context, check_exists=fallback)\n \n-    security.declarePublic(\'queryMethodID\')\n-\n+    @security.public\n     def queryMethodID(self, alias, default=None, context=None):\n         # Query method ID by alias.\n \n@@ -244,4 +244,5 @@ def queryMethodID(self, alias, default=None, context=None):\n \n         return methodTarget\n \n+\n InitializeClass(DynamicViewTypeInformation)\ndiff --git a/news/20.bugfix b/news/20.bugfix\nnew file mode 100644\nindex 0000000..176aad5\n--- /dev/null\n+++ b/news/20.bugfix\n@@ -0,0 +1,4 @@\n+Fixes plone/Products.CMFPlone#2874\n+``Fatal crash: Fatal Python error: Cannot recover from stack overflow``\n+Which crashes the interpreter.\n+[jensens]\n\\ No newline at end of file\n'

