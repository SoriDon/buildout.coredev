Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2016-03-29T17:41:06+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/00d23b975e977a812d8c0588e40cfef51bf356f5

make Gruntfile.js generator more verbose

Files changed:
M CHANGES.rst
M Products/CMFPlone/_scripts/_generate_gruntfile.py
M Products/CMFPlone/_scripts/generate_gruntfile.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 99db26b..638c350 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -54,6 +54,13 @@ New:
 
 Fixes:
 
+- Make Gruntfile.js generation script a bit more verbose to show the effective 
+  locations of the generated bundles. This helps in case of non-working setups 
+  also as if bundle compilation was started in browser at a first run a and  
+  next run was run using the script and files were generated at different 
+  places than expected.
+  [jensens]
+
 - Ensured front-page is English when creating an English site.
   Previously, when creating an English site with a browser that
   prefers a different language, the body text ended up being in the
diff --git a/Products/CMFPlone/_scripts/_generate_gruntfile.py b/Products/CMFPlone/_scripts/_generate_gruntfile.py
index fd7f146..4558e13 100644
--- a/Products/CMFPlone/_scripts/_generate_gruntfile.py
+++ b/Products/CMFPlone/_scripts/_generate_gruntfile.py
@@ -21,11 +21,12 @@
     site_id = os.environ['SITE_ID']
 else:
     site_id = 'Plone'
-print('Using site id: ' + site_id)
+print('Using site id: {0}'.format(site_id))
 
 compile_path = ''
 if 'COMPILE_DIR' in os.environ:
     compile_path = os.environ['COMPILE_DIR']
+print('Target compile path: {0}'.format(compile_path or 'fetch from bundles'))
 
 portal = app[site_id]  # noqa
 setSite(portal)
@@ -341,17 +342,24 @@ def resource_to_dir(resource, file_type='.js'):
         js_target_name = target_name + 'min.js'
         css_target_path = js_target_path = os.path.abspath(compile_path)
     else:
+        print('"{0}" bundles compiles paths/filename'.format(bkey))
         if bundle.csscompilation:
             css_compilation = bundle.csscompilation.split('/')
             css_target_name = css_compilation[-1]
             css_target_path = resource_to_dir(portal.unrestrictedTraverse(
                 '/'.join(css_compilation[:-1])))
+            print('- css path: {0}'.format(css_target_path))
+            print('- css name: {0}'.format(css_target_name))
         if bundle.jscompilation:
             js_compilation = bundle.jscompilation.split('/')
             js_target_name = js_compilation[-1]
-            js_target_path = resource_to_dir(portal.unrestrictedTraverse(
-                '/'.join(js_compilation[:-1])))
-
+            js_target_path = resource_to_dir(
+                portal.unrestrictedTraverse(
+                    '/'.join(js_compilation[:-1])
+                )
+            )
+            print('- js path:  {0}'.format(js_target_path))
+            print('- js name:  {0}'.format(js_target_name))
     if bundle.compile:
         less_files = {}
         js_files = []
diff --git a/Products/CMFPlone/_scripts/generate_gruntfile.py b/Products/CMFPlone/_scripts/generate_gruntfile.py
index f33b0e8..a83cb11 100644
--- a/Products/CMFPlone/_scripts/generate_gruntfile.py
+++ b/Products/CMFPlone/_scripts/generate_gruntfile.py
@@ -8,7 +8,7 @@
 import subprocess
 
 parser = argparse.ArgumentParser(
-    description='Generate Gruntfile.js from Plone site')
+    description='Generate Gruntfile.js from a Plone site configuration')
 parser.add_argument('--site-id', dest='site_id',
                     default='Plone', help='ID for the plone site id')
 parser.add_argument('--instance', dest='instance',
@@ -43,3 +43,4 @@ def main(argv=sys.argv):
 
     print('Running command: %s' % ' '.join(cmd))
     subprocess.check_call(cmd, env=os.environ)
+    print('Grunfile generated.')


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2016-03-29T22:01:34+02:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/f7564126f0e8d40a2e5803255b08b3c73a1a3164

Merge pull request #1496 from plone/jensens-verbose-gruntfile-generator

make Gruntfile.js generator more verbose

Files changed:
M CHANGES.rst
M Products/CMFPlone/_scripts/_generate_gruntfile.py
M Products/CMFPlone/_scripts/generate_gruntfile.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 99db26b..638c350 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -54,6 +54,13 @@ New:
 
 Fixes:
 
+- Make Gruntfile.js generation script a bit more verbose to show the effective 
+  locations of the generated bundles. This helps in case of non-working setups 
+  also as if bundle compilation was started in browser at a first run a and  
+  next run was run using the script and files were generated at different 
+  places than expected.
+  [jensens]
+
 - Ensured front-page is English when creating an English site.
   Previously, when creating an English site with a browser that
   prefers a different language, the body text ended up being in the
diff --git a/Products/CMFPlone/_scripts/_generate_gruntfile.py b/Products/CMFPlone/_scripts/_generate_gruntfile.py
index fd7f146..4558e13 100644
--- a/Products/CMFPlone/_scripts/_generate_gruntfile.py
+++ b/Products/CMFPlone/_scripts/_generate_gruntfile.py
@@ -21,11 +21,12 @@
     site_id = os.environ['SITE_ID']
 else:
     site_id = 'Plone'
-print('Using site id: ' + site_id)
+print('Using site id: {0}'.format(site_id))
 
 compile_path = ''
 if 'COMPILE_DIR' in os.environ:
     compile_path = os.environ['COMPILE_DIR']
+print('Target compile path: {0}'.format(compile_path or 'fetch from bundles'))
 
 portal = app[site_id]  # noqa
 setSite(portal)
@@ -341,17 +342,24 @@ def resource_to_dir(resource, file_type='.js'):
         js_target_name = target_name + 'min.js'
         css_target_path = js_target_path = os.path.abspath(compile_path)
     else:
+        print('"{0}" bundles compiles paths/filename'.format(bkey))
         if bundle.csscompilation:
             css_compilation = bundle.csscompilation.split('/')
             css_target_name = css_compilation[-1]
             css_target_path = resource_to_dir(portal.unrestrictedTraverse(
                 '/'.join(css_compilation[:-1])))
+            print('- css path: {0}'.format(css_target_path))
+            print('- css name: {0}'.format(css_target_name))
         if bundle.jscompilation:
             js_compilation = bundle.jscompilation.split('/')
             js_target_name = js_compilation[-1]
-            js_target_path = resource_to_dir(portal.unrestrictedTraverse(
-                '/'.join(js_compilation[:-1])))
-
+            js_target_path = resource_to_dir(
+                portal.unrestrictedTraverse(
+                    '/'.join(js_compilation[:-1])
+                )
+            )
+            print('- js path:  {0}'.format(js_target_path))
+            print('- js name:  {0}'.format(js_target_name))
     if bundle.compile:
         less_files = {}
         js_files = []
diff --git a/Products/CMFPlone/_scripts/generate_gruntfile.py b/Products/CMFPlone/_scripts/generate_gruntfile.py
index f33b0e8..a83cb11 100644
--- a/Products/CMFPlone/_scripts/generate_gruntfile.py
+++ b/Products/CMFPlone/_scripts/generate_gruntfile.py
@@ -8,7 +8,7 @@
 import subprocess
 
 parser = argparse.ArgumentParser(
-    description='Generate Gruntfile.js from Plone site')
+    description='Generate Gruntfile.js from a Plone site configuration')
 parser.add_argument('--site-id', dest='site_id',
                     default='Plone', help='ID for the plone site id')
 parser.add_argument('--instance', dest='instance',
@@ -43,3 +43,4 @@ def main(argv=sys.argv):
 
     print('Running command: %s' % ' '.join(cmd))
     subprocess.check_call(cmd, env=os.environ)
+    print('Grunfile generated.')


