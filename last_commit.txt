Repository: plone.restapi


Branch: refs/heads/master
Date: 2021-12-23T09:44:16+01:00
Author: Víctor Fernández de Alba (sneridagh) <sneridagh@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/dbee1ad76368d604f99a5d62117e59b7831ef895

Improve vocabulary endpoint when asking for a list of tokens adding resilience and deprecation warning (#1299)

Files changed:
A news/1298.feature
M src/plone/restapi/serializer/vocabularies.py
M src/plone/restapi/tests/test_services_vocabularies.py

b'diff --git a/news/1298.feature b/news/1298.feature\nnew file mode 100644\nindex 000000000..6c9eb2d4d\n--- /dev/null\n+++ b/news/1298.feature\n@@ -0,0 +1,2 @@\n+Improve vocabulary endpoint when asking for a list of tokens adding resilience and deprecation warning\n+[sneridagh]\ndiff --git a/src/plone/restapi/serializer/vocabularies.py b/src/plone/restapi/serializer/vocabularies.py\nindex 068b117c6..e1dcb4b00 100644\n--- a/src/plone/restapi/serializer/vocabularies.py\n+++ b/src/plone/restapi/serializer/vocabularies.py\n@@ -11,6 +11,8 @@\n from zope.schema.interfaces import ITokenizedTerm\n from zope.schema.interfaces import IVocabulary\n \n+import warnings\n+\n \n @implementer(ISerializeToJson)\n class SerializeVocabLikeToJson:\n@@ -42,10 +44,16 @@ def __call__(self, vocabulary_id):\n                 )\n \n             if token:\n+                warnings.warn(\n+                    "``token`` parameter is deprecated and will be removed in plone.restapi 9.0. Use ``tokens`` parameter instead.",\n+                    DeprecationWarning,\n+                )\n                 if token.lower() != term.token.lower():\n                     continue\n                 terms.append(term)\n             elif tokens:\n+                if isinstance(tokens, str):\n+                    tokens = [tokens]\n                 for item in tokens:\n                     if item.lower() != term.token.lower():\n                         continue\ndiff --git a/src/plone/restapi/tests/test_services_vocabularies.py b/src/plone/restapi/tests/test_services_vocabularies.py\nindex b007ebe33..8fa0f154e 100644\n--- a/src/plone/restapi/tests/test_services_vocabularies.py\n+++ b/src/plone/restapi/tests/test_services_vocabularies.py\n@@ -306,7 +306,65 @@ def test_get_corner_case_vocabulary_filtered_by_token(self):\n             },\n         )\n \n-    def test_get_vocabulary_filtered_by_token_list(self):\n+    def test_get_vocabulary_filtered_by_token_list_one_item_list_zope_ish(self):\n+        response = self.api_session.get(\n+            "/@vocabularies/plone.restapi.tests.test_vocabulary?tokens:list=token1"\n+        )\n+\n+        self.assertEqual(200, response.status_code)\n+        response = response.json()\n+        self.assertEqual(\n+            response,\n+            {\n+                "@id": self.portal_url\n+                + "/@vocabularies/plone.restapi.tests.test_vocabulary?tokens%3Alist=token1",  # noqa\n+                "items": [\n+                    {"title": "Title 1", "token": "token1"},\n+                ],\n+                "items_total": 1,\n+            },\n+        )\n+\n+    def test_get_vocabulary_filtered_by_token_list_two_item_list_zope_ish(self):\n+        response = self.api_session.get(\n+            "/@vocabularies/plone.restapi.tests.test_vocabulary?tokens:list=token1&tokens:list=token2"\n+        )\n+\n+        self.assertEqual(200, response.status_code)\n+        response = response.json()\n+        self.assertEqual(\n+            response,\n+            {\n+                "@id": self.portal_url\n+                + "/@vocabularies/plone.restapi.tests.test_vocabulary?tokens%3Alist=token1&tokens%3Alist=token2",  # noqa\n+                "items": [\n+                    {"title": "Title 1", "token": "token1"},\n+                    {"title": "Title 2", "token": "token2"},\n+                ],\n+                "items_total": 2,\n+            },\n+        )\n+\n+    def test_get_vocabulary_filtered_by_token_list_one_item(self):\n+        response = self.api_session.get(\n+            "/@vocabularies/plone.restapi.tests.test_vocabulary?tokens=token1"\n+        )\n+\n+        self.assertEqual(200, response.status_code)\n+        response = response.json()\n+        self.assertEqual(\n+            response,\n+            {\n+                "@id": self.portal_url\n+                + "/@vocabularies/plone.restapi.tests.test_vocabulary?tokens=token1",  # noqa\n+                "items": [\n+                    {"title": "Title 1", "token": "token1"},\n+                ],\n+                "items_total": 1,\n+            },\n+        )\n+\n+    def test_get_vocabulary_filtered_by_token_list_two_items(self):\n         response = self.api_session.get(\n             "/@vocabularies/plone.restapi.tests.test_vocabulary?tokens=token1&tokens=token2"\n         )\n'

