Repository: plone.restapi


Branch: refs/heads/master
Date: 2021-08-25T20:37:02+02:00
Author: Alin Voinea (avoinea) <contact@avoinea.com>
Commit: https://github.com/plone/plone.restapi/commit/df3dba9b2eff44dc6349175ffdd9e97157ac58a9

Refactor `@lock` endpoint based on CRUD operations (#1182)

* Refactor `@lock` endpoint based on CRUD operations - refs #1181

* Add `@lock` to expandable `@components`

refs #1181

* Update tests resp examples

refs #1181

* Fix black

* Add more info to @lock endpoint about the author and creation date

* Refs #1181 - Allow @lock stealing by passing force param to DELTE

* Refs #1181 - Safely get ILockable adapter

* Refs #1182 - Make sure @lock endpoint is available on all ctypes

- Including Plone Site Root

* Update docs about force unlock

* Add locking deprecation warning also within docs

* Serialize lock information on dx content (#1201)

* Serialize lock information on dx content

* Revert plone.schema generated tests resp

* Revert locking support only to IContentish interface

* Drop expandable @lock endpoint

* Update CHANGELOG

Files changed:
A news/1181.feature
A src/plone/restapi/services/locking/add.py
A src/plone/restapi/services/locking/delete.py
A src/plone/restapi/services/locking/get.py
A src/plone/restapi/services/locking/update.py
A src/plone/restapi/tests/http-examples/unlock_force.req
A src/plone/restapi/tests/http-examples/unlock_force.resp
M docs/source/locking.rst
M src/plone/restapi/serializer/dxcontent.py
M src/plone/restapi/services/content/update.py
M src/plone/restapi/services/locking/__init__.py
M src/plone/restapi/services/locking/configure.zcml
M src/plone/restapi/services/locking/locking.py
M src/plone/restapi/tests/http-examples/collection.resp
M src/plone/restapi/tests/http-examples/collection_fullobjects.resp
M src/plone/restapi/tests/http-examples/content_get.resp
M src/plone/restapi/tests/http-examples/content_get_folder.resp
M src/plone/restapi/tests/http-examples/content_patch_representation.resp
M src/plone/restapi/tests/http-examples/content_post.resp
M src/plone/restapi/tests/http-examples/document.resp
M src/plone/restapi/tests/http-examples/event.resp
M src/plone/restapi/tests/http-examples/expansion.resp
M src/plone/restapi/tests/http-examples/expansion_expanded.resp
M src/plone/restapi/tests/http-examples/expansion_expanded_full.resp
M src/plone/restapi/tests/http-examples/file.resp
M src/plone/restapi/tests/http-examples/folder.resp
M src/plone/restapi/tests/http-examples/image.resp
M src/plone/restapi/tests/http-examples/link.resp
M src/plone/restapi/tests/http-examples/lock.resp
M src/plone/restapi/tests/http-examples/lock_nonstealable_timeout.resp
M src/plone/restapi/tests/http-examples/newsitem.resp
M src/plone/restapi/tests/http-examples/refresh_lock.req
M src/plone/restapi/tests/http-examples/refresh_lock.resp
M src/plone/restapi/tests/http-examples/registry_get_list.resp
M src/plone/restapi/tests/http-examples/search_fullobjects.resp
M src/plone/restapi/tests/http-examples/translations_link_on_post.resp
M src/plone/restapi/tests/http-examples/types_document.resp
M src/plone/restapi/tests/http-examples/types_document_get_field.resp
M src/plone/restapi/tests/http-examples/types_document_post_field.resp
M src/plone/restapi/tests/http-examples/types_document_put.req
M src/plone/restapi/tests/http-examples/unlock.req
M src/plone/restapi/tests/http-examples/workingcopy_baseline_get.resp
M src/plone/restapi/tests/http-examples/workingcopy_wc_get.resp
M src/plone/restapi/tests/test_documentation.py
M src/plone/restapi/tests/test_locking.py

b'diff --git a/docs/source/locking.rst b/docs/source/locking.rst\nindex 2c445792d..3d1afe464 100644\n--- a/docs/source/locking.rst\n+++ b/docs/source/locking.rst\n@@ -6,6 +6,17 @@ Locking is a mechanism to prevent users from accidentially overriding each other\n When a user edits a content object in Plone, the object is locked until the user hits the save or cancel button.\n If a second user tries to edit the object at the same time, she will see a message that this object is locked.\n \n+The API consumer can create, read, update, and delete a content-type lock.\n+\n+======= =============================================== =====================================================================\n+Verb    URL                                             Action\n+======= =============================================== =====================================================================\n+POST    ``/@lock``                                      Lock an object\n+GET     ``/@lock``                                      Get information about the current lock\n+PATCH   ``/@lock``                                      Refresh existing lock\n+DELETE  ``/@lock``                                      Unlock an object\n+======= =============================================== =====================================================================\n+\n \n Locking an object\n -----------------\n@@ -42,7 +53,7 @@ The server responds with status :term:`200 OK` and returns the lock information.\n Unlocking an object\n -------------------\n \n-To unlock an object send a POST request to the ``/@unlock`` endpoint.\n+To unlock an object send a DELETE request to the ``/@lock`` endpoint.\n \n ..  http:example:: curl httpie python-requests\n     :request: ../../src/plone/restapi/tests/http-examples/unlock.req\n@@ -52,11 +63,23 @@ The server responds with status :term:`200 OK` and returns the lock information.\n .. literalinclude:: ../../src/plone/restapi/tests/http-examples/unlock.resp\n    :language: http\n \n+To unlock an object locked by another user send a force DELETE request to the ``/@lock`` endpoint.\n+\n+..  http:example:: curl httpie python-requests\n+    :request: ../../src/plone/restapi/tests/http-examples/unlock_force.req\n+\n+The server responds with status :term:`200 OK` and returns the lock information.\n+\n+.. literalinclude:: ../../src/plone/restapi/tests/http-examples/unlock_force.resp\n+   :language: http\n+\n+.. warning::\n+   The ``@unlock`` endpoint is deprecated and will be removed in plone.restapi 9.0.\n \n Refreshing a lock\n -----------------\n \n-An existing lock can be refreshed by sending a POST request to the ``@refresh-lock`` endpoint.\n+An existing lock can be refreshed by sending a PATCH request to the ``@lock`` endpoint.\n \n ..  http:example:: curl httpie python-requests\n     :request: ../../src/plone/restapi/tests/http-examples/refresh_lock.req\n@@ -66,6 +89,8 @@ The server responds with status :term:`200 OK` and returns the lock information\n .. literalinclude:: ../../src/plone/restapi/tests/http-examples/refresh_lock.resp\n    :language: http\n \n+.. warning::\n+   The ``@refresh-lock`` endpoint is deprecated and will be removed in plone.restapi 9.0.\n \n Getting lock information\n ------------------------\ndiff --git a/news/1181.feature b/news/1181.feature\nnew file mode 100644\nindex 000000000..d9d8f450d\n--- /dev/null\n+++ b/news/1181.feature\n@@ -0,0 +1 @@\n+Refactor `@lock` endpoint based on CRUD operations [@avoinea]\ndiff --git a/src/plone/restapi/serializer/dxcontent.py b/src/plone/restapi/serializer/dxcontent.py\nindex 9632e1043..90295ca3a 100644\n--- a/src/plone/restapi/serializer/dxcontent.py\n+++ b/src/plone/restapi/serializer/dxcontent.py\n@@ -16,6 +16,7 @@\n from plone.restapi.serializer.expansion import expandable_elements\n from plone.restapi.serializer.nextprev import NextPrevious\n from plone.restapi.serializer.working_copy import WorkingCopyInfo\n+from plone.restapi.services.locking import lock_info\n from plone.rfc822.interfaces import IPrimaryFieldInfo\n from plone.supermodel.utils import mergedTaggedValueDict\n from Products.CMFCore.utils import getToolByName\n@@ -79,6 +80,9 @@ def __call__(self, version=None, include_items=True):\n         baseline, working_copy = WorkingCopyInfo(self.context).get_working_copy_info()\n         result.update({"working_copy": working_copy, "working_copy_of": baseline})\n \n+        # Insert locking information\n+        result.update({"lock": lock_info(obj)})\n+\n         # Insert expandable elements\n         result.update(expandable_elements(self.context, self.request))\n \ndiff --git a/src/plone/restapi/services/content/update.py b/src/plone/restapi/services/content/update.py\nindex c9b444e5f..2c19a228a 100644\n--- a/src/plone/restapi/services/content/update.py\n+++ b/src/plone/restapi/services/content/update.py\n@@ -2,7 +2,7 @@\n from plone.restapi.interfaces import IDeserializeFromJson\n from plone.restapi.interfaces import ISerializeToJson\n from plone.restapi.services import Service\n-from plone.restapi.services.locking.locking import is_locked\n+from plone.restapi.services.locking import is_locked\n from zope.component import queryMultiAdapter\n \n \ndiff --git a/src/plone/restapi/services/locking/__init__.py b/src/plone/restapi/services/locking/__init__.py\nindex e69de29bb..852bc73c1 100644\n--- a/src/plone/restapi/services/locking/__init__.py\n+++ b/src/plone/restapi/services/locking/__init__.py\n@@ -0,0 +1,72 @@\n+""" Locking\n+"""\n+from plone import api\n+from datetime import datetime\n+from plone.locking.interfaces import ILockable\n+\n+\n+def creator_name(username):\n+    user = api.user.get(username=username)\n+    return user.getProperty("fullname") or username\n+\n+\n+def creator_url(username):\n+    url = api.portal.get().absolute_url()\n+    return f"{url}/author/{username}"\n+\n+\n+def creation_date(timestamp):\n+    return datetime.fromtimestamp(timestamp).isoformat()\n+\n+\n+def lock_info(obj):\n+    """Returns lock information about the given object."""\n+    lockable = ILockable(obj, None)\n+    if lockable is not None:\n+        info = {"locked": lockable.locked(), "stealable": lockable.stealable()}\n+        lock_info = lockable.lock_info()\n+        if len(lock_info) > 0:\n+            creator = lock_info[0]["creator"]\n+            info["creator"] = creator\n+            info["creator_name"] = creator_name(creator)\n+            info["creator_url"] = creator_url(creator)\n+            created = lock_info[0]["time"]\n+            info["time"] = created\n+            info["created"] = creation_date(created)\n+            info["token"] = lock_info[0]["token"]\n+            lock_type = lock_info[0]["type"]\n+            if lock_type:\n+                info["name"] = lock_info[0]["type"].__name__\n+            lock_item = webdav_lock(obj)\n+            if lock_item:\n+                info["timeout"] = lock_item.getTimeout()\n+        return info\n+    return {}\n+\n+\n+def webdav_lock(obj):\n+    """Returns the WebDAV LockItem"""\n+    lockable = ILockable(obj, None)\n+    if lockable is None:\n+        return\n+\n+    lock_info = lockable.lock_info()\n+    if len(lock_info) > 0:\n+        token = lock_info[0]["token"]\n+        return obj.wl_getLock(token)\n+\n+\n+def is_locked(obj, request):\n+    """Returns true if the object is locked and the request doesn\'t contain\n+    the lock token.\n+    """\n+    lockable = ILockable(obj, None)\n+    if lockable is None:\n+        return False\n+    if lockable.locked():\n+        token = request.getHeader("Lock-Token", "")\n+        lock_info = lockable.lock_info()\n+        if len(lock_info) > 0 and lock_info[0]["token"] == token:\n+            return False\n+        return True\n+    return False\ndiff --git a/src/plone/restapi/services/locking/add.py b/src/plone/restapi/services/locking/add.py\nnew file mode 100644\nindex 000000000..4daa7a486\n--- /dev/null\n+++ b/src/plone/restapi/services/locking/add.py\n@@ -0,0 +1,35 @@\n+from plone.locking.interfaces import INonStealableLock\n+from plone.locking.interfaces import IRefreshableLockable\n+from plone.restapi.deserializer import json_body\n+from plone.restapi.services import Service\n+from plone.restapi.services.locking import lock_info\n+from plone.restapi.services.locking import webdav_lock\n+from zope.interface import alsoProvides\n+\n+import plone.protect.interfaces\n+\n+\n+class Lock(Service):\n+    """Lock an object"""\n+\n+    def reply(self):\n+        data = json_body(self.request)\n+\n+        lockable = IRefreshableLockable(self.context, None)\n+        if lockable is not None:\n+            lockable.lock()\n+\n+            if "stealable" in data and not data["stealable"]:\n+                alsoProvides(self.context, INonStealableLock)\n+\n+            if "timeout" in data:\n+                lock_item = webdav_lock(self.context)\n+                lock_item.setTimeout("Second-%s" % data["timeout"])\n+\n+            # Disable CSRF protection\n+            if "IDisableCSRFProtection" in dir(plone.protect.interfaces):\n+                alsoProvides(\n+                    self.request, plone.protect.interfaces.IDisableCSRFProtection\n+                )\n+\n+        return lock_info(self.context)\ndiff --git a/src/plone/restapi/services/locking/configure.zcml b/src/plone/restapi/services/locking/configure.zcml\nindex 1cfe67ad8..b7cc527eb 100644\n--- a/src/plone/restapi/services/locking/configure.zcml\n+++ b/src/plone/restapi/services/locking/configure.zcml\n@@ -1,17 +1,41 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:plone="http://namespaces.plone.org/plone"\n-    xmlns:zcml="http://namespaces.zope.org/zcml"\n     >\n \n+  <plone:service\n+      method="GET"\n+      factory=".get.Lock"\n+      for="Products.CMFCore.interfaces.IContentish"\n+      permission="zope2.View"\n+      name="@lock"\n+      />\n+\n   <plone:service\n       method="POST"\n-      factory=".locking.Lock"\n+      factory=".add.Lock"\n+      for="Products.CMFCore.interfaces.IContentish"\n+      permission="cmf.ModifyPortalContent"\n+      name="@lock"\n+      />\n+\n+  <plone:service\n+      method="PATCH"\n+      factory=".update.Lock"\n       for="Products.CMFCore.interfaces.IContentish"\n       permission="cmf.ModifyPortalContent"\n       name="@lock"\n       />\n \n+  <plone:service\n+      method="DELETE"\n+      factory=".delete.Lock"\n+      for="Products.CMFCore.interfaces.IContentish"\n+      permission="cmf.ModifyPortalContent"\n+      name="@lock"\n+      />\n+\n+  <!-- DEPRECATED -->\n   <plone:service\n       method="POST"\n       factory=".locking.Unlock"\n@@ -28,12 +52,4 @@\n       name="@refresh-lock"\n       />\n \n-  <plone:service\n-      method="GET"\n-      factory=".locking.LockInfo"\n-      for="Products.CMFCore.interfaces.IContentish"\n-      permission="zope2.View"\n-      name="@lock"\n-      />\n-\n </configure>\ndiff --git a/src/plone/restapi/services/locking/delete.py b/src/plone/restapi/services/locking/delete.py\nnew file mode 100644\nindex 000000000..4bbd5b8c6\n--- /dev/null\n+++ b/src/plone/restapi/services/locking/delete.py\n@@ -0,0 +1,35 @@\n+from plone.locking.interfaces import ILockable\n+from plone.locking.interfaces import INonStealableLock\n+from plone.restapi.deserializer import json_body\n+from plone.restapi.services import Service\n+from plone.restapi.services.locking import lock_info\n+from zope.interface import alsoProvides\n+from zope.interface import noLongerProvides\n+\n+import plone.protect.interfaces\n+\n+\n+class Lock(Service):\n+    """Unlock an object"""\n+\n+    def reply(self):\n+        lockable = ILockable(self.context, None)\n+        if lockable is None:\n+            return lock_info(self.context)\n+\n+        data = json_body(self.request)\n+\n+        # Remove lock by the same user or steal it\n+        if lockable.can_safely_unlock() or data.get("force"):\n+            lockable.unlock()\n+\n+            if INonStealableLock.providedBy(self.context):\n+                noLongerProvides(self.context, INonStealableLock)\n+\n+            # Disable CSRF protection\n+            if "IDisableCSRFProtection" in dir(plone.protect.interfaces):\n+                alsoProvides(\n+                    self.request, plone.protect.interfaces.IDisableCSRFProtection\n+                )\n+\n+        return lock_info(self.context)\ndiff --git a/src/plone/restapi/services/locking/get.py b/src/plone/restapi/services/locking/get.py\nnew file mode 100644\nindex 000000000..720488cbb\n--- /dev/null\n+++ b/src/plone/restapi/services/locking/get.py\n@@ -0,0 +1,9 @@\n+from plone.restapi.services import Service\n+from plone.restapi.services.locking import lock_info\n+\n+\n+class Lock(Service):\n+    """Lock information about the current lock"""\n+\n+    def reply(self):\n+        return lock_info(self.context)\ndiff --git a/src/plone/restapi/services/locking/locking.py b/src/plone/restapi/services/locking/locking.py\nindex 66ece9c28..fa664ccaa 100644\n--- a/src/plone/restapi/services/locking/locking.py\n+++ b/src/plone/restapi/services/locking/locking.py\n@@ -1,126 +1,68 @@\n-from plone.locking.interfaces import ILockable\n-from plone.locking.interfaces import INonStealableLock\n-from plone.locking.interfaces import IRefreshableLockable\n-from plone.restapi.deserializer import json_body\n-from plone.restapi.services import Service\n-from zope.interface import alsoProvides\n-from zope.interface import noLongerProvides\n-\n-import plone.protect.interfaces\n-\n-\n-class Lock(Service):\n+import warnings\n+from zope.deprecation import deprecated\n+from plone.restapi.services.locking import lock_info\n+from plone.restapi.services.locking import webdav_lock\n+from plone.restapi.services.locking import is_locked\n+\n+from plone.restapi.services.locking.add import Lock as AddLock\n+from plone.restapi.services.locking.get import Lock as GetLock\n+from plone.restapi.services.locking.delete import Lock as DeleteLock\n+from plone.restapi.services.locking.update import Lock as UpdateLock\n+\n+\n+lock_info = deprecated(\n+    lock_info,\n+    "``plone.restapi.services.locking.locking.lock_info`` is deprecated and will be removed in plone.restapi 9.0. Use it from ``plone.restapi.services.locking`` instead.",\n+)\n+webdav_lock = deprecated(\n+    webdav_lock,\n+    "``plone.restapi.services.locking.locking.webdav_lock`` is deprecated and will be removed in plone.restapi 9.0. Use it from ``plone.restapi.services.locking`` instead.",\n+)\n+is_locked = deprecated(\n+    is_locked,\n+    "``plone.restapi.services.locking.locking.is_locked`` is deprecated and will be removed in plone.restapi 9.0. Use it from ``plone.restapi.services.locking`` instead.",\n+)\n+\n+\n+class Lock(AddLock):\n     """Lock an object"""\n \n     def reply(self):\n-        data = json_body(self.request)\n-\n-        lockable = IRefreshableLockable(self.context, None)\n-        if lockable is not None:\n-            lockable.lock()\n-\n-            if "stealable" in data and not data["stealable"]:\n-                alsoProvides(self.context, INonStealableLock)\n+        warnings.warn(\n+            "``plone.restapi.services.locking.Lock`` is deprecated and will be removed in plone.restapi 9.0. Use it from ``plone.restapi.services.locking.update`` instead.",\n+            DeprecationWarning,\n+        )\n+        return super(Lock, self).reply()\n \n-            if "timeout" in data:\n-                lock_item = webdav_lock(self.context)\n-                lock_item.setTimeout("Second-%s" % data["timeout"])\n \n-            # Disable CSRF protection\n-            if "IDisableCSRFProtection" in dir(plone.protect.interfaces):\n-                alsoProvides(\n-                    self.request, plone.protect.interfaces.IDisableCSRFProtection\n-                )\n-\n-        return lock_info(self.context)\n-\n-\n-class Unlock(Service):\n+class Unlock(DeleteLock):\n     """Unlock an object"""\n \n     def reply(self):\n-        lockable = ILockable(self.context)\n-        if lockable.can_safely_unlock():\n-            lockable.unlock()\n-\n-            if INonStealableLock.providedBy(self.context):\n-                noLongerProvides(self.context, INonStealableLock)\n-\n-            # Disable CSRF protection\n-            if "IDisableCSRFProtection" in dir(plone.protect.interfaces):\n-                alsoProvides(\n-                    self.request, plone.protect.interfaces.IDisableCSRFProtection\n-                )\n+        warnings.warn(\n+            "``POST @unlock`` endpoint is deprecated and will be removed in plone.restapi 9.0. Use ``DELETE @lock`` instead.",\n+            DeprecationWarning,\n+        )\n+        return super(Unlock, self).reply()\n \n-        return lock_info(self.context)\n \n-\n-class RefreshLock(Service):\n+class RefreshLock(UpdateLock):\n     """Refresh the lock of an object"""\n \n     def reply(self):\n-        lockable = IRefreshableLockable(self.context, None)\n-        if lockable is not None:\n-            lockable.refresh_lock()\n-\n-            # Disable CSRF protection\n-            if "IDisableCSRFProtection" in dir(plone.protect.interfaces):\n-                alsoProvides(\n-                    self.request, plone.protect.interfaces.IDisableCSRFProtection\n-                )\n-\n-        return lock_info(self.context)\n+        warnings.warn(\n+            "``POST @refresh-lock`` endpoint is deprecated and will be removed in plone.restapi 9.0. Use ``PATCH @lock`` instead.",\n+            DeprecationWarning,\n+        )\n+        return super(RefreshLock, self).reply()\n \n \n-class LockInfo(Service):\n+class LockInfo(GetLock):\n     """Lock information about the current lock"""\n \n     def reply(self):\n-        return lock_info(self.context)\n-\n-\n-def lock_info(obj):\n-    """Returns lock information about the given object."""\n-    lockable = ILockable(obj, None)\n-    if lockable is not None:\n-        info = {"locked": lockable.locked(), "stealable": lockable.stealable()}\n-        lock_info = lockable.lock_info()\n-        if len(lock_info) > 0:\n-            info["creator"] = lock_info[0]["creator"]\n-            info["time"] = lock_info[0]["time"]\n-            info["token"] = lock_info[0]["token"]\n-            lock_type = lock_info[0]["type"]\n-            if lock_type:\n-                info["name"] = lock_info[0]["type"].__name__\n-            lock_item = webdav_lock(obj)\n-            if lock_item:\n-                info["timeout"] = lock_item.getTimeout()\n-        return info\n-\n-\n-def webdav_lock(obj):\n-    """Returns the WebDAV LockItem"""\n-    lockable = ILockable(obj, None)\n-    if lockable is None:\n-        return\n-\n-    lock_info = lockable.lock_info()\n-    if len(lock_info) > 0:\n-        token = lock_info[0]["token"]\n-        return obj.wl_getLock(token)\n-\n-\n-def is_locked(obj, request):\n-    """Returns true if the object is locked and the request doesn\'t contain\n-    the lock token.\n-    """\n-    lockable = ILockable(obj, None)\n-    if lockable is None:\n-        return False\n-    if lockable.locked():\n-        token = request.getHeader("Lock-Token", "")\n-        lock_info = lockable.lock_info()\n-        if len(lock_info) > 0 and lock_info[0]["token"] == token:\n-            return False\n-        return True\n-    return False\n+        warnings.warn(\n+            "``plone.restapi.services.locking.LockInfo`` is deprecated and will be removed in plone.restapi 9.0. Use it from ``plone.restapi.services.locking.get`` instead.",\n+            DeprecationWarning,\n+        )\n+        return super(LockInfo, self).reply()\ndiff --git a/src/plone/restapi/services/locking/update.py b/src/plone/restapi/services/locking/update.py\nnew file mode 100644\nindex 000000000..f7987dca9\n--- /dev/null\n+++ b/src/plone/restapi/services/locking/update.py\n@@ -0,0 +1,23 @@\n+from plone.locking.interfaces import IRefreshableLockable\n+from plone.restapi.services import Service\n+from plone.restapi.services.locking import lock_info\n+from zope.interface import alsoProvides\n+\n+import plone.protect.interfaces\n+\n+\n+class Lock(Service):\n+    """Refresh the lock of an object"""\n+\n+    def reply(self):\n+        lockable = IRefreshableLockable(self.context, None)\n+        if lockable is not None:\n+            lockable.refresh_lock()\n+\n+            # Disable CSRF protection\n+            if "IDisableCSRFProtection" in dir(plone.protect.interfaces):\n+                alsoProvides(\n+                    self.request, plone.protect.interfaces.IDisableCSRFProtection\n+                )\n+\n+        return lock_info(self.context)\ndiff --git a/src/plone/restapi/tests/http-examples/collection.resp b/src/plone/restapi/tests/http-examples/collection.resp\nindex f6c8ca868..2c0da081f 100644\n--- a/src/plone/restapi/tests/http-examples/collection.resp\n+++ b/src/plone/restapi/tests/http-examples/collection.resp\n@@ -83,6 +83,10 @@ Content-Type: application/json\n   "language": "", \n   "layout": "listing_view", \n   "limit": 1000, \n+  "lock": {\n+    "locked": false, \n+    "stealable": true\n+  }, \n   "modified": "1995-07-31T17:30:00", \n   "next_item": {\n     "@id": "http://localhost:55001/plone/doc1", \ndiff --git a/src/plone/restapi/tests/http-examples/collection_fullobjects.resp b/src/plone/restapi/tests/http-examples/collection_fullobjects.resp\nindex 9cf84d529..47bcc42f1 100644\n--- a/src/plone/restapi/tests/http-examples/collection_fullobjects.resp\n+++ b/src/plone/restapi/tests/http-examples/collection_fullobjects.resp\n@@ -96,6 +96,10 @@ Content-Type: application/json\n       "is_folderish": false, \n       "language": "", \n       "layout": "document_view", \n+      "lock": {\n+        "locked": false, \n+        "stealable": true\n+      }, \n       "modified": "1995-07-31T17:30:00", \n       "next_item": {\n         "@id": "http://localhost:55001/plone/collection", \n@@ -165,6 +169,10 @@ Content-Type: application/json\n       "is_folderish": false, \n       "language": "", \n       "layout": "document_view", \n+      "lock": {\n+        "locked": false, \n+        "stealable": true\n+      }, \n       "modified": "1995-07-31T17:30:00", \n       "next_item": {\n         "@id": "http://localhost:55001/plone/doc2", \n@@ -235,6 +243,10 @@ Content-Type: application/json\n       "is_folderish": false, \n       "language": "", \n       "layout": "document_view", \n+      "lock": {\n+        "locked": false, \n+        "stealable": true\n+      }, \n       "modified": "1995-07-31T17:30:00", \n       "next_item": {}, \n       "parent": {\n@@ -266,6 +278,10 @@ Content-Type: application/json\n   "language": "", \n   "layout": "listing_view", \n   "limit": 1000, \n+  "lock": {\n+    "locked": false, \n+    "stealable": true\n+  }, \n   "modified": "1995-07-31T17:30:00", \n   "next_item": {\n     "@id": "http://localhost:55001/plone/doc1", \ndiff --git a/src/plone/restapi/tests/http-examples/content_get.resp b/src/plone/restapi/tests/http-examples/content_get.resp\nindex c17345d32..f75440421 100644\n--- a/src/plone/restapi/tests/http-examples/content_get.resp\n+++ b/src/plone/restapi/tests/http-examples/content_get.resp\n@@ -40,6 +40,10 @@ Content-Type: application/json\n   "is_folderish": false, \n   "language": "", \n   "layout": "document_view", \n+  "lock": {\n+    "locked": false, \n+    "stealable": true\n+  }, \n   "modified": "1995-07-31T17:30:00", \n   "next_item": {}, \n   "parent": {\ndiff --git a/src/plone/restapi/tests/http-examples/content_get_folder.resp b/src/plone/restapi/tests/http-examples/content_get_folder.resp\nindex ddc250547..fcde938da 100644\n--- a/src/plone/restapi/tests/http-examples/content_get_folder.resp\n+++ b/src/plone/restapi/tests/http-examples/content_get_folder.resp\n@@ -69,6 +69,7 @@ Content-Type: application/json\n   "items_total": 3, \n   "language": "", \n   "layout": "listing_view", \n+  "lock": {}, \n   "modified": "1995-07-31T17:30:00", \n   "nextPreviousEnabled": false, \n   "next_item": {}, \ndiff --git a/src/plone/restapi/tests/http-examples/content_patch_representation.resp b/src/plone/restapi/tests/http-examples/content_patch_representation.resp\nindex ea658fe1c..18c09aa0c 100644\n--- a/src/plone/restapi/tests/http-examples/content_patch_representation.resp\n+++ b/src/plone/restapi/tests/http-examples/content_patch_representation.resp\n@@ -40,6 +40,10 @@ Content-Type: application/json\n   "is_folderish": false, \n   "language": "", \n   "layout": "document_view", \n+  "lock": {\n+    "locked": false, \n+    "stealable": true\n+  }, \n   "modified": "1995-07-31T17:30:00", \n   "next_item": {}, \n   "parent": {\ndiff --git a/src/plone/restapi/tests/http-examples/content_post.resp b/src/plone/restapi/tests/http-examples/content_post.resp\nindex f7f752514..c58d92904 100644\n--- a/src/plone/restapi/tests/http-examples/content_post.resp\n+++ b/src/plone/restapi/tests/http-examples/content_post.resp\n@@ -41,6 +41,10 @@ Location: http://localhost:55001/plone/folder/my-document\n   "is_folderish": false, \n   "language": "", \n   "layout": "document_view", \n+  "lock": {\n+    "locked": false, \n+    "stealable": true\n+  }, \n   "modified": "1995-07-31T17:30:00", \n   "next_item": {}, \n   "parent": {\ndiff --git a/src/plone/restapi/tests/http-examples/document.resp b/src/plone/restapi/tests/http-examples/document.resp\nindex 24abcebf4..3498db0b1 100644\n--- a/src/plone/restapi/tests/http-examples/document.resp\n+++ b/src/plone/restapi/tests/http-examples/document.resp\n@@ -40,6 +40,10 @@ Content-Type: application/json\n   "is_folderish": false, \n   "language": "", \n   "layout": "document_view", \n+  "lock": {\n+    "locked": false, \n+    "stealable": true\n+  }, \n   "modified": "1995-07-31T17:30:00", \n   "next_item": {}, \n   "parent": {\ndiff --git a/src/plone/restapi/tests/http-examples/event.resp b/src/plone/restapi/tests/http-examples/event.resp\nindex d48b195b6..00c6ff5e8 100644\n--- a/src/plone/restapi/tests/http-examples/event.resp\n+++ b/src/plone/restapi/tests/http-examples/event.resp\n@@ -47,6 +47,10 @@ Content-Type: application/json\n   "language": "", \n   "layout": "event_view", \n   "location": null, \n+  "lock": {\n+    "locked": false, \n+    "stealable": true\n+  }, \n   "modified": "1995-07-31T17:30:00", \n   "next_item": {}, \n   "open_end": false, \ndiff --git a/src/plone/restapi/tests/http-examples/expansion.resp b/src/plone/restapi/tests/http-examples/expansion.resp\nindex 24abcebf4..3498db0b1 100644\n--- a/src/plone/restapi/tests/http-examples/expansion.resp\n+++ b/src/plone/restapi/tests/http-examples/expansion.resp\n@@ -40,6 +40,10 @@ Content-Type: application/json\n   "is_folderish": false, \n   "language": "", \n   "layout": "document_view", \n+  "lock": {\n+    "locked": false, \n+    "stealable": true\n+  }, \n   "modified": "1995-07-31T17:30:00", \n   "next_item": {}, \n   "parent": {\ndiff --git a/src/plone/restapi/tests/http-examples/expansion_expanded.resp b/src/plone/restapi/tests/http-examples/expansion_expanded.resp\nindex 5aada135f..9905c1034 100644\n--- a/src/plone/restapi/tests/http-examples/expansion_expanded.resp\n+++ b/src/plone/restapi/tests/http-examples/expansion_expanded.resp\n@@ -47,6 +47,10 @@ Content-Type: application/json\n   "is_folderish": false, \n   "language": "", \n   "layout": "document_view", \n+  "lock": {\n+    "locked": false, \n+    "stealable": true\n+  }, \n   "modified": "1995-07-31T17:30:00", \n   "next_item": {}, \n   "parent": {\ndiff --git a/src/plone/restapi/tests/http-examples/expansion_expanded_full.resp b/src/plone/restapi/tests/http-examples/expansion_expanded_full.resp\nindex bac25fd2c..cbcba258d 100644\n--- a/src/plone/restapi/tests/http-examples/expansion_expanded_full.resp\n+++ b/src/plone/restapi/tests/http-examples/expansion_expanded_full.resp\n@@ -231,6 +231,10 @@ Content-Type: application/json\n   "is_folderish": false, \n   "language": "", \n   "layout": "document_view", \n+  "lock": {\n+    "locked": false, \n+    "stealable": true\n+  }, \n   "modified": "1995-07-31T17:30:00", \n   "next_item": {}, \n   "parent": {\ndiff --git a/src/plone/restapi/tests/http-examples/file.resp b/src/plone/restapi/tests/http-examples/file.resp\nindex 50ca4f820..970372777 100644\n--- a/src/plone/restapi/tests/http-examples/file.resp\n+++ b/src/plone/restapi/tests/http-examples/file.resp\n@@ -45,6 +45,7 @@ Content-Type: application/json\n   "is_folderish": false, \n   "language": "", \n   "layout": "file_view", \n+  "lock": {}, \n   "modified": "1995-07-31T17:30:00", \n   "next_item": {}, \n   "parent": {\ndiff --git a/src/plone/restapi/tests/http-examples/folder.resp b/src/plone/restapi/tests/http-examples/folder.resp\nindex 92aec5e12..6a21fcf3f 100644\n--- a/src/plone/restapi/tests/http-examples/folder.resp\n+++ b/src/plone/restapi/tests/http-examples/folder.resp\n@@ -56,6 +56,7 @@ Content-Type: application/json\n   "items_total": 2, \n   "language": "", \n   "layout": "listing_view", \n+  "lock": {}, \n   "modified": "1995-07-31T17:30:00", \n   "nextPreviousEnabled": false, \n   "next_item": {}, \ndiff --git a/src/plone/restapi/tests/http-examples/image.resp b/src/plone/restapi/tests/http-examples/image.resp\nindex b7aaea684..e9edea9a2 100644\n--- a/src/plone/restapi/tests/http-examples/image.resp\n+++ b/src/plone/restapi/tests/http-examples/image.resp\n@@ -84,6 +84,7 @@ Content-Type: application/json\n   "is_folderish": false, \n   "language": "", \n   "layout": "image_view", \n+  "lock": {}, \n   "modified": "1995-07-31T17:30:00", \n   "next_item": {}, \n   "parent": {\ndiff --git a/src/plone/restapi/tests/http-examples/link.resp b/src/plone/restapi/tests/http-examples/link.resp\nindex 7e57f8c08..d598c31d9 100644\n--- a/src/plone/restapi/tests/http-examples/link.resp\n+++ b/src/plone/restapi/tests/http-examples/link.resp\n@@ -40,6 +40,7 @@ Content-Type: application/json\n   "is_folderish": false, \n   "language": "", \n   "layout": "link_redirect_view", \n+  "lock": {}, \n   "modified": "1995-07-31T17:30:00", \n   "next_item": {}, \n   "parent": {\ndiff --git a/src/plone/restapi/tests/http-examples/lock.resp b/src/plone/restapi/tests/http-examples/lock.resp\nindex adca88aee..3b957055a 100644\n--- a/src/plone/restapi/tests/http-examples/lock.resp\n+++ b/src/plone/restapi/tests/http-examples/lock.resp\n@@ -2,7 +2,10 @@ HTTP/1.1 200 OK\n Content-Type: application/json\n \n {\n+  "created": "1995-07-31T17:30:00", \n   "creator": "admin", \n+  "creator_name": "admin", \n+  "creator_url": "http://localhost:55001/plone/author/admin", \n   "locked": true, \n   "name": "plone.locking.stealable", \n   "stealable": true, \ndiff --git a/src/plone/restapi/tests/http-examples/lock_nonstealable_timeout.resp b/src/plone/restapi/tests/http-examples/lock_nonstealable_timeout.resp\nindex 120219af1..473fa9421 100644\n--- a/src/plone/restapi/tests/http-examples/lock_nonstealable_timeout.resp\n+++ b/src/plone/restapi/tests/http-examples/lock_nonstealable_timeout.resp\n@@ -2,7 +2,10 @@ HTTP/1.1 200 OK\n Content-Type: application/json\n \n {\n+  "created": "1995-07-31T17:30:00", \n   "creator": "admin", \n+  "creator_name": "admin", \n+  "creator_url": "http://localhost:55001/plone/author/admin", \n   "locked": true, \n   "name": "plone.locking.stealable", \n   "stealable": true, \ndiff --git a/src/plone/restapi/tests/http-examples/newsitem.resp b/src/plone/restapi/tests/http-examples/newsitem.resp\nindex 77d12b55e..61aafa86f 100644\n--- a/src/plone/restapi/tests/http-examples/newsitem.resp\n+++ b/src/plone/restapi/tests/http-examples/newsitem.resp\n@@ -86,6 +86,10 @@ Content-Type: application/json\n   "is_folderish": false, \n   "language": "", \n   "layout": "newsitem_view", \n+  "lock": {\n+    "locked": false, \n+    "stealable": true\n+  }, \n   "modified": "1995-07-31T17:30:00", \n   "next_item": {}, \n   "parent": {\ndiff --git a/src/plone/restapi/tests/http-examples/refresh_lock.req b/src/plone/restapi/tests/http-examples/refresh_lock.req\nindex f1268de18..4f28c6310 100644\n--- a/src/plone/restapi/tests/http-examples/refresh_lock.req\n+++ b/src/plone/restapi/tests/http-examples/refresh_lock.req\n@@ -1,3 +1,3 @@\n-POST /plone/front-page/@refresh-lock HTTP/1.1\n+PATCH /plone/front-page/@lock HTTP/1.1\n Accept: application/json\n Authorization: Basic YWRtaW46c2VjcmV0\ndiff --git a/src/plone/restapi/tests/http-examples/refresh_lock.resp b/src/plone/restapi/tests/http-examples/refresh_lock.resp\nindex adca88aee..3b957055a 100644\n--- a/src/plone/restapi/tests/http-examples/refresh_lock.resp\n+++ b/src/plone/restapi/tests/http-examples/refresh_lock.resp\n@@ -2,7 +2,10 @@ HTTP/1.1 200 OK\n Content-Type: application/json\n \n {\n+  "created": "1995-07-31T17:30:00", \n   "creator": "admin", \n+  "creator_name": "admin", \n+  "creator_url": "http://localhost:55001/plone/author/admin", \n   "locked": true, \n   "name": "plone.locking.stealable", \n   "stealable": true, \ndiff --git a/src/plone/restapi/tests/http-examples/registry_get_list.resp b/src/plone/restapi/tests/http-examples/registry_get_list.resp\nindex e89ba0cc3..9f0ca1c8b 100644\n--- a/src/plone/restapi/tests/http-examples/registry_get_list.resp\n+++ b/src/plone/restapi/tests/http-examples/registry_get_list.resp\n@@ -6,7 +6,7 @@ Content-Type: application/json\n   "batching": {\n     "@id": "http://localhost:55001/plone/@registry", \n     "first": "http://localhost:55001/plone/@registry?b_start=0", \n-    "last": "http://localhost:55001/plone/@registry?b_start=1775", \n+    "last": "http://localhost:55001/plone/@registry?b_start=1800", \n     "next": "http://localhost:55001/plone/@registry?b_start=25"\n   }, \n   "items": [\n@@ -434,5 +434,5 @@ Content-Type: application/json\n       "value": false\n     }\n   ], \n-  "items_total": 1779\n+  "items_total": 1823\n }\n\\ No newline at end of file\ndiff --git a/src/plone/restapi/tests/http-examples/search_fullobjects.resp b/src/plone/restapi/tests/http-examples/search_fullobjects.resp\nindex a97357240..22ab1ff2c 100644\n--- a/src/plone/restapi/tests/http-examples/search_fullobjects.resp\n+++ b/src/plone/restapi/tests/http-examples/search_fullobjects.resp\n@@ -43,6 +43,10 @@ Content-Type: application/json\n       "is_folderish": false, \n       "language": "", \n       "layout": "document_view", \n+      "lock": {\n+        "locked": false, \n+        "stealable": true\n+      }, \n       "modified": "1995-07-31T17:30:00", \n       "next_item": {}, \n       "parent": {\ndiff --git a/src/plone/restapi/tests/http-examples/translations_link_on_post.resp b/src/plone/restapi/tests/http-examples/translations_link_on_post.resp\nindex 64beee776..76882b870 100644\n--- a/src/plone/restapi/tests/http-examples/translations_link_on_post.resp\n+++ b/src/plone/restapi/tests/http-examples/translations_link_on_post.resp\n@@ -47,6 +47,10 @@ Location: http://localhost:55001/plone/de/mydocument\n     "token": "de"\n   }, \n   "layout": "document_view", \n+  "lock": {\n+    "locked": false, \n+    "stealable": true\n+  }, \n   "modified": "1995-07-31T17:30:00", \n   "next_item": {}, \n   "parent": {\ndiff --git a/src/plone/restapi/tests/http-examples/types_document.resp b/src/plone/restapi/tests/http-examples/types_document.resp\nindex 5d832022b..1638b304b 100644\n--- a/src/plone/restapi/tests/http-examples/types_document.resp\n+++ b/src/plone/restapi/tests/http-examples/types_document.resp\n@@ -4,293 +4,293 @@ Content-Type: application/json+schema\n {\n   "fieldsets": [\n     {\n-      "behavior": "plone", \n+      "behavior": "plone",\n       "fields": [\n-        "title", \n-        "description", \n-        "author_email", \n-        "text", \n+        "title",\n+        "description",\n+        "author_email",\n+        "text",\n         "changeNote"\n-      ], \n-      "id": "default", \n+      ],\n+      "id": "default",\n       "title": "Default"\n-    }, \n+    },\n     {\n-      "behavior": "plone", \n+      "behavior": "plone",\n       "fields": [\n-        "allow_discussion", \n-        "exclude_from_nav", \n-        "id", \n-        "versioning_enabled", \n+        "allow_discussion",\n+        "exclude_from_nav",\n+        "id",\n+        "versioning_enabled",\n         "table_of_contents"\n-      ], \n-      "id": "settings", \n+      ],\n+      "id": "settings",\n       "title": "Settings"\n-    }, \n+    },\n     {\n-      "behavior": "plone", \n+      "behavior": "plone",\n       "fields": [\n-        "subjects", \n-        "language", \n+        "subjects",\n+        "language",\n         "relatedItems"\n-      ], \n-      "id": "categorization", \n+      ],\n+      "id": "categorization",\n       "title": "Categorization"\n-    }, \n+    },\n     {\n-      "behavior": "plone", \n+      "behavior": "plone",\n       "fields": [\n-        "effective", \n+        "effective",\n         "expires"\n-      ], \n-      "id": "dates", \n+      ],\n+      "id": "dates",\n       "title": "Dates"\n-    }, \n+    },\n     {\n-      "behavior": "plone", \n+      "behavior": "plone",\n       "fields": [\n-        "creators", \n-        "contributors", \n+        "creators",\n+        "contributors",\n         "rights"\n-      ], \n-      "id": "ownership", \n+      ],\n+      "id": "ownership",\n       "title": "Ownership"\n-    }, \n+    },\n     {\n-      "behavior": "plone.dexterity.schema.generated", \n-      "description": "Contact information", \n-      "fields": [], \n-      "id": "contact_info", \n+      "behavior": "plone.dexterity.schema.generated",\n+      "description": "Contact information",\n+      "fields": [],\n+      "id": "contact_info",\n       "title": "Contact Info"\n     }\n-  ], \n+  ],\n   "layouts": [\n     "document_view"\n-  ], \n+  ],\n   "properties": {\n     "allow_discussion": {\n-      "behavior": "plone.allowdiscussion", \n+      "behavior": "plone.allowdiscussion",\n       "choices": [\n         [\n-          "True", \n+          "True",\n           "Yes"\n-        ], \n+        ],\n         [\n-          "False", \n+          "False",\n           "No"\n         ]\n-      ], \n-      "description": "Allow discussion for this content object.", \n+      ],\n+      "description": "Allow discussion for this content object.",\n       "enum": [\n-        "True", \n+        "True",\n         "False"\n-      ], \n+      ],\n       "enumNames": [\n-        "Yes", \n+        "Yes",\n         "No"\n-      ], \n-      "factory": "Choice", \n-      "title": "Allow discussion", \n-      "type": "string", \n+      ],\n+      "factory": "Choice",\n+      "title": "Allow discussion",\n+      "type": "string",\n       "vocabulary": {\n         "@id": "http://localhost:55001/plone/@sources/allow_discussion"\n       }\n-    }, \n+    },\n     "author_email": {\n-      "behavior": "plone.dexterity.schema.generated.plone_0_Document", \n-      "description": "Email of the author", \n-      "factory": "Email", \n-      "title": "Author email", \n-      "type": "string", \n+      "behavior": "plone.dexterity.schema.generated.plone_0_Document",\n+      "description": "Email of the author",\n+      "factory": "Email",\n+      "title": "Author email",\n+      "type": "string",\n       "widget": "email"\n-    }, \n+    },\n     "changeNote": {\n-      "behavior": "plone.versioning", \n-      "description": "Enter a comment that describes the changes you made.", \n-      "factory": "Text line (String)", \n-      "title": "Change Note", \n+      "behavior": "plone.versioning",\n+      "description": "Enter a comment that describes the changes you made.",\n+      "factory": "Text line (String)",\n+      "title": "Change Note",\n       "type": "string"\n-    }, \n+    },\n     "contributors": {\n-      "additionalItems": true, \n-      "behavior": "plone.dublincore", \n-      "description": "The names of people that have contributed to this item. Each contributor should be on a separate line.", \n-      "factory": "Tuple", \n+      "additionalItems": true,\n+      "behavior": "plone.dublincore",\n+      "description": "The names of people that have contributed to this item. Each contributor should be on a separate line.",\n+      "factory": "Tuple",\n       "items": {\n-        "description": "", \n-        "factory": "Text line (String)", \n-        "title": "", \n+        "description": "",\n+        "factory": "Text line (String)",\n+        "title": "",\n         "type": "string"\n-      }, \n-      "title": "Contributors", \n-      "type": "array", \n-      "uniqueItems": true, \n+      },\n+      "title": "Contributors",\n+      "type": "array",\n+      "uniqueItems": true,\n       "widgetOptions": {\n         "vocabulary": {\n           "@id": "http://localhost:55001/plone/@vocabularies/plone.app.vocabularies.Users"\n         }\n       }\n-    }, \n+    },\n     "creators": {\n-      "additionalItems": true, \n-      "behavior": "plone.dublincore", \n-      "description": "Persons responsible for creating the content of this item. Please enter a list of user names, one per line. The principal creator should come first.", \n-      "factory": "Tuple", \n+      "additionalItems": true,\n+      "behavior": "plone.dublincore",\n+      "description": "Persons responsible for creating the content of this item. Please enter a list of user names, one per line. The principal creator should come first.",\n+      "factory": "Tuple",\n       "items": {\n-        "description": "", \n-        "factory": "Text line (String)", \n-        "title": "", \n+        "description": "",\n+        "factory": "Text line (String)",\n+        "title": "",\n         "type": "string"\n-      }, \n-      "title": "Creators", \n-      "type": "array", \n-      "uniqueItems": true, \n+      },\n+      "title": "Creators",\n+      "type": "array",\n+      "uniqueItems": true,\n       "widgetOptions": {\n         "vocabulary": {\n           "@id": "http://localhost:55001/plone/@vocabularies/plone.app.vocabularies.Users"\n         }\n       }\n-    }, \n+    },\n     "description": {\n-      "behavior": "plone.dublincore", \n-      "description": "Used in item listings and search results.", \n-      "factory": "Text", \n-      "title": "Summary", \n-      "type": "string", \n+      "behavior": "plone.dublincore",\n+      "description": "Used in item listings and search results.",\n+      "factory": "Text",\n+      "title": "Summary",\n+      "type": "string",\n       "widget": "textarea"\n-    }, \n+    },\n     "effective": {\n-      "behavior": "plone.dublincore", \n-      "description": "If this date is in the future, the content will not show up in listings and searches until this date.", \n-      "factory": "Date/Time", \n-      "title": "Publishing Date", \n-      "type": "string", \n+      "behavior": "plone.dublincore",\n+      "description": "If this date is in the future, the content will not show up in listings and searches until this date.",\n+      "factory": "Date/Time",\n+      "title": "Publishing Date",\n+      "type": "string",\n       "widget": "datetime"\n-    }, \n+    },\n     "exclude_from_nav": {\n-      "behavior": "plone.excludefromnavigation", \n-      "default": false, \n-      "description": "If selected, this item will not appear in the navigation tree", \n-      "factory": "Yes/No", \n-      "title": "Exclude from navigation", \n+      "behavior": "plone.excludefromnavigation",\n+      "default": false,\n+      "description": "If selected, this item will not appear in the navigation tree",\n+      "factory": "Yes/No",\n+      "title": "Exclude from navigation",\n       "type": "boolean"\n-    }, \n+    },\n     "expires": {\n-      "behavior": "plone.dublincore", \n-      "description": "When this date is reached, the content will no longer be visible in listings and searches.", \n-      "factory": "Date/Time", \n-      "title": "Expiration Date", \n-      "type": "string", \n+      "behavior": "plone.dublincore",\n+      "description": "When this date is reached, the content will no longer be visible in listings and searches.",\n+      "factory": "Date/Time",\n+      "title": "Expiration Date",\n+      "type": "string",\n       "widget": "datetime"\n-    }, \n+    },\n     "id": {\n-      "behavior": "plone.shortname", \n-      "description": "This name will be displayed in the URL.", \n-      "factory": "Text line (String)", \n-      "title": "Short name", \n+      "behavior": "plone.shortname",\n+      "description": "This name will be displayed in the URL.",\n+      "factory": "Text line (String)",\n+      "title": "Short name",\n       "type": "string"\n-    }, \n+    },\n     "language": {\n-      "behavior": "plone.dublincore", \n-      "default": "en", \n-      "description": "", \n-      "factory": "Choice", \n-      "title": "Language", \n-      "type": "string", \n+      "behavior": "plone.dublincore",\n+      "default": "en",\n+      "description": "",\n+      "factory": "Choice",\n+      "title": "Language",\n+      "type": "string",\n       "vocabulary": {\n         "@id": "http://localhost:55001/plone/@vocabularies/plone.app.vocabularies.SupportedContentLanguages"\n       }\n-    }, \n+    },\n     "relatedItems": {\n-      "additionalItems": true, \n-      "behavior": "plone.relateditems", \n-      "default": [], \n-      "description": "", \n-      "factory": "Relation List", \n+      "additionalItems": true,\n+      "behavior": "plone.relateditems",\n+      "default": [],\n+      "description": "",\n+      "factory": "Relation List",\n       "items": {\n-        "description": "", \n-        "factory": "Relation Choice", \n-        "title": "Related", \n-        "type": "string", \n+        "description": "",\n+        "factory": "Relation Choice",\n+        "title": "Related",\n+        "type": "string",\n         "vocabulary": {\n           "@id": "http://localhost:55001/plone/@vocabularies/plone.app.vocabularies.Catalog"\n         }\n-      }, \n-      "title": "Related Items", \n-      "type": "array", \n-      "uniqueItems": true, \n+      },\n+      "title": "Related Items",\n+      "type": "array",\n+      "uniqueItems": true,\n       "widgetOptions": {\n         "pattern_options": {\n           "recentlyUsed": true\n-        }, \n+        },\n         "vocabulary": {\n           "@id": "http://localhost:55001/plone/@vocabularies/plone.app.vocabularies.Catalog"\n         }\n       }\n-    }, \n+    },\n     "rights": {\n-      "behavior": "plone.dublincore", \n-      "description": "Copyright statement or other rights information on this item.", \n-      "factory": "Text", \n-      "title": "Rights", \n-      "type": "string", \n+      "behavior": "plone.dublincore",\n+      "description": "Copyright statement or other rights information on this item.",\n+      "factory": "Text",\n+      "title": "Rights",\n+      "type": "string",\n       "widget": "textarea"\n-    }, \n+    },\n     "subjects": {\n-      "additionalItems": true, \n-      "behavior": "plone.dublincore", \n-      "description": "Tags are commonly used for ad-hoc organization of content.", \n-      "factory": "Tuple", \n+      "additionalItems": true,\n+      "behavior": "plone.dublincore",\n+      "description": "Tags are commonly used for ad-hoc organization of content.",\n+      "factory": "Tuple",\n       "items": {\n-        "description": "", \n-        "factory": "Text line (String)", \n-        "title": "", \n+        "description": "",\n+        "factory": "Text line (String)",\n+        "title": "",\n         "type": "string"\n-      }, \n-      "title": "Tags", \n-      "type": "array", \n-      "uniqueItems": true, \n+      },\n+      "title": "Tags",\n+      "type": "array",\n+      "uniqueItems": true,\n       "widgetOptions": {\n         "vocabulary": {\n           "@id": "http://localhost:55001/plone/@vocabularies/plone.app.vocabularies.Keywords"\n         }\n       }\n-    }, \n+    },\n     "table_of_contents": {\n-      "behavior": "plone.tableofcontents", \n-      "description": "If selected, this will show a table of contents at the top of the page.", \n-      "factory": "Yes/No", \n-      "title": "Table of contents", \n+      "behavior": "plone.tableofcontents",\n+      "description": "If selected, this will show a table of contents at the top of the page.",\n+      "factory": "Yes/No",\n+      "title": "Table of contents",\n       "type": "boolean"\n-    }, \n+    },\n     "text": {\n-      "behavior": "plone.richtext", \n-      "description": "", \n-      "factory": "Rich Text", \n-      "title": "Text", \n-      "type": "string", \n+      "behavior": "plone.richtext",\n+      "description": "",\n+      "factory": "Rich Text",\n+      "title": "Text",\n+      "type": "string",\n       "widget": "richtext"\n-    }, \n+    },\n     "title": {\n-      "behavior": "plone.dublincore", \n-      "description": "", \n-      "factory": "Text line (String)", \n-      "title": "Title", \n+      "behavior": "plone.dublincore",\n+      "description": "",\n+      "factory": "Text line (String)",\n+      "title": "Title",\n       "type": "string"\n-    }, \n+    },\n     "versioning_enabled": {\n-      "behavior": "plone.versioning", \n-      "default": true, \n-      "description": "Enable/disable versioning for this document.", \n-      "factory": "Yes/No", \n-      "title": "Versioning enabled", \n+      "behavior": "plone.versioning",\n+      "default": true,\n+      "description": "Enable/disable versioning for this document.",\n+      "factory": "Yes/No",\n+      "title": "Versioning enabled",\n       "type": "boolean"\n     }\n-  }, \n+  },\n   "required": [\n-    "title", \n+    "title",\n     "author_email"\n-  ], \n-  "title": "Page", \n+  ],\n+  "title": "Page",\n   "type": "object"\n-}\n\\ No newline at end of file\n+}\ndiff --git a/src/plone/restapi/tests/http-examples/types_document_get_field.resp b/src/plone/restapi/tests/http-examples/types_document_get_field.resp\nindex 88fd00268..8cc73ffa4 100644\n--- a/src/plone/restapi/tests/http-examples/types_document_get_field.resp\n+++ b/src/plone/restapi/tests/http-examples/types_document_get_field.resp\n@@ -2,10 +2,10 @@ HTTP/1.1 200 OK\n Content-Type: application/json\n \n {\n-  "behavior": "plone.dexterity.schema.generated.plone_0_Document", \n-  "description": "Email of the author", \n-  "factory": "Email", \n-  "title": "Author email", \n-  "type": "string", \n+  "behavior": "plone.dexterity.schema.generated.plone_0_Document",\n+  "description": "Email of the author",\n+  "factory": "Email",\n+  "title": "Author email",\n+  "type": "string",\n   "widget": "email"\n-}\n\\ No newline at end of file\n+}\ndiff --git a/src/plone/restapi/tests/http-examples/types_document_post_field.resp b/src/plone/restapi/tests/http-examples/types_document_post_field.resp\nindex 30127f62f..eaa3c9880 100644\n--- a/src/plone/restapi/tests/http-examples/types_document_post_field.resp\n+++ b/src/plone/restapi/tests/http-examples/types_document_post_field.resp\n@@ -2,10 +2,10 @@ HTTP/1.1 201 Created\n Content-Type: application/json\n \n {\n-  "behavior": "plone.dexterity.schema.generated.plone_0_Document", \n-  "description": "Email of the author", \n-  "factory": "Email", \n-  "title": "Author email", \n-  "type": "string", \n+  "behavior": "plone.dexterity.schema.generated.plone_0_Document",\n+  "description": "Email of the author",\n+  "factory": "Email",\n+  "title": "Author email",\n+  "type": "string",\n   "widget": "email"\n-}\n\\ No newline at end of file\n+}\ndiff --git a/src/plone/restapi/tests/http-examples/types_document_put.req b/src/plone/restapi/tests/http-examples/types_document_put.req\nindex dfddf3c0f..22a316388 100644\n--- a/src/plone/restapi/tests/http-examples/types_document_put.req\n+++ b/src/plone/restapi/tests/http-examples/types_document_put.req\n@@ -262,4 +262,4 @@ Content-Type: application/json\n     ],\n     "title": "Page",\n     "type": "object"\n-}\n\\ No newline at end of file\n+}\ndiff --git a/src/plone/restapi/tests/http-examples/unlock.req b/src/plone/restapi/tests/http-examples/unlock.req\nindex 8ea9689a8..97a1f159c 100644\n--- a/src/plone/restapi/tests/http-examples/unlock.req\n+++ b/src/plone/restapi/tests/http-examples/unlock.req\n@@ -1,3 +1,3 @@\n-POST /plone/front-page/@unlock HTTP/1.1\n+DELETE /plone/front-page/@lock HTTP/1.1\n Accept: application/json\n Authorization: Basic YWRtaW46c2VjcmV0\ndiff --git a/src/plone/restapi/tests/http-examples/unlock_force.req b/src/plone/restapi/tests/http-examples/unlock_force.req\nnew file mode 100644\nindex 000000000..a95968922\n--- /dev/null\n+++ b/src/plone/restapi/tests/http-examples/unlock_force.req\n@@ -0,0 +1,8 @@\n+DELETE /plone/front-page/@lock HTTP/1.1\n+Accept: application/json\n+Authorization: Basic YWRtaW46c2VjcmV0\n+Content-Type: application/json\n+\n+{\n+    "force": true\n+}\n\\ No newline at end of file\ndiff --git a/src/plone/restapi/tests/http-examples/unlock_force.resp b/src/plone/restapi/tests/http-examples/unlock_force.resp\nnew file mode 100644\nindex 000000000..52852385e\n--- /dev/null\n+++ b/src/plone/restapi/tests/http-examples/unlock_force.resp\n@@ -0,0 +1,7 @@\n+HTTP/1.1 200 OK\n+Content-Type: application/json\n+\n+{\n+  "locked": false, \n+  "stealable": true\n+}\n\\ No newline at end of file\ndiff --git a/src/plone/restapi/tests/http-examples/workingcopy_baseline_get.resp b/src/plone/restapi/tests/http-examples/workingcopy_baseline_get.resp\nindex 078317ec6..92a8ab181 100644\n--- a/src/plone/restapi/tests/http-examples/workingcopy_baseline_get.resp\n+++ b/src/plone/restapi/tests/http-examples/workingcopy_baseline_get.resp\n@@ -39,6 +39,18 @@ Content-Type: application/json\n   "is_folderish": false, \n   "language": "", \n   "layout": "document_view", \n+  "lock": {\n+    "created": "1995-07-31T17:30:00", \n+    "creator": "admin", \n+    "creator_name": "admin", \n+    "creator_url": "http://localhost:55001/plone/author/admin", \n+    "locked": true, \n+    "name": "iterate.lock", \n+    "stealable": false, \n+    "time": 807201000.0, \n+    "timeout": 4294967280, \n+    "token": "0.3217605825198149-0.016714612599692202-00105A989226:1629895144.744"\n+  }, \n   "modified": "1995-07-31T17:30:00", \n   "next_item": {\n     "@id": "http://localhost:55001/plone/copy_of_document", \ndiff --git a/src/plone/restapi/tests/http-examples/workingcopy_wc_get.resp b/src/plone/restapi/tests/http-examples/workingcopy_wc_get.resp\nindex 415b087cd..9c4216f49 100644\n--- a/src/plone/restapi/tests/http-examples/workingcopy_wc_get.resp\n+++ b/src/plone/restapi/tests/http-examples/workingcopy_wc_get.resp\n@@ -39,6 +39,10 @@ Content-Type: application/json\n   "is_folderish": false, \n   "language": "", \n   "layout": "document_view", \n+  "lock": {\n+    "locked": false, \n+    "stealable": true\n+  }, \n   "modified": "1995-07-31T17:30:00", \n   "next_item": {}, \n   "parent": {\ndiff --git a/src/plone/restapi/tests/test_documentation.py b/src/plone/restapi/tests/test_documentation.py\nindex 36fbb2cfd..b5ee247b0 100644\n--- a/src/plone/restapi/tests/test_documentation.py\n+++ b/src/plone/restapi/tests/test_documentation.py\n@@ -1466,15 +1466,21 @@ def test_locking_lock_nonstealable_and_timeout(self):\n     def test_locking_unlock(self):\n         url = f"{self.document.absolute_url()}/@lock"\n         response = self.api_session.post(url)\n-        url = f"{self.document.absolute_url()}/@unlock"\n-        response = self.api_session.post(url)\n+        url = f"{self.document.absolute_url()}/@lock"\n+        response = self.api_session.delete(url)\n         save_request_and_response_for_docs("unlock", response)\n \n-    def test_locking_refresh_lock(self):\n+    def test_locking_unlock_force(self):\n         url = f"{self.document.absolute_url()}/@lock"\n         response = self.api_session.post(url)\n-        url = f"{self.document.absolute_url()}/@refresh-lock"\n+        url = f"{self.document.absolute_url()}/@lock"\n+        response = self.api_session.delete(url, json={"force": True})\n+        save_request_and_response_for_docs("unlock_force", response)\n+\n+    def test_locking_refresh_lock(self):\n+        url = f"{self.document.absolute_url()}/@lock"\n         response = self.api_session.post(url)\n+        response = self.api_session.patch(url)\n         # Replace dynamic lock token with a static one\n         response._content = re.sub(\n             b\'"token": "[^"]+"\',\ndiff --git a/src/plone/restapi/tests/test_locking.py b/src/plone/restapi/tests/test_locking.py\nindex 52bb16ae8..ed18cc8d4 100644\n--- a/src/plone/restapi/tests/test_locking.py\n+++ b/src/plone/restapi/tests/test_locking.py\n@@ -59,7 +59,7 @@ def test_unlock_object(self):\n         lockable = ILockable(self.doc)\n         lockable.lock()\n         transaction.commit()\n-        response = self.api_session.post("/@unlock")\n+        response = self.api_session.delete("/@lock")\n         transaction.commit()\n \n         self.assertEqual(response.status_code, 200)\n@@ -70,7 +70,7 @@ def test_refresh_lock(self):\n         lockable.lock()\n         modified = self.doc.wl_lockValues()[0].getModifiedTime()\n         transaction.commit()\n-        response = self.api_session.post("/@refresh-lock")\n+        response = self.api_session.patch("/@lock")\n         transaction.commit()\n \n         self.assertEqual(response.status_code, 200)\n'

