Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2017-09-27T18:07:11+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/819feb066c82c928cfa6f799453223e7e0a059a6

Remove obsolete HAS_MULTILINGUAL from utils

Files changed:
M CHANGES.rst
M plone/app/contenttypes/migration/dxmigration.py
M plone/app/contenttypes/migration/utils.py

diff --git a/CHANGES.rst b/CHANGES.rst
index c4434778..841cfad2 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -15,6 +15,9 @@ New features:
 
 Bug fixes:
 
+- Remove obsolete HAS_MULTILINGUAL from utils.
+  [pbauer]
+
 - Clean up all ``__init__`` methods of the browser views to avoid unnecessary code execution.
   [thet]
 
diff --git a/plone/app/contenttypes/migration/dxmigration.py b/plone/app/contenttypes/migration/dxmigration.py
index 3cd017b8..33c6908d 100644
--- a/plone/app/contenttypes/migration/dxmigration.py
+++ b/plone/app/contenttypes/migration/dxmigration.py
@@ -1,7 +1,6 @@
 # -*- coding: utf-8 -*-
 from plone.app.contenttypes.interfaces import IEvent
 from plone.app.contenttypes.migration.field_migrators import datetime_fixer
-from plone.app.contenttypes.migration.utils import HAS_MULTILINGUAL
 from plone.dexterity.interfaces import IDexterityContent
 from plone.dexterity.interfaces import IDexterityFTI
 from plone.event.utils import default_timezone
@@ -172,10 +171,7 @@ def migrate_base_class_to_new_class(obj,
 
 def list_of_objects_with_changed_base_class(context):
     catalog = getToolByName(context, 'portal_catalog')
-    query = {'object_provides': IDexterityContent.__identifier__}
-    if HAS_MULTILINGUAL and 'Language' in catalog.indexes():
-        query['Language'] = 'all'
-    for brain in catalog(query):
+    for brain in catalog(object_provides=IDexterityContent.__identifier__):
         try:
             obj = brain.getObject()
         except NotFound:
diff --git a/plone/app/contenttypes/migration/utils.py b/plone/app/contenttypes/migration/utils.py
index 64ecca54..e3fde687 100644
--- a/plone/app/contenttypes/migration/utils.py
+++ b/plone/app/contenttypes/migration/utils.py
@@ -47,27 +47,10 @@
 import json
 import logging
 import os
-import pkg_resources
 
 
 logger = logging.getLogger(__name__)
 
-# Is there a multilingual addon?
-try:
-    pkg_resources.get_distribution('Products.LinguaPlone')
-except pkg_resources.DistributionNotFound:
-    HAS_MULTILINGUAL = False
-else:
-    HAS_MULTILINGUAL = True
-
-if not HAS_MULTILINGUAL:
-    try:
-        pkg_resources.get_distribution('plone.app.multilingual')
-    except pkg_resources.DistributionNotFound:
-        HAS_MULTILINGUAL = False
-    else:
-        HAS_MULTILINGUAL = True
-
 
 def isSchemaExtended(iface):
     """Return a list of fields added by archetypes.schemaextender


Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2017-09-27T19:53:37+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/3f03f97e97a1b7c28f42f15042a53e6eabb6ced9

Merge pull request #429 from plone/remove_HAS_MULTILINGUAL

Remove obsolete HAS_MULTILINGUAL from utils

Files changed:
M CHANGES.rst
M plone/app/contenttypes/migration/dxmigration.py
M plone/app/contenttypes/migration/utils.py

diff --git a/CHANGES.rst b/CHANGES.rst
index c4434778..841cfad2 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -15,6 +15,9 @@ New features:
 
 Bug fixes:
 
+- Remove obsolete HAS_MULTILINGUAL from utils.
+  [pbauer]
+
 - Clean up all ``__init__`` methods of the browser views to avoid unnecessary code execution.
   [thet]
 
diff --git a/plone/app/contenttypes/migration/dxmigration.py b/plone/app/contenttypes/migration/dxmigration.py
index 3cd017b8..33c6908d 100644
--- a/plone/app/contenttypes/migration/dxmigration.py
+++ b/plone/app/contenttypes/migration/dxmigration.py
@@ -1,7 +1,6 @@
 # -*- coding: utf-8 -*-
 from plone.app.contenttypes.interfaces import IEvent
 from plone.app.contenttypes.migration.field_migrators import datetime_fixer
-from plone.app.contenttypes.migration.utils import HAS_MULTILINGUAL
 from plone.dexterity.interfaces import IDexterityContent
 from plone.dexterity.interfaces import IDexterityFTI
 from plone.event.utils import default_timezone
@@ -172,10 +171,7 @@ def migrate_base_class_to_new_class(obj,
 
 def list_of_objects_with_changed_base_class(context):
     catalog = getToolByName(context, 'portal_catalog')
-    query = {'object_provides': IDexterityContent.__identifier__}
-    if HAS_MULTILINGUAL and 'Language' in catalog.indexes():
-        query['Language'] = 'all'
-    for brain in catalog(query):
+    for brain in catalog(object_provides=IDexterityContent.__identifier__):
         try:
             obj = brain.getObject()
         except NotFound:
diff --git a/plone/app/contenttypes/migration/utils.py b/plone/app/contenttypes/migration/utils.py
index 64ecca54..e3fde687 100644
--- a/plone/app/contenttypes/migration/utils.py
+++ b/plone/app/contenttypes/migration/utils.py
@@ -47,27 +47,10 @@
 import json
 import logging
 import os
-import pkg_resources
 
 
 logger = logging.getLogger(__name__)
 
-# Is there a multilingual addon?
-try:
-    pkg_resources.get_distribution('Products.LinguaPlone')
-except pkg_resources.DistributionNotFound:
-    HAS_MULTILINGUAL = False
-else:
-    HAS_MULTILINGUAL = True
-
-if not HAS_MULTILINGUAL:
-    try:
-        pkg_resources.get_distribution('plone.app.multilingual')
-    except pkg_resources.DistributionNotFound:
-        HAS_MULTILINGUAL = False
-    else:
-        HAS_MULTILINGUAL = True
-
 
 def isSchemaExtended(iface):
     """Return a list of fields added by archetypes.schemaextender


