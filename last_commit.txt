Repository: plone.app.layout


Branch: refs/heads/master
Date: 2022-05-07T11:27:04+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/b88d1c79e94427d523607a78eac45c6dbb2d44f3

Revert "Deprecate unused code"

This reverts commit b8cf3181eea0e910f2df2ec9ee36a02a90158bd8.

Files changed:
M plone/app/layout/viewlets/content.py
D news/305.fixed

b'diff --git a/news/305.fixed b/news/305.fixed\ndeleted file mode 100644\nindex 11b859b3..00000000\n--- a/news/305.fixed\n+++ /dev/null\n@@ -1 +0,0 @@\n-Deprecate unused code [ale-rt]\ndiff --git a/plone/app/layout/viewlets/content.py b/plone/app/layout/viewlets/content.py\nindex 0bf835da..93a27f26 100644\n--- a/plone/app/layout/viewlets/content.py\n+++ b/plone/app/layout/viewlets/content.py\n@@ -26,7 +26,6 @@\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n from zope.component import queryMultiAdapter\n-from zope.deprecation import deprecation\n \n import logging\n import pkg_resources\n@@ -64,17 +63,11 @@ class DocumentBylineViewlet(ViewletBase):\n \n     def update(self):\n         super().update()\n+        self.context_state = getMultiAdapter(\n+            (self.context, self.request), name="plone_context_state"\n+        )\n         self.anonymous = self.portal_state.anonymous()\n-\n-    @property\n-    @deprecation.deprecate("The context_state property is unused and will be removed in Plone 7")\n-    def context_state(self):\n-        return getMultiAdapter((self.context, self.request), name="plone_context_state")\n-\n-    @property\n-    @deprecation.deprecate("The has_pam property is unused and will be removed in Plone 7")\n-    def has_pam(self):\n-        return HAS_PAM\n+        self.has_pam = HAS_PAM\n \n     @property\n     @memoize_contextless\n@@ -97,16 +90,13 @@ def show_about(self):\n         )\n         return not self.anonymous or settings.allow_anon_views_about\n \n-    @deprecation.deprecate("The creator method is unused and will be removed in Plone 7")\n     def creator(self):\n         return self.context.Creator()\n \n-    @deprecation.deprecate("The author method is unused and will be removed in Plone 7")\n     def author(self):\n         membership = getToolByName(self.context, "portal_membership")\n         return membership.getMemberInfo(self.creator())\n \n-    @deprecation.deprecate("The authorname method is unused and will be removed in Plone 7")\n     def authorname(self):\n         author = self.author()\n         return author and author["fullname"] or self.creator()\n@@ -130,7 +120,6 @@ def isExpired(self):\n             return self.context.expires().isPast()\n         return False\n \n-    @deprecation.deprecate("The toLocalizedTime method is unused and will be removed in Plone 7")\n     def toLocalizedTime(self, time, long_format=None, time_only=None):\n         """Convert time to localized time"""\n         util = getToolByName(self.context, "translation_service")\n'

Repository: plone.app.layout


Branch: refs/heads/master
Date: 2022-05-07T11:27:09+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/f1917e2a01b3386c0604785df93068b2f59835cc

Revert "Display all the creators if they are more than one"

This reverts commit 0e82a62b3e72a708e5831ffbffe26a81dceb333d.

Files changed:
M plone/app/layout/viewlets/content.py
M plone/app/layout/viewlets/document_byline.pt
D news/304.fixed

b'diff --git a/news/304.fixed b/news/304.fixed\ndeleted file mode 100644\nindex ea6235ab..00000000\n--- a/news/304.fixed\n+++ /dev/null\n@@ -1 +0,0 @@\n-Display all the creators if they are more than one [ale-rt]\ndiff --git a/plone/app/layout/viewlets/content.py b/plone/app/layout/viewlets/content.py\nindex 93a27f26..92fe59e4 100644\n--- a/plone/app/layout/viewlets/content.py\n+++ b/plone/app/layout/viewlets/content.py\n@@ -7,11 +7,8 @@\n from plone.app.multilingual.browser.vocabularies import translated_languages\n from plone.app.multilingual.interfaces import ITranslatable\n from plone.app.multilingual.interfaces import ITranslationManager\n-from plone.base.interfaces import ISecuritySchema\n-from plone.base.interfaces import ISiteSchema\n from plone.base.utils import base_hasattr\n from plone.memoize.instance import memoize\n-from plone.memoize.instance import memoize_contextless\n from plone.protect.authenticator import createToken\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import _checkPermission\n@@ -19,10 +16,11 @@\n from Products.CMFCore.WorkflowCore import WorkflowException\n from Products.CMFEditions.Permissions import AccessPreviousVersions\n from Products.CMFPlone import PloneMessageFactory as _\n+from plone.base.interfaces import ISecuritySchema\n+from plone.base.interfaces import ISiteSchema\n from Products.CMFPlone.utils import log\n from Products.Five.browser import BrowserView\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n-from urllib.parse import urlencode\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n from zope.component import queryMultiAdapter\n@@ -69,11 +67,6 @@ def update(self):\n         self.anonymous = self.portal_state.anonymous()\n         self.has_pam = HAS_PAM\n \n-    @property\n-    @memoize_contextless\n-    def portal_membership(self):\n-        return getToolByName(self.context, "portal_membership")\n-\n     def show(self):\n         registry = getUtility(IRegistry)\n         settings = registry.forInterface(\n@@ -101,15 +94,6 @@ def authorname(self):\n         author = self.author()\n         return author and author["fullname"] or self.creator()\n \n-    def get_url_path(self, user_id):\n-        if "/" in user_id:\n-            qs = urlencode({"author": user_id})\n-            return f"author/?{qs}"\n-        return f"author/{user_id}"\n-\n-    def get_fullname(self, user_id):\n-        return self.portal_membership.getMemberInfo(user_id).get("fullname") or user_id\n-\n     def show_modification_date(self):\n         return not self.context.effective_date or (\n             self.context.effective_date.Date() < self.context.modification_date.Date()\ndiff --git a/plone/app/layout/viewlets/document_byline.pt b/plone/app/layout/viewlets/document_byline.pt\nindex 0bd54c2d..0e215dc5 100644\n--- a/plone/app/layout/viewlets/document_byline.pt\n+++ b/plone/app/layout/viewlets/document_byline.pt\n@@ -1,18 +1,28 @@\n <section id="section-byline" i18n:domain="plone" tal:condition="view/show">\n-  <tal:creators\n-      tal:define="creator_ids here/creators"\n-      tal:condition="python:creator_ids and view.show_about()"\n-  >\n-    <tal:i18n i18n:translate="">by</tal:i18n>\n-    <tal:creator repeat="creator_id creator_ids">\n-      <a class="btn btn-sm btn-outline-primary"\n-          href="${context/@@plone_portal_state/navigation_root_url}/${python: view.get_url_path(creator_id)"\n-      >${python:view.get_fullname(creator_id)}</a>\n-    </tal:creator>\n-    \xe2\x80\x94\n-  </tal:creators>\n \n-  <tal:dates define="published view/pub_date;\n+  <tal:creator tal:define="creator_short_form view/creator;" \n+      tal:condition="python:creator_short_form and view.show_about()">\n+\n+  <tal:name tal:define="creator_long_form string:?author=${creator_short_form};\n+                        creator_is_openid python:\'/\' in creator_short_form;\n+                        creator_id python:(creator_short_form, creator_long_form)[creator_is_openid];">\n+\n+    <span class="documentAuthor">\n+\n+      <tal:i18n i18n:translate="label_by_author">\n+      by\n+      <a href="#"\n+         tal:attributes="href string:${context/@@plone_portal_state/navigation_root_url}/author/${creator_id}"\n+         tal:content="view/authorname"\n+         tal:omit-tag="python:view.author() is None"\n+         i18n:name="author">Roland Barthes</a>\n+      </tal:i18n>\n+         \xe2\x80\x94\n+    </span>\n+  </tal:name>\n+  </tal:creator>\n+\n+  <tal:dates define="published view/pub_date; \n                      modified context/ModificationDate;\n                      show_modification_date python:view.show_modification_date()">\n   <span class="documentPublished" tal:condition="published">\n'

