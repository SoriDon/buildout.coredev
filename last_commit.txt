Repository: plone.app.layout


Branch: refs/heads/master
Date: 2018-01-25T12:18:50+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.layout/commit/065f437258124dcdbc8d4af81083f8e1ce4543f7

run sixer and isort

Files changed:
M CHANGES.rst
M bootstrap.py
M plone/app/layout/analytics/tests/test_doctests.py
M plone/app/layout/navigation/navtree.py
M plone/app/layout/sitemap/tests/test_sitemap.py
M plone/app/layout/viewlets/common.py
M plone/app/layout/viewlets/content.py
M setup.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 4dc2cfc..88f933d 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -16,7 +16,7 @@ New features:
 Bug fixes:
 
 - Imports are Python3 compatible
-  [ale-rt]
+  [ale-rt, jensens]
 
 - Fix for situations where pathbar viewlet variables were undefined in toolbar context
   [tomgross]
diff --git a/bootstrap.py b/bootstrap.py
index 1b28969..dbe23fd 100644
--- a/bootstrap.py
+++ b/bootstrap.py
@@ -18,12 +18,15 @@
 use the -c option to specify an alternate configuration file.
 """
 
+from optparse import OptionParser
+
 import os
 import shutil
+import subprocess
 import sys
 import tempfile
+import zc.buildout.buildout
 
-from optparse import OptionParser
 
 tmpeggs = tempfile.mkdtemp()
 
@@ -146,7 +149,6 @@ def _final_version(parsed_version):
     requirement = '=='.join((requirement, version))
 cmd.append(requirement)
 
-import subprocess
 if subprocess.call(cmd, env=dict(os.environ, PYTHONPATH=setuptools_path)) != 0:
     raise Exception(
         "Failed to execute command:\n%s",
@@ -157,7 +159,6 @@ def _final_version(parsed_version):
 
 ws.add_entry(tmpeggs)
 ws.require(requirement)
-import zc.buildout.buildout
 
 if not [a for a in args if '=' not in a]:
     args.append('bootstrap')
diff --git a/plone/app/layout/analytics/tests/test_doctests.py b/plone/app/layout/analytics/tests/test_doctests.py
index d51e8fc..af4a0e6 100644
--- a/plone/app/layout/analytics/tests/test_doctests.py
+++ b/plone/app/layout/analytics/tests/test_doctests.py
@@ -1,6 +1,6 @@
 # -*- coding: utf-8 -*-
-from plone.testing import layered
 from plone.app.layout.testing import FUNCTIONAL_TESTING
+from plone.testing import layered
 
 import doctest
 import unittest
diff --git a/plone/app/layout/navigation/navtree.py b/plone/app/layout/navigation/navtree.py
index d43695c..3d18288 100644
--- a/plone/app/layout/navigation/navtree.py
+++ b/plone/app/layout/navigation/navtree.py
@@ -8,6 +8,8 @@
 from types import StringType
 from zope.interface import implementer
 
+import six
+
 
 @implementer(INavtreeStrategy)
 class NavtreeStrategyBase(object):
@@ -179,7 +181,7 @@ def buildFolderTree(context, obj=None, query={},
 
     # Allow the strategy to suppliment the query for keys not already
     # present in the query such as sorting and omitting default pages
-    for key, value in strategy.supplimentQuery.iteritems():
+    for key, value in six.iteritems(strategy.supplimentQuery):
         if key not in query:
             query[key] = value
 
diff --git a/plone/app/layout/sitemap/tests/test_sitemap.py b/plone/app/layout/sitemap/tests/test_sitemap.py
index cbcc628..41d038b 100644
--- a/plone/app/layout/sitemap/tests/test_sitemap.py
+++ b/plone/app/layout/sitemap/tests/test_sitemap.py
@@ -74,7 +74,7 @@ def test_disabled(self):
         self.site_settings.enable_sitemap = False
         try:
             self.sitemap()
-        except Exception, e:
+        except Exception as e:
             # zope2 and repoze.zope2 use different publishers and raise
             # different exceptions. but both implement INotFound.
             self.assertTrue(INotFound.providedBy(e))
diff --git a/plone/app/layout/viewlets/common.py b/plone/app/layout/viewlets/common.py
index b961968..5cf5f76 100644
--- a/plone/app/layout/viewlets/common.py
+++ b/plone/app/layout/viewlets/common.py
@@ -17,7 +17,7 @@
 from Products.CMFPlone.utils import safe_unicode
 from Products.Five.browser import BrowserView
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
-from urllib import unquote
+from six.moves.urllib.parse import unquote
 from zope.component import getMultiAdapter
 from zope.component import getUtility
 from zope.component import queryMultiAdapter
diff --git a/plone/app/layout/viewlets/content.py b/plone/app/layout/viewlets/content.py
index 563cc56..07e262d 100644
--- a/plone/app/layout/viewlets/content.py
+++ b/plone/app/layout/viewlets/content.py
@@ -22,6 +22,7 @@
 from Products.CMFPlone.utils import log
 from Products.Five.browser import BrowserView
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
+from six.moves import range
 from zope.component import getMultiAdapter
 from zope.component import getUtility
 from zope.component import queryMultiAdapter
@@ -460,7 +461,7 @@ def morphVersionDataToHistoryFormat(vdata, version_id):
         retrieve = history.retrieve
         getId = history.getVersionId
         # Count backwards from most recent to least recent
-        for i in xrange(history.getLength(countPurged=False) - 1, -1, -1):
+        for i in range(history.getLength(countPurged=False) - 1, -1, -1):
             version_history.append(
                 morphVersionDataToHistoryFormat(retrieve(i, countPurged=False),
                                                 getId(i, countPurged=False)))
diff --git a/setup.py b/setup.py
index 265d9e3..6cefa9f 100644
--- a/setup.py
+++ b/setup.py
@@ -1,4 +1,6 @@
-from setuptools import setup, find_packages
+from setuptools import find_packages
+from setuptools import setup
+
 
 version = '2.8.0.dev0'
 


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2018-01-28T17:10:09+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.layout/commit/bf940ce2786945dae063cd4d9edf303161e798b9

no special jenkins, bootstrap needed

Files changed:
D bootstrap.py
D jenkins.cfg

diff --git a/bootstrap.py b/bootstrap.py
deleted file mode 100644
index dbe23fd..0000000
--- a/bootstrap.py
+++ /dev/null
@@ -1,171 +0,0 @@
-##############################################################################
-#
-# Copyright (c) 2006 Zope Foundation and Contributors.
-# All Rights Reserved.
-#
-# This software is subject to the provisions of the Zope Public License,
-# Version 2.1 (ZPL).  A copy of the ZPL should accompany this distribution.
-# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY AND ALL EXPRESS OR IMPLIED
-# WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
-# WARRANTIES OF TITLE, MERCHANTABILITY, AGAINST INFRINGEMENT, AND FITNESS
-# FOR A PARTICULAR PURPOSE.
-#
-##############################################################################
-"""Bootstrap a buildout-based project
-
-Simply run this script in a directory containing a buildout.cfg.
-The script accepts buildout command-line options, so you can
-use the -c option to specify an alternate configuration file.
-"""
-
-from optparse import OptionParser
-
-import os
-import shutil
-import subprocess
-import sys
-import tempfile
-import zc.buildout.buildout
-
-
-tmpeggs = tempfile.mkdtemp()
-
-usage = '''\
-[DESIRED PYTHON FOR BUILDOUT] bootstrap.py [options]
-
-Bootstraps a buildout-based project.
-
-Simply run this script in a directory containing a buildout.cfg, using the
-Python that you want bin/buildout to use.
-
-Note that by using --find-links to point to local resources, you can keep 
-this script from going over the network.
-'''
-
-parser = OptionParser(usage=usage)
-parser.add_option("-v", "--version", help="use a specific zc.buildout version")
-
-parser.add_option("-t", "--accept-buildout-test-releases",
-                  dest='accept_buildout_test_releases',
-                  action="store_true", default=False,
-                  help=("Normally, if you do not specify a --version, the "
-                        "bootstrap script and buildout gets the newest "
-                        "*final* versions of zc.buildout and its recipes and "
-                        "extensions for you.  If you use this flag, "
-                        "bootstrap and buildout will get the newest releases "
-                        "even if they are alphas or betas."))
-parser.add_option("-c", "--config-file",
-                  help=("Specify the path to the buildout configuration "
-                        "file to be used."))
-parser.add_option("-f", "--find-links",
-                  help=("Specify a URL to search for buildout releases"))
-
-
-options, args = parser.parse_args()
-
-######################################################################
-# load/install setuptools
-
-to_reload = False
-try:
-    import pkg_resources
-    import setuptools
-except ImportError:
-    ez = {}
-
-    try:
-        from urllib.request import urlopen
-    except ImportError:
-        from urllib2 import urlopen
-
-    # XXX use a more permanent ez_setup.py URL when available.
-    exec(urlopen('https://bitbucket.org/pypa/setuptools/raw/0.7.2/ez_setup.py'
-                ).read(), ez)
-    setup_args = dict(to_dir=tmpeggs, download_delay=0)
-    ez['use_setuptools'](**setup_args)
-
-    if to_reload:
-        reload(pkg_resources)
-    import pkg_resources
-    # This does not (always?) update the default working set.  We will
-    # do it.
-    for path in sys.path:
-        if path not in pkg_resources.working_set.entries:
-            pkg_resources.working_set.add_entry(path)
-
-######################################################################
-# Install buildout
-
-ws = pkg_resources.working_set
-
-cmd = [sys.executable, '-c',
-       'from setuptools.command.easy_install import main; main()',
-       '-mZqNxd', tmpeggs]
-
-find_links = os.environ.get(
-    'bootstrap-testing-find-links',
-    options.find_links or
-    ('http://downloads.buildout.org/'
-     if options.accept_buildout_test_releases else None)
-    )
-if find_links:
-    cmd.extend(['-f', find_links])
-
-setuptools_path = ws.find(
-    pkg_resources.Requirement.parse('setuptools')).location
-
-requirement = 'zc.buildout'
-version = options.version
-if version is None and not options.accept_buildout_test_releases:
-    # Figure out the most recent final version of zc.buildout.
-    import setuptools.package_index
-    _final_parts = '*final-', '*final'
-
-    def _final_version(parsed_version):
-        for part in parsed_version:
-            if (part[:1] == '*') and (part not in _final_parts):
-                return False
-        return True
-    index = setuptools.package_index.PackageIndex(
-        search_path=[setuptools_path])
-    if find_links:
-        index.add_find_links((find_links,))
-    req = pkg_resources.Requirement.parse(requirement)
-    if index.obtain(req) is not None:
-        best = []
-        bestv = None
-        for dist in index[req.project_name]:
-            distv = dist.parsed_version
-            if _final_version(distv):
-                if bestv is None or distv > bestv:
-                    best = [dist]
-                    bestv = distv
-                elif distv == bestv:
-                    best.append(dist)
-        if best:
-            best.sort()
-            version = best[-1].version
-if version:
-    requirement = '=='.join((requirement, version))
-cmd.append(requirement)
-
-if subprocess.call(cmd, env=dict(os.environ, PYTHONPATH=setuptools_path)) != 0:
-    raise Exception(
-        "Failed to execute command:\n%s",
-        repr(cmd)[1:-1])
-
-######################################################################
-# Import and run buildout
-
-ws.add_entry(tmpeggs)
-ws.require(requirement)
-
-if not [a for a in args if '=' not in a]:
-    args.append('bootstrap')
-
-# if -c was provided, we push it back into args for buildout' main function
-if options.config_file is not None:
-    args[0:0] = ['-c', options.config_file]
-
-zc.buildout.buildout.main(args)
-shutil.rmtree(tmpeggs)
diff --git a/jenkins.cfg b/jenkins.cfg
deleted file mode 100644
index e718067..0000000
--- a/jenkins.cfg
+++ /dev/null
@@ -1,38 +0,0 @@
-[buildout]
-extends =
-    https://raw.github.com/collective/buildout.plonetest/master/plone-4.3.x.cfg
-    https://raw.github.com/plone/buildout.jenkins/master/jenkins.cfg
-    https://raw.github.com/plone/buildout.jenkins/master/jenkins-code-analysis.cfg
-jenkins-test-eggs = plone.app.layout [test]
-jenkins-test-directories = plone/app/layout
-parts +=
-    flake8
-    autopep8
-    code-analysis
-extensions = mr.developer
-auto-checkout =
-    plone.recipe.codeanalysis
-    collective.xmltestreport
-
-[flake8]
-recipe = zc.recipe.egg
-eggs = flake8
-entry-points = flake8=flake8.main:main
-
-[autopep8]
-recipe = zc.recipe.egg
-eggs = autopep8
-
-[code-analysis]
-recipe = plone.recipe.codeanalysis
-
-[sources]
-plone.recipe.codeanalysis = git git://github.com/plone/plone.recipe.codeanalysis.git pushurl=git@github.com:plone/plone.recipe.codeanalysis.git
-collective.xmltestreport = git git://github.com/collective/collective.xmltestreport.git
-
-[versions]
-plone.app.layout =
-zope.interface = 3.6.1
-zc.buildout = 2.2.1
-zc.recipe.egg = 2.0.1
-setuptools = 1.3.2


Repository: plone.app.layout


Branch: refs/heads/master
Date: 2018-01-28T17:10:22+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.layout/commit/b422b50e37beb51b3e2ad308d27045ddabcd45c5

Merge pull request #137 from plone/py3sixer

Py3: Sixer

Files changed:
M CHANGES.rst
M plone/app/layout/analytics/tests/test_doctests.py
M plone/app/layout/navigation/navtree.py
M plone/app/layout/sitemap/tests/test_sitemap.py
M plone/app/layout/viewlets/common.py
M plone/app/layout/viewlets/content.py
M setup.py
D bootstrap.py
D jenkins.cfg

diff --git a/CHANGES.rst b/CHANGES.rst
index 4dc2cfc..88f933d 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -16,7 +16,7 @@ New features:
 Bug fixes:
 
 - Imports are Python3 compatible
-  [ale-rt]
+  [ale-rt, jensens]
 
 - Fix for situations where pathbar viewlet variables were undefined in toolbar context
   [tomgross]
diff --git a/bootstrap.py b/bootstrap.py
deleted file mode 100644
index 1b28969..0000000
--- a/bootstrap.py
+++ /dev/null
@@ -1,170 +0,0 @@
-##############################################################################
-#
-# Copyright (c) 2006 Zope Foundation and Contributors.
-# All Rights Reserved.
-#
-# This software is subject to the provisions of the Zope Public License,
-# Version 2.1 (ZPL).  A copy of the ZPL should accompany this distribution.
-# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY AND ALL EXPRESS OR IMPLIED
-# WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
-# WARRANTIES OF TITLE, MERCHANTABILITY, AGAINST INFRINGEMENT, AND FITNESS
-# FOR A PARTICULAR PURPOSE.
-#
-##############################################################################
-"""Bootstrap a buildout-based project
-
-Simply run this script in a directory containing a buildout.cfg.
-The script accepts buildout command-line options, so you can
-use the -c option to specify an alternate configuration file.
-"""
-
-import os
-import shutil
-import sys
-import tempfile
-
-from optparse import OptionParser
-
-tmpeggs = tempfile.mkdtemp()
-
-usage = '''\
-[DESIRED PYTHON FOR BUILDOUT] bootstrap.py [options]
-
-Bootstraps a buildout-based project.
-
-Simply run this script in a directory containing a buildout.cfg, using the
-Python that you want bin/buildout to use.
-
-Note that by using --find-links to point to local resources, you can keep 
-this script from going over the network.
-'''
-
-parser = OptionParser(usage=usage)
-parser.add_option("-v", "--version", help="use a specific zc.buildout version")
-
-parser.add_option("-t", "--accept-buildout-test-releases",
-                  dest='accept_buildout_test_releases',
-                  action="store_true", default=False,
-                  help=("Normally, if you do not specify a --version, the "
-                        "bootstrap script and buildout gets the newest "
-                        "*final* versions of zc.buildout and its recipes and "
-                        "extensions for you.  If you use this flag, "
-                        "bootstrap and buildout will get the newest releases "
-                        "even if they are alphas or betas."))
-parser.add_option("-c", "--config-file",
-                  help=("Specify the path to the buildout configuration "
-                        "file to be used."))
-parser.add_option("-f", "--find-links",
-                  help=("Specify a URL to search for buildout releases"))
-
-
-options, args = parser.parse_args()
-
-######################################################################
-# load/install setuptools
-
-to_reload = False
-try:
-    import pkg_resources
-    import setuptools
-except ImportError:
-    ez = {}
-
-    try:
-        from urllib.request import urlopen
-    except ImportError:
-        from urllib2 import urlopen
-
-    # XXX use a more permanent ez_setup.py URL when available.
-    exec(urlopen('https://bitbucket.org/pypa/setuptools/raw/0.7.2/ez_setup.py'
-                ).read(), ez)
-    setup_args = dict(to_dir=tmpeggs, download_delay=0)
-    ez['use_setuptools'](**setup_args)
-
-    if to_reload:
-        reload(pkg_resources)
-    import pkg_resources
-    # This does not (always?) update the default working set.  We will
-    # do it.
-    for path in sys.path:
-        if path not in pkg_resources.working_set.entries:
-            pkg_resources.working_set.add_entry(path)
-
-######################################################################
-# Install buildout
-
-ws = pkg_resources.working_set
-
-cmd = [sys.executable, '-c',
-       'from setuptools.command.easy_install import main; main()',
-       '-mZqNxd', tmpeggs]
-
-find_links = os.environ.get(
-    'bootstrap-testing-find-links',
-    options.find_links or
-    ('http://downloads.buildout.org/'
-     if options.accept_buildout_test_releases else None)
-    )
-if find_links:
-    cmd.extend(['-f', find_links])
-
-setuptools_path = ws.find(
-    pkg_resources.Requirement.parse('setuptools')).location
-
-requirement = 'zc.buildout'
-version = options.version
-if version is None and not options.accept_buildout_test_releases:
-    # Figure out the most recent final version of zc.buildout.
-    import setuptools.package_index
-    _final_parts = '*final-', '*final'
-
-    def _final_version(parsed_version):
-        for part in parsed_version:
-            if (part[:1] == '*') and (part not in _final_parts):
-                return False
-        return True
-    index = setuptools.package_index.PackageIndex(
-        search_path=[setuptools_path])
-    if find_links:
-        index.add_find_links((find_links,))
-    req = pkg_resources.Requirement.parse(requirement)
-    if index.obtain(req) is not None:
-        best = []
-        bestv = None
-        for dist in index[req.project_name]:
-            distv = dist.parsed_version
-            if _final_version(distv):
-                if bestv is None or distv > bestv:
-                    best = [dist]
-                    bestv = distv
-                elif distv == bestv:
-                    best.append(dist)
-        if best:
-            best.sort()
-            version = best[-1].version
-if version:
-    requirement = '=='.join((requirement, version))
-cmd.append(requirement)
-
-import subprocess
-if subprocess.call(cmd, env=dict(os.environ, PYTHONPATH=setuptools_path)) != 0:
-    raise Exception(
-        "Failed to execute command:\n%s",
-        repr(cmd)[1:-1])
-
-######################################################################
-# Import and run buildout
-
-ws.add_entry(tmpeggs)
-ws.require(requirement)
-import zc.buildout.buildout
-
-if not [a for a in args if '=' not in a]:
-    args.append('bootstrap')
-
-# if -c was provided, we push it back into args for buildout' main function
-if options.config_file is not None:
-    args[0:0] = ['-c', options.config_file]
-
-zc.buildout.buildout.main(args)
-shutil.rmtree(tmpeggs)
diff --git a/jenkins.cfg b/jenkins.cfg
deleted file mode 100644
index e718067..0000000
--- a/jenkins.cfg
+++ /dev/null
@@ -1,38 +0,0 @@
-[buildout]
-extends =
-    https://raw.github.com/collective/buildout.plonetest/master/plone-4.3.x.cfg
-    https://raw.github.com/plone/buildout.jenkins/master/jenkins.cfg
-    https://raw.github.com/plone/buildout.jenkins/master/jenkins-code-analysis.cfg
-jenkins-test-eggs = plone.app.layout [test]
-jenkins-test-directories = plone/app/layout
-parts +=
-    flake8
-    autopep8
-    code-analysis
-extensions = mr.developer
-auto-checkout =
-    plone.recipe.codeanalysis
-    collective.xmltestreport
-
-[flake8]
-recipe = zc.recipe.egg
-eggs = flake8
-entry-points = flake8=flake8.main:main
-
-[autopep8]
-recipe = zc.recipe.egg
-eggs = autopep8
-
-[code-analysis]
-recipe = plone.recipe.codeanalysis
-
-[sources]
-plone.recipe.codeanalysis = git git://github.com/plone/plone.recipe.codeanalysis.git pushurl=git@github.com:plone/plone.recipe.codeanalysis.git
-collective.xmltestreport = git git://github.com/collective/collective.xmltestreport.git
-
-[versions]
-plone.app.layout =
-zope.interface = 3.6.1
-zc.buildout = 2.2.1
-zc.recipe.egg = 2.0.1
-setuptools = 1.3.2
diff --git a/plone/app/layout/analytics/tests/test_doctests.py b/plone/app/layout/analytics/tests/test_doctests.py
index d51e8fc..af4a0e6 100644
--- a/plone/app/layout/analytics/tests/test_doctests.py
+++ b/plone/app/layout/analytics/tests/test_doctests.py
@@ -1,6 +1,6 @@
 # -*- coding: utf-8 -*-
-from plone.testing import layered
 from plone.app.layout.testing import FUNCTIONAL_TESTING
+from plone.testing import layered
 
 import doctest
 import unittest
diff --git a/plone/app/layout/navigation/navtree.py b/plone/app/layout/navigation/navtree.py
index d43695c..3d18288 100644
--- a/plone/app/layout/navigation/navtree.py
+++ b/plone/app/layout/navigation/navtree.py
@@ -8,6 +8,8 @@
 from types import StringType
 from zope.interface import implementer
 
+import six
+
 
 @implementer(INavtreeStrategy)
 class NavtreeStrategyBase(object):
@@ -179,7 +181,7 @@ def buildFolderTree(context, obj=None, query={},
 
     # Allow the strategy to suppliment the query for keys not already
     # present in the query such as sorting and omitting default pages
-    for key, value in strategy.supplimentQuery.iteritems():
+    for key, value in six.iteritems(strategy.supplimentQuery):
         if key not in query:
             query[key] = value
 
diff --git a/plone/app/layout/sitemap/tests/test_sitemap.py b/plone/app/layout/sitemap/tests/test_sitemap.py
index cbcc628..41d038b 100644
--- a/plone/app/layout/sitemap/tests/test_sitemap.py
+++ b/plone/app/layout/sitemap/tests/test_sitemap.py
@@ -74,7 +74,7 @@ def test_disabled(self):
         self.site_settings.enable_sitemap = False
         try:
             self.sitemap()
-        except Exception, e:
+        except Exception as e:
             # zope2 and repoze.zope2 use different publishers and raise
             # different exceptions. but both implement INotFound.
             self.assertTrue(INotFound.providedBy(e))
diff --git a/plone/app/layout/viewlets/common.py b/plone/app/layout/viewlets/common.py
index b961968..5cf5f76 100644
--- a/plone/app/layout/viewlets/common.py
+++ b/plone/app/layout/viewlets/common.py
@@ -17,7 +17,7 @@
 from Products.CMFPlone.utils import safe_unicode
 from Products.Five.browser import BrowserView
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
-from urllib import unquote
+from six.moves.urllib.parse import unquote
 from zope.component import getMultiAdapter
 from zope.component import getUtility
 from zope.component import queryMultiAdapter
diff --git a/plone/app/layout/viewlets/content.py b/plone/app/layout/viewlets/content.py
index 563cc56..07e262d 100644
--- a/plone/app/layout/viewlets/content.py
+++ b/plone/app/layout/viewlets/content.py
@@ -22,6 +22,7 @@
 from Products.CMFPlone.utils import log
 from Products.Five.browser import BrowserView
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
+from six.moves import range
 from zope.component import getMultiAdapter
 from zope.component import getUtility
 from zope.component import queryMultiAdapter
@@ -460,7 +461,7 @@ def morphVersionDataToHistoryFormat(vdata, version_id):
         retrieve = history.retrieve
         getId = history.getVersionId
         # Count backwards from most recent to least recent
-        for i in xrange(history.getLength(countPurged=False) - 1, -1, -1):
+        for i in range(history.getLength(countPurged=False) - 1, -1, -1):
             version_history.append(
                 morphVersionDataToHistoryFormat(retrieve(i, countPurged=False),
                                                 getId(i, countPurged=False)))
diff --git a/setup.py b/setup.py
index 265d9e3..6cefa9f 100644
--- a/setup.py
+++ b/setup.py
@@ -1,4 +1,6 @@
-from setuptools import setup, find_packages
+from setuptools import find_packages
+from setuptools import setup
+
 
 version = '2.8.0.dev0'
 


