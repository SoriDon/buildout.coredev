Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-04-19T17:46:53+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.restapi/commit/8a3c019c311197410316f2dddaba251308c1f452

Make the PAS plugin compatible with PyJWT 1 and 2.

Takes code from https://github.com/plone/plone.restapi/pull/1194
Fixes https://github.com/plone/plone.restapi/issues/1193

Files changed:
A news/1193.bugfix
M setup.py
M src/plone/restapi/pas/plugin.py

b'diff --git a/news/1193.bugfix b/news/1193.bugfix\nnew file mode 100644\nindex 000000000..c617dde84\n--- /dev/null\n+++ b/news/1193.bugfix\n@@ -0,0 +1,2 @@\n+Make the PAS plugin compatible with ``PyJWT`` 1 and 2.\n+[jensens, maurits]\n\\ No newline at end of file\ndiff --git a/setup.py b/setup.py\nindex 658c44b2e..34fdb2d61 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -80,11 +80,12 @@ def read(filename):\n     zip_safe=False,\n     install_requires=[\n         "setuptools",\n+        "importlib-metadata; python_version<\'3.8\'",\n         "python-dateutil",\n         "plone.behavior>=1.1",  # adds name to behavior directive\n         "plone.rest >= 1.0a6",  # json renderer moved to plone.restapi\n         "plone.schema >= 1.2.1",  # new/fixed json field\n-        "PyJWT",\n+        "PyJWT>=1.7.0",\n         "pytz",\n     ],\n     extras_require={"test": TEST_REQUIRES},\ndiff --git a/src/plone/restapi/pas/plugin.py b/src/plone/restapi/pas/plugin.py\nindex 643c77e35..456d6ea8a 100644\n--- a/src/plone/restapi/pas/plugin.py\n+++ b/src/plone/restapi/pas/plugin.py\n@@ -21,6 +21,16 @@\n import time\n \n \n+try:\n+    from importlib.metadata import version\n+except ImportError:\n+    from importlib_metadata import version\n+\n+if version("pyjwt")[0] == "1":\n+    OLD_JWT = True\n+else:\n+    OLD_JWT = False\n+\n manage_addJWTAuthenticationPlugin = PageTemplateFile(\n     "add_plugin", globals(), __name__="manage_addJWTAuthenticationPlugin"\n )\n@@ -160,7 +170,14 @@ def _jwt_decode(self, token, secret, verify=True):\n         if isinstance(token, str):\n             token = token.encode("utf-8")\n         try:\n-            return jwt.decode(token, secret, verify=verify, algorithms=["HS256"])\n+            if OLD_JWT:\n+                return jwt.decode(token, secret, verify=verify, algorithms=["HS256"])\n+            return jwt.decode(\n+                token,\n+                secret,\n+                options={"verify_signature": verify},\n+                algorithms=["HS256"],\n+            )\n         except jwt.InvalidTokenError:\n             pass\n \n@@ -194,7 +211,8 @@ def create_token(self, userid, timeout=None, data=None):\n         if data is not None:\n             payload.update(data)\n         token = jwt.encode(payload, self._signing_secret(), algorithm="HS256")\n-        token = token.decode("utf-8")\n+        if OLD_JWT:\n+            token = token.decode("utf-8")\n         if self.store_tokens:\n             if self._tokens is None:\n                 self._tokens = OOBTree()\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-04-22T11:34:51+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.restapi/commit/30ec4d8511e024620e5ae5c46e9248f4f62fbbc8

Merge pull request #1377 from plone/maurits-support-pyjwt-1-and-2

Make the PAS plugin compatible with PyJWT 1 and 2.

Files changed:
A news/1193.bugfix
M setup.py
M src/plone/restapi/pas/plugin.py

b'diff --git a/news/1193.bugfix b/news/1193.bugfix\nnew file mode 100644\nindex 000000000..c617dde84\n--- /dev/null\n+++ b/news/1193.bugfix\n@@ -0,0 +1,2 @@\n+Make the PAS plugin compatible with ``PyJWT`` 1 and 2.\n+[jensens, maurits]\n\\ No newline at end of file\ndiff --git a/setup.py b/setup.py\nindex 658c44b2e..34fdb2d61 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -80,11 +80,12 @@ def read(filename):\n     zip_safe=False,\n     install_requires=[\n         "setuptools",\n+        "importlib-metadata; python_version<\'3.8\'",\n         "python-dateutil",\n         "plone.behavior>=1.1",  # adds name to behavior directive\n         "plone.rest >= 1.0a6",  # json renderer moved to plone.restapi\n         "plone.schema >= 1.2.1",  # new/fixed json field\n-        "PyJWT",\n+        "PyJWT>=1.7.0",\n         "pytz",\n     ],\n     extras_require={"test": TEST_REQUIRES},\ndiff --git a/src/plone/restapi/pas/plugin.py b/src/plone/restapi/pas/plugin.py\nindex 643c77e35..456d6ea8a 100644\n--- a/src/plone/restapi/pas/plugin.py\n+++ b/src/plone/restapi/pas/plugin.py\n@@ -21,6 +21,16 @@\n import time\n \n \n+try:\n+    from importlib.metadata import version\n+except ImportError:\n+    from importlib_metadata import version\n+\n+if version("pyjwt")[0] == "1":\n+    OLD_JWT = True\n+else:\n+    OLD_JWT = False\n+\n manage_addJWTAuthenticationPlugin = PageTemplateFile(\n     "add_plugin", globals(), __name__="manage_addJWTAuthenticationPlugin"\n )\n@@ -160,7 +170,14 @@ def _jwt_decode(self, token, secret, verify=True):\n         if isinstance(token, str):\n             token = token.encode("utf-8")\n         try:\n-            return jwt.decode(token, secret, verify=verify, algorithms=["HS256"])\n+            if OLD_JWT:\n+                return jwt.decode(token, secret, verify=verify, algorithms=["HS256"])\n+            return jwt.decode(\n+                token,\n+                secret,\n+                options={"verify_signature": verify},\n+                algorithms=["HS256"],\n+            )\n         except jwt.InvalidTokenError:\n             pass\n \n@@ -194,7 +211,8 @@ def create_token(self, userid, timeout=None, data=None):\n         if data is not None:\n             payload.update(data)\n         token = jwt.encode(payload, self._signing_secret(), algorithm="HS256")\n-        token = token.decode("utf-8")\n+        if OLD_JWT:\n+            token = token.decode("utf-8")\n         if self.store_tokens:\n             if self._tokens is None:\n                 self._tokens = OOBTree()\n'

