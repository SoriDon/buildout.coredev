Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2022-04-14T18:29:09+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.discussion/commit/336642ddc34661da3b2044d8756d1fdc8ec6277c

Replaced use of plone.api.

That should not be done in Plone core.

Files changed:
A news/188.bugfix
M plone/app/discussion/browser/moderation.py

b'diff --git a/news/188.bugfix b/news/188.bugfix\nnew file mode 100644\nindex 00000000..4e56fe1d\n--- /dev/null\n+++ b/news/188.bugfix\n@@ -0,0 +1,2 @@\n+Replaced use of ``plone.api``.  That should not be done in Plone core.\n+[maurits]\ndiff --git a/plone/app/discussion/browser/moderation.py b/plone/app/discussion/browser/moderation.py\nindex 03540b2d..99d6216b 100644\n--- a/plone/app/discussion/browser/moderation.py\n+++ b/plone/app/discussion/browser/moderation.py\n@@ -3,7 +3,6 @@\n from AccessControl import Unauthorized\n from Acquisition import aq_inner\n from Acquisition import aq_parent\n-from plone import api\n from plone.app.discussion.events import CommentPublishedEvent\n from plone.app.discussion.events import CommentTransitionEvent\n from plone.app.discussion.events import CommentDeletedEvent\n@@ -264,22 +263,25 @@ def __call__(self):\n         comment = aq_inner(self.context)\n         content_object = aq_parent(aq_parent(comment))\n         workflow_action = self.request.form.get(\'workflow_action\', \'publish\')\n-        api.content.transition(comment, transition=workflow_action)\n+        workflowTool = getToolByName(self.context, \'portal_workflow\')\n+        workflowTool.doActionFor(comment, workflow_action)\n         comment.reindexObject()\n         content_object.reindexObject(idxs=[\'total_comments\'])\n         notify(CommentPublishedEvent(self.context, comment))\n         # for complexer workflows:\n         notify(CommentTransitionEvent(self.context, comment))\n-        review_state_new = api.content.get_state(comment, \'\')\n-\n-        comment_state_translated = self.context.restrictedTraverse("translationhelper").translate_comment_review_state(review_state_new)\n+        comment_state_translated = \'\'\n+        if workflowTool.getWorkflowsFor(comment):\n+            review_state_new = workflowTool.getInfoFor(ob=comment, name=\'review_state\')\n+            helper = self.context.restrictedTraverse("translationhelper")\n+            comment_state_translated = helper.translate_comment_review_state(review_state_new)\n \n         msgid = _(\n             "comment_transmitted",\n             default=\'Comment ${comment_state_translated}.\',\n             mapping={"comment_state_translated": comment_state_translated})\n         translated = self.context.translate(msgid)\n-        api.portal.show_message(translated, self.context.REQUEST)\n+        IStatusMessage(self.request).add(translated, type=\'info\')\n \n         came_from = self.context.REQUEST.HTTP_REFERER\n         # if the referrer already has a came_from in it, don\'t redirect back\n'

Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2022-04-19T15:21:23+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.discussion/commit/31af5d1752484bc98ed016e6bbd3f97dc60893b5

Merge pull request #194 from plone/maurits-no-plone-api

Replaced use of plone.api.

Files changed:
A news/188.bugfix
M plone/app/discussion/browser/moderation.py

b'diff --git a/news/188.bugfix b/news/188.bugfix\nnew file mode 100644\nindex 00000000..4e56fe1d\n--- /dev/null\n+++ b/news/188.bugfix\n@@ -0,0 +1,2 @@\n+Replaced use of ``plone.api``.  That should not be done in Plone core.\n+[maurits]\ndiff --git a/plone/app/discussion/browser/moderation.py b/plone/app/discussion/browser/moderation.py\nindex 03540b2d..99d6216b 100644\n--- a/plone/app/discussion/browser/moderation.py\n+++ b/plone/app/discussion/browser/moderation.py\n@@ -3,7 +3,6 @@\n from AccessControl import Unauthorized\n from Acquisition import aq_inner\n from Acquisition import aq_parent\n-from plone import api\n from plone.app.discussion.events import CommentPublishedEvent\n from plone.app.discussion.events import CommentTransitionEvent\n from plone.app.discussion.events import CommentDeletedEvent\n@@ -264,22 +263,25 @@ def __call__(self):\n         comment = aq_inner(self.context)\n         content_object = aq_parent(aq_parent(comment))\n         workflow_action = self.request.form.get(\'workflow_action\', \'publish\')\n-        api.content.transition(comment, transition=workflow_action)\n+        workflowTool = getToolByName(self.context, \'portal_workflow\')\n+        workflowTool.doActionFor(comment, workflow_action)\n         comment.reindexObject()\n         content_object.reindexObject(idxs=[\'total_comments\'])\n         notify(CommentPublishedEvent(self.context, comment))\n         # for complexer workflows:\n         notify(CommentTransitionEvent(self.context, comment))\n-        review_state_new = api.content.get_state(comment, \'\')\n-\n-        comment_state_translated = self.context.restrictedTraverse("translationhelper").translate_comment_review_state(review_state_new)\n+        comment_state_translated = \'\'\n+        if workflowTool.getWorkflowsFor(comment):\n+            review_state_new = workflowTool.getInfoFor(ob=comment, name=\'review_state\')\n+            helper = self.context.restrictedTraverse("translationhelper")\n+            comment_state_translated = helper.translate_comment_review_state(review_state_new)\n \n         msgid = _(\n             "comment_transmitted",\n             default=\'Comment ${comment_state_translated}.\',\n             mapping={"comment_state_translated": comment_state_translated})\n         translated = self.context.translate(msgid)\n-        api.portal.show_message(translated, self.context.REQUEST)\n+        IStatusMessage(self.request).add(translated, type=\'info\')\n \n         came_from = self.context.REQUEST.HTTP_REFERER\n         # if the referrer already has a came_from in it, don\'t redirect back\n'

