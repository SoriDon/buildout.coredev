Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2022-11-21T10:42:12+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.upgrade/commit/69e043cceef13f4eeb9bc93c757179ab2d9a79de

Catch KeyError when getting object from a brain, and ignore this brain.

Log a warning.
Sample traceback: https://community.plone.org/t/plone-6-0-0rc1-released/15885/5

Files changed:
A news/306.bugfix
M plone/app/upgrade/utils.py

b'diff --git a/news/306.bugfix b/news/306.bugfix\nnew file mode 100644\nindex 00000000..f93db012\n--- /dev/null\n+++ b/news/306.bugfix\n@@ -0,0 +1,3 @@\n+Catch KeyError when getting object from a brain, and ignore this brain.\n+Log a warning.\n+[maurits]\ndiff --git a/plone/app/upgrade/utils.py b/plone/app/upgrade/utils.py\nindex 2541eec8..e8d01226 100644\n--- a/plone/app/upgrade/utils.py\n+++ b/plone/app/upgrade/utils.py\n@@ -280,7 +280,11 @@ def _update_icon_in_single_brain(brain, typesToUpdate, getIconPos, metadata):\n     if brain_icon not in old_icons:\n         # Otherwise we need to ask the object\n         new_value = ""\n-        obj = brain.getObject()\n+        try:\n+            obj = brain.getObject()\n+        except KeyError:\n+            logger.warning("Ignoring brain without object: %s", brain.getURL())\n+            return\n         method = getattr(aq_base(obj), "getIcon", None)\n         if method is not None:\n             try:\n@@ -338,7 +342,11 @@ def updateIconsInBrains(context, typesToUpdate=None):\n         else:\n             # If we don\'t have a standard catalog tool, fall back to the\n             # official API\n-            obj = brain.getObject()\n+            try:\n+                obj = brain.getObject()\n+            except KeyError:\n+                logger.warning("Ignoring brain without object: %s", brain.getURL())\n+                continue\n             # passing in a valid but inexpensive index, makes sure we don\'t\n             # reindex the entire catalog including expensive indexes like\n             # SearchableText\n@@ -383,7 +391,11 @@ def update_catalog_metadata(context, column=None):\n \n     for index, brain in enumerate(brains, 1):\n         pghandler.report(index)\n-        obj = brain.getObject()\n+        try:\n+            obj = brain.getObject()\n+        except KeyError:\n+            logger.warning("Ignoring brain without object: %s", brain.getURL())\n+            continue\n         if column_position is not None:\n             # We rely on the inner workings of the catalog.\n             rid = brain.getRID()\n'

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2022-11-21T15:09:46+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.upgrade/commit/212af1ea5ae83f9c4cd457f3e529ac908c76efb1

Merge pull request #306 from plone/maurits-getobject-catch-keyerror

Catch KeyError when getting object from a brain, and ignore this brain.

Files changed:
A news/306.bugfix
M plone/app/upgrade/utils.py

b'diff --git a/news/306.bugfix b/news/306.bugfix\nnew file mode 100644\nindex 00000000..f93db012\n--- /dev/null\n+++ b/news/306.bugfix\n@@ -0,0 +1,3 @@\n+Catch KeyError when getting object from a brain, and ignore this brain.\n+Log a warning.\n+[maurits]\ndiff --git a/plone/app/upgrade/utils.py b/plone/app/upgrade/utils.py\nindex 2541eec8..e8d01226 100644\n--- a/plone/app/upgrade/utils.py\n+++ b/plone/app/upgrade/utils.py\n@@ -280,7 +280,11 @@ def _update_icon_in_single_brain(brain, typesToUpdate, getIconPos, metadata):\n     if brain_icon not in old_icons:\n         # Otherwise we need to ask the object\n         new_value = ""\n-        obj = brain.getObject()\n+        try:\n+            obj = brain.getObject()\n+        except KeyError:\n+            logger.warning("Ignoring brain without object: %s", brain.getURL())\n+            return\n         method = getattr(aq_base(obj), "getIcon", None)\n         if method is not None:\n             try:\n@@ -338,7 +342,11 @@ def updateIconsInBrains(context, typesToUpdate=None):\n         else:\n             # If we don\'t have a standard catalog tool, fall back to the\n             # official API\n-            obj = brain.getObject()\n+            try:\n+                obj = brain.getObject()\n+            except KeyError:\n+                logger.warning("Ignoring brain without object: %s", brain.getURL())\n+                continue\n             # passing in a valid but inexpensive index, makes sure we don\'t\n             # reindex the entire catalog including expensive indexes like\n             # SearchableText\n@@ -383,7 +391,11 @@ def update_catalog_metadata(context, column=None):\n \n     for index, brain in enumerate(brains, 1):\n         pghandler.report(index)\n-        obj = brain.getObject()\n+        try:\n+            obj = brain.getObject()\n+        except KeyError:\n+            logger.warning("Ignoring brain without object: %s", brain.getURL())\n+            continue\n         if column_position is not None:\n             # We rely on the inner workings of the catalog.\n             rid = brain.getRID()\n'

