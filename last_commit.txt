Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2022-04-23T08:42:38+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/14e23a698c832b225ae9717fbd9f30819dac3763

re-register and fix base_class_migrator_form

Files changed:
M plone/app/contenttypes/browser/configure.zcml
M plone/app/contenttypes/browser/migration.py

b'diff --git a/plone/app/contenttypes/browser/configure.zcml b/plone/app/contenttypes/browser/configure.zcml\nindex 2b033577..0273021e 100644\n--- a/plone/app/contenttypes/browser/configure.zcml\n+++ b/plone/app/contenttypes/browser/configure.zcml\n@@ -205,4 +205,17 @@\n       permission="zope2.View"\n       />\n \n+  <browser:page\n+      name="base_class_migrator_form"\n+      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      class="plone.app.contenttypes.browser.migration.BaseClassMigrator"\n+      layer="plone.app.contenttypes.interfaces.IPloneAppContenttypesLayer"\n+      permission="cmf.ManagePortal"\n+      />\n+\n+  <utility\n+      factory="plone.app.contenttypes.browser.migration.ChangedBaseClasses"\n+      name="plone.app.contenttypes.migration.changed_base_classes"\n+      provides="zope.schema.interfaces.IVocabularyFactory" />\n+\n </configure>\ndiff --git a/plone/app/contenttypes/browser/migration.py b/plone/app/contenttypes/browser/migration.py\nindex 3576b931..fbde82a7 100644\n--- a/plone/app/contenttypes/browser/migration.py\n+++ b/plone/app/contenttypes/browser/migration.py\n@@ -63,6 +63,7 @@ class IBaseClassMigratorForm(Interface):\n         value_type=schema.Choice(\n             vocabulary=\'plone.app.contenttypes.migration.changed_base_classes\',\n         ),\n+        default=[],\n         required=True,\n     )\n     migrate_to_folderish = schema.Bool(\n@@ -72,6 +73,7 @@ class IBaseClassMigratorForm(Interface):\n             u\'itemish to being folderish but the class of the type is still \'\n             u\'the same.\'\n         ),\n+        required=False,\n         default=False,\n     )\n \n@@ -83,6 +85,14 @@ class BaseClassMigratorForm(form.Form):\n     ignoreContext = True\n     enableCSRFProtection = True\n \n+    def updateWidgets(self):\n+        super().updateWidgets()\n+        changed_base_classes = self.widgets["changed_base_classes"]\n+        if not changed_base_classes.terms.terms.by_value:\n+            IStatusMessage(self.request).addStatusMessage(\n+                u\'No types with changed classes to migrate!\', type=\'warning\')\n+            return\n+\n     @button.buttonAndHandler(u\'Update\', name=\'update\')\n     def handle_migrate(self, action):\n         data, errors = self.extractData()\n@@ -91,7 +101,9 @@ def handle_migrate(self, action):\n             return\n \n         changed_base_classes = data.get(\'changed_base_classes\', [])\n+        messages = IStatusMessage(self.request)\n         if not changed_base_classes:\n+            messages.addStatusMessage(u\'No types were selected\', type=\'warning\')\n             return\n \n         migrate_to_folderish = data.get(\'changed_base_classes\', False)\n@@ -111,15 +123,14 @@ def handle_migrate(self, action):\n                 else:\n                     not_migrated.append(obj)\n \n-        messages = IStatusMessage(self.request)\n-        info_message_template = \'There are {0} objects migrated.\'\n-        warn_message_template = \'There are not {0} objects migrated.\'\n+        info_message_template = \'{0} objects were migrated.\'\n+        warn_message_template = \'{0} objects were not migrated.\'\n         if migrated:\n             msg = info_message_template.format(len(migrated))\n             messages.addStatusMessage(msg, type=\'info\')\n         if not_migrated:\n             msg = warn_message_template.format(len(not_migrated))\n-            messages.addStatusMessage(msg, type=\'warn\')\n+            messages.addStatusMessage(msg, type=\'warning\')\n         self.request.response.redirect(self.request[\'ACTUAL_URL\'])\n \n \n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2022-04-23T08:42:38+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/72c1c7b84fc46361bbd3de1ba3d38e9caf3b7846

improve form info and automatically migrate to folderish if required

Files changed:
M plone/app/contenttypes/browser/migration.py
M plone/app/contenttypes/utils.py

b'diff --git a/plone/app/contenttypes/browser/migration.py b/plone/app/contenttypes/browser/migration.py\nindex fbde82a7..230df982 100644\n--- a/plone/app/contenttypes/browser/migration.py\n+++ b/plone/app/contenttypes/browser/migration.py\n@@ -7,7 +7,7 @@\n from plone.app.contenttypes.utils import DEFAULT_TYPES\n from plone.app.contenttypes.utils import get_old_class_name_string\n from plone.app.contenttypes.utils import migrate_base_class_to_new_class\n-from plone.app.contenttypes.utils import list_of_changed_base_class_names\n+from plone.app.contenttypes.utils import changed_base_classes\n from plone.browserlayer.interfaces import ILocalBrowserLayerType\n from plone.dexterity.interfaces import IDexterityContent\n from plone.dexterity.interfaces import IDexterityFTI\n@@ -45,41 +45,33 @@ class ChangedBaseClasses(object):\n \n     def __call__(self, context):\n         """Return a vocabulary with all changed base classes."""\n-        list_of_class_names = list_of_changed_base_class_names(context) or {}\n-        return SimpleVocabulary(\n-            [SimpleVocabulary.createTerm(\n-                class_name, class_name,\n-                \'{0} ({1})\'.format(\n-                    class_name, list_of_class_names[class_name]))\n-             for class_name in list_of_class_names.keys()]\n-        )\n+        terms = []\n+        for class_name, data in changed_base_classes(context).items():\n+            title = "{} (\xe2\x9e\xa1 {}) - ({} items)".format(data["old"], data["new"], data["amount"])\n+            term = SimpleVocabulary.createTerm(class_name, class_name, title)\n+            terms.append(term)\n+        return SimpleVocabulary(terms)\n \n \n class IBaseClassMigratorForm(Interface):\n \n     changed_base_classes = schema.List(\n-        title=u\'Changed base classes\',\n-        description=u\'Select changed base classes you want to migrate\',\n+        title=u\'Changed base classes (old class, new class and number of items)\',\n+        description=u\'Select changed base classes you want to migrate. \'\n+            \'If the new types are folderish that change is also applied.\',\n         value_type=schema.Choice(\n             vocabulary=\'plone.app.contenttypes.migration.changed_base_classes\',\n         ),\n         default=[],\n         required=True,\n     )\n-    migrate_to_folderish = schema.Bool(\n-        title=u\'Migrate to folderish type?\',\n-        description=(\n-            u\'Select this option if you changed a type from being \'\n-            u\'itemish to being folderish but the class of the type is still \'\n-            u\'the same.\'\n-        ),\n-        required=False,\n-        default=False,\n-    )\n \n \n class BaseClassMigratorForm(form.Form):\n \n+    label = _("heading_class_migrator",\n+        default="Update base-classes for content with changed classes")\n+\n     fields = field.Fields(IBaseClassMigratorForm)\n     fields[\'changed_base_classes\'].widgetFactory = CheckBoxFieldWidget\n     ignoreContext = True\n@@ -106,7 +98,6 @@ def handle_migrate(self, action):\n             messages.addStatusMessage(u\'No types were selected\', type=\'warning\')\n             return\n \n-        migrate_to_folderish = data.get(\'changed_base_classes\', False)\n         catalog = getToolByName(self.context, \'portal_catalog\')\n         migrated = []\n         not_migrated = []\n@@ -118,7 +109,7 @@ def handle_migrate(self, action):\n             old_class_name = get_old_class_name_string(obj)\n             if old_class_name in changed_base_classes:\n                 if migrate_base_class_to_new_class(\n-                        obj, migrate_to_folderish=migrate_to_folderish):\n+                        obj, migrate_to_folderish=True):\n                     migrated.append(obj)\n                 else:\n                     not_migrated.append(obj)\ndiff --git a/plone/app/contenttypes/utils.py b/plone/app/contenttypes/utils.py\nindex e175c265..8693b2d1 100644\n--- a/plone/app/contenttypes/utils.py\n+++ b/plone/app/contenttypes/utils.py\n@@ -65,8 +65,6 @@ def get_old_class_name_string(obj):\n def get_portal_type_name_string(obj):\n     """Returns the klass-attribute of the fti."""\n     fti = queryUtility(IDexterityFTI, name=obj.portal_type)\n-    print(fti.klass)\n-    print(fti.id)\n     if not fti:\n         return False\n     return fti.klass\n@@ -127,13 +125,18 @@ def list_of_objects_with_changed_base_class(context):\n             yield obj\n \n \n-def list_of_changed_base_class_names(context):\n-    """Returns list of class names that are not longer in portal_types."""\n-    changed_base_class_names = {}\n+def changed_base_classes(context):\n+    """Returns dict of current and new class names ."""\n+    results = {}\n     for obj in list_of_objects_with_changed_base_class(context):\n-        changed_base_class_name = get_old_class_name_string(obj)\n-        if changed_base_class_name not in changed_base_class_names:\n-            changed_base_class_names[changed_base_class_name] = 1\n+        current_class_name = get_old_class_name_string(obj)\n+        new_class_name = get_portal_type_name_string(obj)\n+        if current_class_name not in results:\n+            results[current_class_name] = {\n+                "old": current_class_name,\n+                "new": new_class_name,\n+                "amount": 1,\n+            }\n         else:\n-            changed_base_class_names[changed_base_class_name] += 1\n-    return changed_base_class_names\n+            results[current_class_name]["amount"] += 1\n+    return results\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2022-04-23T08:42:38+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/f9808bdd522fad6669f04784dd8c13ff9da2be4d

add changenote

Files changed:
A news/642.bugfix

b'diff --git a/news/642.bugfix b/news/642.bugfix\nnew file mode 100644\nindex 000000000..4d667923f\n--- /dev/null\n+++ b/news/642.bugfix\n@@ -0,0 +1,2 @@\n+Re-register and improve @@base_class_migrator_form required to migrate to foilderish items.\n+[pbauer]\n\\ No newline at end of file\n'

