Repository: documentation


Branch: refs/heads/6-dev
Date: 2022-02-22T15:37:00+02:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/documentation/commit/4f906e875275f933df35c2deb3f81cff18fd4aec

Add images chapter to classic-ui docs

Files changed:
A docs/classic-ui/images.md
M docs/classic-ui/index.md

b'diff --git a/docs/classic-ui/images.md b/docs/classic-ui/images.md\nnew file mode 100644\nindex 00000000..8c56ff36\n--- /dev/null\n+++ b/docs/classic-ui/images.md\n@@ -0,0 +1,109 @@\n+---\n+html_meta:\n+  "description": ""\n+  "property=og:description": ""\n+  "property=og:title": ""\n+  "keywords": ""\n+---\n+\n+(classic-ui-images-label)=\n+\n+# Image resolving and scaling\n+\n+Image scaling is done in plone.namedfile.scaling and most interesting the ImageScaling view.\n+\n+## Image tag\n+\n+To get a HTML tag for an scaled image, you can use the ImageScaling view as follow:\n+\n+```python\n+from plone import api\n+\n+scale_util = api.content.get_view(\'images\', context, request)\n+tag = scale_util.tag(\'leadimage\', scale=\'mini\')\n+```\n+\n+or to get a specific size:\n+\n+```python\n+from plone import api\n+\n+scale_util = api.content.get_view(\'images\', context, request)\n+tag = scale_util.tag(\'leadimage\', width="600", height="200")\n+```\n+\n+The first argument is the field name, followed by one of the following arguments:\n+\n+\tfieldname=None,\n+        scale=None,\n+        height=None,\n+        width=None,\n+        direction="thumbnail",\n+\n+\n+## Image scaling without tag creation\n+\n+To just get the scaling infos, without creating a HTML tag, you can use the ImageScaling view as follow:\n+\n+```python\n+from plone import api\n+\n+scale_util = api.content.get_view(\'images\', context, request)\n+image_scale = scale_util.scale(\'leadimage\', scale=\'mini\')\n+print(image_scale.url)  # http://localhost:8080/Plone/enl/@@images/3d182f34-8773-4f20-a79d-8774c3151b7e.jpeg\n+print(image_scale.width)  # 200\n+print(image_scale.height)  # 110\n+```\n+\n+the most important properties:\n+\n+- data\n+- fieldname\n+- height\n+- mimetype\n+- srcset\n+- srcset_attribute\n+- tag\n+- uid\n+- url\n+- width\n+\n+You can get a tag from this point too:\n+```python\n+>>> print(image_scale.tag)\n+\n+<img src="http://localhost:8080/Plone/news/newsitem1/@@images/9f676d46-0cb3-4512-a831-a5db4079bdfa.jpeg" alt="News Item 1!" title="News Item 1" height="21" width="32" srcset="http://localhost:8080/Plone/news/newsitem1/@@images/4a68513c-cffd-4de0-8a35-80627945b80f.jpeg 2x, http://localhost:8080/Plone/news/newsitem1/@@images/c32929c6-cb89-4ce7-846f-38adf29c09a4.jpeg 3x" />\n+```\n+\n+or to get a specific size:\n+\n+```python\n+from plone import api\n+\n+scale_util = api.content.get_view(\'images\', context, request)\n+tag = scale_util.scale(\'leadimage\', width="600", height="200")\n+```\n+\n+The first argument is the field name, followed by one of the following arguments:\n+\n+\tfieldname=None,\n+        scale=None,\n+        height=None,\n+        width=None,\n+        direction="thumbnail",\n+\n+## Scaling direction / mode\n+\n+The actual scaling is done in plone.scale:\n+In plone scale the `direction` argument is deprecated in favor of `mode` and values are converted as follow:\n+\n+direction values | mode values\n+-----------------|------------\n+scale-crop-to-fit | contain\n+down | contain\n+scale-crop-to-fill | cover\n+up | cover\n+keep | scale\n+thumbnail | scale\n+\n+For now plone.namedfile is still expecting the direction argument with the old values.\n\\ No newline at end of file\ndiff --git a/docs/classic-ui/index.md b/docs/classic-ui/index.md\nindex 5a1fc6ef..b0352712 100644\n--- a/docs/classic-ui/index.md\n+++ b/docs/classic-ui/index.md\n@@ -27,13 +27,13 @@ This frontend is now called "Classic UI".\n \n Choosing one frontend over another depends on several factors.\n \n-Classic UI would be a better choice for the following situations. \n+Classic UI would be a better choice for the following situations.\n \n -   Reason 1\n -   Reason 2\n -   Reason N\n \n-The default frontend Volto would be a better choice for the following situations. \n+The default frontend Volto would be a better choice for the following situations.\n \n -   Reason 1\n -   Reason 2\n@@ -55,6 +55,7 @@ viewlets\n forms\n portlets\n csrf\n+images\n icons\n recipes\n whatsnew\n'

Repository: documentation


Branch: refs/heads/6-dev
Date: 2022-02-22T16:57:21+02:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/documentation/commit/c734f32d62f1cc7aefba98b658cf2cc8faa7f2d6

Add note about permissions in ImageScaling

Files changed:
M docs/classic-ui/images.md

b'diff --git a/docs/classic-ui/images.md b/docs/classic-ui/images.md\nindex 8c56ff36..0a40bb13 100644\n--- a/docs/classic-ui/images.md\n+++ b/docs/classic-ui/images.md\n@@ -106,4 +106,9 @@ up | cover\n keep | scale\n thumbnail | scale\n \n-For now plone.namedfile is still expecting the direction argument with the old values.\n\\ No newline at end of file\n+For now plone.namedfile is still expecting the direction argument with the old values.\n+\n+## Permissions\n+\n+The ImageScaling view is checking explicitly the permissions the current user has, in case you want to access objects which are normally not accessible to the current user, you have to override the validate_access method in ImageScale. In Products.EasyNewsletter you can find an example of that.\n+\n'

Repository: documentation


Branch: refs/heads/6-dev
Date: 2022-02-22T15:42:13-08:00
Author: Steve Piercy (stevepiercy) <web@stevepiercy.com>
Commit: https://github.com/plone/documentation/commit/facc095bcb543d2961f30e3f2fe4a6424f73dea0

English grammar fixes
Surround inline literals with backticks
Add html_meta tags
Add labels for future navigation ease

Files changed:
M docs/classic-ui/images.md

b'diff --git a/docs/classic-ui/images.md b/docs/classic-ui/images.md\nindex 0a40bb13..ab2807f8 100644\n--- a/docs/classic-ui/images.md\n+++ b/docs/classic-ui/images.md\n@@ -1,101 +1,118 @@\n ---\n html_meta:\n-  "description": ""\n-  "property=og:description": ""\n-  "property=og:title": ""\n-  "keywords": ""\n+  "description": "Image resolution and scaling in Plone Classic UI"\n+  "property=og:description": "Image resolution and scaling in Plone Classic UI"\n+  "property=og:title": "Image resolving and scaling"\n+  "keywords": "Plone, Classic UI, classic-ui, image, resize, scale"\n ---\n \n (classic-ui-images-label)=\n \n # Image resolving and scaling\n \n-Image scaling is done in plone.namedfile.scaling and most interesting the ImageScaling view.\n+Image scaling is done in `plone.namedfile.scaling`, specifically in the `ImageScaling` view.\n+\n+\n+(classic-ui-images-image-tag-label)=\n \n ## Image tag\n \n-To get a HTML tag for an scaled image, you can use the ImageScaling view as follow:\n+To get an HTML tag for a scaled image, you can use the `ImageScaling` view as follows:\n \n ```python\n from plone import api\n \n-scale_util = api.content.get_view(\'images\', context, request)\n-tag = scale_util.tag(\'leadimage\', scale=\'mini\')\n+scale_util = api.content.get_view("images", context, request)\n+tag = scale_util.tag("leadimage", scale="mini")\n ```\n \n-or to get a specific size:\n+To get a specific image size:\n \n ```python\n from plone import api\n \n-scale_util = api.content.get_view(\'images\', context, request)\n-tag = scale_util.tag(\'leadimage\', width="600", height="200")\n+scale_util = api.content.get_view("images", context, request)\n+tag = scale_util.tag("leadimage", width="600", height="200")\n ```\n \n-The first argument is the field name, followed by one of the following arguments:\n+The complete list of arguments with their default values is shown in the following example.\n+\n+```python\n+from plone import api\n+\n+scale_util = api.content.get_view("images", context, request)\n+tag = scale_util.tag(\n+    fieldname=None,\n+    scale=None,\n+    height=None,\n+    width=None,\n+    direction="thumbnail"\n+)\n+```\n \n-\tfieldname=None,\n-        scale=None,\n-        height=None,\n-        width=None,\n-        direction="thumbnail",\n \n+(classic-ui-images-image-scaling-no-tag-creation-label)=\n \n ## Image scaling without tag creation\n \n-To just get the scaling infos, without creating a HTML tag, you can use the ImageScaling view as follow:\n+To get the scaling information only without creating an HTML tag, you can use the `ImageScaling` view as follows:\n \n ```python\n from plone import api\n \n-scale_util = api.content.get_view(\'images\', context, request)\n-image_scale = scale_util.scale(\'leadimage\', scale=\'mini\')\n-print(image_scale.url)  # http://localhost:8080/Plone/enl/@@images/3d182f34-8773-4f20-a79d-8774c3151b7e.jpeg\n-print(image_scale.width)  # 200\n-print(image_scale.height)  # 110\n+scale_util = api.content.get_view("images", context, request)\n+image_scale = scale_util.scale("leadimage", scale="mini")\n+print(image_scale.url)\n+print(image_scale.width)\n+print(image_scale.height)\n+```\n+\n+This will produce the following output:\n+\n+```console\n+http://localhost:8080/Plone/enl/@@images/3d182f34-8773-4f20-a79d-8774c3151b7e.jpeg\n+200\n+110\n ```\n \n-the most important properties:\n+The most important properties are the following:\n \n-- data\n-- fieldname\n-- height\n-- mimetype\n-- srcset\n-- srcset_attribute\n-- tag\n-- uid\n-- url\n-- width\n+-   `data`\n+-   `fieldname`\n+-   `height`\n+-   `mimetype`\n+-   `srcset`\n+-   `srcset_attribute`\n+-   `tag`\n+-   `uid`\n+-   `url`\n+-   `width`\n \n-You can get a tag from this point too:\n-```python\n+At this point, you can also get an HTML tag, since you have created an instance of `api.content.get_view` in `scale_util`:\n+\n+```pycon\n >>> print(image_scale.tag)\n \n <img src="http://localhost:8080/Plone/news/newsitem1/@@images/9f676d46-0cb3-4512-a831-a5db4079bdfa.jpeg" alt="News Item 1!" title="News Item 1" height="21" width="32" srcset="http://localhost:8080/Plone/news/newsitem1/@@images/4a68513c-cffd-4de0-8a35-80627945b80f.jpeg 2x, http://localhost:8080/Plone/news/newsitem1/@@images/c32929c6-cb89-4ce7-846f-38adf29c09a4.jpeg 3x" />\n ```\n \n-or to get a specific size:\n+You can also get an HTML tag with a specific size:\n \n ```python\n from plone import api\n \n-scale_util = api.content.get_view(\'images\', context, request)\n-tag = scale_util.scale(\'leadimage\', width="600", height="200")\n+scale_util = api.content.get_view("images", context, request)\n+tag = scale_util.scale("leadimage", width="600", height="200")\n ```\n \n-The first argument is the field name, followed by one of the following arguments:\n \n-\tfieldname=None,\n-        scale=None,\n-        height=None,\n-        width=None,\n-        direction="thumbnail",\n+(classic-ui-images-scaling-direction-deprecated-in-favor-of-label)=\n \n-## Scaling direction / mode\n+## Scaling `direction` deprecated in favor of `mode`\n \n-The actual scaling is done in plone.scale:\n-In plone scale the `direction` argument is deprecated in favor of `mode` and values are converted as follow:\n+The actual scaling is done in `plone.scale`.\n+In Plone 6 in `plone.scale`, the `direction` argument is deprecated in favor of `mode`.\n+The values should be converted as follows:\n \n direction values | mode values\n -----------------|------------\n@@ -106,9 +123,13 @@ up | cover\n keep | scale\n thumbnail | scale\n \n-For now plone.namedfile is still expecting the direction argument with the old values.\n+For now `plone.namedfile` still expects the `direction` argument with the old values.\n \n-## Permissions\n \n-The ImageScaling view is checking explicitly the permissions the current user has, in case you want to access objects which are normally not accessible to the current user, you have to override the validate_access method in ImageScale. In Products.EasyNewsletter you can find an example of that.\n+(classic-ui-images-label)=\n+\n+## Permissions\n \n+The `ImageScaling` view explicitly checks the permissions of the current user.\n+If you want to access objects which are normally not accessible to the current user, then you have to override the `validate_access` method in `ImageScale`.\n+In `Products.EasyNewsletter` you can find an example of that.\n'

Repository: documentation


Branch: refs/heads/6-dev
Date: 2022-02-23T19:47:06-08:00
Author: Steve Piercy (stevepiercy) <web@stevepiercy.com>
Commit: https://github.com/plone/documentation/commit/00a58353fd4e35573c45cdeb399ca05170355ace

Fix Sphinx warning from duplicate label

Files changed:
M docs/classic-ui/images.md

b'diff --git a/docs/classic-ui/images.md b/docs/classic-ui/images.md\nindex ab2807f8..a350ca9f 100644\n--- a/docs/classic-ui/images.md\n+++ b/docs/classic-ui/images.md\n@@ -126,7 +126,7 @@ thumbnail | scale\n For now `plone.namedfile` still expects the `direction` argument with the old values.\n \n \n-(classic-ui-images-label)=\n+(classic-ui-images-permissions-label)=\n \n ## Permissions\n \n'

Repository: documentation


Branch: refs/heads/6-dev
Date: 2022-03-03T09:27:45+02:00
Author: Maik Derstappen (MrTango) <md@derico.de>
Commit: https://github.com/plone/documentation/commit/57fff367529e0f1eeb86cc7f4dc6fc26c46358de

Update docs/classic-ui/images.md

Co-authored-by: Jens W. Klein &lt;jk@kleinundpartner.at&gt;

Files changed:
M docs/classic-ui/images.md

b'diff --git a/docs/classic-ui/images.md b/docs/classic-ui/images.md\nindex a350ca9f..ce941a2b 100644\n--- a/docs/classic-ui/images.md\n+++ b/docs/classic-ui/images.md\n@@ -61,6 +61,7 @@ To get the scaling information only without creating an HTML tag, you can use th\n from plone import api\n \n scale_util = api.content.get_view("images", context, request)\n+# on the following line "leadimage" is the field name. The default Image content types field name is "image".\n image_scale = scale_util.scale("leadimage", scale="mini")\n print(image_scale.url)\n print(image_scale.width)\n'

Repository: documentation


Branch: refs/heads/6-dev
Date: 2022-03-03T09:28:03+02:00
Author: Maik Derstappen (MrTango) <md@derico.de>
Commit: https://github.com/plone/documentation/commit/6d18f2c912c26b9f7a81702bb2ad0b7efbe295db

Update docs/classic-ui/images.md

Co-authored-by: Jens W. Klein &lt;jk@kleinundpartner.at&gt;

Files changed:
M docs/classic-ui/images.md

b'diff --git a/docs/classic-ui/images.md b/docs/classic-ui/images.md\nindex ce941a2b..60cc53e6 100644\n--- a/docs/classic-ui/images.md\n+++ b/docs/classic-ui/images.md\n@@ -92,7 +92,7 @@ The most important properties are the following:\n At this point, you can also get an HTML tag, since you have created an instance of `api.content.get_view` in `scale_util`:\n \n ```pycon\n->>> print(image_scale.tag)\n+>>> print(image_scale.tag())\n \n <img src="http://localhost:8080/Plone/news/newsitem1/@@images/9f676d46-0cb3-4512-a831-a5db4079bdfa.jpeg" alt="News Item 1!" title="News Item 1" height="21" width="32" srcset="http://localhost:8080/Plone/news/newsitem1/@@images/4a68513c-cffd-4de0-8a35-80627945b80f.jpeg 2x, http://localhost:8080/Plone/news/newsitem1/@@images/c32929c6-cb89-4ce7-846f-38adf29c09a4.jpeg 3x" />\n ```\n'

Repository: documentation


Branch: refs/heads/6-dev
Date: 2022-03-03T09:28:32+02:00
Author: Maik Derstappen (MrTango) <md@derico.de>
Commit: https://github.com/plone/documentation/commit/65d2371becfcef43ea6d058a574153f279e9ea59

Update docs/classic-ui/images.md

Co-authored-by: Jens W. Klein &lt;jk@kleinundpartner.at&gt;

Files changed:
M docs/classic-ui/images.md

b'diff --git a/docs/classic-ui/images.md b/docs/classic-ui/images.md\nindex 60cc53e6..c7df6d53 100644\n--- a/docs/classic-ui/images.md\n+++ b/docs/classic-ui/images.md\n@@ -89,7 +89,7 @@ The most important properties are the following:\n -   `url`\n -   `width`\n \n-At this point, you can also get an HTML tag, since you have created an instance of `api.content.get_view` in `scale_util`:\n+You can directly create an HTML tag from `image_scale`:\n \n ```pycon\n >>> print(image_scale.tag())\n'

Repository: documentation


Branch: refs/heads/6-dev
Date: 2022-03-03T09:28:58+02:00
Author: Maik Derstappen (MrTango) <md@derico.de>
Commit: https://github.com/plone/documentation/commit/e724b3cdd5e01b07b05c6d764997e6ccdef2db74

Update docs/classic-ui/images.md

Co-authored-by: Jens W. Klein &lt;jk@kleinundpartner.at&gt;

Files changed:
M docs/classic-ui/images.md

b'diff --git a/docs/classic-ui/images.md b/docs/classic-ui/images.md\nindex c7df6d53..34e8fa79 100644\n--- a/docs/classic-ui/images.md\n+++ b/docs/classic-ui/images.md\n@@ -97,7 +97,7 @@ You can directly create an HTML tag from `image_scale`:\n <img src="http://localhost:8080/Plone/news/newsitem1/@@images/9f676d46-0cb3-4512-a831-a5db4079bdfa.jpeg" alt="News Item 1!" title="News Item 1" height="21" width="32" srcset="http://localhost:8080/Plone/news/newsitem1/@@images/4a68513c-cffd-4de0-8a35-80627945b80f.jpeg 2x, http://localhost:8080/Plone/news/newsitem1/@@images/c32929c6-cb89-4ce7-846f-38adf29c09a4.jpeg 3x" />\n ```\n \n-You can also get an HTML tag with a specific size:\n+Instead of using the configured named scales you can also get an HTML tag with any specific size in pixels:\n \n ```python\n from plone import api\n'

Repository: documentation


Branch: refs/heads/6-dev
Date: 2022-03-03T09:29:50+02:00
Author: Maik Derstappen (MrTango) <md@derico.de>
Commit: https://github.com/plone/documentation/commit/c76c78628766937f0d436c818b93055da83b207b

Update docs/classic-ui/images.md

Co-authored-by: Jens W. Klein &lt;jk@kleinundpartner.at&gt;

Files changed:
M docs/classic-ui/images.md

b'diff --git a/docs/classic-ui/images.md b/docs/classic-ui/images.md\nindex 34e8fa79..0801dbc6 100644\n--- a/docs/classic-ui/images.md\n+++ b/docs/classic-ui/images.md\n@@ -132,5 +132,5 @@ For now `plone.namedfile` still expects the `direction` argument with the old va\n ## Permissions\n \n The `ImageScaling` view explicitly checks the permissions of the current user.\n-If you want to access objects which are normally not accessible to the current user, then you have to override the `validate_access` method in `ImageScale`.\n+To access image scales which are normally not accessible to the current user override the `validate_access` method in `plone.namedfile.scaling.ImageScale`.\n In `Products.EasyNewsletter` you can find an example of that.\n'

Repository: documentation


Branch: refs/heads/6-dev
Date: 2022-03-03T02:54:00-08:00
Author: Steve Piercy (stevepiercy) <web@stevepiercy.com>
Commit: https://github.com/plone/documentation/commit/58481e400f28d62b1ad48bdf33572b2710c6f81c

Clean up grammar and punctuation.
Move "Scaling `direction` to be deprecated in favor of `mode`" into an "attention" admonition,
and change wording to be more clear about which form to use and when.

Files changed:
M docs/classic-ui/images.md

b'diff --git a/docs/classic-ui/images.md b/docs/classic-ui/images.md\nindex 0801dbc6..5b44e982 100644\n--- a/docs/classic-ui/images.md\n+++ b/docs/classic-ui/images.md\n@@ -61,7 +61,8 @@ To get the scaling information only without creating an HTML tag, you can use th\n from plone import api\n \n scale_util = api.content.get_view("images", context, request)\n-# on the following line "leadimage" is the field name. The default Image content types field name is "image".\n+# The default `Image` content type\'s field name is "image".\n+# On the following line of code, "leadimage" is the field name.\n image_scale = scale_util.scale("leadimage", scale="mini")\n print(image_scale.url)\n print(image_scale.width)\n@@ -97,7 +98,7 @@ You can directly create an HTML tag from `image_scale`:\n <img src="http://localhost:8080/Plone/news/newsitem1/@@images/9f676d46-0cb3-4512-a831-a5db4079bdfa.jpeg" alt="News Item 1!" title="News Item 1" height="21" width="32" srcset="http://localhost:8080/Plone/news/newsitem1/@@images/4a68513c-cffd-4de0-8a35-80627945b80f.jpeg 2x, http://localhost:8080/Plone/news/newsitem1/@@images/c32929c6-cb89-4ce7-846f-38adf29c09a4.jpeg 3x" />\n ```\n \n-Instead of using the configured named scales you can also get an HTML tag with any specific size in pixels:\n+Instead of using the configured named scales, you can get an HTML tag with any specific size in pixels:\n \n ```python\n from plone import api\n@@ -109,11 +110,12 @@ tag = scale_util.scale("leadimage", width="600", height="200")\n \n (classic-ui-images-scaling-direction-deprecated-in-favor-of-label)=\n \n-## Scaling `direction` deprecated in favor of `mode`\n+## Scaling `direction` to be deprecated in favor of `mode`\n \n-The actual scaling is done in `plone.scale`.\n-In Plone 6 in `plone.scale`, the `direction` argument is deprecated in favor of `mode`.\n-The values should be converted as follows:\n+```{attention}\n+In the upcoming release of Plone 6.0, in `plone.scale` the `direction` argument will be deprecated in favor of `mode`.\n+\n+`plone.scale` will continue to do scaling, but the values should be converted in your code as follows:\n \n direction values | mode values\n -----------------|------------\n@@ -124,7 +126,8 @@ up | cover\n keep | scale\n thumbnail | scale\n \n-For now `plone.namedfile` still expects the `direction` argument with the old values.\n+Until the final release of Plone 6.0, continue to use `plone.namedfile` with the `direction` argument and its values.\n+```\n \n \n (classic-ui-images-permissions-label)=\n@@ -132,5 +135,5 @@ For now `plone.namedfile` still expects the `direction` argument with the old va\n ## Permissions\n \n The `ImageScaling` view explicitly checks the permissions of the current user.\n-To access image scales which are normally not accessible to the current user override the `validate_access` method in `plone.namedfile.scaling.ImageScale`.\n+To access image scales, which are normally not accessible to the current user, override the `validate_access` method in `plone.namedfile.scaling.ImageScale`.\n In `Products.EasyNewsletter` you can find an example of that.\n'

Repository: documentation


Branch: refs/heads/6-dev
Date: 2022-03-03T13:27:17+02:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/documentation/commit/99d177cefefb3118ffe71b8075d21490e790f4fd

Improve image handling docs

Files changed:
M docs/classic-ui/images.md

b'diff --git a/docs/classic-ui/images.md b/docs/classic-ui/images.md\nindex 0801dbc6..b20553a9 100644\n--- a/docs/classic-ui/images.md\n+++ b/docs/classic-ui/images.md\n@@ -5,12 +5,58 @@ html_meta:\n   "property=og:title": "Image resolving and scaling"\n   "keywords": "Plone, Classic UI, classic-ui, image, resize, scale"\n ---\n-\n+****\n (classic-ui-images-label)=\n \n-# Image resolving and scaling\n+# Image handling\n+\n+The default content types and behaviors are using a `plone.namedfile.NamedBlobImage` field for all images.\n+\n+For this fields, image scaling and HTML tag creation is provided by the `plone.namedfile.scaling` module, specifically in the [`ImageScaling`](https://github.com/plone/plone.namedfile/blob/ecf33a2bc7a8c61888909bc383b3e08d80888e43/plone/namedfile/scaling.py#L350) view.\n+\n+Given a Dexterity content type named `news-item1` with a `plone.namedfile.NamedBlobImage` field named `image`, we can use the following API\'s to access the image scales and manage scales.\n+```{note}\n+We will use the image object as context in the following examples.\n+```\n+\n+## Default scales\n+\n+Plone allows you in the `/@@imaging-controlpanel` to configure which scales are available and what dimensions they should have. By default we have the following scales configured:\n+\n+* large 768:768\n+* preview 400:400\n+* mini 200:200\n+* thumb 128:128\n+* tile 64:64\n+* icon 32:32\n+* listing 16:16\n+\n+You can add or change scale as you like.\n+\n+\n+## Image resolving by URI\n+\n+Plone can resolve an image scale via URI in different ways.\n+\n+### By field and scale name\n+\n+Given our `news-item1` with the field `image`, we can get the name scale `thumb` as follows:\n+\n+http://localhost:8080/Plone/news-item1/@@images/image/thumb\n+\n+To get the original image, you can leave out the scale:\n+\n+http://localhost:8080/Plone/news-item1/@@images/image\n+\n+\n+\n+### By cacheable scale UID name\n+\n+When an image scale was created, it will be cached under the name `UID.jpeg` in the object annotations and can be resolved by it as follows:\n \n-Image scaling is done in `plone.namedfile.scaling`, specifically in the `ImageScaling` view.\n+http://localhost:8080/Plone/news-item1/@@images/3d182f34-8773-4f20-a79d-8774c3151b7e.jpeg\n+\n+This very useful for caching URL\'s in Varnish or the Browser. In case the scale definitions have changed, they will be saved again under a different UID, so that the URL will change and enforce the Browser or a cache proxy like Varnish to fetch it again.\n \n \n (classic-ui-images-image-tag-label)=\n@@ -23,7 +69,7 @@ To get an HTML tag for a scaled image, you can use the `ImageScaling` view as fo\n from plone import api\n \n scale_util = api.content.get_view("images", context, request)\n-tag = scale_util.tag("leadimage", scale="mini")\n+tag = scale_util.tag("image", scale="mini")\n ```\n \n To get a specific image size:\n@@ -32,7 +78,7 @@ To get a specific image size:\n from plone import api\n \n scale_util = api.content.get_view("images", context, request)\n-tag = scale_util.tag("leadimage", width="600", height="200")\n+tag = scale_util.tag("image", width="600", height="200")\n ```\n \n The complete list of arguments with their default values is shown in the following example.\n@@ -61,8 +107,9 @@ To get the scaling information only without creating an HTML tag, you can use th\n from plone import api\n \n scale_util = api.content.get_view("images", context, request)\n-# on the following line "leadimage" is the field name. The default Image content types field name is "image".\n-image_scale = scale_util.scale("leadimage", scale="mini")\n+# on the following line "image" is the field name.\n+# The default Image content types field name is "image".\n+image_scale = scale_util.scale("image", scale="mini")\n print(image_scale.url)\n print(image_scale.width)\n print(image_scale.height)\n@@ -71,7 +118,7 @@ print(image_scale.height)\n This will produce the following output:\n \n ```console\n-http://localhost:8080/Plone/enl/@@images/3d182f34-8773-4f20-a79d-8774c3151b7e.jpeg\n+http://localhost:8080/Plone/news-item1/@@images/3d182f34-8773-4f20-a79d-8774c3151b7e.jpeg\n 200\n 110\n ```\n@@ -103,28 +150,73 @@ Instead of using the configured named scales you can also get an HTML tag with a\n from plone import api\n \n scale_util = api.content.get_view("images", context, request)\n-tag = scale_util.scale("leadimage", width="600", height="200")\n+tag = scale_util.scale("image", width="600", height="200")\n+```\n+\n+### Using image_scale in templates\n+\n+You could use the URL-variant from above, but that would be an an uncached version. To create a cached scale in a page template you can do the following:\n+\n+```xml\n+<div tal:define="scale_view context/@@images;\n+                 image_scale python: scale_view.scale(\'image\', \'mini\')">\n+  <img\n+    src="${python: image_scale.url}"\n+    width="${python: image_scale.width"\n+    height="${python: image_scale.height}"\n+    >\n+</div>\n+```\n+\n+or you can just get the HTML tag back and replace the current tag with it:\n+\n+```xml\n+<div tal:define="scale_view context/@@images">\n+  <img tal:replace="structured python: scale_view.tag(\'image\', \'mini\')">\n+</div>\n+```\n+\n+You can also provide the following keyword arguments to set title, alt, css_class for the generated tag:\n+\n+```xml\n+<div tal:define="scale_view context/@@images">\n+  <img tal:replace="structured python: scale_view.tag(\'banner\', \'mini\', title=\'The Banner\', alt=\'Alternative text\', css_class=\'banner\')">\n+</div>\n+```\n+\n+### Get image_scale by cached UID name\n+\n+If you only have the cached image name from an URL and need to get the image scale, unfortunately you can\'t use restrictedTraverse(), as this will not be able to resolve the scale. But you can use this workaround, by calling the `publishTraverse` method in `ImageScaling` directly:\n+\n+```python\n+import re\n+from plone import api\n+\n+uri = "http://localhost:8080/Plone/news-item1/@@images/3d182f34-8773-4f20-a79d-8774c3151b7e.jpeg"\n+image_url = re.compile(r"(.*@@images)\\/([a-zA-Z0-9.-]*)\\/?([a-zA-Z]*)")\n+\n+url_match = image_url.match(uri)\n+groups = url_match.groups()\n+# ("http://localhost:8080/Plone/news-item1", "3d182f34-8773-4f20-a79d-8774c3151b7e.jpeg")\n+scale_util = api.content.get_view("images", context, request)\n+image_scale = scaling_util.publishTraverse(context.REQUEST, groups[1])\n ```\n \n \n (classic-ui-images-scaling-direction-deprecated-in-favor-of-label)=\n \n-## Scaling `direction` deprecated in favor of `mode`\n+## Scaling `direction`\n \n-The actual scaling is done in `plone.scale`.\n-In Plone 6 in `plone.scale`, the `direction` argument is deprecated in favor of `mode`.\n-The values should be converted as follows:\n+The default direction is `thumbnail`.\n \n-direction values | mode values\n------------------|------------\n-scale-crop-to-fit | contain\n-down | contain\n-scale-crop-to-fill | cover\n-up | cover\n-keep | scale\n-thumbnail | scale\n+Other options are:\n \n-For now `plone.namedfile` still expects the `direction` argument with the old values.\n+* scale-crop-to-fit\n+* down\n+* scale-crop-to-fill\n+* up\n+* keep\n+* thumbnail\n \n \n (classic-ui-images-permissions-label)=\n@@ -132,5 +224,4 @@ For now `plone.namedfile` still expects the `direction` argument with the old va\n ## Permissions\n \n The `ImageScaling` view explicitly checks the permissions of the current user.\n-To access image scales which are normally not accessible to the current user override the `validate_access` method in `plone.namedfile.scaling.ImageScale`.\n-In `Products.EasyNewsletter` you can find an example of that.\n+To access image scales which are normally not accessible to the current user, override the `validate_access` method in `plone.namedfile.scaling.ImageScale`.\n'

Repository: documentation


Branch: refs/heads/6-dev
Date: 2022-03-03T13:28:51+02:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/documentation/commit/0d37e1a748cfe99ed061935e490e9538328b4f13

Merge branch 'mrtango-classic-ui-images' of https://github.com/plone/documentation into mrtango-classic-ui-images

Files changed:
M docs/classic-ui/images.md

b'diff --git a/docs/classic-ui/images.md b/docs/classic-ui/images.md\nindex b20553a9..2e01e2ce 100644\n--- a/docs/classic-ui/images.md\n+++ b/docs/classic-ui/images.md\n@@ -107,9 +107,15 @@ To get the scaling information only without creating an HTML tag, you can use th\n from plone import api\n \n scale_util = api.content.get_view("images", context, request)\n+<<<<<<< HEAD\n # on the following line "image" is the field name.\n # The default Image content types field name is "image".\n image_scale = scale_util.scale("image", scale="mini")\n+=======\n+# The default `Image` content type\'s field name is "image".\n+# On the following line of code, "leadimage" is the field name.\n+image_scale = scale_util.scale("leadimage", scale="mini")\n+>>>>>>> 58481e400f28d62b1ad48bdf33572b2710c6f81c\n print(image_scale.url)\n print(image_scale.width)\n print(image_scale.height)\n@@ -144,7 +150,7 @@ You can directly create an HTML tag from `image_scale`:\n <img src="http://localhost:8080/Plone/news/newsitem1/@@images/9f676d46-0cb3-4512-a831-a5db4079bdfa.jpeg" alt="News Item 1!" title="News Item 1" height="21" width="32" srcset="http://localhost:8080/Plone/news/newsitem1/@@images/4a68513c-cffd-4de0-8a35-80627945b80f.jpeg 2x, http://localhost:8080/Plone/news/newsitem1/@@images/c32929c6-cb89-4ce7-846f-38adf29c09a4.jpeg 3x" />\n ```\n \n-Instead of using the configured named scales you can also get an HTML tag with any specific size in pixels:\n+Instead of using the configured named scales, you can get an HTML tag with any specific size in pixels:\n \n ```python\n from plone import api\n@@ -205,18 +211,32 @@ image_scale = scaling_util.publishTraverse(context.REQUEST, groups[1])\n \n (classic-ui-images-scaling-direction-deprecated-in-favor-of-label)=\n \n+<<<<<<< HEAD\n ## Scaling `direction`\n \n The default direction is `thumbnail`.\n+=======\n+## Scaling `direction` to be deprecated in favor of `mode`\n+\n+```{attention}\n+In the upcoming release of Plone 6.0, in `plone.scale` the `direction` argument will be deprecated in favor of `mode`.\n+\n+`plone.scale` will continue to do scaling, but the values should be converted in your code as follows:\n+>>>>>>> 58481e400f28d62b1ad48bdf33572b2710c6f81c\n \n Other options are:\n \n+<<<<<<< HEAD\n * scale-crop-to-fit\n * down\n * scale-crop-to-fill\n * up\n * keep\n * thumbnail\n+=======\n+Until the final release of Plone 6.0, continue to use `plone.namedfile` with the `direction` argument and its values.\n+```\n+>>>>>>> 58481e400f28d62b1ad48bdf33572b2710c6f81c\n \n \n (classic-ui-images-permissions-label)=\n@@ -224,4 +244,9 @@ Other options are:\n ## Permissions\n \n The `ImageScaling` view explicitly checks the permissions of the current user.\n+<<<<<<< HEAD\n To access image scales which are normally not accessible to the current user, override the `validate_access` method in `plone.namedfile.scaling.ImageScale`.\n+=======\n+To access image scales, which are normally not accessible to the current user, override the `validate_access` method in `plone.namedfile.scaling.ImageScale`.\n+In `Products.EasyNewsletter` you can find an example of that.\n+>>>>>>> 58481e400f28d62b1ad48bdf33572b2710c6f81c\n'

Repository: documentation


Branch: refs/heads/6-dev
Date: 2022-03-03T14:34:11+02:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/documentation/commit/edd25e986ba1da345bf746d7759dd219e4435e50

resolve merge conflicts

Files changed:
M docs/classic-ui/images.md

b'diff --git a/docs/classic-ui/images.md b/docs/classic-ui/images.md\nindex 2e01e2ce..4f9b42d7 100644\n--- a/docs/classic-ui/images.md\n+++ b/docs/classic-ui/images.md\n@@ -107,15 +107,9 @@ To get the scaling information only without creating an HTML tag, you can use th\n from plone import api\n \n scale_util = api.content.get_view("images", context, request)\n-<<<<<<< HEAD\n # on the following line "image" is the field name.\n # The default Image content types field name is "image".\n image_scale = scale_util.scale("image", scale="mini")\n-=======\n-# The default `Image` content type\'s field name is "image".\n-# On the following line of code, "leadimage" is the field name.\n-image_scale = scale_util.scale("leadimage", scale="mini")\n->>>>>>> 58481e400f28d62b1ad48bdf33572b2710c6f81c\n print(image_scale.url)\n print(image_scale.width)\n print(image_scale.height)\n@@ -211,32 +205,18 @@ image_scale = scaling_util.publishTraverse(context.REQUEST, groups[1])\n \n (classic-ui-images-scaling-direction-deprecated-in-favor-of-label)=\n \n-<<<<<<< HEAD\n ## Scaling `direction`\n \n The default direction is `thumbnail`.\n-=======\n-## Scaling `direction` to be deprecated in favor of `mode`\n-\n-```{attention}\n-In the upcoming release of Plone 6.0, in `plone.scale` the `direction` argument will be deprecated in favor of `mode`.\n-\n-`plone.scale` will continue to do scaling, but the values should be converted in your code as follows:\n->>>>>>> 58481e400f28d62b1ad48bdf33572b2710c6f81c\n \n Other options are:\n \n-<<<<<<< HEAD\n * scale-crop-to-fit\n * down\n * scale-crop-to-fill\n * up\n * keep\n * thumbnail\n-=======\n-Until the final release of Plone 6.0, continue to use `plone.namedfile` with the `direction` argument and its values.\n-```\n->>>>>>> 58481e400f28d62b1ad48bdf33572b2710c6f81c\n \n \n (classic-ui-images-permissions-label)=\n@@ -244,9 +224,4 @@ Until the final release of Plone 6.0, continue to use `plone.namedfile` with the\n ## Permissions\n \n The `ImageScaling` view explicitly checks the permissions of the current user.\n-<<<<<<< HEAD\n To access image scales which are normally not accessible to the current user, override the `validate_access` method in `plone.namedfile.scaling.ImageScale`.\n-=======\n-To access image scales, which are normally not accessible to the current user, override the `validate_access` method in `plone.namedfile.scaling.ImageScale`.\n-In `Products.EasyNewsletter` you can find an example of that.\n->>>>>>> 58481e400f28d62b1ad48bdf33572b2710c6f81c\n'

Repository: documentation


Branch: refs/heads/6-dev
Date: 2022-03-03T14:35:46+02:00
Author: Maik Derstappen (MrTango) <md@derico.de>
Commit: https://github.com/plone/documentation/commit/f715255b0df71f7decf099f715adfbcc7a43b6a1

Update docs/classic-ui/images.md

Co-authored-by: Steve Piercy &lt;web@stevepiercy.com&gt;

Files changed:
M docs/classic-ui/images.md

b'diff --git a/docs/classic-ui/images.md b/docs/classic-ui/images.md\nindex 4f9b42d7..3dfa848f 100644\n--- a/docs/classic-ui/images.md\n+++ b/docs/classic-ui/images.md\n@@ -5,7 +5,6 @@ html_meta:\n   "property=og:title": "Image resolving and scaling"\n   "keywords": "Plone, Classic UI, classic-ui, image, resize, scale"\n ---\n-****\n (classic-ui-images-label)=\n \n # Image handling\n'

Repository: documentation


Branch: refs/heads/6-dev
Date: 2022-03-04T04:03:39-08:00
Author: Steve Piercy (stevepiercy) <web@stevepiercy.com>
Commit: https://github.com/plone/documentation/commit/b6c77816267f8940973a85010a4f37dc9730f58e

Fix MyST syntax, English grammar
Add MyST labels to section headings
Add suggestions from @jensens

Files changed:
M docs/classic-ui/images.md

b'diff --git a/docs/classic-ui/images.md b/docs/classic-ui/images.md\nindex 3dfa848f..977e0572 100644\n--- a/docs/classic-ui/images.md\n+++ b/docs/classic-ui/images.md\n@@ -5,22 +5,26 @@ html_meta:\n   "property=og:title": "Image resolving and scaling"\n   "keywords": "Plone, Classic UI, classic-ui, image, resize, scale"\n ---\n+\n (classic-ui-images-label)=\n \n # Image handling\n \n-The default content types and behaviors are using a `plone.namedfile.NamedBlobImage` field for all images.\n+The default content types and behaviors use the field `plone.namedfile.NamedBlobImage` for all images.\n+\n+For this field, image scaling and HTML tag creation is provided by the `plone.namedfile.scaling` module, specifically in the [`ImageScaling`](https://github.com/plone/plone.namedfile/blob/ecf33a2bc7a8c61888909bc383b3e08d80888e43/plone/namedfile/scaling.py#L350) view.\n \n-For this fields, image scaling and HTML tag creation is provided by the `plone.namedfile.scaling` module, specifically in the [`ImageScaling`](https://github.com/plone/plone.namedfile/blob/ecf33a2bc7a8c61888909bc383b3e08d80888e43/plone/namedfile/scaling.py#L350) view.\n+Given a Dexterity content type named `news-item1` with a `plone.namedfile.NamedBlobImage` field named `image`, we can use the following APIs to access the image scales and manage scales.\n \n-Given a Dexterity content type named `news-item1` with a `plone.namedfile.NamedBlobImage` field named `image`, we can use the following API\'s to access the image scales and manage scales.\n ```{note}\n We will use the image object as context in the following examples.\n ```\n \n+(classic-ui-images-default-scales-label)=\n+\n ## Default scales\n \n-Plone allows you in the `/@@imaging-controlpanel` to configure which scales are available and what dimensions they should have. By default we have the following scales configured:\n+In `/@@imaging-controlpanel` Plone allows you to configure which scales are available and what dimensions they should have. By default we have the following scales configured:\n \n * large 768:768\n * preview 400:400\n@@ -30,32 +34,41 @@ Plone allows you in the `/@@imaging-controlpanel` to configure which scales are\n * icon 32:32\n * listing 16:16\n \n-You can add or change scale as you like.\n+You can add or change scales as you like.\n \n \n+(classic-ui-images-image-resolving-by-uri-label)=\n+\n ## Image resolving by URI\n \n Plone can resolve an image scale via URI in different ways.\n \n+\n+(classic-ui-images-by-field-and-scale-name-label)=\n+\n ### By field and scale name\n \n Given our `news-item1` with the field `image`, we can get the name scale `thumb` as follows:\n \n-http://localhost:8080/Plone/news-item1/@@images/image/thumb\n+`http://localhost:8080/Plone/news-item1/@@images/image/thumb`\n \n To get the original image, you can leave out the scale:\n \n-http://localhost:8080/Plone/news-item1/@@images/image\n+`http://localhost:8080/Plone/news-item1/@@images/image`\n \n \n+(classic-ui-images-by-cacheable-scale-uid-name-label)=\n \n ### By cacheable scale UID name\n \n-When an image scale was created, it will be cached under the name `UID.jpeg` in the object annotations and can be resolved by it as follows:\n+When an image scale is created, it will be cached under the name `UID.jpeg` in the object annotations.\n+It can be resolved as follows:\n \n-http://localhost:8080/Plone/news-item1/@@images/3d182f34-8773-4f20-a79d-8774c3151b7e.jpeg\n+`http://localhost:8080/Plone/news-item1/@@images/3d182f34-8773-4f20-a79d-8774c3151b7e.jpeg`\n \n-This very useful for caching URL\'s in Varnish or the Browser. In case the scale definitions have changed, they will be saved again under a different UID, so that the URL will change and enforce the Browser or a cache proxy like Varnish to fetch it again.\n+This is useful for caching URLs in Varnish or the browser.\n+In case the uploaded image or scale definitions have changed, they will be saved again under a different UID.\n+This changes the URL and forces either the browser, or a cache proxy such as Varnish, to fetch it again.\n \n \n (classic-ui-images-image-tag-label)=\n@@ -95,6 +108,8 @@ tag = scale_util.tag(\n )\n ```\n \n+If you pass additional kwargs to `tag`, they become attributes on `tag`.\n+\n \n (classic-ui-images-image-scaling-no-tag-creation-label)=\n \n@@ -106,8 +121,8 @@ To get the scaling information only without creating an HTML tag, you can use th\n from plone import api\n \n scale_util = api.content.get_view("images", context, request)\n-# on the following line "image" is the field name.\n-# The default Image content types field name is "image".\n+# The default `Image` content type\'s field name is "image".\n+# On the following line of code, "image" is the field name.\n image_scale = scale_util.scale("image", scale="mini")\n print(image_scale.url)\n print(image_scale.width)\n@@ -152,9 +167,12 @@ scale_util = api.content.get_view("images", context, request)\n tag = scale_util.scale("image", width="600", height="200")\n ```\n \n+(classic-ui-images-using-image_scale0-in-templates-label)=\n+\n ### Using image_scale in templates\n \n-You could use the URL-variant from above, but that would be an an uncached version. To create a cached scale in a page template you can do the following:\n+You could use the URL-variant from above, but that would be an uncached version.\n+To create a cached scale in a page template you can do the following:\n \n ```xml\n <div tal:define="scale_view context/@@images;\n@@ -167,7 +185,7 @@ You could use the URL-variant from above, but that would be an an uncached versi\n </div>\n ```\n \n-or you can just get the HTML tag back and replace the current tag with it:\n+Or you can get the HTML tag back, and replace the current tag with it:\n \n ```xml\n <div tal:define="scale_view context/@@images">\n@@ -175,7 +193,7 @@ or you can just get the HTML tag back and replace the current tag with it:\n </div>\n ```\n \n-You can also provide the following keyword arguments to set title, alt, css_class for the generated tag:\n+You can also provide the following keyword arguments to set `title`, `alt`, or `css_class` for the generated tag:\n \n ```xml\n <div tal:define="scale_view context/@@images">\n@@ -183,6 +201,8 @@ You can also provide the following keyword arguments to set title, alt, css_clas\n </div>\n ```\n \n+(classic-ui-images-get-image_scale-by-cached-uid-name-label)=\n+\n ### Get image_scale by cached UID name\n \n If you only have the cached image name from an URL and need to get the image scale, unfortunately you can\'t use restrictedTraverse(), as this will not be able to resolve the scale. But you can use this workaround, by calling the `publishTraverse` method in `ImageScaling` directly:\n@@ -202,7 +222,7 @@ image_scale = scaling_util.publishTraverse(context.REQUEST, groups[1])\n ```\n \n \n-(classic-ui-images-scaling-direction-deprecated-in-favor-of-label)=\n+(classic-ui-images-scaling-direction-label)=\n \n ## Scaling `direction`\n \n@@ -210,12 +230,12 @@ The default direction is `thumbnail`.\n \n Other options are:\n \n-* scale-crop-to-fit\n-* down\n-* scale-crop-to-fill\n-* up\n-* keep\n-* thumbnail\n+* `down`\n+* `keep`\n+* `scale-crop-to-fill`\n+* `scale-crop-to-fit`\n+* `thumbnail`\n+* `up`\n \n \n (classic-ui-images-permissions-label)=\n@@ -223,4 +243,4 @@ Other options are:\n ## Permissions\n \n The `ImageScaling` view explicitly checks the permissions of the current user.\n-To access image scales which are normally not accessible to the current user, override the `validate_access` method in `plone.namedfile.scaling.ImageScale`.\n+To access image scales, which are normally not accessible to the current user, override the `validate_access` method in `plone.namedfile.scaling.ImageScale`.\n'

Repository: documentation


Branch: refs/heads/6-dev
Date: 2022-03-04T15:01:36+02:00
Author: Maik Derstappen (MrTango) <md@derico.de>
Commit: https://github.com/plone/documentation/commit/72fe14054d364ef60c48fe4365dbbfb0a8527662

Update docs/classic-ui/images.md

Co-authored-by: Jens W. Klein &lt;jk@kleinundpartner.at&gt;

Files changed:
M docs/classic-ui/images.md

b'diff --git a/docs/classic-ui/images.md b/docs/classic-ui/images.md\nindex 977e0572..21c48145 100644\n--- a/docs/classic-ui/images.md\n+++ b/docs/classic-ui/images.md\n@@ -61,7 +61,8 @@ To get the original image, you can leave out the scale:\n \n ### By cacheable scale UID name\n \n-When an image scale is created, it will be cached under the name `UID.jpeg` in the object annotations.\n+When an image scale is created, it will be cached under the name `UID.EXT` (i.e. `f4c34254b44ba351af7393bfe0296664.jpeg`) in the object annotations.\n+Scaling keeps the uploaded formats, except for TIFF which ends up as JPEG.\n It can be resolved as follows:\n \n `http://localhost:8080/Plone/news-item1/@@images/3d182f34-8773-4f20-a79d-8774c3151b7e.jpeg`\n'

Repository: documentation


Branch: refs/heads/6-dev
Date: 2022-03-09T10:35:14+02:00
Author: Maik Derstappen (MrTango) <md@derico.de>
Commit: https://github.com/plone/documentation/commit/7cb60aad0d4c0b11d9d46dd5bc948be3fd6b3b23

Merge pull request #1192 from plone/mrtango-classic-ui-images

Add images chapter to classic-ui docs

Files changed:
A docs/classic-ui/images.md
M docs/classic-ui/index.md

b'diff --git a/docs/classic-ui/images.md b/docs/classic-ui/images.md\nnew file mode 100644\nindex 00000000..21c48145\n--- /dev/null\n+++ b/docs/classic-ui/images.md\n@@ -0,0 +1,247 @@\n+---\n+html_meta:\n+  "description": "Image resolution and scaling in Plone Classic UI"\n+  "property=og:description": "Image resolution and scaling in Plone Classic UI"\n+  "property=og:title": "Image resolving and scaling"\n+  "keywords": "Plone, Classic UI, classic-ui, image, resize, scale"\n+---\n+\n+(classic-ui-images-label)=\n+\n+# Image handling\n+\n+The default content types and behaviors use the field `plone.namedfile.NamedBlobImage` for all images.\n+\n+For this field, image scaling and HTML tag creation is provided by the `plone.namedfile.scaling` module, specifically in the [`ImageScaling`](https://github.com/plone/plone.namedfile/blob/ecf33a2bc7a8c61888909bc383b3e08d80888e43/plone/namedfile/scaling.py#L350) view.\n+\n+Given a Dexterity content type named `news-item1` with a `plone.namedfile.NamedBlobImage` field named `image`, we can use the following APIs to access the image scales and manage scales.\n+\n+```{note}\n+We will use the image object as context in the following examples.\n+```\n+\n+(classic-ui-images-default-scales-label)=\n+\n+## Default scales\n+\n+In `/@@imaging-controlpanel` Plone allows you to configure which scales are available and what dimensions they should have. By default we have the following scales configured:\n+\n+* large 768:768\n+* preview 400:400\n+* mini 200:200\n+* thumb 128:128\n+* tile 64:64\n+* icon 32:32\n+* listing 16:16\n+\n+You can add or change scales as you like.\n+\n+\n+(classic-ui-images-image-resolving-by-uri-label)=\n+\n+## Image resolving by URI\n+\n+Plone can resolve an image scale via URI in different ways.\n+\n+\n+(classic-ui-images-by-field-and-scale-name-label)=\n+\n+### By field and scale name\n+\n+Given our `news-item1` with the field `image`, we can get the name scale `thumb` as follows:\n+\n+`http://localhost:8080/Plone/news-item1/@@images/image/thumb`\n+\n+To get the original image, you can leave out the scale:\n+\n+`http://localhost:8080/Plone/news-item1/@@images/image`\n+\n+\n+(classic-ui-images-by-cacheable-scale-uid-name-label)=\n+\n+### By cacheable scale UID name\n+\n+When an image scale is created, it will be cached under the name `UID.EXT` (i.e. `f4c34254b44ba351af7393bfe0296664.jpeg`) in the object annotations.\n+Scaling keeps the uploaded formats, except for TIFF which ends up as JPEG.\n+It can be resolved as follows:\n+\n+`http://localhost:8080/Plone/news-item1/@@images/3d182f34-8773-4f20-a79d-8774c3151b7e.jpeg`\n+\n+This is useful for caching URLs in Varnish or the browser.\n+In case the uploaded image or scale definitions have changed, they will be saved again under a different UID.\n+This changes the URL and forces either the browser, or a cache proxy such as Varnish, to fetch it again.\n+\n+\n+(classic-ui-images-image-tag-label)=\n+\n+## Image tag\n+\n+To get an HTML tag for a scaled image, you can use the `ImageScaling` view as follows:\n+\n+```python\n+from plone import api\n+\n+scale_util = api.content.get_view("images", context, request)\n+tag = scale_util.tag("image", scale="mini")\n+```\n+\n+To get a specific image size:\n+\n+```python\n+from plone import api\n+\n+scale_util = api.content.get_view("images", context, request)\n+tag = scale_util.tag("image", width="600", height="200")\n+```\n+\n+The complete list of arguments with their default values is shown in the following example.\n+\n+```python\n+from plone import api\n+\n+scale_util = api.content.get_view("images", context, request)\n+tag = scale_util.tag(\n+    fieldname=None,\n+    scale=None,\n+    height=None,\n+    width=None,\n+    direction="thumbnail"\n+)\n+```\n+\n+If you pass additional kwargs to `tag`, they become attributes on `tag`.\n+\n+\n+(classic-ui-images-image-scaling-no-tag-creation-label)=\n+\n+## Image scaling without tag creation\n+\n+To get the scaling information only without creating an HTML tag, you can use the `ImageScaling` view as follows:\n+\n+```python\n+from plone import api\n+\n+scale_util = api.content.get_view("images", context, request)\n+# The default `Image` content type\'s field name is "image".\n+# On the following line of code, "image" is the field name.\n+image_scale = scale_util.scale("image", scale="mini")\n+print(image_scale.url)\n+print(image_scale.width)\n+print(image_scale.height)\n+```\n+\n+This will produce the following output:\n+\n+```console\n+http://localhost:8080/Plone/news-item1/@@images/3d182f34-8773-4f20-a79d-8774c3151b7e.jpeg\n+200\n+110\n+```\n+\n+The most important properties are the following:\n+\n+-   `data`\n+-   `fieldname`\n+-   `height`\n+-   `mimetype`\n+-   `srcset`\n+-   `srcset_attribute`\n+-   `tag`\n+-   `uid`\n+-   `url`\n+-   `width`\n+\n+You can directly create an HTML tag from `image_scale`:\n+\n+```pycon\n+>>> print(image_scale.tag())\n+\n+<img src="http://localhost:8080/Plone/news/newsitem1/@@images/9f676d46-0cb3-4512-a831-a5db4079bdfa.jpeg" alt="News Item 1!" title="News Item 1" height="21" width="32" srcset="http://localhost:8080/Plone/news/newsitem1/@@images/4a68513c-cffd-4de0-8a35-80627945b80f.jpeg 2x, http://localhost:8080/Plone/news/newsitem1/@@images/c32929c6-cb89-4ce7-846f-38adf29c09a4.jpeg 3x" />\n+```\n+\n+Instead of using the configured named scales, you can get an HTML tag with any specific size in pixels:\n+\n+```python\n+from plone import api\n+\n+scale_util = api.content.get_view("images", context, request)\n+tag = scale_util.scale("image", width="600", height="200")\n+```\n+\n+(classic-ui-images-using-image_scale0-in-templates-label)=\n+\n+### Using image_scale in templates\n+\n+You could use the URL-variant from above, but that would be an uncached version.\n+To create a cached scale in a page template you can do the following:\n+\n+```xml\n+<div tal:define="scale_view context/@@images;\n+                 image_scale python: scale_view.scale(\'image\', \'mini\')">\n+  <img\n+    src="${python: image_scale.url}"\n+    width="${python: image_scale.width"\n+    height="${python: image_scale.height}"\n+    >\n+</div>\n+```\n+\n+Or you can get the HTML tag back, and replace the current tag with it:\n+\n+```xml\n+<div tal:define="scale_view context/@@images">\n+  <img tal:replace="structured python: scale_view.tag(\'image\', \'mini\')">\n+</div>\n+```\n+\n+You can also provide the following keyword arguments to set `title`, `alt`, or `css_class` for the generated tag:\n+\n+```xml\n+<div tal:define="scale_view context/@@images">\n+  <img tal:replace="structured python: scale_view.tag(\'banner\', \'mini\', title=\'The Banner\', alt=\'Alternative text\', css_class=\'banner\')">\n+</div>\n+```\n+\n+(classic-ui-images-get-image_scale-by-cached-uid-name-label)=\n+\n+### Get image_scale by cached UID name\n+\n+If you only have the cached image name from an URL and need to get the image scale, unfortunately you can\'t use restrictedTraverse(), as this will not be able to resolve the scale. But you can use this workaround, by calling the `publishTraverse` method in `ImageScaling` directly:\n+\n+```python\n+import re\n+from plone import api\n+\n+uri = "http://localhost:8080/Plone/news-item1/@@images/3d182f34-8773-4f20-a79d-8774c3151b7e.jpeg"\n+image_url = re.compile(r"(.*@@images)\\/([a-zA-Z0-9.-]*)\\/?([a-zA-Z]*)")\n+\n+url_match = image_url.match(uri)\n+groups = url_match.groups()\n+# ("http://localhost:8080/Plone/news-item1", "3d182f34-8773-4f20-a79d-8774c3151b7e.jpeg")\n+scale_util = api.content.get_view("images", context, request)\n+image_scale = scaling_util.publishTraverse(context.REQUEST, groups[1])\n+```\n+\n+\n+(classic-ui-images-scaling-direction-label)=\n+\n+## Scaling `direction`\n+\n+The default direction is `thumbnail`.\n+\n+Other options are:\n+\n+* `down`\n+* `keep`\n+* `scale-crop-to-fill`\n+* `scale-crop-to-fit`\n+* `thumbnail`\n+* `up`\n+\n+\n+(classic-ui-images-permissions-label)=\n+\n+## Permissions\n+\n+The `ImageScaling` view explicitly checks the permissions of the current user.\n+To access image scales, which are normally not accessible to the current user, override the `validate_access` method in `plone.namedfile.scaling.ImageScale`.\ndiff --git a/docs/classic-ui/index.md b/docs/classic-ui/index.md\nindex 5a1fc6ef..b0352712 100644\n--- a/docs/classic-ui/index.md\n+++ b/docs/classic-ui/index.md\n@@ -27,13 +27,13 @@ This frontend is now called "Classic UI".\n \n Choosing one frontend over another depends on several factors.\n \n-Classic UI would be a better choice for the following situations. \n+Classic UI would be a better choice for the following situations.\n \n -   Reason 1\n -   Reason 2\n -   Reason N\n \n-The default frontend Volto would be a better choice for the following situations. \n+The default frontend Volto would be a better choice for the following situations.\n \n -   Reason 1\n -   Reason 2\n@@ -55,6 +55,7 @@ viewlets\n forms\n portlets\n csrf\n+images\n icons\n recipes\n whatsnew\n'

