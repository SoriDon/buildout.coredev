Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2017-03-10T22:42:01+01:00
Author: Diederik Veeze (didrix) <d.veeze@zestsoftware.nl>
Commit: https://github.com/plone/Products.CMFPlone/commit/25554b056462770dc73ae3407f1150bc69516709

Make use of plone.namedfile's tag() function to generate img tags.

Files changed:
M CHANGES.rst
M Products/CMFPlone/browser/templates/search.pt
M Products/CMFPlone/skins/plone_templates/recently_modified.pt
M Products/CMFPlone/skins/plone_templates/recently_published.pt

diff --git a/CHANGES.rst b/CHANGES.rst
index f378854..b0e702b 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -508,6 +508,10 @@ Fixes:
 
 - Fix issue where incorrectly configured formats would cause TinyMCE to error
   [vangheem]
+- Make use of plone.namedfile's tag() function to generate img tags. Part of plip 1483.
+  [didrix]
+
+Fixes:
 
 - Closes #1513 'Wrong portal_url used for TinyMCE in multilingual site',
   also refactors the patterns settings and cleans it up.
diff --git a/Products/CMFPlone/browser/templates/search.pt b/Products/CMFPlone/browser/templates/search.pt
index ef5ea07..0178f66 100644
--- a/Products/CMFPlone/browser/templates/search.pt
+++ b/Products/CMFPlone/browser/templates/search.pt
@@ -222,9 +222,9 @@
                           <tal:results repeat="item batch">
                             <li tal:define="hasIcon item/getIcon">
                               <span class="result-title">
-                                <img class="image-icon"
-                                     tal:condition="hasIcon"
-                                     tal:attributes="src string:${item/getURL}/@@images/image/icon;">
+                                <img tal:condition="hasIcon"
+                                     tal:define="obj item/getObject; images obj/@@images"
+                                     tal:replace="structure python:images.scale('image', scale='icon').tag(css_class='image-icon')">
                                 <a href="#"
                                    tal:define="item_url item/getURL;
                                                item_type item/PortalType"
diff --git a/Products/CMFPlone/skins/plone_templates/recently_modified.pt b/Products/CMFPlone/skins/plone_templates/recently_modified.pt
index 9ef0e52..6f69ffa 100644
--- a/Products/CMFPlone/skins/plone_templates/recently_modified.pt
+++ b/Products/CMFPlone/skins/plone_templates/recently_modified.pt
@@ -43,9 +43,9 @@
                                         item_wf_state_class python:'state-' + normalizeString(item_wf_state);
                                         item_type_class python:'contenttype-' + normalizeString(result.portal_type)">
                           <a tal:attributes="href result/getURL">
-                        	<img  class = "image-tile"
-                        		  tal:condition="python:result.getIcon"
-                        		  tal:attributes="src python:result.getURL()+'/@@images/image/tile'">
+                                <img tal:condition="python:result.getIcon"
+                                     tal:define="obj result/getObject; images obj/@@images"
+                                     tal:replace="structure python:images.scale('image', scale='tile').tag(css_class='image-tile')">
                         	<span tal:content="result/pretty_title_or_id"
                                   tal:attributes="class string:$item_type_class $item_wf_state_class"  >
                                   Title</span>
@@ -86,4 +86,4 @@
 </metal:main>
 </body>
 
-</html>
\ No newline at end of file
+</html>
diff --git a/Products/CMFPlone/skins/plone_templates/recently_published.pt b/Products/CMFPlone/skins/plone_templates/recently_published.pt
index e327631..2496ef8 100644
--- a/Products/CMFPlone/skins/plone_templates/recently_published.pt
+++ b/Products/CMFPlone/skins/plone_templates/recently_published.pt
@@ -43,9 +43,9 @@
                     	            item_wf_state result/review_state;
                     	            item_wf_state_class python:'state-' + normalize(item_wf_state);">                    	            
                         <a tal:attributes="href result/getURL">
-                        	<img  class = "image-tile"                  		  
-                        		  tal:condition="python:result.getIcon"
-                        		  tal:attributes="src python:result.getURL()+'/@@images/image/tile'">
+                        	<img tal:condition="python:result.getIcon"
+                                     tal:define="obj result/getObject; images obj/@@images"
+                                     tal:replace="structure python:images.scale('image', scale='tile').tag(css_class='image-tile')">
                         	<span tal:content="result/pretty_title_or_id"
                                   tal:attributes="class string:$item_class $item_wf_state_class">
                                   Title</span>
@@ -92,4 +92,4 @@
 </metal:main>
 </body>
 
-</html>
\ No newline at end of file
+</html>


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2017-03-10T22:42:01+01:00
Author: Diederik Veeze (didrix) <d.veeze@zestsoftware.nl>
Commit: https://github.com/plone/Products.CMFPlone/commit/dc610a402f410bd27f4dfb377a2645364791e7fc

Add image handling setting for retina scales

Files changed:
M CHANGES.rst
M Products/CMFPlone/interfaces/controlpanel.py
M Products/CMFPlone/static/plone.js
M Products/CMFPlone/utils.py

diff --git a/CHANGES.rst b/CHANGES.rst
index b0e702b..d9c1e86 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -511,6 +511,9 @@ Fixes:
 - Make use of plone.namedfile's tag() function to generate img tags. Part of plip 1483.
   [didrix]
 
+- Add retina scales settings in image handling. Part of plip 1483
+  [didrix]
+
 Fixes:
 
 - Closes #1513 'Wrong portal_url used for TinyMCE in multilingual site',
diff --git a/Products/CMFPlone/interfaces/controlpanel.py b/Products/CMFPlone/interfaces/controlpanel.py
index 99bd6f5..eff3bf6 100644
--- a/Products/CMFPlone/interfaces/controlpanel.py
+++ b/Products/CMFPlone/interfaces/controlpanel.py
@@ -1517,6 +1517,39 @@ class IImagingSchema(Interface):
         default=88
     )
 
+    retina_scales=schema.Choice(
+        title=_(u'Retina mode'),
+        description=_(u''),
+        default='disabled',
+        vocabulary=SimpleVocabulary([
+            SimpleTerm('disabled', 'disabled', u'Disabled'),
+            SimpleTerm('2x', '2x', u'Enabled (2x)'),
+            SimpleTerm('3x', '3x', u'Enabled (2x, 3x)')
+        ]),
+    )
+
+    quality_2x = schema.Int(
+        title=_(u'Image quality at 2x'),
+        description=_(u'A value for the quality of 2x retina images, from 1 '
+                      '(lowest) to 95 (highest). A value of 0 will mean '
+                      'plone.scaling\'s default will be used, which is '
+                      'currently 62.'),
+        min=0,
+        max=95,
+        default=62,
+    )
+
+    quality_3x = schema.Int(
+        title=_(u'Image quality at 3x'),
+        description=_(u'A value for the quality of 3x retina images, from 1 '
+                      '(lowest) to 95 (highest). A value of 0 will mean '
+                      'plone.scaling\'s default will be used, which is '
+                      'currently 51.'),
+        min=0,
+        max=95,
+        default=51,
+    )
+
 
 class ILoginSchema(Interface):
 
diff --git a/Products/CMFPlone/static/plone.js b/Products/CMFPlone/static/plone.js
index fe40cf8..d043786 100644
--- a/Products/CMFPlone/static/plone.js
+++ b/Products/CMFPlone/static/plone.js
@@ -66,4 +66,34 @@ require([
     }
   });
 
+  // TODO: Needs to be moved to controlpanel js as well
+  $(document).ready(function() {
+      function autohide_quality_fields(animate) {
+        var retina = $('#form-widgets-retina_scales option:selected').attr('value');
+        var quality_2x = $('div[data-fieldname="form.widgets.quality_2x"]');
+        var quality_3x = $('div[data-fieldname="form.widgets.quality_3x"]');
+
+        if (retina == 'disabled') {
+            quality_2x.fadeOut();
+            quality_3x.fadeOut();
+        }
+        else if (retina == '2x') {
+            quality_2x.fadeIn();
+            quality_3x.fadeOut();
+        }
+        else if (retina == '3x') {
+            quality_2x.fadeIn();
+            quality_3x.fadeIn();
+        }
+    }
+
+    if ($('#ImagingSettings')) {
+        $('div[data-fieldname="form.widgets.quality_2x"]').hide();
+        $('div[data-fieldname="form.widgets.quality_3x"]').hide();
+        autohide_quality_fields();
+        var select = $('#form-widgets-retina_scales');
+        select.change(autohide_quality_fields);
+    }
+});
+
 });
diff --git a/Products/CMFPlone/utils.py b/Products/CMFPlone/utils.py
index c7e9d33..ff17dc9 100644
--- a/Products/CMFPlone/utils.py
+++ b/Products/CMFPlone/utils.py
@@ -709,6 +709,11 @@ def getQuality():
     return QUALITY_DEFAULT
 
 
+def getRetinaScales():
+    from plone.namedfile.utils import getRetinaScales as func
+    return func()
+
+
 def getSiteLogo(site=None):
     from Products.CMFPlone.interfaces import ISiteSchema
     from plone.formwidget.namedfile.converter import b64decode_file


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2017-03-10T22:42:01+01:00
Author: Diederik Veeze (didrix) <d.veeze@zestsoftware.nl>
Commit: https://github.com/plone/Products.CMFPlone/commit/f5d96e4ff7c0393af3298f96b90738449732b625

Make use of cached image tag() function in or to avoid waking objects in templates

Files changed:
M Products/CMFPlone/browser/templates/search.pt
M Products/CMFPlone/skins/plone_templates/recently_modified.pt
M Products/CMFPlone/skins/plone_templates/recently_published.pt

diff --git a/Products/CMFPlone/browser/templates/search.pt b/Products/CMFPlone/browser/templates/search.pt
index 0178f66..7c04f50 100644
--- a/Products/CMFPlone/browser/templates/search.pt
+++ b/Products/CMFPlone/browser/templates/search.pt
@@ -222,9 +222,10 @@
                           <tal:results repeat="item batch">
                             <li tal:define="hasIcon item/getIcon">
                               <span class="result-title">
-                                <img tal:condition="hasIcon"
-                                     tal:define="obj item/getObject; images obj/@@images"
-                                     tal:replace="structure python:images.scale('image', scale='icon').tag(css_class='image-icon')">
+                                <img class="image-icon"
+                                     tal:condition="hasIcon"
+                                     tal:define="images portal/@@images"
+                                     tal:replace="structure python: images.tag(item, 'image', scale='icon', css_class='image-icon')">
                                 <a href="#"
                                    tal:define="item_url item/getURL;
                                                item_type item/PortalType"
diff --git a/Products/CMFPlone/skins/plone_templates/recently_modified.pt b/Products/CMFPlone/skins/plone_templates/recently_modified.pt
index 6f69ffa..a5a40b6 100644
--- a/Products/CMFPlone/skins/plone_templates/recently_modified.pt
+++ b/Products/CMFPlone/skins/plone_templates/recently_modified.pt
@@ -32,6 +32,7 @@
     <div id="content-core"
          tal:define="site_properties context/portal_properties/site_properties;
                      isAnon context/@@plone_portal_state/anonymous;
+                     portal context/@@plone_portal_state/portal;
                      show_about python:not isAnon or context.portal_registry['plone.allow_anon_views_about'];">
         <form name="searchresults" action="" method="post" tal:condition="results"
                           tal:define="batch python:Batch(results, 20, int(b_start), orphan=1)">
@@ -43,9 +44,9 @@
                                         item_wf_state_class python:'state-' + normalizeString(item_wf_state);
                                         item_type_class python:'contenttype-' + normalizeString(result.portal_type)">
                           <a tal:attributes="href result/getURL">
-                                <img tal:condition="python:result.getIcon"
-                                     tal:define="obj result/getObject; images obj/@@images"
-                                     tal:replace="structure python:images.scale('image', scale='tile').tag(css_class='image-tile')">
+                            <img tal:condition="python:result.getIcon"
+                                 tal:define="images portal/@@images"
+                                 tal:replace="structure python: images.tag(item, 'image', scale='tile', css_class='image-tile')">
                         	<span tal:content="result/pretty_title_or_id"
                                   tal:attributes="class string:$item_type_class $item_wf_state_class"  >
                                   Title</span>
diff --git a/Products/CMFPlone/skins/plone_templates/recently_published.pt b/Products/CMFPlone/skins/plone_templates/recently_published.pt
index 2496ef8..6dcfd4f 100644
--- a/Products/CMFPlone/skins/plone_templates/recently_published.pt
+++ b/Products/CMFPlone/skins/plone_templates/recently_published.pt
@@ -31,6 +31,7 @@
     <div id="content-core"
          tal:define="site_properties context/portal_properties/site_properties;
                      isAnon context/@@plone_portal_state/anonymous;
+                     portal context/@@plone_portal_state/portal
                      show_about python:not isAnon or context.portal_registry['plone.allow_anon_views_about'];">
         <form name="searchresults" action="" method="post" tal:condition="results"
                           tal:define="batch python:Batch(results, 20, int(b_start), orphan=1)">
@@ -41,11 +42,11 @@
                     <header
                     	tal:define="item_class python:'contenttype-' + normalize(result.portal_type);
                     	            item_wf_state result/review_state;
-                    	            item_wf_state_class python:'state-' + normalize(item_wf_state);">                    	            
+                    	            item_wf_state_class python:'state-' + normalize(item_wf_state);">
                         <a tal:attributes="href result/getURL">
                         	<img tal:condition="python:result.getIcon"
-                                     tal:define="obj result/getObject; images obj/@@images"
-                                     tal:replace="structure python:images.scale('image', scale='tile').tag(css_class='image-tile')">
+                                 tal:define="images portal/@@images"
+                                 tal:replace="structure python: images.tag(item, 'image', scale='tile', css_class='image-tile')">
                         	<span tal:content="result/pretty_title_or_id"
                                   tal:attributes="class string:$item_class $item_wf_state_class">
                                   Title</span>


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2017-03-10T22:42:01+01:00
Author: Diederik Veeze (didrix) <d.veeze@zestsoftware.nl>
Commit: https://github.com/plone/Products.CMFPlone/commit/ecf02f89eea9e182cc34386adbbf0703b629f524

rename navigationRootScaling

Files changed:
M Products/CMFPlone/browser/templates/search.pt
M Products/CMFPlone/skins/plone_templates/recently_modified.pt
M Products/CMFPlone/skins/plone_templates/recently_published.pt

diff --git a/Products/CMFPlone/browser/templates/search.pt b/Products/CMFPlone/browser/templates/search.pt
index 7c04f50..9762700 100644
--- a/Products/CMFPlone/browser/templates/search.pt
+++ b/Products/CMFPlone/browser/templates/search.pt
@@ -224,8 +224,8 @@
                               <span class="result-title">
                                 <img class="image-icon"
                                      tal:condition="hasIcon"
-                                     tal:define="images portal/@@images"
-                                     tal:replace="structure python: images.tag(item, 'image', scale='icon', css_class='image-icon')">
+                                     tal:define="image_scale portal/@@image_scale"
+                                     tal:replace="structure python: images_scale.tag(item, 'image', scale='icon', css_class='image-icon')">
                                 <a href="#"
                                    tal:define="item_url item/getURL;
                                                item_type item/PortalType"
diff --git a/Products/CMFPlone/skins/plone_templates/recently_modified.pt b/Products/CMFPlone/skins/plone_templates/recently_modified.pt
index a5a40b6..010bd99 100644
--- a/Products/CMFPlone/skins/plone_templates/recently_modified.pt
+++ b/Products/CMFPlone/skins/plone_templates/recently_modified.pt
@@ -45,8 +45,8 @@
                                         item_type_class python:'contenttype-' + normalizeString(result.portal_type)">
                           <a tal:attributes="href result/getURL">
                             <img tal:condition="python:result.getIcon"
-                                 tal:define="images portal/@@images"
-                                 tal:replace="structure python: images.tag(item, 'image', scale='tile', css_class='image-tile')">
+                                 tal:define="image_scale portal/@@image_scale"
+                                 tal:replace="structure python: image_scale.tag(item, 'image', scale='tile', css_class='image-tile')">
                         	<span tal:content="result/pretty_title_or_id"
                                   tal:attributes="class string:$item_type_class $item_wf_state_class"  >
                                   Title</span>
diff --git a/Products/CMFPlone/skins/plone_templates/recently_published.pt b/Products/CMFPlone/skins/plone_templates/recently_published.pt
index 6dcfd4f..0c7ffdc 100644
--- a/Products/CMFPlone/skins/plone_templates/recently_published.pt
+++ b/Products/CMFPlone/skins/plone_templates/recently_published.pt
@@ -45,8 +45,8 @@
                     	            item_wf_state_class python:'state-' + normalize(item_wf_state);">
                         <a tal:attributes="href result/getURL">
                         	<img tal:condition="python:result.getIcon"
-                                 tal:define="images portal/@@images"
-                                 tal:replace="structure python: images.tag(item, 'image', scale='tile', css_class='image-tile')">
+                                 tal:define="image_scale portal/@@image_scale"
+                                 tal:replace="structure python: image_scale.tag(item, 'image', scale='tile', css_class='image-tile')">
                         	<span tal:content="result/pretty_title_or_id"
                                   tal:attributes="class string:$item_class $item_wf_state_class">
                                   Title</span>


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2017-03-10T22:42:01+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/db8d3b7b3fd4ba3d974865c7db7172238fc51470

Moved retina changelog entries to correct location.

Files changed:
M CHANGES.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index d9c1e86..42e86dc 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -122,6 +122,12 @@ Breaking changes:
 
 New features:
 
+- Make use of plone.namedfile's tag() function to generate img tags. Part of plip 1483.
+  [didrix]
+
+- Add retina scales settings in image handling. Part of plip 1483
+  [didrix]
+
 - Added ``ok`` view.  This is useful for automated checks, for example
   httpok, to see if the site is still available.  It returns the text
   ``OK`` and sets headers to avoid caching.
@@ -508,13 +514,6 @@ Fixes:
 
 - Fix issue where incorrectly configured formats would cause TinyMCE to error
   [vangheem]
-- Make use of plone.namedfile's tag() function to generate img tags. Part of plip 1483.
-  [didrix]
-
-- Add retina scales settings in image handling. Part of plip 1483
-  [didrix]
-
-Fixes:
 
 - Closes #1513 'Wrong portal_url used for TinyMCE in multilingual site',
   also refactors the patterns settings and cleans it up.


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2017-03-10T22:42:01+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/f97ab352e67e6e9718bb25230e86cad791f3c3da

Removed tabs from recently_published.pt

Files changed:
M Products/CMFPlone/skins/plone_templates/recently_published.pt

diff --git a/Products/CMFPlone/skins/plone_templates/recently_published.pt b/Products/CMFPlone/skins/plone_templates/recently_published.pt
index 0c7ffdc..1dbf876 100644
--- a/Products/CMFPlone/skins/plone_templates/recently_published.pt
+++ b/Products/CMFPlone/skins/plone_templates/recently_published.pt
@@ -40,14 +40,14 @@
 
                 <article>
                     <header
-                    	tal:define="item_class python:'contenttype-' + normalize(result.portal_type);
-                    	            item_wf_state result/review_state;
-                    	            item_wf_state_class python:'state-' + normalize(item_wf_state);">
+                       tal:define="item_class python:'contenttype-' + normalize(result.portal_type);
+                                   item_wf_state result/review_state;
+                                   item_wf_state_class python:'state-' + normalize(item_wf_state);">
                         <a tal:attributes="href result/getURL">
-                        	<img tal:condition="python:result.getIcon"
+                            <img tal:condition="python:result.getIcon"
                                  tal:define="image_scale portal/@@image_scale"
                                  tal:replace="structure python: image_scale.tag(item, 'image', scale='tile', css_class='image-tile')">
-                        	<span tal:content="result/pretty_title_or_id"
+                            <span tal:content="result/pretty_title_or_id"
                                   tal:attributes="class string:$item_class $item_wf_state_class">
                                   Title</span>
                         </a>


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2017-03-10T22:42:01+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/1b2e92f77ab6ecb8998f2922a343965f871257c2

Define image_scale only once when iterating.

Files changed:
M Products/CMFPlone/browser/templates/search.pt
M Products/CMFPlone/skins/plone_templates/recently_modified.pt
M Products/CMFPlone/skins/plone_templates/recently_published.pt

diff --git a/Products/CMFPlone/browser/templates/search.pt b/Products/CMFPlone/browser/templates/search.pt
index 9762700..96b8b5e 100644
--- a/Products/CMFPlone/browser/templates/search.pt
+++ b/Products/CMFPlone/browser/templates/search.pt
@@ -217,15 +217,15 @@
                                                  toLocalizedTime nocall: context/@@plone/toLocalizedTime;
                                                  use_view_action python:context.portal_registry.get('plone.types_use_view_action_in_listings', []);
                                                  allowAnonymousViewAbout python:context.portal_registry['plone.allow_anon_views_about'];
-                                                 show_about python:not isAnon or allowAnonymousViewAbout;">
+                                                 show_about python:not isAnon or allowAnonymousViewAbout;
+                                                 image_scale portal/@@image_scale">
                         <ol class="searchResults">
                           <tal:results repeat="item batch">
                             <li tal:define="hasIcon item/getIcon">
                               <span class="result-title">
                                 <img class="image-icon"
                                      tal:condition="hasIcon"
-                                     tal:define="image_scale portal/@@image_scale"
-                                     tal:replace="structure python: images_scale.tag(item, 'image', scale='icon', css_class='image-icon')">
+                                     tal:replace="structure python: image_scale.tag(item, 'image', scale='icon', css_class='image-icon')">
                                 <a href="#"
                                    tal:define="item_url item/getURL;
                                                item_type item/PortalType"
diff --git a/Products/CMFPlone/skins/plone_templates/recently_modified.pt b/Products/CMFPlone/skins/plone_templates/recently_modified.pt
index 010bd99..80cbecf 100644
--- a/Products/CMFPlone/skins/plone_templates/recently_modified.pt
+++ b/Products/CMFPlone/skins/plone_templates/recently_modified.pt
@@ -35,7 +35,8 @@
                      portal context/@@plone_portal_state/portal;
                      show_about python:not isAnon or context.portal_registry['plone.allow_anon_views_about'];">
         <form name="searchresults" action="" method="post" tal:condition="results"
-                          tal:define="batch python:Batch(results, 20, int(b_start), orphan=1)">
+                          tal:define="batch python:Batch(results, 20, int(b_start), orphan=1);
+                                      image_scale portal/@@image_scale">
             <ul>
             <tal:results tal:repeat="result batch">
 
@@ -45,7 +46,6 @@
                                         item_type_class python:'contenttype-' + normalizeString(result.portal_type)">
                           <a tal:attributes="href result/getURL">
                             <img tal:condition="python:result.getIcon"
-                                 tal:define="image_scale portal/@@image_scale"
                                  tal:replace="structure python: image_scale.tag(item, 'image', scale='tile', css_class='image-tile')">
                         	<span tal:content="result/pretty_title_or_id"
                                   tal:attributes="class string:$item_type_class $item_wf_state_class"  >
diff --git a/Products/CMFPlone/skins/plone_templates/recently_published.pt b/Products/CMFPlone/skins/plone_templates/recently_published.pt
index 1dbf876..68a9b08 100644
--- a/Products/CMFPlone/skins/plone_templates/recently_published.pt
+++ b/Products/CMFPlone/skins/plone_templates/recently_published.pt
@@ -32,7 +32,8 @@
          tal:define="site_properties context/portal_properties/site_properties;
                      isAnon context/@@plone_portal_state/anonymous;
                      portal context/@@plone_portal_state/portal
-                     show_about python:not isAnon or context.portal_registry['plone.allow_anon_views_about'];">
+                     show_about python:not isAnon or context.portal_registry['plone.allow_anon_views_about'];
+                     image_scale portal/@@image_scale">
         <form name="searchresults" action="" method="post" tal:condition="results"
                           tal:define="batch python:Batch(results, 20, int(b_start), orphan=1)">
 
@@ -45,7 +46,6 @@
                                    item_wf_state_class python:'state-' + normalize(item_wf_state);">
                         <a tal:attributes="href result/getURL">
                             <img tal:condition="python:result.getIcon"
-                                 tal:define="image_scale portal/@@image_scale"
                                  tal:replace="structure python: image_scale.tag(item, 'image', scale='tile', css_class='image-tile')">
                             <span tal:content="result/pretty_title_or_id"
                                   tal:attributes="class string:$item_class $item_wf_state_class">


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2017-03-10T22:42:01+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/a445c6ccda18c70b4c6b2672a8a314dcbf1b67b6

Fixed errors in recently_modified and recently_published.

Files changed:
M CHANGES.rst
M Products/CMFPlone/skins/plone_templates/recently_modified.pt
M Products/CMFPlone/skins/plone_templates/recently_published.pt

diff --git a/CHANGES.rst b/CHANGES.rst
index 42e86dc..9633d32 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -18,6 +18,12 @@ New features:
   Part of PLIP 1343: https://github.com/plone/Products.CMFPlone/issues/1343
   [gforcada]
 
+- Make use of plone.namedfile's tag() function to generate img tags. Part of plip 1483.
+  [didrix]
+
+- Add retina scales settings in image handling. Part of plip 1483
+  [didrix]
+
 Bug fixes:
 
 - Show version of products in Add-ons control panel configlet.
@@ -122,12 +128,6 @@ Breaking changes:
 
 New features:
 
-- Make use of plone.namedfile's tag() function to generate img tags. Part of plip 1483.
-  [didrix]
-
-- Add retina scales settings in image handling. Part of plip 1483
-  [didrix]
-
 - Added ``ok`` view.  This is useful for automated checks, for example
   httpok, to see if the site is still available.  It returns the text
   ``OK`` and sets headers to avoid caching.
diff --git a/Products/CMFPlone/skins/plone_templates/recently_modified.pt b/Products/CMFPlone/skins/plone_templates/recently_modified.pt
index 80cbecf..e9764b1 100644
--- a/Products/CMFPlone/skins/plone_templates/recently_modified.pt
+++ b/Products/CMFPlone/skins/plone_templates/recently_modified.pt
@@ -46,7 +46,7 @@
                                         item_type_class python:'contenttype-' + normalizeString(result.portal_type)">
                           <a tal:attributes="href result/getURL">
                             <img tal:condition="python:result.getIcon"
-                                 tal:replace="structure python: image_scale.tag(item, 'image', scale='tile', css_class='image-tile')">
+                                 tal:replace="structure python: image_scale.tag(result, 'image', scale='tile', css_class='image-tile')">
                         	<span tal:content="result/pretty_title_or_id"
                                   tal:attributes="class string:$item_type_class $item_wf_state_class"  >
                                   Title</span>
diff --git a/Products/CMFPlone/skins/plone_templates/recently_published.pt b/Products/CMFPlone/skins/plone_templates/recently_published.pt
index 68a9b08..39a2a3b 100644
--- a/Products/CMFPlone/skins/plone_templates/recently_published.pt
+++ b/Products/CMFPlone/skins/plone_templates/recently_published.pt
@@ -31,7 +31,7 @@
     <div id="content-core"
          tal:define="site_properties context/portal_properties/site_properties;
                      isAnon context/@@plone_portal_state/anonymous;
-                     portal context/@@plone_portal_state/portal
+                     portal context/@@plone_portal_state/portal;
                      show_about python:not isAnon or context.portal_registry['plone.allow_anon_views_about'];
                      image_scale portal/@@image_scale">
         <form name="searchresults" action="" method="post" tal:condition="results"
@@ -46,7 +46,7 @@
                                    item_wf_state_class python:'state-' + normalize(item_wf_state);">
                         <a tal:attributes="href result/getURL">
                             <img tal:condition="python:result.getIcon"
-                                 tal:replace="structure python: image_scale.tag(item, 'image', scale='tile', css_class='image-tile')">
+                                 tal:replace="structure python: image_scale.tag(result, 'image', scale='tile', css_class='image-tile')">
                             <span tal:content="result/pretty_title_or_id"
                                   tal:attributes="class string:$item_class $item_wf_state_class">
                                   Title</span>


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2017-03-10T22:42:01+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/1ba0233f38a79a2ca6c5c741c855090314b06d34

We need a new metadata.xml version: 5106, for 51beta3.

Files changed:
M Products/CMFPlone/profiles/default/metadata.xml

diff --git a/Products/CMFPlone/profiles/default/metadata.xml b/Products/CMFPlone/profiles/default/metadata.xml
index 88c6439..85b1925 100644
--- a/Products/CMFPlone/profiles/default/metadata.xml
+++ b/Products/CMFPlone/profiles/default/metadata.xml
@@ -1,4 +1,4 @@
 <?xml version="1.0"?>
 <metadata>
-  <version>5105</version>
+  <version>5106</version>
 </metadata>


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2017-03-21T22:16:10+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/6887360d2d6c73f4a43ec84fcb28c19bd1f0643d

Merge pull request #1611 from plone/plip-1483-retina-image-scales

Plip 1483 retina image scales

Files changed:
M CHANGES.rst
M Products/CMFPlone/browser/templates/search.pt
M Products/CMFPlone/interfaces/controlpanel.py
M Products/CMFPlone/profiles/default/metadata.xml
M Products/CMFPlone/skins/plone_templates/recently_modified.pt
M Products/CMFPlone/skins/plone_templates/recently_published.pt
M Products/CMFPlone/static/plone.js
M Products/CMFPlone/utils.py

diff --git a/CHANGES.rst b/CHANGES.rst
index f378854..9633d32 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -18,6 +18,12 @@ New features:
   Part of PLIP 1343: https://github.com/plone/Products.CMFPlone/issues/1343
   [gforcada]
 
+- Make use of plone.namedfile's tag() function to generate img tags. Part of plip 1483.
+  [didrix]
+
+- Add retina scales settings in image handling. Part of plip 1483
+  [didrix]
+
 Bug fixes:
 
 - Show version of products in Add-ons control panel configlet.
diff --git a/Products/CMFPlone/browser/templates/search.pt b/Products/CMFPlone/browser/templates/search.pt
index ef5ea07..96b8b5e 100644
--- a/Products/CMFPlone/browser/templates/search.pt
+++ b/Products/CMFPlone/browser/templates/search.pt
@@ -217,14 +217,15 @@
                                                  toLocalizedTime nocall: context/@@plone/toLocalizedTime;
                                                  use_view_action python:context.portal_registry.get('plone.types_use_view_action_in_listings', []);
                                                  allowAnonymousViewAbout python:context.portal_registry['plone.allow_anon_views_about'];
-                                                 show_about python:not isAnon or allowAnonymousViewAbout;">
+                                                 show_about python:not isAnon or allowAnonymousViewAbout;
+                                                 image_scale portal/@@image_scale">
                         <ol class="searchResults">
                           <tal:results repeat="item batch">
                             <li tal:define="hasIcon item/getIcon">
                               <span class="result-title">
                                 <img class="image-icon"
                                      tal:condition="hasIcon"
-                                     tal:attributes="src string:${item/getURL}/@@images/image/icon;">
+                                     tal:replace="structure python: image_scale.tag(item, 'image', scale='icon', css_class='image-icon')">
                                 <a href="#"
                                    tal:define="item_url item/getURL;
                                                item_type item/PortalType"
diff --git a/Products/CMFPlone/interfaces/controlpanel.py b/Products/CMFPlone/interfaces/controlpanel.py
index 99bd6f5..eff3bf6 100644
--- a/Products/CMFPlone/interfaces/controlpanel.py
+++ b/Products/CMFPlone/interfaces/controlpanel.py
@@ -1517,6 +1517,39 @@ class IImagingSchema(Interface):
         default=88
     )
 
+    retina_scales=schema.Choice(
+        title=_(u'Retina mode'),
+        description=_(u''),
+        default='disabled',
+        vocabulary=SimpleVocabulary([
+            SimpleTerm('disabled', 'disabled', u'Disabled'),
+            SimpleTerm('2x', '2x', u'Enabled (2x)'),
+            SimpleTerm('3x', '3x', u'Enabled (2x, 3x)')
+        ]),
+    )
+
+    quality_2x = schema.Int(
+        title=_(u'Image quality at 2x'),
+        description=_(u'A value for the quality of 2x retina images, from 1 '
+                      '(lowest) to 95 (highest). A value of 0 will mean '
+                      'plone.scaling\'s default will be used, which is '
+                      'currently 62.'),
+        min=0,
+        max=95,
+        default=62,
+    )
+
+    quality_3x = schema.Int(
+        title=_(u'Image quality at 3x'),
+        description=_(u'A value for the quality of 3x retina images, from 1 '
+                      '(lowest) to 95 (highest). A value of 0 will mean '
+                      'plone.scaling\'s default will be used, which is '
+                      'currently 51.'),
+        min=0,
+        max=95,
+        default=51,
+    )
+
 
 class ILoginSchema(Interface):
 
diff --git a/Products/CMFPlone/profiles/default/metadata.xml b/Products/CMFPlone/profiles/default/metadata.xml
index 88c6439..85b1925 100644
--- a/Products/CMFPlone/profiles/default/metadata.xml
+++ b/Products/CMFPlone/profiles/default/metadata.xml
@@ -1,4 +1,4 @@
 <?xml version="1.0"?>
 <metadata>
-  <version>5105</version>
+  <version>5106</version>
 </metadata>
diff --git a/Products/CMFPlone/skins/plone_templates/recently_modified.pt b/Products/CMFPlone/skins/plone_templates/recently_modified.pt
index 9ef0e52..e9764b1 100644
--- a/Products/CMFPlone/skins/plone_templates/recently_modified.pt
+++ b/Products/CMFPlone/skins/plone_templates/recently_modified.pt
@@ -32,9 +32,11 @@
     <div id="content-core"
          tal:define="site_properties context/portal_properties/site_properties;
                      isAnon context/@@plone_portal_state/anonymous;
+                     portal context/@@plone_portal_state/portal;
                      show_about python:not isAnon or context.portal_registry['plone.allow_anon_views_about'];">
         <form name="searchresults" action="" method="post" tal:condition="results"
-                          tal:define="batch python:Batch(results, 20, int(b_start), orphan=1)">
+                          tal:define="batch python:Batch(results, 20, int(b_start), orphan=1);
+                                      image_scale portal/@@image_scale">
             <ul>
             <tal:results tal:repeat="result batch">
 
@@ -43,9 +45,8 @@
                                         item_wf_state_class python:'state-' + normalizeString(item_wf_state);
                                         item_type_class python:'contenttype-' + normalizeString(result.portal_type)">
                           <a tal:attributes="href result/getURL">
-                        	<img  class = "image-tile"
-                        		  tal:condition="python:result.getIcon"
-                        		  tal:attributes="src python:result.getURL()+'/@@images/image/tile'">
+                            <img tal:condition="python:result.getIcon"
+                                 tal:replace="structure python: image_scale.tag(result, 'image', scale='tile', css_class='image-tile')">
                         	<span tal:content="result/pretty_title_or_id"
                                   tal:attributes="class string:$item_type_class $item_wf_state_class"  >
                                   Title</span>
@@ -86,4 +87,4 @@
 </metal:main>
 </body>
 
-</html>
\ No newline at end of file
+</html>
diff --git a/Products/CMFPlone/skins/plone_templates/recently_published.pt b/Products/CMFPlone/skins/plone_templates/recently_published.pt
index e327631..39a2a3b 100644
--- a/Products/CMFPlone/skins/plone_templates/recently_published.pt
+++ b/Products/CMFPlone/skins/plone_templates/recently_published.pt
@@ -31,7 +31,9 @@
     <div id="content-core"
          tal:define="site_properties context/portal_properties/site_properties;
                      isAnon context/@@plone_portal_state/anonymous;
-                     show_about python:not isAnon or context.portal_registry['plone.allow_anon_views_about'];">
+                     portal context/@@plone_portal_state/portal;
+                     show_about python:not isAnon or context.portal_registry['plone.allow_anon_views_about'];
+                     image_scale portal/@@image_scale">
         <form name="searchresults" action="" method="post" tal:condition="results"
                           tal:define="batch python:Batch(results, 20, int(b_start), orphan=1)">
 
@@ -39,14 +41,13 @@
 
                 <article>
                     <header
-                    	tal:define="item_class python:'contenttype-' + normalize(result.portal_type);
-                    	            item_wf_state result/review_state;
-                    	            item_wf_state_class python:'state-' + normalize(item_wf_state);">                    	            
+                       tal:define="item_class python:'contenttype-' + normalize(result.portal_type);
+                                   item_wf_state result/review_state;
+                                   item_wf_state_class python:'state-' + normalize(item_wf_state);">
                         <a tal:attributes="href result/getURL">
-                        	<img  class = "image-tile"                  		  
-                        		  tal:condition="python:result.getIcon"
-                        		  tal:attributes="src python:result.getURL()+'/@@images/image/tile'">
-                        	<span tal:content="result/pretty_title_or_id"
+                            <img tal:condition="python:result.getIcon"
+                                 tal:replace="structure python: image_scale.tag(result, 'image', scale='tile', css_class='image-tile')">
+                            <span tal:content="result/pretty_title_or_id"
                                   tal:attributes="class string:$item_class $item_wf_state_class">
                                   Title</span>
                         </a>
@@ -92,4 +93,4 @@
 </metal:main>
 </body>
 
-</html>
\ No newline at end of file
+</html>
diff --git a/Products/CMFPlone/static/plone.js b/Products/CMFPlone/static/plone.js
index fe40cf8..d043786 100644
--- a/Products/CMFPlone/static/plone.js
+++ b/Products/CMFPlone/static/plone.js
@@ -66,4 +66,34 @@ require([
     }
   });
 
+  // TODO: Needs to be moved to controlpanel js as well
+  $(document).ready(function() {
+      function autohide_quality_fields(animate) {
+        var retina = $('#form-widgets-retina_scales option:selected').attr('value');
+        var quality_2x = $('div[data-fieldname="form.widgets.quality_2x"]');
+        var quality_3x = $('div[data-fieldname="form.widgets.quality_3x"]');
+
+        if (retina == 'disabled') {
+            quality_2x.fadeOut();
+            quality_3x.fadeOut();
+        }
+        else if (retina == '2x') {
+            quality_2x.fadeIn();
+            quality_3x.fadeOut();
+        }
+        else if (retina == '3x') {
+            quality_2x.fadeIn();
+            quality_3x.fadeIn();
+        }
+    }
+
+    if ($('#ImagingSettings')) {
+        $('div[data-fieldname="form.widgets.quality_2x"]').hide();
+        $('div[data-fieldname="form.widgets.quality_3x"]').hide();
+        autohide_quality_fields();
+        var select = $('#form-widgets-retina_scales');
+        select.change(autohide_quality_fields);
+    }
+});
+
 });
diff --git a/Products/CMFPlone/utils.py b/Products/CMFPlone/utils.py
index c7e9d33..ff17dc9 100644
--- a/Products/CMFPlone/utils.py
+++ b/Products/CMFPlone/utils.py
@@ -709,6 +709,11 @@ def getQuality():
     return QUALITY_DEFAULT
 
 
+def getRetinaScales():
+    from plone.namedfile.utils import getRetinaScales as func
+    return func()
+
+
 def getSiteLogo(site=None):
     from Products.CMFPlone.interfaces import ISiteSchema
     from plone.formwidget.namedfile.converter import b64decode_file


