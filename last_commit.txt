Repository: plone.api


Branch: refs/heads/master
Date: 2022-05-16T18:00:06+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.api/commit/2bda1937c0f1daf6784cc052426e2a8857596ca6

Do not require the request parameter to be specified

The request parameter helpers:

- `plone.api.content.get_view`
- `plone.api.portal.show_message`

is now optional.

If not specify fallback to the global request.

Fixes #412

Files changed:
A news/412.feature
M docs/content.md
M docs/portal.md
M src/plone/api/content.py
M src/plone/api/portal.py
M src/plone/api/tests/test_content.py
M src/plone/api/tests/test_portal.py

b'diff --git a/docs/content.md b/docs/content.md\nindex dabef04..f372e25 100644\n--- a/docs/content.md\n+++ b/docs/content.md\n@@ -497,6 +497,22 @@ view = api.content.get_view(\n %\n % self.assertEqual(view.__name__, u\'plone\')\n \n+Since version `2.0.0`, the `request` argument can be omitted.\n+In that case the global request will be used.\n+\n+```python\n+from plone import api\n+portal = api.portal.get()\n+view = api.content.get_view(\n+    name=\'plone\',\n+    context=portal[\'about\'],\n+)\n+```\n+\n+% invisible-code-block: python\n+%\n+% self.assertEqual(view.__name__, u\'plone\')\n+\n ## Further reading\n \n For more information on possible flags and usage options please see the full {ref}`plone-api-content` specification.\ndiff --git a/docs/portal.md b/docs/portal.md\nindex 33138c1..070e138 100644\n--- a/docs/portal.md\n+++ b/docs/portal.md\n@@ -271,6 +271,20 @@ api.portal.show_message(message=\'Blueberries!\', request=request)\n % self.assertEqual(len(show), 1)\n % self.assertTrue(\'Blueberries!\' in show[0].message)\n \n+Since version `2.0.0`, the `request` argument can be omitted.\n+In that case the global request will be used.\n+\n+```python\n+api.portal.show_message(message=\'Cranberries!\')\n+```\n+\n+% invisible-code-block: python\n+%\n+% from Products.statusmessages.interfaces import IStatusMessage\n+% messages = IStatusMessage(request)\n+% show = messages.show()\n+% self.assertTrue(\'Cranberries!\' in show[-1].message)\n+\n (portal-get-registry-record-example)=\n \n ## Get plone.app.registry record\ndiff --git a/news/412.feature b/news/412.feature\nnew file mode 100644\nindex 0000000..5bbdca4\n--- /dev/null\n+++ b/news/412.feature\n@@ -0,0 +1 @@\n+Do not require the request parameter to be specified. If not specify fallback to the global request [ale-rt]\ndiff --git a/src/plone/api/content.py b/src/plone/api/content.py\nindex acb0144..777b503 100644\n--- a/src/plone/api/content.py\n+++ b/src/plone/api/content.py\n@@ -13,6 +13,7 @@\n from zope.component import getMultiAdapter\n from zope.component import getSiteManager\n from zope.container.interfaces import INameChooser\n+from zope.globalrequest import getRequest\n from zope.interface import Interface\n from zope.interface import providedBy\n \n@@ -495,7 +496,7 @@ def enable_roles_acquisition(obj=None):\n     plone_utils.acquireLocalRoles(obj, status=1)\n \n \n-@required_parameters("name", "context", "request")\n+@required_parameters("name", "context")\n def get_view(name=None, context=None, request=None):\n     """Get a BrowserView object.\n \n@@ -510,6 +511,8 @@ def get_view(name=None, context=None, request=None):\n         :class:`~plone.api.exc.InvalidParameterError`\n     :Example: :ref:`content-get-view-example`\n     """\n+    if request is None:\n+        request = getRequest()\n     # We do not use exceptionhandling to detect if the requested view is\n     # available, because the __init__ of said view will contain\n     # errors in client code.\ndiff --git a/src/plone/api/portal.py b/src/plone/api/portal.py\nindex 9d42a5d..ac5b028 100644\n--- a/src/plone/api/portal.py\n+++ b/src/plone/api/portal.py\n@@ -232,7 +232,7 @@ def get_localized_time(datetime=None, long_format=False, time_only=False):\n     )\n \n \n-@required_parameters("message", "request")\n+@required_parameters("message")\n def show_message(message=None, request=None, type="info"):\n     """Display a status message.\n \n@@ -246,6 +246,8 @@ def show_message(message=None, request=None, type="info"):\n         ValueError\n     :Example: :ref:`portal-show-message-example`\n     """\n+    if request is None:\n+        request = getRequest()\n     IStatusMessage(request).add(message, type=type)\n \n \ndiff --git a/src/plone/api/tests/test_content.py b/src/plone/api/tests/test_content.py\nindex 6a5e7b5..03200cf 100644\n--- a/src/plone/api/tests/test_content.py\n+++ b/src/plone/api/tests/test_content.py\n@@ -1330,13 +1330,6 @@ def test_get_view_constraints(self):\n                 request=request,\n             )\n \n-        # request is required\n-        with self.assertRaises(MissingParameterError):\n-            api.content.get_view(\n-                name="plone",\n-                context=self.blog,\n-            )\n-\n     def test_get_view(self):\n         """Test the view."""\n         request = self.layer["request"]\ndiff --git a/src/plone/api/tests/test_portal.py b/src/plone/api/tests/test_portal.py\nindex e94c783..40ff53a 100644\n--- a/src/plone/api/tests/test_portal.py\n+++ b/src/plone/api/tests/test_portal.py\n@@ -451,13 +451,10 @@ def test_show_message_constraints(self):\n         with self.assertRaises(MissingParameterError):\n             portal.show_message()\n \n-        # message and request are required\n+        # message is a required parameter\n         with self.assertRaises(MissingParameterError):\n             portal.show_message(request=self.layer["request"])\n \n-        with self.assertRaises(MissingParameterError):\n-            portal.show_message(message="Beer is brewing.")\n-\n     def test_show_message(self):\n         """Test to see if message appears."""\n \n'

Repository: plone.api


Branch: refs/heads/master
Date: 2022-05-16T23:16:21+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.api/commit/f8493953399a2b53bb12dd8a5cd6048d821ce15c

Merge pull request #481 from plone/412-get_view-request-not-required

Do not require the request parameter to be specified

Files changed:
A news/412.feature
M docs/content.md
M docs/portal.md
M src/plone/api/content.py
M src/plone/api/portal.py
M src/plone/api/tests/test_content.py
M src/plone/api/tests/test_portal.py

b'diff --git a/docs/content.md b/docs/content.md\nindex dabef04..f372e25 100644\n--- a/docs/content.md\n+++ b/docs/content.md\n@@ -497,6 +497,22 @@ view = api.content.get_view(\n %\n % self.assertEqual(view.__name__, u\'plone\')\n \n+Since version `2.0.0`, the `request` argument can be omitted.\n+In that case the global request will be used.\n+\n+```python\n+from plone import api\n+portal = api.portal.get()\n+view = api.content.get_view(\n+    name=\'plone\',\n+    context=portal[\'about\'],\n+)\n+```\n+\n+% invisible-code-block: python\n+%\n+% self.assertEqual(view.__name__, u\'plone\')\n+\n ## Further reading\n \n For more information on possible flags and usage options please see the full {ref}`plone-api-content` specification.\ndiff --git a/docs/portal.md b/docs/portal.md\nindex 33138c1..070e138 100644\n--- a/docs/portal.md\n+++ b/docs/portal.md\n@@ -271,6 +271,20 @@ api.portal.show_message(message=\'Blueberries!\', request=request)\n % self.assertEqual(len(show), 1)\n % self.assertTrue(\'Blueberries!\' in show[0].message)\n \n+Since version `2.0.0`, the `request` argument can be omitted.\n+In that case the global request will be used.\n+\n+```python\n+api.portal.show_message(message=\'Cranberries!\')\n+```\n+\n+% invisible-code-block: python\n+%\n+% from Products.statusmessages.interfaces import IStatusMessage\n+% messages = IStatusMessage(request)\n+% show = messages.show()\n+% self.assertTrue(\'Cranberries!\' in show[-1].message)\n+\n (portal-get-registry-record-example)=\n \n ## Get plone.app.registry record\ndiff --git a/news/412.feature b/news/412.feature\nnew file mode 100644\nindex 0000000..5bbdca4\n--- /dev/null\n+++ b/news/412.feature\n@@ -0,0 +1 @@\n+Do not require the request parameter to be specified. If not specify fallback to the global request [ale-rt]\ndiff --git a/src/plone/api/content.py b/src/plone/api/content.py\nindex acb0144..777b503 100644\n--- a/src/plone/api/content.py\n+++ b/src/plone/api/content.py\n@@ -13,6 +13,7 @@\n from zope.component import getMultiAdapter\n from zope.component import getSiteManager\n from zope.container.interfaces import INameChooser\n+from zope.globalrequest import getRequest\n from zope.interface import Interface\n from zope.interface import providedBy\n \n@@ -495,7 +496,7 @@ def enable_roles_acquisition(obj=None):\n     plone_utils.acquireLocalRoles(obj, status=1)\n \n \n-@required_parameters("name", "context", "request")\n+@required_parameters("name", "context")\n def get_view(name=None, context=None, request=None):\n     """Get a BrowserView object.\n \n@@ -510,6 +511,8 @@ def get_view(name=None, context=None, request=None):\n         :class:`~plone.api.exc.InvalidParameterError`\n     :Example: :ref:`content-get-view-example`\n     """\n+    if request is None:\n+        request = getRequest()\n     # We do not use exceptionhandling to detect if the requested view is\n     # available, because the __init__ of said view will contain\n     # errors in client code.\ndiff --git a/src/plone/api/portal.py b/src/plone/api/portal.py\nindex 9d42a5d..ac5b028 100644\n--- a/src/plone/api/portal.py\n+++ b/src/plone/api/portal.py\n@@ -232,7 +232,7 @@ def get_localized_time(datetime=None, long_format=False, time_only=False):\n     )\n \n \n-@required_parameters("message", "request")\n+@required_parameters("message")\n def show_message(message=None, request=None, type="info"):\n     """Display a status message.\n \n@@ -246,6 +246,8 @@ def show_message(message=None, request=None, type="info"):\n         ValueError\n     :Example: :ref:`portal-show-message-example`\n     """\n+    if request is None:\n+        request = getRequest()\n     IStatusMessage(request).add(message, type=type)\n \n \ndiff --git a/src/plone/api/tests/test_content.py b/src/plone/api/tests/test_content.py\nindex 6a5e7b5..03200cf 100644\n--- a/src/plone/api/tests/test_content.py\n+++ b/src/plone/api/tests/test_content.py\n@@ -1330,13 +1330,6 @@ def test_get_view_constraints(self):\n                 request=request,\n             )\n \n-        # request is required\n-        with self.assertRaises(MissingParameterError):\n-            api.content.get_view(\n-                name="plone",\n-                context=self.blog,\n-            )\n-\n     def test_get_view(self):\n         """Test the view."""\n         request = self.layer["request"]\ndiff --git a/src/plone/api/tests/test_portal.py b/src/plone/api/tests/test_portal.py\nindex e94c783..40ff53a 100644\n--- a/src/plone/api/tests/test_portal.py\n+++ b/src/plone/api/tests/test_portal.py\n@@ -451,13 +451,10 @@ def test_show_message_constraints(self):\n         with self.assertRaises(MissingParameterError):\n             portal.show_message()\n \n-        # message and request are required\n+        # message is a required parameter\n         with self.assertRaises(MissingParameterError):\n             portal.show_message(request=self.layer["request"])\n \n-        with self.assertRaises(MissingParameterError):\n-            portal.show_message(message="Beer is brewing.")\n-\n     def test_show_message(self):\n         """Test to see if message appears."""\n \n'

