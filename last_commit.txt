Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-06-02T11:14:04+02:00
Author: nileshgulia1 (nileshgulia1) <nileshgulia@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/a1ca03dd0e49debf53e812371a9f53823d9f169b

include users of groups in get @groups call

Files changed:
M src/plone/restapi/services/groups/get.py

b'diff --git a/src/plone/restapi/services/groups/get.py b/src/plone/restapi/services/groups/get.py\nindex e15ce54dd..1b3b303a4 100644\n--- a/src/plone/restapi/services/groups/get.py\n+++ b/src/plone/restapi/services/groups/get.py\n@@ -66,7 +66,7 @@ def reply(self):\n             result = []\n             for group in self._get_groups():\n                 serializer = queryMultiAdapter(\n-                    (group, self.request), ISerializeToJsonSummary\n+                    (group, self.request), ISerializeToJson\n                 )\n                 result.append(serializer())\n             return result\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-06-02T11:14:04+02:00
Author: nileshgulia1 (nileshgulia1) <nileshgulia@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/999645cb3db68bffe2bdcfd0db3a3d8442ca32ea

include groups which a particular user is part of

Files changed:
M src/plone/restapi/serializer/user.py

b'diff --git a/src/plone/restapi/serializer/user.py b/src/plone/restapi/serializer/user.py\nindex 1dbae7cc6..c18de1865 100644\n--- a/src/plone/restapi/serializer/user.py\n+++ b/src/plone/restapi/serializer/user.py\n@@ -1,5 +1,6 @@\n from plone.restapi.interfaces import ISerializeToJson\n from plone.restapi.interfaces import ISerializeToJsonSummary\n+from plone.restapi.batching import HypermediaBatch\n from Products.CMFCore.interfaces._tools import IMemberData\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.utils import safe_unicode\n@@ -60,8 +61,21 @@ def __call__(self):\n @implementer(ISerializeToJson)\n @adapter(IMemberData, IRequest)\n class SerializeUserToJson(BaseSerializer):\n-    pass\n+    def __call__(self):\n+        data = super().__call__()\n+        user = self.context\n+        groups = user.getGroups()\n+        batch = HypermediaBatch(self.request, groups)\n+        groups_data = {\n+            "@id": batch.canonical_url,\n+            "items_total": batch.items_total,\n+            "items": sorted(batch),\n+        }\n+        if batch.links:\n+            groups_data["batching"] = batch.links\n \n+        data["groups"] = groups_data\n+        return data\n \n @implementer(ISerializeToJsonSummary)\n @adapter(IMemberData, IRequest)\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-06-02T11:14:04+02:00
Author: nileshgulia1 (nileshgulia1) <nileshgulia@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/4ac1665bc86d592986b2a724e03a2c3d747d28f3

update changelog

Files changed:
M CHANGES.rst

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 36d8aedff..2d4c1d46b 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -55,6 +55,7 @@ New features:\n \n - Enhance @addons endpoint to return a list of upgradeable addons.\n   [sneridagh] (#1319)\n+- Include users data in groups while retrieving @groups [@nileshgulia1] (#1325)\n \n \n 8.20.0 (2022-01-19)\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-06-02T11:14:04+02:00
Author: nileshgulia1 (nileshgulia1) <nileshgulia@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/1471be154994b38ffc211d910b5bd31a6111ea46

black: format

Files changed:
M src/plone/restapi/serializer/user.py
M src/plone/restapi/services/groups/get.py

b'diff --git a/src/plone/restapi/serializer/user.py b/src/plone/restapi/serializer/user.py\nindex c18de1865..ab64aef6b 100644\n--- a/src/plone/restapi/serializer/user.py\n+++ b/src/plone/restapi/serializer/user.py\n@@ -77,6 +77,7 @@ def __call__(self):\n         data["groups"] = groups_data\n         return data\n \n+\n @implementer(ISerializeToJsonSummary)\n @adapter(IMemberData, IRequest)\n class SerializeUserToJsonSummary(BaseSerializer):\ndiff --git a/src/plone/restapi/services/groups/get.py b/src/plone/restapi/services/groups/get.py\nindex 1b3b303a4..0906f5603 100644\n--- a/src/plone/restapi/services/groups/get.py\n+++ b/src/plone/restapi/services/groups/get.py\n@@ -65,9 +65,7 @@ def reply(self):\n         if len(self.params) == 0:\n             result = []\n             for group in self._get_groups():\n-                serializer = queryMultiAdapter(\n-                    (group, self.request), ISerializeToJson\n-                )\n+                serializer = queryMultiAdapter((group, self.request), ISerializeToJson)\n                 result.append(serializer())\n             return result\n         # we retrieve the user on the user id not the username\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-06-02T11:14:04+02:00
Author: nileshgulia1 (nileshgulia1) <nileshgulia@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/a47ffb1b9d32ecb3878eba3be38288feda0840ff

test users key in  groups, updated examples

Files changed:
M src/plone/restapi/tests/http-examples/groups.resp
M src/plone/restapi/tests/http-examples/users.resp
M src/plone/restapi/tests/http-examples/users_add.resp
M src/plone/restapi/tests/http-examples/users_authorized_get.resp
M src/plone/restapi/tests/http-examples/users_created.resp
M src/plone/restapi/tests/http-examples/users_filtered_by_username.resp
M src/plone/restapi/tests/http-examples/users_get.resp
M src/plone/restapi/tests/http-examples/users_update_portrait_get.resp
M src/plone/restapi/tests/http-examples/workingcopy_baseline_get.resp
M src/plone/restapi/tests/test_services_groups.py

b'diff --git a/src/plone/restapi/tests/http-examples/groups.resp b/src/plone/restapi/tests/http-examples/groups.resp\nindex 07bd22185..efcd53ebe 100644\n--- a/src/plone/restapi/tests/http-examples/groups.resp\n+++ b/src/plone/restapi/tests/http-examples/groups.resp\n@@ -12,7 +12,12 @@ Content-Type: application/json\n             "Manager",\n             "Authenticated"\n         ],\n-        "title": "Administrators"\n+        "title": "Administrators",\n+        "users": {\n+            "@id": "http://localhost:55001/plone/@groups",\n+            "items": [],\n+            "items_total": 0\n+        }\n     },\n     {\n         "@id": "http://localhost:55001/plone/@groups/Reviewers",\n@@ -24,7 +29,12 @@ Content-Type: application/json\n             "Reviewer",\n             "Authenticated"\n         ],\n-        "title": "Reviewers"\n+        "title": "Reviewers",\n+        "users": {\n+            "@id": "http://localhost:55001/plone/@groups",\n+            "items": [],\n+            "items_total": 0\n+        }\n     },\n     {\n         "@id": "http://localhost:55001/plone/@groups/Site Administrators",\n@@ -36,7 +46,12 @@ Content-Type: application/json\n             "Site Administrator",\n             "Authenticated"\n         ],\n-        "title": "Site Administrators"\n+        "title": "Site Administrators",\n+        "users": {\n+            "@id": "http://localhost:55001/plone/@groups",\n+            "items": [],\n+            "items_total": 0\n+        }\n     },\n     {\n         "@id": "http://localhost:55001/plone/@groups/ploneteam",\n@@ -47,7 +62,12 @@ Content-Type: application/json\n         "roles": [\n             "Authenticated"\n         ],\n-        "title": "Plone Team"\n+        "title": "Plone Team",\n+        "users": {\n+            "@id": "http://localhost:55001/plone/@groups",\n+            "items": [],\n+            "items_total": 0\n+        }\n     },\n     {\n         "@id": "http://localhost:55001/plone/@groups/AuthenticatedUsers",\n@@ -56,6 +76,11 @@ Content-Type: application/json\n         "groupname": "AuthenticatedUsers",\n         "id": "AuthenticatedUsers",\n         "roles": [],\n-        "title": "Authenticated Users (Virtual Group)"\n+        "title": "Authenticated Users (Virtual Group)",\n+        "users": {\n+            "@id": "http://localhost:55001/plone/@groups",\n+            "items": [],\n+            "items_total": 0\n+        }\n     }\n ]\ndiff --git a/src/plone/restapi/tests/http-examples/users.resp b/src/plone/restapi/tests/http-examples/users.resp\nindex d78aa5009..b98ed9d60 100644\n--- a/src/plone/restapi/tests/http-examples/users.resp\n+++ b/src/plone/restapi/tests/http-examples/users.resp\n@@ -7,6 +7,13 @@ Content-Type: application/json\n         "description": "This is an admin user",\n         "email": "admin@example.com",\n         "fullname": "Administrator",\n+        "groups": {\n+            "@id": "http://localhost:55001/plone/@users",\n+            "items": [\n+                "AuthenticatedUsers"\n+            ],\n+            "items_total": 1\n+        },\n         "home_page": "http://www.example.com",\n         "id": "admin",\n         "location": "Berlin",\n@@ -21,6 +28,13 @@ Content-Type: application/json\n         "description": "This is a test user",\n         "email": "test@example.com",\n         "fullname": "Test User",\n+        "groups": {\n+            "@id": "http://localhost:55001/plone/@users",\n+            "items": [\n+                "AuthenticatedUsers"\n+            ],\n+            "items_total": 1\n+        },\n         "home_page": "http://www.example.com",\n         "id": "test_user_1_",\n         "location": "Bonn",\ndiff --git a/src/plone/restapi/tests/http-examples/users_add.resp b/src/plone/restapi/tests/http-examples/users_add.resp\nindex 493f79d0a..5f0b2b24c 100644\n--- a/src/plone/restapi/tests/http-examples/users_add.resp\n+++ b/src/plone/restapi/tests/http-examples/users_add.resp\n@@ -7,6 +7,13 @@ Location: http://localhost:55001/plone/@users/noamchomsky\n     "description": "Professor of Linguistics",\n     "email": "noam.chomsky@example.com",\n     "fullname": "Noam Avram Chomsky",\n+    "groups": {\n+        "@id": "http://localhost:55001/plone/@users",\n+        "items": [\n+            "AuthenticatedUsers"\n+        ],\n+        "items_total": 1\n+    },\n     "home_page": "web.mit.edu/chomsky",\n     "id": "noamchomsky",\n     "location": "Cambridge, MA",\ndiff --git a/src/plone/restapi/tests/http-examples/users_authorized_get.resp b/src/plone/restapi/tests/http-examples/users_authorized_get.resp\nindex 0a55e965b..db7561e19 100644\n--- a/src/plone/restapi/tests/http-examples/users_authorized_get.resp\n+++ b/src/plone/restapi/tests/http-examples/users_authorized_get.resp\n@@ -6,6 +6,13 @@ Content-Type: application/json\n     "description": "Professor of Linguistics",\n     "email": "noam.chomsky@example.com",\n     "fullname": "Noam Avram Chomsky",\n+    "groups": {\n+        "@id": "http://localhost:55001/plone/@users/noam",\n+        "items": [\n+            "AuthenticatedUsers"\n+        ],\n+        "items_total": 1\n+    },\n     "home_page": "web.mit.edu/chomsky",\n     "id": "noam",\n     "location": "Cambridge, MA",\ndiff --git a/src/plone/restapi/tests/http-examples/users_created.resp b/src/plone/restapi/tests/http-examples/users_created.resp\nindex c5e39792c..8307450c8 100644\n--- a/src/plone/restapi/tests/http-examples/users_created.resp\n+++ b/src/plone/restapi/tests/http-examples/users_created.resp\n@@ -7,6 +7,13 @@ Location: http://localhost:55001/plone/@users/noamchomsky\n     "description": "Professor of Linguistics",\n     "email": "noam.chomsky@example.com",\n     "fullname": "Noam Avram Chomsky",\n+    "groups": {\n+        "@id": "http://localhost:55001/plone/@users",\n+        "items": [\n+            "AuthenticatedUsers"\n+        ],\n+        "items_total": 1\n+    },\n     "home_page": "web.mit.edu/chomsky",\n     "id": "noamchomsky",\n     "location": "Cambridge, MA",\ndiff --git a/src/plone/restapi/tests/http-examples/users_filtered_by_username.resp b/src/plone/restapi/tests/http-examples/users_filtered_by_username.resp\nindex 50bdf1e38..ce31a9259 100644\n--- a/src/plone/restapi/tests/http-examples/users_filtered_by_username.resp\n+++ b/src/plone/restapi/tests/http-examples/users_filtered_by_username.resp\n@@ -7,6 +7,13 @@ Content-Type: application/json\n         "description": "Professor of Linguistics",\n         "email": "noam.chomsky@example.com",\n         "fullname": "Noam Avram Chomsky",\n+        "groups": {\n+            "@id": "http://localhost:55001/plone/@users?query=noa",\n+            "items": [\n+                "AuthenticatedUsers"\n+            ],\n+            "items_total": 1\n+        },\n         "home_page": "web.mit.edu/chomsky",\n         "id": "noam",\n         "location": "Cambridge, MA",\ndiff --git a/src/plone/restapi/tests/http-examples/users_get.resp b/src/plone/restapi/tests/http-examples/users_get.resp\nindex 0a55e965b..db7561e19 100644\n--- a/src/plone/restapi/tests/http-examples/users_get.resp\n+++ b/src/plone/restapi/tests/http-examples/users_get.resp\n@@ -6,6 +6,13 @@ Content-Type: application/json\n     "description": "Professor of Linguistics",\n     "email": "noam.chomsky@example.com",\n     "fullname": "Noam Avram Chomsky",\n+    "groups": {\n+        "@id": "http://localhost:55001/plone/@users/noam",\n+        "items": [\n+            "AuthenticatedUsers"\n+        ],\n+        "items_total": 1\n+    },\n     "home_page": "web.mit.edu/chomsky",\n     "id": "noam",\n     "location": "Cambridge, MA",\ndiff --git a/src/plone/restapi/tests/http-examples/users_update_portrait_get.resp b/src/plone/restapi/tests/http-examples/users_update_portrait_get.resp\nindex fde27e260..a313f78ff 100644\n--- a/src/plone/restapi/tests/http-examples/users_update_portrait_get.resp\n+++ b/src/plone/restapi/tests/http-examples/users_update_portrait_get.resp\n@@ -6,6 +6,13 @@ Content-Type: application/json\n     "description": null,\n     "email": "noam.chomsky@example.com",\n     "fullname": null,\n+    "groups": {\n+        "@id": "http://localhost:55001/plone/@users/noam",\n+        "items": [\n+            "AuthenticatedUsers"\n+        ],\n+        "items_total": 1\n+    },\n     "home_page": null,\n     "id": "noam",\n     "location": null,\ndiff --git a/src/plone/restapi/tests/http-examples/workingcopy_baseline_get.resp b/src/plone/restapi/tests/http-examples/workingcopy_baseline_get.resp\nindex 683549cf9..6fef3c5d8 100644\n--- a/src/plone/restapi/tests/http-examples/workingcopy_baseline_get.resp\n+++ b/src/plone/restapi/tests/http-examples/workingcopy_baseline_get.resp\n@@ -40,7 +40,7 @@ Content-Type: application/json\n     "language": "",\n     "layout": "document_view",\n     "lock": {\n-        "created": "1995-07-31T17:30:00",\n+        "created": "1995-07-31T23:00:00",\n         "creator": "admin",\n         "creator_name": "admin",\n         "creator_url": "http://localhost:55001/plone/author/admin",\ndiff --git a/src/plone/restapi/tests/test_services_groups.py b/src/plone/restapi/tests/test_services_groups.py\nindex 21e278b9a..41eb6b230 100644\n--- a/src/plone/restapi/tests/test_services_groups.py\n+++ b/src/plone/restapi/tests/test_services_groups.py\n@@ -65,10 +65,9 @@ def test_list_groups(self):\n \n         self.assertEqual(ptgroup.get("roles"), ["Authenticated"])\n \n-        # We don\'t want the group members listed in the overview as there\n-        # might be loads.\n+        # # Assert batched list of group members\n         self.assertTrue(\n-            not any(["users" in group for group in response.json()]),\n+            all(["users" in group for group in response.json()]),\n             "Users key found in groups listing",\n         )\n \n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-06-02T11:14:04+02:00
Author: nileshgulia1 (nileshgulia1) <nileshgulia@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/9648c436a8e43e43d9521d6f09e6a00666c0f9a8

use members instead of users

Files changed:
M src/plone/restapi/serializer/group.py
M src/plone/restapi/tests/http-examples/workingcopy_baseline_get.resp
M src/plone/restapi/tests/test_services_groups.py

b'diff --git a/src/plone/restapi/serializer/group.py b/src/plone/restapi/serializer/group.py\nindex c9656f155..d9c227946 100644\n--- a/src/plone/restapi/serializer/group.py\n+++ b/src/plone/restapi/serializer/group.py\n@@ -42,13 +42,13 @@ def __call__(self):\n         group = self.context\n         members = group.getGroupMemberIds()\n         batch = HypermediaBatch(self.request, members)\n-        users_data = {\n+        members_data = {\n             "@id": batch.canonical_url,\n             "items_total": batch.items_total,\n             "items": sorted(batch),\n         }\n         if batch.links:\n-            users_data["batching"] = batch.links\n+            members_data["batching"] = batch.links\n \n-        data["users"] = users_data\n+        data["members"] = members_data\n         return data\ndiff --git a/src/plone/restapi/tests/http-examples/workingcopy_baseline_get.resp b/src/plone/restapi/tests/http-examples/workingcopy_baseline_get.resp\nindex 6fef3c5d8..683549cf9 100644\n--- a/src/plone/restapi/tests/http-examples/workingcopy_baseline_get.resp\n+++ b/src/plone/restapi/tests/http-examples/workingcopy_baseline_get.resp\n@@ -40,7 +40,7 @@ Content-Type: application/json\n     "language": "",\n     "layout": "document_view",\n     "lock": {\n-        "created": "1995-07-31T23:00:00",\n+        "created": "1995-07-31T17:30:00",\n         "creator": "admin",\n         "creator_name": "admin",\n         "creator_url": "http://localhost:55001/plone/author/admin",\ndiff --git a/src/plone/restapi/tests/test_services_groups.py b/src/plone/restapi/tests/test_services_groups.py\nindex 41eb6b230..83b012c6f 100644\n--- a/src/plone/restapi/tests/test_services_groups.py\n+++ b/src/plone/restapi/tests/test_services_groups.py\n@@ -67,8 +67,8 @@ def test_list_groups(self):\n \n         # # Assert batched list of group members\n         self.assertTrue(\n-            all(["users" in group for group in response.json()]),\n-            "Users key found in groups listing",\n+            all(["members" in group for group in response.json()]),\n+            "Members key found in groups listing",\n         )\n \n     def test_add_group(self):\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-06-02T11:14:04+02:00
Author: nileshgulia1 (nileshgulia1) <nileshgulia@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/135d41f5bddf38bfe23b3f36a1e353eea04c59e7

update http-examples

Files changed:
M src/plone/restapi/tests/http-examples/groups.resp
M src/plone/restapi/tests/http-examples/groups_created.resp
M src/plone/restapi/tests/http-examples/groups_get.resp

b'diff --git a/src/plone/restapi/tests/http-examples/groups.resp b/src/plone/restapi/tests/http-examples/groups.resp\nindex efcd53ebe..ff08f9011 100644\n--- a/src/plone/restapi/tests/http-examples/groups.resp\n+++ b/src/plone/restapi/tests/http-examples/groups.resp\n@@ -8,16 +8,16 @@ Content-Type: application/json\n         "email": "",\n         "groupname": "Administrators",\n         "id": "Administrators",\n+        "members": {\n+            "@id": "http://localhost:55001/plone/@groups",\n+            "items": [],\n+            "items_total": 0\n+        },\n         "roles": [\n             "Manager",\n             "Authenticated"\n         ],\n-        "title": "Administrators",\n-        "users": {\n-            "@id": "http://localhost:55001/plone/@groups",\n-            "items": [],\n-            "items_total": 0\n-        }\n+        "title": "Administrators"\n     },\n     {\n         "@id": "http://localhost:55001/plone/@groups/Reviewers",\n@@ -25,16 +25,16 @@ Content-Type: application/json\n         "email": "",\n         "groupname": "Reviewers",\n         "id": "Reviewers",\n+        "members": {\n+            "@id": "http://localhost:55001/plone/@groups",\n+            "items": [],\n+            "items_total": 0\n+        },\n         "roles": [\n             "Reviewer",\n             "Authenticated"\n         ],\n-        "title": "Reviewers",\n-        "users": {\n-            "@id": "http://localhost:55001/plone/@groups",\n-            "items": [],\n-            "items_total": 0\n-        }\n+        "title": "Reviewers"\n     },\n     {\n         "@id": "http://localhost:55001/plone/@groups/Site Administrators",\n@@ -42,16 +42,16 @@ Content-Type: application/json\n         "email": "",\n         "groupname": "Site Administrators",\n         "id": "Site Administrators",\n+        "members": {\n+            "@id": "http://localhost:55001/plone/@groups",\n+            "items": [],\n+            "items_total": 0\n+        },\n         "roles": [\n             "Site Administrator",\n             "Authenticated"\n         ],\n-        "title": "Site Administrators",\n-        "users": {\n-            "@id": "http://localhost:55001/plone/@groups",\n-            "items": [],\n-            "items_total": 0\n-        }\n+        "title": "Site Administrators"\n     },\n     {\n         "@id": "http://localhost:55001/plone/@groups/ploneteam",\n@@ -59,15 +59,15 @@ Content-Type: application/json\n         "email": "ploneteam@plone.org",\n         "groupname": "ploneteam",\n         "id": "ploneteam",\n-        "roles": [\n-            "Authenticated"\n-        ],\n-        "title": "Plone Team",\n-        "users": {\n+        "members": {\n             "@id": "http://localhost:55001/plone/@groups",\n             "items": [],\n             "items_total": 0\n-        }\n+        },\n+        "roles": [\n+            "Authenticated"\n+        ],\n+        "title": "Plone Team"\n     },\n     {\n         "@id": "http://localhost:55001/plone/@groups/AuthenticatedUsers",\n@@ -75,12 +75,12 @@ Content-Type: application/json\n         "email": "",\n         "groupname": "AuthenticatedUsers",\n         "id": "AuthenticatedUsers",\n-        "roles": [],\n-        "title": "Authenticated Users (Virtual Group)",\n-        "users": {\n+        "members": {\n             "@id": "http://localhost:55001/plone/@groups",\n             "items": [],\n             "items_total": 0\n-        }\n+        },\n+        "roles": [],\n+        "title": "Authenticated Users (Virtual Group)"\n     }\n ]\ndiff --git a/src/plone/restapi/tests/http-examples/groups_created.resp b/src/plone/restapi/tests/http-examples/groups_created.resp\nindex 66fb026f3..99793212f 100644\n--- a/src/plone/restapi/tests/http-examples/groups_created.resp\n+++ b/src/plone/restapi/tests/http-examples/groups_created.resp\n@@ -8,12 +8,7 @@ Location: http://localhost:55001/plone/@groups/fwt\n     "email": "fwt@plone.org",\n     "groupname": "fwt",\n     "id": "fwt",\n-    "roles": [\n-        "Manager",\n-        "Authenticated"\n-    ],\n-    "title": "Framework Team",\n-    "users": {\n+    "members": {\n         "@id": "http://localhost:55001/plone/@groups",\n         "items": [\n             "Administrators",\n@@ -21,5 +16,10 @@ Location: http://localhost:55001/plone/@groups/fwt\n             "test_user_1_"\n         ],\n         "items_total": 3\n-    }\n+    },\n+    "roles": [\n+        "Manager",\n+        "Authenticated"\n+    ],\n+    "title": "Framework Team"\n }\ndiff --git a/src/plone/restapi/tests/http-examples/groups_get.resp b/src/plone/restapi/tests/http-examples/groups_get.resp\nindex e54bb1555..1c4769ed3 100644\n--- a/src/plone/restapi/tests/http-examples/groups_get.resp\n+++ b/src/plone/restapi/tests/http-examples/groups_get.resp\n@@ -7,13 +7,13 @@ Content-Type: application/json\n     "email": "ploneteam@plone.org",\n     "groupname": "ploneteam",\n     "id": "ploneteam",\n-    "roles": [\n-        "Authenticated"\n-    ],\n-    "title": "Plone Team",\n-    "users": {\n+    "members": {\n         "@id": "http://localhost:55001/plone/@groups/ploneteam",\n         "items": [],\n         "items_total": 0\n-    }\n+    },\n+    "roles": [\n+        "Authenticated"\n+    ],\n+    "title": "Plone Team"\n }\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-06-02T11:14:04+02:00
Author: nileshgulia1 (nileshgulia1) <nileshgulia@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/2935e874eaef021496374d5051f441b69f56e2b2

fix tests

Files changed:
M src/plone/restapi/tests/test_serializer_group.py
M src/plone/restapi/tests/test_services_groups.py

b'diff --git a/src/plone/restapi/tests/test_serializer_group.py b/src/plone/restapi/tests/test_serializer_group.py\nindex c0ac04e98..4be5e90ef 100644\n--- a/src/plone/restapi/tests/test_serializer_group.py\n+++ b/src/plone/restapi/tests/test_serializer_group.py\n@@ -48,7 +48,7 @@ def test_serialize_returns_id(self):\n         self.assertEqual("ploneteam@plone.org", group.get("email"))\n         self.assertEqual("Plone Team", group.get("title"))\n         self.assertEqual("We are Plone", group.get("description"))\n-        self.assertEqual(set(group["users"]), {"@id", "items_total", "items"})\n+        self.assertEqual(set(group["members"]), {"@id", "items_total", "items"})\n \n     def test_summary(self):\n         group = self.serialize_summary(self.group)\ndiff --git a/src/plone/restapi/tests/test_services_groups.py b/src/plone/restapi/tests/test_services_groups.py\nindex 83b012c6f..848df9351 100644\n--- a/src/plone/restapi/tests/test_services_groups.py\n+++ b/src/plone/restapi/tests/test_services_groups.py\n@@ -114,7 +114,7 @@ def test_get_group(self):\n         self.assertEqual("ploneteam@plone.org", response.json().get("email"))\n         self.assertEqual("Plone Team", response.json().get("title"))\n         self.assertEqual("We are Plone", response.json().get("description"))\n-        self.assertIn("users", response.json())\n+        self.assertIn("members", response.json())\n \n     def test_get_search_group_with_filter(self):\n         response = self.api_session.get("/@groups", params={"query": "plo"})\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-06-02T11:14:04+02:00
Author: ksuess (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.restapi/commit/d9faae3251596e1e36f05ae6b79f382e83d54d2c

Add tests for listing of users filtered by groups

Files changed:
A src/plone/restapi/tests/http-examples/users_filtered_by_groups.req
A src/plone/restapi/tests/http-examples/users_filtered_by_groups.resp
M src/plone/restapi/tests/test_services_users.py

b'diff --git a/src/plone/restapi/tests/http-examples/users_filtered_by_groups.req b/src/plone/restapi/tests/http-examples/users_filtered_by_groups.req\nnew file mode 100644\nindex 000000000..636753940\n--- /dev/null\n+++ b/src/plone/restapi/tests/http-examples/users_filtered_by_groups.req\n@@ -0,0 +1,3 @@\n+GET /plone/@users?groups_filter=Reviewers,Administrators HTTP/1.1\n+Accept: application/json\n+Authorization: Basic YWRtaW46c2VjcmV0\ndiff --git a/src/plone/restapi/tests/http-examples/users_filtered_by_groups.resp b/src/plone/restapi/tests/http-examples/users_filtered_by_groups.resp\nnew file mode 100644\nindex 000000000..071987aa3\n--- /dev/null\n+++ b/src/plone/restapi/tests/http-examples/users_filtered_by_groups.resp\n@@ -0,0 +1,26 @@\n+HTTP/1.1 200 OK\n+Content-Type: application/json\n+\n+[\n+    {\n+        "@id": "http://localhost:55001/plone/@users/noam",\n+        "description": "Professor of Linguistics",\n+        "email": "noam.chomsky@example.com",\n+        "fullname": "Noam Avram Chomsky",\n+        "groups": {\n+            "@id": "http://localhost:55001/plone/@users?query=noa",\n+            "items": [\n+                "Reviewers"\n+            ],\n+            "items_total": 1\n+        },\n+        "home_page": "web.mit.edu/chomsky",\n+        "id": "noam",\n+        "location": "Cambridge, MA",\n+        "portrait": null,\n+        "roles": [\n+            "Member"\n+        ],\n+        "username": "noam"\n+    }\n+]\ndiff --git a/src/plone/restapi/tests/test_services_users.py b/src/plone/restapi/tests/test_services_users.py\nindex 48461d678..207682fbd 100644\n--- a/src/plone/restapi/tests/test_services_users.py\n+++ b/src/plone/restapi/tests/test_services_users.py\n@@ -59,6 +59,7 @@ def setUp(self):\n             properties=properties,\n             password="otherpassword",\n         )\n+        api.group.add_user(groupname=\'Reviewers\', username=\'otheruser\')\n         transaction.commit()\n \n     def tearDown(self):\n@@ -97,6 +98,18 @@ def test_list_users_as_anonymous(self):\n         response = self.anon_api_session.get("/@users")\n         self.assertEqual(response.status_code, 401)\n \n+    def test_list_users_filtered(self):\n+        response = self.api_session.get("/@users?groups_filter=Reviewers,Administrators")\n+        self.assertEqual(200, response.status_code)\n+        self.assertEqual(1, len(response.json()))\n+        user_ids = [user["id"] for user in response.json()]\n+        self.assertIn("otheruser", user_ids)\n+\n+        response = self.api_session.get("/@users?groups_filter=Administrators")\n+        self.assertEqual(200, response.status_code)\n+        user_ids = [user["id"] for user in response.json()]\n+        self.assertNotIn("otheruser", user_ids)\n+\n     def test_add_user(self):\n         response = self.api_session.post(\n             "/@users",\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-06-02T11:14:04+02:00
Author: ksuess (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.restapi/commit/9d84f56cadb2519a49c7fc9a339695756eb21784

Add documentation for new filtering of users by groups.

Files changed:
M docs/source/users.md

b"diff --git a/docs/source/users.md b/docs/source/users.md\nindex c6319662f..2ad08e90b 100644\n--- a/docs/source/users.md\n+++ b/docs/source/users.md\n@@ -55,19 +55,33 @@ The server will return a {term}`401 Unauthorized` status code.\n :language: http\n ```\n \n-The endpoint supports some basic filtering:\n+### Filtering the list of users\n+\n+The endpoint supports some basic filtering.\n+\n+Filtering by `fullname` and `id`:\n \n ```{eval-rst}\n ..  http:example:: curl httpie python-requests\n     :request: ../../src/plone/restapi/tests/http-examples/users_filtered_by_username.req\n ```\n \n-The server will respond with a list of the filtered users in the portal where the username starts with the `query` parameter's value:\n+The server will respond with a list of the filtered users in the portal where the `fullname` or `id` contains the `query` parameter's value:\n \n ```{literalinclude} ../../src/plone/restapi/tests/http-examples/users_filtered_by_username.resp\n :language: http\n ```\n \n+Filtering by groups:\n+\n+```{eval-rst}\n+..  http:example:: curl httpie python-requests\n+    :request: ../../src/plone/restapi/tests/http-examples/users_filtered_by_groups.req\n+```\n+\n+The server will respond with a list of the filtered users in the portal where the users are member of one of the mentioned groups. The groups are to be separated by commas.\n+\n+\n The endpoint also takes a `limit` parameter.\n Its default is a maximum of 25 users at a time for performance reasons.\n \n"

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-06-02T11:14:04+02:00
Author: ksuess (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.restapi/commit/4121786940c7ce377238cf5a8126390076fe3735

Allow filtering of @users by groups.

Files changed:
M src/plone/restapi/serializer/user.py
M src/plone/restapi/services/users/get.py

b'diff --git a/src/plone/restapi/serializer/user.py b/src/plone/restapi/serializer/user.py\nindex ab64aef6b..c3789da61 100644\n--- a/src/plone/restapi/serializer/user.py\n+++ b/src/plone/restapi/serializer/user.py\n@@ -58,6 +58,14 @@ def __call__(self):\n         return data\n \n \n+@implementer(ISerializeToJsonSummary)\n+@adapter(IMemberData, IRequest)\n+class SerializeUserToJsonSummary(BaseSerializer):\n+    def __call__(self):\n+        data = super().__call__()\n+        return data\n+\n+\n @implementer(ISerializeToJson)\n @adapter(IMemberData, IRequest)\n class SerializeUserToJson(BaseSerializer):\n@@ -76,9 +84,3 @@ def __call__(self):\n \n         data["groups"] = groups_data\n         return data\n-\n-\n-@implementer(ISerializeToJsonSummary)\n-@adapter(IMemberData, IRequest)\n-class SerializeUserToJsonSummary(BaseSerializer):\n-    pass\ndiff --git a/src/plone/restapi/services/users/get.py b/src/plone/restapi/services/users/get.py\nindex 72d690731..26259b586 100644\n--- a/src/plone/restapi/services/users/get.py\n+++ b/src/plone/restapi/services/users/get.py\n@@ -1,5 +1,5 @@\n from AccessControl import getSecurityManager\n-from plone.restapi.interfaces import ISerializeToJson\n+from plone.restapi.interfaces import ISerializeToJson, ISerializeToJsonSummary\n from plone.restapi.services import Service\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.utils import normalizeString\n@@ -50,11 +50,15 @@ def _get_users(self):\n         users = [self.portal_membership.getMemberById(userid) for userid in results]\n         return self._sort_users(users)\n \n-    def _get_filtered_users(self, query, limit):\n+    def _get_filtered_users(self, query, groups_filter, limit):\n         results = self.acl_users.searchUsers(id=query, max_results=limit)\n         users = [\n             self.portal_membership.getMemberById(user["userid"]) for user in results\n         ]\n+        if groups_filter:\n+            groups_filter_list = groups_filter.split(",")\n+            users = [user for user in users if set(user.getGroups()) & set(groups_filter_list)]\n+\n         return self._sort_users(users)\n \n     def has_permission_to_query(self):\n@@ -74,11 +78,12 @@ def has_permission_to_access_user_info(self):\n     def reply(self):\n         if len(self.query) > 0 and len(self.params) == 0:\n             query = self.query.get("query", "")\n+            groups_filter = self.query.get("groups_filter", "")\n             limit = self.query.get("limit", DEFAULT_SEARCH_RESULTS_LIMIT)\n-            if query:\n+            if query or groups_filter:\n                 # Someone is searching users, check if they are authorized\n                 if self.has_permission_to_query():\n-                    users = self._get_filtered_users(query, limit)\n+                    users = self._get_filtered_users(query, groups_filter, limit)\n                     result = []\n                     for user in users:\n                         serializer = queryMultiAdapter(\n@@ -119,7 +124,7 @@ def reply(self):\n             if not user:\n                 self.request.response.setStatus(404)\n                 return\n-            serializer = queryMultiAdapter((user, self.request), ISerializeToJson)\n+            serializer = queryMultiAdapter((user, self.request), ISerializeToJsonSummary)\n             return serializer()\n         else:\n             self.request.response.setStatus(401)\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-06-02T11:14:04+02:00
Author: ksuess (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.restapi/commit/8177d1b5fbb7fec00904340d3aafad18a70084e1

Update changelog.

Files changed:
A news/1325.feature
A news/1419.feature
M CHANGES.rst

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 2d4c1d46b..36d8aedff 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -55,7 +55,6 @@ New features:\n \n - Enhance @addons endpoint to return a list of upgradeable addons.\n   [sneridagh] (#1319)\n-- Include users data in groups while retrieving @groups [@nileshgulia1] (#1325)\n \n \n 8.20.0 (2022-01-19)\ndiff --git a/news/1325.feature b/news/1325.feature\nnew file mode 100644\nindex 000000000..446b01b34\n--- /dev/null\n+++ b/news/1325.feature\n@@ -0,0 +1,2 @@\n+Include users data in groups while retrieving @groups\n+[@nileshgulia1]\n\\ No newline at end of file\ndiff --git a/news/1419.feature b/news/1419.feature\nnew file mode 100644\nindex 000000000..7a668fa4e\n--- /dev/null\n+++ b/news/1419.feature\n@@ -0,0 +1,2 @@\n+List Users (@users): Allow filtering by groups\n+[ksuess]\n\\ No newline at end of file\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-06-02T11:14:04+02:00
Author: ksuess (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.restapi/commit/3b0d36f9bc566c8c661eb0bd53196a50a7161d30

black

Files changed:
M src/plone/restapi/services/users/get.py
M src/plone/restapi/tests/test_services_users.py

b'diff --git a/src/plone/restapi/services/users/get.py b/src/plone/restapi/services/users/get.py\nindex 26259b586..bad6ac8b9 100644\n--- a/src/plone/restapi/services/users/get.py\n+++ b/src/plone/restapi/services/users/get.py\n@@ -57,7 +57,11 @@ def _get_filtered_users(self, query, groups_filter, limit):\n         ]\n         if groups_filter:\n             groups_filter_list = groups_filter.split(",")\n-            users = [user for user in users if set(user.getGroups()) & set(groups_filter_list)]\n+            users = [\n+                user\n+                for user in users\n+                if set(user.getGroups()) & set(groups_filter_list)\n+            ]\n \n         return self._sort_users(users)\n \n@@ -124,7 +128,9 @@ def reply(self):\n             if not user:\n                 self.request.response.setStatus(404)\n                 return\n-            serializer = queryMultiAdapter((user, self.request), ISerializeToJsonSummary)\n+            serializer = queryMultiAdapter(\n+                (user, self.request), ISerializeToJsonSummary\n+            )\n             return serializer()\n         else:\n             self.request.response.setStatus(401)\ndiff --git a/src/plone/restapi/tests/test_services_users.py b/src/plone/restapi/tests/test_services_users.py\nindex 207682fbd..2759acbec 100644\n--- a/src/plone/restapi/tests/test_services_users.py\n+++ b/src/plone/restapi/tests/test_services_users.py\n@@ -59,7 +59,7 @@ def setUp(self):\n             properties=properties,\n             password="otherpassword",\n         )\n-        api.group.add_user(groupname=\'Reviewers\', username=\'otheruser\')\n+        api.group.add_user(groupname="Reviewers", username="otheruser")\n         transaction.commit()\n \n     def tearDown(self):\n@@ -99,7 +99,9 @@ def test_list_users_as_anonymous(self):\n         self.assertEqual(response.status_code, 401)\n \n     def test_list_users_filtered(self):\n-        response = self.api_session.get("/@users?groups_filter=Reviewers,Administrators")\n+        response = self.api_session.get(\n+            "/@users?groups_filter=Reviewers,Administrators"\n+        )\n         self.assertEqual(200, response.status_code)\n         self.assertEqual(1, len(response.json()))\n         user_ids = [user["id"] for user in response.json()]\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-06-02T11:14:04+02:00
Author: ksuess (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.restapi/commit/d41a5b2f88c39981daf8db18c869852d7ce98a41

black

Files changed:
M docs/source/conf.py
M performance/convert.py
M performance/querystring-search.py

b'diff --git a/docs/source/conf.py b/docs/source/conf.py\nindex bd1c1dfd4..c7261d9fe 100644\n--- a/docs/source/conf.py\n+++ b/docs/source/conf.py\n@@ -166,8 +166,7 @@ def patch_pygments_to_highlight_jsonschema():\n html_logo = "_static/logo.svg"\n html_favicon = "_static/favicon.ico"\n \n-html_css_files = ["custom.css",\n-                  ("print.css", {"media": "print"})]\n+html_css_files = ["custom.css", ("print.css", {"media": "print"})]\n \n # See http://sphinx-doc.org/ext/todo.html#confval-todo_include_todos\n todo_include_todos = True\n@@ -287,10 +286,10 @@ def patch_pygments_to_highlight_jsonschema():\n # https://myst-parser.readthedocs.io/en/latest/syntax/optional.html\n myst_enable_extensions = [\n     "deflist",  # You will be able to utilise definition lists\n-                # https://myst-parser.readthedocs.io/en/latest/syntax/optional.html#definition-lists\n+    # https://myst-parser.readthedocs.io/en/latest/syntax/optional.html#definition-lists\n     "linkify",  # Identify \xe2\x80\x9cbare\xe2\x80\x9d web URLs and add hyperlinks.\n     "colon_fence",  # You can also use ::: delimiters to denote code fences,\\\n-                    #  instead of ```.\n+    #  instead of ```.\n     "substitution",  # https://myst-parser.readthedocs.io/en/latest/syntax/optional.html#substitutions-with-jinja2\n ]\n \n@@ -307,11 +306,11 @@ def patch_pygments_to_highlight_jsonschema():\n \n latex_elements = {\n     # The paper size ("letterpaper" or "a4paper").\n-    #"papersize": "letterpaper",\n+    # "papersize": "letterpaper",\n     # The font size ("10pt", "11pt" or "12pt").\n-    #"pointsize": "10pt",\n+    # "pointsize": "10pt",\n     # Additional stuff for the LaTeX preamble.\n-    #"preamble": "",\n+    # "preamble": "",\n }\n \n # Grouping the document tree into LaTeX files. List of tuples\ndiff --git a/performance/convert.py b/performance/convert.py\nindex 651a6cdd7..7e17bf0e9 100644\n--- a/performance/convert.py\n+++ b/performance/convert.py\n@@ -9,22 +9,22 @@\n \n \n def main(argv):\n-    prefix = \'\'\n+    prefix = ""\n \n     try:\n-        opts, _ = getopt.getopt(sys.argv[1:], \'hp:\', [\'prefix=\'])\n+        opts, _ = getopt.getopt(sys.argv[1:], "hp:", ["prefix="])\n     except getopt.GetoptError:\n-        print(\'main.py -p <prefix>\')\n+        print("main.py -p <prefix>")\n         sys.exit(2)\n     for opt, arg in opts:\n-        if opt == \'-h\':\n-            print(\'main.py -p <prefix>\')\n+        if opt == "-h":\n+            print("main.py -p <prefix>")\n             sys.exit()\n         elif opt in ("-p", "--prefix"):\n             prefix = arg\n \n-    if prefix == \'\':\n-        raise Exception(\'Prefix was not assigned\')\n+    if prefix == "":\n+        raise Exception("Prefix was not assigned")\n \n     testsuites, testsuite = create_testsuites()\n     append_testcases(prefix, testsuite)\n@@ -34,16 +34,13 @@ def main(argv):\n \n \n def create_testsuites():\n-    testsuites = ET.Element(\'testsuites\')\n+    testsuites = ET.Element("testsuites")\n \n-    testsuite = ET.SubElement(testsuites, \'testsuite\')\n-    testsuite.set(\'name\', \'Locust Tests\')\n+    testsuite = ET.SubElement(testsuites, "testsuite")\n+    testsuite.set("name", "Locust Tests")\n \n-    timestamp = str(datetime.datetime.now()).replace(\n-        \' \',\n-        \'T\'\n-    )\n-    testsuite.set(\'timestamp\', timestamp)\n+    timestamp = str(datetime.datetime.now()).replace(" ", "T")\n+    testsuite.set("timestamp", timestamp)\n \n     return (testsuites, testsuite)\n \n@@ -52,32 +49,32 @@ def append_testcases(prefix, testsuite):\n     test_count = 0\n     failure_count = 0\n \n-    with open(prefix + \'_requests.csv\', mode=\'r\') as csv_file:\n+    with open(prefix + "_requests.csv", mode="r") as csv_file:\n         csv_reader = csv.DictReader(csv_file)\n \n         line_count = 0\n         for row in csv_reader:\n \n             if line_count > 0:\n-                row_method = row[\'Method\']\n-                row_name = row[\'Name\']\n+                row_method = row["Method"]\n+                row_name = row["Name"]\n \n-                if row_method != \'None\' and row_name != \'Total\':\n-                    testcase = ET.SubElement(testsuite, \'testcase\')\n+                if row_method != "None" and row_name != "Total":\n+                    testcase = ET.SubElement(testsuite, "testcase")\n \n-                    name = f\'{row_method}\\t{row_name} Average response time\'\n-                    testcase.set(\'name\', name)\n+                    name = f"{row_method}\\t{row_name} Average response time"\n+                    testcase.set("name", name)\n \n-                    test_count += int(row[\'# requests\'])\n-                    failure_count += int(row[\'# failures\'])\n-                    avg_response_s = float(row[\'Average response time\']) / 1000\n-                    testcase.set(\'time\', str(avg_response_s))\n+                    test_count += int(row["# requests"])\n+                    failure_count += int(row["# failures"])\n+                    avg_response_s = float(row["Average response time"]) / 1000\n+                    testcase.set("time", str(avg_response_s))\n \n             line_count += 1\n \n-        testsuite.set(\'tests\', str(test_count))\n-        testsuite.set(\'failures\', str(failure_count))\n+        testsuite.set("tests", str(test_count))\n+        testsuite.set("failures", str(failure_count))\n \n \n-if __name__ == \'__main__\':\n-    main(sys.argv[1:])\n\\ No newline at end of file\n+if __name__ == "__main__":\n+    main(sys.argv[1:])\ndiff --git a/performance/querystring-search.py b/performance/querystring-search.py\nindex acadac7b7..00c7e3b32 100644\n--- a/performance/querystring-search.py\n+++ b/performance/querystring-search.py\n@@ -1,7 +1,7 @@\n from locust import HttpUser, task\n \n-class QuerystringSearchAnonymousUser(HttpUser):\n \n+class QuerystringSearchAnonymousUser(HttpUser):\n     @task\n     def querystring_search_root(self):\n         headers = {\n@@ -17,14 +17,13 @@ def querystring_search_root(self):\n                     {\n                         "i": "portal_type",\n                         "o": "plone.app.querystring.operation.selection.any",\n-                        "v": ["Document"]\n+                        "v": ["Document"],\n                     }\n                 ]\n             },\n             name="Querystring Search (Root)",\n         )\n \n-\n     @task\n     def querystring_search_root_fullobjects_true(self):\n         headers = {\n@@ -40,15 +39,14 @@ def querystring_search_root_fullobjects_true(self):\n                     {\n                         "i": "portal_type",\n                         "o": "plone.app.querystring.operation.selection.any",\n-                        "v": ["Document"]\n+                        "v": ["Document"],\n                     }\n                 ],\n-                "fullobjects": 1\n+                "fullobjects": 1,\n             },\n             name="Querystring Search (Root, Fullobjects=1)",\n         )\n \n-\n     @task\n     def querystring_search_content(self):\n         headers = {\n@@ -64,14 +62,13 @@ def querystring_search_content(self):\n                     {\n                         "i": "portal_type",\n                         "o": "plone.app.querystring.operation.selection.any",\n-                        "v": ["Document"]\n+                        "v": ["Document"],\n                     }\n                 ]\n             },\n             name="Querystring Search (Content)",\n         )\n \n-\n     @task\n     def querystring_search_content_fullobjects_true(self):\n         headers = {\n@@ -87,10 +84,10 @@ def querystring_search_content_fullobjects_true(self):\n                     {\n                         "i": "portal_type",\n                         "o": "plone.app.querystring.operation.selection.any",\n-                        "v": ["Document"]\n+                        "v": ["Document"],\n                     }\n                 ],\n-                "fullobjects": 1\n+                "fullobjects": 1,\n             },\n             name="Querystring Search (Content, Fullobjects=1)",\n         )\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-06-02T11:14:04+02:00
Author: ksuess (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.restapi/commit/e06541a5d2562be1bae638a79abeeb84565ae061

Fix test responses

Files changed:
M src/plone/restapi/tests/http-examples/users_authorized_get.resp
M src/plone/restapi/tests/http-examples/users_get.resp
M src/plone/restapi/tests/http-examples/users_update_portrait_get.resp
M src/plone/restapi/tests/http-examples/workingcopy_baseline_get.resp

b'diff --git a/src/plone/restapi/tests/http-examples/users_authorized_get.resp b/src/plone/restapi/tests/http-examples/users_authorized_get.resp\nindex db7561e19..0a55e965b 100644\n--- a/src/plone/restapi/tests/http-examples/users_authorized_get.resp\n+++ b/src/plone/restapi/tests/http-examples/users_authorized_get.resp\n@@ -6,13 +6,6 @@ Content-Type: application/json\n     "description": "Professor of Linguistics",\n     "email": "noam.chomsky@example.com",\n     "fullname": "Noam Avram Chomsky",\n-    "groups": {\n-        "@id": "http://localhost:55001/plone/@users/noam",\n-        "items": [\n-            "AuthenticatedUsers"\n-        ],\n-        "items_total": 1\n-    },\n     "home_page": "web.mit.edu/chomsky",\n     "id": "noam",\n     "location": "Cambridge, MA",\ndiff --git a/src/plone/restapi/tests/http-examples/users_get.resp b/src/plone/restapi/tests/http-examples/users_get.resp\nindex db7561e19..0a55e965b 100644\n--- a/src/plone/restapi/tests/http-examples/users_get.resp\n+++ b/src/plone/restapi/tests/http-examples/users_get.resp\n@@ -6,13 +6,6 @@ Content-Type: application/json\n     "description": "Professor of Linguistics",\n     "email": "noam.chomsky@example.com",\n     "fullname": "Noam Avram Chomsky",\n-    "groups": {\n-        "@id": "http://localhost:55001/plone/@users/noam",\n-        "items": [\n-            "AuthenticatedUsers"\n-        ],\n-        "items_total": 1\n-    },\n     "home_page": "web.mit.edu/chomsky",\n     "id": "noam",\n     "location": "Cambridge, MA",\ndiff --git a/src/plone/restapi/tests/http-examples/users_update_portrait_get.resp b/src/plone/restapi/tests/http-examples/users_update_portrait_get.resp\nindex a313f78ff..fde27e260 100644\n--- a/src/plone/restapi/tests/http-examples/users_update_portrait_get.resp\n+++ b/src/plone/restapi/tests/http-examples/users_update_portrait_get.resp\n@@ -6,13 +6,6 @@ Content-Type: application/json\n     "description": null,\n     "email": "noam.chomsky@example.com",\n     "fullname": null,\n-    "groups": {\n-        "@id": "http://localhost:55001/plone/@users/noam",\n-        "items": [\n-            "AuthenticatedUsers"\n-        ],\n-        "items_total": 1\n-    },\n     "home_page": null,\n     "id": "noam",\n     "location": null,\ndiff --git a/src/plone/restapi/tests/http-examples/workingcopy_baseline_get.resp b/src/plone/restapi/tests/http-examples/workingcopy_baseline_get.resp\nindex 683549cf9..60387b328 100644\n--- a/src/plone/restapi/tests/http-examples/workingcopy_baseline_get.resp\n+++ b/src/plone/restapi/tests/http-examples/workingcopy_baseline_get.resp\n@@ -40,7 +40,7 @@ Content-Type: application/json\n     "language": "",\n     "layout": "document_view",\n     "lock": {\n-        "created": "1995-07-31T17:30:00",\n+        "created": "1995-07-31T19:30:00",\n         "creator": "admin",\n         "creator_name": "admin",\n         "creator_url": "http://localhost:55001/plone/author/admin",\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-06-02T11:14:04+02:00
Author: ksuess (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.restapi/commit/b72c6bef1722f0a0c72d60641fe960810e386335

Update workingcopy_baseline_get.resp

Files changed:
M src/plone/restapi/tests/http-examples/workingcopy_baseline_get.resp

b'diff --git a/src/plone/restapi/tests/http-examples/workingcopy_baseline_get.resp b/src/plone/restapi/tests/http-examples/workingcopy_baseline_get.resp\nindex 60387b328..683549cf9 100644\n--- a/src/plone/restapi/tests/http-examples/workingcopy_baseline_get.resp\n+++ b/src/plone/restapi/tests/http-examples/workingcopy_baseline_get.resp\n@@ -40,7 +40,7 @@ Content-Type: application/json\n     "language": "",\n     "layout": "document_view",\n     "lock": {\n-        "created": "1995-07-31T19:30:00",\n+        "created": "1995-07-31T17:30:00",\n         "creator": "admin",\n         "creator_name": "admin",\n         "creator_url": "http://localhost:55001/plone/author/admin",\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-06-02T11:14:04+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.restapi/commit/b3bf1028f36c283391835f73a5d6bed091a181e4

move caching ruleset to definitions of endpoints

Files changed:
M src/plone/restapi/configure.zcml
M src/plone/restapi/services/actions/configure.zcml
M src/plone/restapi/services/breadcrumbs/configure.zcml
M src/plone/restapi/services/content/configure.zcml
M src/plone/restapi/services/discussion/configure.zcml
M src/plone/restapi/services/multilingual/configure.zcml
M src/plone/restapi/services/navigation/configure.zcml

b'diff --git a/src/plone/restapi/configure.zcml b/src/plone/restapi/configure.zcml\nindex a18da9013..c1e6b77cf 100644\n--- a/src/plone/restapi/configure.zcml\n+++ b/src/plone/restapi/configure.zcml\n@@ -23,10 +23,9 @@\n   <include package="plone.rest" />\n   <include package="plone.schema" />\n \n-  <include\n-      package="plone.app.caching"\n-      zcml:condition="installed plone.app.caching"\n-      />\n+  <configure zcml:condition="installed plone.app.caching">\n+      <include package="plone.app.caching" />\n+  </configure>\n \n   <include file="indexers.zcml" />\n \ndiff --git a/src/plone/restapi/services/actions/configure.zcml b/src/plone/restapi/services/actions/configure.zcml\nindex 042e1e316..a31838cb8 100644\n--- a/src/plone/restapi/services/actions/configure.zcml\n+++ b/src/plone/restapi/services/actions/configure.zcml\n@@ -2,6 +2,7 @@\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:cache="http://namespaces.zope.org/cache"\n     xmlns:plone="http://namespaces.plone.org/plone"\n+    xmlns:cache="http://namespaces.zope.org/cache"\n     xmlns:zcml="http://namespaces.zope.org/zcml"\n     >\n \n@@ -18,9 +19,9 @@\n       name="@actions"\n       />\n   <cache:ruleset\n+      zcml:condition="have plone-app-caching-3"\n       for=".get.ActionsGet"\n       ruleset="plone.content.dynamic"\n-      zcml:condition="have plone-app-caching-3"\n       />\n \n </configure>\ndiff --git a/src/plone/restapi/services/breadcrumbs/configure.zcml b/src/plone/restapi/services/breadcrumbs/configure.zcml\nindex d8a169b03..ccc40a595 100644\n--- a/src/plone/restapi/services/breadcrumbs/configure.zcml\n+++ b/src/plone/restapi/services/breadcrumbs/configure.zcml\n@@ -2,6 +2,7 @@\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:cache="http://namespaces.zope.org/cache"\n     xmlns:plone="http://namespaces.plone.org/plone"\n+    xmlns:cache="http://namespaces.zope.org/cache"\n     xmlns:zcml="http://namespaces.zope.org/zcml"\n     >\n \n@@ -18,9 +19,9 @@\n       name="@breadcrumbs"\n       />\n   <cache:ruleset\n-      for=".get.BreadcrumbsGet"\n-      ruleset="plone.content.dynamic"\n       zcml:condition="have plone-app-caching-3"\n+      for=".get.BreadcrumbsGet "\n+      ruleset="plone.content.dynamic"\n       />\n \n </configure>\ndiff --git a/src/plone/restapi/services/content/configure.zcml b/src/plone/restapi/services/content/configure.zcml\nindex 72073faaf..9a53ac494 100644\n--- a/src/plone/restapi/services/content/configure.zcml\n+++ b/src/plone/restapi/services/content/configure.zcml\n@@ -2,6 +2,7 @@\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:cache="http://namespaces.zope.org/cache"\n     xmlns:plone="http://namespaces.plone.org/plone"\n+    xmlns:cache="http://namespaces.zope.org/cache"\n     xmlns:zcml="http://namespaces.zope.org/zcml"\n     >\n \n@@ -19,9 +20,9 @@\n       permission="zope2.View"\n       />\n   <cache:ruleset\n+      zcml:condition="have plone-app-caching-3"\n       for=".get.ContentGet"\n       ruleset="plone.content.dynamic"\n-      zcml:condition="have plone-app-caching-3"\n       />\n \n   <plone:service\ndiff --git a/src/plone/restapi/services/discussion/configure.zcml b/src/plone/restapi/services/discussion/configure.zcml\nindex 635872d23..4a368b633 100644\n--- a/src/plone/restapi/services/discussion/configure.zcml\n+++ b/src/plone/restapi/services/discussion/configure.zcml\n@@ -2,6 +2,7 @@\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:cache="http://namespaces.zope.org/cache"\n     xmlns:plone="http://namespaces.plone.org/plone"\n+    xmlns:cache="http://namespaces.zope.org/cache"\n     xmlns:zcml="http://namespaces.zope.org/zcml"\n     >\n \n@@ -18,9 +19,9 @@\n       name="@comments"\n       />\n   <cache:ruleset\n+      zcml:condition="have plone-app-caching-3"\n       for=".conversation.CommentsGet"\n       ruleset="plone.content.itemView"\n-      zcml:condition="have plone-app-caching-3"\n       />\n \n   <plone:service\ndiff --git a/src/plone/restapi/services/multilingual/configure.zcml b/src/plone/restapi/services/multilingual/configure.zcml\nindex 58d65c74d..2708a5ebf 100644\n--- a/src/plone/restapi/services/multilingual/configure.zcml\n+++ b/src/plone/restapi/services/multilingual/configure.zcml\n@@ -2,6 +2,7 @@\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:cache="http://namespaces.zope.org/cache"\n     xmlns:plone="http://namespaces.plone.org/plone"\n+    xmlns:cache="http://namespaces.zope.org/cache"\n     xmlns:zcml="http://namespaces.zope.org/zcml"\n     >\n \n@@ -23,9 +24,9 @@\n       name="@translations"\n       />\n   <cache:ruleset\n+      zcml:condition="have plone-app-caching-3"\n       for=".pam.TranslationInfo"\n       ruleset="plone.content.dynamic"\n-      zcml:condition="have plone-app-caching-3"\n       />\n \n   <plone:service\ndiff --git a/src/plone/restapi/services/navigation/configure.zcml b/src/plone/restapi/services/navigation/configure.zcml\nindex 4d38b80bf..7c5ac7657 100644\n--- a/src/plone/restapi/services/navigation/configure.zcml\n+++ b/src/plone/restapi/services/navigation/configure.zcml\n@@ -2,6 +2,7 @@\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:cache="http://namespaces.zope.org/cache"\n     xmlns:plone="http://namespaces.plone.org/plone"\n+    xmlns:cache="http://namespaces.zope.org/cache"\n     xmlns:zcml="http://namespaces.zope.org/zcml"\n     >\n \n@@ -18,9 +19,9 @@\n       name="@navigation"\n       />\n   <cache:ruleset\n+      zcml:condition="have plone-app-caching-3"\n       for=".get.NavigationGet"\n       ruleset="plone.content.dynamic"\n-      zcml:condition="have plone-app-caching-3"\n       />\n \n </configure>\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-06-02T11:14:04+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.restapi/commit/e84bc31afb70f95655a5e1c322e48b4c67dfd5cd

zpretty

Files changed:
M src/plone/restapi/configure.zcml
M src/plone/restapi/services/actions/configure.zcml
M src/plone/restapi/services/breadcrumbs/configure.zcml
M src/plone/restapi/services/content/configure.zcml
M src/plone/restapi/services/discussion/configure.zcml
M src/plone/restapi/services/multilingual/configure.zcml
M src/plone/restapi/services/navigation/configure.zcml

b'diff --git a/src/plone/restapi/configure.zcml b/src/plone/restapi/configure.zcml\nindex c1e6b77cf..6312649a8 100644\n--- a/src/plone/restapi/configure.zcml\n+++ b/src/plone/restapi/configure.zcml\n@@ -24,7 +24,7 @@\n   <include package="plone.schema" />\n \n   <configure zcml:condition="installed plone.app.caching">\n-      <include package="plone.app.caching" />\n+    <include package="plone.app.caching" />\n   </configure>\n \n   <include file="indexers.zcml" />\ndiff --git a/src/plone/restapi/services/actions/configure.zcml b/src/plone/restapi/services/actions/configure.zcml\nindex a31838cb8..042e1e316 100644\n--- a/src/plone/restapi/services/actions/configure.zcml\n+++ b/src/plone/restapi/services/actions/configure.zcml\n@@ -2,7 +2,6 @@\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:cache="http://namespaces.zope.org/cache"\n     xmlns:plone="http://namespaces.plone.org/plone"\n-    xmlns:cache="http://namespaces.zope.org/cache"\n     xmlns:zcml="http://namespaces.zope.org/zcml"\n     >\n \n@@ -19,9 +18,9 @@\n       name="@actions"\n       />\n   <cache:ruleset\n-      zcml:condition="have plone-app-caching-3"\n       for=".get.ActionsGet"\n       ruleset="plone.content.dynamic"\n+      zcml:condition="have plone-app-caching-3"\n       />\n \n </configure>\ndiff --git a/src/plone/restapi/services/breadcrumbs/configure.zcml b/src/plone/restapi/services/breadcrumbs/configure.zcml\nindex ccc40a595..d8a169b03 100644\n--- a/src/plone/restapi/services/breadcrumbs/configure.zcml\n+++ b/src/plone/restapi/services/breadcrumbs/configure.zcml\n@@ -2,7 +2,6 @@\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:cache="http://namespaces.zope.org/cache"\n     xmlns:plone="http://namespaces.plone.org/plone"\n-    xmlns:cache="http://namespaces.zope.org/cache"\n     xmlns:zcml="http://namespaces.zope.org/zcml"\n     >\n \n@@ -19,9 +18,9 @@\n       name="@breadcrumbs"\n       />\n   <cache:ruleset\n-      zcml:condition="have plone-app-caching-3"\n-      for=".get.BreadcrumbsGet "\n+      for=".get.BreadcrumbsGet"\n       ruleset="plone.content.dynamic"\n+      zcml:condition="have plone-app-caching-3"\n       />\n \n </configure>\ndiff --git a/src/plone/restapi/services/content/configure.zcml b/src/plone/restapi/services/content/configure.zcml\nindex 9a53ac494..72073faaf 100644\n--- a/src/plone/restapi/services/content/configure.zcml\n+++ b/src/plone/restapi/services/content/configure.zcml\n@@ -2,7 +2,6 @@\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:cache="http://namespaces.zope.org/cache"\n     xmlns:plone="http://namespaces.plone.org/plone"\n-    xmlns:cache="http://namespaces.zope.org/cache"\n     xmlns:zcml="http://namespaces.zope.org/zcml"\n     >\n \n@@ -20,9 +19,9 @@\n       permission="zope2.View"\n       />\n   <cache:ruleset\n-      zcml:condition="have plone-app-caching-3"\n       for=".get.ContentGet"\n       ruleset="plone.content.dynamic"\n+      zcml:condition="have plone-app-caching-3"\n       />\n \n   <plone:service\ndiff --git a/src/plone/restapi/services/discussion/configure.zcml b/src/plone/restapi/services/discussion/configure.zcml\nindex 4a368b633..635872d23 100644\n--- a/src/plone/restapi/services/discussion/configure.zcml\n+++ b/src/plone/restapi/services/discussion/configure.zcml\n@@ -2,7 +2,6 @@\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:cache="http://namespaces.zope.org/cache"\n     xmlns:plone="http://namespaces.plone.org/plone"\n-    xmlns:cache="http://namespaces.zope.org/cache"\n     xmlns:zcml="http://namespaces.zope.org/zcml"\n     >\n \n@@ -19,9 +18,9 @@\n       name="@comments"\n       />\n   <cache:ruleset\n-      zcml:condition="have plone-app-caching-3"\n       for=".conversation.CommentsGet"\n       ruleset="plone.content.itemView"\n+      zcml:condition="have plone-app-caching-3"\n       />\n \n   <plone:service\ndiff --git a/src/plone/restapi/services/multilingual/configure.zcml b/src/plone/restapi/services/multilingual/configure.zcml\nindex 2708a5ebf..58d65c74d 100644\n--- a/src/plone/restapi/services/multilingual/configure.zcml\n+++ b/src/plone/restapi/services/multilingual/configure.zcml\n@@ -2,7 +2,6 @@\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:cache="http://namespaces.zope.org/cache"\n     xmlns:plone="http://namespaces.plone.org/plone"\n-    xmlns:cache="http://namespaces.zope.org/cache"\n     xmlns:zcml="http://namespaces.zope.org/zcml"\n     >\n \n@@ -24,9 +23,9 @@\n       name="@translations"\n       />\n   <cache:ruleset\n-      zcml:condition="have plone-app-caching-3"\n       for=".pam.TranslationInfo"\n       ruleset="plone.content.dynamic"\n+      zcml:condition="have plone-app-caching-3"\n       />\n \n   <plone:service\ndiff --git a/src/plone/restapi/services/navigation/configure.zcml b/src/plone/restapi/services/navigation/configure.zcml\nindex 7c5ac7657..4d38b80bf 100644\n--- a/src/plone/restapi/services/navigation/configure.zcml\n+++ b/src/plone/restapi/services/navigation/configure.zcml\n@@ -2,7 +2,6 @@\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:cache="http://namespaces.zope.org/cache"\n     xmlns:plone="http://namespaces.plone.org/plone"\n-    xmlns:cache="http://namespaces.zope.org/cache"\n     xmlns:zcml="http://namespaces.zope.org/zcml"\n     >\n \n@@ -19,9 +18,9 @@\n       name="@navigation"\n       />\n   <cache:ruleset\n-      zcml:condition="have plone-app-caching-3"\n       for=".get.NavigationGet"\n       ruleset="plone.content.dynamic"\n+      zcml:condition="have plone-app-caching-3"\n       />\n \n </configure>\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-06-02T11:14:04+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.restapi/commit/4b03a2a210eb2ca7cbccb6eb47aa9f69ef97e195

move tests from caching

Files changed:
M src/plone/restapi/configure.zcml
M src/plone/restapi/testing.py
M src/plone/restapi/tests/test_caching.py

b'diff --git a/src/plone/restapi/configure.zcml b/src/plone/restapi/configure.zcml\nindex 6312649a8..a18da9013 100644\n--- a/src/plone/restapi/configure.zcml\n+++ b/src/plone/restapi/configure.zcml\n@@ -23,9 +23,10 @@\n   <include package="plone.rest" />\n   <include package="plone.schema" />\n \n-  <configure zcml:condition="installed plone.app.caching">\n-    <include package="plone.app.caching" />\n-  </configure>\n+  <include\n+      package="plone.app.caching"\n+      zcml:condition="installed plone.app.caching"\n+      />\n \n   <include file="indexers.zcml" />\n \ndiff --git a/src/plone/restapi/testing.py b/src/plone/restapi/testing.py\nindex b24c3edf3..b67b31b2f 100644\n--- a/src/plone/restapi/testing.py\n+++ b/src/plone/restapi/testing.py\n@@ -40,7 +40,6 @@\n try:\n     from plone.app.caching.testing import PloneAppCachingBase\n except ImportError:\n-    # we get an import error in Plone 5.2 and in 6.0a4 an earlier\n     PloneAppCachingBase = None\n \n ENABLED_LANGUAGES = ["de", "en", "es", "fr"]\n@@ -213,7 +212,6 @@ def setUpPloneSite(self, portal):\n )\n \n if PloneAppCachingBase is not None:\n-    # condition and fallback can be removed in a Plone 6.0 only scenario\n     class PloneRestApiCachingLayer(PloneAppCachingBase):\n \n         defaultBases = [\ndiff --git a/src/plone/restapi/tests/test_caching.py b/src/plone/restapi/tests/test_caching.py\nindex 060ae3566..80239b34c 100644\n--- a/src/plone/restapi/tests/test_caching.py\n+++ b/src/plone/restapi/tests/test_caching.py\n@@ -1,4 +1,5 @@\n from ..testing import PLONE_RESTAPI_CACHING_FUNCTIONAL_TESTING\n+from ..testing import PLONE_RESTAPI_DX_PAM_FUNCTIONAL_TESTING\n from ..testing import RelativeSession\n from plone.app.testing import applyProfile\n from plone.app.testing import setRoles\n@@ -15,7 +16,6 @@\n @unittest.skipIf(\n     PLONE_RESTAPI_CACHING_FUNCTIONAL_TESTING is None,\n     "Test needs plone.app.caching>3.0.0a13",\n-    # condition and fallback can be removed in a Plone 6.0 only scenario\n )\n class TestProfileWithCachingRestAPI(unittest.TestCase):\n     """This test aims to exercise the caching operations expected from the\n@@ -24,6 +24,8 @@ class TestProfileWithCachingRestAPI(unittest.TestCase):\n \n     if PLONE_RESTAPI_CACHING_FUNCTIONAL_TESTING is not None:\n         layer = PLONE_RESTAPI_CACHING_FUNCTIONAL_TESTING\n+    else:\n+        layer = PLONE_RESTAPI_DX_PAM_FUNCTIONAL_TESTING\n \n     def setUp(self):\n         self.app = self.layer["app"]\n@@ -125,7 +127,6 @@ def test_restapi_search(self):\n @unittest.skipIf(\n     PLONE_RESTAPI_CACHING_FUNCTIONAL_TESTING is None,\n     "Test needs plone.app.caching>3.0.0a13",\n-    # condition and fallback can be removed in a Plone 6.0 only scenario\n )\n class TestProfileWithoutCachingRestAPI(unittest.TestCase):\n     """This test aims to exercise the caching operations expected from the\n@@ -134,6 +135,8 @@ class TestProfileWithoutCachingRestAPI(unittest.TestCase):\n \n     if PLONE_RESTAPI_CACHING_FUNCTIONAL_TESTING is not None:\n         layer = PLONE_RESTAPI_CACHING_FUNCTIONAL_TESTING\n+    else:\n+        layer = PLONE_RESTAPI_DX_PAM_FUNCTIONAL_TESTING\n \n     def setUp(self):\n         self.app = self.layer["app"]\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-06-02T11:14:04+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.restapi/commit/abbc0fea6b57de62f252742022d4ce77084223ad

remove else and add comments

Files changed:
M src/plone/restapi/testing.py
M src/plone/restapi/tests/test_caching.py

b'diff --git a/src/plone/restapi/testing.py b/src/plone/restapi/testing.py\nindex b67b31b2f..b24c3edf3 100644\n--- a/src/plone/restapi/testing.py\n+++ b/src/plone/restapi/testing.py\n@@ -40,6 +40,7 @@\n try:\n     from plone.app.caching.testing import PloneAppCachingBase\n except ImportError:\n+    # we get an import error in Plone 5.2 and in 6.0a4 an earlier\n     PloneAppCachingBase = None\n \n ENABLED_LANGUAGES = ["de", "en", "es", "fr"]\n@@ -212,6 +213,7 @@ def setUpPloneSite(self, portal):\n )\n \n if PloneAppCachingBase is not None:\n+    # condition and fallback can be removed in a Plone 6.0 only scenario\n     class PloneRestApiCachingLayer(PloneAppCachingBase):\n \n         defaultBases = [\ndiff --git a/src/plone/restapi/tests/test_caching.py b/src/plone/restapi/tests/test_caching.py\nindex 80239b34c..060ae3566 100644\n--- a/src/plone/restapi/tests/test_caching.py\n+++ b/src/plone/restapi/tests/test_caching.py\n@@ -1,5 +1,4 @@\n from ..testing import PLONE_RESTAPI_CACHING_FUNCTIONAL_TESTING\n-from ..testing import PLONE_RESTAPI_DX_PAM_FUNCTIONAL_TESTING\n from ..testing import RelativeSession\n from plone.app.testing import applyProfile\n from plone.app.testing import setRoles\n@@ -16,6 +15,7 @@\n @unittest.skipIf(\n     PLONE_RESTAPI_CACHING_FUNCTIONAL_TESTING is None,\n     "Test needs plone.app.caching>3.0.0a13",\n+    # condition and fallback can be removed in a Plone 6.0 only scenario\n )\n class TestProfileWithCachingRestAPI(unittest.TestCase):\n     """This test aims to exercise the caching operations expected from the\n@@ -24,8 +24,6 @@ class TestProfileWithCachingRestAPI(unittest.TestCase):\n \n     if PLONE_RESTAPI_CACHING_FUNCTIONAL_TESTING is not None:\n         layer = PLONE_RESTAPI_CACHING_FUNCTIONAL_TESTING\n-    else:\n-        layer = PLONE_RESTAPI_DX_PAM_FUNCTIONAL_TESTING\n \n     def setUp(self):\n         self.app = self.layer["app"]\n@@ -127,6 +125,7 @@ def test_restapi_search(self):\n @unittest.skipIf(\n     PLONE_RESTAPI_CACHING_FUNCTIONAL_TESTING is None,\n     "Test needs plone.app.caching>3.0.0a13",\n+    # condition and fallback can be removed in a Plone 6.0 only scenario\n )\n class TestProfileWithoutCachingRestAPI(unittest.TestCase):\n     """This test aims to exercise the caching operations expected from the\n@@ -135,8 +134,6 @@ class TestProfileWithoutCachingRestAPI(unittest.TestCase):\n \n     if PLONE_RESTAPI_CACHING_FUNCTIONAL_TESTING is not None:\n         layer = PLONE_RESTAPI_CACHING_FUNCTIONAL_TESTING\n-    else:\n-        layer = PLONE_RESTAPI_DX_PAM_FUNCTIONAL_TESTING\n \n     def setUp(self):\n         self.app = self.layer["app"]\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-06-02T11:14:04+02:00
Author: ksuess (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.restapi/commit/a6e85caee70fd79c8812994e7358c66793036f9c

Fix combo of filtering user by search and group.

Files changed:
M src/plone/restapi/services/users/get.py

b'diff --git a/src/plone/restapi/services/users/get.py b/src/plone/restapi/services/users/get.py\nindex bad6ac8b9..f9a22a472 100644\n--- a/src/plone/restapi/services/users/get.py\n+++ b/src/plone/restapi/services/users/get.py\n@@ -3,6 +3,7 @@\n from plone.restapi.services import Service\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.utils import normalizeString\n+from urllib.parse import parse_qsl\n from zExceptions import BadRequest\n from zope.component import queryMultiAdapter\n from zope.component.hooks import getSite\n@@ -21,7 +22,7 @@ def __init__(self, context, request):\n         portal = getSite()\n         self.portal_membership = getToolByName(portal, "portal_membership")\n         self.acl_users = getToolByName(portal, "acl_users")\n-        self.query = self.request.form.copy()\n+        self.query = dict(parse_qsl(self.request["QUERY_STRING"]))\n \n     def publishTraverse(self, request, name):\n         # Consume any path segments after /@users as parameters\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-06-02T11:14:04+02:00
Author: ksuess (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.restapi/commit/5a4a7d1806d73b69993adbeaffc98b665e6b97b5

user groups_data: list of dict of id and title (was list of ids)

Files changed:
M src/plone/restapi/serializer/user.py

b'diff --git a/src/plone/restapi/serializer/user.py b/src/plone/restapi/serializer/user.py\nindex c3789da61..270de84df 100644\n--- a/src/plone/restapi/serializer/user.py\n+++ b/src/plone/restapi/serializer/user.py\n@@ -72,12 +72,18 @@ class SerializeUserToJson(BaseSerializer):\n     def __call__(self):\n         data = super().__call__()\n         user = self.context\n-        groups = user.getGroups()\n+        gtool = getToolByName(self.context, \'portal_groups\')\n+        groupIds = user.getGroups()\n+        groups = [gtool.getGroupById(grp) for grp in groupIds]\n+        groups = [{\n+            "id": grp.id,\n+            "title": grp.title or grp.id\n+        } for grp in groups]\n         batch = HypermediaBatch(self.request, groups)\n         groups_data = {\n             "@id": batch.canonical_url,\n             "items_total": batch.items_total,\n-            "items": sorted(batch),\n+            "items": sorted(batch, key=lambda x: x[\'title\']),\n         }\n         if batch.links:\n             groups_data["batching"] = batch.links\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-06-02T11:14:04+02:00
Author: nileshgulia1 (nileshgulia1) <nileshgulia@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/577d5827ba94bcb392e09c4517caf21fe2375acd

Black and fix tests

Files changed:
M src/plone/restapi/serializer/user.py
M src/plone/restapi/tests/http-examples/users.resp
M src/plone/restapi/tests/http-examples/users_add.resp
M src/plone/restapi/tests/http-examples/users_created.resp
M src/plone/restapi/tests/http-examples/users_filtered_by_username.resp

b'diff --git a/src/plone/restapi/serializer/user.py b/src/plone/restapi/serializer/user.py\nindex 270de84df..a179601cf 100644\n--- a/src/plone/restapi/serializer/user.py\n+++ b/src/plone/restapi/serializer/user.py\n@@ -72,18 +72,15 @@ class SerializeUserToJson(BaseSerializer):\n     def __call__(self):\n         data = super().__call__()\n         user = self.context\n-        gtool = getToolByName(self.context, \'portal_groups\')\n+        gtool = getToolByName(self.context, "portal_groups")\n         groupIds = user.getGroups()\n         groups = [gtool.getGroupById(grp) for grp in groupIds]\n-        groups = [{\n-            "id": grp.id,\n-            "title": grp.title or grp.id\n-        } for grp in groups]\n+        groups = [{"id": grp.id, "title": grp.title or grp.id} for grp in groups]\n         batch = HypermediaBatch(self.request, groups)\n         groups_data = {\n             "@id": batch.canonical_url,\n             "items_total": batch.items_total,\n-            "items": sorted(batch, key=lambda x: x[\'title\']),\n+            "items": sorted(batch, key=lambda x: x["title"]),\n         }\n         if batch.links:\n             groups_data["batching"] = batch.links\ndiff --git a/src/plone/restapi/tests/http-examples/users.resp b/src/plone/restapi/tests/http-examples/users.resp\nindex b98ed9d60..a8e179eaf 100644\n--- a/src/plone/restapi/tests/http-examples/users.resp\n+++ b/src/plone/restapi/tests/http-examples/users.resp\n@@ -10,7 +10,10 @@ Content-Type: application/json\n         "groups": {\n             "@id": "http://localhost:55001/plone/@users",\n             "items": [\n-                "AuthenticatedUsers"\n+                {\n+                    "id": "AuthenticatedUsers",\n+                    "title": "AuthenticatedUsers"\n+                }\n             ],\n             "items_total": 1\n         },\n@@ -31,7 +34,10 @@ Content-Type: application/json\n         "groups": {\n             "@id": "http://localhost:55001/plone/@users",\n             "items": [\n-                "AuthenticatedUsers"\n+                {\n+                    "id": "AuthenticatedUsers",\n+                    "title": "AuthenticatedUsers"\n+                }\n             ],\n             "items_total": 1\n         },\ndiff --git a/src/plone/restapi/tests/http-examples/users_add.resp b/src/plone/restapi/tests/http-examples/users_add.resp\nindex 5f0b2b24c..0c13e44b9 100644\n--- a/src/plone/restapi/tests/http-examples/users_add.resp\n+++ b/src/plone/restapi/tests/http-examples/users_add.resp\n@@ -10,7 +10,10 @@ Location: http://localhost:55001/plone/@users/noamchomsky\n     "groups": {\n         "@id": "http://localhost:55001/plone/@users",\n         "items": [\n-            "AuthenticatedUsers"\n+            {\n+                "id": "AuthenticatedUsers",\n+                "title": "AuthenticatedUsers"\n+            }\n         ],\n         "items_total": 1\n     },\ndiff --git a/src/plone/restapi/tests/http-examples/users_created.resp b/src/plone/restapi/tests/http-examples/users_created.resp\nindex 8307450c8..578dbc68f 100644\n--- a/src/plone/restapi/tests/http-examples/users_created.resp\n+++ b/src/plone/restapi/tests/http-examples/users_created.resp\n@@ -10,7 +10,10 @@ Location: http://localhost:55001/plone/@users/noamchomsky\n     "groups": {\n         "@id": "http://localhost:55001/plone/@users",\n         "items": [\n-            "AuthenticatedUsers"\n+            {\n+                "id": "AuthenticatedUsers",\n+                "title": "AuthenticatedUsers"\n+            }\n         ],\n         "items_total": 1\n     },\ndiff --git a/src/plone/restapi/tests/http-examples/users_filtered_by_username.resp b/src/plone/restapi/tests/http-examples/users_filtered_by_username.resp\nindex ce31a9259..ef3e514f9 100644\n--- a/src/plone/restapi/tests/http-examples/users_filtered_by_username.resp\n+++ b/src/plone/restapi/tests/http-examples/users_filtered_by_username.resp\n@@ -10,7 +10,10 @@ Content-Type: application/json\n         "groups": {\n             "@id": "http://localhost:55001/plone/@users?query=noa",\n             "items": [\n-                "AuthenticatedUsers"\n+                {\n+                    "id": "AuthenticatedUsers",\n+                    "title": "AuthenticatedUsers"\n+                }\n             ],\n             "items_total": 1\n         },\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-06-02T11:44:50+02:00
Author: ksuess (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.restapi/commit/bc42a349bb7740d7a61155d4f0c50c92a66c5c9f

Rename attribute name groups_filter to groups-filter according naming conventions https://plonerestapi.readthedocs.io/en/latest/conventions.html?highlight=parameters#naming-convention-for-attribute-names-in-uris

Files changed:
M src/plone/restapi/services/users/get.py
M src/plone/restapi/tests/http-examples/users_filtered_by_groups.req
M src/plone/restapi/tests/test_services_users.py

b'diff --git a/src/plone/restapi/services/users/get.py b/src/plone/restapi/services/users/get.py\nindex f9a22a472..f255dd151 100644\n--- a/src/plone/restapi/services/users/get.py\n+++ b/src/plone/restapi/services/users/get.py\n@@ -83,7 +83,7 @@ def has_permission_to_access_user_info(self):\n     def reply(self):\n         if len(self.query) > 0 and len(self.params) == 0:\n             query = self.query.get("query", "")\n-            groups_filter = self.query.get("groups_filter", "")\n+            groups_filter = self.query.get("groups-filter", "")\n             limit = self.query.get("limit", DEFAULT_SEARCH_RESULTS_LIMIT)\n             if query or groups_filter:\n                 # Someone is searching users, check if they are authorized\ndiff --git a/src/plone/restapi/tests/http-examples/users_filtered_by_groups.req b/src/plone/restapi/tests/http-examples/users_filtered_by_groups.req\nindex 636753940..1030bc897 100644\n--- a/src/plone/restapi/tests/http-examples/users_filtered_by_groups.req\n+++ b/src/plone/restapi/tests/http-examples/users_filtered_by_groups.req\n@@ -1,3 +1,3 @@\n-GET /plone/@users?groups_filter=Reviewers,Administrators HTTP/1.1\n+GET /plone/@users?groups-filter=Reviewers,Administrators HTTP/1.1\n Accept: application/json\n Authorization: Basic YWRtaW46c2VjcmV0\ndiff --git a/src/plone/restapi/tests/test_services_users.py b/src/plone/restapi/tests/test_services_users.py\nindex 2759acbec..c5265a3d4 100644\n--- a/src/plone/restapi/tests/test_services_users.py\n+++ b/src/plone/restapi/tests/test_services_users.py\n@@ -100,14 +100,14 @@ def test_list_users_as_anonymous(self):\n \n     def test_list_users_filtered(self):\n         response = self.api_session.get(\n-            "/@users?groups_filter=Reviewers,Administrators"\n+            "/@users?groups-filter=Reviewers,Administrators"\n         )\n         self.assertEqual(200, response.status_code)\n         self.assertEqual(1, len(response.json()))\n         user_ids = [user["id"] for user in response.json()]\n         self.assertIn("otheruser", user_ids)\n \n-        response = self.api_session.get("/@users?groups_filter=Administrators")\n+        response = self.api_session.get("/@users?groups-filter=Administrators")\n         self.assertEqual(200, response.status_code)\n         user_ids = [user["id"] for user in response.json()]\n         self.assertNotIn("otheruser", user_ids)\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-06-08T05:37:12+02:00
Author: ksuess (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.restapi/commit/3a32cb809af2384f0af155e23f6a19014b4040f4

Users endpoint: Change expected parameter to separated by colon separator

groups-filter:list

Files changed:
M docs/source/users.md
M src/plone/restapi/services/users/get.py
M src/plone/restapi/tests/http-examples/users_filtered_by_groups.req
M src/plone/restapi/tests/http-examples/users_filtered_by_groups.resp
M src/plone/restapi/tests/http-examples/users_filtered_by_username.resp
M src/plone/restapi/tests/test_documentation.py
M src/plone/restapi/tests/test_services_users.py

b'diff --git a/docs/source/users.md b/docs/source/users.md\nindex 2ad08e90b..180f54ce5 100644\n--- a/docs/source/users.md\n+++ b/docs/source/users.md\n@@ -79,8 +79,11 @@ Filtering by groups:\n     :request: ../../src/plone/restapi/tests/http-examples/users_filtered_by_groups.req\n ```\n \n-The server will respond with a list of the filtered users in the portal where the users are member of one of the mentioned groups. The groups are to be separated by commas.\n+The server will respond with a list of users where the users are member of one of the groups of the `groups-filter` parameter value.\n \n+```{literalinclude} ../../src/plone/restapi/tests/http-examples/users_filtered_by_groups.resp\n+:language: http\n+```\n \n The endpoint also takes a `limit` parameter.\n Its default is a maximum of 25 users at a time for performance reasons.\ndiff --git a/src/plone/restapi/services/users/get.py b/src/plone/restapi/services/users/get.py\nindex f255dd151..29a4b795b 100644\n--- a/src/plone/restapi/services/users/get.py\n+++ b/src/plone/restapi/services/users/get.py\n@@ -3,7 +3,7 @@\n from plone.restapi.services import Service\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.utils import normalizeString\n-from urllib.parse import parse_qsl\n+from urllib.parse import parse_qs\n from zExceptions import BadRequest\n from zope.component import queryMultiAdapter\n from zope.component.hooks import getSite\n@@ -22,7 +22,7 @@ def __init__(self, context, request):\n         portal = getSite()\n         self.portal_membership = getToolByName(portal, "portal_membership")\n         self.acl_users = getToolByName(portal, "acl_users")\n-        self.query = dict(parse_qsl(self.request["QUERY_STRING"]))\n+        self.query = parse_qs(self.request["QUERY_STRING"])\n \n     def publishTraverse(self, request, name):\n         # Consume any path segments after /@users as parameters\n@@ -57,11 +57,10 @@ def _get_filtered_users(self, query, groups_filter, limit):\n             self.portal_membership.getMemberById(user["userid"]) for user in results\n         ]\n         if groups_filter:\n-            groups_filter_list = groups_filter.split(",")\n             users = [\n                 user\n                 for user in users\n-                if set(user.getGroups()) & set(groups_filter_list)\n+                if set(user.getGroups()) & set(groups_filter)\n             ]\n \n         return self._sort_users(users)\n@@ -83,7 +82,7 @@ def has_permission_to_access_user_info(self):\n     def reply(self):\n         if len(self.query) > 0 and len(self.params) == 0:\n             query = self.query.get("query", "")\n-            groups_filter = self.query.get("groups-filter", "")\n+            groups_filter = self.query.get("groups-filter:list", self.query.get("groups-filter%3Alist", []))\n             limit = self.query.get("limit", DEFAULT_SEARCH_RESULTS_LIMIT)\n             if query or groups_filter:\n                 # Someone is searching users, check if they are authorized\ndiff --git a/src/plone/restapi/tests/http-examples/users_filtered_by_groups.req b/src/plone/restapi/tests/http-examples/users_filtered_by_groups.req\nindex 1030bc897..fd9a15341 100644\n--- a/src/plone/restapi/tests/http-examples/users_filtered_by_groups.req\n+++ b/src/plone/restapi/tests/http-examples/users_filtered_by_groups.req\n@@ -1,3 +1,3 @@\n-GET /plone/@users?groups-filter=Reviewers,Administrators HTTP/1.1\n+GET /plone/@users?groups-filter%3Alist=Reviewers&groups-filter%3Alist=Site+Administrators HTTP/1.1\n Accept: application/json\n Authorization: Basic YWRtaW46c2VjcmV0\ndiff --git a/src/plone/restapi/tests/http-examples/users_filtered_by_groups.resp b/src/plone/restapi/tests/http-examples/users_filtered_by_groups.resp\nindex 071987aa3..65ef80270 100644\n--- a/src/plone/restapi/tests/http-examples/users_filtered_by_groups.resp\n+++ b/src/plone/restapi/tests/http-examples/users_filtered_by_groups.resp\n@@ -8,17 +8,25 @@ Content-Type: application/json\n         "email": "noam.chomsky@example.com",\n         "fullname": "Noam Avram Chomsky",\n         "groups": {\n-            "@id": "http://localhost:55001/plone/@users?query=noa",\n+            "@id": "http://localhost:55001/plone/@users?groups-filter%3Alist=Reviewers&groups-filter%3Alist=Site+Administrators",\n             "items": [\n-                "Reviewers"\n+                {\n+                    "id": "AuthenticatedUsers",\n+                    "title": "AuthenticatedUsers"\n+                },\n+                {\n+                    "id": "Reviewers",\n+                    "title": "Reviewers"\n+                }\n             ],\n-            "items_total": 1\n+            "items_total": 2\n         },\n         "home_page": "web.mit.edu/chomsky",\n         "id": "noam",\n         "location": "Cambridge, MA",\n         "portrait": null,\n         "roles": [\n+            "Reviewer",\n             "Member"\n         ],\n         "username": "noam"\ndiff --git a/src/plone/restapi/tests/http-examples/users_filtered_by_username.resp b/src/plone/restapi/tests/http-examples/users_filtered_by_username.resp\nindex ef3e514f9..282db7cf3 100644\n--- a/src/plone/restapi/tests/http-examples/users_filtered_by_username.resp\n+++ b/src/plone/restapi/tests/http-examples/users_filtered_by_username.resp\n@@ -13,15 +13,20 @@ Content-Type: application/json\n                 {\n                     "id": "AuthenticatedUsers",\n                     "title": "AuthenticatedUsers"\n+                },\n+                {\n+                    "id": "Reviewers",\n+                    "title": "Reviewers"\n                 }\n             ],\n-            "items_total": 1\n+            "items_total": 2\n         },\n         "home_page": "web.mit.edu/chomsky",\n         "id": "noam",\n         "location": "Cambridge, MA",\n         "portrait": null,\n         "roles": [\n+            "Reviewer",\n             "Member"\n         ],\n         "username": "noam"\ndiff --git a/src/plone/restapi/tests/test_documentation.py b/src/plone/restapi/tests/test_documentation.py\nindex 525c8da28..b298df49e 100644\n--- a/src/plone/restapi/tests/test_documentation.py\n+++ b/src/plone/restapi/tests/test_documentation.py\n@@ -925,8 +925,6 @@ def test_documentation_users_authorized_get(self):\n \n     def test_documentation_users_filtered_get(self):\n         properties = {\n-            "email": "noam.chomsky@example.com",\n-            "username": "noamchomsky",\n             "fullname": "Noam Avram Chomsky",\n             "home_page": "web.mit.edu/chomsky",\n             "description": "Professor of Linguistics",\n@@ -935,11 +933,18 @@ def test_documentation_users_filtered_get(self):\n         api.user.create(\n             email="noam.chomsky@example.com", username="noam", properties=properties\n         )\n+        api.group.add_user(groupname=\'Reviewers\', username=\'noam\')\n         transaction.commit()\n+        # filter by username\n         response = self.api_session.get("@users", params={"query": "noa"})\n         save_request_and_response_for_docs(\n             "users_filtered_by_username", response\n         )  # noqa\n+        # filter by groups\n+        response = self.api_session.get("@users", params={"groups-filter:list": ["Reviewers", "Site Administrators"]})\n+        save_request_and_response_for_docs(\n+            "users_filtered_by_groups", response\n+        )  # noqa   \n \n     def test_documentation_users_created(self):\n         response = self.api_session.post(\ndiff --git a/src/plone/restapi/tests/test_services_users.py b/src/plone/restapi/tests/test_services_users.py\nindex c5265a3d4..079e84629 100644\n--- a/src/plone/restapi/tests/test_services_users.py\n+++ b/src/plone/restapi/tests/test_services_users.py\n@@ -100,14 +100,14 @@ def test_list_users_as_anonymous(self):\n \n     def test_list_users_filtered(self):\n         response = self.api_session.get(\n-            "/@users?groups-filter=Reviewers,Administrators"\n+            "/@users?groups-filter:list=Reviewers&groups-filter:list=Administrators"\n         )\n         self.assertEqual(200, response.status_code)\n         self.assertEqual(1, len(response.json()))\n         user_ids = [user["id"] for user in response.json()]\n         self.assertIn("otheruser", user_ids)\n \n-        response = self.api_session.get("/@users?groups-filter=Administrators")\n+        response = self.api_session.get("/@users?groups-filter:list=Administrators")\n         self.assertEqual(200, response.status_code)\n         user_ids = [user["id"] for user in response.json()]\n         self.assertNotIn("otheruser", user_ids)\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-06-08T06:01:18+02:00
Author: ksuess (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.restapi/commit/a6fdb0173d22a32fb08923280246008cc5ab0051

Fix documentation: /plone/@users?query= filters only by username, not fullname

Files changed:
M docs/source/users.md

b"diff --git a/docs/source/users.md b/docs/source/users.md\nindex 180f54ce5..ace4ba2b8 100644\n--- a/docs/source/users.md\n+++ b/docs/source/users.md\n@@ -59,20 +59,20 @@ The server will return a {term}`401 Unauthorized` status code.\n \n The endpoint supports some basic filtering.\n \n-Filtering by `fullname` and `id`:\n+Filtering by `id`:\n \n ```{eval-rst}\n ..  http:example:: curl httpie python-requests\n     :request: ../../src/plone/restapi/tests/http-examples/users_filtered_by_username.req\n ```\n \n-The server will respond with a list of the filtered users in the portal where the `fullname` or `id` contains the `query` parameter's value:\n+The server will respond with a list of the filtered users in the portal where the `username` starts with the `query` parameter's value:\n \n ```{literalinclude} ../../src/plone/restapi/tests/http-examples/users_filtered_by_username.resp\n :language: http\n ```\n \n-Filtering by groups:\n+Filtering by `groups`:\n \n ```{eval-rst}\n ..  http:example:: curl httpie python-requests\n"

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-06-08T06:06:04+02:00
Author: ksuess (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.restapi/commit/1e3f99f319a14dff201f68ac0a04378f232c6f27

black

Files changed:
M src/plone/restapi/services/users/get.py
M src/plone/restapi/tests/test_documentation.py

b'diff --git a/src/plone/restapi/services/users/get.py b/src/plone/restapi/services/users/get.py\nindex 29a4b795b..eebacbc8f 100644\n--- a/src/plone/restapi/services/users/get.py\n+++ b/src/plone/restapi/services/users/get.py\n@@ -58,9 +58,7 @@ def _get_filtered_users(self, query, groups_filter, limit):\n         ]\n         if groups_filter:\n             users = [\n-                user\n-                for user in users\n-                if set(user.getGroups()) & set(groups_filter)\n+                user for user in users if set(user.getGroups()) & set(groups_filter)\n             ]\n \n         return self._sort_users(users)\n@@ -82,7 +80,9 @@ def has_permission_to_access_user_info(self):\n     def reply(self):\n         if len(self.query) > 0 and len(self.params) == 0:\n             query = self.query.get("query", "")\n-            groups_filter = self.query.get("groups-filter:list", self.query.get("groups-filter%3Alist", []))\n+            groups_filter = self.query.get(\n+                "groups-filter:list", self.query.get("groups-filter%3Alist", [])\n+            )\n             limit = self.query.get("limit", DEFAULT_SEARCH_RESULTS_LIMIT)\n             if query or groups_filter:\n                 # Someone is searching users, check if they are authorized\ndiff --git a/src/plone/restapi/tests/test_documentation.py b/src/plone/restapi/tests/test_documentation.py\nindex b298df49e..2e975dcae 100644\n--- a/src/plone/restapi/tests/test_documentation.py\n+++ b/src/plone/restapi/tests/test_documentation.py\n@@ -933,18 +933,17 @@ def test_documentation_users_filtered_get(self):\n         api.user.create(\n             email="noam.chomsky@example.com", username="noam", properties=properties\n         )\n-        api.group.add_user(groupname=\'Reviewers\', username=\'noam\')\n+        api.group.add_user(groupname="Reviewers", username="noam")\n         transaction.commit()\n         # filter by username\n         response = self.api_session.get("@users", params={"query": "noa"})\n-        save_request_and_response_for_docs(\n-            "users_filtered_by_username", response\n-        )  # noqa\n+        save_request_and_response_for_docs("users_filtered_by_username", response)\n         # filter by groups\n-        response = self.api_session.get("@users", params={"groups-filter:list": ["Reviewers", "Site Administrators"]})\n-        save_request_and_response_for_docs(\n-            "users_filtered_by_groups", response\n-        )  # noqa   \n+        response = self.api_session.get(\n+            "@users",\n+            params={"groups-filter:list": ["Reviewers", "Site Administrators"]},\n+        )\n+        save_request_and_response_for_docs("users_filtered_by_groups", response)\n \n     def test_documentation_users_created(self):\n         response = self.api_session.post(\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-06-08T08:53:41+02:00
Author: ksuess (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.restapi/commit/17f52f30b76c2b6a4be588eaef85ddb53b68d68d

tests for @groups: add member

Files changed:
M src/plone/restapi/tests/http-examples/groups.resp
M src/plone/restapi/tests/http-examples/groups_get.resp
M src/plone/restapi/tests/test_documentation.py

b'diff --git a/src/plone/restapi/tests/http-examples/groups.resp b/src/plone/restapi/tests/http-examples/groups.resp\nindex ff08f9011..a69eaef55 100644\n--- a/src/plone/restapi/tests/http-examples/groups.resp\n+++ b/src/plone/restapi/tests/http-examples/groups.resp\n@@ -61,8 +61,10 @@ Content-Type: application/json\n         "id": "ploneteam",\n         "members": {\n             "@id": "http://localhost:55001/plone/@groups",\n-            "items": [],\n-            "items_total": 0\n+            "items": [\n+                "noam"\n+            ],\n+            "items_total": 1\n         },\n         "roles": [\n             "Authenticated"\ndiff --git a/src/plone/restapi/tests/http-examples/groups_get.resp b/src/plone/restapi/tests/http-examples/groups_get.resp\nindex 1c4769ed3..d4b132c67 100644\n--- a/src/plone/restapi/tests/http-examples/groups_get.resp\n+++ b/src/plone/restapi/tests/http-examples/groups_get.resp\n@@ -9,8 +9,10 @@ Content-Type: application/json\n     "id": "ploneteam",\n     "members": {\n         "@id": "http://localhost:55001/plone/@groups/ploneteam",\n-        "items": [],\n-        "items_total": 0\n+        "items": [\n+            "noam"\n+        ],\n+        "items_total": 1\n     },\n     "roles": [\n         "Authenticated"\ndiff --git a/src/plone/restapi/tests/test_documentation.py b/src/plone/restapi/tests/test_documentation.py\nindex 2e975dcae..849594388 100644\n--- a/src/plone/restapi/tests/test_documentation.py\n+++ b/src/plone/restapi/tests/test_documentation.py\n@@ -1066,6 +1066,16 @@ def test_documentation_groups(self):\n             title=properties["title"],\n             description=properties["description"],\n         )\n+        properties = {\n+            "fullname": "Noam Avram Chomsky",\n+            "home_page": "web.mit.edu/chomsky",\n+            "description": "Professor of Linguistics",\n+            "location": "Cambridge, MA",\n+        }\n+        api.user.create(\n+            email="noam.chomsky@example.com", username="noam", properties=properties\n+        )\n+        api.group.add_user(groupname="ploneteam", username="noam")\n         transaction.commit()\n         response = self.api_session.get("/@groups")\n         save_request_and_response_for_docs("groups", response)\n@@ -1085,6 +1095,16 @@ def test_documentation_groups_get(self):\n             title=properties["title"],\n             description=properties["description"],\n         )\n+        properties = {\n+            "fullname": "Noam Avram Chomsky",\n+            "home_page": "web.mit.edu/chomsky",\n+            "description": "Professor of Linguistics",\n+            "location": "Cambridge, MA",\n+        }\n+        api.user.create(\n+            email="noam.chomsky@example.com", username="noam", properties=properties\n+        )\n+        api.group.add_user(groupname="ploneteam", username="noam")\n         transaction.commit()\n         response = self.api_session.get("@groups/ploneteam")\n         save_request_and_response_for_docs("groups_get", response)\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-06-08T08:53:57+02:00
Author: ksuess (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.restapi/commit/2e3fe12aa093805776ed69668d9ee11f96cf41db

Update 1419.feature

Files changed:
M news/1419.feature

b'diff --git a/news/1419.feature b/news/1419.feature\nindex 7a668fa4e..960d2d308 100644\n--- a/news/1419.feature\n+++ b/news/1419.feature\n@@ -1,2 +1,2 @@\n-List Users (@users): Allow filtering by groups\n-[ksuess]\n\\ No newline at end of file\n+List Users (@users): Add groups [ksuess]\n+List Users (@users): Support filtering by groups [ksuess]\n\\ No newline at end of file\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-06-08T09:32:00+02:00
Author: Katja Süss (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.restapi/commit/b7d1477834662319d675604b08070eba5a0e44c2

Merge pull request #1325 from plone/users-in-groups

List groups: Include members.
List users: include groups.
List users: Support filtering by groups.

Files changed:
A news/1325.feature
A news/1419.feature
A src/plone/restapi/tests/http-examples/users_filtered_by_groups.req
A src/plone/restapi/tests/http-examples/users_filtered_by_groups.resp
M docs/source/conf.py
M docs/source/users.md
M performance/convert.py
M performance/querystring-search.py
M src/plone/restapi/serializer/group.py
M src/plone/restapi/serializer/user.py
M src/plone/restapi/services/groups/get.py
M src/plone/restapi/services/users/get.py
M src/plone/restapi/tests/http-examples/groups.resp
M src/plone/restapi/tests/http-examples/groups_created.resp
M src/plone/restapi/tests/http-examples/groups_get.resp
M src/plone/restapi/tests/http-examples/users.resp
M src/plone/restapi/tests/http-examples/users_add.resp
M src/plone/restapi/tests/http-examples/users_created.resp
M src/plone/restapi/tests/http-examples/users_filtered_by_username.resp
M src/plone/restapi/tests/test_documentation.py
M src/plone/restapi/tests/test_serializer_group.py
M src/plone/restapi/tests/test_services_groups.py
M src/plone/restapi/tests/test_services_users.py

b'diff --git a/docs/source/conf.py b/docs/source/conf.py\nindex bd1c1dfd4..c7261d9fe 100644\n--- a/docs/source/conf.py\n+++ b/docs/source/conf.py\n@@ -166,8 +166,7 @@ def patch_pygments_to_highlight_jsonschema():\n html_logo = "_static/logo.svg"\n html_favicon = "_static/favicon.ico"\n \n-html_css_files = ["custom.css",\n-                  ("print.css", {"media": "print"})]\n+html_css_files = ["custom.css", ("print.css", {"media": "print"})]\n \n # See http://sphinx-doc.org/ext/todo.html#confval-todo_include_todos\n todo_include_todos = True\n@@ -287,10 +286,10 @@ def patch_pygments_to_highlight_jsonschema():\n # https://myst-parser.readthedocs.io/en/latest/syntax/optional.html\n myst_enable_extensions = [\n     "deflist",  # You will be able to utilise definition lists\n-                # https://myst-parser.readthedocs.io/en/latest/syntax/optional.html#definition-lists\n+    # https://myst-parser.readthedocs.io/en/latest/syntax/optional.html#definition-lists\n     "linkify",  # Identify \xe2\x80\x9cbare\xe2\x80\x9d web URLs and add hyperlinks.\n     "colon_fence",  # You can also use ::: delimiters to denote code fences,\\\n-                    #  instead of ```.\n+    #  instead of ```.\n     "substitution",  # https://myst-parser.readthedocs.io/en/latest/syntax/optional.html#substitutions-with-jinja2\n ]\n \n@@ -307,11 +306,11 @@ def patch_pygments_to_highlight_jsonschema():\n \n latex_elements = {\n     # The paper size ("letterpaper" or "a4paper").\n-    #"papersize": "letterpaper",\n+    # "papersize": "letterpaper",\n     # The font size ("10pt", "11pt" or "12pt").\n-    #"pointsize": "10pt",\n+    # "pointsize": "10pt",\n     # Additional stuff for the LaTeX preamble.\n-    #"preamble": "",\n+    # "preamble": "",\n }\n \n # Grouping the document tree into LaTeX files. List of tuples\ndiff --git a/docs/source/users.md b/docs/source/users.md\nindex c6319662f..ace4ba2b8 100644\n--- a/docs/source/users.md\n+++ b/docs/source/users.md\n@@ -55,19 +55,36 @@ The server will return a {term}`401 Unauthorized` status code.\n :language: http\n ```\n \n-The endpoint supports some basic filtering:\n+### Filtering the list of users\n+\n+The endpoint supports some basic filtering.\n+\n+Filtering by `id`:\n \n ```{eval-rst}\n ..  http:example:: curl httpie python-requests\n     :request: ../../src/plone/restapi/tests/http-examples/users_filtered_by_username.req\n ```\n \n-The server will respond with a list of the filtered users in the portal where the username starts with the `query` parameter\'s value:\n+The server will respond with a list of the filtered users in the portal where the `username` starts with the `query` parameter\'s value:\n \n ```{literalinclude} ../../src/plone/restapi/tests/http-examples/users_filtered_by_username.resp\n :language: http\n ```\n \n+Filtering by `groups`:\n+\n+```{eval-rst}\n+..  http:example:: curl httpie python-requests\n+    :request: ../../src/plone/restapi/tests/http-examples/users_filtered_by_groups.req\n+```\n+\n+The server will respond with a list of users where the users are member of one of the groups of the `groups-filter` parameter value.\n+\n+```{literalinclude} ../../src/plone/restapi/tests/http-examples/users_filtered_by_groups.resp\n+:language: http\n+```\n+\n The endpoint also takes a `limit` parameter.\n Its default is a maximum of 25 users at a time for performance reasons.\n \ndiff --git a/news/1325.feature b/news/1325.feature\nnew file mode 100644\nindex 000000000..446b01b34\n--- /dev/null\n+++ b/news/1325.feature\n@@ -0,0 +1,2 @@\n+Include users data in groups while retrieving @groups\n+[@nileshgulia1]\n\\ No newline at end of file\ndiff --git a/news/1419.feature b/news/1419.feature\nnew file mode 100644\nindex 000000000..960d2d308\n--- /dev/null\n+++ b/news/1419.feature\n@@ -0,0 +1,2 @@\n+List Users (@users): Add groups [ksuess]\n+List Users (@users): Support filtering by groups [ksuess]\n\\ No newline at end of file\ndiff --git a/performance/convert.py b/performance/convert.py\nindex 651a6cdd7..7e17bf0e9 100644\n--- a/performance/convert.py\n+++ b/performance/convert.py\n@@ -9,22 +9,22 @@\n \n \n def main(argv):\n-    prefix = \'\'\n+    prefix = ""\n \n     try:\n-        opts, _ = getopt.getopt(sys.argv[1:], \'hp:\', [\'prefix=\'])\n+        opts, _ = getopt.getopt(sys.argv[1:], "hp:", ["prefix="])\n     except getopt.GetoptError:\n-        print(\'main.py -p <prefix>\')\n+        print("main.py -p <prefix>")\n         sys.exit(2)\n     for opt, arg in opts:\n-        if opt == \'-h\':\n-            print(\'main.py -p <prefix>\')\n+        if opt == "-h":\n+            print("main.py -p <prefix>")\n             sys.exit()\n         elif opt in ("-p", "--prefix"):\n             prefix = arg\n \n-    if prefix == \'\':\n-        raise Exception(\'Prefix was not assigned\')\n+    if prefix == "":\n+        raise Exception("Prefix was not assigned")\n \n     testsuites, testsuite = create_testsuites()\n     append_testcases(prefix, testsuite)\n@@ -34,16 +34,13 @@ def main(argv):\n \n \n def create_testsuites():\n-    testsuites = ET.Element(\'testsuites\')\n+    testsuites = ET.Element("testsuites")\n \n-    testsuite = ET.SubElement(testsuites, \'testsuite\')\n-    testsuite.set(\'name\', \'Locust Tests\')\n+    testsuite = ET.SubElement(testsuites, "testsuite")\n+    testsuite.set("name", "Locust Tests")\n \n-    timestamp = str(datetime.datetime.now()).replace(\n-        \' \',\n-        \'T\'\n-    )\n-    testsuite.set(\'timestamp\', timestamp)\n+    timestamp = str(datetime.datetime.now()).replace(" ", "T")\n+    testsuite.set("timestamp", timestamp)\n \n     return (testsuites, testsuite)\n \n@@ -52,32 +49,32 @@ def append_testcases(prefix, testsuite):\n     test_count = 0\n     failure_count = 0\n \n-    with open(prefix + \'_requests.csv\', mode=\'r\') as csv_file:\n+    with open(prefix + "_requests.csv", mode="r") as csv_file:\n         csv_reader = csv.DictReader(csv_file)\n \n         line_count = 0\n         for row in csv_reader:\n \n             if line_count > 0:\n-                row_method = row[\'Method\']\n-                row_name = row[\'Name\']\n+                row_method = row["Method"]\n+                row_name = row["Name"]\n \n-                if row_method != \'None\' and row_name != \'Total\':\n-                    testcase = ET.SubElement(testsuite, \'testcase\')\n+                if row_method != "None" and row_name != "Total":\n+                    testcase = ET.SubElement(testsuite, "testcase")\n \n-                    name = f\'{row_method}\\t{row_name} Average response time\'\n-                    testcase.set(\'name\', name)\n+                    name = f"{row_method}\\t{row_name} Average response time"\n+                    testcase.set("name", name)\n \n-                    test_count += int(row[\'# requests\'])\n-                    failure_count += int(row[\'# failures\'])\n-                    avg_response_s = float(row[\'Average response time\']) / 1000\n-                    testcase.set(\'time\', str(avg_response_s))\n+                    test_count += int(row["# requests"])\n+                    failure_count += int(row["# failures"])\n+                    avg_response_s = float(row["Average response time"]) / 1000\n+                    testcase.set("time", str(avg_response_s))\n \n             line_count += 1\n \n-        testsuite.set(\'tests\', str(test_count))\n-        testsuite.set(\'failures\', str(failure_count))\n+        testsuite.set("tests", str(test_count))\n+        testsuite.set("failures", str(failure_count))\n \n \n-if __name__ == \'__main__\':\n-    main(sys.argv[1:])\n\\ No newline at end of file\n+if __name__ == "__main__":\n+    main(sys.argv[1:])\ndiff --git a/performance/querystring-search.py b/performance/querystring-search.py\nindex acadac7b7..00c7e3b32 100644\n--- a/performance/querystring-search.py\n+++ b/performance/querystring-search.py\n@@ -1,7 +1,7 @@\n from locust import HttpUser, task\n \n-class QuerystringSearchAnonymousUser(HttpUser):\n \n+class QuerystringSearchAnonymousUser(HttpUser):\n     @task\n     def querystring_search_root(self):\n         headers = {\n@@ -17,14 +17,13 @@ def querystring_search_root(self):\n                     {\n                         "i": "portal_type",\n                         "o": "plone.app.querystring.operation.selection.any",\n-                        "v": ["Document"]\n+                        "v": ["Document"],\n                     }\n                 ]\n             },\n             name="Querystring Search (Root)",\n         )\n \n-\n     @task\n     def querystring_search_root_fullobjects_true(self):\n         headers = {\n@@ -40,15 +39,14 @@ def querystring_search_root_fullobjects_true(self):\n                     {\n                         "i": "portal_type",\n                         "o": "plone.app.querystring.operation.selection.any",\n-                        "v": ["Document"]\n+                        "v": ["Document"],\n                     }\n                 ],\n-                "fullobjects": 1\n+                "fullobjects": 1,\n             },\n             name="Querystring Search (Root, Fullobjects=1)",\n         )\n \n-\n     @task\n     def querystring_search_content(self):\n         headers = {\n@@ -64,14 +62,13 @@ def querystring_search_content(self):\n                     {\n                         "i": "portal_type",\n                         "o": "plone.app.querystring.operation.selection.any",\n-                        "v": ["Document"]\n+                        "v": ["Document"],\n                     }\n                 ]\n             },\n             name="Querystring Search (Content)",\n         )\n \n-\n     @task\n     def querystring_search_content_fullobjects_true(self):\n         headers = {\n@@ -87,10 +84,10 @@ def querystring_search_content_fullobjects_true(self):\n                     {\n                         "i": "portal_type",\n                         "o": "plone.app.querystring.operation.selection.any",\n-                        "v": ["Document"]\n+                        "v": ["Document"],\n                     }\n                 ],\n-                "fullobjects": 1\n+                "fullobjects": 1,\n             },\n             name="Querystring Search (Content, Fullobjects=1)",\n         )\ndiff --git a/src/plone/restapi/serializer/group.py b/src/plone/restapi/serializer/group.py\nindex c9656f155..d9c227946 100644\n--- a/src/plone/restapi/serializer/group.py\n+++ b/src/plone/restapi/serializer/group.py\n@@ -42,13 +42,13 @@ def __call__(self):\n         group = self.context\n         members = group.getGroupMemberIds()\n         batch = HypermediaBatch(self.request, members)\n-        users_data = {\n+        members_data = {\n             "@id": batch.canonical_url,\n             "items_total": batch.items_total,\n             "items": sorted(batch),\n         }\n         if batch.links:\n-            users_data["batching"] = batch.links\n+            members_data["batching"] = batch.links\n \n-        data["users"] = users_data\n+        data["members"] = members_data\n         return data\ndiff --git a/src/plone/restapi/serializer/user.py b/src/plone/restapi/serializer/user.py\nindex 1dbae7cc6..a179601cf 100644\n--- a/src/plone/restapi/serializer/user.py\n+++ b/src/plone/restapi/serializer/user.py\n@@ -1,5 +1,6 @@\n from plone.restapi.interfaces import ISerializeToJson\n from plone.restapi.interfaces import ISerializeToJsonSummary\n+from plone.restapi.batching import HypermediaBatch\n from Products.CMFCore.interfaces._tools import IMemberData\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.utils import safe_unicode\n@@ -57,13 +58,32 @@ def __call__(self):\n         return data\n \n \n-@implementer(ISerializeToJson)\n+@implementer(ISerializeToJsonSummary)\n @adapter(IMemberData, IRequest)\n-class SerializeUserToJson(BaseSerializer):\n-    pass\n+class SerializeUserToJsonSummary(BaseSerializer):\n+    def __call__(self):\n+        data = super().__call__()\n+        return data\n \n \n-@implementer(ISerializeToJsonSummary)\n+@implementer(ISerializeToJson)\n @adapter(IMemberData, IRequest)\n-class SerializeUserToJsonSummary(BaseSerializer):\n-    pass\n+class SerializeUserToJson(BaseSerializer):\n+    def __call__(self):\n+        data = super().__call__()\n+        user = self.context\n+        gtool = getToolByName(self.context, "portal_groups")\n+        groupIds = user.getGroups()\n+        groups = [gtool.getGroupById(grp) for grp in groupIds]\n+        groups = [{"id": grp.id, "title": grp.title or grp.id} for grp in groups]\n+        batch = HypermediaBatch(self.request, groups)\n+        groups_data = {\n+            "@id": batch.canonical_url,\n+            "items_total": batch.items_total,\n+            "items": sorted(batch, key=lambda x: x["title"]),\n+        }\n+        if batch.links:\n+            groups_data["batching"] = batch.links\n+\n+        data["groups"] = groups_data\n+        return data\ndiff --git a/src/plone/restapi/services/groups/get.py b/src/plone/restapi/services/groups/get.py\nindex e15ce54dd..0906f5603 100644\n--- a/src/plone/restapi/services/groups/get.py\n+++ b/src/plone/restapi/services/groups/get.py\n@@ -65,9 +65,7 @@ def reply(self):\n         if len(self.params) == 0:\n             result = []\n             for group in self._get_groups():\n-                serializer = queryMultiAdapter(\n-                    (group, self.request), ISerializeToJsonSummary\n-                )\n+                serializer = queryMultiAdapter((group, self.request), ISerializeToJson)\n                 result.append(serializer())\n             return result\n         # we retrieve the user on the user id not the username\ndiff --git a/src/plone/restapi/services/users/get.py b/src/plone/restapi/services/users/get.py\nindex 72d690731..eebacbc8f 100644\n--- a/src/plone/restapi/services/users/get.py\n+++ b/src/plone/restapi/services/users/get.py\n@@ -1,8 +1,9 @@\n from AccessControl import getSecurityManager\n-from plone.restapi.interfaces import ISerializeToJson\n+from plone.restapi.interfaces import ISerializeToJson, ISerializeToJsonSummary\n from plone.restapi.services import Service\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.utils import normalizeString\n+from urllib.parse import parse_qs\n from zExceptions import BadRequest\n from zope.component import queryMultiAdapter\n from zope.component.hooks import getSite\n@@ -21,7 +22,7 @@ def __init__(self, context, request):\n         portal = getSite()\n         self.portal_membership = getToolByName(portal, "portal_membership")\n         self.acl_users = getToolByName(portal, "acl_users")\n-        self.query = self.request.form.copy()\n+        self.query = parse_qs(self.request["QUERY_STRING"])\n \n     def publishTraverse(self, request, name):\n         # Consume any path segments after /@users as parameters\n@@ -50,11 +51,16 @@ def _get_users(self):\n         users = [self.portal_membership.getMemberById(userid) for userid in results]\n         return self._sort_users(users)\n \n-    def _get_filtered_users(self, query, limit):\n+    def _get_filtered_users(self, query, groups_filter, limit):\n         results = self.acl_users.searchUsers(id=query, max_results=limit)\n         users = [\n             self.portal_membership.getMemberById(user["userid"]) for user in results\n         ]\n+        if groups_filter:\n+            users = [\n+                user for user in users if set(user.getGroups()) & set(groups_filter)\n+            ]\n+\n         return self._sort_users(users)\n \n     def has_permission_to_query(self):\n@@ -74,11 +80,14 @@ def has_permission_to_access_user_info(self):\n     def reply(self):\n         if len(self.query) > 0 and len(self.params) == 0:\n             query = self.query.get("query", "")\n+            groups_filter = self.query.get(\n+                "groups-filter:list", self.query.get("groups-filter%3Alist", [])\n+            )\n             limit = self.query.get("limit", DEFAULT_SEARCH_RESULTS_LIMIT)\n-            if query:\n+            if query or groups_filter:\n                 # Someone is searching users, check if they are authorized\n                 if self.has_permission_to_query():\n-                    users = self._get_filtered_users(query, limit)\n+                    users = self._get_filtered_users(query, groups_filter, limit)\n                     result = []\n                     for user in users:\n                         serializer = queryMultiAdapter(\n@@ -119,7 +128,9 @@ def reply(self):\n             if not user:\n                 self.request.response.setStatus(404)\n                 return\n-            serializer = queryMultiAdapter((user, self.request), ISerializeToJson)\n+            serializer = queryMultiAdapter(\n+                (user, self.request), ISerializeToJsonSummary\n+            )\n             return serializer()\n         else:\n             self.request.response.setStatus(401)\ndiff --git a/src/plone/restapi/tests/http-examples/groups.resp b/src/plone/restapi/tests/http-examples/groups.resp\nindex 07bd22185..a69eaef55 100644\n--- a/src/plone/restapi/tests/http-examples/groups.resp\n+++ b/src/plone/restapi/tests/http-examples/groups.resp\n@@ -8,6 +8,11 @@ Content-Type: application/json\n         "email": "",\n         "groupname": "Administrators",\n         "id": "Administrators",\n+        "members": {\n+            "@id": "http://localhost:55001/plone/@groups",\n+            "items": [],\n+            "items_total": 0\n+        },\n         "roles": [\n             "Manager",\n             "Authenticated"\n@@ -20,6 +25,11 @@ Content-Type: application/json\n         "email": "",\n         "groupname": "Reviewers",\n         "id": "Reviewers",\n+        "members": {\n+            "@id": "http://localhost:55001/plone/@groups",\n+            "items": [],\n+            "items_total": 0\n+        },\n         "roles": [\n             "Reviewer",\n             "Authenticated"\n@@ -32,6 +42,11 @@ Content-Type: application/json\n         "email": "",\n         "groupname": "Site Administrators",\n         "id": "Site Administrators",\n+        "members": {\n+            "@id": "http://localhost:55001/plone/@groups",\n+            "items": [],\n+            "items_total": 0\n+        },\n         "roles": [\n             "Site Administrator",\n             "Authenticated"\n@@ -44,6 +59,13 @@ Content-Type: application/json\n         "email": "ploneteam@plone.org",\n         "groupname": "ploneteam",\n         "id": "ploneteam",\n+        "members": {\n+            "@id": "http://localhost:55001/plone/@groups",\n+            "items": [\n+                "noam"\n+            ],\n+            "items_total": 1\n+        },\n         "roles": [\n             "Authenticated"\n         ],\n@@ -55,6 +77,11 @@ Content-Type: application/json\n         "email": "",\n         "groupname": "AuthenticatedUsers",\n         "id": "AuthenticatedUsers",\n+        "members": {\n+            "@id": "http://localhost:55001/plone/@groups",\n+            "items": [],\n+            "items_total": 0\n+        },\n         "roles": [],\n         "title": "Authenticated Users (Virtual Group)"\n     }\ndiff --git a/src/plone/restapi/tests/http-examples/groups_created.resp b/src/plone/restapi/tests/http-examples/groups_created.resp\nindex 66fb026f3..99793212f 100644\n--- a/src/plone/restapi/tests/http-examples/groups_created.resp\n+++ b/src/plone/restapi/tests/http-examples/groups_created.resp\n@@ -8,12 +8,7 @@ Location: http://localhost:55001/plone/@groups/fwt\n     "email": "fwt@plone.org",\n     "groupname": "fwt",\n     "id": "fwt",\n-    "roles": [\n-        "Manager",\n-        "Authenticated"\n-    ],\n-    "title": "Framework Team",\n-    "users": {\n+    "members": {\n         "@id": "http://localhost:55001/plone/@groups",\n         "items": [\n             "Administrators",\n@@ -21,5 +16,10 @@ Location: http://localhost:55001/plone/@groups/fwt\n             "test_user_1_"\n         ],\n         "items_total": 3\n-    }\n+    },\n+    "roles": [\n+        "Manager",\n+        "Authenticated"\n+    ],\n+    "title": "Framework Team"\n }\ndiff --git a/src/plone/restapi/tests/http-examples/groups_get.resp b/src/plone/restapi/tests/http-examples/groups_get.resp\nindex e54bb1555..d4b132c67 100644\n--- a/src/plone/restapi/tests/http-examples/groups_get.resp\n+++ b/src/plone/restapi/tests/http-examples/groups_get.resp\n@@ -7,13 +7,15 @@ Content-Type: application/json\n     "email": "ploneteam@plone.org",\n     "groupname": "ploneteam",\n     "id": "ploneteam",\n+    "members": {\n+        "@id": "http://localhost:55001/plone/@groups/ploneteam",\n+        "items": [\n+            "noam"\n+        ],\n+        "items_total": 1\n+    },\n     "roles": [\n         "Authenticated"\n     ],\n-    "title": "Plone Team",\n-    "users": {\n-        "@id": "http://localhost:55001/plone/@groups/ploneteam",\n-        "items": [],\n-        "items_total": 0\n-    }\n+    "title": "Plone Team"\n }\ndiff --git a/src/plone/restapi/tests/http-examples/users.resp b/src/plone/restapi/tests/http-examples/users.resp\nindex d78aa5009..a8e179eaf 100644\n--- a/src/plone/restapi/tests/http-examples/users.resp\n+++ b/src/plone/restapi/tests/http-examples/users.resp\n@@ -7,6 +7,16 @@ Content-Type: application/json\n         "description": "This is an admin user",\n         "email": "admin@example.com",\n         "fullname": "Administrator",\n+        "groups": {\n+            "@id": "http://localhost:55001/plone/@users",\n+            "items": [\n+                {\n+                    "id": "AuthenticatedUsers",\n+                    "title": "AuthenticatedUsers"\n+                }\n+            ],\n+            "items_total": 1\n+        },\n         "home_page": "http://www.example.com",\n         "id": "admin",\n         "location": "Berlin",\n@@ -21,6 +31,16 @@ Content-Type: application/json\n         "description": "This is a test user",\n         "email": "test@example.com",\n         "fullname": "Test User",\n+        "groups": {\n+            "@id": "http://localhost:55001/plone/@users",\n+            "items": [\n+                {\n+                    "id": "AuthenticatedUsers",\n+                    "title": "AuthenticatedUsers"\n+                }\n+            ],\n+            "items_total": 1\n+        },\n         "home_page": "http://www.example.com",\n         "id": "test_user_1_",\n         "location": "Bonn",\ndiff --git a/src/plone/restapi/tests/http-examples/users_add.resp b/src/plone/restapi/tests/http-examples/users_add.resp\nindex 493f79d0a..0c13e44b9 100644\n--- a/src/plone/restapi/tests/http-examples/users_add.resp\n+++ b/src/plone/restapi/tests/http-examples/users_add.resp\n@@ -7,6 +7,16 @@ Location: http://localhost:55001/plone/@users/noamchomsky\n     "description": "Professor of Linguistics",\n     "email": "noam.chomsky@example.com",\n     "fullname": "Noam Avram Chomsky",\n+    "groups": {\n+        "@id": "http://localhost:55001/plone/@users",\n+        "items": [\n+            {\n+                "id": "AuthenticatedUsers",\n+                "title": "AuthenticatedUsers"\n+            }\n+        ],\n+        "items_total": 1\n+    },\n     "home_page": "web.mit.edu/chomsky",\n     "id": "noamchomsky",\n     "location": "Cambridge, MA",\ndiff --git a/src/plone/restapi/tests/http-examples/users_created.resp b/src/plone/restapi/tests/http-examples/users_created.resp\nindex c5e39792c..578dbc68f 100644\n--- a/src/plone/restapi/tests/http-examples/users_created.resp\n+++ b/src/plone/restapi/tests/http-examples/users_created.resp\n@@ -7,6 +7,16 @@ Location: http://localhost:55001/plone/@users/noamchomsky\n     "description": "Professor of Linguistics",\n     "email": "noam.chomsky@example.com",\n     "fullname": "Noam Avram Chomsky",\n+    "groups": {\n+        "@id": "http://localhost:55001/plone/@users",\n+        "items": [\n+            {\n+                "id": "AuthenticatedUsers",\n+                "title": "AuthenticatedUsers"\n+            }\n+        ],\n+        "items_total": 1\n+    },\n     "home_page": "web.mit.edu/chomsky",\n     "id": "noamchomsky",\n     "location": "Cambridge, MA",\ndiff --git a/src/plone/restapi/tests/http-examples/users_filtered_by_groups.req b/src/plone/restapi/tests/http-examples/users_filtered_by_groups.req\nnew file mode 100644\nindex 000000000..fd9a15341\n--- /dev/null\n+++ b/src/plone/restapi/tests/http-examples/users_filtered_by_groups.req\n@@ -0,0 +1,3 @@\n+GET /plone/@users?groups-filter%3Alist=Reviewers&groups-filter%3Alist=Site+Administrators HTTP/1.1\n+Accept: application/json\n+Authorization: Basic YWRtaW46c2VjcmV0\ndiff --git a/src/plone/restapi/tests/http-examples/users_filtered_by_groups.resp b/src/plone/restapi/tests/http-examples/users_filtered_by_groups.resp\nnew file mode 100644\nindex 000000000..65ef80270\n--- /dev/null\n+++ b/src/plone/restapi/tests/http-examples/users_filtered_by_groups.resp\n@@ -0,0 +1,34 @@\n+HTTP/1.1 200 OK\n+Content-Type: application/json\n+\n+[\n+    {\n+        "@id": "http://localhost:55001/plone/@users/noam",\n+        "description": "Professor of Linguistics",\n+        "email": "noam.chomsky@example.com",\n+        "fullname": "Noam Avram Chomsky",\n+        "groups": {\n+            "@id": "http://localhost:55001/plone/@users?groups-filter%3Alist=Reviewers&groups-filter%3Alist=Site+Administrators",\n+            "items": [\n+                {\n+                    "id": "AuthenticatedUsers",\n+                    "title": "AuthenticatedUsers"\n+                },\n+                {\n+                    "id": "Reviewers",\n+                    "title": "Reviewers"\n+                }\n+            ],\n+            "items_total": 2\n+        },\n+        "home_page": "web.mit.edu/chomsky",\n+        "id": "noam",\n+        "location": "Cambridge, MA",\n+        "portrait": null,\n+        "roles": [\n+            "Reviewer",\n+            "Member"\n+        ],\n+        "username": "noam"\n+    }\n+]\ndiff --git a/src/plone/restapi/tests/http-examples/users_filtered_by_username.resp b/src/plone/restapi/tests/http-examples/users_filtered_by_username.resp\nindex 50bdf1e38..282db7cf3 100644\n--- a/src/plone/restapi/tests/http-examples/users_filtered_by_username.resp\n+++ b/src/plone/restapi/tests/http-examples/users_filtered_by_username.resp\n@@ -7,11 +7,26 @@ Content-Type: application/json\n         "description": "Professor of Linguistics",\n         "email": "noam.chomsky@example.com",\n         "fullname": "Noam Avram Chomsky",\n+        "groups": {\n+            "@id": "http://localhost:55001/plone/@users?query=noa",\n+            "items": [\n+                {\n+                    "id": "AuthenticatedUsers",\n+                    "title": "AuthenticatedUsers"\n+                },\n+                {\n+                    "id": "Reviewers",\n+                    "title": "Reviewers"\n+                }\n+            ],\n+            "items_total": 2\n+        },\n         "home_page": "web.mit.edu/chomsky",\n         "id": "noam",\n         "location": "Cambridge, MA",\n         "portrait": null,\n         "roles": [\n+            "Reviewer",\n             "Member"\n         ],\n         "username": "noam"\ndiff --git a/src/plone/restapi/tests/test_documentation.py b/src/plone/restapi/tests/test_documentation.py\nindex 525c8da28..849594388 100644\n--- a/src/plone/restapi/tests/test_documentation.py\n+++ b/src/plone/restapi/tests/test_documentation.py\n@@ -925,8 +925,6 @@ def test_documentation_users_authorized_get(self):\n \n     def test_documentation_users_filtered_get(self):\n         properties = {\n-            "email": "noam.chomsky@example.com",\n-            "username": "noamchomsky",\n             "fullname": "Noam Avram Chomsky",\n             "home_page": "web.mit.edu/chomsky",\n             "description": "Professor of Linguistics",\n@@ -935,11 +933,17 @@ def test_documentation_users_filtered_get(self):\n         api.user.create(\n             email="noam.chomsky@example.com", username="noam", properties=properties\n         )\n+        api.group.add_user(groupname="Reviewers", username="noam")\n         transaction.commit()\n+        # filter by username\n         response = self.api_session.get("@users", params={"query": "noa"})\n-        save_request_and_response_for_docs(\n-            "users_filtered_by_username", response\n-        )  # noqa\n+        save_request_and_response_for_docs("users_filtered_by_username", response)\n+        # filter by groups\n+        response = self.api_session.get(\n+            "@users",\n+            params={"groups-filter:list": ["Reviewers", "Site Administrators"]},\n+        )\n+        save_request_and_response_for_docs("users_filtered_by_groups", response)\n \n     def test_documentation_users_created(self):\n         response = self.api_session.post(\n@@ -1062,6 +1066,16 @@ def test_documentation_groups(self):\n             title=properties["title"],\n             description=properties["description"],\n         )\n+        properties = {\n+            "fullname": "Noam Avram Chomsky",\n+            "home_page": "web.mit.edu/chomsky",\n+            "description": "Professor of Linguistics",\n+            "location": "Cambridge, MA",\n+        }\n+        api.user.create(\n+            email="noam.chomsky@example.com", username="noam", properties=properties\n+        )\n+        api.group.add_user(groupname="ploneteam", username="noam")\n         transaction.commit()\n         response = self.api_session.get("/@groups")\n         save_request_and_response_for_docs("groups", response)\n@@ -1081,6 +1095,16 @@ def test_documentation_groups_get(self):\n             title=properties["title"],\n             description=properties["description"],\n         )\n+        properties = {\n+            "fullname": "Noam Avram Chomsky",\n+            "home_page": "web.mit.edu/chomsky",\n+            "description": "Professor of Linguistics",\n+            "location": "Cambridge, MA",\n+        }\n+        api.user.create(\n+            email="noam.chomsky@example.com", username="noam", properties=properties\n+        )\n+        api.group.add_user(groupname="ploneteam", username="noam")\n         transaction.commit()\n         response = self.api_session.get("@groups/ploneteam")\n         save_request_and_response_for_docs("groups_get", response)\ndiff --git a/src/plone/restapi/tests/test_serializer_group.py b/src/plone/restapi/tests/test_serializer_group.py\nindex c0ac04e98..4be5e90ef 100644\n--- a/src/plone/restapi/tests/test_serializer_group.py\n+++ b/src/plone/restapi/tests/test_serializer_group.py\n@@ -48,7 +48,7 @@ def test_serialize_returns_id(self):\n         self.assertEqual("ploneteam@plone.org", group.get("email"))\n         self.assertEqual("Plone Team", group.get("title"))\n         self.assertEqual("We are Plone", group.get("description"))\n-        self.assertEqual(set(group["users"]), {"@id", "items_total", "items"})\n+        self.assertEqual(set(group["members"]), {"@id", "items_total", "items"})\n \n     def test_summary(self):\n         group = self.serialize_summary(self.group)\ndiff --git a/src/plone/restapi/tests/test_services_groups.py b/src/plone/restapi/tests/test_services_groups.py\nindex 21e278b9a..848df9351 100644\n--- a/src/plone/restapi/tests/test_services_groups.py\n+++ b/src/plone/restapi/tests/test_services_groups.py\n@@ -65,11 +65,10 @@ def test_list_groups(self):\n \n         self.assertEqual(ptgroup.get("roles"), ["Authenticated"])\n \n-        # We don\'t want the group members listed in the overview as there\n-        # might be loads.\n+        # # Assert batched list of group members\n         self.assertTrue(\n-            not any(["users" in group for group in response.json()]),\n-            "Users key found in groups listing",\n+            all(["members" in group for group in response.json()]),\n+            "Members key found in groups listing",\n         )\n \n     def test_add_group(self):\n@@ -115,7 +114,7 @@ def test_get_group(self):\n         self.assertEqual("ploneteam@plone.org", response.json().get("email"))\n         self.assertEqual("Plone Team", response.json().get("title"))\n         self.assertEqual("We are Plone", response.json().get("description"))\n-        self.assertIn("users", response.json())\n+        self.assertIn("members", response.json())\n \n     def test_get_search_group_with_filter(self):\n         response = self.api_session.get("/@groups", params={"query": "plo"})\ndiff --git a/src/plone/restapi/tests/test_services_users.py b/src/plone/restapi/tests/test_services_users.py\nindex 48461d678..079e84629 100644\n--- a/src/plone/restapi/tests/test_services_users.py\n+++ b/src/plone/restapi/tests/test_services_users.py\n@@ -59,6 +59,7 @@ def setUp(self):\n             properties=properties,\n             password="otherpassword",\n         )\n+        api.group.add_user(groupname="Reviewers", username="otheruser")\n         transaction.commit()\n \n     def tearDown(self):\n@@ -97,6 +98,20 @@ def test_list_users_as_anonymous(self):\n         response = self.anon_api_session.get("/@users")\n         self.assertEqual(response.status_code, 401)\n \n+    def test_list_users_filtered(self):\n+        response = self.api_session.get(\n+            "/@users?groups-filter:list=Reviewers&groups-filter:list=Administrators"\n+        )\n+        self.assertEqual(200, response.status_code)\n+        self.assertEqual(1, len(response.json()))\n+        user_ids = [user["id"] for user in response.json()]\n+        self.assertIn("otheruser", user_ids)\n+\n+        response = self.api_session.get("/@users?groups-filter:list=Administrators")\n+        self.assertEqual(200, response.status_code)\n+        user_ids = [user["id"] for user in response.json()]\n+        self.assertNotIn("otheruser", user_ids)\n+\n     def test_add_user(self):\n         response = self.api_session.post(\n             "/@users",\n'

