Repository: plone.restapi


Branch: refs/heads/master
Date: 2018-11-01T19:20:15+01:00
Author: Timo Stollenwerk (tisto) <tisto@plone.org>
Commit: https://github.com/plone/plone.restapi/commit/f6e9a53922b0362aeebd55d87f34de9c58ab5834

Upgrade to Plone 5.1.4.

Files changed:
M plone-5.1.x.cfg

b'diff --git a/plone-5.1.x.cfg b/plone-5.1.x.cfg\nindex 5bb3a958..e716cb72 100644\n--- a/plone-5.1.x.cfg\n+++ b/plone-5.1.x.cfg\n@@ -1,5 +1,5 @@\n [buildout]\n extends =\n     base.cfg\n-    http://dist.plone.org/release/5.1.2/versions.cfg\n+    http://dist.plone.org/release/5.1.4/versions.cfg\n     versions.cfg\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2018-11-01T19:21:37+01:00
Author: Timo Stollenwerk (tisto) <tisto@plone.org>
Commit: https://github.com/plone/plone.restapi/commit/8bd9657b046aae0b0a666d27425ce53d573cd9b0

Change misleading message when skipping AT tests.

Files changed:
M src/plone/restapi/tests/test_atcollection.py
M src/plone/restapi/tests/test_atcontent_deserializer.py
M src/plone/restapi/tests/test_atcontent_serializer.py
M src/plone/restapi/tests/test_atfield_deserializer.py
M src/plone/restapi/tests/test_atfield_serializer.py
M src/plone/restapi/tests/test_batching.py
M src/plone/restapi/tests/test_content_delete.py
M src/plone/restapi/tests/test_content_patch.py
M src/plone/restapi/tests/test_content_post.py
M src/plone/restapi/tests/test_content_utils.py
M src/plone/restapi/tests/test_registry_serializer.py
M src/plone/restapi/tests/test_search.py
M src/plone/restapi/tests/test_serializer_catalog.py
M src/plone/restapi/tests/test_serializer_summary.py
M src/plone/restapi/tests/test_tus.py

b"diff --git a/src/plone/restapi/tests/test_atcollection.py b/src/plone/restapi/tests/test_atcollection.py\nindex 9d6ca5f0..00563641 100644\n--- a/src/plone/restapi/tests/test_atcollection.py\n+++ b/src/plone/restapi/tests/test_atcollection.py\n@@ -16,7 +16,7 @@ class TestATContentSerializer(unittest.TestCase):\n \n     def setUp(self):\n         if not HAS_AT:\n-            raise unittest.SkipTest('Testing Archetypes support requires it')\n+            raise unittest.SkipTest('Skip tests if Archetypes is not present')\n         self.portal = self.layer['portal']\n         self.request = self.layer['request']\n         setRoles(self.portal, TEST_USER_ID, ['Manager'])\ndiff --git a/src/plone/restapi/tests/test_atcontent_deserializer.py b/src/plone/restapi/tests/test_atcontent_deserializer.py\nindex 8f9e79bb..6be01743 100644\n--- a/src/plone/restapi/tests/test_atcontent_deserializer.py\n+++ b/src/plone/restapi/tests/test_atcontent_deserializer.py\n@@ -30,7 +30,7 @@ class TestATContentDeserializer(unittest.TestCase, OrderingMixin):\n \n     def setUp(self):\n         if not HAS_AT:\n-            raise unittest.SkipTest('Testing Archetypes support requires it')\n+            raise unittest.SkipTest('Skip tests if Archetypes is not present')\n         self.portal = self.layer['portal']\n         self.request = self.layer['request']\n         setRoles(self.portal, TEST_USER_ID, ['Contributor'])\n@@ -167,7 +167,7 @@ class TestValidationRequest(unittest.TestCase):\n \n     def setUp(self):\n         if not HAS_AT:\n-            raise unittest.SkipTest('Testing Archetypes support requires it')\n+            raise unittest.SkipTest('Skip tests if Archetypes is not present')\n         self.portal = self.layer['portal']\n         setRoles(self.portal, TEST_USER_ID, ['Contributor'])\n         self.doc1 = self.portal[self.portal.invokeFactory(\ndiff --git a/src/plone/restapi/tests/test_atcontent_serializer.py b/src/plone/restapi/tests/test_atcontent_serializer.py\nindex 5361ed18..86f9958f 100644\n--- a/src/plone/restapi/tests/test_atcontent_serializer.py\n+++ b/src/plone/restapi/tests/test_atcontent_serializer.py\n@@ -23,7 +23,7 @@ class TestATContentSerializer(unittest.TestCase):\n \n     def setUp(self):\n         if not HAS_AT:\n-            raise unittest.SkipTest('Testing Archetypes support requires it')\n+            raise unittest.SkipTest('Skip tests if Archetypes is not present')\n         self.portal = self.layer['portal']\n         self.request = self.layer['request']\n         setRoles(self.portal, TEST_USER_ID, ['Contributor'])\ndiff --git a/src/plone/restapi/tests/test_atfield_deserializer.py b/src/plone/restapi/tests/test_atfield_deserializer.py\nindex c2009866..0d9d384f 100644\n--- a/src/plone/restapi/tests/test_atfield_deserializer.py\n+++ b/src/plone/restapi/tests/test_atfield_deserializer.py\n@@ -16,7 +16,7 @@ class TestATFieldDeserializer(unittest.TestCase):\n \n     def setUp(self):\n         if not HAS_AT:\n-            raise unittest.SkipTest('Testing Archetypes support requires it')\n+            raise unittest.SkipTest('Skip tests if Archetypes is not present')\n         self.portal = self.layer['portal']\n         self.request = self.layer['request']\n         setRoles(self.portal, TEST_USER_ID, ['Contributor'])\ndiff --git a/src/plone/restapi/tests/test_atfield_serializer.py b/src/plone/restapi/tests/test_atfield_serializer.py\nindex c74e915e..736001bb 100644\n--- a/src/plone/restapi/tests/test_atfield_serializer.py\n+++ b/src/plone/restapi/tests/test_atfield_serializer.py\n@@ -26,7 +26,7 @@ class TestATFieldSerializer(unittest.TestCase):\n \n     def setUp(self):\n         if not HAS_AT:\n-            raise unittest.SkipTest('Testing Archetypes support requires it')\n+            raise unittest.SkipTest('Skip tests if Archetypes is not present')\n         self.portal = self.layer['portal']\n         self.request = self.layer['request']\n         setRoles(self.portal, TEST_USER_ID, ['Contributor'])\ndiff --git a/src/plone/restapi/tests/test_batching.py b/src/plone/restapi/tests/test_batching.py\nindex 3796d833..f8e25bb3 100644\n--- a/src/plone/restapi/tests/test_batching.py\n+++ b/src/plone/restapi/tests/test_batching.py\n@@ -327,7 +327,7 @@ class TestAABatchingArchetypes(unittest.TestCase):\n \n     def setUp(self):\n         if not HAS_AT:\n-            raise unittest.SkipTest('Testing Archetypes support requires it')\n+            raise unittest.SkipTest('Skip tests if Archetypes is not present')\n         self.portal = self.layer['portal']\n         self.portal_url = self.portal.absolute_url()\n \n@@ -369,7 +369,7 @@ class TestBatchingArchetypes(unittest.TestCase):\n \n     def setUp(self):\n         if not HAS_AT:\n-            raise unittest.SkipTest('Testing Archetypes support requires it')\n+            raise unittest.SkipTest('Skip tests if Archetypes is not present')\n         self.app = self.layer['app']\n         self.portal = self.layer['portal']\n         self.portal_url = self.portal.absolute_url()\ndiff --git a/src/plone/restapi/tests/test_content_delete.py b/src/plone/restapi/tests/test_content_delete.py\nindex c7fd572a..e7d39a92 100644\n--- a/src/plone/restapi/tests/test_content_delete.py\n+++ b/src/plone/restapi/tests/test_content_delete.py\n@@ -67,7 +67,7 @@ class TestATContentDelete(unittest.TestCase):\n \n     def setUp(self):\n         if not HAS_AT:\n-            raise unittest.SkipTest('Testing Archetypes support requires it')\n+            raise unittest.SkipTest('Skip tests if Archetypes is not present')\n         self.portal = self.layer['portal']\n         setRoles(self.portal, TEST_USER_ID, ['Manager'])\n         self.doc1 = self.portal[self.portal.invokeFactory(\ndiff --git a/src/plone/restapi/tests/test_content_patch.py b/src/plone/restapi/tests/test_content_patch.py\nindex a1929dbe..ae29fd2d 100644\n--- a/src/plone/restapi/tests/test_content_patch.py\n+++ b/src/plone/restapi/tests/test_content_patch.py\n@@ -209,7 +209,7 @@ class TestATContentPatch(unittest.TestCase):\n \n     def setUp(self):\n         if not HAS_AT:\n-            raise unittest.SkipTest('Testing Archetypes support requires it')\n+            raise unittest.SkipTest('Skip tests if Archetypes is not present')\n         self.app = self.layer['app']\n         self.portal = self.layer['portal']\n         setRoles(self.portal, TEST_USER_ID, ['Manager'])\ndiff --git a/src/plone/restapi/tests/test_content_post.py b/src/plone/restapi/tests/test_content_post.py\nindex 02416b68..13ab90d6 100644\n--- a/src/plone/restapi/tests/test_content_post.py\n+++ b/src/plone/restapi/tests/test_content_post.py\n@@ -217,7 +217,7 @@ class TestATFolderCreate(unittest.TestCase):\n \n     def setUp(self):\n         if not HAS_AT:\n-            raise unittest.SkipTest('Testing Archetypes support requires it')\n+            raise unittest.SkipTest('Skip tests if Archetypes is not present')\n         self.app = self.layer['app']\n         self.portal = self.layer['portal']\n         setRoles(self.portal, TEST_USER_ID, ['Manager'])\ndiff --git a/src/plone/restapi/tests/test_content_utils.py b/src/plone/restapi/tests/test_content_utils.py\nindex 40b67063..773b5d1d 100644\n--- a/src/plone/restapi/tests/test_content_utils.py\n+++ b/src/plone/restapi/tests/test_content_utils.py\n@@ -65,7 +65,7 @@ class TestATCreateContent(unittest.TestCase):\n \n     def setUp(self):\n         if not HAS_AT:\n-            raise unittest.SkipTest('Testing Archetypes support requires it')\n+            raise unittest.SkipTest('Skip tests if Archetypes is not present')\n         self.portal = self.layer['portal']\n         self.request = self.layer['request']\n         setRoles(self.portal, TEST_USER_ID, ['Contributor'])\n@@ -154,7 +154,7 @@ class TestATAddContent(unittest.TestCase):\n \n     def setUp(self):\n         if not HAS_AT:\n-            raise unittest.SkipTest('Testing Archetypes support requires it')\n+            raise unittest.SkipTest('Skip tests if Archetypes is not present')\n         self.portal = self.layer['portal']\n         self.request = self.layer['request']\n         setRoles(self.portal, TEST_USER_ID, ['Contributor'])\ndiff --git a/src/plone/restapi/tests/test_registry_serializer.py b/src/plone/restapi/tests/test_registry_serializer.py\nindex b5817a20..e6774412 100644\n--- a/src/plone/restapi/tests/test_registry_serializer.py\n+++ b/src/plone/restapi/tests/test_registry_serializer.py\n@@ -17,7 +17,7 @@ class TestRegistrySerializer(unittest.TestCase):\n \n     def setUp(self):\n         if not HAS_AT:\n-            raise unittest.SkipTest('Testing Archetypes support requires it')\n+            raise unittest.SkipTest('Skip tests if Archetypes is not present')\n         self.portal = self.layer['portal']\n         self.request = self.layer['request']\n \ndiff --git a/src/plone/restapi/tests/test_search.py b/src/plone/restapi/tests/test_search.py\nindex c6ffbbfa..942f9f8a 100644\n--- a/src/plone/restapi/tests/test_search.py\n+++ b/src/plone/restapi/tests/test_search.py\n@@ -614,7 +614,7 @@ class TestSearchATFunctional(unittest.TestCase):\n \n     def setUp(self):\n         if not HAS_AT:\n-            raise unittest.SkipTest('Testing Archetypes support requires it')\n+            raise unittest.SkipTest('Skip tests if Archetypes is not present')\n         self.app = self.layer['app']\n         self.portal = self.layer['portal']\n         self.portal_url = self.portal.absolute_url()\ndiff --git a/src/plone/restapi/tests/test_serializer_catalog.py b/src/plone/restapi/tests/test_serializer_catalog.py\nindex f8fa3bcc..a873dd8a 100644\n--- a/src/plone/restapi/tests/test_serializer_catalog.py\n+++ b/src/plone/restapi/tests/test_serializer_catalog.py\n@@ -179,7 +179,7 @@ class TestCatalogATSerializers(unittest.TestCase):\n \n     def setUp(self):\n         if not HAS_AT:\n-            raise unittest.SkipTest('Testing Archetypes support requires it')\n+            raise unittest.SkipTest('Skip tests if Archetypes is not present')\n         self.app = self.layer['app']\n         self.portal = self.layer['portal']\n         self.request = self.portal.REQUEST\ndiff --git a/src/plone/restapi/tests/test_serializer_summary.py b/src/plone/restapi/tests/test_serializer_summary.py\nindex 7e09abd8..235a041f 100644\n--- a/src/plone/restapi/tests/test_serializer_summary.py\n+++ b/src/plone/restapi/tests/test_serializer_summary.py\n@@ -102,7 +102,7 @@ class TestSummarySerializersATTypes(unittest.TestCase):\n \n     def setUp(self):\n         if not HAS_AT:\n-            raise unittest.SkipTest('Testing Archetypes support requires it')\n+            raise unittest.SkipTest('Skip tests if Archetypes is not present')\n         self.portal = self.layer['portal']\n         self.request = self.layer['request']\n         setRoles(self.portal, TEST_USER_ID, ['Contributor'])\ndiff --git a/src/plone/restapi/tests/test_tus.py b/src/plone/restapi/tests/test_tus.py\nindex e65daf36..3879ca81 100644\n--- a/src/plone/restapi/tests/test_tus.py\n+++ b/src/plone/restapi/tests/test_tus.py\n@@ -591,7 +591,7 @@ class TestTUSWithAT(unittest.TestCase):\n \n     def setUp(self):\n         if not HAS_AT:\n-            raise unittest.SkipTest('Testing Archetypes support requires it')\n+            raise unittest.SkipTest('Skip tests if Archetypes is not present')\n         self.portal = self.layer['portal']\n         setRoles(self.portal, TEST_USER_ID, ['Manager'])\n         login(self.portal, TEST_USER_NAME)\n"

Repository: plone.restapi


Branch: refs/heads/master
Date: 2018-11-01T19:28:57+01:00
Author: Timo Stollenwerk (tisto) <tisto@plone.org>
Commit: https://github.com/plone/plone.restapi/commit/02cdb11e7fa353565c76646be06d813162d3d25f

Update changelog for next release.

Files changed:
M CHANGES.rst

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex dab24e33..b41ea7cc 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -4,7 +4,9 @@ Changelog\n 3.4.6 (unreleased)\n ------------------\n \n-- Add support for Python 3.\n+New Features:\n+\n+- Add Python 3 support.\n   [pbauer, davisagli]\n \n \n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2018-11-01T20:04:35+01:00
Author: Timo Stollenwerk (tisto) <tisto@plone.org>
Commit: https://github.com/plone/plone.restapi/commit/910a43d220103cc8bfaa86a14290fdc3129609d2

Merge branch 'master' of github.com:plone/plone.restapi

Files changed:
M docs/source/readthedocs-requirements.txt
M requirements.txt
M src/plone/restapi/tests/test_roles.py

b"diff --git a/docs/source/readthedocs-requirements.txt b/docs/source/readthedocs-requirements.txt\nindex b4602115..a83252f7 100644\n--- a/docs/source/readthedocs-requirements.txt\n+++ b/docs/source/readthedocs-requirements.txt\n@@ -1,2 +1,2 @@\n sphinxcontrib-httpdomain\n-sphinxcontrib-httpexample\n+sphinxcontrib-httpexample==0.9.1\n\\ No newline at end of file\ndiff --git a/requirements.txt b/requirements.txt\nindex 3fca7295..5cc1d64f 100644\n--- a/requirements.txt\n+++ b/requirements.txt\n@@ -23,7 +23,7 @@ snowballstemmer==1.2.1\n Sphinx==1.6.5\n sphinx-rtd-theme==0.2.4\n sphinxcontrib-httpdomain==1.5.0\n-sphinxcontrib-httpexample==0.7.0\n+sphinxcontrib-httpexample==0.9.1\n sphinxcontrib-websupport==1.0.1\n typing==3.6.2\n urllib3==1.22\ndiff --git a/src/plone/restapi/tests/test_roles.py b/src/plone/restapi/tests/test_roles.py\nindex 83d5becb..05291d40 100644\n--- a/src/plone/restapi/tests/test_roles.py\n+++ b/src/plone/restapi/tests/test_roles.py\n@@ -60,13 +60,19 @@ def test_roles_endpoint_lists_roles(self):\n     def test_roles_endpoint_translates_role_titles(self):\n         self.api_session.headers.update({'Accept-Language': 'de'})\n         response = self.api_session.get('/@roles')\n-\n+        # One of the roles has changed translation in German.\n+        # Reviewer used to be 'Ver\\xf6ffentlichen', but is now simply Reviewer.\n+        titles = {item['title'] for item in response.json()}\n+        options = {u'Ver\\xf6ffentlichen', u'Reviewer'}\n+        # One of the options must match:\n+        self.assertTrue(titles.intersection(options))\n+        # Discard them:\n+        titles = titles.difference(options)\n         self.assertEqual({\n             u'Hinzuf\\xfcgen',\n             u'Bearbeiten',\n             u'Benutzer',\n             u'Ansehen',\n-            u'Ver\\xf6ffentlichen',\n             u'Website-Administrator',\n             u'Verwalten'},\n-            {item['title'] for item in response.json()})\n+            titles)\n"

