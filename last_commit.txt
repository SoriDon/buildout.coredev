Repository: plone.app.imaging


Branch: refs/heads/master
Date: 2016-01-29T15:08:40+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/plone.app.imaging/commit/58cf7b045b42674ec54a8efa18cfe311c0feb45c

Fix test to not check for the concrete WebDAV content type header.  Needed for Zope 4 compatibility.

Files changed:
M CHANGES.rst
M src/plone/app/imaging/tests/test_new_scaling.py

diff --git a/CHANGES.rst b/CHANGES.rst
index cd23fdf..8f27fd4 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,9 @@ New:
 
 Fixes:
 
-- *add item here*
+- Fix test to not check for the concrete WebDAV content type header.
+  Needed for Zope 4 compatibility.
+  [thet]
 
 
 2.0.2 (2016-01-08)
diff --git a/src/plone/app/imaging/tests/test_new_scaling.py b/src/plone/app/imaging/tests/test_new_scaling.py
index cf57a8e..175b47c 100644
--- a/src/plone/app/imaging/tests/test_new_scaling.py
+++ b/src/plone/app/imaging/tests/test_new_scaling.py
@@ -160,8 +160,9 @@ def testPublishWebDavScaleViaUID(self):
         response = self.publish(url, basic=self.getCredentials())
         self.assertEqual(response.getStatus(), 200)
         # We get a very different response.  In the end it works out.
-        self.assertEqual(response.getHeader('Content-Type'),
-                         'text/plain; charset=iso-8859-15')
+        self.assertTrue(
+            'text/plain; charset=' in response.getHeader('Content-Type')
+        )
         self.assertImage(response.getBody(), 'JPEG', (64, 64))
 
     def testPublishFTPScaleViaUID(self):
@@ -171,8 +172,9 @@ def testPublishFTPScaleViaUID(self):
         response = self.publish(url, basic=self.getCredentials())
         self.assertEqual(response.getStatus(), 200)
         # We get a very different response.  In the end it works out.
-        self.assertEqual(response.getHeader('Content-Type'),
-                         'text/plain; charset=iso-8859-15')
+        self.assertTrue(
+            'text/plain; charset=' in response.getHeader('Content-Type')
+        )
         self.assertImage(response.getBody(), 'JPEG', (64, 64))
 
     def testPublishThumbViaUID(self):


Repository: plone.app.imaging


Branch: refs/heads/master
Date: 2016-02-03T15:05:28+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/plone.app.imaging/commit/86b992990ff3239c63e5466ed3c344969f88aa1d

Merge pull request #25 from plone/thet-zope4

Zope4

Files changed:
M CHANGES.rst
M src/plone/app/imaging/tests/test_new_scaling.py

diff --git a/CHANGES.rst b/CHANGES.rst
index cd23fdf..8f27fd4 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,9 @@ New:
 
 Fixes:
 
-- *add item here*
+- Fix test to not check for the concrete WebDAV content type header.
+  Needed for Zope 4 compatibility.
+  [thet]
 
 
 2.0.2 (2016-01-08)
diff --git a/src/plone/app/imaging/tests/test_new_scaling.py b/src/plone/app/imaging/tests/test_new_scaling.py
index cf57a8e..175b47c 100644
--- a/src/plone/app/imaging/tests/test_new_scaling.py
+++ b/src/plone/app/imaging/tests/test_new_scaling.py
@@ -160,8 +160,9 @@ def testPublishWebDavScaleViaUID(self):
         response = self.publish(url, basic=self.getCredentials())
         self.assertEqual(response.getStatus(), 200)
         # We get a very different response.  In the end it works out.
-        self.assertEqual(response.getHeader('Content-Type'),
-                         'text/plain; charset=iso-8859-15')
+        self.assertTrue(
+            'text/plain; charset=' in response.getHeader('Content-Type')
+        )
         self.assertImage(response.getBody(), 'JPEG', (64, 64))
 
     def testPublishFTPScaleViaUID(self):
@@ -171,8 +172,9 @@ def testPublishFTPScaleViaUID(self):
         response = self.publish(url, basic=self.getCredentials())
         self.assertEqual(response.getStatus(), 200)
         # We get a very different response.  In the end it works out.
-        self.assertEqual(response.getHeader('Content-Type'),
-                         'text/plain; charset=iso-8859-15')
+        self.assertTrue(
+            'text/plain; charset=' in response.getHeader('Content-Type')
+        )
         self.assertImage(response.getBody(), 'JPEG', (64, 64))
 
     def testPublishThumbViaUID(self):


