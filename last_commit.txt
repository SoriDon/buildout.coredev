Repository: Products.PortalTransforms


Branch: refs/heads/master
Date: 2017-02-12T17:19:25+01:00
Author: Pavel Bogdanovic (pabo3000) <pb@prontonet.eu>
Commit: https://github.com/plone/Products.PortalTransforms/commit/f326f4bb38b025483ef9e1698c529c73cea53b6f

Add the possibility to switch on markdown extension through the zmi.

Files changed:
M CHANGES.rst
M Products/PortalTransforms/setuphandlers.py
M Products/PortalTransforms/transforms/markdown_to_html.py

diff --git a/CHANGES.rst b/CHANGES.rst
index a04b2dd..6c8df32 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,8 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- Add the possibility to switch on markdown extension through the zmi.
+  [pabo3000]
 
 Bug fixes:
 
diff --git a/Products/PortalTransforms/setuphandlers.py b/Products/PortalTransforms/setuphandlers.py
index 00c71aa..81c2018 100644
--- a/Products/PortalTransforms/setuphandlers.py
+++ b/Products/PortalTransforms/setuphandlers.py
@@ -27,23 +27,23 @@ def correctMapping(out, portal):
                         print >> out, "...ok"
 
 
-def updateSafeHtml(out, portal):
-    print >> out, 'Update safe_html...'
-    safe_html_id = 'safe_html'
-    safe_html_module = "Products.PortalTransforms.transforms.safe_html"
+def updateTransform(out, portal, id):
+    print >> out, 'Update {0}...'.format(id)
+    transform_id = id
+    transform_module = "Products.PortalTransforms.transforms.{0}".format(id)
     pt = getToolByName(portal, 'portal_transforms')
     for id in pt.objectIds():
         transform = getattr(pt, id)
-        if transform.id == safe_html_id and \
-                transform.module == safe_html_module:
+        if transform.id == transform_id and \
+                transform.module == transform_module:
             try:
                 transform.get_parameter_value('disable_transform')
             except KeyError:
-                print >> out, '  replace safe_html (%s, %s) ...' % (
-                    transform.name(), transform.module)
+                print >> out, '  replace {0} ({1}, {2}) ...'.format(
+                    id, transform.name(), transform.module)
                 try:
                     pt.unregisterTransform(id)
-                    pt.manage_addTransform(id, safe_html_module)
+                    pt.manage_addTransform(id, transform_module)
                 except:
                     raise
                 else:
@@ -55,7 +55,8 @@ def updateSafeHtml(out, portal):
 def installPortalTransforms(portal):
     out = StringIO()
 
-    updateSafeHtml(out, portal)
+    updateTransform(out, portal, 'safe_html')
+    updateTransform(out, portal, 'markdown_to_html')
 
     correctMapping(out, portal)
 
diff --git a/Products/PortalTransforms/transforms/markdown_to_html.py b/Products/PortalTransforms/transforms/markdown_to_html.py
index 6854794..44362de 100644
--- a/Products/PortalTransforms/transforms/markdown_to_html.py
+++ b/Products/PortalTransforms/transforms/markdown_to_html.py
@@ -26,9 +26,32 @@ class markdown(object):
     inputs = ("text/x-web-markdown",)
     output = "text/html"
 
+    def __init__(self, name=None, enabled_extensions=('markdown.extensions.fenced_code', 'markdown.extensions.nl2br', ), **kwargs):
+        self.config = {
+            'enabled_extensions': enabled_extensions,
+        }
+
+        self.config_metadata = {
+            'enabled_extensions': (
+                'list',
+                'enabled_extensions',
+                'Look for available extensions at ' +
+                'https://pythonhosted.org/Markdown/extensions/index.html ' +
+                'or write your own.'
+            ),
+        }
+
+        if name:
+            self.__name__ = name
+
     def name(self):
         return self.__name__
 
+    def __getattr__(self, attr):
+        if attr in self.config:
+            return self.config[attr]
+        raise AttributeError(attr)
+
     def convert(self, orig, data, **kwargs):
         if HAS_MARKDOWN:
             # markdown expects unicode input:
@@ -36,7 +59,7 @@ def convert(self, orig, data, **kwargs):
             # PortalTransforms, however expects a string as result,
             # so we encode the unicode result back to UTF8:
             html = markdown_transformer \
-                .markdown(orig, extensions=['markdown.extensions.fenced_code']) \
+                .markdown(orig, extensions=self.config.get('enabled_extensions', [])) \
                 .encode('utf-8')
         else:
             html = orig


Repository: Products.PortalTransforms


Branch: refs/heads/master
Date: 2017-02-16T19:16:30+01:00
Author: Pavel Bogdanovic (pabo3000) <pb@prontonet.eu>
Commit: https://github.com/plone/Products.PortalTransforms/commit/43dec09fc9e97274b1ca706f7f6326c39365927f

refactor setuphandlers.

Files changed:
M Products/PortalTransforms/setuphandlers.py

diff --git a/Products/PortalTransforms/setuphandlers.py b/Products/PortalTransforms/setuphandlers.py
index 81c2018..a09e9e8 100644
--- a/Products/PortalTransforms/setuphandlers.py
+++ b/Products/PortalTransforms/setuphandlers.py
@@ -27,29 +27,28 @@ def correctMapping(out, portal):
                         print >> out, "...ok"
 
 
-def updateTransform(out, portal, id):
-    print >> out, 'Update {0}...'.format(id)
-    transform_id = id
-    transform_module = "Products.PortalTransforms.transforms.{0}".format(id)
+def updateTransform(out, portal, transform_id):
+    print >> out, 'Update {0}...'.format(transform_id)
+    transform_module = "Products.PortalTransforms.transforms.{0}".format(transform_id)
     pt = getToolByName(portal, 'portal_transforms')
-    for id in pt.objectIds():
-        transform = getattr(pt, id)
+    for item in pt.objectIds():
+        transform = getattr(pt, item)
         if transform.id == transform_id and \
                 transform.module == transform_module:
             try:
                 transform.get_parameter_value('disable_transform')
             except KeyError:
-                print >> out, '  replace {0} ({1}, {2}) ...'.format(
-                    id, transform.name(), transform.module)
+                out.write('  replace {0} ({1}, {2}) ...'.format(
+                    item, transform.name(), transform.module))
                 try:
-                    pt.unregisterTransform(id)
-                    pt.manage_addTransform(id, transform_module)
+                    pt.unregisterTransform(item)
+                    pt.manage_addTransform(item, transform_module)
                 except:
                     raise
                 else:
-                    print >> out, '  ...done'
+                    out.write('  ...done')
 
-    print >> out, '...done'
+    out.write('  ...done')
 
 
 def installPortalTransforms(portal):


Repository: Products.PortalTransforms


Branch: refs/heads/master
Date: 2017-02-17T14:25:00+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.PortalTransforms/commit/cca9f945a3026242d58d63232b440525d1d2d0fd

Merge pull request #18 from pabo3000/master

Add the possibility to switch on markdown extension through the zmi.

Files changed:
M CHANGES.rst
M Products/PortalTransforms/setuphandlers.py
M Products/PortalTransforms/transforms/markdown_to_html.py

diff --git a/CHANGES.rst b/CHANGES.rst
index a04b2dd..6c8df32 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,8 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- Add the possibility to switch on markdown extension through the zmi.
+  [pabo3000]
 
 Bug fixes:
 
diff --git a/Products/PortalTransforms/setuphandlers.py b/Products/PortalTransforms/setuphandlers.py
index 00c71aa..a09e9e8 100644
--- a/Products/PortalTransforms/setuphandlers.py
+++ b/Products/PortalTransforms/setuphandlers.py
@@ -27,35 +27,35 @@ def correctMapping(out, portal):
                         print >> out, "...ok"
 
 
-def updateSafeHtml(out, portal):
-    print >> out, 'Update safe_html...'
-    safe_html_id = 'safe_html'
-    safe_html_module = "Products.PortalTransforms.transforms.safe_html"
+def updateTransform(out, portal, transform_id):
+    print >> out, 'Update {0}...'.format(transform_id)
+    transform_module = "Products.PortalTransforms.transforms.{0}".format(transform_id)
     pt = getToolByName(portal, 'portal_transforms')
-    for id in pt.objectIds():
-        transform = getattr(pt, id)
-        if transform.id == safe_html_id and \
-                transform.module == safe_html_module:
+    for item in pt.objectIds():
+        transform = getattr(pt, item)
+        if transform.id == transform_id and \
+                transform.module == transform_module:
             try:
                 transform.get_parameter_value('disable_transform')
             except KeyError:
-                print >> out, '  replace safe_html (%s, %s) ...' % (
-                    transform.name(), transform.module)
+                out.write('  replace {0} ({1}, {2}) ...'.format(
+                    item, transform.name(), transform.module))
                 try:
-                    pt.unregisterTransform(id)
-                    pt.manage_addTransform(id, safe_html_module)
+                    pt.unregisterTransform(item)
+                    pt.manage_addTransform(item, transform_module)
                 except:
                     raise
                 else:
-                    print >> out, '  ...done'
+                    out.write('  ...done')
 
-    print >> out, '...done'
+    out.write('  ...done')
 
 
 def installPortalTransforms(portal):
     out = StringIO()
 
-    updateSafeHtml(out, portal)
+    updateTransform(out, portal, 'safe_html')
+    updateTransform(out, portal, 'markdown_to_html')
 
     correctMapping(out, portal)
 
diff --git a/Products/PortalTransforms/transforms/markdown_to_html.py b/Products/PortalTransforms/transforms/markdown_to_html.py
index 6854794..44362de 100644
--- a/Products/PortalTransforms/transforms/markdown_to_html.py
+++ b/Products/PortalTransforms/transforms/markdown_to_html.py
@@ -26,9 +26,32 @@ class markdown(object):
     inputs = ("text/x-web-markdown",)
     output = "text/html"
 
+    def __init__(self, name=None, enabled_extensions=('markdown.extensions.fenced_code', 'markdown.extensions.nl2br', ), **kwargs):
+        self.config = {
+            'enabled_extensions': enabled_extensions,
+        }
+
+        self.config_metadata = {
+            'enabled_extensions': (
+                'list',
+                'enabled_extensions',
+                'Look for available extensions at ' +
+                'https://pythonhosted.org/Markdown/extensions/index.html ' +
+                'or write your own.'
+            ),
+        }
+
+        if name:
+            self.__name__ = name
+
     def name(self):
         return self.__name__
 
+    def __getattr__(self, attr):
+        if attr in self.config:
+            return self.config[attr]
+        raise AttributeError(attr)
+
     def convert(self, orig, data, **kwargs):
         if HAS_MARKDOWN:
             # markdown expects unicode input:
@@ -36,7 +59,7 @@ def convert(self, orig, data, **kwargs):
             # PortalTransforms, however expects a string as result,
             # so we encode the unicode result back to UTF8:
             html = markdown_transformer \
-                .markdown(orig, extensions=['markdown.extensions.fenced_code']) \
+                .markdown(orig, extensions=self.config.get('enabled_extensions', [])) \
                 .encode('utf-8')
         else:
             html = orig


