Repository: mockup


Branch: refs/heads/master
Date: 2016-09-02T11:49:01-05:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/mockup/commit/e8f88190388bb745fb82d338ae7254b8f52b62c1

Show expired label in folder contents for expired attributes

Files changed:
M CHANGES.rst
M mockup/patterns/structure/js/views/tablerow.js
M mockup/patterns/structure/less/pattern.structure.less
M mockup/patterns/structure/pattern.js
M mockup/patterns/structure/templates/tablerow.xml
M mockup/tests/pattern-structure-test.js

diff --git a/CHANGES.rst b/CHANGES.rst
index e4c4019..51427ad 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -13,6 +13,9 @@ Incompatibilities:
 
 New:
 
+- Show expired label in folder contents for expired attributes
+  [vangheem]
+
 - Related Items refactorings:
 
     - Make "search" and "browse" mode user-selectable via buttons.
diff --git a/mockup/patterns/structure/js/views/tablerow.js b/mockup/patterns/structure/js/views/tablerow.js
index ed8704e..33fc855 100644
--- a/mockup/patterns/structure/js/views/tablerow.js
+++ b/mockup/patterns/structure/js/views/tablerow.js
@@ -6,8 +6,10 @@ define([
   'mockup-patterns-structure-url/js/views/actionmenu',
   'text!mockup-patterns-structure-url/templates/tablerow.xml',
   'mockup-utils',
-  'translate'
-], function($, _, Backbone, Nav, ActionMenuView, TableRowTemplate, utils, _t) {
+  'translate',
+  'moment'
+], function($, _, Backbone, Nav, ActionMenuView, TableRowTemplate, utils, _t,
+            moment) {
   'use strict';
 
   var TableRowView = Backbone.View.extend({
@@ -23,7 +25,17 @@ define([
       this.app = options.app;
       this.selectedCollection = this.app.selectedCollection;
       this.table = this.options.table;
+      this.now = moment();
     },
+
+    expired: function(data){
+      if(!data.attributes.ExpirationDate){
+        return false;
+      }
+      var dt = moment(data.attributes.ExpirationDate);
+      return dt.diff(this.now, 'seconds') < 0;
+    },
+
     render: function() {
       var self = this;
       var data = this.model.toJSON();
@@ -43,6 +55,7 @@ define([
       data.viewURL = data.attributes.getURL + viewAction;
 
       data._t = _t;
+      data.expired = this.expired(data);
       self.$el.html(self.template(data));
       var attrs = self.model.attributes;
       self.$el.addClass('state-' + attrs['review_state']).addClass('type-' + attrs.portal_type); // jshint ignore:line
@@ -54,6 +67,11 @@ define([
       self.$el.attr('data-id', data.id);
       self.$el.attr('data-type', data.portal_type);
       self.$el.attr('data-folderish', data['is_folderish']); // jshint ignore:line
+      self.$el.removeClass('expired');
+
+      if(data.expired){
+        self.$el.addClass('expired');
+      }
 
       self.el.model = this.model;
 
@@ -92,8 +110,8 @@ define([
       if (!((typeof libName === 'string') && (typeof key === 'string'))) {
         return null;
       }
-      var clsLib = require(libName);
-      var lib = new clsLib(self);
+      var ClsLib = require(libName);
+      var lib = new ClsLib(self);
       return lib[method] && lib[method](e);
     },
     itemSelected: function() {
diff --git a/mockup/patterns/structure/less/pattern.structure.less b/mockup/patterns/structure/less/pattern.structure.less
index 3882355..10480fd 100644
--- a/mockup/patterns/structure/less/pattern.structure.less
+++ b/mockup/patterns/structure/less/pattern.structure.less
@@ -94,6 +94,10 @@
                 padding-top: 2px;
             }
         }
+        .plone-item-expired {
+          font-size: 12px;
+          color: #d00202;
+        }
     }
     .navbar {
         min-height: inherit;
diff --git a/mockup/patterns/structure/pattern.js b/mockup/patterns/structure/pattern.js
index 9461f63..f691e9c 100644
--- a/mockup/patterns/structure/pattern.js
+++ b/mockup/patterns/structure/pattern.js
@@ -65,6 +65,7 @@ define([
       _default_attributes: [
         'CreationDate',
         'EffectiveDate',
+        'ExpirationDate',
         'exclude_from_nav',
         'getIcon',
         'getObjSize',
@@ -211,5 +212,3 @@ define([
   return Structure;
 
 });
-
-
diff --git a/mockup/patterns/structure/templates/tablerow.xml b/mockup/patterns/structure/templates/tablerow.xml
index bf2bd36..740701f 100644
--- a/mockup/patterns/structure/templates/tablerow.xml
+++ b/mockup/patterns/structure/templates/tablerow.xml
@@ -7,6 +7,9 @@
         title="<%- portal_type %>">
       <%- Title %>
     </a>
+    <% if(expired){ %>
+      <span class="plone-item-expired"><%- _t('Expired') %></span>
+    <% } %>
   </div>
   <% if(attributes["getIcon"] ){ %>
   <img class="image-<%- iconSize %> pull-right" src="<%- getURL %>/@@images/image/<%- iconSize %>">
diff --git a/mockup/tests/pattern-structure-test.js b/mockup/tests/pattern-structure-test.js
index 79b8b4d..9b2b88b 100644
--- a/mockup/tests/pattern-structure-test.js
+++ b/mockup/tests/pattern-structure-test.js
@@ -12,7 +12,9 @@ define([
   'mockup-patterns-structure-url/js/collections/result',
   'mockup-utils',
   'sinon',
-], function(expect, $, _, registry, Structure, ActionMenuView, AppView, Result, TableView, TableRowView, ResultCollection, utils, sinon) {
+  'moment'
+], function(expect, $, _, registry, Structure, ActionMenuView, AppView, Result,
+            TableView, TableRowView, ResultCollection, utils, sinon, moment) {
   'use strict';
 
   window.mocha.setup('bdd');
@@ -754,7 +756,8 @@ define([
           'review_state': 'published',
           'is_folderish': true,
           Subject: [],
-          id: 'folder'
+          id: 'folder',
+          ExpirationDate: moment().add(-2, 'days').format()
         });
         for (var i = start; i < end; i = i + 1) {
           items.push({
@@ -767,7 +770,8 @@ define([
             'review_state': 'published',
             'is_folderish': false,
             Subject: [],
-            id: 'item' + i
+            id: 'item' + i,
+            ExpirationDate: moment().add(2, 'days').format()
           });
         }
 
@@ -1014,13 +1018,21 @@ define([
         ).to.equal(0);
     });
 
+    it('test expired shows', function() {
+      registry.scan(this.$el);
+      this.clock.tick(500);
+
+      var $content_row = this.$el.find('table tbody tr').eq(0);
+      expect($content_row.find('td').eq(1).text().trim()).to.contain('Expired');
+    });
+
     it('test displayed content', function() {
       registry.scan(this.$el);
       this.clock.tick(500);
 
       var $content_row = this.$el.find('table tbody tr').eq(0);
       expect($content_row.find('td').length).to.equal(6);
-      expect($content_row.find('td').eq(1).text().trim()).to.equal('Folder');
+      expect($content_row.find('td').eq(1).text().trim()).to.contain('Folder');
       expect($content_row.find('td').eq(2).text().trim()).to.equal('');
       expect($content_row.find('td').eq(3).text().trim()).to.equal('');
       expect($content_row.find('td').eq(4).text().trim()).to.equal('published');


Repository: mockup


Branch: refs/heads/master
Date: 2016-09-02T17:09:16-05:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/mockup/commit/accb54311b254d1baf981344b41bb2d6faa059e9

Merge pull request #704 from plone/structure-expired

Show expired label in folder contents for expired attributes

Files changed:
M CHANGES.rst
M mockup/patterns/structure/js/views/tablerow.js
M mockup/patterns/structure/less/pattern.structure.less
M mockup/patterns/structure/pattern.js
M mockup/patterns/structure/templates/tablerow.xml
M mockup/tests/pattern-structure-test.js

diff --git a/CHANGES.rst b/CHANGES.rst
index e4c4019..51427ad 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -13,6 +13,9 @@ Incompatibilities:
 
 New:
 
+- Show expired label in folder contents for expired attributes
+  [vangheem]
+
 - Related Items refactorings:
 
     - Make "search" and "browse" mode user-selectable via buttons.
diff --git a/mockup/patterns/structure/js/views/tablerow.js b/mockup/patterns/structure/js/views/tablerow.js
index ed8704e..33fc855 100644
--- a/mockup/patterns/structure/js/views/tablerow.js
+++ b/mockup/patterns/structure/js/views/tablerow.js
@@ -6,8 +6,10 @@ define([
   'mockup-patterns-structure-url/js/views/actionmenu',
   'text!mockup-patterns-structure-url/templates/tablerow.xml',
   'mockup-utils',
-  'translate'
-], function($, _, Backbone, Nav, ActionMenuView, TableRowTemplate, utils, _t) {
+  'translate',
+  'moment'
+], function($, _, Backbone, Nav, ActionMenuView, TableRowTemplate, utils, _t,
+            moment) {
   'use strict';
 
   var TableRowView = Backbone.View.extend({
@@ -23,7 +25,17 @@ define([
       this.app = options.app;
       this.selectedCollection = this.app.selectedCollection;
       this.table = this.options.table;
+      this.now = moment();
     },
+
+    expired: function(data){
+      if(!data.attributes.ExpirationDate){
+        return false;
+      }
+      var dt = moment(data.attributes.ExpirationDate);
+      return dt.diff(this.now, 'seconds') < 0;
+    },
+
     render: function() {
       var self = this;
       var data = this.model.toJSON();
@@ -43,6 +55,7 @@ define([
       data.viewURL = data.attributes.getURL + viewAction;
 
       data._t = _t;
+      data.expired = this.expired(data);
       self.$el.html(self.template(data));
       var attrs = self.model.attributes;
       self.$el.addClass('state-' + attrs['review_state']).addClass('type-' + attrs.portal_type); // jshint ignore:line
@@ -54,6 +67,11 @@ define([
       self.$el.attr('data-id', data.id);
       self.$el.attr('data-type', data.portal_type);
       self.$el.attr('data-folderish', data['is_folderish']); // jshint ignore:line
+      self.$el.removeClass('expired');
+
+      if(data.expired){
+        self.$el.addClass('expired');
+      }
 
       self.el.model = this.model;
 
@@ -92,8 +110,8 @@ define([
       if (!((typeof libName === 'string') && (typeof key === 'string'))) {
         return null;
       }
-      var clsLib = require(libName);
-      var lib = new clsLib(self);
+      var ClsLib = require(libName);
+      var lib = new ClsLib(self);
       return lib[method] && lib[method](e);
     },
     itemSelected: function() {
diff --git a/mockup/patterns/structure/less/pattern.structure.less b/mockup/patterns/structure/less/pattern.structure.less
index 3882355..10480fd 100644
--- a/mockup/patterns/structure/less/pattern.structure.less
+++ b/mockup/patterns/structure/less/pattern.structure.less
@@ -94,6 +94,10 @@
                 padding-top: 2px;
             }
         }
+        .plone-item-expired {
+          font-size: 12px;
+          color: #d00202;
+        }
     }
     .navbar {
         min-height: inherit;
diff --git a/mockup/patterns/structure/pattern.js b/mockup/patterns/structure/pattern.js
index 9461f63..f691e9c 100644
--- a/mockup/patterns/structure/pattern.js
+++ b/mockup/patterns/structure/pattern.js
@@ -65,6 +65,7 @@ define([
       _default_attributes: [
         'CreationDate',
         'EffectiveDate',
+        'ExpirationDate',
         'exclude_from_nav',
         'getIcon',
         'getObjSize',
@@ -211,5 +212,3 @@ define([
   return Structure;
 
 });
-
-
diff --git a/mockup/patterns/structure/templates/tablerow.xml b/mockup/patterns/structure/templates/tablerow.xml
index bf2bd36..740701f 100644
--- a/mockup/patterns/structure/templates/tablerow.xml
+++ b/mockup/patterns/structure/templates/tablerow.xml
@@ -7,6 +7,9 @@
         title="<%- portal_type %>">
       <%- Title %>
     </a>
+    <% if(expired){ %>
+      <span class="plone-item-expired"><%- _t('Expired') %></span>
+    <% } %>
   </div>
   <% if(attributes["getIcon"] ){ %>
   <img class="image-<%- iconSize %> pull-right" src="<%- getURL %>/@@images/image/<%- iconSize %>">
diff --git a/mockup/tests/pattern-structure-test.js b/mockup/tests/pattern-structure-test.js
index 79b8b4d..9b2b88b 100644
--- a/mockup/tests/pattern-structure-test.js
+++ b/mockup/tests/pattern-structure-test.js
@@ -12,7 +12,9 @@ define([
   'mockup-patterns-structure-url/js/collections/result',
   'mockup-utils',
   'sinon',
-], function(expect, $, _, registry, Structure, ActionMenuView, AppView, Result, TableView, TableRowView, ResultCollection, utils, sinon) {
+  'moment'
+], function(expect, $, _, registry, Structure, ActionMenuView, AppView, Result,
+            TableView, TableRowView, ResultCollection, utils, sinon, moment) {
   'use strict';
 
   window.mocha.setup('bdd');
@@ -754,7 +756,8 @@ define([
           'review_state': 'published',
           'is_folderish': true,
           Subject: [],
-          id: 'folder'
+          id: 'folder',
+          ExpirationDate: moment().add(-2, 'days').format()
         });
         for (var i = start; i < end; i = i + 1) {
           items.push({
@@ -767,7 +770,8 @@ define([
             'review_state': 'published',
             'is_folderish': false,
             Subject: [],
-            id: 'item' + i
+            id: 'item' + i,
+            ExpirationDate: moment().add(2, 'days').format()
           });
         }
 
@@ -1014,13 +1018,21 @@ define([
         ).to.equal(0);
     });
 
+    it('test expired shows', function() {
+      registry.scan(this.$el);
+      this.clock.tick(500);
+
+      var $content_row = this.$el.find('table tbody tr').eq(0);
+      expect($content_row.find('td').eq(1).text().trim()).to.contain('Expired');
+    });
+
     it('test displayed content', function() {
       registry.scan(this.$el);
       this.clock.tick(500);
 
       var $content_row = this.$el.find('table tbody tr').eq(0);
       expect($content_row.find('td').length).to.equal(6);
-      expect($content_row.find('td').eq(1).text().trim()).to.equal('Folder');
+      expect($content_row.find('td').eq(1).text().trim()).to.contain('Folder');
       expect($content_row.find('td').eq(2).text().trim()).to.equal('');
       expect($content_row.find('td').eq(3).text().trim()).to.equal('');
       expect($content_row.find('td').eq(4).text().trim()).to.equal('published');


