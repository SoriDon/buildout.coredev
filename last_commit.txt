Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-08-13T12:36:23+02:00
Author: Andreas Jung (zopyx) <info@zopyx.com>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/09747903e011916ad7516dcfdc35b41f47900621

updated

Files changed:
M README.rst

b'diff --git a/README.rst b/README.rst\nindex 76ca7c1..eca47e6 100644\n--- a/README.rst\n+++ b/README.rst\n@@ -640,3 +640,4 @@ Reporting bugs or asking questions\n Please use the bug tracker in this repository at\n https://github.com/plone/plone.recipe.zope2instance/issues for questions and\n bug reports.\n+\n'

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-08-13T12:55:47+02:00
Author: Andreas Jung√Ç (zopyx) <info@zopyx.com>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/2a5ff5b35081c0869030c4e71d985d804090d755

added

Files changed:
A src/plone/recipe/zope2instance/templates/access_event_logfile
A src/plone/recipe/zope2instance/templates/access_log_template
A src/plone/recipe/zope2instance/templates/additional_zcml_template
A src/plone/recipe/zope2instance/templates/before_storage_template
A src/plone/recipe/zope2instance/templates/blob_storage_template
A src/plone/recipe/zope2instance/templates/debug_exceptions_template
A src/plone/recipe/zope2instance/templates/demo_storage2_template
A src/plone/recipe/zope2instance/templates/demo_storage_template
A src/plone/recipe/zope2instance/templates/environment_template
A src/plone/recipe/zope2instance/templates/event_log_template
A src/plone/recipe/zope2instance/templates/event_logfile
A src/plone/recipe/zope2instance/templates/file_storage_template
A src/plone/recipe/zope2instance/templates/ftp_server_template
A src/plone/recipe/zope2instance/templates/http_fast_listen_template
A src/plone/recipe/zope2instance/templates/http_force_connection_close_template
A src/plone/recipe/zope2instance/templates/http_server_template
A src/plone/recipe/zope2instance/templates/icp_server_template
A src/plone/recipe/zope2instance/templates/locales_zcml
A src/plone/recipe/zope2instance/templates/rel_storage_template
A src/plone/recipe/zope2instance/templates/resources_zcml
A src/plone/recipe/zope2instance/templates/webdav_server_template
A src/plone/recipe/zope2instance/templates/wsgi_conf_template
A src/plone/recipe/zope2instance/templates/wsgi_ini_template
A src/plone/recipe/zope2instance/templates/zeo_address_list_template
A src/plone/recipe/zope2instance/templates/zeo_authentication_template
A src/plone/recipe/zope2instance/templates/zeo_blob_storage_template
A src/plone/recipe/zope2instance/templates/zeo_storage_template
A src/plone/recipe/zope2instance/templates/zlib_storage_template
A src/plone/recipe/zope2instance/templates/zodb_temporary_storage_template
A src/plone/recipe/zope2instance/templates/zope_conf_template

b'diff --git a/src/plone/recipe/zope2instance/templates/access_event_logfile b/src/plone/recipe/zope2instance/templates/access_event_logfile\nnew file mode 100644\nindex 0000000..9e419d1\n--- /dev/null\n+++ b/src/plone/recipe/zope2instance/templates/access_event_logfile\n@@ -0,0 +1,5 @@\n+<logfile>\n+    path %(z_log)s\n+    format %%(message)s\n+    %(access_log_rotate)s\n+  </logfile>\n\\ No newline at end of file\ndiff --git a/src/plone/recipe/zope2instance/templates/access_log_template b/src/plone/recipe/zope2instance/templates/access_log_template\nnew file mode 100644\nindex 0000000..82889f1\n--- /dev/null\n+++ b/src/plone/recipe/zope2instance/templates/access_log_template\n@@ -0,0 +1,4 @@\n+<logger access>\n+  level %(z_log_level)s\n+  %(access_event_log)s\n+</logger>\ndiff --git a/src/plone/recipe/zope2instance/templates/additional_zcml_template b/src/plone/recipe/zope2instance/templates/additional_zcml_template\nnew file mode 100644\nindex 0000000..0d238be\n--- /dev/null\n+++ b/src/plone/recipe/zope2instance/templates/additional_zcml_template\n@@ -0,0 +1,3 @@\n+<configure xmlns="http://namespaces.zope.org/zope">\n+    %s\n+</configure>\ndiff --git a/src/plone/recipe/zope2instance/templates/before_storage_template b/src/plone/recipe/zope2instance/templates/before_storage_template\nnew file mode 100644\nindex 0000000..486bd3f\n--- /dev/null\n+++ b/src/plone/recipe/zope2instance/templates/before_storage_template\n@@ -0,0 +1,7 @@\n+\n+    %%%%import zc.beforestorage\n+    # BeforeStorage\n+    <before>\n+      before %s\n+  %%s\n+    </before>\ndiff --git a/src/plone/recipe/zope2instance/templates/blob_storage_template b/src/plone/recipe/zope2instance/templates/blob_storage_template\nnew file mode 100644\nindex 0000000..5500fa4\n--- /dev/null\n+++ b/src/plone/recipe/zope2instance/templates/blob_storage_template\n@@ -0,0 +1,6 @@\n+\n+    # Blob-enabled FileStorage database\n+    <blobstorage>\n+      blob-dir %s\n+%s\n+    </blobstorage>\ndiff --git a/src/plone/recipe/zope2instance/templates/debug_exceptions_template b/src/plone/recipe/zope2instance/templates/debug_exceptions_template\nnew file mode 100644\nindex 0000000..abb8063\n--- /dev/null\n+++ b/src/plone/recipe/zope2instance/templates/debug_exceptions_template\n@@ -0,0 +1 @@\n+debug-exceptions %s\ndiff --git a/src/plone/recipe/zope2instance/templates/demo_storage2_template b/src/plone/recipe/zope2instance/templates/demo_storage2_template\nnew file mode 100644\nindex 0000000..418e905\n--- /dev/null\n+++ b/src/plone/recipe/zope2instance/templates/demo_storage2_template\n@@ -0,0 +1,6 @@\n+\n+    # DemoStorage\n+    <demostorage>\n+%s\n+%s\n+    </demostorage>\ndiff --git a/src/plone/recipe/zope2instance/templates/demo_storage_template b/src/plone/recipe/zope2instance/templates/demo_storage_template\nnew file mode 100644\nindex 0000000..fbd9bdc\n--- /dev/null\n+++ b/src/plone/recipe/zope2instance/templates/demo_storage_template\n@@ -0,0 +1,5 @@\n+\n+    # DemoStorage\n+    <demostorage>\n+%s\n+    </demostorage>\ndiff --git a/src/plone/recipe/zope2instance/templates/environment_template b/src/plone/recipe/zope2instance/templates/environment_template\nnew file mode 100644\nindex 0000000..56799ed\n--- /dev/null\n+++ b/src/plone/recipe/zope2instance/templates/environment_template\n@@ -0,0 +1,4 @@\n+\n+<environment>\n+    %s\n+</environment>\ndiff --git a/src/plone/recipe/zope2instance/templates/event_log_template b/src/plone/recipe/zope2instance/templates/event_log_template\nnew file mode 100644\nindex 0000000..4e528e4\n--- /dev/null\n+++ b/src/plone/recipe/zope2instance/templates/event_log_template\n@@ -0,0 +1,5 @@\n+<eventlog>\n+  %(mailinglogger_config)s\n+  level %(event_log_level)s\n+  %(event_log)s\n+</eventlog>\ndiff --git a/src/plone/recipe/zope2instance/templates/event_logfile b/src/plone/recipe/zope2instance/templates/event_logfile\nnew file mode 100644\nindex 0000000..413d62c\n--- /dev/null\n+++ b/src/plone/recipe/zope2instance/templates/event_logfile\n@@ -0,0 +1,5 @@\n+<logfile>\n+    path %(event_logfile)s\n+    level %(event_log_level)s\n+    %(event_log_rotate)s\n+  </logfile>\n\\ No newline at end of file\ndiff --git a/src/plone/recipe/zope2instance/templates/file_storage_template b/src/plone/recipe/zope2instance/templates/file_storage_template\nnew file mode 100644\nindex 0000000..f266298\n--- /dev/null\n+++ b/src/plone/recipe/zope2instance/templates/file_storage_template\n@@ -0,0 +1,5 @@\n+\n+    # FileStorage database\n+    <filestorage>\n+      path %s\n+    </filestorage>\ndiff --git a/src/plone/recipe/zope2instance/templates/ftp_server_template b/src/plone/recipe/zope2instance/templates/ftp_server_template\nnew file mode 100644\nindex 0000000..8bdc436\n--- /dev/null\n+++ b/src/plone/recipe/zope2instance/templates/ftp_server_template\n@@ -0,0 +1,5 @@\n+\n+<ftp-server>\n+  # valid key is "address"\n+  address %s\n+</ftp-server>\ndiff --git a/src/plone/recipe/zope2instance/templates/http_fast_listen_template b/src/plone/recipe/zope2instance/templates/http_fast_listen_template\nnew file mode 100644\nindex 0000000..16cdf4a\n--- /dev/null\n+++ b/src/plone/recipe/zope2instance/templates/http_fast_listen_template\n@@ -0,0 +1,3 @@\n+  # Set to off to defer opening of the HTTP socket until the end of the\n+  # startup phase:\n+  fast-listen %s\n\\ No newline at end of file\ndiff --git a/src/plone/recipe/zope2instance/templates/http_force_connection_close_template b/src/plone/recipe/zope2instance/templates/http_force_connection_close_template\nnew file mode 100644\nindex 0000000..d926667\n--- /dev/null\n+++ b/src/plone/recipe/zope2instance/templates/http_force_connection_close_template\n@@ -0,0 +1 @@\n+  force-connection-close %s\n\\ No newline at end of file\ndiff --git a/src/plone/recipe/zope2instance/templates/http_server_template b/src/plone/recipe/zope2instance/templates/http_server_template\nnew file mode 100644\nindex 0000000..c3f63ad\n--- /dev/null\n+++ b/src/plone/recipe/zope2instance/templates/http_server_template\n@@ -0,0 +1,6 @@\n+\n+<http-server>\n+  address %(http_address)s\n+%(http_force_connection_close)s\n+%(http_fast_listen)s\n+</http-server>\ndiff --git a/src/plone/recipe/zope2instance/templates/icp_server_template b/src/plone/recipe/zope2instance/templates/icp_server_template\nnew file mode 100644\nindex 0000000..7dac717\n--- /dev/null\n+++ b/src/plone/recipe/zope2instance/templates/icp_server_template\n@@ -0,0 +1,5 @@\n+\n+<icp-server>\n+  # valid key is "address"\n+  address %s\n+</icp-server>\ndiff --git a/src/plone/recipe/zope2instance/templates/locales_zcml b/src/plone/recipe/zope2instance/templates/locales_zcml\nnew file mode 100644\nindex 0000000..5aa1d00\n--- /dev/null\n+++ b/src/plone/recipe/zope2instance/templates/locales_zcml\n@@ -0,0 +1,4 @@\n+<configure xmlns="http://namespaces.zope.org/zope"\n+           xmlns:i18n="http://namespaces.zope.org/i18n">\n+    <i18n:registerTranslations directory="%(directory)s" />\n+</configure>\ndiff --git a/src/plone/recipe/zope2instance/templates/rel_storage_template b/src/plone/recipe/zope2instance/templates/rel_storage_template\nnew file mode 100644\nindex 0000000..c78e5fa\n--- /dev/null\n+++ b/src/plone/recipe/zope2instance/templates/rel_storage_template\n@@ -0,0 +1,8 @@\n+\n+    %%import relstorage\n+    <relstorage>\n+%(rs_opts)s\n+        <%(type)s>\n+%(db_opts)s\n+        </%(type)s>\n+    </relstorage>\ndiff --git a/src/plone/recipe/zope2instance/templates/resources_zcml b/src/plone/recipe/zope2instance/templates/resources_zcml\nnew file mode 100644\nindex 0000000..2eedc5e\n--- /dev/null\n+++ b/src/plone/recipe/zope2instance/templates/resources_zcml\n@@ -0,0 +1,5 @@\n+<configure xmlns="http://namespaces.zope.org/zope"\n+           xmlns:plone="http://namespaces.plone.org/plone">\n+    <include package="plone.resource" file="meta.zcml"/>\n+    <plone:static directory="%(directory)s"/>\n+</configure>\ndiff --git a/src/plone/recipe/zope2instance/templates/webdav_server_template b/src/plone/recipe/zope2instance/templates/webdav_server_template\nnew file mode 100644\nindex 0000000..77f5458\n--- /dev/null\n+++ b/src/plone/recipe/zope2instance/templates/webdav_server_template\n@@ -0,0 +1,5 @@\n+\n+<webdav-source-server>\n+  address %s\n+  force-connection-close %s\n+</webdav-source-server>\ndiff --git a/src/plone/recipe/zope2instance/templates/wsgi_conf_template b/src/plone/recipe/zope2instance/templates/wsgi_conf_template\nnew file mode 100644\nindex 0000000..810f3c9\n--- /dev/null\n+++ b/src/plone/recipe/zope2instance/templates/wsgi_conf_template\n@@ -0,0 +1,29 @@\n+%(imports_lines)s\n+%%define INSTANCEHOME %(instance_home)s\n+instancehome $INSTANCEHOME\n+%%define CLIENTHOME %(client_home)s\n+clienthome $CLIENTHOME\n+%(products_lines)s\n+debug-mode %(debug_mode)s\n+%(debug_exceptions)s\n+security-policy-implementation %(security_implementation)s\n+verbose-security %(verbose_security)s\n+%(default_zpublisher_encoding)s\n+%(port_base)s\n+%(environment_vars)s\n+\n+%(mailinglogger_import)s\n+\n+<zodb_db main>\n+    # Main database\n+    %(zodb_cache_size)s\n+    %(zodb_cache_size_bytes)s\n+%(storage_snippet)s\n+    mount-point /\n+</zodb_db>\n+\n+%(zodb_tmp_storage)s\n+\n+%(python_check_interval)s\n+\n+%(zope_conf_additional)s\ndiff --git a/src/plone/recipe/zope2instance/templates/wsgi_ini_template b/src/plone/recipe/zope2instance/templates/wsgi_ini_template\nnew file mode 100644\nindex 0000000..7ed1869\n--- /dev/null\n+++ b/src/plone/recipe/zope2instance/templates/wsgi_ini_template\n@@ -0,0 +1,76 @@\n+[server:main]\n+paste.server_factory = plone.recipe.zope2instance:main\n+use = egg:plone.recipe.zope2instance#main\n+%(fast-listen)slisten = %(http_address)s\n+threads = %(threads)s\n+\n+[app:zope]\n+use = egg:Zope#main\n+zope_conf = %(location)s/etc/zope.conf\n+\n+[filter:translogger]\n+use = egg:Paste#translogger\n+setup_console_handler = False\n+\n+[pipeline:main]\n+pipeline =\n+    %(pipeline)s\n+\n+[loggers]\n+keys = root, plone, waitress.queue, waitress, wsgi\n+\n+[handlers]\n+keys = console, accesslog, eventlog\n+\n+[formatters]\n+keys = generic, message\n+\n+[logger_root]\n+level = %(eventlog_level)s\n+handlers = %(root_handlers)s\n+\n+[logger_plone]\n+level = %(eventlog_level)s\n+handlers = %(event_handlers)s\n+qualname = plone\n+\n+[logger_waitress.queue]\n+level = INFO\n+handlers = eventlog\n+qualname = waitress.queue\n+propagate = 0\n+\n+[logger_waitress]\n+level = %(eventlog_level)s\n+handlers = %(event_handlers)s\n+qualname = waitress\n+\n+[logger_wsgi]\n+level = %(accesslog_level)s\n+handlers = accesslog\n+qualname = wsgi\n+propagate = 0\n+\n+[handler_console]\n+class = StreamHandler\n+args = (sys.stderr,)\n+level = NOTSET\n+formatter = generic\n+\n+[handler_accesslog]\n+class = FileHandler\n+args = (\'%(accesslog_name)s\',\'a\')\n+level = %(accesslog_level)s\n+formatter = message\n+\n+[handler_eventlog]\n+class = FileHandler\n+args = (\'%(eventlog_name)s\', \'a\')\n+level = NOTSET\n+formatter = generic\n+\n+[formatter_generic]\n+format = %%(asctime)s %%(levelname)-7.7s [%%(name)s:%%(lineno)s][%%(threadName)s] %%(message)s\n+\n+[formatter_message]\n+format = %%(message)s\ndiff --git a/src/plone/recipe/zope2instance/templates/zeo_address_list_template b/src/plone/recipe/zope2instance/templates/zeo_address_list_template\nnew file mode 100644\nindex 0000000..a9abc88\n--- /dev/null\n+++ b/src/plone/recipe/zope2instance/templates/zeo_address_list_template\n@@ -0,0 +1,2 @@\n+\n+      server %(zeo_address)s\ndiff --git a/src/plone/recipe/zope2instance/templates/zeo_authentication_template b/src/plone/recipe/zope2instance/templates/zeo_authentication_template\nnew file mode 100644\nindex 0000000..12dc3a0\n--- /dev/null\n+++ b/src/plone/recipe/zope2instance/templates/zeo_authentication_template\n@@ -0,0 +1,3 @@\n+realm %(realm)s\n+      username %(username)s\n+      password %(password)s\n\\ No newline at end of file\ndiff --git a/src/plone/recipe/zope2instance/templates/zeo_blob_storage_template b/src/plone/recipe/zope2instance/templates/zeo_blob_storage_template\nnew file mode 100644\nindex 0000000..18ce988\n--- /dev/null\n+++ b/src/plone/recipe/zope2instance/templates/zeo_blob_storage_template\n@@ -0,0 +1,19 @@\n+# Blob-enabled ZEOStorage database\n+    <zeoclient>\n+      read-only %(read_only)s\n+      %(zeo_client_read_only_fallback)s\n+      blob-dir %(blob_storage)s\n+      shared-blob-dir %(shared_blob_dir)s\n+      %(zeo_address_list)s\n+      storage %(zeo_storage)s\n+      name zeostorage\n+      cache-size %(zeo_client_cache_size)s\n+      %(zeo_client_blob_cache_size)s\n+      %(zeo_client_blob_cache_size_check)s\n+      %(zeo_authentication)s\n+      %(zeo_var_dir)s\n+      %(zeo_client_client)s\n+      %(zeo_client_min_disconnect_poll)s\n+      %(zeo_client_max_disconnect_poll)s\n+      %(zeo_client_drop_cache_rather_verify)s\n+    </zeoclient>\n\\ No newline at end of file\ndiff --git a/src/plone/recipe/zope2instance/templates/zeo_storage_template b/src/plone/recipe/zope2instance/templates/zeo_storage_template\nnew file mode 100644\nindex 0000000..d1a42f2\n--- /dev/null\n+++ b/src/plone/recipe/zope2instance/templates/zeo_storage_template\n@@ -0,0 +1,15 @@\n+# ZEOStorage database\n+    <zeoclient>\n+      read-only %(read_only)s\n+      %(zeo_client_read_only_fallback)s\n+      %(zeo_address_list)s\n+      storage %(zeo_storage)s\n+      name zeostorage\n+      cache-size %(zeo_client_cache_size)s\n+      %(zeo_authentication)s\n+      %(zeo_var_dir)s\n+      %(zeo_client_client)s\n+      %(zeo_client_min_disconnect_poll)s\n+      %(zeo_client_max_disconnect_poll)s\n+      %(zeo_client_drop_cache_rather_verify)s\n+    </zeoclient>\n\\ No newline at end of file\ndiff --git a/src/plone/recipe/zope2instance/templates/zlib_storage_template b/src/plone/recipe/zope2instance/templates/zlib_storage_template\nnew file mode 100644\nindex 0000000..ef9a435\n--- /dev/null\n+++ b/src/plone/recipe/zope2instance/templates/zlib_storage_template\n@@ -0,0 +1,7 @@\n+\n+    %%import zc.zlibstorage\n+    # ZlibStorage wrapper\n+    <zlibstorage>\n+      compress %s\n+%s\n+    </zlibstorage>\ndiff --git a/src/plone/recipe/zope2instance/templates/zodb_temporary_storage_template b/src/plone/recipe/zope2instance/templates/zodb_temporary_storage_template\nnew file mode 100644\nindex 0000000..841fd09\n--- /dev/null\n+++ b/src/plone/recipe/zope2instance/templates/zodb_temporary_storage_template\n@@ -0,0 +1,8 @@\n+<zodb_db temporary>\n+    # Temporary storage database (for sessions)\n+    <temporarystorage>\n+      name temporary storage for sessioning\n+    </temporarystorage>\n+    mount-point /temp_folder\n+    container-class Products.TemporaryFolder.TemporaryContainer\n+</zodb_db>\n\\ No newline at end of file\ndiff --git a/src/plone/recipe/zope2instance/templates/zope_conf_template b/src/plone/recipe/zope2instance/templates/zope_conf_template\nnew file mode 100644\nindex 0000000..2db624b\n--- /dev/null\n+++ b/src/plone/recipe/zope2instance/templates/zope_conf_template\n@@ -0,0 +1,46 @@\n+%(imports_lines)s\n+%%define INSTANCEHOME %(instance_home)s\n+instancehome $INSTANCEHOME\n+%%define CLIENTHOME %(client_home)s\n+clienthome $CLIENTHOME\n+%(paths_lines)s\n+%(products_lines)s\n+debug-mode %(debug_mode)s\n+security-policy-implementation %(security_implementation)s\n+verbose-security %(verbose_security)s\n+%(default_zpublisher_encoding)s\n+%(port_base)s\n+%(effective_user)s\n+%(http_header_max_length)s\n+%(ip_address)s\n+%(zserver_threads)s\n+%(environment_vars)s\n+%(deprecation_warnings)s\n+\n+%(mailinglogger_import)s\n+\n+%(event_log)s\n+\n+%(access_event_log)s\n+\n+%(http_address)s\n+%(ftp_address)s\n+%(webdav_address)s\n+%(icp_address)s\n+\n+<zodb_db main>\n+    # Main database\n+    %(zodb_cache_size)s\n+    %(zodb_cache_size_bytes)s\n+%(storage_snippet)s\n+    mount-point /\n+</zodb_db>\n+\n+%(zodb_tmp_storage)s\n+\n+pid-filename %(pid_file)s\n+lock-filename %(lock_file)s\n+%(python_check_interval)s\n+%(enable_products)s\n+\n+%(zope_conf_additional)s\n'

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-08-13T12:57:55+02:00
Author: Andreas Jung√Ç (zopyx) <info@zopyx.com>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/e25f9bc759fa5b07607e8da9aeebd5ea8fc7f21f

moved templates out of recipe.py

Files changed:
M src/plone/recipe/zope2instance/recipe.py

b'diff --git a/src/plone/recipe/zope2instance/recipe.py b/src/plone/recipe/zope2instance/recipe.py\nindex 58d87b9..cab2cbc 100644\n--- a/src/plone/recipe/zope2instance/recipe.py\n+++ b/src/plone/recipe/zope2instance/recipe.py\n@@ -981,387 +981,10 @@ def render_file_storage(self, file_storage, blob_storage,\n         return blob_storage_template % (blob_storage, storage)\n \n \n-# Storage snippets for zope.conf template\n-file_storage_template = """\n-    # FileStorage database\n-    <filestorage>\n-      path %s\n-    </filestorage>\n-"""\n-\n-zlib_storage_template = """\n-    %%import zc.zlibstorage\n-    # ZlibStorage wrapper\n-    <zlibstorage>\n-      compress %s\n-%s\n-    </zlibstorage>\n-"""\n-\n-demo_storage_template = """\n-    # DemoStorage\n-    <demostorage>\n-%s\n-    </demostorage>\n-"""\n-\n-before_storage_template = """\n-    %%%%import zc.beforestorage\n-    # BeforeStorage\n-    <before>\n-      before %s\n-  %%s\n-    </before>\n-"""\n-\n-demo_storage2_template = """\n-    # DemoStorage\n-    <demostorage>\n-%s\n-%s\n-    </demostorage>\n-"""\n-\n-rel_storage_template = """\n-    %%import relstorage\n-    <relstorage>\n-%(rs_opts)s\n-        <%(type)s>\n-%(db_opts)s\n-        </%(type)s>\n-    </relstorage>\n-"""\n-\n-blob_storage_template = """\n-    # Blob-enabled FileStorage database\n-    <blobstorage>\n-      blob-dir %s\n-%s\n-    </blobstorage>\n-"""\n-\n-zeo_authentication_template = """\n-    realm %(realm)s\n-      username %(username)s\n-      password %(password)s\n-""".strip()\n-\n-zeo_address_list_template = """\n-      server %(zeo_address)s\n-"""\n-\n-zeo_storage_template = """\n-    # ZEOStorage database\n-    <zeoclient>\n-      read-only %(read_only)s\n-      %(zeo_client_read_only_fallback)s\n-      %(zeo_address_list)s\n-      storage %(zeo_storage)s\n-      name zeostorage\n-      cache-size %(zeo_client_cache_size)s\n-      %(zeo_authentication)s\n-      %(zeo_var_dir)s\n-      %(zeo_client_client)s\n-      %(zeo_client_min_disconnect_poll)s\n-      %(zeo_client_max_disconnect_poll)s\n-      %(zeo_client_drop_cache_rather_verify)s\n-    </zeoclient>\n-""".strip()\n-\n-zeo_blob_storage_template = """\n-    # Blob-enabled ZEOStorage database\n-    <zeoclient>\n-      read-only %(read_only)s\n-      %(zeo_client_read_only_fallback)s\n-      blob-dir %(blob_storage)s\n-      shared-blob-dir %(shared_blob_dir)s\n-      %(zeo_address_list)s\n-      storage %(zeo_storage)s\n-      name zeostorage\n-      cache-size %(zeo_client_cache_size)s\n-      %(zeo_client_blob_cache_size)s\n-      %(zeo_client_blob_cache_size_check)s\n-      %(zeo_authentication)s\n-      %(zeo_var_dir)s\n-      %(zeo_client_client)s\n-      %(zeo_client_min_disconnect_poll)s\n-      %(zeo_client_max_disconnect_poll)s\n-      %(zeo_client_drop_cache_rather_verify)s\n-    </zeoclient>\n-""".strip()\n-\n-zodb_temporary_storage_template = """\n-<zodb_db temporary>\n-    # Temporary storage database (for sessions)\n-    <temporarystorage>\n-      name temporary storage for sessioning\n-    </temporarystorage>\n-    mount-point /temp_folder\n-    container-class Products.TemporaryFolder.TemporaryContainer\n-</zodb_db>\n-""".strip()\n-\n-debug_exceptions_template = """\\\n-debug-exceptions %s\n-"""\n-\n-http_force_connection_close_template = """\\\n-  force-connection-close %s\n-""".rstrip()\n-\n-http_fast_listen_template = """\\\n-  # Set to off to defer opening of the HTTP socket until the end of the\n-  # startup phase:\n-  fast-listen %s\n-""".rstrip()\n-\n-event_logfile = """\n-  <logfile>\n-    path %(event_logfile)s\n-    level %(event_log_level)s\n-    %(event_log_rotate)s\n-  </logfile>\n-""".strip()\n-\n-access_event_logfile = """\n-  <logfile>\n-    path %(z_log)s\n-    format %%(message)s\n-    %(access_log_rotate)s\n-  </logfile>\n-""".strip()\n-\n-http_server_template = """\n-<http-server>\n-  address %(http_address)s\n-%(http_force_connection_close)s\n-%(http_fast_listen)s\n-</http-server>\n-"""\n-\n-ftp_server_template = """\n-<ftp-server>\n-  # valid key is "address"\n-  address %s\n-</ftp-server>\n-"""\n-\n-icp_server_template = """\n-<icp-server>\n-  # valid key is "address"\n-  address %s\n-</icp-server>\n-"""\n-\n-webdav_server_template = """\n-<webdav-source-server>\n-  address %s\n-  force-connection-close %s\n-</webdav-source-server>\n-"""\n-\n-environment_template = """\n-<environment>\n-    %s\n-</environment>\n-"""\n-\n-# The template used to build zope.conf\n-zope_conf_template = """\\\n-%(imports_lines)s\n-%%define INSTANCEHOME %(instance_home)s\n-instancehome $INSTANCEHOME\n-%%define CLIENTHOME %(client_home)s\n-clienthome $CLIENTHOME\n-%(paths_lines)s\n-%(products_lines)s\n-debug-mode %(debug_mode)s\n-security-policy-implementation %(security_implementation)s\n-verbose-security %(verbose_security)s\n-%(default_zpublisher_encoding)s\n-%(port_base)s\n-%(effective_user)s\n-%(http_header_max_length)s\n-%(ip_address)s\n-%(zserver_threads)s\n-%(environment_vars)s\n-%(deprecation_warnings)s\n-\n-%(mailinglogger_import)s\n-\n-%(event_log)s\n-\n-%(access_event_log)s\n-\n-%(http_address)s\n-%(ftp_address)s\n-%(webdav_address)s\n-%(icp_address)s\n-\n-<zodb_db main>\n-    # Main database\n-    %(zodb_cache_size)s\n-    %(zodb_cache_size_bytes)s\n-%(storage_snippet)s\n-    mount-point /\n-</zodb_db>\n-\n-%(zodb_tmp_storage)s\n-\n-pid-filename %(pid_file)s\n-lock-filename %(lock_file)s\n-%(python_check_interval)s\n-%(enable_products)s\n-\n-%(zope_conf_additional)s\n-"""\n-\n-wsgi_conf_template = """\\\n-%(imports_lines)s\n-%%define INSTANCEHOME %(instance_home)s\n-instancehome $INSTANCEHOME\n-%%define CLIENTHOME %(client_home)s\n-clienthome $CLIENTHOME\n-%(products_lines)s\n-debug-mode %(debug_mode)s\n-%(debug_exceptions)s\n-security-policy-implementation %(security_implementation)s\n-verbose-security %(verbose_security)s\n-%(default_zpublisher_encoding)s\n-%(port_base)s\n-%(environment_vars)s\n-\n-%(mailinglogger_import)s\n-\n-<zodb_db main>\n-    # Main database\n-    %(zodb_cache_size)s\n-    %(zodb_cache_size_bytes)s\n-%(storage_snippet)s\n-    mount-point /\n-</zodb_db>\n-\n-%(zodb_tmp_storage)s\n-\n-%(python_check_interval)s\n-\n-%(zope_conf_additional)s\n-"""\n-\n-event_log_template = """\\\n-<eventlog>\n-  %(mailinglogger_config)s\n-  level %(event_log_level)s\n-  %(event_log)s\n-</eventlog>\n-"""\n-\n-access_log_template = """\\\n-<logger access>\n-  level %(z_log_level)s\n-  %(access_event_log)s\n-</logger>\n-"""\n-\n-# Template used for plone.resource directory\n-resources_zcml = """\\\n-<configure xmlns="http://namespaces.zope.org/zope"\n-           xmlns:plone="http://namespaces.plone.org/plone">\n-    <include package="plone.resource" file="meta.zcml"/>\n-    <plone:static directory="%(directory)s"/>\n-</configure>\n-"""\n-\n-# Template used for locales directory\n-locales_zcml = """\\\n-<configure xmlns="http://namespaces.zope.org/zope"\n-           xmlns:i18n="http://namespaces.zope.org/i18n">\n-    <i18n:registerTranslations directory="%(directory)s" />\n-</configure>\n-"""\n-\n-# Template used for additional ZCML\n-additional_zcml_template = """\\\n-<configure xmlns="http://namespaces.zope.org/zope">\n-    %s\n-</configure>\n-"""\n-\n-wsgi_ini_template = """\\\n-[server:main]\n-paste.server_factory = plone.recipe.zope2instance:main\n-use = egg:plone.recipe.zope2instance#main\n-%(fast-listen)slisten = %(http_address)s\n-threads = %(threads)s\n-\n-[app:zope]\n-use = egg:Zope#main\n-zope_conf = %(location)s/etc/zope.conf\n-\n-[filter:translogger]\n-use = egg:Paste#translogger\n-setup_console_handler = False\n-\n-[pipeline:main]\n-pipeline =\n-    %(pipeline)s\n-\n-[loggers]\n-keys = root, plone, waitress.queue, waitress, wsgi\n-\n-[handlers]\n-keys = console, accesslog, eventlog\n-\n-[formatters]\n-keys = generic, message\n-\n-[logger_root]\n-level = %(eventlog_level)s\n-handlers = %(root_handlers)s\n-\n-[logger_plone]\n-level = %(eventlog_level)s\n-handlers = %(event_handlers)s\n-qualname = plone\n-\n-[logger_waitress.queue]\n-level = INFO\n-handlers = eventlog\n-qualname = waitress.queue\n-propagate = 0\n-\n-[logger_waitress]\n-level = %(eventlog_level)s\n-handlers = %(event_handlers)s\n-qualname = waitress\n-\n-[logger_wsgi]\n-level = %(accesslog_level)s\n-handlers = accesslog\n-qualname = wsgi\n-propagate = 0\n-\n-[handler_console]\n-class = StreamHandler\n-args = (sys.stderr,)\n-level = NOTSET\n-formatter = generic\n-\n-[handler_accesslog]\n-class = FileHandler\n-args = (\'%(accesslog_name)s\',\'a\')\n-level = %(accesslog_level)s\n-formatter = message\n-\n-[handler_eventlog]\n-class = FileHandler\n-args = (\'%(eventlog_name)s\', \'a\')\n-level = NOTSET\n-formatter = generic\n-\n-[formatter_generic]\n-format = %%(asctime)s %%(levelname)-7.7s [%%(name)s:%%(lineno)s][%%(threadName)s] %%(message)s\n-\n-[formatter_message]\n-format = %%(message)s\n-"""  # noqa: E501\n+cwd = os.path.dirname(__file__)\n+templates_dir = os.path.join(cwd, \'templates\')\n+for name in os.listdir(templates_dir):\n+    fn = os.path.join(templates_dir, name)\n+    with open(fn) as fp:\n+        text = fp.read()\n+        globals()[name] = text\n'

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-08-13T13:23:40+02:00
Author: Andreas Jung√Ç (zopyx) <info@zopyx.com>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/4977fd5421839f2253dd6729063cd17cc96d8418

support for custom `wsgi-ini-template` option

Files changed:
M src/plone/recipe/zope2instance/recipe.py

b"diff --git a/src/plone/recipe/zope2instance/recipe.py b/src/plone/recipe/zope2instance/recipe.py\nindex cab2cbc..1e47199 100644\n--- a/src/plone/recipe/zope2instance/recipe.py\n+++ b/src/plone/recipe/zope2instance/recipe.py\n@@ -750,18 +750,28 @@ def build_wsgi_ini(self):\n             pipeline = '\\n    '.join(\n                 ['translogger', 'egg:Zope#httpexceptions', 'zope'])\n         options = {\n-            'location': options['location'],\n-            'http_address': listen,\n-            'threads': options.get('threads', 4),\n-            'fast-listen': fast,\n-            'eventlog_name': eventlog_name,\n-            'root_handlers': root_handlers,\n-            'event_handlers': event_handlers,\n+            'accesslog_level': accesslog_level,\n             'accesslog_name': accesslog_name,\n-            'pipeline': pipeline,\n+            'event_handlers': event_handlers,\n             'eventlog_level': eventlog_level,\n-            'accesslog_level': accesslog_level,\n+            'eventlog_name': eventlog_name,\n+            'fast-listen': fast,\n+            'http_address': listen,\n+            'location': options['location'],\n+            'pipeline': pipeline,\n+            'root_handlers': root_handlers,\n+            'threads': options.get('threads', 4),\n         }\n+\n+        global wsgi_ini_template\n+        wsgi_ini_template_path = self.options.get('wsgi-ini-template')\n+        if wsgi_ini_template_path:\n+            try:\n+                with open(wsgi_ini_template_path) as fp:\n+                    wsgi_ini_template = fp.read()\n+            except IOError:\n+                raise\n+\n         wsgi_ini = wsgi_ini_template % options\n         with open(wsgi_ini_path, 'w') as f:\n             f.write(wsgi_ini)\n"

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-08-13T13:40:46+02:00
Author: Andreas Jung√Ç (zopyx) <info@zopyx.com>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/e8ef083b3e7328ec9f009c7202745cce7f093957

added event-log-handler and access-log-handler options (default:
FileHandler)

Files changed:
M src/plone/recipe/zope2instance/recipe.py
M src/plone/recipe/zope2instance/templates/wsgi_ini_template

b"diff --git a/src/plone/recipe/zope2instance/recipe.py b/src/plone/recipe/zope2instance/recipe.py\nindex 1e47199..ca82f24 100644\n--- a/src/plone/recipe/zope2instance/recipe.py\n+++ b/src/plone/recipe/zope2instance/recipe.py\n@@ -725,6 +725,8 @@ def build_wsgi_ini(self):\n             (var_dir, 'log', '{}.log'.format(self.name),))\n         eventlog_name = options.get('event-log', default_eventlog)\n         eventlog_level = options.get('event-log-level', 'INFO')\n+        eventlog_handler = options.get('event-log-handler', 'FileHandler')\n+\n \n         if eventlog_name.lower() == 'disable':\n             root_handlers = 'console'\n@@ -742,6 +744,7 @@ def build_wsgi_ini(self):\n         accesslog_level = options.get(\n             'access-log-level',\n             options.get('z2-log-level', 'INFO'))\n+        accesslog_handler = options.get('access-log-handler', 'FileHandler')\n \n         if accesslog_name.lower() == 'disable':\n             pipeline = '\\n    '.join(['egg:Zope#httpexceptions', 'zope'])\n@@ -751,8 +754,10 @@ def build_wsgi_ini(self):\n                 ['translogger', 'egg:Zope#httpexceptions', 'zope'])\n         options = {\n             'accesslog_level': accesslog_level,\n+            'accesslog_handler': accesslog_handler,\n             'accesslog_name': accesslog_name,\n             'event_handlers': event_handlers,\n+            'eventlog_handler': eventlog_handler,\n             'eventlog_level': eventlog_level,\n             'eventlog_name': eventlog_name,\n             'fast-listen': fast,\ndiff --git a/src/plone/recipe/zope2instance/templates/wsgi_ini_template b/src/plone/recipe/zope2instance/templates/wsgi_ini_template\nindex 7ed1869..d6f8bd5 100644\n--- a/src/plone/recipe/zope2instance/templates/wsgi_ini_template\n+++ b/src/plone/recipe/zope2instance/templates/wsgi_ini_template\n@@ -58,13 +58,13 @@ level = NOTSET\n formatter = generic\n \n [handler_accesslog]\n-class = FileHandler\n+class = %(accesslog_handler)s\n args = ('%(accesslog_name)s','a')\n level = %(accesslog_level)s\n formatter = message\n \n [handler_eventlog]\n-class = FileHandler\n+class = %(eventlog_handler)s\n args = ('%(eventlog_name)s', 'a')\n level = NOTSET\n formatter = generic\n"

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-08-13T15:51:48+02:00
Author: Andreas Jung√Ç (zopyx) <info@zopyx.com>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/c2d150b0b4f5e2fc69bb55e5af6bb969ebfea59d

support for event-log-args, access-log-args

Files changed:
M src/plone/recipe/zope2instance/recipe.py
M src/plone/recipe/zope2instance/templates/wsgi_ini_template

b'diff --git a/src/plone/recipe/zope2instance/recipe.py b/src/plone/recipe/zope2instance/recipe.py\nindex ca82f24..f98a765 100644\n--- a/src/plone/recipe/zope2instance/recipe.py\n+++ b/src/plone/recipe/zope2instance/recipe.py\n@@ -726,7 +726,11 @@ def build_wsgi_ini(self):\n         eventlog_name = options.get(\'event-log\', default_eventlog)\n         eventlog_level = options.get(\'event-log-level\', \'INFO\')\n         eventlog_handler = options.get(\'event-log-handler\', \'FileHandler\')\n-\n+        eventlog_args = options.get(\'event-log-args\')\n+        if not eventlog_args:\n+            eventlog_args = \'("{}", "a")\'.format(default_eventlog)\n+        else:\n+            eventlog_args = eventlog_args.format(default_eventlog)\n \n         if eventlog_name.lower() == \'disable\':\n             root_handlers = \'console\'\n@@ -745,6 +749,11 @@ def build_wsgi_ini(self):\n             \'access-log-level\',\n             options.get(\'z2-log-level\', \'INFO\'))\n         accesslog_handler = options.get(\'access-log-handler\', \'FileHandler\')\n+        accesslog_args = options.get(\'access-log-args\')\n+        if not accesslog_args:\n+            accesslog_args = \'("{}", "a")\'.format(default_accesslog)\n+        else:\n+            accesslog_args = accesslog_args.format(default_accesslog)\n \n         if accesslog_name.lower() == \'disable\':\n             pipeline = \'\\n    \'.join([\'egg:Zope#httpexceptions\', \'zope\'])\n@@ -756,10 +765,12 @@ def build_wsgi_ini(self):\n             \'accesslog_level\': accesslog_level,\n             \'accesslog_handler\': accesslog_handler,\n             \'accesslog_name\': accesslog_name,\n+            \'accesslog_args\': accesslog_args,\n             \'event_handlers\': event_handlers,\n             \'eventlog_handler\': eventlog_handler,\n             \'eventlog_level\': eventlog_level,\n             \'eventlog_name\': eventlog_name,\n+            \'eventlog_args\': eventlog_args,\n             \'fast-listen\': fast,\n             \'http_address\': listen,\n             \'location\': options[\'location\'],\n@@ -1001,5 +1012,6 @@ def render_file_storage(self, file_storage, blob_storage,\n for name in os.listdir(templates_dir):\n     fn = os.path.join(templates_dir, name)\n     with open(fn) as fp:\n+        print(fn)\n         text = fp.read()\n         globals()[name] = text\ndiff --git a/src/plone/recipe/zope2instance/templates/wsgi_ini_template b/src/plone/recipe/zope2instance/templates/wsgi_ini_template\nindex d6f8bd5..c577d35 100644\n--- a/src/plone/recipe/zope2instance/templates/wsgi_ini_template\n+++ b/src/plone/recipe/zope2instance/templates/wsgi_ini_template\n@@ -59,13 +59,13 @@ formatter = generic\n \n [handler_accesslog]\n class = %(accesslog_handler)s\n-args = (\'%(accesslog_name)s\',\'a\')\n+args = %(accesslog_args)s\n level = %(accesslog_level)s\n formatter = message\n \n [handler_eventlog]\n class = %(eventlog_handler)s\n-args = (\'%(eventlog_name)s\', \'a\')\n+args = %(eventlog_args)s\n level = NOTSET\n formatter = generic\n \n'

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-08-13T16:10:03+02:00
Author: Andreas Jung√Ç (zopyx) <info@zopyx.com>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/8ea434fc9ac229d34d9dad9d63b333f9e673ebf4

added support for kwargs parameters

Files changed:
M src/plone/recipe/zope2instance/recipe.py
M src/plone/recipe/zope2instance/templates/wsgi_ini_template

b'diff --git a/src/plone/recipe/zope2instance/recipe.py b/src/plone/recipe/zope2instance/recipe.py\nindex f98a765..e860805 100644\n--- a/src/plone/recipe/zope2instance/recipe.py\n+++ b/src/plone/recipe/zope2instance/recipe.py\n@@ -726,6 +726,7 @@ def build_wsgi_ini(self):\n         eventlog_name = options.get(\'event-log\', default_eventlog)\n         eventlog_level = options.get(\'event-log-level\', \'INFO\')\n         eventlog_handler = options.get(\'event-log-handler\', \'FileHandler\')\n+        eventlog_kwargs = options.get(\'event-log-kwargs\', \'{}\')\n         eventlog_args = options.get(\'event-log-args\')\n         if not eventlog_args:\n             eventlog_args = \'("{}", "a")\'.format(default_eventlog)\n@@ -749,6 +750,7 @@ def build_wsgi_ini(self):\n             \'access-log-level\',\n             options.get(\'z2-log-level\', \'INFO\'))\n         accesslog_handler = options.get(\'access-log-handler\', \'FileHandler\')\n+        accesslog_kwargs = options.get(\'access-log-kwargs\', \'{}\')\n         accesslog_args = options.get(\'access-log-args\')\n         if not accesslog_args:\n             accesslog_args = \'("{}", "a")\'.format(default_accesslog)\n@@ -766,11 +768,13 @@ def build_wsgi_ini(self):\n             \'accesslog_handler\': accesslog_handler,\n             \'accesslog_name\': accesslog_name,\n             \'accesslog_args\': accesslog_args,\n+            \'accesslog_kwargs\': accesslog_kwargs,\n             \'event_handlers\': event_handlers,\n             \'eventlog_handler\': eventlog_handler,\n             \'eventlog_level\': eventlog_level,\n             \'eventlog_name\': eventlog_name,\n             \'eventlog_args\': eventlog_args,\n+            \'eventlog_kwargs\': eventlog_kwargs,\n             \'fast-listen\': fast,\n             \'http_address\': listen,\n             \'location\': options[\'location\'],\n@@ -1012,6 +1016,5 @@ def render_file_storage(self, file_storage, blob_storage,\n for name in os.listdir(templates_dir):\n     fn = os.path.join(templates_dir, name)\n     with open(fn) as fp:\n-        print(fn)\n         text = fp.read()\n         globals()[name] = text\ndiff --git a/src/plone/recipe/zope2instance/templates/wsgi_ini_template b/src/plone/recipe/zope2instance/templates/wsgi_ini_template\nindex c577d35..67c6686 100644\n--- a/src/plone/recipe/zope2instance/templates/wsgi_ini_template\n+++ b/src/plone/recipe/zope2instance/templates/wsgi_ini_template\n@@ -60,12 +60,14 @@ formatter = generic\n [handler_accesslog]\n class = %(accesslog_handler)s\n args = %(accesslog_args)s\n+kwargs = %(accesslog_kwargs)s\n level = %(accesslog_level)s\n formatter = message\n \n [handler_eventlog]\n class = %(eventlog_handler)s\n args = %(eventlog_args)s\n+kwargs = %(eventlog_kwargs)s\n level = NOTSET\n formatter = generic\n \n'

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-08-13T16:14:28+02:00
Author: Andreas Jung√Ç (zopyx) <info@zopyx.com>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/4656b7ff26cb3e68fddf5c4dd829c0b43cc76c83

inline templates restored

Files changed:
M src/plone/recipe/zope2instance/recipe.py
D src/plone/recipe/zope2instance/templates/access_event_logfile
D src/plone/recipe/zope2instance/templates/access_log_template
D src/plone/recipe/zope2instance/templates/additional_zcml_template
D src/plone/recipe/zope2instance/templates/before_storage_template
D src/plone/recipe/zope2instance/templates/blob_storage_template
D src/plone/recipe/zope2instance/templates/debug_exceptions_template
D src/plone/recipe/zope2instance/templates/demo_storage2_template
D src/plone/recipe/zope2instance/templates/demo_storage_template
D src/plone/recipe/zope2instance/templates/environment_template
D src/plone/recipe/zope2instance/templates/event_log_template
D src/plone/recipe/zope2instance/templates/event_logfile
D src/plone/recipe/zope2instance/templates/file_storage_template
D src/plone/recipe/zope2instance/templates/ftp_server_template
D src/plone/recipe/zope2instance/templates/http_fast_listen_template
D src/plone/recipe/zope2instance/templates/http_force_connection_close_template
D src/plone/recipe/zope2instance/templates/http_server_template
D src/plone/recipe/zope2instance/templates/icp_server_template
D src/plone/recipe/zope2instance/templates/locales_zcml
D src/plone/recipe/zope2instance/templates/rel_storage_template
D src/plone/recipe/zope2instance/templates/resources_zcml
D src/plone/recipe/zope2instance/templates/webdav_server_template
D src/plone/recipe/zope2instance/templates/wsgi_conf_template
D src/plone/recipe/zope2instance/templates/wsgi_ini_template
D src/plone/recipe/zope2instance/templates/zeo_address_list_template
D src/plone/recipe/zope2instance/templates/zeo_authentication_template
D src/plone/recipe/zope2instance/templates/zeo_blob_storage_template
D src/plone/recipe/zope2instance/templates/zeo_storage_template
D src/plone/recipe/zope2instance/templates/zlib_storage_template
D src/plone/recipe/zope2instance/templates/zodb_temporary_storage_template
D src/plone/recipe/zope2instance/templates/zope_conf_template

b'diff --git a/src/plone/recipe/zope2instance/recipe.py b/src/plone/recipe/zope2instance/recipe.py\nindex e860805..5021dcd 100644\n--- a/src/plone/recipe/zope2instance/recipe.py\n+++ b/src/plone/recipe/zope2instance/recipe.py\n@@ -1011,10 +1011,389 @@ def render_file_storage(self, file_storage, blob_storage,\n         return blob_storage_template % (blob_storage, storage)\n \n \n-cwd = os.path.dirname(__file__)\n-templates_dir = os.path.join(cwd, \'templates\')\n-for name in os.listdir(templates_dir):\n-    fn = os.path.join(templates_dir, name)\n-    with open(fn) as fp:\n-        text = fp.read()\n-        globals()[name] = text\n+# Storage snippets for zope.conf template\n+file_storage_template = """\n+    # FileStorage database\n+    <filestorage>\n+      path %s\n+    </filestorage>\n+"""\n+\n+zlib_storage_template = """\n+    %%import zc.zlibstorage\n+    # ZlibStorage wrapper\n+    <zlibstorage>\n+      compress %s\n+%s\n+    </zlibstorage>\n+"""\n+\n+demo_storage_template = """\n+    # DemoStorage\n+    <demostorage>\n+%s\n+    </demostorage>\n+"""\n+\n+before_storage_template = """\n+    %%%%import zc.beforestorage\n+    # BeforeStorage\n+    <before>\n+      before %s\n+  %%s\n+    </before>\n+"""\n+\n+demo_storage2_template = """\n+    # DemoStorage\n+    <demostorage>\n+%s\n+%s\n+    </demostorage>\n+"""\n+\n+rel_storage_template = """\n+    %%import relstorage\n+    <relstorage>\n+%(rs_opts)s\n+        <%(type)s>\n+%(db_opts)s\n+        </%(type)s>\n+    </relstorage>\n+"""\n+\n+blob_storage_template = """\n+    # Blob-enabled FileStorage database\n+    <blobstorage>\n+      blob-dir %s\n+%s\n+    </blobstorage>\n+"""\n+\n+zeo_authentication_template = """\n+    realm %(realm)s\n+      username %(username)s\n+      password %(password)s\n+""".strip()\n+\n+zeo_address_list_template = """\n+      server %(zeo_address)s\n+"""\n+\n+zeo_storage_template = """\n+    # ZEOStorage database\n+    <zeoclient>\n+      read-only %(read_only)s\n+      %(zeo_client_read_only_fallback)s\n+      %(zeo_address_list)s\n+      storage %(zeo_storage)s\n+      name zeostorage\n+      cache-size %(zeo_client_cache_size)s\n+      %(zeo_authentication)s\n+      %(zeo_var_dir)s\n+      %(zeo_client_client)s\n+      %(zeo_client_min_disconnect_poll)s\n+      %(zeo_client_max_disconnect_poll)s\n+      %(zeo_client_drop_cache_rather_verify)s\n+    </zeoclient>\n+""".strip()\n+\n+zeo_blob_storage_template = """\n+    # Blob-enabled ZEOStorage database\n+    <zeoclient>\n+      read-only %(read_only)s\n+      %(zeo_client_read_only_fallback)s\n+      blob-dir %(blob_storage)s\n+      shared-blob-dir %(shared_blob_dir)s\n+      %(zeo_address_list)s\n+      storage %(zeo_storage)s\n+      name zeostorage\n+      cache-size %(zeo_client_cache_size)s\n+      %(zeo_client_blob_cache_size)s\n+      %(zeo_client_blob_cache_size_check)s\n+      %(zeo_authentication)s\n+      %(zeo_var_dir)s\n+      %(zeo_client_client)s\n+      %(zeo_client_min_disconnect_poll)s\n+      %(zeo_client_max_disconnect_poll)s\n+      %(zeo_client_drop_cache_rather_verify)s\n+    </zeoclient>\n+""".strip()\n+\n+zodb_temporary_storage_template = """\n+<zodb_db temporary>\n+    # Temporary storage database (for sessions)\n+    <temporarystorage>\n+      name temporary storage for sessioning\n+    </temporarystorage>\n+    mount-point /temp_folder\n+    container-class Products.TemporaryFolder.TemporaryContainer\n+</zodb_db>\n+""".strip()\n+\n+debug_exceptions_template = """\\\n+debug-exceptions %s\n+"""\n+\n+http_force_connection_close_template = """\\\n+  force-connection-close %s\n+""".rstrip()\n+\n+http_fast_listen_template = """\\\n+  # Set to off to defer opening of the HTTP socket until the end of the\n+  # startup phase:\n+  fast-listen %s\n+""".rstrip()\n+\n+event_logfile = """\n+  <logfile>\n+    path %(event_logfile)s\n+    level %(event_log_level)s\n+    %(event_log_rotate)s\n+  </logfile>\n+""".strip()\n+\n+access_event_logfile = """\n+  <logfile>\n+    path %(z_log)s\n+    format %%(message)s\n+    %(access_log_rotate)s\n+  </logfile>\n+""".strip()\n+\n+http_server_template = """\n+<http-server>\n+  address %(http_address)s\n+%(http_force_connection_close)s\n+%(http_fast_listen)s\n+</http-server>\n+"""\n+\n+ftp_server_template = """\n+<ftp-server>\n+  # valid key is "address"\n+  address %s\n+</ftp-server>\n+"""\n+\n+icp_server_template = """\n+<icp-server>\n+  # valid key is "address"\n+  address %s\n+</icp-server>\n+"""\n+\n+webdav_server_template = """\n+<webdav-source-server>\n+  address %s\n+  force-connection-close %s\n+</webdav-source-server>\n+"""\n+\n+environment_template = """\n+<environment>\n+    %s\n+</environment>\n+"""\n+\n+# The template used to build zope.conf\n+zope_conf_template = """\\\n+%(imports_lines)s\n+%%define INSTANCEHOME %(instance_home)s\n+instancehome $INSTANCEHOME\n+%%define CLIENTHOME %(client_home)s\n+clienthome $CLIENTHOME\n+%(paths_lines)s\n+%(products_lines)s\n+debug-mode %(debug_mode)s\n+security-policy-implementation %(security_implementation)s\n+verbose-security %(verbose_security)s\n+%(default_zpublisher_encoding)s\n+%(port_base)s\n+%(effective_user)s\n+%(http_header_max_length)s\n+%(ip_address)s\n+%(zserver_threads)s\n+%(environment_vars)s\n+%(deprecation_warnings)s\n+\n+%(mailinglogger_import)s\n+\n+%(event_log)s\n+\n+%(access_event_log)s\n+\n+%(http_address)s\n+%(ftp_address)s\n+%(webdav_address)s\n+%(icp_address)s\n+\n+<zodb_db main>\n+    # Main database\n+    %(zodb_cache_size)s\n+    %(zodb_cache_size_bytes)s\n+%(storage_snippet)s\n+    mount-point /\n+</zodb_db>\n+\n+%(zodb_tmp_storage)s\n+\n+pid-filename %(pid_file)s\n+lock-filename %(lock_file)s\n+%(python_check_interval)s\n+%(enable_products)s\n+\n+%(zope_conf_additional)s\n+"""\n+\n+wsgi_conf_template = """\\\n+%(imports_lines)s\n+%%define INSTANCEHOME %(instance_home)s\n+instancehome $INSTANCEHOME\n+%%define CLIENTHOME %(client_home)s\n+clienthome $CLIENTHOME\n+%(products_lines)s\n+debug-mode %(debug_mode)s\n+%(debug_exceptions)s\n+security-policy-implementation %(security_implementation)s\n+verbose-security %(verbose_security)s\n+%(default_zpublisher_encoding)s\n+%(port_base)s\n+%(environment_vars)s\n+\n+%(mailinglogger_import)s\n+\n+<zodb_db main>\n+    # Main database\n+    %(zodb_cache_size)s\n+    %(zodb_cache_size_bytes)s\n+%(storage_snippet)s\n+    mount-point /\n+</zodb_db>\n+\n+%(zodb_tmp_storage)s\n+\n+%(python_check_interval)s\n+\n+%(zope_conf_additional)s\n+"""\n+\n+event_log_template = """\\\n+<eventlog>\n+  %(mailinglogger_config)s\n+  level %(event_log_level)s\n+  %(event_log)s\n+</eventlog>\n+"""\n+\n+access_log_template = """\\\n+<logger access>\n+  level %(z_log_level)s\n+  %(access_event_log)s\n+</logger>\n+"""\n+\n+# Template used for plone.resource directory\n+resources_zcml = """\\\n+<configure xmlns="http://namespaces.zope.org/zope"\n+           xmlns:plone="http://namespaces.plone.org/plone">\n+    <include package="plone.resource" file="meta.zcml"/>\n+    <plone:static directory="%(directory)s"/>\n+</configure>\n+"""\n+\n+# Template used for locales directory\n+locales_zcml = """\\\n+<configure xmlns="http://namespaces.zope.org/zope"\n+           xmlns:i18n="http://namespaces.zope.org/i18n">\n+    <i18n:registerTranslations directory="%(directory)s" />\n+</configure>\n+"""\n+\n+# Template used for additional ZCML\n+additional_zcml_template = """\\\n+<configure xmlns="http://namespaces.zope.org/zope">\n+    %s\n+</configure>\n+"""\n+\n+wsgi_ini_template = """\\\n+[server:main]\n+paste.server_factory = plone.recipe.zope2instance:main\n+use = egg:plone.recipe.zope2instance#main\n+%(fast-listen)slisten = %(http_address)s\n+threads = %(threads)s\n+\n+[app:zope]\n+use = egg:Zope#main\n+zope_conf = %(location)s/etc/zope.conf\n+\n+[filter:translogger]\n+use = egg:Paste#translogger\n+setup_console_handler = False\n+\n+[pipeline:main]\n+pipeline =\n+    %(pipeline)s\n+\n+[loggers]\n+keys = root, plone, waitress.queue, waitress, wsgi\n+\n+[handlers]\n+keys = console, accesslog, eventlog\n+\n+[formatters]\n+keys = generic, message\n+\n+[logger_root]\n+level = %(eventlog_level)s\n+handlers = %(root_handlers)s\n+\n+[logger_plone]\n+level = %(eventlog_level)s\n+handlers = %(event_handlers)s\n+qualname = plone\n+\n+[logger_waitress.queue]\n+level = INFO\n+handlers = eventlog\n+qualname = waitress.queue\n+propagate = 0\n+\n+[logger_waitress]\n+level = %(eventlog_level)s\n+handlers = %(event_handlers)s\n+qualname = waitress\n+\n+[logger_wsgi]\n+level = %(accesslog_level)s\n+handlers = accesslog\n+qualname = wsgi\n+propagate = 0\n+\n+[handler_console]\n+class = StreamHandler\n+args = (sys.stderr,)\n+level = NOTSET\n+formatter = generic\n+\n+[handler_accesslog]\n+class = %(accesslog_handler)s\n+args = %(accesslog_args)s\n+kwargs = %(accesslog_kwargs)s\n+level = %(accesslog_level)s\n+formatter = message\n+\n+[handler_eventlog]\n+class = %(eventlog_handler)s\n+args = %(eventlog_args)s\n+kwargs = %(eventlog_kwargs)s\n+level = NOTSET\n+formatter = generic\n+\n+[formatter_generic]\n+format = %%(asctime)s %%(levelname)-7.7s [%%(name)s:%%(lineno)s][%%(threadName)s] %%(message)s\n+\n+[formatter_message]\n+format = %%(message)s\n+"""  # noqa: E501\ndiff --git a/src/plone/recipe/zope2instance/templates/access_event_logfile b/src/plone/recipe/zope2instance/templates/access_event_logfile\ndeleted file mode 100644\nindex 9e419d1..0000000\n--- a/src/plone/recipe/zope2instance/templates/access_event_logfile\n+++ /dev/null\n@@ -1,5 +0,0 @@\n-<logfile>\n-    path %(z_log)s\n-    format %%(message)s\n-    %(access_log_rotate)s\n-  </logfile>\n\\ No newline at end of file\ndiff --git a/src/plone/recipe/zope2instance/templates/access_log_template b/src/plone/recipe/zope2instance/templates/access_log_template\ndeleted file mode 100644\nindex 82889f1..0000000\n--- a/src/plone/recipe/zope2instance/templates/access_log_template\n+++ /dev/null\n@@ -1,4 +0,0 @@\n-<logger access>\n-  level %(z_log_level)s\n-  %(access_event_log)s\n-</logger>\ndiff --git a/src/plone/recipe/zope2instance/templates/additional_zcml_template b/src/plone/recipe/zope2instance/templates/additional_zcml_template\ndeleted file mode 100644\nindex 0d238be..0000000\n--- a/src/plone/recipe/zope2instance/templates/additional_zcml_template\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-<configure xmlns="http://namespaces.zope.org/zope">\n-    %s\n-</configure>\ndiff --git a/src/plone/recipe/zope2instance/templates/before_storage_template b/src/plone/recipe/zope2instance/templates/before_storage_template\ndeleted file mode 100644\nindex 486bd3f..0000000\n--- a/src/plone/recipe/zope2instance/templates/before_storage_template\n+++ /dev/null\n@@ -1,7 +0,0 @@\n-\n-    %%%%import zc.beforestorage\n-    # BeforeStorage\n-    <before>\n-      before %s\n-  %%s\n-    </before>\ndiff --git a/src/plone/recipe/zope2instance/templates/blob_storage_template b/src/plone/recipe/zope2instance/templates/blob_storage_template\ndeleted file mode 100644\nindex 5500fa4..0000000\n--- a/src/plone/recipe/zope2instance/templates/blob_storage_template\n+++ /dev/null\n@@ -1,6 +0,0 @@\n-\n-    # Blob-enabled FileStorage database\n-    <blobstorage>\n-      blob-dir %s\n-%s\n-    </blobstorage>\ndiff --git a/src/plone/recipe/zope2instance/templates/debug_exceptions_template b/src/plone/recipe/zope2instance/templates/debug_exceptions_template\ndeleted file mode 100644\nindex abb8063..0000000\n--- a/src/plone/recipe/zope2instance/templates/debug_exceptions_template\n+++ /dev/null\n@@ -1 +0,0 @@\n-debug-exceptions %s\ndiff --git a/src/plone/recipe/zope2instance/templates/demo_storage2_template b/src/plone/recipe/zope2instance/templates/demo_storage2_template\ndeleted file mode 100644\nindex 418e905..0000000\n--- a/src/plone/recipe/zope2instance/templates/demo_storage2_template\n+++ /dev/null\n@@ -1,6 +0,0 @@\n-\n-    # DemoStorage\n-    <demostorage>\n-%s\n-%s\n-    </demostorage>\ndiff --git a/src/plone/recipe/zope2instance/templates/demo_storage_template b/src/plone/recipe/zope2instance/templates/demo_storage_template\ndeleted file mode 100644\nindex fbd9bdc..0000000\n--- a/src/plone/recipe/zope2instance/templates/demo_storage_template\n+++ /dev/null\n@@ -1,5 +0,0 @@\n-\n-    # DemoStorage\n-    <demostorage>\n-%s\n-    </demostorage>\ndiff --git a/src/plone/recipe/zope2instance/templates/environment_template b/src/plone/recipe/zope2instance/templates/environment_template\ndeleted file mode 100644\nindex 56799ed..0000000\n--- a/src/plone/recipe/zope2instance/templates/environment_template\n+++ /dev/null\n@@ -1,4 +0,0 @@\n-\n-<environment>\n-    %s\n-</environment>\ndiff --git a/src/plone/recipe/zope2instance/templates/event_log_template b/src/plone/recipe/zope2instance/templates/event_log_template\ndeleted file mode 100644\nindex 4e528e4..0000000\n--- a/src/plone/recipe/zope2instance/templates/event_log_template\n+++ /dev/null\n@@ -1,5 +0,0 @@\n-<eventlog>\n-  %(mailinglogger_config)s\n-  level %(event_log_level)s\n-  %(event_log)s\n-</eventlog>\ndiff --git a/src/plone/recipe/zope2instance/templates/event_logfile b/src/plone/recipe/zope2instance/templates/event_logfile\ndeleted file mode 100644\nindex 413d62c..0000000\n--- a/src/plone/recipe/zope2instance/templates/event_logfile\n+++ /dev/null\n@@ -1,5 +0,0 @@\n-<logfile>\n-    path %(event_logfile)s\n-    level %(event_log_level)s\n-    %(event_log_rotate)s\n-  </logfile>\n\\ No newline at end of file\ndiff --git a/src/plone/recipe/zope2instance/templates/file_storage_template b/src/plone/recipe/zope2instance/templates/file_storage_template\ndeleted file mode 100644\nindex f266298..0000000\n--- a/src/plone/recipe/zope2instance/templates/file_storage_template\n+++ /dev/null\n@@ -1,5 +0,0 @@\n-\n-    # FileStorage database\n-    <filestorage>\n-      path %s\n-    </filestorage>\ndiff --git a/src/plone/recipe/zope2instance/templates/ftp_server_template b/src/plone/recipe/zope2instance/templates/ftp_server_template\ndeleted file mode 100644\nindex 8bdc436..0000000\n--- a/src/plone/recipe/zope2instance/templates/ftp_server_template\n+++ /dev/null\n@@ -1,5 +0,0 @@\n-\n-<ftp-server>\n-  # valid key is "address"\n-  address %s\n-</ftp-server>\ndiff --git a/src/plone/recipe/zope2instance/templates/http_fast_listen_template b/src/plone/recipe/zope2instance/templates/http_fast_listen_template\ndeleted file mode 100644\nindex 16cdf4a..0000000\n--- a/src/plone/recipe/zope2instance/templates/http_fast_listen_template\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-  # Set to off to defer opening of the HTTP socket until the end of the\n-  # startup phase:\n-  fast-listen %s\n\\ No newline at end of file\ndiff --git a/src/plone/recipe/zope2instance/templates/http_force_connection_close_template b/src/plone/recipe/zope2instance/templates/http_force_connection_close_template\ndeleted file mode 100644\nindex d926667..0000000\n--- a/src/plone/recipe/zope2instance/templates/http_force_connection_close_template\n+++ /dev/null\n@@ -1 +0,0 @@\n-  force-connection-close %s\n\\ No newline at end of file\ndiff --git a/src/plone/recipe/zope2instance/templates/http_server_template b/src/plone/recipe/zope2instance/templates/http_server_template\ndeleted file mode 100644\nindex c3f63ad..0000000\n--- a/src/plone/recipe/zope2instance/templates/http_server_template\n+++ /dev/null\n@@ -1,6 +0,0 @@\n-\n-<http-server>\n-  address %(http_address)s\n-%(http_force_connection_close)s\n-%(http_fast_listen)s\n-</http-server>\ndiff --git a/src/plone/recipe/zope2instance/templates/icp_server_template b/src/plone/recipe/zope2instance/templates/icp_server_template\ndeleted file mode 100644\nindex 7dac717..0000000\n--- a/src/plone/recipe/zope2instance/templates/icp_server_template\n+++ /dev/null\n@@ -1,5 +0,0 @@\n-\n-<icp-server>\n-  # valid key is "address"\n-  address %s\n-</icp-server>\ndiff --git a/src/plone/recipe/zope2instance/templates/locales_zcml b/src/plone/recipe/zope2instance/templates/locales_zcml\ndeleted file mode 100644\nindex 5aa1d00..0000000\n--- a/src/plone/recipe/zope2instance/templates/locales_zcml\n+++ /dev/null\n@@ -1,4 +0,0 @@\n-<configure xmlns="http://namespaces.zope.org/zope"\n-           xmlns:i18n="http://namespaces.zope.org/i18n">\n-    <i18n:registerTranslations directory="%(directory)s" />\n-</configure>\ndiff --git a/src/plone/recipe/zope2instance/templates/rel_storage_template b/src/plone/recipe/zope2instance/templates/rel_storage_template\ndeleted file mode 100644\nindex c78e5fa..0000000\n--- a/src/plone/recipe/zope2instance/templates/rel_storage_template\n+++ /dev/null\n@@ -1,8 +0,0 @@\n-\n-    %%import relstorage\n-    <relstorage>\n-%(rs_opts)s\n-        <%(type)s>\n-%(db_opts)s\n-        </%(type)s>\n-    </relstorage>\ndiff --git a/src/plone/recipe/zope2instance/templates/resources_zcml b/src/plone/recipe/zope2instance/templates/resources_zcml\ndeleted file mode 100644\nindex 2eedc5e..0000000\n--- a/src/plone/recipe/zope2instance/templates/resources_zcml\n+++ /dev/null\n@@ -1,5 +0,0 @@\n-<configure xmlns="http://namespaces.zope.org/zope"\n-           xmlns:plone="http://namespaces.plone.org/plone">\n-    <include package="plone.resource" file="meta.zcml"/>\n-    <plone:static directory="%(directory)s"/>\n-</configure>\ndiff --git a/src/plone/recipe/zope2instance/templates/webdav_server_template b/src/plone/recipe/zope2instance/templates/webdav_server_template\ndeleted file mode 100644\nindex 77f5458..0000000\n--- a/src/plone/recipe/zope2instance/templates/webdav_server_template\n+++ /dev/null\n@@ -1,5 +0,0 @@\n-\n-<webdav-source-server>\n-  address %s\n-  force-connection-close %s\n-</webdav-source-server>\ndiff --git a/src/plone/recipe/zope2instance/templates/wsgi_conf_template b/src/plone/recipe/zope2instance/templates/wsgi_conf_template\ndeleted file mode 100644\nindex 810f3c9..0000000\n--- a/src/plone/recipe/zope2instance/templates/wsgi_conf_template\n+++ /dev/null\n@@ -1,29 +0,0 @@\n-%(imports_lines)s\n-%%define INSTANCEHOME %(instance_home)s\n-instancehome $INSTANCEHOME\n-%%define CLIENTHOME %(client_home)s\n-clienthome $CLIENTHOME\n-%(products_lines)s\n-debug-mode %(debug_mode)s\n-%(debug_exceptions)s\n-security-policy-implementation %(security_implementation)s\n-verbose-security %(verbose_security)s\n-%(default_zpublisher_encoding)s\n-%(port_base)s\n-%(environment_vars)s\n-\n-%(mailinglogger_import)s\n-\n-<zodb_db main>\n-    # Main database\n-    %(zodb_cache_size)s\n-    %(zodb_cache_size_bytes)s\n-%(storage_snippet)s\n-    mount-point /\n-</zodb_db>\n-\n-%(zodb_tmp_storage)s\n-\n-%(python_check_interval)s\n-\n-%(zope_conf_additional)s\ndiff --git a/src/plone/recipe/zope2instance/templates/wsgi_ini_template b/src/plone/recipe/zope2instance/templates/wsgi_ini_template\ndeleted file mode 100644\nindex 67c6686..0000000\n--- a/src/plone/recipe/zope2instance/templates/wsgi_ini_template\n+++ /dev/null\n@@ -1,78 +0,0 @@\n-[server:main]\n-paste.server_factory = plone.recipe.zope2instance:main\n-use = egg:plone.recipe.zope2instance#main\n-%(fast-listen)slisten = %(http_address)s\n-threads = %(threads)s\n-\n-[app:zope]\n-use = egg:Zope#main\n-zope_conf = %(location)s/etc/zope.conf\n-\n-[filter:translogger]\n-use = egg:Paste#translogger\n-setup_console_handler = False\n-\n-[pipeline:main]\n-pipeline =\n-    %(pipeline)s\n-\n-[loggers]\n-keys = root, plone, waitress.queue, waitress, wsgi\n-\n-[handlers]\n-keys = console, accesslog, eventlog\n-\n-[formatters]\n-keys = generic, message\n-\n-[logger_root]\n-level = %(eventlog_level)s\n-handlers = %(root_handlers)s\n-\n-[logger_plone]\n-level = %(eventlog_level)s\n-handlers = %(event_handlers)s\n-qualname = plone\n-\n-[logger_waitress.queue]\n-level = INFO\n-handlers = eventlog\n-qualname = waitress.queue\n-propagate = 0\n-\n-[logger_waitress]\n-level = %(eventlog_level)s\n-handlers = %(event_handlers)s\n-qualname = waitress\n-\n-[logger_wsgi]\n-level = %(accesslog_level)s\n-handlers = accesslog\n-qualname = wsgi\n-propagate = 0\n-\n-[handler_console]\n-class = StreamHandler\n-args = (sys.stderr,)\n-level = NOTSET\n-formatter = generic\n-\n-[handler_accesslog]\n-class = %(accesslog_handler)s\n-args = %(accesslog_args)s\n-kwargs = %(accesslog_kwargs)s\n-level = %(accesslog_level)s\n-formatter = message\n-\n-[handler_eventlog]\n-class = %(eventlog_handler)s\n-args = %(eventlog_args)s\n-kwargs = %(eventlog_kwargs)s\n-level = NOTSET\n-formatter = generic\n-\n-[formatter_generic]\n-format = %%(asctime)s %%(levelname)-7.7s [%%(name)s:%%(lineno)s][%%(threadName)s] %%(message)s\n-\n-[formatter_message]\n-format = %%(message)s\ndiff --git a/src/plone/recipe/zope2instance/templates/zeo_address_list_template b/src/plone/recipe/zope2instance/templates/zeo_address_list_template\ndeleted file mode 100644\nindex a9abc88..0000000\n--- a/src/plone/recipe/zope2instance/templates/zeo_address_list_template\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-\n-      server %(zeo_address)s\ndiff --git a/src/plone/recipe/zope2instance/templates/zeo_authentication_template b/src/plone/recipe/zope2instance/templates/zeo_authentication_template\ndeleted file mode 100644\nindex 12dc3a0..0000000\n--- a/src/plone/recipe/zope2instance/templates/zeo_authentication_template\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-realm %(realm)s\n-      username %(username)s\n-      password %(password)s\n\\ No newline at end of file\ndiff --git a/src/plone/recipe/zope2instance/templates/zeo_blob_storage_template b/src/plone/recipe/zope2instance/templates/zeo_blob_storage_template\ndeleted file mode 100644\nindex 18ce988..0000000\n--- a/src/plone/recipe/zope2instance/templates/zeo_blob_storage_template\n+++ /dev/null\n@@ -1,19 +0,0 @@\n-# Blob-enabled ZEOStorage database\n-    <zeoclient>\n-      read-only %(read_only)s\n-      %(zeo_client_read_only_fallback)s\n-      blob-dir %(blob_storage)s\n-      shared-blob-dir %(shared_blob_dir)s\n-      %(zeo_address_list)s\n-      storage %(zeo_storage)s\n-      name zeostorage\n-      cache-size %(zeo_client_cache_size)s\n-      %(zeo_client_blob_cache_size)s\n-      %(zeo_client_blob_cache_size_check)s\n-      %(zeo_authentication)s\n-      %(zeo_var_dir)s\n-      %(zeo_client_client)s\n-      %(zeo_client_min_disconnect_poll)s\n-      %(zeo_client_max_disconnect_poll)s\n-      %(zeo_client_drop_cache_rather_verify)s\n-    </zeoclient>\n\\ No newline at end of file\ndiff --git a/src/plone/recipe/zope2instance/templates/zeo_storage_template b/src/plone/recipe/zope2instance/templates/zeo_storage_template\ndeleted file mode 100644\nindex d1a42f2..0000000\n--- a/src/plone/recipe/zope2instance/templates/zeo_storage_template\n+++ /dev/null\n@@ -1,15 +0,0 @@\n-# ZEOStorage database\n-    <zeoclient>\n-      read-only %(read_only)s\n-      %(zeo_client_read_only_fallback)s\n-      %(zeo_address_list)s\n-      storage %(zeo_storage)s\n-      name zeostorage\n-      cache-size %(zeo_client_cache_size)s\n-      %(zeo_authentication)s\n-      %(zeo_var_dir)s\n-      %(zeo_client_client)s\n-      %(zeo_client_min_disconnect_poll)s\n-      %(zeo_client_max_disconnect_poll)s\n-      %(zeo_client_drop_cache_rather_verify)s\n-    </zeoclient>\n\\ No newline at end of file\ndiff --git a/src/plone/recipe/zope2instance/templates/zlib_storage_template b/src/plone/recipe/zope2instance/templates/zlib_storage_template\ndeleted file mode 100644\nindex ef9a435..0000000\n--- a/src/plone/recipe/zope2instance/templates/zlib_storage_template\n+++ /dev/null\n@@ -1,7 +0,0 @@\n-\n-    %%import zc.zlibstorage\n-    # ZlibStorage wrapper\n-    <zlibstorage>\n-      compress %s\n-%s\n-    </zlibstorage>\ndiff --git a/src/plone/recipe/zope2instance/templates/zodb_temporary_storage_template b/src/plone/recipe/zope2instance/templates/zodb_temporary_storage_template\ndeleted file mode 100644\nindex 841fd09..0000000\n--- a/src/plone/recipe/zope2instance/templates/zodb_temporary_storage_template\n+++ /dev/null\n@@ -1,8 +0,0 @@\n-<zodb_db temporary>\n-    # Temporary storage database (for sessions)\n-    <temporarystorage>\n-      name temporary storage for sessioning\n-    </temporarystorage>\n-    mount-point /temp_folder\n-    container-class Products.TemporaryFolder.TemporaryContainer\n-</zodb_db>\n\\ No newline at end of file\ndiff --git a/src/plone/recipe/zope2instance/templates/zope_conf_template b/src/plone/recipe/zope2instance/templates/zope_conf_template\ndeleted file mode 100644\nindex 2db624b..0000000\n--- a/src/plone/recipe/zope2instance/templates/zope_conf_template\n+++ /dev/null\n@@ -1,46 +0,0 @@\n-%(imports_lines)s\n-%%define INSTANCEHOME %(instance_home)s\n-instancehome $INSTANCEHOME\n-%%define CLIENTHOME %(client_home)s\n-clienthome $CLIENTHOME\n-%(paths_lines)s\n-%(products_lines)s\n-debug-mode %(debug_mode)s\n-security-policy-implementation %(security_implementation)s\n-verbose-security %(verbose_security)s\n-%(default_zpublisher_encoding)s\n-%(port_base)s\n-%(effective_user)s\n-%(http_header_max_length)s\n-%(ip_address)s\n-%(zserver_threads)s\n-%(environment_vars)s\n-%(deprecation_warnings)s\n-\n-%(mailinglogger_import)s\n-\n-%(event_log)s\n-\n-%(access_event_log)s\n-\n-%(http_address)s\n-%(ftp_address)s\n-%(webdav_address)s\n-%(icp_address)s\n-\n-<zodb_db main>\n-    # Main database\n-    %(zodb_cache_size)s\n-    %(zodb_cache_size_bytes)s\n-%(storage_snippet)s\n-    mount-point /\n-</zodb_db>\n-\n-%(zodb_tmp_storage)s\n-\n-pid-filename %(pid_file)s\n-lock-filename %(lock_file)s\n-%(python_check_interval)s\n-%(enable_products)s\n-\n-%(zope_conf_additional)s\n'

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-08-14T04:32:13+02:00
Author: Andreas Jung (zopyx) <info@zopyx.com>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/f784b75296f566d6e94d135481f54bea5fca0e75

updated documentation

Files changed:
M README.rst

b'diff --git a/README.rst b/README.rst\nindex eca47e6..21c6be0 100644\n--- a/README.rst\n+++ b/README.rst\n@@ -311,6 +311,70 @@ access-log-custom\n   Like `event-log-custom`, a custom section for the access logger, to be able\n   to use another event logger than `logfile`. Used for ZServer only, not WSGI.\n \n+Advanced logging options for WSGI\n+---------------------------------\n+\n+For more complex logging configuration, the zope2instance recipe exposes the\n+underlaying `logging.handlers` functionality through the `access-log-handler`\n+and `event-log-handler` configuration options. This allows you to configure an\n+arbitrary logging handler for Python as defined in\n+`here <https://docs.python.org/3/library/logging.handlers.html>`_.\n+\n+The supplementary options `event-log-args`, `event-log-kwargs` and\n+`access-log-args`, `access-log-kwargs` can be used for passing positional and\n+keyword arguments to the constructor of the underlaying handler.\n+\n+access-log-handler\n+  The (dotted) name of an importable Python logging handler like\n+  `logging.handlers.RotatingFileHandler`.\n+\n+  Default: `FileHandler`\n+\n+access-log-args\n+  A python tuple which usually refers to the logging filename and opening mode\n+  of the file like `("access.log", "a")`.  Note that you a Python tuple with\n+  only one element (e.g. only the filename) must have a trailing comma like\n+  `("access.log", )` The `access-log-args` is used to specify the positional\n+  parameters for the logging handler configured through `access-log-handler`. \n+\n+  Default: `("access.log", "a")`\n+\n+access-log-kwargs\n+  A python dictionary used for passing keyword argument for the logging handler\n+  configured through `access-log-handler` e.g.  `{"when": "h", "interval": 1}`.\n+\n+  Default: `{}`\n+\n+event-log-handler\n+    Same as `access-log-handler` but for the configuration of the event log of Plone.\n+\n+event-log-args\n+    Same as `access-log-args` but for the configuration of the event log of Plone.\n+\n+event-log-kwargs\n+    Same as `access-log-kwargs` but for the configuration of the event log of Plone.\n+\n+Example (access log rotation based on file size)\n+++++++++++++++++++++++++++++++++++++++++++++++++\n+\n+This example uses a `RotatingFileHandler` https://docs.python.org/3/library/logging.handlers.html#rotatingfilehandler\n+which rotates the access log when it becomes larger than 10 MB while keeping seven copies::\n+\n+    access-log-handler = logging.handlers.RotatingFileHandler\n+    access-log-args  = ("access.log", "a")\n+    access-log-kwargs = {"maxBytes": 10000000, "maxCount": 7}\n+\n+Example (rotating of event log after each day)\n+++++++++++++++++++++++++++++++++++++++++++++++\n+\n+This example uses a `TimedRotatingFileHandler` https://docs.python.org/3/library/logging.handlers.html#timedrotatingfilehandler\n+for rotating the event log every 24 hours or one day::\n+\n+    event-log-handler = logging.handlers.TimedRotatingFileHandler\n+    event-log-args = ("event.log", )\n+    event-log-kwargs = {"when": "D", "interval": 1}\n+\n+\n Load non-setuptools compatible Python libraries\n -----------------------------------------------\n \n@@ -376,6 +440,23 @@ zeo-var\n Advanced options\n ----------------\n \n+wsgi-ini-template \n+\n+  By default `plone.recipe.zope2instances` uses a hard-coded template for the\n+  generated WSGI configuration in `parts/<partname>/etc/wsgi.ini`. The template\n+  is defined as `wsgi_ini_template` variable within the `recipe.py\n+  <https://github.com/plone/plone.recipe.zope2instance/blob/master/src/plone/recipe/zope2instance/recipe.py>`_\n+  file.\n+\n+  You can override the template with a custom template file using this option.\n+\n+  Example::\n+\n+      wsgi-ini-template = /path/to/wsgi_template.ini\n+\n+  The available variables for variable substition can be found within the existing template (see above).\n+\n+\n before-storage\n   Wraps the base storage in a "before storage" which sets it in\n   read-only mode from the time given (or "now" for the current time).\n'

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-08-14T04:37:38+02:00
Author: Andreas Jung (zopyx) <info@zopyx.com>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/6013465c3be3425580619cc5909a4a0d80865385

added

Files changed:
A news/119.feature

b'diff --git a/news/119.feature b/news/119.feature\nnew file mode 100644\nindex 0000000..73e41ae\n--- /dev/null\n+++ b/news/119.feature\n@@ -0,0 +1,3 @@\n+Support for advanced WSGI logging configuration options:\n+access-log-handler, access-log-args, access-log-kwargs, event-log-handler, event-log-args, event-log-kwargs\n+[ajung]\n'

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-08-14T08:14:46+02:00
Author: Andreas Jung√Ç (zopyx) <info@zopyx.com>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/0107c6022e1edb0bd7116435ac2b3edd7fb6515f

fixes

Files changed:
M src/plone/recipe/zope2instance/recipe.py
M src/plone/recipe/zope2instance/tests/wsgi.txt

b'diff --git a/src/plone/recipe/zope2instance/recipe.py b/src/plone/recipe/zope2instance/recipe.py\nindex 5021dcd..d74d0c2 100644\n--- a/src/plone/recipe/zope2instance/recipe.py\n+++ b/src/plone/recipe/zope2instance/recipe.py\n@@ -729,9 +729,9 @@ def build_wsgi_ini(self):\n         eventlog_kwargs = options.get(\'event-log-kwargs\', \'{}\')\n         eventlog_args = options.get(\'event-log-args\')\n         if not eventlog_args:\n-            eventlog_args = \'("{}", "a")\'.format(default_eventlog)\n+            eventlog_args = "(\'{}\', \'a\')".format(eventlog_name)\n         else:\n-            eventlog_args = eventlog_args.format(default_eventlog)\n+            eventlog_args = eventlog_args.format(eventlog_name)\n \n         if eventlog_name.lower() == \'disable\':\n             root_handlers = \'console\'\n@@ -753,9 +753,9 @@ def build_wsgi_ini(self):\n         accesslog_kwargs = options.get(\'access-log-kwargs\', \'{}\')\n         accesslog_args = options.get(\'access-log-args\')\n         if not accesslog_args:\n-            accesslog_args = \'("{}", "a")\'.format(default_accesslog)\n+            accesslog_args = "(\'{}\', \'a\')".format(accesslog_name)\n         else:\n-            accesslog_args = accesslog_args.format(default_accesslog)\n+            accesslog_args = accesslog_args.format(accesslog_name)\n \n         if accesslog_name.lower() == \'disable\':\n             pipeline = \'\\n    \'.join([\'egg:Zope#httpexceptions\', \'zope\'])\n@@ -763,7 +763,8 @@ def build_wsgi_ini(self):\n         else:\n             pipeline = \'\\n    \'.join(\n                 [\'translogger\', \'egg:Zope#httpexceptions\', \'zope\'])\n-        options = {\n+\n+        wsgi_options = {\n             \'accesslog_level\': accesslog_level,\n             \'accesslog_handler\': accesslog_handler,\n             \'accesslog_name\': accesslog_name,\n@@ -792,7 +793,11 @@ def build_wsgi_ini(self):\n             except IOError:\n                 raise\n \n-        wsgi_ini = wsgi_ini_template % options\n+#        import pprint\n+#        pprint.pprint(self.options)\n+#        pprint.pprint(wsgi_options)\n+\n+        wsgi_ini = wsgi_ini_template % wsgi_options\n         with open(wsgi_ini_path, \'w\') as f:\n             f.write(wsgi_ini)\n \ndiff --git a/src/plone/recipe/zope2instance/tests/wsgi.txt b/src/plone/recipe/zope2instance/tests/wsgi.txt\nindex 86a5ae9..74c5486 100644\n--- a/src/plone/recipe/zope2instance/tests/wsgi.txt\n+++ b/src/plone/recipe/zope2instance/tests/wsgi.txt\n@@ -140,13 +140,15 @@ The buildout has also created an INI file containing the waitress configuration:\n     <BLANKLINE>\n     [handler_accesslog]\n     class = FileHandler\n-    args = (\'.../sample-buildout/var/log/instance-access.log\',\'a\')\n+    args = (\'.../sample-buildout/var/log/instance-access.log\', \'a\')\n+    kwargs = {}\n     level = INFO\n     formatter = message\n     <BLANKLINE>\n     [handler_eventlog]\n     class = FileHandler\n     args = (\'.../sample-buildout/var/log/instance.log\', \'a\')\n+    kwargs = {}\n     level = NOTSET\n     formatter = generic\n     <BLANKLINE>\n@@ -265,13 +267,15 @@ The buildout has updated our INI file:\n     ...\n     [handler_accesslog]\n     class = FileHandler\n-    args = (\'var/log/foo.log\',\'a\')\n+    args = (\'var/log/foo.log\', \'a\')\n+    kwargs = {}\n     level = DEBUG\n     formatter = message\n     <BLANKLINE>\n     [handler_eventlog]\n     class = FileHandler\n     args = (\'var/log/bar.log\', \'a\')\n+    kwargs = {}\n     level = NOTSET\n     formatter = generic\n     ...\n'

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-08-14T08:30:54+02:00
Author: Andreas Jung√Ç (zopyx) <info@zopyx.com>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/661a99f28639c40c81a3bcd10e29be54cfe3d0a2

updated

Files changed:
M news/119.feature

b'diff --git a/news/119.feature b/news/119.feature\nindex 73e41ae..2c0b9fe 100644\n--- a/news/119.feature\n+++ b/news/119.feature\n@@ -1,3 +1,17 @@\n-Support for advanced WSGI logging configuration options:\n-access-log-handler, access-log-args, access-log-kwargs, event-log-handler, event-log-args, event-log-kwargs\n-[ajung]\n+- added `wsgi-ini-template` option for specifying a custom template for the\n+  generation of the `wsgi.ini` configuration file\n+  [ajung]\n+\n+- advanced WSGI logging configuration options for specifying arbitrary logging\n+  handlers for event and access log:\n+\n+  - access-log-handler \n+  - access-log-args \n+  - access-log-kwargs \n+  - event-log-handler \n+  - event-log-args\n+  - event-log-kwargs\n+  [ajung]\n+\n+- added documentation and examples for advanced WSGI logger configuration\n+  [ajung]\n'

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-08-14T08:32:42+02:00
Author: Andreas Jung√Ç (zopyx) <info@zopyx.com>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/63074b442ac5f65f9087b481c2782d97f2ffd052

removed debug pprint

Files changed:
M src/plone/recipe/zope2instance/recipe.py

b"diff --git a/src/plone/recipe/zope2instance/recipe.py b/src/plone/recipe/zope2instance/recipe.py\nindex d74d0c2..dacfab0 100644\n--- a/src/plone/recipe/zope2instance/recipe.py\n+++ b/src/plone/recipe/zope2instance/recipe.py\n@@ -793,10 +793,6 @@ def build_wsgi_ini(self):\n             except IOError:\n                 raise\n \n-#        import pprint\n-#        pprint.pprint(self.options)\n-#        pprint.pprint(wsgi_options)\n-\n         wsgi_ini = wsgi_ini_template % wsgi_options\n         with open(wsgi_ini_path, 'w') as f:\n             f.write(wsgi_ini)\n"

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-09-06T10:15:39+02:00
Author: tschorr (tschorr) <t_schorr@gmx.de>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/7f933458f5076554453fae3e977610437e2a883c

merge master

Files changed:
A src/plone/recipe/zope2instance/sentry.py
M CHANGES.rst
M README.rst
M setup.py
M src/plone/recipe/zope2instance/ctl.py
M src/plone/recipe/zope2instance/recipe.py
M src/plone/recipe/zope2instance/tests/wsgi.txt

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 038c3b2..2b25172 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -8,6 +8,22 @@ Changelog\n \n .. towncrier release notes start\n \n+6.4.0 (2019-08-29)\n+------------------\n+\n+New features:\n+\n+\n+- Add Sentry support by adding a new filter to the WSGI pipeline. (#124)\n+\n+\n+Bug fixes:\n+\n+\n+- Fixed a deprecation warning when importing ``makerequest`` from ``Testing.ZopeTestCase.utils``.\n+  This also fixes a side effect which can bite you if you rely on the ``ZOPETESTCASE`` environment variable, only being set to ``1`` during test runs. (#122)\n+\n+\n 6.3.0 (2019-07-06)\n ------------------\n \ndiff --git a/README.rst b/README.rst\nindex 21c6be0..71063a2 100644\n--- a/README.rst\n+++ b/README.rst\n@@ -311,6 +311,25 @@ access-log-custom\n   Like `event-log-custom`, a custom section for the access logger, to be able\n   to use another event logger than `logfile`. Used for ZServer only, not WSGI.\n \n+sentry_dsn\n+  Provide a Sentry DSN here to enable basic Sentry logging documented\n+  in `<https://docs.sentry.io/platforms/python/logging/>`_. You will need to add the\n+  Python Sentry SDK, either by adding it to your eggs section directly or by adding\n+  `plone.recipe.zope2instance[sentry]`.\n+  Available for WSGI only.\n+\n+sentry_level\n+  Set the logging level for Sentry breadcrumbs.\n+  Available for WSGI only.\n+\n+sentry_event_level\n+  Set the logging level for Sentry events.\n+  Available for WSGI only.\n+\n+sentry_ignore\n+  Set the (space separated list of) logger names that are ignored by Sentry.\n+  Available for WSGI only.\n+\n Advanced logging options for WSGI\n ---------------------------------\n \n@@ -335,7 +354,7 @@ access-log-args\n   of the file like `("access.log", "a")`.  Note that you a Python tuple with\n   only one element (e.g. only the filename) must have a trailing comma like\n   `("access.log", )` The `access-log-args` is used to specify the positional\n-  parameters for the logging handler configured through `access-log-handler`. \n+  parameters for the logging handler configured through `access-log-handler`.\n \n   Default: `("access.log", "a")`\n \n@@ -374,7 +393,6 @@ for rotating the event log every 24 hours or one day::\n     event-log-args = ("event.log", )\n     event-log-kwargs = {"when": "D", "interval": 1}\n \n-\n Load non-setuptools compatible Python libraries\n -----------------------------------------------\n \n@@ -440,7 +458,7 @@ zeo-var\n Advanced options\n ----------------\n \n-wsgi-ini-template \n+wsgi-ini-template\n \n   By default `plone.recipe.zope2instances` uses a hard-coded template for the\n   generated WSGI configuration in `parts/<partname>/etc/wsgi.ini`. The template\ndiff --git a/setup.py b/setup.py\nindex fd0ceee..eeecf71 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -4,7 +4,7 @@\n \n \n name = "plone.recipe.zope2instance"\n-version = \'6.3.1.dev0\'\n+version = \'6.4.1.dev0\'\n \n setup(\n     name=name,\n@@ -18,11 +18,12 @@\n     keywords="zope buildout",\n     url=\'https://github.com/plone/plone.recipe.zope2instance\',\n     classifiers=[\n-        "License :: OSI Approved :: Zope Public License",\n+        "Development Status :: 6 - Mature",\n         "Framework :: Buildout",\n         "Framework :: Plone",\n         "Framework :: Plone :: 5.2",\n         "Framework :: Zope :: 4",\n+        "License :: OSI Approved :: Zope Public License",\n         "Programming Language :: Python",\n         "Programming Language :: Python :: 2",\n         "Programming Language :: Python :: 2.7",\n@@ -50,6 +51,9 @@\n         \'test\': [\n             \'zope.testrunner\',\n         ],\n+        \'sentry\': [\n+            \'sentry-sdk\',\n+        ]\n     },\n     zip_safe=False,\n     entry_points={\n@@ -60,5 +64,8 @@\n         \'paste.server_factory\': [\n             \'main=plone.recipe.zope2instance.ctl:server_factory\',\n         ],\n+        \'paste.filter_factory\': [\n+            \'sentry=plone.recipe.zope2instance.sentry:sdk_init\',\n+        ],\n         },\n )\ndiff --git a/src/plone/recipe/zope2instance/ctl.py b/src/plone/recipe/zope2instance/ctl.py\nindex 0782e9f..c6fd851 100644\n--- a/src/plone/recipe/zope2instance/ctl.py\n+++ b/src/plone/recipe/zope2instance/ctl.py\n@@ -678,7 +678,7 @@ def get_startup_cmd(self, python, more, pyflags=""):\n \n         if not self.options.no_request:\n             cmdline += (\n-                \'from Testing.ZopeTestCase.utils import makerequest; \'\n+                \'from Testing.makerequest import makerequest; \'\n                 \'app = makerequest(app); \'\n                 # REQUEST.traverse needs this but no reason not to set\n                 # this even if we\'re not traversing to an object\ndiff --git a/src/plone/recipe/zope2instance/recipe.py b/src/plone/recipe/zope2instance/recipe.py\nindex dacfab0..6619dd3 100644\n--- a/src/plone/recipe/zope2instance/recipe.py\n+++ b/src/plone/recipe/zope2instance/recipe.py\n@@ -757,31 +757,47 @@ def build_wsgi_ini(self):\n         else:\n             accesslog_args = accesslog_args.format(accesslog_name)\n \n+        pipeline = []\n         if accesslog_name.lower() == \'disable\':\n-            pipeline = \'\\n    \'.join([\'egg:Zope#httpexceptions\', \'zope\'])\n+            pipeline = [\'egg:Zope#httpexceptions\']\n             event_handlers = \'\'\n         else:\n-            pipeline = \'\\n    \'.join(\n-                [\'translogger\', \'egg:Zope#httpexceptions\', \'zope\'])\n-\n+            pipeline = [\n+                \'translogger\', \'egg:Zope#httpexceptions\']\n+\n+        sentry_dsn = options.get(\'sentry_dsn\', \'\')\n+        if sentry_dsn:\n+            pipeline.append(\'sentry\')\n+        sentry_level = options.get(\'sentry_level\', \'INFO\')\n+        sentry_event_level = options.get(\'sentry_event_level\', \'ERROR\')\n+        sentry_ignore = options.get(\'sentry_ignore\', \'\')\n+\n+        pipeline.append(\'zope\')\n+        pipeline = \'\\n    \'.join(pipeline)\n         wsgi_options = {\n-            \'accesslog_level\': accesslog_level,\n-            \'accesslog_handler\': accesslog_handler,\n+            \'location\': options[\'location\'],\n+            \'http_address\': listen,\n+            \'threads\': options.get(\'threads\', 4),\n+            \'fast-listen\': fast,\n+            \'root_handlers\': root_handlers,\n             \'accesslog_name\': accesslog_name,\n+            \'accesslog_handler\': accesslog_handler,\n+            \'accesslog_level\': accesslog_level,\n             \'accesslog_args\': accesslog_args,\n             \'accesslog_kwargs\': accesslog_kwargs,\n             \'event_handlers\': event_handlers,\n+            \'eventlog_name\': eventlog_name,\n             \'eventlog_handler\': eventlog_handler,\n             \'eventlog_level\': eventlog_level,\n-            \'eventlog_name\': eventlog_name,\n             \'eventlog_args\': eventlog_args,\n             \'eventlog_kwargs\': eventlog_kwargs,\n             \'fast-listen\': fast,\n             \'http_address\': listen,\n-            \'location\': options[\'location\'],\n             \'pipeline\': pipeline,\n-            \'root_handlers\': root_handlers,\n-            \'threads\': options.get(\'threads\', 4),\n+            \'sentry_dsn\': sentry_dsn,\n+            \'sentry_level\': sentry_level,\n+            \'sentry_event_level\': sentry_event_level,\n+            \'sentry_ignore\': sentry_ignore,\n         }\n \n         global wsgi_ini_template\n@@ -1333,6 +1349,13 @@ def render_file_storage(self, file_storage, blob_storage,\n use = egg:Paste#translogger\n setup_console_handler = False\n \n+[filter:sentry]\n+use = egg:plone.recipe.zope2instance#sentry\n+dsn = %(sentry_dsn)s\n+level = %(sentry_level)s\n+event_level = %(sentry_event_level)s\n+ignorelist = %(sentry_ignore)s\n+\n [pipeline:main]\n pipeline =\n     %(pipeline)s\ndiff --git a/src/plone/recipe/zope2instance/sentry.py b/src/plone/recipe/zope2instance/sentry.py\nnew file mode 100644\nindex 0000000..069294a\n--- /dev/null\n+++ b/src/plone/recipe/zope2instance/sentry.py\n@@ -0,0 +1,22 @@\n+import logging\n+import sentry_sdk\n+from sentry_sdk.integrations.logging import LoggingIntegration, ignore_logger\n+\n+\n+def sdk_init(\n+        global_conf,\n+        dsn,\n+        level=\'INFO\',\n+        event_level=\'ERROR\',\n+        ignorelist=\'\'):\n+    sentry_logging = LoggingIntegration(\n+        level=logging.__dict__[level],\n+        event_level=logging.__dict__[event_level]\n+    )\n+    for logger in ignorelist.split():\n+        ignore_logger(logger)\n+\n+    def filter(app):\n+        sentry_sdk.init(dsn=dsn, integrations=[sentry_logging])\n+        return app\n+    return filter\ndiff --git a/src/plone/recipe/zope2instance/tests/wsgi.txt b/src/plone/recipe/zope2instance/tests/wsgi.txt\nindex 74c5486..bc1974e 100644\n--- a/src/plone/recipe/zope2instance/tests/wsgi.txt\n+++ b/src/plone/recipe/zope2instance/tests/wsgi.txt\n@@ -90,7 +90,7 @@ The buildout has also created an INI file containing the waitress configuration:\n     [filter:translogger]\n     use = egg:Paste#translogger\n     setup_console_handler = False\n-    <BLANKLINE>\n+    ...\n     [pipeline:main]\n     pipeline =\n         translogger\n@@ -376,3 +376,112 @@ The buildout has updated our INI file:\n     handlers =\n     qualname = waitress\n     ...\n+\n+Sentry support\n+==============\n+\n+We want to sent logging events to Sentry.\n+Let\'s create a buildout:\n+\n+    >>> write(\'buildout.cfg\',\n+    ... \'\'\'\n+    ... [buildout]\n+    ... parts = instance\n+    ... find-links = %(sample_buildout)s/eggs\n+    ...\n+    ... [instance]\n+    ... recipe = plone.recipe.zope2instance\n+    ... eggs =\n+    ...     plone.recipe.zope2instance[sentry]\n+    ... user = me:me\n+    ... sentry_dsn = https://f00ba4ba2@my.sentry.server/9999\n+    ... \'\'\' % options)\n+\n+Let\'s run it::\n+\n+    >>> print(system(join(\'bin\', \'buildout\'))),\n+    Uninstalling instance.\n+    Installing instance.\n+    Getting distribution for \'sentry-sdk\'.\n+    ...\n+    Generated script \'.../sample-buildout/bin/instance\'.\n+    ...\n+\n+The buildout has updated our INI file:\n+\n+    >>> instance = os.path.join(sample_buildout, \'parts\', \'instance\')\n+    >>> wsgi_ini = open(os.path.join(instance, \'etc\', \'wsgi.ini\')).read()\n+    >>> print(wsgi_ini)\n+    [server:main]\n+    paste.server_factory = plone.recipe.zope2instance:main\n+    use = egg:plone.recipe.zope2instance#main\n+    ...\n+    [filter:sentry]\n+    use = egg:plone.recipe.zope2instance#sentry\n+    dsn = https://f00ba4ba2@my.sentry.server/9999\n+    level = INFO\n+    event_level = ERROR\n+    ignorelist =\n+    <BLANKLINE>\n+    [pipeline:main]\n+    pipeline =\n+        translogger\n+        egg:Zope#httpexceptions\n+        sentry\n+        zope\n+    <BLANKLINE>\n+    [loggers]\n+    ...\n+\n+Let\'s update our buildout with some Sentry options:\n+\n+    >>> write(\'buildout.cfg\',\n+    ... \'\'\'\n+    ... [buildout]\n+    ... parts = instance\n+    ... find-links = %(sample_buildout)s/eggs\n+    ...\n+    ... [instance]\n+    ... recipe = plone.recipe.zope2instance\n+    ... eggs =\n+    ...     plone.recipe.zope2instance[sentry]\n+    ... user = me:me\n+    ... sentry_dsn = https://f00ba4ba2@my.sentry.server/9999\n+    ... sentry_level = DEBUG\n+    ... sentry_event_level = WARNING\n+    ... sentry_ignore = waitress.queue foo\n+    ... \'\'\' % options)\n+\n+Let\'s run it::\n+\n+    >>> print(system(join(\'bin\', \'buildout\'))),\n+    Uninstalling instance.\n+    Installing instance.\n+    Generated script \'.../sample-buildout/bin/instance\'.\n+    ...\n+\n+The buildout has updated our INI file:\n+\n+    >>> instance = os.path.join(sample_buildout, \'parts\', \'instance\')\n+    >>> wsgi_ini = open(os.path.join(instance, \'etc\', \'wsgi.ini\')).read()\n+    >>> print(wsgi_ini)\n+    [server:main]\n+    paste.server_factory = plone.recipe.zope2instance:main\n+    use = egg:plone.recipe.zope2instance#main\n+    ...\n+    [filter:sentry]\n+    use = egg:plone.recipe.zope2instance#sentry\n+    dsn = https://f00ba4ba2@my.sentry.server/9999\n+    level = DEBUG\n+    event_level = WARNING\n+    ignorelist = waitress.queue foo\n+    <BLANKLINE>\n+    [pipeline:main]\n+    pipeline =\n+        translogger\n+        egg:Zope#httpexceptions\n+        sentry\n+        zope\n+    <BLANKLINE>\n+    [loggers]\n+    ...\n'

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-09-06T11:43:17+02:00
Author: Andreas Jung√Ç (zopyx) <info@zopyx.com>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/111a4109df912680ee057ca8d1df457009114287

splitted and reformatted former 119.feature

Files changed:
A news/119-1.feature
A news/119-2.feature
A news/119-3.feature

b'diff --git a/news/119-1.feature b/news/119-1.feature\nnew file mode 100644\nindex 0000000..5b0db8d\n--- /dev/null\n+++ b/news/119-1.feature\n@@ -0,0 +1 @@\n+- added `wsgi-ini-template` option for specifying a custom template for the generation of the `wsgi.ini` configuration file [ajung]\ndiff --git a/news/119-2.feature b/news/119-2.feature\nnew file mode 100644\nindex 0000000..da578ce\n--- /dev/null\n+++ b/news/119-2.feature\n@@ -0,0 +1 @@\n+- advanced WSGI logging configuration options for specifying arbitrary logging handlers for event and access log: - access-log-handler, - access-log-args, - access-log-kwargs,  - event-log-handler, - event-log-args, - event-log-kwargs [ajung]\ndiff --git a/news/119-3.feature b/news/119-3.feature\nnew file mode 100644\nindex 0000000..478dd43\n--- /dev/null\n+++ b/news/119-3.feature\n@@ -0,0 +1 @@\n+- added documentation and examples for advanced WSGI logger configuration [ajung]\n'

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-09-06T11:45:11+02:00
Author: Andreas Jung√Ç (zopyx) <info@zopyx.com>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/b62dbe6d6a9a5e1d302310e8631e6b9bc63c03c8

updated

Files changed:
M news/119-2.feature
D news/119.feature

b'diff --git a/news/119-2.feature b/news/119-2.feature\nindex da578ce..4708751 100644\n--- a/news/119-2.feature\n+++ b/news/119-2.feature\n@@ -1 +1 @@\n-- advanced WSGI logging configuration options for specifying arbitrary logging handlers for event and access log: - access-log-handler, - access-log-args, - access-log-kwargs,  - event-log-handler, - event-log-args, - event-log-kwargs [ajung]\n+- advanced WSGI logging configuration options for specifying arbitrary logging handlers for event and access log [ajung]\ndiff --git a/news/119.feature b/news/119.feature\ndeleted file mode 100644\nindex 2c0b9fe..0000000\n--- a/news/119.feature\n+++ /dev/null\n@@ -1,17 +0,0 @@\n-- added `wsgi-ini-template` option for specifying a custom template for the\n-  generation of the `wsgi.ini` configuration file\n-  [ajung]\n-\n-- advanced WSGI logging configuration options for specifying arbitrary logging\n-  handlers for event and access log:\n-\n-  - access-log-handler \n-  - access-log-args \n-  - access-log-kwargs \n-  - event-log-handler \n-  - event-log-args\n-  - event-log-kwargs\n-  [ajung]\n-\n-- added documentation and examples for advanced WSGI logger configuration\n-  [ajung]\n'

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-09-06T12:13:46+02:00
Author: Thomas Schorr (tschorr) <t_schorr@gmx.de>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/b775a8d08f0728184bec97b576ab97f4dde9ac0b

Merge pull request #120 from plone/ajung-wsgi-logging

Advanced WSGI logging

Files changed:
A news/119-1.feature
A news/119-2.feature
A news/119-3.feature
M README.rst
M src/plone/recipe/zope2instance/recipe.py
M src/plone/recipe/zope2instance/tests/wsgi.txt

b'diff --git a/README.rst b/README.rst\nindex 83d87be..71063a2 100644\n--- a/README.rst\n+++ b/README.rst\n@@ -330,6 +330,69 @@ sentry_ignore\n   Set the (space separated list of) logger names that are ignored by Sentry.\n   Available for WSGI only.\n \n+Advanced logging options for WSGI\n+---------------------------------\n+\n+For more complex logging configuration, the zope2instance recipe exposes the\n+underlaying `logging.handlers` functionality through the `access-log-handler`\n+and `event-log-handler` configuration options. This allows you to configure an\n+arbitrary logging handler for Python as defined in\n+`here <https://docs.python.org/3/library/logging.handlers.html>`_.\n+\n+The supplementary options `event-log-args`, `event-log-kwargs` and\n+`access-log-args`, `access-log-kwargs` can be used for passing positional and\n+keyword arguments to the constructor of the underlaying handler.\n+\n+access-log-handler\n+  The (dotted) name of an importable Python logging handler like\n+  `logging.handlers.RotatingFileHandler`.\n+\n+  Default: `FileHandler`\n+\n+access-log-args\n+  A python tuple which usually refers to the logging filename and opening mode\n+  of the file like `("access.log", "a")`.  Note that you a Python tuple with\n+  only one element (e.g. only the filename) must have a trailing comma like\n+  `("access.log", )` The `access-log-args` is used to specify the positional\n+  parameters for the logging handler configured through `access-log-handler`.\n+\n+  Default: `("access.log", "a")`\n+\n+access-log-kwargs\n+  A python dictionary used for passing keyword argument for the logging handler\n+  configured through `access-log-handler` e.g.  `{"when": "h", "interval": 1}`.\n+\n+  Default: `{}`\n+\n+event-log-handler\n+    Same as `access-log-handler` but for the configuration of the event log of Plone.\n+\n+event-log-args\n+    Same as `access-log-args` but for the configuration of the event log of Plone.\n+\n+event-log-kwargs\n+    Same as `access-log-kwargs` but for the configuration of the event log of Plone.\n+\n+Example (access log rotation based on file size)\n+++++++++++++++++++++++++++++++++++++++++++++++++\n+\n+This example uses a `RotatingFileHandler` https://docs.python.org/3/library/logging.handlers.html#rotatingfilehandler\n+which rotates the access log when it becomes larger than 10 MB while keeping seven copies::\n+\n+    access-log-handler = logging.handlers.RotatingFileHandler\n+    access-log-args  = ("access.log", "a")\n+    access-log-kwargs = {"maxBytes": 10000000, "maxCount": 7}\n+\n+Example (rotating of event log after each day)\n+++++++++++++++++++++++++++++++++++++++++++++++\n+\n+This example uses a `TimedRotatingFileHandler` https://docs.python.org/3/library/logging.handlers.html#timedrotatingfilehandler\n+for rotating the event log every 24 hours or one day::\n+\n+    event-log-handler = logging.handlers.TimedRotatingFileHandler\n+    event-log-args = ("event.log", )\n+    event-log-kwargs = {"when": "D", "interval": 1}\n+\n Load non-setuptools compatible Python libraries\n -----------------------------------------------\n \n@@ -395,6 +458,23 @@ zeo-var\n Advanced options\n ----------------\n \n+wsgi-ini-template\n+\n+  By default `plone.recipe.zope2instances` uses a hard-coded template for the\n+  generated WSGI configuration in `parts/<partname>/etc/wsgi.ini`. The template\n+  is defined as `wsgi_ini_template` variable within the `recipe.py\n+  <https://github.com/plone/plone.recipe.zope2instance/blob/master/src/plone/recipe/zope2instance/recipe.py>`_\n+  file.\n+\n+  You can override the template with a custom template file using this option.\n+\n+  Example::\n+\n+      wsgi-ini-template = /path/to/wsgi_template.ini\n+\n+  The available variables for variable substition can be found within the existing template (see above).\n+\n+\n before-storage\n   Wraps the base storage in a "before storage" which sets it in\n   read-only mode from the time given (or "now" for the current time).\n@@ -659,3 +739,4 @@ Reporting bugs or asking questions\n Please use the bug tracker in this repository at\n https://github.com/plone/plone.recipe.zope2instance/issues for questions and\n bug reports.\n+\ndiff --git a/news/119-1.feature b/news/119-1.feature\nnew file mode 100644\nindex 0000000..5b0db8d\n--- /dev/null\n+++ b/news/119-1.feature\n@@ -0,0 +1 @@\n+- added `wsgi-ini-template` option for specifying a custom template for the generation of the `wsgi.ini` configuration file [ajung]\ndiff --git a/news/119-2.feature b/news/119-2.feature\nnew file mode 100644\nindex 0000000..4708751\n--- /dev/null\n+++ b/news/119-2.feature\n@@ -0,0 +1 @@\n+- advanced WSGI logging configuration options for specifying arbitrary logging handlers for event and access log [ajung]\ndiff --git a/news/119-3.feature b/news/119-3.feature\nnew file mode 100644\nindex 0000000..478dd43\n--- /dev/null\n+++ b/news/119-3.feature\n@@ -0,0 +1 @@\n+- added documentation and examples for advanced WSGI logger configuration [ajung]\ndiff --git a/src/plone/recipe/zope2instance/recipe.py b/src/plone/recipe/zope2instance/recipe.py\nindex 5ce32fb..6619dd3 100644\n--- a/src/plone/recipe/zope2instance/recipe.py\n+++ b/src/plone/recipe/zope2instance/recipe.py\n@@ -725,6 +725,13 @@ def build_wsgi_ini(self):\n             (var_dir, \'log\', \'{}.log\'.format(self.name),))\n         eventlog_name = options.get(\'event-log\', default_eventlog)\n         eventlog_level = options.get(\'event-log-level\', \'INFO\')\n+        eventlog_handler = options.get(\'event-log-handler\', \'FileHandler\')\n+        eventlog_kwargs = options.get(\'event-log-kwargs\', \'{}\')\n+        eventlog_args = options.get(\'event-log-args\')\n+        if not eventlog_args:\n+            eventlog_args = "(\'{}\', \'a\')".format(eventlog_name)\n+        else:\n+            eventlog_args = eventlog_args.format(eventlog_name)\n \n         if eventlog_name.lower() == \'disable\':\n             root_handlers = \'console\'\n@@ -742,11 +749,17 @@ def build_wsgi_ini(self):\n         accesslog_level = options.get(\n             \'access-log-level\',\n             options.get(\'z2-log-level\', \'INFO\'))\n+        accesslog_handler = options.get(\'access-log-handler\', \'FileHandler\')\n+        accesslog_kwargs = options.get(\'access-log-kwargs\', \'{}\')\n+        accesslog_args = options.get(\'access-log-args\')\n+        if not accesslog_args:\n+            accesslog_args = "(\'{}\', \'a\')".format(accesslog_name)\n+        else:\n+            accesslog_args = accesslog_args.format(accesslog_name)\n \n         pipeline = []\n         if accesslog_name.lower() == \'disable\':\n-            pipeline = [\n-                \'egg:Zope#httpexceptions\']\n+            pipeline = [\'egg:Zope#httpexceptions\']\n             event_handlers = \'\'\n         else:\n             pipeline = [\n@@ -761,24 +774,42 @@ def build_wsgi_ini(self):\n \n         pipeline.append(\'zope\')\n         pipeline = \'\\n    \'.join(pipeline)\n-        options = {\n+        wsgi_options = {\n             \'location\': options[\'location\'],\n             \'http_address\': listen,\n             \'threads\': options.get(\'threads\', 4),\n             \'fast-listen\': fast,\n-            \'eventlog_name\': eventlog_name,\n             \'root_handlers\': root_handlers,\n-            \'event_handlers\': event_handlers,\n             \'accesslog_name\': accesslog_name,\n-            \'pipeline\': pipeline,\n-            \'eventlog_level\': eventlog_level,\n+            \'accesslog_handler\': accesslog_handler,\n             \'accesslog_level\': accesslog_level,\n+            \'accesslog_args\': accesslog_args,\n+            \'accesslog_kwargs\': accesslog_kwargs,\n+            \'event_handlers\': event_handlers,\n+            \'eventlog_name\': eventlog_name,\n+            \'eventlog_handler\': eventlog_handler,\n+            \'eventlog_level\': eventlog_level,\n+            \'eventlog_args\': eventlog_args,\n+            \'eventlog_kwargs\': eventlog_kwargs,\n+            \'fast-listen\': fast,\n+            \'http_address\': listen,\n+            \'pipeline\': pipeline,\n             \'sentry_dsn\': sentry_dsn,\n             \'sentry_level\': sentry_level,\n             \'sentry_event_level\': sentry_event_level,\n             \'sentry_ignore\': sentry_ignore,\n         }\n-        wsgi_ini = wsgi_ini_template % options\n+\n+        global wsgi_ini_template\n+        wsgi_ini_template_path = self.options.get(\'wsgi-ini-template\')\n+        if wsgi_ini_template_path:\n+            try:\n+                with open(wsgi_ini_template_path) as fp:\n+                    wsgi_ini_template = fp.read()\n+            except IOError:\n+                raise\n+\n+        wsgi_ini = wsgi_ini_template % wsgi_options\n         with open(wsgi_ini_path, \'w\') as f:\n             f.write(wsgi_ini)\n \n@@ -1371,14 +1402,16 @@ class = StreamHandler\n formatter = generic\n \n [handler_accesslog]\n-class = FileHandler\n-args = (\'%(accesslog_name)s\',\'a\')\n+class = %(accesslog_handler)s\n+args = %(accesslog_args)s\n+kwargs = %(accesslog_kwargs)s\n level = %(accesslog_level)s\n formatter = message\n \n [handler_eventlog]\n-class = FileHandler\n-args = (\'%(eventlog_name)s\', \'a\')\n+class = %(eventlog_handler)s\n+args = %(eventlog_args)s\n+kwargs = %(eventlog_kwargs)s\n level = NOTSET\n formatter = generic\n \ndiff --git a/src/plone/recipe/zope2instance/tests/wsgi.txt b/src/plone/recipe/zope2instance/tests/wsgi.txt\nindex ce05a1b..bc1974e 100644\n--- a/src/plone/recipe/zope2instance/tests/wsgi.txt\n+++ b/src/plone/recipe/zope2instance/tests/wsgi.txt\n@@ -140,13 +140,15 @@ The buildout has also created an INI file containing the waitress configuration:\n     <BLANKLINE>\n     [handler_accesslog]\n     class = FileHandler\n-    args = (\'.../sample-buildout/var/log/instance-access.log\',\'a\')\n+    args = (\'.../sample-buildout/var/log/instance-access.log\', \'a\')\n+    kwargs = {}\n     level = INFO\n     formatter = message\n     <BLANKLINE>\n     [handler_eventlog]\n     class = FileHandler\n     args = (\'.../sample-buildout/var/log/instance.log\', \'a\')\n+    kwargs = {}\n     level = NOTSET\n     formatter = generic\n     <BLANKLINE>\n@@ -265,13 +267,15 @@ The buildout has updated our INI file:\n     ...\n     [handler_accesslog]\n     class = FileHandler\n-    args = (\'var/log/foo.log\',\'a\')\n+    args = (\'var/log/foo.log\', \'a\')\n+    kwargs = {}\n     level = DEBUG\n     formatter = message\n     <BLANKLINE>\n     [handler_eventlog]\n     class = FileHandler\n     args = (\'var/log/bar.log\', \'a\')\n+    kwargs = {}\n     level = NOTSET\n     formatter = generic\n     ...\n'

