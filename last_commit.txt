Repository: plone.app.workflow


Branch: refs/heads/master
Date: 2023-03-17T19:20:16+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.workflow/commit/2e9a337ad31fb4e0b188802c7f80a5c7473ca93f

Configuring with plone/meta

Files changed:
A .editorconfig
A .meta.toml
A .pre-commit-config.yaml
A news/789b0936.internal
A tox.ini
M pyproject.toml
M setup.cfg

b'diff --git a/.editorconfig b/.editorconfig\nnew file mode 100644\nindex 0000000..b4158b8\n--- /dev/null\n+++ b/.editorconfig\n@@ -0,0 +1,39 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+#\n+# EditorConfig Configuration file, for more details see:\n+# http://EditorConfig.org\n+# EditorConfig is a convention description, that could be interpreted\n+# by multiple editors to enforce common coding conventions for specific\n+# file types\n+\n+# top-most EditorConfig file:\n+# Will ignore other EditorConfig files in Home directory or upper tree level.\n+root = true\n+\n+\n+[*]  # For All Files\n+# Unix-style newlines with a newline ending every file\n+end_of_line = lf\n+insert_final_newline = true\n+trim_trailing_whitespace = true\n+# Set default charset\n+charset = utf-8\n+# Indent style default\n+indent_style = space\n+# Max Line Length - a hard line wrap, should be disabled\n+max_line_length = off\n+\n+[*.{py,cfg,ini}]\n+# 4 space indentation\n+indent_size = 4\n+\n+[*.{yml,zpt,pt,dtml,zcml}]\n+# 2 space indentation\n+indent_size = 2\n+\n+[{Makefile,.gitmodules}]\n+# Tab indentation (no size specified, but view as 4 spaces)\n+indent_style = tab\n+indent_size = unset\n+tab_width = unset\ndiff --git a/.meta.toml b/.meta.toml\nnew file mode 100644\nindex 0000000..4ed1a1d\n--- /dev/null\n+++ b/.meta.toml\n@@ -0,0 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[meta]\n+template = "default"\n+commit-id = "789b0936"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nnew file mode 100644\nindex 0000000..582f8ac\n--- /dev/null\n+++ b/.pre-commit-config.yaml\n@@ -0,0 +1,42 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+ci:\n+    autofix_prs: false\n+    autoupdate_schedule: monthly\n+\n+repos:\n+-   repo: https://github.com/asottile/pyupgrade\n+    rev: v3.3.1\n+    hooks:\n+    -   id: pyupgrade\n+        args: [--py38-plus]\n+-   repo: https://github.com/pycqa/isort\n+    rev: 5.12.0\n+    hooks:\n+    -   id: isort\n+-   repo: https://github.com/psf/black\n+    rev: 23.1.0\n+    hooks:\n+    -   id: black\n+-   repo: https://github.com/collective/zpretty\n+    rev: 3.0.2\n+    hooks:\n+    -   id: zpretty\n+-   repo: https://github.com/PyCQA/flake8\n+    rev: 6.0.0\n+    hooks:\n+    -   id: flake8\n+-   repo: https://github.com/codespell-project/codespell\n+    rev: v2.2.2\n+    hooks:\n+    -   id: codespell\n+        additional_dependencies:\n+          - tomli\n+-   repo: https://github.com/mgedmin/check-manifest\n+    rev: "0.49"\n+    hooks:\n+    -   id: check-manifest\n+-   repo: https://github.com/regebro/pyroma\n+    rev: "4.2"\n+    hooks:\n+    -   id: pyroma\ndiff --git a/news/789b0936.internal b/news/789b0936.internal\nnew file mode 100644\nindex 0000000..c08f539\n--- /dev/null\n+++ b/news/789b0936.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 05b615d..9eb73f3 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,3 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [tool.towncrier]\n filename = "CHANGES.rst"\n directory = "news/"\n@@ -18,3 +20,43 @@ showcontent = true\n directory = "bugfix"\n name = "Bug fixes:"\n showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "internal"\n+name = "Internal:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "documentation"\n+name = "Documentation:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "tests"\n+name = "Tests"\n+showcontent = true\n+\n+[tool.isort]\n+profile = "plone"\n+\n+[tool.black]\n+target-version = ["py38"]\n+\n+[tool.dependencychecker]\n+Zope = [\n+  # Zope own provided namespaces\n+  \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n+  \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n+  \'Zope2\', \'webdav\', \'zmi\',\n+  # Zope dependencies\n+  \'Acquisition\', \'DateTime\', \'transaction\', \'zExceptions\', \'ZODB\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.deferredimport\', \'zope.event\',\n+  \'zope.exceptions\', \'zope.globalrequest\', \'zope.i18n\', \'zope.i18nmessageid\',\n+  \'zope.interface\', \'zope.lifecycleevent\', \'zope.location\', \'zope.publisher\',\n+  \'zope.schema\', \'zope.security\', \'zope.site\', \'zope.traversing\', \'AccessControl\',\n+]\n+\'plone.base\' = [\n+  \'AccessControl\', \'Products.BTreeFolder2\', \'Products.CMFCore\',\n+  \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n+]\n+python-dateutil = [\'dateutil\']\ndiff --git a/setup.cfg b/setup.cfg\nindex 5a31c37..0da8f8f 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -1,9 +1,23 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [bdist_wheel]\n universal = 0\n \n-[isort]\n-# black compatible Plone isort rules:\n-profile = black\n-force_alphabetical_sort = True\n-force_single_line = True\n-lines_after_imports = 2\n\\ No newline at end of file\n+[flake8]\n+doctests = 1\n+ignore =\n+    # black takes care of line length\n+    E501,\n+    # black takes care of where to break lines\n+    W503,\n+    # black takes care of spaces within slicing (list[:])\n+    E203,\n+    # black takes care of spaces after commas\n+    E231,\n+\n+[check-manifest]\n+ignore =\n+    .editorconfig\n+    .meta.toml\n+    .pre-commit-config.yaml\n+    tox.ini\ndiff --git a/tox.ini b/tox.ini\nnew file mode 100644\nindex 0000000..e1553d9\n--- /dev/null\n+++ b/tox.ini\n@@ -0,0 +1,50 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[tox]\n+envlist =\n+    format\n+    lint\n+    test\n+\n+[testenv]\n+allowlist_externals =\n+    sh\n+\n+[testenv:format]\n+description = automatically reformat code\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a pyupgrade\n+    pre-commit run -a isort\n+    pre-commit run -a black\n+    pre-commit run -a zpretty\n+\n+[testenv:lint]\n+description = run linters that will help improve the code style\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a\n+\n+[testenv:dependencies]\n+description = check if the package defines all its dependencies and generate a graph out of them\n+deps =\n+    z3c.dependencychecker==2.11\n+    pipdeptree==2.5.1\n+    graphviz  # optional dependency of pipdeptree\n+commands =\n+    dependencychecker\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+\n+[testenv:test]\n+usedevelop = true\n+deps =\n+    zope.testrunner\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    zope-testrunner --test-path={toxinidir} -s plone.app.workflow\n+extras =\n+    test\n'

Repository: plone.app.workflow


Branch: refs/heads/master
Date: 2023-03-17T19:21:28+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.workflow/commit/fe8b9e6f1132dd94dacbea88e1ddb1311611e70b

chore: black

Files changed:
M plone/app/workflow/browser/sharing.py
M plone/app/workflow/exportimport.py
M plone/app/workflow/localroles.py
M plone/app/workflow/tests/test_exportimport.py
M plone/app/workflow/tests/test_folder_workflow.py
M plone/app/workflow/tests/test_functional.py
M plone/app/workflow/tests/test_one_state_workflow.py
M plone/app/workflow/tests/test_plone_workflow.py
M plone/app/workflow/tests/test_remap.py
M plone/app/workflow/tests/test_sharing_view.py
M plone/app/workflow/tests/test_simple_publication_workflow.py

b'diff --git a/plone/app/workflow/browser/sharing.py b/plone/app/workflow/browser/sharing.py\nindex 53e6a8f..02008af 100644\n--- a/plone/app/workflow/browser/sharing.py\n+++ b/plone/app/workflow/browser/sharing.py\n@@ -47,7 +47,6 @@ def merge_search_results(results, key):\n \n \n class SharingView(BrowserView):\n-\n     # Actions\n \n     template = ViewPageTemplateFile("sharing.pt")\ndiff --git a/plone/app/workflow/exportimport.py b/plone/app/workflow/exportimport.py\nindex fbd4537..ddaffb9 100644\n--- a/plone/app/workflow/exportimport.py\n+++ b/plone/app/workflow/exportimport.py\n@@ -40,7 +40,6 @@ class SharingXMLAdapter(XMLAdapterBase):\n     info_tag = "__sharing_gs__"\n \n     def _importNode(self, node):\n-\n         if self.environ.shouldPurge():\n             self._purgeRoles()\n \n@@ -76,7 +75,6 @@ def _purgeRoles(self):\n             self.context.unregisterUtility(provided=reg.provided, name=reg.name)\n \n     def _initRole(self, node):\n-\n         if node.nodeName != "role":\n             return\n \n@@ -104,7 +102,6 @@ def _initRole(self, node):\n         )\n \n     def _extractRole(self, reg):\n-\n         component = reg.component\n \n         node = self._doc.createElement("role")\n@@ -123,7 +120,6 @@ def _extractRole(self, reg):\n \n \n def import_sharing(context):\n-\n     sm = getSiteManager(context.getSite())\n     logger = context.getLogger("plone.app.workflow")\n \n@@ -143,7 +139,6 @@ def import_sharing(context):\n \n \n def export_sharing(context):\n-\n     sm = getSiteManager(context.getSite())\n     logger = context.getLogger("plone.app.workflow")\n \ndiff --git a/plone/app/workflow/localroles.py b/plone/app/workflow/localroles.py\nindex 7ecf9d2..3c9a44d 100644\n--- a/plone/app/workflow/localroles.py\n+++ b/plone/app/workflow/localroles.py\n@@ -6,7 +6,6 @@\n \n @implementer(ISharingPageRole)\n class ReaderRole:\n-\n     title = _("title_can_view", default="Can view")\n     required_permission = permissions.DelegateReaderRole\n     required_interface = None\n@@ -14,7 +13,6 @@ class ReaderRole:\n \n @implementer(ISharingPageRole)\n class EditorRole:\n-\n     title = _("title_can_edit", default="Can edit")\n     required_permission = permissions.DelegateEditorRole\n     required_interface = None\n@@ -22,7 +20,6 @@ class EditorRole:\n \n @implementer(ISharingPageRole)\n class ContributorRole:\n-\n     title = _("title_can_add", default="Can add")\n     required_permission = permissions.DelegateContributorRole\n     required_interface = None\n@@ -30,7 +27,6 @@ class ContributorRole:\n \n @implementer(ISharingPageRole)\n class ReviewerRole:\n-\n     title = _("title_can_review", default="Can review")\n     required_permission = permissions.DelegateReviewerRole\n     required_interface = None\ndiff --git a/plone/app/workflow/tests/test_exportimport.py b/plone/app/workflow/tests/test_exportimport.py\nindex 6a92c0e..54d3f50 100644\n--- a/plone/app/workflow/tests/test_exportimport.py\n+++ b/plone/app/workflow/tests/test_exportimport.py\n@@ -21,7 +21,6 @@\n \n \n class ExportImportTest(unittest.TestCase):\n-\n     layer = UNIT_TESTING\n \n     def setUp(self):\n@@ -45,7 +44,6 @@ def tearDown(self):\n \n class TestImport(ExportImportTest):\n     def test_empty_import_no_purge(self):\n-\n         xml = "<sharing />"\n         context = DummyImportContext(self.site, purge=False)\n         context._files = {"sharing.xml": xml}\n@@ -55,7 +53,6 @@ def test_empty_import_no_purge(self):\n         self.assertEqual(0, len(self.roles()))\n \n     def test_import_single_no_purge(self):\n-\n         xml = """\\\n <sharing>\n     <role id=\'CopyEditor\'\n@@ -77,7 +74,6 @@ def test_import_single_no_purge(self):\n         self.assertEqual(Interface, roles["CopyEditor"].required_interface)\n \n     def test_import_multiple_no_purge(self):\n-\n         xml = """\\\n <sharing>\n     <role id=\'CopyEditor\'\n@@ -102,7 +98,6 @@ def test_import_multiple_no_purge(self):\n         self.assertEqual(None, roles["Controller"].required_permission)\n \n     def test_import_multiple_times_no_purge(self):\n-\n         xml = """\\\n <sharing>\n     <role id=\'CopyEditor\'\n@@ -142,7 +137,6 @@ def test_import_multiple_times_no_purge(self):\n         self.assertEqual(None, roles["Controller"].required_permission)\n \n     def test_import_multiples_times_purge(self):\n-\n         xml = """\\\n <sharing>\n     <role id=\'CopyEditor\'\n@@ -179,7 +173,6 @@ def test_import_multiples_times_purge(self):\n         self.assertEqual(None, roles["Controller"].required_permission)\n \n     def test_import_multiples_times_no_purge_overwrite(self):\n-\n         xml = """\\\n <sharing>\n     <role id=\'CopyEditor\'\n@@ -220,7 +213,6 @@ def test_import_multiples_times_no_purge_overwrite(self):\n         self.assertEqual(None, roles["CopyEditor"].required_interface)\n \n     def test_import_override_global(self):\n-\n         provideUtility(\n             PersistentSharingPageRole("Do stuff", "A permission"),\n             ISharingPageRole,\n@@ -253,7 +245,6 @@ def test_import_override_global(self):\n         )\n \n     def test_remove_one(self):\n-\n         xml = """\\\n <sharing>\n     <role id=\'CopyEditor\'\n@@ -323,7 +314,6 @@ def test_remove_multiple(self):\n \n class TestExport(ExportImportTest):\n     def test_export_empty(self):\n-\n         xml = b"""\\\n <?xml version="1.0" encoding="utf-8"?>\n <sharing/>\ndiff --git a/plone/app/workflow/tests/test_folder_workflow.py b/plone/app/workflow/tests/test_folder_workflow.py\nindex d466426..b6e002b 100644\n--- a/plone/app/workflow/tests/test_folder_workflow.py\n+++ b/plone/app/workflow/tests/test_folder_workflow.py\n@@ -13,7 +13,6 @@\n \n \n class TestFolderWorkflow(unittest.TestCase):\n-\n     layer = PLONE_APP_WORKFLOW_INTEGRATION_TESTING\n \n     def setUp(self):\ndiff --git a/plone/app/workflow/tests/test_functional.py b/plone/app/workflow/tests/test_functional.py\nindex e380d3f..3474270 100644\n--- a/plone/app/workflow/tests/test_functional.py\n+++ b/plone/app/workflow/tests/test_functional.py\n@@ -19,7 +19,6 @@\n \n \n def setup(doctest):\n-\n     portal = doctest.globs["layer"]["portal"]\n     login(portal, "member")\n     setRoles(\ndiff --git a/plone/app/workflow/tests/test_one_state_workflow.py b/plone/app/workflow/tests/test_one_state_workflow.py\nindex d55074e..216d03e 100644\n--- a/plone/app/workflow/tests/test_one_state_workflow.py\n+++ b/plone/app/workflow/tests/test_one_state_workflow.py\n@@ -12,7 +12,6 @@\n \n \n class TestOneStateWorkflow(unittest.TestCase):\n-\n     layer = PLONE_APP_WORKFLOW_INTEGRATION_TESTING\n \n     def setUp(self):\ndiff --git a/plone/app/workflow/tests/test_plone_workflow.py b/plone/app/workflow/tests/test_plone_workflow.py\nindex 8f34816..9436c10 100644\n--- a/plone/app/workflow/tests/test_plone_workflow.py\n+++ b/plone/app/workflow/tests/test_plone_workflow.py\n@@ -13,7 +13,6 @@\n \n \n class TestDefaultWorkflow(unittest.TestCase):\n-\n     layer = PLONE_APP_WORKFLOW_INTEGRATION_TESTING\n \n     def setUp(self):\ndiff --git a/plone/app/workflow/tests/test_remap.py b/plone/app/workflow/tests/test_remap.py\nindex 21e63ad..4f02c3b 100644\n--- a/plone/app/workflow/tests/test_remap.py\n+++ b/plone/app/workflow/tests/test_remap.py\n@@ -6,7 +6,6 @@\n \n \n class TestRemapWorkflow(unittest.TestCase):\n-\n     layer = PLONE_APP_WORKFLOW_INTEGRATION_TESTING\n \n     def setUp(self):\ndiff --git a/plone/app/workflow/tests/test_sharing_view.py b/plone/app/workflow/tests/test_sharing_view.py\nindex 422cdc2..c44643c 100644\n--- a/plone/app/workflow/tests/test_sharing_view.py\n+++ b/plone/app/workflow/tests/test_sharing_view.py\n@@ -16,7 +16,6 @@\n \n \n class TestSharingView(unittest.TestCase):\n-\n     layer = PLONE_APP_WORKFLOW_INTEGRATION_TESTING\n \n     def setUp(self):\ndiff --git a/plone/app/workflow/tests/test_simple_publication_workflow.py b/plone/app/workflow/tests/test_simple_publication_workflow.py\nindex af77721..47e93f7 100644\n--- a/plone/app/workflow/tests/test_simple_publication_workflow.py\n+++ b/plone/app/workflow/tests/test_simple_publication_workflow.py\n@@ -14,7 +14,6 @@\n \n \n class TestSimplePublicationWorkflow(unittest.TestCase):\n-\n     layer = PLONE_APP_WORKFLOW_INTEGRATION_TESTING\n \n     def setUp(self):\n'

Repository: plone.app.workflow


Branch: refs/heads/master
Date: 2023-03-17T19:22:07+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.workflow/commit/5ccd9faae77e7dea6e00f56ded6d29846149838e

chore: zpretty ZCML

Files changed:
M plone/app/workflow/browser/configure.zcml
M plone/app/workflow/configure.zcml
M plone/app/workflow/exportimport.zcml
M plone/app/workflow/permissions.zcml

b'diff --git a/plone/app/workflow/browser/configure.zcml b/plone/app/workflow/browser/configure.zcml\nindex 2ca2dbe..572ff92 100644\n--- a/plone/app/workflow/browser/configure.zcml\n+++ b/plone/app/workflow/browser/configure.zcml\n@@ -1,20 +1,21 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n-    xmlns:browser="http://namespaces.zope.org/browser">\n+    xmlns:browser="http://namespaces.zope.org/browser"\n+    >\n \n-    <browser:page\n-        name="sharing"\n-        for="*"\n-        class=".sharing.SharingView"\n-        permission="plone.DelegateRoles"\n-        />\n+  <browser:page\n+      name="sharing"\n+      for="*"\n+      class=".sharing.SharingView"\n+      permission="plone.DelegateRoles"\n+      />\n \n-    <browser:page\n-        name="updateSharingInfo"\n-        for="*"\n-        class=".sharing.SharingView"\n-        attribute="updateSharingInfo"\n-        permission="plone.DelegateRoles"\n-        />\n+  <browser:page\n+      name="updateSharingInfo"\n+      for="*"\n+      class=".sharing.SharingView"\n+      attribute="updateSharingInfo"\n+      permission="plone.DelegateRoles"\n+      />\n \n </configure>\ndiff --git a/plone/app/workflow/configure.zcml b/plone/app/workflow/configure.zcml\nindex 497575a..211e975 100644\n--- a/plone/app/workflow/configure.zcml\n+++ b/plone/app/workflow/configure.zcml\n@@ -1,34 +1,35 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n-    i18n_domain="plone">\n+    i18n_domain="plone"\n+    >\n \n-    <include file="permissions.zcml" />\n-    <include file="exportimport.zcml" />\n+  <include file="permissions.zcml" />\n+  <include file="exportimport.zcml" />\n \n-    <include package=".browser" />\n+  <include package=".browser" />\n \n-    <!-- Local roles managed in the @@sharing view -->\n-    <utility\n-        name="Reader"\n-        factory=".localroles.ReaderRole"\n-        />\n+  <!-- Local roles managed in the @@sharing view -->\n+  <utility\n+      factory=".localroles.ReaderRole"\n+      name="Reader"\n+      />\n \n-    <utility\n-        name="Editor"\n-        factory=".localroles.EditorRole"\n-        />\n+  <utility\n+      factory=".localroles.EditorRole"\n+      name="Editor"\n+      />\n \n-    <utility\n-        name="Contributor"\n-        factory=".localroles.ContributorRole"\n-        />\n+  <utility\n+      factory=".localroles.ContributorRole"\n+      name="Contributor"\n+      />\n \n-    <utility\n-        name="Reviewer"\n-        factory=".localroles.ReviewerRole"\n-        />\n+  <utility\n+      factory=".localroles.ReviewerRole"\n+      name="Reviewer"\n+      />\n \n-    <!--\n+  <!--\n     <utility\n         name="Manager"\n         factory=".localroles.ManagerRole"\ndiff --git a/plone/app/workflow/exportimport.zcml b/plone/app/workflow/exportimport.zcml\nindex ae986d1..f5aedd0 100644\n--- a/plone/app/workflow/exportimport.zcml\n+++ b/plone/app/workflow/exportimport.zcml\n@@ -1,26 +1,28 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:gs="http://namespaces.zope.org/genericsetup"\n-    i18n_domain="plone">\n+    i18n_domain="plone"\n+    >\n \n-    <adapter\n-        factory=".exportimport.SharingXMLAdapter"\n-        name="plone.app.workflow.sharing"\n-        />\n+  <adapter\n+      factory=".exportimport.SharingXMLAdapter"\n+      name="plone.app.workflow.sharing"\n+      />\n \n-    <gs:importStep\n-        name="sharing"\n-        title="Sharing (local) roles"\n-        description="The roles that are used on the sharing page"\n-        handler=".exportimport.import_sharing">\n-        <depends name="rolemap"/>\n-    </gs:importStep>\n+  <gs:importStep\n+      name="sharing"\n+      title="Sharing (local) roles"\n+      description="The roles that are used on the sharing page"\n+      handler=".exportimport.import_sharing"\n+      >\n+    <depends name="rolemap" />\n+  </gs:importStep>\n \n-    <gs:exportStep\n-        name="sharing"\n-        title="Sharing (local) roles"\n-        description="The roles that are used on the sharing page"\n-        handler=".exportimport.export_sharing"\n-        />\n+  <gs:exportStep\n+      name="sharing"\n+      title="Sharing (local) roles"\n+      description="The roles that are used on the sharing page"\n+      handler=".exportimport.export_sharing"\n+      />\n \n </configure>\ndiff --git a/plone/app/workflow/permissions.zcml b/plone/app/workflow/permissions.zcml\nindex b8c703f..5cb81ed 100644\n--- a/plone/app/workflow/permissions.zcml\n+++ b/plone/app/workflow/permissions.zcml\n@@ -1,30 +1,32 @@\n-<configure xmlns="http://namespaces.zope.org/zope"\n-    i18n_domain="plone.app.workflow">\n+<configure\n+    xmlns="http://namespaces.zope.org/zope"\n+    i18n_domain="plone.app.workflow"\n+    >\n \n-    <!-- Our custom permissions -->\n-    <permission\n-        id="plone.DelegateRoles"\n-        title="Sharing page: Delegate roles"\n-        />\n+  <!-- Our custom permissions -->\n+  <permission\n+      id="plone.DelegateRoles"\n+      title="Sharing page: Delegate roles"\n+      />\n \n-    <permission\n-        id="plone.DelegateReaderRole"\n-        title="Sharing page: Delegate Reader role"\n-        />\n+  <permission\n+      id="plone.DelegateReaderRole"\n+      title="Sharing page: Delegate Reader role"\n+      />\n \n-    <permission\n-        id="plone.DelegateEditorRole"\n-        title="Sharing page: Delegate Editor role"\n-        />\n+  <permission\n+      id="plone.DelegateEditorRole"\n+      title="Sharing page: Delegate Editor role"\n+      />\n \n-    <permission\n-        id="plone.DelegateContributorRole"\n-        title="Sharing page: Delegate Contributor role"\n-        />\n+  <permission\n+      id="plone.DelegateContributorRole"\n+      title="Sharing page: Delegate Contributor role"\n+      />\n \n-    <permission\n-        id="plone.DelegateReviewerRole"\n-        title="Sharing page: Delegate Reviewer role"\n-        />\n+  <permission\n+      id="plone.DelegateReviewerRole"\n+      title="Sharing page: Delegate Reviewer role"\n+      />\n \n </configure>\n'

Repository: plone.app.workflow


Branch: refs/heads/master
Date: 2023-03-17T19:22:41+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.workflow/commit/ddfcbbc0bce26b25a5e7ca1a5d8f8f94e28df6a4

chore: zpretty PT

Files changed:
M plone/app/workflow/browser/macro_wrapper.pt
M plone/app/workflow/browser/sharing.pt

b'diff --git a/plone/app/workflow/browser/macro_wrapper.pt b/plone/app/workflow/browser/macro_wrapper.pt\nindex 38186b7..ff8e2fb 100644\n--- a/plone/app/workflow/browser/macro_wrapper.pt\n+++ b/plone/app/workflow/browser/macro_wrapper.pt\n@@ -1,8 +1,11 @@\n-<tal:block xmlns:tal="http://xml.zope.org/namespaces/tal"\n-      xmlns:metal="http://xml.zope.org/namespaces/metal"\n-      i18n:domain="plone">\n-        <tal:defines define="here nocall:options/instance;\n-                             view nocall:options/view;">\n-           <metal:block use-macro="options/the_macro" />\n-        </tal:defines>\n+<tal:block xmlns:metal="http://xml.zope.org/namespaces/metal"\n+           xmlns:tal="http://xml.zope.org/namespaces/tal"\n+           i18n:domain="plone"\n+>\n+  <tal:defines define="\n+                 here nocall:options/instance;\n+                 view nocall:options/view;\n+               ">\n+    <metal:block use-macro="options/the_macro" />\n+  </tal:defines>\n </tal:block>\ndiff --git a/plone/app/workflow/browser/sharing.pt b/plone/app/workflow/browser/sharing.pt\nindex 913c30f..daf2d77 100644\n--- a/plone/app/workflow/browser/sharing.pt\n+++ b/plone/app/workflow/browser/sharing.pt\n@@ -1,178 +1,291 @@\n-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" metal:use-macro="context/main_template/macros/master"\n-    i18n:domain="plone">\n+<html xmlns="http://www.w3.org/1999/xhtml"\n+      lang="en"\n+      metal:use-macro="context/main_template/macros/master"\n+      xml:lang="en"\n+      i18n:domain="plone"\n+>\n \n-<head>\n-</head>\n+  <head>\n+  </head>\n \n-<body>\n+  <body>\n \n     <metal:main fill-slot="body"\n-                tal:define="context_state context/@@plone_context_state;\n-                            portal_state context/@@plone_portal_state;\n-                            portal portal_state/portal;\n-                            portal_url portal_state/portal_url;\n-                            checkPermission nocall:context/portal_membership/checkPermission;\n-                            can_view_groups python:checkPermission(\'Plone Site Setup: Users and Groups\', portal)">\n-\n-        <article id="content">\n-            <header>\n-                <div class="alert alert-info" role="alert" tal:condition="context_state/is_default_page">\n-                    <strong i18n:translate="">\n+                tal:define="\n+                  context_state context/@@plone_context_state;\n+                  portal_state context/@@plone_portal_state;\n+                  portal portal_state/portal;\n+                  portal_url portal_state/portal_url;\n+                  checkPermission nocall:context/portal_membership/checkPermission;\n+                  can_view_groups python:checkPermission(\'Plone Site Setup: Users and Groups\', portal);\n+                "\n+    >\n+\n+      <article id="content">\n+        <header>\n+          <div class="alert alert-info"\n+               role="alert"\n+               tal:condition="context_state/is_default_page"\n+          >\n+            <strong i18n:translate="">\n                         Info\n-                    </strong>\n-                    <span tal:omit-tag="" i18n:translate="help_sharing_page_default_page">\n+            </strong>\n+            <span tal:omit-tag=""\n+                  i18n:translate="help_sharing_page_default_page"\n+            >\n                         You are adjusting the sharing privileges for a default view in a container.\n                         To adjust them for the entire container,\n-                        <a i18n:name="go_here" class="alert-link" i18n:translate="help_sharing_go_here"\n-                            tal:define="folder context_state/folder"\n-                            tal:attributes="href string:${folder/absolute_url}/sharing">go here</a>.\n-                    </span>\n-                </div>\n+              <a class="alert-link"\n+                 tal:define="\n+                   folder context_state/folder;\n+                 "\n+                 tal:attributes="\n+                   href string:${folder/absolute_url}/sharing;\n+                 "\n+                 i18n:name="go_here"\n+                 i18n:translate="help_sharing_go_here"\n+              >go here</a>.\n+            </span>\n+          </div>\n \n-                <h1 class="documentFirstHeading" i18n:translate="heading_currently_assigned_shares">\n+          <h1 class="documentFirstHeading"\n+              i18n:translate="heading_currently_assigned_shares"\n+          >\n                     Sharing for\n-                    <q tal:content="context/Title" i18n:name="folder">title</q>\n-                </h1>\n+            <q tal:content="context/Title"\n+               i18n:name="folder"\n+            >title</q>\n+          </h1>\n \n-                <div class="documentDescription" i18n:translate="description_sharing_control">\n+          <div class="documentDescription"\n+               i18n:translate="description_sharing_control"\n+          >\n                     You can control who can view and edit your item using the list below.\n-                </div>\n+          </div>\n+\n+          <div tal:condition="not:ajax_load"\n+               tal:replace="structure provider:plone.abovecontentbody"\n+          ></div>\n+\n+          <div id="content-core">\n+            <form class="form-inline pb-4 pt-3"\n+                  method="post"\n+                  tal:attributes="\n+                    action string:${context/absolute_url}/@@sharing;\n+                  "\n+            >\n+\n+              <input name="form.submitted:boolean"\n+                     type="hidden"\n+                     value="True"\n+              />\n \n-                <div tal:replace="structure provider:plone.abovecontentbody" tal:condition="not:ajax_load" />\n-\n-                <div id="content-core">\n-                    <form method="post"\n-                          class="form-inline pb-4 pt-3"\n-                          tal:attributes="action string:${context/absolute_url}/@@sharing">\n-\n-                        <input type="hidden" name="form.submitted:boolean" value="True" />\n-\n-                        <div class="mb-3">\n-                            <input type="text"\n-                                   id="sharing-user-group-search" size="30"\n-                                   name="search_term"\n-                                    title="Search for user or group"\n-                                    placeholder="Search for user or group"\n-                                    i18n:attributes="title; placeholder" class="form-control"\n-                                    value="${request/search_term|nothing}" />\n-                            <button type="submit"\n-                                    id="sharing-search-button"\n-                                    name="form.button.Search" value="Search"\n-                                    class="btn btn-primary"\n-                                    i18n:attributes="value label_search"\n-                                    i18n:translate="label_search">Search</button>\n-                        </div>\n-                    </form>\n-                    <form method="post" tal:attributes="action string:${context/absolute_url}/@@sharing">\n-\n-                        <input type="hidden" name="form.submitted:boolean" value="True" />\n-                        <div id="user-group-sharing-container">\n-                            <table metal:define-macro="user-group-sharing" id="user-group-sharing"\n-                                class="table table-responsive table-bordered table-striped text-center"\n-                                summary="Current sharing permissions" tal:define="available_roles view/roles;\n-                                       num_columns python:len(available_roles) + 1;\n-                                       role_settings view/role_settings"\n-                                i18n:attributes="summary summary_assigned_roles;">\n-\n-                                <thead metal:define-macro="user-group-sharing-head" id="user-group-sharing-head">\n-                                    <tr tal:condition="python:len(role_settings) > 0">\n-                                        <th class="text-left" i18n:translate="label_name">Name</th>\n-                                        <th class="nosort" tal:repeat="role available_roles" i18n:translate=""\n-                                            tal:content="role/title" />\n-                                    </tr>\n-                                </thead>\n-\n-                                <tbody metal:define-macro="user-group-sharing-settings"\n-                                    id="user-group-sharing-settings">\n-                                    <tal:entries repeat="entry role_settings">\n-                                        <tr tal:define="is_group python:entry[\'type\'] == \'group\';\n-                                            disabled entry/disabled | python:False;\n-                                            oddrow repeat/entry/odd;\n-                                            sticky python:entry[\'id\'] in view.STICKY"\n-                                            tal:attributes="class python:oddrow and \'odd\' or \'even\'">\n-                                            <td class="text-left" tal:attributes="title entry/id">\n-                                                <tal:icon tal:condition="is_group"\n-                                                    tal:replace="structure python:icons.tag(\'people\', tag_alt=\'Group\')" />\n-                                                <tal:icon tal:condition="not: is_group"\n-                                                    tal:replace="structure python:icons.tag(\'person\', tag_alt=\'User\')" />\n-\n-                                                <a tal:omit-tag="python:not is_group or not can_view_groups or entry.get(\'id\') == \'AuthenticatedUsers\'"\n-                                                    tal:attributes="href string:${portal_url}/@@usergroup-groupmembership?groupname=${entry/id}">\n-                                                    <tal:sticky condition="sticky">\n-                                                        <span tal:replace="entry/title" />\n-                                                    </tal:sticky>\n-                                                    <tal:nonsticky condition="not:sticky">\n-                                                        <span tal:replace="entry/title" />\n-                                                        <span class="text-muted" condition="entry/id|nothing">\n+              <div class="mb-3">\n+                <input class="form-control"\n+                       id="sharing-user-group-search"\n+                       name="search_term"\n+                       placeholder="Search for user or group"\n+                       size="30"\n+                       title="Search for user or group"\n+                       type="text"\n+                       value="${request/search_term|nothing}"\n+                       i18n:attributes="title; placeholder"\n+                />\n+                <button class="btn btn-primary"\n+                        id="sharing-search-button"\n+                        name="form.button.Search"\n+                        type="submit"\n+                        value="Search"\n+                        i18n:attributes="value label_search"\n+                        i18n:translate="label_search"\n+                >Search</button>\n+              </div>\n+            </form>\n+            <form method="post"\n+                  tal:attributes="\n+                    action string:${context/absolute_url}/@@sharing;\n+                  "\n+            >\n+\n+              <input name="form.submitted:boolean"\n+                     type="hidden"\n+                     value="True"\n+              />\n+              <div id="user-group-sharing-container">\n+                <table class="table table-responsive table-bordered table-striped text-center"\n+                       id="user-group-sharing"\n+                       metal:define-macro="user-group-sharing"\n+                       summary="Current sharing permissions"\n+                       tal:define="\n+                         available_roles view/roles;\n+                         num_columns python:len(available_roles) + 1;\n+                         role_settings view/role_settings;\n+                       "\n+                       i18n:attributes="summary summary_assigned_roles;"\n+                >\n+\n+                  <thead id="user-group-sharing-head"\n+                         metal:define-macro="user-group-sharing-head"\n+                  >\n+                    <tr tal:condition="python:len(role_settings) &gt; 0">\n+                      <th class="text-left"\n+                          i18n:translate="label_name"\n+                      >Name</th>\n+                      <th class="nosort"\n+                          tal:repeat="role available_roles"\n+                          tal:content="role/title"\n+                          i18n:translate=""\n+                      ></th>\n+                    </tr>\n+                  </thead>\n+\n+                  <tbody id="user-group-sharing-settings"\n+                         metal:define-macro="user-group-sharing-settings"\n+                  >\n+                    <tal:entries repeat="entry role_settings">\n+                      <tr tal:define="\n+                            is_group python:entry[\'type\'] == \'group\';\n+                            disabled entry/disabled | python:False;\n+                            oddrow repeat/entry/odd;\n+                            sticky python:entry[\'id\'] in view.STICKY;\n+                          "\n+                          tal:attributes="\n+                            class python:oddrow and \'odd\' or \'even\';\n+                          "\n+                      >\n+                        <td class="text-left"\n+                            tal:attributes="\n+                              title entry/id;\n+                            "\n+                        >\n+                          <tal:icon tal:condition="is_group"\n+                                    tal:replace="structure python:icons.tag(\'people\', tag_alt=\'Group\')"\n+                          />\n+                          <tal:icon tal:condition="not: is_group"\n+                                    tal:replace="structure python:icons.tag(\'person\', tag_alt=\'User\')"\n+                          />\n+\n+                          <a tal:omit-tag="python:not is_group or not can_view_groups or entry.get(\'id\') == \'AuthenticatedUsers\'"\n+                             tal:attributes="\n+                               href string:${portal_url}/@@usergroup-groupmembership?groupname=${entry/id};\n+                             "\n+                          >\n+                            <tal:sticky condition="sticky">\n+                              <span tal:replace="entry/title"></span>\n+                            </tal:sticky>\n+                            <tal:nonsticky condition="not:sticky">\n+                              <span tal:replace="entry/title"></span>\n+                              <span class="text-muted"\n+                                    condition="entry/id|nothing"\n+                              >\n                                                             (${entry/id})\n-                                                        </span>\n-                                                    </tal:nonsticky>\n-                                                </a>\n-\n-                                                <input tal:condition="not:disabled" type="hidden"\n-                                                    name="entries.id:records" tal:attributes="value entry/id" />\n-                                                <input tal:condition="not:disabled" type="hidden"\n-                                                    name="entries.type:records" tal:attributes="value entry/type" />\n-                                            </td>\n-                                            <td class="listingCheckbox" tal:repeat="role available_roles">\n-                                                <tal:block define="entry_role python:entry[\'roles\'][role[\'id\']]">\n-                                                    <tal:icon tal:condition="python:entry_role == \'global\'"\n-                                                        tal:replace="structure python:icons.tag(\'globe\', tag_alt=\'Global\')" />\n-                                                    <tal:icon tal:condition="python:entry_role == \'acquired\'"\n-                                                        tal:replace="structure python:icons.tag(\'diagram-2\', tag_alt=\'Inherited\')" />\n-                                                    <tal:block condition="python:entry_role in (True, False)">\n-                                                        <input class="noborder" type="checkbox" value="True"\n-                                                            tal:attributes="name string:entries.role_${role/id}:records;\n-                                                                checked python:entry_role and \'checked\' or None;\n-                                                                disabled python:disabled or None" />\n-                                                    </tal:block>\n-                                                </tal:block>\n-                                            </td>\n-                                        </tr>\n-                                    </tal:entries>\n-                                </tbody>\n-                            </table>\n-                        </div>\n-\n-                        <div class="mb-3" id="field-inherit" tal:condition="view/can_edit_inherit">\n-                            <div class="form-check">\n-                                <input class="form-check-input single-checkbox-bool-widget bool-field"\n-                                    type="checkbox" name="inherit:boolean" value="1" checked="checked" id="inherit"\n-                                    tal:attributes="checked python:view.inherited() and \'checked\' or None" />\n-                                <label class="form-check-label" for="inherit"\n-                                    i18n:translate="label_inherit_local_roles">\n+                              </span>\n+                            </tal:nonsticky>\n+                          </a>\n+\n+                          <input name="entries.id:records"\n+                                 type="hidden"\n+                                 tal:condition="not:disabled"\n+                                 tal:attributes="\n+                                   value entry/id;\n+                                 "\n+                          />\n+                          <input name="entries.type:records"\n+                                 type="hidden"\n+                                 tal:condition="not:disabled"\n+                                 tal:attributes="\n+                                   value entry/type;\n+                                 "\n+                          />\n+                        </td>\n+                        <td class="listingCheckbox"\n+                            tal:repeat="role available_roles"\n+                        >\n+                          <tal:block define="\n+                                       entry_role python:entry[\'roles\'][role[\'id\']];\n+                                     ">\n+                            <tal:icon tal:condition="python:entry_role == \'global\'"\n+                                      tal:replace="structure python:icons.tag(\'globe\', tag_alt=\'Global\')"\n+                            />\n+                            <tal:icon tal:condition="python:entry_role == \'acquired\'"\n+                                      tal:replace="structure python:icons.tag(\'diagram-2\', tag_alt=\'Inherited\')"\n+                            />\n+                            <tal:block condition="python:entry_role in (True, False)">\n+                              <input class="noborder"\n+                                     type="checkbox"\n+                                     value="True"\n+                                     tal:attributes="\n+                                       name string:entries.role_${role/id}:records;\n+                                       checked python:entry_role and \'checked\' or None;\n+                                       disabled python:disabled or None;\n+                                     "\n+                              />\n+                            </tal:block>\n+                          </tal:block>\n+                        </td>\n+                      </tr>\n+                    </tal:entries>\n+                  </tbody>\n+                </table>\n+              </div>\n+\n+              <div class="mb-3"\n+                   id="field-inherit"\n+                   tal:condition="view/can_edit_inherit"\n+              >\n+                <div class="form-check">\n+                  <input class="form-check-input single-checkbox-bool-widget bool-field"\n+                         id="inherit"\n+                         checked="checked"\n+                         name="inherit:boolean"\n+                         type="checkbox"\n+                         value="1"\n+                         tal:attributes="\n+                           checked python:view.inherited() and \'checked\' or None;\n+                         "\n+                  />\n+                  <label class="form-check-label"\n+                         for="inherit"\n+                         i18n:translate="label_inherit_local_roles"\n+                  >\n                                     Inherit permissions from higher levels\n-                                </label>\n-                                <small class="form-text text-muted" i18n:translate="help_inherit_local_roles">\n+                  </label>\n+                  <small class="form-text text-muted"\n+                         i18n:translate="help_inherit_local_roles"\n+                  >\n                                     By default, permissions from the container of this item are inherited.\n                                     If you disable this, only the explicitly defined sharing permissions will\n                                     be valid.\n                                     In the overview, the symbol\n-                                    <tal:icon i18n:name="image_link_icon"\n-                                        tal:replace="structure python:icons.tag(\'diagram-2\', tag_alt=\'Inherited\')" />\n+                    <tal:icon tal:replace="structure python:icons.tag(\'diagram-2\', tag_alt=\'Inherited\')"\n+                              i18n:name="image_link_icon"\n+                    />\n                                     indicates an inherited value. Similarly, the symbol\n-                                    <tal:icon i18n:name="image_confirm_icon"\n-                                        tal:replace="structure python:icons.tag(\'globe\', tag_alt=\'Global\')" />\n+                    <tal:icon tal:replace="structure python:icons.tag(\'globe\', tag_alt=\'Global\')"\n+                              i18n:name="image_confirm_icon"\n+                    />\n                                     indicates a global role, which is managed by the site administrator.\n-                                </small>\n-                            </div>\n-                        </div>\n-                        <button id="sharing-save-button"\n-                                class="btn btn-primary"\n-                                type="submit"\n-                                name="form.button.Save"\n-                                i18n:translate="label_save">Save</button>\n-                        <button class="btn btn-secondary"\n-                                type="submit"\n-                                name="form.button.Cancel"\n-                                i18n:translate="label_cancel">Cancel</button>\n-                        <input tal:replace="structure context/@@authenticator/authenticator" />\n-                    </form>\n+                  </small>\n                 </div>\n-            </header>\n-        </article>\n+              </div>\n+              <button class="btn btn-primary"\n+                      id="sharing-save-button"\n+                      name="form.button.Save"\n+                      type="submit"\n+                      i18n:translate="label_save"\n+              >Save</button>\n+              <button class="btn btn-secondary"\n+                      name="form.button.Cancel"\n+                      type="submit"\n+                      i18n:translate="label_cancel"\n+              >Cancel</button>\n+              <input tal:replace="structure context/@@authenticator/authenticator" />\n+            </form>\n+          </div>\n+        </header>\n+      </article>\n     </metal:main>\n \n-</body>\n+  </body>\n \n </html>\n'

Repository: plone.app.workflow


Branch: refs/heads/master
Date: 2023-03-17T19:23:31+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.workflow/commit/ba186696d3667fe4951e87442c300657e805da1e

feat: codespell

Files changed:
M plone/app/workflow/browser/sharing.py

b'diff --git a/plone/app/workflow/browser/sharing.py b/plone/app/workflow/browser/sharing.py\nindex 02008af..800b9ef 100644\n--- a/plone/app/workflow/browser/sharing.py\n+++ b/plone/app/workflow/browser/sharing.py\n@@ -532,7 +532,7 @@ def _borg_localroles(self):\n         pas = getToolByName(self.context, "acl_users")\n         editable_local_roles = dict(self.context.get_local_roles())\n \n-        # Calculate borg_local_roles by substracting editable local\n+        # Calculate borg_local_roles by subtracting editable local\n         # roles from all available local roles (including the\n         # borg.localrole provided roles):\n         borg_local_roles = pas._getAllLocalRoles(self.context)\n'

Repository: plone.app.workflow


Branch: refs/heads/master
Date: 2023-03-17T19:43:56+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.workflow/commit/b68c34730c90dd95a520777dd77ba1ce1074b44f

feat: flake8

Files changed:
M plone/app/workflow/__init__.py
M plone/app/workflow/browser/sharing.py
M plone/app/workflow/tests/test_functional.py

b'diff --git a/plone/app/workflow/__init__.py b/plone/app/workflow/__init__.py\nindex 36ed231..80a9f23 100644\n--- a/plone/app/workflow/__init__.py\n+++ b/plone/app/workflow/__init__.py\n@@ -1,7 +1,7 @@\n # Register the permissions with Zope\n from zope.i18nmessageid import MessageFactory\n \n-import plone.app.workflow.permissions\n+import plone.app.workflow.permissions  # noqa: F401\n \n \n PloneMessageFactory = MessageFactory("plone")\ndiff --git a/plone/app/workflow/browser/sharing.py b/plone/app/workflow/browser/sharing.py\nindex 800b9ef..4eda1cf 100644\n--- a/plone/app/workflow/browser/sharing.py\n+++ b/plone/app/workflow/browser/sharing.py\n@@ -501,7 +501,7 @@ def _inherited_roles(self):\n                         if user2 == user:\n                             # Check which roles must be added to roles2\n                             for role in roles:\n-                                if not role in roles2:\n+                                if role not in roles2:\n                                     roles2.append(role)\n                             found = 1\n                             break\ndiff --git a/plone/app/workflow/tests/test_functional.py b/plone/app/workflow/tests/test_functional.py\nindex 3474270..51c350a 100644\n--- a/plone/app/workflow/tests/test_functional.py\n+++ b/plone/app/workflow/tests/test_functional.py\n@@ -7,7 +7,6 @@\n from Products.CMFCore.utils import getToolByName\n \n import doctest\n-import re\n import transaction\n import unittest\n \n'

Repository: plone.app.workflow


Branch: refs/heads/master
Date: 2023-03-17T19:45:44+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.workflow/commit/07d7d589d7ece4b4f6f485c1558678783106bda1

feat: adjust tests

Files changed:
M plone/app/workflow/tests/test_sharing_view.py

b'diff --git a/plone/app/workflow/tests/test_sharing_view.py b/plone/app/workflow/tests/test_sharing_view.py\nindex c44643c..df11b1b 100644\n--- a/plone/app/workflow/tests/test_sharing_view.py\n+++ b/plone/app/workflow/tests/test_sharing_view.py\n@@ -125,8 +125,7 @@ def test_group_name_links_to_prefs_for_admin(self):\n         self.request.form["search_term"] = "testgroup"\n         view = getMultiAdapter((self.portal, self.request), name="sharing")\n         self.assertIn(\n-            \'<a href="http://nohost/plone/@@usergroup-groupmembership?\'\n-            \'groupname=testgroup">\',\n+            \'<a href="http://nohost/plone/@@usergroup-groupmembership?groupname=testgroup" >\',\n             view(),\n             msg="Group name was not linked to group prefs.",\n         )\n'

Repository: plone.app.workflow


Branch: refs/heads/master
Date: 2023-03-17T19:50:55+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.workflow/commit/9d48e1d5dd32822ad7ba53d6ee18b3d04e36e5af

feat: declare dependencies

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex 590d7f2..17eb5e3 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -36,13 +36,21 @@\n     python_requires=">=3.8",\n     extras_require=dict(\n         test=[\n+            "borg.localrole",\n+            "five.localsitemanager",\n             "plone.app.testing",\n+            "plone.testing",\n         ]\n     ),\n     install_requires=[\n+        "setuptools",\n+        "persistent",\n         "plone.base",\n+        "plone.i18n",\n         "plone.memoize",\n         "Products.statusmessages",\n-        "setuptools",\n+        "Products.DCWorkflow",\n+        "Products.GenericSetup",\n+        "zope.dottedname",\n     ],\n )\n'

Repository: plone.app.workflow


Branch: refs/heads/master
Date: 2023-03-17T22:19:09+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.workflow/commit/b76f296aa24e02b1466719cb0d724fc854669d29

Merge pull request #36 from plone/config-with-default-template-0481af98

Config with default template

Files changed:
A .editorconfig
A .meta.toml
A .pre-commit-config.yaml
A news/789b0936.internal
A tox.ini
M plone/app/workflow/__init__.py
M plone/app/workflow/browser/configure.zcml
M plone/app/workflow/browser/macro_wrapper.pt
M plone/app/workflow/browser/sharing.pt
M plone/app/workflow/browser/sharing.py
M plone/app/workflow/configure.zcml
M plone/app/workflow/exportimport.py
M plone/app/workflow/exportimport.zcml
M plone/app/workflow/localroles.py
M plone/app/workflow/permissions.zcml
M plone/app/workflow/tests/test_exportimport.py
M plone/app/workflow/tests/test_folder_workflow.py
M plone/app/workflow/tests/test_functional.py
M plone/app/workflow/tests/test_one_state_workflow.py
M plone/app/workflow/tests/test_plone_workflow.py
M plone/app/workflow/tests/test_remap.py
M plone/app/workflow/tests/test_sharing_view.py
M plone/app/workflow/tests/test_simple_publication_workflow.py
M pyproject.toml
M setup.cfg
M setup.py

b'diff --git a/.editorconfig b/.editorconfig\nnew file mode 100644\nindex 0000000..b4158b8\n--- /dev/null\n+++ b/.editorconfig\n@@ -0,0 +1,39 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+#\n+# EditorConfig Configuration file, for more details see:\n+# http://EditorConfig.org\n+# EditorConfig is a convention description, that could be interpreted\n+# by multiple editors to enforce common coding conventions for specific\n+# file types\n+\n+# top-most EditorConfig file:\n+# Will ignore other EditorConfig files in Home directory or upper tree level.\n+root = true\n+\n+\n+[*]  # For All Files\n+# Unix-style newlines with a newline ending every file\n+end_of_line = lf\n+insert_final_newline = true\n+trim_trailing_whitespace = true\n+# Set default charset\n+charset = utf-8\n+# Indent style default\n+indent_style = space\n+# Max Line Length - a hard line wrap, should be disabled\n+max_line_length = off\n+\n+[*.{py,cfg,ini}]\n+# 4 space indentation\n+indent_size = 4\n+\n+[*.{yml,zpt,pt,dtml,zcml}]\n+# 2 space indentation\n+indent_size = 2\n+\n+[{Makefile,.gitmodules}]\n+# Tab indentation (no size specified, but view as 4 spaces)\n+indent_style = tab\n+indent_size = unset\n+tab_width = unset\ndiff --git a/.meta.toml b/.meta.toml\nnew file mode 100644\nindex 0000000..4ed1a1d\n--- /dev/null\n+++ b/.meta.toml\n@@ -0,0 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[meta]\n+template = "default"\n+commit-id = "789b0936"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nnew file mode 100644\nindex 0000000..582f8ac\n--- /dev/null\n+++ b/.pre-commit-config.yaml\n@@ -0,0 +1,42 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+ci:\n+    autofix_prs: false\n+    autoupdate_schedule: monthly\n+\n+repos:\n+-   repo: https://github.com/asottile/pyupgrade\n+    rev: v3.3.1\n+    hooks:\n+    -   id: pyupgrade\n+        args: [--py38-plus]\n+-   repo: https://github.com/pycqa/isort\n+    rev: 5.12.0\n+    hooks:\n+    -   id: isort\n+-   repo: https://github.com/psf/black\n+    rev: 23.1.0\n+    hooks:\n+    -   id: black\n+-   repo: https://github.com/collective/zpretty\n+    rev: 3.0.2\n+    hooks:\n+    -   id: zpretty\n+-   repo: https://github.com/PyCQA/flake8\n+    rev: 6.0.0\n+    hooks:\n+    -   id: flake8\n+-   repo: https://github.com/codespell-project/codespell\n+    rev: v2.2.2\n+    hooks:\n+    -   id: codespell\n+        additional_dependencies:\n+          - tomli\n+-   repo: https://github.com/mgedmin/check-manifest\n+    rev: "0.49"\n+    hooks:\n+    -   id: check-manifest\n+-   repo: https://github.com/regebro/pyroma\n+    rev: "4.2"\n+    hooks:\n+    -   id: pyroma\ndiff --git a/news/789b0936.internal b/news/789b0936.internal\nnew file mode 100644\nindex 0000000..c08f539\n--- /dev/null\n+++ b/news/789b0936.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/plone/app/workflow/__init__.py b/plone/app/workflow/__init__.py\nindex 36ed231..80a9f23 100644\n--- a/plone/app/workflow/__init__.py\n+++ b/plone/app/workflow/__init__.py\n@@ -1,7 +1,7 @@\n # Register the permissions with Zope\n from zope.i18nmessageid import MessageFactory\n \n-import plone.app.workflow.permissions\n+import plone.app.workflow.permissions  # noqa: F401\n \n \n PloneMessageFactory = MessageFactory("plone")\ndiff --git a/plone/app/workflow/browser/configure.zcml b/plone/app/workflow/browser/configure.zcml\nindex 2ca2dbe..572ff92 100644\n--- a/plone/app/workflow/browser/configure.zcml\n+++ b/plone/app/workflow/browser/configure.zcml\n@@ -1,20 +1,21 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n-    xmlns:browser="http://namespaces.zope.org/browser">\n+    xmlns:browser="http://namespaces.zope.org/browser"\n+    >\n \n-    <browser:page\n-        name="sharing"\n-        for="*"\n-        class=".sharing.SharingView"\n-        permission="plone.DelegateRoles"\n-        />\n+  <browser:page\n+      name="sharing"\n+      for="*"\n+      class=".sharing.SharingView"\n+      permission="plone.DelegateRoles"\n+      />\n \n-    <browser:page\n-        name="updateSharingInfo"\n-        for="*"\n-        class=".sharing.SharingView"\n-        attribute="updateSharingInfo"\n-        permission="plone.DelegateRoles"\n-        />\n+  <browser:page\n+      name="updateSharingInfo"\n+      for="*"\n+      class=".sharing.SharingView"\n+      attribute="updateSharingInfo"\n+      permission="plone.DelegateRoles"\n+      />\n \n </configure>\ndiff --git a/plone/app/workflow/browser/macro_wrapper.pt b/plone/app/workflow/browser/macro_wrapper.pt\nindex 38186b7..ff8e2fb 100644\n--- a/plone/app/workflow/browser/macro_wrapper.pt\n+++ b/plone/app/workflow/browser/macro_wrapper.pt\n@@ -1,8 +1,11 @@\n-<tal:block xmlns:tal="http://xml.zope.org/namespaces/tal"\n-      xmlns:metal="http://xml.zope.org/namespaces/metal"\n-      i18n:domain="plone">\n-        <tal:defines define="here nocall:options/instance;\n-                             view nocall:options/view;">\n-           <metal:block use-macro="options/the_macro" />\n-        </tal:defines>\n+<tal:block xmlns:metal="http://xml.zope.org/namespaces/metal"\n+           xmlns:tal="http://xml.zope.org/namespaces/tal"\n+           i18n:domain="plone"\n+>\n+  <tal:defines define="\n+                 here nocall:options/instance;\n+                 view nocall:options/view;\n+               ">\n+    <metal:block use-macro="options/the_macro" />\n+  </tal:defines>\n </tal:block>\ndiff --git a/plone/app/workflow/browser/sharing.pt b/plone/app/workflow/browser/sharing.pt\nindex 913c30f..daf2d77 100644\n--- a/plone/app/workflow/browser/sharing.pt\n+++ b/plone/app/workflow/browser/sharing.pt\n@@ -1,178 +1,291 @@\n-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" metal:use-macro="context/main_template/macros/master"\n-    i18n:domain="plone">\n+<html xmlns="http://www.w3.org/1999/xhtml"\n+      lang="en"\n+      metal:use-macro="context/main_template/macros/master"\n+      xml:lang="en"\n+      i18n:domain="plone"\n+>\n \n-<head>\n-</head>\n+  <head>\n+  </head>\n \n-<body>\n+  <body>\n \n     <metal:main fill-slot="body"\n-                tal:define="context_state context/@@plone_context_state;\n-                            portal_state context/@@plone_portal_state;\n-                            portal portal_state/portal;\n-                            portal_url portal_state/portal_url;\n-                            checkPermission nocall:context/portal_membership/checkPermission;\n-                            can_view_groups python:checkPermission(\'Plone Site Setup: Users and Groups\', portal)">\n-\n-        <article id="content">\n-            <header>\n-                <div class="alert alert-info" role="alert" tal:condition="context_state/is_default_page">\n-                    <strong i18n:translate="">\n+                tal:define="\n+                  context_state context/@@plone_context_state;\n+                  portal_state context/@@plone_portal_state;\n+                  portal portal_state/portal;\n+                  portal_url portal_state/portal_url;\n+                  checkPermission nocall:context/portal_membership/checkPermission;\n+                  can_view_groups python:checkPermission(\'Plone Site Setup: Users and Groups\', portal);\n+                "\n+    >\n+\n+      <article id="content">\n+        <header>\n+          <div class="alert alert-info"\n+               role="alert"\n+               tal:condition="context_state/is_default_page"\n+          >\n+            <strong i18n:translate="">\n                         Info\n-                    </strong>\n-                    <span tal:omit-tag="" i18n:translate="help_sharing_page_default_page">\n+            </strong>\n+            <span tal:omit-tag=""\n+                  i18n:translate="help_sharing_page_default_page"\n+            >\n                         You are adjusting the sharing privileges for a default view in a container.\n                         To adjust them for the entire container,\n-                        <a i18n:name="go_here" class="alert-link" i18n:translate="help_sharing_go_here"\n-                            tal:define="folder context_state/folder"\n-                            tal:attributes="href string:${folder/absolute_url}/sharing">go here</a>.\n-                    </span>\n-                </div>\n+              <a class="alert-link"\n+                 tal:define="\n+                   folder context_state/folder;\n+                 "\n+                 tal:attributes="\n+                   href string:${folder/absolute_url}/sharing;\n+                 "\n+                 i18n:name="go_here"\n+                 i18n:translate="help_sharing_go_here"\n+              >go here</a>.\n+            </span>\n+          </div>\n \n-                <h1 class="documentFirstHeading" i18n:translate="heading_currently_assigned_shares">\n+          <h1 class="documentFirstHeading"\n+              i18n:translate="heading_currently_assigned_shares"\n+          >\n                     Sharing for\n-                    <q tal:content="context/Title" i18n:name="folder">title</q>\n-                </h1>\n+            <q tal:content="context/Title"\n+               i18n:name="folder"\n+            >title</q>\n+          </h1>\n \n-                <div class="documentDescription" i18n:translate="description_sharing_control">\n+          <div class="documentDescription"\n+               i18n:translate="description_sharing_control"\n+          >\n                     You can control who can view and edit your item using the list below.\n-                </div>\n+          </div>\n+\n+          <div tal:condition="not:ajax_load"\n+               tal:replace="structure provider:plone.abovecontentbody"\n+          ></div>\n+\n+          <div id="content-core">\n+            <form class="form-inline pb-4 pt-3"\n+                  method="post"\n+                  tal:attributes="\n+                    action string:${context/absolute_url}/@@sharing;\n+                  "\n+            >\n+\n+              <input name="form.submitted:boolean"\n+                     type="hidden"\n+                     value="True"\n+              />\n \n-                <div tal:replace="structure provider:plone.abovecontentbody" tal:condition="not:ajax_load" />\n-\n-                <div id="content-core">\n-                    <form method="post"\n-                          class="form-inline pb-4 pt-3"\n-                          tal:attributes="action string:${context/absolute_url}/@@sharing">\n-\n-                        <input type="hidden" name="form.submitted:boolean" value="True" />\n-\n-                        <div class="mb-3">\n-                            <input type="text"\n-                                   id="sharing-user-group-search" size="30"\n-                                   name="search_term"\n-                                    title="Search for user or group"\n-                                    placeholder="Search for user or group"\n-                                    i18n:attributes="title; placeholder" class="form-control"\n-                                    value="${request/search_term|nothing}" />\n-                            <button type="submit"\n-                                    id="sharing-search-button"\n-                                    name="form.button.Search" value="Search"\n-                                    class="btn btn-primary"\n-                                    i18n:attributes="value label_search"\n-                                    i18n:translate="label_search">Search</button>\n-                        </div>\n-                    </form>\n-                    <form method="post" tal:attributes="action string:${context/absolute_url}/@@sharing">\n-\n-                        <input type="hidden" name="form.submitted:boolean" value="True" />\n-                        <div id="user-group-sharing-container">\n-                            <table metal:define-macro="user-group-sharing" id="user-group-sharing"\n-                                class="table table-responsive table-bordered table-striped text-center"\n-                                summary="Current sharing permissions" tal:define="available_roles view/roles;\n-                                       num_columns python:len(available_roles) + 1;\n-                                       role_settings view/role_settings"\n-                                i18n:attributes="summary summary_assigned_roles;">\n-\n-                                <thead metal:define-macro="user-group-sharing-head" id="user-group-sharing-head">\n-                                    <tr tal:condition="python:len(role_settings) > 0">\n-                                        <th class="text-left" i18n:translate="label_name">Name</th>\n-                                        <th class="nosort" tal:repeat="role available_roles" i18n:translate=""\n-                                            tal:content="role/title" />\n-                                    </tr>\n-                                </thead>\n-\n-                                <tbody metal:define-macro="user-group-sharing-settings"\n-                                    id="user-group-sharing-settings">\n-                                    <tal:entries repeat="entry role_settings">\n-                                        <tr tal:define="is_group python:entry[\'type\'] == \'group\';\n-                                            disabled entry/disabled | python:False;\n-                                            oddrow repeat/entry/odd;\n-                                            sticky python:entry[\'id\'] in view.STICKY"\n-                                            tal:attributes="class python:oddrow and \'odd\' or \'even\'">\n-                                            <td class="text-left" tal:attributes="title entry/id">\n-                                                <tal:icon tal:condition="is_group"\n-                                                    tal:replace="structure python:icons.tag(\'people\', tag_alt=\'Group\')" />\n-                                                <tal:icon tal:condition="not: is_group"\n-                                                    tal:replace="structure python:icons.tag(\'person\', tag_alt=\'User\')" />\n-\n-                                                <a tal:omit-tag="python:not is_group or not can_view_groups or entry.get(\'id\') == \'AuthenticatedUsers\'"\n-                                                    tal:attributes="href string:${portal_url}/@@usergroup-groupmembership?groupname=${entry/id}">\n-                                                    <tal:sticky condition="sticky">\n-                                                        <span tal:replace="entry/title" />\n-                                                    </tal:sticky>\n-                                                    <tal:nonsticky condition="not:sticky">\n-                                                        <span tal:replace="entry/title" />\n-                                                        <span class="text-muted" condition="entry/id|nothing">\n+              <div class="mb-3">\n+                <input class="form-control"\n+                       id="sharing-user-group-search"\n+                       name="search_term"\n+                       placeholder="Search for user or group"\n+                       size="30"\n+                       title="Search for user or group"\n+                       type="text"\n+                       value="${request/search_term|nothing}"\n+                       i18n:attributes="title; placeholder"\n+                />\n+                <button class="btn btn-primary"\n+                        id="sharing-search-button"\n+                        name="form.button.Search"\n+                        type="submit"\n+                        value="Search"\n+                        i18n:attributes="value label_search"\n+                        i18n:translate="label_search"\n+                >Search</button>\n+              </div>\n+            </form>\n+            <form method="post"\n+                  tal:attributes="\n+                    action string:${context/absolute_url}/@@sharing;\n+                  "\n+            >\n+\n+              <input name="form.submitted:boolean"\n+                     type="hidden"\n+                     value="True"\n+              />\n+              <div id="user-group-sharing-container">\n+                <table class="table table-responsive table-bordered table-striped text-center"\n+                       id="user-group-sharing"\n+                       metal:define-macro="user-group-sharing"\n+                       summary="Current sharing permissions"\n+                       tal:define="\n+                         available_roles view/roles;\n+                         num_columns python:len(available_roles) + 1;\n+                         role_settings view/role_settings;\n+                       "\n+                       i18n:attributes="summary summary_assigned_roles;"\n+                >\n+\n+                  <thead id="user-group-sharing-head"\n+                         metal:define-macro="user-group-sharing-head"\n+                  >\n+                    <tr tal:condition="python:len(role_settings) &gt; 0">\n+                      <th class="text-left"\n+                          i18n:translate="label_name"\n+                      >Name</th>\n+                      <th class="nosort"\n+                          tal:repeat="role available_roles"\n+                          tal:content="role/title"\n+                          i18n:translate=""\n+                      ></th>\n+                    </tr>\n+                  </thead>\n+\n+                  <tbody id="user-group-sharing-settings"\n+                         metal:define-macro="user-group-sharing-settings"\n+                  >\n+                    <tal:entries repeat="entry role_settings">\n+                      <tr tal:define="\n+                            is_group python:entry[\'type\'] == \'group\';\n+                            disabled entry/disabled | python:False;\n+                            oddrow repeat/entry/odd;\n+                            sticky python:entry[\'id\'] in view.STICKY;\n+                          "\n+                          tal:attributes="\n+                            class python:oddrow and \'odd\' or \'even\';\n+                          "\n+                      >\n+                        <td class="text-left"\n+                            tal:attributes="\n+                              title entry/id;\n+                            "\n+                        >\n+                          <tal:icon tal:condition="is_group"\n+                                    tal:replace="structure python:icons.tag(\'people\', tag_alt=\'Group\')"\n+                          />\n+                          <tal:icon tal:condition="not: is_group"\n+                                    tal:replace="structure python:icons.tag(\'person\', tag_alt=\'User\')"\n+                          />\n+\n+                          <a tal:omit-tag="python:not is_group or not can_view_groups or entry.get(\'id\') == \'AuthenticatedUsers\'"\n+                             tal:attributes="\n+                               href string:${portal_url}/@@usergroup-groupmembership?groupname=${entry/id};\n+                             "\n+                          >\n+                            <tal:sticky condition="sticky">\n+                              <span tal:replace="entry/title"></span>\n+                            </tal:sticky>\n+                            <tal:nonsticky condition="not:sticky">\n+                              <span tal:replace="entry/title"></span>\n+                              <span class="text-muted"\n+                                    condition="entry/id|nothing"\n+                              >\n                                                             (${entry/id})\n-                                                        </span>\n-                                                    </tal:nonsticky>\n-                                                </a>\n-\n-                                                <input tal:condition="not:disabled" type="hidden"\n-                                                    name="entries.id:records" tal:attributes="value entry/id" />\n-                                                <input tal:condition="not:disabled" type="hidden"\n-                                                    name="entries.type:records" tal:attributes="value entry/type" />\n-                                            </td>\n-                                            <td class="listingCheckbox" tal:repeat="role available_roles">\n-                                                <tal:block define="entry_role python:entry[\'roles\'][role[\'id\']]">\n-                                                    <tal:icon tal:condition="python:entry_role == \'global\'"\n-                                                        tal:replace="structure python:icons.tag(\'globe\', tag_alt=\'Global\')" />\n-                                                    <tal:icon tal:condition="python:entry_role == \'acquired\'"\n-                                                        tal:replace="structure python:icons.tag(\'diagram-2\', tag_alt=\'Inherited\')" />\n-                                                    <tal:block condition="python:entry_role in (True, False)">\n-                                                        <input class="noborder" type="checkbox" value="True"\n-                                                            tal:attributes="name string:entries.role_${role/id}:records;\n-                                                                checked python:entry_role and \'checked\' or None;\n-                                                                disabled python:disabled or None" />\n-                                                    </tal:block>\n-                                                </tal:block>\n-                                            </td>\n-                                        </tr>\n-                                    </tal:entries>\n-                                </tbody>\n-                            </table>\n-                        </div>\n-\n-                        <div class="mb-3" id="field-inherit" tal:condition="view/can_edit_inherit">\n-                            <div class="form-check">\n-                                <input class="form-check-input single-checkbox-bool-widget bool-field"\n-                                    type="checkbox" name="inherit:boolean" value="1" checked="checked" id="inherit"\n-                                    tal:attributes="checked python:view.inherited() and \'checked\' or None" />\n-                                <label class="form-check-label" for="inherit"\n-                                    i18n:translate="label_inherit_local_roles">\n+                              </span>\n+                            </tal:nonsticky>\n+                          </a>\n+\n+                          <input name="entries.id:records"\n+                                 type="hidden"\n+                                 tal:condition="not:disabled"\n+                                 tal:attributes="\n+                                   value entry/id;\n+                                 "\n+                          />\n+                          <input name="entries.type:records"\n+                                 type="hidden"\n+                                 tal:condition="not:disabled"\n+                                 tal:attributes="\n+                                   value entry/type;\n+                                 "\n+                          />\n+                        </td>\n+                        <td class="listingCheckbox"\n+                            tal:repeat="role available_roles"\n+                        >\n+                          <tal:block define="\n+                                       entry_role python:entry[\'roles\'][role[\'id\']];\n+                                     ">\n+                            <tal:icon tal:condition="python:entry_role == \'global\'"\n+                                      tal:replace="structure python:icons.tag(\'globe\', tag_alt=\'Global\')"\n+                            />\n+                            <tal:icon tal:condition="python:entry_role == \'acquired\'"\n+                                      tal:replace="structure python:icons.tag(\'diagram-2\', tag_alt=\'Inherited\')"\n+                            />\n+                            <tal:block condition="python:entry_role in (True, False)">\n+                              <input class="noborder"\n+                                     type="checkbox"\n+                                     value="True"\n+                                     tal:attributes="\n+                                       name string:entries.role_${role/id}:records;\n+                                       checked python:entry_role and \'checked\' or None;\n+                                       disabled python:disabled or None;\n+                                     "\n+                              />\n+                            </tal:block>\n+                          </tal:block>\n+                        </td>\n+                      </tr>\n+                    </tal:entries>\n+                  </tbody>\n+                </table>\n+              </div>\n+\n+              <div class="mb-3"\n+                   id="field-inherit"\n+                   tal:condition="view/can_edit_inherit"\n+              >\n+                <div class="form-check">\n+                  <input class="form-check-input single-checkbox-bool-widget bool-field"\n+                         id="inherit"\n+                         checked="checked"\n+                         name="inherit:boolean"\n+                         type="checkbox"\n+                         value="1"\n+                         tal:attributes="\n+                           checked python:view.inherited() and \'checked\' or None;\n+                         "\n+                  />\n+                  <label class="form-check-label"\n+                         for="inherit"\n+                         i18n:translate="label_inherit_local_roles"\n+                  >\n                                     Inherit permissions from higher levels\n-                                </label>\n-                                <small class="form-text text-muted" i18n:translate="help_inherit_local_roles">\n+                  </label>\n+                  <small class="form-text text-muted"\n+                         i18n:translate="help_inherit_local_roles"\n+                  >\n                                     By default, permissions from the container of this item are inherited.\n                                     If you disable this, only the explicitly defined sharing permissions will\n                                     be valid.\n                                     In the overview, the symbol\n-                                    <tal:icon i18n:name="image_link_icon"\n-                                        tal:replace="structure python:icons.tag(\'diagram-2\', tag_alt=\'Inherited\')" />\n+                    <tal:icon tal:replace="structure python:icons.tag(\'diagram-2\', tag_alt=\'Inherited\')"\n+                              i18n:name="image_link_icon"\n+                    />\n                                     indicates an inherited value. Similarly, the symbol\n-                                    <tal:icon i18n:name="image_confirm_icon"\n-                                        tal:replace="structure python:icons.tag(\'globe\', tag_alt=\'Global\')" />\n+                    <tal:icon tal:replace="structure python:icons.tag(\'globe\', tag_alt=\'Global\')"\n+                              i18n:name="image_confirm_icon"\n+                    />\n                                     indicates a global role, which is managed by the site administrator.\n-                                </small>\n-                            </div>\n-                        </div>\n-                        <button id="sharing-save-button"\n-                                class="btn btn-primary"\n-                                type="submit"\n-                                name="form.button.Save"\n-                                i18n:translate="label_save">Save</button>\n-                        <button class="btn btn-secondary"\n-                                type="submit"\n-                                name="form.button.Cancel"\n-                                i18n:translate="label_cancel">Cancel</button>\n-                        <input tal:replace="structure context/@@authenticator/authenticator" />\n-                    </form>\n+                  </small>\n                 </div>\n-            </header>\n-        </article>\n+              </div>\n+              <button class="btn btn-primary"\n+                      id="sharing-save-button"\n+                      name="form.button.Save"\n+                      type="submit"\n+                      i18n:translate="label_save"\n+              >Save</button>\n+              <button class="btn btn-secondary"\n+                      name="form.button.Cancel"\n+                      type="submit"\n+                      i18n:translate="label_cancel"\n+              >Cancel</button>\n+              <input tal:replace="structure context/@@authenticator/authenticator" />\n+            </form>\n+          </div>\n+        </header>\n+      </article>\n     </metal:main>\n \n-</body>\n+  </body>\n \n </html>\ndiff --git a/plone/app/workflow/browser/sharing.py b/plone/app/workflow/browser/sharing.py\nindex 53e6a8f..4eda1cf 100644\n--- a/plone/app/workflow/browser/sharing.py\n+++ b/plone/app/workflow/browser/sharing.py\n@@ -47,7 +47,6 @@ def merge_search_results(results, key):\n \n \n class SharingView(BrowserView):\n-\n     # Actions\n \n     template = ViewPageTemplateFile("sharing.pt")\n@@ -502,7 +501,7 @@ def _inherited_roles(self):\n                         if user2 == user:\n                             # Check which roles must be added to roles2\n                             for role in roles:\n-                                if not role in roles2:\n+                                if role not in roles2:\n                                     roles2.append(role)\n                             found = 1\n                             break\n@@ -533,7 +532,7 @@ def _borg_localroles(self):\n         pas = getToolByName(self.context, "acl_users")\n         editable_local_roles = dict(self.context.get_local_roles())\n \n-        # Calculate borg_local_roles by substracting editable local\n+        # Calculate borg_local_roles by subtracting editable local\n         # roles from all available local roles (including the\n         # borg.localrole provided roles):\n         borg_local_roles = pas._getAllLocalRoles(self.context)\ndiff --git a/plone/app/workflow/configure.zcml b/plone/app/workflow/configure.zcml\nindex 497575a..211e975 100644\n--- a/plone/app/workflow/configure.zcml\n+++ b/plone/app/workflow/configure.zcml\n@@ -1,34 +1,35 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n-    i18n_domain="plone">\n+    i18n_domain="plone"\n+    >\n \n-    <include file="permissions.zcml" />\n-    <include file="exportimport.zcml" />\n+  <include file="permissions.zcml" />\n+  <include file="exportimport.zcml" />\n \n-    <include package=".browser" />\n+  <include package=".browser" />\n \n-    <!-- Local roles managed in the @@sharing view -->\n-    <utility\n-        name="Reader"\n-        factory=".localroles.ReaderRole"\n-        />\n+  <!-- Local roles managed in the @@sharing view -->\n+  <utility\n+      factory=".localroles.ReaderRole"\n+      name="Reader"\n+      />\n \n-    <utility\n-        name="Editor"\n-        factory=".localroles.EditorRole"\n-        />\n+  <utility\n+      factory=".localroles.EditorRole"\n+      name="Editor"\n+      />\n \n-    <utility\n-        name="Contributor"\n-        factory=".localroles.ContributorRole"\n-        />\n+  <utility\n+      factory=".localroles.ContributorRole"\n+      name="Contributor"\n+      />\n \n-    <utility\n-        name="Reviewer"\n-        factory=".localroles.ReviewerRole"\n-        />\n+  <utility\n+      factory=".localroles.ReviewerRole"\n+      name="Reviewer"\n+      />\n \n-    <!--\n+  <!--\n     <utility\n         name="Manager"\n         factory=".localroles.ManagerRole"\ndiff --git a/plone/app/workflow/exportimport.py b/plone/app/workflow/exportimport.py\nindex fbd4537..ddaffb9 100644\n--- a/plone/app/workflow/exportimport.py\n+++ b/plone/app/workflow/exportimport.py\n@@ -40,7 +40,6 @@ class SharingXMLAdapter(XMLAdapterBase):\n     info_tag = "__sharing_gs__"\n \n     def _importNode(self, node):\n-\n         if self.environ.shouldPurge():\n             self._purgeRoles()\n \n@@ -76,7 +75,6 @@ def _purgeRoles(self):\n             self.context.unregisterUtility(provided=reg.provided, name=reg.name)\n \n     def _initRole(self, node):\n-\n         if node.nodeName != "role":\n             return\n \n@@ -104,7 +102,6 @@ def _initRole(self, node):\n         )\n \n     def _extractRole(self, reg):\n-\n         component = reg.component\n \n         node = self._doc.createElement("role")\n@@ -123,7 +120,6 @@ def _extractRole(self, reg):\n \n \n def import_sharing(context):\n-\n     sm = getSiteManager(context.getSite())\n     logger = context.getLogger("plone.app.workflow")\n \n@@ -143,7 +139,6 @@ def import_sharing(context):\n \n \n def export_sharing(context):\n-\n     sm = getSiteManager(context.getSite())\n     logger = context.getLogger("plone.app.workflow")\n \ndiff --git a/plone/app/workflow/exportimport.zcml b/plone/app/workflow/exportimport.zcml\nindex ae986d1..f5aedd0 100644\n--- a/plone/app/workflow/exportimport.zcml\n+++ b/plone/app/workflow/exportimport.zcml\n@@ -1,26 +1,28 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:gs="http://namespaces.zope.org/genericsetup"\n-    i18n_domain="plone">\n+    i18n_domain="plone"\n+    >\n \n-    <adapter\n-        factory=".exportimport.SharingXMLAdapter"\n-        name="plone.app.workflow.sharing"\n-        />\n+  <adapter\n+      factory=".exportimport.SharingXMLAdapter"\n+      name="plone.app.workflow.sharing"\n+      />\n \n-    <gs:importStep\n-        name="sharing"\n-        title="Sharing (local) roles"\n-        description="The roles that are used on the sharing page"\n-        handler=".exportimport.import_sharing">\n-        <depends name="rolemap"/>\n-    </gs:importStep>\n+  <gs:importStep\n+      name="sharing"\n+      title="Sharing (local) roles"\n+      description="The roles that are used on the sharing page"\n+      handler=".exportimport.import_sharing"\n+      >\n+    <depends name="rolemap" />\n+  </gs:importStep>\n \n-    <gs:exportStep\n-        name="sharing"\n-        title="Sharing (local) roles"\n-        description="The roles that are used on the sharing page"\n-        handler=".exportimport.export_sharing"\n-        />\n+  <gs:exportStep\n+      name="sharing"\n+      title="Sharing (local) roles"\n+      description="The roles that are used on the sharing page"\n+      handler=".exportimport.export_sharing"\n+      />\n \n </configure>\ndiff --git a/plone/app/workflow/localroles.py b/plone/app/workflow/localroles.py\nindex 7ecf9d2..3c9a44d 100644\n--- a/plone/app/workflow/localroles.py\n+++ b/plone/app/workflow/localroles.py\n@@ -6,7 +6,6 @@\n \n @implementer(ISharingPageRole)\n class ReaderRole:\n-\n     title = _("title_can_view", default="Can view")\n     required_permission = permissions.DelegateReaderRole\n     required_interface = None\n@@ -14,7 +13,6 @@ class ReaderRole:\n \n @implementer(ISharingPageRole)\n class EditorRole:\n-\n     title = _("title_can_edit", default="Can edit")\n     required_permission = permissions.DelegateEditorRole\n     required_interface = None\n@@ -22,7 +20,6 @@ class EditorRole:\n \n @implementer(ISharingPageRole)\n class ContributorRole:\n-\n     title = _("title_can_add", default="Can add")\n     required_permission = permissions.DelegateContributorRole\n     required_interface = None\n@@ -30,7 +27,6 @@ class ContributorRole:\n \n @implementer(ISharingPageRole)\n class ReviewerRole:\n-\n     title = _("title_can_review", default="Can review")\n     required_permission = permissions.DelegateReviewerRole\n     required_interface = None\ndiff --git a/plone/app/workflow/permissions.zcml b/plone/app/workflow/permissions.zcml\nindex b8c703f..5cb81ed 100644\n--- a/plone/app/workflow/permissions.zcml\n+++ b/plone/app/workflow/permissions.zcml\n@@ -1,30 +1,32 @@\n-<configure xmlns="http://namespaces.zope.org/zope"\n-    i18n_domain="plone.app.workflow">\n+<configure\n+    xmlns="http://namespaces.zope.org/zope"\n+    i18n_domain="plone.app.workflow"\n+    >\n \n-    <!-- Our custom permissions -->\n-    <permission\n-        id="plone.DelegateRoles"\n-        title="Sharing page: Delegate roles"\n-        />\n+  <!-- Our custom permissions -->\n+  <permission\n+      id="plone.DelegateRoles"\n+      title="Sharing page: Delegate roles"\n+      />\n \n-    <permission\n-        id="plone.DelegateReaderRole"\n-        title="Sharing page: Delegate Reader role"\n-        />\n+  <permission\n+      id="plone.DelegateReaderRole"\n+      title="Sharing page: Delegate Reader role"\n+      />\n \n-    <permission\n-        id="plone.DelegateEditorRole"\n-        title="Sharing page: Delegate Editor role"\n-        />\n+  <permission\n+      id="plone.DelegateEditorRole"\n+      title="Sharing page: Delegate Editor role"\n+      />\n \n-    <permission\n-        id="plone.DelegateContributorRole"\n-        title="Sharing page: Delegate Contributor role"\n-        />\n+  <permission\n+      id="plone.DelegateContributorRole"\n+      title="Sharing page: Delegate Contributor role"\n+      />\n \n-    <permission\n-        id="plone.DelegateReviewerRole"\n-        title="Sharing page: Delegate Reviewer role"\n-        />\n+  <permission\n+      id="plone.DelegateReviewerRole"\n+      title="Sharing page: Delegate Reviewer role"\n+      />\n \n </configure>\ndiff --git a/plone/app/workflow/tests/test_exportimport.py b/plone/app/workflow/tests/test_exportimport.py\nindex 6a92c0e..54d3f50 100644\n--- a/plone/app/workflow/tests/test_exportimport.py\n+++ b/plone/app/workflow/tests/test_exportimport.py\n@@ -21,7 +21,6 @@\n \n \n class ExportImportTest(unittest.TestCase):\n-\n     layer = UNIT_TESTING\n \n     def setUp(self):\n@@ -45,7 +44,6 @@ def tearDown(self):\n \n class TestImport(ExportImportTest):\n     def test_empty_import_no_purge(self):\n-\n         xml = "<sharing />"\n         context = DummyImportContext(self.site, purge=False)\n         context._files = {"sharing.xml": xml}\n@@ -55,7 +53,6 @@ def test_empty_import_no_purge(self):\n         self.assertEqual(0, len(self.roles()))\n \n     def test_import_single_no_purge(self):\n-\n         xml = """\\\n <sharing>\n     <role id=\'CopyEditor\'\n@@ -77,7 +74,6 @@ def test_import_single_no_purge(self):\n         self.assertEqual(Interface, roles["CopyEditor"].required_interface)\n \n     def test_import_multiple_no_purge(self):\n-\n         xml = """\\\n <sharing>\n     <role id=\'CopyEditor\'\n@@ -102,7 +98,6 @@ def test_import_multiple_no_purge(self):\n         self.assertEqual(None, roles["Controller"].required_permission)\n \n     def test_import_multiple_times_no_purge(self):\n-\n         xml = """\\\n <sharing>\n     <role id=\'CopyEditor\'\n@@ -142,7 +137,6 @@ def test_import_multiple_times_no_purge(self):\n         self.assertEqual(None, roles["Controller"].required_permission)\n \n     def test_import_multiples_times_purge(self):\n-\n         xml = """\\\n <sharing>\n     <role id=\'CopyEditor\'\n@@ -179,7 +173,6 @@ def test_import_multiples_times_purge(self):\n         self.assertEqual(None, roles["Controller"].required_permission)\n \n     def test_import_multiples_times_no_purge_overwrite(self):\n-\n         xml = """\\\n <sharing>\n     <role id=\'CopyEditor\'\n@@ -220,7 +213,6 @@ def test_import_multiples_times_no_purge_overwrite(self):\n         self.assertEqual(None, roles["CopyEditor"].required_interface)\n \n     def test_import_override_global(self):\n-\n         provideUtility(\n             PersistentSharingPageRole("Do stuff", "A permission"),\n             ISharingPageRole,\n@@ -253,7 +245,6 @@ def test_import_override_global(self):\n         )\n \n     def test_remove_one(self):\n-\n         xml = """\\\n <sharing>\n     <role id=\'CopyEditor\'\n@@ -323,7 +314,6 @@ def test_remove_multiple(self):\n \n class TestExport(ExportImportTest):\n     def test_export_empty(self):\n-\n         xml = b"""\\\n <?xml version="1.0" encoding="utf-8"?>\n <sharing/>\ndiff --git a/plone/app/workflow/tests/test_folder_workflow.py b/plone/app/workflow/tests/test_folder_workflow.py\nindex d466426..b6e002b 100644\n--- a/plone/app/workflow/tests/test_folder_workflow.py\n+++ b/plone/app/workflow/tests/test_folder_workflow.py\n@@ -13,7 +13,6 @@\n \n \n class TestFolderWorkflow(unittest.TestCase):\n-\n     layer = PLONE_APP_WORKFLOW_INTEGRATION_TESTING\n \n     def setUp(self):\ndiff --git a/plone/app/workflow/tests/test_functional.py b/plone/app/workflow/tests/test_functional.py\nindex e380d3f..51c350a 100644\n--- a/plone/app/workflow/tests/test_functional.py\n+++ b/plone/app/workflow/tests/test_functional.py\n@@ -7,7 +7,6 @@\n from Products.CMFCore.utils import getToolByName\n \n import doctest\n-import re\n import transaction\n import unittest\n \n@@ -19,7 +18,6 @@\n \n \n def setup(doctest):\n-\n     portal = doctest.globs["layer"]["portal"]\n     login(portal, "member")\n     setRoles(\ndiff --git a/plone/app/workflow/tests/test_one_state_workflow.py b/plone/app/workflow/tests/test_one_state_workflow.py\nindex d55074e..216d03e 100644\n--- a/plone/app/workflow/tests/test_one_state_workflow.py\n+++ b/plone/app/workflow/tests/test_one_state_workflow.py\n@@ -12,7 +12,6 @@\n \n \n class TestOneStateWorkflow(unittest.TestCase):\n-\n     layer = PLONE_APP_WORKFLOW_INTEGRATION_TESTING\n \n     def setUp(self):\ndiff --git a/plone/app/workflow/tests/test_plone_workflow.py b/plone/app/workflow/tests/test_plone_workflow.py\nindex 8f34816..9436c10 100644\n--- a/plone/app/workflow/tests/test_plone_workflow.py\n+++ b/plone/app/workflow/tests/test_plone_workflow.py\n@@ -13,7 +13,6 @@\n \n \n class TestDefaultWorkflow(unittest.TestCase):\n-\n     layer = PLONE_APP_WORKFLOW_INTEGRATION_TESTING\n \n     def setUp(self):\ndiff --git a/plone/app/workflow/tests/test_remap.py b/plone/app/workflow/tests/test_remap.py\nindex 21e63ad..4f02c3b 100644\n--- a/plone/app/workflow/tests/test_remap.py\n+++ b/plone/app/workflow/tests/test_remap.py\n@@ -6,7 +6,6 @@\n \n \n class TestRemapWorkflow(unittest.TestCase):\n-\n     layer = PLONE_APP_WORKFLOW_INTEGRATION_TESTING\n \n     def setUp(self):\ndiff --git a/plone/app/workflow/tests/test_sharing_view.py b/plone/app/workflow/tests/test_sharing_view.py\nindex 422cdc2..df11b1b 100644\n--- a/plone/app/workflow/tests/test_sharing_view.py\n+++ b/plone/app/workflow/tests/test_sharing_view.py\n@@ -16,7 +16,6 @@\n \n \n class TestSharingView(unittest.TestCase):\n-\n     layer = PLONE_APP_WORKFLOW_INTEGRATION_TESTING\n \n     def setUp(self):\n@@ -126,8 +125,7 @@ def test_group_name_links_to_prefs_for_admin(self):\n         self.request.form["search_term"] = "testgroup"\n         view = getMultiAdapter((self.portal, self.request), name="sharing")\n         self.assertIn(\n-            \'<a href="http://nohost/plone/@@usergroup-groupmembership?\'\n-            \'groupname=testgroup">\',\n+            \'<a href="http://nohost/plone/@@usergroup-groupmembership?groupname=testgroup" >\',\n             view(),\n             msg="Group name was not linked to group prefs.",\n         )\ndiff --git a/plone/app/workflow/tests/test_simple_publication_workflow.py b/plone/app/workflow/tests/test_simple_publication_workflow.py\nindex af77721..47e93f7 100644\n--- a/plone/app/workflow/tests/test_simple_publication_workflow.py\n+++ b/plone/app/workflow/tests/test_simple_publication_workflow.py\n@@ -14,7 +14,6 @@\n \n \n class TestSimplePublicationWorkflow(unittest.TestCase):\n-\n     layer = PLONE_APP_WORKFLOW_INTEGRATION_TESTING\n \n     def setUp(self):\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 05b615d..9eb73f3 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,3 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [tool.towncrier]\n filename = "CHANGES.rst"\n directory = "news/"\n@@ -18,3 +20,43 @@ showcontent = true\n directory = "bugfix"\n name = "Bug fixes:"\n showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "internal"\n+name = "Internal:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "documentation"\n+name = "Documentation:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "tests"\n+name = "Tests"\n+showcontent = true\n+\n+[tool.isort]\n+profile = "plone"\n+\n+[tool.black]\n+target-version = ["py38"]\n+\n+[tool.dependencychecker]\n+Zope = [\n+  # Zope own provided namespaces\n+  \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n+  \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n+  \'Zope2\', \'webdav\', \'zmi\',\n+  # Zope dependencies\n+  \'Acquisition\', \'DateTime\', \'transaction\', \'zExceptions\', \'ZODB\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.deferredimport\', \'zope.event\',\n+  \'zope.exceptions\', \'zope.globalrequest\', \'zope.i18n\', \'zope.i18nmessageid\',\n+  \'zope.interface\', \'zope.lifecycleevent\', \'zope.location\', \'zope.publisher\',\n+  \'zope.schema\', \'zope.security\', \'zope.site\', \'zope.traversing\', \'AccessControl\',\n+]\n+\'plone.base\' = [\n+  \'AccessControl\', \'Products.BTreeFolder2\', \'Products.CMFCore\',\n+  \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n+]\n+python-dateutil = [\'dateutil\']\ndiff --git a/setup.cfg b/setup.cfg\nindex 5a31c37..0da8f8f 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -1,9 +1,23 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [bdist_wheel]\n universal = 0\n \n-[isort]\n-# black compatible Plone isort rules:\n-profile = black\n-force_alphabetical_sort = True\n-force_single_line = True\n-lines_after_imports = 2\n\\ No newline at end of file\n+[flake8]\n+doctests = 1\n+ignore =\n+    # black takes care of line length\n+    E501,\n+    # black takes care of where to break lines\n+    W503,\n+    # black takes care of spaces within slicing (list[:])\n+    E203,\n+    # black takes care of spaces after commas\n+    E231,\n+\n+[check-manifest]\n+ignore =\n+    .editorconfig\n+    .meta.toml\n+    .pre-commit-config.yaml\n+    tox.ini\ndiff --git a/setup.py b/setup.py\nindex 590d7f2..17eb5e3 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -36,13 +36,21 @@\n     python_requires=">=3.8",\n     extras_require=dict(\n         test=[\n+            "borg.localrole",\n+            "five.localsitemanager",\n             "plone.app.testing",\n+            "plone.testing",\n         ]\n     ),\n     install_requires=[\n+        "setuptools",\n+        "persistent",\n         "plone.base",\n+        "plone.i18n",\n         "plone.memoize",\n         "Products.statusmessages",\n-        "setuptools",\n+        "Products.DCWorkflow",\n+        "Products.GenericSetup",\n+        "zope.dottedname",\n     ],\n )\ndiff --git a/tox.ini b/tox.ini\nnew file mode 100644\nindex 0000000..e1553d9\n--- /dev/null\n+++ b/tox.ini\n@@ -0,0 +1,50 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[tox]\n+envlist =\n+    format\n+    lint\n+    test\n+\n+[testenv]\n+allowlist_externals =\n+    sh\n+\n+[testenv:format]\n+description = automatically reformat code\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a pyupgrade\n+    pre-commit run -a isort\n+    pre-commit run -a black\n+    pre-commit run -a zpretty\n+\n+[testenv:lint]\n+description = run linters that will help improve the code style\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a\n+\n+[testenv:dependencies]\n+description = check if the package defines all its dependencies and generate a graph out of them\n+deps =\n+    z3c.dependencychecker==2.11\n+    pipdeptree==2.5.1\n+    graphviz  # optional dependency of pipdeptree\n+commands =\n+    dependencychecker\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+\n+[testenv:test]\n+usedevelop = true\n+deps =\n+    zope.testrunner\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    zope-testrunner --test-path={toxinidir} -s plone.app.workflow\n+extras =\n+    test\n'

