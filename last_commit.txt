Repository: plone.app.event


Branch: refs/heads/master
Date: 2022-04-10T00:15:32+02:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/plone.app.event/commit/3ddc0e21adb0be0ff772f62365ef5062f9905a25

Wrap JavaScript a immediately invoked function to not expose the functions in global namespace.

Files changed:
A news/355.bugfix
M plone/app/event/browser/resources/event.js

b'diff --git a/news/355.bugfix b/news/355.bugfix\nnew file mode 100644\nindex 00000000..3c7f33b5\n--- /dev/null\n+++ b/news/355.bugfix\n@@ -0,0 +1,2 @@\n+Wrap JavaScript a immediately invoked function to not expose the functions in global namespace.\n+[thet]\ndiff --git a/plone/app/event/browser/resources/event.js b/plone/app/event/browser/resources/event.js\nindex 962bb824..e6f712a9 100644\n--- a/plone/app/event/browser/resources/event.js\n+++ b/plone/app/event/browser/resources/event.js\n@@ -1,99 +1,103 @@\n-function is_valid_date(date) {\n-  // https://stackoverflow.com/a/1353711/1337474\n-  return date instanceof Date && !isNaN(date);\n-}\n+(function () {\n \n-function tzaware_date(date) {\n-  tzoffset = -date.getTimezoneOffset() * 60 * 1000;\n-  date.setTime(date.getTime() + tzoffset);\n-  return date;\n-}\n-\n-function add_hours(date, hours) {\n-  // https://stackoverflow.com/a/1050782/1337474\n-  date.setTime(date.getTime() + hours * 60 * 60 * 1000);\n-  return date;\n-}\n+  function is_valid_date(date) {\n+    // https://stackoverflow.com/a/1353711/1337474\n+    return date instanceof Date && !isNaN(date);\n+  }\n \n-function set_date(el, datevalue) {\n-  var date = new Date(datevalue); // change to Date to enforce datetime isostrings.\n-  if (!is_valid_date(date)) {\n-    return;\n+  function tzaware_date(date) {\n+    tzoffset = -date.getTimezoneOffset() * 60 * 1000;\n+    date.setTime(date.getTime() + tzoffset);\n+    return date;\n   }\n-  isostring = tzaware_date(date).toISOString();\n-  if (el.type === "date") {\n-    el.value = isostring.split("T")[0];\n-  } else if (el.type === "datetime-local") {\n-    el.value = isostring.split(".")[0];\n+\n+  function add_hours(date, hours) {\n+    // https://stackoverflow.com/a/1050782/1337474\n+    date.setTime(date.getTime() + hours * 60 * 60 * 1000);\n+    return date;\n   }\n-}\n \n-function open_end_toggle(event_edit__open_end, event_edit__end) {\n-  if (event_edit__open_end.checked) {\n-    $(event_edit__end.closest(".field")).hide();\n-  } else {\n-    $(event_edit__end.closest(".field")).show();\n+  function set_date(el, datevalue) {\n+    var date = new Date(datevalue); // change to Date to enforce datetime isostrings.\n+    if (!is_valid_date(date)) {\n+      return;\n+    }\n+    isostring = tzaware_date(date).toISOString();\n+    if (el.type === "date") {\n+      el.value = isostring.split("T")[0];\n+    } else if (el.type === "datetime-local") {\n+      el.value = isostring.split(".")[0];\n+    }\n   }\n-}\n \n-function whole_day_toggle(event_edit__whole_day, event_edit__start, event_edit__end) {\n-  start_val = event_edit__start.value;\n-  end_val = event_edit__end.value;\n-  if (event_edit__whole_day.checked) {\n-    event_edit__start.type = "date";\n-    event_edit__end.type = "date";\n-  } else {\n-    event_edit__start.type = "datetime-local";\n-    event_edit__end.type = "datetime-local";\n+  function open_end_toggle(event_edit__open_end, event_edit__end) {\n+    if (event_edit__open_end.checked) {\n+      $(event_edit__end.closest(".field")).hide();\n+    } else {\n+      $(event_edit__end.closest(".field")).show();\n+    }\n   }\n-  // set start/end values with current hours when switching back to\n-  // datetime-local\n-  if(start_val.indexOf("T") == -1) {\n-    start_val = `${start_val}T${(new Date()).getHours()}:00`;\n-    end_val = `${end_val}T${(new Date()).getHours() + 1}:00`;\n+\n+  function whole_day_toggle(event_edit__whole_day, event_edit__start, event_edit__end) {\n+    start_val = event_edit__start.value;\n+    end_val = event_edit__end.value;\n+    if (event_edit__whole_day.checked) {\n+      event_edit__start.type = "date";\n+      event_edit__end.type = "date";\n+    } else {\n+      event_edit__start.type = "datetime-local";\n+      event_edit__end.type = "datetime-local";\n+    }\n+    // set start/end values with current hours when switching back to\n+    // datetime-local\n+    if(start_val.indexOf("T") == -1) {\n+      start_val = `${start_val}T${(new Date()).getHours()}:00`;\n+      end_val = `${end_val}T${(new Date()).getHours() + 1}:00`;\n+    }\n+    set_date(event_edit__start, start_val);\n+    set_date(event_edit__end, end_val);\n   }\n-  set_date(event_edit__start, start_val);\n-  set_date(event_edit__end, end_val);\n-}\n \n-document.addEventListener("DOMContentLoaded", function() {\n+  document.addEventListener("DOMContentLoaded", function() {\n \n-  var event_edit__open_end = document.querySelector("input[name=\'form.widgets.IEventBasic.open_end:list\'], input[name=\'form.widgets.IEventBasicNonRequired.open_end:list\']"); // prettier-ignore\n-  var event_edit__whole_day = document.querySelector("input[name=\'form.widgets.IEventBasic.whole_day:list\'], input[name=\'form.widgets.IEventBasicNonRequired.whole_day:list\']"); // prettier-ignore\n-  var event_edit__start = document.querySelector("[name=\'form.widgets.IEventBasic.start\'], [name=\'form.widgets.IEventBasicNonRequired.start\']"); // prettier-ignore\n-  var event_edit__end = document.querySelector("[name=\'form.widgets.IEventBasic.end\'], [name=\'form.widgets.IEventBasicNonRequired.end\']"); // prettier-ignore\n+    var event_edit__open_end = document.querySelector("input[name=\'form.widgets.IEventBasic.open_end:list\'], input[name=\'form.widgets.IEventBasicNonRequired.open_end:list\']"); // prettier-ignore\n+    var event_edit__whole_day = document.querySelector("input[name=\'form.widgets.IEventBasic.whole_day:list\'], input[name=\'form.widgets.IEventBasicNonRequired.whole_day:list\']"); // prettier-ignore\n+    var event_edit__start = document.querySelector("[name=\'form.widgets.IEventBasic.start\'], [name=\'form.widgets.IEventBasicNonRequired.start\']"); // prettier-ignore\n+    var event_edit__end = document.querySelector("[name=\'form.widgets.IEventBasic.end\'], [name=\'form.widgets.IEventBasicNonRequired.end\']"); // prettier-ignore\n \n-  var start_val;\n-  var end_val;\n+    var start_val;\n+    var end_val;\n \n-  if (event_edit__start) {\n-    event_edit__start.addEventListener("change", function () {\n-      start_val = event_edit__start.value;\n-      end_val = event_edit__end.value;\n-      var _start = new Date(start_val);\n-      var _end = new Date(end_val);\n-      if (!is_valid_date(_end) || _end < _start) {\n-        _end = _start;\n-        _end = add_hours(_end, 1);\n-        end_val = _end.toISOString();\n-        set_date(event_edit__end, end_val);\n-      }\n-    });\n-  }\n+    if (event_edit__start) {\n+      event_edit__start.addEventListener("change", function () {\n+        start_val = event_edit__start.value;\n+        end_val = event_edit__end.value;\n+        var _start = new Date(start_val);\n+        var _end = new Date(end_val);\n+        if (!is_valid_date(_end) || _end < _start) {\n+          _end = _start;\n+          _end = add_hours(_end, 1);\n+          end_val = _end.toISOString();\n+          set_date(event_edit__end, end_val);\n+        }\n+      });\n+    }\n \n-  if (event_edit__open_end) {\n-    open_end_toggle(event_edit__open_end, event_edit__end);\n-    event_edit__open_end.addEventListener("input", function() {\n+    if (event_edit__open_end) {\n       open_end_toggle(event_edit__open_end, event_edit__end);\n-    });\n-  }\n+      event_edit__open_end.addEventListener("input", function() {\n+        open_end_toggle(event_edit__open_end, event_edit__end);\n+      });\n+    }\n \n-  if (event_edit__whole_day) {\n-    // on load\n-    whole_day_toggle(event_edit__whole_day, event_edit__start, event_edit__end);\n-    // on change\n-    event_edit__whole_day.addEventListener("input", function(e) {\n+    if (event_edit__whole_day) {\n+      // on load\n       whole_day_toggle(event_edit__whole_day, event_edit__start, event_edit__end);\n-    });\n-  }\n-});\n+      // on change\n+      event_edit__whole_day.addEventListener("input", function(e) {\n+        whole_day_toggle(event_edit__whole_day, event_edit__start, event_edit__end);\n+      });\n+    }\n+  });\n+\n+})();\n'

Repository: plone.app.event


Branch: refs/heads/master
Date: 2022-04-10T00:19:23+02:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/plone.app.event/commit/4494c180fb7fe24f6115030ce3d3356946457ae0

Remove project-specific code from selectors in the event JavaScript.

Files changed:
A news/355-2.bugfix
M plone/app/event/browser/resources/event.js

b'diff --git a/news/355-2.bugfix b/news/355-2.bugfix\nnew file mode 100644\nindex 00000000..f2a55de9\n--- /dev/null\n+++ b/news/355-2.bugfix\n@@ -0,0 +1,2 @@\n+Remove project-specific code from selectors in the event JavaScript.\n+[thet]\ndiff --git a/plone/app/event/browser/resources/event.js b/plone/app/event/browser/resources/event.js\nindex e6f712a9..9671ebc8 100644\n--- a/plone/app/event/browser/resources/event.js\n+++ b/plone/app/event/browser/resources/event.js\n@@ -60,10 +60,10 @@\n \n   document.addEventListener("DOMContentLoaded", function() {\n \n-    var event_edit__open_end = document.querySelector("input[name=\'form.widgets.IEventBasic.open_end:list\'], input[name=\'form.widgets.IEventBasicNonRequired.open_end:list\']"); // prettier-ignore\n-    var event_edit__whole_day = document.querySelector("input[name=\'form.widgets.IEventBasic.whole_day:list\'], input[name=\'form.widgets.IEventBasicNonRequired.whole_day:list\']"); // prettier-ignore\n-    var event_edit__start = document.querySelector("[name=\'form.widgets.IEventBasic.start\'], [name=\'form.widgets.IEventBasicNonRequired.start\']"); // prettier-ignore\n-    var event_edit__end = document.querySelector("[name=\'form.widgets.IEventBasic.end\'], [name=\'form.widgets.IEventBasicNonRequired.end\']"); // prettier-ignore\n+    var event_edit__open_end = document.querySelector("input[name=\'form.widgets.IEventBasic.open_end:list\']"); // prettier-ignore\n+    var event_edit__whole_day = document.querySelector("input[name=\'form.widgets.IEventBasic.whole_day:list\']"); // prettier-ignore\n+    var event_edit__start = document.querySelector("[name=\'form.widgets.IEventBasic.start\']"); // prettier-ignore\n+    var event_edit__end = document.querySelector("[name=\'form.widgets.IEventBasic.end\']"); // prettier-ignore\n \n     var start_val;\n     var end_val;\n'

Repository: plone.app.event


Branch: refs/heads/master
Date: 2022-04-10T00:55:24+02:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/plone.app.event/commit/34c0784a2b9fac9c16c489cf985d09cb1805f96e

prettier JavaScript.

Files changed:
M plone/app/event/browser/resources/event.js

b'diff --git a/plone/app/event/browser/resources/event.js b/plone/app/event/browser/resources/event.js\nindex 9671ebc8..bc5f9f9f 100644\n--- a/plone/app/event/browser/resources/event.js\n+++ b/plone/app/event/browser/resources/event.js\n@@ -1,5 +1,4 @@\n (function () {\n-\n   function is_valid_date(date) {\n     // https://stackoverflow.com/a/1353711/1337474\n     return date instanceof Date && !isNaN(date);\n@@ -38,7 +37,11 @@\n     }\n   }\n \n-  function whole_day_toggle(event_edit__whole_day, event_edit__start, event_edit__end) {\n+  function whole_day_toggle(\n+    event_edit__whole_day,\n+    event_edit__start,\n+    event_edit__end\n+  ) {\n     start_val = event_edit__start.value;\n     end_val = event_edit__end.value;\n     if (event_edit__whole_day.checked) {\n@@ -50,16 +53,15 @@\n     }\n     // set start/end values with current hours when switching back to\n     // datetime-local\n-    if(start_val.indexOf("T") == -1) {\n-      start_val = `${start_val}T${(new Date()).getHours()}:00`;\n-      end_val = `${end_val}T${(new Date()).getHours() + 1}:00`;\n+    if (start_val.indexOf("T") == -1) {\n+      start_val = `${start_val}T${new Date().getHours()}:00`;\n+      end_val = `${end_val}T${new Date().getHours() + 1}:00`;\n     }\n     set_date(event_edit__start, start_val);\n     set_date(event_edit__end, end_val);\n   }\n \n-  document.addEventListener("DOMContentLoaded", function() {\n-\n+  document.addEventListener("DOMContentLoaded", function () {\n     var event_edit__open_end = document.querySelector("input[name=\'form.widgets.IEventBasic.open_end:list\']"); // prettier-ignore\n     var event_edit__whole_day = document.querySelector("input[name=\'form.widgets.IEventBasic.whole_day:list\']"); // prettier-ignore\n     var event_edit__start = document.querySelector("[name=\'form.widgets.IEventBasic.start\']"); // prettier-ignore\n@@ -85,19 +87,26 @@\n \n     if (event_edit__open_end) {\n       open_end_toggle(event_edit__open_end, event_edit__end);\n-      event_edit__open_end.addEventListener("input", function() {\n+      event_edit__open_end.addEventListener("input", function () {\n         open_end_toggle(event_edit__open_end, event_edit__end);\n       });\n     }\n \n     if (event_edit__whole_day) {\n       // on load\n-      whole_day_toggle(event_edit__whole_day, event_edit__start, event_edit__end);\n+      whole_day_toggle(\n+        event_edit__whole_day,\n+        event_edit__start,\n+        event_edit__end\n+      );\n       // on change\n-      event_edit__whole_day.addEventListener("input", function(e) {\n-        whole_day_toggle(event_edit__whole_day, event_edit__start, event_edit__end);\n+      event_edit__whole_day.addEventListener("input", function (e) {\n+        whole_day_toggle(\n+          event_edit__whole_day,\n+          event_edit__start,\n+          event_edit__end\n+        );\n       });\n     }\n   });\n-\n })();\n'

Repository: plone.app.event


Branch: refs/heads/master
Date: 2022-04-11T01:13:25+02:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/plone.app.event/commit/595b7262630fb52265ccd1732efb568a8af43181

Do frontend date widget calculation with datetime-native dates to simplify code better universal support.

Files changed:
A news/355-3.bugfix
M plone/app/event/browser/resources/event.js

b'diff --git a/news/355-3.bugfix b/news/355-3.bugfix\nnew file mode 100644\nindex 00000000..b57bede1\n--- /dev/null\n+++ b/news/355-3.bugfix\n@@ -0,0 +1 @@\n+Do frontend date widget calculation with datetime-native dates to simplify code better universal support.\ndiff --git a/plone/app/event/browser/resources/event.js b/plone/app/event/browser/resources/event.js\nindex bc5f9f9f..08e30e83 100644\n--- a/plone/app/event/browser/resources/event.js\n+++ b/plone/app/event/browser/resources/event.js\n@@ -1,19 +1,39 @@\n (function () {\n+  function zero_pad(val, len) {\n+    val = val.toString();\n+    len = len || 2;\n+    while (val.length < len) {\n+      val = "0" + val;\n+    }\n+    return val;\n+  }\n+\n+  function datetime_local_iso(date) {\n+    // Return the current date/time as timezone naive ISO string.\n+    return (\n+      zero_pad(date.getFullYear()) +\n+      "-" +\n+      zero_pad(date.getMonth() + 1) +\n+      "-" +\n+      zero_pad(date.getDate()) +\n+      "T" +\n+      zero_pad(date.getHours()) +\n+      ":" +\n+      zero_pad(date.getMinutes())\n+    );\n+  }\n+\n   function is_valid_date(date) {\n     // https://stackoverflow.com/a/1353711/1337474\n     return date instanceof Date && !isNaN(date);\n   }\n \n-  function tzaware_date(date) {\n-    tzoffset = -date.getTimezoneOffset() * 60 * 1000;\n-    date.setTime(date.getTime() + tzoffset);\n-    return date;\n-  }\n-\n   function add_hours(date, hours) {\n     // https://stackoverflow.com/a/1050782/1337474\n+    hours = hours || 1;\n     date.setTime(date.getTime() + hours * 60 * 60 * 1000);\n-    return date;\n+    var iso = datetime_local_iso(date);\n+    return new Date(iso);\n   }\n \n   function set_date(el, datevalue) {\n@@ -21,11 +41,11 @@\n     if (!is_valid_date(date)) {\n       return;\n     }\n-    isostring = tzaware_date(date).toISOString();\n+    isostring = datetime_local_iso(date);\n     if (el.type === "date") {\n       el.value = isostring.split("T")[0];\n     } else if (el.type === "datetime-local") {\n-      el.value = isostring.split(".")[0];\n+      el.value = isostring;\n     }\n   }\n \n@@ -51,12 +71,6 @@\n       event_edit__start.type = "datetime-local";\n       event_edit__end.type = "datetime-local";\n     }\n-    // set start/end values with current hours when switching back to\n-    // datetime-local\n-    if (start_val.indexOf("T") == -1) {\n-      start_val = `${start_val}T${new Date().getHours()}:00`;\n-      end_val = `${end_val}T${new Date().getHours() + 1}:00`;\n-    }\n     set_date(event_edit__start, start_val);\n     set_date(event_edit__end, end_val);\n   }\n@@ -79,8 +93,7 @@\n         if (!is_valid_date(_end) || _end < _start) {\n           _end = _start;\n           _end = add_hours(_end, 1);\n-          end_val = _end.toISOString();\n-          set_date(event_edit__end, end_val);\n+          set_date(event_edit__end, _end);\n         }\n       });\n     }\n'

Repository: plone.app.event


Branch: refs/heads/master
Date: 2022-04-19T15:20:26+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.event/commit/f6302dd7444b6037aa9f53ebb0779acf70246601

Merge pull request #355 from plone/js-iife

JavaScript improvements

Files changed:
A news/355-2.bugfix
A news/355-3.bugfix
A news/355.bugfix
M plone/app/event/browser/resources/event.js

b'diff --git a/news/355-2.bugfix b/news/355-2.bugfix\nnew file mode 100644\nindex 00000000..f2a55de9\n--- /dev/null\n+++ b/news/355-2.bugfix\n@@ -0,0 +1,2 @@\n+Remove project-specific code from selectors in the event JavaScript.\n+[thet]\ndiff --git a/news/355-3.bugfix b/news/355-3.bugfix\nnew file mode 100644\nindex 00000000..b57bede1\n--- /dev/null\n+++ b/news/355-3.bugfix\n@@ -0,0 +1 @@\n+Do frontend date widget calculation with datetime-native dates to simplify code better universal support.\ndiff --git a/news/355.bugfix b/news/355.bugfix\nnew file mode 100644\nindex 00000000..3c7f33b5\n--- /dev/null\n+++ b/news/355.bugfix\n@@ -0,0 +1,2 @@\n+Wrap JavaScript a immediately invoked function to not expose the functions in global namespace.\n+[thet]\ndiff --git a/plone/app/event/browser/resources/event.js b/plone/app/event/browser/resources/event.js\nindex 962bb824..08e30e83 100644\n--- a/plone/app/event/browser/resources/event.js\n+++ b/plone/app/event/browser/resources/event.js\n@@ -1,99 +1,125 @@\n-function is_valid_date(date) {\n-  // https://stackoverflow.com/a/1353711/1337474\n-  return date instanceof Date && !isNaN(date);\n-}\n-\n-function tzaware_date(date) {\n-  tzoffset = -date.getTimezoneOffset() * 60 * 1000;\n-  date.setTime(date.getTime() + tzoffset);\n-  return date;\n-}\n-\n-function add_hours(date, hours) {\n-  // https://stackoverflow.com/a/1050782/1337474\n-  date.setTime(date.getTime() + hours * 60 * 60 * 1000);\n-  return date;\n-}\n+(function () {\n+  function zero_pad(val, len) {\n+    val = val.toString();\n+    len = len || 2;\n+    while (val.length < len) {\n+      val = "0" + val;\n+    }\n+    return val;\n+  }\n \n-function set_date(el, datevalue) {\n-  var date = new Date(datevalue); // change to Date to enforce datetime isostrings.\n-  if (!is_valid_date(date)) {\n-    return;\n+  function datetime_local_iso(date) {\n+    // Return the current date/time as timezone naive ISO string.\n+    return (\n+      zero_pad(date.getFullYear()) +\n+      "-" +\n+      zero_pad(date.getMonth() + 1) +\n+      "-" +\n+      zero_pad(date.getDate()) +\n+      "T" +\n+      zero_pad(date.getHours()) +\n+      ":" +\n+      zero_pad(date.getMinutes())\n+    );\n   }\n-  isostring = tzaware_date(date).toISOString();\n-  if (el.type === "date") {\n-    el.value = isostring.split("T")[0];\n-  } else if (el.type === "datetime-local") {\n-    el.value = isostring.split(".")[0];\n+\n+  function is_valid_date(date) {\n+    // https://stackoverflow.com/a/1353711/1337474\n+    return date instanceof Date && !isNaN(date);\n   }\n-}\n \n-function open_end_toggle(event_edit__open_end, event_edit__end) {\n-  if (event_edit__open_end.checked) {\n-    $(event_edit__end.closest(".field")).hide();\n-  } else {\n-    $(event_edit__end.closest(".field")).show();\n+  function add_hours(date, hours) {\n+    // https://stackoverflow.com/a/1050782/1337474\n+    hours = hours || 1;\n+    date.setTime(date.getTime() + hours * 60 * 60 * 1000);\n+    var iso = datetime_local_iso(date);\n+    return new Date(iso);\n   }\n-}\n \n-function whole_day_toggle(event_edit__whole_day, event_edit__start, event_edit__end) {\n-  start_val = event_edit__start.value;\n-  end_val = event_edit__end.value;\n-  if (event_edit__whole_day.checked) {\n-    event_edit__start.type = "date";\n-    event_edit__end.type = "date";\n-  } else {\n-    event_edit__start.type = "datetime-local";\n-    event_edit__end.type = "datetime-local";\n+  function set_date(el, datevalue) {\n+    var date = new Date(datevalue); // change to Date to enforce datetime isostrings.\n+    if (!is_valid_date(date)) {\n+      return;\n+    }\n+    isostring = datetime_local_iso(date);\n+    if (el.type === "date") {\n+      el.value = isostring.split("T")[0];\n+    } else if (el.type === "datetime-local") {\n+      el.value = isostring;\n+    }\n   }\n-  // set start/end values with current hours when switching back to\n-  // datetime-local\n-  if(start_val.indexOf("T") == -1) {\n-    start_val = `${start_val}T${(new Date()).getHours()}:00`;\n-    end_val = `${end_val}T${(new Date()).getHours() + 1}:00`;\n+\n+  function open_end_toggle(event_edit__open_end, event_edit__end) {\n+    if (event_edit__open_end.checked) {\n+      $(event_edit__end.closest(".field")).hide();\n+    } else {\n+      $(event_edit__end.closest(".field")).show();\n+    }\n   }\n-  set_date(event_edit__start, start_val);\n-  set_date(event_edit__end, end_val);\n-}\n \n-document.addEventListener("DOMContentLoaded", function() {\n+  function whole_day_toggle(\n+    event_edit__whole_day,\n+    event_edit__start,\n+    event_edit__end\n+  ) {\n+    start_val = event_edit__start.value;\n+    end_val = event_edit__end.value;\n+    if (event_edit__whole_day.checked) {\n+      event_edit__start.type = "date";\n+      event_edit__end.type = "date";\n+    } else {\n+      event_edit__start.type = "datetime-local";\n+      event_edit__end.type = "datetime-local";\n+    }\n+    set_date(event_edit__start, start_val);\n+    set_date(event_edit__end, end_val);\n+  }\n \n-  var event_edit__open_end = document.querySelector("input[name=\'form.widgets.IEventBasic.open_end:list\'], input[name=\'form.widgets.IEventBasicNonRequired.open_end:list\']"); // prettier-ignore\n-  var event_edit__whole_day = document.querySelector("input[name=\'form.widgets.IEventBasic.whole_day:list\'], input[name=\'form.widgets.IEventBasicNonRequired.whole_day:list\']"); // prettier-ignore\n-  var event_edit__start = document.querySelector("[name=\'form.widgets.IEventBasic.start\'], [name=\'form.widgets.IEventBasicNonRequired.start\']"); // prettier-ignore\n-  var event_edit__end = document.querySelector("[name=\'form.widgets.IEventBasic.end\'], [name=\'form.widgets.IEventBasicNonRequired.end\']"); // prettier-ignore\n+  document.addEventListener("DOMContentLoaded", function () {\n+    var event_edit__open_end = document.querySelector("input[name=\'form.widgets.IEventBasic.open_end:list\']"); // prettier-ignore\n+    var event_edit__whole_day = document.querySelector("input[name=\'form.widgets.IEventBasic.whole_day:list\']"); // prettier-ignore\n+    var event_edit__start = document.querySelector("[name=\'form.widgets.IEventBasic.start\']"); // prettier-ignore\n+    var event_edit__end = document.querySelector("[name=\'form.widgets.IEventBasic.end\']"); // prettier-ignore\n \n-  var start_val;\n-  var end_val;\n+    var start_val;\n+    var end_val;\n \n-  if (event_edit__start) {\n-    event_edit__start.addEventListener("change", function () {\n-      start_val = event_edit__start.value;\n-      end_val = event_edit__end.value;\n-      var _start = new Date(start_val);\n-      var _end = new Date(end_val);\n-      if (!is_valid_date(_end) || _end < _start) {\n-        _end = _start;\n-        _end = add_hours(_end, 1);\n-        end_val = _end.toISOString();\n-        set_date(event_edit__end, end_val);\n-      }\n-    });\n-  }\n+    if (event_edit__start) {\n+      event_edit__start.addEventListener("change", function () {\n+        start_val = event_edit__start.value;\n+        end_val = event_edit__end.value;\n+        var _start = new Date(start_val);\n+        var _end = new Date(end_val);\n+        if (!is_valid_date(_end) || _end < _start) {\n+          _end = _start;\n+          _end = add_hours(_end, 1);\n+          set_date(event_edit__end, _end);\n+        }\n+      });\n+    }\n \n-  if (event_edit__open_end) {\n-    open_end_toggle(event_edit__open_end, event_edit__end);\n-    event_edit__open_end.addEventListener("input", function() {\n+    if (event_edit__open_end) {\n       open_end_toggle(event_edit__open_end, event_edit__end);\n-    });\n-  }\n+      event_edit__open_end.addEventListener("input", function () {\n+        open_end_toggle(event_edit__open_end, event_edit__end);\n+      });\n+    }\n \n-  if (event_edit__whole_day) {\n-    // on load\n-    whole_day_toggle(event_edit__whole_day, event_edit__start, event_edit__end);\n-    // on change\n-    event_edit__whole_day.addEventListener("input", function(e) {\n-      whole_day_toggle(event_edit__whole_day, event_edit__start, event_edit__end);\n-    });\n-  }\n-});\n+    if (event_edit__whole_day) {\n+      // on load\n+      whole_day_toggle(\n+        event_edit__whole_day,\n+        event_edit__start,\n+        event_edit__end\n+      );\n+      // on change\n+      event_edit__whole_day.addEventListener("input", function (e) {\n+        whole_day_toggle(\n+          event_edit__whole_day,\n+          event_edit__start,\n+          event_edit__end\n+        );\n+      });\n+    }\n+  });\n+})();\n'

