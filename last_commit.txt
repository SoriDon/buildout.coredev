Repository: plone.rest


Branch: refs/heads/master
Date: 2022-04-07T07:15:29+02:00
Author: Ã‰rico Andrei (ericof) <ericof@gmail.com>
Commit: https://github.com/plone/plone.rest/commit/456d2de1e52629a1dfb5312cbf5da2b69d4d2bd3

Fix an infinite loop with redirections from parent to child (#134)

* Fix an infinite loop with redirections from parent to child

* Pin Click version

Files changed:
A news/133.bugfix
M .github/workflows/black.yml
M src/plone/rest/errors.py
M src/plone/rest/tests/test_redirects.py

b'diff --git a/.github/workflows/black.yml b/.github/workflows/black.yml\nindex fa9a57e..adaf340 100644\n--- a/.github/workflows/black.yml\n+++ b/.github/workflows/black.yml\n@@ -28,7 +28,7 @@ jobs:\n \n       # install black (extract version from versions.cfg)\n       - name: install black\n-        run: pip install black==$(awk \'/^black =/{print $NF}\' versions.cfg)\n+        run: pip install click==8.0.4 black==$(awk \'/^black =/{print $NF}\' versions.cfg)\n \n       # run black\n       - name: run black\ndiff --git a/news/133.bugfix b/news/133.bugfix\nnew file mode 100644\nindex 0000000..60310dc\n--- /dev/null\n+++ b/news/133.bugfix\n@@ -0,0 +1 @@\n+Fix an infinite loop with redirections from parent to child [ericof]\n\\ No newline at end of file\ndiff --git a/src/plone/rest/errors.py b/src/plone/rest/errors.py\nindex ecc6607..e690fb0 100644\n--- a/src/plone/rest/errors.py\n+++ b/src/plone/rest/errors.py\n@@ -138,14 +138,13 @@ def find_redirect_if_view_or_service(self, old_path_elements, storage):\n         # [\'\', \'Plone\', \'folder\', \'item\', \'@@view\', \'param\']\n         #                                ^\n         splitpoint = len(old_path_elements)\n-\n         while splitpoint > 1:\n             possible_obj_path = "/".join(old_path_elements[:splitpoint])\n             remainder = old_path_elements[splitpoint:]\n             new_path = storage.get(possible_obj_path)\n \n             if new_path:\n-                if new_path == possible_obj_path:\n+                if new_path.startswith(possible_obj_path):\n                     # New URL would match originally requested URL.\n                     # Lets not cause a redirect loop.\n                     return None\ndiff --git a/src/plone/rest/tests/test_redirects.py b/src/plone/rest/tests/test_redirects.py\nindex 73e7ac7..16c7207 100644\n--- a/src/plone/rest/tests/test_redirects.py\n+++ b/src/plone/rest/tests/test_redirects.py\n@@ -214,6 +214,18 @@ def test_handles_redirects_that_include_querystring_in_old_path(self):\n         self.assertEqual(self.portal_url + "/new-item", response.headers["Location"])\n         self.assertEqual(b"", response.raw.read())\n \n+    def test_handles_redirects_that_are_recursive(self):\n+        storage = queryUtility(IRedirectionStorage)\n+        storage.add("/plone/folder-new", "/plone/folder-new/archive")\n+        transaction.commit()\n+        # Request should return 404\n+        response = requests.get(\n+            self.portal_url + "/folder-new/sub_folder/not-found",\n+            headers={"Accept": "application/json"},\n+            auth=(SITE_OWNER_NAME, SITE_OWNER_PASSWORD),\n+        )\n+        self.assertEqual(404, response.status_code)\n+\n     def test_aborts_redirect_checks_early_for_app_root(self):\n         error_view = ErrorHandling(self.portal, self.portal.REQUEST)\n         self.assertIsNone(error_view.find_redirect_if_view_or_service([""], None))\n'

