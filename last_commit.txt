Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2018-09-02T01:08:56+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/65304b17b316d2d86bf6784545ccf92c4b0e4669

Fix undefined variable

Files changed:
M CHANGES.rst
M Products/CMFPlone/tests/testUnicodeSplitter.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 18c9158e8..95ba4f8dc 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -33,6 +33,9 @@ Breaking changes:\n \n Bug fixes:\n \n+- Fix an undefined variable in a test helper function\n+  [ale-rt]\n+\n - Fix registration of ``robots.txt`` browser view to avoid ``AttributeError`` on Zope\'s root (fixes `#2052 <https://github.com/plone/Products.CMFPlone/issues/2052>`_).\n   [hvelarde]\n \ndiff --git a/Products/CMFPlone/tests/testUnicodeSplitter.py b/Products/CMFPlone/tests/testUnicodeSplitter.py\nindex 6fed189c0..804f6abb7 100644\n--- a/Products/CMFPlone/tests/testUnicodeSplitter.py\n+++ b/Products/CMFPlone/tests/testUnicodeSplitter.py\n@@ -3,12 +3,19 @@\n from Products.CMFCore.tests.base.dummy import DummyContent\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.tests import PloneTestCase\n+# adding UnicodeSplitterPatcth\n from Products.CMFPlone.UnicodeSplitter import CaseNormalizer\n+from Products.CMFPlone.UnicodeSplitter import process_str\n+from Products.CMFPlone.UnicodeSplitter import process_str_glob\n+from Products.CMFPlone.UnicodeSplitter import process_str_post\n+from Products.CMFPlone.UnicodeSplitter import process_unicode\n+from Products.CMFPlone.UnicodeSplitter import process_unicode_glob\n from Products.CMFPlone.UnicodeSplitter import Splitter\n \n import locale\n import unittest\n \n+\n LATIN1 = (\'en_US.ISO-8859-1\', \'en_US.ISO8859-15\', \'en_GB.ISO8859-15\',\n           \'de_DE@euro\', \'fr_FR@euro\', \'nl_NL@euro\')\n \n@@ -22,9 +29,11 @@ def _setlocale(*names):\n         except locale.Error as e:\n             pass\n     else:\n-        raise e.__class__("Unsupported locale. These tests need at least one "\n-                          "of the following locales available on your system",\n-                          str(LATIN1))\n+        raise ValueError(\n+            "Unsupported locale. "\n+            "These tests need at least one of the following locales "\n+            "available on your system: %s" % str(LATIN1)\n+        )\n     return saved\n \n \n@@ -76,6 +85,10 @@ def testProcessTurkish(self):\n         self.assertEqual(self.process(input), output)\n         self.assertEqual(self.processGlob(input), output)\n \n+    def testMissingLocaleRaises(self):\n+        with self.assertRaises(ValueError):\n+            _setlocale(\'TLH\')  # klingon locale code\n+\n     def testProcessLatin1(self):\n         #\n         # Test passes because plone_lexicon pipeline elements\n@@ -239,10 +252,6 @@ def testIndexUnicodeLower(self):\n         self.assertEqual(len(brains), 1)\n \n \n-# adding UnicodeSplitterPatcth\n-from Products.CMFPlone.UnicodeSplitter \\\n-    import process_str, process_str_post, process_str_glob,\\\n-    process_unicode, process_unicode_glob\n \n \n class TestBigramFunctions(unittest.TestCase):\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2018-09-04T09:22:59+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/183ef3426d8502c4e483db1ae6d5af547f6cf688

Merge pull request #2505 from plone/fix-undefined-variable

Fix undefined variable

Files changed:
M CHANGES.rst
M Products/CMFPlone/tests/testUnicodeSplitter.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 18c9158e8..95ba4f8dc 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -33,6 +33,9 @@ Breaking changes:\n \n Bug fixes:\n \n+- Fix an undefined variable in a test helper function\n+  [ale-rt]\n+\n - Fix registration of ``robots.txt`` browser view to avoid ``AttributeError`` on Zope\'s root (fixes `#2052 <https://github.com/plone/Products.CMFPlone/issues/2052>`_).\n   [hvelarde]\n \ndiff --git a/Products/CMFPlone/tests/testUnicodeSplitter.py b/Products/CMFPlone/tests/testUnicodeSplitter.py\nindex 6fed189c0..804f6abb7 100644\n--- a/Products/CMFPlone/tests/testUnicodeSplitter.py\n+++ b/Products/CMFPlone/tests/testUnicodeSplitter.py\n@@ -3,12 +3,19 @@\n from Products.CMFCore.tests.base.dummy import DummyContent\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.tests import PloneTestCase\n+# adding UnicodeSplitterPatcth\n from Products.CMFPlone.UnicodeSplitter import CaseNormalizer\n+from Products.CMFPlone.UnicodeSplitter import process_str\n+from Products.CMFPlone.UnicodeSplitter import process_str_glob\n+from Products.CMFPlone.UnicodeSplitter import process_str_post\n+from Products.CMFPlone.UnicodeSplitter import process_unicode\n+from Products.CMFPlone.UnicodeSplitter import process_unicode_glob\n from Products.CMFPlone.UnicodeSplitter import Splitter\n \n import locale\n import unittest\n \n+\n LATIN1 = (\'en_US.ISO-8859-1\', \'en_US.ISO8859-15\', \'en_GB.ISO8859-15\',\n           \'de_DE@euro\', \'fr_FR@euro\', \'nl_NL@euro\')\n \n@@ -22,9 +29,11 @@ def _setlocale(*names):\n         except locale.Error as e:\n             pass\n     else:\n-        raise e.__class__("Unsupported locale. These tests need at least one "\n-                          "of the following locales available on your system",\n-                          str(LATIN1))\n+        raise ValueError(\n+            "Unsupported locale. "\n+            "These tests need at least one of the following locales "\n+            "available on your system: %s" % str(LATIN1)\n+        )\n     return saved\n \n \n@@ -76,6 +85,10 @@ def testProcessTurkish(self):\n         self.assertEqual(self.process(input), output)\n         self.assertEqual(self.processGlob(input), output)\n \n+    def testMissingLocaleRaises(self):\n+        with self.assertRaises(ValueError):\n+            _setlocale(\'TLH\')  # klingon locale code\n+\n     def testProcessLatin1(self):\n         #\n         # Test passes because plone_lexicon pipeline elements\n@@ -239,10 +252,6 @@ def testIndexUnicodeLower(self):\n         self.assertEqual(len(brains), 1)\n \n \n-# adding UnicodeSplitterPatcth\n-from Products.CMFPlone.UnicodeSplitter \\\n-    import process_str, process_str_post, process_str_glob,\\\n-    process_unicode, process_unicode_glob\n \n \n class TestBigramFunctions(unittest.TestCase):\n'

