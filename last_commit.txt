Repository: plone.restapi


Branch: refs/heads/master
Date: 2021-12-23T12:30:28+01:00
Author: Víctor Fernández de Alba (sneridagh) <sneridagh@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/c3ff8b8f537cb1e6fb0d45ac3e3a6dac9f01f17b

Expandable params as list and deprecations for list as comma separated (#1301)

Files changed:
A news/1300.feature
M src/plone/restapi/serializer/expansion.py
M src/plone/restapi/tests/test_expansion.py

b'diff --git a/news/1300.feature b/news/1300.feature\nnew file mode 100644\nindex 000000000..04a4ece13\n--- /dev/null\n+++ b/news/1300.feature\n@@ -0,0 +1,2 @@\n+Expandable params as list and deprecations for list as comma separated\n+[sneridagh]\ndiff --git a/src/plone/restapi/serializer/expansion.py b/src/plone/restapi/serializer/expansion.py\nindex 1d6216fe5..b7d10fa30 100644\n--- a/src/plone/restapi/serializer/expansion.py\n+++ b/src/plone/restapi/serializer/expansion.py\n@@ -1,10 +1,24 @@\n from plone.restapi.interfaces import IExpandableElement\n from zope.component import getAdapters\n \n+import warnings\n+\n \n def expandable_elements(context, request):\n     """Returns a dict containing all expandable elements."""\n-    expands = request.form.get("expand", "").split(",")\n+    expands = request.form.get("expand", [])\n+    if isinstance(expands, str):\n+        if "," in expands:\n+            # deprecated use of expands (with commas)\n+            warnings.warn(\n+                "``expand`` as a string parameter separated with commas is deprecated and will be removed in plone.restapi 9.0. Use ``expand:list`` instead.",\n+                DeprecationWarning,\n+            )\n+            expands = expands.split(",")\n+        else:\n+            # allow still the use of non marked :list parameters present\n+            expands = [expands]\n+\n     elements = getAdapters((context, request), IExpandableElement)\n     res = {}\n     for element in elements:\ndiff --git a/src/plone/restapi/tests/test_expansion.py b/src/plone/restapi/tests/test_expansion.py\nindex cb39caeab..a7bb8b7c7 100644\n--- a/src/plone/restapi/tests/test_expansion.py\n+++ b/src/plone/restapi/tests/test_expansion.py\n@@ -75,13 +75,20 @@ def test_expansion_returns_expanded_element(self):\n             expandable_elements(None, request),\n         )\n \n-    def test_expansion_returns_multiple_expanded_elements(self):\n+    def test_expansion_returns_multiple_deprecated_commas_expanded_elements(self):\n         request = TestRequest(form={"expand": "foo,bar"})\n         self.assertEqual(\n             {"@components": {"bar": "expanded", "foo": "expanded"}},\n             expandable_elements(None, request),\n         )\n \n+    def test_expansion_returns_multiple_expanded_elements(self):\n+        request = TestRequest(form={"expand": ["foo", "bar"]})\n+        self.assertEqual(\n+            {"@components": {"bar": "expanded", "foo": "expanded"}},\n+            expandable_elements(None, request),\n+        )\n+\n     def tearDown(self):\n         gsm = getGlobalSiteManager()\n         gsm.unregisterAdapter(\n@@ -120,6 +127,68 @@ def setUp(self):\n     def tearDown(self):\n         self.api_session.close()\n \n+    def test_expanded_marked_as_list(self):\n+        response = self.api_session.get(\n+            "/folder", params={"expand:list": ["actions", "navigation"]}\n+        )\n+\n+        self.assertEqual(response.status_code, 200)\n+        self.assertTrue("object" in response.json()["@components"]["actions"])\n+        self.assertTrue("object_buttons" in response.json()["@components"]["actions"])\n+        self.assertTrue("portal_tabs" in response.json()["@components"]["actions"])\n+        self.assertTrue("site_actions" in response.json()["@components"]["actions"])\n+        self.assertTrue("user" in response.json()["@components"]["actions"])\n+        self.assertEqual(\n+            [\n+                {\n+                    "title": "Home",\n+                    "@id": self.portal_url + "",\n+                    "description": "",\n+                    "review_state": None,\n+                    "items": [],\n+                },\n+                {\n+                    "title": "Some Folder",\n+                    "@id": self.portal_url + "/folder",\n+                    "description": "",\n+                    "review_state": "private",\n+                    "items": [],\n+                },\n+            ],\n+            response.json()["@components"]["navigation"]["items"],\n+        )\n+\n+    def test_expanded_as_list(self):\n+        response = self.api_session.get(\n+            "/folder", params={"expand": ["actions", "navigation"]}\n+        )\n+\n+        self.assertEqual(response.status_code, 200)\n+        self.assertTrue("object" in response.json()["@components"]["actions"])\n+        self.assertTrue("object_buttons" in response.json()["@components"]["actions"])\n+        self.assertTrue("portal_tabs" in response.json()["@components"]["actions"])\n+        self.assertTrue("site_actions" in response.json()["@components"]["actions"])\n+        self.assertTrue("user" in response.json()["@components"]["actions"])\n+        self.assertEqual(\n+            [\n+                {\n+                    "title": "Home",\n+                    "@id": self.portal_url + "",\n+                    "description": "",\n+                    "review_state": None,\n+                    "items": [],\n+                },\n+                {\n+                    "title": "Some Folder",\n+                    "@id": self.portal_url + "/folder",\n+                    "description": "",\n+                    "review_state": "private",\n+                    "items": [],\n+                },\n+            ],\n+            response.json()["@components"]["navigation"]["items"],\n+        )\n+\n     def test_actions_is_expandable(self):\n         response = self.api_session.get("/folder")\n \n'

