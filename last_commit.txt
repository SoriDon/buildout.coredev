Repository: plone.namedfile


Branch: refs/heads/master
Date: 2018-01-28T12:10:38+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.namedfile/commit/1c562a85be1e65593969963f8c5abe2cfb4df6a2

Prepare for more Python 2 / 3 compatibility

Files changed:
M CHANGES.rst
M plone/namedfile/file.py
M plone/namedfile/scaling.py
M plone/namedfile/storages.py
M plone/namedfile/utils/__init__.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 3404b8f..5437dc4 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,8 +14,8 @@ New features:
 
 Bug fixes:
 
-- Imports are Python3 compatible
-  [ale-rt]
+- Prepare for Python 2 / 3 compatibility
+  [ale-rt, pbauer]
 
 - remove mention of "retina" (https://github.com/plone/Products.CMFPlone/issues/2123)
   [tkimnguyen]
diff --git a/plone/namedfile/file.py b/plone/namedfile/file.py
index 8a98e44..8b17cae 100644
--- a/plone/namedfile/file.py
+++ b/plone/namedfile/file.py
@@ -19,9 +19,9 @@
 from zope.schema.fieldproperty import FieldProperty
 
 import piexif
+import six
 import transaction
 
-
 log = getLogger(__name__)
 
 
@@ -179,7 +179,7 @@ def _getData(self):
     def _setData(self, data):
 
         # Handle case when data is a string
-        if isinstance(data, unicode):
+        if isinstance(data, six.text_type):
             data = data.encode('UTF-8')
 
         if isinstance(data, str):
diff --git a/plone/namedfile/scaling.py b/plone/namedfile/scaling.py
index 8191701..534b2a6 100644
--- a/plone/namedfile/scaling.py
+++ b/plone/namedfile/scaling.py
@@ -29,7 +29,7 @@
 from zope.traversing.interfaces import TraversalError
 
 import logging
-
+import six
 
 logger = logging.getLogger(__name__)
 _marker = object()
@@ -114,7 +114,7 @@ def tag(self, height=_marker, width=_marker, alt=_marker,
             if isinstance(v, int):
                 v = str(v)
             elif isinstance(v, str):
-                v = unicode(v, 'utf8')
+                v = six.text_type(v, 'utf8')
             parts.append(u'{0}={1}'.format(k, quoteattr(v)))
         parts.append('/>')
 
diff --git a/plone/namedfile/storages.py b/plone/namedfile/storages.py
index 96ddc60..9a9403b 100644
--- a/plone/namedfile/storages.py
+++ b/plone/namedfile/storages.py
@@ -8,6 +8,7 @@
 from zope.interface import implementer
 from zope.publisher.browser import FileUpload
 
+import six
 
 MAXCHUNKSIZE = 1 << 16
 
@@ -27,7 +28,7 @@ def store(self, data, blob):
 class UnicodeStorable(StringStorable):
 
     def store(self, data, blob):
-        if not isinstance(data, unicode):
+        if not isinstance(data, six.text_type):
             raise NotStorable('Could not store data (not of "unicode" type).')
 
         data = data.encode('UTF-8')
diff --git a/plone/namedfile/utils/__init__.py b/plone/namedfile/utils/__init__.py
index dbef725..ec62738 100644
--- a/plone/namedfile/utils/__init__.py
+++ b/plone/namedfile/utils/__init__.py
@@ -6,6 +6,7 @@
 from plone.namedfile.utils.tiff_utils import process_tiff
 from plone.registry.interfaces import IRegistry
 from six import StringIO
+from six.moves import urllib
 from zope.component import queryUtility
 from zope.deprecation import deprecate
 
@@ -13,9 +14,8 @@
 import os.path
 import piexif
 import PIL.Image
+import six
 import struct
-import urllib
-
 
 log = getLogger(__name__)
 
@@ -75,9 +75,9 @@ def set_headers(file, response, filename=None):
     response.setHeader('Content-Length', file.getSize())
 
     if filename is not None:
-        if not isinstance(filename, unicode):
-            filename = unicode(filename, 'utf-8', errors='ignore')
-        filename = urllib.quote(filename.encode('utf8'))
+        if not isinstance(filename, six.text_type):
+            filename = six.text_type(filename, 'utf-8', errors='ignore')
+        filename = urllib.parse.quote(filename.encode('utf8'))
         response.setHeader(
             'Content-Disposition',
             'attachment; filename*=UTF-8\'\'{0}'.format(filename)


Repository: plone.namedfile


Branch: refs/heads/master
Date: 2018-01-28T14:15:49+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.namedfile/commit/2ef60ab90f5ebe217505e54c04ec487de378a967

Merge pull request #61 from plone/python3

Prepare for more Python 2 / 3 compatibility

Files changed:
M CHANGES.rst
M plone/namedfile/file.py
M plone/namedfile/scaling.py
M plone/namedfile/storages.py
M plone/namedfile/utils/__init__.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 3404b8f..5437dc4 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,8 +14,8 @@ New features:
 
 Bug fixes:
 
-- Imports are Python3 compatible
-  [ale-rt]
+- Prepare for Python 2 / 3 compatibility
+  [ale-rt, pbauer]
 
 - remove mention of "retina" (https://github.com/plone/Products.CMFPlone/issues/2123)
   [tkimnguyen]
diff --git a/plone/namedfile/file.py b/plone/namedfile/file.py
index 8a98e44..8b17cae 100644
--- a/plone/namedfile/file.py
+++ b/plone/namedfile/file.py
@@ -19,9 +19,9 @@
 from zope.schema.fieldproperty import FieldProperty
 
 import piexif
+import six
 import transaction
 
-
 log = getLogger(__name__)
 
 
@@ -179,7 +179,7 @@ def _getData(self):
     def _setData(self, data):
 
         # Handle case when data is a string
-        if isinstance(data, unicode):
+        if isinstance(data, six.text_type):
             data = data.encode('UTF-8')
 
         if isinstance(data, str):
diff --git a/plone/namedfile/scaling.py b/plone/namedfile/scaling.py
index 8191701..534b2a6 100644
--- a/plone/namedfile/scaling.py
+++ b/plone/namedfile/scaling.py
@@ -29,7 +29,7 @@
 from zope.traversing.interfaces import TraversalError
 
 import logging
-
+import six
 
 logger = logging.getLogger(__name__)
 _marker = object()
@@ -114,7 +114,7 @@ def tag(self, height=_marker, width=_marker, alt=_marker,
             if isinstance(v, int):
                 v = str(v)
             elif isinstance(v, str):
-                v = unicode(v, 'utf8')
+                v = six.text_type(v, 'utf8')
             parts.append(u'{0}={1}'.format(k, quoteattr(v)))
         parts.append('/>')
 
diff --git a/plone/namedfile/storages.py b/plone/namedfile/storages.py
index 96ddc60..9a9403b 100644
--- a/plone/namedfile/storages.py
+++ b/plone/namedfile/storages.py
@@ -8,6 +8,7 @@
 from zope.interface import implementer
 from zope.publisher.browser import FileUpload
 
+import six
 
 MAXCHUNKSIZE = 1 << 16
 
@@ -27,7 +28,7 @@ def store(self, data, blob):
 class UnicodeStorable(StringStorable):
 
     def store(self, data, blob):
-        if not isinstance(data, unicode):
+        if not isinstance(data, six.text_type):
             raise NotStorable('Could not store data (not of "unicode" type).')
 
         data = data.encode('UTF-8')
diff --git a/plone/namedfile/utils/__init__.py b/plone/namedfile/utils/__init__.py
index dbef725..ec62738 100644
--- a/plone/namedfile/utils/__init__.py
+++ b/plone/namedfile/utils/__init__.py
@@ -6,6 +6,7 @@
 from plone.namedfile.utils.tiff_utils import process_tiff
 from plone.registry.interfaces import IRegistry
 from six import StringIO
+from six.moves import urllib
 from zope.component import queryUtility
 from zope.deprecation import deprecate
 
@@ -13,9 +14,8 @@
 import os.path
 import piexif
 import PIL.Image
+import six
 import struct
-import urllib
-
 
 log = getLogger(__name__)
 
@@ -75,9 +75,9 @@ def set_headers(file, response, filename=None):
     response.setHeader('Content-Length', file.getSize())
 
     if filename is not None:
-        if not isinstance(filename, unicode):
-            filename = unicode(filename, 'utf-8', errors='ignore')
-        filename = urllib.quote(filename.encode('utf8'))
+        if not isinstance(filename, six.text_type):
+            filename = six.text_type(filename, 'utf-8', errors='ignore')
+        filename = urllib.parse.quote(filename.encode('utf8'))
         response.setHeader(
             'Content-Disposition',
             'attachment; filename*=UTF-8\'\'{0}'.format(filename)


