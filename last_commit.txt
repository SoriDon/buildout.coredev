Repository: mockup


Branch: refs/heads/master
Date: 2019-08-09T12:43:27+02:00
Author: Giulia Ghisini (giuliaghisini) <giulia.ghisini@redturtle.it>
Commit: https://github.com/plone/mockup/commit/881e71f5e99f881144fbe3c913005d2d2d508a10

Fixed drag problem on click on sortable items in folder contents.

Files changed:
A news/919.bugfix
M mockup/patterns/sortable/pattern.js

b"diff --git a/mockup/patterns/sortable/pattern.js b/mockup/patterns/sortable/pattern.js\nindex 4b6745d4f..c1edef917 100644\n--- a/mockup/patterns/sortable/pattern.js\n+++ b/mockup/patterns/sortable/pattern.js\n@@ -43,12 +43,11 @@\n  *\n  */\n \n-\n define([\n   'jquery',\n   'pat-base',\n   'jquery.event.drop',\n-  'jquery.event.drag'\n+  'jquery.event.drag',\n ], function($, Base, drop) {\n   'use strict';\n \n@@ -60,74 +59,82 @@ define([\n       selector: 'li',\n       dragClass: 'item-dragging',\n       cloneClass: 'dragging',\n-      createDragItem: function(pattern, $el){\n-        return $el.clone().\n-          addClass(pattern.options.cloneClass).\n-          css({opacity: 0.75, position: 'absolute'}).appendTo(document.body);\n+      createDragItem: function(pattern, $el) {\n+        return $el\n+          .clone()\n+          .addClass(pattern.options.cloneClass)\n+          .css({ opacity: 0.75, position: 'absolute' })\n+          .appendTo(document.body);\n+      },\n+      drop: undefined, // callback function or name of global function\n+      dragOptions: {\n+        distance: 2,\n       },\n-      drop: undefined  // callback function or name of global function\n     },\n     init: function() {\n       var self = this;\n       var start = 0;\n \n-      self.$el.find(self.options.selector).drag('start', function(e, dd) {\n-        var dragged = this;\n-        var $el = $(this);\n-        $(dragged).addClass(self.options.dragClass);\n-        drop({\n-          tolerance: function(event, proxy, target) {\n-            if ($(target.elem).closest(self.$el).length === 0) {\n-              /* prevent dragging conflict over another drag area */\n-              return;\n-            }\n-            var test = event.pageY > (target.top + target.height / 2);\n-            $.data(target.elem, 'drop+reorder', test ? 'insertAfter' : 'insertBefore' );\n-            return this.contains(target, [event.pageX, event.pageY]);\n-          }\n-        });\n-        start = $el.index();\n-        return self.options.createDragItem(self, $el);\n-      })\n-      .drag(function(e, dd) {\n-        /*jshint eqeqeq:false */\n-        $( dd.proxy ).css({\n-          top: dd.offsetY,\n-          left: dd.offsetX\n-        });\n-        var drop = dd.drop[0],\n+      self.$el\n+        .find(self.options.selector)\n+        .drag('start', function(e, dd) {\n+          var dragged = this;\n+          var $el = $(this);\n+          $(dragged).addClass(self.options.dragClass);\n+          drop({\n+            tolerance: function(event, proxy, target) {\n+              if ($(target.elem).closest(self.$el).length === 0) {\n+                /* prevent dragging conflict over another drag area */\n+                return;\n+              }\n+              var test = event.pageY > target.top + target.height / 2;\n+              $.data(\n+                target.elem,\n+                'drop+reorder',\n+                test ? 'insertAfter' : 'insertBefore'\n+              );\n+              return this.contains(target, [event.pageX, event.pageY]);\n+            },\n+          });\n+\n+          start = $el.index();\n+          return self.options.createDragItem(self, $el);\n+        })\n+        .drag(function(e, dd) {\n+          /*jshint eqeqeq:false */\n+          $(dd.proxy).css({\n+            top: dd.offsetY,\n+            left: dd.offsetX,\n+          });\n+          var drop = dd.drop[0],\n             method = $.data(drop || {}, 'drop+reorder');\n-        /* XXX Cannot use triple equals here */\n-        if (method && drop && (drop != dd.current || method != dd.method)) {\n-          $(this)[method](drop);\n-          dd.current = drop;\n-          dd.method = method;\n-          dd.update();\n-        }\n-      })\n-      .drag('end', function(e, dd) {\n-        var $el = $(this);\n-        $el.removeClass(self.options.dragClass);\n-        $(dd.proxy).remove();\n+          /* XXX Cannot use triple equals here */\n+          if (method && drop && (drop != dd.current || method != dd.method)) {\n+            $(this)[method](drop);\n+            dd.current = drop;\n+            dd.method = method;\n+            dd.update();\n+          }\n+        }, self.options.dragOptions)\n+        .drag('end', function(e, dd) {\n+          var $el = $(this);\n+          $el.removeClass(self.options.dragClass);\n+          $(dd.proxy).remove();\n           if (self.options.drop) {\n             if (typeof self.options.drop === 'string') {\n               window[self.options.drop]($el, $el.index() - start);\n             } else {\n               self.options.drop($el, $el.index() - start);\n             }\n-        }\n-      })\n-      .drop('init', function(e, dd ) {\n-        /*jshint eqeqeq:false */\n-        /* XXX Cannot use triple equals here */\n-        return (this == dd.drag) ? false: true;\n-      });\n-\n-    }\n+          }\n+        })\n+        .drop('init', function(e, dd) {\n+          /*jshint eqeqeq:false */\n+          /* XXX Cannot use triple equals here */\n+          return this == dd.drag ? false : true;\n+        });\n+    },\n   });\n \n   return SortablePattern;\n-\n });\n-\n-\ndiff --git a/news/919.bugfix b/news/919.bugfix\nnew file mode 100644\nindex 000000000..c4d726311\n--- /dev/null\n+++ b/news/919.bugfix\n@@ -0,0 +1,2 @@\n+Fixed drag problem on click on sortable items in folder contents.\n+[giuliaghisini]\n\\ No newline at end of file\n"

Repository: mockup


Branch: refs/heads/master
Date: 2019-10-07T10:58:12+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/mockup/commit/fa2cf533f93dbf11190c1287e0a1e388955f0f61

Merge pull request #919 from plone/fix-sortable-distance

Fixed drag problem on click on sortable items in folder contents.

Files changed:
A news/919.bugfix
M mockup/patterns/sortable/pattern.js

b"diff --git a/mockup/patterns/sortable/pattern.js b/mockup/patterns/sortable/pattern.js\nindex 4b6745d4f..c1edef917 100644\n--- a/mockup/patterns/sortable/pattern.js\n+++ b/mockup/patterns/sortable/pattern.js\n@@ -43,12 +43,11 @@\n  *\n  */\n \n-\n define([\n   'jquery',\n   'pat-base',\n   'jquery.event.drop',\n-  'jquery.event.drag'\n+  'jquery.event.drag',\n ], function($, Base, drop) {\n   'use strict';\n \n@@ -60,74 +59,82 @@ define([\n       selector: 'li',\n       dragClass: 'item-dragging',\n       cloneClass: 'dragging',\n-      createDragItem: function(pattern, $el){\n-        return $el.clone().\n-          addClass(pattern.options.cloneClass).\n-          css({opacity: 0.75, position: 'absolute'}).appendTo(document.body);\n+      createDragItem: function(pattern, $el) {\n+        return $el\n+          .clone()\n+          .addClass(pattern.options.cloneClass)\n+          .css({ opacity: 0.75, position: 'absolute' })\n+          .appendTo(document.body);\n+      },\n+      drop: undefined, // callback function or name of global function\n+      dragOptions: {\n+        distance: 2,\n       },\n-      drop: undefined  // callback function or name of global function\n     },\n     init: function() {\n       var self = this;\n       var start = 0;\n \n-      self.$el.find(self.options.selector).drag('start', function(e, dd) {\n-        var dragged = this;\n-        var $el = $(this);\n-        $(dragged).addClass(self.options.dragClass);\n-        drop({\n-          tolerance: function(event, proxy, target) {\n-            if ($(target.elem).closest(self.$el).length === 0) {\n-              /* prevent dragging conflict over another drag area */\n-              return;\n-            }\n-            var test = event.pageY > (target.top + target.height / 2);\n-            $.data(target.elem, 'drop+reorder', test ? 'insertAfter' : 'insertBefore' );\n-            return this.contains(target, [event.pageX, event.pageY]);\n-          }\n-        });\n-        start = $el.index();\n-        return self.options.createDragItem(self, $el);\n-      })\n-      .drag(function(e, dd) {\n-        /*jshint eqeqeq:false */\n-        $( dd.proxy ).css({\n-          top: dd.offsetY,\n-          left: dd.offsetX\n-        });\n-        var drop = dd.drop[0],\n+      self.$el\n+        .find(self.options.selector)\n+        .drag('start', function(e, dd) {\n+          var dragged = this;\n+          var $el = $(this);\n+          $(dragged).addClass(self.options.dragClass);\n+          drop({\n+            tolerance: function(event, proxy, target) {\n+              if ($(target.elem).closest(self.$el).length === 0) {\n+                /* prevent dragging conflict over another drag area */\n+                return;\n+              }\n+              var test = event.pageY > target.top + target.height / 2;\n+              $.data(\n+                target.elem,\n+                'drop+reorder',\n+                test ? 'insertAfter' : 'insertBefore'\n+              );\n+              return this.contains(target, [event.pageX, event.pageY]);\n+            },\n+          });\n+\n+          start = $el.index();\n+          return self.options.createDragItem(self, $el);\n+        })\n+        .drag(function(e, dd) {\n+          /*jshint eqeqeq:false */\n+          $(dd.proxy).css({\n+            top: dd.offsetY,\n+            left: dd.offsetX,\n+          });\n+          var drop = dd.drop[0],\n             method = $.data(drop || {}, 'drop+reorder');\n-        /* XXX Cannot use triple equals here */\n-        if (method && drop && (drop != dd.current || method != dd.method)) {\n-          $(this)[method](drop);\n-          dd.current = drop;\n-          dd.method = method;\n-          dd.update();\n-        }\n-      })\n-      .drag('end', function(e, dd) {\n-        var $el = $(this);\n-        $el.removeClass(self.options.dragClass);\n-        $(dd.proxy).remove();\n+          /* XXX Cannot use triple equals here */\n+          if (method && drop && (drop != dd.current || method != dd.method)) {\n+            $(this)[method](drop);\n+            dd.current = drop;\n+            dd.method = method;\n+            dd.update();\n+          }\n+        }, self.options.dragOptions)\n+        .drag('end', function(e, dd) {\n+          var $el = $(this);\n+          $el.removeClass(self.options.dragClass);\n+          $(dd.proxy).remove();\n           if (self.options.drop) {\n             if (typeof self.options.drop === 'string') {\n               window[self.options.drop]($el, $el.index() - start);\n             } else {\n               self.options.drop($el, $el.index() - start);\n             }\n-        }\n-      })\n-      .drop('init', function(e, dd ) {\n-        /*jshint eqeqeq:false */\n-        /* XXX Cannot use triple equals here */\n-        return (this == dd.drag) ? false: true;\n-      });\n-\n-    }\n+          }\n+        })\n+        .drop('init', function(e, dd) {\n+          /*jshint eqeqeq:false */\n+          /* XXX Cannot use triple equals here */\n+          return this == dd.drag ? false : true;\n+        });\n+    },\n   });\n \n   return SortablePattern;\n-\n });\n-\n-\ndiff --git a/news/919.bugfix b/news/919.bugfix\nnew file mode 100644\nindex 000000000..c4d726311\n--- /dev/null\n+++ b/news/919.bugfix\n@@ -0,0 +1,2 @@\n+Fixed drag problem on click on sortable items in folder contents.\n+[giuliaghisini]\n\\ No newline at end of file\n"

