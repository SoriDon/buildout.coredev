Repository: plone.session


Branch: refs/heads/master
Date: 2022-08-02T13:03:11+02:00
Author: Manuel Reinhardt (reinhardt) <reinhardt@syslab.com>
Commit: https://github.com/plone/plone.session/commit/b625c31cd468402495bdb40615280c1631f91676

Set cookie attribute SameSite to "Lax".
Refs https://github.com/plone/plone.session/issues/29

Files changed:
A news/29.feature
M plone/session/plugins/session.py
M plone/session/tests/testPAS.py

b'diff --git a/news/29.feature b/news/29.feature\nnew file mode 100644\nindex 0000000..a8f1369\n--- /dev/null\n+++ b/news/29.feature\n@@ -0,0 +1 @@\n+Cookie attribute SameSite is set to "Lax".\ndiff --git a/plone/session/plugins/session.py b/plone/session/plugins/session.py\nindex 963d6a5..e0858c3 100644\n--- a/plone/session/plugins/session.py\n+++ b/plone/session/plugins/session.py\n@@ -162,7 +162,7 @@ def _setCookie(self, cookie, response):\n             secure = False\n         else:\n             secure = self.secure\n-        options = dict(path=self.path, secure=secure, http_only=True)\n+        options = dict(path=self.path, secure=secure, http_only=True, same_site="Lax")\n         if self.cookie_domain:\n             options[\'domain\'] = self.cookie_domain\n         if self.cookie_lifetime:\ndiff --git a/plone/session/tests/testPAS.py b/plone/session/tests/testPAS.py\nindex ce94e17..9734e40 100644\n--- a/plone/session/tests/testPAS.py\n+++ b/plone/session/tests/testPAS.py\n@@ -13,10 +13,11 @@\n class MockResponse(object):\n \n     def setCookie(self, name, value, path,\n-                  expires=None, secure=False, http_only=False):\n+                  expires=None, secure=False, http_only=False, same_site=None):\n         self.cookie = value\n         self.cookie_expires = expires\n         self.cookie_http_only = http_only\n+        self.cookie_same_site = same_site\n         self.secure = secure\n \n \n@@ -66,6 +67,12 @@ def testCookieHTTPOnly(self):\n         session._setupSession(self.userid, response)\n         self.assertEqual(response.cookie_http_only, True)\n \n+    def testCookieSameSite(self):\n+        response = MockResponse()\n+        session = self.folder.pas.session\n+        session._setupSession(self.userid, response)\n+        self.assertEqual(response.cookie_same_site, "Lax")\n+\n     def testCookieLifetimeWithExpirationSet(self):\n         response = MockResponse()\n         session = self.folder.pas.session\n'

Repository: plone.session


Branch: refs/heads/master
Date: 2022-08-24T12:51:45+02:00
Author: Manuel Reinhardt (reinhardt) <reinhardt@syslab.com>
Commit: https://github.com/plone/plone.session/commit/239e3c57b1d2e1504da9bb459cad51ffb03ea2c0

Merge pull request #30 from plone/same_site

Set cookie attribute SameSite

Files changed:
A news/29.feature
M plone/session/plugins/session.py
M plone/session/tests/testPAS.py

b'diff --git a/news/29.feature b/news/29.feature\nnew file mode 100644\nindex 0000000..a8f1369\n--- /dev/null\n+++ b/news/29.feature\n@@ -0,0 +1 @@\n+Cookie attribute SameSite is set to "Lax".\ndiff --git a/plone/session/plugins/session.py b/plone/session/plugins/session.py\nindex 963d6a5..e0858c3 100644\n--- a/plone/session/plugins/session.py\n+++ b/plone/session/plugins/session.py\n@@ -162,7 +162,7 @@ def _setCookie(self, cookie, response):\n             secure = False\n         else:\n             secure = self.secure\n-        options = dict(path=self.path, secure=secure, http_only=True)\n+        options = dict(path=self.path, secure=secure, http_only=True, same_site="Lax")\n         if self.cookie_domain:\n             options[\'domain\'] = self.cookie_domain\n         if self.cookie_lifetime:\ndiff --git a/plone/session/tests/testPAS.py b/plone/session/tests/testPAS.py\nindex ce94e17..9734e40 100644\n--- a/plone/session/tests/testPAS.py\n+++ b/plone/session/tests/testPAS.py\n@@ -13,10 +13,11 @@\n class MockResponse(object):\n \n     def setCookie(self, name, value, path,\n-                  expires=None, secure=False, http_only=False):\n+                  expires=None, secure=False, http_only=False, same_site=None):\n         self.cookie = value\n         self.cookie_expires = expires\n         self.cookie_http_only = http_only\n+        self.cookie_same_site = same_site\n         self.secure = secure\n \n \n@@ -66,6 +67,12 @@ def testCookieHTTPOnly(self):\n         session._setupSession(self.userid, response)\n         self.assertEqual(response.cookie_http_only, True)\n \n+    def testCookieSameSite(self):\n+        response = MockResponse()\n+        session = self.folder.pas.session\n+        session._setupSession(self.userid, response)\n+        self.assertEqual(response.cookie_same_site, "Lax")\n+\n     def testCookieLifetimeWithExpirationSet(self):\n         response = MockResponse()\n         session = self.folder.pas.session\n'

