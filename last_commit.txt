Repository: plone.rest


Branch: refs/heads/master
Date: 2021-12-27T08:10:40+01:00
Author: Ross Patterson (rpatterson) <me@rpatterson.net>
Commit: https://github.com/plone/plone.rest/commit/70e1ec77bb3b19eb308e0c92406687b4851999db

test(deprecation): Fix some warnings from our code (#128)

Resolve all the deprecation warnings that originate in this package's code that are
exposed by running the tests that do not stem from backwards compatibility we still
support.

IOW, warnings are still emitted that stem from code that needs to work with older
versions we still support and cannot be updated without breaking that backwards
compatibility.  It seems better to me to leave the warnings in place than litter our
code with BBB conditionals.

Files changed:
A news/128.bugfix
M src/plone/rest/tests/test_redirects.py
M src/plone/rest/tests/test_traversal.py

b'diff --git a/news/128.bugfix b/news/128.bugfix\nnew file mode 100644\nindex 0000000..e8c7ff4\n--- /dev/null\n+++ b/news/128.bugfix\n@@ -0,0 +1,3 @@\n+Resolve all the deprecation warnings that originate in this package\'s code that are\n+exposed by running the tests that do not stem from backwards compatibility we support.\n+[rpatterson]\ndiff --git a/src/plone/rest/tests/test_redirects.py b/src/plone/rest/tests/test_redirects.py\nindex 37c61dc..2dcafc1 100644\n--- a/src/plone/rest/tests/test_redirects.py\n+++ b/src/plone/rest/tests/test_redirects.py\n@@ -176,4 +176,4 @@ def test_aborts_redirect_checks_early_for_app_root(self):\n     def test_gracefully_deals_with_missing_request_url(self):\n         error_view = ErrorHandling(self.portal, self.portal.REQUEST)\n         self.portal.REQUEST["ACTUAL_URL"] = None\n-        self.assertEquals(False, error_view.attempt_redirect())\n+        self.assertEqual(False, error_view.attempt_redirect())\ndiff --git a/src/plone/rest/tests/test_traversal.py b/src/plone/rest/tests/test_traversal.py\nindex c3578fb..963d1c4 100644\n--- a/src/plone/rest/tests/test_traversal.py\n+++ b/src/plone/rest/tests/test_traversal.py\n@@ -60,18 +60,18 @@ def test_json_request_on_content_object_returns_service(self):\n \n     def test_html_request_on_portal_root_returns_default_view(self):\n         obj = self.traverse(accept="text/html")\n-        self.assertEquals(self.portal.getDefaultLayout(), obj.__name__)\n+        self.assertEqual(self.portal.getDefaultLayout(), obj.__name__)\n \n     def test_html_request_on_portal_root_returns_dynamic_view(self):\n         self.portal.setLayout("summary_view")\n         obj = self.traverse(accept="text/html")\n-        self.assertEquals("summary_view", obj.__name__)\n+        self.assertEqual("summary_view", obj.__name__)\n \n     def test_html_request_on_portal_root_returns_default_page(self):\n         self.portal.invokeFactory("Document", id="doc1")\n         self.portal.setDefaultPage("doc1")\n         obj = self.traverse(accept="text/html")\n-        self.assertEquals("document_view", obj.__name__)\n+        self.assertEqual("document_view", obj.__name__)\n \n     def test_json_request_on_object_with_multihook(self):\n         doc1 = self.portal[self.portal.invokeFactory("Document", id="doc1")]\n@@ -86,7 +86,7 @@ def btr_test(container, request):\n \n         obj = self.traverse(path="/plone/doc1")\n         self.assertTrue(isinstance(obj, Service), "Not a service")\n-        self.assertEquals(1, self.request._btr_test_called)\n+        self.assertEqual(1, self.request._btr_test_called)\n \n     def test_json_request_on_existing_view_returns_named_service(self):\n         obj = self.traverse("/plone/search")\n'

