Repository: plone.namedfile


Branch: refs/heads/master
Date: 2016-06-09T14:12:03-07:00
Author: Steve McMahon (smcmahon) <steve@dcn.org>
Commit: https://github.com/plone/plone.namedfile/commit/72fc55a0acce852a1df40fa50179dc96907cdac9

Prevent creation of filestream_iterator from uncommitted blob

Files changed:
M CHANGES.rst
M plone/namedfile/usage.rst
M plone/namedfile/utils.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 57fc44c..9c98b00 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -24,6 +24,12 @@ New:
 
 Fixes:
 
+- Prevent attempt to create a filestream_iterator from a temporary file associated with an
+  uncommited blob.
+  Fixes an error on Windows 10 "WindowsError 32" by attempting to delete or access a file in use
+  by another process.
+  [smcmahon]
+
 - Fix tests to work with latest plone.scale changes, where gif images are no longer converted to jpeg.
   [thet]
 
diff --git a/plone/namedfile/usage.rst b/plone/namedfile/usage.rst
index c62d1cb..269bc8b 100644
--- a/plone/namedfile/usage.rst
+++ b/plone/namedfile/usage.rst
@@ -181,7 +181,7 @@ We will test this with a dummy request, faking traversal::
     >>> request = TestRequest()
     >>> download = Download(container, request).publishTraverse(request, 'blob')
     >>> data = download()
-    >>> isinstance(data, file)
+    >>> hasattr(data, 'read') and hasattr(data, 'tell') and hasattr(data, 'seek')  # file-like object
     True
     >>> data.read()
     'dummy test data'
@@ -207,7 +207,7 @@ We will test this with a dummy request, faking traversal::
     >>> request = TestRequest()
     >>> download = Download(container, request).publishTraverse(request, 'blobimage')
     >>> data = download()
-    >>> isinstance(data, file)
+    >>> hasattr(data, 'read') and hasattr(data, 'tell') and hasattr(data, 'seek')  # file-like object
     True
     >>> data.read() == zptlogo
     True
@@ -245,7 +245,7 @@ We will test this with a dummy request, faking traversal::
     >>> request = TestRequest()
     >>> display_file = DisplayFile(container, request).publishTraverse(request, 'blob')
     >>> data = display_file()
-    >>> isinstance(data, file)
+    >>> hasattr(data, 'read') and hasattr(data, 'tell') and hasattr(data, 'seek')  # file-like object
     True
     >>> data.read()
     'dummy test data'
@@ -269,7 +269,7 @@ We will test this with a dummy request, faking traversal::
     >>> request = TestRequest()
     >>> display_file = DisplayFile(container, request).publishTraverse(request, 'blobimage')
     >>> data = display_file()
-    >>> isinstance(data, file)
+    >>> hasattr(data, 'read') and hasattr(data, 'tell') and hasattr(data, 'seek')  # file-like object
     True
     >>> data.read() == zptlogo
     True
diff --git a/plone/namedfile/utils.py b/plone/namedfile/utils.py
index 08317b2..694108e 100644
--- a/plone/namedfile/utils.py
+++ b/plone/namedfile/utils.py
@@ -1,4 +1,5 @@
 # -*- coding: utf-8 -*-
+from cStringIO import StringIO
 from plone.namedfile.interfaces import IBlobby
 
 import mimetypes
@@ -73,7 +74,9 @@ def stream_data(file):
         # in case of uncomitted changes
         # filename = file._blob.committed()
 
-        filename = file._blob._p_blob_uncommitted or file._blob.committed()
-        return filestream_iterator(filename, 'rb')
+        if file._blob._p_blob_uncommitted:
+            return StringIO(file.data)
+
+        return filestream_iterator(file._blob.committed(), 'rb')
 
     return file.data


Repository: plone.namedfile


Branch: refs/heads/master
Date: 2016-06-10T08:27:39-07:00
Author: Steve McMahon (smcmahon) <steve@dcn.org>
Commit: https://github.com/plone/plone.namedfile/commit/36014d67c3befacfe3a058f1d3d99a6a4352a31f

Return simple string in uncommitted case

Files changed:
M plone/namedfile/usage.rst
M plone/namedfile/utils.py

diff --git a/plone/namedfile/usage.rst b/plone/namedfile/usage.rst
index 269bc8b..580847c 100644
--- a/plone/namedfile/usage.rst
+++ b/plone/namedfile/usage.rst
@@ -181,9 +181,7 @@ We will test this with a dummy request, faking traversal::
     >>> request = TestRequest()
     >>> download = Download(container, request).publishTraverse(request, 'blob')
     >>> data = download()
-    >>> hasattr(data, 'read') and hasattr(data, 'tell') and hasattr(data, 'seek')  # file-like object
-    True
-    >>> data.read()
+    >>> hasattr(data, 'read') and data.read() or data
     'dummy test data'
     >>> request.response.getHeader('Content-Length')
     '15'
@@ -207,9 +205,7 @@ We will test this with a dummy request, faking traversal::
     >>> request = TestRequest()
     >>> download = Download(container, request).publishTraverse(request, 'blobimage')
     >>> data = download()
-    >>> hasattr(data, 'read') and hasattr(data, 'tell') and hasattr(data, 'seek')  # file-like object
-    True
-    >>> data.read() == zptlogo
+    >>> (hasattr(data, 'read') and data.read() or data) == zptlogo
     True
     >>> request.response.getHeader('Content-Length')
     '341'
@@ -245,9 +241,7 @@ We will test this with a dummy request, faking traversal::
     >>> request = TestRequest()
     >>> display_file = DisplayFile(container, request).publishTraverse(request, 'blob')
     >>> data = display_file()
-    >>> hasattr(data, 'read') and hasattr(data, 'tell') and hasattr(data, 'seek')  # file-like object
-    True
-    >>> data.read()
+    >>> hasattr(data, 'read') and data.read() or data
     'dummy test data'
     >>> request.response.getHeader('Content-Length')
     '15'
@@ -269,9 +263,7 @@ We will test this with a dummy request, faking traversal::
     >>> request = TestRequest()
     >>> display_file = DisplayFile(container, request).publishTraverse(request, 'blobimage')
     >>> data = display_file()
-    >>> hasattr(data, 'read') and hasattr(data, 'tell') and hasattr(data, 'seek')  # file-like object
-    True
-    >>> data.read() == zptlogo
+    >>> (hasattr(data, 'read') and data.read() or data) == zptlogo
     True
     >>> request.response.getHeader('Content-Length')
     '341'
diff --git a/plone/namedfile/utils.py b/plone/namedfile/utils.py
index 694108e..982df4c 100644
--- a/plone/namedfile/utils.py
+++ b/plone/namedfile/utils.py
@@ -1,5 +1,4 @@
 # -*- coding: utf-8 -*-
-from cStringIO import StringIO
 from plone.namedfile.interfaces import IBlobby
 
 import mimetypes
@@ -69,14 +68,10 @@ def stream_data(file):
     """Return the given file as a stream if possible.
     """
 
-    if IBlobby.providedBy(file) and filestream_iterator is not None:
-        # XXX: we may want to use this instead, which would raise an error
-        # in case of uncomitted changes
-        # filename = file._blob.committed()
-
+    if IBlobby.providedBy(file):
         if file._blob._p_blob_uncommitted:
-            return StringIO(file.data)
-
-        return filestream_iterator(file._blob.committed(), 'rb')
+            return file.data
+        if filestream_iterator is not None:
+            return filestream_iterator(file._blob.committed(), 'rb')
 
     return file.data


Repository: plone.namedfile


Branch: refs/heads/master
Date: 2016-06-10T14:23:41-07:00
Author: Steve McMahon (smcmahon) <steve@dcn.org>
Commit: https://github.com/plone/plone.namedfile/commit/cb6e292235adb4e6ec4e79ccc28bc38dbf48ae59

Binary files need to be opened in binary mode on Windows

Files changed:
M CHANGES.rst
M plone/namedfile/tests/test_image.py
M plone/namedfile/tests/test_scaling.py
M plone/namedfile/tests/test_scaling_functional.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 9c98b00..d22c60c 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -24,6 +24,9 @@ New:
 
 Fixes:
 
+- Several tests were failing on Windows 10 due to binary files being opened in text mode. Fixed.
+  [smcmahon]
+
 - Prevent attempt to create a filestream_iterator from a temporary file associated with an
   uncommited blob.
   Fixes an error on Windows 10 "WindowsError 32" by attempting to delete or access a file in use
diff --git a/plone/namedfile/tests/test_image.py b/plone/namedfile/tests/test_image.py
index a067141..dc702e5 100644
--- a/plone/namedfile/tests/test_image.py
+++ b/plone/namedfile/tests/test_image.py
@@ -13,7 +13,7 @@
 def getFile(filename):
     """ return contents of the file with the given name """
     filename = os.path.join(os.path.dirname(__file__), filename)
-    return open(filename, 'r')
+    return open(filename, 'rb')
 
 zptlogo = (
     'GIF89a\x10\x00\x10\x00\xd5\x00\x00\xff\xff\xff\xff\xff\xfe\xfc\xfd\xfd'
diff --git a/plone/namedfile/tests/test_scaling.py b/plone/namedfile/tests/test_scaling.py
index 7811134..65e80ee 100644
--- a/plone/namedfile/tests/test_scaling.py
+++ b/plone/namedfile/tests/test_scaling.py
@@ -26,7 +26,7 @@
 def getFile(filename):
     """ return contents of the file with the given name """
     filename = os.path.join(os.path.dirname(__file__), filename)
-    return open(filename, 'r')
+    return open(filename, 'rb')
 
 
 def wait_to_ensure_modified():
diff --git a/plone/namedfile/tests/test_scaling_functional.py b/plone/namedfile/tests/test_scaling_functional.py
index 9f290c8..7166132 100644
--- a/plone/namedfile/tests/test_scaling_functional.py
+++ b/plone/namedfile/tests/test_scaling_functional.py
@@ -23,7 +23,7 @@
 def getFile(filename):
     """ return contents of the file with the given name """
     filename = os.path.join(os.path.dirname(__file__), filename)
-    return open(filename, 'r')
+    return open(filename, 'rb')
 
 
 def wait_to_ensure_modified():


Repository: plone.namedfile


Branch: refs/heads/master
Date: 2016-06-13T22:44:34+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.namedfile/commit/1c4fd5f4f144e502cd9480bf1c8b62c311664f1a

Merge pull request #28 from plone/scale-streaming

Fixes for scaling/streaming bug that affects Windows 10

Files changed:
M CHANGES.rst
M plone/namedfile/tests/test_image.py
M plone/namedfile/tests/test_scaling.py
M plone/namedfile/tests/test_scaling_functional.py
M plone/namedfile/usage.rst
M plone/namedfile/utils.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 57fc44c..d22c60c 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -24,6 +24,15 @@ New:
 
 Fixes:
 
+- Several tests were failing on Windows 10 due to binary files being opened in text mode. Fixed.
+  [smcmahon]
+
+- Prevent attempt to create a filestream_iterator from a temporary file associated with an
+  uncommited blob.
+  Fixes an error on Windows 10 "WindowsError 32" by attempting to delete or access a file in use
+  by another process.
+  [smcmahon]
+
 - Fix tests to work with latest plone.scale changes, where gif images are no longer converted to jpeg.
   [thet]
 
diff --git a/plone/namedfile/tests/test_image.py b/plone/namedfile/tests/test_image.py
index a067141..dc702e5 100644
--- a/plone/namedfile/tests/test_image.py
+++ b/plone/namedfile/tests/test_image.py
@@ -13,7 +13,7 @@
 def getFile(filename):
     """ return contents of the file with the given name """
     filename = os.path.join(os.path.dirname(__file__), filename)
-    return open(filename, 'r')
+    return open(filename, 'rb')
 
 zptlogo = (
     'GIF89a\x10\x00\x10\x00\xd5\x00\x00\xff\xff\xff\xff\xff\xfe\xfc\xfd\xfd'
diff --git a/plone/namedfile/tests/test_scaling.py b/plone/namedfile/tests/test_scaling.py
index 7811134..65e80ee 100644
--- a/plone/namedfile/tests/test_scaling.py
+++ b/plone/namedfile/tests/test_scaling.py
@@ -26,7 +26,7 @@
 def getFile(filename):
     """ return contents of the file with the given name """
     filename = os.path.join(os.path.dirname(__file__), filename)
-    return open(filename, 'r')
+    return open(filename, 'rb')
 
 
 def wait_to_ensure_modified():
diff --git a/plone/namedfile/tests/test_scaling_functional.py b/plone/namedfile/tests/test_scaling_functional.py
index 9f290c8..7166132 100644
--- a/plone/namedfile/tests/test_scaling_functional.py
+++ b/plone/namedfile/tests/test_scaling_functional.py
@@ -23,7 +23,7 @@
 def getFile(filename):
     """ return contents of the file with the given name """
     filename = os.path.join(os.path.dirname(__file__), filename)
-    return open(filename, 'r')
+    return open(filename, 'rb')
 
 
 def wait_to_ensure_modified():
diff --git a/plone/namedfile/usage.rst b/plone/namedfile/usage.rst
index c62d1cb..580847c 100644
--- a/plone/namedfile/usage.rst
+++ b/plone/namedfile/usage.rst
@@ -181,9 +181,7 @@ We will test this with a dummy request, faking traversal::
     >>> request = TestRequest()
     >>> download = Download(container, request).publishTraverse(request, 'blob')
     >>> data = download()
-    >>> isinstance(data, file)
-    True
-    >>> data.read()
+    >>> hasattr(data, 'read') and data.read() or data
     'dummy test data'
     >>> request.response.getHeader('Content-Length')
     '15'
@@ -207,9 +205,7 @@ We will test this with a dummy request, faking traversal::
     >>> request = TestRequest()
     >>> download = Download(container, request).publishTraverse(request, 'blobimage')
     >>> data = download()
-    >>> isinstance(data, file)
-    True
-    >>> data.read() == zptlogo
+    >>> (hasattr(data, 'read') and data.read() or data) == zptlogo
     True
     >>> request.response.getHeader('Content-Length')
     '341'
@@ -245,9 +241,7 @@ We will test this with a dummy request, faking traversal::
     >>> request = TestRequest()
     >>> display_file = DisplayFile(container, request).publishTraverse(request, 'blob')
     >>> data = display_file()
-    >>> isinstance(data, file)
-    True
-    >>> data.read()
+    >>> hasattr(data, 'read') and data.read() or data
     'dummy test data'
     >>> request.response.getHeader('Content-Length')
     '15'
@@ -269,9 +263,7 @@ We will test this with a dummy request, faking traversal::
     >>> request = TestRequest()
     >>> display_file = DisplayFile(container, request).publishTraverse(request, 'blobimage')
     >>> data = display_file()
-    >>> isinstance(data, file)
-    True
-    >>> data.read() == zptlogo
+    >>> (hasattr(data, 'read') and data.read() or data) == zptlogo
     True
     >>> request.response.getHeader('Content-Length')
     '341'
diff --git a/plone/namedfile/utils.py b/plone/namedfile/utils.py
index 08317b2..982df4c 100644
--- a/plone/namedfile/utils.py
+++ b/plone/namedfile/utils.py
@@ -68,12 +68,10 @@ def stream_data(file):
     """Return the given file as a stream if possible.
     """
 
-    if IBlobby.providedBy(file) and filestream_iterator is not None:
-        # XXX: we may want to use this instead, which would raise an error
-        # in case of uncomitted changes
-        # filename = file._blob.committed()
-
-        filename = file._blob._p_blob_uncommitted or file._blob.committed()
-        return filestream_iterator(filename, 'rb')
+    if IBlobby.providedBy(file):
+        if file._blob._p_blob_uncommitted:
+            return file.data
+        if filestream_iterator is not None:
+            return filestream_iterator(file._blob.committed(), 'rb')
 
     return file.data


