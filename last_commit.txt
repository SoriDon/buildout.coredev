Repository: plone.app.theming


Branch: refs/heads/master
Date: 2018-12-31T00:13:23+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.theming/commit/2605734ca69aff29642562cf4695b92d2e01be10

test_transform: import transaction globally, instead of 30 times.

Files changed:
M src/plone/app/theming/tests/test_transform.py

b'diff --git a/src/plone/app/theming/tests/test_transform.py b/src/plone/app/theming/tests/test_transform.py\nindex d5ab11c..25f5fda 100644\n--- a/src/plone/app/theming/tests/test_transform.py\n+++ b/src/plone/app/theming/tests/test_transform.py\n@@ -23,6 +23,7 @@\n \n import os.path\n import re\n+import transaction\n import unittest\n \n \n@@ -45,7 +46,6 @@ def setUp(self):\n             \'requestParam\': \'request/useother | string:off\',\n         }\n \n-        import transaction\n         transaction.commit()\n \n     def tearDown(self):\n@@ -77,7 +77,6 @@ def test_theme_enabled(self):\n         portal = self.layer[\'portal\']\n \n         self.settings.enabled = True\n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -140,7 +139,6 @@ def test_theme_enabled_resource_directory(self):\n             self.settings.doctype,\n             u"<!DOCTYPE html>"\n         )\n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -163,7 +161,6 @@ def test_theme_enabled_query_string_off_switch(self):\n         portal = self.layer[\'portal\']\n \n         self.settings.enabled = True\n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -185,7 +182,6 @@ def test_theme_enabled_query_string_off_switch_production_mode(self):\n         getConfiguration().debug_mode = False\n \n         self.settings.enabled = True\n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -205,7 +201,6 @@ def test_theme_enabled_header_off(self):\n         portal = self.layer[\'portal\']\n \n         self.settings.enabled = True\n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -254,7 +249,6 @@ def test_theme_stored_in_plone_site(self):\n         self.settings.rules = u\'/rules.xml\'\n         self.settings.enabled = True\n \n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -290,7 +284,6 @@ def test_theme_stored_in_plone_site_works_with_virtual_host(self):\n         from Products.SiteAccess import VirtualHostMonster\n         VirtualHostMonster.manage_addVirtualHostMonster(app, \'virtual_hosting\')\n \n-        import transaction\n         transaction.commit()\n \n         portalURL = portal.absolute_url()\n@@ -321,7 +314,6 @@ def test_absolutePrefix_disabled(self):\n         self.settings.enabled = True\n         self.settings.absolutePrefix = None\n \n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -336,7 +328,6 @@ def test_absolutePrefix_enabled_uri(self):\n         self.settings.enabled = True\n         self.settings.absolutePrefix = u\'http://example.com\'\n \n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -354,7 +345,6 @@ def test_absolutePrefix_enabled_path(self):\n         self.settings.enabled = True\n         self.settings.absolutePrefix = u\'/foo\'\n \n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -372,7 +362,6 @@ def test_absolutePrefix_enabled_path_vhosting(self):\n         from Products.SiteAccess import VirtualHostMonster\n         VirtualHostMonster.manage_addVirtualHostMonster(app, \'virtual_hosting\')\n \n-        import transaction\n         transaction.commit()\n \n         self.settings.enabled = True\n@@ -387,7 +376,6 @@ def test_absolutePrefix_enabled_path_vhosting(self):\n             "/_vh_fizz/_vh_buzz/_vh_fizzbuzz/".format(prefix, suffix)\n         )\n \n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -406,7 +394,6 @@ def test_theme_installed_invalid_config(self):\n         self.settings.enabled = True\n         self.settings.rules = u"invalid"\n \n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -427,7 +414,6 @@ def test_non_html_content(self):\n \n         self.settings.enabled = True\n \n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -456,7 +442,7 @@ def test_non_html_content(self):\n     #         self.settings, portal.absolute_url()\n     #     ).updateTransform(transform)\n     #\n-    #     import transaction; transaction.commit()\n+    #     transaction.commit()\n     #\n     #     browser = Browser(app)\n     #     browser.open(portal.absolute_url())\n@@ -475,7 +461,7 @@ def test_non_html_content(self):\n     #     self.settings.enabled = False\n     #     self.settings.enabled = True\n     #\n-    #     import transaction; transaction.commit()\n+    #     transaction.commit()\n     #\n     #     browser.open(portal.absolute_url())\n     #\n@@ -524,7 +510,7 @@ def test_non_html_content(self):\n     #     # First try without the theme\n     #     self.settings.enabled = False\n \n-    #     import transaction; transaction.commit()\n+    #     transaction.commit()\n \n     #     browser = Browser(app)\n     #     browser.open(portal.absolute_url())\n@@ -540,7 +526,7 @@ def test_non_html_content(self):\n     #     # Now enable the theme and try again\n     #     self.settings.enabled = True\n \n-    #     import transaction; transaction.commit()\n+    #     transaction.commit()\n \n     #     browser = Browser(app)\n     #     browser.open(portal.absolute_url())\n@@ -565,7 +551,6 @@ def test_theme_different_path(self):\n \n         self.settings.enabled = True\n \n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -604,7 +589,6 @@ def test_theme_params(self):\n             \'requestParam\': \'request/someParam | string:off\',\n         }\n \n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -648,7 +632,6 @@ def test_theme_for_404(self):\n \n         self.settings.enabled = True\n \n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -676,7 +659,6 @@ def test_theme_params_on_404(self):\n             \'requestParam\': \'request/someParam | string:off\',\n         }\n \n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -725,7 +707,6 @@ def test_navroot_params_on_404_widget_in_path(self):\n             \'navigation_root_id\': \'python:portal_state.navigation_root().getId()\'  # noqa\n         }\n \n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -778,7 +759,7 @@ def test_navroot_params_on_404_widget_in_path(self):\n \n     #     self.settings.enabled = True\n \n-    #     import transaction; transaction.commit()\n+    #     transaction.commit()\n \n     #     browser = Browser(app)\n \n@@ -821,7 +802,6 @@ def test_includes(self):\n         self.settings.rules = u\'python://plone.app.theming/tests/includes.xml\'\n         self.settings.enabled = True\n \n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -847,7 +827,6 @@ def test_css_js_includes(self):\n \n         self.settings.enabled = True\n         self.settings.rules = u\'/++theme++plone.app.theming.tests/css-js.xml\'\n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -870,7 +849,6 @@ def test_non_ascii_includes(self):\n \n         self.settings.enabled = True\n         self.settings.rules = u\'/++theme++plone.app.theming.tests/nonascii.xml\'\n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -885,7 +863,6 @@ def test_theme_enabled_query_string_debug_switch(self):\n         portal = self.layer[\'portal\']\n \n         self.settings.enabled = True\n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n'

Repository: plone.app.theming


Branch: refs/heads/master
Date: 2018-12-31T00:27:03+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.theming/commit/d2ef2f09ccae8d54b40c9babd78f90f8c38df7ea

Fixed ResourceWarnings for unclosed files in tests.

Files changed:
A news/154.bugfix
M src/plone/app/theming/tests/test_transform.py

b"diff --git a/news/154.bugfix b/news/154.bugfix\nnew file mode 100644\nindex 0000000..b477240\n--- /dev/null\n+++ b/news/154.bugfix\n@@ -0,0 +1,2 @@\n+Fixed ResourceWarnings for unclosed files in tests.\n+[maurits]\ndiff --git a/src/plone/app/theming/tests/test_transform.py b/src/plone/app/theming/tests/test_transform.py\nindex 25f5fda..9ded05f 100644\n--- a/src/plone/app/theming/tests/test_transform.py\n+++ b/src/plone/app/theming/tests/test_transform.py\n@@ -236,14 +236,11 @@ def test_theme_stored_in_plone_site(self):\n         portal = self.layer['portal']\n \n         # We'll upload the theme files to the Plone site root\n-        rules_contents = open(\n-            os.path.join(os.path.split(__file__)[0], 'localrules.xml')\n-        )\n-        theme_contents = open(\n-            os.path.join(os.path.split(__file__)[0], 'theme.html')\n-        )\n-        portal.manage_addDTMLMethod('theme.html', file=theme_contents)\n-        portal.manage_addDTMLMethod('rules.xml', file=rules_contents)\n+        here = os.path.split(__file__)[0]\n+        with open(os.path.join(here, 'localrules.xml')) as rules_contents:\n+            portal.manage_addDTMLMethod('rules.xml', file=rules_contents)\n+        with open(os.path.join(here, 'theme.html')) as theme_contents:\n+            portal.manage_addDTMLMethod('theme.html', file=theme_contents)\n \n         # These paths should be relative to the Plone site root\n         self.settings.rules = u'/rules.xml'\n@@ -268,14 +265,11 @@ def test_theme_stored_in_plone_site_works_with_virtual_host(self):\n         portal = self.layer['portal']\n \n         # We'll upload the theme files to the Plone site root\n-        rules_contents = open(\n-            os.path.join(os.path.dirname(__file__), 'localrules.xml')\n-        )\n-        theme_contents = open(\n-            os.path.join(os.path.dirname(__file__), 'theme.html')\n-        )\n-        portal.manage_addDTMLMethod('theme.html', file=theme_contents)\n-        portal.manage_addDTMLMethod('rules.xml', file=rules_contents)\n+        here = os.path.split(__file__)[0]\n+        with open(os.path.join(here, 'localrules.xml')) as rules_contents:\n+            portal.manage_addDTMLMethod('rules.xml', file=rules_contents)\n+        with open(os.path.join(here, 'theme.html')) as theme_contents:\n+            portal.manage_addDTMLMethod('theme.html', file=theme_contents)\n \n         # These paths should be relative to the Plone site root\n         self.settings.rules = u'/rules.xml'\n@@ -781,22 +775,21 @@ def test_includes(self):\n \n         setRoles(portal, TEST_USER_ID, ('Manager',))\n \n-        one = open(os.path.join(os.path.split(__file__)[0], 'one.html'))\n-        two = open(os.path.join(os.path.split(__file__)[0], 'two.html'))\n-\n         # Create some test content in the portal root\n-        portal.manage_addDTMLMethod('alpha', file=one)\n-        portal.manage_addDTMLMethod('beta', file=two)\n-\n-        one.seek(0)\n-        two.seek(0)\n+        here = os.path.split(__file__)[0]\n+        with open(os.path.join(here, 'one.html')) as one:\n+            portal.manage_addDTMLMethod('alpha', file=one)\n+        with open(os.path.join(here, 'two.html')) as two:\n+            portal.manage_addDTMLMethod('beta', file=two)\n \n         # Create some different content in a subfolder\n         portal.invokeFactory('Folder', 'subfolder')\n         portal.portal_workflow.doActionFor(portal.subfolder, 'publish')\n \n-        portal['subfolder'].manage_addDTMLMethod('alpha', file=two)\n-        portal['subfolder'].manage_addDTMLMethod('beta', file=one)\n+        with open(os.path.join(here, 'one.html')) as one:\n+            portal['subfolder'].manage_addDTMLMethod('beta', file=one)\n+        with open(os.path.join(here, 'two.html')) as two:\n+            portal['subfolder'].manage_addDTMLMethod('alpha', file=two)\n \n         # Set up transformation\n         self.settings.rules = u'python://plone.app.theming/tests/includes.xml'\n"

Repository: plone.app.theming


Branch: refs/heads/master
Date: 2019-01-01T21:35:58+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.theming/commit/9a979ff9a622547fa0d0752e59662862b43fbffc

Merge pull request #155 from plone/issue-154-open-files

Fixed ResourceWarnings for unclosed files in tests.

Files changed:
A news/154.bugfix
M src/plone/app/theming/tests/test_transform.py

b'diff --git a/news/154.bugfix b/news/154.bugfix\nnew file mode 100644\nindex 0000000..b477240\n--- /dev/null\n+++ b/news/154.bugfix\n@@ -0,0 +1,2 @@\n+Fixed ResourceWarnings for unclosed files in tests.\n+[maurits]\ndiff --git a/src/plone/app/theming/tests/test_transform.py b/src/plone/app/theming/tests/test_transform.py\nindex d5ab11c..9ded05f 100644\n--- a/src/plone/app/theming/tests/test_transform.py\n+++ b/src/plone/app/theming/tests/test_transform.py\n@@ -23,6 +23,7 @@\n \n import os.path\n import re\n+import transaction\n import unittest\n \n \n@@ -45,7 +46,6 @@ def setUp(self):\n             \'requestParam\': \'request/useother | string:off\',\n         }\n \n-        import transaction\n         transaction.commit()\n \n     def tearDown(self):\n@@ -77,7 +77,6 @@ def test_theme_enabled(self):\n         portal = self.layer[\'portal\']\n \n         self.settings.enabled = True\n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -140,7 +139,6 @@ def test_theme_enabled_resource_directory(self):\n             self.settings.doctype,\n             u"<!DOCTYPE html>"\n         )\n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -163,7 +161,6 @@ def test_theme_enabled_query_string_off_switch(self):\n         portal = self.layer[\'portal\']\n \n         self.settings.enabled = True\n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -185,7 +182,6 @@ def test_theme_enabled_query_string_off_switch_production_mode(self):\n         getConfiguration().debug_mode = False\n \n         self.settings.enabled = True\n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -205,7 +201,6 @@ def test_theme_enabled_header_off(self):\n         portal = self.layer[\'portal\']\n \n         self.settings.enabled = True\n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -241,20 +236,16 @@ def test_theme_stored_in_plone_site(self):\n         portal = self.layer[\'portal\']\n \n         # We\'ll upload the theme files to the Plone site root\n-        rules_contents = open(\n-            os.path.join(os.path.split(__file__)[0], \'localrules.xml\')\n-        )\n-        theme_contents = open(\n-            os.path.join(os.path.split(__file__)[0], \'theme.html\')\n-        )\n-        portal.manage_addDTMLMethod(\'theme.html\', file=theme_contents)\n-        portal.manage_addDTMLMethod(\'rules.xml\', file=rules_contents)\n+        here = os.path.split(__file__)[0]\n+        with open(os.path.join(here, \'localrules.xml\')) as rules_contents:\n+            portal.manage_addDTMLMethod(\'rules.xml\', file=rules_contents)\n+        with open(os.path.join(here, \'theme.html\')) as theme_contents:\n+            portal.manage_addDTMLMethod(\'theme.html\', file=theme_contents)\n \n         # These paths should be relative to the Plone site root\n         self.settings.rules = u\'/rules.xml\'\n         self.settings.enabled = True\n \n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -274,14 +265,11 @@ def test_theme_stored_in_plone_site_works_with_virtual_host(self):\n         portal = self.layer[\'portal\']\n \n         # We\'ll upload the theme files to the Plone site root\n-        rules_contents = open(\n-            os.path.join(os.path.dirname(__file__), \'localrules.xml\')\n-        )\n-        theme_contents = open(\n-            os.path.join(os.path.dirname(__file__), \'theme.html\')\n-        )\n-        portal.manage_addDTMLMethod(\'theme.html\', file=theme_contents)\n-        portal.manage_addDTMLMethod(\'rules.xml\', file=rules_contents)\n+        here = os.path.split(__file__)[0]\n+        with open(os.path.join(here, \'localrules.xml\')) as rules_contents:\n+            portal.manage_addDTMLMethod(\'rules.xml\', file=rules_contents)\n+        with open(os.path.join(here, \'theme.html\')) as theme_contents:\n+            portal.manage_addDTMLMethod(\'theme.html\', file=theme_contents)\n \n         # These paths should be relative to the Plone site root\n         self.settings.rules = u\'/rules.xml\'\n@@ -290,7 +278,6 @@ def test_theme_stored_in_plone_site_works_with_virtual_host(self):\n         from Products.SiteAccess import VirtualHostMonster\n         VirtualHostMonster.manage_addVirtualHostMonster(app, \'virtual_hosting\')\n \n-        import transaction\n         transaction.commit()\n \n         portalURL = portal.absolute_url()\n@@ -321,7 +308,6 @@ def test_absolutePrefix_disabled(self):\n         self.settings.enabled = True\n         self.settings.absolutePrefix = None\n \n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -336,7 +322,6 @@ def test_absolutePrefix_enabled_uri(self):\n         self.settings.enabled = True\n         self.settings.absolutePrefix = u\'http://example.com\'\n \n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -354,7 +339,6 @@ def test_absolutePrefix_enabled_path(self):\n         self.settings.enabled = True\n         self.settings.absolutePrefix = u\'/foo\'\n \n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -372,7 +356,6 @@ def test_absolutePrefix_enabled_path_vhosting(self):\n         from Products.SiteAccess import VirtualHostMonster\n         VirtualHostMonster.manage_addVirtualHostMonster(app, \'virtual_hosting\')\n \n-        import transaction\n         transaction.commit()\n \n         self.settings.enabled = True\n@@ -387,7 +370,6 @@ def test_absolutePrefix_enabled_path_vhosting(self):\n             "/_vh_fizz/_vh_buzz/_vh_fizzbuzz/".format(prefix, suffix)\n         )\n \n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -406,7 +388,6 @@ def test_theme_installed_invalid_config(self):\n         self.settings.enabled = True\n         self.settings.rules = u"invalid"\n \n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -427,7 +408,6 @@ def test_non_html_content(self):\n \n         self.settings.enabled = True\n \n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -456,7 +436,7 @@ def test_non_html_content(self):\n     #         self.settings, portal.absolute_url()\n     #     ).updateTransform(transform)\n     #\n-    #     import transaction; transaction.commit()\n+    #     transaction.commit()\n     #\n     #     browser = Browser(app)\n     #     browser.open(portal.absolute_url())\n@@ -475,7 +455,7 @@ def test_non_html_content(self):\n     #     self.settings.enabled = False\n     #     self.settings.enabled = True\n     #\n-    #     import transaction; transaction.commit()\n+    #     transaction.commit()\n     #\n     #     browser.open(portal.absolute_url())\n     #\n@@ -524,7 +504,7 @@ def test_non_html_content(self):\n     #     # First try without the theme\n     #     self.settings.enabled = False\n \n-    #     import transaction; transaction.commit()\n+    #     transaction.commit()\n \n     #     browser = Browser(app)\n     #     browser.open(portal.absolute_url())\n@@ -540,7 +520,7 @@ def test_non_html_content(self):\n     #     # Now enable the theme and try again\n     #     self.settings.enabled = True\n \n-    #     import transaction; transaction.commit()\n+    #     transaction.commit()\n \n     #     browser = Browser(app)\n     #     browser.open(portal.absolute_url())\n@@ -565,7 +545,6 @@ def test_theme_different_path(self):\n \n         self.settings.enabled = True\n \n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -604,7 +583,6 @@ def test_theme_params(self):\n             \'requestParam\': \'request/someParam | string:off\',\n         }\n \n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -648,7 +626,6 @@ def test_theme_for_404(self):\n \n         self.settings.enabled = True\n \n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -676,7 +653,6 @@ def test_theme_params_on_404(self):\n             \'requestParam\': \'request/someParam | string:off\',\n         }\n \n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -725,7 +701,6 @@ def test_navroot_params_on_404_widget_in_path(self):\n             \'navigation_root_id\': \'python:portal_state.navigation_root().getId()\'  # noqa\n         }\n \n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -778,7 +753,7 @@ def test_navroot_params_on_404_widget_in_path(self):\n \n     #     self.settings.enabled = True\n \n-    #     import transaction; transaction.commit()\n+    #     transaction.commit()\n \n     #     browser = Browser(app)\n \n@@ -800,28 +775,26 @@ def test_includes(self):\n \n         setRoles(portal, TEST_USER_ID, (\'Manager\',))\n \n-        one = open(os.path.join(os.path.split(__file__)[0], \'one.html\'))\n-        two = open(os.path.join(os.path.split(__file__)[0], \'two.html\'))\n-\n         # Create some test content in the portal root\n-        portal.manage_addDTMLMethod(\'alpha\', file=one)\n-        portal.manage_addDTMLMethod(\'beta\', file=two)\n-\n-        one.seek(0)\n-        two.seek(0)\n+        here = os.path.split(__file__)[0]\n+        with open(os.path.join(here, \'one.html\')) as one:\n+            portal.manage_addDTMLMethod(\'alpha\', file=one)\n+        with open(os.path.join(here, \'two.html\')) as two:\n+            portal.manage_addDTMLMethod(\'beta\', file=two)\n \n         # Create some different content in a subfolder\n         portal.invokeFactory(\'Folder\', \'subfolder\')\n         portal.portal_workflow.doActionFor(portal.subfolder, \'publish\')\n \n-        portal[\'subfolder\'].manage_addDTMLMethod(\'alpha\', file=two)\n-        portal[\'subfolder\'].manage_addDTMLMethod(\'beta\', file=one)\n+        with open(os.path.join(here, \'one.html\')) as one:\n+            portal[\'subfolder\'].manage_addDTMLMethod(\'beta\', file=one)\n+        with open(os.path.join(here, \'two.html\')) as two:\n+            portal[\'subfolder\'].manage_addDTMLMethod(\'alpha\', file=two)\n \n         # Set up transformation\n         self.settings.rules = u\'python://plone.app.theming/tests/includes.xml\'\n         self.settings.enabled = True\n \n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -847,7 +820,6 @@ def test_css_js_includes(self):\n \n         self.settings.enabled = True\n         self.settings.rules = u\'/++theme++plone.app.theming.tests/css-js.xml\'\n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -870,7 +842,6 @@ def test_non_ascii_includes(self):\n \n         self.settings.enabled = True\n         self.settings.rules = u\'/++theme++plone.app.theming.tests/nonascii.xml\'\n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n@@ -885,7 +856,6 @@ def test_theme_enabled_query_string_debug_switch(self):\n         portal = self.layer[\'portal\']\n \n         self.settings.enabled = True\n-        import transaction\n         transaction.commit()\n \n         browser = Browser(app)\n'

