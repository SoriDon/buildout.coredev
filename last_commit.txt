Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2016-05-25T09:50:53+02:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/plone.app.z3cform/commit/22e42041e6faf22ae03df87564893cbb78d963e3

Allow custom CSS classes for pattern widgets
Don't overwrite widget default css classes when rendering pattern widgets.
This allows setting a css class for pattern widgets via the ``klass`` keyword in plone.autoform widget directives.

Files changed:
M CHANGES.rst
M plone/app/z3cform/tests/test_widgets.py
M plone/app/z3cform/widget.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 446dc7d..48e4ca8 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,9 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- Don't overwrite widget default css classes when rendering pattern widgets.
+  This allows setting a css class via the ``klass`` keyword in plone.autoform widget directives.
+  [thet]
 
 Bug fixes:
 
diff --git a/plone/app/z3cform/tests/test_widgets.py b/plone/app/z3cform/tests/test_widgets.py
index 541a9ec..33bfebf 100644
--- a/plone/app/z3cform/tests/test_widgets.py
+++ b/plone/app/z3cform/tests/test_widgets.py
@@ -99,6 +99,20 @@ def test_widget_base_notimplemented(self):
             '<input class="pat-example" type="text"/>',
             widget.render())
 
+    def test_widget_base_custom_css(self):
+        from plone.app.z3cform.widget import BaseWidget
+        from plone.app.widgets.base import InputWidget
+
+        widget = BaseWidget(self.request)
+        widget.field = self.field
+        widget.pattern = 'example'
+        widget.klass = 'very-custom-class'
+        widget._base = InputWidget
+
+        self.assertEqual(
+            '<input class="pat-example very-custom-class" type="text"/>',
+            widget.render())
+
 
 class DateWidgetTests(unittest.TestCase):
 
diff --git a/plone/app/z3cform/widget.py b/plone/app/z3cform/widget.py
index 10f1fb7..6e74ab9 100644
--- a/plone/app/z3cform/widget.py
+++ b/plone/app/z3cform/widget.py
@@ -90,7 +90,13 @@ def render(self):
         """
         if self.mode != 'input':
             return super(BaseWidget, self).render()
-        return self._base(**self._base_args()).render()
+
+        pattern_widget = self._base(**self._base_args())
+        if getattr(self, 'klass', False):
+            pattern_widget.klass = u'{0} {1}'.format(
+                pattern_widget.klass, self.klass
+            )
+        return pattern_widget.render()
 
 
 @implementer_only(IDateWidget)


Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2016-05-25T12:36:12+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.z3cform/commit/b59577be7bf454bec4edce600d5ba5a08c767c48

Merge pull request #45 from plone/thet-customcss

Allow to set CSS class via plone.autoform directives

Files changed:
M CHANGES.rst
M plone/app/z3cform/tests/test_widgets.py
M plone/app/z3cform/widget.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 446dc7d..48e4ca8 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,9 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- Don't overwrite widget default css classes when rendering pattern widgets.
+  This allows setting a css class via the ``klass`` keyword in plone.autoform widget directives.
+  [thet]
 
 Bug fixes:
 
diff --git a/plone/app/z3cform/tests/test_widgets.py b/plone/app/z3cform/tests/test_widgets.py
index 541a9ec..33bfebf 100644
--- a/plone/app/z3cform/tests/test_widgets.py
+++ b/plone/app/z3cform/tests/test_widgets.py
@@ -99,6 +99,20 @@ def test_widget_base_notimplemented(self):
             '<input class="pat-example" type="text"/>',
             widget.render())
 
+    def test_widget_base_custom_css(self):
+        from plone.app.z3cform.widget import BaseWidget
+        from plone.app.widgets.base import InputWidget
+
+        widget = BaseWidget(self.request)
+        widget.field = self.field
+        widget.pattern = 'example'
+        widget.klass = 'very-custom-class'
+        widget._base = InputWidget
+
+        self.assertEqual(
+            '<input class="pat-example very-custom-class" type="text"/>',
+            widget.render())
+
 
 class DateWidgetTests(unittest.TestCase):
 
diff --git a/plone/app/z3cform/widget.py b/plone/app/z3cform/widget.py
index 10f1fb7..6e74ab9 100644
--- a/plone/app/z3cform/widget.py
+++ b/plone/app/z3cform/widget.py
@@ -90,7 +90,13 @@ def render(self):
         """
         if self.mode != 'input':
             return super(BaseWidget, self).render()
-        return self._base(**self._base_args()).render()
+
+        pattern_widget = self._base(**self._base_args())
+        if getattr(self, 'klass', False):
+            pattern_widget.klass = u'{0} {1}'.format(
+                pattern_widget.klass, self.klass
+            )
+        return pattern_widget.render()
 
 
 @implementer_only(IDateWidget)


