Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2017-07-03T17:09:20+03:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/3736191d090af35317b6febd18cf9468419f418e

allow to skip rebuilding the catalog when migrating in code

Files changed:
M plone/app/contenttypes/migration/browser.py

diff --git a/plone/app/contenttypes/migration/browser.py b/plone/app/contenttypes/migration/browser.py
index c46b972f..c1a12332 100644
--- a/plone/app/contenttypes/migration/browser.py
+++ b/plone/app/contenttypes/migration/browser.py
@@ -126,7 +126,8 @@ def __call__(self,
                  content_types='all',
                  migrate_schemaextended_content=False,
                  migrate_references=True,
-                 from_form=False):
+                 from_form=False,
+                 reindex_catalog=True):
 
         portal = self.context
         if content_types == 'all':
@@ -245,6 +246,7 @@ def __call__(self,
         # make sure the view-methods on the plone site are updated
         use_new_view_names(portal, types_to_fix=['Plone Site'])
 
+        if reindex_catalog:
         catalog.clearFindAndRebuild()
 
         # restore references


Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2017-07-03T17:09:20+03:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/40cb99aa05d55598e8a14585ebd58a07b0276a0e

p.a.m no longer allows querying by Language='all'

Files changed:
M plone/app/contenttypes/migration/browser.py

diff --git a/plone/app/contenttypes/migration/browser.py b/plone/app/contenttypes/migration/browser.py
index c1a12332..30d534f3 100644
--- a/plone/app/contenttypes/migration/browser.py
+++ b/plone/app/contenttypes/migration/browser.py
@@ -95,8 +95,6 @@ def __call__(self):
         ]
         catalog = getToolByName(self.context, 'portal_catalog')
         query = {}
-        if HAS_MULTILINGUAL and 'Language' in catalog.indexes():
-            query['Language'] = 'all'
         for portal_type, portal_type_class in portal_types:
             query['portal_type'] = portal_type
             results = catalog(query)
@@ -207,8 +205,6 @@ def __call__(self,
                 'object_provides': v['iface'].__identifier__,
                 'meta_type': v['old_meta_type'],
             }
-            if HAS_MULTILINGUAL and 'Language' in catalog.indexes():
-                query['Language'] = 'all'
             amount_to_be_migrated = len(catalog(query))
             starttime_for_current = datetime.now()
             logger.info(
@@ -306,8 +302,6 @@ def stats(self):
         results = {}
         query = {}
         catalog = self.context.portal_catalog
-        if HAS_MULTILINGUAL and 'Language' in catalog.indexes():
-            query['Language'] = 'all'
         for brain in catalog(query):
             classname = brain.getObject().__class__.__name__
             results[classname] = results.get(classname, 0) + 1
@@ -507,8 +501,6 @@ def objects_to_be_migrated(self):
         """ Return the number of AT objects in the portal """
         catalog = getToolByName(self.context, 'portal_catalog')
         query = {'meta_type': [i['old_meta_type'] for i in ATCT_LIST.values()]}
-        if HAS_MULTILINGUAL and 'Language' in catalog.indexes():
-            query['Language'] = 'all'
         brains = catalog(query)
         self._objects_to_be_migrated = len(brains)
         return self._objects_to_be_migrated


Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2017-07-03T17:09:20+03:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/ef261ad1d03dc04e34e42371f145c8e6ecade1f0

missed another use all Language='all'

Files changed:
M plone/app/contenttypes/migration/browser.py

diff --git a/plone/app/contenttypes/migration/browser.py b/plone/app/contenttypes/migration/browser.py
index 30d534f3..f9e13aad 100644
--- a/plone/app/contenttypes/migration/browser.py
+++ b/plone/app/contenttypes/migration/browser.py
@@ -10,7 +10,6 @@
 from plone.app.contenttypes.migration import dxmigration
 from plone.app.contenttypes.migration import migration
 from plone.app.contenttypes.migration.patches import patched_insertForwardIndexEntry  # noqa
-from plone.app.contenttypes.migration.utils import HAS_MULTILINGUAL
 from plone.app.contenttypes.migration.utils import installTypeIfNeeded
 from plone.app.contenttypes.migration.utils import isSchemaExtended
 from plone.app.contenttypes.migration.utils import restore_references
@@ -530,8 +529,6 @@ def site_has_subtopics(self):
         catalog = getToolByName(self.context, 'portal_catalog')
         query = {'meta_type': 'ATTopic'}
         results = []
-        if HAS_MULTILINGUAL and 'Language' in catalog.indexes():
-            query['Language'] = 'all'
         brains = catalog(query)
         for brain in brains:
             for item in catalog(path={'query': brain.getPath(), 'depth': 1}):


Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2017-07-03T17:09:20+03:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/449627805f14aa91f12b9c970c6c49ff901f835d

index default values when indexing the file fails due to a missing binary

Files changed:
M plone/app/contenttypes/indexers.py

diff --git a/plone/app/contenttypes/indexers.py b/plone/app/contenttypes/indexers.py
index 7c4d3900..3f55f738 100644
--- a/plone/app/contenttypes/indexers.py
+++ b/plone/app/contenttypes/indexers.py
@@ -16,6 +16,7 @@
 from plone.rfc822.interfaces import IPrimaryFieldInfo
 from Products.CMFCore.utils import getToolByName
 from Products.CMFPlone.utils import safe_unicode
+from Products.PortalTransforms.libtransforms.utils import MissingBinary
 from ZODB.POSException import ConflictError
 
 
@@ -108,6 +109,8 @@ def SearchableText_file(obj):
             return SearchableText(obj)
         return _unicode_save_string_concat(SearchableText(obj),
                                            transformed_value.getData())
+    except MissingBinary:
+        return SearchableText(obj)
     except (ConflictError, KeyboardInterrupt):
         raise
     except Exception, msg:


Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2017-07-03T17:09:20+03:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/82a708b0eff1f0b46416bc9980e4cbbd9d08ee29

improve logging when migrating with code

Files changed:
M plone/app/contenttypes/migration/browser.py
M plone/app/contenttypes/migration/migration.py

diff --git a/plone/app/contenttypes/migration/browser.py b/plone/app/contenttypes/migration/browser.py
index f9e13aad..49dd669f 100644
--- a/plone/app/contenttypes/migration/browser.py
+++ b/plone/app/contenttypes/migration/browser.py
@@ -155,6 +155,16 @@ def __call__(self,
         stats_before = self.stats()
         starttime = datetime.now()
 
+        msg = 'Starting Migration\n\n'
+        msg += '\n-----------------------------\n'
+        msg += 'Content statictics:\n'
+        msg += pformat(stats_before)
+        msg += '\n-----------------------------\n'
+        msg += 'Types to be migrated:\n'
+        msg += pformat(content_types)
+        msg += '\n-----------------------------\n'
+        logger.info(msg)
+
         # store references on the portal
         if migrate_references:
             store_references(portal)
@@ -242,7 +252,7 @@ def __call__(self,
         use_new_view_names(portal, types_to_fix=['Plone Site'])
 
         if reindex_catalog:
-        catalog.clearFindAndRebuild()
+            catalog.clearFindAndRebuild()
 
         # restore references
         if migrate_references:
@@ -299,9 +309,8 @@ def __call__(self,
 
     def stats(self):
         results = {}
-        query = {}
         catalog = self.context.portal_catalog
-        for brain in catalog(query):
+        for brain in catalog():
             classname = brain.getObject().__class__.__name__
             results[classname] = results.get(classname, 0) + 1
         return results
diff --git a/plone/app/contenttypes/migration/migration.py b/plone/app/contenttypes/migration/migration.py
index e2506468..ee8438b8 100644
--- a/plone/app/contenttypes/migration/migration.py
+++ b/plone/app/contenttypes/migration/migration.py
@@ -86,7 +86,8 @@ class ATCTContentMigrator(CMFItemMigrator):
     def __init__(self, *args, **kwargs):
         super(ATCTContentMigrator, self).__init__(*args, **kwargs)
         logger.info(
-            'Migrating {0}'.format(
+            'Migrating {0} {1}'.format(
+                self.old.portal_type,
                 '/'.join(self.old.getPhysicalPath())
             )
         )
@@ -150,7 +151,9 @@ class ATCTFolderMigrator(CMFFolderMigrator):
     def __init__(self, *args, **kwargs):
         super(ATCTFolderMigrator, self).__init__(*args, **kwargs)
         logger.info(
-            'Migrating {0}'.format('/'.join(self.old.getPhysicalPath()))
+            'Migrating {0} {1}'.format(
+                self.old.portal_type,
+                '/'.join(self.old.getPhysicalPath()))
         )
 
     def beforeChange_store_comments_on_portal(self):


Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2017-07-03T17:09:20+03:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/d987ce980ad58d15082e92d7921e13a5faf9e5e0

Do not link LinguaPlone relations for Dexterity

Files changed:
M plone/app/contenttypes/migration/utils.py

diff --git a/plone/app/contenttypes/migration/utils.py b/plone/app/contenttypes/migration/utils.py
index c90ad50e..03648535 100644
--- a/plone/app/contenttypes/migration/utils.py
+++ b/plone/app/contenttypes/migration/utils.py
@@ -488,6 +488,10 @@ def link_items(  # noqa
                 source_obj.absolute_url(), target_obj.absolute_url()))
             return
         # handle dx-relation
+        if relationship == 'translationOf':
+            # LinguaPlone relations make no sense for Dexterity
+            return
+
         intids = getUtility(IIntIds)
         to_id = intids.getId(target_obj)
         existing_dx_relations = getattr(source_obj, fieldname, [])


Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2017-07-03T17:09:20+03:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/7815a803dc4a8354b22ba7cb07e35f3118af4596

actually migrate all migrateable types when passing 'all'

Files changed:
M plone/app/contenttypes/migration/browser.py

diff --git a/plone/app/contenttypes/migration/browser.py b/plone/app/contenttypes/migration/browser.py
index 49dd669f..487fd9fc 100644
--- a/plone/app/contenttypes/migration/browser.py
+++ b/plone/app/contenttypes/migration/browser.py
@@ -127,8 +127,6 @@ def __call__(self,
                  reindex_catalog=True):
 
         portal = self.context
-        if content_types == 'all':
-            content_types = DEFAULT_TYPES
 
         if not from_form and migrate not in ['1', 'True', 'true', 1]:
             url1 = '{0}/@@migrate_from_atct?migrate=1'.format(
@@ -202,7 +200,7 @@ def __call__(self,
         migrated_types = {}
 
         for (k, v) in ATCT_LIST.items():
-            if k not in content_types:
+            if content_types != 'all' and k not in content_types:
                 not_migrated.append(k)
                 continue
             # test if the ct is extended beyond blobimage and blobfile


Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2017-07-03T17:09:20+03:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/d16e60415d95cfd86be601c79b2c27ca6595af14

add changenotes

Files changed:
M CHANGES.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index b7360df4..712655f5 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -22,11 +22,23 @@ Bug fixes:
 
 New features:
 
+- Index default values when indexing the file fails due to a missing binary.
+  [pbauer]
+
+- Allow to skip rebuilding the catalog when migrating at to dx in code.
+  [pbauer]
+
 - Integrate new link widget from plone.app.z3cform.
   [tomgross]
 
 Bug fixes:
 
+- Remove Language='all' from migration-query since it was removed from p.a.multilingual
+  [pbauer]
+
+- Actually migrate all migratable types when passing 'all' to at-dx migration.
+  [pbauer]
+
 - Made sure the text field of Collections is searchable.
   `Issue 406 <https://github.com/plone/plone.app.contenttypes/issues/406>`_.
   [maurits]


Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2017-07-03T17:09:20+03:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/31dbc240c3ec3982f4f0632c597a7dc9bd0c9a09

add docs

Files changed:
M docs/README.rst

diff --git a/docs/README.rst b/docs/README.rst
index d21678b6..6bcd4cd4 100644
--- a/docs/README.rst
+++ b/docs/README.rst
@@ -247,6 +247,26 @@ Migrating images created with collective.contentleadimage
 The old types that use leadimages are listed in the navigation-form with the comment *"extended fields: 'leadImage', 'leadImage_caption'"*. The migration-form informs you which new types have the behavior enabled and which do not. Depending on the way you installed plone.app.contenttypes you might have to first install these types by (re-)installing plone.app.contenttypes.
 
 
+Migrating in code (e.g. in a upgrade-step)
+``````````````````````````````````````````
+
+You can run the migration in your own code by using the view `migrate_from_atct`. Here is an example of an upgrade-step that migrates all default content-types.
+
+.. code-block:: python
+
+    def migrate_to_pac(setup):
+      portal = api.portal.get()
+      request = getRequest()
+      pac_migration = api.content.get_view('migrate_from_atct', portal, request)
+      pac_migration(
+          migrate=True,
+          content_types='all',
+          migrate_schemaextended_content=True,
+          reindex_catalog=False)
+
+With `content_types` you can also pass a list of types to be migrated. Make sure to use the key from the dictionary `plone.app.contenttypes.migration.vocabularies.ATCT_LIST` to identify the types.
+
+
 Migrating custom content
 ^^^^^^^^^^^^^^^^^^^^^^^^
 


Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2017-07-03T17:09:54+03:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/d1c8153b3bde32443f3649bd3268d9efa5c81cd8

move changes

Files changed:
M CHANGES.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index 712655f5..c37b028b 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,11 +10,19 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- Index default values when indexing the file fails due to a missing binary.
+  [pbauer]
+
+- Allow to skip rebuilding the catalog when migrating at to dx in code.
+  [pbauer]
 
 Bug fixes:
 
-- *add item here*
+- Remove Language='all' from migration-query since it was removed from p.a.multilingual
+  [pbauer]
+
+- Actually migrate all migratable types when passing 'all' to at-dx migration.
+  [pbauer]
 
 
 1.4.1 (2017-07-03)
@@ -22,23 +30,11 @@ Bug fixes:
 
 New features:
 
-- Index default values when indexing the file fails due to a missing binary.
-  [pbauer]
-
-- Allow to skip rebuilding the catalog when migrating at to dx in code.
-  [pbauer]
-
 - Integrate new link widget from plone.app.z3cform.
   [tomgross]
 
 Bug fixes:
 
-- Remove Language='all' from migration-query since it was removed from p.a.multilingual
-  [pbauer]
-
-- Actually migrate all migratable types when passing 'all' to at-dx migration.
-  [pbauer]
-
 - Made sure the text field of Collections is searchable.
   `Issue 406 <https://github.com/plone/plone.app.contenttypes/issues/406>`_.
   [maurits]


Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2017-07-04T17:53:20+03:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.app.contenttypes/commit/9bbc940913af1c06e4783e383c0f14e287e29dc5

Merge pull request #413 from plone/migration_issues

Fix some issues encountered during migrations

Files changed:
M CHANGES.rst
M docs/README.rst
M plone/app/contenttypes/indexers.py
M plone/app/contenttypes/migration/browser.py
M plone/app/contenttypes/migration/migration.py
M plone/app/contenttypes/migration/utils.py

diff --git a/CHANGES.rst b/CHANGES.rst
index b7360df4..c37b028b 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,11 +10,19 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- Index default values when indexing the file fails due to a missing binary.
+  [pbauer]
+
+- Allow to skip rebuilding the catalog when migrating at to dx in code.
+  [pbauer]
 
 Bug fixes:
 
-- *add item here*
+- Remove Language='all' from migration-query since it was removed from p.a.multilingual
+  [pbauer]
+
+- Actually migrate all migratable types when passing 'all' to at-dx migration.
+  [pbauer]
 
 
 1.4.1 (2017-07-03)
diff --git a/docs/README.rst b/docs/README.rst
index d21678b6..6bcd4cd4 100644
--- a/docs/README.rst
+++ b/docs/README.rst
@@ -247,6 +247,26 @@ Migrating images created with collective.contentleadimage
 The old types that use leadimages are listed in the navigation-form with the comment *"extended fields: 'leadImage', 'leadImage_caption'"*. The migration-form informs you which new types have the behavior enabled and which do not. Depending on the way you installed plone.app.contenttypes you might have to first install these types by (re-)installing plone.app.contenttypes.
 
 
+Migrating in code (e.g. in a upgrade-step)
+``````````````````````````````````````````
+
+You can run the migration in your own code by using the view `migrate_from_atct`. Here is an example of an upgrade-step that migrates all default content-types.
+
+.. code-block:: python
+
+    def migrate_to_pac(setup):
+      portal = api.portal.get()
+      request = getRequest()
+      pac_migration = api.content.get_view('migrate_from_atct', portal, request)
+      pac_migration(
+          migrate=True,
+          content_types='all',
+          migrate_schemaextended_content=True,
+          reindex_catalog=False)
+
+With `content_types` you can also pass a list of types to be migrated. Make sure to use the key from the dictionary `plone.app.contenttypes.migration.vocabularies.ATCT_LIST` to identify the types.
+
+
 Migrating custom content
 ^^^^^^^^^^^^^^^^^^^^^^^^
 
diff --git a/plone/app/contenttypes/indexers.py b/plone/app/contenttypes/indexers.py
index 7c4d3900..3f55f738 100644
--- a/plone/app/contenttypes/indexers.py
+++ b/plone/app/contenttypes/indexers.py
@@ -16,6 +16,7 @@
 from plone.rfc822.interfaces import IPrimaryFieldInfo
 from Products.CMFCore.utils import getToolByName
 from Products.CMFPlone.utils import safe_unicode
+from Products.PortalTransforms.libtransforms.utils import MissingBinary
 from ZODB.POSException import ConflictError
 
 
@@ -108,6 +109,8 @@ def SearchableText_file(obj):
             return SearchableText(obj)
         return _unicode_save_string_concat(SearchableText(obj),
                                            transformed_value.getData())
+    except MissingBinary:
+        return SearchableText(obj)
     except (ConflictError, KeyboardInterrupt):
         raise
     except Exception, msg:
diff --git a/plone/app/contenttypes/migration/browser.py b/plone/app/contenttypes/migration/browser.py
index c46b972f..487fd9fc 100644
--- a/plone/app/contenttypes/migration/browser.py
+++ b/plone/app/contenttypes/migration/browser.py
@@ -10,7 +10,6 @@
 from plone.app.contenttypes.migration import dxmigration
 from plone.app.contenttypes.migration import migration
 from plone.app.contenttypes.migration.patches import patched_insertForwardIndexEntry  # noqa
-from plone.app.contenttypes.migration.utils import HAS_MULTILINGUAL
 from plone.app.contenttypes.migration.utils import installTypeIfNeeded
 from plone.app.contenttypes.migration.utils import isSchemaExtended
 from plone.app.contenttypes.migration.utils import restore_references
@@ -95,8 +94,6 @@ def __call__(self):
         ]
         catalog = getToolByName(self.context, 'portal_catalog')
         query = {}
-        if HAS_MULTILINGUAL and 'Language' in catalog.indexes():
-            query['Language'] = 'all'
         for portal_type, portal_type_class in portal_types:
             query['portal_type'] = portal_type
             results = catalog(query)
@@ -126,11 +123,10 @@ def __call__(self,
                  content_types='all',
                  migrate_schemaextended_content=False,
                  migrate_references=True,
-                 from_form=False):
+                 from_form=False,
+                 reindex_catalog=True):
 
         portal = self.context
-        if content_types == 'all':
-            content_types = DEFAULT_TYPES
 
         if not from_form and migrate not in ['1', 'True', 'true', 1]:
             url1 = '{0}/@@migrate_from_atct?migrate=1'.format(
@@ -157,6 +153,16 @@ def __call__(self,
         stats_before = self.stats()
         starttime = datetime.now()
 
+        msg = 'Starting Migration\n\n'
+        msg += '\n-----------------------------\n'
+        msg += 'Content statictics:\n'
+        msg += pformat(stats_before)
+        msg += '\n-----------------------------\n'
+        msg += 'Types to be migrated:\n'
+        msg += pformat(content_types)
+        msg += '\n-----------------------------\n'
+        logger.info(msg)
+
         # store references on the portal
         if migrate_references:
             store_references(portal)
@@ -194,7 +200,7 @@ def __call__(self,
         migrated_types = {}
 
         for (k, v) in ATCT_LIST.items():
-            if k not in content_types:
+            if content_types != 'all' and k not in content_types:
                 not_migrated.append(k)
                 continue
             # test if the ct is extended beyond blobimage and blobfile
@@ -206,8 +212,6 @@ def __call__(self,
                 'object_provides': v['iface'].__identifier__,
                 'meta_type': v['old_meta_type'],
             }
-            if HAS_MULTILINGUAL and 'Language' in catalog.indexes():
-                query['Language'] = 'all'
             amount_to_be_migrated = len(catalog(query))
             starttime_for_current = datetime.now()
             logger.info(
@@ -245,7 +249,8 @@ def __call__(self,
         # make sure the view-methods on the plone site are updated
         use_new_view_names(portal, types_to_fix=['Plone Site'])
 
-        catalog.clearFindAndRebuild()
+        if reindex_catalog:
+            catalog.clearFindAndRebuild()
 
         # restore references
         if migrate_references:
@@ -302,11 +307,8 @@ def __call__(self,
 
     def stats(self):
         results = {}
-        query = {}
         catalog = self.context.portal_catalog
-        if HAS_MULTILINGUAL and 'Language' in catalog.indexes():
-            query['Language'] = 'all'
-        for brain in catalog(query):
+        for brain in catalog():
             classname = brain.getObject().__class__.__name__
             results[classname] = results.get(classname, 0) + 1
         return results
@@ -505,8 +507,6 @@ def objects_to_be_migrated(self):
         """ Return the number of AT objects in the portal """
         catalog = getToolByName(self.context, 'portal_catalog')
         query = {'meta_type': [i['old_meta_type'] for i in ATCT_LIST.values()]}
-        if HAS_MULTILINGUAL and 'Language' in catalog.indexes():
-            query['Language'] = 'all'
         brains = catalog(query)
         self._objects_to_be_migrated = len(brains)
         return self._objects_to_be_migrated
@@ -536,8 +536,6 @@ def site_has_subtopics(self):
         catalog = getToolByName(self.context, 'portal_catalog')
         query = {'meta_type': 'ATTopic'}
         results = []
-        if HAS_MULTILINGUAL and 'Language' in catalog.indexes():
-            query['Language'] = 'all'
         brains = catalog(query)
         for brain in brains:
             for item in catalog(path={'query': brain.getPath(), 'depth': 1}):
diff --git a/plone/app/contenttypes/migration/migration.py b/plone/app/contenttypes/migration/migration.py
index e2506468..ee8438b8 100644
--- a/plone/app/contenttypes/migration/migration.py
+++ b/plone/app/contenttypes/migration/migration.py
@@ -86,7 +86,8 @@ class ATCTContentMigrator(CMFItemMigrator):
     def __init__(self, *args, **kwargs):
         super(ATCTContentMigrator, self).__init__(*args, **kwargs)
         logger.info(
-            'Migrating {0}'.format(
+            'Migrating {0} {1}'.format(
+                self.old.portal_type,
                 '/'.join(self.old.getPhysicalPath())
             )
         )
@@ -150,7 +151,9 @@ class ATCTFolderMigrator(CMFFolderMigrator):
     def __init__(self, *args, **kwargs):
         super(ATCTFolderMigrator, self).__init__(*args, **kwargs)
         logger.info(
-            'Migrating {0}'.format('/'.join(self.old.getPhysicalPath()))
+            'Migrating {0} {1}'.format(
+                self.old.portal_type,
+                '/'.join(self.old.getPhysicalPath()))
         )
 
     def beforeChange_store_comments_on_portal(self):
diff --git a/plone/app/contenttypes/migration/utils.py b/plone/app/contenttypes/migration/utils.py
index c90ad50e..03648535 100644
--- a/plone/app/contenttypes/migration/utils.py
+++ b/plone/app/contenttypes/migration/utils.py
@@ -488,6 +488,10 @@ def link_items(  # noqa
                 source_obj.absolute_url(), target_obj.absolute_url()))
             return
         # handle dx-relation
+        if relationship == 'translationOf':
+            # LinguaPlone relations make no sense for Dexterity
+            return
+
         intids = getUtility(IIntIds)
         to_id = intids.getId(target_obj)
         existing_dx_relations = getattr(source_obj, fieldname, [])


