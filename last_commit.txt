Repository: Products.CMFFormController


Branch: refs/heads/master
Date: 2018-05-06T11:33:07+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/Products.CMFFormController/commit/1d3ee1e519fbf387275dc393772cdd12fe103c76

Fix dict key sorting in Python 3

Files changed:
M CHANGES.rst
M Products/CMFFormController/FormAction.py
M Products/CMFFormController/FormValidator.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 7f08463..26540d6 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -16,6 +16,9 @@ New features:
 
 Bug fixes:
 
+- Fix dict key sorting in Python 3
+  [ale-rt]
+
 - Fix import from Globals that was removed in Zope4
   [pbauer]
 
diff --git a/Products/CMFFormController/FormAction.py b/Products/CMFFormController/FormAction.py
index 0549b46..29f0afa 100644
--- a/Products/CMFFormController/FormAction.py
+++ b/Products/CMFFormController/FormAction.py
@@ -1,4 +1,5 @@
-from .globalVars import ANY_CONTEXT, ANY_BUTTON
+from .globalVars import ANY_BUTTON
+from .globalVars import ANY_CONTEXT
 from .Key import Key
 from AccessControl import ClassSecurityInfo
 from Acquisition import aq_base
@@ -6,6 +7,7 @@
 from OFS.SimpleItem import SimpleItem
 from Products.CMFCore.utils import getToolByName
 
+
 _marker = []
 
 
@@ -187,9 +189,7 @@ def match(self, object_id, status, context_type, button):
     def getFiltered(self, object_id=_marker, status=_marker, context_type=_marker,
                     button=_marker, action_type=_marker, action_arg=_marker):
         filtered = []
-        keys = self.actions.keys()
-        keys.sort()
-        for key in keys:
+        for key in sorted(self.actions):
             action = self.actions[key]
             if object_id != _marker and not action.getObjectId() == object_id:
                 continue
diff --git a/Products/CMFFormController/FormValidator.py b/Products/CMFFormController/FormValidator.py
index 91a2c31..b449f0c 100644
--- a/Products/CMFFormController/FormValidator.py
+++ b/Products/CMFFormController/FormValidator.py
@@ -1,4 +1,5 @@
-from .globalVars import ANY_CONTEXT, ANY_BUTTON
+from .globalVars import ANY_BUTTON
+from .globalVars import ANY_CONTEXT
 from .Key import Key
 from AccessControl import ClassSecurityInfo
 from Acquisition import aq_base
@@ -8,6 +9,7 @@
 
 import six
 
+
 _marker = []
 
 
@@ -143,9 +145,7 @@ def match(self, object_id, context_type, button):
     def getFiltered(self, object_id=_marker, context_type=_marker,
                     button=_marker, validators=_marker):
         filtered = []
-        keys = self.validators.keys()
-        keys.sort()
-        for key in keys:
+        for key in sorted(self.validators):
             validator = self.validators[key]
             if object_id != _marker and not validator.getObjectId() == object_id:
                 continue


Repository: Products.CMFFormController


Branch: refs/heads/master
Date: 2018-05-06T19:02:03-04:00
Author: David Glick (davisagli) <david.glick@plone.org>
Commit: https://github.com/plone/Products.CMFFormController/commit/ced97671659329898e78d09b948615e571363457

Merge pull request #15 from plone/python3

Fix dict key sorting in Python 3

Files changed:
M CHANGES.rst
M Products/CMFFormController/FormAction.py
M Products/CMFFormController/FormValidator.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 7f08463..26540d6 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -16,6 +16,9 @@ New features:
 
 Bug fixes:
 
+- Fix dict key sorting in Python 3
+  [ale-rt]
+
 - Fix import from Globals that was removed in Zope4
   [pbauer]
 
diff --git a/Products/CMFFormController/FormAction.py b/Products/CMFFormController/FormAction.py
index 0549b46..29f0afa 100644
--- a/Products/CMFFormController/FormAction.py
+++ b/Products/CMFFormController/FormAction.py
@@ -1,4 +1,5 @@
-from .globalVars import ANY_CONTEXT, ANY_BUTTON
+from .globalVars import ANY_BUTTON
+from .globalVars import ANY_CONTEXT
 from .Key import Key
 from AccessControl import ClassSecurityInfo
 from Acquisition import aq_base
@@ -6,6 +7,7 @@
 from OFS.SimpleItem import SimpleItem
 from Products.CMFCore.utils import getToolByName
 
+
 _marker = []
 
 
@@ -187,9 +189,7 @@ def match(self, object_id, status, context_type, button):
     def getFiltered(self, object_id=_marker, status=_marker, context_type=_marker,
                     button=_marker, action_type=_marker, action_arg=_marker):
         filtered = []
-        keys = self.actions.keys()
-        keys.sort()
-        for key in keys:
+        for key in sorted(self.actions):
             action = self.actions[key]
             if object_id != _marker and not action.getObjectId() == object_id:
                 continue
diff --git a/Products/CMFFormController/FormValidator.py b/Products/CMFFormController/FormValidator.py
index 91a2c31..b449f0c 100644
--- a/Products/CMFFormController/FormValidator.py
+++ b/Products/CMFFormController/FormValidator.py
@@ -1,4 +1,5 @@
-from .globalVars import ANY_CONTEXT, ANY_BUTTON
+from .globalVars import ANY_BUTTON
+from .globalVars import ANY_CONTEXT
 from .Key import Key
 from AccessControl import ClassSecurityInfo
 from Acquisition import aq_base
@@ -8,6 +9,7 @@
 
 import six
 
+
 _marker = []
 
 
@@ -143,9 +145,7 @@ def match(self, object_id, context_type, button):
     def getFiltered(self, object_id=_marker, context_type=_marker,
                     button=_marker, validators=_marker):
         filtered = []
-        keys = self.validators.keys()
-        keys.sort()
-        for key in keys:
+        for key in sorted(self.validators):
             validator = self.validators[key]
             if object_id != _marker and not validator.getObjectId() == object_id:
                 continue


