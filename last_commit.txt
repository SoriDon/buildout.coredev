Repository: plone.stringinterp


Branch: refs/heads/master
Date: 2023-04-01T13:39:31+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.stringinterp/commit/5d0970ad63b91758482c05eb8ec22dc57bb9afc7

Configuring with plone/meta

Files changed:
A .editorconfig
A .meta.toml
A .pre-commit-config.yaml
A news/93e1ab65.internal
A tox.ini
M pyproject.toml
M setup.cfg

b'diff --git a/.editorconfig b/.editorconfig\nnew file mode 100644\nindex 0000000..b4158b8\n--- /dev/null\n+++ b/.editorconfig\n@@ -0,0 +1,39 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+#\n+# EditorConfig Configuration file, for more details see:\n+# http://EditorConfig.org\n+# EditorConfig is a convention description, that could be interpreted\n+# by multiple editors to enforce common coding conventions for specific\n+# file types\n+\n+# top-most EditorConfig file:\n+# Will ignore other EditorConfig files in Home directory or upper tree level.\n+root = true\n+\n+\n+[*]  # For All Files\n+# Unix-style newlines with a newline ending every file\n+end_of_line = lf\n+insert_final_newline = true\n+trim_trailing_whitespace = true\n+# Set default charset\n+charset = utf-8\n+# Indent style default\n+indent_style = space\n+# Max Line Length - a hard line wrap, should be disabled\n+max_line_length = off\n+\n+[*.{py,cfg,ini}]\n+# 4 space indentation\n+indent_size = 4\n+\n+[*.{yml,zpt,pt,dtml,zcml}]\n+# 2 space indentation\n+indent_size = 2\n+\n+[{Makefile,.gitmodules}]\n+# Tab indentation (no size specified, but view as 4 spaces)\n+indent_style = tab\n+indent_size = unset\n+tab_width = unset\ndiff --git a/.meta.toml b/.meta.toml\nnew file mode 100644\nindex 0000000..7316575\n--- /dev/null\n+++ b/.meta.toml\n@@ -0,0 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[meta]\n+template = "default"\n+commit-id = "93e1ab65"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nnew file mode 100644\nindex 0000000..449e951\n--- /dev/null\n+++ b/.pre-commit-config.yaml\n@@ -0,0 +1,42 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+ci:\n+    autofix_prs: false\n+    autoupdate_schedule: monthly\n+\n+repos:\n+-   repo: https://github.com/asottile/pyupgrade\n+    rev: v3.3.1\n+    hooks:\n+    -   id: pyupgrade\n+        args: [--py38-plus]\n+-   repo: https://github.com/pycqa/isort\n+    rev: 5.12.0\n+    hooks:\n+    -   id: isort\n+-   repo: https://github.com/psf/black\n+    rev: 23.1.0\n+    hooks:\n+    -   id: black\n+-   repo: https://github.com/collective/zpretty\n+    rev: 3.0.3\n+    hooks:\n+    -   id: zpretty\n+-   repo: https://github.com/PyCQA/flake8\n+    rev: 6.0.0\n+    hooks:\n+    -   id: flake8\n+-   repo: https://github.com/codespell-project/codespell\n+    rev: v2.2.2\n+    hooks:\n+    -   id: codespell\n+        additional_dependencies:\n+          - tomli\n+-   repo: https://github.com/mgedmin/check-manifest\n+    rev: "0.49"\n+    hooks:\n+    -   id: check-manifest\n+-   repo: https://github.com/regebro/pyroma\n+    rev: "4.2"\n+    hooks:\n+    -   id: pyroma\ndiff --git a/news/93e1ab65.internal b/news/93e1ab65.internal\nnew file mode 100644\nindex 0000000..c08f539\n--- /dev/null\n+++ b/news/93e1ab65.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 05b615d..9eb73f3 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,3 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [tool.towncrier]\n filename = "CHANGES.rst"\n directory = "news/"\n@@ -18,3 +20,43 @@ showcontent = true\n directory = "bugfix"\n name = "Bug fixes:"\n showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "internal"\n+name = "Internal:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "documentation"\n+name = "Documentation:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "tests"\n+name = "Tests"\n+showcontent = true\n+\n+[tool.isort]\n+profile = "plone"\n+\n+[tool.black]\n+target-version = ["py38"]\n+\n+[tool.dependencychecker]\n+Zope = [\n+  # Zope own provided namespaces\n+  \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n+  \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n+  \'Zope2\', \'webdav\', \'zmi\',\n+  # Zope dependencies\n+  \'Acquisition\', \'DateTime\', \'transaction\', \'zExceptions\', \'ZODB\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.deferredimport\', \'zope.event\',\n+  \'zope.exceptions\', \'zope.globalrequest\', \'zope.i18n\', \'zope.i18nmessageid\',\n+  \'zope.interface\', \'zope.lifecycleevent\', \'zope.location\', \'zope.publisher\',\n+  \'zope.schema\', \'zope.security\', \'zope.site\', \'zope.traversing\', \'AccessControl\',\n+]\n+\'plone.base\' = [\n+  \'AccessControl\', \'Products.BTreeFolder2\', \'Products.CMFCore\',\n+  \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n+]\n+python-dateutil = [\'dateutil\']\ndiff --git a/setup.cfg b/setup.cfg\nindex 3293a61..0da8f8f 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -1,5 +1,23 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [bdist_wheel]\n universal = 0\n \n-[isort]\n-profile = plone\n\\ No newline at end of file\n+[flake8]\n+doctests = 1\n+ignore =\n+    # black takes care of line length\n+    E501,\n+    # black takes care of where to break lines\n+    W503,\n+    # black takes care of spaces within slicing (list[:])\n+    E203,\n+    # black takes care of spaces after commas\n+    E231,\n+\n+[check-manifest]\n+ignore =\n+    .editorconfig\n+    .meta.toml\n+    .pre-commit-config.yaml\n+    tox.ini\ndiff --git a/tox.ini b/tox.ini\nnew file mode 100644\nindex 0000000..725213e\n--- /dev/null\n+++ b/tox.ini\n@@ -0,0 +1,54 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[tox]\n+# We need 4.4.0 for constrain_package_deps.\n+min_version = 4.4.0\n+envlist =\n+    format\n+    lint\n+    test\n+\n+[testenv]\n+allowlist_externals =\n+    sh\n+\n+[testenv:format]\n+description = automatically reformat code\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a pyupgrade\n+    pre-commit run -a isort\n+    pre-commit run -a black\n+    pre-commit run -a zpretty\n+\n+[testenv:lint]\n+description = run linters that will help improve the code style\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a\n+\n+[testenv:dependencies]\n+description = check if the package defines all its dependencies and generate a graph out of them\n+deps =\n+    z3c.dependencychecker==2.11\n+    pipdeptree==2.5.1\n+    graphviz  # optional dependency of pipdeptree\n+commands =\n+    dependencychecker\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+\n+[testenv:test]\n+usedevelop = true\n+constrain_package_deps = true\n+set_env = ROBOT_BROWSER=headlesschrome\n+deps =\n+    zope.testrunner\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    zope-testrunner --all --test-path={toxinidir} -s plone.stringinterp {posargs}\n+extras =\n+    test\n'

Repository: plone.stringinterp


Branch: refs/heads/master
Date: 2023-04-01T13:59:30+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.stringinterp/commit/531d86bb7af60e00baa3c2b2b8532391e19f5b5a

feat: drop six usage

Files changed:
M plone/stringinterp/tests/moreSubstitutionTests.txt
M plone/stringinterp/tests/substitutionTests.txt
M plone/stringinterp/tests/wrapperTests.txt

b"diff --git a/plone/stringinterp/tests/moreSubstitutionTests.txt b/plone/stringinterp/tests/moreSubstitutionTests.txt\nindex e24bd8b..7eb2cbc 100644\n--- a/plone/stringinterp/tests/moreSubstitutionTests.txt\n+++ b/plone/stringinterp/tests/moreSubstitutionTests.txt\n@@ -168,11 +168,7 @@ Content type\n \n Let's try some non-ASCII::\n \n-   >>> import six\n-   >>> if six.PY2:\n-   ...     apage.setTitle('Plone in Espa\xc3\xb1ol'.decode('utf8'))\n-   ... else:\n-   ...     apage.setTitle('Plone in Espa\xc3\xb1ol')\n+   >>> apage.setTitle('Plone in Espa\xc3\xb1ol')\n    >>> getAdapter(apage, IStringSubstitution, 'title')()\n    'Plone in Espa\\xf1ol'\n \ndiff --git a/plone/stringinterp/tests/substitutionTests.txt b/plone/stringinterp/tests/substitutionTests.txt\nindex 9b95e58..6141fda 100644\n--- a/plone/stringinterp/tests/substitutionTests.txt\n+++ b/plone/stringinterp/tests/substitutionTests.txt\n@@ -153,11 +153,7 @@ Content type\n \n Let's try some non-ASCII::\n \n-   >>> import six\n-   >>> if six.PY2:\n-   ...     apage.setTitle('Plone in Espa\xc3\xb1ol'.decode('utf8'))\n-   ... else:\n-   ...     apage.setTitle('Plone in Espa\xc3\xb1ol')\n+   >>> apage.setTitle('Plone in Espa\xc3\xb1ol')\n    >>> getAdapter(apage, IStringSubstitution, 'title')()\n    'Plone in Espa\\xf1ol'\n \ndiff --git a/plone/stringinterp/tests/wrapperTests.txt b/plone/stringinterp/tests/wrapperTests.txt\nindex 70b5986..06c5114 100644\n--- a/plone/stringinterp/tests/wrapperTests.txt\n+++ b/plone/stringinterp/tests/wrapperTests.txt\n@@ -202,11 +202,7 @@ Content type\n \n Let's try some non-ASCII::\n \n-   >>> import six\n-   >>> if six.PY2:\n-   ...     apage.setTitle('Plone in Espa\xc3\xb1ol'.decode('utf8'))\n-   ... else:\n-   ...     apage.setTitle('Plone in Espa\xc3\xb1ol')\n+   >>> apage.setTitle('Plone in Espa\xc3\xb1ol')\n    >>> getAdapter(apage, IStringSubstitution, 'title')()\n    'Plone in Espa\\xf1ol'\n \n"

Repository: plone.stringinterp


Branch: refs/heads/master
Date: 2023-04-01T13:59:30+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.stringinterp/commit/14bf8b2a9734a22256136d7d186774ed93db6c4e

feat: pyroma

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex 1d17d3d..acea2dc 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -33,6 +33,7 @@\n     namespace_packages=["plone"],\n     include_package_data=True,\n     zip_safe=False,\n+    python_requires=">=3.8",\n     install_requires=[\n         "setuptools",\n         "plone.base",\n'

Repository: plone.stringinterp


Branch: refs/heads/master
Date: 2023-04-01T13:59:30+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.stringinterp/commit/414f70c177fcd8f1592bb2e85f9b94bc57401436

feat: flake8

Files changed:
M plone/stringinterp/__init__.py
M plone/stringinterp/interfaces.py

b'diff --git a/plone/stringinterp/__init__.py b/plone/stringinterp/__init__.py\nindex 32d03e1..7287e54 100644\n--- a/plone/stringinterp/__init__.py\n+++ b/plone/stringinterp/__init__.py\n@@ -1 +1 @@\n-from .dollarReplace import Interpolator\n+from .dollarReplace import Interpolator  # noqa: F401\ndiff --git a/plone/stringinterp/interfaces.py b/plone/stringinterp/interfaces.py\nindex dfaad3e..1733a21 100644\n--- a/plone/stringinterp/interfaces.py\n+++ b/plone/stringinterp/interfaces.py\n@@ -56,8 +56,8 @@ class IContextWrapper(Interface):\n \n     Usage:\n \n-    >>> wrapper = IContextWrapper(obj)(m1=\'A message\', m2="Another one")\n-    >>> notify(CustomEvent(wrapper))\n+    wrapper = IContextWrapper(obj)(m1=\'A message\', m2="Another one")\n+    notify(CustomEvent(wrapper))\n     """\n \n     def __call__(kwargs):\n'

Repository: plone.stringinterp


Branch: refs/heads/master
Date: 2023-04-01T14:00:22+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.stringinterp/commit/fdcf152a48a377cb6a6be1a2e4b4d7921a2a56e9

feat: declare dependencies

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex acea2dc..7248895 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -39,10 +39,11 @@\n         "plone.base",\n         "plone.memoize",\n         "zope.i18n",\n+        "Products.PlonePAS",\n     ],\n     extras_require={\n         "test": [\n-            "plone.app.contenttypes",\n+            "plone.app.contenttypes[test]",\n             "plone.app.testing",\n             "plone.testing",\n         ],\n'

Repository: plone.stringinterp


Branch: refs/heads/master
Date: 2023-04-03T09:58:59+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.stringinterp/commit/f37596d582d0b91e76c4d00000f102c989b23768

Merge pull request #16 from plone/config-with-default-template-918b343e

Config with default template

Files changed:
A .editorconfig
A .meta.toml
A .pre-commit-config.yaml
A news/93e1ab65.internal
A tox.ini
M plone/stringinterp/__init__.py
M plone/stringinterp/interfaces.py
M plone/stringinterp/tests/moreSubstitutionTests.txt
M plone/stringinterp/tests/substitutionTests.txt
M plone/stringinterp/tests/wrapperTests.txt
M pyproject.toml
M setup.cfg
M setup.py

b'diff --git a/.editorconfig b/.editorconfig\nnew file mode 100644\nindex 0000000..b4158b8\n--- /dev/null\n+++ b/.editorconfig\n@@ -0,0 +1,39 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+#\n+# EditorConfig Configuration file, for more details see:\n+# http://EditorConfig.org\n+# EditorConfig is a convention description, that could be interpreted\n+# by multiple editors to enforce common coding conventions for specific\n+# file types\n+\n+# top-most EditorConfig file:\n+# Will ignore other EditorConfig files in Home directory or upper tree level.\n+root = true\n+\n+\n+[*]  # For All Files\n+# Unix-style newlines with a newline ending every file\n+end_of_line = lf\n+insert_final_newline = true\n+trim_trailing_whitespace = true\n+# Set default charset\n+charset = utf-8\n+# Indent style default\n+indent_style = space\n+# Max Line Length - a hard line wrap, should be disabled\n+max_line_length = off\n+\n+[*.{py,cfg,ini}]\n+# 4 space indentation\n+indent_size = 4\n+\n+[*.{yml,zpt,pt,dtml,zcml}]\n+# 2 space indentation\n+indent_size = 2\n+\n+[{Makefile,.gitmodules}]\n+# Tab indentation (no size specified, but view as 4 spaces)\n+indent_style = tab\n+indent_size = unset\n+tab_width = unset\ndiff --git a/.meta.toml b/.meta.toml\nnew file mode 100644\nindex 0000000..7316575\n--- /dev/null\n+++ b/.meta.toml\n@@ -0,0 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[meta]\n+template = "default"\n+commit-id = "93e1ab65"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nnew file mode 100644\nindex 0000000..449e951\n--- /dev/null\n+++ b/.pre-commit-config.yaml\n@@ -0,0 +1,42 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+ci:\n+    autofix_prs: false\n+    autoupdate_schedule: monthly\n+\n+repos:\n+-   repo: https://github.com/asottile/pyupgrade\n+    rev: v3.3.1\n+    hooks:\n+    -   id: pyupgrade\n+        args: [--py38-plus]\n+-   repo: https://github.com/pycqa/isort\n+    rev: 5.12.0\n+    hooks:\n+    -   id: isort\n+-   repo: https://github.com/psf/black\n+    rev: 23.1.0\n+    hooks:\n+    -   id: black\n+-   repo: https://github.com/collective/zpretty\n+    rev: 3.0.3\n+    hooks:\n+    -   id: zpretty\n+-   repo: https://github.com/PyCQA/flake8\n+    rev: 6.0.0\n+    hooks:\n+    -   id: flake8\n+-   repo: https://github.com/codespell-project/codespell\n+    rev: v2.2.2\n+    hooks:\n+    -   id: codespell\n+        additional_dependencies:\n+          - tomli\n+-   repo: https://github.com/mgedmin/check-manifest\n+    rev: "0.49"\n+    hooks:\n+    -   id: check-manifest\n+-   repo: https://github.com/regebro/pyroma\n+    rev: "4.2"\n+    hooks:\n+    -   id: pyroma\ndiff --git a/news/93e1ab65.internal b/news/93e1ab65.internal\nnew file mode 100644\nindex 0000000..c08f539\n--- /dev/null\n+++ b/news/93e1ab65.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/plone/stringinterp/__init__.py b/plone/stringinterp/__init__.py\nindex 32d03e1..7287e54 100644\n--- a/plone/stringinterp/__init__.py\n+++ b/plone/stringinterp/__init__.py\n@@ -1 +1 @@\n-from .dollarReplace import Interpolator\n+from .dollarReplace import Interpolator  # noqa: F401\ndiff --git a/plone/stringinterp/interfaces.py b/plone/stringinterp/interfaces.py\nindex dfaad3e..1733a21 100644\n--- a/plone/stringinterp/interfaces.py\n+++ b/plone/stringinterp/interfaces.py\n@@ -56,8 +56,8 @@ class IContextWrapper(Interface):\n \n     Usage:\n \n-    >>> wrapper = IContextWrapper(obj)(m1=\'A message\', m2="Another one")\n-    >>> notify(CustomEvent(wrapper))\n+    wrapper = IContextWrapper(obj)(m1=\'A message\', m2="Another one")\n+    notify(CustomEvent(wrapper))\n     """\n \n     def __call__(kwargs):\ndiff --git a/plone/stringinterp/tests/moreSubstitutionTests.txt b/plone/stringinterp/tests/moreSubstitutionTests.txt\nindex e24bd8b..7eb2cbc 100644\n--- a/plone/stringinterp/tests/moreSubstitutionTests.txt\n+++ b/plone/stringinterp/tests/moreSubstitutionTests.txt\n@@ -168,11 +168,7 @@ Content type\n \n Let\'s try some non-ASCII::\n \n-   >>> import six\n-   >>> if six.PY2:\n-   ...     apage.setTitle(\'Plone in Espa\xc3\xb1ol\'.decode(\'utf8\'))\n-   ... else:\n-   ...     apage.setTitle(\'Plone in Espa\xc3\xb1ol\')\n+   >>> apage.setTitle(\'Plone in Espa\xc3\xb1ol\')\n    >>> getAdapter(apage, IStringSubstitution, \'title\')()\n    \'Plone in Espa\\xf1ol\'\n \ndiff --git a/plone/stringinterp/tests/substitutionTests.txt b/plone/stringinterp/tests/substitutionTests.txt\nindex 9b95e58..6141fda 100644\n--- a/plone/stringinterp/tests/substitutionTests.txt\n+++ b/plone/stringinterp/tests/substitutionTests.txt\n@@ -153,11 +153,7 @@ Content type\n \n Let\'s try some non-ASCII::\n \n-   >>> import six\n-   >>> if six.PY2:\n-   ...     apage.setTitle(\'Plone in Espa\xc3\xb1ol\'.decode(\'utf8\'))\n-   ... else:\n-   ...     apage.setTitle(\'Plone in Espa\xc3\xb1ol\')\n+   >>> apage.setTitle(\'Plone in Espa\xc3\xb1ol\')\n    >>> getAdapter(apage, IStringSubstitution, \'title\')()\n    \'Plone in Espa\\xf1ol\'\n \ndiff --git a/plone/stringinterp/tests/wrapperTests.txt b/plone/stringinterp/tests/wrapperTests.txt\nindex 70b5986..06c5114 100644\n--- a/plone/stringinterp/tests/wrapperTests.txt\n+++ b/plone/stringinterp/tests/wrapperTests.txt\n@@ -202,11 +202,7 @@ Content type\n \n Let\'s try some non-ASCII::\n \n-   >>> import six\n-   >>> if six.PY2:\n-   ...     apage.setTitle(\'Plone in Espa\xc3\xb1ol\'.decode(\'utf8\'))\n-   ... else:\n-   ...     apage.setTitle(\'Plone in Espa\xc3\xb1ol\')\n+   >>> apage.setTitle(\'Plone in Espa\xc3\xb1ol\')\n    >>> getAdapter(apage, IStringSubstitution, \'title\')()\n    \'Plone in Espa\\xf1ol\'\n \ndiff --git a/pyproject.toml b/pyproject.toml\nindex 05b615d..9eb73f3 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,3 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [tool.towncrier]\n filename = "CHANGES.rst"\n directory = "news/"\n@@ -18,3 +20,43 @@ showcontent = true\n directory = "bugfix"\n name = "Bug fixes:"\n showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "internal"\n+name = "Internal:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "documentation"\n+name = "Documentation:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "tests"\n+name = "Tests"\n+showcontent = true\n+\n+[tool.isort]\n+profile = "plone"\n+\n+[tool.black]\n+target-version = ["py38"]\n+\n+[tool.dependencychecker]\n+Zope = [\n+  # Zope own provided namespaces\n+  \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n+  \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n+  \'Zope2\', \'webdav\', \'zmi\',\n+  # Zope dependencies\n+  \'Acquisition\', \'DateTime\', \'transaction\', \'zExceptions\', \'ZODB\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.deferredimport\', \'zope.event\',\n+  \'zope.exceptions\', \'zope.globalrequest\', \'zope.i18n\', \'zope.i18nmessageid\',\n+  \'zope.interface\', \'zope.lifecycleevent\', \'zope.location\', \'zope.publisher\',\n+  \'zope.schema\', \'zope.security\', \'zope.site\', \'zope.traversing\', \'AccessControl\',\n+]\n+\'plone.base\' = [\n+  \'AccessControl\', \'Products.BTreeFolder2\', \'Products.CMFCore\',\n+  \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n+]\n+python-dateutil = [\'dateutil\']\ndiff --git a/setup.cfg b/setup.cfg\nindex 3293a61..0da8f8f 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -1,5 +1,23 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [bdist_wheel]\n universal = 0\n \n-[isort]\n-profile = plone\n\\ No newline at end of file\n+[flake8]\n+doctests = 1\n+ignore =\n+    # black takes care of line length\n+    E501,\n+    # black takes care of where to break lines\n+    W503,\n+    # black takes care of spaces within slicing (list[:])\n+    E203,\n+    # black takes care of spaces after commas\n+    E231,\n+\n+[check-manifest]\n+ignore =\n+    .editorconfig\n+    .meta.toml\n+    .pre-commit-config.yaml\n+    tox.ini\ndiff --git a/setup.py b/setup.py\nindex 1d17d3d..7248895 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -33,15 +33,17 @@\n     namespace_packages=["plone"],\n     include_package_data=True,\n     zip_safe=False,\n+    python_requires=">=3.8",\n     install_requires=[\n         "setuptools",\n         "plone.base",\n         "plone.memoize",\n         "zope.i18n",\n+        "Products.PlonePAS",\n     ],\n     extras_require={\n         "test": [\n-            "plone.app.contenttypes",\n+            "plone.app.contenttypes[test]",\n             "plone.app.testing",\n             "plone.testing",\n         ],\ndiff --git a/tox.ini b/tox.ini\nnew file mode 100644\nindex 0000000..725213e\n--- /dev/null\n+++ b/tox.ini\n@@ -0,0 +1,54 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[tox]\n+# We need 4.4.0 for constrain_package_deps.\n+min_version = 4.4.0\n+envlist =\n+    format\n+    lint\n+    test\n+\n+[testenv]\n+allowlist_externals =\n+    sh\n+\n+[testenv:format]\n+description = automatically reformat code\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a pyupgrade\n+    pre-commit run -a isort\n+    pre-commit run -a black\n+    pre-commit run -a zpretty\n+\n+[testenv:lint]\n+description = run linters that will help improve the code style\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a\n+\n+[testenv:dependencies]\n+description = check if the package defines all its dependencies and generate a graph out of them\n+deps =\n+    z3c.dependencychecker==2.11\n+    pipdeptree==2.5.1\n+    graphviz  # optional dependency of pipdeptree\n+commands =\n+    dependencychecker\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+\n+[testenv:test]\n+usedevelop = true\n+constrain_package_deps = true\n+set_env = ROBOT_BROWSER=headlesschrome\n+deps =\n+    zope.testrunner\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    zope-testrunner --all --test-path={toxinidir} -s plone.stringinterp {posargs}\n+extras =\n+    test\n'

