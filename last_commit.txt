Repository: plone.app.portlets


Branch: refs/heads/master
Date: 2019-03-21T11:37:01+01:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/plone.app.portlets/commit/910a8dca1dd2951bf6e8abee8bfc2c62661e3baf

Fix AttributeError in @@render-portlet

and add a test for that

Files changed:
A news/124.bugfix
M plone/app/portlets/browser/utils.py
M plone/app/portlets/tests/test_utils.py

b"diff --git a/news/124.bugfix b/news/124.bugfix\nnew file mode 100644\nindex 0000000..2a2d394\n--- /dev/null\n+++ b/news/124.bugfix\n@@ -0,0 +1 @@\n+Fix loading portlets with `@@render-portlet` [petschki]\ndiff --git a/plone/app/portlets/browser/utils.py b/plone/app/portlets/browser/utils.py\nindex 8d518a5..073f113 100644\n--- a/plone/app/portlets/browser/utils.py\n+++ b/plone/app/portlets/browser/utils.py\n@@ -27,7 +27,6 @@ def render_portlet(self, portlethash, **kw):\n                  manager, assignment.data),\n                 IPortletRenderer\n             )\n-        renderer = renderer.__of__(self.context)\n \n         renderer.update()\n         if IDeferredPortletRenderer.providedBy(renderer):\ndiff --git a/plone/app/portlets/tests/test_utils.py b/plone/app/portlets/tests/test_utils.py\nindex f1dc026..64042f7 100644\n--- a/plone/app/portlets/tests/test_utils.py\n+++ b/plone/app/portlets/tests/test_utils.py\n@@ -1,15 +1,23 @@\n # -*- coding: utf-8 -*-\n+from Products.CMFPlone.utils import safe_unicode\n+\n from plone.app.testing import TEST_USER_ID\n \n-from zope.component import getUtility, getMultiAdapter\n+from zope.component import getMultiAdapter\n+from zope.component import getUtility\n \n-from plone.portlets.interfaces import IPortletManager\n from plone.portlets.interfaces import IPortletAssignmentMapping\n+from plone.portlets.interfaces import IPortletManager\n+from plone.portlets.interfaces import IPortletRenderer\n \n-from plone.portlets.constants import USER_CATEGORY, CONTEXT_CATEGORY\n+from plone.portlets.constants import CONTEXT_CATEGORY\n+from plone.portlets.constants import USER_CATEGORY\n+from plone.portlets.utils import hashPortletInfo\n \n-from plone.app.portlets.storage import PortletAssignmentMapping\n+from plone.app.portlets.browser.utils import PortletUtilities\n from plone.app.portlets.portlets import classic\n+from plone.app.portlets.portlets import news\n+from plone.app.portlets.storage import PortletAssignmentMapping\n from plone.app.portlets.tests.base import PortletsTestCase\n from plone.app.portlets.utils import assignment_from_key\n \n@@ -49,8 +57,34 @@ def testGetPortletFromUserCategory(self):\n         self.assertEqual(c, a)\n \n \n+class TestRendering(PortletsTestCase):\n+\n+    def afterSetUp(self):\n+        self.portal.invokeFactory('News Item', 'testnews', title=u'Test News')\n+\n+    def testTraversalRendererWithHash(self):\n+        context = self.folder\n+        request = self.folder.REQUEST\n+        manager = getUtility(\n+            IPortletManager, name='plone.leftcolumn', context=self.folder)\n+        assignment = news.Assignment(state=('private', ))\n+        mapping = getMultiAdapter(\n+            (context, manager), IPortletAssignmentMapping)\n+        mapping['newsportlet'] = assignment\n+        portlet_hash = hashPortletInfo(\n+            dict(manager=manager.__name__, category=CONTEXT_CATEGORY,\n+                 key='/'.join(context.getPhysicalPath()),\n+                 name='newsportlet'))\n+        render_portlet_view = PortletUtilities(context, request)\n+        rendered_portlet = render_portlet_view.render_portlet(\n+            safe_unicode(portlet_hash))\n+        self.assertIn(u'portletNews', rendered_portlet)\n+        self.assertIn(u'Test News', rendered_portlet)\n+\n+\n def test_suite():\n     from unittest import TestSuite, makeSuite\n     suite = TestSuite()\n     suite.addTest(makeSuite(TestAssignmentFromKey))\n+    suite.addTest(makeSuite(TestRendering))\n     return suite\n"

Repository: plone.app.portlets


Branch: refs/heads/master
Date: 2019-03-21T12:56:32+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.portlets/commit/b2f9020da6ee2f8ceaad994dd10c332ee3d85ce5

Merge pull request #125 from plone/issue_124

Fix AttributeError in @@render-portlet

Files changed:
A news/124.bugfix
M plone/app/portlets/browser/utils.py
M plone/app/portlets/tests/test_utils.py

b"diff --git a/news/124.bugfix b/news/124.bugfix\nnew file mode 100644\nindex 0000000..2a2d394\n--- /dev/null\n+++ b/news/124.bugfix\n@@ -0,0 +1 @@\n+Fix loading portlets with `@@render-portlet` [petschki]\ndiff --git a/plone/app/portlets/browser/utils.py b/plone/app/portlets/browser/utils.py\nindex 8d518a5..073f113 100644\n--- a/plone/app/portlets/browser/utils.py\n+++ b/plone/app/portlets/browser/utils.py\n@@ -27,7 +27,6 @@ def render_portlet(self, portlethash, **kw):\n                  manager, assignment.data),\n                 IPortletRenderer\n             )\n-        renderer = renderer.__of__(self.context)\n \n         renderer.update()\n         if IDeferredPortletRenderer.providedBy(renderer):\ndiff --git a/plone/app/portlets/tests/test_utils.py b/plone/app/portlets/tests/test_utils.py\nindex f1dc026..64042f7 100644\n--- a/plone/app/portlets/tests/test_utils.py\n+++ b/plone/app/portlets/tests/test_utils.py\n@@ -1,15 +1,23 @@\n # -*- coding: utf-8 -*-\n+from Products.CMFPlone.utils import safe_unicode\n+\n from plone.app.testing import TEST_USER_ID\n \n-from zope.component import getUtility, getMultiAdapter\n+from zope.component import getMultiAdapter\n+from zope.component import getUtility\n \n-from plone.portlets.interfaces import IPortletManager\n from plone.portlets.interfaces import IPortletAssignmentMapping\n+from plone.portlets.interfaces import IPortletManager\n+from plone.portlets.interfaces import IPortletRenderer\n \n-from plone.portlets.constants import USER_CATEGORY, CONTEXT_CATEGORY\n+from plone.portlets.constants import CONTEXT_CATEGORY\n+from plone.portlets.constants import USER_CATEGORY\n+from plone.portlets.utils import hashPortletInfo\n \n-from plone.app.portlets.storage import PortletAssignmentMapping\n+from plone.app.portlets.browser.utils import PortletUtilities\n from plone.app.portlets.portlets import classic\n+from plone.app.portlets.portlets import news\n+from plone.app.portlets.storage import PortletAssignmentMapping\n from plone.app.portlets.tests.base import PortletsTestCase\n from plone.app.portlets.utils import assignment_from_key\n \n@@ -49,8 +57,34 @@ def testGetPortletFromUserCategory(self):\n         self.assertEqual(c, a)\n \n \n+class TestRendering(PortletsTestCase):\n+\n+    def afterSetUp(self):\n+        self.portal.invokeFactory('News Item', 'testnews', title=u'Test News')\n+\n+    def testTraversalRendererWithHash(self):\n+        context = self.folder\n+        request = self.folder.REQUEST\n+        manager = getUtility(\n+            IPortletManager, name='plone.leftcolumn', context=self.folder)\n+        assignment = news.Assignment(state=('private', ))\n+        mapping = getMultiAdapter(\n+            (context, manager), IPortletAssignmentMapping)\n+        mapping['newsportlet'] = assignment\n+        portlet_hash = hashPortletInfo(\n+            dict(manager=manager.__name__, category=CONTEXT_CATEGORY,\n+                 key='/'.join(context.getPhysicalPath()),\n+                 name='newsportlet'))\n+        render_portlet_view = PortletUtilities(context, request)\n+        rendered_portlet = render_portlet_view.render_portlet(\n+            safe_unicode(portlet_hash))\n+        self.assertIn(u'portletNews', rendered_portlet)\n+        self.assertIn(u'Test News', rendered_portlet)\n+\n+\n def test_suite():\n     from unittest import TestSuite, makeSuite\n     suite = TestSuite()\n     suite.addTest(makeSuite(TestAssignmentFromKey))\n+    suite.addTest(makeSuite(TestRendering))\n     return suite\n"

