Repository: plone.app.caching


Branch: refs/heads/master
Date: 2022-12-21T11:57:50+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.caching/commit/e6941fdfe6c8a3c98af98f4986e6932739adfca6

Fix tests to work with the Zope security fix.

Instead of an empty byte we get an empty text now.  I don't know what in the security fix causes this, but seems okay.

Files changed:
A news/106.bugfix
M plone/app/caching/tests/test_profile_with_caching_proxy.py
M plone/app/caching/tests/test_profile_without_caching_proxy.py

b'diff --git a/news/106.bugfix b/news/106.bugfix\nnew file mode 100644\nindex 0000000..9c52366\n--- /dev/null\n+++ b/news/106.bugfix\n@@ -0,0 +1,2 @@\n+Fix tests to work with the Zope security fix.\n+[maurits]\ndiff --git a/plone/app/caching/tests/test_profile_with_caching_proxy.py b/plone/app/caching/tests/test_profile_with_caching_proxy.py\nindex 1e2d1f7..c58947f 100644\n--- a/plone/app/caching/tests/test_profile_with_caching_proxy.py\n+++ b/plone/app/caching/tests/test_profile_with_caching_proxy.py\n@@ -199,7 +199,7 @@ def test_composite_viewsxx(self):\n         browser.open(self.portal["f1"]["d1"].absolute_url())\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual(b"", browser.contents)\n+        self.assertEqual("", browser.contents)\n \n         # Request the anonymous folder\n         now = stable_now()\n@@ -274,7 +274,7 @@ def test_composite_viewsxx(self):\n         )\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual(b"", browser.contents)\n+        self.assertEqual("", browser.contents)\n \n         # Edit the page to update the etag\n         testText2 = "Testing... body two"\n@@ -369,7 +369,7 @@ def test_content_feeds(self):\n         )\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual(b"", browser.contents)\n+        self.assertEqual("", browser.contents)\n \n         # Request the authenticated rss feed\n         now = stable_now()\n@@ -504,7 +504,7 @@ def test_content_files(self):\n         )\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual(b"", browser.contents)\n+        self.assertEqual("", browser.contents)\n \n         # Request an image scale\n         now = stable_now()\n@@ -560,7 +560,7 @@ def test_resources(self):\n         )\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual(b"", browser.contents)\n+        self.assertEqual("", browser.contents)\n \n         # Request a large datafile (over 64K) to test files that use\n         # the "response.write()" function to initiate a streamed response.\ndiff --git a/plone/app/caching/tests/test_profile_without_caching_proxy.py b/plone/app/caching/tests/test_profile_without_caching_proxy.py\nindex 342aacb..1960738 100644\n--- a/plone/app/caching/tests/test_profile_without_caching_proxy.py\n+++ b/plone/app/caching/tests/test_profile_without_caching_proxy.py\n@@ -177,7 +177,7 @@ def test_composite_views(self):\n         browser.open(self.portal["f1"]["d1"].absolute_url())\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual(b"", browser.contents)\n+        self.assertEqual("", browser.contents)\n \n         # Request the anonymous folder\n         now = stable_now()\n@@ -245,7 +245,7 @@ def test_composite_views(self):\n         )\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual(b"", browser.contents)\n+        self.assertEqual("", browser.contents)\n \n         # Edit the page to update the etag\n         testText2 = "Testing... body two"\n@@ -334,7 +334,7 @@ def test_content_feeds(self):\n         )\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual(b"", browser.contents)\n+        self.assertEqual("", browser.contents)\n \n         # Request the authenticated rss feed\n         now = stable_now()\n@@ -421,7 +421,7 @@ def test_content_files(self):\n         )\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual(b"", browser.contents)\n+        self.assertEqual("", browser.contents)\n \n         # Request an image scale\n         now = stable_now()\n@@ -471,7 +471,7 @@ def test_resources(self):\n         )\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual(b"", browser.contents)\n+        self.assertEqual("", browser.contents)\n \n         # Request a large datafile (over 64K) to test files that use\n         # the "response.write()" function to initiate a streamed response.\n'

Repository: plone.app.caching


Branch: refs/heads/master
Date: 2022-12-21T13:53:48+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.caching/commit/bd21f423cddb298740e4401ca1799a6b2e75c0c5

Merge pull request #107 from plone/maurits-fix-tests-after-zope-security-fix-master

Fix tests to work with the Zope security fix. [master]

Files changed:
A news/106.bugfix
M plone/app/caching/tests/test_profile_with_caching_proxy.py
M plone/app/caching/tests/test_profile_without_caching_proxy.py

b'diff --git a/news/106.bugfix b/news/106.bugfix\nnew file mode 100644\nindex 0000000..9c52366\n--- /dev/null\n+++ b/news/106.bugfix\n@@ -0,0 +1,2 @@\n+Fix tests to work with the Zope security fix.\n+[maurits]\ndiff --git a/plone/app/caching/tests/test_profile_with_caching_proxy.py b/plone/app/caching/tests/test_profile_with_caching_proxy.py\nindex 1e2d1f7..c58947f 100644\n--- a/plone/app/caching/tests/test_profile_with_caching_proxy.py\n+++ b/plone/app/caching/tests/test_profile_with_caching_proxy.py\n@@ -199,7 +199,7 @@ def test_composite_viewsxx(self):\n         browser.open(self.portal["f1"]["d1"].absolute_url())\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual(b"", browser.contents)\n+        self.assertEqual("", browser.contents)\n \n         # Request the anonymous folder\n         now = stable_now()\n@@ -274,7 +274,7 @@ def test_composite_viewsxx(self):\n         )\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual(b"", browser.contents)\n+        self.assertEqual("", browser.contents)\n \n         # Edit the page to update the etag\n         testText2 = "Testing... body two"\n@@ -369,7 +369,7 @@ def test_content_feeds(self):\n         )\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual(b"", browser.contents)\n+        self.assertEqual("", browser.contents)\n \n         # Request the authenticated rss feed\n         now = stable_now()\n@@ -504,7 +504,7 @@ def test_content_files(self):\n         )\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual(b"", browser.contents)\n+        self.assertEqual("", browser.contents)\n \n         # Request an image scale\n         now = stable_now()\n@@ -560,7 +560,7 @@ def test_resources(self):\n         )\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual(b"", browser.contents)\n+        self.assertEqual("", browser.contents)\n \n         # Request a large datafile (over 64K) to test files that use\n         # the "response.write()" function to initiate a streamed response.\ndiff --git a/plone/app/caching/tests/test_profile_without_caching_proxy.py b/plone/app/caching/tests/test_profile_without_caching_proxy.py\nindex 342aacb..1960738 100644\n--- a/plone/app/caching/tests/test_profile_without_caching_proxy.py\n+++ b/plone/app/caching/tests/test_profile_without_caching_proxy.py\n@@ -177,7 +177,7 @@ def test_composite_views(self):\n         browser.open(self.portal["f1"]["d1"].absolute_url())\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual(b"", browser.contents)\n+        self.assertEqual("", browser.contents)\n \n         # Request the anonymous folder\n         now = stable_now()\n@@ -245,7 +245,7 @@ def test_composite_views(self):\n         )\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual(b"", browser.contents)\n+        self.assertEqual("", browser.contents)\n \n         # Edit the page to update the etag\n         testText2 = "Testing... body two"\n@@ -334,7 +334,7 @@ def test_content_feeds(self):\n         )\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual(b"", browser.contents)\n+        self.assertEqual("", browser.contents)\n \n         # Request the authenticated rss feed\n         now = stable_now()\n@@ -421,7 +421,7 @@ def test_content_files(self):\n         )\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual(b"", browser.contents)\n+        self.assertEqual("", browser.contents)\n \n         # Request an image scale\n         now = stable_now()\n@@ -471,7 +471,7 @@ def test_resources(self):\n         )\n         # This should be a 304 response\n         self.assertEqual("304 Not Modified", browser.headers["Status"])\n-        self.assertEqual(b"", browser.contents)\n+        self.assertEqual("", browser.contents)\n \n         # Request a large datafile (over 64K) to test files that use\n         # the "response.write()" function to initiate a streamed response.\n'

