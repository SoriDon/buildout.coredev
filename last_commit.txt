Repository: plone.rest


Branch: refs/heads/master
Date: 2023-01-28T16:44:15+01:00
Author: Mauro Amico (mamico) <mauro.amico@gmail.com>
Commit: https://github.com/plone/plone.rest/commit/8960b8fd28cbe38aecabc68eeba91ff25ba8dba9

Should redirection response be temporarily instead of permanent (#135)

* temporarily_redirect

* fix tests + changelog

* changelog

* Update news/135.bugfix

---------

Co-authored-by: David Glick &lt;david@glicksoftware.com&gt;

Files changed:
A news/135.bugfix
M .gitignore
M README.rst
M plone-4.3.x.cfg
M plone-5.1.x.cfg
M src/plone/rest/errors.py
M src/plone/rest/tests/test_dispatching.py
M src/plone/rest/tests/test_redirects.py

b'diff --git a/.gitignore b/.gitignore\nindex 30ab005..ece0007 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -17,6 +17,7 @@\n /.Python\n /include\n /lib\n+/lib64\n /.mr.developer.cfg\n *.mo\n local/\ndiff --git a/README.rst b/README.rst\nindex ada524a..7d43242 100644\n--- a/README.rst\n+++ b/README.rst\n@@ -33,7 +33,7 @@ It is a software architectural principle to create loosely coupled web APIs.\n \n plone.rest provides the basic infrastructure that allows us to build RESTful endpoints in Plone.\n \n-The reason for separating this infrastructure into a separate package from the \'main\' full `Plone REST API <https://github.com/plone/plone.restapi>`_ is so you can create alternative endpoints tailored to specific usecases. \n+The reason for separating this infrastructure into a separate package from the \'main\' full `Plone REST API <https://github.com/plone/plone.restapi>`_ is so you can create alternative endpoints tailored to specific usecases.\n A number of these specific endpoints are already in active use.\n \n \n@@ -120,10 +120,10 @@ The server then will respond with \'200 OK\'::\n     "message": "PATCH: Hello World!"\n   }\n \n-Why two methods? \n+Why two methods?\n Using the \'Accept\' header is the intended way of RESTful APIs to get different responses from the same URL.\n However, if it comes to caching the response in an web accelerator like Varnish or Cloudflare, additional challenges are added.\n-Setting the `Vary` header to \'Vary: Accept\' helps to a certain degree in Varnish. \n+Setting the `Vary` header to \'Vary: Accept\' helps to a certain degree in Varnish.\n But cache pollution may happen, because different browsers send different headers on normal HTML requests.\n Hosted services like Cloudflare just do not support the \'Vary\' usage and can not be used for sites with REST calls.\n Thus a second option with different URLs is needed.\n@@ -319,16 +319,16 @@ plone.rest will handle redirects created by ``plone.app.redirector`` pretty\n much the same way as regular Plone.\n \n If a redirect exists for a given URL, a ``GET`` request will be answered with\n-``301``, and the new location for the resource is indicated in the ``Location``\n+``302``, and the new location for the resource is indicated in the ``Location``\n header::\n \n-  HTTP/1.1 301 Moved Permanently\n+  HTTP/1.1 302 Moved Temporarily\n \n   Content-Type: application/json\n   Location: http://localhost:8080/Plone/my-folder-new-location\n \n Any other request method than GET (``POST``, ``PATCH``, ...) will be answered\n-with ``308 Permanent Redirect``. This status code instructs the client that\n+with ``307 Temporary Redirect``. This status code instructs the client that\n it should NOT switch the method, but retry (if desired) the request with the\n *same* method at the new location.\n \ndiff --git a/news/135.bugfix b/news/135.bugfix\nnew file mode 100644\nindex 0000000..f2bec6b\n--- /dev/null\n+++ b/news/135.bugfix\n@@ -0,0 +1,2 @@\n+When redirecting from an old alias, the HTTP status of the response is changed from 301 (Moved Permanently) to 302 (Found) for GET requests and to 307 (Temporary Redirect) for other request methods because nothing prevents the URL from being reused in the future.\n+[mamico]\ndiff --git a/plone-4.3.x.cfg b/plone-4.3.x.cfg\nindex 858527f..72674c4 100644\n--- a/plone-4.3.x.cfg\n+++ b/plone-4.3.x.cfg\n@@ -26,6 +26,9 @@ distlib = 0.3.1\n [versions:python27]\n PyJWT = 1.7.1\n pyroma = 2.6.1\n+pep517 = <=0.12.0 \n+readme-renderer = <=28.0 \n+bleach = <4\n \n # more-itertools >= 6.0.0 dropped python2.7 support\n more-itertools = 5.0.0\ndiff --git a/plone-5.1.x.cfg b/plone-5.1.x.cfg\nindex 33ccdcc..9729141 100644\n--- a/plone-5.1.x.cfg\n+++ b/plone-5.1.x.cfg\n@@ -37,6 +37,9 @@ astunparse = 1.6.2\n [versions:python27]\n PyJWT = 1.7.1\n pyroma = 2.6.1\n+pep517 = <=0.12.0 \n+readme-renderer = <=28.0 \n+bleach = <4\n \n # more-itertools >= 6.0.0 dropped python2.7 support\n more-itertools = 5.0.0\n@@ -45,4 +48,4 @@ more-itertools = 5.0.0\n pyrsistent = 0.15.7\n \n # Click 8 dropped Python 2 support\n-Click = 7.1.2\n\\ No newline at end of file\n+Click = 7.1.2\ndiff --git a/src/plone/rest/errors.py b/src/plone/rest/errors.py\nindex e690fb0..454d48e 100644\n--- a/src/plone/rest/errors.py\n+++ b/src/plone/rest/errors.py\n@@ -162,7 +162,7 @@ def attempt_redirect(self):\n \n         This method is based on FourOhFourView.attempt_redirect() from\n         p.a.redirector. It\'s copied here because we want to answer redirects\n-        to non-GET methods with status 308, but since this method locks the\n+        to non-GET methods with status 307, but since this method locks the\n         response status, we wouldn\'t be able to change it afterwards.\n         """\n         url = self._url()\n@@ -228,14 +228,14 @@ def attempt_redirect(self):\n         if query_string:\n             url += "?" + query_string\n \n-        # Answer GET requests with 301. Every other method will be answered\n-        # with 308 Permanent Redirect, which instructs the client to NOT\n+        # Answer GET requests with 302. Every other method will be answered\n+        # with 307 Temporary Redirect, which instructs the client to NOT\n         # switch the method (if the original request was a POST, it should\n         # re-POST to the new URL from the Location header).\n         if self.request.method.upper() == "GET":\n-            status = 301\n+            status = 302\n         else:\n-            status = 308\n+            status = 307\n \n         self.request.response.redirect(url, status=status, lock=1)\n         return True\ndiff --git a/src/plone/rest/tests/test_dispatching.py b/src/plone/rest/tests/test_dispatching.py\nindex 674e2f6..fb9b7b8 100644\n--- a/src/plone/rest/tests/test_dispatching.py\n+++ b/src/plone/rest/tests/test_dispatching.py\n@@ -231,12 +231,12 @@ def setUp(self):\n \n     def test_moved_private_dx_folder_with_creds(self):\n         expectations = [\n-            ("/private-old", "GET", CREDS, 301),\n-            ("/private-old", "POST", CREDS, 308),\n-            ("/private-old", "PUT", CREDS, 308),\n-            ("/private-old", "PATCH", CREDS, 308),\n-            ("/private-old", "DELETE", CREDS, 308),\n-            ("/private-old", "OPTIONS", CREDS, 308),\n+            ("/private-old", "GET", CREDS, 302),\n+            ("/private-old", "POST", CREDS, 307),\n+            ("/private-old", "PUT", CREDS, 307),\n+            ("/private-old", "PATCH", CREDS, 307),\n+            ("/private-old", "DELETE", CREDS, 307),\n+            ("/private-old", "OPTIONS", CREDS, 307),\n         ]\n         self.validate(expectations)\n \n@@ -253,12 +253,12 @@ def test_moved_private_dx_folder_with_creds(self):\n \n     def test_moved_private_dx_folder_without_creds(self):\n         expectations = [\n-            ("/private-old", "GET", NO_CREDS, 301),\n-            ("/private-old", "POST", NO_CREDS, 308),\n-            ("/private-old", "PUT", NO_CREDS, 308),\n-            ("/private-old", "PATCH", NO_CREDS, 308),\n-            ("/private-old", "DELETE", NO_CREDS, 308),\n-            ("/private-old", "OPTIONS", NO_CREDS, 308),\n+            ("/private-old", "GET", NO_CREDS, 302),\n+            ("/private-old", "POST", NO_CREDS, 307),\n+            ("/private-old", "PUT", NO_CREDS, 307),\n+            ("/private-old", "PATCH", NO_CREDS, 307),\n+            ("/private-old", "DELETE", NO_CREDS, 307),\n+            ("/private-old", "OPTIONS", NO_CREDS, 307),\n         ]\n         self.validate(expectations)\n \n@@ -275,12 +275,12 @@ def test_moved_private_dx_folder_without_creds(self):\n \n     def test_moved_private_dx_folder_invalid_creds(self):\n         expectations = [\n-            ("/private-old", "GET", INVALID_CREDS, 301),\n-            ("/private-old", "POST", INVALID_CREDS, 308),\n-            ("/private-old", "PUT", INVALID_CREDS, 308),\n-            ("/private-old", "PATCH", INVALID_CREDS, 308),\n-            ("/private-old", "DELETE", INVALID_CREDS, 308),\n-            ("/private-old", "OPTIONS", INVALID_CREDS, 308),\n+            ("/private-old", "GET", INVALID_CREDS, 302),\n+            ("/private-old", "POST", INVALID_CREDS, 307),\n+            ("/private-old", "PUT", INVALID_CREDS, 307),\n+            ("/private-old", "PATCH", INVALID_CREDS, 307),\n+            ("/private-old", "DELETE", INVALID_CREDS, 307),\n+            ("/private-old", "OPTIONS", INVALID_CREDS, 307),\n         ]\n         self.validate(expectations)\n \n@@ -297,12 +297,12 @@ def test_moved_private_dx_folder_invalid_creds(self):\n \n     def test_moved_public_dx_folder_with_creds(self):\n         expectations = [\n-            ("/public-old", "GET", CREDS, 301),\n-            ("/public-old", "POST", CREDS, 308),\n-            ("/public-old", "PUT", CREDS, 308),\n-            ("/public-old", "PATCH", CREDS, 308),\n-            ("/public-old", "DELETE", CREDS, 308),\n-            ("/public-old", "OPTIONS", CREDS, 308),\n+            ("/public-old", "GET", CREDS, 302),\n+            ("/public-old", "POST", CREDS, 307),\n+            ("/public-old", "PUT", CREDS, 307),\n+            ("/public-old", "PATCH", CREDS, 307),\n+            ("/public-old", "DELETE", CREDS, 307),\n+            ("/public-old", "OPTIONS", CREDS, 307),\n         ]\n         self.validate(expectations)\n \n@@ -319,12 +319,12 @@ def test_moved_public_dx_folder_with_creds(self):\n \n     def test_moved_public_dx_folder_without_creds(self):\n         expectations = [\n-            ("/public-old", "GET", NO_CREDS, 301),\n-            ("/public-old", "POST", NO_CREDS, 308),\n-            ("/public-old", "PUT", NO_CREDS, 308),\n-            ("/public-old", "PATCH", NO_CREDS, 308),\n-            ("/public-old", "DELETE", NO_CREDS, 308),\n-            ("/public-old", "OPTIONS", NO_CREDS, 308),\n+            ("/public-old", "GET", NO_CREDS, 302),\n+            ("/public-old", "POST", NO_CREDS, 307),\n+            ("/public-old", "PUT", NO_CREDS, 307),\n+            ("/public-old", "PATCH", NO_CREDS, 307),\n+            ("/public-old", "DELETE", NO_CREDS, 307),\n+            ("/public-old", "OPTIONS", NO_CREDS, 307),\n         ]\n         self.validate(expectations)\n \n@@ -341,12 +341,12 @@ def test_moved_public_dx_folder_without_creds(self):\n \n     def test_moved_public_dx_folder_invalid_creds(self):\n         expectations = [\n-            ("/public-old", "GET", INVALID_CREDS, 301),\n-            ("/public-old", "POST", INVALID_CREDS, 308),\n-            ("/public-old", "PUT", INVALID_CREDS, 308),\n-            ("/public-old", "PATCH", INVALID_CREDS, 308),\n-            ("/public-old", "DELETE", INVALID_CREDS, 308),\n-            ("/public-old", "OPTIONS", INVALID_CREDS, 308),\n+            ("/public-old", "GET", INVALID_CREDS, 302),\n+            ("/public-old", "POST", INVALID_CREDS, 307),\n+            ("/public-old", "PUT", INVALID_CREDS, 307),\n+            ("/public-old", "PATCH", INVALID_CREDS, 307),\n+            ("/public-old", "DELETE", INVALID_CREDS, 307),\n+            ("/public-old", "OPTIONS", INVALID_CREDS, 307),\n         ]\n         self.validate(expectations)\n \ndiff --git a/src/plone/rest/tests/test_redirects.py b/src/plone/rest/tests/test_redirects.py\nindex 16c7207..30122da 100644\n--- a/src/plone/rest/tests/test_redirects.py\n+++ b/src/plone/rest/tests/test_redirects.py\n@@ -28,24 +28,24 @@ def setUp(self):\n         self.portal.manage_renameObject("folder-old", "folder-new")\n         transaction.commit()\n \n-    def test_get_to_moved_item_causes_301_redirect(self):\n+    def test_get_to_moved_item_causes_302_redirect(self):\n         response = requests.get(\n             self.portal_url + "/folder-old",\n             headers={"Accept": "application/json"},\n             auth=(SITE_OWNER_NAME, SITE_OWNER_PASSWORD),\n             allow_redirects=False,\n         )\n-        self.assertEqual(301, response.status_code)\n+        self.assertEqual(302, response.status_code)\n         self.assertEqual(self.portal_url + "/folder-new", response.headers["Location"])\n         self.assertEqual(b"", response.raw.read())\n \n-    def test_get_to_moved_item_causes_301_redirect_with_api_traverser(self):\n+    def test_get_to_moved_item_causes_302_redirect_with_api_traverser(self):\n         response = requests.get(\n             self.portal_url + "/++api++/folder-old",\n             auth=(SITE_OWNER_NAME, SITE_OWNER_PASSWORD),\n             allow_redirects=False,\n         )\n-        self.assertEqual(301, response.status_code)\n+        self.assertEqual(302, response.status_code)\n         self.assertEqual(\n             self.portal_url + "/++api++/folder-new", response.headers["Location"]\n         )\n@@ -59,37 +59,37 @@ def test_get_to_moved_item_causes_301_redirect_with_api_traverser(self):\n         self.assertEqual("application/json", response.headers["Content-type"])\n         self.assertEqual({"id": "folder-new", "method": "GET"}, response.json())\n \n-    def test_get_to_moved_item_causes_301_redirect_with_rest_view(self):\n+    def test_get_to_moved_item_causes_302_redirect_with_rest_view(self):\n         response = requests.get(\n             self.portal_url + "/++api++/folder-old/@actions",\n             auth=(SITE_OWNER_NAME, SITE_OWNER_PASSWORD),\n             allow_redirects=False,\n         )\n-        self.assertEqual(301, response.status_code)\n+        self.assertEqual(302, response.status_code)\n         self.assertEqual(\n             self.portal_url + "/++api++/folder-new/@actions",\n             response.headers["Location"],\n         )\n         self.assertEqual(b"", response.raw.read())\n \n-    def test_post_to_moved_item_causes_308_redirect(self):\n+    def test_post_to_moved_item_causes_307_redirect(self):\n         response = requests.post(\n             self.portal_url + "/folder-old",\n             headers={"Accept": "application/json"},\n             auth=(SITE_OWNER_NAME, SITE_OWNER_PASSWORD),\n             allow_redirects=False,\n         )\n-        self.assertEqual(308, response.status_code)\n+        self.assertEqual(307, response.status_code)\n         self.assertEqual(self.portal_url + "/folder-new", response.headers["Location"])\n         self.assertEqual(b"", response.raw.read())\n \n-    def test_post_to_moved_item_causes_308_redirect_with_api_traverser(self):\n+    def test_post_to_moved_item_causes_307_redirect_with_api_traverser(self):\n         response = requests.post(\n             self.portal_url + "/++api++/folder-old",\n             auth=(SITE_OWNER_NAME, SITE_OWNER_PASSWORD),\n             allow_redirects=False,\n         )\n-        self.assertEqual(308, response.status_code)\n+        self.assertEqual(307, response.status_code)\n         self.assertEqual(\n             self.portal_url + "/++api++/folder-new", response.headers["Location"]\n         )\n@@ -105,7 +105,7 @@ def test_unauthorized_request_to_item_still_redirects_first(self):\n \n         # A request to the old URL of an item where the user doesn\'t have\n         # necessary permissions will still result in a redirect\n-        self.assertEqual(301, response.status_code)\n+        self.assertEqual(302, response.status_code)\n         self.assertEqual(self.portal_url + "/folder-new", response.headers["Location"])\n         self.assertEqual(b"", response.raw.read())\n \n@@ -125,20 +125,20 @@ def test_query_string_gets_preserved(self):\n             auth=(SITE_OWNER_NAME, SITE_OWNER_PASSWORD),\n             allow_redirects=False,\n         )\n-        self.assertEqual(301, response.status_code)\n+        self.assertEqual(302, response.status_code)\n         self.assertEqual(\n             self.portal_url + "/folder-new?key=value", response.headers["Location"]\n         )\n         self.assertEqual(b"", response.raw.read())\n \n-    def test_named_service_on_moved_item_causes_301_redirect(self):\n+    def test_named_service_on_moved_item_causes_302_redirect(self):\n         response = requests.get(\n             self.portal_url + "/folder-old/namedservice",\n             headers={"Accept": "application/json"},\n             auth=(SITE_OWNER_NAME, SITE_OWNER_PASSWORD),\n             allow_redirects=False,\n         )\n-        self.assertEqual(301, response.status_code)\n+        self.assertEqual(302, response.status_code)\n         self.assertEqual(\n             self.portal_url + "/folder-new/namedservice", response.headers["Location"]\n         )\n@@ -151,7 +151,7 @@ def test_named_service_plus_path_parameter_works(self):\n             auth=(SITE_OWNER_NAME, SITE_OWNER_PASSWORD),\n             allow_redirects=False,\n         )\n-        self.assertEqual(301, response.status_code)\n+        self.assertEqual(302, response.status_code)\n         self.assertEqual(\n             self.portal_url + "/folder-new/namedservice/param",\n             response.headers["Location"],\n@@ -165,7 +165,7 @@ def test_redirects_for_regular_views_still_work(self):\n             auth=(SITE_OWNER_NAME, SITE_OWNER_PASSWORD),\n             allow_redirects=False,\n         )\n-        self.assertEqual(301, response.status_code)\n+        self.assertEqual(302, response.status_code)\n         self.assertEqual(\n             self.portal_url + "/folder-new/@@some-view", response.headers["Location"]\n         )\n@@ -178,7 +178,7 @@ def test_redirects_for_views_plus_params_plus_querystring_works(self):\n             auth=(SITE_OWNER_NAME, SITE_OWNER_PASSWORD),\n             allow_redirects=False,\n         )\n-        self.assertEqual(301, response.status_code)\n+        self.assertEqual(302, response.status_code)\n         self.assertEqual(\n             self.portal_url + "/folder-new/@@some-view/param?k=v",\n             response.headers["Location"],\n@@ -210,7 +210,7 @@ def test_handles_redirects_that_include_querystring_in_old_path(self):\n             auth=(SITE_OWNER_NAME, SITE_OWNER_PASSWORD),\n             allow_redirects=False,\n         )\n-        self.assertEqual(301, response.status_code)\n+        self.assertEqual(302, response.status_code)\n         self.assertEqual(self.portal_url + "/new-item", response.headers["Location"])\n         self.assertEqual(b"", response.raw.read())\n \n'

