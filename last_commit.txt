Repository: Products.CMFDynamicViewFTI


Branch: refs/heads/master
Date: 2021-12-20T23:25:23+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFDynamicViewFTI/commit/627f0a864676f211aacde5644b4172dcd45e448b

Get rid of Python 2 code.

pyupgrade --py37-plus

Files changed:
M Products/CMFDynamicViewFTI/__init__.py
M Products/CMFDynamicViewFTI/browser/__init__.py
M Products/CMFDynamicViewFTI/browser/typeinfo.py
M Products/CMFDynamicViewFTI/browserdefault.py
M Products/CMFDynamicViewFTI/content_for_tests.py
M Products/CMFDynamicViewFTI/fti.py
M Products/CMFDynamicViewFTI/interface.py
M Products/CMFDynamicViewFTI/interfaces.py
M Products/CMFDynamicViewFTI/permissions.py
M Products/CMFDynamicViewFTI/tests/CMFDVFTITestCase.py
M Products/CMFDynamicViewFTI/tests/__init__.py
M Products/CMFDynamicViewFTI/tests/test_browserdefault.py
M Products/CMFDynamicViewFTI/tests/test_fti.py
M setup.py

b'diff --git a/Products/CMFDynamicViewFTI/__init__.py b/Products/CMFDynamicViewFTI/__init__.py\nindex 196c127..bba4fc4 100644\n--- a/Products/CMFDynamicViewFTI/__init__.py\n+++ b/Products/CMFDynamicViewFTI/__init__.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n from Products.CMFCore import utils as cmf_utils\n from Products.CMFCore.permissions import AddPortalContent\n from Products.CMFCore.permissions import AddPortalFolders\ndiff --git a/Products/CMFDynamicViewFTI/browser/__init__.py b/Products/CMFDynamicViewFTI/browser/__init__.py\nindex 9053d82..8b2a76f 100644\n--- a/Products/CMFDynamicViewFTI/browser/__init__.py\n+++ b/Products/CMFDynamicViewFTI/browser/__init__.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """\n Browser subpackage\n """\ndiff --git a/Products/CMFDynamicViewFTI/browser/typeinfo.py b/Products/CMFDynamicViewFTI/browser/typeinfo.py\nindex 62f9140..9fced65 100644\n--- a/Products/CMFDynamicViewFTI/browser/typeinfo.py\n+++ b/Products/CMFDynamicViewFTI/browser/typeinfo.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """\n Add DynamicView FTI form (ZMI)\n """\n@@ -13,4 +12,4 @@ class DVFactoryTypeInformationAddView(FactoryTypeInformationAddView):\n \n     klass = DynamicViewTypeInformation\n \n-    description = u\'A dynamic view type information object defines a portal type.\'\n+    description = \'A dynamic view type information object defines a portal type.\'\ndiff --git a/Products/CMFDynamicViewFTI/browserdefault.py b/Products/CMFDynamicViewFTI/browserdefault.py\nindex 8380824..c3e1bb3 100644\n--- a/Products/CMFDynamicViewFTI/browserdefault.py\n+++ b/Products/CMFDynamicViewFTI/browserdefault.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """Mixin class for selectable views\n \n This module contains a mixin-class to support selecting default layout\n@@ -163,7 +162,7 @@ def setLayout(self, layout):\n         # \'layout\' should be one of the list returned by getAvailableLayouts(),\n         # but it is not enforced. If a default page has been set with\n         # setDefaultPage(), it is turned off by calling setDefaultPage(None).\n-        if not (layout and isinstance(layout, six.string_types)):\n+        if not (layout and isinstance(layout, str)):\n             raise ValueError(\n                 "layout must be a non empty string, got %s(%s)" %\n                 (layout, type(layout))\n@@ -179,7 +178,7 @@ def setLayout(self, layout):\n             if getattr(aq_base(self), \'layout\', _marker) is not _marker:\n                 # Archetypes remains? clean up\n                 old = self.layout\n-                if old and not isinstance(old, six.string_types):\n+                if old and not isinstance(old, str):\n                     raise RuntimeError(\n                         "layout attribute exists on %s and is no string: %s" %\n                         (self, type(old))\n@@ -216,7 +215,7 @@ def getAvailableLayouts(self):\n         spec = (providedBy(self), providedBy(self.REQUEST))\n         gsm = getSiteManager()\n         for mid in method_ids:\n-            if not isinstance(mid, six.string_types):\n+            if not isinstance(mid, str):\n                 mid = mid.decode()\n             factory = gsm.adapters.lookup(spec, Interface, mid)\n             if factory is not None:\ndiff --git a/Products/CMFDynamicViewFTI/content_for_tests.py b/Products/CMFDynamicViewFTI/content_for_tests.py\nindex db6fc89..be1e028 100644\n--- a/Products/CMFDynamicViewFTI/content_for_tests.py\n+++ b/Products/CMFDynamicViewFTI/content_for_tests.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n from Products.CMFCore.PortalFolder import PortalFolder\n from Products.CMFCore.PortalContent import PortalContent\n from Products.CMFDynamicViewFTI.browserdefault import BrowserDefaultMixin\ndiff --git a/Products/CMFDynamicViewFTI/fti.py b/Products/CMFDynamicViewFTI/fti.py\nindex 3997a6e..404f95b 100644\n--- a/Products/CMFDynamicViewFTI/fti.py\n+++ b/Products/CMFDynamicViewFTI/fti.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n from AccessControl import ClassSecurityInfo\n from Acquisition import aq_base\n from AccessControl.class_init import InitializeClass\n@@ -108,7 +107,7 @@ def manage_changeProperties(self, **kw):\n         if not view_methods:\n             self.view_methods = view_methods = (default_view, )\n         if default_view and default_view not in view_methods:\n-            raise ValueError("%s not in %s" % (default_view, view_methods))\n+            raise ValueError(f"{default_view} not in {view_methods}")\n \n     @security.protected(View)\n     def getDefaultViewMethod(self, context):\n@@ -119,7 +118,7 @@ def getDefaultViewMethod(self, context):\n     def getAvailableViewMethods(self, context):\n         # Get a list of registered view methods.\n         methods = self.view_methods\n-        if isinstance(methods, six.string_types):\n+        if isinstance(methods, str):\n             methods = (methods, )\n         return tuple(methods)\n \n@@ -139,7 +138,7 @@ def getViewMethod(\n             layout = layout()\n         if not layout:\n             return default\n-        if not isinstance(layout, six.string_types):\n+        if not isinstance(layout, str):\n             raise TypeError(\n                 "layout of %s must be a string, got %s" %\n                 (repr(context), type(layout))\n@@ -223,7 +222,7 @@ def queryMethodID(self, alias, default=None, context=None):\n             default=default,\n             context=context\n         )\n-        if not isinstance(methodTarget, six.string_types):\n+        if not isinstance(methodTarget, str):\n             # nothing to do, method_id is probably None\n             return methodTarget\n \ndiff --git a/Products/CMFDynamicViewFTI/interface.py b/Products/CMFDynamicViewFTI/interface.py\nindex 309af6a..1805e3d 100644\n--- a/Products/CMFDynamicViewFTI/interface.py\n+++ b/Products/CMFDynamicViewFTI/interface.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n # BBB module will be removed at some point. We will still need it as long as\n # we plan to support Plone 4.3.x\n from Products.CMFDynamicViewFTI.interfaces import *\ndiff --git a/Products/CMFDynamicViewFTI/interfaces.py b/Products/CMFDynamicViewFTI/interfaces.py\nindex 6f0b3af..452394e 100644\n--- a/Products/CMFDynamicViewFTI/interfaces.py\n+++ b/Products/CMFDynamicViewFTI/interfaces.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n from Products.CMFCore.interfaces import ITypeInformation\n from zope.interface import Interface\n \ndiff --git a/Products/CMFDynamicViewFTI/permissions.py b/Products/CMFDynamicViewFTI/permissions.py\nindex fd86b13..19d7400 100644\n--- a/Products/CMFDynamicViewFTI/permissions.py\n+++ b/Products/CMFDynamicViewFTI/permissions.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n from AccessControl.Permission import addPermission\n \n ModifyViewTemplate = "Modify view template"\ndiff --git a/Products/CMFDynamicViewFTI/tests/CMFDVFTITestCase.py b/Products/CMFDynamicViewFTI/tests/CMFDVFTITestCase.py\nindex 9d8ac08..be0f462 100644\n--- a/Products/CMFDynamicViewFTI/tests/CMFDVFTITestCase.py\n+++ b/Products/CMFDynamicViewFTI/tests/CMFDVFTITestCase.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n from plone.app import testing\n from plone.app.testing import PLONE_FIXTURE\n from plone.app.testing import PloneSandboxLayer\ndiff --git a/Products/CMFDynamicViewFTI/tests/__init__.py b/Products/CMFDynamicViewFTI/tests/__init__.py\nindex 40a96af..e69de29 100644\n--- a/Products/CMFDynamicViewFTI/tests/__init__.py\n+++ b/Products/CMFDynamicViewFTI/tests/__init__.py\n@@ -1 +0,0 @@\n-# -*- coding: utf-8 -*-\ndiff --git a/Products/CMFDynamicViewFTI/tests/test_browserdefault.py b/Products/CMFDynamicViewFTI/tests/test_browserdefault.py\nindex d94d9fb..cff3bd2 100644\n--- a/Products/CMFDynamicViewFTI/tests/test_browserdefault.py\n+++ b/Products/CMFDynamicViewFTI/tests/test_browserdefault.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n from Products.CMFCore.utils import getToolByName\n from Products.CMFDynamicViewFTI.browserdefault import BrowserDefaultMixin\n from Products.CMFDynamicViewFTI.interfaces import IBrowserDefault\n@@ -34,7 +33,7 @@ def test_extendsInterface(self):\n class TestAvailableLayouts(CMFDVFTITestCase.CMFDVFTITestCase):\n \n     def setUp(self):\n-        super(TestAvailableLayouts, self).setUp()\n+        super().setUp()\n         self.dfolder = DummyFolder()\n         self.dfolder.fti = self.types[\'DynFolder\']\n \ndiff --git a/Products/CMFDynamicViewFTI/tests/test_fti.py b/Products/CMFDynamicViewFTI/tests/test_fti.py\nindex a8e4a51..bc366f9 100644\n--- a/Products/CMFDynamicViewFTI/tests/test_fti.py\n+++ b/Products/CMFDynamicViewFTI/tests/test_fti.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n from plone.app.testing import TEST_USER_NAME\n from plone.app.testing import TEST_USER_PASSWORD\n from Products.CMFCore.interfaces import ITypeInformation\n@@ -215,7 +214,7 @@ class TestEmptyLayoutBug(CMFDVFTITestCase.CMFDVFTITestCase):\n         # Finally, here is why we did all this...\n \n         def setUp(self):\n-            super(TestEmptyLayoutBug, self).setUp()\n+            super().setUp()\n             # Make a DynFolder\n             self.folder.invokeFactory(\'DynFolder\', id=\'dynfolder\')\n             self.dynfolder = self.folder.dynfolder\ndiff --git a/setup.py b/setup.py\nindex 086333e..9c401a7 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n from setuptools import find_packages\n from setuptools import setup\n \n'

Repository: Products.CMFDynamicViewFTI


Branch: refs/heads/master
Date: 2021-12-20T23:28:54+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFDynamicViewFTI/commit/3451b42b527be871465f951a0031d1fdb526edf8

Plone 6: always use lines for the view_methods property.

Part of https://github.com/plone/Products.CMFPlone/issues/3305

Files changed:
A news/3305.bugfix
M Products/CMFDynamicViewFTI/fti.py

b'diff --git a/Products/CMFDynamicViewFTI/fti.py b/Products/CMFDynamicViewFTI/fti.py\nindex 404f95b..cb76438 100644\n--- a/Products/CMFDynamicViewFTI/fti.py\n+++ b/Products/CMFDynamicViewFTI/fti.py\n@@ -8,9 +8,6 @@\n from zope.interface import implementer\n \n \n-import six\n-\n-\n def safe_hasattr(obj, name, _marker=object()):\n     """Make sure we don\'t mask exceptions like hasattr().\n \n@@ -65,10 +62,6 @@ class DynamicViewTypeInformation(FactoryTypeInformation):\n     meta_type = fti_meta_type\n     security = ClassSecurityInfo()\n \n-    view_methods_type = \'ulines\'\n-    if six.PY2:\n-        view_methods_type = \'lines\'\n-\n     _properties = FactoryTypeInformation._properties + (\n         {\n             \'id\': \'default_view\',\n@@ -78,7 +71,7 @@ class DynamicViewTypeInformation(FactoryTypeInformation):\n         },\n         {\n             \'id\': \'view_methods\',\n-            \'type\': view_methods_type,\n+            \'type\': \'lines\',\n             \'mode\': \'w\',\n             \'label\': \'Available view methods\'\n         },\ndiff --git a/news/3305.bugfix b/news/3305.bugfix\nnew file mode 100644\nindex 0000000..ea79fa6\n--- /dev/null\n+++ b/news/3305.bugfix\n@@ -0,0 +1,4 @@\n+Plone 6: always use lines for the view_methods property.\n+Part of `issue 3305 <https://github.com/plone/Products.CMFPlone/issues/3305>`_.\n+Also, remove Python 2 code and the six dependency.\n+[maurits]\n'

Repository: Products.CMFDynamicViewFTI


Branch: refs/heads/master
Date: 2021-12-20T23:44:02+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFDynamicViewFTI/commit/f9f3692c82b4b25b544e6434fd34a6ed68590838

Removed Py2-only test from Products/CMFDynamicViewFTI/tests/test_fti.py

And remove six from the rest of the code.

According to a comment, originally on Py 3 it yielded a TypeError: 'ReplaceableWrapper' object is not callable.
On Plone 6 I do not see this.  But the two tests in here still fail with a NotFound.
When I try to recreate the situation of this test setup manually in Plone 6, it works fine:
create a folder and document, give them both an empty layout property, and try to view them.
So at least for a Dexterity FTI it seems to go fine.

Files changed:
M Products/CMFDynamicViewFTI/browserdefault.py
M Products/CMFDynamicViewFTI/tests/test_fti.py
M setup.py

b"diff --git a/Products/CMFDynamicViewFTI/browserdefault.py b/Products/CMFDynamicViewFTI/browserdefault.py\nindex c3e1bb3..e35700d 100644\n--- a/Products/CMFDynamicViewFTI/browserdefault.py\n+++ b/Products/CMFDynamicViewFTI/browserdefault.py\n@@ -21,8 +21,6 @@\n from zope.interface import Interface\n from zope.interface import providedBy\n \n-import six\n-\n \n _marker = object()\n fti_meta_type = DynamicViewTypeInformation.meta_type\ndiff --git a/Products/CMFDynamicViewFTI/tests/test_fti.py b/Products/CMFDynamicViewFTI/tests/test_fti.py\nindex bc366f9..18a0e26 100644\n--- a/Products/CMFDynamicViewFTI/tests/test_fti.py\n+++ b/Products/CMFDynamicViewFTI/tests/test_fti.py\n@@ -6,9 +6,9 @@\n from Products.CMFDynamicViewFTI.tests import CMFDVFTITestCase\n from zope.interface.verify import verifyObject\n \n-import six\n import transaction\n \n+\n fti_meta_type = DynamicViewTypeInformation.meta_type\n \n \n@@ -205,45 +205,6 @@ def test_DefaultViewWithBadLayoutUseFallback(self):\n             info.default_view\n         )\n \n-if six.PY2:\n-    # I have no idea what is or should be happending here.\n-    # In py2 this test works but in py3 it yields:\n-    # TypeError: 'ReplaceableWrapper' object is not callable\n-\n-    class TestEmptyLayoutBug(CMFDVFTITestCase.CMFDVFTITestCase):\n-        # Finally, here is why we did all this...\n-\n-        def setUp(self):\n-            super().setUp()\n-            # Make a DynFolder\n-            self.folder.invokeFactory('DynFolder', id='dynfolder')\n-            self.dynfolder = self.folder.dynfolder\n-            self.dynfolder.layout = ''  # Empty layout triggers bug\n-            self.dynfolder_path = self.dynfolder.absolute_url(1)\n-\n-            # Make a DynDocument\n-            self.folder.invokeFactory('DynDocument', id='dyndocument')\n-            self.dyndocument = self.folder.dyndocument\n-            self.dyndocument.layout = ''  # Empty layout triggers bug\n-            self.dyndocument_path = self.dyndocument.absolute_url(1)\n-            import transaction\n-            transaction.commit()\n-            from plone.testing.z2 import Browser\n-            self.browser = Browser(self.layer['app'])\n-            self.browser.handleErrors = False\n-            self.browser.addHeader(\n-                'Authorization', 'Basic %s:%s' %\n-                (TEST_USER_NAME, TEST_USER_PASSWORD,)\n-            )\n-\n-        def test_FolderEmptyLayoutBug(self):\n-            self.browser.open(self.dynfolder.absolute_url() + '/view')\n-            self.assertEqual(self.browser._response.status_code, 200)\n-\n-        def test_DocumentEmptyLayoutBug(self):\n-            self.browser.open(self.dyndocument.absolute_url() + '/view')\n-            self.assertEqual(self.browser._response.status_code, 200)\n-\n \n class TestModifyDefaultPage(CMFDVFTITestCase.CMFDVFTITestCase):\n \ndiff --git a/setup.py b/setup.py\nindex 9c401a7..de07f2d 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -48,7 +48,6 @@\n     ),\n     install_requires=[\n         'setuptools',\n-        'six',\n         'zope.browsermenu',\n         'zope.component',\n         'zope.interface',\n"

Repository: Products.CMFDynamicViewFTI


Branch: refs/heads/master
Date: 2021-12-20T23:46:44+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFDynamicViewFTI/commit/6fb010d69f4a4d211a18d009d12b8d91eeca5df6

Bumped version for breaking release.

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex de07f2d..6546161 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,7 +1,7 @@\n from setuptools import find_packages\n from setuptools import setup\n \n-version = \'6.0.4.dev0\'\n+version = \'7.0.0a1.dev0\'\n \n long_description = open("README.rst").read()\n long_description += "\\n"\n'

Repository: Products.CMFDynamicViewFTI


Branch: refs/heads/master
Date: 2021-12-20T23:49:21+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFDynamicViewFTI/commit/510e4171eb04515913ceb2bfd36bea8a45be1ad7

Updated classifiers

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex 6546161..65d5010 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -16,16 +16,11 @@\n     classifiers=[\n         "Development Status :: 5 - Production/Stable",\n         "Framework :: Plone",\n-        "Framework :: Plone :: 5.2",\n         "Framework :: Plone :: 6.0",\n         "Framework :: Plone :: Core",\n-        "Framework :: Zope2",\n-        "Framework :: Zope :: 4",\n         "Framework :: Zope :: 5",\n         "License :: OSI Approved :: Zope Public License",\n         "Programming Language :: Python",\n-        "Programming Language :: Python :: 2.7",\n-        "Programming Language :: Python :: 3.6",\n         "Programming Language :: Python :: 3.7",\n         "Programming Language :: Python :: 3.8",\n         "Programming Language :: Python :: 3.9",\n'

Repository: Products.CMFDynamicViewFTI


Branch: refs/heads/master
Date: 2022-01-10T12:32:42+01:00
Author: Maurits van Rees (mauritsvanrees) <m.van.rees@zestsoftware.nl>
Commit: https://github.com/plone/Products.CMFDynamicViewFTI/commit/345be9ba68f06f52c335e4cf77a55d6d56450824

Merge pull request #23 from plone/maurits-plone6-only

Get rid of Python 2 code

Files changed:
A news/3305.bugfix
M Products/CMFDynamicViewFTI/__init__.py
M Products/CMFDynamicViewFTI/browser/__init__.py
M Products/CMFDynamicViewFTI/browser/typeinfo.py
M Products/CMFDynamicViewFTI/browserdefault.py
M Products/CMFDynamicViewFTI/content_for_tests.py
M Products/CMFDynamicViewFTI/fti.py
M Products/CMFDynamicViewFTI/interface.py
M Products/CMFDynamicViewFTI/interfaces.py
M Products/CMFDynamicViewFTI/permissions.py
M Products/CMFDynamicViewFTI/tests/CMFDVFTITestCase.py
M Products/CMFDynamicViewFTI/tests/__init__.py
M Products/CMFDynamicViewFTI/tests/test_browserdefault.py
M Products/CMFDynamicViewFTI/tests/test_fti.py
M setup.py

b'diff --git a/Products/CMFDynamicViewFTI/__init__.py b/Products/CMFDynamicViewFTI/__init__.py\nindex 196c127..bba4fc4 100644\n--- a/Products/CMFDynamicViewFTI/__init__.py\n+++ b/Products/CMFDynamicViewFTI/__init__.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n from Products.CMFCore import utils as cmf_utils\n from Products.CMFCore.permissions import AddPortalContent\n from Products.CMFCore.permissions import AddPortalFolders\ndiff --git a/Products/CMFDynamicViewFTI/browser/__init__.py b/Products/CMFDynamicViewFTI/browser/__init__.py\nindex 9053d82..8b2a76f 100644\n--- a/Products/CMFDynamicViewFTI/browser/__init__.py\n+++ b/Products/CMFDynamicViewFTI/browser/__init__.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """\n Browser subpackage\n """\ndiff --git a/Products/CMFDynamicViewFTI/browser/typeinfo.py b/Products/CMFDynamicViewFTI/browser/typeinfo.py\nindex 62f9140..9fced65 100644\n--- a/Products/CMFDynamicViewFTI/browser/typeinfo.py\n+++ b/Products/CMFDynamicViewFTI/browser/typeinfo.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """\n Add DynamicView FTI form (ZMI)\n """\n@@ -13,4 +12,4 @@ class DVFactoryTypeInformationAddView(FactoryTypeInformationAddView):\n \n     klass = DynamicViewTypeInformation\n \n-    description = u\'A dynamic view type information object defines a portal type.\'\n+    description = \'A dynamic view type information object defines a portal type.\'\ndiff --git a/Products/CMFDynamicViewFTI/browserdefault.py b/Products/CMFDynamicViewFTI/browserdefault.py\nindex 8380824..e35700d 100644\n--- a/Products/CMFDynamicViewFTI/browserdefault.py\n+++ b/Products/CMFDynamicViewFTI/browserdefault.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """Mixin class for selectable views\n \n This module contains a mixin-class to support selecting default layout\n@@ -22,8 +21,6 @@\n from zope.interface import Interface\n from zope.interface import providedBy\n \n-import six\n-\n \n _marker = object()\n fti_meta_type = DynamicViewTypeInformation.meta_type\n@@ -163,7 +160,7 @@ def setLayout(self, layout):\n         # \'layout\' should be one of the list returned by getAvailableLayouts(),\n         # but it is not enforced. If a default page has been set with\n         # setDefaultPage(), it is turned off by calling setDefaultPage(None).\n-        if not (layout and isinstance(layout, six.string_types)):\n+        if not (layout and isinstance(layout, str)):\n             raise ValueError(\n                 "layout must be a non empty string, got %s(%s)" %\n                 (layout, type(layout))\n@@ -179,7 +176,7 @@ def setLayout(self, layout):\n             if getattr(aq_base(self), \'layout\', _marker) is not _marker:\n                 # Archetypes remains? clean up\n                 old = self.layout\n-                if old and not isinstance(old, six.string_types):\n+                if old and not isinstance(old, str):\n                     raise RuntimeError(\n                         "layout attribute exists on %s and is no string: %s" %\n                         (self, type(old))\n@@ -216,7 +213,7 @@ def getAvailableLayouts(self):\n         spec = (providedBy(self), providedBy(self.REQUEST))\n         gsm = getSiteManager()\n         for mid in method_ids:\n-            if not isinstance(mid, six.string_types):\n+            if not isinstance(mid, str):\n                 mid = mid.decode()\n             factory = gsm.adapters.lookup(spec, Interface, mid)\n             if factory is not None:\ndiff --git a/Products/CMFDynamicViewFTI/content_for_tests.py b/Products/CMFDynamicViewFTI/content_for_tests.py\nindex db6fc89..be1e028 100644\n--- a/Products/CMFDynamicViewFTI/content_for_tests.py\n+++ b/Products/CMFDynamicViewFTI/content_for_tests.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n from Products.CMFCore.PortalFolder import PortalFolder\n from Products.CMFCore.PortalContent import PortalContent\n from Products.CMFDynamicViewFTI.browserdefault import BrowserDefaultMixin\ndiff --git a/Products/CMFDynamicViewFTI/fti.py b/Products/CMFDynamicViewFTI/fti.py\nindex 3997a6e..cb76438 100644\n--- a/Products/CMFDynamicViewFTI/fti.py\n+++ b/Products/CMFDynamicViewFTI/fti.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n from AccessControl import ClassSecurityInfo\n from Acquisition import aq_base\n from AccessControl.class_init import InitializeClass\n@@ -9,9 +8,6 @@\n from zope.interface import implementer\n \n \n-import six\n-\n-\n def safe_hasattr(obj, name, _marker=object()):\n     """Make sure we don\'t mask exceptions like hasattr().\n \n@@ -66,10 +62,6 @@ class DynamicViewTypeInformation(FactoryTypeInformation):\n     meta_type = fti_meta_type\n     security = ClassSecurityInfo()\n \n-    view_methods_type = \'ulines\'\n-    if six.PY2:\n-        view_methods_type = \'lines\'\n-\n     _properties = FactoryTypeInformation._properties + (\n         {\n             \'id\': \'default_view\',\n@@ -79,7 +71,7 @@ class DynamicViewTypeInformation(FactoryTypeInformation):\n         },\n         {\n             \'id\': \'view_methods\',\n-            \'type\': view_methods_type,\n+            \'type\': \'lines\',\n             \'mode\': \'w\',\n             \'label\': \'Available view methods\'\n         },\n@@ -108,7 +100,7 @@ def manage_changeProperties(self, **kw):\n         if not view_methods:\n             self.view_methods = view_methods = (default_view, )\n         if default_view and default_view not in view_methods:\n-            raise ValueError("%s not in %s" % (default_view, view_methods))\n+            raise ValueError(f"{default_view} not in {view_methods}")\n \n     @security.protected(View)\n     def getDefaultViewMethod(self, context):\n@@ -119,7 +111,7 @@ def getDefaultViewMethod(self, context):\n     def getAvailableViewMethods(self, context):\n         # Get a list of registered view methods.\n         methods = self.view_methods\n-        if isinstance(methods, six.string_types):\n+        if isinstance(methods, str):\n             methods = (methods, )\n         return tuple(methods)\n \n@@ -139,7 +131,7 @@ def getViewMethod(\n             layout = layout()\n         if not layout:\n             return default\n-        if not isinstance(layout, six.string_types):\n+        if not isinstance(layout, str):\n             raise TypeError(\n                 "layout of %s must be a string, got %s" %\n                 (repr(context), type(layout))\n@@ -223,7 +215,7 @@ def queryMethodID(self, alias, default=None, context=None):\n             default=default,\n             context=context\n         )\n-        if not isinstance(methodTarget, six.string_types):\n+        if not isinstance(methodTarget, str):\n             # nothing to do, method_id is probably None\n             return methodTarget\n \ndiff --git a/Products/CMFDynamicViewFTI/interface.py b/Products/CMFDynamicViewFTI/interface.py\nindex 309af6a..1805e3d 100644\n--- a/Products/CMFDynamicViewFTI/interface.py\n+++ b/Products/CMFDynamicViewFTI/interface.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n # BBB module will be removed at some point. We will still need it as long as\n # we plan to support Plone 4.3.x\n from Products.CMFDynamicViewFTI.interfaces import *\ndiff --git a/Products/CMFDynamicViewFTI/interfaces.py b/Products/CMFDynamicViewFTI/interfaces.py\nindex 6f0b3af..452394e 100644\n--- a/Products/CMFDynamicViewFTI/interfaces.py\n+++ b/Products/CMFDynamicViewFTI/interfaces.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n from Products.CMFCore.interfaces import ITypeInformation\n from zope.interface import Interface\n \ndiff --git a/Products/CMFDynamicViewFTI/permissions.py b/Products/CMFDynamicViewFTI/permissions.py\nindex fd86b13..19d7400 100644\n--- a/Products/CMFDynamicViewFTI/permissions.py\n+++ b/Products/CMFDynamicViewFTI/permissions.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n from AccessControl.Permission import addPermission\n \n ModifyViewTemplate = "Modify view template"\ndiff --git a/Products/CMFDynamicViewFTI/tests/CMFDVFTITestCase.py b/Products/CMFDynamicViewFTI/tests/CMFDVFTITestCase.py\nindex 9d8ac08..be0f462 100644\n--- a/Products/CMFDynamicViewFTI/tests/CMFDVFTITestCase.py\n+++ b/Products/CMFDynamicViewFTI/tests/CMFDVFTITestCase.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n from plone.app import testing\n from plone.app.testing import PLONE_FIXTURE\n from plone.app.testing import PloneSandboxLayer\ndiff --git a/Products/CMFDynamicViewFTI/tests/__init__.py b/Products/CMFDynamicViewFTI/tests/__init__.py\nindex 40a96af..e69de29 100644\n--- a/Products/CMFDynamicViewFTI/tests/__init__.py\n+++ b/Products/CMFDynamicViewFTI/tests/__init__.py\n@@ -1 +0,0 @@\n-# -*- coding: utf-8 -*-\ndiff --git a/Products/CMFDynamicViewFTI/tests/test_browserdefault.py b/Products/CMFDynamicViewFTI/tests/test_browserdefault.py\nindex d94d9fb..cff3bd2 100644\n--- a/Products/CMFDynamicViewFTI/tests/test_browserdefault.py\n+++ b/Products/CMFDynamicViewFTI/tests/test_browserdefault.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n from Products.CMFCore.utils import getToolByName\n from Products.CMFDynamicViewFTI.browserdefault import BrowserDefaultMixin\n from Products.CMFDynamicViewFTI.interfaces import IBrowserDefault\n@@ -34,7 +33,7 @@ def test_extendsInterface(self):\n class TestAvailableLayouts(CMFDVFTITestCase.CMFDVFTITestCase):\n \n     def setUp(self):\n-        super(TestAvailableLayouts, self).setUp()\n+        super().setUp()\n         self.dfolder = DummyFolder()\n         self.dfolder.fti = self.types[\'DynFolder\']\n \ndiff --git a/Products/CMFDynamicViewFTI/tests/test_fti.py b/Products/CMFDynamicViewFTI/tests/test_fti.py\nindex a8e4a51..18a0e26 100644\n--- a/Products/CMFDynamicViewFTI/tests/test_fti.py\n+++ b/Products/CMFDynamicViewFTI/tests/test_fti.py\n@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n from plone.app.testing import TEST_USER_NAME\n from plone.app.testing import TEST_USER_PASSWORD\n from Products.CMFCore.interfaces import ITypeInformation\n@@ -7,9 +6,9 @@\n from Products.CMFDynamicViewFTI.tests import CMFDVFTITestCase\n from zope.interface.verify import verifyObject\n \n-import six\n import transaction\n \n+\n fti_meta_type = DynamicViewTypeInformation.meta_type\n \n \n@@ -206,45 +205,6 @@ def test_DefaultViewWithBadLayoutUseFallback(self):\n             info.default_view\n         )\n \n-if six.PY2:\n-    # I have no idea what is or should be happending here.\n-    # In py2 this test works but in py3 it yields:\n-    # TypeError: \'ReplaceableWrapper\' object is not callable\n-\n-    class TestEmptyLayoutBug(CMFDVFTITestCase.CMFDVFTITestCase):\n-        # Finally, here is why we did all this...\n-\n-        def setUp(self):\n-            super(TestEmptyLayoutBug, self).setUp()\n-            # Make a DynFolder\n-            self.folder.invokeFactory(\'DynFolder\', id=\'dynfolder\')\n-            self.dynfolder = self.folder.dynfolder\n-            self.dynfolder.layout = \'\'  # Empty layout triggers bug\n-            self.dynfolder_path = self.dynfolder.absolute_url(1)\n-\n-            # Make a DynDocument\n-            self.folder.invokeFactory(\'DynDocument\', id=\'dyndocument\')\n-            self.dyndocument = self.folder.dyndocument\n-            self.dyndocument.layout = \'\'  # Empty layout triggers bug\n-            self.dyndocument_path = self.dyndocument.absolute_url(1)\n-            import transaction\n-            transaction.commit()\n-            from plone.testing.z2 import Browser\n-            self.browser = Browser(self.layer[\'app\'])\n-            self.browser.handleErrors = False\n-            self.browser.addHeader(\n-                \'Authorization\', \'Basic %s:%s\' %\n-                (TEST_USER_NAME, TEST_USER_PASSWORD,)\n-            )\n-\n-        def test_FolderEmptyLayoutBug(self):\n-            self.browser.open(self.dynfolder.absolute_url() + \'/view\')\n-            self.assertEqual(self.browser._response.status_code, 200)\n-\n-        def test_DocumentEmptyLayoutBug(self):\n-            self.browser.open(self.dyndocument.absolute_url() + \'/view\')\n-            self.assertEqual(self.browser._response.status_code, 200)\n-\n \n class TestModifyDefaultPage(CMFDVFTITestCase.CMFDVFTITestCase):\n \ndiff --git a/news/3305.bugfix b/news/3305.bugfix\nnew file mode 100644\nindex 0000000..ea79fa6\n--- /dev/null\n+++ b/news/3305.bugfix\n@@ -0,0 +1,4 @@\n+Plone 6: always use lines for the view_methods property.\n+Part of `issue 3305 <https://github.com/plone/Products.CMFPlone/issues/3305>`_.\n+Also, remove Python 2 code and the six dependency.\n+[maurits]\ndiff --git a/setup.py b/setup.py\nindex 086333e..65d5010 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,8 +1,7 @@\n-# -*- coding: utf-8 -*-\n from setuptools import find_packages\n from setuptools import setup\n \n-version = \'6.0.4.dev0\'\n+version = \'7.0.0a1.dev0\'\n \n long_description = open("README.rst").read()\n long_description += "\\n"\n@@ -17,16 +16,11 @@\n     classifiers=[\n         "Development Status :: 5 - Production/Stable",\n         "Framework :: Plone",\n-        "Framework :: Plone :: 5.2",\n         "Framework :: Plone :: 6.0",\n         "Framework :: Plone :: Core",\n-        "Framework :: Zope2",\n-        "Framework :: Zope :: 4",\n         "Framework :: Zope :: 5",\n         "License :: OSI Approved :: Zope Public License",\n         "Programming Language :: Python",\n-        "Programming Language :: Python :: 2.7",\n-        "Programming Language :: Python :: 3.6",\n         "Programming Language :: Python :: 3.7",\n         "Programming Language :: Python :: 3.8",\n         "Programming Language :: Python :: 3.9",\n@@ -49,7 +43,6 @@\n     ),\n     install_requires=[\n         \'setuptools\',\n-        \'six\',\n         \'zope.browsermenu\',\n         \'zope.component\',\n         \'zope.interface\',\n'

