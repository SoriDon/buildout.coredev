Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-01-09T11:07:29+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/2cc25159443759573360af51216bcb9253cc87c1

first short for PLIP plone.base

Files changed:
M Products/CMFPlone/DublinCore.py
M Products/CMFPlone/PloneBatch.py
M Products/CMFPlone/PloneTool.py
M Products/CMFPlone/RegistrationTool.py
M Products/CMFPlone/TranslationServiceTool.py
M Products/CMFPlone/__init__.py
M Products/CMFPlone/defaultpage.py
M Products/CMFPlone/interfaces/__init__.py
M Products/CMFPlone/interfaces/atd.py
M Products/CMFPlone/interfaces/basetool.py
M Products/CMFPlone/interfaces/breadcrumbs.py
M Products/CMFPlone/interfaces/constrains.py
M Products/CMFPlone/interfaces/controlpanel.py
M Products/CMFPlone/interfaces/defaultpage.py
M Products/CMFPlone/interfaces/events.py
M Products/CMFPlone/interfaces/installable.py
M Products/CMFPlone/interfaces/interface.py
M Products/CMFPlone/interfaces/language.py
M Products/CMFPlone/interfaces/login.py
M Products/CMFPlone/interfaces/migration.py
M Products/CMFPlone/interfaces/password_reset.py
M Products/CMFPlone/interfaces/patterns.py
M Products/CMFPlone/interfaces/properties.py
M Products/CMFPlone/interfaces/resources.py
M Products/CMFPlone/interfaces/siteroot.py
M Products/CMFPlone/interfaces/structure.py
M Products/CMFPlone/interfaces/syndication.py
M Products/CMFPlone/interfaces/translationservice.py
M Products/CMFPlone/permissions.py
M Products/CMFPlone/utils.py
M setup.py

b'diff --git a/Products/CMFPlone/DublinCore.py b/Products/CMFPlone/DublinCore.py\nindex 8e1d12b481..1cb153139a 100644\n--- a/Products/CMFPlone/DublinCore.py\n+++ b/Products/CMFPlone/DublinCore.py\n@@ -12,22 +12,21 @@\n ##############################################################################\n """ Dublin Core support for content types. """\n \n+from AccessControl.class_init import InitializeClass\n from AccessControl.SecurityInfo import ClassSecurityInfo\n from AccessControl.SecurityManagement import getSecurityManager\n from Acquisition import aq_base\n-from AccessControl.class_init import InitializeClass\n from App.special_dtml import DTMLFile\n from DateTime.DateTime import DateTime\n from OFS.PropertyManager import PropertyManager\n-from zope.interface import implementer\n-\n+from plone.base.permissions import ModifyPortalContent\n+from plone.base.permissions import View\n from Products.CMFCore.interfaces import ICatalogableDublinCore\n from Products.CMFCore.interfaces import IDublinCore\n from Products.CMFCore.interfaces import IMutableDublinCore\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.permissions import ModifyPortalContent\n-from Products.CMFPlone.permissions import View\n from Products.CMFPlone.utils import WWW_DIR\n+from zope.interface import implementer\n \n \n _marker = []\ndiff --git a/Products/CMFPlone/PloneBatch.py b/Products/CMFPlone/PloneBatch.py\nindex 727a0bebff..f0f2c5eaa2 100644\n--- a/Products/CMFPlone/PloneBatch.py\n+++ b/Products/CMFPlone/PloneBatch.py\n@@ -1,72 +1,3 @@\n-from ZTUtils import make_query\n+from zope.deprecation import moved\n \n-from plone.batching.batch import QuantumBatch\n-from plone.batching.utils import calculate_pagerange\n-\n-from zope.deprecation import deprecated\n-\n-\n-class Batch(QuantumBatch):\n-\n-    b_start_str = \'b_start\'\n-\n-    def __init__(self, sequence, size, start=0, end=0, orphan=0,\n-                 overlap=0, pagerange=7, quantumleap=0,\n-                 b_start_str=\'b_start\'):\n-        super().__init__(sequence, size, start,\n-                                    end, orphan, overlap,\n-                                    pagerange, quantumleap)\n-        self.b_start_str = b_start_str\n-\n-    def __len__(self):\n-        # Note: Using len() was deprecated for several years.\n-        # It was recommended to explicitly either use the `length` attribute\n-        # for the size of the current page, which is what we return now,\n-        # or use the `sequence_length` attribute for the size of the\n-        # entire sequence.\n-        # But the deprecation was reverted for Plone 5.2.3,\n-        # because core code in Products.PageTemplates called `len`\n-        # on batches, making the deprecation warning unavoidable\n-        # and thus unnecessary.\n-        # See https://github.com/plone/Products.CMFPlone/issues/3176\n-        return self.length\n-\n-    def __bool__(self):\n-        # Without __bool__ a bool(self) would call len(self), which\n-        # gives a deprecation warning.\n-        return bool(self.length)\n-\n-    # For Python 2 compatibility:\n-    __nonzero__ = __bool__\n-\n-    def initialize(self, start, end, size):\n-        super().initialize(start, end, size)\n-        self.pagerange, self.pagerangestart, self.pagerangeend = \\\n-            calculate_pagerange(self.pagenumber, self.numpages, self.pagerange)\n-\n-    def pageurl(self, formvariables, pagenumber=-1):\n-        # Makes the url for a given page.\n-        if pagenumber == -1:\n-            pagenumber = self.pagenumber\n-        b_start = pagenumber * (self.pagesize - self.overlap) - self.pagesize\n-        return make_query(formvariables, {self.b_start_str: b_start})\n-\n-    def navurls(self, formvariables, navlist=None):\n-        # Returns the page number and url for the navigation quick links.\n-        if navlist is None:\n-            navlist = []\n-        if not navlist:\n-            navlist = self.navlist\n-        return map(lambda x, formvariables=formvariables:\n-                   (x, self.pageurl(formvariables, x)), navlist)\n-\n-    def prevurls(self, formvariables):\n-        # Helper method to get prev navigation list from templates.\n-        return self.navurls(formvariables, self.previous_pages)\n-\n-    def nexturls(self, formvariables):\n-        # Helper method to get next navigation list from templates.\n-        return self.navurls(formvariables, self.next_pages)\n-\n-    prevlist = QuantumBatch.previous_pages\n-    nextlist = QuantumBatch.next_pages\n+moved(\'plone.base.batch\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/PloneTool.py b/Products/CMFPlone/PloneTool.py\nindex 2f0d463723..42dab0c1f3 100644\n--- a/Products/CMFPlone/PloneTool.py\n+++ b/Products/CMFPlone/PloneTool.py\n@@ -1,16 +1,17 @@\n from AccessControl import ClassSecurityInfo\n from AccessControl import getSecurityManager\n from AccessControl import Unauthorized\n+from AccessControl.class_init import InitializeClass\n from AccessControl.requestmethod import postonly\n from Acquisition import aq_base\n from Acquisition import aq_inner\n from Acquisition import aq_parent\n-from AccessControl.class_init import InitializeClass\n from ComputedAttribute import ComputedAttribute\n from DateTime import DateTime\n from email.utils import getaddresses\n from OFS.ObjectManager import bad_id\n from OFS.SimpleItem import SimpleItem\n+from plone.base.utils import safe_text\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.interfaces import IDublinCore\n from Products.CMFCore.interfaces import IMutableDublinCore\n@@ -32,14 +33,13 @@\n from Products.CMFPlone.interfaces import ISearchSchema\n from Products.CMFPlone.interfaces import ISecuritySchema\n from Products.CMFPlone.interfaces import ISiteSchema\n+from Products.CMFPlone.log import log\n from Products.CMFPlone.log import log_deprecated\n+from Products.CMFPlone.log import log_exc\n from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n from Products.CMFPlone.PloneFolder import ReplaceableWrapper\n from Products.CMFPlone.utils import base_hasattr\n-from Products.CMFPlone.utils import log\n-from Products.CMFPlone.utils import log_exc\n from Products.CMFPlone.utils import safe_hasattr\n-from Products.CMFPlone.utils import safe_unicode\n from Products.CMFPlone.utils import transaction_note\n from Products.statusmessages.interfaces import IStatusMessage\n from urllib import parse\n@@ -262,7 +262,7 @@ def _makeTransactionNote(self, obj, msg=\'\'):\n             msg = relative_path + \'/\' + obj.title_or_id() \\\n                 + \' has been modified.\'\n         if not transaction.get().description:\n-            transaction_note(safe_unicode(msg))\n+            transaction_note(safe_text(msg))\n \n     @security.public\n     def contentEdit(self, obj, **kwargs):\ndiff --git a/Products/CMFPlone/RegistrationTool.py b/Products/CMFPlone/RegistrationTool.py\nindex 93dc132e4a..f6834fe640 100644\n--- a/Products/CMFPlone/RegistrationTool.py\n+++ b/Products/CMFPlone/RegistrationTool.py\n@@ -9,6 +9,7 @@\n from Acquisition import aq_chain\n from email import message_from_string\n from hashlib import md5\n+from plone.base.permissions import ManagePortal\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.interfaces import ISiteRoot\n from Products.CMFCore.permissions import AddPortalMember\n@@ -17,7 +18,6 @@\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n from Products.CMFPlone.interfaces import ISecuritySchema\n-from Products.CMFPlone.permissions import ManagePortal\n from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n from Products.CMFPlone.PloneTool import EMAIL_RE\n from Products.PluggableAuthService.interfaces.authservice import IPluggableAuthService  # noqa: E501\ndiff --git a/Products/CMFPlone/TranslationServiceTool.py b/Products/CMFPlone/TranslationServiceTool.py\nindex 6298e3b69e..d90cbace01 100644\n--- a/Products/CMFPlone/TranslationServiceTool.py\n+++ b/Products/CMFPlone/TranslationServiceTool.py\n@@ -15,8 +15,8 @@\n from .i18nl10n import weekdayname_msgid_abbr\n from .i18nl10n import weekdayname_msgid_short\n from OFS.SimpleItem import SimpleItem\n+from plone.base import PloneLocalesMessageFactory as PLMF\n from Products.CMFCore.utils import UniqueObject\n-from Products.CMFPlone import PloneLocalesMessageFactory as PLMF\n from Products.CMFPlone.interfaces import ITranslationServiceTool\n from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n from zope.i18n import translate\ndiff --git a/Products/CMFPlone/__init__.py b/Products/CMFPlone/__init__.py\nindex e54581a80d..9fc9eece80 100644\n--- a/Products/CMFPlone/__init__.py\n+++ b/Products/CMFPlone/__init__.py\n@@ -1,7 +1,9 @@\n from App.ImageFile import ImageFile\n+\n import os\n import sys\n import pkg_resources\n+import zope.deferredimport\n \n __version__ = pkg_resources.require("Products.CMFPlone")[0].version\n \n@@ -17,6 +19,13 @@\n \n DISCUSSION_ANNOTATION_KEY = \'plone.app.discussion:conversation\'\n \n+zope.deferredimport.initialize()\n+zope.deferredimport.deprecated(\n+    "Import from plone.base instead (to be removed in Plone 7)",\n+    PloneMessageFactory=\'plone.base:PloneMessageFactory\',\n+    PloneLocalesMessageFactory=\'plone.base:PloneMessageFactory\',\n+)\n+\n \n def initialize(context):\n \n@@ -199,16 +208,6 @@ def initialize(context):\n         visibility=None\n     )\n \n-\n-# Import PloneMessageFactory to create messages in the plone domain\n-from zope.i18nmessageid import MessageFactory\n-PloneMessageFactory = MessageFactory(\'plone\')\n-\n-# Import PloneLocalesMessageFactory to create messages in the\n-# plonelocales domain\n-from zope.i18nmessageid import MessageFactory\n-PloneLocalesMessageFactory = MessageFactory(\'plonelocales\')\n-\n # Apply early monkey patches.  For these patches, it is too late if we do this\n # in the initialize method.\n from Products.CMFPlone import earlypatches  # noqa\ndiff --git a/Products/CMFPlone/defaultpage.py b/Products/CMFPlone/defaultpage.py\nindex 626bebb829..bdf7402894 100644\n--- a/Products/CMFPlone/defaultpage.py\n+++ b/Products/CMFPlone/defaultpage.py\n@@ -1,139 +1,3 @@\n-from Acquisition import aq_base\n-from Acquisition import aq_parent\n-from Acquisition import aq_inner\n-from plone.registry.interfaces import IRegistry\n-from Products.BTreeFolder2.BTreeFolder2 import BTreeFolder2Base\n-from Products.CMFCore.interfaces import IFolderish\n-from Products.CMFCore.interfaces import ISiteRoot\n-from Products.CMFDynamicViewFTI.interfaces import IBrowserDefault\n-from Products.CMFDynamicViewFTI.interfaces import IDynamicViewTypeInformation\n-from zope.component import getUtility\n-from zope.component import queryAdapter\n-from zope.component import queryUtility\n-from zope.component import queryMultiAdapter\n+from zope.deprecation import moved\n \n-\n-def get_default_page(context):\n-    """Given a folderish item, find out if it has a default-page using\n-    the following lookup rules:\n-\n-        1. A content object called \'index_html\' wins\n-        2. Else check for IBrowserDefault, either if the container implements\n-           it or if an adapter exists. In both cases fetch its FTI and either\n-           take it if it implements IDynamicViewTypeInformation or adapt it to\n-           IDynamicViewTypeInformation. call getDefaultPage on the implementer\n-           and take value if given.\n-        3. Else, look up the attribute default_page on the object, without\n-           acquisition in place\n-        3.1 look for a content in the container with the id, no acquisition!\n-        3.2 look for a content at portal, with acquisition\n-        4. Else, look up the property default_page in site_properties for\n-           magic ids and test these\n-\n-    The id of the first matching item is then used to lookup a translation\n-    and if found, its id is returned. If no default page is set, None is\n-    returned. If a non-folderish item is passed in, return None always.\n-    """\n-    # met precondition?\n-    if not IFolderish.providedBy(context):\n-        return\n-\n-    # The ids where we look for default - must support __contains__\n-    ids = set()\n-\n-    # For BTreeFolders we just use the __contains__ otherwise build a set\n-    if isinstance(aq_base(context), BTreeFolder2Base):\n-        ids = context\n-    elif hasattr(aq_base(context), \'objectIds\'):\n-        ids = set(context.objectIds())\n-\n-    # 1. test for contentish index_html\n-    if \'index_html\' in ids:\n-        return \'index_html\'\n-\n-    # 2. Test for IBrowserDefault\n-    if IBrowserDefault.providedBy(context):\n-        browserDefault = context\n-    else:\n-        browserDefault = queryAdapter(context, IBrowserDefault)\n-\n-    if browserDefault is not None:\n-        fti = context.getTypeInfo()\n-        if fti is not None:\n-            if IDynamicViewTypeInformation.providedBy(fti):\n-                dynamic_fti = fti\n-            else:\n-                dynamic_fti = queryAdapter(fti, IDynamicViewTypeInformation)\n-            if dynamic_fti is not None:\n-                page = dynamic_fti.getDefaultPage(context, check_exists=True)\n-                if page is not None:\n-                    return page\n-\n-    # 3.1 Test for default_page attribute in folder, no acquisition\n-    pages = getattr(aq_base(context), \'default_page\', [])\n-    if isinstance(pages, str):\n-        pages = [pages]\n-    for page in pages:\n-        if page and page in ids:\n-            return page\n-\n-    portal = queryUtility(ISiteRoot)\n-    # Might happen during portal creation\n-    if portal is None:\n-        return\n-\n-    # 3.2 Test for default page in portal, acquire\n-    for page in pages:\n-        if portal.unrestrictedTraverse(page, None):\n-            return page\n-\n-    # 4. Test for default sitewide default_page setting\n-    registry = getUtility(IRegistry)\n-    for page in registry.get(\'plone.default_page\', []):\n-        if page in ids:\n-            return page\n-\n-\n-def is_default_page(container, obj):\n-    """Finds out if the given obj is the default page in its parent folder.\n-\n-    Only considers explicitly contained objects, either set as index_html,\n-    with the default_page property, or using IBrowserDefault.\n-    """\n-    parent_default_page = get_default_page(container)\n-    precondition = (\n-        parent_default_page is not None\n-        and \'/\' not in parent_default_page\n-        and hasattr(aq_base(obj), \'getId\')\n-    )\n-    return precondition and (parent_default_page == obj.getId())\n-\n-\n-def _getDefaultPageView(obj, request):\n-    """This is a nasty hack because the view lookup fails when it occurs too\n-       early in the publishing process because the request isn\'t marked with\n-       the default skin.  Explicitly marking the request appears to cause\n-       connection errors, so we just instantiate the view manually.\n-    """\n-    view = queryMultiAdapter((obj, request), name=\'default_page\')\n-    if view is None:\n-        # mask circular import\n-        from Products.CMFPlone.browser.defaultpage import DefaultPage\n-        view = DefaultPage(obj, request)\n-    return view\n-\n-\n-def check_default_page_via_view(obj, request):\n-    container = aq_parent(aq_inner(obj))\n-    if container is None:\n-        return False\n-    view = _getDefaultPageView(container, request)\n-    return view.isDefaultPage(obj)\n-\n-\n-def get_default_page_via_view(obj, request):\n-    # Short circuit if we are not looking at a Folder\n-    if not obj.isPrincipiaFolderish:\n-        return None\n-    view = _getDefaultPageView(obj, request)\n-    return view.getDefaultPage()\n+moved(\'plone.base.defaultpage\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/interfaces/__init__.py b/Products/CMFPlone/interfaces/__init__.py\nindex 318f89ae1e..cf35ad8c93 100644\n--- a/Products/CMFPlone/interfaces/__init__.py\n+++ b/Products/CMFPlone/interfaces/__init__.py\n@@ -1,69 +1,3 @@\n-# flake8: noqa\n-from Products.CMFPlone.interfaces.basetool import IPloneBaseTool\n-from Products.CMFPlone.interfaces.basetool import IPloneCatalogTool\n-from Products.CMFPlone.interfaces.basetool import IPloneTool\n-from Products.CMFPlone.interfaces.breadcrumbs import IHideFromBreadcrumbs\n-from Products.CMFPlone.interfaces.constrains import IConstrainTypes\n-from Products.CMFPlone.interfaces.constrains import ISelectableConstrainTypes\n-from Products.CMFPlone.interfaces.controlpanel import IActionSchema\n-from Products.CMFPlone.interfaces.controlpanel import IControlPanel\n-from Products.CMFPlone.interfaces.controlpanel import IDateAndTimeSchema\n-from Products.CMFPlone.interfaces.controlpanel import IEditingSchema\n-from Products.CMFPlone.interfaces.controlpanel import IFilterSchema\n-from Products.CMFPlone.interfaces.controlpanel import IImagingSchema\n-from Products.CMFPlone.interfaces.controlpanel import ILinkSchema\n-from Products.CMFPlone.interfaces.controlpanel import ILoginSchema\n-from Products.CMFPlone.interfaces.controlpanel import IMailSchema\n-from Products.CMFPlone.interfaces.controlpanel import IMaintenanceSchema\n-from Products.CMFPlone.interfaces.controlpanel import IMarkupSchema\n-from Products.CMFPlone.interfaces.controlpanel import INavigationSchema\n-from Products.CMFPlone.interfaces.controlpanel import INewActionSchema\n-from Products.CMFPlone.interfaces.controlpanel import ISearchSchema\n-from Products.CMFPlone.interfaces.controlpanel import ISecuritySchema\n-from Products.CMFPlone.interfaces.controlpanel import ISiteSchema\n-from Products.CMFPlone.interfaces.controlpanel import ISocialMediaSchema\n-from Products.CMFPlone.interfaces.controlpanel import ITinyMCEAdvancedSchema\n-from Products.CMFPlone.interfaces.controlpanel import ITinyMCELayoutSchema\n-from Products.CMFPlone.interfaces.controlpanel import ITinyMCEPluginSchema\n-from Products.CMFPlone.interfaces.controlpanel import ITinyMCEResourceTypesSchema\n-from Products.CMFPlone.interfaces.controlpanel import ITinyMCESchema\n-from Products.CMFPlone.interfaces.controlpanel import ITinyMCESpellCheckerSchema\n-from Products.CMFPlone.interfaces.controlpanel import ITypesSchema\n-from Products.CMFPlone.interfaces.controlpanel import IUserGroupsSettingsSchema\n-from Products.CMFPlone.interfaces.events import IConfigurationChangedEvent\n-from Products.CMFPlone.interfaces.events import IReorderedEvent\n-from Products.CMFPlone.interfaces.events import ISiteManagerCreatedEvent\n-from Products.CMFPlone.interfaces.installable import INonInstallable\n-from Products.CMFPlone.interfaces.interface import IInterfaceTool\n-from Products.CMFPlone.interfaces.language import ILanguage\n-from Products.CMFPlone.interfaces.login import IForcePasswordChange\n-from Products.CMFPlone.interfaces.login import IInitialLogin\n-from Products.CMFPlone.interfaces.login import ILogin\n-from Products.CMFPlone.interfaces.login import ILoginForm\n-from Products.CMFPlone.interfaces.login import ILoginFormSchema\n-from Products.CMFPlone.interfaces.login import ILoginHelpForm\n-from Products.CMFPlone.interfaces.login import ILoginHelpFormSchema\n-from Products.CMFPlone.interfaces.login import IRedirectAfterLogin\n-from Products.CMFPlone.interfaces.migration import IMigrationTool\n-from Products.CMFPlone.interfaces.password_reset import IPasswordResetToolView\n-from Products.CMFPlone.interfaces.password_reset import IPWResetTool\n-from Products.CMFPlone.interfaces.patterns import IPatternsSettings\n-from Products.CMFPlone.interfaces.properties import IPropertiesTool\n-from Products.CMFPlone.interfaces.properties import ISimpleItemWithProperties\n-from Products.CMFPlone.interfaces.resources import IBundleRegistry\n-from Products.CMFPlone.interfaces.resources import IResourceRegistry\n-from Products.CMFPlone.interfaces.siteroot import IMigratingPloneSiteRoot\n-from Products.CMFPlone.interfaces.siteroot import IPloneSiteRoot\n-from Products.CMFPlone.interfaces.siteroot import ITestCasePloneSiteRoot\n-from Products.CMFPlone.interfaces.structure import INonStructuralFolder\n-from Products.CMFPlone.interfaces.syndication import ISiteSyndicationSettings\n-from Products.CMFPlone.interfaces.translationservice import ITranslationServiceTool\n-from Products.CMFPlone.interfaces.workflow import IWorkflowChain\n+from zope.deprecation import moved\n \n-from zope.deferredimport import deprecated\n-\n-\n-deprecated(\n-    "It has been moved to plone.i18n.interfaces, import from there instead.",\n-    ILanguageSchema=\'plone.i18n.interfaces:ILanguageSchema\',\n-)\n+moved(\'plone.base.interfaces\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/atd.py b/Products/CMFPlone/interfaces/atd.py\nindex 50ea205ee3..f43019c7d8 100644\n--- a/Products/CMFPlone/interfaces/atd.py\n+++ b/Products/CMFPlone/interfaces/atd.py\n@@ -1,11 +1,3 @@\n-from zope.interface import Interface\n+from zope.deprecation import moved\n \n-\n-class IATDProxyView(Interface):\n-    """ Proxy view for the \'After the Deadline" spellchecker\n-    """\n-\n-    def checkDocument(self):\n-        """ Proxy for the AtD service\'s checkDocument function\n-            See http://www.afterthedeadline.com/api.slp for more info.\n-        """\n+moved(\'plone.base.interfaces.atd\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/basetool.py b/Products/CMFPlone/interfaces/basetool.py\nindex cff9d2cdac..2ddb20e69b 100644\n--- a/Products/CMFPlone/interfaces/basetool.py\n+++ b/Products/CMFPlone/interfaces/basetool.py\n@@ -1,16 +1,3 @@\n-from zope.interface import Interface\n+from zope.deprecation import moved\n \n-\n-class IPloneBaseTool(Interface):\n-    """Marker interface for plone tools\n-    """\n-\n-\n-class IPloneTool(Interface):\n-    """Marker interface for the plone utils tool.\n-    """\n-\n-\n-class IPloneCatalogTool(Interface):\n-    """Marker interface for Plone\'s catalog tool\n-    """\n+moved(\'plone.base.interfaces.basetool\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/breadcrumbs.py b/Products/CMFPlone/interfaces/breadcrumbs.py\nindex 005bca13ac..5be8cc296c 100644\n--- a/Products/CMFPlone/interfaces/breadcrumbs.py\n+++ b/Products/CMFPlone/interfaces/breadcrumbs.py\n@@ -1,6 +1,3 @@\n-from zope.interface import Interface\n+from zope.deprecation import moved\n \n-\n-class IHideFromBreadcrumbs(Interface):\n-    """Marker for content which should not appear in the breadcrumbs.\n-    """\n+moved(\'plone.base.interfaces.breadcrumbs\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/constrains.py b/Products/CMFPlone/interfaces/constrains.py\nindex 3686052ae3..720eed0ec3 100644\n--- a/Products/CMFPlone/interfaces/constrains.py\n+++ b/Products/CMFPlone/interfaces/constrains.py\n@@ -1,87 +1,3 @@\n-from zope.interface import Interface\n+from zope.deprecation import moved\n \n-\n-ACQUIRE = -1  # acquire locallyAllowedTypes from parent (default)\n-DISABLED = 0  # use default behavior of PortalFolder,\n-# which uses the FTI information\n-ENABLED = 1  # allow types from locallyAllowedTypes only\n-\n-\n-class IConstrainTypes(Interface):\n-    """\n-    Interface for folderish content types supporting restricting addable types\n-    on a per-instance basis.\n-    """\n-\n-    def getConstrainTypesMode():\n-        """\n-        Find out if add-restrictions are enabled. Returns 0 if they are\n-        disabled (the type\'s default FTI-set allowable types is in effect),\n-        1 if they are enabled (only a selected subset if allowed types will be\n-        available), and -1 if the allowed types should be acquired from the\n-        parent. Note that in this case, if the parent portal type is not the\n-        same as the portal type of this object, fall back on the default (same\n-        as 0)\n-        """\n-\n-    def getLocallyAllowedTypes():\n-        """\n-        Get the list of FTI ids for the types which should be allowed to be\n-        added in this container.\n-        """\n-\n-    def getImmediatelyAddableTypes():\n-        """\n-        Return a subset of the FTI ids from getLocallyAllowedTypes() which\n-        should be made most easily available.\n-        """\n-\n-    def getDefaultAddableTypes():\n-        """\n-        Return a list of FTIs which correspond to the list of FTIs available\n-        when the constraint mode = 0 (that is, the types addable without any\n-        setLocallyAllowedTypes trickery involved)\n-        """\n-\n-    def allowedContentTypes():\n-        """\n-        Return the list of currently permitted FTIs.\n-        """\n-\n-\n-class ISelectableConstrainTypes(IConstrainTypes):\n-    """\n-    Extension to the IConstrainTypes interface for content types which allow\n-    the user to set the allowable content types and immediately available\n-    types.\n-    """\n-\n-    def setConstrainTypesMode(mode):\n-        """\n-        Set how addable types is controlled in this class. If mode is 0, use\n-        the type\'s default FTI-set allowable types). If mode is 1, use only\n-        those types explicitly enabled using setLocallyAllowedTypes(). If\n-        mode is -1, acquire the allowable types from the parent. If the parent\n-        portal type is not the same as this object\'s type, fall back on the\n-        behaviour obtained if mode == 0.\n-        """\n-\n-    def setLocallyAllowedTypes(types):\n-        """\n-        Set a list of type ids which should be allowed. This must be a\n-        subset of the type\'s FTI-set allowable types. This list only comes\n-        into effect when the restrictions mode is 1 (enabled).\n-        """\n-\n-    def setImmediatelyAddableTypes(types):\n-        """\n-        Set the list of type ids which should be immediately/most easily\n-        addable. This list must be a subset of any types set in\n-        setLocallyAllowedTypes.\n-        """\n-\n-    def canSetConstrainTypes():\n-        """\n-        Return True if the current user is permitted to constrain addable\n-        types in this folderish object.\n-        """\n+moved(\'plone.base.interfaces.constrains\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/controlpanel.py b/Products/CMFPlone/interfaces/controlpanel.py\nindex 09b96721d0..a8753f3e8e 100644\n--- a/Products/CMFPlone/interfaces/controlpanel.py\n+++ b/Products/CMFPlone/interfaces/controlpanel.py\n@@ -1,1736 +1,3 @@\n-from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone._compat import dump_json_to_text\n-from Products.CMFPlone.interfaces.basetool import IPloneBaseTool\n-from zope import schema\n-from zope.deferredimport import deprecated\n-from zope.component.hooks import getSite\n-from zope.interface import Attribute\n-from zope.interface import implementer\n-from zope.interface import Interface\n-from zope.interface import Invalid\n-from zope.interface import invariant\n-from zope.schema.vocabulary import SimpleTerm\n-from zope.schema.vocabulary import SimpleVocabulary\n+from zope.deprecation import moved\n \n-import json\n-\n-\n-deprecated(\n-    "It has been moved to plone.i18n.interfaces, import from there instead.",\n-    ILanguageSchema=\'plone.i18n.interfaces:ILanguageSchema\',\n-)\n-\n-\n-ROBOTS_TXT = """Sitemap: {portal_url}/sitemap.xml.gz\n-\n-# Define access-restrictions for robots/spiders\n-# http://www.robotstxt.org/wc/norobots.html\n-\n-\n-\n-# By default we allow robots to access all areas of our site\n-# already accessible to anonymous users\n-\n-User-agent: *\n-Disallow:\n-\n-\n-\n-# Add Googlebot-specific syntax extension to exclude forms\n-# that are repeated for each piece of content in the site\n-# the wildcard is only supported by Googlebot\n-# http://www.google.com/support/webmasters/bin/answer.py?answer=40367&ctx=sibling\n-\n-User-Agent: Googlebot\n-Disallow: /*?\n-Disallow: /*atct_album_view$\n-Disallow: /*folder_factories$\n-Disallow: /*folder_summary_view$\n-Disallow: /*login_form$\n-Disallow: /*mail_password_form$\n-Disallow: /@@search\n-Disallow: /*search_rss$\n-Disallow: /*sendto_form$\n-Disallow: /*summary_view$\n-Disallow: /*thumbnail_view$\n-Disallow: /*view$\n-"""\n-\n-\n-def validate_json(value):\n-    try:\n-        json.loads(value)\n-    except ValueError as exc:\n-        class JSONError(schema.ValidationError):\n-            __doc__ = _("Must be empty or a valid JSON-formatted "\n-                        "configuration \xe2\x80\x93 ${message}.", mapping={\n-                            \'message\': str(exc)})\n-\n-        raise JSONError(value)\n-\n-    return True\n-\n-\n-class IControlPanel(IPloneBaseTool):\n-    """ Interface for the ControlPanel """\n-\n-    def registerConfiglet(id, name, action, condition=\'\', permission=\'\',  # NOQA\n-                          category=\'Plone\', visible=1, appId=None,\n-                          imageUrl=None, description=\'\', REQUEST=None):\n-        """ Registration of a Configlet """\n-\n-    def unregisterConfiglet(id):  # NOQA\n-        """ unregister Configlet """\n-\n-    def unregisterApplication(appId):  # NOQA\n-        """ unregister Application with all configlets """\n-\n-    def getGroupIds():  # NOQA\n-        """ list of the group ids """\n-\n-    def getGroups():  # NOQA\n-        """ list of groups as dicts with id and title """\n-\n-    def enumConfiglets(group=None):  # NOQA\n-        """ lists the Configlets of a group, returns them as dicts by\n-            calling .getAction() on each of them """\n-\n-\n-class IEditingSchema(Interface):\n-\n-    available_editors = schema.List(\n-        title=_(\'Available editors\'),\n-        description=_(\'Available editors in the portal.\'),\n-        default=[\'TinyMCE\', \'None\'],\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        required=True\n-    )\n-\n-    default_editor = schema.Choice(\n-        title=_(\'Default editor\'),\n-        description=_(\n-            \'Select the default wysiwyg \'\n-            \'editor. Users will be able to choose their \'\n-            \'own or select to use the site default.\'),\n-        default=\'TinyMCE\',\n-        missing_value=set(),\n-        vocabulary=\'plone.app.vocabularies.AvailableEditors\',\n-        required=True)\n-\n-    ext_editor = schema.Bool(\n-        title=_(\'Enable External Editor feature\'),\n-        description=_(\n-            \'Determines if the external editor \'\n-            \'feature is enabled. This feature requires a \'\n-            \'special client-side application installed. The \'\n-            \'users also have to enable this in their \'\n-            \'preferences.\'),\n-        default=False,\n-        required=False)\n-\n-    enable_link_integrity_checks = schema.Bool(\n-        title=_(\'Enable link integrity checks\'),\n-        description=_(\n-            \'Determines if the users should get \'\n-            \'warnings when they delete or move content that \'\n-            \'is linked from inside the site.\'),\n-        default=True,\n-        required=False)\n-\n-    lock_on_ttw_edit = schema.Bool(\n-        title=_(\'Enable locking for through-the-web edits\'),\n-        description=_(\n-            \'Disabling locking here will only \'\n-            \'affect users editing content through the \'\n-            \'Plone web UI.  Content edited via WebDAV \'\n-            \'clients will still be subject to locking.\'),\n-        default=True,\n-        required=False)\n-\n-    subjects_of_navigation_root = schema.Bool(\n-        title=_(\'Limit tags/keywords to the current navigation root\'),\n-        description=_(\n-            \'Limit tags aka keywords vocabulary used for Tags field and \'\n-            \'in searches to the terms used inside the subtree of the current \'\n-            "navigation root. This can be used together with Plone\'s "\n-            \'multilingual extension plone.app.multilingual to only offer \'\n-            \'keywords of the current selected language. Other addons may \'\n-            \'utilize this feature for its specific purposes.\'),\n-        default=False,\n-        required=False)\n-\n-\n-class ITagAttrPair(Interface):\n-    tags = schema.TextLine(title=\'tags\')\n-    attributes = schema.TextLine(title=\'attributes\')\n-\n-\n-@implementer(ITagAttrPair)\n-class TagAttrPair:\n-\n-    def __init__(self, tags=\'\', attributes=\'\'):\n-        self.tags = tags\n-        self.attributes = attributes\n-\n-\n-class IFilterSchema(Interface):\n-    """Combined schema for the adapter lookup.\n-    """\n-\n-    # class IFilterTagsSchema(Interface):\n-\n-    disable_filtering = schema.Bool(\n-        title=_(\'Disable HTML filtering\'),\n-        description=_(\'Warning: disabling this can be dangerous. \'\n-                      \'Only disable if you know what you are doing.\'),\n-        default=False,\n-        required=False)\n-\n-    nasty_tags = schema.List(\n-        title=_(\'Nasty tags\'),\n-        description=_(\'These tags and their content are completely blocked \'\n-                      \'when a page is saved or rendered. They are only deleted\'\n-                      \' if they are not marked as valid_tags\'),\n-        default=[\'style\', \'object\', \'embed\', \'applet\', \'script\', \'meta\'],\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        required=False)\n-\n-    valid_tags = schema.List(\n-        title=_(\'Valid tags\'),\n-        description=_(\'A list of valid tags which will be not filtered out.\'),\n-        default=[\n-            \'a\',\n-            \'abbr\',\n-            \'acronym\',\n-            \'address\',\n-            \'article\',\n-            \'aside\',\n-            \'audio\',\n-            \'b\',\n-            \'bdo\',\n-            \'big\',\n-            \'blockquote\',\n-            \'body\',\n-            \'br\',\n-            \'canvas\',\n-            \'caption\',\n-            \'cite\',\n-            \'code\',\n-            \'col\',\n-            \'colgroup\',\n-            \'command\',\n-            \'datalist\',\n-            \'dd\',\n-            \'del\',\n-            \'details\',\n-            \'dfn\',\n-            \'dialog\',\n-            \'div\',\n-            \'dl\',\n-            \'dt\',\n-            \'em\',\n-            \'figure\',\n-            \'figcaption\',\n-            \'footer\',\n-            \'h1\',\n-            \'h2\',\n-            \'h3\',\n-            \'h4\',\n-            \'h5\',\n-            \'h6\',\n-            \'head\',\n-            \'header\',\n-            \'hgroup\',\n-            \'hr\',\n-            \'html\',\n-            \'i\',\n-            \'iframe\',\n-            \'img\',\n-            \'ins\',\n-            \'kbd\',\n-            \'keygen\',\n-            \'li\',\n-            \'map\',\n-            \'mark\',\n-            \'meter\',\n-            \'nav\',\n-            \'ol\',\n-            \'output\',\n-            \'p\',\n-            \'pre\',\n-            \'progress\',\n-            \'q\',\n-            \'rp\',\n-            \'rt\',\n-            \'ruby\',\n-            \'samp\',\n-            \'section\',\n-            \'small\',\n-            \'source\',\n-            \'span\',\n-            \'strong\',\n-            \'sub\',\n-            \'sup\',\n-            \'table\',\n-            \'tbody\',\n-            \'td\',\n-            \'tfoot\',\n-            \'th\',\n-            \'thead\',\n-            \'time\',\n-            \'title\',\n-            \'tr\',\n-            \'tt\',\n-            \'u\',\n-            \'ul\',\n-            \'var\',\n-            \'video\',\n-        ],\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        required=False)\n-\n-    custom_attributes = schema.List(\n-        title=_(\'Custom attributes\'),\n-        description=_(\'These attributes are additionally allowed.\'),\n-        default=[\'style\'],\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        required=False)\n-\n-\n-class ITinyMCELayoutSchema(Interface):\n-    """This interface defines the layout properties."""\n-\n-    resizing = schema.Bool(\n-        title=_(\'Enable resizing the editor window.\'),\n-        description=_(\'This option gives you the ability to enable/disable \'\n-                      \'resizing the editor window. \'),\n-        default=True,\n-        required=False)\n-\n-    autoresize = schema.Bool(\n-        title=_(\'Enable auto resizing of the editor window.\'),\n-        description=_(\'This option gives you the ability to enable/disable \'\n-                      \'auto resizing the editor window depending \'\n-                      \'on the content.\'),\n-        default=False,\n-        required=False)\n-\n-    # TODO: add validation to assert % and px in the value\n-    editor_width = schema.TextLine(\n-        title=_(\'Editor width\'),\n-        description=_(\'This option gives you the ability to specify the \'\n-                      \'width of the editor (like 100% or 400px).\'),\n-        default=None,\n-        required=False)\n-\n-    # TODO: add validation to assert % and px in the value\n-    editor_height = schema.TextLine(\n-        title=_(\'Editor height\'),\n-        description=_(\'This option gives you the ability to specify the \'\n-                      \'height of the editor in pixels. \'\n-                      \'If auto resize is enabled this value is used \'\n-                      \'as minimum height.\'),\n-        default=None,\n-        required=False)\n-\n-    content_css = schema.List(\n-        title=_(\'Choose the CSS used in WYSIWYG Editor Area\'),\n-        description=_(\'This option enables you to specify a custom CSS file \'\n-                      \'that provides content CSS. \'\n-                      \'This CSS file is the one used within the editor \'\n-                      \'(the editable area). In addition to what is listed, \'\n-                      \'here the plone bundle CSS and diazo themes using the \'\n-                      \'tinymce-content-css setting are also added.\'),\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        default=[\n-            \'++plone++static/components/tinymce/\'\n-            \'skins/lightgray/content.min.css\'\n-        ],\n-        required=False)\n-\n-    header_styles = schema.List(\n-        title=_(\'Header styles\'),\n-        description=_(\'Name|tag\'),\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        default=[\n-            \'Header 1|h1\',\n-            \'Header 2|h2\',\n-            \'Header 3|h3\',\n-            \'Header 4|h4\',\n-            \'Header 5|h5\',\n-            \'Header 6|h6\'\n-        ])\n-\n-    inline_styles = schema.List(\n-        title=_(\'Inline styles\'),\n-        description=_(\'Name|format|icon\'),\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        default=[\n-            \'Bold|bold|bold\',\n-            \'Italic|italic|italic\',\n-            \'Underline|underline|underline\',\n-            \'Strikethrough|strikethrough|strikethrough\',\n-            \'Superscript|superscript|superscript\',\n-            \'Subscript|subscript|subscript\',\n-            \'Code|code|code\'])\n-\n-    block_styles = schema.List(\n-        title=_(\'Block styles\'),\n-        description=_(\'Name|format\'),\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        default=[\n-            \'Paragraph|p\',\n-            \'Blockquote|blockquote\',\n-            \'Div|div\',\n-            \'Pre|pre\'])\n-\n-    alignment_styles = schema.List(\n-        title=_(\'Alignment styles\'),\n-        description=_(\'Name|format|icon\'),\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        default=[\n-            \'Left|alignleft|alignleft\',\n-            \'Center|aligncenter|aligncenter\',\n-            \'Right|alignright|alignright\',\n-            \'Justify|alignjustify|alignjustify\'])\n-\n-    table_styles = schema.List(\n-        title=_(\'Table styles\'),\n-        description=_(\'Name|class\'),\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        default=[\n-            \'Listing|listing\',\n-            \'Invisible Grid|invisible-grid\'\n-        ])\n-\n-    formats = schema.Text(\n-        title=_(\'Formats\'),\n-        description=_(\n-            \'Enter a JSON-formatted style format configuration. \'\n-            \'A format is for example the style that get applied when \'\n-            \'you press the bold button inside the editor. \'\n-            \'See https://www.tinymce.com/docs/configure/content-formatting/#formats\'),  # NOQA: E501\n-        constraint=validate_json,\n-        default=dump_json_to_text({\n-            \'discreet\': {\'inline\': \'span\', \'classes\': \'discreet\'},\n-            \'clearfix\': {\'block\': \'div\', \'classes\': \'clearfix\'}\n-        }),\n-        required=True,\n-    )\n-\n-\n-class ITinyMCEPluginSchema(Interface):\n-    """This interface defines the toolbar properties."""\n-\n-    plugins = schema.List(\n-        title=_(\'label_tinymce_plugins\', default=\'Editor plugins\'),\n-        description=_(\'help_tinymce_plugins\', default=(\n-            \'Select plugins to include with tinymce\')),\n-        value_type=schema.Choice(vocabulary=SimpleVocabulary([\n-            SimpleTerm(\'advlist\', \'advlist\', \'advlist\'),\n-            SimpleTerm(\'anchor\', \'anchor\', \'anchor\'),\n-            SimpleTerm(\'autosave\', \'autosave\', \'autosave\'),\n-            SimpleTerm(\'charmap\', \'charmap\', \'charmap\'),\n-            SimpleTerm(\'code\', \'code\', \'code\'),\n-            SimpleTerm(\'colorpicker\', \'colorpicker\', \'colorpicker\'),\n-            SimpleTerm(\'contextmenu\', \'contextmenu\', \'contextmenu\'),\n-            SimpleTerm(\'directionality\', \'directionality\', \'directionality\'),\n-            SimpleTerm(\'emoticons\', \'emoticons\', \'emoticons\'),\n-            SimpleTerm(\'fullpage\', \'fullpage\', \'fullpage\'),\n-            SimpleTerm(\'fullscreen\', \'fullscreen\', \'fullscreen\'),\n-            SimpleTerm(\'hr\', \'hr\', \'hr\'),\n-            SimpleTerm(\'insertdatetime\', \'insertdatetime\', \'insertdatetime\'),\n-            SimpleTerm(\'layer\', \'layer\', \'layer\'),\n-            SimpleTerm(\'lists\', \'lists\', \'lists\'),\n-            SimpleTerm(\'media\', \'media\', \'media\'),\n-            SimpleTerm(\'nonbreaking\', \'nonbreaking\', \'nonbreaking\'),\n-            SimpleTerm(\'noneditable\', \'noneditable\', \'noneditable\'),\n-            SimpleTerm(\'pagebreak\', \'pagebreak\', \'pagebreak\'),\n-            SimpleTerm(\'paste\', \'paste\', \'paste\'),\n-            SimpleTerm(\'preview\', \'preview\', \'preview\'),\n-            SimpleTerm(\'print\', \'print\', \'print\'),\n-            # XXX disable save button since it is not implemeneted\n-            # SimpleTerm(\'save\', \'save\', u\'save\'),\n-            SimpleTerm(\'searchreplace\', \'searchreplace\', \'searchreplace\'),\n-            SimpleTerm(\'tabfocus\', \'tabfocus\', \'tabfocus\'),\n-            SimpleTerm(\'table\', \'table\', \'table\'),\n-            SimpleTerm(\'textcolor\', \'textcolor\', \'textcolor\'),\n-            SimpleTerm(\'textpattern\', \'textpattern\', \'textpattern\'),\n-            SimpleTerm(\'visualblocks\', \'visualblocks\', \'visualblocks\'),\n-            SimpleTerm(\'visualchars\', \'visualchars\', \'visualchars\'),\n-            SimpleTerm(\'wordcount\', \'wordcount\', \'wordcount\')\n-        ])),\n-        default=[\'advlist\', \'fullscreen\', \'hr\', \'lists\', \'media\',\n-                 \'nonbreaking\', \'noneditable\', \'pagebreak\', \'paste\', \'preview\',\n-                 \'print\', \'searchreplace\', \'tabfocus\', \'table\',\n-                 \'visualchars\', \'wordcount\', \'code\'],\n-        missing_value=[],\n-        required=False)\n-\n-    menubar = schema.List(\n-        title=_(\'label_tinymce_menubar\', default=\'Menubar\'),\n-        description=_(\'help_tinymce_menubar\', default=(\n-            \'Enter what items you would like in the menu bar.\')),\n-        required=True,\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        default=[\n-            \'edit\', \'table\', \'format\',\n-            \'tools\' \'view\', \'insert\'])\n-\n-    menu = schema.Text(\n-        title=_(\'label_tinymce_menu\', \'Menu\'),\n-        description=_(\'hint_tinymce_menu\',\n-                      default=\'JSON formatted Menu configuration.\'),\n-        constraint=validate_json,\n-        default=dump_json_to_text({\n-            \'edit\': {\n-                \'title\': \'Edit\',\n-                \'items\': \'undo redo | cut copy paste pastetext | \'\n-                         \'searchreplace textpattern selectall | textcolor\'},\n-            \'insert\': {\'title\': \'Insert\', \'items\': \'link media | template hr\'},\n-            \'view\': {\n-                \'title\': \'View\',\n-                \'items\': \'visualaid visualchars visualblocks preview \'\n-                         \'fullpage fullscreen\',\n-            },\n-            \'format\': {\n-                \'title\': \'Format\',\n-                \'items\': \'bold italic underline strikethrough \'\n-                         \'superscript subscript | formats | removeformat\'\n-            },\n-            \'table\': {\n-                \'title\': \'Table\',\n-                \'items\': \'inserttable tableprops deletetable | cell row column\'\n-            },\n-            \'tools\': {\n-                \'title\': \'Tools\',\n-                \'items\': \'spellchecker charmap emoticons insertdatetime \'\n-                         \'layer code\'\n-            }\n-        })\n-    )\n-\n-    templates = schema.Text(\n-        title=_(\'label_tinymce_templates\', default=\'Templates\'),\n-        description=_(\n-            \'help_tinymce_templates\',\n-            default=(\n-                \'Enter the list of templates in json format \'\n-                \'https://www.tinymce.com/docs/plugins/template/\'\n-            )\n-        ),\n-        required=False,\n-        constraint=validate_json,\n-        default=dump_json_to_text({}))\n-\n-    toolbar = schema.Text(\n-        title=_(\'label_tinymce_toolbar\', default=\'Toolbar\'),\n-        description=_(\'help_tinymce_toolbar\', default=(\n-            \'Enter how you would like the toolbar items to list.\')),\n-        required=True,\n-        default=\'ltr rtl | undo redo | styleselect | bold italic | \'\n-                \'alignleft aligncenter alignright alignjustify | \'\n-                \'bullist numlist outdent indent | \'\n-                \'unlink plonelink ploneimage\')\n-\n-    custom_plugins = schema.List(\n-        title=_(\'Custom plugins\'),\n-        description=_(\'Enter a list of custom plugins which will be loaded \'\n-                      \'in the editor. Format is \'\n-                      \'pluginname|location, one per line.\'),\n-        required=False,\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        default=[])\n-\n-    custom_buttons = schema.List(\n-        title=_(\'Custom buttons\'),\n-        description=_(\n-            \'Enter a list of custom buttons which will be added to toolbar\'),\n-        required=False,\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        default=[])\n-\n-\n-ITinyMCELibrariesSchema = ITinyMCEPluginSchema  # bw compat\n-\n-\n-class ITinyMCESpellCheckerSchema(Interface):\n-    """This interface defines the libraries properties."""\n-\n-    libraries_spellchecker_choice = schema.Choice(\n-        title=_(\'Spellchecker plugin to use\'),\n-        description=_(\'This option allows you to choose the spellchecker for \'\n-                      \'TinyMCE.\'),\n-        missing_value=set(),\n-        vocabulary=SimpleVocabulary([\n-            SimpleTerm(\'browser\', \'browser\',\n-                       _(\'Default browser spellchecker\')),\n-            SimpleTerm(\'AtD\', \'AtD\',\n-                       _(\'After the deadline (FLOSS)\')),\n-        ]),\n-        default=\'browser\',\n-        required=False)\n-\n-    libraries_atd_ignore_strings = schema.List(\n-        title=_(\'AtD ignore strings\'),\n-        description=_(\n-            \'label_atd_ignore_strings\',\n-            default=\'A list of strings which the "After the Deadline" \'\n-                    \'spellchecker should ignore. \'\n-                    \'Note: This option is only applicable when the \'\n-                    \'appropriate spellchecker has been chosen above.\'),\n-        default=[\n-            \'Zope\',\n-            \'Plone\',\n-            \'TinyMCE\'],\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        required=False)\n-\n-    libraries_atd_show_types = schema.List(\n-        title=_(\'AtD error types to show\'),\n-        description=_(\n-            \'help_atderrortypes_to_show\',\n-            default=\'A list of error types which the \'\n-                    \'"After the Deadline" spellchecker should check for. \'\n-                    \'By default, all the available error type will be \'\n-                    \'listed here.\'),\n-        value_type=schema.TextLine(),\n-        default=[\n-            \'Bias Language\',\n-            \'Cliches\',\n-            \'Complex Expression\',\n-            \'Diacritical Marks\',\n-            \'Double Negatives\',\n-            \'Hidden Verbs\',\n-            \'Jargon Language\',\n-            \'Passive voice\',\n-            \'Phrases to Avoid\',\n-            \'Redundant Expression\'],\n-        missing_value=[],\n-        required=False)\n-\n-    libraries_atd_service_url = schema.TextLine(\n-        title=_(\'AtD service URL\'),\n-        description=_(\n-            \'help_atd_service_url\',\n-            default=\'The URL of the "After the Deadline" grammar and spell \'\n-                    \'checking server. \'\n-                    \'The default value is the public server, \'\n-                    \'but ideally you should download and install your own \'\n-                    \'and specify its address here.\'),\n-        required=True,\n-        default=\'service.afterthedeadline.com\',)\n-\n-\n-class ITinyMCEResourceTypesSchema(Interface):\n-    """This interface defines the resource types properties."""\n-\n-    # XXX Not implemented in new tinymce version. Need to decide about this\n-    # rooted = schema.Bool(\n-    #    title=_(u"Rooted to current object"),\n-    #    description=_(u"When enabled the user will be rooted to the current "\n-    #                  "object and can\'t add links and images from other "\n-    #                  "parts of the site."),\n-    #    default=False,\n-    #    required=False)\n-\n-    contains_objects = schema.List(\n-        title=_(\'Contains objects\'),\n-        description=_(\'Enter a list of content types which can contain other \'\n-                      \'objects. Format is one contenttype per line.\'),\n-        value_type=schema.TextLine(),\n-        default=[\n-            \'Folder\',\n-            \'Large Plone Folder\',\n-            \'Plone Site\'],\n-        missing_value=[],\n-        required=False)\n-\n-    image_objects = schema.List(\n-        title=_(\'Image objects\'),\n-        description=_(\'Enter a list of content types which can be used as \'\n-                      \'images. Format is one contenttype per line.\'),\n-        default=[\'Image\'],\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        required=False)\n-\n-    entity_encoding = schema.Choice(\n-        title=_(\'Entity encoding\'),\n-        description=_(\n-            \'This option controls how entities/characters get processed. \'\n-            \'Named: Characters will be converted into named entities \'\n-            \'based on the entities option. \'\n-            \'Numeric: Characters will be converted into numeric entities. \'\n-            \'Raw: All characters will be stored in non-entity form \'\n-            \'except these XML default entities: amp lt gt quot\'),\n-        missing_value=set(),\n-        vocabulary=SimpleVocabulary(\n-            [SimpleTerm(\'named\', \'named\', _(\'Named\')),\n-             SimpleTerm(\'numeric\', \'numeric\', _(\'Numeric\')),\n-             SimpleTerm(\'raw\', \'raw\', _(\'Raw\'))]),\n-        default="raw",\n-        required=False)\n-\n-\n-class ITinyMCEAdvancedSchema(Interface):\n-    """This interface defines the resource types properties."""\n-\n-    other_settings = schema.Text(\n-        title=_(\'label_tinymce_other_settings\', \'Other settings\'),\n-        description=_(\n-            \'hint_tinymce_other_settings\',\n-            default=\'Other TinyMCE configuration formatted as JSON.\'\n-        ),\n-        required=False,\n-        constraint=validate_json,\n-        default=dump_json_to_text({}),\n-    )\n-\n-\n-class ITinyMCESchema(\n-    ITinyMCELayoutSchema,\n-    ITinyMCEPluginSchema,\n-    ITinyMCESpellCheckerSchema,\n-    ITinyMCEResourceTypesSchema,\n-    ITinyMCEAdvancedSchema\n-):\n-    """TinyMCE Schema"""\n-\n-\n-class IMaintenanceSchema(Interface):\n-\n-    days = schema.Int(\n-        title=_(\'Days of object history to keep after packing\'),\n-        description=_(\n-            \'You should pack your database regularly. This number \'\n-            \'indicates how many days of undo history you want to \'\n-            \'keep. It is unrelated to versioning, so even if you \'\n-            \'pack the database, the history of the content changes \'\n-            \'will be kept. Recommended value is 7 days.\'\n-        ),\n-        default=7,\n-        min=0,\n-        required=True\n-    )\n-\n-\n-class INavigationSchema(Interface):\n-\n-    navigation_depth = schema.Int(\n-        title=_(\'Navigation depth\'),\n-        description=_(\'Number of folder levels to show in the navigation.\'),\n-        default=3,\n-        required=True\n-    )\n-\n-    generate_tabs = schema.Bool(\n-        title=_(\'Automatically generate tabs\'),\n-        description=_(\n-            \'By default, all items created at the root level will \'\n-            \'appear as tabs. You can turn this off if you prefer manually \'\n-            \'constructing this part of the navigation.\'),\n-        default=True,\n-        required=False)\n-\n-    nonfolderish_tabs = schema.Bool(\n-        title=_(\'Generate tabs for items other than folders.\'),\n-        description=_(\n-            \'By default, any content item in the root of the portal will \'\n-            \'appear as a tab. If you turn this option off, only folders \'\n-            \'will be shown. This only has an effect if \\\'automatically \'\n-            \'generate tabs\\\' is enabled.\'),\n-        default=True,\n-        required=False)\n-\n-    sort_tabs_on = schema.Choice(\n-        title=_(\'Sort tabs on\'),\n-        description=_(\n-            \'Index used to sort the tabs\'\n-        ),\n-        required=True,\n-        default=\'getObjPositionInParent\',\n-        vocabulary=SimpleVocabulary([\n-            # there is no vocabulary of sortable indexes by now, so hard code\n-            # some options here\n-            SimpleTerm(\n-                \'getObjPositionInParent\',\n-                \'getObjPositionInParent\',\n-                _(\'Position in Parent\')\n-            ),\n-            SimpleTerm(\n-                \'sortable_title\',\n-                \'sortable_title\',\n-                _(\'Title\')\n-            ),\n-            SimpleTerm(\n-                \'getId\',\n-                \'getId\',\n-                _(\'Short Name (ID)\')\n-            ),\n-        ]),\n-    )\n-    sort_tabs_reversed = schema.Bool(\n-        title=_(\'Reversed sort order for tabs.\'),\n-        description=_(\n-            \'Sort tabs in descending.\'),\n-        default=False,\n-        required=False)\n-\n-    displayed_types = schema.Tuple(\n-        title=_(\'Displayed content types\'),\n-        description=_(\n-            \'The content types that should be shown in the navigation and \'\n-            \'site map.\'),\n-        required=False,\n-        default=(\n-            \'Image\',\n-            \'File\',\n-            \'Link\',\n-            \'News Item\',\n-            \'Folder\',\n-            \'Document\',\n-            \'Event\'\n-        ),\n-        missing_value=(),\n-        value_type=schema.Choice(\n-            source=\'plone.app.vocabularies.ReallyUserFriendlyTypes\'\n-        ))\n-\n-    filter_on_workflow = schema.Bool(\n-        title=_(\'Filter on workflow state\'),\n-        description=_(\n-            \'The workflow states that should be shown in the navigation \'\n-            \'and the site map.\'),\n-        default=False,\n-        required=False)\n-\n-    workflow_states_to_show = schema.Tuple(\n-        required=False,\n-        default=(),\n-        missing_value=(),\n-        value_type=schema.Choice(\n-            source=\'plone.app.vocabularies.WorkflowStates\'))\n-\n-    show_excluded_items = schema.Bool(\n-        title=_(\n-            \'Show items normally excluded from navigation if viewing their \'\n-            \'children.\'),\n-        description=_(\n-            \'If an item has been excluded from navigation should it be \'\n-            \'shown in navigation when viewing content contained within it \'\n-            \'or within a subfolder.\'),\n-        default=False,\n-        required=False)\n-\n-    root = schema.TextLine(\n-        title=_(\n-            \'Root\'),\n-        description=_(\n-            \'Path to be used as navigation root, relative to Plone site root.\'\n-            \'Starts with \\\'/\\\'\'\n-        ),\n-        default=\'/\',\n-        required=True\n-    )\n-\n-    sitemap_depth = schema.Int(\n-        title=_(\'Sitemap depth\'),\n-        description=_(\'Number of folder levels to show in the site map.\'),\n-        default=3,\n-        required=True\n-    )\n-\n-    parent_types_not_to_query = schema.List(\n-        title=_(\'Hide children of these types\'),\n-        description=_(\n-            \'Hide content inside the following types in Navigation.\'),\n-        default=[\'TempFolder\'],\n-        value_type=schema.TextLine(),\n-        missing_value=(),\n-        required=False,\n-    )\n-\n-\n-class ISearchSchema(Interface):\n-\n-    enable_livesearch = schema.Bool(\n-        title=_(\'Enable LiveSearch\'),\n-        description=_(\n-            \'Enables the LiveSearch feature, which shows live \'\n-            \'results if the browser supports JavaScript.\'),\n-        default=True,\n-        required=False\n-    )\n-\n-    types_not_searched = schema.Tuple(\n-        title=_(\'Define the types to be shown in the site and searched\'),\n-        description=_(\n-            \'Define the types that should be searched and be \'\n-            \'available in the user facing part of the site. \'\n-            \'Note that if new content types are installed, they \'\n-            \'will be enabled by default unless explicitly turned \'\n-            \'off here or by the relevant installer.\'\n-        ),\n-        required=False,\n-        default=(\n-            \'Discussion Item\',\n-            \'Plone Site\',\n-            \'TempFolder\',\n-        ),\n-        missing_value=(),\n-        value_type=schema.Choice(\n-            source=\'plone.app.vocabularies.PortalTypes\'\n-        ),\n-    )\n-\n-    search_results_description_length = schema.Int(\n-        title=_(\'Crop the item description in search result listings \'\n-                \'after a number of characters.\'),\n-        required=False,\n-        default=160,\n-    )\n-\n-    sort_on = schema.Choice(\n-        title=_(\'label_sort_on\', default=\'Sort on\'),\n-        description=_(\'Sort the default search on this index\'),\n-        vocabulary=SimpleVocabulary([\n-            SimpleTerm(\'relevance\', \'relevance\', _(\'relevance\')),\n-            SimpleTerm(\'Date\', \'Date\', _(\'date (newest first)\')),\n-            SimpleTerm(\'sortable_title\', \'sortable_title\',\n-                       _(\'alphabetically\'))]),\n-        default=\'relevance\',\n-        required=True\n-    )\n-\n-\n-class ISecuritySchema(Interface):\n-\n-    enable_self_reg = schema.Bool(\n-        title=_(\'Enable self-registration\'),\n-        description=_(\n-            \'Allows users to register themselves on the site. If \'\n-            \'not selected, only site managers can add new users.\'),\n-        default=False,\n-        required=False)\n-\n-    enable_user_pwd_choice = schema.Bool(\n-        title=_(\'Let users select their own passwords\'),\n-        description=_(\n-            \'If not selected, a URL will be generated and \'\n-            \'e-mailed. Users are instructed to follow the link to \'\n-            \'reach a page where they can change their password and \'\n-            \'complete the registration process; this also verifies \'\n-            \'that they have entered a valid email address.\'),\n-        default=False,\n-        required=False)\n-\n-    enable_user_folders = schema.Bool(\n-        title=_(\'Enable User Folders\'),\n-        description=_(\n-            \'If selected, home folders where users can create \'\n-            \'content will be created when they log in.\'),\n-        default=False,\n-        required=False)\n-\n-    allow_anon_views_about = schema.Bool(\n-        title=_(\'Allow anyone to view \\\'about\\\' information\'),\n-        description=_(\n-            \'If not selected only logged-in users will be able to \'\n-            \'view information about who created an item and when it \'\n-            \'was modified.\'),\n-        default=False,\n-        required=False)\n-\n-    use_email_as_login = schema.Bool(\n-        title=_(\'Use email address as login name\'),\n-        description=_(\n-            \'Allows users to login with their email address instead \'\n-            \'of specifying a separate login name. This also updates \'\n-            \'the login name of existing users, which may take a \'\n-            \'while on large sites. The login name is saved as \'\n-            \'lower case, but to be userfriendly it does not matter \'\n-            \'which case you use to login. When duplicates are found, \'\n-            \'saving this form will fail. You can use the \'\n-            \'@@migrate-to-emaillogin page to show the duplicates.\'),\n-        default=False,\n-        required=False)\n-\n-    use_uuid_as_userid = schema.Bool(\n-        title=_(\'Use UUID user ids\'),\n-        description=_(\n-            \'Use automatically generated UUIDs as user id for new users. \'\n-            \'When not turned on, the default is to use the same as the \'\n-            \'login name, or when using the email address as login name we \'\n-            \'generate a user id based on the fullname.\'),\n-        default=False,\n-        required=False)\n-\n-    autologin_after_password_reset = schema.Bool(\n-        title=_(\'Login user after password reset\'),\n-        description=_(\n-            \'After successful password reset the user will be logged \'\n-            \'in automatically.\'),\n-        default=True,\n-        required=False)\n-\n-\n-class ISiteSchema(Interface):\n-\n-    site_title = schema.TextLine(\n-        title=_(\'Site title\'),\n-        description=_(\n-            \'This shows up in the title bar of \'\n-            \'browsers and in syndication feeds.\'),\n-        default=\'Plone site\')\n-\n-    site_logo = schema.Bytes(\n-        title=_(\'Site Logo\'),\n-        description=_(\'This shows a custom logo on your site.\'),\n-        required=False,\n-    )\n-\n-    exposeDCMetaTags = schema.Bool(\n-        title=_(\'Expose Dublin Core metadata\'),\n-        description=_(\'Exposes the Dublin Core properties as metatags.\'),\n-        default=False,\n-        required=False)\n-\n-    enable_sitemap = schema.Bool(\n-        title=_(\'Expose sitemap.xml.gz\'),\n-        description=_(\n-            \'Exposes your content as a file \'\n-            \'according to the \'\n-            \'<a href=\\\'http://sitemaps.org\\\'>sitemaps.org</a> \'\n-            \'standard. You \'\n-            \'can submit this to compliant search engines \'\n-            \'like Google, Yahoo and Microsoft. It allows \'\n-            \'these search engines to more intelligently \'\n-            \'crawl your site.\'),\n-        default=False,\n-        required=False)\n-\n-    webstats_js = schema.SourceText(\n-        title=_(\'JavaScript for web statistics support\'),\n-        description=_(\n-            \'For enabling web statistics support \'\n-            \'from external providers (e.g. Google \'\n-            \'Analytics). Paste the provided code snippet here. \'\n-            \'It will be rendered as \'\n-            \'entered near the end of the page.\'),\n-        default=\'\',\n-        required=False)\n-\n-    display_publication_date_in_byline = schema.Bool(\n-        title=_(\'Display publication date\'),\n-        description=_(\n-            \'Show in the byline the date a content item was published.\'),\n-        default=False,\n-        required=False)\n-\n-    icon_visibility = schema.Choice(\n-        title=_(\'Icon visibility\'),\n-        description=_(\'Show icons in listings\'),\n-        default=\'enabled\',\n-        vocabulary=SimpleVocabulary([\n-            SimpleTerm(\'false\', \'false\', _(\'Never\')),\n-            SimpleTerm(\'enabled\', \'enabled\', _(\'Always\')),\n-            SimpleTerm(\'authenticated\', \'authenticated\',\n-                       _(\'For authenticated users only\'))]),\n-        required=True)\n-\n-    thumb_visibility = schema.Choice(\n-        title=_(\'Thumb visibility\'),\n-        description=_(\'Show thumbnail images in listings\'),\n-        default=\'enabled\',\n-        vocabulary=SimpleVocabulary([\n-            SimpleTerm(\'false\', \'false\', _(\'Never\')),\n-            SimpleTerm(\'enabled\', \'enabled\', _(\'Always\')),\n-            SimpleTerm(\'authenticated\', \'authenticated\',\n-                       _(\'For authenticated users only\'))]),\n-        required=True)\n-\n-    no_thumbs_portlet = schema.Bool(\n-        title=_(\'No Thumbs in portlets\'),\n-        description=_(\n-            \'Suppress thumbs in all portlets;\'\n-            \' this default can be overridden individually \'\n-            \'in selected portlets\'),\n-        default=False,\n-        required=False)\n-\n-    no_thumbs_lists = schema.Bool(\n-        title=_(\'No thumbs in list views\'),\n-        description=_(\'Suppress thumbs in all list views; \'\n-                      \'this default can be overriden individually\'),\n-        default=False,\n-        required=False)\n-\n-    no_thumbs_summary = schema.Bool(\n-        title=_(\'No thumbs in summary views\'),\n-        description=_(\'Suppress thumbs in all summary views; \'\n-                      \'this default can be overriden individually\'),\n-        default=False,\n-        required=False)\n-\n-    no_thumbs_tables = schema.Bool(\n-        title=_(\'No thumbs in table views\'), description=_(\n-            \'Suppress thumbs in all tableviews and in folder contents view; \'\n-            \'this default can be overriden individually\'),\n-        default=False,\n-        required=False)\n-\n-    thumb_scale_portlet = schema.Choice(\n-        title=_(\'Thumb scale for portlets\'),\n-        description=_(\'This default can be overriden individually.\'),\n-        default=\'icon\',\n-        vocabulary=\'plone.app.vocabularies.ImagesScales\',\n-        required=True)\n-\n-    thumb_scale_listing = schema.Choice(\n-        title=_(\'Thumb scale for listings\'),\n-        description=_(\'E.g. standard view;\'\n-                      \' This default can be overriden individually.\'),\n-        default=\'thumb\',\n-        vocabulary=\'plone.app.vocabularies.ImagesScales\',\n-        required=True)\n-\n-    thumb_scale_table = schema.Choice(\n-        title=_(\'Thumb scale for tables\'),\n-        description=_(\'E.g., tabular view, folder content listing;\'\n-                      \' This default can be overriden individually.\'),\n-        default=\'tile\',\n-        vocabulary=\'plone.app.vocabularies.ImagesScales\',\n-        required=True)\n-\n-    thumb_scale_summary = schema.Choice(\n-        title=_(\'Thumb scale for summary view\'),\n-        description=_(\'This default can be overriden individually.\'),\n-        default=\'mini\',\n-        vocabulary=\'plone.app.vocabularies.ImagesScales\',\n-        required=True)\n-\n-    toolbar_position = schema.Choice(\n-        title=_(\'Toolbar position\'),\n-        description=_(\n-            \'It can be on the side (vertical mode) \'\n-            \'or on the top (horizontal mode)\'),\n-        default=\'side\',\n-        vocabulary=SimpleVocabulary([\n-            SimpleTerm(\'side\', \'side\', _(\'Side\')),\n-            SimpleTerm(\'top\', \'top\', _(\'Top\'))]),\n-        required=True)\n-\n-    toolbar_logo = schema.TextLine(\n-        title=_(\'Relative URL for the toolbar logo\'),\n-        description=_(\n-            \'This must be a URL relative to the site root. \'\n-            \'By default it is /++plone++static/plone-toolbarlogo.svg\'),\n-        default=\'/++plone++static/plone-toolbarlogo.svg\',\n-        required=False,\n-    )\n-\n-    robots_txt = schema.SourceText(\n-        title=_(\'robots.txt\'),\n-        description=_(\n-            \'help_robots_txt\',\n-            default=\'robots.txt is read by search engines to \'\n-                    \'determine how to index your site. \'\n-                    \'For details see <a href=\\\'http://www.robotstxt.org\\\'>\'\n-                    \'http://www.robotstxt.org</a>. \'\n-                    \'Use \\\'{portal_url}\\\' for the site URL.\'),\n-        default=ROBOTS_TXT,\n-        required=False,\n-    )\n-\n-    default_page = schema.List(\n-        title=_(\'Default page IDs\'),\n-        description=_(\n-            \'Select which IDs (short names) can act as fallback \'\n-            \'default pages for a container.\'),\n-        required=False,\n-        default=[\n-            \'index_html\',\n-            \'index.html\',\n-            \'index.htm\',\n-            \'FrontPage\'],\n-        missing_value=[],\n-        value_type=schema.TextLine())\n-\n-    roles_allowed_to_add_keywords = schema.List(\n-        title=_(\'Roles that can add keywords\'),\n-        description=_(\n-            \'help_allow_roles_to_add_keywords\',\n-            default=\'Only the following roles can add new keywords \'),\n-        required=False,\n-        default=[\n-            \'Manager\',\n-            \'Site Administrator\',\n-            \'Reviewer\',\n-        ],\n-        missing_value=[],\n-        value_type=schema.Choice(vocabulary=\'plone.app.vocabularies.Roles\'),\n-    )\n-\n-\n-class IDateAndTimeSchema(Interface):\n-    """Controlpanel settings for date and time related settings.\n-    """\n-\n-    portal_timezone = schema.Choice(\n-        title=_(\'Portal default timezone\'),\n-        description=_(\n-            \'help_portal_timezone\',\n-            default=\'The timezone setting of the portal. Users can set \'\n-                    \'their own timezone, if available timezones are \'\n-                    \'defined.\'),\n-        required=True,\n-        default=None,\n-        vocabulary=\'plone.app.vocabularies.CommonTimezones\')\n-\n-    available_timezones = schema.List(\n-        title=_(\'Available timezones\'),\n-        description=_(\n-            \'help_available_timezones\',\n-            default=\'The timezones, which should be available for the \'\n-                    \'portal. Can be set for users and events\'),\n-        required=False,\n-        default=[],\n-        missing_value=[],\n-        value_type=schema.Choice(\n-            vocabulary=\'plone.app.vocabularies.Timezones\'))\n-\n-    first_weekday = schema.Choice(\n-        title=_(\'label_first_weekday\', default=\'First weekday\'),\n-        description=_(\n-            \'help_first_weekday\',\n-            default=\'First day in the week.\'),\n-        required=True,\n-        default=None,\n-        vocabulary=\'plone.app.vocabularies.Weekdays\')\n-\n-\n-class ITypesSchema(Interface):\n-    """Controlpanel settings for the types settings.\n-    """\n-\n-    types_use_view_action_in_listings = schema.List(\n-        title=_(\'Types which use the view action in listing views.\'),\n-        description=_(\n-            \'help_types_use_view_action_in_listings\',\n-            default=\'When clicking items in listing views, these \'\n-                    \'types will use the \\\'view\\\' action instead of using \'\n-                    \'their default view.\'),\n-        required=False,\n-        default=[\'Image\',\n-                 \'File\'],\n-        missing_value=[],\n-        value_type=schema.TextLine(),\n-    )\n-\n-    redirect_links = schema.Bool(\n-        title=_(\'Redirect links\'),\n-        description=_(\n-            \'help_redirect_links\',\n-            default=\'When clicking on a Link type, should the user be \'\n-                    \'taken to the default view or be redirected to the \'\n-                    \'Link\\\'s URL?\'),\n-        required=False,\n-        default=True\n-    )\n-\n-    default_page_types = schema.List(\n-        title=_(\'Types that can be set as a default page\'),\n-        description=_(\n-            \'The content types that should be available for selection \'\n-            \'when setting a default page.\'),\n-        required=False,\n-        missing_value=[],\n-        default=[\n-            \'Document\',\n-            \'Event\',\n-            \'News Item\',\n-            \'Collection\',\n-        ],\n-        value_type=schema.TextLine()\n-    )\n-\n-\n-class IMailSchema(Interface):\n-\n-    smtp_host = schema.TextLine(\n-        title=_(\n-            \'label_smtp_server\',\n-            default=\'SMTP server\'),\n-        description=_(\n-            \'help_smtp_server\',\n-            default=\'The address of your local \'\n-                    \'SMTP (outgoing e-mail) server. Usually \'\n-                    \'\\\'localhost\\\', unless you use an \'\n-                    \'external server to send e-mail.\'),\n-        default=\'localhost\',\n-        required=True)\n-\n-    smtp_port = schema.Int(\n-        title=_(\'label_smtp_port\',\n-                default=\'SMTP port\'),\n-        description=_(\n-            \'help_smtp_port\',\n-            default=\'The port of your local SMTP \'\n-                    \'(outgoing e-mail) server. Usually \\\'25\\\'.\'\n-        ),\n-        default=25,\n-        required=True)\n-\n-    smtp_userid = schema.TextLine(\n-        title=_(\n-            \'label_smtp_userid\',\n-            default=\'ESMTP username\'),\n-        description=_(\n-            \'help_smtp_userid\',\n-            default=\'Username for authentication \'\n-                    \'to your e-mail server. Not required \'\n-                    \'unless you are using ESMTP.\'),\n-        default=None,\n-        required=False)\n-\n-    smtp_pass = schema.Password(\n-        title=_(\n-            \'label_smtp_pass\',\n-            default=\'ESMTP password\'),\n-        description=_(\n-            \'help_smtp_pass\',\n-            default=\'The password for the ESMTP \'\n-                    \'user account.\'),\n-        default=None,\n-        required=False)\n-\n-    email_from_name = schema.TextLine(\n-        title=_(\'Site \\\'From\\\' name\'),\n-        description=_(\n-            \'Plone generates e-mail using \'\n-            \'this name as the e-mail \'\n-            \'sender.\'),\n-        default=None,\n-        required=True)\n-\n-    email_from_address = schema.ASCIILine(\n-        title=_(\'Site \\\'From\\\' address\'),\n-        description=_(\n-            \'Plone generates e-mail using \'\n-            \'this address as the e-mail \'\n-            \'return address. It is also \'\n-            \'used as the destination \'\n-            \'address for the site-wide \'\n-            \'contact form and the \\\'Send test \'\n-            \'e-mail\\\' feature.\'),\n-        default=None,\n-        required=True)\n-\n-    email_charset = schema.ASCIILine(\n-        title=_(\'E-mail characterset\'),\n-        description=_(\'Characterset to use when sending e-mails.\'),\n-        default=\'utf-8\',\n-        required=True,\n-    )\n-\n-\n-class IMarkupSchema(Interface):\n-\n-    default_type = schema.Choice(\n-        title=_(\'Default format\'),\n-        description=_(\n-            \'Select the default format of textfields for newly \'\n-            \'created content objects.\'\n-        ),\n-        default=\'text/html\',\n-        vocabulary=\'plone.app.vocabularies.AllowableContentTypes\',\n-        required=True\n-    )\n-\n-    allowed_types = schema.Tuple(\n-        title=_(\'Alternative formats\'),\n-        description=_(\n-            \'Select which formats are available for users as \'\n-            \'alternative to the default format. Note that if new \'\n-            \'formats are installed, they will be enabled for text \'\n-            \'fields by default unless explicitly turned off here \'\n-            \'or by the relevant installer.\'\n-        ),\n-        required=True,\n-        default=(\'text/html\', \'text/x-web-textile\'),\n-        missing_value=(),\n-        value_type=schema.Choice(\n-            vocabulary=\'plone.app.vocabularies.AllowableContentTypes\'\n-        )\n-    )\n-\n-    markdown_extensions = schema.List(\n-        default=[\n-            \'markdown.extensions.fenced_code\',\n-            \'markdown.extensions.nl2br\',\n-        ],\n-        description=_(\n-            \'Look for available extensions at \'\n-            \'https://python-markdown.github.io/extensions/ or write your own.\'\n-        ),\n-        missing_value=(),\n-        required=False,\n-        title=_(\'Enabled markdown extensions\'),\n-        value_type=schema.TextLine()\n-    )\n-\n-\n-class IUserGroupsSettingsSchema(Interface):\n-\n-    many_groups = schema.Bool(\n-        title=_(\'Many groups?\'),\n-        description=_(\n-            \'Determines if your Plone is optimized \'\n-            \'for small or large sites. In environments with a \'\n-            \'lot of groups it can be very slow or impossible \'\n-            \'to build a list all groups. This option tunes the \'\n-            \'user interface and behaviour of Plone for this \'\n-            \'case by allowing you to search for groups instead \'\n-            \'of listing all of them.\'),\n-        default=False,\n-        required=False,\n-    )\n-\n-    many_users = schema.Bool(\n-        title=_(\'Many users?\'),\n-        description=_(\n-            \'Determines if your Plone is optimized \'\n-            \'for small or large sites. In environments with a \'\n-            \'lot of users it can be very slow or impossible to \'\n-            \'build a list all users. This option tunes the user \'\n-            \'interface and behaviour of Plone for this case by \'\n-            \'allowing you to search for users instead of \'\n-            \'listing all of them.\'),\n-        default=False,\n-        required=False,\n-    )\n-\n-\n-def validate_twitter_username(value):\n-    if value and value.startswith(\'@\'):\n-        raise Invalid(\n-            \'Twitter username should not include the "@" prefix character.\')\n-    return True\n-\n-\n-class ISocialMediaSchema(Interface):\n-\n-    share_social_data = schema.Bool(\n-        title=_(\'Share social data\'),\n-        description=_(\'Include meta tags on pages to give hints to \'\n-                      \'social media on how to better render your pages \'\n-                      \'when shared\'),\n-        default=True)\n-\n-    twitter_username = schema.ASCIILine(\n-        title=_(\'Twitter username\'),\n-        description=_(\n-            \'To identify things like Twitter Cards. \'\n-            \'Do not include the "@" prefix character.\'\n-        ),\n-        required=False,\n-        default=\'\',\n-        constraint=validate_twitter_username,\n-    )\n-\n-    facebook_app_id = schema.ASCIILine(\n-        title=_(\'Facebook App ID\'),\n-        description=_(\n-            \'To be used with some integrations like Open Graph data\'),\n-        required=False,\n-        default=\'\')\n-\n-    facebook_username = schema.ASCIILine(\n-        title=_(\'Facebook username\'),\n-        description=_(\'For linking Open Graph data to a Facebook account\'),\n-        required=False,\n-        default=\'\')\n-\n-\n-class IImagingSchema(Interface):\n-    allowed_sizes = schema.List(\n-        title=_(\'Allowed image sizes\'),\n-        description=_(\n-            \'Specify all allowed maximum image dimensions, one per line. The \'\n-            \'required format is &lt;name&gt; &lt;width&gt;:&lt;height&gt;.\'\n-        ),\n-        value_type=schema.TextLine(),\n-        default=[\n-            \'large 768:768\',\n-            \'preview 400:400\',\n-            \'mini 200:200\',\n-            \'thumb 128:128\',\n-            \'tile 64:64\',\n-            \'icon 32:32\',\n-            \'listing 16:16\'],\n-        missing_value=[],\n-        required=False,\n-    )\n-\n-    quality = schema.Int(\n-        title=_(\'Scaled image quality\'),\n-        description=_(\'A value for the quality of scaled images, from 1 \'\n-                      \'(lowest) to 95 (highest). A value of 0 will mean \'\n-                      \'plone.scaling\\\'s default will be used, which is \'\n-                      \'currently 88.\'),\n-        min=0,\n-        max=95,\n-        default=88\n-    )\n-\n-    highpixeldensity_scales = schema.Choice(\n-        title=_(\'High pixel density mode\'),\n-        description=_(\'\'),\n-        default=\'disabled\',\n-        vocabulary=SimpleVocabulary([\n-            SimpleTerm(\'disabled\', \'disabled\', \'Disabled\'),\n-            SimpleTerm(\'2x\', \'2x\', \'Enabled (2x)\'),\n-            SimpleTerm(\'3x\', \'3x\', \'Enabled (2x, 3x)\')\n-        ]),\n-    )\n-\n-    quality_2x = schema.Int(\n-        title=_(\'Image quality at 2x\'),\n-        description=_(\'A value for the quality of 2x high pixel density images, from 1 \'\n-                      \'(lowest) to 95 (highest). A value of 0 will mean \'\n-                      \'plone.scaling\\\'s default will be used, which is \'\n-                      \'currently 62.\'),\n-        min=0,\n-        max=95,\n-        default=62,\n-    )\n-\n-    quality_3x = schema.Int(\n-        title=_(\'Image quality at 3x\'),\n-        description=_(\'A value for the quality of 3x high pixel density images, from 1 \'\n-                      \'(lowest) to 95 (highest). A value of 0 will mean \'\n-                      \'plone.scaling\\\'s default will be used, which is \'\n-                      \'currently 51.\'),\n-        min=0,\n-        max=95,\n-        default=51,\n-    )\n-\n-    image_captioning = schema.Bool(\n-        title=_(\'image_captioning_title\', \'Enable image captioning\'),\n-        description=_(\n-            \'image_captioning_description\',\n-            \'Enable automatic image captioning for images set in the richtext editor based on the description of images.\'\n-        ),\n-        default=True,\n-        required=False\n-    )\n-\n-\n-class ILoginSchema(Interface):\n-\n-    auth_cookie_length = schema.Int(\n-        title=_(\'Auth cookie length\'),\n-        default=0,\n-        required=False\n-    )\n-\n-    verify_login_name = schema.Bool(\n-        title=_(\'Verify login name\'),\n-        default=True,\n-        required=False\n-    )\n-\n-    allow_external_login_sites = schema.Tuple(\n-        title=_(\'Allow external login sites\'),\n-        default=(),\n-        value_type=schema.ASCIILine(),\n-        required=False\n-    )\n-\n-    external_login_url = schema.ASCIILine(\n-        title=_(\'External login url\'),\n-        default=None,\n-        required=False\n-    )\n-\n-    external_logout_url = schema.ASCIILine(\n-        title=_(\'External logout url\'),\n-        default=None,\n-        required=False\n-    )\n-\n-    external_login_iframe = schema.Bool(\n-        title=_(\'External login iframe\'),\n-        default=False,\n-        required=False\n-    )\n-\n-\n-class ILinkSchema(Interface):\n-\n-    external_links_open_new_window = schema.Bool(\n-        title=_(\'Open external links in new a window\'),\n-        description=_(\'\'),\n-        default=False,\n-        required=False)\n-\n-    mark_special_links = schema.Bool(\n-        title=_(\'Mark special links\'),\n-        description=_(\'Marks external or special protocol links with class.\'),\n-        default=False,\n-        required=False)\n-\n-\n-def _check_tales_expression(value):\n-    from Products.PageTemplates.Expressions import getEngine\n-    try:\n-        getEngine().compile(value)\n-    except Exception:\n-        raise Invalid(\n-            _(\n-                \'The expression "${value}" is invalid\',\n-                mapping={\'value\': value},\n-            )\n-        )\n-    return True\n-\n-\n-class IActionSchema(Interface):\n-\n-    category = schema.Choice(\n-        title=_(\'Category\'),\n-        vocabulary=\'plone.app.vocabularies.PortalActionCategories\',\n-        required=True)\n-\n-    title = schema.TextLine(\n-        title=_(\'Title\'),\n-        required=True)\n-\n-    description = schema.Text(\n-        title=_(\'Description\'),\n-        required=False)\n-\n-    i18n_domain = schema.TextLine(\n-        title=_(\'i18n_domain_heading\', default=\'I18n domain\'),\n-        default=\'plone\',\n-        required=False)\n-\n-    url_expr = schema.ASCIILine(\n-        title=_(\'action_url_heading\', default=\'Action URL\'),\n-        description=_(\n-            \'action_url_description\',\n-            default=\'An expression producing the called URL. \'\n-            \'Example: string:${globals_view/navigationRootUrl}/page\'\n-        ),\n-        required=True,\n-        constraint=_check_tales_expression,\n-    )\n-\n-    available_expr = schema.ASCIILine(\n-        title=_(\'action_condition_heading\', default=\'Condition\'),\n-        description=_(\n-            \'action_condition_description\',\n-            default=\'A boolean expression\'\n-        ),\n-        required=False)\n-\n-    permissions = schema.List(\n-        title=_(\'action_permissions_heading\', default=\'Permissions\'),\n-        required=True,\n-        default=[\'View\'],\n-        missing_value=[],\n-        value_type=schema.Choice(\n-            vocabulary=\'plone.app.vocabularies.Permissions\'\n-        )\n-    )\n-\n-    visible = schema.Bool(\n-        title=_(\'action_visibility_heading\', default=\'Visible?\'),\n-        default=True,\n-        required=False)\n-\n-    position = schema.Int(\n-        title=_(\'action_position_heading\', default=\'Position\'),\n-        default=1,\n-        min=1,\n-        required=True)\n-\n-\n-class INewActionSchema(Interface):\n-\n-    category = schema.Choice(\n-        title=_(\'Category\'),\n-        vocabulary=\'plone.app.vocabularies.PortalActionCategories\',\n-        required=True)\n-\n-    id = schema.ASCIILine(\n-        title=_(\'Id\'),\n-        required=True)\n-\n-    @invariant\n-    def validate_category_id(data):\n-        categoryid = data.category\n-        pa = getToolByName(getSite(), \'portal_actions\')\n-        category = pa.get(categoryid, {})\n-        actionid = data.id\n-        if actionid in category:\n-            raise Invalid(\n-                _(\n-                    \'An action with the id "${actionid}" already exists\',\n-                    mapping={\'actionid\': actionid},\n-                )\n-            )\n-        try:\n-            category._checkId(actionid)\n-        except Exception:\n-            raise Invalid(\n-                _(\n-                    \'The id "${actionid}" is invalid\',\n-                    mapping={\'actionid\': actionid},\n-                )\n-            )\n-\n-\n-class IPloneControlPanelView(Interface):\n-    """A marker interface for views showing a controlpanel.\n-    """\n-\n-\n-class IPloneControlPanelForm(IPloneControlPanelView):\n-    """Forms using plone.app.controlpanel\n-    """\n-\n-    def _on_save():\n-        """Callback mehod which can be implemented by control panels to\n-        react when the form is successfully saved. This avoids the need\n-        to re-define actions only to do some additional notification or\n-        configuration which cannot be handled by the normal schema adapter.\n-\n-        By default, does nothing.\n-        """\n-\n-\n-class IConfigurationChangedEvent(Interface):\n-    """An event which is fired after a configuration setting has been changed.\n-    """\n-\n-    context = Attribute("The configuration context which was changed.")\n-\n-    data = Attribute("The configuration data which was changed.")\n+moved(\'plone.base.interfaces.controlpanel\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/defaultpage.py b/Products/CMFPlone/interfaces/defaultpage.py\nindex 8b869b1cdd..4b9a4c610b 100644\n--- a/Products/CMFPlone/interfaces/defaultpage.py\n+++ b/Products/CMFPlone/interfaces/defaultpage.py\n@@ -1,16 +1,3 @@\n-from zope.interface import Interface\n+from zope.deprecation import moved\n \n-\n-class IDefaultPage(Interface):\n-    """Interface for a view that can determine if its context is the\n-    default page or not.\n-    """\n-\n-    def isDefaultPage(obj):\n-        """Finds out if the given obj is the default page for the\n-        adapted object.\n-        """\n-\n-    def getDefaultPage():\n-        """Returns the id of the default page for the adapted object.\n-        """\n+moved(\'plone.base.interfaces.defaultpage\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/events.py b/Products/CMFPlone/interfaces/events.py\nindex f83cc0430d..57f9fb71b6 100644\n--- a/Products/CMFPlone/interfaces/events.py\n+++ b/Products/CMFPlone/interfaces/events.py\n@@ -1,23 +1,3 @@\n-from zope.interface import Attribute\n-from zope.interface import Interface\n-from zope.interface.interfaces import IObjectEvent\n+from zope.deprecation import moved\n \n-\n-class ISiteManagerCreatedEvent(IObjectEvent):\n-    """An event that\'s fired once the Plone portal is enabled as a site.\n-    """\n-\n-\n-class IReorderedEvent(IObjectEvent):\n-    """An event that\'s fired once the Plone Tool has been notified of\n-       a reordering\n-    """\n-\n-\n-class IConfigurationChangedEvent(Interface):\n-    """An event which is fired after a configuration setting has been changed.\n-    """\n-\n-    context = Attribute("The configuration context which was changed.")\n-\n-    data = Attribute("The configuration data which was changed.")\n+moved(\'plone.base.interfaces.events\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/installable.py b/Products/CMFPlone/interfaces/installable.py\nindex f82e9ef240..79006705e0 100644\n--- a/Products/CMFPlone/interfaces/installable.py\n+++ b/Products/CMFPlone/interfaces/installable.py\n@@ -1,17 +1,3 @@\n-from zope.interface import Interface\n+from zope.deprecation import moved\n \n-\n-class INonInstallable(Interface):\n-\n-    def getNonInstallableProfiles():\n-        """Returns a list of profiles that should not be available for\n-           installation at portal creation time.\n-\n-           The usual use-case is to prevent extension profiles from showing up,\n-           that will be installed as part of the site creation anyways.\n-        """\n-\n-    def getNonInstallableProducts():\n-        """Returns a list of products that should not be available for\n-           installation.\n-        """\n+moved(\'plone.base.interfaces.installable\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/interface.py b/Products/CMFPlone/interfaces/interface.py\nindex 589430c96b..1d12e69c6c 100644\n--- a/Products/CMFPlone/interfaces/interface.py\n+++ b/Products/CMFPlone/interfaces/interface.py\n@@ -1,20 +1,3 @@\n-from Products.CMFPlone.interfaces.basetool import IPloneBaseTool\n-from zope.interface import Attribute\n+from zope.deprecation import moved\n \n-\n-class IInterfaceTool(IPloneBaseTool):\n-    """ This tool exposes the interface package for TTW applications,\n-    by accepting a dotted name of an interface and exporting the\n-    IInterface API """\n-\n-    id = Attribute(\'id\', \'Must be set to "portal_interface"\')\n-\n-    def objectImplements(obj, dotted_name):\n-        """ Asserts if an object implements a given interface """\n-\n-    def classImplements(obj, dotted_name):\n-        """ Asserts if an object\'s class implements a given interface """\n-\n-    def namesAndDescriptions(dotted_name, all=0):\n-        """ Returns a list of pairs (name, description) for a given\n-        interface"""\n+moved(\'plone.base.interfaces.interface\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/language.py b/Products/CMFPlone/interfaces/language.py\nindex e3838c37a9..e8f180cf11 100644\n--- a/Products/CMFPlone/interfaces/language.py\n+++ b/Products/CMFPlone/interfaces/language.py\n@@ -1,11 +1,3 @@\n-from zope.interface import Interface\n+from zope.deprecation import moved\n \n-\n-# Language-support\n-class ILanguage(Interface):\n-\n-    def get_language(self):\n-        """ return the contents language """\n-\n-    def set_language(self):\n-        """ return the contents language """\n+moved(\'plone.base.interfaces.language\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/login.py b/Products/CMFPlone/interfaces/login.py\nindex d86b1521c4..19e30f8a8f 100644\n--- a/Products/CMFPlone/interfaces/login.py\n+++ b/Products/CMFPlone/interfaces/login.py\n@@ -1,81 +1,3 @@\n-from Products.CMFPlone import PloneMessageFactory as _\n-from plone.schema.email import Email\n-from plone.z3cform.interfaces import IWrappedForm\n-from zope import schema\n-from zope.interface import Interface\n+from zope.deprecation import moved\n \n-\n-class IRedirectAfterLogin(Interface):\n-    """ Redirect after login adapters should provide this interface """\n-\n-\n-class IForcePasswordChange(Interface):\n-    """ Hook point to customize forcing a password change """\n-\n-\n-class IInitialLogin(Interface):\n-    """ Hook point to customize what happens the first time a user logs into\n-        the site """\n-\n-\n-class ILogin(Interface):\n-    """ Login form schema """\n-\n-    login = schema.TextLine(\n-        title=_(\'label_log_in\', default=\'Log in\'),\n-    )\n-\n-    password = schema.Password(\n-        title=_(\'label_password\', default=\'Password\'),\n-    )\n-\n-\n-class ILoginForm(IWrappedForm):\n-    """ Login form marker interface """\n-\n-\n-class ILoginFormSchema(Interface):\n-    """ Login form schema """\n-\n-    ac_name = schema.TextLine(\n-        title=_(\'label_login_name\', default=\'Login Name\'),\n-        required=True,\n-    )\n-\n-    ac_password = schema.Password(\n-        title=_(\'label_password\', default=\'Password\'),\n-        required=True,\n-    )\n-\n-    came_from = schema.TextLine(\n-        title=\'Came From\',  # not translated, hidden field\n-        required=False,\n-    )\n-\n-\n-class ILoginHelpForm(IWrappedForm):\n-    """ Login Help form marker interface """\n-\n-\n-class ILoginHelpFormSchema(Interface):\n-    """ Login Help form schema """\n-\n-    reset_password = schema.TextLine(\n-        title=_(\'label_pwreset_username\', default=\'Username\'),\n-        description=_(\n-            \'help_pwreset_username\',\n-            default=\'Enter your username \'\n-                    \'or email and we\xe2\x80\x99ll send you a password reset link.\',\n-        ),\n-        required=True,\n-    )\n-\n-    recover_username = Email(\n-        title=_(\'label_pwreset_email\', default=\'Email\'),\n-        description=_(\n-            \'help_pwreset_email\',\n-            default=\'Enter your email and \'\n-                    \'we\xe2\x80\x99ll send you your username.\',\n-        ),\n-        required=True,\n-    )\n+moved(\'plone.base.interfaces.login\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/migration.py b/Products/CMFPlone/interfaces/migration.py\nindex 2ae6a851f6..5672aac457 100644\n--- a/Products/CMFPlone/interfaces/migration.py\n+++ b/Products/CMFPlone/interfaces/migration.py\n@@ -1,32 +1,3 @@\n-from zope.interface import Interface\n+from zope.deprecation import moved\n \n-\n-class IMigrationTool(Interface):\n-    """Handles migrations between Plone releases."""\n-\n-    def getInstanceVersion():\n-        """The version this instance of Plone is on."""\n-\n-    def setInstanceVersion(version):\n-        """The version this instance of Plone is on."""\n-\n-    def getFileSystemVersion():\n-        """The version the filesystem code of Plone is on."""\n-\n-    def needUpgrading():\n-        """Need upgrading?"""\n-\n-    def coreVersions():\n-        """Useful core version information."""\n-\n-    def coreVersionsList():\n-        """Useful core version information."""\n-\n-    def needUpdateRole():\n-        """Do roles need to be updated?"""\n-\n-    def needRecatalog():\n-        """Does this thing now need recataloging?"""\n-\n-    def upgrade(REQUEST=None, dry_run=None, swallow_errors=1):\n-        """Perform the upgrade."""\n+moved(\'plone.base.interfaces.migration\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/password_reset.py b/Products/CMFPlone/interfaces/password_reset.py\nindex fde6f96bb4..97fd367189 100644\n--- a/Products/CMFPlone/interfaces/password_reset.py\n+++ b/Products/CMFPlone/interfaces/password_reset.py\n@@ -1,41 +1,3 @@\n-from zope.interface import Interface, Attribute\n+from zope.deprecation import moved\n \n-\n-class IPasswordResetToolView(Interface):\n-    """ BrowserView with utility methods """\n-\n-    def encode_mail_header(text):\n-        """ Encodes text into correctly encoded email header """\n-\n-    def encoded_mail_sender():\n-        """ returns encoded version of Portal name <portal_email> """\n-\n-    def registered_notify_subject():\n-        """ returns encoded version of registered notify template subject line """\n-\n-    def mail_password_subject():\n-        """ returns encoded version of mail password template subject line """\n-\n-\n-class IPWResetTool(Interface):\n-    """Defines an interface for a tool that provides a facility to\n-    reset forgotten passwords.\n-\n-    This interface is rather sparse, but sufficient to describe the\n-    task. (In this manner we void being dependant on a specific\n-    process) The details of the process are in the implementation,\n-    where they belong."""\n-\n-    id = Attribute(\'id\', \'Must be set to "portal_password_reset"\')\n-\n-    def requestReset(userid):\n-        """Ask the system to start the password reset procedure for\n-        user \'userid\'.\n-\n-        Returns the random string that must be used to reset the\n-        password."""\n-\n-    def resetPassword(userid, randomstring, password):\n-        """Set the password (in \'password\') for the user who maps to\n-        the string in \'randomstring\'. The \'userid\' parameter is provided\n-        in case extra authentication is needed."""\n+moved(\'plone.base.interfaces.password_reset\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/patterns.py b/Products/CMFPlone/interfaces/patterns.py\nindex 9a7a0add78..91983316aa 100644\n--- a/Products/CMFPlone/interfaces/patterns.py\n+++ b/Products/CMFPlone/interfaces/patterns.py\n@@ -1,12 +1,3 @@\n-from zope.interface import Interface\n+from zope.deprecation import moved\n \n-\n-class IPatternsSettings(Interface):\n-    """ Interface to register global pattern settings adapters\n-    """\n-\n-    def __call__(self):\n-        """\n-            Return a dict of pattern options\n-        """\n-        pass\n+moved(\'plone.base.interfaces.patterns\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/properties.py b/Products/CMFPlone/interfaces/properties.py\nindex 560c80b399..4c4b228fff 100644\n--- a/Products/CMFPlone/interfaces/properties.py\n+++ b/Products/CMFPlone/interfaces/properties.py\n@@ -1,26 +1,3 @@\n-from zope.interface import Interface\n-from zope.interface import Attribute\n+from zope.deprecation import moved\n \n-\n-class IPropertiesTool(Interface):\n-\n-    """ Manage properties of the site as a whole.\n-    """\n-\n-    id = Attribute(\'id\', \'Must be set to "portal_properties"\')\n-\n-    def editProperties(props):\n-        """ Change portal settings.\n-\n-        Permission --  Manage portal\n-        """\n-\n-    def smtp_server():\n-        """ Get local SMTP server.\n-\n-        Returns -- String\n-        """\n-\n-\n-class ISimpleItemWithProperties(Interface):\n-    pass\n+moved(\'plone.base.interfaces.properties\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/resources.py b/Products/CMFPlone/interfaces/resources.py\nindex 91a16a0d8e..6d1c933ae0 100644\n--- a/Products/CMFPlone/interfaces/resources.py\n+++ b/Products/CMFPlone/interfaces/resources.py\n@@ -1,143 +1,3 @@\n-import zope.interface\n-import zope.component\n-from zope import schema\n-from zope.schema.vocabulary import SimpleTerm\n-from zope.schema.vocabulary import SimpleVocabulary\n+from zope.deprecation import moved\n \n-from Products.CMFPlone import PloneMessageFactory as _\n-\n-OVERRIDE_RESOURCE_DIRECTORY_NAME = \'resource_overrides\'\n-\n-\n-class IResourceRegistry(zope.interface.Interface):\n-\n-    url = schema.ASCIILine(\n-        title=_("Resources base URL"),\n-        required=False)\n-\n-    js = schema.ASCIILine(\n-        title=_("Main js file"),\n-        required=False)\n-\n-    css = schema.List(\n-        title=_("CSS/LESS files"),\n-        value_type=schema.ASCIILine(title=_("URL")),\n-        default=[],\n-        required=False)\n-\n-    init = schema.ASCIILine(\n-        title=_("Init instruction for shim"),\n-        required=False)\n-\n-    deps = schema.ASCIILine(\n-        title=_("Dependencies for shim"),\n-        description=_("Comma separated values of resource for shim"),\n-        required=False)\n-\n-    export = schema.ASCIILine(\n-        title=_("Export vars for shim"),\n-        required=False)\n-\n-    conf = schema.Text(\n-        title=_("Configuration in JSON for the widget"),\n-        description=_("Should be accessible on @@getWCconfig?id=name"),\n-        required=False)\n-\n-\n-class IBundleRegistry(zope.interface.Interface):\n-\n-    jscompilation = schema.ASCIILine(\n-        title=_("URL of the last js compilation"),\n-        required=False)\n-\n-    csscompilation = schema.ASCIILine(\n-        title=_("URL of the last css compilation"),\n-        required=False)\n-\n-    last_compilation = schema.Datetime(\n-        title=_("Last compiled date"),\n-        description=_("Date time of the last compilation of this bundle"),\n-        required=False)\n-\n-    expression = schema.ASCIILine(\n-        title=_("Expression to render"),\n-        description=_(\n-            "In case its a bundle we can have a condition to render it (it "\n-            "does not apply if the bundle is merged)."),\n-        required=False)\n-\n-    conditionalcomment = schema.ASCIILine(\n-        title=_("Conditional comment"),\n-        description=_(\n-            "In case you want to render this resource on conditional comment "\n-            "(it does not apply if the bundle is merged)."),\n-        required=False)\n-\n-    resources = schema.List(\n-        title=_("Loaded resources"),\n-        description=_(\n-            "The resources that are going to be loaded on this bundle in order"),\n-        value_type=schema.ASCIILine(title=_("Resource name")),\n-        required=False)\n-\n-    enabled = schema.Bool(\n-        title=_("It\'s enabled?"),\n-        default=True,\n-        required=False)\n-\n-    compile = schema.Bool(\n-        title=_("Does your bundle contains any RequireJS or LESS file?"),\n-        description=_(\n-            "If its true and you modify this bundle you need to build it before production"),\n-        default=True,\n-        required=False)\n-\n-    depends = schema.ASCIILine(\n-        title=_("Depends on another bundle"),\n-        description=_(\n-            "In case you want to be the last: *, in case its the first should be empty"),\n-        required=False)\n-\n-    develop_javascript = schema.Bool(\n-        title=_(\'Develop JavaScript\'),\n-        default=False)\n-\n-    develop_css = schema.Bool(\n-        title=_(\'Develop CSS\'),\n-        default=False)\n-\n-    stub_js_modules = schema.List(\n-        title=_(\'Stub JavaScript modules\'),\n-        description=_(\'Define list of modules that will be defined empty \'\n-                      \'on RequireJS build steps to prevent loading modules multiple times.\'),\n-        value_type=schema.ASCIILine(title=_("Resource name")),\n-        required=False,\n-        missing_value=[],\n-        default=[])\n-\n-    merge_with = schema.Choice(\n-        title=_("Merge with"),\n-        description=_(\n-            "In production mode, bundles are merged together to reduce the "\n-            "quantity of JS and CSS resources loaded by the browser. Choose "\n-            "\'default\' if this bundle must be available for all the visitors, "\n-            "choose \'logged-in\' if it must be available for logged-in users "\n-            "only, or leave it empty if it must not be merged."),\n-        vocabulary=SimpleVocabulary(\n-            [SimpleTerm(\'\', \'\', _("")),\n-             SimpleTerm(\'default\', \'default\', \'default\'),\n-             SimpleTerm(\'logged-in\', \'logged-in\', \'logged-in\')]),\n-        default="",\n-        required=False)\n-\n-    load_async = schema.Bool(\n-        title=_("Load asynchronously"),\n-        description=_("Load the JavaScript files asynchronously by adding an ``async`` attribute to the script tag."),\n-        default=False,\n-        required=False)\n-\n-    load_defer = schema.Bool(\n-        title=_("Load deferred"),\n-        description=_("Load the JavaScript files deferred after the document has been parsed but before ``DOMContentLoaded`` by adding a ``defer`` attribute to the script tag."),\n-        default=False,\n-        required=False)\n+moved(\'plone.base.interfaces.resources\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/siteroot.py b/Products/CMFPlone/interfaces/siteroot.py\nindex 83c119871d..e05bac1d96 100644\n--- a/Products/CMFPlone/interfaces/siteroot.py\n+++ b/Products/CMFPlone/interfaces/siteroot.py\n@@ -1,22 +1,3 @@\n-from zope.interface import Interface\n-from Products.CMFCore.interfaces import ISiteRoot\n-from plone.app.layout.navigation.interfaces import INavigationRoot\n+from zope.deprecation import moved\n \n-\n-class IPloneSiteRoot(ISiteRoot, INavigationRoot):\n-    """\n-    Marker interface for the object which serves as the root of a\n-    Plone site.\n-    """\n-\n-\n-class IMigratingPloneSiteRoot(Interface):\n-    """\n-    Marker interface used for migration GenericSetup profiles.\n-    """\n-\n-\n-class ITestCasePloneSiteRoot(Interface):\n-    """\n-    Marker interface used for test fixture GenericSetup profiles.\n-    """\n+moved(\'plone.base.interfaces.siteroot\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/structure.py b/Products/CMFPlone/interfaces/structure.py\nindex ea43a111c2..1de8c04966 100644\n--- a/Products/CMFPlone/interfaces/structure.py\n+++ b/Products/CMFPlone/interfaces/structure.py\n@@ -1,12 +1,3 @@\n-from zope.interface import Interface\n+from zope.deprecation import moved\n \n-\n-class INonStructuralFolder(Interface):\n-    """Marker for folderish content types that are folderish as an\n-    implementation detail only.\n-\n-    By declaring support for this interface, a content type will not be\n-    considered folderish by the catalog\'s is_folderish index/metadata, meaning\n-    that it will not be treated as folderish by the navigation tree, portal tab\n-    generation and folder_contents.\n-    """\n+moved(\'plone.base.interfaces.structure\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/syndication.py b/Products/CMFPlone/interfaces/syndication.py\nindex b65465a0be..e2bdf7315c 100644\n--- a/Products/CMFPlone/interfaces/syndication.py\n+++ b/Products/CMFPlone/interfaces/syndication.py\n@@ -1,296 +1,3 @@\n-from zope.interface import Interface\n-from zope import schema\n-from Products.CMFPlone import PloneMessageFactory as _\n+from zope.deprecation import moved\n \n-\n-class ISyndicatable(Interface):\n-    pass\n-\n-\n-class IFeedData(Interface):\n-\n-    def link():\n-        """\n-        Link to item\n-        """\n-\n-    def base_url():\n-        """\n-        base url to item\n-        """\n-\n-    def title():\n-        """\n-        title of item\n-        """\n-\n-    def description():\n-        """\n-        """\n-\n-    def categories():\n-        """\n-        List of tags\n-        """\n-\n-    def published():\n-        """\n-        publishing date\n-        """\n-\n-    def modified():\n-        """\n-        modification date\n-        """\n-\n-    def uid():\n-        """\n-        """\n-\n-    def rights():\n-        """\n-        """\n-\n-    def publisher():\n-        """\n-        """\n-\n-    def author():\n-        """\n-        """\n-\n-    def author_name():\n-        """\n-        """\n-\n-    def author_email():\n-        """\n-        """\n-\n-\n-class IFeed(IFeedData):\n-    """\n-    An adapter on the context and request\n-    to get feed information\n-    """\n-    def show_about():\n-        """\n-        """\n-\n-    def logo():\n-        """\n-        """\n-\n-    def icon():\n-        """\n-        """\n-\n-    def _brains():\n-        """\n-        return list of brains\n-        """\n-\n-    def _items():\n-        """\n-        return full objects\n-        """\n-\n-    def items():\n-        """\n-        adapted items\n-        """\n-\n-    def limit():\n-        """\n-        """\n-\n-    def language():\n-        """\n-        """\n-\n-\n-class ISearchFeed(IFeed):\n-    pass\n-\n-\n-class IFeedItem(IFeedData):\n-    """\n-    An adapter on the feed item and IFeed instance\n-    """\n-\n-    def body():\n-        """\n-        """\n-\n-    def guid():\n-        """\n-        """\n-\n-    def has_enclosure():\n-        """\n-        """\n-\n-    def file():\n-        """\n-        """\n-\n-    def file_url():\n-        """\n-        """\n-\n-    def file_length():\n-        """\n-        """\n-\n-    def file_type():\n-        """\n-        """\n-\n-\n-class ISiteSyndicationSettings(Interface):\n-\n-    allowed = schema.Bool(\n-        title=_(\'Allowed\'),\n-        description=_(\'Allow syndication for collections and folders \'\n-                      \'on site.\'),\n-        default=True)\n-\n-    default_enabled = schema.Bool(\n-        title=_(\'Enabled by default\'),\n-        description=_(\'If syndication should be enabled by default for all \'\n-                      \'folders and collections.\'),\n-        default=False)\n-\n-    search_rss_enabled = schema.Bool(\n-        title=_(\'Search RSS enabled\'),\n-        description=_(\'Allows users to subscribe to feeds of search results\'),\n-        default=True)\n-\n-    show_author_info = schema.Bool(\n-        title=_(\'Show author info\'),\n-        description=_(\'Should feeds include author information\'),\n-        default=True)\n-\n-    render_body = schema.Bool(\n-        title=_(\'Render Body\'),\n-        description=_(\'help_render_body\',\n-                      default=\'If body text available for item, \'\n-                      \'render it, otherwise use description.\'),\n-        default=False)\n-\n-    max_items = schema.Int(\n-        title=_(\'label_syndication_max_items\',\n-                default=\'Maximum items\'),\n-        description=_(\'help_syndication_max_items\',\n-                      default=\'Maximum number of items that will be syndicated.\'),\n-        min=1,\n-        default=15)\n-\n-    allowed_feed_types = schema.Tuple(\n-        title=_(\'Allowed Feed Types\'),\n-        description=_("Separate view name and title by \'|\'"),\n-        required=True,\n-        missing_value=None,\n-        default=(\n-            "RSS|RSS 1.0",\n-            "rss.xml|RSS 2.0",\n-            "atom.xml|Atom",\n-            "itunes.xml|iTunes"),\n-        value_type=schema.TextLine()\n-    )\n-\n-    site_rss_items = schema.Tuple(\n-        title=_(\'Site RSS\'),\n-        description=_(\'Paths to folders and collections to link to \'\n-                      \'at the portal root.\'),\n-        required=False,\n-        default=(\'/news/aggregator\',),\n-        value_type=schema.Choice(\n-            vocabulary="plone.app.vocabularies.SyndicatableFeedItems")\n-    )\n-\n-    show_syndication_button = schema.Bool(\n-        title=_("Show settings button"),\n-        description=_("Makes it possible to customize syndication settings "\n-                      "for particular folders and collections "))\n-\n-    show_syndication_link = schema.Bool(\n-        title=_("Show feed link"),\n-        description=_("Enable RSS link document action on the syndication "\n-                      "content item."))\n-\n-\n-class IFeedSettings(Interface):\n-\n-    enabled = schema.Bool(\n-        title=_(\'Enabled\'),\n-        default=False)\n-\n-    feed_types = schema.Tuple(\n-        title=_(\'Feed Types\'),\n-        required=True,\n-        missing_value=None,\n-        default=("RSS", "rss.xml", "atom.xml"),\n-        value_type=schema.Choice(\n-            vocabulary="plone.app.vocabularies.SyndicationFeedTypes"\n-        ))\n-\n-    render_body = schema.Bool(\n-        title=_(\'Render Body\'),\n-        description=_(\n-            \'help_render_body\',\n-            default=\'If body text available for item, \'\n-                    \'render it, otherwise use description.\'),\n-        default=False)\n-\n-    max_items = schema.Int(\n-        title=_(\'label_syndication_max_items\',\n-                default=\'Maximum items\'),\n-        description=_(\n-            \'help_syndication_max_items\',\n-            default=\'Maximum number of items that will be syndicated.\'),\n-        default=15)\n-\n-\n-class ISyndicationUtil(Interface):\n-\n-    def allowed_feed_types():\n-        """\n-        get a list of allow feed types\n-        """\n-\n-    def context_allowed():\n-        """\n-        If syndication is allowed on the context\n-        """\n-\n-    def context_enabled(raise404=False):\n-        """\n-        If syndication is enabled on the context\n-        """\n-\n-    def site_enabled():\n-        """\n-        If syndication is enabled on the site\n-        """\n-\n-    def search_rss_enabled(raise404=False):\n-        """\n-        If search_rss is enabled\n-        """\n-\n-    def show_author_info():\n-        """\n-        If author information should show on feeds\n-        """\n-\n-    def max_items():\n-        """\n-        Default max items to show on the site\n-        """\n-\n-    def rss_url():\n-        """\n-        Default rss url. Mainly to be used for the\n-        rss portal_action link\n-        """\n+moved(\'plone.base.interfaces.syndication\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/translationservice.py b/Products/CMFPlone/interfaces/translationservice.py\nindex b908e28ee8..f840d67732 100644\n--- a/Products/CMFPlone/interfaces/translationservice.py\n+++ b/Products/CMFPlone/interfaces/translationservice.py\n@@ -1,44 +1,3 @@\n-from zope.interface import Interface\n+from zope.deprecation import moved\n \n-\n-class ITranslationServiceTool(Interface):\n-    """ Utility methods to access the translation machinery\n-    """\n-\n-    def translate(*args, **kw):\n-        """Translate method to access the translation service\n-           from resticted code like skins.\n-        """\n-\n-    def encode(m, input_encoding=None, output_encoding=None, errors=\'strict\'):\n-        """Encode a give unicode type or string type to string type in encoding\n-           output_encoding\n-        """\n-\n-    def asunicodetype(m, input_encoding=None, errors=\'strict\'):\n-        """Create type unicode from type string"""\n-\n-    def ulocalized_time(time, long_format=None, time_only=None, context=None,\n-                        domain=\'plonelocales\'):\n-        """Returns localized time."""\n-\n-    def day_msgid(number, format=\'\'):\n-        """Returns the msgid which can be passed to the translation service for\n-           l10n of weekday names. Format is either \'\', \'a\' or \'s\'.\n-        """\n-\n-    def month_msgid(number, format=\'\'):\n-        """Returns the msgid which can be passed to the translation service for\n-           l10n of month names. Format is either \'\' or \'a\' (long or\n-           abbreviation).\n-        """\n-\n-    def month_english(number, format=\'\'):\n-        """Returns the english name of month by number. Format is either \'\' or\n-           \'a\' (long or abbreviation).\n-        """\n-\n-    def weekday_english(number, format=\'\'):\n-        """Returns the english name of a week by number. Format is either \'\',\n-           \'a\' or \'p\'.\n-        """\n+moved(\'plone.base.interfaces.translationservice\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/permissions.py b/Products/CMFPlone/permissions.py\nindex 07370e2931..4230ff54eb 100644\n--- a/Products/CMFPlone/permissions.py\n+++ b/Products/CMFPlone/permissions.py\n@@ -1,67 +1,3 @@\n-""" CMFPlone product permissions """\n-from AccessControl import ModuleSecurityInfo\n+from zope.deprecation import moved\n \n-security = ModuleSecurityInfo(\'Products.CMFPlone.permissions\')\n-\n-security.declarePublic(\'AccessContentsInformation\')\n-from Products.CMFCore.permissions import AccessContentsInformation\n-\n-security.declarePublic(\'AddPortalContent\')\n-from Products.CMFCore.permissions import AddPortalContent\n-\n-security.declarePublic(\'AddPortalFolders\')\n-from Products.CMFCore.permissions import AddPortalFolders\n-\n-security.declarePublic(\'AddPortalMember\')\n-from Products.CMFCore.permissions import AddPortalMember\n-\n-security.declarePublic(\'DeleteObjects\')\n-from Products.CMFCore.permissions import DeleteObjects\n-\n-security.declarePublic(\'FTPAccess\')\n-from Products.CMFCore.permissions import FTPAccess\n-\n-security.declarePublic(\'ListFolderContents\')\n-from Products.CMFCore.permissions import ListFolderContents\n-\n-security.declarePublic(\'ListPortalMembers\')\n-from Products.CMFCore.permissions import ListPortalMembers\n-\n-security.declarePublic(\'ListUndoableChanges\')\n-from Products.CMFCore.permissions import ListUndoableChanges\n-\n-security.declarePublic(\'ManagePortal\')\n-from Products.CMFCore.permissions import ManagePortal\n-\n-security.declarePublic(\'ManageProperties\')\n-from Products.CMFCore.permissions import ManageProperties\n-\n-security.declarePublic(\'ManageUsers\')\n-from Products.CMFCore.permissions import ManageUsers\n-\n-security.declarePublic(\'ModifyPortalContent\')\n-from Products.CMFCore.permissions import ModifyPortalContent\n-\n-security.declarePublic(\'ReplyToItem\')\n-from Products.CMFCore.permissions import ReplyToItem\n-\n-security.declarePublic(\'RequestReview\')\n-from Products.CMFCore.permissions import RequestReview\n-\n-security.declarePublic(\'ReviewPortalContent\')\n-from Products.CMFCore.permissions import ReviewPortalContent\n-\n-security.declarePublic(\'SetOwnPassword\')\n-from Products.CMFCore.permissions import SetOwnPassword\n-\n-security.declarePublic(\'SetOwnProperties\')\n-from Products.CMFCore.permissions import SetOwnProperties\n-\n-security.declarePublic(\'UndoChanges\')\n-from Products.CMFCore.permissions import UndoChanges\n-\n-security.declarePublic(\'View\')\n-from Products.CMFCore.permissions import View\n-\n-security.declarePublic(\'ViewManagementScreens\')\n-from Products.CMFCore.permissions import ViewManagementScreens\n+moved(\'plone.base.permissions\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/utils.py b/Products/CMFPlone/utils.py\nindex 1e3c29fe07..8ea1a2659d 100644\n--- a/Products/CMFPlone/utils.py\n+++ b/Products/CMFPlone/utils.py\n@@ -12,56 +12,46 @@\n from App.ImageFile import ImageFile\n from DateTime import DateTime\n from DateTime.interfaces import DateTimeError\n+from html import escape\n from OFS.CopySupport import CopyError\n from os.path import abspath\n from os.path import join\n from os.path import split\n+from plone.base import PloneMessageFactory as _\n+from plone.base import utils as base_utils\n from plone.i18n.normalizer.interfaces import IIDNormalizer\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.permissions import AddPortalContent\n from Products.CMFCore.permissions import ManageUsers\n-from Products.CMFCore.utils import ToolInit as CMFCoreToolInit\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone import PloneMessageFactory as _\n+from Products.CMFCore.utils import ToolInit as CMFCoreToolInit\n from Products.CMFPlone import bbb\n from Products.CMFPlone.interfaces.controlpanel import IImagingSchema\n from Products.CMFPlone.interfaces.siteroot import IPloneSiteRoot\n from Products.CMFPlone.log import log\n-from Products.CMFPlone.log import log_deprecated\n-from Products.CMFPlone.log import log_exc\n-from urllib.parse import urlparse\n from ZODB.POSException import ConflictError\n-from zope import schema\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n from zope.component import providedBy\n from zope.component import queryUtility\n from zope.component.hooks import getSite\n-from zope.component.interfaces import ISite\n from zope.deferredimport import deprecated as deprecated_import\n-from zope.deprecation import deprecated\n+from zope.deprecation import deprecate\n+from zope.deprecation import deprecated  # noqa\n from zope.i18n import translate\n from zope.interface import implementedBy\n from zope.publisher.interfaces.browser import IBrowserRequest\n \n-import json\n import OFS\n import pkg_resources\n import re\n import sys\n import transaction\n-import warnings\n import zope.interface\n \n-try:\n-    from html import escape\n-except ImportError:\n-    from cgi import escape\n \n-try:\n-    from types import ClassType\n-except ImportError:\n-    ClassType = type\n+# todo: check below if this is still needed\n+ClassType = type\n \n if bbb.HAS_ZSERVER:\n     from webdav.interfaces import IWriteLock\n@@ -69,11 +59,33 @@\n     from OFS.interfaces import IWriteLock\n \n deprecated_import(\n-    "Import from Products.CMFPlone.defaultpage instead",\n-    isDefaultPage=\'Products.CMFPlone.defaultpage:check_default_page_via_view\',\n-    getDefaultPage=\'Products.CMFPlone.defaultpage:get_default_page_via_view\',\n+    "Import from plone.base.utils instead (will be removed in Plone 7)",\n+    human_readable_size=\'plone.base.utils:human_readable_size\',\n+    safeToInt=\'plone.base.utils:safeToInt\',\n+    safe_bytes=\'plone.base.utils:safe_bytes\',\n+    safe_text=\'plone.base.utils:safe_text\',\n+    get_installer=\'plone.base.utils:get_installer\',\n+    get_top_request=\'plone.base.utils:get_top_request\',\n+    get_top_site_from_url=\'plone.base.utils:get_top_site_from_url\',\n )\n \n+@deprecate("Use plone.base.utils.safe_bytes instead (will be removed in Plone 7)")\n+def safe_encode(*args, **kwargs):\n+    return base_utils.safe_bytes(*args, **kwargs)\n+\n+@deprecate("Use plone.base.utils.safe_text instead (will be removed in Plone 7)")\n+def safe_unicode(*args, **kwargs):\n+    return base_utils.safe_text(*args, **kwargs)\n+\n+@deprecate("Use plone.base.utils.safe_text instead (will be removed in Plone 7)")\n+def safe_nativestring(value, encoding=\'utf-8\'):\n+    """Convert a value to str in py2 and to text in py3\n+    """\n+    if isinstance(value, bytes):\n+        value = base_utils.safe_text(value, encoding)\n+    return value\n+\n+\n security = ModuleSecurityInfo()\n security.declarePrivate(\'deprecated\')\n security.declarePrivate(\'abspath\')\n@@ -96,8 +108,6 @@\n QUALITY_DEFAULT = 88\n pattern = re.compile(r\'^(.*)\\s+(\\d+)\\s*:\\s*(\\d+)$\')\n \n-# Log methods\n-log_exc  # pyflakes.  Keep this, as someone may import it.\n _marker = []\n \n \n@@ -212,13 +222,6 @@ def pretty_title_or_id(context, obj, empty_value=_marker):\n     return empty_value\n \n \n-def getSiteEncoding(context):\n-    return \'utf-8\'\n-deprecated(\'getSiteEncoding\',\n-           (\'`getSiteEncoding` is deprecated. Plone only supports UTF-8 \'\n-            \'currently. This method always returns "utf-8"\'))\n-\n-\n def getEmptyTitle(context, translated=True):\n     """Returns string to be used for objects with no title or id"""\n     # The default is an extra fancy unicode elipsis\n@@ -337,32 +340,6 @@ def _createObjectByType(type_name, container, id, *args, **kw):\n     return fti._constructInstance(container, id, *args, **kw)\n \n \n-def safeToInt(value, default=0):\n-    """Convert value to integer or just return 0 if we can\'t\n-\n-       >>> safeToInt(45)\n-       45\n-\n-       >>> safeToInt("42")\n-       42\n-\n-       >>> safeToInt("spam")\n-       0\n-\n-       >>> safeToInt([])\n-       0\n-\n-       >>> safeToInt(None)\n-       0\n-\n-       >>> safeToInt(None, default=-1)\n-       -1\n-    """\n-    try:\n-        return int(value)\n-    except (ValueError, TypeError):\n-        return default\n-\n release_levels = (\'alpha\', \'beta\', \'candidate\', \'final\')\n rl_abbr = {\'a\': \'alpha\', \'b\': \'beta\', \'rc\': \'candidate\'}\n \n@@ -393,7 +370,7 @@ def versionTupleFromString(v_str):\n     else:\n         groups = list(match.groups())\n         for i in (0, 1, 2, 4):\n-            groups[i] = safeToInt(groups[i])\n+            groups[i] = base_utils.safeToInt(groups[i])\n         if groups[3] is None:\n             groups[3] = \'final\'\n         elif groups[3] in rl_abbr.keys():\n@@ -414,7 +391,7 @@ def transaction_note(note):\n     if (len(T.description) + len(note)) >= 65533:\n         log(\'Transaction note too large omitting %s\' % str(note))\n     else:\n-        T.note(safe_unicode(note))\n+        T.note(base_utils.safe_unicode(note))\n \n \n def base_hasattr(obj, name):\n@@ -438,67 +415,11 @@ def safe_callable(obj):\n     if safe_hasattr(obj, \'__class__\'):\n         if safe_hasattr(obj, \'__call__\'):\n             return True\n-        else:\n-            return isinstance(obj, ClassType)\n-    else:\n-        return callable(obj)\n-\n-\n-def safe_text(value, encoding=\'utf-8\'):\n-    """Converts a value to text, even it is already a text string.\n+        return isinstance(obj, ClassType)\n+    return callable(obj)\n \n-        >>> from Products.CMFPlone.utils import safe_unicode\n-        >>> test_bytes = u\'\\u01b5\'.encode(\'utf-8\')\n-        >>> safe_unicode(\'spam\') == u\'spam\'\n-        True\n-        >>> safe_unicode(b\'spam\') == u\'spam\'\n-        True\n-        >>> safe_unicode(u\'spam\') == u\'spam\'\n-        True\n-        >>> safe_unicode(u\'spam\'.encode(\'utf-8\')) == u\'spam\'\n-        True\n-        >>> safe_unicode(test_bytes) == u\'\\u01b5\'\n-        True\n-        >>> safe_unicode(u\'\\xc6\\xb5\'.encode(\'iso-8859-1\')) == u\'\\u01b5\'\n-        True\n-        >>> safe_unicode(test_bytes, encoding=\'ascii\') == u\'\\u01b5\'\n-        True\n-        >>> safe_unicode(1) == 1\n-        True\n-        >>> print(safe_unicode(None))\n-        None\n-    """\n-    if isinstance(value, str):\n-        return value\n-    elif isinstance(value, bytes):\n-        try:\n-            value = str(value, encoding)\n-        except (UnicodeDecodeError):\n-            value = value.decode(\'utf-8\', \'replace\')\n-    return value\n-\n-\n-safe_unicode = safe_text\n-\n-\n-def safe_bytes(value, encoding=\'utf-8\'):\n-    """Convert text to bytes of the specified encoding.\n-    """\n-    if isinstance(value, str):\n-        value = value.encode(encoding)\n-    return value\n \n \n-safe_encode = safe_bytes\n-\n-\n-def safe_nativestring(value, encoding=\'utf-8\'):\n-    """Convert a value to str in py2 and to text in py3\n-    """\n-    if isinstance(value, bytes):\n-        value = safe_text(value, encoding)\n-    return value\n-\n \n def tuplize(value):\n     if isinstance(value, tuple):\n@@ -522,10 +443,12 @@ def flatten(interfaces):\n     return tuple(flattened)\n \n \n+@deprecate("Use zope.interface.directlyProvides instead (will be removed in Plone 7)")\n def directlyProvides(obj, *interfaces):\n     return zope.interface.directlyProvides(obj, *interfaces)\n \n \n+@deprecate("Use zope.interface.classImplements instead (will be removed in Plone 7)")\n def classImplements(class_, *interfaces):\n     return zope.interface.classImplements(class_, *interfaces)\n \n@@ -543,10 +466,7 @@ def webdav_enabled(obj, container):\n     """WebDAV check used in externalEditorEnabled.py"""\n \n     # Object implements lock interface\n-    if IWriteLock.providedBy(obj):\n-        return True\n-\n-    return False\n+    return IWriteLock.providedBy(obj)\n \n \n # Copied \'unrestricted_rename\' from ATCT migrations to avoid\n@@ -623,13 +543,6 @@ def _getSecurity(klass, create=True):\n     return security\n \n \n-def isLinked(obj):\n-    """Check if the given content object is linked from another one."""\n-    log_deprecated("utils.isLinked is deprecated, you should use plone.app.linkintegrity.utils.hasIncomingLinks")  # noqa\n-    from plone.app.linkintegrity.utils import hasIncomingLinks\n-    return hasIncomingLinks(obj)\n-\n-\n def set_own_login_name(member, loginname):\n     """Allow the user to set his/her own login name.\n \n@@ -656,25 +569,6 @@ def ajax_load_url(url):\n     return url\n \n \n-def validate_json(value):\n-    warnings.warn(\n-        \'Moved to the only place where it was used in order to avoid circular \'\n-        \'imports between ./interfaces/* and ./utils. Now relocated to \'\n-        \'"./interfaces/controlpanel.py"\',\n-        DeprecationWarning)\n-    try:\n-        json.loads(value)\n-    except ValueError as exc:\n-        class JSONError(schema.ValidationError):\n-            __doc__ = _("Must be empty or a valid JSON-formatted "\n-                        "configuration \xe2\x80\x93 ${message}.", mapping={\n-                            \'message\': str(exc)})\n-\n-        raise JSONError(value)\n-\n-    return True\n-\n-\n def bodyfinder(text):\n     """ Return body or unchanged text if no body tags found.\n \n@@ -720,12 +614,6 @@ def getQuality():\n     return QUALITY_DEFAULT\n \n \n-def getRetinaScales():\n-    warnings.warn(\n-        \'use getHighPixelDensityScales instead\',\n-        DeprecationWarning)\n-    return getHighPixelDensityScales()\n-\n def getHighPixelDensityScales():\n     from plone.namedfile.utils import getHighPixelDensityScales as func\n     return func()\n@@ -744,64 +632,9 @@ def getSiteLogo(site=None):\n         filename, data = b64decode_file(settings.site_logo)\n         return \'{}/@@site-logo/{}\'.format(\n             site_url, filename)\n-    else:\n-        return \'%s/logo.png\' % site_url\n-\n-\n-def get_installer(context, request=None):\n-    if request is None:\n-        request = aq_get(context, \'REQUEST\', None)\n-    view = getMultiAdapter((context, request), name=\'installer\')\n-    return view\n+    return \'%s/logo.png\' % site_url\n \n \n-def get_top_request(request):\n-    """Get highest request from a subrequest.\n-    """\n-\n-    def _top_request(req):\n-        parent_request = req.get(\'PARENT_REQUEST\', None)\n-        return _top_request(parent_request) if parent_request else req\n-    return _top_request(request)\n-\n-\n-def get_top_site_from_url(context, request):\n-    """Find the top-most site, which is still in the url path.\n-\n-    If the current context is within a subsite within a PloneSiteRoot and no\n-    virtual hosting is in place, the PloneSiteRoot is returned.\n-    When at the same context but in a virtual hosting environment with the\n-    virtual host root pointing to the subsite, it returns the subsite instead\n-    the PloneSiteRoot.\n-\n-    For this given content structure:\n-\n-    /Plone/Subsite\n-\n-    It should return the following in these cases:\n-\n-    - No virtual hosting, URL path: /Plone, Returns: Plone Site\n-    - No virtual hosting, URL path: /Plone/Subsite, Returns: Plone\n-    - Virtual hosting roots to Subsite, URL path: /, Returns: Subsite\n-    """\n-    site = getSite()\n-    try:\n-        url_path = urlparse(context.absolute_url()).path.split(\'/\')\n-        for idx in range(len(url_path)):\n-            _path = \'/\'.join(url_path[:idx + 1]) or \'/\'\n-            site_path = \'/\'.join(request.physicalPathFromURL(_path)) or \'/\'\n-            _site = context.restrictedTraverse(site_path)\n-            if ISite.providedBy(_site):\n-                break\n-        if _site:\n-            site = _site\n-    except (ValueError, AttributeError):\n-        # On error, just return getSite.\n-        # Refs: https://github.com/plone/plone.app.content/issues/103\n-        # Also, TestRequest doesn\'t have physicalPathFromURL\n-        pass\n-    return site\n-\n \n def _safe_format(inst, method):\n     """Use our SafeFormatter that uses guarded_getattr for attribute access.\n@@ -812,34 +645,6 @@ def _safe_format(inst, method):\n     return SafeFormatter(inst).safe_format\n \n \n-SIZE_CONST = {\'KB\': 1024, \'MB\': 1024 * 1024, \'GB\': 1024 * 1024 * 1024}\n-SIZE_ORDER = (\'GB\', \'MB\', \'KB\')\n-\n-\n-def human_readable_size(size):\n-    """ Get a human readable size string. """\n-    smaller = SIZE_ORDER[-1]\n-\n-    # if the size is a float, then make it an int\n-    # happens for large files\n-    try:\n-        size = int(size)\n-    except (ValueError, TypeError):\n-        pass\n-\n-    if not size:\n-        return \'0 %s\' % smaller\n-\n-    if isinstance(size, int):\n-        if size < SIZE_CONST[smaller]:\n-            return \'1 %s\' % smaller\n-        for c in SIZE_ORDER:\n-            if size // SIZE_CONST[c] > 0:\n-                break\n-        return \'{:.1f} {}\'.format(float(size / float(SIZE_CONST[c])), c)\n-    return size\n-\n-\n def check_id(\n         context, id=None, required=0, alternative_id=None, contained_by=None,\n         **kwargs):\ndiff --git a/setup.py b/setup.py\nindex 22d18bdd85..dfb39ebb5d 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -69,6 +69,7 @@\n         \'plone.app.vocabularies\',\n         \'plone.app.workflow\',\n         \'plone.batching\',\n+        \'plone.base\',\n         \'plone.browserlayer >= 2.1.5\',\n         \'plone.contentrules\',\n         \'plone.folder\',\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-01-09T13:27:51+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/5852da7247bf9500dce03bc803f4bcb5400d0171

fix imports

Files changed:
M Products/CMFPlone/CatalogTool.py
M Products/CMFPlone/MigrationTool.py
M Products/CMFPlone/PasswordResetTool.py
M Products/CMFPlone/PloneBaseTool.py
M Products/CMFPlone/PloneControlPanel.py
M Products/CMFPlone/PloneTool.py
M Products/CMFPlone/Portal.py
M Products/CMFPlone/PropertiesTool.py
M Products/CMFPlone/RegistrationTool.py
M Products/CMFPlone/TranslationServiceTool.py
M Products/CMFPlone/WorkflowTool.py
M Products/CMFPlone/__init__.py
M Products/CMFPlone/browser/admin.py
M Products/CMFPlone/browser/admin.zcml
M Products/CMFPlone/browser/atd.py
M Products/CMFPlone/browser/author.py
M Products/CMFPlone/browser/configure.zcml
M Products/CMFPlone/browser/contact_info.py
M Products/CMFPlone/browser/defaultpage.py
M Products/CMFPlone/browser/login/configure.zcml
M Products/CMFPlone/browser/login/login.py
M Products/CMFPlone/browser/login/login_help.py
M Products/CMFPlone/browser/login/password_reset.py
M Products/CMFPlone/browser/navigation.py
M Products/CMFPlone/browser/navtree.py
M Products/CMFPlone/browser/robots.py
M Products/CMFPlone/browser/search.py
M Products/CMFPlone/browser/sendto.py
M Products/CMFPlone/browser/sitelogo.py
M Products/CMFPlone/browser/syndication/adapters.py
M Products/CMFPlone/browser/syndication/configure.zcml
M Products/CMFPlone/browser/syndication/settings.py
M Products/CMFPlone/browser/syndication/tool.py
M Products/CMFPlone/browser/syndication/utils.py
M Products/CMFPlone/browser/syndication/views.py
M Products/CMFPlone/catalog.zcml
M Products/CMFPlone/controlpanel/README.rst
M Products/CMFPlone/controlpanel/bbb/editing.py
M Products/CMFPlone/controlpanel/bbb/filter.py
M Products/CMFPlone/controlpanel/bbb/language.py
M Products/CMFPlone/controlpanel/bbb/mail.py
M Products/CMFPlone/controlpanel/bbb/maintenance.py
M Products/CMFPlone/controlpanel/bbb/markup.py
M Products/CMFPlone/controlpanel/bbb/navigation.py
M Products/CMFPlone/controlpanel/bbb/search.py
M Products/CMFPlone/controlpanel/bbb/security.py
M Products/CMFPlone/controlpanel/bbb/site.py
M Products/CMFPlone/controlpanel/bbb/usergroups.py
M Products/CMFPlone/controlpanel/browser/actions.py
M Products/CMFPlone/controlpanel/browser/configure.zcml
M Products/CMFPlone/controlpanel/browser/dateandtime.py
M Products/CMFPlone/controlpanel/browser/editing.py
M Products/CMFPlone/controlpanel/browser/filter.py
M Products/CMFPlone/controlpanel/browser/imaging.py
M Products/CMFPlone/controlpanel/browser/mail.py
M Products/CMFPlone/controlpanel/browser/maintenance.py
M Products/CMFPlone/controlpanel/browser/markup.py
M Products/CMFPlone/controlpanel/browser/navigation.py
M Products/CMFPlone/controlpanel/browser/overview.py
M Products/CMFPlone/controlpanel/browser/quickinstaller.py
M Products/CMFPlone/controlpanel/browser/resourceregistry.py
M Products/CMFPlone/controlpanel/browser/search.py
M Products/CMFPlone/controlpanel/browser/security.py
M Products/CMFPlone/controlpanel/browser/site.py
M Products/CMFPlone/controlpanel/browser/socialmedia.py
M Products/CMFPlone/controlpanel/browser/syndication.py
M Products/CMFPlone/controlpanel/browser/tinymce.py
M Products/CMFPlone/controlpanel/browser/types.py
M Products/CMFPlone/controlpanel/browser/usergroups.py
M Products/CMFPlone/controlpanel/events.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_editing_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_filter_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_mail_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_maintenance_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_markup_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_navigation_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_search_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_security_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_site_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_usergroups_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_editing.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_filter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_mail.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_markup.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_navigation.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_search.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_security.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_site.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_dateandtime.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_editing.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_events.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_filter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_mail.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_markup.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_navigation.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_search.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_security.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_site.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_types.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_usergroups.py
M Products/CMFPlone/controlpanel/tests/test_upgrades1.zcml
M Products/CMFPlone/controlpanel/tests/test_upgrades2.zcml
M Products/CMFPlone/exportimport/configure.zcml
M Products/CMFPlone/exportimport/controlpanel.py
M Products/CMFPlone/exportimport/propertiestool.py
M Products/CMFPlone/exportimport/tests/testControlPanel.py
M Products/CMFPlone/exportimport/tests/testPropertiesTool.py
M Products/CMFPlone/factory.py
M Products/CMFPlone/i18nl10n.py
M Products/CMFPlone/interfaces/__init__.py
M Products/CMFPlone/patches/sendmail.py
M Products/CMFPlone/patterns/configure.zcml
M Products/CMFPlone/patterns/settings.py
M Products/CMFPlone/patterns/tinymce.py
M Products/CMFPlone/patterns/view.py
M Products/CMFPlone/profiles.zcml
M Products/CMFPlone/resources/browser/combine.py
M Products/CMFPlone/resources/browser/configjs.py
M Products/CMFPlone/resources/browser/cook.py
M Products/CMFPlone/resources/browser/mixins.py
M Products/CMFPlone/resources/browser/resource.py
M Products/CMFPlone/resources/exportimport/resourceregistry.py
M Products/CMFPlone/setuphandlers.py
M Products/CMFPlone/tests/csrf.txt
M Products/CMFPlone/tests/dummy.py
M Products/CMFPlone/tests/pwreset_browser.rst
M Products/CMFPlone/tests/robot/robot_setup.py
M Products/CMFPlone/tests/testCSSandJSRegistry.py
M Products/CMFPlone/tests/testEmailLogin.py
M Products/CMFPlone/tests/testIImagingSchema.py
M Products/CMFPlone/tests/testNavTree.py
M Products/CMFPlone/tests/testNavigationView.py
M Products/CMFPlone/tests/testPloneTool.py
M Products/CMFPlone/tests/testPortalCreation.py
M Products/CMFPlone/tests/testQueryCatalog.py
M Products/CMFPlone/tests/testRegistrationTool.py
M Products/CMFPlone/tests/testResourceRegistries.py
M Products/CMFPlone/tests/testSearch.py
M Products/CMFPlone/tests/testSyndication.py
M Products/CMFPlone/tests/testURLTool.py
M Products/CMFPlone/tests/test_defaultpage.py
M Products/CMFPlone/tests/test_mails.py
M Products/CMFPlone/tests/test_metabundles.py
M Products/CMFPlone/tests/test_patternsettings.py
M Products/CMFPlone/tests/test_redirect_after_login.py
M Products/CMFPlone/tests/test_robots_txt.py
M Products/CMFPlone/tests/test_sitelogo.py
M Products/CMFPlone/tests/test_utils.py
M Products/CMFPlone/traversal.py
M Products/CMFPlone/utils.py
M Products/CMFPlone/workflow.py

b'diff --git a/Products/CMFPlone/CatalogTool.py b/Products/CMFPlone/CatalogTool.py\nindex 03810c863e..a8db55d616 100644\n--- a/Products/CMFPlone/CatalogTool.py\n+++ b/Products/CMFPlone/CatalogTool.py\n@@ -21,8 +21,8 @@\n from Products.CMFCore.utils import _getAuthenticatedUser\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import DISCUSSION_ANNOTATION_KEY\n-from Products.CMFPlone.interfaces import INonStructuralFolder\n-from Products.CMFPlone.interfaces import IPloneCatalogTool\n+from plone.base.interfaces import INonStructuralFolder\n+from plone.base.interfaces import IPloneCatalogTool\n from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n from Products.CMFPlone.utils import base_hasattr\n from Products.CMFPlone.utils import human_readable_size\n@@ -51,7 +51,7 @@\n _marker = object()\n \n MAX_SORTABLE_TITLE = 40\n-BLACKLISTED_INTERFACES = frozenset((\n+DENIED_INTERFACES = frozenset((\n     \'AccessControl.interfaces.IOwned\',\n     \'AccessControl.interfaces.IPermissionMappingSupport\',\n     \'AccessControl.interfaces.IRoleManager\',\n@@ -92,8 +92,8 @@\n     \'Products.CMFCore.interfaces._content.IWorkflowAware\',\n     \'Products.CMFDynamicViewFTI.interfaces.IBrowserDefault\',\n     \'Products.CMFDynamicViewFTI.interfaces.ISelectableBrowserDefault\',\n-    \'Products.CMFPlone.interfaces.constrains.IConstrainTypes\',\n-    \'Products.CMFPlone.interfaces.constrains.ISelectableConstrainTypes\',\n+    \'plone.base.interfaces.constrains.IConstrainTypes\',\n+    \'plone.base.interfaces.constrains.ISelectableConstrainTypes\',\n     \'Products.GenericSetup.interfaces.IDAVAware\',\n     \'webdav.EtagSupport.EtagBaseInterface\',\n     \'webdav.interfaces.IDAVCollection\',\n@@ -112,13 +112,8 @@\n     \'zope.interface.Interface\',\n ))\n \n-\n-@deprecate(\'Use catalog.getAllBrains() instead. \' +\n-           \'catalog_get_all will be removed in Plone 6\')\n-def catalog_get_all(catalog, unique_idx=\'UID\'):\n-    """Get all brains from the catalog.\n-    """\n-    return catalog.getAllBrains()\n+# bbb, remove in Plone 7\n+BLACKLISTED_INTERFACES = DENIED_INTERFACES\n \n \n @indexer(Interface)\n@@ -157,7 +152,7 @@ def allowedRolesAndUsers(obj):\n def object_provides(obj):\n     return tuple(\n         [i.__identifier__ for i in providedBy(obj).flattened()\n-         if i.__identifier__ not in BLACKLISTED_INTERFACES]\n+         if i.__identifier__ not in DENIED_INTERFACES]\n     )\n \n \ndiff --git a/Products/CMFPlone/MigrationTool.py b/Products/CMFPlone/MigrationTool.py\nindex 9dca5b740c..d03479e255 100644\n--- a/Products/CMFPlone/MigrationTool.py\n+++ b/Products/CMFPlone/MigrationTool.py\n@@ -8,7 +8,7 @@\n from Products.CMFCore.utils import registerToolInterface\n from Products.CMFCore.utils import UniqueObject\n from Products.CMFPlone.factory import _DEFAULT_PROFILE\n-from Products.CMFPlone.interfaces import IMigrationTool\n+from plone.base.interfaces import IMigrationTool\n from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n from io import StringIO\n from ZODB.POSException import ConflictError\ndiff --git a/Products/CMFPlone/PasswordResetTool.py b/Products/CMFPlone/PasswordResetTool.py\nindex 1a20755edd..d15ecc7b20 100644\n--- a/Products/CMFPlone/PasswordResetTool.py\n+++ b/Products/CMFPlone/PasswordResetTool.py\n@@ -13,8 +13,8 @@\n from Products.CMFCore.permissions import ManagePortal\n from Products.CMFCore.utils import getToolByName\n from Products.CMFCore.utils import UniqueObject\n-from Products.CMFPlone.interfaces import IPWResetTool\n-from Products.CMFPlone.interfaces import ISecuritySchema\n+from plone.base.interfaces import IPWResetTool\n+from plone.base.interfaces import ISecuritySchema\n from Products.CMFPlone.RegistrationTool import get_member_by_login_name\n from zope.component import getUtility\n from zope.interface import implementer\ndiff --git a/Products/CMFPlone/PloneBaseTool.py b/Products/CMFPlone/PloneBaseTool.py\nindex 821724d690..d0d0a9860d 100644\n--- a/Products/CMFPlone/PloneBaseTool.py\n+++ b/Products/CMFPlone/PloneBaseTool.py\n@@ -1,6 +1,6 @@\n from AccessControl.class_init import InitializeClass\n from AccessControl import ClassSecurityInfo\n-from Products.CMFPlone.interfaces import IPloneBaseTool\n+from plone.base.interfaces import IPloneBaseTool\n from Acquisition import aq_base\n from Acquisition import aq_parent\n from Acquisition import aq_inner\ndiff --git a/Products/CMFPlone/PloneControlPanel.py b/Products/CMFPlone/PloneControlPanel.py\nindex 6b0d4503a7..0748f25765 100644\n--- a/Products/CMFPlone/PloneControlPanel.py\n+++ b/Products/CMFPlone/PloneControlPanel.py\n@@ -12,7 +12,7 @@\n from Products.CMFCore.utils import registerToolInterface\n from Products.CMFCore.utils import UniqueObject\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import IControlPanel\n+from plone.base.interfaces import IControlPanel\n from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n from zope.component.hooks import getSite\n from zope.i18n import translate\ndiff --git a/Products/CMFPlone/PloneTool.py b/Products/CMFPlone/PloneTool.py\nindex 42dab0c1f3..216f8c251f 100644\n--- a/Products/CMFPlone/PloneTool.py\n+++ b/Products/CMFPlone/PloneTool.py\n@@ -25,14 +25,14 @@\n from Products.CMFCore.WorkflowCore import WorkflowException\n from Products.CMFDynamicViewFTI.interfaces import IBrowserDefault\n from Products.CMFPlone import utils\n-from Products.CMFPlone.defaultpage import check_default_page_via_view\n-from Products.CMFPlone.defaultpage import get_default_page_via_view\n+from plone.base.defaultpage import check_default_page_via_view\n+from plone.base.defaultpage import get_default_page_via_view\n from Products.CMFPlone.events import ReorderedEvent\n-from Products.CMFPlone.interfaces import INonStructuralFolder\n-from Products.CMFPlone.interfaces import IPloneTool\n-from Products.CMFPlone.interfaces import ISearchSchema\n-from Products.CMFPlone.interfaces import ISecuritySchema\n-from Products.CMFPlone.interfaces import ISiteSchema\n+from plone.base.interfaces import INonStructuralFolder\n+from plone.base.interfaces import IPloneTool\n+from plone.base.interfaces import ISearchSchema\n+from plone.base.interfaces import ISecuritySchema\n+from plone.base.interfaces import ISiteSchema\n from Products.CMFPlone.log import log\n from Products.CMFPlone.log import log_deprecated\n from Products.CMFPlone.log import log_exc\n@@ -525,7 +525,7 @@ def isDefaultPage(self, obj, request=None):\n     @security.public\n     def getDefaultPage(self, obj, request=None):\n         # Given a folderish item, find out if it has a default-page using\n-        # the lookup rules of Plone (see Products.CMFPlone/defaultpage.py).\n+        # the lookup rules of Plone (see plone.base.defaultpage).\n         # Lookup happens over a view, for which in theory a different\n         # implementation may be used.\n         if request is None:\ndiff --git a/Products/CMFPlone/Portal.py b/Products/CMFPlone/Portal.py\nindex 024a9e49cf..de02c143f2 100644\n--- a/Products/CMFPlone/Portal.py\n+++ b/Products/CMFPlone/Portal.py\n@@ -24,8 +24,8 @@\n from Products.CMFCore.utils import UniqueObject\n from Products.CMFPlone import bbb\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces.siteroot import IPloneSiteRoot\n-from Products.CMFPlone.interfaces.syndication import ISyndicatable\n+from plone.base.interfaces.siteroot import IPloneSiteRoot\n+from plone.base.interfaces.syndication import ISyndicatable\n from Products.CMFPlone.permissions import AddPortalContent\n from Products.CMFPlone.permissions import AddPortalFolders\n from Products.CMFPlone.permissions import ListPortalMembers\ndiff --git a/Products/CMFPlone/PropertiesTool.py b/Products/CMFPlone/PropertiesTool.py\nindex 7ceebf2583..d8ce537a1d 100644\n--- a/Products/CMFPlone/PropertiesTool.py\n+++ b/Products/CMFPlone/PropertiesTool.py\n@@ -12,7 +12,7 @@\n from OFS.SimpleItem import SimpleItem\n from AccessControl import ClassSecurityInfo\n from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n-from Products.CMFPlone.interfaces \\\n+from plone.base.interfaces \\\n     import IPropertiesTool, ISimpleItemWithProperties\n from Products.CMFPlone.utils import WWW_DIR\n from Products.MailHost.interfaces import IMailHost\ndiff --git a/Products/CMFPlone/RegistrationTool.py b/Products/CMFPlone/RegistrationTool.py\nindex f6834fe640..663c967d51 100644\n--- a/Products/CMFPlone/RegistrationTool.py\n+++ b/Products/CMFPlone/RegistrationTool.py\n@@ -17,7 +17,7 @@\n from Products.CMFCore.utils import _checkPermission\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import ISecuritySchema\n+from plone.base.interfaces import ISecuritySchema\n from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n from Products.CMFPlone.PloneTool import EMAIL_RE\n from Products.PluggableAuthService.interfaces.authservice import IPluggableAuthService  # noqa: E501\ndiff --git a/Products/CMFPlone/TranslationServiceTool.py b/Products/CMFPlone/TranslationServiceTool.py\nindex d90cbace01..086af2ae6a 100644\n--- a/Products/CMFPlone/TranslationServiceTool.py\n+++ b/Products/CMFPlone/TranslationServiceTool.py\n@@ -17,7 +17,7 @@\n from OFS.SimpleItem import SimpleItem\n from plone.base import PloneLocalesMessageFactory as PLMF\n from Products.CMFCore.utils import UniqueObject\n-from Products.CMFPlone.interfaces import ITranslationServiceTool\n+from plone.base.interfaces import ITranslationServiceTool\n from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n from zope.i18n import translate\n from zope.interface import implementer\ndiff --git a/Products/CMFPlone/WorkflowTool.py b/Products/CMFPlone/WorkflowTool.py\nindex 31a9cf8203..7085bb42c5 100644\n--- a/Products/CMFPlone/WorkflowTool.py\n+++ b/Products/CMFPlone/WorkflowTool.py\n@@ -2,7 +2,7 @@\n \n from Products.CMFCore.utils import getToolByName\n from Products.CMFCore.WorkflowTool import WorkflowTool as BaseTool\n-from Products.CMFPlone.interfaces import IWorkflowChain\n+from plone.base.interfaces import IWorkflowChain\n from ZODB.POSException import ConflictError\n from Acquisition import aq_base\n \ndiff --git a/Products/CMFPlone/__init__.py b/Products/CMFPlone/__init__.py\nindex 9fc9eece80..e3778648fb 100644\n--- a/Products/CMFPlone/__init__.py\n+++ b/Products/CMFPlone/__init__.py\n@@ -211,3 +211,4 @@ def initialize(context):\n # Apply early monkey patches.  For these patches, it is too late if we do this\n # in the initialize method.\n from Products.CMFPlone import earlypatches  # noqa\n+\ndiff --git a/Products/CMFPlone/browser/admin.py b/Products/CMFPlone/browser/admin.py\nindex 50fdc7b4ac..dfa3df808c 100644\n--- a/Products/CMFPlone/browser/admin.py\n+++ b/Products/CMFPlone/browser/admin.py\n@@ -4,8 +4,8 @@\n from Products.CMFCore.permissions import ManagePortal\n from Products.CMFPlone.factory import _DEFAULT_PROFILE\n from Products.CMFPlone.factory import addPloneSite\n-from Products.CMFPlone.interfaces import INonInstallable\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n+from plone.base.interfaces import INonInstallable\n+from plone.base.interfaces import IPloneSiteRoot\n from Products.CMFPlone.utils import get_installer\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.GenericSetup import BASE, EXTENSION\ndiff --git a/Products/CMFPlone/browser/admin.zcml b/Products/CMFPlone/browser/admin.zcml\nindex 12228bfc20..fdde628d17 100644\n--- a/Products/CMFPlone/browser/admin.zcml\n+++ b/Products/CMFPlone/browser/admin.zcml\n@@ -2,7 +2,7 @@\n            xmlns:browser="http://namespaces.zope.org/browser">\n \n   <browser:view\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       name="plone-frontpage-setup"\n       class=".admin.FrontPage"\n       permission="zope.Public"\n@@ -25,7 +25,7 @@\n       />\n \n   <browser:page\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       name="plone-upgrade"\n       class=".admin.Upgrade"\n       permission="cmf.ManagePortal"\ndiff --git a/Products/CMFPlone/browser/atd.py b/Products/CMFPlone/browser/atd.py\nindex 05fe5a35c2..a4dc2d4201 100644\n--- a/Products/CMFPlone/browser/atd.py\n+++ b/Products/CMFPlone/browser/atd.py\n@@ -2,8 +2,8 @@\n from zope.component import getUtility\n from plone.registry.interfaces import IRegistry\n from http import client as http_client\n-from Products.CMFPlone.interfaces import ITinyMCESchema\n-from Products.CMFPlone.interfaces.atd import IATDProxyView\n+from plone.base.interfaces import ITinyMCESchema\n+from plone.base.interfaces.atd import IATDProxyView\n from zope.interface import implementer\n \n \ndiff --git a/Products/CMFPlone/browser/author.py b/Products/CMFPlone/browser/author.py\nindex 3247e3585c..05d92acabf 100644\n--- a/Products/CMFPlone/browser/author.py\n+++ b/Products/CMFPlone/browser/author.py\n@@ -2,8 +2,8 @@\n \n from Products.CMFCore.interfaces import IPropertiesTool\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import ISecuritySchema\n-from Products.CMFPlone.interfaces.controlpanel import IMailSchema\n+from plone.base.interfaces import ISecuritySchema\n+from plone.base.interfaces.controlpanel import IMailSchema\n from Products.CMFPlone.utils import getToolByName\n from Products.CMFPlone.utils import pretty_title_or_id\n from Products.Five.browser import BrowserView\ndiff --git a/Products/CMFPlone/browser/configure.zcml b/Products/CMFPlone/browser/configure.zcml\nindex 313c944bab..a128733cf9 100644\n--- a/Products/CMFPlone/browser/configure.zcml\n+++ b/Products/CMFPlone/browser/configure.zcml\n@@ -131,7 +131,7 @@\n       />\n \n   <browser:page\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       name="author"\n       class=".author.AuthorView"\n       permission="zope.Public"\n@@ -139,7 +139,7 @@\n       />\n \n   <browser:page\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       name="author-feedback-template"\n       permission="zope.Public"\n       template="templates/author_feedback_template.pt"\n@@ -230,7 +230,7 @@\n       name="default_page"\n       class=".defaultpage.DefaultPage"\n       permission="zope.Public"\n-      allowed_interface="Products.CMFPlone.interfaces.defaultpage.IDefaultPage"\n+      allowed_interface="plone.base.interfaces.defaultpage.IDefaultPage"\n       />\n \n   <browser:page\ndiff --git a/Products/CMFPlone/browser/contact_info.py b/Products/CMFPlone/browser/contact_info.py\nindex 9d8067f323..1c2dcd3fc5 100644\n--- a/Products/CMFPlone/browser/contact_info.py\n+++ b/Products/CMFPlone/browser/contact_info.py\n@@ -1,7 +1,7 @@\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n from Products.CMFPlone.browser.interfaces import IContactForm\n-from Products.CMFPlone.interfaces.controlpanel import IMailSchema\n+from plone.base.interfaces.controlpanel import IMailSchema\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.statusmessages.interfaces import IStatusMessage\n from email.mime.text import MIMEText\ndiff --git a/Products/CMFPlone/browser/defaultpage.py b/Products/CMFPlone/browser/defaultpage.py\nindex 57446ec69a..b8523814e3 100644\n--- a/Products/CMFPlone/browser/defaultpage.py\n+++ b/Products/CMFPlone/browser/defaultpage.py\n@@ -1,7 +1,7 @@\n from Acquisition import aq_inner\n-from Products.CMFPlone.interfaces.defaultpage import IDefaultPage\n-from Products.CMFPlone.defaultpage import get_default_page\n-from Products.CMFPlone.defaultpage import is_default_page\n+from plone.base.interfaces.defaultpage import IDefaultPage\n+from plone.base.defaultpage import get_default_page\n+from plone.base.defaultpage import is_default_page\n from Products.Five.browser import BrowserView\n from zope.interface import implementer\n \ndiff --git a/Products/CMFPlone/browser/login/configure.zcml b/Products/CMFPlone/browser/login/configure.zcml\nindex f576522ac8..a3aeb79489 100644\n--- a/Products/CMFPlone/browser/login/configure.zcml\n+++ b/Products/CMFPlone/browser/login/configure.zcml\n@@ -145,7 +145,7 @@\n \n     <browser:page\n         name="explainPWResetTool"\n-        for="Products.CMFPlone.interfaces.IPWResetTool"\n+        for="plone.base.interfaces.IPWResetTool"\n         class=".password_reset.ExplainPWResetToolView"\n         template="templates/explainPWResetTool.pt"\n         permission="zope2.ViewManagementScreens"\ndiff --git a/Products/CMFPlone/browser/login/login.py b/Products/CMFPlone/browser/login/login.py\nindex db2875f7ba..92208c2688 100644\n--- a/Products/CMFPlone/browser/login/login.py\n+++ b/Products/CMFPlone/browser/login/login.py\n@@ -3,12 +3,12 @@\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import IForcePasswordChange\n-from Products.CMFPlone.interfaces import IInitialLogin\n-from Products.CMFPlone.interfaces import ILoginForm\n-from Products.CMFPlone.interfaces import ILoginFormSchema\n-from Products.CMFPlone.interfaces import IRedirectAfterLogin\n-from Products.CMFPlone.interfaces import ISecuritySchema\n+from plone.base.interfaces import IForcePasswordChange\n+from plone.base.interfaces import IInitialLogin\n+from plone.base.interfaces import ILoginForm\n+from plone.base.interfaces import ILoginFormSchema\n+from plone.base.interfaces import IRedirectAfterLogin\n+from plone.base.interfaces import ISecuritySchema\n from Products.Five.browser import BrowserView\n from Products.statusmessages.interfaces import IStatusMessage\n from urllib import parse\ndiff --git a/Products/CMFPlone/browser/login/login_help.py b/Products/CMFPlone/browser/login/login_help.py\nindex 10fd9c502a..e79c0bcd7e 100644\n--- a/Products/CMFPlone/browser/login/login_help.py\n+++ b/Products/CMFPlone/browser/login/login_help.py\n@@ -3,10 +3,10 @@\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import ILoginHelpForm\n-from Products.CMFPlone.interfaces import ILoginHelpFormSchema\n-from Products.CMFPlone.interfaces import ISecuritySchema\n-from Products.CMFPlone.interfaces.controlpanel import IMailSchema\n+from plone.base.interfaces import ILoginHelpForm\n+from plone.base.interfaces import ILoginHelpFormSchema\n+from plone.base.interfaces import ISecuritySchema\n+from plone.base.interfaces.controlpanel import IMailSchema\n from Products.CMFPlone.utils import safe_unicode\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.statusmessages.interfaces import IStatusMessage\ndiff --git a/Products/CMFPlone/browser/login/password_reset.py b/Products/CMFPlone/browser/login/password_reset.py\nindex 7594dc5461..258b1ce453 100644\n--- a/Products/CMFPlone/browser/login/password_reset.py\n+++ b/Products/CMFPlone/browser/login/password_reset.py\n@@ -5,8 +5,8 @@\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import IPasswordResetToolView\n-from Products.CMFPlone.interfaces.controlpanel import IMailSchema\n+from plone.base.interfaces import IPasswordResetToolView\n+from plone.base.interfaces.controlpanel import IMailSchema\n from Products.CMFPlone.PasswordResetTool import ExpiredRequestError\n from Products.CMFPlone.PasswordResetTool import InvalidRequestError\n from Products.CMFPlone.RegistrationTool import get_member_by_login_name\ndiff --git a/Products/CMFPlone/browser/navigation.py b/Products/CMFPlone/browser/navigation.py\nindex e90e29d651..eb76b1d18d 100644\n--- a/Products/CMFPlone/browser/navigation.py\n+++ b/Products/CMFPlone/browser/navigation.py\n@@ -10,9 +10,9 @@\n from Products.CMFPlone.browser.interfaces import INavigationTabs\n from Products.CMFPlone.browser.interfaces import ISiteMap\n from Products.CMFPlone.browser.navtree import SitemapQueryBuilder\n-from Products.CMFPlone.defaultpage import check_default_page_via_view\n-from Products.CMFPlone.interfaces import IHideFromBreadcrumbs\n-from Products.CMFPlone.interfaces import INavigationSchema\n+from plone.base.defaultpage import check_default_page_via_view\n+from plone.base.interfaces import IHideFromBreadcrumbs\n+from plone.base.interfaces import INavigationSchema\n from Products.Five import BrowserView\n from zope.component import getMultiAdapter\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/browser/navtree.py b/Products/CMFPlone/browser/navtree.py\nindex 3a0a0aee34..d066dc4e12 100644\n--- a/Products/CMFPlone/browser/navtree.py\n+++ b/Products/CMFPlone/browser/navtree.py\n@@ -12,7 +12,7 @@\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import utils\n-from Products.CMFPlone.interfaces import INavigationSchema\n+from plone.base.interfaces import INavigationSchema\n from zope.component import getMultiAdapter, queryUtility\n from zope.component import getUtility\n from zope.interface import implementer\ndiff --git a/Products/CMFPlone/browser/robots.py b/Products/CMFPlone/browser/robots.py\nindex 9c5a0bc290..eb4e2535bb 100644\n--- a/Products/CMFPlone/browser/robots.py\n+++ b/Products/CMFPlone/browser/robots.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces.controlpanel import ISiteSchema\n+from plone.base.interfaces.controlpanel import ISiteSchema\n from Products.Five.browser import BrowserView\n from plone.registry.interfaces import IRegistry\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/browser/search.py b/Products/CMFPlone/browser/search.py\nindex 7bc6771aff..a8c34129d6 100644\n--- a/Products/CMFPlone/browser/search.py\n+++ b/Products/CMFPlone/browser/search.py\n@@ -3,7 +3,7 @@\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.browser.navtree import getNavigationRoot\n-from Products.CMFPlone.interfaces import ISearchSchema\n+from plone.base.interfaces import ISearchSchema\n from Products.CMFPlone.PloneBatch import Batch\n from Products.ZCTextIndex.ParseTree import ParseError\n from zope.cachedescriptors.property import Lazy as lazy_property\ndiff --git a/Products/CMFPlone/browser/sendto.py b/Products/CMFPlone/browser/sendto.py\nindex 1f11b22084..384d7d5ff3 100644\n--- a/Products/CMFPlone/browser/sendto.py\n+++ b/Products/CMFPlone/browser/sendto.py\n@@ -1,5 +1,5 @@\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces.controlpanel import IMailSchema\n+from plone.base.interfaces.controlpanel import IMailSchema\n from Products.CMFPlone.utils import pretty_title_or_id\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.MailHost.interfaces import IMailHost\ndiff --git a/Products/CMFPlone/browser/sitelogo.py b/Products/CMFPlone/browser/sitelogo.py\nindex 2d56feebeb..cb816a6b48 100644\n--- a/Products/CMFPlone/browser/sitelogo.py\n+++ b/Products/CMFPlone/browser/sitelogo.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import ISiteSchema\n+from plone.base.interfaces import ISiteSchema\n from plone.formwidget.namedfile.converter import b64decode_file\n from plone.namedfile.browser import Download\n from plone.namedfile.file import NamedImage\ndiff --git a/Products/CMFPlone/browser/syndication/adapters.py b/Products/CMFPlone/browser/syndication/adapters.py\nindex 2fc6224cf4..8963610609 100644\n--- a/Products/CMFPlone/browser/syndication/adapters.py\n+++ b/Products/CMFPlone/browser/syndication/adapters.py\n@@ -12,10 +12,10 @@\n from Products.CMFCore.utils import getToolByName\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n \n-from Products.CMFPlone.interfaces.syndication import IFeed\n-from Products.CMFPlone.interfaces.syndication import IFeedItem\n-from Products.CMFPlone.interfaces.syndication import ISearchFeed\n-from Products.CMFPlone.interfaces.syndication import IFeedSettings\n+from plone.base.interfaces.syndication import IFeed\n+from plone.base.interfaces.syndication import IFeedItem\n+from plone.base.interfaces.syndication import ISearchFeed\n+from plone.base.interfaces.syndication import IFeedSettings\n from Products.CMFPlone.utils import getSiteLogo\n \n from plone.registry.interfaces import IRegistry\ndiff --git a/Products/CMFPlone/browser/syndication/configure.zcml b/Products/CMFPlone/browser/syndication/configure.zcml\nindex 6715bfa1f3..755ca9f8b6 100644\n--- a/Products/CMFPlone/browser/syndication/configure.zcml\n+++ b/Products/CMFPlone/browser/syndication/configure.zcml\n@@ -6,7 +6,7 @@\n   i18n_domain="Products.CMFPlone">\n \n   <class class="plone.dexterity.content.Container">\n-    <implements interface="Products.CMFPlone.interfaces.syndication.ISyndicatable" />\n+    <implements interface="plone.base.interfaces.syndication.ISyndicatable" />\n   </class>\n \n   <adapter factory=".settings.FeedSettings" />\n@@ -15,15 +15,15 @@\n   <adapter factory=".adapters.CollectionFeed"\n     for="plone.app.contenttypes.interfaces.ICollection" />\n   <adapter factory=".adapters.SearchFeed"\n-    for="Products.CMFPlone.interfaces.siteroot.IPloneSiteRoot"\n-    provides="Products.CMFPlone.interfaces.syndication.ISearchFeed" />\n+    for="plone.base.interfaces.siteroot.IPloneSiteRoot"\n+    provides="plone.base.interfaces.syndication.ISearchFeed" />\n   <adapter factory=".adapters.DexterityItem"\n     for="plone.dexterity.interfaces.IDexterityContent\n-         Products.CMFPlone.interfaces.syndication.IFeed"\n-    provides="Products.CMFPlone.interfaces.syndication.IFeedItem" />\n+         plone.base.interfaces.syndication.IFeed"\n+    provides="plone.base.interfaces.syndication.IFeedItem" />\n \n   <browser:page\n-    for="Products.CMFPlone.interfaces.syndication.ISyndicatable"\n+    for="plone.base.interfaces.syndication.ISyndicatable"\n     name="synPropertiesForm"\n     class=".views.SettingsFormView"\n     permission="cmf.ModifyPortalContent"\n@@ -33,12 +33,12 @@\n     for="*"\n     name="syndication-util"\n     class=".utils.SyndicationUtil"\n-    allowed_interface="Products.CMFPlone.interfaces.syndication.ISyndicationUtil"\n+    allowed_interface="plone.base.interfaces.syndication.ISyndicationUtil"\n     permission="zope2.View"\n     />\n \n   <browser:page\n-    for="Products.CMFPlone.interfaces.syndication.ISyndicatable"\n+    for="plone.base.interfaces.syndication.ISyndicatable"\n     class=".views.FeedView"\n     name="atom.xml"\n     permission="zope2.View"\n@@ -46,14 +46,14 @@\n     />\n \n   <browser:page\n-    for="Products.CMFPlone.interfaces.syndication.ISyndicatable"\n+    for="plone.base.interfaces.syndication.ISyndicatable"\n     class=".views.FeedView"\n     name="rss.xml"\n     permission="zope2.View"\n     template="templates/rss.xml.pt"\n     />\n   <browser:page\n-    for="Products.CMFPlone.interfaces.syndication.ISyndicatable"\n+    for="plone.base.interfaces.syndication.ISyndicatable"\n     class=".views.FeedView"\n     name="RSS"\n     permission="zope2.View"\n@@ -61,7 +61,7 @@\n     />\n \n   <browser:page\n-    for="Products.CMFPlone.interfaces.syndication.ISyndicatable"\n+    for="plone.base.interfaces.syndication.ISyndicatable"\n     class=".views.FeedView"\n     name="itunes.xml"\n     permission="zope2.View"\n@@ -77,7 +77,7 @@\n     />\n \n   <browser:page\n-    for="Products.CMFPlone.interfaces.syndication.ISyndicatable"\n+    for="plone.base.interfaces.syndication.ISyndicatable"\n     class=".views.NewsMLFeedView"\n     name="newsml.xml"\n     permission="zope2.View"\ndiff --git a/Products/CMFPlone/browser/syndication/settings.py b/Products/CMFPlone/browser/syndication/settings.py\nindex d74865d070..9158f83858 100644\n--- a/Products/CMFPlone/browser/syndication/settings.py\n+++ b/Products/CMFPlone/browser/syndication/settings.py\n@@ -1,10 +1,10 @@\n from zope.component import adapts\n from zope.interface import implementer\n-from Products.CMFPlone.interfaces.syndication import IFeedSettings\n-from Products.CMFPlone.interfaces.syndication import ISyndicatable\n+from plone.base.interfaces.syndication import IFeedSettings\n+from plone.base.interfaces.syndication import ISyndicatable\n from zope.annotation.interfaces import IAnnotations\n from persistent.dict import PersistentDict\n-from Products.CMFPlone.interfaces.syndication import ISiteSyndicationSettings\n+from plone.base.interfaces.syndication import ISiteSyndicationSettings\n from zope.component import getUtility\n from plone.registry.interfaces import IRegistry\n \ndiff --git a/Products/CMFPlone/browser/syndication/tool.py b/Products/CMFPlone/browser/syndication/tool.py\nindex d142ebaa61..ba622337e6 100644\n--- a/Products/CMFPlone/browser/syndication/tool.py\n+++ b/Products/CMFPlone/browser/syndication/tool.py\n@@ -11,9 +11,9 @@\n from Products.CMFCore.permissions import ModifyPortalContent\n from Products.CMFCore.permissions import ManagePortal\n \n-from Products.CMFPlone.interfaces.syndication import IFeed\n-from Products.CMFPlone.interfaces.syndication import ISiteSyndicationSettings\n-from Products.CMFPlone.interfaces.syndication import IFeedSettings\n+from plone.base.interfaces.syndication import IFeed\n+from plone.base.interfaces.syndication import ISiteSyndicationSettings\n+from plone.base.interfaces.syndication import IFeedSettings\n \n from plone.registry.interfaces import IRegistry\n \ndiff --git a/Products/CMFPlone/browser/syndication/utils.py b/Products/CMFPlone/browser/syndication/utils.py\nindex 3115b10976..9e3171ba61 100644\n--- a/Products/CMFPlone/browser/syndication/utils.py\n+++ b/Products/CMFPlone/browser/syndication/utils.py\n@@ -5,10 +5,10 @@\n from zope.interface import implementer\n from zope.component import getUtility\n \n-from Products.CMFPlone.interfaces.syndication import ISyndicationUtil\n-from Products.CMFPlone.interfaces.syndication import IFeedSettings\n-from Products.CMFPlone.interfaces.syndication import ISiteSyndicationSettings\n-from Products.CMFPlone.interfaces.syndication import ISyndicatable\n+from plone.base.interfaces.syndication import ISyndicationUtil\n+from plone.base.interfaces.syndication import IFeedSettings\n+from plone.base.interfaces.syndication import ISiteSyndicationSettings\n+from plone.base.interfaces.syndication import ISyndicatable\n \n from plone.registry.interfaces import IRegistry\n from plone.memoize.view import memoize\ndiff --git a/Products/CMFPlone/browser/syndication/views.py b/Products/CMFPlone/browser/syndication/views.py\nindex 47c40db01c..cda7137a35 100644\n--- a/Products/CMFPlone/browser/syndication/views.py\n+++ b/Products/CMFPlone/browser/syndication/views.py\n@@ -1,9 +1,9 @@\n from DateTime import DateTime\n from plone.z3cform.layout import wrap_form\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces.syndication import IFeed\n-from Products.CMFPlone.interfaces.syndication import IFeedSettings\n-from Products.CMFPlone.interfaces.syndication import ISearchFeed\n+from plone.base.interfaces.syndication import IFeed\n+from plone.base.interfaces.syndication import IFeedSettings\n+from plone.base.interfaces.syndication import ISearchFeed\n from Products.Five import BrowserView\n from uuid import NAMESPACE_OID\n from uuid import uuid3\ndiff --git a/Products/CMFPlone/catalog.zcml b/Products/CMFPlone/catalog.zcml\nindex ddd04b531f..e84d7fed42 100644\n--- a/Products/CMFPlone/catalog.zcml\n+++ b/Products/CMFPlone/catalog.zcml\n@@ -3,7 +3,7 @@\n     <!-- Register the default indexable object wrapper -->\n     <adapter\n         for="Products.CMFCore.interfaces.ICatalogAware\n-             Products.CMFPlone.interfaces.IPloneCatalogTool"\n+             plone.base.interfaces.IPloneCatalogTool"\n         factory="plone.indexer.wrapper.IndexableObjectWrapper"\n         provides="plone.indexer.interfaces.IIndexableObject"\n         />\ndiff --git a/Products/CMFPlone/controlpanel/README.rst b/Products/CMFPlone/controlpanel/README.rst\nindex 72e195a909..23d5a13846 100644\n--- a/Products/CMFPlone/controlpanel/README.rst\n+++ b/Products/CMFPlone/controlpanel/README.rst\n@@ -14,7 +14,7 @@ As an example, let\'s look for search related settings (defined by ISearchSchema)\n We use the schema \'ISearchSchema\' to lookup a RecordProxy object with\n all fields::\n \n-  >>> from Products.CMFPlone.interfaces import ISearchSchema\n+  >>> from plone.base.interfaces import ISearchSchema\n   >>> search_settings = registry.forInterface(ISearchSchema, prefix=\'plone\')\n \n Now we can get and set all fields of the schema above. For example the value for\n@@ -38,7 +38,7 @@ For more information about how to access and manipulate Plone registry entries,\n Editing Control Panel\n ---------------------\n \n-  >>> from Products.CMFPlone.interfaces import IEditingSchema\n+  >>> from plone.base.interfaces import IEditingSchema\n   >>> editing_settings = registry.forInterface(IEditingSchema, prefix=\'plone\')\n \n   >>> editing_settings.default_editor == u\'TinyMCE\'\n@@ -103,7 +103,7 @@ Language Control Panel\n Maintenance Control Panel\n -------------------------\n \n-  >>> from Products.CMFPlone.interfaces import IMaintenanceSchema\n+  >>> from plone.base.interfaces import IMaintenanceSchema\n   >>> maintenance_settings = registry.forInterface(IMaintenanceSchema, prefix=\'plone\')\n \n   >>> maintenance_settings.days\n@@ -113,7 +113,7 @@ Maintenance Control Panel\n Navigation Control Panel\n ------------------------\n \n-  >>> from Products.CMFPlone.interfaces import INavigationSchema\n+  >>> from plone.base.interfaces import INavigationSchema\n   >>> navigation_settings = registry.forInterface(INavigationSchema, prefix=\'plone\')\n \n   >>> navigation_settings.generate_tabs\n@@ -138,7 +138,7 @@ Navigation Control Panel\n Search Control Panel\n --------------------\n \n-  >>> from Products.CMFPlone.interfaces import ISearchSchema\n+  >>> from plone.base.interfaces import ISearchSchema\n   >>> search_settings = registry.forInterface(ISearchSchema, prefix=\'plone\')\n \n   >>> search_settings.enable_livesearch\n@@ -151,7 +151,7 @@ Search Control Panel\n Site Control Panel\n ------------------\n \n-  >>> from Products.CMFPlone.interfaces import ISiteSchema\n+  >>> from plone.base.interfaces import ISiteSchema\n   >>> site_settings = registry.forInterface(ISiteSchema, prefix=\'plone\')\n \n   >>> site_settings.site_title == u\'Plone site\'\n@@ -170,7 +170,7 @@ Site Control Panel\n Overview Control Panel\n ----------------------\n \n-  >>> from Products.CMFPlone.interfaces.controlpanel import IDateAndTimeSchema\n+  >>> from plone.base.interfaces.controlpanel import IDateAndTimeSchema\n   >>> tz_settings = registry.forInterface(IDateAndTimeSchema, prefix=\'plone\')\n \n   >>> tz_settings.portal_timezone = \'UTC\'\n@@ -179,7 +179,7 @@ Overview Control Panel\n Markup Control Panel\n --------------------\n \n-  >>> from Products.CMFPlone.interfaces import IMarkupSchema\n+  >>> from plone.base.interfaces import IMarkupSchema\n   >>> markup_settings = registry.forInterface(IMarkupSchema, prefix=\'plone\')\n \n   >>> markup_settings.default_type == u\'text/html\'\n@@ -193,7 +193,7 @@ Markup Control Panel\n User and Groups Control Panel\n ------------------------------\n \n-  >>> from Products.CMFPlone.interfaces import IUserGroupsSettingsSchema\n+  >>> from plone.base.interfaces import IUserGroupsSettingsSchema\n   >>> usergroups_settings = registry.forInterface(IUserGroupsSettingsSchema, prefix=\'plone\')\n \n   >>> usergroups_settings.many_groups\ndiff --git a/Products/CMFPlone/controlpanel/bbb/editing.py b/Products/CMFPlone/controlpanel/bbb/editing.py\nindex 54058116a6..41649f4eff 100644\n--- a/Products/CMFPlone/controlpanel/bbb/editing.py\n+++ b/Products/CMFPlone/controlpanel/bbb/editing.py\n@@ -2,9 +2,9 @@\n from zope.interface import implementer\n from zope.component import getUtility\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n+from plone.base.interfaces import IPloneSiteRoot\n \n-from Products.CMFPlone.interfaces import IEditingSchema\n+from plone.base.interfaces import IEditingSchema\n \n \n @implementer(IEditingSchema)\ndiff --git a/Products/CMFPlone/controlpanel/bbb/filter.py b/Products/CMFPlone/controlpanel/bbb/filter.py\nindex f0d6fc7777..2da1d3dcb5 100644\n--- a/Products/CMFPlone/controlpanel/bbb/filter.py\n+++ b/Products/CMFPlone/controlpanel/bbb/filter.py\n@@ -1,5 +1,5 @@\n-from Products.CMFPlone.interfaces import IFilterSchema\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n+from plone.base.interfaces import IFilterSchema\n+from plone.base.interfaces import IPloneSiteRoot\n from plone.registry.interfaces import IRegistry\n from zope.component import adapts\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/controlpanel/bbb/language.py b/Products/CMFPlone/controlpanel/bbb/language.py\nindex 43700a1cd9..1094d8b49c 100644\n--- a/Products/CMFPlone/controlpanel/bbb/language.py\n+++ b/Products/CMFPlone/controlpanel/bbb/language.py\n@@ -2,7 +2,7 @@\n from zope.interface import implementer\n from zope.component import getUtility\n from plone.i18n.interfaces import ILanguageSchema\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n+from plone.base.interfaces import IPloneSiteRoot\n \n from plone.registry.interfaces import IRegistry\n \ndiff --git a/Products/CMFPlone/controlpanel/bbb/mail.py b/Products/CMFPlone/controlpanel/bbb/mail.py\nindex 9fb79f65ba..5ec1135f69 100644\n--- a/Products/CMFPlone/controlpanel/bbb/mail.py\n+++ b/Products/CMFPlone/controlpanel/bbb/mail.py\n@@ -1,5 +1,5 @@\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n-from Products.CMFPlone.interfaces.controlpanel import IMailSchema\n+from plone.base.interfaces import IPloneSiteRoot\n+from plone.base.interfaces.controlpanel import IMailSchema\n from Products.CMFPlone.utils import safe_hasattr\n from plone.registry.interfaces import IRegistry\n from zope.component import adapts\ndiff --git a/Products/CMFPlone/controlpanel/bbb/maintenance.py b/Products/CMFPlone/controlpanel/bbb/maintenance.py\nindex 491f6c5d9a..941fea458b 100644\n--- a/Products/CMFPlone/controlpanel/bbb/maintenance.py\n+++ b/Products/CMFPlone/controlpanel/bbb/maintenance.py\n@@ -1,5 +1,5 @@\n-from Products.CMFPlone.interfaces import IMaintenanceSchema\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n+from plone.base.interfaces import IMaintenanceSchema\n+from plone.base.interfaces import IPloneSiteRoot\n from plone.registry.interfaces import IRegistry\n from zope.component import adapts\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/controlpanel/bbb/markup.py b/Products/CMFPlone/controlpanel/bbb/markup.py\nindex 23b4279955..2434f6b84b 100644\n--- a/Products/CMFPlone/controlpanel/bbb/markup.py\n+++ b/Products/CMFPlone/controlpanel/bbb/markup.py\n@@ -1,5 +1,5 @@\n-from Products.CMFPlone.interfaces import IMarkupSchema\n-from Products.CMFPlone.interfaces.siteroot import IPloneSiteRoot\n+from plone.base.interfaces import IMarkupSchema\n+from plone.base.interfaces.siteroot import IPloneSiteRoot\n from plone.registry.interfaces import IRegistry\n from zope.component import adapts\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/controlpanel/bbb/navigation.py b/Products/CMFPlone/controlpanel/bbb/navigation.py\nindex 0cd58b5234..85bf7108b5 100644\n--- a/Products/CMFPlone/controlpanel/bbb/navigation.py\n+++ b/Products/CMFPlone/controlpanel/bbb/navigation.py\n@@ -1,6 +1,6 @@\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import INavigationSchema\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n+from plone.base.interfaces import INavigationSchema\n+from plone.base.interfaces import IPloneSiteRoot\n from zope.component import adapter\n from zope.component import getUtility\n from zope.interface import implementer\ndiff --git a/Products/CMFPlone/controlpanel/bbb/search.py b/Products/CMFPlone/controlpanel/bbb/search.py\nindex c5633ed877..6d0ec1f510 100644\n--- a/Products/CMFPlone/controlpanel/bbb/search.py\n+++ b/Products/CMFPlone/controlpanel/bbb/search.py\n@@ -1,5 +1,5 @@\n-from Products.CMFPlone.interfaces import ISearchSchema\n-from Products.CMFPlone.interfaces.siteroot import IPloneSiteRoot\n+from plone.base.interfaces import ISearchSchema\n+from plone.base.interfaces.siteroot import IPloneSiteRoot\n from plone.registry.interfaces import IRegistry\n from zope.component import adapts\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/controlpanel/bbb/security.py b/Products/CMFPlone/controlpanel/bbb/security.py\nindex 977b43f81f..5870b25910 100644\n--- a/Products/CMFPlone/controlpanel/bbb/security.py\n+++ b/Products/CMFPlone/controlpanel/bbb/security.py\n@@ -1,6 +1,6 @@\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces.siteroot import IPloneSiteRoot\n-from Products.CMFPlone.interfaces import ISecuritySchema\n+from plone.base.interfaces.siteroot import IPloneSiteRoot\n+from plone.base.interfaces import ISecuritySchema\n from plone.registry.interfaces import IRegistry\n from zope.component import adapts\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/controlpanel/bbb/site.py b/Products/CMFPlone/controlpanel/bbb/site.py\nindex 486c2e10c3..9098791b27 100644\n--- a/Products/CMFPlone/controlpanel/bbb/site.py\n+++ b/Products/CMFPlone/controlpanel/bbb/site.py\n@@ -1,6 +1,6 @@\n from zope.schema.fieldproperty import FieldProperty\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n-from Products.CMFPlone.interfaces import ISiteSchema\n+from plone.base.interfaces import IPloneSiteRoot\n+from plone.base.interfaces import ISiteSchema\n from plone.registry.interfaces import IRegistry\n from zope.component import adapts\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/controlpanel/bbb/usergroups.py b/Products/CMFPlone/controlpanel/bbb/usergroups.py\nindex 7df8393eff..ce88769f52 100644\n--- a/Products/CMFPlone/controlpanel/bbb/usergroups.py\n+++ b/Products/CMFPlone/controlpanel/bbb/usergroups.py\n@@ -3,8 +3,8 @@\n from zope.interface import implementer\n from zope.component.hooks import getSite\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import IUserGroupsSettingsSchema\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n+from plone.base.interfaces import IUserGroupsSettingsSchema\n+from plone.base.interfaces import IPloneSiteRoot\n \n \n @implementer(IUserGroupsSettingsSchema)\ndiff --git a/Products/CMFPlone/controlpanel/browser/actions.py b/Products/CMFPlone/controlpanel/browser/actions.py\nindex 35a64900ce..2037fd95cb 100644\n--- a/Products/CMFPlone/controlpanel/browser/actions.py\n+++ b/Products/CMFPlone/controlpanel/browser/actions.py\n@@ -3,7 +3,7 @@\n from Products.CMFCore.interfaces import IAction, IActionCategory\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import IActionSchema, INewActionSchema\n+from plone.base.interfaces import IActionSchema, INewActionSchema\n from Products.Five import BrowserView\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from z3c.form import form\ndiff --git a/Products/CMFPlone/controlpanel/browser/configure.zcml b/Products/CMFPlone/controlpanel/browser/configure.zcml\nindex 1204b15af6..671c66f1ed 100644\n--- a/Products/CMFPlone/controlpanel/browser/configure.zcml\n+++ b/Products/CMFPlone/controlpanel/browser/configure.zcml\n@@ -25,7 +25,7 @@\n   <!-- Control Panel Overview -->\n   <browser:page\n       name="overview-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".overview.OverviewControlPanel"\n       permission="plone.app.controlpanel.Overview"\n       />\n@@ -33,7 +33,7 @@\n   <!-- Editing Control Panel -->\n   <browser:page\n       name="editing-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".editing.EditingControlPanel"\n       permission="plone.app.controlpanel.Editing"\n       />\n@@ -41,7 +41,7 @@\n   <!-- Filter Control Panel -->\n   <browser:page\n       name="filter-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".filter.FilterControlPanelView"\n       permission="plone.app.controlpanel.Filtering"\n       />\n@@ -49,7 +49,7 @@\n   <!-- TinyMCE Control Panel -->\n   <browser:page\n       name="tinymce-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".tinymce.TinyMCEControlPanel"\n       permission="plone.app.controlpanel.TinyMCE"\n       />\n@@ -57,7 +57,7 @@\n   <!-- Language Control Panel -->\n   <browser:page\n       name="language-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".language.LanguageControlPanel"\n       permission="plone.app.controlpanel.Language"\n       />\n@@ -65,7 +65,7 @@\n   <!-- Maintenance Control Panel -->\n   <browser:page\n       name="maintenance-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".maintenance.MaintenanceControlPanel"\n       permission="cmf.ManagePortal"\n       />\n@@ -73,7 +73,7 @@\n   <!-- Mail Control Panel -->\n   <browser:page\n       name="mail-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".mail.MailControlPanel"\n       permission="plone.app.controlpanel.Mail"\n       />\n@@ -81,7 +81,7 @@\n   <!-- Navigation Control Panel -->\n   <browser:page\n       name="navigation-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".navigation.NavigationControlPanel"\n       permission="plone.app.controlpanel.Navigation"\n       />\n@@ -89,7 +89,7 @@\n   <!-- Search Control Panel -->\n   <browser:page\n       name="search-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".search.SearchControlPanel"\n       permission="plone.app.controlpanel.Search"\n       />\n@@ -97,7 +97,7 @@\n   <!-- Security Control Panel -->\n   <browser:page\n       name="security-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".security.SecurityControlPanel"\n       permission="plone.app.controlpanel.Security"\n       />\n@@ -105,7 +105,7 @@\n   <!-- Security Control Panel - EMail Login -->\n   <browser:page\n       name="migrate-to-emaillogin"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".security.EmailLogin"\n       template="emaillogin.pt"\n       permission="cmf.ManagePortal"\n@@ -114,28 +114,28 @@\n   <!-- Error Log Form Control Panel -->\n   <browser:page\n       name="error-log-form"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       template="error_log_form.pt"\n       permission="cmf.ManagePortal"\n       />\n \n   <browser:page\n       name="error-log-show-entry"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       template="error_log_show_entry.pt"\n       permission="cmf.ManagePortal"\n       />\n \n   <browser:page\n       name="error-log-update"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".error_log_form.ErrorLogUpdate"\n       permission="cmf.ManagePortal"\n       />\n \n   <browser:page\n       name="error-log-set-properties"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".error_log_form.ErrorLogSetProperties"\n       permission="cmf.ManagePortal"\n       />\n@@ -143,7 +143,7 @@\n   <!-- Site Control Panel -->\n   <browser:page\n       name="site-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".site.SiteControlPanel"\n       permission="plone.app.controlpanel.Site"\n       />\n@@ -151,7 +151,7 @@\n   <!-- Date and Time Control panel -->\n   <browser:page\n       name="dateandtime-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".dateandtime.DateAndTimeControlPanel"\n       permission="plone.app.controlpanel.Site"\n       />\n@@ -159,7 +159,7 @@\n   <!-- Types Control panel -->\n   <browser:page\n       name="content-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".types.TypesControlPanel"\n       permission="plone.app.controlpanel.Types"\n       />\n@@ -167,7 +167,7 @@\n   <!-- Resource Registry -->\n   <browser:page\n       name="resourceregistry-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".resourceregistry.ResourceRegistryControlPanelView"\n       permission="plone.app.controlpanel.Site"\n       template="resourceregistry.pt"\n@@ -176,7 +176,7 @@\n   <!-- Markup Control Panel -->\n   <browser:page\n       name="markup-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".markup.MarkupControlPanel"\n       permission="plone.app.controlpanel.Markup"\n       />\n@@ -184,13 +184,13 @@\n   <!-- Syndication Control Panel -->\n   <browser:page\n       name="syndication-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".syndication.SyndicationControlPanel"\n       permission="cmf.ManagePortal"\n       />\n   <browser:page\n       name="syndication-settings"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".syndication.SyndicationControlPanel"\n       permission="cmf.ManagePortal"\n       />\n@@ -198,14 +198,14 @@\n   <!-- Usergroup Control Panel -->\n   <browser:page\n       name="usergroup-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".usergroups.UserGroupsSettingsPanelView"\n       permission="plone.app.controlpanel.UsersAndGroups"\n       />\n \n   <browser:page\n       name="usergroup-userprefs"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".usergroups_usersoverview.UsersOverviewControlPanel"\n       permission="plone.app.controlpanel.UsersAndGroups"\n       template="usergroups_usersoverview.pt"\n@@ -213,7 +213,7 @@\n \n   <browser:page\n       name="usergroup-groupprefs"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".usergroups_groupsoverview.GroupsOverviewControlPanel"\n       permission="plone.app.controlpanel.UsersAndGroups"\n       template="usergroups_groupsoverview.pt"\n@@ -221,7 +221,7 @@\n \n   <browser:page\n       name="usergroup-groupmembership"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".usergroups_groupmembership.GroupMembershipControlPanel"\n       permission="plone.app.controlpanel.UsersAndGroups"\n       template="usergroups_groupmembership.pt"\n@@ -229,7 +229,7 @@\n \n   <browser:page\n       name="usergroup-usermembership"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".usergroups_usermembership.UserMembershipControlPanel"\n       permission="plone.app.controlpanel.UsersAndGroups"\n       template="usergroups_usermembership.pt"\n@@ -237,7 +237,7 @@\n \n   <browser:page\n       name="usergroup-groupdetails"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".usergroups_groupdetails.GroupDetailsControlPanel"\n       permission="plone.app.controlpanel.UsersAndGroups"\n       template="usergroups_groupdetails.pt"\n@@ -256,7 +256,7 @@\n \n   <browser:page\n       name="prefs_install_products_form"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".quickinstaller.ManageProductsView"\n       permission="cmf.ManagePortal"\n       template="quickinstaller.pt"\n@@ -264,21 +264,21 @@\n \n   <browser:page\n       name="upgrade_products"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".quickinstaller.UpgradeProductsView"\n       permission="cmf.ManagePortal"\n       />\n \n   <browser:page\n       name="install_products"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".quickinstaller.InstallProductsView"\n       permission="cmf.ManagePortal"\n       />\n \n   <browser:page\n       name="uninstall_products"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".quickinstaller.UninstallProductsView"\n       permission="cmf.ManagePortal"\n       />\n@@ -286,7 +286,7 @@\n   <!-- Social Media Control Panel -->\n   <browser:page\n       name="social-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".socialmedia.SocialControlPanel"\n       permission="plone.app.controlpanel.Site"\n       />\n@@ -294,7 +294,7 @@\n   <!-- Imaging Control Panel -->\n   <browser:page\n       name="imaging-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".imaging.ImagingControlPanel"\n       permission="plone.app.controlpanel.Imaging"\n       />\n@@ -302,7 +302,7 @@\n   <!-- Portal actions -->\n   <browser:page\n       name="actions-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".actions.ActionListControlPanel"\n       permission="cmf.ManagePortal"\n       />\n@@ -318,7 +318,7 @@\n \n   <browser:page\n       name="new-action"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".actions.NewActionControlPanel"\n       permission="cmf.ManagePortal"\n       />\n@@ -335,7 +335,7 @@\n \n   <browser:page\n       name="redirection-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".redirects.RedirectsControlPanel"\n       template="redirects-controlpanel.pt"\n       permission="Products.CMFPlone.ManagePortalAliases"\n@@ -354,7 +354,7 @@\n \n   <browser:page\n       name="inspect-relations"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".relations.RelationsInspectControlpanel"\n       template="relations_inspect.pt"\n       permission="Products.CMFPlone.InspectRelations"\n@@ -362,7 +362,7 @@\n \n   <browser:page\n       name="rebuild-relations"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".relations.RelationsRebuildControlpanel"\n       template="relations_rebuild.pt"\n       permission="cmf.ManagePortal"\ndiff --git a/Products/CMFPlone/controlpanel/browser/dateandtime.py b/Products/CMFPlone/controlpanel/browser/dateandtime.py\nindex 5059ec631f..9eec7408bb 100644\n--- a/Products/CMFPlone/controlpanel/browser/dateandtime.py\n+++ b/Products/CMFPlone/controlpanel/browser/dateandtime.py\n@@ -1,5 +1,5 @@\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import IDateAndTimeSchema\n+from plone.base.interfaces import IDateAndTimeSchema\n from plone.app.registry.browser.controlpanel import ControlPanelFormWrapper\n from plone.app.registry.browser.controlpanel import RegistryEditForm\n \ndiff --git a/Products/CMFPlone/controlpanel/browser/editing.py b/Products/CMFPlone/controlpanel/browser/editing.py\nindex 1ea069e011..fef3947988 100644\n--- a/Products/CMFPlone/controlpanel/browser/editing.py\n+++ b/Products/CMFPlone/controlpanel/browser/editing.py\n@@ -1,5 +1,5 @@\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import IEditingSchema\n+from plone.base.interfaces import IEditingSchema\n from plone.app.registry.browser import controlpanel\n from z3c.form import interfaces\n \ndiff --git a/Products/CMFPlone/controlpanel/browser/filter.py b/Products/CMFPlone/controlpanel/browser/filter.py\nindex e867f340ca..ff021fe988 100644\n--- a/Products/CMFPlone/controlpanel/browser/filter.py\n+++ b/Products/CMFPlone/controlpanel/browser/filter.py\n@@ -1,7 +1,7 @@\n from plone.app.registry.browser import controlpanel\n from plone.z3cform import layout\n from Products.CMFPlone import PloneMessageFactory as _  # NOQA\n-from Products.CMFPlone.interfaces import IFilterSchema\n+from plone.base.interfaces import IFilterSchema\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.statusmessages.interfaces import IStatusMessage\n from z3c.form import button\ndiff --git a/Products/CMFPlone/controlpanel/browser/imaging.py b/Products/CMFPlone/controlpanel/browser/imaging.py\nindex 71e7e58c2e..369c78a410 100644\n--- a/Products/CMFPlone/controlpanel/browser/imaging.py\n+++ b/Products/CMFPlone/controlpanel/browser/imaging.py\n@@ -1,5 +1,5 @@\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces.controlpanel import IImagingSchema\n+from plone.base.interfaces.controlpanel import IImagingSchema\n from logging import getLogger\n from plone.app.registry.browser import controlpanel\n \ndiff --git a/Products/CMFPlone/controlpanel/browser/mail.py b/Products/CMFPlone/controlpanel/browser/mail.py\nindex df4a35087a..6f09498c3e 100644\n--- a/Products/CMFPlone/controlpanel/browser/mail.py\n+++ b/Products/CMFPlone/controlpanel/browser/mail.py\n@@ -1,6 +1,6 @@\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces.controlpanel import IMailSchema\n+from plone.base.interfaces.controlpanel import IMailSchema\n from Products.MailHost.MailHost import MailHostError\n from Products.statusmessages.interfaces import IStatusMessage\n from logging import getLogger\ndiff --git a/Products/CMFPlone/controlpanel/browser/maintenance.py b/Products/CMFPlone/controlpanel/browser/maintenance.py\nindex d3b82f96c5..58d1da57fb 100644\n--- a/Products/CMFPlone/controlpanel/browser/maintenance.py\n+++ b/Products/CMFPlone/controlpanel/browser/maintenance.py\n@@ -7,7 +7,7 @@\n from plone.protect import CheckAuthenticator\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import IMaintenanceSchema\n+from plone.base.interfaces import IMaintenanceSchema\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from z3c.form import button\n from z3c.form import form\ndiff --git a/Products/CMFPlone/controlpanel/browser/markup.py b/Products/CMFPlone/controlpanel/browser/markup.py\nindex c78d345d59..dc97a36c8d 100644\n--- a/Products/CMFPlone/controlpanel/browser/markup.py\n+++ b/Products/CMFPlone/controlpanel/browser/markup.py\n@@ -1,5 +1,5 @@\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import IMarkupSchema\n+from plone.base.interfaces import IMarkupSchema\n from plone.app.registry.browser import controlpanel\n from z3c.form.browser.checkbox import CheckBoxFieldWidget\n \ndiff --git a/Products/CMFPlone/controlpanel/browser/navigation.py b/Products/CMFPlone/controlpanel/browser/navigation.py\nindex 7e4955f3d5..8149211b00 100644\n--- a/Products/CMFPlone/controlpanel/browser/navigation.py\n+++ b/Products/CMFPlone/controlpanel/browser/navigation.py\n@@ -1,5 +1,5 @@\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import INavigationSchema\n+from plone.base.interfaces import INavigationSchema\n from plone.app.registry.browser import controlpanel\n from z3c.form.browser.checkbox import CheckBoxFieldWidget\n \ndiff --git a/Products/CMFPlone/controlpanel/browser/overview.py b/Products/CMFPlone/controlpanel/browser/overview.py\nindex 208fded1e9..7a9e0aa92c 100644\n--- a/Products/CMFPlone/controlpanel/browser/overview.py\n+++ b/Products/CMFPlone/controlpanel/browser/overview.py\n@@ -1,7 +1,7 @@\n from AccessControl import getSecurityManager\n from Acquisition import aq_inner\n from App.config import getConfiguration\n-from Products.CMFPlone.interfaces.controlpanel import IMailSchema\n+from plone.base.interfaces.controlpanel import IMailSchema\n from Products.CMFCore.permissions import ManagePortal\n from Products.CMFCore.utils import getToolByName\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\ndiff --git a/Products/CMFPlone/controlpanel/browser/quickinstaller.py b/Products/CMFPlone/controlpanel/browser/quickinstaller.py\nindex 7931ae5839..69b0c2c6ff 100644\n--- a/Products/CMFPlone/controlpanel/browser/quickinstaller.py\n+++ b/Products/CMFPlone/controlpanel/browser/quickinstaller.py\n@@ -1,6 +1,6 @@\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import INonInstallable\n+from plone.base.interfaces import INonInstallable\n from Products.Five.browser import BrowserView\n from Products.GenericSetup import EXTENSION\n from Products.GenericSetup.tool import UNKNOWN\ndiff --git a/Products/CMFPlone/controlpanel/browser/resourceregistry.py b/Products/CMFPlone/controlpanel/browser/resourceregistry.py\nindex 2c0dcace27..ca1f143a0b 100644\n--- a/Products/CMFPlone/controlpanel/browser/resourceregistry.py\n+++ b/Products/CMFPlone/controlpanel/browser/resourceregistry.py\n@@ -4,9 +4,9 @@\n from plone.registry.interfaces import IRegistry\n from plone.registry.record import Record\n from plone.resource.interfaces import IResourceDirectory\n-from Products.CMFPlone.interfaces import IBundleRegistry\n-from Products.CMFPlone.interfaces import IResourceRegistry\n-from Products.CMFPlone.interfaces.resources import OVERRIDE_RESOURCE_DIRECTORY_NAME  # noqa\n+from plone.base.interfaces import IBundleRegistry\n+from plone.base.interfaces import IResourceRegistry\n+from plone.base.interfaces.resources import OVERRIDE_RESOURCE_DIRECTORY_NAME  # noqa\n from Products.CMFPlone.resources import add_bundle_on_request\n from Products.CMFPlone.resources import RESOURCE_DEVELOPMENT_MODE\n from Products.CMFPlone.resources.browser.configjs import RequireJsView\ndiff --git a/Products/CMFPlone/controlpanel/browser/search.py b/Products/CMFPlone/controlpanel/browser/search.py\nindex ddffdf4151..de2fc54a14 100644\n--- a/Products/CMFPlone/controlpanel/browser/search.py\n+++ b/Products/CMFPlone/controlpanel/browser/search.py\n@@ -1,5 +1,5 @@\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import ISearchSchema\n+from plone.base.interfaces import ISearchSchema\n from Products.CMFPlone.controlpanel.widgets import ReverseCheckBoxFieldWidget\n from plone.app.registry.browser import controlpanel\n from zope.component import queryUtility\ndiff --git a/Products/CMFPlone/controlpanel/browser/security.py b/Products/CMFPlone/controlpanel/browser/security.py\nindex 4fb41d1601..ae52e9ac63 100644\n--- a/Products/CMFPlone/controlpanel/browser/security.py\n+++ b/Products/CMFPlone/controlpanel/browser/security.py\n@@ -3,7 +3,7 @@\n from Products.CMFPlone import PloneMessageFactory as _\n from Products.CMFPlone.controlpanel.utils import migrate_to_email_login\n from Products.CMFPlone.controlpanel.utils import migrate_from_email_login\n-from Products.CMFPlone.interfaces import ISecuritySchema\n+from plone.base.interfaces import ISecuritySchema\n from Products.Five.browser import BrowserView\n from collections import defaultdict\n from plone.app.registry.browser import controlpanel\ndiff --git a/Products/CMFPlone/controlpanel/browser/site.py b/Products/CMFPlone/controlpanel/browser/site.py\nindex 269fe1b029..f685d6fd69 100644\n--- a/Products/CMFPlone/controlpanel/browser/site.py\n+++ b/Products/CMFPlone/controlpanel/browser/site.py\n@@ -1,5 +1,5 @@\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import ISiteSchema\n+from plone.base.interfaces import ISiteSchema\n from plone.app.registry.browser import controlpanel\n from plone.formwidget.namedfile.widget import NamedImageFieldWidget\n from z3c.form import interfaces\ndiff --git a/Products/CMFPlone/controlpanel/browser/socialmedia.py b/Products/CMFPlone/controlpanel/browser/socialmedia.py\nindex edb14ca1b8..dc48368a0e 100644\n--- a/Products/CMFPlone/controlpanel/browser/socialmedia.py\n+++ b/Products/CMFPlone/controlpanel/browser/socialmedia.py\n@@ -1,5 +1,5 @@\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import ISocialMediaSchema\n+from plone.base.interfaces import ISocialMediaSchema\n from plone.app.registry.browser import controlpanel\n \n \ndiff --git a/Products/CMFPlone/controlpanel/browser/syndication.py b/Products/CMFPlone/controlpanel/browser/syndication.py\nindex f9b16303c3..be92de8e60 100644\n--- a/Products/CMFPlone/controlpanel/browser/syndication.py\n+++ b/Products/CMFPlone/controlpanel/browser/syndication.py\n@@ -1,6 +1,6 @@\n from Products.CMFCore.utils import getToolByName\n from zope.i18nmessageid import MessageFactory\n-from Products.CMFPlone.interfaces.syndication import ISiteSyndicationSettings\n+from plone.base.interfaces.syndication import ISiteSyndicationSettings\n from plone.app.registry.browser import controlpanel\n from z3c.form import button\n from Products.statusmessages.interfaces import IStatusMessage\ndiff --git a/Products/CMFPlone/controlpanel/browser/tinymce.py b/Products/CMFPlone/controlpanel/browser/tinymce.py\nindex 4e3d0daf25..e70c93525d 100644\n--- a/Products/CMFPlone/controlpanel/browser/tinymce.py\n+++ b/Products/CMFPlone/controlpanel/browser/tinymce.py\n@@ -1,10 +1,10 @@\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import ITinyMCELayoutSchema\n-from Products.CMFPlone.interfaces import ITinyMCESpellCheckerSchema\n-from Products.CMFPlone.interfaces import ITinyMCEResourceTypesSchema\n-from Products.CMFPlone.interfaces import ITinyMCEAdvancedSchema\n-from Products.CMFPlone.interfaces import ITinyMCESchema\n-from Products.CMFPlone.interfaces import ITinyMCEPluginSchema\n+from plone.base.interfaces import ITinyMCELayoutSchema\n+from plone.base.interfaces import ITinyMCESpellCheckerSchema\n+from plone.base.interfaces import ITinyMCEResourceTypesSchema\n+from plone.base.interfaces import ITinyMCEAdvancedSchema\n+from plone.base.interfaces import ITinyMCESchema\n+from plone.base.interfaces import ITinyMCEPluginSchema\n from plone.app.registry.browser import controlpanel\n from z3c.form import field\n from z3c.form import group\ndiff --git a/Products/CMFPlone/controlpanel/browser/types.py b/Products/CMFPlone/controlpanel/browser/types.py\nindex 7797b148d4..9ed19ffbe6 100644\n--- a/Products/CMFPlone/controlpanel/browser/types.py\n+++ b/Products/CMFPlone/controlpanel/browser/types.py\n@@ -2,8 +2,8 @@\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n from Products.CMFPlone.controlpanel.events import ConfigurationChangedEvent\n-from Products.CMFPlone.interfaces import ISearchSchema\n-from Products.CMFPlone.interfaces import ITypesSchema\n+from plone.base.interfaces import ISearchSchema\n+from plone.base.interfaces import ITypesSchema\n from Products.CMFPlone.utils import safe_unicode\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.statusmessages.interfaces import IStatusMessage\ndiff --git a/Products/CMFPlone/controlpanel/browser/usergroups.py b/Products/CMFPlone/controlpanel/browser/usergroups.py\nindex b6759adf47..2819742a47 100644\n--- a/Products/CMFPlone/controlpanel/browser/usergroups.py\n+++ b/Products/CMFPlone/controlpanel/browser/usergroups.py\n@@ -4,7 +4,7 @@\n from Acquisition import aq_inner\n from Products.CMFPlone.utils import normalizeString\n from zope.component import getAdapter\n-from Products.CMFPlone.interfaces import ISecuritySchema\n+from plone.base.interfaces import ISecuritySchema\n from zope.component import getMultiAdapter\n from AccessControl import getSecurityManager\n from Products.Five.browser import BrowserView\n@@ -15,7 +15,7 @@\n from Products.CMFPlone import PloneMessageFactory as _\n from z3c.form import form\n \n-from Products.CMFPlone.interfaces import IUserGroupsSettingsSchema\n+from plone.base.interfaces import IUserGroupsSettingsSchema\n from z3c.form import button\n \n \ndiff --git a/Products/CMFPlone/controlpanel/events.py b/Products/CMFPlone/controlpanel/events.py\nindex 1273f6297d..fdbced0807 100644\n--- a/Products/CMFPlone/controlpanel/events.py\n+++ b/Products/CMFPlone/controlpanel/events.py\n@@ -3,8 +3,8 @@\n from Products.CMFPlone import PloneMessageFactory as _\n from Products.CMFPlone.controlpanel.utils import migrate_to_email_login\n from Products.CMFPlone.controlpanel.utils import migrate_from_email_login\n-from Products.CMFPlone.interfaces import IConfigurationChangedEvent\n-from Products.CMFPlone.interfaces import ISecuritySchema\n+from plone.base.interfaces import IConfigurationChangedEvent\n+from plone.base.interfaces import ISecuritySchema\n from Products.CMFPlone.utils import safe_hasattr\n from plone.registry.interfaces import IRecordModifiedEvent\n from zope.component import adapter\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_editing_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_editing_adapter.py\nindex 8e48c1737c..a1ca337498 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_editing_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_editing_adapter.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import IEditingSchema\n+from plone.base.interfaces import IEditingSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import setRoles\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_filter_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_filter_adapter.py\nindex 8321155c99..ef03ef4699 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_filter_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_filter_adapter.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import IFilterSchema\n+from plone.base.interfaces import IFilterSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import setRoles\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_mail_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_mail_adapter.py\nindex a3227f068e..d936b92091 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_mail_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_mail_adapter.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import IMailSchema\n+from plone.base.interfaces import IMailSchema\n from Products.CMFPlone.testing import \\\n     PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.app.testing import TEST_USER_ID, setRoles\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_maintenance_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_maintenance_adapter.py\nindex ebcb4e1d6c..c002629e18 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_maintenance_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_maintenance_adapter.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import IMaintenanceSchema\n+from plone.base.interfaces import IMaintenanceSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import setRoles\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_markup_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_markup_adapter.py\nindex 4e9e2cfb36..f5f3c8135a 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_markup_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_markup_adapter.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import IMarkupSchema\n+from plone.base.interfaces import IMarkupSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_navigation_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_navigation_adapter.py\nindex 8fa4ea9704..fdec408974 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_navigation_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_navigation_adapter.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import INavigationSchema\n+from plone.base.interfaces import INavigationSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.app.testing import TEST_USER_ID, setRoles\n from plone.registry.interfaces import IRegistry\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_search_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_search_adapter.py\nindex 4efa771e07..c2bf2ecd91 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_search_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_search_adapter.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import ISearchSchema\n+from plone.base.interfaces import ISearchSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.app.testing import TEST_USER_ID, setRoles\n from plone.registry.interfaces import IRegistry\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_security_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_security_adapter.py\nindex 139ca26bca..a98e190663 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_security_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_security_adapter.py\n@@ -1,6 +1,6 @@\n from Products.CMFPlone.testing import \\\n     PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n-from Products.CMFPlone.interfaces import ISecuritySchema\n+from plone.base.interfaces import ISecuritySchema\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import setRoles\n from zope.component import getAdapter\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_site_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_site_adapter.py\nindex 9dcc8d3a32..443f5f20c8 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_site_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_site_adapter.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import ISiteSchema\n+from plone.base.interfaces import ISiteSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import setRoles\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_usergroups_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_usergroups_adapter.py\nindex 6c3d7801f1..2f7229a9ad 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_usergroups_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_usergroups_adapter.py\n@@ -1,5 +1,5 @@\n from plone.app.testing import setRoles\n-from Products.CMFPlone.interfaces import IUserGroupsSettingsSchema\n+from plone.base.interfaces import IUserGroupsSettingsSchema\n from zope.component import getAdapter\n from plone.app.testing import TEST_USER_ID\n from plone.registry.interfaces import IRegistry\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_editing.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_editing.py\nindex 81ed3de60f..3b0be82fb7 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_editing.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_editing.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import IEditingSchema\n+from plone.base.interfaces import IEditingSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from plone.app.linkintegrity.utils import linkintegrity_enabled\n from plone.app.testing import SITE_OWNER_NAME\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_filter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_filter.py\nindex e6b04e0a5c..571824ecc9 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_filter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_filter.py\n@@ -2,7 +2,7 @@\n from plone.registry.interfaces import IRegistry\n from plone.testing.zope import Browser\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import IFilterSchema\n+from plone.base.interfaces import IFilterSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from Products.PortalTransforms.data import datastream\n from zope.component import getMultiAdapter\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_mail.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_mail.py\nindex c3d306202a..c575f7f438 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_mail.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_mail.py\n@@ -5,7 +5,7 @@\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n \n-from Products.CMFPlone.interfaces import IMailSchema\n+from plone.base.interfaces import IMailSchema\n from Products.CMFPlone.testing import \\\n     PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_markup.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_markup.py\nindex a4cb5ae821..cd34913f44 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_markup.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_markup.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import IMarkupSchema\n+from plone.base.interfaces import IMarkupSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from plone.app.testing import SITE_OWNER_NAME, SITE_OWNER_PASSWORD\n from plone.registry.interfaces import IRegistry\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_navigation.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_navigation.py\nindex 7921dec95d..66e79d0d0e 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_navigation.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_navigation.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import INavigationSchema\n+from plone.base.interfaces import INavigationSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from plone.app.testing import SITE_OWNER_NAME, SITE_OWNER_PASSWORD\n from plone.registry.interfaces import IRegistry\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_search.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_search.py\nindex 02358a34d0..3b2d7d17c0 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_search.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_search.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import ISearchSchema\n+from plone.base.interfaces import ISearchSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from plone.app.testing import SITE_OWNER_NAME, SITE_OWNER_PASSWORD\n from plone.registry.interfaces import IRegistry\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_security.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_security.py\nindex df4f58c383..89c57b5113 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_security.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_security.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import ISecuritySchema\n+from plone.base.interfaces import ISecuritySchema\n from Products.CMFPlone.testing import \\\n     PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from plone.app.testing import SITE_OWNER_NAME, SITE_OWNER_PASSWORD\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_site.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_site.py\nindex 583e5e4b83..e5cf80998d 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_site.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_site.py\n@@ -1,7 +1,7 @@\n from plone.app.testing import SITE_OWNER_NAME, SITE_OWNER_PASSWORD\n from plone.registry.interfaces import IRegistry\n from plone.testing.zope import Browser\n-from Products.CMFPlone.interfaces import ISiteSchema\n+from plone.base.interfaces import ISiteSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from io import BytesIO\n from zope.component import getMultiAdapter\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_dateandtime.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_dateandtime.py\nindex ed75bc1727..9a86dee7be 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_dateandtime.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_dateandtime.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import IDateAndTimeSchema\n+from plone.base.interfaces import IDateAndTimeSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import setRoles\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_editing.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_editing.py\nindex 3a5f9c27c0..037d4b166e 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_editing.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_editing.py\n@@ -1,5 +1,5 @@\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import IEditingSchema\n+from plone.base.interfaces import IEditingSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n from zope.component import getMultiAdapter\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_events.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_events.py\nindex 7bc43c1708..0e053ff69f 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_events.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_events.py\n@@ -1,7 +1,7 @@\n from Products.CMFPlone.testing import \\\n     PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ISecuritySchema\n+from plone.base.interfaces import ISecuritySchema\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import setRoles\n from zope.component import getAdapter\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_filter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_filter.py\nindex c96c5e8c1a..44b5fcd01f 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_filter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_filter.py\n@@ -1,5 +1,5 @@\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import IFilterSchema\n+from plone.base.interfaces import IFilterSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n from zope.component import getMultiAdapter\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_mail.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_mail.py\nindex 2b78ace63f..0de6c66436 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_mail.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_mail.py\n@@ -3,7 +3,7 @@\n from plone.registry.interfaces import IRegistry\n \n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import IMailSchema\n+from plone.base.interfaces import IMailSchema\n from Products.CMFPlone.testing import \\\n     PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_markup.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_markup.py\nindex 9af62e6e6b..248e27602c 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_markup.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_markup.py\n@@ -1,5 +1,5 @@\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import IMarkupSchema\n+from plone.base.interfaces import IMarkupSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n from zope.component import getMultiAdapter\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_navigation.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_navigation.py\nindex 62ca94ae2f..955ed19c40 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_navigation.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_navigation.py\n@@ -1,5 +1,5 @@\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import INavigationSchema\n+from plone.base.interfaces import INavigationSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n from zope.component import getMultiAdapter\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_search.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_search.py\nindex ccdbce6c6b..8cab7e457c 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_search.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_search.py\n@@ -1,5 +1,5 @@\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ISearchSchema\n+from plone.base.interfaces import ISearchSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n from zope.component import getMultiAdapter\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_security.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_security.py\nindex f2f39cb42f..12898194be 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_security.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_security.py\n@@ -1,5 +1,5 @@\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ISecuritySchema\n+from plone.base.interfaces import ISecuritySchema\n from Products.CMFPlone.testing import \\\n     PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.app.testing import TEST_USER_ID, setRoles\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_site.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_site.py\nindex 38ec5f45e8..d8786bbb95 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_site.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_site.py\n@@ -1,5 +1,5 @@\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ISiteSchema\n+from plone.base.interfaces import ISiteSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from plone.registry.interfaces import IRegistry\n from zope.component import getMultiAdapter\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_types.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_types.py\nindex 1294c6812e..311d29b9e3 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_types.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_types.py\n@@ -1,5 +1,5 @@\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ITypesSchema\n+from plone.base.interfaces import ITypesSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n from zope.component import getMultiAdapter\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_usergroups.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_usergroups.py\nindex fafe010171..7e92c90e83 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_usergroups.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_usergroups.py\n@@ -1,6 +1,6 @@\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import IUserGroupsSettingsSchema\n+from plone.base.interfaces import IUserGroupsSettingsSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from zope.component import getMultiAdapter\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_upgrades1.zcml b/Products/CMFPlone/controlpanel/tests/test_upgrades1.zcml\nindex a33635e929..957e962283 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_upgrades1.zcml\n+++ b/Products/CMFPlone/controlpanel/tests/test_upgrades1.zcml\n@@ -7,7 +7,7 @@\n       name="testfixture1"\n       title="Plone Test Fixture 1"\n       directory="profiles/testfixture"\n-      for="Products.CMFPlone.interfaces.ITestCasePloneSiteRoot"\n+      for="plone.base.interfaces.ITestCasePloneSiteRoot"\n       provides="Products.GenericSetup.interfaces.EXTENSION"\n       />\n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_upgrades2.zcml b/Products/CMFPlone/controlpanel/tests/test_upgrades2.zcml\nindex 0a6fcb4c43..c02f7be17d 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_upgrades2.zcml\n+++ b/Products/CMFPlone/controlpanel/tests/test_upgrades2.zcml\n@@ -7,7 +7,7 @@\n       name="testfixture2"\n       title="Plone Test Fixture 2"\n       directory="profiles/testfixture"\n-      for="Products.CMFPlone.interfaces.ITestCasePloneSiteRoot"\n+      for="plone.base.interfaces.ITestCasePloneSiteRoot"\n       provides="Products.GenericSetup.interfaces.EXTENSION"\n       />\n \ndiff --git a/Products/CMFPlone/exportimport/configure.zcml b/Products/CMFPlone/exportimport/configure.zcml\nindex 3607947997..a3cd905d75 100644\n--- a/Products/CMFPlone/exportimport/configure.zcml\n+++ b/Products/CMFPlone/exportimport/configure.zcml\n@@ -122,14 +122,14 @@\n   <adapter\n      factory=".propertiestool.PlonePropertiesToolXMLAdapter"\n      provides="Products.GenericSetup.interfaces.IBody"\n-     for="Products.CMFPlone.interfaces.IPropertiesTool\n+     for="plone.base.interfaces.IPropertiesTool\n           Products.GenericSetup.interfaces.ISetupEnviron"\n      />\n \n   <adapter\n      factory=".propertiestool.SimpleItemWithPropertiesXMLAdapter"\n      provides="Products.GenericSetup.interfaces.IBody"\n-     for="Products.CMFPlone.interfaces.ISimpleItemWithProperties\n+     for="plone.base.interfaces.ISimpleItemWithProperties\n           Products.GenericSetup.interfaces.ISetupEnviron"\n      />\n \n@@ -150,7 +150,7 @@\n   <adapter\n      factory=".controlpanel.ControlPanelXMLAdapter"\n      provides="Products.GenericSetup.interfaces.IBody"\n-     for="Products.CMFPlone.interfaces.IControlPanel\n+     for="plone.base.interfaces.IControlPanel\n           Products.GenericSetup.interfaces.ISetupEnviron"\n      />\n \ndiff --git a/Products/CMFPlone/exportimport/controlpanel.py b/Products/CMFPlone/exportimport/controlpanel.py\nindex ecf8107973..48ca8c891d 100644\n--- a/Products/CMFPlone/exportimport/controlpanel.py\n+++ b/Products/CMFPlone/exportimport/controlpanel.py\n@@ -23,7 +23,7 @@\n from Products.CMFCore.interfaces import IActionProvider\n from Products.CMFCore.utils import getToolByName\n \n-from Products.CMFPlone.interfaces import IControlPanel\n+from plone.base.interfaces import IControlPanel\n \n \n class ControlPanelXMLAdapter(XMLAdapterBase):\ndiff --git a/Products/CMFPlone/exportimport/propertiestool.py b/Products/CMFPlone/exportimport/propertiestool.py\nindex 7d819ed58d..3bc7ea923b 100644\n--- a/Products/CMFPlone/exportimport/propertiestool.py\n+++ b/Products/CMFPlone/exportimport/propertiestool.py\n@@ -11,9 +11,9 @@\n from Products.GenericSetup.utils import ObjectManagerHelpers\n from Products.GenericSetup.utils import PropertyManagerHelpers\n from Products.CMFPlone.PropertiesTool import SimpleItemWithProperties\n-from Products.CMFPlone.interfaces \\\n+from plone.base.interfaces \\\n     import IPropertiesTool as IPlonePropertiesTool\n-from Products.CMFPlone.interfaces import ISimpleItemWithProperties\n+from plone.base.interfaces import ISimpleItemWithProperties\n \n _FILENAME = \'propertiestool.xml\'\n \ndiff --git a/Products/CMFPlone/exportimport/tests/testControlPanel.py b/Products/CMFPlone/exportimport/tests/testControlPanel.py\nindex e2c7d5ba76..cb016c97c0 100644\n--- a/Products/CMFPlone/exportimport/tests/testControlPanel.py\n+++ b/Products/CMFPlone/exportimport/tests/testControlPanel.py\n@@ -1,6 +1,6 @@\n from OFS.Folder import Folder\n from Products.CMFPlone.exportimport.tests.base import BodyAdapterTestCase\n-from Products.CMFPlone.interfaces import IControlPanel\n+from plone.base.interfaces import IControlPanel\n from Products.CMFPlone.PloneControlPanel import PloneControlPanel\n from zope.component import provideUtility\n from zope.component import provideAdapter\ndiff --git a/Products/CMFPlone/exportimport/tests/testPropertiesTool.py b/Products/CMFPlone/exportimport/tests/testPropertiesTool.py\nindex 511ebc786d..317b19100d 100644\n--- a/Products/CMFPlone/exportimport/tests/testPropertiesTool.py\n+++ b/Products/CMFPlone/exportimport/tests/testPropertiesTool.py\n@@ -37,7 +37,7 @@ def _populate(self, obj):\n             \'displayPublicationDateInByline\', True, \'boolean\')\n \n     def setUp(self):\n-        from Products.CMFPlone.interfaces import ISimpleItemWithProperties\n+        from plone.base.interfaces import ISimpleItemWithProperties\n         from Products.GenericSetup.interfaces import ISetupEnviron\n         from Products.GenericSetup.interfaces import IBody\n         provideAdapter(\n@@ -66,8 +66,8 @@ def _populate(self, obj):\n     def setUp(self):\n         from Products.CMFPlone.exportimport.propertiestool \\\n             import SimpleItemWithPropertiesXMLAdapter\n-        from Products.CMFPlone.interfaces import IPropertiesTool\n-        from Products.CMFPlone.interfaces import ISimpleItemWithProperties\n+        from plone.base.interfaces import IPropertiesTool\n+        from plone.base.interfaces import ISimpleItemWithProperties\n         from Products.GenericSetup.interfaces import ISetupEnviron\n         from Products.GenericSetup.interfaces import IBody\n         provideAdapter(\ndiff --git a/Products/CMFPlone/factory.py b/Products/CMFPlone/factory.py\nindex 41f47a1c81..6a23bd1164 100644\n--- a/Products/CMFPlone/factory.py\n+++ b/Products/CMFPlone/factory.py\n@@ -4,7 +4,7 @@\n from Products.CMFCore.interfaces import ISiteRoot\n from Products.CMFPlone import PloneMessageFactory as _\n from Products.CMFPlone.events import SiteManagerCreatedEvent\n-from Products.CMFPlone.interfaces import INonInstallable\n+from plone.base.interfaces import INonInstallable\n from Products.CMFPlone.Portal import PloneSite\n from Products.GenericSetup.tool import SetupTool\n from Products.statusmessages.interfaces import IStatusMessage\ndiff --git a/Products/CMFPlone/i18nl10n.py b/Products/CMFPlone/i18nl10n.py\nindex b5fdaa64f5..d9980a07e9 100644\n--- a/Products/CMFPlone/i18nl10n.py\n+++ b/Products/CMFPlone/i18nl10n.py\n@@ -1,290 +1,3 @@\n-"""\n-Collection of i18n and l10n utility methods.\n-"""\n-from Acquisition import aq_acquire\n-from DateTime import DateTime\n-from DateTime.interfaces import IDateTime\n-from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.utils import log\n-from zope.component import getUtility\n-from zope.i18n import translate\n-from zope.i18n.locales import locales\n-from zope.publisher.interfaces.browser import IBrowserRequest\n+from zope.deprecation import moved\n \n-import logging\n-import re\n-\n-datetime_formatvariables = {\'H\', \'I\', \'m\', \'d\', \'M\', \'p\', \'S\', \'Y\', \'y\', \'Z\'}\n-name_formatvariables = {\'a\', \'A\', \'b\', \'B\'}\n-all_formatvariables = datetime_formatvariables | name_formatvariables\n-_all_regexp_set = \',\'.join(all_formatvariables)\n-# regexp to split up ${X} format strings\n-_interp_regex = re.compile(\n-    r\'(?<!\\$)(\\$(?:[%(n)s]|{[%(n)s]}))\' % ({\'n\': _all_regexp_set})\n-)\n-# regexp to detect if this is a strftime format string\n-_dt_format_string_regexp = re.compile(fr\'\\%([{_all_regexp_set}])\')\n-\n-# those are from DateTime.DateTime, but we must not rely on its internal\n-# structures, so here a copy:\n-ENGLISH_NAMES = {\n-    \'_days\': (\n-        \'Sunday\', \'Monday\', \'Tuesday\', \'Wednesday\',  \'Thursday\', \'Friday\',\n-        \'Saturday\',\n-    ),\n-    \'_days_a\': (\'Sun\', \'Mon\', \'Tue\', \'Wed\', \'Thu\', \'Fri\', \'Sat\'),\n-    \'_days_p\': (\'Sun.\', \'Mon.\', \'Tue.\', \'Wed.\', \'Thu.\', \'Fri.\', \'Sat.\'),\n-    \'_months\': (\n-        \'\', \'January\', \'February\', \'March\', \'April\', \'May\', \'June\',\n-        \'July\', \'August\', \'September\', \'October\', \'November\', \'December\',\n-    ),\n-    \'_months_a\': (\n-        \'\', \'Jan\', \'Feb\', \'Mar\', \'Apr\', \'May\', \'Jun\',\n-        \'Jul\', \'Aug\', \'Sep\', \'Oct\', \'Nov\', \'Dec\',\n-    ),\n-    \'_months_p\': (\n-        \'\', \'Jan.\', \'Feb.\', \'Mar.\', \'Apr.\', \'May\', \'June\',\n-        \'July\', \'Aug.\', \'Sep.\', \'Oct.\', \'Nov.\', \'Dec.\'\n-    ),\n-}\n-\n-# The following are helper methods to change the default date and time formats\n-# for a specific locale. These locale dependent formats are used in the\n-# date/time widgets to determine the format and decide if a 24 hour or 12 hour\n-# AM/PM widget should be used. If \'a\' is part of the pattern the AM/PM widget\n-# will be used, otherwise a 24 hour clock.\n-#\n-# localeid is a tuple of the form: (language, country, variant)\n-# for example: (None, ) or (\'en\', ) or (\'en\', \'US\', None)\n-#\n-# value is in the format described by zope.i18n.interfaces.IDateTimeFormat\n-# for example u\'yyyy-MM-dd\' or u\'HH:mm:ss\'\n-#\n-# Note that this is a different format than used for the other methods in\n-# this module.\n-#\n-# locales uses a module level cache, so any changes you make with these\n-# methods will apply to the entire process and only need to be made once.\n-# You can use them in any code imported at startup, for example in a packages\n-# __init__ method.\n-#\n-# In order to use a 24 hour clock for English speakers, you would do:\n-#\n-# from Products.CMFPlone import i18nl10n\n-# i18nl10n.setDefaultTimeFormat((\'en\',), u\'HH:mm:ss\')\n-\n-\n-def setDefaultDateFormat(localeid, value):\n-    gregorian = locales.getLocale(*localeid).dates.calendars[\'gregorian\']\n-    date_format = gregorian.dateFormats[\'medium\'].formats[None]\n-    date_format.pattern = value\n-\n-\n-def setDefaultTimeFormat(localeid, value):\n-    gregorian = locales.getLocale(*localeid).dates.calendars[\'gregorian\']\n-    time_format = gregorian.timeFormats[\'medium\'].formats[None]\n-    time_format.pattern = value\n-\n-\n-def utranslate(domain, msgid, mapping=None, context=None,\n-               target_language=None, default=None):\n-    # We used to pass an object as context.\n-    if not IBrowserRequest.providedBy(context):\n-        context = aq_acquire(context, \'REQUEST\')\n-    # The signature of zope.i18n\'s translate has the msgid and domain switched\n-    return translate(msgid, domain=domain, mapping=mapping, context=context,\n-                     target_language=target_language, default=default)\n-\n-\n-def get_formatstring_from_registry(msgid):\n-    """If the Enabled record is True, return a format string."""\n-    registry = getUtility(IRegistry)\n-    name_root = \'Products.CMFPlone.i18nl10n.override_dateformat.\'\n-    if registry.get(name_root + \'Enabled\', False) is False:\n-        return None\n-    # msgid: "date_format_long", "date_format_short", or "time_format"\n-    record_name = name_root + msgid\n-    return registry.get(record_name, None)\n-\n-\n-def ulocalized_time(time, long_format=None, time_only=False, context=None,\n-                    domain=\'plonelocales\', request=None, target_language=None):\n-    """unicode aware localized time method (l10n)"""\n-\n-    if time_only:\n-        msgid = \'time_format\'\n-    elif long_format:\n-        msgid = \'date_format_long\'\n-    else:\n-        msgid = \'date_format_short\'\n-\n-    # NOTE: this requires the presence of three msgids inside the translation\n-    #       catalog date_format_long, date_format_short, and time_format\n-    #       These msgids are translated using interpolation.\n-    #       The variables used here are the same as used in the strftime\n-    #       formating.\n-    #       Supported are:\n-    #           %A, %a, %B, %b, %H, %I, %m, %d, %M, %p, %S, %Y, %y, %Z\n-    #       Each used as variable in the msgstr without the %.\n-    #       For example: "${A} ${d}. ${B} ${Y}, ${H}:${M} ${Z}"\n-    #       Each language dependend part is translated itself as well.\n-\n-    # From http://docs.python.org/lib/module-time.html\n-    #\n-    # %a    Locale\'s abbreviated weekday name.\n-    # %A        Locale\'s full weekday name.\n-    # %b        Locale\'s abbreviated month name.\n-    # %B        Locale\'s full month name.\n-    # %d        Day of the month as a decimal number [01,31].\n-    # %H        Hour (24-hour clock) as a decimal number [00,23].\n-    # %I        Hour (12-hour clock) as a decimal number [01,12].\n-    # %m        Month as a decimal number [01,12].\n-    # %M        Minute as a decimal number [00,59].\n-    # %p        Locale\'s equivalent of either AM or PM.\n-    # %S        Second as a decimal number [00,61].\n-    # %y        Year without century as a decimal number [00,99].\n-    # %Y        Year with century as a decimal number.\n-    # %Z        Time zone name (no characters if no time zone exists).\n-\n-    mapping = {}\n-    # convert to DateTime instances. Either a date string or\n-    # a DateTime instance needs to be passed.\n-    if not IDateTime.providedBy(time):\n-        try:\n-            time = DateTime(time)\n-        except:\n-            log(\'Failed to convert %s to a DateTime object\' % time,\n-                severity=logging.DEBUG)\n-            return None\n-\n-    if context is None:\n-        # when without context, we cannot do very much.\n-        return time.ISO8601()\n-\n-    if request is None:\n-        request = aq_acquire(context, \'REQUEST\')\n-\n-    # 1. if our Enabled flag in the configuration registry is set,\n-    # the format string there should override the translation machinery\n-    formatstring = get_formatstring_from_registry(msgid)\n-\n-    if formatstring is not None:\n-        if _dt_format_string_regexp.findall(formatstring):\n-            # classic strftime formatting, no i18n/l10n\n-            return time.strftime(formatstring)\n-    else:\n-        # 2. the normal case: translation machinery,\n-        # that is the ".../LC_MESSAGES/plonelocales.po" files\n-        formatstring = translate(\n-            msgid, domain, mapping, request, target_language=target_language\n-        )\n-\n-    # 3. if both failed, fall back to hardcoded ISO style\n-    if formatstring == msgid:\n-        if msgid == \'date_format_long\':\n-            formatstring = \'%Y-%m-%d %H:%M\'  # 2038-01-19 03:14\n-        elif msgid == \'date_format_short\':\n-            formatstring = \'%Y-%m-%d\'  # 2038-01-19\n-        elif msgid == \'time_format\':\n-            formatstring = \'%H:%M\'  # 03:14\n-        else:\n-            formatstring = \'[INTERNAL ERROR]\'\n-        return time.strftime(formatstring)\n-\n-    # get the format elements used in the formatstring\n-    formatelements = {el[2:-1] for el in _interp_regex.findall(formatstring)}\n-\n-    # add used elements to mapping\n-    elements = formatelements & datetime_formatvariables\n-    for key in elements:\n-        mapping[key] = time.strftime(\'%\' + key)\n-\n-    # add weekday name, abbr. weekday name, month name, abbr month name\n-    name_elements = formatelements & name_formatvariables\n-    if {\'a\', \'A\'} & name_elements:\n-        weekday = int(time.strftime(\'%w\'))  # weekday, sunday = 0\n-        if \'a\' in name_elements:\n-            mapping[\'a\'] = weekdayname_msgid_abbr(weekday)\n-        if \'A\' in name_elements:\n-            mapping[\'A\'] = weekdayname_msgid(weekday)\n-    if {\'b\', \'B\'} & name_elements:\n-        monthday = int(time.strftime(\'%m\'))  # month, january = 1\n-        if \'b\' in name_elements:\n-            mapping[\'b\'] = monthname_msgid_abbr(monthday)\n-        if \'B\' in name_elements:\n-            mapping[\'B\'] = monthname_msgid(monthday)\n-\n-    # translate translateable elements\n-    for key in name_elements:\n-        mapping[key] = translate(\n-            mapping[key],\n-            domain,\n-            context=request,\n-            default=mapping[key],\n-            target_language=target_language,\n-        )\n-\n-    # translate the time string\n-    return translate(\n-        msgid, domain, mapping, request, target_language=target_language\n-    )\n-\n-\n-def _numbertoenglishname(number, format=None, attr=\'_days\'):\n-    # returns the english name of day or month number\n-    # starting with Sunday == 0\n-    # and January = 1\n-    # format is either None, \'a\' or \'p\')\n-    #   None  means full name (January, February, ...)\n-    #   \'a\' means abbreviated (Jan, Feb, ..)\n-    #   \'p\' means abbreviated with . (dot) at end (Jan., Feb., ...)\n-\n-    number = int(number)\n-    if format is not None:\n-        attr = f\'{attr}_{format}\'\n-    return ENGLISH_NAMES[attr][number]\n-\n-\n-def monthname_english(number, format=None):\n-    # returns the english name of month with number\n-    return _numbertoenglishname(number, format=format, attr=\'_months\')\n-\n-\n-def weekdayname_english(number, format=None):\n-    # returns the english name of week with number\n-    return _numbertoenglishname(number, format=format, attr=\'_days\')\n-\n-\n-def monthname_msgid(number):\n-    # returns the msgid for monthname\n-    # use to translate to full monthname (January, February, ...)\n-    # e.g. month_jan, month_feb, ...\n-    return "month_%s" % monthname_english(number, format=\'a\').lower()\n-\n-\n-def monthname_msgid_abbr(number):\n-    # returns the msgid for the abbreviated monthname\n-    # use to translate to abbreviated format (Jan, Feb, ...)\n-    # e.g. month_jan_abbr, month_feb_abbr, ...\n-    return "month_%s_abbr" % monthname_english(number, format=\'a\').lower()\n-\n-\n-def weekdayname_msgid(number):\n-    # returns the msgid for the weekdayname\n-    # use to translate to full weekdayname (Monday, Tuesday, ...)\n-    # e.g. weekday_mon, weekday_tue, ...\n-    return "weekday_%s" % weekdayname_english(number, format=\'a\').lower()\n-\n-\n-def weekdayname_msgid_abbr(number):\n-    # returns the msgid for abbreviated weekdayname\n-    # use to translate to abbreviated format (Mon, Tue, ...)\n-    # e.g. weekday_mon_abbr, weekday_tue_abbr, ...\n-    return "weekday_%s_abbr" % weekdayname_english(number, format=\'a\').lower()\n-\n-\n-def weekdayname_msgid_short(number):\n-    # return the msgid for short weekdayname\n-    # use to translate to 2 char format (Mo, Tu, ...)\n-    # e.g. weekday_mon_short, weekday_tue_short, ...\n-    return "weekday_%s_short" % weekdayname_english(number, format=\'a\').lower()\n+moved(\'plone.base.i18nl10n\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/interfaces/__init__.py b/Products/CMFPlone/interfaces/__init__.py\nindex cf35ad8c93..b860e138ca 100644\n--- a/Products/CMFPlone/interfaces/__init__.py\n+++ b/Products/CMFPlone/interfaces/__init__.py\n@@ -1,3 +1,65 @@\n-from zope.deprecation import moved\n+from zope.deferredimport import deprecated\n \n-moved(\'plone.base.interfaces\', \'Version 7.0\')\n\\ No newline at end of file\n+deprecated(\n+    "Moved to plone.base.interfaces, import from there instead (removed in Plone 7).",\n+    IPloneBaseTool="plone.base.interfaces.basetool:IPloneBaseTool",\n+    IPloneCatalogTool="plone.base.interfaces.basetool:IPloneCatalogTool",\n+    IPloneTool="plone.base.interfaces.basetool:IPloneTool",\n+    IHideFromBreadcrumbs="plone.base.interfaces.breadcrumbs:IHideFromBreadcrumbs",\n+    IConstrainTypes="plone.base.interfaces.constrains:IConstrainTypes",\n+    ISelectableConstrainTypes="plone.base.interfaces.constrains:ISelectableConstrainTypes",\n+    IActionSchema="plone.base.interfaces.controlpanel:IActionSchema",\n+    IControlPanel="plone.base.interfaces.controlpanel:IControlPanel",\n+    IDateAndTimeSchema="plone.base.interfaces.controlpanel:IDateAndTimeSchema",\n+    IEditingSchema="plone.base.interfaces.controlpanel:IEditingSchema",\n+    IFilterSchema="plone.base.interfaces.controlpanel:IFilterSchema",\n+    IImagingSchema="plone.base.interfaces.controlpanel:IImagingSchema",\n+    ILinkSchema="plone.base.interfaces.controlpanel:ILinkSchema",\n+    ILoginSchema="plone.base.interfaces.controlpanel:ILoginSchema",\n+    IMailSchema="plone.base.interfaces.controlpanel:IMailSchema",\n+    IMaintenanceSchema="plone.base.interfaces.controlpanel:IMaintenanceSchema",\n+    IMarkupSchema="plone.base.interfaces.controlpanel:IMarkupSchema",\n+    INavigationSchema="plone.base.interfaces.controlpanel:INavigationSchema",\n+    INewActionSchema="plone.base.interfaces.controlpanel:INewActionSchema",\n+    ISearchSchema="plone.base.interfaces.controlpanel:ISearchSchema",\n+    ISecuritySchema="plone.base.interfaces.controlpanel:ISecuritySchema",\n+    ISiteSchema="plone.base.interfaces.controlpanel:ISiteSchema",\n+    ISocialMediaSchema="plone.base.interfaces.controlpanel:ISocialMediaSchema",\n+    ITinyMCEAdvancedSchema="plone.base.interfaces.controlpanel:ITinyMCEAdvancedSchema",\n+    ITinyMCELayoutSchema="plone.base.interfaces.controlpanel:ITinyMCELayoutSchema",\n+    ITinyMCEPluginSchema="plone.base.interfaces.controlpanel:ITinyMCEPluginSchema",\n+    ITinyMCEResourceTypesSchema="plone.base.interfaces.controlpanel:ITinyMCEResourceTypesSchema",\n+    ITinyMCESchema="plone.base.interfaces.controlpanel:ITinyMCESchema",\n+    ITinyMCESpellCheckerSchema="plone.base.interfaces.controlpanel:ITinyMCESpellCheckerSchema",\n+    ITypesSchema="plone.base.interfaces.controlpanel:ITypesSchema",\n+    IUserGroupsSettingsSchema="plone.base.interfaces.controlpanel:IUserGroupsSettingsSchema",\n+    IConfigurationChangedEvent="plone.base.interfaces.events:IConfigurationChangedEvent",\n+    IReorderedEvent="plone.base.interfaces.events:IReorderedEvent",\n+    ISiteManagerCreatedEvent="plone.base.interfaces.events:ISiteManagerCreatedEvent",\n+    INonInstallable="plone.base.interfaces.installable:INonInstallable",\n+    IInterfaceTool="plone.base.interfaces.interface:IInterfaceTool",\n+    ILanguage="plone.base.interfaces.language:ILanguage",\n+    IForcePasswordChange="plone.base.interfaces.login:IForcePasswordChange",\n+    IInitialLogin="plone.base.interfaces.login:IInitialLogin",\n+    ILogin="plone.base.interfaces.login:ILogin",\n+    ILoginForm="plone.base.interfaces.login:ILoginForm",\n+    ILoginFormSchema="plone.base.interfaces.login:ILoginFormSchema",\n+    ILoginHelpForm="plone.base.interfaces.login:ILoginHelpForm",\n+    ILoginHelpFormSchema="plone.base.interfaces.login:ILoginHelpFormSchema",\n+    IRedirectAfterLogin="plone.base.interfaces.login:IRedirectAfterLogin",\n+    IMigrationTool="plone.base.interfaces.migration:IMigrationTool",\n+    IPasswordResetToolView="plone.base.interfaces.password_reset:IPasswordResetToolView",\n+    IPWResetTool="plone.base.interfaces.password_reset:IPWResetTool",\n+    IPatternsSettings="plone.base.interfaces.patterns:IPatternsSettings",\n+    IPropertiesTool="plone.base.interfaces.properties:IPropertiesTool",\n+    ISimpleItemWithProperties="plone.base.interfaces.properties:ISimpleItemWithProperties",\n+    IBundleRegistry="plone.base.interfaces.resources:IBundleRegistry",\n+    IResourceRegistry="plone.base.interfaces.resources:IResourceRegistry",\n+    IMigratingPloneSiteRoot="plone.base.interfaces.siteroot:IMigratingPloneSiteRoot",\n+    IPloneSiteRoot="plone.base.interfaces.siteroot:IPloneSiteRoot",\n+    ITestCasePloneSiteRoot="plone.base.interfaces.siteroot:ITestCasePloneSiteRoot",\n+    INonStructuralFolder="plone.base.interfaces.structure:INonStructuralFolder",\n+    ISiteSyndicationSettings="plone.base.interfaces.syndication:ISiteSyndicationSettings",\n+    ITranslationServiceTool="plone.base.interfaces.translationservice:ITranslationServiceTool",\n+    IWorkflowChain="plone.base.interfaces.workflow:IWorkflowChain",\n+)\ndiff --git a/Products/CMFPlone/patches/sendmail.py b/Products/CMFPlone/patches/sendmail.py\nindex bfee534d59..d699ceee01 100644\n--- a/Products/CMFPlone/patches/sendmail.py\n+++ b/Products/CMFPlone/patches/sendmail.py\n@@ -1,5 +1,5 @@\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import IMailSchema\n+from plone.base.interfaces import IMailSchema\n from transaction._transaction import Status\n from zope.component import getUtility\n from zope.sendmail.mailer import _SMTPState\ndiff --git a/Products/CMFPlone/patterns/configure.zcml b/Products/CMFPlone/patterns/configure.zcml\nindex c4c0de969e..63908ad2ee 100644\n--- a/Products/CMFPlone/patterns/configure.zcml\n+++ b/Products/CMFPlone/patterns/configure.zcml\n@@ -14,13 +14,13 @@\n       factory=".settings.PatternSettingsAdapter"\n       for="* * *"\n       name="pattern_settings"\n-      provides="Products.CMFPlone.interfaces.IPatternsSettings"\n+      provides="plone.base.interfaces.IPatternsSettings"\n   />\n   <!-- deprecated name -->\n   <adapter\n       factory=".settings.PatternSettingsAdapter"\n       for="* * *"\n       name="plone_settings"\n-      provides="Products.CMFPlone.interfaces.IPatternsSettings"\n+      provides="plone.base.interfaces.IPatternsSettings"\n   />\n </configure>\ndiff --git a/Products/CMFPlone/patterns/settings.py b/Products/CMFPlone/patterns/settings.py\nindex 499c3b65d5..fae04f2467 100644\n--- a/Products/CMFPlone/patterns/settings.py\n+++ b/Products/CMFPlone/patterns/settings.py\n@@ -7,9 +7,9 @@\n from plone.registry.interfaces import IRegistry\n from plone.uuid.interfaces import IUUID\n from Products.CMFCore.interfaces._content import IFolderish\n-from Products.CMFPlone.interfaces import ILinkSchema\n-from Products.CMFPlone.interfaces import IPatternsSettings\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n+from plone.base.interfaces import ILinkSchema\n+from plone.base.interfaces import IPatternsSettings\n+from plone.base.interfaces import IPloneSiteRoot\n from Products.CMFPlone.patterns.tinymce import TinyMCESettingsGenerator\n from Products.CMFPlone.utils import get_portal\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/patterns/tinymce.py b/Products/CMFPlone/patterns/tinymce.py\nindex 075d7a9e40..71ba3ea05a 100644\n--- a/Products/CMFPlone/patterns/tinymce.py\n+++ b/Products/CMFPlone/patterns/tinymce.py\n@@ -3,8 +3,8 @@\n from plone.app.theming.utils import theming_policy\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import IFilterSchema\n-from Products.CMFPlone.interfaces import ITinyMCESchema\n+from plone.base.interfaces import IFilterSchema\n+from plone.base.interfaces import ITinyMCESchema\n from Products.CMFPlone.utils import get_portal\n from Products.CMFPlone.utils import safe_unicode\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/patterns/view.py b/Products/CMFPlone/patterns/view.py\nindex c88dacca7f..5f7b8e311b 100644\n--- a/Products/CMFPlone/patterns/view.py\n+++ b/Products/CMFPlone/patterns/view.py\n@@ -1,6 +1,6 @@\n # This module delivers the global patterns settings\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import IPatternsSettings\n+from plone.base.interfaces import IPatternsSettings\n from zope.component import getAdapters\n from zope.component import getMultiAdapter\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/profiles.zcml b/Products/CMFPlone/profiles.zcml\nindex 78ee432b74..b82c00411d 100644\n--- a/Products/CMFPlone/profiles.zcml\n+++ b/Products/CMFPlone/profiles.zcml\n@@ -8,7 +8,7 @@\n       title="Plone Site"\n       directory="profiles/default"\n       description="Profile for a default Plone."\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       post_handler="Products.CMFPlone.setuphandlers.importFinalSteps"\n       />\n \n@@ -17,7 +17,7 @@\n       title="Mandatory dependencies for a Plone site"\n       directory="profiles/dependencies"\n       description="Load all profiles from other packages/products that are needed for a full Plone site."\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       provides="Products.GenericSetup.interfaces.EXTENSION"\n       />\n \n@@ -26,7 +26,7 @@\n       title="Plone Test Fixture"\n       directory="profiles/testfixture"\n       description="Extension profile to configure a test fixture"\n-      for="Products.CMFPlone.interfaces.ITestCasePloneSiteRoot"\n+      for="plone.base.interfaces.ITestCasePloneSiteRoot"\n       provides="Products.GenericSetup.interfaces.EXTENSION"\n       />\n \ndiff --git a/Products/CMFPlone/resources/browser/combine.py b/Products/CMFPlone/resources/browser/combine.py\nindex 607d86d603..84bce711e8 100644\n--- a/Products/CMFPlone/resources/browser/combine.py\n+++ b/Products/CMFPlone/resources/browser/combine.py\n@@ -4,8 +4,8 @@\n from plone.registry.interfaces import IRegistry\n from plone.resource.file import FilesystemFile\n from plone.resource.interfaces import IResourceDirectory\n-from Products.CMFPlone.interfaces import IBundleRegistry\n-from Products.CMFPlone.interfaces.resources import (\n+from plone.base.interfaces import IBundleRegistry\n+from plone.base.interfaces.resources import (\n     OVERRIDE_RESOURCE_DIRECTORY_NAME,\n )  # noqa\n from zExceptions import NotFound\ndiff --git a/Products/CMFPlone/resources/browser/configjs.py b/Products/CMFPlone/resources/browser/configjs.py\nindex 0d8e362aaf..cdb8c72146 100644\n--- a/Products/CMFPlone/resources/browser/configjs.py\n+++ b/Products/CMFPlone/resources/browser/configjs.py\n@@ -1,5 +1,5 @@\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import IResourceRegistry\n+from plone.base.interfaces import IResourceRegistry\n from Products.Five.browser import BrowserView\n from zope.component import getUtility\n \ndiff --git a/Products/CMFPlone/resources/browser/cook.py b/Products/CMFPlone/resources/browser/cook.py\nindex f61c8fdc16..3e572eb741 100644\n--- a/Products/CMFPlone/resources/browser/cook.py\n+++ b/Products/CMFPlone/resources/browser/cook.py\n@@ -5,9 +5,9 @@\n from plone.registry.interfaces import IRegistry\n from plone.resource.interfaces import IResourceDirectory\n from plone.subrequest import subrequest\n-from Products.CMFPlone.interfaces.resources import IBundleRegistry\n-from Products.CMFPlone.interfaces.resources import IResourceRegistry\n-from Products.CMFPlone.interfaces.resources import (\n+from plone.base.interfaces.resources import IBundleRegistry\n+from plone.base.interfaces.resources import IResourceRegistry\n+from plone.base.interfaces.resources import (\n     OVERRIDE_RESOURCE_DIRECTORY_NAME,\n )  # noqa\n from Products.CMFPlone.resources.browser.combine import combine_bundles\ndiff --git a/Products/CMFPlone/resources/browser/mixins.py b/Products/CMFPlone/resources/browser/mixins.py\nindex 7ca42c38e1..5819908eff 100644\n--- a/Products/CMFPlone/resources/browser/mixins.py\n+++ b/Products/CMFPlone/resources/browser/mixins.py\n@@ -1,7 +1,7 @@\n from AccessControl.safe_formatter import SafeFormatter\n from plone.registry.interfaces import IRegistry\n from urllib.parse import urlparse\n-from Products.CMFPlone.interfaces import IResourceRegistry\n+from plone.base.interfaces import IResourceRegistry\n from Products.Five.browser import BrowserView\n from zope.component import getMultiAdapter\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/resources/browser/resource.py b/Products/CMFPlone/resources/browser/resource.py\nindex e32b5b2377..33ed6042fa 100644\n--- a/Products/CMFPlone/resources/browser/resource.py\n+++ b/Products/CMFPlone/resources/browser/resource.py\n@@ -10,8 +10,8 @@\n from Products.CMFCore.Expression import Expression\n from Products.CMFCore.utils import _getAuthenticatedUser\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import IBundleRegistry\n-from Products.CMFPlone.interfaces import IResourceRegistry\n+from plone.base.interfaces import IBundleRegistry\n+from plone.base.interfaces import IResourceRegistry\n from Products.CMFPlone.resources import RESOURCE_DEVELOPMENT_MODE\n from Products.CMFPlone.resources.browser.combine import (\n     get_production_resource_directory,\ndiff --git a/Products/CMFPlone/resources/exportimport/resourceregistry.py b/Products/CMFPlone/resources/exportimport/resourceregistry.py\nindex 9d29740475..25379c91e1 100644\n--- a/Products/CMFPlone/resources/exportimport/resourceregistry.py\n+++ b/Products/CMFPlone/resources/exportimport/resourceregistry.py\n@@ -1,8 +1,8 @@\n from datetime import datetime\n from plone.i18n.normalizer.interfaces import IIDNormalizer\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import IBundleRegistry\n-from Products.CMFPlone.interfaces import IResourceRegistry\n+from plone.base.interfaces import IBundleRegistry\n+from plone.base.interfaces import IResourceRegistry\n from Products.CMFPlone.resources.browser.cook import cookWhenChangingSettings\n from Products.GenericSetup.interfaces import IBody\n from Products.GenericSetup.utils import XMLAdapterBase\ndiff --git a/Products/CMFPlone/setuphandlers.py b/Products/CMFPlone/setuphandlers.py\nindex 7215fdadfe..9bc454e82a 100644\n--- a/Products/CMFPlone/setuphandlers.py\n+++ b/Products/CMFPlone/setuphandlers.py\n@@ -1,8 +1,8 @@\n from Acquisition import aq_base\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.factory import _DEFAULT_PROFILE\n-from Products.CMFPlone.interfaces import IMigrationTool\n-from Products.CMFPlone.interfaces.resources import OVERRIDE_RESOURCE_DIRECTORY_NAME\n+from plone.base.interfaces import IMigrationTool\n+from plone.base.interfaces.resources import OVERRIDE_RESOURCE_DIRECTORY_NAME\n from Products.StandardCacheManagers.AcceleratedHTTPCacheManager \\\n     import AcceleratedHTTPCacheManager\n from Products.StandardCacheManagers.RAMCacheManager import RAMCacheManager\ndiff --git a/Products/CMFPlone/tests/csrf.txt b/Products/CMFPlone/tests/csrf.txt\nindex dfc77bb85c..b5f8e22098 100644\n--- a/Products/CMFPlone/tests/csrf.txt\n+++ b/Products/CMFPlone/tests/csrf.txt\n@@ -50,8 +50,8 @@ outgoing mails would have to be handled making things unnecessarily\n complicated:\n \n   >>> from zope.component import getUtility\n-  >>> from Products.CMFPlone.interfaces import IMailSchema\n-  >>> from Products.CMFPlone.interfaces import ISecuritySchema\n+  >>> from plone.base.interfaces import IMailSchema\n+  >>> from plone.base.interfaces import ISecuritySchema\n   >>> from plone.registry.interfaces import IRegistry\n   >>> registry = getUtility(IRegistry)\n   >>> mail_settings = registry.forInterface(IMailSchema, prefix=\'plone\')\ndiff --git a/Products/CMFPlone/tests/dummy.py b/Products/CMFPlone/tests/dummy.py\nindex 5ff3e8db1b..0ea980fb65 100644\n--- a/Products/CMFPlone/tests/dummy.py\n+++ b/Products/CMFPlone/tests/dummy.py\n@@ -4,8 +4,8 @@\n from ComputedAttribute import ComputedAttribute\n from OFS.Folder import Folder as SimpleFolder\n from OFS.SimpleItem import SimpleItem\n-from Products.CMFPlone.interfaces import INonStructuralFolder\n-from Products.CMFPlone.interfaces import IWorkflowChain\n+from plone.base.interfaces import INonStructuralFolder\n+from plone.base.interfaces import IWorkflowChain\n from io import BytesIO\n from zope.interface import implementer\n from zope.interface import Interface\ndiff --git a/Products/CMFPlone/tests/pwreset_browser.rst b/Products/CMFPlone/tests/pwreset_browser.rst\nindex 538d9f1de2..da70832d02 100644\n--- a/Products/CMFPlone/tests/pwreset_browser.rst\n+++ b/Products/CMFPlone/tests/pwreset_browser.rst\n@@ -15,7 +15,7 @@ assumptions that are not true for Plone forms.\n   >>> from zope.component import getUtility\n   >>> registry = getUtility(IRegistry, context=layer[\'portal\'])\n \n-  >>> from Products.CMFPlone.interfaces.controlpanel import IMailSchema\n+  >>> from plone.base.interfaces.controlpanel import IMailSchema\n   >>> mail_settings = registry.forInterface(IMailSchema, prefix="plone")\n   >>> mail_settings.smtp_host = u\'localhost\'\n   >>> mail_settings.email_from_address = \'smith@example.com\'\n@@ -523,7 +523,7 @@ Test passwordreset BrowserView\n \n     >>> portal = layer[\'portal\']\n     >>> mail_settings.email_from_name = u\'Old\\u0159ich a Bo\\u017eena\'\n-    >>> from Products.CMFPlone.interfaces.controlpanel import ISiteSchema\n+    >>> from plone.base.interfaces.controlpanel import ISiteSchema\n     >>> site_settings = registry.forInterface(ISiteSchema, prefix=\'plone\')\n     >>> site_settings.site_title = u\'Koko\\u0159\\xedn Portal\'\n \ndiff --git a/Products/CMFPlone/tests/robot/robot_setup.py b/Products/CMFPlone/tests/robot/robot_setup.py\nindex b32e25ec06..ae9760f5da 100644\n--- a/Products/CMFPlone/tests/robot/robot_setup.py\n+++ b/Products/CMFPlone/tests/robot/robot_setup.py\n@@ -3,8 +3,8 @@\n \n from zope.component import queryUtility\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import IMailSchema\n-from Products.CMFPlone.interfaces import ISecuritySchema\n+from plone.base.interfaces import IMailSchema\n+from plone.base.interfaces import ISecuritySchema\n \n \n class CMFPloneRemoteKeywords(RemoteLibrary):\ndiff --git a/Products/CMFPlone/tests/testCSSandJSRegistry.py b/Products/CMFPlone/tests/testCSSandJSRegistry.py\nindex cf8ee57a78..d7ef268276 100644\n--- a/Products/CMFPlone/tests/testCSSandJSRegistry.py\n+++ b/Products/CMFPlone/tests/testCSSandJSRegistry.py\n@@ -1,6 +1,6 @@\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import IBundleRegistry\n-from Products.CMFPlone.interfaces import IResourceRegistry\n+from plone.base.interfaces import IBundleRegistry\n+from plone.base.interfaces import IResourceRegistry\n from Products.CMFPlone.tests.PloneTestCase import PloneTestCase\n from zope.component import getUtility\n \ndiff --git a/Products/CMFPlone/tests/testEmailLogin.py b/Products/CMFPlone/tests/testEmailLogin.py\nindex b603237a4a..075b3bc6b8 100644\n--- a/Products/CMFPlone/tests/testEmailLogin.py\n+++ b/Products/CMFPlone/tests/testEmailLogin.py\n@@ -2,7 +2,7 @@\n from plone.app.testing import SITE_OWNER_NAME\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ISecuritySchema\n+from plone.base.interfaces import ISecuritySchema\n from Products.CMFPlone.tests import PloneTestCase\n from Products.CMFPlone.utils import set_own_login_name\n from Products.CMFPlone.RegistrationTool import get_member_by_login_name\ndiff --git a/Products/CMFPlone/tests/testIImagingSchema.py b/Products/CMFPlone/tests/testIImagingSchema.py\nindex 3f42d990d8..20b302c059 100644\n--- a/Products/CMFPlone/tests/testIImagingSchema.py\n+++ b/Products/CMFPlone/tests/testIImagingSchema.py\n@@ -1,6 +1,6 @@\n from plone.app.testing import PLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces.controlpanel import IImagingSchema\n+from plone.base.interfaces.controlpanel import IImagingSchema\n from zope.component import getUtility\n \n import unittest\ndiff --git a/Products/CMFPlone/tests/testNavTree.py b/Products/CMFPlone/tests/testNavTree.py\nindex 4003b842bc..6851386e1f 100644\n--- a/Products/CMFPlone/tests/testNavTree.py\n+++ b/Products/CMFPlone/tests/testNavTree.py\n@@ -13,7 +13,7 @@\n \n \n from Products.CMFPlone.PloneFolder import PloneFolder\n-from Products.CMFPlone.interfaces import INonStructuralFolder\n+from plone.base.interfaces import INonStructuralFolder\n \n default_user = PloneTestCase.default_user\n \ndiff --git a/Products/CMFPlone/tests/testNavigationView.py b/Products/CMFPlone/tests/testNavigationView.py\nindex 0c323400c9..c3e19480b8 100644\n--- a/Products/CMFPlone/tests/testNavigationView.py\n+++ b/Products/CMFPlone/tests/testNavigationView.py\n@@ -3,9 +3,9 @@\n from Products.CMFPlone.browser.navigation import CatalogNavigationTabs\n from Products.CMFPlone.browser.navigation import CatalogSiteMap\n from Products.CMFPlone.browser.navigation import PhysicalNavigationBreadcrumbs\n-from Products.CMFPlone.interfaces import IHideFromBreadcrumbs\n-from Products.CMFPlone.interfaces import INavigationSchema\n-from Products.CMFPlone.interfaces import ITypesSchema\n+from plone.base.interfaces import IHideFromBreadcrumbs\n+from plone.base.interfaces import INavigationSchema\n+from plone.base.interfaces import ITypesSchema\n from Products.CMFPlone.tests import dummy\n from Products.CMFPlone.tests import PloneTestCase\n from Products.CMFPlone.tests.utils import folder_position\ndiff --git a/Products/CMFPlone/tests/testPloneTool.py b/Products/CMFPlone/tests/testPloneTool.py\nindex 7546d7a0d1..9ae991a515 100644\n--- a/Products/CMFPlone/tests/testPloneTool.py\n+++ b/Products/CMFPlone/tests/testPloneTool.py\n@@ -2,8 +2,8 @@\n from plone.app.testing import SITE_OWNER_NAME\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import IReorderedEvent\n-from Products.CMFPlone.interfaces import ISearchSchema\n+from plone.base.interfaces import IReorderedEvent\n+from plone.base.interfaces import ISearchSchema\n from Products.CMFPlone.tests import PloneTestCase\n from zope.component import getGlobalSiteManager\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/tests/testPortalCreation.py b/Products/CMFPlone/tests/testPortalCreation.py\nindex 8dcaea6be8..08498041e6 100644\n--- a/Products/CMFPlone/tests/testPortalCreation.py\n+++ b/Products/CMFPlone/tests/testPortalCreation.py\n@@ -10,9 +10,9 @@\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import setuphandlers\n from Products.CMFPlone.factory import _DEFAULT_PROFILE\n-from Products.CMFPlone.interfaces import IFilterSchema\n-from Products.CMFPlone.interfaces import INavigationSchema\n-from Products.CMFPlone.interfaces import ISearchSchema\n+from plone.base.interfaces import IFilterSchema\n+from plone.base.interfaces import INavigationSchema\n+from plone.base.interfaces import ISearchSchema\n from Products.CMFPlone.tests import dummy\n from Products.CMFPlone.tests import PloneTestCase\n from Products.CMFPlone.UnicodeSplitter import I18NNormalizer\ndiff --git a/Products/CMFPlone/tests/testQueryCatalog.py b/Products/CMFPlone/tests/testQueryCatalog.py\nindex 6bafb5856b..2073903c67 100644\n--- a/Products/CMFPlone/tests/testQueryCatalog.py\n+++ b/Products/CMFPlone/tests/testQueryCatalog.py\n@@ -1,9 +1,9 @@\n # Test queryCatalog and plone search forms\n from plone.app.textfield.value import RichTextValue\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import INavigationSchema\n-from Products.CMFPlone.interfaces import ISearchSchema\n-from Products.CMFPlone.interfaces.syndication import ISiteSyndicationSettings\n+from plone.base.interfaces import INavigationSchema\n+from plone.base.interfaces import ISearchSchema\n+from plone.base.interfaces.syndication import ISiteSyndicationSettings\n from Products.CMFPlone.tests import PloneTestCase\n from Products.ZCTextIndex.ParseTree import ParseError\n from zExceptions import NotFound\ndiff --git a/Products/CMFPlone/tests/testRegistrationTool.py b/Products/CMFPlone/tests/testRegistrationTool.py\nindex a10869da25..d7d16eef9b 100644\n--- a/Products/CMFPlone/tests/testRegistrationTool.py\n+++ b/Products/CMFPlone/tests/testRegistrationTool.py\n@@ -3,7 +3,7 @@\n from AccessControl import Unauthorized\n from Products.CMFCore.permissions import AddPortalMember\n from Products.CMFPlone.RegistrationTool import _checkEmail\n-from Products.CMFPlone.interfaces.controlpanel import IMailSchema, ISiteSchema\n+from plone.base.interfaces.controlpanel import IMailSchema, ISiteSchema\n from Products.CMFPlone.tests import PloneTestCase\n from Products.CMFPlone.tests.utils import MockMailHost\n from Products.MailHost.interfaces import IMailHost\ndiff --git a/Products/CMFPlone/tests/testResourceRegistries.py b/Products/CMFPlone/tests/testResourceRegistries.py\nindex d17106da82..87ba06b9f1 100644\n--- a/Products/CMFPlone/tests/testResourceRegistries.py\n+++ b/Products/CMFPlone/tests/testResourceRegistries.py\n@@ -4,9 +4,9 @@\n from plone.subrequest import subrequest\n from Products.CMFPlone.controlpanel.browser.resourceregistry import OverrideFolderManager  # noqa\n from Products.CMFPlone.controlpanel.browser.resourceregistry import ResourceRegistryControlPanelView  # noqa\n-from Products.CMFPlone.interfaces import IBundleRegistry\n-from Products.CMFPlone.interfaces import IResourceRegistry\n-from Products.CMFPlone.interfaces.resources import OVERRIDE_RESOURCE_DIRECTORY_NAME  # noqa\n+from plone.base.interfaces import IBundleRegistry\n+from plone.base.interfaces import IResourceRegistry\n+from plone.base.interfaces.resources import OVERRIDE_RESOURCE_DIRECTORY_NAME  # noqa\n from Products.CMFPlone.resources import add_bundle_on_request\n from Products.CMFPlone.resources import add_resource_on_request\n from Products.CMFPlone.resources import remove_bundle_on_request\ndiff --git a/Products/CMFPlone/tests/testSearch.py b/Products/CMFPlone/tests/testSearch.py\nindex e331876b9e..e132ab5130 100644\n--- a/Products/CMFPlone/tests/testSearch.py\n+++ b/Products/CMFPlone/tests/testSearch.py\n@@ -11,7 +11,7 @@\n from zope.component import getUtility\n from plone.registry.interfaces import IRegistry\n \n-from Products.CMFPlone.interfaces import ISearchSchema\n+from plone.base.interfaces import ISearchSchema\n \n from plone.app.contentlisting.interfaces import IContentListing\n from plone.app.textfield import RichTextValue\ndiff --git a/Products/CMFPlone/tests/testSyndication.py b/Products/CMFPlone/tests/testSyndication.py\nindex 88da13ded3..4dd52fe92a 100644\n--- a/Products/CMFPlone/tests/testSyndication.py\n+++ b/Products/CMFPlone/tests/testSyndication.py\n@@ -3,12 +3,12 @@\n from AccessControl import Unauthorized\n from plone.app.textfield import RichTextValue\n from Products.CMFPlone.tests import PloneTestCase\n-from Products.CMFPlone.interfaces.syndication import IFeedSettings\n-from Products.CMFPlone.interfaces.syndication import ISiteSyndicationSettings\n+from plone.base.interfaces.syndication import IFeedSettings\n+from plone.base.interfaces.syndication import ISiteSyndicationSettings\n from plone.registry.interfaces import IRegistry\n from zope.component import getUtility\n from zExceptions import NotFound\n-from Products.CMFPlone.interfaces.syndication import IFeed\n+from plone.base.interfaces.syndication import IFeed\n from Products.CMFPlone.browser.syndication.adapters import DexterityItem\n \n \ndiff --git a/Products/CMFPlone/tests/testURLTool.py b/Products/CMFPlone/tests/testURLTool.py\nindex 78d38eb845..a84271b953 100644\n--- a/Products/CMFPlone/tests/testURLTool.py\n+++ b/Products/CMFPlone/tests/testURLTool.py\n@@ -6,7 +6,7 @@\n \n from Acquisition import aq_parent\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import ILoginSchema\n+from plone.base.interfaces import ILoginSchema\n from zope.component import getSiteManager\n \n \ndiff --git a/Products/CMFPlone/tests/test_defaultpage.py b/Products/CMFPlone/tests/test_defaultpage.py\nindex bcf66c7aff..3831f94f26 100644\n--- a/Products/CMFPlone/tests/test_defaultpage.py\n+++ b/Products/CMFPlone/tests/test_defaultpage.py\n@@ -22,7 +22,7 @@ def test_get_default_page_step_1(self):\n         self.folder.setDefaultPage(\'d1\')\n         self.folder.invokeFactory(\'Document\', \'index_html\', title="Doc 2")\n \n-        from Products.CMFPlone.defaultpage import get_default_page\n+        from plone.base.defaultpage import get_default_page\n         self.assertEqual(\'index_html\', get_default_page(self.folder))\n \n     def test_get_default_page_step_2(self):\n@@ -55,7 +55,7 @@ def test_get_default_page_step_2(self):\n         )\n \n         # now test since we\'re sure everythings set up correctly\n-        from Products.CMFPlone.defaultpage import get_default_page\n+        from plone.base.defaultpage import get_default_page\n         self.assertEqual(\'d1\', get_default_page(self.folder))\n \n         # missing here:\n@@ -67,7 +67,7 @@ def test_get_default_page_step_3_1(self):\n         #    acquisition in place\n         # 3.1 look for a content in the container with the id, no acquisition!\n         self.folder.invokeFactory(\'Document\', \'d1\', title="Doc 1")\n-        from Products.CMFPlone.defaultpage import get_default_page\n+        from plone.base.defaultpage import get_default_page\n \n         # set doc d1 must work\n         self.folder.default_page = \'d1\'\n@@ -97,7 +97,7 @@ def test_get_default_page_step_3_2(self):\n         # 3.2 look for a content at portal, with acquisition\n         self.portal.invokeFactory(\'Document\', \'d1\', title="Doc 1")\n         self.folder.default_page = \'d1\'\n-        from Products.CMFPlone.defaultpage import get_default_page\n+        from plone.base.defaultpage import get_default_page\n \n         # now it must acquire from portal\n         self.assertEqual(\'d1\', get_default_page(self.folder))\n@@ -109,5 +109,5 @@ def test_get_default_page_step_4(self):\n         registry[\'plone.default_page\'] = [\'d1\']\n         self.folder.invokeFactory(\'Document\', \'d1\', title="Doc 1")\n \n-        from Products.CMFPlone.defaultpage import get_default_page\n+        from plone.base.defaultpage import get_default_page\n         self.assertEqual(\'d1\', get_default_page(self.folder))\ndiff --git a/Products/CMFPlone/tests/test_mails.py b/Products/CMFPlone/tests/test_mails.py\nindex 431a616899..751718a6c1 100644\n--- a/Products/CMFPlone/tests/test_mails.py\n+++ b/Products/CMFPlone/tests/test_mails.py\n@@ -4,7 +4,7 @@\n from plone.app.testing import PloneSandboxLayer\n from plone.registry.interfaces import IRegistry\n from plone.testing import layered\n-from Products.CMFPlone.interfaces.controlpanel import IMailSchema\n+from plone.base.interfaces.controlpanel import IMailSchema\n from zope.component import getUtility\n \n import doctest\ndiff --git a/Products/CMFPlone/tests/test_metabundles.py b/Products/CMFPlone/tests/test_metabundles.py\nindex 57874b4b3f..4a5c954fca 100644\n--- a/Products/CMFPlone/tests/test_metabundles.py\n+++ b/Products/CMFPlone/tests/test_metabundles.py\n@@ -1,5 +1,5 @@\n from plone.resource.interfaces import IResourceDirectory\n-from Products.CMFPlone.interfaces.resources import (\n+from plone.base.interfaces.resources import (\n     OVERRIDE_RESOURCE_DIRECTORY_NAME,\n )\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/tests/test_patternsettings.py b/Products/CMFPlone/tests/test_patternsettings.py\nindex 6872091250..9a70e75faa 100644\n--- a/Products/CMFPlone/tests/test_patternsettings.py\n+++ b/Products/CMFPlone/tests/test_patternsettings.py\n@@ -1,7 +1,7 @@\n from plone.app.testing import login\n from plone.app.testing import TEST_USER_NAME\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import ITinyMCESchema\n+from plone.base.interfaces import ITinyMCESchema\n from Products.CMFPlone.patterns.view import PatternsSettingsView\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\ndiff --git a/Products/CMFPlone/tests/test_redirect_after_login.py b/Products/CMFPlone/tests/test_redirect_after_login.py\nindex 4c0aec9a81..821e762be8 100644\n--- a/Products/CMFPlone/tests/test_redirect_after_login.py\n+++ b/Products/CMFPlone/tests/test_redirect_after_login.py\n@@ -2,8 +2,8 @@\n from plone.app.testing import TEST_USER_PASSWORD\n from plone.testing.zope import Browser\n from Products.CMFPlone.browser.login.login import LoginForm\n-from Products.CMFPlone.interfaces import IInitialLogin\n-from Products.CMFPlone.interfaces import IRedirectAfterLogin\n+from plone.base.interfaces import IInitialLogin\n+from plone.base.interfaces import IRedirectAfterLogin\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from zope.interface import implementer\ndiff --git a/Products/CMFPlone/tests/test_robots_txt.py b/Products/CMFPlone/tests/test_robots_txt.py\nindex 23a54ba1fb..e7f73966b5 100644\n--- a/Products/CMFPlone/tests/test_robots_txt.py\n+++ b/Products/CMFPlone/tests/test_robots_txt.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import ISiteSchema\n+from plone.base.interfaces import ISiteSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/tests/test_sitelogo.py b/Products/CMFPlone/tests/test_sitelogo.py\nindex 1f1f8340f9..0f07e67ac0 100644\n--- a/Products/CMFPlone/tests/test_sitelogo.py\n+++ b/Products/CMFPlone/tests/test_sitelogo.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import ISiteSchema\n+from plone.base.interfaces import ISiteSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/tests/test_utils.py b/Products/CMFPlone/tests/test_utils.py\nindex 64ef7ea302..5b5a731602 100644\n--- a/Products/CMFPlone/tests/test_utils.py\n+++ b/Products/CMFPlone/tests/test_utils.py\n@@ -6,7 +6,7 @@\n from Products.CMFCore.tests.base.content import SIMPLE_STRUCTUREDTEXT\n from Products.CMFCore.tests.base.content import SIMPLE_XHTML\n from Products.CMFCore.tests.base.content import STX_WITH_HTML\n-from Products.CMFPlone.interfaces import ISiteSchema\n+from plone.base.interfaces import ISiteSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from zope.component import getUtility\n from zope.interface import alsoProvides\ndiff --git a/Products/CMFPlone/traversal.py b/Products/CMFPlone/traversal.py\nindex ebeb4a9120..b8580b5864 100644\n--- a/Products/CMFPlone/traversal.py\n+++ b/Products/CMFPlone/traversal.py\n@@ -2,7 +2,7 @@\n from zope.component import queryUtility\n from plone.resource.interfaces import IResourceDirectory\n from plone.resource.interfaces import IUniqueResourceRequest\n-from Products.CMFPlone.interfaces.resources import (\n+from plone.base.interfaces.resources import (\n     OVERRIDE_RESOURCE_DIRECTORY_NAME)\n from Products.PageTemplates.Expressions import getEngine\n from Products.PageTemplates.Expressions import getTrustedEngine\ndiff --git a/Products/CMFPlone/utils.py b/Products/CMFPlone/utils.py\nindex 8ea1a2659d..a121ce887f 100644\n--- a/Products/CMFPlone/utils.py\n+++ b/Products/CMFPlone/utils.py\n@@ -26,8 +26,8 @@\n from Products.CMFCore.utils import getToolByName\n from Products.CMFCore.utils import ToolInit as CMFCoreToolInit\n from Products.CMFPlone import bbb\n-from Products.CMFPlone.interfaces.controlpanel import IImagingSchema\n-from Products.CMFPlone.interfaces.siteroot import IPloneSiteRoot\n+from plone.base.interfaces.controlpanel import IImagingSchema\n+from plone.base.interfaces.siteroot import IPloneSiteRoot\n from Products.CMFPlone.log import log\n from ZODB.POSException import ConflictError\n from zope.component import getMultiAdapter\n@@ -620,7 +620,7 @@ def getHighPixelDensityScales():\n \n \n def getSiteLogo(site=None):\n-    from Products.CMFPlone.interfaces import ISiteSchema\n+    from plone.base.interfaces import ISiteSchema\n     from plone.formwidget.namedfile.converter import b64decode_file\n     if site is None:\n         site = getSite()\ndiff --git a/Products/CMFPlone/workflow.py b/Products/CMFPlone/workflow.py\nindex ac939662d3..199fdfbc40 100644\n--- a/Products/CMFPlone/workflow.py\n+++ b/Products/CMFPlone/workflow.py\n@@ -2,7 +2,7 @@\n from zope.component import adapter\n from Acquisition import aq_base\n from Products.CMFCore.interfaces import IWorkflowTool\n-from Products.CMFPlone.interfaces import IWorkflowChain\n+from plone.base.interfaces import IWorkflowChain\n \n \n @adapter(Interface, IWorkflowTool)\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-01-09T13:31:15+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/07c75f955c5e2a1b999de00f0d5472bea2faea28

fix safe_unicode import to safe_text

Files changed:
M Products/CMFPlone/CatalogTool.py
M Products/CMFPlone/browser/login/login_help.py
M Products/CMFPlone/browser/login/password_reset.py
M Products/CMFPlone/browser/ploneview.py
M Products/CMFPlone/controlpanel/browser/types.py
M Products/CMFPlone/patterns/tinymce.py
M Products/CMFPlone/utils.py

b'diff --git a/Products/CMFPlone/CatalogTool.py b/Products/CMFPlone/CatalogTool.py\nindex a8db55d616..be18058b5f 100644\n--- a/Products/CMFPlone/CatalogTool.py\n+++ b/Products/CMFPlone/CatalogTool.py\n@@ -27,7 +27,7 @@\n from Products.CMFPlone.utils import base_hasattr\n from Products.CMFPlone.utils import human_readable_size\n from Products.CMFPlone.utils import safe_callable\n-from Products.CMFPlone.utils import safe_unicode\n+from plone.base.utils import safe_text\n from Products.ZCatalog.ZCatalog import ZCatalog\n from time import process_time\n from zExceptions import Unauthorized\n@@ -173,7 +173,7 @@ def sortable_title(obj):\n \n         if isinstance(title, str):\n             # Ignore case, normalize accents, strip spaces\n-            sortabletitle = mapUnicode(safe_unicode(title)).lower().strip()\n+            sortabletitle = mapUnicode(safe_text(title)).lower().strip()\n             # Replace numbers with zero filled numbers\n             sortabletitle = num_sort_regex.sub(zero_fill, sortabletitle)\n             # Truncate to prevent bloat, take bits from start and end\ndiff --git a/Products/CMFPlone/browser/login/login_help.py b/Products/CMFPlone/browser/login/login_help.py\nindex e79c0bcd7e..7409a585e8 100644\n--- a/Products/CMFPlone/browser/login/login_help.py\n+++ b/Products/CMFPlone/browser/login/login_help.py\n@@ -7,7 +7,7 @@\n from plone.base.interfaces import ILoginHelpFormSchema\n from plone.base.interfaces import ISecuritySchema\n from plone.base.interfaces.controlpanel import IMailSchema\n-from Products.CMFPlone.utils import safe_unicode\n+from plone.base.utils import safe_text\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.statusmessages.interfaces import IStatusMessage\n from smtplib import SMTPException\n@@ -180,7 +180,7 @@ def send_username(self, portal, userinfo):\n \n     def encode_mail_header(self, text):\n         """ Encodes text into correctly encoded email header """\n-        return Header(safe_unicode(text), \'utf-8\')\n+        return Header(safe_text(text), \'utf-8\')\n \n     def encoded_mail_sender(self):\n         """ returns encoded version of Portal name <portal_email> """\ndiff --git a/Products/CMFPlone/browser/login/password_reset.py b/Products/CMFPlone/browser/login/password_reset.py\nindex 258b1ce453..84738cb9b4 100644\n--- a/Products/CMFPlone/browser/login/password_reset.py\n+++ b/Products/CMFPlone/browser/login/password_reset.py\n@@ -10,7 +10,7 @@\n from Products.CMFPlone.PasswordResetTool import ExpiredRequestError\n from Products.CMFPlone.PasswordResetTool import InvalidRequestError\n from Products.CMFPlone.RegistrationTool import get_member_by_login_name\n-from Products.CMFPlone.utils import safe_unicode\n+from plone.base.utils import safe_text\n from Products.CMFPlone.utils import safeToInt\n from Products.Five import BrowserView\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n@@ -38,7 +38,7 @@ def portal_state(self):\n \n     def encode_mail_header(self, text):\n         """ Encodes text into correctly encoded email header """\n-        return Header(safe_unicode(text), \'utf-8\')\n+        return Header(safe_text(text), \'utf-8\')\n \n     def encoded_mail_sender(self):\n         """ returns encoded version of Portal name <portal_email> """\n@@ -54,7 +54,7 @@ def registered_notify_subject(self):\n             _(\n                 \'mailtemplate_user_account_info\',\n                 default=\'User Account Information for ${portal_name}\',\n-                mapping={\'portal_name\': safe_unicode(portal_name)},\n+                mapping={\'portal_name\': safe_text(portal_name)},\n             ),\n             context=self.request,\n         )\ndiff --git a/Products/CMFPlone/browser/ploneview.py b/Products/CMFPlone/browser/ploneview.py\nindex 7bae74eb74..3a414810db 100644\n--- a/Products/CMFPlone/browser/ploneview.py\n+++ b/Products/CMFPlone/browser/ploneview.py\n@@ -111,7 +111,7 @@ def cropText(self, text, length, ellipsis=\'...\'):\n             return text\n         converted = False\n         if not isinstance(text, str):\n-            text = utils.safe_unicode(text)\n+            text = utils.safe_text(text)\n             converted = True\n         if len(text) > length:\n             text = text[:length]\ndiff --git a/Products/CMFPlone/controlpanel/browser/types.py b/Products/CMFPlone/controlpanel/browser/types.py\nindex 9ed19ffbe6..f01ee3adfe 100644\n--- a/Products/CMFPlone/controlpanel/browser/types.py\n+++ b/Products/CMFPlone/controlpanel/browser/types.py\n@@ -4,7 +4,7 @@\n from Products.CMFPlone.controlpanel.events import ConfigurationChangedEvent\n from plone.base.interfaces import ISearchSchema\n from plone.base.interfaces import ITypesSchema\n-from Products.CMFPlone.utils import safe_unicode\n+from plone.base.utils import safe_text\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.statusmessages.interfaces import IStatusMessage\n from operator import itemgetter\n@@ -156,7 +156,7 @@ def __call__(self):\n                     else:\n                         # check if we should add\n                         if type_id not in versionable_types:\n-                            versionable_types.append(safe_unicode(type_id))\n+                            versionable_types.append(safe_text(type_id))\n                         self.add_versioning_behavior(fti)\n \n                     for policy in portal_repository.listPolicies():\n@@ -193,9 +193,9 @@ def __call__(self):\n                 types_settings = registry.forInterface(\n                     ITypesSchema, prefix="plone")\n                 default_page_types = [\n-                    safe_unicode(i) for i in types_settings.default_page_types]\n+                    safe_text(i) for i in types_settings.default_page_types]\n                 if default_page_type and type_id not in default_page_types:\n-                    default_page_types.append(safe_unicode(type_id))\n+                    default_page_types.append(safe_text(type_id))\n                 elif not default_page_type and type_id in default_page_types:\n                     default_page_types.remove(type_id)\n                 types_settings.default_page_types = default_page_types\n@@ -365,7 +365,7 @@ def current_workflow(self):\n                 wf_id = chain[0]\n                 wf = getattr(portal_workflow, wf_id)\n                 title = translate(\n-                    safe_unicode(wf.title),\n+                    safe_text(wf.title),\n                     domain=\'plone\',\n                     context=self.request\n                 )\n@@ -373,7 +373,7 @@ def current_workflow(self):\n                     id=wf.id,\n                     title=title,\n                     description=format_description(\n-                        safe_unicode(wf.description),\n+                        safe_text(wf.description),\n                         self.request\n                     )\n                 )\n@@ -384,7 +384,7 @@ def current_workflow(self):\n             return empty_workflow_dict\n \n         default_title = translate(\n-            safe_unicode(default_workflow.title),\n+            safe_text(default_workflow.title),\n             domain=\'plone\',\n             context=self.request\n         )\n@@ -420,7 +420,7 @@ def available_workflows(self):\n             # Only offer a default workflow option on a real type\n             default_workflow = self.default_workflow(False)\n             default_title = translate(\n-                safe_unicode(default_workflow.title),\n+                safe_text(default_workflow.title),\n                 domain=\'plone\',\n                 context=self.request\n             )\ndiff --git a/Products/CMFPlone/patterns/tinymce.py b/Products/CMFPlone/patterns/tinymce.py\nindex 71ba3ea05a..edb2fa4cb3 100644\n--- a/Products/CMFPlone/patterns/tinymce.py\n+++ b/Products/CMFPlone/patterns/tinymce.py\n@@ -6,7 +6,7 @@\n from plone.base.interfaces import IFilterSchema\n from plone.base.interfaces import ITinyMCESchema\n from Products.CMFPlone.utils import get_portal\n-from Products.CMFPlone.utils import safe_unicode\n+from plone.base.utils import safe_text\n from zope.component import getUtility\n \n import json\n@@ -191,7 +191,7 @@ def get_tiny_config(self):\n             valid_tags = self.filter_settings.valid_tags\n             nasty_tags = self.filter_settings.nasty_tags\n             custom_attributes = self.filter_settings.custom_attributes\n-            safe_attributes = [safe_unicode(attr) for attr in html.defs.safe_attrs]\n+            safe_attributes = [safe_text(attr) for attr in html.defs.safe_attrs]\n             valid_attributes = safe_attributes + custom_attributes\n             # valid_elements : \'a[href|target=_blank],strong/b,div[align],br\'\n             tiny_valid_elements = []\ndiff --git a/Products/CMFPlone/utils.py b/Products/CMFPlone/utils.py\nindex a121ce887f..4a33224bb4 100644\n--- a/Products/CMFPlone/utils.py\n+++ b/Products/CMFPlone/utils.py\n@@ -391,7 +391,7 @@ def transaction_note(note):\n     if (len(T.description) + len(note)) >= 65533:\n         log(\'Transaction note too large omitting %s\' % str(note))\n     else:\n-        T.note(base_utils.safe_unicode(note))\n+        T.note(base_utils.safe_text(note))\n \n \n def base_hasattr(obj, name):\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-01-09T13:33:37+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/37c1b7e7af3912b86adf8fa94658a23008691740

fix safeToInt import and isort

Files changed:
M Products/CMFPlone/browser/login/password_reset.py

b'diff --git a/Products/CMFPlone/browser/login/password_reset.py b/Products/CMFPlone/browser/login/password_reset.py\nindex 84738cb9b4..b4b121cec0 100644\n--- a/Products/CMFPlone/browser/login/password_reset.py\n+++ b/Products/CMFPlone/browser/login/password_reset.py\n@@ -1,22 +1,23 @@\n from AccessControl.SecurityManagement import getSecurityManager\n from email.header import Header\n from plone.app.layout.navigation.interfaces import INavigationRoot\n+from plone.base.interfaces import IPasswordResetToolView\n+from plone.base.interfaces.controlpanel import IMailSchema\n+from plone.base.utils import safe_text\n+from plone.base.utils import safeToInt\n from plone.memoize import view\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n-from plone.base.interfaces import IPasswordResetToolView\n-from plone.base.interfaces.controlpanel import IMailSchema\n from Products.CMFPlone.PasswordResetTool import ExpiredRequestError\n from Products.CMFPlone.PasswordResetTool import InvalidRequestError\n from Products.CMFPlone.RegistrationTool import get_member_by_login_name\n-from plone.base.utils import safe_text\n-from Products.CMFPlone.utils import safeToInt\n from Products.Five import BrowserView\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.PlonePAS.events import UserInitialLoginInEvent\n from Products.PlonePAS.events import UserLoggedInEvent\n-from Products.PluggableAuthService.interfaces.plugins import ICredentialsUpdatePlugin  # noqa\n+from Products.PluggableAuthService.interfaces.plugins import \\\n+    ICredentialsUpdatePlugin\n from Products.statusmessages.interfaces import IStatusMessage\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-01-09T14:05:48+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/79d0d35268c3e657d3af6c4ee2b492b555492700

fix get_top_request

Files changed:
M Products/CMFPlone/resources/browser/resource.py
M setup.cfg

b'diff --git a/Products/CMFPlone/resources/browser/resource.py b/Products/CMFPlone/resources/browser/resource.py\nindex 33ed6042fa..708c8cd0a7 100644\n--- a/Products/CMFPlone/resources/browser/resource.py\n+++ b/Products/CMFPlone/resources/browser/resource.py\n@@ -4,20 +4,20 @@\n from App.config import getConfiguration\n from plone.app.layout.viewlets.common import ViewletBase\n from plone.app.theming.utils import theming_policy\n+from plone.base.interfaces import IBundleRegistry\n+from plone.base.interfaces import IResourceRegistry\n+from plone.base.utils import get_top_request\n from plone.memoize.view import memoize\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.Expression import createExprContext\n from Products.CMFCore.Expression import Expression\n from Products.CMFCore.utils import _getAuthenticatedUser\n from Products.CMFCore.utils import getToolByName\n-from plone.base.interfaces import IBundleRegistry\n-from plone.base.interfaces import IResourceRegistry\n from Products.CMFPlone.resources import RESOURCE_DEVELOPMENT_MODE\n-from Products.CMFPlone.resources.browser.combine import (\n+from Products.CMFPlone.resources.browser.combine import (  # noqa\n     get_production_resource_directory,\n-)  # noqa\n+)\n from Products.CMFPlone.resources.bundle import Bundle\n-from Products.CMFPlone.utils import get_top_request\n from zope import component\n from zope.component import getMultiAdapter\n from zope.component import getUtility\ndiff --git a/setup.cfg b/setup.cfg\nindex fedd44695f..ee4b75d34b 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -5,9 +5,6 @@ extra-message = [ci skip]\n universal = 0\n \n [isort]\n-force_alphabetical_sort=True\n-force_single_line=True\n-lines_after_imports=2\n-line_length=80\n-not_skip=__init__.py\n-\n+profile = black\n+force_alphabetical_sort = True\n+force_single_line = True\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-01-09T14:17:07+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/99156b70902aa0ced0adb4275762ef557767aeb7

deprecate log_deprecated

Files changed:
M Products/CMFPlone/log.py

b'diff --git a/Products/CMFPlone/log.py b/Products/CMFPlone/log.py\nindex ba2e6359dd..7cf1dfa8ca 100644\n--- a/Products/CMFPlone/log.py\n+++ b/Products/CMFPlone/log.py\n@@ -2,6 +2,7 @@\n This module resolves an import order dependency.\n Don\'t import from here, import from utils.\n """\n+from zope.deprecation import deprecate\n \n import logging\n \n@@ -19,6 +20,9 @@ def log_exc(message=\'\', summary=\'\', severity=logging.ERROR):\n \n \n # deprecration warning\n+@deprecate("Use a recommended deprecation method, see Plone Deprecation Guide: "\n+           "https://docs.plone.org/develop/styleguide/deprecation.html "\n+           "(will be removed in Plone 7.0)")\n def log_deprecated(message, summary=\'Deprecation Warning\',\n                    severity=logging.WARNING):\n     logger.log(severity, \'%s \\n%s\', summary, message)\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-01-09T14:17:18+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/411ba9bcf8b5da5b651066740c72a4d6ab23ebc4

fix safe_text import

Files changed:
M Products/CMFPlone/controlpanel/browser/redirects.py

b'diff --git a/Products/CMFPlone/controlpanel/browser/redirects.py b/Products/CMFPlone/controlpanel/browser/redirects.py\nindex e4aa52ff7e..c84c710305 100644\n--- a/Products/CMFPlone/controlpanel/browser/redirects.py\n+++ b/Products/CMFPlone/controlpanel/browser/redirects.py\n@@ -6,7 +6,7 @@\n from plone.memoize.view import memoize\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.PloneBatch import Batch\n-from Products.CMFPlone.utils import safe_text\n+from plone.base.utils import safe_text\n from Products.Five.browser import BrowserView\n from Products.statusmessages.interfaces import IStatusMessage\n from io import StringIO\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-01-09T14:22:27+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/e86f71a39a6ad011095075c185db0daea3bb100b

fix get_top_request import

Files changed:
M Products/CMFPlone/resources/browser/scripts.py
M Products/CMFPlone/resources/browser/styles.py

b'diff --git a/Products/CMFPlone/resources/browser/scripts.py b/Products/CMFPlone/resources/browser/scripts.py\nindex b2b52a0a07..9e0e62289a 100644\n--- a/Products/CMFPlone/resources/browser/scripts.py\n+++ b/Products/CMFPlone/resources/browser/scripts.py\n@@ -1,6 +1,6 @@\n from Products.CMFPlone.resources.browser.cook import cookWhenChangingSettings\n from Products.CMFPlone.resources.browser.resource import ResourceView\n-from Products.CMFPlone.utils import get_top_request\n+from plone.base.utils import get_top_request\n from urllib import parse\n from zope.component import getMultiAdapter\n \ndiff --git a/Products/CMFPlone/resources/browser/styles.py b/Products/CMFPlone/resources/browser/styles.py\nindex f1ee9c242e..19f84ef17c 100644\n--- a/Products/CMFPlone/resources/browser/styles.py\n+++ b/Products/CMFPlone/resources/browser/styles.py\n@@ -3,7 +3,7 @@\n from plone.registry.interfaces import IRegistry\n from Products.CMFPlone.resources.browser.cook import cookWhenChangingSettings\n from Products.CMFPlone.resources.browser.resource import ResourceBase\n-from Products.CMFPlone.utils import get_top_request\n+from plone.base.utils import get_top_request\n from urllib import parse\n from zope.component import getUtility\n \n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-01-09T14:33:54+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/192d5a6da6d4a18aa4a848c8516d5edd986bb3c4

bring back log*

Files changed:
M Products/CMFPlone/utils.py

b'diff --git a/Products/CMFPlone/utils.py b/Products/CMFPlone/utils.py\nindex 4a33224bb4..87a3df71b3 100644\n--- a/Products/CMFPlone/utils.py\n+++ b/Products/CMFPlone/utils.py\n@@ -28,7 +28,9 @@\n from Products.CMFPlone import bbb\n from plone.base.interfaces.controlpanel import IImagingSchema\n from plone.base.interfaces.siteroot import IPloneSiteRoot\n-from Products.CMFPlone.log import log\n+from Products.CMFPlone.log import log  # noqa - for python scripts\n+from Products.CMFPlone.log import log_exc  # noqa - for python scripts\n+from Products.CMFPlone.log import log_deprecated  # noqa - for python scripts\n from ZODB.POSException import ConflictError\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-01-09T15:30:54+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/ecdc32ae3959a9f6d52552adbcbb11e4e7c4dad3

move tests from cmfplone to plone.base

Files changed:
M Products/CMFPlone/tests/testBatch.py
M Products/CMFPlone/tests/testBrowserDefault.py
M Products/CMFPlone/tests/test_defaultpage.py
M Products/CMFPlone/tests/test_doctests.py
M Products/CMFPlone/tests/test_utils.py
D Products/CMFPlone/tests/messages.txt
D Products/CMFPlone/tests/test_l18nl10n.py

b'diff --git a/Products/CMFPlone/tests/messages.txt b/Products/CMFPlone/tests/messages.txt\ndeleted file mode 100644\nindex 0b8320c7fb..0000000000\n--- a/Products/CMFPlone/tests/messages.txt\n+++ /dev/null\n@@ -1,142 +0,0 @@\n-Test for Messages\n-=================\n-\n-  >>> from Products.CMFPlone import PloneMessageFactory as _\n-\n-Messages without translation service set up\n--------------------------------------------\n-\n-Very simple message:\n-\n-  >>> _(u\'hello\')\n-  u\'hello\'\n-\n-The domain is predefinied through the factory:\n-\n-  >>> _(u\'hello\').domain\n-  \'plone\'\n-\n-You can also define a default text:\n-\n-  >>> msg = _(u\'id\', default=u\'This is the text.\')\n-  >>> msg\n-  u\'id\'\n-\n-  >>> msg.default\n-  u\'This is the text.\'\n-\n-And at last there is the possibility of variable substition:\n-\n-  >>> project = u\'Plone\'\n-  >>> msg = _(u\'id\', default=u\'Hello ${name}\', mapping={u\'name\' : project})\n-\n-  >>> msg\n-  u\'id\'\n-\n-  >>> msg.default\n-  u\'Hello ${name}\'\n-\n-  >>> msg.mapping\n-  {u\'name\': u\'Plone\'}\n-\n-Messages with translation service set up\n-----------------------------------------\n-\n-Now we fake a translation domain. Usually you will have translations stored in\n-a po file and automatically translated by PTS or the Z3 translation service.\n-\n-  >>> from zope.i18n.simpletranslationdomain import SimpleTranslationDomain\n-  >>> from zope.i18n.interfaces import ITranslationDomain\n-\n-  >>> messages = {\n-  ...     (\'de\', u\'This is a message.\'): u\'Dieses ist eine Nachricht.\',\n-  ...     (\'de\', u\'mail-notification\'): u\'Sie haben ${number} neue E-Mails.\'}\n-  >>> mails = SimpleTranslationDomain(\'plone\', messages)\n-\n-  >>> from zope.component import provideUtility\n-  >>> provideUtility(mails, ITranslationDomain, name=\'plone\')\n-\n-Define the simple message:\n-\n-  >>> msg = _(u\'This is a message.\')\n-  >>> msg\n-  u\'This is a message.\'\n-\n-We are still using the plone domain:\n-\n-  >>> msg.domain\n-  \'plone\'\n-\n-Verify that the translation succeeds:\n-\n-  >>> from zope.i18n import translate\n-  >>> translate(msg, target_language=\'de\')\n-  u\'Dieses ist eine Nachricht.\'\n-\n-Now try a message with variable substitution:\n-\n-  >>> num = 42\n-  >>> note = _(u\'mail-notification\', default=u\'You have ${number} new mails.\',\n-  ...          mapping={u\'number\': num})\n-\n-  >>> note\n-  u\'mail-notification\'\n-\n-  >>> note.default\n-  u\'You have ${number} new mails.\'\n-\n-Try simple interpolation:\n-\n-  >>> translate(note, target_language=\'en\')\n-  u\'You have 42 new mails.\'\n-\n-And now try the real translation:\n-\n-  >>> translate(note, target_language=\'de\')\n-  u\'Sie haben 42 neue E-Mails.\'\n-\n-Messages inside page templates / tal\n-------------------------------------\n-\n-We need a simple tal engine for the tests. The DummyEngine automatically\n-upper-cases all text.\n-\n-  >>> from zope.tal.dummyengine import DummyEngine\n-  >>> engine = DummyEngine()\n-\n-We use the Messages defined earlier.\n-\n-  >>> msg\n-  u\'This is a message.\'\n-\n-  >>> note\n-  u\'mail-notification\'\n-\n-Inform the engine of our variables.\n-\n-  >>> engine.setLocal(\'msg\', msg)\n-  >>> engine.setLocal(\'note\', note)\n-\n-We also need a HTMLParser and TALInterpreter and add a simple convience function\n-to get the parsed and interpreted text.\n-\n-  >>> from zope.tal.htmltalparser import HTMLTALParser\n-  >>> from zope.tal.talinterpreter import TALInterpreter\n-  >>> from io import StringIO\n-\n-  >>> def compile(source):\n-  ...     parser = HTMLTALParser()\n-  ...     parser.parseString(source)\n-  ...     program, macros = parser.getCode()\n-  ...     result = StringIO()\n-  ...     interpreter = TALInterpreter(program, {}, engine, stream=result)\n-  ...     interpreter()\n-  ...     return result.getvalue()\n-\n-  >>> text = compile(\'<span i18n:translate="" tal:content="msg"/>\')\n-  >>> u\'<span>THIS IS A MESSAGE.</span>\' in text\n-  True\n-\n-  >>> text = compile(\'<span i18n:translate="" tal:content="note"/>\')\n-  >>> u\'<span>MAIL-NOTIFICATION</span>\' in text\n-  True\ndiff --git a/Products/CMFPlone/tests/testBatch.py b/Products/CMFPlone/tests/testBatch.py\nindex 5964e2ecfd..f892192e5d 100644\n--- a/Products/CMFPlone/tests/testBatch.py\n+++ b/Products/CMFPlone/tests/testBatch.py\n@@ -1,53 +1,13 @@\n-from Products.CMFPlone.PloneBatch import Batch\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n-from ZTUtils.Lazy import LazyMap\n \n import unittest\n \n-\n-class TestBatch(unittest.TestCase):\n-\n-    def test_batch_no_lazy(self):\n-        batch = Batch(range(100), size=10, start=10)\n-        self.assertEqual([b for b in batch],\n-                         [10, 11, 12, 13, 14, 15, 16, 17, 18, 19])\n-\n-    def test_batch_lazy_map(self):\n-        def get(key):\n-            return key\n-        sequence = LazyMap(get, range(80, 90), actual_result_count=95)\n-        batch = Batch(sequence, size=10, start=80)\n-        self.assertEqual(\n-            [b for b in batch],\n-            [80, 81, 82, 83, 84, 85, 86, 87, 88, 89])\n-\n-        self.assertEqual(batch.numpages, 10)\n-        self.assertEqual(batch.pagenumber, 9)\n-        self.assertEqual(batch.navlist, range(6, 11))\n-        self.assertEqual(batch.leapback, [])\n-        self.assertEqual(batch.prevlist, range(6, 9))\n-        self.assertEqual(batch.previous.length, 10)\n-        self.assertEqual(batch.next.length, 5)\n-        self.assertEqual(batch.pageurl({}), \'b_start:int=80\')\n-        self.assertListEqual(\n-            list(batch.prevurls({})),\n-            [\n-                (6, \'b_start:int=50\'),\n-                (7, \'b_start:int=60\'),\n-                (8, \'b_start:int=70\'),\n-            ]\n-        )\n-        self.assertListEqual(\n-            list(batch.nexturls({})),\n-            [(10, \'b_start:int=90\')],\n-        )\n-\n-\n class TestBatchIntegration(unittest.TestCase):\n \n     layer = PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n \n     def test_batch_brains(self):\n+        from plone.base.batch import Batch\n         portal = self.layer[\'portal\']\n         obj_ids = [\'%stest\' % chr(c) for c in range(97, 123)]\n         for obj_id in obj_ids:\ndiff --git a/Products/CMFPlone/tests/testBrowserDefault.py b/Products/CMFPlone/tests/testBrowserDefault.py\nindex 45557b5150..02e2cc2071 100644\n--- a/Products/CMFPlone/tests/testBrowserDefault.py\n+++ b/Products/CMFPlone/tests/testBrowserDefault.py\n@@ -9,7 +9,7 @@\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from Products.CMFPlone.utils import _createObjectByType\n-from Products.CMFPlone.utils import safe_nativestring\n+from plone.base.utils import safe_nativestring\n from Products.CMFPlone.PloneFolder import ReplaceableWrapper\n from zope.component import getUtility\n \ndiff --git a/Products/CMFPlone/tests/test_defaultpage.py b/Products/CMFPlone/tests/test_defaultpage.py\nindex 3831f94f26..9b4e86fe11 100644\n--- a/Products/CMFPlone/tests/test_defaultpage.py\n+++ b/Products/CMFPlone/tests/test_defaultpage.py\n@@ -3,6 +3,7 @@\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n+\n import unittest\n \n \ndiff --git a/Products/CMFPlone/tests/test_doctests.py b/Products/CMFPlone/tests/test_doctests.py\nindex 14c5b17659..53c5e46b56 100644\n--- a/Products/CMFPlone/tests/test_doctests.py\n+++ b/Products/CMFPlone/tests/test_doctests.py\n@@ -15,7 +15,7 @@ def check_output(self, want, got, optionflags):\n def test_suite():\n     suites = (\n         doctest.DocFileSuite(\n-            \'messages.txt\',\n+            \'messages.rst\',\n             package=\'Products.CMFPlone.tests\',\n             checker=Py23DocChecker(),\n             ),\ndiff --git a/Products/CMFPlone/tests/test_l18nl10n.py b/Products/CMFPlone/tests/test_l18nl10n.py\ndeleted file mode 100644\nindex 3a56a06736..0000000000\n--- a/Products/CMFPlone/tests/test_l18nl10n.py\n+++ /dev/null\n@@ -1,24 +0,0 @@\n-""" Unit tests for Products.CMFPlone.i18nl10n module. """\n-\n-import unittest\n-\n-class BasicI18nl10nTests(unittest.TestCase):\n-\n-    def test_regexp_dt_format_string_regexp(self):\n-        from Products.CMFPlone.i18nl10n import _dt_format_string_regexp\n-        dt_string = "%Y-%m-%d %H:%M"\n-        locales_string = "${H}:${M}"\n-\n-        # test for strftime format string\n-        self.assertTrue(bool(_dt_format_string_regexp.findall(dt_string)))\n-        self.assertFalse(bool(_dt_format_string_regexp.findall(locales_string)))\n-\n-    def test_regexp_interp_regex(self):\n-        from Products.CMFPlone.i18nl10n import _interp_regex\n-        locales_string = "${H}:${M}"\n-\n-        # test for locale string elements:\n-        self.assertEquals(\n-            _interp_regex.findall(locales_string),\n-            ["${H}", "${M}"],\n-        )\ndiff --git a/Products/CMFPlone/tests/test_utils.py b/Products/CMFPlone/tests/test_utils.py\nindex 5b5a731602..17e66a96fc 100644\n--- a/Products/CMFPlone/tests/test_utils.py\n+++ b/Products/CMFPlone/tests/test_utils.py\n@@ -9,8 +9,6 @@\n from plone.base.interfaces import ISiteSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from zope.component import getUtility\n-from zope.interface import alsoProvides\n-from plone.subrequest.interfaces import ISubRequest\n \n import unittest\n \n@@ -36,159 +34,6 @@ def test_bodyfinder(self):\n         self.assertEqual(bodyfinder(STX_WITH_HTML),\n                          \'<p>Hello world, I am Bruce.</p>\')\n \n-    def test_safe_encode(self):\n-        """safe_encode should always encode unicode to the specified encoding.\n-        """\n-        from Products.CMFPlone.utils import safe_encode\n-        self.assertEqual(safe_encode(\'sp\xc3\xa4m\'), b\'sp\\xc3\\xa4m\')\n-        self.assertEqual(safe_encode(\'sp\xc3\xa4m\', \'utf-8\'), b\'sp\\xc3\\xa4m\')\n-        self.assertEqual(safe_encode(\'sp\xc3\xa4m\', encoding=\'latin-1\'), b\'sp\\xe4m\')\n-\n-    def test_get_top_request(self):\n-        """If in a subrequest, ``get_top_request`` should always return the top\n-        most request.\n-        """\n-        from Products.CMFPlone.utils import get_top_request\n-\n-        class MockRequest:\n-\n-            def __init__(self, parent_request=None):\n-                self._dict = {}\n-                if parent_request:\n-                    self._dict[\'PARENT_REQUEST\'] = parent_request\n-                    alsoProvides(self, ISubRequest)\n-\n-            def get(self, key, default=None):\n-                return self._dict.get(key, default)\n-\n-        req0 = MockRequest()\n-        req1 = MockRequest(req0)\n-        req2 = MockRequest(req1)\n-\n-        self.assertEqual(get_top_request(req0), req0)\n-        self.assertEqual(get_top_request(req1), req0)\n-        self.assertEqual(get_top_request(req2), req0)\n-\n-    def test_get_top_site_from_url(self):\n-        """Unit test for ``get_top_site_from_url`` with context and request\n-        mocks.\n-\n-        Test content structure:\n-        /approot/PloneSite/folder/SubSite/folder\n-        PloneSite and SubSite implement ISite\n-        """\n-        from plone.app.content.browser.contents import get_top_site_from_url\n-        from urllib.parse import urlparse\n-        from zope.component.interfaces import ISite\n-\n-        class MockContext:\n-            vh_url = \'http://nohost\'\n-            vh_root = \'\'\n-\n-            def __init__(self, physical_path):\n-                self.physical_path = physical_path\n-                if self.physical_path.split(\'/\')[-1] in (\'PloneSite\', \'SubSite\'):  # noqa\n-                    alsoProvides(self, ISite)\n-\n-            @property\n-            def id(self):\n-                return self.physical_path.split(\'/\')[-1]\n-\n-            def absolute_url(self):\n-                return self.vh_url + self.physical_path[len(self.vh_root):] or \'/\'  # noqa\n-\n-            def restrictedTraverse(self, path):\n-                return MockContext(self.vh_root + path)\n-\n-        class MockRequest:\n-            vh_url = \'http://nohost\'\n-            vh_root = \'\'\n-\n-            def physicalPathFromURL(self, url):\n-                # Return the physical path from a URL.\n-                # The outer right \'/\' is not part of the path.\n-                path = self.vh_root + urlparse(url).path.rstrip(\'/\')\n-                return path.split(\'/\')\n-\n-        # NO VIRTUAL HOSTING\n-\n-        req = MockRequest()\n-\n-        # Case 1:\n-        ctx = MockContext(\'/approot/PloneSite\')\n-        self.assertEqual(get_top_site_from_url(ctx, req).id, \'PloneSite\')\n-\n-        # Case 2\n-        ctx = MockContext(\'/approot/PloneSite/folder\')\n-        self.assertEqual(get_top_site_from_url(ctx, req).id, \'PloneSite\')\n-\n-        # Case 3:\n-        ctx = MockContext(\'/approot/PloneSite/folder/SubSite/folder\')\n-        self.assertEqual(get_top_site_from_url(ctx, req).id, \'PloneSite\')\n-\n-        # Case 4, using unicode paths accidentially:\n-        ctx = MockContext(\'/approot/PloneSite/folder/SubSite/folder\')\n-        self.assertEqual(get_top_site_from_url(ctx, req).id, \'PloneSite\')\n-\n-        # VIRTUAL HOSTING ON SUBSITE\n-\n-        req = MockRequest()\n-        req.vh_root = \'/approot/PloneSite/folder/SubSite\'\n-\n-        # Case 4:\n-        ctx = MockContext(\'/approot/PloneSite/folder/SubSite\')\n-        ctx.vh_root = \'/approot/PloneSite/folder/SubSite\'\n-        self.assertEqual(get_top_site_from_url(ctx, req).id, \'SubSite\')\n-\n-        # Case 5:\n-        ctx = MockContext(\'/approot/PloneSite/folder/SubSite/folder\')\n-        ctx.vh_root = \'/approot/PloneSite/folder/SubSite\'\n-        self.assertEqual(get_top_site_from_url(ctx, req).id, \'SubSite\')\n-\n-    def test_human_readable_size_int(self):\n-        from Products.CMFPlone.utils import human_readable_size\n-\n-        self.assertEqual(human_readable_size(0), \'0 KB\')\n-        self.assertEqual(human_readable_size(1), \'1 KB\')\n-        size = 1000\n-        self.assertEqual(human_readable_size(size), \'1 KB\')\n-        size += 24\n-        self.assertEqual(human_readable_size(size), \'1.0 KB\')\n-        size += 512\n-        self.assertEqual(human_readable_size(size), \'1.5 KB\')\n-        size *= 1024\n-        self.assertEqual(human_readable_size(size), \'1.5 MB\')\n-        size *= 1024\n-        self.assertEqual(human_readable_size(size), \'1.5 GB\')\n-        size *= 1024\n-        self.assertEqual(human_readable_size(size), \'1536.0 GB\')\n-\n-    def test_human_readable_size_float(self):\n-        from Products.CMFPlone.utils import human_readable_size\n-\n-        self.assertEqual(human_readable_size(0.), \'0 KB\')\n-        self.assertEqual(human_readable_size(1.), \'1 KB\')\n-        size = 1000.\n-        self.assertEqual(human_readable_size(size), \'1 KB\')\n-        size += 24.\n-        self.assertEqual(human_readable_size(size), \'1.0 KB\')\n-        size += 512.\n-        self.assertEqual(human_readable_size(size), \'1.5 KB\')\n-        size *= 1024.\n-        self.assertEqual(human_readable_size(size), \'1.5 MB\')\n-        size *= 1024.\n-        self.assertEqual(human_readable_size(size), \'1.5 GB\')\n-        size *= 1024.\n-        self.assertEqual(human_readable_size(size), \'1536.0 GB\')\n-\n-    def test_human_readable_size_special(self):\n-        from Products.CMFPlone.utils import human_readable_size\n-\n-        self.assertEqual(human_readable_size(None), \'0 KB\')\n-        self.assertEqual(human_readable_size(\'\'), \'0 KB\')\n-        self.assertEqual(human_readable_size(\'barney\'), \'barney\')\n-\n-\n class LogoTests(unittest.TestCase):\n \n     layer = PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-01-09T16:38:55+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/714221b1acd17d0796666ab024f661b7ac5f83d0

doctest moved to plone.base

Files changed:
M Products/CMFPlone/tests/test_doctests.py

b'diff --git a/Products/CMFPlone/tests/test_doctests.py b/Products/CMFPlone/tests/test_doctests.py\nindex 53c5e46b56..3c2a3596b8 100644\n--- a/Products/CMFPlone/tests/test_doctests.py\n+++ b/Products/CMFPlone/tests/test_doctests.py\n@@ -1,24 +1,9 @@\n from unittest import TestSuite\n \n import doctest\n-import re\n-\n-\n-class Py23DocChecker(doctest.OutputChecker):\n-\n-    def check_output(self, want, got, optionflags):\n-        # TODO: Fix tests to check Python 3 style\n-        want = re.sub("u\'(.*?)\'", "\'\\\\1\'", want)\n-        return doctest.OutputChecker.check_output(self, want, got, optionflags)\n-\n \n def test_suite():\n     suites = (\n-        doctest.DocFileSuite(\n-            \'messages.rst\',\n-            package=\'Products.CMFPlone.tests\',\n-            checker=Py23DocChecker(),\n-            ),\n         doctest.DocTestSuite(\'Products.CMFPlone.TranslationServiceTool\'),\n         doctest.DocTestSuite(\'Products.CMFPlone.utils\'),\n         doctest.DocTestSuite(\'Products.CMFPlone.workflow\'),\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-01-09T16:39:06+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/bc60af2b5fd9807c6b59870439321aec3e90221f

safe_nativestring -&gt; safe_text

Files changed:
M Products/CMFPlone/tests/testBrowserDefault.py

b'diff --git a/Products/CMFPlone/tests/testBrowserDefault.py b/Products/CMFPlone/tests/testBrowserDefault.py\nindex 02e2cc2071..19810f91b5 100644\n--- a/Products/CMFPlone/tests/testBrowserDefault.py\n+++ b/Products/CMFPlone/tests/testBrowserDefault.py\n@@ -9,7 +9,7 @@\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from Products.CMFPlone.utils import _createObjectByType\n-from plone.base.utils import safe_nativestring\n+from plone.base.utils import safe_text\n from Products.CMFPlone.PloneFolder import ReplaceableWrapper\n from zope.component import getUtility\n \n@@ -80,8 +80,8 @@ def compareLayoutVsView(self, obj, path="", viewaction=None):\n         transaction.commit()\n \n         self.browser.open(obj.absolute_url() + path)\n-        body = safe_nativestring(self.browser.contents)\n-        resolved = safe_nativestring(resolved)\n+        body = safe_text(self.browser.contents)\n+        resolved = safe_text(resolved)\n \n         # request/ACTUAL_URL is fubar in tests, remove lines that depend on it\n         resolved = RE_REMOVE_DOCCONT.sub(\'\', resolved)\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-01-09T20:21:57+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/7f15d290e39295cf403ef76fde25bdc09dcf557e

doc chnages, at least some

Files changed:
A news/3395.feature
D Products/CMFPlone/_compat.py

b"diff --git a/Products/CMFPlone/_compat.py b/Products/CMFPlone/_compat.py\ndeleted file mode 100644\nindex 283564f68a..0000000000\n--- a/Products/CMFPlone/_compat.py\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-from json import dumps\n-\n-\n-def dump_json_to_text(obj):\n-    ''' Encode an obj into a text\n-    '''\n-    text = dumps(obj, indent=4)\n-    if not isinstance(text, str):\n-        text = text.decode('utf8')\n-    return text\ndiff --git a/news/3395.feature b/news/3395.feature\nnew file mode 100644\nindex 0000000000..e69de29bb2\n"

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-01-09T20:41:06+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/d926543a3bb250648394eceb29a51d46d40f4ea3

Better chnagelog.

Files changed:
M news/3395.feature

b'diff --git a/news/3395.feature b/news/3395.feature\nindex e69de29bb2..556da519af 100644\n--- a/news/3395.feature\n+++ b/news/3395.feature\n@@ -0,0 +1,5 @@\n+Implement `PLIP 3395 <https://github.com/plone/Products.CMFPlone/issue/3395>`_.\n+Moves all interfaces, whole defaultpage, i18nl10, batch, permissions and parts of utils to ``plone.base``.\n+For all imports are in place with deprecation warnings.\n+Along with this a bunch of long deprecated functions, imports and similar in above packages were removed.\n+[jensens]\n\\ No newline at end of file\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-25T17:16:19+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/8c379b7b5d78da1d6a47c6f5ecab296ee7e16294

merged master

Files changed:
A Products/CMFPlone/browser/favicon.py
A Products/CMFPlone/browser/static/favicon.ico
A Products/CMFPlone/browser/templates/test_rendering_cheatsheet.pt
A Products/CMFPlone/browser/templates/test_rendering_icons.pt
A Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_relations.py
A Products/CMFPlone/resources/utils.py
A Products/CMFPlone/resources/webresource.py
A news/282.bugfix
A news/3031.bugfix
A news/3247-2.breaking
A news/3247.breaking
A news/3247.bugfix
A news/3279.feature
A news/3290.bugfix
A news/3322.bugfix
A news/3325.breaking
A news/3351.feature
A news/3374.bugfix
A news/3416.bugfix
A news/3422.bugfix
A news/3430.bugfix
A news/3440.feature
A news/3442.bugfix
A news/3447.bugfix
A news/3453.bugfix
A news/3459.feature
A news/500.bugfix
A news/6004.bugfix
M CHANGES.rst
M Products/CMFPlone/MigrationTool.py
M Products/CMFPlone/browser/configure.zcml
M Products/CMFPlone/browser/login/login.py
M Products/CMFPlone/browser/login/password_reset.py
M Products/CMFPlone/browser/login/templates/insufficient_privileges.pt
M Products/CMFPlone/browser/login/templates/login_help.pt
M Products/CMFPlone/browser/login/templates/mail_password_form.pt
M Products/CMFPlone/browser/ploneview.py
M Products/CMFPlone/browser/templates/author.pt
M Products/CMFPlone/browser/templates/error_message.pt
M Products/CMFPlone/browser/templates/main_template.pt
M Products/CMFPlone/browser/templates/plone-addsite.pt
M Products/CMFPlone/browser/templates/search.pt
M Products/CMFPlone/browser/templates/test_rendering.pt
M Products/CMFPlone/browser/test_rendering.py
M Products/CMFPlone/configure.zcml
M Products/CMFPlone/controlpanel/browser/overview.py
M Products/CMFPlone/controlpanel/browser/quickinstaller.pt
M Products/CMFPlone/controlpanel/browser/relations_inspect.pt
M Products/CMFPlone/controlpanel/browser/resourceregistry.pt
M Products/CMFPlone/controlpanel/browser/resourceregistry.py
M Products/CMFPlone/controlpanel/browser/site.py
M Products/CMFPlone/controlpanel/browser/usergroups_usersoverview.pt
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_filter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_overview.py
M Products/CMFPlone/interfaces/controlpanel.py
M Products/CMFPlone/interfaces/resources.py
M Products/CMFPlone/profiles/default/controlpanel.xml
M Products/CMFPlone/profiles/default/metadata.xml
M Products/CMFPlone/profiles/default/viewlets.xml
M Products/CMFPlone/profiles/dependencies/registry.xml
M Products/CMFPlone/relationhelper.py
M Products/CMFPlone/resources/__init__.py
M Products/CMFPlone/resources/browser/combine.py
M Products/CMFPlone/resources/browser/configure.zcml
M Products/CMFPlone/resources/browser/resource.py
M Products/CMFPlone/skins/plone_scripts/externalEditorEnabled.py
M Products/CMFPlone/tests/robot/robodoc/README.rst
M Products/CMFPlone/tests/robot/robodoc/collaboration-advanced_control.robot
M Products/CMFPlone/tests/robot/robodoc/config-screens.robot
M Products/CMFPlone/tests/robot/robodoc/managing-working_copy.robot
M Products/CMFPlone/tests/robot/robodoc/working_with_tinymce.robot
M Products/CMFPlone/tests/robot/test_actionmenu.robot
M Products/CMFPlone/tests/robot/test_controlpanel_actions.robot
M Products/CMFPlone/tests/robot/test_controlpanel_navigation.robot
M Products/CMFPlone/tests/robot/test_controlpanel_search.robot
M Products/CMFPlone/tests/robot/test_controlpanel_security.robot
M Products/CMFPlone/tests/robot/test_controlpanel_site.robot
M Products/CMFPlone/tests/robot/test_controlpanel_social.robot
M Products/CMFPlone/tests/robot/test_edit_user_schema.robot
M Products/CMFPlone/tests/robot/test_linkintegrity.robot
M Products/CMFPlone/tests/robot/test_overlays.robot
M Products/CMFPlone/tests/robot/test_querystring.robot
M Products/CMFPlone/tests/robot/test_tinymce.robot
M Products/CMFPlone/tests/testControlPanel.py
M Products/CMFPlone/tests/testPloneView.py
M Products/CMFPlone/tests/testResourceRegistries.py
M Products/CMFPlone/tests/testSecurity.py
M Products/CMFPlone/tests/test_icons.py
M Products/CMFPlone/tests/test_safe_formatter.py
M Products/CMFPlone/traversal.py
M README.rst
M setup.cfg
M setup.py
D Products/CMFPlone/browser/static/search.js
D Products/CMFPlone/resources/browser/configjs.py
D Products/CMFPlone/resources/browser/cook.py
D Products/CMFPlone/resources/browser/interfaces.py
D Products/CMFPlone/resources/browser/mixins.py
D Products/CMFPlone/resources/browser/scripts.pt
D Products/CMFPlone/resources/browser/scripts.py
D Products/CMFPlone/resources/browser/styles.pt
D Products/CMFPlone/resources/browser/styles.py
D Products/CMFPlone/resources/bundle.py
D Products/CMFPlone/resources/exportimport/resourceregistry.py
D Products/CMFPlone/skins/plone_images/favicon.ico
D Products/CMFPlone/tests/robot/test_thememapper.robot
D Products/CMFPlone/tests/testCSSandJSRegistry.py
D Products/CMFPlone/tests/test_metabundles.py
D news/3241.bugfix
D news/3305.bugfix
D news/3376.feature
D news/3377.feature
D news/3393.enhancement
D news/6003.bugfix

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 910e277ddf..35ed72df43 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -12,6 +12,39 @@ Changelog\n \n .. towncrier release notes start\n \n+6.0.0a3 (2022-01-28)\n+--------------------\n+\n+New features:\n+\n+\n+- add a new entry in site-controlpanel to change the favicon and its MIME-type\n+  The favicon can be a .ico/png or SVG-file\n+  [talarias] (plip-barceloneta_lts_favicon)\n+- The @@plone view exposes the human_readable_size helper\n+  [ale-rt] (#3146)\n+- Allow ``from warnings import warn`` and ``warn("message", DeprecationWarning)`` TTW, like in Python Scripts.\n+  [jensens] (#3376)\n+- Customize breadcrumbs hook ``customize_entry`` for subclasses (like already in global navigation).\n+  [jensens] (#3377)\n+\n+\n+Bug fixes:\n+\n+\n+- Cleanup Error Log Form after Review\n+  [jmevissen] (#3241)\n+- Removed management_page_charset support from usergroup-groupdetails page.\n+  This is related to deprecated unicode property types, like ustring.\n+  Part of `issue 3305 <https://github.com/plone/Products.CMFPlone/issues/3305>`_.\n+  [maurits] (#3305)\n+- Update Controlpanel Error Log Form Layout\n+  Rename ControlPanel Error Log Form View prefs_error_log_form -> error-log-form\n+  [jmevissen] (#3393)\n+- Use label_site_administration instead of label_site_admin in error and mail_password_form templates (#3397)\n+- Updated metadata version to 6003.  [maurits] (#6003)\n+\n+\n 6.0.0a2 (2021-12-03)\n --------------------\n \ndiff --git a/Products/CMFPlone/MigrationTool.py b/Products/CMFPlone/MigrationTool.py\nindex d03479e255..19580fd570 100644\n--- a/Products/CMFPlone/MigrationTool.py\n+++ b/Products/CMFPlone/MigrationTool.py\n@@ -93,6 +93,7 @@ def upgrade_all(self, context):\n         profile_id=\'Products.CMFPlacefulWorkflow:CMFPlacefulWorkflow\',\n         check_module=\'Products.CMFPlacefulWorkflow\'\n     ),\n+    Addon(profile_id=\'Products.PlonePAS:PlonePAS\'),\n     Addon(\n         profile_id=\'plone.app.caching:default\',\n         check_module=\'plone.app.caching\'\n@@ -109,7 +110,16 @@ def upgrade_all(self, context):\n     Addon(profile_id=\'plone.app.querystring:default\'),\n     Addon(profile_id=\'plone.app.theming:default\'),\n     Addon(profile_id=\'plone.app.users:default\'),\n+    Addon(\n+        profile_id=\'plone.restapi:default\',\n+        check_module=\'plone.restapi\'\n+    ),\n+    Addon(profile_id=\'plone.session:default\'),\n     Addon(profile_id=\'plone.staticresources:default\'),\n+    Addon(\n+        profile_id=\'plone.volto:default\',\n+        check_module=\'plone.volto\'\n+    ),\n ])\n \n \ndiff --git a/Products/CMFPlone/browser/configure.zcml b/Products/CMFPlone/browser/configure.zcml\nindex a128733cf9..e450097538 100644\n--- a/Products/CMFPlone/browser/configure.zcml\n+++ b/Products/CMFPlone/browser/configure.zcml\n@@ -32,6 +32,13 @@\n       permission="zope.Public"\n       />\n \n+  <browser:page\n+      for="plone.app.layout.navigation.interfaces.INavigationRoot"\n+      name="favicon.ico"\n+      class=".favicon.SiteFavicon"\n+      permission="zope.Public"\n+      />\n+\n   <browser:page\n       for="*"\n       name="sendto_form"\n@@ -210,11 +217,6 @@\n       for="plone.app.layout.navigation.interfaces.INavigationRoot"\n       />\n \n-  <browser:resource\n-      name="search.js"\n-      file="static/search.js"\n-      />\n-\n   <!-- AtD Support -->\n   <browser:page\n       for="*"\n@@ -270,6 +272,20 @@\n       permission="zope2.View"\n       />\n \n+  <browser:page\n+      name="test-rendering-cheatsheet"\n+      for="*"\n+      class=".test_rendering.TestRenderingCheatsheetView"\n+      permission="zope2.View"\n+      />\n+\n+  <browser:page\n+      name="test-rendering-icons"\n+      for="*"\n+      class=".test_rendering.TestRenderingIconsView"\n+      permission="zope2.View"\n+      />\n+\n   <browser:page\n       for="*"\n       name="iconresolver"\ndiff --git a/Products/CMFPlone/browser/favicon.py b/Products/CMFPlone/browser/favicon.py\nnew file mode 100644\nindex 0000000000..a6812cfb84\n--- /dev/null\n+++ b/Products/CMFPlone/browser/favicon.py\n@@ -0,0 +1,41 @@\n+from Products.CMFPlone.interfaces import ISiteSchema\n+from plone.formwidget.namedfile.converter import b64decode_file\n+from plone.memoize import ram\n+from plone.namedfile.browser import DisplayFile\n+from plone.namedfile.file import NamedImage\n+from plone.registry.interfaces import IRegistry\n+from zope.component import getUtility\n+\n+import os.path\n+\n+\n+class SiteFavicon(DisplayFile):\n+    # The following attribute disables the use of an allowlist that\n+    # would otherwise cause image/vnd.microsoft.icon MIMEtyped files\n+    # to be served as downloads.  This allowlist list is sadly not\n+    # complete, at the top of the plone.namedfile.browser.py, but\n+    # fixing that is beyond the scope of this pull request.\n+    use_denylist = True\n+\n+    def __init__(self, context, request):\n+        super().__init__(context, request)\n+\n+        mimetype = "image/vnd.microsoft.icon"\n+        settings = getUtility(IRegistry).forInterface(ISiteSchema, prefix="plone")\n+        if getattr(settings, "site_favicon", False):\n+            # The user has customized the favicon via the Site configlet.\n+            filename, data = b64decode_file(settings.site_favicon)\n+            # Retrieve the MIME type auto-set by the configlet, with a\n+            # valid fallback to a well-known MIME type.\n+            mimetype = getattr(settings, "site_favicon_mimetype", mimetype)\n+        else:\n+            # No registry favicon, we use Plone\'s static copy here.\n+            filename = "favicon.ico"\n+            fallback_path = os.path.join(os.path.dirname(__file__), "static", filename)\n+            with open(fallback_path, "rb") as icon:\n+                data = icon.read()\n+        self.data = NamedImage(data=data, contentType=mimetype, filename=filename)\n+        self.filename = filename\n+\n+    def _getFile(self):\n+        return self.data\ndiff --git a/Products/CMFPlone/browser/login/login.py b/Products/CMFPlone/browser/login/login.py\nindex 92208c2688..d655c226ea 100644\n--- a/Products/CMFPlone/browser/login/login.py\n+++ b/Products/CMFPlone/browser/login/login.py\n@@ -90,22 +90,24 @@ def _get_auth(self):\n                 pass\n \n     def updateWidgets(self):\n+        super().updateWidgets(prefix=\'\')\n+\n         auth = self._get_auth()\n \n         if auth:\n-            fieldname_name = auth.get(\'name_cookie\', \'__ac_name\')\n-            fieldname_password = auth.get(\'pw_cookie\', \'__ac_password\')\n+            widgetname_login = auth.get(\'name_cookie\', \'__ac_name\')\n+            widgetname_password = auth.get(\'pw_cookie\', \'__ac_password\')\n         else:\n-            fieldname_name = \'__ac_name\'\n-            fieldname_password = \'__ac_password\'\n+            widgetname_login = \'__ac_name\'\n+            widgetname_password = \'__ac_password\'\n \n-        self.fields[\'ac_name\'].__name__ = fieldname_name\n-        self.fields[\'ac_password\'].__name__ = fieldname_password\n-\n-        super().updateWidgets(prefix=\'\')\n+        self.widgets[\'ac_name\'].name = widgetname_login\n+        self.widgets[\'ac_name\'].id = widgetname_login\n+        self.widgets[\'ac_password\'].name = widgetname_password\n+        self.widgets[\'ac_password\'].id = widgetname_password\n \n         if self.use_email_as_login():\n-            self.widgets[fieldname_name].label = _(\'label_email\',\n+            self.widgets[\'ac_name\'].label = _(\'label_email\',\n                                                    default=\'Email\')\n         self.widgets[\'came_from\'].mode = HIDDEN_MODE\n         self.widgets[\'came_from\'].value = self.get_came_from()\ndiff --git a/Products/CMFPlone/browser/login/password_reset.py b/Products/CMFPlone/browser/login/password_reset.py\nindex b4b121cec0..1c2dfb663b 100644\n--- a/Products/CMFPlone/browser/login/password_reset.py\n+++ b/Products/CMFPlone/browser/login/password_reset.py\n@@ -1,4 +1,5 @@\n from AccessControl.SecurityManagement import getSecurityManager\n+from DateTime import DateTime\n from email.header import Header\n from plone.app.layout.navigation.interfaces import INavigationRoot\n from plone.base.interfaces import IPasswordResetToolView\n@@ -109,8 +110,9 @@ def _auto_login(self, userid, password):\n             # with the given userid\n             user = getSecurityManager().getUser()\n \n-        login_time = user.getProperty(\'login_time\', None)\n-        if login_time is None:\n+        default = DateTime(\'2000/01/01\')\n+        login_time = user.getProperty(\'login_time\', default)\n+        if login_time == default:\n             notify(UserInitialLoginInEvent(user))\n         else:\n             notify(UserLoggedInEvent(user))\ndiff --git a/Products/CMFPlone/browser/login/templates/insufficient_privileges.pt b/Products/CMFPlone/browser/login/templates/insufficient_privileges.pt\nindex dc0b859b71..5ce1abb146 100644\n--- a/Products/CMFPlone/browser/login/templates/insufficient_privileges.pt\n+++ b/Products/CMFPlone/browser/login/templates/insufficient_privileges.pt\n@@ -29,4 +29,5 @@\n       </div>\n \n    </metal:content>\n-</html>\n+</body>\n+</html>\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/browser/login/templates/login_help.pt b/Products/CMFPlone/browser/login/templates/login_help.pt\nindex f6867222ae..07fee80d49 100644\n--- a/Products/CMFPlone/browser/login/templates/login_help.pt\n+++ b/Products/CMFPlone/browser/login/templates/login_help.pt\n@@ -18,7 +18,7 @@\n         tal:content="structure view/description">Form description</p>\n \n       <div id="content-core">\n-        <form action="." method="post"\n+        <form action="." method="post" novalidate\n           tal:attributes="action view/action; enctype view/enctype"\n           tal:define="subforms view/subforms">\n \ndiff --git a/Products/CMFPlone/browser/login/templates/mail_password_form.pt b/Products/CMFPlone/browser/login/templates/mail_password_form.pt\nindex 8c90b0e6a3..b82d74286b 100644\n--- a/Products/CMFPlone/browser/login/templates/mail_password_form.pt\n+++ b/Products/CMFPlone/browser/login/templates/mail_password_form.pt\n@@ -76,7 +76,7 @@\n             name or your email address has changed), contact the\n             <span i18n:name="site_admin">\n             <a href="#"\n-               i18n:translate="label_site_admin"\n+               i18n:translate="label_site_administration"\n                tal:attributes="href string:${portal_url}/contact-info">site administration</a></span>.\n         </p>\n \n@@ -86,7 +86,7 @@\n             address has changed), contact the\n             <span i18n:name="site_admin">\n             <a href="#"\n-               i18n:translate="label_site_admin"\n+               i18n:translate="label_site_administration"\n                tal:attributes="href string:${portal_url}/contact-info">site administration</a></span>.\n         </p>\n \ndiff --git a/Products/CMFPlone/browser/ploneview.py b/Products/CMFPlone/browser/ploneview.py\nindex 3a414810db..43dab697fb 100644\n--- a/Products/CMFPlone/browser/ploneview.py\n+++ b/Products/CMFPlone/browser/ploneview.py\n@@ -211,3 +211,7 @@ def patterns_settings(self):\n         return getMultiAdapter(\n             (context, self.request),\n             name=\'plone_patterns_settings\')()\n+\n+    @property\n+    def human_readable_size(self):\n+        return utils.human_readable_size\ndiff --git a/Products/CMFPlone/skins/plone_images/favicon.ico b/Products/CMFPlone/browser/static/favicon.ico\nsimilarity index 100%\nrename from Products/CMFPlone/skins/plone_images/favicon.ico\nrename to Products/CMFPlone/browser/static/favicon.ico\ndiff --git a/Products/CMFPlone/browser/static/search.js b/Products/CMFPlone/browser/static/search.js\ndeleted file mode 100644\nindex 13025eb126..0000000000\n--- a/Products/CMFPlone/browser/static/search.js\n+++ /dev/null\n@@ -1,149 +0,0 @@\n-/* The following line defines global variables defined elsewhere. */\n-/*globals require*/\n-\n-\n-if(require === undefined){\n-  require = function(reqs, torun){\n-    \'use strict\';\n-    return torun(window.jQuery);\n-  };\n-}\n-\n-require([\n-  \'jquery\',\n-], function($) {\n-  \'use strict\';\n-\n-  var $loader = $(\'.plone-loader\');\n-  if($loader.length === 0){\n-    $loader = $(\'<div class="plone-loader"><div class="spinner-border text-secondary" role="status"></div></div>\');\n-    $(\'body\').append($loader);\n-  }\n-\n-  var $filter = $(\'#search-filter\');\n-  var $filterBtn = $(\'#search-filter-toggle\', $filter);\n-  var $advSearchInput = $(\'#advanced-search-input\');\n-  var $ctSelectAll = $(\'#pt_toggle\');\n-  var $selectAllContainer = $(\'.search-type-options\');\n-  var $sortingContainer = $(\'#sorting-options\');\n-\n-\n-  /* handle history */\n-  if (window.history && window.history.pushState){\n-    $(window).bind(\'popstate\', function () {\n-      /* we\'re just going to cheat and reload the page so\n-         we aren\'t keep moving around state here..\n-         Here, I\'m lazy, we\'re not using react here... */\n-      window.location = window.location.href;\n-    });\n-  }\n-\n-  var pushHistory = function(){\n-    if(window.history && window.history.pushState){\n-      var url = window.location.origin + window.location.pathname + \'?\' + $(\'#searchform\').serialize();\n-      window.history.pushState(null, null, url);\n-    }\n-  };\n-\n-  var timeout = 0;\n-  var search = function(){\n-    $loader.show();\n-    pushHistory();\n-    $.ajax({\n-      url: window.location.origin + window.location.pathname + \'?ajax_load=1\',\n-      data: $(\'#searchform\').serialize()\n-    }).done(function(html){\n-      var $html = $(html);\n-      $(\'#search-results\').replaceWith($(\'#search-results\', $html));\n-      $(\'#search-term\').replaceWith($(\'#search-term\', $html));\n-      $(\'#results-count\').replaceWith($(\'#results-count\', $html));\n-      $loader.hide();\n-    });\n-  };\n-  var searchDelayed = function(){\n-    clearTimeout(timeout);\n-    timeout = setTimeout(search, 200);\n-  };\n-\n-  var setBatchStart = function(b_start){\n-    $("#search-batch-start").attr("value", b_start);\n-  };\n-\n-  // for sorme reason the backend always flag with active class the sorting options\n-  var updateSortingState = function($el){\n-    $(\'a\', $sortingContainer).removeClass(\'active\');\n-    $el.addClass(\'active\');\n-  };\n-  var default_sort = $(\'#search-results\').attr(\'data-default-sort\');\n-  updateSortingState($(\'a[data-sort=\'+default_sort+\']\'));\n-\n-  /* sorting */\n-  $(\'a\', $sortingContainer).click(function(e){\n-    e.preventDefault();\n-    updateSortingState($(this));\n-    var sort = $(this).attr(\'data-sort\');\n-    var order = $(this).attr(\'data-order\');\n-    if(sort){\n-      $(\'[name="sort_on"]\').attr(\'value\', sort);\n-      if(order && order == \'reverse\'){\n-        $(\'[name="sort_order"]\').attr(\'value\', \'reverse\');\n-      }else{\n-        $(\'[name="sort_order"]\').attr(\'value\', \'\');\n-      }\n-    }else{\n-      $(\'[name="sort_on"]\').attr(\'value\', \'\');\n-      $(\'[name="sort_order"]\').attr(\'value\', \'\');\n-    }\n-    search();\n-  });\n-\n-\n-  /* form submission */\n-  $(\'.searchPage\').submit(function(e){\n-    e.preventDefault();\n-    setBatchStart("0");\n-    search();\n-  });\n-\n-\n-  /* filters */\n-  $filterBtn.click(function(e){\n-    e.preventDefault();\n-    $filter.toggleClass(\'activated\');\n-    if($filter.hasClass(\'activated\')){\n-      $advSearchInput.attr(\'value\', \'True\');\n-    }else{\n-      $advSearchInput.attr(\'value\', \'False\');\n-    }\n-  });\n-\n-  $ctSelectAll.change(function(){\n-    if($ctSelectAll[0].checked){\n-      $(\'input\', $selectAllContainer).each(function(){\n-        this.checked = true;\n-      });\n-    }else{\n-      $(\'input\', $selectAllContainer).each(function(){\n-        this.checked = false;\n-      });\n-    }\n-  });\n-\n-  $(\'input\', $filter).change(function(){\n-    setBatchStart("0");\n-    searchDelayed();\n-  });\n-\n-  /* pagination */\n-  $("#searchform").on("click", ".pagination a", function(e) {\n-    var urlParams = new URLSearchParams($(e.currentTarget).attr("href")),\n-        b_start = urlParams.get("b_start:int");\n-    if(!b_start) {\n-      // not plone pagination\n-      return;\n-    }\n-    e.preventDefault();\n-    setBatchStart(b_start);\n-    search();\n-  })\n-});\ndiff --git a/Products/CMFPlone/browser/templates/author.pt b/Products/CMFPlone/browser/templates/author.pt\nindex cded443192..19cd4b0d6e 100644\n--- a/Products/CMFPlone/browser/templates/author.pt\n+++ b/Products/CMFPlone/browser/templates/author.pt\n@@ -78,11 +78,11 @@\n                 </h1>\n \n                 <div class="autotabs" tal:omit-tag="not:isOwner">\n-                  <nav class="autotoc-nav" tal:condition="isOwner">\n-                    <a class="active"\n+                  <nav class="autotoc-nav nav nav-tabs" tal:condition="isOwner">\n+                    <a class="nav-link active"\n                        href="${portal_url}/author/${view/member_info/url}"\n                        i18n:translate="label_view">View</a>\n-                    <a href="${portal_url}/@@personal-information"\n+                    <a class="nav-link" href="${portal_url}/@@personal-information"\n                        i18n:translate="label_edit">Edit</a>\n                   </nav>\n \n@@ -192,7 +192,7 @@\n                           </h2>\n \n                           <div metal:define-macro="user_content_listing">\n-                          <table class="vertical listing"\n+                          <table class="table"\n                                  summary="Lists content written by an author grouped by content type"\n                                  i18n:attributes="summary summary_author_content_list;">\n                               <thead>\ndiff --git a/Products/CMFPlone/browser/templates/error_message.pt b/Products/CMFPlone/browser/templates/error_message.pt\nindex f68a5d4774..bb375632f7 100644\n--- a/Products/CMFPlone/browser/templates/error_message.pt\n+++ b/Products/CMFPlone/browser/templates/error_message.pt\n@@ -31,7 +31,7 @@\n                         If you are certain you have the correct web address but are encountering an error, please\n                         contact the <span i18n:name="site_admin">\n                         <a href="#"\n-                           i18n:translate="label_site_admin"\n+                           i18n:translate="label_site_administration"\n                            tal:attributes="href string:${context/portal_url}/contact-info">site administration</a></span>.\n                     </p>\n \ndiff --git a/Products/CMFPlone/browser/templates/main_template.pt b/Products/CMFPlone/browser/templates/main_template.pt\nindex dac3b37cd9..cdebe3b295 100644\n--- a/Products/CMFPlone/browser/templates/main_template.pt\n+++ b/Products/CMFPlone/browser/templates/main_template.pt\n@@ -56,6 +56,10 @@\n \n     <header id="portal-top" i18n:domain="plone">\n       <div tal:replace="structure provider:plone.portaltop" />\n+      <div id="portal-header">\n+        <div tal:replace="structure provider:plone.portalheader" />\n+      </div>\n+\n     </header>\n \n     <div id="portal-mainnavigation" tal:content="structure provider:plone.mainnavigation">\ndiff --git a/Products/CMFPlone/browser/templates/plone-addsite.pt b/Products/CMFPlone/browser/templates/plone-addsite.pt\nindex 9bd9ce862b..7dff6a74c5 100644\n--- a/Products/CMFPlone/browser/templates/plone-addsite.pt\n+++ b/Products/CMFPlone/browser/templates/plone-addsite.pt\n@@ -75,7 +75,7 @@\n           <div class="col-md-12 mb-3">\n             <label for="default_language" class="form-label" i18n:translate="">Language</label>\n \n-            <select name="default_language" class="form-control"\n+            <select name="default_language" class="form-select"\n                     tal:define="browser_language view/browser_language;\n                                 grouped_languages python:view.grouped_languages(browser_language)">\n               <optgroup tal:repeat="group grouped_languages"\n@@ -105,7 +105,7 @@\n \n             <select id="portal_timezone"\n                     name="portal_timezone"\n-                    class="form-control"\n+                    class="form-select"\n                     tal:define="tz_list view/timezones">\n               <optgroup tal:repeat="group tz_list"\n                         tal:attributes="label group">\ndiff --git a/Products/CMFPlone/browser/templates/search.pt b/Products/CMFPlone/browser/templates/search.pt\nindex 1031272371..ef4d271e8d 100644\n--- a/Products/CMFPlone/browser/templates/search.pt\n+++ b/Products/CMFPlone/browser/templates/search.pt\n@@ -32,7 +32,7 @@\n           id="searchform"\n           action="@@search"\n           role="search"\n-          class="searchPage pat-formautofocus"\n+          class="searchPage pat-formautofocus pat-search"\n           tal:define="portal context/@@plone_portal_state/portal;\n                       first_call not:request/advanced_search|nothing;\n                       st python:request.get(\'SearchableText\', \'\');\n@@ -310,8 +310,6 @@\n         </div>\n \n     </form>\n-\n-    <script type="text/javascript" src="${context/portal_url}/++resource++search.js"></script>\n   </div>\n \n </body>\ndiff --git a/Products/CMFPlone/browser/templates/test_rendering.pt b/Products/CMFPlone/browser/templates/test_rendering.pt\nindex 6fe6ebd04d..55793fa423 100644\n--- a/Products/CMFPlone/browser/templates/test_rendering.pt\n+++ b/Products/CMFPlone/browser/templates/test_rendering.pt\n@@ -6,6 +6,22 @@\n \n   <metal:main fill-slot="main">\n \n+    <style>\n+\n+    </style>\n+\n+    <ul class="nav nav-tabs mb-3">\n+      <li class="nav-item">\n+        <a class="nav-link active" href="${portal_url}/@@test-rendering">Test Rendering</a>\n+      </li>\n+      <li class="nav-item">\n+        <a class="nav-link" href="${portal_url}/@@test-rendering-cheatsheet">Bootstrap Cheatsheet</a>\n+      </li>\n+      <li class="nav-item">\n+        <a class="nav-link" href="${portal_url}/@@test-rendering-icons">Icons</a>\n+      </li>\n+    </ul>\n+\n     <h1>Plone User Interface elements test page</h1>\n \n     <p class="lead">\n@@ -15,525 +31,33 @@\n       bad behaviour on this front.\n     </p>\n \n-    <p>Check out Bootstrap\'s <a href="https://getbootstrap.com/docs/4.5/getting-started/introduction/" target="_blank" title="Bootstrap Documentation">Documentation</a> and examples for Bootstrap typography, including global settings, headings, body text, lists, and more. Everything is available in Plone now!</p>\n-\n-    <h1>Headings</h1>\n-\n-    <p>All HTML headings, &lt;h1&gt; through &lt;h6&gt;, are available. .h1 through .h6 classes are also available, for when you want to match the font styling of a heading but cannot use the associated HTML element.</p>\n-\n-    <h1>h1. Bootstrap heading</h1>\n-    <h2>h2. Bootstrap heading</h2>\n-    <h3>h3. Bootstrap heading</h3>\n-    <h4>h4. Bootstrap heading</h4>\n-    <h5>h5. Bootstrap heading</h5>\n-    <h6>h6. Bootstrap heading</h6>\n-\n-    <h1>Icons</h1>\n-\n-    <p>Description to explain icon resolver</p>\n-\n-\n-    <h2>Get Icon URL</h2>\n-\n-    <p>\n-      <code>&lt;img src="" tal:attributes="src python:icons.url(\'alarm\')" class="custom-class" alt="foo" /&gt;</code>\n-    </p>\n-\n-    <p>\n-      <img src="${python:icons.url(\'alarm\')}" class="custom-class" alt="foo" />\n-    </p>\n-\n-    <h2>Get Icon Tag</h2>\n-\n-    <p>\n-      <code>&lt;tal:icon tal:replace="structure python:icons.tag(\'archive\', tag_class=\'custom-class\', tag_alt=\'foobar\')" /&gt;</code>\n-    </p>\n-\n-    <p>\n-      <tal:icon tal:replace="structure python:icons.tag(\'archive\', tag_class=\'custom-class\', tag_alt=\'foobar\')" />\n-    </p>\n-\n-    <tal:comment tal:replace="nothing">\n-    <div id="content-core">\n-      <pre>Headlines</pre>\n-\n-      <h1>Headline h1</h1>\n-      <p>And a paragraph</p>\n-      <h2>Headline h2</h2>\n-      <p>And a paragraph</p>\n-      <h3>Headline h3</h3>\n-      <p>And a paragraph</p>\n-      <h4>Headline h4</h4>\n-      <p>And a paragraph</p>\n-      <h5>Headline h5</h5>\n-      <p>And a paragraph</p>\n-      <h6>Headline h6</h6>\n-\n-      <pre>Example document rendering</pre>\n-\n-      <div class="portalMessage info" role="status">\n-        <strong>\n-          Info\n-        </strong>\n-        <span tal:omit-tag="">\n-          The portalMessage class, can also contain <a href="#">links</a> - used to\n-          give the user temporary status messages.\n-        </span>\n-      </div>\n-\n-      <dl class="portalMessage error" role="alert">\n-        <dt>\n-          Error\n-        </dt>\n-        <dd>\n-          The portalMessage \'error\' class, can also contain <a href="#">links</a> - used to\n-          give the user temporary status messages.\n-        </dd>\n-      </dl>\n-\n-      <dl class="portalMessage warning" role="status">\n-        <dt>\n-          Warning\n-        </dt>\n-        <dd>\n-          The portalMessage \'warning\' class, can also contain <a href="#">links</a> - used to\n-          give the user temporary status messages.\n-        </dd>\n-      </dl>\n-\n-      <h1 class="documentFirstHeading">Document Headline</h1>\n-\n-      <div id="plone-document-byline" class="documentByLine">\n-        <span class="documentAuthor">\n-          by\n-          <a href="http://localhost:8080/Plone/author/admin">admin</a>\n-        </span>\n-\n-        <span class="documentModified">\n-          &mdash;\n-          <span>\n-            last modified\n-          </span>\n-          May 21, 2010 10:02 AM\n-        </span>\n-\n-        <span id="content-history" class="contentHistory">\n-          &mdash;\n-          <a href="http://localhost:8080/Plone/front-page/@@historyview" rel="#pb_4" class="link-overlay"\n-            style="cursor: pointer;">History</a>\n-        </span>\n-      </div>\n-\n-      <div class="documentDescription">\n-        The document description\n-      </div>\n-\n-      <p>\n-        Normal document body text,\n-        <strong>strong text</strong>,\n-        <em>emphasised text</em>,\n-        Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Quisque odio sem, aliquam ut, suscipit at,\n-        aliquet non, justo. Vestibulum vitae urna et mi volutpat luctus. Nulla auctor, lacus ut consectetuer\n-        sagittis, erat odio vulputate sapien, eu placerat diam mauris id turpis. Aenean quis ipsum. Cum sociis\n-        natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Pellentesque rutrum. Sed\n-        mattis turpis sit amet ipsum viverra pharetra. Nunc facilisis, augue non dapibus gravida, risus quam\n-        vulputate quam, non venenatis dui massa in leo. Maecenas scelerisque dapibus libero. Suspendisse\n-        potenti.\n-        example <a href="#">Normal internal site link</a> inside a paragraph,\n-        example <a href="http://plone.org">External link to plone.org</a>,\n-        example <a href="https://plone.org">Secure (HTTPS) link to plone.org</a>,\n-        example <a href="mailto:some@address">Mailto link</a>,\n-        example <a href="ftp://some.site">FTP link</a>,\n-        example <a href="news://some.site">NNTP (news) link</a>,\n-        example <a href="webcal://some.site">WebCal link</a>,\n-        example <a href="feed://some.site">RSS feed link</a>,\n-        example <a href="irc://some.network/#channel">IRC link</a>.\n-      </p>\n-\n-      <ul>\n-        <li>Unordered list element 1\n-          <ul>\n-            <li>Unordered list subelement 1</li>\n-          </ul>\n-        </li>\n-        <li>Unordered list element 2</li>\n-        <li>Unordered list element 3</li>\n-      </ul>\n-\n-      <ol>\n-        <li>Ordered list element 1\n-          <ol>\n-            <li>Ordered list subelement 1</li>\n-          </ol>\n-        </li>\n-        <li>Ordered list element 2</li>\n-        <li>Ordered list element 3</li>\n-      </ol>\n-\n-      <dl>\n-        <dt>Definition list term</dt>\n-        <dd>Definition List description, Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Quisque odio\n-          sem, aliquam ut, suscipit at, aliquet non, justo.\n-        </dd>\n-        <dd>Another Definition List description, Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\n-          Quisque odio sem, aliquam ut, suscipit at, aliquet non, justo.\n-        </dd>\n-      </dl>\n-\n-      <h3>Definition List deprecation</h3>\n-\n-      As of Plone 5, we try to get rid of Definition Lists where they don\'t act as\n-      definition lists. We replace them in the following manners.\n-\n-\n-      <h4>in portal messages</h4>\n-\n-      <div class="portalMessage info" role="status">\n-        <strong>Not important</strong>\n-        This message is here to tell you something went just as you expected.\n-      </div>\n-      <div class="portalMessage warning" role="status">\n-        <strong>You might run into problems</strong>\n-        Please check your settings, be sure what you\'re doing is right.\n-      </div>\n-      <div class="portalMessage error" role="alert">\n-        <strong>Something went wrong</strong>\n-        This is bad, you must notice this.\n-      </div>\n-\n-      <h4>in listings</h4>\n-\n-      <div>\n-        <article>\n-          <heading><a href="">Item one</a></heading>\n-          <p>Description</p>\n-        </article>\n-        <article>\n-          <heading><a href="">Item two</a></heading>\n-          <p>Description</p>\n-        </article>\n-      </div>\n-\n-      <h2>\n-        Table of class <code>listing</code>\n-      </h2>\n-\n-      <table class="listing" id="someid" summary="Sortable table example">\n-        <!-- By giving a table an ID, it gets the sortable option.\n-         Use class="nosort" to override on a table or column basis. -->\n-        <thead>\n-          <tr>\n-            <th>Table heading</th>\n-            <th>Another heading (sortable, click to sort)</th>\n-            <th class="nosort">Fixed column (not sortable)</th>\n-          </tr>\n-        </thead>\n-        <tbody>\n-          <tr class="odd">\n-            <td>Odd table item</td>\n-            <td>Item 1</td>\n-            <td>Another item</td>\n-          </tr>\n-          <tr class="even">\n-            <td>Even table item</td>\n-            <td>Item 2</td>\n-            <td>Yet another item</td>\n-          </tr>\n-          <tr class="odd">\n-            <td>Odd table item</td>\n-            <td>Item 3</td>\n-            <td>And one more item</td>\n-          </tr>\n-        </tbody>\n-      </table>\n-\n-      <h2>\n-        Table of class <code>vertical listing</code>\n-      </h2>\n-\n-      <table class="vertical listing" summary="Vertical listing example">\n-        <tbody>\n-          <tr>\n-            <th>Table heading</th>\n-            <td>Odd table item</td>\n-          </tr>\n-          <tr>\n-            <th>Another heading</th>\n-            <td>Even table item</td>\n-          </tr>\n-        </tbody>\n-      </table>\n-\n-      <h2>Forms</h2>\n-\n-      <form>\n-        <fieldset>\n-          <legend>Fieldset legend</legend>\n-\n-          <div class="field">\n-            <label for="onefield">Text field</label>\n-            <span class="fieldRequired" title="Required" i18n:attributes="title title_required;"\n-              i18n:translate="label_required">(Required)</span>\n-            <div class="formHelp">\n-              This is the help for this form field. And <a href="#">links are also possible</a>.\n-            </div>\n-            <input type="text" id="onefield" value="Some content" />\n-          </div>\n-          <div class="field error">\n-            <label for="anotherfield">Text field with error</label>\n-            <span class="fieldRequired" title="Required" i18n:attributes="title title_required;"\n-              i18n:translate="label_required">(Required)</span>\n-            <div class="formHelp">\n-              This field is just here to demonstrate an error message.\n-            </div>\n-            <div>This is the error message.</div>\n-            <input type="text" id="anotherfield" value="Some content" />\n-          </div>\n-          <div class="field">\n-            <label for="onecheckbox">Checkbox</label>\n-            <span class="fieldRequired" title="Required" i18n:attributes="title title_required;"\n-              i18n:translate="label_required">(Required)</span>\n-            <div class="formHelp">\n-              This is a checkbox field.\n-            </div>\n-            <input type="checkbox" id="onecheckbox" />\n-          </div>\n-          <div class="field error">\n-            <label for="anothercheckbox">Checkbox with error</label>\n-            <span class="fieldRequired" title="Required" i18n:attributes="title title_required;"\n-              i18n:translate="label_required">(Required)</span>\n-            <div class="formHelp">\n-              This checkbox field is just here to demonstrate an error message.\n-            </div>\n-            <div>This is the error message.</div>\n-            <input type="checkbox" id="anothercheckbox" />\n-          </div>\n-          <div class="field">\n-            <label for="onestylishcheckbox">Checkbox without border</label>\n-            <span class="fieldRequired" title="Required" i18n:attributes="title title_required;"\n-              i18n:translate="label_required">(Required)</span>\n-            <div class="formHelp">\n-              This is a checkbox field.\n-            </div>\n-            <input type="checkbox" class="noborder" id="onestylishcheckbox" />\n-          </div>\n-          <div class="field error">\n-            <label for="anotherstylishcheckbox">\n-              Checkbox without border with error</label>\n-            <span class="fieldRequired" title="Required" i18n:attributes="title title_required;"\n-              i18n:translate="label_required">(Required)</span>\n-            <div class="formHelp">\n-              This checkbox field is just here to demonstrate an error message.\n-            </div>\n-            <div>This is the error message.</div>\n-            <input type="checkbox" class="noborder" id="anotherstylishcheckbox" />\n-          </div>\n-          <div class="field">\n-            <label>Radio</label>\n-            <span class="fieldRequired" title="Required" i18n:attributes="title title_required;"\n-              i18n:translate="label_required">(Required)</span>\n-            <div class="formHelp">\n-              This is a checkbox field.\n-            </div>\n-            <label>First\n-              <input class="noborder" type="radio" name="radio_group1" />\n-            </label>\n-            <br />\n-            <label>Second\n-              <input class="noborder" type="radio" name="radio_group1" />\n-            </label>\n-            <br />\n-            <label>Third\n-              <input class="noborder" type="radio" name="radio_group1" />\n-            </label>\n-            <br />\n-          </div>\n-          <div class="field error">\n-            <label>Radio with error</label>\n-            <span class="fieldRequired" title="Required" i18n:attributes="title title_required;"\n-              i18n:translate="label_required">(Required)</span>\n-            <div class="formHelp">\n-              This checkbox field is just here to demonstrate an error message.\n-            </div>\n-            <div>This is the error message.</div>\n-            <label>First\n-              <input class="noborder" type="radio" name="radio_group2" />\n-            </label>\n-            <br />\n-            <label>Second\n-              <input class="noborder" type="radio" name="radio_group2" />\n-            </label>\n-            <br />\n-            <label>Third\n-              <input class="noborder" type="radio" name="radio_group2" />\n-            </label>\n-            <br />\n-          </div>\n-          <div class="formControls">\n-            <input class="context" type="submit" value="Context submit" />\n-            <input class="standalone" type="submit" value="Standalone submit" />\n-            <input class="destructive" type="submit" value="Destructive submit" />\n-            <input type="submit" value="Submit" />\n-          </div>\n-          <div class="formControls">\n-            <input class="context" type="button" value="Context button" />\n-            <input class="standalone" type="button" value="Standalone button" />\n-            <input class="destructive" type="button" value="Destructive button" />\n-            <input type="button" value="Button" />\n-          </div>\n-        </fieldset>\n-      </form>\n-\n-      <h2>Table with form elements</h2>\n-\n-      <form>\n-        <table id="sortable" class="listing" summary="Content listing" cellpadding="0" cellspacing="0">\n-          <thead>\n-            <tr>\n-              <th class="nosort">\n-                <input class="noborder" type="checkbox" src="select_all_icons.png" name="selectButton"\n-                  title="Select all items" onClick="toggleSelect(this,\'paths:list\');"\n-                  tal:attributes="src string:${context/portal_url}/select_all_icons.png" alt="Select all items"\n-                  i18n:attributes="title label_select_all_items; alt label_select_all_items;" />\n-              </th>\n-              <th>&nbsp;Title&nbsp;</th>\n-              <th>&nbsp;Stuff&nbsp;</th>\n-            </tr>\n-          </thead>\n-          <tbody>\n-            <tr class="odd">\n-              <td>\n-                <input type="checkbox" class="noborder" name="paths:list" id="#" value="#" />\n-              </td>\n-              <td><a href="#">Title</a></td>\n-              <td>with class noborder</td>\n-            </tr>\n-            <tr class="even">\n-              <td>\n-                <input type="checkbox" class="noborder" name="paths:list" id="#" value="#" />\n-              </td>\n-              <td><a href="#">Title</a></td>\n-              <td>with class noborder</td>\n-            </tr>\n-          </tbody>\n-        </table>\n-      </form>\n-\n-      <div>\n-        <h2>Collapsible form</h2>\n-        <form id="searchform" name="search" method="get" class="pat-formautofocus" action="search">\n-\n-          <div class="field collapsible">\n-            <label class="collapser collapsed" for="created">New items since</label>\n-\n-            <div class="collapse" style="display: none;">\n-              <div class="formHelp">\n-                Return items added since you were last logged on, the last week, etc.\n-              </div>\n-\n-\n-              <select id="created" name="created:list:date">\n-                <option value="2010/09/06 17:50:45.971272 GMT-7">Last log-in</option>\n-                <option value="2010/09/05"> Yesterday </option>\n-                <option value="2010/08/30"> Last week </option>\n-                <option value="2010/08/06"> Last month </option>\n-                <option selected="selected" class="default_option" value="1970/02/01"> Ever </option>\n-              </select>\n-\n-            </div>\n-\n-          </div>\n-\n-\n-          <div class="field collapsible">\n-            <label class="collapser collapsed" for="Creator">Author</label>\n-\n-            <div class="collapse" style="display: none;">\n-              <div class="formHelp">\n-                Return items created by a particular person.\n-              </div>\n-\n-\n-              <select id="Creator" name="Creator">\n-                <option class="default_option" value="">Any Author</option>\n-\n-                <option value="admin">admin</option>\n-\n-              </select>\n-            </div>\n-          </div>\n-\n-          <div id="clear-space-before-submit" class="visualClear">\n-            <!-- -->\n-          </div>\n-\n-        </form>\n-      </div>\n-\n-      <div>\n-        <h2>Select All/None</h2>\n-        <form id="searchform" name="search" method="get" class="pat-formautofocus" action="search">\n-          <div>\n-            <label>Item type</label>\n-          </div>\n-          <div class="formHelp">\n-            Return items of a specific type.\n-          </div>\n-          <span class="optionsToggle">\n-            <input type="checkbox" checked="checked" class="noborder" id="pt_toggle" value="#" name="pt_toggle"\n-              onclick="javascript:toggleSelect(this, \'portal_type:list\', true)"\n-              src="http://localhost:8080/Plone/select_all_icons.png">\n-            <label for="pt_toggle">Select All/None</label>\n-          </span>\n-          <br>\n-          <div style="float: left; margin-right: 2em;">\n-            <input type="checkbox" id="portal_type_1_1" checked="checked" class="noborder" value="Document"\n-              name="portal_type:list">\n-            <label for="portal_type_1_1">Page</label>\n-            <br>\n-            <input type="checkbox" id="portal_type_1_2" checked="checked" class="noborder" value="Folder"\n-              name="portal_type:list">\n-            <label for="portal_type_1_2">Folder</label>\n-            <br>\n-          </div>\n-          <div style="float: left; margin-right: 2em;">\n-            <input type="checkbox" id="portal_type_2_1" checked="checked" class="noborder" value="Topic"\n-              name="portal_type:list">\n-            <label for="portal_type_2_1">Collection</label>\n-            <br>\n-          </div>\n-        </form>\n-        <div class="visualClear"></div>\n-      </div>\n-\n-\n-      <div>\n-        <h2>Action menu</h2>\n-        <dl class="actionMenu" id="actioMenuDemo">\n-          <dt class="actionMenuHeader">\n-            <a href="#">Action menu title</a>\n-          </dt>\n-          <dd class="actionMenuContent">\n-            Menu content\n-          </dd>\n-        </dl>\n-      </div>\n-\n-      <div>\n-        <h2>Collapsible section</h2>\n-        <dl class="collapsible">\n-          <dt class="collapsibleHeader">\n-            Collapsible section title\n-          </dt>\n-          <dd class="collapsibleContent">\n-            Collapsible section content\n-          </dd>\n-        </dl>\n-      </div>\n-\n+    <h2 class="mt-5">Alerts</h2>\n+    <p><a href="https://getbootstrap.com/docs/5.1/components/alerts/">https://getbootstrap.com/docs/5.1/components/alerts/</a></p>\n \n+    <div class="alert alert-primary" role="alert">\n+      <span>Mollit minim ullamco aliqua do culpa amet ullamco eu tempor. <a href="http://localhost:8080/Plone27/docs/edit">nulla proident velit</a></span>\n+    </div>\n+    <div class="alert alert-secondary" role="alert">\n+      <span>Mollit minim ullamco aliqua do culpa amet ullamco eu tempor. <a href="http://localhost:8080/Plone27/docs/edit">nulla proident velit</a></span>\n+    </div>\n+    <div class="alert alert-success" role="alert">\n+      <span>Mollit minim ullamco aliqua do culpa amet ullamco eu tempor. <a href="http://localhost:8080/Plone27/docs/edit">nulla proident velit</a></span>\n+    </div>\n+    <div class="alert alert-info" role="alert">\n+      <span>Mollit minim ullamco aliqua do culpa amet ullamco eu tempor. <a href="http://localhost:8080/Plone27/docs/edit">nulla proident velit</a></span>\n+    </div>\n+    <div class="alert alert-warning" role="alert">\n+      <span>Mollit minim ullamco aliqua do culpa amet ullamco eu tempor. <a href="http://localhost:8080/Plone27/docs/edit">nulla proident velit</a></span>\n+    </div>\n+    <div class="alert alert-danger" role="alert">\n+      <span>Mollit minim ullamco aliqua do culpa amet ullamco eu tempor. <a href="http://localhost:8080/Plone27/docs/edit">nulla proident velit</a></span>\n+    </div>\n+    <div class="alert alert-light" role="alert">\n+      <span>Mollit minim ullamco aliqua do culpa amet ullamco eu tempor. <a href="http://localhost:8080/Plone27/docs/edit">nulla proident velit</a></span>\n+    </div>\n+    <div class="alert alert-dark" role="alert">\n+      <span>Mollit minim ullamco aliqua do culpa amet ullamco eu tempor. <a href="http://localhost:8080/Plone27/docs/edit">nulla proident velit</a></span>\n     </div>\n-    </tal:comment>\n \n   </metal:main>\n \ndiff --git a/Products/CMFPlone/browser/templates/test_rendering_cheatsheet.pt b/Products/CMFPlone/browser/templates/test_rendering_cheatsheet.pt\nnew file mode 100644\nindex 0000000000..d22c353640\n--- /dev/null\n+++ b/Products/CMFPlone/browser/templates/test_rendering_cheatsheet.pt\n@@ -0,0 +1,1695 @@\n+<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" xmlns:tal="http://xml.zope.org/namespaces/tal"\n+  xmlns:metal="http://xml.zope.org/namespaces/metal" xmlns:i18n="http://xml.zope.org/namespaces/i18n" lang="en"\n+  metal:use-macro="context/@@main_template/macros/master" i18n:domain="plone">\n+\n+<body>\n+\n+  <metal:main fill-slot="main">\n+\n+    <style>\n+\n+      .bd-cheatsheet h2,\n+      .bd-cheatsheet .bd-heading\n+        {\n+          padding: 1em 0;\n+          background-color: #fff;\n+        }\n+\n+    </style>    \n+\n+    <ul class="nav nav-tabs mb-3">\n+      <li class="nav-item">\n+        <a class="nav-link" href="${portal_url}/@@test-rendering">Test Rendering</a>\n+      </li>\n+      <li class="nav-item">\n+        <a class="nav-link active" href="${portal_url}/@@test-rendering-cheatsheet">Bootstrap Cheatsheet</a>\n+      </li>\n+      <li class="nav-item">\n+        <a class="nav-link" href="${portal_url}/@@test-rendering-icons">Icons</a>\n+      </li>\n+    </ul>\n+\n+    <h1>Bootstrap Cheatsheet</h1>\n+\n+    <p class="lead">\n+      Kitchen sink of Bootstrap components. This page is borrowd from the <a href="https://getbootstrap.com/docs/5.1/examples/cheatsheet/" target="_blank">Bootstrap Examples Cheatsheet"</a>.\n+    </p>\n+\n+    <!--\n+      \n+      Todos to fix markup\n+\n+      Change <div class="bd-cheatsheet container-fluid bg-body"> to <div class="bd-cheatsheet bg-body">\n+      Search and replace /docs/5.1 by https://getbootstrap.com/docs/5.1\n+    \n+    -->\n+\n+    <!-- Bootstrap Cheatsheet -->\n+\n+    <div class="bd-cheatsheet bg-body">\n+      <section id="content">\n+        <h2 class="sticky-xl-top fw-bold pt-3 pt-xl-5 pb-2 pb-xl-3">Contents</h2>\n+\n+        <article class="my-3" id="typography">\n+\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Typography</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/content/typography/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <p class="display-1">Display 1</p>\n+            <p class="display-2">Display 2</p>\n+            <p class="display-3">Display 3</p>\n+            <p class="display-4">Display 4</p>\n+            <p class="display-5">Display 5</p>\n+            <p class="display-6">Display 6</p>\n+            </div>\n+\n+            <div class="bd-example">\n+            <p class="h1">Heading 1</p>\n+            <p class="h2">Heading 2</p>\n+            <p class="h3">Heading 3</p>\n+            <p class="h4">Heading 4</p>\n+            <p class="h5">Heading 5</p>\n+            <p class="h6">Heading 6</p>\n+            </div>\n+\n+            <div class="bd-example">\n+            <p class="lead">\n+              This is a lead paragraph. It stands out from regular paragraphs.\n+            </p>\n+            </div>\n+\n+            <div class="bd-example">\n+            <p>You can use the mark tag to <mark>highlight</mark> text.</p>\n+            <p><del>This line of text is meant to be treated as deleted text.</del></p>\n+            <p><s>This line of text is meant to be treated as no longer accurate.</s></p>\n+            <p><ins>This line of text is meant to be treated as an addition to the document.</ins></p>\n+            <p><u>This line of text will render as underlined.</u></p>\n+            <p><small>This line of text is meant to be treated as fine print.</small></p>\n+            <p><strong>This line rendered as bold text.</strong></p>\n+            <p><em>This line rendered as italicized text.</em></p>\n+            </div>\n+\n+            <div class="bd-example">\n+            <blockquote class="blockquote">\n+              <p>A well-known quote, contained in a blockquote element.</p>\n+              <footer class="blockquote-footer">Someone famous in <cite title="Source Title">Source Title</cite></footer>\n+            </blockquote>\n+            </div>\n+\n+            <div class="bd-example">\n+            <ul class="list-unstyled">\n+              <li>This is a list.</li>\n+              <li>It appears completely unstyled.</li>\n+              <li>Structurally, it\'s still a list.</li>\n+              <li>However, this style only applies to immediate child elements.</li>\n+              <li>Nested lists:\n+                <ul>\n+                  <li>are unaffected by this style</li>\n+                  <li>will still show a bullet</li>\n+                  <li>and have appropriate left margin</li>\n+                </ul>\n+              </li>\n+              <li>This may still come in handy in some situations.</li>\n+            </ul>\n+            </div>\n+\n+            <div class="bd-example">\n+            <ul class="list-inline">\n+              <li class="list-inline-item">This is a list item.</li>\n+              <li class="list-inline-item">And another one.</li>\n+              <li class="list-inline-item">But they\'re displayed inline.</li>\n+            </ul>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="images">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Images</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/content/images/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <svg class="bd-placeholder-img bd-placeholder-img-lg img-fluid" width="100%" height="250" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: Responsive image" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#868e96"/><text x="50%" y="50%" fill="#dee2e6" dy=".3em">Responsive image</text></svg>\n+\n+            </div>\n+\n+            <div class="bd-example">\n+            <svg class="bd-placeholder-img img-thumbnail" width="200" height="200" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="A generic square placeholder image with a white border around it, making it resemble a photograph taken with an old instant camera: 200x200" preserveAspectRatio="xMidYMid slice" focusable="false"><title>A generic square placeholder image with a white border around it, making it resemble a photograph taken with an old instant camera</title><rect width="100%" height="100%" fill="#868e96"/><text x="50%" y="50%" fill="#dee2e6" dy=".3em">200x200</text></svg>\n+\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="tables">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Tables</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/content/tables/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <table class="table table-striped">\n+              <thead>\n+              <tr>\n+                <th scope="col">#</th>\n+                <th scope="col">First</th>\n+                <th scope="col">Last</th>\n+                <th scope="col">Handle</th>\n+              </tr>\n+              </thead>\n+              <tbody>\n+              <tr>\n+                <th scope="row">1</th>\n+                <td>Mark</td>\n+                <td>Otto</td>\n+                <td>@mdo</td>\n+              </tr>\n+              <tr>\n+                <th scope="row">2</th>\n+                <td>Jacob</td>\n+                <td>Thornton</td>\n+                <td>@fat</td>\n+              </tr>\n+              <tr>\n+                <th scope="row">3</th>\n+                <td colspan="2">Larry the Bird</td>\n+                <td>@twitter</td>\n+              </tr>\n+              </tbody>\n+            </table>\n+            </div>\n+\n+            <div class="bd-example">\n+            <table class="table table-dark table-borderless">\n+              <thead>\n+              <tr>\n+                <th scope="col">#</th>\n+                <th scope="col">First</th>\n+                <th scope="col">Last</th>\n+                <th scope="col">Handle</th>\n+              </tr>\n+              </thead>\n+              <tbody>\n+              <tr>\n+                <th scope="row">1</th>\n+                <td>Mark</td>\n+                <td>Otto</td>\n+                <td>@mdo</td>\n+              </tr>\n+              <tr>\n+                <th scope="row">2</th>\n+                <td>Jacob</td>\n+                <td>Thornton</td>\n+                <td>@fat</td>\n+              </tr>\n+              <tr>\n+                <th scope="row">3</th>\n+                <td colspan="2">Larry the Bird</td>\n+                <td>@twitter</td>\n+              </tr>\n+              </tbody>\n+            </table>\n+            </div>\n+\n+            <div class="bd-example">\n+            <table class="table table-hover">\n+              <thead>\n+              <tr>\n+                <th scope="col">Class</th>\n+                <th scope="col">Heading</th>\n+                <th scope="col">Heading</th>\n+              </tr>\n+              </thead>\n+              <tbody>\n+              <tr>\n+                <th scope="row">Default</th>\n+                <td>Cell</td>\n+                <td>Cell</td>\n+              </tr>\n+              \n+              <tr class="table-primary">\n+                <th scope="row">Primary</th>\n+                <td>Cell</td>\n+                <td>Cell</td>\n+              </tr>\n+              <tr class="table-secondary">\n+                <th scope="row">Secondary</th>\n+                <td>Cell</td>\n+                <td>Cell</td>\n+              </tr>\n+              <tr class="table-success">\n+                <th scope="row">Success</th>\n+                <td>Cell</td>\n+                <td>Cell</td>\n+              </tr>\n+              <tr class="table-danger">\n+                <th scope="row">Danger</th>\n+                <td>Cell</td>\n+                <td>Cell</td>\n+              </tr>\n+              <tr class="table-warning">\n+                <th scope="row">Warning</th>\n+                <td>Cell</td>\n+                <td>Cell</td>\n+              </tr>\n+              <tr class="table-info">\n+                <th scope="row">Info</th>\n+                <td>Cell</td>\n+                <td>Cell</td>\n+              </tr>\n+              <tr class="table-light">\n+                <th scope="row">Light</th>\n+                <td>Cell</td>\n+                <td>Cell</td>\n+              </tr>\n+              <tr class="table-dark">\n+                <th scope="row">Dark</th>\n+                <td>Cell</td>\n+                <td>Cell</td>\n+              </tr>\n+              </tbody>\n+            </table>\n+            </div>\n+\n+            <div class="bd-example">\n+            <table class="table table-sm table-bordered">\n+              <thead>\n+              <tr>\n+                <th scope="col">#</th>\n+                <th scope="col">First</th>\n+                <th scope="col">Last</th>\n+                <th scope="col">Handle</th>\n+              </tr>\n+              </thead>\n+              <tbody>\n+              <tr>\n+                <th scope="row">1</th>\n+                <td>Mark</td>\n+                <td>Otto</td>\n+                <td>@mdo</td>\n+              </tr>\n+              <tr>\n+                <th scope="row">2</th>\n+                <td>Jacob</td>\n+                <td>Thornton</td>\n+                <td>@fat</td>\n+              </tr>\n+              <tr>\n+                <th scope="row">3</th>\n+                <td colspan="2">Larry the Bird</td>\n+                <td>@twitter</td>\n+              </tr>\n+              </tbody>\n+            </table>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="figures">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Figures</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/content/figures/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <figure class="figure">\n+              <svg class="bd-placeholder-img figure-img img-fluid rounded" width="400" height="300" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: 400x300" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#868e96"/><text x="50%" y="50%" fill="#dee2e6" dy=".3em">400x300</text></svg>\n+\n+              <figcaption class="figure-caption">A caption for the above image.</figcaption>\n+            </figure>\n+            </div>\n+          </div>\n+        </article>\n+      </section>\n+\n+      <section id="forms">\n+        <h2 class="sticky-xl-top fw-bold pt-3 pt-xl-5 pb-2 pb-xl-3">Forms</h2>\n+\n+        <article class="my-3" id="overview">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Overview</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/forms/overview/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <form>\n+              <div class="mb-3">\n+                <label for="exampleInputEmail1" class="form-label">Email address</label>\n+                <input type="email" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp">\n+                <div id="emailHelp" class="form-text">We\'ll never share your email with anyone else.</div>\n+              </div>\n+              <div class="mb-3">\n+                <label for="exampleInputPassword1" class="form-label">Password</label>\n+                <input type="password" class="form-control" id="exampleInputPassword1">\n+              </div>\n+              <div class="mb-3 form-check">\n+                <input type="checkbox" class="form-check-input" id="exampleCheck1">\n+                <label class="form-check-label" for="exampleCheck1">Check me out</label>\n+              </div>\n+              <fieldset class="mb-3">\n+                <legend>Radios buttons</legend>\n+                <div class="form-check">\n+                  <input type="radio" name="radios" class="form-check-input" id="exampleRadio1">\n+                  <label class="form-check-label" for="exampleRadio1">Default radio</label>\n+                </div>\n+                <div class="mb-3 form-check">\n+                  <input type="radio" name="radios" class="form-check-input" id="exampleRadio2">\n+                  <label class="form-check-label" for="exampleRadio2">Another radio</label>\n+                </div>\n+              </fieldset>\n+              <div class="mb-3">\n+                <label class="form-label" for="customFile">Upload</label>\n+                <input type="file" class="form-control" id="customFile">\n+              </div>\n+              <div class="mb-3 form-check form-switch">\n+                <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckChecked" checked>\n+                <label class="form-check-label" for="flexSwitchCheckChecked">Checked switch checkbox input</label>\n+              </div>\n+              <div class="mb-3">\n+                <label for="customRange3" class="form-label">Example range</label>\n+                <input type="range" class="form-range" min="0" max="5" step="0.5" id="customRange3">\n+              </div>\n+              <button type="submit" class="btn btn-primary">Submit</button>\n+            </form>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="disabled-forms">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Disabled forms</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/forms/overview/#disabled-forms">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <form>\n+              <fieldset disabled aria-label="Disabled fieldset example">\n+                <div class="mb-3">\n+                  <label for="disabledTextInput" class="form-label">Disabled input</label>\n+                  <input type="text" id="disabledTextInput" class="form-control" placeholder="Disabled input">\n+                </div>\n+                <div class="mb-3">\n+                  <label for="disabledSelect" class="form-label">Disabled select menu</label>\n+                  <select id="disabledSelect" class="form-select">\n+                    <option>Disabled select</option>\n+                  </select>\n+                </div>\n+                <div class="mb-3">\n+                  <div class="form-check">\n+                    <input class="form-check-input" type="checkbox" id="disabledFieldsetCheck" disabled>\n+                    <label class="form-check-label" for="disabledFieldsetCheck">\n+                      Can\'t check this\n+                    </label>\n+                  </div>\n+                </div>\n+                <fieldset class="mb-3">\n+                  <legend>Disabled radios buttons</legend>\n+                  <div class="form-check">\n+                    <input type="radio" name="radios" class="form-check-input" id="disabledRadio1" disabled>\n+                    <label class="form-check-label" for="disabledRadio1">Disabled radio</label>\n+                  </div>\n+                  <div class="mb-3 form-check">\n+                    <input type="radio" name="radios" class="form-check-input" id="disabledRadio2" disabled>\n+                    <label class="form-check-label" for="disabledRadio2">Another radio</label>\n+                  </div>\n+                </fieldset>\n+                <div class="mb-3">\n+                  <label class="form-label" for="disabledCustomFile">Upload</label>\n+                  <input type="file" class="form-control" id="disabledCustomFile" disabled>\n+                </div>\n+                <div class="mb-3 form-check form-switch">\n+                  <input class="form-check-input" type="checkbox" role="switch" id="disabledSwitchCheckChecked" checked disabled>\n+                  <label class="form-check-label" for="disabledSwitchCheckChecked">Disabled checked switch checkbox input</label>\n+                </div>\n+                <div class="mb-3">\n+                  <label for="disabledRange" class="form-label">Disabled range</label>\n+                  <input type="range" class="form-range" min="0" max="5" step="0.5" id="disabledRange">\n+                </div>\n+                <button type="submit" class="btn btn-primary">Submit</button>\n+              </fieldset>\n+            </form>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="sizing">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Sizing</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/forms/form-control/#sizing">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <div class="mb-3">\n+              <input class="form-control form-control-lg" type="text" placeholder=".form-control-lg" aria-label=".form-control-lg example">\n+            </div>\n+            <div class="mb-3">\n+              <select class="form-select form-select-lg mb-3" aria-label=".form-select-lg example">\n+                <option selected>Open this select menu</option>\n+                <option value="1">One</option>\n+                <option value="2">Two</option>\n+                <option value="3">Three</option>\n+              </select>\n+            </div>\n+            <div class="mb-3">\n+              <input type="file" class="form-control form-control-lg" aria-label="Large file input example">\n+            </div>\n+            </div>\n+\n+            <div class="bd-example">\n+            <div class="mb-3">\n+              <input class="form-control form-control-sm" type="text" placeholder=".form-control-sm" aria-label=".form-control-sm example">\n+            </div>\n+            <div class="mb-3">\n+              <select class="form-select form-select-sm" aria-label=".form-select-sm example">\n+                <option selected>Open this select menu</option>\n+                <option value="1">One</option>\n+                <option value="2">Two</option>\n+                <option value="3">Three</option>\n+              </select>\n+            </div>\n+            <div class="mb-3">\n+              <input type="file" class="form-control form-control-sm" aria-label="Small file input example">\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="input-group">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Input group</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/forms/input-group/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <div class="input-group mb-3">\n+              <span class="input-group-text" id="basic-addon1">@</span>\n+              <input type="text" class="form-control" placeholder="Username" aria-label="Username" aria-describedby="basic-addon1">\n+            </div>\n+            <div class="input-group mb-3">\n+              <input type="text" class="form-control" placeholder="Recipient\'s username" aria-label="Recipient\'s username" aria-describedby="basic-addon2">\n+              <span class="input-group-text" id="basic-addon2">@example.com</span>\n+            </div>\n+            <label for="basic-url" class="form-label">Your vanity URL</label>\n+            <div class="input-group mb-3">\n+              <span class="input-group-text" id="basic-addon3">https://example.com/users/</span>\n+              <input type="text" class="form-control" id="basic-url" aria-describedby="basic-addon3">\n+            </div>\n+            <div class="input-group mb-3">\n+              <span class="input-group-text">$</span>\n+              <input type="text" class="form-control" aria-label="Amount (to the nearest dollar)">\n+              <span class="input-group-text">.00</span>\n+            </div>\n+            <div class="input-group">\n+              <span class="input-group-text">With textarea</span>\n+              <textarea class="form-control" aria-label="With textarea"></textarea>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="floating-labels">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Floating labels</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/forms/floating-labels/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <form>\n+              <div class="form-floating mb-3">\n+                <input type="email" class="form-control" id="floatingInput" placeholder="name@example.com">\n+                <label for="floatingInput">Email address</label>\n+              </div>\n+              <div class="form-floating">\n+                <input type="password" class="form-control" id="floatingPassword" placeholder="Password">\n+                <label for="floatingPassword">Password</label>\n+              </div>\n+            </form>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="validation">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Validation</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/forms/validation/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <form class="row g-3">\n+              <div class="col-md-4">\n+                <label for="validationServer01" class="form-label">First name</label>\n+                <input type="text" class="form-control is-valid" id="validationServer01" value="Mark" required>\n+                <div class="valid-feedback">\n+                  Looks good!\n+                </div>\n+              </div>\n+              <div class="col-md-4">\n+                <label for="validationServer02" class="form-label">Last name</label>\n+                <input type="text" class="form-control is-valid" id="validationServer02" value="Otto" required>\n+                <div class="valid-feedback">\n+                  Looks good!\n+                </div>\n+              </div>\n+              <div class="col-md-4">\n+                <label for="validationServerUsername" class="form-label">Username</label>\n+                <div class="input-group has-validation">\n+                  <span class="input-group-text" id="inputGroupPrepend3">@</span>\n+                  <input type="text" class="form-control is-invalid" id="validationServerUsername" aria-describedby="inputGroupPrepend3" required>\n+                  <div class="invalid-feedback">\n+                    Please choose a username.\n+                  </div>\n+                </div>\n+              </div>\n+              <div class="col-md-6">\n+                <label for="validationServer03" class="form-label">City</label>\n+                <input type="text" class="form-control is-invalid" id="validationServer03" required>\n+                <div class="invalid-feedback">\n+                  Please provide a valid city.\n+                </div>\n+              </div>\n+              <div class="col-md-3">\n+                <label for="validationServer04" class="form-label">State</label>\n+                <select class="form-select is-invalid" id="validationServer04" required>\n+                  <option selected disabled value="">Choose...</option>\n+                  <option>...</option>\n+                </select>\n+                <div class="invalid-feedback">\n+                  Please select a valid state.\n+                </div>\n+              </div>\n+              <div class="col-md-3">\n+                <label for="validationServer05" class="form-label">Zip</label>\n+                <input type="text" class="form-control is-invalid" id="validationServer05" required>\n+                <div class="invalid-feedback">\n+                  Please provide a valid zip.\n+                </div>\n+              </div>\n+              <div class="col-12">\n+                <div class="form-check">\n+                  <input class="form-check-input is-invalid" type="checkbox" value="" id="invalidCheck3" required>\n+                  <label class="form-check-label" for="invalidCheck3">\n+                    Agree to terms and conditions\n+                  </label>\n+                  <div class="invalid-feedback">\n+                    You must agree before submitting.\n+                  </div>\n+                </div>\n+              </div>\n+              <div class="col-12">\n+                <button class="btn btn-primary" type="submit">Submit form</button>\n+              </div>\n+            </form>\n+            </div>\n+          </div>\n+        </article>\n+      </section>\n+\n+      <section id="components">\n+        <h2 class="sticky-xl-top fw-bold pt-3 pt-xl-5 pb-2 pb-xl-3">Components</h2>\n+\n+        <article class="my-3" id="accordion">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Accordion</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/accordion/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <div class="accordion" id="accordionExample">\n+              <div class="accordion-item">\n+                <h4 class="accordion-header" id="headingOne">\n+                  <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">\n+                    Accordion Item #1\n+                  </button>\n+                </h4>\n+                <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#accordionExample">\n+                  <div class="accordion-body">\n+                    <strong>This is the first item\'s accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It\'s also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n+                  </div>\n+                </div>\n+              </div>\n+              <div class="accordion-item">\n+                <h4 class="accordion-header" id="headingTwo">\n+                  <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">\n+                    Accordion Item #2\n+                  </button>\n+                </h4>\n+                <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#accordionExample">\n+                  <div class="accordion-body">\n+                    <strong>This is the second item\'s accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It\'s also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n+                  </div>\n+                </div>\n+              </div>\n+              <div class="accordion-item">\n+                <h4 class="accordion-header" id="headingThree">\n+                  <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">\n+                    Accordion Item #3\n+                  </button>\n+                </h4>\n+                <div id="collapseThree" class="accordion-collapse collapse" aria-labelledby="headingThree" data-bs-parent="#accordionExample">\n+                  <div class="accordion-body">\n+                    <strong>This is the third item\'s accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It\'s also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n+                  </div>\n+                </div>\n+              </div>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="alerts">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Alerts</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/alerts/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            \n+            <div class="alert alert-primary alert-dismissible fade show" role="alert">\n+              A simple primary alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.\n+              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n+            </div>\n+            <div class="alert alert-secondary alert-dismissible fade show" role="alert">\n+              A simple secondary alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.\n+              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n+            </div>\n+            <div class="alert alert-success alert-dismissible fade show" role="alert">\n+              A simple success alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.\n+              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n+            </div>\n+            <div class="alert alert-danger alert-dismissible fade show" role="alert">\n+              A simple danger alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.\n+              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n+            </div>\n+            <div class="alert alert-warning alert-dismissible fade show" role="alert">\n+              A simple warning alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.\n+              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n+            </div>\n+            <div class="alert alert-info alert-dismissible fade show" role="alert">\n+              A simple info alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.\n+              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n+            </div>\n+            <div class="alert alert-light alert-dismissible fade show" role="alert">\n+              A simple light alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.\n+              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n+            </div>\n+            <div class="alert alert-dark alert-dismissible fade show" role="alert">\n+              A simple dark alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.\n+              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n+            </div>\n+            </div>\n+\n+            <div class="bd-example">\n+            <div class="alert alert-success" role="alert">\n+              <h4 class="alert-heading">Well done!</h4>\n+              <p>Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.</p>\n+              <hr>\n+              <p class="mb-0">Whenever you need to, be sure to use margin utilities to keep things nice and tidy.</p>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="badge">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Badge</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/badge/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <p class="h1">Example heading <span class="badge bg-primary">New</span></p>\n+            <p class="h2">Example heading <span class="badge bg-secondary">New</span></p>\n+            <p class="h3">Example heading <span class="badge bg-success">New</span></p>\n+            <p class="h4">Example heading <span class="badge bg-danger">New</span></p>\n+            <p class="h5">Example heading <span class="badge bg-warning text-dark">New</span></p>\n+            <p class="h6">Example heading <span class="badge bg-info text-dark">New</span></p>\n+            <p class="h6">Example heading <span class="badge bg-light text-dark">New</span></p>\n+            <p class="h6">Example heading <span class="badge bg-dark">New</span></p>\n+            </div>\n+\n+            <div class="bd-example">\n+            \n+            <span class="badge rounded-pill bg-primary">Primary</span>\n+            <span class="badge rounded-pill bg-secondary">Secondary</span>\n+            <span class="badge rounded-pill bg-success">Success</span>\n+            <span class="badge rounded-pill bg-danger">Danger</span>\n+            <span class="badge rounded-pill bg-warning text-dark">Warning</span>\n+            <span class="badge rounded-pill bg-info text-dark">Info</span>\n+            <span class="badge rounded-pill bg-light text-dark">Light</span>\n+            <span class="badge rounded-pill bg-dark">Dark</span>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="breadcrumb">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Breadcrumb</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/breadcrumb/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <nav aria-label="breadcrumb">\n+              <ol class="breadcrumb">\n+                <li class="breadcrumb-item"><a href="#">Home</a></li>\n+                <li class="breadcrumb-item"><a href="#">Library</a></li>\n+                <li class="breadcrumb-item active" aria-current="page">Data</li>\n+              </ol>\n+            </nav>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="buttons">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Buttons</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/buttons/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            \n+            <button type="button" class="btn btn-primary">Primary</button>\n+            <button type="button" class="btn btn-secondary">Secondary</button>\n+            <button type="button" class="btn btn-success">Success</button>\n+            <button type="button" class="btn btn-danger">Danger</button>\n+            <button type="button" class="btn btn-warning">Warning</button>\n+            <button type="button" class="btn btn-info">Info</button>\n+            <button type="button" class="btn btn-light">Light</button>\n+            <button type="button" class="btn btn-dark">Dark</button>\n+\n+            <button type="button" class="btn btn-link">Link</button>\n+            </div>\n+\n+            <div class="bd-example">\n+            \n+            <button type="button" class="btn btn-outline-primary">Primary</button>\n+            <button type="button" class="btn btn-outline-secondary">Secondary</button>\n+            <button type="button" class="btn btn-outline-success">Success</button>\n+            <button type="button" class="btn btn-outline-danger">Danger</button>\n+            <button type="button" class="btn btn-outline-warning">Warning</button>\n+            <button type="button" class="btn btn-outline-info">Info</button>\n+            <button type="button" class="btn btn-outline-light">Light</button>\n+            <button type="button" class="btn btn-outline-dark">Dark</button>\n+            </div>\n+\n+            <div class="bd-example">\n+            <button type="button" class="btn btn-primary btn-sm">Small button</button>\n+            <button type="button" class="btn btn-primary">Standard button</button>\n+            <button type="button" class="btn btn-primary btn-lg">Large button</button>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="button-group">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Button group</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/button-group/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <div class="btn-toolbar" role="toolbar" aria-label="Toolbar with button groups">\n+              <div class="btn-group me-2" role="group" aria-label="First group">\n+                <button type="button" class="btn btn-secondary">1</button>\n+                <button type="button" class="btn btn-secondary">2</button>\n+                <button type="button" class="btn btn-secondary">3</button>\n+                <button type="button" class="btn btn-secondary">4</button>\n+              </div>\n+              <div class="btn-group me-2" role="group" aria-label="Second group">\n+                <button type="button" class="btn btn-secondary">5</button>\n+                <button type="button" class="btn btn-secondary">6</button>\n+                <button type="button" class="btn btn-secondary">7</button>\n+              </div>\n+              <div class="btn-group" role="group" aria-label="Third group">\n+                <button type="button" class="btn btn-secondary">8</button>\n+              </div>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="card">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Card</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/card/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <div class="row  row-cols-1 row-cols-md-2 g-4">\n+              <div class="col">\n+                <div class="card">\n+                  <svg class="bd-placeholder-img card-img-top" width="100%" height="180" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: Image cap" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#868e96"/><text x="50%" y="50%" fill="#dee2e6" dy=".3em">Image cap</text></svg>\n+\n+                  <div class="card-body">\n+                    <h5 class="card-title">Card title</h5>\n+                    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card\'s content.</p>\n+                    <a href="#" class="btn btn-primary">Go somewhere</a>\n+                  </div>\n+                </div>\n+              </div>\n+              <div class="col">\n+                <div class="card">\n+                  <div class="card-header">\n+                    Featured\n+                  </div>\n+                  <div class="card-body">\n+                    <h5 class="card-title">Card title</h5>\n+                    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card\'s content.</p>\n+                    <a href="#" class="btn btn-primary">Go somewhere</a>\n+                  </div>\n+                  <div class="card-footer text-muted">\n+                    2 days ago\n+                  </div>\n+                </div>\n+              </div>\n+              <div class="col">\n+                <div class="card">\n+                  <div class="card-body">\n+                    <h5 class="card-title">Card title</h5>\n+                    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card\'s content.</p>\n+                  </div>\n+                  <ul class="list-group list-group-flush">\n+                    <li class="list-group-item">An item</li>\n+                    <li class="list-group-item">A second item</li>\n+                    <li class="list-group-item">A third item</li>\n+                  </ul>\n+                  <div class="card-body">\n+                    <a href="#" class="card-link">Card link</a>\n+                    <a href="#" class="card-link">Another link</a>\n+                  </div>\n+                </div>\n+              </div>\n+              <div class="col">\n+                <div class="card">\n+                  <div class="row g-0">\n+                    <div class="col-md-4">\n+                      <svg class="bd-placeholder-img" width="100%" height="250" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: Image" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#868e96"/><text x="50%" y="50%" fill="#dee2e6" dy=".3em">Image</text></svg>\n+\n+                    </div>\n+                    <div class="col-md-8">\n+                      <div class="card-body">\n+                        <h5 class="card-title">Card title</h5>\n+                        <p class="card-text">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\n+                        <p class="card-text"><small class="text-muted">Last updated 3 mins ago</small></p>\n+                      </div>\n+                    </div>\n+                  </div>\n+                </div>\n+              </div>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="carousel">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Carousel</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/carousel/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <div id="carouselExampleCaptions" class="carousel slide" data-bs-ride="carousel">\n+              <div class="carousel-indicators">\n+                <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>\n+                <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="1" aria-label="Slide 2"></button>\n+                <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="2" aria-label="Slide 3"></button>\n+              </div>\n+              <div class="carousel-inner">\n+                <div class="carousel-item active">\n+                  <svg class="bd-placeholder-img bd-placeholder-img-lg d-block w-100" width="800" height="400" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: First slide" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#777"/><text x="50%" y="50%" fill="#555" dy=".3em">First slide</text></svg>\n+\n+                  <div class="carousel-caption d-none d-md-block">\n+                    <h5>First slide label</h5>\n+                    <p>Some representative placeholder content for the first slide.</p>\n+                  </div>\n+                </div>\n+                <div class="carousel-item">\n+                  <svg class="bd-placeholder-img bd-placeholder-img-lg d-block w-100" width="800" height="400" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: Second slide" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#666"/><text x="50%" y="50%" fill="#444" dy=".3em">Second slide</text></svg>\n+\n+                  <div class="carousel-caption d-none d-md-block">\n+                    <h5>Second slide label</h5>\n+                    <p>Some representative placeholder content for the second slide.</p>\n+                  </div>\n+                </div>\n+                <div class="carousel-item">\n+                  <svg class="bd-placeholder-img bd-placeholder-img-lg d-block w-100" width="800" height="400" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: Third slide" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#555"/><text x="50%" y="50%" fill="#333" dy=".3em">Third slide</text></svg>\n+\n+                  <div class="carousel-caption d-none d-md-block">\n+                    <h5>Third slide label</h5>\n+                    <p>Some representative placeholder content for the third slide.</p>\n+                  </div>\n+                </div>\n+              </div>\n+              <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleCaptions"  data-bs-slide="prev">\n+                <span class="carousel-control-prev-icon" aria-hidden="true"></span>\n+                <span class="visually-hidden">Previous</span>\n+              </button>\n+              <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleCaptions"  data-bs-slide="next">\n+                <span class="carousel-control-next-icon" aria-hidden="true"></span>\n+                <span class="visually-hidden">Next</span>\n+              </button>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="dropdowns">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Dropdowns</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/dropdowns/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <div class="btn-group w-100 align-items-center justify-content-between flex-wrap">\n+              <div class="dropdown">\n+                <button class="btn btn-secondary btn-sm dropdown-toggle" type="button" id="dropdownMenuButtonSM" data-bs-toggle="dropdown" aria-expanded="false">\n+                  Dropdown button\n+                </button>\n+                <ul class="dropdown-menu" aria-labelledby="dropdownMenuButtonSM">\n+                  <li><h6 class="dropdown-header">Dropdown header</h6></li>\n+                  <li><a class="dropdown-item" href="#">Action</a></li>\n+                  <li><a class="dropdown-item" href="#">Another action</a></li>\n+                  <li><a class="dropdown-item" href="#">Something else here</a></li>\n+                  <li><hr class="dropdown-divider"></li>\n+                  <li><a class="dropdown-item" href="#">Separated link</a></li>\n+                </ul>\n+              </div>\n+              <div class="dropdown">\n+                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">\n+                  Dropdown button\n+                </button>\n+                <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">\n+                  <li><h6 class="dropdown-header">Dropdown header</h6></li>\n+                  <li><a class="dropdown-item" href="#">Action</a></li>\n+                  <li><a class="dropdown-item" href="#">Another action</a></li>\n+                  <li><a class="dropdown-item" href="#">Something else here</a></li>\n+                  <li><hr class="dropdown-divider"></li>\n+                  <li><a class="dropdown-item" href="#">Separated link</a></li>\n+                </ul>\n+              </div>\n+              <div class="dropdown">\n+                <button class="btn btn-secondary btn-lg dropdown-toggle" type="button" id="dropdownMenuButtonLG" data-bs-toggle="dropdown" aria-expanded="false">\n+                  Dropdown button\n+                </button>\n+                <ul class="dropdown-menu" aria-labelledby="dropdownMenuButtonLG">\n+                  <li><h6 class="dropdown-header">Dropdown header</h6></li>\n+                  <li><a class="dropdown-item" href="#">Action</a></li>\n+                  <li><a class="dropdown-item" href="#">Another action</a></li>\n+                  <li><a class="dropdown-item" href="#">Something else here</a></li>\n+                  <li><hr class="dropdown-divider"></li>\n+                  <li><a class="dropdown-item" href="#">Separated link</a></li>\n+                </ul>\n+              </div>\n+            </div>\n+            </div>\n+\n+            <div class="bd-example">\n+            <div class="btn-group">\n+              <button type="button" class="btn btn-primary">Primary</button>\n+              <button type="button" class="btn btn-primary dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">\n+                <span class="visually-hidden">Toggle Dropdown</span>\n+              </button>\n+              <ul class="dropdown-menu">\n+                <li><a class="dropdown-item" href="#">Action</a></li>\n+                <li><a class="dropdown-item" href="#">Another action</a></li>\n+                <li><a class="dropdown-item" href="#">Something else here</a></li>\n+              </ul>\n+            </div><!-- /btn-group -->\n+            <div class="btn-group">\n+              <button type="button" class="btn btn-secondary">Secondary</button>\n+              <button type="button" class="btn btn-secondary dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">\n+                <span class="visually-hidden">Toggle Dropdown</span>\n+              </button>\n+              <ul class="dropdown-menu">\n+                <li><a class="dropdown-item" href="#">Action</a></li>\n+                <li><a class="dropdown-item" href="#">Another action</a></li>\n+                <li><a class="dropdown-item" href="#">Something else here</a></li>\n+              </ul>\n+            </div><!-- /btn-group -->\n+            <div class="btn-group">\n+              <button type="button" class="btn btn-success">Success</button>\n+              <button type="button" class="btn btn-success dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">\n+                <span class="visually-hidden">Toggle Dropdown</span>\n+              </button>\n+              <ul class="dropdown-menu">\n+                <li><a class="dropdown-item" href="#">Action</a></li>\n+                <li><a class="dropdown-item" href="#">Another action</a></li>\n+                <li><a class="dropdown-item" href="#">Something else here</a></li>\n+              </ul>\n+            </div><!-- /btn-group -->\n+            <div class="btn-group">\n+              <button type="button" class="btn btn-info">Info</button>\n+              <button type="button" class="btn btn-info dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">\n+                <span class="visually-hidden">Toggle Dropdown</span>\n+              </button>\n+              <ul class="dropdown-menu">\n+                <li><a class="dropdown-item" href="#">Action</a></li>\n+                <li><a class="dropdown-item" href="#">Another action</a></li>\n+                <li><a class="dropdown-item" href="#">Something else here</a></li>\n+              </ul>\n+            </div><!-- /btn-group -->\n+            <div class="btn-group">\n+              <button type="button" class="btn btn-warning">Warning</button>\n+              <button type="button" class="btn btn-warning dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">\n+                <span class="visually-hidden">Toggle Dropdown</span>\n+              </button>\n+              <ul class="dropdown-menu">\n+                <li><a class="dropdown-item" href="#">Action</a></li>\n+                <li><a class="dropdown-item" href="#">Another action</a></li>\n+                <li><a class="dropdown-item" href="#">Something else here</a></li>\n+              </ul>\n+            </div><!-- /btn-group -->\n+            <div class="btn-group">\n+              <button type="button" class="btn btn-danger">Danger</button>\n+              <button type="button" class="btn btn-danger dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">\n+                <span class="visually-hidden">Toggle Dropdown</span>\n+              </button>\n+              <ul class="dropdown-menu">\n+                <li><a class="dropdown-item" href="#">Action</a></li>\n+                <li><a class="dropdown-item" href="#">Another action</a></li>\n+                <li><a class="dropdown-item" href="#">Something else here</a></li>\n+              </ul>\n+            </div><!-- /btn-group -->\n+            </div>\n+\n+            <div class="bd-example">\n+            <div class="btn-group w-100 align-items-center justify-content-between flex-wrap">\n+              <div class="dropend">\n+                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropendMenuButton" data-bs-toggle="dropdown" aria-expanded="false">\n+                  Dropend button\n+                </button>\n+                <ul class="dropdown-menu" aria-labelledby="dropendMenuButton">\n+                  <li><h6 class="dropdown-header">Dropdown header</h6></li>\n+                  <li><a class="dropdown-item" href="#">Action</a></li>\n+                  <li><a class="dropdown-item" href="#">Another action</a></li>\n+                  <li><a class="dropdown-item" href="#">Something else here</a></li>\n+                  <li><hr class="dropdown-divider"></li>\n+                  <li><a class="dropdown-item" href="#">Separated link</a></li>\n+                </ul>\n+              </div>\n+              <div class="dropup">\n+                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropupMenuButton" data-bs-toggle="dropdown" aria-expanded="false">\n+                  Dropup button\n+                </button>\n+                <ul class="dropdown-menu" aria-labelledby="dropupMenuButton">\n+                  <li><h6 class="dropdown-header">Dropdown header</h6></li>\n+                  <li><a class="dropdown-item" href="#">Action</a></li>\n+                  <li><a class="dropdown-item" href="#">Another action</a></li>\n+                  <li><a class="dropdown-item" href="#">Something else here</a></li>\n+                  <li><hr class="dropdown-divider"></li>\n+                  <li><a class="dropdown-item" href="#">Separated link</a></li>\n+                </ul>\n+              </div>\n+              <div class="dropstart">\n+                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropstartMenuButton" data-bs-toggle="dropdown" aria-expanded="false">\n+                  Dropstart button\n+                </button>\n+                <ul class="dropdown-menu" aria-labelledby="dropstartMenuButton">\n+                  <li><h6 class="dropdown-header">Dropdown header</h6></li>\n+                  <li><a class="dropdown-item" href="#">Action</a></li>\n+                  <li><a class="dropdown-item" href="#">Another action</a></li>\n+                  <li><a class="dropdown-item" href="#">Something else here</a></li>\n+                  <li><hr class="dropdown-divider"></li>\n+                  <li><a class="dropdown-item" href="#">Separated link</a></li>\n+                </ul>\n+              </div>\n+            </div>\n+            </div>\n+\n+            <div class="bd-example">\n+            <div class="btn-group">\n+              <div class="dropdown">\n+                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownRightMenuButton" data-bs-toggle="dropdown" aria-expanded="false">\n+                  End-aligned menu\n+                </button>\n+                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownRightMenuButton">\n+                  <li><h6 class="dropdown-header">Dropdown header</h6></li>\n+                  <li><a class="dropdown-item" href="#">Action</a></li>\n+                  <li><a class="dropdown-item" href="#">Another action</a></li>\n+                  <li><hr class="dropdown-divider"></li>\n+                  <li><a class="dropdown-item" href="#">Separated link</a></li>\n+                </ul>\n+              </div>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="list-group">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>List group</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/list-group/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <ul class="list-group">\n+              <li class="list-group-item disabled" aria-disabled="true">A disabled item</li>\n+              <li class="list-group-item">A second item</li>\n+              <li class="list-group-item">A third item</li>\n+              <li class="list-group-item">A fourth item</li>\n+              <li class="list-group-item">And a fifth one</li>\n+            </ul>\n+            </div>\n+\n+            <div class="bd-example">\n+            <ul class="list-group list-group-flush">\n+              <li class="list-group-item">An item</li>\n+              <li class="list-group-item">A second item</li>\n+              <li class="list-group-item">A third item</li>\n+              <li class="list-group-item">A fourth item</li>\n+              <li class="list-group-item">And a fifth one</li>\n+            </ul>\n+            </div>\n+\n+            <div class="bd-example">\n+            <div class="list-group">\n+              <a href="#" class="list-group-item list-group-item-action">A simple default list group item</a>\n+              \n+              <a href="#" class="list-group-item list-group-item-action list-group-item-primary">A simple primary list group item</a>\n+              <a href="#" class="list-group-item list-group-item-action list-group-item-secondary">A simple secondary list group item</a>\n+              <a href="#" class="list-group-item list-group-item-action list-group-item-success">A simple success list group item</a>\n+              <a href="#" class="list-group-item list-group-item-action list-group-item-danger">A simple danger list group item</a>\n+              <a href="#" class="list-group-item list-group-item-action list-group-item-warning">A simple warning list group item</a>\n+              <a href="#" class="list-group-item list-group-item-action list-group-item-info">A simple info list group item</a>\n+              <a href="#" class="list-group-item list-group-item-action list-group-item-light">A simple light list group item</a>\n+              <a href="#" class="list-group-item list-group-item-action list-group-item-dark">A simple dark list group item</a>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="modal">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Modal</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/modal/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <div class="d-flex justify-content-between flex-wrap">\n+              <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModalDefault">\n+                Launch demo modal\n+              </button>\n+              <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdropLive">\n+                Launch static backdrop modal\n+              </button>\n+              <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModalCenteredScrollable">\n+                Vertically centered scrollable modal\n+              </button>\n+              <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModalFullscreen">\n+                Full screen\n+              </button>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="navs">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Navs</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/navs-tabs/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <nav class="nav">\n+              <a class="nav-link active" aria-current="page" href="#">Active</a>\n+              <a class="nav-link" href="#">Link</a>\n+              <a class="nav-link" href="#">Link</a>\n+              <a class="nav-link disabled">Disabled</a>\n+            </nav>\n+            </div>\n+\n+            <div class="bd-example">\n+            <nav>\n+              <div class="nav nav-tabs mb-3" id="nav-tab" role="tablist">\n+                <button class="nav-link active" id="nav-home-tab" data-bs-toggle="tab" data-bs-target="#nav-home" type="button" role="tab" aria-controls="nav-home" aria-selected="true">Home</button>\n+                <button class="nav-link" id="nav-profile-tab" data-bs-toggle="tab" data-bs-target="#nav-profile" type="button" role="tab" aria-controls="nav-profile" aria-selected="false">Profile</button>\n+                <button class="nav-link" id="nav-contact-tab" data-bs-toggle="tab" data-bs-target="#nav-contact" type="button" role="tab" aria-controls="nav-contact" aria-selected="false">Contact</button>\n+              </div>\n+            </nav>\n+            <div class="tab-content" id="nav-tabContent">\n+              <div class="tab-pane fade show active" id="nav-home" role="tabpanel" aria-labelledby="nav-home-tab">\n+                <p><strong>This is some placeholder content the Home tab\'s associated content.</strong> Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other <code>.nav</code>-powered navigation.</p>\n+              </div>\n+              <div class="tab-pane fade" id="nav-profile" role="tabpanel" aria-labelledby="nav-profile-tab">\n+                <p><strong>This is some placeholder content the Profile tab\'s associated content.</strong> Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other <code>.nav</code>-powered navigation.</p>\n+              </div>\n+              <div class="tab-pane fade" id="nav-contact" role="tabpanel" aria-labelledby="nav-contact-tab">\n+                <p><strong>This is some placeholder content the Contact tab\'s associated content.</strong> Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other <code>.nav</code>-powered navigation.</p>\n+              </div>\n+            </div>\n+            </div>\n+\n+            <div class="bd-example">\n+            <ul class="nav nav-pills">\n+              <li class="nav-item">\n+                <a class="nav-link active" aria-current="page" href="#">Active</a>\n+              </li>\n+              <li class="nav-item">\n+                <a class="nav-link" href="#">Link</a>\n+              </li>\n+              <li class="nav-item">\n+                <a class="nav-link" href="#">Link</a>\n+              </li>\n+              <li class="nav-item">\n+                <a class="nav-link disabled">Disabled</a>\n+              </li>\n+            </ul>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="navbar">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Navbar</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/navbar/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <nav class="navbar navbar-expand-lg navbar-light bg-light">\n+              <div class="container-fluid">\n+                <a class="navbar-brand" href="#">\n+                  <img src="https://getbootstrap.com/docs/5.1/assets/brand/bootstrap-logo-white.svg" width="38" height="30" class="d-inline-block align-top" alt="Bootstrap" loading="lazy"\n+                      style="filter: invert(1) grayscale(100%) brightness(200%);">\n+                </a>\n+                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">\n+                  <span class="navbar-toggler-icon"></span>\n+                </button>\n+                <div class="collapse navbar-collapse" id="navbarSupportedContent">\n+                  <ul class="navbar-nav me-auto mb-2 mb-lg-0">\n+                    <li class="nav-item">\n+                      <a class="nav-link active" aria-current="page" href="#">Home</a>\n+                    </li>\n+                    <li class="nav-item">\n+                      <a class="nav-link" href="#">Link</a>\n+                    </li>\n+                    <li class="nav-item dropdown">\n+                      <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">\n+                        Dropdown\n+                      </a>\n+                      <ul class="dropdown-menu" aria-labelledby="navbarDropdown">\n+                        <li><a class="dropdown-item" href="#">Action</a></li>\n+                        <li><a class="dropdown-item" href="#">Another action</a></li>\n+                        <li><hr class="dropdown-divider"></li>\n+                        <li><a class="dropdown-item" href="#">Something else here</a></li>\n+                      </ul>\n+                    </li>\n+                    <li class="nav-item">\n+                      <a class="nav-link disabled">Disabled</a>\n+                    </li>\n+                  </ul>\n+                  <form class="d-flex">\n+                    <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">\n+                    <button class="btn btn-outline-dark" type="submit">Search</button>\n+                  </form>\n+                </div>\n+              </div>\n+            </nav>\n+\n+            <nav class="navbar navbar-expand-lg navbar-dark bg-primary mt-5">\n+              <div class="container-fluid">\n+                <a class="navbar-brand" href="#">\n+                  <img src="https://getbootstrap.com/docs/5.1/assets/brand/bootstrap-logo-white.svg" width="38" height="30" class="d-inline-block align-top" alt="Bootstrap" loading="lazy">\n+                </a>\n+                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent2" aria-controls="navbarSupportedContent2" aria-expanded="false" aria-label="Toggle navigation">\n+                  <span class="navbar-toggler-icon"></span>\n+                </button>\n+                <div class="collapse navbar-collapse" id="navbarSupportedContent2">\n+                  <ul class="navbar-nav me-auto mb-2 mb-lg-0">\n+                    <li class="nav-item">\n+                      <a class="nav-link active" aria-current="page" href="#">Home</a>\n+                    </li>\n+                    <li class="nav-item">\n+                      <a class="nav-link" href="#">Link</a>\n+                    </li>\n+                    <li class="nav-item dropdown">\n+                      <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown2" role="button" data-bs-toggle="dropdown" aria-expanded="false">\n+                        Dropdown\n+                      </a>\n+                      <ul class="dropdown-menu" aria-labelledby="navbarDropdown2">\n+                        <li><a class="dropdown-item" href="#">Action</a></li>\n+                        <li><a class="dropdown-item" href="#">Another action</a></li>\n+                        <li><hr class="dropdown-divider"></li>\n+                        <li><a class="dropdown-item" href="#">Something else here</a></li>\n+                      </ul>\n+                    </li>\n+                    <li class="nav-item">\n+                      <a class="nav-link disabled">Disabled</a>\n+                    </li>\n+                  </ul>\n+                  <form class="d-flex">\n+                    <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">\n+                    <button class="btn btn-outline-light" type="submit">Search</button>\n+                  </form>\n+                </div>\n+              </div>\n+            </nav>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="pagination">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Pagination</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/pagination/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <nav aria-label="Pagination example">\n+              <ul class="pagination pagination-sm">\n+                <li class="page-item"><a class="page-link" href="#">1</a></li>\n+                <li class="page-item active" aria-current="page">\n+                  <a class="page-link" href="#">2</a>\n+                </li>\n+                <li class="page-item"><a class="page-link" href="#">3</a></li>\n+              </ul>\n+            </nav>\n+            </div>\n+\n+            <div class="bd-example">\n+            <nav aria-label="Standard pagination example">\n+              <ul class="pagination">\n+                <li class="page-item">\n+                  <a class="page-link" href="#" aria-label="Previous">\n+                    <span aria-hidden="true">&laquo;</span>\n+                  </a>\n+                </li>\n+                <li class="page-item"><a class="page-link" href="#">1</a></li>\n+                <li class="page-item"><a class="page-link" href="#">2</a></li>\n+                <li class="page-item"><a class="page-link" href="#">3</a></li>\n+                <li class="page-item">\n+                  <a class="page-link" href="#" aria-label="Next">\n+                    <span aria-hidden="true">&raquo;</span>\n+                  </a>\n+                </li>\n+              </ul>\n+            </nav>\n+            </div>\n+\n+            <div class="bd-example">\n+            <nav aria-label="Another pagination example">\n+              <ul class="pagination pagination-lg flex-wrap">\n+                <li class="page-item disabled">\n+                  <a class="page-link">Previous</a>\n+                </li>\n+                <li class="page-item"><a class="page-link" href="#">1</a></li>\n+                <li class="page-item active" aria-current="page">\n+                  <a class="page-link" href="#">2</a>\n+                </li>\n+                <li class="page-item"><a class="page-link" href="#">3</a></li>\n+                <li class="page-item">\n+                  <a class="page-link" href="#">Next</a>\n+                </li>\n+              </ul>\n+            </nav>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="popovers">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Popovers</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/popovers/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <button type="button" class="btn btn-lg btn-danger" data-bs-toggle="popover" title="Popover title" data-bs-content="And here\'s some amazing content. It\'s very engaging. Right?">Click to toggle popover</button>\n+            </div>\n+\n+            <div class="bd-example">\n+            <button type="button" class="btn btn-secondary" data-bs-container="body" data-bs-toggle="popover" data-bs-placement="top" data-bs-content="Vivamus sagittis lacus vel augue laoreet rutrum faucibus.">\n+              Popover on top\n+            </button>\n+            <button type="button" class="btn btn-secondary" data-bs-container="body" data-bs-toggle="popover" data-bs-placement="right" data-bs-content="Vivamus sagittis lacus vel augue laoreet rutrum faucibus.">\n+              Popover on end\n+            </button>\n+            <button type="button" class="btn btn-secondary" data-bs-container="body" data-bs-toggle="popover" data-bs-placement="bottom" data-bs-content="Vivamus sagittis lacus vel augue laoreet rutrum faucibus.">\n+              Popover on bottom\n+            </button>\n+            <button type="button" class="btn btn-secondary" data-bs-container="body" data-bs-toggle="popover" data-bs-placement="left" data-bs-content="Vivamus sagittis lacus vel augue laoreet rutrum faucibus.">\n+              Popover on start\n+            </button>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="progress">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Progress</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/progress/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            <div class="progress mb-3">\n+              <div class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">0%</div>\n+            </div>\n+            <div class="progress mb-3">\n+              <div class="progress-bar bg-success w-25" role="progressbar" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">25%</div>\n+            </div>\n+            <div class="progress mb-3">\n+              <div class="progress-bar bg-info text-dark w-50" role="progressbar" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100">50%</div>\n+            </div>\n+            <div class="progress mb-3">\n+              <div class="progress-bar bg-warning text-dark w-75" role="progressbar" aria-valuenow="75" aria-valuemin="0" aria-valuemax="100">75%</div>\n+            </div>\n+            <div class="progress">\n+              <div class="progress-bar bg-danger w-100" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100">100%</div>\n+            </div>\n+            </div>\n+\n+            <div class="bd-example">\n+            <div class="progress">\n+              <div class="progress-bar" role="progressbar" style="width: 15%" aria-valuenow="15" aria-valuemin="0" aria-valuemax="100"></div>\n+              <div class="progress-bar progress-bar-striped progress-bar-animated bg-success" role="progressbar" style="width: 40%" aria-valuenow="40" aria-valuemin="0" aria-valuemax="100"></div>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="scrollspy">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Scrollspy</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/scrollspy/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+              <nav id="navbar-example2" class="navbar navbar-light bg-light px-3">\n+                <a class="navbar-brand" href="#">Navbar</a>\n+                <ul class="nav nav-pills">\n+                  <li class="nav-item">\n+                    <a class="nav-link active" href="#scrollspyHeading1">First</a>\n+                  </li>\n+                  <li class="nav-item">\n+                    <a class="nav-link" href="#scrollspyHeading2">Second</a>\n+                  </li>\n+                  <li class="nav-item dropdown">\n+                    <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" role="button" aria-expanded="false">Dropdown</a>\n+                    <ul class="dropdown-menu">\n+                      <li><a class="dropdown-item" href="#scrollspyHeading3">Third</a></li>\n+                      <li><a class="dropdown-item" href="#scrollspyHeading4">Fourth</a></li>\n+                      <li><hr class="dropdown-divider"></li>\n+                      <li><a class="dropdown-item" href="#scrollspyHeading5">Fifth</a></li>\n+                    </ul>\n+                  </li>\n+                </ul>\n+              </nav>\n+            <div data-bs-spy="scroll" data-bs-target="#navbar-example2" data-bs-offset="0" class="scrollspy-example" tabindex="0">\n+                <h4 id="scrollspyHeading1">First heading</h4>\n+                <p>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It\'s repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.</p>\n+                <h4 id="scrollspyHeading2">Second heading</h4>\n+                <p>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It\'s repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.</p>\n+                <h4 id="scrollspyHeading3">Third heading</h4>\n+                <p>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It\'s repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.</p>\n+                <h4 id="scrollspyHeading4">Fourth heading</h4>\n+                <p>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It\'s repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.</p>\n+                <h4 id="scrollspyHeading5">Fifth heading</h4>\n+                <p>This is some placeholder content for the scrollspy page. Note that as you scroll down the page, the appropriate navigation link is highlighted. It\'s repeated throughout the component example. We keep adding some more example copy here to emphasize the scrolling and highlighting.</p>\n+              </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="spinners">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Spinners</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/spinners/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example">\n+            \n+            <div class="spinner-border text-primary" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-border text-secondary" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-border text-success" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-border text-danger" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-border text-warning" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-border text-info" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-border text-light" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-border text-dark" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            </div>\n+\n+            <div class="bd-example">\n+            \n+            <div class="spinner-grow text-primary" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-grow text-secondary" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-grow text-success" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-grow text-danger" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-grow text-warning" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-grow text-info" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-grow text-light" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            <div class="spinner-grow text-dark" role="status">\n+              <span class="visually-hidden">Loading...</span>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="my-3" id="toasts">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Toasts</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/toasts/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example bg-dark p-5 align-items-center">\n+            <div class="toast" role="alert" aria-live="assertive" aria-atomic="true">\n+              <div class="toast-header">\n+                <svg class="bd-placeholder-img rounded me-2" width="20" height="20" xmlns="http://www.w3.org/2000/svg" aria-hidden="true" preserveAspectRatio="xMidYMid slice" focusable="false"><rect width="100%" height="100%" fill="#007aff"/></svg>\n+\n+                <strong class="me-auto">Bootstrap</strong>\n+                <small class="text-muted">11 mins ago</small>\n+                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>\n+              </div>\n+              <div class="toast-body">\n+                Hello, world! This is a toast message.\n+              </div>\n+            </div>\n+            </div>\n+          </div>\n+        </article>\n+        <article class="mt-3 mb-5 pb-5" id="tooltips">\n+          <div class="bd-heading sticky-xl-top align-self-start mt-5 mb-3 mt-xl-0 mb-xl-2">\n+            <h3>Tooltips</h3>\n+            <a class="d-flex align-items-center" href="https://getbootstrap.com/docs/5.1/components/tooltips/">Documentation</a>\n+          </div>\n+\n+          <div>\n+            <div class="bd-example tooltip-demo">\n+            <button type="button" class="btn btn-secondary" data-bs-toggle="tooltip" data-bs-placement="top" title="Tooltip on top">Tooltip on top</button>\n+            <button type="button" class="btn btn-secondary" data-bs-toggle="tooltip" data-bs-placement="right" title="Tooltip on end">Tooltip on end</button>\n+            <button type="button" class="btn btn-secondary" data-bs-toggle="tooltip" data-bs-placement="bottom" title="Tooltip on bottom">Tooltip on bottom</button>\n+            <button type="button" class="btn btn-secondary" data-bs-toggle="tooltip" data-bs-placement="left" title="Tooltip on start">Tooltip on start</button>\n+            <button type="button" class="btn btn-secondary" data-bs-toggle="tooltip" data-bs-html="true" title="<em>Tooltip</em> <u>with</u> <b>HTML</b>">Tooltip with HTML</button>\n+            </div>\n+          </div>\n+        </article>\n+      </section>\n+    </div>\n+\n+    <div class="modal fade" id="exampleModalDefault" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">\n+      <div class="modal-dialog">\n+        <div class="modal-content">\n+          <div class="modal-header">\n+            <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>\n+            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>\n+          </div>\n+          <div class="modal-body">\n+            ...\n+          </div>\n+          <div class="modal-footer">\n+            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>\n+            <button type="button" class="btn btn-primary">Save changes</button>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+    <div class="modal fade" id="staticBackdropLive" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLiveLabel" aria-hidden="true">\n+      <div class="modal-dialog">\n+        <div class="modal-content">\n+          <div class="modal-header">\n+            <h5 class="modal-title" id="staticBackdropLiveLabel">Modal title</h5>\n+            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>\n+          </div>\n+          <div class="modal-body">\n+            <p>I will not close if you click outside me. Don\'t even try to press escape key.</p>\n+          </div>\n+          <div class="modal-footer">\n+            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>\n+            <button type="button" class="btn btn-primary">Understood</button>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+    <div class="modal fade" id="exampleModalCenteredScrollable" tabindex="-1" aria-labelledby="exampleModalCenteredScrollableTitle" aria-hidden="true">\n+      <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">\n+        <div class="modal-content">\n+          <div class="modal-header">\n+            <h5 class="modal-title" id="exampleModalCenteredScrollableTitle">Modal title</h5>\n+            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>\n+          </div>\n+          <div class="modal-body">\n+            <p>This is some placeholder content to show the scrolling behavior for modals. We use repeated line breaks to demonstrate how content can exceed minimum inner height, thereby showing inner scrolling. When content becomes longer than the predefined max-height of modal, content will be cropped and scrollable within the modal.</p>\n+            <br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>\n+            <p>This content should appear at the bottom after you scroll.</p>\n+          </div>\n+          <div class="modal-footer">\n+            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>\n+            <button type="button" class="btn btn-primary">Save changes</button>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+    <div class="modal fade" id="exampleModalFullscreen" tabindex="-1" aria-labelledby="exampleModalFullscreenLabel" aria-hidden="true">\n+      <div class="modal-dialog modal-fullscreen">\n+        <div class="modal-content">\n+          <div class="modal-header">\n+            <h5 class="modal-title h4" id="exampleModalFullscreenLabel">Full screen modal</h5>\n+            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>\n+          </div>\n+          <div class="modal-body">\n+            ...\n+          </div>\n+          <div class="modal-footer">\n+            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+\n+    <!-- End Bootstrap Cheatsheet -->\n+\n+  </metal:main>\n+\n+</body>\n+\n+</html>\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/browser/templates/test_rendering_icons.pt b/Products/CMFPlone/browser/templates/test_rendering_icons.pt\nnew file mode 100644\nindex 0000000000..40999ad312\n--- /dev/null\n+++ b/Products/CMFPlone/browser/templates/test_rendering_icons.pt\n@@ -0,0 +1,91 @@\n+<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" xmlns:tal="http://xml.zope.org/namespaces/tal"\n+  xmlns:metal="http://xml.zope.org/namespaces/metal" xmlns:i18n="http://xml.zope.org/namespaces/i18n" lang="en"\n+  metal:use-macro="context/@@main_template/macros/master" i18n:domain="plone">\n+\n+<body>\n+\n+  <metal:main fill-slot="main">\n+\n+    <style>\n+\n+    </style>    \n+\n+    <ul class="nav nav-tabs mb-3">\n+      <li class="nav-item">\n+        <a class="nav-link active" href="${portal_url}/@@test-rendering">Test Rendering</a>\n+      </li>\n+      <li class="nav-item">\n+        <a class="nav-link" href="${portal_url}/@@test-rendering-cheatsheet">Bootstrap Cheatsheet</a>\n+      </li>\n+      <li class="nav-item">\n+        <a class="nav-link" href="${portal_url}/@@test-rendering-icons">Icons</a>\n+      </li>\n+    </ul>\n+\n+    <h1>Plone Icons test page</h1>\n+\n+    <p class="lead">\n+      This page shows the Icon story of Plone 6. We use <a href="https://icons.getbootstrap.com/" target="_blank">Bootstrap Icons</a> by default.\n+    </p>\n+\n+    <h1>Icons</h1>\n+\n+    <p>\n+      Description to explain icon resolver\n+    </p>\n+\n+    <h2>Get Icon URL</h2>\n+\n+    <p>\n+      <code>&lt;img src="" tal:attributes="src python:icons.url(\'alarm\')" class="custom-class" alt="foo" /&gt;</code>\n+    </p>\n+\n+    <p>\n+      <img src="${python:icons.url(\'alarm\')}" class="custom-class" alt="foo" />\n+    </p>\n+\n+    <h2>Get Icon Tag</h2>\n+\n+    <p>\n+      <code>&lt;tal:icon tal:replace="structure python:icons.tag(\'archive\', tag_class=\'custom-class\', tag_alt=\'foobar\')" /&gt;</code>\n+    </p>\n+\n+    <p>\n+      <tal:icon tal:replace="structure python:icons.tag(\'archive\', tag_class=\'custom-class\', tag_alt=\'foobar\')" />\n+    </p>\n+\n+    <h2>Registration<h2>\n+\n+    <p>\n+      Todo: List custom Icons\n+    </p>\n+\n+    <ul>\n+      <li>\n+        <a href="https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/profiles/default/registry/icons_bootstrap.xml" target="_blank">Bootstrap</a>\n+      </li>\n+      <li>\n+        <a href="https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/profiles/default/registry/icons_contenttype.xml" target="_blank">Content Types</a>\n+      </li>\n+      <li>\n+        <a href="https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/profiles/default/registry/icons_country_flags.xml" target="_blank">Country Flags</a>\n+      </li>\n+      <li>\n+        <a href="https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/profiles/default/registry/icons_language_flags.xml" target="_blank">Language Flags</a>\n+      </li>\n+      <li>\n+        <a href="https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/profiles/default/registry/icons_mimetype.xml" target="_blank">MIME Types</a>\n+      </li>\n+      <li>\n+        <a href="https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/profiles/default/registry/icons_plone.xml" target="_blank">Plone</a>\n+      </li>\n+      <li>\n+        <a href="https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/profiles/default/registry/icons_toolbar.xml" target="_blank">Toolbar</a>\n+      </li>\n+    </ul>\n+\n+  </metal:main>\n+\n+</body>\n+\n+</html>\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/browser/test_rendering.py b/Products/CMFPlone/browser/test_rendering.py\nindex 513dc0e839..b3c567068d 100644\n--- a/Products/CMFPlone/browser/test_rendering.py\n+++ b/Products/CMFPlone/browser/test_rendering.py\n@@ -11,3 +11,23 @@ def __call__(self):\n         self.request.set(\'disable_plone.rightcolumn\', 1)\n         self.request.set(\'disable_plone.leftcolumn\', 1)\n         return self.template()\n+\n+\n+class TestRenderingCheatsheetView(BrowserView):\n+\n+    template = ViewPageTemplateFile(\'templates/test_rendering_cheatsheet.pt\')\n+\n+    def __call__(self):\n+        self.request.set(\'disable_plone.rightcolumn\', 1)\n+        self.request.set(\'disable_plone.leftcolumn\', 1)\n+        return self.template()\n+\n+\n+class TestRenderingIconsView(BrowserView):\n+\n+    template = ViewPageTemplateFile(\'templates/test_rendering_icons.pt\')\n+\n+    def __call__(self):\n+        self.request.set(\'disable_plone.rightcolumn\', 1)\n+        self.request.set(\'disable_plone.leftcolumn\', 1)\n+        return self.template()\ndiff --git a/Products/CMFPlone/configure.zcml b/Products/CMFPlone/configure.zcml\nindex 9d9f68b282..d4ab0a8a9d 100644\n--- a/Products/CMFPlone/configure.zcml\n+++ b/Products/CMFPlone/configure.zcml\n@@ -36,8 +36,6 @@\n   <include package="plone.protect" />\n   <include package="plone.indexer" />\n \n-  <!-- mockup -->\n-  <include package="mockup" />\n   <include package="plone.staticresources" />\n \n   <!-- viewlets zope 3 layers support for themes -->\ndiff --git a/Products/CMFPlone/controlpanel/browser/overview.py b/Products/CMFPlone/controlpanel/browser/overview.py\nindex 7a9e0aa92c..f0e275ce5b 100644\n--- a/Products/CMFPlone/controlpanel/browser/overview.py\n+++ b/Products/CMFPlone/controlpanel/browser/overview.py\n@@ -12,9 +12,11 @@\n from ZPublisher.HTTPRequest import WSGIRequest\n \n import pkg_resources\n+import warnings\n \n try:\n     import plone.app.event\n+\n     plone.app.event  # pyflakes\n     HAS_PAE = True\n except ImportError:\n@@ -23,70 +25,76 @@\n \n class OverviewControlPanel(controlpanel.RegistryEditForm):\n \n-    template = ViewPageTemplateFile(\'overview.pt\')\n+    template = ViewPageTemplateFile("overview.pt")\n \n-    base_category = \'controlpanel\'\n-    ignored_categories = (\'controlpanel_user\')\n+    base_category = "controlpanel"\n+    ignored_categories = "controlpanel_user"\n \n     def __call__(self):\n-        self.request.set(\'disable_border\', 1)\n+        self.request.set("disable_border", 1)\n         return self.template()\n \n     @memoize\n     def cptool(self):\n-        return getToolByName(aq_inner(self.context), \'portal_controlpanel\')\n+        return getToolByName(aq_inner(self.context), "portal_controlpanel")\n \n     @memoize\n     def migration(self):\n-        return getToolByName(aq_inner(self.context), \'portal_migration\')\n+        return getToolByName(aq_inner(self.context), "portal_migration")\n \n     @memoize\n     def core_versions(self):\n         return self.migration().coreVersions()\n \n     def pil(self):\n-        return \'PIL\' in self.core_versions()\n+        return "PIL" in self.core_versions()\n \n     def server_info(self):\n         wsgi = isinstance(self.request, WSGIRequest)\n-        server_name = \'unknown\'\n-        server_version = \'\'\n+        server_name = "unknown"\n+        server_version = ""\n \n-        server_name = self.request.get(\'SERVER_SOFTWARE\')\n+        server_name = self.request.get("SERVER_SOFTWARE")\n         if server_name:\n-            if \'ZServer\' in server_name:\n-                server_name = \'ZServer\'\n+            if "ZServer" in server_name:\n+                server_name = "ZServer"\n+            elif "/" in server_name:\n+                server_name = server_name.split("/")[0]\n             try:\n                 server = pkg_resources.get_distribution(server_name)\n                 server_version = server.version\n-            except (pkg_resources.DistributionNotFound,\n-                    pkg_resources.RequirementParseError):\n-                pass\n+            except Exception:\n+                warnings.warn(\n+                    "Cannot find or parse version for %r"\n+                    % self.request.get("SERVER_SOFTWARE"),\n+                )\n         return {\n-            \'wsgi\': wsgi,\n-            \'server_name\': server_name,\n-            \'version\': server_version,\n+            "wsgi": wsgi,\n+            "server_name": server_name,\n+            "version": server_version,\n         }\n \n     def version_overview(self):\n \n         core_versions = self.core_versions()\n         versions = [\n-            \'Plone {} ({})\'.format(core_versions[\'Plone\'],\n-                               core_versions[\'Plone Instance\'])]\n-\n-        for v in (\'CMF\', \'Zope\', \'Python\'):\n-            versions.append(v + \' \' + core_versions.get(v))\n-        pil = core_versions.get(\'PIL\', None)\n+            "Plone {} ({})".format(\n+                core_versions["Plone"], core_versions["Plone Instance"]\n+            )\n+        ]\n+\n+        for v in ("CMF", "Zope", "Python"):\n+            versions.append(v + " " + core_versions.get(v))\n+        pil = core_versions.get("PIL", None)\n         if pil is not None:\n-            versions.append(\'PIL \' + pil)\n+            versions.append("PIL " + pil)\n         return versions\n \n     def is_dev_mode(self):\n         return getConfiguration().debug_mode\n \n     def upgrade_warning(self):\n-        mt = getToolByName(aq_inner(self.context), \'portal_migration\')\n+        mt = getToolByName(aq_inner(self.context), "portal_migration")\n         if mt.needUpgrading():\n             # if the user can\'t run the upgrade, no sense in displaying the\n             # message\n@@ -97,8 +105,7 @@ def upgrade_warning(self):\n \n     def mailhost_warning(self):\n         registry = getUtility(IRegistry)\n-        mail_settings = registry.forInterface(\n-            IMailSchema, prefix=\'plone\', check=False)\n+        mail_settings = registry.forInterface(IMailSchema, prefix="plone", check=False)\n         mailhost = mail_settings.smtp_host\n         email = mail_settings.email_from_address\n         if mailhost and email:\n@@ -106,8 +113,7 @@ def mailhost_warning(self):\n         return True\n \n     def timezone_warning(self):\n-        """Returns true, if the portal_timezone is not set in the registry.\n-        """\n+        """Returns true, if the portal_timezone is not set in the registry."""\n         if not HAS_PAE:\n             # No point of having a portal timezone configured without\n             # plone.app.event installed.\n@@ -121,7 +127,7 @@ def timezone_warning(self):\n         if reg_key not in registry:\n             # else use \'plone.app.event.portal_timezone\'\n             # < Plone 5\n-            reg_key = \'plone.app.event.portal_timezone\'\n+            reg_key = "plone.app.event.portal_timezone"\n         if reg_key not in registry:\n             return True\n         portal_timezone = registry[reg_key]\ndiff --git a/Products/CMFPlone/controlpanel/browser/quickinstaller.pt b/Products/CMFPlone/controlpanel/browser/quickinstaller.pt\nindex cba8e02fe2..9b694c0a25 100644\n--- a/Products/CMFPlone/controlpanel/browser/quickinstaller.pt\n+++ b/Products/CMFPlone/controlpanel/browser/quickinstaller.pt\n@@ -188,7 +188,7 @@\n               </div>\n               <div class="alert alert-info mt-2 mb-0"\n                   role="status"\n-                  tal:condition="not:product/uninstall_profile">                  >\n+                  tal:condition="not:product/uninstall_profile">\n                 <strong i18n:translate="">Info</strong>\n                 <span i18n:translate="">This product cannot be uninstalled!</span>\n             </div>\ndiff --git a/Products/CMFPlone/controlpanel/browser/relations_inspect.pt b/Products/CMFPlone/controlpanel/browser/relations_inspect.pt\nindex 36337a68d4..c1601d78e0 100644\n--- a/Products/CMFPlone/controlpanel/browser/relations_inspect.pt\n+++ b/Products/CMFPlone/controlpanel/browser/relations_inspect.pt\n@@ -41,10 +41,10 @@\n            class="portalMessage warning alert alert-warning" role="alert"\n            i18n:translate="">\n              <strong>Warning!</strong> You have broken relations!\n-             You can <a href="@@rebuild_relations">inspect and rebuild all relations</a>.\n+             You can <a href="${portal_url}/@@rebuild-relations">inspect and rebuild all relations</a>.\n       </div>\n \n-      <form id="relationinfo" method="post" action="@@inspect-relations" enctype="multipart/form-data">\n+      <form id="relationinfo" method="post" action="${portal_url}/@@inspect-relations" enctype="multipart/form-data">\n \n         <div class="mb-3 field">\n           <select class="form-select" i18n:attributes="aria-label label_default_select_example" aria-label="Default select example" name="relation" id="relation">\n@@ -123,7 +123,7 @@\n         </tbody>\n       </table>\n \n-      <p><a href="@@rebuild-relations" i18n:translate="">Inspect and rebuild all relations</a>.</p>\n+      <p><a href="${portal_url}/@@rebuild-relations" i18n:translate="">Inspect and rebuild all relations</a>.</p>\n \n     </div>\n \ndiff --git a/Products/CMFPlone/controlpanel/browser/resourceregistry.pt b/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\nindex b1ac950250..641bea1b08 100644\n--- a/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\n+++ b/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\n@@ -13,49 +13,138 @@\n   <header>\n \n     <h1 class="documentFirstHeading"\n-        i18n:translate="">Resource Registries</h1>\n+        i18n:translate="">Resource Registry</h1>\n \n     <div class="text-muted"\n        i18n:translate="">\n-      Configure, enable, disable, debug and build Plone JavaScript/LESS/CSS resources.\n-      Plone utilizes RequireJS and LESS CSS to build its resources.\n-      Re-building a Plone bundle TTW requires a modern web browser.\n+      Configure Plone JavaScript/CSS resource bundles.\n     </div>\n   </header>\n \n    <div id="content-core">\n-      <span tal:replace="structure context/@@authenticator/authenticator"/>\n-      <div class="pat-resourceregistry" tal:attributes="data-pat-resourceregistry view/config">\n-        <div class="alert alert-info" role="status">\n-          <strong i18n:translate="">Info</strong>\n-          <span i18n:translate="">If you see this, it is because there was an error rendering the resource registry\n-          configuration. It\'s possible you saved a bundle that gives a JavaScript error\n-          and it is preventing the resource registry from loading.</span>\n+    <div tal:condition="python:view.global_debug_mode()"\n+         class="portalMessage statusmessage statusmessage-info alert alert-info"\n+         role="alert">\n+        <tal:icon tal:replace="structure python:icons.tag(\'plone-statusmessage-info\', tag_alt=\'\', tag_class=\'statusmessage-icon mb-1 me-2\')" />\n+        <strong i18n:translate="">Global Debug Mode Activated</strong>\n+        <span class="content"\n+              i18n:translate="">\n+            This is great for development.\n+            Resource hashes will be recalculated on each request.\n+            This is expensive, do not use use in production!\n+        </span>\n+    </div>\n+    <form tal:condition="python:not view.global_debug_mode() and view.debug_mode()"\n+          method="post" action="${python:context.absolute_url()}/@@resourceregistry-controlpanel">\n+      <div class="portalMessage statusmessage statusmessage-info alert alert-warning"\n+         role="alert">\n+          <button name="action" value="deactivate_cache" type="submit" class="btn btn-primary ms-1 me-1 mb-1 float-end">Deactivate</button>\n+        <tal:icon tal:replace="structure python:icons.tag(\'plone-statusmessage-warning\', tag_alt=\'\', tag_class=\'statusmessage-icon mb-1\')" />\n+        <strong i18n:translate="">Resource Debug Mode Activated</strong>\n+        <span class="content"\n+              i18n:translate="">\n+            Resources are not cached in Plone.\n+            Their hashes will be recalculated on each request.\n+            This is expensive, do not use use in production!\n+        </span>\n+      </div>\n+    </form>\n+    <form tal:condition="python:not view.global_debug_mode() and not view.debug_mode()"\n+          method="post" action="${python:context.absolute_url()}/@@resourceregistry-controlpanel">\n+      <div class="portalMessage statusmessage statusmessage-info alert alert-info"\n+         role="alert">\n+          <button name="action" value="activate_cache" type="submit" class="btn btn-primary ms-1 me-1 mb-1 float-end">Activate Debug Mode</button>\n+        <tal:icon tal:replace="structure python:icons.tag(\'plone-statusmessage-info\', tag_alt=\'\', tag_class=\'statusmessage-icon mb-1\')" />\n+        <strong i18n:translate="">Production Mode Activated</strong>\n+        <span class="content"\n+              i18n:translate="">\n+            Resources are fast and hashes are cached in Plone.\n+            Changes in resource settings are not applied directly.\n+        </span>\n+      </div>\n+    </form>\n+    <div class="accordion" id="accordionRR" tal:define="dummy python:view.process_form()">\n+      <div class="accordion-item "\n+           tal:repeat="bundle python:view.bundles_data">\n+           <h2 class="accordion-header" id="heading-${python:bundle[\'safe_name\']}">\n+            <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-${python:bundle[\'safe_name\']}" aria-expanded="false" aria-controls="collapse-${python:bundle[\'safe_name\']}">\n+              <span tal:condition="python:bundle[\'name\'] and bundle[\'enabled\']" i18n:translate="" class="me-2"><tal:icon tal:replace="structure python:icons.tag(\'file-check\', tag_alt=\'Enabled bundle\')" /></span>\n+              <span tal:condition="python:bundle[\'name\'] and not bundle[\'enabled\']" i18n:translate="" class="me-2"><tal:icon tal:replace="structure python:icons.tag(\'file-x\', tag_alt=\'Disabled bundle\')" /></span>\n+              <span tal:condition="python:not bundle[\'name\']" i18n:translate="" class="me-2"><tal:icon tal:replace="structure python:icons.tag(\'file-plus\', tag_alt=\'Add a bundle\')" /></span>\n+              <strong tal:condition="python:bundle[\'name\']">${python:bundle["name"]}</strong>\n+              <strong tal:condition="python:not bundle[\'name\']">Add new bundle</strong>\n+            </button>\n+          </h2>\n+          <div id="collapse-${python:bundle[\'safe_name\']}" class="accordion-collapse ${python:\'\' if bundle[\'name\'] == request.form.get(\'name\', None) else \'collapse\'}" aria-labelledby="heading${python:bundle[\'safe_name\']}" data-bs-parent="#accordionRR">\n+            <div class="accordion-body">\n+              <form method="post" action="${python:context.absolute_url()}/@@resourceregistry-controlpanel">\n+                <input type="hidden" name="original_name" value="${python:bundle[\'name\']}" />\n+                <div class="mb-3">\n+                  <label for="name" class="form-label">Name</label>\n+                  <input type="text" class="form-control" name="name" value="${python:bundle[\'name\']}"/>\n+                </div>\n+                <div class="mb-3">\n+                  <label for="jscompilation" class="form-label">Javascript</label>\n+                  <input type="text" class="form-control" name="jscompilation" value="${python:bundle[\'jscompilation\']}"/>\n+                </div>\n+                <div class="mb-3">\n+                  <label for="csscompilation" class="form-label">CSS</label>\n+                  <input type="text" class="form-control" name="csscompilation" value="${python:bundle[\'csscompilation\']}"/>\n+                </div>\n+                <div class="form-check mb-3">\n+                  <input class="form-check-input" type="checkbox" value="" name="enabled" ${python:"checked" if bundle["enabled"] else \'\'} />\n+                  <label class="form-check-label" for="enabled">\n+                    enabled\n+                  </label>\n+                </div>\n+                <div class="mb-3">\n+                  <label for="expression" class="form-label">Condition</label>\n+                  <input type="text" class="form-control" name="expression" value="${python:bundle[\'expression\']}" placeholder="expression"/>\n+                </div>\n+                <div class="mb-3">\n+                  <label for="depends" class="form-label">Depends on</label>\n+                  <input type="text" class="form-control" name="depends" value="${python:bundle[\'depends\']}" />\n+                </div>\n+                <div class="form-check mb-3">\n+                  <input class="form-check-input" type="checkbox" value="1" name="load_async" ${python:"checked" if bundle["load_async"] else \'\'} />\n+                  <label class="form-check-label" for="load_async">\n+                    Async\n+                  </label>\n+                </div>\n+                <div class="form-check mb-3">\n+                  <input class="form-check-input" type="checkbox" value="1" name="load_defer" ${python:"checked" if bundle["load_defer"] else \'\'} />\n+                  <label class="form-check-label" for="load_defer">\n+                    Defer\n+                  </label>\n+                </div>\n+                <div class="mb-3">\n+                  <button tal:condition="python:bundle[\'name\']" name="action" value="update" type="submit" class="btn btn-primary me-1">Save</button>\n+                  <button tal:condition="python:not bundle[\'name\']" name="action" value="add" type="submit" class="btn btn-success me-1">Add</button>\n+                  <button tal:condition="python:bundle[\'name\']" name="action" value="delete" type="submit" class="btn btn-danger">Delete</button>\n+                </div>\n+              </form>\n+          </div>\n         </div>\n-        <h2 i18n:translate="">Available Options</h2>\n-        <ul>\n-          <li i18n:translate="">Reload the page. There could be a intermittent issue.</li>\n-          <li i18n:translate="">Go to the <a i18n:name="configuration_registry" i18n:translate=""\n-              href="${portal_url}/portal_registry">Configuration Registry</a>\n-              and manually edit the configuration to enable development mode\n-              on the resource registry and try to rebuild.</li>\n-          <li><span i18n:translate="" tal:omit-tag="">You can also attempt to delete your customizations/builds and see if that fixes it.</span>\n-            <ul>\n-              <tal:overrides tal:repeat="override python: view.get_overrides()">\n-                <li>\n-                  <form method="POST">\n-                    <input type="hidden" name="action" value="delete-file" />\n-                    <input type="hidden" name="response" value="html" />\n-                    <input type="hidden" name="filepath" value="${override}" />\n-                    <input type="submit" value="Delete ${override}" i18n:attributes="value" />\n-                  </form>\n-                </li>\n-              </tal:overrides>\n-            </ul>\n-          </li>\n-        </ul>\n       </div>\n     </div>\n+    <div class="mt-3">\n+      <h2 i18n:translate="">Additional Resources</h2>\n+      <p i18n:translate="">After the above resources, the following might get loaded:</p>\n+      <dl>\n+        <dt i18n:translate="">Theme CSS and JavaScript</dt>\n+        <dd i18n:translate="">\n+          The activated Plone-Theme usually provides one CSS bundle and sometimes a javascript bundle.\n+        </dd>\n+        <dt i18n:translate="">Custom CSS</dt>\n+        <dd i18n:translate="">\n+          At last a custom CSS is loaded, if non-empty.\n+          It can be used to override the previous loaded CSS.\n+          It is provided for tinkerers and those in need of urgent through-the-web changes.\n+          Hint: <a href="${python:context.absolute_url()}/@@theming-controlpanel#autotoc-item-autotoc-1" i18n:name="link" i18n:translate="">Edit the Custom CSS in the Theming-Control-Panel</a>.\n+        </dd>\n+      </dl>\n+    </div>\n+   </div>\n </metal:main>\n \n </body>\ndiff --git a/Products/CMFPlone/controlpanel/browser/resourceregistry.py b/Products/CMFPlone/controlpanel/browser/resourceregistry.py\nindex ca1f143a0b..9f1733e2ed 100644\n--- a/Products/CMFPlone/controlpanel/browser/resourceregistry.py\n+++ b/Products/CMFPlone/controlpanel/browser/resourceregistry.py\n@@ -1,424 +1,150 @@\n-from datetime import datetime\n-from plone.memoize.view import memoize\n-from plone.registry import field\n-from plone.registry.interfaces import IRegistry\n-from plone.registry.record import Record\n-from plone.resource.interfaces import IResourceDirectory\n+from App.config import getConfiguration\n from plone.base.interfaces import IBundleRegistry\n-from plone.base.interfaces import IResourceRegistry\n-from plone.base.interfaces.resources import OVERRIDE_RESOURCE_DIRECTORY_NAME  # noqa\n-from Products.CMFPlone.resources import add_bundle_on_request\n-from Products.CMFPlone.resources import RESOURCE_DEVELOPMENT_MODE\n-from Products.CMFPlone.resources.browser.configjs import RequireJsView\n-from Products.CMFPlone.resources.browser.cook import cookWhenChangingSettings\n+from plone.registry.interfaces import IRegistry\n+from Products.CMFPlone import PloneMessageFactory as _\n+from Products.Five.browser import BrowserView\n from Products.statusmessages.interfaces import IStatusMessage\n-from urllib import parse\n-from zExceptions import NotFound\n from zope.component import getUtility\n \n-import json\n-import posixpath\n-import re\n-\n-\n-CSS_URL_REGEX = re.compile(r\'url\\(([^)]+)\\)\')\n-\n-\n-class JSONEncoder(json.JSONEncoder):\n-\n-    def default(self, obj):\n-        if hasattr(obj, \'isoformat\'):\n-            return obj.isoformat()\n-        else:\n-            return json.JSONEncoder.default(self, obj)\n-\n-\n-def recordsToDict(record):\n-    data = {}\n-    for name in record.__schema__.names():\n-        data[name] = getattr(record, name)\n-    return data\n-\n-\n-def updateRecordFromDict(record, data):\n-    for name in record.__schema__.names():\n-        if name in [\'last_compilation\']:\n-            continue\n-        if name in data:\n-            # almost all string data needs to be str, not unicode\n-            val = data[name]\n-            if isinstance(val, list):\n-                newval = []\n-                for item in val:\n-                    newval.append(item)\n-                val = newval\n-\n-            full_name = record.__prefix__ + name\n-            try:\n-                record.__registry__[full_name] = val\n-            except (AttributeError, KeyError):\n-                # upgrade record on the fly, try to at least\n-                if not val:\n-                    continue\n-                if type(val) == bool:\n-                    record.__registry__.records[full_name] = Record(\n-                        field.Bool(title=""), val)\n-                else:\n-                    raise\n-\n-\n-class OverrideFolderManager:\n+import operator\n \n-    def __init__(self, context):\n-        self.context = context\n-        persistent_directory = getUtility(IResourceDirectory, name="persistent")  # noqa\n-        if OVERRIDE_RESOURCE_DIRECTORY_NAME not in persistent_directory:\n-            persistent_directory.makeDirectory(OVERRIDE_RESOURCE_DIRECTORY_NAME)  # noqa\n-        self.container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n \n-    def save_file(self, filepath, data):\n-        resource_name, resource_filepath = filepath.split(\'/\', 1)\n-        if resource_name not in self.container:\n-            self.container.makeDirectory(resource_name)\n-        folder = self.container[resource_name]\n-        if \'.css\' in resource_filepath:\n-            data = self.make_links_relative(filepath, data)\n-        folder.writeFile(resource_filepath, data)\n-        return folder[resource_filepath]\n-\n-    def _rewrite_url(self, css_url, asset_url):\n-        """\n-        Pulled from:\n-        http://stackoverflow.com/questions/7469573/how-to-construct-relative-url-given-two-absolute-urls-in-python\n-\n-        """\n-        base = parse.urlparse(css_url)\n-        target = parse.urlparse(asset_url)\n-        if base.netloc != target.netloc:\n-            return asset_url\n-        base_dir = \'.\' + posixpath.dirname(base.path)\n-        target = \'.\' + target.path\n-        return posixpath.relpath(target, start=base_dir)\n-\n-    def make_links_relative(self, filepath, data):\n-        """\n-        make sure we don\'t write out any full urls.\n-        filepath will be something like foo/bar.css\n-        and the full real url will be something like http://site-url/++plone++foo/bar.css\n-\n-        So we\'ll be everything relative the resource path.\n-\n-\n-        """\n-        site_url = self.context.absolute_url()\n-        full_resource_url = f\'{site_url}/++plone++{filepath}\'\n-        for css_url in CSS_URL_REGEX.findall(data):\n-            if css_url.startswith("data:"):\n-                continue\n-            if css_url.find("data:image") > 0:\n-                continue\n-\n-            css_url = css_url.lstrip(\'url(\').rstrip(\')\').\\\n-                strip(\'"\').strip("\'")\n-            if css_url.startswith(site_url):\n-                data = data.replace(css_url, self._rewrite_url(\n-                    full_resource_url, css_url))\n-\n-        return data\n-\n-    def delete_file(self, filepath):\n-        resource_name, resource_filepath = filepath.split(\'/\', 1)\n+class ResourceRegistryControlPanelView(BrowserView):\n+    @property\n+    def _bundles(self):\n+        registry = getUtility(IRegistry)\n+        return registry.collectionOfInterface(\n+            IBundleRegistry, prefix="plone.bundles", check=False\n+        )\n \n-        if resource_name not in self.container:\n-            return\n-        folder = self.container[resource_name]\n-        try:\n-            fi = folder[resource_filepath]\n-        except NotFound:\n+    @property\n+    def bundles_data(self):\n+        result = []\n+        for name, record in self._bundles.items():\n+            result.append(\n+                {\n+                    "name": name,\n+                    "safe_name": name.replace(".", "-"),\n+                    "jscompilation": record.jscompilation,\n+                    "csscompilation": record.csscompilation,\n+                    "expression": record.expression,\n+                    "enabled": record.enabled,\n+                    "depends": record.depends,\n+                    "load_async": record.load_async,\n+                    "load_defer": record.load_defer,\n+                }\n+            )\n+        result = list(sorted(result, key=operator.itemgetter("name")))\n+        result.append(\n+            {\n+                "name": "",\n+                "safe_name": "",\n+                "jscompilation": "",\n+                "csscompilation": "",\n+                "expression": "",\n+                "enabled": False,\n+                "depends": "",\n+                "load_async": False,\n+                "load_defer": False,\n+            }\n+        )\n+        return result\n+\n+    def global_debug_mode(self):\n+        return getConfiguration().debug_mode\n+\n+    def debug_mode(self):\n+        registry = getUtility(IRegistry)\n+        return registry["plone.resources.development"]\n+\n+    def _add(self):\n+        name = self.request.form.get("name", None)\n+        if name is None or name == "":\n+            IStatusMessage(self.request).addStatusMessage(\n+                _("Name can not be empty."), "error"\n+            )\n             return\n-        parent = self.get_parent(fi)\n-        del parent[fi.getId()]\n-        if filepath not in self.container:\n+        bundles = self._bundles\n+        if name in bundles:\n+            IStatusMessage(self.request).addStatusMessage(\n+                _(f"Record {name} already exists."), "error"\n+            )\n             return\n-        folder = self.container[resource_name]\n-        try:\n-            fi = folder[resource_filepath]\n-        except NotFound:\n+        record = bundles.add(name)\n+        self._set_data_from_form(record)\n+        IStatusMessage(self.request).addStatusMessage(\n+            _(f"Record {name} created."), "info"\n+        )\n+\n+    def _update(self):\n+        new_name = self.request.form.get("name", None)\n+        if new_name is None or new_name == "":\n+            IStatusMessage(self.request).addStatusMessage(\n+                _("Name can not be empty."), "error"\n+            )\n             return\n-        parent = self.get_parent(fi)\n-        del parent[fi.getId()]\n-\n-    def get_parent(self, item):\n-        path = \'/\'.join(item.getPhysicalPath()[:-1])\n-        return self.context.restrictedTraverse(path)\n-\n-    def list_dir(self, container):\n-        if hasattr(container, \'listDirectory\'):\n-            return container.listDirectory()\n-        else:\n-            return container.objectIds()\n-\n-\n-class ResourceRegistryControlPanelView(RequireJsView):\n-\n-    def __call__(self):\n-        add_bundle_on_request(self.request, \'resourceregistry\')\n-        req = self.request\n-        if req.REQUEST_METHOD == \'POST\':\n-            action = req.get(\'action\', \'\')\n-            method = action.replace(\'-\', \'_\')\n-            if hasattr(self, method):\n-                return getattr(self, method)()\n-            else:\n-                return json.dumps({\n-                    \'success\': False,\n-                    \'msg\': \'Invalid action: \' + action\n-                })\n+        original_name = self.request.form.get("original_name", None)\n+        bundles = self._bundles\n+        if new_name != original_name:\n+            if original_name not in bundles:\n+                IStatusMessage(self.request).addStatusMessage(\n+                    _("Expected record missing."), "error"\n+                )\n+                return\n+            if new_name in bundles:\n+                IStatusMessage(self.request).addStatusMessage(\n+                    _(f"Record name {new_name} already taken."), "error"\n+                )\n+                return\n+            record = bundles[original_name]\n+            del bundles[original_name]\n+            bundles[new_name] = record\n         else:\n-            if RESOURCE_DEVELOPMENT_MODE:\n-                messages = IStatusMessage(self.request)\n-                messages.add("The FEDEV environment variable is set. No matter "\n-                             "what settings are done here, all bundles will "\n-                             "always be in development mode.", type="warn")\n-            return self.index()\n-\n-    @property\n-    @memoize\n-    def registry(self):\n-        return getUtility(IRegistry)\n-\n-    def update_registry_collection(self, itype, prefix, newdata):\n-        rdata = self.registry.collectionOfInterface(\n-            itype, prefix=prefix, check=False)\n-        for key, data in newdata.items():\n-            if key not in rdata:\n-                record = rdata.add(key)\n-            else:\n-                record = rdata[key]\n-            updateRecordFromDict(record, data)\n-        # remove missing ones\n-        for key in set(rdata.keys()) - set(newdata.keys()):\n-            del rdata[key]\n-\n-    def save_registry(self):\n-        req = self.request\n+            record = bundles[original_name]\n+        self._set_data_from_form(record)\n+        IStatusMessage(self.request).addStatusMessage(_("Changes saved."), "info")\n+\n+    def _set_data_from_form(self, record):\n+        names = record.__schema__.names()\n+        data = {k: v for k, v in self.request.form.items() if k in names}\n+        bool_names = ["enabled", "load_async", "load_defer"]\n+        for bool_name in bool_names:\n+            data[bool_name] = bool_name in data\n+        for field_name, value in data.items():\n+            full_name = record.__prefix__ + field_name\n+            record.__registry__[full_name] = value\n+        self._switch_cache(False)\n+\n+    def _delete(self):\n+        name = self.request.form.get("original_name", None)\n+        bundles = self._bundles\n+        if name not in bundles:\n+            IStatusMessage(self.request).addStatusMessage(\n+                _(f"Expected record {name} missing."), "error"\n+            )\n+            return\n+        del bundles[name]\n+        self._switch_cache(False)\n+        IStatusMessage(self.request).addStatusMessage(_("Record deleted."), "info")\n \n-        if req.get(\'resources\') and req.get(\'bundles\'):\n-            self.update_registry_collection(\n-                IResourceRegistry, "plone.resources",\n-                json.loads(req.get(\'resources\')))\n-            self.update_registry_collection(\n-                IBundleRegistry, "plone.bundles",\n-                json.loads(req.get(\'bundles\')))\n+    def _switch_cache(self, state):\n+        registry = getUtility(IRegistry)\n+        registry["plone.resources.development"] = state\n \n-        if self.request.form.get(\'development\', \'\').lower() == \'true\':\n-            self.registry[\'plone.resources.development\'] = True\n+    def process_form(self):\n+        if self.request["method"] != "POST":\n+            return\n+        action = self.request.form["action"]\n+        if action == "add":\n+            self._add()\n+        elif action == "update":\n+            self._update()\n+        elif action == "delete":\n+            self._delete()\n+        elif action == "activate_cache":\n+            self._switch_cache(True)\n+        elif action == "deactivate_cache":\n+            self._switch_cache(False)\n         else:\n-            self.registry[\'plone.resources.development\'] = False\n-\n-        # it\'d be difficult to know if the legacy bundle settings\n-        # changed or not so we need to just set the last import date\n-        # back so it gets re-built\n-        self.registry.records[\n-            \'plone.resources.last_legacy_import\'].value = datetime.now()\n-        cookWhenChangingSettings(self.context)\n-\n-        return json.dumps({\n-            \'success\': True\n-        })\n-\n-    def save_file(self):\n-        req = self.request\n-        resource_path = req.form.get(\'filepath\').split(\'++plone++\')[-1]\n-        overrides = OverrideFolderManager(self.context)\n-        overrides.save_file(resource_path, req.form[\'data\'])\n-        return json.dumps({\n-            \'success\': True\n-        })\n-\n-    def delete_file(self):\n-        req = self.request\n-        resource_path = req.form.get(\'filepath\').split(\'++plone++\')[-1]\n-        overrides = OverrideFolderManager(self.context)\n-        overrides.delete_file(resource_path)\n-\n-        if req.form.get(\'response\') == \'html\':\n-            return req.response.redirect(req.URL)\n-        return json.dumps({\n-            \'success\': True\n-        })\n-\n-    def get_bundles(self):\n-        return self.registry.collectionOfInterface(\n-            IBundleRegistry, prefix="plone.bundles", check=False)\n-\n-    def get_resources(self):\n-        return self.registry.collectionOfInterface(\n-            IResourceRegistry, prefix="plone.resources", check=False)\n-\n-    def less_build_config(self):\n-        site_url = self.context.portal_url()\n-        bundles = self.get_bundles()\n-        bundle = self.request.get(\'bundle\', None)\n-        resources = self.get_resources()\n-        less_files = []\n-        if bundle and bundle in bundles:\n-            bundle_obj = bundles[bundle]\n-            for resource in bundle_obj.resources:\n-                if resource in resources:\n-                    for css in resources[resource].css:\n-                        url = parse.urlparse(css)\n-                        if url.netloc == \'\':\n-                            # Local\n-                            src = f"{site_url}/{css}"\n-                        else:\n-                            src = "%s" % (css)\n-\n-                        extension = url.path.split(\'.\')[-1]\n-                        if extension == \'less\':\n-                            less_files.append(src)\n-        return json.dumps({\n-            \'less\': less_files,\n-        })\n-\n-    def js_build_config(self):\n-        (paths, shims) = self.get_requirejs_config()\n-        bundles = self.get_bundles()\n-        resources = self.get_resources()\n-\n-        bundle = self.request.get(\'bundle\', None)\n-        includes = []\n-        if bundle and bundle in bundles:\n-            bundle_obj = bundles[bundle]\n-            for resource_name in bundle_obj.resources:\n-                # need to check if this resource has a js file\n-                # it could just be a css resource\n-                try:\n-                    resource = resources[resource_name]\n-                    if resource.js:\n-                        includes.append(resource_name)\n-                except KeyError:\n-                    # skip if missing\n-                    pass\n-            if bundle_obj.stub_js_modules:\n-                for module in bundle_obj.stub_js_modules:\n-                    paths[module] = \'empty:\'\n-        return json.dumps({\n-            \'include\': includes,\n-            \'shim\': shims,\n-            \'paths\': paths,\n-            \'wrapShim\': True,\n-            \'optimize\': \'none\'\n-        })\n-\n-    def save_js_build(self):\n-        """\n-        \'\xc3\x82\'\n-        """\n-        overrides = OverrideFolderManager(self.context)\n-        req = self.request\n-        filepath = \'static/%s-compiled.js\' % req.form[\'bundle\']\n-\n-        data = req.form[\'data\']\n-        overrides.save_file(filepath, data)\n-        bundle = self.get_bundles().get(req.form[\'bundle\'])\n-        if bundle:\n-            bundle.last_compilation = datetime.now()\n-            bundle.jscompilation = f\'++plone++{filepath}\'\n-        return json.dumps({\n-            \'success\': True,\n-            \'filepath\': \'++plone++\' + filepath\n-        })\n-\n-    def save_less_build(self):\n-        overrides = OverrideFolderManager(self.context)\n-        req = self.request\n-        filepath = \'static/%s-compiled.css\' % req.form[\'bundle\']\n-        data = \'\'\n-        for key, value in req.form.items():\n-            if not key.startswith(\'data-\'):\n-                continue\n-            if isinstance(value, str):\n-                value = [value]\n-            data += \'\\n\'.join(value) + \'\\n\'\n-        overrides.save_file(filepath, data)\n-        bundle = self.get_bundles().get(req.form[\'bundle\'])\n-        if bundle:\n-            bundle.last_compilation = datetime.now()\n-            bundle.csscompilation = f\'++plone++{filepath}\'\n-        return json.dumps({\n-            \'success\': True,\n-            \'filepath\': \'++plone++\' + filepath\n-        })\n-\n-    def save_less_variables(self):\n-        data = {}\n-        for key, val in json.loads(self.request.form.get(\'data\')).items():\n-            data[key] = val\n-        self.registry[\'plone.lessvariables\'] = data\n-        return json.dumps({\n-            \'success\': True\n-        })\n-\n-    def save_pattern_options(self):\n-        data = {}\n-        for key, val in json.loads(self.request.form.get(\'data\')).items():\n-            data[key] = val\n-        self.registry[\'plone.patternoptions\'] = data\n-        return json.dumps({\n-            \'success\': True\n-        })\n-\n-    def get_overrides(self):\n-        overrides = OverrideFolderManager(self.context)\n-\n-        def _read_folder(folder):\n-            files = []\n-            for filename in folder.listDirectory():\n-                try:\n-                    item = folder[filename]\n-                except NotFound:\n-                    continue\n-                if folder.isDirectory(filename):\n-                    files.extend(_read_folder(item))\n-                else:\n-                    files.append(item)\n-            return files\n-        files = _read_folder(overrides.container)\n-        results = []\n-        site_path = self.context.getPhysicalPath()\n-        for fi in files:\n-            path = fi.getPhysicalPath()\n-            rel_path = path[len(site_path) + 2:]\n-            results.append(\'++plone++{}/{}\'.format(\n-                rel_path[0], \'/\'.join(rel_path[1:])))\n-        return results\n-\n-    def config(self):\n-        base_url = self.context.absolute_url()\n-        resources = self.get_resources()\n-\n-        less_url = self.registry[\'plone.resources.lessc\']\n-        rjs_url = self.registry[\'plone.resources.rjs\']\n-\n-        data = {\n-            \'development\': self.registry[\'plone.resources.development\'],\n-            \'lessvariables\': self.registry[\'plone.lessvariables\'],\n-            \'resources\': {},\n-            \'bundles\': {},\n-            \'javascripts\': {},\n-            \'css\': {},\n-            \'baseUrl\': base_url,\n-            \'manageUrl\': \'%s/@@resourceregistry-controlpanel\' % base_url,\n-            \'lessUrl\': f\'{base_url}/{less_url}\',\n-            \'lessConfigUrl\': \'%s/less-variables.js\' % base_url,\n-            \'rjsUrl\': rjs_url,\n-            \'patternoptions\': self.registry[\'plone.patternoptions\']\n-        }\n-        bundles = self.get_bundles()\n-        for key, resource in resources.items():\n-            data[\'resources\'][key] = recordsToDict(resource)\n-        for key, bundle in bundles.items():\n-            data[\'bundles\'][key] = recordsToDict(bundle)\n-        data[\'overrides\'] = self.get_overrides()\n-        return json.dumps(data, cls=JSONEncoder)\n+            raise ValueError("Invalid form data")\n+        self.request.response.redirect(self.request["ACTUAL_URL"])\ndiff --git a/Products/CMFPlone/controlpanel/browser/site.py b/Products/CMFPlone/controlpanel/browser/site.py\nindex f685d6fd69..2bd9e99418 100644\n--- a/Products/CMFPlone/controlpanel/browser/site.py\n+++ b/Products/CMFPlone/controlpanel/browser/site.py\n@@ -16,6 +16,7 @@ class SiteControlPanelForm(controlpanel.RegistryEditForm):\n     def updateFields(self):\n         super().updateFields()\n         self.fields[\'site_logo\'].widgetFactory = NamedImageFieldWidget\n+        self.fields[\'site_favicon\'].widgetFactory = NamedImageFieldWidget\n \n     def updateWidgets(self):\n         super().updateWidgets()\ndiff --git a/Products/CMFPlone/controlpanel/browser/usergroups_usersoverview.pt b/Products/CMFPlone/controlpanel/browser/usergroups_usersoverview.pt\nindex 997c4befdb..6bf0192991 100644\n--- a/Products/CMFPlone/controlpanel/browser/usergroups_usersoverview.pt\n+++ b/Products/CMFPlone/controlpanel/browser/usergroups_usersoverview.pt\n@@ -61,7 +61,12 @@\n \n         <div class="mb-3 input-group">\n           <a class="pat-plone-modal me-3 btn btn-success " id="add-user"\n-             data-pat-plone-modal="{&quot;actionOptions&quot;: {&quot;displayInModal&quot;: false}}"\n+             data-pat-plone-modal=\'{\n+                "actionOptions": {\n+                  "redirectOnResponse": true,\n+                  "redirectToUrl": "${portal_url}/@@usergroup-userprefs"\n+                }\n+              }\'\n              tal:attributes="href string:${portal_url}/@@new-user"\n              i18n:translate="label_add_new_user">Add New User</a>\n           <span class="input-group-text" id="quickSearchLabel" i18n:translate="label_user_search">User Search</span>\n@@ -95,8 +100,8 @@\n                 <tr>\n                   <th  class="text-start" i18n:translate="listingheader_user_name">User name</th>\n                   <th class="rotate" tal:repeat="portal_role portal_roles"><div tal:content="portal_role" i18n:translate="">Role</div></th>\n-                  <th class="rotate alert-warning"><div i18n:translate="listingheader_reset_password">Reset Password</div></th>\n-                  <th class="rotate alert-danger"><div i18n:translate="listingheader_remove">Remove</div></th>\n+                  <th class="rotate table-warning"><div i18n:translate="listingheader_reset_password">Reset Password</div></th>\n+                  <th class="rotate table-danger"><div i18n:translate="listingheader_remove">Remove</div></th>\n                 </tr>\n               </thead>\n               <tbody>\n@@ -139,7 +144,7 @@\n \n                         </td>\n \n-                        <td class="listingCheckbox alert-warning">\n+                        <td class="listingCheckbox table-warning">\n                           <input type="checkbox"\n                                  class="noborder"\n                                  name="users.resetpassword:records"\n@@ -149,7 +154,7 @@\n                                                  disabled python:user[\'can_set_password\'] and default or \'disabled\'" />\n                         </td>\n \n-                        <td class="listingCheckbox alert-danger">\n+                        <td class="listingCheckbox table-danger">\n                           <input type="checkbox"\n                                          class="noborder notify"\n                                          name="delete:list"\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_filter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_filter.py\nindex 571824ecc9..5ede8606b1 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_filter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_filter.py\n@@ -103,5 +103,5 @@ def test_nasty_tags(self):\n         ds = datastream(\'dummy_name\')\n         self.assertEqual(\n             self.safe_html.convert(good_html, ds).getData(),\n-            \'<p/>\'\n+            \'<p></p>\'\n         )\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_relations.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_relations.py\nnew file mode 100644\nindex 0000000000..a99d71950a\n--- /dev/null\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_relations.py\n@@ -0,0 +1,74 @@\n+import unittest\n+\n+from plone.app.testing import SITE_OWNER_NAME, SITE_OWNER_PASSWORD\n+from plone.testing.zope import Browser\n+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n+\n+\n+class RelationsControlPanelFunctionalTest(unittest.TestCase):\n+    """Test that links and actions in controlpanel starts with to absolute portal url."""\n+\n+    layer = PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n+\n+    def _add_broken_relation(self):\n+        import transaction\n+        from persistent.list import PersistentList\n+        from z3c.relationfield import RelationValue\n+        from zope.component import getUtility\n+        from zope.intid.interfaces import IIntIds\n+        from zope.lifecycleevent import modified\n+\n+        self.portal.invokeFactory("Document", id="doc1", title="doc1")\n+        doc1 = self.portal["doc1"]\n+        self.portal.invokeFactory("Document", id="doc2", title="doc2")\n+        doc2 = self.portal["doc2"]\n+\n+        intids = getUtility(IIntIds)\n+        doc1.relatedItems = PersistentList()\n+        doc1.relatedItems.append(RelationValue(intids.getId(doc2)))\n+        modified(doc1)\n+        self.portal._delObject("doc2")\n+        transaction.commit()\n+\n+    def setUp(self):\n+        self.app = self.layer["app"]\n+        self.portal = self.layer["portal"]\n+        self.portal_url = self.portal.absolute_url()\n+        self.browser = Browser(self.app)\n+        self.browser.handleErrors = False\n+        self.browser.addHeader(\n+            "Authorization", f"Basic {SITE_OWNER_NAME}:{SITE_OWNER_PASSWORD}"\n+        )\n+\n+    def test_inspect_realtions_form_action(self):\n+        from io import StringIO\n+\n+        from lxml import etree\n+\n+        self.browser.open(f"{self.portal_url}/@@inspect-relations")\n+        tree = etree.parse(StringIO(self.browser.contents), etree.HTMLParser())\n+        action_url = tree.xpath("//form[@id=\'relationinfo\']/@action")[0]\n+        self.assertTrue(\n+            action_url.startswith(self.portal_url),\n+            "URL in relationinfo form should start with portal url",\n+        )\n+\n+    def test_rebuild_relations_links(self):\n+        from io import StringIO\n+\n+        from lxml import etree\n+\n+        # first we need a broken relation\n+        # for conditional rendering alert panel in controlpanel\n+        self._add_broken_relation()\n+\n+        self.browser.open(f"{self.portal_url}/@@inspect-relations")\n+        tree = etree.parse(StringIO(self.browser.contents), etree.HTMLParser())\n+        hrefs = tree.xpath(\n+            "//div[@id=\'content-core\']//a[contains(@href, \'@@rebuild-relations\')]/@href"\n+        )\n+        for href in hrefs:\n+            self.assertTrue(\n+                href.startswith(self.portal_url),\n+                "URL in Link should start with portal url",\n+            )\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_overview.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_overview.py\nindex 55a368e5d5..974d6c3828 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_overview.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_overview.py\n@@ -4,6 +4,7 @@\n from plone.registry.interfaces import IRegistry\n from zope.component import getUtility\n from unittest import mock\n+import os\n import unittest\n \n \n@@ -12,15 +13,15 @@ def mock_getUtility1(iface):\n \n \n def mock_getUtility2(iface):\n-    return {\'plone.portal_timezone\': None}\n+    return {"plone.portal_timezone": None}\n \n \n def mock_getUtility3(iface):\n-    return {\'plone.portal_timezone\': \'Europe/Amsterdam\'}\n+    return {"plone.portal_timezone": "Europe/Amsterdam"}\n \n \n def mock_getUtility4(iface):\n-    return {\'plone.app.event.portal_timezone\': \'Europe/Amsterdam\'}\n+    return {"plone.app.event.portal_timezone": "Europe/Amsterdam"}\n \n \n class TestControlPanel(unittest.TestCase):\n@@ -28,34 +29,49 @@ class TestControlPanel(unittest.TestCase):\n     layer = PLONE_INTEGRATION_TESTING\n \n     def setUp(self):\n-        self.portal = self.layer[\'portal\']\n-        self.request = self.layer[\'request\']\n-        setRoles(self.portal, TEST_USER_ID, [\'Manager\'])\n+        self.portal = self.layer["portal"]\n+        self.request = self.layer["request"]\n+        setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-    @mock.patch(\'Products.CMFPlone.controlpanel.browser.overview.getUtility\',\n-                new=mock_getUtility1)\n+    @mock.patch(\n+        "Products.CMFPlone.controlpanel.browser.overview.getUtility",\n+        new=mock_getUtility1,\n+    )\n     def test_timezone_warning__noreg(self):\n         # If no registry key is available, return True\n         registry = getUtility(IRegistry)\n         reg_key = "plone.portal_timezone"\n         del registry.records[reg_key]\n         self.assertFalse(reg_key in registry)\n-        view = self.portal.restrictedTraverse(\'@@overview-controlpanel\')\n+        view = self.portal.restrictedTraverse("@@overview-controlpanel")\n         self.assertTrue(view.timezone_warning())\n \n-    @mock.patch(\'Products.CMFPlone.controlpanel.browser.overview.getUtility\',\n-                new=mock_getUtility2)\n+    @mock.patch(\n+        "Products.CMFPlone.controlpanel.browser.overview.getUtility",\n+        new=mock_getUtility2,\n+    )\n     def test_timezone_warning__emptyreg(self):\n         # If registry key value is empty, return True\n         registry = getUtility(IRegistry)\n         reg_key = "plone.portal_timezone"\n         registry[reg_key] = None\n-        view = self.portal.restrictedTraverse(\'@@overview-controlpanel\')\n+        view = self.portal.restrictedTraverse("@@overview-controlpanel")\n         self.assertTrue(view.timezone_warning())\n \n-    @mock.patch(\'Products.CMFPlone.controlpanel.browser.overview.getUtility\',\n-                new=mock_getUtility3)\n+    @mock.patch(\n+        "Products.CMFPlone.controlpanel.browser.overview.getUtility",\n+        new=mock_getUtility3,\n+    )\n     def test_timezone_warning__set(self):\n         # If new plone.portal_timezone is set, return False\n-        view = self.portal.restrictedTraverse(\'@@overview-controlpanel\')\n+        view = self.portal.restrictedTraverse("@@overview-controlpanel")\n         self.assertFalse(view.timezone_warning())\n+\n+    def test_gunicorn_server_name(self):\n+        self.request["SERVER_SOFTWARE"] = "gunicorn/19.6.0"\n+        view = self.portal.restrictedTraverse("@@overview-controlpanel")\n+        self.assertEqual(view.server_info()["server_name"], "gunicorn")\n+        self.request["SERVER_SOFTWARE"] = "bad-gunicorn-name/19.6.0"\n+        view = self.portal.restrictedTraverse("@@overview-controlpanel")\n+        with self.assertWarns(Warning):\n+            view.server_info()["server_name"]\ndiff --git a/Products/CMFPlone/interfaces/controlpanel.py b/Products/CMFPlone/interfaces/controlpanel.py\nindex a8753f3e8e..9731ce70f2 100644\n--- a/Products/CMFPlone/interfaces/controlpanel.py\n+++ b/Products/CMFPlone/interfaces/controlpanel.py\n@@ -1,3 +1,3 @@\n from zope.deprecation import moved\n \n-moved(\'plone.base.interfaces.controlpanel\', \'Version 7.0\')\n\\ No newline at end of file\n+moved(\'plone.base.interfaces.controlpanel\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/interfaces/resources.py b/Products/CMFPlone/interfaces/resources.py\nindex 6d1c933ae0..5e1cab52d3 100644\n--- a/Products/CMFPlone/interfaces/resources.py\n+++ b/Products/CMFPlone/interfaces/resources.py\n@@ -1,3 +1,3 @@\n from zope.deprecation import moved\n \n-moved(\'plone.base.interfaces.resources\', \'Version 7.0\')\n\\ No newline at end of file\n+moved(\'plone.base.interfaces.resources\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/profiles/default/controlpanel.xml b/Products/CMFPlone/profiles/default/controlpanel.xml\nindex 1cf104e4b7..2ab92c9020 100644\n--- a/Products/CMFPlone/profiles/default/controlpanel.xml\n+++ b/Products/CMFPlone/profiles/default/controlpanel.xml\n@@ -50,20 +50,6 @@\n     i18n:attributes="title">\n   <permission>Plone Site Setup: Users and Groups</permission>\n  </configlet>\n- <configlet title="Personal Preferences" action_id="MemberPrefs" appId="Plone"\n-    category="Member" condition_expr=""\n-    icon_expr="string:person"\n-    url_expr="string:${portal_url}/@@personal-preferences" visible="True"\n-    i18n:attributes="title">\n-  <permission>Set own properties</permission>\n- </configlet>\n- <configlet title="Change Password" action_id="MemberPassword" appId="Plone"\n-    category="Member" condition_expr="python:member.canPasswordSet()"\n-    icon_expr="string:lock"\n-    url_expr="string:${portal_url}/password_form" visible="True"\n-    i18n:attributes="title">\n-  <permission>Set own password</permission>\n- </configlet>\n  <configlet title="Mail" action_id="MailHost" appId="MailHost"\n     category="plone-general" condition_expr=""\n     icon_expr="string:envelope-open"\ndiff --git a/Products/CMFPlone/profiles/default/metadata.xml b/Products/CMFPlone/profiles/default/metadata.xml\nindex 12021c778f..782b58753c 100644\n--- a/Products/CMFPlone/profiles/default/metadata.xml\n+++ b/Products/CMFPlone/profiles/default/metadata.xml\n@@ -1,4 +1,4 @@\n <?xml version="1.0"?>\n <metadata>\n-  <version>6003</version>\n+  <version>6004</version>\n </metadata>\ndiff --git a/Products/CMFPlone/profiles/default/viewlets.xml b/Products/CMFPlone/profiles/default/viewlets.xml\nindex 4e86ae7d91..5622b3eb67 100644\n--- a/Products/CMFPlone/profiles/default/viewlets.xml\n+++ b/Products/CMFPlone/profiles/default/viewlets.xml\n@@ -1,12 +1,13 @@\n <?xml version="1.0"?>\n <object>\n   <order manager="plone.portaltop" skinname="Plone Default">\n-    <viewlet name="plone.header" />\n+\n   </order>\n   <order manager="plone.portalheader" skinname="Plone Default">\n     <viewlet name="plone.anontools" />\n     <viewlet name="plone.membertools" />\n     <viewlet name="plone.logo" />\n+    <viewlet name="plone.favicon" />\n     <viewlet name="plone.searchbox" />\n     <viewlet name="plone.app.i18n.locales.languageselector" />\n     <viewlet name="plone.app.multilingual.languageselector" />\ndiff --git a/Products/CMFPlone/profiles/dependencies/registry.xml b/Products/CMFPlone/profiles/dependencies/registry.xml\nindex b03d081331..a2868d12c5 100644\n--- a/Products/CMFPlone/profiles/dependencies/registry.xml\n+++ b/Products/CMFPlone/profiles/dependencies/registry.xml\n@@ -18,6 +18,8 @@\n            prefix="plone" />\n   <records interface="Products.CMFPlone.interfaces.ISiteSchema"\n            prefix="plone" />\n+  <records interface="Products.CMFPlone.interfaces.ITinyMCESchema"\n+           prefix="plone" />\n   <records interface="Products.CMFPlone.interfaces.IDateAndTimeSchema"\n            prefix="plone" />\n   <records interface="Products.CMFPlone.interfaces.IMarkupSchema"\n@@ -89,85 +91,11 @@\n   <record name="plone.resources.development">\n     <field type="plone.registry.field.Bool">\n       <title>Frontend development mode</title>\n+      <required>False</required>\n     </field>\n     <value>False</value>\n   </record>\n \n-  <!-- Plone generated resources -->\n-  <record name="plone.resources.configjs">\n-    <field type="plone.registry.field.ASCII">\n-      <title>config.js</title>\n-    </field>\n-    <value>config.js</value>\n-  </record>\n-  <record name="plone.resources.less-modify">\n-    <field type="plone.registry.field.ASCII">\n-      <title>less-modify js</title>\n-    </field>\n-    <value>less-modify.js</value>\n-  </record>\n-  <record name="plone.resources.less-variables">\n-      <field type="plone.registry.field.ASCII">\n-        <title>LESS variables js definer</title>\n-      </field>\n-      <value key="js">less-variables.js</value>\n-  </record>\n-\n-  <!-- Mixins vars for less with the paths -->\n-  <record name="plone.lessvariables">\n-    <field type="plone.registry.field.Dict">\n-      <title>Less variables</title>\n-      <description>Variables that are going to be compiled on less</description>\n-      <key_type type="plone.registry.field.ASCIILine" />\n-      <value_type type="plone.registry.field.TextLine" />\n-    </field>\n-    <value>\n-      <element key="icon-font-path">\\"../fonts/\\"</element>\n-      <element key="bowerPath">\\"{site_url}/++plone++static/components/\\"</element>\n-      <element key="mockupPath">\\"{site_url}/++resource++mockup/\\"</element>\n-      <element key="mockuplessPath">\\"{site_url}/++resource++mockupless/\\"</element>\n-\n-      <element key="plone-link-color">rgba(0,123,179,1)</element>\n-      <element key="plone-gray-lighter">lighten(#000, 80%)</element>\n-      <element key="plone-gray-light">lighten(#000, 46.5%)</element>\n-\n-      <element key="plone-toolbar-bg">rgba(0,0,0,.9)</element>\n-      <element key="plone-toolbar-submenu-bg">rgba(45,45,45,.96)</element>\n-      <element key="plone-toolbar-submenu-width">180px</element>\n-      <element key="plone-toolbar-font-primary">Roboto, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif</element>\n-      <element key="plone-toolbar-font-secondary">Roboto, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif</element>\n-      <element key="plone-toolbar-separator-color">rgba(255,255,255,.17)</element>\n-      <element key="plone-toolbar-link">{plone-link-color}</element>\n-      <element key="plone-toolbar-text-color">rgba(255,255,255,1)</element>\n-      <element key="plone-toolbar-submenu-text-color">lighten(#000, 90%)</element>\n-      <element key="plone-toolbar-submenu-header-color">lighten(#000, 80%)</element>\n-      <element key="plone-toolbar-published-color">{plone-link-color}</element>\n-      <element key="plone-toolbar-draft-color">rgb(250,184,42)</element>\n-      <element key="plone-toolbar-pending-color">rgb(226,231,33)</element>\n-      <element key="plone-toolbar-private-color">rgb(196,24,60)</element>\n-      <element key="plone-toolbar-internal-color">rgb(250,184,42)</element>\n-      <element key="plone-toolbar-internally-published-color">rgb(136,61,250)</element>\n-\n-      <element key="plone-screen-xs-min">480px</element>\n-      <element key="plone-screen-sm-min">768px</element>\n-      <element key="plone-screen-md-min">992px</element>\n-      <element key="plone-screen-lg-min">1200px</element>\n-\n-      <element key="plone-left-toolbar-expanded">120px</element>\n-      <element key="plone-left-toolbar">60px</element>\n-\n-      <element key="plone-container-sm">750px</element>\n-      <element key="plone-container-md">970px</element>\n-      <element key="plone-container-lg">1170px</element>\n-\n-      <element key="plone-screen-xs-max">(@plone-screen-sm-min - 1)</element>\n-      <element key="plone-screen-sm-max">(@plone-screen-md-min - 1)</element>\n-      <element key="plone-screen-md-max">(@plone-screen-lg-min - 1)</element>\n-\n-    </value>\n-  </record>\n-\n-\n   <record name="plone.patternoptions">\n     <field type="plone.registry.field.Dict">\n       <title>Patterns configuration</title>\ndiff --git a/Products/CMFPlone/relationhelper.py b/Products/CMFPlone/relationhelper.py\nindex 0a8f041ce5..da92cccb97 100644\n--- a/Products/CMFPlone/relationhelper.py\n+++ b/Products/CMFPlone/relationhelper.py\n@@ -186,7 +186,11 @@ def restore_relations(context=None, all_relations=None):\n             continue\n \n         from_attribute = item[\'from_attribute\']\n-        to_id = intids.getId(target_obj)\n+        try:\n+            to_id = intids.getId(target_obj)\n+        except KeyError as e:\n+            logger.warning(f\'No intid for {target_obj}\')\n+            continue\n \n         if from_attribute == referencedRelationship:\n             # Ignore linkintegrity for now. We\'ll rebuilt it at the end!\ndiff --git a/Products/CMFPlone/resources/__init__.py b/Products/CMFPlone/resources/__init__.py\nindex f64da4a538..092fcafe89 100644\n--- a/Products/CMFPlone/resources/__init__.py\n+++ b/Products/CMFPlone/resources/__init__.py\n@@ -1,20 +1,21 @@\n+from zope.deprecation import deprecate\n+\n import os\n \n \n RESOURCE_DEVELOPMENT_MODE = os.getenv("FEDEV", "").lower() == "true"\n \n \n+@deprecate(\n+    "Adding single resources is no longer supported in Plone 6, use \'add_bundle_on_request\' instead"\n+)\n def add_resource_on_request(request, resource):\n-    """Adds the resource to the request"""\n-    if not isinstance(resource, str):\n-        raise ValueError("add_resource_on_request expects a string value for resource")\n-    request.enabled_resources = getattr(request, "enabled_resources", [])\n-    if resource not in request.enabled_resources:\n-        request.enabled_resources.append(resource)\n+    """(DEPRECATED) Adds the resource to the request."""\n+    return\n \n \n def add_bundle_on_request(request, bundle):\n-    """Adds the bundle to the request"""\n+    """Adds the bundle to the request."""\n     if not isinstance(bundle, str):\n         raise ValueError("add_bundle_on_request expects a string value for bundle")\n     request.enabled_bundles = getattr(request, "enabled_bundles", [])\n@@ -23,7 +24,7 @@ def add_bundle_on_request(request, bundle):\n \n \n def remove_bundle_on_request(request, bundle):\n-    """Removes the bundle to the request"""\n+    """Removes the bundle to the request."""\n     if not isinstance(bundle, str):\n         raise ValueError("remove_bundle_on_request expects a string value for bundle")\n     request.disabled_bundles = getattr(request, "disabled_bundles", [])\ndiff --git a/Products/CMFPlone/resources/browser/combine.py b/Products/CMFPlone/resources/browser/combine.py\nindex 84bce711e8..b52ae3aace 100644\n--- a/Products/CMFPlone/resources/browser/combine.py\n+++ b/Products/CMFPlone/resources/browser/combine.py\n@@ -7,13 +7,23 @@\n from plone.base.interfaces import IBundleRegistry\n from plone.base.interfaces.resources import (\n     OVERRIDE_RESOURCE_DIRECTORY_NAME,\n-)  # noqa\n+)\n from zExceptions import NotFound\n from zope.component import getUtility\n from zope.component import queryUtility\n \n import logging\n import re\n+import zope.deferredimport\n+\n+\n+zope.deferredimport.initialize()\n+\n+zope.deferredimport.deprecated(\n+    "Import from Products.CMFPlone.resources.utils instead",\n+    PRODUCTION_RESOURCE_DIRECTORY="Products.CMFPlone:resources.utils.PRODUCTION_RESOURCE_DIRECTORY",\n+    get_override_directory="Products.CMFPlone:resources.utils.get_override_directory",\n+)\n \n \n PRODUCTION_RESOURCE_DIRECTORY = "production"\n@@ -76,18 +86,6 @@ def write_js(context, folder, meta_bundle):\n     registry = getUtility(IRegistry)\n     resources = []\n \n-    # default resources\n-    if meta_bundle == "default" and registry.records.get("plone.resources/jquery.js"):\n-        resources.append(\n-            get_resource(context, registry.records["plone.resources/jquery.js"].value)\n-        )\n-        resources.append(\n-            get_resource(context, registry.records["plone.resources.requirejs"].value)\n-        )\n-        resources.append(\n-            get_resource(context, registry.records["plone.resources.configjs"].value)\n-        )\n-\n     # bundles\n     bundles = registry.collectionOfInterface(\n         IBundleRegistry, prefix="plone.bundles", check=False\ndiff --git a/Products/CMFPlone/resources/browser/configjs.py b/Products/CMFPlone/resources/browser/configjs.py\ndeleted file mode 100644\nindex cdb8c72146..0000000000\n--- a/Products/CMFPlone/resources/browser/configjs.py\n+++ /dev/null\n@@ -1,95 +0,0 @@\n-from plone.registry.interfaces import IRegistry\n-from plone.base.interfaces import IResourceRegistry\n-from Products.Five.browser import BrowserView\n-from zope.component import getUtility\n-\n-import json\n-import re\n-\n-\n-configjs = """requirejs.config({\n-    baseUrl: PORTAL_URL,\n-    paths: %s,\n-    shim: %s,\n-    optimize: \'uglify\',\n-    wrapShim: true\n-});"""\n-\n-\n-def _format_shims(shims):\n-    result = []\n-    for name, val in shims.items():\n-        options = []\n-        if val.get("exports"):\n-            options.append(\'exports: "%s"\' % val["exports"])\n-        if val.get("deps"):\n-            options.append("deps: " + json.dumps(val["deps"]))\n-        if val.get("init"):\n-            # function, no escaping here\n-            options.append("init: %s" % val["init"])\n-        result.append(\n-            """\n-        "{}": {{\n-            {}\n-        }}""".format(\n-                name, ",\\n            ".join(options)\n-            )\n-        )\n-    return "{" + ",".join(result) + "\\n    }"\n-\n-\n-class RequireJsView(BrowserView):\n-    """\n-    This view creates the config.js for requirejs with all the registered\n-    resources\n-\n-    It\'s used on development for the config.js and on compilation for the\n-    optimize.js\n-    """\n-\n-    @property\n-    def registry(self):\n-        return getUtility(IRegistry)\n-\n-    def registryResources(self):\n-        return self.registry.collectionOfInterface(\n-            IResourceRegistry, prefix="plone.resources", check=False\n-        )\n-\n-    def get_requirejs_config(self):\n-        """\n-        Returns the information for requirejs configuration\n-        """\n-        registry = self.registryResources()\n-        paths = {}\n-        shims = {}\n-        for name, script in registry.items():\n-            if script.js:\n-                # Main resource js file\n-                src = re.sub(r"\\.js$", "", script.js)\n-                paths[name] = src\n-                exports = script.export\n-                deps = script.deps\n-                inits = script.init\n-                if exports or deps or inits:\n-                    shims[name] = {}\n-                    if exports not in ("", None):\n-                        shims[name]["exports"] = exports\n-                    if deps not in ("", None):\n-                        shims[name]["deps"] = deps.split(",")\n-                    if inits not in ("", None):\n-                        shims[name]["init"] = inits\n-            if script.url:\n-                # Resources available under name-url name\n-                src = script.url\n-                paths[name + "-url"] = src\n-        return (paths, shims)\n-\n-\n-class ConfigJsView(RequireJsView):\n-    """ config.js for requirejs for script rendering. """\n-\n-    def __call__(self):\n-        (paths, shims) = self.get_requirejs_config()\n-        self.request.response.setHeader("Content-Type", "application/javascript")\n-        return configjs % (json.dumps(paths, indent=4), _format_shims(shims))\ndiff --git a/Products/CMFPlone/resources/browser/configure.zcml b/Products/CMFPlone/resources/browser/configure.zcml\nindex 18875cfdb1..32ca958596 100644\n--- a/Products/CMFPlone/resources/browser/configure.zcml\n+++ b/Products/CMFPlone/resources/browser/configure.zcml\n@@ -6,47 +6,22 @@\n   <browser:viewlet\n       name="plone.resourceregistries.scripts"\n       manager="plone.app.layout.viewlets.interfaces.IScripts"\n-      class="Products.CMFPlone.resources.browser.scripts.ScriptsView"\n-      template="scripts.pt"\n+      class="Products.CMFPlone.resources.browser.resource.ScriptsView"\n       permission="zope2.View"\n       />\n \n   <browser:viewlet\n       name="plone.resourceregistries.styles"\n       manager="plone.app.layout.viewlets.interfaces.IHtmlHeadLinks"\n-      class="Products.CMFPlone.resources.browser.styles.StylesView"\n-      template="styles.pt"\n+      class="Products.CMFPlone.resources.browser.resource.StylesView"\n       permission="zope2.View"\n       />\n \n-\n-  <browser:page\n-      for="*"\n-      name="config.js"\n-      class=".configjs.ConfigJsView"\n-      permission="zope.Public"\n-      />\n-\n-  <browser:page\n-      for="*"\n-      name="less-variables.js"\n-      class=".mixins.LessConfiguration"\n-      permission="zope.Public"\n-      />\n-\n-  <browser:page\n-      for="*"\n-      name="less-modify.js"\n-      class=".mixins.LessModifyConfiguration"\n-      permission="zope.Public"\n-      />\n-\n-\n-  <browser:page\n-      for="*"\n-      name="plone_less_dependency.less"\n-      class=".mixins.LessDependency"\n-      permission="zope.Public"\n+  <adapter\n+      name="webresource"\n+      for="* zope.publisher.interfaces.IRequest"\n+      provides="zope.traversing.interfaces.ITraversable"\n+      factory="plone.resource.traversal.UniqueResourceTraverser"\n       />\n \n </configure>\ndiff --git a/Products/CMFPlone/resources/browser/cook.py b/Products/CMFPlone/resources/browser/cook.py\ndeleted file mode 100644\nindex 3e572eb741..0000000000\n--- a/Products/CMFPlone/resources/browser/cook.py\n+++ /dev/null\n@@ -1,170 +0,0 @@\n-from calmjs.parse import es5\n-from datetime import datetime\n-from io import BytesIO\n-from plone.protect.interfaces import IDisableCSRFProtection\n-from plone.registry.interfaces import IRegistry\n-from plone.resource.interfaces import IResourceDirectory\n-from plone.subrequest import subrequest\n-from plone.base.interfaces.resources import IBundleRegistry\n-from plone.base.interfaces.resources import IResourceRegistry\n-from plone.base.interfaces.resources import (\n-    OVERRIDE_RESOURCE_DIRECTORY_NAME,\n-)  # noqa\n-from Products.CMFPlone.resources.browser.combine import combine_bundles\n-from scss import Compiler\n-from zExceptions import NotFound\n-from zope.component import getUtility\n-from zope.component.hooks import getSite\n-from zope.globalrequest import getRequest\n-from zope.interface import alsoProvides\n-\n-import logging\n-\n-\n-logger = logging.getLogger("Products.CMFPlone")\n-\n-REQUIREJS_RESET_PREFIX = """\n-/* reset requirejs definitions so that people who\n-   put requirejs in legacy compilation do not get errors */\n-var _old_define = define;\n-var _old_require = require;\n-define = undefined;\n-require = undefined;\n-try{\n-"""\n-REQUIREJS_RESET_POSTFIX = """\n-}catch(e){\n-    // log it\n-    if (typeof console !== "undefined"){\n-        console.log(\'Error loading javascripts!\' + e);\n-    }\n-}finally{\n-    define = _old_define;\n-    require = _old_require;\n-}\n-"""\n-\n-\n-def cookWhenChangingSettings(context, bundle=None):\n-    """When our settings are changed, re-cook the not compilable bundles"""\n-    registry = getUtility(IRegistry)\n-    resources = registry.collectionOfInterface(\n-        IResourceRegistry, prefix="plone.resources", check=False\n-    )\n-    if bundle is None:\n-        # default to cooking legacy bundle\n-        bundles = registry.collectionOfInterface(\n-            IBundleRegistry, prefix="plone.bundles", check=False\n-        )\n-        if "plone-legacy" in bundles:\n-            bundle = bundles["plone-legacy"]\n-        else:\n-            bundle = bundles.setdefault("plone-legacy")\n-            bundle.resources = []\n-\n-    if not bundle.resources:\n-        # you can have a bundle without any resources defined and it\'s just\n-        # shipped as a legacy compiled js file\n-        return\n-\n-    js_path = bundle.jscompilation\n-    css_path = bundle.csscompilation\n-\n-    if not js_path and not css_path:\n-        logger.warning(\n-            "No js_path or css_path found. We need a plone.resource "\n-            "based resource path in order to store the compiled JS and CSS."\n-        )\n-        return\n-\n-    # Let\'s join all css and js\n-    css_compiler = Compiler(output_style="compressed")\n-    cooked_css = ""\n-    cooked_js = REQUIREJS_RESET_PREFIX\n-    siteUrl = getSite().absolute_url()\n-    request = getRequest()\n-    for package in bundle.resources or []:\n-        if package not in resources:\n-            continue\n-        resource = resources[package]\n-\n-        if css_path:\n-            for css_resource in resource.css:\n-                css_url = siteUrl + "/" + css_resource\n-                response = subrequest(css_url)\n-                if response.status == 200:\n-                    logger.info("Cooking css %s", css_resource)\n-                    css = response.getBody()\n-                    if css_resource[-8:] != ".min.css":\n-                        css = css_compiler.compile_string(css)\n-                    if not isinstance(css, str):\n-                        css = css.decode("utf8")\n-                    cooked_css += "\\n/* Resource: {} */\\n{}\\n".format(css_resource, css)\n-                else:\n-                    cooked_css += "\\n/* Could not find resource: {} */\\n\\n".format(\n-                        css_resource\n-                    )\n-                    logger.warning("Could not find resource: %s", css_resource)\n-        if not resource.js or not js_path:\n-            continue\n-        js_url = siteUrl + "/" + resource.js\n-        response = subrequest(js_url)\n-        if response.status == 200:\n-            logger.info("Cooking js %s", resource.js)\n-            js = response.getBody()\n-            if not isinstance(js, str):\n-                js = js.decode("utf8")\n-            try:\n-                cooked_js += "\\n/* resource: {} */\\n{}".format(\n-                    resource.js,\n-                    js if resource.js.endswith(".min.js") else es5.minify_print(js),\n-                )\n-            except SyntaxError:\n-                cooked_js += "\\n/* Resource (error cooking): {} */\\n{}".format(\n-                    resource.js, js\n-                )\n-                logger.warning("Error cooking resource: %s", resource.js)\n-        else:\n-            logger.warning("Could not find resource: %s", resource.js)\n-            cooked_js += "\\n/* Could not find resource: {} */\\n\\n".format(js_url)\n-\n-    cooked_js += REQUIREJS_RESET_POSTFIX\n-\n-    persistent_directory = getUtility(IResourceDirectory, name="persistent")\n-    if OVERRIDE_RESOURCE_DIRECTORY_NAME not in persistent_directory:\n-        persistent_directory.makeDirectory(OVERRIDE_RESOURCE_DIRECTORY_NAME)\n-    container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n-\n-    def _write_resource(resource_path, cooked_string):\n-        if not resource_path:\n-            return\n-        if "++plone++" in resource_path:\n-            resource_path = resource_path.split("++plone++")[-1]\n-        if "/" in resource_path:\n-            resource_name, resource_filepath = resource_path.split("/", 1)\n-        else:\n-            resource_name = "legacy"\n-            resource_filepath = resource_path\n-        if resource_name not in container:\n-            container.makeDirectory(resource_name)\n-        if not isinstance(\n-            cooked_string, bytes\n-        ):  # handle Error of OFS.Image  # noqa: E501\n-            cooked_string = cooked_string.encode("ascii", errors="ignore")\n-        try:\n-            folder = container[resource_name]\n-            fi = BytesIO(cooked_string)\n-            folder.writeFile(resource_filepath, fi)\n-            logger.info("Writing cooked resource: %s", resource_path)\n-        except NotFound:\n-            logger.warning("Error writing cooked resource: %s", resource_path)\n-\n-    _write_resource(js_path, cooked_js)\n-    _write_resource(css_path, cooked_css)\n-\n-    bundle.last_compilation = datetime.now()\n-    # refresh production meta bundles\n-    combine_bundles(context)\n-\n-    # Disable CSRF protection on this request\n-    alsoProvides(request, IDisableCSRFProtection)\ndiff --git a/Products/CMFPlone/resources/browser/interfaces.py b/Products/CMFPlone/resources/browser/interfaces.py\ndeleted file mode 100644\nindex 8ebe8cc452..0000000000\n--- a/Products/CMFPlone/resources/browser/interfaces.py\n+++ /dev/null\n@@ -1,11 +0,0 @@\n-from zope.interface import Interface\n-\n-\n-class IScriptsView(Interface):\n-    def scripts():\n-        """ Returns a list of dicts with information for scripts rendering. """\n-\n-\n-class IStylesView(Interface):\n-    def styles():\n-        """ Returns a list of dicts with information for style rendering. """\ndiff --git a/Products/CMFPlone/resources/browser/mixins.py b/Products/CMFPlone/resources/browser/mixins.py\ndeleted file mode 100644\nindex 5819908eff..0000000000\n--- a/Products/CMFPlone/resources/browser/mixins.py\n+++ /dev/null\n@@ -1,162 +0,0 @@\n-from AccessControl.safe_formatter import SafeFormatter\n-from plone.registry.interfaces import IRegistry\n-from urllib.parse import urlparse\n-from plone.base.interfaces import IResourceRegistry\n-from Products.Five.browser import BrowserView\n-from zope.component import getMultiAdapter\n-from zope.component import getUtility\n-\n-\n-lessconfig = """\n- window.less = {\n-    env: "development",\n-    logLevel: %i,\n-    async: false,\n-    fileAsync: false,\n-    errorReporting: window.lessErrorReporting || \'console\',\n-    poll: 1000,\n-    functions: {},\n-    relativeUrls: true,\n-    dumpLineNumbers: "comments",\n-    globalVars: {\n-      %s\n-    },\n-    modifyVars: {\n-      %s\n-    }\n-  };\n-"""\n-\n-lessmodify = """\n-less.modifyVars({\n-    %s\n-})\n-"""\n-\n-\n-class LessConfiguration(BrowserView):\n-    """Browser view that gets the definition of less variables on plone."""\n-\n-    def registry(self):\n-        registryUtility = getUtility(IRegistry)\n-        return registryUtility.records["plone.lessvariables"].value\n-\n-    def resource_registry(self):\n-        registryUtility = getUtility(IRegistry)\n-        return registryUtility.collectionOfInterface(\n-            IResourceRegistry, prefix="plone.resources", check=False\n-        )\n-\n-    def __call__(self):\n-        registry = self.registry()\n-        portal_state = getMultiAdapter(\n-            (self.context, self.request), name="plone_portal_state"\n-        )\n-        site_url = portal_state.portal_url()\n-        result = ""\n-        result += "sitePath: \'\\"%s\\"\',\\n" % site_url\n-        result += "isPlone: true,\\n"\n-        result += "isMockup: false,\\n"\n-        result += "staticPath: \'\\"%s/++plone++static\\"\',\\n" % site_url\n-        result += "barcelonetaPath: \'\\"%s/++theme++barceloneta\\"\',\\n" % site_url\n-\n-        less_vars_params = {\n-            "site_url": site_url,\n-        }\n-\n-        # Storing variables to use them on further vars\n-        for name, value in registry.items():\n-            less_vars_params[name] = value\n-\n-        for name, value in registry.items():\n-            t = SafeFormatter(value).safe_format(**less_vars_params)\n-            result += f"\'{name}\': \\"{t}\\",\\n"\n-\n-        # Adding all plone.resource entries css values as less vars\n-        for name, value in self.resource_registry().items():\n-            for css in value.css:\n-\n-                url = urlparse(css)\n-                if url.netloc == "":\n-                    # Local\n-                    src = f"{site_url}/{css}"\n-                else:\n-                    src = "%s" % (css)\n-                # less vars can\'t have dots on it\n-                result += "\'{}\': \'\\"{}\\"\',\\n".format(name.replace(".", "_"), src)\n-\n-        self.request.response.setHeader("Content-Type", "application/javascript")\n-\n-        try:\n-            debug_level = int(self.request.get("debug", 2))\n-        except:\n-            debug_level = 2\n-        return lessconfig % (debug_level, result, result)\n-\n-\n-class LessModifyConfiguration(LessConfiguration):\n-    def __call__(self):\n-        registry = self.registry()\n-        portal_state = getMultiAdapter(\n-            (self.context, self.request), name="plone_portal_state"\n-        )\n-        site_url = portal_state.portal_url()\n-        result2 = ""\n-        result2 += "\'@sitePath\': \'\\"%s\\"\',\\n" % site_url\n-        result2 += "\'@isPlone\': true,\\n"\n-        result2 += "\'@isMockup\': false,\\n"\n-        result2 += "\'@staticPath: \'\\"%s/++plone++static\\"\',\\n" % site_url\n-        result2 += "\'@barcelonetaPath: \'\\"%s/++theme++barceloneta\\"\',\\n" % site_url\n-\n-        less_vars_params = {\n-            "site_url": site_url,\n-        }\n-\n-        # Storing variables to use them on further vars\n-        for name, value in registry.items():\n-            less_vars_params[name] = value\n-\n-        for name, value in registry.items():\n-            t = SafeFormatter(value).safe_format(**less_vars_params)\n-            result2 += f"\'@{name}\': \\"{t}\\",\\n"\n-\n-        self.request.response.setHeader("Content-Type", "application/javascript")\n-\n-        return lessmodify % (result2)\n-\n-\n-class LessDependency(BrowserView):\n-    """Browser view that returns the less/css on less format for specific\n-    resource.\n-    """\n-\n-    def registry(self):\n-        registryUtility = getUtility(IRegistry)\n-        return registryUtility.collectionOfInterface(\n-            IResourceRegistry, prefix="plone.resources", check=False\n-        )\n-\n-    def __call__(self):\n-        portal_state = getMultiAdapter(\n-            (self.context, self.request), name="plone_portal_state"\n-        )\n-        site_url = portal_state.portal_url()\n-\n-        registry = self.registry()\n-        resource = self.request.get("resource", None)\n-        result = ""\n-        if resource:\n-            if resource in registry:\n-                for css in registry[resource].css:\n-                    url = urlparse(css)\n-                    if url.netloc == "":\n-                        # Local\n-                        src = f"{site_url}/{css}"\n-                    else:\n-                        src = "%s" % (css)\n-\n-                    result += "@import url(\'%s\');\\n" % src\n-\n-        self.request.response.setHeader("Content-Type", "stylesheet/less")\n-\n-        return result\ndiff --git a/Products/CMFPlone/resources/browser/resource.py b/Products/CMFPlone/resources/browser/resource.py\nindex 708c8cd0a7..09db07887a 100644\n--- a/Products/CMFPlone/resources/browser/resource.py\n+++ b/Products/CMFPlone/resources/browser/resource.py\n@@ -1,74 +1,280 @@\n+from ..webresource import PloneScriptResource\n+from ..webresource import PloneStyleResource\n from Acquisition import aq_base\n from Acquisition import aq_inner\n from Acquisition import aq_parent\n from App.config import getConfiguration\n from plone.app.layout.viewlets.common import ViewletBase\n+from plone.app.theming.interfaces import IThemeSettings\n from plone.app.theming.utils import theming_policy\n from plone.base.interfaces import IBundleRegistry\n-from plone.base.interfaces import IResourceRegistry\n-from plone.base.utils import get_top_request\n-from plone.memoize.view import memoize\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.Expression import createExprContext\n from Products.CMFCore.Expression import Expression\n-from Products.CMFCore.utils import _getAuthenticatedUser\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.resources import RESOURCE_DEVELOPMENT_MODE\n-from Products.CMFPlone.resources.browser.combine import (  # noqa\n-    get_production_resource_directory,\n-)\n-from Products.CMFPlone.resources.bundle import Bundle\n-from zope import component\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n+from zope.component import queryUtility\n from zope.ramcache.interfaces import ram\n \n+import logging\n+import webresource\n+\n+logger = logging.getLogger(__name__)\n+\n+REQUEST_CACHE_KEY = "_WEBRESOURCE_CACHE_"\n+\n+GRACEFUL_DEPENDENCY_REWRITE = {\n+    "plone-base": "plone",\n+    "plone-legacy": "plone",\n+    "plone-logged-in": "plone",\n+}\n+\n \n class ResourceBase:\n     """Information for script rendering.\n \n     This is a mixin base class for a browser view, a viewlet or a tile\n-    or anything similar with a context and a request set on initialization.\n+    or anything similar with a context and a request set on\n+    initialization.\n     """\n \n     @property\n-    @memoize\n-    def anonymous(self):\n-        return _getAuthenticatedUser(self.context).getUserName() == "Anonymous User"\n+    def _rendered_cache(self):\n+        if getConfiguration().debug_mode:\n+            return\n+        self.registry = getUtility(IRegistry)\n+        if not self.registry["plone.resources.development"]:\n+            return getattr(\n+                self.context, f"_v_renderend_cached_{self.__class__.__name__}", None\n+            )\n \n-    @property\n-    @memoize\n-    def development(self):\n-        """\n-        To set development mode:\n-\n-        - we can define a envvar: FEDEV\n-        - otherwise if its anonymous is using production mode\n-        - finally is checked on the registry entry\n-        """\n-        if RESOURCE_DEVELOPMENT_MODE:\n-            return True\n-        if self.anonymous and not self.debug_mode:\n-            return False\n-        return self.registry.records["plone.resources.development"].value\n+    @_rendered_cache.setter\n+    def _rendered_cache(self, value):\n+        setattr(self.context, f"_v_renderend_cached_{self.__class__.__name__}", value)\n \n-    @property\n-    def debug_mode(self):\n-        return getConfiguration().debug_mode\n+    def update(self):\n+        # cache on request\n+        cached = getattr(self.request, REQUEST_CACHE_KEY, None)\n+        if cached is not None:\n+            self.renderer = cached\n+            return\n \n-    def develop_bundle(self, bundle, attr):\n-        return RESOURCE_DEVELOPMENT_MODE or (\n-            self.development and getattr(bundle, attr, False)\n+        # prepare\n+        self.portal_state = getMultiAdapter(\n+            (self.context, self.request), name="plone_portal_state"\n         )\n+        if not getattr(self, "registry", None):\n+            self.registry = getUtility(IRegistry)\n \n-    @property\n-    def last_legacy_import(self):\n-        return self.registry.records["plone.resources.last_legacy_import"].value  # noqa\n+        theme = None\n+        policy = theming_policy(self.request)\n+        if policy.isThemeEnabled():\n+            # Check if Diazo is enabled\n+            theme = policy.get_theme() or None\n+\n+        # we have two groups for two viewlets (historical reasons)\n+        root_group_js = webresource.ResourceGroup(name="root_js")\n+        root_group_css = webresource.ResourceGroup(name="root_css")\n+\n+        # register all bundles from registry\n+        registry_group_js = webresource.ResourceGroup(\n+            name="registry_js", group=root_group_js\n+        )\n+        registry_group_css = webresource.ResourceGroup(\n+            name="registry_css", group=root_group_css\n+        )\n+        records = self.registry.collectionOfInterface(\n+            IBundleRegistry, prefix="plone.bundles", check=False\n+        )\n+        unique = True\n+\n+        theme_enabled_bundles = getattr(theme, "enabled_bundles", [])\n+        theme_disabled_bundles = getattr(theme, "disabled_bundles", [])\n+\n+        # include sub/parent request\n+        request = self.request\n+        request_enabled_bundles = set(getattr(request, "enabled_bundles", []))\n+        request_disabled_bundles = set(getattr(request, "disabled_bundles", []))\n+        while request.get("PARENT_REQUEST", None):\n+            request = request["PARENT_REQUEST"]\n+            request_enabled_bundles.update(getattr(request, "enabled_bundles", []))\n+            request_disabled_bundles.update(getattr(request, "disabled_bundles", []))\n+\n+        # collect names\n+        js_names = {name for name, rec in records.items() if rec.jscompilation}\n+        css_names = {name for name, rec in records.items() if rec.csscompilation}\n+        all_names = {\n+            name\n+            for name, rec in records.items()\n+            if rec.jscompilation or rec.csscompilation\n+        }\n+\n+        # register\n+        for name, record in records.items():\n+            include = record.enabled\n+            include = include or name in theme_enabled_bundles\n+            include = include and name not in theme_disabled_bundles\n+            include = include or name in request_enabled_bundles\n+            include = include and name not in request_disabled_bundles\n+\n+            if include and record.expression:\n+\n+                def current_expression():\n+                    return self.eval_expression(record.expression, name)\n+\n+                include = current_expression\n+            if record.jscompilation:\n+                depends = record.depends or ""\n+                if depends and depends not in js_names:\n+                    if depends in all_names:\n+                        depends = None\n+                    else:\n+                        msg = f"Bundle \'{name}\' has a non existing dependeny on \'{record.depends}\'. "\n+                        if depends not in GRACEFUL_DEPENDENCY_REWRITE:\n+                            logger.error(\n+                                msg + "Bundle ignored (JS) - This may break your site!"\n+                            )\n+                            continue\n+                        graceful_depends = GRACEFUL_DEPENDENCY_REWRITE[depends]\n+                        logger.error(\n+                            msg\n+                            + f"Bundle dependency (JS) graceful rewritten to \'{graceful_depends}\' "\n+                            + "Fallback will be removed in Plone 7."\n+                        )\n+                        depends = graceful_depends\n+                external = record.jscompilation.startswith("http")\n+                resource = PloneScriptResource(\n+                    context=self.context,\n+                    name=name,\n+                    depends=depends,\n+                    resource=record.jscompilation if not external else None,\n+                    compressed=record.jscompilation if not external else None,\n+                    include=include,\n+                    unique=unique,\n+                    group=registry_group_js,\n+                    url=record.jscompilation if external else None,\n+                    crossorigin="anonymous" if external else None,\n+                    async_=record.load_async or None,\n+                    defer=record.load_defer or None,\n+                    integrity=not external,\n+                )\n+            if record.csscompilation:\n+                depends = record.depends or ""\n+                if depends and depends not in css_names:\n+                    if depends in all_names:\n+                        depends = None\n+                    else:\n+                        msg = f"Bundle \'{name}\' has a non existing dependeny on \'{record.depends}\'. "\n+                        if depends not in GRACEFUL_DEPENDENCY_REWRITE:\n+                            logger.error(\n+                                msg + "Bundle ignored (CSS) - This may break your site!"\n+                            )\n+                            continue\n+                        graceful_depends = GRACEFUL_DEPENDENCY_REWRITE[depends]\n+                        logger.error(\n+                            msg\n+                            + f"Bundle dependency (CSS) graceful rewritten to \'{graceful_depends}\' "\n+                            + "Fallback will be removed in Plone 7."\n+                        )\n+                        depends = graceful_depends\n+                external = record.csscompilation.startswith("http")\n+                resource = PloneStyleResource(\n+                    context=self.context,\n+                    name=name,\n+                    depends=depends,\n+                    resource=record.csscompilation if not external else None,\n+                    compressed=record.csscompilation if not external else None,\n+                    include=include,\n+                    unique=unique,\n+                    group=registry_group_css,\n+                    url=record.csscompilation if external else None,\n+                    media="all",\n+                    rel="stylesheet",\n+                )\n+\n+        # Collect theme data\n+        themedata = {}\n+        themedata["production_css"] = getattr(theme, "production_css", None)\n+        themedata["development_css"] = getattr(theme, "development_css", None)\n+        themedata["production_js"] = getattr(theme, "production_js", None)\n+        themedata["development_js"] = getattr(theme, "development_js", None)\n+\n+        # add Theme JS\n+        if themedata["production_js"]:\n+            # we ignore development_js for external detection\n+            external = themedata["production_js"].startswith("http")\n+            PloneScriptResource(\n+                context=self.context,\n+                name="theme",\n+                depends="",\n+                resource=(\n+                    themedata["development_js"] or themedata["production_js"]\n+                    if not external\n+                    else None\n+                ),\n+                compressed=themedata["production_js"] if not external else None,\n+                include=True,\n+                unique=unique,\n+                group=root_group_js,\n+                url=themedata["production_js"] if external else None,\n+                crossorigin="anonymous" if external else None,\n+                integrity=not external,\n+            )\n+\n+        # add Theme CSS\n+        if themedata["production_css"]:\n+            # we ignore development_css for external detection\n+            external = themedata["production_css"].startswith("http")\n+            PloneStyleResource(\n+                context=self.context,\n+                name="theme",\n+                depends="",\n+                resource=(\n+                    themedata["development_css"] or themedata["production_css"]\n+                    if not external\n+                    else None\n+                ),\n+                compressed=themedata["production_css"] if not external else None,\n+                include=True,\n+                unique=unique,\n+                group=root_group_css,\n+                url=themedata["production_css"] if external else None,\n+                media="all",\n+                rel="stylesheet",\n+            )\n+\n+        # add Custom CSS\n+        registry = getUtility(IRegistry)\n+        theme_settings = registry.forInterface(IThemeSettings, False)\n+        if theme_settings.custom_css:\n+            PloneStyleResource(\n+                context=self.context,\n+                name="custom",\n+                depends="",\n+                resource="@@custom.css",\n+                include=True,\n+                unique=unique,\n+                group=root_group_css,\n+                media="all",\n+                rel="stylesheet",\n+            )\n+\n+        self.renderer = {}\n+        setattr(self.request, REQUEST_CACHE_KEY, self.renderer)\n+        resolver_js = webresource.ResourceResolver(root_group_js)\n+        self.renderer["js"] = webresource.ResourceRenderer(\n+            resolver_js, base_url=self.portal_state.portal_url()\n+        )\n+        resolver_css = webresource.ResourceResolver(root_group_css)\n+        self.renderer["css"] = webresource.ResourceRenderer(\n+            resolver_css, base_url=self.portal_state.portal_url()\n+        )\n \n     def evaluateExpression(self, expression, context):\n         """Evaluate an object\'s TALES condition to see if it should be\n-        displayed.\n-        """\n+        displayed."""\n         try:\n             if expression.text and context is not None:\n                 portal = getToolByName(context, "portal_url").getPortalObject()\n@@ -92,50 +298,14 @@ def evaluateExpression(self, expression, context):\n                 # add \'context\' as an alias for \'object\'\n                 ec.setGlobal("context", context)\n                 return expression(ec)\n-            else:\n-                return True\n+            return True\n         except AttributeError:\n             return True\n \n-    def update(self):\n-        self.portal_state = getMultiAdapter(\n-            (self.context, self.request), name="plone_portal_state"\n-        )\n-        self.site_url = self.portal_state.portal_url()\n-        self.registry = getUtility(IRegistry)\n-        self.production_path = get_production_resource_directory()\n-\n-        theme = None\n-        policy = theming_policy(self.request)\n-        if policy.isThemeEnabled():\n-            # Check if Diazo is enabled\n-            theme = policy.get_theme() or None\n-\n-        self.diazo_production_css = getattr(theme, "production_css", None)\n-        self.diazo_development_css = getattr(theme, "development_css", None)\n-        self.diazo_production_js = getattr(theme, "production_js", None)\n-        self.diazo_development_js = getattr(theme, "development_js", None)\n-        self.theme_enabled_bundles = getattr(theme, "enabled_bundles", [])\n-        self.theme_disabled_bundles = getattr(theme, "disabled_bundles", [])\n-\n-    def get_bundles(self):\n-        result = {}\n-        records = self.registry.collectionOfInterface(\n-            IBundleRegistry, prefix="plone.bundles", check=False\n-        )\n-        for name, record in records.items():\n-            result[name] = Bundle(record)\n-        return result\n-\n-    def get_resources(self):\n-        return self.registry.collectionOfInterface(\n-            IResourceRegistry, prefix="plone.resources", check=False\n-        )\n-\n     def eval_expression(self, expression, bundle_name):\n         if not expression:\n             return True\n-        cache = component.queryUtility(ram.IRAMCache)\n+        cache = queryUtility(ram.IRAMCache)\n         cooked_expression = None\n         if cache is not None:\n             cooked_expression = cache.query(\n@@ -153,75 +323,28 @@ def eval_expression(self, expression, bundle_name):\n                 )\n         return self.evaluateExpression(cooked_expression, self.context)\n \n-    def get_cooked_bundles(self):\n-        """\n-        Get the cooked bundles\n-        """\n-        request = get_top_request(self.request)  # might be a subrequest\n-\n-        # theme specific set bundles\n-        enabled_bundles = set(self.theme_enabled_bundles)\n-        disabled_bundles = set(self.theme_disabled_bundles)\n-\n-        # Request set bundles\n-        enabled_bundles.update(getattr(request, "enabled_bundles", []))\n-        disabled_bundles.update(getattr(request, "disabled_bundles", []))\n-\n-        for key, bundle in self.get_bundles().items():\n-            # The diazo manifest and request bundles are more important than\n-            # the disabled bundle on registry.\n-            # We can access the site with diazo.off=1 without diazo bundles\n-            if (\n-                key in disabled_bundles\n-                or (key not in enabled_bundles and not bundle.enabled)\n-                or not self.eval_expression(bundle.expression, bundle.name)\n-            ):\n-                continue\n-\n-            yield key, bundle\n-\n-    def ordered_bundles_result(self, production=False):\n-        """\n-        It gets the ordered result of bundles\n-        """\n-        result = []\n-        inserted = []\n-        depends_on = {}\n-        for key, bundle in self.get_cooked_bundles():\n-            if bundle.depends is None or bundle.depends == "":\n-                # its the first one\n-                if not (production and bundle.merge_with):\n-                    self.get_data(bundle, result)\n-                inserted.append(key)\n-            else:\n-                name = bundle.depends.strip()\n-                if name in depends_on:\n-                    depends_on[name].append(bundle)\n-                else:\n-                    depends_on[name] = [bundle]\n-\n-        # We need to check all dependencies\n-        while len(depends_on) > 0:\n-            found = False\n-            for key, bundles_to_add in list(depends_on.items()):\n-                if key not in inserted:\n-                    continue\n-                found = True\n-                for bundle in bundles_to_add:\n-                    if not (production and bundle.merge_with):\n-                        self.get_data(bundle, result)\n-                    inserted.append(bundle.name)\n-                del depends_on[key]\n-            if not found:\n-                break\n-\n-        # The ones that does not get the dependencies\n-        for bundles_to_add in depends_on.values():\n-            for bundle in bundles_to_add:\n-                if not (production and bundle.merge_with):\n-                    self.get_data(bundle, result)\n-        return result\n-\n \n class ResourceView(ResourceBase, ViewletBase):\n     """Viewlet Information for script rendering."""\n+\n+\n+class ScriptsView(ResourceView):\n+    """Script Viewlet."""\n+\n+    def index(self):\n+        rendered = self._rendered_cache\n+        if not rendered:\n+            rendered = self.renderer["js"].render()\n+            self._rendered_cache = rendered\n+        return rendered\n+\n+\n+class StylesView(ResourceView):\n+    """Styles Viewlet."""\n+\n+    def index(self):\n+        rendered = self._rendered_cache\n+        if not rendered:\n+            rendered = self.renderer["css"].render()\n+            self._rendered_cache = rendered\n+        return rendered\ndiff --git a/Products/CMFPlone/resources/browser/scripts.pt b/Products/CMFPlone/resources/browser/scripts.pt\ndeleted file mode 100644\nindex d3d762fd7f..0000000000\n--- a/Products/CMFPlone/resources/browser/scripts.pt\n+++ /dev/null\n@@ -1,38 +0,0 @@\n-<script tal:content="string:PORTAL_URL = \'${view/site_url}\';"></script>\n-\n-<tal:scripts repeat="script view/scripts">\n-  <tal:block define="condcomment script/conditionalcomment; resetrjs script/resetrjs|nothing">\n-\n-    <tal:if condition="resetrjs">\n-      <tal:openreset content=\'structure string:&lt;script&gt;\'></tal:openreset>\n-\n-      <tal:comment tal:replace="nothing">\n-        Reset RequireJS definitions so that people who put RequireJS in a legacy compilation do not get errors\n-      </tal:comment>\n-\n-      var _old_define = define;\n-      var _old_require = require;\n-      define = undefined;\n-      require = undefined;\n-      <tal:endreset content=\'structure string:&lt;/script&gt;\'></tal:endreset>\n-    </tal:if>\n-\n-    <tal:if condition="condcomment">\n-      <tal:opencc tal:replace="structure string:&lt;!--[if ${condcomment}]&gt;"></tal:opencc>\n-    </tal:if>\n-\n-    <script type="text/javascript" tal:attributes="src script/src; data-bundle script/bundle; async script/async|nothing; defer script/defer|nothing"></script>\n-\n-    <tal:if condition="condcomment">\n-      <tal:closecc tal:condition="condcomment" tal:replace="structure string:&lt;![endif]--&gt;"></tal:closecc>\n-    </tal:if>\n-\n-    <tal:if condition="resetrjs">\n-      <tal:openredefine content=\'structure string:&lt;script&gt;\'></tal:openredefine>\n-      define = _old_define;\n-      require = _old_require;\n-      <tal:endredefine content=\'structure string:&lt;/script&gt;\'></tal:endredefine>\n-    </tal:if>\n-\n-  </tal:block>\n-</tal:scripts>\ndiff --git a/Products/CMFPlone/resources/browser/scripts.py b/Products/CMFPlone/resources/browser/scripts.py\ndeleted file mode 100644\nindex 9e0e62289a..0000000000\n--- a/Products/CMFPlone/resources/browser/scripts.py\n+++ /dev/null\n@@ -1,219 +0,0 @@\n-from Products.CMFPlone.resources.browser.cook import cookWhenChangingSettings\n-from Products.CMFPlone.resources.browser.resource import ResourceView\n-from plone.base.utils import get_top_request\n-from urllib import parse\n-from zope.component import getMultiAdapter\n-\n-\n-class ScriptsView(ResourceView):\n-    """Information for script rendering."""\n-\n-    def _add_resources(\n-        self,\n-        resources_to_add,\n-        result,\n-        bundle_name="none",\n-        resetrjs=False,\n-        conditionalcomment="",\n-    ):\n-        resources = self.get_resources()\n-        for resource in resources_to_add:\n-            data = resources.get(resource, None)\n-            if data is None or not data.js:\n-                continue\n-            url = parse.urlparse(data.js)\n-            if url.netloc == "":\n-                # Local\n-                src = f"{self.site_url}/{data.js}"\n-            else:\n-                src = data.js\n-            data = {\n-                "bundle": bundle_name,\n-                "conditionalcomment": conditionalcomment,\n-                "src": src,\n-                # Reset RequireJS if bundle is in non-compile to\n-                # avoid "Mismatched anonymous define()" in legacy\n-                # scripts.\n-                "resetrjs": resetrjs,\n-            }\n-            result.append(data)\n-\n-    def get_data(self, bundle, result):\n-        if self.develop_bundle(bundle, "develop_javascript"):\n-            # Bundle development mode\n-            self._add_resources(\n-                bundle.resources,\n-                result,\n-                bundle_name=bundle.name,\n-                resetrjs=bundle.compile is False,\n-                conditionalcomment=bundle.conditionalcomment,\n-            )\n-            return\n-        if (\n-            not bundle.compile\n-            and (\n-                not bundle.last_compilation\n-                or self.last_legacy_import > bundle.last_compilation\n-            )\n-            and bundle.resources\n-        ):\n-            # Its a legacy bundle OR compiling is happening outside of plone\n-\n-            # We need to combine files. It\'s possible no resources are\n-            # defined because the compiling is done outside of plone\n-            cookWhenChangingSettings(self.context, bundle)\n-        if bundle.jscompilation:\n-            js_path = bundle.jscompilation\n-            if "++plone++" in js_path:\n-                resource_path = js_path.split("++plone++")[-1]\n-                resource_name, resource_filepath = resource_path.split("/", 1)\n-                js_location = "{}/++plone++{}/++unique++{}/{}".format(\n-                    self.site_url,\n-                    resource_name,\n-                    parse.quote(str(bundle.last_compilation)),\n-                    resource_filepath,\n-                )\n-            else:\n-                js_location = "{}/{}?version={}".format(\n-                    self.site_url,\n-                    bundle.jscompilation,\n-                    parse.quote(str(bundle.last_compilation)),\n-                )\n-\n-            load_async = (\n-                "async" if getattr(bundle, "load_async", None) else None\n-            )  # noqa\n-            load_defer = (\n-                "defer" if getattr(bundle, "load_defer", None) else None\n-            )  # noqa\n-\n-            result.append(\n-                {\n-                    "bundle": bundle.name,\n-                    "conditionalcomment": bundle.conditionalcomment,\n-                    "src": js_location,\n-                    "async": load_async,\n-                    "defer": load_defer,\n-                }\n-            )\n-\n-    def default_resources(self):\n-        """Default resources used by Plone itself"""\n-        result = []\n-        # We always add jquery resource\n-        result.append(\n-            {\n-                "src": "{}/{}".format(\n-                    self.site_url,\n-                    self.registry.records["plone.resources/jquery.js"].value,\n-                ),\n-                "conditionalcomment": None,\n-                "bundle": "basic",\n-            }\n-        )\n-        if self.development:\n-            # We need to add require.js and config.js\n-            result.append(\n-                {\n-                    "src": "{}/{}".format(\n-                        self.site_url,\n-                        self.registry.records["plone.resources.less-variables"].value,\n-                    ),  # noqa\n-                    "conditionalcomment": None,\n-                    "bundle": "basic",\n-                }\n-            )\n-            result.append(\n-                {\n-                    "src": "{}/{}".format(\n-                        self.site_url,\n-                        self.registry.records["plone.resources.lessc"].value,\n-                    ),\n-                    "conditionalcomment": None,\n-                    "bundle": "basic",\n-                }\n-            )\n-        result.append(\n-            {\n-                "src": "{}/{}".format(\n-                    self.site_url,\n-                    self.registry.records["plone.resources.requirejs"].value,\n-                ),\n-                "conditionalcomment": None,\n-                "bundle": "basic",\n-            }\n-        )\n-        result.append(\n-            {\n-                "src": "{}/{}".format(\n-                    self.site_url,\n-                    self.registry.records["plone.resources.configjs"].value,\n-                ),\n-                "conditionalcomment": None,\n-                "bundle": "basic",\n-            }\n-        )\n-        return result\n-\n-    def base_url(self):\n-        portal_state = getMultiAdapter(\n-            (self.context, self.request), name="plone_portal_state"\n-        )\n-        site_url = portal_state.portal_url()\n-        return site_url\n-\n-    def scripts(self):\n-        """The requirejs scripts, the ones that are not resources are loaded on\n-        configjs.py\n-        """\n-        if self.debug_mode or self.development or not self.production_path:\n-            result = self.default_resources()\n-            result.extend(self.ordered_bundles_result())\n-        else:\n-            result = [\n-                {\n-                    "src": "{}/++plone++{}".format(\n-                        self.site_url, self.production_path + "/default.js"\n-                    ),\n-                    "conditionalcomment": None,\n-                    "bundle": "production",\n-                    "async": None,  # Do not load ``async`` or\n-                    "defer": None,  # ``defer`` for production bundles.\n-                }\n-            ]\n-            if not self.anonymous:\n-                result.append(\n-                    {\n-                        "src": "{}/++plone++{}".format(\n-                            self.site_url, self.production_path + "/logged-in.js"\n-                        ),\n-                        "conditionalcomment": None,\n-                        "bundle": "production",\n-                        "async": None,  # Do not load ``async`` or\n-                        "defer": None,  # ``defer`` for production bundles.\n-                    }\n-                )\n-            result.extend(self.ordered_bundles_result(production=True))\n-\n-        # Add manual added resources\n-        request = get_top_request(self.request)  # might be a subrequest\n-        enabled_resources = getattr(request, "enabled_resources", [])\n-        if enabled_resources:\n-            self._add_resources(enabled_resources, result)\n-\n-        # Add diazo url\n-        origin = None\n-        if self.diazo_production_js and not self.development:\n-            origin = self.diazo_production_js\n-        if self.diazo_development_js and self.development:\n-            origin = self.diazo_development_js\n-        if origin:\n-            result.append(\n-                {\n-                    "bundle": "diazo",\n-                    "conditionalcomment": "",\n-                    "src": f"{self.site_url}/{origin}",\n-                }\n-            )\n-\n-        return result\ndiff --git a/Products/CMFPlone/resources/browser/styles.pt b/Products/CMFPlone/resources/browser/styles.pt\ndeleted file mode 100644\nindex 8efe677417..0000000000\n--- a/Products/CMFPlone/resources/browser/styles.pt\n+++ /dev/null\n@@ -1,13 +0,0 @@\n-<tal:styles repeat="style view/styles"\n-  ><tal:block define="condcomment style/conditionalcomment"\n-    ><tal:wcondcomment tal:condition="condcomment">\n-        <tal:opencc tal:replace="structure string:&lt;!--[if ${condcomment}]&gt;" />\n-    </tal:wcondcomment\n-    ><link rel="style"\n-          tal:attributes="href style/src;\n-                          rel style/rel;\n-                          data-bundle style/bundle;" /><tal:wcondcomment tal:condition="condcomment">\n-        <tal:closecc tal:replace="structure string:&lt;![endif]--&gt;" />\n-    </tal:wcondcomment\n-  ></tal:block\n-></tal:styles>\ndiff --git a/Products/CMFPlone/resources/browser/styles.py b/Products/CMFPlone/resources/browser/styles.py\ndeleted file mode 100644\nindex 19f84ef17c..0000000000\n--- a/Products/CMFPlone/resources/browser/styles.py\n+++ /dev/null\n@@ -1,180 +0,0 @@\n-from plone.app.layout.viewlets.common import ViewletBase\n-from plone.app.theming.interfaces import IThemeSettings\n-from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.resources.browser.cook import cookWhenChangingSettings\n-from Products.CMFPlone.resources.browser.resource import ResourceBase\n-from plone.base.utils import get_top_request\n-from urllib import parse\n-from zope.component import getUtility\n-\n-\n-class StylesBase(ResourceBase):\n-\n-    """ Information for style rendering. """\n-\n-    def get_urls(self, style, bundle):\n-        """\n-        Extracts the urls for the specific resource\n-        """\n-        for css in style.css:\n-            url = parse.urlparse(css)\n-            if url.netloc == "":\n-                # Local\n-                src = f"{self.site_url}/{css}"\n-            else:\n-                src = "%s" % (css)\n-\n-            extension = url.path.split(".")[-1]\n-            rel = "stylesheet"\n-            if extension != "" and extension != "css":\n-                rel = "stylesheet/%s" % extension\n-\n-            data = {\n-                "rel": rel,\n-                "bundle": bundle.name if bundle else "none",\n-                "conditionalcomment": bundle.conditionalcomment if bundle else "",\n-                "src": src,\n-            }\n-            yield data\n-\n-    def get_data(self, bundle, result):\n-        """\n-        Gets the needed information for the bundle\n-        and stores it on the result list\n-        """\n-        if self.develop_bundle(bundle, "develop_css"):\n-            self.resources = self.get_resources()\n-            # The bundle resources\n-            for resource in bundle.resources:\n-                if resource in self.resources:\n-                    style = self.resources[resource]\n-                    for data in self.get_urls(style, bundle):\n-                        result.append(data)\n-        else:\n-            if bundle.compile is False:\n-                # Its a legacy css bundle\n-                if (\n-                    not bundle.last_compilation\n-                    or self.last_legacy_import > bundle.last_compilation\n-                ):\n-                    # We need to compile\n-                    cookWhenChangingSettings(self.context, bundle)\n-\n-            if bundle.csscompilation:\n-                css_path = bundle.csscompilation\n-                if "++plone++" in css_path:\n-                    resource_path = css_path.split("++plone++")[-1]\n-                    resource_name, resource_filepath = resource_path.split("/", 1)\n-                    css_location = "{}/++plone++{}/++unique++{}/{}".format(\n-                        self.site_url,\n-                        resource_name,\n-                        parse.quote(str(bundle.last_compilation)),\n-                        resource_filepath,\n-                    )\n-                else:\n-                    css_location = "{}/{}?version={}".format(\n-                        self.site_url,\n-                        bundle.csscompilation,\n-                        parse.quote(str(bundle.last_compilation)),\n-                    )\n-                result.append(\n-                    {\n-                        "bundle": bundle.name,\n-                        "rel": "stylesheet",\n-                        "conditionalcomment": bundle.conditionalcomment,\n-                        "src": css_location,\n-                    }\n-                )\n-\n-    @property\n-    def _theme_settings(self):\n-        registry = getUtility(IRegistry)\n-        return registry.forInterface(IThemeSettings, False)\n-\n-    @property\n-    def custom_css(self):\n-        return self._theme_settings.custom_css\n-\n-    @property\n-    def custom_css_timestamp(self):\n-        return self._theme_settings.custom_css_timestamp\n-\n-    def styles(self):\n-        """\n-        Get all the styles\n-        """\n-        if self.development or self.debug_mode or not self.production_path:\n-            result = self.ordered_bundles_result()\n-        else:\n-            result = [\n-                {\n-                    "src": "{}/++plone++{}".format(\n-                        self.site_url, self.production_path + "/default.css"\n-                    ),\n-                    "conditionalcomment": None,\n-                    "rel": "stylesheet",\n-                    "bundle": "production",\n-                },\n-            ]\n-            if not self.anonymous:\n-                result.append(\n-                    {\n-                        "src": "{}/++plone++{}".format(\n-                            self.site_url, self.production_path + "/logged-in.css"\n-                        ),\n-                        "conditionalcomment": None,\n-                        "rel": "stylesheet",\n-                        "bundle": "production",\n-                    }\n-                )\n-            result.extend(self.ordered_bundles_result(production=True))\n-\n-        # Add manual added resources\n-        resources = self.get_resources()\n-        request = get_top_request(self.request)  # might be a subrequest\n-        if hasattr(request, "enabled_resources"):\n-            for resource in request.enabled_resources:\n-                if resource in resources:\n-                    for data in self.get_urls(resources[resource], None):\n-                        result.append(data)\n-\n-        # Add diazo css\n-        origin = None\n-        if self.diazo_production_css and self.development is False:\n-            origin = self.diazo_production_css\n-        if self.diazo_development_css and self.development is True:\n-            origin = self.diazo_development_css\n-        if origin:\n-            url = parse.urlparse(origin)\n-            if url.netloc == "":\n-                # Local\n-                src = f"{self.site_url}/{origin}"\n-            else:\n-                src = "%s" % (origin)\n-\n-            extension = url.path.split(".")[-1]\n-            rel = "stylesheet"\n-            if extension != "" and extension != "css":\n-                rel = "stylesheet/%s" % extension\n-\n-            data = {"rel": rel, "conditionalcomment": "", "src": src, "bundle": "diazo"}\n-\n-            result.append(data)\n-\n-        # custom.css\n-        if self.custom_css:\n-            custom_css = {\n-                "rel": "stylesheet",\n-                "conditionalcomment": "",\n-                "src": "{}/custom.css?timestamp={}".format(\n-                    self.site_url,\n-                    self.custom_css_timestamp,\n-                ),\n-                "bundle": "custom-css",\n-            }\n-            result.append(custom_css)\n-        return result\n-\n-\n-class StylesView(StylesBase, ViewletBase):\n-    """Styles Viewlet"""\ndiff --git a/Products/CMFPlone/resources/bundle.py b/Products/CMFPlone/resources/bundle.py\ndeleted file mode 100644\nindex 08027f2a58..0000000000\n--- a/Products/CMFPlone/resources/bundle.py\n+++ /dev/null\n@@ -1,101 +0,0 @@\n-from datetime import datetime\n-from plone.resource.directory import FilesystemResourceDirectory\n-from plone.resource.file import FilesystemFile\n-from Products.CMFCore.FSFile import FSFile\n-from Products.Five.browser.resource import DirectoryResource\n-from Products.Five.browser.resource import FileResource\n-from zExceptions import NotFound\n-from zope.component.hooks import getSite\n-\n-import os\n-\n-\n-class Bundle:\n-    """Wraps pure bundles RecordsProxy and enrich with logic\n-    .\n-    Proxy attributes and provide some utility functions\n-    """\n-\n-    def __init__(self, data):\n-        """initialize Bunde.initialize\n-\n-        data is a\n-        - registry record\n-        - with interfaces\'IResourceRegistry\'\n-        - with prefix \'plone.bundles\'\n-        """\n-        self.data = data\n-\n-    def _real_path(self, ctx):\n-        if ctx == "js":\n-            resource_path = self.data.jscompilation\n-        else:\n-            resource_path = self.data.csscompilation\n-        try:\n-            resource = getSite().restrictedTraverse(resource_path)\n-        except (NotFound, KeyError):\n-            return None, None\n-        if resource.__module__ == "Products.Five.metaclass":\n-            try:\n-                return "fs", resource.chooseContext().path\n-            except:\n-                try:\n-                    return "fs", resource.context.path\n-                except:\n-                    try:\n-                        if callable(resource):\n-                            return None, None\n-                        else:\n-                            return None, None\n-                    except:\n-                        return None, None\n-        elif isinstance(resource, FilesystemFile):\n-            return "fs", resource.path\n-        elif isinstance(resource, FileResource):\n-            return "fs", resource.chooseContext().path\n-        elif isinstance(resource, DirectoryResource):\n-            return "fs", resource.context.path\n-        elif isinstance(resource, FilesystemResourceDirectory):\n-            return "fs", resource.directory\n-        elif isinstance(resource, FSFile):\n-            return "zodb", resource._filepath\n-        else:\n-            return "zodb", None\n-\n-    @property\n-    def name(self):\n-        return self.data.__prefix__.split("/", 1)[1].rstrip(".")\n-\n-    @property\n-    def last_compilation(self):\n-        """check bundles last compilation using filesystem date or date of OFS.\n-\n-        if bundle has a last_compilation date newer than filesystem/OFS it wins\n-        always.\n-        """\n-        mods = []\n-        for ctx in ["js", "css"]:\n-            loc, path = self._real_path(ctx)\n-            if loc == "fs" and os.path.exists(path):\n-                mods.append(datetime.fromtimestamp(os.path.getmtime(path)))\n-            elif loc == "zodb":\n-                self.data.last_compilation\n-        if self.data.last_compilation and mods:\n-            if self.data.last_compilation > max(mods):\n-                return self.data.last_compilation\n-            else:\n-                return max(mods)\n-        return self.data.last_compilation\n-\n-    @last_compilation.setter\n-    def last_compilation(self, value):\n-        self.data.last_compilation = value\n-\n-    def __getattr__(self, name):\n-        """act as r/o wrapper"""\n-        return getattr(self.data, name)\n-\n-    def __repr__(self):\n-        return \'<{}.{} object "{}" at {}>\'.format(\n-            self.__class__.__module__, self.__class__.__name__, self.name, id(self)\n-        )\ndiff --git a/Products/CMFPlone/resources/exportimport/resourceregistry.py b/Products/CMFPlone/resources/exportimport/resourceregistry.py\ndeleted file mode 100644\nindex 25379c91e1..0000000000\n--- a/Products/CMFPlone/resources/exportimport/resourceregistry.py\n+++ /dev/null\n@@ -1,170 +0,0 @@\n-from datetime import datetime\n-from plone.i18n.normalizer.interfaces import IIDNormalizer\n-from Products.CMFCore.utils import getToolByName\n-from plone.base.interfaces import IBundleRegistry\n-from plone.base.interfaces import IResourceRegistry\n-from Products.CMFPlone.resources.browser.cook import cookWhenChangingSettings\n-from Products.GenericSetup.interfaces import IBody\n-from Products.GenericSetup.utils import XMLAdapterBase\n-from zope.component import queryMultiAdapter\n-from zope.component import queryUtility\n-from zope.interface.interfaces import ComponentLookupError\n-\n-\n-def importResRegistry(context, reg_id, reg_title, filename):\n-    """Import resource registry."""\n-    site = context.getSite()\n-    logger = context.getLogger("resourceregistry")\n-\n-    body = context.readDataFile(filename)\n-    if body is None:\n-        return\n-\n-    res_reg = getToolByName(site, reg_id)\n-\n-    importer = queryMultiAdapter((res_reg, context), IBody)\n-    if importer is None:\n-        logger.warning("%s: Import adapter missing." % reg_title)\n-        return\n-    try:\n-        importer.registry = getToolByName(site, "portal_registry")\n-    except AttributeError:\n-        # Upgrade 3.x no registry there\n-        importer.registry = None\n-    importer.body = body\n-    logger.info("%s imported." % reg_title)\n-\n-\n-class ResourceRegistryNodeAdapter(XMLAdapterBase):\n-\n-    resource_blacklist = set()\n-    registry = None\n-\n-    def _importNode(self, node):\n-        """Import the object from the DOM node."""\n-        if self.registry is None:\n-            # Upgrade 3.x no registry there\n-            return\n-        resources = self.registry.collectionOfInterface(\n-            IResourceRegistry, prefix="plone.resources", check=False\n-        )\n-\n-        bundles = self.registry.collectionOfInterface(\n-            IBundleRegistry, prefix="plone.bundles", check=False\n-        )\n-        if "plone-legacy" in bundles:\n-            legacy = bundles["plone-legacy"]\n-        else:\n-            legacy = bundles.setdefault("plone-legacy")\n-            legacy.resources = []\n-            legacy.enabled = True\n-\n-        for child in node.childNodes:\n-            if child.nodeName != self.resource_type:\n-                continue\n-\n-            data = {}\n-            add = True\n-            remove = False\n-            position = res_id = None\n-            for key, value in child.attributes.items():\n-                key = str(key)\n-                if key == "update":\n-                    continue\n-                if key == "remove" and value in (True, "true", "True"):\n-                    add = False\n-                    remove = True\n-                    continue\n-                if key in ("position-before", "insert-before"):\n-                    position = (\n-                        "before",\n-                        queryUtility(IIDNormalizer).normalize(str(value)),\n-                    )\n-                    continue\n-                if key in ("position-after", "insert-after"):\n-                    position = (\n-                        "after",\n-                        queryUtility(IIDNormalizer).normalize(str(value)),\n-                    )\n-                    continue\n-                if key in ("position-top", "insert-top"):\n-                    position = ("*",)\n-                    continue\n-                if key in ("position-bottom", "insert-bottom"):\n-                    position = ("",)\n-                    continue\n-                if key == "id":\n-                    if value in self.resource_blacklist:\n-                        add = False\n-                        data.clear()\n-                        break\n-                    res_id = queryUtility(IIDNormalizer).normalize(str(value))\n-                    data["url"] = str(value)\n-                elif value.lower() == "false":\n-                    data[key] = False\n-                elif value.lower() == "true":\n-                    data[key] = True\n-                else:\n-                    try:\n-                        data[key] = int(value)\n-                    except ValueError:\n-                        data[key] = str(value)\n-\n-            if add:\n-                proxy = resources.setdefault(res_id)\n-                if self.resource_type == "javascript":\n-                    proxy.js = data["url"]\n-                elif self.resource_type == "stylesheet":\n-                    proxy.css = [data["url"]]\n-                if "enabled" in data and not data["enabled"]:\n-                    # if we are disabling it, we need to remove from legacy\n-                    # resources\n-                    if res_id in legacy.resources:\n-                        legacy.resources.remove(res_id)\n-                    continue\n-                if res_id in legacy.resources:\n-                    # remove here so we can possible re-insert into whatever\n-                    # position is preferred below and then we do not\n-                    # re-add same resource multiple times\n-                    legacy.resources.remove(res_id)\n-                if position is None:\n-                    position = ("",)\n-                if position[0] == "*":\n-                    legacy.resources.insert(0, res_id)\n-                elif position[0] == "":\n-                    legacy.resources.append(res_id)\n-                elif position[0] == "after":\n-                    if position[1] in legacy.resources:\n-                        legacy.resources.insert(\n-                            legacy.resources.index(position[1]) + 1, res_id\n-                        )\n-                    else:\n-                        legacy.resources.append(res_id)\n-                elif position[0] == "before":\n-                    if position[1] in legacy.resources:\n-                        legacy.resources.insert(\n-                            legacy.resources.index(position[1]), res_id\n-                        )\n-                    else:\n-                        legacy.resources.append(res_id)\n-\n-            elif remove:\n-                if res_id in legacy.resources:\n-                    legacy.resources.remove(res_id)\n-                if res_id in resources:\n-                    del resources[res_id]\n-\n-            # make sure to trigger committing to db\n-            # not sure this is necessary...\n-            legacy.resources = legacy.resources\n-\n-        if "plone.resources.last_legacy_import" in self.registry.records:  # noqa\n-            self.registry.records[\n-                "plone.resources.last_legacy_import"\n-            ].value = datetime.now()\n-            try:\n-                cookWhenChangingSettings(self.context, legacy)\n-            except (AssertionError, ComponentLookupError):\n-                # zope.globalrequest and the site might not be setup, don\'t\n-                # error out\n-                pass\ndiff --git a/Products/CMFPlone/resources/utils.py b/Products/CMFPlone/resources/utils.py\nnew file mode 100644\nindex 0000000000..5b7ba7ced3\n--- /dev/null\n+++ b/Products/CMFPlone/resources/utils.py\n@@ -0,0 +1,73 @@\n+from Acquisition import aq_base\n+from plone.resource.file import FilesystemFile\n+from plone.resource.interfaces import IResourceDirectory\n+from Products.CMFPlone.interfaces.resources import OVERRIDE_RESOURCE_DIRECTORY_NAME\n+from zExceptions import NotFound\n+from zope.component import queryUtility\n+\n+import logging\n+\n+\n+PRODUCTION_RESOURCE_DIRECTORY = "production"\n+logger = logging.getLogger(__name__)\n+\n+\n+def get_production_resource_directory():\n+    persistent_directory = queryUtility(IResourceDirectory, name="persistent")\n+    if persistent_directory is None:\n+        return ""\n+    container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n+    try:\n+        production_folder = container[PRODUCTION_RESOURCE_DIRECTORY]\n+    except NotFound:\n+        return "%s/++unique++1" % PRODUCTION_RESOURCE_DIRECTORY\n+    if "timestamp.txt" not in production_folder:\n+        return "%s/++unique++1" % PRODUCTION_RESOURCE_DIRECTORY\n+    timestamp = production_folder.readFile("timestamp.txt")\n+    if isinstance(timestamp, bytes):\n+        timestamp = timestamp.decode()\n+    return "{}/++unique++{}".format(PRODUCTION_RESOURCE_DIRECTORY, timestamp)\n+\n+\n+def get_resource(context, path):\n+    if path.startswith("++plone++"):\n+        # ++plone++ resources can be customized, we return their override\n+        # value if any\n+        overrides = get_override_directory(context)\n+        filepath = path[9:]\n+        if overrides.isFile(filepath):\n+            return overrides.readFile(filepath)\n+\n+    try:\n+        resource = context.unrestrictedTraverse(path)\n+    except (NotFound, AttributeError):\n+        logger.warning(\n+            f"Could not find resource {path}. You may have to create it first."\n+        )  # noqa\n+        return\n+\n+    if isinstance(resource, FilesystemFile):\n+        (directory, sep, filename) = path.rpartition("/")\n+        return context.unrestrictedTraverse(directory).readFile(filename)\n+\n+    # calling the resource may modify the header, i.e. the content-type.\n+    # we do not want this, so keep the original header intact.\n+    response_before = context.REQUEST.response\n+    context.REQUEST.response = response_before.__class__()\n+    if hasattr(aq_base(resource), "GET"):\n+        # for FileResource\n+        result = resource.GET()\n+    else:\n+        # any BrowserView\n+        result = resource()\n+    context.REQUEST.response = response_before\n+    return result\n+\n+\n+def get_override_directory(context):\n+    persistent_directory = queryUtility(IResourceDirectory, name="persistent")\n+    if persistent_directory is None:\n+        return\n+    if OVERRIDE_RESOURCE_DIRECTORY_NAME not in persistent_directory:\n+        persistent_directory.makeDirectory(OVERRIDE_RESOURCE_DIRECTORY_NAME)\n+    return persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\ndiff --git a/Products/CMFPlone/resources/webresource.py b/Products/CMFPlone/resources/webresource.py\nnew file mode 100644\nindex 0000000000..43f2a36d32\n--- /dev/null\n+++ b/Products/CMFPlone/resources/webresource.py\n@@ -0,0 +1,28 @@\n+from .utils import get_resource\n+from webresource import ScriptResource\n+from webresource import StyleResource\n+\n+\n+class PloneBaseResource:\n+    """Mixin to override certain aspects of a webresource for Plone needs."""\n+\n+    def __init__(self, context, **kw):\n+        """Initialize with Plone context"""\n+        self.context = context\n+        super().__init__(**kw)\n+\n+    @property\n+    def file_data(self):\n+        """Fetch data from using a resource via traversal"""\n+        data = get_resource(self.context, self.resource)\n+        if isinstance(data, str):\n+            data = data.encode("utf8")\n+        return data\n+\n+\n+class PloneScriptResource(PloneBaseResource, ScriptResource):\n+    """Webresource based ScriptResource for Plone"""\n+\n+\n+class PloneStyleResource(PloneBaseResource, StyleResource):\n+    """Webresource based StyleResource for Plone"""\ndiff --git a/Products/CMFPlone/skins/plone_scripts/externalEditorEnabled.py b/Products/CMFPlone/skins/plone_scripts/externalEditorEnabled.py\nindex b31ebce4ea..ad62e1c912 100644\n--- a/Products/CMFPlone/skins/plone_scripts/externalEditorEnabled.py\n+++ b/Products/CMFPlone/skins/plone_scripts/externalEditorEnabled.py\n@@ -16,11 +16,6 @@\n if mtool.isAnonymousUser():\n     return False\n \n-# Temporary content cannot be changed through EE (raises AttributeError)\n-portal_factory = getToolByName(portal, \'portal_factory\', None)\n-if portal_factory and portal_factory.isTemporary(context):\n-    return False\n-\n # Check if the member property\n member = mtool.getAuthenticatedMember()\n if not member.getProperty(\'ext_editor\', False):\ndiff --git a/Products/CMFPlone/tests/robot/robodoc/README.rst b/Products/CMFPlone/tests/robot/robodoc/README.rst\nindex 225c445d98..d25585bf30 100644\n--- a/Products/CMFPlone/tests/robot/robodoc/README.rst\n+++ b/Products/CMFPlone/tests/robot/robodoc/README.rst\n@@ -62,7 +62,7 @@ or\n \n .. code:: bash\n \n-   $\xc2\xa0CONFIGURE_PACKAGES=plone.app.iterate APPLY_PROFILES=plone.app.contenttypes:plone-content,plone.app.iterate:plone.app.iterate bin/robot-server plone.app.robotframework.PLONE_ROBOT_TESTING\n+   $\xc2\xa0CONFIGURE_PACKAGES=plone.app.iterate APPLY_PROFILES=plone.app.contenttypes:plone-content,plone.app.iterate:default bin/robot-server plone.app.robotframework.PLONE_ROBOT_TESTING\n \n and\n \ndiff --git a/Products/CMFPlone/tests/robot/robodoc/collaboration-advanced_control.robot b/Products/CMFPlone/tests/robot/robodoc/collaboration-advanced_control.robot\nindex 4427dea3f3..a81141374d 100644\n--- a/Products/CMFPlone/tests/robot/robodoc/collaboration-advanced_control.robot\n+++ b/Products/CMFPlone/tests/robot/robodoc/collaboration-advanced_control.robot\n@@ -37,8 +37,8 @@ Show state menu\n \n     Click link  workflow-transition-advanced\n     Wait until element is visible\n-    ...   css=div.plone-modal-content\n+    ...   css=div.modal-content\n \n     Capture and crop page screenshot\n     ...  ${CURDIR}/_robot/workflow-advanced.png\n-    ...  css=div.plone-modal-wrapper\n+    ...  css=div.modal-wrapper\ndiff --git a/Products/CMFPlone/tests/robot/robodoc/config-screens.robot b/Products/CMFPlone/tests/robot/robodoc/config-screens.robot\nindex c810bec965..36697f6176 100644\n--- a/Products/CMFPlone/tests/robot/robodoc/config-screens.robot\n+++ b/Products/CMFPlone/tests/robot/robodoc/config-screens.robot\n@@ -141,10 +141,6 @@ Show Resource Registry screen\n     Capture and crop page screenshot\n     ...  ${CURDIR}/_robot/resource-registry.png\n     ...  css=#content\n-    Click link  Less Variables\n-    Capture and crop page screenshot\n-    ...  ${CURDIR}/_robot/less-variables.png\n-    ...  css=#content\n \n Show Search setup screen\n     Go to  ${PLONE_URL}/@@search-controlpanel\ndiff --git a/Products/CMFPlone/tests/robot/robodoc/managing-working_copy.robot b/Products/CMFPlone/tests/robot/robodoc/managing-working_copy.robot\nindex 797e17ee51..6677e9cb83 100644\n--- a/Products/CMFPlone/tests/robot/robodoc/managing-working_copy.robot\n+++ b/Products/CMFPlone/tests/robot/robodoc/managing-working_copy.robot\n@@ -8,7 +8,7 @@ Suite Teardown  Common Suite Teardown\n *** Variables ***\n \n @{CONFIGURE_PACKAGES}  plone.app.iterate\n-@{APPLY_PROFILES}  plone.app.contenttypes:plone-content  plone.app.iterate:plone.app.iterate\n+@{APPLY_PROFILES}  plone.app.contenttypes:plone-content  plone.app.iterate:default\n # ${REGISTER_TRANSLATIONS}  ${CURDIR}/../../_locales\n \n *** Test Cases ***\ndiff --git a/Products/CMFPlone/tests/robot/robodoc/working_with_tinymce.robot b/Products/CMFPlone/tests/robot/robodoc/working_with_tinymce.robot\nindex acd9963e8a..296ba742c0 100644\n--- a/Products/CMFPlone/tests/robot/robodoc/working_with_tinymce.robot\n+++ b/Products/CMFPlone/tests/robot/robodoc/working_with_tinymce.robot\n@@ -39,14 +39,14 @@ Show TinyMCE image\n \n     Click element  css=#mceu_15 button\n     Wait until element is visible\n-    ...  css=h2.plone-modal-title\n+    ...  css=h2.modal-title\n     Wait until element is visible\n     ...  css=div.common-controls\n-    \n+\n     Capture and crop page screenshot\n     ...  ${CURDIR}/_robot/tinymce-imgdialog.png\n     ...  css=div.outer-wrapper\n-    ...  css=div.plone-modal-content\n+    ...  css=div.modal-content\n \n Show TinyMCE insert links\n     Go to  ${PLONE_URL}/samplepage\n@@ -61,7 +61,7 @@ Show TinyMCE insert links\n     Capture and crop page screenshot\n     ...  ${CURDIR}/_robot/tinymce-linkdialog.png\n     ...  css=div.outer-wrapper\n-    ...  css=div.plone-modal-content\n+    ...  css=div.modal-content\n \n Show TinyMCE insert tables\n     Go to  ${PLONE_URL}/samplepage\ndiff --git a/Products/CMFPlone/tests/robot/test_actionmenu.robot b/Products/CMFPlone/tests/robot/test_actionmenu.robot\nindex 945faefd9a..4182e6a59e 100644\n--- a/Products/CMFPlone/tests/robot/test_actionmenu.robot\n+++ b/Products/CMFPlone/tests/robot/test_actionmenu.robot\n@@ -107,11 +107,11 @@ I click outside of menu\n \n workflow link is clicked\n     # store current state\n-    ${OLD_STATE} =  Get Text  xpath=(//span[contains(@class,\'state-\')])[2]\n+    ${OLD_STATE} =  Get Text  xpath=(//span[contains(@class,\'state-\')])\n     Set Suite Variable  ${OLD_STATE}  ${OLD_STATE}\n     Given patterns are loaded\n     Click Link  xpath=//li[@id=\'plone-contentmenu-workflow\']/a\n-    Click Link  xpath=(//li[@id=\'plone-contentmenu-workflow\']/ul/li/a)[1]\n+    Click Link  xpath=(//li[@id=\'plone-contentmenu-workflow\']/div/ul/li/a)[1]\n     Page Should Contain  Item state changed.\n     # FIXME: The above \'Click Link\' fails on Internet Explorer, but the\n     # following keywords \'workflow link is clicked softly\' passes. Until we\n@@ -140,17 +140,17 @@ Open Menu\n Open Action Menu\n     Given patterns are loaded\n     Click link  xpath=//li[@id=\'plone-contentmenu-actions\']/a\n-    Wait until keyword succeeds  5  1  Element Should Be Visible  css=.plonetoolbar-content-action\n+    Wait until keyword succeeds  5  1  Element Should Be Visible  css=#plone-contentmenu-actions .collapse\n \n I copy the page\n     Open Action Menu\n-    Click Link  link=Copy\n+    Click Link  css=#plone-contentmenu-actions .actionicon-object_buttons-copy\n     Page should contain  copied\n \n I paste\n     Go to  ${PLONE_URL}\n     Open Action Menu\n-    Click Link  link=Paste\n+    Click Link  css=#plone-contentmenu-actions .actionicon-object_buttons-paste\n \n \n # --- THEN -------------------------------------------------------------------\n@@ -183,7 +183,7 @@ I should see \'${message}\' in the page\n \n state should have changed\n     Wait until page contains  Item state changed\n-    ${NEW_STATE} =  Get Text  xpath=(//span[contains(@class,\'state-\')])[2]\n+    ${NEW_STATE} =  Get Text  xpath=(//span[contains(@class,\'state-\')])\n     # Should Not Be Equal  ${NEW_STATE}  ${OLD_STATE}\n \n second menu should be visible\ndiff --git a/Products/CMFPlone/tests/robot/test_controlpanel_actions.robot b/Products/CMFPlone/tests/robot/test_controlpanel_actions.robot\nindex 7444e96e9a..afee018bef 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_actions.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_actions.robot\n@@ -71,12 +71,16 @@ I modify an action title\n   Click Link    css=section:nth-child(3) li:first-child a\n   Wait until page contains  Action Settings\n   Input Text for sure  form.widgets.title  A new site map\n+  Set Focus To Element  css=.pattern-modal-buttons > button\n+  Wait Until Element Is Visible  css=.pattern-modal-buttons > button\n   Click Element  css=.pattern-modal-buttons > button\n \n I change the actions order\n   Click Link    css=section:nth-child(3) li:first-child a\n   Wait until page contains  Action Settings\n   Input Text for sure  form.widgets.position  3\n+  Set Focus To Element  css=.pattern-modal-buttons > button\n+  Wait Until Element Is Visible  css=.pattern-modal-buttons > button\n   Click Element  css=.pattern-modal-buttons > button\n \n I add a new action\n@@ -84,14 +88,19 @@ I add a new action\n   Wait until page contains  New action\n   Select From List By Label   form.widgets.category:list   User actions\n   Input Text for sure  form.widgets.id  favorites\n+  Set Focus To Element  css=.pattern-modal-buttons > button\n+  Wait Until Element Is Visible  css=.pattern-modal-buttons > button\n   Click Element  css=.pattern-modal-buttons > button\n   Wait until page contains  favorites\n-  Execute JavaScript  window.scrollTo(0, document.body.scrollHeight)\n+  Set Focus To Element  css=section.category:last-child li:last-child a\n+  Wait Until Element Is Visible  css=section.category:last-child li:last-child a\n   Sleep  1\n-  Click Link     css=section.category:last-child li:last-child a\n+  Click Link  css=section.category:last-child li:last-child a\n   Wait until page contains  Action Settings\n   Input Text for sure  form.widgets.title  My favorites\n   Input Text for sure  form.widgets.url_expr  string:\\${globals_view/navigationRootUrl}/favorites\n+  Set Focus To Element  css=.pattern-modal-buttons > button\n+  Wait Until Element Is Visible  css=.pattern-modal-buttons > button\n   Click Element  css=.pattern-modal-buttons > button\n \n I delete an action\ndiff --git a/Products/CMFPlone/tests/robot/test_controlpanel_navigation.robot b/Products/CMFPlone/tests/robot/test_controlpanel_navigation.robot\nindex 80a85c8bf9..bdad652733 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_navigation.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_navigation.robot\n@@ -68,26 +68,36 @@ a private document \'${title}\'\n \n I disable generate tabs\n   Unselect Checkbox  form.widgets.generate_tabs:list\n+  Set Focus To Element  form.buttons.save\n+  Wait Until Element Is Visible  form.buttons.save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n I disable non-folderish tabs\n   Unselect Checkbox  xpath=//input[@value=\'Document\']\n+  Set Focus To Element  form.buttons.save\n+  Wait Until Element Is Visible  form.buttons.save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n I remove \'${portal_type}\' from the displayed types list\n   Unselect Checkbox  xpath=//input[@value=\'Document\']\n+  Set Focus To Element  form.buttons.save\n+  Wait Until Element Is Visible  form.buttons.save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n I enable filtering by workflow states\n   Select Checkbox  name=form.widgets.filter_on_workflow:list\n+  Set Focus To Element  form.buttons.save\n+  Wait Until Element Is Visible  form.buttons.save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n I choose to show \'${workflow_state}\' items\n   Select Checkbox  xpath=//input[@value=\'${workflow_state}\']\n+  Set Focus To Element  form.buttons.save\n+  Wait Until Element Is Visible  form.buttons.save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \ndiff --git a/Products/CMFPlone/tests/robot/test_controlpanel_search.robot b/Products/CMFPlone/tests/robot/test_controlpanel_search.robot\nindex 6d9bebe766..dc0185a2b4 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_search.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_search.robot\n@@ -49,13 +49,17 @@ the search control panel\n \n I enable livesearch\n   Select Checkbox  form.widgets.enable_livesearch:list\n+  Set Focus To Element  css=#form-buttons-save\n+  Wait Until Element Is Visible  css=#form-buttons-save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n I exclude the \'${portal_type}\' type from search\n   # Make sure we see the checkbox, in expanded in jenkins it gets a bit under the toolbar\n-  Click Link  css=a.plone-toolbar-logo\n+  Set Focus To Element  xpath=//input[@name=\'form.widgets.types_not_searched:list\' and @value=\'${portal_type}\']\n   Unselect Checkbox  xpath=//input[@name=\'form.widgets.types_not_searched:list\' and @value=\'${portal_type}\']\n+  Set Focus To Element  css=#form-buttons-save\n+  Wait Until Element Is Visible  css=#form-buttons-save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \ndiff --git a/Products/CMFPlone/tests/robot/test_controlpanel_security.robot b/Products/CMFPlone/tests/robot/test_controlpanel_security.robot\nindex 65175f7d01..4b7066cb31 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_security.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_security.robot\n@@ -11,7 +11,6 @@ Resource  keywords.robot\n Test Setup  Run keywords  Plone Test Setup\n Test Teardown  Run keywords  Plone Test Teardown\n \n-\n *** Test Cases ***************************************************************\n \n Scenario: Enable self registration in the Security Control Panel\n@@ -143,6 +142,8 @@ A user folder should be created when a user registers and logs in to the site\n   Input Text for sure  form.widgets.email  joe@test.com\n   Input Text for sure  form.widgets.password  supersecret\n   Input Text for sure  form.widgets.password_ctl  supersecret\n+  Set Focus To Element  css=#form-buttons-register\n+  Wait Until Element Is Visible  css=#form-buttons-register\n   Click Button  Register\n \n   # I login to the site\n@@ -175,6 +176,8 @@ UUID should be used for the user id\n   Input Text for sure  form.widgets.email  joe@test.com\n   Input Text for sure  form.widgets.password  supersecret\n   Input Text for sure  form.widgets.password_ctl  supersecret\n+  Set Focus To Element  css=#form-buttons-register\n+  Wait Until Element Is Visible  css=#form-buttons-register\n   Click Button  Register\n \n   # I login to the site\n@@ -184,9 +187,8 @@ UUID should be used for the user id\n   Input text for sure  __ac_password  supersecret\n   Click Button  Log in\n   Wait until page contains  You are now logged in\n-\n   # XXX: Here we can\'t really test that this is a uuid, since it\'s random, so\n   # we just check that user id is not equal to username or email\n-  ${userid}=  Get Text  xpath=//li[@id=\'portal-personaltools\']//li[contains(@class, \'plone-toolbar-submenu-header\')]//span\n+  ${userid}=  Get Text  xpath=//a[@id=\'personaltools-menulink\']\n   Should Not Be Equal As Strings  ${userid}  joe\n   Should Not Be Equal As Strings  ${userid}  joe@test.com\ndiff --git a/Products/CMFPlone/tests/robot/test_controlpanel_site.robot b/Products/CMFPlone/tests/robot/test_controlpanel_site.robot\nindex e425f19b9c..81fee76ee0 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_site.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_site.robot\n@@ -63,31 +63,43 @@ the site control panel\n \n I enable the sitemap\n   Given patterns are loaded\n+  Set Focus To Element  css=#formfield-form-widgets-enable_sitemap\n+  Wait Until Element Is Visible  css=#formfield-form-widgets-enable_sitemap\n   Select Checkbox  form.widgets.enable_sitemap:list\n+  Set Focus To Element  css=#form-buttons-save\n+  Wait Until Element Is Visible  css=#form-buttons-save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n I set the site title to \'${site_title}\'\n   Given patterns are loaded\n   Input Text  name=form.widgets.site_title  ${site_title}\n+  Set Focus To Element  css=#form-buttons-save\n+  Wait Until Element Is Visible  css=#form-buttons-save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n I set a custom logo\n   Given patterns are loaded\n   Choose File  name=form.widgets.site_logo  ${PATH_TO_TEST_FILES}/pixel.png\n+  Set Focus To Element  css=#form-buttons-save\n+  Wait Until Element Is Visible  css=#form-buttons-save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n I enable dublin core metadata\n   Given patterns are loaded\n   Select Checkbox  form.widgets.exposeDCMetaTags:list\n+  Set Focus To Element  css=#form-buttons-save\n+  Wait Until Element Is Visible  css=#form-buttons-save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n I add a Javascript snippet to the webstats javascript\n   Given patterns are loaded\n   Input Text  name=form.widgets.webstats_js  <script id="webstats_snippet"></script>\n+  Set Focus To Element  css=#form-buttons-save\n+  Wait Until Element Is Visible  css=#form-buttons-save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \ndiff --git a/Products/CMFPlone/tests/robot/test_controlpanel_social.robot b/Products/CMFPlone/tests/robot/test_controlpanel_social.robot\nindex 233a36d829..70f106d2e0 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_social.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_social.robot\n@@ -45,6 +45,8 @@ the social control panel\n I disable social\n   UnSelect Checkbox  form.widgets.share_social_data:list\n   Sleep  2\n+  Set Focus To Element  css=#form-buttons-save\n+  Wait Until Element Is Visible  css=#form-buttons-save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \n@@ -53,6 +55,8 @@ I provide social settings\n   Input Text  name=form.widgets.facebook_app_id  123456\n   Input Text  name=form.widgets.facebook_username  plonecms\n   Sleep  2\n+  Set Focus To Element  css=#form-buttons-save\n+  Wait Until Element Is Visible  css=#form-buttons-save\n   Click Button  Save\n   Wait until page contains  Changes saved\n \ndiff --git a/Products/CMFPlone/tests/robot/test_edit_user_schema.robot b/Products/CMFPlone/tests/robot/test_edit_user_schema.robot\nindex 6fa463c2d7..bbb8e87b4f 100644\n--- a/Products/CMFPlone/tests/robot/test_edit_user_schema.robot\n+++ b/Products/CMFPlone/tests/robot/test_edit_user_schema.robot\n@@ -93,58 +93,52 @@ site registration enabled\n I add a new text field to the member fields\n   Go to  ${PLONE_URL}/@@member-fields\n   Wait until page contains element  css=#add-field\n-  Click Button  Add new field\xe2\x80\xa6\n+  Click Link  Add new field\xe2\x80\xa6\n   Wait Until Element Is visible  css=#add-field-form #form-widgets-title\n   Input Text  css=#add-field-form #form-widgets-title  Test Field\n   Press Key  css=#add-field-form #form-widgets-title  \\\\09\n   Select From List By Label  css=#form-widgets-factory  Text line (String)\n   Click button  css=.pattern-modal-buttons button#form-buttons-add\n-  # XXX: This is really really bad! We need a UI notification like:\n-  # Wait until page contains  Field created.\n-  Sleep  1\n+  Wait until page contains  Field added successfully.\n+\n+I Open the test_field Settings\n+  Go to  ${PLONE_URL}/@@member-fields\n+  Wait until page contains element  css=div[data-field_id=\'test_field\']\n+  Set Focus To Element  css=div[data-field_id=\'test_field\'] a.fieldSettings\n+  Wait Until Keyword Succeeds  3  100ms  Click link  css=div[data-field_id=\'test_field\'] a.fieldSettings\n \n I add a new required text field to the member fields\n   Go to  ${PLONE_URL}/@@member-fields\n   Wait until page contains element  css=#add-field\n-  Click Button  Add new field\xe2\x80\xa6\n+  Click Link  Add new field\xe2\x80\xa6\n   Wait Until Element Is visible  css=#add-field-form #form-widgets-title\n   Input Text  css=#add-field-form #form-widgets-title  Test Field\n   Press Key  css=#add-field-form #form-widgets-title  \\\\09\n   Select From List By Label  css=#form-widgets-factory  Text line (String)\n   Select Checkbox  form.widgets.required:list\n   Click button  css=.pattern-modal-buttons button#form-buttons-add\n-  # XXX: This is really really bad! We need a UI notification like:\n-  # Wait until page contains  Field created.\n-  Sleep  1\n+  Wait until page contains  Field added successfully.\n \n choose to show the field on registration\n-  Go to  ${PLONE_URL}/@@member-fields\n-  Wait until page contains element  css=div[data-field_id=\'test_field\']\n-  Click link  css=div[data-field_id=\'test_field\'] a.fieldSettings\n+  I Open the test_field Settings\n   Wait Until Element Is visible  form.widgets.IUserFormSelection.forms:list\n   Select Checkbox  css=#form-widgets-IUserFormSelection-forms-0\n   Click button  css=.pattern-modal-buttons button#form-buttons-save\n-  # XXX: This is really really bad! We need a UI notification like:\n-  # Wait until page contains  Field created.\n-  Sleep  1\n+  Wait until page contains  Data successfully updated.\n \n choose to show the field in the user profile\n-  Go to  ${PLONE_URL}/@@member-fields\n-  Wait until page contains element  css=div[data-field_id=\'test_field\']\n-  Click link  css=div[data-field_id=\'test_field\'] a.fieldSettings\n+  I Open the test_field Settings\n   Wait Until Element Is visible  form.widgets.IUserFormSelection.forms:list\n   Select Checkbox  css=#form-widgets-IUserFormSelection-forms-1\n   Click button  css=.pattern-modal-buttons button#form-buttons-save\n-  # XXX: This is really really bad! We need a UI notification like:\n-  # Wait until page contains  Field created.\n-  Sleep  1\n+  Wait until page contains  Data successfully updated.\n \n I move the new field to the top\n   # XXX: Drag and drop is not working!!!\n   Drag And Drop  xpath=//div[@data-field_id="test_field"]//span[contains(@class, "draghandle")]  xpath=//div[@data-field_id="home_page"]\n \n add a min/max constraint to the field\n-  Click Link  xpath=//div[@data-field_id=\'test_field\']//a[contains(@class, \'fieldSettings\')]\n+  I Open the test_field Settings\n   Wait until page contains element  form.widgets.min_length\n   Input Text  form.widgets.min_length  4\n   Input Text  form.widgets.max_length  6\n@@ -169,14 +163,15 @@ a logged-in user will see the field in the user profile\n \n a logged-in user will see the required field in the user profile\n   a logged-in user will see the field in the user profile\n-  XPath Should Match X Times  //div[@id=\'formfield-form-widgets-test_field\']//span[contains(@class, \'required\')]  1  message=test_field should be required\n+  Page Should Contain Element  //div[@id=\'formfield-form-widgets-test_field\']//span[contains(@class, \'required\')]  limit=1  message=test_field should be required\n \n a logged-in user will see the field on top of the user profile\n   a logged-in user will see the field in the user profile\n-  XPath Should Match X Times  //form[@id=\'form\']/div[1]//input[@id=\'form-widgets-test_field\']  1  message=test_field should be on top\n+  Page Should Contain Element  //form[@id=\'form\']/div[1]//input[@id=\'form-widgets-test_field\']  limit=1  message=test_field should be on top\n \n a logged-in user will see a field with min/max constraints\n   a logged-in user will see the field in the user profile\n+  Input Text  form.widgets.email  test@plone.org\n   Input Text  form.widgets.test_field  1\n   Click Button  Save\n   Wait until page contains  There were some errors.\ndiff --git a/Products/CMFPlone/tests/robot/test_linkintegrity.robot b/Products/CMFPlone/tests/robot/test_linkintegrity.robot\nindex 03d386a767..bf2b03adcf 100644\n--- a/Products/CMFPlone/tests/robot/test_linkintegrity.robot\n+++ b/Products/CMFPlone/tests/robot/test_linkintegrity.robot\n@@ -69,23 +69,23 @@ a page to edit\n \n a link in rich text\n   Go To  ${PLONE_URL}/bar/edit\n-  Wait until element is visible  css=.mce-edit-area iframe\n-  Select Frame  css=.mce-edit-area iframe\n+  Wait until element is visible  css=.tox-edit-area iframe\n+  Select Frame  css=.tox-edit-area iframe\n   Input text  css=.mce-content-body  foo\n   Execute Javascript    function selectElementContents(el) {var range = document.createRange(); range.selectNodeContents(el); var sel = window.getSelection(); sel.removeAllRanges(); sel.addRange(range);} var el = document.getElementById("tinymce"); selectElementContents(el);\n   UnSelect Frame\n-  Click Button  css=div[aria-label="Insert/edit link"] button\n+  Click Button  css=button[aria-label="Insert/edit link"]\n \n   Given patterns are loaded\n   Wait until element is visible  css=.pat-relateditems .select2-input.select2-default\n   Click Element  css=.pat-relateditems .select2-input.select2-default\n-  Wait until element is visible  css=.pattern-relateditems-result.one-level-up a.pattern-relateditems-result-browse\n-  Click Element  css=.pattern-relateditems-result.one-level-up a.pattern-relateditems-result-browse\n+  Wait until element is visible  css=.pat-relateditems-result.one-level-up a.pat-relateditems-result-browse\n+  Click Element  css=.pat-relateditems-result.one-level-up a.pat-relateditems-result-browse\n   Wait until element is visible  xpath=(//span[contains(., \'Foo\')])\n   Click Element  xpath=(//span[contains(., \'Foo\')])\n   Wait until page contains  Foo\n \n-  Click Button  css=.plone-modal-footer .plone-btn-primary\n+  Click Button  css=.modal-footer .btn-primary\n   Click Button  css=#form-buttons-save\n \n \n@@ -142,10 +142,10 @@ remove link to page\n   Go To  ${PLONE_URL}/bar\n   Wait until element is visible  css=#contentview-edit a\n   Click Link  css=#contentview-edit a\n-  Wait until element is visible  css=.mce-edit-area iframe\n-  Select Frame  css=.mce-edit-area iframe\n+  Wait until element is visible  css=.tox-edit-area iframe\n+  Select Frame  css=.tox-edit-area iframe\n   Input text  css=.mce-content-body  foo\n   Execute Javascript    function selectElementContents(el) {var range = document.createRange(); range.selectNodeContents(el); var sel = window.getSelection(); sel.removeAllRanges(); sel.addRange(range);} var el = document.getElementById("tinymce"); selectElementContents(el);\n   UnSelect Frame\n-  Click Button  css=div[aria-label="Remove link"] button\n+  Click Button  css=button[aria-label="Remove link"]\n   Click Button  css=#form-buttons-save\ndiff --git a/Products/CMFPlone/tests/robot/test_overlays.robot b/Products/CMFPlone/tests/robot/test_overlays.robot\nindex bebb048492..deee0bdd98 100644\n--- a/Products/CMFPlone/tests/robot/test_overlays.robot\n+++ b/Products/CMFPlone/tests/robot/test_overlays.robot\n@@ -180,7 +180,7 @@ Scenario: New user overlay remains on wrong data\n       And I trigger the add a new user action\n      When I send the register form\n      Then overlay should remain open\n-      And overlay shows an error\n+      And overlay requires to compile a field\n \n Scenario: New user overlay closes on valid data\n     Given a logged-in site administrator\n@@ -229,20 +229,20 @@ I click the \'${link_name}\' link\n the \'${link_name}\' overlay\n     Wait until page contains  ${link_name}\n     Click Link  xpath=//a[descendant-or-self::*[contains(text(), \'${link_name}\')]]\n-    Wait until keyword succeeds  30  1  Page should contain element  css=div.plone-modal-dialog\n+    Wait until keyword succeeds  30  1  Page should contain element  css=div.modal-dialog\n \n overlay should open\n-    Wait until keyword succeeds  30  1  Element Should Be Visible  css=div.plone-modal-dialog\n+    Wait until keyword succeeds  30  1  Element Should Be Visible  css=div.modal-dialog\n \n overlay should remain open\n-    Wait until page contains element  css=div.plone-modal-wrapper\n-    Wait until element is visible  css=div.plone-modal-wrapper\n+    Wait until page contains element  css=div.modal-wrapper\n+    Wait until element is visible  css=div.modal-wrapper\n \n I close the overlay\n-    Click Element  css=div.plone-modal-header a.plone-modal-close\n+    Click Element  css=div.modal-header button.modal-close\n \n overlay should close\n-    Wait until keyword succeeds  40  1  Page should not contain element  css=div.plone-modal-dialog\n+    Wait until keyword succeeds  40  1  Page should not contain element  css=div.modal-dialog\n \n login overlay shows an error\n     Wait Until Page Contains  Error\n@@ -250,20 +250,23 @@ login overlay shows an error\n overlay shows an error\n     Wait Until Page Contains  There were errors\n \n+overlay requires to compile a field\n+    Wait Until Page Contains  Required input is missing\n+\n I \'${action}\' the form\n-    Wait until keyword succeeds  30  1  Element Should Be Visible  css=div.plone-modal-footer button[name="form.buttons.${action}"]\n-    Click Element  css=div.plone-modal-footer button[name="form.buttons.${action}"]\n+    Wait until keyword succeeds  30  1  Element Should Be Visible  css=div.modal-footer button[name="form.buttons.${action}"]\n+    Click Element  css=div.modal-footer button[name="form.buttons.${action}"]\n \n I enter wrong credentials\n     Input text  __ac_name  wrong\n     Input text  __ac_password  user\n-    Click Button  css=div.plone-modal-footer button\n+    Click Button  css=div.modal-footer button\n \n I enter valid credentials\n     Wait until page contains element  name=__ac_name\n     Input text for sure  __ac_name  ${SITE_OWNER_NAME}\n     Input text for sure  __ac_password  ${SITE_OWNER_PASSWORD}\n-    Click Button  css=div.plone-modal-footer button\n+    Click Button  css=div.modal-footer button\n \n I enter valid user data\n     Wait until page contains element  name=form.widgets.password_ctl\n@@ -278,8 +281,8 @@ I enter valid register user data\n     Input text  form.widgets.email          my@email.eu\n \n I send the register form\n-    Wait until page contains element  css=div.plone-modal-footer #form-buttons-register\n-    Click Element  css=div.plone-modal-footer #form-buttons-register\n+    Wait until page contains element  css=div.modal-footer #form-buttons-register\n+    Click Element  css=div.modal-footer #form-buttons-register\n \n I trigger the add a new user action\n     Click Element  id=add-user\n@@ -304,7 +307,7 @@ a document as the default view of the test folder\n     Wait until element is visible  id=contextSetDefaultPage\n     Click link  id=contextSetDefaultPage\n     Click element  id=doc\n-    Click element  css=div.plone-modal-footer button[name="form.buttons.Save"]\n+    Click element  css=div.modal-footer button[name="form.buttons.Save"]\n \n I change the default content view of the test folder\n     Go to  ${PLONE_URL}/${TEST_FOLDER}\n@@ -320,11 +323,11 @@ I trigger the \'${action}\' action menu item of the test folder\n     Click link  xpath=//li[@id=\'plone-contentmenu-actions\']/a\n     Wait until element is visible  id=plone-contentmenu-actions-${action}\n     Click link  id=plone-contentmenu-actions-${action}\n-    Wait until page contains Element  css=div.plone-modal-dialog\n+    Wait until page contains Element  css=div.modal-dialog\n \n I confirm deletion of the content\n     # Note: The \'delete\' button has no standard z3c.form name attribute\n-    Wait until keyword succeeds  2  2  Click Element  css=div.plone-modal-footer button#form-buttons-Delete\n+    Wait until keyword succeeds  2  2  Click Element  css=div.modal-footer button#form-buttons-Delete\n \n modals loaded\n-    Wait For Condition  return window.jQuery(\'.plone-modal-wrapper\').size() > 0\n+    Wait For Condition  return window.jQuery(\'.modal-wrapper\').size() > 0\ndiff --git a/Products/CMFPlone/tests/robot/test_querystring.robot b/Products/CMFPlone/tests/robot/test_querystring.robot\nindex fb98236c81..ef22e81206 100644\n--- a/Products/CMFPlone/tests/robot/test_querystring.robot\n+++ b/Products/CMFPlone/tests/robot/test_querystring.robot\n@@ -134,10 +134,10 @@ Scenario Event end date query\n     and the querystring pattern\n     # Before date\n     When I activate the default operator in the criteria Event end date\n-    and Execute Javascript  $(\'.querystring-criteria-value .pattern-pickadate-date-wrapper > input[type="text"]\').pickadate(\'picker\').set(\'select\', new Date(2018, 7, 1))\n+    and Execute Javascript  $(\'.querystring-criteria-value input[type="date"]\').val(\'2018-07-01\')\n     Then we do not expect any hits\n \n-    # When Execute Javascript  $(\'.querystring-criteria-value .pattern-pickadate-date-wrapper > input[type="text"]\').pickadate(\'picker\').set(\'select\', new Date(2018, 7, 6))\n+    # When Execute Javascript  $(\'.querystring-criteria-value input[type="date"]\').val(\'2018-07-06\')\n \n     # !!! BUG in plone.app.robotframework?\n     # File "~/.buildout/shared-eggs/plone.app.event-3.2.1-py3.6.egg/plone/app/event/recurrence.py", line 77, in occurrences\n@@ -245,9 +245,9 @@ a bunch of folders\n \n a bunch of events\n     ${F1}=  a bunch of folders\n-    Create content  type=Event  title=Event1  start=2018-08-01 15:00  end=2018-08-01 17:00  container=${F1}\n-    Create content  type=Event  title=Event2  start=2018-08-05 16:00  end=2018-08-07 11:00  container=${F1}\n-    Create content  type=Event  title=Event3  start=2018-08-05 16:30  open_end-empty-marker=1  container=${F1}\n+    Create content  type=Event  title=Event1  start=2018-08-01T15:00  end=2018-08-01T17:00  container=${F1}\n+    Create content  type=Event  title=Event2  start=2018-08-05T16:00  end=2018-08-07T11:00  container=${F1}\n+    Create content  type=Event  title=Event3  start=2018-08-05T16:30  open_end-empty-marker=1  container=${F1}\n     Create content  type=Event  title=Event4  start=2018-08-06  end=2018-08-06  whole_day-empty-marker=1  container=${F1}\n \n I activate the default operator in the criteria ${CRITERIA}\n@@ -296,7 +296,7 @@ I search in ${NAME} subfolder in the related items widget\n     mark results\n     Click Element  css=ul.select2-choices\n     Wait Until Page Contains  ${NAME}\n-    Click Element  //a[contains(concat(\' \', normalize-space(@class), \' \'), \' pattern-relateditems-result-select \')]//span[contains(text(),\'${NAME}\')]\n+    Click Element  //a[contains(concat(\' \', normalize-space(@class), \' \'), \' pat-relateditems-result-select \')]//span[contains(text(),\'${NAME}\')]\n \n I expect to be in Advanced mode\n     open the select box titled operator\ndiff --git a/Products/CMFPlone/tests/robot/test_thememapper.robot b/Products/CMFPlone/tests/robot/test_thememapper.robot\ndeleted file mode 100644\nindex 4701ca2e07..0000000000\n--- a/Products/CMFPlone/tests/robot/test_thememapper.robot\n+++ /dev/null\n@@ -1,118 +0,0 @@\n-*** Settings *****************************************************************\n-\n-Resource  plone/app/robotframework/keywords.robot\n-Resource  plone/app/robotframework/saucelabs.robot\n-Resource  plone/app/robotframework/selenium.robot\n-\n-Library  Remote  ${PLONE_URL}/RobotRemote\n-\n-Resource  keywords.robot\n-\n-Test Setup  Run keywords  Plone Test Setup\n-Test Teardown  Run keywords  Plone Test Teardown\n-\n-*** Variables ***\n-\n-${LESS}     @color: blue; body { background: @color; }\n-${LESSFILE}     test.less\n-${CSSFILE}      output.less\n-${CSS}      background: blue;\n-\n-*** Test Cases **************************************************************\n-\n-Scenario: Thememapper basic functionality\n-    Given a logged-in site administrator\n-    and a new theme to edit\n-    When I open rules.xml\n-    Then I expect 2 tabs to be open\n-    and I expect a tab labeled "rules.xml" to be open\n-\n-    When I close the tab labeled "rules.xml"\n-    Then I expect 1 tabs to be open\n-\n-    When I create a new file called "${LESSFILE}"\n-    Then I expect 2 tabs to be open\n-    and I expect a tab labeled "${LESSFILE}" to be open\n-\n-    When I type some code into the editor\n-    and I save the current document\n-    I expect the document ${LESSFILE} to contain ${LESS}\n-\n-Scenario: Thememapper LESS builder\n-    Given a logged-in site administrator\n-    and a new theme to edit\n-    and I create a new file called "${LESSFILE}"\n-    and I type some code into the editor\n-    and I save the current document\n-    When I use the LESS builder on "${LESSFILE}"\n-    Then I expect the compiled CSS to contain "${CSS}"\n-\n-*** Keywords ****************************************************************\n-\n-a new theme to edit\n-    Go to  ${PLONE_URL}/theming-controlpanel\n-    Wait until page contains  Theme settings\n-    Click Element   jquery=a[href="#modal-copy-barceloneta"]\n-    Wait Until Element Is Visible   jquery=.plone-modal-body input[type="text"]\n-    Input Text  jquery=.plone-modal-body input[type="text"]   Test\n-    Click Element   jquery=.plone-modal-body input[type="submit"]\n-    Wait Until Element Is Visible   css=.nav-and-editor\n-    Page Should Contain     backend.xml\n-\n-I open ${NAME}\n-    Click Element   jquery=.jqtree-element:contains("${NAME}")\n-\n-I expect ${NUM} tabs to be open\n-    Sleep  1\n-    ${hits}=    Execute Javascript  return window.jQuery(\'.navbar-nav li\').length.toString();\n-    Should Be Equal     ${hits}     ${NUM}\n-\n-I expect a tab labeled "${LABEL}" to be open\n-    Wait Until Element Is Visible   jquery=.navbar-nav li:contains("${LABEL}")\n-\n-I close the tab labeled "${LABEL}"\n-    Click Element   jquery=.navbar-nav li:contains("${LABEL}") .remove\n-\n-I create a new file called "${NAME}"\n-    Click Element   css=#btngroup-main #btngroup-dropdown-file_menu #dropdown-menu-\n-    Click Element   css=#alink-addnew\n-    Input Text  jquery=.addnew input[type="text"]   ${NAME}\n-    Click Element   jquery=.addnew .btn-primary\n-    Sleep   1\n-\n-I type some code into the editor\n-    Click Element   css=.ace_content\n-    ${ace_id}=     Execute Javascript   return window.jQuery(\'.ace_editor\').attr(\'id\');\n-    Execute Javascript      ace.edit(${ace_id}).setValue("${LESS}");\n-\n-I expect the editors value to be "${MESSAGE}"\n-    ${ace_id}=      Execute Javascript  return window.jQuery(\'.ace_editor\').attr(\'id\');\n-    ${value}=   Execute Javascript      return ace.edit(\'${ace_id}\').getValue();\n-    Should Be Equal     ${value}    ${MESSAGE}\n-\n-I expect the editors value to contain "${MESSAGE}"\n-    ${ace_id}=      Execute Javascript  return window.jQuery(\'.ace_editor\').attr(\'id\');\n-    ${value}=   Execute Javascript      return ace.edit(\'${ace_id}\').getValue();\n-    Should Contain  ${value}    ${MESSAGE}\n-\n-I save the current document\n-    Click Element   css=#btn-save\n-    Sleep   1\n-\n-I expect the document ${NAME} to contain ${MESSAGE}\n-    Go To   ${PLONE_URL}/++theme++test/@@theming-controlpanel-mapper\n-    Wait Until Element Is Visible    css=.ace_editor\n-    I open ${NAME}\n-    I expect the editors value to be "${MESSAGE}"\n-\n-I use the LESS builder on "${file}"\n-    I open ${file}\n-    Click Element   css=#btngroup-mapper #btngroup-dropdown-file_menu #dropdown-menu-\n-    Click Element   css=#alink-buildless\n-    Input Text      css=#lessFileName   ${CSSFILE}\n-    Click element   css=#compileBtn\n-    Sleep   1\n-\n-I expect the compiled CSS to contain "${TEXT}"\n-    I open ${CSSFILE}\n-    I expect the editors value to contain "${TEXT}"\ndiff --git a/Products/CMFPlone/tests/robot/test_tinymce.robot b/Products/CMFPlone/tests/robot/test_tinymce.robot\nindex 2f39805371..8f56da5823 100644\n--- a/Products/CMFPlone/tests/robot/test_tinymce.robot\n+++ b/Products/CMFPlone/tests/robot/test_tinymce.robot\n@@ -28,13 +28,10 @@ Scenario: A page is opened to edit in TinyMCE\n       and insert link\n       and insert image\n \n-    Click Button  css=#form-buttons-save\n-    # in FF 34 this fails. in FF46 or chrome this is not a problem at all.\n-    # remove "Run Keyword And Ignore Error" when https://github.com/plone/jenkins.plone.org/issues/179\n-    # was solved\n-    Run Keyword And Ignore Error  Element Should Be Visible  css=#parent-fieldname-text img[alt="SomeAlt"]\n-    Run Keyword And Ignore Error  Element Should Be Visible  css=#parent-fieldname-text img[title="SomeTitle"]\n-    Element Should Be Visible  css=#parent-fieldname-text a\n+    Set Focus To Element  css=#form-buttons-save\n+    Wait Until Element Is Visible  css=#form-buttons-save\n+    Click Button  Save\n+    Wait until page contains  Changes saved\n \n \n *** Keywords *****************************************************************\n@@ -50,34 +47,33 @@ an uploaded image\n     Create content  type=Image  title=an-image\n \n text inserted into wysiwyg\n-    Select Frame  css=.mce-edit-area iframe\n+    Wait Until Element Is Visible  css=.tox-edit-area iframe\n+    Select Frame  css=.tox-edit-area iframe\n     Input text  css=.mce-content-body  foobar\n     UnSelect Frame\n \n insert link\n-    Select Frame  css=.mce-edit-area iframe\n+    Select Frame  css=.tox-edit-area iframe\n     Execute Javascript    function selectElementContents(el) {var range = document.createRange(); range.selectNodeContents(el); var sel = window.getSelection(); sel.removeAllRanges(); sel.addRange(range);} var el = document.getElementById("tinymce"); selectElementContents(el);\n     UnSelect Frame\n-    Click Button  css=div[aria-label="Insert/edit link"] button\n-    Click Button  css=.pattern-relateditems-container button.favorites\n-    Click Link  css=.pattern-relateditems-container .favorites a.fav[href=\'/\']\n-    Wait Until Element Is Visible  css=.pattern-relateditems-result-select.selectable\n-    Click Link  css=.pattern-relateditems-result-select.selectable\n-    Click Button  css=.plone-modal-footer .plone-btn-primary\n-    Select Frame  css=.mce-edit-area iframe\n+    Click Button  css=button[aria-label="Insert/edit link"]\n+    Click Button  css=.pat-relateditems-container button.favorites\n+    Click Link  css=.pat-relateditems-container .favorites a.fav[href=\'/\']\n+    Wait Until Element Is Visible  css=.pat-relateditems-result-select.selectable\n+    Click Link  css=.pat-relateditems-result-select.selectable\n+    Click Button  css=.modal-footer input[name="insert"]\n+    Select Frame  css=.tox-edit-area iframe\n     Execute Javascript  window.getSelection().removeAllRanges()\n     UnSelect Frame\n-    Wait Until Element Is Not Visible  css=.plone-modal-footer .plone-btn-primary\n+    Wait Until Element Is Not Visible  css=.modal-footer input[name="insert"]\n \n insert image\n-    Click Button  css=div[aria-label="Insert/edit image"] button\n-    Click Button  css=.pattern-relateditems-container button.favorites\n-    Click Link  css=.pattern-relateditems-container .favorites a.fav[href=\'/\']\n-    Wait Until Element Is Visible  css=.pattern-relateditems-result-select.selectable\n-    Click Link  css=.pattern-relateditems-result-select.selectable\n-    Input Text  css=.plone-modal-body [name="title"]  SomeTitle\n-    Input Text  css=.plone-modal-body [name="alt"]  SomeAlt\n-    Click Button  css=.plone-modal-footer .plone-btn-primary[name=\'insert\']\n-    # in FF 34 we need to click twice. in FF46 or chrome this is not a problem at all.\n-    Run Keyword And Ignore Error  Click Button  css=.plone-modal-footer .plone-btn-primary[name=\'insert\']\n-    Wait Until Element Is Not Visible  css=.plone-modal-footer .plone-btn-primary[name=\'insert\']\n+    Click Button  css=button[aria-label="Insert/edit image"]\n+    Click Button  css=.pat-relateditems-container button.favorites\n+    Click Link  css=.pat-relateditems-container .favorites a.fav[href=\'/\']\n+    Wait Until Element Is Visible  css=.pat-relateditems-result-select.selectable\n+    Click Link  css=.pat-relateditems-result-select.selectable\n+    Input Text  css=.modal-body [name="title"]  SomeTitle\n+    Input Text  css=.modal-body [name="alt"]  SomeAlt\n+    Click Button  css=.modal-footer input[name="insert"]\n+    Wait Until Element Is Not Visible  css=.modal-footer input[name="insert"]\ndiff --git a/Products/CMFPlone/tests/testCSSandJSRegistry.py b/Products/CMFPlone/tests/testCSSandJSRegistry.py\ndeleted file mode 100644\nindex d7ef268276..0000000000\n--- a/Products/CMFPlone/tests/testCSSandJSRegistry.py\n+++ /dev/null\n@@ -1,73 +0,0 @@\n-from plone.registry.interfaces import IRegistry\n-from plone.base.interfaces import IBundleRegistry\n-from plone.base.interfaces import IResourceRegistry\n-from Products.CMFPlone.tests.PloneTestCase import PloneTestCase\n-from zope.component import getUtility\n-\n-\n-class TestCSSRegistry(PloneTestCase):\n-\n-    def afterSetUp(self):\n-        self.registry = getUtility(IRegistry)\n-\n-    def testDefaultCssIsInstalled(self):\n-        installedResources = self.registry.collectionOfInterface(\n-            IResourceRegistry,\n-            prefix=\'plone.resources\'\n-        )\n-        expected = [\n-            \'++plone++static/plone.less\',\n-        ]\n-        css_files = [y for x in installedResources.values() for y in x.css]\n-        for e in expected:\n-            self.assertTrue(e in css_files, e)\n-\n-    def testBundleIsInstalled(self):\n-        installedBundles = self.registry.collectionOfInterface(\n-            IBundleRegistry, prefix=\'plone.bundles\')\n-        expected = [\n-            \'plone\',\n-            \'plone-legacy\'\n-        ]\n-        for e in expected:\n-            self.assertTrue(e in installedBundles.keys(), e)\n-\n-    # def testRTLShouldHaveHigherPrecedence(self):\n-    #     installedStylesheetIds = self.tool.getResourceIds()\n-    #     indexRTLStylesheet = self.tool.getResourcePosition(\'RTL.css\')\n-    #     comes_before = [\'++resource++plone.css\']\n-    #     for cb in comes_before:\n-    #         self.assertTrue(\n-    #             cb in installedStylesheetIds[:indexRTLStylesheet],\n-    #             cb\n-    #         )\n-\n-    def testJSIsInsertedInPage(self):\n-        self.registry[\'plone.resources.development\'] = True\n-        self.registry[\'plone.bundles/plone.develop_css\'] = True\n-        page = self.portal.view()\n-        self.assertTrue(\'++plone++static/plone.less\' in page)\n-\n-\n-class TestJSRegistry(PloneTestCase):\n-\n-    def afterSetUp(self):\n-        self.registry = getUtility(IRegistry)\n-\n-    def testDefaultJSIsInstalled(self):\n-        installedResources = self.registry.collectionOfInterface(\n-            IResourceRegistry,\n-            prefix=\'plone.resources\'\n-        )\n-        expected = [\n-            \'++resource++plone.js\',\n-        ]\n-        js_files = {x.js for x in installedResources.values()}\n-        for e in expected:\n-            self.assertTrue(e in js_files, e)\n-\n-    def testJSIsInsertedInPage(self):\n-        self.registry[\'plone.resources.development\'] = True\n-        self.registry[\'plone.bundles/plone.develop_javascript\'] = True\n-        page = self.portal.view()\n-        self.assertTrue(\'++resource++plone.js\' in page)\ndiff --git a/Products/CMFPlone/tests/testControlPanel.py b/Products/CMFPlone/tests/testControlPanel.py\nindex 159e1ee627..0ce80c7acf 100644\n--- a/Products/CMFPlone/tests/testControlPanel.py\n+++ b/Products/CMFPlone/tests/testControlPanel.py\n@@ -13,8 +13,8 @@ def setUp(self):\n         # get the expected default groups and configlets\n         self.groups = [\'Plone\', \'Products\']\n         self.configlets = [\'QuickInstaller\', \'MailHost\',\n-                           \'UsersGroups\', \'MemberPrefs\', \'PortalSkin\',\n-                           \'MemberPassword\', \'ZMI\', \'SecuritySettings\',\n+                           \'UsersGroups\', \'PortalSkin\',\n+                           \'ZMI\', \'SecuritySettings\',\n                            \'NavigationSettings\', \'SearchSettings\',\n                            \'errorLog\', \'PloneReconfig\', \'TypesSettings\',\n                            \'FilterSettings\',\ndiff --git a/Products/CMFPlone/tests/testPloneView.py b/Products/CMFPlone/tests/testPloneView.py\nindex 4f68681a98..5efdcc84bd 100644\n--- a/Products/CMFPlone/tests/testPloneView.py\n+++ b/Products/CMFPlone/tests/testPloneView.py\n@@ -151,3 +151,8 @@ def testCropText(self):\n     def testSiteEncoding(self):\n         view = Plone(self.portal, self.app.REQUEST)\n         self.assertEqual(\'utf-8\', view.site_encoding())\n+\n+    def test_human_readable_size(self):\n+        view = Plone(self.portal, self.app.REQUEST)\n+        from Products.CMFPlone.utils import human_readable_size\n+        self.assertIs(view.human_readable_size, human_readable_size)\ndiff --git a/Products/CMFPlone/tests/testResourceRegistries.py b/Products/CMFPlone/tests/testResourceRegistries.py\nindex 87ba06b9f1..a0ce22f73c 100644\n--- a/Products/CMFPlone/tests/testResourceRegistries.py\n+++ b/Products/CMFPlone/tests/testResourceRegistries.py\n@@ -1,609 +1,249 @@\n from plone.app.testing import logout\n+from plone.registry import field as regfield\n+from plone.registry import Record\n from plone.registry.interfaces import IRegistry\n-from plone.resource.interfaces import IResourceDirectory\n-from plone.subrequest import subrequest\n-from Products.CMFPlone.controlpanel.browser.resourceregistry import OverrideFolderManager  # noqa\n-from Products.CMFPlone.controlpanel.browser.resourceregistry import ResourceRegistryControlPanelView  # noqa\n from plone.base.interfaces import IBundleRegistry\n-from plone.base.interfaces import IResourceRegistry\n-from plone.base.interfaces.resources import OVERRIDE_RESOURCE_DIRECTORY_NAME  # noqa\n from Products.CMFPlone.resources import add_bundle_on_request\n-from Products.CMFPlone.resources import add_resource_on_request\n from Products.CMFPlone.resources import remove_bundle_on_request\n-from Products.CMFPlone.resources.browser.cook import cookWhenChangingSettings\n-from Products.CMFPlone.resources.browser.scripts import ScriptsView\n-from Products.CMFPlone.resources.browser.styles import StylesView\n-from Products.CMFPlone.resources.bundle import Bundle\n-from Products.CMFPlone.resources.exportimport.resourceregistry import ResourceRegistryNodeAdapter  # noqa\n+from Products.CMFPlone.resources.browser.resource import ScriptsView\n+from Products.CMFPlone.resources.browser.resource import StylesView\n from Products.CMFPlone.tests import PloneTestCase\n-from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from zope.component import getUtility\n \n-import json\n-from unittest import mock\n-import os\n \n-\n-class TestResourceRegistries(PloneTestCase.PloneTestCase):\n-\n-    def test_cooking_resources(self):\n-        registry = getUtility(IRegistry)\n-        bundles = registry.collectionOfInterface(IBundleRegistry,\n-                                                 prefix="plone.bundles")\n-        bundle = bundles.add(\'foobar\')\n-        bundle.jscompilation = \'++plone++static/foobar-compiled.js\'\n-        bundle.csscompilation = \'++plone++static/foobar-compiled.css\'\n-\n-        resources = registry.collectionOfInterface(IResourceRegistry,\n-                                                   prefix="plone.resources")\n-        resource = resources.add(\'foobar\')\n-\n-        resource.js = \'++plone++static/foobar.js\'\n-        resource.css = [\'++plone++static/foobar.css\']\n-        bundle.resources = [\'foobar\']\n-\n-        persistent_directory = getUtility(\n-            IResourceDirectory, name="persistent")\n-        if OVERRIDE_RESOURCE_DIRECTORY_NAME not in persistent_directory:\n-            persistent_directory.makeDirectory(\n-                OVERRIDE_RESOURCE_DIRECTORY_NAME)\n-        container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n-        container.makeDirectory(\'static\')\n-        directory = container[\'static\']\n-        directory.writeFile(\'foobar.js\', \'alert("Hi!");\\n\\nalert("Ho!");\')\n-        directory.writeFile(\'foobar.css\', \'body {\\ncolor: blue;\\n}\')\n-\n-        cookWhenChangingSettings(self.portal, bundle)\n-\n-        resp_js = subrequest(\n-            \'{}/++plone++static/foobar-compiled.js\'.format(\n-                self.portal.absolute_url()\n-            )\n-        )\n-        self.assertIn(b\'alert("Hi!");alert("Ho!");\', resp_js.getBody())\n-\n-        resp_css = subrequest(\n-            \'{}/++plone++static/foobar-compiled.css\'.format(\n-                self.portal.absolute_url()\n-            )\n-        )\n-        self.assertIn(b\'body{color:blue}\', resp_css.getBody())\n-\n-    def test_dont_minify_already_minified(self):\n-        registry = getUtility(IRegistry)\n-        bundles = registry.collectionOfInterface(IBundleRegistry,\n-                                                 prefix="plone.bundles")\n-        bundle = bundles.add(\'foobar\')\n-        bundle.jscompilation = \'++plone++static/foobar-compiled.js\'\n-        bundle.csscompilation = \'++plone++static/foobar-compiled.css\'\n-\n-        resources = registry.collectionOfInterface(IResourceRegistry,\n-                                                   prefix="plone.resources")\n-        resource = resources.add(\'foobar\')\n-\n-        resource.js = \'++plone++static/foobar.min.js\'\n-        resource.css = [\'++plone++static/foobar.min.css\']\n-        bundle.resources = [\'foobar\']\n-\n-        persistent_directory = getUtility(\n-            IResourceDirectory, name="persistent")\n-        if OVERRIDE_RESOURCE_DIRECTORY_NAME not in persistent_directory:\n-            persistent_directory.makeDirectory(\n-                OVERRIDE_RESOURCE_DIRECTORY_NAME)\n-        container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n-        container.makeDirectory(\'static\')\n-        directory = container[\'static\']\n-        directory.writeFile(\'foobar.min.js\', b\'alert("Hi!");\\n\\nalert("Ho!");\')\n-        directory.writeFile(\'foobar.min.css\', b\'body {\\ncolor: blue;\\n}\')\n-\n-        cookWhenChangingSettings(self.portal, bundle)\n-\n-        resp_js = subrequest(\n-            \'{}/++plone++static/foobar-compiled.js\'.format(\n-                self.portal.absolute_url()\n-            )\n-        )\n-        self.assertIn(b\'alert("Hi!");\\n\\nalert("Ho!");\', resp_js.getBody())\n-\n-        resp_css = subrequest(\n-            \'{}/++plone++static/foobar-compiled.css\'.format(\n-                self.portal.absolute_url()\n-            )\n-        )\n-        self.assertIn(b\'body {\\ncolor: blue;\\n}\', resp_css.getBody())\n-\n-    def test_cook_only_css(self):\n-        registry = getUtility(IRegistry)\n-        bundles = registry.collectionOfInterface(IBundleRegistry,\n-                                                 prefix="plone.bundles")\n-        bundle = bundles.add(\'foobar\')\n-        bundle.jscompilation = \'\'\n-        bundle.csscompilation = \'++plone++static/foobar-compiled.css\'\n-\n-        resources = registry.collectionOfInterface(IResourceRegistry,\n-                                                   prefix="plone.resources")\n-        resource = resources.add(\'foobar\')\n-\n-        resource.css = [\'++plone++static/foobar.min.css\']\n-        bundle.resources = [\'foobar\']\n-\n-        persistent_directory = getUtility(\n-            IResourceDirectory, name="persistent")\n-        if OVERRIDE_RESOURCE_DIRECTORY_NAME not in persistent_directory:\n-            persistent_directory.makeDirectory(\n-                OVERRIDE_RESOURCE_DIRECTORY_NAME)\n-        container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n-        container.makeDirectory(\'static\')\n-        directory = container[\'static\']\n-        directory.writeFile(\'foobar.min.css\', \'body {\\ncolor: red;\\n}\')\n-\n-        cookWhenChangingSettings(self.portal, bundle)\n-\n-        resp_css = subrequest(\n-            \'{}/++plone++static/foobar-compiled.css\'.format(\n-                self.portal.absolute_url()\n-            )\n-        )\n-        self.assertIn(b\'body {\\ncolor: red;\\n}\', resp_css.getBody())\n-\n-    def test_cooking_missing(self):\n-        registry = getUtility(IRegistry)\n-        bundles = registry.collectionOfInterface(IBundleRegistry,\n-                                                 prefix="plone.bundles")\n-        bundle = bundles.add(\'foobar\')\n-        bundle.jscompilation = \'++plone++static/foobar-compiled.js\'\n-        bundle.csscompilation = \'++plone++static/foobar-compiled.css\'\n-\n-        resources = registry.collectionOfInterface(IResourceRegistry,\n-                                                   prefix="plone.resources")\n-        resource = resources.add(\'foobar\')\n-\n-        resource.js = \'++plone++static/foobar.js\'\n-        bundle.resources = [\'foobar\']\n-\n-        bundle = Bundle(bundle)\n-\n-        cookWhenChangingSettings(self.portal, bundle)\n-        resp = subrequest(\n-            \'{}/++plone++static/foobar-compiled.js\'.format(\n-                self.portal.absolute_url()\n-            )\n-        )\n-        self.assertIn(b\'Could not find resource\', resp.getBody())\n-\n-    def test_cooking_missing_browserresource(self):\n-        registry = getUtility(IRegistry)\n-        registry[\'plone.resources.development\'] = True\n-        bundles = registry.collectionOfInterface(IBundleRegistry,\n-                                                 prefix="plone.bundles")\n-        bundle = bundles.add(\'barbar\')\n-        bundle.jscompilation = \'++resource++notfound/barbar-compiled.js\'\n-        bundle.csscompilation = \'++resource++notfound/barbar-compiled.css\'\n-        bundle.compile = False\n-        bundle.merge_with = \'default\'\n-\n-        bundle = Bundle(bundle)\n-\n-        # cookWhenChangingSettings(self.portal, bundle)\n-        scripts = ScriptsView(\n-            self.layer[\'portal\'],\n-            self.layer[\'request\'],\n-            None\n-        )\n-        scripts.update()\n-        results = scripts.scripts()\n-        # at least have jquery.min.js, config.js, require.js, etc.\n-        self.assertTrue(len(results)>2)\n-\n-    def test_error(self):\n-        registry = getUtility(IRegistry)\n-        bundles = registry.collectionOfInterface(IBundleRegistry,\n-                                                 prefix="plone.bundles")\n-        bundle = bundles.add(\'foobar\')\n-        bundle.jscompilation = \'++plone++static/foobar-compiled.js\'\n-        bundle.csscompilation = \'++plone++static/foobar-compiled.css\'\n-\n-        resources = registry.collectionOfInterface(IResourceRegistry,\n-                                                   prefix="plone.resources")\n-        resource = resources.add(\'foobar\')\n-\n-        resource.js = \'++plone++static/foobar.js\'\n-        bundle.resources = [\'foobar\']\n-\n-        persistent_directory = getUtility(\n-            IResourceDirectory, name="persistent")\n-        if OVERRIDE_RESOURCE_DIRECTORY_NAME not in persistent_directory:\n-            persistent_directory.makeDirectory(\n-                OVERRIDE_RESOURCE_DIRECTORY_NAME)\n-        container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n-        container.makeDirectory(\'static\')\n-        directory = container[\'static\']\n-        directory.writeFile(\'foobar.js\', \'sdlfk ldsf lksdjfl s\')\n-\n-        cookWhenChangingSettings(self.portal, bundle)\n-        resp = subrequest(\n-            \'{}/++plone++static/foobar-compiled.js\'.format(\n-                self.portal.absolute_url()\n-            )\n-        )\n-        self.assertIn(b\'error cooking\', resp.getBody())\n-\n-    def test_bundle_defer_async(self):\n+class TestScriptsViewlet(PloneTestCase.PloneTestCase):\n+    def _make_test_bundle(self):\n         registry = getUtility(IRegistry)\n \n         bundles = registry.collectionOfInterface(\n-            IBundleRegistry,\n-            prefix="plone.bundles"\n+            IBundleRegistry, prefix="plone.bundles"\n         )\n-        bundle = bundles.add(\'foobar\')\n-        bundle.name = \'foobar\'\n-        bundle.jscompilation = \'foobar.js\'\n-        bundle.csscompilation = \'foobar.css\'\n-        bundle.resources = [\'foobar\']\n+        bundle = bundles.add("foobar")\n+        bundle.name = "foobar"\n+        bundle.jscompilation = "http://foo.bar/foobar.js"\n+        bundle.csscompilation = "http://foo.bar/foobar.css"\n+        bundle.resources = ["foobar"]\n+        return bundle\n \n+    def test_bundle_defernot_asyncnot(self):\n+        bundle = self._make_test_bundle()\n         view = ScriptsView(self.app, self.app.REQUEST, None, None)\n-        view.get_cooked_bundles = lambda: [(\'foobar\', bundle)]\n-\n-        import Products.CMFPlone.resources.browser\n-        path = os.path.dirname(Products.CMFPlone.resources.browser.__file__)\n-        view.index = ViewPageTemplateFile(\'scripts.pt\', path)\n         view.update()\n+        rendered = view.render()\n+        self.assertTrue("async=" not in rendered)\n+        self.assertTrue("defer=" not in rendered)\n \n-        self.assertTrue(\'async="async"\' not in view.index(view))\n-        self.assertTrue(\'defer="defer"\' not in view.index(view))\n-\n+    def test_bundle_defernot_async(self):\n+        bundle = self._make_test_bundle()\n         bundle.load_async = True\n         bundle.load_defer = False\n-        self.assertTrue(\'async="async"\' in view.index(view))\n-        self.assertTrue(\'defer="defer"\' not in view.index(view))\n+        view = ScriptsView(self.app, self.app.REQUEST, None, None)\n+        view.update()\n+        rendered = view.render()\n \n+    def test_bundle_defer_asyncnot(self):\n+        bundle = self._make_test_bundle()\n         bundle.load_async = False\n         bundle.load_defer = True\n-        self.assertTrue(\'async="async"\' not in view.index(view))\n-        self.assertTrue(\'defer="defer"\' in view.index(view))\n+        view = ScriptsView(self.app, self.app.REQUEST, None, None)\n+        view.update()\n+        rendered = view.render()\n+        self.assertTrue("async=" not in rendered)\n+        self.assertTrue("defer=" in rendered)\n \n+    def test_bundle_defernot_async(self):\n+        bundle = self._make_test_bundle()\n         bundle.load_async = True\n-        bundle.load_defer = True\n-\n-        self.assertTrue(\'async="async"\' in view.index(view))\n-        self.assertTrue(\'defer="defer"\' in view.index(view))\n-\n-        bundle.load_async = False\n         bundle.load_defer = False\n-\n-        self.assertTrue(\'async="async"\' not in view.index(view))\n-        self.assertTrue(\'defer="defer"\' not in view.index(view))\n-\n-    def test_bundle_defer_async_production(self):\n-        """The default and logged-in production bundles should never be loaded\n-        async or defered.\n-        For bundles to be loaded async or defered, you need to empty merge_with\n-        """\n-        registry = getUtility(IRegistry)\n-\n-        bundles = registry.collectionOfInterface(\n-            IBundleRegistry,\n-            prefix="plone.bundles"\n-        )\n-        bundles[\'plone\'].load_async = False\n-        bundles[\'plone\'].load_defer = False\n-        bundles[\'plone-logged-in\'].load_async = False\n-        bundles[\'plone-logged-in\'].load_defer = False\n-\n+        request = self.app.REQUEST\n         view = ScriptsView(self.app, self.app.REQUEST, None, None)\n-\n-        import Products.CMFPlone.resources.browser\n-        path = os.path.dirname(Products.CMFPlone.resources.browser.__file__)\n-        view.index = ViewPageTemplateFile(\'scripts.pt\', path)\n         view.update()\n+        rendered = view.render()\n+        self.assertTrue("async=" in rendered)\n+        self.assertTrue("defer=" not in rendered)\n \n-        self.assertTrue(\'async="async"\' not in view.index(view))\n-        self.assertTrue(\'defer="defer"\' not in view.index(view))\n-\n-        bundles[\'plone\'].load_async = True\n-        bundles[\'plone\'].load_defer = True\n-        self.assertEqual(view.index(view).count(\'async="async"\'), 0)\n-        self.assertEqual(view.index(view).count(\'defer="defer"\'), 0)\n-\n-        bundles[\'plone\'].merge_with = \'\'\n-        bundles[\'plone\'].load_async = True\n-        bundles[\'plone\'].load_defer = True\n-        self.assertEqual(view.index(view).count(\'async="async"\'), 1)\n-        self.assertEqual(view.index(view).count(\'defer="defer"\'), 1)\n-\n-        bundles[\'plone\'].merge_with = \'\'\n-        bundles[\'plone\'].load_async = True\n-        bundles[\'plone\'].load_defer = True\n-        bundles[\'plone-logged-in\'].merge_with = \'\'\n-        bundles[\'plone-logged-in\'].load_async = True\n-        bundles[\'plone-logged-in\'].load_defer = True\n-        self.assertEqual(view.index(view).count(\'async="async"\'), 2)\n-        self.assertEqual(view.index(view).count(\'defer="defer"\'), 2)\n-\n-\n-class TestConfigJs(PloneTestCase.PloneTestCase):\n-\n-    def test_init_shim_works_with_function(self):\n-        config = self.portal.restrictedTraverse(\'config.js\')()\n-        self.assertTrue(\'init: function\' in config)\n-\n-\n-class TestControlPanel(PloneTestCase.PloneTestCase):\n-\n-    def test_save_override_file(self):\n-        req = self.layer[\'request\']\n-        req.environ[\'PATH_INFO\'] = \'++plone++foo/bar.css\'\n-        mng = OverrideFolderManager(self.portal)\n-        mng.save_file(\'foo/bar.css\', \'foobar\')\n-        value = self.portal.restrictedTraverse(\'++plone++foo/bar.css\')\n-        self.assertEqual(value.data, b\'foobar\')\n-\n-    def test_override_rewrite_links(self):\n-        req = self.layer[\'request\']\n-        req.environ[\'PATH_INFO\'] = \'++plone++foo/bar.css\'\n-        mng = OverrideFolderManager(self.portal)\n-        css = """\n-.foo {{\n-    background-image: url("{site_url}/foobar.css");\n-}}\n-.bar {{\n-    background-image: url("{site_url}/++plone++foo/bar/foobar.css");\n-}}\n-.foobar {{\n-    background-image: url("{site_url}/foo/bar/foobar.css");\n-}}""".format(site_url=self.portal.absolute_url())\n-        mng.save_file(\'foo/bar.css\', css)\n-        value = self.portal.restrictedTraverse(\'++plone++foo/bar.css\')\n-        match = b"""\n-.foo {\n-    background-image: url("../foobar.css");\n-}\n-.bar {\n-    background-image: url("bar/foobar.css");\n-}\n-.foobar {\n-    background-image: url("../foo/bar/foobar.css");\n-}"""\n-        self.assertEqual(value.data, match)\n-\n-    def test_get_require_js_config_uses_stub_modules(self):\n-        view = ResourceRegistryControlPanelView(\n-            self.portal, self.layer[\'request\'])\n-        self.layer[\'request\'].form[\'bundle\'] = \'plone-logged-in\'\n-        config = json.loads(view.js_build_config())\n-        self.assertEqual(config[\'paths\'][\'jquery\'], \'empty:\')\n-\n-\n-class DummyResource:\n-    def __init__(self, name):\n-        self.js = name\n-        self.css = [name, ]\n-\n-\n-class DummyBundle:\n-    def __init__(self, name, enabled=True):\n-        self.__prefix__ = \'test/\' + name\n-        self.compile = True\n-        self.conditionalcomment = None\n-        self.csscompilation = \'++resource++\' + name + \'.css\'\n-        self.depends = None\n-        self.enabled = enabled\n-        self.expression = None\n-        self.jscompilation = \'++resource++\' + name + \'.js\'\n-        self.last_compilation = \'123\'\n-        self.resources = []\n-\n-\n-class TestScriptsViewlet(PloneTestCase.PloneTestCase):\n+    def test_bundle_defer_async(self):\n+        bundle = self._make_test_bundle()\n+        bundle.load_async = True\n+        bundle.load_defer = True\n+        view = ScriptsView(self.app, self.app.REQUEST, None, None)\n+        view.update()\n+        rendered = view.render()\n+        self.assertTrue("async=" in rendered)\n+        self.assertTrue("defer=" in rendered)\n \n     def test_scripts_viewlet(self):\n-        scripts = ScriptsView(\n-            self.layer[\'portal\'],\n-            self.layer[\'request\'],\n-            None\n-        )\n+        scripts = ScriptsView(self.layer["portal"], self.layer["request"], None)\n         scripts.update()\n-        results = scripts.scripts()\n-        self.assertEqual(results[0][\'bundle\'], \'production\')\n-        self.assertTrue(results[0][\'src\'].startswith(\n-            \'http://nohost/plone/++plone++production/++unique++\'))\n-        self.assertTrue(results[0][\'src\'].endswith(\'/default.js\'))\n-        self.assertEqual(results[1][\'bundle\'], \'production\')\n-        self.assertTrue(results[1][\'src\'].startswith(\n-            \'http://nohost/plone/++plone++production/++unique++\'))\n-        self.assertTrue(results[1][\'src\'].endswith(\'/logged-in.js\'))\n-        self.assertEqual(len(results), 2)\n+        results = scripts.render()\n+        self.assertIn("++plone++static/bundle-jquery/jquery.min.js", results)\n+        self.assertIn(\n+            "++plone++static/bundle-bootstrap/js/bootstrap.bundle.min.js", results\n+        )\n+        self.assertIn("++plone++static/bundle-plone/bundle.min.js", results)\n+        self.assertIn("http://nohost/plone/++webresource++", results)\n \n     def test_scripts_viewlet_anonymous(self):\n         logout()\n-        scripts = ScriptsView(\n-            self.layer[\'portal\'],\n-            self.layer[\'request\'],\n-            None\n-        )\n+        scripts = ScriptsView(self.layer["portal"], self.layer["request"], None)\n         scripts.update()\n-        results = scripts.scripts()\n-        self.assertEqual(results[0][\'bundle\'], \'production\')\n-        self.assertTrue(results[0][\'src\'].startswith(\n-            \'http://nohost/plone/++plone++production/++unique++\'))\n-        self.assertTrue(results[0][\'src\'].endswith(\'/default.js\'))\n-        self.assertEqual(len(results), 1)\n-\n-    @mock.patch.object(\n-        ScriptsView,\n-        \'get_resources\',\n-        new=lambda self: {\'foo\': DummyResource(\'++resource++foo.js\')}\n-    )\n-    def test_request_resources(self):\n-        add_resource_on_request(self.layer[\'request\'], \'foo\')\n-        scripts = ScriptsView(\n-            self.layer[\'portal\'],\n-            self.layer[\'request\'],\n-            None\n+        results = scripts.render()\n+        self.assertIn("++plone++static/bundle-jquery/jquery.min.js", results)\n+        self.assertIn(\n+            "++plone++static/bundle-bootstrap/js/bootstrap.bundle.min.js", results\n         )\n-        scripts.update()\n-        results = scripts.scripts()\n-        self.assertEqual(\n-            results[-1], {\'src\': \'http://nohost/plone/++resource++foo.js\',\n-                          \'conditionalcomment\': \'\',\n-                          \'resetrjs\': False,\n-                          \'bundle\': \'none\'})\n-\n-    def test_request_resources_not_add_same_twice(self):\n-        req = self.layer[\'request\']\n-        add_resource_on_request(req, \'foo\')\n-        add_resource_on_request(req, \'foo\')\n-\n-        self.assertEqual(len(req.enabled_resources), 1)\n+        self.assertIn("++plone++static/bundle-plone/bundle.min.js", results)\n+        self.assertIn("http://nohost/plone/++webresource++", results)\n \n     def test_request_bundles_not_add_same_twice(self):\n-        req = self.layer[\'request\']\n-        add_bundle_on_request(req, \'foo\')\n-        add_bundle_on_request(req, \'foo\')\n+        req = self.layer["request"]\n+        add_bundle_on_request(req, "foo")\n+        add_bundle_on_request(req, "foo")\n \n         self.assertEqual(len(req.enabled_bundles), 1)\n \n-    @mock.patch.object(\n-        ScriptsView,\n-        \'get_bundles\',\n-        new=lambda self: {\'foo\': Bundle(DummyBundle(\'foo\', enabled=False))}\n-    )\n+    def test_disabled_bundle_not_rendered(self):\n+        # request\n+        req = self.layer["request"]\n+\n+        # create a subrequest.\n+        subreq = req.clone()\n+        subreq["PARENT_REQUEST"] = req\n+\n+        scripts = ScriptsView(self.layer["portal"], subreq, None)\n+\n+        # add some bundle to test with\n+        bundle = self._make_test_bundle()\n+        bundle.enabled = False\n+        scripts.update()\n+        result = scripts.render()\n+        self.assertNotIn("http://foo.bar/foobar.js", result)\n+\n     def test_add_bundle_on_request_with_subrequest(self):\n-        req = self.layer[\'request\']\n+        # request\n+        req = self.layer["request"]\n \n         # create a subrequest.\n         subreq = req.clone()\n-        subreq[\'PARENT_REQUEST\'] = req\n+        subreq["PARENT_REQUEST"] = req\n \n         # add a bundle via the main request\n-        add_bundle_on_request(req, \'foo\')\n-\n-        scripts = ScriptsView(self.layer[\'portal\'], subreq, None)\n-\n-        # Send resource registry in development mode\n-        # Via a fake registry to allow accessing like this:\n-        # self.registry.records[\'plone.resources.development\'].value\n-        scripts.registry = type(\n-            \'reg\',\n-            (object, ),\n-            {\'records\': {\n-                \'plone.resources.development\': type(\n-                    \'val\',\n-                    (object, ),\n-                    {\'value\': True}\n-                )()\n-            }}\n-        )()\n-        self.assertTrue(scripts.development)\n+        add_bundle_on_request(req, "foobar")\n+\n+        scripts = ScriptsView(self.layer["portal"], subreq, None)\n \n+        # add some bundle to test with\n+        bundle = self._make_test_bundle()\n+        bundle.enabled = False\n         scripts.update()\n-        result = scripts.scripts()[-1]\n-        self.assertEqual(\n-            result[\'src\'],\n-            \'http://nohost/plone/++resource++foo.js?version=123\'\n-        )\n-        self.assertEqual(\n-             result[\'conditionalcomment\'],\n-             None\n-        )\n-        self.assertEqual(\n-            result[\'bundle\'],\n-            \'foo\',\n-        )\n-        self.assertEqual(\n-            result[\'async\'],\n-            None\n-        )\n-        self.assertEqual(\n-            result[\'defer\'],\n-            None\n-        )\n+        result = scripts.render()\n+        self.assertIn("http://foo.bar/foobar.js", result)\n \n-    @mock.patch.object(\n-        ScriptsView,\n-        \'get_bundles\',\n-        new=lambda self: {\'foo\': Bundle(DummyBundle(\'foo\', enabled=True))}\n-    )\n     def test_remove_bundle_on_request_with_subrequest(self):\n-        req = self.layer[\'request\']\n+        # request\n+        req = self.layer["request"]\n \n         # create a subrequest.\n         subreq = req.clone()\n-        subreq[\'PARENT_REQUEST\'] = req\n-\n-        # remove the enabled \'foo\' bundle\n-        remove_bundle_on_request(req, \'foo\')\n-\n-        scripts = ScriptsView(self.layer[\'portal\'], subreq, None)\n-\n-        # Send resource registry in development mode\n-        # Via a fake registry to allow accessing like this:\n-        # self.registry.records[\'plone.resources.development\'].value\n-        scripts.registry = type(\n-            \'reg\',\n-            (object, ),\n-            {\'records\': {\n-                \'plone.resources.development\': type(\n-                    \'val\',\n-                    (object, ),\n-                    {\'value\': True}\n-                )()\n-            }}\n-        )()\n-        self.assertTrue(scripts.development)\n+        subreq["PARENT_REQUEST"] = req\n \n+        # add a bundle via the main request\n+        add_bundle_on_request(req, "foobar")\n+\n+        scripts = ScriptsView(self.layer["portal"], subreq, None)\n+\n+        # add some bundle to test with\n+        bundle = self._make_test_bundle()\n+        bundle.enabled = True\n         scripts.update()\n-        results = scripts.scripts()\n-        self.assertEqual(\n-            [i for i in results if \'foo\' in i[\'src\']],\n-            []\n-        )\n+        result = scripts.render()\n+        self.assertNotIn("http://test.foo/test.css", result)\n+\n \n-    @mock.patch.object(\n-        ScriptsView,\n-        \'get_resources\',\n-        new=lambda self: {\'foo\': DummyResource(\'++resource++foo.js\')}\n-    )\n-    @mock.patch.object(\n-        StylesView,\n-        \'get_resources\',\n-        new=lambda self: {\'foo\': DummyResource(\'++resource++foo.css\')}\n-    )\n-    def test_add_resource_on_request_with_subrequest(self):\n-        """Check, if a resource added at a main request is picked up from a\n-        subrequest for creating the header scripts section.\n-        """\n-        req = self.layer[\'request\']\n+class TestStylesViewlet(PloneTestCase.PloneTestCase):\n+    def test_styles_viewlet(self):\n+        styles = StylesView(self.layer["portal"], self.layer["request"], None)\n+        styles.update()\n+        results = styles.render()\n+        self.assertIn("++theme++barceloneta/css/barceloneta.min.css", results)\n+        self.assertIn("http://nohost/plone/++webresource++", results)\n+\n+    def test_styles_viewlet_anonymous(self):\n+        logout()\n+        styles = StylesView(self.layer["portal"], self.layer["request"], None)\n+        styles.update()\n+        results = styles.render()\n+        self.assertIn("++theme++barceloneta/css/barceloneta.min.css", results)\n+        self.assertIn("http://nohost/plone/++webresource++", results)\n+\n+    def test_request_bundles_not_add_same_twice(self):\n+        req = self.layer["request"]\n+        add_bundle_on_request(req, "foo")\n+        add_bundle_on_request(req, "foo")\n+        self.assertEqual(len(req.enabled_bundles), 1)\n+\n+    def test_add_bundle_on_request_with_subrequest(self):\n+        # request\n+        req = self.layer["request"]\n \n         # create a subrequest.\n         subreq = req.clone()\n-        subreq[\'PARENT_REQUEST\'] = req\n+        subreq["PARENT_REQUEST"] = req\n+\n+        # add a bundle via the main request\n+        add_bundle_on_request(req, "testbundle")\n \n-        # add a resource to main request\n-        add_resource_on_request(req, \'foo\')\n+        scripts = ScriptsView(self.layer["portal"], subreq, None)\n+\n+        # add some bundle to test with\n+        registry = getUtility(IRegistry)\n+        data = {\n+            "jscompilation": ("http://test.foo/test.min.js", regfield.TextLine()),\n+            "csscompilation": ("http://test.foo/test.css", regfield.TextLine()),\n+            "expression": ("", regfield.TextLine()),\n+            "enabled": (False, regfield.Bool()),\n+            "depends": ("", regfield.TextLine()),\n+            "load_async": (True, regfield.Bool()),\n+            "load_defer": (True, regfield.Bool()),\n+        }\n+        for key, regdef in data.items():\n+            record = Record(regdef[1])\n+            record.value = regdef[0]\n+            registry.records[f"plone.bundles/testbundle.{key}"] = record\n \n-        scripts = ScriptsView(self.layer[\'portal\'], subreq, None)\n         scripts.update()\n-        results = scripts.scripts()\n-        self.assertEqual(\n-            results[-1],\n-            {\n-                \'src\': \'http://nohost/plone/++resource++foo.js\',\n-                \'conditionalcomment\': \'\',\n-                \'resetrjs\': False,\n-                \'bundle\': \'none\',\n-            }\n-        )\n+        result = scripts.render()\n+        self.assertIn("http://test.foo/test.min.js", result)\n \n-        styles = StylesView(self.layer[\'portal\'], subreq, None)\n-        styles.update()\n-        results = styles.styles()\n-        self.assertListEqual(\n-            list(filter(lambda it: \'foo\' in it[\'src\'], results)),\n-            [{\n-                \'src\': \'http://nohost/plone/++resource++foo.css\',\n-                \'conditionalcomment\': \'\',\n-                \'rel\': \'stylesheet\',\n-                \'bundle\': \'none\',\n-            }]\n-        )\n+    def test_remove_bundle_on_request_with_subrequest(self):\n+        # request\n+        req = self.layer["request"]\n+\n+        # create a subrequest.\n+        subreq = req.clone()\n+        subreq["PARENT_REQUEST"] = req\n+\n+        # remove a bundle via the main request\n+        remove_bundle_on_request(req, "testbundle")\n+\n+        scripts = ScriptsView(self.layer["portal"], subreq, None)\n+\n+        # add some bundle to test with\n+        registry = getUtility(IRegistry)\n+        data = {\n+            "jscompilation": ("http://test.foo/test.min.js", regfield.TextLine()),\n+            "csscompilation": ("http://test.foo/test.css", regfield.TextLine()),\n+            "expression": ("", regfield.TextLine()),\n+            "enabled": (True, regfield.Bool()),\n+            "depends": ("", regfield.TextLine()),\n+            "load_async": (True, regfield.Bool()),\n+            "load_defer": (True, regfield.Bool()),\n+        }\n+        for key, regdef in data.items():\n+            record = Record(regdef[1])\n+            record.value = regdef[0]\n+            registry.records[f"plone.bundles/testbundle.{key}"] = record\n+\n+        scripts.update()\n+        result = scripts.render()\n+        self.assertNotIn("http://test.foo/test.min.js", result)\ndiff --git a/Products/CMFPlone/tests/testSecurity.py b/Products/CMFPlone/tests/testSecurity.py\nindex ee2fa5c467..5286d8ee2a 100644\n--- a/Products/CMFPlone/tests/testSecurity.py\n+++ b/Products/CMFPlone/tests/testSecurity.py\n@@ -159,7 +159,8 @@ def get_admin_browser(self):\n         return browser\n \n     def test_plonetool(self):\n-        base_url = self.layer["portal"].absolute_url() + "/plone_utils"\n+        portal_url = self.layer["portal"].absolute_url()\n+        base_url = portal_url + "/plone_utils"\n         browser = self.get_admin_browser()\n         method_names = (\n             "addPortalMessage",\n@@ -173,6 +174,9 @@ def test_plonetool(self):\n             "normalizeString",\n             "getEmptyTitle",\n         )\n+        # First open a url that actually works.\n+        # This avoids an error with zope.component 5+.\n+        browser.open(portal_url)\n         for method_name in method_names:\n             with self.assertRaises(NotFound):\n                 browser.open(base_url + "/" + method_name)\n@@ -226,6 +230,9 @@ def test_hotfix_20160419(self):\n             "propertyLabel",\n             "propertyDescription",\n         )\n+        # First open a url that actually works.\n+        # This avoids an error with zope.component 5+.\n+        browser.open(portal_url)\n         for method_name in method_names:\n             with self.assertRaises(NotFound):\n                 browser.open(portal_url + "/" + method_name)\ndiff --git a/Products/CMFPlone/tests/test_icons.py b/Products/CMFPlone/tests/test_icons.py\nindex 4832c8b0db..9b720c546f 100644\n--- a/Products/CMFPlone/tests/test_icons.py\n+++ b/Products/CMFPlone/tests/test_icons.py\n@@ -36,4 +36,39 @@ def test_icons_url(self):\n     def test_icons_tag(self):\n         page = self.app\n         view = page.restrictedTraverse(\'@@iconresolver\')\n-        self.assertIn(b\'bi bi-bug\', view.tag(\'bug\'))\n\\ No newline at end of file\n+        self.assertIn(b\'bi bi-bug\', view.tag(\'bug\'))\n+\n+\n+\n+class IconTraverserTest(unittest.TestCase):\n+    """Test the icon traverser or PloneBundlesTraverser."""\n+\n+    layer = PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n+\n+    def setUp(self):\n+        self.portal = self.layer[\'portal\']\n+        self.request = self.layer[\'request\']\n+\n+    def test_default_icon(self):\n+        self.portal.restrictedTraverse("++plone++icons/plone.svg")\n+\n+    def test_bootstrap_icon(self):\n+        self.portal.restrictedTraverse("++plone++bootstrap-icons/clock.svg")\n+\n+    def test_bootstrap_icon_with_path_info(self):\n+        """Get bootstrap icon while request has a PATH_INFO.\n+\n+        When the request has PATH_INFO, which it normally has,\n+        the code originally ignored the remaining name (clock.svg)\n+        and tried to traverse based on this PATH_INFO.\n+        This works fine when the url of the request is for an icon.\n+        But when the url is for a normal page which tries to load an icon\n+        in the template, it fails.\n+\n+        I don\'t know why most of the time it goes right.\n+        But I have occasionally seen failures.\n+        And it happens at least in plone.i18n tests.\n+        https://github.com/plone/plone.i18n/pull/41\n+        """\n+        self.request.environ["PATH_INFO"] = "plone"\n+        self.portal.restrictedTraverse("++plone++bootstrap-icons/clock.svg")\ndiff --git a/Products/CMFPlone/tests/test_metabundles.py b/Products/CMFPlone/tests/test_metabundles.py\ndeleted file mode 100644\nindex 4a5c954fca..0000000000\n--- a/Products/CMFPlone/tests/test_metabundles.py\n+++ /dev/null\n@@ -1,144 +0,0 @@\n-from plone.resource.interfaces import IResourceDirectory\n-from plone.base.interfaces.resources import (\n-    OVERRIDE_RESOURCE_DIRECTORY_NAME,\n-)\n-from zope.component import getUtility\n-\n-from Products.CMFPlone.resources.browser.combine import (\n-    PRODUCTION_RESOURCE_DIRECTORY,\n-    combine_bundles,\n-)\n-from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n-from Products.GenericSetup.tests import common\n-\n-import unittest\n-\n-\n-class DummyImportContext(common.DummyImportContext):\n-    # Copied from plone.app.registry tests.\n-    # This expands the context with directories.\n-\n-    _directories = {}\n-\n-    def listDirectory(self, path):\n-        return self._directories.get(path, [])\n-\n-    def isDirectory(self, path):\n-        return path in self._directories\n-\n-\n-class ProductsCMFPloneSetupTest(unittest.TestCase):\n-\n-    layer = PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n-\n-    def setUp(self):\n-        self.portal = self.layer[\'portal\']\n-        combine_bundles(self.portal)\n-        persistent_directory = getUtility(\n-            IResourceDirectory, name="persistent")\n-        container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n-        self.production_folder = container[PRODUCTION_RESOURCE_DIRECTORY]\n-\n-    def test_production_directory(self):\n-        self.assertEqual(\n-            self.production_folder.listDirectory(),\n-            [\n-                \'default.css\',\n-                \'default.js\',\n-                \'logged-in.css\',\n-                \'logged-in.js\',\n-                \'timestamp.txt\'\n-            ]\n-        )\n-\n-    def test_default_js_bundle(self):\n-        self.assertIn(\n-            b"jQuery",\n-            self.production_folder.readFile(\'default.js\')\n-        )\n-\n-    def test_overrides(self):\n-        persistent_directory = getUtility(\n-            IResourceDirectory, name="persistent")\n-        container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n-        container.makeDirectory(\'static\')\n-        static = container[\'static\']\n-        static.writeFile(\'plone-legacy-compiled.js\', \'alert("Overrided legacy!");\')\n-        combine_bundles(self.portal)\n-        self.assertIn(\n-            b\'alert("Overrided legacy!");\',\n-            self.production_folder.readFile(\'default.js\')\n-        )\n-\n-    def test_import(self):\n-        # If IBundleRegistry is in registry.xml, the combine-bundles import step\n-        # will call combine_bundles.\n-        from Products.CMFPlone.resources.exportimport.bundles import combine\n-        # from Products.CMFPlone.resources.browser.combine import get_override_directory\n-        # from Products.CMFPlone.resources.browser.combine import PRODUCTION_RESOURCE_DIRECTORY\n-\n-        # Prepare some registry xml files with or without the key IBundleRegistry.\n-        xml_with = b\'<registry>with IBundleRegistry</registry>\'\n-        xml_without = b\'<registry>without bundle registry</registry>\'\n-        xml_without2 = b\'<registry>without bundle registry</registry>\'\n-        context = DummyImportContext(self.portal, purge=False)\n-\n-        def get_timestamp():\n-            # If combine_bundles is run, a timestamp is updated.\n-            return self.production_folder.readFile(\'timestamp.txt\')\n-\n-        ts1 = get_timestamp()\n-        self.assertTrue(ts1)\n-\n-        # call the import step on a file without bundles\n-        context._files = {\'registry.xml\': xml_without}\n-        combine(context)\n-        ts2 = get_timestamp()\n-        self.assertEqual(ts1, ts2)\n-\n-        # call the import step on a file with bundles\n-        context._files = {\'registry.xml\': xml_with}\n-        combine(context)\n-        ts3 = get_timestamp()\n-        self.assertLess(ts2, ts3)\n-\n-        # call the import step on a file without bundles\n-        context._files = {\'registry.xml\': xml_without2}\n-        combine(context)\n-        ts4 = get_timestamp()\n-        self.assertEqual(ts3, ts4)\n-\n-        # Since Plone 5.1 the registry xml can also be a directory.\n-        # Set one file with bundles.\n-        context._files = {\n-            \'registry.xml\': xml_without,\n-            \'registry/foo2.xml\': xml_with,\n-            \'registry/foo3.xml\': xml_without2,\n-        }\n-        context._directories = {\n-            \'registry\': [\n-                \'foo2.xml\',\n-                \'foo3.xml\',\n-            ]\n-        }\n-        combine(context)\n-        ts10 = get_timestamp()\n-        self.assertLess(ts4, ts10)\n-\n-        # The registry.xml file itself may be missing.\n-        context._files = {\n-            \'registry/foo2.xml\': xml_with,\n-            \'registry/foo3.xml\': xml_without2,\n-        }\n-        combine(context)\n-        ts11 = get_timestamp()\n-        self.assertLess(ts10, ts11)\n-\n-        # Now without any bundle info.\n-        context._files = {\n-            \'registry/foo2.xml\': xml_without,\n-            \'registry/foo3.xml\': xml_without2,\n-        }\n-        combine(context)\n-        ts12 = get_timestamp()\n-        self.assertEqual(ts11, ts12)\ndiff --git a/Products/CMFPlone/tests/test_safe_formatter.py b/Products/CMFPlone/tests/test_safe_formatter.py\nindex 25a6e687e3..65076d1c8a 100644\n--- a/Products/CMFPlone/tests/test_safe_formatter.py\n+++ b/Products/CMFPlone/tests/test_safe_formatter.py\n@@ -324,28 +324,6 @@ def test_standard_error_message(self):\n         # We expect a json string back.\n         self.assertTrue(response.body, \'{"error_type": "None"}\')\n \n-    def test_resource_registry_vector(self):\n-        for vector in (\'less-variables.js\', \'less-modify.js\'):\n-            src = \'\'\'\n-class ctx:\n-  def format(self, *args, **kwargs):\n-    self.foo=context\n-    return "foo"\n-\n-context.portal_registry[\'plone.lessvariables\'][\'foo\'] = ctx()\n-context.portal_registry[\'plone.lessvariables\'][\'bar\'] = "{foo.foo.__class__}"\n-js = context.restrictedTraverse("%s")\n-return js()\n-\'\'\' % vector\n-            from Products.PythonScripts.PythonScript import PythonScript\n-            script = PythonScript(\'evil\')\n-            script._filepath = \'evil\'\n-            script.write(src)\n-            self.portal.evil = script\n-            output = self.publish(\'/plone/evil\')\n-            self.assertFalse(\n-                b\'Products.CMFPlone.Portal.PloneSite\' in output.body)\n-\n     def test_cook_zope2_page_templates_bad_key_str(self):\n         from Products.PageTemplates.ZopePageTemplate import ZopePageTemplate\n         pt = ZopePageTemplate(\'mytemplate\', BAD_KEY_STR)\ndiff --git a/Products/CMFPlone/traversal.py b/Products/CMFPlone/traversal.py\nindex b8580b5864..8b56473dc4 100644\n--- a/Products/CMFPlone/traversal.py\n+++ b/Products/CMFPlone/traversal.py\n@@ -33,7 +33,14 @@ def traverse(self, name, remaining):\n             return super().traverse(name, remaining)\n \n         resource_path = req.environ[\'PATH_INFO\'].split(\'++plone++\')[-1]\n-        resource_name, resource_filepath = resource_path.split(\'/\', 1)\n+        try:\n+            resource_name, resource_filepath = resource_path.split(\'/\', 1)\n+        except ValueError:\n+            # Not the path info / url that we expected.\n+            # So the request is not for a resource,\n+            # but for a page that traverses to a resource.\n+            # The standard resource traverser can handle this.\n+            return super().traverse(name, remaining)\n \n         # If we have additional traversers in the path we should not use them\n         # in the file lookup\ndiff --git a/README.rst b/README.rst\nindex 4638a5788f..85245e5725 100644\n--- a/README.rst\n+++ b/README.rst\n@@ -3,7 +3,7 @@ About Plone\n \n Plone is a mature, secure and user-friendly Content Management System (CMS).\n \n-Plone - and the Open Source community behind it - aggregates more than 15 years experience in content management.\n+Plone - and the Open Source community behind it - aggregates more than 20 years experience in content management.\n It offers all major features expected by a modern CMS out-of-the-box.\n \n Lots of customizations can be made trough-the-web, such as creating content types, themes, workflows and much more.\n@@ -90,7 +90,6 @@ files, etc.\n \n Official Resources\n ------------------\n-* `plone.com <https://plone.com/>`_ - Official website for decision makers and evaluators.\n * `plone.org <https://plone.org/>`_ - Official website for developers and community.\n * `Plone support <https://plone.org/support>`_ - Where to find help.\n * `community.plone.org <https://community.plone.org/>`_ - Official community forum, the best place to get help.\n@@ -98,5 +97,5 @@ Official Resources\n * `training.plone.org <https://training.plone.org/>`_ - Training classes for developers/integrators/users/designers.\n * `plone.api <https://docs.plone.org/develop/plone.api/docs/index.html>`_ - Documentation for plone.api.\n * `plone.restapi <https://plonerestapi.readthedocs.io/en/latest/>`_ - Documentation for plone.restapi.\n-* `official Gitter chat <https://gitter.im/plone/public>`_ - monitored.\n+* `official Discord chat <https://discord.gg/w8e5WCAKGs>`_ - Join link.\n \ndiff --git a/news/282.bugfix b/news/282.bugfix\nnew file mode 100644\nindex 0000000000..10c579d2dc\n--- /dev/null\n+++ b/news/282.bugfix\n@@ -0,0 +1 @@\n+Handle /favicon.ico accesses on Plone sites.\ndiff --git a/news/3031.bugfix b/news/3031.bugfix\nnew file mode 100644\nindex 0000000000..a856dc7521\n--- /dev/null\n+++ b/news/3031.bugfix\n@@ -0,0 +1,5 @@\n+Remove Configlets, Change Member Password and Member Prefs not needed in Overview Controlpanel\n+both Views available via User Control Panel\n+\n+the deleton of "Change Member Password" Configlet remove also the issue #3031\n+[1letter]\n\\ No newline at end of file\ndiff --git a/news/3241.bugfix b/news/3241.bugfix\ndeleted file mode 100644\nindex 16523e6a3e..0000000000\n--- a/news/3241.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Cleanup Error Log Form after Review\n-[jmevissen]\ndiff --git a/news/3247-2.breaking b/news/3247-2.breaking\nnew file mode 100644\nindex 0000000000..a7b2e6edad\n--- /dev/null\n+++ b/news/3247-2.breaking\n@@ -0,0 +1,2 @@\n+Remove dependency on mockup. Mockup is now a npm package only and as such a dependency of plone.staticresources.\n+[thet]\ndiff --git a/news/3247.breaking b/news/3247.breaking\nnew file mode 100644\nindex 0000000000..b453b200ff\n--- /dev/null\n+++ b/news/3247.breaking\n@@ -0,0 +1,6 @@\n+PLIP 3211 - Remove RequireJS.\n+PLIP 3211 - Remove default resource jQuery. It is added to the global namespace via the bundle.\n+PLIP 3211 - Remove support for conditional comments in script and style tags.\n+            It\'s not supported since IE10.\n+            See: https://en.wikipedia.org/wiki/Conditional_comment\n+[MrTango, thet]\ndiff --git a/news/3247.bugfix b/news/3247.bugfix\nnew file mode 100644\nindex 0000000000..a40ff15c33\n--- /dev/null\n+++ b/news/3247.bugfix\n@@ -0,0 +1 @@\n+Fix TinyMCE configuration JSON serialization and cast entity_encoding to a list.\ndiff --git a/news/3279.feature b/news/3279.feature\nnew file mode 100644\nindex 0000000000..83482e9526\n--- /dev/null\n+++ b/news/3279.feature\n@@ -0,0 +1,2 @@\n+PLIP #3279: Implement modern images scales. Add huge (1600px), great (1200px), larger (1000px), teaser (600px). Amend preview and mini (remove height constraint).\n+[tisto]\n\\ No newline at end of file\ndiff --git a/news/3290.bugfix b/news/3290.bugfix\nnew file mode 100644\nindex 0000000000..4c7d673144\n--- /dev/null\n+++ b/news/3290.bugfix\n@@ -0,0 +1,2 @@\n+Make author template barceloneta/bs5 ready. Add some CSS classes to Markup. \n+[1letter]\n\\ No newline at end of file\ndiff --git a/news/3305.bugfix b/news/3305.bugfix\ndeleted file mode 100644\nindex 546804c038..0000000000\n--- a/news/3305.bugfix\n+++ /dev/null\n@@ -1,4 +0,0 @@\n-Removed management_page_charset support from usergroup-groupdetails page.\n-This is related to deprecated unicode property types, like ustring.\n-Part of `issue 3305 <https://github.com/plone/Products.CMFPlone/issues/3305>`_.\n-[maurits]\ndiff --git a/news/3322.bugfix b/news/3322.bugfix\nnew file mode 100644\nindex 0000000000..80d2748229\n--- /dev/null\n+++ b/news/3322.bugfix\n@@ -0,0 +1,4 @@\n+Fix broken link in the RelationsInspectControlpanel\n+prepend absolute portal url to links\n+add RelationsControlPanelFunctionalTest\n+[1letter]\n\\ No newline at end of file\ndiff --git a/news/3325.breaking b/news/3325.breaking\nnew file mode 100644\nindex 0000000000..a34eda5b42\n--- /dev/null\n+++ b/news/3325.breaking\n@@ -0,0 +1,14 @@\n+New resource registry to simplify CSS/JS registration.\n+\n+- Completely (almost) rewritten ResourceRegistry based on the "webresource" project.\n+- removed >1600LOC.\n+- Sane dependency resolution using "webresource".\n+- Only "bundles" are registered - support of "resources" and "bundle resources" is removed.\n+- Some of the old bundle registry properties are deprecated and unused.\n+- Removed TTW compilation of bundles via r.js and less.js.\n+- Property `merge_with` is no longer needed in HTTP/2 times and merging here unsupported.\n+- Unique key for delivery is based on hash of bundle file, `last_compilation` property is deprecated.\n+- A new traverser ensures uniqueness.\n+- Other related bundle properties are also deprecated.\n+- Comes with new, server side generated control panel.\n+[jensens]\ndiff --git a/news/3351.feature b/news/3351.feature\nnew file mode 100644\nindex 0000000000..1c863a80fa\n--- /dev/null\n+++ b/news/3351.feature\n@@ -0,0 +1 @@\n+Add TinyMCE template plugin to the plugins vocabulary [MrTango]\n\\ No newline at end of file\ndiff --git a/news/3374.bugfix b/news/3374.bugfix\nnew file mode 100644\nindex 0000000000..3324da5bf3\n--- /dev/null\n+++ b/news/3374.bugfix\n@@ -0,0 +1,2 @@\n+Fix missing closing BODY tag in insufficient_privileges.pt\n+[1letter]\n\\ No newline at end of file\ndiff --git a/news/3376.feature b/news/3376.feature\ndeleted file mode 100644\nindex ff91d31ae5..0000000000\n--- a/news/3376.feature\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Allow ``from warnings import warn`` and ``warn("message", DeprecationWarning)`` TTW, like in Python Scripts.\n-[jensens]\n\\ No newline at end of file\ndiff --git a/news/3377.feature b/news/3377.feature\ndeleted file mode 100644\nindex 2e5c4ce5fe..0000000000\n--- a/news/3377.feature\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Customize breadcrumbs hook ``customize_entry`` for subclasses (like already in global navigation).\n-[jensens]\n\\ No newline at end of file\ndiff --git a/news/3393.enhancement b/news/3393.enhancement\ndeleted file mode 100644\nindex de652bdf6c..0000000000\n--- a/news/3393.enhancement\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-Update Controlpanel Error Log Form Layout\n-Rename ControlPanel Error Log Form View prefs_error_log_form -> error-log-form\n-[jmevissen]\ndiff --git a/news/3416.bugfix b/news/3416.bugfix\nnew file mode 100644\nindex 0000000000..4cadd00894\n--- /dev/null\n+++ b/news/3416.bugfix\n@@ -0,0 +1,2 @@\n+Reorganize viewlets after removing the plone.header viewlet in plone.app.layout\n+[erral]\ndiff --git a/news/3422.bugfix b/news/3422.bugfix\nnew file mode 100644\nindex 0000000000..ac5f6a80ef\n--- /dev/null\n+++ b/news/3422.bugfix\n@@ -0,0 +1,2 @@\n+Fix `login-help` validation\n+[petschki]\ndiff --git a/news/3430.bugfix b/news/3430.bugfix\nnew file mode 100644\nindex 0000000000..d2039c79f2\n--- /dev/null\n+++ b/news/3430.bugfix\n@@ -0,0 +1,2 @@\n+Fix info message (char left over) in quickinstaller template\n+[laulaz]\ndiff --git a/news/3440.feature b/news/3440.feature\nnew file mode 100644\nindex 0000000000..fd00b51026\n--- /dev/null\n+++ b/news/3440.feature\n@@ -0,0 +1 @@\n+Add TinyMCE alignment classes, to avoid style usage [MrTango]\n\\ No newline at end of file\ndiff --git a/news/3442.bugfix b/news/3442.bugfix\nnew file mode 100644\nindex 0000000000..211b196b26\n--- /dev/null\n+++ b/news/3442.bugfix\n@@ -0,0 +1,2 @@\n+Fix overview-controlpanel view for Gunicorn WSGI HTTP Server.\n+[bsuttor]\ndiff --git a/news/3447.bugfix b/news/3447.bugfix\nnew file mode 100644\nindex 0000000000..ab80f61905\n--- /dev/null\n+++ b/news/3447.bugfix\n@@ -0,0 +1 @@\n+Fix detection of initial login time [MrTango]\n\\ No newline at end of file\ndiff --git a/news/3453.bugfix b/news/3453.bugfix\nnew file mode 100644\nindex 0000000000..cfbfe6ca99\n--- /dev/null\n+++ b/news/3453.bugfix\n@@ -0,0 +1,3 @@\n+Updated the list of core profiles that are upgraded during a Plone upgrade.\n+Added ``Products.PlonePAS`` and ``plone.session``, and the optional ``plone.restapi`` and ``plone.volto``.\n+[maurits]\ndiff --git a/news/3459.feature b/news/3459.feature\nnew file mode 100644\nindex 0000000000..c1a15aec03\n--- /dev/null\n+++ b/news/3459.feature\n@@ -0,0 +1,2 @@\n+Compatibility with z3c.form >= 4\n+[petschki]\ndiff --git a/news/500.bugfix b/news/500.bugfix\nnew file mode 100644\nindex 0000000000..c9f39b6b50\n--- /dev/null\n+++ b/news/500.bugfix\n@@ -0,0 +1,2 @@\n+Fixed tests when run with ``zope.component`` 5+.\n+[maurits]\ndiff --git a/news/6003.bugfix b/news/6003.bugfix\ndeleted file mode 100644\nindex 67c469d768..0000000000\n--- a/news/6003.bugfix\n+++ /dev/null\n@@ -1 +0,0 @@\n-Updated metadata version to 6003.  [maurits]\ndiff --git a/news/6004.bugfix b/news/6004.bugfix\nnew file mode 100644\nindex 0000000000..d9f2abae8c\n--- /dev/null\n+++ b/news/6004.bugfix\n@@ -0,0 +1,2 @@\n+Updated metadata version to 6004.\n+[maurits]\ndiff --git a/setup.cfg b/setup.cfg\nindex ee4b75d34b..a9ab3befbf 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -6,5 +6,6 @@ universal = 0\n \n [isort]\n profile = black\n-force_alphabetical_sort = True\n-force_single_line = True\n+force_alphabetical_sort=True\n+force_single_line=True\n+lines_after_imports=2\ndiff --git a/setup.py b/setup.py\nindex dfb39ebb5d..efbfef47b1 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,7 +1,7 @@\n from setuptools import setup\n from setuptools import find_packages\n \n-version = \'6.0.0a3.dev0\'\n+version = \'6.0.0a4.dev0\'\n \n \n setup(\n@@ -37,13 +37,11 @@\n         \'AccessControl >= 4.0\',\n         \'Acquisition\',\n         \'borg.localrole\',\n-        \'calmjs.parse\',\n         \'DateTime\',\n         \'ExtensionClass\',\n         \'five.customerize\',\n         \'five.localsitemanager\',\n         \'lxml\',\n-        \'mockup\',\n         \'Pillow\',\n         \'plone.api >= 1.4.4\',\n         \'plone.app.content\',\n@@ -106,10 +104,10 @@\n         \'Products.PortalTransforms\',\n         \'Products.SiteErrorLog\',\n         \'Products.statusmessages\',\n-        \'pyScss\',\n         \'setuptools>=36.2\',\n         \'transaction\',\n         \'plone.autoinclude\',\n+        \'webresource\',\n         \'ZODB3\',\n         \'Zope[wsgi] >= 4.0\',\n         \'zope.app.locales >= 3.6.0\',\n@@ -141,6 +139,7 @@\n             \'plone.app.testing\',\n             \'zope.globalrequest\',\n             \'zope.testing\',\n+            \'gunicorn\',\n         ]\n     },\n )\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-25T17:32:39+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/06dc3b8af046421166e941d53e6d333db3763187

remove glitch after merge

Files changed:
M Products/CMFPlone/exportimport/configure.zcml
M Products/CMFPlone/resources/browser/combine.py

b'diff --git a/Products/CMFPlone/exportimport/configure.zcml b/Products/CMFPlone/exportimport/configure.zcml\nindex a3cd905d75..e38d8c41cb 100644\n--- a/Products/CMFPlone/exportimport/configure.zcml\n+++ b/Products/CMFPlone/exportimport/configure.zcml\n@@ -76,14 +76,6 @@\n       description="Import CMFDiffTool settings">\n   </genericsetup:importStep>\n \n-  <genericsetup:importStep\n-      name="combine-bundles"\n-      title="Bundle combination"\n-      description="Combine JS/CSS bundles together"\n-      handler="Products.CMFPlone.resources.exportimport.bundles.combine">\n-    <depends name="plone.app.registry" />\n-  </genericsetup:importStep>\n-\n   <genericsetup:exportStep\n       name="content"\n       title="Content"\ndiff --git a/Products/CMFPlone/resources/browser/combine.py b/Products/CMFPlone/resources/browser/combine.py\nindex b52ae3aace..4ccfeafa97 100644\n--- a/Products/CMFPlone/resources/browser/combine.py\n+++ b/Products/CMFPlone/resources/browser/combine.py\n@@ -81,63 +81,6 @@ def get_resource(context, path):\n     context.REQUEST.response = response_before\n     return result\n \n-\n-def write_js(context, folder, meta_bundle):\n-    registry = getUtility(IRegistry)\n-    resources = []\n-\n-    # bundles\n-    bundles = registry.collectionOfInterface(\n-        IBundleRegistry, prefix="plone.bundles", check=False\n-    )\n-    for bundle in bundles.values():\n-        if bundle.merge_with == meta_bundle and bundle.jscompilation:\n-            resource = get_resource(context, bundle.jscompilation)\n-            if not resource:\n-                continue\n-            resources.append(resource)\n-\n-    fi = BytesIO()\n-    for script in resources:\n-        if not isinstance(script, bytes):\n-            script = script.encode()\n-        fi.write(script + b"\\n")\n-    folder.writeFile(meta_bundle + ".js", fi)\n-    logger.info(\'Wrote combined JS bundle "%s".\' % meta_bundle)\n-\n-\n-def write_css(context, folder, meta_bundle):\n-    registry = getUtility(IRegistry)\n-    resources = []\n-\n-    bundles = registry.collectionOfInterface(\n-        IBundleRegistry, prefix="plone.bundles", check=False\n-    )\n-    for bundle in bundles.values():\n-        if bundle.merge_with == meta_bundle and bundle.csscompilation:\n-            css = get_resource(context, bundle.csscompilation)\n-            if not css:\n-                continue\n-            (path, sep, filename) = bundle.csscompilation.rpartition("/")\n-            # Process relative urls:\n-            # we prefix with current resource path any url not starting with\n-            # \'/\' or http: or data:\n-            if not isinstance(path, bytes):\n-                path = path.encode()\n-            css = re.sub(\n-                br"""(url\\([\'"]?(?![\'"]?([a-z]+:|\\/)))""", br"\\1%s/" % path, css\n-            )\n-            resources.append(css)\n-\n-    fi = BytesIO()\n-    for script in resources:\n-        if not isinstance(script, bytes):\n-            script = script.encode()\n-        fi.write(script + b"\\n")\n-    folder.writeFile(meta_bundle + ".css", fi)\n-    logger.info(\'Wrote combined CSS bundle "%s".\' % meta_bundle)\n-\n-\n def get_override_directory(context):\n     persistent_directory = queryUtility(IResourceDirectory, name="persistent")\n     if persistent_directory is None:\n@@ -145,22 +88,3 @@ def get_override_directory(context):\n     if OVERRIDE_RESOURCE_DIRECTORY_NAME not in persistent_directory:\n         persistent_directory.makeDirectory(OVERRIDE_RESOURCE_DIRECTORY_NAME)\n     return persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n-\n-\n-def combine_bundles(context):\n-    container = get_override_directory(context)\n-    if PRODUCTION_RESOURCE_DIRECTORY not in container:\n-        container.makeDirectory(PRODUCTION_RESOURCE_DIRECTORY)\n-    production_folder = container[PRODUCTION_RESOURCE_DIRECTORY]\n-\n-    # store timestamp\n-    fi = BytesIO()\n-    fi.write(datetime.now().isoformat().encode())\n-    production_folder.writeFile("timestamp.txt", fi)\n-\n-    # generate new combined bundles\n-    write_js(context, production_folder, "default")\n-    write_js(context, production_folder, "logged-in")\n-    write_css(context, production_folder, "default")\n-    write_css(context, production_folder, "logged-in")\n-    logger.info("Finished bundle compilation.")\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-28T01:55:19+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/26c87d89bc36ea6831b053b463dd264728582c5a

Merge branch 'master' into PLIP-plone-base

Files changed:
A news/3240.bugfix
M Products/CMFPlone/profiles/default/skins.xml
M Products/CMFPlone/tests/testControlPanelScripts.py
D Products/CMFPlone/skins/plone_form_scripts/plone_change_password.py
D Products/CMFPlone/skins/plone_prefs/password_form.pt
D Products/CMFPlone/skins/plone_prefs/password_form.pt.metadata

b'diff --git a/Products/CMFPlone/profiles/default/skins.xml b/Products/CMFPlone/profiles/default/skins.xml\nindex b8be444eff..0a115c2ebc 100644\n--- a/Products/CMFPlone/profiles/default/skins.xml\n+++ b/Products/CMFPlone/profiles/default/skins.xml\n@@ -3,12 +3,8 @@\n    cookie_persistence="False" default_skin="Plone Default"\n    request_varname="plone_skin">\n  <object name="custom" meta_type="Folder"/>\n- <object name="plone_form_scripts" meta_type="Filesystem Directory View"\n-    directory="Products.CMFPlone:skins/plone_form_scripts"/>\n  <object name="plone_images" meta_type="Filesystem Directory View"\n     directory="Products.CMFPlone:skins/plone_images"/>\n- <object name="plone_prefs" meta_type="Filesystem Directory View"\n-    directory="Products.CMFPlone:skins/plone_prefs"/>\n  <object name="plone_scripts" meta_type="Filesystem Directory View"\n     directory="Products.CMFPlone:skins/plone_scripts"/>\n  <object name="plone_templates" meta_type="Filesystem Directory View"\n@@ -18,9 +14,7 @@\n  <skin-path name="Plone Default">\n   <layer name="custom"/>\n   <layer name="plone_wysiwyg"/>\n-  <layer name="plone_prefs"/>\n   <layer name="plone_templates"/>\n-  <layer name="plone_form_scripts"/>\n   <layer name="plone_scripts"/>\n   <layer name="plone_images"/>\n  </skin-path>\ndiff --git a/Products/CMFPlone/skins/plone_form_scripts/plone_change_password.py b/Products/CMFPlone/skins/plone_form_scripts/plone_change_password.py\ndeleted file mode 100644\nindex 77a5ee90b0..0000000000\n--- a/Products/CMFPlone/skins/plone_form_scripts/plone_change_password.py\n+++ /dev/null\n@@ -1,54 +0,0 @@\n-## Script (Python) "plone_change_password"\n-##bind container=container\n-##bind context=context\n-##bind namespace=\n-##bind script=script\n-##bind subpath=traverse_subpath\n-##title=Action to change password\n-##parameters=password, password_confirm, current, domains=None\n-\n-from Products.CMFPlone import PloneMessageFactory as _\n-\n-REQUEST = context.REQUEST\n-if \'cancel\' in REQUEST.form:\n-    context.plone_utils.addPortalMessage(_(\'Password change was canceled.\'),\n-                                         \'warning\')\n-    return context.REQUEST.RESPONSE.redirect(\n-            \'%s/@@personal-preferences\' % context.absolute_url())\n-\n-mt = context.portal_membership\n-\n-if not mt.testCurrentPassword(current):\n-    failMessage = _(\'Does not match current password.\')\n-    context.plone_utils.addPortalMessage(failMessage, \'error\')\n-    return context.password_form(context,\n-                                 REQUEST,\n-                                 error=failMessage)\n-\n-failMessage = context.portal_registration \\\n-                    .testPasswordValidity(password, password_confirm)\n-if failMessage:\n-    context.plone_utils.addPortalMessage(failMessage, \'error\')\n-    return context.password_form(context,\n-                                 REQUEST,\n-                                 error=failMessage)\n-\n-member = mt.getAuthenticatedMember()\n-try:\n-    mt.setPassword(password, domains, REQUEST=context.REQUEST)\n-except AttributeError:\n-    failMessage = _(\'While changing your password an AttributeError \'\n-                    \'occurred. This is usually caused by your user being \'\n-                    \'defined outside the portal.\')\n-    context.plone_utils.addPortalMessage(failMessage, \'error\')\n-    return context.password_form(context,\n-                                 REQUEST,\n-                                 error=failMessage)\n-\n-from Products.CMFPlone.utils import transaction_note\n-transaction_note(\'Changed password for %s\' % (member.getUserName()))\n-\n-context.plone_utils.addPortalMessage(_(\'Password changed.\'))\n-\n-return context.REQUEST.RESPONSE.redirect(\n-            \'%s/@@personal-preferences\' % context.absolute_url())\ndiff --git a/Products/CMFPlone/skins/plone_prefs/password_form.pt b/Products/CMFPlone/skins/plone_prefs/password_form.pt\ndeleted file mode 100644\nindex 45d75b9915..0000000000\n--- a/Products/CMFPlone/skins/plone_prefs/password_form.pt\n+++ /dev/null\n@@ -1,98 +0,0 @@\n-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"\n-      xmlns:tal="http://xml.zope.org/namespaces/tal"\n-      xmlns:metal="http://xml.zope.org/namespaces/metal"\n-      xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n-      lang="en"\n-      metal:use-macro="context/prefs_main_template/macros/master"\n-      i18n:domain="plone">\n-\n-<body>\n-\n-<metal:main fill-slot="prefs_configlet_main">\n-\n-    <h1 class="documentFirstHeading"\n-        i18n:translate="heading_change_password_for">\n-        Change password for <span tal:content="user/getUserName" tal:omit-tag="" i18n:name="user">user</span>\n-    </h1>\n-\n-    <div id="content-core">\n-        <a href=""\n-           class="link-parent"\n-           tal:attributes="href string:${context/@@plone_portal_state/navigation_root_url}/dashboard"\n-           i18n:translate="label_to_dashboard">\n-            Up to my dashboard\n-        </a>\n-        <form action="plone_change_password"\n-              class="pat-formautofocus pat-formunloadalert"\n-              name="change_password"\n-              method="post">\n-\n-            <fieldset>\n-                <legend i18n:translate="legend_password_details">Password Details</legend>\n-\n-                <div class="field">\n-                    <label for="current" i18n:translate="label_current_password">Current password</label>\n-\n-                    <div class="formHelp" i18n:translate="help_current_password">\n-                    Enter your current password.\n-                    </div>\n-\n-                    <input type="password"\n-                           id="current"\n-                           name="current"\n-                           size="10"\n-                           />\n-                </div>\n-\n-                <div class="field">\n-                    <label for="password" i18n:translate="label_new_password">New password</label>\n-\n-                    <div class="formHelp" i18n:translate="help_new_password">\n-                    Enter your new password.\n-                    </div>\n-\n-                    <input type="password"\n-                           id="password"\n-                           name="password"\n-                           size="10"\n-                           />\n-                </div>\n-\n-                <div class="field">\n-                    <label for="password_confirm" i18n:translate="label_confirm_password">Confirm password</label>\n-\n-                    <div class="formHelp" i18n:translate="help_confirm_password">\n-                    Re-enter the password. Make sure the passwords are identical.\n-                    </div>\n-\n-                    <input type="password"\n-                           id="password_confirm"\n-                           name="password_confirm"\n-                           size="10"\n-                           />\n-                </div>\n-\n-                <div class="formControls">\n-                    <input class="btn btn-primary"\n-                           type="submit"\n-                           value="Change Password"\n-                           i18n:attributes="value label_change_password;"\n-                           />\n-                    <input class="btn btn-secondary"\n-                           type="submit"\n-                           name="cancel"\n-                           value="Cancel"\n-                           i18n:attributes="value label_cancel;"\n-                           />\n-                </div>\n-\n-                <input tal:replace="structure context/@@authenticator/authenticator" />\n-\n-            </fieldset>\n-        </form>\n-    </div>\n-\n-</metal:main>\n-\n-</body>\n-</html>\ndiff --git a/Products/CMFPlone/skins/plone_prefs/password_form.pt.metadata b/Products/CMFPlone/skins/plone_prefs/password_form.pt.metadata\ndeleted file mode 100644\nindex 51853704e4..0000000000\n--- a/Products/CMFPlone/skins/plone_prefs/password_form.pt.metadata\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-[default]\n-title=Change password\ndiff --git a/Products/CMFPlone/tests/testControlPanelScripts.py b/Products/CMFPlone/tests/testControlPanelScripts.py\nindex e0428af4cb..d37e54f2ef 100644\n--- a/Products/CMFPlone/tests/testControlPanelScripts.py\n+++ b/Products/CMFPlone/tests/testControlPanelScripts.py\n@@ -1,35 +1,7 @@\n-from DateTime import DateTime\n from plone.app.testing import SITE_OWNER_NAME\n from plone.app.testing import SITE_OWNER_PASSWORD\n from plone.app.testing import TEST_USER_ID\n-from plone.app.testing import TEST_USER_NAME\n-from plone.app.testing import TEST_USER_PASSWORD\n-from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from Products.CMFPlone.tests.PloneTestCase import PloneTestCase\n-from zExceptions import Forbidden\n-\n-import unittest\n-\n-\n-class TestPrefsUserManage(unittest.TestCase):\n-\n-    layer = PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n-\n-    def setUp(self):\n-        self.portal = self.layer[\'portal\']\n-        self.membership = self.portal.portal_membership\n-        self.membership.memberareaCreationFlag = 0\n-        # self.setupAuthenticator()\n-\n-    def test_ploneChangePasswordPostOnly(self):\n-        # self.login(TEST_USER_NAME)\n-        self.layer[\'request\'].method = \'GET\'\n-        with self.assertRaises(Forbidden):\n-            self.portal.plone_change_password(\n-                current=TEST_USER_PASSWORD,\n-                password=TEST_USER_PASSWORD,\n-                password_confirm=TEST_USER_PASSWORD,\n-            )\n \n \n class TestAccessControlPanelScripts(PloneTestCase):\ndiff --git a/news/3240.bugfix b/news/3240.bugfix\nnew file mode 100644\nindex 0000000000..a22c67adf0\n--- /dev/null\n+++ b/news/3240.bugfix\n@@ -0,0 +1,3 @@\n+Removed no longer used ``password_form.pt`` and ``plone_change_password.py``.\n+No longer register now empty skin layers ``plone_prefs`` and ``plone_form_scripts``.\n+[maurits]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-29T21:45:01+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/dd7ed4d562438ebe9c42abafe8462b43fc6d08c2

Merge branch 'master' into PLIP-plone-base

Files changed:
A news/3468.bugfix
M Products/CMFPlone/resources/browser/combine.py
D Products/CMFPlone/resources/exportimport/__init__.py
D Products/CMFPlone/resources/exportimport/bundles.py

b'diff --git a/Products/CMFPlone/resources/browser/combine.py b/Products/CMFPlone/resources/browser/combine.py\nindex 4ccfeafa97..58585b14f7 100644\n--- a/Products/CMFPlone/resources/browser/combine.py\n+++ b/Products/CMFPlone/resources/browser/combine.py\n@@ -1,19 +1,3 @@\n-from Acquisition import aq_base\n-from datetime import datetime\n-from io import BytesIO\n-from plone.registry.interfaces import IRegistry\n-from plone.resource.file import FilesystemFile\n-from plone.resource.interfaces import IResourceDirectory\n-from plone.base.interfaces import IBundleRegistry\n-from plone.base.interfaces.resources import (\n-    OVERRIDE_RESOURCE_DIRECTORY_NAME,\n-)\n-from zExceptions import NotFound\n-from zope.component import getUtility\n-from zope.component import queryUtility\n-\n-import logging\n-import re\n import zope.deferredimport\n \n \n@@ -24,67 +8,3 @@\n     PRODUCTION_RESOURCE_DIRECTORY="Products.CMFPlone:resources.utils.PRODUCTION_RESOURCE_DIRECTORY",\n     get_override_directory="Products.CMFPlone:resources.utils.get_override_directory",\n )\n-\n-\n-PRODUCTION_RESOURCE_DIRECTORY = "production"\n-logger = logging.getLogger(__name__)\n-\n-\n-def get_production_resource_directory():\n-    persistent_directory = queryUtility(IResourceDirectory, name="persistent")\n-    if persistent_directory is None:\n-        return ""\n-    container = persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n-    try:\n-        production_folder = container[PRODUCTION_RESOURCE_DIRECTORY]\n-    except NotFound:\n-        return "%s/++unique++1" % PRODUCTION_RESOURCE_DIRECTORY\n-    if "timestamp.txt" not in production_folder:\n-        return "%s/++unique++1" % PRODUCTION_RESOURCE_DIRECTORY\n-    timestamp = production_folder.readFile("timestamp.txt")\n-    if isinstance(timestamp, bytes):\n-        timestamp = timestamp.decode()\n-    return "{}/++unique++{}".format(PRODUCTION_RESOURCE_DIRECTORY, timestamp)\n-\n-\n-def get_resource(context, path):\n-    if path.startswith("++plone++"):\n-        # ++plone++ resources can be customized, we return their override\n-        # value if any\n-        overrides = get_override_directory(context)\n-        filepath = path[9:]\n-        if overrides.isFile(filepath):\n-            return overrides.readFile(filepath)\n-\n-    try:\n-        resource = context.unrestrictedTraverse(path)\n-    except (NotFound, AttributeError):\n-        logger.warning(\n-            f"Could not find resource {path}. You may have to create it first."\n-        )  # noqa\n-        return\n-\n-    if isinstance(resource, FilesystemFile):\n-        (directory, sep, filename) = path.rpartition("/")\n-        return context.unrestrictedTraverse(directory).readFile(filename)\n-\n-    # calling the resource may modify the header, i.e. the content-type.\n-    # we do not want this, so keep the original header intact.\n-    response_before = context.REQUEST.response\n-    context.REQUEST.response = response_before.__class__()\n-    if hasattr(aq_base(resource), "GET"):\n-        # for FileResource\n-        result = resource.GET()\n-    else:\n-        # any BrowserView\n-        result = resource()\n-    context.REQUEST.response = response_before\n-    return result\n-\n-def get_override_directory(context):\n-    persistent_directory = queryUtility(IResourceDirectory, name="persistent")\n-    if persistent_directory is None:\n-        return\n-    if OVERRIDE_RESOURCE_DIRECTORY_NAME not in persistent_directory:\n-        persistent_directory.makeDirectory(OVERRIDE_RESOURCE_DIRECTORY_NAME)\n-    return persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\ndiff --git a/Products/CMFPlone/resources/exportimport/__init__.py b/Products/CMFPlone/resources/exportimport/__init__.py\ndeleted file mode 100644\nindex e69de29bb2..0000000000\ndiff --git a/Products/CMFPlone/resources/exportimport/bundles.py b/Products/CMFPlone/resources/exportimport/bundles.py\ndeleted file mode 100644\nindex f380b846e2..0000000000\n--- a/Products/CMFPlone/resources/exportimport/bundles.py\n+++ /dev/null\n@@ -1,33 +0,0 @@\n-from ..browser.combine import combine_bundles\n-from plone.registry.interfaces import IRegistry\n-from zope.component import queryUtility\n-\n-\n-def combine(context):\n-    logger = context.getLogger("bundles")\n-    registry = queryUtility(IRegistry)\n-\n-    if registry is None:\n-        logger.info("Cannot find registry")\n-        return\n-\n-    # Look for a keyword in registry.xml or the registry directory.\n-    filepaths = ["registry.xml"]\n-    if context.isDirectory("registry"):\n-        for filename in context.listDirectory("registry"):\n-            filepaths.append("registry/" + filename)\n-    found = False\n-    for filepath in filepaths:\n-        body = context.readDataFile(filepath)\n-        if body is not None and b"IBundleRegistry" in body:\n-            found = True\n-            break\n-    if not found:\n-        return\n-\n-    # Calling combine_bundles used to have as side effect that the\n-    # Content-Type header of the response was set to application/javascript,\n-    # which we do not want.  But that was fixed already in Plone 5.1b2.\n-    # See https://github.com/plone/Products.CMFPlone/pull/1924\n-    site = context.getSite()\n-    combine_bundles(site)\ndiff --git a/news/3468.bugfix b/news/3468.bugfix\nnew file mode 100644\nindex 0000000000..a9cdb27d1d\n--- /dev/null\n+++ b/news/3468.bugfix\n@@ -0,0 +1,2 @@\n+Remove obsolte combine_bundles and related code.\n+[pbauer]\n\\ No newline at end of file\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-03-30T10:11:45+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/6ce4a94dbc84ac34b02ca9c9dbc7b1c78101f9dd

Merge branch 'master' into PLIP-plone-base

Files changed:
A news/23.bugfix
M Products/CMFPlone/resources/browser/resource.py
M Products/CMFPlone/resources/utils.py
M Products/CMFPlone/resources/webresource.py
M Products/CMFPlone/tests/testResourceRegistries.py

b'diff --git a/Products/CMFPlone/resources/browser/resource.py b/Products/CMFPlone/resources/browser/resource.py\nindex 09db07887a..403057745f 100644\n--- a/Products/CMFPlone/resources/browser/resource.py\n+++ b/Products/CMFPlone/resources/browser/resource.py\n@@ -1,8 +1,5 @@\n from ..webresource import PloneScriptResource\n from ..webresource import PloneStyleResource\n-from Acquisition import aq_base\n-from Acquisition import aq_inner\n-from Acquisition import aq_parent\n from App.config import getConfiguration\n from plone.app.layout.viewlets.common import ViewletBase\n from plone.app.theming.interfaces import IThemeSettings\n@@ -15,8 +12,6 @@\n from Products.CMFPlone.resources import RESOURCE_DEVELOPMENT_MODE\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n-from zope.component import queryUtility\n-from zope.ramcache.interfaces import ram\n \n import logging\n import webresource\n@@ -119,12 +114,6 @@ def update(self):\n             include = include or name in request_enabled_bundles\n             include = include and name not in request_disabled_bundles\n \n-            if include and record.expression:\n-\n-                def current_expression():\n-                    return self.eval_expression(record.expression, name)\n-\n-                include = current_expression\n             if record.jscompilation:\n                 depends = record.depends or ""\n                 if depends and depends not in js_names:\n@@ -152,6 +141,7 @@ def current_expression():\n                     resource=record.jscompilation if not external else None,\n                     compressed=record.jscompilation if not external else None,\n                     include=include,\n+                    expression=record.expression,\n                     unique=unique,\n                     group=registry_group_js,\n                     url=record.jscompilation if external else None,\n@@ -187,6 +177,7 @@ def current_expression():\n                     resource=record.csscompilation if not external else None,\n                     compressed=record.csscompilation if not external else None,\n                     include=include,\n+                    expression=record.expression,\n                     unique=unique,\n                     group=registry_group_css,\n                     url=record.csscompilation if external else None,\n@@ -272,57 +263,6 @@ def current_expression():\n             resolver_css, base_url=self.portal_state.portal_url()\n         )\n \n-    def evaluateExpression(self, expression, context):\n-        """Evaluate an object\'s TALES condition to see if it should be\n-        displayed."""\n-        try:\n-            if expression.text and context is not None:\n-                portal = getToolByName(context, "portal_url").getPortalObject()\n-\n-                # Find folder (code courtesy of CMFCore.ActionsTool)\n-                if context is None or not hasattr(context, "aq_base"):\n-                    folder = portal\n-                else:\n-                    folder = context\n-                    # Search up the containment hierarchy until we find an\n-                    # object that claims it\'s PrincipiaFolderish.\n-                    while folder is not None:\n-                        if getattr(aq_base(folder), "isPrincipiaFolderish", 0):\n-                            # found it.\n-                            break\n-                        else:\n-                            folder = aq_parent(aq_inner(folder))\n-\n-                __traceback_info__ = (folder, portal, context, expression)\n-                ec = createExprContext(folder, portal, context)\n-                # add \'context\' as an alias for \'object\'\n-                ec.setGlobal("context", context)\n-                return expression(ec)\n-            return True\n-        except AttributeError:\n-            return True\n-\n-    def eval_expression(self, expression, bundle_name):\n-        if not expression:\n-            return True\n-        cache = queryUtility(ram.IRAMCache)\n-        cooked_expression = None\n-        if cache is not None:\n-            cooked_expression = cache.query(\n-                "plone.bundles.cooked_expressions",\n-                key=dict(prefix=bundle_name),\n-                default=None,\n-            )\n-        if cooked_expression is None or cooked_expression.text != expression:\n-            cooked_expression = Expression(expression)\n-            if cache is not None:\n-                cache.set(\n-                    cooked_expression,\n-                    "plone.bundles.cooked_expressions",\n-                    key=dict(prefix=bundle_name),\n-                )\n-        return self.evaluateExpression(cooked_expression, self.context)\n-\n \n class ResourceView(ResourceBase, ViewletBase):\n     """Viewlet Information for script rendering."""\ndiff --git a/Products/CMFPlone/resources/utils.py b/Products/CMFPlone/resources/utils.py\nindex 5b7ba7ced3..ec2e7fb9e0 100644\n--- a/Products/CMFPlone/resources/utils.py\n+++ b/Products/CMFPlone/resources/utils.py\n@@ -1,6 +1,10 @@\n from Acquisition import aq_base\n+from Acquisition import aq_inner\n+from Acquisition import aq_parent\n from plone.resource.file import FilesystemFile\n from plone.resource.interfaces import IResourceDirectory\n+from Products.CMFCore.Expression import createExprContext\n+from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.interfaces.resources import OVERRIDE_RESOURCE_DIRECTORY_NAME\n from zExceptions import NotFound\n from zope.component import queryUtility\n@@ -38,6 +42,14 @@ def get_resource(context, path):\n         if overrides.isFile(filepath):\n             return overrides.readFile(filepath)\n \n+    if "?" in path:\n+        # Example from plone.session:\n+        # "acl_users/session/refresh?session_refresh=true&type=css&minutes=5"\n+        # Traversing will not work then.  In this example we could split on "?"\n+        # and traverse to the first part, acl_users/session/refresh, but this\n+        # gives a function, and this fails when we call it below, missing a\n+        # REQUEST argument\n+        return\n     try:\n         resource = context.unrestrictedTraverse(path)\n     except (NotFound, AttributeError):\n@@ -71,3 +83,34 @@ def get_override_directory(context):\n     if OVERRIDE_RESOURCE_DIRECTORY_NAME not in persistent_directory:\n         persistent_directory.makeDirectory(OVERRIDE_RESOURCE_DIRECTORY_NAME)\n     return persistent_directory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n+\n+\n+def evaluateExpression(expression, context):\n+    """Evaluate an object\'s TALES condition to see if it should be\n+    displayed."""\n+    try:\n+        if expression.text and context is not None:\n+            portal = getToolByName(context, "portal_url").getPortalObject()\n+\n+            # Find folder (code courtesy of CMFCore.ActionsTool)\n+            if context is None or not hasattr(context, "aq_base"):\n+                folder = portal\n+            else:\n+                folder = context\n+                # Search up the containment hierarchy until we find an\n+                # object that claims it\'s PrincipiaFolderish.\n+                while folder is not None:\n+                    if getattr(aq_base(folder), "isPrincipiaFolderish", 0):\n+                        # found it.\n+                        break\n+                    else:\n+                        folder = aq_parent(aq_inner(folder))\n+\n+            __traceback_info__ = (folder, portal, context, expression)\n+            ec = createExprContext(folder, portal, context)\n+            # add \'context\' as an alias for \'object\'\n+            ec.setGlobal("context", context)\n+            return expression(ec)\n+        return True\n+    except AttributeError:\n+        return True\ndiff --git a/Products/CMFPlone/resources/webresource.py b/Products/CMFPlone/resources/webresource.py\nindex 43f2a36d32..b3d6233660 100644\n--- a/Products/CMFPlone/resources/webresource.py\n+++ b/Products/CMFPlone/resources/webresource.py\n@@ -1,6 +1,10 @@\n+from .utils import evaluateExpression\n from .utils import get_resource\n+from Products.CMFCore.Expression import Expression\n from webresource import ScriptResource\n from webresource import StyleResource\n+from zope.component import queryUtility\n+from zope.ramcache.interfaces import ram\n \n \n class PloneBaseResource:\n@@ -9,16 +13,59 @@ class PloneBaseResource:\n     def __init__(self, context, **kw):\n         """Initialize with Plone context"""\n         self.context = context\n+        self.expression = kw.pop("expression", "")\n         super().__init__(**kw)\n \n     @property\n     def file_data(self):\n         """Fetch data from using a resource via traversal"""\n         data = get_resource(self.context, self.resource)\n+        if data is None:\n+            # This happens with plone.session when trying to get a resource\n+            # with this path:\n+            # "acl_users/session/refresh?session_refresh=true&type=css&minutes=5"\n+            # We could \'return b""\', but let\'s take the resource path instead.\n+            data = self.resource\n         if isinstance(data, str):\n             data = data.encode("utf8")\n         return data\n \n+    @property\n+    def include(self):\n+        if callable(self._include):\n+            # Note: at time of writing, this is not used in core Plone.\n+            # But upstream webresource has it, so let\'s keep it.\n+            return self._include()\n+        if not self._include:\n+            return False\n+        # We want to include the resource, but must evaluate the expression first.\n+        return self.eval_expression()\n+\n+    @include.setter\n+    def include(self, include):\n+        self._include = include\n+\n+    def eval_expression(self):\n+        if not self.expression:\n+            return True\n+        cache = queryUtility(ram.IRAMCache)\n+        cooked_expression = None\n+        if cache is not None:\n+            cooked_expression = cache.query(\n+                "plone.bundles.cooked_expressions",\n+                key=dict(prefix=self.name),\n+                default=None,\n+            )\n+        if cooked_expression is None or cooked_expression.text != self.expression:\n+            cooked_expression = Expression(self.expression)\n+            if cache is not None:\n+                cache.set(\n+                    cooked_expression,\n+                    "plone.bundles.cooked_expressions",\n+                    key=dict(prefix=self.name),\n+                )\n+        return evaluateExpression(cooked_expression, self.context)\n+\n \n class PloneScriptResource(PloneBaseResource, ScriptResource):\n     """Webresource based ScriptResource for Plone"""\ndiff --git a/Products/CMFPlone/tests/testResourceRegistries.py b/Products/CMFPlone/tests/testResourceRegistries.py\nindex a0ce22f73c..d7214266cf 100644\n--- a/Products/CMFPlone/tests/testResourceRegistries.py\n+++ b/Products/CMFPlone/tests/testResourceRegistries.py\n@@ -247,3 +247,103 @@ def test_remove_bundle_on_request_with_subrequest(self):\n         scripts.update()\n         result = scripts.render()\n         self.assertNotIn("http://test.foo/test.min.js", result)\n+\n+\n+class TestExpressions(PloneTestCase.PloneTestCase):\n+\n+    def setUp(self):\n+        # Add three bundles with three different expressions.\n+        registry = getUtility(IRegistry)\n+        data = {\n+            "jscompilation": ("http://test.foo/test.min.js", regfield.TextLine()),\n+            "csscompilation": ("http://test.foo/test.css", regfield.TextLine()),\n+            "expression": ("python: False", regfield.TextLine()),\n+            "enabled": (True, regfield.Bool()),\n+            "depends": ("", regfield.TextLine()),\n+            "load_async": (True, regfield.Bool()),\n+            "load_defer": (True, regfield.Bool()),\n+        }\n+        for key, regdef in data.items():\n+            record = Record(regdef[1])\n+            record.value = regdef[0]\n+            registry.records[f"plone.bundles/testbundle.{key}"] = record\n+\n+        data = {\n+            "jscompilation": ("http://test2.foo/member.min.js", regfield.TextLine()),\n+            "csscompilation": ("http://test2.foo/member.css", regfield.TextLine()),\n+            "expression": ("python: member is not None", regfield.TextLine()),\n+            "enabled": (True, regfield.Bool()),\n+            "depends": ("", regfield.TextLine()),\n+            "load_async": (True, regfield.Bool()),\n+            "load_defer": (True, regfield.Bool()),\n+        }\n+        for key, regdef in data.items():\n+            record = Record(regdef[1])\n+            record.value = regdef[0]\n+            registry.records[f"plone.bundles/testbundle2.{key}"] = record\n+\n+        data = {\n+            "jscompilation": ("http://test3.foo/test.min.js", regfield.TextLine()),\n+            "csscompilation": ("http://test3.foo/test.css", regfield.TextLine()),\n+            "expression": ("python: True", regfield.TextLine()),\n+            "enabled": (True, regfield.Bool()),\n+            "depends": ("", regfield.TextLine()),\n+            "load_async": (True, regfield.Bool()),\n+            "load_defer": (True, regfield.Bool()),\n+        }\n+        for key, regdef in data.items():\n+            record = Record(regdef[1])\n+            record.value = regdef[0]\n+            registry.records[f"plone.bundles/testbundle3.{key}"] = record\n+\n+    def test_styles_authenticated(self):\n+        styles = StylesView(self.layer["portal"], self.layer["request"], None)\n+        styles.update()\n+        results = styles.render()\n+        # Check that standard resources are still there, signalling that\n+        # rendering works without throwing an exception.\n+        self.assertIn("++theme++barceloneta/css/barceloneta.min.css", results)\n+        self.assertIn("http://nohost/plone/++webresource++", results)\n+        # Test our additional bundles.\n+        # self.assertNotIn("http://test.foo/test.css", results)\n+        self.assertIn("http://test2.foo/member.css", results)\n+        self.assertIn("http://test3.foo/test.css", results)\n+\n+    def test_styles_anonymous(self):\n+        logout()\n+        styles = StylesView(self.layer["portal"], self.layer["request"], None)\n+        styles.update()\n+        results = styles.render()\n+        # Check that standard resources are still there, signalling that\n+        # rendering works without throwing an exception.\n+        self.assertIn("++theme++barceloneta/css/barceloneta.min.css", results)\n+        self.assertIn("http://nohost/plone/++webresource++", results)\n+        # Test our additional bundles.\n+        # self.assertNotIn("http://test.foo/test.css", results)\n+        self.assertNotIn("http://test2.foo/member.css", results)\n+        self.assertIn("http://test3.foo/test.css", results)\n+\n+    def test_scripts_authenticated(self):\n+        scripts = ScriptsView(self.layer["portal"], self.layer["request"], None)\n+        scripts.update()\n+        results = scripts.render()\n+        # Check that standard resources are still there, signalling that\n+        # rendering works without throwing an exception.\n+        self.assertIn("++plone++static/bundle-plone/bundle.min.js", results)\n+        # The first one should be included, the second one not.\n+        # self.assertNotIn("http://test.foo/test.min.js", results)\n+        self.assertIn("http://test2.foo/member.min.js", results)\n+        self.assertIn("http://test3.foo/test.min.js", results)\n+\n+    def test_scripts_anonymous(self):\n+        logout()\n+        scripts = ScriptsView(self.layer["portal"], self.layer["request"], None)\n+        scripts.update()\n+        results = scripts.render()\n+        # Check that standard resources are still there, signalling that\n+        # rendering works without throwing an exception.\n+        self.assertIn("++plone++static/bundle-plone/bundle.min.js", results)\n+        # The first one should be included, the second one not.\n+        # self.assertNotIn("http://test.foo/test.min.js", results)\n+        self.assertNotIn("http://test2.foo/member.min.js", results)\n+        self.assertIn("http://test3.foo/test.min.js", results)\ndiff --git a/news/23.bugfix b/news/23.bugfix\nnew file mode 100644\nindex 0000000000..9fdeac6cb1\n--- /dev/null\n+++ b/news/23.bugfix\n@@ -0,0 +1,3 @@\n+Fixed evaluating expressions on resources, and especially loading ``plone.session`` resources.\n+Fixes `plone.session` issue 23 <https://github.com/plone/plone.session/issues/23>_.\n+[maurits]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-04-05T23:51:14+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/bad9ad08a71fefcfb09a6ad49b4933af5f4d916a

Merge branch 'master' into PLIP-plone-base

Files changed:
A news/3294.bugfix
A news/3463.bugfix
A news/3467.bugfix
A news/3478.bugfix
M Products/CMFPlone/MigrationTool.py
M Products/CMFPlone/browser/templates/accessibility-info.pt
M Products/CMFPlone/controlpanel/browser/resourceregistry.pt
M Products/CMFPlone/controlpanel/browser/types.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_types.py
M Products/CMFPlone/patterns/tinymce.py
M Products/CMFPlone/tests/browser.txt
M Products/CMFPlone/tests/robot/test_folder_contents.robot

b'diff --git a/Products/CMFPlone/MigrationTool.py b/Products/CMFPlone/MigrationTool.py\nindex 19580fd570..2fcbb215e0 100644\n--- a/Products/CMFPlone/MigrationTool.py\n+++ b/Products/CMFPlone/MigrationTool.py\n@@ -79,7 +79,7 @@ def upgrade_all(self, context):\n         setup = getToolByName(context, \'portal_setup\')\n         for addon in self:\n             if addon.safe():\n-                setup.upgradeProfile(addon.profile_id)\n+                setup.upgradeProfile(addon.profile_id, quiet=True)\n \n \n # List of upgradeable packages.  Obvious items to add here, are all\ndiff --git a/Products/CMFPlone/browser/templates/accessibility-info.pt b/Products/CMFPlone/browser/templates/accessibility-info.pt\nindex f7b350eab5..77e1609fec 100644\n--- a/Products/CMFPlone/browser/templates/accessibility-info.pt\n+++ b/Products/CMFPlone/browser/templates/accessibility-info.pt\n@@ -20,7 +20,7 @@\n             It meets the Web Content Accessibility Guidelines\n \t    (<a href="https://www.w3.org/TR/WCAG20/"><acronym i18n:name="wcag"\n                   title="Web Content Accessibility Guidelines"\n-                  i18n:attributes="title title_wcag;">WCAG</acronym> v2.0</a>) level \'AA\' for people with disabilities,\n+                  i18n:attributes="title title_wcag;">WCAG</acronym> v2.1</a>) level \'AA\' for people with disabilities,\n             including blindness and low vision, deafness and hearing loss, learning disabilities,\n             cognitive limitations, limited movement, speech disabilities, photosensitivity,\n             and combinations of these.</tal:i18n></p>\n@@ -54,7 +54,7 @@\n         A number of checkpoints in\n         <acronym i18n:name="wcag"\n                  title="Web Content Accessibility Guidelines"\n-                 i18n:attributes="title title_wcag;">WCAG</acronym> 2.0 and <acronym i18n:name="atag"\n+                 i18n:attributes="title title_wcag;">WCAG</acronym> 2.1 and <acronym i18n:name="atag"\n                  title="Authoring Tool Accessibility Guidelines"\n                  i18n:attributes="title title_atag;">ATAG</acronym> 2.0 guidelines are\n         subjective; there may be instances where interpretations vary.\ndiff --git a/Products/CMFPlone/controlpanel/browser/resourceregistry.pt b/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\nindex 641bea1b08..e28c4da3b8 100644\n--- a/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\n+++ b/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\n@@ -38,7 +38,7 @@\n           method="post" action="${python:context.absolute_url()}/@@resourceregistry-controlpanel">\n       <div class="portalMessage statusmessage statusmessage-info alert alert-warning"\n          role="alert">\n-          <button name="action" value="deactivate_cache" type="submit" class="btn btn-primary ms-1 me-1 mb-1 float-end">Deactivate</button>\n+          <button name="action" value="deactivate_cache" type="submit" class="btn btn-primary ms-1 me-1 mb-1 float-end" i18n:translate="">Deactivate</button>\n         <tal:icon tal:replace="structure python:icons.tag(\'plone-statusmessage-warning\', tag_alt=\'\', tag_class=\'statusmessage-icon mb-1\')" />\n         <strong i18n:translate="">Resource Debug Mode Activated</strong>\n         <span class="content"\n@@ -53,7 +53,7 @@\n           method="post" action="${python:context.absolute_url()}/@@resourceregistry-controlpanel">\n       <div class="portalMessage statusmessage statusmessage-info alert alert-info"\n          role="alert">\n-          <button name="action" value="activate_cache" type="submit" class="btn btn-primary ms-1 me-1 mb-1 float-end">Activate Debug Mode</button>\n+          <button name="action" value="activate_cache" type="submit" class="btn btn-primary ms-1 me-1 mb-1 float-end" i18n:translate="">Activate Debug Mode</button>\n         <tal:icon tal:replace="structure python:icons.tag(\'plone-statusmessage-info\', tag_alt=\'\', tag_class=\'statusmessage-icon mb-1\')" />\n         <strong i18n:translate="">Production Mode Activated</strong>\n         <span class="content"\n@@ -72,7 +72,7 @@\n               <span tal:condition="python:bundle[\'name\'] and not bundle[\'enabled\']" i18n:translate="" class="me-2"><tal:icon tal:replace="structure python:icons.tag(\'file-x\', tag_alt=\'Disabled bundle\')" /></span>\n               <span tal:condition="python:not bundle[\'name\']" i18n:translate="" class="me-2"><tal:icon tal:replace="structure python:icons.tag(\'file-plus\', tag_alt=\'Add a bundle\')" /></span>\n               <strong tal:condition="python:bundle[\'name\']">${python:bundle["name"]}</strong>\n-              <strong tal:condition="python:not bundle[\'name\']">Add new bundle</strong>\n+              <strong tal:condition="python:not bundle[\'name\']" i18n:translate="">Add new bundle</strong>\n             </button>\n           </h2>\n           <div id="collapse-${python:bundle[\'safe_name\']}" class="accordion-collapse ${python:\'\' if bundle[\'name\'] == request.form.get(\'name\', None) else \'collapse\'}" aria-labelledby="heading${python:bundle[\'safe_name\']}" data-bs-parent="#accordionRR">\n@@ -80,7 +80,7 @@\n               <form method="post" action="${python:context.absolute_url()}/@@resourceregistry-controlpanel">\n                 <input type="hidden" name="original_name" value="${python:bundle[\'name\']}" />\n                 <div class="mb-3">\n-                  <label for="name" class="form-label">Name</label>\n+                  <label for="name" class="form-label" i18n:translate="label_bundle_name">Name</label>\n                   <input type="text" class="form-control" name="name" value="${python:bundle[\'name\']}"/>\n                 </div>\n                 <div class="mb-3">\n@@ -93,34 +93,34 @@\n                 </div>\n                 <div class="form-check mb-3">\n                   <input class="form-check-input" type="checkbox" value="" name="enabled" ${python:"checked" if bundle["enabled"] else \'\'} />\n-                  <label class="form-check-label" for="enabled">\n+                  <label class="form-check-label" for="enabled" i18n:translate="label_bundle_enabled">\n                     enabled\n                   </label>\n                 </div>\n                 <div class="mb-3">\n-                  <label for="expression" class="form-label">Condition</label>\n+                  <label for="expression" class="form-label" i18n:translate="label_bundle_condition">Condition</label>\n                   <input type="text" class="form-control" name="expression" value="${python:bundle[\'expression\']}" placeholder="expression"/>\n                 </div>\n                 <div class="mb-3">\n-                  <label for="depends" class="form-label">Depends on</label>\n+                  <label for="depends" class="form-label" i18n:translate="">Depends on</label>\n                   <input type="text" class="form-control" name="depends" value="${python:bundle[\'depends\']}" />\n                 </div>\n                 <div class="form-check mb-3">\n                   <input class="form-check-input" type="checkbox" value="1" name="load_async" ${python:"checked" if bundle["load_async"] else \'\'} />\n-                  <label class="form-check-label" for="load_async">\n+                  <label class="form-check-label" for="load_async" i18n:translate="label_bundle_js_load_async">\n                     Async\n                   </label>\n                 </div>\n                 <div class="form-check mb-3">\n                   <input class="form-check-input" type="checkbox" value="1" name="load_defer" ${python:"checked" if bundle["load_defer"] else \'\'} />\n-                  <label class="form-check-label" for="load_defer">\n+                  <label class="form-check-label" for="load_defer" i18n:translate="label_bundle_js_load_defer">\n                     Defer\n                   </label>\n                 </div>\n                 <div class="mb-3">\n-                  <button tal:condition="python:bundle[\'name\']" name="action" value="update" type="submit" class="btn btn-primary me-1">Save</button>\n-                  <button tal:condition="python:not bundle[\'name\']" name="action" value="add" type="submit" class="btn btn-success me-1">Add</button>\n-                  <button tal:condition="python:bundle[\'name\']" name="action" value="delete" type="submit" class="btn btn-danger">Delete</button>\n+                  <button tal:condition="python:bundle[\'name\']" name="action" value="update" type="submit" class="btn btn-primary me-1" i18n:translate="">Save</button>\n+                  <button tal:condition="python:not bundle[\'name\']" name="action" value="add" type="submit" class="btn btn-success me-1" i18n:translate="">Add</button>\n+                  <button tal:condition="python:bundle[\'name\']" name="action" value="delete" type="submit" class="btn btn-danger" i18n:translate="">Delete</button>\n                 </div>\n               </form>\n           </div>\ndiff --git a/Products/CMFPlone/controlpanel/browser/types.py b/Products/CMFPlone/controlpanel/browser/types.py\nindex f01ee3adfe..e534c0318c 100644\n--- a/Products/CMFPlone/controlpanel/browser/types.py\n+++ b/Products/CMFPlone/controlpanel/browser/types.py\n@@ -54,7 +54,7 @@ class TypesControlPanel(AutoExtensibleForm, form.EditForm):\n     form_name = _("Types settings")\n     control_panel_view = "content-controlpanel"\n     template = ViewPageTemplateFile(\'types.pt\')\n-    behavior_name = \'plone.app.versioningbehavior.behaviors.IVersionable\'\n+    behavior_name = \'plone.versioning\'\n \n     @button.buttonAndHandler(_(\'Save\'), name=\'save\')\n     def handleSave(self, action):\n@@ -94,7 +94,7 @@ def add_versioning_behavior(self, fti):\n         if self.behavior_name not in behaviors:\n             behaviors.append(self.behavior_name)\n         # locking must be turned on for versioning support on the type\n-        locking = \'plone.app.lockingbehavior.behaviors.ILocking\'\n+        locking = \'plone.locking\'\n         if locking not in behaviors:\n             behaviors.append(locking)\n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_types.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_types.py\nindex 57313133f2..ae275bde1a 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_types.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_types.py\n@@ -114,7 +114,7 @@ def test_disable_versioning_removes_behavior(self):\n         portal_types = self.portal.portal_types\n         doc_type = portal_types.Document\n         self.assertTrue(\n-            \'plone.app.versioningbehavior.behaviors.IVersionable\'\n+            \'plone.versioning\'\n             not in doc_type.behaviors)  # noqa\n \n     def test_enable_versioning_behavior_on_document(self):\n@@ -127,14 +127,14 @@ def test_enable_versioning_behavior_on_document(self):\n         portal_types = self.portal.portal_types\n         doc_type = portal_types.Document\n         self.assertTrue(\n-            \'plone.app.versioningbehavior.behaviors.IVersionable\'\n+            \'plone.versioning\'\n             not in doc_type.behaviors)  # noqa\n \n         self.browser.getControl(name=\'versionpolicy\').value = [\'manual\']\n         self.browser.getControl(name="form.button.Save").click()\n \n         self.assertTrue(\n-            \'plone.app.versioningbehavior.behaviors.IVersionable\'\n+            \'plone.versioning\'\n             in doc_type.behaviors)\n \n     def test_enable_versioning_behavior_on_file(self):\n@@ -149,20 +149,20 @@ def test_enable_versioning_behavior_on_file(self):\n \n         # File has no Versioning and no Locking on default, but needs it\n         self.assertTrue(\n-            \'plone.app.versioningbehavior.behaviors.IVersionable\'\n+            \'plone.versioning\'\n             not in file_type.behaviors)  # noqa\n         self.assertTrue(\n-            \'plone.app.lockingbehavior.behaviors.ILocking\'\n+            \'plone.locking\'\n             not in file_type.behaviors)  # noqa\n \n         self.browser.getControl(name=\'versionpolicy\').value = [\'manual\']\n         self.browser.getControl(\'Save\').click()\n \n         self.assertTrue(\n-            \'plone.app.versioningbehavior.behaviors.IVersionable\'\n+            \'plone.versioning\'\n             in file_type.behaviors)\n         self.assertTrue(\n-            \'plone.app.lockingbehavior.behaviors.ILocking\'\n+            \'plone.locking\'\n             in file_type.behaviors)\n \n     def test_dont_update_settings_when_switch_types(self):\ndiff --git a/Products/CMFPlone/patterns/tinymce.py b/Products/CMFPlone/patterns/tinymce.py\nindex edb2fa4cb3..1db131559b 100644\n--- a/Products/CMFPlone/patterns/tinymce.py\n+++ b/Products/CMFPlone/patterns/tinymce.py\n@@ -32,7 +32,7 @@ def get_theme(self):\n         return theming_policy().get_theme()\n \n     def get_content_css(self, style_css=""):\n-        files = [f"{self.nav_root_url}/++plone++static/plone-compiled.css"]\n+        files = []\n         if style_css:\n             files.extend(style_css.split(","))\n         content_css = self.settings.content_css or []\n@@ -94,9 +94,7 @@ def get_all_style_formats(self):\n \n     def get_tiny_config(self):\n         settings = self.settings\n-        importcss_file_filter = "%s/++plone++static/tinymce-styles.css" % (\n-            self.nav_root_url\n-        )\n+        importcss_file_filter = ""\n \n         theme = self.get_theme()\n         if theme and getattr(theme, "tinymce_styles_css", None):\ndiff --git a/Products/CMFPlone/tests/browser.txt b/Products/CMFPlone/tests/browser.txt\nindex 4e5bacb2b0..ccfa621c2d 100644\n--- a/Products/CMFPlone/tests/browser.txt\n+++ b/Products/CMFPlone/tests/browser.txt\n@@ -42,29 +42,29 @@ Test for "template id" in <body> tag. See tickets #9111/#8777\n \n     >>> browser.open(\'http://nohost/plone/front-page\')\n     >>> browser.contents\n-    \'...<body ... class="...template-document_view...\'\n+    \'...<body ...class="...template-document_view...\'\n \n     >>> browser.contents\n-    \'...<body ... class="...portaltype-document...\'\n+    \'...<body ...class="...portaltype-document...\'\n \n     >>> browser.contents\n-    \'...<body ... class="...site-plone...\'\n+    \'...<body ...class="...site-plone...\'\n \n     >>> browser.contents\n-    \'...<body ... class="...section-front-page...\'\n+    \'...<body ...class="...section-front-page...\'\n \n     >>> browser.open(\'http://nohost/plone/news\')\n     >>> browser.contents\n-    \'...<body ... class="...portaltype-collection...\'\n+    \'...<body ...class="...portaltype-collection...\'\n \n     >>> browser.contents\n-    \'...<body ... class="...template-summary_view...\'\n+    \'...<body ...class="...template-summary_view...\'\n \n     >>> browser.contents\n-    \'...<body ... class="...section-news...\'\n+    \'...<body ...class="...section-news...\'\n \n     >>> browser.contents\n-    \'...<body ... class="...site-plone...\'\n+    \'...<body ...class="...site-plone...\'\n \n Login\n \n@@ -77,10 +77,10 @@ Test explicit browser view\n \n     >>> browser.open(\'http://nohost/plone/@@dashboard\')\n     >>> browser.contents\n-    \'...<body ... class="...template-dashboard...\'\n+    \'...<body ...class="...template-dashboard...\'\n \n     >>> browser.contents\n-    \'...<body ... class="...portaltype-plone-site...\'\n+    \'...<body ...class="...portaltype-plone-site...\'\n \n     >>> browser.contents\n-    \'...<body ... class="...site-plone...\'\n+    \'...<body ...class="...site-plone...\'\ndiff --git a/Products/CMFPlone/tests/robot/test_folder_contents.robot b/Products/CMFPlone/tests/robot/test_folder_contents.robot\nindex 78092f2298..054d5f1c28 100644\n--- a/Products/CMFPlone/tests/robot/test_folder_contents.robot\n+++ b/Products/CMFPlone/tests/robot/test_folder_contents.robot\n@@ -14,6 +14,7 @@ Test Teardown  Run keywords  Plone Test Teardown\n \n *** Test cases ***************************************************************\n \n+\n Scenario: Select All items\n     Given a logged-in site administrator\n       and a folder with four pages\n@@ -23,26 +24,26 @@ Scenario: Select All items\n       and the four elements got selected\n       and the clear selection link appears\n \n-#Scenario: Clear selection\n-#    Given a site owner\n-#      And four dummy pages on test folder\n-#      And the folder contents view\n-#      And I select all the elements\n-#     When I clear the selection\n-#     Then no elements should be selected\n-\n-# XXX: This scenario only works on Firefox. In Chrome fails to do the Mouse Up\n-# and Mouse Down correctly.\n-#Scenario: Reorder Folder Contents\n-#    Given a site owner\n-#      And four dummy pages on test folder\n-#     When the folder contents view\n-#     Then the order should be 1 > 2 > 3 > 4\n-#     When I reorder the elements\n-#     Then the new order should be 4 > 3 > 2 > 1\n+Scenario: Clear selection\n+   Given a logged-in site administrator\n+     and a folder with four pages\n+     and the folder contents view\n+     And I select all the elements\n+    When I clear the selection\n+    Then no elements should be selected\n+\n+Scenario: Reorder Folder Contents\n+   Given a logged-in site administrator\n+     and a folder with four pages\n+     and the folder contents view\n+    Then The Order Should Be  1   2   3   4\n+    When I reorder the elements\n+    Then The Order Should Be  4   3   2   1\n+\n \n *** Keywords *****************************************************************\n \n+\n a folder with four pages\n     ${folder_uid}=  Create content  type=Folder  title=My Folder\n     Create content  type=Document  title=Doc1  container=${folder_uid}\n@@ -79,7 +80,7 @@ the clear selection link appears\n     Page Should Contain Element  css=a.remove-all\n \n I clear the selection\n-    Click link  id=selected\n+    Click link  id=btn-selected-items\n     Click link  css=a.remove-all\n \n no elements should be selected\n@@ -88,41 +89,17 @@ no elements should be selected\n     Checkbox Should Not Be Selected  css=tr[data-id="doc3"] input\n     Checkbox Should Not Be Selected  css=tr[data-id="doc4"] input\n \n-the order should be 1 > 2 > 3 > 4\n-    Should be above  css=tr[data-id="doc1"]  css=tr[data-id="doc2"]\n-    Should be above  css=tr[data-id="doc2"]  css=tr[data-id="doc3"]\n-    Should be above  css=tr[data-id="doc3"]  css=tr[data-id="doc4"]\n-\n I reorder the elements\n-    # Moving items could fail on a fast computer\n-    Set Selenium Speed  0.1 seconds\n-\n-    # Moves the doc2 page above the doc1 page\n-    Reorder Element  folder-contents-item-doc1  folder-contents-item-doc2\n-\n-    # Moves the doc4 page above the doc2 page\n-    Reorder Element  folder-contents-item-doc4  folder-contents-item-doc3\n-    Reorder Element  folder-contents-item-doc4  folder-contents-item-doc1\n-    Reorder Element  folder-contents-item-doc4  folder-contents-item-doc2\n-\n-    # Moves the doc3 page above the doc2 page\n-    Reorder Element  folder-contents-item-doc3  folder-contents-item-doc1\n-    Reorder Element  folder-contents-item-doc3  folder-contents-item-doc2\n-\n-    # Go back to normal speed\n-    Set Selenium Speed  0 seconds\n-\n-the new order should be 4 > 3 > 2 > 1\n-    Should be above  css=tr#folder-contents-item-doc4  css=tr#folder-contents-item-doc3\n-    Should be above  css=tr#folder-contents-item-doc3  css=tr#folder-contents-item-doc2\n-    Should be above  css=tr#folder-contents-item-doc2  css=tr#folder-contents-item-doc1\n-\n-Reorder Element\n-    [arguments]  ${element}  ${destination}\n-\n-    Mouse Down  xpath=//tr[@id=\'${element}\']/td\n-    Mouse Up    xpath=//tr[@id=\'${destination}\']/td\n-    Mouse Out   xpath=//tr[@id=\'${element}\']/td\n+    Click link  css=#btn-structure-rearrange\n+    Click element  name=reversed\n+    Click button  css=#popover-structure-rearrange .btn-primary\n+    Wait until page contains  Successfully rearranged folder\n+\n+The Order Should Be\n+    [Arguments]  ${first}  ${second}  ${third}  ${fourth}\n+    Should be above  css=tr[data-id="doc${first}"]   css=tr[data-id="doc${second}"]\n+    Should be above  css=tr[data-id="doc${second}"]  css=tr[data-id="doc${third}"]\n+    Should be above  css=tr[data-id="doc${third}"]   css=tr[data-id="doc${fourth}"]\n \n Should be above\n     [Arguments]  ${locator1}  ${locator2}\ndiff --git a/news/3294.bugfix b/news/3294.bugfix\nnew file mode 100644\nindex 0000000000..c3a4c869bf\n--- /dev/null\n+++ b/news/3294.bugfix\n@@ -0,0 +1,2 @@\n+Use behavior-names instead of python-paths in types-controlpanel\n+[pbauer]\n\\ No newline at end of file\ndiff --git a/news/3463.bugfix b/news/3463.bugfix\nnew file mode 100644\nindex 0000000000..dcd5766edf\n--- /dev/null\n+++ b/news/3463.bugfix\n@@ -0,0 +1,2 @@\n+Remove obsolete css files previously used in tinymce.\n+[pbauer]\n\\ No newline at end of file\ndiff --git a/news/3467.bugfix b/news/3467.bugfix\nnew file mode 100644\nindex 0000000000..8bb6ab4a12\n--- /dev/null\n+++ b/news/3467.bugfix\n@@ -0,0 +1,2 @@\n+Add missing i18n:translate tags\n+[erral]\ndiff --git a/news/3478.bugfix b/news/3478.bugfix\nnew file mode 100644\nindex 0000000000..b945a17dfa\n--- /dev/null\n+++ b/news/3478.bugfix\n@@ -0,0 +1,2 @@\n+Enhanced folder_contents robot tests\n+[petschki]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-04-06T15:23:48+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/d5cf031176460227c6de880d730c1dd653c3c746

Merge branch 'master' into PLIP-plone-base

Files changed:
A news/3247.breaking.1
A news/3247.breaking.2
M news/3325.breaking
D news/3247-2.breaking
D news/3247.breaking

b"diff --git a/news/3247.breaking b/news/3247.breaking\ndeleted file mode 100644\nindex b453b200ff..0000000000\n--- a/news/3247.breaking\n+++ /dev/null\n@@ -1,6 +0,0 @@\n-PLIP 3211 - Remove RequireJS.\n-PLIP 3211 - Remove default resource jQuery. It is added to the global namespace via the bundle.\n-PLIP 3211 - Remove support for conditional comments in script and style tags.\n-            It's not supported since IE10.\n-            See: https://en.wikipedia.org/wiki/Conditional_comment\n-[MrTango, thet]\ndiff --git a/news/3247.breaking.1 b/news/3247.breaking.1\nnew file mode 100644\nindex 0000000000..5b5ccd1cc1\n--- /dev/null\n+++ b/news/3247.breaking.1\n@@ -0,0 +1,9 @@\n+PLIP 3211:\n+\n+- Remove RequireJS.\n+- Remove default resource jQuery. It is added to the global namespace via the bundle.\n+- Remove support for conditional comments in script and style tags.\n+  It's not supported since IE10.\n+  See: https://en.wikipedia.org/wiki/Conditional_comment\n+\n+[MrTango, thet]\ndiff --git a/news/3247-2.breaking b/news/3247.breaking.2\nsimilarity index 100%\nrename from news/3247-2.breaking\nrename to news/3247.breaking.2\ndiff --git a/news/3325.breaking b/news/3325.breaking\nindex a34eda5b42..c77ed61735 100644\n--- a/news/3325.breaking\n+++ b/news/3325.breaking\n@@ -11,4 +11,5 @@ New resource registry to simplify CSS/JS registration.\n - A new traverser ensures uniqueness.\n - Other related bundle properties are also deprecated.\n - Comes with new, server side generated control panel.\n+\n [jensens]\n"

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-04-06T15:35:58+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/a81808b2a0223bb422329468293caef1404dce38

Merge pull request #3396 from plone/PLIP-plone-base

Plip 3395 plone base

Files changed:
A news/3395.feature
M Products/CMFPlone/CatalogTool.py
M Products/CMFPlone/DublinCore.py
M Products/CMFPlone/MigrationTool.py
M Products/CMFPlone/PasswordResetTool.py
M Products/CMFPlone/PloneBaseTool.py
M Products/CMFPlone/PloneBatch.py
M Products/CMFPlone/PloneControlPanel.py
M Products/CMFPlone/PloneTool.py
M Products/CMFPlone/Portal.py
M Products/CMFPlone/PropertiesTool.py
M Products/CMFPlone/RegistrationTool.py
M Products/CMFPlone/TranslationServiceTool.py
M Products/CMFPlone/WorkflowTool.py
M Products/CMFPlone/__init__.py
M Products/CMFPlone/browser/admin.py
M Products/CMFPlone/browser/admin.zcml
M Products/CMFPlone/browser/atd.py
M Products/CMFPlone/browser/author.py
M Products/CMFPlone/browser/configure.zcml
M Products/CMFPlone/browser/contact_info.py
M Products/CMFPlone/browser/defaultpage.py
M Products/CMFPlone/browser/login/configure.zcml
M Products/CMFPlone/browser/login/login.py
M Products/CMFPlone/browser/login/login_help.py
M Products/CMFPlone/browser/login/password_reset.py
M Products/CMFPlone/browser/navigation.py
M Products/CMFPlone/browser/navtree.py
M Products/CMFPlone/browser/ploneview.py
M Products/CMFPlone/browser/robots.py
M Products/CMFPlone/browser/search.py
M Products/CMFPlone/browser/sendto.py
M Products/CMFPlone/browser/sitelogo.py
M Products/CMFPlone/browser/syndication/adapters.py
M Products/CMFPlone/browser/syndication/configure.zcml
M Products/CMFPlone/browser/syndication/settings.py
M Products/CMFPlone/browser/syndication/tool.py
M Products/CMFPlone/browser/syndication/utils.py
M Products/CMFPlone/browser/syndication/views.py
M Products/CMFPlone/catalog.zcml
M Products/CMFPlone/controlpanel/README.rst
M Products/CMFPlone/controlpanel/bbb/editing.py
M Products/CMFPlone/controlpanel/bbb/filter.py
M Products/CMFPlone/controlpanel/bbb/language.py
M Products/CMFPlone/controlpanel/bbb/mail.py
M Products/CMFPlone/controlpanel/bbb/maintenance.py
M Products/CMFPlone/controlpanel/bbb/markup.py
M Products/CMFPlone/controlpanel/bbb/navigation.py
M Products/CMFPlone/controlpanel/bbb/search.py
M Products/CMFPlone/controlpanel/bbb/security.py
M Products/CMFPlone/controlpanel/bbb/site.py
M Products/CMFPlone/controlpanel/bbb/usergroups.py
M Products/CMFPlone/controlpanel/browser/actions.py
M Products/CMFPlone/controlpanel/browser/configure.zcml
M Products/CMFPlone/controlpanel/browser/dateandtime.py
M Products/CMFPlone/controlpanel/browser/editing.py
M Products/CMFPlone/controlpanel/browser/filter.py
M Products/CMFPlone/controlpanel/browser/imaging.py
M Products/CMFPlone/controlpanel/browser/mail.py
M Products/CMFPlone/controlpanel/browser/maintenance.py
M Products/CMFPlone/controlpanel/browser/markup.py
M Products/CMFPlone/controlpanel/browser/navigation.py
M Products/CMFPlone/controlpanel/browser/overview.py
M Products/CMFPlone/controlpanel/browser/quickinstaller.py
M Products/CMFPlone/controlpanel/browser/redirects.py
M Products/CMFPlone/controlpanel/browser/resourceregistry.py
M Products/CMFPlone/controlpanel/browser/search.py
M Products/CMFPlone/controlpanel/browser/security.py
M Products/CMFPlone/controlpanel/browser/site.py
M Products/CMFPlone/controlpanel/browser/socialmedia.py
M Products/CMFPlone/controlpanel/browser/syndication.py
M Products/CMFPlone/controlpanel/browser/tinymce.py
M Products/CMFPlone/controlpanel/browser/types.py
M Products/CMFPlone/controlpanel/browser/usergroups.py
M Products/CMFPlone/controlpanel/events.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_editing_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_filter_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_mail_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_maintenance_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_markup_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_navigation_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_search_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_security_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_site_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_usergroups_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_editing.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_filter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_mail.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_markup.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_navigation.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_search.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_security.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_site.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_dateandtime.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_editing.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_events.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_filter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_mail.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_markup.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_navigation.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_search.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_security.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_site.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_types.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_usergroups.py
M Products/CMFPlone/controlpanel/tests/test_upgrades1.zcml
M Products/CMFPlone/controlpanel/tests/test_upgrades2.zcml
M Products/CMFPlone/defaultpage.py
M Products/CMFPlone/exportimport/configure.zcml
M Products/CMFPlone/exportimport/controlpanel.py
M Products/CMFPlone/exportimport/propertiestool.py
M Products/CMFPlone/exportimport/tests/testControlPanel.py
M Products/CMFPlone/exportimport/tests/testPropertiesTool.py
M Products/CMFPlone/factory.py
M Products/CMFPlone/i18nl10n.py
M Products/CMFPlone/interfaces/__init__.py
M Products/CMFPlone/interfaces/atd.py
M Products/CMFPlone/interfaces/basetool.py
M Products/CMFPlone/interfaces/breadcrumbs.py
M Products/CMFPlone/interfaces/constrains.py
M Products/CMFPlone/interfaces/controlpanel.py
M Products/CMFPlone/interfaces/defaultpage.py
M Products/CMFPlone/interfaces/events.py
M Products/CMFPlone/interfaces/installable.py
M Products/CMFPlone/interfaces/interface.py
M Products/CMFPlone/interfaces/language.py
M Products/CMFPlone/interfaces/login.py
M Products/CMFPlone/interfaces/migration.py
M Products/CMFPlone/interfaces/password_reset.py
M Products/CMFPlone/interfaces/patterns.py
M Products/CMFPlone/interfaces/properties.py
M Products/CMFPlone/interfaces/resources.py
M Products/CMFPlone/interfaces/siteroot.py
M Products/CMFPlone/interfaces/structure.py
M Products/CMFPlone/interfaces/syndication.py
M Products/CMFPlone/interfaces/translationservice.py
M Products/CMFPlone/log.py
M Products/CMFPlone/patches/sendmail.py
M Products/CMFPlone/patterns/configure.zcml
M Products/CMFPlone/patterns/settings.py
M Products/CMFPlone/patterns/tinymce.py
M Products/CMFPlone/patterns/view.py
M Products/CMFPlone/permissions.py
M Products/CMFPlone/profiles.zcml
M Products/CMFPlone/resources/browser/combine.py
M Products/CMFPlone/resources/browser/resource.py
M Products/CMFPlone/setuphandlers.py
M Products/CMFPlone/tests/csrf.txt
M Products/CMFPlone/tests/dummy.py
M Products/CMFPlone/tests/pwreset_browser.rst
M Products/CMFPlone/tests/robot/robot_setup.py
M Products/CMFPlone/tests/testBatch.py
M Products/CMFPlone/tests/testBrowserDefault.py
M Products/CMFPlone/tests/testEmailLogin.py
M Products/CMFPlone/tests/testIImagingSchema.py
M Products/CMFPlone/tests/testNavTree.py
M Products/CMFPlone/tests/testNavigationView.py
M Products/CMFPlone/tests/testPloneTool.py
M Products/CMFPlone/tests/testPortalCreation.py
M Products/CMFPlone/tests/testQueryCatalog.py
M Products/CMFPlone/tests/testRegistrationTool.py
M Products/CMFPlone/tests/testResourceRegistries.py
M Products/CMFPlone/tests/testSearch.py
M Products/CMFPlone/tests/testSyndication.py
M Products/CMFPlone/tests/testURLTool.py
M Products/CMFPlone/tests/test_defaultpage.py
M Products/CMFPlone/tests/test_doctests.py
M Products/CMFPlone/tests/test_mails.py
M Products/CMFPlone/tests/test_patternsettings.py
M Products/CMFPlone/tests/test_redirect_after_login.py
M Products/CMFPlone/tests/test_robots_txt.py
M Products/CMFPlone/tests/test_sitelogo.py
M Products/CMFPlone/tests/test_utils.py
M Products/CMFPlone/traversal.py
M Products/CMFPlone/utils.py
M Products/CMFPlone/workflow.py
M setup.py
D Products/CMFPlone/_compat.py
D Products/CMFPlone/tests/messages.txt
D Products/CMFPlone/tests/test_l18nl10n.py

b'diff --git a/Products/CMFPlone/CatalogTool.py b/Products/CMFPlone/CatalogTool.py\nindex 03810c863e..be18058b5f 100644\n--- a/Products/CMFPlone/CatalogTool.py\n+++ b/Products/CMFPlone/CatalogTool.py\n@@ -21,13 +21,13 @@\n from Products.CMFCore.utils import _getAuthenticatedUser\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import DISCUSSION_ANNOTATION_KEY\n-from Products.CMFPlone.interfaces import INonStructuralFolder\n-from Products.CMFPlone.interfaces import IPloneCatalogTool\n+from plone.base.interfaces import INonStructuralFolder\n+from plone.base.interfaces import IPloneCatalogTool\n from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n from Products.CMFPlone.utils import base_hasattr\n from Products.CMFPlone.utils import human_readable_size\n from Products.CMFPlone.utils import safe_callable\n-from Products.CMFPlone.utils import safe_unicode\n+from plone.base.utils import safe_text\n from Products.ZCatalog.ZCatalog import ZCatalog\n from time import process_time\n from zExceptions import Unauthorized\n@@ -51,7 +51,7 @@\n _marker = object()\n \n MAX_SORTABLE_TITLE = 40\n-BLACKLISTED_INTERFACES = frozenset((\n+DENIED_INTERFACES = frozenset((\n     \'AccessControl.interfaces.IOwned\',\n     \'AccessControl.interfaces.IPermissionMappingSupport\',\n     \'AccessControl.interfaces.IRoleManager\',\n@@ -92,8 +92,8 @@\n     \'Products.CMFCore.interfaces._content.IWorkflowAware\',\n     \'Products.CMFDynamicViewFTI.interfaces.IBrowserDefault\',\n     \'Products.CMFDynamicViewFTI.interfaces.ISelectableBrowserDefault\',\n-    \'Products.CMFPlone.interfaces.constrains.IConstrainTypes\',\n-    \'Products.CMFPlone.interfaces.constrains.ISelectableConstrainTypes\',\n+    \'plone.base.interfaces.constrains.IConstrainTypes\',\n+    \'plone.base.interfaces.constrains.ISelectableConstrainTypes\',\n     \'Products.GenericSetup.interfaces.IDAVAware\',\n     \'webdav.EtagSupport.EtagBaseInterface\',\n     \'webdav.interfaces.IDAVCollection\',\n@@ -112,13 +112,8 @@\n     \'zope.interface.Interface\',\n ))\n \n-\n-@deprecate(\'Use catalog.getAllBrains() instead. \' +\n-           \'catalog_get_all will be removed in Plone 6\')\n-def catalog_get_all(catalog, unique_idx=\'UID\'):\n-    """Get all brains from the catalog.\n-    """\n-    return catalog.getAllBrains()\n+# bbb, remove in Plone 7\n+BLACKLISTED_INTERFACES = DENIED_INTERFACES\n \n \n @indexer(Interface)\n@@ -157,7 +152,7 @@ def allowedRolesAndUsers(obj):\n def object_provides(obj):\n     return tuple(\n         [i.__identifier__ for i in providedBy(obj).flattened()\n-         if i.__identifier__ not in BLACKLISTED_INTERFACES]\n+         if i.__identifier__ not in DENIED_INTERFACES]\n     )\n \n \n@@ -178,7 +173,7 @@ def sortable_title(obj):\n \n         if isinstance(title, str):\n             # Ignore case, normalize accents, strip spaces\n-            sortabletitle = mapUnicode(safe_unicode(title)).lower().strip()\n+            sortabletitle = mapUnicode(safe_text(title)).lower().strip()\n             # Replace numbers with zero filled numbers\n             sortabletitle = num_sort_regex.sub(zero_fill, sortabletitle)\n             # Truncate to prevent bloat, take bits from start and end\ndiff --git a/Products/CMFPlone/DublinCore.py b/Products/CMFPlone/DublinCore.py\nindex 8e1d12b481..1cb153139a 100644\n--- a/Products/CMFPlone/DublinCore.py\n+++ b/Products/CMFPlone/DublinCore.py\n@@ -12,22 +12,21 @@\n ##############################################################################\n """ Dublin Core support for content types. """\n \n+from AccessControl.class_init import InitializeClass\n from AccessControl.SecurityInfo import ClassSecurityInfo\n from AccessControl.SecurityManagement import getSecurityManager\n from Acquisition import aq_base\n-from AccessControl.class_init import InitializeClass\n from App.special_dtml import DTMLFile\n from DateTime.DateTime import DateTime\n from OFS.PropertyManager import PropertyManager\n-from zope.interface import implementer\n-\n+from plone.base.permissions import ModifyPortalContent\n+from plone.base.permissions import View\n from Products.CMFCore.interfaces import ICatalogableDublinCore\n from Products.CMFCore.interfaces import IDublinCore\n from Products.CMFCore.interfaces import IMutableDublinCore\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.permissions import ModifyPortalContent\n-from Products.CMFPlone.permissions import View\n from Products.CMFPlone.utils import WWW_DIR\n+from zope.interface import implementer\n \n \n _marker = []\ndiff --git a/Products/CMFPlone/MigrationTool.py b/Products/CMFPlone/MigrationTool.py\nindex 95dfaff1d8..2fcbb215e0 100644\n--- a/Products/CMFPlone/MigrationTool.py\n+++ b/Products/CMFPlone/MigrationTool.py\n@@ -8,7 +8,7 @@\n from Products.CMFCore.utils import registerToolInterface\n from Products.CMFCore.utils import UniqueObject\n from Products.CMFPlone.factory import _DEFAULT_PROFILE\n-from Products.CMFPlone.interfaces import IMigrationTool\n+from plone.base.interfaces import IMigrationTool\n from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n from io import StringIO\n from ZODB.POSException import ConflictError\ndiff --git a/Products/CMFPlone/PasswordResetTool.py b/Products/CMFPlone/PasswordResetTool.py\nindex 1a20755edd..d15ecc7b20 100644\n--- a/Products/CMFPlone/PasswordResetTool.py\n+++ b/Products/CMFPlone/PasswordResetTool.py\n@@ -13,8 +13,8 @@\n from Products.CMFCore.permissions import ManagePortal\n from Products.CMFCore.utils import getToolByName\n from Products.CMFCore.utils import UniqueObject\n-from Products.CMFPlone.interfaces import IPWResetTool\n-from Products.CMFPlone.interfaces import ISecuritySchema\n+from plone.base.interfaces import IPWResetTool\n+from plone.base.interfaces import ISecuritySchema\n from Products.CMFPlone.RegistrationTool import get_member_by_login_name\n from zope.component import getUtility\n from zope.interface import implementer\ndiff --git a/Products/CMFPlone/PloneBaseTool.py b/Products/CMFPlone/PloneBaseTool.py\nindex 821724d690..d0d0a9860d 100644\n--- a/Products/CMFPlone/PloneBaseTool.py\n+++ b/Products/CMFPlone/PloneBaseTool.py\n@@ -1,6 +1,6 @@\n from AccessControl.class_init import InitializeClass\n from AccessControl import ClassSecurityInfo\n-from Products.CMFPlone.interfaces import IPloneBaseTool\n+from plone.base.interfaces import IPloneBaseTool\n from Acquisition import aq_base\n from Acquisition import aq_parent\n from Acquisition import aq_inner\ndiff --git a/Products/CMFPlone/PloneBatch.py b/Products/CMFPlone/PloneBatch.py\nindex 727a0bebff..f0f2c5eaa2 100644\n--- a/Products/CMFPlone/PloneBatch.py\n+++ b/Products/CMFPlone/PloneBatch.py\n@@ -1,72 +1,3 @@\n-from ZTUtils import make_query\n+from zope.deprecation import moved\n \n-from plone.batching.batch import QuantumBatch\n-from plone.batching.utils import calculate_pagerange\n-\n-from zope.deprecation import deprecated\n-\n-\n-class Batch(QuantumBatch):\n-\n-    b_start_str = \'b_start\'\n-\n-    def __init__(self, sequence, size, start=0, end=0, orphan=0,\n-                 overlap=0, pagerange=7, quantumleap=0,\n-                 b_start_str=\'b_start\'):\n-        super().__init__(sequence, size, start,\n-                                    end, orphan, overlap,\n-                                    pagerange, quantumleap)\n-        self.b_start_str = b_start_str\n-\n-    def __len__(self):\n-        # Note: Using len() was deprecated for several years.\n-        # It was recommended to explicitly either use the `length` attribute\n-        # for the size of the current page, which is what we return now,\n-        # or use the `sequence_length` attribute for the size of the\n-        # entire sequence.\n-        # But the deprecation was reverted for Plone 5.2.3,\n-        # because core code in Products.PageTemplates called `len`\n-        # on batches, making the deprecation warning unavoidable\n-        # and thus unnecessary.\n-        # See https://github.com/plone/Products.CMFPlone/issues/3176\n-        return self.length\n-\n-    def __bool__(self):\n-        # Without __bool__ a bool(self) would call len(self), which\n-        # gives a deprecation warning.\n-        return bool(self.length)\n-\n-    # For Python 2 compatibility:\n-    __nonzero__ = __bool__\n-\n-    def initialize(self, start, end, size):\n-        super().initialize(start, end, size)\n-        self.pagerange, self.pagerangestart, self.pagerangeend = \\\n-            calculate_pagerange(self.pagenumber, self.numpages, self.pagerange)\n-\n-    def pageurl(self, formvariables, pagenumber=-1):\n-        # Makes the url for a given page.\n-        if pagenumber == -1:\n-            pagenumber = self.pagenumber\n-        b_start = pagenumber * (self.pagesize - self.overlap) - self.pagesize\n-        return make_query(formvariables, {self.b_start_str: b_start})\n-\n-    def navurls(self, formvariables, navlist=None):\n-        # Returns the page number and url for the navigation quick links.\n-        if navlist is None:\n-            navlist = []\n-        if not navlist:\n-            navlist = self.navlist\n-        return map(lambda x, formvariables=formvariables:\n-                   (x, self.pageurl(formvariables, x)), navlist)\n-\n-    def prevurls(self, formvariables):\n-        # Helper method to get prev navigation list from templates.\n-        return self.navurls(formvariables, self.previous_pages)\n-\n-    def nexturls(self, formvariables):\n-        # Helper method to get next navigation list from templates.\n-        return self.navurls(formvariables, self.next_pages)\n-\n-    prevlist = QuantumBatch.previous_pages\n-    nextlist = QuantumBatch.next_pages\n+moved(\'plone.base.batch\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/PloneControlPanel.py b/Products/CMFPlone/PloneControlPanel.py\nindex 6b0d4503a7..0748f25765 100644\n--- a/Products/CMFPlone/PloneControlPanel.py\n+++ b/Products/CMFPlone/PloneControlPanel.py\n@@ -12,7 +12,7 @@\n from Products.CMFCore.utils import registerToolInterface\n from Products.CMFCore.utils import UniqueObject\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import IControlPanel\n+from plone.base.interfaces import IControlPanel\n from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n from zope.component.hooks import getSite\n from zope.i18n import translate\ndiff --git a/Products/CMFPlone/PloneTool.py b/Products/CMFPlone/PloneTool.py\nindex 2f0d463723..216f8c251f 100644\n--- a/Products/CMFPlone/PloneTool.py\n+++ b/Products/CMFPlone/PloneTool.py\n@@ -1,16 +1,17 @@\n from AccessControl import ClassSecurityInfo\n from AccessControl import getSecurityManager\n from AccessControl import Unauthorized\n+from AccessControl.class_init import InitializeClass\n from AccessControl.requestmethod import postonly\n from Acquisition import aq_base\n from Acquisition import aq_inner\n from Acquisition import aq_parent\n-from AccessControl.class_init import InitializeClass\n from ComputedAttribute import ComputedAttribute\n from DateTime import DateTime\n from email.utils import getaddresses\n from OFS.ObjectManager import bad_id\n from OFS.SimpleItem import SimpleItem\n+from plone.base.utils import safe_text\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.interfaces import IDublinCore\n from Products.CMFCore.interfaces import IMutableDublinCore\n@@ -24,22 +25,21 @@\n from Products.CMFCore.WorkflowCore import WorkflowException\n from Products.CMFDynamicViewFTI.interfaces import IBrowserDefault\n from Products.CMFPlone import utils\n-from Products.CMFPlone.defaultpage import check_default_page_via_view\n-from Products.CMFPlone.defaultpage import get_default_page_via_view\n+from plone.base.defaultpage import check_default_page_via_view\n+from plone.base.defaultpage import get_default_page_via_view\n from Products.CMFPlone.events import ReorderedEvent\n-from Products.CMFPlone.interfaces import INonStructuralFolder\n-from Products.CMFPlone.interfaces import IPloneTool\n-from Products.CMFPlone.interfaces import ISearchSchema\n-from Products.CMFPlone.interfaces import ISecuritySchema\n-from Products.CMFPlone.interfaces import ISiteSchema\n+from plone.base.interfaces import INonStructuralFolder\n+from plone.base.interfaces import IPloneTool\n+from plone.base.interfaces import ISearchSchema\n+from plone.base.interfaces import ISecuritySchema\n+from plone.base.interfaces import ISiteSchema\n+from Products.CMFPlone.log import log\n from Products.CMFPlone.log import log_deprecated\n+from Products.CMFPlone.log import log_exc\n from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n from Products.CMFPlone.PloneFolder import ReplaceableWrapper\n from Products.CMFPlone.utils import base_hasattr\n-from Products.CMFPlone.utils import log\n-from Products.CMFPlone.utils import log_exc\n from Products.CMFPlone.utils import safe_hasattr\n-from Products.CMFPlone.utils import safe_unicode\n from Products.CMFPlone.utils import transaction_note\n from Products.statusmessages.interfaces import IStatusMessage\n from urllib import parse\n@@ -262,7 +262,7 @@ def _makeTransactionNote(self, obj, msg=\'\'):\n             msg = relative_path + \'/\' + obj.title_or_id() \\\n                 + \' has been modified.\'\n         if not transaction.get().description:\n-            transaction_note(safe_unicode(msg))\n+            transaction_note(safe_text(msg))\n \n     @security.public\n     def contentEdit(self, obj, **kwargs):\n@@ -525,7 +525,7 @@ def isDefaultPage(self, obj, request=None):\n     @security.public\n     def getDefaultPage(self, obj, request=None):\n         # Given a folderish item, find out if it has a default-page using\n-        # the lookup rules of Plone (see Products.CMFPlone/defaultpage.py).\n+        # the lookup rules of Plone (see plone.base.defaultpage).\n         # Lookup happens over a view, for which in theory a different\n         # implementation may be used.\n         if request is None:\ndiff --git a/Products/CMFPlone/Portal.py b/Products/CMFPlone/Portal.py\nindex 024a9e49cf..de02c143f2 100644\n--- a/Products/CMFPlone/Portal.py\n+++ b/Products/CMFPlone/Portal.py\n@@ -24,8 +24,8 @@\n from Products.CMFCore.utils import UniqueObject\n from Products.CMFPlone import bbb\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces.siteroot import IPloneSiteRoot\n-from Products.CMFPlone.interfaces.syndication import ISyndicatable\n+from plone.base.interfaces.siteroot import IPloneSiteRoot\n+from plone.base.interfaces.syndication import ISyndicatable\n from Products.CMFPlone.permissions import AddPortalContent\n from Products.CMFPlone.permissions import AddPortalFolders\n from Products.CMFPlone.permissions import ListPortalMembers\ndiff --git a/Products/CMFPlone/PropertiesTool.py b/Products/CMFPlone/PropertiesTool.py\nindex 7ceebf2583..d8ce537a1d 100644\n--- a/Products/CMFPlone/PropertiesTool.py\n+++ b/Products/CMFPlone/PropertiesTool.py\n@@ -12,7 +12,7 @@\n from OFS.SimpleItem import SimpleItem\n from AccessControl import ClassSecurityInfo\n from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n-from Products.CMFPlone.interfaces \\\n+from plone.base.interfaces \\\n     import IPropertiesTool, ISimpleItemWithProperties\n from Products.CMFPlone.utils import WWW_DIR\n from Products.MailHost.interfaces import IMailHost\ndiff --git a/Products/CMFPlone/RegistrationTool.py b/Products/CMFPlone/RegistrationTool.py\nindex 93dc132e4a..663c967d51 100644\n--- a/Products/CMFPlone/RegistrationTool.py\n+++ b/Products/CMFPlone/RegistrationTool.py\n@@ -9,6 +9,7 @@\n from Acquisition import aq_chain\n from email import message_from_string\n from hashlib import md5\n+from plone.base.permissions import ManagePortal\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.interfaces import ISiteRoot\n from Products.CMFCore.permissions import AddPortalMember\n@@ -16,8 +17,7 @@\n from Products.CMFCore.utils import _checkPermission\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import ISecuritySchema\n-from Products.CMFPlone.permissions import ManagePortal\n+from plone.base.interfaces import ISecuritySchema\n from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n from Products.CMFPlone.PloneTool import EMAIL_RE\n from Products.PluggableAuthService.interfaces.authservice import IPluggableAuthService  # noqa: E501\ndiff --git a/Products/CMFPlone/TranslationServiceTool.py b/Products/CMFPlone/TranslationServiceTool.py\nindex 6298e3b69e..086af2ae6a 100644\n--- a/Products/CMFPlone/TranslationServiceTool.py\n+++ b/Products/CMFPlone/TranslationServiceTool.py\n@@ -15,9 +15,9 @@\n from .i18nl10n import weekdayname_msgid_abbr\n from .i18nl10n import weekdayname_msgid_short\n from OFS.SimpleItem import SimpleItem\n+from plone.base import PloneLocalesMessageFactory as PLMF\n from Products.CMFCore.utils import UniqueObject\n-from Products.CMFPlone import PloneLocalesMessageFactory as PLMF\n-from Products.CMFPlone.interfaces import ITranslationServiceTool\n+from plone.base.interfaces import ITranslationServiceTool\n from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n from zope.i18n import translate\n from zope.interface import implementer\ndiff --git a/Products/CMFPlone/WorkflowTool.py b/Products/CMFPlone/WorkflowTool.py\nindex 31a9cf8203..7085bb42c5 100644\n--- a/Products/CMFPlone/WorkflowTool.py\n+++ b/Products/CMFPlone/WorkflowTool.py\n@@ -2,7 +2,7 @@\n \n from Products.CMFCore.utils import getToolByName\n from Products.CMFCore.WorkflowTool import WorkflowTool as BaseTool\n-from Products.CMFPlone.interfaces import IWorkflowChain\n+from plone.base.interfaces import IWorkflowChain\n from ZODB.POSException import ConflictError\n from Acquisition import aq_base\n \ndiff --git a/Products/CMFPlone/__init__.py b/Products/CMFPlone/__init__.py\nindex e54581a80d..e3778648fb 100644\n--- a/Products/CMFPlone/__init__.py\n+++ b/Products/CMFPlone/__init__.py\n@@ -1,7 +1,9 @@\n from App.ImageFile import ImageFile\n+\n import os\n import sys\n import pkg_resources\n+import zope.deferredimport\n \n __version__ = pkg_resources.require("Products.CMFPlone")[0].version\n \n@@ -17,6 +19,13 @@\n \n DISCUSSION_ANNOTATION_KEY = \'plone.app.discussion:conversation\'\n \n+zope.deferredimport.initialize()\n+zope.deferredimport.deprecated(\n+    "Import from plone.base instead (to be removed in Plone 7)",\n+    PloneMessageFactory=\'plone.base:PloneMessageFactory\',\n+    PloneLocalesMessageFactory=\'plone.base:PloneMessageFactory\',\n+)\n+\n \n def initialize(context):\n \n@@ -199,16 +208,7 @@ def initialize(context):\n         visibility=None\n     )\n \n-\n-# Import PloneMessageFactory to create messages in the plone domain\n-from zope.i18nmessageid import MessageFactory\n-PloneMessageFactory = MessageFactory(\'plone\')\n-\n-# Import PloneLocalesMessageFactory to create messages in the\n-# plonelocales domain\n-from zope.i18nmessageid import MessageFactory\n-PloneLocalesMessageFactory = MessageFactory(\'plonelocales\')\n-\n # Apply early monkey patches.  For these patches, it is too late if we do this\n # in the initialize method.\n from Products.CMFPlone import earlypatches  # noqa\n+\ndiff --git a/Products/CMFPlone/_compat.py b/Products/CMFPlone/_compat.py\ndeleted file mode 100644\nindex 283564f68a..0000000000\n--- a/Products/CMFPlone/_compat.py\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-from json import dumps\n-\n-\n-def dump_json_to_text(obj):\n-    \'\'\' Encode an obj into a text\n-    \'\'\'\n-    text = dumps(obj, indent=4)\n-    if not isinstance(text, str):\n-        text = text.decode(\'utf8\')\n-    return text\ndiff --git a/Products/CMFPlone/browser/admin.py b/Products/CMFPlone/browser/admin.py\nindex 50fdc7b4ac..dfa3df808c 100644\n--- a/Products/CMFPlone/browser/admin.py\n+++ b/Products/CMFPlone/browser/admin.py\n@@ -4,8 +4,8 @@\n from Products.CMFCore.permissions import ManagePortal\n from Products.CMFPlone.factory import _DEFAULT_PROFILE\n from Products.CMFPlone.factory import addPloneSite\n-from Products.CMFPlone.interfaces import INonInstallable\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n+from plone.base.interfaces import INonInstallable\n+from plone.base.interfaces import IPloneSiteRoot\n from Products.CMFPlone.utils import get_installer\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.GenericSetup import BASE, EXTENSION\ndiff --git a/Products/CMFPlone/browser/admin.zcml b/Products/CMFPlone/browser/admin.zcml\nindex 12228bfc20..fdde628d17 100644\n--- a/Products/CMFPlone/browser/admin.zcml\n+++ b/Products/CMFPlone/browser/admin.zcml\n@@ -2,7 +2,7 @@\n            xmlns:browser="http://namespaces.zope.org/browser">\n \n   <browser:view\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       name="plone-frontpage-setup"\n       class=".admin.FrontPage"\n       permission="zope.Public"\n@@ -25,7 +25,7 @@\n       />\n \n   <browser:page\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       name="plone-upgrade"\n       class=".admin.Upgrade"\n       permission="cmf.ManagePortal"\ndiff --git a/Products/CMFPlone/browser/atd.py b/Products/CMFPlone/browser/atd.py\nindex 05fe5a35c2..a4dc2d4201 100644\n--- a/Products/CMFPlone/browser/atd.py\n+++ b/Products/CMFPlone/browser/atd.py\n@@ -2,8 +2,8 @@\n from zope.component import getUtility\n from plone.registry.interfaces import IRegistry\n from http import client as http_client\n-from Products.CMFPlone.interfaces import ITinyMCESchema\n-from Products.CMFPlone.interfaces.atd import IATDProxyView\n+from plone.base.interfaces import ITinyMCESchema\n+from plone.base.interfaces.atd import IATDProxyView\n from zope.interface import implementer\n \n \ndiff --git a/Products/CMFPlone/browser/author.py b/Products/CMFPlone/browser/author.py\nindex 3247e3585c..05d92acabf 100644\n--- a/Products/CMFPlone/browser/author.py\n+++ b/Products/CMFPlone/browser/author.py\n@@ -2,8 +2,8 @@\n \n from Products.CMFCore.interfaces import IPropertiesTool\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import ISecuritySchema\n-from Products.CMFPlone.interfaces.controlpanel import IMailSchema\n+from plone.base.interfaces import ISecuritySchema\n+from plone.base.interfaces.controlpanel import IMailSchema\n from Products.CMFPlone.utils import getToolByName\n from Products.CMFPlone.utils import pretty_title_or_id\n from Products.Five.browser import BrowserView\ndiff --git a/Products/CMFPlone/browser/configure.zcml b/Products/CMFPlone/browser/configure.zcml\nindex 726123c677..e450097538 100644\n--- a/Products/CMFPlone/browser/configure.zcml\n+++ b/Products/CMFPlone/browser/configure.zcml\n@@ -138,7 +138,7 @@\n       />\n \n   <browser:page\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       name="author"\n       class=".author.AuthorView"\n       permission="zope.Public"\n@@ -146,7 +146,7 @@\n       />\n \n   <browser:page\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       name="author-feedback-template"\n       permission="zope.Public"\n       template="templates/author_feedback_template.pt"\n@@ -232,7 +232,7 @@\n       name="default_page"\n       class=".defaultpage.DefaultPage"\n       permission="zope.Public"\n-      allowed_interface="Products.CMFPlone.interfaces.defaultpage.IDefaultPage"\n+      allowed_interface="plone.base.interfaces.defaultpage.IDefaultPage"\n       />\n \n   <browser:page\ndiff --git a/Products/CMFPlone/browser/contact_info.py b/Products/CMFPlone/browser/contact_info.py\nindex 9d8067f323..1c2dcd3fc5 100644\n--- a/Products/CMFPlone/browser/contact_info.py\n+++ b/Products/CMFPlone/browser/contact_info.py\n@@ -1,7 +1,7 @@\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n from Products.CMFPlone.browser.interfaces import IContactForm\n-from Products.CMFPlone.interfaces.controlpanel import IMailSchema\n+from plone.base.interfaces.controlpanel import IMailSchema\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.statusmessages.interfaces import IStatusMessage\n from email.mime.text import MIMEText\ndiff --git a/Products/CMFPlone/browser/defaultpage.py b/Products/CMFPlone/browser/defaultpage.py\nindex 57446ec69a..b8523814e3 100644\n--- a/Products/CMFPlone/browser/defaultpage.py\n+++ b/Products/CMFPlone/browser/defaultpage.py\n@@ -1,7 +1,7 @@\n from Acquisition import aq_inner\n-from Products.CMFPlone.interfaces.defaultpage import IDefaultPage\n-from Products.CMFPlone.defaultpage import get_default_page\n-from Products.CMFPlone.defaultpage import is_default_page\n+from plone.base.interfaces.defaultpage import IDefaultPage\n+from plone.base.defaultpage import get_default_page\n+from plone.base.defaultpage import is_default_page\n from Products.Five.browser import BrowserView\n from zope.interface import implementer\n \ndiff --git a/Products/CMFPlone/browser/login/configure.zcml b/Products/CMFPlone/browser/login/configure.zcml\nindex f576522ac8..a3aeb79489 100644\n--- a/Products/CMFPlone/browser/login/configure.zcml\n+++ b/Products/CMFPlone/browser/login/configure.zcml\n@@ -145,7 +145,7 @@\n \n     <browser:page\n         name="explainPWResetTool"\n-        for="Products.CMFPlone.interfaces.IPWResetTool"\n+        for="plone.base.interfaces.IPWResetTool"\n         class=".password_reset.ExplainPWResetToolView"\n         template="templates/explainPWResetTool.pt"\n         permission="zope2.ViewManagementScreens"\ndiff --git a/Products/CMFPlone/browser/login/login.py b/Products/CMFPlone/browser/login/login.py\nindex b4b8f2af93..d655c226ea 100644\n--- a/Products/CMFPlone/browser/login/login.py\n+++ b/Products/CMFPlone/browser/login/login.py\n@@ -3,12 +3,12 @@\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import IForcePasswordChange\n-from Products.CMFPlone.interfaces import IInitialLogin\n-from Products.CMFPlone.interfaces import ILoginForm\n-from Products.CMFPlone.interfaces import ILoginFormSchema\n-from Products.CMFPlone.interfaces import IRedirectAfterLogin\n-from Products.CMFPlone.interfaces import ISecuritySchema\n+from plone.base.interfaces import IForcePasswordChange\n+from plone.base.interfaces import IInitialLogin\n+from plone.base.interfaces import ILoginForm\n+from plone.base.interfaces import ILoginFormSchema\n+from plone.base.interfaces import IRedirectAfterLogin\n+from plone.base.interfaces import ISecuritySchema\n from Products.Five.browser import BrowserView\n from Products.statusmessages.interfaces import IStatusMessage\n from urllib import parse\ndiff --git a/Products/CMFPlone/browser/login/login_help.py b/Products/CMFPlone/browser/login/login_help.py\nindex 10fd9c502a..7409a585e8 100644\n--- a/Products/CMFPlone/browser/login/login_help.py\n+++ b/Products/CMFPlone/browser/login/login_help.py\n@@ -3,11 +3,11 @@\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import ILoginHelpForm\n-from Products.CMFPlone.interfaces import ILoginHelpFormSchema\n-from Products.CMFPlone.interfaces import ISecuritySchema\n-from Products.CMFPlone.interfaces.controlpanel import IMailSchema\n-from Products.CMFPlone.utils import safe_unicode\n+from plone.base.interfaces import ILoginHelpForm\n+from plone.base.interfaces import ILoginHelpFormSchema\n+from plone.base.interfaces import ISecuritySchema\n+from plone.base.interfaces.controlpanel import IMailSchema\n+from plone.base.utils import safe_text\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.statusmessages.interfaces import IStatusMessage\n from smtplib import SMTPException\n@@ -180,7 +180,7 @@ def send_username(self, portal, userinfo):\n \n     def encode_mail_header(self, text):\n         """ Encodes text into correctly encoded email header """\n-        return Header(safe_unicode(text), \'utf-8\')\n+        return Header(safe_text(text), \'utf-8\')\n \n     def encoded_mail_sender(self):\n         """ returns encoded version of Portal name <portal_email> """\ndiff --git a/Products/CMFPlone/browser/login/password_reset.py b/Products/CMFPlone/browser/login/password_reset.py\nindex 98ebe496cd..1c2dfb663b 100644\n--- a/Products/CMFPlone/browser/login/password_reset.py\n+++ b/Products/CMFPlone/browser/login/password_reset.py\n@@ -2,22 +2,23 @@\n from DateTime import DateTime\n from email.header import Header\n from plone.app.layout.navigation.interfaces import INavigationRoot\n+from plone.base.interfaces import IPasswordResetToolView\n+from plone.base.interfaces.controlpanel import IMailSchema\n+from plone.base.utils import safe_text\n+from plone.base.utils import safeToInt\n from plone.memoize import view\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import IPasswordResetToolView\n-from Products.CMFPlone.interfaces.controlpanel import IMailSchema\n from Products.CMFPlone.PasswordResetTool import ExpiredRequestError\n from Products.CMFPlone.PasswordResetTool import InvalidRequestError\n from Products.CMFPlone.RegistrationTool import get_member_by_login_name\n-from Products.CMFPlone.utils import safe_unicode\n-from Products.CMFPlone.utils import safeToInt\n from Products.Five import BrowserView\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.PlonePAS.events import UserInitialLoginInEvent\n from Products.PlonePAS.events import UserLoggedInEvent\n-from Products.PluggableAuthService.interfaces.plugins import ICredentialsUpdatePlugin  # noqa\n+from Products.PluggableAuthService.interfaces.plugins import \\\n+    ICredentialsUpdatePlugin\n from Products.statusmessages.interfaces import IStatusMessage\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n@@ -39,7 +40,7 @@ def portal_state(self):\n \n     def encode_mail_header(self, text):\n         """ Encodes text into correctly encoded email header """\n-        return Header(safe_unicode(text), \'utf-8\')\n+        return Header(safe_text(text), \'utf-8\')\n \n     def encoded_mail_sender(self):\n         """ returns encoded version of Portal name <portal_email> """\n@@ -55,7 +56,7 @@ def registered_notify_subject(self):\n             _(\n                 \'mailtemplate_user_account_info\',\n                 default=\'User Account Information for ${portal_name}\',\n-                mapping={\'portal_name\': safe_unicode(portal_name)},\n+                mapping={\'portal_name\': safe_text(portal_name)},\n             ),\n             context=self.request,\n         )\ndiff --git a/Products/CMFPlone/browser/navigation.py b/Products/CMFPlone/browser/navigation.py\nindex e90e29d651..eb76b1d18d 100644\n--- a/Products/CMFPlone/browser/navigation.py\n+++ b/Products/CMFPlone/browser/navigation.py\n@@ -10,9 +10,9 @@\n from Products.CMFPlone.browser.interfaces import INavigationTabs\n from Products.CMFPlone.browser.interfaces import ISiteMap\n from Products.CMFPlone.browser.navtree import SitemapQueryBuilder\n-from Products.CMFPlone.defaultpage import check_default_page_via_view\n-from Products.CMFPlone.interfaces import IHideFromBreadcrumbs\n-from Products.CMFPlone.interfaces import INavigationSchema\n+from plone.base.defaultpage import check_default_page_via_view\n+from plone.base.interfaces import IHideFromBreadcrumbs\n+from plone.base.interfaces import INavigationSchema\n from Products.Five import BrowserView\n from zope.component import getMultiAdapter\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/browser/navtree.py b/Products/CMFPlone/browser/navtree.py\nindex 3a0a0aee34..d066dc4e12 100644\n--- a/Products/CMFPlone/browser/navtree.py\n+++ b/Products/CMFPlone/browser/navtree.py\n@@ -12,7 +12,7 @@\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import utils\n-from Products.CMFPlone.interfaces import INavigationSchema\n+from plone.base.interfaces import INavigationSchema\n from zope.component import getMultiAdapter, queryUtility\n from zope.component import getUtility\n from zope.interface import implementer\ndiff --git a/Products/CMFPlone/browser/ploneview.py b/Products/CMFPlone/browser/ploneview.py\nindex c9735e95c8..43dab697fb 100644\n--- a/Products/CMFPlone/browser/ploneview.py\n+++ b/Products/CMFPlone/browser/ploneview.py\n@@ -111,7 +111,7 @@ def cropText(self, text, length, ellipsis=\'...\'):\n             return text\n         converted = False\n         if not isinstance(text, str):\n-            text = utils.safe_unicode(text)\n+            text = utils.safe_text(text)\n             converted = True\n         if len(text) > length:\n             text = text[:length]\ndiff --git a/Products/CMFPlone/browser/robots.py b/Products/CMFPlone/browser/robots.py\nindex 9c5a0bc290..eb4e2535bb 100644\n--- a/Products/CMFPlone/browser/robots.py\n+++ b/Products/CMFPlone/browser/robots.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces.controlpanel import ISiteSchema\n+from plone.base.interfaces.controlpanel import ISiteSchema\n from Products.Five.browser import BrowserView\n from plone.registry.interfaces import IRegistry\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/browser/search.py b/Products/CMFPlone/browser/search.py\nindex 7bc6771aff..a8c34129d6 100644\n--- a/Products/CMFPlone/browser/search.py\n+++ b/Products/CMFPlone/browser/search.py\n@@ -3,7 +3,7 @@\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.browser.navtree import getNavigationRoot\n-from Products.CMFPlone.interfaces import ISearchSchema\n+from plone.base.interfaces import ISearchSchema\n from Products.CMFPlone.PloneBatch import Batch\n from Products.ZCTextIndex.ParseTree import ParseError\n from zope.cachedescriptors.property import Lazy as lazy_property\ndiff --git a/Products/CMFPlone/browser/sendto.py b/Products/CMFPlone/browser/sendto.py\nindex 1f11b22084..384d7d5ff3 100644\n--- a/Products/CMFPlone/browser/sendto.py\n+++ b/Products/CMFPlone/browser/sendto.py\n@@ -1,5 +1,5 @@\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces.controlpanel import IMailSchema\n+from plone.base.interfaces.controlpanel import IMailSchema\n from Products.CMFPlone.utils import pretty_title_or_id\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.MailHost.interfaces import IMailHost\ndiff --git a/Products/CMFPlone/browser/sitelogo.py b/Products/CMFPlone/browser/sitelogo.py\nindex 2d56feebeb..cb816a6b48 100644\n--- a/Products/CMFPlone/browser/sitelogo.py\n+++ b/Products/CMFPlone/browser/sitelogo.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import ISiteSchema\n+from plone.base.interfaces import ISiteSchema\n from plone.formwidget.namedfile.converter import b64decode_file\n from plone.namedfile.browser import Download\n from plone.namedfile.file import NamedImage\ndiff --git a/Products/CMFPlone/browser/syndication/adapters.py b/Products/CMFPlone/browser/syndication/adapters.py\nindex 2fc6224cf4..8963610609 100644\n--- a/Products/CMFPlone/browser/syndication/adapters.py\n+++ b/Products/CMFPlone/browser/syndication/adapters.py\n@@ -12,10 +12,10 @@\n from Products.CMFCore.utils import getToolByName\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n \n-from Products.CMFPlone.interfaces.syndication import IFeed\n-from Products.CMFPlone.interfaces.syndication import IFeedItem\n-from Products.CMFPlone.interfaces.syndication import ISearchFeed\n-from Products.CMFPlone.interfaces.syndication import IFeedSettings\n+from plone.base.interfaces.syndication import IFeed\n+from plone.base.interfaces.syndication import IFeedItem\n+from plone.base.interfaces.syndication import ISearchFeed\n+from plone.base.interfaces.syndication import IFeedSettings\n from Products.CMFPlone.utils import getSiteLogo\n \n from plone.registry.interfaces import IRegistry\ndiff --git a/Products/CMFPlone/browser/syndication/configure.zcml b/Products/CMFPlone/browser/syndication/configure.zcml\nindex 6715bfa1f3..755ca9f8b6 100644\n--- a/Products/CMFPlone/browser/syndication/configure.zcml\n+++ b/Products/CMFPlone/browser/syndication/configure.zcml\n@@ -6,7 +6,7 @@\n   i18n_domain="Products.CMFPlone">\n \n   <class class="plone.dexterity.content.Container">\n-    <implements interface="Products.CMFPlone.interfaces.syndication.ISyndicatable" />\n+    <implements interface="plone.base.interfaces.syndication.ISyndicatable" />\n   </class>\n \n   <adapter factory=".settings.FeedSettings" />\n@@ -15,15 +15,15 @@\n   <adapter factory=".adapters.CollectionFeed"\n     for="plone.app.contenttypes.interfaces.ICollection" />\n   <adapter factory=".adapters.SearchFeed"\n-    for="Products.CMFPlone.interfaces.siteroot.IPloneSiteRoot"\n-    provides="Products.CMFPlone.interfaces.syndication.ISearchFeed" />\n+    for="plone.base.interfaces.siteroot.IPloneSiteRoot"\n+    provides="plone.base.interfaces.syndication.ISearchFeed" />\n   <adapter factory=".adapters.DexterityItem"\n     for="plone.dexterity.interfaces.IDexterityContent\n-         Products.CMFPlone.interfaces.syndication.IFeed"\n-    provides="Products.CMFPlone.interfaces.syndication.IFeedItem" />\n+         plone.base.interfaces.syndication.IFeed"\n+    provides="plone.base.interfaces.syndication.IFeedItem" />\n \n   <browser:page\n-    for="Products.CMFPlone.interfaces.syndication.ISyndicatable"\n+    for="plone.base.interfaces.syndication.ISyndicatable"\n     name="synPropertiesForm"\n     class=".views.SettingsFormView"\n     permission="cmf.ModifyPortalContent"\n@@ -33,12 +33,12 @@\n     for="*"\n     name="syndication-util"\n     class=".utils.SyndicationUtil"\n-    allowed_interface="Products.CMFPlone.interfaces.syndication.ISyndicationUtil"\n+    allowed_interface="plone.base.interfaces.syndication.ISyndicationUtil"\n     permission="zope2.View"\n     />\n \n   <browser:page\n-    for="Products.CMFPlone.interfaces.syndication.ISyndicatable"\n+    for="plone.base.interfaces.syndication.ISyndicatable"\n     class=".views.FeedView"\n     name="atom.xml"\n     permission="zope2.View"\n@@ -46,14 +46,14 @@\n     />\n \n   <browser:page\n-    for="Products.CMFPlone.interfaces.syndication.ISyndicatable"\n+    for="plone.base.interfaces.syndication.ISyndicatable"\n     class=".views.FeedView"\n     name="rss.xml"\n     permission="zope2.View"\n     template="templates/rss.xml.pt"\n     />\n   <browser:page\n-    for="Products.CMFPlone.interfaces.syndication.ISyndicatable"\n+    for="plone.base.interfaces.syndication.ISyndicatable"\n     class=".views.FeedView"\n     name="RSS"\n     permission="zope2.View"\n@@ -61,7 +61,7 @@\n     />\n \n   <browser:page\n-    for="Products.CMFPlone.interfaces.syndication.ISyndicatable"\n+    for="plone.base.interfaces.syndication.ISyndicatable"\n     class=".views.FeedView"\n     name="itunes.xml"\n     permission="zope2.View"\n@@ -77,7 +77,7 @@\n     />\n \n   <browser:page\n-    for="Products.CMFPlone.interfaces.syndication.ISyndicatable"\n+    for="plone.base.interfaces.syndication.ISyndicatable"\n     class=".views.NewsMLFeedView"\n     name="newsml.xml"\n     permission="zope2.View"\ndiff --git a/Products/CMFPlone/browser/syndication/settings.py b/Products/CMFPlone/browser/syndication/settings.py\nindex d74865d070..9158f83858 100644\n--- a/Products/CMFPlone/browser/syndication/settings.py\n+++ b/Products/CMFPlone/browser/syndication/settings.py\n@@ -1,10 +1,10 @@\n from zope.component import adapts\n from zope.interface import implementer\n-from Products.CMFPlone.interfaces.syndication import IFeedSettings\n-from Products.CMFPlone.interfaces.syndication import ISyndicatable\n+from plone.base.interfaces.syndication import IFeedSettings\n+from plone.base.interfaces.syndication import ISyndicatable\n from zope.annotation.interfaces import IAnnotations\n from persistent.dict import PersistentDict\n-from Products.CMFPlone.interfaces.syndication import ISiteSyndicationSettings\n+from plone.base.interfaces.syndication import ISiteSyndicationSettings\n from zope.component import getUtility\n from plone.registry.interfaces import IRegistry\n \ndiff --git a/Products/CMFPlone/browser/syndication/tool.py b/Products/CMFPlone/browser/syndication/tool.py\nindex d142ebaa61..ba622337e6 100644\n--- a/Products/CMFPlone/browser/syndication/tool.py\n+++ b/Products/CMFPlone/browser/syndication/tool.py\n@@ -11,9 +11,9 @@\n from Products.CMFCore.permissions import ModifyPortalContent\n from Products.CMFCore.permissions import ManagePortal\n \n-from Products.CMFPlone.interfaces.syndication import IFeed\n-from Products.CMFPlone.interfaces.syndication import ISiteSyndicationSettings\n-from Products.CMFPlone.interfaces.syndication import IFeedSettings\n+from plone.base.interfaces.syndication import IFeed\n+from plone.base.interfaces.syndication import ISiteSyndicationSettings\n+from plone.base.interfaces.syndication import IFeedSettings\n \n from plone.registry.interfaces import IRegistry\n \ndiff --git a/Products/CMFPlone/browser/syndication/utils.py b/Products/CMFPlone/browser/syndication/utils.py\nindex 3115b10976..9e3171ba61 100644\n--- a/Products/CMFPlone/browser/syndication/utils.py\n+++ b/Products/CMFPlone/browser/syndication/utils.py\n@@ -5,10 +5,10 @@\n from zope.interface import implementer\n from zope.component import getUtility\n \n-from Products.CMFPlone.interfaces.syndication import ISyndicationUtil\n-from Products.CMFPlone.interfaces.syndication import IFeedSettings\n-from Products.CMFPlone.interfaces.syndication import ISiteSyndicationSettings\n-from Products.CMFPlone.interfaces.syndication import ISyndicatable\n+from plone.base.interfaces.syndication import ISyndicationUtil\n+from plone.base.interfaces.syndication import IFeedSettings\n+from plone.base.interfaces.syndication import ISiteSyndicationSettings\n+from plone.base.interfaces.syndication import ISyndicatable\n \n from plone.registry.interfaces import IRegistry\n from plone.memoize.view import memoize\ndiff --git a/Products/CMFPlone/browser/syndication/views.py b/Products/CMFPlone/browser/syndication/views.py\nindex 47c40db01c..cda7137a35 100644\n--- a/Products/CMFPlone/browser/syndication/views.py\n+++ b/Products/CMFPlone/browser/syndication/views.py\n@@ -1,9 +1,9 @@\n from DateTime import DateTime\n from plone.z3cform.layout import wrap_form\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces.syndication import IFeed\n-from Products.CMFPlone.interfaces.syndication import IFeedSettings\n-from Products.CMFPlone.interfaces.syndication import ISearchFeed\n+from plone.base.interfaces.syndication import IFeed\n+from plone.base.interfaces.syndication import IFeedSettings\n+from plone.base.interfaces.syndication import ISearchFeed\n from Products.Five import BrowserView\n from uuid import NAMESPACE_OID\n from uuid import uuid3\ndiff --git a/Products/CMFPlone/catalog.zcml b/Products/CMFPlone/catalog.zcml\nindex ddd04b531f..e84d7fed42 100644\n--- a/Products/CMFPlone/catalog.zcml\n+++ b/Products/CMFPlone/catalog.zcml\n@@ -3,7 +3,7 @@\n     <!-- Register the default indexable object wrapper -->\n     <adapter\n         for="Products.CMFCore.interfaces.ICatalogAware\n-             Products.CMFPlone.interfaces.IPloneCatalogTool"\n+             plone.base.interfaces.IPloneCatalogTool"\n         factory="plone.indexer.wrapper.IndexableObjectWrapper"\n         provides="plone.indexer.interfaces.IIndexableObject"\n         />\ndiff --git a/Products/CMFPlone/controlpanel/README.rst b/Products/CMFPlone/controlpanel/README.rst\nindex 72e195a909..23d5a13846 100644\n--- a/Products/CMFPlone/controlpanel/README.rst\n+++ b/Products/CMFPlone/controlpanel/README.rst\n@@ -14,7 +14,7 @@ As an example, let\'s look for search related settings (defined by ISearchSchema)\n We use the schema \'ISearchSchema\' to lookup a RecordProxy object with\n all fields::\n \n-  >>> from Products.CMFPlone.interfaces import ISearchSchema\n+  >>> from plone.base.interfaces import ISearchSchema\n   >>> search_settings = registry.forInterface(ISearchSchema, prefix=\'plone\')\n \n Now we can get and set all fields of the schema above. For example the value for\n@@ -38,7 +38,7 @@ For more information about how to access and manipulate Plone registry entries,\n Editing Control Panel\n ---------------------\n \n-  >>> from Products.CMFPlone.interfaces import IEditingSchema\n+  >>> from plone.base.interfaces import IEditingSchema\n   >>> editing_settings = registry.forInterface(IEditingSchema, prefix=\'plone\')\n \n   >>> editing_settings.default_editor == u\'TinyMCE\'\n@@ -103,7 +103,7 @@ Language Control Panel\n Maintenance Control Panel\n -------------------------\n \n-  >>> from Products.CMFPlone.interfaces import IMaintenanceSchema\n+  >>> from plone.base.interfaces import IMaintenanceSchema\n   >>> maintenance_settings = registry.forInterface(IMaintenanceSchema, prefix=\'plone\')\n \n   >>> maintenance_settings.days\n@@ -113,7 +113,7 @@ Maintenance Control Panel\n Navigation Control Panel\n ------------------------\n \n-  >>> from Products.CMFPlone.interfaces import INavigationSchema\n+  >>> from plone.base.interfaces import INavigationSchema\n   >>> navigation_settings = registry.forInterface(INavigationSchema, prefix=\'plone\')\n \n   >>> navigation_settings.generate_tabs\n@@ -138,7 +138,7 @@ Navigation Control Panel\n Search Control Panel\n --------------------\n \n-  >>> from Products.CMFPlone.interfaces import ISearchSchema\n+  >>> from plone.base.interfaces import ISearchSchema\n   >>> search_settings = registry.forInterface(ISearchSchema, prefix=\'plone\')\n \n   >>> search_settings.enable_livesearch\n@@ -151,7 +151,7 @@ Search Control Panel\n Site Control Panel\n ------------------\n \n-  >>> from Products.CMFPlone.interfaces import ISiteSchema\n+  >>> from plone.base.interfaces import ISiteSchema\n   >>> site_settings = registry.forInterface(ISiteSchema, prefix=\'plone\')\n \n   >>> site_settings.site_title == u\'Plone site\'\n@@ -170,7 +170,7 @@ Site Control Panel\n Overview Control Panel\n ----------------------\n \n-  >>> from Products.CMFPlone.interfaces.controlpanel import IDateAndTimeSchema\n+  >>> from plone.base.interfaces.controlpanel import IDateAndTimeSchema\n   >>> tz_settings = registry.forInterface(IDateAndTimeSchema, prefix=\'plone\')\n \n   >>> tz_settings.portal_timezone = \'UTC\'\n@@ -179,7 +179,7 @@ Overview Control Panel\n Markup Control Panel\n --------------------\n \n-  >>> from Products.CMFPlone.interfaces import IMarkupSchema\n+  >>> from plone.base.interfaces import IMarkupSchema\n   >>> markup_settings = registry.forInterface(IMarkupSchema, prefix=\'plone\')\n \n   >>> markup_settings.default_type == u\'text/html\'\n@@ -193,7 +193,7 @@ Markup Control Panel\n User and Groups Control Panel\n ------------------------------\n \n-  >>> from Products.CMFPlone.interfaces import IUserGroupsSettingsSchema\n+  >>> from plone.base.interfaces import IUserGroupsSettingsSchema\n   >>> usergroups_settings = registry.forInterface(IUserGroupsSettingsSchema, prefix=\'plone\')\n \n   >>> usergroups_settings.many_groups\ndiff --git a/Products/CMFPlone/controlpanel/bbb/editing.py b/Products/CMFPlone/controlpanel/bbb/editing.py\nindex 54058116a6..41649f4eff 100644\n--- a/Products/CMFPlone/controlpanel/bbb/editing.py\n+++ b/Products/CMFPlone/controlpanel/bbb/editing.py\n@@ -2,9 +2,9 @@\n from zope.interface import implementer\n from zope.component import getUtility\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n+from plone.base.interfaces import IPloneSiteRoot\n \n-from Products.CMFPlone.interfaces import IEditingSchema\n+from plone.base.interfaces import IEditingSchema\n \n \n @implementer(IEditingSchema)\ndiff --git a/Products/CMFPlone/controlpanel/bbb/filter.py b/Products/CMFPlone/controlpanel/bbb/filter.py\nindex f0d6fc7777..2da1d3dcb5 100644\n--- a/Products/CMFPlone/controlpanel/bbb/filter.py\n+++ b/Products/CMFPlone/controlpanel/bbb/filter.py\n@@ -1,5 +1,5 @@\n-from Products.CMFPlone.interfaces import IFilterSchema\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n+from plone.base.interfaces import IFilterSchema\n+from plone.base.interfaces import IPloneSiteRoot\n from plone.registry.interfaces import IRegistry\n from zope.component import adapts\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/controlpanel/bbb/language.py b/Products/CMFPlone/controlpanel/bbb/language.py\nindex 43700a1cd9..1094d8b49c 100644\n--- a/Products/CMFPlone/controlpanel/bbb/language.py\n+++ b/Products/CMFPlone/controlpanel/bbb/language.py\n@@ -2,7 +2,7 @@\n from zope.interface import implementer\n from zope.component import getUtility\n from plone.i18n.interfaces import ILanguageSchema\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n+from plone.base.interfaces import IPloneSiteRoot\n \n from plone.registry.interfaces import IRegistry\n \ndiff --git a/Products/CMFPlone/controlpanel/bbb/mail.py b/Products/CMFPlone/controlpanel/bbb/mail.py\nindex 9fb79f65ba..5ec1135f69 100644\n--- a/Products/CMFPlone/controlpanel/bbb/mail.py\n+++ b/Products/CMFPlone/controlpanel/bbb/mail.py\n@@ -1,5 +1,5 @@\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n-from Products.CMFPlone.interfaces.controlpanel import IMailSchema\n+from plone.base.interfaces import IPloneSiteRoot\n+from plone.base.interfaces.controlpanel import IMailSchema\n from Products.CMFPlone.utils import safe_hasattr\n from plone.registry.interfaces import IRegistry\n from zope.component import adapts\ndiff --git a/Products/CMFPlone/controlpanel/bbb/maintenance.py b/Products/CMFPlone/controlpanel/bbb/maintenance.py\nindex 491f6c5d9a..941fea458b 100644\n--- a/Products/CMFPlone/controlpanel/bbb/maintenance.py\n+++ b/Products/CMFPlone/controlpanel/bbb/maintenance.py\n@@ -1,5 +1,5 @@\n-from Products.CMFPlone.interfaces import IMaintenanceSchema\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n+from plone.base.interfaces import IMaintenanceSchema\n+from plone.base.interfaces import IPloneSiteRoot\n from plone.registry.interfaces import IRegistry\n from zope.component import adapts\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/controlpanel/bbb/markup.py b/Products/CMFPlone/controlpanel/bbb/markup.py\nindex 23b4279955..2434f6b84b 100644\n--- a/Products/CMFPlone/controlpanel/bbb/markup.py\n+++ b/Products/CMFPlone/controlpanel/bbb/markup.py\n@@ -1,5 +1,5 @@\n-from Products.CMFPlone.interfaces import IMarkupSchema\n-from Products.CMFPlone.interfaces.siteroot import IPloneSiteRoot\n+from plone.base.interfaces import IMarkupSchema\n+from plone.base.interfaces.siteroot import IPloneSiteRoot\n from plone.registry.interfaces import IRegistry\n from zope.component import adapts\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/controlpanel/bbb/navigation.py b/Products/CMFPlone/controlpanel/bbb/navigation.py\nindex 0cd58b5234..85bf7108b5 100644\n--- a/Products/CMFPlone/controlpanel/bbb/navigation.py\n+++ b/Products/CMFPlone/controlpanel/bbb/navigation.py\n@@ -1,6 +1,6 @@\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import INavigationSchema\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n+from plone.base.interfaces import INavigationSchema\n+from plone.base.interfaces import IPloneSiteRoot\n from zope.component import adapter\n from zope.component import getUtility\n from zope.interface import implementer\ndiff --git a/Products/CMFPlone/controlpanel/bbb/search.py b/Products/CMFPlone/controlpanel/bbb/search.py\nindex c5633ed877..6d0ec1f510 100644\n--- a/Products/CMFPlone/controlpanel/bbb/search.py\n+++ b/Products/CMFPlone/controlpanel/bbb/search.py\n@@ -1,5 +1,5 @@\n-from Products.CMFPlone.interfaces import ISearchSchema\n-from Products.CMFPlone.interfaces.siteroot import IPloneSiteRoot\n+from plone.base.interfaces import ISearchSchema\n+from plone.base.interfaces.siteroot import IPloneSiteRoot\n from plone.registry.interfaces import IRegistry\n from zope.component import adapts\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/controlpanel/bbb/security.py b/Products/CMFPlone/controlpanel/bbb/security.py\nindex 977b43f81f..5870b25910 100644\n--- a/Products/CMFPlone/controlpanel/bbb/security.py\n+++ b/Products/CMFPlone/controlpanel/bbb/security.py\n@@ -1,6 +1,6 @@\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces.siteroot import IPloneSiteRoot\n-from Products.CMFPlone.interfaces import ISecuritySchema\n+from plone.base.interfaces.siteroot import IPloneSiteRoot\n+from plone.base.interfaces import ISecuritySchema\n from plone.registry.interfaces import IRegistry\n from zope.component import adapts\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/controlpanel/bbb/site.py b/Products/CMFPlone/controlpanel/bbb/site.py\nindex 486c2e10c3..9098791b27 100644\n--- a/Products/CMFPlone/controlpanel/bbb/site.py\n+++ b/Products/CMFPlone/controlpanel/bbb/site.py\n@@ -1,6 +1,6 @@\n from zope.schema.fieldproperty import FieldProperty\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n-from Products.CMFPlone.interfaces import ISiteSchema\n+from plone.base.interfaces import IPloneSiteRoot\n+from plone.base.interfaces import ISiteSchema\n from plone.registry.interfaces import IRegistry\n from zope.component import adapts\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/controlpanel/bbb/usergroups.py b/Products/CMFPlone/controlpanel/bbb/usergroups.py\nindex 7df8393eff..ce88769f52 100644\n--- a/Products/CMFPlone/controlpanel/bbb/usergroups.py\n+++ b/Products/CMFPlone/controlpanel/bbb/usergroups.py\n@@ -3,8 +3,8 @@\n from zope.interface import implementer\n from zope.component.hooks import getSite\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import IUserGroupsSettingsSchema\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n+from plone.base.interfaces import IUserGroupsSettingsSchema\n+from plone.base.interfaces import IPloneSiteRoot\n \n \n @implementer(IUserGroupsSettingsSchema)\ndiff --git a/Products/CMFPlone/controlpanel/browser/actions.py b/Products/CMFPlone/controlpanel/browser/actions.py\nindex 35a64900ce..2037fd95cb 100644\n--- a/Products/CMFPlone/controlpanel/browser/actions.py\n+++ b/Products/CMFPlone/controlpanel/browser/actions.py\n@@ -3,7 +3,7 @@\n from Products.CMFCore.interfaces import IAction, IActionCategory\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import IActionSchema, INewActionSchema\n+from plone.base.interfaces import IActionSchema, INewActionSchema\n from Products.Five import BrowserView\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from z3c.form import form\ndiff --git a/Products/CMFPlone/controlpanel/browser/configure.zcml b/Products/CMFPlone/controlpanel/browser/configure.zcml\nindex 1204b15af6..671c66f1ed 100644\n--- a/Products/CMFPlone/controlpanel/browser/configure.zcml\n+++ b/Products/CMFPlone/controlpanel/browser/configure.zcml\n@@ -25,7 +25,7 @@\n   <!-- Control Panel Overview -->\n   <browser:page\n       name="overview-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".overview.OverviewControlPanel"\n       permission="plone.app.controlpanel.Overview"\n       />\n@@ -33,7 +33,7 @@\n   <!-- Editing Control Panel -->\n   <browser:page\n       name="editing-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".editing.EditingControlPanel"\n       permission="plone.app.controlpanel.Editing"\n       />\n@@ -41,7 +41,7 @@\n   <!-- Filter Control Panel -->\n   <browser:page\n       name="filter-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".filter.FilterControlPanelView"\n       permission="plone.app.controlpanel.Filtering"\n       />\n@@ -49,7 +49,7 @@\n   <!-- TinyMCE Control Panel -->\n   <browser:page\n       name="tinymce-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".tinymce.TinyMCEControlPanel"\n       permission="plone.app.controlpanel.TinyMCE"\n       />\n@@ -57,7 +57,7 @@\n   <!-- Language Control Panel -->\n   <browser:page\n       name="language-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".language.LanguageControlPanel"\n       permission="plone.app.controlpanel.Language"\n       />\n@@ -65,7 +65,7 @@\n   <!-- Maintenance Control Panel -->\n   <browser:page\n       name="maintenance-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".maintenance.MaintenanceControlPanel"\n       permission="cmf.ManagePortal"\n       />\n@@ -73,7 +73,7 @@\n   <!-- Mail Control Panel -->\n   <browser:page\n       name="mail-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".mail.MailControlPanel"\n       permission="plone.app.controlpanel.Mail"\n       />\n@@ -81,7 +81,7 @@\n   <!-- Navigation Control Panel -->\n   <browser:page\n       name="navigation-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".navigation.NavigationControlPanel"\n       permission="plone.app.controlpanel.Navigation"\n       />\n@@ -89,7 +89,7 @@\n   <!-- Search Control Panel -->\n   <browser:page\n       name="search-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".search.SearchControlPanel"\n       permission="plone.app.controlpanel.Search"\n       />\n@@ -97,7 +97,7 @@\n   <!-- Security Control Panel -->\n   <browser:page\n       name="security-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".security.SecurityControlPanel"\n       permission="plone.app.controlpanel.Security"\n       />\n@@ -105,7 +105,7 @@\n   <!-- Security Control Panel - EMail Login -->\n   <browser:page\n       name="migrate-to-emaillogin"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".security.EmailLogin"\n       template="emaillogin.pt"\n       permission="cmf.ManagePortal"\n@@ -114,28 +114,28 @@\n   <!-- Error Log Form Control Panel -->\n   <browser:page\n       name="error-log-form"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       template="error_log_form.pt"\n       permission="cmf.ManagePortal"\n       />\n \n   <browser:page\n       name="error-log-show-entry"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       template="error_log_show_entry.pt"\n       permission="cmf.ManagePortal"\n       />\n \n   <browser:page\n       name="error-log-update"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".error_log_form.ErrorLogUpdate"\n       permission="cmf.ManagePortal"\n       />\n \n   <browser:page\n       name="error-log-set-properties"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".error_log_form.ErrorLogSetProperties"\n       permission="cmf.ManagePortal"\n       />\n@@ -143,7 +143,7 @@\n   <!-- Site Control Panel -->\n   <browser:page\n       name="site-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".site.SiteControlPanel"\n       permission="plone.app.controlpanel.Site"\n       />\n@@ -151,7 +151,7 @@\n   <!-- Date and Time Control panel -->\n   <browser:page\n       name="dateandtime-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".dateandtime.DateAndTimeControlPanel"\n       permission="plone.app.controlpanel.Site"\n       />\n@@ -159,7 +159,7 @@\n   <!-- Types Control panel -->\n   <browser:page\n       name="content-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".types.TypesControlPanel"\n       permission="plone.app.controlpanel.Types"\n       />\n@@ -167,7 +167,7 @@\n   <!-- Resource Registry -->\n   <browser:page\n       name="resourceregistry-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".resourceregistry.ResourceRegistryControlPanelView"\n       permission="plone.app.controlpanel.Site"\n       template="resourceregistry.pt"\n@@ -176,7 +176,7 @@\n   <!-- Markup Control Panel -->\n   <browser:page\n       name="markup-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".markup.MarkupControlPanel"\n       permission="plone.app.controlpanel.Markup"\n       />\n@@ -184,13 +184,13 @@\n   <!-- Syndication Control Panel -->\n   <browser:page\n       name="syndication-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".syndication.SyndicationControlPanel"\n       permission="cmf.ManagePortal"\n       />\n   <browser:page\n       name="syndication-settings"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".syndication.SyndicationControlPanel"\n       permission="cmf.ManagePortal"\n       />\n@@ -198,14 +198,14 @@\n   <!-- Usergroup Control Panel -->\n   <browser:page\n       name="usergroup-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".usergroups.UserGroupsSettingsPanelView"\n       permission="plone.app.controlpanel.UsersAndGroups"\n       />\n \n   <browser:page\n       name="usergroup-userprefs"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".usergroups_usersoverview.UsersOverviewControlPanel"\n       permission="plone.app.controlpanel.UsersAndGroups"\n       template="usergroups_usersoverview.pt"\n@@ -213,7 +213,7 @@\n \n   <browser:page\n       name="usergroup-groupprefs"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".usergroups_groupsoverview.GroupsOverviewControlPanel"\n       permission="plone.app.controlpanel.UsersAndGroups"\n       template="usergroups_groupsoverview.pt"\n@@ -221,7 +221,7 @@\n \n   <browser:page\n       name="usergroup-groupmembership"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".usergroups_groupmembership.GroupMembershipControlPanel"\n       permission="plone.app.controlpanel.UsersAndGroups"\n       template="usergroups_groupmembership.pt"\n@@ -229,7 +229,7 @@\n \n   <browser:page\n       name="usergroup-usermembership"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".usergroups_usermembership.UserMembershipControlPanel"\n       permission="plone.app.controlpanel.UsersAndGroups"\n       template="usergroups_usermembership.pt"\n@@ -237,7 +237,7 @@\n \n   <browser:page\n       name="usergroup-groupdetails"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".usergroups_groupdetails.GroupDetailsControlPanel"\n       permission="plone.app.controlpanel.UsersAndGroups"\n       template="usergroups_groupdetails.pt"\n@@ -256,7 +256,7 @@\n \n   <browser:page\n       name="prefs_install_products_form"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".quickinstaller.ManageProductsView"\n       permission="cmf.ManagePortal"\n       template="quickinstaller.pt"\n@@ -264,21 +264,21 @@\n \n   <browser:page\n       name="upgrade_products"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".quickinstaller.UpgradeProductsView"\n       permission="cmf.ManagePortal"\n       />\n \n   <browser:page\n       name="install_products"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".quickinstaller.InstallProductsView"\n       permission="cmf.ManagePortal"\n       />\n \n   <browser:page\n       name="uninstall_products"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".quickinstaller.UninstallProductsView"\n       permission="cmf.ManagePortal"\n       />\n@@ -286,7 +286,7 @@\n   <!-- Social Media Control Panel -->\n   <browser:page\n       name="social-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".socialmedia.SocialControlPanel"\n       permission="plone.app.controlpanel.Site"\n       />\n@@ -294,7 +294,7 @@\n   <!-- Imaging Control Panel -->\n   <browser:page\n       name="imaging-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".imaging.ImagingControlPanel"\n       permission="plone.app.controlpanel.Imaging"\n       />\n@@ -302,7 +302,7 @@\n   <!-- Portal actions -->\n   <browser:page\n       name="actions-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".actions.ActionListControlPanel"\n       permission="cmf.ManagePortal"\n       />\n@@ -318,7 +318,7 @@\n \n   <browser:page\n       name="new-action"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".actions.NewActionControlPanel"\n       permission="cmf.ManagePortal"\n       />\n@@ -335,7 +335,7 @@\n \n   <browser:page\n       name="redirection-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".redirects.RedirectsControlPanel"\n       template="redirects-controlpanel.pt"\n       permission="Products.CMFPlone.ManagePortalAliases"\n@@ -354,7 +354,7 @@\n \n   <browser:page\n       name="inspect-relations"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".relations.RelationsInspectControlpanel"\n       template="relations_inspect.pt"\n       permission="Products.CMFPlone.InspectRelations"\n@@ -362,7 +362,7 @@\n \n   <browser:page\n       name="rebuild-relations"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".relations.RelationsRebuildControlpanel"\n       template="relations_rebuild.pt"\n       permission="cmf.ManagePortal"\ndiff --git a/Products/CMFPlone/controlpanel/browser/dateandtime.py b/Products/CMFPlone/controlpanel/browser/dateandtime.py\nindex 5059ec631f..9eec7408bb 100644\n--- a/Products/CMFPlone/controlpanel/browser/dateandtime.py\n+++ b/Products/CMFPlone/controlpanel/browser/dateandtime.py\n@@ -1,5 +1,5 @@\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import IDateAndTimeSchema\n+from plone.base.interfaces import IDateAndTimeSchema\n from plone.app.registry.browser.controlpanel import ControlPanelFormWrapper\n from plone.app.registry.browser.controlpanel import RegistryEditForm\n \ndiff --git a/Products/CMFPlone/controlpanel/browser/editing.py b/Products/CMFPlone/controlpanel/browser/editing.py\nindex 1ea069e011..fef3947988 100644\n--- a/Products/CMFPlone/controlpanel/browser/editing.py\n+++ b/Products/CMFPlone/controlpanel/browser/editing.py\n@@ -1,5 +1,5 @@\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import IEditingSchema\n+from plone.base.interfaces import IEditingSchema\n from plone.app.registry.browser import controlpanel\n from z3c.form import interfaces\n \ndiff --git a/Products/CMFPlone/controlpanel/browser/filter.py b/Products/CMFPlone/controlpanel/browser/filter.py\nindex e867f340ca..ff021fe988 100644\n--- a/Products/CMFPlone/controlpanel/browser/filter.py\n+++ b/Products/CMFPlone/controlpanel/browser/filter.py\n@@ -1,7 +1,7 @@\n from plone.app.registry.browser import controlpanel\n from plone.z3cform import layout\n from Products.CMFPlone import PloneMessageFactory as _  # NOQA\n-from Products.CMFPlone.interfaces import IFilterSchema\n+from plone.base.interfaces import IFilterSchema\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.statusmessages.interfaces import IStatusMessage\n from z3c.form import button\ndiff --git a/Products/CMFPlone/controlpanel/browser/imaging.py b/Products/CMFPlone/controlpanel/browser/imaging.py\nindex 71e7e58c2e..369c78a410 100644\n--- a/Products/CMFPlone/controlpanel/browser/imaging.py\n+++ b/Products/CMFPlone/controlpanel/browser/imaging.py\n@@ -1,5 +1,5 @@\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces.controlpanel import IImagingSchema\n+from plone.base.interfaces.controlpanel import IImagingSchema\n from logging import getLogger\n from plone.app.registry.browser import controlpanel\n \ndiff --git a/Products/CMFPlone/controlpanel/browser/mail.py b/Products/CMFPlone/controlpanel/browser/mail.py\nindex df4a35087a..6f09498c3e 100644\n--- a/Products/CMFPlone/controlpanel/browser/mail.py\n+++ b/Products/CMFPlone/controlpanel/browser/mail.py\n@@ -1,6 +1,6 @@\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces.controlpanel import IMailSchema\n+from plone.base.interfaces.controlpanel import IMailSchema\n from Products.MailHost.MailHost import MailHostError\n from Products.statusmessages.interfaces import IStatusMessage\n from logging import getLogger\ndiff --git a/Products/CMFPlone/controlpanel/browser/maintenance.py b/Products/CMFPlone/controlpanel/browser/maintenance.py\nindex d3b82f96c5..58d1da57fb 100644\n--- a/Products/CMFPlone/controlpanel/browser/maintenance.py\n+++ b/Products/CMFPlone/controlpanel/browser/maintenance.py\n@@ -7,7 +7,7 @@\n from plone.protect import CheckAuthenticator\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import IMaintenanceSchema\n+from plone.base.interfaces import IMaintenanceSchema\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from z3c.form import button\n from z3c.form import form\ndiff --git a/Products/CMFPlone/controlpanel/browser/markup.py b/Products/CMFPlone/controlpanel/browser/markup.py\nindex c78d345d59..dc97a36c8d 100644\n--- a/Products/CMFPlone/controlpanel/browser/markup.py\n+++ b/Products/CMFPlone/controlpanel/browser/markup.py\n@@ -1,5 +1,5 @@\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import IMarkupSchema\n+from plone.base.interfaces import IMarkupSchema\n from plone.app.registry.browser import controlpanel\n from z3c.form.browser.checkbox import CheckBoxFieldWidget\n \ndiff --git a/Products/CMFPlone/controlpanel/browser/navigation.py b/Products/CMFPlone/controlpanel/browser/navigation.py\nindex 7e4955f3d5..8149211b00 100644\n--- a/Products/CMFPlone/controlpanel/browser/navigation.py\n+++ b/Products/CMFPlone/controlpanel/browser/navigation.py\n@@ -1,5 +1,5 @@\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import INavigationSchema\n+from plone.base.interfaces import INavigationSchema\n from plone.app.registry.browser import controlpanel\n from z3c.form.browser.checkbox import CheckBoxFieldWidget\n \ndiff --git a/Products/CMFPlone/controlpanel/browser/overview.py b/Products/CMFPlone/controlpanel/browser/overview.py\nindex 47657ded96..f0e275ce5b 100644\n--- a/Products/CMFPlone/controlpanel/browser/overview.py\n+++ b/Products/CMFPlone/controlpanel/browser/overview.py\n@@ -1,7 +1,7 @@\n from AccessControl import getSecurityManager\n from Acquisition import aq_inner\n from App.config import getConfiguration\n-from Products.CMFPlone.interfaces.controlpanel import IMailSchema\n+from plone.base.interfaces.controlpanel import IMailSchema\n from Products.CMFCore.permissions import ManagePortal\n from Products.CMFCore.utils import getToolByName\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\ndiff --git a/Products/CMFPlone/controlpanel/browser/quickinstaller.py b/Products/CMFPlone/controlpanel/browser/quickinstaller.py\nindex 7931ae5839..69b0c2c6ff 100644\n--- a/Products/CMFPlone/controlpanel/browser/quickinstaller.py\n+++ b/Products/CMFPlone/controlpanel/browser/quickinstaller.py\n@@ -1,6 +1,6 @@\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import INonInstallable\n+from plone.base.interfaces import INonInstallable\n from Products.Five.browser import BrowserView\n from Products.GenericSetup import EXTENSION\n from Products.GenericSetup.tool import UNKNOWN\ndiff --git a/Products/CMFPlone/controlpanel/browser/redirects.py b/Products/CMFPlone/controlpanel/browser/redirects.py\nindex e4aa52ff7e..c84c710305 100644\n--- a/Products/CMFPlone/controlpanel/browser/redirects.py\n+++ b/Products/CMFPlone/controlpanel/browser/redirects.py\n@@ -6,7 +6,7 @@\n from plone.memoize.view import memoize\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.PloneBatch import Batch\n-from Products.CMFPlone.utils import safe_text\n+from plone.base.utils import safe_text\n from Products.Five.browser import BrowserView\n from Products.statusmessages.interfaces import IStatusMessage\n from io import StringIO\ndiff --git a/Products/CMFPlone/controlpanel/browser/resourceregistry.py b/Products/CMFPlone/controlpanel/browser/resourceregistry.py\nindex 1bfae52ae8..9f1733e2ed 100644\n--- a/Products/CMFPlone/controlpanel/browser/resourceregistry.py\n+++ b/Products/CMFPlone/controlpanel/browser/resourceregistry.py\n@@ -1,7 +1,7 @@\n from App.config import getConfiguration\n+from plone.base.interfaces import IBundleRegistry\n from plone.registry.interfaces import IRegistry\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import IBundleRegistry\n from Products.Five.browser import BrowserView\n from Products.statusmessages.interfaces import IStatusMessage\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/controlpanel/browser/search.py b/Products/CMFPlone/controlpanel/browser/search.py\nindex ddffdf4151..de2fc54a14 100644\n--- a/Products/CMFPlone/controlpanel/browser/search.py\n+++ b/Products/CMFPlone/controlpanel/browser/search.py\n@@ -1,5 +1,5 @@\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import ISearchSchema\n+from plone.base.interfaces import ISearchSchema\n from Products.CMFPlone.controlpanel.widgets import ReverseCheckBoxFieldWidget\n from plone.app.registry.browser import controlpanel\n from zope.component import queryUtility\ndiff --git a/Products/CMFPlone/controlpanel/browser/security.py b/Products/CMFPlone/controlpanel/browser/security.py\nindex 4fb41d1601..ae52e9ac63 100644\n--- a/Products/CMFPlone/controlpanel/browser/security.py\n+++ b/Products/CMFPlone/controlpanel/browser/security.py\n@@ -3,7 +3,7 @@\n from Products.CMFPlone import PloneMessageFactory as _\n from Products.CMFPlone.controlpanel.utils import migrate_to_email_login\n from Products.CMFPlone.controlpanel.utils import migrate_from_email_login\n-from Products.CMFPlone.interfaces import ISecuritySchema\n+from plone.base.interfaces import ISecuritySchema\n from Products.Five.browser import BrowserView\n from collections import defaultdict\n from plone.app.registry.browser import controlpanel\ndiff --git a/Products/CMFPlone/controlpanel/browser/site.py b/Products/CMFPlone/controlpanel/browser/site.py\nindex f87c056104..2bd9e99418 100644\n--- a/Products/CMFPlone/controlpanel/browser/site.py\n+++ b/Products/CMFPlone/controlpanel/browser/site.py\n@@ -1,5 +1,5 @@\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import ISiteSchema\n+from plone.base.interfaces import ISiteSchema\n from plone.app.registry.browser import controlpanel\n from plone.formwidget.namedfile.widget import NamedImageFieldWidget\n from z3c.form import interfaces\ndiff --git a/Products/CMFPlone/controlpanel/browser/socialmedia.py b/Products/CMFPlone/controlpanel/browser/socialmedia.py\nindex edb14ca1b8..dc48368a0e 100644\n--- a/Products/CMFPlone/controlpanel/browser/socialmedia.py\n+++ b/Products/CMFPlone/controlpanel/browser/socialmedia.py\n@@ -1,5 +1,5 @@\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import ISocialMediaSchema\n+from plone.base.interfaces import ISocialMediaSchema\n from plone.app.registry.browser import controlpanel\n \n \ndiff --git a/Products/CMFPlone/controlpanel/browser/syndication.py b/Products/CMFPlone/controlpanel/browser/syndication.py\nindex f9b16303c3..be92de8e60 100644\n--- a/Products/CMFPlone/controlpanel/browser/syndication.py\n+++ b/Products/CMFPlone/controlpanel/browser/syndication.py\n@@ -1,6 +1,6 @@\n from Products.CMFCore.utils import getToolByName\n from zope.i18nmessageid import MessageFactory\n-from Products.CMFPlone.interfaces.syndication import ISiteSyndicationSettings\n+from plone.base.interfaces.syndication import ISiteSyndicationSettings\n from plone.app.registry.browser import controlpanel\n from z3c.form import button\n from Products.statusmessages.interfaces import IStatusMessage\ndiff --git a/Products/CMFPlone/controlpanel/browser/tinymce.py b/Products/CMFPlone/controlpanel/browser/tinymce.py\nindex 4e3d0daf25..e70c93525d 100644\n--- a/Products/CMFPlone/controlpanel/browser/tinymce.py\n+++ b/Products/CMFPlone/controlpanel/browser/tinymce.py\n@@ -1,10 +1,10 @@\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import ITinyMCELayoutSchema\n-from Products.CMFPlone.interfaces import ITinyMCESpellCheckerSchema\n-from Products.CMFPlone.interfaces import ITinyMCEResourceTypesSchema\n-from Products.CMFPlone.interfaces import ITinyMCEAdvancedSchema\n-from Products.CMFPlone.interfaces import ITinyMCESchema\n-from Products.CMFPlone.interfaces import ITinyMCEPluginSchema\n+from plone.base.interfaces import ITinyMCELayoutSchema\n+from plone.base.interfaces import ITinyMCESpellCheckerSchema\n+from plone.base.interfaces import ITinyMCEResourceTypesSchema\n+from plone.base.interfaces import ITinyMCEAdvancedSchema\n+from plone.base.interfaces import ITinyMCESchema\n+from plone.base.interfaces import ITinyMCEPluginSchema\n from plone.app.registry.browser import controlpanel\n from z3c.form import field\n from z3c.form import group\ndiff --git a/Products/CMFPlone/controlpanel/browser/types.py b/Products/CMFPlone/controlpanel/browser/types.py\nindex 830065698c..e534c0318c 100644\n--- a/Products/CMFPlone/controlpanel/browser/types.py\n+++ b/Products/CMFPlone/controlpanel/browser/types.py\n@@ -2,9 +2,9 @@\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n from Products.CMFPlone.controlpanel.events import ConfigurationChangedEvent\n-from Products.CMFPlone.interfaces import ISearchSchema\n-from Products.CMFPlone.interfaces import ITypesSchema\n-from Products.CMFPlone.utils import safe_unicode\n+from plone.base.interfaces import ISearchSchema\n+from plone.base.interfaces import ITypesSchema\n+from plone.base.utils import safe_text\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.statusmessages.interfaces import IStatusMessage\n from operator import itemgetter\n@@ -156,7 +156,7 @@ def __call__(self):\n                     else:\n                         # check if we should add\n                         if type_id not in versionable_types:\n-                            versionable_types.append(safe_unicode(type_id))\n+                            versionable_types.append(safe_text(type_id))\n                         self.add_versioning_behavior(fti)\n \n                     for policy in portal_repository.listPolicies():\n@@ -193,9 +193,9 @@ def __call__(self):\n                 types_settings = registry.forInterface(\n                     ITypesSchema, prefix="plone")\n                 default_page_types = [\n-                    safe_unicode(i) for i in types_settings.default_page_types]\n+                    safe_text(i) for i in types_settings.default_page_types]\n                 if default_page_type and type_id not in default_page_types:\n-                    default_page_types.append(safe_unicode(type_id))\n+                    default_page_types.append(safe_text(type_id))\n                 elif not default_page_type and type_id in default_page_types:\n                     default_page_types.remove(type_id)\n                 types_settings.default_page_types = default_page_types\n@@ -365,7 +365,7 @@ def current_workflow(self):\n                 wf_id = chain[0]\n                 wf = getattr(portal_workflow, wf_id)\n                 title = translate(\n-                    safe_unicode(wf.title),\n+                    safe_text(wf.title),\n                     domain=\'plone\',\n                     context=self.request\n                 )\n@@ -373,7 +373,7 @@ def current_workflow(self):\n                     id=wf.id,\n                     title=title,\n                     description=format_description(\n-                        safe_unicode(wf.description),\n+                        safe_text(wf.description),\n                         self.request\n                     )\n                 )\n@@ -384,7 +384,7 @@ def current_workflow(self):\n             return empty_workflow_dict\n \n         default_title = translate(\n-            safe_unicode(default_workflow.title),\n+            safe_text(default_workflow.title),\n             domain=\'plone\',\n             context=self.request\n         )\n@@ -420,7 +420,7 @@ def available_workflows(self):\n             # Only offer a default workflow option on a real type\n             default_workflow = self.default_workflow(False)\n             default_title = translate(\n-                safe_unicode(default_workflow.title),\n+                safe_text(default_workflow.title),\n                 domain=\'plone\',\n                 context=self.request\n             )\ndiff --git a/Products/CMFPlone/controlpanel/browser/usergroups.py b/Products/CMFPlone/controlpanel/browser/usergroups.py\nindex b6759adf47..2819742a47 100644\n--- a/Products/CMFPlone/controlpanel/browser/usergroups.py\n+++ b/Products/CMFPlone/controlpanel/browser/usergroups.py\n@@ -4,7 +4,7 @@\n from Acquisition import aq_inner\n from Products.CMFPlone.utils import normalizeString\n from zope.component import getAdapter\n-from Products.CMFPlone.interfaces import ISecuritySchema\n+from plone.base.interfaces import ISecuritySchema\n from zope.component import getMultiAdapter\n from AccessControl import getSecurityManager\n from Products.Five.browser import BrowserView\n@@ -15,7 +15,7 @@\n from Products.CMFPlone import PloneMessageFactory as _\n from z3c.form import form\n \n-from Products.CMFPlone.interfaces import IUserGroupsSettingsSchema\n+from plone.base.interfaces import IUserGroupsSettingsSchema\n from z3c.form import button\n \n \ndiff --git a/Products/CMFPlone/controlpanel/events.py b/Products/CMFPlone/controlpanel/events.py\nindex 1273f6297d..fdbced0807 100644\n--- a/Products/CMFPlone/controlpanel/events.py\n+++ b/Products/CMFPlone/controlpanel/events.py\n@@ -3,8 +3,8 @@\n from Products.CMFPlone import PloneMessageFactory as _\n from Products.CMFPlone.controlpanel.utils import migrate_to_email_login\n from Products.CMFPlone.controlpanel.utils import migrate_from_email_login\n-from Products.CMFPlone.interfaces import IConfigurationChangedEvent\n-from Products.CMFPlone.interfaces import ISecuritySchema\n+from plone.base.interfaces import IConfigurationChangedEvent\n+from plone.base.interfaces import ISecuritySchema\n from Products.CMFPlone.utils import safe_hasattr\n from plone.registry.interfaces import IRecordModifiedEvent\n from zope.component import adapter\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_editing_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_editing_adapter.py\nindex 8e48c1737c..a1ca337498 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_editing_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_editing_adapter.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import IEditingSchema\n+from plone.base.interfaces import IEditingSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import setRoles\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_filter_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_filter_adapter.py\nindex 8321155c99..ef03ef4699 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_filter_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_filter_adapter.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import IFilterSchema\n+from plone.base.interfaces import IFilterSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import setRoles\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_mail_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_mail_adapter.py\nindex a3227f068e..d936b92091 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_mail_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_mail_adapter.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import IMailSchema\n+from plone.base.interfaces import IMailSchema\n from Products.CMFPlone.testing import \\\n     PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.app.testing import TEST_USER_ID, setRoles\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_maintenance_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_maintenance_adapter.py\nindex ebcb4e1d6c..c002629e18 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_maintenance_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_maintenance_adapter.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import IMaintenanceSchema\n+from plone.base.interfaces import IMaintenanceSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import setRoles\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_markup_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_markup_adapter.py\nindex 4e9e2cfb36..f5f3c8135a 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_markup_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_markup_adapter.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import IMarkupSchema\n+from plone.base.interfaces import IMarkupSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_navigation_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_navigation_adapter.py\nindex 8fa4ea9704..fdec408974 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_navigation_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_navigation_adapter.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import INavigationSchema\n+from plone.base.interfaces import INavigationSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.app.testing import TEST_USER_ID, setRoles\n from plone.registry.interfaces import IRegistry\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_search_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_search_adapter.py\nindex 4efa771e07..c2bf2ecd91 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_search_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_search_adapter.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import ISearchSchema\n+from plone.base.interfaces import ISearchSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.app.testing import TEST_USER_ID, setRoles\n from plone.registry.interfaces import IRegistry\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_security_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_security_adapter.py\nindex 139ca26bca..a98e190663 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_security_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_security_adapter.py\n@@ -1,6 +1,6 @@\n from Products.CMFPlone.testing import \\\n     PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n-from Products.CMFPlone.interfaces import ISecuritySchema\n+from plone.base.interfaces import ISecuritySchema\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import setRoles\n from zope.component import getAdapter\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_site_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_site_adapter.py\nindex 9dcc8d3a32..443f5f20c8 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_site_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_site_adapter.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import ISiteSchema\n+from plone.base.interfaces import ISiteSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import setRoles\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_usergroups_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_usergroups_adapter.py\nindex 6c3d7801f1..2f7229a9ad 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_usergroups_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_usergroups_adapter.py\n@@ -1,5 +1,5 @@\n from plone.app.testing import setRoles\n-from Products.CMFPlone.interfaces import IUserGroupsSettingsSchema\n+from plone.base.interfaces import IUserGroupsSettingsSchema\n from zope.component import getAdapter\n from plone.app.testing import TEST_USER_ID\n from plone.registry.interfaces import IRegistry\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_editing.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_editing.py\nindex 81ed3de60f..3b0be82fb7 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_editing.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_editing.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import IEditingSchema\n+from plone.base.interfaces import IEditingSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from plone.app.linkintegrity.utils import linkintegrity_enabled\n from plone.app.testing import SITE_OWNER_NAME\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_filter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_filter.py\nindex c0154ea161..5ede8606b1 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_filter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_filter.py\n@@ -2,7 +2,7 @@\n from plone.registry.interfaces import IRegistry\n from plone.testing.zope import Browser\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import IFilterSchema\n+from plone.base.interfaces import IFilterSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from Products.PortalTransforms.data import datastream\n from zope.component import getMultiAdapter\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_mail.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_mail.py\nindex c3d306202a..c575f7f438 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_mail.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_mail.py\n@@ -5,7 +5,7 @@\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n \n-from Products.CMFPlone.interfaces import IMailSchema\n+from plone.base.interfaces import IMailSchema\n from Products.CMFPlone.testing import \\\n     PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_markup.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_markup.py\nindex a4cb5ae821..cd34913f44 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_markup.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_markup.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import IMarkupSchema\n+from plone.base.interfaces import IMarkupSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from plone.app.testing import SITE_OWNER_NAME, SITE_OWNER_PASSWORD\n from plone.registry.interfaces import IRegistry\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_navigation.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_navigation.py\nindex 7921dec95d..66e79d0d0e 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_navigation.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_navigation.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import INavigationSchema\n+from plone.base.interfaces import INavigationSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from plone.app.testing import SITE_OWNER_NAME, SITE_OWNER_PASSWORD\n from plone.registry.interfaces import IRegistry\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_search.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_search.py\nindex 02358a34d0..3b2d7d17c0 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_search.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_search.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import ISearchSchema\n+from plone.base.interfaces import ISearchSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from plone.app.testing import SITE_OWNER_NAME, SITE_OWNER_PASSWORD\n from plone.registry.interfaces import IRegistry\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_security.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_security.py\nindex df4f58c383..89c57b5113 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_security.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_security.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import ISecuritySchema\n+from plone.base.interfaces import ISecuritySchema\n from Products.CMFPlone.testing import \\\n     PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from plone.app.testing import SITE_OWNER_NAME, SITE_OWNER_PASSWORD\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_site.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_site.py\nindex 583e5e4b83..e5cf80998d 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_site.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_site.py\n@@ -1,7 +1,7 @@\n from plone.app.testing import SITE_OWNER_NAME, SITE_OWNER_PASSWORD\n from plone.registry.interfaces import IRegistry\n from plone.testing.zope import Browser\n-from Products.CMFPlone.interfaces import ISiteSchema\n+from plone.base.interfaces import ISiteSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from io import BytesIO\n from zope.component import getMultiAdapter\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_dateandtime.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_dateandtime.py\nindex ed75bc1727..9a86dee7be 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_dateandtime.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_dateandtime.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import IDateAndTimeSchema\n+from plone.base.interfaces import IDateAndTimeSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import setRoles\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_editing.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_editing.py\nindex 3a5f9c27c0..037d4b166e 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_editing.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_editing.py\n@@ -1,5 +1,5 @@\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import IEditingSchema\n+from plone.base.interfaces import IEditingSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n from zope.component import getMultiAdapter\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_events.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_events.py\nindex 7bc43c1708..0e053ff69f 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_events.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_events.py\n@@ -1,7 +1,7 @@\n from Products.CMFPlone.testing import \\\n     PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ISecuritySchema\n+from plone.base.interfaces import ISecuritySchema\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import setRoles\n from zope.component import getAdapter\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_filter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_filter.py\nindex c96c5e8c1a..44b5fcd01f 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_filter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_filter.py\n@@ -1,5 +1,5 @@\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import IFilterSchema\n+from plone.base.interfaces import IFilterSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n from zope.component import getMultiAdapter\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_mail.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_mail.py\nindex 2b78ace63f..0de6c66436 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_mail.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_mail.py\n@@ -3,7 +3,7 @@\n from plone.registry.interfaces import IRegistry\n \n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import IMailSchema\n+from plone.base.interfaces import IMailSchema\n from Products.CMFPlone.testing import \\\n     PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_markup.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_markup.py\nindex 9af62e6e6b..248e27602c 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_markup.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_markup.py\n@@ -1,5 +1,5 @@\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import IMarkupSchema\n+from plone.base.interfaces import IMarkupSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n from zope.component import getMultiAdapter\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_navigation.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_navigation.py\nindex 62ca94ae2f..955ed19c40 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_navigation.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_navigation.py\n@@ -1,5 +1,5 @@\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import INavigationSchema\n+from plone.base.interfaces import INavigationSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n from zope.component import getMultiAdapter\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_search.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_search.py\nindex ccdbce6c6b..8cab7e457c 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_search.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_search.py\n@@ -1,5 +1,5 @@\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ISearchSchema\n+from plone.base.interfaces import ISearchSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n from zope.component import getMultiAdapter\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_security.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_security.py\nindex f2f39cb42f..12898194be 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_security.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_security.py\n@@ -1,5 +1,5 @@\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ISecuritySchema\n+from plone.base.interfaces import ISecuritySchema\n from Products.CMFPlone.testing import \\\n     PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.app.testing import TEST_USER_ID, setRoles\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_site.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_site.py\nindex 38ec5f45e8..d8786bbb95 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_site.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_site.py\n@@ -1,5 +1,5 @@\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ISiteSchema\n+from plone.base.interfaces import ISiteSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from plone.registry.interfaces import IRegistry\n from zope.component import getMultiAdapter\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_types.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_types.py\nindex 1294c6812e..311d29b9e3 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_types.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_types.py\n@@ -1,5 +1,5 @@\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ITypesSchema\n+from plone.base.interfaces import ITypesSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n from zope.component import getMultiAdapter\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_usergroups.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_usergroups.py\nindex fafe010171..7e92c90e83 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_usergroups.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_usergroups.py\n@@ -1,6 +1,6 @@\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import IUserGroupsSettingsSchema\n+from plone.base.interfaces import IUserGroupsSettingsSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from zope.component import getMultiAdapter\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_upgrades1.zcml b/Products/CMFPlone/controlpanel/tests/test_upgrades1.zcml\nindex a33635e929..957e962283 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_upgrades1.zcml\n+++ b/Products/CMFPlone/controlpanel/tests/test_upgrades1.zcml\n@@ -7,7 +7,7 @@\n       name="testfixture1"\n       title="Plone Test Fixture 1"\n       directory="profiles/testfixture"\n-      for="Products.CMFPlone.interfaces.ITestCasePloneSiteRoot"\n+      for="plone.base.interfaces.ITestCasePloneSiteRoot"\n       provides="Products.GenericSetup.interfaces.EXTENSION"\n       />\n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_upgrades2.zcml b/Products/CMFPlone/controlpanel/tests/test_upgrades2.zcml\nindex 0a6fcb4c43..c02f7be17d 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_upgrades2.zcml\n+++ b/Products/CMFPlone/controlpanel/tests/test_upgrades2.zcml\n@@ -7,7 +7,7 @@\n       name="testfixture2"\n       title="Plone Test Fixture 2"\n       directory="profiles/testfixture"\n-      for="Products.CMFPlone.interfaces.ITestCasePloneSiteRoot"\n+      for="plone.base.interfaces.ITestCasePloneSiteRoot"\n       provides="Products.GenericSetup.interfaces.EXTENSION"\n       />\n \ndiff --git a/Products/CMFPlone/defaultpage.py b/Products/CMFPlone/defaultpage.py\nindex 626bebb829..bdf7402894 100644\n--- a/Products/CMFPlone/defaultpage.py\n+++ b/Products/CMFPlone/defaultpage.py\n@@ -1,139 +1,3 @@\n-from Acquisition import aq_base\n-from Acquisition import aq_parent\n-from Acquisition import aq_inner\n-from plone.registry.interfaces import IRegistry\n-from Products.BTreeFolder2.BTreeFolder2 import BTreeFolder2Base\n-from Products.CMFCore.interfaces import IFolderish\n-from Products.CMFCore.interfaces import ISiteRoot\n-from Products.CMFDynamicViewFTI.interfaces import IBrowserDefault\n-from Products.CMFDynamicViewFTI.interfaces import IDynamicViewTypeInformation\n-from zope.component import getUtility\n-from zope.component import queryAdapter\n-from zope.component import queryUtility\n-from zope.component import queryMultiAdapter\n+from zope.deprecation import moved\n \n-\n-def get_default_page(context):\n-    """Given a folderish item, find out if it has a default-page using\n-    the following lookup rules:\n-\n-        1. A content object called \'index_html\' wins\n-        2. Else check for IBrowserDefault, either if the container implements\n-           it or if an adapter exists. In both cases fetch its FTI and either\n-           take it if it implements IDynamicViewTypeInformation or adapt it to\n-           IDynamicViewTypeInformation. call getDefaultPage on the implementer\n-           and take value if given.\n-        3. Else, look up the attribute default_page on the object, without\n-           acquisition in place\n-        3.1 look for a content in the container with the id, no acquisition!\n-        3.2 look for a content at portal, with acquisition\n-        4. Else, look up the property default_page in site_properties for\n-           magic ids and test these\n-\n-    The id of the first matching item is then used to lookup a translation\n-    and if found, its id is returned. If no default page is set, None is\n-    returned. If a non-folderish item is passed in, return None always.\n-    """\n-    # met precondition?\n-    if not IFolderish.providedBy(context):\n-        return\n-\n-    # The ids where we look for default - must support __contains__\n-    ids = set()\n-\n-    # For BTreeFolders we just use the __contains__ otherwise build a set\n-    if isinstance(aq_base(context), BTreeFolder2Base):\n-        ids = context\n-    elif hasattr(aq_base(context), \'objectIds\'):\n-        ids = set(context.objectIds())\n-\n-    # 1. test for contentish index_html\n-    if \'index_html\' in ids:\n-        return \'index_html\'\n-\n-    # 2. Test for IBrowserDefault\n-    if IBrowserDefault.providedBy(context):\n-        browserDefault = context\n-    else:\n-        browserDefault = queryAdapter(context, IBrowserDefault)\n-\n-    if browserDefault is not None:\n-        fti = context.getTypeInfo()\n-        if fti is not None:\n-            if IDynamicViewTypeInformation.providedBy(fti):\n-                dynamic_fti = fti\n-            else:\n-                dynamic_fti = queryAdapter(fti, IDynamicViewTypeInformation)\n-            if dynamic_fti is not None:\n-                page = dynamic_fti.getDefaultPage(context, check_exists=True)\n-                if page is not None:\n-                    return page\n-\n-    # 3.1 Test for default_page attribute in folder, no acquisition\n-    pages = getattr(aq_base(context), \'default_page\', [])\n-    if isinstance(pages, str):\n-        pages = [pages]\n-    for page in pages:\n-        if page and page in ids:\n-            return page\n-\n-    portal = queryUtility(ISiteRoot)\n-    # Might happen during portal creation\n-    if portal is None:\n-        return\n-\n-    # 3.2 Test for default page in portal, acquire\n-    for page in pages:\n-        if portal.unrestrictedTraverse(page, None):\n-            return page\n-\n-    # 4. Test for default sitewide default_page setting\n-    registry = getUtility(IRegistry)\n-    for page in registry.get(\'plone.default_page\', []):\n-        if page in ids:\n-            return page\n-\n-\n-def is_default_page(container, obj):\n-    """Finds out if the given obj is the default page in its parent folder.\n-\n-    Only considers explicitly contained objects, either set as index_html,\n-    with the default_page property, or using IBrowserDefault.\n-    """\n-    parent_default_page = get_default_page(container)\n-    precondition = (\n-        parent_default_page is not None\n-        and \'/\' not in parent_default_page\n-        and hasattr(aq_base(obj), \'getId\')\n-    )\n-    return precondition and (parent_default_page == obj.getId())\n-\n-\n-def _getDefaultPageView(obj, request):\n-    """This is a nasty hack because the view lookup fails when it occurs too\n-       early in the publishing process because the request isn\'t marked with\n-       the default skin.  Explicitly marking the request appears to cause\n-       connection errors, so we just instantiate the view manually.\n-    """\n-    view = queryMultiAdapter((obj, request), name=\'default_page\')\n-    if view is None:\n-        # mask circular import\n-        from Products.CMFPlone.browser.defaultpage import DefaultPage\n-        view = DefaultPage(obj, request)\n-    return view\n-\n-\n-def check_default_page_via_view(obj, request):\n-    container = aq_parent(aq_inner(obj))\n-    if container is None:\n-        return False\n-    view = _getDefaultPageView(container, request)\n-    return view.isDefaultPage(obj)\n-\n-\n-def get_default_page_via_view(obj, request):\n-    # Short circuit if we are not looking at a Folder\n-    if not obj.isPrincipiaFolderish:\n-        return None\n-    view = _getDefaultPageView(obj, request)\n-    return view.getDefaultPage()\n+moved(\'plone.base.defaultpage\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/exportimport/configure.zcml b/Products/CMFPlone/exportimport/configure.zcml\nindex b3a1ada1ba..e38d8c41cb 100644\n--- a/Products/CMFPlone/exportimport/configure.zcml\n+++ b/Products/CMFPlone/exportimport/configure.zcml\n@@ -114,14 +114,14 @@\n   <adapter\n      factory=".propertiestool.PlonePropertiesToolXMLAdapter"\n      provides="Products.GenericSetup.interfaces.IBody"\n-     for="Products.CMFPlone.interfaces.IPropertiesTool\n+     for="plone.base.interfaces.IPropertiesTool\n           Products.GenericSetup.interfaces.ISetupEnviron"\n      />\n \n   <adapter\n      factory=".propertiestool.SimpleItemWithPropertiesXMLAdapter"\n      provides="Products.GenericSetup.interfaces.IBody"\n-     for="Products.CMFPlone.interfaces.ISimpleItemWithProperties\n+     for="plone.base.interfaces.ISimpleItemWithProperties\n           Products.GenericSetup.interfaces.ISetupEnviron"\n      />\n \n@@ -142,7 +142,7 @@\n   <adapter\n      factory=".controlpanel.ControlPanelXMLAdapter"\n      provides="Products.GenericSetup.interfaces.IBody"\n-     for="Products.CMFPlone.interfaces.IControlPanel\n+     for="plone.base.interfaces.IControlPanel\n           Products.GenericSetup.interfaces.ISetupEnviron"\n      />\n \ndiff --git a/Products/CMFPlone/exportimport/controlpanel.py b/Products/CMFPlone/exportimport/controlpanel.py\nindex ecf8107973..48ca8c891d 100644\n--- a/Products/CMFPlone/exportimport/controlpanel.py\n+++ b/Products/CMFPlone/exportimport/controlpanel.py\n@@ -23,7 +23,7 @@\n from Products.CMFCore.interfaces import IActionProvider\n from Products.CMFCore.utils import getToolByName\n \n-from Products.CMFPlone.interfaces import IControlPanel\n+from plone.base.interfaces import IControlPanel\n \n \n class ControlPanelXMLAdapter(XMLAdapterBase):\ndiff --git a/Products/CMFPlone/exportimport/propertiestool.py b/Products/CMFPlone/exportimport/propertiestool.py\nindex 7d819ed58d..3bc7ea923b 100644\n--- a/Products/CMFPlone/exportimport/propertiestool.py\n+++ b/Products/CMFPlone/exportimport/propertiestool.py\n@@ -11,9 +11,9 @@\n from Products.GenericSetup.utils import ObjectManagerHelpers\n from Products.GenericSetup.utils import PropertyManagerHelpers\n from Products.CMFPlone.PropertiesTool import SimpleItemWithProperties\n-from Products.CMFPlone.interfaces \\\n+from plone.base.interfaces \\\n     import IPropertiesTool as IPlonePropertiesTool\n-from Products.CMFPlone.interfaces import ISimpleItemWithProperties\n+from plone.base.interfaces import ISimpleItemWithProperties\n \n _FILENAME = \'propertiestool.xml\'\n \ndiff --git a/Products/CMFPlone/exportimport/tests/testControlPanel.py b/Products/CMFPlone/exportimport/tests/testControlPanel.py\nindex e2c7d5ba76..cb016c97c0 100644\n--- a/Products/CMFPlone/exportimport/tests/testControlPanel.py\n+++ b/Products/CMFPlone/exportimport/tests/testControlPanel.py\n@@ -1,6 +1,6 @@\n from OFS.Folder import Folder\n from Products.CMFPlone.exportimport.tests.base import BodyAdapterTestCase\n-from Products.CMFPlone.interfaces import IControlPanel\n+from plone.base.interfaces import IControlPanel\n from Products.CMFPlone.PloneControlPanel import PloneControlPanel\n from zope.component import provideUtility\n from zope.component import provideAdapter\ndiff --git a/Products/CMFPlone/exportimport/tests/testPropertiesTool.py b/Products/CMFPlone/exportimport/tests/testPropertiesTool.py\nindex 511ebc786d..317b19100d 100644\n--- a/Products/CMFPlone/exportimport/tests/testPropertiesTool.py\n+++ b/Products/CMFPlone/exportimport/tests/testPropertiesTool.py\n@@ -37,7 +37,7 @@ def _populate(self, obj):\n             \'displayPublicationDateInByline\', True, \'boolean\')\n \n     def setUp(self):\n-        from Products.CMFPlone.interfaces import ISimpleItemWithProperties\n+        from plone.base.interfaces import ISimpleItemWithProperties\n         from Products.GenericSetup.interfaces import ISetupEnviron\n         from Products.GenericSetup.interfaces import IBody\n         provideAdapter(\n@@ -66,8 +66,8 @@ def _populate(self, obj):\n     def setUp(self):\n         from Products.CMFPlone.exportimport.propertiestool \\\n             import SimpleItemWithPropertiesXMLAdapter\n-        from Products.CMFPlone.interfaces import IPropertiesTool\n-        from Products.CMFPlone.interfaces import ISimpleItemWithProperties\n+        from plone.base.interfaces import IPropertiesTool\n+        from plone.base.interfaces import ISimpleItemWithProperties\n         from Products.GenericSetup.interfaces import ISetupEnviron\n         from Products.GenericSetup.interfaces import IBody\n         provideAdapter(\ndiff --git a/Products/CMFPlone/factory.py b/Products/CMFPlone/factory.py\nindex 41f47a1c81..6a23bd1164 100644\n--- a/Products/CMFPlone/factory.py\n+++ b/Products/CMFPlone/factory.py\n@@ -4,7 +4,7 @@\n from Products.CMFCore.interfaces import ISiteRoot\n from Products.CMFPlone import PloneMessageFactory as _\n from Products.CMFPlone.events import SiteManagerCreatedEvent\n-from Products.CMFPlone.interfaces import INonInstallable\n+from plone.base.interfaces import INonInstallable\n from Products.CMFPlone.Portal import PloneSite\n from Products.GenericSetup.tool import SetupTool\n from Products.statusmessages.interfaces import IStatusMessage\ndiff --git a/Products/CMFPlone/i18nl10n.py b/Products/CMFPlone/i18nl10n.py\nindex b5fdaa64f5..d9980a07e9 100644\n--- a/Products/CMFPlone/i18nl10n.py\n+++ b/Products/CMFPlone/i18nl10n.py\n@@ -1,290 +1,3 @@\n-"""\n-Collection of i18n and l10n utility methods.\n-"""\n-from Acquisition import aq_acquire\n-from DateTime import DateTime\n-from DateTime.interfaces import IDateTime\n-from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.utils import log\n-from zope.component import getUtility\n-from zope.i18n import translate\n-from zope.i18n.locales import locales\n-from zope.publisher.interfaces.browser import IBrowserRequest\n+from zope.deprecation import moved\n \n-import logging\n-import re\n-\n-datetime_formatvariables = {\'H\', \'I\', \'m\', \'d\', \'M\', \'p\', \'S\', \'Y\', \'y\', \'Z\'}\n-name_formatvariables = {\'a\', \'A\', \'b\', \'B\'}\n-all_formatvariables = datetime_formatvariables | name_formatvariables\n-_all_regexp_set = \',\'.join(all_formatvariables)\n-# regexp to split up ${X} format strings\n-_interp_regex = re.compile(\n-    r\'(?<!\\$)(\\$(?:[%(n)s]|{[%(n)s]}))\' % ({\'n\': _all_regexp_set})\n-)\n-# regexp to detect if this is a strftime format string\n-_dt_format_string_regexp = re.compile(fr\'\\%([{_all_regexp_set}])\')\n-\n-# those are from DateTime.DateTime, but we must not rely on its internal\n-# structures, so here a copy:\n-ENGLISH_NAMES = {\n-    \'_days\': (\n-        \'Sunday\', \'Monday\', \'Tuesday\', \'Wednesday\',  \'Thursday\', \'Friday\',\n-        \'Saturday\',\n-    ),\n-    \'_days_a\': (\'Sun\', \'Mon\', \'Tue\', \'Wed\', \'Thu\', \'Fri\', \'Sat\'),\n-    \'_days_p\': (\'Sun.\', \'Mon.\', \'Tue.\', \'Wed.\', \'Thu.\', \'Fri.\', \'Sat.\'),\n-    \'_months\': (\n-        \'\', \'January\', \'February\', \'March\', \'April\', \'May\', \'June\',\n-        \'July\', \'August\', \'September\', \'October\', \'November\', \'December\',\n-    ),\n-    \'_months_a\': (\n-        \'\', \'Jan\', \'Feb\', \'Mar\', \'Apr\', \'May\', \'Jun\',\n-        \'Jul\', \'Aug\', \'Sep\', \'Oct\', \'Nov\', \'Dec\',\n-    ),\n-    \'_months_p\': (\n-        \'\', \'Jan.\', \'Feb.\', \'Mar.\', \'Apr.\', \'May\', \'June\',\n-        \'July\', \'Aug.\', \'Sep.\', \'Oct.\', \'Nov.\', \'Dec.\'\n-    ),\n-}\n-\n-# The following are helper methods to change the default date and time formats\n-# for a specific locale. These locale dependent formats are used in the\n-# date/time widgets to determine the format and decide if a 24 hour or 12 hour\n-# AM/PM widget should be used. If \'a\' is part of the pattern the AM/PM widget\n-# will be used, otherwise a 24 hour clock.\n-#\n-# localeid is a tuple of the form: (language, country, variant)\n-# for example: (None, ) or (\'en\', ) or (\'en\', \'US\', None)\n-#\n-# value is in the format described by zope.i18n.interfaces.IDateTimeFormat\n-# for example u\'yyyy-MM-dd\' or u\'HH:mm:ss\'\n-#\n-# Note that this is a different format than used for the other methods in\n-# this module.\n-#\n-# locales uses a module level cache, so any changes you make with these\n-# methods will apply to the entire process and only need to be made once.\n-# You can use them in any code imported at startup, for example in a packages\n-# __init__ method.\n-#\n-# In order to use a 24 hour clock for English speakers, you would do:\n-#\n-# from Products.CMFPlone import i18nl10n\n-# i18nl10n.setDefaultTimeFormat((\'en\',), u\'HH:mm:ss\')\n-\n-\n-def setDefaultDateFormat(localeid, value):\n-    gregorian = locales.getLocale(*localeid).dates.calendars[\'gregorian\']\n-    date_format = gregorian.dateFormats[\'medium\'].formats[None]\n-    date_format.pattern = value\n-\n-\n-def setDefaultTimeFormat(localeid, value):\n-    gregorian = locales.getLocale(*localeid).dates.calendars[\'gregorian\']\n-    time_format = gregorian.timeFormats[\'medium\'].formats[None]\n-    time_format.pattern = value\n-\n-\n-def utranslate(domain, msgid, mapping=None, context=None,\n-               target_language=None, default=None):\n-    # We used to pass an object as context.\n-    if not IBrowserRequest.providedBy(context):\n-        context = aq_acquire(context, \'REQUEST\')\n-    # The signature of zope.i18n\'s translate has the msgid and domain switched\n-    return translate(msgid, domain=domain, mapping=mapping, context=context,\n-                     target_language=target_language, default=default)\n-\n-\n-def get_formatstring_from_registry(msgid):\n-    """If the Enabled record is True, return a format string."""\n-    registry = getUtility(IRegistry)\n-    name_root = \'Products.CMFPlone.i18nl10n.override_dateformat.\'\n-    if registry.get(name_root + \'Enabled\', False) is False:\n-        return None\n-    # msgid: "date_format_long", "date_format_short", or "time_format"\n-    record_name = name_root + msgid\n-    return registry.get(record_name, None)\n-\n-\n-def ulocalized_time(time, long_format=None, time_only=False, context=None,\n-                    domain=\'plonelocales\', request=None, target_language=None):\n-    """unicode aware localized time method (l10n)"""\n-\n-    if time_only:\n-        msgid = \'time_format\'\n-    elif long_format:\n-        msgid = \'date_format_long\'\n-    else:\n-        msgid = \'date_format_short\'\n-\n-    # NOTE: this requires the presence of three msgids inside the translation\n-    #       catalog date_format_long, date_format_short, and time_format\n-    #       These msgids are translated using interpolation.\n-    #       The variables used here are the same as used in the strftime\n-    #       formating.\n-    #       Supported are:\n-    #           %A, %a, %B, %b, %H, %I, %m, %d, %M, %p, %S, %Y, %y, %Z\n-    #       Each used as variable in the msgstr without the %.\n-    #       For example: "${A} ${d}. ${B} ${Y}, ${H}:${M} ${Z}"\n-    #       Each language dependend part is translated itself as well.\n-\n-    # From http://docs.python.org/lib/module-time.html\n-    #\n-    # %a    Locale\'s abbreviated weekday name.\n-    # %A        Locale\'s full weekday name.\n-    # %b        Locale\'s abbreviated month name.\n-    # %B        Locale\'s full month name.\n-    # %d        Day of the month as a decimal number [01,31].\n-    # %H        Hour (24-hour clock) as a decimal number [00,23].\n-    # %I        Hour (12-hour clock) as a decimal number [01,12].\n-    # %m        Month as a decimal number [01,12].\n-    # %M        Minute as a decimal number [00,59].\n-    # %p        Locale\'s equivalent of either AM or PM.\n-    # %S        Second as a decimal number [00,61].\n-    # %y        Year without century as a decimal number [00,99].\n-    # %Y        Year with century as a decimal number.\n-    # %Z        Time zone name (no characters if no time zone exists).\n-\n-    mapping = {}\n-    # convert to DateTime instances. Either a date string or\n-    # a DateTime instance needs to be passed.\n-    if not IDateTime.providedBy(time):\n-        try:\n-            time = DateTime(time)\n-        except:\n-            log(\'Failed to convert %s to a DateTime object\' % time,\n-                severity=logging.DEBUG)\n-            return None\n-\n-    if context is None:\n-        # when without context, we cannot do very much.\n-        return time.ISO8601()\n-\n-    if request is None:\n-        request = aq_acquire(context, \'REQUEST\')\n-\n-    # 1. if our Enabled flag in the configuration registry is set,\n-    # the format string there should override the translation machinery\n-    formatstring = get_formatstring_from_registry(msgid)\n-\n-    if formatstring is not None:\n-        if _dt_format_string_regexp.findall(formatstring):\n-            # classic strftime formatting, no i18n/l10n\n-            return time.strftime(formatstring)\n-    else:\n-        # 2. the normal case: translation machinery,\n-        # that is the ".../LC_MESSAGES/plonelocales.po" files\n-        formatstring = translate(\n-            msgid, domain, mapping, request, target_language=target_language\n-        )\n-\n-    # 3. if both failed, fall back to hardcoded ISO style\n-    if formatstring == msgid:\n-        if msgid == \'date_format_long\':\n-            formatstring = \'%Y-%m-%d %H:%M\'  # 2038-01-19 03:14\n-        elif msgid == \'date_format_short\':\n-            formatstring = \'%Y-%m-%d\'  # 2038-01-19\n-        elif msgid == \'time_format\':\n-            formatstring = \'%H:%M\'  # 03:14\n-        else:\n-            formatstring = \'[INTERNAL ERROR]\'\n-        return time.strftime(formatstring)\n-\n-    # get the format elements used in the formatstring\n-    formatelements = {el[2:-1] for el in _interp_regex.findall(formatstring)}\n-\n-    # add used elements to mapping\n-    elements = formatelements & datetime_formatvariables\n-    for key in elements:\n-        mapping[key] = time.strftime(\'%\' + key)\n-\n-    # add weekday name, abbr. weekday name, month name, abbr month name\n-    name_elements = formatelements & name_formatvariables\n-    if {\'a\', \'A\'} & name_elements:\n-        weekday = int(time.strftime(\'%w\'))  # weekday, sunday = 0\n-        if \'a\' in name_elements:\n-            mapping[\'a\'] = weekdayname_msgid_abbr(weekday)\n-        if \'A\' in name_elements:\n-            mapping[\'A\'] = weekdayname_msgid(weekday)\n-    if {\'b\', \'B\'} & name_elements:\n-        monthday = int(time.strftime(\'%m\'))  # month, january = 1\n-        if \'b\' in name_elements:\n-            mapping[\'b\'] = monthname_msgid_abbr(monthday)\n-        if \'B\' in name_elements:\n-            mapping[\'B\'] = monthname_msgid(monthday)\n-\n-    # translate translateable elements\n-    for key in name_elements:\n-        mapping[key] = translate(\n-            mapping[key],\n-            domain,\n-            context=request,\n-            default=mapping[key],\n-            target_language=target_language,\n-        )\n-\n-    # translate the time string\n-    return translate(\n-        msgid, domain, mapping, request, target_language=target_language\n-    )\n-\n-\n-def _numbertoenglishname(number, format=None, attr=\'_days\'):\n-    # returns the english name of day or month number\n-    # starting with Sunday == 0\n-    # and January = 1\n-    # format is either None, \'a\' or \'p\')\n-    #   None  means full name (January, February, ...)\n-    #   \'a\' means abbreviated (Jan, Feb, ..)\n-    #   \'p\' means abbreviated with . (dot) at end (Jan., Feb., ...)\n-\n-    number = int(number)\n-    if format is not None:\n-        attr = f\'{attr}_{format}\'\n-    return ENGLISH_NAMES[attr][number]\n-\n-\n-def monthname_english(number, format=None):\n-    # returns the english name of month with number\n-    return _numbertoenglishname(number, format=format, attr=\'_months\')\n-\n-\n-def weekdayname_english(number, format=None):\n-    # returns the english name of week with number\n-    return _numbertoenglishname(number, format=format, attr=\'_days\')\n-\n-\n-def monthname_msgid(number):\n-    # returns the msgid for monthname\n-    # use to translate to full monthname (January, February, ...)\n-    # e.g. month_jan, month_feb, ...\n-    return "month_%s" % monthname_english(number, format=\'a\').lower()\n-\n-\n-def monthname_msgid_abbr(number):\n-    # returns the msgid for the abbreviated monthname\n-    # use to translate to abbreviated format (Jan, Feb, ...)\n-    # e.g. month_jan_abbr, month_feb_abbr, ...\n-    return "month_%s_abbr" % monthname_english(number, format=\'a\').lower()\n-\n-\n-def weekdayname_msgid(number):\n-    # returns the msgid for the weekdayname\n-    # use to translate to full weekdayname (Monday, Tuesday, ...)\n-    # e.g. weekday_mon, weekday_tue, ...\n-    return "weekday_%s" % weekdayname_english(number, format=\'a\').lower()\n-\n-\n-def weekdayname_msgid_abbr(number):\n-    # returns the msgid for abbreviated weekdayname\n-    # use to translate to abbreviated format (Mon, Tue, ...)\n-    # e.g. weekday_mon_abbr, weekday_tue_abbr, ...\n-    return "weekday_%s_abbr" % weekdayname_english(number, format=\'a\').lower()\n-\n-\n-def weekdayname_msgid_short(number):\n-    # return the msgid for short weekdayname\n-    # use to translate to 2 char format (Mo, Tu, ...)\n-    # e.g. weekday_mon_short, weekday_tue_short, ...\n-    return "weekday_%s_short" % weekdayname_english(number, format=\'a\').lower()\n+moved(\'plone.base.i18nl10n\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/interfaces/__init__.py b/Products/CMFPlone/interfaces/__init__.py\nindex 318f89ae1e..b860e138ca 100644\n--- a/Products/CMFPlone/interfaces/__init__.py\n+++ b/Products/CMFPlone/interfaces/__init__.py\n@@ -1,69 +1,65 @@\n-# flake8: noqa\n-from Products.CMFPlone.interfaces.basetool import IPloneBaseTool\n-from Products.CMFPlone.interfaces.basetool import IPloneCatalogTool\n-from Products.CMFPlone.interfaces.basetool import IPloneTool\n-from Products.CMFPlone.interfaces.breadcrumbs import IHideFromBreadcrumbs\n-from Products.CMFPlone.interfaces.constrains import IConstrainTypes\n-from Products.CMFPlone.interfaces.constrains import ISelectableConstrainTypes\n-from Products.CMFPlone.interfaces.controlpanel import IActionSchema\n-from Products.CMFPlone.interfaces.controlpanel import IControlPanel\n-from Products.CMFPlone.interfaces.controlpanel import IDateAndTimeSchema\n-from Products.CMFPlone.interfaces.controlpanel import IEditingSchema\n-from Products.CMFPlone.interfaces.controlpanel import IFilterSchema\n-from Products.CMFPlone.interfaces.controlpanel import IImagingSchema\n-from Products.CMFPlone.interfaces.controlpanel import ILinkSchema\n-from Products.CMFPlone.interfaces.controlpanel import ILoginSchema\n-from Products.CMFPlone.interfaces.controlpanel import IMailSchema\n-from Products.CMFPlone.interfaces.controlpanel import IMaintenanceSchema\n-from Products.CMFPlone.interfaces.controlpanel import IMarkupSchema\n-from Products.CMFPlone.interfaces.controlpanel import INavigationSchema\n-from Products.CMFPlone.interfaces.controlpanel import INewActionSchema\n-from Products.CMFPlone.interfaces.controlpanel import ISearchSchema\n-from Products.CMFPlone.interfaces.controlpanel import ISecuritySchema\n-from Products.CMFPlone.interfaces.controlpanel import ISiteSchema\n-from Products.CMFPlone.interfaces.controlpanel import ISocialMediaSchema\n-from Products.CMFPlone.interfaces.controlpanel import ITinyMCEAdvancedSchema\n-from Products.CMFPlone.interfaces.controlpanel import ITinyMCELayoutSchema\n-from Products.CMFPlone.interfaces.controlpanel import ITinyMCEPluginSchema\n-from Products.CMFPlone.interfaces.controlpanel import ITinyMCEResourceTypesSchema\n-from Products.CMFPlone.interfaces.controlpanel import ITinyMCESchema\n-from Products.CMFPlone.interfaces.controlpanel import ITinyMCESpellCheckerSchema\n-from Products.CMFPlone.interfaces.controlpanel import ITypesSchema\n-from Products.CMFPlone.interfaces.controlpanel import IUserGroupsSettingsSchema\n-from Products.CMFPlone.interfaces.events import IConfigurationChangedEvent\n-from Products.CMFPlone.interfaces.events import IReorderedEvent\n-from Products.CMFPlone.interfaces.events import ISiteManagerCreatedEvent\n-from Products.CMFPlone.interfaces.installable import INonInstallable\n-from Products.CMFPlone.interfaces.interface import IInterfaceTool\n-from Products.CMFPlone.interfaces.language import ILanguage\n-from Products.CMFPlone.interfaces.login import IForcePasswordChange\n-from Products.CMFPlone.interfaces.login import IInitialLogin\n-from Products.CMFPlone.interfaces.login import ILogin\n-from Products.CMFPlone.interfaces.login import ILoginForm\n-from Products.CMFPlone.interfaces.login import ILoginFormSchema\n-from Products.CMFPlone.interfaces.login import ILoginHelpForm\n-from Products.CMFPlone.interfaces.login import ILoginHelpFormSchema\n-from Products.CMFPlone.interfaces.login import IRedirectAfterLogin\n-from Products.CMFPlone.interfaces.migration import IMigrationTool\n-from Products.CMFPlone.interfaces.password_reset import IPasswordResetToolView\n-from Products.CMFPlone.interfaces.password_reset import IPWResetTool\n-from Products.CMFPlone.interfaces.patterns import IPatternsSettings\n-from Products.CMFPlone.interfaces.properties import IPropertiesTool\n-from Products.CMFPlone.interfaces.properties import ISimpleItemWithProperties\n-from Products.CMFPlone.interfaces.resources import IBundleRegistry\n-from Products.CMFPlone.interfaces.resources import IResourceRegistry\n-from Products.CMFPlone.interfaces.siteroot import IMigratingPloneSiteRoot\n-from Products.CMFPlone.interfaces.siteroot import IPloneSiteRoot\n-from Products.CMFPlone.interfaces.siteroot import ITestCasePloneSiteRoot\n-from Products.CMFPlone.interfaces.structure import INonStructuralFolder\n-from Products.CMFPlone.interfaces.syndication import ISiteSyndicationSettings\n-from Products.CMFPlone.interfaces.translationservice import ITranslationServiceTool\n-from Products.CMFPlone.interfaces.workflow import IWorkflowChain\n-\n from zope.deferredimport import deprecated\n \n-\n deprecated(\n-    "It has been moved to plone.i18n.interfaces, import from there instead.",\n-    ILanguageSchema=\'plone.i18n.interfaces:ILanguageSchema\',\n+    "Moved to plone.base.interfaces, import from there instead (removed in Plone 7).",\n+    IPloneBaseTool="plone.base.interfaces.basetool:IPloneBaseTool",\n+    IPloneCatalogTool="plone.base.interfaces.basetool:IPloneCatalogTool",\n+    IPloneTool="plone.base.interfaces.basetool:IPloneTool",\n+    IHideFromBreadcrumbs="plone.base.interfaces.breadcrumbs:IHideFromBreadcrumbs",\n+    IConstrainTypes="plone.base.interfaces.constrains:IConstrainTypes",\n+    ISelectableConstrainTypes="plone.base.interfaces.constrains:ISelectableConstrainTypes",\n+    IActionSchema="plone.base.interfaces.controlpanel:IActionSchema",\n+    IControlPanel="plone.base.interfaces.controlpanel:IControlPanel",\n+    IDateAndTimeSchema="plone.base.interfaces.controlpanel:IDateAndTimeSchema",\n+    IEditingSchema="plone.base.interfaces.controlpanel:IEditingSchema",\n+    IFilterSchema="plone.base.interfaces.controlpanel:IFilterSchema",\n+    IImagingSchema="plone.base.interfaces.controlpanel:IImagingSchema",\n+    ILinkSchema="plone.base.interfaces.controlpanel:ILinkSchema",\n+    ILoginSchema="plone.base.interfaces.controlpanel:ILoginSchema",\n+    IMailSchema="plone.base.interfaces.controlpanel:IMailSchema",\n+    IMaintenanceSchema="plone.base.interfaces.controlpanel:IMaintenanceSchema",\n+    IMarkupSchema="plone.base.interfaces.controlpanel:IMarkupSchema",\n+    INavigationSchema="plone.base.interfaces.controlpanel:INavigationSchema",\n+    INewActionSchema="plone.base.interfaces.controlpanel:INewActionSchema",\n+    ISearchSchema="plone.base.interfaces.controlpanel:ISearchSchema",\n+    ISecuritySchema="plone.base.interfaces.controlpanel:ISecuritySchema",\n+    ISiteSchema="plone.base.interfaces.controlpanel:ISiteSchema",\n+    ISocialMediaSchema="plone.base.interfaces.controlpanel:ISocialMediaSchema",\n+    ITinyMCEAdvancedSchema="plone.base.interfaces.controlpanel:ITinyMCEAdvancedSchema",\n+    ITinyMCELayoutSchema="plone.base.interfaces.controlpanel:ITinyMCELayoutSchema",\n+    ITinyMCEPluginSchema="plone.base.interfaces.controlpanel:ITinyMCEPluginSchema",\n+    ITinyMCEResourceTypesSchema="plone.base.interfaces.controlpanel:ITinyMCEResourceTypesSchema",\n+    ITinyMCESchema="plone.base.interfaces.controlpanel:ITinyMCESchema",\n+    ITinyMCESpellCheckerSchema="plone.base.interfaces.controlpanel:ITinyMCESpellCheckerSchema",\n+    ITypesSchema="plone.base.interfaces.controlpanel:ITypesSchema",\n+    IUserGroupsSettingsSchema="plone.base.interfaces.controlpanel:IUserGroupsSettingsSchema",\n+    IConfigurationChangedEvent="plone.base.interfaces.events:IConfigurationChangedEvent",\n+    IReorderedEvent="plone.base.interfaces.events:IReorderedEvent",\n+    ISiteManagerCreatedEvent="plone.base.interfaces.events:ISiteManagerCreatedEvent",\n+    INonInstallable="plone.base.interfaces.installable:INonInstallable",\n+    IInterfaceTool="plone.base.interfaces.interface:IInterfaceTool",\n+    ILanguage="plone.base.interfaces.language:ILanguage",\n+    IForcePasswordChange="plone.base.interfaces.login:IForcePasswordChange",\n+    IInitialLogin="plone.base.interfaces.login:IInitialLogin",\n+    ILogin="plone.base.interfaces.login:ILogin",\n+    ILoginForm="plone.base.interfaces.login:ILoginForm",\n+    ILoginFormSchema="plone.base.interfaces.login:ILoginFormSchema",\n+    ILoginHelpForm="plone.base.interfaces.login:ILoginHelpForm",\n+    ILoginHelpFormSchema="plone.base.interfaces.login:ILoginHelpFormSchema",\n+    IRedirectAfterLogin="plone.base.interfaces.login:IRedirectAfterLogin",\n+    IMigrationTool="plone.base.interfaces.migration:IMigrationTool",\n+    IPasswordResetToolView="plone.base.interfaces.password_reset:IPasswordResetToolView",\n+    IPWResetTool="plone.base.interfaces.password_reset:IPWResetTool",\n+    IPatternsSettings="plone.base.interfaces.patterns:IPatternsSettings",\n+    IPropertiesTool="plone.base.interfaces.properties:IPropertiesTool",\n+    ISimpleItemWithProperties="plone.base.interfaces.properties:ISimpleItemWithProperties",\n+    IBundleRegistry="plone.base.interfaces.resources:IBundleRegistry",\n+    IResourceRegistry="plone.base.interfaces.resources:IResourceRegistry",\n+    IMigratingPloneSiteRoot="plone.base.interfaces.siteroot:IMigratingPloneSiteRoot",\n+    IPloneSiteRoot="plone.base.interfaces.siteroot:IPloneSiteRoot",\n+    ITestCasePloneSiteRoot="plone.base.interfaces.siteroot:ITestCasePloneSiteRoot",\n+    INonStructuralFolder="plone.base.interfaces.structure:INonStructuralFolder",\n+    ISiteSyndicationSettings="plone.base.interfaces.syndication:ISiteSyndicationSettings",\n+    ITranslationServiceTool="plone.base.interfaces.translationservice:ITranslationServiceTool",\n+    IWorkflowChain="plone.base.interfaces.workflow:IWorkflowChain",\n )\ndiff --git a/Products/CMFPlone/interfaces/atd.py b/Products/CMFPlone/interfaces/atd.py\nindex 50ea205ee3..f43019c7d8 100644\n--- a/Products/CMFPlone/interfaces/atd.py\n+++ b/Products/CMFPlone/interfaces/atd.py\n@@ -1,11 +1,3 @@\n-from zope.interface import Interface\n+from zope.deprecation import moved\n \n-\n-class IATDProxyView(Interface):\n-    """ Proxy view for the \'After the Deadline" spellchecker\n-    """\n-\n-    def checkDocument(self):\n-        """ Proxy for the AtD service\'s checkDocument function\n-            See http://www.afterthedeadline.com/api.slp for more info.\n-        """\n+moved(\'plone.base.interfaces.atd\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/basetool.py b/Products/CMFPlone/interfaces/basetool.py\nindex cff9d2cdac..2ddb20e69b 100644\n--- a/Products/CMFPlone/interfaces/basetool.py\n+++ b/Products/CMFPlone/interfaces/basetool.py\n@@ -1,16 +1,3 @@\n-from zope.interface import Interface\n+from zope.deprecation import moved\n \n-\n-class IPloneBaseTool(Interface):\n-    """Marker interface for plone tools\n-    """\n-\n-\n-class IPloneTool(Interface):\n-    """Marker interface for the plone utils tool.\n-    """\n-\n-\n-class IPloneCatalogTool(Interface):\n-    """Marker interface for Plone\'s catalog tool\n-    """\n+moved(\'plone.base.interfaces.basetool\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/breadcrumbs.py b/Products/CMFPlone/interfaces/breadcrumbs.py\nindex 005bca13ac..5be8cc296c 100644\n--- a/Products/CMFPlone/interfaces/breadcrumbs.py\n+++ b/Products/CMFPlone/interfaces/breadcrumbs.py\n@@ -1,6 +1,3 @@\n-from zope.interface import Interface\n+from zope.deprecation import moved\n \n-\n-class IHideFromBreadcrumbs(Interface):\n-    """Marker for content which should not appear in the breadcrumbs.\n-    """\n+moved(\'plone.base.interfaces.breadcrumbs\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/constrains.py b/Products/CMFPlone/interfaces/constrains.py\nindex 3686052ae3..720eed0ec3 100644\n--- a/Products/CMFPlone/interfaces/constrains.py\n+++ b/Products/CMFPlone/interfaces/constrains.py\n@@ -1,87 +1,3 @@\n-from zope.interface import Interface\n+from zope.deprecation import moved\n \n-\n-ACQUIRE = -1  # acquire locallyAllowedTypes from parent (default)\n-DISABLED = 0  # use default behavior of PortalFolder,\n-# which uses the FTI information\n-ENABLED = 1  # allow types from locallyAllowedTypes only\n-\n-\n-class IConstrainTypes(Interface):\n-    """\n-    Interface for folderish content types supporting restricting addable types\n-    on a per-instance basis.\n-    """\n-\n-    def getConstrainTypesMode():\n-        """\n-        Find out if add-restrictions are enabled. Returns 0 if they are\n-        disabled (the type\'s default FTI-set allowable types is in effect),\n-        1 if they are enabled (only a selected subset if allowed types will be\n-        available), and -1 if the allowed types should be acquired from the\n-        parent. Note that in this case, if the parent portal type is not the\n-        same as the portal type of this object, fall back on the default (same\n-        as 0)\n-        """\n-\n-    def getLocallyAllowedTypes():\n-        """\n-        Get the list of FTI ids for the types which should be allowed to be\n-        added in this container.\n-        """\n-\n-    def getImmediatelyAddableTypes():\n-        """\n-        Return a subset of the FTI ids from getLocallyAllowedTypes() which\n-        should be made most easily available.\n-        """\n-\n-    def getDefaultAddableTypes():\n-        """\n-        Return a list of FTIs which correspond to the list of FTIs available\n-        when the constraint mode = 0 (that is, the types addable without any\n-        setLocallyAllowedTypes trickery involved)\n-        """\n-\n-    def allowedContentTypes():\n-        """\n-        Return the list of currently permitted FTIs.\n-        """\n-\n-\n-class ISelectableConstrainTypes(IConstrainTypes):\n-    """\n-    Extension to the IConstrainTypes interface for content types which allow\n-    the user to set the allowable content types and immediately available\n-    types.\n-    """\n-\n-    def setConstrainTypesMode(mode):\n-        """\n-        Set how addable types is controlled in this class. If mode is 0, use\n-        the type\'s default FTI-set allowable types). If mode is 1, use only\n-        those types explicitly enabled using setLocallyAllowedTypes(). If\n-        mode is -1, acquire the allowable types from the parent. If the parent\n-        portal type is not the same as this object\'s type, fall back on the\n-        behaviour obtained if mode == 0.\n-        """\n-\n-    def setLocallyAllowedTypes(types):\n-        """\n-        Set a list of type ids which should be allowed. This must be a\n-        subset of the type\'s FTI-set allowable types. This list only comes\n-        into effect when the restrictions mode is 1 (enabled).\n-        """\n-\n-    def setImmediatelyAddableTypes(types):\n-        """\n-        Set the list of type ids which should be immediately/most easily\n-        addable. This list must be a subset of any types set in\n-        setLocallyAllowedTypes.\n-        """\n-\n-    def canSetConstrainTypes():\n-        """\n-        Return True if the current user is permitted to constrain addable\n-        types in this folderish object.\n-        """\n+moved(\'plone.base.interfaces.constrains\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/controlpanel.py b/Products/CMFPlone/interfaces/controlpanel.py\nindex b46119af83..9731ce70f2 100644\n--- a/Products/CMFPlone/interfaces/controlpanel.py\n+++ b/Products/CMFPlone/interfaces/controlpanel.py\n@@ -1,1911 +1,3 @@\n-from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone._compat import dump_json_to_text\n-from Products.CMFPlone.interfaces.basetool import IPloneBaseTool\n-from zope import schema\n-from zope.deferredimport import deprecated\n-from zope.component.hooks import getSite\n-from zope.interface import Attribute\n-from zope.interface import implementer\n-from zope.interface import Interface\n-from zope.interface import Invalid\n-from zope.interface import invariant\n-from zope.schema.vocabulary import SimpleTerm\n-from zope.schema.vocabulary import SimpleVocabulary\n+from zope.deprecation import moved\n \n-import json\n-\n-\n-deprecated(\n-    "It has been moved to plone.i18n.interfaces, import from there instead.",\n-    ILanguageSchema="plone.i18n.interfaces:ILanguageSchema",\n-)\n-\n-\n-ROBOTS_TXT = """Sitemap: {portal_url}/sitemap.xml.gz\n-\n-# Define access-restrictions for robots/spiders\n-# http://www.robotstxt.org/wc/norobots.html\n-\n-\n-\n-# By default we allow robots to access all areas of our site\n-# already accessible to anonymous users\n-\n-User-agent: *\n-Disallow:\n-\n-\n-\n-# Add Googlebot-specific syntax extension to exclude forms\n-# that are repeated for each piece of content in the site\n-# the wildcard is only supported by Googlebot\n-# http://www.google.com/support/webmasters/bin/answer.py?answer=40367&ctx=sibling\n-\n-User-Agent: Googlebot\n-Disallow: /*?\n-Disallow: /*atct_album_view$\n-Disallow: /*folder_factories$\n-Disallow: /*folder_summary_view$\n-Disallow: /*login_form$\n-Disallow: /*mail_password_form$\n-Disallow: /@@search\n-Disallow: /*search_rss$\n-Disallow: /*sendto_form$\n-Disallow: /*summary_view$\n-Disallow: /*thumbnail_view$\n-Disallow: /*view$\n-"""\n-\n-\n-def validate_json(value):\n-    try:\n-        json.loads(value)\n-    except ValueError as exc:\n-\n-        class JSONError(schema.ValidationError):\n-            __doc__ = _(\n-                "Must be empty or a valid JSON-formatted "\n-                "configuration \xe2\x80\x93 ${message}.",\n-                mapping={"message": str(exc)},\n-            )\n-\n-        raise JSONError(value)\n-\n-    return True\n-\n-\n-class IControlPanel(IPloneBaseTool):\n-    """Interface for the ControlPanel"""\n-\n-    def registerConfiglet(\n-        id,\n-        name,\n-        action,\n-        condition="",\n-        permission="",  # NOQA\n-        category="Plone",\n-        visible=1,\n-        appId=None,\n-        imageUrl=None,\n-        description="",\n-        REQUEST=None,\n-    ):\n-        """Registration of a Configlet"""\n-\n-    def unregisterConfiglet(id):  # NOQA\n-        """unregister Configlet"""\n-\n-    def unregisterApplication(appId):  # NOQA\n-        """unregister Application with all configlets"""\n-\n-    def getGroupIds():  # NOQA\n-        """list of the group ids"""\n-\n-    def getGroups():  # NOQA\n-        """list of groups as dicts with id and title"""\n-\n-    def enumConfiglets(group=None):  # NOQA\n-        """lists the Configlets of a group, returns them as dicts by\n-        calling .getAction() on each of them"""\n-\n-\n-class IEditingSchema(Interface):\n-\n-    available_editors = schema.List(\n-        title=_("Available editors"),\n-        description=_("Available editors in the portal."),\n-        default=["TinyMCE", "None"],\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        required=True,\n-    )\n-\n-    default_editor = schema.Choice(\n-        title=_("Default editor"),\n-        description=_(\n-            "Select the default wysiwyg "\n-            "editor. Users will be able to choose their "\n-            "own or select to use the site default."\n-        ),\n-        default="TinyMCE",\n-        missing_value=set(),\n-        vocabulary="plone.app.vocabularies.AvailableEditors",\n-        required=True,\n-    )\n-\n-    ext_editor = schema.Bool(\n-        title=_("Enable External Editor feature"),\n-        description=_(\n-            "Determines if the external editor "\n-            "feature is enabled. This feature requires a "\n-            "special client-side application installed. The "\n-            "users also have to enable this in their "\n-            "preferences."\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    enable_link_integrity_checks = schema.Bool(\n-        title=_("Enable link integrity checks"),\n-        description=_(\n-            "Determines if the users should get "\n-            "warnings when they delete or move content that "\n-            "is linked from inside the site."\n-        ),\n-        default=True,\n-        required=False,\n-    )\n-\n-    lock_on_ttw_edit = schema.Bool(\n-        title=_("Enable locking for through-the-web edits"),\n-        description=_(\n-            "Disabling locking here will only "\n-            "affect users editing content through the "\n-            "Plone web UI.  Content edited via WebDAV "\n-            "clients will still be subject to locking."\n-        ),\n-        default=True,\n-        required=False,\n-    )\n-\n-    subjects_of_navigation_root = schema.Bool(\n-        title=_("Limit tags/keywords to the current navigation root"),\n-        description=_(\n-            "Limit tags aka keywords vocabulary used for Tags field and "\n-            "in searches to the terms used inside the subtree of the current "\n-            "navigation root. This can be used together with Plone\'s "\n-            "multilingual extension plone.app.multilingual to only offer "\n-            "keywords of the current selected language. Other addons may "\n-            "utilize this feature for its specific purposes."\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-\n-class ITagAttrPair(Interface):\n-    tags = schema.TextLine(title="tags")\n-    attributes = schema.TextLine(title="attributes")\n-\n-\n-@implementer(ITagAttrPair)\n-class TagAttrPair:\n-    def __init__(self, tags="", attributes=""):\n-        self.tags = tags\n-        self.attributes = attributes\n-\n-\n-class IFilterSchema(Interface):\n-    """Combined schema for the adapter lookup."""\n-\n-    # class IFilterTagsSchema(Interface):\n-\n-    disable_filtering = schema.Bool(\n-        title=_("Disable HTML filtering"),\n-        description=_(\n-            "Warning: disabling this can be dangerous. "\n-            "Only disable if you know what you are doing."\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    nasty_tags = schema.List(\n-        title=_("Nasty tags"),\n-        description=_(\n-            "These tags and their content are completely blocked "\n-            "when a page is saved or rendered. They are only deleted"\n-            " if they are not marked as valid_tags"\n-        ),\n-        default=["style", "object", "embed", "applet", "script", "meta"],\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        required=False,\n-    )\n-\n-    valid_tags = schema.List(\n-        title=_("Valid tags"),\n-        description=_("A list of valid tags which will be not filtered out."),\n-        default=[\n-            "a",\n-            "abbr",\n-            "acronym",\n-            "address",\n-            "article",\n-            "aside",\n-            "audio",\n-            "b",\n-            "bdo",\n-            "big",\n-            "blockquote",\n-            "body",\n-            "br",\n-            "canvas",\n-            "caption",\n-            "cite",\n-            "code",\n-            "col",\n-            "colgroup",\n-            "command",\n-            "datalist",\n-            "dd",\n-            "del",\n-            "details",\n-            "dfn",\n-            "dialog",\n-            "div",\n-            "dl",\n-            "dt",\n-            "em",\n-            "figure",\n-            "figcaption",\n-            "footer",\n-            "h1",\n-            "h2",\n-            "h3",\n-            "h4",\n-            "h5",\n-            "h6",\n-            "head",\n-            "header",\n-            "hgroup",\n-            "hr",\n-            "html",\n-            "i",\n-            "iframe",\n-            "img",\n-            "ins",\n-            "kbd",\n-            "keygen",\n-            "li",\n-            "map",\n-            "mark",\n-            "meter",\n-            "nav",\n-            "ol",\n-            "output",\n-            "p",\n-            "pre",\n-            "progress",\n-            "q",\n-            "rp",\n-            "rt",\n-            "ruby",\n-            "samp",\n-            "section",\n-            "small",\n-            "source",\n-            "span",\n-            "strong",\n-            "sub",\n-            "sup",\n-            "table",\n-            "tbody",\n-            "td",\n-            "tfoot",\n-            "th",\n-            "thead",\n-            "time",\n-            "title",\n-            "tr",\n-            "tt",\n-            "u",\n-            "ul",\n-            "var",\n-            "video",\n-        ],\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        required=False,\n-    )\n-\n-    custom_attributes = schema.List(\n-        title=_("Custom attributes"),\n-        description=_("These attributes are additionally allowed."),\n-        default=["style", "controls", "poster", "autoplay"],\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        required=False,\n-    )\n-\n-\n-class ITinyMCELayoutSchema(Interface):\n-    """This interface defines the layout properties."""\n-\n-    resizing = schema.Bool(\n-        title=_("Enable resizing the editor window."),\n-        description=_(\n-            "This option gives you the ability to enable/disable "\n-            "resizing the editor window. "\n-        ),\n-        default=True,\n-        required=False,\n-    )\n-\n-    autoresize = schema.Bool(\n-        title=_("Enable auto resizing of the editor window."),\n-        description=_(\n-            "This option gives you the ability to enable/disable "\n-            "auto resizing the editor window depending "\n-            "on the content."\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    # TODO: add validation to assert % and px in the value\n-    editor_width = schema.TextLine(\n-        title=_("Editor width"),\n-        description=_(\n-            "This option gives you the ability to specify the "\n-            "width of the editor (like 100% or 400px)."\n-        ),\n-        default=None,\n-        required=False,\n-    )\n-\n-    # TODO: add validation to assert % and px in the value\n-    editor_height = schema.TextLine(\n-        title=_("Editor height"),\n-        description=_(\n-            "This option gives you the ability to specify the "\n-            "height of the editor in pixels. "\n-            "If auto resize is enabled this value is used "\n-            "as minimum height."\n-        ),\n-        default=None,\n-        required=False,\n-    )\n-\n-    content_css = schema.List(\n-        title=_("Choose the CSS used in WYSIWYG Editor Area"),\n-        description=_(\n-            "This option enables you to specify CSS files "\n-            "that will be used within the the editable area of the editor "\n-            "(e.g. ++plone++mystyles/tinymce.css). "\n-            "In addition to what is listed here, "\n-            "the barceloneta bundle CSS is also added."\n-        ),\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        default=[],\n-        required=False,\n-    )\n-\n-    header_styles = schema.List(\n-        title=_("Header styles"),\n-        description=_("Name|tag"),\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        default=[\n-            "Header 1|h1",\n-            "Header 2|h2",\n-            "Header 3|h3",\n-            "Header 4|h4",\n-            "Header 5|h5",\n-            "Header 6|h6",\n-        ],\n-    )\n-\n-    inline_styles = schema.List(\n-        title=_("Inline styles"),\n-        description=_("Name|format|icon"),\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        default=[\n-            "Bold|bold|bold",\n-            "Italic|italic|italic",\n-            "Underline|underline|underline",\n-            "Strikethrough|strikethrough|strikethrough",\n-            "Superscript|superscript|superscript",\n-            "Subscript|subscript|subscript",\n-            "Code|code|code",\n-            "Text in 2 columns|textcolumns2",\n-            "Text in 3 columns|textcolumns3",\n-        ],\n-    )\n-\n-    block_styles = schema.List(\n-        title=_("Block styles"),\n-        description=_("Name|format"),\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        default=["Paragraph|p", "Blockquote|blockquote", "Div|div", "Pre|pre"],\n-    )\n-\n-    alignment_styles = schema.List(\n-        title=_("Alignment styles"),\n-        description=_("Name|format|icon"),\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        default=[\n-            "Left|alignleft|align-left",\n-            "Center|aligncenter|align-center",\n-            "Right|alignright|align-right",\n-            "Justify|alignjustify|align-justify",\n-        ],\n-    )\n-\n-    table_styles = schema.List(\n-        title=_("Table styles"),\n-        description=_("Name|class"),\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        default=["Listing|listing", "Invisible Grid|invisible-grid"],\n-    )\n-\n-    formats = schema.Text(\n-        title=_("Formats"),\n-        description=_(\n-            "Enter a JSON-formatted style format configuration. "\n-            "A format is for example the style that get applied when "\n-            "you press the bold button inside the editor. "\n-            "See https://www.tinymce.com/docs/configure/content-formatting/#formats"\n-        ),  # NOQA: E501\n-        constraint=validate_json,\n-        default=dump_json_to_text(\n-            {\n-                "discreet": {"inline": "span", "classes": "discreet"},\n-                "clearfix": {"block": "div", "classes": "clearfix"},\n-                "alignleft": {\n-                    "selector": "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table",\n-                    "classes": "text-start",\n-                },\n-                "aligncenter": {\n-                    "selector": "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table",\n-                    "classes": "text-center",\n-                },\n-                "alignright": {\n-                    "selector": "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table",\n-                    "classes": "text-end",\n-                },\n-                "alignjustify": {\n-                    "selector": "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table",\n-                    "classes": "text-justify",\n-                },\n-                "textcolumns2": {"selector": "p", "classes": "text-columns-2"},\n-                "textcolumns3": {"selector": "p", "classes": "text-columns-3"}\n-            }\n-        ),\n-        required=True,\n-    )\n-\n-\n-class ITinyMCEPluginSchema(Interface):\n-    """This interface defines the toolbar properties."""\n-\n-    plugins = schema.List(\n-        title=_("label_tinymce_plugins", default="Editor plugins"),\n-        description=_(\n-            "help_tinymce_plugins", default=("Select plugins to include with tinymce")\n-        ),\n-        value_type=schema.Choice(\n-            vocabulary=SimpleVocabulary(\n-                [\n-                    SimpleTerm("advlist", "advlist", "advlist"),\n-                    SimpleTerm("anchor", "anchor", "anchor"),\n-                    SimpleTerm("autosave", "autosave", "autosave"),\n-                    SimpleTerm("charmap", "charmap", "charmap"),\n-                    SimpleTerm("code", "code", "code"),\n-                    SimpleTerm("colorpicker", "colorpicker", "colorpicker"),\n-                    SimpleTerm("contextmenu", "contextmenu", "contextmenu"),\n-                    SimpleTerm("directionality", "directionality", "directionality"),\n-                    SimpleTerm("emoticons", "emoticons", "emoticons"),\n-                    SimpleTerm("fullpage", "fullpage", "fullpage"),\n-                    SimpleTerm("fullscreen", "fullscreen", "fullscreen"),\n-                    SimpleTerm("hr", "hr", "hr"),\n-                    SimpleTerm("insertdatetime", "insertdatetime", "insertdatetime"),\n-                    SimpleTerm("layer", "layer", "layer"),\n-                    SimpleTerm("lists", "lists", "lists"),\n-                    SimpleTerm("media", "media", "media"),\n-                    SimpleTerm("nonbreaking", "nonbreaking", "nonbreaking"),\n-                    SimpleTerm("noneditable", "noneditable", "noneditable"),\n-                    SimpleTerm("pagebreak", "pagebreak", "pagebreak"),\n-                    SimpleTerm("paste", "paste", "paste"),\n-                    SimpleTerm("preview", "preview", "preview"),\n-                    SimpleTerm("print", "print", "print"),\n-                    # XXX disable save button since it is not implemeneted\n-                    # SimpleTerm(\'save\', \'save\', u\'save\'),\n-                    SimpleTerm("searchreplace", "searchreplace", "searchreplace"),\n-                    SimpleTerm("tabfocus", "tabfocus", "tabfocus"),\n-                    SimpleTerm("table", "table", "table"),\n-                    SimpleTerm("textcolor", "textcolor", "textcolor"),\n-                    SimpleTerm("textpattern", "textpattern", "textpattern"),\n-                    SimpleTerm("template", "template", "template"),\n-                    SimpleTerm("visualblocks", "visualblocks", "visualblocks"),\n-                    SimpleTerm("visualchars", "visualchars", "visualchars"),\n-                    SimpleTerm("wordcount", "wordcount", "wordcount"),\n-                ]\n-            )\n-        ),\n-        default=[\n-            "advlist",\n-            "fullscreen",\n-            "hr",\n-            "lists",\n-            "media",\n-            "nonbreaking",\n-            "noneditable",\n-            "pagebreak",\n-            "paste",\n-            "preview",\n-            "print",\n-            "searchreplace",\n-            "tabfocus",\n-            "table",\n-            "visualchars",\n-            "wordcount",\n-            "code",\n-        ],\n-        missing_value=[],\n-        required=False,\n-    )\n-\n-    menubar = schema.List(\n-        title=_("label_tinymce_menubar", default="Menubar"),\n-        description=_(\n-            "help_tinymce_menubar",\n-            default=("Enter what items you would like in the menu bar."),\n-        ),\n-        required=True,\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        default=["edit", "table", "format", "tools", "view", "insert"],\n-    )\n-\n-    menu = schema.Text(\n-        title=_("label_tinymce_menu", "Menu"),\n-        description=_(\n-            "hint_tinymce_menu", default="JSON formatted Menu configuration."\n-        ),\n-        constraint=validate_json,\n-        default=dump_json_to_text(\n-            {\n-                "edit": {\n-                    "title": "Edit",\n-                    "items": "undo redo | cut copy paste pastetext | "\n-                    "searchreplace textpattern selectall | textcolor",\n-                },\n-                "insert": {"title": "Insert", "items": "link media | template hr"},\n-                "view": {\n-                    "title": "View",\n-                    "items": "visualaid visualchars visualblocks preview "\n-                    "fullpage fullscreen code",\n-                },\n-                "format": {\n-                    "title": "Format",\n-                    "items": "bold italic underline strikethrough "\n-                    "superscript subscript | formats | removeformat",\n-                },\n-                "table": {\n-                    "title": "Table",\n-                    "items": "inserttable tableprops deletetable | cell row column",\n-                },\n-                "tools": {\n-                    "title": "Tools",\n-                    "items": "spellchecker charmap emoticons insertdatetime " "layer",\n-                },\n-            }\n-        ),\n-    )\n-\n-    templates = schema.Text(\n-        title=_("label_tinymce_templates", default="Templates"),\n-        description=_(\n-            "help_tinymce_templates",\n-            default=(\n-                "Enter the list of templates in json format "\n-                "https://www.tinymce.com/docs/plugins/template/"\n-            ),\n-        ),\n-        required=False,\n-        constraint=validate_json,\n-        default=dump_json_to_text({}),\n-    )\n-\n-    toolbar = schema.Text(\n-        title=_("label_tinymce_toolbar", default="Toolbar"),\n-        description=_(\n-            "help_tinymce_toolbar",\n-            default=("Enter how you would like the toolbar items to list."),\n-        ),\n-        required=True,\n-        default="ltr rtl | undo redo | styleselect | bold italic | "\n-        "alignleft aligncenter alignright alignjustify | "\n-        "bullist numlist outdent indent | "\n-        "unlink plonelink ploneimage",\n-    )\n-\n-    custom_plugins = schema.List(\n-        title=_("Custom plugins"),\n-        description=_(\n-            "Enter a list of custom plugins which will be loaded "\n-            "in the editor. Format is "\n-            "pluginname|location, one per line."\n-        ),\n-        required=False,\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        default=[],\n-    )\n-\n-    custom_buttons = schema.List(\n-        title=_("Custom buttons"),\n-        description=_("Enter a list of custom buttons which will be added to toolbar"),\n-        required=False,\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        default=[],\n-    )\n-\n-\n-ITinyMCELibrariesSchema = ITinyMCEPluginSchema  # bw compat\n-\n-\n-class ITinyMCESpellCheckerSchema(Interface):\n-    """This interface defines the libraries properties."""\n-\n-    libraries_spellchecker_choice = schema.Choice(\n-        title=_("Spellchecker plugin to use"),\n-        description=_(\n-            "This option allows you to choose the spellchecker for " "TinyMCE."\n-        ),\n-        missing_value=set(),\n-        vocabulary=SimpleVocabulary(\n-            [\n-                SimpleTerm("browser", "browser", _("Default browser spellchecker")),\n-                SimpleTerm("AtD", "AtD", _("After the deadline (FLOSS)")),\n-            ]\n-        ),\n-        default="browser",\n-        required=False,\n-    )\n-\n-    libraries_atd_ignore_strings = schema.List(\n-        title=_("AtD ignore strings"),\n-        description=_(\n-            "label_atd_ignore_strings",\n-            default=\'A list of strings which the "After the Deadline" \'\n-            "spellchecker should ignore. "\n-            "Note: This option is only applicable when the "\n-            "appropriate spellchecker has been chosen above.",\n-        ),\n-        default=["Zope", "Plone", "TinyMCE"],\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        required=False,\n-    )\n-\n-    libraries_atd_show_types = schema.List(\n-        title=_("AtD error types to show"),\n-        description=_(\n-            "help_atderrortypes_to_show",\n-            default="A list of error types which the "\n-            \'"After the Deadline" spellchecker should check for. \'\n-            "By default, all the available error type will be "\n-            "listed here.",\n-        ),\n-        value_type=schema.TextLine(),\n-        default=[\n-            "Bias Language",\n-            "Cliches",\n-            "Complex Expression",\n-            "Diacritical Marks",\n-            "Double Negatives",\n-            "Hidden Verbs",\n-            "Jargon Language",\n-            "Passive voice",\n-            "Phrases to Avoid",\n-            "Redundant Expression",\n-        ],\n-        missing_value=[],\n-        required=False,\n-    )\n-\n-    libraries_atd_service_url = schema.TextLine(\n-        title=_("AtD service URL"),\n-        description=_(\n-            "help_atd_service_url",\n-            default=\'The URL of the "After the Deadline" grammar and spell \'\n-            "checking server. "\n-            "The default value is the public server, "\n-            "but ideally you should download and install your own "\n-            "and specify its address here.",\n-        ),\n-        required=True,\n-        default="service.afterthedeadline.com",\n-    )\n-\n-\n-class ITinyMCEResourceTypesSchema(Interface):\n-    """This interface defines the resource types properties."""\n-\n-    # XXX Not implemented in new tinymce version. Need to decide about this\n-    # rooted = schema.Bool(\n-    #    title=_(u"Rooted to current object"),\n-    #    description=_(u"When enabled the user will be rooted to the current "\n-    #                  "object and can\'t add links and images from other "\n-    #                  "parts of the site."),\n-    #    default=False,\n-    #    required=False)\n-\n-    contains_objects = schema.List(\n-        title=_("Contains objects"),\n-        description=_(\n-            "Enter a list of content types which can contain other "\n-            "objects. Format is one contenttype per line."\n-        ),\n-        value_type=schema.TextLine(),\n-        default=["Folder", "Large Plone Folder", "Plone Site"],\n-        missing_value=[],\n-        required=False,\n-    )\n-\n-    image_objects = schema.List(\n-        title=_("Image objects"),\n-        description=_(\n-            "Enter a list of content types which can be used as "\n-            "images. Format is one contenttype per line."\n-        ),\n-        default=["Image"],\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        required=False,\n-    )\n-\n-    entity_encoding = schema.Choice(\n-        title=_("Entity encoding"),\n-        description=_(\n-            "This option controls how entities/characters get processed. "\n-            "Named: Characters will be converted into named entities "\n-            "based on the entities option. "\n-            "Numeric: Characters will be converted into numeric entities. "\n-            "Raw: All characters will be stored in non-entity form "\n-            "except these XML default entities: amp lt gt quot"\n-        ),\n-        # missing_value=set(),\n-        vocabulary=SimpleVocabulary(\n-            [\n-                SimpleTerm("named", "named", _("Named")),\n-                SimpleTerm("numeric", "numeric", _("Numeric")),\n-                SimpleTerm("raw", "raw", _("Raw")),\n-            ]\n-        ),\n-        default="raw",\n-        required=False,\n-    )\n-\n-\n-class ITinyMCEAdvancedSchema(Interface):\n-    """This interface defines the resource types properties."""\n-\n-    other_settings = schema.Text(\n-        title=_("label_tinymce_other_settings", "Other settings"),\n-        description=_(\n-            "hint_tinymce_other_settings",\n-            default="Other TinyMCE configuration formatted as JSON.",\n-        ),\n-        required=False,\n-        constraint=validate_json,\n-        default=dump_json_to_text({}),\n-    )\n-\n-\n-class ITinyMCESchema(\n-    ITinyMCELayoutSchema,\n-    ITinyMCEPluginSchema,\n-    ITinyMCESpellCheckerSchema,\n-    ITinyMCEResourceTypesSchema,\n-    ITinyMCEAdvancedSchema,\n-):\n-    """TinyMCE Schema"""\n-\n-\n-class IMaintenanceSchema(Interface):\n-\n-    days = schema.Int(\n-        title=_("Days of object history to keep after packing"),\n-        description=_(\n-            "You should pack your database regularly. This number "\n-            "indicates how many days of undo history you want to "\n-            "keep. It is unrelated to versioning, so even if you "\n-            "pack the database, the history of the content changes "\n-            "will be kept. Recommended value is 7 days."\n-        ),\n-        default=7,\n-        min=0,\n-        required=True,\n-    )\n-\n-\n-class INavigationSchema(Interface):\n-\n-    navigation_depth = schema.Int(\n-        title=_("Navigation depth"),\n-        description=_("Number of folder levels to show in the navigation."),\n-        default=3,\n-        required=True,\n-    )\n-\n-    generate_tabs = schema.Bool(\n-        title=_("Automatically generate tabs"),\n-        description=_(\n-            "By default, all items created at the root level will "\n-            "appear as tabs. You can turn this off if you prefer manually "\n-            "constructing this part of the navigation."\n-        ),\n-        default=True,\n-        required=False,\n-    )\n-\n-    nonfolderish_tabs = schema.Bool(\n-        title=_("Generate tabs for items other than folders."),\n-        description=_(\n-            "By default, any content item in the root of the portal will "\n-            "appear as a tab. If you turn this option off, only folders "\n-            "will be shown. This only has an effect if \'automatically "\n-            "generate tabs\' is enabled."\n-        ),\n-        default=True,\n-        required=False,\n-    )\n-\n-    sort_tabs_on = schema.Choice(\n-        title=_("Sort tabs on"),\n-        description=_("Index used to sort the tabs"),\n-        required=True,\n-        default="getObjPositionInParent",\n-        vocabulary=SimpleVocabulary(\n-            [\n-                # there is no vocabulary of sortable indexes by now, so hard code\n-                # some options here\n-                SimpleTerm(\n-                    "getObjPositionInParent",\n-                    "getObjPositionInParent",\n-                    _("Position in Parent"),\n-                ),\n-                SimpleTerm("sortable_title", "sortable_title", _("Title")),\n-                SimpleTerm("getId", "getId", _("Short Name (ID)")),\n-            ]\n-        ),\n-    )\n-    sort_tabs_reversed = schema.Bool(\n-        title=_("Reversed sort order for tabs."),\n-        description=_("Sort tabs in descending."),\n-        default=False,\n-        required=False,\n-    )\n-\n-    displayed_types = schema.Tuple(\n-        title=_("Displayed content types"),\n-        description=_(\n-            "The content types that should be shown in the navigation and " "site map."\n-        ),\n-        required=False,\n-        default=("Image", "File", "Link", "News Item", "Folder", "Document", "Event"),\n-        missing_value=(),\n-        value_type=schema.Choice(\n-            source="plone.app.vocabularies.ReallyUserFriendlyTypes"\n-        ),\n-    )\n-\n-    filter_on_workflow = schema.Bool(\n-        title=_("Filter on workflow state"),\n-        description=_(\n-            "The workflow states that should be shown in the navigation "\n-            "and the site map."\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    workflow_states_to_show = schema.Tuple(\n-        required=False,\n-        default=(),\n-        missing_value=(),\n-        value_type=schema.Choice(source="plone.app.vocabularies.WorkflowStates"),\n-    )\n-\n-    show_excluded_items = schema.Bool(\n-        title=_(\n-            "Show items normally excluded from navigation if viewing their " "children."\n-        ),\n-        description=_(\n-            "If an item has been excluded from navigation should it be "\n-            "shown in navigation when viewing content contained within it "\n-            "or within a subfolder."\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    root = schema.TextLine(\n-        title=_("Root"),\n-        description=_(\n-            "Path to be used as navigation root, relative to Plone site root."\n-            "Starts with \'/\'"\n-        ),\n-        default="/",\n-        required=True,\n-    )\n-\n-    sitemap_depth = schema.Int(\n-        title=_("Sitemap depth"),\n-        description=_("Number of folder levels to show in the site map."),\n-        default=3,\n-        required=True,\n-    )\n-\n-    parent_types_not_to_query = schema.List(\n-        title=_("Hide children of these types"),\n-        description=_("Hide content inside the following types in Navigation."),\n-        default=["TempFolder"],\n-        value_type=schema.TextLine(),\n-        missing_value=(),\n-        required=False,\n-    )\n-\n-\n-class ISearchSchema(Interface):\n-\n-    enable_livesearch = schema.Bool(\n-        title=_("Enable LiveSearch"),\n-        description=_(\n-            "Enables the LiveSearch feature, which shows live "\n-            "results if the browser supports JavaScript."\n-        ),\n-        default=True,\n-        required=False,\n-    )\n-\n-    types_not_searched = schema.Tuple(\n-        title=_("Define the types to be shown in the site and searched"),\n-        description=_(\n-            "Define the types that should be searched and be "\n-            "available in the user facing part of the site. "\n-            "Note that if new content types are installed, they "\n-            "will be enabled by default unless explicitly turned "\n-            "off here or by the relevant installer."\n-        ),\n-        required=False,\n-        default=(\n-            "Discussion Item",\n-            "Plone Site",\n-            "TempFolder",\n-        ),\n-        missing_value=(),\n-        value_type=schema.Choice(source="plone.app.vocabularies.PortalTypes"),\n-    )\n-\n-    search_results_description_length = schema.Int(\n-        title=_(\n-            "Crop the item description in search result listings "\n-            "after a number of characters."\n-        ),\n-        required=False,\n-        default=160,\n-    )\n-\n-    sort_on = schema.Choice(\n-        title=_("label_sort_on", default="Sort on"),\n-        description=_("Sort the default search on this index"),\n-        vocabulary=SimpleVocabulary(\n-            [\n-                SimpleTerm("relevance", "relevance", _("relevance")),\n-                SimpleTerm("Date", "Date", _("date (newest first)")),\n-                SimpleTerm("sortable_title", "sortable_title", _("alphabetically")),\n-            ]\n-        ),\n-        default="relevance",\n-        required=True,\n-    )\n-\n-\n-class ISecuritySchema(Interface):\n-\n-    enable_self_reg = schema.Bool(\n-        title=_("Enable self-registration"),\n-        description=_(\n-            "Allows users to register themselves on the site. If "\n-            "not selected, only site managers can add new users."\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    enable_user_pwd_choice = schema.Bool(\n-        title=_("Let users select their own passwords"),\n-        description=_(\n-            "If not selected, a URL will be generated and "\n-            "e-mailed. Users are instructed to follow the link to "\n-            "reach a page where they can change their password and "\n-            "complete the registration process; this also verifies "\n-            "that they have entered a valid email address."\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    enable_user_folders = schema.Bool(\n-        title=_("Enable User Folders"),\n-        description=_(\n-            "If selected, home folders where users can create "\n-            "content will be created when they log in."\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    allow_anon_views_about = schema.Bool(\n-        title=_("Allow anyone to view \'about\' information"),\n-        description=_(\n-            "If not selected only logged-in users will be able to "\n-            "view information about who created an item and when it "\n-            "was modified."\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    use_email_as_login = schema.Bool(\n-        title=_("Use email address as login name"),\n-        description=_(\n-            "Allows users to login with their email address instead "\n-            "of specifying a separate login name. This also updates "\n-            "the login name of existing users, which may take a "\n-            "while on large sites. The login name is saved as "\n-            "lower case, but to be userfriendly it does not matter "\n-            "which case you use to login. When duplicates are found, "\n-            "saving this form will fail. You can use the "\n-            "@@migrate-to-emaillogin page to show the duplicates."\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    use_uuid_as_userid = schema.Bool(\n-        title=_("Use UUID user ids"),\n-        description=_(\n-            "Use automatically generated UUIDs as user id for new users. "\n-            "When not turned on, the default is to use the same as the "\n-            "login name, or when using the email address as login name we "\n-            "generate a user id based on the fullname."\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    autologin_after_password_reset = schema.Bool(\n-        title=_("Login user after password reset"),\n-        description=_(\n-            "After successful password reset the user will be logged "\n-            "in automatically."\n-        ),\n-        default=True,\n-        required=False,\n-    )\n-\n-\n-class ISiteSchema(Interface):\n-\n-    site_title = schema.TextLine(\n-        title=_("Site title"),\n-        description=_(\n-            "This shows up in the title bar of " "browsers and in syndication feeds."\n-        ),\n-        default="Plone site",\n-    )\n-\n-    site_logo = schema.Bytes(\n-        title=_("Site Logo"),\n-        description=_("This shows a custom logo on your site."),\n-        required=False,\n-    )\n-\n-    site_favicon_mimetype = schema.TextLine(\n-        title=_("MIME type of the site favicon"),\n-        description=_(\n-            "MIME type of the favicon (automatically set when a new favicon is uploaded)"\n-        ),\n-        required=False,\n-        default="image/vnd.microsoft.icon",\n-    )\n-\n-    site_favicon = schema.Bytes(\n-        title=_("Site Favicon"),\n-        description=_("This shows a custom favicon on your site."),\n-        required=False,\n-    )\n-\n-    exposeDCMetaTags = schema.Bool(\n-        title=_("Expose Dublin Core metadata"),\n-        description=_("Exposes the Dublin Core properties as metatags."),\n-        default=False,\n-        required=False,\n-    )\n-\n-    enable_sitemap = schema.Bool(\n-        title=_("Expose sitemap.xml.gz"),\n-        description=_(\n-            "Exposes your content as a file "\n-            "according to the "\n-            "<a href=\'http://sitemaps.org\'>sitemaps.org</a> "\n-            "standard. You "\n-            "can submit this to compliant search engines "\n-            "like Google, Yahoo and Microsoft. It allows "\n-            "these search engines to more intelligently "\n-            "crawl your site."\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    webstats_js = schema.SourceText(\n-        title=_("JavaScript for web statistics support"),\n-        description=_(\n-            "For enabling web statistics support "\n-            "from external providers (e.g. Google "\n-            "Analytics). Paste the provided code snippet here. "\n-            "It will be rendered as "\n-            "entered near the end of the page."\n-        ),\n-        default="",\n-        required=False,\n-    )\n-\n-    display_publication_date_in_byline = schema.Bool(\n-        title=_("Display publication date"),\n-        description=_("Show in the byline the date a content item was published."),\n-        default=False,\n-        required=False,\n-    )\n-\n-    icon_visibility = schema.Choice(\n-        title=_("Icon visibility"),\n-        description=_("Show icons in listings"),\n-        default="enabled",\n-        vocabulary=SimpleVocabulary(\n-            [\n-                SimpleTerm("false", "false", _("Never")),\n-                SimpleTerm("enabled", "enabled", _("Always")),\n-                SimpleTerm(\n-                    "authenticated", "authenticated", _("For authenticated users only")\n-                ),\n-            ]\n-        ),\n-        required=True,\n-    )\n-\n-    thumb_visibility = schema.Choice(\n-        title=_("Thumb visibility"),\n-        description=_("Show thumbnail images in listings"),\n-        default="enabled",\n-        vocabulary=SimpleVocabulary(\n-            [\n-                SimpleTerm("false", "false", _("Never")),\n-                SimpleTerm("enabled", "enabled", _("Always")),\n-                SimpleTerm(\n-                    "authenticated", "authenticated", _("For authenticated users only")\n-                ),\n-            ]\n-        ),\n-        required=True,\n-    )\n-\n-    no_thumbs_portlet = schema.Bool(\n-        title=_("No Thumbs in portlets"),\n-        description=_(\n-            "Suppress thumbs in all portlets;"\n-            " this default can be overridden individually "\n-            "in selected portlets"\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    no_thumbs_lists = schema.Bool(\n-        title=_("No thumbs in list views"),\n-        description=_(\n-            "Suppress thumbs in all list views; "\n-            "this default can be overriden individually"\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    no_thumbs_summary = schema.Bool(\n-        title=_("No thumbs in summary views"),\n-        description=_(\n-            "Suppress thumbs in all summary views; "\n-            "this default can be overriden individually"\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    no_thumbs_tables = schema.Bool(\n-        title=_("No thumbs in table views"),\n-        description=_(\n-            "Suppress thumbs in all tableviews and in folder contents view; "\n-            "this default can be overriden individually"\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    thumb_scale_portlet = schema.Choice(\n-        title=_("Thumb scale for portlets"),\n-        description=_("This default can be overriden individually."),\n-        default="icon",\n-        vocabulary="plone.app.vocabularies.ImagesScales",\n-        required=True,\n-    )\n-\n-    thumb_scale_listing = schema.Choice(\n-        title=_("Thumb scale for listings"),\n-        description=_(\n-            "E.g. standard view;" " This default can be overriden individually."\n-        ),\n-        default="thumb",\n-        vocabulary="plone.app.vocabularies.ImagesScales",\n-        required=True,\n-    )\n-\n-    thumb_scale_table = schema.Choice(\n-        title=_("Thumb scale for tables"),\n-        description=_(\n-            "E.g., tabular view, folder content listing;"\n-            " This default can be overriden individually."\n-        ),\n-        default="tile",\n-        vocabulary="plone.app.vocabularies.ImagesScales",\n-        required=True,\n-    )\n-\n-    thumb_scale_summary = schema.Choice(\n-        title=_("Thumb scale for summary view"),\n-        description=_("This default can be overriden individually."),\n-        default="mini",\n-        vocabulary="plone.app.vocabularies.ImagesScales",\n-        required=True,\n-    )\n-\n-    toolbar_position = schema.Choice(\n-        title=_("Toolbar position"),\n-        description=_(\n-            "It can be on the side (vertical mode) " "or on the top (horizontal mode)"\n-        ),\n-        default="side",\n-        vocabulary=SimpleVocabulary(\n-            [SimpleTerm("side", "side", _("Side")), SimpleTerm("top", "top", _("Top"))]\n-        ),\n-        required=True,\n-    )\n-\n-    toolbar_logo = schema.TextLine(\n-        title=_("Relative URL for the toolbar logo"),\n-        description=_(\n-            "This must be a URL relative to the site root. "\n-            "By default it is /++plone++static/plone-toolbarlogo.svg"\n-        ),\n-        default="/++plone++static/plone-toolbarlogo.svg",\n-        required=False,\n-    )\n-\n-    robots_txt = schema.SourceText(\n-        title=_("robots.txt"),\n-        description=_(\n-            "help_robots_txt",\n-            default="robots.txt is read by search engines to "\n-            "determine how to index your site. "\n-            "For details see <a href=\'http://www.robotstxt.org\'>"\n-            "http://www.robotstxt.org</a>. "\n-            "Use \'{portal_url}\' for the site URL.",\n-        ),\n-        default=ROBOTS_TXT,\n-        required=False,\n-    )\n-\n-    default_page = schema.List(\n-        title=_("Default page IDs"),\n-        description=_(\n-            "Select which IDs (short names) can act as fallback "\n-            "default pages for a container."\n-        ),\n-        required=False,\n-        default=["index_html", "index.html", "index.htm", "FrontPage"],\n-        missing_value=[],\n-        value_type=schema.TextLine(),\n-    )\n-\n-    roles_allowed_to_add_keywords = schema.List(\n-        title=_("Roles that can add keywords"),\n-        description=_(\n-            "help_allow_roles_to_add_keywords",\n-            default="Only the following roles can add new keywords ",\n-        ),\n-        required=False,\n-        default=[\n-            "Manager",\n-            "Site Administrator",\n-            "Reviewer",\n-        ],\n-        missing_value=[],\n-        value_type=schema.Choice(vocabulary="plone.app.vocabularies.Roles"),\n-    )\n-\n-\n-class IDateAndTimeSchema(Interface):\n-    """Controlpanel settings for date and time related settings."""\n-\n-    portal_timezone = schema.Choice(\n-        title=_("Portal default timezone"),\n-        description=_(\n-            "help_portal_timezone",\n-            default="The timezone setting of the portal. Users can set "\n-            "their own timezone, if available timezones are "\n-            "defined.",\n-        ),\n-        required=True,\n-        default=None,\n-        vocabulary="plone.app.vocabularies.CommonTimezones",\n-    )\n-\n-    available_timezones = schema.List(\n-        title=_("Available timezones"),\n-        description=_(\n-            "help_available_timezones",\n-            default="The timezones, which should be available for the "\n-            "portal. Can be set for users and events",\n-        ),\n-        required=False,\n-        default=[],\n-        missing_value=[],\n-        value_type=schema.Choice(vocabulary="plone.app.vocabularies.Timezones"),\n-    )\n-\n-    first_weekday = schema.Choice(\n-        title=_("label_first_weekday", default="First weekday"),\n-        description=_("help_first_weekday", default="First day in the week."),\n-        required=True,\n-        default=None,\n-        vocabulary="plone.app.vocabularies.Weekdays",\n-    )\n-\n-\n-class ITypesSchema(Interface):\n-    """Controlpanel settings for the types settings."""\n-\n-    types_use_view_action_in_listings = schema.List(\n-        title=_("Types which use the view action in listing views."),\n-        description=_(\n-            "help_types_use_view_action_in_listings",\n-            default="When clicking items in listing views, these "\n-            "types will use the \'view\' action instead of using "\n-            "their default view.",\n-        ),\n-        required=False,\n-        default=["Image", "File"],\n-        missing_value=[],\n-        value_type=schema.TextLine(),\n-    )\n-\n-    redirect_links = schema.Bool(\n-        title=_("Redirect links"),\n-        description=_(\n-            "help_redirect_links",\n-            default="When clicking on a Link type, should the user be "\n-            "taken to the default view or be redirected to the "\n-            "Link\'s URL?",\n-        ),\n-        required=False,\n-        default=True,\n-    )\n-\n-    default_page_types = schema.List(\n-        title=_("Types that can be set as a default page"),\n-        description=_(\n-            "The content types that should be available for selection "\n-            "when setting a default page."\n-        ),\n-        required=False,\n-        missing_value=[],\n-        default=[\n-            "Document",\n-            "Event",\n-            "News Item",\n-            "Collection",\n-        ],\n-        value_type=schema.TextLine(),\n-    )\n-\n-\n-class IMailSchema(Interface):\n-\n-    smtp_host = schema.TextLine(\n-        title=_("label_smtp_server", default="SMTP server"),\n-        description=_(\n-            "help_smtp_server",\n-            default="The address of your local "\n-            "SMTP (outgoing e-mail) server. Usually "\n-            "\'localhost\', unless you use an "\n-            "external server to send e-mail.",\n-        ),\n-        default="localhost",\n-        required=True,\n-    )\n-\n-    smtp_port = schema.Int(\n-        title=_("label_smtp_port", default="SMTP port"),\n-        description=_(\n-            "help_smtp_port",\n-            default="The port of your local SMTP "\n-            "(outgoing e-mail) server. Usually \'25\'.",\n-        ),\n-        default=25,\n-        required=True,\n-    )\n-\n-    smtp_userid = schema.TextLine(\n-        title=_("label_smtp_userid", default="ESMTP username"),\n-        description=_(\n-            "help_smtp_userid",\n-            default="Username for authentication "\n-            "to your e-mail server. Not required "\n-            "unless you are using ESMTP.",\n-        ),\n-        default=None,\n-        required=False,\n-    )\n-\n-    smtp_pass = schema.Password(\n-        title=_("label_smtp_pass", default="ESMTP password"),\n-        description=_(\n-            "help_smtp_pass", default="The password for the ESMTP " "user account."\n-        ),\n-        default=None,\n-        required=False,\n-    )\n-\n-    email_from_name = schema.TextLine(\n-        title=_("Site \'From\' name"),\n-        description=_(\n-            "Plone generates e-mail using " "this name as the e-mail " "sender."\n-        ),\n-        default=None,\n-        required=True,\n-    )\n-\n-    email_from_address = schema.ASCIILine(\n-        title=_("Site \'From\' address"),\n-        description=_(\n-            "Plone generates e-mail using "\n-            "this address as the e-mail "\n-            "return address. It is also "\n-            "used as the destination "\n-            "address for the site-wide "\n-            "contact form and the \'Send test "\n-            "e-mail\' feature."\n-        ),\n-        default=None,\n-        required=True,\n-    )\n-\n-    email_charset = schema.ASCIILine(\n-        title=_("E-mail characterset"),\n-        description=_("Characterset to use when sending e-mails."),\n-        default="utf-8",\n-        required=True,\n-    )\n-\n-\n-class IMarkupSchema(Interface):\n-\n-    default_type = schema.Choice(\n-        title=_("Default format"),\n-        description=_(\n-            "Select the default format of textfields for newly "\n-            "created content objects."\n-        ),\n-        default="text/html",\n-        vocabulary="plone.app.vocabularies.AllowableContentTypes",\n-        required=True,\n-    )\n-\n-    allowed_types = schema.Tuple(\n-        title=_("Alternative formats"),\n-        description=_(\n-            "Select which formats are available for users as "\n-            "alternative to the default format. Note that if new "\n-            "formats are installed, they will be enabled for text "\n-            "fields by default unless explicitly turned off here "\n-            "or by the relevant installer."\n-        ),\n-        required=True,\n-        default=("text/html", "text/x-web-textile"),\n-        missing_value=(),\n-        value_type=schema.Choice(\n-            vocabulary="plone.app.vocabularies.AllowableContentTypes"\n-        ),\n-    )\n-\n-    markdown_extensions = schema.List(\n-        default=[\n-            "markdown.extensions.fenced_code",\n-            "markdown.extensions.nl2br",\n-        ],\n-        description=_(\n-            "Look for available extensions at "\n-            "https://python-markdown.github.io/extensions/ or write your own."\n-        ),\n-        missing_value=(),\n-        required=False,\n-        title=_("Enabled markdown extensions"),\n-        value_type=schema.TextLine(),\n-    )\n-\n-\n-class IUserGroupsSettingsSchema(Interface):\n-\n-    many_groups = schema.Bool(\n-        title=_("Many groups?"),\n-        description=_(\n-            "Determines if your Plone is optimized "\n-            "for small or large sites. In environments with a "\n-            "lot of groups it can be very slow or impossible "\n-            "to build a list all groups. This option tunes the "\n-            "user interface and behaviour of Plone for this "\n-            "case by allowing you to search for groups instead "\n-            "of listing all of them."\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    many_users = schema.Bool(\n-        title=_("Many users?"),\n-        description=_(\n-            "Determines if your Plone is optimized "\n-            "for small or large sites. In environments with a "\n-            "lot of users it can be very slow or impossible to "\n-            "build a list all users. This option tunes the user "\n-            "interface and behaviour of Plone for this case by "\n-            "allowing you to search for users instead of "\n-            "listing all of them."\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-\n-def validate_twitter_username(value):\n-    if value and value.startswith("@"):\n-        raise Invalid(\'Twitter username should not include the "@" prefix character.\')\n-    return True\n-\n-\n-class ISocialMediaSchema(Interface):\n-\n-    share_social_data = schema.Bool(\n-        title=_("Share social data"),\n-        description=_(\n-            "Include meta tags on pages to give hints to "\n-            "social media on how to better render your pages "\n-            "when shared"\n-        ),\n-        default=True,\n-        required=False,\n-    )\n-\n-    twitter_username = schema.ASCIILine(\n-        title=_("Twitter username"),\n-        description=_(\n-            "To identify things like Twitter Cards. "\n-            \'Do not include the "@" prefix character.\'\n-        ),\n-        required=False,\n-        default="",\n-        constraint=validate_twitter_username,\n-    )\n-\n-    facebook_app_id = schema.ASCIILine(\n-        title=_("Facebook App ID"),\n-        description=_("To be used with some integrations like Open Graph data"),\n-        required=False,\n-        default="",\n-    )\n-\n-    facebook_username = schema.ASCIILine(\n-        title=_("Facebook username"),\n-        description=_("For linking Open Graph data to a Facebook account"),\n-        required=False,\n-        default="",\n-    )\n-\n-\n-class IImagingSchema(Interface):\n-    allowed_sizes = schema.List(\n-        title=_("Allowed image sizes"),\n-        description=_(\n-            "Specify all allowed maximum image dimensions, one per line. The "\n-            "required format is &lt;name&gt; &lt;width&gt;:&lt;height&gt;."\n-        ),\n-        value_type=schema.TextLine(),\n-        default=[\n-            "huge 1600:65536",\n-            "great 1200:65536",\n-            "larger 1000:65536",\n-            "large 800:65536",\n-            "teaser 600:65536",\n-            "preview 400:65536",\n-            "mini 200:65536",\n-            "thumb 128:128",\n-            "tile 64:64",\n-            "icon 32:32",\n-            "listing 16:16"\n-        ],\n-        missing_value=[],\n-        required=False,\n-    )\n-\n-    quality = schema.Int(\n-        title=_("Scaled image quality"),\n-        description=_(\n-            "A value for the quality of scaled images, from 1 "\n-            "(lowest) to 95 (highest). A value of 0 will mean "\n-            "plone.scaling\'s default will be used, which is "\n-            "currently 88."\n-        ),\n-        min=0,\n-        max=95,\n-        default=88,\n-    )\n-\n-    highpixeldensity_scales = schema.Choice(\n-        title=_("High pixel density mode"),\n-        description=_(""),\n-        default="disabled",\n-        vocabulary=SimpleVocabulary(\n-            [\n-                SimpleTerm("disabled", "disabled", "Disabled"),\n-                SimpleTerm("2x", "2x", "Enabled (2x)"),\n-                SimpleTerm("3x", "3x", "Enabled (2x, 3x)"),\n-            ]\n-        ),\n-    )\n-\n-    quality_2x = schema.Int(\n-        title=_("Image quality at 2x"),\n-        description=_(\n-            "A value for the quality of 2x high pixel density images, from 1 "\n-            "(lowest) to 95 (highest). A value of 0 will mean "\n-            "plone.scaling\'s default will be used, which is "\n-            "currently 62."\n-        ),\n-        min=0,\n-        max=95,\n-        default=62,\n-    )\n-\n-    quality_3x = schema.Int(\n-        title=_("Image quality at 3x"),\n-        description=_(\n-            "A value for the quality of 3x high pixel density images, from 1 "\n-            "(lowest) to 95 (highest). A value of 0 will mean "\n-            "plone.scaling\'s default will be used, which is "\n-            "currently 51."\n-        ),\n-        min=0,\n-        max=95,\n-        default=51,\n-    )\n-\n-    image_captioning = schema.Bool(\n-        title=_("image_captioning_title", "Enable image captioning"),\n-        description=_(\n-            "image_captioning_description",\n-            "Enable automatic image captioning for images set in the richtext editor based on the description of images.",\n-        ),\n-        default=True,\n-        required=False,\n-    )\n-\n-\n-class ILoginSchema(Interface):\n-\n-    auth_cookie_length = schema.Int(\n-        title=_("Auth cookie length"), default=0, required=False\n-    )\n-\n-    verify_login_name = schema.Bool(\n-        title=_("Verify login name"), default=True, required=False\n-    )\n-\n-    allow_external_login_sites = schema.Tuple(\n-        title=_("Allow external login sites"),\n-        default=(),\n-        value_type=schema.ASCIILine(),\n-        required=False,\n-    )\n-\n-    external_login_url = schema.ASCIILine(\n-        title=_("External login url"), default=None, required=False\n-    )\n-\n-    external_logout_url = schema.ASCIILine(\n-        title=_("External logout url"), default=None, required=False\n-    )\n-\n-    external_login_iframe = schema.Bool(\n-        title=_("External login iframe"), default=False, required=False\n-    )\n-\n-\n-class ILinkSchema(Interface):\n-\n-    external_links_open_new_window = schema.Bool(\n-        title=_("Open external links in new a window"),\n-        description=_(""),\n-        default=False,\n-        required=False,\n-    )\n-\n-    mark_special_links = schema.Bool(\n-        title=_("Mark special links"),\n-        description=_("Marks external or special protocol links with class."),\n-        default=False,\n-        required=False,\n-    )\n-\n-\n-def _check_tales_expression(value):\n-    from Products.PageTemplates.Expressions import getEngine\n-\n-    try:\n-        getEngine().compile(value)\n-    except Exception:\n-        raise Invalid(\n-            _(\n-                \'The expression "${value}" is invalid\',\n-                mapping={"value": value},\n-            )\n-        )\n-    return True\n-\n-\n-class IActionSchema(Interface):\n-\n-    category = schema.Choice(\n-        title=_("Category"),\n-        vocabulary="plone.app.vocabularies.PortalActionCategories",\n-        required=True,\n-    )\n-\n-    title = schema.TextLine(title=_("Title"), required=True)\n-\n-    description = schema.Text(title=_("Description"), required=False)\n-\n-    i18n_domain = schema.TextLine(\n-        title=_("i18n_domain_heading", default="I18n domain"),\n-        default="plone",\n-        required=False,\n-    )\n-\n-    url_expr = schema.ASCIILine(\n-        title=_("action_url_heading", default="Action URL"),\n-        description=_(\n-            "action_url_description",\n-            default="An expression producing the called URL. "\n-            "Example: string:${globals_view/navigationRootUrl}/page",\n-        ),\n-        required=True,\n-        constraint=_check_tales_expression,\n-    )\n-\n-    available_expr = schema.ASCIILine(\n-        title=_("action_condition_heading", default="Condition"),\n-        description=_("action_condition_description", default="A boolean expression"),\n-        required=False,\n-    )\n-\n-    permissions = schema.List(\n-        title=_("action_permissions_heading", default="Permissions"),\n-        required=True,\n-        default=["View"],\n-        missing_value=[],\n-        value_type=schema.Choice(vocabulary="plone.app.vocabularies.Permissions"),\n-    )\n-\n-    visible = schema.Bool(\n-        title=_("action_visibility_heading", default="Visible?"),\n-        default=True,\n-        required=False,\n-    )\n-\n-    position = schema.Int(\n-        title=_("action_position_heading", default="Position"),\n-        default=1,\n-        min=1,\n-        required=True,\n-    )\n-\n-\n-class INewActionSchema(Interface):\n-\n-    category = schema.Choice(\n-        title=_("Category"),\n-        vocabulary="plone.app.vocabularies.PortalActionCategories",\n-        required=True,\n-    )\n-\n-    id = schema.ASCIILine(title=_("Id"), required=True)\n-\n-    @invariant\n-    def validate_category_id(data):\n-        categoryid = data.category\n-        pa = getToolByName(getSite(), "portal_actions")\n-        category = pa.get(categoryid, {})\n-        actionid = data.id\n-        if actionid in category:\n-            raise Invalid(\n-                _(\n-                    \'An action with the id "${actionid}" already exists\',\n-                    mapping={"actionid": actionid},\n-                )\n-            )\n-        try:\n-            category._checkId(actionid)\n-        except Exception:\n-            raise Invalid(\n-                _(\n-                    \'The id "${actionid}" is invalid\',\n-                    mapping={"actionid": actionid},\n-                )\n-            )\n-\n-\n-class IPloneControlPanelView(Interface):\n-    """A marker interface for views showing a controlpanel."""\n-\n-\n-class IPloneControlPanelForm(IPloneControlPanelView):\n-    """Forms using plone.app.controlpanel"""\n-\n-    def _on_save():\n-        """Callback mehod which can be implemented by control panels to\n-        react when the form is successfully saved. This avoids the need\n-        to re-define actions only to do some additional notification or\n-        configuration which cannot be handled by the normal schema adapter.\n-\n-        By default, does nothing.\n-        """\n-\n-\n-class IConfigurationChangedEvent(Interface):\n-    """An event which is fired after a configuration setting has been changed."""\n-\n-    context = Attribute("The configuration context which was changed.")\n-\n-    data = Attribute("The configuration data which was changed.")\n+moved(\'plone.base.interfaces.controlpanel\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/interfaces/defaultpage.py b/Products/CMFPlone/interfaces/defaultpage.py\nindex 8b869b1cdd..4b9a4c610b 100644\n--- a/Products/CMFPlone/interfaces/defaultpage.py\n+++ b/Products/CMFPlone/interfaces/defaultpage.py\n@@ -1,16 +1,3 @@\n-from zope.interface import Interface\n+from zope.deprecation import moved\n \n-\n-class IDefaultPage(Interface):\n-    """Interface for a view that can determine if its context is the\n-    default page or not.\n-    """\n-\n-    def isDefaultPage(obj):\n-        """Finds out if the given obj is the default page for the\n-        adapted object.\n-        """\n-\n-    def getDefaultPage():\n-        """Returns the id of the default page for the adapted object.\n-        """\n+moved(\'plone.base.interfaces.defaultpage\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/events.py b/Products/CMFPlone/interfaces/events.py\nindex f83cc0430d..57f9fb71b6 100644\n--- a/Products/CMFPlone/interfaces/events.py\n+++ b/Products/CMFPlone/interfaces/events.py\n@@ -1,23 +1,3 @@\n-from zope.interface import Attribute\n-from zope.interface import Interface\n-from zope.interface.interfaces import IObjectEvent\n+from zope.deprecation import moved\n \n-\n-class ISiteManagerCreatedEvent(IObjectEvent):\n-    """An event that\'s fired once the Plone portal is enabled as a site.\n-    """\n-\n-\n-class IReorderedEvent(IObjectEvent):\n-    """An event that\'s fired once the Plone Tool has been notified of\n-       a reordering\n-    """\n-\n-\n-class IConfigurationChangedEvent(Interface):\n-    """An event which is fired after a configuration setting has been changed.\n-    """\n-\n-    context = Attribute("The configuration context which was changed.")\n-\n-    data = Attribute("The configuration data which was changed.")\n+moved(\'plone.base.interfaces.events\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/installable.py b/Products/CMFPlone/interfaces/installable.py\nindex f82e9ef240..79006705e0 100644\n--- a/Products/CMFPlone/interfaces/installable.py\n+++ b/Products/CMFPlone/interfaces/installable.py\n@@ -1,17 +1,3 @@\n-from zope.interface import Interface\n+from zope.deprecation import moved\n \n-\n-class INonInstallable(Interface):\n-\n-    def getNonInstallableProfiles():\n-        """Returns a list of profiles that should not be available for\n-           installation at portal creation time.\n-\n-           The usual use-case is to prevent extension profiles from showing up,\n-           that will be installed as part of the site creation anyways.\n-        """\n-\n-    def getNonInstallableProducts():\n-        """Returns a list of products that should not be available for\n-           installation.\n-        """\n+moved(\'plone.base.interfaces.installable\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/interface.py b/Products/CMFPlone/interfaces/interface.py\nindex 589430c96b..1d12e69c6c 100644\n--- a/Products/CMFPlone/interfaces/interface.py\n+++ b/Products/CMFPlone/interfaces/interface.py\n@@ -1,20 +1,3 @@\n-from Products.CMFPlone.interfaces.basetool import IPloneBaseTool\n-from zope.interface import Attribute\n+from zope.deprecation import moved\n \n-\n-class IInterfaceTool(IPloneBaseTool):\n-    """ This tool exposes the interface package for TTW applications,\n-    by accepting a dotted name of an interface and exporting the\n-    IInterface API """\n-\n-    id = Attribute(\'id\', \'Must be set to "portal_interface"\')\n-\n-    def objectImplements(obj, dotted_name):\n-        """ Asserts if an object implements a given interface """\n-\n-    def classImplements(obj, dotted_name):\n-        """ Asserts if an object\'s class implements a given interface """\n-\n-    def namesAndDescriptions(dotted_name, all=0):\n-        """ Returns a list of pairs (name, description) for a given\n-        interface"""\n+moved(\'plone.base.interfaces.interface\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/language.py b/Products/CMFPlone/interfaces/language.py\nindex e3838c37a9..e8f180cf11 100644\n--- a/Products/CMFPlone/interfaces/language.py\n+++ b/Products/CMFPlone/interfaces/language.py\n@@ -1,11 +1,3 @@\n-from zope.interface import Interface\n+from zope.deprecation import moved\n \n-\n-# Language-support\n-class ILanguage(Interface):\n-\n-    def get_language(self):\n-        """ return the contents language """\n-\n-    def set_language(self):\n-        """ return the contents language """\n+moved(\'plone.base.interfaces.language\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/login.py b/Products/CMFPlone/interfaces/login.py\nindex d86b1521c4..19e30f8a8f 100644\n--- a/Products/CMFPlone/interfaces/login.py\n+++ b/Products/CMFPlone/interfaces/login.py\n@@ -1,81 +1,3 @@\n-from Products.CMFPlone import PloneMessageFactory as _\n-from plone.schema.email import Email\n-from plone.z3cform.interfaces import IWrappedForm\n-from zope import schema\n-from zope.interface import Interface\n+from zope.deprecation import moved\n \n-\n-class IRedirectAfterLogin(Interface):\n-    """ Redirect after login adapters should provide this interface """\n-\n-\n-class IForcePasswordChange(Interface):\n-    """ Hook point to customize forcing a password change """\n-\n-\n-class IInitialLogin(Interface):\n-    """ Hook point to customize what happens the first time a user logs into\n-        the site """\n-\n-\n-class ILogin(Interface):\n-    """ Login form schema """\n-\n-    login = schema.TextLine(\n-        title=_(\'label_log_in\', default=\'Log in\'),\n-    )\n-\n-    password = schema.Password(\n-        title=_(\'label_password\', default=\'Password\'),\n-    )\n-\n-\n-class ILoginForm(IWrappedForm):\n-    """ Login form marker interface """\n-\n-\n-class ILoginFormSchema(Interface):\n-    """ Login form schema """\n-\n-    ac_name = schema.TextLine(\n-        title=_(\'label_login_name\', default=\'Login Name\'),\n-        required=True,\n-    )\n-\n-    ac_password = schema.Password(\n-        title=_(\'label_password\', default=\'Password\'),\n-        required=True,\n-    )\n-\n-    came_from = schema.TextLine(\n-        title=\'Came From\',  # not translated, hidden field\n-        required=False,\n-    )\n-\n-\n-class ILoginHelpForm(IWrappedForm):\n-    """ Login Help form marker interface """\n-\n-\n-class ILoginHelpFormSchema(Interface):\n-    """ Login Help form schema """\n-\n-    reset_password = schema.TextLine(\n-        title=_(\'label_pwreset_username\', default=\'Username\'),\n-        description=_(\n-            \'help_pwreset_username\',\n-            default=\'Enter your username \'\n-                    \'or email and we\xe2\x80\x99ll send you a password reset link.\',\n-        ),\n-        required=True,\n-    )\n-\n-    recover_username = Email(\n-        title=_(\'label_pwreset_email\', default=\'Email\'),\n-        description=_(\n-            \'help_pwreset_email\',\n-            default=\'Enter your email and \'\n-                    \'we\xe2\x80\x99ll send you your username.\',\n-        ),\n-        required=True,\n-    )\n+moved(\'plone.base.interfaces.login\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/migration.py b/Products/CMFPlone/interfaces/migration.py\nindex 2ae6a851f6..5672aac457 100644\n--- a/Products/CMFPlone/interfaces/migration.py\n+++ b/Products/CMFPlone/interfaces/migration.py\n@@ -1,32 +1,3 @@\n-from zope.interface import Interface\n+from zope.deprecation import moved\n \n-\n-class IMigrationTool(Interface):\n-    """Handles migrations between Plone releases."""\n-\n-    def getInstanceVersion():\n-        """The version this instance of Plone is on."""\n-\n-    def setInstanceVersion(version):\n-        """The version this instance of Plone is on."""\n-\n-    def getFileSystemVersion():\n-        """The version the filesystem code of Plone is on."""\n-\n-    def needUpgrading():\n-        """Need upgrading?"""\n-\n-    def coreVersions():\n-        """Useful core version information."""\n-\n-    def coreVersionsList():\n-        """Useful core version information."""\n-\n-    def needUpdateRole():\n-        """Do roles need to be updated?"""\n-\n-    def needRecatalog():\n-        """Does this thing now need recataloging?"""\n-\n-    def upgrade(REQUEST=None, dry_run=None, swallow_errors=1):\n-        """Perform the upgrade."""\n+moved(\'plone.base.interfaces.migration\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/password_reset.py b/Products/CMFPlone/interfaces/password_reset.py\nindex fde6f96bb4..97fd367189 100644\n--- a/Products/CMFPlone/interfaces/password_reset.py\n+++ b/Products/CMFPlone/interfaces/password_reset.py\n@@ -1,41 +1,3 @@\n-from zope.interface import Interface, Attribute\n+from zope.deprecation import moved\n \n-\n-class IPasswordResetToolView(Interface):\n-    """ BrowserView with utility methods """\n-\n-    def encode_mail_header(text):\n-        """ Encodes text into correctly encoded email header """\n-\n-    def encoded_mail_sender():\n-        """ returns encoded version of Portal name <portal_email> """\n-\n-    def registered_notify_subject():\n-        """ returns encoded version of registered notify template subject line """\n-\n-    def mail_password_subject():\n-        """ returns encoded version of mail password template subject line """\n-\n-\n-class IPWResetTool(Interface):\n-    """Defines an interface for a tool that provides a facility to\n-    reset forgotten passwords.\n-\n-    This interface is rather sparse, but sufficient to describe the\n-    task. (In this manner we void being dependant on a specific\n-    process) The details of the process are in the implementation,\n-    where they belong."""\n-\n-    id = Attribute(\'id\', \'Must be set to "portal_password_reset"\')\n-\n-    def requestReset(userid):\n-        """Ask the system to start the password reset procedure for\n-        user \'userid\'.\n-\n-        Returns the random string that must be used to reset the\n-        password."""\n-\n-    def resetPassword(userid, randomstring, password):\n-        """Set the password (in \'password\') for the user who maps to\n-        the string in \'randomstring\'. The \'userid\' parameter is provided\n-        in case extra authentication is needed."""\n+moved(\'plone.base.interfaces.password_reset\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/patterns.py b/Products/CMFPlone/interfaces/patterns.py\nindex 9a7a0add78..91983316aa 100644\n--- a/Products/CMFPlone/interfaces/patterns.py\n+++ b/Products/CMFPlone/interfaces/patterns.py\n@@ -1,12 +1,3 @@\n-from zope.interface import Interface\n+from zope.deprecation import moved\n \n-\n-class IPatternsSettings(Interface):\n-    """ Interface to register global pattern settings adapters\n-    """\n-\n-    def __call__(self):\n-        """\n-            Return a dict of pattern options\n-        """\n-        pass\n+moved(\'plone.base.interfaces.patterns\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/properties.py b/Products/CMFPlone/interfaces/properties.py\nindex 560c80b399..4c4b228fff 100644\n--- a/Products/CMFPlone/interfaces/properties.py\n+++ b/Products/CMFPlone/interfaces/properties.py\n@@ -1,26 +1,3 @@\n-from zope.interface import Interface\n-from zope.interface import Attribute\n+from zope.deprecation import moved\n \n-\n-class IPropertiesTool(Interface):\n-\n-    """ Manage properties of the site as a whole.\n-    """\n-\n-    id = Attribute(\'id\', \'Must be set to "portal_properties"\')\n-\n-    def editProperties(props):\n-        """ Change portal settings.\n-\n-        Permission --  Manage portal\n-        """\n-\n-    def smtp_server():\n-        """ Get local SMTP server.\n-\n-        Returns -- String\n-        """\n-\n-\n-class ISimpleItemWithProperties(Interface):\n-    pass\n+moved(\'plone.base.interfaces.properties\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/resources.py b/Products/CMFPlone/interfaces/resources.py\nindex e26304814d..5e1cab52d3 100644\n--- a/Products/CMFPlone/interfaces/resources.py\n+++ b/Products/CMFPlone/interfaces/resources.py\n@@ -1,153 +1,3 @@\n-from Products.CMFPlone import PloneMessageFactory as _\n-from zope import schema\n-from zope.schema.vocabulary import SimpleTerm\n-from zope.schema.vocabulary import SimpleVocabulary\n+from zope.deprecation import moved\n \n-import zope.component\n-import zope.interface\n-\n-\n-OVERRIDE_RESOURCE_DIRECTORY_NAME = "resource_overrides"\n-\n-\n-class IResourceRegistry(zope.interface.Interface):\n-\n-    # DEPRECATED\n-\n-    url = schema.ASCIILine(title=_("Resources base URL"), required=False)\n-\n-    js = schema.ASCIILine(title=_("Main js file"), required=False)\n-\n-    css = schema.List(\n-        title=_("CSS/LESS files"),\n-        value_type=schema.ASCIILine(title=_("URL")),\n-        default=[],\n-        required=False,\n-    )\n-\n-    init = schema.ASCIILine(title=_("Init instruction for shim"), required=False)\n-\n-    deps = schema.ASCIILine(\n-        title=_("Dependencies for shim"),\n-        description=_("Comma separated values of resource for shim"),\n-        required=False,\n-    )\n-\n-    export = schema.ASCIILine(title=_("Export vars for shim"), required=False)\n-\n-    conf = schema.Text(\n-        title=_("Configuration in JSON for the widget"),\n-        description=_("Should be accessible on @@getWCconfig?id=name"),\n-        required=False,\n-    )\n-\n-\n-class IBundleRegistry(zope.interface.Interface):\n-\n-    jscompilation = schema.ASCIILine(\n-        title=_("URL of the last js compilation"), required=False\n-    )\n-\n-    csscompilation = schema.ASCIILine(\n-        title=_("URL of the last css compilation"), required=False\n-    )\n-\n-    expression = schema.ASCIILine(\n-        title=_("Expression to render"),\n-        description=_(\n-            "In case its a bundle we can have a condition to render it (it "\n-            "does not apply if the bundle is merged)."\n-        ),\n-        required=False,\n-    )\n-\n-    enabled = schema.Bool(title=_("It\'s enabled?"), default=True, required=False)\n-\n-    depends = schema.ASCIILine(\n-        title=_("Depends on another bundle"),\n-        description=_(\n-            "In case you want to be the last: *, in case its the first should be empty"\n-        ),\n-        required=False,\n-    )\n-\n-    load_async = schema.Bool(\n-        title=_("Load asynchronously"),\n-        description=_(\n-            "Load the JavaScript files asynchronously by adding an ``async`` attribute to the script tag."\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    load_defer = schema.Bool(\n-        title=_("Load deferred"),\n-        description=_(\n-            "Load the JavaScript files deferred after the document has been parsed but before ``DOMContentLoaded`` by adding a ``defer`` attribute to the script tag."\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    # DEPRECATED IN Plone 6, for now keep for BBB\n-    compile = schema.Bool(\n-        title=_("(DEPRECATED) Does your bundle contains any RequireJS or LESS file?"),\n-        description=_(\n-            "If its true and you modify this bundle you need to build it before production"\n-        ),\n-        default=True,\n-        required=False,\n-    )\n-\n-    resources = schema.List(\n-        title=_("(DEPRECATED) Loaded resources"),\n-        description=_(\n-            "The resources that are going to be loaded on this bundle in order"\n-        ),\n-        value_type=schema.ASCIILine(title=_("Resource name")),\n-        required=False,\n-    )\n-\n-    last_compilation = schema.Datetime(\n-        title=_("(DEPRECATED) Last compiled date"),\n-        description=_("Date time of the last compilation of this bundle"),\n-        required=False,\n-    )\n-\n-    develop_javascript = schema.Bool(\n-        title=_("(DEPRECATED) Develop JavaScript"), default=False\n-    )\n-\n-    develop_css = schema.Bool(title=_("(DEPRECATED) Develop CSS"), default=False)\n-\n-    stub_js_modules = schema.List(\n-        title=_("(DEPRECATED) Stub JavaScript modules"),\n-        description=_(\n-            "Define list of modules that will be defined empty "\n-            "on RequireJS build steps to prevent loading modules multiple times."\n-        ),\n-        value_type=schema.ASCIILine(title=_("Resource name")),\n-        required=False,\n-        missing_value=[],\n-        default=[],\n-    )\n-\n-    merge_with = schema.Choice(\n-        title=_("(DEPRECATED) Merge with"),\n-        description=_(\n-            "In production mode, bundles are merged together to reduce the "\n-            "quantity of JS and CSS resources loaded by the browser. Choose "\n-            "\'default\' if this bundle must be available for all the visitors, "\n-            "choose \'logged-in\' if it must be available for logged-in users "\n-            "only, or leave it empty if it must not be merged."\n-        ),\n-        vocabulary=SimpleVocabulary(\n-            [\n-                SimpleTerm("", "", _("")),\n-                SimpleTerm("default", "default", "default"),\n-                SimpleTerm("logged-in", "logged-in", "logged-in"),\n-            ]\n-        ),\n-        default="",\n-        required=False,\n-    )\n+moved(\'plone.base.interfaces.resources\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/interfaces/siteroot.py b/Products/CMFPlone/interfaces/siteroot.py\nindex 83c119871d..e05bac1d96 100644\n--- a/Products/CMFPlone/interfaces/siteroot.py\n+++ b/Products/CMFPlone/interfaces/siteroot.py\n@@ -1,22 +1,3 @@\n-from zope.interface import Interface\n-from Products.CMFCore.interfaces import ISiteRoot\n-from plone.app.layout.navigation.interfaces import INavigationRoot\n+from zope.deprecation import moved\n \n-\n-class IPloneSiteRoot(ISiteRoot, INavigationRoot):\n-    """\n-    Marker interface for the object which serves as the root of a\n-    Plone site.\n-    """\n-\n-\n-class IMigratingPloneSiteRoot(Interface):\n-    """\n-    Marker interface used for migration GenericSetup profiles.\n-    """\n-\n-\n-class ITestCasePloneSiteRoot(Interface):\n-    """\n-    Marker interface used for test fixture GenericSetup profiles.\n-    """\n+moved(\'plone.base.interfaces.siteroot\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/structure.py b/Products/CMFPlone/interfaces/structure.py\nindex ea43a111c2..1de8c04966 100644\n--- a/Products/CMFPlone/interfaces/structure.py\n+++ b/Products/CMFPlone/interfaces/structure.py\n@@ -1,12 +1,3 @@\n-from zope.interface import Interface\n+from zope.deprecation import moved\n \n-\n-class INonStructuralFolder(Interface):\n-    """Marker for folderish content types that are folderish as an\n-    implementation detail only.\n-\n-    By declaring support for this interface, a content type will not be\n-    considered folderish by the catalog\'s is_folderish index/metadata, meaning\n-    that it will not be treated as folderish by the navigation tree, portal tab\n-    generation and folder_contents.\n-    """\n+moved(\'plone.base.interfaces.structure\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/syndication.py b/Products/CMFPlone/interfaces/syndication.py\nindex b65465a0be..e2bdf7315c 100644\n--- a/Products/CMFPlone/interfaces/syndication.py\n+++ b/Products/CMFPlone/interfaces/syndication.py\n@@ -1,296 +1,3 @@\n-from zope.interface import Interface\n-from zope import schema\n-from Products.CMFPlone import PloneMessageFactory as _\n+from zope.deprecation import moved\n \n-\n-class ISyndicatable(Interface):\n-    pass\n-\n-\n-class IFeedData(Interface):\n-\n-    def link():\n-        """\n-        Link to item\n-        """\n-\n-    def base_url():\n-        """\n-        base url to item\n-        """\n-\n-    def title():\n-        """\n-        title of item\n-        """\n-\n-    def description():\n-        """\n-        """\n-\n-    def categories():\n-        """\n-        List of tags\n-        """\n-\n-    def published():\n-        """\n-        publishing date\n-        """\n-\n-    def modified():\n-        """\n-        modification date\n-        """\n-\n-    def uid():\n-        """\n-        """\n-\n-    def rights():\n-        """\n-        """\n-\n-    def publisher():\n-        """\n-        """\n-\n-    def author():\n-        """\n-        """\n-\n-    def author_name():\n-        """\n-        """\n-\n-    def author_email():\n-        """\n-        """\n-\n-\n-class IFeed(IFeedData):\n-    """\n-    An adapter on the context and request\n-    to get feed information\n-    """\n-    def show_about():\n-        """\n-        """\n-\n-    def logo():\n-        """\n-        """\n-\n-    def icon():\n-        """\n-        """\n-\n-    def _brains():\n-        """\n-        return list of brains\n-        """\n-\n-    def _items():\n-        """\n-        return full objects\n-        """\n-\n-    def items():\n-        """\n-        adapted items\n-        """\n-\n-    def limit():\n-        """\n-        """\n-\n-    def language():\n-        """\n-        """\n-\n-\n-class ISearchFeed(IFeed):\n-    pass\n-\n-\n-class IFeedItem(IFeedData):\n-    """\n-    An adapter on the feed item and IFeed instance\n-    """\n-\n-    def body():\n-        """\n-        """\n-\n-    def guid():\n-        """\n-        """\n-\n-    def has_enclosure():\n-        """\n-        """\n-\n-    def file():\n-        """\n-        """\n-\n-    def file_url():\n-        """\n-        """\n-\n-    def file_length():\n-        """\n-        """\n-\n-    def file_type():\n-        """\n-        """\n-\n-\n-class ISiteSyndicationSettings(Interface):\n-\n-    allowed = schema.Bool(\n-        title=_(\'Allowed\'),\n-        description=_(\'Allow syndication for collections and folders \'\n-                      \'on site.\'),\n-        default=True)\n-\n-    default_enabled = schema.Bool(\n-        title=_(\'Enabled by default\'),\n-        description=_(\'If syndication should be enabled by default for all \'\n-                      \'folders and collections.\'),\n-        default=False)\n-\n-    search_rss_enabled = schema.Bool(\n-        title=_(\'Search RSS enabled\'),\n-        description=_(\'Allows users to subscribe to feeds of search results\'),\n-        default=True)\n-\n-    show_author_info = schema.Bool(\n-        title=_(\'Show author info\'),\n-        description=_(\'Should feeds include author information\'),\n-        default=True)\n-\n-    render_body = schema.Bool(\n-        title=_(\'Render Body\'),\n-        description=_(\'help_render_body\',\n-                      default=\'If body text available for item, \'\n-                      \'render it, otherwise use description.\'),\n-        default=False)\n-\n-    max_items = schema.Int(\n-        title=_(\'label_syndication_max_items\',\n-                default=\'Maximum items\'),\n-        description=_(\'help_syndication_max_items\',\n-                      default=\'Maximum number of items that will be syndicated.\'),\n-        min=1,\n-        default=15)\n-\n-    allowed_feed_types = schema.Tuple(\n-        title=_(\'Allowed Feed Types\'),\n-        description=_("Separate view name and title by \'|\'"),\n-        required=True,\n-        missing_value=None,\n-        default=(\n-            "RSS|RSS 1.0",\n-            "rss.xml|RSS 2.0",\n-            "atom.xml|Atom",\n-            "itunes.xml|iTunes"),\n-        value_type=schema.TextLine()\n-    )\n-\n-    site_rss_items = schema.Tuple(\n-        title=_(\'Site RSS\'),\n-        description=_(\'Paths to folders and collections to link to \'\n-                      \'at the portal root.\'),\n-        required=False,\n-        default=(\'/news/aggregator\',),\n-        value_type=schema.Choice(\n-            vocabulary="plone.app.vocabularies.SyndicatableFeedItems")\n-    )\n-\n-    show_syndication_button = schema.Bool(\n-        title=_("Show settings button"),\n-        description=_("Makes it possible to customize syndication settings "\n-                      "for particular folders and collections "))\n-\n-    show_syndication_link = schema.Bool(\n-        title=_("Show feed link"),\n-        description=_("Enable RSS link document action on the syndication "\n-                      "content item."))\n-\n-\n-class IFeedSettings(Interface):\n-\n-    enabled = schema.Bool(\n-        title=_(\'Enabled\'),\n-        default=False)\n-\n-    feed_types = schema.Tuple(\n-        title=_(\'Feed Types\'),\n-        required=True,\n-        missing_value=None,\n-        default=("RSS", "rss.xml", "atom.xml"),\n-        value_type=schema.Choice(\n-            vocabulary="plone.app.vocabularies.SyndicationFeedTypes"\n-        ))\n-\n-    render_body = schema.Bool(\n-        title=_(\'Render Body\'),\n-        description=_(\n-            \'help_render_body\',\n-            default=\'If body text available for item, \'\n-                    \'render it, otherwise use description.\'),\n-        default=False)\n-\n-    max_items = schema.Int(\n-        title=_(\'label_syndication_max_items\',\n-                default=\'Maximum items\'),\n-        description=_(\n-            \'help_syndication_max_items\',\n-            default=\'Maximum number of items that will be syndicated.\'),\n-        default=15)\n-\n-\n-class ISyndicationUtil(Interface):\n-\n-    def allowed_feed_types():\n-        """\n-        get a list of allow feed types\n-        """\n-\n-    def context_allowed():\n-        """\n-        If syndication is allowed on the context\n-        """\n-\n-    def context_enabled(raise404=False):\n-        """\n-        If syndication is enabled on the context\n-        """\n-\n-    def site_enabled():\n-        """\n-        If syndication is enabled on the site\n-        """\n-\n-    def search_rss_enabled(raise404=False):\n-        """\n-        If search_rss is enabled\n-        """\n-\n-    def show_author_info():\n-        """\n-        If author information should show on feeds\n-        """\n-\n-    def max_items():\n-        """\n-        Default max items to show on the site\n-        """\n-\n-    def rss_url():\n-        """\n-        Default rss url. Mainly to be used for the\n-        rss portal_action link\n-        """\n+moved(\'plone.base.interfaces.syndication\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/translationservice.py b/Products/CMFPlone/interfaces/translationservice.py\nindex b908e28ee8..f840d67732 100644\n--- a/Products/CMFPlone/interfaces/translationservice.py\n+++ b/Products/CMFPlone/interfaces/translationservice.py\n@@ -1,44 +1,3 @@\n-from zope.interface import Interface\n+from zope.deprecation import moved\n \n-\n-class ITranslationServiceTool(Interface):\n-    """ Utility methods to access the translation machinery\n-    """\n-\n-    def translate(*args, **kw):\n-        """Translate method to access the translation service\n-           from resticted code like skins.\n-        """\n-\n-    def encode(m, input_encoding=None, output_encoding=None, errors=\'strict\'):\n-        """Encode a give unicode type or string type to string type in encoding\n-           output_encoding\n-        """\n-\n-    def asunicodetype(m, input_encoding=None, errors=\'strict\'):\n-        """Create type unicode from type string"""\n-\n-    def ulocalized_time(time, long_format=None, time_only=None, context=None,\n-                        domain=\'plonelocales\'):\n-        """Returns localized time."""\n-\n-    def day_msgid(number, format=\'\'):\n-        """Returns the msgid which can be passed to the translation service for\n-           l10n of weekday names. Format is either \'\', \'a\' or \'s\'.\n-        """\n-\n-    def month_msgid(number, format=\'\'):\n-        """Returns the msgid which can be passed to the translation service for\n-           l10n of month names. Format is either \'\' or \'a\' (long or\n-           abbreviation).\n-        """\n-\n-    def month_english(number, format=\'\'):\n-        """Returns the english name of month by number. Format is either \'\' or\n-           \'a\' (long or abbreviation).\n-        """\n-\n-    def weekday_english(number, format=\'\'):\n-        """Returns the english name of a week by number. Format is either \'\',\n-           \'a\' or \'p\'.\n-        """\n+moved(\'plone.base.interfaces.translationservice\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/log.py b/Products/CMFPlone/log.py\nindex ba2e6359dd..7cf1dfa8ca 100644\n--- a/Products/CMFPlone/log.py\n+++ b/Products/CMFPlone/log.py\n@@ -2,6 +2,7 @@\n This module resolves an import order dependency.\n Don\'t import from here, import from utils.\n """\n+from zope.deprecation import deprecate\n \n import logging\n \n@@ -19,6 +20,9 @@ def log_exc(message=\'\', summary=\'\', severity=logging.ERROR):\n \n \n # deprecration warning\n+@deprecate("Use a recommended deprecation method, see Plone Deprecation Guide: "\n+           "https://docs.plone.org/develop/styleguide/deprecation.html "\n+           "(will be removed in Plone 7.0)")\n def log_deprecated(message, summary=\'Deprecation Warning\',\n                    severity=logging.WARNING):\n     logger.log(severity, \'%s \\n%s\', summary, message)\ndiff --git a/Products/CMFPlone/patches/sendmail.py b/Products/CMFPlone/patches/sendmail.py\nindex bfee534d59..d699ceee01 100644\n--- a/Products/CMFPlone/patches/sendmail.py\n+++ b/Products/CMFPlone/patches/sendmail.py\n@@ -1,5 +1,5 @@\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import IMailSchema\n+from plone.base.interfaces import IMailSchema\n from transaction._transaction import Status\n from zope.component import getUtility\n from zope.sendmail.mailer import _SMTPState\ndiff --git a/Products/CMFPlone/patterns/configure.zcml b/Products/CMFPlone/patterns/configure.zcml\nindex c4c0de969e..63908ad2ee 100644\n--- a/Products/CMFPlone/patterns/configure.zcml\n+++ b/Products/CMFPlone/patterns/configure.zcml\n@@ -14,13 +14,13 @@\n       factory=".settings.PatternSettingsAdapter"\n       for="* * *"\n       name="pattern_settings"\n-      provides="Products.CMFPlone.interfaces.IPatternsSettings"\n+      provides="plone.base.interfaces.IPatternsSettings"\n   />\n   <!-- deprecated name -->\n   <adapter\n       factory=".settings.PatternSettingsAdapter"\n       for="* * *"\n       name="plone_settings"\n-      provides="Products.CMFPlone.interfaces.IPatternsSettings"\n+      provides="plone.base.interfaces.IPatternsSettings"\n   />\n </configure>\ndiff --git a/Products/CMFPlone/patterns/settings.py b/Products/CMFPlone/patterns/settings.py\nindex 499c3b65d5..fae04f2467 100644\n--- a/Products/CMFPlone/patterns/settings.py\n+++ b/Products/CMFPlone/patterns/settings.py\n@@ -7,9 +7,9 @@\n from plone.registry.interfaces import IRegistry\n from plone.uuid.interfaces import IUUID\n from Products.CMFCore.interfaces._content import IFolderish\n-from Products.CMFPlone.interfaces import ILinkSchema\n-from Products.CMFPlone.interfaces import IPatternsSettings\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n+from plone.base.interfaces import ILinkSchema\n+from plone.base.interfaces import IPatternsSettings\n+from plone.base.interfaces import IPloneSiteRoot\n from Products.CMFPlone.patterns.tinymce import TinyMCESettingsGenerator\n from Products.CMFPlone.utils import get_portal\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/patterns/tinymce.py b/Products/CMFPlone/patterns/tinymce.py\nindex c3d206530a..1db131559b 100644\n--- a/Products/CMFPlone/patterns/tinymce.py\n+++ b/Products/CMFPlone/patterns/tinymce.py\n@@ -3,10 +3,10 @@\n from plone.app.theming.utils import theming_policy\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import IFilterSchema\n-from Products.CMFPlone.interfaces import ITinyMCESchema\n+from plone.base.interfaces import IFilterSchema\n+from plone.base.interfaces import ITinyMCESchema\n from Products.CMFPlone.utils import get_portal\n-from Products.CMFPlone.utils import safe_unicode\n+from plone.base.utils import safe_text\n from zope.component import getUtility\n \n import json\n@@ -189,7 +189,7 @@ def get_tiny_config(self):\n             valid_tags = self.filter_settings.valid_tags\n             nasty_tags = self.filter_settings.nasty_tags\n             custom_attributes = self.filter_settings.custom_attributes\n-            safe_attributes = [safe_unicode(attr) for attr in html.defs.safe_attrs]\n+            safe_attributes = [safe_text(attr) for attr in html.defs.safe_attrs]\n             valid_attributes = safe_attributes + custom_attributes\n             # valid_elements : \'a[href|target=_blank],strong/b,div[align],br\'\n             tiny_valid_elements = []\ndiff --git a/Products/CMFPlone/patterns/view.py b/Products/CMFPlone/patterns/view.py\nindex c88dacca7f..5f7b8e311b 100644\n--- a/Products/CMFPlone/patterns/view.py\n+++ b/Products/CMFPlone/patterns/view.py\n@@ -1,6 +1,6 @@\n # This module delivers the global patterns settings\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import IPatternsSettings\n+from plone.base.interfaces import IPatternsSettings\n from zope.component import getAdapters\n from zope.component import getMultiAdapter\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/permissions.py b/Products/CMFPlone/permissions.py\nindex 07370e2931..4230ff54eb 100644\n--- a/Products/CMFPlone/permissions.py\n+++ b/Products/CMFPlone/permissions.py\n@@ -1,67 +1,3 @@\n-""" CMFPlone product permissions """\n-from AccessControl import ModuleSecurityInfo\n+from zope.deprecation import moved\n \n-security = ModuleSecurityInfo(\'Products.CMFPlone.permissions\')\n-\n-security.declarePublic(\'AccessContentsInformation\')\n-from Products.CMFCore.permissions import AccessContentsInformation\n-\n-security.declarePublic(\'AddPortalContent\')\n-from Products.CMFCore.permissions import AddPortalContent\n-\n-security.declarePublic(\'AddPortalFolders\')\n-from Products.CMFCore.permissions import AddPortalFolders\n-\n-security.declarePublic(\'AddPortalMember\')\n-from Products.CMFCore.permissions import AddPortalMember\n-\n-security.declarePublic(\'DeleteObjects\')\n-from Products.CMFCore.permissions import DeleteObjects\n-\n-security.declarePublic(\'FTPAccess\')\n-from Products.CMFCore.permissions import FTPAccess\n-\n-security.declarePublic(\'ListFolderContents\')\n-from Products.CMFCore.permissions import ListFolderContents\n-\n-security.declarePublic(\'ListPortalMembers\')\n-from Products.CMFCore.permissions import ListPortalMembers\n-\n-security.declarePublic(\'ListUndoableChanges\')\n-from Products.CMFCore.permissions import ListUndoableChanges\n-\n-security.declarePublic(\'ManagePortal\')\n-from Products.CMFCore.permissions import ManagePortal\n-\n-security.declarePublic(\'ManageProperties\')\n-from Products.CMFCore.permissions import ManageProperties\n-\n-security.declarePublic(\'ManageUsers\')\n-from Products.CMFCore.permissions import ManageUsers\n-\n-security.declarePublic(\'ModifyPortalContent\')\n-from Products.CMFCore.permissions import ModifyPortalContent\n-\n-security.declarePublic(\'ReplyToItem\')\n-from Products.CMFCore.permissions import ReplyToItem\n-\n-security.declarePublic(\'RequestReview\')\n-from Products.CMFCore.permissions import RequestReview\n-\n-security.declarePublic(\'ReviewPortalContent\')\n-from Products.CMFCore.permissions import ReviewPortalContent\n-\n-security.declarePublic(\'SetOwnPassword\')\n-from Products.CMFCore.permissions import SetOwnPassword\n-\n-security.declarePublic(\'SetOwnProperties\')\n-from Products.CMFCore.permissions import SetOwnProperties\n-\n-security.declarePublic(\'UndoChanges\')\n-from Products.CMFCore.permissions import UndoChanges\n-\n-security.declarePublic(\'View\')\n-from Products.CMFCore.permissions import View\n-\n-security.declarePublic(\'ViewManagementScreens\')\n-from Products.CMFCore.permissions import ViewManagementScreens\n+moved(\'plone.base.permissions\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/profiles.zcml b/Products/CMFPlone/profiles.zcml\nindex 78ee432b74..b82c00411d 100644\n--- a/Products/CMFPlone/profiles.zcml\n+++ b/Products/CMFPlone/profiles.zcml\n@@ -8,7 +8,7 @@\n       title="Plone Site"\n       directory="profiles/default"\n       description="Profile for a default Plone."\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       post_handler="Products.CMFPlone.setuphandlers.importFinalSteps"\n       />\n \n@@ -17,7 +17,7 @@\n       title="Mandatory dependencies for a Plone site"\n       directory="profiles/dependencies"\n       description="Load all profiles from other packages/products that are needed for a full Plone site."\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       provides="Products.GenericSetup.interfaces.EXTENSION"\n       />\n \n@@ -26,7 +26,7 @@\n       title="Plone Test Fixture"\n       directory="profiles/testfixture"\n       description="Extension profile to configure a test fixture"\n-      for="Products.CMFPlone.interfaces.ITestCasePloneSiteRoot"\n+      for="plone.base.interfaces.ITestCasePloneSiteRoot"\n       provides="Products.GenericSetup.interfaces.EXTENSION"\n       />\n \ndiff --git a/Products/CMFPlone/resources/browser/combine.py b/Products/CMFPlone/resources/browser/combine.py\nindex e2be703e4b..58585b14f7 100644\n--- a/Products/CMFPlone/resources/browser/combine.py\n+++ b/Products/CMFPlone/resources/browser/combine.py\n@@ -1,5 +1,6 @@\n import zope.deferredimport\n \n+\n zope.deferredimport.initialize()\n \n zope.deferredimport.deprecated(\ndiff --git a/Products/CMFPlone/resources/browser/resource.py b/Products/CMFPlone/resources/browser/resource.py\nindex b345e96736..403057745f 100644\n--- a/Products/CMFPlone/resources/browser/resource.py\n+++ b/Products/CMFPlone/resources/browser/resource.py\n@@ -4,8 +4,12 @@\n from plone.app.layout.viewlets.common import ViewletBase\n from plone.app.theming.interfaces import IThemeSettings\n from plone.app.theming.utils import theming_policy\n+from plone.base.interfaces import IBundleRegistry\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import IBundleRegistry\n+from Products.CMFCore.Expression import createExprContext\n+from Products.CMFCore.Expression import Expression\n+from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone.resources import RESOURCE_DEVELOPMENT_MODE\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n \n@@ -96,7 +100,11 @@ def update(self):\n         # collect names\n         js_names = {name for name, rec in records.items() if rec.jscompilation}\n         css_names = {name for name, rec in records.items() if rec.csscompilation}\n-        all_names = {name for name, rec in records.items() if rec.jscompilation or rec.csscompilation}\n+        all_names = {\n+            name\n+            for name, rec in records.items()\n+            if rec.jscompilation or rec.csscompilation\n+        }\n \n         # register\n         for name, record in records.items():\ndiff --git a/Products/CMFPlone/setuphandlers.py b/Products/CMFPlone/setuphandlers.py\nindex 7215fdadfe..9bc454e82a 100644\n--- a/Products/CMFPlone/setuphandlers.py\n+++ b/Products/CMFPlone/setuphandlers.py\n@@ -1,8 +1,8 @@\n from Acquisition import aq_base\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.factory import _DEFAULT_PROFILE\n-from Products.CMFPlone.interfaces import IMigrationTool\n-from Products.CMFPlone.interfaces.resources import OVERRIDE_RESOURCE_DIRECTORY_NAME\n+from plone.base.interfaces import IMigrationTool\n+from plone.base.interfaces.resources import OVERRIDE_RESOURCE_DIRECTORY_NAME\n from Products.StandardCacheManagers.AcceleratedHTTPCacheManager \\\n     import AcceleratedHTTPCacheManager\n from Products.StandardCacheManagers.RAMCacheManager import RAMCacheManager\ndiff --git a/Products/CMFPlone/tests/csrf.txt b/Products/CMFPlone/tests/csrf.txt\nindex dfc77bb85c..b5f8e22098 100644\n--- a/Products/CMFPlone/tests/csrf.txt\n+++ b/Products/CMFPlone/tests/csrf.txt\n@@ -50,8 +50,8 @@ outgoing mails would have to be handled making things unnecessarily\n complicated:\n \n   >>> from zope.component import getUtility\n-  >>> from Products.CMFPlone.interfaces import IMailSchema\n-  >>> from Products.CMFPlone.interfaces import ISecuritySchema\n+  >>> from plone.base.interfaces import IMailSchema\n+  >>> from plone.base.interfaces import ISecuritySchema\n   >>> from plone.registry.interfaces import IRegistry\n   >>> registry = getUtility(IRegistry)\n   >>> mail_settings = registry.forInterface(IMailSchema, prefix=\'plone\')\ndiff --git a/Products/CMFPlone/tests/dummy.py b/Products/CMFPlone/tests/dummy.py\nindex 5ff3e8db1b..0ea980fb65 100644\n--- a/Products/CMFPlone/tests/dummy.py\n+++ b/Products/CMFPlone/tests/dummy.py\n@@ -4,8 +4,8 @@\n from ComputedAttribute import ComputedAttribute\n from OFS.Folder import Folder as SimpleFolder\n from OFS.SimpleItem import SimpleItem\n-from Products.CMFPlone.interfaces import INonStructuralFolder\n-from Products.CMFPlone.interfaces import IWorkflowChain\n+from plone.base.interfaces import INonStructuralFolder\n+from plone.base.interfaces import IWorkflowChain\n from io import BytesIO\n from zope.interface import implementer\n from zope.interface import Interface\ndiff --git a/Products/CMFPlone/tests/messages.txt b/Products/CMFPlone/tests/messages.txt\ndeleted file mode 100644\nindex 0b8320c7fb..0000000000\n--- a/Products/CMFPlone/tests/messages.txt\n+++ /dev/null\n@@ -1,142 +0,0 @@\n-Test for Messages\n-=================\n-\n-  >>> from Products.CMFPlone import PloneMessageFactory as _\n-\n-Messages without translation service set up\n--------------------------------------------\n-\n-Very simple message:\n-\n-  >>> _(u\'hello\')\n-  u\'hello\'\n-\n-The domain is predefinied through the factory:\n-\n-  >>> _(u\'hello\').domain\n-  \'plone\'\n-\n-You can also define a default text:\n-\n-  >>> msg = _(u\'id\', default=u\'This is the text.\')\n-  >>> msg\n-  u\'id\'\n-\n-  >>> msg.default\n-  u\'This is the text.\'\n-\n-And at last there is the possibility of variable substition:\n-\n-  >>> project = u\'Plone\'\n-  >>> msg = _(u\'id\', default=u\'Hello ${name}\', mapping={u\'name\' : project})\n-\n-  >>> msg\n-  u\'id\'\n-\n-  >>> msg.default\n-  u\'Hello ${name}\'\n-\n-  >>> msg.mapping\n-  {u\'name\': u\'Plone\'}\n-\n-Messages with translation service set up\n-----------------------------------------\n-\n-Now we fake a translation domain. Usually you will have translations stored in\n-a po file and automatically translated by PTS or the Z3 translation service.\n-\n-  >>> from zope.i18n.simpletranslationdomain import SimpleTranslationDomain\n-  >>> from zope.i18n.interfaces import ITranslationDomain\n-\n-  >>> messages = {\n-  ...     (\'de\', u\'This is a message.\'): u\'Dieses ist eine Nachricht.\',\n-  ...     (\'de\', u\'mail-notification\'): u\'Sie haben ${number} neue E-Mails.\'}\n-  >>> mails = SimpleTranslationDomain(\'plone\', messages)\n-\n-  >>> from zope.component import provideUtility\n-  >>> provideUtility(mails, ITranslationDomain, name=\'plone\')\n-\n-Define the simple message:\n-\n-  >>> msg = _(u\'This is a message.\')\n-  >>> msg\n-  u\'This is a message.\'\n-\n-We are still using the plone domain:\n-\n-  >>> msg.domain\n-  \'plone\'\n-\n-Verify that the translation succeeds:\n-\n-  >>> from zope.i18n import translate\n-  >>> translate(msg, target_language=\'de\')\n-  u\'Dieses ist eine Nachricht.\'\n-\n-Now try a message with variable substitution:\n-\n-  >>> num = 42\n-  >>> note = _(u\'mail-notification\', default=u\'You have ${number} new mails.\',\n-  ...          mapping={u\'number\': num})\n-\n-  >>> note\n-  u\'mail-notification\'\n-\n-  >>> note.default\n-  u\'You have ${number} new mails.\'\n-\n-Try simple interpolation:\n-\n-  >>> translate(note, target_language=\'en\')\n-  u\'You have 42 new mails.\'\n-\n-And now try the real translation:\n-\n-  >>> translate(note, target_language=\'de\')\n-  u\'Sie haben 42 neue E-Mails.\'\n-\n-Messages inside page templates / tal\n-------------------------------------\n-\n-We need a simple tal engine for the tests. The DummyEngine automatically\n-upper-cases all text.\n-\n-  >>> from zope.tal.dummyengine import DummyEngine\n-  >>> engine = DummyEngine()\n-\n-We use the Messages defined earlier.\n-\n-  >>> msg\n-  u\'This is a message.\'\n-\n-  >>> note\n-  u\'mail-notification\'\n-\n-Inform the engine of our variables.\n-\n-  >>> engine.setLocal(\'msg\', msg)\n-  >>> engine.setLocal(\'note\', note)\n-\n-We also need a HTMLParser and TALInterpreter and add a simple convience function\n-to get the parsed and interpreted text.\n-\n-  >>> from zope.tal.htmltalparser import HTMLTALParser\n-  >>> from zope.tal.talinterpreter import TALInterpreter\n-  >>> from io import StringIO\n-\n-  >>> def compile(source):\n-  ...     parser = HTMLTALParser()\n-  ...     parser.parseString(source)\n-  ...     program, macros = parser.getCode()\n-  ...     result = StringIO()\n-  ...     interpreter = TALInterpreter(program, {}, engine, stream=result)\n-  ...     interpreter()\n-  ...     return result.getvalue()\n-\n-  >>> text = compile(\'<span i18n:translate="" tal:content="msg"/>\')\n-  >>> u\'<span>THIS IS A MESSAGE.</span>\' in text\n-  True\n-\n-  >>> text = compile(\'<span i18n:translate="" tal:content="note"/>\')\n-  >>> u\'<span>MAIL-NOTIFICATION</span>\' in text\n-  True\ndiff --git a/Products/CMFPlone/tests/pwreset_browser.rst b/Products/CMFPlone/tests/pwreset_browser.rst\nindex 538d9f1de2..da70832d02 100644\n--- a/Products/CMFPlone/tests/pwreset_browser.rst\n+++ b/Products/CMFPlone/tests/pwreset_browser.rst\n@@ -15,7 +15,7 @@ assumptions that are not true for Plone forms.\n   >>> from zope.component import getUtility\n   >>> registry = getUtility(IRegistry, context=layer[\'portal\'])\n \n-  >>> from Products.CMFPlone.interfaces.controlpanel import IMailSchema\n+  >>> from plone.base.interfaces.controlpanel import IMailSchema\n   >>> mail_settings = registry.forInterface(IMailSchema, prefix="plone")\n   >>> mail_settings.smtp_host = u\'localhost\'\n   >>> mail_settings.email_from_address = \'smith@example.com\'\n@@ -523,7 +523,7 @@ Test passwordreset BrowserView\n \n     >>> portal = layer[\'portal\']\n     >>> mail_settings.email_from_name = u\'Old\\u0159ich a Bo\\u017eena\'\n-    >>> from Products.CMFPlone.interfaces.controlpanel import ISiteSchema\n+    >>> from plone.base.interfaces.controlpanel import ISiteSchema\n     >>> site_settings = registry.forInterface(ISiteSchema, prefix=\'plone\')\n     >>> site_settings.site_title = u\'Koko\\u0159\\xedn Portal\'\n \ndiff --git a/Products/CMFPlone/tests/robot/robot_setup.py b/Products/CMFPlone/tests/robot/robot_setup.py\nindex b32e25ec06..ae9760f5da 100644\n--- a/Products/CMFPlone/tests/robot/robot_setup.py\n+++ b/Products/CMFPlone/tests/robot/robot_setup.py\n@@ -3,8 +3,8 @@\n \n from zope.component import queryUtility\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import IMailSchema\n-from Products.CMFPlone.interfaces import ISecuritySchema\n+from plone.base.interfaces import IMailSchema\n+from plone.base.interfaces import ISecuritySchema\n \n \n class CMFPloneRemoteKeywords(RemoteLibrary):\ndiff --git a/Products/CMFPlone/tests/testBatch.py b/Products/CMFPlone/tests/testBatch.py\nindex 5964e2ecfd..f892192e5d 100644\n--- a/Products/CMFPlone/tests/testBatch.py\n+++ b/Products/CMFPlone/tests/testBatch.py\n@@ -1,53 +1,13 @@\n-from Products.CMFPlone.PloneBatch import Batch\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n-from ZTUtils.Lazy import LazyMap\n \n import unittest\n \n-\n-class TestBatch(unittest.TestCase):\n-\n-    def test_batch_no_lazy(self):\n-        batch = Batch(range(100), size=10, start=10)\n-        self.assertEqual([b for b in batch],\n-                         [10, 11, 12, 13, 14, 15, 16, 17, 18, 19])\n-\n-    def test_batch_lazy_map(self):\n-        def get(key):\n-            return key\n-        sequence = LazyMap(get, range(80, 90), actual_result_count=95)\n-        batch = Batch(sequence, size=10, start=80)\n-        self.assertEqual(\n-            [b for b in batch],\n-            [80, 81, 82, 83, 84, 85, 86, 87, 88, 89])\n-\n-        self.assertEqual(batch.numpages, 10)\n-        self.assertEqual(batch.pagenumber, 9)\n-        self.assertEqual(batch.navlist, range(6, 11))\n-        self.assertEqual(batch.leapback, [])\n-        self.assertEqual(batch.prevlist, range(6, 9))\n-        self.assertEqual(batch.previous.length, 10)\n-        self.assertEqual(batch.next.length, 5)\n-        self.assertEqual(batch.pageurl({}), \'b_start:int=80\')\n-        self.assertListEqual(\n-            list(batch.prevurls({})),\n-            [\n-                (6, \'b_start:int=50\'),\n-                (7, \'b_start:int=60\'),\n-                (8, \'b_start:int=70\'),\n-            ]\n-        )\n-        self.assertListEqual(\n-            list(batch.nexturls({})),\n-            [(10, \'b_start:int=90\')],\n-        )\n-\n-\n class TestBatchIntegration(unittest.TestCase):\n \n     layer = PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n \n     def test_batch_brains(self):\n+        from plone.base.batch import Batch\n         portal = self.layer[\'portal\']\n         obj_ids = [\'%stest\' % chr(c) for c in range(97, 123)]\n         for obj_id in obj_ids:\ndiff --git a/Products/CMFPlone/tests/testBrowserDefault.py b/Products/CMFPlone/tests/testBrowserDefault.py\nindex 45557b5150..19810f91b5 100644\n--- a/Products/CMFPlone/tests/testBrowserDefault.py\n+++ b/Products/CMFPlone/tests/testBrowserDefault.py\n@@ -9,7 +9,7 @@\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from Products.CMFPlone.utils import _createObjectByType\n-from Products.CMFPlone.utils import safe_nativestring\n+from plone.base.utils import safe_text\n from Products.CMFPlone.PloneFolder import ReplaceableWrapper\n from zope.component import getUtility\n \n@@ -80,8 +80,8 @@ def compareLayoutVsView(self, obj, path="", viewaction=None):\n         transaction.commit()\n \n         self.browser.open(obj.absolute_url() + path)\n-        body = safe_nativestring(self.browser.contents)\n-        resolved = safe_nativestring(resolved)\n+        body = safe_text(self.browser.contents)\n+        resolved = safe_text(resolved)\n \n         # request/ACTUAL_URL is fubar in tests, remove lines that depend on it\n         resolved = RE_REMOVE_DOCCONT.sub(\'\', resolved)\ndiff --git a/Products/CMFPlone/tests/testEmailLogin.py b/Products/CMFPlone/tests/testEmailLogin.py\nindex b603237a4a..075b3bc6b8 100644\n--- a/Products/CMFPlone/tests/testEmailLogin.py\n+++ b/Products/CMFPlone/tests/testEmailLogin.py\n@@ -2,7 +2,7 @@\n from plone.app.testing import SITE_OWNER_NAME\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ISecuritySchema\n+from plone.base.interfaces import ISecuritySchema\n from Products.CMFPlone.tests import PloneTestCase\n from Products.CMFPlone.utils import set_own_login_name\n from Products.CMFPlone.RegistrationTool import get_member_by_login_name\ndiff --git a/Products/CMFPlone/tests/testIImagingSchema.py b/Products/CMFPlone/tests/testIImagingSchema.py\nindex 3f42d990d8..20b302c059 100644\n--- a/Products/CMFPlone/tests/testIImagingSchema.py\n+++ b/Products/CMFPlone/tests/testIImagingSchema.py\n@@ -1,6 +1,6 @@\n from plone.app.testing import PLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces.controlpanel import IImagingSchema\n+from plone.base.interfaces.controlpanel import IImagingSchema\n from zope.component import getUtility\n \n import unittest\ndiff --git a/Products/CMFPlone/tests/testNavTree.py b/Products/CMFPlone/tests/testNavTree.py\nindex 4003b842bc..6851386e1f 100644\n--- a/Products/CMFPlone/tests/testNavTree.py\n+++ b/Products/CMFPlone/tests/testNavTree.py\n@@ -13,7 +13,7 @@\n \n \n from Products.CMFPlone.PloneFolder import PloneFolder\n-from Products.CMFPlone.interfaces import INonStructuralFolder\n+from plone.base.interfaces import INonStructuralFolder\n \n default_user = PloneTestCase.default_user\n \ndiff --git a/Products/CMFPlone/tests/testNavigationView.py b/Products/CMFPlone/tests/testNavigationView.py\nindex 0c323400c9..c3e19480b8 100644\n--- a/Products/CMFPlone/tests/testNavigationView.py\n+++ b/Products/CMFPlone/tests/testNavigationView.py\n@@ -3,9 +3,9 @@\n from Products.CMFPlone.browser.navigation import CatalogNavigationTabs\n from Products.CMFPlone.browser.navigation import CatalogSiteMap\n from Products.CMFPlone.browser.navigation import PhysicalNavigationBreadcrumbs\n-from Products.CMFPlone.interfaces import IHideFromBreadcrumbs\n-from Products.CMFPlone.interfaces import INavigationSchema\n-from Products.CMFPlone.interfaces import ITypesSchema\n+from plone.base.interfaces import IHideFromBreadcrumbs\n+from plone.base.interfaces import INavigationSchema\n+from plone.base.interfaces import ITypesSchema\n from Products.CMFPlone.tests import dummy\n from Products.CMFPlone.tests import PloneTestCase\n from Products.CMFPlone.tests.utils import folder_position\ndiff --git a/Products/CMFPlone/tests/testPloneTool.py b/Products/CMFPlone/tests/testPloneTool.py\nindex 7546d7a0d1..9ae991a515 100644\n--- a/Products/CMFPlone/tests/testPloneTool.py\n+++ b/Products/CMFPlone/tests/testPloneTool.py\n@@ -2,8 +2,8 @@\n from plone.app.testing import SITE_OWNER_NAME\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import IReorderedEvent\n-from Products.CMFPlone.interfaces import ISearchSchema\n+from plone.base.interfaces import IReorderedEvent\n+from plone.base.interfaces import ISearchSchema\n from Products.CMFPlone.tests import PloneTestCase\n from zope.component import getGlobalSiteManager\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/tests/testPortalCreation.py b/Products/CMFPlone/tests/testPortalCreation.py\nindex 8dcaea6be8..08498041e6 100644\n--- a/Products/CMFPlone/tests/testPortalCreation.py\n+++ b/Products/CMFPlone/tests/testPortalCreation.py\n@@ -10,9 +10,9 @@\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import setuphandlers\n from Products.CMFPlone.factory import _DEFAULT_PROFILE\n-from Products.CMFPlone.interfaces import IFilterSchema\n-from Products.CMFPlone.interfaces import INavigationSchema\n-from Products.CMFPlone.interfaces import ISearchSchema\n+from plone.base.interfaces import IFilterSchema\n+from plone.base.interfaces import INavigationSchema\n+from plone.base.interfaces import ISearchSchema\n from Products.CMFPlone.tests import dummy\n from Products.CMFPlone.tests import PloneTestCase\n from Products.CMFPlone.UnicodeSplitter import I18NNormalizer\ndiff --git a/Products/CMFPlone/tests/testQueryCatalog.py b/Products/CMFPlone/tests/testQueryCatalog.py\nindex 6bafb5856b..2073903c67 100644\n--- a/Products/CMFPlone/tests/testQueryCatalog.py\n+++ b/Products/CMFPlone/tests/testQueryCatalog.py\n@@ -1,9 +1,9 @@\n # Test queryCatalog and plone search forms\n from plone.app.textfield.value import RichTextValue\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import INavigationSchema\n-from Products.CMFPlone.interfaces import ISearchSchema\n-from Products.CMFPlone.interfaces.syndication import ISiteSyndicationSettings\n+from plone.base.interfaces import INavigationSchema\n+from plone.base.interfaces import ISearchSchema\n+from plone.base.interfaces.syndication import ISiteSyndicationSettings\n from Products.CMFPlone.tests import PloneTestCase\n from Products.ZCTextIndex.ParseTree import ParseError\n from zExceptions import NotFound\ndiff --git a/Products/CMFPlone/tests/testRegistrationTool.py b/Products/CMFPlone/tests/testRegistrationTool.py\nindex a10869da25..d7d16eef9b 100644\n--- a/Products/CMFPlone/tests/testRegistrationTool.py\n+++ b/Products/CMFPlone/tests/testRegistrationTool.py\n@@ -3,7 +3,7 @@\n from AccessControl import Unauthorized\n from Products.CMFCore.permissions import AddPortalMember\n from Products.CMFPlone.RegistrationTool import _checkEmail\n-from Products.CMFPlone.interfaces.controlpanel import IMailSchema, ISiteSchema\n+from plone.base.interfaces.controlpanel import IMailSchema, ISiteSchema\n from Products.CMFPlone.tests import PloneTestCase\n from Products.CMFPlone.tests.utils import MockMailHost\n from Products.MailHost.interfaces import IMailHost\ndiff --git a/Products/CMFPlone/tests/testResourceRegistries.py b/Products/CMFPlone/tests/testResourceRegistries.py\nindex 37ad8d13a1..d7214266cf 100644\n--- a/Products/CMFPlone/tests/testResourceRegistries.py\n+++ b/Products/CMFPlone/tests/testResourceRegistries.py\n@@ -2,7 +2,7 @@\n from plone.registry import field as regfield\n from plone.registry import Record\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import IBundleRegistry\n+from plone.base.interfaces import IBundleRegistry\n from Products.CMFPlone.resources import add_bundle_on_request\n from Products.CMFPlone.resources import remove_bundle_on_request\n from Products.CMFPlone.resources.browser.resource import ScriptsView\ndiff --git a/Products/CMFPlone/tests/testSearch.py b/Products/CMFPlone/tests/testSearch.py\nindex e331876b9e..e132ab5130 100644\n--- a/Products/CMFPlone/tests/testSearch.py\n+++ b/Products/CMFPlone/tests/testSearch.py\n@@ -11,7 +11,7 @@\n from zope.component import getUtility\n from plone.registry.interfaces import IRegistry\n \n-from Products.CMFPlone.interfaces import ISearchSchema\n+from plone.base.interfaces import ISearchSchema\n \n from plone.app.contentlisting.interfaces import IContentListing\n from plone.app.textfield import RichTextValue\ndiff --git a/Products/CMFPlone/tests/testSyndication.py b/Products/CMFPlone/tests/testSyndication.py\nindex 88da13ded3..4dd52fe92a 100644\n--- a/Products/CMFPlone/tests/testSyndication.py\n+++ b/Products/CMFPlone/tests/testSyndication.py\n@@ -3,12 +3,12 @@\n from AccessControl import Unauthorized\n from plone.app.textfield import RichTextValue\n from Products.CMFPlone.tests import PloneTestCase\n-from Products.CMFPlone.interfaces.syndication import IFeedSettings\n-from Products.CMFPlone.interfaces.syndication import ISiteSyndicationSettings\n+from plone.base.interfaces.syndication import IFeedSettings\n+from plone.base.interfaces.syndication import ISiteSyndicationSettings\n from plone.registry.interfaces import IRegistry\n from zope.component import getUtility\n from zExceptions import NotFound\n-from Products.CMFPlone.interfaces.syndication import IFeed\n+from plone.base.interfaces.syndication import IFeed\n from Products.CMFPlone.browser.syndication.adapters import DexterityItem\n \n \ndiff --git a/Products/CMFPlone/tests/testURLTool.py b/Products/CMFPlone/tests/testURLTool.py\nindex 78d38eb845..a84271b953 100644\n--- a/Products/CMFPlone/tests/testURLTool.py\n+++ b/Products/CMFPlone/tests/testURLTool.py\n@@ -6,7 +6,7 @@\n \n from Acquisition import aq_parent\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import ILoginSchema\n+from plone.base.interfaces import ILoginSchema\n from zope.component import getSiteManager\n \n \ndiff --git a/Products/CMFPlone/tests/test_defaultpage.py b/Products/CMFPlone/tests/test_defaultpage.py\nindex bcf66c7aff..9b4e86fe11 100644\n--- a/Products/CMFPlone/tests/test_defaultpage.py\n+++ b/Products/CMFPlone/tests/test_defaultpage.py\n@@ -3,6 +3,7 @@\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n+\n import unittest\n \n \n@@ -22,7 +23,7 @@ def test_get_default_page_step_1(self):\n         self.folder.setDefaultPage(\'d1\')\n         self.folder.invokeFactory(\'Document\', \'index_html\', title="Doc 2")\n \n-        from Products.CMFPlone.defaultpage import get_default_page\n+        from plone.base.defaultpage import get_default_page\n         self.assertEqual(\'index_html\', get_default_page(self.folder))\n \n     def test_get_default_page_step_2(self):\n@@ -55,7 +56,7 @@ def test_get_default_page_step_2(self):\n         )\n \n         # now test since we\'re sure everythings set up correctly\n-        from Products.CMFPlone.defaultpage import get_default_page\n+        from plone.base.defaultpage import get_default_page\n         self.assertEqual(\'d1\', get_default_page(self.folder))\n \n         # missing here:\n@@ -67,7 +68,7 @@ def test_get_default_page_step_3_1(self):\n         #    acquisition in place\n         # 3.1 look for a content in the container with the id, no acquisition!\n         self.folder.invokeFactory(\'Document\', \'d1\', title="Doc 1")\n-        from Products.CMFPlone.defaultpage import get_default_page\n+        from plone.base.defaultpage import get_default_page\n \n         # set doc d1 must work\n         self.folder.default_page = \'d1\'\n@@ -97,7 +98,7 @@ def test_get_default_page_step_3_2(self):\n         # 3.2 look for a content at portal, with acquisition\n         self.portal.invokeFactory(\'Document\', \'d1\', title="Doc 1")\n         self.folder.default_page = \'d1\'\n-        from Products.CMFPlone.defaultpage import get_default_page\n+        from plone.base.defaultpage import get_default_page\n \n         # now it must acquire from portal\n         self.assertEqual(\'d1\', get_default_page(self.folder))\n@@ -109,5 +110,5 @@ def test_get_default_page_step_4(self):\n         registry[\'plone.default_page\'] = [\'d1\']\n         self.folder.invokeFactory(\'Document\', \'d1\', title="Doc 1")\n \n-        from Products.CMFPlone.defaultpage import get_default_page\n+        from plone.base.defaultpage import get_default_page\n         self.assertEqual(\'d1\', get_default_page(self.folder))\ndiff --git a/Products/CMFPlone/tests/test_doctests.py b/Products/CMFPlone/tests/test_doctests.py\nindex 14c5b17659..3c2a3596b8 100644\n--- a/Products/CMFPlone/tests/test_doctests.py\n+++ b/Products/CMFPlone/tests/test_doctests.py\n@@ -1,24 +1,9 @@\n from unittest import TestSuite\n \n import doctest\n-import re\n-\n-\n-class Py23DocChecker(doctest.OutputChecker):\n-\n-    def check_output(self, want, got, optionflags):\n-        # TODO: Fix tests to check Python 3 style\n-        want = re.sub("u\'(.*?)\'", "\'\\\\1\'", want)\n-        return doctest.OutputChecker.check_output(self, want, got, optionflags)\n-\n \n def test_suite():\n     suites = (\n-        doctest.DocFileSuite(\n-            \'messages.txt\',\n-            package=\'Products.CMFPlone.tests\',\n-            checker=Py23DocChecker(),\n-            ),\n         doctest.DocTestSuite(\'Products.CMFPlone.TranslationServiceTool\'),\n         doctest.DocTestSuite(\'Products.CMFPlone.utils\'),\n         doctest.DocTestSuite(\'Products.CMFPlone.workflow\'),\ndiff --git a/Products/CMFPlone/tests/test_l18nl10n.py b/Products/CMFPlone/tests/test_l18nl10n.py\ndeleted file mode 100644\nindex 3a56a06736..0000000000\n--- a/Products/CMFPlone/tests/test_l18nl10n.py\n+++ /dev/null\n@@ -1,24 +0,0 @@\n-""" Unit tests for Products.CMFPlone.i18nl10n module. """\n-\n-import unittest\n-\n-class BasicI18nl10nTests(unittest.TestCase):\n-\n-    def test_regexp_dt_format_string_regexp(self):\n-        from Products.CMFPlone.i18nl10n import _dt_format_string_regexp\n-        dt_string = "%Y-%m-%d %H:%M"\n-        locales_string = "${H}:${M}"\n-\n-        # test for strftime format string\n-        self.assertTrue(bool(_dt_format_string_regexp.findall(dt_string)))\n-        self.assertFalse(bool(_dt_format_string_regexp.findall(locales_string)))\n-\n-    def test_regexp_interp_regex(self):\n-        from Products.CMFPlone.i18nl10n import _interp_regex\n-        locales_string = "${H}:${M}"\n-\n-        # test for locale string elements:\n-        self.assertEquals(\n-            _interp_regex.findall(locales_string),\n-            ["${H}", "${M}"],\n-        )\ndiff --git a/Products/CMFPlone/tests/test_mails.py b/Products/CMFPlone/tests/test_mails.py\nindex 431a616899..751718a6c1 100644\n--- a/Products/CMFPlone/tests/test_mails.py\n+++ b/Products/CMFPlone/tests/test_mails.py\n@@ -4,7 +4,7 @@\n from plone.app.testing import PloneSandboxLayer\n from plone.registry.interfaces import IRegistry\n from plone.testing import layered\n-from Products.CMFPlone.interfaces.controlpanel import IMailSchema\n+from plone.base.interfaces.controlpanel import IMailSchema\n from zope.component import getUtility\n \n import doctest\ndiff --git a/Products/CMFPlone/tests/test_patternsettings.py b/Products/CMFPlone/tests/test_patternsettings.py\nindex 6872091250..9a70e75faa 100644\n--- a/Products/CMFPlone/tests/test_patternsettings.py\n+++ b/Products/CMFPlone/tests/test_patternsettings.py\n@@ -1,7 +1,7 @@\n from plone.app.testing import login\n from plone.app.testing import TEST_USER_NAME\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import ITinyMCESchema\n+from plone.base.interfaces import ITinyMCESchema\n from Products.CMFPlone.patterns.view import PatternsSettingsView\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\ndiff --git a/Products/CMFPlone/tests/test_redirect_after_login.py b/Products/CMFPlone/tests/test_redirect_after_login.py\nindex 4c0aec9a81..821e762be8 100644\n--- a/Products/CMFPlone/tests/test_redirect_after_login.py\n+++ b/Products/CMFPlone/tests/test_redirect_after_login.py\n@@ -2,8 +2,8 @@\n from plone.app.testing import TEST_USER_PASSWORD\n from plone.testing.zope import Browser\n from Products.CMFPlone.browser.login.login import LoginForm\n-from Products.CMFPlone.interfaces import IInitialLogin\n-from Products.CMFPlone.interfaces import IRedirectAfterLogin\n+from plone.base.interfaces import IInitialLogin\n+from plone.base.interfaces import IRedirectAfterLogin\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from zope.interface import implementer\ndiff --git a/Products/CMFPlone/tests/test_robots_txt.py b/Products/CMFPlone/tests/test_robots_txt.py\nindex 23a54ba1fb..e7f73966b5 100644\n--- a/Products/CMFPlone/tests/test_robots_txt.py\n+++ b/Products/CMFPlone/tests/test_robots_txt.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import ISiteSchema\n+from plone.base.interfaces import ISiteSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/tests/test_sitelogo.py b/Products/CMFPlone/tests/test_sitelogo.py\nindex 1f1f8340f9..0f07e67ac0 100644\n--- a/Products/CMFPlone/tests/test_sitelogo.py\n+++ b/Products/CMFPlone/tests/test_sitelogo.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import ISiteSchema\n+from plone.base.interfaces import ISiteSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/tests/test_utils.py b/Products/CMFPlone/tests/test_utils.py\nindex 64ef7ea302..17e66a96fc 100644\n--- a/Products/CMFPlone/tests/test_utils.py\n+++ b/Products/CMFPlone/tests/test_utils.py\n@@ -6,11 +6,9 @@\n from Products.CMFCore.tests.base.content import SIMPLE_STRUCTUREDTEXT\n from Products.CMFCore.tests.base.content import SIMPLE_XHTML\n from Products.CMFCore.tests.base.content import STX_WITH_HTML\n-from Products.CMFPlone.interfaces import ISiteSchema\n+from plone.base.interfaces import ISiteSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from zope.component import getUtility\n-from zope.interface import alsoProvides\n-from plone.subrequest.interfaces import ISubRequest\n \n import unittest\n \n@@ -36,159 +34,6 @@ def test_bodyfinder(self):\n         self.assertEqual(bodyfinder(STX_WITH_HTML),\n                          \'<p>Hello world, I am Bruce.</p>\')\n \n-    def test_safe_encode(self):\n-        """safe_encode should always encode unicode to the specified encoding.\n-        """\n-        from Products.CMFPlone.utils import safe_encode\n-        self.assertEqual(safe_encode(\'sp\xc3\xa4m\'), b\'sp\\xc3\\xa4m\')\n-        self.assertEqual(safe_encode(\'sp\xc3\xa4m\', \'utf-8\'), b\'sp\\xc3\\xa4m\')\n-        self.assertEqual(safe_encode(\'sp\xc3\xa4m\', encoding=\'latin-1\'), b\'sp\\xe4m\')\n-\n-    def test_get_top_request(self):\n-        """If in a subrequest, ``get_top_request`` should always return the top\n-        most request.\n-        """\n-        from Products.CMFPlone.utils import get_top_request\n-\n-        class MockRequest:\n-\n-            def __init__(self, parent_request=None):\n-                self._dict = {}\n-                if parent_request:\n-                    self._dict[\'PARENT_REQUEST\'] = parent_request\n-                    alsoProvides(self, ISubRequest)\n-\n-            def get(self, key, default=None):\n-                return self._dict.get(key, default)\n-\n-        req0 = MockRequest()\n-        req1 = MockRequest(req0)\n-        req2 = MockRequest(req1)\n-\n-        self.assertEqual(get_top_request(req0), req0)\n-        self.assertEqual(get_top_request(req1), req0)\n-        self.assertEqual(get_top_request(req2), req0)\n-\n-    def test_get_top_site_from_url(self):\n-        """Unit test for ``get_top_site_from_url`` with context and request\n-        mocks.\n-\n-        Test content structure:\n-        /approot/PloneSite/folder/SubSite/folder\n-        PloneSite and SubSite implement ISite\n-        """\n-        from plone.app.content.browser.contents import get_top_site_from_url\n-        from urllib.parse import urlparse\n-        from zope.component.interfaces import ISite\n-\n-        class MockContext:\n-            vh_url = \'http://nohost\'\n-            vh_root = \'\'\n-\n-            def __init__(self, physical_path):\n-                self.physical_path = physical_path\n-                if self.physical_path.split(\'/\')[-1] in (\'PloneSite\', \'SubSite\'):  # noqa\n-                    alsoProvides(self, ISite)\n-\n-            @property\n-            def id(self):\n-                return self.physical_path.split(\'/\')[-1]\n-\n-            def absolute_url(self):\n-                return self.vh_url + self.physical_path[len(self.vh_root):] or \'/\'  # noqa\n-\n-            def restrictedTraverse(self, path):\n-                return MockContext(self.vh_root + path)\n-\n-        class MockRequest:\n-            vh_url = \'http://nohost\'\n-            vh_root = \'\'\n-\n-            def physicalPathFromURL(self, url):\n-                # Return the physical path from a URL.\n-                # The outer right \'/\' is not part of the path.\n-                path = self.vh_root + urlparse(url).path.rstrip(\'/\')\n-                return path.split(\'/\')\n-\n-        # NO VIRTUAL HOSTING\n-\n-        req = MockRequest()\n-\n-        # Case 1:\n-        ctx = MockContext(\'/approot/PloneSite\')\n-        self.assertEqual(get_top_site_from_url(ctx, req).id, \'PloneSite\')\n-\n-        # Case 2\n-        ctx = MockContext(\'/approot/PloneSite/folder\')\n-        self.assertEqual(get_top_site_from_url(ctx, req).id, \'PloneSite\')\n-\n-        # Case 3:\n-        ctx = MockContext(\'/approot/PloneSite/folder/SubSite/folder\')\n-        self.assertEqual(get_top_site_from_url(ctx, req).id, \'PloneSite\')\n-\n-        # Case 4, using unicode paths accidentially:\n-        ctx = MockContext(\'/approot/PloneSite/folder/SubSite/folder\')\n-        self.assertEqual(get_top_site_from_url(ctx, req).id, \'PloneSite\')\n-\n-        # VIRTUAL HOSTING ON SUBSITE\n-\n-        req = MockRequest()\n-        req.vh_root = \'/approot/PloneSite/folder/SubSite\'\n-\n-        # Case 4:\n-        ctx = MockContext(\'/approot/PloneSite/folder/SubSite\')\n-        ctx.vh_root = \'/approot/PloneSite/folder/SubSite\'\n-        self.assertEqual(get_top_site_from_url(ctx, req).id, \'SubSite\')\n-\n-        # Case 5:\n-        ctx = MockContext(\'/approot/PloneSite/folder/SubSite/folder\')\n-        ctx.vh_root = \'/approot/PloneSite/folder/SubSite\'\n-        self.assertEqual(get_top_site_from_url(ctx, req).id, \'SubSite\')\n-\n-    def test_human_readable_size_int(self):\n-        from Products.CMFPlone.utils import human_readable_size\n-\n-        self.assertEqual(human_readable_size(0), \'0 KB\')\n-        self.assertEqual(human_readable_size(1), \'1 KB\')\n-        size = 1000\n-        self.assertEqual(human_readable_size(size), \'1 KB\')\n-        size += 24\n-        self.assertEqual(human_readable_size(size), \'1.0 KB\')\n-        size += 512\n-        self.assertEqual(human_readable_size(size), \'1.5 KB\')\n-        size *= 1024\n-        self.assertEqual(human_readable_size(size), \'1.5 MB\')\n-        size *= 1024\n-        self.assertEqual(human_readable_size(size), \'1.5 GB\')\n-        size *= 1024\n-        self.assertEqual(human_readable_size(size), \'1536.0 GB\')\n-\n-    def test_human_readable_size_float(self):\n-        from Products.CMFPlone.utils import human_readable_size\n-\n-        self.assertEqual(human_readable_size(0.), \'0 KB\')\n-        self.assertEqual(human_readable_size(1.), \'1 KB\')\n-        size = 1000.\n-        self.assertEqual(human_readable_size(size), \'1 KB\')\n-        size += 24.\n-        self.assertEqual(human_readable_size(size), \'1.0 KB\')\n-        size += 512.\n-        self.assertEqual(human_readable_size(size), \'1.5 KB\')\n-        size *= 1024.\n-        self.assertEqual(human_readable_size(size), \'1.5 MB\')\n-        size *= 1024.\n-        self.assertEqual(human_readable_size(size), \'1.5 GB\')\n-        size *= 1024.\n-        self.assertEqual(human_readable_size(size), \'1536.0 GB\')\n-\n-    def test_human_readable_size_special(self):\n-        from Products.CMFPlone.utils import human_readable_size\n-\n-        self.assertEqual(human_readable_size(None), \'0 KB\')\n-        self.assertEqual(human_readable_size(\'\'), \'0 KB\')\n-        self.assertEqual(human_readable_size(\'barney\'), \'barney\')\n-\n-\n class LogoTests(unittest.TestCase):\n \n     layer = PRODUCTS_CMFPLONE_INTEGRATION_TESTING\ndiff --git a/Products/CMFPlone/traversal.py b/Products/CMFPlone/traversal.py\nindex 77f33f36a0..8b56473dc4 100644\n--- a/Products/CMFPlone/traversal.py\n+++ b/Products/CMFPlone/traversal.py\n@@ -2,7 +2,7 @@\n from zope.component import queryUtility\n from plone.resource.interfaces import IResourceDirectory\n from plone.resource.interfaces import IUniqueResourceRequest\n-from Products.CMFPlone.interfaces.resources import (\n+from plone.base.interfaces.resources import (\n     OVERRIDE_RESOURCE_DIRECTORY_NAME)\n from Products.PageTemplates.Expressions import getEngine\n from Products.PageTemplates.Expressions import getTrustedEngine\ndiff --git a/Products/CMFPlone/utils.py b/Products/CMFPlone/utils.py\nindex 1e3c29fe07..87a3df71b3 100644\n--- a/Products/CMFPlone/utils.py\n+++ b/Products/CMFPlone/utils.py\n@@ -12,56 +12,48 @@\n from App.ImageFile import ImageFile\n from DateTime import DateTime\n from DateTime.interfaces import DateTimeError\n+from html import escape\n from OFS.CopySupport import CopyError\n from os.path import abspath\n from os.path import join\n from os.path import split\n+from plone.base import PloneMessageFactory as _\n+from plone.base import utils as base_utils\n from plone.i18n.normalizer.interfaces import IIDNormalizer\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.permissions import AddPortalContent\n from Products.CMFCore.permissions import ManageUsers\n-from Products.CMFCore.utils import ToolInit as CMFCoreToolInit\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone import PloneMessageFactory as _\n+from Products.CMFCore.utils import ToolInit as CMFCoreToolInit\n from Products.CMFPlone import bbb\n-from Products.CMFPlone.interfaces.controlpanel import IImagingSchema\n-from Products.CMFPlone.interfaces.siteroot import IPloneSiteRoot\n-from Products.CMFPlone.log import log\n-from Products.CMFPlone.log import log_deprecated\n-from Products.CMFPlone.log import log_exc\n-from urllib.parse import urlparse\n+from plone.base.interfaces.controlpanel import IImagingSchema\n+from plone.base.interfaces.siteroot import IPloneSiteRoot\n+from Products.CMFPlone.log import log  # noqa - for python scripts\n+from Products.CMFPlone.log import log_exc  # noqa - for python scripts\n+from Products.CMFPlone.log import log_deprecated  # noqa - for python scripts\n from ZODB.POSException import ConflictError\n-from zope import schema\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n from zope.component import providedBy\n from zope.component import queryUtility\n from zope.component.hooks import getSite\n-from zope.component.interfaces import ISite\n from zope.deferredimport import deprecated as deprecated_import\n-from zope.deprecation import deprecated\n+from zope.deprecation import deprecate\n+from zope.deprecation import deprecated  # noqa\n from zope.i18n import translate\n from zope.interface import implementedBy\n from zope.publisher.interfaces.browser import IBrowserRequest\n \n-import json\n import OFS\n import pkg_resources\n import re\n import sys\n import transaction\n-import warnings\n import zope.interface\n \n-try:\n-    from html import escape\n-except ImportError:\n-    from cgi import escape\n \n-try:\n-    from types import ClassType\n-except ImportError:\n-    ClassType = type\n+# todo: check below if this is still needed\n+ClassType = type\n \n if bbb.HAS_ZSERVER:\n     from webdav.interfaces import IWriteLock\n@@ -69,11 +61,33 @@\n     from OFS.interfaces import IWriteLock\n \n deprecated_import(\n-    "Import from Products.CMFPlone.defaultpage instead",\n-    isDefaultPage=\'Products.CMFPlone.defaultpage:check_default_page_via_view\',\n-    getDefaultPage=\'Products.CMFPlone.defaultpage:get_default_page_via_view\',\n+    "Import from plone.base.utils instead (will be removed in Plone 7)",\n+    human_readable_size=\'plone.base.utils:human_readable_size\',\n+    safeToInt=\'plone.base.utils:safeToInt\',\n+    safe_bytes=\'plone.base.utils:safe_bytes\',\n+    safe_text=\'plone.base.utils:safe_text\',\n+    get_installer=\'plone.base.utils:get_installer\',\n+    get_top_request=\'plone.base.utils:get_top_request\',\n+    get_top_site_from_url=\'plone.base.utils:get_top_site_from_url\',\n )\n \n+@deprecate("Use plone.base.utils.safe_bytes instead (will be removed in Plone 7)")\n+def safe_encode(*args, **kwargs):\n+    return base_utils.safe_bytes(*args, **kwargs)\n+\n+@deprecate("Use plone.base.utils.safe_text instead (will be removed in Plone 7)")\n+def safe_unicode(*args, **kwargs):\n+    return base_utils.safe_text(*args, **kwargs)\n+\n+@deprecate("Use plone.base.utils.safe_text instead (will be removed in Plone 7)")\n+def safe_nativestring(value, encoding=\'utf-8\'):\n+    """Convert a value to str in py2 and to text in py3\n+    """\n+    if isinstance(value, bytes):\n+        value = base_utils.safe_text(value, encoding)\n+    return value\n+\n+\n security = ModuleSecurityInfo()\n security.declarePrivate(\'deprecated\')\n security.declarePrivate(\'abspath\')\n@@ -96,8 +110,6 @@\n QUALITY_DEFAULT = 88\n pattern = re.compile(r\'^(.*)\\s+(\\d+)\\s*:\\s*(\\d+)$\')\n \n-# Log methods\n-log_exc  # pyflakes.  Keep this, as someone may import it.\n _marker = []\n \n \n@@ -212,13 +224,6 @@ def pretty_title_or_id(context, obj, empty_value=_marker):\n     return empty_value\n \n \n-def getSiteEncoding(context):\n-    return \'utf-8\'\n-deprecated(\'getSiteEncoding\',\n-           (\'`getSiteEncoding` is deprecated. Plone only supports UTF-8 \'\n-            \'currently. This method always returns "utf-8"\'))\n-\n-\n def getEmptyTitle(context, translated=True):\n     """Returns string to be used for objects with no title or id"""\n     # The default is an extra fancy unicode elipsis\n@@ -337,32 +342,6 @@ def _createObjectByType(type_name, container, id, *args, **kw):\n     return fti._constructInstance(container, id, *args, **kw)\n \n \n-def safeToInt(value, default=0):\n-    """Convert value to integer or just return 0 if we can\'t\n-\n-       >>> safeToInt(45)\n-       45\n-\n-       >>> safeToInt("42")\n-       42\n-\n-       >>> safeToInt("spam")\n-       0\n-\n-       >>> safeToInt([])\n-       0\n-\n-       >>> safeToInt(None)\n-       0\n-\n-       >>> safeToInt(None, default=-1)\n-       -1\n-    """\n-    try:\n-        return int(value)\n-    except (ValueError, TypeError):\n-        return default\n-\n release_levels = (\'alpha\', \'beta\', \'candidate\', \'final\')\n rl_abbr = {\'a\': \'alpha\', \'b\': \'beta\', \'rc\': \'candidate\'}\n \n@@ -393,7 +372,7 @@ def versionTupleFromString(v_str):\n     else:\n         groups = list(match.groups())\n         for i in (0, 1, 2, 4):\n-            groups[i] = safeToInt(groups[i])\n+            groups[i] = base_utils.safeToInt(groups[i])\n         if groups[3] is None:\n             groups[3] = \'final\'\n         elif groups[3] in rl_abbr.keys():\n@@ -414,7 +393,7 @@ def transaction_note(note):\n     if (len(T.description) + len(note)) >= 65533:\n         log(\'Transaction note too large omitting %s\' % str(note))\n     else:\n-        T.note(safe_unicode(note))\n+        T.note(base_utils.safe_text(note))\n \n \n def base_hasattr(obj, name):\n@@ -438,67 +417,11 @@ def safe_callable(obj):\n     if safe_hasattr(obj, \'__class__\'):\n         if safe_hasattr(obj, \'__call__\'):\n             return True\n-        else:\n-            return isinstance(obj, ClassType)\n-    else:\n-        return callable(obj)\n-\n-\n-def safe_text(value, encoding=\'utf-8\'):\n-    """Converts a value to text, even it is already a text string.\n+        return isinstance(obj, ClassType)\n+    return callable(obj)\n \n-        >>> from Products.CMFPlone.utils import safe_unicode\n-        >>> test_bytes = u\'\\u01b5\'.encode(\'utf-8\')\n-        >>> safe_unicode(\'spam\') == u\'spam\'\n-        True\n-        >>> safe_unicode(b\'spam\') == u\'spam\'\n-        True\n-        >>> safe_unicode(u\'spam\') == u\'spam\'\n-        True\n-        >>> safe_unicode(u\'spam\'.encode(\'utf-8\')) == u\'spam\'\n-        True\n-        >>> safe_unicode(test_bytes) == u\'\\u01b5\'\n-        True\n-        >>> safe_unicode(u\'\\xc6\\xb5\'.encode(\'iso-8859-1\')) == u\'\\u01b5\'\n-        True\n-        >>> safe_unicode(test_bytes, encoding=\'ascii\') == u\'\\u01b5\'\n-        True\n-        >>> safe_unicode(1) == 1\n-        True\n-        >>> print(safe_unicode(None))\n-        None\n-    """\n-    if isinstance(value, str):\n-        return value\n-    elif isinstance(value, bytes):\n-        try:\n-            value = str(value, encoding)\n-        except (UnicodeDecodeError):\n-            value = value.decode(\'utf-8\', \'replace\')\n-    return value\n-\n-\n-safe_unicode = safe_text\n-\n-\n-def safe_bytes(value, encoding=\'utf-8\'):\n-    """Convert text to bytes of the specified encoding.\n-    """\n-    if isinstance(value, str):\n-        value = value.encode(encoding)\n-    return value\n \n \n-safe_encode = safe_bytes\n-\n-\n-def safe_nativestring(value, encoding=\'utf-8\'):\n-    """Convert a value to str in py2 and to text in py3\n-    """\n-    if isinstance(value, bytes):\n-        value = safe_text(value, encoding)\n-    return value\n-\n \n def tuplize(value):\n     if isinstance(value, tuple):\n@@ -522,10 +445,12 @@ def flatten(interfaces):\n     return tuple(flattened)\n \n \n+@deprecate("Use zope.interface.directlyProvides instead (will be removed in Plone 7)")\n def directlyProvides(obj, *interfaces):\n     return zope.interface.directlyProvides(obj, *interfaces)\n \n \n+@deprecate("Use zope.interface.classImplements instead (will be removed in Plone 7)")\n def classImplements(class_, *interfaces):\n     return zope.interface.classImplements(class_, *interfaces)\n \n@@ -543,10 +468,7 @@ def webdav_enabled(obj, container):\n     """WebDAV check used in externalEditorEnabled.py"""\n \n     # Object implements lock interface\n-    if IWriteLock.providedBy(obj):\n-        return True\n-\n-    return False\n+    return IWriteLock.providedBy(obj)\n \n \n # Copied \'unrestricted_rename\' from ATCT migrations to avoid\n@@ -623,13 +545,6 @@ def _getSecurity(klass, create=True):\n     return security\n \n \n-def isLinked(obj):\n-    """Check if the given content object is linked from another one."""\n-    log_deprecated("utils.isLinked is deprecated, you should use plone.app.linkintegrity.utils.hasIncomingLinks")  # noqa\n-    from plone.app.linkintegrity.utils import hasIncomingLinks\n-    return hasIncomingLinks(obj)\n-\n-\n def set_own_login_name(member, loginname):\n     """Allow the user to set his/her own login name.\n \n@@ -656,25 +571,6 @@ def ajax_load_url(url):\n     return url\n \n \n-def validate_json(value):\n-    warnings.warn(\n-        \'Moved to the only place where it was used in order to avoid circular \'\n-        \'imports between ./interfaces/* and ./utils. Now relocated to \'\n-        \'"./interfaces/controlpanel.py"\',\n-        DeprecationWarning)\n-    try:\n-        json.loads(value)\n-    except ValueError as exc:\n-        class JSONError(schema.ValidationError):\n-            __doc__ = _("Must be empty or a valid JSON-formatted "\n-                        "configuration \xe2\x80\x93 ${message}.", mapping={\n-                            \'message\': str(exc)})\n-\n-        raise JSONError(value)\n-\n-    return True\n-\n-\n def bodyfinder(text):\n     """ Return body or unchanged text if no body tags found.\n \n@@ -720,19 +616,13 @@ def getQuality():\n     return QUALITY_DEFAULT\n \n \n-def getRetinaScales():\n-    warnings.warn(\n-        \'use getHighPixelDensityScales instead\',\n-        DeprecationWarning)\n-    return getHighPixelDensityScales()\n-\n def getHighPixelDensityScales():\n     from plone.namedfile.utils import getHighPixelDensityScales as func\n     return func()\n \n \n def getSiteLogo(site=None):\n-    from Products.CMFPlone.interfaces import ISiteSchema\n+    from plone.base.interfaces import ISiteSchema\n     from plone.formwidget.namedfile.converter import b64decode_file\n     if site is None:\n         site = getSite()\n@@ -744,64 +634,9 @@ def getSiteLogo(site=None):\n         filename, data = b64decode_file(settings.site_logo)\n         return \'{}/@@site-logo/{}\'.format(\n             site_url, filename)\n-    else:\n-        return \'%s/logo.png\' % site_url\n-\n-\n-def get_installer(context, request=None):\n-    if request is None:\n-        request = aq_get(context, \'REQUEST\', None)\n-    view = getMultiAdapter((context, request), name=\'installer\')\n-    return view\n+    return \'%s/logo.png\' % site_url\n \n \n-def get_top_request(request):\n-    """Get highest request from a subrequest.\n-    """\n-\n-    def _top_request(req):\n-        parent_request = req.get(\'PARENT_REQUEST\', None)\n-        return _top_request(parent_request) if parent_request else req\n-    return _top_request(request)\n-\n-\n-def get_top_site_from_url(context, request):\n-    """Find the top-most site, which is still in the url path.\n-\n-    If the current context is within a subsite within a PloneSiteRoot and no\n-    virtual hosting is in place, the PloneSiteRoot is returned.\n-    When at the same context but in a virtual hosting environment with the\n-    virtual host root pointing to the subsite, it returns the subsite instead\n-    the PloneSiteRoot.\n-\n-    For this given content structure:\n-\n-    /Plone/Subsite\n-\n-    It should return the following in these cases:\n-\n-    - No virtual hosting, URL path: /Plone, Returns: Plone Site\n-    - No virtual hosting, URL path: /Plone/Subsite, Returns: Plone\n-    - Virtual hosting roots to Subsite, URL path: /, Returns: Subsite\n-    """\n-    site = getSite()\n-    try:\n-        url_path = urlparse(context.absolute_url()).path.split(\'/\')\n-        for idx in range(len(url_path)):\n-            _path = \'/\'.join(url_path[:idx + 1]) or \'/\'\n-            site_path = \'/\'.join(request.physicalPathFromURL(_path)) or \'/\'\n-            _site = context.restrictedTraverse(site_path)\n-            if ISite.providedBy(_site):\n-                break\n-        if _site:\n-            site = _site\n-    except (ValueError, AttributeError):\n-        # On error, just return getSite.\n-        # Refs: https://github.com/plone/plone.app.content/issues/103\n-        # Also, TestRequest doesn\'t have physicalPathFromURL\n-        pass\n-    return site\n-\n \n def _safe_format(inst, method):\n     """Use our SafeFormatter that uses guarded_getattr for attribute access.\n@@ -812,34 +647,6 @@ def _safe_format(inst, method):\n     return SafeFormatter(inst).safe_format\n \n \n-SIZE_CONST = {\'KB\': 1024, \'MB\': 1024 * 1024, \'GB\': 1024 * 1024 * 1024}\n-SIZE_ORDER = (\'GB\', \'MB\', \'KB\')\n-\n-\n-def human_readable_size(size):\n-    """ Get a human readable size string. """\n-    smaller = SIZE_ORDER[-1]\n-\n-    # if the size is a float, then make it an int\n-    # happens for large files\n-    try:\n-        size = int(size)\n-    except (ValueError, TypeError):\n-        pass\n-\n-    if not size:\n-        return \'0 %s\' % smaller\n-\n-    if isinstance(size, int):\n-        if size < SIZE_CONST[smaller]:\n-            return \'1 %s\' % smaller\n-        for c in SIZE_ORDER:\n-            if size // SIZE_CONST[c] > 0:\n-                break\n-        return \'{:.1f} {}\'.format(float(size / float(SIZE_CONST[c])), c)\n-    return size\n-\n-\n def check_id(\n         context, id=None, required=0, alternative_id=None, contained_by=None,\n         **kwargs):\ndiff --git a/Products/CMFPlone/workflow.py b/Products/CMFPlone/workflow.py\nindex ac939662d3..199fdfbc40 100644\n--- a/Products/CMFPlone/workflow.py\n+++ b/Products/CMFPlone/workflow.py\n@@ -2,7 +2,7 @@\n from zope.component import adapter\n from Acquisition import aq_base\n from Products.CMFCore.interfaces import IWorkflowTool\n-from Products.CMFPlone.interfaces import IWorkflowChain\n+from plone.base.interfaces import IWorkflowChain\n \n \n @adapter(Interface, IWorkflowTool)\ndiff --git a/news/3395.feature b/news/3395.feature\nnew file mode 100644\nindex 0000000000..556da519af\n--- /dev/null\n+++ b/news/3395.feature\n@@ -0,0 +1,5 @@\n+Implement `PLIP 3395 <https://github.com/plone/Products.CMFPlone/issue/3395>`_.\n+Moves all interfaces, whole defaultpage, i18nl10, batch, permissions and parts of utils to ``plone.base``.\n+For all imports are in place with deprecation warnings.\n+Along with this a bunch of long deprecated functions, imports and similar in above packages were removed.\n+[jensens]\n\\ No newline at end of file\ndiff --git a/setup.py b/setup.py\nindex 5728362ca5..efbfef47b1 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -67,6 +67,7 @@\n         \'plone.app.vocabularies\',\n         \'plone.app.workflow\',\n         \'plone.batching\',\n+        \'plone.base\',\n         \'plone.browserlayer >= 2.1.5\',\n         \'plone.contentrules\',\n         \'plone.folder\',\n'

