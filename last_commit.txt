Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2019-05-06T16:45:15+02:00
Author: Markus Hilbert (iham) <markus.hilbert@iham.at>
Commit: https://github.com/plone/plone.app.multilingual/commit/158468771b17e4e1f61d2ab5796ebab511fee67b

Setting named behavior instead of dotted on fti during install.

Files changed:
A news/345.bugfix
M src/plone/app/multilingual/dx/schemaeditor.py
M src/plone/app/multilingual/setuphandlers.py

b"diff --git a/news/345.bugfix b/news/345.bugfix\nnew file mode 100644\nindex 00000000..947348a3\n--- /dev/null\n+++ b/news/345.bugfix\n@@ -0,0 +1 @@\n+Setting named behavior instead of dotted on fti during install. [iham]\n\\ No newline at end of file\ndiff --git a/src/plone/app/multilingual/dx/schemaeditor.py b/src/plone/app/multilingual/dx/schemaeditor.py\nindex 823eee4c..b6427835 100644\n--- a/src/plone/app/multilingual/dx/schemaeditor.py\n+++ b/src/plone/app/multilingual/dx/schemaeditor.py\n@@ -52,7 +52,7 @@ def _write_languageindependent(self, value):\n # additional conditions pass:\n @adapter(ISchemaContext, IField)\n def get_li_schema(schema_context, field):\n-    behavior = 'plone.app.multilingual.dx.interfaces.IDexterityTranslatable'\n+    behavior = 'plone.translatable'\n     fti = getattr(schema_context, 'fti', None)\n     if fti and behavior in getattr(fti, 'behaviors', []):\n         return IFieldLanguageIndependent\ndiff --git a/src/plone/app/multilingual/setuphandlers.py b/src/plone/app/multilingual/setuphandlers.py\nindex 56406645..2b559632 100644\n--- a/src/plone/app/multilingual/setuphandlers.py\n+++ b/src/plone/app/multilingual/setuphandlers.py\n@@ -54,7 +54,7 @@ def enable_translatable_behavior(portal):\n         # Enable translatable behavior for all types\n         behaviors = list(fti.behaviors)\n         behaviors.extend([\n-            'plone.app.multilingual.dx.interfaces.IDexterityTranslatable',\n+            'plone.translatable',\n         ])\n         behaviors = tuple(set(behaviors))\n         fti._updateProperty('behaviors', behaviors)\n@@ -81,7 +81,7 @@ def disable_translatable_behavior(portal):\n         # Disable translatable behavior from all types\n         behaviors = [\n             i for i in fti.behaviors if i !=\n-            'plone.app.multilingual.dx.interfaces.IDexterityTranslatable'\n+            'plone.translatable'\n         ]\n         fti._updateProperty('behaviors', behaviors)\n \n"

Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2019-05-06T17:30:02+02:00
Author: Markus Hilbert (iham) <markus.hilbert@iham.at>
Commit: https://github.com/plone/plone.app.multilingual/commit/ea191a2efb0490b54977f4da349a7ba39b1fa55a

Setting named behavior instead of dotted on fti during install.

Files changed:
M src/plone/app/multilingual/browser/setup.py
M src/plone/app/multilingual/content/lif.py
M src/plone/app/multilingual/profiles/default/types/LIF.xml

b'diff --git a/src/plone/app/multilingual/browser/setup.py b/src/plone/app/multilingual/browser/setup.py\nindex 558c4ea7..76808f13 100644\n--- a/src/plone/app/multilingual/browser/setup.py\n+++ b/src/plone/app/multilingual/browser/setup.py\n@@ -281,6 +281,6 @@ def ensure_translatable(self, type_):\n \n         if IDexterityFTI.providedBy(fti):\n             behaviors = list(fti.behaviors)\n-            behaviors.append(IDexterityTranslatable.__identifier__)\n+            behaviors.append(\'plone.translatable\')\n             behaviors = tuple(set(behaviors))\n             fti._updateProperty(\'behaviors\', behaviors)\ndiff --git a/src/plone/app/multilingual/content/lif.py b/src/plone/app/multilingual/content/lif.py\nindex e78ad21f..50b9f29a 100644\n--- a/src/plone/app/multilingual/content/lif.py\n+++ b/src/plone/app/multilingual/content/lif.py\n@@ -3,6 +3,13 @@\n from Products.CMFCore.utils import getToolByName\n from zope.component.hooks import getSite\n \n+from plone.dexterity.content import Container\n+\n+\n+class LanguageIndependentFolder(Container):\n+    """class definition for nicer output."""\n+    pass\n+\n \n def connect_with_others(ob, event):\n     pc = getToolByName(getSite(), \'portal_catalog\')\ndiff --git a/src/plone/app/multilingual/profiles/default/types/LIF.xml b/src/plone/app/multilingual/profiles/default/types/LIF.xml\nindex c1a283bf..f00fed56 100644\n--- a/src/plone/app/multilingual/profiles/default/types/LIF.xml\n+++ b/src/plone/app/multilingual/profiles/default/types/LIF.xml\n@@ -21,7 +21,7 @@\n   </property>\n   <property name="default_view_fallback">False</property>\n   <property name="add_permission">cmf.ManagePortal</property>\n-  <property name="klass">plone.dexterity.content.Container</property>\n+  <property name="klass">plone.app.multilingual.content.lif.LanguageIndependentFolder</property>\n   <property name="behaviors">\n     <element value="plone.dublincore"/>\n     <element value="plone.namefromtitle"/>\n'

Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2019-05-07T10:18:41+02:00
Author: Markus Hilbert (iham) <markus.hilbert@iham.at>
Commit: https://github.com/plone/plone.app.multilingual/commit/4a7568514ac75982517f4bd55edb52a40099c82b

Setting named behavior instead of dotted on fti during install.

Files changed:
M src/plone/app/multilingual/content/lif.py
M src/plone/app/multilingual/profiles/default/types/LIF.xml

b'diff --git a/src/plone/app/multilingual/content/lif.py b/src/plone/app/multilingual/content/lif.py\nindex 50b9f29a..3b265b4b 100644\n--- a/src/plone/app/multilingual/content/lif.py\n+++ b/src/plone/app/multilingual/content/lif.py\n@@ -6,11 +6,6 @@\n from plone.dexterity.content import Container\n \n \n-class LanguageIndependentFolder(Container):\n-    """class definition for nicer output."""\n-    pass\n-\n-\n def connect_with_others(ob, event):\n     pc = getToolByName(getSite(), \'portal_catalog\')\n     results = pc.unrestrictedSearchResults(portal_type=\'LIF\')\ndiff --git a/src/plone/app/multilingual/profiles/default/types/LIF.xml b/src/plone/app/multilingual/profiles/default/types/LIF.xml\nindex f00fed56..c1a283bf 100644\n--- a/src/plone/app/multilingual/profiles/default/types/LIF.xml\n+++ b/src/plone/app/multilingual/profiles/default/types/LIF.xml\n@@ -21,7 +21,7 @@\n   </property>\n   <property name="default_view_fallback">False</property>\n   <property name="add_permission">cmf.ManagePortal</property>\n-  <property name="klass">plone.app.multilingual.content.lif.LanguageIndependentFolder</property>\n+  <property name="klass">plone.dexterity.content.Container</property>\n   <property name="behaviors">\n     <element value="plone.dublincore"/>\n     <element value="plone.namefromtitle"/>\n'

Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2019-05-07T15:33:01+02:00
Author: Markus Hilbert (iham) <markus.hilbert@iham.at>
Commit: https://github.com/plone/plone.app.multilingual/commit/4c01327481b79b937f80df5b3d3983d717c52a64

fixing tests for named behaviors.

Files changed:
M src/plone/app/multilingual/testing.py
M src/plone/app/multilingual/tests/test_lif.py

b'diff --git a/src/plone/app/multilingual/testing.py b/src/plone/app/multilingual/testing.py\nindex deeb7c6c..c04eceed 100644\n--- a/src/plone/app/multilingual/testing.py\n+++ b/src/plone/app/multilingual/testing.py\n@@ -167,8 +167,8 @@ def create_content_type(self, portal_type):\n         disableCSRFProtection()\n         fti = DexterityFTI(str(portal_type), title=portal_type)\n         fti.behaviors = (\n-            \'plone.app.dexterity.behaviors.metadata.IBasic\',\n-            \'plone.app.multilingual.dx.interfaces.IDexterityTranslatable\'\n+            \'plone.basic\',\n+            \'plone.translatable\',\n         )\n         fti.model_source = u"""\\\n <model xmlns="http://namespaces.plone.org/supermodel/schema">\ndiff --git a/src/plone/app/multilingual/tests/test_lif.py b/src/plone/app/multilingual/tests/test_lif.py\nindex eb98925f..d3faf4f0 100644\n--- a/src/plone/app/multilingual/tests/test_lif.py\n+++ b/src/plone/app/multilingual/tests/test_lif.py\n@@ -35,9 +35,9 @@ def setUp(self):\n \n         fti = DexterityFTI(\'Feedback\')\n         fti.behaviors = (\n-            \'plone.app.dexterity.behaviors.metadata.IBasic\',\n-            \'plone.app.content.interfaces.INameFromTitle\',\n-            \'plone.app.multilingual.dx.interfaces.IDexterityTranslatable\',\n+            \'plone.basic\',\n+            \'plone.namefromtitle\',\n+            \'plone.translatable\',\n         )\n         fti.model_source = u"""\\\n <model xmlns="http://namespaces.plone.org/supermodel/schema"\n'

Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2019-05-07T15:54:10+02:00
Author: Markus Hilbert (iham) <markus.hilbert@iham.at>
Commit: https://github.com/plone/plone.app.multilingual/commit/f5a42cb5a0fb850fad15239533c8f2eb36d217eb

respect both behavior registrations.

Files changed:
M src/plone/app/multilingual/dx/schemaeditor.py

b"diff --git a/src/plone/app/multilingual/dx/schemaeditor.py b/src/plone/app/multilingual/dx/schemaeditor.py\nindex b6427835..e98aaed4 100644\n--- a/src/plone/app/multilingual/dx/schemaeditor.py\n+++ b/src/plone/app/multilingual/dx/schemaeditor.py\n@@ -52,9 +52,16 @@ def _write_languageindependent(self, value):\n # additional conditions pass:\n @adapter(ISchemaContext, IField)\n def get_li_schema(schema_context, field):\n-    behavior = 'plone.translatable'\n     fti = getattr(schema_context, 'fti', None)\n-    if fti and behavior in getattr(fti, 'behaviors', []):\n+    lang_behavior = set(\n+        (\n+            'plone.app.multilingual.dx.interfaces.IDexterityTranslatable',\n+            'plone.translatable',\n+        ),\n+    )\n+    fti_behaviors = set(getattr(fti, 'behaviors', []))\n+    import pdb; pdb.set_trace()\n+    if lang_behavior.intersection(fti_behaviors):\n         return IFieldLanguageIndependent\n \n \n"

Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2019-05-08T14:40:23+02:00
Author: Markus Hilbert (iham) <markus.hilbert@iham.at>
Commit: https://github.com/plone/plone.app.multilingual/commit/f7614735e2a292ce3f26c752d3fbb793866b9782

forgot a pdb; shame on me.

Files changed:
M src/plone/app/multilingual/dx/schemaeditor.py

b"diff --git a/src/plone/app/multilingual/dx/schemaeditor.py b/src/plone/app/multilingual/dx/schemaeditor.py\nindex e98aaed4..a431a6fe 100644\n--- a/src/plone/app/multilingual/dx/schemaeditor.py\n+++ b/src/plone/app/multilingual/dx/schemaeditor.py\n@@ -60,7 +60,6 @@ def get_li_schema(schema_context, field):\n         ),\n     )\n     fti_behaviors = set(getattr(fti, 'behaviors', []))\n-    import pdb; pdb.set_trace()\n     if lang_behavior.intersection(fti_behaviors):\n         return IFieldLanguageIndependent\n \n"

Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2019-05-08T15:31:59+02:00
Author: Markus Hilbert (iham) <markus.hilbert@iham.at>
Commit: https://github.com/plone/plone.app.multilingual/commit/9ccfd681a397e1a62815fbdbce599361b1c94b18

Merge pull request #346 from plone/issue_345

Setting named behavior instead of dotted on fti during install.

Files changed:
A news/345.bugfix
M src/plone/app/multilingual/browser/setup.py
M src/plone/app/multilingual/content/lif.py
M src/plone/app/multilingual/dx/schemaeditor.py
M src/plone/app/multilingual/setuphandlers.py
M src/plone/app/multilingual/testing.py
M src/plone/app/multilingual/tests/test_lif.py

b'diff --git a/news/345.bugfix b/news/345.bugfix\nnew file mode 100644\nindex 00000000..947348a3\n--- /dev/null\n+++ b/news/345.bugfix\n@@ -0,0 +1 @@\n+Setting named behavior instead of dotted on fti during install. [iham]\n\\ No newline at end of file\ndiff --git a/src/plone/app/multilingual/browser/setup.py b/src/plone/app/multilingual/browser/setup.py\nindex 558c4ea7..76808f13 100644\n--- a/src/plone/app/multilingual/browser/setup.py\n+++ b/src/plone/app/multilingual/browser/setup.py\n@@ -281,6 +281,6 @@ def ensure_translatable(self, type_):\n \n         if IDexterityFTI.providedBy(fti):\n             behaviors = list(fti.behaviors)\n-            behaviors.append(IDexterityTranslatable.__identifier__)\n+            behaviors.append(\'plone.translatable\')\n             behaviors = tuple(set(behaviors))\n             fti._updateProperty(\'behaviors\', behaviors)\ndiff --git a/src/plone/app/multilingual/content/lif.py b/src/plone/app/multilingual/content/lif.py\nindex e78ad21f..3b265b4b 100644\n--- a/src/plone/app/multilingual/content/lif.py\n+++ b/src/plone/app/multilingual/content/lif.py\n@@ -3,6 +3,8 @@\n from Products.CMFCore.utils import getToolByName\n from zope.component.hooks import getSite\n \n+from plone.dexterity.content import Container\n+\n \n def connect_with_others(ob, event):\n     pc = getToolByName(getSite(), \'portal_catalog\')\ndiff --git a/src/plone/app/multilingual/dx/schemaeditor.py b/src/plone/app/multilingual/dx/schemaeditor.py\nindex 823eee4c..a431a6fe 100644\n--- a/src/plone/app/multilingual/dx/schemaeditor.py\n+++ b/src/plone/app/multilingual/dx/schemaeditor.py\n@@ -52,9 +52,15 @@ def _write_languageindependent(self, value):\n # additional conditions pass:\n @adapter(ISchemaContext, IField)\n def get_li_schema(schema_context, field):\n-    behavior = \'plone.app.multilingual.dx.interfaces.IDexterityTranslatable\'\n     fti = getattr(schema_context, \'fti\', None)\n-    if fti and behavior in getattr(fti, \'behaviors\', []):\n+    lang_behavior = set(\n+        (\n+            \'plone.app.multilingual.dx.interfaces.IDexterityTranslatable\',\n+            \'plone.translatable\',\n+        ),\n+    )\n+    fti_behaviors = set(getattr(fti, \'behaviors\', []))\n+    if lang_behavior.intersection(fti_behaviors):\n         return IFieldLanguageIndependent\n \n \ndiff --git a/src/plone/app/multilingual/setuphandlers.py b/src/plone/app/multilingual/setuphandlers.py\nindex 56406645..2b559632 100644\n--- a/src/plone/app/multilingual/setuphandlers.py\n+++ b/src/plone/app/multilingual/setuphandlers.py\n@@ -54,7 +54,7 @@ def enable_translatable_behavior(portal):\n         # Enable translatable behavior for all types\n         behaviors = list(fti.behaviors)\n         behaviors.extend([\n-            \'plone.app.multilingual.dx.interfaces.IDexterityTranslatable\',\n+            \'plone.translatable\',\n         ])\n         behaviors = tuple(set(behaviors))\n         fti._updateProperty(\'behaviors\', behaviors)\n@@ -81,7 +81,7 @@ def disable_translatable_behavior(portal):\n         # Disable translatable behavior from all types\n         behaviors = [\n             i for i in fti.behaviors if i !=\n-            \'plone.app.multilingual.dx.interfaces.IDexterityTranslatable\'\n+            \'plone.translatable\'\n         ]\n         fti._updateProperty(\'behaviors\', behaviors)\n \ndiff --git a/src/plone/app/multilingual/testing.py b/src/plone/app/multilingual/testing.py\nindex deeb7c6c..c04eceed 100644\n--- a/src/plone/app/multilingual/testing.py\n+++ b/src/plone/app/multilingual/testing.py\n@@ -167,8 +167,8 @@ def create_content_type(self, portal_type):\n         disableCSRFProtection()\n         fti = DexterityFTI(str(portal_type), title=portal_type)\n         fti.behaviors = (\n-            \'plone.app.dexterity.behaviors.metadata.IBasic\',\n-            \'plone.app.multilingual.dx.interfaces.IDexterityTranslatable\'\n+            \'plone.basic\',\n+            \'plone.translatable\',\n         )\n         fti.model_source = u"""\\\n <model xmlns="http://namespaces.plone.org/supermodel/schema">\ndiff --git a/src/plone/app/multilingual/tests/test_lif.py b/src/plone/app/multilingual/tests/test_lif.py\nindex eb98925f..d3faf4f0 100644\n--- a/src/plone/app/multilingual/tests/test_lif.py\n+++ b/src/plone/app/multilingual/tests/test_lif.py\n@@ -35,9 +35,9 @@ def setUp(self):\n \n         fti = DexterityFTI(\'Feedback\')\n         fti.behaviors = (\n-            \'plone.app.dexterity.behaviors.metadata.IBasic\',\n-            \'plone.app.content.interfaces.INameFromTitle\',\n-            \'plone.app.multilingual.dx.interfaces.IDexterityTranslatable\',\n+            \'plone.basic\',\n+            \'plone.namefromtitle\',\n+            \'plone.translatable\',\n         )\n         fti.model_source = u"""\\\n <model xmlns="http://namespaces.plone.org/supermodel/schema"\n'

