Repository: plone.restapi


Branch: refs/heads/master
Date: 2021-09-16T14:22:51+02:00
Author: Ã‰rico Andrei (ericof) <ericof@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/32792d1a9f8437a6c54b887253bb0a6a9f177188

Closes #1228: return if a type is immediately addable in the context.

Files changed:
A news/1228.feature
M src/plone/restapi/services/types/get.py
M src/plone/restapi/tests/http-examples/expansion_expanded_full.resp
M src/plone/restapi/tests/http-examples/translated_messages_types.resp
M src/plone/restapi/tests/http-examples/types.resp
M src/plone/restapi/tests/http-examples/workingcopy_baseline_get.resp
M src/plone/restapi/tests/test_expansion.py
M src/plone/restapi/tests/test_services_types.py

b'diff --git a/news/1228.feature b/news/1228.feature\nnew file mode 100644\nindex 000000000..879eb2871\n--- /dev/null\n+++ b/news/1228.feature\n@@ -0,0 +1,2 @@\n+@types endpoint also returns if a content type is immediately addable in the given context\n+[ericof]\n\\ No newline at end of file\ndiff --git a/src/plone/restapi/services/types/get.py b/src/plone/restapi/services/types/get.py\nindex 508793dd1..eeea75868 100644\n--- a/src/plone/restapi/services/types/get.py\n+++ b/src/plone/restapi/services/types/get.py\n@@ -7,6 +7,7 @@\n from plone.restapi.types.utils import get_info_for_fieldset\n from Products.CMFCore.interfaces import IFolderish\n from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone.interfaces import IConstrainTypes\n from zExceptions import Unauthorized\n from zope.component import adapter\n from zope.component import getMultiAdapter, queryMultiAdapter\n@@ -45,9 +46,14 @@ def __call__(self, expand=False):\n         )\n \n         portal_types = getToolByName(self.context, "portal_types")\n-\n         # allowedContentTypes already checks for permissions\n-        allowed_types = [x.getId() for x in self.context.allowedContentTypes()]\n+        constrains = IConstrainTypes(self.context, None)\n+        if constrains:\n+            allowed_types = constrains.getLocallyAllowedTypes()\n+            immediately_types = constrains.getImmediatelyAddableTypes()\n+        else:\n+            allowed_types = [x.getId() for x in self.context.allowedContentTypes()]\n+            immediately_types = allowed_types\n \n         portal = getMultiAdapter(\n             (self.context, self.request), name="plone_portal_state"\n@@ -67,6 +73,9 @@ def __call__(self, expand=False):\n                 "@id": f"{portal_url}/@types/{fti.getId()}",\n                 "title": translate(fti.Title(), context=self.request),\n                 "addable": fti.getId() in allowed_types if can_add else False,\n+                "immediately_addable": fti.getId() in immediately_types\n+                if can_add\n+                else False,\n             }\n             for fti in ftis\n         ]\ndiff --git a/src/plone/restapi/tests/http-examples/expansion_expanded_full.resp b/src/plone/restapi/tests/http-examples/expansion_expanded_full.resp\nindex b449a76cf..2b9b6a821 100644\n--- a/src/plone/restapi/tests/http-examples/expansion_expanded_full.resp\n+++ b/src/plone/restapi/tests/http-examples/expansion_expanded_full.resp\n@@ -142,46 +142,55 @@ Content-Type: application/json\n             {\n                 "@id": "http://localhost:55001/plone/@types/Collection",\n                 "addable": false,\n+                "immediately_addable": false,\n                 "title": "Collection"\n             },\n             {\n                 "@id": "http://localhost:55001/plone/@types/DXTestDocument",\n                 "addable": false,\n+                "immediately_addable": false,\n                 "title": "DX Test Document"\n             },\n             {\n                 "@id": "http://localhost:55001/plone/@types/Event",\n                 "addable": false,\n+                "immediately_addable": false,\n                 "title": "Event"\n             },\n             {\n                 "@id": "http://localhost:55001/plone/@types/File",\n                 "addable": false,\n+                "immediately_addable": false,\n                 "title": "File"\n             },\n             {\n                 "@id": "http://localhost:55001/plone/@types/Folder",\n                 "addable": false,\n+                "immediately_addable": false,\n                 "title": "Folder"\n             },\n             {\n                 "@id": "http://localhost:55001/plone/@types/Image",\n                 "addable": false,\n+                "immediately_addable": false,\n                 "title": "Image"\n             },\n             {\n                 "@id": "http://localhost:55001/plone/@types/Link",\n                 "addable": false,\n+                "immediately_addable": false,\n                 "title": "Link"\n             },\n             {\n                 "@id": "http://localhost:55001/plone/@types/News Item",\n                 "addable": false,\n+                "immediately_addable": false,\n                 "title": "News Item"\n             },\n             {\n                 "@id": "http://localhost:55001/plone/@types/Document",\n                 "addable": false,\n+                "immediately_addable": false,\n                 "title": "Page"\n             }\n         ],\ndiff --git a/src/plone/restapi/tests/http-examples/translated_messages_types.resp b/src/plone/restapi/tests/http-examples/translated_messages_types.resp\nindex 6fc8cd39a..0f31bddf7 100644\n--- a/src/plone/restapi/tests/http-examples/translated_messages_types.resp\n+++ b/src/plone/restapi/tests/http-examples/translated_messages_types.resp\n@@ -5,46 +5,55 @@ Content-Type: application/json\n     {\n         "@id": "http://localhost:55001/plone/@types/File",\n         "addable": true,\n+        "immediately_addable": true,\n         "title": "Archivo"\n     },\n     {\n         "@id": "http://localhost:55001/plone/@types/Folder",\n         "addable": true,\n+        "immediately_addable": true,\n         "title": "Carpeta"\n     },\n     {\n         "@id": "http://localhost:55001/plone/@types/Collection",\n         "addable": true,\n+        "immediately_addable": true,\n         "title": "Colecci\\u00f3n"\n     },\n     {\n         "@id": "http://localhost:55001/plone/@types/DXTestDocument",\n         "addable": true,\n+        "immediately_addable": true,\n         "title": "DX Test Document"\n     },\n     {\n         "@id": "http://localhost:55001/plone/@types/Link",\n         "addable": true,\n+        "immediately_addable": true,\n         "title": "Enlace"\n     },\n     {\n         "@id": "http://localhost:55001/plone/@types/Event",\n         "addable": true,\n+        "immediately_addable": true,\n         "title": "Evento"\n     },\n     {\n         "@id": "http://localhost:55001/plone/@types/Image",\n         "addable": true,\n+        "immediately_addable": true,\n         "title": "Imagen"\n     },\n     {\n         "@id": "http://localhost:55001/plone/@types/News Item",\n         "addable": true,\n+        "immediately_addable": true,\n         "title": "Noticia"\n     },\n     {\n         "@id": "http://localhost:55001/plone/@types/Document",\n         "addable": true,\n+        "immediately_addable": true,\n         "title": "P\\u00e1gina"\n     }\n ]\ndiff --git a/src/plone/restapi/tests/http-examples/types.resp b/src/plone/restapi/tests/http-examples/types.resp\nindex f8578ed1c..5f19b2fd1 100644\n--- a/src/plone/restapi/tests/http-examples/types.resp\n+++ b/src/plone/restapi/tests/http-examples/types.resp\n@@ -5,46 +5,55 @@ Content-Type: application/json\n     {\n         "@id": "http://localhost:55001/plone/@types/Collection",\n         "addable": true,\n+        "immediately_addable": true,\n         "title": "Collection"\n     },\n     {\n         "@id": "http://localhost:55001/plone/@types/DXTestDocument",\n         "addable": true,\n+        "immediately_addable": true,\n         "title": "DX Test Document"\n     },\n     {\n         "@id": "http://localhost:55001/plone/@types/Event",\n         "addable": true,\n+        "immediately_addable": true,\n         "title": "Event"\n     },\n     {\n         "@id": "http://localhost:55001/plone/@types/File",\n         "addable": true,\n+        "immediately_addable": true,\n         "title": "File"\n     },\n     {\n         "@id": "http://localhost:55001/plone/@types/Folder",\n         "addable": true,\n+        "immediately_addable": true,\n         "title": "Folder"\n     },\n     {\n         "@id": "http://localhost:55001/plone/@types/Image",\n         "addable": true,\n+        "immediately_addable": true,\n         "title": "Image"\n     },\n     {\n         "@id": "http://localhost:55001/plone/@types/Link",\n         "addable": true,\n+        "immediately_addable": true,\n         "title": "Link"\n     },\n     {\n         "@id": "http://localhost:55001/plone/@types/News Item",\n         "addable": true,\n+        "immediately_addable": true,\n         "title": "News Item"\n     },\n     {\n         "@id": "http://localhost:55001/plone/@types/Document",\n         "addable": true,\n+        "immediately_addable": true,\n         "title": "Page"\n     }\n ]\ndiff --git a/src/plone/restapi/tests/http-examples/workingcopy_baseline_get.resp b/src/plone/restapi/tests/http-examples/workingcopy_baseline_get.resp\nindex 683549cf9..60387b328 100644\n--- a/src/plone/restapi/tests/http-examples/workingcopy_baseline_get.resp\n+++ b/src/plone/restapi/tests/http-examples/workingcopy_baseline_get.resp\n@@ -40,7 +40,7 @@ Content-Type: application/json\n     "language": "",\n     "layout": "document_view",\n     "lock": {\n-        "created": "1995-07-31T17:30:00",\n+        "created": "1995-07-31T19:30:00",\n         "creator": "admin",\n         "creator_name": "admin",\n         "creator_url": "http://localhost:55001/plone/author/admin",\ndiff --git a/src/plone/restapi/tests/test_expansion.py b/src/plone/restapi/tests/test_expansion.py\nindex f633ed0dd..cb39caeab 100644\n--- a/src/plone/restapi/tests/test_expansion.py\n+++ b/src/plone/restapi/tests/test_expansion.py\n@@ -286,46 +286,55 @@ def test_types_expanded(self):\n                 {\n                     "@id": "/".join((base_url, "@types/Collection")),\n                     "addable": True,\n+                    "immediately_addable": True,\n                     "title": "Collection",\n                 },\n                 {\n                     "@id": "/".join((base_url, "@types/DXTestDocument")),\n                     "addable": True,\n+                    "immediately_addable": True,\n                     "title": "DX Test Document",\n                 },\n                 {\n                     "@id": "/".join((base_url, "@types/Event")),\n                     "addable": True,\n+                    "immediately_addable": True,\n                     "title": "Event",\n                 },\n                 {\n                     "@id": "/".join((base_url, "@types/File")),\n                     "addable": True,\n+                    "immediately_addable": True,\n                     "title": "File",\n                 },\n                 {\n                     "@id": "/".join((base_url, "@types/Folder")),\n                     "addable": True,\n+                    "immediately_addable": True,\n                     "title": "Folder",\n                 },\n                 {\n                     "@id": "/".join((base_url, "@types/Image")),\n                     "addable": True,\n+                    "immediately_addable": True,\n                     "title": "Image",\n                 },\n                 {\n                     "@id": "/".join((base_url, "@types/Link")),\n                     "addable": True,\n+                    "immediately_addable": True,\n                     "title": "Link",\n                 },\n                 {\n                     "@id": "/".join((base_url, "@types/News Item")),\n                     "addable": True,\n+                    "immediately_addable": True,\n                     "title": "News Item",\n                 },\n                 {\n                     "@id": "/".join((base_url, "@types/Document")),\n                     "addable": True,\n+                    "immediately_addable": True,\n                     "title": "Page",\n                 },\n             ],\ndiff --git a/src/plone/restapi/tests/test_services_types.py b/src/plone/restapi/tests/test_services_types.py\nindex 0c5959f35..ab4b7a7fd 100644\n--- a/src/plone/restapi/tests/test_services_types.py\n+++ b/src/plone/restapi/tests/test_services_types.py\n@@ -1,10 +1,12 @@\n from plone import api\n+from plone.app.dexterity.behaviors import constrains\n from plone.app.testing import setRoles\n from plone.app.testing import SITE_OWNER_NAME\n from plone.app.testing import SITE_OWNER_PASSWORD\n from plone.app.testing import TEST_USER_ID\n from plone.restapi.testing import PLONE_RESTAPI_DX_FUNCTIONAL_TESTING\n from plone.restapi.testing import RelativeSession\n+from Products.CMFPlone.interfaces.constrains import ISelectableConstrainTypes\n \n import transaction\n import unittest\n@@ -77,7 +79,9 @@ def test_get_types(self):\n             + \'"{}"\'.format(response.headers.get("Content-Type")),\n         )\n         for item in response.json():\n-            self.assertEqual(sorted(item), sorted(["@id", "title", "addable"]))\n+            self.assertEqual(\n+                sorted(item), sorted(["@id", "title", "addable", "immediately_addable"])\n+            )\n \n     def test_get_types_document(self):\n         response = self.api_session.get(f"{self.portal.absolute_url()}/@types/Document")\n@@ -540,6 +544,28 @@ def test_addable_types_for_non_manager_user(self):\n \n         self.assertEqual(len([a for a in response if a["addable"]]), 0)\n \n+    def test_contextual_constrains(self):\n+        content = api.content.create(\n+            container=self.portal,\n+            id="images",\n+            type="Folder",\n+            title="Image Bank",\n+        )\n+        # Enable the ISelectableConstrainTypes behavior\n+        behavior = ISelectableConstrainTypes(content)\n+        behavior.setConstrainTypesMode(constrains.ENABLED)\n+        # Allow only Image and File to be added\n+        behavior.setLocallyAllowedTypes(["Image", "File"])\n+        # Only Images are immediately addable\n+        behavior.setImmediatelyAddableTypes(["Image"])\n+        transaction.commit()\n+\n+        #\n+        response = self.api_session.get("/images/@types")\n+        response = response.json()\n+        self.assertEqual(len([a for a in response if a["immediately_addable"]]), 1)\n+        self.assertEqual(len([a for a in response if a["addable"]]), 2)\n+\n \n class TestServicesTypesTranslatedTitles(unittest.TestCase):\n \n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2021-09-16T15:18:11+02:00
Author: Ã‰rico Andrei (ericof) <ericof@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/2bc6910f3cf8bc856c6138d8e1828e7d87b4c765

Fix documentation.

Files changed:
M src/plone/restapi/tests/http-examples/workingcopy_baseline_get.resp

b'diff --git a/src/plone/restapi/tests/http-examples/workingcopy_baseline_get.resp b/src/plone/restapi/tests/http-examples/workingcopy_baseline_get.resp\nindex 60387b328..683549cf9 100644\n--- a/src/plone/restapi/tests/http-examples/workingcopy_baseline_get.resp\n+++ b/src/plone/restapi/tests/http-examples/workingcopy_baseline_get.resp\n@@ -40,7 +40,7 @@ Content-Type: application/json\n     "language": "",\n     "layout": "document_view",\n     "lock": {\n-        "created": "1995-07-31T19:30:00",\n+        "created": "1995-07-31T17:30:00",\n         "creator": "admin",\n         "creator_name": "admin",\n         "creator_url": "http://localhost:55001/plone/author/admin",\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2021-09-16T16:23:35+02:00
Author: Ã‰rico Andrei (ericof) <ericof@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/6d3f27afceaf7355ae8152d9b28ece815945b7ef

Merge pull request #1229 from plone/issue-1228-support-constraints

@types endpoint: Return if a type is immediately addable in the context

Files changed:
A news/1228.feature
M src/plone/restapi/services/types/get.py
M src/plone/restapi/tests/http-examples/expansion_expanded_full.resp
M src/plone/restapi/tests/http-examples/translated_messages_types.resp
M src/plone/restapi/tests/http-examples/types.resp
M src/plone/restapi/tests/test_expansion.py
M src/plone/restapi/tests/test_services_types.py

b'diff --git a/news/1228.feature b/news/1228.feature\nnew file mode 100644\nindex 000000000..879eb2871\n--- /dev/null\n+++ b/news/1228.feature\n@@ -0,0 +1,2 @@\n+@types endpoint also returns if a content type is immediately addable in the given context\n+[ericof]\n\\ No newline at end of file\ndiff --git a/src/plone/restapi/services/types/get.py b/src/plone/restapi/services/types/get.py\nindex 508793dd1..eeea75868 100644\n--- a/src/plone/restapi/services/types/get.py\n+++ b/src/plone/restapi/services/types/get.py\n@@ -7,6 +7,7 @@\n from plone.restapi.types.utils import get_info_for_fieldset\n from Products.CMFCore.interfaces import IFolderish\n from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone.interfaces import IConstrainTypes\n from zExceptions import Unauthorized\n from zope.component import adapter\n from zope.component import getMultiAdapter, queryMultiAdapter\n@@ -45,9 +46,14 @@ def __call__(self, expand=False):\n         )\n \n         portal_types = getToolByName(self.context, "portal_types")\n-\n         # allowedContentTypes already checks for permissions\n-        allowed_types = [x.getId() for x in self.context.allowedContentTypes()]\n+        constrains = IConstrainTypes(self.context, None)\n+        if constrains:\n+            allowed_types = constrains.getLocallyAllowedTypes()\n+            immediately_types = constrains.getImmediatelyAddableTypes()\n+        else:\n+            allowed_types = [x.getId() for x in self.context.allowedContentTypes()]\n+            immediately_types = allowed_types\n \n         portal = getMultiAdapter(\n             (self.context, self.request), name="plone_portal_state"\n@@ -67,6 +73,9 @@ def __call__(self, expand=False):\n                 "@id": f"{portal_url}/@types/{fti.getId()}",\n                 "title": translate(fti.Title(), context=self.request),\n                 "addable": fti.getId() in allowed_types if can_add else False,\n+                "immediately_addable": fti.getId() in immediately_types\n+                if can_add\n+                else False,\n             }\n             for fti in ftis\n         ]\ndiff --git a/src/plone/restapi/tests/http-examples/expansion_expanded_full.resp b/src/plone/restapi/tests/http-examples/expansion_expanded_full.resp\nindex b449a76cf..2b9b6a821 100644\n--- a/src/plone/restapi/tests/http-examples/expansion_expanded_full.resp\n+++ b/src/plone/restapi/tests/http-examples/expansion_expanded_full.resp\n@@ -142,46 +142,55 @@ Content-Type: application/json\n             {\n                 "@id": "http://localhost:55001/plone/@types/Collection",\n                 "addable": false,\n+                "immediately_addable": false,\n                 "title": "Collection"\n             },\n             {\n                 "@id": "http://localhost:55001/plone/@types/DXTestDocument",\n                 "addable": false,\n+                "immediately_addable": false,\n                 "title": "DX Test Document"\n             },\n             {\n                 "@id": "http://localhost:55001/plone/@types/Event",\n                 "addable": false,\n+                "immediately_addable": false,\n                 "title": "Event"\n             },\n             {\n                 "@id": "http://localhost:55001/plone/@types/File",\n                 "addable": false,\n+                "immediately_addable": false,\n                 "title": "File"\n             },\n             {\n                 "@id": "http://localhost:55001/plone/@types/Folder",\n                 "addable": false,\n+                "immediately_addable": false,\n                 "title": "Folder"\n             },\n             {\n                 "@id": "http://localhost:55001/plone/@types/Image",\n                 "addable": false,\n+                "immediately_addable": false,\n                 "title": "Image"\n             },\n             {\n                 "@id": "http://localhost:55001/plone/@types/Link",\n                 "addable": false,\n+                "immediately_addable": false,\n                 "title": "Link"\n             },\n             {\n                 "@id": "http://localhost:55001/plone/@types/News Item",\n                 "addable": false,\n+                "immediately_addable": false,\n                 "title": "News Item"\n             },\n             {\n                 "@id": "http://localhost:55001/plone/@types/Document",\n                 "addable": false,\n+                "immediately_addable": false,\n                 "title": "Page"\n             }\n         ],\ndiff --git a/src/plone/restapi/tests/http-examples/translated_messages_types.resp b/src/plone/restapi/tests/http-examples/translated_messages_types.resp\nindex 6fc8cd39a..0f31bddf7 100644\n--- a/src/plone/restapi/tests/http-examples/translated_messages_types.resp\n+++ b/src/plone/restapi/tests/http-examples/translated_messages_types.resp\n@@ -5,46 +5,55 @@ Content-Type: application/json\n     {\n         "@id": "http://localhost:55001/plone/@types/File",\n         "addable": true,\n+        "immediately_addable": true,\n         "title": "Archivo"\n     },\n     {\n         "@id": "http://localhost:55001/plone/@types/Folder",\n         "addable": true,\n+        "immediately_addable": true,\n         "title": "Carpeta"\n     },\n     {\n         "@id": "http://localhost:55001/plone/@types/Collection",\n         "addable": true,\n+        "immediately_addable": true,\n         "title": "Colecci\\u00f3n"\n     },\n     {\n         "@id": "http://localhost:55001/plone/@types/DXTestDocument",\n         "addable": true,\n+        "immediately_addable": true,\n         "title": "DX Test Document"\n     },\n     {\n         "@id": "http://localhost:55001/plone/@types/Link",\n         "addable": true,\n+        "immediately_addable": true,\n         "title": "Enlace"\n     },\n     {\n         "@id": "http://localhost:55001/plone/@types/Event",\n         "addable": true,\n+        "immediately_addable": true,\n         "title": "Evento"\n     },\n     {\n         "@id": "http://localhost:55001/plone/@types/Image",\n         "addable": true,\n+        "immediately_addable": true,\n         "title": "Imagen"\n     },\n     {\n         "@id": "http://localhost:55001/plone/@types/News Item",\n         "addable": true,\n+        "immediately_addable": true,\n         "title": "Noticia"\n     },\n     {\n         "@id": "http://localhost:55001/plone/@types/Document",\n         "addable": true,\n+        "immediately_addable": true,\n         "title": "P\\u00e1gina"\n     }\n ]\ndiff --git a/src/plone/restapi/tests/http-examples/types.resp b/src/plone/restapi/tests/http-examples/types.resp\nindex f8578ed1c..5f19b2fd1 100644\n--- a/src/plone/restapi/tests/http-examples/types.resp\n+++ b/src/plone/restapi/tests/http-examples/types.resp\n@@ -5,46 +5,55 @@ Content-Type: application/json\n     {\n         "@id": "http://localhost:55001/plone/@types/Collection",\n         "addable": true,\n+        "immediately_addable": true,\n         "title": "Collection"\n     },\n     {\n         "@id": "http://localhost:55001/plone/@types/DXTestDocument",\n         "addable": true,\n+        "immediately_addable": true,\n         "title": "DX Test Document"\n     },\n     {\n         "@id": "http://localhost:55001/plone/@types/Event",\n         "addable": true,\n+        "immediately_addable": true,\n         "title": "Event"\n     },\n     {\n         "@id": "http://localhost:55001/plone/@types/File",\n         "addable": true,\n+        "immediately_addable": true,\n         "title": "File"\n     },\n     {\n         "@id": "http://localhost:55001/plone/@types/Folder",\n         "addable": true,\n+        "immediately_addable": true,\n         "title": "Folder"\n     },\n     {\n         "@id": "http://localhost:55001/plone/@types/Image",\n         "addable": true,\n+        "immediately_addable": true,\n         "title": "Image"\n     },\n     {\n         "@id": "http://localhost:55001/plone/@types/Link",\n         "addable": true,\n+        "immediately_addable": true,\n         "title": "Link"\n     },\n     {\n         "@id": "http://localhost:55001/plone/@types/News Item",\n         "addable": true,\n+        "immediately_addable": true,\n         "title": "News Item"\n     },\n     {\n         "@id": "http://localhost:55001/plone/@types/Document",\n         "addable": true,\n+        "immediately_addable": true,\n         "title": "Page"\n     }\n ]\ndiff --git a/src/plone/restapi/tests/test_expansion.py b/src/plone/restapi/tests/test_expansion.py\nindex f633ed0dd..cb39caeab 100644\n--- a/src/plone/restapi/tests/test_expansion.py\n+++ b/src/plone/restapi/tests/test_expansion.py\n@@ -286,46 +286,55 @@ def test_types_expanded(self):\n                 {\n                     "@id": "/".join((base_url, "@types/Collection")),\n                     "addable": True,\n+                    "immediately_addable": True,\n                     "title": "Collection",\n                 },\n                 {\n                     "@id": "/".join((base_url, "@types/DXTestDocument")),\n                     "addable": True,\n+                    "immediately_addable": True,\n                     "title": "DX Test Document",\n                 },\n                 {\n                     "@id": "/".join((base_url, "@types/Event")),\n                     "addable": True,\n+                    "immediately_addable": True,\n                     "title": "Event",\n                 },\n                 {\n                     "@id": "/".join((base_url, "@types/File")),\n                     "addable": True,\n+                    "immediately_addable": True,\n                     "title": "File",\n                 },\n                 {\n                     "@id": "/".join((base_url, "@types/Folder")),\n                     "addable": True,\n+                    "immediately_addable": True,\n                     "title": "Folder",\n                 },\n                 {\n                     "@id": "/".join((base_url, "@types/Image")),\n                     "addable": True,\n+                    "immediately_addable": True,\n                     "title": "Image",\n                 },\n                 {\n                     "@id": "/".join((base_url, "@types/Link")),\n                     "addable": True,\n+                    "immediately_addable": True,\n                     "title": "Link",\n                 },\n                 {\n                     "@id": "/".join((base_url, "@types/News Item")),\n                     "addable": True,\n+                    "immediately_addable": True,\n                     "title": "News Item",\n                 },\n                 {\n                     "@id": "/".join((base_url, "@types/Document")),\n                     "addable": True,\n+                    "immediately_addable": True,\n                     "title": "Page",\n                 },\n             ],\ndiff --git a/src/plone/restapi/tests/test_services_types.py b/src/plone/restapi/tests/test_services_types.py\nindex 0c5959f35..ab4b7a7fd 100644\n--- a/src/plone/restapi/tests/test_services_types.py\n+++ b/src/plone/restapi/tests/test_services_types.py\n@@ -1,10 +1,12 @@\n from plone import api\n+from plone.app.dexterity.behaviors import constrains\n from plone.app.testing import setRoles\n from plone.app.testing import SITE_OWNER_NAME\n from plone.app.testing import SITE_OWNER_PASSWORD\n from plone.app.testing import TEST_USER_ID\n from plone.restapi.testing import PLONE_RESTAPI_DX_FUNCTIONAL_TESTING\n from plone.restapi.testing import RelativeSession\n+from Products.CMFPlone.interfaces.constrains import ISelectableConstrainTypes\n \n import transaction\n import unittest\n@@ -77,7 +79,9 @@ def test_get_types(self):\n             + \'"{}"\'.format(response.headers.get("Content-Type")),\n         )\n         for item in response.json():\n-            self.assertEqual(sorted(item), sorted(["@id", "title", "addable"]))\n+            self.assertEqual(\n+                sorted(item), sorted(["@id", "title", "addable", "immediately_addable"])\n+            )\n \n     def test_get_types_document(self):\n         response = self.api_session.get(f"{self.portal.absolute_url()}/@types/Document")\n@@ -540,6 +544,28 @@ def test_addable_types_for_non_manager_user(self):\n \n         self.assertEqual(len([a for a in response if a["addable"]]), 0)\n \n+    def test_contextual_constrains(self):\n+        content = api.content.create(\n+            container=self.portal,\n+            id="images",\n+            type="Folder",\n+            title="Image Bank",\n+        )\n+        # Enable the ISelectableConstrainTypes behavior\n+        behavior = ISelectableConstrainTypes(content)\n+        behavior.setConstrainTypesMode(constrains.ENABLED)\n+        # Allow only Image and File to be added\n+        behavior.setLocallyAllowedTypes(["Image", "File"])\n+        # Only Images are immediately addable\n+        behavior.setImmediatelyAddableTypes(["Image"])\n+        transaction.commit()\n+\n+        #\n+        response = self.api_session.get("/images/@types")\n+        response = response.json()\n+        self.assertEqual(len([a for a in response if a["immediately_addable"]]), 1)\n+        self.assertEqual(len([a for a in response if a["addable"]]), 2)\n+\n \n class TestServicesTypesTranslatedTitles(unittest.TestCase):\n \n'

