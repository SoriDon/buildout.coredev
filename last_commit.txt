Repository: Products.ATContentTypes


Branch: refs/heads/master
Date: 2018-10-06T12:17:56+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.ATContentTypes/commit/086d90e712150569bd02090e62b57cd3b4d920a6

Use check_id function from CMFPlone.utils.

Files changed:
A news/60.bugfix
M Products/ATContentTypes/content/base.py

b"diff --git a/Products/ATContentTypes/content/base.py b/Products/ATContentTypes/content/base.py\nindex 9f4bb595..d5fb7034 100644\n--- a/Products/ATContentTypes/content/base.py\n+++ b/Products/ATContentTypes/content/base.py\n@@ -17,6 +17,7 @@\n from Products.CMFCore.permissions import View\n from Products.CMFCore.utils import getToolByName\n from Products.CMFDynamicViewFTI.browserdefault import BrowserDefaultMixin\n+from Products.CMFPlone.utils import check_id\n from webdav.Lockable import ResourceLockedError\n from webdav.NullResource import NullResource\n from webdav.Resource import Resource as WebdavResoure\n@@ -382,18 +383,13 @@ def post_validate(self, REQUEST=None, errors=None):\n             # Set ID in whatever way the base classes usually do.\n             return\n \n-        if getattr(self, 'check_id', None) is not None:\n-            check_id = self.check_id(used_id, required=1)\n-        else:\n-            # If check_id is not available just look for conflicting ids\n-            parent = aq_parent(aq_inner(self))\n-            check_id = used_id in parent and \\\n-                'Id %s conflicts with an existing item' % used_id or False\n-        if check_id and used_id == id:\n-            errors['id'] = check_id\n-            REQUEST.form['id'] = used_id\n-        elif check_id:\n-            errors[f_name] = check_id\n+        check_id_result = check_id(self, used_id, required=1)\n+        if check_id_result:\n+            if used_id == id:\n+                errors['id'] = check_id_result\n+                REQUEST.form['id'] = used_id\n+            else:\n+                errors[f_name] = check_id_result\n \n     @security.private\n     def manage_afterPUT(self, data, marshall_data, file, context, mimetype,\ndiff --git a/news/60.bugfix b/news/60.bugfix\nnew file mode 100644\nindex 00000000..95463ae6\n--- /dev/null\n+++ b/news/60.bugfix\n@@ -0,0 +1 @@\n+Use new utils.check_id from CMFPlone.  [maurits]\n"

Repository: Products.ATContentTypes


Branch: refs/heads/master
Date: 2018-10-22T21:22:54+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.ATContentTypes/commit/6e28978bfb87aa99b35294a630d5e9d9c65724d8

Merge pull request #61 from plone/use-check-id-function

Use check_id function from CMFPlone.utils. [master/5.2]

Files changed:
A news/60.bugfix
M Products/ATContentTypes/content/base.py

b"diff --git a/Products/ATContentTypes/content/base.py b/Products/ATContentTypes/content/base.py\nindex 9f4bb595..d5fb7034 100644\n--- a/Products/ATContentTypes/content/base.py\n+++ b/Products/ATContentTypes/content/base.py\n@@ -17,6 +17,7 @@\n from Products.CMFCore.permissions import View\n from Products.CMFCore.utils import getToolByName\n from Products.CMFDynamicViewFTI.browserdefault import BrowserDefaultMixin\n+from Products.CMFPlone.utils import check_id\n from webdav.Lockable import ResourceLockedError\n from webdav.NullResource import NullResource\n from webdav.Resource import Resource as WebdavResoure\n@@ -382,18 +383,13 @@ def post_validate(self, REQUEST=None, errors=None):\n             # Set ID in whatever way the base classes usually do.\n             return\n \n-        if getattr(self, 'check_id', None) is not None:\n-            check_id = self.check_id(used_id, required=1)\n-        else:\n-            # If check_id is not available just look for conflicting ids\n-            parent = aq_parent(aq_inner(self))\n-            check_id = used_id in parent and \\\n-                'Id %s conflicts with an existing item' % used_id or False\n-        if check_id and used_id == id:\n-            errors['id'] = check_id\n-            REQUEST.form['id'] = used_id\n-        elif check_id:\n-            errors[f_name] = check_id\n+        check_id_result = check_id(self, used_id, required=1)\n+        if check_id_result:\n+            if used_id == id:\n+                errors['id'] = check_id_result\n+                REQUEST.form['id'] = used_id\n+            else:\n+                errors[f_name] = check_id_result\n \n     @security.private\n     def manage_afterPUT(self, data, marshall_data, file, context, mimetype,\ndiff --git a/news/60.bugfix b/news/60.bugfix\nnew file mode 100644\nindex 00000000..95463ae6\n--- /dev/null\n+++ b/news/60.bugfix\n@@ -0,0 +1 @@\n+Use new utils.check_id from CMFPlone.  [maurits]\n"

