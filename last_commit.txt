Repository: plone.scale


Branch: refs/heads/master
Date: 2017-02-28T15:15:17+01:00
Author: Florian Schulze (fschulze) <florian.schulze@gmx.net>
Commit: https://github.com/plone/plone.scale/commit/429c0e4fb363f6090a0d1be02ab9b7dc59a3fd40

Add dependency which most likely got lost when other zope dependencies were refactored to reduce the number of dependencies.

Files changed:
M setup.py

diff --git a/setup.py b/setup.py
index 66a7dab..aa91535 100644
--- a/setup.py
+++ b/setup.py
@@ -9,6 +9,7 @@
 STORAGE_REQUIREMENTS = [
     'zope.annotation',
     'zope.component',
+    'zope.configuration',
     'zope.interface',
     'Persistence',
 ]


Repository: plone.scale


Branch: refs/heads/master
Date: 2017-02-28T16:18:27+01:00
Author: Florian Schulze (fschulze) <florian.schulze@gmx.net>
Commit: https://github.com/plone/plone.scale/commit/0cf80287af13794b02e464435fdc80807ffe6e44

Preserve color profile in scaled images.

Files changed:
A plone/scale/tests/data/profile.jpg
M CHANGES.rst
M plone/scale/scale.py
M plone/scale/tests/test_scale.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 0b07a65..0c12894 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -15,7 +15,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Preserve color profile in scaled images.
+  [fschulze]
 
 
 2.1 (2016-11-01)
diff --git a/plone/scale/scale.py b/plone/scale/scale.py
index 4f674c6..1c20239 100644
--- a/plone/scale/scale.py
+++ b/plone/scale/scale.py
@@ -48,6 +48,7 @@ def scaleImage(image, width=None, height=None, direction='down',
         # GIF scaled looks better if we have 8-bit alpha and no palette
         format_ = 'PNG'
 
+    icc_profile = image.info.get('icc_profile')
     image = scalePILImage(image, width, height, direction)
 
     # convert to simpler mode if possible
@@ -68,7 +69,8 @@ def scaleImage(image, width=None, height=None, direction='down',
         format_,
         quality=quality,
         optimize=True,
-        progressive=True
+        progressive=True,
+        icc_profile=icc_profile
     )
 
     if new_result:
diff --git a/plone/scale/tests/data/profile.jpg b/plone/scale/tests/data/profile.jpg
new file mode 100644
index 0000000..39823b7
Binary files /dev/null and b/plone/scale/tests/data/profile.jpg differ
diff --git a/plone/scale/tests/test_scale.py b/plone/scale/tests/test_scale.py
index 20a9101..843b64d 100644
--- a/plone/scale/tests/test_scale.py
+++ b/plone/scale/tests/test_scale.py
@@ -12,6 +12,7 @@
 GIF = open(os.path.join(TEST_DATA_LOCATION, "logo.gif")).read()
 TIFF = open(os.path.join(TEST_DATA_LOCATION, "logo.tiff")).read()
 CMYK = open(os.path.join(TEST_DATA_LOCATION, "cmyk.jpg")).read()
+PROFILE = open(os.path.join(TEST_DATA_LOCATION, "profile.jpg")).read()
 
 
 class ScalingTests(TestCase):
@@ -40,6 +41,12 @@ def testScaledCMYKIsRGB(self):
     def testScaledPngImageIsPng(self):
         self.assertEqual(scaleImage(PNG, 84, 103, "down")[1], "PNG")
 
+    def testScaledPreservesProfile(self):
+        (imagedata, format, size) = scaleImage(PROFILE, 42, 51, "down")
+        input = StringIO(imagedata)
+        image = PIL.Image.open(input)
+        self.assertIsNotNone(image.info.get('icc_profile'))
+
     def testSameSizeDownScale(self):
         self.assertEqual(scaleImage(PNG, 84, 103, "down")[2], (84, 103))
 


Repository: plone.scale


Branch: refs/heads/master
Date: 2017-02-28T17:43:32+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.scale/commit/a2871cc803ef50b829a6ae78c7e33c5a66dac86c

Merge pull request #23 from fschulze/color-profile

Preserve color profile in scaled images

Files changed:
A plone/scale/tests/data/profile.jpg
M CHANGES.rst
M plone/scale/scale.py
M plone/scale/tests/test_scale.py
M setup.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 0b07a65..0c12894 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -15,7 +15,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Preserve color profile in scaled images.
+  [fschulze]
 
 
 2.1 (2016-11-01)
diff --git a/plone/scale/scale.py b/plone/scale/scale.py
index 4f674c6..1c20239 100644
--- a/plone/scale/scale.py
+++ b/plone/scale/scale.py
@@ -48,6 +48,7 @@ def scaleImage(image, width=None, height=None, direction='down',
         # GIF scaled looks better if we have 8-bit alpha and no palette
         format_ = 'PNG'
 
+    icc_profile = image.info.get('icc_profile')
     image = scalePILImage(image, width, height, direction)
 
     # convert to simpler mode if possible
@@ -68,7 +69,8 @@ def scaleImage(image, width=None, height=None, direction='down',
         format_,
         quality=quality,
         optimize=True,
-        progressive=True
+        progressive=True,
+        icc_profile=icc_profile
     )
 
     if new_result:
diff --git a/plone/scale/tests/data/profile.jpg b/plone/scale/tests/data/profile.jpg
new file mode 100644
index 0000000..39823b7
Binary files /dev/null and b/plone/scale/tests/data/profile.jpg differ
diff --git a/plone/scale/tests/test_scale.py b/plone/scale/tests/test_scale.py
index 20a9101..843b64d 100644
--- a/plone/scale/tests/test_scale.py
+++ b/plone/scale/tests/test_scale.py
@@ -12,6 +12,7 @@
 GIF = open(os.path.join(TEST_DATA_LOCATION, "logo.gif")).read()
 TIFF = open(os.path.join(TEST_DATA_LOCATION, "logo.tiff")).read()
 CMYK = open(os.path.join(TEST_DATA_LOCATION, "cmyk.jpg")).read()
+PROFILE = open(os.path.join(TEST_DATA_LOCATION, "profile.jpg")).read()
 
 
 class ScalingTests(TestCase):
@@ -40,6 +41,12 @@ def testScaledCMYKIsRGB(self):
     def testScaledPngImageIsPng(self):
         self.assertEqual(scaleImage(PNG, 84, 103, "down")[1], "PNG")
 
+    def testScaledPreservesProfile(self):
+        (imagedata, format, size) = scaleImage(PROFILE, 42, 51, "down")
+        input = StringIO(imagedata)
+        image = PIL.Image.open(input)
+        self.assertIsNotNone(image.info.get('icc_profile'))
+
     def testSameSizeDownScale(self):
         self.assertEqual(scaleImage(PNG, 84, 103, "down")[2], (84, 103))
 
diff --git a/setup.py b/setup.py
index 66a7dab..aa91535 100644
--- a/setup.py
+++ b/setup.py
@@ -9,6 +9,7 @@
 STORAGE_REQUIREMENTS = [
     'zope.annotation',
     'zope.component',
+    'zope.configuration',
     'zope.interface',
     'Persistence',
 ]


