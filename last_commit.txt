Repository: mockup


Branch: refs/heads/master
Date: 2017-02-24T17:52:52+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/mockup/commit/6a16dcd0b372343109f9c1490dd845cf290ed10c

fix datepicker markup, see plone/Products.CMFPlone#1953

Files changed:
M CHANGES.rst
M mockup/patterns/pickadate/pattern.js
M mockup/patterns/pickadate/pattern.pickadate.less
M mockup/tests/pattern-pickadate-test.js

diff --git a/CHANGES.rst b/CHANGES.rst
index d964144..fe9ad20 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- fix datepicker markup, see plone/Products.CMFPlone#1953 - removes also ugly separator and uses CSS to add space.
+  [jensens]
 
 
 2.4.0 (2017-02-20)
diff --git a/mockup/patterns/pickadate/pattern.js b/mockup/patterns/pickadate/pattern.js
index dfc8ff4..84cc26d 100644
--- a/mockup/patterns/pickadate/pattern.js
+++ b/mockup/patterns/pickadate/pattern.js
@@ -244,14 +244,6 @@ define([
               }));
       }
 
-      if (self.options.date !== false && self.options.time !== false) {
-        self.$separator = $('<span/>')
-              .addClass(self.options.classSeparatorName)
-              .html(self.options.separator === ' ' ? '&nbsp;'
-                                                   : self.options.separator)
-              .appendTo(self.$wrapper);
-      }
-
       if (self.options.time !== false) {
         self.options.time.formatSubmit = 'HH:i';
         self.$time = $('<input type="text"/>')
diff --git a/mockup/patterns/pickadate/pattern.pickadate.less b/mockup/patterns/pickadate/pattern.pickadate.less
index 349ae9c..3756fdf 100644
--- a/mockup/patterns/pickadate/pattern.pickadate.less
+++ b/mockup/patterns/pickadate/pattern.pickadate.less
@@ -6,7 +6,10 @@
 
 .pattern-pickadate-wrapper {
 
-  .btn:extend(.btn all){}
+  .btn:extend(.btn all){
+    vertical-align: top;
+    margin: 0.2em
+  }
   .btn-info:extend(.btn-info all){}
   .btn-danger:extend(.btn-danger all){}
 
@@ -25,7 +28,7 @@
     vertical-align: middle;
     .picker__input {
       width: 300px;
-      margin-bottom: 0.2em;
+      margin: 0.2em;
       text-align: center;
       cursor: context-menu;
     }
@@ -48,7 +51,7 @@
     vertical-align: middle;
     .picker__input {
       width: 180px;
-      margin-bottom: 0.2em;
+      margin: 0.2em;
       text-align: center;
       cursor: context-menu;
     }
@@ -70,20 +73,16 @@
 
   .pattern-pickadate-now {
     display: inline-block;
-    vertical-align: middle;
-    margin-left: 1em;
   }
 
   .pattern-pickadate-clear {
     display: inline-block;
-    vertical-align: middle;
-    margin-left: 0.5em;
   }
 
   .picker__select--month, .picker__select--year {
     height: 3em;
   }
-  
+
   .picker__footer {
     display: none;
   }
diff --git a/mockup/tests/pattern-pickadate-test.js b/mockup/tests/pattern-pickadate-test.js
index d46cfd7..75652e5 100644
--- a/mockup/tests/pattern-pickadate-test.js
+++ b/mockup/tests/pattern-pickadate-test.js
@@ -110,17 +110,6 @@ define([
 
     });
 
-    it('date and time element have custom separator', function() {
-      var self = this;
-
-      $('.pat-pickadate', self.$el).attr('data-pat-pickadate', 'separator:===');
-
-      // scan dom for patterns
-      registry.scan(self.$el);
-
-      expect($('.pattern-pickadate-separator', self.$el).text()).to.be.equal('===');
-    });
-
     it('date and time picker except custom settings', function() {
       var self = this;
 
@@ -435,13 +424,13 @@ define([
         expect($('.pattern-pickadate-timezone').data('select2')._enabled).to.equal(false);
         expect($('.select2-container-disabled').size()).to.equal(1);
       });
-    
+
     });
 
     describe('automatically set the time on changing the date', function() {
 
       it('parseTimeOffset works as expected', function() {
-       
+
         var pickadate = new PickADate(this.$el, {});
 
         // test false/true
@@ -450,7 +439,7 @@ define([
 
         // test setting straight to time
         expect(pickadate.parseTimeOffset('[12, 34]')).to.eql([12,34]);
-        
+
         // test adding / substracting
         expect(pickadate.parseTimeOffset('+[1, 10]')).to.eql([16,40]);
         expect(pickadate.parseTimeOffset('-[1, 10]')).to.eql([14,20]);
@@ -468,7 +457,7 @@ define([
         expect(pickadate.parseTimeOffset('[10,20]')).to.eql([10,20]);
         expect(pickadate.parseTimeOffset('[10,"aha"]')).to.eql([10,0]);
         expect(pickadate.parseTimeOffset('["who", 20]')).to.eql([0,20]);
-              
+
       });
 
       it('sets the time when date is changed per default', function() {
@@ -561,11 +550,11 @@ define([
 
         // first, it's unset
         expect($('.pat-pickadate', $el).val()).to.be.equal("");
-        
+
         // now set it to now.
         $('.pattern-pickadate-now', $el).click();
         expect($('.pat-pickadate', $el).val()).to.be.equal("2017-01-23 15:30");
- 
+
         // now clear it.
         $('.pattern-pickadate-clear', $el).click();
         expect($('.pat-pickadate', $el).val()).to.be.equal("");
@@ -577,11 +566,11 @@ define([
 
         // first, it's unset
         expect($('.pat-pickadate', $el).val()).to.be.equal("");
-        
+
         // now set it to now.
         $('.pattern-pickadate-now', $el).click();
         expect($('.pat-pickadate', $el).val()).to.be.equal("15:30");
- 
+
         // now clear it.
         $('.pattern-pickadate-clear', $el).click();
         expect($('.pat-pickadate', $el).val()).to.be.equal("");
@@ -593,11 +582,11 @@ define([
 
         // first, it's unset
         expect($('.pat-pickadate', $el).val()).to.be.equal("");
-        
+
         // now set it to now.
         $('.pattern-pickadate-now', $el).click();
         expect($('.pat-pickadate', $el).val()).to.be.equal("2017-01-23");
- 
+
         // now clear it.
         $('.pattern-pickadate-clear', $el).click();
         expect($('.pat-pickadate', $el).val()).to.be.equal("");


Repository: mockup


Branch: refs/heads/master
Date: 2017-02-27T11:32:41+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/mockup/commit/2d6b11563ea1e5c6068213d389de3fd5cfb47997

Merge pull request #744 from plone/fix-datepicker-style

fix datepicker markup

Files changed:
M CHANGES.rst
M mockup/patterns/pickadate/pattern.js
M mockup/patterns/pickadate/pattern.pickadate.less
M mockup/tests/pattern-pickadate-test.js

diff --git a/CHANGES.rst b/CHANGES.rst
index d964144..fe9ad20 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- fix datepicker markup, see plone/Products.CMFPlone#1953 - removes also ugly separator and uses CSS to add space.
+  [jensens]
 
 
 2.4.0 (2017-02-20)
diff --git a/mockup/patterns/pickadate/pattern.js b/mockup/patterns/pickadate/pattern.js
index dfc8ff4..84cc26d 100644
--- a/mockup/patterns/pickadate/pattern.js
+++ b/mockup/patterns/pickadate/pattern.js
@@ -244,14 +244,6 @@ define([
               }));
       }
 
-      if (self.options.date !== false && self.options.time !== false) {
-        self.$separator = $('<span/>')
-              .addClass(self.options.classSeparatorName)
-              .html(self.options.separator === ' ' ? '&nbsp;'
-                                                   : self.options.separator)
-              .appendTo(self.$wrapper);
-      }
-
       if (self.options.time !== false) {
         self.options.time.formatSubmit = 'HH:i';
         self.$time = $('<input type="text"/>')
diff --git a/mockup/patterns/pickadate/pattern.pickadate.less b/mockup/patterns/pickadate/pattern.pickadate.less
index 349ae9c..3756fdf 100644
--- a/mockup/patterns/pickadate/pattern.pickadate.less
+++ b/mockup/patterns/pickadate/pattern.pickadate.less
@@ -6,7 +6,10 @@
 
 .pattern-pickadate-wrapper {
 
-  .btn:extend(.btn all){}
+  .btn:extend(.btn all){
+    vertical-align: top;
+    margin: 0.2em
+  }
   .btn-info:extend(.btn-info all){}
   .btn-danger:extend(.btn-danger all){}
 
@@ -25,7 +28,7 @@
     vertical-align: middle;
     .picker__input {
       width: 300px;
-      margin-bottom: 0.2em;
+      margin: 0.2em;
       text-align: center;
       cursor: context-menu;
     }
@@ -48,7 +51,7 @@
     vertical-align: middle;
     .picker__input {
       width: 180px;
-      margin-bottom: 0.2em;
+      margin: 0.2em;
       text-align: center;
       cursor: context-menu;
     }
@@ -70,20 +73,16 @@
 
   .pattern-pickadate-now {
     display: inline-block;
-    vertical-align: middle;
-    margin-left: 1em;
   }
 
   .pattern-pickadate-clear {
     display: inline-block;
-    vertical-align: middle;
-    margin-left: 0.5em;
   }
 
   .picker__select--month, .picker__select--year {
     height: 3em;
   }
-  
+
   .picker__footer {
     display: none;
   }
diff --git a/mockup/tests/pattern-pickadate-test.js b/mockup/tests/pattern-pickadate-test.js
index d46cfd7..75652e5 100644
--- a/mockup/tests/pattern-pickadate-test.js
+++ b/mockup/tests/pattern-pickadate-test.js
@@ -110,17 +110,6 @@ define([
 
     });
 
-    it('date and time element have custom separator', function() {
-      var self = this;
-
-      $('.pat-pickadate', self.$el).attr('data-pat-pickadate', 'separator:===');
-
-      // scan dom for patterns
-      registry.scan(self.$el);
-
-      expect($('.pattern-pickadate-separator', self.$el).text()).to.be.equal('===');
-    });
-
     it('date and time picker except custom settings', function() {
       var self = this;
 
@@ -435,13 +424,13 @@ define([
         expect($('.pattern-pickadate-timezone').data('select2')._enabled).to.equal(false);
         expect($('.select2-container-disabled').size()).to.equal(1);
       });
-    
+
     });
 
     describe('automatically set the time on changing the date', function() {
 
       it('parseTimeOffset works as expected', function() {
-       
+
         var pickadate = new PickADate(this.$el, {});
 
         // test false/true
@@ -450,7 +439,7 @@ define([
 
         // test setting straight to time
         expect(pickadate.parseTimeOffset('[12, 34]')).to.eql([12,34]);
-        
+
         // test adding / substracting
         expect(pickadate.parseTimeOffset('+[1, 10]')).to.eql([16,40]);
         expect(pickadate.parseTimeOffset('-[1, 10]')).to.eql([14,20]);
@@ -468,7 +457,7 @@ define([
         expect(pickadate.parseTimeOffset('[10,20]')).to.eql([10,20]);
         expect(pickadate.parseTimeOffset('[10,"aha"]')).to.eql([10,0]);
         expect(pickadate.parseTimeOffset('["who", 20]')).to.eql([0,20]);
-              
+
       });
 
       it('sets the time when date is changed per default', function() {
@@ -561,11 +550,11 @@ define([
 
         // first, it's unset
         expect($('.pat-pickadate', $el).val()).to.be.equal("");
-        
+
         // now set it to now.
         $('.pattern-pickadate-now', $el).click();
         expect($('.pat-pickadate', $el).val()).to.be.equal("2017-01-23 15:30");
- 
+
         // now clear it.
         $('.pattern-pickadate-clear', $el).click();
         expect($('.pat-pickadate', $el).val()).to.be.equal("");
@@ -577,11 +566,11 @@ define([
 
         // first, it's unset
         expect($('.pat-pickadate', $el).val()).to.be.equal("");
-        
+
         // now set it to now.
         $('.pattern-pickadate-now', $el).click();
         expect($('.pat-pickadate', $el).val()).to.be.equal("15:30");
- 
+
         // now clear it.
         $('.pattern-pickadate-clear', $el).click();
         expect($('.pat-pickadate', $el).val()).to.be.equal("");
@@ -593,11 +582,11 @@ define([
 
         // first, it's unset
         expect($('.pat-pickadate', $el).val()).to.be.equal("");
-        
+
         // now set it to now.
         $('.pattern-pickadate-now', $el).click();
         expect($('.pat-pickadate', $el).val()).to.be.equal("2017-01-23");
- 
+
         // now clear it.
         $('.pattern-pickadate-clear', $el).click();
         expect($('.pat-pickadate', $el).val()).to.be.equal("");


