Repository: plone.app.portlets


Branch: refs/heads/master
Date: 2018-10-03T14:57:29+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.portlets/commit/e02e76f341f6c42ae0baa71c501a56c534000f13

remove outdated test and somecleanup

Files changed:
M CHANGES.rst
M plone/app/portlets/tests/base.py
M plone/app/portlets/tests/testDoctests.py
D plone/app/portlets/tests/testViewName.rst

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 042e331..c698c68 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -45,6 +45,9 @@ Bug fixes:\n   away data values that does not come from the \'core\' schema.\n   [sunew]\n \n+- Remove an outdated test and some cleanup.\n+  [jensens]\n+\n \n 4.3.1 (2017-08-07)\n ------------------\ndiff --git a/plone/app/portlets/tests/base.py b/plone/app/portlets/tests/base.py\nindex dd9ad5f..b9b2ffb 100644\n--- a/plone/app/portlets/tests/base.py\n+++ b/plone/app/portlets/tests/base.py\n@@ -5,13 +5,12 @@\n products with Zope, and it sets up a sandbox Plone site with the appropriate\n products installed.\n """\n-\n-import unittest\n-\n-from Testing.ZopeTestCase import Functional\n from plone.app.portlets.testing import PLONE_APP_PORTLETS_INTEGRATION_TESTING\n from plone.app.testing import PLONE_FUNCTIONAL_TESTING\n from plone.testing.z2 import Browser\n+from Testing.ZopeTestCase import Functional\n+\n+import unittest\n \n \n class PortletsTestCase(unittest.TestCase):\ndiff --git a/plone/app/portlets/tests/testDoctests.py b/plone/app/portlets/tests/testDoctests.py\nindex 98c0fa6..b9da15e 100644\n--- a/plone/app/portlets/tests/testDoctests.py\n+++ b/plone/app/portlets/tests/testDoctests.py\n@@ -1,18 +1,20 @@\n # -*- coding: utf-8 -*-\n-import doctest\n+from plone.app.portlets.tests.base import PortletsFunctionalTestCase\n+from Testing.ZopeTestCase import FunctionalDocFileSuite\n from unittest import TestSuite\n \n-from Testing.ZopeTestCase import FunctionalDocFileSuite\n+import doctest\n \n-from plone.app.portlets.tests.base import PortletsFunctionalTestCase\n \n def test_suite():\n     suite = TestSuite()\n     OPTIONFLAGS = (doctest.ELLIPSIS | doctest.NORMALIZE_WHITESPACE)\n-    for testfile in (\'testViewName.rst\', \'testMemberDashboard.rst\'):\n-        suite.addTest(FunctionalDocFileSuite(testfile,\n-                                optionflags=OPTIONFLAGS,\n-                                package="plone.app.portlets.tests",\n-                                test_class=PortletsFunctionalTestCase),\n-                     )\n+    suite.addTest(\n+        FunctionalDocFileSuite(\n+            \'testMemberDashboard.rst\',\n+            optionflags=OPTIONFLAGS,\n+            package="plone.app.portlets.tests",\n+            test_class=PortletsFunctionalTestCase,\n+        ),\n+    )\n     return suite\ndiff --git a/plone/app/portlets/tests/testViewName.rst b/plone/app/portlets/tests/testViewName.rst\ndeleted file mode 100644\nindex d369b02..0000000\n--- a/plone/app/portlets/tests/testViewName.rst\n+++ /dev/null\n@@ -1,119 +0,0 @@\n-Setup::\n-\n-    >>> import re\n-    >>> from plone.app.portlets.browser.editmanager import DashboardEditPortletManagerRenderer\n-    >>> from plone.portlets.interfaces import IPortletType\n-    >>> from plone.portlets.interfaces import IPortletManager\n-    >>> from zope.component import getUtility\n-\n-\n-bug: 11409 test bits\n-----------------------\n-check the names for customized views are in place::\n-\n-    >>> portal.manage_permission(\'Portlets: Manage own portlets\', roles=[\'Manager\'], acquire=0)\n-    >>> portlet = getUtility(IPortletType, name=\'portlets.News\')\n-    >>> col = getUtility(IPortletManager, name=\'plone.dashboard1\')\n-    >>> view = portal.unrestrictedTraverse(\'@@manage-dashboard\')\n-    >>> renderer = DashboardEditPortletManagerRenderer(self.portal, self.portal.REQUEST, view, col)\n-    >>> renderer.view_name == u\'manage-dashboard\'\n-    True\n-\n-Now customize the manage dashboard view and check the name is in place too::\n-\n-    >>> browser = self.site_administrator_browser\n-    >>> browser.open(portal.absolute_url()+\'/portal_view_customizations/registrations.html\')\n-    >>> browser.getLink(\'manage-dashboard\').click()\n-    >>> managedashboard_template = """\n-    ... <html xmlns="http://www.w3.org/1999/xhtml"\n-    ...       xmlns:tal="http://xml.zope.org/namespaces/tal"\n-    ...       xmlns:metal="http://xml.zope.org/namespaces/metal"\n-    ...       xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n-    ...       xml:lang="en" lang="en"\n-    ...       metal:use-macro="context/main_template/macros/master"\n-    ...       i18n:domain="plone">\n-    ...\n-    ... <head>\n-    ...     <metal:block fill-slot="top_slot"\n-    ...                  tal:define="dummy python:request.set(\'disable_border\',1);\n-    ...                              disable_column_one python:request.set(\'disable_plone.leftcolumn\',1);\n-    ...                              disable_column_two python:request.set(\'disable_plone.rightcolumn\',1);" />\n-    ... </head>\n-    ... <body>\n-    ... <tal:comment replace="nothing">\n-    ...     Please note that this template fills the "content" slot instead of the\n-    ...     "main" slot, this is done so we can provide stuff like the content\n-    ...     tabs. This also means that we have to supply things that are normally\n-    ...     present from main_template.\n-    ... </tal:comment>\n-    ... <metal:main fill-slot="content"\n-    ...     tal:define="errors options/state/getErrors | nothing">\n-    ...     <tal:main-macro metal:define-macro="main">\n-    ...             <div id="edit-bar">\n-    ...                 <h5 class="hiddenStructure"\n-    ...                      i18n:translate="heading_content_views">Content views</h5>\n-    ...                 <ul id="content-views"\n-    ...                     class="contentViews">\n-    ...                   <li>\n-    ...                     <a href=""\n-    ...                        tal:attributes="href string:${context/@@plone_portal_state/navigation_root_url}/dashboard"\n-    ...                        i18n:translate="label_dashboard">Dashboard</a>\n-    ...                   </li>\n-    ...                   <li class="selected">\n-    ...                     <a href=""\n-    ...                        tal:attributes="href string:${context/@@plone_portal_state/navigation_root_url}/@@manage-dashboard"\n-    ...                        i18n:translate="label_edit">Edit</a>\n-    ...                   </li>\n-    ...                 </ul>\n-    ...\n-    ...                 <div class="contentActions">\n-    ...                   &nbsp;\n-    ...                 </div>\n-    ...             </div>\n-    ...             <div metal:use-macro="context/global_statusmessage/macros/portal_message">\n-    ...                 Portal status message\n-    ...             </div>\n-    ...             <div id="content">\n-    ...                 <h1 class="documentFirstHeading" i18n:translate="title_edit_dashboard">\n-    ...                     Edit your dashboard\n-    ...                 </h1>\n-    ...                 <div id="content-core">\n-    ...                     <div id="dashboard">\n-    ...                         <div id="dashboard-portlets1"\n-    ...                           tal:content="structure provider:plone.dashboard1" />\n-    ...                         <div id="dashboard-portlets2"\n-    ...                           tal:content="structure provider:plone.dashboard2" />\n-    ...                         <div id="dashboard-portlets3"\n-    ...                           tal:content="structure provider:plone.dashboard3" />\n-    ...                         <div id="dashboard-portlets4"\n-    ...                           tal:content="structure provider:plone.dashboard4" />\n-    ...                     </div>\n-    ...                     <div class="visualClear"><!-- --></div>\n-    ...                 </div>\n-    ...\n-    ...             </div>\n-    ...     </tal:main-macro>\n-    ... </metal:main>\n-    ... </body>\n-    ... </html>"""\n-    >>> browser.handleErrors = True\n-    >>> browser.getControl(\'Customize\').click()\n-    >>> browser.handleErrors = False\n-    >>> browser.getControl(name=\'text:text\').value = managedashboard_template\n-    >>> browser.getControl(\'Save Changes\').click()\n-\n-Add a portlet in the dashboard and try to delete it::\n-\n-    >>> browser.open(portal.absolute_url()+\'/dashboard\')\n-    >>> browser.getLink(\'Edit\').click()\n-    >>> browser.getControl(name=\':action\',index=0).value = [\'/++dashboard++plone.dashboard1+app/+/portlets.Search\']\n-    >>> browser.getForm(index=1).submit()\n-    >>> browser.getControl(\'Save\').click()  # This submits the now shown add form.\n-    >>> browser.open(portal.absolute_url()+\'/@@manage-dashboard\')\n-    >>> \'/search/edit\' in browser.contents\n-    True\n-    >>> browser.getControl(name="search-remove").click()\n-    >>> \'/search/edit\' in browser.contents\n-    False\n-\n-\n'

Repository: plone.app.portlets


Branch: refs/heads/master
Date: 2018-10-03T15:56:32+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.portlets/commit/9d4af4e477fc22f02c42ed49898b58e6b557617f

Merge pull request #118 from plone/test-cleanup

remove outdated test and somecleanup

Files changed:
M CHANGES.rst
M plone/app/portlets/tests/base.py
M plone/app/portlets/tests/testDoctests.py
D plone/app/portlets/tests/testViewName.rst

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 042e331..c698c68 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -45,6 +45,9 @@ Bug fixes:\n   away data values that does not come from the \'core\' schema.\n   [sunew]\n \n+- Remove an outdated test and some cleanup.\n+  [jensens]\n+\n \n 4.3.1 (2017-08-07)\n ------------------\ndiff --git a/plone/app/portlets/tests/base.py b/plone/app/portlets/tests/base.py\nindex dd9ad5f..b9b2ffb 100644\n--- a/plone/app/portlets/tests/base.py\n+++ b/plone/app/portlets/tests/base.py\n@@ -5,13 +5,12 @@\n products with Zope, and it sets up a sandbox Plone site with the appropriate\n products installed.\n """\n-\n-import unittest\n-\n-from Testing.ZopeTestCase import Functional\n from plone.app.portlets.testing import PLONE_APP_PORTLETS_INTEGRATION_TESTING\n from plone.app.testing import PLONE_FUNCTIONAL_TESTING\n from plone.testing.z2 import Browser\n+from Testing.ZopeTestCase import Functional\n+\n+import unittest\n \n \n class PortletsTestCase(unittest.TestCase):\ndiff --git a/plone/app/portlets/tests/testDoctests.py b/plone/app/portlets/tests/testDoctests.py\nindex 98c0fa6..b9da15e 100644\n--- a/plone/app/portlets/tests/testDoctests.py\n+++ b/plone/app/portlets/tests/testDoctests.py\n@@ -1,18 +1,20 @@\n # -*- coding: utf-8 -*-\n-import doctest\n+from plone.app.portlets.tests.base import PortletsFunctionalTestCase\n+from Testing.ZopeTestCase import FunctionalDocFileSuite\n from unittest import TestSuite\n \n-from Testing.ZopeTestCase import FunctionalDocFileSuite\n+import doctest\n \n-from plone.app.portlets.tests.base import PortletsFunctionalTestCase\n \n def test_suite():\n     suite = TestSuite()\n     OPTIONFLAGS = (doctest.ELLIPSIS | doctest.NORMALIZE_WHITESPACE)\n-    for testfile in (\'testViewName.rst\', \'testMemberDashboard.rst\'):\n-        suite.addTest(FunctionalDocFileSuite(testfile,\n-                                optionflags=OPTIONFLAGS,\n-                                package="plone.app.portlets.tests",\n-                                test_class=PortletsFunctionalTestCase),\n-                     )\n+    suite.addTest(\n+        FunctionalDocFileSuite(\n+            \'testMemberDashboard.rst\',\n+            optionflags=OPTIONFLAGS,\n+            package="plone.app.portlets.tests",\n+            test_class=PortletsFunctionalTestCase,\n+        ),\n+    )\n     return suite\ndiff --git a/plone/app/portlets/tests/testViewName.rst b/plone/app/portlets/tests/testViewName.rst\ndeleted file mode 100644\nindex d369b02..0000000\n--- a/plone/app/portlets/tests/testViewName.rst\n+++ /dev/null\n@@ -1,119 +0,0 @@\n-Setup::\n-\n-    >>> import re\n-    >>> from plone.app.portlets.browser.editmanager import DashboardEditPortletManagerRenderer\n-    >>> from plone.portlets.interfaces import IPortletType\n-    >>> from plone.portlets.interfaces import IPortletManager\n-    >>> from zope.component import getUtility\n-\n-\n-bug: 11409 test bits\n-----------------------\n-check the names for customized views are in place::\n-\n-    >>> portal.manage_permission(\'Portlets: Manage own portlets\', roles=[\'Manager\'], acquire=0)\n-    >>> portlet = getUtility(IPortletType, name=\'portlets.News\')\n-    >>> col = getUtility(IPortletManager, name=\'plone.dashboard1\')\n-    >>> view = portal.unrestrictedTraverse(\'@@manage-dashboard\')\n-    >>> renderer = DashboardEditPortletManagerRenderer(self.portal, self.portal.REQUEST, view, col)\n-    >>> renderer.view_name == u\'manage-dashboard\'\n-    True\n-\n-Now customize the manage dashboard view and check the name is in place too::\n-\n-    >>> browser = self.site_administrator_browser\n-    >>> browser.open(portal.absolute_url()+\'/portal_view_customizations/registrations.html\')\n-    >>> browser.getLink(\'manage-dashboard\').click()\n-    >>> managedashboard_template = """\n-    ... <html xmlns="http://www.w3.org/1999/xhtml"\n-    ...       xmlns:tal="http://xml.zope.org/namespaces/tal"\n-    ...       xmlns:metal="http://xml.zope.org/namespaces/metal"\n-    ...       xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n-    ...       xml:lang="en" lang="en"\n-    ...       metal:use-macro="context/main_template/macros/master"\n-    ...       i18n:domain="plone">\n-    ...\n-    ... <head>\n-    ...     <metal:block fill-slot="top_slot"\n-    ...                  tal:define="dummy python:request.set(\'disable_border\',1);\n-    ...                              disable_column_one python:request.set(\'disable_plone.leftcolumn\',1);\n-    ...                              disable_column_two python:request.set(\'disable_plone.rightcolumn\',1);" />\n-    ... </head>\n-    ... <body>\n-    ... <tal:comment replace="nothing">\n-    ...     Please note that this template fills the "content" slot instead of the\n-    ...     "main" slot, this is done so we can provide stuff like the content\n-    ...     tabs. This also means that we have to supply things that are normally\n-    ...     present from main_template.\n-    ... </tal:comment>\n-    ... <metal:main fill-slot="content"\n-    ...     tal:define="errors options/state/getErrors | nothing">\n-    ...     <tal:main-macro metal:define-macro="main">\n-    ...             <div id="edit-bar">\n-    ...                 <h5 class="hiddenStructure"\n-    ...                      i18n:translate="heading_content_views">Content views</h5>\n-    ...                 <ul id="content-views"\n-    ...                     class="contentViews">\n-    ...                   <li>\n-    ...                     <a href=""\n-    ...                        tal:attributes="href string:${context/@@plone_portal_state/navigation_root_url}/dashboard"\n-    ...                        i18n:translate="label_dashboard">Dashboard</a>\n-    ...                   </li>\n-    ...                   <li class="selected">\n-    ...                     <a href=""\n-    ...                        tal:attributes="href string:${context/@@plone_portal_state/navigation_root_url}/@@manage-dashboard"\n-    ...                        i18n:translate="label_edit">Edit</a>\n-    ...                   </li>\n-    ...                 </ul>\n-    ...\n-    ...                 <div class="contentActions">\n-    ...                   &nbsp;\n-    ...                 </div>\n-    ...             </div>\n-    ...             <div metal:use-macro="context/global_statusmessage/macros/portal_message">\n-    ...                 Portal status message\n-    ...             </div>\n-    ...             <div id="content">\n-    ...                 <h1 class="documentFirstHeading" i18n:translate="title_edit_dashboard">\n-    ...                     Edit your dashboard\n-    ...                 </h1>\n-    ...                 <div id="content-core">\n-    ...                     <div id="dashboard">\n-    ...                         <div id="dashboard-portlets1"\n-    ...                           tal:content="structure provider:plone.dashboard1" />\n-    ...                         <div id="dashboard-portlets2"\n-    ...                           tal:content="structure provider:plone.dashboard2" />\n-    ...                         <div id="dashboard-portlets3"\n-    ...                           tal:content="structure provider:plone.dashboard3" />\n-    ...                         <div id="dashboard-portlets4"\n-    ...                           tal:content="structure provider:plone.dashboard4" />\n-    ...                     </div>\n-    ...                     <div class="visualClear"><!-- --></div>\n-    ...                 </div>\n-    ...\n-    ...             </div>\n-    ...     </tal:main-macro>\n-    ... </metal:main>\n-    ... </body>\n-    ... </html>"""\n-    >>> browser.handleErrors = True\n-    >>> browser.getControl(\'Customize\').click()\n-    >>> browser.handleErrors = False\n-    >>> browser.getControl(name=\'text:text\').value = managedashboard_template\n-    >>> browser.getControl(\'Save Changes\').click()\n-\n-Add a portlet in the dashboard and try to delete it::\n-\n-    >>> browser.open(portal.absolute_url()+\'/dashboard\')\n-    >>> browser.getLink(\'Edit\').click()\n-    >>> browser.getControl(name=\':action\',index=0).value = [\'/++dashboard++plone.dashboard1+app/+/portlets.Search\']\n-    >>> browser.getForm(index=1).submit()\n-    >>> browser.getControl(\'Save\').click()  # This submits the now shown add form.\n-    >>> browser.open(portal.absolute_url()+\'/@@manage-dashboard\')\n-    >>> \'/search/edit\' in browser.contents\n-    True\n-    >>> browser.getControl(name="search-remove").click()\n-    >>> \'/search/edit\' in browser.contents\n-    False\n-\n-\n'

