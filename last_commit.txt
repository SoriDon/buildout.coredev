Repository: Products.PlonePAS


Branch: refs/heads/master
Date: 2018-10-03T23:02:38+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.PlonePAS/commit/7ae1f25fffc67ba2dd6e774219d950c8cf46dae4

Revert "re #1801: remove lookup of setAuthCookie script as a hook"

Files changed:
M CHANGES.rst
M setup.py
M src/Products/PlonePAS/plugins/cookie_handler.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 9cc89e8..f7f3733 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -40,11 +40,6 @@ Bug fixes:\n   Part of PloneHotfix20171128.\n   [maurits]\n \n-- Remove setAuthCookie script. #1801\n-  This used to be a hook to allow overriding the credentials update. The\n-  default override has been used as the new implementation.\n-  [tlotze]\n-\n \n 5.0.14 (2017-05-09)\n -------------------\ndiff --git a/setup.py b/setup.py\nindex 267ad54..b9c0785 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -10,18 +10,15 @@\n longdescription += open("CHANGES.rst").read()\n \n install_requires = [\n-        \'DateTime\',\n         \'plone.i18n\',\n         \'plone.memoize\',\n         \'plone.protect>=2.0.3\',\n-        \'plone.registry\',\n         \'plone.session\',\n         \'Products.CMFCore\',\n         \'Products.GenericSetup\',\n-        \'Products.PluggableAuthService>=2.0b2.dev0\',\n+        \'Products.PluggableAuthService\',\n         \'setuptools\',\n         \'six\',\n-        \'zope.component\',\n         \'zope.deprecation\',\n         \'Zope\',\n     ]\ndiff --git a/src/Products/PlonePAS/plugins/cookie_handler.py b/src/Products/PlonePAS/plugins/cookie_handler.py\nindex 2ff7b3c..e3103c3 100644\n--- a/src/Products/PlonePAS/plugins/cookie_handler.py\n+++ b/src/Products/PlonePAS/plugins/cookie_handler.py\n@@ -12,8 +12,7 @@\n from Acquisition import aq_parent\n from AccessControl.class_init import InitializeClass\n from App.special_dtml import DTMLFile\n-from DateTime import DateTime\n-from plone.registry.interfaces import IRegistry\n+from base64 import encodestring\n from Products.PluggableAuthService.interfaces.authservice import \\\n     IPluggableAuthService\n from Products.PluggableAuthService.interfaces.plugins \\\n@@ -28,7 +27,6 @@\n     import CookieAuthHelper as BasePlugin\n from six.moves.urllib.parse import quote\n from zope.interface import implementer\n-from zope.component import getUtility\n \n \n def manage_addExtendedCookieAuthHelper(self, id, title=\'\',\n@@ -69,16 +67,19 @@ class ExtendedCookieAuthHelper(BasePlugin):\n     def updateCredentials(self, request, response, login, new_password):\n         """Override standard updateCredentials method\n         """\n-        cookie_val = self.get_cookie_value(login, new_password)\n-        registry = getUtility(IRegistry)\n-        length = registry.get(\'plone.auth_cookie_length\', \'0\')\n-        try:\n-            length = int(length)\n-        except ValueError:\n-            length = 0\n-        expires = (DateTime() + length).toZone(\'GMT\').rfc822()\n-        response.setCookie(\n-            self.cookie_name, quote(cookie_val), path=\'/\', expires=expires)\n+\n+        setAuthCookie = getattr(self, \'setAuthCookie\', None)\n+        if setAuthCookie:\n+            cookie_str = b\':\'.join([\n+                login.encode(\'utf-8\'),\n+                new_password.encode(\'utf-8\'),\n+            ])\n+            cookie_val = encodestring(cookie_str)\n+            cookie_val = cookie_val.rstrip()\n+            setAuthCookie(response, self.cookie_name, quote(cookie_val))\n+        else:\n+            BasePlugin.updateCredentials(self, request, response, login,\n+                                         new_password)\n \n     @security.public\n     def login(self):\n'

