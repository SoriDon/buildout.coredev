Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2022-04-14T21:29:24+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.dexterity/commit/6755e6583cc83928b0fa921c8da4a5b2e8e852b1

Replaced use of plone.api.

That should not be done in Plone core.

Files changed:
A news/346.bugfix
M plone/app/dexterity/textindexer/converters.py

b'diff --git a/news/346.bugfix b/news/346.bugfix\nnew file mode 100644\nindex 0000000..a37009f\n--- /dev/null\n+++ b/news/346.bugfix\n@@ -0,0 +1,3 @@\n+Replaced use of ``plone.api``.\n+That should not be done in Plone core.\n+[maurits]\ndiff --git a/plone/app/dexterity/textindexer/converters.py b/plone/app/dexterity/textindexer/converters.py\nindex 437ecdf..e0e994f 100644\n--- a/plone/app/dexterity/textindexer/converters.py\n+++ b/plone/app/dexterity/textindexer/converters.py\n@@ -4,11 +4,11 @@\n converter only enabled when plone.namedfile is installed\n """\n \n-from plone import api\n from plone.app.dexterity.textindexer import interfaces\n from plone.app.textfield.interfaces import IRichText\n from plone.dexterity.interfaces import IDexterityContent\n from plone.namedfile.interfaces import INamedFileField\n+from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.utils import safe_unicode\n from z3c.form.interfaces import IWidget\n from ZODB.POSException import ConflictError\n@@ -40,7 +40,7 @@ def __init__(self, context, field, widget):\n     def convert(self):\n         """Convert the adapted field value to text/plain for indexing"""\n         html = self.widget.render().strip()\n-        transforms = api.portal.get_tool("portal_transforms")\n+        transforms = getToolByName(self.context, "portal_transforms")\n         stream = transforms.convertTo("text/plain", html, mimetype="text/html")\n         return stream.getData().strip()\n \n@@ -63,7 +63,7 @@ def convert(self):\n         if textvalue is None:\n             return ""\n         html = safe_unicode(textvalue.output)\n-        transforms = api.portal.get_tool("portal_transforms")\n+        transforms = getToolByName(self.context, "portal_transforms")\n         stream = transforms.convertTo("text/plain", html, mimetype=textvalue.mimeType)\n         return stream.getData().strip()\n \n@@ -87,7 +87,7 @@ def convert(self):\n             return data.data\n \n         # if there is no path to text/plain, do nothing\n-        transforms = api.portal.get_tool("portal_transforms")\n+        transforms = getToolByName(self.context, "portal_transforms")\n \n         # pylint: disable=W0212\n         # W0212: Access to a protected member _findPath of a client class\n'

Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2022-04-14T22:41:00+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.dexterity/commit/1f4374d3b3e5429faf3282644d986f564677080f

Merge pull request #346 from plone/maurits-no-plone-api

Replaced use of plone.api.

Files changed:
A news/346.bugfix
M plone/app/dexterity/textindexer/converters.py

b'diff --git a/news/346.bugfix b/news/346.bugfix\nnew file mode 100644\nindex 0000000..a37009f\n--- /dev/null\n+++ b/news/346.bugfix\n@@ -0,0 +1,3 @@\n+Replaced use of ``plone.api``.\n+That should not be done in Plone core.\n+[maurits]\ndiff --git a/plone/app/dexterity/textindexer/converters.py b/plone/app/dexterity/textindexer/converters.py\nindex 437ecdf..e0e994f 100644\n--- a/plone/app/dexterity/textindexer/converters.py\n+++ b/plone/app/dexterity/textindexer/converters.py\n@@ -4,11 +4,11 @@\n converter only enabled when plone.namedfile is installed\n """\n \n-from plone import api\n from plone.app.dexterity.textindexer import interfaces\n from plone.app.textfield.interfaces import IRichText\n from plone.dexterity.interfaces import IDexterityContent\n from plone.namedfile.interfaces import INamedFileField\n+from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.utils import safe_unicode\n from z3c.form.interfaces import IWidget\n from ZODB.POSException import ConflictError\n@@ -40,7 +40,7 @@ def __init__(self, context, field, widget):\n     def convert(self):\n         """Convert the adapted field value to text/plain for indexing"""\n         html = self.widget.render().strip()\n-        transforms = api.portal.get_tool("portal_transforms")\n+        transforms = getToolByName(self.context, "portal_transforms")\n         stream = transforms.convertTo("text/plain", html, mimetype="text/html")\n         return stream.getData().strip()\n \n@@ -63,7 +63,7 @@ def convert(self):\n         if textvalue is None:\n             return ""\n         html = safe_unicode(textvalue.output)\n-        transforms = api.portal.get_tool("portal_transforms")\n+        transforms = getToolByName(self.context, "portal_transforms")\n         stream = transforms.convertTo("text/plain", html, mimetype=textvalue.mimeType)\n         return stream.getData().strip()\n \n@@ -87,7 +87,7 @@ def convert(self):\n             return data.data\n \n         # if there is no path to text/plain, do nothing\n-        transforms = api.portal.get_tool("portal_transforms")\n+        transforms = getToolByName(self.context, "portal_transforms")\n \n         # pylint: disable=W0212\n         # W0212: Access to a protected member _findPath of a client class\n'

