Repository: plone.restapi


Branch: refs/heads/master
Date: 2021-12-26T19:22:30-08:00
Author: Ross Patterson (rpatterson) <me@rpatterson.net>
Commit: https://github.com/plone/plone.restapi/commit/fcacc31ab90ff72ae823fd2f6b091a2fd8a404fa

test(deprecation): Fix some warnings from our code

Resolve all the deprecation warnings that originate in this package's code that are
exposed by running the tests that do not stem from backwards compatibility we still
support.

IOW, warnings are still emitted that stem from code that needs to work with older
versions we still support and cannot be updated without breaking that backwards
compatibility.  It seems better to me to leave the warnings in place than litter our
code with BBB conditionals.

Files changed:
M src/plone/restapi/tests/test_serializer_converters.py
M src/plone/restapi/tests/test_services_workingcopy.py

b'diff --git a/src/plone/restapi/tests/test_serializer_converters.py b/src/plone/restapi/tests/test_serializer_converters.py\nindex d34147785..c3f7d8383 100644\n--- a/src/plone/restapi/tests/test_serializer_converters.py\n+++ b/src/plone/restapi/tests/test_serializer_converters.py\n@@ -29,10 +29,10 @@ def test_error_when_type_unknown(self):\n             + r" \\(<(class|type) \\\'object\\\'>\\) JSON compatible.$"\n         )\n \n-        with self.assertRaisesRegexp(TypeError, err_regex):\n+        with self.assertRaisesRegex(TypeError, err_regex):\n             json_compatible(object())\n \n-        with self.assertRaisesRegexp(TypeError, err_regex):\n+        with self.assertRaisesRegex(TypeError, err_regex):\n             json_compatible({"foo": [object()]})\n \n     def test_True(self):\ndiff --git a/src/plone/restapi/tests/test_services_workingcopy.py b/src/plone/restapi/tests/test_services_workingcopy.py\nindex 1f31d793b..e579046b4 100644\n--- a/src/plone/restapi/tests/test_services_workingcopy.py\n+++ b/src/plone/restapi/tests/test_services_workingcopy.py\n@@ -39,7 +39,7 @@ def test_workingcopy_checkout(self):\n         self.assertEqual(response.status_code, 201)\n         self.assertIn("@id", response.json())\n \n-        self.assertEquals(\n+        self.assertEqual(\n             response.json()["@id"],\n             f"{self.portal_url}/copy_of_document",\n         )\n@@ -58,15 +58,15 @@ def test_workingcopy_get(self):\n         )\n \n         self.assertEqual(response.status_code, 200)\n-        self.assertEquals(\n+        self.assertEqual(\n             response.json()["working_copy"]["@id"],\n             f"{self.portal_url}/copy_of_document",\n         )\n-        self.assertEquals(\n+        self.assertEqual(\n             response.json()["working_copy"]["creator_name"],\n             "admin",\n         )\n-        self.assertEquals(\n+        self.assertEqual(\n             response.json()["working_copy"]["creator_url"],\n             f"{self.portal_url}/author/admin",\n         )\n@@ -77,19 +77,19 @@ def test_workingcopy_get(self):\n         )\n \n         self.assertEqual(response.status_code, 200)\n-        self.assertEquals(\n+        self.assertEqual(\n             response.json()["working_copy_of"]["@id"],\n             f"{self.portal_url}/document",\n         )\n-        self.assertEquals(\n+        self.assertEqual(\n             response.json()["working_copy"]["@id"],\n             f"{self.portal_url}/copy_of_document",\n         )\n-        self.assertEquals(\n+        self.assertEqual(\n             response.json()["working_copy"]["creator_name"],\n             "admin",\n         )\n-        self.assertEquals(\n+        self.assertEqual(\n             response.json()["working_copy"]["creator_url"],\n             f"{self.portal_url}/author/admin",\n         )\n@@ -99,37 +99,37 @@ def test_workingcopy_get(self):\n             "/document",\n         )\n \n-        self.assertEquals(\n+        self.assertEqual(\n             response.json()["working_copy"]["@id"],\n             f"{self.portal_url}/copy_of_document",\n         )\n-        self.assertEquals(\n+        self.assertEqual(\n             response.json()["working_copy"]["creator_name"],\n             "admin",\n         )\n-        self.assertEquals(\n+        self.assertEqual(\n             response.json()["working_copy"]["creator_url"],\n             f"{self.portal_url}/author/admin",\n         )\n-        self.assertEquals(response.json()["working_copy_of"], None)\n+        self.assertEqual(response.json()["working_copy_of"], None)\n \n         # Serialization on the working copy object\n         response = self.api_session.get(\n             "/copy_of_document",\n         )\n-        self.assertEquals(\n+        self.assertEqual(\n             response.json()["working_copy_of"]["@id"],\n             f"{self.portal_url}/document",\n         )\n-        self.assertEquals(\n+        self.assertEqual(\n             response.json()["working_copy"]["@id"],\n             f"{self.portal_url}/copy_of_document",\n         )\n-        self.assertEquals(\n+        self.assertEqual(\n             response.json()["working_copy"]["creator_name"],\n             "admin",\n         )\n-        self.assertEquals(\n+        self.assertEqual(\n             response.json()["working_copy"]["creator_url"],\n             f"{self.portal_url}/author/admin",\n         )\n@@ -141,7 +141,7 @@ def test_workingcopy_notworkingcopy_get(self):\n         )\n         self.assertEqual(response.status_code, 200)\n \n-        self.assertEquals(\n+        self.assertEqual(\n             response.json()["working_copy_of"],\n             None,\n         )\n@@ -206,7 +206,7 @@ def test_workingcopy_patch_on_the_baseline(self):\n             "/document",\n         )\n         self.assertEqual(response.status_code, 200)\n-        self.assertEquals(response.json()["title"], "I just changed the title")\n+        self.assertEqual(response.json()["title"], "I just changed the title")\n \n     def test_workingcopy_patch_on_the_working_copy(self):\n         # We create the working copy\n@@ -230,4 +230,4 @@ def test_workingcopy_patch_on_the_working_copy(self):\n             "/document",\n         )\n         self.assertEqual(response.status_code, 200)\n-        self.assertEquals(response.json()["title"], "I just changed the title")\n+        self.assertEqual(response.json()["title"], "I just changed the title")\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2021-12-28T10:01:35-08:00
Author: Ross Patterson (rpatterson) <me@rpatterson.net>
Commit: https://github.com/plone/plone.restapi/commit/f209cf5efa8cc3cf10a3fc50e15d72c8e182364e

test(leak): Fix unclosed socket leaks

Fix or workaround `ResourceWarning: unclosed &lt;socket.socket ...&gt;` warnings when running
the tests.  Close the requests sessions at test cleanup time.

I don't understand why these are reported as leaks.  At least some of the instances I
spot-checked were reported as leaks *after* `response.json()` had been called.  AFAIK,
[`requests` should close the socket when it's been fully
read](https://docs.python-requests.org/en/latest/user/advanced/#body-content-workflow)
which should happen when parsing the JSON.

Regardless, I did confirm that these leaks were indeed coming from this package's use of
sessions so it's ours to workaround or fix.  I don't like the approach in this change in
that it places a testing concern inside the session class but I also think the root
issue here is how much test set up is repeated across the test modules.  It seemed
better to take the expedient approach for this issue and tackle the issue of refactoring
test set up separately.

With this change and the previous deprecations warnings change, the bulk of warnings
output while running the tests have been removed.  This means there's a *lot* less to
ignore in the test output and we should not be training ourselves to ignore test output.

Files changed:
A news/1302.bugfix
M src/plone/restapi/testing.py
M src/plone/restapi/tests/test_addons.py
M src/plone/restapi/tests/test_batching.py
M src/plone/restapi/tests/test_blocks_searchable_text.py
M src/plone/restapi/tests/test_content_blocks.py
M src/plone/restapi/tests/test_copymove.py
M src/plone/restapi/tests/test_documentation.py
M src/plone/restapi/tests/test_error_handling.py
M src/plone/restapi/tests/test_expansion.py
M src/plone/restapi/tests/test_functional_auth.py
M src/plone/restapi/tests/test_locking.py
M src/plone/restapi/tests/test_permissions.py
M src/plone/restapi/tests/test_registry.py
M src/plone/restapi/tests/test_roles.py
M src/plone/restapi/tests/test_search.py
M src/plone/restapi/tests/test_services.py
M src/plone/restapi/tests/test_services_actions.py
M src/plone/restapi/tests/test_services_breadcrumbs.py
M src/plone/restapi/tests/test_services_comments.py
M src/plone/restapi/tests/test_services_content.py
M src/plone/restapi/tests/test_services_contextnavigation.py
M src/plone/restapi/tests/test_services_controlpanel_dexterity_types.py
M src/plone/restapi/tests/test_services_controlpanels.py
M src/plone/restapi/tests/test_services_database.py
M src/plone/restapi/tests/test_services_email_notification.py
M src/plone/restapi/tests/test_services_email_send.py
M src/plone/restapi/tests/test_services_groups.py
M src/plone/restapi/tests/test_services_history.py
M src/plone/restapi/tests/test_services_navigation.py
M src/plone/restapi/tests/test_services_principals.py
M src/plone/restapi/tests/test_services_querysources.py
M src/plone/restapi/tests/test_services_querystring.py
M src/plone/restapi/tests/test_services_querystringsearch.py
M src/plone/restapi/tests/test_services_sources.py
M src/plone/restapi/tests/test_services_tiles.py
M src/plone/restapi/tests/test_services_types.py
M src/plone/restapi/tests/test_services_users.py
M src/plone/restapi/tests/test_services_vocabularies.py
M src/plone/restapi/tests/test_services_workingcopy.py
M src/plone/restapi/tests/test_site_serializer.py
M src/plone/restapi/tests/test_system.py
M src/plone/restapi/tests/test_tus.py

b'diff --git a/news/1302.bugfix b/news/1302.bugfix\nnew file mode 100644\nindex 000000000..bd20ae275\n--- /dev/null\n+++ b/news/1302.bugfix\n@@ -0,0 +1,3 @@\n+Resolve the bulk of deprecation and resource leak warnings when running the full test\n+suite.\n+[rpatterson]\ndiff --git a/src/plone/restapi/testing.py b/src/plone/restapi/testing.py\nindex 446610146..303eed97c 100644\n--- a/src/plone/restapi/testing.py\n+++ b/src/plone/restapi/testing.py\n@@ -253,12 +253,29 @@ class RelativeSession(requests.Session):\n     base if their URL is relative (doesn\'t begin with a HTTP[S] scheme).\n     """\n \n-    def __init__(self, base_url):\n+    def __init__(self, base_url, test=None):\n+        """\n+        Capture the base URL.  Optionally also capture a test case for cleanup.\n+\n+        Apparently, network sockets created by the `requests` library can remain open\n+        even after the full body of the response has been read, despite [the\n+        docs](https://docs.python-requests.org/en/latest/user/advanced/#body-content-workflow). In\n+        particular, this results in `ResourceWarning: unclosed <socket.socket ...>` leak\n+        warnings when running the tests.  If the `test` kwarg is passed, it will be used\n+        to register future cleanup calls to close this session and thus also the\n+        sockets. If passed, it must be an object with a `addCleanup(func)` callable\n+        attribute, such as instances of `unittest.TestCase`.\n+        """\n         super().__init__()\n+\n         if not base_url.endswith("/"):\n             base_url += "/"\n         self.__base_url = base_url\n \n+        if hasattr(test, "addCleanup"):\n+            # Avoid `ResourceWarning: unclosed <socket.socket ...>`\n+            test.addCleanup(self.close)\n+\n     def request(self, method, url, **kwargs):\n         if urlparse(url).scheme not in ("http", "https"):\n             url = url.lstrip("/")\ndiff --git a/src/plone/restapi/tests/test_addons.py b/src/plone/restapi/tests/test_addons.py\nindex 47149a491..9fd449e7e 100644\n--- a/src/plone/restapi/tests/test_addons.py\n+++ b/src/plone/restapi/tests/test_addons.py\n@@ -22,7 +22,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_batching.py b/src/plone/restapi/tests/test_batching.py\nindex 27c842238..810846298 100644\n--- a/src/plone/restapi/tests/test_batching.py\n+++ b/src/plone/restapi/tests/test_batching.py\n@@ -24,7 +24,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         self.request = self.portal.REQUEST\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_blocks_searchable_text.py b/src/plone/restapi/tests/test_blocks_searchable_text.py\nindex 9867a371c..e979dce99 100644\n--- a/src/plone/restapi/tests/test_blocks_searchable_text.py\n+++ b/src/plone/restapi/tests/test_blocks_searchable_text.py\n@@ -29,7 +29,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_content_blocks.py b/src/plone/restapi/tests/test_content_blocks.py\nindex e8915ad4b..0dbf2e235 100644\n--- a/src/plone/restapi/tests/test_content_blocks.py\n+++ b/src/plone/restapi/tests/test_content_blocks.py\n@@ -22,7 +22,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_copymove.py b/src/plone/restapi/tests/test_copymove.py\nindex 07edcb86c..0748c8be2 100644\n--- a/src/plone/restapi/tests/test_copymove.py\n+++ b/src/plone/restapi/tests/test_copymove.py\n@@ -82,7 +82,7 @@ def setUp(self):\n             email="memberuser@example.com", username="memberuser", password="secret"\n         )\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_documentation.py b/src/plone/restapi/tests/test_documentation.py\nindex f98578ff8..fe6d391de 100644\n--- a/src/plone/restapi/tests/test_documentation.py\n+++ b/src/plone/restapi/tests/test_documentation.py\n@@ -178,7 +178,7 @@ def setUp(self):\n         pushGlobalRegistry(getSite())\n         register_static_uuid_utility(prefix="SomeUUID")\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \n@@ -794,7 +794,7 @@ def test_documentation_users(self):\n         save_request_and_response_for_docs("users", response)\n \n     def test_documentation_users_as_anonymous(self):\n-        logged_out_api_session = RelativeSession(self.portal_url)\n+        logged_out_api_session = RelativeSession(self.portal_url, test=self)\n         logged_out_api_session.headers.update({"Accept": "application/json"})\n \n         response = logged_out_api_session.get("@users")\n@@ -819,7 +819,7 @@ def test_documentations_users_as_unauthorized_user(self):\n         )\n         transaction.commit()\n \n-        standard_api_session = RelativeSession(self.portal_url)\n+        standard_api_session = RelativeSession(self.portal_url, test=self)\n         standard_api_session.headers.update({"Accept": "application/json"})\n         standard_api_session.auth = ("noam", "password")\n \n@@ -858,7 +858,7 @@ def test_documentation_users_anonymous_get(self):\n         )\n         transaction.commit()\n \n-        logged_out_api_session = RelativeSession(self.portal_url)\n+        logged_out_api_session = RelativeSession(self.portal_url, test=self)\n         logged_out_api_session.headers.update({"Accept": "application/json"})\n \n         response = logged_out_api_session.get("@users/noam")\n@@ -890,7 +890,7 @@ def test_documentation_users_unauthorized_get(self):\n \n         transaction.commit()\n \n-        logged_out_api_session = RelativeSession(self.portal_url)\n+        logged_out_api_session = RelativeSession(self.portal_url, test=self)\n         logged_out_api_session.headers.update({"Accept": "application/json"})\n         logged_out_api_session.auth = ("noam-fake", "secret")\n \n@@ -915,7 +915,7 @@ def test_documentation_users_authorized_get(self):\n         )\n         transaction.commit()\n \n-        logged_out_api_session = RelativeSession(self.portal_url)\n+        logged_out_api_session = RelativeSession(self.portal_url, test=self)\n         logged_out_api_session.headers.update({"Accept": "application/json"})\n         logged_out_api_session.auth = ("noam", "secret")\n         response = logged_out_api_session.get("@users/noam")\ndiff --git a/src/plone/restapi/tests/test_error_handling.py b/src/plone/restapi/tests/test_error_handling.py\nindex ee6fd80dd..58e837bed 100644\n--- a/src/plone/restapi/tests/test_error_handling.py\n+++ b/src/plone/restapi/tests/test_error_handling.py\n@@ -37,7 +37,7 @@ def setUp(self):\n         self.portal = self.layer["portal"]\n         self.portal_url = self.portal.absolute_url()\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_expansion.py b/src/plone/restapi/tests/test_expansion.py\nindex a7bb8b7c7..c6daef78a 100644\n--- a/src/plone/restapi/tests/test_expansion.py\n+++ b/src/plone/restapi/tests/test_expansion.py\n@@ -115,7 +115,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \n@@ -421,7 +421,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_functional_auth.py b/src/plone/restapi/tests/test_functional_auth.py\nindex e1b0a4d99..59b8b31de 100644\n--- a/src/plone/restapi/tests/test_functional_auth.py\n+++ b/src/plone/restapi/tests/test_functional_auth.py\n@@ -68,6 +68,7 @@ def test_api_login_grants_zmi(self):\n         Logging in via the API also grants access to the Zope root ZMI.\n         """\n         session = requests.Session()\n+        self.addCleanup(session.close)\n         login_resp = session.post(\n             self.portal_url + "/@login",\n             headers={"Accept": "application/json"},\n@@ -112,6 +113,7 @@ def test_zmi_login_grants_api(self):\n         Logging in via the Zope root ZMI also grants access to the API.\n         """\n         session = requests.Session()\n+        self.addCleanup(session.close)\n         basic_auth_headers = {\n             "Authorization": "Basic {}".format(\n                 base64.b64encode(\n@@ -161,6 +163,7 @@ def test_cookie_login_grants_api(self):\n         Logging in via the Plone login form also grants access to the API.\n         """\n         session = requests.Session()\n+        self.addCleanup(session.close)\n         challenge_resp = session.get(self.private_document_url)\n         self.assertEqual(\n             challenge_resp.status_code,\ndiff --git a/src/plone/restapi/tests/test_locking.py b/src/plone/restapi/tests/test_locking.py\nindex ed18cc8d4..191b4d6bd 100644\n--- a/src/plone/restapi/tests/test_locking.py\n+++ b/src/plone/restapi/tests/test_locking.py\n@@ -25,7 +25,7 @@ def setUp(self):\n         ]\n         alsoProvides(self.doc, ITTWLockable)\n \n-        self.api_session = RelativeSession(self.doc.absolute_url())\n+        self.api_session = RelativeSession(self.doc.absolute_url(), test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_permissions.py b/src/plone/restapi/tests/test_permissions.py\nindex cbeddfaed..917ab4a58 100644\n--- a/src/plone/restapi/tests/test_permissions.py\n+++ b/src/plone/restapi/tests/test_permissions.py\n@@ -19,7 +19,7 @@ def setUp(self):\n         self.portal = self.layer["portal"]\n         self.portal_url = self.portal.absolute_url()\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (TEST_USER_NAME, TEST_USER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_registry.py b/src/plone/restapi/tests/test_registry.py\nindex 90461ce9d..d66936ba6 100644\n--- a/src/plone/restapi/tests/test_registry.py\n+++ b/src/plone/restapi/tests/test_registry.py\n@@ -23,7 +23,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_roles.py b/src/plone/restapi/tests/test_roles.py\nindex eaeb6d272..8946e1d13 100644\n--- a/src/plone/restapi/tests/test_roles.py\n+++ b/src/plone/restapi/tests/test_roles.py\n@@ -14,7 +14,7 @@ def setUp(self):\n         self.portal = self.layer["portal"]\n         self.portal_url = self.portal.absolute_url()\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_search.py b/src/plone/restapi/tests/test_search.py\nindex 49c08c5d1..528330212 100644\n--- a/src/plone/restapi/tests/test_search.py\n+++ b/src/plone/restapi/tests/test_search.py\n@@ -39,7 +39,7 @@ def setUp(self):\n         self.request = self.portal.REQUEST\n         self.catalog = getToolByName(self.portal, "portal_catalog")\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_services.py b/src/plone/restapi/tests/test_services.py\nindex 6ef7c67d4..8e009f035 100644\n--- a/src/plone/restapi/tests/test_services.py\n+++ b/src/plone/restapi/tests/test_services.py\n@@ -28,7 +28,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_services_actions.py b/src/plone/restapi/tests/test_services_actions.py\nindex de643e0f2..87eb9c9d3 100644\n--- a/src/plone/restapi/tests/test_services_actions.py\n+++ b/src/plone/restapi/tests/test_services_actions.py\n@@ -46,11 +46,11 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \n-        self.anon_api_session = RelativeSession(self.portal_url)\n+        self.anon_api_session = RelativeSession(self.portal_url, test=self)\n         self.anon_api_session.headers.update({"Accept": "application/json"})\n \n         self.portal_actions = api.portal.get_tool(name="portal_actions")\ndiff --git a/src/plone/restapi/tests/test_services_breadcrumbs.py b/src/plone/restapi/tests/test_services_breadcrumbs.py\nindex 8d775f8b4..54e7471bc 100644\n--- a/src/plone/restapi/tests/test_services_breadcrumbs.py\n+++ b/src/plone/restapi/tests/test_services_breadcrumbs.py\n@@ -26,7 +26,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \n@@ -71,7 +71,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         self.request = self.layer["request"]\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_services_comments.py b/src/plone/restapi/tests/test_services_comments.py\nindex dbdffc0c0..9422b4dbd 100644\n--- a/src/plone/restapi/tests/test_services_comments.py\n+++ b/src/plone/restapi/tests/test_services_comments.py\n@@ -41,12 +41,12 @@ def setUp(self):\n         api.user.create(username="jos", password="josjos", email="jos@plone.org")\n \n         # Admin session\n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \n         # User session\n-        self.user_session = RelativeSession(self.portal_url)\n+        self.user_session = RelativeSession(self.portal_url, test=self)\n         self.user_session.headers.update({"Accept": "application/json"})\n         self.user_session.auth = ("jos", "jos")\n \ndiff --git a/src/plone/restapi/tests/test_services_content.py b/src/plone/restapi/tests/test_services_content.py\nindex 8b210115d..bf6377b36 100644\n--- a/src/plone/restapi/tests/test_services_content.py\n+++ b/src/plone/restapi/tests/test_services_content.py\n@@ -19,7 +19,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_services_contextnavigation.py b/src/plone/restapi/tests/test_services_contextnavigation.py\nindex d016131af..de7341a21 100644\n--- a/src/plone/restapi/tests/test_services_contextnavigation.py\n+++ b/src/plone/restapi/tests/test_services_contextnavigation.py\n@@ -36,7 +36,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_services_controlpanel_dexterity_types.py b/src/plone/restapi/tests/test_services_controlpanel_dexterity_types.py\nindex 4e2ca1a05..92eda72f8 100644\n--- a/src/plone/restapi/tests/test_services_controlpanel_dexterity_types.py\n+++ b/src/plone/restapi/tests/test_services_controlpanel_dexterity_types.py\n@@ -18,7 +18,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_services_controlpanels.py b/src/plone/restapi/tests/test_services_controlpanels.py\nindex 8b5411b9f..1387bb0ae 100644\n--- a/src/plone/restapi/tests/test_services_controlpanels.py\n+++ b/src/plone/restapi/tests/test_services_controlpanels.py\n@@ -19,7 +19,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_services_database.py b/src/plone/restapi/tests/test_services_database.py\nindex eab79a8f7..1cd45ce06 100644\n--- a/src/plone/restapi/tests/test_services_database.py\n+++ b/src/plone/restapi/tests/test_services_database.py\n@@ -18,7 +18,7 @@ def setUp(self):\n         self.request = self.portal.REQUEST\n         self.catalog = getToolByName(self.portal, "portal_catalog")\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_services_email_notification.py b/src/plone/restapi/tests/test_services_email_notification.py\nindex 879837cc8..f3979c692 100644\n--- a/src/plone/restapi/tests/test_services_email_notification.py\n+++ b/src/plone/restapi/tests/test_services_email_notification.py\n@@ -28,10 +28,10 @@ def setUp(self):\n         registry["plone.email_from_address"] = "info@plone.org"\n         registry["plone.email_from_name"] = "Plone test site"\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n-        self.anon_api_session = RelativeSession(self.portal_url)\n+        self.anon_api_session = RelativeSession(self.portal_url, test=self)\n         self.anon_api_session.headers.update({"Accept": "application/json"})\n \n         transaction.commit()\ndiff --git a/src/plone/restapi/tests/test_services_email_send.py b/src/plone/restapi/tests/test_services_email_send.py\nindex 7c8706f9a..7d24d65fb 100644\n--- a/src/plone/restapi/tests/test_services_email_send.py\n+++ b/src/plone/restapi/tests/test_services_email_send.py\n@@ -28,10 +28,10 @@ def setUp(self):\n         registry["plone.email_from_address"] = "info@plone.org"\n         registry["plone.email_from_name"] = "Plone test site"\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n-        self.anon_api_session = RelativeSession(self.portal_url)\n+        self.anon_api_session = RelativeSession(self.portal_url, test=self)\n         self.anon_api_session.headers.update({"Accept": "application/json"})\n \n         transaction.commit()\ndiff --git a/src/plone/restapi/tests/test_services_groups.py b/src/plone/restapi/tests/test_services_groups.py\nindex d7108ed19..21e278b9a 100644\n--- a/src/plone/restapi/tests/test_services_groups.py\n+++ b/src/plone/restapi/tests/test_services_groups.py\n@@ -21,7 +21,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_services_history.py b/src/plone/restapi/tests/test_services_history.py\nindex 50d36e076..a75eb1c58 100644\n--- a/src/plone/restapi/tests/test_services_history.py\n+++ b/src/plone/restapi/tests/test_services_history.py\n@@ -23,7 +23,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \n@@ -153,7 +153,7 @@ def setUp(self):\n         api.content.transition(self.doc, "publish")\n         self.endpoint_url = f"{self.doc.absolute_url()}/@history"\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (TEST_USER_NAME, TEST_USER_PASSWORD)\n         # forbid access to `workflowHistory`\n@@ -178,7 +178,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.headers.update({"Accept-Language": "es"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\ndiff --git a/src/plone/restapi/tests/test_services_navigation.py b/src/plone/restapi/tests/test_services_navigation.py\nindex 95ee1c9b2..3a3c0bfad 100644\n--- a/src/plone/restapi/tests/test_services_navigation.py\n+++ b/src/plone/restapi/tests/test_services_navigation.py\n@@ -23,7 +23,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_services_principals.py b/src/plone/restapi/tests/test_services_principals.py\nindex 17f41f67f..558bd50b8 100644\n--- a/src/plone/restapi/tests/test_services_principals.py\n+++ b/src/plone/restapi/tests/test_services_principals.py\n@@ -21,7 +21,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_services_querysources.py b/src/plone/restapi/tests/test_services_querysources.py\nindex 7d7f8ebf9..a08f677a8 100644\n--- a/src/plone/restapi/tests/test_services_querysources.py\n+++ b/src/plone/restapi/tests/test_services_querysources.py\n@@ -22,7 +22,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_services_querystring.py b/src/plone/restapi/tests/test_services_querystring.py\nindex 3135438e1..36289edef 100644\n--- a/src/plone/restapi/tests/test_services_querystring.py\n+++ b/src/plone/restapi/tests/test_services_querystring.py\n@@ -18,7 +18,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_services_querystringsearch.py b/src/plone/restapi/tests/test_services_querystringsearch.py\nindex 22c7ae07c..8dd77f7dc 100644\n--- a/src/plone/restapi/tests/test_services_querystringsearch.py\n+++ b/src/plone/restapi/tests/test_services_querystringsearch.py\n@@ -19,7 +19,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_services_sources.py b/src/plone/restapi/tests/test_services_sources.py\nindex 2a55e2058..57d40b162 100644\n--- a/src/plone/restapi/tests/test_services_sources.py\n+++ b/src/plone/restapi/tests/test_services_sources.py\n@@ -22,7 +22,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_services_tiles.py b/src/plone/restapi/tests/test_services_tiles.py\nindex bd3777108..eda99cc44 100644\n--- a/src/plone/restapi/tests/test_services_tiles.py\n+++ b/src/plone/restapi/tests/test_services_tiles.py\n@@ -41,7 +41,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_services_types.py b/src/plone/restapi/tests/test_services_types.py\nindex ab4b7a7fd..09ba831d1 100644\n--- a/src/plone/restapi/tests/test_services_types.py\n+++ b/src/plone/restapi/tests/test_services_types.py\n@@ -22,7 +22,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \n@@ -576,7 +576,7 @@ def setUp(self):\n         self.portal = self.layer["portal"]\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.headers.update({"Accept-Language": "es"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\ndiff --git a/src/plone/restapi/tests/test_services_users.py b/src/plone/restapi/tests/test_services_users.py\nindex 55d9edd34..48461d678 100644\n--- a/src/plone/restapi/tests/test_services_users.py\n+++ b/src/plone/restapi/tests/test_services_users.py\n@@ -28,10 +28,10 @@ def setUp(self):\n \n         self.mailhost = getUtility(IMailHost)\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n-        self.anon_api_session = RelativeSession(self.portal_url)\n+        self.anon_api_session = RelativeSession(self.portal_url, test=self)\n         self.anon_api_session.headers.update({"Accept": "application/json"})\n \n         properties = {\n@@ -84,7 +84,7 @@ def test_list_users(self):\n         self.assertEqual("Cambridge, MA", noam.get("location"))\n \n     def test_list_users_without_being_manager(self):\n-        noam_api_session = RelativeSession(self.portal_url)\n+        noam_api_session = RelativeSession(self.portal_url, test=self)\n         noam_api_session.headers.update({"Accept": "application/json"})\n         noam_api_session.auth = ("noam", "password")\n \n@@ -307,7 +307,7 @@ def test_get_user_as_anonymous(self):\n         self.assertEqual(response.status_code, 401)\n \n     def test_get_other_user_info_when_logged_in(self):\n-        noam_api_session = RelativeSession(self.portal_url)\n+        noam_api_session = RelativeSession(self.portal_url, test=self)\n         noam_api_session.headers.update({"Accept": "application/json"})\n         noam_api_session.auth = ("noam", "password")\n \n@@ -366,7 +366,7 @@ def test_get_search_user_with_filter_as_unauthorized_user(self):\n             },\n         )\n         transaction.commit()\n-        noam_api_session = RelativeSession(self.portal_url)\n+        noam_api_session = RelativeSession(self.portal_url, test=self)\n         noam_api_session.headers.update({"Accept": "application/json"})\n         noam_api_session.auth = ("noam", "password")\n \ndiff --git a/src/plone/restapi/tests/test_services_vocabularies.py b/src/plone/restapi/tests/test_services_vocabularies.py\nindex 8fa0f154e..cb0774c3f 100644\n--- a/src/plone/restapi/tests/test_services_vocabularies.py\n+++ b/src/plone/restapi/tests/test_services_vocabularies.py\n@@ -75,7 +75,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n         provideUtility(\ndiff --git a/src/plone/restapi/tests/test_services_workingcopy.py b/src/plone/restapi/tests/test_services_workingcopy.py\nindex e579046b4..2be0ee93a 100644\n--- a/src/plone/restapi/tests/test_services_workingcopy.py\n+++ b/src/plone/restapi/tests/test_services_workingcopy.py\n@@ -19,7 +19,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_site_serializer.py b/src/plone/restapi/tests/test_site_serializer.py\nindex b4ee97845..ff3628fb3 100644\n--- a/src/plone/restapi/tests/test_site_serializer.py\n+++ b/src/plone/restapi/tests/test_site_serializer.py\n@@ -69,7 +69,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(f"{self.portal_url}/++api++")\n+        self.api_session = RelativeSession(f"{self.portal_url}/++api++", test=self)\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \n     def tearDown(self):\ndiff --git a/src/plone/restapi/tests/test_system.py b/src/plone/restapi/tests/test_system.py\nindex cf213c02b..2f7d686b9 100644\n--- a/src/plone/restapi/tests/test_system.py\n+++ b/src/plone/restapi/tests/test_system.py\n@@ -23,7 +23,7 @@ def setUp(self):\n         self.request = self.portal.REQUEST\n         self.catalog = getToolByName(self.portal, "portal_catalog")\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n         overview_control_panel = OverviewControlPanel(self.portal, self.request)\ndiff --git a/src/plone/restapi/tests/test_tus.py b/src/plone/restapi/tests/test_tus.py\nindex 3ecfe07a5..bece6c679 100644\n--- a/src/plone/restapi/tests/test_tus.py\n+++ b/src/plone/restapi/tests/test_tus.py\n@@ -65,7 +65,7 @@ def setUp(self):\n         self.upload_url = f"{self.folder.absolute_url()}/@tus-upload"\n         transaction.commit()\n \n-        self.api_session = RelativeSession(self.portal.absolute_url())\n+        self.api_session = RelativeSession(self.portal.absolute_url(), test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \n@@ -576,7 +576,7 @@ def setUp(self):\n             CORSTestPolicy, adapts=(Interface, IBrowserRequest), provides=ICORSPolicy\n         )\n         self.portal = self.layer["portal"]\n-        self.api_session = RelativeSession(self.portal.absolute_url())\n+        self.api_session = RelativeSession(self.portal.absolute_url(), test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n         self.upload_url = f"{self.portal.absolute_url()}/@tus-upload"\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2021-12-29T15:28:08+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.restapi/commit/6a1f9a189ca0737821d37ae0be0dd35ea456816e

Merge pull request #1302 from plone/test-fix-deprecations

test(warning): Resolve bulk of warnings from tests

Files changed:
A news/1302.bugfix
M src/plone/restapi/testing.py
M src/plone/restapi/tests/test_addons.py
M src/plone/restapi/tests/test_batching.py
M src/plone/restapi/tests/test_blocks_searchable_text.py
M src/plone/restapi/tests/test_content_blocks.py
M src/plone/restapi/tests/test_copymove.py
M src/plone/restapi/tests/test_documentation.py
M src/plone/restapi/tests/test_error_handling.py
M src/plone/restapi/tests/test_expansion.py
M src/plone/restapi/tests/test_functional_auth.py
M src/plone/restapi/tests/test_locking.py
M src/plone/restapi/tests/test_permissions.py
M src/plone/restapi/tests/test_registry.py
M src/plone/restapi/tests/test_roles.py
M src/plone/restapi/tests/test_search.py
M src/plone/restapi/tests/test_serializer_converters.py
M src/plone/restapi/tests/test_services.py
M src/plone/restapi/tests/test_services_actions.py
M src/plone/restapi/tests/test_services_breadcrumbs.py
M src/plone/restapi/tests/test_services_comments.py
M src/plone/restapi/tests/test_services_content.py
M src/plone/restapi/tests/test_services_contextnavigation.py
M src/plone/restapi/tests/test_services_controlpanel_dexterity_types.py
M src/plone/restapi/tests/test_services_controlpanels.py
M src/plone/restapi/tests/test_services_database.py
M src/plone/restapi/tests/test_services_email_notification.py
M src/plone/restapi/tests/test_services_email_send.py
M src/plone/restapi/tests/test_services_groups.py
M src/plone/restapi/tests/test_services_history.py
M src/plone/restapi/tests/test_services_navigation.py
M src/plone/restapi/tests/test_services_principals.py
M src/plone/restapi/tests/test_services_querysources.py
M src/plone/restapi/tests/test_services_querystring.py
M src/plone/restapi/tests/test_services_querystringsearch.py
M src/plone/restapi/tests/test_services_sources.py
M src/plone/restapi/tests/test_services_tiles.py
M src/plone/restapi/tests/test_services_types.py
M src/plone/restapi/tests/test_services_users.py
M src/plone/restapi/tests/test_services_vocabularies.py
M src/plone/restapi/tests/test_services_workingcopy.py
M src/plone/restapi/tests/test_site_serializer.py
M src/plone/restapi/tests/test_system.py
M src/plone/restapi/tests/test_tus.py

b'diff --git a/news/1302.bugfix b/news/1302.bugfix\nnew file mode 100644\nindex 000000000..bd20ae275\n--- /dev/null\n+++ b/news/1302.bugfix\n@@ -0,0 +1,3 @@\n+Resolve the bulk of deprecation and resource leak warnings when running the full test\n+suite.\n+[rpatterson]\ndiff --git a/src/plone/restapi/testing.py b/src/plone/restapi/testing.py\nindex 446610146..303eed97c 100644\n--- a/src/plone/restapi/testing.py\n+++ b/src/plone/restapi/testing.py\n@@ -253,12 +253,29 @@ class RelativeSession(requests.Session):\n     base if their URL is relative (doesn\'t begin with a HTTP[S] scheme).\n     """\n \n-    def __init__(self, base_url):\n+    def __init__(self, base_url, test=None):\n+        """\n+        Capture the base URL.  Optionally also capture a test case for cleanup.\n+\n+        Apparently, network sockets created by the `requests` library can remain open\n+        even after the full body of the response has been read, despite [the\n+        docs](https://docs.python-requests.org/en/latest/user/advanced/#body-content-workflow). In\n+        particular, this results in `ResourceWarning: unclosed <socket.socket ...>` leak\n+        warnings when running the tests.  If the `test` kwarg is passed, it will be used\n+        to register future cleanup calls to close this session and thus also the\n+        sockets. If passed, it must be an object with a `addCleanup(func)` callable\n+        attribute, such as instances of `unittest.TestCase`.\n+        """\n         super().__init__()\n+\n         if not base_url.endswith("/"):\n             base_url += "/"\n         self.__base_url = base_url\n \n+        if hasattr(test, "addCleanup"):\n+            # Avoid `ResourceWarning: unclosed <socket.socket ...>`\n+            test.addCleanup(self.close)\n+\n     def request(self, method, url, **kwargs):\n         if urlparse(url).scheme not in ("http", "https"):\n             url = url.lstrip("/")\ndiff --git a/src/plone/restapi/tests/test_addons.py b/src/plone/restapi/tests/test_addons.py\nindex 47149a491..9fd449e7e 100644\n--- a/src/plone/restapi/tests/test_addons.py\n+++ b/src/plone/restapi/tests/test_addons.py\n@@ -22,7 +22,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_batching.py b/src/plone/restapi/tests/test_batching.py\nindex 27c842238..810846298 100644\n--- a/src/plone/restapi/tests/test_batching.py\n+++ b/src/plone/restapi/tests/test_batching.py\n@@ -24,7 +24,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         self.request = self.portal.REQUEST\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_blocks_searchable_text.py b/src/plone/restapi/tests/test_blocks_searchable_text.py\nindex 9867a371c..e979dce99 100644\n--- a/src/plone/restapi/tests/test_blocks_searchable_text.py\n+++ b/src/plone/restapi/tests/test_blocks_searchable_text.py\n@@ -29,7 +29,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_content_blocks.py b/src/plone/restapi/tests/test_content_blocks.py\nindex e8915ad4b..0dbf2e235 100644\n--- a/src/plone/restapi/tests/test_content_blocks.py\n+++ b/src/plone/restapi/tests/test_content_blocks.py\n@@ -22,7 +22,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_copymove.py b/src/plone/restapi/tests/test_copymove.py\nindex 07edcb86c..0748c8be2 100644\n--- a/src/plone/restapi/tests/test_copymove.py\n+++ b/src/plone/restapi/tests/test_copymove.py\n@@ -82,7 +82,7 @@ def setUp(self):\n             email="memberuser@example.com", username="memberuser", password="secret"\n         )\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_documentation.py b/src/plone/restapi/tests/test_documentation.py\nindex f98578ff8..fe6d391de 100644\n--- a/src/plone/restapi/tests/test_documentation.py\n+++ b/src/plone/restapi/tests/test_documentation.py\n@@ -178,7 +178,7 @@ def setUp(self):\n         pushGlobalRegistry(getSite())\n         register_static_uuid_utility(prefix="SomeUUID")\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \n@@ -794,7 +794,7 @@ def test_documentation_users(self):\n         save_request_and_response_for_docs("users", response)\n \n     def test_documentation_users_as_anonymous(self):\n-        logged_out_api_session = RelativeSession(self.portal_url)\n+        logged_out_api_session = RelativeSession(self.portal_url, test=self)\n         logged_out_api_session.headers.update({"Accept": "application/json"})\n \n         response = logged_out_api_session.get("@users")\n@@ -819,7 +819,7 @@ def test_documentations_users_as_unauthorized_user(self):\n         )\n         transaction.commit()\n \n-        standard_api_session = RelativeSession(self.portal_url)\n+        standard_api_session = RelativeSession(self.portal_url, test=self)\n         standard_api_session.headers.update({"Accept": "application/json"})\n         standard_api_session.auth = ("noam", "password")\n \n@@ -858,7 +858,7 @@ def test_documentation_users_anonymous_get(self):\n         )\n         transaction.commit()\n \n-        logged_out_api_session = RelativeSession(self.portal_url)\n+        logged_out_api_session = RelativeSession(self.portal_url, test=self)\n         logged_out_api_session.headers.update({"Accept": "application/json"})\n \n         response = logged_out_api_session.get("@users/noam")\n@@ -890,7 +890,7 @@ def test_documentation_users_unauthorized_get(self):\n \n         transaction.commit()\n \n-        logged_out_api_session = RelativeSession(self.portal_url)\n+        logged_out_api_session = RelativeSession(self.portal_url, test=self)\n         logged_out_api_session.headers.update({"Accept": "application/json"})\n         logged_out_api_session.auth = ("noam-fake", "secret")\n \n@@ -915,7 +915,7 @@ def test_documentation_users_authorized_get(self):\n         )\n         transaction.commit()\n \n-        logged_out_api_session = RelativeSession(self.portal_url)\n+        logged_out_api_session = RelativeSession(self.portal_url, test=self)\n         logged_out_api_session.headers.update({"Accept": "application/json"})\n         logged_out_api_session.auth = ("noam", "secret")\n         response = logged_out_api_session.get("@users/noam")\ndiff --git a/src/plone/restapi/tests/test_error_handling.py b/src/plone/restapi/tests/test_error_handling.py\nindex ee6fd80dd..58e837bed 100644\n--- a/src/plone/restapi/tests/test_error_handling.py\n+++ b/src/plone/restapi/tests/test_error_handling.py\n@@ -37,7 +37,7 @@ def setUp(self):\n         self.portal = self.layer["portal"]\n         self.portal_url = self.portal.absolute_url()\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_expansion.py b/src/plone/restapi/tests/test_expansion.py\nindex a7bb8b7c7..c6daef78a 100644\n--- a/src/plone/restapi/tests/test_expansion.py\n+++ b/src/plone/restapi/tests/test_expansion.py\n@@ -115,7 +115,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \n@@ -421,7 +421,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_functional_auth.py b/src/plone/restapi/tests/test_functional_auth.py\nindex e1b0a4d99..59b8b31de 100644\n--- a/src/plone/restapi/tests/test_functional_auth.py\n+++ b/src/plone/restapi/tests/test_functional_auth.py\n@@ -68,6 +68,7 @@ def test_api_login_grants_zmi(self):\n         Logging in via the API also grants access to the Zope root ZMI.\n         """\n         session = requests.Session()\n+        self.addCleanup(session.close)\n         login_resp = session.post(\n             self.portal_url + "/@login",\n             headers={"Accept": "application/json"},\n@@ -112,6 +113,7 @@ def test_zmi_login_grants_api(self):\n         Logging in via the Zope root ZMI also grants access to the API.\n         """\n         session = requests.Session()\n+        self.addCleanup(session.close)\n         basic_auth_headers = {\n             "Authorization": "Basic {}".format(\n                 base64.b64encode(\n@@ -161,6 +163,7 @@ def test_cookie_login_grants_api(self):\n         Logging in via the Plone login form also grants access to the API.\n         """\n         session = requests.Session()\n+        self.addCleanup(session.close)\n         challenge_resp = session.get(self.private_document_url)\n         self.assertEqual(\n             challenge_resp.status_code,\ndiff --git a/src/plone/restapi/tests/test_locking.py b/src/plone/restapi/tests/test_locking.py\nindex ed18cc8d4..191b4d6bd 100644\n--- a/src/plone/restapi/tests/test_locking.py\n+++ b/src/plone/restapi/tests/test_locking.py\n@@ -25,7 +25,7 @@ def setUp(self):\n         ]\n         alsoProvides(self.doc, ITTWLockable)\n \n-        self.api_session = RelativeSession(self.doc.absolute_url())\n+        self.api_session = RelativeSession(self.doc.absolute_url(), test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_permissions.py b/src/plone/restapi/tests/test_permissions.py\nindex cbeddfaed..917ab4a58 100644\n--- a/src/plone/restapi/tests/test_permissions.py\n+++ b/src/plone/restapi/tests/test_permissions.py\n@@ -19,7 +19,7 @@ def setUp(self):\n         self.portal = self.layer["portal"]\n         self.portal_url = self.portal.absolute_url()\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (TEST_USER_NAME, TEST_USER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_registry.py b/src/plone/restapi/tests/test_registry.py\nindex 90461ce9d..d66936ba6 100644\n--- a/src/plone/restapi/tests/test_registry.py\n+++ b/src/plone/restapi/tests/test_registry.py\n@@ -23,7 +23,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_roles.py b/src/plone/restapi/tests/test_roles.py\nindex eaeb6d272..8946e1d13 100644\n--- a/src/plone/restapi/tests/test_roles.py\n+++ b/src/plone/restapi/tests/test_roles.py\n@@ -14,7 +14,7 @@ def setUp(self):\n         self.portal = self.layer["portal"]\n         self.portal_url = self.portal.absolute_url()\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_search.py b/src/plone/restapi/tests/test_search.py\nindex 49c08c5d1..528330212 100644\n--- a/src/plone/restapi/tests/test_search.py\n+++ b/src/plone/restapi/tests/test_search.py\n@@ -39,7 +39,7 @@ def setUp(self):\n         self.request = self.portal.REQUEST\n         self.catalog = getToolByName(self.portal, "portal_catalog")\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_serializer_converters.py b/src/plone/restapi/tests/test_serializer_converters.py\nindex d34147785..c3f7d8383 100644\n--- a/src/plone/restapi/tests/test_serializer_converters.py\n+++ b/src/plone/restapi/tests/test_serializer_converters.py\n@@ -29,10 +29,10 @@ def test_error_when_type_unknown(self):\n             + r" \\(<(class|type) \\\'object\\\'>\\) JSON compatible.$"\n         )\n \n-        with self.assertRaisesRegexp(TypeError, err_regex):\n+        with self.assertRaisesRegex(TypeError, err_regex):\n             json_compatible(object())\n \n-        with self.assertRaisesRegexp(TypeError, err_regex):\n+        with self.assertRaisesRegex(TypeError, err_regex):\n             json_compatible({"foo": [object()]})\n \n     def test_True(self):\ndiff --git a/src/plone/restapi/tests/test_services.py b/src/plone/restapi/tests/test_services.py\nindex 6ef7c67d4..8e009f035 100644\n--- a/src/plone/restapi/tests/test_services.py\n+++ b/src/plone/restapi/tests/test_services.py\n@@ -28,7 +28,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_services_actions.py b/src/plone/restapi/tests/test_services_actions.py\nindex de643e0f2..87eb9c9d3 100644\n--- a/src/plone/restapi/tests/test_services_actions.py\n+++ b/src/plone/restapi/tests/test_services_actions.py\n@@ -46,11 +46,11 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \n-        self.anon_api_session = RelativeSession(self.portal_url)\n+        self.anon_api_session = RelativeSession(self.portal_url, test=self)\n         self.anon_api_session.headers.update({"Accept": "application/json"})\n \n         self.portal_actions = api.portal.get_tool(name="portal_actions")\ndiff --git a/src/plone/restapi/tests/test_services_breadcrumbs.py b/src/plone/restapi/tests/test_services_breadcrumbs.py\nindex 8d775f8b4..54e7471bc 100644\n--- a/src/plone/restapi/tests/test_services_breadcrumbs.py\n+++ b/src/plone/restapi/tests/test_services_breadcrumbs.py\n@@ -26,7 +26,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \n@@ -71,7 +71,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         self.request = self.layer["request"]\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_services_comments.py b/src/plone/restapi/tests/test_services_comments.py\nindex dbdffc0c0..9422b4dbd 100644\n--- a/src/plone/restapi/tests/test_services_comments.py\n+++ b/src/plone/restapi/tests/test_services_comments.py\n@@ -41,12 +41,12 @@ def setUp(self):\n         api.user.create(username="jos", password="josjos", email="jos@plone.org")\n \n         # Admin session\n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \n         # User session\n-        self.user_session = RelativeSession(self.portal_url)\n+        self.user_session = RelativeSession(self.portal_url, test=self)\n         self.user_session.headers.update({"Accept": "application/json"})\n         self.user_session.auth = ("jos", "jos")\n \ndiff --git a/src/plone/restapi/tests/test_services_content.py b/src/plone/restapi/tests/test_services_content.py\nindex 8b210115d..bf6377b36 100644\n--- a/src/plone/restapi/tests/test_services_content.py\n+++ b/src/plone/restapi/tests/test_services_content.py\n@@ -19,7 +19,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_services_contextnavigation.py b/src/plone/restapi/tests/test_services_contextnavigation.py\nindex d016131af..de7341a21 100644\n--- a/src/plone/restapi/tests/test_services_contextnavigation.py\n+++ b/src/plone/restapi/tests/test_services_contextnavigation.py\n@@ -36,7 +36,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_services_controlpanel_dexterity_types.py b/src/plone/restapi/tests/test_services_controlpanel_dexterity_types.py\nindex 4e2ca1a05..92eda72f8 100644\n--- a/src/plone/restapi/tests/test_services_controlpanel_dexterity_types.py\n+++ b/src/plone/restapi/tests/test_services_controlpanel_dexterity_types.py\n@@ -18,7 +18,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_services_controlpanels.py b/src/plone/restapi/tests/test_services_controlpanels.py\nindex 8b5411b9f..1387bb0ae 100644\n--- a/src/plone/restapi/tests/test_services_controlpanels.py\n+++ b/src/plone/restapi/tests/test_services_controlpanels.py\n@@ -19,7 +19,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_services_database.py b/src/plone/restapi/tests/test_services_database.py\nindex eab79a8f7..1cd45ce06 100644\n--- a/src/plone/restapi/tests/test_services_database.py\n+++ b/src/plone/restapi/tests/test_services_database.py\n@@ -18,7 +18,7 @@ def setUp(self):\n         self.request = self.portal.REQUEST\n         self.catalog = getToolByName(self.portal, "portal_catalog")\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_services_email_notification.py b/src/plone/restapi/tests/test_services_email_notification.py\nindex 879837cc8..f3979c692 100644\n--- a/src/plone/restapi/tests/test_services_email_notification.py\n+++ b/src/plone/restapi/tests/test_services_email_notification.py\n@@ -28,10 +28,10 @@ def setUp(self):\n         registry["plone.email_from_address"] = "info@plone.org"\n         registry["plone.email_from_name"] = "Plone test site"\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n-        self.anon_api_session = RelativeSession(self.portal_url)\n+        self.anon_api_session = RelativeSession(self.portal_url, test=self)\n         self.anon_api_session.headers.update({"Accept": "application/json"})\n \n         transaction.commit()\ndiff --git a/src/plone/restapi/tests/test_services_email_send.py b/src/plone/restapi/tests/test_services_email_send.py\nindex 7c8706f9a..7d24d65fb 100644\n--- a/src/plone/restapi/tests/test_services_email_send.py\n+++ b/src/plone/restapi/tests/test_services_email_send.py\n@@ -28,10 +28,10 @@ def setUp(self):\n         registry["plone.email_from_address"] = "info@plone.org"\n         registry["plone.email_from_name"] = "Plone test site"\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n-        self.anon_api_session = RelativeSession(self.portal_url)\n+        self.anon_api_session = RelativeSession(self.portal_url, test=self)\n         self.anon_api_session.headers.update({"Accept": "application/json"})\n \n         transaction.commit()\ndiff --git a/src/plone/restapi/tests/test_services_groups.py b/src/plone/restapi/tests/test_services_groups.py\nindex d7108ed19..21e278b9a 100644\n--- a/src/plone/restapi/tests/test_services_groups.py\n+++ b/src/plone/restapi/tests/test_services_groups.py\n@@ -21,7 +21,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_services_history.py b/src/plone/restapi/tests/test_services_history.py\nindex 50d36e076..a75eb1c58 100644\n--- a/src/plone/restapi/tests/test_services_history.py\n+++ b/src/plone/restapi/tests/test_services_history.py\n@@ -23,7 +23,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \n@@ -153,7 +153,7 @@ def setUp(self):\n         api.content.transition(self.doc, "publish")\n         self.endpoint_url = f"{self.doc.absolute_url()}/@history"\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (TEST_USER_NAME, TEST_USER_PASSWORD)\n         # forbid access to `workflowHistory`\n@@ -178,7 +178,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.headers.update({"Accept-Language": "es"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\ndiff --git a/src/plone/restapi/tests/test_services_navigation.py b/src/plone/restapi/tests/test_services_navigation.py\nindex 95ee1c9b2..3a3c0bfad 100644\n--- a/src/plone/restapi/tests/test_services_navigation.py\n+++ b/src/plone/restapi/tests/test_services_navigation.py\n@@ -23,7 +23,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_services_principals.py b/src/plone/restapi/tests/test_services_principals.py\nindex 17f41f67f..558bd50b8 100644\n--- a/src/plone/restapi/tests/test_services_principals.py\n+++ b/src/plone/restapi/tests/test_services_principals.py\n@@ -21,7 +21,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_services_querysources.py b/src/plone/restapi/tests/test_services_querysources.py\nindex 7d7f8ebf9..a08f677a8 100644\n--- a/src/plone/restapi/tests/test_services_querysources.py\n+++ b/src/plone/restapi/tests/test_services_querysources.py\n@@ -22,7 +22,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_services_querystring.py b/src/plone/restapi/tests/test_services_querystring.py\nindex 3135438e1..36289edef 100644\n--- a/src/plone/restapi/tests/test_services_querystring.py\n+++ b/src/plone/restapi/tests/test_services_querystring.py\n@@ -18,7 +18,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_services_querystringsearch.py b/src/plone/restapi/tests/test_services_querystringsearch.py\nindex 22c7ae07c..8dd77f7dc 100644\n--- a/src/plone/restapi/tests/test_services_querystringsearch.py\n+++ b/src/plone/restapi/tests/test_services_querystringsearch.py\n@@ -19,7 +19,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_services_sources.py b/src/plone/restapi/tests/test_services_sources.py\nindex 2a55e2058..57d40b162 100644\n--- a/src/plone/restapi/tests/test_services_sources.py\n+++ b/src/plone/restapi/tests/test_services_sources.py\n@@ -22,7 +22,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_services_tiles.py b/src/plone/restapi/tests/test_services_tiles.py\nindex bd3777108..eda99cc44 100644\n--- a/src/plone/restapi/tests/test_services_tiles.py\n+++ b/src/plone/restapi/tests/test_services_tiles.py\n@@ -41,7 +41,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \ndiff --git a/src/plone/restapi/tests/test_services_types.py b/src/plone/restapi/tests/test_services_types.py\nindex ab4b7a7fd..09ba831d1 100644\n--- a/src/plone/restapi/tests/test_services_types.py\n+++ b/src/plone/restapi/tests/test_services_types.py\n@@ -22,7 +22,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \n@@ -576,7 +576,7 @@ def setUp(self):\n         self.portal = self.layer["portal"]\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.headers.update({"Accept-Language": "es"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\ndiff --git a/src/plone/restapi/tests/test_services_users.py b/src/plone/restapi/tests/test_services_users.py\nindex 55d9edd34..48461d678 100644\n--- a/src/plone/restapi/tests/test_services_users.py\n+++ b/src/plone/restapi/tests/test_services_users.py\n@@ -28,10 +28,10 @@ def setUp(self):\n \n         self.mailhost = getUtility(IMailHost)\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n-        self.anon_api_session = RelativeSession(self.portal_url)\n+        self.anon_api_session = RelativeSession(self.portal_url, test=self)\n         self.anon_api_session.headers.update({"Accept": "application/json"})\n \n         properties = {\n@@ -84,7 +84,7 @@ def test_list_users(self):\n         self.assertEqual("Cambridge, MA", noam.get("location"))\n \n     def test_list_users_without_being_manager(self):\n-        noam_api_session = RelativeSession(self.portal_url)\n+        noam_api_session = RelativeSession(self.portal_url, test=self)\n         noam_api_session.headers.update({"Accept": "application/json"})\n         noam_api_session.auth = ("noam", "password")\n \n@@ -307,7 +307,7 @@ def test_get_user_as_anonymous(self):\n         self.assertEqual(response.status_code, 401)\n \n     def test_get_other_user_info_when_logged_in(self):\n-        noam_api_session = RelativeSession(self.portal_url)\n+        noam_api_session = RelativeSession(self.portal_url, test=self)\n         noam_api_session.headers.update({"Accept": "application/json"})\n         noam_api_session.auth = ("noam", "password")\n \n@@ -366,7 +366,7 @@ def test_get_search_user_with_filter_as_unauthorized_user(self):\n             },\n         )\n         transaction.commit()\n-        noam_api_session = RelativeSession(self.portal_url)\n+        noam_api_session = RelativeSession(self.portal_url, test=self)\n         noam_api_session.headers.update({"Accept": "application/json"})\n         noam_api_session.auth = ("noam", "password")\n \ndiff --git a/src/plone/restapi/tests/test_services_vocabularies.py b/src/plone/restapi/tests/test_services_vocabularies.py\nindex 8fa0f154e..cb0774c3f 100644\n--- a/src/plone/restapi/tests/test_services_vocabularies.py\n+++ b/src/plone/restapi/tests/test_services_vocabularies.py\n@@ -75,7 +75,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n         provideUtility(\ndiff --git a/src/plone/restapi/tests/test_services_workingcopy.py b/src/plone/restapi/tests/test_services_workingcopy.py\nindex 1f31d793b..2be0ee93a 100644\n--- a/src/plone/restapi/tests/test_services_workingcopy.py\n+++ b/src/plone/restapi/tests/test_services_workingcopy.py\n@@ -19,7 +19,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \n@@ -39,7 +39,7 @@ def test_workingcopy_checkout(self):\n         self.assertEqual(response.status_code, 201)\n         self.assertIn("@id", response.json())\n \n-        self.assertEquals(\n+        self.assertEqual(\n             response.json()["@id"],\n             f"{self.portal_url}/copy_of_document",\n         )\n@@ -58,15 +58,15 @@ def test_workingcopy_get(self):\n         )\n \n         self.assertEqual(response.status_code, 200)\n-        self.assertEquals(\n+        self.assertEqual(\n             response.json()["working_copy"]["@id"],\n             f"{self.portal_url}/copy_of_document",\n         )\n-        self.assertEquals(\n+        self.assertEqual(\n             response.json()["working_copy"]["creator_name"],\n             "admin",\n         )\n-        self.assertEquals(\n+        self.assertEqual(\n             response.json()["working_copy"]["creator_url"],\n             f"{self.portal_url}/author/admin",\n         )\n@@ -77,19 +77,19 @@ def test_workingcopy_get(self):\n         )\n \n         self.assertEqual(response.status_code, 200)\n-        self.assertEquals(\n+        self.assertEqual(\n             response.json()["working_copy_of"]["@id"],\n             f"{self.portal_url}/document",\n         )\n-        self.assertEquals(\n+        self.assertEqual(\n             response.json()["working_copy"]["@id"],\n             f"{self.portal_url}/copy_of_document",\n         )\n-        self.assertEquals(\n+        self.assertEqual(\n             response.json()["working_copy"]["creator_name"],\n             "admin",\n         )\n-        self.assertEquals(\n+        self.assertEqual(\n             response.json()["working_copy"]["creator_url"],\n             f"{self.portal_url}/author/admin",\n         )\n@@ -99,37 +99,37 @@ def test_workingcopy_get(self):\n             "/document",\n         )\n \n-        self.assertEquals(\n+        self.assertEqual(\n             response.json()["working_copy"]["@id"],\n             f"{self.portal_url}/copy_of_document",\n         )\n-        self.assertEquals(\n+        self.assertEqual(\n             response.json()["working_copy"]["creator_name"],\n             "admin",\n         )\n-        self.assertEquals(\n+        self.assertEqual(\n             response.json()["working_copy"]["creator_url"],\n             f"{self.portal_url}/author/admin",\n         )\n-        self.assertEquals(response.json()["working_copy_of"], None)\n+        self.assertEqual(response.json()["working_copy_of"], None)\n \n         # Serialization on the working copy object\n         response = self.api_session.get(\n             "/copy_of_document",\n         )\n-        self.assertEquals(\n+        self.assertEqual(\n             response.json()["working_copy_of"]["@id"],\n             f"{self.portal_url}/document",\n         )\n-        self.assertEquals(\n+        self.assertEqual(\n             response.json()["working_copy"]["@id"],\n             f"{self.portal_url}/copy_of_document",\n         )\n-        self.assertEquals(\n+        self.assertEqual(\n             response.json()["working_copy"]["creator_name"],\n             "admin",\n         )\n-        self.assertEquals(\n+        self.assertEqual(\n             response.json()["working_copy"]["creator_url"],\n             f"{self.portal_url}/author/admin",\n         )\n@@ -141,7 +141,7 @@ def test_workingcopy_notworkingcopy_get(self):\n         )\n         self.assertEqual(response.status_code, 200)\n \n-        self.assertEquals(\n+        self.assertEqual(\n             response.json()["working_copy_of"],\n             None,\n         )\n@@ -206,7 +206,7 @@ def test_workingcopy_patch_on_the_baseline(self):\n             "/document",\n         )\n         self.assertEqual(response.status_code, 200)\n-        self.assertEquals(response.json()["title"], "I just changed the title")\n+        self.assertEqual(response.json()["title"], "I just changed the title")\n \n     def test_workingcopy_patch_on_the_working_copy(self):\n         # We create the working copy\n@@ -230,4 +230,4 @@ def test_workingcopy_patch_on_the_working_copy(self):\n             "/document",\n         )\n         self.assertEqual(response.status_code, 200)\n-        self.assertEquals(response.json()["title"], "I just changed the title")\n+        self.assertEqual(response.json()["title"], "I just changed the title")\ndiff --git a/src/plone/restapi/tests/test_site_serializer.py b/src/plone/restapi/tests/test_site_serializer.py\nindex b4ee97845..ff3628fb3 100644\n--- a/src/plone/restapi/tests/test_site_serializer.py\n+++ b/src/plone/restapi/tests/test_site_serializer.py\n@@ -69,7 +69,7 @@ def setUp(self):\n         self.portal_url = self.portal.absolute_url()\n         setRoles(self.portal, TEST_USER_ID, ["Manager"])\n \n-        self.api_session = RelativeSession(f"{self.portal_url}/++api++")\n+        self.api_session = RelativeSession(f"{self.portal_url}/++api++", test=self)\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \n     def tearDown(self):\ndiff --git a/src/plone/restapi/tests/test_system.py b/src/plone/restapi/tests/test_system.py\nindex cf213c02b..2f7d686b9 100644\n--- a/src/plone/restapi/tests/test_system.py\n+++ b/src/plone/restapi/tests/test_system.py\n@@ -23,7 +23,7 @@ def setUp(self):\n         self.request = self.portal.REQUEST\n         self.catalog = getToolByName(self.portal, "portal_catalog")\n \n-        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session = RelativeSession(self.portal_url, test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n         overview_control_panel = OverviewControlPanel(self.portal, self.request)\ndiff --git a/src/plone/restapi/tests/test_tus.py b/src/plone/restapi/tests/test_tus.py\nindex 3ecfe07a5..bece6c679 100644\n--- a/src/plone/restapi/tests/test_tus.py\n+++ b/src/plone/restapi/tests/test_tus.py\n@@ -65,7 +65,7 @@ def setUp(self):\n         self.upload_url = f"{self.folder.absolute_url()}/@tus-upload"\n         transaction.commit()\n \n-        self.api_session = RelativeSession(self.portal.absolute_url())\n+        self.api_session = RelativeSession(self.portal.absolute_url(), test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \n@@ -576,7 +576,7 @@ def setUp(self):\n             CORSTestPolicy, adapts=(Interface, IBrowserRequest), provides=ICORSPolicy\n         )\n         self.portal = self.layer["portal"]\n-        self.api_session = RelativeSession(self.portal.absolute_url())\n+        self.api_session = RelativeSession(self.portal.absolute_url(), test=self)\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n         self.upload_url = f"{self.portal.absolute_url()}/@tus-upload"\n'

