Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2023-04-01T14:33:46+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.discussion/commit/674728e78ec0df2748cfa4bce52979e581d7b9f2

Configuring with plone/meta

Files changed:
A .editorconfig
A .meta.toml
A .pre-commit-config.yaml
A news/47959565.internal
A tox.ini
M pyproject.toml
M setup.cfg

b'diff --git a/.editorconfig b/.editorconfig\nnew file mode 100644\nindex 00000000..b4158b89\n--- /dev/null\n+++ b/.editorconfig\n@@ -0,0 +1,39 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+#\n+# EditorConfig Configuration file, for more details see:\n+# http://EditorConfig.org\n+# EditorConfig is a convention description, that could be interpreted\n+# by multiple editors to enforce common coding conventions for specific\n+# file types\n+\n+# top-most EditorConfig file:\n+# Will ignore other EditorConfig files in Home directory or upper tree level.\n+root = true\n+\n+\n+[*]  # For All Files\n+# Unix-style newlines with a newline ending every file\n+end_of_line = lf\n+insert_final_newline = true\n+trim_trailing_whitespace = true\n+# Set default charset\n+charset = utf-8\n+# Indent style default\n+indent_style = space\n+# Max Line Length - a hard line wrap, should be disabled\n+max_line_length = off\n+\n+[*.{py,cfg,ini}]\n+# 4 space indentation\n+indent_size = 4\n+\n+[*.{yml,zpt,pt,dtml,zcml}]\n+# 2 space indentation\n+indent_size = 2\n+\n+[{Makefile,.gitmodules}]\n+# Tab indentation (no size specified, but view as 4 spaces)\n+indent_style = tab\n+indent_size = unset\n+tab_width = unset\ndiff --git a/.meta.toml b/.meta.toml\nnew file mode 100644\nindex 00000000..07dde259\n--- /dev/null\n+++ b/.meta.toml\n@@ -0,0 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[meta]\n+template = "default"\n+commit-id = "47959565"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nnew file mode 100644\nindex 00000000..582f8acd\n--- /dev/null\n+++ b/.pre-commit-config.yaml\n@@ -0,0 +1,42 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+ci:\n+    autofix_prs: false\n+    autoupdate_schedule: monthly\n+\n+repos:\n+-   repo: https://github.com/asottile/pyupgrade\n+    rev: v3.3.1\n+    hooks:\n+    -   id: pyupgrade\n+        args: [--py38-plus]\n+-   repo: https://github.com/pycqa/isort\n+    rev: 5.12.0\n+    hooks:\n+    -   id: isort\n+-   repo: https://github.com/psf/black\n+    rev: 23.1.0\n+    hooks:\n+    -   id: black\n+-   repo: https://github.com/collective/zpretty\n+    rev: 3.0.2\n+    hooks:\n+    -   id: zpretty\n+-   repo: https://github.com/PyCQA/flake8\n+    rev: 6.0.0\n+    hooks:\n+    -   id: flake8\n+-   repo: https://github.com/codespell-project/codespell\n+    rev: v2.2.2\n+    hooks:\n+    -   id: codespell\n+        additional_dependencies:\n+          - tomli\n+-   repo: https://github.com/mgedmin/check-manifest\n+    rev: "0.49"\n+    hooks:\n+    -   id: check-manifest\n+-   repo: https://github.com/regebro/pyroma\n+    rev: "4.2"\n+    hooks:\n+    -   id: pyroma\ndiff --git a/news/47959565.internal b/news/47959565.internal\nnew file mode 100644\nindex 00000000..c08f5399\n--- /dev/null\n+++ b/news/47959565.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 05b615de..9eb73f3c 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,3 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [tool.towncrier]\n filename = "CHANGES.rst"\n directory = "news/"\n@@ -18,3 +20,43 @@ showcontent = true\n directory = "bugfix"\n name = "Bug fixes:"\n showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "internal"\n+name = "Internal:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "documentation"\n+name = "Documentation:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "tests"\n+name = "Tests"\n+showcontent = true\n+\n+[tool.isort]\n+profile = "plone"\n+\n+[tool.black]\n+target-version = ["py38"]\n+\n+[tool.dependencychecker]\n+Zope = [\n+  # Zope own provided namespaces\n+  \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n+  \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n+  \'Zope2\', \'webdav\', \'zmi\',\n+  # Zope dependencies\n+  \'Acquisition\', \'DateTime\', \'transaction\', \'zExceptions\', \'ZODB\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.deferredimport\', \'zope.event\',\n+  \'zope.exceptions\', \'zope.globalrequest\', \'zope.i18n\', \'zope.i18nmessageid\',\n+  \'zope.interface\', \'zope.lifecycleevent\', \'zope.location\', \'zope.publisher\',\n+  \'zope.schema\', \'zope.security\', \'zope.site\', \'zope.traversing\', \'AccessControl\',\n+]\n+\'plone.base\' = [\n+  \'AccessControl\', \'Products.BTreeFolder2\', \'Products.CMFCore\',\n+  \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n+]\n+python-dateutil = [\'dateutil\']\ndiff --git a/setup.cfg b/setup.cfg\nindex 70b390fa..0da8f8fb 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -1,17 +1,23 @@\n-[build_sphinx]\n-source-dir = docs/source\n-build-dir  = docs\n-all_files  = 1\n-\n-[upload_sphinx]\n-upload-dir = docs/html\n-\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [bdist_wheel]\n universal = 0\n \n-[isort]\n-# black compatible Plone isort rules:\n-profile = black\n-force_alphabetical_sort = True\n-force_single_line = True\n-lines_after_imports = 2\n+[flake8]\n+doctests = 1\n+ignore =\n+    # black takes care of line length\n+    E501,\n+    # black takes care of where to break lines\n+    W503,\n+    # black takes care of spaces within slicing (list[:])\n+    E203,\n+    # black takes care of spaces after commas\n+    E231,\n+\n+[check-manifest]\n+ignore =\n+    .editorconfig\n+    .meta.toml\n+    .pre-commit-config.yaml\n+    tox.ini\ndiff --git a/tox.ini b/tox.ini\nnew file mode 100644\nindex 00000000..fe28c83f\n--- /dev/null\n+++ b/tox.ini\n@@ -0,0 +1,53 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[tox]\n+# We need 4.4.0 for constrain_package_deps.\n+min_version = 4.4.0\n+envlist =\n+    format\n+    lint\n+    test\n+\n+[testenv]\n+allowlist_externals =\n+    sh\n+\n+[testenv:format]\n+description = automatically reformat code\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a pyupgrade\n+    pre-commit run -a isort\n+    pre-commit run -a black\n+    pre-commit run -a zpretty\n+\n+[testenv:lint]\n+description = run linters that will help improve the code style\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a\n+\n+[testenv:dependencies]\n+description = check if the package defines all its dependencies and generate a graph out of them\n+deps =\n+    z3c.dependencychecker==2.11\n+    pipdeptree==2.5.1\n+    graphviz  # optional dependency of pipdeptree\n+commands =\n+    dependencychecker\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+\n+[testenv:test]\n+usedevelop = true\n+constrain_package_deps = true\n+deps =\n+    zope.testrunner\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    zope-testrunner --test-path={toxinidir} -s plone.app.discussion\n+extras =\n+    test\n'

Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2023-04-01T14:33:46+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.discussion/commit/781fea1aaf0760fb86ae57216268b850cd2faeed

chore: pyupgrade

Files changed:
M plone/app/discussion/comment.py

b'diff --git a/plone/app/discussion/comment.py b/plone/app/discussion/comment.py\nindex 0186a6e9..3b8f8877 100644\n--- a/plone/app/discussion/comment.py\n+++ b/plone/app/discussion/comment.py\n@@ -138,7 +138,7 @@ def __getattribute__(self, attr):\n         # In older versions of the add-on dates were set timezone naive.\n         # In tz aware versions, the value is stored as self._creation_date\n         if attr in ["creation_date", "modification_date"]:\n-            old_date = super(Comment, self).__getattribute__(attr)\n+            old_date = super().__getattribute__(attr)\n             if old_date.tzinfo is None:\n                 # Naive dates were always stored utc\n                 return old_date.replace(tzinfo=timezone.utc)\n'

Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2023-04-01T14:33:47+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.discussion/commit/1bcadd11e402777b779c5c43ab44c1cc5765b9d6

chore: isort

Files changed:
M plone/app/discussion/comment.py
M plone/app/discussion/tests/test_indexers.py
M plone/app/discussion/upgrades.py

b'diff --git a/plone/app/discussion/comment.py b/plone/app/discussion/comment.py\nindex 3b8f8877..ec96ffea 100644\n--- a/plone/app/discussion/comment.py\n+++ b/plone/app/discussion/comment.py\n@@ -5,10 +5,10 @@\n from Acquisition import aq_base\n from Acquisition import aq_parent\n from Acquisition import Implicit\n+from datetime import timezone\n from OFS.owner import Owned\n from OFS.role import RoleManager\n from OFS.Traversable import Traversable\n-from datetime import timezone\n from persistent import Persistent\n from plone.app.discussion import _\n from plone.app.discussion.events import CommentAddedEvent\ndiff --git a/plone/app/discussion/tests/test_indexers.py b/plone/app/discussion/tests/test_indexers.py\nindex a6f577fe..76bb1077 100644\n--- a/plone/app/discussion/tests/test_indexers.py\n+++ b/plone/app/discussion/tests/test_indexers.py\n@@ -4,8 +4,8 @@\n from ..interfaces import IConversation\n from ..testing import PLONE_APP_DISCUSSION_INTEGRATION_TESTING  # noqa\n from datetime import datetime\n-from dateutil import tz\n from DateTime import DateTime\n+from dateutil import tz\n from plone.app.event.base import default_timezone\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\ndiff --git a/plone/app/discussion/upgrades.py b/plone/app/discussion/upgrades.py\nindex fbad45cf..f8c9ef8d 100644\n--- a/plone/app/discussion/upgrades.py\n+++ b/plone/app/discussion/upgrades.py\n@@ -1,9 +1,9 @@\n+from datetime import timezone\n+from plone import api\n from plone.app.discussion.interfaces import IDiscussionSettings\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from zope.component import getUtility\n-from plone import api\n-from datetime import timezone\n \n import logging\n \n'

Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2023-04-01T14:33:47+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.discussion/commit/7149d493fde73c8f22370fbeee9250a4711a41ab

chore: black

Files changed:
M plone/app/discussion/browser/comment.py
M plone/app/discussion/browser/comments.py
M plone/app/discussion/browser/traversal.py
M plone/app/discussion/catalog.py
M plone/app/discussion/conversation.py
M plone/app/discussion/testing.py
M plone/app/discussion/tests/test_catalog.py
M plone/app/discussion/tests/test_comment.py
M plone/app/discussion/tests/test_comments_viewlet.py
M plone/app/discussion/tests/test_controlpanel.py
M plone/app/discussion/tests/test_conversation.py
M plone/app/discussion/tests/test_events.py
M plone/app/discussion/tests/test_indexers.py
M plone/app/discussion/tests/test_moderation_multiple_state_view.py
M plone/app/discussion/tests/test_moderation_view.py
M plone/app/discussion/tests/test_notifications.py
M plone/app/discussion/tests/test_workflow.py
M plone/app/discussion/tool.py
M plone/app/discussion/upgrades.py

b'diff --git a/plone/app/discussion/browser/comment.py b/plone/app/discussion/browser/comment.py\nindex fc95a55c..d11dfeb4 100644\n--- a/plone/app/discussion/browser/comment.py\n+++ b/plone/app/discussion/browser/comment.py\n@@ -76,7 +76,6 @@ def _redirect(self, target=""):\n \n     @button.buttonAndHandler(_("label_save", default="Save"), name="comment")\n     def handleComment(self, action):\n-\n         # Validate form\n         data, errors = self.extractData()\n         if errors:\ndiff --git a/plone/app/discussion/browser/comments.py b/plone/app/discussion/browser/comments.py\nindex 02ca122d..272fdd64 100644\n--- a/plone/app/discussion/browser/comments.py\n+++ b/plone/app/discussion/browser/comments.py\n@@ -60,7 +60,6 @@\n \n \n class CommentForm(extensible.ExtensibleForm, form.Form):\n-\n     ignoreContext = True  # don\'t use context to get widget data\n     id = None\n     label = _("Add a comment")\n@@ -301,7 +300,6 @@ def handleCancel(self, action):\n \n \n class CommentsViewlet(ViewletBase):\n-\n     form = CommentForm\n     index = ViewPageTemplateFile("comments.pt")\n \n@@ -483,7 +481,6 @@ def get_commenter_home_url(self, username=None):\n             return f"{self.context.portal_url()}/author/{username}"\n \n     def get_commenter_portrait(self, username=None):\n-\n         if username is None:\n             # return the default user image if no username is given\n             return "defaultUser.png"\ndiff --git a/plone/app/discussion/browser/traversal.py b/plone/app/discussion/browser/traversal.py\nindex f626621d..863cde26 100644\n--- a/plone/app/discussion/browser/traversal.py\n+++ b/plone/app/discussion/browser/traversal.py\n@@ -27,7 +27,6 @@ def __init__(self, context, request=None):\n         self.request = request\n \n     def traverse(self, name, ignore):\n-\n         if name == "default":\n             name = ""\n \ndiff --git a/plone/app/discussion/catalog.py b/plone/app/discussion/catalog.py\nindex 5acb28ba..46b3293f 100644\n--- a/plone/app/discussion/catalog.py\n+++ b/plone/app/discussion/catalog.py\n@@ -103,7 +103,7 @@ def in_response_to(object):\n @indexer(IComment)\n def effective(object):\n     # the catalog index needs Zope DateTime instead of Python datetime\n-    return DT( object.creation_date )\n+    return DT(object.creation_date)\n \n \n @indexer(IComment)\ndiff --git a/plone/app/discussion/conversation.py b/plone/app/discussion/conversation.py\nindex 1cdb2663..9292e3fd 100644\n--- a/plone/app/discussion/conversation.py\n+++ b/plone/app/discussion/conversation.py\n@@ -135,7 +135,6 @@ def recurse(comment_id, d=0):\n         if comments is not None:\n             count = 0\n             for comment_id in comments.keys(min=start):\n-\n                 # Abort if we have found all the threads we want\n                 count += 1\n                 if size and count > size:\ndiff --git a/plone/app/discussion/testing.py b/plone/app/discussion/testing.py\nindex 8d057027..fe23d84f 100644\n--- a/plone/app/discussion/testing.py\n+++ b/plone/app/discussion/testing.py\n@@ -22,7 +22,6 @@\n \n \n class PloneAppDiscussion(PloneSandboxLayer):\n-\n     defaultBases = (PLONE_APP_CONTENTTYPES_FIXTURE,)\n \n     USER_NAME = "johndoe"\n@@ -101,7 +100,6 @@ def setUpPloneSite(self, portal):\n \n \n class PloneAppDiscussionRobot(PloneAppDiscussion):\n-\n     defaultBases = (\n         PLONE_APP_CONTENTTYPES_FIXTURE,\n         REMOTE_LIBRARY_ROBOT_TESTING,\ndiff --git a/plone/app/discussion/tests/test_catalog.py b/plone/app/discussion/tests/test_catalog.py\nindex 03af8e94..044d18bc 100644\n--- a/plone/app/discussion/tests/test_catalog.py\n+++ b/plone/app/discussion/tests/test_catalog.py\n@@ -19,7 +19,6 @@\n \n \n class CatalogSetupTest(unittest.TestCase):\n-\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\n@@ -51,7 +50,6 @@ def test_collection_criteria_installed(self):\n \n \n class ConversationCatalogTest(unittest.TestCase):\n-\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\n@@ -68,10 +66,12 @@ def setUp(self):\n         comment1.text = "Comment text"\n         comment1.creator = "jim"\n         comment1.author_username = "Jim"\n-        comment1.creation_date = \\\n-            datetime(2006, 9, 17, 14, 18, 12).astimezone(timezone.utc)\n-        comment1.modification_date = \\\n-            datetime(2006, 9, 17, 14, 18, 12).astimezone(timezone.utc)\n+        comment1.creation_date = datetime(2006, 9, 17, 14, 18, 12).astimezone(\n+            timezone.utc\n+        )\n+        comment1.modification_date = datetime(2006, 9, 17, 14, 18, 12).astimezone(\n+            timezone.utc\n+        )\n \n         new_comment1_id = conversation.addComment(comment1)\n         self.comment_id = new_comment1_id\n@@ -125,10 +125,12 @@ def test_last_comment_date(self):\n         comment2 = createObject("plone.Comment")\n         comment2.title = "Comment 2"\n         comment2.text = "Comment text"\n-        comment2.creation_date = \\\n-            datetime(2009, 9, 17, 14, 18, 12).astimezone(timezone.utc)\n-        comment2.modification_date = \\\n-            datetime(2009, 9, 17, 14, 18, 12).astimezone(timezone.utc)\n+        comment2.creation_date = datetime(2009, 9, 17, 14, 18, 12).astimezone(\n+            timezone.utc\n+        )\n+        comment2.modification_date = datetime(2009, 9, 17, 14, 18, 12).astimezone(\n+            timezone.utc\n+        )\n         new_comment2_id = self.conversation.addComment(comment2)\n \n         comment2 = self.portal.doc1.restrictedTraverse(\n@@ -267,7 +269,6 @@ def test_dont_index_private_commentators(self):\n \n \n class CommentCatalogTest(unittest.TestCase):\n-\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\n@@ -514,7 +515,6 @@ def test_clear_and_rebuild_catalog(self):\n         )\n \n     def test_clear_and_rebuild_catalog_for_nested_comments(self):\n-\n         # Create a nested comment structure:\n         #\n         # Conversation\n@@ -571,7 +571,6 @@ def test_clear_and_rebuild_catalog_for_nested_comments(self):\n \n \n class NoConversationCatalogTest(unittest.TestCase):\n-\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\ndiff --git a/plone/app/discussion/tests/test_comment.py b/plone/app/discussion/tests/test_comment.py\nindex f9a9ac05..1317b89d 100644\n--- a/plone/app/discussion/tests/test_comment.py\n+++ b/plone/app/discussion/tests/test_comment.py\n@@ -35,7 +35,6 @@ def normalize(value):\n \n \n class CommentTest(unittest.TestCase):\n-\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\n@@ -364,7 +363,6 @@ def test_view(self):\n \n \n class RepliesTest(unittest.TestCase):\n-\n     # test the IReplies adapter on a comment\n \n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\ndiff --git a/plone/app/discussion/tests/test_comments_viewlet.py b/plone/app/discussion/tests/test_comments_viewlet.py\nindex de325e37..062ff3fc 100644\n--- a/plone/app/discussion/tests/test_comments_viewlet.py\n+++ b/plone/app/discussion/tests/test_comments_viewlet.py\n@@ -67,7 +67,6 @@ def read(self, *args):\n \n \n class TestCommentForm(unittest.TestCase):\n-\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\n@@ -475,7 +474,6 @@ def make_request(form={}):\n \n \n class TestCommentsViewlet(unittest.TestCase):\n-\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\n@@ -516,7 +514,9 @@ def test_can_review(self):\n         # Anonymous has no \'can review\' permission\n         self.assertFalse(self.viewlet.can_review())\n         # The reviewer role has the \'Review comments\' permission\n-        self.portal.acl_users._doAddUser("reviewer", TEST_USER_PASSWORD, ["Reviewer"], [])\n+        self.portal.acl_users._doAddUser(\n+            "reviewer", TEST_USER_PASSWORD, ["Reviewer"], []\n+        )\n         login(self.portal, "reviewer")\n         self.assertTrue(self.viewlet.can_review())\n \n@@ -544,7 +544,6 @@ def test_is_discussion_allowed(self):\n         self.assertTrue(self.viewlet.is_discussion_allowed())\n \n     def test_comment_transform_message(self):\n-\n         # Default transform is plain/text and comment moderation disabled\n         self.assertTrue(self.viewlet.comment_transform_message())\n         self.assertEqual(\n@@ -657,7 +656,6 @@ def test_get_commenter_home_url_is_none(self):\n         self.assertFalse(self.viewlet.get_commenter_home_url())\n \n     def test_get_commenter_portrait(self):\n-\n         # Add a user with a member image\n         self.membershipTool.addMember("jim", "Jim", ["Member"], [])\n         self.memberdata._setPortrait(\n@@ -696,7 +694,6 @@ def test_get_commenter_portrait(self):\n         )\n \n     def test_get_commenter_portrait_is_none(self):\n-\n         self.assertTrue(\n             self.viewlet.get_commenter_portrait()\n             in (\n@@ -706,7 +703,6 @@ def test_get_commenter_portrait_is_none(self):\n         )\n \n     def test_get_commenter_portrait_without_userimage(self):\n-\n         # Create a user without a user image\n         self.membershipTool.addMember("jim", "Jim", ["Member"], [])\n \ndiff --git a/plone/app/discussion/tests/test_controlpanel.py b/plone/app/discussion/tests/test_controlpanel.py\nindex b148547e..25bb6a14 100644\n--- a/plone/app/discussion/tests/test_controlpanel.py\n+++ b/plone/app/discussion/tests/test_controlpanel.py\n@@ -14,7 +14,6 @@\n \n \n class RegistryTest(unittest.TestCase):\n-\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\n@@ -152,7 +151,6 @@ def test_moderator_notification_enabled(self):\n \n \n class ConfigurationChangedSubscriberTest(unittest.TestCase):\n-\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\ndiff --git a/plone/app/discussion/tests/test_conversation.py b/plone/app/discussion/tests/test_conversation.py\nindex b14888ec..6fc72913 100644\n--- a/plone/app/discussion/tests/test_conversation.py\n+++ b/plone/app/discussion/tests/test_conversation.py\n@@ -27,7 +27,6 @@\n \n \n class ConversationTest(unittest.TestCase):\n-\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\n@@ -99,7 +98,9 @@ def test_timezone_naive_comment(self):\n \n         # Check that comments have the correct portal timezones\n         self.assertTrue(comment.creation_date.tzinfo, tz.gettz("America/Los_Angeles"))\n-        self.assertTrue(comment.modification_date.tzinfo, tz.gettz("America/Los_Angeles"))\n+        self.assertTrue(\n+            comment.modification_date.tzinfo, tz.gettz("America/Los_Angeles")\n+        )\n \n         # Remove the timezone from the comment dates\n         comment.creation_date = datetime.utcnow()\n@@ -257,7 +258,6 @@ def test_comments_enabled_on_doc_in_subfolder(self):\n         self.assertEqual(conversation.enabled(), True)\n \n     def test_disable_commenting_globally(self):\n-\n         # Create a conversation.\n         conversation = self.portal.doc1.restrictedTraverse("@@conversation_view")\n \n@@ -283,7 +283,6 @@ def test_disable_commenting_globally(self):\n         self.assertEqual(conversation.enabled(), True)\n \n     def test_allow_discussion_for_news_items(self):\n-\n         self.typetool.constructContent("News Item", self.portal, "newsitem")\n         newsitem = self.portal.newsitem\n         conversation = newsitem.restrictedTraverse("@@conversation_view")\n@@ -310,7 +309,6 @@ def test_allow_discussion_for_news_items(self):\n         self.assertEqual(conversation.enabled(), True)\n \n     def test_disable_commenting_for_content_type(self):\n-\n         # Create a conversation.\n         conversation = self.portal.doc1.restrictedTraverse(\n             "@@conversation_view",\n@@ -601,7 +599,6 @@ def test_get_comments_batched(self):\n         pass\n \n     def test_get_threads(self):\n-\n         # Create a conversation. In this case we doesn\'t assign it to an\n         # object, as we just want to check the Conversation object API.\n         conversation = IConversation(self.portal.doc1)\n@@ -722,7 +719,6 @@ def test_no_comment(self):\n \n \n class ConversationEnabledForDexterityTypesTest(unittest.TestCase):\n-\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\n@@ -782,7 +778,6 @@ def test_enable_discussion(self):\n \n \n class RepliesTest(unittest.TestCase):\n-\n     # test the IReplies adapter on a conversation\n \n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\ndiff --git a/plone/app/discussion/tests/test_events.py b/plone/app/discussion/tests/test_events.py\nindex a6cc1cdb..24851f35 100644\n--- a/plone/app/discussion/tests/test_events.py\n+++ b/plone/app/discussion/tests/test_events.py\n@@ -68,7 +68,6 @@ class CommentEventsTest(unittest.TestCase):\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\n-\n         # Setup sandbox\n         self.portal = self.layer["portal"]\n         self.request = self.layer["request"]\ndiff --git a/plone/app/discussion/tests/test_indexers.py b/plone/app/discussion/tests/test_indexers.py\nindex 76bb1077..8a7bf192 100644\n--- a/plone/app/discussion/tests/test_indexers.py\n+++ b/plone/app/discussion/tests/test_indexers.py\n@@ -63,16 +63,24 @@ def setUp(self):\n         comment2.text = "Comment Text"\n         comment2.creator = "emma"\n         comment2.author_username = "Emma"\n-        comment2.creation_date = datetime(2007, 12, 13, 4, 18, 12).astimezone(self.portal_timezone)\n-        comment2.modification_date = datetime(2007, 12, 13, 4, 18, 12).astimezone(self.portal_timezone)\n+        comment2.creation_date = datetime(2007, 12, 13, 4, 18, 12).astimezone(\n+            self.portal_timezone\n+        )\n+        comment2.modification_date = datetime(2007, 12, 13, 4, 18, 12).astimezone(\n+            self.portal_timezone\n+        )\n         self.new_id2 = conversation.addComment(comment2)\n \n         comment3 = createObject("plone.Comment")\n         comment3.text = "Comment Text"\n         comment3.creator = "lukas"\n         comment3.author_username = "Lukas"\n-        comment3.creation_date = datetime(2009, 4, 12, 11, 12, 12).astimezone(self.portal_timezone)\n-        comment3.modification_date = datetime(2009, 4, 12, 11, 12, 12).astimezone(self.portal_timezone)\n+        comment3.creation_date = datetime(2009, 4, 12, 11, 12, 12).astimezone(\n+            self.portal_timezone\n+        )\n+        comment3.modification_date = datetime(2009, 4, 12, 11, 12, 12).astimezone(\n+            self.portal_timezone\n+        )\n         self.new_id3 = conversation.addComment(comment3)\n \n         self.conversation = conversation\n@@ -120,7 +128,6 @@ def test_conversation_commentators(self):\n \n \n class CommentIndexersTest(unittest.TestCase):\n-\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\n@@ -145,10 +152,14 @@ def setUp(self):\n         comment.author_name = "Jim"\n \n         # Create date in PDT (ie daylight savings)\n-        comment.creation_date = datetime(2006, 9, 17, 14, 18, 12).replace(tzinfo=tz.gettz("America/Los_Angeles"))\n+        comment.creation_date = datetime(2006, 9, 17, 14, 18, 12).replace(\n+            tzinfo=tz.gettz("America/Los_Angeles")\n+        )\n \n         # Create date in PST (ie not daylight savings)\n-        comment.modification_date = datetime(2008, 2, 12, 7, 32, 52).replace(tzinfo=tz.gettz("America/Los_Angeles"))\n+        comment.modification_date = datetime(2008, 2, 12, 7, 32, 52).replace(\n+            tzinfo=tz.gettz("America/Los_Angeles")\n+        )\n \n         self.comment_id = conversation.addComment(comment)\n         self.comment = comment.__of__(conversation)\ndiff --git a/plone/app/discussion/tests/test_moderation_multiple_state_view.py b/plone/app/discussion/tests/test_moderation_multiple_state_view.py\nindex 6a12a721..44f0f271 100644\n--- a/plone/app/discussion/tests/test_moderation_multiple_state_view.py\n+++ b/plone/app/discussion/tests/test_moderation_multiple_state_view.py\n@@ -16,7 +16,6 @@\n \n \n class ModerationBulkActionsViewTest(unittest.TestCase):\n-\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\ndiff --git a/plone/app/discussion/tests/test_moderation_view.py b/plone/app/discussion/tests/test_moderation_view.py\nindex 639eaa35..31e1074b 100644\n--- a/plone/app/discussion/tests/test_moderation_view.py\n+++ b/plone/app/discussion/tests/test_moderation_view.py\n@@ -16,7 +16,6 @@\n \n \n class ModerationViewTest(unittest.TestCase):\n-\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\n@@ -55,7 +54,6 @@ def test_moderation_enabled(self):\n \n \n class ModerationBulkActionsViewTest(unittest.TestCase):\n-\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\n@@ -148,7 +146,6 @@ def test_delete(self):\n \n \n class RedirectionTest(unittest.TestCase):\n-\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\ndiff --git a/plone/app/discussion/tests/test_notifications.py b/plone/app/discussion/tests/test_notifications.py\nindex 305c90ed..0ce72c89 100644\n--- a/plone/app/discussion/tests/test_notifications.py\n+++ b/plone/app/discussion/tests/test_notifications.py\n@@ -54,7 +54,6 @@ def send(\n \n \n class TestUserNotificationUnit(unittest.TestCase):\n-\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\n@@ -189,7 +188,6 @@ def test_notify_only_once(self):\n \n \n class TestModeratorNotificationUnit(unittest.TestCase):\n-\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\ndiff --git a/plone/app/discussion/tests/test_workflow.py b/plone/app/discussion/tests/test_workflow.py\nindex 39fb219c..3ecb8eac 100644\n--- a/plone/app/discussion/tests/test_workflow.py\n+++ b/plone/app/discussion/tests/test_workflow.py\n@@ -130,7 +130,9 @@ def setUp(self):\n         )\n \n         self.portal.acl_users._doAddUser("member", TEST_USER_PASSWORD, ["Member"], [])\n-        self.portal.acl_users._doAddUser("reviewer", TEST_USER_PASSWORD, ["Reviewer"], [])\n+        self.portal.acl_users._doAddUser(\n+            "reviewer", TEST_USER_PASSWORD, ["Reviewer"], []\n+        )\n         self.portal.acl_users._doAddUser("manager", TEST_USER_PASSWORD, ["Manager"], [])\n         self.portal.acl_users._doAddUser("editor", TEST_USER_PASSWORD, ["Editor"], [])\n         self.portal.acl_users._doAddUser("reader", TEST_USER_PASSWORD, ["Reader"], [])\ndiff --git a/plone/app/discussion/tool.py b/plone/app/discussion/tool.py\nindex 50f9361e..b249ead6 100644\n--- a/plone/app/discussion/tool.py\n+++ b/plone/app/discussion/tool.py\n@@ -15,7 +15,6 @@\n \n @interface.implementer(ICommentingTool)\n class CommentingTool(UniqueObject, SimpleItem):\n-\n     meta_type = "plone.app.discussion tool"\n     id = "portal_discussion"\n \ndiff --git a/plone/app/discussion/upgrades.py b/plone/app/discussion/upgrades.py\nindex f8c9ef8d..7e646324 100644\n--- a/plone/app/discussion/upgrades.py\n+++ b/plone/app/discussion/upgrades.py\n@@ -83,20 +83,21 @@ def extend_review_workflow(context):\n \n def set_timezone_on_dates(context):\n     """Ensure timezone data is stored against all creation/modified dates"""\n-    pc = api.portal.get_tool(\'portal_catalog\')\n+    pc = api.portal.get_tool("portal_catalog")\n     creations = 0\n     modifieds = 0\n-    logger.info(\'Setting timezone information on comment dates\')\n-    comments = pc.search({\'Type\': \'Comment\'})\n+    logger.info("Setting timezone information on comment dates")\n+    comments = pc.search({"Type": "Comment"})\n     for cbrain in comments:\n         comment = cbrain.getObject()\n         if not comment.creation_date.tzinfo:\n             creations += 1\n-            comment.creation_date = \\\n-                comment.creation_date.astimezone(timezone.utc)\n+            comment.creation_date = comment.creation_date.astimezone(timezone.utc)\n         if not comment.modification_date.tzinfo:\n             modifieds += 1\n-            comment.modification_date = \\\n-                comment.modification_date.astimezone(timezone.utc)\n-    logger.info(\'Updated %i creation dates and %i modification dates\' %\n-                (creations, modifieds))\n+            comment.modification_date = comment.modification_date.astimezone(\n+                timezone.utc\n+            )\n+    logger.info(\n+        "Updated %i creation dates and %i modification dates" % (creations, modifieds)\n+    )\n'

Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2023-04-01T14:33:47+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.discussion/commit/c38fa500e929e51eb2eb289097054c85710db601

chore: zpretty ZCML/XML

Files changed:
M plone/app/discussion/browser/captcha.zcml
M plone/app/discussion/browser/configure.zcml
M plone/app/discussion/configure.zcml
M plone/app/discussion/contentrules.zcml
M plone/app/discussion/notifications.zcml
M plone/app/discussion/permissions.zcml
M plone/app/discussion/profiles/default/actions.xml
M plone/app/discussion/profiles/default/browserlayer.xml
M plone/app/discussion/profiles/default/catalog.xml
M plone/app/discussion/profiles/default/controlpanel.xml
M plone/app/discussion/profiles/default/metadata.xml
M plone/app/discussion/profiles/default/portal_atct.xml
M plone/app/discussion/profiles/default/registry.xml
M plone/app/discussion/profiles/default/rolemap.xml
M plone/app/discussion/profiles/default/types.xml
M plone/app/discussion/profiles/default/types/Discussion_Item.xml
M plone/app/discussion/profiles/default/workflows.xml
M plone/app/discussion/profiles/default/workflows/comment_one_state_workflow/definition.xml
M plone/app/discussion/profiles/default/workflows/comment_review_workflow/definition.xml
M plone/app/discussion/subscribers.zcml
M plone/app/discussion/upgrades.zcml

b'diff --git a/plone/app/discussion/browser/captcha.zcml b/plone/app/discussion/browser/captcha.zcml\nindex 23951636..22ff8e02 100644\n--- a/plone/app/discussion/browser/captcha.zcml\n+++ b/plone/app/discussion/browser/captcha.zcml\n@@ -2,34 +2,37 @@\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:meta="http://namespaces.zope.org/meta"\n     xmlns:zcml="http://namespaces.zope.org/zcml"\n-    i18n_domain="plone">\n+    i18n_domain="plone"\n+    >\n \n-    <!-- Captcha comment form extender -->\n-    <configure zcml:condition="have plone.app.discussion-captcha">\n-        <!--\n+  <!-- Captcha comment form extender -->\n+  <configure zcml:condition="have plone.app.discussion-captcha">\n+    <!--\n           Register the Captcha form extender and validator only if there are\n           plugins installed that declare to implement a Captcha solution for\n           plone.app.discussion (e.g. plone.formwidget.captcha and\n           plone.formwidget.recaptcha).\n         -->\n-        <adapter\n-            factory=".captcha.Captcha"\n-            provides="plone.app.discussion.interfaces.ICaptcha" />\n-        <adapter\n-            factory=".captcha.CaptchaExtender"\n-            provides="plone.z3cform.fieldsets.interfaces.IFormExtender" />\n-        <adapter\n-            factory=".validator.CaptchaValidator"\n-            provides="z3c.form.interfaces.IValidator"\n-            />\n-    </configure>\n+    <adapter\n+        factory=".captcha.Captcha"\n+        provides="plone.app.discussion.interfaces.ICaptcha"\n+        />\n+    <adapter\n+        factory=".captcha.CaptchaExtender"\n+        provides="plone.z3cform.fieldsets.interfaces.IFormExtender"\n+        />\n+    <adapter\n+        factory=".validator.CaptchaValidator"\n+        provides="z3c.form.interfaces.IValidator"\n+        />\n+  </configure>\n \n-    <!-- Akismet Validator -->\n-    <configure zcml:condition="installed collective.akismet">\n-        <adapter\n-            factory="collective.akismet.validator.AkismetValidator"\n-            provides="z3c.form.interfaces.IValidator"\n-            />\n-    </configure>\n+  <!-- Akismet Validator -->\n+  <configure zcml:condition="installed collective.akismet">\n+    <adapter\n+        factory="collective.akismet.validator.AkismetValidator"\n+        provides="z3c.form.interfaces.IValidator"\n+        />\n+  </configure>\n \n </configure>\ndiff --git a/plone/app/discussion/browser/configure.zcml b/plone/app/discussion/browser/configure.zcml\nindex 0892259a..4ab73359 100644\n--- a/plone/app/discussion/browser/configure.zcml\n+++ b/plone/app/discussion/browser/configure.zcml\n@@ -3,154 +3,158 @@\n     xmlns:browser="http://namespaces.zope.org/browser"\n     xmlns:plone="http://namespaces.plone.org/plone"\n     xmlns:zcml="http://namespaces.zope.org/zcml"\n-    i18n_domain="plone">\n-\n-    <include package="plone.app.registry" />\n-\n-    <include file="captcha.zcml" />\n-\n-    <!-- Traversal adapter -->\n-    <adapter factory=".traversal.ConversationNamespace" name="conversation" />\n-\n-    <!-- Moderation view -->\n-    <browser:page\n-        for="Products.CMFCore.interfaces.ISiteRoot"\n-        name="moderate-comments"\n-        layer="..interfaces.IDiscussionLayer"\n-        class=".moderation.View"\n-        permission="plone.app.discussion.ReviewComments"\n-        />\n-\n-    <browser:page\n-        for="plone.app.layout.navigation.interfaces.INavigationRoot"\n-        name="moderate-comments"\n-        layer="..interfaces.IDiscussionLayer"\n-        class=".moderation.View"\n-        permission="plone.app.discussion.ReviewComments"\n-        />\n-\n-    <!-- Moderation bulk actions view -->\n-    <browser:page\n-        for="Products.CMFCore.interfaces.ISiteRoot"\n-        name="bulk-actions"\n-        layer="..interfaces.IDiscussionLayer"\n-        class=".moderation.BulkActionsView"\n-        permission="plone.app.discussion.ReviewComments"\n-        />\n-\n-    <browser:page\n-        for="plone.app.layout.navigation.interfaces.INavigationRoot"\n-        name="bulk-actions"\n-        layer="..interfaces.IDiscussionLayer"\n-        class=".moderation.BulkActionsView"\n-        permission="plone.app.discussion.ReviewComments"\n-        />\n-\n-    <!-- Moderate comments enabled view -->\n-    <browser:page\n-        for="plone.base.interfaces.IPloneSiteRoot"\n-        name="moderate-comments-enabled"\n-        layer="..interfaces.IDiscussionLayer"\n-        class=".moderation.ModerateCommentsEnabled"\n-        permission="zope2.View"\n-        />\n-\n-    <browser:page\n-        for="plone.app.layout.navigation.interfaces.INavigationRoot"\n-        name="moderate-comments-enabled"\n-        layer="..interfaces.IDiscussionLayer"\n-        class=".moderation.ModerateCommentsEnabled"\n-        permission="zope2.View"\n-        />\n-\n-    <!-- Edit comment view -->\n-    <browser:page\n-        for="plone.app.discussion.interfaces.IComment"\n-        name="edit-comment"\n-        layer="..interfaces.IDiscussionLayer"\n-        class=".comment.EditComment"\n-        permission="plone.app.discussion.EditComments"\n-        />\n-\n-    <!-- Delete comment views\n+    i18n_domain="plone"\n+    >\n+\n+  <include package="plone.app.registry" />\n+\n+  <include file="captcha.zcml" />\n+\n+  <!-- Traversal adapter -->\n+  <adapter\n+      factory=".traversal.ConversationNamespace"\n+      name="conversation"\n+      />\n+\n+  <!-- Moderation view -->\n+  <browser:page\n+      name="moderate-comments"\n+      for="Products.CMFCore.interfaces.ISiteRoot"\n+      class=".moderation.View"\n+      permission="plone.app.discussion.ReviewComments"\n+      layer="..interfaces.IDiscussionLayer"\n+      />\n+\n+  <browser:page\n+      name="moderate-comments"\n+      for="plone.app.layout.navigation.interfaces.INavigationRoot"\n+      class=".moderation.View"\n+      permission="plone.app.discussion.ReviewComments"\n+      layer="..interfaces.IDiscussionLayer"\n+      />\n+\n+  <!-- Moderation bulk actions view -->\n+  <browser:page\n+      name="bulk-actions"\n+      for="Products.CMFCore.interfaces.ISiteRoot"\n+      class=".moderation.BulkActionsView"\n+      permission="plone.app.discussion.ReviewComments"\n+      layer="..interfaces.IDiscussionLayer"\n+      />\n+\n+  <browser:page\n+      name="bulk-actions"\n+      for="plone.app.layout.navigation.interfaces.INavigationRoot"\n+      class=".moderation.BulkActionsView"\n+      permission="plone.app.discussion.ReviewComments"\n+      layer="..interfaces.IDiscussionLayer"\n+      />\n+\n+  <!-- Moderate comments enabled view -->\n+  <browser:page\n+      name="moderate-comments-enabled"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n+      class=".moderation.ModerateCommentsEnabled"\n+      permission="zope2.View"\n+      layer="..interfaces.IDiscussionLayer"\n+      />\n+\n+  <browser:page\n+      name="moderate-comments-enabled"\n+      for="plone.app.layout.navigation.interfaces.INavigationRoot"\n+      class=".moderation.ModerateCommentsEnabled"\n+      permission="zope2.View"\n+      layer="..interfaces.IDiscussionLayer"\n+      />\n+\n+  <!-- Edit comment view -->\n+  <browser:page\n+      name="edit-comment"\n+      for="plone.app.discussion.interfaces.IComment"\n+      class=".comment.EditComment"\n+      permission="plone.app.discussion.EditComments"\n+      layer="..interfaces.IDiscussionLayer"\n+      />\n+\n+  <!-- Delete comment views\n          has conditional security dependent on controlpanel settings.\n     -->\n-    <browser:page\n-        for="plone.app.discussion.interfaces.IComment"\n-        name="moderate-delete-comment"\n-        layer="..interfaces.IDiscussionLayer"\n-        class=".moderation.DeleteComment"\n-        permission="plone.app.discussion.DeleteComments"\n-        />\n-\n-    <browser:page\n-        for="plone.app.discussion.interfaces.IComment"\n-        name="delete-own-comment"\n-        layer="..interfaces.IDiscussionLayer"\n-        class=".moderation.DeleteOwnComment"\n-        permission="plone.app.discussion.DeleteOwnComments"\n-        />\n-\n-    <!-- Comment Transition -->\n-    <browser:page\n-        for="plone.app.discussion.interfaces.IComment"\n-        name="transmit-comment"\n-        layer="..interfaces.IDiscussionLayer"\n-        class=".moderation.CommentTransition"\n-        permission="plone.app.discussion.ReviewComments"\n-        />\n-\n-    <browser:page\n-        for="*"\n-        name="translationhelper"\n-        layer="..interfaces.IDiscussionLayer"\n-        class=".moderation.TranslationHelper"\n-        permission="plone.app.discussion.ReviewComments"\n-        />\n-\n-\n-    <!-- Comments viewlet -->\n-    <browser:viewlet\n-        name="plone.comments"\n-        for="Products.CMFCore.interfaces.IContentish"\n-        layer="..interfaces.IDiscussionLayer"\n-        manager="plone.app.layout.viewlets.interfaces.IBelowContent"\n-        view="plone.app.layout.globals.interfaces.IViewView"\n-        class=".comments.CommentsViewlet"\n-        permission="plone.app.discussion.ViewComments"\n-        />\n-\n-    <!-- Conversation view -->\n-    <browser:page\n-        name="conversation_view"\n-        for="Products.CMFCore.interfaces.IContentish"\n-        layer="..interfaces.IDiscussionLayer"\n-        class=".conversation.ConversationView"\n-        permission="zope2.View"\n-        />\n-\n-    <!-- Comment view -->\n-    <browser:view\n-        name="view"\n-        for="plone.app.discussion.interfaces.IComment"\n-        layer="..interfaces.IDiscussionLayer"\n-        class=".comment.View"\n-        permission="zope2.View"\n-        />\n-\n-    <!-- Control panel -->\n-    <browser:page\n-        name="discussion-controlpanel"\n-        for="plone.base.interfaces.IPloneSiteRoot"\n-        class=".controlpanel.DiscussionSettingsControlPanel"\n-        permission="cmf.ManagePortal"\n-        />\n-    <!-- Deprecated controlpanel url -->\n-    <browser:page\n-        name="discussion-settings"\n-        for="plone.base.interfaces.IPloneSiteRoot"\n-        class=".controlpanel.DiscussionSettingsControlPanel"\n-        permission="cmf.ManagePortal"\n-        />\n+  <browser:page\n+      name="moderate-delete-comment"\n+      for="plone.app.discussion.interfaces.IComment"\n+      class=".moderation.DeleteComment"\n+      permission="plone.app.discussion.DeleteComments"\n+      layer="..interfaces.IDiscussionLayer"\n+      />\n+\n+  <browser:page\n+      name="delete-own-comment"\n+      for="plone.app.discussion.interfaces.IComment"\n+      class=".moderation.DeleteOwnComment"\n+      permission="plone.app.discussion.DeleteOwnComments"\n+      layer="..interfaces.IDiscussionLayer"\n+      />\n+\n+  <!-- Comment Transition -->\n+  <browser:page\n+      name="transmit-comment"\n+      for="plone.app.discussion.interfaces.IComment"\n+      class=".moderation.CommentTransition"\n+      permission="plone.app.discussion.ReviewComments"\n+      layer="..interfaces.IDiscussionLayer"\n+      />\n+\n+  <browser:page\n+      name="translationhelper"\n+      for="*"\n+      class=".moderation.TranslationHelper"\n+      permission="plone.app.discussion.ReviewComments"\n+      layer="..interfaces.IDiscussionLayer"\n+      />\n+\n+\n+  <!-- Comments viewlet -->\n+  <browser:viewlet\n+      name="plone.comments"\n+      for="Products.CMFCore.interfaces.IContentish"\n+      view="plone.app.layout.globals.interfaces.IViewView"\n+      manager="plone.app.layout.viewlets.interfaces.IBelowContent"\n+      class=".comments.CommentsViewlet"\n+      permission="plone.app.discussion.ViewComments"\n+      layer="..interfaces.IDiscussionLayer"\n+      />\n+\n+  <!-- Conversation view -->\n+  <browser:page\n+      name="conversation_view"\n+      for="Products.CMFCore.interfaces.IContentish"\n+      class=".conversation.ConversationView"\n+      permission="zope2.View"\n+      layer="..interfaces.IDiscussionLayer"\n+      />\n+\n+  <!-- Comment view -->\n+  <browser:view\n+      name="view"\n+      for="plone.app.discussion.interfaces.IComment"\n+      class=".comment.View"\n+      permission="zope2.View"\n+      layer="..interfaces.IDiscussionLayer"\n+      />\n+\n+  <!-- Control panel -->\n+  <browser:page\n+      name="discussion-controlpanel"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n+      class=".controlpanel.DiscussionSettingsControlPanel"\n+      permission="cmf.ManagePortal"\n+      />\n+  <!-- Deprecated controlpanel url -->\n+  <browser:page\n+      name="discussion-settings"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n+      class=".controlpanel.DiscussionSettingsControlPanel"\n+      permission="cmf.ManagePortal"\n+      />\n \n </configure>\ndiff --git a/plone/app/discussion/configure.zcml b/plone/app/discussion/configure.zcml\nindex fb72ceef..4d5a1501 100644\n--- a/plone/app/discussion/configure.zcml\n+++ b/plone/app/discussion/configure.zcml\n@@ -1,102 +1,161 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n+    xmlns:five="http://namespaces.zope.org/five"\n     xmlns:genericsetup="http://namespaces.zope.org/genericsetup"\n     xmlns:i18n="http://namespaces.zope.org/i18n"\n     xmlns:zcml="http://namespaces.zope.org/zcml"\n-    xmlns:five="http://namespaces.zope.org/five"\n-    i18n_domain="plone">\n-\n-    <five:registerPackage package="." />\n-\n-    <include package="plone.indexer" />\n-    <include package="plone.app.registry" />\n-    <include package="plone.resource" />\n-    <include package="plone.uuid" />\n-    <include package="plone.app.uuid" />\n-\n-    <include file="contentrules.zcml" />\n-    <include file="permissions.zcml" />\n-    <include file="notifications.zcml" />\n-    <include file="subscribers.zcml" />\n-    <include file="upgrades.zcml" />\n-\n-    <!-- load captch before browser -->\n-    <configure zcml:condition="installed plone.formwidget.captcha">\n-      <include package="plone.formwidget.captcha" />\n-    </configure>\n-    <configure zcml:condition="installed plone.formwidget.recaptcha">\n-      <include package="plone.formwidget.recaptcha" />\n-    </configure>\n-    <configure zcml:condition="installed collective.z3cform.norobots">\n-      <include package="collective.z3cform.norobots" />\n-    </configure>\n-    <include package=".browser" />\n-\n-    <!-- Register the installation GenericSetup extension profile -->\n-    <genericsetup:registerProfile\n-        name="default"\n-        title="Plone Discussions"\n-        description="Commenting infrastructure for Plone"\n-        directory="profiles/default"\n-        provides="Products.GenericSetup.interfaces.EXTENSION"\n-        for="plone.base.interfaces.IPloneSiteRoot"\n+    i18n_domain="plone"\n+    >\n+\n+  <five:registerPackage package="." />\n+\n+  <include package="plone.indexer" />\n+  <include package="plone.app.registry" />\n+  <include package="plone.resource" />\n+  <include package="plone.uuid" />\n+  <include package="plone.app.uuid" />\n+\n+  <include file="contentrules.zcml" />\n+  <include file="permissions.zcml" />\n+  <include file="notifications.zcml" />\n+  <include file="subscribers.zcml" />\n+  <include file="upgrades.zcml" />\n+\n+  <!-- load captch before browser -->\n+  <configure zcml:condition="installed plone.formwidget.captcha">\n+    <include package="plone.formwidget.captcha" />\n+  </configure>\n+  <configure zcml:condition="installed plone.formwidget.recaptcha">\n+    <include package="plone.formwidget.recaptcha" />\n+  </configure>\n+  <configure zcml:condition="installed collective.z3cform.norobots">\n+    <include package="collective.z3cform.norobots" />\n+  </configure>\n+  <include package=".browser" />\n+\n+  <!-- Register the installation GenericSetup extension profile -->\n+  <genericsetup:registerProfile\n+      name="default"\n+      title="Plone Discussions"\n+      description="Commenting infrastructure for Plone"\n+      provides="Products.GenericSetup.interfaces.EXTENSION"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n+      directory="profiles/default"\n+      />\n+  <!-- For upgrade steps see upgrades.zcml. -->\n+\n+  <!-- Comments -->\n+\n+  <class class=".comment.Comment">\n+    <require\n+        permission="zope2.View"\n+        interface=".interfaces.IComment"\n         />\n-    <!-- For upgrade steps see upgrades.zcml. -->\n+    <require\n+        permission="zope2.View"\n+        attributes="Title Creator getId getText"\n+        />\n+  </class>\n \n-    <!-- Comments -->\n+  <class class=".comment.Comment">\n+    <implements interface="plone.uuid.interfaces.IAttributeUUID" />\n+  </class>\n \n-    <class class=".comment.Comment">\n-        <require interface=".interfaces.IComment" permission="zope2.View" />\n-        <require attributes="Title Creator getId getText" permission="zope2.View" />\n-    </class>\n+  <utility\n+      name="plone.Comment"\n+      component=".comment.CommentFactory"\n+      />\n \n-    <class class=".comment.Comment">\n-        <implements interface="plone.uuid.interfaces.IAttributeUUID" />\n-    </class>\n+  <!-- Conversations -->\n \n-    <utility\n-        component=".comment.CommentFactory"\n-        name="plone.Comment"\n+  <class class=".conversation.Conversation">\n+    <require\n+        permission="zope2.View"\n+        interface=".interfaces.IConversation"\n         />\n-\n-    <!-- Conversations -->\n-\n-    <class class=".conversation.Conversation">\n-        <require interface=".interfaces.IConversation" permission="zope2.View" />\n-    </class>\n-\n-    <adapter factory=".conversation.conversationAdapterFactory" />\n-\n-    <adapter factory=".conversation.ConversationReplies" />\n-    <adapter factory=".conversation.CommentReplies" />\n-\n-    <!-- Captcha Vocabulary -->\n-    <utility component=".vocabularies.captcha_vocabulary"\n-             name="plone.app.discussion.vocabularies.CaptchaVocabulary"\n-             provides="zope.schema.interfaces.IVocabularyFactory" />\n-\n-    <!-- Text Transform Vocabulary -->\n-    <utility component=".vocabularies.text_transform_vocabulary"\n-             name="plone.app.discussion.vocabularies.TextTransformVocabulary"\n-             provides="zope.schema.interfaces.IVocabularyFactory" />\n-\n-    <!-- Conversation indexes -->\n-    <adapter name="total_comments" factory=".catalog.total_comments" />\n-    <adapter name="last_comment_date" factory=".catalog.last_comment_date" />\n-    <adapter name="commentators" factory=".catalog.commentators" />\n-    <adapter name="in_response_to" factory=".catalog.in_response_to" />\n-\n-    <!-- Comment indexes -->\n-    <adapter name="UID" factory=".catalog.UID" />\n-    <adapter name="Title" factory=".catalog.title" />\n-    <adapter name="Creator" factory=".catalog.creator" />\n-    <adapter name="Description" factory=".catalog.description" />\n-    <adapter name="SearchableText" factory=".catalog.searchable_text" />\n-    <adapter name="effective" factory=".catalog.effective" />\n-    <adapter name="created" factory=".catalog.created" />\n-    <adapter name="modified" factory=".catalog.modified" />\n-    <adapter name="total_comments" factory=".catalog.comments_total_comments" />\n-    <adapter name="last_comment_date" factory=".catalog.comments_last_comment_date" />\n-    <adapter name="commentators" factory=".catalog.comments_commentators" />\n+  </class>\n+\n+  <adapter factory=".conversation.conversationAdapterFactory" />\n+\n+  <adapter factory=".conversation.ConversationReplies" />\n+  <adapter factory=".conversation.CommentReplies" />\n+\n+  <!-- Captcha Vocabulary -->\n+  <utility\n+      provides="zope.schema.interfaces.IVocabularyFactory"\n+      name="plone.app.discussion.vocabularies.CaptchaVocabulary"\n+      component=".vocabularies.captcha_vocabulary"\n+      />\n+\n+  <!-- Text Transform Vocabulary -->\n+  <utility\n+      provides="zope.schema.interfaces.IVocabularyFactory"\n+      name="plone.app.discussion.vocabularies.TextTransformVocabulary"\n+      component=".vocabularies.text_transform_vocabulary"\n+      />\n+\n+  <!-- Conversation indexes -->\n+  <adapter\n+      factory=".catalog.total_comments"\n+      name="total_comments"\n+      />\n+  <adapter\n+      factory=".catalog.last_comment_date"\n+      name="last_comment_date"\n+      />\n+  <adapter\n+      factory=".catalog.commentators"\n+      name="commentators"\n+      />\n+  <adapter\n+      factory=".catalog.in_response_to"\n+      name="in_response_to"\n+      />\n+\n+  <!-- Comment indexes -->\n+  <adapter\n+      factory=".catalog.UID"\n+      name="UID"\n+      />\n+  <adapter\n+      factory=".catalog.title"\n+      name="Title"\n+      />\n+  <adapter\n+      factory=".catalog.creator"\n+      name="Creator"\n+      />\n+  <adapter\n+      factory=".catalog.description"\n+      name="Description"\n+      />\n+  <adapter\n+      factory=".catalog.searchable_text"\n+      name="SearchableText"\n+      />\n+  <adapter\n+      factory=".catalog.effective"\n+      name="effective"\n+      />\n+  <adapter\n+      factory=".catalog.created"\n+      name="created"\n+      />\n+  <adapter\n+      factory=".catalog.modified"\n+      name="modified"\n+      />\n+  <adapter\n+      factory=".catalog.comments_total_comments"\n+      name="total_comments"\n+      />\n+  <adapter\n+      factory=".catalog.comments_last_comment_date"\n+      name="last_comment_date"\n+      />\n+  <adapter\n+      factory=".catalog.comments_commentators"\n+      name="commentators"\n+      />\n \n </configure>\ndiff --git a/plone/app/discussion/contentrules.zcml b/plone/app/discussion/contentrules.zcml\nindex 82169462..20e96d50 100644\n--- a/plone/app/discussion/contentrules.zcml\n+++ b/plone/app/discussion/contentrules.zcml\n@@ -1,45 +1,46 @@\n <configure\n-  xmlns="http://namespaces.zope.org/zope"\n-  xmlns:zcml="http://namespaces.zope.org/zcml">\n+    xmlns="http://namespaces.zope.org/zope"\n+    xmlns:zcml="http://namespaces.zope.org/zcml"\n+    >\n \n   <!-- Content Rules events -->\n   <configure zcml:condition="installed plone.contentrules">\n \n     <interface\n-      interface="plone.app.discussion.interfaces.ICommentAddedEvent"\n-      type="plone.contentrules.rule.interfaces.IRuleEventType"\n-      name="Comment added"\n-      />\n+        interface="plone.app.discussion.interfaces.ICommentAddedEvent"\n+        type="plone.contentrules.rule.interfaces.IRuleEventType"\n+        name="Comment added"\n+        />\n \n     <interface\n-      interface="plone.app.discussion.interfaces.ICommentRemovedEvent"\n-      type="plone.contentrules.rule.interfaces.IRuleEventType"\n-      name="Comment removed"\n-      />\n+        interface="plone.app.discussion.interfaces.ICommentRemovedEvent"\n+        type="plone.contentrules.rule.interfaces.IRuleEventType"\n+        name="Comment removed"\n+        />\n \n     <interface\n-      interface="plone.app.discussion.interfaces.IReplyAddedEvent"\n-      type="plone.contentrules.rule.interfaces.IRuleEventType"\n-      name="Comment reply added"\n-      />\n+        interface="plone.app.discussion.interfaces.IReplyAddedEvent"\n+        type="plone.contentrules.rule.interfaces.IRuleEventType"\n+        name="Comment reply added"\n+        />\n \n     <interface\n-      interface="plone.app.discussion.interfaces.IReplyRemovedEvent"\n-      type="plone.contentrules.rule.interfaces.IRuleEventType"\n-      name="Comment reply removed"\n-      />\n-      \n+        interface="plone.app.discussion.interfaces.IReplyRemovedEvent"\n+        type="plone.contentrules.rule.interfaces.IRuleEventType"\n+        name="Comment reply removed"\n+        />\n+\n     <interface\n-      interface="plone.app.discussion.interfaces.ICommentPublishedEvent"\n-      type="plone.contentrules.rule.interfaces.IRuleEventType"\n-      name="Notify user on comment publication"\n-      />\n-      \n+        interface="plone.app.discussion.interfaces.ICommentPublishedEvent"\n+        type="plone.contentrules.rule.interfaces.IRuleEventType"\n+        name="Notify user on comment publication"\n+        />\n+\n     <interface\n-      interface="plone.app.discussion.interfaces.ICommentDeletedEvent"\n-      type="plone.contentrules.rule.interfaces.IRuleEventType"\n-      name="Notify user on comment delete"\n-      />\n+        interface="plone.app.discussion.interfaces.ICommentDeletedEvent"\n+        type="plone.contentrules.rule.interfaces.IRuleEventType"\n+        name="Notify user on comment delete"\n+        />\n \n   </configure>\n \n@@ -48,73 +49,73 @@\n   <configure zcml:condition="installed plone.app.contentrules">\n \n     <subscriber\n-      for="plone.app.discussion.interfaces.ICommentAddedEvent"\n-      handler=".contentrules.execute_comment"\n-      />\n+        for="plone.app.discussion.interfaces.ICommentAddedEvent"\n+        handler=".contentrules.execute_comment"\n+        />\n \n     <subscriber\n-      for="plone.app.discussion.interfaces.ICommentRemovedEvent"\n-      handler=".contentrules.execute_comment"\n-      />\n+        for="plone.app.discussion.interfaces.ICommentRemovedEvent"\n+        handler=".contentrules.execute_comment"\n+        />\n \n     <subscriber\n-      for="plone.app.discussion.interfaces.IReplyAddedEvent"\n-      handler=".contentrules.execute_comment"\n-      />\n+        for="plone.app.discussion.interfaces.IReplyAddedEvent"\n+        handler=".contentrules.execute_comment"\n+        />\n \n     <subscriber\n-      for="plone.app.discussion.interfaces.IReplyRemovedEvent"\n-      handler=".contentrules.execute_comment"\n-      />\n-      \n+        for="plone.app.discussion.interfaces.IReplyRemovedEvent"\n+        handler=".contentrules.execute_comment"\n+        />\n+\n     <subscriber\n-      for="plone.app.discussion.interfaces.ICommentDeletedEvent"\n-      handler=".contentrules.execute_comment"\n-      />\n-      \n+        for="plone.app.discussion.interfaces.ICommentDeletedEvent"\n+        handler=".contentrules.execute_comment"\n+        />\n+\n     <subscriber\n-      for="plone.app.discussion.interfaces.ICommentPublishedEvent"\n-      handler=".contentrules.execute_comment"\n-      />\n+        for="plone.app.discussion.interfaces.ICommentPublishedEvent"\n+        handler=".contentrules.execute_comment"\n+        />\n \n   </configure>\n \n   <!-- Content rules strings -->\n   <configure zcml:condition="installed plone.stringinterp">\n     <adapter\n-      for="zope.interface.Interface"\n-      provides="plone.stringinterp.interfaces.IStringSubstitution"\n-      factory=".contentrules.Id"\n-      name="comment_id"\n-      />\n+        factory=".contentrules.Id"\n+        provides="plone.stringinterp.interfaces.IStringSubstitution"\n+        for="zope.interface.Interface"\n+        name="comment_id"\n+        />\n \n     <adapter\n-      for="zope.interface.Interface"\n-      provides="plone.stringinterp.interfaces.IStringSubstitution"\n-      factory=".contentrules.Text"\n-      name="comment_text"\n-      />\n+        factory=".contentrules.Text"\n+        provides="plone.stringinterp.interfaces.IStringSubstitution"\n+        for="zope.interface.Interface"\n+        name="comment_text"\n+        />\n \n     <adapter\n-      for="zope.interface.Interface"\n-      provides="plone.stringinterp.interfaces.IStringSubstitution"\n-      factory=".contentrules.AuthorUserName"\n-      name="comment_user_id"\n-      />\n+        factory=".contentrules.AuthorUserName"\n+        provides="plone.stringinterp.interfaces.IStringSubstitution"\n+        for="zope.interface.Interface"\n+        name="comment_user_id"\n+        />\n \n     <adapter\n-      for="zope.interface.Interface"\n-      provides="plone.stringinterp.interfaces.IStringSubstitution"\n-      factory=".contentrules.AuthorFullName"\n-      name="comment_user_fullname"\n-      />\n+        factory=".contentrules.AuthorFullName"\n+        provides="plone.stringinterp.interfaces.IStringSubstitution"\n+        for="zope.interface.Interface"\n+        name="comment_user_fullname"\n+        />\n \n     <adapter\n-      for="zope.interface.Interface"\n-      provides="plone.stringinterp.interfaces.IStringSubstitution"\n-      factory=".contentrules.AuthorEmail"\n-      name="comment_user_email"\n-      />\n+        factory=".contentrules.AuthorEmail"\n+        provides="plone.stringinterp.interfaces.IStringSubstitution"\n+        for="zope.interface.Interface"\n+        name="comment_user_email"\n+        />\n   </configure>\n \n </configure>\ndiff --git a/plone/app/discussion/notifications.zcml b/plone/app/discussion/notifications.zcml\nindex 2a95b7bb..a375d680 100644\n--- a/plone/app/discussion/notifications.zcml\n+++ b/plone/app/discussion/notifications.zcml\n@@ -1,7 +1,8 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:zcml="http://namespaces.zope.org/zcml"\n-    i18n_domain="plone">\n+    i18n_domain="plone"\n+    >\n \n   <subscriber\n       for="plone.app.discussion.interfaces.IComment\ndiff --git a/plone/app/discussion/permissions.zcml b/plone/app/discussion/permissions.zcml\nindex 8c05904f..6af1c334 100644\n--- a/plone/app/discussion/permissions.zcml\n+++ b/plone/app/discussion/permissions.zcml\n@@ -1,32 +1,33 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n-    i18n_domain="plone">\n+    i18n_domain="plone"\n+    >\n \n-    <!-- custom permissions are defined here -->\n+  <!-- custom permissions are defined here -->\n \n-    <permission\n-        id="plone.app.discussion.ViewComments"\n-        title="View comments"\n-        />\n+  <permission\n+      id="plone.app.discussion.ViewComments"\n+      title="View comments"\n+      />\n \n-    <permission\n-        id="plone.app.discussion.ReviewComments"\n-        title="Review comments"\n-        />\n+  <permission\n+      id="plone.app.discussion.ReviewComments"\n+      title="Review comments"\n+      />\n \n-    <permission\n-        id="plone.app.discussion.EditComments"\n-        title="Edit comments"\n-        />\n+  <permission\n+      id="plone.app.discussion.EditComments"\n+      title="Edit comments"\n+      />\n \n-    <permission\n-        id="plone.app.discussion.DeleteOwnComments"\n-        title="Delete own comments"\n-        />\n+  <permission\n+      id="plone.app.discussion.DeleteOwnComments"\n+      title="Delete own comments"\n+      />\n \n-    <permission\n-        id="plone.app.discussion.DeleteComments"\n-        title="Delete comments"\n-        />\n+  <permission\n+      id="plone.app.discussion.DeleteComments"\n+      title="Delete comments"\n+      />\n \n </configure>\ndiff --git a/plone/app/discussion/profiles/default/actions.xml b/plone/app/discussion/profiles/default/actions.xml\nindex 83c4f932..395f5e5e 100644\n--- a/plone/app/discussion/profiles/default/actions.xml\n+++ b/plone/app/discussion/profiles/default/actions.xml\n@@ -1,17 +1,28 @@\n-<?xml version="1.0"?>\n-<object name="portal_actions" xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n- <object name="user" meta_type="CMF Action Category">\n-  <object name="review-comments" meta_type="CMF Action" i18n:domain="plone"\n-  insert-before="logout">\n-   <property name="title" i18n:translate="">Moderate comments</property>\n-   <property name="description" i18n:translate=""></property>\n-   <property name="url_expr">string:${globals_view/navigationRootUrl}/@@moderate-comments</property>\n-   <property name="icon_expr">string:${globals_view/navigationRootUrl}/discussionitem_icon.png</property>\n-   <property name="available_expr">portal/@@moderate-comments-enabled|nothing</property>\n-   <property name="permissions">\n-    <element value="Review comments"/>\n-   </property>\n-   <property name="visible">True</property>\n+<?xml version="1.0" encoding="utf-8"?>\n+<object xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+        name="portal_actions"\n+>\n+  <object meta_type="CMF Action Category"\n+          name="user"\n+  >\n+    <object insert-before="logout"\n+            meta_type="CMF Action"\n+            name="review-comments"\n+            i18n:domain="plone"\n+    >\n+      <property name="title"\n+                i18n:translate=""\n+      >Moderate comments</property>\n+      <property name="description"\n+                i18n:translate=""\n+      />\n+      <property name="url_expr">string:${globals_view/navigationRootUrl}/@@moderate-comments</property>\n+      <property name="icon_expr">string:${globals_view/navigationRootUrl}/discussionitem_icon.png</property>\n+      <property name="available_expr">portal/@@moderate-comments-enabled|nothing</property>\n+      <property name="permissions">\n+        <element value="Review comments" />\n+      </property>\n+      <property name="visible">True</property>\n+    </object>\n   </object>\n- </object>\n </object>\ndiff --git a/plone/app/discussion/profiles/default/browserlayer.xml b/plone/app/discussion/profiles/default/browserlayer.xml\nindex c64858b0..d9d63add 100644\n--- a/plone/app/discussion/profiles/default/browserlayer.xml\n+++ b/plone/app/discussion/profiles/default/browserlayer.xml\n@@ -1,6 +1,6 @@\n+<?xml version="1.0" encoding="utf-8"?>\n <layers>\n-    <layer\n-        name="plone.app.discussion"\n-        interface="plone.app.discussion.interfaces.IDiscussionLayer"\n-        />\n-</layers>\n\\ No newline at end of file\n+  <layer interface="plone.app.discussion.interfaces.IDiscussionLayer"\n+         name="plone.app.discussion"\n+  />\n+</layers>\ndiff --git a/plone/app/discussion/profiles/default/catalog.xml b/plone/app/discussion/profiles/default/catalog.xml\nindex 3dbd4f9c..e4f9b502 100644\n--- a/plone/app/discussion/profiles/default/catalog.xml\n+++ b/plone/app/discussion/profiles/default/catalog.xml\n@@ -1,18 +1,22 @@\n-<?xml version="1.0"?>\n+<?xml version="1.0" encoding="utf-8"?>\n <object name="portal_catalog">\n \n-    <index name="total_comments" meta_type="FieldIndex">\n-        <indexed_attr value="total_comments"/>\n-    </index>\n+  <index meta_type="FieldIndex"\n+         name="total_comments"\n+  >\n+    <indexed_attr value="total_comments" />\n+  </index>\n \n-    <index name="commentators" meta_type="KeywordIndex">\n-        <indexed_attr value="commentators"/>\n-    </index>\n+  <index meta_type="KeywordIndex"\n+         name="commentators"\n+  >\n+    <indexed_attr value="commentators" />\n+  </index>\n \n-    <column value="total_comments" />\n-    <column value="last_comment_date" />\n-    <column value="commentators" />\n-    <column value="in_response_to" />\n-    <column value="author_name" />\n+  <column value="total_comments" />\n+  <column value="last_comment_date" />\n+  <column value="commentators" />\n+  <column value="in_response_to" />\n+  <column value="author_name" />\n \n </object>\ndiff --git a/plone/app/discussion/profiles/default/controlpanel.xml b/plone/app/discussion/profiles/default/controlpanel.xml\nindex e5dcbe80..d85f7a47 100644\n--- a/plone/app/discussion/profiles/default/controlpanel.xml\n+++ b/plone/app/discussion/profiles/default/controlpanel.xml\n@@ -1,21 +1,21 @@\n-<?xml version="1.0"?>\n-<object\n-    name="portal_controlpanel"\n-    xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n-    i18n:domain="plone"\n-    purge="False">\n+<?xml version="1.0" encoding="utf-8"?>\n+<object xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+        name="portal_controlpanel"\n+        purge="False"\n+        i18n:domain="plone"\n+>\n \n-    <configlet\n-        title="Discussion"\n-        action_id="discussion"\n-        appId="plone.app.discussion"\n-        category="plone-general"\n-        condition_expr=""\n-        icon_expr="string:chat-square-dots"\n-        url_expr="string:${portal_url}/@@discussion-controlpanel"\n-        visible="True"\n-        i18n:attributes="title">\n-            <permission>Manage portal</permission>\n-    </configlet>\n+  <configlet action_id="discussion"\n+             appId="plone.app.discussion"\n+             category="plone-general"\n+             condition_expr=""\n+             icon_expr="string:chat-square-dots"\n+             title="Discussion"\n+             url_expr="string:${portal_url}/@@discussion-controlpanel"\n+             visible="True"\n+             i18n:attributes="title"\n+  >\n+    <permission>Manage portal</permission>\n+  </configlet>\n \n </object>\ndiff --git a/plone/app/discussion/profiles/default/metadata.xml b/plone/app/discussion/profiles/default/metadata.xml\nindex 3b4e7301..38abca6d 100644\n--- a/plone/app/discussion/profiles/default/metadata.xml\n+++ b/plone/app/discussion/profiles/default/metadata.xml\n@@ -1,7 +1,8 @@\n+<?xml version="1.0" encoding="utf-8"?>\n <metadata>\n- <version>2001</version>\n- <dependencies>\n-  <dependency>profile-plone.resource:default</dependency>\n-  <dependency>profile-plone.app.registry:default</dependency>\n- </dependencies>\n+  <version>2001</version>\n+  <dependencies>\n+    <dependency>profile-plone.resource:default</dependency>\n+    <dependency>profile-plone.app.registry:default</dependency>\n+  </dependencies>\n </metadata>\ndiff --git a/plone/app/discussion/profiles/default/portal_atct.xml b/plone/app/discussion/profiles/default/portal_atct.xml\nindex 5941544b..0c7068c6 100644\n--- a/plone/app/discussion/profiles/default/portal_atct.xml\n+++ b/plone/app/discussion/profiles/default/portal_atct.xml\n@@ -1,37 +1,39 @@\n-<?xml version="1.0"?>\n+<?xml version="1.0" encoding="utf-8"?>\n <atcttool xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n-    <topic_indexes i18n:domain="plone">\n+  <topic_indexes i18n:domain="plone">\n \n-        <index name="commentators" friendlyName="Commentators"\n-            description="Users who have commented on the item"\n-            enabled="True" i18n:attributes="description; friendlyName">\n+    <index description="Users who have commented on the item"\n+           enabled="True"\n+           friendlyName="Commentators"\n+           name="commentators"\n+           i18n:attributes="description; friendlyName"\n+    >\n \n-            <criteria>ATCurrentAuthorCriterion</criteria>\n-            <criteria>ATSimpleStringCriterion</criteria>\n-            <criteria>ATListCriterion</criteria>\n+      <criteria>ATCurrentAuthorCriterion</criteria>\n+      <criteria>ATSimpleStringCriterion</criteria>\n+      <criteria>ATListCriterion</criteria>\n \n-        </index>\n+    </index>\n \n-        <index\n-            name="total_comments"\n-            enabled="False"\n-            friendlyName="Total number of comments"\n-            description="Total number of comments on this item."\n-            i18n:attributes="description; friendlyName">\n+    <index description="Total number of comments on this item."\n+           enabled="False"\n+           friendlyName="Total number of comments"\n+           name="total_comments"\n+           i18n:attributes="description; friendlyName"\n+    >\n \n-            <criteria>ATSimpleIntCriterion</criteria>\n+      <criteria>ATSimpleIntCriterion</criteria>\n \n-        </index>\n+    </index>\n \n-    </topic_indexes>\n-    <topic_metadata i18n:domain="plone">\n+  </topic_indexes>\n+  <topic_metadata i18n:domain="plone">\n \n-        <metadata\n-            name="total_comments"\n-            enabled="True"\n-            friendlyName="Total number of comments"\n-            description="Total number of comments on this item."\n-            />\n+    <metadata description="Total number of comments on this item."\n+              enabled="True"\n+              friendlyName="Total number of comments"\n+              name="total_comments"\n+    />\n \n-    </topic_metadata>\n+  </topic_metadata>\n </atcttool>\ndiff --git a/plone/app/discussion/profiles/default/registry.xml b/plone/app/discussion/profiles/default/registry.xml\nindex 1e0d5355..2a1aaffc 100644\n--- a/plone/app/discussion/profiles/default/registry.xml\n+++ b/plone/app/discussion/profiles/default/registry.xml\n@@ -1,4 +1,4 @@\n-<?xml version="1.0"?>\n+<?xml version="1.0" encoding="utf-8"?>\n <registry>\n   <records interface="plone.app.discussion.interfaces.IDiscussionSettings">\n     <value key="edit_comment_enabled">False</value>\ndiff --git a/plone/app/discussion/profiles/default/rolemap.xml b/plone/app/discussion/profiles/default/rolemap.xml\nindex 44fa8439..8aad7ab1 100644\n--- a/plone/app/discussion/profiles/default/rolemap.xml\n+++ b/plone/app/discussion/profiles/default/rolemap.xml\n@@ -1,33 +1,45 @@\n-<?xml version="1.0"?>\n+<?xml version="1.0" encoding="utf-8"?>\n <rolemap>\n-    <permissions>\n-        <permission name="View comments" acquire="True">\n-            <role name="Anonymous"/>\n-        </permission>\n-        <permission name="Review comments" acquire="True">\n-            <role name="Manager"/>\n-            <role name="Site Administrator"/>\n-            <role name="Reviewer"/>\n-        </permission>\n-        <permission name="Edit comments" acquire="True">\n-            <role name="Manager"/>\n-            <role name="Site Administrator"/>\n-            <role name="Reviewer"/>\n-            <role name="Owner"/>\n-        </permission>\n-        <permission name="Delete comments" acquire="True">\n-            <role name="Manager"/>\n-            <role name="Site Administrator"/>\n-            <role name="Reviewer"/>\n-        </permission>\n-        <permission name="Reply to item" acquire="False">\n-            <role name="Authenticated"/>\n-        </permission>\n-        <permission name="Delete own comments" acquire="False">\n-            <role name="Manager"/>\n-            <role name="Site Administrator"/>\n-            <role name="Reviewer"/>\n-            <role name="Owner"/>\n-        </permission>\n-    </permissions>\n+  <permissions>\n+    <permission acquire="True"\n+                name="View comments"\n+    >\n+      <role name="Anonymous" />\n+    </permission>\n+    <permission acquire="True"\n+                name="Review comments"\n+    >\n+      <role name="Manager" />\n+      <role name="Site Administrator" />\n+      <role name="Reviewer" />\n+    </permission>\n+    <permission acquire="True"\n+                name="Edit comments"\n+    >\n+      <role name="Manager" />\n+      <role name="Site Administrator" />\n+      <role name="Reviewer" />\n+      <role name="Owner" />\n+    </permission>\n+    <permission acquire="True"\n+                name="Delete comments"\n+    >\n+      <role name="Manager" />\n+      <role name="Site Administrator" />\n+      <role name="Reviewer" />\n+    </permission>\n+    <permission acquire="False"\n+                name="Reply to item"\n+    >\n+      <role name="Authenticated" />\n+    </permission>\n+    <permission acquire="False"\n+                name="Delete own comments"\n+    >\n+      <role name="Manager" />\n+      <role name="Site Administrator" />\n+      <role name="Reviewer" />\n+      <role name="Owner" />\n+    </permission>\n+  </permissions>\n </rolemap>\ndiff --git a/plone/app/discussion/profiles/default/types.xml b/plone/app/discussion/profiles/default/types.xml\nindex 4ecc6282..b12f8335 100644\n--- a/plone/app/discussion/profiles/default/types.xml\n+++ b/plone/app/discussion/profiles/default/types.xml\n@@ -1,4 +1,8 @@\n-<?xml version="1.0"?>\n-<object name="portal_types" meta_type="CMF Types Tool">\n- <object name="Discussion Item" meta_type="Factory-based Type Information"/>\n+<?xml version="1.0" encoding="utf-8"?>\n+<object meta_type="CMF Types Tool"\n+        name="portal_types"\n+>\n+  <object meta_type="Factory-based Type Information"\n+          name="Discussion Item"\n+  />\n </object>\ndiff --git a/plone/app/discussion/profiles/default/types/Discussion_Item.xml b/plone/app/discussion/profiles/default/types/Discussion_Item.xml\nindex e11e366b..c05efcb9 100644\n--- a/plone/app/discussion/profiles/default/types/Discussion_Item.xml\n+++ b/plone/app/discussion/profiles/default/types/Discussion_Item.xml\n@@ -1,21 +1,37 @@\n-<?xml version="1.0"?>\n-<object name="Discussion Item" meta_type="Factory-based Type Information"\n-   i18n:domain="plone" xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n- <property name="title" i18n:translate="">Comment</property>\n- <property name="description" i18n:translate="">Comments added to a content item.</property>\n- <property name="content_icon">discussionitem_icon.png</property>\n- <property name="content_meta_type">Discussion Item</property>\n- <property name="product"></property>\n- <property name="factory">plone.Comment</property>\n- <property name="immediate_view"></property>\n- <property name="global_allow">False</property>\n- <property name="filter_content_types">True</property>\n- <property name="allowed_content_types"/>\n- <property name="allow_discussion">True</property>\n- <alias from="(Default)" to="@@view"/>\n- <alias from="view" to="@@view"/>\n- <action title="View" action_id="view" category="object" condition_expr=""\n-    url_expr="string:${object_url}/@@view" visible="True">\n-  <permission value="View"/>\n- </action>\n+<?xml version="1.0" encoding="utf-8"?>\n+<object xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+        meta_type="Factory-based Type Information"\n+        name="Discussion Item"\n+        i18n:domain="plone"\n+>\n+  <property name="title"\n+            i18n:translate=""\n+  >Comment</property>\n+  <property name="description"\n+            i18n:translate=""\n+  >Comments added to a content item.</property>\n+  <property name="content_icon">discussionitem_icon.png</property>\n+  <property name="content_meta_type">Discussion Item</property>\n+  <property name="product" />\n+  <property name="factory">plone.Comment</property>\n+  <property name="immediate_view" />\n+  <property name="global_allow">False</property>\n+  <property name="filter_content_types">True</property>\n+  <property name="allowed_content_types" />\n+  <property name="allow_discussion">True</property>\n+  <alias from="(Default)"\n+         to="@@view"\n+  />\n+  <alias from="view"\n+         to="@@view"\n+  />\n+  <action action_id="view"\n+          category="object"\n+          condition_expr=""\n+          title="View"\n+          url_expr="string:${object_url}/@@view"\n+          visible="True"\n+  >\n+    <permission value="View" />\n+  </action>\n </object>\ndiff --git a/plone/app/discussion/profiles/default/workflows.xml b/plone/app/discussion/profiles/default/workflows.xml\nindex 328a7ac6..6e65ead6 100644\n--- a/plone/app/discussion/profiles/default/workflows.xml\n+++ b/plone/app/discussion/profiles/default/workflows.xml\n@@ -1,7 +1,13 @@\n-<?xml version="1.0"?>\n-<object name="portal_workflow" meta_type="Plone Workflow Tool">\n-  <object name="comment_review_workflow" meta_type="Workflow"/>\n-  <object name="comment_one_state_workflow" meta_type="Workflow"/>\n+<?xml version="1.0" encoding="utf-8"?>\n+<object meta_type="Plone Workflow Tool"\n+        name="portal_workflow"\n+>\n+  <object meta_type="Workflow"\n+          name="comment_review_workflow"\n+  />\n+  <object meta_type="Workflow"\n+          name="comment_one_state_workflow"\n+  />\n   <bindings>\n     <type type_id="Discussion Item">\n       <bound-workflow workflow_id="comment_one_state_workflow" />\ndiff --git a/plone/app/discussion/profiles/default/workflows/comment_one_state_workflow/definition.xml b/plone/app/discussion/profiles/default/workflows/comment_one_state_workflow/definition.xml\nindex c03905b1..a3e42ce3 100644\n--- a/plone/app/discussion/profiles/default/workflows/comment_one_state_workflow/definition.xml\n+++ b/plone/app/discussion/profiles/default/workflows/comment_one_state_workflow/definition.xml\n@@ -1,73 +1,107 @@\n-<?xml version="1.0"?>\n-<dc-workflow workflow_id="comment_one_state_workflow" title="Single State Workflow" description="- Essentially a workflow with no transitions, but has a Published state, so portlets and applications that expect that state will continue to work." state_variable="review_state"         initial_state="published" manager_bypass="False" >\n- <permission>Access contents information</permission>\n- <permission>Modify portal content</permission>\n- <permission>View</permission>\n- <state state_id="published" title="Published" >\n-  <description>Visible to everyone, editable by the owner.</description>\n+<?xml version="1.0" encoding="utf-8"?>\n+<dc-workflow description="- Essentially a workflow with no transitions, but has a Published state, so portlets and applications that expect that state will continue to work."\n+             initial_state="published"\n+             manager_bypass="False"\n+             state_variable="review_state"\n+             title="Single State Workflow"\n+             workflow_id="comment_one_state_workflow"\n+>\n+  <permission>Access contents information</permission>\n+  <permission>Modify portal content</permission>\n+  <permission>View</permission>\n+  <state state_id="published"\n+         title="Published"\n+  >\n+    <description>Visible to everyone, editable by the owner.</description>\n \n-  <permission-map name="Access contents information" acquired="False">\n-   <permission-role>Anonymous</permission-role>\n-  </permission-map>\n-  <permission-map name="Modify portal content" acquired="False">\n-   <permission-role>Manager</permission-role>\n-   <permission-role>Owner</permission-role>\n-   <permission-role>Editor</permission-role>\n-   <permission-role>Site Administrator</permission-role>\n-  </permission-map>\n-  <permission-map name="View" acquired="True">\n-  </permission-map>\n+    <permission-map acquired="False"\n+                    name="Access contents information"\n+    >\n+      <permission-role>Anonymous</permission-role>\n+    </permission-map>\n+    <permission-map acquired="False"\n+                    name="Modify portal content"\n+    >\n+      <permission-role>Manager</permission-role>\n+      <permission-role>Owner</permission-role>\n+      <permission-role>Editor</permission-role>\n+      <permission-role>Site Administrator</permission-role>\n+    </permission-map>\n+    <permission-map acquired="True"\n+                    name="View"\n+    >\n+</permission-map>\n \n \n- </state>\n+  </state>\n \n \n- <variable variable_id="action" for_catalog="False" for_status="True" update_always="True" >\n-  <description>Previous transition</description>\n-  <default>\n+  <variable for_catalog="False"\n+            for_status="True"\n+            update_always="True"\n+            variable_id="action"\n+  >\n+    <description>Previous transition</description>\n+    <default>\n \n-   <expression>transition/getId|nothing</expression>\n-  </default>\n-  <guard >\n-  </guard>\n- </variable>\n- <variable variable_id="actor" for_catalog="False" for_status="True" update_always="True" >\n-  <description>The ID of the user who performed the previous transition</description>\n-  <default>\n+      <expression>transition/getId|nothing</expression>\n+    </default>\n+    <guard>\n+</guard>\n+  </variable>\n+  <variable for_catalog="False"\n+            for_status="True"\n+            update_always="True"\n+            variable_id="actor"\n+  >\n+    <description>The ID of the user who performed the previous transition</description>\n+    <default>\n \n-   <expression>user/getId</expression>\n-  </default>\n-  <guard >\n-  </guard>\n- </variable>\n- <variable variable_id="comments" for_catalog="False" for_status="True" update_always="True" >\n-  <description>Comment about the last transition</description>\n-  <default>\n+      <expression>user/getId</expression>\n+    </default>\n+    <guard>\n+</guard>\n+  </variable>\n+  <variable for_catalog="False"\n+            for_status="True"\n+            update_always="True"\n+            variable_id="comments"\n+  >\n+    <description>Comment about the last transition</description>\n+    <default>\n \n-   <expression>python:state_change.kwargs.get(\'comment\', \'\')</expression>\n-  </default>\n-  <guard >\n-  </guard>\n- </variable>\n- <variable variable_id="review_history" for_catalog="False" for_status="False" update_always="False" >\n-  <description>Provides access to workflow history</description>\n-  <default>\n+      <expression>python:state_change.kwargs.get(\'comment\', \'\')</expression>\n+    </default>\n+    <guard>\n+</guard>\n+  </variable>\n+  <variable for_catalog="False"\n+            for_status="False"\n+            update_always="False"\n+            variable_id="review_history"\n+  >\n+    <description>Provides access to workflow history</description>\n+    <default>\n \n-   <expression>state_change/getHistory</expression>\n-  </default>\n-  <guard >\n-   <guard-permission>Request review</guard-permission>\n-   <guard-permission>Review portal content</guard-permission>\n-  </guard>\n- </variable>\n- <variable variable_id="time" for_catalog="False" for_status="True" update_always="True" >\n-  <description>When the previous transition was performed</description>\n-  <default>\n+      <expression>state_change/getHistory</expression>\n+    </default>\n+    <guard>\n+      <guard-permission>Request review</guard-permission>\n+      <guard-permission>Review portal content</guard-permission>\n+    </guard>\n+  </variable>\n+  <variable for_catalog="False"\n+            for_status="True"\n+            update_always="True"\n+            variable_id="time"\n+  >\n+    <description>When the previous transition was performed</description>\n+    <default>\n \n-   <expression>state_change/getDateTime</expression>\n-  </default>\n-  <guard >\n-  </guard>\n- </variable>\n+      <expression>state_change/getDateTime</expression>\n+    </default>\n+    <guard>\n+</guard>\n+  </variable>\n \n </dc-workflow>\ndiff --git a/plone/app/discussion/profiles/default/workflows/comment_review_workflow/definition.xml b/plone/app/discussion/profiles/default/workflows/comment_review_workflow/definition.xml\nindex 439fdb60..4d8a63db 100644\n--- a/plone/app/discussion/profiles/default/workflows/comment_review_workflow/definition.xml\n+++ b/plone/app/discussion/profiles/default/workflows/comment_review_workflow/definition.xml\n@@ -1,140 +1,221 @@\n-<?xml version="1.0"?>\n+<?xml version="1.0" encoding="utf-8"?>\n <dc-workflow xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n-             i18n:domain="plone"\n-             workflow_id="comment_review_workflow"\n-             title="Comment Review Workflow"\n              description="A simple review workflow for comments"\n-             state_variable="review_state"\n              initial_state="pending"\n-             i18n:attributes="title; description">\n-             <permission>Access contents information</permission>\n-             <permission>Modify portal content</permission>\n-             <permission>Reply to item</permission>\n-             <permission>View</permission>\n-             <state state_id="pending" title="Pending">\n-                 <description>Submitted, pending review.</description>\n-                 <exit-transition transition_id="mark_as_spam"/>\n-                 <exit-transition transition_id="publish"/>\n-                 <exit-transition transition_id="reject"/>\n-                 <permission-map name="Access contents information" acquired="False">\n-                     <permission-role>Manager</permission-role>\n-                     <permission-role>Owner</permission-role>\n-                     <permission-role>Reviewer</permission-role>\n-                     <permission-role>Site Administrator</permission-role>\n-                 </permission-map>\n-                 <permission-map name="Modify portal content" acquired="False">\n-                     <permission-role>Manager</permission-role>\n-                     <permission-role>Owner</permission-role>\n-                     <permission-role>Reviewer</permission-role>\n-                     <permission-role>Site Administrator</permission-role>\n-                 </permission-map>\n-                 <permission-map name="Reply to item" acquired="False">\n-                 </permission-map>\n-                 <permission-map name="View" acquired="False">\n-                     <permission-role>Manager</permission-role>\n-                     <permission-role>Owner</permission-role>\n-                     <permission-role>Reviewer</permission-role>\n-                     <permission-role>Site Administrator</permission-role>\n-                 </permission-map>\n-             </state>\n-             <state state_id="published" title="Published">\n-                 <description>Visible to everyone, non-editable.</description>\n-                 <exit-transition transition_id="mark_as_spam"/>\n-                 <exit-transition transition_id="recall"/>\n-                 <exit-transition transition_id="reject"/>\n-                 <permission-map name="Access contents information" acquired="True">\n-                 </permission-map>\n-                 <permission-map name="Modify portal content" acquired="False">\n-                     <permission-role>Manager</permission-role>\n-                     <permission-role>Site Administrator</permission-role>\n-                 </permission-map>\n-                 <permission-map name="Reply to item" acquired="True">\n-                 </permission-map>\n-                 <permission-map name="View" acquired="True">\n-                 </permission-map>\n-             </state>\n-             <state state_id="rejected" title="Rejected">\n-                 <exit-transition transition_id="mark_as_spam"/>\n-                 <exit-transition transition_id="publish"/>\n-                 <exit-transition transition_id="recall"/>\n-             </state>\n-             <state state_id="spam" title="Spam">\n-                 <exit-transition transition_id="publish"/>\n-                 <exit-transition transition_id="recall"/>\n-                 <exit-transition transition_id="reject"/>\n-             </state>\n-             <transition transition_id="mark_as_spam" title="Mark as spam" new_state="spam" trigger="USER" before_script="" after_script="">\n-                 <description>Spam comments are invisible to other users.</description>\n-                 <action url="%(content_url)s/content_status_modify?workflow_action=mark_as_spam" category="workflow" icon="">Spam</action>\n-                 <guard>\n-                     <guard-permission>Review comments</guard-permission>\n-                 </guard>\n-             </transition>\n-             <transition transition_id="publish" title="Reviewer approves content" new_state="published" trigger="USER" before_script="" after_script="">\n-                 <description>Approving the comment makes it visible to other users.</description>\n-                 <action url="%(content_url)s/content_status_modify?workflow_action=publish" category="workflow" icon="">Approve</action>\n-                 <guard>\n-                     <guard-permission>Review comments</guard-permission>\n-                 </guard>\n-             </transition>\n-             <transition transition_id="recall" title="Reviewer recalls comment back to pending state" new_state="pending" trigger="USER" before_script="" after_script="">\n-                 <action url="%(content_url)s/content_status_modify?workflow_action=recall" category="workflow" icon="">Recall</action>\n-                 <guard>\n-                     <guard-permission>Review comments</guard-permission>\n-                 </guard>\n-             </transition>\n-             <transition transition_id="reject" title="Reviewer rejects comment" new_state="rejected" trigger="USER" before_script="" after_script="">\n-                 <description>Rejected comments are invisible to other users.</description>\n-                 <action url="%(content_url)s/content_status_modify?workflow_action=reject" category="workflow" icon="">Reject</action>\n-                 <guard>\n-                     <guard-permission>Review comments</guard-permission>\n-                 </guard>\n-             </transition>\n-             <variable variable_id="action" for_catalog="False" for_status="True" update_always="True">\n-                 <description>Previous transition</description>\n-                 <default>\n+             state_variable="review_state"\n+             title="Comment Review Workflow"\n+             workflow_id="comment_review_workflow"\n+             i18n:attributes="title; description"\n+             i18n:domain="plone"\n+>\n+  <permission>Access contents information</permission>\n+  <permission>Modify portal content</permission>\n+  <permission>Reply to item</permission>\n+  <permission>View</permission>\n+  <state state_id="pending"\n+         title="Pending"\n+  >\n+    <description>Submitted, pending review.</description>\n+    <exit-transition transition_id="mark_as_spam" />\n+    <exit-transition transition_id="publish" />\n+    <exit-transition transition_id="reject" />\n+    <permission-map acquired="False"\n+                    name="Access contents information"\n+    >\n+      <permission-role>Manager</permission-role>\n+      <permission-role>Owner</permission-role>\n+      <permission-role>Reviewer</permission-role>\n+      <permission-role>Site Administrator</permission-role>\n+    </permission-map>\n+    <permission-map acquired="False"\n+                    name="Modify portal content"\n+    >\n+      <permission-role>Manager</permission-role>\n+      <permission-role>Owner</permission-role>\n+      <permission-role>Reviewer</permission-role>\n+      <permission-role>Site Administrator</permission-role>\n+    </permission-map>\n+    <permission-map acquired="False"\n+                    name="Reply to item"\n+    >\n+</permission-map>\n+    <permission-map acquired="False"\n+                    name="View"\n+    >\n+      <permission-role>Manager</permission-role>\n+      <permission-role>Owner</permission-role>\n+      <permission-role>Reviewer</permission-role>\n+      <permission-role>Site Administrator</permission-role>\n+    </permission-map>\n+  </state>\n+  <state state_id="published"\n+         title="Published"\n+  >\n+    <description>Visible to everyone, non-editable.</description>\n+    <exit-transition transition_id="mark_as_spam" />\n+    <exit-transition transition_id="recall" />\n+    <exit-transition transition_id="reject" />\n+    <permission-map acquired="True"\n+                    name="Access contents information"\n+    >\n+</permission-map>\n+    <permission-map acquired="False"\n+                    name="Modify portal content"\n+    >\n+      <permission-role>Manager</permission-role>\n+      <permission-role>Site Administrator</permission-role>\n+    </permission-map>\n+    <permission-map acquired="True"\n+                    name="Reply to item"\n+    >\n+</permission-map>\n+    <permission-map acquired="True"\n+                    name="View"\n+    >\n+</permission-map>\n+  </state>\n+  <state state_id="rejected"\n+         title="Rejected"\n+  >\n+    <exit-transition transition_id="mark_as_spam" />\n+    <exit-transition transition_id="publish" />\n+    <exit-transition transition_id="recall" />\n+  </state>\n+  <state state_id="spam"\n+         title="Spam"\n+  >\n+    <exit-transition transition_id="publish" />\n+    <exit-transition transition_id="recall" />\n+    <exit-transition transition_id="reject" />\n+  </state>\n+  <transition after_script=""\n+              before_script=""\n+              new_state="spam"\n+              title="Mark as spam"\n+              transition_id="mark_as_spam"\n+              trigger="USER"\n+  >\n+    <description>Spam comments are invisible to other users.</description>\n+    <action category="workflow"\n+            icon=""\n+            url="%(content_url)s/content_status_modify?workflow_action=mark_as_spam"\n+    >Spam</action>\n+    <guard>\n+      <guard-permission>Review comments</guard-permission>\n+    </guard>\n+  </transition>\n+  <transition after_script=""\n+              before_script=""\n+              new_state="published"\n+              title="Reviewer approves content"\n+              transition_id="publish"\n+              trigger="USER"\n+  >\n+    <description>Approving the comment makes it visible to other users.</description>\n+    <action category="workflow"\n+            icon=""\n+            url="%(content_url)s/content_status_modify?workflow_action=publish"\n+    >Approve</action>\n+    <guard>\n+      <guard-permission>Review comments</guard-permission>\n+    </guard>\n+  </transition>\n+  <transition after_script=""\n+              before_script=""\n+              new_state="pending"\n+              title="Reviewer recalls comment back to pending state"\n+              transition_id="recall"\n+              trigger="USER"\n+  >\n+    <action category="workflow"\n+            icon=""\n+            url="%(content_url)s/content_status_modify?workflow_action=recall"\n+    >Recall</action>\n+    <guard>\n+      <guard-permission>Review comments</guard-permission>\n+    </guard>\n+  </transition>\n+  <transition after_script=""\n+              before_script=""\n+              new_state="rejected"\n+              title="Reviewer rejects comment"\n+              transition_id="reject"\n+              trigger="USER"\n+  >\n+    <description>Rejected comments are invisible to other users.</description>\n+    <action category="workflow"\n+            icon=""\n+            url="%(content_url)s/content_status_modify?workflow_action=reject"\n+    >Reject</action>\n+    <guard>\n+      <guard-permission>Review comments</guard-permission>\n+    </guard>\n+  </transition>\n+  <variable for_catalog="False"\n+            for_status="True"\n+            update_always="True"\n+            variable_id="action"\n+  >\n+    <description>Previous transition</description>\n+    <default>\n \n-                     <expression>transition/getId|nothing</expression>\n-                 </default>\n-                 <guard>\n-                 </guard>\n-             </variable>\n-             <variable variable_id="actor" for_catalog="False" for_status="True" update_always="True">\n-                 <description>The ID of the user who performed the previous transition</description>\n-                 <default>\n+      <expression>transition/getId|nothing</expression>\n+    </default>\n+    <guard>\n+</guard>\n+  </variable>\n+  <variable for_catalog="False"\n+            for_status="True"\n+            update_always="True"\n+            variable_id="actor"\n+  >\n+    <description>The ID of the user who performed the previous transition</description>\n+    <default>\n \n-                     <expression>user/getUserName</expression>\n-                 </default>\n-                 <guard>\n-                 </guard>\n-             </variable>\n-             <variable variable_id="comments" for_catalog="False" for_status="True" update_always="True">\n-                 <description>Comment about the last transition</description>\n-                 <default>\n+      <expression>user/getUserName</expression>\n+    </default>\n+    <guard>\n+</guard>\n+  </variable>\n+  <variable for_catalog="False"\n+            for_status="True"\n+            update_always="True"\n+            variable_id="comments"\n+  >\n+    <description>Comment about the last transition</description>\n+    <default>\n \n-                     <expression>python:state_change.kwargs.get(\'comment\', \'\')</expression>\n-                 </default>\n-                 <guard>\n-                 </guard>\n-             </variable>\n-             <variable variable_id="review_history" for_catalog="False" for_status="False" update_always="False">\n-                 <description>Provides access to workflow history</description>\n-                 <default>\n+      <expression>python:state_change.kwargs.get(\'comment\', \'\')</expression>\n+    </default>\n+    <guard>\n+</guard>\n+  </variable>\n+  <variable for_catalog="False"\n+            for_status="False"\n+            update_always="False"\n+            variable_id="review_history"\n+  >\n+    <description>Provides access to workflow history</description>\n+    <default>\n \n-                     <expression>state_change/getHistory</expression>\n-                 </default>\n-                 <guard>\n-                     <guard-permission>Request review</guard-permission>\n-                     <guard-permission>Review portal content</guard-permission>\n-                 </guard>\n-             </variable>\n-             <variable variable_id="time" for_catalog="False" for_status="True" update_always="True">\n-                 <description>When the previous transition was performed</description>\n-                 <default>\n+      <expression>state_change/getHistory</expression>\n+    </default>\n+    <guard>\n+      <guard-permission>Request review</guard-permission>\n+      <guard-permission>Review portal content</guard-permission>\n+    </guard>\n+  </variable>\n+  <variable for_catalog="False"\n+            for_status="True"\n+            update_always="True"\n+            variable_id="time"\n+  >\n+    <description>When the previous transition was performed</description>\n+    <default>\n \n-                     <expression>state_change/getDateTime</expression>\n-                 </default>\n-                 <guard>\n-                 </guard>\n-             </variable>\n-         </dc-workflow>\n+      <expression>state_change/getDateTime</expression>\n+    </default>\n+    <guard>\n+</guard>\n+  </variable>\n+</dc-workflow>\ndiff --git a/plone/app/discussion/subscribers.zcml b/plone/app/discussion/subscribers.zcml\nindex a797741b..072db461 100644\n--- a/plone/app/discussion/subscribers.zcml\n+++ b/plone/app/discussion/subscribers.zcml\n@@ -1,84 +1,85 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:zcml="http://namespaces.zope.org/zcml"\n-    i18n_domain="plone">\n+    i18n_domain="plone"\n+    >\n \n-    <subscriber\n-        for="plone.app.discussion.interfaces.IComment\n-             zope.lifecycleevent.interfaces.IObjectAddedEvent"\n-        handler=".comment.notify_workflow"\n-        />\n+  <subscriber\n+      for="plone.app.discussion.interfaces.IComment\n+           zope.lifecycleevent.interfaces.IObjectAddedEvent"\n+      handler=".comment.notify_workflow"\n+      />\n \n-    <subscriber\n-        for="plone.app.discussion.interfaces.IComment\n-             zope.lifecycleevent.interfaces.IObjectModifiedEvent"\n-        handler=".comment.notify_comment_modified"\n-        />\n+  <subscriber\n+      for="plone.app.discussion.interfaces.IComment\n+           zope.lifecycleevent.interfaces.IObjectModifiedEvent"\n+      handler=".comment.notify_comment_modified"\n+      />\n \n-    <subscriber\n-        for="plone.app.discussion.interfaces.IComment\n-             zope.lifecycleevent.interfaces.IObjectAddedEvent"\n-        handler=".comment.notify_content_object"\n-        />\n+  <subscriber\n+      for="plone.app.discussion.interfaces.IComment\n+           zope.lifecycleevent.interfaces.IObjectAddedEvent"\n+      handler=".comment.notify_content_object"\n+      />\n \n-    <subscriber\n-        for="plone.app.discussion.interfaces.IComment\n-             zope.lifecycleevent.interfaces.IObjectAddedEvent"\n-        handler=".comment.notify_comment_added"\n-        />\n+  <subscriber\n+      for="plone.app.discussion.interfaces.IComment\n+           zope.lifecycleevent.interfaces.IObjectAddedEvent"\n+      handler=".comment.notify_comment_added"\n+      />\n \n-    <subscriber\n-        for="plone.app.discussion.interfaces.IComment\n-             zope.lifecycleevent.interfaces.IObjectRemovedEvent"\n-        handler=".comment.notify_content_object"\n-        />\n+  <subscriber\n+      for="plone.app.discussion.interfaces.IComment\n+           zope.lifecycleevent.interfaces.IObjectRemovedEvent"\n+      handler=".comment.notify_content_object"\n+      />\n \n-    <subscriber\n-        for="plone.app.discussion.interfaces.IComment\n-             zope.lifecycleevent.interfaces.IObjectRemovedEvent"\n-        handler=".comment.notify_comment_removed"\n-        />\n+  <subscriber\n+      for="plone.app.discussion.interfaces.IComment\n+           zope.lifecycleevent.interfaces.IObjectRemovedEvent"\n+      handler=".comment.notify_comment_removed"\n+      />\n \n-    <subscriber\n-        for="plone.app.discussion.interfaces.IComment\n-             zope.lifecycleevent.interfaces.IObjectAddedEvent"\n-        handler=".subscribers.index_object"\n-        />\n+  <subscriber\n+      for="plone.app.discussion.interfaces.IComment\n+           zope.lifecycleevent.interfaces.IObjectAddedEvent"\n+      handler=".subscribers.index_object"\n+      />\n \n-    <subscriber\n-        for="plone.app.discussion.interfaces.IComment\n-             zope.lifecycleevent.interfaces.IObjectModifiedEvent"\n-        handler=".subscribers.index_object"\n-        />\n+  <subscriber\n+      for="plone.app.discussion.interfaces.IComment\n+           zope.lifecycleevent.interfaces.IObjectModifiedEvent"\n+      handler=".subscribers.index_object"\n+      />\n \n-    <subscriber\n-        for="plone.app.discussion.interfaces.IComment\n-             zope.lifecycleevent.interfaces.IObjectRemovedEvent"\n-        handler=".subscribers.unindex_object"\n-        />\n+  <subscriber\n+      for="plone.app.discussion.interfaces.IComment\n+           zope.lifecycleevent.interfaces.IObjectRemovedEvent"\n+      handler=".subscribers.unindex_object"\n+      />\n \n-    <subscriber\n-        for="Products.CMFCore.interfaces.IContentish\n-             zope.lifecycleevent.interfaces.IObjectRemovedEvent"\n-        handler=".comment.notify_content_object_deleted"\n-        />\n+  <subscriber\n+      for="Products.CMFCore.interfaces.IContentish\n+           zope.lifecycleevent.interfaces.IObjectRemovedEvent"\n+      handler=".comment.notify_content_object_deleted"\n+      />\n \n-    <subscriber\n-        for="Products.CMFCore.interfaces.IContentish\n-             zope.lifecycleevent.interfaces.IObjectMovedEvent"\n-        handler=".comment.notify_content_object_moved"\n-        />\n+  <subscriber\n+      for="Products.CMFCore.interfaces.IContentish\n+           zope.lifecycleevent.interfaces.IObjectMovedEvent"\n+      handler=".comment.notify_content_object_moved"\n+      />\n \n-    <!-- Control panel event subscribers -->\n+  <!-- Control panel event subscribers -->\n \n-    <subscriber\n-        for="plone.base.interfaces.events.IConfigurationChangedEvent"\n-        handler=".browser.controlpanel.notify_configuration_changed"\n-        />\n+  <subscriber\n+      for="plone.base.interfaces.events.IConfigurationChangedEvent"\n+      handler=".browser.controlpanel.notify_configuration_changed"\n+      />\n \n-    <subscriber\n-        for="plone.registry.interfaces.IRecordModifiedEvent"\n-        handler=".browser.controlpanel.notify_configuration_changed"\n-        />\n+  <subscriber\n+      for="plone.registry.interfaces.IRecordModifiedEvent"\n+      handler=".browser.controlpanel.notify_configuration_changed"\n+      />\n \n </configure>\ndiff --git a/plone/app/discussion/upgrades.zcml b/plone/app/discussion/upgrades.zcml\nindex 7f8ffe7f..d265d428 100644\n--- a/plone/app/discussion/upgrades.zcml\n+++ b/plone/app/discussion/upgrades.zcml\n@@ -1,40 +1,42 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n-    xmlns:genericsetup="http://namespaces.zope.org/genericsetup">\n+    xmlns:genericsetup="http://namespaces.zope.org/genericsetup"\n+    >\n \n   <genericsetup:upgradeStep\n-      source="*"\n-      destination="100"\n       title="Update plone.app.discussion setting registry"\n       description=""\n       profile="plone.app.discussion:default"\n+      source="*"\n+      destination="100"\n       handler=".upgrades.update_registry"\n       />\n \n   <genericsetup:upgradeStep\n       title="edit comments and delete own comments"\n       description="reload registry config to enable new fields edit_comment_enabled and delete_own_comment_enabled"\n+      profile="plone.app.discussion:default"\n       source="100"\n       destination="101"\n       handler=".upgrades.update_registry"\n       sortkey="1"\n-      profile="plone.app.discussion:default"\n       />\n \n   <genericsetup:upgradeStep\n       title="delete comments and delete own comments"\n       description="reload rolemap config to enable new permissions \'Delete comments\' and \'Delete own comments\'"\n+      profile="plone.app.discussion:default"\n       source="101"\n       destination="102"\n       handler=".upgrades.update_rolemap"\n       sortkey="1"\n-      profile="plone.app.discussion:default"\n       />\n \n   <genericsetup:upgradeSteps\n+      profile="plone.app.discussion:default"\n       source="102"\n       destination="1000"\n-      profile="plone.app.discussion:default">\n+      >\n     <!-- Apply the update rolemap step again, to avoid missing it when\n          updating from plone.app.discussion 2.2.x.  When originally\n          adding this step in the 2.3.x release, we should have made a\n@@ -52,9 +54,10 @@\n   </genericsetup:upgradeSteps>\n \n   <genericsetup:upgradeSteps\n+      profile="plone.app.discussion:default"\n       source="1000"\n       destination="1001"\n-      profile="plone.app.discussion:default">\n+      >\n     <genericsetup:upgradeStep\n         title="Move comment.js into plone-legacy bundle"\n         description=""\n@@ -63,9 +66,10 @@\n   </genericsetup:upgradeSteps>\n \n   <genericsetup:upgradeSteps\n-    source="1001"\n-    destination="1002"\n-    profile="plone.app.discussion:default">\n+      profile="plone.app.discussion:default"\n+      source="1001"\n+      destination="1002"\n+      >\n     <genericsetup:upgradeStep\n         title="Extended review workflow with states pending, published and new: rejected and spam"\n         description="Additional states allows moderator to review history of publishing and rejection"\n@@ -74,24 +78,29 @@\n   </genericsetup:upgradeSteps>\n \n   <genericsetup:upgradeSteps\n+      profile="plone.app.discussion:default"\n       source="1999"\n       destination="2000"\n-      profile="plone.app.discussion:default">\n+      >\n     <genericsetup:upgradeDepends\n         title="Update controlpanel icon"\n-        import_steps="controlpanel" />\n+        import_steps="controlpanel"\n+        />\n     <genericsetup:upgradeDepends\n         title="Add \'View comments\' permission"\n-        import_steps="rolemap" />\n+        import_steps="rolemap"\n+        />\n     <genericsetup:upgradeStep\n         title="Grant Site Administrator permissions on pending comments"\n-        handler=".upgrades.upgrade_comment_workflows" />\n+        handler=".upgrades.upgrade_comment_workflows"\n+        />\n   </genericsetup:upgradeSteps>\n \n   <genericsetup:upgradeSteps\n-    source="2000"\n-    destination="2001"\n-    profile="plone.app.discussion:default">\n+      profile="plone.app.discussion:default"\n+      source="2000"\n+      destination="2001"\n+      >\n     <genericsetup:upgradeStep\n         title="Set timezone on comment dates"\n         description="Ensure the timezone is set for comment dates"\n'

Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2023-04-01T14:53:57+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.discussion/commit/c652f4e844ea1f63382e56adef2d311005cded56

feat: flake8

Files changed:
M docs/source/conf.py
M plone/app/discussion/browser/conversation.py
M plone/app/discussion/catalog.py
M plone/app/discussion/subscribers.py
M plone/app/discussion/tests/test_moderation_multiple_state_view.py

b'diff --git a/docs/source/conf.py b/docs/source/conf.py\nindex b94ce2d8..a2cdddc3 100644\n--- a/docs/source/conf.py\n+++ b/docs/source/conf.py\n@@ -10,10 +10,6 @@\n # All configuration values have a default; values that are commented out\n # serve to show the default.\n \n-import os\n-import sys\n-\n-\n # If extensions (or modules to document with autodoc) are in another directory,\n # add these directories to sys.path here. If the directory is relative to the\n # documentation root, use os.path.abspath to make it absolute, like shown here.\ndiff --git a/plone/app/discussion/browser/conversation.py b/plone/app/discussion/browser/conversation.py\nindex ac0c9326..7c6dd9d0 100644\n--- a/plone/app/discussion/browser/conversation.py\n+++ b/plone/app/discussion/browser/conversation.py\n@@ -1,5 +1,4 @@\n from ..interfaces import IDiscussionSettings\n-from Acquisition import aq_base\n from Acquisition import aq_chain\n from Acquisition import aq_inner\n from plone.base.interfaces import INonStructuralFolder\ndiff --git a/plone/app/discussion/catalog.py b/plone/app/discussion/catalog.py\nindex 46b3293f..0387a54d 100644\n--- a/plone/app/discussion/catalog.py\n+++ b/plone/app/discussion/catalog.py\n@@ -3,7 +3,6 @@\n \n Also provide event handlers to actually catalog the comments.\n """\n-from DateTime import DateTime\n from plone.app.discussion.interfaces import IComment\n from plone.app.discussion.interfaces import IConversation\n from plone.app.event.base import DT\ndiff --git a/plone/app/discussion/subscribers.py b/plone/app/discussion/subscribers.py\nindex 6e1b4985..c227ee00 100644\n--- a/plone/app/discussion/subscribers.py\n+++ b/plone/app/discussion/subscribers.py\n@@ -1,6 +1,3 @@\n-from Products.CMFCore.utils import getToolByName\n-\n-\n def index_object(obj, event):\n     """Index the object when it is added/modified to the conversation."""\n     obj.indexObject()\ndiff --git a/plone/app/discussion/tests/test_moderation_multiple_state_view.py b/plone/app/discussion/tests/test_moderation_multiple_state_view.py\nindex 44f0f271..ea5005e2 100644\n--- a/plone/app/discussion/tests/test_moderation_multiple_state_view.py\n+++ b/plone/app/discussion/tests/test_moderation_multiple_state_view.py\n@@ -1,16 +1,10 @@\n from ..browser.moderation import BulkActionsView\n-from ..browser.moderation import CommentTransition\n-from ..browser.moderation import DeleteComment\n-from ..browser.moderation import View\n from ..interfaces import IConversation\n-from ..interfaces import IDiscussionSettings\n from ..testing import PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n-from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from zope.component import createObject\n-from zope.component import queryUtility\n \n import unittest\n \n'

Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2023-04-01T14:53:57+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.discussion/commit/f357a32bb350dfdf4a1bc8083d09e2932bcc4e2b

feat: pyroma

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex f9751244..819912bb 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -45,6 +45,7 @@\n     namespace_packages=["plone", "plone.app"],\n     include_package_data=True,\n     zip_safe=False,\n+    python_requires=">=3.8",\n     install_requires=install_requires,\n     extras_require={\n         "test": [\n'

Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2023-04-01T14:53:57+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.discussion/commit/6cf8012d28e9c0eca4a78c670de06d1c333cb1f5

feat: configure codespell

Files changed:
M pyproject.toml

b'diff --git a/pyproject.toml b/pyproject.toml\nindex 9eb73f3c..7a2d8b0e 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -60,3 +60,6 @@ Zope = [\n   \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n ]\n python-dateutil = [\'dateutil\']\n+\n+[tool.codespell]\n+ignore-words-list = "discreet"\n'

Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2023-04-01T14:53:57+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.discussion/commit/78e4d8e2908e7f91b0f382b610dd108abdcd45d3

feat: codespell

Files changed:
M CHANGES.rst
M docs/source/api/index.txt
M plone/app/discussion/architecture.txt
M plone/app/discussion/browser/moderation.py
M plone/app/discussion/comment.py
M plone/app/discussion/tests/functional_test_comments.txt
M plone/app/discussion/tests/test_comments_viewlet.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex a37d8f65..33febd51 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -190,7 +190,7 @@ Bug fixes:\n New features:\n \n \n-- Extended existing review workflow by stati ``rejected`` and ``spam``\n+- Extended existing review workflow by state ``rejected`` and ``spam``\n   Moderation view extended to handle four workflow states.\n   [ksuess and precious input of agitator] (#164)\n \n@@ -748,7 +748,7 @@ Fixes:\n -------------------\n \n - Revert "Refactor tests to use the PLONE_APP_CONTENTTYPES_FIXTURE instead of\n-  the PLONE_FIXTURE." that has been accidentially introduced into the 2.2.9\n+  the PLONE_FIXTURE." that has been accidentally introduced into the 2.2.9\n   release.\n   [timo]\n \n@@ -1076,7 +1076,7 @@ Fixes:\n 2.0.9 (2011-07-25)\n ------------------\n \n-- Make sure the creator index always stores utf-8 encoded stings and not\n+- Make sure the creator index always stores utf-8 encoded strings and not\n   unicode.\n   [timo]\n \ndiff --git a/docs/source/api/index.txt b/docs/source/api/index.txt\nindex a7b72f83..5961046f 100644\n--- a/docs/source/api/index.txt\n+++ b/docs/source/api/index.txt\n@@ -10,7 +10,7 @@ are IComment objects. It also provides features for finding comments quickly.\n \n The IReplies adapter provides an API for finding and manipulating the comments\n directly in reply to a particular comment (implemented by the CommentReplies\n-adpater) or at the top level of the conversation (implemented by the\n+adapter) or at the top level of the conversation (implemented by the\n ConversationReplies adapter).\n \n \ndiff --git a/plone/app/discussion/architecture.txt b/plone/app/discussion/architecture.txt\nindex dff50369..f8026e38 100644\n--- a/plone/app/discussion/architecture.txt\n+++ b/plone/app/discussion/architecture.txt\n@@ -25,7 +25,7 @@ plone.app.discussion.\n     Comments should not provide the full set of dublin core metadata, though\n     custom indexers can be used to provide values for standard catalog indexes.\n \n-  **Optimise for retrival speed**\n+  **Optimise for retrieval speed**\n     HTML filtering and other processing should happen on save, not on render,\n     to make rendering quick.\n \ndiff --git a/plone/app/discussion/browser/moderation.py b/plone/app/discussion/browser/moderation.py\nindex 1d0ee8f9..6ee5748f 100644\n--- a/plone/app/discussion/browser/moderation.py\n+++ b/plone/app/discussion/browser/moderation.py\n@@ -97,7 +97,7 @@ def moderation_multiple_state_enabled(self):\n         """Return true if a \'review multiple state workflow\' is enabled on\n         \'Discussion Item\' content type.\n \n-        A \'review multipe state workflow\' is characterized by implementing\n+        A \'review multiple state workflow\' is characterized by implementing\n         a \'rejected\' workflow state and a \'spam\' workflow state.\n         """\n         workflows = self.workflowTool.getChainForPortalType("Discussion Item")\ndiff --git a/plone/app/discussion/comment.py b/plone/app/discussion/comment.py\nindex ec96ffea..8f228654 100644\n--- a/plone/app/discussion/comment.py\n+++ b/plone/app/discussion/comment.py\n@@ -314,7 +314,7 @@ def notify_content_object_moved(obj, event):\n     # therefore can\'t assume that event.object == obj and event.\n     # {old,new}{Parent,Name} may refer to the actually moved object further up\n     # in the object hierarchy. The object is already moved at this point. so\n-    # obj.getPhysicalPath retruns the new path get the part of the path that\n+    # obj.getPhysicalPath returns the new path get the part of the path that\n     # was moved.\n     moved_path = obj.getPhysicalPath()[len(event.newParent.getPhysicalPath()) + 1 :]\n \n@@ -354,7 +354,7 @@ def notify_user(obj, event):\n     if not settings.user_notification_enabled:\n         return\n \n-    # Get informations that are necessary to send an email\n+    # Get information that are necessary to send an email\n     mail_host = getToolByName(obj, "MailHost")\n     registry = getUtility(IRegistry)\n     mail_settings = registry.forInterface(IMailSchema, prefix="plone")\n@@ -430,7 +430,7 @@ def notify_moderator(obj, event):\n     if not settings.moderator_notification_enabled:\n         return\n \n-    # Get informations that are necessary to send an email\n+    # Get information that are necessary to send an email\n     mail_host = getToolByName(obj, "MailHost")\n     registry = getUtility(IRegistry)\n     mail_settings = registry.forInterface(IMailSchema, prefix="plone")\ndiff --git a/plone/app/discussion/tests/functional_test_comments.txt b/plone/app/discussion/tests/functional_test_comments.txt\nindex a727738a..61ab4a3e 100644\n--- a/plone/app/discussion/tests/functional_test_comments.txt\n+++ b/plone/app/discussion/tests/functional_test_comments.txt\n@@ -8,8 +8,8 @@ We use zope.testbrowser to simulate browser interaction in order to show how\n the plone.app.discussion commenting works.\n \n \n-Setting up and loggin in\n-------------------------\n+Setting up and log in\n+---------------------\n \n First we have to set up some things and login.\n \ndiff --git a/plone/app/discussion/tests/test_comments_viewlet.py b/plone/app/discussion/tests/test_comments_viewlet.py\nindex 062ff3fc..f3302b7f 100644\n--- a/plone/app/discussion/tests/test_comments_viewlet.py\n+++ b/plone/app/discussion/tests/test_comments_viewlet.py\n@@ -766,7 +766,7 @@ def test_format_time(self):\n         python_time = datetime(2009, 2, 1, 23, 32, 3, 57)\n         # Python Time must be utc time. There seems to be no too simple way\n         # to tell datetime to be of utc time.\n-        # therefor, we convert the time to seconds since epoch, which seems\n+        # therefore, we convert the time to seconds since epoch, which seems\n         # to assume, that the datetime was given in local time, and does the\n         # correction to the seconds since epoch. Then time.gmtime returns\n         # a correct utc time that can be used to make datetime set the utc\n'

Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2023-04-01T14:53:57+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.discussion/commit/72f93e07d5059b9d66c8e7f5d958ced0aa19aa3c

feat: remove archetypes code path

Files changed:
M plone/app/discussion/browser/conversation.py

b'diff --git a/plone/app/discussion/browser/conversation.py b/plone/app/discussion/browser/conversation.py\nindex 7c6dd9d0..eda71a1d 100644\n--- a/plone/app/discussion/browser/conversation.py\n+++ b/plone/app/discussion/browser/conversation.py\n@@ -10,14 +10,6 @@\n from zope.component import queryUtility\n \n \n-try:\n-    from plone.dexterity.interfaces import IDexterityContent\n-\n-    DEXTERITY_INSTALLED = True\n-except ImportError:\n-    DEXTERITY_INSTALLED = False\n-\n-\n def traverse_parents(context):\n     # Run through the aq_chain of obj and check if discussion is\n     # enabled in a parent folder.\n@@ -34,79 +26,6 @@ def traverse_parents(context):\n \n class ConversationView:\n     def enabled(self):\n-        if DEXTERITY_INSTALLED and IDexterityContent.providedBy(self.context):\n-            return self._enabled_for_dexterity_types()\n-        else:\n-            return self._enabled_for_archetypes()\n-\n-    def _enabled_for_archetypes(self):\n-        """Returns True if discussion is enabled for this conversation.\n-\n-        This method checks five different settings in order to figure out if\n-        discussion is enabled on a specific content object:\n-\n-        1) Check if discussion is enabled globally in the plone.app.discussion\n-           registry/control panel.\n-\n-        2) If the current content object is a folder, always return\n-           False, since we don\'t allow comments on a folder. This\n-           setting is used to allow / disallow comments for all content\n-           objects inside a folder, not for the folder itself.\n-\n-        3) Check if the allow_discussion boolean flag on the content object is\n-           set. If it is set to True or False, return the value. If it set to\n-           None, try further.\n-\n-        4) Traverse to a folder with allow_discussion set to either True or\n-           False. If allow_discussion is not set (None), traverse further until\n-           we reach the PloneSiteRoot.\n-\n-        5) Check if discussion is allowed for the content type.\n-        """\n-        context = aq_inner(self.context)\n-\n-        # Fetch discussion registry\n-        registry = queryUtility(IRegistry)\n-        settings = registry.forInterface(IDiscussionSettings, check=False)\n-\n-        # Check if discussion is allowed globally\n-        if not settings.globally_enabled:\n-            return False\n-\n-        # Always return False if object is a folder\n-        context_is_folderish = IFolderish.providedBy(context)\n-        if context_is_folderish:\n-            if not INonStructuralFolder.providedBy(context):\n-                return False\n-\n-        # If discussion is disabled for the object, bail out\n-        obj_flag = getattr(aq_base(context), "allow_discussion", None)\n-        if obj_flag is False:\n-            return False\n-\n-        # Check if traversal returned a folder with discussion_allowed set\n-        # to True or False.\n-        folder_allow_discussion = traverse_parents(context)\n-\n-        if folder_allow_discussion:\n-            if not getattr(self, "allow_discussion", None):\n-                return True\n-        else:\n-            if obj_flag:\n-                return True\n-\n-        # Check if discussion is allowed on the content type\n-        portal_types = getToolByName(self, "portal_types")\n-        document_fti = getattr(portal_types, context.portal_type)\n-        if not document_fti.getProperty("allow_discussion"):\n-            # If discussion is not allowed on the content type,\n-            # check if \'allow discussion\' is overridden on the content object.\n-            if not obj_flag:\n-                return False\n-\n-        return True\n-\n-    def _enabled_for_dexterity_types(self):\n         """Returns True if discussion is enabled for this conversation.\n \n         This method checks five different settings in order to figure out if\n'

Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2023-04-01T19:01:59+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.discussion/commit/9bce1dce9831a854cad3261f32ada94030607168

chore: zptlint PT

Files changed:
M plone/app/discussion/browser/controlpanel.pt
M plone/app/discussion/browser/moderation.pt

b'diff --git a/plone/app/discussion/browser/controlpanel.pt b/plone/app/discussion/browser/controlpanel.pt\nindex b0e57e7a..fa7ffeb1 100644\n--- a/plone/app/discussion/browser/controlpanel.pt\n+++ b/plone/app/discussion/browser/controlpanel.pt\n@@ -1,24 +1,36 @@\n-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"\n-      xmlns:tal="http://xml.zope.org/namespaces/tal"\n-      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+<html xmlns="http://www.w3.org/1999/xhtml"\n       xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+      xmlns:tal="http://xml.zope.org/namespaces/tal"\n       lang="en"\n       metal:use-macro="here/prefs_main_template/macros/master"\n-      i18n:domain="plone">\n-<body>\n+      xml:lang="en"\n+      i18n:domain="plone"\n+>\n+  <body>\n \n-<metal:main metal:fill-slot="prefs_configlet_main" i18n:domain="plone">\n+    <metal:main metal:fill-slot="prefs_configlet_main"\n+                i18n:domain="plone"\n+    >\n \n-    <header>\n-      <h1 class="documentFirstHeading" tal:content="view/label">View Title</h1>\n-      <p class="lead" tal:content="view/description">Description</p>\n-    </header>\n+      <header>\n+        <h1 class="documentFirstHeading"\n+            tal:content="view/label"\n+        >View Title</h1>\n+        <p class="lead"\n+           tal:content="view/description"\n+        >Description</p>\n+      </header>\n \n-    <div id="content-core" tal:attributes="class view/settings">\n-      <span tal:replace="structure view/contents" />\n-    </div>\n+      <div id="content-core"\n+           tal:attributes="\n+             class view/settings;\n+           "\n+      >\n+        <span tal:replace="structure view/contents"></span>\n+      </div>\n \n-</metal:main>\n+    </metal:main>\n \n-</body>\n+  </body>\n </html>\ndiff --git a/plone/app/discussion/browser/moderation.pt b/plone/app/discussion/browser/moderation.pt\nindex b3a94785..4c6162d6 100644\n--- a/plone/app/discussion/browser/moderation.pt\n+++ b/plone/app/discussion/browser/moderation.pt\n@@ -1,30 +1,36 @@\n <html xmlns="http://www.w3.org/1999/xhtml"\n-  xml:lang="en"\n-  xmlns:tal="http://xml.zope.org/namespaces/tal"\n-  xmlns:metal="http://xml.zope.org/namespaces/metal"\n-  xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n-  lang="en"\n-  metal:use-macro="context/main_template/macros/master"\n-  i18n:domain="plone">\n+      xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+      xmlns:tal="http://xml.zope.org/namespaces/tal"\n+      lang="en"\n+      metal:use-macro="context/main_template/macros/master"\n+      xml:lang="en"\n+      i18n:domain="plone"\n+>\n   <body>\n \n     <metal:override fill-slot="top_slot"\n-      tal:define="disable_column_one python:request.set(\'disable_plone.leftcolumn\',1);\n-                disable_column_two python:request.set(\'disable_plone.rightcolumn\',1);" />\n+                    tal:define="\n+                      disable_column_one python:request.set(\'disable_plone.leftcolumn\',1);\n+                      disable_column_two python:request.set(\'disable_plone.rightcolumn\',1);\n+                    "\n+    />\n \n     <metal:main fill-slot="main">\n       <tal:main-macro metal:define-macro="main"\n-        tal:define="toLocalizedTime nocall:context/@@plone/toLocalizedTime;\n-                    items view/comments;\n-                    filter request/review_state|nothing;\n-                    Batch python:modules[\'Products.CMFPlone\'].Batch;\n-                    b_size python:30;\n-                    b_start python:0;\n-                    b_start request/b_start | b_start;\n-                    moderation_enabled view/moderation_enabled;\n-                    colorclass python:lambda x: \'state-private\' if x==\'rejected\' else (\'state-internal\' if x==\'spam\' else \'state-\'+x);\n-                    translationhelper nocall:context/@@translationhelper;\n-                    ">\n+                      tal:define="\n+                        toLocalizedTime nocall:context/@@plone/toLocalizedTime;\n+                        items view/comments;\n+                        filter request/review_state|nothing;\n+                        Batch python:modules[\'Products.CMFPlone\'].Batch;\n+                        b_size python:30;\n+                        b_start python:0;\n+                        b_start request/b_start | b_start;\n+                        moderation_enabled view/moderation_enabled;\n+                        colorclass python:lambda x: \'state-private\' if x==\'rejected\' else (\'state-internal\' if x==\'spam\' else \'state-\'+x);\n+                        translationhelper nocall:context/@@translationhelper;\n+                      "\n+      >\n         <style>\n             #review-comments th label {\n                 margin-right: 1em;\n@@ -35,90 +41,121 @@\n             Moderate comments\n         </h1>\n         <div class="alert alert-info"\n-          role="status"\n-          tal:condition="python: not moderation_enabled">\n+             role="status"\n+             tal:condition="python: not moderation_enabled"\n+        >\n           <strong>Info</strong>\n           <div i18n:translate="message_moderation_disabled">Moderation workflow is disabled. You have to\n-            <a i18n:name="enable_comment_workflow"\n-              i18n:translate="message_enable_comment_workflow"\n-              href=""\n-              tal:attributes="href string:${context/portal_url}/@@content-controlpanel?type_id=Discussion Item">\n+            <a href=""\n+               tal:attributes="\n+                 href string:${context/portal_url}/@@content-controlpanel?type_id=Discussion Item;\n+               "\n+               i18n:name="enable_comment_workflow"\n+               i18n:translate="message_enable_comment_workflow"\n+            >\n             enable the \'Comment Review Workflow\' for the Comment content\n-            type</a> before you can moderate comments here.</div>\n+              type</a>\n+            before you can moderate comments here.</div>\n         </div>\n \n         <form class="mb-3"\n-          method="post"\n-          action="#"\n-          tal:condition="moderation_enabled"\n-          tal:attributes="action string:${context/absolute_url}/@@bulk-actions"\n-          tal:define="batch python:Batch(items, b_size, int(b_start), orphan=1);">\n-          <fieldset id="fieldset-moderate-comments"\n-            class="formPanel">\n+              action="#"\n+              method="post"\n+              tal:define="\n+                batch python:Batch(items, b_size, int(b_start), orphan=1);\n+              "\n+              tal:condition="moderation_enabled"\n+              tal:attributes="\n+                action string:${context/absolute_url}/@@bulk-actions;\n+              "\n+        >\n+          <fieldset class="formPanel"\n+                    id="fieldset-moderate-comments"\n+          >\n \n-            <div metal:use-macro="here/batch_macros/macros/navigation" />\n+            <div metal:use-macro="here/batch_macros/macros/navigation"></div>\n             <div id="review-comments">\n \n               <div class="row row-cols-lg-auto g-3 align-items-center mb-2 mt-2"\n-                id="bulkactions">\n+                   id="bulkactions"\n+              >\n                 <tal:bulk condition="items">\n                   <div class="col-auto">\n                     <select class="form-select"\n-                      name="form.select.BulkAction">\n+                            name="form.select.BulkAction"\n+                    >\n                       <option selected="selected"\n-                        value="-1"\n-                        i18n:translate="title_bulkactions">Bulk Actions</option>\n-                      <tal:comment tal:replace="nothing"></tal:comment>\n+                              value="-1"\n+                              i18n:translate="title_bulkactions"\n+                      >Bulk Actions</option>\n+                      <tal:comment tal:replace="nothing" />\n                       <option value="publish"\n-                        i18n:translate="bulkactions_publish"\n-                        tal:condition="python: filter != \'published\'">Approve</option>\n+                              tal:condition="python: filter != \'published\'"\n+                              i18n:translate="bulkactions_publish"\n+                      >Approve</option>\n                       <option value="mark_as_spam"\n-                        i18n:translate="bulkactions_spam"\n-                        tal:condition="python: filter != \'spam\'">Spam</option>\n+                              tal:condition="python: filter != \'spam\'"\n+                              i18n:translate="bulkactions_spam"\n+                      >Spam</option>\n                       <option value="delete"\n-                        i18n:translate="bulkactions_delete">Delete</option>\n+                              i18n:translate="bulkactions_delete"\n+                      >Delete</option>\n                     </select>\n                   </div>\n                   <div class="col-auto">\n-                    <input type="hidden"\n-                      name="filter"\n-                      tal:attributes="value filter" />\n+                    <input name="filter"\n+                           type="hidden"\n+                           tal:attributes="\n+                             value filter;\n+                           "\n+                    />\n                     <button class="standalone allowMultiSubmit btn btn-primary"\n-                      id="dobulkaction"\n-                      type="submit"\n-                      value="Apply"\n-                      name="form.button.BulkAction"\n-                      i18n:attributes="value label_apply;"\n-                      i18n:translate="label_apply">Apply</button>\n+                            id="dobulkaction"\n+                            name="form.button.BulkAction"\n+                            type="submit"\n+                            value="Apply"\n+                            i18n:attributes="value label_apply;"\n+                            i18n:translate="label_apply"\n+                    >Apply</button>\n                   </div>\n                 </tal:bulk>\n \n                 <div class="flex-grow-1">\n                   <div class="row row-cols-lg-auto g-3 align-items-center justify-content-end"\n-                    tal:condition="view/moderation_multiple_state_enabled">\n+                       tal:condition="view/moderation_multiple_state_enabled"\n+                  >\n                     <label i18n:translate="filter_by_state">Filter by state:</label>\n                     <div>\n                       <input class="form-check-input"\n-                        type="radio"\n-                        id="all"\n-                        name="review_state"\n-                        value="all"\n-                        tal:attributes="checked python:request.review_state==\'all\'" />\n+                             id="all"\n+                             name="review_state"\n+                             type="radio"\n+                             value="all"\n+                             tal:attributes="\n+                               checked python:request.review_state==\'all\';\n+                             "\n+                      />\n                       <label class="form-check-label"\n-                        for="all"\n-                        i18n:translate="">all</label>\n+                             for="all"\n+                             i18n:translate=""\n+                      >all</label>\n                     </div>\n                     <tal:states tal:repeat="review_state python:[\'pending\', \'published\', \'rejected\', \'spam\']">\n                       <div>\n                         <input class="form-check-input"\n-                          type="radio"\n-                          name="review_state"\n-                          tal:attributes="\n-                                value review_state;\n-                                id review_state;\n-                                checked python:request.review_state==review_state" />\n+                               name="review_state"\n+                               type="radio"\n+                               tal:attributes="\n+                                 value review_state;\n+                                 id review_state;\n+                                 checked python:request.review_state==review_state;\n+                               "\n+                        />\n                         <label class="form-check-label"\n-                          tal:attributes="for review_state">\n+                               tal:attributes="\n+                                 for review_state;\n+                               "\n+                        >\n                           <span tal:content="python:translationhelper.translate_comment_review_state(review_state)">review_state</span>\n                         </label>\n                       </div>\n@@ -131,120 +168,166 @@\n               <table class="table table-bordered table-striped">\n                 <thead>\n                   <tr tal:condition="items">\n-                    <th scope="col"\n-                      class="nosort">\n+                    <th class="nosort"\n+                        scope="col"\n+                    >\n                       <input name="check_all"\n-                        type="checkbox"\n-                        value="0" />\n+                             type="checkbox"\n+                             value="0"\n+                      />\n                     </th>\n-                    <th scope="col"\n-                      class="nosort"\n-                      i18n:translate="heading_commenter">Commenter</th>\n-                    <th scope="col"\n-                      class="nosort"\n-                      i18n:translate="heading_date">Date</th>\n-                    <th scope="col"\n-                      class="nosort"\n-                      i18n:translate="heading_in_reponse_to">In Response To</th>\n-                    <th scope="col"\n-                      class="nosort"\n-                      i18n:translate="heading_comment">Comment</th>\n-                    <th scope="col"\n-                      class="nosort"\n-                      i18n:translate="heading_changedby">Last Action</th>\n+                    <th class="nosort"\n+                        scope="col"\n+                        i18n:translate="heading_commenter"\n+                    >Commenter</th>\n+                    <th class="nosort"\n+                        scope="col"\n+                        i18n:translate="heading_date"\n+                    >Date</th>\n+                    <th class="nosort"\n+                        scope="col"\n+                        i18n:translate="heading_in_reponse_to"\n+                    >In Response To</th>\n+                    <th class="nosort"\n+                        scope="col"\n+                        i18n:translate="heading_comment"\n+                    >Comment</th>\n+                    <th class="nosort"\n+                        scope="col"\n+                        i18n:translate="heading_changedby"\n+                    >Last Action</th>\n                   </tr>\n                 </thead>\n                 <tbody>\n-                  <tal:block repeat="item batch"\n-                    tal:condition="items">\n+                  <tal:block tal:condition="items"\n+                             repeat="item batch"\n+                  >\n                     <tr class="commentrow"\n-                      tal:define="even repeat/item/even;\n-                                          item_obj item/getObject;\n-                                          email item_obj/author_email;\n-                                          item_url item/getURL;"\n-                      tal:attributes="class python: even and \'odd\' or \'even\'">\n+                        tal:define="\n+                          even repeat/item/even;\n+                          item_obj item/getObject;\n+                          email item_obj/author_email;\n+                          item_url item/getURL;\n+                        "\n+                        tal:attributes="\n+                          class python: even and \'odd\' or \'even\';\n+                        "\n+                    >\n                       <td class="notDraggable">\n-                        <input type="checkbox"\n-                          class="noborder"\n-                          name="paths:list"\n-                          id="#"\n-                          value="#"\n-                          tal:attributes="value   item/getPath;\n-                                                         id      string:cb_${item/id};\n-                                                         checked item/checked|nothing;\n-                                                         alt     string:Select ${item/Title};\n-                                                         title   string:Select ${item/Title}" />\n-                        <input type="hidden"\n-                          name="selected_obj_paths:list"\n-                          value="#"\n-                          tal:attributes="value item/getURL" />\n+                        <input class="noborder"\n+                               id="#"\n+                               name="paths:list"\n+                               type="checkbox"\n+                               value="#"\n+                               tal:attributes="\n+                                 value   item/getPath;\n+                                 id      string:cb_${item/id};\n+                                 checked item/checked|nothing;\n+                                 alt     string:Select ${item/Title};\n+                                 title   string:Select ${item/Title};\n+                               "\n+                        />\n+                        <input name="selected_obj_paths:list"\n+                               type="hidden"\n+                               value="#"\n+                               tal:attributes="\n+                                 value item/getURL;\n+                               "\n+                        />\n                       </td>\n                       <td>\n                         <span tal:content="python:item.author_name or item.Creator">Name</span>\n                         <tal:email tal:condition="email">\n                           <br />\n-                          <a tal:attributes="href string:mailto:$email;"\n-                            tal:content="email">Email\n+                          <a tal:content="email"\n+                             tal:attributes="\n+                               href string:mailto:$email;\n+                             "\n+                          >Email\n                           </a>\n                         </tal:email>\n                       </td>\n                       <td style="white-space: nowrap;"\n-                        tal:content="python:toLocalizedTime(item.created, long_format=1)" />\n+                          tal:content="python:toLocalizedTime(item.created, long_format=1)"\n+                      ></td>\n                       <td>\n-                        <a tal:attributes="href item_url"\n-                          target="_blank"\n-                          tal:content="item/in_response_to" />\n+                        <a target="_blank"\n+                           tal:content="item/in_response_to"\n+                           tal:attributes="\n+                             href item_url;\n+                           "\n+                        ></a>\n                       </td>\n-                      <td tal:attributes="class  python:colorclass(item.review_state)">\n+                      <td tal:attributes="\n+                            class  python:colorclass(item.review_state);\n+                          ">\n                         <div class="mb-2">\n-                          <span tal:replace="item/Description" />\n-                          <a href=""\n-                            tal:attributes="href string:$item_url/getText"\n-                            tal:condition="python:item.Description.endswith(\'[...]\')"\n-                            i18n:translate="label_show_full_comment_text"\n-                            class="show-full-comment-text">show full comment text</a>\n+                          <span tal:replace="item/Description"></span>\n+                          <a class="show-full-comment-text"\n+                             href=""\n+                             tal:condition="python:item.Description.endswith(\'[...]\')"\n+                             tal:attributes="\n+                               href string:$item_url/getText;\n+                             "\n+                             i18n:translate="label_show_full_comment_text"\n+                          >show full comment text</a>\n                         </div>\n                         <div class="actions input-group-addon">\n-                          <input type="hidden"\n-                            name="selected_obj_paths:list"\n-                            value="#"\n-                            tal:attributes="value item/getURL" />\n+                          <input name="selected_obj_paths:list"\n+                                 type="hidden"\n+                                 value="#"\n+                                 tal:attributes="\n+                                   value item/getURL;\n+                                 "\n+                          />\n                           <!-- delete -->\n-                          <button id=""\n-                            class="destructive comment-delete-button btn btn-sm btn-danger"\n-                            type="submit"\n-                            value="Delete"\n-                            name="form.button.moderation.DeleteComment"\n-                            i18n:attributes="value label_delete;"\n-                            tal:attributes="id item/id"\n-                            i18n:translate="label_delete">Delete</button>\n+                          <button class="destructive comment-delete-button btn btn-sm btn-danger"\n+                                  id=""\n+                                  name="form.button.moderation.DeleteComment"\n+                                  type="submit"\n+                                  value="Delete"\n+                                  tal:attributes="\n+                                    id item/id;\n+                                  "\n+                                  i18n:attributes="value label_delete;"\n+                                  i18n:translate="label_delete"\n+                          >Delete</button>\n                           <!-- edit -->\n                           <a class="pat-plone-modal context btn btn-sm btn-primary"\n-                            href="#"\n-                            i18n:translate="label_edit"\n-                            tal:attributes="href python:item_url+\'/@@edit-comment?review_state=\' + item.review_state">Edit</a>\n+                             href="#"\n+                             tal:attributes="\n+                               href python:item_url+\'/@@edit-comment?review_state=\' + item.review_state;\n+                             "\n+                             i18n:translate="label_edit"\n+                          >Edit</a>\n \n                           <!-- workflow actions -->\n                           <tal:transitions tal:define="\n-                                            transitions python:view.allowed_transitions(item_obj)">\n-                            <button name="form.button.moderation.TransmitComment"\n-                              tal:repeat="transition transitions"\n-                              class="context btn btn-sm btn-primary"\n-                              type="submit"\n-                              value="Label"\n-                              tal:content="python:translationhelper.translate(transition[\'title\'])"\n-                              tal:attributes="id string:${item/id}_${transition/id};\n-                                                    data-transition transition/id;\n-                                                    value python:translationhelper.translate(transition[\'title\']);\n-                                                    style python:transition[\'id\']==\'publish\' and \'background-color: #5cb85c;; border-color: #4cae4c;;\' or \'\';\n-                                                    ">Label</button>\n+                                             transitions python:view.allowed_transitions(item_obj);\n+                                           ">\n+                            <button class="context btn btn-sm btn-primary"\n+                                    name="form.button.moderation.TransmitComment"\n+                                    type="submit"\n+                                    value="Label"\n+                                    tal:repeat="transition transitions"\n+                                    tal:content="python:translationhelper.translate(transition[\'title\'])"\n+                                    tal:attributes="\n+                                      id string:${item/id}_${transition/id};\n+                                      data-transition transition/id;\n+                                      value python:translationhelper.translate(transition[\'title\']);\n+                                      style python:transition[\'id\']==\'publish\' and \'background-color: #5cb85c;; border-color: #4cae4c;;\' or \'\';\n+                                    "\n+                            >Label</button>\n                           </tal:transitions>\n                         </div>\n                       </td>\n                       <td>\n                         <span class="last-history-entry"\n-                          tal:attributes="data-href string:$item_url/@@contenthistorypopup"\n-                          i18n:translate="">\n+                              tal:attributes="\n+                                data-href string:$item_url/@@contenthistorypopup;\n+                              "\n+                              i18n:translate=""\n+                        >\n                                       last history entry\n                         </span>\n                       </td>\n@@ -253,7 +336,7 @@\n                 </tbody>\n               </table>\n             </div>\n-            <div metal:use-macro="here/batch_macros/macros/navigation" />\n+            <div metal:use-macro="here/batch_macros/macros/navigation"></div>\n           </fieldset>\n         </form>\n \n'

Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2023-04-01T19:01:59+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.discussion/commit/257e33924da535494f21663f8d49694d7bf47240

fix(ci): disable zpretty

Files changed:
M .pre-commit-config.yaml

b'diff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex 582f8acd..1c669270 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -18,10 +18,6 @@ repos:\n     rev: 23.1.0\n     hooks:\n     -   id: black\n--   repo: https://github.com/collective/zpretty\n-    rev: 3.0.2\n-    hooks:\n-    -   id: zpretty\n -   repo: https://github.com/PyCQA/flake8\n     rev: 6.0.0\n     hooks:\n'

Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2023-04-01T19:01:59+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.discussion/commit/05ff8dfd88225f76561d23200be6451bebd31d1e

feat: configure z3c.dependencychecker

Files changed:
M pyproject.toml

b'diff --git a/pyproject.toml b/pyproject.toml\nindex 7a2d8b0e..faf50fb2 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -60,6 +60,7 @@ Zope = [\n   \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n ]\n python-dateutil = [\'dateutil\']\n+ignore-packages = ["Products.LinguaPlone.interfaces.ITranslatable", "collective.akismet", "collective.z3cform.norobots", "plone.formwidget.captcha", "plone.formwidget.recaptcha", "plone.contentrules", "plone.app.contentrules", "plone.stringinterp", "plone.app.collection"]\n \n [tool.codespell]\n ignore-words-list = "discreet"\n'

Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2023-04-01T19:01:59+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.discussion/commit/7dbefd0e9e03dd85ec714ffeced38f5ca50bafa0

feat:  declare dependencies

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex 819912bb..e75ddfed 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -5,11 +5,22 @@\n version = "4.0.1.dev0"\n \n install_requires = [\n+    "BTrees",\n+    "Products.GenericSetup",\n+    "Products.ZCatalog",\n+    "Products.statusmessages",\n+    "persistent",\n+    "plone.api",\n+    "plone.app.event",\n+    "plone.dexterity",\n+    "plone.registry",\n+    "plone.resource",\n+    "plone.uuid",\n+    "zope.annotation",\n     "setuptools",\n     "plone.app.layout",\n     "plone.app.registry",\n     "plone.app.uuid",\n-    "plone.app.z3cform",\n     "plone.base",\n     "plone.indexer",\n     "plone.z3cform",\n@@ -55,6 +66,12 @@\n             "plone.app.contentrules",\n             "plone.app.contenttypes[test]",\n             "plone.app.robotframework",\n+            "plone.app.vocabularies",\n+            "plone.testing",\n+            "plone.protect",\n+            "Products.MailHost",\n+            "robotsuite",\n+            "python-dateutil",\n         ],\n     },\n )\n'

Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2023-04-01T23:09:35+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.discussion/commit/e7f7a248f0b0766a7a7ffda7bae63034c31b0b50

Merge pull request #207 from plone/config-with-default-template-58fc40eb

Config with default template

Files changed:
A .editorconfig
A .meta.toml
A .pre-commit-config.yaml
A news/47959565.internal
A tox.ini
M CHANGES.rst
M docs/source/api/index.txt
M docs/source/conf.py
M plone/app/discussion/architecture.txt
M plone/app/discussion/browser/captcha.zcml
M plone/app/discussion/browser/comment.py
M plone/app/discussion/browser/comments.py
M plone/app/discussion/browser/configure.zcml
M plone/app/discussion/browser/controlpanel.pt
M plone/app/discussion/browser/conversation.py
M plone/app/discussion/browser/moderation.pt
M plone/app/discussion/browser/moderation.py
M plone/app/discussion/browser/traversal.py
M plone/app/discussion/catalog.py
M plone/app/discussion/comment.py
M plone/app/discussion/configure.zcml
M plone/app/discussion/contentrules.zcml
M plone/app/discussion/conversation.py
M plone/app/discussion/notifications.zcml
M plone/app/discussion/permissions.zcml
M plone/app/discussion/profiles/default/actions.xml
M plone/app/discussion/profiles/default/browserlayer.xml
M plone/app/discussion/profiles/default/catalog.xml
M plone/app/discussion/profiles/default/controlpanel.xml
M plone/app/discussion/profiles/default/metadata.xml
M plone/app/discussion/profiles/default/portal_atct.xml
M plone/app/discussion/profiles/default/registry.xml
M plone/app/discussion/profiles/default/rolemap.xml
M plone/app/discussion/profiles/default/types.xml
M plone/app/discussion/profiles/default/types/Discussion_Item.xml
M plone/app/discussion/profiles/default/workflows.xml
M plone/app/discussion/profiles/default/workflows/comment_one_state_workflow/definition.xml
M plone/app/discussion/profiles/default/workflows/comment_review_workflow/definition.xml
M plone/app/discussion/subscribers.py
M plone/app/discussion/subscribers.zcml
M plone/app/discussion/testing.py
M plone/app/discussion/tests/functional_test_comments.txt
M plone/app/discussion/tests/test_catalog.py
M plone/app/discussion/tests/test_comment.py
M plone/app/discussion/tests/test_comments_viewlet.py
M plone/app/discussion/tests/test_controlpanel.py
M plone/app/discussion/tests/test_conversation.py
M plone/app/discussion/tests/test_events.py
M plone/app/discussion/tests/test_indexers.py
M plone/app/discussion/tests/test_moderation_multiple_state_view.py
M plone/app/discussion/tests/test_moderation_view.py
M plone/app/discussion/tests/test_notifications.py
M plone/app/discussion/tests/test_workflow.py
M plone/app/discussion/tool.py
M plone/app/discussion/upgrades.py
M plone/app/discussion/upgrades.zcml
M pyproject.toml
M setup.cfg
M setup.py

b'diff --git a/.editorconfig b/.editorconfig\nnew file mode 100644\nindex 00000000..b4158b89\n--- /dev/null\n+++ b/.editorconfig\n@@ -0,0 +1,39 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+#\n+# EditorConfig Configuration file, for more details see:\n+# http://EditorConfig.org\n+# EditorConfig is a convention description, that could be interpreted\n+# by multiple editors to enforce common coding conventions for specific\n+# file types\n+\n+# top-most EditorConfig file:\n+# Will ignore other EditorConfig files in Home directory or upper tree level.\n+root = true\n+\n+\n+[*]  # For All Files\n+# Unix-style newlines with a newline ending every file\n+end_of_line = lf\n+insert_final_newline = true\n+trim_trailing_whitespace = true\n+# Set default charset\n+charset = utf-8\n+# Indent style default\n+indent_style = space\n+# Max Line Length - a hard line wrap, should be disabled\n+max_line_length = off\n+\n+[*.{py,cfg,ini}]\n+# 4 space indentation\n+indent_size = 4\n+\n+[*.{yml,zpt,pt,dtml,zcml}]\n+# 2 space indentation\n+indent_size = 2\n+\n+[{Makefile,.gitmodules}]\n+# Tab indentation (no size specified, but view as 4 spaces)\n+indent_style = tab\n+indent_size = unset\n+tab_width = unset\ndiff --git a/.meta.toml b/.meta.toml\nnew file mode 100644\nindex 00000000..07dde259\n--- /dev/null\n+++ b/.meta.toml\n@@ -0,0 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[meta]\n+template = "default"\n+commit-id = "47959565"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nnew file mode 100644\nindex 00000000..1c669270\n--- /dev/null\n+++ b/.pre-commit-config.yaml\n@@ -0,0 +1,38 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+ci:\n+    autofix_prs: false\n+    autoupdate_schedule: monthly\n+\n+repos:\n+-   repo: https://github.com/asottile/pyupgrade\n+    rev: v3.3.1\n+    hooks:\n+    -   id: pyupgrade\n+        args: [--py38-plus]\n+-   repo: https://github.com/pycqa/isort\n+    rev: 5.12.0\n+    hooks:\n+    -   id: isort\n+-   repo: https://github.com/psf/black\n+    rev: 23.1.0\n+    hooks:\n+    -   id: black\n+-   repo: https://github.com/PyCQA/flake8\n+    rev: 6.0.0\n+    hooks:\n+    -   id: flake8\n+-   repo: https://github.com/codespell-project/codespell\n+    rev: v2.2.2\n+    hooks:\n+    -   id: codespell\n+        additional_dependencies:\n+          - tomli\n+-   repo: https://github.com/mgedmin/check-manifest\n+    rev: "0.49"\n+    hooks:\n+    -   id: check-manifest\n+-   repo: https://github.com/regebro/pyroma\n+    rev: "4.2"\n+    hooks:\n+    -   id: pyroma\ndiff --git a/CHANGES.rst b/CHANGES.rst\nindex a37d8f65..33febd51 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -190,7 +190,7 @@ Bug fixes:\n New features:\n \n \n-- Extended existing review workflow by stati ``rejected`` and ``spam``\n+- Extended existing review workflow by state ``rejected`` and ``spam``\n   Moderation view extended to handle four workflow states.\n   [ksuess and precious input of agitator] (#164)\n \n@@ -748,7 +748,7 @@ Fixes:\n -------------------\n \n - Revert "Refactor tests to use the PLONE_APP_CONTENTTYPES_FIXTURE instead of\n-  the PLONE_FIXTURE." that has been accidentially introduced into the 2.2.9\n+  the PLONE_FIXTURE." that has been accidentally introduced into the 2.2.9\n   release.\n   [timo]\n \n@@ -1076,7 +1076,7 @@ Fixes:\n 2.0.9 (2011-07-25)\n ------------------\n \n-- Make sure the creator index always stores utf-8 encoded stings and not\n+- Make sure the creator index always stores utf-8 encoded strings and not\n   unicode.\n   [timo]\n \ndiff --git a/docs/source/api/index.txt b/docs/source/api/index.txt\nindex a7b72f83..5961046f 100644\n--- a/docs/source/api/index.txt\n+++ b/docs/source/api/index.txt\n@@ -10,7 +10,7 @@ are IComment objects. It also provides features for finding comments quickly.\n \n The IReplies adapter provides an API for finding and manipulating the comments\n directly in reply to a particular comment (implemented by the CommentReplies\n-adpater) or at the top level of the conversation (implemented by the\n+adapter) or at the top level of the conversation (implemented by the\n ConversationReplies adapter).\n \n \ndiff --git a/docs/source/conf.py b/docs/source/conf.py\nindex b94ce2d8..a2cdddc3 100644\n--- a/docs/source/conf.py\n+++ b/docs/source/conf.py\n@@ -10,10 +10,6 @@\n # All configuration values have a default; values that are commented out\n # serve to show the default.\n \n-import os\n-import sys\n-\n-\n # If extensions (or modules to document with autodoc) are in another directory,\n # add these directories to sys.path here. If the directory is relative to the\n # documentation root, use os.path.abspath to make it absolute, like shown here.\ndiff --git a/news/47959565.internal b/news/47959565.internal\nnew file mode 100644\nindex 00000000..c08f5399\n--- /dev/null\n+++ b/news/47959565.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/plone/app/discussion/architecture.txt b/plone/app/discussion/architecture.txt\nindex dff50369..f8026e38 100644\n--- a/plone/app/discussion/architecture.txt\n+++ b/plone/app/discussion/architecture.txt\n@@ -25,7 +25,7 @@ plone.app.discussion.\n     Comments should not provide the full set of dublin core metadata, though\n     custom indexers can be used to provide values for standard catalog indexes.\n \n-  **Optimise for retrival speed**\n+  **Optimise for retrieval speed**\n     HTML filtering and other processing should happen on save, not on render,\n     to make rendering quick.\n \ndiff --git a/plone/app/discussion/browser/captcha.zcml b/plone/app/discussion/browser/captcha.zcml\nindex 23951636..22ff8e02 100644\n--- a/plone/app/discussion/browser/captcha.zcml\n+++ b/plone/app/discussion/browser/captcha.zcml\n@@ -2,34 +2,37 @@\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:meta="http://namespaces.zope.org/meta"\n     xmlns:zcml="http://namespaces.zope.org/zcml"\n-    i18n_domain="plone">\n+    i18n_domain="plone"\n+    >\n \n-    <!-- Captcha comment form extender -->\n-    <configure zcml:condition="have plone.app.discussion-captcha">\n-        <!--\n+  <!-- Captcha comment form extender -->\n+  <configure zcml:condition="have plone.app.discussion-captcha">\n+    <!--\n           Register the Captcha form extender and validator only if there are\n           plugins installed that declare to implement a Captcha solution for\n           plone.app.discussion (e.g. plone.formwidget.captcha and\n           plone.formwidget.recaptcha).\n         -->\n-        <adapter\n-            factory=".captcha.Captcha"\n-            provides="plone.app.discussion.interfaces.ICaptcha" />\n-        <adapter\n-            factory=".captcha.CaptchaExtender"\n-            provides="plone.z3cform.fieldsets.interfaces.IFormExtender" />\n-        <adapter\n-            factory=".validator.CaptchaValidator"\n-            provides="z3c.form.interfaces.IValidator"\n-            />\n-    </configure>\n+    <adapter\n+        factory=".captcha.Captcha"\n+        provides="plone.app.discussion.interfaces.ICaptcha"\n+        />\n+    <adapter\n+        factory=".captcha.CaptchaExtender"\n+        provides="plone.z3cform.fieldsets.interfaces.IFormExtender"\n+        />\n+    <adapter\n+        factory=".validator.CaptchaValidator"\n+        provides="z3c.form.interfaces.IValidator"\n+        />\n+  </configure>\n \n-    <!-- Akismet Validator -->\n-    <configure zcml:condition="installed collective.akismet">\n-        <adapter\n-            factory="collective.akismet.validator.AkismetValidator"\n-            provides="z3c.form.interfaces.IValidator"\n-            />\n-    </configure>\n+  <!-- Akismet Validator -->\n+  <configure zcml:condition="installed collective.akismet">\n+    <adapter\n+        factory="collective.akismet.validator.AkismetValidator"\n+        provides="z3c.form.interfaces.IValidator"\n+        />\n+  </configure>\n \n </configure>\ndiff --git a/plone/app/discussion/browser/comment.py b/plone/app/discussion/browser/comment.py\nindex fc95a55c..d11dfeb4 100644\n--- a/plone/app/discussion/browser/comment.py\n+++ b/plone/app/discussion/browser/comment.py\n@@ -76,7 +76,6 @@ def _redirect(self, target=""):\n \n     @button.buttonAndHandler(_("label_save", default="Save"), name="comment")\n     def handleComment(self, action):\n-\n         # Validate form\n         data, errors = self.extractData()\n         if errors:\ndiff --git a/plone/app/discussion/browser/comments.py b/plone/app/discussion/browser/comments.py\nindex 02ca122d..272fdd64 100644\n--- a/plone/app/discussion/browser/comments.py\n+++ b/plone/app/discussion/browser/comments.py\n@@ -60,7 +60,6 @@\n \n \n class CommentForm(extensible.ExtensibleForm, form.Form):\n-\n     ignoreContext = True  # don\'t use context to get widget data\n     id = None\n     label = _("Add a comment")\n@@ -301,7 +300,6 @@ def handleCancel(self, action):\n \n \n class CommentsViewlet(ViewletBase):\n-\n     form = CommentForm\n     index = ViewPageTemplateFile("comments.pt")\n \n@@ -483,7 +481,6 @@ def get_commenter_home_url(self, username=None):\n             return f"{self.context.portal_url()}/author/{username}"\n \n     def get_commenter_portrait(self, username=None):\n-\n         if username is None:\n             # return the default user image if no username is given\n             return "defaultUser.png"\ndiff --git a/plone/app/discussion/browser/configure.zcml b/plone/app/discussion/browser/configure.zcml\nindex 0892259a..4ab73359 100644\n--- a/plone/app/discussion/browser/configure.zcml\n+++ b/plone/app/discussion/browser/configure.zcml\n@@ -3,154 +3,158 @@\n     xmlns:browser="http://namespaces.zope.org/browser"\n     xmlns:plone="http://namespaces.plone.org/plone"\n     xmlns:zcml="http://namespaces.zope.org/zcml"\n-    i18n_domain="plone">\n-\n-    <include package="plone.app.registry" />\n-\n-    <include file="captcha.zcml" />\n-\n-    <!-- Traversal adapter -->\n-    <adapter factory=".traversal.ConversationNamespace" name="conversation" />\n-\n-    <!-- Moderation view -->\n-    <browser:page\n-        for="Products.CMFCore.interfaces.ISiteRoot"\n-        name="moderate-comments"\n-        layer="..interfaces.IDiscussionLayer"\n-        class=".moderation.View"\n-        permission="plone.app.discussion.ReviewComments"\n-        />\n-\n-    <browser:page\n-        for="plone.app.layout.navigation.interfaces.INavigationRoot"\n-        name="moderate-comments"\n-        layer="..interfaces.IDiscussionLayer"\n-        class=".moderation.View"\n-        permission="plone.app.discussion.ReviewComments"\n-        />\n-\n-    <!-- Moderation bulk actions view -->\n-    <browser:page\n-        for="Products.CMFCore.interfaces.ISiteRoot"\n-        name="bulk-actions"\n-        layer="..interfaces.IDiscussionLayer"\n-        class=".moderation.BulkActionsView"\n-        permission="plone.app.discussion.ReviewComments"\n-        />\n-\n-    <browser:page\n-        for="plone.app.layout.navigation.interfaces.INavigationRoot"\n-        name="bulk-actions"\n-        layer="..interfaces.IDiscussionLayer"\n-        class=".moderation.BulkActionsView"\n-        permission="plone.app.discussion.ReviewComments"\n-        />\n-\n-    <!-- Moderate comments enabled view -->\n-    <browser:page\n-        for="plone.base.interfaces.IPloneSiteRoot"\n-        name="moderate-comments-enabled"\n-        layer="..interfaces.IDiscussionLayer"\n-        class=".moderation.ModerateCommentsEnabled"\n-        permission="zope2.View"\n-        />\n-\n-    <browser:page\n-        for="plone.app.layout.navigation.interfaces.INavigationRoot"\n-        name="moderate-comments-enabled"\n-        layer="..interfaces.IDiscussionLayer"\n-        class=".moderation.ModerateCommentsEnabled"\n-        permission="zope2.View"\n-        />\n-\n-    <!-- Edit comment view -->\n-    <browser:page\n-        for="plone.app.discussion.interfaces.IComment"\n-        name="edit-comment"\n-        layer="..interfaces.IDiscussionLayer"\n-        class=".comment.EditComment"\n-        permission="plone.app.discussion.EditComments"\n-        />\n-\n-    <!-- Delete comment views\n+    i18n_domain="plone"\n+    >\n+\n+  <include package="plone.app.registry" />\n+\n+  <include file="captcha.zcml" />\n+\n+  <!-- Traversal adapter -->\n+  <adapter\n+      factory=".traversal.ConversationNamespace"\n+      name="conversation"\n+      />\n+\n+  <!-- Moderation view -->\n+  <browser:page\n+      name="moderate-comments"\n+      for="Products.CMFCore.interfaces.ISiteRoot"\n+      class=".moderation.View"\n+      permission="plone.app.discussion.ReviewComments"\n+      layer="..interfaces.IDiscussionLayer"\n+      />\n+\n+  <browser:page\n+      name="moderate-comments"\n+      for="plone.app.layout.navigation.interfaces.INavigationRoot"\n+      class=".moderation.View"\n+      permission="plone.app.discussion.ReviewComments"\n+      layer="..interfaces.IDiscussionLayer"\n+      />\n+\n+  <!-- Moderation bulk actions view -->\n+  <browser:page\n+      name="bulk-actions"\n+      for="Products.CMFCore.interfaces.ISiteRoot"\n+      class=".moderation.BulkActionsView"\n+      permission="plone.app.discussion.ReviewComments"\n+      layer="..interfaces.IDiscussionLayer"\n+      />\n+\n+  <browser:page\n+      name="bulk-actions"\n+      for="plone.app.layout.navigation.interfaces.INavigationRoot"\n+      class=".moderation.BulkActionsView"\n+      permission="plone.app.discussion.ReviewComments"\n+      layer="..interfaces.IDiscussionLayer"\n+      />\n+\n+  <!-- Moderate comments enabled view -->\n+  <browser:page\n+      name="moderate-comments-enabled"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n+      class=".moderation.ModerateCommentsEnabled"\n+      permission="zope2.View"\n+      layer="..interfaces.IDiscussionLayer"\n+      />\n+\n+  <browser:page\n+      name="moderate-comments-enabled"\n+      for="plone.app.layout.navigation.interfaces.INavigationRoot"\n+      class=".moderation.ModerateCommentsEnabled"\n+      permission="zope2.View"\n+      layer="..interfaces.IDiscussionLayer"\n+      />\n+\n+  <!-- Edit comment view -->\n+  <browser:page\n+      name="edit-comment"\n+      for="plone.app.discussion.interfaces.IComment"\n+      class=".comment.EditComment"\n+      permission="plone.app.discussion.EditComments"\n+      layer="..interfaces.IDiscussionLayer"\n+      />\n+\n+  <!-- Delete comment views\n          has conditional security dependent on controlpanel settings.\n     -->\n-    <browser:page\n-        for="plone.app.discussion.interfaces.IComment"\n-        name="moderate-delete-comment"\n-        layer="..interfaces.IDiscussionLayer"\n-        class=".moderation.DeleteComment"\n-        permission="plone.app.discussion.DeleteComments"\n-        />\n-\n-    <browser:page\n-        for="plone.app.discussion.interfaces.IComment"\n-        name="delete-own-comment"\n-        layer="..interfaces.IDiscussionLayer"\n-        class=".moderation.DeleteOwnComment"\n-        permission="plone.app.discussion.DeleteOwnComments"\n-        />\n-\n-    <!-- Comment Transition -->\n-    <browser:page\n-        for="plone.app.discussion.interfaces.IComment"\n-        name="transmit-comment"\n-        layer="..interfaces.IDiscussionLayer"\n-        class=".moderation.CommentTransition"\n-        permission="plone.app.discussion.ReviewComments"\n-        />\n-\n-    <browser:page\n-        for="*"\n-        name="translationhelper"\n-        layer="..interfaces.IDiscussionLayer"\n-        class=".moderation.TranslationHelper"\n-        permission="plone.app.discussion.ReviewComments"\n-        />\n-\n-\n-    <!-- Comments viewlet -->\n-    <browser:viewlet\n-        name="plone.comments"\n-        for="Products.CMFCore.interfaces.IContentish"\n-        layer="..interfaces.IDiscussionLayer"\n-        manager="plone.app.layout.viewlets.interfaces.IBelowContent"\n-        view="plone.app.layout.globals.interfaces.IViewView"\n-        class=".comments.CommentsViewlet"\n-        permission="plone.app.discussion.ViewComments"\n-        />\n-\n-    <!-- Conversation view -->\n-    <browser:page\n-        name="conversation_view"\n-        for="Products.CMFCore.interfaces.IContentish"\n-        layer="..interfaces.IDiscussionLayer"\n-        class=".conversation.ConversationView"\n-        permission="zope2.View"\n-        />\n-\n-    <!-- Comment view -->\n-    <browser:view\n-        name="view"\n-        for="plone.app.discussion.interfaces.IComment"\n-        layer="..interfaces.IDiscussionLayer"\n-        class=".comment.View"\n-        permission="zope2.View"\n-        />\n-\n-    <!-- Control panel -->\n-    <browser:page\n-        name="discussion-controlpanel"\n-        for="plone.base.interfaces.IPloneSiteRoot"\n-        class=".controlpanel.DiscussionSettingsControlPanel"\n-        permission="cmf.ManagePortal"\n-        />\n-    <!-- Deprecated controlpanel url -->\n-    <browser:page\n-        name="discussion-settings"\n-        for="plone.base.interfaces.IPloneSiteRoot"\n-        class=".controlpanel.DiscussionSettingsControlPanel"\n-        permission="cmf.ManagePortal"\n-        />\n+  <browser:page\n+      name="moderate-delete-comment"\n+      for="plone.app.discussion.interfaces.IComment"\n+      class=".moderation.DeleteComment"\n+      permission="plone.app.discussion.DeleteComments"\n+      layer="..interfaces.IDiscussionLayer"\n+      />\n+\n+  <browser:page\n+      name="delete-own-comment"\n+      for="plone.app.discussion.interfaces.IComment"\n+      class=".moderation.DeleteOwnComment"\n+      permission="plone.app.discussion.DeleteOwnComments"\n+      layer="..interfaces.IDiscussionLayer"\n+      />\n+\n+  <!-- Comment Transition -->\n+  <browser:page\n+      name="transmit-comment"\n+      for="plone.app.discussion.interfaces.IComment"\n+      class=".moderation.CommentTransition"\n+      permission="plone.app.discussion.ReviewComments"\n+      layer="..interfaces.IDiscussionLayer"\n+      />\n+\n+  <browser:page\n+      name="translationhelper"\n+      for="*"\n+      class=".moderation.TranslationHelper"\n+      permission="plone.app.discussion.ReviewComments"\n+      layer="..interfaces.IDiscussionLayer"\n+      />\n+\n+\n+  <!-- Comments viewlet -->\n+  <browser:viewlet\n+      name="plone.comments"\n+      for="Products.CMFCore.interfaces.IContentish"\n+      view="plone.app.layout.globals.interfaces.IViewView"\n+      manager="plone.app.layout.viewlets.interfaces.IBelowContent"\n+      class=".comments.CommentsViewlet"\n+      permission="plone.app.discussion.ViewComments"\n+      layer="..interfaces.IDiscussionLayer"\n+      />\n+\n+  <!-- Conversation view -->\n+  <browser:page\n+      name="conversation_view"\n+      for="Products.CMFCore.interfaces.IContentish"\n+      class=".conversation.ConversationView"\n+      permission="zope2.View"\n+      layer="..interfaces.IDiscussionLayer"\n+      />\n+\n+  <!-- Comment view -->\n+  <browser:view\n+      name="view"\n+      for="plone.app.discussion.interfaces.IComment"\n+      class=".comment.View"\n+      permission="zope2.View"\n+      layer="..interfaces.IDiscussionLayer"\n+      />\n+\n+  <!-- Control panel -->\n+  <browser:page\n+      name="discussion-controlpanel"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n+      class=".controlpanel.DiscussionSettingsControlPanel"\n+      permission="cmf.ManagePortal"\n+      />\n+  <!-- Deprecated controlpanel url -->\n+  <browser:page\n+      name="discussion-settings"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n+      class=".controlpanel.DiscussionSettingsControlPanel"\n+      permission="cmf.ManagePortal"\n+      />\n \n </configure>\ndiff --git a/plone/app/discussion/browser/controlpanel.pt b/plone/app/discussion/browser/controlpanel.pt\nindex b0e57e7a..fa7ffeb1 100644\n--- a/plone/app/discussion/browser/controlpanel.pt\n+++ b/plone/app/discussion/browser/controlpanel.pt\n@@ -1,24 +1,36 @@\n-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"\n-      xmlns:tal="http://xml.zope.org/namespaces/tal"\n-      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+<html xmlns="http://www.w3.org/1999/xhtml"\n       xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+      xmlns:tal="http://xml.zope.org/namespaces/tal"\n       lang="en"\n       metal:use-macro="here/prefs_main_template/macros/master"\n-      i18n:domain="plone">\n-<body>\n+      xml:lang="en"\n+      i18n:domain="plone"\n+>\n+  <body>\n \n-<metal:main metal:fill-slot="prefs_configlet_main" i18n:domain="plone">\n+    <metal:main metal:fill-slot="prefs_configlet_main"\n+                i18n:domain="plone"\n+    >\n \n-    <header>\n-      <h1 class="documentFirstHeading" tal:content="view/label">View Title</h1>\n-      <p class="lead" tal:content="view/description">Description</p>\n-    </header>\n+      <header>\n+        <h1 class="documentFirstHeading"\n+            tal:content="view/label"\n+        >View Title</h1>\n+        <p class="lead"\n+           tal:content="view/description"\n+        >Description</p>\n+      </header>\n \n-    <div id="content-core" tal:attributes="class view/settings">\n-      <span tal:replace="structure view/contents" />\n-    </div>\n+      <div id="content-core"\n+           tal:attributes="\n+             class view/settings;\n+           "\n+      >\n+        <span tal:replace="structure view/contents"></span>\n+      </div>\n \n-</metal:main>\n+    </metal:main>\n \n-</body>\n+  </body>\n </html>\ndiff --git a/plone/app/discussion/browser/conversation.py b/plone/app/discussion/browser/conversation.py\nindex ac0c9326..eda71a1d 100644\n--- a/plone/app/discussion/browser/conversation.py\n+++ b/plone/app/discussion/browser/conversation.py\n@@ -1,5 +1,4 @@\n from ..interfaces import IDiscussionSettings\n-from Acquisition import aq_base\n from Acquisition import aq_chain\n from Acquisition import aq_inner\n from plone.base.interfaces import INonStructuralFolder\n@@ -11,14 +10,6 @@\n from zope.component import queryUtility\n \n \n-try:\n-    from plone.dexterity.interfaces import IDexterityContent\n-\n-    DEXTERITY_INSTALLED = True\n-except ImportError:\n-    DEXTERITY_INSTALLED = False\n-\n-\n def traverse_parents(context):\n     # Run through the aq_chain of obj and check if discussion is\n     # enabled in a parent folder.\n@@ -35,79 +26,6 @@ def traverse_parents(context):\n \n class ConversationView:\n     def enabled(self):\n-        if DEXTERITY_INSTALLED and IDexterityContent.providedBy(self.context):\n-            return self._enabled_for_dexterity_types()\n-        else:\n-            return self._enabled_for_archetypes()\n-\n-    def _enabled_for_archetypes(self):\n-        """Returns True if discussion is enabled for this conversation.\n-\n-        This method checks five different settings in order to figure out if\n-        discussion is enabled on a specific content object:\n-\n-        1) Check if discussion is enabled globally in the plone.app.discussion\n-           registry/control panel.\n-\n-        2) If the current content object is a folder, always return\n-           False, since we don\'t allow comments on a folder. This\n-           setting is used to allow / disallow comments for all content\n-           objects inside a folder, not for the folder itself.\n-\n-        3) Check if the allow_discussion boolean flag on the content object is\n-           set. If it is set to True or False, return the value. If it set to\n-           None, try further.\n-\n-        4) Traverse to a folder with allow_discussion set to either True or\n-           False. If allow_discussion is not set (None), traverse further until\n-           we reach the PloneSiteRoot.\n-\n-        5) Check if discussion is allowed for the content type.\n-        """\n-        context = aq_inner(self.context)\n-\n-        # Fetch discussion registry\n-        registry = queryUtility(IRegistry)\n-        settings = registry.forInterface(IDiscussionSettings, check=False)\n-\n-        # Check if discussion is allowed globally\n-        if not settings.globally_enabled:\n-            return False\n-\n-        # Always return False if object is a folder\n-        context_is_folderish = IFolderish.providedBy(context)\n-        if context_is_folderish:\n-            if not INonStructuralFolder.providedBy(context):\n-                return False\n-\n-        # If discussion is disabled for the object, bail out\n-        obj_flag = getattr(aq_base(context), "allow_discussion", None)\n-        if obj_flag is False:\n-            return False\n-\n-        # Check if traversal returned a folder with discussion_allowed set\n-        # to True or False.\n-        folder_allow_discussion = traverse_parents(context)\n-\n-        if folder_allow_discussion:\n-            if not getattr(self, "allow_discussion", None):\n-                return True\n-        else:\n-            if obj_flag:\n-                return True\n-\n-        # Check if discussion is allowed on the content type\n-        portal_types = getToolByName(self, "portal_types")\n-        document_fti = getattr(portal_types, context.portal_type)\n-        if not document_fti.getProperty("allow_discussion"):\n-            # If discussion is not allowed on the content type,\n-            # check if \'allow discussion\' is overridden on the content object.\n-            if not obj_flag:\n-                return False\n-\n-        return True\n-\n-    def _enabled_for_dexterity_types(self):\n         """Returns True if discussion is enabled for this conversation.\n \n         This method checks five different settings in order to figure out if\ndiff --git a/plone/app/discussion/browser/moderation.pt b/plone/app/discussion/browser/moderation.pt\nindex b3a94785..4c6162d6 100644\n--- a/plone/app/discussion/browser/moderation.pt\n+++ b/plone/app/discussion/browser/moderation.pt\n@@ -1,30 +1,36 @@\n <html xmlns="http://www.w3.org/1999/xhtml"\n-  xml:lang="en"\n-  xmlns:tal="http://xml.zope.org/namespaces/tal"\n-  xmlns:metal="http://xml.zope.org/namespaces/metal"\n-  xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n-  lang="en"\n-  metal:use-macro="context/main_template/macros/master"\n-  i18n:domain="plone">\n+      xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+      xmlns:tal="http://xml.zope.org/namespaces/tal"\n+      lang="en"\n+      metal:use-macro="context/main_template/macros/master"\n+      xml:lang="en"\n+      i18n:domain="plone"\n+>\n   <body>\n \n     <metal:override fill-slot="top_slot"\n-      tal:define="disable_column_one python:request.set(\'disable_plone.leftcolumn\',1);\n-                disable_column_two python:request.set(\'disable_plone.rightcolumn\',1);" />\n+                    tal:define="\n+                      disable_column_one python:request.set(\'disable_plone.leftcolumn\',1);\n+                      disable_column_two python:request.set(\'disable_plone.rightcolumn\',1);\n+                    "\n+    />\n \n     <metal:main fill-slot="main">\n       <tal:main-macro metal:define-macro="main"\n-        tal:define="toLocalizedTime nocall:context/@@plone/toLocalizedTime;\n-                    items view/comments;\n-                    filter request/review_state|nothing;\n-                    Batch python:modules[\'Products.CMFPlone\'].Batch;\n-                    b_size python:30;\n-                    b_start python:0;\n-                    b_start request/b_start | b_start;\n-                    moderation_enabled view/moderation_enabled;\n-                    colorclass python:lambda x: \'state-private\' if x==\'rejected\' else (\'state-internal\' if x==\'spam\' else \'state-\'+x);\n-                    translationhelper nocall:context/@@translationhelper;\n-                    ">\n+                      tal:define="\n+                        toLocalizedTime nocall:context/@@plone/toLocalizedTime;\n+                        items view/comments;\n+                        filter request/review_state|nothing;\n+                        Batch python:modules[\'Products.CMFPlone\'].Batch;\n+                        b_size python:30;\n+                        b_start python:0;\n+                        b_start request/b_start | b_start;\n+                        moderation_enabled view/moderation_enabled;\n+                        colorclass python:lambda x: \'state-private\' if x==\'rejected\' else (\'state-internal\' if x==\'spam\' else \'state-\'+x);\n+                        translationhelper nocall:context/@@translationhelper;\n+                      "\n+      >\n         <style>\n             #review-comments th label {\n                 margin-right: 1em;\n@@ -35,90 +41,121 @@\n             Moderate comments\n         </h1>\n         <div class="alert alert-info"\n-          role="status"\n-          tal:condition="python: not moderation_enabled">\n+             role="status"\n+             tal:condition="python: not moderation_enabled"\n+        >\n           <strong>Info</strong>\n           <div i18n:translate="message_moderation_disabled">Moderation workflow is disabled. You have to\n-            <a i18n:name="enable_comment_workflow"\n-              i18n:translate="message_enable_comment_workflow"\n-              href=""\n-              tal:attributes="href string:${context/portal_url}/@@content-controlpanel?type_id=Discussion Item">\n+            <a href=""\n+               tal:attributes="\n+                 href string:${context/portal_url}/@@content-controlpanel?type_id=Discussion Item;\n+               "\n+               i18n:name="enable_comment_workflow"\n+               i18n:translate="message_enable_comment_workflow"\n+            >\n             enable the \'Comment Review Workflow\' for the Comment content\n-            type</a> before you can moderate comments here.</div>\n+              type</a>\n+            before you can moderate comments here.</div>\n         </div>\n \n         <form class="mb-3"\n-          method="post"\n-          action="#"\n-          tal:condition="moderation_enabled"\n-          tal:attributes="action string:${context/absolute_url}/@@bulk-actions"\n-          tal:define="batch python:Batch(items, b_size, int(b_start), orphan=1);">\n-          <fieldset id="fieldset-moderate-comments"\n-            class="formPanel">\n+              action="#"\n+              method="post"\n+              tal:define="\n+                batch python:Batch(items, b_size, int(b_start), orphan=1);\n+              "\n+              tal:condition="moderation_enabled"\n+              tal:attributes="\n+                action string:${context/absolute_url}/@@bulk-actions;\n+              "\n+        >\n+          <fieldset class="formPanel"\n+                    id="fieldset-moderate-comments"\n+          >\n \n-            <div metal:use-macro="here/batch_macros/macros/navigation" />\n+            <div metal:use-macro="here/batch_macros/macros/navigation"></div>\n             <div id="review-comments">\n \n               <div class="row row-cols-lg-auto g-3 align-items-center mb-2 mt-2"\n-                id="bulkactions">\n+                   id="bulkactions"\n+              >\n                 <tal:bulk condition="items">\n                   <div class="col-auto">\n                     <select class="form-select"\n-                      name="form.select.BulkAction">\n+                            name="form.select.BulkAction"\n+                    >\n                       <option selected="selected"\n-                        value="-1"\n-                        i18n:translate="title_bulkactions">Bulk Actions</option>\n-                      <tal:comment tal:replace="nothing"></tal:comment>\n+                              value="-1"\n+                              i18n:translate="title_bulkactions"\n+                      >Bulk Actions</option>\n+                      <tal:comment tal:replace="nothing" />\n                       <option value="publish"\n-                        i18n:translate="bulkactions_publish"\n-                        tal:condition="python: filter != \'published\'">Approve</option>\n+                              tal:condition="python: filter != \'published\'"\n+                              i18n:translate="bulkactions_publish"\n+                      >Approve</option>\n                       <option value="mark_as_spam"\n-                        i18n:translate="bulkactions_spam"\n-                        tal:condition="python: filter != \'spam\'">Spam</option>\n+                              tal:condition="python: filter != \'spam\'"\n+                              i18n:translate="bulkactions_spam"\n+                      >Spam</option>\n                       <option value="delete"\n-                        i18n:translate="bulkactions_delete">Delete</option>\n+                              i18n:translate="bulkactions_delete"\n+                      >Delete</option>\n                     </select>\n                   </div>\n                   <div class="col-auto">\n-                    <input type="hidden"\n-                      name="filter"\n-                      tal:attributes="value filter" />\n+                    <input name="filter"\n+                           type="hidden"\n+                           tal:attributes="\n+                             value filter;\n+                           "\n+                    />\n                     <button class="standalone allowMultiSubmit btn btn-primary"\n-                      id="dobulkaction"\n-                      type="submit"\n-                      value="Apply"\n-                      name="form.button.BulkAction"\n-                      i18n:attributes="value label_apply;"\n-                      i18n:translate="label_apply">Apply</button>\n+                            id="dobulkaction"\n+                            name="form.button.BulkAction"\n+                            type="submit"\n+                            value="Apply"\n+                            i18n:attributes="value label_apply;"\n+                            i18n:translate="label_apply"\n+                    >Apply</button>\n                   </div>\n                 </tal:bulk>\n \n                 <div class="flex-grow-1">\n                   <div class="row row-cols-lg-auto g-3 align-items-center justify-content-end"\n-                    tal:condition="view/moderation_multiple_state_enabled">\n+                       tal:condition="view/moderation_multiple_state_enabled"\n+                  >\n                     <label i18n:translate="filter_by_state">Filter by state:</label>\n                     <div>\n                       <input class="form-check-input"\n-                        type="radio"\n-                        id="all"\n-                        name="review_state"\n-                        value="all"\n-                        tal:attributes="checked python:request.review_state==\'all\'" />\n+                             id="all"\n+                             name="review_state"\n+                             type="radio"\n+                             value="all"\n+                             tal:attributes="\n+                               checked python:request.review_state==\'all\';\n+                             "\n+                      />\n                       <label class="form-check-label"\n-                        for="all"\n-                        i18n:translate="">all</label>\n+                             for="all"\n+                             i18n:translate=""\n+                      >all</label>\n                     </div>\n                     <tal:states tal:repeat="review_state python:[\'pending\', \'published\', \'rejected\', \'spam\']">\n                       <div>\n                         <input class="form-check-input"\n-                          type="radio"\n-                          name="review_state"\n-                          tal:attributes="\n-                                value review_state;\n-                                id review_state;\n-                                checked python:request.review_state==review_state" />\n+                               name="review_state"\n+                               type="radio"\n+                               tal:attributes="\n+                                 value review_state;\n+                                 id review_state;\n+                                 checked python:request.review_state==review_state;\n+                               "\n+                        />\n                         <label class="form-check-label"\n-                          tal:attributes="for review_state">\n+                               tal:attributes="\n+                                 for review_state;\n+                               "\n+                        >\n                           <span tal:content="python:translationhelper.translate_comment_review_state(review_state)">review_state</span>\n                         </label>\n                       </div>\n@@ -131,120 +168,166 @@\n               <table class="table table-bordered table-striped">\n                 <thead>\n                   <tr tal:condition="items">\n-                    <th scope="col"\n-                      class="nosort">\n+                    <th class="nosort"\n+                        scope="col"\n+                    >\n                       <input name="check_all"\n-                        type="checkbox"\n-                        value="0" />\n+                             type="checkbox"\n+                             value="0"\n+                      />\n                     </th>\n-                    <th scope="col"\n-                      class="nosort"\n-                      i18n:translate="heading_commenter">Commenter</th>\n-                    <th scope="col"\n-                      class="nosort"\n-                      i18n:translate="heading_date">Date</th>\n-                    <th scope="col"\n-                      class="nosort"\n-                      i18n:translate="heading_in_reponse_to">In Response To</th>\n-                    <th scope="col"\n-                      class="nosort"\n-                      i18n:translate="heading_comment">Comment</th>\n-                    <th scope="col"\n-                      class="nosort"\n-                      i18n:translate="heading_changedby">Last Action</th>\n+                    <th class="nosort"\n+                        scope="col"\n+                        i18n:translate="heading_commenter"\n+                    >Commenter</th>\n+                    <th class="nosort"\n+                        scope="col"\n+                        i18n:translate="heading_date"\n+                    >Date</th>\n+                    <th class="nosort"\n+                        scope="col"\n+                        i18n:translate="heading_in_reponse_to"\n+                    >In Response To</th>\n+                    <th class="nosort"\n+                        scope="col"\n+                        i18n:translate="heading_comment"\n+                    >Comment</th>\n+                    <th class="nosort"\n+                        scope="col"\n+                        i18n:translate="heading_changedby"\n+                    >Last Action</th>\n                   </tr>\n                 </thead>\n                 <tbody>\n-                  <tal:block repeat="item batch"\n-                    tal:condition="items">\n+                  <tal:block tal:condition="items"\n+                             repeat="item batch"\n+                  >\n                     <tr class="commentrow"\n-                      tal:define="even repeat/item/even;\n-                                          item_obj item/getObject;\n-                                          email item_obj/author_email;\n-                                          item_url item/getURL;"\n-                      tal:attributes="class python: even and \'odd\' or \'even\'">\n+                        tal:define="\n+                          even repeat/item/even;\n+                          item_obj item/getObject;\n+                          email item_obj/author_email;\n+                          item_url item/getURL;\n+                        "\n+                        tal:attributes="\n+                          class python: even and \'odd\' or \'even\';\n+                        "\n+                    >\n                       <td class="notDraggable">\n-                        <input type="checkbox"\n-                          class="noborder"\n-                          name="paths:list"\n-                          id="#"\n-                          value="#"\n-                          tal:attributes="value   item/getPath;\n-                                                         id      string:cb_${item/id};\n-                                                         checked item/checked|nothing;\n-                                                         alt     string:Select ${item/Title};\n-                                                         title   string:Select ${item/Title}" />\n-                        <input type="hidden"\n-                          name="selected_obj_paths:list"\n-                          value="#"\n-                          tal:attributes="value item/getURL" />\n+                        <input class="noborder"\n+                               id="#"\n+                               name="paths:list"\n+                               type="checkbox"\n+                               value="#"\n+                               tal:attributes="\n+                                 value   item/getPath;\n+                                 id      string:cb_${item/id};\n+                                 checked item/checked|nothing;\n+                                 alt     string:Select ${item/Title};\n+                                 title   string:Select ${item/Title};\n+                               "\n+                        />\n+                        <input name="selected_obj_paths:list"\n+                               type="hidden"\n+                               value="#"\n+                               tal:attributes="\n+                                 value item/getURL;\n+                               "\n+                        />\n                       </td>\n                       <td>\n                         <span tal:content="python:item.author_name or item.Creator">Name</span>\n                         <tal:email tal:condition="email">\n                           <br />\n-                          <a tal:attributes="href string:mailto:$email;"\n-                            tal:content="email">Email\n+                          <a tal:content="email"\n+                             tal:attributes="\n+                               href string:mailto:$email;\n+                             "\n+                          >Email\n                           </a>\n                         </tal:email>\n                       </td>\n                       <td style="white-space: nowrap;"\n-                        tal:content="python:toLocalizedTime(item.created, long_format=1)" />\n+                          tal:content="python:toLocalizedTime(item.created, long_format=1)"\n+                      ></td>\n                       <td>\n-                        <a tal:attributes="href item_url"\n-                          target="_blank"\n-                          tal:content="item/in_response_to" />\n+                        <a target="_blank"\n+                           tal:content="item/in_response_to"\n+                           tal:attributes="\n+                             href item_url;\n+                           "\n+                        ></a>\n                       </td>\n-                      <td tal:attributes="class  python:colorclass(item.review_state)">\n+                      <td tal:attributes="\n+                            class  python:colorclass(item.review_state);\n+                          ">\n                         <div class="mb-2">\n-                          <span tal:replace="item/Description" />\n-                          <a href=""\n-                            tal:attributes="href string:$item_url/getText"\n-                            tal:condition="python:item.Description.endswith(\'[...]\')"\n-                            i18n:translate="label_show_full_comment_text"\n-                            class="show-full-comment-text">show full comment text</a>\n+                          <span tal:replace="item/Description"></span>\n+                          <a class="show-full-comment-text"\n+                             href=""\n+                             tal:condition="python:item.Description.endswith(\'[...]\')"\n+                             tal:attributes="\n+                               href string:$item_url/getText;\n+                             "\n+                             i18n:translate="label_show_full_comment_text"\n+                          >show full comment text</a>\n                         </div>\n                         <div class="actions input-group-addon">\n-                          <input type="hidden"\n-                            name="selected_obj_paths:list"\n-                            value="#"\n-                            tal:attributes="value item/getURL" />\n+                          <input name="selected_obj_paths:list"\n+                                 type="hidden"\n+                                 value="#"\n+                                 tal:attributes="\n+                                   value item/getURL;\n+                                 "\n+                          />\n                           <!-- delete -->\n-                          <button id=""\n-                            class="destructive comment-delete-button btn btn-sm btn-danger"\n-                            type="submit"\n-                            value="Delete"\n-                            name="form.button.moderation.DeleteComment"\n-                            i18n:attributes="value label_delete;"\n-                            tal:attributes="id item/id"\n-                            i18n:translate="label_delete">Delete</button>\n+                          <button class="destructive comment-delete-button btn btn-sm btn-danger"\n+                                  id=""\n+                                  name="form.button.moderation.DeleteComment"\n+                                  type="submit"\n+                                  value="Delete"\n+                                  tal:attributes="\n+                                    id item/id;\n+                                  "\n+                                  i18n:attributes="value label_delete;"\n+                                  i18n:translate="label_delete"\n+                          >Delete</button>\n                           <!-- edit -->\n                           <a class="pat-plone-modal context btn btn-sm btn-primary"\n-                            href="#"\n-                            i18n:translate="label_edit"\n-                            tal:attributes="href python:item_url+\'/@@edit-comment?review_state=\' + item.review_state">Edit</a>\n+                             href="#"\n+                             tal:attributes="\n+                               href python:item_url+\'/@@edit-comment?review_state=\' + item.review_state;\n+                             "\n+                             i18n:translate="label_edit"\n+                          >Edit</a>\n \n                           <!-- workflow actions -->\n                           <tal:transitions tal:define="\n-                                            transitions python:view.allowed_transitions(item_obj)">\n-                            <button name="form.button.moderation.TransmitComment"\n-                              tal:repeat="transition transitions"\n-                              class="context btn btn-sm btn-primary"\n-                              type="submit"\n-                              value="Label"\n-                              tal:content="python:translationhelper.translate(transition[\'title\'])"\n-                              tal:attributes="id string:${item/id}_${transition/id};\n-                                                    data-transition transition/id;\n-                                                    value python:translationhelper.translate(transition[\'title\']);\n-                                                    style python:transition[\'id\']==\'publish\' and \'background-color: #5cb85c;; border-color: #4cae4c;;\' or \'\';\n-                                                    ">Label</button>\n+                                             transitions python:view.allowed_transitions(item_obj);\n+                                           ">\n+                            <button class="context btn btn-sm btn-primary"\n+                                    name="form.button.moderation.TransmitComment"\n+                                    type="submit"\n+                                    value="Label"\n+                                    tal:repeat="transition transitions"\n+                                    tal:content="python:translationhelper.translate(transition[\'title\'])"\n+                                    tal:attributes="\n+                                      id string:${item/id}_${transition/id};\n+                                      data-transition transition/id;\n+                                      value python:translationhelper.translate(transition[\'title\']);\n+                                      style python:transition[\'id\']==\'publish\' and \'background-color: #5cb85c;; border-color: #4cae4c;;\' or \'\';\n+                                    "\n+                            >Label</button>\n                           </tal:transitions>\n                         </div>\n                       </td>\n                       <td>\n                         <span class="last-history-entry"\n-                          tal:attributes="data-href string:$item_url/@@contenthistorypopup"\n-                          i18n:translate="">\n+                              tal:attributes="\n+                                data-href string:$item_url/@@contenthistorypopup;\n+                              "\n+                              i18n:translate=""\n+                        >\n                                       last history entry\n                         </span>\n                       </td>\n@@ -253,7 +336,7 @@\n                 </tbody>\n               </table>\n             </div>\n-            <div metal:use-macro="here/batch_macros/macros/navigation" />\n+            <div metal:use-macro="here/batch_macros/macros/navigation"></div>\n           </fieldset>\n         </form>\n \ndiff --git a/plone/app/discussion/browser/moderation.py b/plone/app/discussion/browser/moderation.py\nindex 1d0ee8f9..6ee5748f 100644\n--- a/plone/app/discussion/browser/moderation.py\n+++ b/plone/app/discussion/browser/moderation.py\n@@ -97,7 +97,7 @@ def moderation_multiple_state_enabled(self):\n         """Return true if a \'review multiple state workflow\' is enabled on\n         \'Discussion Item\' content type.\n \n-        A \'review multipe state workflow\' is characterized by implementing\n+        A \'review multiple state workflow\' is characterized by implementing\n         a \'rejected\' workflow state and a \'spam\' workflow state.\n         """\n         workflows = self.workflowTool.getChainForPortalType("Discussion Item")\ndiff --git a/plone/app/discussion/browser/traversal.py b/plone/app/discussion/browser/traversal.py\nindex f626621d..863cde26 100644\n--- a/plone/app/discussion/browser/traversal.py\n+++ b/plone/app/discussion/browser/traversal.py\n@@ -27,7 +27,6 @@ def __init__(self, context, request=None):\n         self.request = request\n \n     def traverse(self, name, ignore):\n-\n         if name == "default":\n             name = ""\n \ndiff --git a/plone/app/discussion/catalog.py b/plone/app/discussion/catalog.py\nindex 5acb28ba..0387a54d 100644\n--- a/plone/app/discussion/catalog.py\n+++ b/plone/app/discussion/catalog.py\n@@ -3,7 +3,6 @@\n \n Also provide event handlers to actually catalog the comments.\n """\n-from DateTime import DateTime\n from plone.app.discussion.interfaces import IComment\n from plone.app.discussion.interfaces import IConversation\n from plone.app.event.base import DT\n@@ -103,7 +102,7 @@ def in_response_to(object):\n @indexer(IComment)\n def effective(object):\n     # the catalog index needs Zope DateTime instead of Python datetime\n-    return DT( object.creation_date )\n+    return DT(object.creation_date)\n \n \n @indexer(IComment)\ndiff --git a/plone/app/discussion/comment.py b/plone/app/discussion/comment.py\nindex 0186a6e9..8f228654 100644\n--- a/plone/app/discussion/comment.py\n+++ b/plone/app/discussion/comment.py\n@@ -5,10 +5,10 @@\n from Acquisition import aq_base\n from Acquisition import aq_parent\n from Acquisition import Implicit\n+from datetime import timezone\n from OFS.owner import Owned\n from OFS.role import RoleManager\n from OFS.Traversable import Traversable\n-from datetime import timezone\n from persistent import Persistent\n from plone.app.discussion import _\n from plone.app.discussion.events import CommentAddedEvent\n@@ -138,7 +138,7 @@ def __getattribute__(self, attr):\n         # In older versions of the add-on dates were set timezone naive.\n         # In tz aware versions, the value is stored as self._creation_date\n         if attr in ["creation_date", "modification_date"]:\n-            old_date = super(Comment, self).__getattribute__(attr)\n+            old_date = super().__getattribute__(attr)\n             if old_date.tzinfo is None:\n                 # Naive dates were always stored utc\n                 return old_date.replace(tzinfo=timezone.utc)\n@@ -314,7 +314,7 @@ def notify_content_object_moved(obj, event):\n     # therefore can\'t assume that event.object == obj and event.\n     # {old,new}{Parent,Name} may refer to the actually moved object further up\n     # in the object hierarchy. The object is already moved at this point. so\n-    # obj.getPhysicalPath retruns the new path get the part of the path that\n+    # obj.getPhysicalPath returns the new path get the part of the path that\n     # was moved.\n     moved_path = obj.getPhysicalPath()[len(event.newParent.getPhysicalPath()) + 1 :]\n \n@@ -354,7 +354,7 @@ def notify_user(obj, event):\n     if not settings.user_notification_enabled:\n         return\n \n-    # Get informations that are necessary to send an email\n+    # Get information that are necessary to send an email\n     mail_host = getToolByName(obj, "MailHost")\n     registry = getUtility(IRegistry)\n     mail_settings = registry.forInterface(IMailSchema, prefix="plone")\n@@ -430,7 +430,7 @@ def notify_moderator(obj, event):\n     if not settings.moderator_notification_enabled:\n         return\n \n-    # Get informations that are necessary to send an email\n+    # Get information that are necessary to send an email\n     mail_host = getToolByName(obj, "MailHost")\n     registry = getUtility(IRegistry)\n     mail_settings = registry.forInterface(IMailSchema, prefix="plone")\ndiff --git a/plone/app/discussion/configure.zcml b/plone/app/discussion/configure.zcml\nindex fb72ceef..4d5a1501 100644\n--- a/plone/app/discussion/configure.zcml\n+++ b/plone/app/discussion/configure.zcml\n@@ -1,102 +1,161 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n+    xmlns:five="http://namespaces.zope.org/five"\n     xmlns:genericsetup="http://namespaces.zope.org/genericsetup"\n     xmlns:i18n="http://namespaces.zope.org/i18n"\n     xmlns:zcml="http://namespaces.zope.org/zcml"\n-    xmlns:five="http://namespaces.zope.org/five"\n-    i18n_domain="plone">\n-\n-    <five:registerPackage package="." />\n-\n-    <include package="plone.indexer" />\n-    <include package="plone.app.registry" />\n-    <include package="plone.resource" />\n-    <include package="plone.uuid" />\n-    <include package="plone.app.uuid" />\n-\n-    <include file="contentrules.zcml" />\n-    <include file="permissions.zcml" />\n-    <include file="notifications.zcml" />\n-    <include file="subscribers.zcml" />\n-    <include file="upgrades.zcml" />\n-\n-    <!-- load captch before browser -->\n-    <configure zcml:condition="installed plone.formwidget.captcha">\n-      <include package="plone.formwidget.captcha" />\n-    </configure>\n-    <configure zcml:condition="installed plone.formwidget.recaptcha">\n-      <include package="plone.formwidget.recaptcha" />\n-    </configure>\n-    <configure zcml:condition="installed collective.z3cform.norobots">\n-      <include package="collective.z3cform.norobots" />\n-    </configure>\n-    <include package=".browser" />\n-\n-    <!-- Register the installation GenericSetup extension profile -->\n-    <genericsetup:registerProfile\n-        name="default"\n-        title="Plone Discussions"\n-        description="Commenting infrastructure for Plone"\n-        directory="profiles/default"\n-        provides="Products.GenericSetup.interfaces.EXTENSION"\n-        for="plone.base.interfaces.IPloneSiteRoot"\n+    i18n_domain="plone"\n+    >\n+\n+  <five:registerPackage package="." />\n+\n+  <include package="plone.indexer" />\n+  <include package="plone.app.registry" />\n+  <include package="plone.resource" />\n+  <include package="plone.uuid" />\n+  <include package="plone.app.uuid" />\n+\n+  <include file="contentrules.zcml" />\n+  <include file="permissions.zcml" />\n+  <include file="notifications.zcml" />\n+  <include file="subscribers.zcml" />\n+  <include file="upgrades.zcml" />\n+\n+  <!-- load captch before browser -->\n+  <configure zcml:condition="installed plone.formwidget.captcha">\n+    <include package="plone.formwidget.captcha" />\n+  </configure>\n+  <configure zcml:condition="installed plone.formwidget.recaptcha">\n+    <include package="plone.formwidget.recaptcha" />\n+  </configure>\n+  <configure zcml:condition="installed collective.z3cform.norobots">\n+    <include package="collective.z3cform.norobots" />\n+  </configure>\n+  <include package=".browser" />\n+\n+  <!-- Register the installation GenericSetup extension profile -->\n+  <genericsetup:registerProfile\n+      name="default"\n+      title="Plone Discussions"\n+      description="Commenting infrastructure for Plone"\n+      provides="Products.GenericSetup.interfaces.EXTENSION"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n+      directory="profiles/default"\n+      />\n+  <!-- For upgrade steps see upgrades.zcml. -->\n+\n+  <!-- Comments -->\n+\n+  <class class=".comment.Comment">\n+    <require\n+        permission="zope2.View"\n+        interface=".interfaces.IComment"\n         />\n-    <!-- For upgrade steps see upgrades.zcml. -->\n+    <require\n+        permission="zope2.View"\n+        attributes="Title Creator getId getText"\n+        />\n+  </class>\n \n-    <!-- Comments -->\n+  <class class=".comment.Comment">\n+    <implements interface="plone.uuid.interfaces.IAttributeUUID" />\n+  </class>\n \n-    <class class=".comment.Comment">\n-        <require interface=".interfaces.IComment" permission="zope2.View" />\n-        <require attributes="Title Creator getId getText" permission="zope2.View" />\n-    </class>\n+  <utility\n+      name="plone.Comment"\n+      component=".comment.CommentFactory"\n+      />\n \n-    <class class=".comment.Comment">\n-        <implements interface="plone.uuid.interfaces.IAttributeUUID" />\n-    </class>\n+  <!-- Conversations -->\n \n-    <utility\n-        component=".comment.CommentFactory"\n-        name="plone.Comment"\n+  <class class=".conversation.Conversation">\n+    <require\n+        permission="zope2.View"\n+        interface=".interfaces.IConversation"\n         />\n-\n-    <!-- Conversations -->\n-\n-    <class class=".conversation.Conversation">\n-        <require interface=".interfaces.IConversation" permission="zope2.View" />\n-    </class>\n-\n-    <adapter factory=".conversation.conversationAdapterFactory" />\n-\n-    <adapter factory=".conversation.ConversationReplies" />\n-    <adapter factory=".conversation.CommentReplies" />\n-\n-    <!-- Captcha Vocabulary -->\n-    <utility component=".vocabularies.captcha_vocabulary"\n-             name="plone.app.discussion.vocabularies.CaptchaVocabulary"\n-             provides="zope.schema.interfaces.IVocabularyFactory" />\n-\n-    <!-- Text Transform Vocabulary -->\n-    <utility component=".vocabularies.text_transform_vocabulary"\n-             name="plone.app.discussion.vocabularies.TextTransformVocabulary"\n-             provides="zope.schema.interfaces.IVocabularyFactory" />\n-\n-    <!-- Conversation indexes -->\n-    <adapter name="total_comments" factory=".catalog.total_comments" />\n-    <adapter name="last_comment_date" factory=".catalog.last_comment_date" />\n-    <adapter name="commentators" factory=".catalog.commentators" />\n-    <adapter name="in_response_to" factory=".catalog.in_response_to" />\n-\n-    <!-- Comment indexes -->\n-    <adapter name="UID" factory=".catalog.UID" />\n-    <adapter name="Title" factory=".catalog.title" />\n-    <adapter name="Creator" factory=".catalog.creator" />\n-    <adapter name="Description" factory=".catalog.description" />\n-    <adapter name="SearchableText" factory=".catalog.searchable_text" />\n-    <adapter name="effective" factory=".catalog.effective" />\n-    <adapter name="created" factory=".catalog.created" />\n-    <adapter name="modified" factory=".catalog.modified" />\n-    <adapter name="total_comments" factory=".catalog.comments_total_comments" />\n-    <adapter name="last_comment_date" factory=".catalog.comments_last_comment_date" />\n-    <adapter name="commentators" factory=".catalog.comments_commentators" />\n+  </class>\n+\n+  <adapter factory=".conversation.conversationAdapterFactory" />\n+\n+  <adapter factory=".conversation.ConversationReplies" />\n+  <adapter factory=".conversation.CommentReplies" />\n+\n+  <!-- Captcha Vocabulary -->\n+  <utility\n+      provides="zope.schema.interfaces.IVocabularyFactory"\n+      name="plone.app.discussion.vocabularies.CaptchaVocabulary"\n+      component=".vocabularies.captcha_vocabulary"\n+      />\n+\n+  <!-- Text Transform Vocabulary -->\n+  <utility\n+      provides="zope.schema.interfaces.IVocabularyFactory"\n+      name="plone.app.discussion.vocabularies.TextTransformVocabulary"\n+      component=".vocabularies.text_transform_vocabulary"\n+      />\n+\n+  <!-- Conversation indexes -->\n+  <adapter\n+      factory=".catalog.total_comments"\n+      name="total_comments"\n+      />\n+  <adapter\n+      factory=".catalog.last_comment_date"\n+      name="last_comment_date"\n+      />\n+  <adapter\n+      factory=".catalog.commentators"\n+      name="commentators"\n+      />\n+  <adapter\n+      factory=".catalog.in_response_to"\n+      name="in_response_to"\n+      />\n+\n+  <!-- Comment indexes -->\n+  <adapter\n+      factory=".catalog.UID"\n+      name="UID"\n+      />\n+  <adapter\n+      factory=".catalog.title"\n+      name="Title"\n+      />\n+  <adapter\n+      factory=".catalog.creator"\n+      name="Creator"\n+      />\n+  <adapter\n+      factory=".catalog.description"\n+      name="Description"\n+      />\n+  <adapter\n+      factory=".catalog.searchable_text"\n+      name="SearchableText"\n+      />\n+  <adapter\n+      factory=".catalog.effective"\n+      name="effective"\n+      />\n+  <adapter\n+      factory=".catalog.created"\n+      name="created"\n+      />\n+  <adapter\n+      factory=".catalog.modified"\n+      name="modified"\n+      />\n+  <adapter\n+      factory=".catalog.comments_total_comments"\n+      name="total_comments"\n+      />\n+  <adapter\n+      factory=".catalog.comments_last_comment_date"\n+      name="last_comment_date"\n+      />\n+  <adapter\n+      factory=".catalog.comments_commentators"\n+      name="commentators"\n+      />\n \n </configure>\ndiff --git a/plone/app/discussion/contentrules.zcml b/plone/app/discussion/contentrules.zcml\nindex 82169462..20e96d50 100644\n--- a/plone/app/discussion/contentrules.zcml\n+++ b/plone/app/discussion/contentrules.zcml\n@@ -1,45 +1,46 @@\n <configure\n-  xmlns="http://namespaces.zope.org/zope"\n-  xmlns:zcml="http://namespaces.zope.org/zcml">\n+    xmlns="http://namespaces.zope.org/zope"\n+    xmlns:zcml="http://namespaces.zope.org/zcml"\n+    >\n \n   <!-- Content Rules events -->\n   <configure zcml:condition="installed plone.contentrules">\n \n     <interface\n-      interface="plone.app.discussion.interfaces.ICommentAddedEvent"\n-      type="plone.contentrules.rule.interfaces.IRuleEventType"\n-      name="Comment added"\n-      />\n+        interface="plone.app.discussion.interfaces.ICommentAddedEvent"\n+        type="plone.contentrules.rule.interfaces.IRuleEventType"\n+        name="Comment added"\n+        />\n \n     <interface\n-      interface="plone.app.discussion.interfaces.ICommentRemovedEvent"\n-      type="plone.contentrules.rule.interfaces.IRuleEventType"\n-      name="Comment removed"\n-      />\n+        interface="plone.app.discussion.interfaces.ICommentRemovedEvent"\n+        type="plone.contentrules.rule.interfaces.IRuleEventType"\n+        name="Comment removed"\n+        />\n \n     <interface\n-      interface="plone.app.discussion.interfaces.IReplyAddedEvent"\n-      type="plone.contentrules.rule.interfaces.IRuleEventType"\n-      name="Comment reply added"\n-      />\n+        interface="plone.app.discussion.interfaces.IReplyAddedEvent"\n+        type="plone.contentrules.rule.interfaces.IRuleEventType"\n+        name="Comment reply added"\n+        />\n \n     <interface\n-      interface="plone.app.discussion.interfaces.IReplyRemovedEvent"\n-      type="plone.contentrules.rule.interfaces.IRuleEventType"\n-      name="Comment reply removed"\n-      />\n-      \n+        interface="plone.app.discussion.interfaces.IReplyRemovedEvent"\n+        type="plone.contentrules.rule.interfaces.IRuleEventType"\n+        name="Comment reply removed"\n+        />\n+\n     <interface\n-      interface="plone.app.discussion.interfaces.ICommentPublishedEvent"\n-      type="plone.contentrules.rule.interfaces.IRuleEventType"\n-      name="Notify user on comment publication"\n-      />\n-      \n+        interface="plone.app.discussion.interfaces.ICommentPublishedEvent"\n+        type="plone.contentrules.rule.interfaces.IRuleEventType"\n+        name="Notify user on comment publication"\n+        />\n+\n     <interface\n-      interface="plone.app.discussion.interfaces.ICommentDeletedEvent"\n-      type="plone.contentrules.rule.interfaces.IRuleEventType"\n-      name="Notify user on comment delete"\n-      />\n+        interface="plone.app.discussion.interfaces.ICommentDeletedEvent"\n+        type="plone.contentrules.rule.interfaces.IRuleEventType"\n+        name="Notify user on comment delete"\n+        />\n \n   </configure>\n \n@@ -48,73 +49,73 @@\n   <configure zcml:condition="installed plone.app.contentrules">\n \n     <subscriber\n-      for="plone.app.discussion.interfaces.ICommentAddedEvent"\n-      handler=".contentrules.execute_comment"\n-      />\n+        for="plone.app.discussion.interfaces.ICommentAddedEvent"\n+        handler=".contentrules.execute_comment"\n+        />\n \n     <subscriber\n-      for="plone.app.discussion.interfaces.ICommentRemovedEvent"\n-      handler=".contentrules.execute_comment"\n-      />\n+        for="plone.app.discussion.interfaces.ICommentRemovedEvent"\n+        handler=".contentrules.execute_comment"\n+        />\n \n     <subscriber\n-      for="plone.app.discussion.interfaces.IReplyAddedEvent"\n-      handler=".contentrules.execute_comment"\n-      />\n+        for="plone.app.discussion.interfaces.IReplyAddedEvent"\n+        handler=".contentrules.execute_comment"\n+        />\n \n     <subscriber\n-      for="plone.app.discussion.interfaces.IReplyRemovedEvent"\n-      handler=".contentrules.execute_comment"\n-      />\n-      \n+        for="plone.app.discussion.interfaces.IReplyRemovedEvent"\n+        handler=".contentrules.execute_comment"\n+        />\n+\n     <subscriber\n-      for="plone.app.discussion.interfaces.ICommentDeletedEvent"\n-      handler=".contentrules.execute_comment"\n-      />\n-      \n+        for="plone.app.discussion.interfaces.ICommentDeletedEvent"\n+        handler=".contentrules.execute_comment"\n+        />\n+\n     <subscriber\n-      for="plone.app.discussion.interfaces.ICommentPublishedEvent"\n-      handler=".contentrules.execute_comment"\n-      />\n+        for="plone.app.discussion.interfaces.ICommentPublishedEvent"\n+        handler=".contentrules.execute_comment"\n+        />\n \n   </configure>\n \n   <!-- Content rules strings -->\n   <configure zcml:condition="installed plone.stringinterp">\n     <adapter\n-      for="zope.interface.Interface"\n-      provides="plone.stringinterp.interfaces.IStringSubstitution"\n-      factory=".contentrules.Id"\n-      name="comment_id"\n-      />\n+        factory=".contentrules.Id"\n+        provides="plone.stringinterp.interfaces.IStringSubstitution"\n+        for="zope.interface.Interface"\n+        name="comment_id"\n+        />\n \n     <adapter\n-      for="zope.interface.Interface"\n-      provides="plone.stringinterp.interfaces.IStringSubstitution"\n-      factory=".contentrules.Text"\n-      name="comment_text"\n-      />\n+        factory=".contentrules.Text"\n+        provides="plone.stringinterp.interfaces.IStringSubstitution"\n+        for="zope.interface.Interface"\n+        name="comment_text"\n+        />\n \n     <adapter\n-      for="zope.interface.Interface"\n-      provides="plone.stringinterp.interfaces.IStringSubstitution"\n-      factory=".contentrules.AuthorUserName"\n-      name="comment_user_id"\n-      />\n+        factory=".contentrules.AuthorUserName"\n+        provides="plone.stringinterp.interfaces.IStringSubstitution"\n+        for="zope.interface.Interface"\n+        name="comment_user_id"\n+        />\n \n     <adapter\n-      for="zope.interface.Interface"\n-      provides="plone.stringinterp.interfaces.IStringSubstitution"\n-      factory=".contentrules.AuthorFullName"\n-      name="comment_user_fullname"\n-      />\n+        factory=".contentrules.AuthorFullName"\n+        provides="plone.stringinterp.interfaces.IStringSubstitution"\n+        for="zope.interface.Interface"\n+        name="comment_user_fullname"\n+        />\n \n     <adapter\n-      for="zope.interface.Interface"\n-      provides="plone.stringinterp.interfaces.IStringSubstitution"\n-      factory=".contentrules.AuthorEmail"\n-      name="comment_user_email"\n-      />\n+        factory=".contentrules.AuthorEmail"\n+        provides="plone.stringinterp.interfaces.IStringSubstitution"\n+        for="zope.interface.Interface"\n+        name="comment_user_email"\n+        />\n   </configure>\n \n </configure>\ndiff --git a/plone/app/discussion/conversation.py b/plone/app/discussion/conversation.py\nindex 1cdb2663..9292e3fd 100644\n--- a/plone/app/discussion/conversation.py\n+++ b/plone/app/discussion/conversation.py\n@@ -135,7 +135,6 @@ def recurse(comment_id, d=0):\n         if comments is not None:\n             count = 0\n             for comment_id in comments.keys(min=start):\n-\n                 # Abort if we have found all the threads we want\n                 count += 1\n                 if size and count > size:\ndiff --git a/plone/app/discussion/notifications.zcml b/plone/app/discussion/notifications.zcml\nindex 2a95b7bb..a375d680 100644\n--- a/plone/app/discussion/notifications.zcml\n+++ b/plone/app/discussion/notifications.zcml\n@@ -1,7 +1,8 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:zcml="http://namespaces.zope.org/zcml"\n-    i18n_domain="plone">\n+    i18n_domain="plone"\n+    >\n \n   <subscriber\n       for="plone.app.discussion.interfaces.IComment\ndiff --git a/plone/app/discussion/permissions.zcml b/plone/app/discussion/permissions.zcml\nindex 8c05904f..6af1c334 100644\n--- a/plone/app/discussion/permissions.zcml\n+++ b/plone/app/discussion/permissions.zcml\n@@ -1,32 +1,33 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n-    i18n_domain="plone">\n+    i18n_domain="plone"\n+    >\n \n-    <!-- custom permissions are defined here -->\n+  <!-- custom permissions are defined here -->\n \n-    <permission\n-        id="plone.app.discussion.ViewComments"\n-        title="View comments"\n-        />\n+  <permission\n+      id="plone.app.discussion.ViewComments"\n+      title="View comments"\n+      />\n \n-    <permission\n-        id="plone.app.discussion.ReviewComments"\n-        title="Review comments"\n-        />\n+  <permission\n+      id="plone.app.discussion.ReviewComments"\n+      title="Review comments"\n+      />\n \n-    <permission\n-        id="plone.app.discussion.EditComments"\n-        title="Edit comments"\n-        />\n+  <permission\n+      id="plone.app.discussion.EditComments"\n+      title="Edit comments"\n+      />\n \n-    <permission\n-        id="plone.app.discussion.DeleteOwnComments"\n-        title="Delete own comments"\n-        />\n+  <permission\n+      id="plone.app.discussion.DeleteOwnComments"\n+      title="Delete own comments"\n+      />\n \n-    <permission\n-        id="plone.app.discussion.DeleteComments"\n-        title="Delete comments"\n-        />\n+  <permission\n+      id="plone.app.discussion.DeleteComments"\n+      title="Delete comments"\n+      />\n \n </configure>\ndiff --git a/plone/app/discussion/profiles/default/actions.xml b/plone/app/discussion/profiles/default/actions.xml\nindex 83c4f932..395f5e5e 100644\n--- a/plone/app/discussion/profiles/default/actions.xml\n+++ b/plone/app/discussion/profiles/default/actions.xml\n@@ -1,17 +1,28 @@\n-<?xml version="1.0"?>\n-<object name="portal_actions" xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n- <object name="user" meta_type="CMF Action Category">\n-  <object name="review-comments" meta_type="CMF Action" i18n:domain="plone"\n-  insert-before="logout">\n-   <property name="title" i18n:translate="">Moderate comments</property>\n-   <property name="description" i18n:translate=""></property>\n-   <property name="url_expr">string:${globals_view/navigationRootUrl}/@@moderate-comments</property>\n-   <property name="icon_expr">string:${globals_view/navigationRootUrl}/discussionitem_icon.png</property>\n-   <property name="available_expr">portal/@@moderate-comments-enabled|nothing</property>\n-   <property name="permissions">\n-    <element value="Review comments"/>\n-   </property>\n-   <property name="visible">True</property>\n+<?xml version="1.0" encoding="utf-8"?>\n+<object xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+        name="portal_actions"\n+>\n+  <object meta_type="CMF Action Category"\n+          name="user"\n+  >\n+    <object insert-before="logout"\n+            meta_type="CMF Action"\n+            name="review-comments"\n+            i18n:domain="plone"\n+    >\n+      <property name="title"\n+                i18n:translate=""\n+      >Moderate comments</property>\n+      <property name="description"\n+                i18n:translate=""\n+      />\n+      <property name="url_expr">string:${globals_view/navigationRootUrl}/@@moderate-comments</property>\n+      <property name="icon_expr">string:${globals_view/navigationRootUrl}/discussionitem_icon.png</property>\n+      <property name="available_expr">portal/@@moderate-comments-enabled|nothing</property>\n+      <property name="permissions">\n+        <element value="Review comments" />\n+      </property>\n+      <property name="visible">True</property>\n+    </object>\n   </object>\n- </object>\n </object>\ndiff --git a/plone/app/discussion/profiles/default/browserlayer.xml b/plone/app/discussion/profiles/default/browserlayer.xml\nindex c64858b0..d9d63add 100644\n--- a/plone/app/discussion/profiles/default/browserlayer.xml\n+++ b/plone/app/discussion/profiles/default/browserlayer.xml\n@@ -1,6 +1,6 @@\n+<?xml version="1.0" encoding="utf-8"?>\n <layers>\n-    <layer\n-        name="plone.app.discussion"\n-        interface="plone.app.discussion.interfaces.IDiscussionLayer"\n-        />\n-</layers>\n\\ No newline at end of file\n+  <layer interface="plone.app.discussion.interfaces.IDiscussionLayer"\n+         name="plone.app.discussion"\n+  />\n+</layers>\ndiff --git a/plone/app/discussion/profiles/default/catalog.xml b/plone/app/discussion/profiles/default/catalog.xml\nindex 3dbd4f9c..e4f9b502 100644\n--- a/plone/app/discussion/profiles/default/catalog.xml\n+++ b/plone/app/discussion/profiles/default/catalog.xml\n@@ -1,18 +1,22 @@\n-<?xml version="1.0"?>\n+<?xml version="1.0" encoding="utf-8"?>\n <object name="portal_catalog">\n \n-    <index name="total_comments" meta_type="FieldIndex">\n-        <indexed_attr value="total_comments"/>\n-    </index>\n+  <index meta_type="FieldIndex"\n+         name="total_comments"\n+  >\n+    <indexed_attr value="total_comments" />\n+  </index>\n \n-    <index name="commentators" meta_type="KeywordIndex">\n-        <indexed_attr value="commentators"/>\n-    </index>\n+  <index meta_type="KeywordIndex"\n+         name="commentators"\n+  >\n+    <indexed_attr value="commentators" />\n+  </index>\n \n-    <column value="total_comments" />\n-    <column value="last_comment_date" />\n-    <column value="commentators" />\n-    <column value="in_response_to" />\n-    <column value="author_name" />\n+  <column value="total_comments" />\n+  <column value="last_comment_date" />\n+  <column value="commentators" />\n+  <column value="in_response_to" />\n+  <column value="author_name" />\n \n </object>\ndiff --git a/plone/app/discussion/profiles/default/controlpanel.xml b/plone/app/discussion/profiles/default/controlpanel.xml\nindex e5dcbe80..d85f7a47 100644\n--- a/plone/app/discussion/profiles/default/controlpanel.xml\n+++ b/plone/app/discussion/profiles/default/controlpanel.xml\n@@ -1,21 +1,21 @@\n-<?xml version="1.0"?>\n-<object\n-    name="portal_controlpanel"\n-    xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n-    i18n:domain="plone"\n-    purge="False">\n+<?xml version="1.0" encoding="utf-8"?>\n+<object xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+        name="portal_controlpanel"\n+        purge="False"\n+        i18n:domain="plone"\n+>\n \n-    <configlet\n-        title="Discussion"\n-        action_id="discussion"\n-        appId="plone.app.discussion"\n-        category="plone-general"\n-        condition_expr=""\n-        icon_expr="string:chat-square-dots"\n-        url_expr="string:${portal_url}/@@discussion-controlpanel"\n-        visible="True"\n-        i18n:attributes="title">\n-            <permission>Manage portal</permission>\n-    </configlet>\n+  <configlet action_id="discussion"\n+             appId="plone.app.discussion"\n+             category="plone-general"\n+             condition_expr=""\n+             icon_expr="string:chat-square-dots"\n+             title="Discussion"\n+             url_expr="string:${portal_url}/@@discussion-controlpanel"\n+             visible="True"\n+             i18n:attributes="title"\n+  >\n+    <permission>Manage portal</permission>\n+  </configlet>\n \n </object>\ndiff --git a/plone/app/discussion/profiles/default/metadata.xml b/plone/app/discussion/profiles/default/metadata.xml\nindex 3b4e7301..38abca6d 100644\n--- a/plone/app/discussion/profiles/default/metadata.xml\n+++ b/plone/app/discussion/profiles/default/metadata.xml\n@@ -1,7 +1,8 @@\n+<?xml version="1.0" encoding="utf-8"?>\n <metadata>\n- <version>2001</version>\n- <dependencies>\n-  <dependency>profile-plone.resource:default</dependency>\n-  <dependency>profile-plone.app.registry:default</dependency>\n- </dependencies>\n+  <version>2001</version>\n+  <dependencies>\n+    <dependency>profile-plone.resource:default</dependency>\n+    <dependency>profile-plone.app.registry:default</dependency>\n+  </dependencies>\n </metadata>\ndiff --git a/plone/app/discussion/profiles/default/portal_atct.xml b/plone/app/discussion/profiles/default/portal_atct.xml\nindex 5941544b..0c7068c6 100644\n--- a/plone/app/discussion/profiles/default/portal_atct.xml\n+++ b/plone/app/discussion/profiles/default/portal_atct.xml\n@@ -1,37 +1,39 @@\n-<?xml version="1.0"?>\n+<?xml version="1.0" encoding="utf-8"?>\n <atcttool xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n-    <topic_indexes i18n:domain="plone">\n+  <topic_indexes i18n:domain="plone">\n \n-        <index name="commentators" friendlyName="Commentators"\n-            description="Users who have commented on the item"\n-            enabled="True" i18n:attributes="description; friendlyName">\n+    <index description="Users who have commented on the item"\n+           enabled="True"\n+           friendlyName="Commentators"\n+           name="commentators"\n+           i18n:attributes="description; friendlyName"\n+    >\n \n-            <criteria>ATCurrentAuthorCriterion</criteria>\n-            <criteria>ATSimpleStringCriterion</criteria>\n-            <criteria>ATListCriterion</criteria>\n+      <criteria>ATCurrentAuthorCriterion</criteria>\n+      <criteria>ATSimpleStringCriterion</criteria>\n+      <criteria>ATListCriterion</criteria>\n \n-        </index>\n+    </index>\n \n-        <index\n-            name="total_comments"\n-            enabled="False"\n-            friendlyName="Total number of comments"\n-            description="Total number of comments on this item."\n-            i18n:attributes="description; friendlyName">\n+    <index description="Total number of comments on this item."\n+           enabled="False"\n+           friendlyName="Total number of comments"\n+           name="total_comments"\n+           i18n:attributes="description; friendlyName"\n+    >\n \n-            <criteria>ATSimpleIntCriterion</criteria>\n+      <criteria>ATSimpleIntCriterion</criteria>\n \n-        </index>\n+    </index>\n \n-    </topic_indexes>\n-    <topic_metadata i18n:domain="plone">\n+  </topic_indexes>\n+  <topic_metadata i18n:domain="plone">\n \n-        <metadata\n-            name="total_comments"\n-            enabled="True"\n-            friendlyName="Total number of comments"\n-            description="Total number of comments on this item."\n-            />\n+    <metadata description="Total number of comments on this item."\n+              enabled="True"\n+              friendlyName="Total number of comments"\n+              name="total_comments"\n+    />\n \n-    </topic_metadata>\n+  </topic_metadata>\n </atcttool>\ndiff --git a/plone/app/discussion/profiles/default/registry.xml b/plone/app/discussion/profiles/default/registry.xml\nindex 1e0d5355..2a1aaffc 100644\n--- a/plone/app/discussion/profiles/default/registry.xml\n+++ b/plone/app/discussion/profiles/default/registry.xml\n@@ -1,4 +1,4 @@\n-<?xml version="1.0"?>\n+<?xml version="1.0" encoding="utf-8"?>\n <registry>\n   <records interface="plone.app.discussion.interfaces.IDiscussionSettings">\n     <value key="edit_comment_enabled">False</value>\ndiff --git a/plone/app/discussion/profiles/default/rolemap.xml b/plone/app/discussion/profiles/default/rolemap.xml\nindex 44fa8439..8aad7ab1 100644\n--- a/plone/app/discussion/profiles/default/rolemap.xml\n+++ b/plone/app/discussion/profiles/default/rolemap.xml\n@@ -1,33 +1,45 @@\n-<?xml version="1.0"?>\n+<?xml version="1.0" encoding="utf-8"?>\n <rolemap>\n-    <permissions>\n-        <permission name="View comments" acquire="True">\n-            <role name="Anonymous"/>\n-        </permission>\n-        <permission name="Review comments" acquire="True">\n-            <role name="Manager"/>\n-            <role name="Site Administrator"/>\n-            <role name="Reviewer"/>\n-        </permission>\n-        <permission name="Edit comments" acquire="True">\n-            <role name="Manager"/>\n-            <role name="Site Administrator"/>\n-            <role name="Reviewer"/>\n-            <role name="Owner"/>\n-        </permission>\n-        <permission name="Delete comments" acquire="True">\n-            <role name="Manager"/>\n-            <role name="Site Administrator"/>\n-            <role name="Reviewer"/>\n-        </permission>\n-        <permission name="Reply to item" acquire="False">\n-            <role name="Authenticated"/>\n-        </permission>\n-        <permission name="Delete own comments" acquire="False">\n-            <role name="Manager"/>\n-            <role name="Site Administrator"/>\n-            <role name="Reviewer"/>\n-            <role name="Owner"/>\n-        </permission>\n-    </permissions>\n+  <permissions>\n+    <permission acquire="True"\n+                name="View comments"\n+    >\n+      <role name="Anonymous" />\n+    </permission>\n+    <permission acquire="True"\n+                name="Review comments"\n+    >\n+      <role name="Manager" />\n+      <role name="Site Administrator" />\n+      <role name="Reviewer" />\n+    </permission>\n+    <permission acquire="True"\n+                name="Edit comments"\n+    >\n+      <role name="Manager" />\n+      <role name="Site Administrator" />\n+      <role name="Reviewer" />\n+      <role name="Owner" />\n+    </permission>\n+    <permission acquire="True"\n+                name="Delete comments"\n+    >\n+      <role name="Manager" />\n+      <role name="Site Administrator" />\n+      <role name="Reviewer" />\n+    </permission>\n+    <permission acquire="False"\n+                name="Reply to item"\n+    >\n+      <role name="Authenticated" />\n+    </permission>\n+    <permission acquire="False"\n+                name="Delete own comments"\n+    >\n+      <role name="Manager" />\n+      <role name="Site Administrator" />\n+      <role name="Reviewer" />\n+      <role name="Owner" />\n+    </permission>\n+  </permissions>\n </rolemap>\ndiff --git a/plone/app/discussion/profiles/default/types.xml b/plone/app/discussion/profiles/default/types.xml\nindex 4ecc6282..b12f8335 100644\n--- a/plone/app/discussion/profiles/default/types.xml\n+++ b/plone/app/discussion/profiles/default/types.xml\n@@ -1,4 +1,8 @@\n-<?xml version="1.0"?>\n-<object name="portal_types" meta_type="CMF Types Tool">\n- <object name="Discussion Item" meta_type="Factory-based Type Information"/>\n+<?xml version="1.0" encoding="utf-8"?>\n+<object meta_type="CMF Types Tool"\n+        name="portal_types"\n+>\n+  <object meta_type="Factory-based Type Information"\n+          name="Discussion Item"\n+  />\n </object>\ndiff --git a/plone/app/discussion/profiles/default/types/Discussion_Item.xml b/plone/app/discussion/profiles/default/types/Discussion_Item.xml\nindex e11e366b..c05efcb9 100644\n--- a/plone/app/discussion/profiles/default/types/Discussion_Item.xml\n+++ b/plone/app/discussion/profiles/default/types/Discussion_Item.xml\n@@ -1,21 +1,37 @@\n-<?xml version="1.0"?>\n-<object name="Discussion Item" meta_type="Factory-based Type Information"\n-   i18n:domain="plone" xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n- <property name="title" i18n:translate="">Comment</property>\n- <property name="description" i18n:translate="">Comments added to a content item.</property>\n- <property name="content_icon">discussionitem_icon.png</property>\n- <property name="content_meta_type">Discussion Item</property>\n- <property name="product"></property>\n- <property name="factory">plone.Comment</property>\n- <property name="immediate_view"></property>\n- <property name="global_allow">False</property>\n- <property name="filter_content_types">True</property>\n- <property name="allowed_content_types"/>\n- <property name="allow_discussion">True</property>\n- <alias from="(Default)" to="@@view"/>\n- <alias from="view" to="@@view"/>\n- <action title="View" action_id="view" category="object" condition_expr=""\n-    url_expr="string:${object_url}/@@view" visible="True">\n-  <permission value="View"/>\n- </action>\n+<?xml version="1.0" encoding="utf-8"?>\n+<object xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+        meta_type="Factory-based Type Information"\n+        name="Discussion Item"\n+        i18n:domain="plone"\n+>\n+  <property name="title"\n+            i18n:translate=""\n+  >Comment</property>\n+  <property name="description"\n+            i18n:translate=""\n+  >Comments added to a content item.</property>\n+  <property name="content_icon">discussionitem_icon.png</property>\n+  <property name="content_meta_type">Discussion Item</property>\n+  <property name="product" />\n+  <property name="factory">plone.Comment</property>\n+  <property name="immediate_view" />\n+  <property name="global_allow">False</property>\n+  <property name="filter_content_types">True</property>\n+  <property name="allowed_content_types" />\n+  <property name="allow_discussion">True</property>\n+  <alias from="(Default)"\n+         to="@@view"\n+  />\n+  <alias from="view"\n+         to="@@view"\n+  />\n+  <action action_id="view"\n+          category="object"\n+          condition_expr=""\n+          title="View"\n+          url_expr="string:${object_url}/@@view"\n+          visible="True"\n+  >\n+    <permission value="View" />\n+  </action>\n </object>\ndiff --git a/plone/app/discussion/profiles/default/workflows.xml b/plone/app/discussion/profiles/default/workflows.xml\nindex 328a7ac6..6e65ead6 100644\n--- a/plone/app/discussion/profiles/default/workflows.xml\n+++ b/plone/app/discussion/profiles/default/workflows.xml\n@@ -1,7 +1,13 @@\n-<?xml version="1.0"?>\n-<object name="portal_workflow" meta_type="Plone Workflow Tool">\n-  <object name="comment_review_workflow" meta_type="Workflow"/>\n-  <object name="comment_one_state_workflow" meta_type="Workflow"/>\n+<?xml version="1.0" encoding="utf-8"?>\n+<object meta_type="Plone Workflow Tool"\n+        name="portal_workflow"\n+>\n+  <object meta_type="Workflow"\n+          name="comment_review_workflow"\n+  />\n+  <object meta_type="Workflow"\n+          name="comment_one_state_workflow"\n+  />\n   <bindings>\n     <type type_id="Discussion Item">\n       <bound-workflow workflow_id="comment_one_state_workflow" />\ndiff --git a/plone/app/discussion/profiles/default/workflows/comment_one_state_workflow/definition.xml b/plone/app/discussion/profiles/default/workflows/comment_one_state_workflow/definition.xml\nindex c03905b1..a3e42ce3 100644\n--- a/plone/app/discussion/profiles/default/workflows/comment_one_state_workflow/definition.xml\n+++ b/plone/app/discussion/profiles/default/workflows/comment_one_state_workflow/definition.xml\n@@ -1,73 +1,107 @@\n-<?xml version="1.0"?>\n-<dc-workflow workflow_id="comment_one_state_workflow" title="Single State Workflow" description="- Essentially a workflow with no transitions, but has a Published state, so portlets and applications that expect that state will continue to work." state_variable="review_state"         initial_state="published" manager_bypass="False" >\n- <permission>Access contents information</permission>\n- <permission>Modify portal content</permission>\n- <permission>View</permission>\n- <state state_id="published" title="Published" >\n-  <description>Visible to everyone, editable by the owner.</description>\n+<?xml version="1.0" encoding="utf-8"?>\n+<dc-workflow description="- Essentially a workflow with no transitions, but has a Published state, so portlets and applications that expect that state will continue to work."\n+             initial_state="published"\n+             manager_bypass="False"\n+             state_variable="review_state"\n+             title="Single State Workflow"\n+             workflow_id="comment_one_state_workflow"\n+>\n+  <permission>Access contents information</permission>\n+  <permission>Modify portal content</permission>\n+  <permission>View</permission>\n+  <state state_id="published"\n+         title="Published"\n+  >\n+    <description>Visible to everyone, editable by the owner.</description>\n \n-  <permission-map name="Access contents information" acquired="False">\n-   <permission-role>Anonymous</permission-role>\n-  </permission-map>\n-  <permission-map name="Modify portal content" acquired="False">\n-   <permission-role>Manager</permission-role>\n-   <permission-role>Owner</permission-role>\n-   <permission-role>Editor</permission-role>\n-   <permission-role>Site Administrator</permission-role>\n-  </permission-map>\n-  <permission-map name="View" acquired="True">\n-  </permission-map>\n+    <permission-map acquired="False"\n+                    name="Access contents information"\n+    >\n+      <permission-role>Anonymous</permission-role>\n+    </permission-map>\n+    <permission-map acquired="False"\n+                    name="Modify portal content"\n+    >\n+      <permission-role>Manager</permission-role>\n+      <permission-role>Owner</permission-role>\n+      <permission-role>Editor</permission-role>\n+      <permission-role>Site Administrator</permission-role>\n+    </permission-map>\n+    <permission-map acquired="True"\n+                    name="View"\n+    >\n+</permission-map>\n \n \n- </state>\n+  </state>\n \n \n- <variable variable_id="action" for_catalog="False" for_status="True" update_always="True" >\n-  <description>Previous transition</description>\n-  <default>\n+  <variable for_catalog="False"\n+            for_status="True"\n+            update_always="True"\n+            variable_id="action"\n+  >\n+    <description>Previous transition</description>\n+    <default>\n \n-   <expression>transition/getId|nothing</expression>\n-  </default>\n-  <guard >\n-  </guard>\n- </variable>\n- <variable variable_id="actor" for_catalog="False" for_status="True" update_always="True" >\n-  <description>The ID of the user who performed the previous transition</description>\n-  <default>\n+      <expression>transition/getId|nothing</expression>\n+    </default>\n+    <guard>\n+</guard>\n+  </variable>\n+  <variable for_catalog="False"\n+            for_status="True"\n+            update_always="True"\n+            variable_id="actor"\n+  >\n+    <description>The ID of the user who performed the previous transition</description>\n+    <default>\n \n-   <expression>user/getId</expression>\n-  </default>\n-  <guard >\n-  </guard>\n- </variable>\n- <variable variable_id="comments" for_catalog="False" for_status="True" update_always="True" >\n-  <description>Comment about the last transition</description>\n-  <default>\n+      <expression>user/getId</expression>\n+    </default>\n+    <guard>\n+</guard>\n+  </variable>\n+  <variable for_catalog="False"\n+            for_status="True"\n+            update_always="True"\n+            variable_id="comments"\n+  >\n+    <description>Comment about the last transition</description>\n+    <default>\n \n-   <expression>python:state_change.kwargs.get(\'comment\', \'\')</expression>\n-  </default>\n-  <guard >\n-  </guard>\n- </variable>\n- <variable variable_id="review_history" for_catalog="False" for_status="False" update_always="False" >\n-  <description>Provides access to workflow history</description>\n-  <default>\n+      <expression>python:state_change.kwargs.get(\'comment\', \'\')</expression>\n+    </default>\n+    <guard>\n+</guard>\n+  </variable>\n+  <variable for_catalog="False"\n+            for_status="False"\n+            update_always="False"\n+            variable_id="review_history"\n+  >\n+    <description>Provides access to workflow history</description>\n+    <default>\n \n-   <expression>state_change/getHistory</expression>\n-  </default>\n-  <guard >\n-   <guard-permission>Request review</guard-permission>\n-   <guard-permission>Review portal content</guard-permission>\n-  </guard>\n- </variable>\n- <variable variable_id="time" for_catalog="False" for_status="True" update_always="True" >\n-  <description>When the previous transition was performed</description>\n-  <default>\n+      <expression>state_change/getHistory</expression>\n+    </default>\n+    <guard>\n+      <guard-permission>Request review</guard-permission>\n+      <guard-permission>Review portal content</guard-permission>\n+    </guard>\n+  </variable>\n+  <variable for_catalog="False"\n+            for_status="True"\n+            update_always="True"\n+            variable_id="time"\n+  >\n+    <description>When the previous transition was performed</description>\n+    <default>\n \n-   <expression>state_change/getDateTime</expression>\n-  </default>\n-  <guard >\n-  </guard>\n- </variable>\n+      <expression>state_change/getDateTime</expression>\n+    </default>\n+    <guard>\n+</guard>\n+  </variable>\n \n </dc-workflow>\ndiff --git a/plone/app/discussion/profiles/default/workflows/comment_review_workflow/definition.xml b/plone/app/discussion/profiles/default/workflows/comment_review_workflow/definition.xml\nindex 439fdb60..4d8a63db 100644\n--- a/plone/app/discussion/profiles/default/workflows/comment_review_workflow/definition.xml\n+++ b/plone/app/discussion/profiles/default/workflows/comment_review_workflow/definition.xml\n@@ -1,140 +1,221 @@\n-<?xml version="1.0"?>\n+<?xml version="1.0" encoding="utf-8"?>\n <dc-workflow xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n-             i18n:domain="plone"\n-             workflow_id="comment_review_workflow"\n-             title="Comment Review Workflow"\n              description="A simple review workflow for comments"\n-             state_variable="review_state"\n              initial_state="pending"\n-             i18n:attributes="title; description">\n-             <permission>Access contents information</permission>\n-             <permission>Modify portal content</permission>\n-             <permission>Reply to item</permission>\n-             <permission>View</permission>\n-             <state state_id="pending" title="Pending">\n-                 <description>Submitted, pending review.</description>\n-                 <exit-transition transition_id="mark_as_spam"/>\n-                 <exit-transition transition_id="publish"/>\n-                 <exit-transition transition_id="reject"/>\n-                 <permission-map name="Access contents information" acquired="False">\n-                     <permission-role>Manager</permission-role>\n-                     <permission-role>Owner</permission-role>\n-                     <permission-role>Reviewer</permission-role>\n-                     <permission-role>Site Administrator</permission-role>\n-                 </permission-map>\n-                 <permission-map name="Modify portal content" acquired="False">\n-                     <permission-role>Manager</permission-role>\n-                     <permission-role>Owner</permission-role>\n-                     <permission-role>Reviewer</permission-role>\n-                     <permission-role>Site Administrator</permission-role>\n-                 </permission-map>\n-                 <permission-map name="Reply to item" acquired="False">\n-                 </permission-map>\n-                 <permission-map name="View" acquired="False">\n-                     <permission-role>Manager</permission-role>\n-                     <permission-role>Owner</permission-role>\n-                     <permission-role>Reviewer</permission-role>\n-                     <permission-role>Site Administrator</permission-role>\n-                 </permission-map>\n-             </state>\n-             <state state_id="published" title="Published">\n-                 <description>Visible to everyone, non-editable.</description>\n-                 <exit-transition transition_id="mark_as_spam"/>\n-                 <exit-transition transition_id="recall"/>\n-                 <exit-transition transition_id="reject"/>\n-                 <permission-map name="Access contents information" acquired="True">\n-                 </permission-map>\n-                 <permission-map name="Modify portal content" acquired="False">\n-                     <permission-role>Manager</permission-role>\n-                     <permission-role>Site Administrator</permission-role>\n-                 </permission-map>\n-                 <permission-map name="Reply to item" acquired="True">\n-                 </permission-map>\n-                 <permission-map name="View" acquired="True">\n-                 </permission-map>\n-             </state>\n-             <state state_id="rejected" title="Rejected">\n-                 <exit-transition transition_id="mark_as_spam"/>\n-                 <exit-transition transition_id="publish"/>\n-                 <exit-transition transition_id="recall"/>\n-             </state>\n-             <state state_id="spam" title="Spam">\n-                 <exit-transition transition_id="publish"/>\n-                 <exit-transition transition_id="recall"/>\n-                 <exit-transition transition_id="reject"/>\n-             </state>\n-             <transition transition_id="mark_as_spam" title="Mark as spam" new_state="spam" trigger="USER" before_script="" after_script="">\n-                 <description>Spam comments are invisible to other users.</description>\n-                 <action url="%(content_url)s/content_status_modify?workflow_action=mark_as_spam" category="workflow" icon="">Spam</action>\n-                 <guard>\n-                     <guard-permission>Review comments</guard-permission>\n-                 </guard>\n-             </transition>\n-             <transition transition_id="publish" title="Reviewer approves content" new_state="published" trigger="USER" before_script="" after_script="">\n-                 <description>Approving the comment makes it visible to other users.</description>\n-                 <action url="%(content_url)s/content_status_modify?workflow_action=publish" category="workflow" icon="">Approve</action>\n-                 <guard>\n-                     <guard-permission>Review comments</guard-permission>\n-                 </guard>\n-             </transition>\n-             <transition transition_id="recall" title="Reviewer recalls comment back to pending state" new_state="pending" trigger="USER" before_script="" after_script="">\n-                 <action url="%(content_url)s/content_status_modify?workflow_action=recall" category="workflow" icon="">Recall</action>\n-                 <guard>\n-                     <guard-permission>Review comments</guard-permission>\n-                 </guard>\n-             </transition>\n-             <transition transition_id="reject" title="Reviewer rejects comment" new_state="rejected" trigger="USER" before_script="" after_script="">\n-                 <description>Rejected comments are invisible to other users.</description>\n-                 <action url="%(content_url)s/content_status_modify?workflow_action=reject" category="workflow" icon="">Reject</action>\n-                 <guard>\n-                     <guard-permission>Review comments</guard-permission>\n-                 </guard>\n-             </transition>\n-             <variable variable_id="action" for_catalog="False" for_status="True" update_always="True">\n-                 <description>Previous transition</description>\n-                 <default>\n+             state_variable="review_state"\n+             title="Comment Review Workflow"\n+             workflow_id="comment_review_workflow"\n+             i18n:attributes="title; description"\n+             i18n:domain="plone"\n+>\n+  <permission>Access contents information</permission>\n+  <permission>Modify portal content</permission>\n+  <permission>Reply to item</permission>\n+  <permission>View</permission>\n+  <state state_id="pending"\n+         title="Pending"\n+  >\n+    <description>Submitted, pending review.</description>\n+    <exit-transition transition_id="mark_as_spam" />\n+    <exit-transition transition_id="publish" />\n+    <exit-transition transition_id="reject" />\n+    <permission-map acquired="False"\n+                    name="Access contents information"\n+    >\n+      <permission-role>Manager</permission-role>\n+      <permission-role>Owner</permission-role>\n+      <permission-role>Reviewer</permission-role>\n+      <permission-role>Site Administrator</permission-role>\n+    </permission-map>\n+    <permission-map acquired="False"\n+                    name="Modify portal content"\n+    >\n+      <permission-role>Manager</permission-role>\n+      <permission-role>Owner</permission-role>\n+      <permission-role>Reviewer</permission-role>\n+      <permission-role>Site Administrator</permission-role>\n+    </permission-map>\n+    <permission-map acquired="False"\n+                    name="Reply to item"\n+    >\n+</permission-map>\n+    <permission-map acquired="False"\n+                    name="View"\n+    >\n+      <permission-role>Manager</permission-role>\n+      <permission-role>Owner</permission-role>\n+      <permission-role>Reviewer</permission-role>\n+      <permission-role>Site Administrator</permission-role>\n+    </permission-map>\n+  </state>\n+  <state state_id="published"\n+         title="Published"\n+  >\n+    <description>Visible to everyone, non-editable.</description>\n+    <exit-transition transition_id="mark_as_spam" />\n+    <exit-transition transition_id="recall" />\n+    <exit-transition transition_id="reject" />\n+    <permission-map acquired="True"\n+                    name="Access contents information"\n+    >\n+</permission-map>\n+    <permission-map acquired="False"\n+                    name="Modify portal content"\n+    >\n+      <permission-role>Manager</permission-role>\n+      <permission-role>Site Administrator</permission-role>\n+    </permission-map>\n+    <permission-map acquired="True"\n+                    name="Reply to item"\n+    >\n+</permission-map>\n+    <permission-map acquired="True"\n+                    name="View"\n+    >\n+</permission-map>\n+  </state>\n+  <state state_id="rejected"\n+         title="Rejected"\n+  >\n+    <exit-transition transition_id="mark_as_spam" />\n+    <exit-transition transition_id="publish" />\n+    <exit-transition transition_id="recall" />\n+  </state>\n+  <state state_id="spam"\n+         title="Spam"\n+  >\n+    <exit-transition transition_id="publish" />\n+    <exit-transition transition_id="recall" />\n+    <exit-transition transition_id="reject" />\n+  </state>\n+  <transition after_script=""\n+              before_script=""\n+              new_state="spam"\n+              title="Mark as spam"\n+              transition_id="mark_as_spam"\n+              trigger="USER"\n+  >\n+    <description>Spam comments are invisible to other users.</description>\n+    <action category="workflow"\n+            icon=""\n+            url="%(content_url)s/content_status_modify?workflow_action=mark_as_spam"\n+    >Spam</action>\n+    <guard>\n+      <guard-permission>Review comments</guard-permission>\n+    </guard>\n+  </transition>\n+  <transition after_script=""\n+              before_script=""\n+              new_state="published"\n+              title="Reviewer approves content"\n+              transition_id="publish"\n+              trigger="USER"\n+  >\n+    <description>Approving the comment makes it visible to other users.</description>\n+    <action category="workflow"\n+            icon=""\n+            url="%(content_url)s/content_status_modify?workflow_action=publish"\n+    >Approve</action>\n+    <guard>\n+      <guard-permission>Review comments</guard-permission>\n+    </guard>\n+  </transition>\n+  <transition after_script=""\n+              before_script=""\n+              new_state="pending"\n+              title="Reviewer recalls comment back to pending state"\n+              transition_id="recall"\n+              trigger="USER"\n+  >\n+    <action category="workflow"\n+            icon=""\n+            url="%(content_url)s/content_status_modify?workflow_action=recall"\n+    >Recall</action>\n+    <guard>\n+      <guard-permission>Review comments</guard-permission>\n+    </guard>\n+  </transition>\n+  <transition after_script=""\n+              before_script=""\n+              new_state="rejected"\n+              title="Reviewer rejects comment"\n+              transition_id="reject"\n+              trigger="USER"\n+  >\n+    <description>Rejected comments are invisible to other users.</description>\n+    <action category="workflow"\n+            icon=""\n+            url="%(content_url)s/content_status_modify?workflow_action=reject"\n+    >Reject</action>\n+    <guard>\n+      <guard-permission>Review comments</guard-permission>\n+    </guard>\n+  </transition>\n+  <variable for_catalog="False"\n+            for_status="True"\n+            update_always="True"\n+            variable_id="action"\n+  >\n+    <description>Previous transition</description>\n+    <default>\n \n-                     <expression>transition/getId|nothing</expression>\n-                 </default>\n-                 <guard>\n-                 </guard>\n-             </variable>\n-             <variable variable_id="actor" for_catalog="False" for_status="True" update_always="True">\n-                 <description>The ID of the user who performed the previous transition</description>\n-                 <default>\n+      <expression>transition/getId|nothing</expression>\n+    </default>\n+    <guard>\n+</guard>\n+  </variable>\n+  <variable for_catalog="False"\n+            for_status="True"\n+            update_always="True"\n+            variable_id="actor"\n+  >\n+    <description>The ID of the user who performed the previous transition</description>\n+    <default>\n \n-                     <expression>user/getUserName</expression>\n-                 </default>\n-                 <guard>\n-                 </guard>\n-             </variable>\n-             <variable variable_id="comments" for_catalog="False" for_status="True" update_always="True">\n-                 <description>Comment about the last transition</description>\n-                 <default>\n+      <expression>user/getUserName</expression>\n+    </default>\n+    <guard>\n+</guard>\n+  </variable>\n+  <variable for_catalog="False"\n+            for_status="True"\n+            update_always="True"\n+            variable_id="comments"\n+  >\n+    <description>Comment about the last transition</description>\n+    <default>\n \n-                     <expression>python:state_change.kwargs.get(\'comment\', \'\')</expression>\n-                 </default>\n-                 <guard>\n-                 </guard>\n-             </variable>\n-             <variable variable_id="review_history" for_catalog="False" for_status="False" update_always="False">\n-                 <description>Provides access to workflow history</description>\n-                 <default>\n+      <expression>python:state_change.kwargs.get(\'comment\', \'\')</expression>\n+    </default>\n+    <guard>\n+</guard>\n+  </variable>\n+  <variable for_catalog="False"\n+            for_status="False"\n+            update_always="False"\n+            variable_id="review_history"\n+  >\n+    <description>Provides access to workflow history</description>\n+    <default>\n \n-                     <expression>state_change/getHistory</expression>\n-                 </default>\n-                 <guard>\n-                     <guard-permission>Request review</guard-permission>\n-                     <guard-permission>Review portal content</guard-permission>\n-                 </guard>\n-             </variable>\n-             <variable variable_id="time" for_catalog="False" for_status="True" update_always="True">\n-                 <description>When the previous transition was performed</description>\n-                 <default>\n+      <expression>state_change/getHistory</expression>\n+    </default>\n+    <guard>\n+      <guard-permission>Request review</guard-permission>\n+      <guard-permission>Review portal content</guard-permission>\n+    </guard>\n+  </variable>\n+  <variable for_catalog="False"\n+            for_status="True"\n+            update_always="True"\n+            variable_id="time"\n+  >\n+    <description>When the previous transition was performed</description>\n+    <default>\n \n-                     <expression>state_change/getDateTime</expression>\n-                 </default>\n-                 <guard>\n-                 </guard>\n-             </variable>\n-         </dc-workflow>\n+      <expression>state_change/getDateTime</expression>\n+    </default>\n+    <guard>\n+</guard>\n+  </variable>\n+</dc-workflow>\ndiff --git a/plone/app/discussion/subscribers.py b/plone/app/discussion/subscribers.py\nindex 6e1b4985..c227ee00 100644\n--- a/plone/app/discussion/subscribers.py\n+++ b/plone/app/discussion/subscribers.py\n@@ -1,6 +1,3 @@\n-from Products.CMFCore.utils import getToolByName\n-\n-\n def index_object(obj, event):\n     """Index the object when it is added/modified to the conversation."""\n     obj.indexObject()\ndiff --git a/plone/app/discussion/subscribers.zcml b/plone/app/discussion/subscribers.zcml\nindex a797741b..072db461 100644\n--- a/plone/app/discussion/subscribers.zcml\n+++ b/plone/app/discussion/subscribers.zcml\n@@ -1,84 +1,85 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:zcml="http://namespaces.zope.org/zcml"\n-    i18n_domain="plone">\n+    i18n_domain="plone"\n+    >\n \n-    <subscriber\n-        for="plone.app.discussion.interfaces.IComment\n-             zope.lifecycleevent.interfaces.IObjectAddedEvent"\n-        handler=".comment.notify_workflow"\n-        />\n+  <subscriber\n+      for="plone.app.discussion.interfaces.IComment\n+           zope.lifecycleevent.interfaces.IObjectAddedEvent"\n+      handler=".comment.notify_workflow"\n+      />\n \n-    <subscriber\n-        for="plone.app.discussion.interfaces.IComment\n-             zope.lifecycleevent.interfaces.IObjectModifiedEvent"\n-        handler=".comment.notify_comment_modified"\n-        />\n+  <subscriber\n+      for="plone.app.discussion.interfaces.IComment\n+           zope.lifecycleevent.interfaces.IObjectModifiedEvent"\n+      handler=".comment.notify_comment_modified"\n+      />\n \n-    <subscriber\n-        for="plone.app.discussion.interfaces.IComment\n-             zope.lifecycleevent.interfaces.IObjectAddedEvent"\n-        handler=".comment.notify_content_object"\n-        />\n+  <subscriber\n+      for="plone.app.discussion.interfaces.IComment\n+           zope.lifecycleevent.interfaces.IObjectAddedEvent"\n+      handler=".comment.notify_content_object"\n+      />\n \n-    <subscriber\n-        for="plone.app.discussion.interfaces.IComment\n-             zope.lifecycleevent.interfaces.IObjectAddedEvent"\n-        handler=".comment.notify_comment_added"\n-        />\n+  <subscriber\n+      for="plone.app.discussion.interfaces.IComment\n+           zope.lifecycleevent.interfaces.IObjectAddedEvent"\n+      handler=".comment.notify_comment_added"\n+      />\n \n-    <subscriber\n-        for="plone.app.discussion.interfaces.IComment\n-             zope.lifecycleevent.interfaces.IObjectRemovedEvent"\n-        handler=".comment.notify_content_object"\n-        />\n+  <subscriber\n+      for="plone.app.discussion.interfaces.IComment\n+           zope.lifecycleevent.interfaces.IObjectRemovedEvent"\n+      handler=".comment.notify_content_object"\n+      />\n \n-    <subscriber\n-        for="plone.app.discussion.interfaces.IComment\n-             zope.lifecycleevent.interfaces.IObjectRemovedEvent"\n-        handler=".comment.notify_comment_removed"\n-        />\n+  <subscriber\n+      for="plone.app.discussion.interfaces.IComment\n+           zope.lifecycleevent.interfaces.IObjectRemovedEvent"\n+      handler=".comment.notify_comment_removed"\n+      />\n \n-    <subscriber\n-        for="plone.app.discussion.interfaces.IComment\n-             zope.lifecycleevent.interfaces.IObjectAddedEvent"\n-        handler=".subscribers.index_object"\n-        />\n+  <subscriber\n+      for="plone.app.discussion.interfaces.IComment\n+           zope.lifecycleevent.interfaces.IObjectAddedEvent"\n+      handler=".subscribers.index_object"\n+      />\n \n-    <subscriber\n-        for="plone.app.discussion.interfaces.IComment\n-             zope.lifecycleevent.interfaces.IObjectModifiedEvent"\n-        handler=".subscribers.index_object"\n-        />\n+  <subscriber\n+      for="plone.app.discussion.interfaces.IComment\n+           zope.lifecycleevent.interfaces.IObjectModifiedEvent"\n+      handler=".subscribers.index_object"\n+      />\n \n-    <subscriber\n-        for="plone.app.discussion.interfaces.IComment\n-             zope.lifecycleevent.interfaces.IObjectRemovedEvent"\n-        handler=".subscribers.unindex_object"\n-        />\n+  <subscriber\n+      for="plone.app.discussion.interfaces.IComment\n+           zope.lifecycleevent.interfaces.IObjectRemovedEvent"\n+      handler=".subscribers.unindex_object"\n+      />\n \n-    <subscriber\n-        for="Products.CMFCore.interfaces.IContentish\n-             zope.lifecycleevent.interfaces.IObjectRemovedEvent"\n-        handler=".comment.notify_content_object_deleted"\n-        />\n+  <subscriber\n+      for="Products.CMFCore.interfaces.IContentish\n+           zope.lifecycleevent.interfaces.IObjectRemovedEvent"\n+      handler=".comment.notify_content_object_deleted"\n+      />\n \n-    <subscriber\n-        for="Products.CMFCore.interfaces.IContentish\n-             zope.lifecycleevent.interfaces.IObjectMovedEvent"\n-        handler=".comment.notify_content_object_moved"\n-        />\n+  <subscriber\n+      for="Products.CMFCore.interfaces.IContentish\n+           zope.lifecycleevent.interfaces.IObjectMovedEvent"\n+      handler=".comment.notify_content_object_moved"\n+      />\n \n-    <!-- Control panel event subscribers -->\n+  <!-- Control panel event subscribers -->\n \n-    <subscriber\n-        for="plone.base.interfaces.events.IConfigurationChangedEvent"\n-        handler=".browser.controlpanel.notify_configuration_changed"\n-        />\n+  <subscriber\n+      for="plone.base.interfaces.events.IConfigurationChangedEvent"\n+      handler=".browser.controlpanel.notify_configuration_changed"\n+      />\n \n-    <subscriber\n-        for="plone.registry.interfaces.IRecordModifiedEvent"\n-        handler=".browser.controlpanel.notify_configuration_changed"\n-        />\n+  <subscriber\n+      for="plone.registry.interfaces.IRecordModifiedEvent"\n+      handler=".browser.controlpanel.notify_configuration_changed"\n+      />\n \n </configure>\ndiff --git a/plone/app/discussion/testing.py b/plone/app/discussion/testing.py\nindex 8d057027..fe23d84f 100644\n--- a/plone/app/discussion/testing.py\n+++ b/plone/app/discussion/testing.py\n@@ -22,7 +22,6 @@\n \n \n class PloneAppDiscussion(PloneSandboxLayer):\n-\n     defaultBases = (PLONE_APP_CONTENTTYPES_FIXTURE,)\n \n     USER_NAME = "johndoe"\n@@ -101,7 +100,6 @@ def setUpPloneSite(self, portal):\n \n \n class PloneAppDiscussionRobot(PloneAppDiscussion):\n-\n     defaultBases = (\n         PLONE_APP_CONTENTTYPES_FIXTURE,\n         REMOTE_LIBRARY_ROBOT_TESTING,\ndiff --git a/plone/app/discussion/tests/functional_test_comments.txt b/plone/app/discussion/tests/functional_test_comments.txt\nindex a727738a..61ab4a3e 100644\n--- a/plone/app/discussion/tests/functional_test_comments.txt\n+++ b/plone/app/discussion/tests/functional_test_comments.txt\n@@ -8,8 +8,8 @@ We use zope.testbrowser to simulate browser interaction in order to show how\n the plone.app.discussion commenting works.\n \n \n-Setting up and loggin in\n-------------------------\n+Setting up and log in\n+---------------------\n \n First we have to set up some things and login.\n \ndiff --git a/plone/app/discussion/tests/test_catalog.py b/plone/app/discussion/tests/test_catalog.py\nindex 03af8e94..044d18bc 100644\n--- a/plone/app/discussion/tests/test_catalog.py\n+++ b/plone/app/discussion/tests/test_catalog.py\n@@ -19,7 +19,6 @@\n \n \n class CatalogSetupTest(unittest.TestCase):\n-\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\n@@ -51,7 +50,6 @@ def test_collection_criteria_installed(self):\n \n \n class ConversationCatalogTest(unittest.TestCase):\n-\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\n@@ -68,10 +66,12 @@ def setUp(self):\n         comment1.text = "Comment text"\n         comment1.creator = "jim"\n         comment1.author_username = "Jim"\n-        comment1.creation_date = \\\n-            datetime(2006, 9, 17, 14, 18, 12).astimezone(timezone.utc)\n-        comment1.modification_date = \\\n-            datetime(2006, 9, 17, 14, 18, 12).astimezone(timezone.utc)\n+        comment1.creation_date = datetime(2006, 9, 17, 14, 18, 12).astimezone(\n+            timezone.utc\n+        )\n+        comment1.modification_date = datetime(2006, 9, 17, 14, 18, 12).astimezone(\n+            timezone.utc\n+        )\n \n         new_comment1_id = conversation.addComment(comment1)\n         self.comment_id = new_comment1_id\n@@ -125,10 +125,12 @@ def test_last_comment_date(self):\n         comment2 = createObject("plone.Comment")\n         comment2.title = "Comment 2"\n         comment2.text = "Comment text"\n-        comment2.creation_date = \\\n-            datetime(2009, 9, 17, 14, 18, 12).astimezone(timezone.utc)\n-        comment2.modification_date = \\\n-            datetime(2009, 9, 17, 14, 18, 12).astimezone(timezone.utc)\n+        comment2.creation_date = datetime(2009, 9, 17, 14, 18, 12).astimezone(\n+            timezone.utc\n+        )\n+        comment2.modification_date = datetime(2009, 9, 17, 14, 18, 12).astimezone(\n+            timezone.utc\n+        )\n         new_comment2_id = self.conversation.addComment(comment2)\n \n         comment2 = self.portal.doc1.restrictedTraverse(\n@@ -267,7 +269,6 @@ def test_dont_index_private_commentators(self):\n \n \n class CommentCatalogTest(unittest.TestCase):\n-\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\n@@ -514,7 +515,6 @@ def test_clear_and_rebuild_catalog(self):\n         )\n \n     def test_clear_and_rebuild_catalog_for_nested_comments(self):\n-\n         # Create a nested comment structure:\n         #\n         # Conversation\n@@ -571,7 +571,6 @@ def test_clear_and_rebuild_catalog_for_nested_comments(self):\n \n \n class NoConversationCatalogTest(unittest.TestCase):\n-\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\ndiff --git a/plone/app/discussion/tests/test_comment.py b/plone/app/discussion/tests/test_comment.py\nindex f9a9ac05..1317b89d 100644\n--- a/plone/app/discussion/tests/test_comment.py\n+++ b/plone/app/discussion/tests/test_comment.py\n@@ -35,7 +35,6 @@ def normalize(value):\n \n \n class CommentTest(unittest.TestCase):\n-\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\n@@ -364,7 +363,6 @@ def test_view(self):\n \n \n class RepliesTest(unittest.TestCase):\n-\n     # test the IReplies adapter on a comment\n \n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\ndiff --git a/plone/app/discussion/tests/test_comments_viewlet.py b/plone/app/discussion/tests/test_comments_viewlet.py\nindex de325e37..f3302b7f 100644\n--- a/plone/app/discussion/tests/test_comments_viewlet.py\n+++ b/plone/app/discussion/tests/test_comments_viewlet.py\n@@ -67,7 +67,6 @@ def read(self, *args):\n \n \n class TestCommentForm(unittest.TestCase):\n-\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\n@@ -475,7 +474,6 @@ def make_request(form={}):\n \n \n class TestCommentsViewlet(unittest.TestCase):\n-\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\n@@ -516,7 +514,9 @@ def test_can_review(self):\n         # Anonymous has no \'can review\' permission\n         self.assertFalse(self.viewlet.can_review())\n         # The reviewer role has the \'Review comments\' permission\n-        self.portal.acl_users._doAddUser("reviewer", TEST_USER_PASSWORD, ["Reviewer"], [])\n+        self.portal.acl_users._doAddUser(\n+            "reviewer", TEST_USER_PASSWORD, ["Reviewer"], []\n+        )\n         login(self.portal, "reviewer")\n         self.assertTrue(self.viewlet.can_review())\n \n@@ -544,7 +544,6 @@ def test_is_discussion_allowed(self):\n         self.assertTrue(self.viewlet.is_discussion_allowed())\n \n     def test_comment_transform_message(self):\n-\n         # Default transform is plain/text and comment moderation disabled\n         self.assertTrue(self.viewlet.comment_transform_message())\n         self.assertEqual(\n@@ -657,7 +656,6 @@ def test_get_commenter_home_url_is_none(self):\n         self.assertFalse(self.viewlet.get_commenter_home_url())\n \n     def test_get_commenter_portrait(self):\n-\n         # Add a user with a member image\n         self.membershipTool.addMember("jim", "Jim", ["Member"], [])\n         self.memberdata._setPortrait(\n@@ -696,7 +694,6 @@ def test_get_commenter_portrait(self):\n         )\n \n     def test_get_commenter_portrait_is_none(self):\n-\n         self.assertTrue(\n             self.viewlet.get_commenter_portrait()\n             in (\n@@ -706,7 +703,6 @@ def test_get_commenter_portrait_is_none(self):\n         )\n \n     def test_get_commenter_portrait_without_userimage(self):\n-\n         # Create a user without a user image\n         self.membershipTool.addMember("jim", "Jim", ["Member"], [])\n \n@@ -770,7 +766,7 @@ def test_format_time(self):\n         python_time = datetime(2009, 2, 1, 23, 32, 3, 57)\n         # Python Time must be utc time. There seems to be no too simple way\n         # to tell datetime to be of utc time.\n-        # therefor, we convert the time to seconds since epoch, which seems\n+        # therefore, we convert the time to seconds since epoch, which seems\n         # to assume, that the datetime was given in local time, and does the\n         # correction to the seconds since epoch. Then time.gmtime returns\n         # a correct utc time that can be used to make datetime set the utc\ndiff --git a/plone/app/discussion/tests/test_controlpanel.py b/plone/app/discussion/tests/test_controlpanel.py\nindex b148547e..25bb6a14 100644\n--- a/plone/app/discussion/tests/test_controlpanel.py\n+++ b/plone/app/discussion/tests/test_controlpanel.py\n@@ -14,7 +14,6 @@\n \n \n class RegistryTest(unittest.TestCase):\n-\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\n@@ -152,7 +151,6 @@ def test_moderator_notification_enabled(self):\n \n \n class ConfigurationChangedSubscriberTest(unittest.TestCase):\n-\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\ndiff --git a/plone/app/discussion/tests/test_conversation.py b/plone/app/discussion/tests/test_conversation.py\nindex b14888ec..6fc72913 100644\n--- a/plone/app/discussion/tests/test_conversation.py\n+++ b/plone/app/discussion/tests/test_conversation.py\n@@ -27,7 +27,6 @@\n \n \n class ConversationTest(unittest.TestCase):\n-\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\n@@ -99,7 +98,9 @@ def test_timezone_naive_comment(self):\n \n         # Check that comments have the correct portal timezones\n         self.assertTrue(comment.creation_date.tzinfo, tz.gettz("America/Los_Angeles"))\n-        self.assertTrue(comment.modification_date.tzinfo, tz.gettz("America/Los_Angeles"))\n+        self.assertTrue(\n+            comment.modification_date.tzinfo, tz.gettz("America/Los_Angeles")\n+        )\n \n         # Remove the timezone from the comment dates\n         comment.creation_date = datetime.utcnow()\n@@ -257,7 +258,6 @@ def test_comments_enabled_on_doc_in_subfolder(self):\n         self.assertEqual(conversation.enabled(), True)\n \n     def test_disable_commenting_globally(self):\n-\n         # Create a conversation.\n         conversation = self.portal.doc1.restrictedTraverse("@@conversation_view")\n \n@@ -283,7 +283,6 @@ def test_disable_commenting_globally(self):\n         self.assertEqual(conversation.enabled(), True)\n \n     def test_allow_discussion_for_news_items(self):\n-\n         self.typetool.constructContent("News Item", self.portal, "newsitem")\n         newsitem = self.portal.newsitem\n         conversation = newsitem.restrictedTraverse("@@conversation_view")\n@@ -310,7 +309,6 @@ def test_allow_discussion_for_news_items(self):\n         self.assertEqual(conversation.enabled(), True)\n \n     def test_disable_commenting_for_content_type(self):\n-\n         # Create a conversation.\n         conversation = self.portal.doc1.restrictedTraverse(\n             "@@conversation_view",\n@@ -601,7 +599,6 @@ def test_get_comments_batched(self):\n         pass\n \n     def test_get_threads(self):\n-\n         # Create a conversation. In this case we doesn\'t assign it to an\n         # object, as we just want to check the Conversation object API.\n         conversation = IConversation(self.portal.doc1)\n@@ -722,7 +719,6 @@ def test_no_comment(self):\n \n \n class ConversationEnabledForDexterityTypesTest(unittest.TestCase):\n-\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\n@@ -782,7 +778,6 @@ def test_enable_discussion(self):\n \n \n class RepliesTest(unittest.TestCase):\n-\n     # test the IReplies adapter on a conversation\n \n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\ndiff --git a/plone/app/discussion/tests/test_events.py b/plone/app/discussion/tests/test_events.py\nindex a6cc1cdb..24851f35 100644\n--- a/plone/app/discussion/tests/test_events.py\n+++ b/plone/app/discussion/tests/test_events.py\n@@ -68,7 +68,6 @@ class CommentEventsTest(unittest.TestCase):\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\n-\n         # Setup sandbox\n         self.portal = self.layer["portal"]\n         self.request = self.layer["request"]\ndiff --git a/plone/app/discussion/tests/test_indexers.py b/plone/app/discussion/tests/test_indexers.py\nindex a6f577fe..8a7bf192 100644\n--- a/plone/app/discussion/tests/test_indexers.py\n+++ b/plone/app/discussion/tests/test_indexers.py\n@@ -4,8 +4,8 @@\n from ..interfaces import IConversation\n from ..testing import PLONE_APP_DISCUSSION_INTEGRATION_TESTING  # noqa\n from datetime import datetime\n-from dateutil import tz\n from DateTime import DateTime\n+from dateutil import tz\n from plone.app.event.base import default_timezone\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n@@ -63,16 +63,24 @@ def setUp(self):\n         comment2.text = "Comment Text"\n         comment2.creator = "emma"\n         comment2.author_username = "Emma"\n-        comment2.creation_date = datetime(2007, 12, 13, 4, 18, 12).astimezone(self.portal_timezone)\n-        comment2.modification_date = datetime(2007, 12, 13, 4, 18, 12).astimezone(self.portal_timezone)\n+        comment2.creation_date = datetime(2007, 12, 13, 4, 18, 12).astimezone(\n+            self.portal_timezone\n+        )\n+        comment2.modification_date = datetime(2007, 12, 13, 4, 18, 12).astimezone(\n+            self.portal_timezone\n+        )\n         self.new_id2 = conversation.addComment(comment2)\n \n         comment3 = createObject("plone.Comment")\n         comment3.text = "Comment Text"\n         comment3.creator = "lukas"\n         comment3.author_username = "Lukas"\n-        comment3.creation_date = datetime(2009, 4, 12, 11, 12, 12).astimezone(self.portal_timezone)\n-        comment3.modification_date = datetime(2009, 4, 12, 11, 12, 12).astimezone(self.portal_timezone)\n+        comment3.creation_date = datetime(2009, 4, 12, 11, 12, 12).astimezone(\n+            self.portal_timezone\n+        )\n+        comment3.modification_date = datetime(2009, 4, 12, 11, 12, 12).astimezone(\n+            self.portal_timezone\n+        )\n         self.new_id3 = conversation.addComment(comment3)\n \n         self.conversation = conversation\n@@ -120,7 +128,6 @@ def test_conversation_commentators(self):\n \n \n class CommentIndexersTest(unittest.TestCase):\n-\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\n@@ -145,10 +152,14 @@ def setUp(self):\n         comment.author_name = "Jim"\n \n         # Create date in PDT (ie daylight savings)\n-        comment.creation_date = datetime(2006, 9, 17, 14, 18, 12).replace(tzinfo=tz.gettz("America/Los_Angeles"))\n+        comment.creation_date = datetime(2006, 9, 17, 14, 18, 12).replace(\n+            tzinfo=tz.gettz("America/Los_Angeles")\n+        )\n \n         # Create date in PST (ie not daylight savings)\n-        comment.modification_date = datetime(2008, 2, 12, 7, 32, 52).replace(tzinfo=tz.gettz("America/Los_Angeles"))\n+        comment.modification_date = datetime(2008, 2, 12, 7, 32, 52).replace(\n+            tzinfo=tz.gettz("America/Los_Angeles")\n+        )\n \n         self.comment_id = conversation.addComment(comment)\n         self.comment = comment.__of__(conversation)\ndiff --git a/plone/app/discussion/tests/test_moderation_multiple_state_view.py b/plone/app/discussion/tests/test_moderation_multiple_state_view.py\nindex 6a12a721..ea5005e2 100644\n--- a/plone/app/discussion/tests/test_moderation_multiple_state_view.py\n+++ b/plone/app/discussion/tests/test_moderation_multiple_state_view.py\n@@ -1,22 +1,15 @@\n from ..browser.moderation import BulkActionsView\n-from ..browser.moderation import CommentTransition\n-from ..browser.moderation import DeleteComment\n-from ..browser.moderation import View\n from ..interfaces import IConversation\n-from ..interfaces import IDiscussionSettings\n from ..testing import PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n-from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from zope.component import createObject\n-from zope.component import queryUtility\n \n import unittest\n \n \n class ModerationBulkActionsViewTest(unittest.TestCase):\n-\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\ndiff --git a/plone/app/discussion/tests/test_moderation_view.py b/plone/app/discussion/tests/test_moderation_view.py\nindex 639eaa35..31e1074b 100644\n--- a/plone/app/discussion/tests/test_moderation_view.py\n+++ b/plone/app/discussion/tests/test_moderation_view.py\n@@ -16,7 +16,6 @@\n \n \n class ModerationViewTest(unittest.TestCase):\n-\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\n@@ -55,7 +54,6 @@ def test_moderation_enabled(self):\n \n \n class ModerationBulkActionsViewTest(unittest.TestCase):\n-\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\n@@ -148,7 +146,6 @@ def test_delete(self):\n \n \n class RedirectionTest(unittest.TestCase):\n-\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\ndiff --git a/plone/app/discussion/tests/test_notifications.py b/plone/app/discussion/tests/test_notifications.py\nindex 305c90ed..0ce72c89 100644\n--- a/plone/app/discussion/tests/test_notifications.py\n+++ b/plone/app/discussion/tests/test_notifications.py\n@@ -54,7 +54,6 @@ def send(\n \n \n class TestUserNotificationUnit(unittest.TestCase):\n-\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\n@@ -189,7 +188,6 @@ def test_notify_only_once(self):\n \n \n class TestModeratorNotificationUnit(unittest.TestCase):\n-\n     layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n \n     def setUp(self):\ndiff --git a/plone/app/discussion/tests/test_workflow.py b/plone/app/discussion/tests/test_workflow.py\nindex 39fb219c..3ecb8eac 100644\n--- a/plone/app/discussion/tests/test_workflow.py\n+++ b/plone/app/discussion/tests/test_workflow.py\n@@ -130,7 +130,9 @@ def setUp(self):\n         )\n \n         self.portal.acl_users._doAddUser("member", TEST_USER_PASSWORD, ["Member"], [])\n-        self.portal.acl_users._doAddUser("reviewer", TEST_USER_PASSWORD, ["Reviewer"], [])\n+        self.portal.acl_users._doAddUser(\n+            "reviewer", TEST_USER_PASSWORD, ["Reviewer"], []\n+        )\n         self.portal.acl_users._doAddUser("manager", TEST_USER_PASSWORD, ["Manager"], [])\n         self.portal.acl_users._doAddUser("editor", TEST_USER_PASSWORD, ["Editor"], [])\n         self.portal.acl_users._doAddUser("reader", TEST_USER_PASSWORD, ["Reader"], [])\ndiff --git a/plone/app/discussion/tool.py b/plone/app/discussion/tool.py\nindex 50f9361e..b249ead6 100644\n--- a/plone/app/discussion/tool.py\n+++ b/plone/app/discussion/tool.py\n@@ -15,7 +15,6 @@\n \n @interface.implementer(ICommentingTool)\n class CommentingTool(UniqueObject, SimpleItem):\n-\n     meta_type = "plone.app.discussion tool"\n     id = "portal_discussion"\n \ndiff --git a/plone/app/discussion/upgrades.py b/plone/app/discussion/upgrades.py\nindex fbad45cf..7e646324 100644\n--- a/plone/app/discussion/upgrades.py\n+++ b/plone/app/discussion/upgrades.py\n@@ -1,9 +1,9 @@\n+from datetime import timezone\n+from plone import api\n from plone.app.discussion.interfaces import IDiscussionSettings\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from zope.component import getUtility\n-from plone import api\n-from datetime import timezone\n \n import logging\n \n@@ -83,20 +83,21 @@ def extend_review_workflow(context):\n \n def set_timezone_on_dates(context):\n     """Ensure timezone data is stored against all creation/modified dates"""\n-    pc = api.portal.get_tool(\'portal_catalog\')\n+    pc = api.portal.get_tool("portal_catalog")\n     creations = 0\n     modifieds = 0\n-    logger.info(\'Setting timezone information on comment dates\')\n-    comments = pc.search({\'Type\': \'Comment\'})\n+    logger.info("Setting timezone information on comment dates")\n+    comments = pc.search({"Type": "Comment"})\n     for cbrain in comments:\n         comment = cbrain.getObject()\n         if not comment.creation_date.tzinfo:\n             creations += 1\n-            comment.creation_date = \\\n-                comment.creation_date.astimezone(timezone.utc)\n+            comment.creation_date = comment.creation_date.astimezone(timezone.utc)\n         if not comment.modification_date.tzinfo:\n             modifieds += 1\n-            comment.modification_date = \\\n-                comment.modification_date.astimezone(timezone.utc)\n-    logger.info(\'Updated %i creation dates and %i modification dates\' %\n-                (creations, modifieds))\n+            comment.modification_date = comment.modification_date.astimezone(\n+                timezone.utc\n+            )\n+    logger.info(\n+        "Updated %i creation dates and %i modification dates" % (creations, modifieds)\n+    )\ndiff --git a/plone/app/discussion/upgrades.zcml b/plone/app/discussion/upgrades.zcml\nindex 7f8ffe7f..d265d428 100644\n--- a/plone/app/discussion/upgrades.zcml\n+++ b/plone/app/discussion/upgrades.zcml\n@@ -1,40 +1,42 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n-    xmlns:genericsetup="http://namespaces.zope.org/genericsetup">\n+    xmlns:genericsetup="http://namespaces.zope.org/genericsetup"\n+    >\n \n   <genericsetup:upgradeStep\n-      source="*"\n-      destination="100"\n       title="Update plone.app.discussion setting registry"\n       description=""\n       profile="plone.app.discussion:default"\n+      source="*"\n+      destination="100"\n       handler=".upgrades.update_registry"\n       />\n \n   <genericsetup:upgradeStep\n       title="edit comments and delete own comments"\n       description="reload registry config to enable new fields edit_comment_enabled and delete_own_comment_enabled"\n+      profile="plone.app.discussion:default"\n       source="100"\n       destination="101"\n       handler=".upgrades.update_registry"\n       sortkey="1"\n-      profile="plone.app.discussion:default"\n       />\n \n   <genericsetup:upgradeStep\n       title="delete comments and delete own comments"\n       description="reload rolemap config to enable new permissions \'Delete comments\' and \'Delete own comments\'"\n+      profile="plone.app.discussion:default"\n       source="101"\n       destination="102"\n       handler=".upgrades.update_rolemap"\n       sortkey="1"\n-      profile="plone.app.discussion:default"\n       />\n \n   <genericsetup:upgradeSteps\n+      profile="plone.app.discussion:default"\n       source="102"\n       destination="1000"\n-      profile="plone.app.discussion:default">\n+      >\n     <!-- Apply the update rolemap step again, to avoid missing it when\n          updating from plone.app.discussion 2.2.x.  When originally\n          adding this step in the 2.3.x release, we should have made a\n@@ -52,9 +54,10 @@\n   </genericsetup:upgradeSteps>\n \n   <genericsetup:upgradeSteps\n+      profile="plone.app.discussion:default"\n       source="1000"\n       destination="1001"\n-      profile="plone.app.discussion:default">\n+      >\n     <genericsetup:upgradeStep\n         title="Move comment.js into plone-legacy bundle"\n         description=""\n@@ -63,9 +66,10 @@\n   </genericsetup:upgradeSteps>\n \n   <genericsetup:upgradeSteps\n-    source="1001"\n-    destination="1002"\n-    profile="plone.app.discussion:default">\n+      profile="plone.app.discussion:default"\n+      source="1001"\n+      destination="1002"\n+      >\n     <genericsetup:upgradeStep\n         title="Extended review workflow with states pending, published and new: rejected and spam"\n         description="Additional states allows moderator to review history of publishing and rejection"\n@@ -74,24 +78,29 @@\n   </genericsetup:upgradeSteps>\n \n   <genericsetup:upgradeSteps\n+      profile="plone.app.discussion:default"\n       source="1999"\n       destination="2000"\n-      profile="plone.app.discussion:default">\n+      >\n     <genericsetup:upgradeDepends\n         title="Update controlpanel icon"\n-        import_steps="controlpanel" />\n+        import_steps="controlpanel"\n+        />\n     <genericsetup:upgradeDepends\n         title="Add \'View comments\' permission"\n-        import_steps="rolemap" />\n+        import_steps="rolemap"\n+        />\n     <genericsetup:upgradeStep\n         title="Grant Site Administrator permissions on pending comments"\n-        handler=".upgrades.upgrade_comment_workflows" />\n+        handler=".upgrades.upgrade_comment_workflows"\n+        />\n   </genericsetup:upgradeSteps>\n \n   <genericsetup:upgradeSteps\n-    source="2000"\n-    destination="2001"\n-    profile="plone.app.discussion:default">\n+      profile="plone.app.discussion:default"\n+      source="2000"\n+      destination="2001"\n+      >\n     <genericsetup:upgradeStep\n         title="Set timezone on comment dates"\n         description="Ensure the timezone is set for comment dates"\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 05b615de..faf50fb2 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,3 +1,5 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [tool.towncrier]\n filename = "CHANGES.rst"\n directory = "news/"\n@@ -18,3 +20,47 @@ showcontent = true\n directory = "bugfix"\n name = "Bug fixes:"\n showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "internal"\n+name = "Internal:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "documentation"\n+name = "Documentation:"\n+showcontent = true\n+\n+[[tool.towncrier.type]]\n+directory = "tests"\n+name = "Tests"\n+showcontent = true\n+\n+[tool.isort]\n+profile = "plone"\n+\n+[tool.black]\n+target-version = ["py38"]\n+\n+[tool.dependencychecker]\n+Zope = [\n+  # Zope own provided namespaces\n+  \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n+  \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n+  \'Zope2\', \'webdav\', \'zmi\',\n+  # Zope dependencies\n+  \'Acquisition\', \'DateTime\', \'transaction\', \'zExceptions\', \'ZODB\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.deferredimport\', \'zope.event\',\n+  \'zope.exceptions\', \'zope.globalrequest\', \'zope.i18n\', \'zope.i18nmessageid\',\n+  \'zope.interface\', \'zope.lifecycleevent\', \'zope.location\', \'zope.publisher\',\n+  \'zope.schema\', \'zope.security\', \'zope.site\', \'zope.traversing\', \'AccessControl\',\n+]\n+\'plone.base\' = [\n+  \'AccessControl\', \'Products.BTreeFolder2\', \'Products.CMFCore\',\n+  \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n+]\n+python-dateutil = [\'dateutil\']\n+ignore-packages = ["Products.LinguaPlone.interfaces.ITranslatable", "collective.akismet", "collective.z3cform.norobots", "plone.formwidget.captcha", "plone.formwidget.recaptcha", "plone.contentrules", "plone.app.contentrules", "plone.stringinterp", "plone.app.collection"]\n+\n+[tool.codespell]\n+ignore-words-list = "discreet"\ndiff --git a/setup.cfg b/setup.cfg\nindex 70b390fa..0da8f8fb 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -1,17 +1,23 @@\n-[build_sphinx]\n-source-dir = docs/source\n-build-dir  = docs\n-all_files  = 1\n-\n-[upload_sphinx]\n-upload-dir = docs/html\n-\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n [bdist_wheel]\n universal = 0\n \n-[isort]\n-# black compatible Plone isort rules:\n-profile = black\n-force_alphabetical_sort = True\n-force_single_line = True\n-lines_after_imports = 2\n+[flake8]\n+doctests = 1\n+ignore =\n+    # black takes care of line length\n+    E501,\n+    # black takes care of where to break lines\n+    W503,\n+    # black takes care of spaces within slicing (list[:])\n+    E203,\n+    # black takes care of spaces after commas\n+    E231,\n+\n+[check-manifest]\n+ignore =\n+    .editorconfig\n+    .meta.toml\n+    .pre-commit-config.yaml\n+    tox.ini\ndiff --git a/setup.py b/setup.py\nindex f9751244..e75ddfed 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -5,11 +5,22 @@\n version = "4.0.1.dev0"\n \n install_requires = [\n+    "BTrees",\n+    "Products.GenericSetup",\n+    "Products.ZCatalog",\n+    "Products.statusmessages",\n+    "persistent",\n+    "plone.api",\n+    "plone.app.event",\n+    "plone.dexterity",\n+    "plone.registry",\n+    "plone.resource",\n+    "plone.uuid",\n+    "zope.annotation",\n     "setuptools",\n     "plone.app.layout",\n     "plone.app.registry",\n     "plone.app.uuid",\n-    "plone.app.z3cform",\n     "plone.base",\n     "plone.indexer",\n     "plone.z3cform",\n@@ -45,6 +56,7 @@\n     namespace_packages=["plone", "plone.app"],\n     include_package_data=True,\n     zip_safe=False,\n+    python_requires=">=3.8",\n     install_requires=install_requires,\n     extras_require={\n         "test": [\n@@ -54,6 +66,12 @@\n             "plone.app.contentrules",\n             "plone.app.contenttypes[test]",\n             "plone.app.robotframework",\n+            "plone.app.vocabularies",\n+            "plone.testing",\n+            "plone.protect",\n+            "Products.MailHost",\n+            "robotsuite",\n+            "python-dateutil",\n         ],\n     },\n )\ndiff --git a/tox.ini b/tox.ini\nnew file mode 100644\nindex 00000000..fe28c83f\n--- /dev/null\n+++ b/tox.ini\n@@ -0,0 +1,53 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+[tox]\n+# We need 4.4.0 for constrain_package_deps.\n+min_version = 4.4.0\n+envlist =\n+    format\n+    lint\n+    test\n+\n+[testenv]\n+allowlist_externals =\n+    sh\n+\n+[testenv:format]\n+description = automatically reformat code\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a pyupgrade\n+    pre-commit run -a isort\n+    pre-commit run -a black\n+    pre-commit run -a zpretty\n+\n+[testenv:lint]\n+description = run linters that will help improve the code style\n+skip_install = true\n+deps =\n+    pre-commit\n+commands =\n+    pre-commit run -a\n+\n+[testenv:dependencies]\n+description = check if the package defines all its dependencies and generate a graph out of them\n+deps =\n+    z3c.dependencychecker==2.11\n+    pipdeptree==2.5.1\n+    graphviz  # optional dependency of pipdeptree\n+commands =\n+    dependencychecker\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+\n+[testenv:test]\n+usedevelop = true\n+constrain_package_deps = true\n+deps =\n+    zope.testrunner\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    zope-testrunner --test-path={toxinidir} -s plone.app.discussion\n+extras =\n+    test\n'

