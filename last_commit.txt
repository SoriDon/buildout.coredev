Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2016-03-10T23:21:45+01:00
Author: Eric BREHAULT (ebrehault) <ebrehault@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/cbf4f6cf4a587fc57a903bddcd3ee2e7e75a7eb8

action form schema

Files changed:
M Products/CMFPlone/interfaces/__init__.py
M Products/CMFPlone/interfaces/controlpanel.py

diff --git a/Products/CMFPlone/interfaces/__init__.py b/Products/CMFPlone/interfaces/__init__.py
index 464bc41..ededdc8 100644
--- a/Products/CMFPlone/interfaces/__init__.py
+++ b/Products/CMFPlone/interfaces/__init__.py
@@ -29,6 +29,8 @@
 from controlpanel import IUserGroupsSettingsSchema
 from controlpanel import ISocialMediaSchema
 from controlpanel import IImagingSchema
+from controlpanel import IActionSchema
+from controlpanel import INewActionSchema
 from events import IConfigurationChangedEvent
 from events import IReorderedEvent
 from events import ISiteManagerCreatedEvent
diff --git a/Products/CMFPlone/interfaces/controlpanel.py b/Products/CMFPlone/interfaces/controlpanel.py
index 7d99ae1..4ac5bad 100644
--- a/Products/CMFPlone/interfaces/controlpanel.py
+++ b/Products/CMFPlone/interfaces/controlpanel.py
@@ -1524,3 +1524,69 @@ class ILinkSchema(Interface):
         description=_(u'Marks external or special protocol links with class.'),
         default=True,
         required=False)
+
+
+class IActionSchema(Interface):
+
+    category = schema.Choice(
+        title=_(u'Category'),
+        vocabulary="plone.app.vocabularies.PortalActionCategories",
+        required=True)
+
+    title = schema.TextLine(
+        title=_(u'Title'),
+        required=True)
+
+    description = schema.Text(
+        title=_(u'Description'),
+        required=False)
+
+    i18n_domain = schema.TextLine(
+        title=_(u"i18n_domain_heading", default=u'I18n domain'),
+        default=u'plone',
+        required=False)
+
+    url_expr = schema.ASCIILine(
+        title=_(u"action_url_heading", default=u'Action URL'),
+        description=_(u"action_url_description",
+            default=u'An expression producing the called URL'),
+        required=True)
+
+    available_expr = schema.ASCIILine(
+        title=_(u"action_condition_heading", default=u'Condition'),
+        description=_(u"action_condition_description",
+            default=u'A boolean expression'),
+        required=False)
+
+    permissions = schema.List(
+        title=_(u"action_permissions_heading", default=u"Permissions"),
+        required=True,
+        default=['View'],
+        missing_value=[],
+        value_type=schema.Choice(
+            vocabulary="plone.app.vocabularies.Permissions"
+        )
+    )
+
+    visible = schema.Bool(
+        title=_(u"action_visibility_heading", default=u'Visible?'),
+        default=True,
+        required=False)
+
+    position = schema.Int(
+        title=_(u"action_position_heading", default=u'Position'),
+        default=1,
+        min=1,
+        required=True)
+
+
+class INewActionSchema(Interface):
+
+    category = schema.Choice(
+        title=_(u'Category'),
+        vocabulary="plone.app.vocabularies.PortalActionCategories",
+        required=True)
+
+    id = schema.ASCIILine(
+        title=_(u'Id'),
+        required=True)


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2016-03-10T23:21:45+01:00
Author: Eric BREHAULT (ebrehault) <ebrehault@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/edbd237b2d38fee2888e8e25b99bb5c1d0f7f72e

control panel for actions

Files changed:
A Products/CMFPlone/controlpanel/browser/actions.pt
A Products/CMFPlone/controlpanel/browser/actions.py
M Products/CMFPlone/controlpanel/browser/configure.zcml

diff --git a/Products/CMFPlone/controlpanel/browser/actions.pt b/Products/CMFPlone/controlpanel/browser/actions.pt
new file mode 100644
index 0000000..3a088a3
--- /dev/null
+++ b/Products/CMFPlone/controlpanel/browser/actions.pt
@@ -0,0 +1,56 @@
+<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
+      xmlns:tal="http://xml.zope.org/namespaces/tal"
+      xmlns:metal="http://xml.zope.org/namespaces/metal"
+      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+      lang="en"
+      metal:use-macro="context/prefs_main_template/macros/master">
+
+<body>
+
+
+<metal:main metal:fill-slot="prefs_configlet_main" i18n:domain="plone">
+
+    <h1 class="documentFirstHeading"
+        i18n:translate="portal_actions_controlpanel_header">Portal actions</h1>
+
+    <div class="documentDescription"
+       i18n:translate="portal_actions_controlpanel_description">
+      This is the portal actions configuration section, you can manage the
+      actions contained in the different action categories.
+    </div>
+
+    <div id="content-core">
+        <p class="addAction">
+            <a href="@@new-action"
+                class="context pat-plone-modal pull-right"
+                i18n:translate="">Add new action</a>
+        </p>
+        <section tal:repeat="category view/actions" class="portlet">
+            <header tal:content="category/title" class="portletHeader" />
+            <section class="portletContent">
+                <ol class="configlets">
+                    <li tal:repeat="action category/actions">
+                        <span tal:content="action/title" i18n:translate="" />
+                        <form action="@@actions-controlpanel" class="pull-right"
+                            method="POST"
+                            confirm-message="Delete the action?"
+                            i18n:attributes="confirm-message"
+                            onsubmit="return confirm(this.getAttribute('confirm-message'));">
+                            <input type="hidden" name="deleteaction"
+                                tal:attributes="value action/id" />
+                            <input type="hidden" name="category"
+                                tal:attributes="value category/id" />
+                            <a class="pat-plone-modal standalone"
+                            tal:attributes="href string:${action/url}/@@action-form"
+                            i18n:translate="">Edit</a>
+                            <input type="submit" class="destructive" value="Delete"
+                                i18n:attributes="value" />
+                        </form>
+                    </li>
+                </ol>
+            </section>
+        </section>
+    </div>
+</metal:main>
+</body>
+</html>
\ No newline at end of file
diff --git a/Products/CMFPlone/controlpanel/browser/actions.py b/Products/CMFPlone/controlpanel/browser/actions.py
new file mode 100644
index 0000000..72b17fe
--- /dev/null
+++ b/Products/CMFPlone/controlpanel/browser/actions.py
@@ -0,0 +1,180 @@
+from plone.autoform.form import AutoExtensibleForm
+from Products.CMFCore.ActionInformation import Action
+from Products.CMFCore.interfaces import IAction, IActionCategory
+from Products.CMFCore.utils import getToolByName
+from Products.CMFPlone import PloneMessageFactory as _
+from Products.CMFPlone.interfaces import IActionSchema, INewActionSchema
+from Products.Five import BrowserView
+from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
+from z3c.form import form
+from zope.component import adapts
+from zope.event import notify
+from zope.interface import implements
+from zope.lifecycleevent import ObjectCreatedEvent
+
+
+class ActionListControlPanel(BrowserView):
+    """Control panel for the portal actions."""
+
+    template = ViewPageTemplateFile("actions.pt")
+
+    def __init__(self, context, request):
+        self.context = context
+        self.request = request
+        self.portal_actions = getToolByName(self.context, 'portal_actions')
+
+    def display(self):
+        actions = []
+        for category in self.portal_actions.objectValues():
+            if category.id == 'controlpanel':
+                continue
+            if not IActionCategory.providedBy(category):
+                continue
+            cat_infos = {
+                'id': category.id,
+                'title': category.title or category.id,
+            }
+            action_list = []
+            for action in category.objectValues():
+                if IAction.providedBy(action):
+                    action_list.append({
+                        'id': action.id,
+                        'title': action.title,
+                        'url': action.absolute_url(),
+                    })
+            cat_infos['actions'] = action_list
+            actions.append(cat_infos)
+
+        self.actions = actions
+        return self.template()
+
+    def __call__(self):
+        if self.request.get('deleteaction'):
+            action_id = self.request['deleteaction']
+            category = self.portal_actions[self.request['category']]
+            category.manage_delObjects([action_id])
+            self.request.RESPONSE.redirect('@@actions-controlpanel')
+        return self.display()
+
+
+class ActionControlPanelAdapter(object):
+    """Adapter for action form."""
+
+    adapts(IAction)
+    implements(IActionSchema)
+
+    def __init__(self, context):
+        self.context = context
+        self.current_category = self.context.getParentNode()
+
+    def get_category(self):
+        return self.current_category.id
+
+    def set_category(self, value):
+        portal_actions = getToolByName(self.context, 'portal_actions')
+        new_category = portal_actions.get(value)
+        cookie = self.current_category.manage_cutObjects(ids=[self.context.id])
+        new_category.manage_pasteObjects(cookie)
+
+    category = property(get_category, set_category)
+
+    def get_title(self):
+        return self.context.title
+
+    def set_title(self, value):
+        self.context._setPropValue('title', value)
+
+    title = property(get_title, set_title)
+
+    def get_description(self):
+        return self.context.description
+
+    def set_description(self, value):
+        self.context._setPropValue('description', value)
+
+    description = property(get_description, set_description)
+
+    def get_i18n_domain(self):
+        return self.context.i18n_domain
+
+    def set_i18n_domain(self, value):
+        self.context._setPropValue('i18n_domain', value)
+
+    i18n_domain = property(get_i18n_domain, set_i18n_domain)
+
+    def get_url_expr(self):
+        return self.context.url_expr
+
+    def set_url_expr(self, value):
+        self.context._setPropValue('url_expr', value)
+
+    url_expr = property(get_url_expr, set_url_expr)
+
+    def get_available_expr(self):
+        return self.context.available_expr
+
+    def set_available_expr(self, value):
+        self.context._setPropValue('available_expr', value)
+
+    available_expr = property(get_available_expr, set_available_expr)
+
+    def get_permissions(self):
+        return self.context.permissions
+
+    def set_permissions(self, value):
+        self.context._setPropValue('permissions', value)
+
+    permissions = property(get_permissions, set_permissions)
+
+    def get_visible(self):
+        return self.context.visible
+
+    def set_visible(self, value):
+        self.context._setPropValue('visible', value)
+
+    visible = property(get_visible, set_visible)
+
+    def get_position(self):
+        position = self.current_category.objectIds().index(self.context.id)
+        return position + 1
+
+    def set_position(self, value):
+        current_position = self.current_category.objectIds().index(
+            self.context.id)
+        all_actions = list(self.current_category._objects)
+        current_action = all_actions.pop(current_position)
+        new_position = value - 1
+        all_actions = all_actions[0:new_position] + [current_action] + \
+            all_actions[new_position:]
+        self.current_category._objects = tuple(all_actions)
+
+    position = property(get_position, set_position)
+
+
+class ActionControlPanel(AutoExtensibleForm, form.EditForm):
+    """A form to edit a portal action."""
+
+    schema = IActionSchema
+    ignoreContext = False
+    label = _(u'Action Settings')
+
+
+class NewActionControlPanel(AutoExtensibleForm, form.AddForm):
+    """A form to add a new portal action."""
+
+    schema = INewActionSchema
+    ignoreContext = True
+    label = _(u'New action')
+
+    def createAndAdd(self, data):
+        portal_actions = getToolByName(self.context, 'portal_actions')
+        category = portal_actions.get(data['category'])
+        action_id = data['id']
+        action = Action(
+            action_id,
+            title=action_id,
+            i18n_domain='plone',
+            permissions=['View'],
+        )
+        category[action_id] = action
+        notify(ObjectCreatedEvent(action))
diff --git a/Products/CMFPlone/controlpanel/browser/configure.zcml b/Products/CMFPlone/controlpanel/browser/configure.zcml
index 59b1f4a..352911a 100644
--- a/Products/CMFPlone/controlpanel/browser/configure.zcml
+++ b/Products/CMFPlone/controlpanel/browser/configure.zcml
@@ -251,4 +251,28 @@
       permission="plone.app.controlpanel.Imaging"
       />
 
+  <!-- Portal actions -->
+  <browser:page
+      name="actions-controlpanel"
+      for="Products.CMFPlone.interfaces.IPloneSiteRoot"
+      class=".actions.ActionListControlPanel"
+      permission="cmf.ManagePortal"
+      />
+
+  <adapter factory=".actions.ActionControlPanelAdapter"/>
+
+  <browser:page
+      name="action-form"
+      for="Products.CMFCore.interfaces.IAction"
+      class=".actions.ActionControlPanel"
+      permission="cmf.ManagePortal"
+      />
+
+  <browser:page
+      name="new-action"
+      for="Products.CMFPlone.interfaces.IPloneSiteRoot"
+      class=".actions.NewActionControlPanel"
+      permission="cmf.ManagePortal"
+      />
+
 </configure>


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2016-03-10T23:21:45+01:00
Author: Eric BREHAULT (ebrehault) <ebrehault@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/b28f02cead34148debd39560d47cae2bf414f6e8

set proper titles to action categories

Files changed:
M Products/CMFPlone/profiles/default/actions.xml

diff --git a/Products/CMFPlone/profiles/default/actions.xml b/Products/CMFPlone/profiles/default/actions.xml
index 890e783..673740e 100644
--- a/Products/CMFPlone/profiles/default/actions.xml
+++ b/Products/CMFPlone/profiles/default/actions.xml
@@ -5,7 +5,7 @@
  <action-provider name="portal_types"/>
  <action-provider name="portal_actions" />
  <object name="document_actions" meta_type="CMF Action Category">
-  <property name="title"></property>
+  <property name="title" i18n:translate="">Document actions</property>
   <object name="rss" meta_type="CMF Action" i18n:domain="plone">
    <property name="title" i18n:translate="">RSS feed</property>
    <property name="description" i18n:translate=""></property>
@@ -43,7 +43,7 @@
   </object>
  </object>
  <object name="site_actions" meta_type="CMF Action Category">
-  <property name="title"></property>
+  <property name="title" i18n:translate="">Site actions</property>
   <object name="sitemap" meta_type="CMF Action" i18n:domain="plone">
    <property name="title" i18n:translate="">Site Map</property>
    <property name="description" i18n:translate=""></property>
@@ -81,7 +81,7 @@
   </object>
  </object>
  <object name="object" meta_type="CMF Action Category">
-  <property name="title"></property>
+  <property name="title" i18n:translate="">Object actions</property>
   <object name="folderContents" meta_type="CMF Action" i18n:domain="plone">
    <property name="title" i18n:translate="">Contents</property>
    <property name="description" i18n:translate=""></property>
@@ -143,7 +143,7 @@
   </object>
  </object>
  <object name="object_buttons" meta_type="CMF Action Category">
-  <property name="title"></property>
+  <property name="title" i18n:translate="">Object buttons</property>
   <object name="cut" meta_type="CMF Action" i18n:domain="plone">
    <property name="title" i18n:translate="">Cut</property>
    <property name="description" i18n:translate=""></property>
@@ -207,7 +207,7 @@
   </object>
  </object>
  <object name="portal_tabs" meta_type="CMF Action Category">
-  <property name="title"></property>
+  <property name="title" i18n:translate="">Portal tabs</property>
   <object name="index_html" meta_type="CMF Action" i18n:domain="plone">
    <property name="title" i18n:translate="">Home</property>
    <property name="description" i18n:translate=""></property>
@@ -222,7 +222,7 @@
   </object>
  </object>
  <object name="user" meta_type="CMF Action Category">
-  <property name="title"></property>
+  <property name="title" i18n:translate="">User actions</property>
   <object name="preferences" meta_type="CMF Action" i18n:domain="plone">
    <property name="title" i18n:translate="">Preferences</property>
    <property name="description" i18n:translate=""></property>


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2016-03-10T23:21:45+01:00
Author: Eric BREHAULT (ebrehault) <ebrehault@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/ac0df8c99f20018489c2da2c008ca438e917e174

add actions configlet menu

Files changed:
M Products/CMFPlone/profiles/default/controlpanel.xml

diff --git a/Products/CMFPlone/profiles/default/controlpanel.xml b/Products/CMFPlone/profiles/default/controlpanel.xml
index c8f65f4..3f6b282 100644
--- a/Products/CMFPlone/profiles/default/controlpanel.xml
+++ b/Products/CMFPlone/profiles/default/controlpanel.xml
@@ -181,4 +181,10 @@
     i18n:attributes="title">
   <permission>Plone Site Setup: Imaging</permission>
  </configlet>
+ <configlet title="Actions" action_id="ActionSettings" appId="Plone"
+    category="plone-general" condition_expr=""
+    url_expr="string:${portal_url}/@@actions-controlpanel" visible="True"
+    i18n:attributes="title">
+  <permission>Manage portal</permission>
+ </configlet>
 </object>


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2016-03-10T23:21:45+01:00
Author: Eric BREHAULT (ebrehault) <ebrehault@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/b7e2864536e3338d4bec2027c76cb03e96697ba4

action control panel tests

Files changed:
A Products/CMFPlone/controlpanel/tests/test_controlpanel_actions.py
A Products/CMFPlone/tests/robot/test_controlpanel_actions.robot

diff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_actions.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_actions.py
new file mode 100644
index 0000000..80695a5
--- /dev/null
+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_actions.py
@@ -0,0 +1,42 @@
+# -*- coding: utf-8 -*-
+from Products.CMFCore.utils import getToolByName
+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING
+from zope.component import getMultiAdapter
+import unittest2 as unittest
+
+
+class PortalActionsIntegrationTest(unittest.TestCase):
+    """Test portal actions control panel."""
+
+    layer = PRODUCTS_CMFPLONE_INTEGRATION_TESTING
+
+    def setUp(self):  # NOQA
+        self.portal = self.layer['portal']
+        self.request = self.layer['request']
+        self.portal_actions = getToolByName(self.portal, 'portal_actions')
+
+    def test_actions_controlpanel_view(self):
+        view = getMultiAdapter((self.portal, self.portal.REQUEST),
+                               name="actions-controlpanel")
+        view = view.__of__(self.portal)
+        self.assertTrue(view())
+
+    def test_actions_in_controlpanel(self):
+        self.controlpanel = getToolByName(self.portal, "portal_controlpanel")
+        self.assertTrue('ActionSettings' in [
+            a.getAction(self)['id']
+            for a in self.controlpanel.listActions()
+        ])
+
+    def test_edit_action_controlpanel_view(self):
+        action = self.portal_actions.site_actions.sitemap
+        view = getMultiAdapter((action, self.portal.REQUEST),
+                               name="action-form")
+        view = view.__of__(self.portal)
+        self.assertTrue(view())
+
+    def test_new_action_controlpanel_view(self):
+        view = getMultiAdapter((self.portal, self.portal.REQUEST),
+                               name="new-action")
+        view = view.__of__(self.portal)
+        self.assertTrue(view())
diff --git a/Products/CMFPlone/tests/robot/test_controlpanel_actions.robot b/Products/CMFPlone/tests/robot/test_controlpanel_actions.robot
new file mode 100644
index 0000000..1a0208d
--- /dev/null
+++ b/Products/CMFPlone/tests/robot/test_controlpanel_actions.robot
@@ -0,0 +1,104 @@
+*** Settings ***
+
+Resource  plone/app/robotframework/keywords.robot
+Resource  plone/app/robotframework/saucelabs.robot
+Resource  plone/app/robotframework/selenium.robot
+
+Library  Remote  ${PLONE_URL}/RobotRemote
+
+Resource  keywords.robot
+
+Test Setup  Open SauceLabs test browser
+Test Teardown  Run keywords  Report test status  Close all browsers
+
+
+*** Test Cases ***************************************************************
+
+Scenario: Modify an existing action in Actions Control Panel
+  Given a logged-in administrator
+    and the actions control panel
+   When I modify an action title
+   Then anonymous users can see the new action title
+
+Scenario: Reorder in Actions Control Panel
+  Given a logged-in administrator
+    and the actions control panel
+   When I change the actions order
+   Then anonymous users can see the actions new ordering
+
+Scenario: Create a new action in Actions Control Panel
+  Given a logged-in administrator
+    and the actions control panel
+   When I add a new action
+   Then logged-in users can see the new action
+
+Scenario: Delete an action in Actions Control Panel
+  Given a logged-in administrator
+    and the actions control panel
+   When I delete an action
+   Then anonymous users cannot see the action anymore
+
+*** Keywords *****************************************************************
+
+# --- GIVEN ------------------------------------------------------------------
+
+a logged-in administrator
+  Enable autologin as   Manager
+
+the actions control panel
+  Go to  ${PLONE_URL}/@@actions-controlpanel
+
+# --- WHEN -------------------------------------------------------------------
+
+I modify an action title
+  Click Link    css=section:nth-child(3) li:first-child a
+  Wait until page contains  Action Settings
+  Input Text for sure  form.widgets.title  A new site map
+  Click Element  css=.pattern-modal-buttons > input
+
+I change the actions order
+  Click Link    css=section:nth-child(3) li:first-child a
+  Wait until page contains  Action Settings
+  Input Text for sure  form.widgets.position  3
+  Click Element  css=.pattern-modal-buttons > input
+
+I add a new action
+  Click Link  Add new action
+  Wait until page contains  New action
+  Select From List By Label   form.widgets.category:list   User actions
+  Input Text for sure  form.widgets.id  favorites
+  Click Element  css=.pattern-modal-buttons > input
+  Wait until page contains  favorites
+  Click Link    css=section:nth-child(7) li:last-child a
+  Wait until page contains  Action Settings
+  Input Text for sure  form.widgets.title  My favorites
+  Input Text for sure  form.widgets.url_expr  string:\${globals_view/navigationRootUrl}/favorites
+  Click Element  css=.pattern-modal-buttons > input
+
+I delete an action
+  Click Button    css=section:nth-child(3) li:first-child input[type=submit]
+  Confirm Action
+
+# --- THEN -------------------------------------------------------------------
+
+anonymous users can see the new action title
+  Disable autologin
+  Go to  ${PLONE_URL}
+  Page Should Contain  A new site map
+
+anonymous users can see the actions new ordering
+  Disable autologin
+  Go to  ${PLONE_URL}
+  Page Should Contain Element   xpath=//section[@role='menu']/section/ul/li[1]/a/span[contains(text(), 'Accessibility')]
+  Page Should Contain Element   xpath=//section[@role='menu']/section/ul/li[3]/a/span[contains(text(), 'Site Map')]
+
+logged-in users can see the new action
+  Disable autologin
+  Enable autologin as   Contributor
+  Go to  ${PLONE_URL}
+  Page Should Contain  My favorites
+
+anonymous users cannot see the action anymore
+  Disable autologin
+  Go to  ${PLONE_URL}
+  Page Should Not Contain  Site map
\ No newline at end of file


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2016-03-10T23:22:55+01:00
Author: Eric BREHAULT (ebrehault) <ebrehault@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/814684e855a53f82027a707e84f2ab9c40a032b2

update CHANGES.txt

Files changed:
M CHANGES.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index bdb05b6..048c536 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,6 +14,9 @@ Incompatibilities:
 
 New:
 
+- Control panel to mange portal actions
+  [ebrehault]
+
 - new less variable to configure the width of the toolbars submenu called
   ``plone-toolbar-submenu-width``.
   [jensens]
@@ -69,7 +72,6 @@ New:
 
 - Merge JS and CSS bundles into meta-bundles to reduce the number of requests
   when loading a page (PLIP #1277)
-  [ebrehault]
 
 Fixes:
 


Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2016-03-11T10:07:13+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/c531f10b2bc4a95707f4ccadc029c565de2e41d0

Merge pull request #1385 from plone/plip-1342-portal-actions

Implementation for PLIP 1342 portal actions

Files changed:
A Products/CMFPlone/controlpanel/browser/actions.pt
A Products/CMFPlone/controlpanel/browser/actions.py
A Products/CMFPlone/controlpanel/tests/test_controlpanel_actions.py
A Products/CMFPlone/tests/robot/test_controlpanel_actions.robot
M CHANGES.rst
M Products/CMFPlone/controlpanel/browser/configure.zcml
M Products/CMFPlone/interfaces/__init__.py
M Products/CMFPlone/interfaces/controlpanel.py
M Products/CMFPlone/profiles/default/actions.xml
M Products/CMFPlone/profiles/default/controlpanel.xml

diff --git a/CHANGES.rst b/CHANGES.rst
index 60c0f7c..e06cc88 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,6 +14,9 @@ Incompatibilities:
 
 New:
 
+- Control panel to mange portal actions
+  [ebrehault]
+
 - new less variable to configure the width of the toolbars submenu called
   ``plone-toolbar-submenu-width``.
   [jensens]
@@ -72,7 +75,6 @@ New:
 
 - Merge JS and CSS bundles into meta-bundles to reduce the number of requests
   when loading a page (PLIP #1277)
-  [ebrehault]
 
 Fixes:
 
diff --git a/Products/CMFPlone/controlpanel/browser/actions.pt b/Products/CMFPlone/controlpanel/browser/actions.pt
new file mode 100644
index 0000000..3a088a3
--- /dev/null
+++ b/Products/CMFPlone/controlpanel/browser/actions.pt
@@ -0,0 +1,56 @@
+<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
+      xmlns:tal="http://xml.zope.org/namespaces/tal"
+      xmlns:metal="http://xml.zope.org/namespaces/metal"
+      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
+      lang="en"
+      metal:use-macro="context/prefs_main_template/macros/master">
+
+<body>
+
+
+<metal:main metal:fill-slot="prefs_configlet_main" i18n:domain="plone">
+
+    <h1 class="documentFirstHeading"
+        i18n:translate="portal_actions_controlpanel_header">Portal actions</h1>
+
+    <div class="documentDescription"
+       i18n:translate="portal_actions_controlpanel_description">
+      This is the portal actions configuration section, you can manage the
+      actions contained in the different action categories.
+    </div>
+
+    <div id="content-core">
+        <p class="addAction">
+            <a href="@@new-action"
+                class="context pat-plone-modal pull-right"
+                i18n:translate="">Add new action</a>
+        </p>
+        <section tal:repeat="category view/actions" class="portlet">
+            <header tal:content="category/title" class="portletHeader" />
+            <section class="portletContent">
+                <ol class="configlets">
+                    <li tal:repeat="action category/actions">
+                        <span tal:content="action/title" i18n:translate="" />
+                        <form action="@@actions-controlpanel" class="pull-right"
+                            method="POST"
+                            confirm-message="Delete the action?"
+                            i18n:attributes="confirm-message"
+                            onsubmit="return confirm(this.getAttribute('confirm-message'));">
+                            <input type="hidden" name="deleteaction"
+                                tal:attributes="value action/id" />
+                            <input type="hidden" name="category"
+                                tal:attributes="value category/id" />
+                            <a class="pat-plone-modal standalone"
+                            tal:attributes="href string:${action/url}/@@action-form"
+                            i18n:translate="">Edit</a>
+                            <input type="submit" class="destructive" value="Delete"
+                                i18n:attributes="value" />
+                        </form>
+                    </li>
+                </ol>
+            </section>
+        </section>
+    </div>
+</metal:main>
+</body>
+</html>
\ No newline at end of file
diff --git a/Products/CMFPlone/controlpanel/browser/actions.py b/Products/CMFPlone/controlpanel/browser/actions.py
new file mode 100644
index 0000000..72b17fe
--- /dev/null
+++ b/Products/CMFPlone/controlpanel/browser/actions.py
@@ -0,0 +1,180 @@
+from plone.autoform.form import AutoExtensibleForm
+from Products.CMFCore.ActionInformation import Action
+from Products.CMFCore.interfaces import IAction, IActionCategory
+from Products.CMFCore.utils import getToolByName
+from Products.CMFPlone import PloneMessageFactory as _
+from Products.CMFPlone.interfaces import IActionSchema, INewActionSchema
+from Products.Five import BrowserView
+from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
+from z3c.form import form
+from zope.component import adapts
+from zope.event import notify
+from zope.interface import implements
+from zope.lifecycleevent import ObjectCreatedEvent
+
+
+class ActionListControlPanel(BrowserView):
+    """Control panel for the portal actions."""
+
+    template = ViewPageTemplateFile("actions.pt")
+
+    def __init__(self, context, request):
+        self.context = context
+        self.request = request
+        self.portal_actions = getToolByName(self.context, 'portal_actions')
+
+    def display(self):
+        actions = []
+        for category in self.portal_actions.objectValues():
+            if category.id == 'controlpanel':
+                continue
+            if not IActionCategory.providedBy(category):
+                continue
+            cat_infos = {
+                'id': category.id,
+                'title': category.title or category.id,
+            }
+            action_list = []
+            for action in category.objectValues():
+                if IAction.providedBy(action):
+                    action_list.append({
+                        'id': action.id,
+                        'title': action.title,
+                        'url': action.absolute_url(),
+                    })
+            cat_infos['actions'] = action_list
+            actions.append(cat_infos)
+
+        self.actions = actions
+        return self.template()
+
+    def __call__(self):
+        if self.request.get('deleteaction'):
+            action_id = self.request['deleteaction']
+            category = self.portal_actions[self.request['category']]
+            category.manage_delObjects([action_id])
+            self.request.RESPONSE.redirect('@@actions-controlpanel')
+        return self.display()
+
+
+class ActionControlPanelAdapter(object):
+    """Adapter for action form."""
+
+    adapts(IAction)
+    implements(IActionSchema)
+
+    def __init__(self, context):
+        self.context = context
+        self.current_category = self.context.getParentNode()
+
+    def get_category(self):
+        return self.current_category.id
+
+    def set_category(self, value):
+        portal_actions = getToolByName(self.context, 'portal_actions')
+        new_category = portal_actions.get(value)
+        cookie = self.current_category.manage_cutObjects(ids=[self.context.id])
+        new_category.manage_pasteObjects(cookie)
+
+    category = property(get_category, set_category)
+
+    def get_title(self):
+        return self.context.title
+
+    def set_title(self, value):
+        self.context._setPropValue('title', value)
+
+    title = property(get_title, set_title)
+
+    def get_description(self):
+        return self.context.description
+
+    def set_description(self, value):
+        self.context._setPropValue('description', value)
+
+    description = property(get_description, set_description)
+
+    def get_i18n_domain(self):
+        return self.context.i18n_domain
+
+    def set_i18n_domain(self, value):
+        self.context._setPropValue('i18n_domain', value)
+
+    i18n_domain = property(get_i18n_domain, set_i18n_domain)
+
+    def get_url_expr(self):
+        return self.context.url_expr
+
+    def set_url_expr(self, value):
+        self.context._setPropValue('url_expr', value)
+
+    url_expr = property(get_url_expr, set_url_expr)
+
+    def get_available_expr(self):
+        return self.context.available_expr
+
+    def set_available_expr(self, value):
+        self.context._setPropValue('available_expr', value)
+
+    available_expr = property(get_available_expr, set_available_expr)
+
+    def get_permissions(self):
+        return self.context.permissions
+
+    def set_permissions(self, value):
+        self.context._setPropValue('permissions', value)
+
+    permissions = property(get_permissions, set_permissions)
+
+    def get_visible(self):
+        return self.context.visible
+
+    def set_visible(self, value):
+        self.context._setPropValue('visible', value)
+
+    visible = property(get_visible, set_visible)
+
+    def get_position(self):
+        position = self.current_category.objectIds().index(self.context.id)
+        return position + 1
+
+    def set_position(self, value):
+        current_position = self.current_category.objectIds().index(
+            self.context.id)
+        all_actions = list(self.current_category._objects)
+        current_action = all_actions.pop(current_position)
+        new_position = value - 1
+        all_actions = all_actions[0:new_position] + [current_action] + \
+            all_actions[new_position:]
+        self.current_category._objects = tuple(all_actions)
+
+    position = property(get_position, set_position)
+
+
+class ActionControlPanel(AutoExtensibleForm, form.EditForm):
+    """A form to edit a portal action."""
+
+    schema = IActionSchema
+    ignoreContext = False
+    label = _(u'Action Settings')
+
+
+class NewActionControlPanel(AutoExtensibleForm, form.AddForm):
+    """A form to add a new portal action."""
+
+    schema = INewActionSchema
+    ignoreContext = True
+    label = _(u'New action')
+
+    def createAndAdd(self, data):
+        portal_actions = getToolByName(self.context, 'portal_actions')
+        category = portal_actions.get(data['category'])
+        action_id = data['id']
+        action = Action(
+            action_id,
+            title=action_id,
+            i18n_domain='plone',
+            permissions=['View'],
+        )
+        category[action_id] = action
+        notify(ObjectCreatedEvent(action))
diff --git a/Products/CMFPlone/controlpanel/browser/configure.zcml b/Products/CMFPlone/controlpanel/browser/configure.zcml
index 59b1f4a..352911a 100644
--- a/Products/CMFPlone/controlpanel/browser/configure.zcml
+++ b/Products/CMFPlone/controlpanel/browser/configure.zcml
@@ -251,4 +251,28 @@
       permission="plone.app.controlpanel.Imaging"
       />
 
+  <!-- Portal actions -->
+  <browser:page
+      name="actions-controlpanel"
+      for="Products.CMFPlone.interfaces.IPloneSiteRoot"
+      class=".actions.ActionListControlPanel"
+      permission="cmf.ManagePortal"
+      />
+
+  <adapter factory=".actions.ActionControlPanelAdapter"/>
+
+  <browser:page
+      name="action-form"
+      for="Products.CMFCore.interfaces.IAction"
+      class=".actions.ActionControlPanel"
+      permission="cmf.ManagePortal"
+      />
+
+  <browser:page
+      name="new-action"
+      for="Products.CMFPlone.interfaces.IPloneSiteRoot"
+      class=".actions.NewActionControlPanel"
+      permission="cmf.ManagePortal"
+      />
+
 </configure>
diff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_actions.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_actions.py
new file mode 100644
index 0000000..80695a5
--- /dev/null
+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_actions.py
@@ -0,0 +1,42 @@
+# -*- coding: utf-8 -*-
+from Products.CMFCore.utils import getToolByName
+from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING
+from zope.component import getMultiAdapter
+import unittest2 as unittest
+
+
+class PortalActionsIntegrationTest(unittest.TestCase):
+    """Test portal actions control panel."""
+
+    layer = PRODUCTS_CMFPLONE_INTEGRATION_TESTING
+
+    def setUp(self):  # NOQA
+        self.portal = self.layer['portal']
+        self.request = self.layer['request']
+        self.portal_actions = getToolByName(self.portal, 'portal_actions')
+
+    def test_actions_controlpanel_view(self):
+        view = getMultiAdapter((self.portal, self.portal.REQUEST),
+                               name="actions-controlpanel")
+        view = view.__of__(self.portal)
+        self.assertTrue(view())
+
+    def test_actions_in_controlpanel(self):
+        self.controlpanel = getToolByName(self.portal, "portal_controlpanel")
+        self.assertTrue('ActionSettings' in [
+            a.getAction(self)['id']
+            for a in self.controlpanel.listActions()
+        ])
+
+    def test_edit_action_controlpanel_view(self):
+        action = self.portal_actions.site_actions.sitemap
+        view = getMultiAdapter((action, self.portal.REQUEST),
+                               name="action-form")
+        view = view.__of__(self.portal)
+        self.assertTrue(view())
+
+    def test_new_action_controlpanel_view(self):
+        view = getMultiAdapter((self.portal, self.portal.REQUEST),
+                               name="new-action")
+        view = view.__of__(self.portal)
+        self.assertTrue(view())
diff --git a/Products/CMFPlone/interfaces/__init__.py b/Products/CMFPlone/interfaces/__init__.py
index 464bc41..ededdc8 100644
--- a/Products/CMFPlone/interfaces/__init__.py
+++ b/Products/CMFPlone/interfaces/__init__.py
@@ -29,6 +29,8 @@
 from controlpanel import IUserGroupsSettingsSchema
 from controlpanel import ISocialMediaSchema
 from controlpanel import IImagingSchema
+from controlpanel import IActionSchema
+from controlpanel import INewActionSchema
 from events import IConfigurationChangedEvent
 from events import IReorderedEvent
 from events import ISiteManagerCreatedEvent
diff --git a/Products/CMFPlone/interfaces/controlpanel.py b/Products/CMFPlone/interfaces/controlpanel.py
index 7d99ae1..4ac5bad 100644
--- a/Products/CMFPlone/interfaces/controlpanel.py
+++ b/Products/CMFPlone/interfaces/controlpanel.py
@@ -1524,3 +1524,69 @@ class ILinkSchema(Interface):
         description=_(u'Marks external or special protocol links with class.'),
         default=True,
         required=False)
+
+
+class IActionSchema(Interface):
+
+    category = schema.Choice(
+        title=_(u'Category'),
+        vocabulary="plone.app.vocabularies.PortalActionCategories",
+        required=True)
+
+    title = schema.TextLine(
+        title=_(u'Title'),
+        required=True)
+
+    description = schema.Text(
+        title=_(u'Description'),
+        required=False)
+
+    i18n_domain = schema.TextLine(
+        title=_(u"i18n_domain_heading", default=u'I18n domain'),
+        default=u'plone',
+        required=False)
+
+    url_expr = schema.ASCIILine(
+        title=_(u"action_url_heading", default=u'Action URL'),
+        description=_(u"action_url_description",
+            default=u'An expression producing the called URL'),
+        required=True)
+
+    available_expr = schema.ASCIILine(
+        title=_(u"action_condition_heading", default=u'Condition'),
+        description=_(u"action_condition_description",
+            default=u'A boolean expression'),
+        required=False)
+
+    permissions = schema.List(
+        title=_(u"action_permissions_heading", default=u"Permissions"),
+        required=True,
+        default=['View'],
+        missing_value=[],
+        value_type=schema.Choice(
+            vocabulary="plone.app.vocabularies.Permissions"
+        )
+    )
+
+    visible = schema.Bool(
+        title=_(u"action_visibility_heading", default=u'Visible?'),
+        default=True,
+        required=False)
+
+    position = schema.Int(
+        title=_(u"action_position_heading", default=u'Position'),
+        default=1,
+        min=1,
+        required=True)
+
+
+class INewActionSchema(Interface):
+
+    category = schema.Choice(
+        title=_(u'Category'),
+        vocabulary="plone.app.vocabularies.PortalActionCategories",
+        required=True)
+
+    id = schema.ASCIILine(
+        title=_(u'Id'),
+        required=True)
diff --git a/Products/CMFPlone/profiles/default/actions.xml b/Products/CMFPlone/profiles/default/actions.xml
index 890e783..673740e 100644
--- a/Products/CMFPlone/profiles/default/actions.xml
+++ b/Products/CMFPlone/profiles/default/actions.xml
@@ -5,7 +5,7 @@
  <action-provider name="portal_types"/>
  <action-provider name="portal_actions" />
  <object name="document_actions" meta_type="CMF Action Category">
-  <property name="title"></property>
+  <property name="title" i18n:translate="">Document actions</property>
   <object name="rss" meta_type="CMF Action" i18n:domain="plone">
    <property name="title" i18n:translate="">RSS feed</property>
    <property name="description" i18n:translate=""></property>
@@ -43,7 +43,7 @@
   </object>
  </object>
  <object name="site_actions" meta_type="CMF Action Category">
-  <property name="title"></property>
+  <property name="title" i18n:translate="">Site actions</property>
   <object name="sitemap" meta_type="CMF Action" i18n:domain="plone">
    <property name="title" i18n:translate="">Site Map</property>
    <property name="description" i18n:translate=""></property>
@@ -81,7 +81,7 @@
   </object>
  </object>
  <object name="object" meta_type="CMF Action Category">
-  <property name="title"></property>
+  <property name="title" i18n:translate="">Object actions</property>
   <object name="folderContents" meta_type="CMF Action" i18n:domain="plone">
    <property name="title" i18n:translate="">Contents</property>
    <property name="description" i18n:translate=""></property>
@@ -143,7 +143,7 @@
   </object>
  </object>
  <object name="object_buttons" meta_type="CMF Action Category">
-  <property name="title"></property>
+  <property name="title" i18n:translate="">Object buttons</property>
   <object name="cut" meta_type="CMF Action" i18n:domain="plone">
    <property name="title" i18n:translate="">Cut</property>
    <property name="description" i18n:translate=""></property>
@@ -207,7 +207,7 @@
   </object>
  </object>
  <object name="portal_tabs" meta_type="CMF Action Category">
-  <property name="title"></property>
+  <property name="title" i18n:translate="">Portal tabs</property>
   <object name="index_html" meta_type="CMF Action" i18n:domain="plone">
    <property name="title" i18n:translate="">Home</property>
    <property name="description" i18n:translate=""></property>
@@ -222,7 +222,7 @@
   </object>
  </object>
  <object name="user" meta_type="CMF Action Category">
-  <property name="title"></property>
+  <property name="title" i18n:translate="">User actions</property>
   <object name="preferences" meta_type="CMF Action" i18n:domain="plone">
    <property name="title" i18n:translate="">Preferences</property>
    <property name="description" i18n:translate=""></property>
diff --git a/Products/CMFPlone/profiles/default/controlpanel.xml b/Products/CMFPlone/profiles/default/controlpanel.xml
index c8f65f4..3f6b282 100644
--- a/Products/CMFPlone/profiles/default/controlpanel.xml
+++ b/Products/CMFPlone/profiles/default/controlpanel.xml
@@ -181,4 +181,10 @@
     i18n:attributes="title">
   <permission>Plone Site Setup: Imaging</permission>
  </configlet>
+ <configlet title="Actions" action_id="ActionSettings" appId="Plone"
+    category="plone-general" condition_expr=""
+    url_expr="string:${portal_url}/@@actions-controlpanel" visible="True"
+    i18n:attributes="title">
+  <permission>Manage portal</permission>
+ </configlet>
 </object>
diff --git a/Products/CMFPlone/tests/robot/test_controlpanel_actions.robot b/Products/CMFPlone/tests/robot/test_controlpanel_actions.robot
new file mode 100644
index 0000000..1a0208d
--- /dev/null
+++ b/Products/CMFPlone/tests/robot/test_controlpanel_actions.robot
@@ -0,0 +1,104 @@
+*** Settings ***
+
+Resource  plone/app/robotframework/keywords.robot
+Resource  plone/app/robotframework/saucelabs.robot
+Resource  plone/app/robotframework/selenium.robot
+
+Library  Remote  ${PLONE_URL}/RobotRemote
+
+Resource  keywords.robot
+
+Test Setup  Open SauceLabs test browser
+Test Teardown  Run keywords  Report test status  Close all browsers
+
+
+*** Test Cases ***************************************************************
+
+Scenario: Modify an existing action in Actions Control Panel
+  Given a logged-in administrator
+    and the actions control panel
+   When I modify an action title
+   Then anonymous users can see the new action title
+
+Scenario: Reorder in Actions Control Panel
+  Given a logged-in administrator
+    and the actions control panel
+   When I change the actions order
+   Then anonymous users can see the actions new ordering
+
+Scenario: Create a new action in Actions Control Panel
+  Given a logged-in administrator
+    and the actions control panel
+   When I add a new action
+   Then logged-in users can see the new action
+
+Scenario: Delete an action in Actions Control Panel
+  Given a logged-in administrator
+    and the actions control panel
+   When I delete an action
+   Then anonymous users cannot see the action anymore
+
+*** Keywords *****************************************************************
+
+# --- GIVEN ------------------------------------------------------------------
+
+a logged-in administrator
+  Enable autologin as   Manager
+
+the actions control panel
+  Go to  ${PLONE_URL}/@@actions-controlpanel
+
+# --- WHEN -------------------------------------------------------------------
+
+I modify an action title
+  Click Link    css=section:nth-child(3) li:first-child a
+  Wait until page contains  Action Settings
+  Input Text for sure  form.widgets.title  A new site map
+  Click Element  css=.pattern-modal-buttons > input
+
+I change the actions order
+  Click Link    css=section:nth-child(3) li:first-child a
+  Wait until page contains  Action Settings
+  Input Text for sure  form.widgets.position  3
+  Click Element  css=.pattern-modal-buttons > input
+
+I add a new action
+  Click Link  Add new action
+  Wait until page contains  New action
+  Select From List By Label   form.widgets.category:list   User actions
+  Input Text for sure  form.widgets.id  favorites
+  Click Element  css=.pattern-modal-buttons > input
+  Wait until page contains  favorites
+  Click Link    css=section:nth-child(7) li:last-child a
+  Wait until page contains  Action Settings
+  Input Text for sure  form.widgets.title  My favorites
+  Input Text for sure  form.widgets.url_expr  string:\${globals_view/navigationRootUrl}/favorites
+  Click Element  css=.pattern-modal-buttons > input
+
+I delete an action
+  Click Button    css=section:nth-child(3) li:first-child input[type=submit]
+  Confirm Action
+
+# --- THEN -------------------------------------------------------------------
+
+anonymous users can see the new action title
+  Disable autologin
+  Go to  ${PLONE_URL}
+  Page Should Contain  A new site map
+
+anonymous users can see the actions new ordering
+  Disable autologin
+  Go to  ${PLONE_URL}
+  Page Should Contain Element   xpath=//section[@role='menu']/section/ul/li[1]/a/span[contains(text(), 'Accessibility')]
+  Page Should Contain Element   xpath=//section[@role='menu']/section/ul/li[3]/a/span[contains(text(), 'Site Map')]
+
+logged-in users can see the new action
+  Disable autologin
+  Enable autologin as   Contributor
+  Go to  ${PLONE_URL}
+  Page Should Contain  My favorites
+
+anonymous users cannot see the action anymore
+  Disable autologin
+  Go to  ${PLONE_URL}
+  Page Should Not Contain  Site map
\ No newline at end of file


