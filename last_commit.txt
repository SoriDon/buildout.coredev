Repository: mockup


Branch: refs/heads/master
Date: 2016-02-17T08:29:58-06:00
Author: nathan.vangheem () <nathan.vangheem@wildcardcorp.com>
Commit: https://github.com/plone/mockup/commit/8a6ff5caf35b212f2c4d9a72e1fbeb1c051ce320

Fix resource registry not allowing to go into development mode when
  bundle is selected

Files changed:
M CHANGES.rst
M mockup/patterns/resourceregistry/js/registry.js

diff --git a/CHANGES.rst b/CHANGES.rst
index 41e2462..0e63db3 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -6,6 +6,10 @@ Changelog
 
 New:
 
+- Fix resource registry not allowing to go into development mode when
+  bundle is selected
+  [vangheem]
+
 - Add rootPath suppport to relatedItems, to support navigation roots.
   [alecm]
 
diff --git a/mockup/patterns/resourceregistry/js/registry.js b/mockup/patterns/resourceregistry/js/registry.js
index c88568e..268d010 100644
--- a/mockup/patterns/resourceregistry/js/registry.js
+++ b/mockup/patterns/resourceregistry/js/registry.js
@@ -69,7 +69,7 @@ define([
       view: fields.ResourceSortableListFieldView
     },{
       name: 'init',
-      title: _t('Init'), 
+      title: _t('Init'),
       description: _t('Init instruction for requirejs shim')
     }, {
       name: 'deps',
@@ -238,12 +238,14 @@ define([
       this.options.data.develop_javascript = !this.options.data.develop_javascript;
       this.options.registryView.dirty = true;
       this.options.registryView.render();
+      this.render();
     },
     developCSSClicked: function(e){
       e.preventDefault();
       this.options.data.develop_css = !this.options.data.develop_css;
       this.options.registryView.dirty = true;
       this.options.registryView.render();
+      this.render();
     },
     afterRender: function(){
       RegistryResourceListItem.prototype.afterRender.apply(this);
@@ -281,7 +283,7 @@ define([
         this.options.registryView.render();
       }
     },
-    
+
     buildClicked: function(e){
       e.preventDefault();
       var self = this;
@@ -469,8 +471,12 @@ define([
       };
       _.each(bundles, function(resourceName){
         var item;
-        if(self.activeResource && self.activeResource.type === 'bundle' && self.activeResource.item.options.name === resourceName){
-          item = self.activeResource.item;
+        if(self.activeResource && self.activeResource.type === 'bundle' &&
+           self.activeResource.item.options.name === resourceName){
+          item = new RegistryBundleListItem({
+            data: self.activeResource.item.data,
+            name: resourceName,
+            registryView: self});
         }else{
           item = new RegistryBundleListItem({
             data: data.bundles[resourceName],
@@ -483,8 +489,12 @@ define([
       var resources = _.sortBy(_.keys(data.resources), function(v){ return v.toLowerCase(); });
       _.each(resources, function(resourceName){
         var item;
-        if(self.activeResource && self.activeResource.type === 'resource' && self.activeResource.item.options.name === resourceName){
-          item = self.activeResource.item;
+        if(self.activeResource && self.activeResource.type === 'resource' &&
+           self.activeResource.item.options.name === resourceName){
+          item = new RegistryResourceListItem({
+            data: self.activeResource.item.data,
+            name: resourceName,
+            registryView: self});
         } else {
           item = new RegistryResourceListItem({
             data: data.resources[resourceName],


Repository: mockup


Branch: refs/heads/master
Date: 2016-02-19T22:14:56+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/mockup/commit/326d5c1a42cb8a43d5b336d678d24b06bf6dcbfc

Merge pull request #634 from plone/fix-resource-registry

Fix resource registry not allowing to go into development mode when  bundle is selected

Files changed:
M CHANGES.rst
M mockup/patterns/resourceregistry/js/registry.js

diff --git a/CHANGES.rst b/CHANGES.rst
index 41e12ca..a6f5531 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -6,6 +6,10 @@ Changelog
 
 New:
 
+- Fix resource registry not allowing to go into development mode when
+  bundle is selected
+  [vangheem]
+
 - Add rootPath suppport to relatedItems, to support navigation roots.
   [alecm]
 
diff --git a/mockup/patterns/resourceregistry/js/registry.js b/mockup/patterns/resourceregistry/js/registry.js
index c88568e..268d010 100644
--- a/mockup/patterns/resourceregistry/js/registry.js
+++ b/mockup/patterns/resourceregistry/js/registry.js
@@ -69,7 +69,7 @@ define([
       view: fields.ResourceSortableListFieldView
     },{
       name: 'init',
-      title: _t('Init'), 
+      title: _t('Init'),
       description: _t('Init instruction for requirejs shim')
     }, {
       name: 'deps',
@@ -238,12 +238,14 @@ define([
       this.options.data.develop_javascript = !this.options.data.develop_javascript;
       this.options.registryView.dirty = true;
       this.options.registryView.render();
+      this.render();
     },
     developCSSClicked: function(e){
       e.preventDefault();
       this.options.data.develop_css = !this.options.data.develop_css;
       this.options.registryView.dirty = true;
       this.options.registryView.render();
+      this.render();
     },
     afterRender: function(){
       RegistryResourceListItem.prototype.afterRender.apply(this);
@@ -281,7 +283,7 @@ define([
         this.options.registryView.render();
       }
     },
-    
+
     buildClicked: function(e){
       e.preventDefault();
       var self = this;
@@ -469,8 +471,12 @@ define([
       };
       _.each(bundles, function(resourceName){
         var item;
-        if(self.activeResource && self.activeResource.type === 'bundle' && self.activeResource.item.options.name === resourceName){
-          item = self.activeResource.item;
+        if(self.activeResource && self.activeResource.type === 'bundle' &&
+           self.activeResource.item.options.name === resourceName){
+          item = new RegistryBundleListItem({
+            data: self.activeResource.item.data,
+            name: resourceName,
+            registryView: self});
         }else{
           item = new RegistryBundleListItem({
             data: data.bundles[resourceName],
@@ -483,8 +489,12 @@ define([
       var resources = _.sortBy(_.keys(data.resources), function(v){ return v.toLowerCase(); });
       _.each(resources, function(resourceName){
         var item;
-        if(self.activeResource && self.activeResource.type === 'resource' && self.activeResource.item.options.name === resourceName){
-          item = self.activeResource.item;
+        if(self.activeResource && self.activeResource.type === 'resource' &&
+           self.activeResource.item.options.name === resourceName){
+          item = new RegistryResourceListItem({
+            data: self.activeResource.item.data,
+            name: resourceName,
+            registryView: self});
         } else {
           item = new RegistryResourceListItem({
             data: data.resources[resourceName],


