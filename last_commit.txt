Repository: plone.restapi


Branch: refs/heads/master
Date: 2019-03-19T16:04:33+01:00
Author: Andreas JungÂ (zopyx) <info@zopyx.com>
Commit: https://github.com/plone/plone.restapi/commit/1e864744f0ba9392e53d0bec217bd8f9bd27911a

Python 3 fix for #676

Files changed:
M src/plone/restapi/services/workflow/transition.py

b'diff --git a/src/plone/restapi/services/workflow/transition.py b/src/plone/restapi/services/workflow/transition.py\nindex fc09edb2..945122c2 100644\n--- a/src/plone/restapi/services/workflow/transition.py\n+++ b/src/plone/restapi/services/workflow/transition.py\n@@ -1,4 +1,7 @@\n # -*- coding: utf-8 -*-\n+\n+import six\n+\n from plone.restapi.deserializer import json_body\n from plone.restapi.interfaces import IDeserializeFromJson\n from plone.restapi.serializer.converters import json_compatible\n@@ -78,10 +81,16 @@ def reply(self):\n \n         history = self.wftool.getInfoFor(self.context, "review_history")\n         action = history[-1]\n-        action[\'title\'] = self.context.translate(\n-            self.wftool.getTitleForStateOnType(\n-                action[\'review_state\'],\n-                self.context.portal_type).decode(\'utf8\'))\n+        if six.PY2:\n+            action[\'title\'] = self.context.translate(\n+                self.wftool.getTitleForStateOnType(\n+                    action[\'review_state\'],\n+                    self.context.portal_type).decode(\'utf8\'))\n+        else:\n+            action[\'title\'] = self.context.translate(\n+                self.wftool.getTitleForStateOnType(\n+                    action[\'review_state\'],\n+                    self.context.portal_type))\n \n         return json_compatible(action)\n \n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2019-03-19T16:06:57+01:00
Author: Andreas JungÂ (zopyx) <info@zopyx.com>
Commit: https://github.com/plone/plone.restapi/commit/ea1df438e91ec7f91ce67b435e88f819745dae16

added

Files changed:
A news/676.bugfix

b'diff --git a/news/676.bugfix b/news/676.bugfix\nnew file mode 100644\nindex 00000000..3291d749\n--- /dev/null\n+++ b/news/676.bugfix\n@@ -0,0 +1,2 @@\n+Fixed Python 3 incompatiblity with workflow service (#676)\n+[ajung]\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2019-03-20T11:05:17+01:00
Author: Andreas JungÂ (zopyx) <info@zopyx.com>
Commit: https://github.com/plone/plone.restapi/commit/7ce922cf4ea8014debcf711849c302d1c9258369

Added Python 2/3 specific setup code for #676

Files changed:
M src/plone/restapi/testing.py

b"diff --git a/src/plone/restapi/testing.py b/src/plone/restapi/testing.py\nindex 160526cb..54564fba 100644\n--- a/src/plone/restapi/testing.py\n+++ b/src/plone/restapi/testing.py\n@@ -1,6 +1,7 @@\n # -*- coding: utf-8 -*-\n # pylint: disable=E1002\n # E1002: Use of super on an old style class\n+\n from plone import api\n from plone.app.contenttypes.testing import PLONE_APP_CONTENTTYPES_FIXTURE\n from plone.app.i18n.locales.interfaces import IContentLanguages\n@@ -35,6 +36,7 @@\n import pkg_resources\n import re\n import requests\n+import six\n \n \n PLONE_VERSION = pkg_resources.parse_version(api.env.plone_version())\n@@ -186,7 +188,10 @@ def setUpPloneSite(self, portal):\n         quickInstallProduct(portal, 'collective.MockMailHost')\n         applyProfile(portal, 'collective.MockMailHost:default')\n         states = portal.portal_workflow['simple_publication_workflow'].states\n-        states['published'].title = u'Published with accent \xc3\xa9'.encode('utf8')\n+        if six.PY2: #676\n+            states['published'].title = u'Published with accent \xc3\xa9'.encode('utf8')  # noqa: E501\n+        else:\n+            states['published'].title = u'Published with accent \xc3\xa9'  # noqa: E501\n \n \n PLONE_RESTAPI_DX_FIXTURE = PloneRestApiDXLayer()\n@@ -240,7 +245,10 @@ def setUpPloneSite(self, portal):\n         set_available_languages()\n         enable_request_language_negotiation(portal)\n         states = portal.portal_workflow['simple_publication_workflow'].states\n-        states['published'].title = u'Published with accent \xc3\xa9'.encode('utf8')\n+        if six.PY2: #676\n+            states['published'].title = u'Published with accent \xc3\xa9'.encode('utf8')  # noqa: E501\n+        else:\n+            states['published'].title = u'Published with accent \xc3\xa9'  # noqa: E501\n \n \n PLONE_RESTAPI_DX_PAM_FIXTURE = PloneRestApiDXPAMLayer()\n@@ -301,7 +309,11 @@ def setUpPloneSite(self, portal):\n             enable_request_language_negotiation(portal)\n             portal.portal_workflow.setDefaultChain('simple_publication_workflow')  # noqa: E501\n             states = portal.portal_workflow['simple_publication_workflow'].states  # noqa: E501\n-            states['published'].title = u'Published with accent \xc3\xa9'.encode('utf8')  # noqa: E501\n+            if six.PY2: #676\n+                states['published'].title = u'Published with accent \xc3\xa9'.encode('utf8')  # noqa: E501\n+            else:\n+                states['published'].title = u'Published with accent \xc3\xa9'  # noqa: E501\n+\n \n     PLONE_RESTAPI_AT_FIXTURE = PloneRestApiATLayer()\n     PLONE_RESTAPI_AT_INTEGRATION_TESTING = IntegrationTesting(\n"

Repository: plone.restapi


Branch: refs/heads/master
Date: 2019-03-21T08:40:00+01:00
Author: Andreas JungÂ (zopyx) <info@zopyx.com>
Commit: https://github.com/plone/plone.restapi/commit/28998aa847c3b35d8e413eebf023a406632eca77

made code-analysis happy :-|

Files changed:
M src/plone/restapi/testing.py

b"diff --git a/src/plone/restapi/testing.py b/src/plone/restapi/testing.py\nindex 54564fba..d2f984d5 100644\n--- a/src/plone/restapi/testing.py\n+++ b/src/plone/restapi/testing.py\n@@ -188,7 +188,7 @@ def setUpPloneSite(self, portal):\n         quickInstallProduct(portal, 'collective.MockMailHost')\n         applyProfile(portal, 'collective.MockMailHost:default')\n         states = portal.portal_workflow['simple_publication_workflow'].states\n-        if six.PY2: #676\n+        if six.PY2:  # issue 676\n             states['published'].title = u'Published with accent \xc3\xa9'.encode('utf8')  # noqa: E501\n         else:\n             states['published'].title = u'Published with accent \xc3\xa9'  # noqa: E501\n@@ -245,7 +245,7 @@ def setUpPloneSite(self, portal):\n         set_available_languages()\n         enable_request_language_negotiation(portal)\n         states = portal.portal_workflow['simple_publication_workflow'].states\n-        if six.PY2: #676\n+        if six.PY2:  # issue 676\n             states['published'].title = u'Published with accent \xc3\xa9'.encode('utf8')  # noqa: E501\n         else:\n             states['published'].title = u'Published with accent \xc3\xa9'  # noqa: E501\n@@ -309,12 +309,11 @@ def setUpPloneSite(self, portal):\n             enable_request_language_negotiation(portal)\n             portal.portal_workflow.setDefaultChain('simple_publication_workflow')  # noqa: E501\n             states = portal.portal_workflow['simple_publication_workflow'].states  # noqa: E501\n-            if six.PY2: #676\n+            if six.PY2:  # issue 676\n                 states['published'].title = u'Published with accent \xc3\xa9'.encode('utf8')  # noqa: E501\n             else:\n                 states['published'].title = u'Published with accent \xc3\xa9'  # noqa: E501\n \n-\n     PLONE_RESTAPI_AT_FIXTURE = PloneRestApiATLayer()\n     PLONE_RESTAPI_AT_INTEGRATION_TESTING = IntegrationTesting(\n         bases=(PLONE_RESTAPI_AT_FIXTURE,),\n"

Repository: plone.restapi


Branch: refs/heads/master
Date: 2019-03-21T10:37:30+01:00
Author: Timo Stollenwerk (tisto) <tisto@users.noreply.github.com>
Commit: https://github.com/plone/plone.restapi/commit/9b4892f8c76de493def50e7e1d90efe168153009

Merge pull request #704 from zopyx/master

Fix for #676 in workflow service.

Files changed:
A news/676.bugfix
M src/plone/restapi/services/workflow/transition.py
M src/plone/restapi/testing.py

b'diff --git a/news/676.bugfix b/news/676.bugfix\nnew file mode 100644\nindex 00000000..3291d749\n--- /dev/null\n+++ b/news/676.bugfix\n@@ -0,0 +1,2 @@\n+Fixed Python 3 incompatiblity with workflow service (#676)\n+[ajung]\ndiff --git a/src/plone/restapi/services/workflow/transition.py b/src/plone/restapi/services/workflow/transition.py\nindex fc09edb2..945122c2 100644\n--- a/src/plone/restapi/services/workflow/transition.py\n+++ b/src/plone/restapi/services/workflow/transition.py\n@@ -1,4 +1,7 @@\n # -*- coding: utf-8 -*-\n+\n+import six\n+\n from plone.restapi.deserializer import json_body\n from plone.restapi.interfaces import IDeserializeFromJson\n from plone.restapi.serializer.converters import json_compatible\n@@ -78,10 +81,16 @@ def reply(self):\n \n         history = self.wftool.getInfoFor(self.context, "review_history")\n         action = history[-1]\n-        action[\'title\'] = self.context.translate(\n-            self.wftool.getTitleForStateOnType(\n-                action[\'review_state\'],\n-                self.context.portal_type).decode(\'utf8\'))\n+        if six.PY2:\n+            action[\'title\'] = self.context.translate(\n+                self.wftool.getTitleForStateOnType(\n+                    action[\'review_state\'],\n+                    self.context.portal_type).decode(\'utf8\'))\n+        else:\n+            action[\'title\'] = self.context.translate(\n+                self.wftool.getTitleForStateOnType(\n+                    action[\'review_state\'],\n+                    self.context.portal_type))\n \n         return json_compatible(action)\n \ndiff --git a/src/plone/restapi/testing.py b/src/plone/restapi/testing.py\nindex 160526cb..d2f984d5 100644\n--- a/src/plone/restapi/testing.py\n+++ b/src/plone/restapi/testing.py\n@@ -1,6 +1,7 @@\n # -*- coding: utf-8 -*-\n # pylint: disable=E1002\n # E1002: Use of super on an old style class\n+\n from plone import api\n from plone.app.contenttypes.testing import PLONE_APP_CONTENTTYPES_FIXTURE\n from plone.app.i18n.locales.interfaces import IContentLanguages\n@@ -35,6 +36,7 @@\n import pkg_resources\n import re\n import requests\n+import six\n \n \n PLONE_VERSION = pkg_resources.parse_version(api.env.plone_version())\n@@ -186,7 +188,10 @@ def setUpPloneSite(self, portal):\n         quickInstallProduct(portal, \'collective.MockMailHost\')\n         applyProfile(portal, \'collective.MockMailHost:default\')\n         states = portal.portal_workflow[\'simple_publication_workflow\'].states\n-        states[\'published\'].title = u\'Published with accent \xc3\xa9\'.encode(\'utf8\')\n+        if six.PY2:  # issue 676\n+            states[\'published\'].title = u\'Published with accent \xc3\xa9\'.encode(\'utf8\')  # noqa: E501\n+        else:\n+            states[\'published\'].title = u\'Published with accent \xc3\xa9\'  # noqa: E501\n \n \n PLONE_RESTAPI_DX_FIXTURE = PloneRestApiDXLayer()\n@@ -240,7 +245,10 @@ def setUpPloneSite(self, portal):\n         set_available_languages()\n         enable_request_language_negotiation(portal)\n         states = portal.portal_workflow[\'simple_publication_workflow\'].states\n-        states[\'published\'].title = u\'Published with accent \xc3\xa9\'.encode(\'utf8\')\n+        if six.PY2:  # issue 676\n+            states[\'published\'].title = u\'Published with accent \xc3\xa9\'.encode(\'utf8\')  # noqa: E501\n+        else:\n+            states[\'published\'].title = u\'Published with accent \xc3\xa9\'  # noqa: E501\n \n \n PLONE_RESTAPI_DX_PAM_FIXTURE = PloneRestApiDXPAMLayer()\n@@ -301,7 +309,10 @@ def setUpPloneSite(self, portal):\n             enable_request_language_negotiation(portal)\n             portal.portal_workflow.setDefaultChain(\'simple_publication_workflow\')  # noqa: E501\n             states = portal.portal_workflow[\'simple_publication_workflow\'].states  # noqa: E501\n-            states[\'published\'].title = u\'Published with accent \xc3\xa9\'.encode(\'utf8\')  # noqa: E501\n+            if six.PY2:  # issue 676\n+                states[\'published\'].title = u\'Published with accent \xc3\xa9\'.encode(\'utf8\')  # noqa: E501\n+            else:\n+                states[\'published\'].title = u\'Published with accent \xc3\xa9\'  # noqa: E501\n \n     PLONE_RESTAPI_AT_FIXTURE = PloneRestApiATLayer()\n     PLONE_RESTAPI_AT_INTEGRATION_TESTING = IntegrationTesting(\n'

