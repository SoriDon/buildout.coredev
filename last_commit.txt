Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2019-01-24T11:51:53+01:00
Author: Manuel Reinhardt (reinhardt) <reinhardt@syslab.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/3ccb72543cb063a7fcf721d4ec762870b7b1b9bb

Let folderListing know about the orphan parameter.
Fixes folder view when there is one item more than the batch size.
See https://github.com/plone/plone.app.contenttypes/issues/500

Files changed:
M CHANGES.rst
M plone/app/contenttypes/browser/folder.py
M plone/app/contenttypes/tests/test_folder.py

b"diff --git a/CHANGES.rst b/CHANGES.rst\nindex 8fa02b7f..eedd7c63 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -17,6 +17,9 @@ Bug fixes:\n - Fixed sorting error after Changing the base class for existing objects.\n   see `issue <https://github.com/plone/plone.app.contenttypes/issues/487>`\n   [jianaijun]\n+- Fix for folder view when there is one item more than the batch size.\n+  see `issue <https://github.com/plone/plone.app.contenttypes/issues/500>`\n+  [reinhardt]\n \n \n 2.0.0 (2018-10-30)\ndiff --git a/plone/app/contenttypes/browser/folder.py b/plone/app/contenttypes/browser/folder.py\nindex 3e1f7541..9b77f6b7 100644\n--- a/plone/app/contenttypes/browser/folder.py\n+++ b/plone/app/contenttypes/browser/folder.py\n@@ -89,6 +89,7 @@ def results(self, **kwargs):\n         kwargs.setdefault('batch', True)\n         kwargs.setdefault('b_size', self.b_size)\n         kwargs.setdefault('b_start', self.b_start)\n+        kwargs.setdefault('orphan', 1)\n \n         listing = aq_inner(self.context).restrictedTraverse(\n             '@@folderListing', None)\ndiff --git a/plone/app/contenttypes/tests/test_folder.py b/plone/app/contenttypes/tests/test_folder.py\nindex f8566534..a883bead 100644\n--- a/plone/app/contenttypes/tests/test_folder.py\n+++ b/plone/app/contenttypes/tests/test_folder.py\n@@ -98,6 +98,33 @@ def test_result_filtering(self):\n         )\n         self.assertEqual(len(res), 1)\n \n+    def test_result_batching(self):\n+        for idx in range(5):\n+            self.portal.invokeFactory('Document', 'document{}'.format(idx))\n+        request = self.request.clone()\n+        request.form['b_size'] = 5\n+        view = FolderView(self.portal, request)\n+\n+        batch = view.batch()\n+        self.assertEqual(batch.length, 5)\n+        self.assertEqual(len([item for item in batch]), 5)\n+        self.assertFalse(batch.has_next)\n+\n+        self.portal.invokeFactory('Document', 'document5')\n+\n+        batch = view.batch()\n+        self.assertEqual(batch.length, 6)\n+        self.assertEqual(len([item for item in batch]), 6)\n+        self.assertFalse(batch.has_next)\n+\n+        self.portal.invokeFactory('Document', 'document6')\n+\n+        batch = view.batch()\n+        self.assertEqual(batch.length, 5)\n+        self.assertEqual(len([item for item in batch]), 5)\n+        self.assertTrue(batch.has_next)\n+        self.assertEqual(batch.next_item_count, 2)\n+\n \n class FolderFunctionalTest(unittest.TestCase):\n \n"

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2019-01-24T14:42:01+01:00
Author: Alessandro Pisa (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/89c94e65654e60310945359a3ce2bc5ff1af5e3b

Merge pull request #501 from plone/500-folder-view-fix-orphan

Let folderListing know about the orphan parameter

Files changed:
M CHANGES.rst
M plone/app/contenttypes/browser/folder.py
M plone/app/contenttypes/tests/test_folder.py

b"diff --git a/CHANGES.rst b/CHANGES.rst\nindex 8fa02b7f..eedd7c63 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -17,6 +17,9 @@ Bug fixes:\n - Fixed sorting error after Changing the base class for existing objects.\n   see `issue <https://github.com/plone/plone.app.contenttypes/issues/487>`\n   [jianaijun]\n+- Fix for folder view when there is one item more than the batch size.\n+  see `issue <https://github.com/plone/plone.app.contenttypes/issues/500>`\n+  [reinhardt]\n \n \n 2.0.0 (2018-10-30)\ndiff --git a/plone/app/contenttypes/browser/folder.py b/plone/app/contenttypes/browser/folder.py\nindex 3e1f7541..9b77f6b7 100644\n--- a/plone/app/contenttypes/browser/folder.py\n+++ b/plone/app/contenttypes/browser/folder.py\n@@ -89,6 +89,7 @@ def results(self, **kwargs):\n         kwargs.setdefault('batch', True)\n         kwargs.setdefault('b_size', self.b_size)\n         kwargs.setdefault('b_start', self.b_start)\n+        kwargs.setdefault('orphan', 1)\n \n         listing = aq_inner(self.context).restrictedTraverse(\n             '@@folderListing', None)\ndiff --git a/plone/app/contenttypes/tests/test_folder.py b/plone/app/contenttypes/tests/test_folder.py\nindex f8566534..a883bead 100644\n--- a/plone/app/contenttypes/tests/test_folder.py\n+++ b/plone/app/contenttypes/tests/test_folder.py\n@@ -98,6 +98,33 @@ def test_result_filtering(self):\n         )\n         self.assertEqual(len(res), 1)\n \n+    def test_result_batching(self):\n+        for idx in range(5):\n+            self.portal.invokeFactory('Document', 'document{}'.format(idx))\n+        request = self.request.clone()\n+        request.form['b_size'] = 5\n+        view = FolderView(self.portal, request)\n+\n+        batch = view.batch()\n+        self.assertEqual(batch.length, 5)\n+        self.assertEqual(len([item for item in batch]), 5)\n+        self.assertFalse(batch.has_next)\n+\n+        self.portal.invokeFactory('Document', 'document5')\n+\n+        batch = view.batch()\n+        self.assertEqual(batch.length, 6)\n+        self.assertEqual(len([item for item in batch]), 6)\n+        self.assertFalse(batch.has_next)\n+\n+        self.portal.invokeFactory('Document', 'document6')\n+\n+        batch = view.batch()\n+        self.assertEqual(batch.length, 5)\n+        self.assertEqual(len([item for item in batch]), 5)\n+        self.assertTrue(batch.has_next)\n+        self.assertEqual(batch.next_item_count, 2)\n+\n \n class FolderFunctionalTest(unittest.TestCase):\n \n"

