Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2023-04-19T10:35:29+02:00
Author: Katja Süss (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.app.dexterity/commit/d8cfc10bbeff8c3a3181c8ef465e0de3cbd0db0f

Content types control panel: Show behavior name and interface.

Files changed:
A news/363.feature
M plone/app/dexterity/browser/behaviors.pt
M plone/app/dexterity/browser/behaviors.py

b'diff --git a/news/363.feature b/news/363.feature\nnew file mode 100644\nindex 00000000..fe7697f0\n--- /dev/null\n+++ b/news/363.feature\n@@ -0,0 +1 @@\n+Content types control panel: Show behavior name and interface. @ksuess, @stevepiercy\n\\ No newline at end of file\ndiff --git a/plone/app/dexterity/browser/behaviors.pt b/plone/app/dexterity/browser/behaviors.pt\nindex 52bfb256..5d40c010 100644\n--- a/plone/app/dexterity/browser/behaviors.pt\n+++ b/plone/app/dexterity/browser/behaviors.pt\n@@ -4,6 +4,21 @@\n        tal:content="view/status"\n   ></div>\n \n+  <table class="table" >\n+    <thead>\n+      <tr>\n+        <th class="w-25">\n+        </th>\n+        <th class="w-25">\n+          <span i18n:translate="label_name_of_behavior">Name of behavior</span>\n+        </th>\n+        <th>\n+          <span i18n:translate="label_interface_of_behavior">Interface of behavior</span>\n+        </th>\n+      </tr>\n+    </thead>\n+  </table>\n+\n   <form action="."\n         method="post"\n         tal:attributes="\n@@ -12,47 +27,75 @@\n         "\n   >\n     <tal:widgets repeat="widget view/widgets/values|nothing">\n-\n-      <div class="field"\n-           tal:define="\n-             error widget/error;\n-             hidden python:widget.mode == \'hidden\';\n-           "\n-           tal:attributes="\n-             class python:\'mb-3 field\' + (error and \'alert alert-warning\' or \'\');\n-           "\n+      <tal:define \n+        tal:define="\n+        behavior_name python: widget.field.__name__;\n+        behavior_reg python: view.behaviors[behavior_name];\n+        "  \n       >\n-\n-        <span class="fieldRequired"\n-              title="Required"\n-              tal:condition="python:widget.required and not hidden"\n-              i18n:attributes="title title_required;"\n-              i18n:translate="label_required"\n+        <div class="field"\n+            tal:define="\n+              error widget/error;\n+              hidden python:widget.mode == \'hidden\';\n+            "\n+            tal:attributes="\n+              class python:\'mb-3 field\' + (error and \'alert alert-warning\' or \'\');\n+            "\n         >\n-      (Required)\n-        </span>\n \n-        <div tal:condition="error"\n-             tal:content="structure error/render"\n-        >\n-      Error\n-        </div>\n+          <span class="fieldRequired"\n+                title="Required"\n+                tal:condition="python:widget.required and not hidden"\n+                i18n:attributes="title title_required;"\n+                i18n:translate="label_required"\n+          >\n+        (Required)\n+          </span>\n+\n+          <div tal:condition="error"\n+              tal:content="structure error/render"\n+          >\n+        Error\n+          </div>\n \n-        <div class="widget">\n-          <input type="text"\n-                 tal:replace="structure widget/render"\n-          />\n-          <div class="form-text"\n-               tal:define="\n-                 description widget/field/description;\n-               "\n-               tal:condition="python:description and not hidden"\n-               tal:content="description"\n-               i18n:translate=""\n-          >field description\n+          <div class="widget">\n+            <table class="table table-borderless table-sm" >\n+              <tbody>\n+                <tr>\n+                  <td class="w-25">\n+                    <input\n+                      type="text"\n+                      tal:replace="structure widget/render"\n+                    />\n+                  </td>\n+                  <td\n+                    class="w-25"\n+                    tal:content="behavior_name"\n+                  >name of behavior</td>\n+                  <td\n+                    tal:content="python:behavior_reg.interface.__identifier__"\n+                  >interface of behavior</td>\n+                </tr>\n+                <tr\n+                  tal:define="description widget/field/description;"\n+                  tal:condition="python:description and not hidden"\n+                  >\n+                  <td colspan="3">\n+                    <span\n+                      class="form-text"\n+                      tal:content="description"\n+                      i18n:translate=""\n+                    >field description\n+                    </span>\n+                  </td>\n+                </tr>\n+              </tbody>\n+            </table>\n           </div>\n         </div>\n-      </div>\n+      \n+      </tal:define>\n+\n \n     </tal:widgets>\n     <metal:actions metal:use-macro="context/@@ploneform-macros/actions" />\ndiff --git a/plone/app/dexterity/browser/behaviors.py b/plone/app/dexterity/browser/behaviors.py\nindex 65bc3abd..76286e0d 100644\n--- a/plone/app/dexterity/browser/behaviors.py\n+++ b/plone/app/dexterity/browser/behaviors.py\n@@ -92,6 +92,22 @@ class TypeBehaviorsForm(form.EditForm):\n     def getContent(self):\n         return BehaviorConfigurationAdapter(self.context)\n \n+    @property\n+    def behaviors(self):\n+        """Return dict of (behavior name, reg)"""\n+        counts = Counter([id(reg) for name, reg in getUtilitiesFor(IBehavior)])\n+        behavs = {}\n+        for name, reg in getUtilitiesFor(IBehavior):\n+            if name in TTW_BEHAVIOR_BLACKLIST:\n+                # skip blacklisted\n+                continue\n+            with_name = counts[id(reg)] > 1\n+            if with_name and reg.name != name:\n+                continue\n+            fname = safe_text(reg.name if reg.name else name)\n+            behavs[fname] = reg\n+        return behavs\n+\n     @property\n     def fields(self):\n         counts = Counter([id(reg) for name, reg in getUtilitiesFor(IBehavior)])\n'

Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2023-04-19T11:13:40+02:00
Author: Katja Süss (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.app.dexterity/commit/9a936bfe5c67bc460a6aa9931c08e78f014ee023

Update behaviors.pt (zpretty)

Files changed:
M plone/app/dexterity/browser/behaviors.pt

b'diff --git a/plone/app/dexterity/browser/behaviors.pt b/plone/app/dexterity/browser/behaviors.pt\nindex 5d40c010..48081a7f 100644\n--- a/plone/app/dexterity/browser/behaviors.pt\n+++ b/plone/app/dexterity/browser/behaviors.pt\n@@ -4,7 +4,7 @@\n        tal:content="view/status"\n   ></div>\n \n-  <table class="table" >\n+  <table class="table">\n     <thead>\n       <tr>\n         <th class="w-25">\n@@ -27,20 +27,18 @@\n         "\n   >\n     <tal:widgets repeat="widget view/widgets/values|nothing">\n-      <tal:define \n-        tal:define="\n-        behavior_name python: widget.field.__name__;\n-        behavior_reg python: view.behaviors[behavior_name];\n-        "  \n-      >\n+      <tal:define tal:define="\n+                    behavior_name python: widget.field.__name__;\n+                    behavior_reg python: view.behaviors[behavior_name];\n+                  ">\n         <div class="field"\n-            tal:define="\n-              error widget/error;\n-              hidden python:widget.mode == \'hidden\';\n-            "\n-            tal:attributes="\n-              class python:\'mb-3 field\' + (error and \'alert alert-warning\' or \'\');\n-            "\n+             tal:define="\n+               error widget/error;\n+               hidden python:widget.mode == \'hidden\';\n+             "\n+             tal:attributes="\n+               class python:\'mb-3 field\' + (error and \'alert alert-warning\' or \'\');\n+             "\n         >\n \n           <span class="fieldRequired"\n@@ -53,38 +51,34 @@\n           </span>\n \n           <div tal:condition="error"\n-              tal:content="structure error/render"\n+               tal:content="structure error/render"\n           >\n         Error\n           </div>\n \n           <div class="widget">\n-            <table class="table table-borderless table-sm" >\n+            <table class="table table-borderless table-sm">\n               <tbody>\n                 <tr>\n                   <td class="w-25">\n-                    <input\n-                      type="text"\n-                      tal:replace="structure widget/render"\n+                    <input type="text"\n+                           tal:replace="structure widget/render"\n                     />\n                   </td>\n-                  <td\n-                    class="w-25"\n-                    tal:content="behavior_name"\n+                  <td class="w-25"\n+                      tal:content="behavior_name"\n                   >name of behavior</td>\n-                  <td\n-                    tal:content="python:behavior_reg.interface.__identifier__"\n-                  >interface of behavior</td>\n+                  <td tal:content="python:behavior_reg.interface.__identifier__">interface of behavior</td>\n                 </tr>\n-                <tr\n-                  tal:define="description widget/field/description;"\n-                  tal:condition="python:description and not hidden"\n-                  >\n+                <tr tal:define="\n+                      description widget/field/description;\n+                    "\n+                    tal:condition="python:description and not hidden"\n+                >\n                   <td colspan="3">\n-                    <span\n-                      class="form-text"\n-                      tal:content="description"\n-                      i18n:translate=""\n+                    <span class="form-text"\n+                          tal:content="description"\n+                          i18n:translate=""\n                     >field description\n                     </span>\n                   </td>\n@@ -93,7 +87,7 @@\n             </table>\n           </div>\n         </div>\n-      \n+\n       </tal:define>\n \n \n'

Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2023-04-20T12:38:00+02:00
Author: Katja Süss (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.app.dexterity/commit/d1bf315882b771fa12573fb7a718e2176afbbe7c

Update testing.py: load plone.schema

Files changed:
M plone/app/dexterity/testing.py

b'diff --git a/plone/app/dexterity/testing.py b/plone/app/dexterity/testing.py\nindex 64368ebf..7b8b094d 100644\n--- a/plone/app/dexterity/testing.py\n+++ b/plone/app/dexterity/testing.py\n@@ -9,6 +9,10 @@ class DexterityFixture(PloneSandboxLayer):\n     defaultBases = (AUTOLOGIN_LIBRARY_FIXTURE,)\n \n     def setUpZope(self, app, configurationContext):\n+        import plone.schema\n+\n+        self.loadZCML(package=plone.schema, context=configurationContext)\n+\n         import plone.app.dexterity\n \n         self.loadZCML(name="meta.zcml", package=plone.app.dexterity)\n'

Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2023-04-20T14:01:00+02:00
Author: Katja Süss (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.app.dexterity/commit/84ce566add57e770e208cfde83dfaf79091169a0

Enable IFormLayer.

Files changed:
M plone/app/dexterity/testing.py
M plone/app/dexterity/tests/editing.rst

b'diff --git a/plone/app/dexterity/testing.py b/plone/app/dexterity/testing.py\nindex 7b8b094d..89795696 100644\n--- a/plone/app/dexterity/testing.py\n+++ b/plone/app/dexterity/testing.py\n@@ -3,16 +3,13 @@\n from plone.app.testing import IntegrationTesting\n from plone.app.testing import PloneSandboxLayer\n from plone.testing.zope import WSGI_SERVER_FIXTURE\n+from zope.interface import directlyProvides\n \n \n class DexterityFixture(PloneSandboxLayer):\n     defaultBases = (AUTOLOGIN_LIBRARY_FIXTURE,)\n \n     def setUpZope(self, app, configurationContext):\n-        import plone.schema\n-\n-        self.loadZCML(package=plone.schema, context=configurationContext)\n-\n         import plone.app.dexterity\n \n         self.loadZCML(name="meta.zcml", package=plone.app.dexterity)\ndiff --git a/plone/app/dexterity/tests/editing.rst b/plone/app/dexterity/tests/editing.rst\nindex 8e653da0..8a3f5852 100644\n--- a/plone/app/dexterity/tests/editing.rst\n+++ b/plone/app/dexterity/tests/editing.rst\n@@ -8,6 +8,9 @@ To demonstrate this, we\'ll need a logged in test browser::\n \n   >>> from plone.app.testing import TEST_USER_ID, TEST_USER_NAME, TEST_USER_PASSWORD, setRoles\n   >>> portal = layer[\'portal\']\n+  >>> from plone.schema.interfaces import IFormLayer\n+  >>> from zope.interface import alsoProvides\n+  >>> alsoProvides(portal.REQUEST, IFormLayer)\n   >>> setRoles(portal, TEST_USER_ID, [\'Manager\'])\n   >>> import transaction; transaction.commit()\n   >>> from plone.testing.zope import Browser\n'

Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2023-04-20T14:36:58+02:00
Author: Katja Süss (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.app.dexterity/commit/0a10cdcde109e8156216a178ff29dfb1f14f4557

Remove unused import

Files changed:
M plone/app/dexterity/testing.py

b'diff --git a/plone/app/dexterity/testing.py b/plone/app/dexterity/testing.py\nindex 89795696..7b8b094d 100644\n--- a/plone/app/dexterity/testing.py\n+++ b/plone/app/dexterity/testing.py\n@@ -3,13 +3,16 @@\n from plone.app.testing import IntegrationTesting\n from plone.app.testing import PloneSandboxLayer\n from plone.testing.zope import WSGI_SERVER_FIXTURE\n-from zope.interface import directlyProvides\n \n \n class DexterityFixture(PloneSandboxLayer):\n     defaultBases = (AUTOLOGIN_LIBRARY_FIXTURE,)\n \n     def setUpZope(self, app, configurationContext):\n+        import plone.schema\n+\n+        self.loadZCML(package=plone.schema, context=configurationContext)\n+\n         import plone.app.dexterity\n \n         self.loadZCML(name="meta.zcml", package=plone.app.dexterity)\n'

Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2023-04-20T14:37:21+02:00
Author: Katja Süss (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.app.dexterity/commit/ea955cad35947415f19ed340d6e7816f1c2e46b7

add plone.schema extras for testing

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex a05d5928..cb23553a 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -90,6 +90,8 @@\n             "plone.i18n",\n             "plone.testing",\n             "robotsuite",\n+            "plone.schema[\'schemaeditor]",\n+            "plone.schema[\'supermodel]",\n         ],\n         "grok": [\n             "five.grok",\n'

Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2023-04-20T14:43:56+02:00
Author: Katja Süss (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.app.dexterity/commit/91ff1053156c507ef1e4d485d4d79d9a5f478acd

Update setup.py

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex cb23553a..11ea1e6a 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -90,8 +90,8 @@\n             "plone.i18n",\n             "plone.testing",\n             "robotsuite",\n-            "plone.schema[\'schemaeditor]",\n-            "plone.schema[\'supermodel]",\n+            "plone.schema[schemaeditor]",\n+            "plone.schema[supermodel]",\n         ],\n         "grok": [\n             "five.grok",\n'

Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2023-04-27T11:15:29+02:00
Author: Katja Süss (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.app.dexterity/commit/cddb81565a9514d7cfe572463e096d368f5ff963

Revert commits trying to fix CompontentLookupError plone.schema.

Files changed:
M plone/app/dexterity/testing.py
M plone/app/dexterity/tests/editing.rst
M setup.py

b'diff --git a/plone/app/dexterity/testing.py b/plone/app/dexterity/testing.py\nindex 7b8b094d..64368ebf 100644\n--- a/plone/app/dexterity/testing.py\n+++ b/plone/app/dexterity/testing.py\n@@ -9,10 +9,6 @@ class DexterityFixture(PloneSandboxLayer):\n     defaultBases = (AUTOLOGIN_LIBRARY_FIXTURE,)\n \n     def setUpZope(self, app, configurationContext):\n-        import plone.schema\n-\n-        self.loadZCML(package=plone.schema, context=configurationContext)\n-\n         import plone.app.dexterity\n \n         self.loadZCML(name="meta.zcml", package=plone.app.dexterity)\ndiff --git a/plone/app/dexterity/tests/editing.rst b/plone/app/dexterity/tests/editing.rst\nindex 8a3f5852..8e653da0 100644\n--- a/plone/app/dexterity/tests/editing.rst\n+++ b/plone/app/dexterity/tests/editing.rst\n@@ -8,9 +8,6 @@ To demonstrate this, we\'ll need a logged in test browser::\n \n   >>> from plone.app.testing import TEST_USER_ID, TEST_USER_NAME, TEST_USER_PASSWORD, setRoles\n   >>> portal = layer[\'portal\']\n-  >>> from plone.schema.interfaces import IFormLayer\n-  >>> from zope.interface import alsoProvides\n-  >>> alsoProvides(portal.REQUEST, IFormLayer)\n   >>> setRoles(portal, TEST_USER_ID, [\'Manager\'])\n   >>> import transaction; transaction.commit()\n   >>> from plone.testing.zope import Browser\ndiff --git a/setup.py b/setup.py\nindex 11ea1e6a..a05d5928 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -90,8 +90,6 @@\n             "plone.i18n",\n             "plone.testing",\n             "robotsuite",\n-            "plone.schema[schemaeditor]",\n-            "plone.schema[supermodel]",\n         ],\n         "grok": [\n             "five.grok",\n'

Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2023-04-27T13:41:35+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.dexterity/commit/6be525f1fdc740a9d63c522c51c13dd058977f59

Merge pull request #365 from plone/content-types-control-panel-behaviors

Content types control panel: Show behavior name and interface.

Files changed:
A news/363.feature
M plone/app/dexterity/browser/behaviors.pt
M plone/app/dexterity/browser/behaviors.py

b'diff --git a/news/363.feature b/news/363.feature\nnew file mode 100644\nindex 00000000..fe7697f0\n--- /dev/null\n+++ b/news/363.feature\n@@ -0,0 +1 @@\n+Content types control panel: Show behavior name and interface. @ksuess, @stevepiercy\n\\ No newline at end of file\ndiff --git a/plone/app/dexterity/browser/behaviors.pt b/plone/app/dexterity/browser/behaviors.pt\nindex 52bfb256..48081a7f 100644\n--- a/plone/app/dexterity/browser/behaviors.pt\n+++ b/plone/app/dexterity/browser/behaviors.pt\n@@ -4,6 +4,21 @@\n        tal:content="view/status"\n   ></div>\n \n+  <table class="table">\n+    <thead>\n+      <tr>\n+        <th class="w-25">\n+        </th>\n+        <th class="w-25">\n+          <span i18n:translate="label_name_of_behavior">Name of behavior</span>\n+        </th>\n+        <th>\n+          <span i18n:translate="label_interface_of_behavior">Interface of behavior</span>\n+        </th>\n+      </tr>\n+    </thead>\n+  </table>\n+\n   <form action="."\n         method="post"\n         tal:attributes="\n@@ -12,47 +27,69 @@\n         "\n   >\n     <tal:widgets repeat="widget view/widgets/values|nothing">\n-\n-      <div class="field"\n-           tal:define="\n-             error widget/error;\n-             hidden python:widget.mode == \'hidden\';\n-           "\n-           tal:attributes="\n-             class python:\'mb-3 field\' + (error and \'alert alert-warning\' or \'\');\n-           "\n-      >\n-\n-        <span class="fieldRequired"\n-              title="Required"\n-              tal:condition="python:widget.required and not hidden"\n-              i18n:attributes="title title_required;"\n-              i18n:translate="label_required"\n+      <tal:define tal:define="\n+                    behavior_name python: widget.field.__name__;\n+                    behavior_reg python: view.behaviors[behavior_name];\n+                  ">\n+        <div class="field"\n+             tal:define="\n+               error widget/error;\n+               hidden python:widget.mode == \'hidden\';\n+             "\n+             tal:attributes="\n+               class python:\'mb-3 field\' + (error and \'alert alert-warning\' or \'\');\n+             "\n         >\n-      (Required)\n-        </span>\n \n-        <div tal:condition="error"\n-             tal:content="structure error/render"\n-        >\n-      Error\n-        </div>\n+          <span class="fieldRequired"\n+                title="Required"\n+                tal:condition="python:widget.required and not hidden"\n+                i18n:attributes="title title_required;"\n+                i18n:translate="label_required"\n+          >\n+        (Required)\n+          </span>\n \n-        <div class="widget">\n-          <input type="text"\n-                 tal:replace="structure widget/render"\n-          />\n-          <div class="form-text"\n-               tal:define="\n-                 description widget/field/description;\n-               "\n-               tal:condition="python:description and not hidden"\n-               tal:content="description"\n-               i18n:translate=""\n-          >field description\n+          <div tal:condition="error"\n+               tal:content="structure error/render"\n+          >\n+        Error\n+          </div>\n+\n+          <div class="widget">\n+            <table class="table table-borderless table-sm">\n+              <tbody>\n+                <tr>\n+                  <td class="w-25">\n+                    <input type="text"\n+                           tal:replace="structure widget/render"\n+                    />\n+                  </td>\n+                  <td class="w-25"\n+                      tal:content="behavior_name"\n+                  >name of behavior</td>\n+                  <td tal:content="python:behavior_reg.interface.__identifier__">interface of behavior</td>\n+                </tr>\n+                <tr tal:define="\n+                      description widget/field/description;\n+                    "\n+                    tal:condition="python:description and not hidden"\n+                >\n+                  <td colspan="3">\n+                    <span class="form-text"\n+                          tal:content="description"\n+                          i18n:translate=""\n+                    >field description\n+                    </span>\n+                  </td>\n+                </tr>\n+              </tbody>\n+            </table>\n           </div>\n         </div>\n-      </div>\n+\n+      </tal:define>\n+\n \n     </tal:widgets>\n     <metal:actions metal:use-macro="context/@@ploneform-macros/actions" />\ndiff --git a/plone/app/dexterity/browser/behaviors.py b/plone/app/dexterity/browser/behaviors.py\nindex 65bc3abd..76286e0d 100644\n--- a/plone/app/dexterity/browser/behaviors.py\n+++ b/plone/app/dexterity/browser/behaviors.py\n@@ -92,6 +92,22 @@ class TypeBehaviorsForm(form.EditForm):\n     def getContent(self):\n         return BehaviorConfigurationAdapter(self.context)\n \n+    @property\n+    def behaviors(self):\n+        """Return dict of (behavior name, reg)"""\n+        counts = Counter([id(reg) for name, reg in getUtilitiesFor(IBehavior)])\n+        behavs = {}\n+        for name, reg in getUtilitiesFor(IBehavior):\n+            if name in TTW_BEHAVIOR_BLACKLIST:\n+                # skip blacklisted\n+                continue\n+            with_name = counts[id(reg)] > 1\n+            if with_name and reg.name != name:\n+                continue\n+            fname = safe_text(reg.name if reg.name else name)\n+            behavs[fname] = reg\n+        return behavs\n+\n     @property\n     def fields(self):\n         counts = Counter([id(reg) for name, reg in getUtilitiesFor(IBehavior)])\n'

