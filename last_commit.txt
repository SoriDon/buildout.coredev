Repository: documentation


Branch: refs/heads/6-dev
Date: 2022-04-06T19:19:38+03:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/documentation/commit/beece81d05cf8a66b8c3c8357f9fe1c655da89c2

Add indexing chapter

Files changed:
A docs/backend/indexing.md
M docs/backend/content-types.md
M docs/backend/fields.md
M docs/backend/index.md
M docs/classic-ui/forms.md

b'diff --git a/docs/backend/content-types.md b/docs/backend/content-types.md\nindex 352c4441..a3952a2c 100644\n--- a/docs/backend/content-types.md\n+++ b/docs/backend/content-types.md\n@@ -10,3 +10,8 @@ html_meta:\n \n # Content Types\n \n+\n+```{todo}\n+Describe how to add a content type (Python/XML) including FTI settings.\n+Fields, Widgets, Vocabularies aso are descripted in detail in there own chapter and will be referenced frome examples here.\n+```\n\\ No newline at end of file\ndiff --git a/docs/backend/fields.md b/docs/backend/fields.md\nindex fff3e39a..1e3d0dec 100644\n--- a/docs/backend/fields.md\n+++ b/docs/backend/fields.md\n@@ -11,6 +11,7 @@ html_meta:\n # Fields\n \n \n+\n (backend-fields-schema-label)=\n \n ## schema\ndiff --git a/docs/backend/index.md b/docs/backend/index.md\nindex 46acf531..4b0792e2 100644\n--- a/docs/backend/index.md\n+++ b/docs/backend/index.md\n@@ -25,6 +25,7 @@ users-groups\n security\n workflows\n search\n+indexing\n zodb\n ../plone.api/index.rst\n plone-restapi\ndiff --git a/docs/backend/indexing.md b/docs/backend/indexing.md\nnew file mode 100644\nindex 00000000..7aee912e\n--- /dev/null\n+++ b/docs/backend/indexing.md\n@@ -0,0 +1,222 @@\n+---\n+html_meta:\n+  "description": "Using Plone\'s catalog to index content and make it searchable."\n+  "property=og:description": "Using Plone\'s catalog to index content and make it searchable."\n+  "property=og:title": "Indexing"\n+  "keywords": "indexing, indexes, indexer, catalog, searching, FieldIndex, SearchableText, textindexer"\n+---\n+\n+(backend-indexing-label)=\n+\n+# Indexing\n+\n+To make Plone content searchable, one can use different indexes to index content.\n+\n+The most important index types are:\n+\n+- `FieldIndex`\n+- `KeywordIndex`\n+- `DateIndex`\n+- `DateRangeindex`\n+- `BooleanIndex`\n+- `ZCTextIndex`\n+\n+The most important indexes are:\n+\n+## `SearchableText`\n+\n+The `SearchableText` is a `ZCTextIndex` for indexing full text and is used by default for `Dublin core` fields like Title, Description and Text.\n+\n+### TextIndexer\n+\n+To add other fields to the `SearchableText`, one can use the `plone.app.dexterity.textindexer`.\n+\n+For enabling the indexer just add the behavior to the list of behaviors of your\n+content types.\n+\n+In your *profiles/default/types/YOURTYPE.xml* add the behavior::\n+\n+    <?xml version="1.0"?>\n+    <object name="example.conference.presenter" meta_type="Dexterity FTI"\n+       xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+       i18n:domain="example.conference">\n+\n+     <!-- enabled behaviors -->\n+     <property name="behaviors" purge="false">\n+         <element value="plone.textindexer" />\n+     </property>\n+\n+    </object>\n+\n+\n+Now you need to mark the fields you want to have in your SearchableText. This\n+can be done with the searchable directive:\n+\n+```python\n+from plone.app.dexterity import textindexer\n+from plone.supermodel.model import Schema\n+from plone import schema\n+\n+class IMyBehavior(Schema):\n+\n+    textindexer.searchable(\'specialfield\')\n+    specialfield = schema.Text(title=u\'Special field\')\n+\n+```\n+\n+If you want to mark fields of an existing 3rd party behavior, it can be\n+done using this utility function:\n+\n+```python\n+from plone.app.dexterity.behaviors.metadata import ICategorization\n+from plone.app.dexterity.textindexer import utils\n+\n+utils.searchable(ICategorization, \'categorization\')\n+```\n+\n+The `title` and `description` on `plone.app.dexterity`\'s `IBasic` behavior\n+are marked as searchable by default.\n+For marking them as no longer searchable, there is a utility function:\n+\n+```python\n+from plone.app.dexterity.behaviors.metadata import IBasic\n+from plone.app.dexterity.textindexer import utils\n+\n+utils.no_longer_searchable(IBasic, \'title\')\n+```\n+\n+Alternatively, if you specified your model as a plone.supermodel XML model,\n+you can mark the field searchable by using `indexer:searchable="true"`:\n+\n+```xml\n+\n+<model xmlns="http://namespaces.plone.org/supermodel/schema"\n+        xmlns:indexer="http://namespaces.plone.org/supermodel/indexer">\n+    <schema based-on="plone.supermodel.model.Schema">\n+\n+        <field name="specialfield" type="zope.schema.TextLine"\n+                indexer:searchable="true">\n+        <title>Special field</title>\n+        </field>\n+\n+    </schema>\n+</model>\n+```\n+\n+\n+Your SearchableText indexer includes now your custom field on your behavior, as\n+soon you enable it in your content type, where `IDexterityTextIndexer` behavior\n+is enabled too.\n+\n+\n+#### Registering a custom field converter\n+\n+\n+By default, a field is converted to a searchable text by rendering the widget\n+in display mode and transforming the result to text/plain. However, if you need\n+to convert your custom field in a different way, you only have to provide a\n+more specific converter multi-adapter.\n+\n+Convert multi-adapter specification:\n+\n+:Interface: `plone.app.dexterity.textindexer.IDexterityTextIndexFieldConverter`\n+:Discriminators: context, field, widget\n+\n+Example:\n+\n+```python\n+from plone.app.dexterity.textindexer.converters import DefaultDexterityTextIndexFieldConverter\n+from plone.app.dexterity.textindexer.interfaces import IDexterityTextIndexFieldConverter\n+from my.package.interfaces import IMyFancyField\n+from plone.dexterity.interfaces import IDexterityContent\n+from z3c.form.interfaces import IWidget\n+from zope.component import adapts\n+from zope.interface import implementer\n+\n+@implementer(IDexterityTextIndexFieldConverter)\n+class CustomFieldConverter(DefaultDexterityTextIndexFieldConverter):\n+    adapts(IDexterityContent, IMyFancyField, IWidget)\n+\n+    def convert(self):\n+            # implement your custom converter\n+            # which returns a string at the end\n+            return \'\'\n+```\n+\n+ZCML:\n+\n+```xml\n+<configure xmlns="http://namespaces.zope.org/zope">\n+\n+    <adapter factory=".converters.CustomFieldConverter" />\n+\n+</configure>\n+```\n+\n+There is already an adapter for converting NamedFiles properly. It\'s registered\n+only if `plone.namedfile` is installed.\n+\n+\n+\n+#### Extending indexed data\n+\n+\n+Sometimes you need to extend the SearchableText with additional data which is\n+not stored in a field. It\'s possible to register a named adapter which provides\n+additional data:\n+\n+```python\n+from plone.app.dexterity import textindexer\n+from zope.component import adapts\n+from zope.interface import implementer\n+\n+\n+implementer(textindexer.IDynamicTextIndexExtender)\n+\n+\n+class MySearchableTextExtender(object):\n+    adapts(IMyBehavior)\n+\n+    def __init__(self, context):\n+        self.context = context\n+\n+    def __call__(self):\n+        """Extend the searchable text with a custom string"""\n+        return \'some more searchable words\'\n+```\n+\n+ZCML:\n+\n+```xml\n+<configure xmlns="http://namespaces.zope.org/zope">\n+\n+    <adapter factory=".indexer.MySearchableTextExtender"\n+                name="IMyBehavior"\n+                />\n+\n+</configure>\n+```\n+\n+This is a **named** adapter! This makes it possible to register multiple\n+extenders for the same object on different behavior interfaces. The name of\n+the adapter does not matter, but it\'s recommended to use the name of the\n+behavior (this may reduce conflicts).\n+\n+If your behavior has a defined factory (which is not attribute storage), then\n+you need to define a marker interface and register the adapter on this marker\n+interface (dexterity objects do not provide behavior interfaces of behaviors,\n+which are not using attribute storage).\n+\n+\n+\n+## `portal_type` (`FieldIndex`)\n+\n+Indexes the `portal_type` field and contains values like `Folder`.\n+\n+## `path` (`PathIndex)`\n+\n+Indexes the object path, like `/news/news-item-1`.\n+\n+## `Subject` (`KeywordIndex`)\n+\n+Indexes the `Subject` field which contains a list of object categories.\n\\ No newline at end of file\ndiff --git a/docs/classic-ui/forms.md b/docs/classic-ui/forms.md\nindex f0ae039c..a8f49a77 100644\n--- a/docs/classic-ui/forms.md\n+++ b/docs/classic-ui/forms.md\n@@ -10,3 +10,7 @@ html_meta:\n \n # Forms\n \n+```{todo}\n+Describe how create forms with Plone\'s default form framework z3c.form.\n+Fields, Widgets, Vocabularies aso are descripted in detail in there own chapter and will be referenced frome examples here.\n+```\n\\ No newline at end of file\n'

Repository: documentation


Branch: refs/heads/6-dev
Date: 2022-04-06T19:33:33+03:00
Author: Maik Derstappen (MrTango) <md@derico.de>
Commit: https://github.com/plone/documentation/commit/9cb0013e0498753a3f2d1917be4a093a67a53af0

Update docs/backend/indexing.md

Co-authored-by: Jens W. Klein &lt;jk@kleinundpartner.at&gt;

Files changed:
M docs/backend/indexing.md

b'diff --git a/docs/backend/indexing.md b/docs/backend/indexing.md\nindex 7aee912e..5d7ff6f2 100644\n--- a/docs/backend/indexing.md\n+++ b/docs/backend/indexing.md\n@@ -134,8 +134,8 @@ from zope.component import adapts\n from zope.interface import implementer\n \n @implementer(IDexterityTextIndexFieldConverter)\n+@adapter(IDexterityContent, IMyFancyField, IWidget)\n class CustomFieldConverter(DefaultDexterityTextIndexFieldConverter):\n-    adapts(IDexterityContent, IMyFancyField, IWidget)\n \n     def convert(self):\n             # implement your custom converter\n'

Repository: documentation


Branch: refs/heads/6-dev
Date: 2022-04-06T19:33:42+03:00
Author: Maik Derstappen (MrTango) <md@derico.de>
Commit: https://github.com/plone/documentation/commit/b4b9fa4cf80ae7ecf737a8b01bf8b44a570cfaec

Update docs/backend/indexing.md

Co-authored-by: Jens W. Klein &lt;jk@kleinundpartner.at&gt;

Files changed:
M docs/backend/indexing.md

b'diff --git a/docs/backend/indexing.md b/docs/backend/indexing.md\nindex 5d7ff6f2..4f904332 100644\n--- a/docs/backend/indexing.md\n+++ b/docs/backend/indexing.md\n@@ -130,7 +130,7 @@ from plone.app.dexterity.textindexer.interfaces import IDexterityTextIndexFieldC\n from my.package.interfaces import IMyFancyField\n from plone.dexterity.interfaces import IDexterityContent\n from z3c.form.interfaces import IWidget\n-from zope.component import adapts\n+from zope.component import adapter\n from zope.interface import implementer\n \n @implementer(IDexterityTextIndexFieldConverter)\n'

Repository: documentation


Branch: refs/heads/6-dev
Date: 2022-04-06T19:44:41+03:00
Author: Maik Derstappen (MrTango) <md@derico.de>
Commit: https://github.com/plone/documentation/commit/e3740c10b474c0d2e1af9e37e2831d21895a9887

Update docs/backend/indexing.md

Co-authored-by: Jens W. Klein &lt;jk@kleinundpartner.at&gt;

Files changed:
M docs/backend/indexing.md

b'diff --git a/docs/backend/indexing.md b/docs/backend/indexing.md\nindex 4f904332..f4e56b9a 100644\n--- a/docs/backend/indexing.md\n+++ b/docs/backend/indexing.md\n@@ -167,7 +167,7 @@ additional data:\n \n ```python\n from plone.app.dexterity import textindexer\n-from zope.component import adapts\n+from zope.component import adapter\n from zope.interface import implementer\n \n \n'

Repository: documentation


Branch: refs/heads/6-dev
Date: 2022-04-06T19:45:02+03:00
Author: Maik Derstappen (MrTango) <md@derico.de>
Commit: https://github.com/plone/documentation/commit/5f35bfd928db3add0c8f985bddb6b1616cf00df4

Update docs/backend/indexing.md

Co-authored-by: Jens W. Klein &lt;jk@kleinundpartner.at&gt;

Files changed:
M docs/backend/indexing.md

b'diff --git a/docs/backend/indexing.md b/docs/backend/indexing.md\nindex f4e56b9a..240b473e 100644\n--- a/docs/backend/indexing.md\n+++ b/docs/backend/indexing.md\n@@ -31,8 +31,7 @@ The `SearchableText` is a `ZCTextIndex` for indexing full text and is used by de\n \n To add other fields to the `SearchableText`, one can use the `plone.app.dexterity.textindexer`.\n \n-For enabling the indexer just add the behavior to the list of behaviors of your\n-content types.\n+For enabling the indexer just add the behavior to the list of behaviors of your content types.\n \n In your *profiles/default/types/YOURTYPE.xml* add the behavior::\n \n'

Repository: documentation


Branch: refs/heads/6-dev
Date: 2022-04-06T19:45:17+03:00
Author: Maik Derstappen (MrTango) <md@derico.de>
Commit: https://github.com/plone/documentation/commit/76269eb8ad4dec5ba037c07b26cd5e057a29d01b

Update docs/backend/indexing.md

Co-authored-by: Jens W. Klein &lt;jk@kleinundpartner.at&gt;

Files changed:
M docs/backend/indexing.md

b'diff --git a/docs/backend/indexing.md b/docs/backend/indexing.md\nindex 240b473e..863a2c4d 100644\n--- a/docs/backend/indexing.md\n+++ b/docs/backend/indexing.md\n@@ -48,8 +48,8 @@ In your *profiles/default/types/YOURTYPE.xml* add the behavior::\n     </object>\n \n \n-Now you need to mark the fields you want to have in your SearchableText. This\n-can be done with the searchable directive:\n+Now you need to mark the fields you want to have in your SearchableText. \n+This  can be done with the searchable directive:\n \n ```python\n from plone.app.dexterity import textindexer\n'

Repository: documentation


Branch: refs/heads/6-dev
Date: 2022-04-06T19:45:41+03:00
Author: Maik Derstappen (MrTango) <md@derico.de>
Commit: https://github.com/plone/documentation/commit/49dfeca7f847bad01fce0a247786575b395b8e96

Update docs/backend/indexing.md

Co-authored-by: Jens W. Klein &lt;jk@kleinundpartner.at&gt;

Files changed:
M docs/backend/indexing.md

b'diff --git a/docs/backend/indexing.md b/docs/backend/indexing.md\nindex 863a2c4d..d702090b 100644\n--- a/docs/backend/indexing.md\n+++ b/docs/backend/indexing.md\n@@ -63,8 +63,7 @@ class IMyBehavior(Schema):\n \n ```\n \n-If you want to mark fields of an existing 3rd party behavior, it can be\n-done using this utility function:\n+If you want to mark fields of an existing 3rd party behavior, it can be done using this utility function:\n \n ```python\n from plone.app.dexterity.behaviors.metadata import ICategorization\n'

Repository: documentation


Branch: refs/heads/6-dev
Date: 2022-04-06T19:45:56+03:00
Author: Maik Derstappen (MrTango) <md@derico.de>
Commit: https://github.com/plone/documentation/commit/ae1708f69a1a4f9439f6326dde5033f62bc1ac64

Update docs/backend/indexing.md

Co-authored-by: Jens W. Klein &lt;jk@kleinundpartner.at&gt;

Files changed:
M docs/backend/indexing.md

b"diff --git a/docs/backend/indexing.md b/docs/backend/indexing.md\nindex d702090b..33ab3447 100644\n--- a/docs/backend/indexing.md\n+++ b/docs/backend/indexing.md\n@@ -72,8 +72,7 @@ from plone.app.dexterity.textindexer import utils\n utils.searchable(ICategorization, 'categorization')\n ```\n \n-The `title` and `description` on `plone.app.dexterity`'s `IBasic` behavior\n-are marked as searchable by default.\n+The `title` and `description` on `plone.app.dexterity`'s `IBasic` behavior are marked as searchable by default.\n For marking them as no longer searchable, there is a utility function:\n \n ```python\n"

Repository: documentation


Branch: refs/heads/6-dev
Date: 2022-04-06T19:46:31+03:00
Author: Maik Derstappen (MrTango) <md@derico.de>
Commit: https://github.com/plone/documentation/commit/f70493b456096764058f50b644e55786f623514b

Update docs/backend/indexing.md

Co-authored-by: Jens W. Klein &lt;jk@kleinundpartner.at&gt;

Files changed:
M docs/backend/indexing.md

b'diff --git a/docs/backend/indexing.md b/docs/backend/indexing.md\nindex 33ab3447..2da33532 100644\n--- a/docs/backend/indexing.md\n+++ b/docs/backend/indexing.md\n@@ -101,9 +101,8 @@ you can mark the field searchable by using `indexer:searchable="true"`:\n ```\n \n \n-Your SearchableText indexer includes now your custom field on your behavior, as\n-soon you enable it in your content type, where `IDexterityTextIndexer` behavior\n-is enabled too.\n+Your SearchableText indexer includes now your custom field on your behavior. \n+It is enabled on your content type, if the `plone.textindexer` behavior is enabled there too.\n \n \n #### Registering a custom field converter\n'

Repository: documentation


Branch: refs/heads/6-dev
Date: 2022-04-06T19:46:54+03:00
Author: Maik Derstappen (MrTango) <md@derico.de>
Commit: https://github.com/plone/documentation/commit/a42f5127153317d64b0390769e11977f0fd5734b

Update docs/backend/indexing.md

Co-authored-by: Jens W. Klein &lt;jk@kleinundpartner.at&gt;

Files changed:
M docs/backend/indexing.md

b'diff --git a/docs/backend/indexing.md b/docs/backend/indexing.md\nindex 2da33532..3bc2c439 100644\n--- a/docs/backend/indexing.md\n+++ b/docs/backend/indexing.md\n@@ -108,10 +108,8 @@ It is enabled on your content type, if the `plone.textindexer` behavior is enabl\n #### Registering a custom field converter\n \n \n-By default, a field is converted to a searchable text by rendering the widget\n-in display mode and transforming the result to text/plain. However, if you need\n-to convert your custom field in a different way, you only have to provide a\n-more specific converter multi-adapter.\n+By default, a field is converted to a searchable text by rendering the widget in display mode and transforming the result to `text/plain`. \n+However, if you need to convert your custom field in a different way, you only have to provide a more specific converter multi-adapter.\n \n Convert multi-adapter specification:\n \n'

Repository: documentation


Branch: refs/heads/6-dev
Date: 2022-04-06T19:47:10+03:00
Author: Maik Derstappen (MrTango) <md@derico.de>
Commit: https://github.com/plone/documentation/commit/b72782e9a558b463d215234300da7eba6deaba2b

Update docs/backend/indexing.md

Co-authored-by: Jens W. Klein &lt;jk@kleinundpartner.at&gt;

Files changed:
M docs/backend/indexing.md

b"diff --git a/docs/backend/indexing.md b/docs/backend/indexing.md\nindex 3bc2c439..74f95ee1 100644\n--- a/docs/backend/indexing.md\n+++ b/docs/backend/indexing.md\n@@ -147,8 +147,7 @@ ZCML:\n </configure>\n ```\n \n-There is already an adapter for converting NamedFiles properly. It's registered\n-only if `plone.namedfile` is installed.\n+There is already an adapter for converting files properly. \n \n \n \n"

Repository: documentation


Branch: refs/heads/6-dev
Date: 2022-04-06T19:48:06+03:00
Author: Maik Derstappen (MrTango) <md@derico.de>
Commit: https://github.com/plone/documentation/commit/dc6d290fb56f91dbe0a06f790ec065342c8d1a4d

Update docs/backend/indexing.md

Co-authored-by: Jens W. Klein &lt;jk@kleinundpartner.at&gt;

Files changed:
M docs/backend/indexing.md

b"diff --git a/docs/backend/indexing.md b/docs/backend/indexing.md\nindex 74f95ee1..f1214df5 100644\n--- a/docs/backend/indexing.md\n+++ b/docs/backend/indexing.md\n@@ -154,9 +154,8 @@ There is already an adapter for converting files properly.\n #### Extending indexed data\n \n \n-Sometimes you need to extend the SearchableText with additional data which is\n-not stored in a field. It's possible to register a named adapter which provides\n-additional data:\n+Sometimes you need to extend the SearchableText with additional data which is not stored in a field. \n+It is possible to register a named adapter which provides additional data:\n \n ```python\n from plone.app.dexterity import textindexer\n"

Repository: documentation


Branch: refs/heads/6-dev
Date: 2022-04-06T19:48:15+03:00
Author: Maik Derstappen (MrTango) <md@derico.de>
Commit: https://github.com/plone/documentation/commit/e889986eb613b4ae6316981cf7a2a4899e3f3c0f

Update docs/backend/indexing.md

Co-authored-by: Jens W. Klein &lt;jk@kleinundpartner.at&gt;

Files changed:
M docs/backend/indexing.md

b'diff --git a/docs/backend/indexing.md b/docs/backend/indexing.md\nindex f1214df5..acc163d7 100644\n--- a/docs/backend/indexing.md\n+++ b/docs/backend/indexing.md\n@@ -163,11 +163,9 @@ from zope.component import adapter\n from zope.interface import implementer\n \n \n-implementer(textindexer.IDynamicTextIndexExtender)\n-\n-\n+@implementer(textindexer.IDynamicTextIndexExtender)\n+@adapter(IMyBehavior)\n class MySearchableTextExtender(object):\n-    adapts(IMyBehavior)\n \n     def __init__(self, context):\n         self.context = context\n'

Repository: documentation


Branch: refs/heads/6-dev
Date: 2022-04-06T20:10:39+03:00
Author: Maik Derstappen (MrTango) <md@derico.de>
Commit: https://github.com/plone/documentation/commit/1d08e1a1795fe6341b2faf2ec014050cb981cc64

Merge pull request #1223 from plone/mrtango-backend-indexing

Add indexing chapter

Files changed:
A docs/backend/indexing.md
M docs/backend/content-types.md
M docs/backend/fields.md
M docs/backend/index.md
M docs/classic-ui/forms.md

b'diff --git a/docs/backend/content-types.md b/docs/backend/content-types.md\nindex 352c4441..a3952a2c 100644\n--- a/docs/backend/content-types.md\n+++ b/docs/backend/content-types.md\n@@ -10,3 +10,8 @@ html_meta:\n \n # Content Types\n \n+\n+```{todo}\n+Describe how to add a content type (Python/XML) including FTI settings.\n+Fields, Widgets, Vocabularies aso are descripted in detail in there own chapter and will be referenced frome examples here.\n+```\n\\ No newline at end of file\ndiff --git a/docs/backend/fields.md b/docs/backend/fields.md\nindex fff3e39a..1e3d0dec 100644\n--- a/docs/backend/fields.md\n+++ b/docs/backend/fields.md\n@@ -11,6 +11,7 @@ html_meta:\n # Fields\n \n \n+\n (backend-fields-schema-label)=\n \n ## schema\ndiff --git a/docs/backend/index.md b/docs/backend/index.md\nindex 46acf531..4b0792e2 100644\n--- a/docs/backend/index.md\n+++ b/docs/backend/index.md\n@@ -25,6 +25,7 @@ users-groups\n security\n workflows\n search\n+indexing\n zodb\n ../plone.api/index.rst\n plone-restapi\ndiff --git a/docs/backend/indexing.md b/docs/backend/indexing.md\nnew file mode 100644\nindex 00000000..acc163d7\n--- /dev/null\n+++ b/docs/backend/indexing.md\n@@ -0,0 +1,212 @@\n+---\n+html_meta:\n+  "description": "Using Plone\'s catalog to index content and make it searchable."\n+  "property=og:description": "Using Plone\'s catalog to index content and make it searchable."\n+  "property=og:title": "Indexing"\n+  "keywords": "indexing, indexes, indexer, catalog, searching, FieldIndex, SearchableText, textindexer"\n+---\n+\n+(backend-indexing-label)=\n+\n+# Indexing\n+\n+To make Plone content searchable, one can use different indexes to index content.\n+\n+The most important index types are:\n+\n+- `FieldIndex`\n+- `KeywordIndex`\n+- `DateIndex`\n+- `DateRangeindex`\n+- `BooleanIndex`\n+- `ZCTextIndex`\n+\n+The most important indexes are:\n+\n+## `SearchableText`\n+\n+The `SearchableText` is a `ZCTextIndex` for indexing full text and is used by default for `Dublin core` fields like Title, Description and Text.\n+\n+### TextIndexer\n+\n+To add other fields to the `SearchableText`, one can use the `plone.app.dexterity.textindexer`.\n+\n+For enabling the indexer just add the behavior to the list of behaviors of your content types.\n+\n+In your *profiles/default/types/YOURTYPE.xml* add the behavior::\n+\n+    <?xml version="1.0"?>\n+    <object name="example.conference.presenter" meta_type="Dexterity FTI"\n+       xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+       i18n:domain="example.conference">\n+\n+     <!-- enabled behaviors -->\n+     <property name="behaviors" purge="false">\n+         <element value="plone.textindexer" />\n+     </property>\n+\n+    </object>\n+\n+\n+Now you need to mark the fields you want to have in your SearchableText. \n+This  can be done with the searchable directive:\n+\n+```python\n+from plone.app.dexterity import textindexer\n+from plone.supermodel.model import Schema\n+from plone import schema\n+\n+class IMyBehavior(Schema):\n+\n+    textindexer.searchable(\'specialfield\')\n+    specialfield = schema.Text(title=u\'Special field\')\n+\n+```\n+\n+If you want to mark fields of an existing 3rd party behavior, it can be done using this utility function:\n+\n+```python\n+from plone.app.dexterity.behaviors.metadata import ICategorization\n+from plone.app.dexterity.textindexer import utils\n+\n+utils.searchable(ICategorization, \'categorization\')\n+```\n+\n+The `title` and `description` on `plone.app.dexterity`\'s `IBasic` behavior are marked as searchable by default.\n+For marking them as no longer searchable, there is a utility function:\n+\n+```python\n+from plone.app.dexterity.behaviors.metadata import IBasic\n+from plone.app.dexterity.textindexer import utils\n+\n+utils.no_longer_searchable(IBasic, \'title\')\n+```\n+\n+Alternatively, if you specified your model as a plone.supermodel XML model,\n+you can mark the field searchable by using `indexer:searchable="true"`:\n+\n+```xml\n+\n+<model xmlns="http://namespaces.plone.org/supermodel/schema"\n+        xmlns:indexer="http://namespaces.plone.org/supermodel/indexer">\n+    <schema based-on="plone.supermodel.model.Schema">\n+\n+        <field name="specialfield" type="zope.schema.TextLine"\n+                indexer:searchable="true">\n+        <title>Special field</title>\n+        </field>\n+\n+    </schema>\n+</model>\n+```\n+\n+\n+Your SearchableText indexer includes now your custom field on your behavior. \n+It is enabled on your content type, if the `plone.textindexer` behavior is enabled there too.\n+\n+\n+#### Registering a custom field converter\n+\n+\n+By default, a field is converted to a searchable text by rendering the widget in display mode and transforming the result to `text/plain`. \n+However, if you need to convert your custom field in a different way, you only have to provide a more specific converter multi-adapter.\n+\n+Convert multi-adapter specification:\n+\n+:Interface: `plone.app.dexterity.textindexer.IDexterityTextIndexFieldConverter`\n+:Discriminators: context, field, widget\n+\n+Example:\n+\n+```python\n+from plone.app.dexterity.textindexer.converters import DefaultDexterityTextIndexFieldConverter\n+from plone.app.dexterity.textindexer.interfaces import IDexterityTextIndexFieldConverter\n+from my.package.interfaces import IMyFancyField\n+from plone.dexterity.interfaces import IDexterityContent\n+from z3c.form.interfaces import IWidget\n+from zope.component import adapter\n+from zope.interface import implementer\n+\n+@implementer(IDexterityTextIndexFieldConverter)\n+@adapter(IDexterityContent, IMyFancyField, IWidget)\n+class CustomFieldConverter(DefaultDexterityTextIndexFieldConverter):\n+\n+    def convert(self):\n+            # implement your custom converter\n+            # which returns a string at the end\n+            return \'\'\n+```\n+\n+ZCML:\n+\n+```xml\n+<configure xmlns="http://namespaces.zope.org/zope">\n+\n+    <adapter factory=".converters.CustomFieldConverter" />\n+\n+</configure>\n+```\n+\n+There is already an adapter for converting files properly. \n+\n+\n+\n+#### Extending indexed data\n+\n+\n+Sometimes you need to extend the SearchableText with additional data which is not stored in a field. \n+It is possible to register a named adapter which provides additional data:\n+\n+```python\n+from plone.app.dexterity import textindexer\n+from zope.component import adapter\n+from zope.interface import implementer\n+\n+\n+@implementer(textindexer.IDynamicTextIndexExtender)\n+@adapter(IMyBehavior)\n+class MySearchableTextExtender(object):\n+\n+    def __init__(self, context):\n+        self.context = context\n+\n+    def __call__(self):\n+        """Extend the searchable text with a custom string"""\n+        return \'some more searchable words\'\n+```\n+\n+ZCML:\n+\n+```xml\n+<configure xmlns="http://namespaces.zope.org/zope">\n+\n+    <adapter factory=".indexer.MySearchableTextExtender"\n+                name="IMyBehavior"\n+                />\n+\n+</configure>\n+```\n+\n+This is a **named** adapter! This makes it possible to register multiple\n+extenders for the same object on different behavior interfaces. The name of\n+the adapter does not matter, but it\'s recommended to use the name of the\n+behavior (this may reduce conflicts).\n+\n+If your behavior has a defined factory (which is not attribute storage), then\n+you need to define a marker interface and register the adapter on this marker\n+interface (dexterity objects do not provide behavior interfaces of behaviors,\n+which are not using attribute storage).\n+\n+\n+\n+## `portal_type` (`FieldIndex`)\n+\n+Indexes the `portal_type` field and contains values like `Folder`.\n+\n+## `path` (`PathIndex)`\n+\n+Indexes the object path, like `/news/news-item-1`.\n+\n+## `Subject` (`KeywordIndex`)\n+\n+Indexes the `Subject` field which contains a list of object categories.\n\\ No newline at end of file\ndiff --git a/docs/classic-ui/forms.md b/docs/classic-ui/forms.md\nindex f0ae039c..a8f49a77 100644\n--- a/docs/classic-ui/forms.md\n+++ b/docs/classic-ui/forms.md\n@@ -10,3 +10,7 @@ html_meta:\n \n # Forms\n \n+```{todo}\n+Describe how create forms with Plone\'s default form framework z3c.form.\n+Fields, Widgets, Vocabularies aso are descripted in detail in there own chapter and will be referenced frome examples here.\n+```\n\\ No newline at end of file\n'

