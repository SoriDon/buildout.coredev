Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-08-18T16:41:56+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/a555b3f8db76ca80a6dfaf96b2c432a315ae4223

move getQuality + getAllowedSizes to plone.namedfile.utils

Files changed:
A news/3615.bugfix
M Products/CMFPlone/configure.zcml
M Products/CMFPlone/utils.py

b'diff --git a/Products/CMFPlone/configure.zcml b/Products/CMFPlone/configure.zcml\nindex 0433f5a7e7..97b6876913 100644\n--- a/Products/CMFPlone/configure.zcml\n+++ b/Products/CMFPlone/configure.zcml\n@@ -127,18 +127,6 @@\n   <subscriber for="ZPublisher.interfaces.IPubAfterTraversal"\n               handler=".events.removeBase"/>\n \n-  <!-- configure sizes lookup for `plone.namedfile` -->\n-  <utility\n-      component=".utils.getAllowedSizes"\n-      provides="plone.namedfile.interfaces.IAvailableSizes"\n-      />\n-\n-  <!-- quality lookup for IScaledImageQuality -->\n-  <utility\n-      component=".utils.getQuality"\n-      provides="plone.scale.interfaces.IScaledImageQuality"\n-      />\n-\n   <adapter\n       for="zope.pagetemplate.engine.ZopeBaseEngine"\n       factory=".traversal.get_zope_page_template_engine"\ndiff --git a/Products/CMFPlone/utils.py b/Products/CMFPlone/utils.py\nindex 11eb7df766..6a2da74b8e 100644\n--- a/Products/CMFPlone/utils.py\n+++ b/Products/CMFPlone/utils.py\n@@ -80,6 +80,8 @@\n deprecated_import(\n     "Import from plone.namedfile.utils instead (will be removed in Plone 7)",\n     getHighPixelDensityScales="plone.namedfile.utils.getHighPixelDensityScales",\n+    getAllowedSizes="plone.namedfile.utils.getAllowedSizes",\n+    getQuality="plone.namedfile.utils.getQuality",\n )\n \n @deprecate("Use plone.base.utils.safe_bytes instead (will be removed in Plone 7)")\n@@ -490,33 +492,6 @@ def bodyfinder(text):\n     return text[bodystart:bodyend]\n \n \n-def getAllowedSizes():\n-    registry = queryUtility(IRegistry)\n-    if not registry:\n-        return None\n-    settings = registry.forInterface(\n-        IImagingSchema, prefix="plone", check=False)\n-    if not settings.allowed_sizes:\n-        return None\n-    sizes = {}\n-    for line in settings.allowed_sizes:\n-        line = line.strip()\n-        if line:\n-            name, width, height = pattern.match(line).groups()\n-            name = name.strip().replace(\' \', \'_\')\n-            sizes[name] = int(width), int(height)\n-    return sizes\n-\n-\n-def getQuality():\n-    registry = queryUtility(IRegistry)\n-    if registry:\n-        settings = registry.forInterface(\n-            IImagingSchema, prefix="plone", check=False)\n-        return settings.quality or QUALITY_DEFAULT\n-    return QUALITY_DEFAULT\n-\n-\n def getSiteLogo(site=None, include_type=False):\n     from plone.base.interfaces import ISiteSchema\n     from plone.formwidget.namedfile.converter import b64decode_file\ndiff --git a/news/3615.bugfix b/news/3615.bugfix\nnew file mode 100644\nindex 0000000000..45df6ff908\n--- /dev/null\n+++ b/news/3615.bugfix\n@@ -0,0 +1,3 @@\n+Move utils.getQuality and utils.getAllowedSizes to plone.namedfile.utils.\n+This helps untangling circular dependencies.\n+[jensens]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-08-19T12:49:34+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/17cd50f0d58db4b7b1dab418795333bc306bce6b

Merge branch 'master' into move-to-namedfile

Files changed:
A news/3609.bugfix
M Products/CMFPlone/resources/browser/resource.py
M Products/CMFPlone/traversal.py

b'diff --git a/Products/CMFPlone/resources/browser/resource.py b/Products/CMFPlone/resources/browser/resource.py\nindex 14d0412a26..194ca8ce55 100644\n--- a/Products/CMFPlone/resources/browser/resource.py\n+++ b/Products/CMFPlone/resources/browser/resource.py\n@@ -131,7 +131,7 @@ def check_dependencies(bundle_name, depends, bundles):\n                     # ignore dependency on bundle outside "bundles"\n                     continue\n \n-                msg = f"Bundle \'{bundle_name}\' has a non existing dependeny on \'{name}\'. "\n+                msg = f"Bundle \'{bundle_name}\' has a non existing dependency on \'{name}\'. "\n \n                 if name in GRACEFUL_DEPENDENCY_REWRITE:\n                     # gracefully rewrite old bundle names\ndiff --git a/Products/CMFPlone/traversal.py b/Products/CMFPlone/traversal.py\nindex 8b56473dc4..cc19aac322 100644\n--- a/Products/CMFPlone/traversal.py\n+++ b/Products/CMFPlone/traversal.py\n@@ -1,40 +1,33 @@\n-from plone.resource.traversal import ResourceTraverser\n-from zope.component import queryUtility\n+from plone.base.interfaces.resources import OVERRIDE_RESOURCE_DIRECTORY_NAME\n from plone.resource.interfaces import IResourceDirectory\n from plone.resource.interfaces import IUniqueResourceRequest\n-from plone.base.interfaces.resources import (\n-    OVERRIDE_RESOURCE_DIRECTORY_NAME)\n+from plone.resource.traversal import ResourceTraverser\n from Products.PageTemplates.Expressions import getEngine\n from Products.PageTemplates.Expressions import getTrustedEngine\n+from Products.PageTemplates.interfaces import IZopeAwareEngine\n+from zope.component import queryUtility\n from zope.globalrequest import getRequest\n from zope.interface import implementer\n from zope.interface import Interface\n from zope.pagetemplate import engine as zpt_engine\n \n \n-try:\n-    # This was introduced in Zope 4.5.\n-    # We try not to make this a hard dependency yet.\n-    from Products.PageTemplates.interfaces import IZopeAwareEngine\n-except ImportError:\n-    # Zope 4.4-\n-    class IZopeAwareEngine(Interface):\n-        pass\n-\n-\n class PloneBundlesTraverser(ResourceTraverser):\n+    # the name is missleading - it is used not only for bundles.\n+    # in fact in Plone 6 bundles are no longer used, despite that the traverser\n+    # might be in use for other use cases.\n \n-    name = \'plone\'\n+    name = "plone"\n \n     def traverse(self, name, remaining):\n         # in case its not a request get the default one\n         req = getRequest()\n-        if not req or \'PATH_INFO\' not in req.environ:\n+        if not req or "PATH_INFO" not in req.environ:\n             return super().traverse(name, remaining)\n \n-        resource_path = req.environ[\'PATH_INFO\'].split(\'++plone++\')[-1]\n+        resource_path = req.environ["PATH_INFO"].split("++plone++")[-1]\n         try:\n-            resource_name, resource_filepath = resource_path.split(\'/\', 1)\n+            resource_name, resource_filepath = resource_path.split("/", 1)\n         except ValueError:\n             # Not the path info / url that we expected.\n             # So the request is not for a resource,\n@@ -44,15 +37,15 @@ def traverse(self, name, remaining):\n \n         # If we have additional traversers in the path we should not use them\n         # in the file lookup\n-        more_traversal = (resource_filepath.startswith(\'++\') or\n-                          resource_filepath.startswith(\'@@\'))\n-        if more_traversal:\n-            resource_filepath = resource_filepath.split(\'/\')[-1]\n+        if resource_filepath.startswith("++") or resource_filepath.startswith("@@"):\n+            resource_filepath = resource_filepath.split("/")[-1]\n \n         persistentDirectory = queryUtility(IResourceDirectory, name="persistent")\n         directory = None\n-        if (persistentDirectory is not None and\n-                OVERRIDE_RESOURCE_DIRECTORY_NAME in persistentDirectory):\n+        if (\n+            persistentDirectory is not None\n+            and OVERRIDE_RESOURCE_DIRECTORY_NAME in persistentDirectory\n+        ):\n             container = persistentDirectory[OVERRIDE_RESOURCE_DIRECTORY_NAME]\n             if resource_name in container:\n                 directory = container[resource_name]\ndiff --git a/news/3609.bugfix b/news/3609.bugfix\nnew file mode 100644\nindex 0000000000..47ffdc293f\n--- /dev/null\n+++ b/news/3609.bugfix\n@@ -0,0 +1,2 @@\n+In traversal.py remoe a Zope 4 BBB code, add a comment about bundle traverser and apply black.isort on the file.\n+[jensens]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-08-19T14:39:14+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/7a24e4d2054f1a60116b33f12d65c2949f1137d2

Merge pull request #3615 from plone/move-to-namedfile

move getQuality + getAllowedSizes to plone.namedfile.utils

Files changed:
A news/3615.bugfix
M Products/CMFPlone/configure.zcml
M Products/CMFPlone/utils.py

b'diff --git a/Products/CMFPlone/configure.zcml b/Products/CMFPlone/configure.zcml\nindex 0433f5a7e7..97b6876913 100644\n--- a/Products/CMFPlone/configure.zcml\n+++ b/Products/CMFPlone/configure.zcml\n@@ -127,18 +127,6 @@\n   <subscriber for="ZPublisher.interfaces.IPubAfterTraversal"\n               handler=".events.removeBase"/>\n \n-  <!-- configure sizes lookup for `plone.namedfile` -->\n-  <utility\n-      component=".utils.getAllowedSizes"\n-      provides="plone.namedfile.interfaces.IAvailableSizes"\n-      />\n-\n-  <!-- quality lookup for IScaledImageQuality -->\n-  <utility\n-      component=".utils.getQuality"\n-      provides="plone.scale.interfaces.IScaledImageQuality"\n-      />\n-\n   <adapter\n       for="zope.pagetemplate.engine.ZopeBaseEngine"\n       factory=".traversal.get_zope_page_template_engine"\ndiff --git a/Products/CMFPlone/utils.py b/Products/CMFPlone/utils.py\nindex 11eb7df766..6a2da74b8e 100644\n--- a/Products/CMFPlone/utils.py\n+++ b/Products/CMFPlone/utils.py\n@@ -80,6 +80,8 @@\n deprecated_import(\n     "Import from plone.namedfile.utils instead (will be removed in Plone 7)",\n     getHighPixelDensityScales="plone.namedfile.utils.getHighPixelDensityScales",\n+    getAllowedSizes="plone.namedfile.utils.getAllowedSizes",\n+    getQuality="plone.namedfile.utils.getQuality",\n )\n \n @deprecate("Use plone.base.utils.safe_bytes instead (will be removed in Plone 7)")\n@@ -490,33 +492,6 @@ def bodyfinder(text):\n     return text[bodystart:bodyend]\n \n \n-def getAllowedSizes():\n-    registry = queryUtility(IRegistry)\n-    if not registry:\n-        return None\n-    settings = registry.forInterface(\n-        IImagingSchema, prefix="plone", check=False)\n-    if not settings.allowed_sizes:\n-        return None\n-    sizes = {}\n-    for line in settings.allowed_sizes:\n-        line = line.strip()\n-        if line:\n-            name, width, height = pattern.match(line).groups()\n-            name = name.strip().replace(\' \', \'_\')\n-            sizes[name] = int(width), int(height)\n-    return sizes\n-\n-\n-def getQuality():\n-    registry = queryUtility(IRegistry)\n-    if registry:\n-        settings = registry.forInterface(\n-            IImagingSchema, prefix="plone", check=False)\n-        return settings.quality or QUALITY_DEFAULT\n-    return QUALITY_DEFAULT\n-\n-\n def getSiteLogo(site=None, include_type=False):\n     from plone.base.interfaces import ISiteSchema\n     from plone.formwidget.namedfile.converter import b64decode_file\ndiff --git a/news/3615.bugfix b/news/3615.bugfix\nnew file mode 100644\nindex 0000000000..45df6ff908\n--- /dev/null\n+++ b/news/3615.bugfix\n@@ -0,0 +1,3 @@\n+Move utils.getQuality and utils.getAllowedSizes to plone.namedfile.utils.\n+This helps untangling circular dependencies.\n+[jensens]\n'

