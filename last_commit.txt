Repository: plone.app.content


Branch: refs/heads/master
Date: 2017-10-12T19:38:38+02:00
Author: Tom Gross (tomgross) <itconsense@gmail.com>
Commit: https://github.com/plone/plone.app.content/commit/177a095ef67ef9c0456fe28baf45ad25a7170af8

Fix fulltext filter with alternative indexes plone/Products.CMFPlone#2174

Files changed:
M CHANGES.rst
M plone/app/content/browser/vocabulary.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 61486c3..4ceb4ef 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -23,6 +23,10 @@ Bug fixes:
 - Fix translations in the delete pop-over
   [arsenico13]
 
+- Fix and optimize *getVocabulary*-view to work with alternate fulltext
+  indexes, which don't return brains as search results
+  https://github.com/plone/Products.CMFPlone/issues/2174
+  [tomgross]
 
 3.4.4 (2017-08-27)
 ------------------
diff --git a/plone/app/content/browser/vocabulary.py b/plone/app/content/browser/vocabulary.py
index ff2054c..99ed903 100644
--- a/plone/app/content/browser/vocabulary.py
+++ b/plone/app/content/browser/vocabulary.py
@@ -210,6 +210,7 @@ def __call__(self):
             base_path = self.get_base_path(context)
             sm = getSecurityManager()
             can_edit = sm.checkPermission(DEFAULT_PERMISSION_SECURE, context)
+            mtt = getToolByName(self.context, 'mimetypes_registry')
             for vocab_item in results:
                 if not results_are_brains:
                     vocab_item = vocab_item.value
@@ -243,20 +244,17 @@ def __call__(self):
                     if key == 'getMimeIcon':
                         item[key] = None
                         # get mime type icon url from mimetype registry'
-                        navroot = self.get_base_path(vocab_item)
                         contenttype = aq_base(
                             getattr(vocab_item, 'mime_type', None))
                         if contenttype:
-                            mtt = getToolByName(
-                                self.context, 'mimetypes_registry')
                             ctype = mtt.lookup(contenttype)
-                            item[key] = os.path.join(
-                                navroot,
-                                guess_icon_path(ctype[0]))
+                            item[key] = '/'.join([
+                                base_path,
+                                guess_icon_path(ctype[0])])
                 items.append(item)
         else:
-            for item in results:
-                items.append({'id': item.value, 'text': item.title})
+            items = [{'id': item.value,
+                      'text': item.title} for item in results]
 
         if total == 0:
             total = len(items)


Repository: plone.app.content


Branch: refs/heads/master
Date: 2017-10-12T21:19:08+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.content/commit/fe0034c21d2f7266178eeba2f71835badc616a55

Merge pull request #141 from plone/tg-alternative_catalog

Fix fulltext filter with alternative indexes

Files changed:
M CHANGES.rst
M plone/app/content/browser/vocabulary.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 61486c3..4ceb4ef 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -23,6 +23,10 @@ Bug fixes:
 - Fix translations in the delete pop-over
   [arsenico13]
 
+- Fix and optimize *getVocabulary*-view to work with alternate fulltext
+  indexes, which don't return brains as search results
+  https://github.com/plone/Products.CMFPlone/issues/2174
+  [tomgross]
 
 3.4.4 (2017-08-27)
 ------------------
diff --git a/plone/app/content/browser/vocabulary.py b/plone/app/content/browser/vocabulary.py
index ff2054c..99ed903 100644
--- a/plone/app/content/browser/vocabulary.py
+++ b/plone/app/content/browser/vocabulary.py
@@ -210,6 +210,7 @@ def __call__(self):
             base_path = self.get_base_path(context)
             sm = getSecurityManager()
             can_edit = sm.checkPermission(DEFAULT_PERMISSION_SECURE, context)
+            mtt = getToolByName(self.context, 'mimetypes_registry')
             for vocab_item in results:
                 if not results_are_brains:
                     vocab_item = vocab_item.value
@@ -243,20 +244,17 @@ def __call__(self):
                     if key == 'getMimeIcon':
                         item[key] = None
                         # get mime type icon url from mimetype registry'
-                        navroot = self.get_base_path(vocab_item)
                         contenttype = aq_base(
                             getattr(vocab_item, 'mime_type', None))
                         if contenttype:
-                            mtt = getToolByName(
-                                self.context, 'mimetypes_registry')
                             ctype = mtt.lookup(contenttype)
-                            item[key] = os.path.join(
-                                navroot,
-                                guess_icon_path(ctype[0]))
+                            item[key] = '/'.join([
+                                base_path,
+                                guess_icon_path(ctype[0])])
                 items.append(item)
         else:
-            for item in results:
-                items.append({'id': item.value, 'text': item.title})
+            items = [{'id': item.value,
+                      'text': item.title} for item in results]
 
         if total == 0:
             total = len(items)


