Repository: plone.schemaeditor


Branch: refs/heads/master
Date: 2023-03-03T21:43:53+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.schemaeditor/commit/47e1326a2b67d1284c53cb8d0434c9f52e653131

Configuring with plone/meta

Files changed:
A .pre-commit-config.yaml
A news/13d8d6c0.internal
M .meta.toml
M setup.cfg
M tox.ini

b'diff --git a/.meta.toml b/.meta.toml\nindex 059fd58..faa8424 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -2,7 +2,7 @@\n # https://github.com/plone/meta/tree/master/config/default\n [meta]\n template = "default"\n-commit-id = "78307cdf"\n+commit-id = "13d8d6c0"\n \n [dependencies]\n mappings = [\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nnew file mode 100644\nindex 0000000..582f8ac\n--- /dev/null\n+++ b/.pre-commit-config.yaml\n@@ -0,0 +1,42 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+ci:\n+    autofix_prs: false\n+    autoupdate_schedule: monthly\n+\n+repos:\n+-   repo: https://github.com/asottile/pyupgrade\n+    rev: v3.3.1\n+    hooks:\n+    -   id: pyupgrade\n+        args: [--py38-plus]\n+-   repo: https://github.com/pycqa/isort\n+    rev: 5.12.0\n+    hooks:\n+    -   id: isort\n+-   repo: https://github.com/psf/black\n+    rev: 23.1.0\n+    hooks:\n+    -   id: black\n+-   repo: https://github.com/collective/zpretty\n+    rev: 3.0.2\n+    hooks:\n+    -   id: zpretty\n+-   repo: https://github.com/PyCQA/flake8\n+    rev: 6.0.0\n+    hooks:\n+    -   id: flake8\n+-   repo: https://github.com/codespell-project/codespell\n+    rev: v2.2.2\n+    hooks:\n+    -   id: codespell\n+        additional_dependencies:\n+          - tomli\n+-   repo: https://github.com/mgedmin/check-manifest\n+    rev: "0.49"\n+    hooks:\n+    -   id: check-manifest\n+-   repo: https://github.com/regebro/pyroma\n+    rev: "4.2"\n+    hooks:\n+    -   id: pyroma\ndiff --git a/news/13d8d6c0.internal b/news/13d8d6c0.internal\nnew file mode 100644\nindex 0000000..c08f539\n--- /dev/null\n+++ b/news/13d8d6c0.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/setup.cfg b/setup.cfg\nindex 8849fbc..e70eb25 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -19,5 +19,6 @@ ignore =\n ignore =\n     .editorconfig\n     .meta.toml\n+    .pre-commit-config.yaml\n     tox.ini\n     lint-requirements.txt\ndiff --git a/tox.ini b/tox.ini\nindex c4810c9..fe54390 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -4,47 +4,47 @@\n envlist =\n     format\n     lint\n+    test\n \n [testenv]\n-py_files = git ls-files "*.py"\n-text_files = git ls-files "*.rst" "*.md"\n allowlist_externals =\n     sh\n \n [testenv:format]\n-description = automatically reformat python code\n+description = automatically reformat code\n skip_install = true\n deps =\n-    pyupgrade\n-    isort\n-    black\n-    -c lint-requirements.txt\n+    pre-commit\n commands =\n-    sh -c \'{[testenv]py_files} | xargs pyupgrade --py38-plus\'\n-    sh -c \'{[testenv]py_files} | xargs isort\'\n-    sh -c \'{[testenv]py_files} | xargs black\'\n+    pre-commit run -a pyupgrade\n+    pre-commit run -a isort\n+    pre-commit run -a black\n+    pre-commit run -a zpretty\n \n [testenv:lint]\n description = run linters that will help improve the code style\n skip_install = true\n deps =\n-    flake8\n-    codespell\n-    tomli  # needed for codespell to read pyproject.toml\n-    check-manifest\n-    pyroma\n-    -c lint-requirements.txt\n+    pre-commit\n commands =\n-    sh -c \'{[testenv]py_files} | xargs flake8\'\n-    sh -c \'{[testenv]py_files} | xargs codespell\'\n-    sh -c \'{[testenv]text_files} | xargs codespell\'\n-    check-manifest\n-    pyroma -n 10 .\n+    pre-commit run -a\n \n [testenv:dependencies]\n-description = check if the package defines all its dependencies\n+description = check if the package defines all its dependencies and generate a graph out of them\n deps =\n-    z3c.dependencychecker\n-    -c lint-requirements.txt\n+    z3c.dependencychecker==2.11\n+    pipdeptree==2.5.1\n+    graphviz  # optional dependency of pipdeptree\n commands =\n     dependencychecker\n+    sh -c \'pipdeptree --exclude setuptools,pipdeptree,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+\n+[testenv:test]\n+usedevelop = true\n+deps =\n+    zope.testrunner\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    zope-testrunner --test-path={toxinidir} -s plone.schemaeditor\n+extras =\n+    test\n'

Repository: plone.schemaeditor


Branch: refs/heads/master
Date: 2023-03-03T22:16:31+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.schemaeditor/commit/83a966ca521bec65aad395ec63d6cf05785bf09a

chore: black

Files changed:
M plone/schemaeditor/browser/field/edit.py
M plone/schemaeditor/browser/schema/add_field.py
M plone/schemaeditor/browser/schema/add_fieldset.py
M plone/schemaeditor/browser/schema/listing.py
M plone/schemaeditor/fields.py
M plone/schemaeditor/interfaces.py
M plone/schemaeditor/schema.py
M plone/schemaeditor/testing.py
M plone/schemaeditor/tests/fixtures.py
M plone/schemaeditor/tests/test_fields.py

b'diff --git a/plone/schemaeditor/browser/field/edit.py b/plone/schemaeditor/browser/field/edit.py\nindex 916af35..c980812 100644\n--- a/plone/schemaeditor/browser/field/edit.py\n+++ b/plone/schemaeditor/browser/field/edit.py\n@@ -67,7 +67,6 @@ def __get__(self, inst, cls=None):\n \n @implementer(IFieldProxy)\n class FieldProxy:\n-\n     __providedBy__ = FieldProxySpecification()\n \n     def __init__(self, context):\ndiff --git a/plone/schemaeditor/browser/schema/add_field.py b/plone/schemaeditor/browser/schema/add_field.py\nindex 9546921..615fc25 100644\n--- a/plone/schemaeditor/browser/schema/add_field.py\n+++ b/plone/schemaeditor/browser/schema/add_field.py\n@@ -22,7 +22,6 @@\n \n \n class FieldAddForm(AutoExtensibleForm, form.AddForm):\n-\n     fields = field.Fields(interfaces.INewField)\n     label = _("Add new field")\n     id = "add-field-form"\ndiff --git a/plone/schemaeditor/browser/schema/add_fieldset.py b/plone/schemaeditor/browser/schema/add_fieldset.py\nindex 3d4d81b..58f076e 100644\n--- a/plone/schemaeditor/browser/schema/add_fieldset.py\n+++ b/plone/schemaeditor/browser/schema/add_fieldset.py\n@@ -16,7 +16,6 @@\n \n \n class FieldsetAddForm(form.AddForm):\n-\n     fields = field.Fields(INewFieldset)\n     label = _("Add new fieldset")\n     id = "add-fieldset-form"\ndiff --git a/plone/schemaeditor/browser/schema/listing.py b/plone/schemaeditor/browser/schema/listing.py\nindex c620403..8798fd4 100644\n--- a/plone/schemaeditor/browser/schema/listing.py\n+++ b/plone/schemaeditor/browser/schema/listing.py\n@@ -23,7 +23,6 @@\n \n @implementer(IEditForm)\n class SchemaListing(AutoExtensibleForm, form.Form):\n-\n     ignoreContext = True\n     ignoreRequest = True\n     showEmptyGroups = True\ndiff --git a/plone/schemaeditor/fields.py b/plone/schemaeditor/fields.py\nindex a6c00f4..904d8d7 100644\n--- a/plone/schemaeditor/fields.py\n+++ b/plone/schemaeditor/fields.py\n@@ -29,7 +29,6 @@ def getFirstFieldSchema(field):\n \n @implementer(IFieldFactory)\n class FieldFactory:\n-\n     title = ""\n \n     def __init__(self, fieldcls, title, *args, **kw):\n@@ -65,7 +64,7 @@ def FieldsVocabularyFactory(context):\n             (id, factory) for id, factory in field_factories if id in allowedFields\n         ]\n     terms = []\n-    for (field_id, factory) in field_factories:\n+    for field_id, factory in field_factories:\n         terms.append(\n             SimpleVocabulary.createTerm(\n                 factory, factory.title, translate(factory.title, context=request)\ndiff --git a/plone/schemaeditor/interfaces.py b/plone/schemaeditor/interfaces.py\nindex f7d17bd..2c88ac6 100644\n--- a/plone/schemaeditor/interfaces.py\n+++ b/plone/schemaeditor/interfaces.py\n@@ -47,7 +47,6 @@ class ISchemaContext(IItem):\n \n \n class ISchemaModifiedEvent(IObjectEvent):\n-\n     object = Object(schema=ISchemaContext)\n \n \n@@ -142,7 +141,6 @@ def isValidFieldName(value):\n \n \n class INewField(Interface):\n-\n     fieldset_id = Int(\n         title=_("Fieldset ID"),\n         description=_("Used to decide where to put this field."),\n@@ -192,7 +190,6 @@ def checkTitleAndDescriptionTypes(data):\n \n \n class INewFieldset(Interface):\n-\n     label = TextLine(title=_("Title"), required=True)\n \n     __name__ = ASCIILine(\ndiff --git a/plone/schemaeditor/schema.py b/plone/schemaeditor/schema.py\nindex c4d1e58..f9dc149 100644\n--- a/plone/schemaeditor/schema.py\n+++ b/plone/schemaeditor/schema.py\n@@ -18,7 +18,6 @@ class IBool(interfaces.IBool, interfaces.IFromUnicode):\n \n \n class IFloat(interfaces.IFloat, interfaces.IFromUnicode):\n-\n     min = schema.Float(\n         title=interfaces.IFloat["min"].title,\n         required=interfaces.IFloat["min"].required,\n@@ -33,7 +32,6 @@ class IFloat(interfaces.IFloat, interfaces.IFromUnicode):\n \n \n class IDatetime(IDatetimeField):\n-\n     min = schema.Datetime(\n         title=interfaces.IDatetime["min"].title,\n         required=interfaces.IDatetime["min"].required,\n@@ -48,7 +46,6 @@ class IDatetime(IDatetimeField):\n \n \n class IDate(IDateField):\n-\n     min = schema.Date(\n         title=interfaces.IDate["min"].title,\n         required=interfaces.IDate["min"].required,\n@@ -72,7 +69,6 @@ class ITextLinesField(interfaces.IList):\n \n \n class ITextLineChoice(interfaces.IField):\n-\n     values = schema.List(\n         title=_("Possible values"),\n         description=_("Enter allowed choices one per line."),\ndiff --git a/plone/schemaeditor/testing.py b/plone/schemaeditor/testing.py\nindex 266c380..9d49130 100644\n--- a/plone/schemaeditor/testing.py\n+++ b/plone/schemaeditor/testing.py\n@@ -7,7 +7,6 @@\n \n \n class PloneSchemaeditorRobotLayer(PloneSandboxLayer):\n-\n     defaultBases = (PLONE_FIXTURE,)\n \n \ndiff --git a/plone/schemaeditor/tests/fixtures.py b/plone/schemaeditor/tests/fixtures.py\nindex 6ac95fa..7988246 100644\n--- a/plone/schemaeditor/tests/fixtures.py\n+++ b/plone/schemaeditor/tests/fixtures.py\n@@ -9,7 +9,6 @@\n \n \n class IDummySchema(Interface):\n-\n     model.fieldset("alpha", fields=["fieldA"])\n \n     field1 = schema.TextLine()\n@@ -35,7 +34,6 @@ def log_event(object, event):\n \n \n class EditForm(EditForm):\n-\n     ignoreContext = True\n     ignoreRequest = True\n \n@@ -57,12 +55,10 @@ def __call__(self, context):\n \n \n class CountriesVocabulary(BaseVocabulary):\n-\n     values_list = [("fr", "France"), ("uk", "United Kingdom"), ("es", "Spain")]\n \n \n class CategoriesVocabulary(BaseVocabulary):\n-\n     values_list = [("php", "PHP"), ("c", "C"), ("ruby", "Ruby")]\n \n \ndiff --git a/plone/schemaeditor/tests/test_fields.py b/plone/schemaeditor/tests/test_fields.py\nindex a1886ce..ff6bfaa 100644\n--- a/plone/schemaeditor/tests/test_fields.py\n+++ b/plone/schemaeditor/tests/test_fields.py\n@@ -16,7 +16,6 @@ def __init__(self):\n \n \n class VocabularyTestCase(unittest.TestCase):\n-\n     layer = PLONE_FIXTURE\n \n     def assertVocabulary(self, voc, values):\n'

Repository: plone.schemaeditor


Branch: refs/heads/master
Date: 2023-03-03T22:42:17+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.schemaeditor/commit/9e206a275b6a6d96a153b2b75820bd01994e0216

chore: zpretty

Files changed:
M plone/schemaeditor/browser/configure.zcml
M plone/schemaeditor/browser/field/configure.zcml
M plone/schemaeditor/browser/field/edit.pt
M plone/schemaeditor/browser/schema/add.pt
M plone/schemaeditor/browser/schema/configure.zcml
M plone/schemaeditor/browser/schema/schema_listing.pt
M plone/schemaeditor/configure.zcml
M plone/schemaeditor/fields.zcml
M plone/schemaeditor/schema.zcml
M plone/schemaeditor/tests/browser_testing.zcml
M plone/schemaeditor/tests/layout.pt
M plone/schemaeditor/tests/robot_testing.zcml

b'diff --git a/plone/schemaeditor/browser/configure.zcml b/plone/schemaeditor/browser/configure.zcml\nindex 12741aa..50f27b0 100644\n--- a/plone/schemaeditor/browser/configure.zcml\n+++ b/plone/schemaeditor/browser/configure.zcml\n@@ -1,9 +1,10 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:browser="http://namespaces.zope.org/browser"\n-    i18n_domain="plone">\n+    i18n_domain="plone"\n+    >\n \n-    <include package=".field"/>\n-    <include package=".schema" />\n+  <include package=".field" />\n+  <include package=".schema" />\n \n </configure>\ndiff --git a/plone/schemaeditor/browser/field/configure.zcml b/plone/schemaeditor/browser/field/configure.zcml\nindex ae96117..79a2396 100644\n--- a/plone/schemaeditor/browser/field/configure.zcml\n+++ b/plone/schemaeditor/browser/field/configure.zcml\n@@ -1,42 +1,42 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n-    xmlns:five="http://namespaces.zope.org/five"\n     xmlns:browser="http://namespaces.zope.org/browser"\n-    i18n_domain="plone">\n+    xmlns:five="http://namespaces.zope.org/five"\n+    i18n_domain="plone"\n+    >\n \n-    <browser:page\n-        name="edit"\n-        for="...interfaces.IFieldContext"\n-        class=".edit.EditView"\n-        permission="plone.schemaeditor.ManageSchemata" />\n+  <browser:page\n+      name="edit"\n+      for="...interfaces.IFieldContext"\n+      class=".edit.EditView"\n+      permission="plone.schemaeditor.ManageSchemata"\n+      />\n \n-    <adapter\n-        factory=".edit.FieldTitleAdapter" />\n-    <adapter\n-        factory=".edit.FieldDataManager" />\n+  <adapter factory=".edit.FieldTitleAdapter" />\n+  <adapter factory=".edit.FieldDataManager" />\n \n-    <browser:page\n-        name="order"\n-        for="...interfaces.IFieldContext"\n-        class=".order.FieldOrderView"\n-        attribute="move"\n-        permission="plone.schemaeditor.ManageSchemata"\n-        />\n+  <browser:page\n+      name="order"\n+      for="...interfaces.IFieldContext"\n+      class=".order.FieldOrderView"\n+      attribute="move"\n+      permission="plone.schemaeditor.ManageSchemata"\n+      />\n \n-    <browser:page\n-        name="delete"\n-        for="...interfaces.IFieldContext"\n-        class=".order.FieldOrderView"\n-        attribute="delete"\n-        permission="plone.schemaeditor.ManageSchemata"\n-        />\n+  <browser:page\n+      name="delete"\n+      for="...interfaces.IFieldContext"\n+      class=".order.FieldOrderView"\n+      attribute="delete"\n+      permission="plone.schemaeditor.ManageSchemata"\n+      />\n \n-    <browser:page\n-        name="changefieldset"\n-        for="...interfaces.IFieldContext"\n-        class=".fieldset.ChangeFieldsetView"\n-        attribute="change"\n-        permission="plone.schemaeditor.ManageSchemata"\n-        />\n+  <browser:page\n+      name="changefieldset"\n+      for="...interfaces.IFieldContext"\n+      class=".fieldset.ChangeFieldsetView"\n+      attribute="change"\n+      permission="plone.schemaeditor.ManageSchemata"\n+      />\n \n </configure>\ndiff --git a/plone/schemaeditor/browser/field/edit.pt b/plone/schemaeditor/browser/field/edit.pt\nindex 7e57c61..8be8ef3 100644\n--- a/plone/schemaeditor/browser/field/edit.pt\n+++ b/plone/schemaeditor/browser/field/edit.pt\n@@ -1,14 +1,18 @@\n-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"\n-      xmlns:tal="http://xml.zope.org/namespaces/tal"\n-      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+<html xmlns="http://www.w3.org/1999/xhtml"\n       xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+      xmlns:tal="http://xml.zope.org/namespaces/tal"\n       lang="en"\n-      i18n:domain="plone">\n+      xml:lang="en"\n+      i18n:domain="plone"\n+>\n \n-<body>\n-    <h1 class="documentFirstHeading" tal:content="view/label"></h1>\n+  <body>\n+    <h1 class="documentFirstHeading"\n+        tal:content="view/label"\n+    ></h1>\n     <div id="content">\n-        <tal:block tal:replace="structure view/contents|view/render"/>\n+      <tal:block tal:replace="structure view/contents|view/render" />\n     </div>\n-</body>\n+  </body>\n </html>\ndiff --git a/plone/schemaeditor/browser/schema/add.pt b/plone/schemaeditor/browser/schema/add.pt\nindex 7e57c61..8be8ef3 100644\n--- a/plone/schemaeditor/browser/schema/add.pt\n+++ b/plone/schemaeditor/browser/schema/add.pt\n@@ -1,14 +1,18 @@\n-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"\n-      xmlns:tal="http://xml.zope.org/namespaces/tal"\n-      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+<html xmlns="http://www.w3.org/1999/xhtml"\n       xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+      xmlns:tal="http://xml.zope.org/namespaces/tal"\n       lang="en"\n-      i18n:domain="plone">\n+      xml:lang="en"\n+      i18n:domain="plone"\n+>\n \n-<body>\n-    <h1 class="documentFirstHeading" tal:content="view/label"></h1>\n+  <body>\n+    <h1 class="documentFirstHeading"\n+        tal:content="view/label"\n+    ></h1>\n     <div id="content">\n-        <tal:block tal:replace="structure view/contents|view/render"/>\n+      <tal:block tal:replace="structure view/contents|view/render" />\n     </div>\n-</body>\n+  </body>\n </html>\ndiff --git a/plone/schemaeditor/browser/schema/configure.zcml b/plone/schemaeditor/browser/schema/configure.zcml\nindex 4ee240e..5b2065e 100644\n--- a/plone/schemaeditor/browser/schema/configure.zcml\n+++ b/plone/schemaeditor/browser/schema/configure.zcml\n@@ -1,34 +1,36 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n-    xmlns:five="http://namespaces.zope.org/five"\n     xmlns:browser="http://namespaces.zope.org/browser"\n-    i18n_domain="plone">\n+    xmlns:five="http://namespaces.zope.org/five"\n+    i18n_domain="plone"\n+    >\n \n   <browser:page\n       name="edit"\n       for="plone.schemaeditor.interfaces.ISchemaContext"\n       class=".listing.SchemaListingPage"\n-      permission="plone.schemaeditor.ManageSchemata" />\n+      permission="plone.schemaeditor.ManageSchemata"\n+      />\n \n   <browser:page\n-    name="add-field"\n-    for="plone.schemaeditor.interfaces.ISchemaContext"\n-    class=".add_field.FieldAddFormPage"\n-    permission="plone.schemaeditor.ManageSchemata"\n-    />\n+      name="add-field"\n+      for="plone.schemaeditor.interfaces.ISchemaContext"\n+      class=".add_field.FieldAddFormPage"\n+      permission="plone.schemaeditor.ManageSchemata"\n+      />\n \n   <browser:page\n-    name="add-fieldset"\n-    for="plone.schemaeditor.interfaces.ISchemaContext"\n-    class=".add_fieldset.FieldsetAddFormPage"\n-    permission="plone.schemaeditor.ManageSchemata"\n-    />\n+      name="add-fieldset"\n+      for="plone.schemaeditor.interfaces.ISchemaContext"\n+      class=".add_fieldset.FieldsetAddFormPage"\n+      permission="plone.schemaeditor.ManageSchemata"\n+      />\n \n   <browser:page\n-    name="delete-fieldset"\n-    for="plone.schemaeditor.interfaces.ISchemaContext"\n-    class=".delete_fieldset.DeleteFieldset"\n-    permission="plone.schemaeditor.ManageSchemata"\n-    />\n+      name="delete-fieldset"\n+      for="plone.schemaeditor.interfaces.ISchemaContext"\n+      class=".delete_fieldset.DeleteFieldset"\n+      permission="plone.schemaeditor.ManageSchemata"\n+      />\n \n </configure>\ndiff --git a/plone/schemaeditor/browser/schema/schema_listing.pt b/plone/schemaeditor/browser/schema/schema_listing.pt\nindex a66b911..ebc364a 100644\n--- a/plone/schemaeditor/browser/schema/schema_listing.pt\n+++ b/plone/schemaeditor/browser/schema/schema_listing.pt\n@@ -1,17 +1,23 @@\n-<div xmlns:tal="http://xml.zope.org/namespaces/tal"\n+<div xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n      xmlns:metal="http://xml.zope.org/namespaces/metal"\n-     xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+     xmlns:tal="http://xml.zope.org/namespaces/tal"\n+     class="pat-schemaeditor"\n      i18n:domain="plone"\n-     class="pat-schemaeditor">\n-  <a id="add-field" class="pat-plone-modal btn btn-secondary float-end ms-3"\n+>\n+  <a class="pat-plone-modal btn btn-secondary float-end ms-3"\n+     id="add-field"\n      href="${context/absolute_url}/@@add-field"\n-     i18n:translate="add_new_field_hellip">\n+     i18n:translate="add_new_field_hellip"\n+  >\n      Add new field&hellip;\n   </a>\n \n-  <a id="add-fieldset" class="pat-plone-modal btn btn-secondary float-end" tal:condition="context/enableFieldsets"\n+  <a class="pat-plone-modal btn btn-secondary float-end"\n+     id="add-fieldset"\n      href="${context/absolute_url}/@@add-fieldset"\n-     i18n:translate="add_fieldset_hellip">\n+     tal:condition="context/enableFieldsets"\n+     i18n:translate="add_fieldset_hellip"\n+  >\n      Add new fieldset&hellip;\n   </a>\n \n@@ -74,16 +80,25 @@\n     <metal:fields-slot metal:fill-slot="fields">\n \n       <tal:block tal:repeat="group python:[view] + list(view.groups)">\n-        <fieldset tal:define="fieldset_name repeat/group/index;\n-                              can_delete python:view.can_delete_fieldset(group);"\n-                  tal:attributes="id string:fieldset-${fieldset_name};\n-                                  class string:kssattr-fieldset-${fieldset_name};\n-                                  data-can-add-fields python:(repeat[\'group\'].start or can_delete) and \'true\' or \'false\'">\n-\n-          <legend tal:define="group_name python:group.label or view.default_fieldset_label"\n-                  tal:content="group_name">Fieldset name</legend>\n-\n-          <a id="delete-fieldset-${fieldset_name}" class="btn btn-sm btn-danger" tal:condition="python:context.enableFieldsets and can_delete"\n+        <fieldset tal:define="\n+                    fieldset_name repeat/group/index;\n+                    can_delete python:view.can_delete_fieldset(group);\n+                  "\n+                  tal:attributes="\n+                    id string:fieldset-${fieldset_name};\n+                    class string:kssattr-fieldset-${fieldset_name};\n+                    data-can-add-fields python:(repeat[\'group\'].start or can_delete) and \'true\' or \'false\';\n+                  "\n+        >\n+\n+          <legend tal:define="\n+                    group_name python:group.label or view.default_fieldset_label;\n+                  "\n+                  tal:content="group_name"\n+          >Fieldset name</legend>\n+\n+          <a class="btn btn-sm btn-danger"\n+             id="delete-fieldset-${fieldset_name}"\n              href="${context/absolute_url}/@@delete-fieldset?name=${python:group.__name__}&_authenticator=${context/@@authenticator/token}"\n                   i18n:translate="delete_fieldset_hellip">Delete fieldset\n           </a>\n@@ -101,47 +116,70 @@\n             <tal:block\n               tal:define="\n                 disabled widget/disabled|nothing;\n-                protected python:view.protected_field(widget.field);">\n-\n-              <div tal:condition="python:disabled or protected" class="fieldPreview fieldFromBehavior">\n-                <div class="fieldLabel">\n-                    <tal:block tal:condition="disabled" i18n:translate="">From the\n-                      <tal:block i18n:name="behavior_name" tal:replace="python:widget.__name__.split(\'.\')[0]"/> behavior:</tal:block>\n-                    <strong tal:content="widget/field/__name__" /> &ndash;\n-                    <tal:block tal:content="python:view.field_type(widget.field)"/>\n-                </div>\n-                <tal:field tal:replace="structure widget/@@ploneform-render-widget" />\n-                <div class="disabled-field-overlay"></div>\n+                protected python:view.protected_field(widget.field);"\n+          >\n+\n+            <div class="fieldPreview fieldFromBehavior"\n+                 tal:condition="python:disabled or protected"\n+            >\n+              <div class="fieldLabel">\n+                <tal:block tal:condition="disabled"\n+                           i18n:translate=""\n+                >From the\n+                  <tal:block tal:replace="python:widget.__name__.split(\'.\')[0]"\n+                             i18n:name="behavior_name"\n+                  />\n+                  behavior:</tal:block>\n+                <strong tal:content="widget/field/__name__"></strong>\n+                 &ndash;\n+                <tal:block tal:content="python:view.field_type(widget.field)" />\n+              </div>\n+              <tal:field tal:replace="structure widget/@@ploneform-render-widget" />\n+              <div class="disabled-field-overlay"></div>\n+            </div>\n+\n+            <div class="fieldPreview orderable"\n+                 tal:condition="python:not(disabled or protected)"\n+                 tal:attributes="\n+                   data-field_id widget/field/__name__;\n+                 "\n+            >\n+\n+              <div class="fieldLabel">\n+                <strong tal:content="widget/field/__name__"></strong>\n+                 &ndash;\n+                <tal:block tal:content="python:view.field_type(widget.field)" />\n               </div>\n \n-              <div tal:condition="python:not(disabled or protected)"\n-                   class="fieldPreview orderable" tal:attributes="data-field_id widget/field/__name__">\n-\n-                <div class="fieldLabel">\n-                    <strong tal:content="widget/field/__name__" /> &ndash;\n-                    <tal:block tal:content="python:view.field_type(widget.field)"/>\n-                </div>\n-\n-                <div class="fieldControls">\n-                    <a class="fieldSettings pat-plone-modal btn btn-sm btn-secondary"\n-                       tal:define="edit_url python:view.edit_url(widget.field)"\n-                       tal:condition="edit_url"\n-                       i18n:translate=""\n-                       tal:attributes="href edit_url">Settings&hellip;</a>\n-                    <a class="schemaeditor-delete-field btn btn-sm btn-danger ms-1"\n-                       i18n:attributes="title; data-confirm_msg"\n-                       title="Delete field"\n-                       data-confirm_msg="Are you sure you want to delete this field?"\n-                       tal:define="delete_url python:view.delete_url(widget.field)"\n-                       tal:condition="delete_url"\n-                       tal:attributes="href delete_url">&times;</a>\n-                </div>\n-\n-                <div style="width: 80%">\n-                  <tal:field tal:replace="structure widget/@@ploneform-render-widget" />\n-                </div>\n+              <div class="fieldControls">\n+                <a class="fieldSettings pat-plone-modal btn btn-sm btn-secondary"\n+                   tal:define="\n+                     edit_url python:view.edit_url(widget.field);\n+                   "\n+                   tal:condition="edit_url"\n+                   tal:attributes="\n+                     href edit_url;\n+                   "\n+                   i18n:translate=""\n+                >Settings&hellip;</a>\n+                <a class="schemaeditor-delete-field btn btn-sm btn-danger ms-1"\n+                   title="Delete field"\n+                   data-confirm_msg="Are you sure you want to delete this field?"\n+                   tal:define="\n+                     delete_url python:view.delete_url(widget.field);\n+                   "\n+                   tal:condition="delete_url"\n+                   tal:attributes="\n+                     href delete_url;\n+                   "\n+                   i18n:attributes="title; data-confirm_msg"\n+                >&times;</a>\n+              </div>\n \n+              <div style="width: 80%">\n+                <tal:field tal:replace="structure widget/@@ploneform-render-widget" />\n               </div>\n+            </div>\n             </tal:block>\n \n           </tal:widgets>\ndiff --git a/plone/schemaeditor/configure.zcml b/plone/schemaeditor/configure.zcml\nindex d4b60bb..55a506f 100644\n--- a/plone/schemaeditor/configure.zcml\n+++ b/plone/schemaeditor/configure.zcml\n@@ -2,27 +2,30 @@\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:five="http://namespaces.zope.org/five"\n     xmlns:i18n="http://namespaces.zope.org/i18n"\n-    i18n_domain="plone">\n+    i18n_domain="plone"\n+    >\n \n-  <include package="plone.z3cform"/>\n-  <include package="plone.protect"/>\n-  <include package="Products.statusmessages"/>\n+  <include package="plone.z3cform" />\n+  <include package="plone.protect" />\n+  <include package="Products.statusmessages" />\n \n-  <include file="schema.zcml"/>\n+  <include file="schema.zcml" />\n \n   <permission\n       id="plone.schemaeditor.ManageSchemata"\n       title="Manage schemata"\n-  />\n+      />\n \n   <!-- adapter for adding/removing fields on schemata -->\n-  <adapter factory=".utils.EditableSchema"/>\n+  <adapter factory=".utils.EditableSchema" />\n \n-  <include file="fields.zcml"/>\n-  <include package=".browser"/>\n+  <include file="fields.zcml" />\n+  <include package=".browser" />\n \n-  <utility factory=".vocabularies.VocabulariesVocabulary"\n+  <utility\n+      factory=".vocabularies.VocabulariesVocabulary"\n+      provides="zope.schema.interfaces.IVocabularyFactory"\n       name="plone.schemaeditor.VocabulariesVocabulary"\n-      provides="zope.schema.interfaces.IVocabularyFactory"/>\n+      />\n \n </configure>\ndiff --git a/plone/schemaeditor/fields.zcml b/plone/schemaeditor/fields.zcml\nindex 1632c07..ef1d297 100644\n--- a/plone/schemaeditor/fields.zcml\n+++ b/plone/schemaeditor/fields.zcml\n@@ -1,13 +1,14 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n-    i18n_domain="plone">\n+    i18n_domain="plone"\n+    >\n \n   <adapter factory=".fields.getFirstFieldSchema" />\n \n   <utility\n-      component=".fields.FieldsVocabularyFactory"\n       provides="zope.schema.interfaces.IVocabularyFactory"\n       name="Fields"\n+      component=".fields.FieldsVocabularyFactory"\n       />\n \n   <utility\ndiff --git a/plone/schemaeditor/schema.zcml b/plone/schemaeditor/schema.zcml\nindex 1bfd6c5..3fcb565 100644\n--- a/plone/schemaeditor/schema.zcml\n+++ b/plone/schemaeditor/schema.zcml\n@@ -1,5 +1,4 @@\n-<configure\n-    xmlns="http://namespaces.zope.org/zope">\n+<configure xmlns="http://namespaces.zope.org/zope">\n \n   <class class="zope.schema.Bool">\n     <implements interface=".schema.IBool" />\ndiff --git a/plone/schemaeditor/tests/browser_testing.zcml b/plone/schemaeditor/tests/browser_testing.zcml\nindex bda61df..4678e86 100644\n--- a/plone/schemaeditor/tests/browser_testing.zcml\n+++ b/plone/schemaeditor/tests/browser_testing.zcml\n@@ -1,74 +1,89 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:browser="http://namespaces.zope.org/browser"\n-    xmlns:zcml="http://namespaces.zope.org/zcml">\n+    xmlns:zcml="http://namespaces.zope.org/zcml"\n+    >\n \n-    <!-- only load PageTemplates zcml in Zope 4 -->\n-    <configure zcml:condition="installed Products.PageTemplates.engine">\n-        <include package="Products.PageTemplates" />\n-    </configure>\n+  <!-- only load PageTemplates zcml in Zope 4 -->\n+  <configure zcml:condition="installed Products.PageTemplates.engine">\n+    <include package="Products.PageTemplates" />\n+  </configure>\n \n-    <include package="Products.GenericSetup" file="meta.zcml" />\n-    <include package="Products.Five" file="meta.zcml" />\n-    <include package="Products.Five" />\n-    <include package="plone.schemaeditor"/>\n+  <include\n+      package="Products.GenericSetup"\n+      file="meta.zcml"\n+      />\n+  <include\n+      package="Products.Five"\n+      file="meta.zcml"\n+      />\n+  <include package="Products.Five" />\n+  <include package="plone.schemaeditor" />\n \n-    <!-- dummy keyring -->\n-    <utility component=".fixtures.DummyKeyManager"\n-             provides="plone.keyring.interfaces.IKeyManager" />\n+  <!-- dummy keyring -->\n+  <utility\n+      provides="plone.keyring.interfaces.IKeyManager"\n+      component=".fixtures.DummyKeyManager"\n+      />\n \n-    <!-- dummy schema editing context -->\n-    <browser:page\n-        name="schemaeditor"\n-        for="*"\n-        class=".fixtures.DummySchemaContext"\n-        permission="plone.schemaeditor.ManageSchemata"\n-        allowed_interface="OFS.interfaces.IItem" />\n+  <!-- dummy schema editing context -->\n+  <browser:page\n+      name="schemaeditor"\n+      for="*"\n+      class=".fixtures.DummySchemaContext"\n+      allowed_interface="OFS.interfaces.IItem"\n+      permission="plone.schemaeditor.ManageSchemata"\n+      />\n \n-    <subscriber\n-        for="plone.schemaeditor.interfaces.IField\n-             zope.lifecycleevent.interfaces.IObjectModifiedEvent"\n-        handler=".fixtures.log_event"\n-        />\n-    <subscriber\n-        for="plone.schemaeditor.interfaces.IField\n-             zope.lifecycleevent.interfaces.IObjectMovedEvent"\n-        handler=".fixtures.log_event"\n-        />\n-    <subscriber\n-        for="zope.interface.interfaces.IInterface\n-             zope.container.interfaces.IContainerModifiedEvent"\n-        handler=".fixtures.log_event"\n-        />\n-    <subscriber\n-        for="plone.schemaeditor.interfaces.ISchemaContext\n-             plone.schemaeditor.interfaces.ISchemaModifiedEvent"\n-        handler=".fixtures.log_event"\n-        />\n+  <subscriber\n+      for="plone.schemaeditor.interfaces.IField\n+           zope.lifecycleevent.interfaces.IObjectModifiedEvent"\n+      handler=".fixtures.log_event"\n+      />\n+  <subscriber\n+      for="plone.schemaeditor.interfaces.IField\n+           zope.lifecycleevent.interfaces.IObjectMovedEvent"\n+      handler=".fixtures.log_event"\n+      />\n+  <subscriber\n+      for="zope.interface.interfaces.IInterface\n+           zope.container.interfaces.IContainerModifiedEvent"\n+      handler=".fixtures.log_event"\n+      />\n+  <subscriber\n+      for="plone.schemaeditor.interfaces.ISchemaContext\n+           plone.schemaeditor.interfaces.ISchemaModifiedEvent"\n+      handler=".fixtures.log_event"\n+      />\n \n-    <!-- use a form layout that doesn\'t pull in main_template -->\n-    <adapter factory=".tests.layout_factory"/>\n+  <!-- use a form layout that doesn\'t pull in main_template -->\n+  <adapter factory=".tests.layout_factory" />\n \n-    <!-- provide a widget renderer a la plone.app.z3cform -->\n-    <browser:page\n-        name="ploneform-render-widget"\n-        for="z3c.form.interfaces.IWidget"\n-        class=".tests.RenderWidget"\n-        permission="zope2.View"\n-        />\n+  <!-- provide a widget renderer a la plone.app.z3cform -->\n+  <browser:page\n+      name="ploneform-render-widget"\n+      for="z3c.form.interfaces.IWidget"\n+      class=".tests.RenderWidget"\n+      permission="zope2.View"\n+      />\n \n-    <browser:page\n-        name="contexteditor"\n-        for="*"\n-        class=".fixtures.EditView"\n-        permission="plone.schemaeditor.ManageSchemata" />\n+  <browser:page\n+      name="contexteditor"\n+      for="*"\n+      class=".fixtures.EditView"\n+      permission="plone.schemaeditor.ManageSchemata"\n+      />\n \n-    <utility provides="zope.schema.interfaces.IVocabularyFactory"\n-             name="plone.schemaeditor.test.Countries"\n-             factory=".fixtures.CountriesVocabulary" />\n+  <utility\n+      factory=".fixtures.CountriesVocabulary"\n+      provides="zope.schema.interfaces.IVocabularyFactory"\n+      name="plone.schemaeditor.test.Countries"\n+      />\n \n-    <utility provides="zope.schema.interfaces.IVocabularyFactory"\n-             name="plone.schemaeditor.test.Categories"\n-             factory=".fixtures.CategoriesVocabulary" />\n+  <utility\n+      factory=".fixtures.CategoriesVocabulary"\n+      provides="zope.schema.interfaces.IVocabularyFactory"\n+      name="plone.schemaeditor.test.Categories"\n+      />\n \n </configure>\ndiff --git a/plone/schemaeditor/tests/layout.pt b/plone/schemaeditor/tests/layout.pt\nindex e332cad..055afda 100644\n--- a/plone/schemaeditor/tests/layout.pt\n+++ b/plone/schemaeditor/tests/layout.pt\n@@ -1,11 +1,11 @@\n <html>\n-<body>\n+  <body>\n \n-<h1 tal:content="view/label">View Title</h1>\n+    <h1 tal:content="view/label">View Title</h1>\n \n-<div id="layout-contents">\n-    <span tal:replace="structure view/contents" />\n-</div>\n+    <div id="layout-contents">\n+      <span tal:replace="structure view/contents"></span>\n+    </div>\n \n-</body>\n+  </body>\n </html>\ndiff --git a/plone/schemaeditor/tests/robot_testing.zcml b/plone/schemaeditor/tests/robot_testing.zcml\nindex a0edfbe..a5b943f 100644\n--- a/plone/schemaeditor/tests/robot_testing.zcml\n+++ b/plone/schemaeditor/tests/robot_testing.zcml\n@@ -1,17 +1,22 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n-    xmlns:gs="http://namespaces.zope.org/genericsetup"\n     xmlns:browser="http://namespaces.zope.org/browser"\n-    i18n_domain="plone">\n+    xmlns:gs="http://namespaces.zope.org/genericsetup"\n+    i18n_domain="plone"\n+    >\n \n-    <include package="plone.schemaeditor"/>\n+  <include package="plone.schemaeditor" />\n \n-    <utility provides="zope.schema.interfaces.IVocabularyFactory"\n-             name="plone.schemaeditor.test.Countries"\n-             factory=".fixtures.CountriesVocabulary" />\n+  <utility\n+      factory=".fixtures.CountriesVocabulary"\n+      provides="zope.schema.interfaces.IVocabularyFactory"\n+      name="plone.schemaeditor.test.Countries"\n+      />\n \n-    <utility provides="zope.schema.interfaces.IVocabularyFactory"\n-             name="plone.schemaeditor.test.Categories"\n-             factory=".fixtures.CategoriesVocabulary" />\n+  <utility\n+      factory=".fixtures.CategoriesVocabulary"\n+      provides="zope.schema.interfaces.IVocabularyFactory"\n+      name="plone.schemaeditor.test.Categories"\n+      />\n \n </configure>\n'

Repository: plone.schemaeditor


Branch: refs/heads/master
Date: 2023-03-04T09:19:43+01:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.schemaeditor/commit/d1125dc0376fcf173ec86934ac57c825e513c94e

Fix attribute

Files changed:
M plone/schemaeditor/browser/schema/schema_listing.pt

b'diff --git a/plone/schemaeditor/browser/schema/schema_listing.pt b/plone/schemaeditor/browser/schema/schema_listing.pt\nindex ebc364a..6bd8f3f 100644\n--- a/plone/schemaeditor/browser/schema/schema_listing.pt\n+++ b/plone/schemaeditor/browser/schema/schema_listing.pt\n@@ -99,7 +99,7 @@\n \n           <a class="btn btn-sm btn-danger"\n              id="delete-fieldset-${fieldset_name}"\n-             href="${context/absolute_url}/@@delete-fieldset?name=${python:group.__name__}&_authenticator=${context/@@authenticator/token}"\n+             href="${context/absolute_url}/@@delete-fieldset?name=${python:group.__name__}&amp;_authenticator=${context/@@authenticator/token}"\n                   i18n:translate="delete_fieldset_hellip">Delete fieldset\n           </a>\n \n'

Repository: plone.schemaeditor


Branch: refs/heads/master
Date: 2023-03-04T09:21:53+01:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.schemaeditor/commit/75c72b4e02ad8b8fce6d77b0ec4fb61817796f4d

Run zpretty

Files changed:
M plone/schemaeditor/browser/schema/schema_listing.pt

b'diff --git a/plone/schemaeditor/browser/schema/schema_listing.pt b/plone/schemaeditor/browser/schema/schema_listing.pt\nindex 6bd8f3f..9cff0e0 100644\n--- a/plone/schemaeditor/browser/schema/schema_listing.pt\n+++ b/plone/schemaeditor/browser/schema/schema_listing.pt\n@@ -100,86 +100,89 @@\n           <a class="btn btn-sm btn-danger"\n              id="delete-fieldset-${fieldset_name}"\n              href="${context/absolute_url}/@@delete-fieldset?name=${python:group.__name__}&amp;_authenticator=${context/@@authenticator/token}"\n-                  i18n:translate="delete_fieldset_hellip">Delete fieldset\n+             i18n:translate="delete_fieldset_hellip"\n+          >Delete fieldset\n           </a>\n \n-          <tal:block tal:define="errors group/widgets/errors"\n+          <tal:block tal:define="\n+                       errors group/widgets/errors;\n+                     "\n                      tal:condition="errors"\n-                     tal:repeat="error errors">\n-              <div class="field error"\n-                  tal:condition="not:nocall:error/widget"\n-                  tal:content="structure error/render"\n-                  />\n+                     tal:repeat="error errors"\n+          >\n+            <div class="field error"\n+                 tal:condition="not:nocall:error/widget"\n+                 tal:content="structure error/render"\n+            ></div>\n           </tal:block>\n \n           <tal:widgets repeat="widget group/widgets/values">\n-            <tal:block\n-              tal:define="\n-                disabled widget/disabled|nothing;\n-                protected python:view.protected_field(widget.field);"\n-          >\n-\n-            <div class="fieldPreview fieldFromBehavior"\n-                 tal:condition="python:disabled or protected"\n-            >\n-              <div class="fieldLabel">\n-                <tal:block tal:condition="disabled"\n-                           i18n:translate=""\n-                >From the\n-                  <tal:block tal:replace="python:widget.__name__.split(\'.\')[0]"\n-                             i18n:name="behavior_name"\n-                  />\n-                  behavior:</tal:block>\n-                <strong tal:content="widget/field/__name__"></strong>\n+            <tal:block tal:define="\n+                         disabled widget/disabled|nothing;\n+                         protected python:view.protected_field(widget.field);\n+                       ">\n+\n+              <div class="fieldPreview fieldFromBehavior"\n+                   tal:condition="python:disabled or protected"\n+              >\n+                <div class="fieldLabel">\n+                  <tal:block tal:condition="disabled"\n+                             i18n:translate=""\n+                  >From the\n+                    <tal:block tal:replace="python:widget.__name__.split(\'.\')[0]"\n+                               i18n:name="behavior_name"\n+                    />\n+                    behavior:</tal:block>\n+                  <strong tal:content="widget/field/__name__"></strong>\n                  &ndash;\n-                <tal:block tal:content="python:view.field_type(widget.field)" />\n-              </div>\n-              <tal:field tal:replace="structure widget/@@ploneform-render-widget" />\n-              <div class="disabled-field-overlay"></div>\n-            </div>\n-\n-            <div class="fieldPreview orderable"\n-                 tal:condition="python:not(disabled or protected)"\n-                 tal:attributes="\n-                   data-field_id widget/field/__name__;\n-                 "\n-            >\n-\n-              <div class="fieldLabel">\n-                <strong tal:content="widget/field/__name__"></strong>\n-                 &ndash;\n-                <tal:block tal:content="python:view.field_type(widget.field)" />\n+                  <tal:block tal:content="python:view.field_type(widget.field)" />\n+                </div>\n+                <tal:field tal:replace="structure widget/@@ploneform-render-widget" />\n+                <div class="disabled-field-overlay"></div>\n               </div>\n \n-              <div class="fieldControls">\n-                <a class="fieldSettings pat-plone-modal btn btn-sm btn-secondary"\n-                   tal:define="\n-                     edit_url python:view.edit_url(widget.field);\n-                   "\n-                   tal:condition="edit_url"\n+              <div class="fieldPreview orderable"\n+                   tal:condition="python:not(disabled or protected)"\n                    tal:attributes="\n-                     href edit_url;\n+                     data-field_id widget/field/__name__;\n                    "\n-                   i18n:translate=""\n-                >Settings&hellip;</a>\n-                <a class="schemaeditor-delete-field btn btn-sm btn-danger ms-1"\n-                   title="Delete field"\n-                   data-confirm_msg="Are you sure you want to delete this field?"\n-                   tal:define="\n-                     delete_url python:view.delete_url(widget.field);\n-                   "\n-                   tal:condition="delete_url"\n-                   tal:attributes="\n-                     href delete_url;\n-                   "\n-                   i18n:attributes="title; data-confirm_msg"\n-                >&times;</a>\n-              </div>\n+              >\n \n-              <div style="width: 80%">\n-                <tal:field tal:replace="structure widget/@@ploneform-render-widget" />\n+                <div class="fieldLabel">\n+                  <strong tal:content="widget/field/__name__"></strong>\n+                 &ndash;\n+                  <tal:block tal:content="python:view.field_type(widget.field)" />\n+                </div>\n+\n+                <div class="fieldControls">\n+                  <a class="fieldSettings pat-plone-modal btn btn-sm btn-secondary"\n+                     tal:define="\n+                       edit_url python:view.edit_url(widget.field);\n+                     "\n+                     tal:condition="edit_url"\n+                     tal:attributes="\n+                       href edit_url;\n+                     "\n+                     i18n:translate=""\n+                  >Settings&hellip;</a>\n+                  <a class="schemaeditor-delete-field btn btn-sm btn-danger ms-1"\n+                     title="Delete field"\n+                     data-confirm_msg="Are you sure you want to delete this field?"\n+                     tal:define="\n+                       delete_url python:view.delete_url(widget.field);\n+                     "\n+                     tal:condition="delete_url"\n+                     tal:attributes="\n+                       href delete_url;\n+                     "\n+                     i18n:attributes="title; data-confirm_msg"\n+                  >&times;</a>\n+                </div>\n+\n+                <div style="width: 80%">\n+                  <tal:field tal:replace="structure widget/@@ploneform-render-widget" />\n+                </div>\n               </div>\n-            </div>\n             </tal:block>\n \n           </tal:widgets>\n'

Repository: plone.schemaeditor


Branch: refs/heads/master
Date: 2023-03-07T23:26:46+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.schemaeditor/commit/6182d478d21a4c5831341883364e4fd80aef887a

Merge pull request #99 from plone/config-with-default-template-f81c1b30

Config with default template

Files changed:
A .pre-commit-config.yaml
A news/13d8d6c0.internal
M .meta.toml
M plone/schemaeditor/browser/configure.zcml
M plone/schemaeditor/browser/field/configure.zcml
M plone/schemaeditor/browser/field/edit.pt
M plone/schemaeditor/browser/field/edit.py
M plone/schemaeditor/browser/schema/add.pt
M plone/schemaeditor/browser/schema/add_field.py
M plone/schemaeditor/browser/schema/add_fieldset.py
M plone/schemaeditor/browser/schema/configure.zcml
M plone/schemaeditor/browser/schema/listing.py
M plone/schemaeditor/browser/schema/schema_listing.pt
M plone/schemaeditor/configure.zcml
M plone/schemaeditor/fields.py
M plone/schemaeditor/fields.zcml
M plone/schemaeditor/interfaces.py
M plone/schemaeditor/schema.py
M plone/schemaeditor/schema.zcml
M plone/schemaeditor/testing.py
M plone/schemaeditor/tests/browser_testing.zcml
M plone/schemaeditor/tests/fixtures.py
M plone/schemaeditor/tests/layout.pt
M plone/schemaeditor/tests/robot_testing.zcml
M plone/schemaeditor/tests/test_fields.py
M setup.cfg
M tox.ini

b'diff --git a/.meta.toml b/.meta.toml\nindex 059fd58..faa8424 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -2,7 +2,7 @@\n # https://github.com/plone/meta/tree/master/config/default\n [meta]\n template = "default"\n-commit-id = "78307cdf"\n+commit-id = "13d8d6c0"\n \n [dependencies]\n mappings = [\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nnew file mode 100644\nindex 0000000..582f8ac\n--- /dev/null\n+++ b/.pre-commit-config.yaml\n@@ -0,0 +1,42 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+ci:\n+    autofix_prs: false\n+    autoupdate_schedule: monthly\n+\n+repos:\n+-   repo: https://github.com/asottile/pyupgrade\n+    rev: v3.3.1\n+    hooks:\n+    -   id: pyupgrade\n+        args: [--py38-plus]\n+-   repo: https://github.com/pycqa/isort\n+    rev: 5.12.0\n+    hooks:\n+    -   id: isort\n+-   repo: https://github.com/psf/black\n+    rev: 23.1.0\n+    hooks:\n+    -   id: black\n+-   repo: https://github.com/collective/zpretty\n+    rev: 3.0.2\n+    hooks:\n+    -   id: zpretty\n+-   repo: https://github.com/PyCQA/flake8\n+    rev: 6.0.0\n+    hooks:\n+    -   id: flake8\n+-   repo: https://github.com/codespell-project/codespell\n+    rev: v2.2.2\n+    hooks:\n+    -   id: codespell\n+        additional_dependencies:\n+          - tomli\n+-   repo: https://github.com/mgedmin/check-manifest\n+    rev: "0.49"\n+    hooks:\n+    -   id: check-manifest\n+-   repo: https://github.com/regebro/pyroma\n+    rev: "4.2"\n+    hooks:\n+    -   id: pyroma\ndiff --git a/news/13d8d6c0.internal b/news/13d8d6c0.internal\nnew file mode 100644\nindex 0000000..c08f539\n--- /dev/null\n+++ b/news/13d8d6c0.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/plone/schemaeditor/browser/configure.zcml b/plone/schemaeditor/browser/configure.zcml\nindex 12741aa..50f27b0 100644\n--- a/plone/schemaeditor/browser/configure.zcml\n+++ b/plone/schemaeditor/browser/configure.zcml\n@@ -1,9 +1,10 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:browser="http://namespaces.zope.org/browser"\n-    i18n_domain="plone">\n+    i18n_domain="plone"\n+    >\n \n-    <include package=".field"/>\n-    <include package=".schema" />\n+  <include package=".field" />\n+  <include package=".schema" />\n \n </configure>\ndiff --git a/plone/schemaeditor/browser/field/configure.zcml b/plone/schemaeditor/browser/field/configure.zcml\nindex ae96117..79a2396 100644\n--- a/plone/schemaeditor/browser/field/configure.zcml\n+++ b/plone/schemaeditor/browser/field/configure.zcml\n@@ -1,42 +1,42 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n-    xmlns:five="http://namespaces.zope.org/five"\n     xmlns:browser="http://namespaces.zope.org/browser"\n-    i18n_domain="plone">\n+    xmlns:five="http://namespaces.zope.org/five"\n+    i18n_domain="plone"\n+    >\n \n-    <browser:page\n-        name="edit"\n-        for="...interfaces.IFieldContext"\n-        class=".edit.EditView"\n-        permission="plone.schemaeditor.ManageSchemata" />\n+  <browser:page\n+      name="edit"\n+      for="...interfaces.IFieldContext"\n+      class=".edit.EditView"\n+      permission="plone.schemaeditor.ManageSchemata"\n+      />\n \n-    <adapter\n-        factory=".edit.FieldTitleAdapter" />\n-    <adapter\n-        factory=".edit.FieldDataManager" />\n+  <adapter factory=".edit.FieldTitleAdapter" />\n+  <adapter factory=".edit.FieldDataManager" />\n \n-    <browser:page\n-        name="order"\n-        for="...interfaces.IFieldContext"\n-        class=".order.FieldOrderView"\n-        attribute="move"\n-        permission="plone.schemaeditor.ManageSchemata"\n-        />\n+  <browser:page\n+      name="order"\n+      for="...interfaces.IFieldContext"\n+      class=".order.FieldOrderView"\n+      attribute="move"\n+      permission="plone.schemaeditor.ManageSchemata"\n+      />\n \n-    <browser:page\n-        name="delete"\n-        for="...interfaces.IFieldContext"\n-        class=".order.FieldOrderView"\n-        attribute="delete"\n-        permission="plone.schemaeditor.ManageSchemata"\n-        />\n+  <browser:page\n+      name="delete"\n+      for="...interfaces.IFieldContext"\n+      class=".order.FieldOrderView"\n+      attribute="delete"\n+      permission="plone.schemaeditor.ManageSchemata"\n+      />\n \n-    <browser:page\n-        name="changefieldset"\n-        for="...interfaces.IFieldContext"\n-        class=".fieldset.ChangeFieldsetView"\n-        attribute="change"\n-        permission="plone.schemaeditor.ManageSchemata"\n-        />\n+  <browser:page\n+      name="changefieldset"\n+      for="...interfaces.IFieldContext"\n+      class=".fieldset.ChangeFieldsetView"\n+      attribute="change"\n+      permission="plone.schemaeditor.ManageSchemata"\n+      />\n \n </configure>\ndiff --git a/plone/schemaeditor/browser/field/edit.pt b/plone/schemaeditor/browser/field/edit.pt\nindex 7e57c61..8be8ef3 100644\n--- a/plone/schemaeditor/browser/field/edit.pt\n+++ b/plone/schemaeditor/browser/field/edit.pt\n@@ -1,14 +1,18 @@\n-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"\n-      xmlns:tal="http://xml.zope.org/namespaces/tal"\n-      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+<html xmlns="http://www.w3.org/1999/xhtml"\n       xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+      xmlns:tal="http://xml.zope.org/namespaces/tal"\n       lang="en"\n-      i18n:domain="plone">\n+      xml:lang="en"\n+      i18n:domain="plone"\n+>\n \n-<body>\n-    <h1 class="documentFirstHeading" tal:content="view/label"></h1>\n+  <body>\n+    <h1 class="documentFirstHeading"\n+        tal:content="view/label"\n+    ></h1>\n     <div id="content">\n-        <tal:block tal:replace="structure view/contents|view/render"/>\n+      <tal:block tal:replace="structure view/contents|view/render" />\n     </div>\n-</body>\n+  </body>\n </html>\ndiff --git a/plone/schemaeditor/browser/field/edit.py b/plone/schemaeditor/browser/field/edit.py\nindex 916af35..c980812 100644\n--- a/plone/schemaeditor/browser/field/edit.py\n+++ b/plone/schemaeditor/browser/field/edit.py\n@@ -67,7 +67,6 @@ def __get__(self, inst, cls=None):\n \n @implementer(IFieldProxy)\n class FieldProxy:\n-\n     __providedBy__ = FieldProxySpecification()\n \n     def __init__(self, context):\ndiff --git a/plone/schemaeditor/browser/schema/add.pt b/plone/schemaeditor/browser/schema/add.pt\nindex 7e57c61..8be8ef3 100644\n--- a/plone/schemaeditor/browser/schema/add.pt\n+++ b/plone/schemaeditor/browser/schema/add.pt\n@@ -1,14 +1,18 @@\n-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"\n-      xmlns:tal="http://xml.zope.org/namespaces/tal"\n-      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+<html xmlns="http://www.w3.org/1999/xhtml"\n       xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+      xmlns:tal="http://xml.zope.org/namespaces/tal"\n       lang="en"\n-      i18n:domain="plone">\n+      xml:lang="en"\n+      i18n:domain="plone"\n+>\n \n-<body>\n-    <h1 class="documentFirstHeading" tal:content="view/label"></h1>\n+  <body>\n+    <h1 class="documentFirstHeading"\n+        tal:content="view/label"\n+    ></h1>\n     <div id="content">\n-        <tal:block tal:replace="structure view/contents|view/render"/>\n+      <tal:block tal:replace="structure view/contents|view/render" />\n     </div>\n-</body>\n+  </body>\n </html>\ndiff --git a/plone/schemaeditor/browser/schema/add_field.py b/plone/schemaeditor/browser/schema/add_field.py\nindex 9546921..615fc25 100644\n--- a/plone/schemaeditor/browser/schema/add_field.py\n+++ b/plone/schemaeditor/browser/schema/add_field.py\n@@ -22,7 +22,6 @@\n \n \n class FieldAddForm(AutoExtensibleForm, form.AddForm):\n-\n     fields = field.Fields(interfaces.INewField)\n     label = _("Add new field")\n     id = "add-field-form"\ndiff --git a/plone/schemaeditor/browser/schema/add_fieldset.py b/plone/schemaeditor/browser/schema/add_fieldset.py\nindex 3d4d81b..58f076e 100644\n--- a/plone/schemaeditor/browser/schema/add_fieldset.py\n+++ b/plone/schemaeditor/browser/schema/add_fieldset.py\n@@ -16,7 +16,6 @@\n \n \n class FieldsetAddForm(form.AddForm):\n-\n     fields = field.Fields(INewFieldset)\n     label = _("Add new fieldset")\n     id = "add-fieldset-form"\ndiff --git a/plone/schemaeditor/browser/schema/configure.zcml b/plone/schemaeditor/browser/schema/configure.zcml\nindex 4ee240e..5b2065e 100644\n--- a/plone/schemaeditor/browser/schema/configure.zcml\n+++ b/plone/schemaeditor/browser/schema/configure.zcml\n@@ -1,34 +1,36 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n-    xmlns:five="http://namespaces.zope.org/five"\n     xmlns:browser="http://namespaces.zope.org/browser"\n-    i18n_domain="plone">\n+    xmlns:five="http://namespaces.zope.org/five"\n+    i18n_domain="plone"\n+    >\n \n   <browser:page\n       name="edit"\n       for="plone.schemaeditor.interfaces.ISchemaContext"\n       class=".listing.SchemaListingPage"\n-      permission="plone.schemaeditor.ManageSchemata" />\n+      permission="plone.schemaeditor.ManageSchemata"\n+      />\n \n   <browser:page\n-    name="add-field"\n-    for="plone.schemaeditor.interfaces.ISchemaContext"\n-    class=".add_field.FieldAddFormPage"\n-    permission="plone.schemaeditor.ManageSchemata"\n-    />\n+      name="add-field"\n+      for="plone.schemaeditor.interfaces.ISchemaContext"\n+      class=".add_field.FieldAddFormPage"\n+      permission="plone.schemaeditor.ManageSchemata"\n+      />\n \n   <browser:page\n-    name="add-fieldset"\n-    for="plone.schemaeditor.interfaces.ISchemaContext"\n-    class=".add_fieldset.FieldsetAddFormPage"\n-    permission="plone.schemaeditor.ManageSchemata"\n-    />\n+      name="add-fieldset"\n+      for="plone.schemaeditor.interfaces.ISchemaContext"\n+      class=".add_fieldset.FieldsetAddFormPage"\n+      permission="plone.schemaeditor.ManageSchemata"\n+      />\n \n   <browser:page\n-    name="delete-fieldset"\n-    for="plone.schemaeditor.interfaces.ISchemaContext"\n-    class=".delete_fieldset.DeleteFieldset"\n-    permission="plone.schemaeditor.ManageSchemata"\n-    />\n+      name="delete-fieldset"\n+      for="plone.schemaeditor.interfaces.ISchemaContext"\n+      class=".delete_fieldset.DeleteFieldset"\n+      permission="plone.schemaeditor.ManageSchemata"\n+      />\n \n </configure>\ndiff --git a/plone/schemaeditor/browser/schema/listing.py b/plone/schemaeditor/browser/schema/listing.py\nindex c620403..8798fd4 100644\n--- a/plone/schemaeditor/browser/schema/listing.py\n+++ b/plone/schemaeditor/browser/schema/listing.py\n@@ -23,7 +23,6 @@\n \n @implementer(IEditForm)\n class SchemaListing(AutoExtensibleForm, form.Form):\n-\n     ignoreContext = True\n     ignoreRequest = True\n     showEmptyGroups = True\ndiff --git a/plone/schemaeditor/browser/schema/schema_listing.pt b/plone/schemaeditor/browser/schema/schema_listing.pt\nindex a66b911..9cff0e0 100644\n--- a/plone/schemaeditor/browser/schema/schema_listing.pt\n+++ b/plone/schemaeditor/browser/schema/schema_listing.pt\n@@ -1,17 +1,23 @@\n-<div xmlns:tal="http://xml.zope.org/namespaces/tal"\n+<div xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n      xmlns:metal="http://xml.zope.org/namespaces/metal"\n-     xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+     xmlns:tal="http://xml.zope.org/namespaces/tal"\n+     class="pat-schemaeditor"\n      i18n:domain="plone"\n-     class="pat-schemaeditor">\n-  <a id="add-field" class="pat-plone-modal btn btn-secondary float-end ms-3"\n+>\n+  <a class="pat-plone-modal btn btn-secondary float-end ms-3"\n+     id="add-field"\n      href="${context/absolute_url}/@@add-field"\n-     i18n:translate="add_new_field_hellip">\n+     i18n:translate="add_new_field_hellip"\n+  >\n      Add new field&hellip;\n   </a>\n \n-  <a id="add-fieldset" class="pat-plone-modal btn btn-secondary float-end" tal:condition="context/enableFieldsets"\n+  <a class="pat-plone-modal btn btn-secondary float-end"\n+     id="add-fieldset"\n      href="${context/absolute_url}/@@add-fieldset"\n-     i18n:translate="add_fieldset_hellip">\n+     tal:condition="context/enableFieldsets"\n+     i18n:translate="add_fieldset_hellip"\n+  >\n      Add new fieldset&hellip;\n   </a>\n \n@@ -74,73 +80,108 @@\n     <metal:fields-slot metal:fill-slot="fields">\n \n       <tal:block tal:repeat="group python:[view] + list(view.groups)">\n-        <fieldset tal:define="fieldset_name repeat/group/index;\n-                              can_delete python:view.can_delete_fieldset(group);"\n-                  tal:attributes="id string:fieldset-${fieldset_name};\n-                                  class string:kssattr-fieldset-${fieldset_name};\n-                                  data-can-add-fields python:(repeat[\'group\'].start or can_delete) and \'true\' or \'false\'">\n-\n-          <legend tal:define="group_name python:group.label or view.default_fieldset_label"\n-                  tal:content="group_name">Fieldset name</legend>\n-\n-          <a id="delete-fieldset-${fieldset_name}" class="btn btn-sm btn-danger" tal:condition="python:context.enableFieldsets and can_delete"\n-             href="${context/absolute_url}/@@delete-fieldset?name=${python:group.__name__}&_authenticator=${context/@@authenticator/token}"\n-                  i18n:translate="delete_fieldset_hellip">Delete fieldset\n+        <fieldset tal:define="\n+                    fieldset_name repeat/group/index;\n+                    can_delete python:view.can_delete_fieldset(group);\n+                  "\n+                  tal:attributes="\n+                    id string:fieldset-${fieldset_name};\n+                    class string:kssattr-fieldset-${fieldset_name};\n+                    data-can-add-fields python:(repeat[\'group\'].start or can_delete) and \'true\' or \'false\';\n+                  "\n+        >\n+\n+          <legend tal:define="\n+                    group_name python:group.label or view.default_fieldset_label;\n+                  "\n+                  tal:content="group_name"\n+          >Fieldset name</legend>\n+\n+          <a class="btn btn-sm btn-danger"\n+             id="delete-fieldset-${fieldset_name}"\n+             href="${context/absolute_url}/@@delete-fieldset?name=${python:group.__name__}&amp;_authenticator=${context/@@authenticator/token}"\n+             i18n:translate="delete_fieldset_hellip"\n+          >Delete fieldset\n           </a>\n \n-          <tal:block tal:define="errors group/widgets/errors"\n+          <tal:block tal:define="\n+                       errors group/widgets/errors;\n+                     "\n                      tal:condition="errors"\n-                     tal:repeat="error errors">\n-              <div class="field error"\n-                  tal:condition="not:nocall:error/widget"\n-                  tal:content="structure error/render"\n-                  />\n+                     tal:repeat="error errors"\n+          >\n+            <div class="field error"\n+                 tal:condition="not:nocall:error/widget"\n+                 tal:content="structure error/render"\n+            ></div>\n           </tal:block>\n \n           <tal:widgets repeat="widget group/widgets/values">\n-            <tal:block\n-              tal:define="\n-                disabled widget/disabled|nothing;\n-                protected python:view.protected_field(widget.field);">\n-\n-              <div tal:condition="python:disabled or protected" class="fieldPreview fieldFromBehavior">\n+            <tal:block tal:define="\n+                         disabled widget/disabled|nothing;\n+                         protected python:view.protected_field(widget.field);\n+                       ">\n+\n+              <div class="fieldPreview fieldFromBehavior"\n+                   tal:condition="python:disabled or protected"\n+              >\n                 <div class="fieldLabel">\n-                    <tal:block tal:condition="disabled" i18n:translate="">From the\n-                      <tal:block i18n:name="behavior_name" tal:replace="python:widget.__name__.split(\'.\')[0]"/> behavior:</tal:block>\n-                    <strong tal:content="widget/field/__name__" /> &ndash;\n-                    <tal:block tal:content="python:view.field_type(widget.field)"/>\n+                  <tal:block tal:condition="disabled"\n+                             i18n:translate=""\n+                  >From the\n+                    <tal:block tal:replace="python:widget.__name__.split(\'.\')[0]"\n+                               i18n:name="behavior_name"\n+                    />\n+                    behavior:</tal:block>\n+                  <strong tal:content="widget/field/__name__"></strong>\n+                 &ndash;\n+                  <tal:block tal:content="python:view.field_type(widget.field)" />\n                 </div>\n                 <tal:field tal:replace="structure widget/@@ploneform-render-widget" />\n                 <div class="disabled-field-overlay"></div>\n               </div>\n \n-              <div tal:condition="python:not(disabled or protected)"\n-                   class="fieldPreview orderable" tal:attributes="data-field_id widget/field/__name__">\n+              <div class="fieldPreview orderable"\n+                   tal:condition="python:not(disabled or protected)"\n+                   tal:attributes="\n+                     data-field_id widget/field/__name__;\n+                   "\n+              >\n \n                 <div class="fieldLabel">\n-                    <strong tal:content="widget/field/__name__" /> &ndash;\n-                    <tal:block tal:content="python:view.field_type(widget.field)"/>\n+                  <strong tal:content="widget/field/__name__"></strong>\n+                 &ndash;\n+                  <tal:block tal:content="python:view.field_type(widget.field)" />\n                 </div>\n \n                 <div class="fieldControls">\n-                    <a class="fieldSettings pat-plone-modal btn btn-sm btn-secondary"\n-                       tal:define="edit_url python:view.edit_url(widget.field)"\n-                       tal:condition="edit_url"\n-                       i18n:translate=""\n-                       tal:attributes="href edit_url">Settings&hellip;</a>\n-                    <a class="schemaeditor-delete-field btn btn-sm btn-danger ms-1"\n-                       i18n:attributes="title; data-confirm_msg"\n-                       title="Delete field"\n-                       data-confirm_msg="Are you sure you want to delete this field?"\n-                       tal:define="delete_url python:view.delete_url(widget.field)"\n-                       tal:condition="delete_url"\n-                       tal:attributes="href delete_url">&times;</a>\n+                  <a class="fieldSettings pat-plone-modal btn btn-sm btn-secondary"\n+                     tal:define="\n+                       edit_url python:view.edit_url(widget.field);\n+                     "\n+                     tal:condition="edit_url"\n+                     tal:attributes="\n+                       href edit_url;\n+                     "\n+                     i18n:translate=""\n+                  >Settings&hellip;</a>\n+                  <a class="schemaeditor-delete-field btn btn-sm btn-danger ms-1"\n+                     title="Delete field"\n+                     data-confirm_msg="Are you sure you want to delete this field?"\n+                     tal:define="\n+                       delete_url python:view.delete_url(widget.field);\n+                     "\n+                     tal:condition="delete_url"\n+                     tal:attributes="\n+                       href delete_url;\n+                     "\n+                     i18n:attributes="title; data-confirm_msg"\n+                  >&times;</a>\n                 </div>\n \n                 <div style="width: 80%">\n                   <tal:field tal:replace="structure widget/@@ploneform-render-widget" />\n                 </div>\n-\n               </div>\n             </tal:block>\n \ndiff --git a/plone/schemaeditor/configure.zcml b/plone/schemaeditor/configure.zcml\nindex d4b60bb..55a506f 100644\n--- a/plone/schemaeditor/configure.zcml\n+++ b/plone/schemaeditor/configure.zcml\n@@ -2,27 +2,30 @@\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:five="http://namespaces.zope.org/five"\n     xmlns:i18n="http://namespaces.zope.org/i18n"\n-    i18n_domain="plone">\n+    i18n_domain="plone"\n+    >\n \n-  <include package="plone.z3cform"/>\n-  <include package="plone.protect"/>\n-  <include package="Products.statusmessages"/>\n+  <include package="plone.z3cform" />\n+  <include package="plone.protect" />\n+  <include package="Products.statusmessages" />\n \n-  <include file="schema.zcml"/>\n+  <include file="schema.zcml" />\n \n   <permission\n       id="plone.schemaeditor.ManageSchemata"\n       title="Manage schemata"\n-  />\n+      />\n \n   <!-- adapter for adding/removing fields on schemata -->\n-  <adapter factory=".utils.EditableSchema"/>\n+  <adapter factory=".utils.EditableSchema" />\n \n-  <include file="fields.zcml"/>\n-  <include package=".browser"/>\n+  <include file="fields.zcml" />\n+  <include package=".browser" />\n \n-  <utility factory=".vocabularies.VocabulariesVocabulary"\n+  <utility\n+      factory=".vocabularies.VocabulariesVocabulary"\n+      provides="zope.schema.interfaces.IVocabularyFactory"\n       name="plone.schemaeditor.VocabulariesVocabulary"\n-      provides="zope.schema.interfaces.IVocabularyFactory"/>\n+      />\n \n </configure>\ndiff --git a/plone/schemaeditor/fields.py b/plone/schemaeditor/fields.py\nindex a6c00f4..904d8d7 100644\n--- a/plone/schemaeditor/fields.py\n+++ b/plone/schemaeditor/fields.py\n@@ -29,7 +29,6 @@ def getFirstFieldSchema(field):\n \n @implementer(IFieldFactory)\n class FieldFactory:\n-\n     title = ""\n \n     def __init__(self, fieldcls, title, *args, **kw):\n@@ -65,7 +64,7 @@ def FieldsVocabularyFactory(context):\n             (id, factory) for id, factory in field_factories if id in allowedFields\n         ]\n     terms = []\n-    for (field_id, factory) in field_factories:\n+    for field_id, factory in field_factories:\n         terms.append(\n             SimpleVocabulary.createTerm(\n                 factory, factory.title, translate(factory.title, context=request)\ndiff --git a/plone/schemaeditor/fields.zcml b/plone/schemaeditor/fields.zcml\nindex 1632c07..ef1d297 100644\n--- a/plone/schemaeditor/fields.zcml\n+++ b/plone/schemaeditor/fields.zcml\n@@ -1,13 +1,14 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n-    i18n_domain="plone">\n+    i18n_domain="plone"\n+    >\n \n   <adapter factory=".fields.getFirstFieldSchema" />\n \n   <utility\n-      component=".fields.FieldsVocabularyFactory"\n       provides="zope.schema.interfaces.IVocabularyFactory"\n       name="Fields"\n+      component=".fields.FieldsVocabularyFactory"\n       />\n \n   <utility\ndiff --git a/plone/schemaeditor/interfaces.py b/plone/schemaeditor/interfaces.py\nindex f7d17bd..2c88ac6 100644\n--- a/plone/schemaeditor/interfaces.py\n+++ b/plone/schemaeditor/interfaces.py\n@@ -47,7 +47,6 @@ class ISchemaContext(IItem):\n \n \n class ISchemaModifiedEvent(IObjectEvent):\n-\n     object = Object(schema=ISchemaContext)\n \n \n@@ -142,7 +141,6 @@ def isValidFieldName(value):\n \n \n class INewField(Interface):\n-\n     fieldset_id = Int(\n         title=_("Fieldset ID"),\n         description=_("Used to decide where to put this field."),\n@@ -192,7 +190,6 @@ def checkTitleAndDescriptionTypes(data):\n \n \n class INewFieldset(Interface):\n-\n     label = TextLine(title=_("Title"), required=True)\n \n     __name__ = ASCIILine(\ndiff --git a/plone/schemaeditor/schema.py b/plone/schemaeditor/schema.py\nindex c4d1e58..f9dc149 100644\n--- a/plone/schemaeditor/schema.py\n+++ b/plone/schemaeditor/schema.py\n@@ -18,7 +18,6 @@ class IBool(interfaces.IBool, interfaces.IFromUnicode):\n \n \n class IFloat(interfaces.IFloat, interfaces.IFromUnicode):\n-\n     min = schema.Float(\n         title=interfaces.IFloat["min"].title,\n         required=interfaces.IFloat["min"].required,\n@@ -33,7 +32,6 @@ class IFloat(interfaces.IFloat, interfaces.IFromUnicode):\n \n \n class IDatetime(IDatetimeField):\n-\n     min = schema.Datetime(\n         title=interfaces.IDatetime["min"].title,\n         required=interfaces.IDatetime["min"].required,\n@@ -48,7 +46,6 @@ class IDatetime(IDatetimeField):\n \n \n class IDate(IDateField):\n-\n     min = schema.Date(\n         title=interfaces.IDate["min"].title,\n         required=interfaces.IDate["min"].required,\n@@ -72,7 +69,6 @@ class ITextLinesField(interfaces.IList):\n \n \n class ITextLineChoice(interfaces.IField):\n-\n     values = schema.List(\n         title=_("Possible values"),\n         description=_("Enter allowed choices one per line."),\ndiff --git a/plone/schemaeditor/schema.zcml b/plone/schemaeditor/schema.zcml\nindex 1bfd6c5..3fcb565 100644\n--- a/plone/schemaeditor/schema.zcml\n+++ b/plone/schemaeditor/schema.zcml\n@@ -1,5 +1,4 @@\n-<configure\n-    xmlns="http://namespaces.zope.org/zope">\n+<configure xmlns="http://namespaces.zope.org/zope">\n \n   <class class="zope.schema.Bool">\n     <implements interface=".schema.IBool" />\ndiff --git a/plone/schemaeditor/testing.py b/plone/schemaeditor/testing.py\nindex 266c380..9d49130 100644\n--- a/plone/schemaeditor/testing.py\n+++ b/plone/schemaeditor/testing.py\n@@ -7,7 +7,6 @@\n \n \n class PloneSchemaeditorRobotLayer(PloneSandboxLayer):\n-\n     defaultBases = (PLONE_FIXTURE,)\n \n \ndiff --git a/plone/schemaeditor/tests/browser_testing.zcml b/plone/schemaeditor/tests/browser_testing.zcml\nindex bda61df..4678e86 100644\n--- a/plone/schemaeditor/tests/browser_testing.zcml\n+++ b/plone/schemaeditor/tests/browser_testing.zcml\n@@ -1,74 +1,89 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:browser="http://namespaces.zope.org/browser"\n-    xmlns:zcml="http://namespaces.zope.org/zcml">\n+    xmlns:zcml="http://namespaces.zope.org/zcml"\n+    >\n \n-    <!-- only load PageTemplates zcml in Zope 4 -->\n-    <configure zcml:condition="installed Products.PageTemplates.engine">\n-        <include package="Products.PageTemplates" />\n-    </configure>\n+  <!-- only load PageTemplates zcml in Zope 4 -->\n+  <configure zcml:condition="installed Products.PageTemplates.engine">\n+    <include package="Products.PageTemplates" />\n+  </configure>\n \n-    <include package="Products.GenericSetup" file="meta.zcml" />\n-    <include package="Products.Five" file="meta.zcml" />\n-    <include package="Products.Five" />\n-    <include package="plone.schemaeditor"/>\n+  <include\n+      package="Products.GenericSetup"\n+      file="meta.zcml"\n+      />\n+  <include\n+      package="Products.Five"\n+      file="meta.zcml"\n+      />\n+  <include package="Products.Five" />\n+  <include package="plone.schemaeditor" />\n \n-    <!-- dummy keyring -->\n-    <utility component=".fixtures.DummyKeyManager"\n-             provides="plone.keyring.interfaces.IKeyManager" />\n+  <!-- dummy keyring -->\n+  <utility\n+      provides="plone.keyring.interfaces.IKeyManager"\n+      component=".fixtures.DummyKeyManager"\n+      />\n \n-    <!-- dummy schema editing context -->\n-    <browser:page\n-        name="schemaeditor"\n-        for="*"\n-        class=".fixtures.DummySchemaContext"\n-        permission="plone.schemaeditor.ManageSchemata"\n-        allowed_interface="OFS.interfaces.IItem" />\n+  <!-- dummy schema editing context -->\n+  <browser:page\n+      name="schemaeditor"\n+      for="*"\n+      class=".fixtures.DummySchemaContext"\n+      allowed_interface="OFS.interfaces.IItem"\n+      permission="plone.schemaeditor.ManageSchemata"\n+      />\n \n-    <subscriber\n-        for="plone.schemaeditor.interfaces.IField\n-             zope.lifecycleevent.interfaces.IObjectModifiedEvent"\n-        handler=".fixtures.log_event"\n-        />\n-    <subscriber\n-        for="plone.schemaeditor.interfaces.IField\n-             zope.lifecycleevent.interfaces.IObjectMovedEvent"\n-        handler=".fixtures.log_event"\n-        />\n-    <subscriber\n-        for="zope.interface.interfaces.IInterface\n-             zope.container.interfaces.IContainerModifiedEvent"\n-        handler=".fixtures.log_event"\n-        />\n-    <subscriber\n-        for="plone.schemaeditor.interfaces.ISchemaContext\n-             plone.schemaeditor.interfaces.ISchemaModifiedEvent"\n-        handler=".fixtures.log_event"\n-        />\n+  <subscriber\n+      for="plone.schemaeditor.interfaces.IField\n+           zope.lifecycleevent.interfaces.IObjectModifiedEvent"\n+      handler=".fixtures.log_event"\n+      />\n+  <subscriber\n+      for="plone.schemaeditor.interfaces.IField\n+           zope.lifecycleevent.interfaces.IObjectMovedEvent"\n+      handler=".fixtures.log_event"\n+      />\n+  <subscriber\n+      for="zope.interface.interfaces.IInterface\n+           zope.container.interfaces.IContainerModifiedEvent"\n+      handler=".fixtures.log_event"\n+      />\n+  <subscriber\n+      for="plone.schemaeditor.interfaces.ISchemaContext\n+           plone.schemaeditor.interfaces.ISchemaModifiedEvent"\n+      handler=".fixtures.log_event"\n+      />\n \n-    <!-- use a form layout that doesn\'t pull in main_template -->\n-    <adapter factory=".tests.layout_factory"/>\n+  <!-- use a form layout that doesn\'t pull in main_template -->\n+  <adapter factory=".tests.layout_factory" />\n \n-    <!-- provide a widget renderer a la plone.app.z3cform -->\n-    <browser:page\n-        name="ploneform-render-widget"\n-        for="z3c.form.interfaces.IWidget"\n-        class=".tests.RenderWidget"\n-        permission="zope2.View"\n-        />\n+  <!-- provide a widget renderer a la plone.app.z3cform -->\n+  <browser:page\n+      name="ploneform-render-widget"\n+      for="z3c.form.interfaces.IWidget"\n+      class=".tests.RenderWidget"\n+      permission="zope2.View"\n+      />\n \n-    <browser:page\n-        name="contexteditor"\n-        for="*"\n-        class=".fixtures.EditView"\n-        permission="plone.schemaeditor.ManageSchemata" />\n+  <browser:page\n+      name="contexteditor"\n+      for="*"\n+      class=".fixtures.EditView"\n+      permission="plone.schemaeditor.ManageSchemata"\n+      />\n \n-    <utility provides="zope.schema.interfaces.IVocabularyFactory"\n-             name="plone.schemaeditor.test.Countries"\n-             factory=".fixtures.CountriesVocabulary" />\n+  <utility\n+      factory=".fixtures.CountriesVocabulary"\n+      provides="zope.schema.interfaces.IVocabularyFactory"\n+      name="plone.schemaeditor.test.Countries"\n+      />\n \n-    <utility provides="zope.schema.interfaces.IVocabularyFactory"\n-             name="plone.schemaeditor.test.Categories"\n-             factory=".fixtures.CategoriesVocabulary" />\n+  <utility\n+      factory=".fixtures.CategoriesVocabulary"\n+      provides="zope.schema.interfaces.IVocabularyFactory"\n+      name="plone.schemaeditor.test.Categories"\n+      />\n \n </configure>\ndiff --git a/plone/schemaeditor/tests/fixtures.py b/plone/schemaeditor/tests/fixtures.py\nindex 6ac95fa..7988246 100644\n--- a/plone/schemaeditor/tests/fixtures.py\n+++ b/plone/schemaeditor/tests/fixtures.py\n@@ -9,7 +9,6 @@\n \n \n class IDummySchema(Interface):\n-\n     model.fieldset("alpha", fields=["fieldA"])\n \n     field1 = schema.TextLine()\n@@ -35,7 +34,6 @@ def log_event(object, event):\n \n \n class EditForm(EditForm):\n-\n     ignoreContext = True\n     ignoreRequest = True\n \n@@ -57,12 +55,10 @@ def __call__(self, context):\n \n \n class CountriesVocabulary(BaseVocabulary):\n-\n     values_list = [("fr", "France"), ("uk", "United Kingdom"), ("es", "Spain")]\n \n \n class CategoriesVocabulary(BaseVocabulary):\n-\n     values_list = [("php", "PHP"), ("c", "C"), ("ruby", "Ruby")]\n \n \ndiff --git a/plone/schemaeditor/tests/layout.pt b/plone/schemaeditor/tests/layout.pt\nindex e332cad..055afda 100644\n--- a/plone/schemaeditor/tests/layout.pt\n+++ b/plone/schemaeditor/tests/layout.pt\n@@ -1,11 +1,11 @@\n <html>\n-<body>\n+  <body>\n \n-<h1 tal:content="view/label">View Title</h1>\n+    <h1 tal:content="view/label">View Title</h1>\n \n-<div id="layout-contents">\n-    <span tal:replace="structure view/contents" />\n-</div>\n+    <div id="layout-contents">\n+      <span tal:replace="structure view/contents"></span>\n+    </div>\n \n-</body>\n+  </body>\n </html>\ndiff --git a/plone/schemaeditor/tests/robot_testing.zcml b/plone/schemaeditor/tests/robot_testing.zcml\nindex a0edfbe..a5b943f 100644\n--- a/plone/schemaeditor/tests/robot_testing.zcml\n+++ b/plone/schemaeditor/tests/robot_testing.zcml\n@@ -1,17 +1,22 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n-    xmlns:gs="http://namespaces.zope.org/genericsetup"\n     xmlns:browser="http://namespaces.zope.org/browser"\n-    i18n_domain="plone">\n+    xmlns:gs="http://namespaces.zope.org/genericsetup"\n+    i18n_domain="plone"\n+    >\n \n-    <include package="plone.schemaeditor"/>\n+  <include package="plone.schemaeditor" />\n \n-    <utility provides="zope.schema.interfaces.IVocabularyFactory"\n-             name="plone.schemaeditor.test.Countries"\n-             factory=".fixtures.CountriesVocabulary" />\n+  <utility\n+      factory=".fixtures.CountriesVocabulary"\n+      provides="zope.schema.interfaces.IVocabularyFactory"\n+      name="plone.schemaeditor.test.Countries"\n+      />\n \n-    <utility provides="zope.schema.interfaces.IVocabularyFactory"\n-             name="plone.schemaeditor.test.Categories"\n-             factory=".fixtures.CategoriesVocabulary" />\n+  <utility\n+      factory=".fixtures.CategoriesVocabulary"\n+      provides="zope.schema.interfaces.IVocabularyFactory"\n+      name="plone.schemaeditor.test.Categories"\n+      />\n \n </configure>\ndiff --git a/plone/schemaeditor/tests/test_fields.py b/plone/schemaeditor/tests/test_fields.py\nindex a1886ce..ff6bfaa 100644\n--- a/plone/schemaeditor/tests/test_fields.py\n+++ b/plone/schemaeditor/tests/test_fields.py\n@@ -16,7 +16,6 @@ def __init__(self):\n \n \n class VocabularyTestCase(unittest.TestCase):\n-\n     layer = PLONE_FIXTURE\n \n     def assertVocabulary(self, voc, values):\ndiff --git a/setup.cfg b/setup.cfg\nindex 8849fbc..e70eb25 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -19,5 +19,6 @@ ignore =\n ignore =\n     .editorconfig\n     .meta.toml\n+    .pre-commit-config.yaml\n     tox.ini\n     lint-requirements.txt\ndiff --git a/tox.ini b/tox.ini\nindex c4810c9..fe54390 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -4,47 +4,47 @@\n envlist =\n     format\n     lint\n+    test\n \n [testenv]\n-py_files = git ls-files "*.py"\n-text_files = git ls-files "*.rst" "*.md"\n allowlist_externals =\n     sh\n \n [testenv:format]\n-description = automatically reformat python code\n+description = automatically reformat code\n skip_install = true\n deps =\n-    pyupgrade\n-    isort\n-    black\n-    -c lint-requirements.txt\n+    pre-commit\n commands =\n-    sh -c \'{[testenv]py_files} | xargs pyupgrade --py38-plus\'\n-    sh -c \'{[testenv]py_files} | xargs isort\'\n-    sh -c \'{[testenv]py_files} | xargs black\'\n+    pre-commit run -a pyupgrade\n+    pre-commit run -a isort\n+    pre-commit run -a black\n+    pre-commit run -a zpretty\n \n [testenv:lint]\n description = run linters that will help improve the code style\n skip_install = true\n deps =\n-    flake8\n-    codespell\n-    tomli  # needed for codespell to read pyproject.toml\n-    check-manifest\n-    pyroma\n-    -c lint-requirements.txt\n+    pre-commit\n commands =\n-    sh -c \'{[testenv]py_files} | xargs flake8\'\n-    sh -c \'{[testenv]py_files} | xargs codespell\'\n-    sh -c \'{[testenv]text_files} | xargs codespell\'\n-    check-manifest\n-    pyroma -n 10 .\n+    pre-commit run -a\n \n [testenv:dependencies]\n-description = check if the package defines all its dependencies\n+description = check if the package defines all its dependencies and generate a graph out of them\n deps =\n-    z3c.dependencychecker\n-    -c lint-requirements.txt\n+    z3c.dependencychecker==2.11\n+    pipdeptree==2.5.1\n+    graphviz  # optional dependency of pipdeptree\n commands =\n     dependencychecker\n+    sh -c \'pipdeptree --exclude setuptools,pipdeptree,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+\n+[testenv:test]\n+usedevelop = true\n+deps =\n+    zope.testrunner\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    zope-testrunner --test-path={toxinidir} -s plone.schemaeditor\n+extras =\n+    test\n'

