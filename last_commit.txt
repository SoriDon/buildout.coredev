Repository: plone.app.layout


Branch: refs/heads/master
Date: 2018-10-11T15:06:07-03:00
Author: Rodrigo Ferreira de Souza (rodfersou) <rodfersou@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/6e40384c6be9030eb30b921193bdd14353ba0754

Add template and view arguments support to IBodyClassAdapters

Files changed:
M CHANGES.rst
M plone/app/layout/globals/layout.py

b"diff --git a/CHANGES.rst b/CHANGES.rst\nindex a1e9a72..8095ca2 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -18,6 +18,9 @@ New features:\n \n Bug fixes:\n \n+- Add template and view arguments support to IBodyClassAdapters (fixes `#158 <https://github.com/plone/plone.app.layout/issues/158>`_).\n+  [rodfersou]\n+\n - Show document byline for logged-in users. Fixes #160\n   [erral]\n \ndiff --git a/plone/app/layout/globals/layout.py b/plone/app/layout/globals/layout.py\nindex 0587e45..35c6d11 100644\n--- a/plone/app/layout/globals/layout.py\n+++ b/plone/app/layout/globals/layout.py\n@@ -321,7 +321,10 @@ def bodyClass(self, template, view):\n             IBodyClassAdapter\n         )\n         for name, body_class_adapter in body_class_adapters:\n-            extra_classes = body_class_adapter.get_classes() or []\n+            try:\n+                extra_classes = body_class_adapter.get_classes(template, view) or []\n+            except TypeError:  # This adapter is implemented without arguments\n+                extra_classes = body_class_adapter.get_classes() or []\n             if isinstance(extra_classes, basestring):\n                 extra_classes = extra_classes.split(' ')\n             body_classes.update(extra_classes)\n"

Repository: plone.app.layout


Branch: refs/heads/master
Date: 2018-10-13T08:57:01-03:00
Author: Rodrigo Ferreira de Souza (rodfersou) <rodfersou@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/356573e21f845cc8194aae4f750197b680a79cfb

Code review

Files changed:
M plone/app/layout/globals/layout.py

b'diff --git a/plone/app/layout/globals/layout.py b/plone/app/layout/globals/layout.py\nindex 35c6d11..1d2ba60 100644\n--- a/plone/app/layout/globals/layout.py\n+++ b/plone/app/layout/globals/layout.py\n@@ -340,7 +340,7 @@ def __init__(self, context, request):\n         self.context = context\n         self.request = request\n \n-    def get_classes(self):\n+    def get_classes(self, template, view):\n         """Default body classes adapter.\n         """\n         return []\n'

Repository: plone.app.layout


Branch: refs/heads/master
Date: 2018-10-18T22:49:44+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.layout/commit/30d35aa2e5f275c56adc165b6e362a58ee971e8a

Merge pull request #166 from plone/rodfersou/158-master

Add template and view arguments support to IBodyClassAdapters

Files changed:
M CHANGES.rst
M plone/app/layout/globals/layout.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex a1e9a72..8095ca2 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -18,6 +18,9 @@ New features:\n \n Bug fixes:\n \n+- Add template and view arguments support to IBodyClassAdapters (fixes `#158 <https://github.com/plone/plone.app.layout/issues/158>`_).\n+  [rodfersou]\n+\n - Show document byline for logged-in users. Fixes #160\n   [erral]\n \ndiff --git a/plone/app/layout/globals/layout.py b/plone/app/layout/globals/layout.py\nindex 0587e45..1d2ba60 100644\n--- a/plone/app/layout/globals/layout.py\n+++ b/plone/app/layout/globals/layout.py\n@@ -321,7 +321,10 @@ def bodyClass(self, template, view):\n             IBodyClassAdapter\n         )\n         for name, body_class_adapter in body_class_adapters:\n-            extra_classes = body_class_adapter.get_classes() or []\n+            try:\n+                extra_classes = body_class_adapter.get_classes(template, view) or []\n+            except TypeError:  # This adapter is implemented without arguments\n+                extra_classes = body_class_adapter.get_classes() or []\n             if isinstance(extra_classes, basestring):\n                 extra_classes = extra_classes.split(\' \')\n             body_classes.update(extra_classes)\n@@ -337,7 +340,7 @@ def __init__(self, context, request):\n         self.context = context\n         self.request = request\n \n-    def get_classes(self):\n+    def get_classes(self, template, view):\n         """Default body classes adapter.\n         """\n         return []\n'

