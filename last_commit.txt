Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2023-03-12T23:39:24+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.querystring/commit/f245902ff8b5f73b61a6f888c4dc1857d46f7677

last CMFPlone reference

Files changed:
M plone/app/querystring/registryreader.py

b'diff --git a/plone/app/querystring/registryreader.py b/plone/app/querystring/registryreader.py\nindex ef245f7..4817f07 100644\n--- a/plone/app/querystring/registryreader.py\n+++ b/plone/app/querystring/registryreader.py\n@@ -1,9 +1,10 @@\n from collections import OrderedDict\n from plone.app.querystring.interfaces import IQuerystringRegistryReader\n+from plone.base.utils import safe_text\n+from plone.i18n.normalizer.interfaces import IIDNormalizer\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.utils import normalizeString\n-from Products.CMFPlone.utils import safe_unicode\n from Products.ZCTextIndex.interfaces import IZCTextIndex\n+from zope.component import getUtility\n from zope.component import queryUtility\n from zope.component.hooks import getSite\n from zope.globalrequest import getRequest\n@@ -71,7 +72,7 @@ def parseRegistry(self):\n \n     def getVocabularyValues(self, values):\n         """Get all vocabulary values if a vocabulary is defined"""\n-\n+        id_normalize = getUtility(IIDNormalizer).normalize\n         for field in values.get(self.prefix + ".field").values():\n             field["values"] = OrderedDict()\n             vocabulary = field.get("vocabulary", [])\n@@ -93,7 +94,7 @@ def getVocabularyValues(self, values):\n                     title = item.title\n                 translated.append((title, item.value))\n             translated = sorted(\n-                translated, key=lambda x: normalizeString(safe_unicode(x[0]))\n+                translated, key=lambda x: id_normalize(safe_text(x[0]))\n             )\n             for title, value in translated:\n                 field["values"][value] = {"title": title}\n'

Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2023-03-13T01:23:58+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.querystring/commit/dcfc63956c940e31b0a59c8f53b787fc0d906ded

Merge pull request #120 from plone/CMFPlone-again

last CMFPlone reference

Files changed:
M plone/app/querystring/registryreader.py

b'diff --git a/plone/app/querystring/registryreader.py b/plone/app/querystring/registryreader.py\nindex ef245f7..4817f07 100644\n--- a/plone/app/querystring/registryreader.py\n+++ b/plone/app/querystring/registryreader.py\n@@ -1,9 +1,10 @@\n from collections import OrderedDict\n from plone.app.querystring.interfaces import IQuerystringRegistryReader\n+from plone.base.utils import safe_text\n+from plone.i18n.normalizer.interfaces import IIDNormalizer\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.utils import normalizeString\n-from Products.CMFPlone.utils import safe_unicode\n from Products.ZCTextIndex.interfaces import IZCTextIndex\n+from zope.component import getUtility\n from zope.component import queryUtility\n from zope.component.hooks import getSite\n from zope.globalrequest import getRequest\n@@ -71,7 +72,7 @@ def parseRegistry(self):\n \n     def getVocabularyValues(self, values):\n         """Get all vocabulary values if a vocabulary is defined"""\n-\n+        id_normalize = getUtility(IIDNormalizer).normalize\n         for field in values.get(self.prefix + ".field").values():\n             field["values"] = OrderedDict()\n             vocabulary = field.get("vocabulary", [])\n@@ -93,7 +94,7 @@ def getVocabularyValues(self, values):\n                     title = item.title\n                 translated.append((title, item.value))\n             translated = sorted(\n-                translated, key=lambda x: normalizeString(safe_unicode(x[0]))\n+                translated, key=lambda x: id_normalize(safe_text(x[0]))\n             )\n             for title, value in translated:\n                 field["values"][value] = {"title": title}\n'

