Repository: plone.volto


Branch: refs/heads/main
Date: 2022-01-17T19:58:25+01:00
Author: Victor Fernandez de Alba (sneridagh) <sneridagh@gmail.com>
Commit: https://github.com/plone/plone.volto/commit/ebfa43eb8da3d2020c84d89e11fb607b279e8d9f

Code cleanup, add 'volto.blocks' behavior to Plone Site GS types info. Remove 'Collection' from types in GS. Remove 'plone.richtext' behavior from Plone Site, Document, News Item, Events.

Files changed:
A src/plone/volto/profiles/default/types/Collection.xml
M CHANGES.rst
M src/plone/volto/profiles/default/metadata.xml
M src/plone/volto/profiles/default/types.xml
M src/plone/volto/profiles/default/types/Plone_Site.xml
M src/plone/volto/setuphandlers.py
M src/plone/volto/upgrades.py
M src/plone/volto/upgrades.zcml

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex b249149..874d0f1 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -7,6 +7,17 @@ Changelog\n - Use by default Slate blocks for the default pages\n   [sneridagh]\n \n+- Code cleanup, remove some outdated and unused helpers in ``setuptools.py``\n+  [sneridagh]\n+\n+- Add ``volto.blocks`` behavior to Plone Site GS types info.\n+  [sneridagh]\n+\n+- Remove ``Collection`` from types in GS types info.\n+  [sneridagh]\n+\n+- Remove ``plone.richtext`` behavior from Plone Site, Document, News Item, Events\n+  [sneridagh]\n \n 3.1.0a9 (2022-01-15)\n --------------------\ndiff --git a/src/plone/volto/profiles/default/metadata.xml b/src/plone/volto/profiles/default/metadata.xml\nindex 36539e9..41189c2 100644\n--- a/src/plone/volto/profiles/default/metadata.xml\n+++ b/src/plone/volto/profiles/default/metadata.xml\n@@ -1,6 +1,6 @@\n <?xml version="1.0" encoding="UTF-8"?>\n <metadata>\n-  <version>1012</version>\n+  <version>1013</version>\n   <dependencies>\n     <dependency>profile-collective.folderishtypes.dx:default</dependency>\n     <dependency>profile-plone.restapi:blocks</dependency>\ndiff --git a/src/plone/volto/profiles/default/types.xml b/src/plone/volto/profiles/default/types.xml\nindex fee4cc8..3c39681 100644\n--- a/src/plone/volto/profiles/default/types.xml\n+++ b/src/plone/volto/profiles/default/types.xml\n@@ -3,4 +3,5 @@\n   <object name="Plone Site" />\n   <object meta_type="Dexterity FTI" name="LRF" />\n   <object meta_type="Dexterity FTI" name="Document" />\n+  <object meta_type="Dexterity FTI" name="Collection" />\n </object>\ndiff --git a/src/plone/volto/profiles/default/types/Collection.xml b/src/plone/volto/profiles/default/types/Collection.xml\nnew file mode 100644\nindex 0000000..c7299d5\n--- /dev/null\n+++ b/src/plone/volto/profiles/default/types/Collection.xml\n@@ -0,0 +1,8 @@\n+<?xml version="1.0"?>\n+<object name="Collection" meta_type="Dexterity FTI" i18n:domain="plone"\n+   xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n+\n+  <!-- Collections in Volto are disabled by default -->\n+  <property name="global_allow">False</property>\n+\n+</object>\ndiff --git a/src/plone/volto/profiles/default/types/Plone_Site.xml b/src/plone/volto/profiles/default/types/Plone_Site.xml\nindex db7de5d..974ec18 100644\n--- a/src/plone/volto/profiles/default/types/Plone_Site.xml\n+++ b/src/plone/volto/profiles/default/types/Plone_Site.xml\n@@ -1,14 +1,9 @@\n <?xml version="1.0"?>\n <object name="Plone Site"\n    i18n:domain="plone" xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n- <action\n-    action_id="edit"\n-    category="object"\n-    condition_expr=""\n-    i18n:attributes="title"\n-    title="Edit"\n-    url_expr="string:${object_url}/edit"\n-    visible="True">\n-  <permission value="Manage portal"/>\n- </action>\n+\n+  <property name="behaviors" purge="false">\n+    <element value="volto.blocks" />\n+  </property>\n+\n </object>\ndiff --git a/src/plone/volto/setuphandlers.py b/src/plone/volto/setuphandlers.py\nindex 568dafc..acf25a6 100644\n--- a/src/plone/volto/setuphandlers.py\n+++ b/src/plone/volto/setuphandlers.py\n@@ -2,22 +2,14 @@\n from plone import api\n from plone.app.multilingual.browser.setup import SetupMultilingualSite\n from plone.app.multilingual.setuphandlers import enable_translatable_behavior\n-from plone.app.portlets.utils import assignment_mapping_from_key\n from plone.dexterity.interfaces import IDexterityFTI\n-from plone.portlets.constants import CONTEXT_CATEGORY\n-from plone.portlets.interfaces import IPortletAssignmentMapping\n-from plone.portlets.interfaces import IPortletManager\n from plone.volto.default_homepage.default import default_home\n from plone.volto.default_homepage.demo import demo_home_page\n from plone.volto.default_homepage.lrf import default_lrf_home\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.interfaces import INonInstallable\n from Products.CMFPlone.utils import get_installer\n-from zope.component import getMultiAdapter\n-from zope.component import getUtility\n from zope.component import queryUtility\n-from zope.component.interfaces import IFactory\n-from zope.container.interfaces import INameChooser\n from zope.interface import implementer\n \n import json\n@@ -36,6 +28,13 @@\n \n logger = logging.getLogger("plone.volto")\n \n+NO_RICHTEXT_BEHAVIOR_CONTENT_TYPES = [\n+    "Plone Site",\n+    "Document",\n+    "News Item",\n+    "Event",\n+]\n+\n \n @implementer(INonInstallable)\n class HiddenProfiles(object):\n@@ -47,8 +46,11 @@ def getNonInstallableProfiles(self):\n def post_install(context):\n     """Post install script"""\n     # For Plone 6, make sure the blocks behavior is enabled in the root\n-    if PLONE_6:\n-        add_behavior("Plone Site", "volto.blocks")\n+    add_behavior("Plone Site", "volto.blocks")\n+\n+    # Remove plone.richtext from content types with blocks enabled\n+    for type_ in NO_RICHTEXT_BEHAVIOR_CONTENT_TYPES:\n+        remove_behavior(type_, "plone.richtext")\n \n \n def uninstall(context):\n@@ -147,64 +149,26 @@ def add_catalog_indexes(context, wanted=None):\n \n def add_behavior(portal_type, behavior):\n     fti = queryUtility(IDexterityFTI, name=portal_type)\n-    new = [\n-        currentbehavior\n-        for currentbehavior in fti.behaviors\n-        if currentbehavior != behavior\n-    ]\n-    new.append(behavior)\n-    fti.behaviors = tuple(new)\n-\n-\n-def setupNavigationPortlet(\n-    context,\n-    name="",\n-    root=None,\n-    includeTop=False,\n-    currentFolderOnly=False,\n-    bottomLevel=0,\n-    topLevel=0,\n-):\n-    """\n-    setupNavigationPortlet(portal[\'vereinigungen\'][\'fachliche-vereinigungen\'][\'sektion-materie-und-kosmos\'][\'gravitation-und-relativitaetstheorie\']) # noqa\n-    """\n-    from plone.app.portlets.portlets.navigation import (\n-        Assignment as NavAssignment,\n-    )  # noqa\n-\n-    target_manager = queryUtility(\n-        IPortletManager, name="plone.leftcolumn", context=context\n-    )\n-    target_manager_assignments = getMultiAdapter(\n-        (context, target_manager), IPortletAssignmentMapping\n-    )\n-\n-    navtree = NavAssignment(\n-        includeTop=includeTop,\n-        currentFolderOnly=currentFolderOnly,\n-        bottomLevel=bottomLevel,\n-        topLevel=topLevel,\n-    )\n-\n-    if "navigation" not in target_manager_assignments.keys():\n-        target_manager_assignments["navigation"] = navtree\n-\n-\n-def setupPortletAt(portal, portlet_type, manager, path, name="", **kw):\n-    """\n-    setupPortletAt(portal, \'portlets.Events\', \'plone.rightcolumn\', \'/vereinigungen/fachliche-vereinigungen/sektion-kondensierte-materie/halbleiterphysik\') # noqa\n-    """\n-    portlet_factory = getUtility(IFactory, name=portlet_type)\n-    assignment = portlet_factory(**kw)\n-    mapping = assignment_mapping_from_key(\n-        portal, manager, CONTEXT_CATEGORY, path, create=True\n-    )\n-\n-    if not name:\n-        chooser = INameChooser(mapping)\n-        name = chooser.chooseName(None, assignment)\n-\n-    mapping[name] = assignment\n+    if fti is not None:\n+        # This prevents to add the behavior twice\n+        new = [\n+            currentbehavior\n+            for currentbehavior in fti.behaviors\n+            if currentbehavior != behavior\n+        ]\n+        new.append(behavior)\n+        fti.behaviors = tuple(new)\n+\n+\n+def remove_behavior(portal_type, behavior):\n+    fti = queryUtility(IDexterityFTI, name=portal_type)\n+    if fti is not None:\n+        new = [\n+            currentbehavior\n+            for currentbehavior in fti.behaviors\n+            if currentbehavior != behavior\n+        ]\n+        fti.behaviors = tuple(new)\n \n \n def create_default_homepage_draftjs(context):\ndiff --git a/src/plone/volto/upgrades.py b/src/plone/volto/upgrades.py\nindex 7e1d695..096367f 100644\n--- a/src/plone/volto/upgrades.py\n+++ b/src/plone/volto/upgrades.py\n@@ -1,6 +1,8 @@\n from copy import deepcopy\n from plone import api\n from plone.restapi.behaviors import IBlocks\n+from plone.volto.setuphandlers import NO_RICHTEXT_BEHAVIOR_CONTENT_TYPES\n+from plone.volto.setuphandlers import remove_behavior\n \n \n def from12to13_migrate_listings(context):\n@@ -62,3 +64,8 @@ def migrate_listing(originBlocks):\n     for brain in pc.unrestrictedSearchResults(object_provides=IBlocks.__identifier__):\n         obj = brain.getObject()\n         obj.blocks = migrate_listing(obj.blocks)\n+\n+\n+def remove_plone_richtext_behavior(context):\n+    for type_ in NO_RICHTEXT_BEHAVIOR_CONTENT_TYPES:\n+        remove_behavior(type_, "plone.richtext")\ndiff --git a/src/plone/volto/upgrades.zcml b/src/plone/volto/upgrades.zcml\nindex 468b808..d226011 100644\n--- a/src/plone/volto/upgrades.zcml\n+++ b/src/plone/volto/upgrades.zcml\n@@ -21,4 +21,18 @@\n       import_steps="catalog"\n       />\n \n+  <genericsetup:upgradeSteps\n+      profile="plone.volto:default"\n+      source="1012"\n+      destination="1013"\n+      >\n+    <genericsetup:upgradeDepends\n+        title="Update types info for Plone Site"\n+        import_steps="typeinfo"\n+        />\n+    <genericsetup:upgradeStep\n+        title="remove plone.richtext from Plone Site, Document, News Item, Event"\n+        handler=".upgrades.remove_plone_richtext_behavior"\n+        />\n+  </genericsetup:upgradeSteps>\n </configure>\n'

Repository: plone.volto


Branch: refs/heads/main
Date: 2022-01-18T10:23:15+01:00
Author: Victor Fernandez de Alba (sneridagh) <sneridagh@gmail.com>
Commit: https://github.com/plone/plone.volto/commit/30c8acfeaeb2856f26aa7e99b4501936a410991a

Programatically setup Plone site FTI

Files changed:
M src/plone/volto/setuphandlers.py
M src/plone/volto/tests/test_setup.py
D src/plone/volto/profiles/default/types/Plone_Site.xml

b'diff --git a/src/plone/volto/profiles/default/types/Plone_Site.xml b/src/plone/volto/profiles/default/types/Plone_Site.xml\ndeleted file mode 100644\nindex 974ec18..0000000\n--- a/src/plone/volto/profiles/default/types/Plone_Site.xml\n+++ /dev/null\n@@ -1,9 +0,0 @@\n-<?xml version="1.0"?>\n-<object name="Plone Site"\n-   i18n:domain="plone" xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n-\n-  <property name="behaviors" purge="false">\n-    <element value="volto.blocks" />\n-  </property>\n-\n-</object>\ndiff --git a/src/plone/volto/setuphandlers.py b/src/plone/volto/setuphandlers.py\nindex acf25a6..ea36cbd 100644\n--- a/src/plone/volto/setuphandlers.py\n+++ b/src/plone/volto/setuphandlers.py\n@@ -46,7 +46,10 @@ def getNonInstallableProfiles(self):\n def post_install(context):\n     """Post install script"""\n     # For Plone 6, make sure the blocks behavior is enabled in the root\n-    add_behavior("Plone Site", "volto.blocks")\n+    if PLONE_6:\n+        add_behavior("Plone Site", "volto.blocks")\n+    else:\n+        set_edit_action_in_plone_site_for_plone5(context)\n \n     # Remove plone.richtext from content types with blocks enabled\n     for type_ in NO_RICHTEXT_BEHAVIOR_CONTENT_TYPES:\n@@ -171,6 +174,47 @@ def remove_behavior(portal_type, behavior):\n         fti.behaviors = tuple(new)\n \n \n+def set_edit_action_in_plone_site_for_plone5(context):\n+    pt = api.portal.get_tool("portal_types")\n+    fti = pt.getTypeInfo("Plone Site")\n+\n+    # Plone site Edit action properties\n+    action_id = "edit"\n+    category = "object"\n+    condition = ""\n+    title = "Edit"\n+    action = "string:${object_url}/edit"\n+    visible = "True"\n+    permissions = ["Modify portal content"]\n+    icon_expr = ""\n+    link_target = ""\n+\n+    action_obj = fti.getActionObject(category + "/" + action_id)\n+\n+    if action_obj is None:\n+        fti.addAction(\n+            action_id,\n+            title,\n+            action,\n+            condition,\n+            tuple(permissions),\n+            category,\n+            visible,\n+            icon_expr=icon_expr,\n+            link_target=link_target,\n+        )\n+    else:\n+        action_obj.edit(\n+            title=title,\n+            action=action,\n+            icon_expr=icon_expr,\n+            condition=condition,\n+            permissions=tuple(permissions),\n+            visible=visible,\n+            link_target=link_target,\n+        )\n+\n+\n def create_default_homepage_draftjs(context):\n     create_default_homepage(context, block_type="draftJS")\n \ndiff --git a/src/plone/volto/tests/test_setup.py b/src/plone/volto/tests/test_setup.py\nindex 4682038..f3a5072 100644\n--- a/src/plone/volto/tests/test_setup.py\n+++ b/src/plone/volto/tests/test_setup.py\n@@ -40,6 +40,20 @@ def test_browserlayer(self):\n \n         self.assertIn(IPloneVoltoCoreLayer, utils.registered_layers())\n \n+    def test_plone_site_has_blocks_behavior(self):\n+        pt = api.portal.get_tool("portal_types")\n+        fti = pt.getTypeInfo("Plone Site")\n+\n+        self.assertTrue("volto.blocks" in fti.behaviors)\n+\n+    def test_plone_site_has_edit_action_setup(self):\n+        pt = api.portal.get_tool("portal_types")\n+        fti = pt.getTypeInfo("Plone Site")\n+\n+        action_obj = fti.getActionObject("object/edit")\n+        self.assertIsNotNone(action_obj)\n+        self.assertTrue("Modify portal content" in action_obj.permissions)\n+\n \n class TestUninstall(unittest.TestCase):\n \n'

Repository: plone.volto


Branch: refs/heads/main
Date: 2022-01-18T10:26:48+01:00
Author: Victor Fernandez de Alba (sneridagh) <sneridagh@gmail.com>
Commit: https://github.com/plone/plone.volto/commit/0b82a0877916bab04af29f87d6dec03d5d9fa109

Fix test for Plone 5

Files changed:
M src/plone/volto/tests/test_setup.py

b'diff --git a/src/plone/volto/tests/test_setup.py b/src/plone/volto/tests/test_setup.py\nindex f3a5072..bc4d0aa 100644\n--- a/src/plone/volto/tests/test_setup.py\n+++ b/src/plone/volto/tests/test_setup.py\n@@ -12,6 +12,15 @@\n \n import unittest\n \n+try:\n+    from Products.CMFPlone.factory import PLONE60MARKER\n+\n+    PLONE60MARKER  # pyflakes\n+except ImportError:\n+    PLONE_6 = False\n+else:\n+    PLONE_6 = True\n+\n \n class TestSetup(unittest.TestCase):\n     """Test that plone.volto is properly installed."""\n@@ -40,6 +49,10 @@ def test_browserlayer(self):\n \n         self.assertIn(IPloneVoltoCoreLayer, utils.registered_layers())\n \n+    @unittest.skipIf(\n+        not PLONE_6,\n+        "This test is only intended to run for Plone 6",\n+    )\n     def test_plone_site_has_blocks_behavior(self):\n         pt = api.portal.get_tool("portal_types")\n         fti = pt.getTypeInfo("Plone Site")\n'

Repository: plone.volto


Branch: refs/heads/main
Date: 2022-01-19T21:47:31+01:00
Author: Victor Fernandez de Alba (sneridagh) <sneridagh@gmail.com>
Commit: https://github.com/plone/plone.volto/commit/551371a92311f66a411ad7146ea133c97fd115d1

Merge branch 'main' into cleanupbefore4.0.0

* main:
  Remove c.folderishtypes dependency. (#36)

Files changed:
A src/plone/volto/content.py
A src/plone/volto/profiles/default/types/Event.xml
A src/plone/volto/profiles/default/types/News_Item.xml
M CHANGES.rst
M setup.py
M src/plone/volto/dependencies.zcml
M src/plone/volto/interfaces.py
M src/plone/volto/patches.py
M src/plone/volto/profiles/default/metadata.xml
M src/plone/volto/profiles/default/types.xml
M src/plone/volto/profiles/default/types/Document.xml
M src/plone/volto/upgrades.py
M src/plone/volto/upgrades.zcml

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 874d0f1..a66917d 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -22,6 +22,12 @@ Changelog\n 3.1.0a9 (2022-01-15)\n --------------------\n \n+Breaking:\n+\n+- Remove c.folderishtypes dependency\n+\n+New Feature:\n+\n - Add new field in the coresandbox: not constrained by vocabulary field but the vocabulary defined in the widget.\n   [sneridagh]\n \ndiff --git a/setup.py b/setup.py\nindex 6bd94d0..942ff00 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -57,7 +57,6 @@ def readfile(name):\n         "Products.GenericSetup",\n         "setuptools",\n         "plone.restapi>=8.13.0",\n-        "collective.folderishtypes[dexterity]",\n         "plone.app.vocabularies>=4.3.0",\n     ],\n     extras_require={\ndiff --git a/src/plone/volto/content.py b/src/plone/volto/content.py\nnew file mode 100644\nindex 0000000..2e67e18\n--- /dev/null\n+++ b/src/plone/volto/content.py\n@@ -0,0 +1,24 @@\n+# -*- coding: utf-8 -*-\n+from plone.volto.interfaces import IFolderishDocument\n+from plone.volto.interfaces import IFolderishEvent\n+from plone.volto.interfaces import IFolderishNewsItem\n+from plone.app.contenttypes.interfaces import IDocument\n+from plone.app.contenttypes.interfaces import IEvent\n+from plone.app.contenttypes.interfaces import INewsItem\n+from plone.dexterity.content import Container\n+from zope.interface import implementer\n+\n+\n+@implementer(IDocument, IFolderishDocument)\n+class FolderishDocument(Container):\n+    pass\n+\n+\n+@implementer(IEvent, IFolderishEvent)\n+class FolderishEvent(Container):\n+    pass\n+\n+\n+@implementer(INewsItem, IFolderishNewsItem)\n+class FolderishNewsItem(Container):\n+    pass\ndiff --git a/src/plone/volto/dependencies.zcml b/src/plone/volto/dependencies.zcml\nindex d34667f..bd61c7d 100644\n--- a/src/plone/volto/dependencies.zcml\n+++ b/src/plone/volto/dependencies.zcml\n@@ -18,6 +18,5 @@\n       />\n   <include package="plone.restapi" />\n   <include package="plone.api" />\n-  <include package="collective.folderishtypes" />\n \n </configure>\ndiff --git a/src/plone/volto/interfaces.py b/src/plone/volto/interfaces.py\nindex 41701c5..9938251 100644\n--- a/src/plone/volto/interfaces.py\n+++ b/src/plone/volto/interfaces.py\n@@ -9,6 +9,10 @@ class IPloneVoltoCoreLayer(IDefaultBrowserLayer):\n     """Marker interface that defines a browser layer."""\n \n \n+class IThemeSpecific(IPloneVoltoCoreLayer):\n+    """bbb for collective.folderishtypes browser interface."""\n+\n+\n class IVoltoSettings(Interface):\n     """Volto settings necessary to store in the backend"""\n \n@@ -17,3 +21,19 @@ class IVoltoSettings(Interface):\n         description=u"Used for rewriting URL\'s sent in the password reset e-mail by Plone.",\n         default="http://localhost:3000",\n     )\n+\n+\n+class IFolderishType(Interface):\n+    """Marker interface"""\n+\n+\n+class IFolderishDocument(IFolderishType):\n+    """Marker interface"""\n+\n+\n+class IFolderishEvent(IFolderishType):\n+    """Marker interface"""\n+\n+\n+class IFolderishNewsItem(IFolderishType):\n+    """Marker interface"""\ndiff --git a/src/plone/volto/patches.py b/src/plone/volto/patches.py\nindex bfd8dba..333356e 100644\n--- a/src/plone/volto/patches.py\n+++ b/src/plone/volto/patches.py\n@@ -1,3 +1,7 @@\n+from plone.app.upgrade.utils import alias_module\n+from plone.volto import logger\n+from plone.volto import content\n+from plone.volto import interfaces\n from plone.volto.interfaces import IVoltoSettings\n from plone.registry.interfaces import IRegistry\n from plone.rest.interfaces import IAPIRequest\n@@ -12,6 +16,15 @@\n LOG = logging.getLogger("Zope.SiteErrorLog")\n \n \n+try:\n+    from collective.folderishtypes.dx import content  # noqa F401\n+except ImportError:\n+    logger.info("Aliasing collective.folderish classes to plone.volto classes.")\n+    alias_module("collective.folderishtypes.dx.content", content)\n+    alias_module("collective.folderishtypes.dx.interfaces", interfaces)\n+    alias_module("collective.folderishtypes.interfaces", interfaces)\n+\n+\n def _do_copy_to_zlog(self, now, strtype, entry_id, url, tb_text):\n     when = _rate_restrict_pool.get(strtype, 0)\n     if now > when:\ndiff --git a/src/plone/volto/profiles/default/metadata.xml b/src/plone/volto/profiles/default/metadata.xml\nindex 41189c2..05c4a65 100644\n--- a/src/plone/volto/profiles/default/metadata.xml\n+++ b/src/plone/volto/profiles/default/metadata.xml\n@@ -1,8 +1,7 @@\n <?xml version="1.0" encoding="UTF-8"?>\n <metadata>\n-  <version>1013</version>\n+  <version>1015</version>\n   <dependencies>\n-    <dependency>profile-collective.folderishtypes.dx:default</dependency>\n     <dependency>profile-plone.restapi:blocks</dependency>\n   </dependencies>\n </metadata>\ndiff --git a/src/plone/volto/profiles/default/types.xml b/src/plone/volto/profiles/default/types.xml\nindex 3c39681..0120511 100644\n--- a/src/plone/volto/profiles/default/types.xml\n+++ b/src/plone/volto/profiles/default/types.xml\n@@ -4,4 +4,6 @@\n   <object meta_type="Dexterity FTI" name="LRF" />\n   <object meta_type="Dexterity FTI" name="Document" />\n   <object meta_type="Dexterity FTI" name="Collection" />\n+  <object meta_type="Dexterity FTI" name="News Item" />\n+  <object meta_type="Dexterity FTI" name="Event" />\n </object>\ndiff --git a/src/plone/volto/profiles/default/types/Document.xml b/src/plone/volto/profiles/default/types/Document.xml\nindex 88e2284..9fd8222 100644\n--- a/src/plone/volto/profiles/default/types/Document.xml\n+++ b/src/plone/volto/profiles/default/types/Document.xml\n@@ -5,8 +5,12 @@\n     name="Document"\n     xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n \n+  <property name="filter_content_types">False</property>\n+  <property name="klass">plone.volto.content.FolderishDocument</property>\n+\n   <!-- Enabled behaviors -->\n   <property name="behaviors">\n+    <element value="plone.constraintypes"/>\n     <element value="plone.namefromtitle" />\n     <element value="plone.allowdiscussion" />\n     <element value="plone.excludefromnavigation" />\ndiff --git a/src/plone/volto/profiles/default/types/Event.xml b/src/plone/volto/profiles/default/types/Event.xml\nnew file mode 100644\nindex 0000000..b4bbde2\n--- /dev/null\n+++ b/src/plone/volto/profiles/default/types/Event.xml\n@@ -0,0 +1,9 @@\n+<?xml version="1.0"?>\n+<object name="Event" meta_type="Dexterity FTI" i18n:domain="plone"\n+    xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n+  <property name="filter_content_types">False</property>\n+  <property name="klass">plone.volto.content.FolderishEvent</property>\n+  <property name="behaviors" purge="false">\n+    <element value="plone.constraintypes"/>\n+  </property>\n+</object>\ndiff --git a/src/plone/volto/profiles/default/types/News_Item.xml b/src/plone/volto/profiles/default/types/News_Item.xml\nnew file mode 100644\nindex 0000000..f3dc922\n--- /dev/null\n+++ b/src/plone/volto/profiles/default/types/News_Item.xml\n@@ -0,0 +1,9 @@\n+<?xml version="1.0"?>\n+<object name="News Item" meta_type="Dexterity FTI" i18n:domain="plone"\n+    xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n+  <property name="filter_content_types">False</property>\n+  <property name="klass">plone.volto.content.FolderishNewsItem</property>\n+  <property name="behaviors" purge="false">\n+    <element value="plone.constraintypes"/>\n+  </property>\n+</object>\ndiff --git a/src/plone/volto/upgrades.py b/src/plone/volto/upgrades.py\nindex 096367f..26ad4f8 100644\n--- a/src/plone/volto/upgrades.py\n+++ b/src/plone/volto/upgrades.py\n@@ -1,10 +1,44 @@\n from copy import deepcopy\n from plone import api\n from plone.restapi.behaviors import IBlocks\n+from plone.volto import content\n+from plone.volto import logger\n from plone.volto.setuphandlers import NO_RICHTEXT_BEHAVIOR_CONTENT_TYPES\n from plone.volto.setuphandlers import remove_behavior\n \n \n+MIGRATION = {\n+    "Document": content.FolderishDocument,\n+    "Event": content.FolderishEvent,\n+    "News Item": content.FolderishNewsItem,\n+}\n+\n+\n+def migrate_content_classes(context):\n+    """Migrate content created with collective.folderishtypes to plone.volto."""\n+    interface = "collective.folderishtypes.interfaces.IFolderishType"\n+    idxs = [\n+        "object_provides",\n+    ]\n+    brains = api.content.find(object_provides=interface)\n+    total_brains = len(brains)\n+    logger.info(f"Migration: {total_brains} contents to be migrated.")\n+    for idx, brain in enumerate(brains):\n+        content = brain.getObject()\n+        content_id = content.getId()\n+        content.__class__ = MIGRATION[content.portal_type]\n+        parent = content.aq_parent\n+        parent._delOb(content_id)\n+        parent._setOb(content_id, content)\n+        content = parent[content_id]\n+        content.reindexObject(idxs=idxs)\n+\n+        if idx and idx % 100 == 0:\n+            logger.info(f"Migration: {idx + 1} / {total_brains}")\n+\n+    logger.info("Migration from collective.folderishtypes to plone.volto complete")\n+\n+\n def from12to13_migrate_listings(context):\n     def migrate_listing(originBlocks):\n         blocks = deepcopy(originBlocks)\ndiff --git a/src/plone/volto/upgrades.zcml b/src/plone/volto/upgrades.zcml\nindex d226011..45eff5a 100644\n--- a/src/plone/volto/upgrades.zcml\n+++ b/src/plone/volto/upgrades.zcml\n@@ -21,10 +21,26 @@\n       import_steps="catalog"\n       />\n \n-  <genericsetup:upgradeSteps\n+  <genericsetup:upgradeDepends\n+      title="Move from c.folderishtypes to local"\n       profile="plone.volto:default"\n       source="1012"\n       destination="1013"\n+      import_steps="typeinfo"\n+      />\n+\n+  <genericsetup:upgradeStep\n+      title="Migrate existing content classes from old c.folderishtypes to local"\n+      profile="plone.volto:default"\n+      source="1013"\n+      destination="1014"\n+      handler=".upgrades.migrate_content_classes"\n+      />\n+\n+  <genericsetup:upgradeSteps\n+      profile="plone.volto:default"\n+      source="1014"\n+      destination="1015"\n       >\n     <genericsetup:upgradeDepends\n         title="Update types info for Plone Site"\n'

Repository: plone.volto


Branch: refs/heads/main
Date: 2022-01-20T11:15:55+01:00
Author: Víctor Fernández de Alba (sneridagh) <sneridagh@gmail.com>
Commit: https://github.com/plone/plone.volto/commit/7e01029ab2fa3acd39d48d4395aab08c59a7bdc2

Merge pull request #43 from plone/cleanupbefore4.0.0

Code cleanup, add 'volto.blocks' behavior to Plone Site GS types info…

Files changed:
A src/plone/volto/profiles/default/types/Collection.xml
M CHANGES.rst
M src/plone/volto/profiles/default/metadata.xml
M src/plone/volto/profiles/default/types.xml
M src/plone/volto/setuphandlers.py
M src/plone/volto/tests/test_setup.py
M src/plone/volto/upgrades.py
M src/plone/volto/upgrades.zcml
D src/plone/volto/profiles/default/types/Plone_Site.xml

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 3abb6f2..a66917d 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -7,6 +7,17 @@ Changelog\n - Use by default Slate blocks for the default pages\n   [sneridagh]\n \n+- Code cleanup, remove some outdated and unused helpers in ``setuptools.py``\n+  [sneridagh]\n+\n+- Add ``volto.blocks`` behavior to Plone Site GS types info.\n+  [sneridagh]\n+\n+- Remove ``Collection`` from types in GS types info.\n+  [sneridagh]\n+\n+- Remove ``plone.richtext`` behavior from Plone Site, Document, News Item, Events\n+  [sneridagh]\n \n 3.1.0a9 (2022-01-15)\n --------------------\ndiff --git a/src/plone/volto/profiles/default/metadata.xml b/src/plone/volto/profiles/default/metadata.xml\nindex 7a6e546..05c4a65 100644\n--- a/src/plone/volto/profiles/default/metadata.xml\n+++ b/src/plone/volto/profiles/default/metadata.xml\n@@ -1,6 +1,6 @@\n <?xml version="1.0" encoding="UTF-8"?>\n <metadata>\n-  <version>1014</version>\n+  <version>1015</version>\n   <dependencies>\n     <dependency>profile-plone.restapi:blocks</dependency>\n   </dependencies>\ndiff --git a/src/plone/volto/profiles/default/types.xml b/src/plone/volto/profiles/default/types.xml\nindex 0401464..0120511 100644\n--- a/src/plone/volto/profiles/default/types.xml\n+++ b/src/plone/volto/profiles/default/types.xml\n@@ -3,6 +3,7 @@\n   <object name="Plone Site" />\n   <object meta_type="Dexterity FTI" name="LRF" />\n   <object meta_type="Dexterity FTI" name="Document" />\n+  <object meta_type="Dexterity FTI" name="Collection" />\n   <object meta_type="Dexterity FTI" name="News Item" />\n   <object meta_type="Dexterity FTI" name="Event" />\n </object>\ndiff --git a/src/plone/volto/profiles/default/types/Collection.xml b/src/plone/volto/profiles/default/types/Collection.xml\nnew file mode 100644\nindex 0000000..c7299d5\n--- /dev/null\n+++ b/src/plone/volto/profiles/default/types/Collection.xml\n@@ -0,0 +1,8 @@\n+<?xml version="1.0"?>\n+<object name="Collection" meta_type="Dexterity FTI" i18n:domain="plone"\n+   xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n+\n+  <!-- Collections in Volto are disabled by default -->\n+  <property name="global_allow">False</property>\n+\n+</object>\ndiff --git a/src/plone/volto/profiles/default/types/Plone_Site.xml b/src/plone/volto/profiles/default/types/Plone_Site.xml\ndeleted file mode 100644\nindex db7de5d..0000000\n--- a/src/plone/volto/profiles/default/types/Plone_Site.xml\n+++ /dev/null\n@@ -1,14 +0,0 @@\n-<?xml version="1.0"?>\n-<object name="Plone Site"\n-   i18n:domain="plone" xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n- <action\n-    action_id="edit"\n-    category="object"\n-    condition_expr=""\n-    i18n:attributes="title"\n-    title="Edit"\n-    url_expr="string:${object_url}/edit"\n-    visible="True">\n-  <permission value="Manage portal"/>\n- </action>\n-</object>\ndiff --git a/src/plone/volto/setuphandlers.py b/src/plone/volto/setuphandlers.py\nindex 568dafc..ea36cbd 100644\n--- a/src/plone/volto/setuphandlers.py\n+++ b/src/plone/volto/setuphandlers.py\n@@ -2,22 +2,14 @@\n from plone import api\n from plone.app.multilingual.browser.setup import SetupMultilingualSite\n from plone.app.multilingual.setuphandlers import enable_translatable_behavior\n-from plone.app.portlets.utils import assignment_mapping_from_key\n from plone.dexterity.interfaces import IDexterityFTI\n-from plone.portlets.constants import CONTEXT_CATEGORY\n-from plone.portlets.interfaces import IPortletAssignmentMapping\n-from plone.portlets.interfaces import IPortletManager\n from plone.volto.default_homepage.default import default_home\n from plone.volto.default_homepage.demo import demo_home_page\n from plone.volto.default_homepage.lrf import default_lrf_home\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.interfaces import INonInstallable\n from Products.CMFPlone.utils import get_installer\n-from zope.component import getMultiAdapter\n-from zope.component import getUtility\n from zope.component import queryUtility\n-from zope.component.interfaces import IFactory\n-from zope.container.interfaces import INameChooser\n from zope.interface import implementer\n \n import json\n@@ -36,6 +28,13 @@\n \n logger = logging.getLogger("plone.volto")\n \n+NO_RICHTEXT_BEHAVIOR_CONTENT_TYPES = [\n+    "Plone Site",\n+    "Document",\n+    "News Item",\n+    "Event",\n+]\n+\n \n @implementer(INonInstallable)\n class HiddenProfiles(object):\n@@ -49,6 +48,12 @@ def post_install(context):\n     # For Plone 6, make sure the blocks behavior is enabled in the root\n     if PLONE_6:\n         add_behavior("Plone Site", "volto.blocks")\n+    else:\n+        set_edit_action_in_plone_site_for_plone5(context)\n+\n+    # Remove plone.richtext from content types with blocks enabled\n+    for type_ in NO_RICHTEXT_BEHAVIOR_CONTENT_TYPES:\n+        remove_behavior(type_, "plone.richtext")\n \n \n def uninstall(context):\n@@ -147,64 +152,67 @@ def add_catalog_indexes(context, wanted=None):\n \n def add_behavior(portal_type, behavior):\n     fti = queryUtility(IDexterityFTI, name=portal_type)\n-    new = [\n-        currentbehavior\n-        for currentbehavior in fti.behaviors\n-        if currentbehavior != behavior\n-    ]\n-    new.append(behavior)\n-    fti.behaviors = tuple(new)\n-\n-\n-def setupNavigationPortlet(\n-    context,\n-    name="",\n-    root=None,\n-    includeTop=False,\n-    currentFolderOnly=False,\n-    bottomLevel=0,\n-    topLevel=0,\n-):\n-    """\n-    setupNavigationPortlet(portal[\'vereinigungen\'][\'fachliche-vereinigungen\'][\'sektion-materie-und-kosmos\'][\'gravitation-und-relativitaetstheorie\']) # noqa\n-    """\n-    from plone.app.portlets.portlets.navigation import (\n-        Assignment as NavAssignment,\n-    )  # noqa\n-\n-    target_manager = queryUtility(\n-        IPortletManager, name="plone.leftcolumn", context=context\n-    )\n-    target_manager_assignments = getMultiAdapter(\n-        (context, target_manager), IPortletAssignmentMapping\n-    )\n-\n-    navtree = NavAssignment(\n-        includeTop=includeTop,\n-        currentFolderOnly=currentFolderOnly,\n-        bottomLevel=bottomLevel,\n-        topLevel=topLevel,\n-    )\n-\n-    if "navigation" not in target_manager_assignments.keys():\n-        target_manager_assignments["navigation"] = navtree\n-\n-\n-def setupPortletAt(portal, portlet_type, manager, path, name="", **kw):\n-    """\n-    setupPortletAt(portal, \'portlets.Events\', \'plone.rightcolumn\', \'/vereinigungen/fachliche-vereinigungen/sektion-kondensierte-materie/halbleiterphysik\') # noqa\n-    """\n-    portlet_factory = getUtility(IFactory, name=portlet_type)\n-    assignment = portlet_factory(**kw)\n-    mapping = assignment_mapping_from_key(\n-        portal, manager, CONTEXT_CATEGORY, path, create=True\n-    )\n-\n-    if not name:\n-        chooser = INameChooser(mapping)\n-        name = chooser.chooseName(None, assignment)\n-\n-    mapping[name] = assignment\n+    if fti is not None:\n+        # This prevents to add the behavior twice\n+        new = [\n+            currentbehavior\n+            for currentbehavior in fti.behaviors\n+            if currentbehavior != behavior\n+        ]\n+        new.append(behavior)\n+        fti.behaviors = tuple(new)\n+\n+\n+def remove_behavior(portal_type, behavior):\n+    fti = queryUtility(IDexterityFTI, name=portal_type)\n+    if fti is not None:\n+        new = [\n+            currentbehavior\n+            for currentbehavior in fti.behaviors\n+            if currentbehavior != behavior\n+        ]\n+        fti.behaviors = tuple(new)\n+\n+\n+def set_edit_action_in_plone_site_for_plone5(context):\n+    pt = api.portal.get_tool("portal_types")\n+    fti = pt.getTypeInfo("Plone Site")\n+\n+    # Plone site Edit action properties\n+    action_id = "edit"\n+    category = "object"\n+    condition = ""\n+    title = "Edit"\n+    action = "string:${object_url}/edit"\n+    visible = "True"\n+    permissions = ["Modify portal content"]\n+    icon_expr = ""\n+    link_target = ""\n+\n+    action_obj = fti.getActionObject(category + "/" + action_id)\n+\n+    if action_obj is None:\n+        fti.addAction(\n+            action_id,\n+            title,\n+            action,\n+            condition,\n+            tuple(permissions),\n+            category,\n+            visible,\n+            icon_expr=icon_expr,\n+            link_target=link_target,\n+        )\n+    else:\n+        action_obj.edit(\n+            title=title,\n+            action=action,\n+            icon_expr=icon_expr,\n+            condition=condition,\n+            permissions=tuple(permissions),\n+            visible=visible,\n+            link_target=link_target,\n+        )\n \n \n def create_default_homepage_draftjs(context):\ndiff --git a/src/plone/volto/tests/test_setup.py b/src/plone/volto/tests/test_setup.py\nindex 4682038..bc4d0aa 100644\n--- a/src/plone/volto/tests/test_setup.py\n+++ b/src/plone/volto/tests/test_setup.py\n@@ -12,6 +12,15 @@\n \n import unittest\n \n+try:\n+    from Products.CMFPlone.factory import PLONE60MARKER\n+\n+    PLONE60MARKER  # pyflakes\n+except ImportError:\n+    PLONE_6 = False\n+else:\n+    PLONE_6 = True\n+\n \n class TestSetup(unittest.TestCase):\n     """Test that plone.volto is properly installed."""\n@@ -40,6 +49,24 @@ def test_browserlayer(self):\n \n         self.assertIn(IPloneVoltoCoreLayer, utils.registered_layers())\n \n+    @unittest.skipIf(\n+        not PLONE_6,\n+        "This test is only intended to run for Plone 6",\n+    )\n+    def test_plone_site_has_blocks_behavior(self):\n+        pt = api.portal.get_tool("portal_types")\n+        fti = pt.getTypeInfo("Plone Site")\n+\n+        self.assertTrue("volto.blocks" in fti.behaviors)\n+\n+    def test_plone_site_has_edit_action_setup(self):\n+        pt = api.portal.get_tool("portal_types")\n+        fti = pt.getTypeInfo("Plone Site")\n+\n+        action_obj = fti.getActionObject("object/edit")\n+        self.assertIsNotNone(action_obj)\n+        self.assertTrue("Modify portal content" in action_obj.permissions)\n+\n \n class TestUninstall(unittest.TestCase):\n \ndiff --git a/src/plone/volto/upgrades.py b/src/plone/volto/upgrades.py\nindex e1615e8..26ad4f8 100644\n--- a/src/plone/volto/upgrades.py\n+++ b/src/plone/volto/upgrades.py\n@@ -3,6 +3,8 @@\n from plone.restapi.behaviors import IBlocks\n from plone.volto import content\n from plone.volto import logger\n+from plone.volto.setuphandlers import NO_RICHTEXT_BEHAVIOR_CONTENT_TYPES\n+from plone.volto.setuphandlers import remove_behavior\n \n \n MIGRATION = {\n@@ -96,3 +98,8 @@ def migrate_listing(originBlocks):\n     for brain in pc.unrestrictedSearchResults(object_provides=IBlocks.__identifier__):\n         obj = brain.getObject()\n         obj.blocks = migrate_listing(obj.blocks)\n+\n+\n+def remove_plone_richtext_behavior(context):\n+    for type_ in NO_RICHTEXT_BEHAVIOR_CONTENT_TYPES:\n+        remove_behavior(type_, "plone.richtext")\ndiff --git a/src/plone/volto/upgrades.zcml b/src/plone/volto/upgrades.zcml\nindex ffbb174..45eff5a 100644\n--- a/src/plone/volto/upgrades.zcml\n+++ b/src/plone/volto/upgrades.zcml\n@@ -37,4 +37,18 @@\n       handler=".upgrades.migrate_content_classes"\n       />\n \n+  <genericsetup:upgradeSteps\n+      profile="plone.volto:default"\n+      source="1014"\n+      destination="1015"\n+      >\n+    <genericsetup:upgradeDepends\n+        title="Update types info for Plone Site"\n+        import_steps="typeinfo"\n+        />\n+    <genericsetup:upgradeStep\n+        title="remove plone.richtext from Plone Site, Document, News Item, Event"\n+        handler=".upgrades.remove_plone_richtext_behavior"\n+        />\n+  </genericsetup:upgradeSteps>\n </configure>\n'

