Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-11-29T21:47:59-08:00
Author: Katja SÃ¼ss (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.restapi/commit/faac7790329aeda13af4a656827ab6416a087085

Add "UID" to content type endpoint response of "Plone Site" (#1547)

* Add "UID" to content type endpoint response of "Plone Site"

* Fix tests with static UID

* Fix site uuid to make tests happy.

* Update jwt_logged_in.resp

Files changed:
A news/1546.bugfix
M src/plone/restapi/serializer/site.py
M src/plone/restapi/tests/http-examples/jwt_logged_in.resp
M src/plone/restapi/tests/http-examples/siteroot.resp
M src/plone/restapi/tests/test_documentation.py

b'diff --git a/news/1546.bugfix b/news/1546.bugfix\nnew file mode 100644\nindex 000000000..67e630775\n--- /dev/null\n+++ b/news/1546.bugfix\n@@ -0,0 +1 @@\n+Add "UID" to content type endpoint response of "Plone Site" @ksuess\n\\ No newline at end of file\ndiff --git a/src/plone/restapi/serializer/site.py b/src/plone/restapi/serializer/site.py\nindex a0239bab5..6a0f1018b 100644\n--- a/src/plone/restapi/serializer/site.py\n+++ b/src/plone/restapi/serializer/site.py\n@@ -68,6 +68,7 @@ def __call__(self, version=None):\n         }\n \n         if HAS_PLONE_6:\n+            result["UID"] = self.context.UID()\n             # Insert Plone Site DX root field values\n             for schema in iterSchemata(self.context):\n                 read_permissions = mergedTaggedValueDict(schema, READ_PERMISSIONS_KEY)\ndiff --git a/src/plone/restapi/tests/http-examples/jwt_logged_in.resp b/src/plone/restapi/tests/http-examples/jwt_logged_in.resp\nindex 62eea6185..2517d9f34 100644\n--- a/src/plone/restapi/tests/http-examples/jwt_logged_in.resp\n+++ b/src/plone/restapi/tests/http-examples/jwt_logged_in.resp\n@@ -27,6 +27,7 @@ Content-Type: application/json\n     },\n     "@id": "http://localhost:55001/plone",\n     "@type": "Plone Site",\n+    "UID": "55c25ebc220d400393574f37d648727c",\n     "allow_discussion": null,\n     "contributors": [],\n     "creators": [\ndiff --git a/src/plone/restapi/tests/http-examples/siteroot.resp b/src/plone/restapi/tests/http-examples/siteroot.resp\nindex 62eea6185..2517d9f34 100644\n--- a/src/plone/restapi/tests/http-examples/siteroot.resp\n+++ b/src/plone/restapi/tests/http-examples/siteroot.resp\n@@ -27,6 +27,7 @@ Content-Type: application/json\n     },\n     "@id": "http://localhost:55001/plone",\n     "@type": "Plone Site",\n+    "UID": "55c25ebc220d400393574f37d648727c",\n     "allow_discussion": null,\n     "contributors": [],\n     "creators": [\ndiff --git a/src/plone/restapi/tests/test_documentation.py b/src/plone/restapi/tests/test_documentation.py\nindex b6010ee8f..589a4cba5 100644\n--- a/src/plone/restapi/tests/test_documentation.py\n+++ b/src/plone/restapi/tests/test_documentation.py\n@@ -177,6 +177,8 @@ def setUp(self):\n         self.portal = self.layer["portal"]\n         self.portal_url = self.portal.absolute_url()\n \n+        setattr(self.portal, "_plone.uuid", "55c25ebc220d400393574f37d648727c")\n+\n         # Register custom UUID generator to produce stable UUIDs during tests\n         pushGlobalRegistry(getSite())\n         register_static_uuid_utility(prefix="SomeUUID")\n'

