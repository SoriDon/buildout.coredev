Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-04-06T02:16:07+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/7e65ea3cad1913288b93e5acdd0575ca4ae0d9e0

MigrationTool: use more standard listUpgrades code from GenericSetup 2.2.0.

I ported our special logic there.

Files changed:
A news/220.bugfix
M Products/CMFPlone/MigrationTool.py
M setup.py

b"diff --git a/Products/CMFPlone/MigrationTool.py b/Products/CMFPlone/MigrationTool.py\nindex 95dfaff1d8..30f0d6b71f 100644\n--- a/Products/CMFPlone/MigrationTool.py\n+++ b/Products/CMFPlone/MigrationTool.py\n@@ -260,22 +260,7 @@ def listUpgrades(self):\n         # using a newer plone.app.upgrade version should not give problems.\n         setup = getToolByName(self, 'portal_setup')\n         fs_version = self.getFileSystemVersion()\n-        steps = setup.listUpgrades(_DEFAULT_PROFILE)\n-        upgrades = []\n-        for upgrade_step in steps:\n-            if isinstance(upgrade_step, list):\n-                # This is a nested list of upgrade steps,\n-                # which must have the same destination.\n-                # So take the first one.\n-                if not upgrade_step:\n-                    # Empty list, not sure if this can happen in practice.\n-                    continue\n-                dest = upgrade_step[0].get('sdest')\n-            else:\n-                dest = upgrade_step.get('sdest')\n-            if dest > fs_version and dest != 'all':\n-                break\n-            upgrades.append(upgrade_step)\n+        upgrades = setup.listUpgrades(_DEFAULT_PROFILE, dest=fs_version)\n         return upgrades\n \n     security.declareProtected(ManagePortal, 'upgrade')\ndiff --git a/news/220.bugfix b/news/220.bugfix\nnew file mode 100644\nindex 0000000000..3213db05c6\n--- /dev/null\n+++ b/news/220.bugfix\n@@ -0,0 +1,3 @@\n+MigrationTool: use more standard ``listUpgrades`` code from GenericSetup 2.2.0.\n+I ported our special logic there.\n+[maurits]\ndiff --git a/setup.py b/setup.py\nindex 5728362ca5..c35df13c7f 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -94,7 +94,7 @@\n         'Products.CMFUid',\n         'Products.DCWorkflow',\n         'Products.ExtendedPathIndex',\n-        'Products.GenericSetup >= 2.0',\n+        'Products.GenericSetup >= 2.2.0',\n         'Products.isurlinportal',\n         'Products.MimetypesRegistry',\n         'Products.PlonePAS',\n"

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-04-07T18:15:28+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/36d9da519d2c59210b89be198df9665217ede21e

Merge branch 'master' into maurits-listUpgrades

Files changed:
A news/3395.feature
A news/3485.breaking
M Products/CMFPlone/CatalogTool.py
M Products/CMFPlone/DublinCore.py
M Products/CMFPlone/MigrationTool.py
M Products/CMFPlone/PasswordResetTool.py
M Products/CMFPlone/PloneBaseTool.py
M Products/CMFPlone/PloneBatch.py
M Products/CMFPlone/PloneControlPanel.py
M Products/CMFPlone/PloneTool.py
M Products/CMFPlone/Portal.py
M Products/CMFPlone/PropertiesTool.py
M Products/CMFPlone/RegistrationTool.py
M Products/CMFPlone/TranslationServiceTool.py
M Products/CMFPlone/WorkflowTool.py
M Products/CMFPlone/__init__.py
M Products/CMFPlone/browser/admin.py
M Products/CMFPlone/browser/admin.zcml
M Products/CMFPlone/browser/atd.py
M Products/CMFPlone/browser/author.py
M Products/CMFPlone/browser/configure.zcml
M Products/CMFPlone/browser/contact_info.py
M Products/CMFPlone/browser/defaultpage.py
M Products/CMFPlone/browser/login/configure.zcml
M Products/CMFPlone/browser/login/login.py
M Products/CMFPlone/browser/login/login_help.py
M Products/CMFPlone/browser/login/password_reset.py
M Products/CMFPlone/browser/navigation.py
M Products/CMFPlone/browser/navtree.py
M Products/CMFPlone/browser/ploneview.py
M Products/CMFPlone/browser/robots.py
M Products/CMFPlone/browser/search.py
M Products/CMFPlone/browser/sendto.py
M Products/CMFPlone/browser/sitelogo.py
M Products/CMFPlone/browser/syndication/adapters.py
M Products/CMFPlone/browser/syndication/configure.zcml
M Products/CMFPlone/browser/syndication/settings.py
M Products/CMFPlone/browser/syndication/tool.py
M Products/CMFPlone/browser/syndication/utils.py
M Products/CMFPlone/browser/syndication/views.py
M Products/CMFPlone/catalog.zcml
M Products/CMFPlone/configure.zcml
M Products/CMFPlone/controlpanel/README.rst
M Products/CMFPlone/controlpanel/bbb/editing.py
M Products/CMFPlone/controlpanel/bbb/filter.py
M Products/CMFPlone/controlpanel/bbb/language.py
M Products/CMFPlone/controlpanel/bbb/mail.py
M Products/CMFPlone/controlpanel/bbb/maintenance.py
M Products/CMFPlone/controlpanel/bbb/markup.py
M Products/CMFPlone/controlpanel/bbb/navigation.py
M Products/CMFPlone/controlpanel/bbb/search.py
M Products/CMFPlone/controlpanel/bbb/security.py
M Products/CMFPlone/controlpanel/bbb/site.py
M Products/CMFPlone/controlpanel/bbb/usergroups.py
M Products/CMFPlone/controlpanel/browser/actions.py
M Products/CMFPlone/controlpanel/browser/configure.zcml
M Products/CMFPlone/controlpanel/browser/dateandtime.py
M Products/CMFPlone/controlpanel/browser/editing.py
M Products/CMFPlone/controlpanel/browser/filter.py
M Products/CMFPlone/controlpanel/browser/imaging.py
M Products/CMFPlone/controlpanel/browser/mail.py
M Products/CMFPlone/controlpanel/browser/maintenance.py
M Products/CMFPlone/controlpanel/browser/markup.py
M Products/CMFPlone/controlpanel/browser/navigation.py
M Products/CMFPlone/controlpanel/browser/overview.py
M Products/CMFPlone/controlpanel/browser/quickinstaller.py
M Products/CMFPlone/controlpanel/browser/redirects.py
M Products/CMFPlone/controlpanel/browser/resourceregistry.py
M Products/CMFPlone/controlpanel/browser/search.py
M Products/CMFPlone/controlpanel/browser/security.py
M Products/CMFPlone/controlpanel/browser/site.py
M Products/CMFPlone/controlpanel/browser/socialmedia.py
M Products/CMFPlone/controlpanel/browser/syndication.py
M Products/CMFPlone/controlpanel/browser/tinymce.py
M Products/CMFPlone/controlpanel/browser/types.py
M Products/CMFPlone/controlpanel/browser/usergroups.py
M Products/CMFPlone/controlpanel/events.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_editing_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_filter_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_mail_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_maintenance_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_markup_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_navigation_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_search_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_security_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_site_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_usergroups_adapter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_editing.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_filter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_mail.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_markup.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_navigation.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_search.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_security.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_site.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_dateandtime.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_editing.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_events.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_filter.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_mail.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_markup.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_navigation.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_search.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_security.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_site.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_types.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_usergroups.py
M Products/CMFPlone/controlpanel/tests/test_upgrades1.zcml
M Products/CMFPlone/controlpanel/tests/test_upgrades2.zcml
M Products/CMFPlone/defaultpage.py
M Products/CMFPlone/events.py
M Products/CMFPlone/exportimport/configure.zcml
M Products/CMFPlone/exportimport/controlpanel.py
M Products/CMFPlone/exportimport/propertiestool.py
M Products/CMFPlone/exportimport/tests/testControlPanel.py
M Products/CMFPlone/exportimport/tests/testPropertiesTool.py
M Products/CMFPlone/factory.py
M Products/CMFPlone/i18nl10n.py
M Products/CMFPlone/interfaces/__init__.py
M Products/CMFPlone/interfaces/atd.py
M Products/CMFPlone/interfaces/basetool.py
M Products/CMFPlone/interfaces/breadcrumbs.py
M Products/CMFPlone/interfaces/constrains.py
M Products/CMFPlone/interfaces/controlpanel.py
M Products/CMFPlone/interfaces/defaultpage.py
M Products/CMFPlone/interfaces/events.py
M Products/CMFPlone/interfaces/installable.py
M Products/CMFPlone/interfaces/interface.py
M Products/CMFPlone/interfaces/language.py
M Products/CMFPlone/interfaces/login.py
M Products/CMFPlone/interfaces/migration.py
M Products/CMFPlone/interfaces/password_reset.py
M Products/CMFPlone/interfaces/patterns.py
M Products/CMFPlone/interfaces/properties.py
M Products/CMFPlone/interfaces/resources.py
M Products/CMFPlone/interfaces/siteroot.py
M Products/CMFPlone/interfaces/structure.py
M Products/CMFPlone/interfaces/syndication.py
M Products/CMFPlone/interfaces/translationservice.py
M Products/CMFPlone/log.py
M Products/CMFPlone/patches/sendmail.py
M Products/CMFPlone/patterns/configure.zcml
M Products/CMFPlone/patterns/settings.py
M Products/CMFPlone/patterns/tinymce.py
M Products/CMFPlone/patterns/view.py
M Products/CMFPlone/permissions.py
M Products/CMFPlone/profiles.zcml
M Products/CMFPlone/resources/browser/combine.py
M Products/CMFPlone/resources/browser/resource.py
M Products/CMFPlone/resources/utils.py
M Products/CMFPlone/setuphandlers.py
M Products/CMFPlone/tests/csrf.txt
M Products/CMFPlone/tests/dummy.py
M Products/CMFPlone/tests/pwreset_browser.rst
M Products/CMFPlone/tests/robot/robot_setup.py
M Products/CMFPlone/tests/testBatch.py
M Products/CMFPlone/tests/testBrowserDefault.py
M Products/CMFPlone/tests/testEmailLogin.py
M Products/CMFPlone/tests/testIImagingSchema.py
M Products/CMFPlone/tests/testNavTree.py
M Products/CMFPlone/tests/testNavigationView.py
M Products/CMFPlone/tests/testPloneTool.py
M Products/CMFPlone/tests/testPortalCreation.py
M Products/CMFPlone/tests/testQueryCatalog.py
M Products/CMFPlone/tests/testRegistrationTool.py
M Products/CMFPlone/tests/testResourceRegistries.py
M Products/CMFPlone/tests/testSearch.py
M Products/CMFPlone/tests/testSyndication.py
M Products/CMFPlone/tests/testURLTool.py
M Products/CMFPlone/tests/test_defaultpage.py
M Products/CMFPlone/tests/test_doctests.py
M Products/CMFPlone/tests/test_mails.py
M Products/CMFPlone/tests/test_patternsettings.py
M Products/CMFPlone/tests/test_redirect_after_login.py
M Products/CMFPlone/tests/test_robots_txt.py
M Products/CMFPlone/tests/test_sitelogo.py
M Products/CMFPlone/tests/test_utils.py
M Products/CMFPlone/traversal.py
M Products/CMFPlone/utils.py
M Products/CMFPlone/workflow.py
M setup.py
D Products/CMFPlone/_compat.py
D Products/CMFPlone/deprecated.zcml
D Products/CMFPlone/meta-bbb.zcml
D Products/CMFPlone/tests/messages.txt
D Products/CMFPlone/tests/test_l18nl10n.py

b'diff --git a/Products/CMFPlone/CatalogTool.py b/Products/CMFPlone/CatalogTool.py\nindex 03810c863e..be18058b5f 100644\n--- a/Products/CMFPlone/CatalogTool.py\n+++ b/Products/CMFPlone/CatalogTool.py\n@@ -21,13 +21,13 @@\n from Products.CMFCore.utils import _getAuthenticatedUser\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import DISCUSSION_ANNOTATION_KEY\n-from Products.CMFPlone.interfaces import INonStructuralFolder\n-from Products.CMFPlone.interfaces import IPloneCatalogTool\n+from plone.base.interfaces import INonStructuralFolder\n+from plone.base.interfaces import IPloneCatalogTool\n from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n from Products.CMFPlone.utils import base_hasattr\n from Products.CMFPlone.utils import human_readable_size\n from Products.CMFPlone.utils import safe_callable\n-from Products.CMFPlone.utils import safe_unicode\n+from plone.base.utils import safe_text\n from Products.ZCatalog.ZCatalog import ZCatalog\n from time import process_time\n from zExceptions import Unauthorized\n@@ -51,7 +51,7 @@\n _marker = object()\n \n MAX_SORTABLE_TITLE = 40\n-BLACKLISTED_INTERFACES = frozenset((\n+DENIED_INTERFACES = frozenset((\n     \'AccessControl.interfaces.IOwned\',\n     \'AccessControl.interfaces.IPermissionMappingSupport\',\n     \'AccessControl.interfaces.IRoleManager\',\n@@ -92,8 +92,8 @@\n     \'Products.CMFCore.interfaces._content.IWorkflowAware\',\n     \'Products.CMFDynamicViewFTI.interfaces.IBrowserDefault\',\n     \'Products.CMFDynamicViewFTI.interfaces.ISelectableBrowserDefault\',\n-    \'Products.CMFPlone.interfaces.constrains.IConstrainTypes\',\n-    \'Products.CMFPlone.interfaces.constrains.ISelectableConstrainTypes\',\n+    \'plone.base.interfaces.constrains.IConstrainTypes\',\n+    \'plone.base.interfaces.constrains.ISelectableConstrainTypes\',\n     \'Products.GenericSetup.interfaces.IDAVAware\',\n     \'webdav.EtagSupport.EtagBaseInterface\',\n     \'webdav.interfaces.IDAVCollection\',\n@@ -112,13 +112,8 @@\n     \'zope.interface.Interface\',\n ))\n \n-\n-@deprecate(\'Use catalog.getAllBrains() instead. \' +\n-           \'catalog_get_all will be removed in Plone 6\')\n-def catalog_get_all(catalog, unique_idx=\'UID\'):\n-    """Get all brains from the catalog.\n-    """\n-    return catalog.getAllBrains()\n+# bbb, remove in Plone 7\n+BLACKLISTED_INTERFACES = DENIED_INTERFACES\n \n \n @indexer(Interface)\n@@ -157,7 +152,7 @@ def allowedRolesAndUsers(obj):\n def object_provides(obj):\n     return tuple(\n         [i.__identifier__ for i in providedBy(obj).flattened()\n-         if i.__identifier__ not in BLACKLISTED_INTERFACES]\n+         if i.__identifier__ not in DENIED_INTERFACES]\n     )\n \n \n@@ -178,7 +173,7 @@ def sortable_title(obj):\n \n         if isinstance(title, str):\n             # Ignore case, normalize accents, strip spaces\n-            sortabletitle = mapUnicode(safe_unicode(title)).lower().strip()\n+            sortabletitle = mapUnicode(safe_text(title)).lower().strip()\n             # Replace numbers with zero filled numbers\n             sortabletitle = num_sort_regex.sub(zero_fill, sortabletitle)\n             # Truncate to prevent bloat, take bits from start and end\ndiff --git a/Products/CMFPlone/DublinCore.py b/Products/CMFPlone/DublinCore.py\nindex 8e1d12b481..1cb153139a 100644\n--- a/Products/CMFPlone/DublinCore.py\n+++ b/Products/CMFPlone/DublinCore.py\n@@ -12,22 +12,21 @@\n ##############################################################################\n """ Dublin Core support for content types. """\n \n+from AccessControl.class_init import InitializeClass\n from AccessControl.SecurityInfo import ClassSecurityInfo\n from AccessControl.SecurityManagement import getSecurityManager\n from Acquisition import aq_base\n-from AccessControl.class_init import InitializeClass\n from App.special_dtml import DTMLFile\n from DateTime.DateTime import DateTime\n from OFS.PropertyManager import PropertyManager\n-from zope.interface import implementer\n-\n+from plone.base.permissions import ModifyPortalContent\n+from plone.base.permissions import View\n from Products.CMFCore.interfaces import ICatalogableDublinCore\n from Products.CMFCore.interfaces import IDublinCore\n from Products.CMFCore.interfaces import IMutableDublinCore\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.permissions import ModifyPortalContent\n-from Products.CMFPlone.permissions import View\n from Products.CMFPlone.utils import WWW_DIR\n+from zope.interface import implementer\n \n \n _marker = []\ndiff --git a/Products/CMFPlone/MigrationTool.py b/Products/CMFPlone/MigrationTool.py\nindex 30f0d6b71f..7b56c901ee 100644\n--- a/Products/CMFPlone/MigrationTool.py\n+++ b/Products/CMFPlone/MigrationTool.py\n@@ -8,7 +8,7 @@\n from Products.CMFCore.utils import registerToolInterface\n from Products.CMFCore.utils import UniqueObject\n from Products.CMFPlone.factory import _DEFAULT_PROFILE\n-from Products.CMFPlone.interfaces import IMigrationTool\n+from plone.base.interfaces import IMigrationTool\n from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n from io import StringIO\n from ZODB.POSException import ConflictError\ndiff --git a/Products/CMFPlone/PasswordResetTool.py b/Products/CMFPlone/PasswordResetTool.py\nindex 1a20755edd..d15ecc7b20 100644\n--- a/Products/CMFPlone/PasswordResetTool.py\n+++ b/Products/CMFPlone/PasswordResetTool.py\n@@ -13,8 +13,8 @@\n from Products.CMFCore.permissions import ManagePortal\n from Products.CMFCore.utils import getToolByName\n from Products.CMFCore.utils import UniqueObject\n-from Products.CMFPlone.interfaces import IPWResetTool\n-from Products.CMFPlone.interfaces import ISecuritySchema\n+from plone.base.interfaces import IPWResetTool\n+from plone.base.interfaces import ISecuritySchema\n from Products.CMFPlone.RegistrationTool import get_member_by_login_name\n from zope.component import getUtility\n from zope.interface import implementer\ndiff --git a/Products/CMFPlone/PloneBaseTool.py b/Products/CMFPlone/PloneBaseTool.py\nindex 821724d690..d0d0a9860d 100644\n--- a/Products/CMFPlone/PloneBaseTool.py\n+++ b/Products/CMFPlone/PloneBaseTool.py\n@@ -1,6 +1,6 @@\n from AccessControl.class_init import InitializeClass\n from AccessControl import ClassSecurityInfo\n-from Products.CMFPlone.interfaces import IPloneBaseTool\n+from plone.base.interfaces import IPloneBaseTool\n from Acquisition import aq_base\n from Acquisition import aq_parent\n from Acquisition import aq_inner\ndiff --git a/Products/CMFPlone/PloneBatch.py b/Products/CMFPlone/PloneBatch.py\nindex 727a0bebff..f0f2c5eaa2 100644\n--- a/Products/CMFPlone/PloneBatch.py\n+++ b/Products/CMFPlone/PloneBatch.py\n@@ -1,72 +1,3 @@\n-from ZTUtils import make_query\n+from zope.deprecation import moved\n \n-from plone.batching.batch import QuantumBatch\n-from plone.batching.utils import calculate_pagerange\n-\n-from zope.deprecation import deprecated\n-\n-\n-class Batch(QuantumBatch):\n-\n-    b_start_str = \'b_start\'\n-\n-    def __init__(self, sequence, size, start=0, end=0, orphan=0,\n-                 overlap=0, pagerange=7, quantumleap=0,\n-                 b_start_str=\'b_start\'):\n-        super().__init__(sequence, size, start,\n-                                    end, orphan, overlap,\n-                                    pagerange, quantumleap)\n-        self.b_start_str = b_start_str\n-\n-    def __len__(self):\n-        # Note: Using len() was deprecated for several years.\n-        # It was recommended to explicitly either use the `length` attribute\n-        # for the size of the current page, which is what we return now,\n-        # or use the `sequence_length` attribute for the size of the\n-        # entire sequence.\n-        # But the deprecation was reverted for Plone 5.2.3,\n-        # because core code in Products.PageTemplates called `len`\n-        # on batches, making the deprecation warning unavoidable\n-        # and thus unnecessary.\n-        # See https://github.com/plone/Products.CMFPlone/issues/3176\n-        return self.length\n-\n-    def __bool__(self):\n-        # Without __bool__ a bool(self) would call len(self), which\n-        # gives a deprecation warning.\n-        return bool(self.length)\n-\n-    # For Python 2 compatibility:\n-    __nonzero__ = __bool__\n-\n-    def initialize(self, start, end, size):\n-        super().initialize(start, end, size)\n-        self.pagerange, self.pagerangestart, self.pagerangeend = \\\n-            calculate_pagerange(self.pagenumber, self.numpages, self.pagerange)\n-\n-    def pageurl(self, formvariables, pagenumber=-1):\n-        # Makes the url for a given page.\n-        if pagenumber == -1:\n-            pagenumber = self.pagenumber\n-        b_start = pagenumber * (self.pagesize - self.overlap) - self.pagesize\n-        return make_query(formvariables, {self.b_start_str: b_start})\n-\n-    def navurls(self, formvariables, navlist=None):\n-        # Returns the page number and url for the navigation quick links.\n-        if navlist is None:\n-            navlist = []\n-        if not navlist:\n-            navlist = self.navlist\n-        return map(lambda x, formvariables=formvariables:\n-                   (x, self.pageurl(formvariables, x)), navlist)\n-\n-    def prevurls(self, formvariables):\n-        # Helper method to get prev navigation list from templates.\n-        return self.navurls(formvariables, self.previous_pages)\n-\n-    def nexturls(self, formvariables):\n-        # Helper method to get next navigation list from templates.\n-        return self.navurls(formvariables, self.next_pages)\n-\n-    prevlist = QuantumBatch.previous_pages\n-    nextlist = QuantumBatch.next_pages\n+moved(\'plone.base.batch\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/PloneControlPanel.py b/Products/CMFPlone/PloneControlPanel.py\nindex 6b0d4503a7..0748f25765 100644\n--- a/Products/CMFPlone/PloneControlPanel.py\n+++ b/Products/CMFPlone/PloneControlPanel.py\n@@ -12,7 +12,7 @@\n from Products.CMFCore.utils import registerToolInterface\n from Products.CMFCore.utils import UniqueObject\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import IControlPanel\n+from plone.base.interfaces import IControlPanel\n from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n from zope.component.hooks import getSite\n from zope.i18n import translate\ndiff --git a/Products/CMFPlone/PloneTool.py b/Products/CMFPlone/PloneTool.py\nindex 2f0d463723..216f8c251f 100644\n--- a/Products/CMFPlone/PloneTool.py\n+++ b/Products/CMFPlone/PloneTool.py\n@@ -1,16 +1,17 @@\n from AccessControl import ClassSecurityInfo\n from AccessControl import getSecurityManager\n from AccessControl import Unauthorized\n+from AccessControl.class_init import InitializeClass\n from AccessControl.requestmethod import postonly\n from Acquisition import aq_base\n from Acquisition import aq_inner\n from Acquisition import aq_parent\n-from AccessControl.class_init import InitializeClass\n from ComputedAttribute import ComputedAttribute\n from DateTime import DateTime\n from email.utils import getaddresses\n from OFS.ObjectManager import bad_id\n from OFS.SimpleItem import SimpleItem\n+from plone.base.utils import safe_text\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.interfaces import IDublinCore\n from Products.CMFCore.interfaces import IMutableDublinCore\n@@ -24,22 +25,21 @@\n from Products.CMFCore.WorkflowCore import WorkflowException\n from Products.CMFDynamicViewFTI.interfaces import IBrowserDefault\n from Products.CMFPlone import utils\n-from Products.CMFPlone.defaultpage import check_default_page_via_view\n-from Products.CMFPlone.defaultpage import get_default_page_via_view\n+from plone.base.defaultpage import check_default_page_via_view\n+from plone.base.defaultpage import get_default_page_via_view\n from Products.CMFPlone.events import ReorderedEvent\n-from Products.CMFPlone.interfaces import INonStructuralFolder\n-from Products.CMFPlone.interfaces import IPloneTool\n-from Products.CMFPlone.interfaces import ISearchSchema\n-from Products.CMFPlone.interfaces import ISecuritySchema\n-from Products.CMFPlone.interfaces import ISiteSchema\n+from plone.base.interfaces import INonStructuralFolder\n+from plone.base.interfaces import IPloneTool\n+from plone.base.interfaces import ISearchSchema\n+from plone.base.interfaces import ISecuritySchema\n+from plone.base.interfaces import ISiteSchema\n+from Products.CMFPlone.log import log\n from Products.CMFPlone.log import log_deprecated\n+from Products.CMFPlone.log import log_exc\n from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n from Products.CMFPlone.PloneFolder import ReplaceableWrapper\n from Products.CMFPlone.utils import base_hasattr\n-from Products.CMFPlone.utils import log\n-from Products.CMFPlone.utils import log_exc\n from Products.CMFPlone.utils import safe_hasattr\n-from Products.CMFPlone.utils import safe_unicode\n from Products.CMFPlone.utils import transaction_note\n from Products.statusmessages.interfaces import IStatusMessage\n from urllib import parse\n@@ -262,7 +262,7 @@ def _makeTransactionNote(self, obj, msg=\'\'):\n             msg = relative_path + \'/\' + obj.title_or_id() \\\n                 + \' has been modified.\'\n         if not transaction.get().description:\n-            transaction_note(safe_unicode(msg))\n+            transaction_note(safe_text(msg))\n \n     @security.public\n     def contentEdit(self, obj, **kwargs):\n@@ -525,7 +525,7 @@ def isDefaultPage(self, obj, request=None):\n     @security.public\n     def getDefaultPage(self, obj, request=None):\n         # Given a folderish item, find out if it has a default-page using\n-        # the lookup rules of Plone (see Products.CMFPlone/defaultpage.py).\n+        # the lookup rules of Plone (see plone.base.defaultpage).\n         # Lookup happens over a view, for which in theory a different\n         # implementation may be used.\n         if request is None:\ndiff --git a/Products/CMFPlone/Portal.py b/Products/CMFPlone/Portal.py\nindex 024a9e49cf..a3057b0a6a 100644\n--- a/Products/CMFPlone/Portal.py\n+++ b/Products/CMFPlone/Portal.py\n@@ -5,6 +5,15 @@\n from ComputedAttribute import ComputedAttribute\n from five.localsitemanager.registry import PersistentComponents\n from OFS.ObjectManager import REPLACEABLE\n+from plone.base import PloneMessageFactory as _\n+from plone.base.interfaces.siteroot import IPloneSiteRoot\n+from plone.base.interfaces.syndication import ISyndicatable\n+from plone.base.permissions import AddPortalContent\n+from plone.base.permissions import AddPortalFolders\n+from plone.base.permissions import ListPortalMembers\n+from plone.base.permissions import ModifyPortalContent\n+from plone.base.permissions import ReplyToItem\n+from plone.base.permissions import View\n from plone.dexterity.content import Container\n from Products.CMFCore import permissions\n from Products.CMFCore.interfaces import IContentish\n@@ -23,21 +32,12 @@\n from Products.CMFCore.utils import getToolByName\n from Products.CMFCore.utils import UniqueObject\n from Products.CMFPlone import bbb\n-from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces.siteroot import IPloneSiteRoot\n-from Products.CMFPlone.interfaces.syndication import ISyndicatable\n-from Products.CMFPlone.permissions import AddPortalContent\n-from Products.CMFPlone.permissions import AddPortalFolders\n-from Products.CMFPlone.permissions import ListPortalMembers\n-from Products.CMFPlone.permissions import ModifyPortalContent\n-from Products.CMFPlone.permissions import ReplyToItem\n-from Products.CMFPlone.permissions import View\n from Products.Five.component.interfaces import IObjectManagerSite\n-from zope.interface.interfaces import ComponentLookupError\n from zope.event import notify\n from zope.interface import classImplementsOnly\n from zope.interface import implementedBy\n from zope.interface import implementer\n+from zope.interface.interfaces import ComponentLookupError\n from zope.traversing.interfaces import BeforeTraverseEvent\n \n \ndiff --git a/Products/CMFPlone/PropertiesTool.py b/Products/CMFPlone/PropertiesTool.py\nindex 7ceebf2583..d8ce537a1d 100644\n--- a/Products/CMFPlone/PropertiesTool.py\n+++ b/Products/CMFPlone/PropertiesTool.py\n@@ -12,7 +12,7 @@\n from OFS.SimpleItem import SimpleItem\n from AccessControl import ClassSecurityInfo\n from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n-from Products.CMFPlone.interfaces \\\n+from plone.base.interfaces \\\n     import IPropertiesTool, ISimpleItemWithProperties\n from Products.CMFPlone.utils import WWW_DIR\n from Products.MailHost.interfaces import IMailHost\ndiff --git a/Products/CMFPlone/RegistrationTool.py b/Products/CMFPlone/RegistrationTool.py\nindex 93dc132e4a..fa17f700ad 100644\n--- a/Products/CMFPlone/RegistrationTool.py\n+++ b/Products/CMFPlone/RegistrationTool.py\n@@ -9,18 +9,18 @@\n from Acquisition import aq_chain\n from email import message_from_string\n from hashlib import md5\n+from plone.base import PloneMessageFactory as _\n+from plone.base.interfaces import ISecuritySchema\n+from plone.base.permissions import ManagePortal\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.interfaces import ISiteRoot\n from Products.CMFCore.permissions import AddPortalMember\n from Products.CMFCore.RegistrationTool import RegistrationTool as BaseTool\n from Products.CMFCore.utils import _checkPermission\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import ISecuritySchema\n-from Products.CMFPlone.permissions import ManagePortal\n from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n from Products.CMFPlone.PloneTool import EMAIL_RE\n-from Products.PluggableAuthService.interfaces.authservice import IPluggableAuthService  # noqa: E501\n+from Products.PluggableAuthService.interfaces.authservice import IPluggableAuthService\n from Products.PluggableAuthService.interfaces.plugins import IValidationPlugin\n from Products.PluggableAuthService.permissions import SetOwnPassword\n from smtplib import SMTPException\ndiff --git a/Products/CMFPlone/TranslationServiceTool.py b/Products/CMFPlone/TranslationServiceTool.py\nindex 6298e3b69e..086af2ae6a 100644\n--- a/Products/CMFPlone/TranslationServiceTool.py\n+++ b/Products/CMFPlone/TranslationServiceTool.py\n@@ -15,9 +15,9 @@\n from .i18nl10n import weekdayname_msgid_abbr\n from .i18nl10n import weekdayname_msgid_short\n from OFS.SimpleItem import SimpleItem\n+from plone.base import PloneLocalesMessageFactory as PLMF\n from Products.CMFCore.utils import UniqueObject\n-from Products.CMFPlone import PloneLocalesMessageFactory as PLMF\n-from Products.CMFPlone.interfaces import ITranslationServiceTool\n+from plone.base.interfaces import ITranslationServiceTool\n from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n from zope.i18n import translate\n from zope.interface import implementer\ndiff --git a/Products/CMFPlone/WorkflowTool.py b/Products/CMFPlone/WorkflowTool.py\nindex 31a9cf8203..7085bb42c5 100644\n--- a/Products/CMFPlone/WorkflowTool.py\n+++ b/Products/CMFPlone/WorkflowTool.py\n@@ -2,7 +2,7 @@\n \n from Products.CMFCore.utils import getToolByName\n from Products.CMFCore.WorkflowTool import WorkflowTool as BaseTool\n-from Products.CMFPlone.interfaces import IWorkflowChain\n+from plone.base.interfaces import IWorkflowChain\n from ZODB.POSException import ConflictError\n from Acquisition import aq_base\n \ndiff --git a/Products/CMFPlone/__init__.py b/Products/CMFPlone/__init__.py\nindex e54581a80d..e3778648fb 100644\n--- a/Products/CMFPlone/__init__.py\n+++ b/Products/CMFPlone/__init__.py\n@@ -1,7 +1,9 @@\n from App.ImageFile import ImageFile\n+\n import os\n import sys\n import pkg_resources\n+import zope.deferredimport\n \n __version__ = pkg_resources.require("Products.CMFPlone")[0].version\n \n@@ -17,6 +19,13 @@\n \n DISCUSSION_ANNOTATION_KEY = \'plone.app.discussion:conversation\'\n \n+zope.deferredimport.initialize()\n+zope.deferredimport.deprecated(\n+    "Import from plone.base instead (to be removed in Plone 7)",\n+    PloneMessageFactory=\'plone.base:PloneMessageFactory\',\n+    PloneLocalesMessageFactory=\'plone.base:PloneMessageFactory\',\n+)\n+\n \n def initialize(context):\n \n@@ -199,16 +208,7 @@ def initialize(context):\n         visibility=None\n     )\n \n-\n-# Import PloneMessageFactory to create messages in the plone domain\n-from zope.i18nmessageid import MessageFactory\n-PloneMessageFactory = MessageFactory(\'plone\')\n-\n-# Import PloneLocalesMessageFactory to create messages in the\n-# plonelocales domain\n-from zope.i18nmessageid import MessageFactory\n-PloneLocalesMessageFactory = MessageFactory(\'plonelocales\')\n-\n # Apply early monkey patches.  For these patches, it is too late if we do this\n # in the initialize method.\n from Products.CMFPlone import earlypatches  # noqa\n+\ndiff --git a/Products/CMFPlone/_compat.py b/Products/CMFPlone/_compat.py\ndeleted file mode 100644\nindex 283564f68a..0000000000\n--- a/Products/CMFPlone/_compat.py\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-from json import dumps\n-\n-\n-def dump_json_to_text(obj):\n-    \'\'\' Encode an obj into a text\n-    \'\'\'\n-    text = dumps(obj, indent=4)\n-    if not isinstance(text, str):\n-        text = text.decode(\'utf8\')\n-    return text\ndiff --git a/Products/CMFPlone/browser/admin.py b/Products/CMFPlone/browser/admin.py\nindex 50fdc7b4ac..dfa3df808c 100644\n--- a/Products/CMFPlone/browser/admin.py\n+++ b/Products/CMFPlone/browser/admin.py\n@@ -4,8 +4,8 @@\n from Products.CMFCore.permissions import ManagePortal\n from Products.CMFPlone.factory import _DEFAULT_PROFILE\n from Products.CMFPlone.factory import addPloneSite\n-from Products.CMFPlone.interfaces import INonInstallable\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n+from plone.base.interfaces import INonInstallable\n+from plone.base.interfaces import IPloneSiteRoot\n from Products.CMFPlone.utils import get_installer\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.GenericSetup import BASE, EXTENSION\ndiff --git a/Products/CMFPlone/browser/admin.zcml b/Products/CMFPlone/browser/admin.zcml\nindex 12228bfc20..fdde628d17 100644\n--- a/Products/CMFPlone/browser/admin.zcml\n+++ b/Products/CMFPlone/browser/admin.zcml\n@@ -2,7 +2,7 @@\n            xmlns:browser="http://namespaces.zope.org/browser">\n \n   <browser:view\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       name="plone-frontpage-setup"\n       class=".admin.FrontPage"\n       permission="zope.Public"\n@@ -25,7 +25,7 @@\n       />\n \n   <browser:page\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       name="plone-upgrade"\n       class=".admin.Upgrade"\n       permission="cmf.ManagePortal"\ndiff --git a/Products/CMFPlone/browser/atd.py b/Products/CMFPlone/browser/atd.py\nindex 05fe5a35c2..a4dc2d4201 100644\n--- a/Products/CMFPlone/browser/atd.py\n+++ b/Products/CMFPlone/browser/atd.py\n@@ -2,8 +2,8 @@\n from zope.component import getUtility\n from plone.registry.interfaces import IRegistry\n from http import client as http_client\n-from Products.CMFPlone.interfaces import ITinyMCESchema\n-from Products.CMFPlone.interfaces.atd import IATDProxyView\n+from plone.base.interfaces import ITinyMCESchema\n+from plone.base.interfaces.atd import IATDProxyView\n from zope.interface import implementer\n \n \ndiff --git a/Products/CMFPlone/browser/author.py b/Products/CMFPlone/browser/author.py\nindex 3247e3585c..05d92acabf 100644\n--- a/Products/CMFPlone/browser/author.py\n+++ b/Products/CMFPlone/browser/author.py\n@@ -2,8 +2,8 @@\n \n from Products.CMFCore.interfaces import IPropertiesTool\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import ISecuritySchema\n-from Products.CMFPlone.interfaces.controlpanel import IMailSchema\n+from plone.base.interfaces import ISecuritySchema\n+from plone.base.interfaces.controlpanel import IMailSchema\n from Products.CMFPlone.utils import getToolByName\n from Products.CMFPlone.utils import pretty_title_or_id\n from Products.Five.browser import BrowserView\ndiff --git a/Products/CMFPlone/browser/configure.zcml b/Products/CMFPlone/browser/configure.zcml\nindex 726123c677..e450097538 100644\n--- a/Products/CMFPlone/browser/configure.zcml\n+++ b/Products/CMFPlone/browser/configure.zcml\n@@ -138,7 +138,7 @@\n       />\n \n   <browser:page\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       name="author"\n       class=".author.AuthorView"\n       permission="zope.Public"\n@@ -146,7 +146,7 @@\n       />\n \n   <browser:page\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       name="author-feedback-template"\n       permission="zope.Public"\n       template="templates/author_feedback_template.pt"\n@@ -232,7 +232,7 @@\n       name="default_page"\n       class=".defaultpage.DefaultPage"\n       permission="zope.Public"\n-      allowed_interface="Products.CMFPlone.interfaces.defaultpage.IDefaultPage"\n+      allowed_interface="plone.base.interfaces.defaultpage.IDefaultPage"\n       />\n \n   <browser:page\ndiff --git a/Products/CMFPlone/browser/contact_info.py b/Products/CMFPlone/browser/contact_info.py\nindex 9d8067f323..1c2dcd3fc5 100644\n--- a/Products/CMFPlone/browser/contact_info.py\n+++ b/Products/CMFPlone/browser/contact_info.py\n@@ -1,7 +1,7 @@\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n from Products.CMFPlone.browser.interfaces import IContactForm\n-from Products.CMFPlone.interfaces.controlpanel import IMailSchema\n+from plone.base.interfaces.controlpanel import IMailSchema\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.statusmessages.interfaces import IStatusMessage\n from email.mime.text import MIMEText\ndiff --git a/Products/CMFPlone/browser/defaultpage.py b/Products/CMFPlone/browser/defaultpage.py\nindex 57446ec69a..b8523814e3 100644\n--- a/Products/CMFPlone/browser/defaultpage.py\n+++ b/Products/CMFPlone/browser/defaultpage.py\n@@ -1,7 +1,7 @@\n from Acquisition import aq_inner\n-from Products.CMFPlone.interfaces.defaultpage import IDefaultPage\n-from Products.CMFPlone.defaultpage import get_default_page\n-from Products.CMFPlone.defaultpage import is_default_page\n+from plone.base.interfaces.defaultpage import IDefaultPage\n+from plone.base.defaultpage import get_default_page\n+from plone.base.defaultpage import is_default_page\n from Products.Five.browser import BrowserView\n from zope.interface import implementer\n \ndiff --git a/Products/CMFPlone/browser/login/configure.zcml b/Products/CMFPlone/browser/login/configure.zcml\nindex f576522ac8..a3aeb79489 100644\n--- a/Products/CMFPlone/browser/login/configure.zcml\n+++ b/Products/CMFPlone/browser/login/configure.zcml\n@@ -145,7 +145,7 @@\n \n     <browser:page\n         name="explainPWResetTool"\n-        for="Products.CMFPlone.interfaces.IPWResetTool"\n+        for="plone.base.interfaces.IPWResetTool"\n         class=".password_reset.ExplainPWResetToolView"\n         template="templates/explainPWResetTool.pt"\n         permission="zope2.ViewManagementScreens"\ndiff --git a/Products/CMFPlone/browser/login/login.py b/Products/CMFPlone/browser/login/login.py\nindex b4b8f2af93..d655c226ea 100644\n--- a/Products/CMFPlone/browser/login/login.py\n+++ b/Products/CMFPlone/browser/login/login.py\n@@ -3,12 +3,12 @@\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import IForcePasswordChange\n-from Products.CMFPlone.interfaces import IInitialLogin\n-from Products.CMFPlone.interfaces import ILoginForm\n-from Products.CMFPlone.interfaces import ILoginFormSchema\n-from Products.CMFPlone.interfaces import IRedirectAfterLogin\n-from Products.CMFPlone.interfaces import ISecuritySchema\n+from plone.base.interfaces import IForcePasswordChange\n+from plone.base.interfaces import IInitialLogin\n+from plone.base.interfaces import ILoginForm\n+from plone.base.interfaces import ILoginFormSchema\n+from plone.base.interfaces import IRedirectAfterLogin\n+from plone.base.interfaces import ISecuritySchema\n from Products.Five.browser import BrowserView\n from Products.statusmessages.interfaces import IStatusMessage\n from urllib import parse\ndiff --git a/Products/CMFPlone/browser/login/login_help.py b/Products/CMFPlone/browser/login/login_help.py\nindex 10fd9c502a..7409a585e8 100644\n--- a/Products/CMFPlone/browser/login/login_help.py\n+++ b/Products/CMFPlone/browser/login/login_help.py\n@@ -3,11 +3,11 @@\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import ILoginHelpForm\n-from Products.CMFPlone.interfaces import ILoginHelpFormSchema\n-from Products.CMFPlone.interfaces import ISecuritySchema\n-from Products.CMFPlone.interfaces.controlpanel import IMailSchema\n-from Products.CMFPlone.utils import safe_unicode\n+from plone.base.interfaces import ILoginHelpForm\n+from plone.base.interfaces import ILoginHelpFormSchema\n+from plone.base.interfaces import ISecuritySchema\n+from plone.base.interfaces.controlpanel import IMailSchema\n+from plone.base.utils import safe_text\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.statusmessages.interfaces import IStatusMessage\n from smtplib import SMTPException\n@@ -180,7 +180,7 @@ def send_username(self, portal, userinfo):\n \n     def encode_mail_header(self, text):\n         """ Encodes text into correctly encoded email header """\n-        return Header(safe_unicode(text), \'utf-8\')\n+        return Header(safe_text(text), \'utf-8\')\n \n     def encoded_mail_sender(self):\n         """ returns encoded version of Portal name <portal_email> """\ndiff --git a/Products/CMFPlone/browser/login/password_reset.py b/Products/CMFPlone/browser/login/password_reset.py\nindex 98ebe496cd..1c2dfb663b 100644\n--- a/Products/CMFPlone/browser/login/password_reset.py\n+++ b/Products/CMFPlone/browser/login/password_reset.py\n@@ -2,22 +2,23 @@\n from DateTime import DateTime\n from email.header import Header\n from plone.app.layout.navigation.interfaces import INavigationRoot\n+from plone.base.interfaces import IPasswordResetToolView\n+from plone.base.interfaces.controlpanel import IMailSchema\n+from plone.base.utils import safe_text\n+from plone.base.utils import safeToInt\n from plone.memoize import view\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import IPasswordResetToolView\n-from Products.CMFPlone.interfaces.controlpanel import IMailSchema\n from Products.CMFPlone.PasswordResetTool import ExpiredRequestError\n from Products.CMFPlone.PasswordResetTool import InvalidRequestError\n from Products.CMFPlone.RegistrationTool import get_member_by_login_name\n-from Products.CMFPlone.utils import safe_unicode\n-from Products.CMFPlone.utils import safeToInt\n from Products.Five import BrowserView\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.PlonePAS.events import UserInitialLoginInEvent\n from Products.PlonePAS.events import UserLoggedInEvent\n-from Products.PluggableAuthService.interfaces.plugins import ICredentialsUpdatePlugin  # noqa\n+from Products.PluggableAuthService.interfaces.plugins import \\\n+    ICredentialsUpdatePlugin\n from Products.statusmessages.interfaces import IStatusMessage\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n@@ -39,7 +40,7 @@ def portal_state(self):\n \n     def encode_mail_header(self, text):\n         """ Encodes text into correctly encoded email header """\n-        return Header(safe_unicode(text), \'utf-8\')\n+        return Header(safe_text(text), \'utf-8\')\n \n     def encoded_mail_sender(self):\n         """ returns encoded version of Portal name <portal_email> """\n@@ -55,7 +56,7 @@ def registered_notify_subject(self):\n             _(\n                 \'mailtemplate_user_account_info\',\n                 default=\'User Account Information for ${portal_name}\',\n-                mapping={\'portal_name\': safe_unicode(portal_name)},\n+                mapping={\'portal_name\': safe_text(portal_name)},\n             ),\n             context=self.request,\n         )\ndiff --git a/Products/CMFPlone/browser/navigation.py b/Products/CMFPlone/browser/navigation.py\nindex e90e29d651..eb76b1d18d 100644\n--- a/Products/CMFPlone/browser/navigation.py\n+++ b/Products/CMFPlone/browser/navigation.py\n@@ -10,9 +10,9 @@\n from Products.CMFPlone.browser.interfaces import INavigationTabs\n from Products.CMFPlone.browser.interfaces import ISiteMap\n from Products.CMFPlone.browser.navtree import SitemapQueryBuilder\n-from Products.CMFPlone.defaultpage import check_default_page_via_view\n-from Products.CMFPlone.interfaces import IHideFromBreadcrumbs\n-from Products.CMFPlone.interfaces import INavigationSchema\n+from plone.base.defaultpage import check_default_page_via_view\n+from plone.base.interfaces import IHideFromBreadcrumbs\n+from plone.base.interfaces import INavigationSchema\n from Products.Five import BrowserView\n from zope.component import getMultiAdapter\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/browser/navtree.py b/Products/CMFPlone/browser/navtree.py\nindex 3a0a0aee34..d066dc4e12 100644\n--- a/Products/CMFPlone/browser/navtree.py\n+++ b/Products/CMFPlone/browser/navtree.py\n@@ -12,7 +12,7 @@\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import utils\n-from Products.CMFPlone.interfaces import INavigationSchema\n+from plone.base.interfaces import INavigationSchema\n from zope.component import getMultiAdapter, queryUtility\n from zope.component import getUtility\n from zope.interface import implementer\ndiff --git a/Products/CMFPlone/browser/ploneview.py b/Products/CMFPlone/browser/ploneview.py\nindex c9735e95c8..43dab697fb 100644\n--- a/Products/CMFPlone/browser/ploneview.py\n+++ b/Products/CMFPlone/browser/ploneview.py\n@@ -111,7 +111,7 @@ def cropText(self, text, length, ellipsis=\'...\'):\n             return text\n         converted = False\n         if not isinstance(text, str):\n-            text = utils.safe_unicode(text)\n+            text = utils.safe_text(text)\n             converted = True\n         if len(text) > length:\n             text = text[:length]\ndiff --git a/Products/CMFPlone/browser/robots.py b/Products/CMFPlone/browser/robots.py\nindex 9c5a0bc290..eb4e2535bb 100644\n--- a/Products/CMFPlone/browser/robots.py\n+++ b/Products/CMFPlone/browser/robots.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces.controlpanel import ISiteSchema\n+from plone.base.interfaces.controlpanel import ISiteSchema\n from Products.Five.browser import BrowserView\n from plone.registry.interfaces import IRegistry\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/browser/search.py b/Products/CMFPlone/browser/search.py\nindex 7bc6771aff..a8c34129d6 100644\n--- a/Products/CMFPlone/browser/search.py\n+++ b/Products/CMFPlone/browser/search.py\n@@ -3,7 +3,7 @@\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.browser.navtree import getNavigationRoot\n-from Products.CMFPlone.interfaces import ISearchSchema\n+from plone.base.interfaces import ISearchSchema\n from Products.CMFPlone.PloneBatch import Batch\n from Products.ZCTextIndex.ParseTree import ParseError\n from zope.cachedescriptors.property import Lazy as lazy_property\ndiff --git a/Products/CMFPlone/browser/sendto.py b/Products/CMFPlone/browser/sendto.py\nindex 1f11b22084..384d7d5ff3 100644\n--- a/Products/CMFPlone/browser/sendto.py\n+++ b/Products/CMFPlone/browser/sendto.py\n@@ -1,5 +1,5 @@\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces.controlpanel import IMailSchema\n+from plone.base.interfaces.controlpanel import IMailSchema\n from Products.CMFPlone.utils import pretty_title_or_id\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.MailHost.interfaces import IMailHost\ndiff --git a/Products/CMFPlone/browser/sitelogo.py b/Products/CMFPlone/browser/sitelogo.py\nindex 2d56feebeb..cb816a6b48 100644\n--- a/Products/CMFPlone/browser/sitelogo.py\n+++ b/Products/CMFPlone/browser/sitelogo.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import ISiteSchema\n+from plone.base.interfaces import ISiteSchema\n from plone.formwidget.namedfile.converter import b64decode_file\n from plone.namedfile.browser import Download\n from plone.namedfile.file import NamedImage\ndiff --git a/Products/CMFPlone/browser/syndication/adapters.py b/Products/CMFPlone/browser/syndication/adapters.py\nindex 2fc6224cf4..8963610609 100644\n--- a/Products/CMFPlone/browser/syndication/adapters.py\n+++ b/Products/CMFPlone/browser/syndication/adapters.py\n@@ -12,10 +12,10 @@\n from Products.CMFCore.utils import getToolByName\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n \n-from Products.CMFPlone.interfaces.syndication import IFeed\n-from Products.CMFPlone.interfaces.syndication import IFeedItem\n-from Products.CMFPlone.interfaces.syndication import ISearchFeed\n-from Products.CMFPlone.interfaces.syndication import IFeedSettings\n+from plone.base.interfaces.syndication import IFeed\n+from plone.base.interfaces.syndication import IFeedItem\n+from plone.base.interfaces.syndication import ISearchFeed\n+from plone.base.interfaces.syndication import IFeedSettings\n from Products.CMFPlone.utils import getSiteLogo\n \n from plone.registry.interfaces import IRegistry\ndiff --git a/Products/CMFPlone/browser/syndication/configure.zcml b/Products/CMFPlone/browser/syndication/configure.zcml\nindex 6715bfa1f3..755ca9f8b6 100644\n--- a/Products/CMFPlone/browser/syndication/configure.zcml\n+++ b/Products/CMFPlone/browser/syndication/configure.zcml\n@@ -6,7 +6,7 @@\n   i18n_domain="Products.CMFPlone">\n \n   <class class="plone.dexterity.content.Container">\n-    <implements interface="Products.CMFPlone.interfaces.syndication.ISyndicatable" />\n+    <implements interface="plone.base.interfaces.syndication.ISyndicatable" />\n   </class>\n \n   <adapter factory=".settings.FeedSettings" />\n@@ -15,15 +15,15 @@\n   <adapter factory=".adapters.CollectionFeed"\n     for="plone.app.contenttypes.interfaces.ICollection" />\n   <adapter factory=".adapters.SearchFeed"\n-    for="Products.CMFPlone.interfaces.siteroot.IPloneSiteRoot"\n-    provides="Products.CMFPlone.interfaces.syndication.ISearchFeed" />\n+    for="plone.base.interfaces.siteroot.IPloneSiteRoot"\n+    provides="plone.base.interfaces.syndication.ISearchFeed" />\n   <adapter factory=".adapters.DexterityItem"\n     for="plone.dexterity.interfaces.IDexterityContent\n-         Products.CMFPlone.interfaces.syndication.IFeed"\n-    provides="Products.CMFPlone.interfaces.syndication.IFeedItem" />\n+         plone.base.interfaces.syndication.IFeed"\n+    provides="plone.base.interfaces.syndication.IFeedItem" />\n \n   <browser:page\n-    for="Products.CMFPlone.interfaces.syndication.ISyndicatable"\n+    for="plone.base.interfaces.syndication.ISyndicatable"\n     name="synPropertiesForm"\n     class=".views.SettingsFormView"\n     permission="cmf.ModifyPortalContent"\n@@ -33,12 +33,12 @@\n     for="*"\n     name="syndication-util"\n     class=".utils.SyndicationUtil"\n-    allowed_interface="Products.CMFPlone.interfaces.syndication.ISyndicationUtil"\n+    allowed_interface="plone.base.interfaces.syndication.ISyndicationUtil"\n     permission="zope2.View"\n     />\n \n   <browser:page\n-    for="Products.CMFPlone.interfaces.syndication.ISyndicatable"\n+    for="plone.base.interfaces.syndication.ISyndicatable"\n     class=".views.FeedView"\n     name="atom.xml"\n     permission="zope2.View"\n@@ -46,14 +46,14 @@\n     />\n \n   <browser:page\n-    for="Products.CMFPlone.interfaces.syndication.ISyndicatable"\n+    for="plone.base.interfaces.syndication.ISyndicatable"\n     class=".views.FeedView"\n     name="rss.xml"\n     permission="zope2.View"\n     template="templates/rss.xml.pt"\n     />\n   <browser:page\n-    for="Products.CMFPlone.interfaces.syndication.ISyndicatable"\n+    for="plone.base.interfaces.syndication.ISyndicatable"\n     class=".views.FeedView"\n     name="RSS"\n     permission="zope2.View"\n@@ -61,7 +61,7 @@\n     />\n \n   <browser:page\n-    for="Products.CMFPlone.interfaces.syndication.ISyndicatable"\n+    for="plone.base.interfaces.syndication.ISyndicatable"\n     class=".views.FeedView"\n     name="itunes.xml"\n     permission="zope2.View"\n@@ -77,7 +77,7 @@\n     />\n \n   <browser:page\n-    for="Products.CMFPlone.interfaces.syndication.ISyndicatable"\n+    for="plone.base.interfaces.syndication.ISyndicatable"\n     class=".views.NewsMLFeedView"\n     name="newsml.xml"\n     permission="zope2.View"\ndiff --git a/Products/CMFPlone/browser/syndication/settings.py b/Products/CMFPlone/browser/syndication/settings.py\nindex d74865d070..9158f83858 100644\n--- a/Products/CMFPlone/browser/syndication/settings.py\n+++ b/Products/CMFPlone/browser/syndication/settings.py\n@@ -1,10 +1,10 @@\n from zope.component import adapts\n from zope.interface import implementer\n-from Products.CMFPlone.interfaces.syndication import IFeedSettings\n-from Products.CMFPlone.interfaces.syndication import ISyndicatable\n+from plone.base.interfaces.syndication import IFeedSettings\n+from plone.base.interfaces.syndication import ISyndicatable\n from zope.annotation.interfaces import IAnnotations\n from persistent.dict import PersistentDict\n-from Products.CMFPlone.interfaces.syndication import ISiteSyndicationSettings\n+from plone.base.interfaces.syndication import ISiteSyndicationSettings\n from zope.component import getUtility\n from plone.registry.interfaces import IRegistry\n \ndiff --git a/Products/CMFPlone/browser/syndication/tool.py b/Products/CMFPlone/browser/syndication/tool.py\nindex d142ebaa61..ba622337e6 100644\n--- a/Products/CMFPlone/browser/syndication/tool.py\n+++ b/Products/CMFPlone/browser/syndication/tool.py\n@@ -11,9 +11,9 @@\n from Products.CMFCore.permissions import ModifyPortalContent\n from Products.CMFCore.permissions import ManagePortal\n \n-from Products.CMFPlone.interfaces.syndication import IFeed\n-from Products.CMFPlone.interfaces.syndication import ISiteSyndicationSettings\n-from Products.CMFPlone.interfaces.syndication import IFeedSettings\n+from plone.base.interfaces.syndication import IFeed\n+from plone.base.interfaces.syndication import ISiteSyndicationSettings\n+from plone.base.interfaces.syndication import IFeedSettings\n \n from plone.registry.interfaces import IRegistry\n \ndiff --git a/Products/CMFPlone/browser/syndication/utils.py b/Products/CMFPlone/browser/syndication/utils.py\nindex 3115b10976..9e3171ba61 100644\n--- a/Products/CMFPlone/browser/syndication/utils.py\n+++ b/Products/CMFPlone/browser/syndication/utils.py\n@@ -5,10 +5,10 @@\n from zope.interface import implementer\n from zope.component import getUtility\n \n-from Products.CMFPlone.interfaces.syndication import ISyndicationUtil\n-from Products.CMFPlone.interfaces.syndication import IFeedSettings\n-from Products.CMFPlone.interfaces.syndication import ISiteSyndicationSettings\n-from Products.CMFPlone.interfaces.syndication import ISyndicatable\n+from plone.base.interfaces.syndication import ISyndicationUtil\n+from plone.base.interfaces.syndication import IFeedSettings\n+from plone.base.interfaces.syndication import ISiteSyndicationSettings\n+from plone.base.interfaces.syndication import ISyndicatable\n \n from plone.registry.interfaces import IRegistry\n from plone.memoize.view import memoize\ndiff --git a/Products/CMFPlone/browser/syndication/views.py b/Products/CMFPlone/browser/syndication/views.py\nindex 47c40db01c..cda7137a35 100644\n--- a/Products/CMFPlone/browser/syndication/views.py\n+++ b/Products/CMFPlone/browser/syndication/views.py\n@@ -1,9 +1,9 @@\n from DateTime import DateTime\n from plone.z3cform.layout import wrap_form\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces.syndication import IFeed\n-from Products.CMFPlone.interfaces.syndication import IFeedSettings\n-from Products.CMFPlone.interfaces.syndication import ISearchFeed\n+from plone.base.interfaces.syndication import IFeed\n+from plone.base.interfaces.syndication import IFeedSettings\n+from plone.base.interfaces.syndication import ISearchFeed\n from Products.Five import BrowserView\n from uuid import NAMESPACE_OID\n from uuid import uuid3\ndiff --git a/Products/CMFPlone/catalog.zcml b/Products/CMFPlone/catalog.zcml\nindex ddd04b531f..e84d7fed42 100644\n--- a/Products/CMFPlone/catalog.zcml\n+++ b/Products/CMFPlone/catalog.zcml\n@@ -3,7 +3,7 @@\n     <!-- Register the default indexable object wrapper -->\n     <adapter\n         for="Products.CMFCore.interfaces.ICatalogAware\n-             Products.CMFPlone.interfaces.IPloneCatalogTool"\n+             plone.base.interfaces.IPloneCatalogTool"\n         factory="plone.indexer.wrapper.IndexableObjectWrapper"\n         provides="plone.indexer.interfaces.IIndexableObject"\n         />\ndiff --git a/Products/CMFPlone/configure.zcml b/Products/CMFPlone/configure.zcml\nindex d4ab0a8a9d..6a4901f637 100644\n--- a/Products/CMFPlone/configure.zcml\n+++ b/Products/CMFPlone/configure.zcml\n@@ -61,7 +61,6 @@\n   <include package=".browser" />\n   <include package=".exportimport" />\n \n-  <include file="deprecated.zcml"/>\n   <include file="profiles.zcml"/>\n   <include file="catalog.zcml" />\n \ndiff --git a/Products/CMFPlone/controlpanel/README.rst b/Products/CMFPlone/controlpanel/README.rst\nindex 72e195a909..23d5a13846 100644\n--- a/Products/CMFPlone/controlpanel/README.rst\n+++ b/Products/CMFPlone/controlpanel/README.rst\n@@ -14,7 +14,7 @@ As an example, let\'s look for search related settings (defined by ISearchSchema)\n We use the schema \'ISearchSchema\' to lookup a RecordProxy object with\n all fields::\n \n-  >>> from Products.CMFPlone.interfaces import ISearchSchema\n+  >>> from plone.base.interfaces import ISearchSchema\n   >>> search_settings = registry.forInterface(ISearchSchema, prefix=\'plone\')\n \n Now we can get and set all fields of the schema above. For example the value for\n@@ -38,7 +38,7 @@ For more information about how to access and manipulate Plone registry entries,\n Editing Control Panel\n ---------------------\n \n-  >>> from Products.CMFPlone.interfaces import IEditingSchema\n+  >>> from plone.base.interfaces import IEditingSchema\n   >>> editing_settings = registry.forInterface(IEditingSchema, prefix=\'plone\')\n \n   >>> editing_settings.default_editor == u\'TinyMCE\'\n@@ -103,7 +103,7 @@ Language Control Panel\n Maintenance Control Panel\n -------------------------\n \n-  >>> from Products.CMFPlone.interfaces import IMaintenanceSchema\n+  >>> from plone.base.interfaces import IMaintenanceSchema\n   >>> maintenance_settings = registry.forInterface(IMaintenanceSchema, prefix=\'plone\')\n \n   >>> maintenance_settings.days\n@@ -113,7 +113,7 @@ Maintenance Control Panel\n Navigation Control Panel\n ------------------------\n \n-  >>> from Products.CMFPlone.interfaces import INavigationSchema\n+  >>> from plone.base.interfaces import INavigationSchema\n   >>> navigation_settings = registry.forInterface(INavigationSchema, prefix=\'plone\')\n \n   >>> navigation_settings.generate_tabs\n@@ -138,7 +138,7 @@ Navigation Control Panel\n Search Control Panel\n --------------------\n \n-  >>> from Products.CMFPlone.interfaces import ISearchSchema\n+  >>> from plone.base.interfaces import ISearchSchema\n   >>> search_settings = registry.forInterface(ISearchSchema, prefix=\'plone\')\n \n   >>> search_settings.enable_livesearch\n@@ -151,7 +151,7 @@ Search Control Panel\n Site Control Panel\n ------------------\n \n-  >>> from Products.CMFPlone.interfaces import ISiteSchema\n+  >>> from plone.base.interfaces import ISiteSchema\n   >>> site_settings = registry.forInterface(ISiteSchema, prefix=\'plone\')\n \n   >>> site_settings.site_title == u\'Plone site\'\n@@ -170,7 +170,7 @@ Site Control Panel\n Overview Control Panel\n ----------------------\n \n-  >>> from Products.CMFPlone.interfaces.controlpanel import IDateAndTimeSchema\n+  >>> from plone.base.interfaces.controlpanel import IDateAndTimeSchema\n   >>> tz_settings = registry.forInterface(IDateAndTimeSchema, prefix=\'plone\')\n \n   >>> tz_settings.portal_timezone = \'UTC\'\n@@ -179,7 +179,7 @@ Overview Control Panel\n Markup Control Panel\n --------------------\n \n-  >>> from Products.CMFPlone.interfaces import IMarkupSchema\n+  >>> from plone.base.interfaces import IMarkupSchema\n   >>> markup_settings = registry.forInterface(IMarkupSchema, prefix=\'plone\')\n \n   >>> markup_settings.default_type == u\'text/html\'\n@@ -193,7 +193,7 @@ Markup Control Panel\n User and Groups Control Panel\n ------------------------------\n \n-  >>> from Products.CMFPlone.interfaces import IUserGroupsSettingsSchema\n+  >>> from plone.base.interfaces import IUserGroupsSettingsSchema\n   >>> usergroups_settings = registry.forInterface(IUserGroupsSettingsSchema, prefix=\'plone\')\n \n   >>> usergroups_settings.many_groups\ndiff --git a/Products/CMFPlone/controlpanel/bbb/editing.py b/Products/CMFPlone/controlpanel/bbb/editing.py\nindex 54058116a6..41649f4eff 100644\n--- a/Products/CMFPlone/controlpanel/bbb/editing.py\n+++ b/Products/CMFPlone/controlpanel/bbb/editing.py\n@@ -2,9 +2,9 @@\n from zope.interface import implementer\n from zope.component import getUtility\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n+from plone.base.interfaces import IPloneSiteRoot\n \n-from Products.CMFPlone.interfaces import IEditingSchema\n+from plone.base.interfaces import IEditingSchema\n \n \n @implementer(IEditingSchema)\ndiff --git a/Products/CMFPlone/controlpanel/bbb/filter.py b/Products/CMFPlone/controlpanel/bbb/filter.py\nindex f0d6fc7777..2da1d3dcb5 100644\n--- a/Products/CMFPlone/controlpanel/bbb/filter.py\n+++ b/Products/CMFPlone/controlpanel/bbb/filter.py\n@@ -1,5 +1,5 @@\n-from Products.CMFPlone.interfaces import IFilterSchema\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n+from plone.base.interfaces import IFilterSchema\n+from plone.base.interfaces import IPloneSiteRoot\n from plone.registry.interfaces import IRegistry\n from zope.component import adapts\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/controlpanel/bbb/language.py b/Products/CMFPlone/controlpanel/bbb/language.py\nindex 43700a1cd9..1094d8b49c 100644\n--- a/Products/CMFPlone/controlpanel/bbb/language.py\n+++ b/Products/CMFPlone/controlpanel/bbb/language.py\n@@ -2,7 +2,7 @@\n from zope.interface import implementer\n from zope.component import getUtility\n from plone.i18n.interfaces import ILanguageSchema\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n+from plone.base.interfaces import IPloneSiteRoot\n \n from plone.registry.interfaces import IRegistry\n \ndiff --git a/Products/CMFPlone/controlpanel/bbb/mail.py b/Products/CMFPlone/controlpanel/bbb/mail.py\nindex 9fb79f65ba..5ec1135f69 100644\n--- a/Products/CMFPlone/controlpanel/bbb/mail.py\n+++ b/Products/CMFPlone/controlpanel/bbb/mail.py\n@@ -1,5 +1,5 @@\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n-from Products.CMFPlone.interfaces.controlpanel import IMailSchema\n+from plone.base.interfaces import IPloneSiteRoot\n+from plone.base.interfaces.controlpanel import IMailSchema\n from Products.CMFPlone.utils import safe_hasattr\n from plone.registry.interfaces import IRegistry\n from zope.component import adapts\ndiff --git a/Products/CMFPlone/controlpanel/bbb/maintenance.py b/Products/CMFPlone/controlpanel/bbb/maintenance.py\nindex 491f6c5d9a..941fea458b 100644\n--- a/Products/CMFPlone/controlpanel/bbb/maintenance.py\n+++ b/Products/CMFPlone/controlpanel/bbb/maintenance.py\n@@ -1,5 +1,5 @@\n-from Products.CMFPlone.interfaces import IMaintenanceSchema\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n+from plone.base.interfaces import IMaintenanceSchema\n+from plone.base.interfaces import IPloneSiteRoot\n from plone.registry.interfaces import IRegistry\n from zope.component import adapts\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/controlpanel/bbb/markup.py b/Products/CMFPlone/controlpanel/bbb/markup.py\nindex 23b4279955..2434f6b84b 100644\n--- a/Products/CMFPlone/controlpanel/bbb/markup.py\n+++ b/Products/CMFPlone/controlpanel/bbb/markup.py\n@@ -1,5 +1,5 @@\n-from Products.CMFPlone.interfaces import IMarkupSchema\n-from Products.CMFPlone.interfaces.siteroot import IPloneSiteRoot\n+from plone.base.interfaces import IMarkupSchema\n+from plone.base.interfaces.siteroot import IPloneSiteRoot\n from plone.registry.interfaces import IRegistry\n from zope.component import adapts\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/controlpanel/bbb/navigation.py b/Products/CMFPlone/controlpanel/bbb/navigation.py\nindex 0cd58b5234..85bf7108b5 100644\n--- a/Products/CMFPlone/controlpanel/bbb/navigation.py\n+++ b/Products/CMFPlone/controlpanel/bbb/navigation.py\n@@ -1,6 +1,6 @@\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import INavigationSchema\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n+from plone.base.interfaces import INavigationSchema\n+from plone.base.interfaces import IPloneSiteRoot\n from zope.component import adapter\n from zope.component import getUtility\n from zope.interface import implementer\ndiff --git a/Products/CMFPlone/controlpanel/bbb/search.py b/Products/CMFPlone/controlpanel/bbb/search.py\nindex c5633ed877..6d0ec1f510 100644\n--- a/Products/CMFPlone/controlpanel/bbb/search.py\n+++ b/Products/CMFPlone/controlpanel/bbb/search.py\n@@ -1,5 +1,5 @@\n-from Products.CMFPlone.interfaces import ISearchSchema\n-from Products.CMFPlone.interfaces.siteroot import IPloneSiteRoot\n+from plone.base.interfaces import ISearchSchema\n+from plone.base.interfaces.siteroot import IPloneSiteRoot\n from plone.registry.interfaces import IRegistry\n from zope.component import adapts\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/controlpanel/bbb/security.py b/Products/CMFPlone/controlpanel/bbb/security.py\nindex 977b43f81f..5870b25910 100644\n--- a/Products/CMFPlone/controlpanel/bbb/security.py\n+++ b/Products/CMFPlone/controlpanel/bbb/security.py\n@@ -1,6 +1,6 @@\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces.siteroot import IPloneSiteRoot\n-from Products.CMFPlone.interfaces import ISecuritySchema\n+from plone.base.interfaces.siteroot import IPloneSiteRoot\n+from plone.base.interfaces import ISecuritySchema\n from plone.registry.interfaces import IRegistry\n from zope.component import adapts\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/controlpanel/bbb/site.py b/Products/CMFPlone/controlpanel/bbb/site.py\nindex 486c2e10c3..9098791b27 100644\n--- a/Products/CMFPlone/controlpanel/bbb/site.py\n+++ b/Products/CMFPlone/controlpanel/bbb/site.py\n@@ -1,6 +1,6 @@\n from zope.schema.fieldproperty import FieldProperty\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n-from Products.CMFPlone.interfaces import ISiteSchema\n+from plone.base.interfaces import IPloneSiteRoot\n+from plone.base.interfaces import ISiteSchema\n from plone.registry.interfaces import IRegistry\n from zope.component import adapts\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/controlpanel/bbb/usergroups.py b/Products/CMFPlone/controlpanel/bbb/usergroups.py\nindex 7df8393eff..ce88769f52 100644\n--- a/Products/CMFPlone/controlpanel/bbb/usergroups.py\n+++ b/Products/CMFPlone/controlpanel/bbb/usergroups.py\n@@ -3,8 +3,8 @@\n from zope.interface import implementer\n from zope.component.hooks import getSite\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import IUserGroupsSettingsSchema\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n+from plone.base.interfaces import IUserGroupsSettingsSchema\n+from plone.base.interfaces import IPloneSiteRoot\n \n \n @implementer(IUserGroupsSettingsSchema)\ndiff --git a/Products/CMFPlone/controlpanel/browser/actions.py b/Products/CMFPlone/controlpanel/browser/actions.py\nindex 35a64900ce..2037fd95cb 100644\n--- a/Products/CMFPlone/controlpanel/browser/actions.py\n+++ b/Products/CMFPlone/controlpanel/browser/actions.py\n@@ -3,7 +3,7 @@\n from Products.CMFCore.interfaces import IAction, IActionCategory\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import IActionSchema, INewActionSchema\n+from plone.base.interfaces import IActionSchema, INewActionSchema\n from Products.Five import BrowserView\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from z3c.form import form\ndiff --git a/Products/CMFPlone/controlpanel/browser/configure.zcml b/Products/CMFPlone/controlpanel/browser/configure.zcml\nindex 1204b15af6..671c66f1ed 100644\n--- a/Products/CMFPlone/controlpanel/browser/configure.zcml\n+++ b/Products/CMFPlone/controlpanel/browser/configure.zcml\n@@ -25,7 +25,7 @@\n   <!-- Control Panel Overview -->\n   <browser:page\n       name="overview-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".overview.OverviewControlPanel"\n       permission="plone.app.controlpanel.Overview"\n       />\n@@ -33,7 +33,7 @@\n   <!-- Editing Control Panel -->\n   <browser:page\n       name="editing-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".editing.EditingControlPanel"\n       permission="plone.app.controlpanel.Editing"\n       />\n@@ -41,7 +41,7 @@\n   <!-- Filter Control Panel -->\n   <browser:page\n       name="filter-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".filter.FilterControlPanelView"\n       permission="plone.app.controlpanel.Filtering"\n       />\n@@ -49,7 +49,7 @@\n   <!-- TinyMCE Control Panel -->\n   <browser:page\n       name="tinymce-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".tinymce.TinyMCEControlPanel"\n       permission="plone.app.controlpanel.TinyMCE"\n       />\n@@ -57,7 +57,7 @@\n   <!-- Language Control Panel -->\n   <browser:page\n       name="language-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".language.LanguageControlPanel"\n       permission="plone.app.controlpanel.Language"\n       />\n@@ -65,7 +65,7 @@\n   <!-- Maintenance Control Panel -->\n   <browser:page\n       name="maintenance-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".maintenance.MaintenanceControlPanel"\n       permission="cmf.ManagePortal"\n       />\n@@ -73,7 +73,7 @@\n   <!-- Mail Control Panel -->\n   <browser:page\n       name="mail-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".mail.MailControlPanel"\n       permission="plone.app.controlpanel.Mail"\n       />\n@@ -81,7 +81,7 @@\n   <!-- Navigation Control Panel -->\n   <browser:page\n       name="navigation-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".navigation.NavigationControlPanel"\n       permission="plone.app.controlpanel.Navigation"\n       />\n@@ -89,7 +89,7 @@\n   <!-- Search Control Panel -->\n   <browser:page\n       name="search-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".search.SearchControlPanel"\n       permission="plone.app.controlpanel.Search"\n       />\n@@ -97,7 +97,7 @@\n   <!-- Security Control Panel -->\n   <browser:page\n       name="security-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".security.SecurityControlPanel"\n       permission="plone.app.controlpanel.Security"\n       />\n@@ -105,7 +105,7 @@\n   <!-- Security Control Panel - EMail Login -->\n   <browser:page\n       name="migrate-to-emaillogin"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".security.EmailLogin"\n       template="emaillogin.pt"\n       permission="cmf.ManagePortal"\n@@ -114,28 +114,28 @@\n   <!-- Error Log Form Control Panel -->\n   <browser:page\n       name="error-log-form"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       template="error_log_form.pt"\n       permission="cmf.ManagePortal"\n       />\n \n   <browser:page\n       name="error-log-show-entry"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       template="error_log_show_entry.pt"\n       permission="cmf.ManagePortal"\n       />\n \n   <browser:page\n       name="error-log-update"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".error_log_form.ErrorLogUpdate"\n       permission="cmf.ManagePortal"\n       />\n \n   <browser:page\n       name="error-log-set-properties"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".error_log_form.ErrorLogSetProperties"\n       permission="cmf.ManagePortal"\n       />\n@@ -143,7 +143,7 @@\n   <!-- Site Control Panel -->\n   <browser:page\n       name="site-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".site.SiteControlPanel"\n       permission="plone.app.controlpanel.Site"\n       />\n@@ -151,7 +151,7 @@\n   <!-- Date and Time Control panel -->\n   <browser:page\n       name="dateandtime-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".dateandtime.DateAndTimeControlPanel"\n       permission="plone.app.controlpanel.Site"\n       />\n@@ -159,7 +159,7 @@\n   <!-- Types Control panel -->\n   <browser:page\n       name="content-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".types.TypesControlPanel"\n       permission="plone.app.controlpanel.Types"\n       />\n@@ -167,7 +167,7 @@\n   <!-- Resource Registry -->\n   <browser:page\n       name="resourceregistry-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".resourceregistry.ResourceRegistryControlPanelView"\n       permission="plone.app.controlpanel.Site"\n       template="resourceregistry.pt"\n@@ -176,7 +176,7 @@\n   <!-- Markup Control Panel -->\n   <browser:page\n       name="markup-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".markup.MarkupControlPanel"\n       permission="plone.app.controlpanel.Markup"\n       />\n@@ -184,13 +184,13 @@\n   <!-- Syndication Control Panel -->\n   <browser:page\n       name="syndication-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".syndication.SyndicationControlPanel"\n       permission="cmf.ManagePortal"\n       />\n   <browser:page\n       name="syndication-settings"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".syndication.SyndicationControlPanel"\n       permission="cmf.ManagePortal"\n       />\n@@ -198,14 +198,14 @@\n   <!-- Usergroup Control Panel -->\n   <browser:page\n       name="usergroup-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".usergroups.UserGroupsSettingsPanelView"\n       permission="plone.app.controlpanel.UsersAndGroups"\n       />\n \n   <browser:page\n       name="usergroup-userprefs"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".usergroups_usersoverview.UsersOverviewControlPanel"\n       permission="plone.app.controlpanel.UsersAndGroups"\n       template="usergroups_usersoverview.pt"\n@@ -213,7 +213,7 @@\n \n   <browser:page\n       name="usergroup-groupprefs"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".usergroups_groupsoverview.GroupsOverviewControlPanel"\n       permission="plone.app.controlpanel.UsersAndGroups"\n       template="usergroups_groupsoverview.pt"\n@@ -221,7 +221,7 @@\n \n   <browser:page\n       name="usergroup-groupmembership"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".usergroups_groupmembership.GroupMembershipControlPanel"\n       permission="plone.app.controlpanel.UsersAndGroups"\n       template="usergroups_groupmembership.pt"\n@@ -229,7 +229,7 @@\n \n   <browser:page\n       name="usergroup-usermembership"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".usergroups_usermembership.UserMembershipControlPanel"\n       permission="plone.app.controlpanel.UsersAndGroups"\n       template="usergroups_usermembership.pt"\n@@ -237,7 +237,7 @@\n \n   <browser:page\n       name="usergroup-groupdetails"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".usergroups_groupdetails.GroupDetailsControlPanel"\n       permission="plone.app.controlpanel.UsersAndGroups"\n       template="usergroups_groupdetails.pt"\n@@ -256,7 +256,7 @@\n \n   <browser:page\n       name="prefs_install_products_form"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".quickinstaller.ManageProductsView"\n       permission="cmf.ManagePortal"\n       template="quickinstaller.pt"\n@@ -264,21 +264,21 @@\n \n   <browser:page\n       name="upgrade_products"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".quickinstaller.UpgradeProductsView"\n       permission="cmf.ManagePortal"\n       />\n \n   <browser:page\n       name="install_products"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".quickinstaller.InstallProductsView"\n       permission="cmf.ManagePortal"\n       />\n \n   <browser:page\n       name="uninstall_products"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".quickinstaller.UninstallProductsView"\n       permission="cmf.ManagePortal"\n       />\n@@ -286,7 +286,7 @@\n   <!-- Social Media Control Panel -->\n   <browser:page\n       name="social-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".socialmedia.SocialControlPanel"\n       permission="plone.app.controlpanel.Site"\n       />\n@@ -294,7 +294,7 @@\n   <!-- Imaging Control Panel -->\n   <browser:page\n       name="imaging-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".imaging.ImagingControlPanel"\n       permission="plone.app.controlpanel.Imaging"\n       />\n@@ -302,7 +302,7 @@\n   <!-- Portal actions -->\n   <browser:page\n       name="actions-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".actions.ActionListControlPanel"\n       permission="cmf.ManagePortal"\n       />\n@@ -318,7 +318,7 @@\n \n   <browser:page\n       name="new-action"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".actions.NewActionControlPanel"\n       permission="cmf.ManagePortal"\n       />\n@@ -335,7 +335,7 @@\n \n   <browser:page\n       name="redirection-controlpanel"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".redirects.RedirectsControlPanel"\n       template="redirects-controlpanel.pt"\n       permission="Products.CMFPlone.ManagePortalAliases"\n@@ -354,7 +354,7 @@\n \n   <browser:page\n       name="inspect-relations"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".relations.RelationsInspectControlpanel"\n       template="relations_inspect.pt"\n       permission="Products.CMFPlone.InspectRelations"\n@@ -362,7 +362,7 @@\n \n   <browser:page\n       name="rebuild-relations"\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       class=".relations.RelationsRebuildControlpanel"\n       template="relations_rebuild.pt"\n       permission="cmf.ManagePortal"\ndiff --git a/Products/CMFPlone/controlpanel/browser/dateandtime.py b/Products/CMFPlone/controlpanel/browser/dateandtime.py\nindex 5059ec631f..9eec7408bb 100644\n--- a/Products/CMFPlone/controlpanel/browser/dateandtime.py\n+++ b/Products/CMFPlone/controlpanel/browser/dateandtime.py\n@@ -1,5 +1,5 @@\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import IDateAndTimeSchema\n+from plone.base.interfaces import IDateAndTimeSchema\n from plone.app.registry.browser.controlpanel import ControlPanelFormWrapper\n from plone.app.registry.browser.controlpanel import RegistryEditForm\n \ndiff --git a/Products/CMFPlone/controlpanel/browser/editing.py b/Products/CMFPlone/controlpanel/browser/editing.py\nindex 1ea069e011..fef3947988 100644\n--- a/Products/CMFPlone/controlpanel/browser/editing.py\n+++ b/Products/CMFPlone/controlpanel/browser/editing.py\n@@ -1,5 +1,5 @@\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import IEditingSchema\n+from plone.base.interfaces import IEditingSchema\n from plone.app.registry.browser import controlpanel\n from z3c.form import interfaces\n \ndiff --git a/Products/CMFPlone/controlpanel/browser/filter.py b/Products/CMFPlone/controlpanel/browser/filter.py\nindex e867f340ca..ff021fe988 100644\n--- a/Products/CMFPlone/controlpanel/browser/filter.py\n+++ b/Products/CMFPlone/controlpanel/browser/filter.py\n@@ -1,7 +1,7 @@\n from plone.app.registry.browser import controlpanel\n from plone.z3cform import layout\n from Products.CMFPlone import PloneMessageFactory as _  # NOQA\n-from Products.CMFPlone.interfaces import IFilterSchema\n+from plone.base.interfaces import IFilterSchema\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.statusmessages.interfaces import IStatusMessage\n from z3c.form import button\ndiff --git a/Products/CMFPlone/controlpanel/browser/imaging.py b/Products/CMFPlone/controlpanel/browser/imaging.py\nindex 71e7e58c2e..369c78a410 100644\n--- a/Products/CMFPlone/controlpanel/browser/imaging.py\n+++ b/Products/CMFPlone/controlpanel/browser/imaging.py\n@@ -1,5 +1,5 @@\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces.controlpanel import IImagingSchema\n+from plone.base.interfaces.controlpanel import IImagingSchema\n from logging import getLogger\n from plone.app.registry.browser import controlpanel\n \ndiff --git a/Products/CMFPlone/controlpanel/browser/mail.py b/Products/CMFPlone/controlpanel/browser/mail.py\nindex df4a35087a..6f09498c3e 100644\n--- a/Products/CMFPlone/controlpanel/browser/mail.py\n+++ b/Products/CMFPlone/controlpanel/browser/mail.py\n@@ -1,6 +1,6 @@\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces.controlpanel import IMailSchema\n+from plone.base.interfaces.controlpanel import IMailSchema\n from Products.MailHost.MailHost import MailHostError\n from Products.statusmessages.interfaces import IStatusMessage\n from logging import getLogger\ndiff --git a/Products/CMFPlone/controlpanel/browser/maintenance.py b/Products/CMFPlone/controlpanel/browser/maintenance.py\nindex d3b82f96c5..58d1da57fb 100644\n--- a/Products/CMFPlone/controlpanel/browser/maintenance.py\n+++ b/Products/CMFPlone/controlpanel/browser/maintenance.py\n@@ -7,7 +7,7 @@\n from plone.protect import CheckAuthenticator\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import IMaintenanceSchema\n+from plone.base.interfaces import IMaintenanceSchema\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from z3c.form import button\n from z3c.form import form\ndiff --git a/Products/CMFPlone/controlpanel/browser/markup.py b/Products/CMFPlone/controlpanel/browser/markup.py\nindex c78d345d59..dc97a36c8d 100644\n--- a/Products/CMFPlone/controlpanel/browser/markup.py\n+++ b/Products/CMFPlone/controlpanel/browser/markup.py\n@@ -1,5 +1,5 @@\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import IMarkupSchema\n+from plone.base.interfaces import IMarkupSchema\n from plone.app.registry.browser import controlpanel\n from z3c.form.browser.checkbox import CheckBoxFieldWidget\n \ndiff --git a/Products/CMFPlone/controlpanel/browser/navigation.py b/Products/CMFPlone/controlpanel/browser/navigation.py\nindex 7e4955f3d5..8149211b00 100644\n--- a/Products/CMFPlone/controlpanel/browser/navigation.py\n+++ b/Products/CMFPlone/controlpanel/browser/navigation.py\n@@ -1,5 +1,5 @@\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import INavigationSchema\n+from plone.base.interfaces import INavigationSchema\n from plone.app.registry.browser import controlpanel\n from z3c.form.browser.checkbox import CheckBoxFieldWidget\n \ndiff --git a/Products/CMFPlone/controlpanel/browser/overview.py b/Products/CMFPlone/controlpanel/browser/overview.py\nindex 47657ded96..f0e275ce5b 100644\n--- a/Products/CMFPlone/controlpanel/browser/overview.py\n+++ b/Products/CMFPlone/controlpanel/browser/overview.py\n@@ -1,7 +1,7 @@\n from AccessControl import getSecurityManager\n from Acquisition import aq_inner\n from App.config import getConfiguration\n-from Products.CMFPlone.interfaces.controlpanel import IMailSchema\n+from plone.base.interfaces.controlpanel import IMailSchema\n from Products.CMFCore.permissions import ManagePortal\n from Products.CMFCore.utils import getToolByName\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\ndiff --git a/Products/CMFPlone/controlpanel/browser/quickinstaller.py b/Products/CMFPlone/controlpanel/browser/quickinstaller.py\nindex 7931ae5839..69b0c2c6ff 100644\n--- a/Products/CMFPlone/controlpanel/browser/quickinstaller.py\n+++ b/Products/CMFPlone/controlpanel/browser/quickinstaller.py\n@@ -1,6 +1,6 @@\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import INonInstallable\n+from plone.base.interfaces import INonInstallable\n from Products.Five.browser import BrowserView\n from Products.GenericSetup import EXTENSION\n from Products.GenericSetup.tool import UNKNOWN\ndiff --git a/Products/CMFPlone/controlpanel/browser/redirects.py b/Products/CMFPlone/controlpanel/browser/redirects.py\nindex e4aa52ff7e..c84c710305 100644\n--- a/Products/CMFPlone/controlpanel/browser/redirects.py\n+++ b/Products/CMFPlone/controlpanel/browser/redirects.py\n@@ -6,7 +6,7 @@\n from plone.memoize.view import memoize\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.PloneBatch import Batch\n-from Products.CMFPlone.utils import safe_text\n+from plone.base.utils import safe_text\n from Products.Five.browser import BrowserView\n from Products.statusmessages.interfaces import IStatusMessage\n from io import StringIO\ndiff --git a/Products/CMFPlone/controlpanel/browser/resourceregistry.py b/Products/CMFPlone/controlpanel/browser/resourceregistry.py\nindex 1bfae52ae8..9f1733e2ed 100644\n--- a/Products/CMFPlone/controlpanel/browser/resourceregistry.py\n+++ b/Products/CMFPlone/controlpanel/browser/resourceregistry.py\n@@ -1,7 +1,7 @@\n from App.config import getConfiguration\n+from plone.base.interfaces import IBundleRegistry\n from plone.registry.interfaces import IRegistry\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import IBundleRegistry\n from Products.Five.browser import BrowserView\n from Products.statusmessages.interfaces import IStatusMessage\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/controlpanel/browser/search.py b/Products/CMFPlone/controlpanel/browser/search.py\nindex ddffdf4151..de2fc54a14 100644\n--- a/Products/CMFPlone/controlpanel/browser/search.py\n+++ b/Products/CMFPlone/controlpanel/browser/search.py\n@@ -1,5 +1,5 @@\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import ISearchSchema\n+from plone.base.interfaces import ISearchSchema\n from Products.CMFPlone.controlpanel.widgets import ReverseCheckBoxFieldWidget\n from plone.app.registry.browser import controlpanel\n from zope.component import queryUtility\ndiff --git a/Products/CMFPlone/controlpanel/browser/security.py b/Products/CMFPlone/controlpanel/browser/security.py\nindex 4fb41d1601..ae52e9ac63 100644\n--- a/Products/CMFPlone/controlpanel/browser/security.py\n+++ b/Products/CMFPlone/controlpanel/browser/security.py\n@@ -3,7 +3,7 @@\n from Products.CMFPlone import PloneMessageFactory as _\n from Products.CMFPlone.controlpanel.utils import migrate_to_email_login\n from Products.CMFPlone.controlpanel.utils import migrate_from_email_login\n-from Products.CMFPlone.interfaces import ISecuritySchema\n+from plone.base.interfaces import ISecuritySchema\n from Products.Five.browser import BrowserView\n from collections import defaultdict\n from plone.app.registry.browser import controlpanel\ndiff --git a/Products/CMFPlone/controlpanel/browser/site.py b/Products/CMFPlone/controlpanel/browser/site.py\nindex f87c056104..2bd9e99418 100644\n--- a/Products/CMFPlone/controlpanel/browser/site.py\n+++ b/Products/CMFPlone/controlpanel/browser/site.py\n@@ -1,5 +1,5 @@\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import ISiteSchema\n+from plone.base.interfaces import ISiteSchema\n from plone.app.registry.browser import controlpanel\n from plone.formwidget.namedfile.widget import NamedImageFieldWidget\n from z3c.form import interfaces\ndiff --git a/Products/CMFPlone/controlpanel/browser/socialmedia.py b/Products/CMFPlone/controlpanel/browser/socialmedia.py\nindex edb14ca1b8..dc48368a0e 100644\n--- a/Products/CMFPlone/controlpanel/browser/socialmedia.py\n+++ b/Products/CMFPlone/controlpanel/browser/socialmedia.py\n@@ -1,5 +1,5 @@\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import ISocialMediaSchema\n+from plone.base.interfaces import ISocialMediaSchema\n from plone.app.registry.browser import controlpanel\n \n \ndiff --git a/Products/CMFPlone/controlpanel/browser/syndication.py b/Products/CMFPlone/controlpanel/browser/syndication.py\nindex f9b16303c3..be92de8e60 100644\n--- a/Products/CMFPlone/controlpanel/browser/syndication.py\n+++ b/Products/CMFPlone/controlpanel/browser/syndication.py\n@@ -1,6 +1,6 @@\n from Products.CMFCore.utils import getToolByName\n from zope.i18nmessageid import MessageFactory\n-from Products.CMFPlone.interfaces.syndication import ISiteSyndicationSettings\n+from plone.base.interfaces.syndication import ISiteSyndicationSettings\n from plone.app.registry.browser import controlpanel\n from z3c.form import button\n from Products.statusmessages.interfaces import IStatusMessage\ndiff --git a/Products/CMFPlone/controlpanel/browser/tinymce.py b/Products/CMFPlone/controlpanel/browser/tinymce.py\nindex 4e3d0daf25..e70c93525d 100644\n--- a/Products/CMFPlone/controlpanel/browser/tinymce.py\n+++ b/Products/CMFPlone/controlpanel/browser/tinymce.py\n@@ -1,10 +1,10 @@\n from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone.interfaces import ITinyMCELayoutSchema\n-from Products.CMFPlone.interfaces import ITinyMCESpellCheckerSchema\n-from Products.CMFPlone.interfaces import ITinyMCEResourceTypesSchema\n-from Products.CMFPlone.interfaces import ITinyMCEAdvancedSchema\n-from Products.CMFPlone.interfaces import ITinyMCESchema\n-from Products.CMFPlone.interfaces import ITinyMCEPluginSchema\n+from plone.base.interfaces import ITinyMCELayoutSchema\n+from plone.base.interfaces import ITinyMCESpellCheckerSchema\n+from plone.base.interfaces import ITinyMCEResourceTypesSchema\n+from plone.base.interfaces import ITinyMCEAdvancedSchema\n+from plone.base.interfaces import ITinyMCESchema\n+from plone.base.interfaces import ITinyMCEPluginSchema\n from plone.app.registry.browser import controlpanel\n from z3c.form import field\n from z3c.form import group\ndiff --git a/Products/CMFPlone/controlpanel/browser/types.py b/Products/CMFPlone/controlpanel/browser/types.py\nindex 830065698c..e534c0318c 100644\n--- a/Products/CMFPlone/controlpanel/browser/types.py\n+++ b/Products/CMFPlone/controlpanel/browser/types.py\n@@ -2,9 +2,9 @@\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n from Products.CMFPlone.controlpanel.events import ConfigurationChangedEvent\n-from Products.CMFPlone.interfaces import ISearchSchema\n-from Products.CMFPlone.interfaces import ITypesSchema\n-from Products.CMFPlone.utils import safe_unicode\n+from plone.base.interfaces import ISearchSchema\n+from plone.base.interfaces import ITypesSchema\n+from plone.base.utils import safe_text\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.statusmessages.interfaces import IStatusMessage\n from operator import itemgetter\n@@ -156,7 +156,7 @@ def __call__(self):\n                     else:\n                         # check if we should add\n                         if type_id not in versionable_types:\n-                            versionable_types.append(safe_unicode(type_id))\n+                            versionable_types.append(safe_text(type_id))\n                         self.add_versioning_behavior(fti)\n \n                     for policy in portal_repository.listPolicies():\n@@ -193,9 +193,9 @@ def __call__(self):\n                 types_settings = registry.forInterface(\n                     ITypesSchema, prefix="plone")\n                 default_page_types = [\n-                    safe_unicode(i) for i in types_settings.default_page_types]\n+                    safe_text(i) for i in types_settings.default_page_types]\n                 if default_page_type and type_id not in default_page_types:\n-                    default_page_types.append(safe_unicode(type_id))\n+                    default_page_types.append(safe_text(type_id))\n                 elif not default_page_type and type_id in default_page_types:\n                     default_page_types.remove(type_id)\n                 types_settings.default_page_types = default_page_types\n@@ -365,7 +365,7 @@ def current_workflow(self):\n                 wf_id = chain[0]\n                 wf = getattr(portal_workflow, wf_id)\n                 title = translate(\n-                    safe_unicode(wf.title),\n+                    safe_text(wf.title),\n                     domain=\'plone\',\n                     context=self.request\n                 )\n@@ -373,7 +373,7 @@ def current_workflow(self):\n                     id=wf.id,\n                     title=title,\n                     description=format_description(\n-                        safe_unicode(wf.description),\n+                        safe_text(wf.description),\n                         self.request\n                     )\n                 )\n@@ -384,7 +384,7 @@ def current_workflow(self):\n             return empty_workflow_dict\n \n         default_title = translate(\n-            safe_unicode(default_workflow.title),\n+            safe_text(default_workflow.title),\n             domain=\'plone\',\n             context=self.request\n         )\n@@ -420,7 +420,7 @@ def available_workflows(self):\n             # Only offer a default workflow option on a real type\n             default_workflow = self.default_workflow(False)\n             default_title = translate(\n-                safe_unicode(default_workflow.title),\n+                safe_text(default_workflow.title),\n                 domain=\'plone\',\n                 context=self.request\n             )\ndiff --git a/Products/CMFPlone/controlpanel/browser/usergroups.py b/Products/CMFPlone/controlpanel/browser/usergroups.py\nindex b6759adf47..2819742a47 100644\n--- a/Products/CMFPlone/controlpanel/browser/usergroups.py\n+++ b/Products/CMFPlone/controlpanel/browser/usergroups.py\n@@ -4,7 +4,7 @@\n from Acquisition import aq_inner\n from Products.CMFPlone.utils import normalizeString\n from zope.component import getAdapter\n-from Products.CMFPlone.interfaces import ISecuritySchema\n+from plone.base.interfaces import ISecuritySchema\n from zope.component import getMultiAdapter\n from AccessControl import getSecurityManager\n from Products.Five.browser import BrowserView\n@@ -15,7 +15,7 @@\n from Products.CMFPlone import PloneMessageFactory as _\n from z3c.form import form\n \n-from Products.CMFPlone.interfaces import IUserGroupsSettingsSchema\n+from plone.base.interfaces import IUserGroupsSettingsSchema\n from z3c.form import button\n \n \ndiff --git a/Products/CMFPlone/controlpanel/events.py b/Products/CMFPlone/controlpanel/events.py\nindex 1273f6297d..fdbced0807 100644\n--- a/Products/CMFPlone/controlpanel/events.py\n+++ b/Products/CMFPlone/controlpanel/events.py\n@@ -3,8 +3,8 @@\n from Products.CMFPlone import PloneMessageFactory as _\n from Products.CMFPlone.controlpanel.utils import migrate_to_email_login\n from Products.CMFPlone.controlpanel.utils import migrate_from_email_login\n-from Products.CMFPlone.interfaces import IConfigurationChangedEvent\n-from Products.CMFPlone.interfaces import ISecuritySchema\n+from plone.base.interfaces import IConfigurationChangedEvent\n+from plone.base.interfaces import ISecuritySchema\n from Products.CMFPlone.utils import safe_hasattr\n from plone.registry.interfaces import IRecordModifiedEvent\n from zope.component import adapter\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_editing_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_editing_adapter.py\nindex 8e48c1737c..a1ca337498 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_editing_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_editing_adapter.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import IEditingSchema\n+from plone.base.interfaces import IEditingSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import setRoles\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_filter_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_filter_adapter.py\nindex 8321155c99..ef03ef4699 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_filter_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_filter_adapter.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import IFilterSchema\n+from plone.base.interfaces import IFilterSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import setRoles\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_mail_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_mail_adapter.py\nindex a3227f068e..d936b92091 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_mail_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_mail_adapter.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import IMailSchema\n+from plone.base.interfaces import IMailSchema\n from Products.CMFPlone.testing import \\\n     PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.app.testing import TEST_USER_ID, setRoles\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_maintenance_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_maintenance_adapter.py\nindex ebcb4e1d6c..c002629e18 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_maintenance_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_maintenance_adapter.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import IMaintenanceSchema\n+from plone.base.interfaces import IMaintenanceSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import setRoles\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_markup_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_markup_adapter.py\nindex 4e9e2cfb36..f5f3c8135a 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_markup_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_markup_adapter.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import IMarkupSchema\n+from plone.base.interfaces import IMarkupSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_navigation_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_navigation_adapter.py\nindex 8fa4ea9704..fdec408974 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_navigation_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_navigation_adapter.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import INavigationSchema\n+from plone.base.interfaces import INavigationSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.app.testing import TEST_USER_ID, setRoles\n from plone.registry.interfaces import IRegistry\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_search_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_search_adapter.py\nindex 4efa771e07..c2bf2ecd91 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_search_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_search_adapter.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import ISearchSchema\n+from plone.base.interfaces import ISearchSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.app.testing import TEST_USER_ID, setRoles\n from plone.registry.interfaces import IRegistry\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_security_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_security_adapter.py\nindex 139ca26bca..a98e190663 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_security_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_security_adapter.py\n@@ -1,6 +1,6 @@\n from Products.CMFPlone.testing import \\\n     PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n-from Products.CMFPlone.interfaces import ISecuritySchema\n+from plone.base.interfaces import ISecuritySchema\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import setRoles\n from zope.component import getAdapter\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_site_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_site_adapter.py\nindex 9dcc8d3a32..443f5f20c8 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_site_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_site_adapter.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import ISiteSchema\n+from plone.base.interfaces import ISiteSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import setRoles\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_usergroups_adapter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_usergroups_adapter.py\nindex 6c3d7801f1..2f7229a9ad 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_usergroups_adapter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_bbb_usergroups_adapter.py\n@@ -1,5 +1,5 @@\n from plone.app.testing import setRoles\n-from Products.CMFPlone.interfaces import IUserGroupsSettingsSchema\n+from plone.base.interfaces import IUserGroupsSettingsSchema\n from zope.component import getAdapter\n from plone.app.testing import TEST_USER_ID\n from plone.registry.interfaces import IRegistry\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_editing.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_editing.py\nindex 81ed3de60f..3b0be82fb7 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_editing.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_editing.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import IEditingSchema\n+from plone.base.interfaces import IEditingSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from plone.app.linkintegrity.utils import linkintegrity_enabled\n from plone.app.testing import SITE_OWNER_NAME\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_filter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_filter.py\nindex c0154ea161..5ede8606b1 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_filter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_filter.py\n@@ -2,7 +2,7 @@\n from plone.registry.interfaces import IRegistry\n from plone.testing.zope import Browser\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import IFilterSchema\n+from plone.base.interfaces import IFilterSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from Products.PortalTransforms.data import datastream\n from zope.component import getMultiAdapter\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_mail.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_mail.py\nindex c3d306202a..c575f7f438 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_mail.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_mail.py\n@@ -5,7 +5,7 @@\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n \n-from Products.CMFPlone.interfaces import IMailSchema\n+from plone.base.interfaces import IMailSchema\n from Products.CMFPlone.testing import \\\n     PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_markup.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_markup.py\nindex a4cb5ae821..cd34913f44 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_markup.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_markup.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import IMarkupSchema\n+from plone.base.interfaces import IMarkupSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from plone.app.testing import SITE_OWNER_NAME, SITE_OWNER_PASSWORD\n from plone.registry.interfaces import IRegistry\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_navigation.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_navigation.py\nindex 7921dec95d..66e79d0d0e 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_navigation.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_navigation.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import INavigationSchema\n+from plone.base.interfaces import INavigationSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from plone.app.testing import SITE_OWNER_NAME, SITE_OWNER_PASSWORD\n from plone.registry.interfaces import IRegistry\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_search.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_search.py\nindex 02358a34d0..3b2d7d17c0 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_search.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_search.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import ISearchSchema\n+from plone.base.interfaces import ISearchSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from plone.app.testing import SITE_OWNER_NAME, SITE_OWNER_PASSWORD\n from plone.registry.interfaces import IRegistry\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_security.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_security.py\nindex df4f58c383..89c57b5113 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_security.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_security.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import ISecuritySchema\n+from plone.base.interfaces import ISecuritySchema\n from Products.CMFPlone.testing import \\\n     PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from plone.app.testing import SITE_OWNER_NAME, SITE_OWNER_PASSWORD\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_site.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_site.py\nindex 583e5e4b83..e5cf80998d 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_site.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_site.py\n@@ -1,7 +1,7 @@\n from plone.app.testing import SITE_OWNER_NAME, SITE_OWNER_PASSWORD\n from plone.registry.interfaces import IRegistry\n from plone.testing.zope import Browser\n-from Products.CMFPlone.interfaces import ISiteSchema\n+from plone.base.interfaces import ISiteSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from io import BytesIO\n from zope.component import getMultiAdapter\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_dateandtime.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_dateandtime.py\nindex ed75bc1727..9a86dee7be 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_dateandtime.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_dateandtime.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import IDateAndTimeSchema\n+from plone.base.interfaces import IDateAndTimeSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import setRoles\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_editing.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_editing.py\nindex 3a5f9c27c0..037d4b166e 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_editing.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_editing.py\n@@ -1,5 +1,5 @@\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import IEditingSchema\n+from plone.base.interfaces import IEditingSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n from zope.component import getMultiAdapter\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_events.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_events.py\nindex 7bc43c1708..0e053ff69f 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_events.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_events.py\n@@ -1,7 +1,7 @@\n from Products.CMFPlone.testing import \\\n     PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ISecuritySchema\n+from plone.base.interfaces import ISecuritySchema\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import setRoles\n from zope.component import getAdapter\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_filter.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_filter.py\nindex c96c5e8c1a..44b5fcd01f 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_filter.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_filter.py\n@@ -1,5 +1,5 @@\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import IFilterSchema\n+from plone.base.interfaces import IFilterSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n from zope.component import getMultiAdapter\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_mail.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_mail.py\nindex 2b78ace63f..0de6c66436 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_mail.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_mail.py\n@@ -3,7 +3,7 @@\n from plone.registry.interfaces import IRegistry\n \n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import IMailSchema\n+from plone.base.interfaces import IMailSchema\n from Products.CMFPlone.testing import \\\n     PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_markup.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_markup.py\nindex 9af62e6e6b..248e27602c 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_markup.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_markup.py\n@@ -1,5 +1,5 @@\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import IMarkupSchema\n+from plone.base.interfaces import IMarkupSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n from zope.component import getMultiAdapter\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_navigation.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_navigation.py\nindex 62ca94ae2f..955ed19c40 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_navigation.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_navigation.py\n@@ -1,5 +1,5 @@\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import INavigationSchema\n+from plone.base.interfaces import INavigationSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n from zope.component import getMultiAdapter\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_search.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_search.py\nindex ccdbce6c6b..8cab7e457c 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_search.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_search.py\n@@ -1,5 +1,5 @@\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ISearchSchema\n+from plone.base.interfaces import ISearchSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n from zope.component import getMultiAdapter\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_security.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_security.py\nindex f2f39cb42f..12898194be 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_security.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_security.py\n@@ -1,5 +1,5 @@\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ISecuritySchema\n+from plone.base.interfaces import ISecuritySchema\n from Products.CMFPlone.testing import \\\n     PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.app.testing import TEST_USER_ID, setRoles\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_site.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_site.py\nindex 38ec5f45e8..d8786bbb95 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_site.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_site.py\n@@ -1,5 +1,5 @@\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ISiteSchema\n+from plone.base.interfaces import ISiteSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from plone.registry.interfaces import IRegistry\n from zope.component import getMultiAdapter\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_types.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_types.py\nindex 1294c6812e..311d29b9e3 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_types.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_types.py\n@@ -1,5 +1,5 @@\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ITypesSchema\n+from plone.base.interfaces import ITypesSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n from zope.component import getMultiAdapter\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_usergroups.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_usergroups.py\nindex fafe010171..7e92c90e83 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_usergroups.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_usergroups.py\n@@ -1,6 +1,6 @@\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import IUserGroupsSettingsSchema\n+from plone.base.interfaces import IUserGroupsSettingsSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from zope.component import getMultiAdapter\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_upgrades1.zcml b/Products/CMFPlone/controlpanel/tests/test_upgrades1.zcml\nindex a33635e929..957e962283 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_upgrades1.zcml\n+++ b/Products/CMFPlone/controlpanel/tests/test_upgrades1.zcml\n@@ -7,7 +7,7 @@\n       name="testfixture1"\n       title="Plone Test Fixture 1"\n       directory="profiles/testfixture"\n-      for="Products.CMFPlone.interfaces.ITestCasePloneSiteRoot"\n+      for="plone.base.interfaces.ITestCasePloneSiteRoot"\n       provides="Products.GenericSetup.interfaces.EXTENSION"\n       />\n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_upgrades2.zcml b/Products/CMFPlone/controlpanel/tests/test_upgrades2.zcml\nindex 0a6fcb4c43..c02f7be17d 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_upgrades2.zcml\n+++ b/Products/CMFPlone/controlpanel/tests/test_upgrades2.zcml\n@@ -7,7 +7,7 @@\n       name="testfixture2"\n       title="Plone Test Fixture 2"\n       directory="profiles/testfixture"\n-      for="Products.CMFPlone.interfaces.ITestCasePloneSiteRoot"\n+      for="plone.base.interfaces.ITestCasePloneSiteRoot"\n       provides="Products.GenericSetup.interfaces.EXTENSION"\n       />\n \ndiff --git a/Products/CMFPlone/defaultpage.py b/Products/CMFPlone/defaultpage.py\nindex 626bebb829..bdf7402894 100644\n--- a/Products/CMFPlone/defaultpage.py\n+++ b/Products/CMFPlone/defaultpage.py\n@@ -1,139 +1,3 @@\n-from Acquisition import aq_base\n-from Acquisition import aq_parent\n-from Acquisition import aq_inner\n-from plone.registry.interfaces import IRegistry\n-from Products.BTreeFolder2.BTreeFolder2 import BTreeFolder2Base\n-from Products.CMFCore.interfaces import IFolderish\n-from Products.CMFCore.interfaces import ISiteRoot\n-from Products.CMFDynamicViewFTI.interfaces import IBrowserDefault\n-from Products.CMFDynamicViewFTI.interfaces import IDynamicViewTypeInformation\n-from zope.component import getUtility\n-from zope.component import queryAdapter\n-from zope.component import queryUtility\n-from zope.component import queryMultiAdapter\n+from zope.deprecation import moved\n \n-\n-def get_default_page(context):\n-    """Given a folderish item, find out if it has a default-page using\n-    the following lookup rules:\n-\n-        1. A content object called \'index_html\' wins\n-        2. Else check for IBrowserDefault, either if the container implements\n-           it or if an adapter exists. In both cases fetch its FTI and either\n-           take it if it implements IDynamicViewTypeInformation or adapt it to\n-           IDynamicViewTypeInformation. call getDefaultPage on the implementer\n-           and take value if given.\n-        3. Else, look up the attribute default_page on the object, without\n-           acquisition in place\n-        3.1 look for a content in the container with the id, no acquisition!\n-        3.2 look for a content at portal, with acquisition\n-        4. Else, look up the property default_page in site_properties for\n-           magic ids and test these\n-\n-    The id of the first matching item is then used to lookup a translation\n-    and if found, its id is returned. If no default page is set, None is\n-    returned. If a non-folderish item is passed in, return None always.\n-    """\n-    # met precondition?\n-    if not IFolderish.providedBy(context):\n-        return\n-\n-    # The ids where we look for default - must support __contains__\n-    ids = set()\n-\n-    # For BTreeFolders we just use the __contains__ otherwise build a set\n-    if isinstance(aq_base(context), BTreeFolder2Base):\n-        ids = context\n-    elif hasattr(aq_base(context), \'objectIds\'):\n-        ids = set(context.objectIds())\n-\n-    # 1. test for contentish index_html\n-    if \'index_html\' in ids:\n-        return \'index_html\'\n-\n-    # 2. Test for IBrowserDefault\n-    if IBrowserDefault.providedBy(context):\n-        browserDefault = context\n-    else:\n-        browserDefault = queryAdapter(context, IBrowserDefault)\n-\n-    if browserDefault is not None:\n-        fti = context.getTypeInfo()\n-        if fti is not None:\n-            if IDynamicViewTypeInformation.providedBy(fti):\n-                dynamic_fti = fti\n-            else:\n-                dynamic_fti = queryAdapter(fti, IDynamicViewTypeInformation)\n-            if dynamic_fti is not None:\n-                page = dynamic_fti.getDefaultPage(context, check_exists=True)\n-                if page is not None:\n-                    return page\n-\n-    # 3.1 Test for default_page attribute in folder, no acquisition\n-    pages = getattr(aq_base(context), \'default_page\', [])\n-    if isinstance(pages, str):\n-        pages = [pages]\n-    for page in pages:\n-        if page and page in ids:\n-            return page\n-\n-    portal = queryUtility(ISiteRoot)\n-    # Might happen during portal creation\n-    if portal is None:\n-        return\n-\n-    # 3.2 Test for default page in portal, acquire\n-    for page in pages:\n-        if portal.unrestrictedTraverse(page, None):\n-            return page\n-\n-    # 4. Test for default sitewide default_page setting\n-    registry = getUtility(IRegistry)\n-    for page in registry.get(\'plone.default_page\', []):\n-        if page in ids:\n-            return page\n-\n-\n-def is_default_page(container, obj):\n-    """Finds out if the given obj is the default page in its parent folder.\n-\n-    Only considers explicitly contained objects, either set as index_html,\n-    with the default_page property, or using IBrowserDefault.\n-    """\n-    parent_default_page = get_default_page(container)\n-    precondition = (\n-        parent_default_page is not None\n-        and \'/\' not in parent_default_page\n-        and hasattr(aq_base(obj), \'getId\')\n-    )\n-    return precondition and (parent_default_page == obj.getId())\n-\n-\n-def _getDefaultPageView(obj, request):\n-    """This is a nasty hack because the view lookup fails when it occurs too\n-       early in the publishing process because the request isn\'t marked with\n-       the default skin.  Explicitly marking the request appears to cause\n-       connection errors, so we just instantiate the view manually.\n-    """\n-    view = queryMultiAdapter((obj, request), name=\'default_page\')\n-    if view is None:\n-        # mask circular import\n-        from Products.CMFPlone.browser.defaultpage import DefaultPage\n-        view = DefaultPage(obj, request)\n-    return view\n-\n-\n-def check_default_page_via_view(obj, request):\n-    container = aq_parent(aq_inner(obj))\n-    if container is None:\n-        return False\n-    view = _getDefaultPageView(container, request)\n-    return view.isDefaultPage(obj)\n-\n-\n-def get_default_page_via_view(obj, request):\n-    # Short circuit if we are not looking at a Folder\n-    if not obj.isPrincipiaFolderish:\n-        return None\n-    view = _getDefaultPageView(obj, request)\n-    return view.getDefaultPage()\n+moved(\'plone.base.defaultpage\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/deprecated.zcml b/Products/CMFPlone/deprecated.zcml\ndeleted file mode 100644\nindex e93a741095..0000000000\n--- a/Products/CMFPlone/deprecated.zcml\n+++ /dev/null\n@@ -1,16 +0,0 @@\n-<configure xmlns="http://namespaces.zope.org/zope"\n-           xmlns:browser="http://namespaces.zope.org/browser"\n-           xmlns:five="http://namespaces.zope.org/five"\n-           xmlns:zcml="http://namespaces.zope.org/zcml"\n-           i18n_domain="plone">\n-\n-  <!-- The following declarations are deprecated and will be removed in\n-       Plone 4.0. -->\n-\n-  <five:deprecatedManageAddDelete\n-      class=".Portal.PloneSite" />\n-\n-  <five:deprecatedManageAddDelete\n-      class=".CatalogTool.CatalogTool" />\n-\n-</configure>\ndiff --git a/Products/CMFPlone/events.py b/Products/CMFPlone/events.py\nindex b9c04fd830..e8ffce63ac 100644\n--- a/Products/CMFPlone/events.py\n+++ b/Products/CMFPlone/events.py\n@@ -1,14 +1,12 @@\n+from plone.base.interfaces import IReorderedEvent\n+from plone.base.interfaces import ISiteManagerCreatedEvent\n+from plone.base.utils import get_installer\n from zope.interface import implementer\n from zope.interface.interfaces import ObjectEvent\n-from Products.CMFPlone.utils import get_installer\n-\n-from .interfaces import ISiteManagerCreatedEvent\n-from .interfaces import IReorderedEvent\n \n \n @implementer(ISiteManagerCreatedEvent)\n class SiteManagerCreatedEvent(ObjectEvent):\n-\n     pass\n \n \ndiff --git a/Products/CMFPlone/exportimport/configure.zcml b/Products/CMFPlone/exportimport/configure.zcml\nindex b3a1ada1ba..e38d8c41cb 100644\n--- a/Products/CMFPlone/exportimport/configure.zcml\n+++ b/Products/CMFPlone/exportimport/configure.zcml\n@@ -114,14 +114,14 @@\n   <adapter\n      factory=".propertiestool.PlonePropertiesToolXMLAdapter"\n      provides="Products.GenericSetup.interfaces.IBody"\n-     for="Products.CMFPlone.interfaces.IPropertiesTool\n+     for="plone.base.interfaces.IPropertiesTool\n           Products.GenericSetup.interfaces.ISetupEnviron"\n      />\n \n   <adapter\n      factory=".propertiestool.SimpleItemWithPropertiesXMLAdapter"\n      provides="Products.GenericSetup.interfaces.IBody"\n-     for="Products.CMFPlone.interfaces.ISimpleItemWithProperties\n+     for="plone.base.interfaces.ISimpleItemWithProperties\n           Products.GenericSetup.interfaces.ISetupEnviron"\n      />\n \n@@ -142,7 +142,7 @@\n   <adapter\n      factory=".controlpanel.ControlPanelXMLAdapter"\n      provides="Products.GenericSetup.interfaces.IBody"\n-     for="Products.CMFPlone.interfaces.IControlPanel\n+     for="plone.base.interfaces.IControlPanel\n           Products.GenericSetup.interfaces.ISetupEnviron"\n      />\n \ndiff --git a/Products/CMFPlone/exportimport/controlpanel.py b/Products/CMFPlone/exportimport/controlpanel.py\nindex ecf8107973..48ca8c891d 100644\n--- a/Products/CMFPlone/exportimport/controlpanel.py\n+++ b/Products/CMFPlone/exportimport/controlpanel.py\n@@ -23,7 +23,7 @@\n from Products.CMFCore.interfaces import IActionProvider\n from Products.CMFCore.utils import getToolByName\n \n-from Products.CMFPlone.interfaces import IControlPanel\n+from plone.base.interfaces import IControlPanel\n \n \n class ControlPanelXMLAdapter(XMLAdapterBase):\ndiff --git a/Products/CMFPlone/exportimport/propertiestool.py b/Products/CMFPlone/exportimport/propertiestool.py\nindex 7d819ed58d..3bc7ea923b 100644\n--- a/Products/CMFPlone/exportimport/propertiestool.py\n+++ b/Products/CMFPlone/exportimport/propertiestool.py\n@@ -11,9 +11,9 @@\n from Products.GenericSetup.utils import ObjectManagerHelpers\n from Products.GenericSetup.utils import PropertyManagerHelpers\n from Products.CMFPlone.PropertiesTool import SimpleItemWithProperties\n-from Products.CMFPlone.interfaces \\\n+from plone.base.interfaces \\\n     import IPropertiesTool as IPlonePropertiesTool\n-from Products.CMFPlone.interfaces import ISimpleItemWithProperties\n+from plone.base.interfaces import ISimpleItemWithProperties\n \n _FILENAME = \'propertiestool.xml\'\n \ndiff --git a/Products/CMFPlone/exportimport/tests/testControlPanel.py b/Products/CMFPlone/exportimport/tests/testControlPanel.py\nindex e2c7d5ba76..cb016c97c0 100644\n--- a/Products/CMFPlone/exportimport/tests/testControlPanel.py\n+++ b/Products/CMFPlone/exportimport/tests/testControlPanel.py\n@@ -1,6 +1,6 @@\n from OFS.Folder import Folder\n from Products.CMFPlone.exportimport.tests.base import BodyAdapterTestCase\n-from Products.CMFPlone.interfaces import IControlPanel\n+from plone.base.interfaces import IControlPanel\n from Products.CMFPlone.PloneControlPanel import PloneControlPanel\n from zope.component import provideUtility\n from zope.component import provideAdapter\ndiff --git a/Products/CMFPlone/exportimport/tests/testPropertiesTool.py b/Products/CMFPlone/exportimport/tests/testPropertiesTool.py\nindex 511ebc786d..317b19100d 100644\n--- a/Products/CMFPlone/exportimport/tests/testPropertiesTool.py\n+++ b/Products/CMFPlone/exportimport/tests/testPropertiesTool.py\n@@ -37,7 +37,7 @@ def _populate(self, obj):\n             \'displayPublicationDateInByline\', True, \'boolean\')\n \n     def setUp(self):\n-        from Products.CMFPlone.interfaces import ISimpleItemWithProperties\n+        from plone.base.interfaces import ISimpleItemWithProperties\n         from Products.GenericSetup.interfaces import ISetupEnviron\n         from Products.GenericSetup.interfaces import IBody\n         provideAdapter(\n@@ -66,8 +66,8 @@ def _populate(self, obj):\n     def setUp(self):\n         from Products.CMFPlone.exportimport.propertiestool \\\n             import SimpleItemWithPropertiesXMLAdapter\n-        from Products.CMFPlone.interfaces import IPropertiesTool\n-        from Products.CMFPlone.interfaces import ISimpleItemWithProperties\n+        from plone.base.interfaces import IPropertiesTool\n+        from plone.base.interfaces import ISimpleItemWithProperties\n         from Products.GenericSetup.interfaces import ISetupEnviron\n         from Products.GenericSetup.interfaces import IBody\n         provideAdapter(\ndiff --git a/Products/CMFPlone/factory.py b/Products/CMFPlone/factory.py\nindex 41f47a1c81..6a23bd1164 100644\n--- a/Products/CMFPlone/factory.py\n+++ b/Products/CMFPlone/factory.py\n@@ -4,7 +4,7 @@\n from Products.CMFCore.interfaces import ISiteRoot\n from Products.CMFPlone import PloneMessageFactory as _\n from Products.CMFPlone.events import SiteManagerCreatedEvent\n-from Products.CMFPlone.interfaces import INonInstallable\n+from plone.base.interfaces import INonInstallable\n from Products.CMFPlone.Portal import PloneSite\n from Products.GenericSetup.tool import SetupTool\n from Products.statusmessages.interfaces import IStatusMessage\ndiff --git a/Products/CMFPlone/i18nl10n.py b/Products/CMFPlone/i18nl10n.py\nindex b5fdaa64f5..d9980a07e9 100644\n--- a/Products/CMFPlone/i18nl10n.py\n+++ b/Products/CMFPlone/i18nl10n.py\n@@ -1,290 +1,3 @@\n-"""\n-Collection of i18n and l10n utility methods.\n-"""\n-from Acquisition import aq_acquire\n-from DateTime import DateTime\n-from DateTime.interfaces import IDateTime\n-from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.utils import log\n-from zope.component import getUtility\n-from zope.i18n import translate\n-from zope.i18n.locales import locales\n-from zope.publisher.interfaces.browser import IBrowserRequest\n+from zope.deprecation import moved\n \n-import logging\n-import re\n-\n-datetime_formatvariables = {\'H\', \'I\', \'m\', \'d\', \'M\', \'p\', \'S\', \'Y\', \'y\', \'Z\'}\n-name_formatvariables = {\'a\', \'A\', \'b\', \'B\'}\n-all_formatvariables = datetime_formatvariables | name_formatvariables\n-_all_regexp_set = \',\'.join(all_formatvariables)\n-# regexp to split up ${X} format strings\n-_interp_regex = re.compile(\n-    r\'(?<!\\$)(\\$(?:[%(n)s]|{[%(n)s]}))\' % ({\'n\': _all_regexp_set})\n-)\n-# regexp to detect if this is a strftime format string\n-_dt_format_string_regexp = re.compile(fr\'\\%([{_all_regexp_set}])\')\n-\n-# those are from DateTime.DateTime, but we must not rely on its internal\n-# structures, so here a copy:\n-ENGLISH_NAMES = {\n-    \'_days\': (\n-        \'Sunday\', \'Monday\', \'Tuesday\', \'Wednesday\',  \'Thursday\', \'Friday\',\n-        \'Saturday\',\n-    ),\n-    \'_days_a\': (\'Sun\', \'Mon\', \'Tue\', \'Wed\', \'Thu\', \'Fri\', \'Sat\'),\n-    \'_days_p\': (\'Sun.\', \'Mon.\', \'Tue.\', \'Wed.\', \'Thu.\', \'Fri.\', \'Sat.\'),\n-    \'_months\': (\n-        \'\', \'January\', \'February\', \'March\', \'April\', \'May\', \'June\',\n-        \'July\', \'August\', \'September\', \'October\', \'November\', \'December\',\n-    ),\n-    \'_months_a\': (\n-        \'\', \'Jan\', \'Feb\', \'Mar\', \'Apr\', \'May\', \'Jun\',\n-        \'Jul\', \'Aug\', \'Sep\', \'Oct\', \'Nov\', \'Dec\',\n-    ),\n-    \'_months_p\': (\n-        \'\', \'Jan.\', \'Feb.\', \'Mar.\', \'Apr.\', \'May\', \'June\',\n-        \'July\', \'Aug.\', \'Sep.\', \'Oct.\', \'Nov.\', \'Dec.\'\n-    ),\n-}\n-\n-# The following are helper methods to change the default date and time formats\n-# for a specific locale. These locale dependent formats are used in the\n-# date/time widgets to determine the format and decide if a 24 hour or 12 hour\n-# AM/PM widget should be used. If \'a\' is part of the pattern the AM/PM widget\n-# will be used, otherwise a 24 hour clock.\n-#\n-# localeid is a tuple of the form: (language, country, variant)\n-# for example: (None, ) or (\'en\', ) or (\'en\', \'US\', None)\n-#\n-# value is in the format described by zope.i18n.interfaces.IDateTimeFormat\n-# for example u\'yyyy-MM-dd\' or u\'HH:mm:ss\'\n-#\n-# Note that this is a different format than used for the other methods in\n-# this module.\n-#\n-# locales uses a module level cache, so any changes you make with these\n-# methods will apply to the entire process and only need to be made once.\n-# You can use them in any code imported at startup, for example in a packages\n-# __init__ method.\n-#\n-# In order to use a 24 hour clock for English speakers, you would do:\n-#\n-# from Products.CMFPlone import i18nl10n\n-# i18nl10n.setDefaultTimeFormat((\'en\',), u\'HH:mm:ss\')\n-\n-\n-def setDefaultDateFormat(localeid, value):\n-    gregorian = locales.getLocale(*localeid).dates.calendars[\'gregorian\']\n-    date_format = gregorian.dateFormats[\'medium\'].formats[None]\n-    date_format.pattern = value\n-\n-\n-def setDefaultTimeFormat(localeid, value):\n-    gregorian = locales.getLocale(*localeid).dates.calendars[\'gregorian\']\n-    time_format = gregorian.timeFormats[\'medium\'].formats[None]\n-    time_format.pattern = value\n-\n-\n-def utranslate(domain, msgid, mapping=None, context=None,\n-               target_language=None, default=None):\n-    # We used to pass an object as context.\n-    if not IBrowserRequest.providedBy(context):\n-        context = aq_acquire(context, \'REQUEST\')\n-    # The signature of zope.i18n\'s translate has the msgid and domain switched\n-    return translate(msgid, domain=domain, mapping=mapping, context=context,\n-                     target_language=target_language, default=default)\n-\n-\n-def get_formatstring_from_registry(msgid):\n-    """If the Enabled record is True, return a format string."""\n-    registry = getUtility(IRegistry)\n-    name_root = \'Products.CMFPlone.i18nl10n.override_dateformat.\'\n-    if registry.get(name_root + \'Enabled\', False) is False:\n-        return None\n-    # msgid: "date_format_long", "date_format_short", or "time_format"\n-    record_name = name_root + msgid\n-    return registry.get(record_name, None)\n-\n-\n-def ulocalized_time(time, long_format=None, time_only=False, context=None,\n-                    domain=\'plonelocales\', request=None, target_language=None):\n-    """unicode aware localized time method (l10n)"""\n-\n-    if time_only:\n-        msgid = \'time_format\'\n-    elif long_format:\n-        msgid = \'date_format_long\'\n-    else:\n-        msgid = \'date_format_short\'\n-\n-    # NOTE: this requires the presence of three msgids inside the translation\n-    #       catalog date_format_long, date_format_short, and time_format\n-    #       These msgids are translated using interpolation.\n-    #       The variables used here are the same as used in the strftime\n-    #       formating.\n-    #       Supported are:\n-    #           %A, %a, %B, %b, %H, %I, %m, %d, %M, %p, %S, %Y, %y, %Z\n-    #       Each used as variable in the msgstr without the %.\n-    #       For example: "${A} ${d}. ${B} ${Y}, ${H}:${M} ${Z}"\n-    #       Each language dependend part is translated itself as well.\n-\n-    # From http://docs.python.org/lib/module-time.html\n-    #\n-    # %a    Locale\'s abbreviated weekday name.\n-    # %A        Locale\'s full weekday name.\n-    # %b        Locale\'s abbreviated month name.\n-    # %B        Locale\'s full month name.\n-    # %d        Day of the month as a decimal number [01,31].\n-    # %H        Hour (24-hour clock) as a decimal number [00,23].\n-    # %I        Hour (12-hour clock) as a decimal number [01,12].\n-    # %m        Month as a decimal number [01,12].\n-    # %M        Minute as a decimal number [00,59].\n-    # %p        Locale\'s equivalent of either AM or PM.\n-    # %S        Second as a decimal number [00,61].\n-    # %y        Year without century as a decimal number [00,99].\n-    # %Y        Year with century as a decimal number.\n-    # %Z        Time zone name (no characters if no time zone exists).\n-\n-    mapping = {}\n-    # convert to DateTime instances. Either a date string or\n-    # a DateTime instance needs to be passed.\n-    if not IDateTime.providedBy(time):\n-        try:\n-            time = DateTime(time)\n-        except:\n-            log(\'Failed to convert %s to a DateTime object\' % time,\n-                severity=logging.DEBUG)\n-            return None\n-\n-    if context is None:\n-        # when without context, we cannot do very much.\n-        return time.ISO8601()\n-\n-    if request is None:\n-        request = aq_acquire(context, \'REQUEST\')\n-\n-    # 1. if our Enabled flag in the configuration registry is set,\n-    # the format string there should override the translation machinery\n-    formatstring = get_formatstring_from_registry(msgid)\n-\n-    if formatstring is not None:\n-        if _dt_format_string_regexp.findall(formatstring):\n-            # classic strftime formatting, no i18n/l10n\n-            return time.strftime(formatstring)\n-    else:\n-        # 2. the normal case: translation machinery,\n-        # that is the ".../LC_MESSAGES/plonelocales.po" files\n-        formatstring = translate(\n-            msgid, domain, mapping, request, target_language=target_language\n-        )\n-\n-    # 3. if both failed, fall back to hardcoded ISO style\n-    if formatstring == msgid:\n-        if msgid == \'date_format_long\':\n-            formatstring = \'%Y-%m-%d %H:%M\'  # 2038-01-19 03:14\n-        elif msgid == \'date_format_short\':\n-            formatstring = \'%Y-%m-%d\'  # 2038-01-19\n-        elif msgid == \'time_format\':\n-            formatstring = \'%H:%M\'  # 03:14\n-        else:\n-            formatstring = \'[INTERNAL ERROR]\'\n-        return time.strftime(formatstring)\n-\n-    # get the format elements used in the formatstring\n-    formatelements = {el[2:-1] for el in _interp_regex.findall(formatstring)}\n-\n-    # add used elements to mapping\n-    elements = formatelements & datetime_formatvariables\n-    for key in elements:\n-        mapping[key] = time.strftime(\'%\' + key)\n-\n-    # add weekday name, abbr. weekday name, month name, abbr month name\n-    name_elements = formatelements & name_formatvariables\n-    if {\'a\', \'A\'} & name_elements:\n-        weekday = int(time.strftime(\'%w\'))  # weekday, sunday = 0\n-        if \'a\' in name_elements:\n-            mapping[\'a\'] = weekdayname_msgid_abbr(weekday)\n-        if \'A\' in name_elements:\n-            mapping[\'A\'] = weekdayname_msgid(weekday)\n-    if {\'b\', \'B\'} & name_elements:\n-        monthday = int(time.strftime(\'%m\'))  # month, january = 1\n-        if \'b\' in name_elements:\n-            mapping[\'b\'] = monthname_msgid_abbr(monthday)\n-        if \'B\' in name_elements:\n-            mapping[\'B\'] = monthname_msgid(monthday)\n-\n-    # translate translateable elements\n-    for key in name_elements:\n-        mapping[key] = translate(\n-            mapping[key],\n-            domain,\n-            context=request,\n-            default=mapping[key],\n-            target_language=target_language,\n-        )\n-\n-    # translate the time string\n-    return translate(\n-        msgid, domain, mapping, request, target_language=target_language\n-    )\n-\n-\n-def _numbertoenglishname(number, format=None, attr=\'_days\'):\n-    # returns the english name of day or month number\n-    # starting with Sunday == 0\n-    # and January = 1\n-    # format is either None, \'a\' or \'p\')\n-    #   None  means full name (January, February, ...)\n-    #   \'a\' means abbreviated (Jan, Feb, ..)\n-    #   \'p\' means abbreviated with . (dot) at end (Jan., Feb., ...)\n-\n-    number = int(number)\n-    if format is not None:\n-        attr = f\'{attr}_{format}\'\n-    return ENGLISH_NAMES[attr][number]\n-\n-\n-def monthname_english(number, format=None):\n-    # returns the english name of month with number\n-    return _numbertoenglishname(number, format=format, attr=\'_months\')\n-\n-\n-def weekdayname_english(number, format=None):\n-    # returns the english name of week with number\n-    return _numbertoenglishname(number, format=format, attr=\'_days\')\n-\n-\n-def monthname_msgid(number):\n-    # returns the msgid for monthname\n-    # use to translate to full monthname (January, February, ...)\n-    # e.g. month_jan, month_feb, ...\n-    return "month_%s" % monthname_english(number, format=\'a\').lower()\n-\n-\n-def monthname_msgid_abbr(number):\n-    # returns the msgid for the abbreviated monthname\n-    # use to translate to abbreviated format (Jan, Feb, ...)\n-    # e.g. month_jan_abbr, month_feb_abbr, ...\n-    return "month_%s_abbr" % monthname_english(number, format=\'a\').lower()\n-\n-\n-def weekdayname_msgid(number):\n-    # returns the msgid for the weekdayname\n-    # use to translate to full weekdayname (Monday, Tuesday, ...)\n-    # e.g. weekday_mon, weekday_tue, ...\n-    return "weekday_%s" % weekdayname_english(number, format=\'a\').lower()\n-\n-\n-def weekdayname_msgid_abbr(number):\n-    # returns the msgid for abbreviated weekdayname\n-    # use to translate to abbreviated format (Mon, Tue, ...)\n-    # e.g. weekday_mon_abbr, weekday_tue_abbr, ...\n-    return "weekday_%s_abbr" % weekdayname_english(number, format=\'a\').lower()\n-\n-\n-def weekdayname_msgid_short(number):\n-    # return the msgid for short weekdayname\n-    # use to translate to 2 char format (Mo, Tu, ...)\n-    # e.g. weekday_mon_short, weekday_tue_short, ...\n-    return "weekday_%s_short" % weekdayname_english(number, format=\'a\').lower()\n+moved(\'plone.base.i18nl10n\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/interfaces/__init__.py b/Products/CMFPlone/interfaces/__init__.py\nindex 318f89ae1e..f5e6813e6b 100644\n--- a/Products/CMFPlone/interfaces/__init__.py\n+++ b/Products/CMFPlone/interfaces/__init__.py\n@@ -1,69 +1,65 @@\n-# flake8: noqa\n-from Products.CMFPlone.interfaces.basetool import IPloneBaseTool\n-from Products.CMFPlone.interfaces.basetool import IPloneCatalogTool\n-from Products.CMFPlone.interfaces.basetool import IPloneTool\n-from Products.CMFPlone.interfaces.breadcrumbs import IHideFromBreadcrumbs\n-from Products.CMFPlone.interfaces.constrains import IConstrainTypes\n-from Products.CMFPlone.interfaces.constrains import ISelectableConstrainTypes\n-from Products.CMFPlone.interfaces.controlpanel import IActionSchema\n-from Products.CMFPlone.interfaces.controlpanel import IControlPanel\n-from Products.CMFPlone.interfaces.controlpanel import IDateAndTimeSchema\n-from Products.CMFPlone.interfaces.controlpanel import IEditingSchema\n-from Products.CMFPlone.interfaces.controlpanel import IFilterSchema\n-from Products.CMFPlone.interfaces.controlpanel import IImagingSchema\n-from Products.CMFPlone.interfaces.controlpanel import ILinkSchema\n-from Products.CMFPlone.interfaces.controlpanel import ILoginSchema\n-from Products.CMFPlone.interfaces.controlpanel import IMailSchema\n-from Products.CMFPlone.interfaces.controlpanel import IMaintenanceSchema\n-from Products.CMFPlone.interfaces.controlpanel import IMarkupSchema\n-from Products.CMFPlone.interfaces.controlpanel import INavigationSchema\n-from Products.CMFPlone.interfaces.controlpanel import INewActionSchema\n-from Products.CMFPlone.interfaces.controlpanel import ISearchSchema\n-from Products.CMFPlone.interfaces.controlpanel import ISecuritySchema\n-from Products.CMFPlone.interfaces.controlpanel import ISiteSchema\n-from Products.CMFPlone.interfaces.controlpanel import ISocialMediaSchema\n-from Products.CMFPlone.interfaces.controlpanel import ITinyMCEAdvancedSchema\n-from Products.CMFPlone.interfaces.controlpanel import ITinyMCELayoutSchema\n-from Products.CMFPlone.interfaces.controlpanel import ITinyMCEPluginSchema\n-from Products.CMFPlone.interfaces.controlpanel import ITinyMCEResourceTypesSchema\n-from Products.CMFPlone.interfaces.controlpanel import ITinyMCESchema\n-from Products.CMFPlone.interfaces.controlpanel import ITinyMCESpellCheckerSchema\n-from Products.CMFPlone.interfaces.controlpanel import ITypesSchema\n-from Products.CMFPlone.interfaces.controlpanel import IUserGroupsSettingsSchema\n-from Products.CMFPlone.interfaces.events import IConfigurationChangedEvent\n-from Products.CMFPlone.interfaces.events import IReorderedEvent\n-from Products.CMFPlone.interfaces.events import ISiteManagerCreatedEvent\n-from Products.CMFPlone.interfaces.installable import INonInstallable\n-from Products.CMFPlone.interfaces.interface import IInterfaceTool\n-from Products.CMFPlone.interfaces.language import ILanguage\n-from Products.CMFPlone.interfaces.login import IForcePasswordChange\n-from Products.CMFPlone.interfaces.login import IInitialLogin\n-from Products.CMFPlone.interfaces.login import ILogin\n-from Products.CMFPlone.interfaces.login import ILoginForm\n-from Products.CMFPlone.interfaces.login import ILoginFormSchema\n-from Products.CMFPlone.interfaces.login import ILoginHelpForm\n-from Products.CMFPlone.interfaces.login import ILoginHelpFormSchema\n-from Products.CMFPlone.interfaces.login import IRedirectAfterLogin\n-from Products.CMFPlone.interfaces.migration import IMigrationTool\n-from Products.CMFPlone.interfaces.password_reset import IPasswordResetToolView\n-from Products.CMFPlone.interfaces.password_reset import IPWResetTool\n-from Products.CMFPlone.interfaces.patterns import IPatternsSettings\n-from Products.CMFPlone.interfaces.properties import IPropertiesTool\n-from Products.CMFPlone.interfaces.properties import ISimpleItemWithProperties\n-from Products.CMFPlone.interfaces.resources import IBundleRegistry\n-from Products.CMFPlone.interfaces.resources import IResourceRegistry\n-from Products.CMFPlone.interfaces.siteroot import IMigratingPloneSiteRoot\n-from Products.CMFPlone.interfaces.siteroot import IPloneSiteRoot\n-from Products.CMFPlone.interfaces.siteroot import ITestCasePloneSiteRoot\n-from Products.CMFPlone.interfaces.structure import INonStructuralFolder\n-from Products.CMFPlone.interfaces.syndication import ISiteSyndicationSettings\n-from Products.CMFPlone.interfaces.translationservice import ITranslationServiceTool\n-from Products.CMFPlone.interfaces.workflow import IWorkflowChain\n-\n from zope.deferredimport import deprecated\n \n-\n deprecated(\n-    "It has been moved to plone.i18n.interfaces, import from there instead.",\n-    ILanguageSchema=\'plone.i18n.interfaces:ILanguageSchema\',\n+    "Moved to plone.base.interfaces, import from there instead (will be removed in Plone 7).",\n+    IPloneBaseTool="plone.base.interfaces.basetool:IPloneBaseTool",\n+    IPloneCatalogTool="plone.base.interfaces.basetool:IPloneCatalogTool",\n+    IPloneTool="plone.base.interfaces.basetool:IPloneTool",\n+    IHideFromBreadcrumbs="plone.base.interfaces.breadcrumbs:IHideFromBreadcrumbs",\n+    IConstrainTypes="plone.base.interfaces.constrains:IConstrainTypes",\n+    ISelectableConstrainTypes="plone.base.interfaces.constrains:ISelectableConstrainTypes",\n+    IActionSchema="plone.base.interfaces.controlpanel:IActionSchema",\n+    IControlPanel="plone.base.interfaces.controlpanel:IControlPanel",\n+    IDateAndTimeSchema="plone.base.interfaces.controlpanel:IDateAndTimeSchema",\n+    IEditingSchema="plone.base.interfaces.controlpanel:IEditingSchema",\n+    IFilterSchema="plone.base.interfaces.controlpanel:IFilterSchema",\n+    IImagingSchema="plone.base.interfaces.controlpanel:IImagingSchema",\n+    ILinkSchema="plone.base.interfaces.controlpanel:ILinkSchema",\n+    ILoginSchema="plone.base.interfaces.controlpanel:ILoginSchema",\n+    IMailSchema="plone.base.interfaces.controlpanel:IMailSchema",\n+    IMaintenanceSchema="plone.base.interfaces.controlpanel:IMaintenanceSchema",\n+    IMarkupSchema="plone.base.interfaces.controlpanel:IMarkupSchema",\n+    INavigationSchema="plone.base.interfaces.controlpanel:INavigationSchema",\n+    INewActionSchema="plone.base.interfaces.controlpanel:INewActionSchema",\n+    ISearchSchema="plone.base.interfaces.controlpanel:ISearchSchema",\n+    ISecuritySchema="plone.base.interfaces.controlpanel:ISecuritySchema",\n+    ISiteSchema="plone.base.interfaces.controlpanel:ISiteSchema",\n+    ISocialMediaSchema="plone.base.interfaces.controlpanel:ISocialMediaSchema",\n+    ITinyMCEAdvancedSchema="plone.base.interfaces.controlpanel:ITinyMCEAdvancedSchema",\n+    ITinyMCELayoutSchema="plone.base.interfaces.controlpanel:ITinyMCELayoutSchema",\n+    ITinyMCEPluginSchema="plone.base.interfaces.controlpanel:ITinyMCEPluginSchema",\n+    ITinyMCEResourceTypesSchema="plone.base.interfaces.controlpanel:ITinyMCEResourceTypesSchema",\n+    ITinyMCESchema="plone.base.interfaces.controlpanel:ITinyMCESchema",\n+    ITinyMCESpellCheckerSchema="plone.base.interfaces.controlpanel:ITinyMCESpellCheckerSchema",\n+    ITypesSchema="plone.base.interfaces.controlpanel:ITypesSchema",\n+    IUserGroupsSettingsSchema="plone.base.interfaces.controlpanel:IUserGroupsSettingsSchema",\n+    IConfigurationChangedEvent="plone.base.interfaces.events:IConfigurationChangedEvent",\n+    IReorderedEvent="plone.base.interfaces.events:IReorderedEvent",\n+    ISiteManagerCreatedEvent="plone.base.interfaces.events:ISiteManagerCreatedEvent",\n+    INonInstallable="plone.base.interfaces.installable:INonInstallable",\n+    IInterfaceTool="plone.base.interfaces.interface:IInterfaceTool",\n+    ILanguage="plone.base.interfaces.language:ILanguage",\n+    IForcePasswordChange="plone.base.interfaces.login:IForcePasswordChange",\n+    IInitialLogin="plone.base.interfaces.login:IInitialLogin",\n+    ILogin="plone.base.interfaces.login:ILogin",\n+    ILoginForm="plone.base.interfaces.login:ILoginForm",\n+    ILoginFormSchema="plone.base.interfaces.login:ILoginFormSchema",\n+    ILoginHelpForm="plone.base.interfaces.login:ILoginHelpForm",\n+    ILoginHelpFormSchema="plone.base.interfaces.login:ILoginHelpFormSchema",\n+    IRedirectAfterLogin="plone.base.interfaces.login:IRedirectAfterLogin",\n+    IMigrationTool="plone.base.interfaces.migration:IMigrationTool",\n+    IPasswordResetToolView="plone.base.interfaces.password_reset:IPasswordResetToolView",\n+    IPWResetTool="plone.base.interfaces.password_reset:IPWResetTool",\n+    IPatternsSettings="plone.base.interfaces.patterns:IPatternsSettings",\n+    IPropertiesTool="plone.base.interfaces.properties:IPropertiesTool",\n+    ISimpleItemWithProperties="plone.base.interfaces.properties:ISimpleItemWithProperties",\n+    IBundleRegistry="plone.base.interfaces.resources:IBundleRegistry",\n+    IResourceRegistry="plone.base.interfaces.resources:IResourceRegistry",\n+    IMigratingPloneSiteRoot="plone.base.interfaces.siteroot:IMigratingPloneSiteRoot",\n+    IPloneSiteRoot="plone.base.interfaces.siteroot:IPloneSiteRoot",\n+    ITestCasePloneSiteRoot="plone.base.interfaces.siteroot:ITestCasePloneSiteRoot",\n+    INonStructuralFolder="plone.base.interfaces.structure:INonStructuralFolder",\n+    ISiteSyndicationSettings="plone.base.interfaces.syndication:ISiteSyndicationSettings",\n+    ITranslationServiceTool="plone.base.interfaces.translationservice:ITranslationServiceTool",\n+    IWorkflowChain="plone.base.interfaces.workflow:IWorkflowChain",\n )\ndiff --git a/Products/CMFPlone/interfaces/atd.py b/Products/CMFPlone/interfaces/atd.py\nindex 50ea205ee3..f43019c7d8 100644\n--- a/Products/CMFPlone/interfaces/atd.py\n+++ b/Products/CMFPlone/interfaces/atd.py\n@@ -1,11 +1,3 @@\n-from zope.interface import Interface\n+from zope.deprecation import moved\n \n-\n-class IATDProxyView(Interface):\n-    """ Proxy view for the \'After the Deadline" spellchecker\n-    """\n-\n-    def checkDocument(self):\n-        """ Proxy for the AtD service\'s checkDocument function\n-            See http://www.afterthedeadline.com/api.slp for more info.\n-        """\n+moved(\'plone.base.interfaces.atd\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/basetool.py b/Products/CMFPlone/interfaces/basetool.py\nindex cff9d2cdac..2ddb20e69b 100644\n--- a/Products/CMFPlone/interfaces/basetool.py\n+++ b/Products/CMFPlone/interfaces/basetool.py\n@@ -1,16 +1,3 @@\n-from zope.interface import Interface\n+from zope.deprecation import moved\n \n-\n-class IPloneBaseTool(Interface):\n-    """Marker interface for plone tools\n-    """\n-\n-\n-class IPloneTool(Interface):\n-    """Marker interface for the plone utils tool.\n-    """\n-\n-\n-class IPloneCatalogTool(Interface):\n-    """Marker interface for Plone\'s catalog tool\n-    """\n+moved(\'plone.base.interfaces.basetool\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/breadcrumbs.py b/Products/CMFPlone/interfaces/breadcrumbs.py\nindex 005bca13ac..5be8cc296c 100644\n--- a/Products/CMFPlone/interfaces/breadcrumbs.py\n+++ b/Products/CMFPlone/interfaces/breadcrumbs.py\n@@ -1,6 +1,3 @@\n-from zope.interface import Interface\n+from zope.deprecation import moved\n \n-\n-class IHideFromBreadcrumbs(Interface):\n-    """Marker for content which should not appear in the breadcrumbs.\n-    """\n+moved(\'plone.base.interfaces.breadcrumbs\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/constrains.py b/Products/CMFPlone/interfaces/constrains.py\nindex 3686052ae3..720eed0ec3 100644\n--- a/Products/CMFPlone/interfaces/constrains.py\n+++ b/Products/CMFPlone/interfaces/constrains.py\n@@ -1,87 +1,3 @@\n-from zope.interface import Interface\n+from zope.deprecation import moved\n \n-\n-ACQUIRE = -1  # acquire locallyAllowedTypes from parent (default)\n-DISABLED = 0  # use default behavior of PortalFolder,\n-# which uses the FTI information\n-ENABLED = 1  # allow types from locallyAllowedTypes only\n-\n-\n-class IConstrainTypes(Interface):\n-    """\n-    Interface for folderish content types supporting restricting addable types\n-    on a per-instance basis.\n-    """\n-\n-    def getConstrainTypesMode():\n-        """\n-        Find out if add-restrictions are enabled. Returns 0 if they are\n-        disabled (the type\'s default FTI-set allowable types is in effect),\n-        1 if they are enabled (only a selected subset if allowed types will be\n-        available), and -1 if the allowed types should be acquired from the\n-        parent. Note that in this case, if the parent portal type is not the\n-        same as the portal type of this object, fall back on the default (same\n-        as 0)\n-        """\n-\n-    def getLocallyAllowedTypes():\n-        """\n-        Get the list of FTI ids for the types which should be allowed to be\n-        added in this container.\n-        """\n-\n-    def getImmediatelyAddableTypes():\n-        """\n-        Return a subset of the FTI ids from getLocallyAllowedTypes() which\n-        should be made most easily available.\n-        """\n-\n-    def getDefaultAddableTypes():\n-        """\n-        Return a list of FTIs which correspond to the list of FTIs available\n-        when the constraint mode = 0 (that is, the types addable without any\n-        setLocallyAllowedTypes trickery involved)\n-        """\n-\n-    def allowedContentTypes():\n-        """\n-        Return the list of currently permitted FTIs.\n-        """\n-\n-\n-class ISelectableConstrainTypes(IConstrainTypes):\n-    """\n-    Extension to the IConstrainTypes interface for content types which allow\n-    the user to set the allowable content types and immediately available\n-    types.\n-    """\n-\n-    def setConstrainTypesMode(mode):\n-        """\n-        Set how addable types is controlled in this class. If mode is 0, use\n-        the type\'s default FTI-set allowable types). If mode is 1, use only\n-        those types explicitly enabled using setLocallyAllowedTypes(). If\n-        mode is -1, acquire the allowable types from the parent. If the parent\n-        portal type is not the same as this object\'s type, fall back on the\n-        behaviour obtained if mode == 0.\n-        """\n-\n-    def setLocallyAllowedTypes(types):\n-        """\n-        Set a list of type ids which should be allowed. This must be a\n-        subset of the type\'s FTI-set allowable types. This list only comes\n-        into effect when the restrictions mode is 1 (enabled).\n-        """\n-\n-    def setImmediatelyAddableTypes(types):\n-        """\n-        Set the list of type ids which should be immediately/most easily\n-        addable. This list must be a subset of any types set in\n-        setLocallyAllowedTypes.\n-        """\n-\n-    def canSetConstrainTypes():\n-        """\n-        Return True if the current user is permitted to constrain addable\n-        types in this folderish object.\n-        """\n+moved(\'plone.base.interfaces.constrains\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/controlpanel.py b/Products/CMFPlone/interfaces/controlpanel.py\nindex b46119af83..9731ce70f2 100644\n--- a/Products/CMFPlone/interfaces/controlpanel.py\n+++ b/Products/CMFPlone/interfaces/controlpanel.py\n@@ -1,1911 +1,3 @@\n-from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone import PloneMessageFactory as _\n-from Products.CMFPlone._compat import dump_json_to_text\n-from Products.CMFPlone.interfaces.basetool import IPloneBaseTool\n-from zope import schema\n-from zope.deferredimport import deprecated\n-from zope.component.hooks import getSite\n-from zope.interface import Attribute\n-from zope.interface import implementer\n-from zope.interface import Interface\n-from zope.interface import Invalid\n-from zope.interface import invariant\n-from zope.schema.vocabulary import SimpleTerm\n-from zope.schema.vocabulary import SimpleVocabulary\n+from zope.deprecation import moved\n \n-import json\n-\n-\n-deprecated(\n-    "It has been moved to plone.i18n.interfaces, import from there instead.",\n-    ILanguageSchema="plone.i18n.interfaces:ILanguageSchema",\n-)\n-\n-\n-ROBOTS_TXT = """Sitemap: {portal_url}/sitemap.xml.gz\n-\n-# Define access-restrictions for robots/spiders\n-# http://www.robotstxt.org/wc/norobots.html\n-\n-\n-\n-# By default we allow robots to access all areas of our site\n-# already accessible to anonymous users\n-\n-User-agent: *\n-Disallow:\n-\n-\n-\n-# Add Googlebot-specific syntax extension to exclude forms\n-# that are repeated for each piece of content in the site\n-# the wildcard is only supported by Googlebot\n-# http://www.google.com/support/webmasters/bin/answer.py?answer=40367&ctx=sibling\n-\n-User-Agent: Googlebot\n-Disallow: /*?\n-Disallow: /*atct_album_view$\n-Disallow: /*folder_factories$\n-Disallow: /*folder_summary_view$\n-Disallow: /*login_form$\n-Disallow: /*mail_password_form$\n-Disallow: /@@search\n-Disallow: /*search_rss$\n-Disallow: /*sendto_form$\n-Disallow: /*summary_view$\n-Disallow: /*thumbnail_view$\n-Disallow: /*view$\n-"""\n-\n-\n-def validate_json(value):\n-    try:\n-        json.loads(value)\n-    except ValueError as exc:\n-\n-        class JSONError(schema.ValidationError):\n-            __doc__ = _(\n-                "Must be empty or a valid JSON-formatted "\n-                "configuration \xe2\x80\x93 ${message}.",\n-                mapping={"message": str(exc)},\n-            )\n-\n-        raise JSONError(value)\n-\n-    return True\n-\n-\n-class IControlPanel(IPloneBaseTool):\n-    """Interface for the ControlPanel"""\n-\n-    def registerConfiglet(\n-        id,\n-        name,\n-        action,\n-        condition="",\n-        permission="",  # NOQA\n-        category="Plone",\n-        visible=1,\n-        appId=None,\n-        imageUrl=None,\n-        description="",\n-        REQUEST=None,\n-    ):\n-        """Registration of a Configlet"""\n-\n-    def unregisterConfiglet(id):  # NOQA\n-        """unregister Configlet"""\n-\n-    def unregisterApplication(appId):  # NOQA\n-        """unregister Application with all configlets"""\n-\n-    def getGroupIds():  # NOQA\n-        """list of the group ids"""\n-\n-    def getGroups():  # NOQA\n-        """list of groups as dicts with id and title"""\n-\n-    def enumConfiglets(group=None):  # NOQA\n-        """lists the Configlets of a group, returns them as dicts by\n-        calling .getAction() on each of them"""\n-\n-\n-class IEditingSchema(Interface):\n-\n-    available_editors = schema.List(\n-        title=_("Available editors"),\n-        description=_("Available editors in the portal."),\n-        default=["TinyMCE", "None"],\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        required=True,\n-    )\n-\n-    default_editor = schema.Choice(\n-        title=_("Default editor"),\n-        description=_(\n-            "Select the default wysiwyg "\n-            "editor. Users will be able to choose their "\n-            "own or select to use the site default."\n-        ),\n-        default="TinyMCE",\n-        missing_value=set(),\n-        vocabulary="plone.app.vocabularies.AvailableEditors",\n-        required=True,\n-    )\n-\n-    ext_editor = schema.Bool(\n-        title=_("Enable External Editor feature"),\n-        description=_(\n-            "Determines if the external editor "\n-            "feature is enabled. This feature requires a "\n-            "special client-side application installed. The "\n-            "users also have to enable this in their "\n-            "preferences."\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    enable_link_integrity_checks = schema.Bool(\n-        title=_("Enable link integrity checks"),\n-        description=_(\n-            "Determines if the users should get "\n-            "warnings when they delete or move content that "\n-            "is linked from inside the site."\n-        ),\n-        default=True,\n-        required=False,\n-    )\n-\n-    lock_on_ttw_edit = schema.Bool(\n-        title=_("Enable locking for through-the-web edits"),\n-        description=_(\n-            "Disabling locking here will only "\n-            "affect users editing content through the "\n-            "Plone web UI.  Content edited via WebDAV "\n-            "clients will still be subject to locking."\n-        ),\n-        default=True,\n-        required=False,\n-    )\n-\n-    subjects_of_navigation_root = schema.Bool(\n-        title=_("Limit tags/keywords to the current navigation root"),\n-        description=_(\n-            "Limit tags aka keywords vocabulary used for Tags field and "\n-            "in searches to the terms used inside the subtree of the current "\n-            "navigation root. This can be used together with Plone\'s "\n-            "multilingual extension plone.app.multilingual to only offer "\n-            "keywords of the current selected language. Other addons may "\n-            "utilize this feature for its specific purposes."\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-\n-class ITagAttrPair(Interface):\n-    tags = schema.TextLine(title="tags")\n-    attributes = schema.TextLine(title="attributes")\n-\n-\n-@implementer(ITagAttrPair)\n-class TagAttrPair:\n-    def __init__(self, tags="", attributes=""):\n-        self.tags = tags\n-        self.attributes = attributes\n-\n-\n-class IFilterSchema(Interface):\n-    """Combined schema for the adapter lookup."""\n-\n-    # class IFilterTagsSchema(Interface):\n-\n-    disable_filtering = schema.Bool(\n-        title=_("Disable HTML filtering"),\n-        description=_(\n-            "Warning: disabling this can be dangerous. "\n-            "Only disable if you know what you are doing."\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    nasty_tags = schema.List(\n-        title=_("Nasty tags"),\n-        description=_(\n-            "These tags and their content are completely blocked "\n-            "when a page is saved or rendered. They are only deleted"\n-            " if they are not marked as valid_tags"\n-        ),\n-        default=["style", "object", "embed", "applet", "script", "meta"],\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        required=False,\n-    )\n-\n-    valid_tags = schema.List(\n-        title=_("Valid tags"),\n-        description=_("A list of valid tags which will be not filtered out."),\n-        default=[\n-            "a",\n-            "abbr",\n-            "acronym",\n-            "address",\n-            "article",\n-            "aside",\n-            "audio",\n-            "b",\n-            "bdo",\n-            "big",\n-            "blockquote",\n-            "body",\n-            "br",\n-            "canvas",\n-            "caption",\n-            "cite",\n-            "code",\n-            "col",\n-            "colgroup",\n-            "command",\n-            "datalist",\n-            "dd",\n-            "del",\n-            "details",\n-            "dfn",\n-            "dialog",\n-            "div",\n-            "dl",\n-            "dt",\n-            "em",\n-            "figure",\n-            "figcaption",\n-            "footer",\n-            "h1",\n-            "h2",\n-            "h3",\n-            "h4",\n-            "h5",\n-            "h6",\n-            "head",\n-            "header",\n-            "hgroup",\n-            "hr",\n-            "html",\n-            "i",\n-            "iframe",\n-            "img",\n-            "ins",\n-            "kbd",\n-            "keygen",\n-            "li",\n-            "map",\n-            "mark",\n-            "meter",\n-            "nav",\n-            "ol",\n-            "output",\n-            "p",\n-            "pre",\n-            "progress",\n-            "q",\n-            "rp",\n-            "rt",\n-            "ruby",\n-            "samp",\n-            "section",\n-            "small",\n-            "source",\n-            "span",\n-            "strong",\n-            "sub",\n-            "sup",\n-            "table",\n-            "tbody",\n-            "td",\n-            "tfoot",\n-            "th",\n-            "thead",\n-            "time",\n-            "title",\n-            "tr",\n-            "tt",\n-            "u",\n-            "ul",\n-            "var",\n-            "video",\n-        ],\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        required=False,\n-    )\n-\n-    custom_attributes = schema.List(\n-        title=_("Custom attributes"),\n-        description=_("These attributes are additionally allowed."),\n-        default=["style", "controls", "poster", "autoplay"],\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        required=False,\n-    )\n-\n-\n-class ITinyMCELayoutSchema(Interface):\n-    """This interface defines the layout properties."""\n-\n-    resizing = schema.Bool(\n-        title=_("Enable resizing the editor window."),\n-        description=_(\n-            "This option gives you the ability to enable/disable "\n-            "resizing the editor window. "\n-        ),\n-        default=True,\n-        required=False,\n-    )\n-\n-    autoresize = schema.Bool(\n-        title=_("Enable auto resizing of the editor window."),\n-        description=_(\n-            "This option gives you the ability to enable/disable "\n-            "auto resizing the editor window depending "\n-            "on the content."\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    # TODO: add validation to assert % and px in the value\n-    editor_width = schema.TextLine(\n-        title=_("Editor width"),\n-        description=_(\n-            "This option gives you the ability to specify the "\n-            "width of the editor (like 100% or 400px)."\n-        ),\n-        default=None,\n-        required=False,\n-    )\n-\n-    # TODO: add validation to assert % and px in the value\n-    editor_height = schema.TextLine(\n-        title=_("Editor height"),\n-        description=_(\n-            "This option gives you the ability to specify the "\n-            "height of the editor in pixels. "\n-            "If auto resize is enabled this value is used "\n-            "as minimum height."\n-        ),\n-        default=None,\n-        required=False,\n-    )\n-\n-    content_css = schema.List(\n-        title=_("Choose the CSS used in WYSIWYG Editor Area"),\n-        description=_(\n-            "This option enables you to specify CSS files "\n-            "that will be used within the the editable area of the editor "\n-            "(e.g. ++plone++mystyles/tinymce.css). "\n-            "In addition to what is listed here, "\n-            "the barceloneta bundle CSS is also added."\n-        ),\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        default=[],\n-        required=False,\n-    )\n-\n-    header_styles = schema.List(\n-        title=_("Header styles"),\n-        description=_("Name|tag"),\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        default=[\n-            "Header 1|h1",\n-            "Header 2|h2",\n-            "Header 3|h3",\n-            "Header 4|h4",\n-            "Header 5|h5",\n-            "Header 6|h6",\n-        ],\n-    )\n-\n-    inline_styles = schema.List(\n-        title=_("Inline styles"),\n-        description=_("Name|format|icon"),\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        default=[\n-            "Bold|bold|bold",\n-            "Italic|italic|italic",\n-            "Underline|underline|underline",\n-            "Strikethrough|strikethrough|strikethrough",\n-            "Superscript|superscript|superscript",\n-            "Subscript|subscript|subscript",\n-            "Code|code|code",\n-            "Text in 2 columns|textcolumns2",\n-            "Text in 3 columns|textcolumns3",\n-        ],\n-    )\n-\n-    block_styles = schema.List(\n-        title=_("Block styles"),\n-        description=_("Name|format"),\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        default=["Paragraph|p", "Blockquote|blockquote", "Div|div", "Pre|pre"],\n-    )\n-\n-    alignment_styles = schema.List(\n-        title=_("Alignment styles"),\n-        description=_("Name|format|icon"),\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        default=[\n-            "Left|alignleft|align-left",\n-            "Center|aligncenter|align-center",\n-            "Right|alignright|align-right",\n-            "Justify|alignjustify|align-justify",\n-        ],\n-    )\n-\n-    table_styles = schema.List(\n-        title=_("Table styles"),\n-        description=_("Name|class"),\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        default=["Listing|listing", "Invisible Grid|invisible-grid"],\n-    )\n-\n-    formats = schema.Text(\n-        title=_("Formats"),\n-        description=_(\n-            "Enter a JSON-formatted style format configuration. "\n-            "A format is for example the style that get applied when "\n-            "you press the bold button inside the editor. "\n-            "See https://www.tinymce.com/docs/configure/content-formatting/#formats"\n-        ),  # NOQA: E501\n-        constraint=validate_json,\n-        default=dump_json_to_text(\n-            {\n-                "discreet": {"inline": "span", "classes": "discreet"},\n-                "clearfix": {"block": "div", "classes": "clearfix"},\n-                "alignleft": {\n-                    "selector": "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table",\n-                    "classes": "text-start",\n-                },\n-                "aligncenter": {\n-                    "selector": "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table",\n-                    "classes": "text-center",\n-                },\n-                "alignright": {\n-                    "selector": "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table",\n-                    "classes": "text-end",\n-                },\n-                "alignjustify": {\n-                    "selector": "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table",\n-                    "classes": "text-justify",\n-                },\n-                "textcolumns2": {"selector": "p", "classes": "text-columns-2"},\n-                "textcolumns3": {"selector": "p", "classes": "text-columns-3"}\n-            }\n-        ),\n-        required=True,\n-    )\n-\n-\n-class ITinyMCEPluginSchema(Interface):\n-    """This interface defines the toolbar properties."""\n-\n-    plugins = schema.List(\n-        title=_("label_tinymce_plugins", default="Editor plugins"),\n-        description=_(\n-            "help_tinymce_plugins", default=("Select plugins to include with tinymce")\n-        ),\n-        value_type=schema.Choice(\n-            vocabulary=SimpleVocabulary(\n-                [\n-                    SimpleTerm("advlist", "advlist", "advlist"),\n-                    SimpleTerm("anchor", "anchor", "anchor"),\n-                    SimpleTerm("autosave", "autosave", "autosave"),\n-                    SimpleTerm("charmap", "charmap", "charmap"),\n-                    SimpleTerm("code", "code", "code"),\n-                    SimpleTerm("colorpicker", "colorpicker", "colorpicker"),\n-                    SimpleTerm("contextmenu", "contextmenu", "contextmenu"),\n-                    SimpleTerm("directionality", "directionality", "directionality"),\n-                    SimpleTerm("emoticons", "emoticons", "emoticons"),\n-                    SimpleTerm("fullpage", "fullpage", "fullpage"),\n-                    SimpleTerm("fullscreen", "fullscreen", "fullscreen"),\n-                    SimpleTerm("hr", "hr", "hr"),\n-                    SimpleTerm("insertdatetime", "insertdatetime", "insertdatetime"),\n-                    SimpleTerm("layer", "layer", "layer"),\n-                    SimpleTerm("lists", "lists", "lists"),\n-                    SimpleTerm("media", "media", "media"),\n-                    SimpleTerm("nonbreaking", "nonbreaking", "nonbreaking"),\n-                    SimpleTerm("noneditable", "noneditable", "noneditable"),\n-                    SimpleTerm("pagebreak", "pagebreak", "pagebreak"),\n-                    SimpleTerm("paste", "paste", "paste"),\n-                    SimpleTerm("preview", "preview", "preview"),\n-                    SimpleTerm("print", "print", "print"),\n-                    # XXX disable save button since it is not implemeneted\n-                    # SimpleTerm(\'save\', \'save\', u\'save\'),\n-                    SimpleTerm("searchreplace", "searchreplace", "searchreplace"),\n-                    SimpleTerm("tabfocus", "tabfocus", "tabfocus"),\n-                    SimpleTerm("table", "table", "table"),\n-                    SimpleTerm("textcolor", "textcolor", "textcolor"),\n-                    SimpleTerm("textpattern", "textpattern", "textpattern"),\n-                    SimpleTerm("template", "template", "template"),\n-                    SimpleTerm("visualblocks", "visualblocks", "visualblocks"),\n-                    SimpleTerm("visualchars", "visualchars", "visualchars"),\n-                    SimpleTerm("wordcount", "wordcount", "wordcount"),\n-                ]\n-            )\n-        ),\n-        default=[\n-            "advlist",\n-            "fullscreen",\n-            "hr",\n-            "lists",\n-            "media",\n-            "nonbreaking",\n-            "noneditable",\n-            "pagebreak",\n-            "paste",\n-            "preview",\n-            "print",\n-            "searchreplace",\n-            "tabfocus",\n-            "table",\n-            "visualchars",\n-            "wordcount",\n-            "code",\n-        ],\n-        missing_value=[],\n-        required=False,\n-    )\n-\n-    menubar = schema.List(\n-        title=_("label_tinymce_menubar", default="Menubar"),\n-        description=_(\n-            "help_tinymce_menubar",\n-            default=("Enter what items you would like in the menu bar."),\n-        ),\n-        required=True,\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        default=["edit", "table", "format", "tools", "view", "insert"],\n-    )\n-\n-    menu = schema.Text(\n-        title=_("label_tinymce_menu", "Menu"),\n-        description=_(\n-            "hint_tinymce_menu", default="JSON formatted Menu configuration."\n-        ),\n-        constraint=validate_json,\n-        default=dump_json_to_text(\n-            {\n-                "edit": {\n-                    "title": "Edit",\n-                    "items": "undo redo | cut copy paste pastetext | "\n-                    "searchreplace textpattern selectall | textcolor",\n-                },\n-                "insert": {"title": "Insert", "items": "link media | template hr"},\n-                "view": {\n-                    "title": "View",\n-                    "items": "visualaid visualchars visualblocks preview "\n-                    "fullpage fullscreen code",\n-                },\n-                "format": {\n-                    "title": "Format",\n-                    "items": "bold italic underline strikethrough "\n-                    "superscript subscript | formats | removeformat",\n-                },\n-                "table": {\n-                    "title": "Table",\n-                    "items": "inserttable tableprops deletetable | cell row column",\n-                },\n-                "tools": {\n-                    "title": "Tools",\n-                    "items": "spellchecker charmap emoticons insertdatetime " "layer",\n-                },\n-            }\n-        ),\n-    )\n-\n-    templates = schema.Text(\n-        title=_("label_tinymce_templates", default="Templates"),\n-        description=_(\n-            "help_tinymce_templates",\n-            default=(\n-                "Enter the list of templates in json format "\n-                "https://www.tinymce.com/docs/plugins/template/"\n-            ),\n-        ),\n-        required=False,\n-        constraint=validate_json,\n-        default=dump_json_to_text({}),\n-    )\n-\n-    toolbar = schema.Text(\n-        title=_("label_tinymce_toolbar", default="Toolbar"),\n-        description=_(\n-            "help_tinymce_toolbar",\n-            default=("Enter how you would like the toolbar items to list."),\n-        ),\n-        required=True,\n-        default="ltr rtl | undo redo | styleselect | bold italic | "\n-        "alignleft aligncenter alignright alignjustify | "\n-        "bullist numlist outdent indent | "\n-        "unlink plonelink ploneimage",\n-    )\n-\n-    custom_plugins = schema.List(\n-        title=_("Custom plugins"),\n-        description=_(\n-            "Enter a list of custom plugins which will be loaded "\n-            "in the editor. Format is "\n-            "pluginname|location, one per line."\n-        ),\n-        required=False,\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        default=[],\n-    )\n-\n-    custom_buttons = schema.List(\n-        title=_("Custom buttons"),\n-        description=_("Enter a list of custom buttons which will be added to toolbar"),\n-        required=False,\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        default=[],\n-    )\n-\n-\n-ITinyMCELibrariesSchema = ITinyMCEPluginSchema  # bw compat\n-\n-\n-class ITinyMCESpellCheckerSchema(Interface):\n-    """This interface defines the libraries properties."""\n-\n-    libraries_spellchecker_choice = schema.Choice(\n-        title=_("Spellchecker plugin to use"),\n-        description=_(\n-            "This option allows you to choose the spellchecker for " "TinyMCE."\n-        ),\n-        missing_value=set(),\n-        vocabulary=SimpleVocabulary(\n-            [\n-                SimpleTerm("browser", "browser", _("Default browser spellchecker")),\n-                SimpleTerm("AtD", "AtD", _("After the deadline (FLOSS)")),\n-            ]\n-        ),\n-        default="browser",\n-        required=False,\n-    )\n-\n-    libraries_atd_ignore_strings = schema.List(\n-        title=_("AtD ignore strings"),\n-        description=_(\n-            "label_atd_ignore_strings",\n-            default=\'A list of strings which the "After the Deadline" \'\n-            "spellchecker should ignore. "\n-            "Note: This option is only applicable when the "\n-            "appropriate spellchecker has been chosen above.",\n-        ),\n-        default=["Zope", "Plone", "TinyMCE"],\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        required=False,\n-    )\n-\n-    libraries_atd_show_types = schema.List(\n-        title=_("AtD error types to show"),\n-        description=_(\n-            "help_atderrortypes_to_show",\n-            default="A list of error types which the "\n-            \'"After the Deadline" spellchecker should check for. \'\n-            "By default, all the available error type will be "\n-            "listed here.",\n-        ),\n-        value_type=schema.TextLine(),\n-        default=[\n-            "Bias Language",\n-            "Cliches",\n-            "Complex Expression",\n-            "Diacritical Marks",\n-            "Double Negatives",\n-            "Hidden Verbs",\n-            "Jargon Language",\n-            "Passive voice",\n-            "Phrases to Avoid",\n-            "Redundant Expression",\n-        ],\n-        missing_value=[],\n-        required=False,\n-    )\n-\n-    libraries_atd_service_url = schema.TextLine(\n-        title=_("AtD service URL"),\n-        description=_(\n-            "help_atd_service_url",\n-            default=\'The URL of the "After the Deadline" grammar and spell \'\n-            "checking server. "\n-            "The default value is the public server, "\n-            "but ideally you should download and install your own "\n-            "and specify its address here.",\n-        ),\n-        required=True,\n-        default="service.afterthedeadline.com",\n-    )\n-\n-\n-class ITinyMCEResourceTypesSchema(Interface):\n-    """This interface defines the resource types properties."""\n-\n-    # XXX Not implemented in new tinymce version. Need to decide about this\n-    # rooted = schema.Bool(\n-    #    title=_(u"Rooted to current object"),\n-    #    description=_(u"When enabled the user will be rooted to the current "\n-    #                  "object and can\'t add links and images from other "\n-    #                  "parts of the site."),\n-    #    default=False,\n-    #    required=False)\n-\n-    contains_objects = schema.List(\n-        title=_("Contains objects"),\n-        description=_(\n-            "Enter a list of content types which can contain other "\n-            "objects. Format is one contenttype per line."\n-        ),\n-        value_type=schema.TextLine(),\n-        default=["Folder", "Large Plone Folder", "Plone Site"],\n-        missing_value=[],\n-        required=False,\n-    )\n-\n-    image_objects = schema.List(\n-        title=_("Image objects"),\n-        description=_(\n-            "Enter a list of content types which can be used as "\n-            "images. Format is one contenttype per line."\n-        ),\n-        default=["Image"],\n-        value_type=schema.TextLine(),\n-        missing_value=[],\n-        required=False,\n-    )\n-\n-    entity_encoding = schema.Choice(\n-        title=_("Entity encoding"),\n-        description=_(\n-            "This option controls how entities/characters get processed. "\n-            "Named: Characters will be converted into named entities "\n-            "based on the entities option. "\n-            "Numeric: Characters will be converted into numeric entities. "\n-            "Raw: All characters will be stored in non-entity form "\n-            "except these XML default entities: amp lt gt quot"\n-        ),\n-        # missing_value=set(),\n-        vocabulary=SimpleVocabulary(\n-            [\n-                SimpleTerm("named", "named", _("Named")),\n-                SimpleTerm("numeric", "numeric", _("Numeric")),\n-                SimpleTerm("raw", "raw", _("Raw")),\n-            ]\n-        ),\n-        default="raw",\n-        required=False,\n-    )\n-\n-\n-class ITinyMCEAdvancedSchema(Interface):\n-    """This interface defines the resource types properties."""\n-\n-    other_settings = schema.Text(\n-        title=_("label_tinymce_other_settings", "Other settings"),\n-        description=_(\n-            "hint_tinymce_other_settings",\n-            default="Other TinyMCE configuration formatted as JSON.",\n-        ),\n-        required=False,\n-        constraint=validate_json,\n-        default=dump_json_to_text({}),\n-    )\n-\n-\n-class ITinyMCESchema(\n-    ITinyMCELayoutSchema,\n-    ITinyMCEPluginSchema,\n-    ITinyMCESpellCheckerSchema,\n-    ITinyMCEResourceTypesSchema,\n-    ITinyMCEAdvancedSchema,\n-):\n-    """TinyMCE Schema"""\n-\n-\n-class IMaintenanceSchema(Interface):\n-\n-    days = schema.Int(\n-        title=_("Days of object history to keep after packing"),\n-        description=_(\n-            "You should pack your database regularly. This number "\n-            "indicates how many days of undo history you want to "\n-            "keep. It is unrelated to versioning, so even if you "\n-            "pack the database, the history of the content changes "\n-            "will be kept. Recommended value is 7 days."\n-        ),\n-        default=7,\n-        min=0,\n-        required=True,\n-    )\n-\n-\n-class INavigationSchema(Interface):\n-\n-    navigation_depth = schema.Int(\n-        title=_("Navigation depth"),\n-        description=_("Number of folder levels to show in the navigation."),\n-        default=3,\n-        required=True,\n-    )\n-\n-    generate_tabs = schema.Bool(\n-        title=_("Automatically generate tabs"),\n-        description=_(\n-            "By default, all items created at the root level will "\n-            "appear as tabs. You can turn this off if you prefer manually "\n-            "constructing this part of the navigation."\n-        ),\n-        default=True,\n-        required=False,\n-    )\n-\n-    nonfolderish_tabs = schema.Bool(\n-        title=_("Generate tabs for items other than folders."),\n-        description=_(\n-            "By default, any content item in the root of the portal will "\n-            "appear as a tab. If you turn this option off, only folders "\n-            "will be shown. This only has an effect if \'automatically "\n-            "generate tabs\' is enabled."\n-        ),\n-        default=True,\n-        required=False,\n-    )\n-\n-    sort_tabs_on = schema.Choice(\n-        title=_("Sort tabs on"),\n-        description=_("Index used to sort the tabs"),\n-        required=True,\n-        default="getObjPositionInParent",\n-        vocabulary=SimpleVocabulary(\n-            [\n-                # there is no vocabulary of sortable indexes by now, so hard code\n-                # some options here\n-                SimpleTerm(\n-                    "getObjPositionInParent",\n-                    "getObjPositionInParent",\n-                    _("Position in Parent"),\n-                ),\n-                SimpleTerm("sortable_title", "sortable_title", _("Title")),\n-                SimpleTerm("getId", "getId", _("Short Name (ID)")),\n-            ]\n-        ),\n-    )\n-    sort_tabs_reversed = schema.Bool(\n-        title=_("Reversed sort order for tabs."),\n-        description=_("Sort tabs in descending."),\n-        default=False,\n-        required=False,\n-    )\n-\n-    displayed_types = schema.Tuple(\n-        title=_("Displayed content types"),\n-        description=_(\n-            "The content types that should be shown in the navigation and " "site map."\n-        ),\n-        required=False,\n-        default=("Image", "File", "Link", "News Item", "Folder", "Document", "Event"),\n-        missing_value=(),\n-        value_type=schema.Choice(\n-            source="plone.app.vocabularies.ReallyUserFriendlyTypes"\n-        ),\n-    )\n-\n-    filter_on_workflow = schema.Bool(\n-        title=_("Filter on workflow state"),\n-        description=_(\n-            "The workflow states that should be shown in the navigation "\n-            "and the site map."\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    workflow_states_to_show = schema.Tuple(\n-        required=False,\n-        default=(),\n-        missing_value=(),\n-        value_type=schema.Choice(source="plone.app.vocabularies.WorkflowStates"),\n-    )\n-\n-    show_excluded_items = schema.Bool(\n-        title=_(\n-            "Show items normally excluded from navigation if viewing their " "children."\n-        ),\n-        description=_(\n-            "If an item has been excluded from navigation should it be "\n-            "shown in navigation when viewing content contained within it "\n-            "or within a subfolder."\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    root = schema.TextLine(\n-        title=_("Root"),\n-        description=_(\n-            "Path to be used as navigation root, relative to Plone site root."\n-            "Starts with \'/\'"\n-        ),\n-        default="/",\n-        required=True,\n-    )\n-\n-    sitemap_depth = schema.Int(\n-        title=_("Sitemap depth"),\n-        description=_("Number of folder levels to show in the site map."),\n-        default=3,\n-        required=True,\n-    )\n-\n-    parent_types_not_to_query = schema.List(\n-        title=_("Hide children of these types"),\n-        description=_("Hide content inside the following types in Navigation."),\n-        default=["TempFolder"],\n-        value_type=schema.TextLine(),\n-        missing_value=(),\n-        required=False,\n-    )\n-\n-\n-class ISearchSchema(Interface):\n-\n-    enable_livesearch = schema.Bool(\n-        title=_("Enable LiveSearch"),\n-        description=_(\n-            "Enables the LiveSearch feature, which shows live "\n-            "results if the browser supports JavaScript."\n-        ),\n-        default=True,\n-        required=False,\n-    )\n-\n-    types_not_searched = schema.Tuple(\n-        title=_("Define the types to be shown in the site and searched"),\n-        description=_(\n-            "Define the types that should be searched and be "\n-            "available in the user facing part of the site. "\n-            "Note that if new content types are installed, they "\n-            "will be enabled by default unless explicitly turned "\n-            "off here or by the relevant installer."\n-        ),\n-        required=False,\n-        default=(\n-            "Discussion Item",\n-            "Plone Site",\n-            "TempFolder",\n-        ),\n-        missing_value=(),\n-        value_type=schema.Choice(source="plone.app.vocabularies.PortalTypes"),\n-    )\n-\n-    search_results_description_length = schema.Int(\n-        title=_(\n-            "Crop the item description in search result listings "\n-            "after a number of characters."\n-        ),\n-        required=False,\n-        default=160,\n-    )\n-\n-    sort_on = schema.Choice(\n-        title=_("label_sort_on", default="Sort on"),\n-        description=_("Sort the default search on this index"),\n-        vocabulary=SimpleVocabulary(\n-            [\n-                SimpleTerm("relevance", "relevance", _("relevance")),\n-                SimpleTerm("Date", "Date", _("date (newest first)")),\n-                SimpleTerm("sortable_title", "sortable_title", _("alphabetically")),\n-            ]\n-        ),\n-        default="relevance",\n-        required=True,\n-    )\n-\n-\n-class ISecuritySchema(Interface):\n-\n-    enable_self_reg = schema.Bool(\n-        title=_("Enable self-registration"),\n-        description=_(\n-            "Allows users to register themselves on the site. If "\n-            "not selected, only site managers can add new users."\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    enable_user_pwd_choice = schema.Bool(\n-        title=_("Let users select their own passwords"),\n-        description=_(\n-            "If not selected, a URL will be generated and "\n-            "e-mailed. Users are instructed to follow the link to "\n-            "reach a page where they can change their password and "\n-            "complete the registration process; this also verifies "\n-            "that they have entered a valid email address."\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    enable_user_folders = schema.Bool(\n-        title=_("Enable User Folders"),\n-        description=_(\n-            "If selected, home folders where users can create "\n-            "content will be created when they log in."\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    allow_anon_views_about = schema.Bool(\n-        title=_("Allow anyone to view \'about\' information"),\n-        description=_(\n-            "If not selected only logged-in users will be able to "\n-            "view information about who created an item and when it "\n-            "was modified."\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    use_email_as_login = schema.Bool(\n-        title=_("Use email address as login name"),\n-        description=_(\n-            "Allows users to login with their email address instead "\n-            "of specifying a separate login name. This also updates "\n-            "the login name of existing users, which may take a "\n-            "while on large sites. The login name is saved as "\n-            "lower case, but to be userfriendly it does not matter "\n-            "which case you use to login. When duplicates are found, "\n-            "saving this form will fail. You can use the "\n-            "@@migrate-to-emaillogin page to show the duplicates."\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    use_uuid_as_userid = schema.Bool(\n-        title=_("Use UUID user ids"),\n-        description=_(\n-            "Use automatically generated UUIDs as user id for new users. "\n-            "When not turned on, the default is to use the same as the "\n-            "login name, or when using the email address as login name we "\n-            "generate a user id based on the fullname."\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    autologin_after_password_reset = schema.Bool(\n-        title=_("Login user after password reset"),\n-        description=_(\n-            "After successful password reset the user will be logged "\n-            "in automatically."\n-        ),\n-        default=True,\n-        required=False,\n-    )\n-\n-\n-class ISiteSchema(Interface):\n-\n-    site_title = schema.TextLine(\n-        title=_("Site title"),\n-        description=_(\n-            "This shows up in the title bar of " "browsers and in syndication feeds."\n-        ),\n-        default="Plone site",\n-    )\n-\n-    site_logo = schema.Bytes(\n-        title=_("Site Logo"),\n-        description=_("This shows a custom logo on your site."),\n-        required=False,\n-    )\n-\n-    site_favicon_mimetype = schema.TextLine(\n-        title=_("MIME type of the site favicon"),\n-        description=_(\n-            "MIME type of the favicon (automatically set when a new favicon is uploaded)"\n-        ),\n-        required=False,\n-        default="image/vnd.microsoft.icon",\n-    )\n-\n-    site_favicon = schema.Bytes(\n-        title=_("Site Favicon"),\n-        description=_("This shows a custom favicon on your site."),\n-        required=False,\n-    )\n-\n-    exposeDCMetaTags = schema.Bool(\n-        title=_("Expose Dublin Core metadata"),\n-        description=_("Exposes the Dublin Core properties as metatags."),\n-        default=False,\n-        required=False,\n-    )\n-\n-    enable_sitemap = schema.Bool(\n-        title=_("Expose sitemap.xml.gz"),\n-        description=_(\n-            "Exposes your content as a file "\n-            "according to the "\n-            "<a href=\'http://sitemaps.org\'>sitemaps.org</a> "\n-            "standard. You "\n-            "can submit this to compliant search engines "\n-            "like Google, Yahoo and Microsoft. It allows "\n-            "these search engines to more intelligently "\n-            "crawl your site."\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    webstats_js = schema.SourceText(\n-        title=_("JavaScript for web statistics support"),\n-        description=_(\n-            "For enabling web statistics support "\n-            "from external providers (e.g. Google "\n-            "Analytics). Paste the provided code snippet here. "\n-            "It will be rendered as "\n-            "entered near the end of the page."\n-        ),\n-        default="",\n-        required=False,\n-    )\n-\n-    display_publication_date_in_byline = schema.Bool(\n-        title=_("Display publication date"),\n-        description=_("Show in the byline the date a content item was published."),\n-        default=False,\n-        required=False,\n-    )\n-\n-    icon_visibility = schema.Choice(\n-        title=_("Icon visibility"),\n-        description=_("Show icons in listings"),\n-        default="enabled",\n-        vocabulary=SimpleVocabulary(\n-            [\n-                SimpleTerm("false", "false", _("Never")),\n-                SimpleTerm("enabled", "enabled", _("Always")),\n-                SimpleTerm(\n-                    "authenticated", "authenticated", _("For authenticated users only")\n-                ),\n-            ]\n-        ),\n-        required=True,\n-    )\n-\n-    thumb_visibility = schema.Choice(\n-        title=_("Thumb visibility"),\n-        description=_("Show thumbnail images in listings"),\n-        default="enabled",\n-        vocabulary=SimpleVocabulary(\n-            [\n-                SimpleTerm("false", "false", _("Never")),\n-                SimpleTerm("enabled", "enabled", _("Always")),\n-                SimpleTerm(\n-                    "authenticated", "authenticated", _("For authenticated users only")\n-                ),\n-            ]\n-        ),\n-        required=True,\n-    )\n-\n-    no_thumbs_portlet = schema.Bool(\n-        title=_("No Thumbs in portlets"),\n-        description=_(\n-            "Suppress thumbs in all portlets;"\n-            " this default can be overridden individually "\n-            "in selected portlets"\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    no_thumbs_lists = schema.Bool(\n-        title=_("No thumbs in list views"),\n-        description=_(\n-            "Suppress thumbs in all list views; "\n-            "this default can be overriden individually"\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    no_thumbs_summary = schema.Bool(\n-        title=_("No thumbs in summary views"),\n-        description=_(\n-            "Suppress thumbs in all summary views; "\n-            "this default can be overriden individually"\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    no_thumbs_tables = schema.Bool(\n-        title=_("No thumbs in table views"),\n-        description=_(\n-            "Suppress thumbs in all tableviews and in folder contents view; "\n-            "this default can be overriden individually"\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    thumb_scale_portlet = schema.Choice(\n-        title=_("Thumb scale for portlets"),\n-        description=_("This default can be overriden individually."),\n-        default="icon",\n-        vocabulary="plone.app.vocabularies.ImagesScales",\n-        required=True,\n-    )\n-\n-    thumb_scale_listing = schema.Choice(\n-        title=_("Thumb scale for listings"),\n-        description=_(\n-            "E.g. standard view;" " This default can be overriden individually."\n-        ),\n-        default="thumb",\n-        vocabulary="plone.app.vocabularies.ImagesScales",\n-        required=True,\n-    )\n-\n-    thumb_scale_table = schema.Choice(\n-        title=_("Thumb scale for tables"),\n-        description=_(\n-            "E.g., tabular view, folder content listing;"\n-            " This default can be overriden individually."\n-        ),\n-        default="tile",\n-        vocabulary="plone.app.vocabularies.ImagesScales",\n-        required=True,\n-    )\n-\n-    thumb_scale_summary = schema.Choice(\n-        title=_("Thumb scale for summary view"),\n-        description=_("This default can be overriden individually."),\n-        default="mini",\n-        vocabulary="plone.app.vocabularies.ImagesScales",\n-        required=True,\n-    )\n-\n-    toolbar_position = schema.Choice(\n-        title=_("Toolbar position"),\n-        description=_(\n-            "It can be on the side (vertical mode) " "or on the top (horizontal mode)"\n-        ),\n-        default="side",\n-        vocabulary=SimpleVocabulary(\n-            [SimpleTerm("side", "side", _("Side")), SimpleTerm("top", "top", _("Top"))]\n-        ),\n-        required=True,\n-    )\n-\n-    toolbar_logo = schema.TextLine(\n-        title=_("Relative URL for the toolbar logo"),\n-        description=_(\n-            "This must be a URL relative to the site root. "\n-            "By default it is /++plone++static/plone-toolbarlogo.svg"\n-        ),\n-        default="/++plone++static/plone-toolbarlogo.svg",\n-        required=False,\n-    )\n-\n-    robots_txt = schema.SourceText(\n-        title=_("robots.txt"),\n-        description=_(\n-            "help_robots_txt",\n-            default="robots.txt is read by search engines to "\n-            "determine how to index your site. "\n-            "For details see <a href=\'http://www.robotstxt.org\'>"\n-            "http://www.robotstxt.org</a>. "\n-            "Use \'{portal_url}\' for the site URL.",\n-        ),\n-        default=ROBOTS_TXT,\n-        required=False,\n-    )\n-\n-    default_page = schema.List(\n-        title=_("Default page IDs"),\n-        description=_(\n-            "Select which IDs (short names) can act as fallback "\n-            "default pages for a container."\n-        ),\n-        required=False,\n-        default=["index_html", "index.html", "index.htm", "FrontPage"],\n-        missing_value=[],\n-        value_type=schema.TextLine(),\n-    )\n-\n-    roles_allowed_to_add_keywords = schema.List(\n-        title=_("Roles that can add keywords"),\n-        description=_(\n-            "help_allow_roles_to_add_keywords",\n-            default="Only the following roles can add new keywords ",\n-        ),\n-        required=False,\n-        default=[\n-            "Manager",\n-            "Site Administrator",\n-            "Reviewer",\n-        ],\n-        missing_value=[],\n-        value_type=schema.Choice(vocabulary="plone.app.vocabularies.Roles"),\n-    )\n-\n-\n-class IDateAndTimeSchema(Interface):\n-    """Controlpanel settings for date and time related settings."""\n-\n-    portal_timezone = schema.Choice(\n-        title=_("Portal default timezone"),\n-        description=_(\n-            "help_portal_timezone",\n-            default="The timezone setting of the portal. Users can set "\n-            "their own timezone, if available timezones are "\n-            "defined.",\n-        ),\n-        required=True,\n-        default=None,\n-        vocabulary="plone.app.vocabularies.CommonTimezones",\n-    )\n-\n-    available_timezones = schema.List(\n-        title=_("Available timezones"),\n-        description=_(\n-            "help_available_timezones",\n-            default="The timezones, which should be available for the "\n-            "portal. Can be set for users and events",\n-        ),\n-        required=False,\n-        default=[],\n-        missing_value=[],\n-        value_type=schema.Choice(vocabulary="plone.app.vocabularies.Timezones"),\n-    )\n-\n-    first_weekday = schema.Choice(\n-        title=_("label_first_weekday", default="First weekday"),\n-        description=_("help_first_weekday", default="First day in the week."),\n-        required=True,\n-        default=None,\n-        vocabulary="plone.app.vocabularies.Weekdays",\n-    )\n-\n-\n-class ITypesSchema(Interface):\n-    """Controlpanel settings for the types settings."""\n-\n-    types_use_view_action_in_listings = schema.List(\n-        title=_("Types which use the view action in listing views."),\n-        description=_(\n-            "help_types_use_view_action_in_listings",\n-            default="When clicking items in listing views, these "\n-            "types will use the \'view\' action instead of using "\n-            "their default view.",\n-        ),\n-        required=False,\n-        default=["Image", "File"],\n-        missing_value=[],\n-        value_type=schema.TextLine(),\n-    )\n-\n-    redirect_links = schema.Bool(\n-        title=_("Redirect links"),\n-        description=_(\n-            "help_redirect_links",\n-            default="When clicking on a Link type, should the user be "\n-            "taken to the default view or be redirected to the "\n-            "Link\'s URL?",\n-        ),\n-        required=False,\n-        default=True,\n-    )\n-\n-    default_page_types = schema.List(\n-        title=_("Types that can be set as a default page"),\n-        description=_(\n-            "The content types that should be available for selection "\n-            "when setting a default page."\n-        ),\n-        required=False,\n-        missing_value=[],\n-        default=[\n-            "Document",\n-            "Event",\n-            "News Item",\n-            "Collection",\n-        ],\n-        value_type=schema.TextLine(),\n-    )\n-\n-\n-class IMailSchema(Interface):\n-\n-    smtp_host = schema.TextLine(\n-        title=_("label_smtp_server", default="SMTP server"),\n-        description=_(\n-            "help_smtp_server",\n-            default="The address of your local "\n-            "SMTP (outgoing e-mail) server. Usually "\n-            "\'localhost\', unless you use an "\n-            "external server to send e-mail.",\n-        ),\n-        default="localhost",\n-        required=True,\n-    )\n-\n-    smtp_port = schema.Int(\n-        title=_("label_smtp_port", default="SMTP port"),\n-        description=_(\n-            "help_smtp_port",\n-            default="The port of your local SMTP "\n-            "(outgoing e-mail) server. Usually \'25\'.",\n-        ),\n-        default=25,\n-        required=True,\n-    )\n-\n-    smtp_userid = schema.TextLine(\n-        title=_("label_smtp_userid", default="ESMTP username"),\n-        description=_(\n-            "help_smtp_userid",\n-            default="Username for authentication "\n-            "to your e-mail server. Not required "\n-            "unless you are using ESMTP.",\n-        ),\n-        default=None,\n-        required=False,\n-    )\n-\n-    smtp_pass = schema.Password(\n-        title=_("label_smtp_pass", default="ESMTP password"),\n-        description=_(\n-            "help_smtp_pass", default="The password for the ESMTP " "user account."\n-        ),\n-        default=None,\n-        required=False,\n-    )\n-\n-    email_from_name = schema.TextLine(\n-        title=_("Site \'From\' name"),\n-        description=_(\n-            "Plone generates e-mail using " "this name as the e-mail " "sender."\n-        ),\n-        default=None,\n-        required=True,\n-    )\n-\n-    email_from_address = schema.ASCIILine(\n-        title=_("Site \'From\' address"),\n-        description=_(\n-            "Plone generates e-mail using "\n-            "this address as the e-mail "\n-            "return address. It is also "\n-            "used as the destination "\n-            "address for the site-wide "\n-            "contact form and the \'Send test "\n-            "e-mail\' feature."\n-        ),\n-        default=None,\n-        required=True,\n-    )\n-\n-    email_charset = schema.ASCIILine(\n-        title=_("E-mail characterset"),\n-        description=_("Characterset to use when sending e-mails."),\n-        default="utf-8",\n-        required=True,\n-    )\n-\n-\n-class IMarkupSchema(Interface):\n-\n-    default_type = schema.Choice(\n-        title=_("Default format"),\n-        description=_(\n-            "Select the default format of textfields for newly "\n-            "created content objects."\n-        ),\n-        default="text/html",\n-        vocabulary="plone.app.vocabularies.AllowableContentTypes",\n-        required=True,\n-    )\n-\n-    allowed_types = schema.Tuple(\n-        title=_("Alternative formats"),\n-        description=_(\n-            "Select which formats are available for users as "\n-            "alternative to the default format. Note that if new "\n-            "formats are installed, they will be enabled for text "\n-            "fields by default unless explicitly turned off here "\n-            "or by the relevant installer."\n-        ),\n-        required=True,\n-        default=("text/html", "text/x-web-textile"),\n-        missing_value=(),\n-        value_type=schema.Choice(\n-            vocabulary="plone.app.vocabularies.AllowableContentTypes"\n-        ),\n-    )\n-\n-    markdown_extensions = schema.List(\n-        default=[\n-            "markdown.extensions.fenced_code",\n-            "markdown.extensions.nl2br",\n-        ],\n-        description=_(\n-            "Look for available extensions at "\n-            "https://python-markdown.github.io/extensions/ or write your own."\n-        ),\n-        missing_value=(),\n-        required=False,\n-        title=_("Enabled markdown extensions"),\n-        value_type=schema.TextLine(),\n-    )\n-\n-\n-class IUserGroupsSettingsSchema(Interface):\n-\n-    many_groups = schema.Bool(\n-        title=_("Many groups?"),\n-        description=_(\n-            "Determines if your Plone is optimized "\n-            "for small or large sites. In environments with a "\n-            "lot of groups it can be very slow or impossible "\n-            "to build a list all groups. This option tunes the "\n-            "user interface and behaviour of Plone for this "\n-            "case by allowing you to search for groups instead "\n-            "of listing all of them."\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    many_users = schema.Bool(\n-        title=_("Many users?"),\n-        description=_(\n-            "Determines if your Plone is optimized "\n-            "for small or large sites. In environments with a "\n-            "lot of users it can be very slow or impossible to "\n-            "build a list all users. This option tunes the user "\n-            "interface and behaviour of Plone for this case by "\n-            "allowing you to search for users instead of "\n-            "listing all of them."\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-\n-def validate_twitter_username(value):\n-    if value and value.startswith("@"):\n-        raise Invalid(\'Twitter username should not include the "@" prefix character.\')\n-    return True\n-\n-\n-class ISocialMediaSchema(Interface):\n-\n-    share_social_data = schema.Bool(\n-        title=_("Share social data"),\n-        description=_(\n-            "Include meta tags on pages to give hints to "\n-            "social media on how to better render your pages "\n-            "when shared"\n-        ),\n-        default=True,\n-        required=False,\n-    )\n-\n-    twitter_username = schema.ASCIILine(\n-        title=_("Twitter username"),\n-        description=_(\n-            "To identify things like Twitter Cards. "\n-            \'Do not include the "@" prefix character.\'\n-        ),\n-        required=False,\n-        default="",\n-        constraint=validate_twitter_username,\n-    )\n-\n-    facebook_app_id = schema.ASCIILine(\n-        title=_("Facebook App ID"),\n-        description=_("To be used with some integrations like Open Graph data"),\n-        required=False,\n-        default="",\n-    )\n-\n-    facebook_username = schema.ASCIILine(\n-        title=_("Facebook username"),\n-        description=_("For linking Open Graph data to a Facebook account"),\n-        required=False,\n-        default="",\n-    )\n-\n-\n-class IImagingSchema(Interface):\n-    allowed_sizes = schema.List(\n-        title=_("Allowed image sizes"),\n-        description=_(\n-            "Specify all allowed maximum image dimensions, one per line. The "\n-            "required format is &lt;name&gt; &lt;width&gt;:&lt;height&gt;."\n-        ),\n-        value_type=schema.TextLine(),\n-        default=[\n-            "huge 1600:65536",\n-            "great 1200:65536",\n-            "larger 1000:65536",\n-            "large 800:65536",\n-            "teaser 600:65536",\n-            "preview 400:65536",\n-            "mini 200:65536",\n-            "thumb 128:128",\n-            "tile 64:64",\n-            "icon 32:32",\n-            "listing 16:16"\n-        ],\n-        missing_value=[],\n-        required=False,\n-    )\n-\n-    quality = schema.Int(\n-        title=_("Scaled image quality"),\n-        description=_(\n-            "A value for the quality of scaled images, from 1 "\n-            "(lowest) to 95 (highest). A value of 0 will mean "\n-            "plone.scaling\'s default will be used, which is "\n-            "currently 88."\n-        ),\n-        min=0,\n-        max=95,\n-        default=88,\n-    )\n-\n-    highpixeldensity_scales = schema.Choice(\n-        title=_("High pixel density mode"),\n-        description=_(""),\n-        default="disabled",\n-        vocabulary=SimpleVocabulary(\n-            [\n-                SimpleTerm("disabled", "disabled", "Disabled"),\n-                SimpleTerm("2x", "2x", "Enabled (2x)"),\n-                SimpleTerm("3x", "3x", "Enabled (2x, 3x)"),\n-            ]\n-        ),\n-    )\n-\n-    quality_2x = schema.Int(\n-        title=_("Image quality at 2x"),\n-        description=_(\n-            "A value for the quality of 2x high pixel density images, from 1 "\n-            "(lowest) to 95 (highest). A value of 0 will mean "\n-            "plone.scaling\'s default will be used, which is "\n-            "currently 62."\n-        ),\n-        min=0,\n-        max=95,\n-        default=62,\n-    )\n-\n-    quality_3x = schema.Int(\n-        title=_("Image quality at 3x"),\n-        description=_(\n-            "A value for the quality of 3x high pixel density images, from 1 "\n-            "(lowest) to 95 (highest). A value of 0 will mean "\n-            "plone.scaling\'s default will be used, which is "\n-            "currently 51."\n-        ),\n-        min=0,\n-        max=95,\n-        default=51,\n-    )\n-\n-    image_captioning = schema.Bool(\n-        title=_("image_captioning_title", "Enable image captioning"),\n-        description=_(\n-            "image_captioning_description",\n-            "Enable automatic image captioning for images set in the richtext editor based on the description of images.",\n-        ),\n-        default=True,\n-        required=False,\n-    )\n-\n-\n-class ILoginSchema(Interface):\n-\n-    auth_cookie_length = schema.Int(\n-        title=_("Auth cookie length"), default=0, required=False\n-    )\n-\n-    verify_login_name = schema.Bool(\n-        title=_("Verify login name"), default=True, required=False\n-    )\n-\n-    allow_external_login_sites = schema.Tuple(\n-        title=_("Allow external login sites"),\n-        default=(),\n-        value_type=schema.ASCIILine(),\n-        required=False,\n-    )\n-\n-    external_login_url = schema.ASCIILine(\n-        title=_("External login url"), default=None, required=False\n-    )\n-\n-    external_logout_url = schema.ASCIILine(\n-        title=_("External logout url"), default=None, required=False\n-    )\n-\n-    external_login_iframe = schema.Bool(\n-        title=_("External login iframe"), default=False, required=False\n-    )\n-\n-\n-class ILinkSchema(Interface):\n-\n-    external_links_open_new_window = schema.Bool(\n-        title=_("Open external links in new a window"),\n-        description=_(""),\n-        default=False,\n-        required=False,\n-    )\n-\n-    mark_special_links = schema.Bool(\n-        title=_("Mark special links"),\n-        description=_("Marks external or special protocol links with class."),\n-        default=False,\n-        required=False,\n-    )\n-\n-\n-def _check_tales_expression(value):\n-    from Products.PageTemplates.Expressions import getEngine\n-\n-    try:\n-        getEngine().compile(value)\n-    except Exception:\n-        raise Invalid(\n-            _(\n-                \'The expression "${value}" is invalid\',\n-                mapping={"value": value},\n-            )\n-        )\n-    return True\n-\n-\n-class IActionSchema(Interface):\n-\n-    category = schema.Choice(\n-        title=_("Category"),\n-        vocabulary="plone.app.vocabularies.PortalActionCategories",\n-        required=True,\n-    )\n-\n-    title = schema.TextLine(title=_("Title"), required=True)\n-\n-    description = schema.Text(title=_("Description"), required=False)\n-\n-    i18n_domain = schema.TextLine(\n-        title=_("i18n_domain_heading", default="I18n domain"),\n-        default="plone",\n-        required=False,\n-    )\n-\n-    url_expr = schema.ASCIILine(\n-        title=_("action_url_heading", default="Action URL"),\n-        description=_(\n-            "action_url_description",\n-            default="An expression producing the called URL. "\n-            "Example: string:${globals_view/navigationRootUrl}/page",\n-        ),\n-        required=True,\n-        constraint=_check_tales_expression,\n-    )\n-\n-    available_expr = schema.ASCIILine(\n-        title=_("action_condition_heading", default="Condition"),\n-        description=_("action_condition_description", default="A boolean expression"),\n-        required=False,\n-    )\n-\n-    permissions = schema.List(\n-        title=_("action_permissions_heading", default="Permissions"),\n-        required=True,\n-        default=["View"],\n-        missing_value=[],\n-        value_type=schema.Choice(vocabulary="plone.app.vocabularies.Permissions"),\n-    )\n-\n-    visible = schema.Bool(\n-        title=_("action_visibility_heading", default="Visible?"),\n-        default=True,\n-        required=False,\n-    )\n-\n-    position = schema.Int(\n-        title=_("action_position_heading", default="Position"),\n-        default=1,\n-        min=1,\n-        required=True,\n-    )\n-\n-\n-class INewActionSchema(Interface):\n-\n-    category = schema.Choice(\n-        title=_("Category"),\n-        vocabulary="plone.app.vocabularies.PortalActionCategories",\n-        required=True,\n-    )\n-\n-    id = schema.ASCIILine(title=_("Id"), required=True)\n-\n-    @invariant\n-    def validate_category_id(data):\n-        categoryid = data.category\n-        pa = getToolByName(getSite(), "portal_actions")\n-        category = pa.get(categoryid, {})\n-        actionid = data.id\n-        if actionid in category:\n-            raise Invalid(\n-                _(\n-                    \'An action with the id "${actionid}" already exists\',\n-                    mapping={"actionid": actionid},\n-                )\n-            )\n-        try:\n-            category._checkId(actionid)\n-        except Exception:\n-            raise Invalid(\n-                _(\n-                    \'The id "${actionid}" is invalid\',\n-                    mapping={"actionid": actionid},\n-                )\n-            )\n-\n-\n-class IPloneControlPanelView(Interface):\n-    """A marker interface for views showing a controlpanel."""\n-\n-\n-class IPloneControlPanelForm(IPloneControlPanelView):\n-    """Forms using plone.app.controlpanel"""\n-\n-    def _on_save():\n-        """Callback mehod which can be implemented by control panels to\n-        react when the form is successfully saved. This avoids the need\n-        to re-define actions only to do some additional notification or\n-        configuration which cannot be handled by the normal schema adapter.\n-\n-        By default, does nothing.\n-        """\n-\n-\n-class IConfigurationChangedEvent(Interface):\n-    """An event which is fired after a configuration setting has been changed."""\n-\n-    context = Attribute("The configuration context which was changed.")\n-\n-    data = Attribute("The configuration data which was changed.")\n+moved(\'plone.base.interfaces.controlpanel\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/interfaces/defaultpage.py b/Products/CMFPlone/interfaces/defaultpage.py\nindex 8b869b1cdd..4b9a4c610b 100644\n--- a/Products/CMFPlone/interfaces/defaultpage.py\n+++ b/Products/CMFPlone/interfaces/defaultpage.py\n@@ -1,16 +1,3 @@\n-from zope.interface import Interface\n+from zope.deprecation import moved\n \n-\n-class IDefaultPage(Interface):\n-    """Interface for a view that can determine if its context is the\n-    default page or not.\n-    """\n-\n-    def isDefaultPage(obj):\n-        """Finds out if the given obj is the default page for the\n-        adapted object.\n-        """\n-\n-    def getDefaultPage():\n-        """Returns the id of the default page for the adapted object.\n-        """\n+moved(\'plone.base.interfaces.defaultpage\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/events.py b/Products/CMFPlone/interfaces/events.py\nindex f83cc0430d..57f9fb71b6 100644\n--- a/Products/CMFPlone/interfaces/events.py\n+++ b/Products/CMFPlone/interfaces/events.py\n@@ -1,23 +1,3 @@\n-from zope.interface import Attribute\n-from zope.interface import Interface\n-from zope.interface.interfaces import IObjectEvent\n+from zope.deprecation import moved\n \n-\n-class ISiteManagerCreatedEvent(IObjectEvent):\n-    """An event that\'s fired once the Plone portal is enabled as a site.\n-    """\n-\n-\n-class IReorderedEvent(IObjectEvent):\n-    """An event that\'s fired once the Plone Tool has been notified of\n-       a reordering\n-    """\n-\n-\n-class IConfigurationChangedEvent(Interface):\n-    """An event which is fired after a configuration setting has been changed.\n-    """\n-\n-    context = Attribute("The configuration context which was changed.")\n-\n-    data = Attribute("The configuration data which was changed.")\n+moved(\'plone.base.interfaces.events\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/installable.py b/Products/CMFPlone/interfaces/installable.py\nindex f82e9ef240..79006705e0 100644\n--- a/Products/CMFPlone/interfaces/installable.py\n+++ b/Products/CMFPlone/interfaces/installable.py\n@@ -1,17 +1,3 @@\n-from zope.interface import Interface\n+from zope.deprecation import moved\n \n-\n-class INonInstallable(Interface):\n-\n-    def getNonInstallableProfiles():\n-        """Returns a list of profiles that should not be available for\n-           installation at portal creation time.\n-\n-           The usual use-case is to prevent extension profiles from showing up,\n-           that will be installed as part of the site creation anyways.\n-        """\n-\n-    def getNonInstallableProducts():\n-        """Returns a list of products that should not be available for\n-           installation.\n-        """\n+moved(\'plone.base.interfaces.installable\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/interface.py b/Products/CMFPlone/interfaces/interface.py\nindex 589430c96b..1d12e69c6c 100644\n--- a/Products/CMFPlone/interfaces/interface.py\n+++ b/Products/CMFPlone/interfaces/interface.py\n@@ -1,20 +1,3 @@\n-from Products.CMFPlone.interfaces.basetool import IPloneBaseTool\n-from zope.interface import Attribute\n+from zope.deprecation import moved\n \n-\n-class IInterfaceTool(IPloneBaseTool):\n-    """ This tool exposes the interface package for TTW applications,\n-    by accepting a dotted name of an interface and exporting the\n-    IInterface API """\n-\n-    id = Attribute(\'id\', \'Must be set to "portal_interface"\')\n-\n-    def objectImplements(obj, dotted_name):\n-        """ Asserts if an object implements a given interface """\n-\n-    def classImplements(obj, dotted_name):\n-        """ Asserts if an object\'s class implements a given interface """\n-\n-    def namesAndDescriptions(dotted_name, all=0):\n-        """ Returns a list of pairs (name, description) for a given\n-        interface"""\n+moved(\'plone.base.interfaces.interface\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/language.py b/Products/CMFPlone/interfaces/language.py\nindex e3838c37a9..e8f180cf11 100644\n--- a/Products/CMFPlone/interfaces/language.py\n+++ b/Products/CMFPlone/interfaces/language.py\n@@ -1,11 +1,3 @@\n-from zope.interface import Interface\n+from zope.deprecation import moved\n \n-\n-# Language-support\n-class ILanguage(Interface):\n-\n-    def get_language(self):\n-        """ return the contents language """\n-\n-    def set_language(self):\n-        """ return the contents language """\n+moved(\'plone.base.interfaces.language\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/login.py b/Products/CMFPlone/interfaces/login.py\nindex d86b1521c4..19e30f8a8f 100644\n--- a/Products/CMFPlone/interfaces/login.py\n+++ b/Products/CMFPlone/interfaces/login.py\n@@ -1,81 +1,3 @@\n-from Products.CMFPlone import PloneMessageFactory as _\n-from plone.schema.email import Email\n-from plone.z3cform.interfaces import IWrappedForm\n-from zope import schema\n-from zope.interface import Interface\n+from zope.deprecation import moved\n \n-\n-class IRedirectAfterLogin(Interface):\n-    """ Redirect after login adapters should provide this interface """\n-\n-\n-class IForcePasswordChange(Interface):\n-    """ Hook point to customize forcing a password change """\n-\n-\n-class IInitialLogin(Interface):\n-    """ Hook point to customize what happens the first time a user logs into\n-        the site """\n-\n-\n-class ILogin(Interface):\n-    """ Login form schema """\n-\n-    login = schema.TextLine(\n-        title=_(\'label_log_in\', default=\'Log in\'),\n-    )\n-\n-    password = schema.Password(\n-        title=_(\'label_password\', default=\'Password\'),\n-    )\n-\n-\n-class ILoginForm(IWrappedForm):\n-    """ Login form marker interface """\n-\n-\n-class ILoginFormSchema(Interface):\n-    """ Login form schema """\n-\n-    ac_name = schema.TextLine(\n-        title=_(\'label_login_name\', default=\'Login Name\'),\n-        required=True,\n-    )\n-\n-    ac_password = schema.Password(\n-        title=_(\'label_password\', default=\'Password\'),\n-        required=True,\n-    )\n-\n-    came_from = schema.TextLine(\n-        title=\'Came From\',  # not translated, hidden field\n-        required=False,\n-    )\n-\n-\n-class ILoginHelpForm(IWrappedForm):\n-    """ Login Help form marker interface """\n-\n-\n-class ILoginHelpFormSchema(Interface):\n-    """ Login Help form schema """\n-\n-    reset_password = schema.TextLine(\n-        title=_(\'label_pwreset_username\', default=\'Username\'),\n-        description=_(\n-            \'help_pwreset_username\',\n-            default=\'Enter your username \'\n-                    \'or email and we\xe2\x80\x99ll send you a password reset link.\',\n-        ),\n-        required=True,\n-    )\n-\n-    recover_username = Email(\n-        title=_(\'label_pwreset_email\', default=\'Email\'),\n-        description=_(\n-            \'help_pwreset_email\',\n-            default=\'Enter your email and \'\n-                    \'we\xe2\x80\x99ll send you your username.\',\n-        ),\n-        required=True,\n-    )\n+moved(\'plone.base.interfaces.login\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/migration.py b/Products/CMFPlone/interfaces/migration.py\nindex 2ae6a851f6..5672aac457 100644\n--- a/Products/CMFPlone/interfaces/migration.py\n+++ b/Products/CMFPlone/interfaces/migration.py\n@@ -1,32 +1,3 @@\n-from zope.interface import Interface\n+from zope.deprecation import moved\n \n-\n-class IMigrationTool(Interface):\n-    """Handles migrations between Plone releases."""\n-\n-    def getInstanceVersion():\n-        """The version this instance of Plone is on."""\n-\n-    def setInstanceVersion(version):\n-        """The version this instance of Plone is on."""\n-\n-    def getFileSystemVersion():\n-        """The version the filesystem code of Plone is on."""\n-\n-    def needUpgrading():\n-        """Need upgrading?"""\n-\n-    def coreVersions():\n-        """Useful core version information."""\n-\n-    def coreVersionsList():\n-        """Useful core version information."""\n-\n-    def needUpdateRole():\n-        """Do roles need to be updated?"""\n-\n-    def needRecatalog():\n-        """Does this thing now need recataloging?"""\n-\n-    def upgrade(REQUEST=None, dry_run=None, swallow_errors=1):\n-        """Perform the upgrade."""\n+moved(\'plone.base.interfaces.migration\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/password_reset.py b/Products/CMFPlone/interfaces/password_reset.py\nindex fde6f96bb4..97fd367189 100644\n--- a/Products/CMFPlone/interfaces/password_reset.py\n+++ b/Products/CMFPlone/interfaces/password_reset.py\n@@ -1,41 +1,3 @@\n-from zope.interface import Interface, Attribute\n+from zope.deprecation import moved\n \n-\n-class IPasswordResetToolView(Interface):\n-    """ BrowserView with utility methods """\n-\n-    def encode_mail_header(text):\n-        """ Encodes text into correctly encoded email header """\n-\n-    def encoded_mail_sender():\n-        """ returns encoded version of Portal name <portal_email> """\n-\n-    def registered_notify_subject():\n-        """ returns encoded version of registered notify template subject line """\n-\n-    def mail_password_subject():\n-        """ returns encoded version of mail password template subject line """\n-\n-\n-class IPWResetTool(Interface):\n-    """Defines an interface for a tool that provides a facility to\n-    reset forgotten passwords.\n-\n-    This interface is rather sparse, but sufficient to describe the\n-    task. (In this manner we void being dependant on a specific\n-    process) The details of the process are in the implementation,\n-    where they belong."""\n-\n-    id = Attribute(\'id\', \'Must be set to "portal_password_reset"\')\n-\n-    def requestReset(userid):\n-        """Ask the system to start the password reset procedure for\n-        user \'userid\'.\n-\n-        Returns the random string that must be used to reset the\n-        password."""\n-\n-    def resetPassword(userid, randomstring, password):\n-        """Set the password (in \'password\') for the user who maps to\n-        the string in \'randomstring\'. The \'userid\' parameter is provided\n-        in case extra authentication is needed."""\n+moved(\'plone.base.interfaces.password_reset\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/patterns.py b/Products/CMFPlone/interfaces/patterns.py\nindex 9a7a0add78..91983316aa 100644\n--- a/Products/CMFPlone/interfaces/patterns.py\n+++ b/Products/CMFPlone/interfaces/patterns.py\n@@ -1,12 +1,3 @@\n-from zope.interface import Interface\n+from zope.deprecation import moved\n \n-\n-class IPatternsSettings(Interface):\n-    """ Interface to register global pattern settings adapters\n-    """\n-\n-    def __call__(self):\n-        """\n-            Return a dict of pattern options\n-        """\n-        pass\n+moved(\'plone.base.interfaces.patterns\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/properties.py b/Products/CMFPlone/interfaces/properties.py\nindex 560c80b399..4c4b228fff 100644\n--- a/Products/CMFPlone/interfaces/properties.py\n+++ b/Products/CMFPlone/interfaces/properties.py\n@@ -1,26 +1,3 @@\n-from zope.interface import Interface\n-from zope.interface import Attribute\n+from zope.deprecation import moved\n \n-\n-class IPropertiesTool(Interface):\n-\n-    """ Manage properties of the site as a whole.\n-    """\n-\n-    id = Attribute(\'id\', \'Must be set to "portal_properties"\')\n-\n-    def editProperties(props):\n-        """ Change portal settings.\n-\n-        Permission --  Manage portal\n-        """\n-\n-    def smtp_server():\n-        """ Get local SMTP server.\n-\n-        Returns -- String\n-        """\n-\n-\n-class ISimpleItemWithProperties(Interface):\n-    pass\n+moved(\'plone.base.interfaces.properties\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/resources.py b/Products/CMFPlone/interfaces/resources.py\nindex e26304814d..5e1cab52d3 100644\n--- a/Products/CMFPlone/interfaces/resources.py\n+++ b/Products/CMFPlone/interfaces/resources.py\n@@ -1,153 +1,3 @@\n-from Products.CMFPlone import PloneMessageFactory as _\n-from zope import schema\n-from zope.schema.vocabulary import SimpleTerm\n-from zope.schema.vocabulary import SimpleVocabulary\n+from zope.deprecation import moved\n \n-import zope.component\n-import zope.interface\n-\n-\n-OVERRIDE_RESOURCE_DIRECTORY_NAME = "resource_overrides"\n-\n-\n-class IResourceRegistry(zope.interface.Interface):\n-\n-    # DEPRECATED\n-\n-    url = schema.ASCIILine(title=_("Resources base URL"), required=False)\n-\n-    js = schema.ASCIILine(title=_("Main js file"), required=False)\n-\n-    css = schema.List(\n-        title=_("CSS/LESS files"),\n-        value_type=schema.ASCIILine(title=_("URL")),\n-        default=[],\n-        required=False,\n-    )\n-\n-    init = schema.ASCIILine(title=_("Init instruction for shim"), required=False)\n-\n-    deps = schema.ASCIILine(\n-        title=_("Dependencies for shim"),\n-        description=_("Comma separated values of resource for shim"),\n-        required=False,\n-    )\n-\n-    export = schema.ASCIILine(title=_("Export vars for shim"), required=False)\n-\n-    conf = schema.Text(\n-        title=_("Configuration in JSON for the widget"),\n-        description=_("Should be accessible on @@getWCconfig?id=name"),\n-        required=False,\n-    )\n-\n-\n-class IBundleRegistry(zope.interface.Interface):\n-\n-    jscompilation = schema.ASCIILine(\n-        title=_("URL of the last js compilation"), required=False\n-    )\n-\n-    csscompilation = schema.ASCIILine(\n-        title=_("URL of the last css compilation"), required=False\n-    )\n-\n-    expression = schema.ASCIILine(\n-        title=_("Expression to render"),\n-        description=_(\n-            "In case its a bundle we can have a condition to render it (it "\n-            "does not apply if the bundle is merged)."\n-        ),\n-        required=False,\n-    )\n-\n-    enabled = schema.Bool(title=_("It\'s enabled?"), default=True, required=False)\n-\n-    depends = schema.ASCIILine(\n-        title=_("Depends on another bundle"),\n-        description=_(\n-            "In case you want to be the last: *, in case its the first should be empty"\n-        ),\n-        required=False,\n-    )\n-\n-    load_async = schema.Bool(\n-        title=_("Load asynchronously"),\n-        description=_(\n-            "Load the JavaScript files asynchronously by adding an ``async`` attribute to the script tag."\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    load_defer = schema.Bool(\n-        title=_("Load deferred"),\n-        description=_(\n-            "Load the JavaScript files deferred after the document has been parsed but before ``DOMContentLoaded`` by adding a ``defer`` attribute to the script tag."\n-        ),\n-        default=False,\n-        required=False,\n-    )\n-\n-    # DEPRECATED IN Plone 6, for now keep for BBB\n-    compile = schema.Bool(\n-        title=_("(DEPRECATED) Does your bundle contains any RequireJS or LESS file?"),\n-        description=_(\n-            "If its true and you modify this bundle you need to build it before production"\n-        ),\n-        default=True,\n-        required=False,\n-    )\n-\n-    resources = schema.List(\n-        title=_("(DEPRECATED) Loaded resources"),\n-        description=_(\n-            "The resources that are going to be loaded on this bundle in order"\n-        ),\n-        value_type=schema.ASCIILine(title=_("Resource name")),\n-        required=False,\n-    )\n-\n-    last_compilation = schema.Datetime(\n-        title=_("(DEPRECATED) Last compiled date"),\n-        description=_("Date time of the last compilation of this bundle"),\n-        required=False,\n-    )\n-\n-    develop_javascript = schema.Bool(\n-        title=_("(DEPRECATED) Develop JavaScript"), default=False\n-    )\n-\n-    develop_css = schema.Bool(title=_("(DEPRECATED) Develop CSS"), default=False)\n-\n-    stub_js_modules = schema.List(\n-        title=_("(DEPRECATED) Stub JavaScript modules"),\n-        description=_(\n-            "Define list of modules that will be defined empty "\n-            "on RequireJS build steps to prevent loading modules multiple times."\n-        ),\n-        value_type=schema.ASCIILine(title=_("Resource name")),\n-        required=False,\n-        missing_value=[],\n-        default=[],\n-    )\n-\n-    merge_with = schema.Choice(\n-        title=_("(DEPRECATED) Merge with"),\n-        description=_(\n-            "In production mode, bundles are merged together to reduce the "\n-            "quantity of JS and CSS resources loaded by the browser. Choose "\n-            "\'default\' if this bundle must be available for all the visitors, "\n-            "choose \'logged-in\' if it must be available for logged-in users "\n-            "only, or leave it empty if it must not be merged."\n-        ),\n-        vocabulary=SimpleVocabulary(\n-            [\n-                SimpleTerm("", "", _("")),\n-                SimpleTerm("default", "default", "default"),\n-                SimpleTerm("logged-in", "logged-in", "logged-in"),\n-            ]\n-        ),\n-        default="",\n-        required=False,\n-    )\n+moved(\'plone.base.interfaces.resources\', \'Version 7.0\')\ndiff --git a/Products/CMFPlone/interfaces/siteroot.py b/Products/CMFPlone/interfaces/siteroot.py\nindex 83c119871d..e05bac1d96 100644\n--- a/Products/CMFPlone/interfaces/siteroot.py\n+++ b/Products/CMFPlone/interfaces/siteroot.py\n@@ -1,22 +1,3 @@\n-from zope.interface import Interface\n-from Products.CMFCore.interfaces import ISiteRoot\n-from plone.app.layout.navigation.interfaces import INavigationRoot\n+from zope.deprecation import moved\n \n-\n-class IPloneSiteRoot(ISiteRoot, INavigationRoot):\n-    """\n-    Marker interface for the object which serves as the root of a\n-    Plone site.\n-    """\n-\n-\n-class IMigratingPloneSiteRoot(Interface):\n-    """\n-    Marker interface used for migration GenericSetup profiles.\n-    """\n-\n-\n-class ITestCasePloneSiteRoot(Interface):\n-    """\n-    Marker interface used for test fixture GenericSetup profiles.\n-    """\n+moved(\'plone.base.interfaces.siteroot\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/structure.py b/Products/CMFPlone/interfaces/structure.py\nindex ea43a111c2..1de8c04966 100644\n--- a/Products/CMFPlone/interfaces/structure.py\n+++ b/Products/CMFPlone/interfaces/structure.py\n@@ -1,12 +1,3 @@\n-from zope.interface import Interface\n+from zope.deprecation import moved\n \n-\n-class INonStructuralFolder(Interface):\n-    """Marker for folderish content types that are folderish as an\n-    implementation detail only.\n-\n-    By declaring support for this interface, a content type will not be\n-    considered folderish by the catalog\'s is_folderish index/metadata, meaning\n-    that it will not be treated as folderish by the navigation tree, portal tab\n-    generation and folder_contents.\n-    """\n+moved(\'plone.base.interfaces.structure\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/syndication.py b/Products/CMFPlone/interfaces/syndication.py\nindex b65465a0be..e2bdf7315c 100644\n--- a/Products/CMFPlone/interfaces/syndication.py\n+++ b/Products/CMFPlone/interfaces/syndication.py\n@@ -1,296 +1,3 @@\n-from zope.interface import Interface\n-from zope import schema\n-from Products.CMFPlone import PloneMessageFactory as _\n+from zope.deprecation import moved\n \n-\n-class ISyndicatable(Interface):\n-    pass\n-\n-\n-class IFeedData(Interface):\n-\n-    def link():\n-        """\n-        Link to item\n-        """\n-\n-    def base_url():\n-        """\n-        base url to item\n-        """\n-\n-    def title():\n-        """\n-        title of item\n-        """\n-\n-    def description():\n-        """\n-        """\n-\n-    def categories():\n-        """\n-        List of tags\n-        """\n-\n-    def published():\n-        """\n-        publishing date\n-        """\n-\n-    def modified():\n-        """\n-        modification date\n-        """\n-\n-    def uid():\n-        """\n-        """\n-\n-    def rights():\n-        """\n-        """\n-\n-    def publisher():\n-        """\n-        """\n-\n-    def author():\n-        """\n-        """\n-\n-    def author_name():\n-        """\n-        """\n-\n-    def author_email():\n-        """\n-        """\n-\n-\n-class IFeed(IFeedData):\n-    """\n-    An adapter on the context and request\n-    to get feed information\n-    """\n-    def show_about():\n-        """\n-        """\n-\n-    def logo():\n-        """\n-        """\n-\n-    def icon():\n-        """\n-        """\n-\n-    def _brains():\n-        """\n-        return list of brains\n-        """\n-\n-    def _items():\n-        """\n-        return full objects\n-        """\n-\n-    def items():\n-        """\n-        adapted items\n-        """\n-\n-    def limit():\n-        """\n-        """\n-\n-    def language():\n-        """\n-        """\n-\n-\n-class ISearchFeed(IFeed):\n-    pass\n-\n-\n-class IFeedItem(IFeedData):\n-    """\n-    An adapter on the feed item and IFeed instance\n-    """\n-\n-    def body():\n-        """\n-        """\n-\n-    def guid():\n-        """\n-        """\n-\n-    def has_enclosure():\n-        """\n-        """\n-\n-    def file():\n-        """\n-        """\n-\n-    def file_url():\n-        """\n-        """\n-\n-    def file_length():\n-        """\n-        """\n-\n-    def file_type():\n-        """\n-        """\n-\n-\n-class ISiteSyndicationSettings(Interface):\n-\n-    allowed = schema.Bool(\n-        title=_(\'Allowed\'),\n-        description=_(\'Allow syndication for collections and folders \'\n-                      \'on site.\'),\n-        default=True)\n-\n-    default_enabled = schema.Bool(\n-        title=_(\'Enabled by default\'),\n-        description=_(\'If syndication should be enabled by default for all \'\n-                      \'folders and collections.\'),\n-        default=False)\n-\n-    search_rss_enabled = schema.Bool(\n-        title=_(\'Search RSS enabled\'),\n-        description=_(\'Allows users to subscribe to feeds of search results\'),\n-        default=True)\n-\n-    show_author_info = schema.Bool(\n-        title=_(\'Show author info\'),\n-        description=_(\'Should feeds include author information\'),\n-        default=True)\n-\n-    render_body = schema.Bool(\n-        title=_(\'Render Body\'),\n-        description=_(\'help_render_body\',\n-                      default=\'If body text available for item, \'\n-                      \'render it, otherwise use description.\'),\n-        default=False)\n-\n-    max_items = schema.Int(\n-        title=_(\'label_syndication_max_items\',\n-                default=\'Maximum items\'),\n-        description=_(\'help_syndication_max_items\',\n-                      default=\'Maximum number of items that will be syndicated.\'),\n-        min=1,\n-        default=15)\n-\n-    allowed_feed_types = schema.Tuple(\n-        title=_(\'Allowed Feed Types\'),\n-        description=_("Separate view name and title by \'|\'"),\n-        required=True,\n-        missing_value=None,\n-        default=(\n-            "RSS|RSS 1.0",\n-            "rss.xml|RSS 2.0",\n-            "atom.xml|Atom",\n-            "itunes.xml|iTunes"),\n-        value_type=schema.TextLine()\n-    )\n-\n-    site_rss_items = schema.Tuple(\n-        title=_(\'Site RSS\'),\n-        description=_(\'Paths to folders and collections to link to \'\n-                      \'at the portal root.\'),\n-        required=False,\n-        default=(\'/news/aggregator\',),\n-        value_type=schema.Choice(\n-            vocabulary="plone.app.vocabularies.SyndicatableFeedItems")\n-    )\n-\n-    show_syndication_button = schema.Bool(\n-        title=_("Show settings button"),\n-        description=_("Makes it possible to customize syndication settings "\n-                      "for particular folders and collections "))\n-\n-    show_syndication_link = schema.Bool(\n-        title=_("Show feed link"),\n-        description=_("Enable RSS link document action on the syndication "\n-                      "content item."))\n-\n-\n-class IFeedSettings(Interface):\n-\n-    enabled = schema.Bool(\n-        title=_(\'Enabled\'),\n-        default=False)\n-\n-    feed_types = schema.Tuple(\n-        title=_(\'Feed Types\'),\n-        required=True,\n-        missing_value=None,\n-        default=("RSS", "rss.xml", "atom.xml"),\n-        value_type=schema.Choice(\n-            vocabulary="plone.app.vocabularies.SyndicationFeedTypes"\n-        ))\n-\n-    render_body = schema.Bool(\n-        title=_(\'Render Body\'),\n-        description=_(\n-            \'help_render_body\',\n-            default=\'If body text available for item, \'\n-                    \'render it, otherwise use description.\'),\n-        default=False)\n-\n-    max_items = schema.Int(\n-        title=_(\'label_syndication_max_items\',\n-                default=\'Maximum items\'),\n-        description=_(\n-            \'help_syndication_max_items\',\n-            default=\'Maximum number of items that will be syndicated.\'),\n-        default=15)\n-\n-\n-class ISyndicationUtil(Interface):\n-\n-    def allowed_feed_types():\n-        """\n-        get a list of allow feed types\n-        """\n-\n-    def context_allowed():\n-        """\n-        If syndication is allowed on the context\n-        """\n-\n-    def context_enabled(raise404=False):\n-        """\n-        If syndication is enabled on the context\n-        """\n-\n-    def site_enabled():\n-        """\n-        If syndication is enabled on the site\n-        """\n-\n-    def search_rss_enabled(raise404=False):\n-        """\n-        If search_rss is enabled\n-        """\n-\n-    def show_author_info():\n-        """\n-        If author information should show on feeds\n-        """\n-\n-    def max_items():\n-        """\n-        Default max items to show on the site\n-        """\n-\n-    def rss_url():\n-        """\n-        Default rss url. Mainly to be used for the\n-        rss portal_action link\n-        """\n+moved(\'plone.base.interfaces.syndication\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/interfaces/translationservice.py b/Products/CMFPlone/interfaces/translationservice.py\nindex b908e28ee8..f840d67732 100644\n--- a/Products/CMFPlone/interfaces/translationservice.py\n+++ b/Products/CMFPlone/interfaces/translationservice.py\n@@ -1,44 +1,3 @@\n-from zope.interface import Interface\n+from zope.deprecation import moved\n \n-\n-class ITranslationServiceTool(Interface):\n-    """ Utility methods to access the translation machinery\n-    """\n-\n-    def translate(*args, **kw):\n-        """Translate method to access the translation service\n-           from resticted code like skins.\n-        """\n-\n-    def encode(m, input_encoding=None, output_encoding=None, errors=\'strict\'):\n-        """Encode a give unicode type or string type to string type in encoding\n-           output_encoding\n-        """\n-\n-    def asunicodetype(m, input_encoding=None, errors=\'strict\'):\n-        """Create type unicode from type string"""\n-\n-    def ulocalized_time(time, long_format=None, time_only=None, context=None,\n-                        domain=\'plonelocales\'):\n-        """Returns localized time."""\n-\n-    def day_msgid(number, format=\'\'):\n-        """Returns the msgid which can be passed to the translation service for\n-           l10n of weekday names. Format is either \'\', \'a\' or \'s\'.\n-        """\n-\n-    def month_msgid(number, format=\'\'):\n-        """Returns the msgid which can be passed to the translation service for\n-           l10n of month names. Format is either \'\' or \'a\' (long or\n-           abbreviation).\n-        """\n-\n-    def month_english(number, format=\'\'):\n-        """Returns the english name of month by number. Format is either \'\' or\n-           \'a\' (long or abbreviation).\n-        """\n-\n-    def weekday_english(number, format=\'\'):\n-        """Returns the english name of a week by number. Format is either \'\',\n-           \'a\' or \'p\'.\n-        """\n+moved(\'plone.base.interfaces.translationservice\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/log.py b/Products/CMFPlone/log.py\nindex ba2e6359dd..7cf1dfa8ca 100644\n--- a/Products/CMFPlone/log.py\n+++ b/Products/CMFPlone/log.py\n@@ -2,6 +2,7 @@\n This module resolves an import order dependency.\n Don\'t import from here, import from utils.\n """\n+from zope.deprecation import deprecate\n \n import logging\n \n@@ -19,6 +20,9 @@ def log_exc(message=\'\', summary=\'\', severity=logging.ERROR):\n \n \n # deprecration warning\n+@deprecate("Use a recommended deprecation method, see Plone Deprecation Guide: "\n+           "https://docs.plone.org/develop/styleguide/deprecation.html "\n+           "(will be removed in Plone 7.0)")\n def log_deprecated(message, summary=\'Deprecation Warning\',\n                    severity=logging.WARNING):\n     logger.log(severity, \'%s \\n%s\', summary, message)\ndiff --git a/Products/CMFPlone/meta-bbb.zcml b/Products/CMFPlone/meta-bbb.zcml\ndeleted file mode 100644\nindex 67d7ca3cf5..0000000000\n--- a/Products/CMFPlone/meta-bbb.zcml\n+++ /dev/null\n@@ -1,13 +0,0 @@\n-<configure\n-    xmlns="http://namespaces.zope.org/zope"\n-    xmlns:zcml="http://namespaces.zope.org/zcml"\n-    xmlns:meta="http://namespaces.zope.org/meta">\n-\n-    <configure zcml:condition="installed Products.CMFDefault.browser">\n-        <exclude package="Products.CMFDefault.browser" file="configure.zcml" />\n-        <exclude package="Products.CMFDefault.formlib" file="configure.zcml" />\n-        <exclude package="Products.CMFDefault.upgrade" file="configure.zcml" />\n-    </configure>\n-\n-</configure>\n-\ndiff --git a/Products/CMFPlone/patches/sendmail.py b/Products/CMFPlone/patches/sendmail.py\nindex bfee534d59..d699ceee01 100644\n--- a/Products/CMFPlone/patches/sendmail.py\n+++ b/Products/CMFPlone/patches/sendmail.py\n@@ -1,5 +1,5 @@\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import IMailSchema\n+from plone.base.interfaces import IMailSchema\n from transaction._transaction import Status\n from zope.component import getUtility\n from zope.sendmail.mailer import _SMTPState\ndiff --git a/Products/CMFPlone/patterns/configure.zcml b/Products/CMFPlone/patterns/configure.zcml\nindex c4c0de969e..63908ad2ee 100644\n--- a/Products/CMFPlone/patterns/configure.zcml\n+++ b/Products/CMFPlone/patterns/configure.zcml\n@@ -14,13 +14,13 @@\n       factory=".settings.PatternSettingsAdapter"\n       for="* * *"\n       name="pattern_settings"\n-      provides="Products.CMFPlone.interfaces.IPatternsSettings"\n+      provides="plone.base.interfaces.IPatternsSettings"\n   />\n   <!-- deprecated name -->\n   <adapter\n       factory=".settings.PatternSettingsAdapter"\n       for="* * *"\n       name="plone_settings"\n-      provides="Products.CMFPlone.interfaces.IPatternsSettings"\n+      provides="plone.base.interfaces.IPatternsSettings"\n   />\n </configure>\ndiff --git a/Products/CMFPlone/patterns/settings.py b/Products/CMFPlone/patterns/settings.py\nindex 499c3b65d5..fae04f2467 100644\n--- a/Products/CMFPlone/patterns/settings.py\n+++ b/Products/CMFPlone/patterns/settings.py\n@@ -7,9 +7,9 @@\n from plone.registry.interfaces import IRegistry\n from plone.uuid.interfaces import IUUID\n from Products.CMFCore.interfaces._content import IFolderish\n-from Products.CMFPlone.interfaces import ILinkSchema\n-from Products.CMFPlone.interfaces import IPatternsSettings\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n+from plone.base.interfaces import ILinkSchema\n+from plone.base.interfaces import IPatternsSettings\n+from plone.base.interfaces import IPloneSiteRoot\n from Products.CMFPlone.patterns.tinymce import TinyMCESettingsGenerator\n from Products.CMFPlone.utils import get_portal\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/patterns/tinymce.py b/Products/CMFPlone/patterns/tinymce.py\nindex c3d206530a..1db131559b 100644\n--- a/Products/CMFPlone/patterns/tinymce.py\n+++ b/Products/CMFPlone/patterns/tinymce.py\n@@ -3,10 +3,10 @@\n from plone.app.theming.utils import theming_policy\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import IFilterSchema\n-from Products.CMFPlone.interfaces import ITinyMCESchema\n+from plone.base.interfaces import IFilterSchema\n+from plone.base.interfaces import ITinyMCESchema\n from Products.CMFPlone.utils import get_portal\n-from Products.CMFPlone.utils import safe_unicode\n+from plone.base.utils import safe_text\n from zope.component import getUtility\n \n import json\n@@ -189,7 +189,7 @@ def get_tiny_config(self):\n             valid_tags = self.filter_settings.valid_tags\n             nasty_tags = self.filter_settings.nasty_tags\n             custom_attributes = self.filter_settings.custom_attributes\n-            safe_attributes = [safe_unicode(attr) for attr in html.defs.safe_attrs]\n+            safe_attributes = [safe_text(attr) for attr in html.defs.safe_attrs]\n             valid_attributes = safe_attributes + custom_attributes\n             # valid_elements : \'a[href|target=_blank],strong/b,div[align],br\'\n             tiny_valid_elements = []\ndiff --git a/Products/CMFPlone/patterns/view.py b/Products/CMFPlone/patterns/view.py\nindex c88dacca7f..5f7b8e311b 100644\n--- a/Products/CMFPlone/patterns/view.py\n+++ b/Products/CMFPlone/patterns/view.py\n@@ -1,6 +1,6 @@\n # This module delivers the global patterns settings\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import IPatternsSettings\n+from plone.base.interfaces import IPatternsSettings\n from zope.component import getAdapters\n from zope.component import getMultiAdapter\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/permissions.py b/Products/CMFPlone/permissions.py\nindex 07370e2931..4230ff54eb 100644\n--- a/Products/CMFPlone/permissions.py\n+++ b/Products/CMFPlone/permissions.py\n@@ -1,67 +1,3 @@\n-""" CMFPlone product permissions """\n-from AccessControl import ModuleSecurityInfo\n+from zope.deprecation import moved\n \n-security = ModuleSecurityInfo(\'Products.CMFPlone.permissions\')\n-\n-security.declarePublic(\'AccessContentsInformation\')\n-from Products.CMFCore.permissions import AccessContentsInformation\n-\n-security.declarePublic(\'AddPortalContent\')\n-from Products.CMFCore.permissions import AddPortalContent\n-\n-security.declarePublic(\'AddPortalFolders\')\n-from Products.CMFCore.permissions import AddPortalFolders\n-\n-security.declarePublic(\'AddPortalMember\')\n-from Products.CMFCore.permissions import AddPortalMember\n-\n-security.declarePublic(\'DeleteObjects\')\n-from Products.CMFCore.permissions import DeleteObjects\n-\n-security.declarePublic(\'FTPAccess\')\n-from Products.CMFCore.permissions import FTPAccess\n-\n-security.declarePublic(\'ListFolderContents\')\n-from Products.CMFCore.permissions import ListFolderContents\n-\n-security.declarePublic(\'ListPortalMembers\')\n-from Products.CMFCore.permissions import ListPortalMembers\n-\n-security.declarePublic(\'ListUndoableChanges\')\n-from Products.CMFCore.permissions import ListUndoableChanges\n-\n-security.declarePublic(\'ManagePortal\')\n-from Products.CMFCore.permissions import ManagePortal\n-\n-security.declarePublic(\'ManageProperties\')\n-from Products.CMFCore.permissions import ManageProperties\n-\n-security.declarePublic(\'ManageUsers\')\n-from Products.CMFCore.permissions import ManageUsers\n-\n-security.declarePublic(\'ModifyPortalContent\')\n-from Products.CMFCore.permissions import ModifyPortalContent\n-\n-security.declarePublic(\'ReplyToItem\')\n-from Products.CMFCore.permissions import ReplyToItem\n-\n-security.declarePublic(\'RequestReview\')\n-from Products.CMFCore.permissions import RequestReview\n-\n-security.declarePublic(\'ReviewPortalContent\')\n-from Products.CMFCore.permissions import ReviewPortalContent\n-\n-security.declarePublic(\'SetOwnPassword\')\n-from Products.CMFCore.permissions import SetOwnPassword\n-\n-security.declarePublic(\'SetOwnProperties\')\n-from Products.CMFCore.permissions import SetOwnProperties\n-\n-security.declarePublic(\'UndoChanges\')\n-from Products.CMFCore.permissions import UndoChanges\n-\n-security.declarePublic(\'View\')\n-from Products.CMFCore.permissions import View\n-\n-security.declarePublic(\'ViewManagementScreens\')\n-from Products.CMFCore.permissions import ViewManagementScreens\n+moved(\'plone.base.permissions\', \'Version 7.0\')\n\\ No newline at end of file\ndiff --git a/Products/CMFPlone/profiles.zcml b/Products/CMFPlone/profiles.zcml\nindex 78ee432b74..b82c00411d 100644\n--- a/Products/CMFPlone/profiles.zcml\n+++ b/Products/CMFPlone/profiles.zcml\n@@ -8,7 +8,7 @@\n       title="Plone Site"\n       directory="profiles/default"\n       description="Profile for a default Plone."\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       post_handler="Products.CMFPlone.setuphandlers.importFinalSteps"\n       />\n \n@@ -17,7 +17,7 @@\n       title="Mandatory dependencies for a Plone site"\n       directory="profiles/dependencies"\n       description="Load all profiles from other packages/products that are needed for a full Plone site."\n-      for="Products.CMFPlone.interfaces.IPloneSiteRoot"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n       provides="Products.GenericSetup.interfaces.EXTENSION"\n       />\n \n@@ -26,7 +26,7 @@\n       title="Plone Test Fixture"\n       directory="profiles/testfixture"\n       description="Extension profile to configure a test fixture"\n-      for="Products.CMFPlone.interfaces.ITestCasePloneSiteRoot"\n+      for="plone.base.interfaces.ITestCasePloneSiteRoot"\n       provides="Products.GenericSetup.interfaces.EXTENSION"\n       />\n \ndiff --git a/Products/CMFPlone/resources/browser/combine.py b/Products/CMFPlone/resources/browser/combine.py\nindex e2be703e4b..58585b14f7 100644\n--- a/Products/CMFPlone/resources/browser/combine.py\n+++ b/Products/CMFPlone/resources/browser/combine.py\n@@ -1,5 +1,6 @@\n import zope.deferredimport\n \n+\n zope.deferredimport.initialize()\n \n zope.deferredimport.deprecated(\ndiff --git a/Products/CMFPlone/resources/browser/resource.py b/Products/CMFPlone/resources/browser/resource.py\nindex b345e96736..403057745f 100644\n--- a/Products/CMFPlone/resources/browser/resource.py\n+++ b/Products/CMFPlone/resources/browser/resource.py\n@@ -4,8 +4,12 @@\n from plone.app.layout.viewlets.common import ViewletBase\n from plone.app.theming.interfaces import IThemeSettings\n from plone.app.theming.utils import theming_policy\n+from plone.base.interfaces import IBundleRegistry\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import IBundleRegistry\n+from Products.CMFCore.Expression import createExprContext\n+from Products.CMFCore.Expression import Expression\n+from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone.resources import RESOURCE_DEVELOPMENT_MODE\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n \n@@ -96,7 +100,11 @@ def update(self):\n         # collect names\n         js_names = {name for name, rec in records.items() if rec.jscompilation}\n         css_names = {name for name, rec in records.items() if rec.csscompilation}\n-        all_names = {name for name, rec in records.items() if rec.jscompilation or rec.csscompilation}\n+        all_names = {\n+            name\n+            for name, rec in records.items()\n+            if rec.jscompilation or rec.csscompilation\n+        }\n \n         # register\n         for name, record in records.items():\ndiff --git a/Products/CMFPlone/resources/utils.py b/Products/CMFPlone/resources/utils.py\nindex ec2e7fb9e0..8a856ae004 100644\n--- a/Products/CMFPlone/resources/utils.py\n+++ b/Products/CMFPlone/resources/utils.py\n@@ -1,11 +1,11 @@\n from Acquisition import aq_base\n from Acquisition import aq_inner\n from Acquisition import aq_parent\n+from plone.base.interfaces.resources import OVERRIDE_RESOURCE_DIRECTORY_NAME\n from plone.resource.file import FilesystemFile\n from plone.resource.interfaces import IResourceDirectory\n from Products.CMFCore.Expression import createExprContext\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces.resources import OVERRIDE_RESOURCE_DIRECTORY_NAME\n from zExceptions import NotFound\n from zope.component import queryUtility\n \ndiff --git a/Products/CMFPlone/setuphandlers.py b/Products/CMFPlone/setuphandlers.py\nindex 7215fdadfe..9bc454e82a 100644\n--- a/Products/CMFPlone/setuphandlers.py\n+++ b/Products/CMFPlone/setuphandlers.py\n@@ -1,8 +1,8 @@\n from Acquisition import aq_base\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.factory import _DEFAULT_PROFILE\n-from Products.CMFPlone.interfaces import IMigrationTool\n-from Products.CMFPlone.interfaces.resources import OVERRIDE_RESOURCE_DIRECTORY_NAME\n+from plone.base.interfaces import IMigrationTool\n+from plone.base.interfaces.resources import OVERRIDE_RESOURCE_DIRECTORY_NAME\n from Products.StandardCacheManagers.AcceleratedHTTPCacheManager \\\n     import AcceleratedHTTPCacheManager\n from Products.StandardCacheManagers.RAMCacheManager import RAMCacheManager\ndiff --git a/Products/CMFPlone/tests/csrf.txt b/Products/CMFPlone/tests/csrf.txt\nindex dfc77bb85c..b5f8e22098 100644\n--- a/Products/CMFPlone/tests/csrf.txt\n+++ b/Products/CMFPlone/tests/csrf.txt\n@@ -50,8 +50,8 @@ outgoing mails would have to be handled making things unnecessarily\n complicated:\n \n   >>> from zope.component import getUtility\n-  >>> from Products.CMFPlone.interfaces import IMailSchema\n-  >>> from Products.CMFPlone.interfaces import ISecuritySchema\n+  >>> from plone.base.interfaces import IMailSchema\n+  >>> from plone.base.interfaces import ISecuritySchema\n   >>> from plone.registry.interfaces import IRegistry\n   >>> registry = getUtility(IRegistry)\n   >>> mail_settings = registry.forInterface(IMailSchema, prefix=\'plone\')\ndiff --git a/Products/CMFPlone/tests/dummy.py b/Products/CMFPlone/tests/dummy.py\nindex 5ff3e8db1b..0ea980fb65 100644\n--- a/Products/CMFPlone/tests/dummy.py\n+++ b/Products/CMFPlone/tests/dummy.py\n@@ -4,8 +4,8 @@\n from ComputedAttribute import ComputedAttribute\n from OFS.Folder import Folder as SimpleFolder\n from OFS.SimpleItem import SimpleItem\n-from Products.CMFPlone.interfaces import INonStructuralFolder\n-from Products.CMFPlone.interfaces import IWorkflowChain\n+from plone.base.interfaces import INonStructuralFolder\n+from plone.base.interfaces import IWorkflowChain\n from io import BytesIO\n from zope.interface import implementer\n from zope.interface import Interface\ndiff --git a/Products/CMFPlone/tests/messages.txt b/Products/CMFPlone/tests/messages.txt\ndeleted file mode 100644\nindex 0b8320c7fb..0000000000\n--- a/Products/CMFPlone/tests/messages.txt\n+++ /dev/null\n@@ -1,142 +0,0 @@\n-Test for Messages\n-=================\n-\n-  >>> from Products.CMFPlone import PloneMessageFactory as _\n-\n-Messages without translation service set up\n--------------------------------------------\n-\n-Very simple message:\n-\n-  >>> _(u\'hello\')\n-  u\'hello\'\n-\n-The domain is predefinied through the factory:\n-\n-  >>> _(u\'hello\').domain\n-  \'plone\'\n-\n-You can also define a default text:\n-\n-  >>> msg = _(u\'id\', default=u\'This is the text.\')\n-  >>> msg\n-  u\'id\'\n-\n-  >>> msg.default\n-  u\'This is the text.\'\n-\n-And at last there is the possibility of variable substition:\n-\n-  >>> project = u\'Plone\'\n-  >>> msg = _(u\'id\', default=u\'Hello ${name}\', mapping={u\'name\' : project})\n-\n-  >>> msg\n-  u\'id\'\n-\n-  >>> msg.default\n-  u\'Hello ${name}\'\n-\n-  >>> msg.mapping\n-  {u\'name\': u\'Plone\'}\n-\n-Messages with translation service set up\n-----------------------------------------\n-\n-Now we fake a translation domain. Usually you will have translations stored in\n-a po file and automatically translated by PTS or the Z3 translation service.\n-\n-  >>> from zope.i18n.simpletranslationdomain import SimpleTranslationDomain\n-  >>> from zope.i18n.interfaces import ITranslationDomain\n-\n-  >>> messages = {\n-  ...     (\'de\', u\'This is a message.\'): u\'Dieses ist eine Nachricht.\',\n-  ...     (\'de\', u\'mail-notification\'): u\'Sie haben ${number} neue E-Mails.\'}\n-  >>> mails = SimpleTranslationDomain(\'plone\', messages)\n-\n-  >>> from zope.component import provideUtility\n-  >>> provideUtility(mails, ITranslationDomain, name=\'plone\')\n-\n-Define the simple message:\n-\n-  >>> msg = _(u\'This is a message.\')\n-  >>> msg\n-  u\'This is a message.\'\n-\n-We are still using the plone domain:\n-\n-  >>> msg.domain\n-  \'plone\'\n-\n-Verify that the translation succeeds:\n-\n-  >>> from zope.i18n import translate\n-  >>> translate(msg, target_language=\'de\')\n-  u\'Dieses ist eine Nachricht.\'\n-\n-Now try a message with variable substitution:\n-\n-  >>> num = 42\n-  >>> note = _(u\'mail-notification\', default=u\'You have ${number} new mails.\',\n-  ...          mapping={u\'number\': num})\n-\n-  >>> note\n-  u\'mail-notification\'\n-\n-  >>> note.default\n-  u\'You have ${number} new mails.\'\n-\n-Try simple interpolation:\n-\n-  >>> translate(note, target_language=\'en\')\n-  u\'You have 42 new mails.\'\n-\n-And now try the real translation:\n-\n-  >>> translate(note, target_language=\'de\')\n-  u\'Sie haben 42 neue E-Mails.\'\n-\n-Messages inside page templates / tal\n-------------------------------------\n-\n-We need a simple tal engine for the tests. The DummyEngine automatically\n-upper-cases all text.\n-\n-  >>> from zope.tal.dummyengine import DummyEngine\n-  >>> engine = DummyEngine()\n-\n-We use the Messages defined earlier.\n-\n-  >>> msg\n-  u\'This is a message.\'\n-\n-  >>> note\n-  u\'mail-notification\'\n-\n-Inform the engine of our variables.\n-\n-  >>> engine.setLocal(\'msg\', msg)\n-  >>> engine.setLocal(\'note\', note)\n-\n-We also need a HTMLParser and TALInterpreter and add a simple convience function\n-to get the parsed and interpreted text.\n-\n-  >>> from zope.tal.htmltalparser import HTMLTALParser\n-  >>> from zope.tal.talinterpreter import TALInterpreter\n-  >>> from io import StringIO\n-\n-  >>> def compile(source):\n-  ...     parser = HTMLTALParser()\n-  ...     parser.parseString(source)\n-  ...     program, macros = parser.getCode()\n-  ...     result = StringIO()\n-  ...     interpreter = TALInterpreter(program, {}, engine, stream=result)\n-  ...     interpreter()\n-  ...     return result.getvalue()\n-\n-  >>> text = compile(\'<span i18n:translate="" tal:content="msg"/>\')\n-  >>> u\'<span>THIS IS A MESSAGE.</span>\' in text\n-  True\n-\n-  >>> text = compile(\'<span i18n:translate="" tal:content="note"/>\')\n-  >>> u\'<span>MAIL-NOTIFICATION</span>\' in text\n-  True\ndiff --git a/Products/CMFPlone/tests/pwreset_browser.rst b/Products/CMFPlone/tests/pwreset_browser.rst\nindex 538d9f1de2..da70832d02 100644\n--- a/Products/CMFPlone/tests/pwreset_browser.rst\n+++ b/Products/CMFPlone/tests/pwreset_browser.rst\n@@ -15,7 +15,7 @@ assumptions that are not true for Plone forms.\n   >>> from zope.component import getUtility\n   >>> registry = getUtility(IRegistry, context=layer[\'portal\'])\n \n-  >>> from Products.CMFPlone.interfaces.controlpanel import IMailSchema\n+  >>> from plone.base.interfaces.controlpanel import IMailSchema\n   >>> mail_settings = registry.forInterface(IMailSchema, prefix="plone")\n   >>> mail_settings.smtp_host = u\'localhost\'\n   >>> mail_settings.email_from_address = \'smith@example.com\'\n@@ -523,7 +523,7 @@ Test passwordreset BrowserView\n \n     >>> portal = layer[\'portal\']\n     >>> mail_settings.email_from_name = u\'Old\\u0159ich a Bo\\u017eena\'\n-    >>> from Products.CMFPlone.interfaces.controlpanel import ISiteSchema\n+    >>> from plone.base.interfaces.controlpanel import ISiteSchema\n     >>> site_settings = registry.forInterface(ISiteSchema, prefix=\'plone\')\n     >>> site_settings.site_title = u\'Koko\\u0159\\xedn Portal\'\n \ndiff --git a/Products/CMFPlone/tests/robot/robot_setup.py b/Products/CMFPlone/tests/robot/robot_setup.py\nindex b32e25ec06..ae9760f5da 100644\n--- a/Products/CMFPlone/tests/robot/robot_setup.py\n+++ b/Products/CMFPlone/tests/robot/robot_setup.py\n@@ -3,8 +3,8 @@\n \n from zope.component import queryUtility\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import IMailSchema\n-from Products.CMFPlone.interfaces import ISecuritySchema\n+from plone.base.interfaces import IMailSchema\n+from plone.base.interfaces import ISecuritySchema\n \n \n class CMFPloneRemoteKeywords(RemoteLibrary):\ndiff --git a/Products/CMFPlone/tests/testBatch.py b/Products/CMFPlone/tests/testBatch.py\nindex 5964e2ecfd..f892192e5d 100644\n--- a/Products/CMFPlone/tests/testBatch.py\n+++ b/Products/CMFPlone/tests/testBatch.py\n@@ -1,53 +1,13 @@\n-from Products.CMFPlone.PloneBatch import Batch\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n-from ZTUtils.Lazy import LazyMap\n \n import unittest\n \n-\n-class TestBatch(unittest.TestCase):\n-\n-    def test_batch_no_lazy(self):\n-        batch = Batch(range(100), size=10, start=10)\n-        self.assertEqual([b for b in batch],\n-                         [10, 11, 12, 13, 14, 15, 16, 17, 18, 19])\n-\n-    def test_batch_lazy_map(self):\n-        def get(key):\n-            return key\n-        sequence = LazyMap(get, range(80, 90), actual_result_count=95)\n-        batch = Batch(sequence, size=10, start=80)\n-        self.assertEqual(\n-            [b for b in batch],\n-            [80, 81, 82, 83, 84, 85, 86, 87, 88, 89])\n-\n-        self.assertEqual(batch.numpages, 10)\n-        self.assertEqual(batch.pagenumber, 9)\n-        self.assertEqual(batch.navlist, range(6, 11))\n-        self.assertEqual(batch.leapback, [])\n-        self.assertEqual(batch.prevlist, range(6, 9))\n-        self.assertEqual(batch.previous.length, 10)\n-        self.assertEqual(batch.next.length, 5)\n-        self.assertEqual(batch.pageurl({}), \'b_start:int=80\')\n-        self.assertListEqual(\n-            list(batch.prevurls({})),\n-            [\n-                (6, \'b_start:int=50\'),\n-                (7, \'b_start:int=60\'),\n-                (8, \'b_start:int=70\'),\n-            ]\n-        )\n-        self.assertListEqual(\n-            list(batch.nexturls({})),\n-            [(10, \'b_start:int=90\')],\n-        )\n-\n-\n class TestBatchIntegration(unittest.TestCase):\n \n     layer = PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n \n     def test_batch_brains(self):\n+        from plone.base.batch import Batch\n         portal = self.layer[\'portal\']\n         obj_ids = [\'%stest\' % chr(c) for c in range(97, 123)]\n         for obj_id in obj_ids:\ndiff --git a/Products/CMFPlone/tests/testBrowserDefault.py b/Products/CMFPlone/tests/testBrowserDefault.py\nindex 45557b5150..19810f91b5 100644\n--- a/Products/CMFPlone/tests/testBrowserDefault.py\n+++ b/Products/CMFPlone/tests/testBrowserDefault.py\n@@ -9,7 +9,7 @@\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from Products.CMFPlone.utils import _createObjectByType\n-from Products.CMFPlone.utils import safe_nativestring\n+from plone.base.utils import safe_text\n from Products.CMFPlone.PloneFolder import ReplaceableWrapper\n from zope.component import getUtility\n \n@@ -80,8 +80,8 @@ def compareLayoutVsView(self, obj, path="", viewaction=None):\n         transaction.commit()\n \n         self.browser.open(obj.absolute_url() + path)\n-        body = safe_nativestring(self.browser.contents)\n-        resolved = safe_nativestring(resolved)\n+        body = safe_text(self.browser.contents)\n+        resolved = safe_text(resolved)\n \n         # request/ACTUAL_URL is fubar in tests, remove lines that depend on it\n         resolved = RE_REMOVE_DOCCONT.sub(\'\', resolved)\ndiff --git a/Products/CMFPlone/tests/testEmailLogin.py b/Products/CMFPlone/tests/testEmailLogin.py\nindex b603237a4a..075b3bc6b8 100644\n--- a/Products/CMFPlone/tests/testEmailLogin.py\n+++ b/Products/CMFPlone/tests/testEmailLogin.py\n@@ -2,7 +2,7 @@\n from plone.app.testing import SITE_OWNER_NAME\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ISecuritySchema\n+from plone.base.interfaces import ISecuritySchema\n from Products.CMFPlone.tests import PloneTestCase\n from Products.CMFPlone.utils import set_own_login_name\n from Products.CMFPlone.RegistrationTool import get_member_by_login_name\ndiff --git a/Products/CMFPlone/tests/testIImagingSchema.py b/Products/CMFPlone/tests/testIImagingSchema.py\nindex 3f42d990d8..20b302c059 100644\n--- a/Products/CMFPlone/tests/testIImagingSchema.py\n+++ b/Products/CMFPlone/tests/testIImagingSchema.py\n@@ -1,6 +1,6 @@\n from plone.app.testing import PLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces.controlpanel import IImagingSchema\n+from plone.base.interfaces.controlpanel import IImagingSchema\n from zope.component import getUtility\n \n import unittest\ndiff --git a/Products/CMFPlone/tests/testNavTree.py b/Products/CMFPlone/tests/testNavTree.py\nindex 4003b842bc..6851386e1f 100644\n--- a/Products/CMFPlone/tests/testNavTree.py\n+++ b/Products/CMFPlone/tests/testNavTree.py\n@@ -13,7 +13,7 @@\n \n \n from Products.CMFPlone.PloneFolder import PloneFolder\n-from Products.CMFPlone.interfaces import INonStructuralFolder\n+from plone.base.interfaces import INonStructuralFolder\n \n default_user = PloneTestCase.default_user\n \ndiff --git a/Products/CMFPlone/tests/testNavigationView.py b/Products/CMFPlone/tests/testNavigationView.py\nindex 0c323400c9..c3e19480b8 100644\n--- a/Products/CMFPlone/tests/testNavigationView.py\n+++ b/Products/CMFPlone/tests/testNavigationView.py\n@@ -3,9 +3,9 @@\n from Products.CMFPlone.browser.navigation import CatalogNavigationTabs\n from Products.CMFPlone.browser.navigation import CatalogSiteMap\n from Products.CMFPlone.browser.navigation import PhysicalNavigationBreadcrumbs\n-from Products.CMFPlone.interfaces import IHideFromBreadcrumbs\n-from Products.CMFPlone.interfaces import INavigationSchema\n-from Products.CMFPlone.interfaces import ITypesSchema\n+from plone.base.interfaces import IHideFromBreadcrumbs\n+from plone.base.interfaces import INavigationSchema\n+from plone.base.interfaces import ITypesSchema\n from Products.CMFPlone.tests import dummy\n from Products.CMFPlone.tests import PloneTestCase\n from Products.CMFPlone.tests.utils import folder_position\ndiff --git a/Products/CMFPlone/tests/testPloneTool.py b/Products/CMFPlone/tests/testPloneTool.py\nindex 7546d7a0d1..9ae991a515 100644\n--- a/Products/CMFPlone/tests/testPloneTool.py\n+++ b/Products/CMFPlone/tests/testPloneTool.py\n@@ -2,8 +2,8 @@\n from plone.app.testing import SITE_OWNER_NAME\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import IReorderedEvent\n-from Products.CMFPlone.interfaces import ISearchSchema\n+from plone.base.interfaces import IReorderedEvent\n+from plone.base.interfaces import ISearchSchema\n from Products.CMFPlone.tests import PloneTestCase\n from zope.component import getGlobalSiteManager\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/tests/testPortalCreation.py b/Products/CMFPlone/tests/testPortalCreation.py\nindex 8dcaea6be8..08498041e6 100644\n--- a/Products/CMFPlone/tests/testPortalCreation.py\n+++ b/Products/CMFPlone/tests/testPortalCreation.py\n@@ -10,9 +10,9 @@\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import setuphandlers\n from Products.CMFPlone.factory import _DEFAULT_PROFILE\n-from Products.CMFPlone.interfaces import IFilterSchema\n-from Products.CMFPlone.interfaces import INavigationSchema\n-from Products.CMFPlone.interfaces import ISearchSchema\n+from plone.base.interfaces import IFilterSchema\n+from plone.base.interfaces import INavigationSchema\n+from plone.base.interfaces import ISearchSchema\n from Products.CMFPlone.tests import dummy\n from Products.CMFPlone.tests import PloneTestCase\n from Products.CMFPlone.UnicodeSplitter import I18NNormalizer\ndiff --git a/Products/CMFPlone/tests/testQueryCatalog.py b/Products/CMFPlone/tests/testQueryCatalog.py\nindex 6bafb5856b..2073903c67 100644\n--- a/Products/CMFPlone/tests/testQueryCatalog.py\n+++ b/Products/CMFPlone/tests/testQueryCatalog.py\n@@ -1,9 +1,9 @@\n # Test queryCatalog and plone search forms\n from plone.app.textfield.value import RichTextValue\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import INavigationSchema\n-from Products.CMFPlone.interfaces import ISearchSchema\n-from Products.CMFPlone.interfaces.syndication import ISiteSyndicationSettings\n+from plone.base.interfaces import INavigationSchema\n+from plone.base.interfaces import ISearchSchema\n+from plone.base.interfaces.syndication import ISiteSyndicationSettings\n from Products.CMFPlone.tests import PloneTestCase\n from Products.ZCTextIndex.ParseTree import ParseError\n from zExceptions import NotFound\ndiff --git a/Products/CMFPlone/tests/testRegistrationTool.py b/Products/CMFPlone/tests/testRegistrationTool.py\nindex a10869da25..d7d16eef9b 100644\n--- a/Products/CMFPlone/tests/testRegistrationTool.py\n+++ b/Products/CMFPlone/tests/testRegistrationTool.py\n@@ -3,7 +3,7 @@\n from AccessControl import Unauthorized\n from Products.CMFCore.permissions import AddPortalMember\n from Products.CMFPlone.RegistrationTool import _checkEmail\n-from Products.CMFPlone.interfaces.controlpanel import IMailSchema, ISiteSchema\n+from plone.base.interfaces.controlpanel import IMailSchema, ISiteSchema\n from Products.CMFPlone.tests import PloneTestCase\n from Products.CMFPlone.tests.utils import MockMailHost\n from Products.MailHost.interfaces import IMailHost\ndiff --git a/Products/CMFPlone/tests/testResourceRegistries.py b/Products/CMFPlone/tests/testResourceRegistries.py\nindex 37ad8d13a1..d7214266cf 100644\n--- a/Products/CMFPlone/tests/testResourceRegistries.py\n+++ b/Products/CMFPlone/tests/testResourceRegistries.py\n@@ -2,7 +2,7 @@\n from plone.registry import field as regfield\n from plone.registry import Record\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import IBundleRegistry\n+from plone.base.interfaces import IBundleRegistry\n from Products.CMFPlone.resources import add_bundle_on_request\n from Products.CMFPlone.resources import remove_bundle_on_request\n from Products.CMFPlone.resources.browser.resource import ScriptsView\ndiff --git a/Products/CMFPlone/tests/testSearch.py b/Products/CMFPlone/tests/testSearch.py\nindex e331876b9e..e132ab5130 100644\n--- a/Products/CMFPlone/tests/testSearch.py\n+++ b/Products/CMFPlone/tests/testSearch.py\n@@ -11,7 +11,7 @@\n from zope.component import getUtility\n from plone.registry.interfaces import IRegistry\n \n-from Products.CMFPlone.interfaces import ISearchSchema\n+from plone.base.interfaces import ISearchSchema\n \n from plone.app.contentlisting.interfaces import IContentListing\n from plone.app.textfield import RichTextValue\ndiff --git a/Products/CMFPlone/tests/testSyndication.py b/Products/CMFPlone/tests/testSyndication.py\nindex 88da13ded3..4dd52fe92a 100644\n--- a/Products/CMFPlone/tests/testSyndication.py\n+++ b/Products/CMFPlone/tests/testSyndication.py\n@@ -3,12 +3,12 @@\n from AccessControl import Unauthorized\n from plone.app.textfield import RichTextValue\n from Products.CMFPlone.tests import PloneTestCase\n-from Products.CMFPlone.interfaces.syndication import IFeedSettings\n-from Products.CMFPlone.interfaces.syndication import ISiteSyndicationSettings\n+from plone.base.interfaces.syndication import IFeedSettings\n+from plone.base.interfaces.syndication import ISiteSyndicationSettings\n from plone.registry.interfaces import IRegistry\n from zope.component import getUtility\n from zExceptions import NotFound\n-from Products.CMFPlone.interfaces.syndication import IFeed\n+from plone.base.interfaces.syndication import IFeed\n from Products.CMFPlone.browser.syndication.adapters import DexterityItem\n \n \ndiff --git a/Products/CMFPlone/tests/testURLTool.py b/Products/CMFPlone/tests/testURLTool.py\nindex 78d38eb845..a84271b953 100644\n--- a/Products/CMFPlone/tests/testURLTool.py\n+++ b/Products/CMFPlone/tests/testURLTool.py\n@@ -6,7 +6,7 @@\n \n from Acquisition import aq_parent\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import ILoginSchema\n+from plone.base.interfaces import ILoginSchema\n from zope.component import getSiteManager\n \n \ndiff --git a/Products/CMFPlone/tests/test_defaultpage.py b/Products/CMFPlone/tests/test_defaultpage.py\nindex bcf66c7aff..9b4e86fe11 100644\n--- a/Products/CMFPlone/tests/test_defaultpage.py\n+++ b/Products/CMFPlone/tests/test_defaultpage.py\n@@ -3,6 +3,7 @@\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n+\n import unittest\n \n \n@@ -22,7 +23,7 @@ def test_get_default_page_step_1(self):\n         self.folder.setDefaultPage(\'d1\')\n         self.folder.invokeFactory(\'Document\', \'index_html\', title="Doc 2")\n \n-        from Products.CMFPlone.defaultpage import get_default_page\n+        from plone.base.defaultpage import get_default_page\n         self.assertEqual(\'index_html\', get_default_page(self.folder))\n \n     def test_get_default_page_step_2(self):\n@@ -55,7 +56,7 @@ def test_get_default_page_step_2(self):\n         )\n \n         # now test since we\'re sure everythings set up correctly\n-        from Products.CMFPlone.defaultpage import get_default_page\n+        from plone.base.defaultpage import get_default_page\n         self.assertEqual(\'d1\', get_default_page(self.folder))\n \n         # missing here:\n@@ -67,7 +68,7 @@ def test_get_default_page_step_3_1(self):\n         #    acquisition in place\n         # 3.1 look for a content in the container with the id, no acquisition!\n         self.folder.invokeFactory(\'Document\', \'d1\', title="Doc 1")\n-        from Products.CMFPlone.defaultpage import get_default_page\n+        from plone.base.defaultpage import get_default_page\n \n         # set doc d1 must work\n         self.folder.default_page = \'d1\'\n@@ -97,7 +98,7 @@ def test_get_default_page_step_3_2(self):\n         # 3.2 look for a content at portal, with acquisition\n         self.portal.invokeFactory(\'Document\', \'d1\', title="Doc 1")\n         self.folder.default_page = \'d1\'\n-        from Products.CMFPlone.defaultpage import get_default_page\n+        from plone.base.defaultpage import get_default_page\n \n         # now it must acquire from portal\n         self.assertEqual(\'d1\', get_default_page(self.folder))\n@@ -109,5 +110,5 @@ def test_get_default_page_step_4(self):\n         registry[\'plone.default_page\'] = [\'d1\']\n         self.folder.invokeFactory(\'Document\', \'d1\', title="Doc 1")\n \n-        from Products.CMFPlone.defaultpage import get_default_page\n+        from plone.base.defaultpage import get_default_page\n         self.assertEqual(\'d1\', get_default_page(self.folder))\ndiff --git a/Products/CMFPlone/tests/test_doctests.py b/Products/CMFPlone/tests/test_doctests.py\nindex 14c5b17659..3c2a3596b8 100644\n--- a/Products/CMFPlone/tests/test_doctests.py\n+++ b/Products/CMFPlone/tests/test_doctests.py\n@@ -1,24 +1,9 @@\n from unittest import TestSuite\n \n import doctest\n-import re\n-\n-\n-class Py23DocChecker(doctest.OutputChecker):\n-\n-    def check_output(self, want, got, optionflags):\n-        # TODO: Fix tests to check Python 3 style\n-        want = re.sub("u\'(.*?)\'", "\'\\\\1\'", want)\n-        return doctest.OutputChecker.check_output(self, want, got, optionflags)\n-\n \n def test_suite():\n     suites = (\n-        doctest.DocFileSuite(\n-            \'messages.txt\',\n-            package=\'Products.CMFPlone.tests\',\n-            checker=Py23DocChecker(),\n-            ),\n         doctest.DocTestSuite(\'Products.CMFPlone.TranslationServiceTool\'),\n         doctest.DocTestSuite(\'Products.CMFPlone.utils\'),\n         doctest.DocTestSuite(\'Products.CMFPlone.workflow\'),\ndiff --git a/Products/CMFPlone/tests/test_l18nl10n.py b/Products/CMFPlone/tests/test_l18nl10n.py\ndeleted file mode 100644\nindex 3a56a06736..0000000000\n--- a/Products/CMFPlone/tests/test_l18nl10n.py\n+++ /dev/null\n@@ -1,24 +0,0 @@\n-""" Unit tests for Products.CMFPlone.i18nl10n module. """\n-\n-import unittest\n-\n-class BasicI18nl10nTests(unittest.TestCase):\n-\n-    def test_regexp_dt_format_string_regexp(self):\n-        from Products.CMFPlone.i18nl10n import _dt_format_string_regexp\n-        dt_string = "%Y-%m-%d %H:%M"\n-        locales_string = "${H}:${M}"\n-\n-        # test for strftime format string\n-        self.assertTrue(bool(_dt_format_string_regexp.findall(dt_string)))\n-        self.assertFalse(bool(_dt_format_string_regexp.findall(locales_string)))\n-\n-    def test_regexp_interp_regex(self):\n-        from Products.CMFPlone.i18nl10n import _interp_regex\n-        locales_string = "${H}:${M}"\n-\n-        # test for locale string elements:\n-        self.assertEquals(\n-            _interp_regex.findall(locales_string),\n-            ["${H}", "${M}"],\n-        )\ndiff --git a/Products/CMFPlone/tests/test_mails.py b/Products/CMFPlone/tests/test_mails.py\nindex 431a616899..751718a6c1 100644\n--- a/Products/CMFPlone/tests/test_mails.py\n+++ b/Products/CMFPlone/tests/test_mails.py\n@@ -4,7 +4,7 @@\n from plone.app.testing import PloneSandboxLayer\n from plone.registry.interfaces import IRegistry\n from plone.testing import layered\n-from Products.CMFPlone.interfaces.controlpanel import IMailSchema\n+from plone.base.interfaces.controlpanel import IMailSchema\n from zope.component import getUtility\n \n import doctest\ndiff --git a/Products/CMFPlone/tests/test_patternsettings.py b/Products/CMFPlone/tests/test_patternsettings.py\nindex 6872091250..9a70e75faa 100644\n--- a/Products/CMFPlone/tests/test_patternsettings.py\n+++ b/Products/CMFPlone/tests/test_patternsettings.py\n@@ -1,7 +1,7 @@\n from plone.app.testing import login\n from plone.app.testing import TEST_USER_NAME\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import ITinyMCESchema\n+from plone.base.interfaces import ITinyMCESchema\n from Products.CMFPlone.patterns.view import PatternsSettingsView\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\ndiff --git a/Products/CMFPlone/tests/test_redirect_after_login.py b/Products/CMFPlone/tests/test_redirect_after_login.py\nindex 4c0aec9a81..821e762be8 100644\n--- a/Products/CMFPlone/tests/test_redirect_after_login.py\n+++ b/Products/CMFPlone/tests/test_redirect_after_login.py\n@@ -2,8 +2,8 @@\n from plone.app.testing import TEST_USER_PASSWORD\n from plone.testing.zope import Browser\n from Products.CMFPlone.browser.login.login import LoginForm\n-from Products.CMFPlone.interfaces import IInitialLogin\n-from Products.CMFPlone.interfaces import IRedirectAfterLogin\n+from plone.base.interfaces import IInitialLogin\n+from plone.base.interfaces import IRedirectAfterLogin\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from zope.interface import implementer\ndiff --git a/Products/CMFPlone/tests/test_robots_txt.py b/Products/CMFPlone/tests/test_robots_txt.py\nindex 23a54ba1fb..e7f73966b5 100644\n--- a/Products/CMFPlone/tests/test_robots_txt.py\n+++ b/Products/CMFPlone/tests/test_robots_txt.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import ISiteSchema\n+from plone.base.interfaces import ISiteSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/tests/test_sitelogo.py b/Products/CMFPlone/tests/test_sitelogo.py\nindex 1f1f8340f9..0f07e67ac0 100644\n--- a/Products/CMFPlone/tests/test_sitelogo.py\n+++ b/Products/CMFPlone/tests/test_sitelogo.py\n@@ -1,4 +1,4 @@\n-from Products.CMFPlone.interfaces import ISiteSchema\n+from plone.base.interfaces import ISiteSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from plone.registry.interfaces import IRegistry\n from zope.component import getUtility\ndiff --git a/Products/CMFPlone/tests/test_utils.py b/Products/CMFPlone/tests/test_utils.py\nindex 64ef7ea302..17e66a96fc 100644\n--- a/Products/CMFPlone/tests/test_utils.py\n+++ b/Products/CMFPlone/tests/test_utils.py\n@@ -6,11 +6,9 @@\n from Products.CMFCore.tests.base.content import SIMPLE_STRUCTUREDTEXT\n from Products.CMFCore.tests.base.content import SIMPLE_XHTML\n from Products.CMFCore.tests.base.content import STX_WITH_HTML\n-from Products.CMFPlone.interfaces import ISiteSchema\n+from plone.base.interfaces import ISiteSchema\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n from zope.component import getUtility\n-from zope.interface import alsoProvides\n-from plone.subrequest.interfaces import ISubRequest\n \n import unittest\n \n@@ -36,159 +34,6 @@ def test_bodyfinder(self):\n         self.assertEqual(bodyfinder(STX_WITH_HTML),\n                          \'<p>Hello world, I am Bruce.</p>\')\n \n-    def test_safe_encode(self):\n-        """safe_encode should always encode unicode to the specified encoding.\n-        """\n-        from Products.CMFPlone.utils import safe_encode\n-        self.assertEqual(safe_encode(\'sp\xc3\xa4m\'), b\'sp\\xc3\\xa4m\')\n-        self.assertEqual(safe_encode(\'sp\xc3\xa4m\', \'utf-8\'), b\'sp\\xc3\\xa4m\')\n-        self.assertEqual(safe_encode(\'sp\xc3\xa4m\', encoding=\'latin-1\'), b\'sp\\xe4m\')\n-\n-    def test_get_top_request(self):\n-        """If in a subrequest, ``get_top_request`` should always return the top\n-        most request.\n-        """\n-        from Products.CMFPlone.utils import get_top_request\n-\n-        class MockRequest:\n-\n-            def __init__(self, parent_request=None):\n-                self._dict = {}\n-                if parent_request:\n-                    self._dict[\'PARENT_REQUEST\'] = parent_request\n-                    alsoProvides(self, ISubRequest)\n-\n-            def get(self, key, default=None):\n-                return self._dict.get(key, default)\n-\n-        req0 = MockRequest()\n-        req1 = MockRequest(req0)\n-        req2 = MockRequest(req1)\n-\n-        self.assertEqual(get_top_request(req0), req0)\n-        self.assertEqual(get_top_request(req1), req0)\n-        self.assertEqual(get_top_request(req2), req0)\n-\n-    def test_get_top_site_from_url(self):\n-        """Unit test for ``get_top_site_from_url`` with context and request\n-        mocks.\n-\n-        Test content structure:\n-        /approot/PloneSite/folder/SubSite/folder\n-        PloneSite and SubSite implement ISite\n-        """\n-        from plone.app.content.browser.contents import get_top_site_from_url\n-        from urllib.parse import urlparse\n-        from zope.component.interfaces import ISite\n-\n-        class MockContext:\n-            vh_url = \'http://nohost\'\n-            vh_root = \'\'\n-\n-            def __init__(self, physical_path):\n-                self.physical_path = physical_path\n-                if self.physical_path.split(\'/\')[-1] in (\'PloneSite\', \'SubSite\'):  # noqa\n-                    alsoProvides(self, ISite)\n-\n-            @property\n-            def id(self):\n-                return self.physical_path.split(\'/\')[-1]\n-\n-            def absolute_url(self):\n-                return self.vh_url + self.physical_path[len(self.vh_root):] or \'/\'  # noqa\n-\n-            def restrictedTraverse(self, path):\n-                return MockContext(self.vh_root + path)\n-\n-        class MockRequest:\n-            vh_url = \'http://nohost\'\n-            vh_root = \'\'\n-\n-            def physicalPathFromURL(self, url):\n-                # Return the physical path from a URL.\n-                # The outer right \'/\' is not part of the path.\n-                path = self.vh_root + urlparse(url).path.rstrip(\'/\')\n-                return path.split(\'/\')\n-\n-        # NO VIRTUAL HOSTING\n-\n-        req = MockRequest()\n-\n-        # Case 1:\n-        ctx = MockContext(\'/approot/PloneSite\')\n-        self.assertEqual(get_top_site_from_url(ctx, req).id, \'PloneSite\')\n-\n-        # Case 2\n-        ctx = MockContext(\'/approot/PloneSite/folder\')\n-        self.assertEqual(get_top_site_from_url(ctx, req).id, \'PloneSite\')\n-\n-        # Case 3:\n-        ctx = MockContext(\'/approot/PloneSite/folder/SubSite/folder\')\n-        self.assertEqual(get_top_site_from_url(ctx, req).id, \'PloneSite\')\n-\n-        # Case 4, using unicode paths accidentially:\n-        ctx = MockContext(\'/approot/PloneSite/folder/SubSite/folder\')\n-        self.assertEqual(get_top_site_from_url(ctx, req).id, \'PloneSite\')\n-\n-        # VIRTUAL HOSTING ON SUBSITE\n-\n-        req = MockRequest()\n-        req.vh_root = \'/approot/PloneSite/folder/SubSite\'\n-\n-        # Case 4:\n-        ctx = MockContext(\'/approot/PloneSite/folder/SubSite\')\n-        ctx.vh_root = \'/approot/PloneSite/folder/SubSite\'\n-        self.assertEqual(get_top_site_from_url(ctx, req).id, \'SubSite\')\n-\n-        # Case 5:\n-        ctx = MockContext(\'/approot/PloneSite/folder/SubSite/folder\')\n-        ctx.vh_root = \'/approot/PloneSite/folder/SubSite\'\n-        self.assertEqual(get_top_site_from_url(ctx, req).id, \'SubSite\')\n-\n-    def test_human_readable_size_int(self):\n-        from Products.CMFPlone.utils import human_readable_size\n-\n-        self.assertEqual(human_readable_size(0), \'0 KB\')\n-        self.assertEqual(human_readable_size(1), \'1 KB\')\n-        size = 1000\n-        self.assertEqual(human_readable_size(size), \'1 KB\')\n-        size += 24\n-        self.assertEqual(human_readable_size(size), \'1.0 KB\')\n-        size += 512\n-        self.assertEqual(human_readable_size(size), \'1.5 KB\')\n-        size *= 1024\n-        self.assertEqual(human_readable_size(size), \'1.5 MB\')\n-        size *= 1024\n-        self.assertEqual(human_readable_size(size), \'1.5 GB\')\n-        size *= 1024\n-        self.assertEqual(human_readable_size(size), \'1536.0 GB\')\n-\n-    def test_human_readable_size_float(self):\n-        from Products.CMFPlone.utils import human_readable_size\n-\n-        self.assertEqual(human_readable_size(0.), \'0 KB\')\n-        self.assertEqual(human_readable_size(1.), \'1 KB\')\n-        size = 1000.\n-        self.assertEqual(human_readable_size(size), \'1 KB\')\n-        size += 24.\n-        self.assertEqual(human_readable_size(size), \'1.0 KB\')\n-        size += 512.\n-        self.assertEqual(human_readable_size(size), \'1.5 KB\')\n-        size *= 1024.\n-        self.assertEqual(human_readable_size(size), \'1.5 MB\')\n-        size *= 1024.\n-        self.assertEqual(human_readable_size(size), \'1.5 GB\')\n-        size *= 1024.\n-        self.assertEqual(human_readable_size(size), \'1536.0 GB\')\n-\n-    def test_human_readable_size_special(self):\n-        from Products.CMFPlone.utils import human_readable_size\n-\n-        self.assertEqual(human_readable_size(None), \'0 KB\')\n-        self.assertEqual(human_readable_size(\'\'), \'0 KB\')\n-        self.assertEqual(human_readable_size(\'barney\'), \'barney\')\n-\n-\n class LogoTests(unittest.TestCase):\n \n     layer = PRODUCTS_CMFPLONE_INTEGRATION_TESTING\ndiff --git a/Products/CMFPlone/traversal.py b/Products/CMFPlone/traversal.py\nindex 77f33f36a0..8b56473dc4 100644\n--- a/Products/CMFPlone/traversal.py\n+++ b/Products/CMFPlone/traversal.py\n@@ -2,7 +2,7 @@\n from zope.component import queryUtility\n from plone.resource.interfaces import IResourceDirectory\n from plone.resource.interfaces import IUniqueResourceRequest\n-from Products.CMFPlone.interfaces.resources import (\n+from plone.base.interfaces.resources import (\n     OVERRIDE_RESOURCE_DIRECTORY_NAME)\n from Products.PageTemplates.Expressions import getEngine\n from Products.PageTemplates.Expressions import getTrustedEngine\ndiff --git a/Products/CMFPlone/utils.py b/Products/CMFPlone/utils.py\nindex 1e3c29fe07..87a3df71b3 100644\n--- a/Products/CMFPlone/utils.py\n+++ b/Products/CMFPlone/utils.py\n@@ -12,56 +12,48 @@\n from App.ImageFile import ImageFile\n from DateTime import DateTime\n from DateTime.interfaces import DateTimeError\n+from html import escape\n from OFS.CopySupport import CopyError\n from os.path import abspath\n from os.path import join\n from os.path import split\n+from plone.base import PloneMessageFactory as _\n+from plone.base import utils as base_utils\n from plone.i18n.normalizer.interfaces import IIDNormalizer\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.permissions import AddPortalContent\n from Products.CMFCore.permissions import ManageUsers\n-from Products.CMFCore.utils import ToolInit as CMFCoreToolInit\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone import PloneMessageFactory as _\n+from Products.CMFCore.utils import ToolInit as CMFCoreToolInit\n from Products.CMFPlone import bbb\n-from Products.CMFPlone.interfaces.controlpanel import IImagingSchema\n-from Products.CMFPlone.interfaces.siteroot import IPloneSiteRoot\n-from Products.CMFPlone.log import log\n-from Products.CMFPlone.log import log_deprecated\n-from Products.CMFPlone.log import log_exc\n-from urllib.parse import urlparse\n+from plone.base.interfaces.controlpanel import IImagingSchema\n+from plone.base.interfaces.siteroot import IPloneSiteRoot\n+from Products.CMFPlone.log import log  # noqa - for python scripts\n+from Products.CMFPlone.log import log_exc  # noqa - for python scripts\n+from Products.CMFPlone.log import log_deprecated  # noqa - for python scripts\n from ZODB.POSException import ConflictError\n-from zope import schema\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n from zope.component import providedBy\n from zope.component import queryUtility\n from zope.component.hooks import getSite\n-from zope.component.interfaces import ISite\n from zope.deferredimport import deprecated as deprecated_import\n-from zope.deprecation import deprecated\n+from zope.deprecation import deprecate\n+from zope.deprecation import deprecated  # noqa\n from zope.i18n import translate\n from zope.interface import implementedBy\n from zope.publisher.interfaces.browser import IBrowserRequest\n \n-import json\n import OFS\n import pkg_resources\n import re\n import sys\n import transaction\n-import warnings\n import zope.interface\n \n-try:\n-    from html import escape\n-except ImportError:\n-    from cgi import escape\n \n-try:\n-    from types import ClassType\n-except ImportError:\n-    ClassType = type\n+# todo: check below if this is still needed\n+ClassType = type\n \n if bbb.HAS_ZSERVER:\n     from webdav.interfaces import IWriteLock\n@@ -69,11 +61,33 @@\n     from OFS.interfaces import IWriteLock\n \n deprecated_import(\n-    "Import from Products.CMFPlone.defaultpage instead",\n-    isDefaultPage=\'Products.CMFPlone.defaultpage:check_default_page_via_view\',\n-    getDefaultPage=\'Products.CMFPlone.defaultpage:get_default_page_via_view\',\n+    "Import from plone.base.utils instead (will be removed in Plone 7)",\n+    human_readable_size=\'plone.base.utils:human_readable_size\',\n+    safeToInt=\'plone.base.utils:safeToInt\',\n+    safe_bytes=\'plone.base.utils:safe_bytes\',\n+    safe_text=\'plone.base.utils:safe_text\',\n+    get_installer=\'plone.base.utils:get_installer\',\n+    get_top_request=\'plone.base.utils:get_top_request\',\n+    get_top_site_from_url=\'plone.base.utils:get_top_site_from_url\',\n )\n \n+@deprecate("Use plone.base.utils.safe_bytes instead (will be removed in Plone 7)")\n+def safe_encode(*args, **kwargs):\n+    return base_utils.safe_bytes(*args, **kwargs)\n+\n+@deprecate("Use plone.base.utils.safe_text instead (will be removed in Plone 7)")\n+def safe_unicode(*args, **kwargs):\n+    return base_utils.safe_text(*args, **kwargs)\n+\n+@deprecate("Use plone.base.utils.safe_text instead (will be removed in Plone 7)")\n+def safe_nativestring(value, encoding=\'utf-8\'):\n+    """Convert a value to str in py2 and to text in py3\n+    """\n+    if isinstance(value, bytes):\n+        value = base_utils.safe_text(value, encoding)\n+    return value\n+\n+\n security = ModuleSecurityInfo()\n security.declarePrivate(\'deprecated\')\n security.declarePrivate(\'abspath\')\n@@ -96,8 +110,6 @@\n QUALITY_DEFAULT = 88\n pattern = re.compile(r\'^(.*)\\s+(\\d+)\\s*:\\s*(\\d+)$\')\n \n-# Log methods\n-log_exc  # pyflakes.  Keep this, as someone may import it.\n _marker = []\n \n \n@@ -212,13 +224,6 @@ def pretty_title_or_id(context, obj, empty_value=_marker):\n     return empty_value\n \n \n-def getSiteEncoding(context):\n-    return \'utf-8\'\n-deprecated(\'getSiteEncoding\',\n-           (\'`getSiteEncoding` is deprecated. Plone only supports UTF-8 \'\n-            \'currently. This method always returns "utf-8"\'))\n-\n-\n def getEmptyTitle(context, translated=True):\n     """Returns string to be used for objects with no title or id"""\n     # The default is an extra fancy unicode elipsis\n@@ -337,32 +342,6 @@ def _createObjectByType(type_name, container, id, *args, **kw):\n     return fti._constructInstance(container, id, *args, **kw)\n \n \n-def safeToInt(value, default=0):\n-    """Convert value to integer or just return 0 if we can\'t\n-\n-       >>> safeToInt(45)\n-       45\n-\n-       >>> safeToInt("42")\n-       42\n-\n-       >>> safeToInt("spam")\n-       0\n-\n-       >>> safeToInt([])\n-       0\n-\n-       >>> safeToInt(None)\n-       0\n-\n-       >>> safeToInt(None, default=-1)\n-       -1\n-    """\n-    try:\n-        return int(value)\n-    except (ValueError, TypeError):\n-        return default\n-\n release_levels = (\'alpha\', \'beta\', \'candidate\', \'final\')\n rl_abbr = {\'a\': \'alpha\', \'b\': \'beta\', \'rc\': \'candidate\'}\n \n@@ -393,7 +372,7 @@ def versionTupleFromString(v_str):\n     else:\n         groups = list(match.groups())\n         for i in (0, 1, 2, 4):\n-            groups[i] = safeToInt(groups[i])\n+            groups[i] = base_utils.safeToInt(groups[i])\n         if groups[3] is None:\n             groups[3] = \'final\'\n         elif groups[3] in rl_abbr.keys():\n@@ -414,7 +393,7 @@ def transaction_note(note):\n     if (len(T.description) + len(note)) >= 65533:\n         log(\'Transaction note too large omitting %s\' % str(note))\n     else:\n-        T.note(safe_unicode(note))\n+        T.note(base_utils.safe_text(note))\n \n \n def base_hasattr(obj, name):\n@@ -438,67 +417,11 @@ def safe_callable(obj):\n     if safe_hasattr(obj, \'__class__\'):\n         if safe_hasattr(obj, \'__call__\'):\n             return True\n-        else:\n-            return isinstance(obj, ClassType)\n-    else:\n-        return callable(obj)\n-\n-\n-def safe_text(value, encoding=\'utf-8\'):\n-    """Converts a value to text, even it is already a text string.\n+        return isinstance(obj, ClassType)\n+    return callable(obj)\n \n-        >>> from Products.CMFPlone.utils import safe_unicode\n-        >>> test_bytes = u\'\\u01b5\'.encode(\'utf-8\')\n-        >>> safe_unicode(\'spam\') == u\'spam\'\n-        True\n-        >>> safe_unicode(b\'spam\') == u\'spam\'\n-        True\n-        >>> safe_unicode(u\'spam\') == u\'spam\'\n-        True\n-        >>> safe_unicode(u\'spam\'.encode(\'utf-8\')) == u\'spam\'\n-        True\n-        >>> safe_unicode(test_bytes) == u\'\\u01b5\'\n-        True\n-        >>> safe_unicode(u\'\\xc6\\xb5\'.encode(\'iso-8859-1\')) == u\'\\u01b5\'\n-        True\n-        >>> safe_unicode(test_bytes, encoding=\'ascii\') == u\'\\u01b5\'\n-        True\n-        >>> safe_unicode(1) == 1\n-        True\n-        >>> print(safe_unicode(None))\n-        None\n-    """\n-    if isinstance(value, str):\n-        return value\n-    elif isinstance(value, bytes):\n-        try:\n-            value = str(value, encoding)\n-        except (UnicodeDecodeError):\n-            value = value.decode(\'utf-8\', \'replace\')\n-    return value\n-\n-\n-safe_unicode = safe_text\n-\n-\n-def safe_bytes(value, encoding=\'utf-8\'):\n-    """Convert text to bytes of the specified encoding.\n-    """\n-    if isinstance(value, str):\n-        value = value.encode(encoding)\n-    return value\n \n \n-safe_encode = safe_bytes\n-\n-\n-def safe_nativestring(value, encoding=\'utf-8\'):\n-    """Convert a value to str in py2 and to text in py3\n-    """\n-    if isinstance(value, bytes):\n-        value = safe_text(value, encoding)\n-    return value\n-\n \n def tuplize(value):\n     if isinstance(value, tuple):\n@@ -522,10 +445,12 @@ def flatten(interfaces):\n     return tuple(flattened)\n \n \n+@deprecate("Use zope.interface.directlyProvides instead (will be removed in Plone 7)")\n def directlyProvides(obj, *interfaces):\n     return zope.interface.directlyProvides(obj, *interfaces)\n \n \n+@deprecate("Use zope.interface.classImplements instead (will be removed in Plone 7)")\n def classImplements(class_, *interfaces):\n     return zope.interface.classImplements(class_, *interfaces)\n \n@@ -543,10 +468,7 @@ def webdav_enabled(obj, container):\n     """WebDAV check used in externalEditorEnabled.py"""\n \n     # Object implements lock interface\n-    if IWriteLock.providedBy(obj):\n-        return True\n-\n-    return False\n+    return IWriteLock.providedBy(obj)\n \n \n # Copied \'unrestricted_rename\' from ATCT migrations to avoid\n@@ -623,13 +545,6 @@ def _getSecurity(klass, create=True):\n     return security\n \n \n-def isLinked(obj):\n-    """Check if the given content object is linked from another one."""\n-    log_deprecated("utils.isLinked is deprecated, you should use plone.app.linkintegrity.utils.hasIncomingLinks")  # noqa\n-    from plone.app.linkintegrity.utils import hasIncomingLinks\n-    return hasIncomingLinks(obj)\n-\n-\n def set_own_login_name(member, loginname):\n     """Allow the user to set his/her own login name.\n \n@@ -656,25 +571,6 @@ def ajax_load_url(url):\n     return url\n \n \n-def validate_json(value):\n-    warnings.warn(\n-        \'Moved to the only place where it was used in order to avoid circular \'\n-        \'imports between ./interfaces/* and ./utils. Now relocated to \'\n-        \'"./interfaces/controlpanel.py"\',\n-        DeprecationWarning)\n-    try:\n-        json.loads(value)\n-    except ValueError as exc:\n-        class JSONError(schema.ValidationError):\n-            __doc__ = _("Must be empty or a valid JSON-formatted "\n-                        "configuration \xe2\x80\x93 ${message}.", mapping={\n-                            \'message\': str(exc)})\n-\n-        raise JSONError(value)\n-\n-    return True\n-\n-\n def bodyfinder(text):\n     """ Return body or unchanged text if no body tags found.\n \n@@ -720,19 +616,13 @@ def getQuality():\n     return QUALITY_DEFAULT\n \n \n-def getRetinaScales():\n-    warnings.warn(\n-        \'use getHighPixelDensityScales instead\',\n-        DeprecationWarning)\n-    return getHighPixelDensityScales()\n-\n def getHighPixelDensityScales():\n     from plone.namedfile.utils import getHighPixelDensityScales as func\n     return func()\n \n \n def getSiteLogo(site=None):\n-    from Products.CMFPlone.interfaces import ISiteSchema\n+    from plone.base.interfaces import ISiteSchema\n     from plone.formwidget.namedfile.converter import b64decode_file\n     if site is None:\n         site = getSite()\n@@ -744,64 +634,9 @@ def getSiteLogo(site=None):\n         filename, data = b64decode_file(settings.site_logo)\n         return \'{}/@@site-logo/{}\'.format(\n             site_url, filename)\n-    else:\n-        return \'%s/logo.png\' % site_url\n-\n-\n-def get_installer(context, request=None):\n-    if request is None:\n-        request = aq_get(context, \'REQUEST\', None)\n-    view = getMultiAdapter((context, request), name=\'installer\')\n-    return view\n+    return \'%s/logo.png\' % site_url\n \n \n-def get_top_request(request):\n-    """Get highest request from a subrequest.\n-    """\n-\n-    def _top_request(req):\n-        parent_request = req.get(\'PARENT_REQUEST\', None)\n-        return _top_request(parent_request) if parent_request else req\n-    return _top_request(request)\n-\n-\n-def get_top_site_from_url(context, request):\n-    """Find the top-most site, which is still in the url path.\n-\n-    If the current context is within a subsite within a PloneSiteRoot and no\n-    virtual hosting is in place, the PloneSiteRoot is returned.\n-    When at the same context but in a virtual hosting environment with the\n-    virtual host root pointing to the subsite, it returns the subsite instead\n-    the PloneSiteRoot.\n-\n-    For this given content structure:\n-\n-    /Plone/Subsite\n-\n-    It should return the following in these cases:\n-\n-    - No virtual hosting, URL path: /Plone, Returns: Plone Site\n-    - No virtual hosting, URL path: /Plone/Subsite, Returns: Plone\n-    - Virtual hosting roots to Subsite, URL path: /, Returns: Subsite\n-    """\n-    site = getSite()\n-    try:\n-        url_path = urlparse(context.absolute_url()).path.split(\'/\')\n-        for idx in range(len(url_path)):\n-            _path = \'/\'.join(url_path[:idx + 1]) or \'/\'\n-            site_path = \'/\'.join(request.physicalPathFromURL(_path)) or \'/\'\n-            _site = context.restrictedTraverse(site_path)\n-            if ISite.providedBy(_site):\n-                break\n-        if _site:\n-            site = _site\n-    except (ValueError, AttributeError):\n-        # On error, just return getSite.\n-        # Refs: https://github.com/plone/plone.app.content/issues/103\n-        # Also, TestRequest doesn\'t have physicalPathFromURL\n-        pass\n-    return site\n-\n \n def _safe_format(inst, method):\n     """Use our SafeFormatter that uses guarded_getattr for attribute access.\n@@ -812,34 +647,6 @@ def _safe_format(inst, method):\n     return SafeFormatter(inst).safe_format\n \n \n-SIZE_CONST = {\'KB\': 1024, \'MB\': 1024 * 1024, \'GB\': 1024 * 1024 * 1024}\n-SIZE_ORDER = (\'GB\', \'MB\', \'KB\')\n-\n-\n-def human_readable_size(size):\n-    """ Get a human readable size string. """\n-    smaller = SIZE_ORDER[-1]\n-\n-    # if the size is a float, then make it an int\n-    # happens for large files\n-    try:\n-        size = int(size)\n-    except (ValueError, TypeError):\n-        pass\n-\n-    if not size:\n-        return \'0 %s\' % smaller\n-\n-    if isinstance(size, int):\n-        if size < SIZE_CONST[smaller]:\n-            return \'1 %s\' % smaller\n-        for c in SIZE_ORDER:\n-            if size // SIZE_CONST[c] > 0:\n-                break\n-        return \'{:.1f} {}\'.format(float(size / float(SIZE_CONST[c])), c)\n-    return size\n-\n-\n def check_id(\n         context, id=None, required=0, alternative_id=None, contained_by=None,\n         **kwargs):\ndiff --git a/Products/CMFPlone/workflow.py b/Products/CMFPlone/workflow.py\nindex ac939662d3..199fdfbc40 100644\n--- a/Products/CMFPlone/workflow.py\n+++ b/Products/CMFPlone/workflow.py\n@@ -2,7 +2,7 @@\n from zope.component import adapter\n from Acquisition import aq_base\n from Products.CMFCore.interfaces import IWorkflowTool\n-from Products.CMFPlone.interfaces import IWorkflowChain\n+from plone.base.interfaces import IWorkflowChain\n \n \n @adapter(Interface, IWorkflowTool)\ndiff --git a/news/3395.feature b/news/3395.feature\nnew file mode 100644\nindex 0000000000..556da519af\n--- /dev/null\n+++ b/news/3395.feature\n@@ -0,0 +1,5 @@\n+Implement `PLIP 3395 <https://github.com/plone/Products.CMFPlone/issue/3395>`_.\n+Moves all interfaces, whole defaultpage, i18nl10, batch, permissions and parts of utils to ``plone.base``.\n+For all imports are in place with deprecation warnings.\n+Along with this a bunch of long deprecated functions, imports and similar in above packages were removed.\n+[jensens]\n\\ No newline at end of file\ndiff --git a/news/3485.breaking b/news/3485.breaking\nnew file mode 100644\nindex 0000000000..dde718747b\n--- /dev/null\n+++ b/news/3485.breaking\n@@ -0,0 +1,2 @@\n+Remove `deprecated.zcml` and `meta-bbb.zcml`.\n+[jensens, pbauer]\ndiff --git a/setup.py b/setup.py\nindex c35df13c7f..bcb23355d5 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -67,6 +67,7 @@\n         \'plone.app.vocabularies\',\n         \'plone.app.workflow\',\n         \'plone.batching\',\n+        \'plone.base\',\n         \'plone.browserlayer >= 2.1.5\',\n         \'plone.contentrules\',\n         \'plone.folder\',\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-04-07T18:16:31+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/636edcc897a0c98ec7dfad0778962fb5a7cf752d

Merge pull request #3484 from plone/maurits-listUpgrades

MigrationTool: use standard listUpgrades code from GenericSetup 2.2.0

Files changed:
A news/220.bugfix
M Products/CMFPlone/MigrationTool.py
M setup.py

b"diff --git a/Products/CMFPlone/MigrationTool.py b/Products/CMFPlone/MigrationTool.py\nindex 2fcbb215e0..7b56c901ee 100644\n--- a/Products/CMFPlone/MigrationTool.py\n+++ b/Products/CMFPlone/MigrationTool.py\n@@ -260,22 +260,7 @@ def listUpgrades(self):\n         # using a newer plone.app.upgrade version should not give problems.\n         setup = getToolByName(self, 'portal_setup')\n         fs_version = self.getFileSystemVersion()\n-        steps = setup.listUpgrades(_DEFAULT_PROFILE)\n-        upgrades = []\n-        for upgrade_step in steps:\n-            if isinstance(upgrade_step, list):\n-                # This is a nested list of upgrade steps,\n-                # which must have the same destination.\n-                # So take the first one.\n-                if not upgrade_step:\n-                    # Empty list, not sure if this can happen in practice.\n-                    continue\n-                dest = upgrade_step[0].get('sdest')\n-            else:\n-                dest = upgrade_step.get('sdest')\n-            if dest > fs_version and dest != 'all':\n-                break\n-            upgrades.append(upgrade_step)\n+        upgrades = setup.listUpgrades(_DEFAULT_PROFILE, dest=fs_version)\n         return upgrades\n \n     security.declareProtected(ManagePortal, 'upgrade')\ndiff --git a/news/220.bugfix b/news/220.bugfix\nnew file mode 100644\nindex 0000000000..3213db05c6\n--- /dev/null\n+++ b/news/220.bugfix\n@@ -0,0 +1,3 @@\n+MigrationTool: use more standard ``listUpgrades`` code from GenericSetup 2.2.0.\n+I ported our special logic there.\n+[maurits]\ndiff --git a/setup.py b/setup.py\nindex efbfef47b1..bcb23355d5 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -95,7 +95,7 @@\n         'Products.CMFUid',\n         'Products.DCWorkflow',\n         'Products.ExtendedPathIndex',\n-        'Products.GenericSetup >= 2.0',\n+        'Products.GenericSetup >= 2.2.0',\n         'Products.isurlinportal',\n         'Products.MimetypesRegistry',\n         'Products.PlonePAS',\n"

