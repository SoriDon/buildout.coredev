Repository: plone.app.robotframework


Branch: refs/heads/master
Date: 2022-05-06T19:42:48+03:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.app.robotframework/commit/86abf1dc29d26edfd0f85e64d828426fe0433cd8

Add TEST_SCOPE_WSGI_SERVER_FIXTURE and use it in PLONE_ROBOT_TESTING layer (used by Volto Cypress tests

Files changed:
M src/plone/app/robotframework/testing.py

b'diff --git a/src/plone/app/robotframework/testing.py b/src/plone/app/robotframework/testing.py\nindex 284556b..8e1a7d9 100644\n--- a/src/plone/app/robotframework/testing.py\n+++ b/src/plone/app/robotframework/testing.py\n@@ -18,6 +18,7 @@\n from plone.app.testing import ploneSite\n from plone.testing import Layer\n from plone.testing import zope as zope_testing\n+from plone.testing.zope import WSGIServer\n from plone.testing.zope import WSGI_SERVER_FIXTURE\n from Products.MailHost.interfaces import IMailHost\n from robot.libraries.BuiltIn import BuiltIn\n@@ -136,6 +137,30 @@ def tearDown(self):\n #     />\n #\n \n+class TestScopeWSGIServer(WSGIServer):\n+\n+    # Layer where WSGI server is shutdown on testTearDown to prevent requests\n+    # being processed between tests (which could lead to unexpected database\n+    # state).\n+\n+    # Still starts with WSGI server being started at first on suite setUp\n+    # for convenience and similar "RobotServer" experience to the default\n+    # layer.\n+\n+    def testSetUp(self):\n+        if hasattr(self, "server") and self.server.was_shutdown:\n+            super(TestScopeWSGIServer, self).setUp()\n+\n+    def tearDown(self):\n+        pass\n+\n+    def testTearDown(self):\n+        super(TestScopeWSGIServer, self).tearDown()\n+\n+\n+TEST_SCOPE_WSGI_SERVER_FIXTURE = TestScopeWSGIServer()\n+\n+\n RobotRemote = type(\n     "RobotRemote",\n     (\n@@ -285,7 +310,7 @@ def __nonzero__(x):\n     bases=(\n         PLONE_ROBOT_FIXTURE,\n         REMOTE_LIBRARY_BUNDLE_FIXTURE,\n-        WSGI_SERVER_FIXTURE,\n+        TEST_SCOPE_WSGI_SERVER_FIXTURE,\n     ),\n     name="Plone:Robot",\n )\n'

Repository: plone.app.robotframework


Branch: refs/heads/master
Date: 2022-05-06T19:42:59+03:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.app.robotframework/commit/a2f7c6b28a8fc5cfb75c5d291cbb40c72dc6a577

Add changelog entry

Files changed:
A news/131.bugfix

b'diff --git a/news/131.bugfix b/news/131.bugfix\nnew file mode 100644\nindex 0000000..ed1a042\n--- /dev/null\n+++ b/news/131.bugfix\n@@ -0,0 +1,2 @@\n+Fix test layer used for Volto Cypress test to not accept requests between tests.\n+[datakurre]\n'

Repository: plone.app.robotframework


Branch: refs/heads/master
Date: 2022-05-07T17:17:48+03:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.app.robotframework/commit/f6b98c33f476395fdec02d71f49de9797725e86b

Restore PLONE_ROBOT_TESTING and create new VOLTO_ROBOT_TESTING with TEST_SCOPE_WSGI_SERVER_FIXTURE

Files changed:
M news/131.bugfix
M src/plone/app/robotframework/testing.py

b'diff --git a/news/131.bugfix b/news/131.bugfix\nindex ed1a042..c165d64 100644\n--- a/news/131.bugfix\n+++ b/news/131.bugfix\n@@ -1,2 +1,2 @@\n-Fix test layer used for Volto Cypress test to not accept requests between tests.\n+Fix Volto Cypress tests by adding a new functional test layer plone.app.robotframework.testing.VOLTO_ROBOT_TESTING layer, which does not not accept requests between tests cases.\n [datakurre]\ndiff --git a/src/plone/app/robotframework/testing.py b/src/plone/app/robotframework/testing.py\nindex 8e1a7d9..f68c25a 100644\n--- a/src/plone/app/robotframework/testing.py\n+++ b/src/plone/app/robotframework/testing.py\n@@ -310,11 +310,20 @@ def __nonzero__(x):\n     bases=(\n         PLONE_ROBOT_FIXTURE,\n         REMOTE_LIBRARY_BUNDLE_FIXTURE,\n-        TEST_SCOPE_WSGI_SERVER_FIXTURE,\n+        WSGI_SERVER_FIXTURE,\n     ),\n     name="Plone:Robot",\n )\n \n+VOLTO_ROBOT_TESTING = FunctionalTesting(\n+    bases=(\n+        PLONE_ROBOT_FIXTURE,\n+        REMOTE_LIBRARY_BUNDLE_FIXTURE,\n+        TEST_SCOPE_WSGI_SERVER_FIXTURE,\n+    ),\n+    name="Volto:Robot",\n+)\n+\n \n if HAS_SPEAKJS:\n \n'

Repository: plone.app.robotframework


Branch: refs/heads/master
Date: 2022-05-07T19:34:31+03:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.app.robotframework/commit/6ee97db88eec6ec3baa0c0a9f9d05ea7ae08b305

Try to ensure that WSGI server has stopped before returning from TestScopeWSGIServer testTearDown

Files changed:
M src/plone/app/robotframework/testing.py

b'diff --git a/src/plone/app/robotframework/testing.py b/src/plone/app/robotframework/testing.py\nindex 8e1a7d9..aef7bcc 100644\n--- a/src/plone/app/robotframework/testing.py\n+++ b/src/plone/app/robotframework/testing.py\n@@ -156,6 +156,12 @@ def tearDown(self):\n \n     def testTearDown(self):\n         super(TestScopeWSGIServer, self).tearDown()\n+        # Try to wait until server no longer responds.\n+        if hasattr(self, "server"):\n+            for i in range(10):\n+                # There is implicit 0.3 second sleep per try.\n+                if not self.server.wait(0):\n+                    return\n \n \n TEST_SCOPE_WSGI_SERVER_FIXTURE = TestScopeWSGIServer()\n'

Repository: plone.app.robotframework


Branch: refs/heads/master
Date: 2022-05-07T19:39:48+03:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.app.robotframework/commit/4426060206264a0628b5340aaa8c8a784f27301b

Try giving test scope WSGI SERVER fixture PLONE_FIXTURE as base to ensure it is called after PLONE_FIXTURE

Files changed:
M src/plone/app/robotframework/testing.py

b'diff --git a/src/plone/app/robotframework/testing.py b/src/plone/app/robotframework/testing.py\nindex aef7bcc..8d8a6dd 100644\n--- a/src/plone/app/robotframework/testing.py\n+++ b/src/plone/app/robotframework/testing.py\n@@ -137,7 +137,7 @@ def tearDown(self):\n #     />\n #\n \n-class TestScopeWSGIServer(WSGIServer):\n+class WSGIServerTestScope(WSGIServer):\n \n     # Layer where WSGI server is shutdown on testTearDown to prevent requests\n     # being processed between tests (which could lead to unexpected database\n@@ -147,15 +147,17 @@ class TestScopeWSGIServer(WSGIServer):\n     # for convenience and similar "RobotServer" experience to the default\n     # layer.\n \n+    bases = (PLONE_FIXTURE,)\n+\n     def testSetUp(self):\n         if hasattr(self, "server") and self.server.was_shutdown:\n-            super(TestScopeWSGIServer, self).setUp()\n+            super(WSGIServerTestScope, self).setUp()\n \n     def tearDown(self):\n         pass\n \n     def testTearDown(self):\n-        super(TestScopeWSGIServer, self).tearDown()\n+        super(WSGIServerTestScope, self).tearDown()\n         # Try to wait until server no longer responds.\n         if hasattr(self, "server"):\n             for i in range(10):\n@@ -164,7 +166,7 @@ def testTearDown(self):\n                     return\n \n \n-TEST_SCOPE_WSGI_SERVER_FIXTURE = TestScopeWSGIServer()\n+WSGI_SERVER_TEST_SCOPE_FIXTURE = WSGIServerTestScope()\n \n \n RobotRemote = type(\n@@ -316,7 +318,7 @@ def __nonzero__(x):\n     bases=(\n         PLONE_ROBOT_FIXTURE,\n         REMOTE_LIBRARY_BUNDLE_FIXTURE,\n-        TEST_SCOPE_WSGI_SERVER_FIXTURE,\n+        WSGI_SERVER_TEST_SCOPE_FIXTURE,\n     ),\n     name="Plone:Robot",\n )\n'

Repository: plone.app.robotframework


Branch: refs/heads/master
Date: 2022-05-07T20:08:19+03:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.app.robotframework/commit/51dc3e713de86de9c728de8a48eb15898d8efd89

Move WSgiServerTestScope fixture to better position

Files changed:
M src/plone/app/robotframework/testing.py

b'diff --git a/src/plone/app/robotframework/testing.py b/src/plone/app/robotframework/testing.py\nindex 8d8a6dd..9f5d7b9 100644\n--- a/src/plone/app/robotframework/testing.py\n+++ b/src/plone/app/robotframework/testing.py\n@@ -137,37 +137,6 @@ def tearDown(self):\n #     />\n #\n \n-class WSGIServerTestScope(WSGIServer):\n-\n-    # Layer where WSGI server is shutdown on testTearDown to prevent requests\n-    # being processed between tests (which could lead to unexpected database\n-    # state).\n-\n-    # Still starts with WSGI server being started at first on suite setUp\n-    # for convenience and similar "RobotServer" experience to the default\n-    # layer.\n-\n-    bases = (PLONE_FIXTURE,)\n-\n-    def testSetUp(self):\n-        if hasattr(self, "server") and self.server.was_shutdown:\n-            super(WSGIServerTestScope, self).setUp()\n-\n-    def tearDown(self):\n-        pass\n-\n-    def testTearDown(self):\n-        super(WSGIServerTestScope, self).tearDown()\n-        # Try to wait until server no longer responds.\n-        if hasattr(self, "server"):\n-            for i in range(10):\n-                # There is implicit 0.3 second sleep per try.\n-                if not self.server.wait(0):\n-                    return\n-\n-\n-WSGI_SERVER_TEST_SCOPE_FIXTURE = WSGIServerTestScope()\n-\n \n RobotRemote = type(\n     "RobotRemote",\n@@ -314,6 +283,38 @@ def __nonzero__(x):\n     name="PloneRobot:Integration",\n )\n \n+\n+class WSGIServerTestScope(WSGIServer):\n+\n+    # Layer where WSGI server is shutdown on testTearDown to prevent requests\n+    # being processed between tests (which could lead to unexpected database\n+    # state).\n+\n+    # Still starts with WSGI server being started at first on suite setUp\n+    # for convenience and similar "RobotServer" experience to the default\n+    # layer.\n+\n+    bases = (PLONE_FIXTURE,)\n+\n+    def testSetUp(self):\n+        if hasattr(self, "server") and self.server.was_shutdown:\n+            super(WSGIServerTestScope, self).setUp()\n+\n+    def tearDown(self):\n+        pass\n+\n+    def testTearDown(self):\n+        super(WSGIServerTestScope, self).tearDown()\n+        # Try to wait until server no longer responds.\n+        if hasattr(self, "server"):\n+            for i in range(10):\n+                # There is implicit 0.3 second sleep per try.\n+                if not self.server.wait(0):\n+                    return\n+\n+\n+WSGI_SERVER_TEST_SCOPE_FIXTURE = WSGIServerTestScope()\n+\n PLONE_ROBOT_TESTING = FunctionalTesting(\n     bases=(\n         PLONE_ROBOT_FIXTURE,\n'

Repository: plone.app.robotframework


Branch: refs/heads/master
Date: 2022-05-08T07:25:26+03:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.app.robotframework/commit/6ac8cddd635f8a7e7a5f5324f8990506a5fdb12f

Add temporary debug prints

Files changed:
M src/plone/app/robotframework/server.py
M src/plone/app/robotframework/testing.py

b'diff --git a/src/plone/app/robotframework/server.py b/src/plone/app/robotframework/server.py\nindex 0015186..4076ff9 100644\n--- a/src/plone/app/robotframework/server.py\n+++ b/src/plone/app/robotframework/server.py\n@@ -316,6 +316,7 @@ def zodb_setup(self, layer_dotted_name=None):\n         from zope.testrunner.runner import order_by_bases\n \n         layers = order_by_bases([self.zope_layer])\n+        print(WAIT(layers))\n         for layer in layers:\n             if hasattr(layer, "testSetUp"):\n                 if HAS_VERBOSE_CONSOLE:\ndiff --git a/src/plone/app/robotframework/testing.py b/src/plone/app/robotframework/testing.py\nindex 9f5d7b9..2a4e9bc 100644\n--- a/src/plone/app/robotframework/testing.py\n+++ b/src/plone/app/robotframework/testing.py\n@@ -10,6 +10,7 @@\n from plone.app.robotframework.remote import RemoteLibraryLayer\n from plone.app.robotframework.server import Zope2ServerRemote\n from plone.app.robotframework.users import Users\n+from plone.app.robotframework.server import WAIT\n from plone.app.testing import applyProfile\n from plone.app.testing import FunctionalTesting\n from plone.app.testing import IntegrationTesting\n@@ -137,7 +138,6 @@ def tearDown(self):\n #     />\n #\n \n-\n RobotRemote = type(\n     "RobotRemote",\n     (\n@@ -296,14 +296,21 @@ class WSGIServerTestScope(WSGIServer):\n \n     bases = (PLONE_FIXTURE,)\n \n+    def setUp(self):\n+        print(WAIT("WSGIServerTestScope:setUp"))\n+        super(WSGIServerTestScope, self).setUp()\n+\n     def testSetUp(self):\n+        print(WAIT("WSGIServerTestScope:testSetUp"))\n         if hasattr(self, "server") and self.server.was_shutdown:\n             super(WSGIServerTestScope, self).setUp()\n \n     def tearDown(self):\n+        print(WAIT("WSGIServerTestScope:tearDown"))\n         pass\n \n     def testTearDown(self):\n+        print(WAIT("WSGIServerTestScope:testTearDown"))\n         super(WSGIServerTestScope, self).tearDown()\n         # Try to wait until server no longer responds.\n         if hasattr(self, "server"):\n'

Repository: plone.app.robotframework


Branch: refs/heads/master
Date: 2022-05-09T10:27:21+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.robotframework/commit/c2cc09662602e0d327dcd1d252b7ce0653e91b31

Merge branch 'volto_3294' into volto_3294_new_fixture

Files changed:
M src/plone/app/robotframework/server.py
M src/plone/app/robotframework/testing.py

b'diff --git a/src/plone/app/robotframework/server.py b/src/plone/app/robotframework/server.py\nindex 0015186..4076ff9 100644\n--- a/src/plone/app/robotframework/server.py\n+++ b/src/plone/app/robotframework/server.py\n@@ -316,6 +316,7 @@ def zodb_setup(self, layer_dotted_name=None):\n         from zope.testrunner.runner import order_by_bases\n \n         layers = order_by_bases([self.zope_layer])\n+        print(WAIT(layers))\n         for layer in layers:\n             if hasattr(layer, "testSetUp"):\n                 if HAS_VERBOSE_CONSOLE:\ndiff --git a/src/plone/app/robotframework/testing.py b/src/plone/app/robotframework/testing.py\nindex f68c25a..67cadd2 100644\n--- a/src/plone/app/robotframework/testing.py\n+++ b/src/plone/app/robotframework/testing.py\n@@ -10,6 +10,7 @@\n from plone.app.robotframework.remote import RemoteLibraryLayer\n from plone.app.robotframework.server import Zope2ServerRemote\n from plone.app.robotframework.users import Users\n+from plone.app.robotframework.server import WAIT\n from plone.app.testing import applyProfile\n from plone.app.testing import FunctionalTesting\n from plone.app.testing import IntegrationTesting\n@@ -137,30 +138,6 @@ def tearDown(self):\n #     />\n #\n \n-class TestScopeWSGIServer(WSGIServer):\n-\n-    # Layer where WSGI server is shutdown on testTearDown to prevent requests\n-    # being processed between tests (which could lead to unexpected database\n-    # state).\n-\n-    # Still starts with WSGI server being started at first on suite setUp\n-    # for convenience and similar "RobotServer" experience to the default\n-    # layer.\n-\n-    def testSetUp(self):\n-        if hasattr(self, "server") and self.server.was_shutdown:\n-            super(TestScopeWSGIServer, self).setUp()\n-\n-    def tearDown(self):\n-        pass\n-\n-    def testTearDown(self):\n-        super(TestScopeWSGIServer, self).tearDown()\n-\n-\n-TEST_SCOPE_WSGI_SERVER_FIXTURE = TestScopeWSGIServer()\n-\n-\n RobotRemote = type(\n     "RobotRemote",\n     (\n@@ -306,6 +283,45 @@ def __nonzero__(x):\n     name="PloneRobot:Integration",\n )\n \n+\n+class WSGIServerTestScope(WSGIServer):\n+\n+    # Layer where WSGI server is shutdown on testTearDown to prevent requests\n+    # being processed between tests (which could lead to unexpected database\n+    # state).\n+\n+    # Still starts with WSGI server being started at first on suite setUp\n+    # for convenience and similar "RobotServer" experience to the default\n+    # layer.\n+\n+    bases = (PLONE_FIXTURE,)\n+\n+    def setUp(self):\n+        print(WAIT("WSGIServerTestScope:setUp"))\n+        super(WSGIServerTestScope, self).setUp()\n+\n+    def testSetUp(self):\n+        print(WAIT("WSGIServerTestScope:testSetUp"))\n+        if hasattr(self, "server") and self.server.was_shutdown:\n+            super(WSGIServerTestScope, self).setUp()\n+\n+    def tearDown(self):\n+        print(WAIT("WSGIServerTestScope:tearDown"))\n+        pass\n+\n+    def testTearDown(self):\n+        print(WAIT("WSGIServerTestScope:testTearDown"))\n+        super(WSGIServerTestScope, self).tearDown()\n+        # Try to wait until server no longer responds.\n+        if hasattr(self, "server"):\n+            for i in range(10):\n+                # There is implicit 0.3 second sleep per try.\n+                if not self.server.wait(0):\n+                    return\n+\n+\n+WSGI_SERVER_TEST_SCOPE_FIXTURE = WSGIServerTestScope()\n+\n PLONE_ROBOT_TESTING = FunctionalTesting(\n     bases=(\n         PLONE_ROBOT_FIXTURE,\n'

Repository: plone.app.robotframework


Branch: refs/heads/master
Date: 2022-05-09T10:28:30+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.robotframework/commit/bc8ddf23affdbca2c2f10249812d1a3f35711370

Merge pull request #132 from plone/volto_3294_new_fixture

Restore PLONE_ROBOT_TESTING and create new VOLTO_ROBOT_TESTING with T…

Files changed:
M news/131.bugfix
M src/plone/app/robotframework/testing.py

b'diff --git a/news/131.bugfix b/news/131.bugfix\nindex ed1a042..c165d64 100644\n--- a/news/131.bugfix\n+++ b/news/131.bugfix\n@@ -1,2 +1,2 @@\n-Fix test layer used for Volto Cypress test to not accept requests between tests.\n+Fix Volto Cypress tests by adding a new functional test layer plone.app.robotframework.testing.VOLTO_ROBOT_TESTING layer, which does not not accept requests between tests cases.\n [datakurre]\ndiff --git a/src/plone/app/robotframework/testing.py b/src/plone/app/robotframework/testing.py\nindex 2a4e9bc..67cadd2 100644\n--- a/src/plone/app/robotframework/testing.py\n+++ b/src/plone/app/robotframework/testing.py\n@@ -326,11 +326,20 @@ def testTearDown(self):\n     bases=(\n         PLONE_ROBOT_FIXTURE,\n         REMOTE_LIBRARY_BUNDLE_FIXTURE,\n-        WSGI_SERVER_TEST_SCOPE_FIXTURE,\n+        WSGI_SERVER_FIXTURE,\n     ),\n     name="Plone:Robot",\n )\n \n+VOLTO_ROBOT_TESTING = FunctionalTesting(\n+    bases=(\n+        PLONE_ROBOT_FIXTURE,\n+        REMOTE_LIBRARY_BUNDLE_FIXTURE,\n+        TEST_SCOPE_WSGI_SERVER_FIXTURE,\n+    ),\n+    name="Volto:Robot",\n+)\n+\n \n if HAS_SPEAKJS:\n \n'

Repository: plone.app.robotframework


Branch: refs/heads/master
Date: 2022-05-09T10:29:52+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.robotframework/commit/6ad15547d4a5bc6a9b52897eabf94a3e370af72b

Merge pull request #131 from plone/volto_3294

Add TEST_SCOPE_WSGI_SERVER_FIXTURE and use it in PLONE_ROBOT_TESTING …

Files changed:
A news/131.bugfix
M src/plone/app/robotframework/server.py
M src/plone/app/robotframework/testing.py

b'diff --git a/news/131.bugfix b/news/131.bugfix\nnew file mode 100644\nindex 0000000..c165d64\n--- /dev/null\n+++ b/news/131.bugfix\n@@ -0,0 +1,2 @@\n+Fix Volto Cypress tests by adding a new functional test layer plone.app.robotframework.testing.VOLTO_ROBOT_TESTING layer, which does not not accept requests between tests cases.\n+[datakurre]\ndiff --git a/src/plone/app/robotframework/server.py b/src/plone/app/robotframework/server.py\nindex 0015186..4076ff9 100644\n--- a/src/plone/app/robotframework/server.py\n+++ b/src/plone/app/robotframework/server.py\n@@ -316,6 +316,7 @@ def zodb_setup(self, layer_dotted_name=None):\n         from zope.testrunner.runner import order_by_bases\n \n         layers = order_by_bases([self.zope_layer])\n+        print(WAIT(layers))\n         for layer in layers:\n             if hasattr(layer, "testSetUp"):\n                 if HAS_VERBOSE_CONSOLE:\ndiff --git a/src/plone/app/robotframework/testing.py b/src/plone/app/robotframework/testing.py\nindex 284556b..67cadd2 100644\n--- a/src/plone/app/robotframework/testing.py\n+++ b/src/plone/app/robotframework/testing.py\n@@ -10,6 +10,7 @@\n from plone.app.robotframework.remote import RemoteLibraryLayer\n from plone.app.robotframework.server import Zope2ServerRemote\n from plone.app.robotframework.users import Users\n+from plone.app.robotframework.server import WAIT\n from plone.app.testing import applyProfile\n from plone.app.testing import FunctionalTesting\n from plone.app.testing import IntegrationTesting\n@@ -18,6 +19,7 @@\n from plone.app.testing import ploneSite\n from plone.testing import Layer\n from plone.testing import zope as zope_testing\n+from plone.testing.zope import WSGIServer\n from plone.testing.zope import WSGI_SERVER_FIXTURE\n from Products.MailHost.interfaces import IMailHost\n from robot.libraries.BuiltIn import BuiltIn\n@@ -281,6 +283,45 @@ def __nonzero__(x):\n     name="PloneRobot:Integration",\n )\n \n+\n+class WSGIServerTestScope(WSGIServer):\n+\n+    # Layer where WSGI server is shutdown on testTearDown to prevent requests\n+    # being processed between tests (which could lead to unexpected database\n+    # state).\n+\n+    # Still starts with WSGI server being started at first on suite setUp\n+    # for convenience and similar "RobotServer" experience to the default\n+    # layer.\n+\n+    bases = (PLONE_FIXTURE,)\n+\n+    def setUp(self):\n+        print(WAIT("WSGIServerTestScope:setUp"))\n+        super(WSGIServerTestScope, self).setUp()\n+\n+    def testSetUp(self):\n+        print(WAIT("WSGIServerTestScope:testSetUp"))\n+        if hasattr(self, "server") and self.server.was_shutdown:\n+            super(WSGIServerTestScope, self).setUp()\n+\n+    def tearDown(self):\n+        print(WAIT("WSGIServerTestScope:tearDown"))\n+        pass\n+\n+    def testTearDown(self):\n+        print(WAIT("WSGIServerTestScope:testTearDown"))\n+        super(WSGIServerTestScope, self).tearDown()\n+        # Try to wait until server no longer responds.\n+        if hasattr(self, "server"):\n+            for i in range(10):\n+                # There is implicit 0.3 second sleep per try.\n+                if not self.server.wait(0):\n+                    return\n+\n+\n+WSGI_SERVER_TEST_SCOPE_FIXTURE = WSGIServerTestScope()\n+\n PLONE_ROBOT_TESTING = FunctionalTesting(\n     bases=(\n         PLONE_ROBOT_FIXTURE,\n@@ -290,6 +331,15 @@ def __nonzero__(x):\n     name="Plone:Robot",\n )\n \n+VOLTO_ROBOT_TESTING = FunctionalTesting(\n+    bases=(\n+        PLONE_ROBOT_FIXTURE,\n+        REMOTE_LIBRARY_BUNDLE_FIXTURE,\n+        TEST_SCOPE_WSGI_SERVER_FIXTURE,\n+    ),\n+    name="Volto:Robot",\n+)\n+\n \n if HAS_SPEAKJS:\n \n'

