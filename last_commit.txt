Repository: plone.app.layout


Branch: refs/heads/master
Date: 2023-04-27T10:41:58+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.layout/commit/acfe91c4faf23bd2cf278713a8ee534b0f2208f2

Deprecate moved getNavigationRoot/getNavigationRootObject`

Files changed:
A news/deprecate-navigationtroot.bugfix
M plone/app/layout/navigation/root.py

b'diff --git a/news/deprecate-navigationtroot.bugfix b/news/deprecate-navigationtroot.bugfix\nnew file mode 100644\nindex 00000000..a0eafd32\n--- /dev/null\n+++ b/news/deprecate-navigationtroot.bugfix\n@@ -0,0 +1,3 @@\n+Deprecate moved `getNavigationRoot` and `getNavigationRootObject` in `plone.app.layout.navigation.root`.\n+This was already moved earlier as `get_navigation_root` and `get_navigation_root_object` to `plone.base.navigationroot`.\n+[@jensens]\n\\ No newline at end of file\ndiff --git a/plone/app/layout/navigation/root.py b/plone/app/layout/navigation/root.py\nindex 0b7ca706..5a594727 100644\n--- a/plone/app/layout/navigation/root.py\n+++ b/plone/app/layout/navigation/root.py\n@@ -1,64 +1,11 @@\n-from Acquisition import aq_base\n-from Acquisition import aq_inner\n-from Acquisition import aq_parent\n-from plone.base.interfaces import INavigationRoot\n-from plone.registry.interfaces import IRegistry\n-from Products.CMFCore.utils import getToolByName\n-from zope.component import getUtility\n-from zope.component.hooks import getSite\n+from zope.deferredimport import deprecated\n \n \n-def getNavigationRoot(context, relativeRoot=None):\n-    """Get the path to the root of the navigation tree.\n-\n-    If a relativeRoot argument is provided, navigation root is computed from\n-    portal path and this relativeRoot.\n-\n-    If no relativeRoot argument is provided, and there is a root value set in\n-    portal_properties, navigation root path is computed from\n-    portal path and this root value.\n-\n-    IMPORTANT !!!\n-    Previous paragraphs imply relativeRoot is relative to the Plone portal.\n-\n-    Else, a root must be computed : loop from the context to the portal,\n-    through parents, looking for an object implementing INavigationRoot.\n-    Return the path of that root.\n-    """\n-    try:\n-        portal_url = getToolByName(context, "portal_url")\n-    except AttributeError:\n-        site = getSite()\n-        return "/".join(site.getPhysicalPath())\n-\n-    if relativeRoot is None:\n-        # fetch from portal_properties\n-        registry = getUtility(IRegistry)\n-        relativeRoot = registry.get("plone.root", None)\n-\n-    # if relativeRoot has a meaningful value,\n-    if relativeRoot and relativeRoot != "/":\n-        # use it\n-\n-        # while taking care of case where\n-        # relativeRoot is not starting with a \'/\'\n-        if relativeRoot[0] != "/":\n-            relativeRoot = "/" + relativeRoot\n-\n-        portalPath = portal_url.getPortalPath()\n-        return portalPath + relativeRoot\n-    else:\n-        # compute the root\n-        portal = portal_url.getPortalObject()\n-        root = getNavigationRootObject(context, portal)\n-        return "/".join(root.getPhysicalPath())\n-\n-\n-def getNavigationRootObject(context, portal):\n-    obj = context\n-    while not INavigationRoot.providedBy(obj) and aq_base(obj) is not aq_base(portal):\n-        parent = aq_parent(aq_inner(obj))\n-        if parent is None:\n-            return obj\n-        obj = parent\n-    return obj\n+deprecated(\n+    "Import as get_navigation_root from plone.base.navigationroot instead (will be removed in Plone 7)",\n+    getNavigationRoot="plone.base.navigationroot:get_navigation_root",\n+)\n+deprecated(\n+    "Import as get_navigation_root from plone.base.navigationroot instead (will be removed in Plone 7)",\n+    getNavigationRootObject="plone.base.navigationroot:get_navigation_root_object",\n+)\n'

Repository: plone.app.layout


Branch: refs/heads/master
Date: 2023-04-27T13:35:14+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.layout/commit/089dfe30563e7846cbdb9de5cd754a3fba734fea

test moved to plone.base

Files changed:
D plone/app/layout/navigation/tests/test_root.py

b'diff --git a/plone/app/layout/navigation/tests/test_root.py b/plone/app/layout/navigation/tests/test_root.py\ndeleted file mode 100644\nindex 27d7eb5a..00000000\n--- a/plone/app/layout/navigation/tests/test_root.py\n+++ /dev/null\n@@ -1,16 +0,0 @@\n-from plone.app.layout.navigation.root import getNavigationRootObject\n-from plone.app.layout.testing import INTEGRATION_TESTING\n-\n-import unittest\n-\n-\n-class NavigationRootTestCase(unittest.TestCase):\n-    layer = INTEGRATION_TESTING\n-\n-    def test_getNavigationRootObject_no_context(self):\n-        """\n-        If you don\'t know the context then you also don\'t know what the\n-        navigation root is.\n-        """\n-        self.portal = self.layer["portal"]\n-        self.assertEqual(None, getNavigationRootObject(None, self.portal))\n'

Repository: plone.app.layout


Branch: refs/heads/master
Date: 2023-04-27T13:35:24+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.layout/commit/504e19869db4dd2b6cab2a7d304a79c3453d5864

use import from plone.base

Files changed:
M plone/app/layout/globals/tests/test_portal.py
D plone/app/layout/navigation/tests/__init__.py

b'diff --git a/plone/app/layout/globals/tests/test_portal.py b/plone/app/layout/globals/tests/test_portal.py\nindex 682d139f..ada2fb33 100644\n--- a/plone/app/layout/globals/tests/test_portal.py\n+++ b/plone/app/layout/globals/tests/test_portal.py\n@@ -1,4 +1,3 @@\n-from plone.app.layout.navigation.root import getNavigationRoot\n from plone.app.layout.testing import INTEGRATION_TESTING\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n@@ -7,6 +6,7 @@\n from plone.base.interfaces import ISearchSchema\n from plone.base.interfaces import ISiteSchema\n from plone.i18n.interfaces import ILanguageSchema\n+from plone.base.navigationroot import get_navigation_root\n from plone.registry.interfaces import IRegistry\n from zope.component import getUtility\n from zope.event import notify\n@@ -53,7 +53,7 @@ def test_navigation_root(self):\n     def test_navigation_root_path(self):\n         self.assertEqual(self.view.navigation_root_path(), "/plone")\n         self.assertEqual(\n-            self.view.navigation_root_path(), getNavigationRoot(self.folder)\n+            self.view.navigation_root_path(), get_navigation_root(self.folder)\n         )\n \n         # mark a folder "between" self.folder and self.portal with\n@@ -62,7 +62,7 @@ def test_navigation_root_path(self):\n         zope.interface.alsoProvides(members, INavigationRoot)\n         view = members.restrictedTraverse("@@plone_portal_state")\n         self.assertEqual(view.navigation_root_path(), "/plone/Members")\n-        self.assertEqual(view.navigation_root_path(), getNavigationRoot(self.folder))\n+        self.assertEqual(view.navigation_root_path(), get_navigation_root(self.folder))\n \n     def test_navigation_root_title(self):\n         registry = getUtility(IRegistry)\n@@ -77,7 +77,7 @@ def test_navigation_root_title(self):\n         self.assertEqual(view.navigation_root_title(), members.Title())\n \n     def test_navigation_root_url(self):\n-        url = self.app.REQUEST.physicalPathToURL(getNavigationRoot(self.folder))\n+        url = self.app.REQUEST.physicalPathToURL(get_navigation_root(self.folder))\n         self.assertEqual(self.view.navigation_root_url(), "http://nohost/plone")\n         self.assertEqual(self.view.navigation_root_url(), url)\n \n@@ -88,7 +88,7 @@ def test_navigation_root_url(self):\n         zope.interface.alsoProvides(members, INavigationRoot)\n         view = members.restrictedTraverse("@@plone_portal_state")\n         self.assertEqual(view.navigation_root_url(), "http://nohost/plone/Members")\n-        url = self.app.REQUEST.physicalPathToURL(getNavigationRoot(members))\n+        url = self.app.REQUEST.physicalPathToURL(get_navigation_root(members))\n         self.assertEqual(view.navigation_root_url(), url)\n \n     def test_default_language(self):\ndiff --git a/plone/app/layout/navigation/tests/__init__.py b/plone/app/layout/navigation/tests/__init__.py\ndeleted file mode 100644\nindex e69de29b..00000000\n'

Repository: plone.app.layout


Branch: refs/heads/master
Date: 2023-04-27T11:39:31Z
Author: pre-commit-ci[bot] (pre-commit-ci[bot]) <66853113+pre-commit-ci[bot]@users.noreply.github.com>
Commit: https://github.com/plone/plone.app.layout/commit/93ea2986f688aaac209a90f772505e7a6038ecc4

[pre-commit.ci] auto fixes from pre-commit.com hooks

for more information, see https://pre-commit.ci

Files changed:
M plone/app/layout/globals/tests/test_portal.py

b'diff --git a/plone/app/layout/globals/tests/test_portal.py b/plone/app/layout/globals/tests/test_portal.py\nindex ada2fb33..c9adf624 100644\n--- a/plone/app/layout/globals/tests/test_portal.py\n+++ b/plone/app/layout/globals/tests/test_portal.py\n@@ -5,8 +5,8 @@\n from plone.base.interfaces import INavigationRoot\n from plone.base.interfaces import ISearchSchema\n from plone.base.interfaces import ISiteSchema\n-from plone.i18n.interfaces import ILanguageSchema\n from plone.base.navigationroot import get_navigation_root\n+from plone.i18n.interfaces import ILanguageSchema\n from plone.registry.interfaces import IRegistry\n from zope.component import getUtility\n from zope.event import notify\n'

Repository: plone.app.layout


Branch: refs/heads/master
Date: 2023-04-27T13:44:34+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.layout/commit/62091e844c55d7061e9e6b0766b17b5c1331ebaa

typo

Files changed:
M plone/app/layout/navigation/root.py

b'diff --git a/plone/app/layout/navigation/root.py b/plone/app/layout/navigation/root.py\nindex 5a594727..805b725e 100644\n--- a/plone/app/layout/navigation/root.py\n+++ b/plone/app/layout/navigation/root.py\n@@ -6,6 +6,6 @@\n     getNavigationRoot="plone.base.navigationroot:get_navigation_root",\n )\n deprecated(\n-    "Import as get_navigation_root from plone.base.navigationroot instead (will be removed in Plone 7)",\n+    "Import as get_navigation_root_object from plone.base.navigationroot instead (will be removed in Plone 7)",\n     getNavigationRootObject="plone.base.navigationroot:get_navigation_root_object",\n )\n'

Repository: plone.app.layout


Branch: refs/heads/master
Date: 2023-04-27T15:55:37+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.layout/commit/f50159367e32599722ed501b5d76585bc5687a60

Merge pull request #337 from plone/deprecate-navigation-root

Deprecate moved getNavigationRoot/getNavigationRootObject

Files changed:
A news/deprecate-navigationtroot.bugfix
M plone/app/layout/globals/tests/test_portal.py
M plone/app/layout/navigation/root.py
D plone/app/layout/navigation/tests/__init__.py
D plone/app/layout/navigation/tests/test_root.py

b'diff --git a/news/deprecate-navigationtroot.bugfix b/news/deprecate-navigationtroot.bugfix\nnew file mode 100644\nindex 00000000..a0eafd32\n--- /dev/null\n+++ b/news/deprecate-navigationtroot.bugfix\n@@ -0,0 +1,3 @@\n+Deprecate moved `getNavigationRoot` and `getNavigationRootObject` in `plone.app.layout.navigation.root`.\n+This was already moved earlier as `get_navigation_root` and `get_navigation_root_object` to `plone.base.navigationroot`.\n+[@jensens]\n\\ No newline at end of file\ndiff --git a/plone/app/layout/globals/tests/test_portal.py b/plone/app/layout/globals/tests/test_portal.py\nindex 682d139f..c9adf624 100644\n--- a/plone/app/layout/globals/tests/test_portal.py\n+++ b/plone/app/layout/globals/tests/test_portal.py\n@@ -1,4 +1,3 @@\n-from plone.app.layout.navigation.root import getNavigationRoot\n from plone.app.layout.testing import INTEGRATION_TESTING\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n@@ -6,6 +5,7 @@\n from plone.base.interfaces import INavigationRoot\n from plone.base.interfaces import ISearchSchema\n from plone.base.interfaces import ISiteSchema\n+from plone.base.navigationroot import get_navigation_root\n from plone.i18n.interfaces import ILanguageSchema\n from plone.registry.interfaces import IRegistry\n from zope.component import getUtility\n@@ -53,7 +53,7 @@ def test_navigation_root(self):\n     def test_navigation_root_path(self):\n         self.assertEqual(self.view.navigation_root_path(), "/plone")\n         self.assertEqual(\n-            self.view.navigation_root_path(), getNavigationRoot(self.folder)\n+            self.view.navigation_root_path(), get_navigation_root(self.folder)\n         )\n \n         # mark a folder "between" self.folder and self.portal with\n@@ -62,7 +62,7 @@ def test_navigation_root_path(self):\n         zope.interface.alsoProvides(members, INavigationRoot)\n         view = members.restrictedTraverse("@@plone_portal_state")\n         self.assertEqual(view.navigation_root_path(), "/plone/Members")\n-        self.assertEqual(view.navigation_root_path(), getNavigationRoot(self.folder))\n+        self.assertEqual(view.navigation_root_path(), get_navigation_root(self.folder))\n \n     def test_navigation_root_title(self):\n         registry = getUtility(IRegistry)\n@@ -77,7 +77,7 @@ def test_navigation_root_title(self):\n         self.assertEqual(view.navigation_root_title(), members.Title())\n \n     def test_navigation_root_url(self):\n-        url = self.app.REQUEST.physicalPathToURL(getNavigationRoot(self.folder))\n+        url = self.app.REQUEST.physicalPathToURL(get_navigation_root(self.folder))\n         self.assertEqual(self.view.navigation_root_url(), "http://nohost/plone")\n         self.assertEqual(self.view.navigation_root_url(), url)\n \n@@ -88,7 +88,7 @@ def test_navigation_root_url(self):\n         zope.interface.alsoProvides(members, INavigationRoot)\n         view = members.restrictedTraverse("@@plone_portal_state")\n         self.assertEqual(view.navigation_root_url(), "http://nohost/plone/Members")\n-        url = self.app.REQUEST.physicalPathToURL(getNavigationRoot(members))\n+        url = self.app.REQUEST.physicalPathToURL(get_navigation_root(members))\n         self.assertEqual(view.navigation_root_url(), url)\n \n     def test_default_language(self):\ndiff --git a/plone/app/layout/navigation/root.py b/plone/app/layout/navigation/root.py\nindex 0b7ca706..805b725e 100644\n--- a/plone/app/layout/navigation/root.py\n+++ b/plone/app/layout/navigation/root.py\n@@ -1,64 +1,11 @@\n-from Acquisition import aq_base\n-from Acquisition import aq_inner\n-from Acquisition import aq_parent\n-from plone.base.interfaces import INavigationRoot\n-from plone.registry.interfaces import IRegistry\n-from Products.CMFCore.utils import getToolByName\n-from zope.component import getUtility\n-from zope.component.hooks import getSite\n+from zope.deferredimport import deprecated\n \n \n-def getNavigationRoot(context, relativeRoot=None):\n-    """Get the path to the root of the navigation tree.\n-\n-    If a relativeRoot argument is provided, navigation root is computed from\n-    portal path and this relativeRoot.\n-\n-    If no relativeRoot argument is provided, and there is a root value set in\n-    portal_properties, navigation root path is computed from\n-    portal path and this root value.\n-\n-    IMPORTANT !!!\n-    Previous paragraphs imply relativeRoot is relative to the Plone portal.\n-\n-    Else, a root must be computed : loop from the context to the portal,\n-    through parents, looking for an object implementing INavigationRoot.\n-    Return the path of that root.\n-    """\n-    try:\n-        portal_url = getToolByName(context, "portal_url")\n-    except AttributeError:\n-        site = getSite()\n-        return "/".join(site.getPhysicalPath())\n-\n-    if relativeRoot is None:\n-        # fetch from portal_properties\n-        registry = getUtility(IRegistry)\n-        relativeRoot = registry.get("plone.root", None)\n-\n-    # if relativeRoot has a meaningful value,\n-    if relativeRoot and relativeRoot != "/":\n-        # use it\n-\n-        # while taking care of case where\n-        # relativeRoot is not starting with a \'/\'\n-        if relativeRoot[0] != "/":\n-            relativeRoot = "/" + relativeRoot\n-\n-        portalPath = portal_url.getPortalPath()\n-        return portalPath + relativeRoot\n-    else:\n-        # compute the root\n-        portal = portal_url.getPortalObject()\n-        root = getNavigationRootObject(context, portal)\n-        return "/".join(root.getPhysicalPath())\n-\n-\n-def getNavigationRootObject(context, portal):\n-    obj = context\n-    while not INavigationRoot.providedBy(obj) and aq_base(obj) is not aq_base(portal):\n-        parent = aq_parent(aq_inner(obj))\n-        if parent is None:\n-            return obj\n-        obj = parent\n-    return obj\n+deprecated(\n+    "Import as get_navigation_root from plone.base.navigationroot instead (will be removed in Plone 7)",\n+    getNavigationRoot="plone.base.navigationroot:get_navigation_root",\n+)\n+deprecated(\n+    "Import as get_navigation_root_object from plone.base.navigationroot instead (will be removed in Plone 7)",\n+    getNavigationRootObject="plone.base.navigationroot:get_navigation_root_object",\n+)\ndiff --git a/plone/app/layout/navigation/tests/__init__.py b/plone/app/layout/navigation/tests/__init__.py\ndeleted file mode 100644\nindex e69de29b..00000000\ndiff --git a/plone/app/layout/navigation/tests/test_root.py b/plone/app/layout/navigation/tests/test_root.py\ndeleted file mode 100644\nindex 27d7eb5a..00000000\n--- a/plone/app/layout/navigation/tests/test_root.py\n+++ /dev/null\n@@ -1,16 +0,0 @@\n-from plone.app.layout.navigation.root import getNavigationRootObject\n-from plone.app.layout.testing import INTEGRATION_TESTING\n-\n-import unittest\n-\n-\n-class NavigationRootTestCase(unittest.TestCase):\n-    layer = INTEGRATION_TESTING\n-\n-    def test_getNavigationRootObject_no_context(self):\n-        """\n-        If you don\'t know the context then you also don\'t know what the\n-        navigation root is.\n-        """\n-        self.portal = self.layer["portal"]\n-        self.assertEqual(None, getNavigationRootObject(None, self.portal))\n'

