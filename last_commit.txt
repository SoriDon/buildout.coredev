Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2023-12-22T23:02:16+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.multilingual/commit/3c685cd38d1f42f4b74281fe90912701bc92a76e

Configuring with plone/meta

Files changed:
A .flake8
A .github/workflows/meta.yml
A news/dd37b9f9.internal
M .editorconfig
M .gitignore
M .meta.toml
M .pre-commit-config.yaml
M pyproject.toml
M tox.ini

b'diff --git a/.editorconfig b/.editorconfig\nindex b4158b89d..a267528c9 100644\n--- a/.editorconfig\n+++ b/.editorconfig\n@@ -1,5 +1,6 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n #\n # EditorConfig Configuration file, for more details see:\n # http://EditorConfig.org\n@@ -32,8 +33,21 @@ indent_size = 4\n # 2 space indentation\n indent_size = 2\n \n+[*.{json,jsonl,js,jsx,ts,tsx,css,less,scss,html}]  # Frontend development\n+# 2 space indentation\n+indent_size = 2\n+\n [{Makefile,.gitmodules}]\n # Tab indentation (no size specified, but view as 4 spaces)\n indent_style = tab\n indent_size = unset\n tab_width = unset\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [editorconfig]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.flake8 b/.flake8\nnew file mode 100644\nindex 000000000..38918f42f\n--- /dev/null\n+++ b/.flake8\n@@ -0,0 +1,22 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+[flake8]\n+doctests = 1\n+ignore =\n+    # black takes care of line length\n+    E501,\n+    # black takes care of where to break lines\n+    W503,\n+    # black takes care of spaces within slicing (list[:])\n+    E203,\n+    # black takes care of spaces after commas\n+    E231,\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [flake8]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.github/workflows/meta.yml b/.github/workflows/meta.yml\nnew file mode 100644\nindex 000000000..d8e3814d7\n--- /dev/null\n+++ b/.github/workflows/meta.yml\n@@ -0,0 +1,28 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+name: Meta\n+on:\n+  push:\n+    branches:\n+      - master\n+      - main\n+  pull_request:\n+    branches:\n+      - master\n+      - main\n+  workflow_dispatch:\n+\n+jobs:\n+  qa:\n+    uses: plone/meta/.github/workflows/qa.yml@main\n+  test:\n+    uses: plone/meta/.github/workflows/test.yml@main\n+  coverage:\n+    uses: plone/meta/.github/workflows/coverage.yml@main\n+  dependencies:\n+    uses: plone/meta/.github/workflows/dependencies.yml@main\n+  release-ready:\n+    uses: plone/meta/.github/workflows/release_ready.yml@main\n+  circular:\n+    uses: plone/meta/.github/workflows/circular.yml@main\ndiff --git a/.gitignore b/.gitignore\nindex 3a7251581..5515d9128 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -1,46 +1,52 @@\n-*.pyc\n-*.egg\n+# Generated from:\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+# python related\n *.egg-info\n-*.mo\n-\n-# Directories\n-/eggs/*\n-/parts/*\n-/bin/*\n-/extras/*\n-/develop-eggs/*\n-/var/*\n-/build/*\n-/dist/*\n-/docs/_build\n-/coverage\n-\n-# Sublime Text\n-.codeintel/*\n-MKcodeintel\n-\n-# buildout\n+*.pyc\n+*.pyo\n+\n+# tools related\n+build/\n+.coverage\n+coverage.xml\n+dist/\n+docs/_build\n+__pycache__/\n+.tox\n+.vscode/\n+node_modules/\n+\n+# venv / buildout related\n+bin/\n+develop-eggs/\n+eggs/\n+.eggs/\n+etc/\n .installed.cfg\n+include/\n+lib/\n+lib64\n .mr.developer.cfg\n-\n-# eclipse\n-.project\n-.pydevproject\n-.settings\n-\n-# Mac\n-.DS_Store\n-\n-# Emacs\n-.emacs.desktop*\n-\n-# Virtualenv\n-/lib64/\n-/lib/\n-/include/\n-/local/\n-.Python\n-\n-# tests\n-/test_acceptance/*\n-robot_*\n+parts/\n+pyvenv.cfg\n+var/\n+local.cfg\n+\n+# mxdev\n+/instance/\n+/.make-sentinels/\n+/*-mxdev.txt\n+/reports/\n+/sources/\n+/venv/\n+.installed.txt\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [gitignore]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.meta.toml b/.meta.toml\nindex b66417080..4604a1622 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -1,5 +1,9 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [meta]\n template = "default"\n-commit-id = "11f0db91"\n+commit-id = "cfffba8c"\n+\n+[pyproject]\n+codespell_ignores = "pres"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex 3cdb1cc5e..6a1bb388f 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -1,5 +1,6 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n ci:\n     autofix_prs: false\n     autoupdate_schedule: monthly\n@@ -22,16 +23,40 @@ repos:\n     rev: 3.1.0\n     hooks:\n     -   id: zpretty\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  zpretty_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/PyCQA/flake8\n     rev: 6.1.0\n     hooks:\n     -   id: flake8\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  flake8_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/codespell-project/codespell\n     rev: v2.2.6\n     hooks:\n     -   id: codespell\n         additional_dependencies:\n           - tomli\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  codespell_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/mgedmin/check-manifest\n     rev: "0.49"\n     hooks:\n@@ -40,3 +65,20 @@ repos:\n     rev: "4.2"\n     hooks:\n     -   id: pyroma\n+-   repo: https://github.com/mgedmin/check-python-versions\n+    rev: "0.22.0"\n+    hooks:\n+    -   id: check-python-versions\n+        args: [\'--only\', \'setup.py,pyproject.toml\']\n+-   repo: https://github.com/collective/i18ndude\n+    rev: "6.0.0"\n+    hooks:\n+    -   id: i18ndude\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/news/dd37b9f9.internal b/news/dd37b9f9.internal\nnew file mode 100644\nindex 000000000..c08f53991\n--- /dev/null\n+++ b/news/dd37b9f9.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 78409e007..879954518 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,8 +1,9 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [tool.towncrier]\n-filename = "CHANGES.rst"\n directory = "news/"\n+filename = "CHANGES.rst"\n title_format = "{version} ({project_date})"\n underlines = ["-", ""]\n \n@@ -36,31 +37,121 @@ directory = "tests"\n name = "Tests"\n showcontent = true\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  towncrier_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.isort]\n profile = "plone"\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  isort_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.black]\n target-version = ["py38"]\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  black_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n+[tool.codespell]\n+ignore-words-list = "discreet,pres"\n+skip = "*.po,"\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  codespell_ignores = "foo,bar"\n+#  codespell_skip = "*.po,*.map,package-lock.json"\n+##\n+\n [tool.dependencychecker]\n Zope = [\n   # Zope own provided namespaces\n   \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n   \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n   \'Zope2\', \'webdav\', \'zmi\',\n+  # ExtensionClass own provided namespaces\n+  \'ExtensionClass\', \'ComputedAttribute\', \'MethodObject\',\n   # Zope dependencies\n-  \'Acquisition\', \'DateTime\', \'transaction\', \'zExceptions\', \'ZODB\', \'zope.component\',\n-  \'zope.configuration\', \'zope.container\', \'zope.deferredimport\', \'zope.event\',\n-  \'zope.exceptions\', \'zope.globalrequest\', \'zope.i18n\', \'zope.i18nmessageid\',\n-  \'zope.interface\', \'zope.lifecycleevent\', \'zope.location\', \'zope.publisher\',\n-  \'zope.schema\', \'zope.security\', \'zope.site\', \'zope.traversing\', \'AccessControl\',\n+  \'AccessControl\', \'Acquisition\', \'AuthEncoding\', \'beautifulsoup4\', \'BTrees\',\n+  \'cffi\', \'Chameleon\', \'DateTime\', \'DocumentTemplate\',\n+  \'MultiMapping\', \'multipart\', \'PasteDeploy\', \'Persistence\', \'persistent\',\n+  \'pycparser\', \'python-gettext\', \'pytz\', \'RestrictedPython\', \'roman\',\n+  \'soupsieve\', \'transaction\', \'waitress\', \'WebOb\', \'WebTest\', \'WSGIProxy2\',\n+  \'z3c.pt\', \'zc.lockfile\', \'ZConfig\', \'zExceptions\', \'ZODB\', \'zodbpickle\',\n+  \'zope.annotation\', \'zope.browser\', \'zope.browsermenu\', \'zope.browserpage\',\n+  \'zope.browserresource\', \'zope.cachedescriptors\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.contentprovider\',\n+  \'zope.contenttype\', \'zope.datetime\', \'zope.deferredimport\',\n+  \'zope.deprecation\', \'zope.dottedname\', \'zope.event\', \'zope.exceptions\',\n+  \'zope.filerepresentation\', \'zope.globalrequest\', \'zope.hookable\',\n+  \'zope.i18n\', \'zope.i18nmessageid\', \'zope.interface\', \'zope.lifecycleevent\',\n+  \'zope.location\', \'zope.pagetemplate\', \'zope.processlifetime\', \'zope.proxy\',\n+  \'zope.ptresource\', \'zope.publisher\', \'zope.schema\', \'zope.security\',\n+  \'zope.sequencesort\', \'zope.site\', \'zope.size\', \'zope.structuredtext\',\n+  \'zope.tal\', \'zope.tales\', \'zope.testbrowser\', \'zope.testing\',\n+  \'zope.traversing\', \'zope.viewlet\'\n+]\n+\'Products.CMFCore\' = [\n+  \'docutils\', \'five.localsitemanager\', \'Missing\', \'Products.BTreeFolder2\',\n+  \'Products.GenericSetup\', \'Products.MailHost\', \'Products.PythonScripts\',\n+  \'Products.StandardCacheManagers\', \'Products.ZCatalog\', \'Record\',\n+  \'zope.sendmail\', \'Zope\'\n ]\n \'plone.base\' = [\n-  \'AccessControl\', \'Products.BTreeFolder2\', \'Products.CMFCore\',\n-  \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n+  \'plone.batching\', \'plone.registry\', \'plone.schema\',\'plone.z3cform\',\n+  \'Products.CMFCore\', \'Products.CMFDynamicViewFTI\',\n ]\n python-dateutil = [\'dateutil\']\n-ignore-packages = [\'Products.LinguaPlone\', \'Products.CMFPlone\']\n \n-[tool.codespell]\n-ignore-words-list = "discreet,pres"\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  dependencies_ignores = "[\'zestreleaser.towncrier\']"\n+#  dependencies_mappings = [\n+#    "gitpython = [\'git\']",\n+#    "pygithub = [\'github\']",\n+#  ]\n+#  """\n+##\n+\n+[tool.check-manifest]\n+ignore = [\n+    ".editorconfig",\n+    ".meta.toml",\n+    ".pre-commit-config.yaml",\n+    "tox.ini",\n+    ".flake8",\n+    "mx.ini",\n+\n+]\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  check_manifest_ignores = """\n+#      "*.map.js",\n+#      "*.pyc",\n+#  """\n+##\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/tox.ini b/tox.ini\nindex 0b1bccdee..883a4e1ef 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -1,16 +1,36 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [tox]\n # We need 4.4.0 for constrain_package_deps.\n min_version = 4.4.0\n envlist =\n-    format\n     lint\n     test\n+    dependencies\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  envlist_lines = """\n+#      my_other_environment\n+#  """\n+#  config_lines = """\n+#  my_extra_top_level_tox_configuration_lines\n+#  """\n+##\n \n [testenv]\n+skip_install = true\n allowlist_externals =\n-    sh\n+    echo\n+    false\n+# Make sure typos like `tox -e formaat` are caught instead of silently doing nothing.\n+# See https://github.com/tox-dev/tox/issues/2858.\n+commands =\n+    echo "Unrecognized environment name {envname}"\n+    false\n \n [testenv:format]\n description = automatically reformat code\n@@ -32,37 +52,138 @@ commands =\n     pre-commit run -a\n \n [testenv:dependencies]\n-description = check if the package defines all its dependencies and generate a graph out of them\n+description = check if the package defines all its dependencies\n+skip_install = true\n deps =\n+    build\n     z3c.dependencychecker==2.11\n+commands =\n+    python -m build --sdist --no-isolation\n+    dependencychecker\n+\n+[testenv:dependencies-graph]\n+description = generate a graph out of the dependencies of the package\n+skip_install = false\n+allowlist_externals =\n+    sh\n+deps =\n     pipdeptree==2.5.1\n     graphviz  # optional dependency of pipdeptree\n commands =\n-    dependencychecker\n-    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n \n [testenv:test]\n-usedevelop = true\n+description = run the distribution tests\n+use_develop = true\n+skip_install = false\n constrain_package_deps = true\n-set_env = ROBOT_BROWSER=headlesschrome\n+set_env =\n+    ROBOT_BROWSER=headlesschrome\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n deps =\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+##\n+# Specify a custom constraints file in .meta.toml:\n+#  [tox]\n+#  constraints_file = "https://my-server.com/constraints.txt"\n+##\n commands =\n     zope-testrunner --all --test-path={toxinidir}/src -s plone.app.multilingual {posargs}\n extras =\n     test\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  test_extras = """\n+#      tests\n+#      widgets\n+#  """\n+##\n+\n [testenv:coverage]\n-usedevelop = true\n+description = get a test coverage report\n+use_develop = true\n+skip_install = false\n constrain_package_deps = true\n-set_env = ROBOT_BROWSER=headlesschrome\n+set_env =\n+    ROBOT_BROWSER=headlesschrome\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n deps =\n     coverage\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n commands =\n-    coverage run {envbindir}/zope-testrunner --all --test-path={toxinidir}/src -s plone.app.multilingual {posargs}\n+    coverage run --branch --source plone.app.multilingual {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir}/src -s plone.app.multilingual {posargs}\n     coverage report -m --format markdown\n+    coverage xml\n extras =\n     test\n+\n+\n+[testenv:release-check]\n+description = ensure that the distribution is ready to release\n+skip_install = true\n+deps =\n+    twine\n+    build\n+    towncrier\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    # fake version to not have to install the package\n+    # we build the change log as news entries might break\n+    # the README that is displayed on PyPI\n+    towncrier build --version=100.0.0 --yes\n+    python -m build --sdist --no-isolation\n+    twine check dist/*\n+\n+[testenv:circular]\n+description = ensure there are no cyclic dependencies\n+use_develop = true\n+skip_install = false\n+set_env =\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n+allowlist_externals =\n+    sh\n+deps =\n+    pipdeptree\n+    pipforester\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    # Generate the full dependency tree\n+    sh -c \'pipdeptree -j > forest.json\'\n+    # Generate a DOT graph with the circular dependencies, if any\n+    pipforester -i forest.json -o forest.dot --cycles\n+    # Report if there are any circular dependencies, i.e. error if there are any\n+    pipforester -i forest.json --check-cycles -o /dev/null\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n'

Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2023-12-22T23:02:17+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.multilingual/commit/ad61fdd8bddc1136c626053d1afc8d45a336f6e9

cleanup: remove options on setup.cfg

Files changed:
M setup.cfg

b'diff --git a/setup.cfg b/setup.cfg\nindex fdeab757..0be19f0e 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -27,25 +27,3 @@ maintainer_email = releasemanager@plone.org\n \n [options]\n python_requires = >=3.8\n-\n-[check-manifest]\n-ignore =\n-    .editorconfig\n-    .meta.toml\n-    .pre-commit-config.yaml\n-    tox.ini\n-\n-[bdist_wheel]\n-universal = 0\n-\n-[flake8]\n-doctests = 1\n-ignore =\n-    # black takes care of line length\n-    E501,\n-    # black takes care of where to break lines\n-    W503,\n-    # black takes care of spaces within slicing (list[:])\n-    E203,\n-    # black takes care of spaces after commas\n-    E231,\n'

Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2023-12-22T23:02:17+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.multilingual/commit/a294930e0c9cb868a7ddf5b3f183c138fe6b405d

fix: adjust dependencies

Files changed:
M .meta.toml
M pyproject.toml
M setup.py

b'diff --git a/.meta.toml b/.meta.toml\nindex 4604a162..9972ccf1 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -7,3 +7,4 @@ commit-id = "cfffba8c"\n \n [pyproject]\n codespell_ignores = "pres"\n+dependencies_ignores = "[\'Products.LinguaPlone\']"\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 87995451..f0a3a25d 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -116,6 +116,7 @@ Zope = [\n   \'Products.CMFCore\', \'Products.CMFDynamicViewFTI\',\n ]\n python-dateutil = [\'dateutil\']\n+ignore-packages = [\'Products.LinguaPlone\']\n \n ##\n # Add extra configuration options in .meta.toml:\ndiff --git a/setup.py b/setup.py\nindex 0f645988..49b6baec 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -14,6 +14,7 @@\n         "plone.i18n>=4.0.4",\n         "setuptools",\n         "BTrees",\n+        "Products.CMFPlone",\n         "Products.CMFCore",\n         "Products.CMFPlone",\n         "Products.GenericSetup",\n'

Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2023-12-22T23:02:17+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.multilingual/commit/9fce2c84916485b6333c694137d2f9b5c033b89b

Tox: use 6.1-dev constraints.

Files changed:
M tox.ini

b"diff --git a/tox.ini b/tox.ini\nindex 883a4e1e..72043ab2 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -89,7 +89,7 @@ set_env =\n ##\n deps =\n     zope.testrunner\n-    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    -c https://dist.plone.org/release/6.1-dev/constraints.txt\n ##\n # Specify a custom constraints file in .meta.toml:\n #  [tox]\n@@ -127,7 +127,7 @@ set_env =\n deps =\n     coverage\n     zope.testrunner\n-    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    -c https://dist.plone.org/release/6.1-dev/constraints.txt\n commands =\n     coverage run --branch --source plone.app.multilingual {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir}/src -s plone.app.multilingual {posargs}\n     coverage report -m --format markdown\n@@ -143,7 +143,7 @@ deps =\n     twine\n     build\n     towncrier\n-    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    -c https://dist.plone.org/release/6.1-dev/constraints.txt\n commands =\n     # fake version to not have to install the package\n     # we build the change log as news entries might break\n@@ -170,7 +170,7 @@ allowlist_externals =\n deps =\n     pipdeptree\n     pipforester\n-    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    -c https://dist.plone.org/release/6.1-dev/constraints.txt\n commands =\n     # Generate the full dependency tree\n     sh -c 'pipdeptree -j > forest.json'\n"

Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2023-12-22T23:02:17+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.multilingual/commit/e10287b2e622266a54fe0817b36ba7abf90a8350

Removed duplicate Products.CMFPlone from install_requires.

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex 49b6baec..0f645988 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -14,7 +14,6 @@\n         "plone.i18n>=4.0.4",\n         "setuptools",\n         "BTrees",\n-        "Products.CMFPlone",\n         "Products.CMFCore",\n         "Products.CMFPlone",\n         "Products.GenericSetup",\n'

Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2023-12-22T23:02:18+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.multilingual/commit/3af60fb755cf3df4239ebb152820878ab78d94fb

Use mxdev in tox.

With standard pip, we cannot both install ourselves in editable mode *and* use a constraints file that has a pin for our package.
With mxdev, we ignore this single pin.
See https://github.com/plone/Products.CMFPlone/issues/3859#issuecomment-1768630446

Files changed:
A mx.ini
A requirements.txt
M tox.ini

b'diff --git a/mx.ini b/mx.ini\nnew file mode 100644\nindex 00000000..1853395d\n--- /dev/null\n+++ b/mx.ini\n@@ -0,0 +1,4 @@\n+[settings]\n+ignores =\n+    plone.app.multilingual\n+main-package = -e .[test]\ndiff --git a/requirements.txt b/requirements.txt\nnew file mode 100644\nindex 00000000..00e902ab\n--- /dev/null\n+++ b/requirements.txt\n@@ -0,0 +1 @@\n+-c https://dist.plone.org/release/6.1-dev/constraints.txt\ndiff --git a/tox.ini b/tox.ini\nindex 72043ab2..54bbb466 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -74,9 +74,6 @@ commands =\n \n [testenv:test]\n description = run the distribution tests\n-use_develop = true\n-skip_install = false\n-constrain_package_deps = true\n set_env =\n     ROBOT_BROWSER=headlesschrome\n \n@@ -88,6 +85,7 @@ set_env =\n #  """\n ##\n deps =\n+    mxdev\n     zope.testrunner\n     -c https://dist.plone.org/release/6.1-dev/constraints.txt\n ##\n@@ -95,6 +93,9 @@ deps =\n #  [tox]\n #  constraints_file = "https://my-server.com/constraints.txt"\n ##\n+commands_pre =\n+    mxdev -c mx.ini\n+    pip install -rrequirements-mxdev.txt\n commands =\n     zope-testrunner --all --test-path={toxinidir}/src -s plone.app.multilingual {posargs}\n extras =\n@@ -111,9 +112,6 @@ extras =\n \n [testenv:coverage]\n description = get a test coverage report\n-use_develop = true\n-skip_install = false\n-constrain_package_deps = true\n set_env =\n     ROBOT_BROWSER=headlesschrome\n \n@@ -128,6 +126,9 @@ deps =\n     coverage\n     zope.testrunner\n     -c https://dist.plone.org/release/6.1-dev/constraints.txt\n+commands_pre =\n+    mxdev -c mx.ini\n+    pip install -rrequirements-mxdev.txt\n commands =\n     coverage run --branch --source plone.app.multilingual {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir}/src -s plone.app.multilingual {posargs}\n     coverage report -m --format markdown\n@@ -154,8 +155,6 @@ commands =\n \n [testenv:circular]\n description = ensure there are no cyclic dependencies\n-use_develop = true\n-skip_install = false\n set_env =\n \n ##\n@@ -168,9 +167,13 @@ set_env =\n allowlist_externals =\n     sh\n deps =\n+    mxdev\n     pipdeptree\n     pipforester\n     -c https://dist.plone.org/release/6.1-dev/constraints.txt\n+commands_pre =\n+    mxdev -c mx.ini\n+    pip install -rrequirements-mxdev.txt\n commands =\n     # Generate the full dependency tree\n     sh -c \'pipdeptree -j > forest.json\'\n'

Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2023-12-22T23:05:11+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.multilingual/commit/c8f77f56d2f46b8b199165fd506aa73e048f48dd

Meta: extra git ignores and check-manifest ignores.

Applied and configured with latest plone/meta.
Afterwards, manually removed these lines from a few tox envs:

```
use_develop = true
skip_install = false
constrain_package_deps = true
```

And use 6.1-dev.

Files changed:
M .editorconfig
M .github/workflows/meta.yml
M .gitignore
M .meta.toml
M .pre-commit-config.yaml
M pyproject.toml
M tox.ini

b'diff --git a/.editorconfig b/.editorconfig\nindex a267528c..9365ef1b 100644\n--- a/.editorconfig\n+++ b/.editorconfig\n@@ -36,6 +36,7 @@ indent_size = 2\n [*.{json,jsonl,js,jsx,ts,tsx,css,less,scss,html}]  # Frontend development\n # 2 space indentation\n indent_size = 2\n+max_line_length = 80\n \n [{Makefile,.gitmodules}]\n # Tab indentation (no size specified, but view as 4 spaces)\ndiff --git a/.github/workflows/meta.yml b/.github/workflows/meta.yml\nindex d8e3814d..b8edec02 100644\n--- a/.github/workflows/meta.yml\n+++ b/.github/workflows/meta.yml\n@@ -13,6 +13,16 @@ on:\n       - main\n   workflow_dispatch:\n \n+##\n+# To set environment variables for all jobs, add in .meta.toml:\n+# [github]\n+# env = """\n+#     debug: 1\n+#     image-name: \'org/image\'\n+#     image-tag: \'latest\'\n+# """\n+##\n+\n jobs:\n   qa:\n     uses: plone/meta/.github/workflows/qa.yml@main\n@@ -22,7 +32,37 @@ jobs:\n     uses: plone/meta/.github/workflows/coverage.yml@main\n   dependencies:\n     uses: plone/meta/.github/workflows/dependencies.yml@main\n-  release-ready:\n+  release_ready:\n     uses: plone/meta/.github/workflows/release_ready.yml@main\n   circular:\n     uses: plone/meta/.github/workflows/circular.yml@main\n+\n+##\n+# To modify the list of default jobs being created add in .meta.toml:\n+# [github]\n+# jobs = [\n+#    "qa",\n+#    "test",\n+#    "coverage",\n+#    "dependencies",\n+#    "release_ready",\n+#    "circular",\n+#    ]\n+##\n+\n+##\n+# To request that some OS level dependencies get installed\n+# when running tests/coverage jobs, add in .meta.toml:\n+# [github]\n+# os_dependencies = "git libxml2 libxslt"\n+##\n+\n+\n+##\n+# Specify additional jobs in .meta.toml:\n+#  [github]\n+#  extra_lines = """\n+#  another:\n+#    uses: org/repo/.github/workflows/file.yml@main\n+#  """\n+##\ndiff --git a/.gitignore b/.gitignore\nindex 5515d912..0673be7a 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -6,9 +6,13 @@\n *.pyc\n *.pyo\n \n+# translation related\n+*.mo\n+\n # tools related\n build/\n .coverage\n+.*project\n coverage.xml\n dist/\n docs/_build\n@@ -42,6 +46,8 @@ local.cfg\n /venv/\n .installed.txt\n \n+/robot/\n+/robot_*\n \n ##\n # Add extra configuration options in .meta.toml:\ndiff --git a/.meta.toml b/.meta.toml\nindex 9972ccf1..7b5d5341 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -3,8 +3,17 @@\n # See the inline comments on how to expand/tweak this configuration file\n [meta]\n template = "default"\n-commit-id = "cfffba8c"\n+commit-id = "6a477508"\n+\n+[gitignore]\n+extra_lines = """\n+/robot/\n+/robot_*\n+"""\n \n [pyproject]\n+check_manifest_ignores = """\n+    "requirements.txt",\n+"""\n codespell_ignores = "pres"\n dependencies_ignores = "[\'Products.LinguaPlone\']"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex 6a1bb388..0501f9af 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -71,10 +71,20 @@ repos:\n     -   id: check-python-versions\n         args: [\'--only\', \'setup.py,pyproject.toml\']\n -   repo: https://github.com/collective/i18ndude\n-    rev: "6.0.0"\n+    rev: "6.1.0"\n     hooks:\n     -   id: i18ndude\n \n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  i18ndude_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n+\n+\n ##\n # Add extra configuration options in .meta.toml:\n #  [pre_commit]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex f0a3a25d..f5f40ed2 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,6 +1,9 @@\n # Generated from:\n # https://github.com/plone/meta/tree/main/config/default\n # See the inline comments on how to expand/tweak this configuration file\n+[build-system]\n+requires = ["setuptools>=68.2"]\n+\n [tool.towncrier]\n directory = "news/"\n filename = "CHANGES.rst"\n@@ -126,7 +129,6 @@ ignore-packages = [\'Products.LinguaPlone\']\n #    "gitpython = [\'git\']",\n #    "pygithub = [\'github\']",\n #  ]\n-#  """\n ##\n \n [tool.check-manifest]\n@@ -137,6 +139,7 @@ ignore = [\n     "tox.ini",\n     ".flake8",\n     "mx.ini",\n+    "requirements.txt",\n \n ]\n ##\ndiff --git a/tox.ini b/tox.ini\nindex 54bbb466..645b344b 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -32,6 +32,21 @@ commands =\n     echo "Unrecognized environment name {envname}"\n     false\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  testenv_options = """\n+#  basepython = /usr/bin/python3.8\n+#  """\n+##\n+\n+[testenv:init]\n+description = Prepare environment\n+skip_install = true\n+commands =\n+    echo "Initial setup complete"\n+\n+\n [testenv:format]\n description = automatically reformat code\n skip_install = true\n@@ -58,7 +73,7 @@ deps =\n     build\n     z3c.dependencychecker==2.11\n commands =\n-    python -m build --sdist --no-isolation\n+    python -m build --sdist\n     dependencychecker\n \n [testenv:dependencies-graph]\n@@ -83,20 +98,26 @@ set_env =\n #  test_environment_variables = """\n #      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n #  """\n+#\n+# Set constrain_package_deps .meta.toml:\n+#  [tox]\n+#  constrain_package_deps = "false"\n ##\n deps =\n-    mxdev\n     zope.testrunner\n     -c https://dist.plone.org/release/6.1-dev/constraints.txt\n+\n ##\n+# Specify additional deps in .meta.toml:\n+#  [tox]\n+#  test_deps_additional = "-esources/plonegovbr.portal_base[test]"\n+#\n # Specify a custom constraints file in .meta.toml:\n #  [tox]\n #  constraints_file = "https://my-server.com/constraints.txt"\n ##\n-commands_pre =\n-    mxdev -c mx.ini\n-    pip install -rrequirements-mxdev.txt\n commands =\n+    rfbrowser init\n     zope-testrunner --all --test-path={toxinidir}/src -s plone.app.multilingual {posargs}\n extras =\n     test\n@@ -126,10 +147,9 @@ deps =\n     coverage\n     zope.testrunner\n     -c https://dist.plone.org/release/6.1-dev/constraints.txt\n-commands_pre =\n-    mxdev -c mx.ini\n-    pip install -rrequirements-mxdev.txt\n+\n commands =\n+    rfbrowser init\n     coverage run --branch --source plone.app.multilingual {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir}/src -s plone.app.multilingual {posargs}\n     coverage report -m --format markdown\n     coverage xml\n@@ -145,12 +165,13 @@ deps =\n     build\n     towncrier\n     -c https://dist.plone.org/release/6.1-dev/constraints.txt\n+\n commands =\n     # fake version to not have to install the package\n     # we build the change log as news entries might break\n     # the README that is displayed on PyPI\n     towncrier build --version=100.0.0 --yes\n-    python -m build --sdist --no-isolation\n+    python -m build --sdist\n     twine check dist/*\n \n [testenv:circular]\n@@ -167,13 +188,10 @@ set_env =\n allowlist_externals =\n     sh\n deps =\n-    mxdev\n     pipdeptree\n     pipforester\n     -c https://dist.plone.org/release/6.1-dev/constraints.txt\n-commands_pre =\n-    mxdev -c mx.ini\n-    pip install -rrequirements-mxdev.txt\n+\n commands =\n     # Generate the full dependency tree\n     sh -c \'pipdeptree -j > forest.json\'\n'

Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2023-12-22T23:05:11+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.multilingual/commit/58d1c5274fb5ef7f3ae25b668213ab2b746988a9

Restore mxdev.

Files changed:
M tox.ini

b'diff --git a/tox.ini b/tox.ini\nindex 645b344b..f90b9a19 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -104,6 +104,7 @@ set_env =\n #  constrain_package_deps = "false"\n ##\n deps =\n+    mxdev\n     zope.testrunner\n     -c https://dist.plone.org/release/6.1-dev/constraints.txt\n \n@@ -116,6 +117,9 @@ deps =\n #  [tox]\n #  constraints_file = "https://my-server.com/constraints.txt"\n ##\n+commands_pre =\n+    mxdev -c mx.ini\n+    pip install -rrequirements-mxdev.txt\n commands =\n     rfbrowser init\n     zope-testrunner --all --test-path={toxinidir}/src -s plone.app.multilingual {posargs}\n@@ -145,9 +149,13 @@ set_env =\n ##\n deps =\n     coverage\n+    mxdev\n     zope.testrunner\n     -c https://dist.plone.org/release/6.1-dev/constraints.txt\n \n+commands_pre =\n+    mxdev -c mx.ini\n+    pip install -rrequirements-mxdev.txt\n commands =\n     rfbrowser init\n     coverage run --branch --source plone.app.multilingual {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir}/src -s plone.app.multilingual {posargs}\n@@ -188,10 +196,14 @@ set_env =\n allowlist_externals =\n     sh\n deps =\n+    mxdev\n     pipdeptree\n     pipforester\n     -c https://dist.plone.org/release/6.1-dev/constraints.txt\n \n+commands_pre =\n+    mxdev -c mx.ini\n+    pip install -rrequirements-mxdev.txt\n commands =\n     # Generate the full dependency tree\n     sh -c \'pipdeptree -j > forest.json\'\n'

Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2024-01-07T22:11:42+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.multilingual/commit/6689689f232a0524b4ef1ff86642bbf0e45e222a

Merge pull request #419 from plone/config-with-default-template-5bc28a6f

Config with default template

Files changed:
A .flake8
A .github/workflows/meta.yml
A mx.ini
A news/dd37b9f9.internal
A requirements.txt
M .editorconfig
M .gitignore
M .meta.toml
M .pre-commit-config.yaml
M pyproject.toml
M setup.cfg
M tox.ini

b'diff --git a/.editorconfig b/.editorconfig\nindex b4158b89d..9365ef1bc 100644\n--- a/.editorconfig\n+++ b/.editorconfig\n@@ -1,5 +1,6 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n #\n # EditorConfig Configuration file, for more details see:\n # http://EditorConfig.org\n@@ -32,8 +33,22 @@ indent_size = 4\n # 2 space indentation\n indent_size = 2\n \n+[*.{json,jsonl,js,jsx,ts,tsx,css,less,scss,html}]  # Frontend development\n+# 2 space indentation\n+indent_size = 2\n+max_line_length = 80\n+\n [{Makefile,.gitmodules}]\n # Tab indentation (no size specified, but view as 4 spaces)\n indent_style = tab\n indent_size = unset\n tab_width = unset\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [editorconfig]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.flake8 b/.flake8\nnew file mode 100644\nindex 000000000..38918f42f\n--- /dev/null\n+++ b/.flake8\n@@ -0,0 +1,22 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+[flake8]\n+doctests = 1\n+ignore =\n+    # black takes care of line length\n+    E501,\n+    # black takes care of where to break lines\n+    W503,\n+    # black takes care of spaces within slicing (list[:])\n+    E203,\n+    # black takes care of spaces after commas\n+    E231,\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [flake8]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.github/workflows/meta.yml b/.github/workflows/meta.yml\nnew file mode 100644\nindex 000000000..b8edec02f\n--- /dev/null\n+++ b/.github/workflows/meta.yml\n@@ -0,0 +1,68 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+name: Meta\n+on:\n+  push:\n+    branches:\n+      - master\n+      - main\n+  pull_request:\n+    branches:\n+      - master\n+      - main\n+  workflow_dispatch:\n+\n+##\n+# To set environment variables for all jobs, add in .meta.toml:\n+# [github]\n+# env = """\n+#     debug: 1\n+#     image-name: \'org/image\'\n+#     image-tag: \'latest\'\n+# """\n+##\n+\n+jobs:\n+  qa:\n+    uses: plone/meta/.github/workflows/qa.yml@main\n+  test:\n+    uses: plone/meta/.github/workflows/test.yml@main\n+  coverage:\n+    uses: plone/meta/.github/workflows/coverage.yml@main\n+  dependencies:\n+    uses: plone/meta/.github/workflows/dependencies.yml@main\n+  release_ready:\n+    uses: plone/meta/.github/workflows/release_ready.yml@main\n+  circular:\n+    uses: plone/meta/.github/workflows/circular.yml@main\n+\n+##\n+# To modify the list of default jobs being created add in .meta.toml:\n+# [github]\n+# jobs = [\n+#    "qa",\n+#    "test",\n+#    "coverage",\n+#    "dependencies",\n+#    "release_ready",\n+#    "circular",\n+#    ]\n+##\n+\n+##\n+# To request that some OS level dependencies get installed\n+# when running tests/coverage jobs, add in .meta.toml:\n+# [github]\n+# os_dependencies = "git libxml2 libxslt"\n+##\n+\n+\n+##\n+# Specify additional jobs in .meta.toml:\n+#  [github]\n+#  extra_lines = """\n+#  another:\n+#    uses: org/repo/.github/workflows/file.yml@main\n+#  """\n+##\ndiff --git a/.gitignore b/.gitignore\nindex 3a7251581..0673be7af 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -1,46 +1,58 @@\n-*.pyc\n-*.egg\n+# Generated from:\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+# python related\n *.egg-info\n-*.mo\n-\n-# Directories\n-/eggs/*\n-/parts/*\n-/bin/*\n-/extras/*\n-/develop-eggs/*\n-/var/*\n-/build/*\n-/dist/*\n-/docs/_build\n-/coverage\n+*.pyc\n+*.pyo\n \n-# Sublime Text\n-.codeintel/*\n-MKcodeintel\n+# translation related\n+*.mo\n \n-# buildout\n+# tools related\n+build/\n+.coverage\n+.*project\n+coverage.xml\n+dist/\n+docs/_build\n+__pycache__/\n+.tox\n+.vscode/\n+node_modules/\n+\n+# venv / buildout related\n+bin/\n+develop-eggs/\n+eggs/\n+.eggs/\n+etc/\n .installed.cfg\n+include/\n+lib/\n+lib64\n .mr.developer.cfg\n-\n-# eclipse\n-.project\n-.pydevproject\n-.settings\n-\n-# Mac\n-.DS_Store\n-\n-# Emacs\n-.emacs.desktop*\n-\n-# Virtualenv\n-/lib64/\n-/lib/\n-/include/\n-/local/\n-.Python\n-\n-# tests\n-/test_acceptance/*\n-robot_*\n+parts/\n+pyvenv.cfg\n+var/\n+local.cfg\n+\n+# mxdev\n+/instance/\n+/.make-sentinels/\n+/*-mxdev.txt\n+/reports/\n+/sources/\n+/venv/\n+.installed.txt\n+\n+/robot/\n+/robot_*\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [gitignore]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.meta.toml b/.meta.toml\nindex b66417080..7b5d5341b 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -1,5 +1,19 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [meta]\n template = "default"\n-commit-id = "11f0db91"\n+commit-id = "6a477508"\n+\n+[gitignore]\n+extra_lines = """\n+/robot/\n+/robot_*\n+"""\n+\n+[pyproject]\n+check_manifest_ignores = """\n+    "requirements.txt",\n+"""\n+codespell_ignores = "pres"\n+dependencies_ignores = "[\'Products.LinguaPlone\']"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex de3257acb..caf34e5ba 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -1,5 +1,6 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n ci:\n     autofix_prs: false\n     autoupdate_schedule: monthly\n@@ -22,16 +23,40 @@ repos:\n     rev: 3.1.0\n     hooks:\n     -   id: zpretty\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  zpretty_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/PyCQA/flake8\n     rev: 6.1.0\n     hooks:\n     -   id: flake8\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  flake8_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/codespell-project/codespell\n     rev: v2.2.6\n     hooks:\n     -   id: codespell\n         additional_dependencies:\n           - tomli\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  codespell_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/mgedmin/check-manifest\n     rev: "0.49"\n     hooks:\n@@ -40,3 +65,30 @@ repos:\n     rev: "4.2"\n     hooks:\n     -   id: pyroma\n+-   repo: https://github.com/mgedmin/check-python-versions\n+    rev: "0.22.0"\n+    hooks:\n+    -   id: check-python-versions\n+        args: [\'--only\', \'setup.py,pyproject.toml\']\n+-   repo: https://github.com/collective/i18ndude\n+    rev: "6.1.0"\n+    hooks:\n+    -   id: i18ndude\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  i18ndude_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/mx.ini b/mx.ini\nnew file mode 100644\nindex 000000000..1853395d7\n--- /dev/null\n+++ b/mx.ini\n@@ -0,0 +1,4 @@\n+[settings]\n+ignores =\n+    plone.app.multilingual\n+main-package = -e .[test]\ndiff --git a/news/dd37b9f9.internal b/news/dd37b9f9.internal\nnew file mode 100644\nindex 000000000..c08f53991\n--- /dev/null\n+++ b/news/dd37b9f9.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 78409e007..f5f40ed20 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,8 +1,12 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+[build-system]\n+requires = ["setuptools>=68.2"]\n+\n [tool.towncrier]\n-filename = "CHANGES.rst"\n directory = "news/"\n+filename = "CHANGES.rst"\n title_format = "{version} ({project_date})"\n underlines = ["-", ""]\n \n@@ -36,31 +40,122 @@ directory = "tests"\n name = "Tests"\n showcontent = true\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  towncrier_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.isort]\n profile = "plone"\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  isort_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.black]\n target-version = ["py38"]\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  black_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n+[tool.codespell]\n+ignore-words-list = "discreet,pres"\n+skip = "*.po,"\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  codespell_ignores = "foo,bar"\n+#  codespell_skip = "*.po,*.map,package-lock.json"\n+##\n+\n [tool.dependencychecker]\n Zope = [\n   # Zope own provided namespaces\n   \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n   \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n   \'Zope2\', \'webdav\', \'zmi\',\n+  # ExtensionClass own provided namespaces\n+  \'ExtensionClass\', \'ComputedAttribute\', \'MethodObject\',\n   # Zope dependencies\n-  \'Acquisition\', \'DateTime\', \'transaction\', \'zExceptions\', \'ZODB\', \'zope.component\',\n-  \'zope.configuration\', \'zope.container\', \'zope.deferredimport\', \'zope.event\',\n-  \'zope.exceptions\', \'zope.globalrequest\', \'zope.i18n\', \'zope.i18nmessageid\',\n-  \'zope.interface\', \'zope.lifecycleevent\', \'zope.location\', \'zope.publisher\',\n-  \'zope.schema\', \'zope.security\', \'zope.site\', \'zope.traversing\', \'AccessControl\',\n+  \'AccessControl\', \'Acquisition\', \'AuthEncoding\', \'beautifulsoup4\', \'BTrees\',\n+  \'cffi\', \'Chameleon\', \'DateTime\', \'DocumentTemplate\',\n+  \'MultiMapping\', \'multipart\', \'PasteDeploy\', \'Persistence\', \'persistent\',\n+  \'pycparser\', \'python-gettext\', \'pytz\', \'RestrictedPython\', \'roman\',\n+  \'soupsieve\', \'transaction\', \'waitress\', \'WebOb\', \'WebTest\', \'WSGIProxy2\',\n+  \'z3c.pt\', \'zc.lockfile\', \'ZConfig\', \'zExceptions\', \'ZODB\', \'zodbpickle\',\n+  \'zope.annotation\', \'zope.browser\', \'zope.browsermenu\', \'zope.browserpage\',\n+  \'zope.browserresource\', \'zope.cachedescriptors\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.contentprovider\',\n+  \'zope.contenttype\', \'zope.datetime\', \'zope.deferredimport\',\n+  \'zope.deprecation\', \'zope.dottedname\', \'zope.event\', \'zope.exceptions\',\n+  \'zope.filerepresentation\', \'zope.globalrequest\', \'zope.hookable\',\n+  \'zope.i18n\', \'zope.i18nmessageid\', \'zope.interface\', \'zope.lifecycleevent\',\n+  \'zope.location\', \'zope.pagetemplate\', \'zope.processlifetime\', \'zope.proxy\',\n+  \'zope.ptresource\', \'zope.publisher\', \'zope.schema\', \'zope.security\',\n+  \'zope.sequencesort\', \'zope.site\', \'zope.size\', \'zope.structuredtext\',\n+  \'zope.tal\', \'zope.tales\', \'zope.testbrowser\', \'zope.testing\',\n+  \'zope.traversing\', \'zope.viewlet\'\n+]\n+\'Products.CMFCore\' = [\n+  \'docutils\', \'five.localsitemanager\', \'Missing\', \'Products.BTreeFolder2\',\n+  \'Products.GenericSetup\', \'Products.MailHost\', \'Products.PythonScripts\',\n+  \'Products.StandardCacheManagers\', \'Products.ZCatalog\', \'Record\',\n+  \'zope.sendmail\', \'Zope\'\n ]\n \'plone.base\' = [\n-  \'AccessControl\', \'Products.BTreeFolder2\', \'Products.CMFCore\',\n-  \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n+  \'plone.batching\', \'plone.registry\', \'plone.schema\',\'plone.z3cform\',\n+  \'Products.CMFCore\', \'Products.CMFDynamicViewFTI\',\n ]\n python-dateutil = [\'dateutil\']\n-ignore-packages = [\'Products.LinguaPlone\', \'Products.CMFPlone\']\n+ignore-packages = [\'Products.LinguaPlone\']\n \n-[tool.codespell]\n-ignore-words-list = "discreet,pres"\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  dependencies_ignores = "[\'zestreleaser.towncrier\']"\n+#  dependencies_mappings = [\n+#    "gitpython = [\'git\']",\n+#    "pygithub = [\'github\']",\n+#  ]\n+##\n+\n+[tool.check-manifest]\n+ignore = [\n+    ".editorconfig",\n+    ".meta.toml",\n+    ".pre-commit-config.yaml",\n+    "tox.ini",\n+    ".flake8",\n+    "mx.ini",\n+    "requirements.txt",\n+\n+]\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  check_manifest_ignores = """\n+#      "*.map.js",\n+#      "*.pyc",\n+#  """\n+##\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/requirements.txt b/requirements.txt\nnew file mode 100644\nindex 000000000..00e902abf\n--- /dev/null\n+++ b/requirements.txt\n@@ -0,0 +1 @@\n+-c https://dist.plone.org/release/6.1-dev/constraints.txt\ndiff --git a/setup.cfg b/setup.cfg\nindex fdeab7579..0be19f0e5 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -27,25 +27,3 @@ maintainer_email = releasemanager@plone.org\n \n [options]\n python_requires = >=3.8\n-\n-[check-manifest]\n-ignore =\n-    .editorconfig\n-    .meta.toml\n-    .pre-commit-config.yaml\n-    tox.ini\n-\n-[bdist_wheel]\n-universal = 0\n-\n-[flake8]\n-doctests = 1\n-ignore =\n-    # black takes care of line length\n-    E501,\n-    # black takes care of where to break lines\n-    W503,\n-    # black takes care of spaces within slicing (list[:])\n-    E203,\n-    # black takes care of spaces after commas\n-    E231,\ndiff --git a/tox.ini b/tox.ini\nindex 0b1bccdee..f90b9a191 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -1,16 +1,51 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [tox]\n # We need 4.4.0 for constrain_package_deps.\n min_version = 4.4.0\n envlist =\n-    format\n     lint\n     test\n+    dependencies\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  envlist_lines = """\n+#      my_other_environment\n+#  """\n+#  config_lines = """\n+#  my_extra_top_level_tox_configuration_lines\n+#  """\n+##\n \n [testenv]\n+skip_install = true\n allowlist_externals =\n-    sh\n+    echo\n+    false\n+# Make sure typos like `tox -e formaat` are caught instead of silently doing nothing.\n+# See https://github.com/tox-dev/tox/issues/2858.\n+commands =\n+    echo "Unrecognized environment name {envname}"\n+    false\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  testenv_options = """\n+#  basepython = /usr/bin/python3.8\n+#  """\n+##\n+\n+[testenv:init]\n+description = Prepare environment\n+skip_install = true\n+commands =\n+    echo "Initial setup complete"\n+\n \n [testenv:format]\n description = automatically reformat code\n@@ -32,37 +67,156 @@ commands =\n     pre-commit run -a\n \n [testenv:dependencies]\n-description = check if the package defines all its dependencies and generate a graph out of them\n+description = check if the package defines all its dependencies\n+skip_install = true\n deps =\n+    build\n     z3c.dependencychecker==2.11\n+commands =\n+    python -m build --sdist\n+    dependencychecker\n+\n+[testenv:dependencies-graph]\n+description = generate a graph out of the dependencies of the package\n+skip_install = false\n+allowlist_externals =\n+    sh\n+deps =\n     pipdeptree==2.5.1\n     graphviz  # optional dependency of pipdeptree\n commands =\n-    dependencychecker\n-    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n \n [testenv:test]\n-usedevelop = true\n-constrain_package_deps = true\n-set_env = ROBOT_BROWSER=headlesschrome\n+description = run the distribution tests\n+set_env =\n+    ROBOT_BROWSER=headlesschrome\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+#\n+# Set constrain_package_deps .meta.toml:\n+#  [tox]\n+#  constrain_package_deps = "false"\n+##\n deps =\n+    mxdev\n     zope.testrunner\n-    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    -c https://dist.plone.org/release/6.1-dev/constraints.txt\n+\n+##\n+# Specify additional deps in .meta.toml:\n+#  [tox]\n+#  test_deps_additional = "-esources/plonegovbr.portal_base[test]"\n+#\n+# Specify a custom constraints file in .meta.toml:\n+#  [tox]\n+#  constraints_file = "https://my-server.com/constraints.txt"\n+##\n+commands_pre =\n+    mxdev -c mx.ini\n+    pip install -rrequirements-mxdev.txt\n commands =\n+    rfbrowser init\n     zope-testrunner --all --test-path={toxinidir}/src -s plone.app.multilingual {posargs}\n extras =\n     test\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  test_extras = """\n+#      tests\n+#      widgets\n+#  """\n+##\n+\n [testenv:coverage]\n-usedevelop = true\n-constrain_package_deps = true\n-set_env = ROBOT_BROWSER=headlesschrome\n+description = get a test coverage report\n+set_env =\n+    ROBOT_BROWSER=headlesschrome\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n deps =\n     coverage\n+    mxdev\n     zope.testrunner\n-    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    -c https://dist.plone.org/release/6.1-dev/constraints.txt\n+\n+commands_pre =\n+    mxdev -c mx.ini\n+    pip install -rrequirements-mxdev.txt\n commands =\n-    coverage run {envbindir}/zope-testrunner --all --test-path={toxinidir}/src -s plone.app.multilingual {posargs}\n+    rfbrowser init\n+    coverage run --branch --source plone.app.multilingual {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir}/src -s plone.app.multilingual {posargs}\n     coverage report -m --format markdown\n+    coverage xml\n extras =\n     test\n+\n+\n+[testenv:release-check]\n+description = ensure that the distribution is ready to release\n+skip_install = true\n+deps =\n+    twine\n+    build\n+    towncrier\n+    -c https://dist.plone.org/release/6.1-dev/constraints.txt\n+\n+commands =\n+    # fake version to not have to install the package\n+    # we build the change log as news entries might break\n+    # the README that is displayed on PyPI\n+    towncrier build --version=100.0.0 --yes\n+    python -m build --sdist\n+    twine check dist/*\n+\n+[testenv:circular]\n+description = ensure there are no cyclic dependencies\n+set_env =\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n+allowlist_externals =\n+    sh\n+deps =\n+    mxdev\n+    pipdeptree\n+    pipforester\n+    -c https://dist.plone.org/release/6.1-dev/constraints.txt\n+\n+commands_pre =\n+    mxdev -c mx.ini\n+    pip install -rrequirements-mxdev.txt\n+commands =\n+    # Generate the full dependency tree\n+    sh -c \'pipdeptree -j > forest.json\'\n+    # Generate a DOT graph with the circular dependencies, if any\n+    pipforester -i forest.json -o forest.dot --cycles\n+    # Report if there are any circular dependencies, i.e. error if there are any\n+    pipforester -i forest.json --check-cycles -o /dev/null\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n'

