Repository: plone.app.theming


Branch: refs/heads/master
Date: 2023-03-07T18:46:55+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.theming/commit/c4f8070674db9b8e9dea683de9ae75ea74542b75

fix: if there is no rules.xml given, abort early

Otherwise, given an open file is given as iterable, the read pointer is empty after this function, but None returned.
This way the read pointer is not touched.

Files changed:
A news/216.bugfix
M src/plone/app/theming/transform.py

b'diff --git a/news/216.bugfix b/news/216.bugfix\nnew file mode 100644\nindex 0000000..7a27022\n--- /dev/null\n+++ b/news/216.bugfix\n@@ -0,0 +1,4 @@\n+Bugfix: If there is no rules.xml given in a theme, abort transform early. \n+Otherwise, given an open file is given as iterable, the read buffer pointer is empty after this function, but None returned. \n+The new way the read buffer pointer is not touched.\n+[jensens, toalba]\ndiff --git a/src/plone/app/theming/transform.py b/src/plone/app/theming/transform.py\nindex 4adecb2..0caf069 100644\n--- a/src/plone/app/theming/transform.py\n+++ b/src/plone/app/theming/transform.py\n@@ -142,11 +142,12 @@ def transformIterable(self, result, encoding):\n         """\n         # Obtain settings. Do nothing if not found\n         policy = theming_policy(self.request)\n-        settings = policy.getSettings()\n-        if settings is None:\n-            return None\n         if not policy.isThemeEnabled():\n             return None\n+        settings = policy.getSettings()\n+        if settings is None or not settings.rules:\n+            # if there is no rules file given, do not try to transform\n+            return None\n         result = self.parseTree(result)\n         if result is None:\n             return None\n'

Repository: plone.app.theming


Branch: refs/heads/master
Date: 2023-03-07T19:37:18+01:00
Author: Torben Baumgartner (toalba) <tb@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.theming/commit/3a365d6392f0815217852ace5107c075d4cea38b

Merge pull request #216 from plone/fix-empty-rules

fix: if there is no rules.xml given, abort early
all tests green

Files changed:
A news/216.bugfix
M src/plone/app/theming/transform.py

b'diff --git a/news/216.bugfix b/news/216.bugfix\nnew file mode 100644\nindex 0000000..7a27022\n--- /dev/null\n+++ b/news/216.bugfix\n@@ -0,0 +1,4 @@\n+Bugfix: If there is no rules.xml given in a theme, abort transform early. \n+Otherwise, given an open file is given as iterable, the read buffer pointer is empty after this function, but None returned. \n+The new way the read buffer pointer is not touched.\n+[jensens, toalba]\ndiff --git a/src/plone/app/theming/transform.py b/src/plone/app/theming/transform.py\nindex 4adecb2..0caf069 100644\n--- a/src/plone/app/theming/transform.py\n+++ b/src/plone/app/theming/transform.py\n@@ -142,11 +142,12 @@ def transformIterable(self, result, encoding):\n         """\n         # Obtain settings. Do nothing if not found\n         policy = theming_policy(self.request)\n-        settings = policy.getSettings()\n-        if settings is None:\n-            return None\n         if not policy.isThemeEnabled():\n             return None\n+        settings = policy.getSettings()\n+        if settings is None or not settings.rules:\n+            # if there is no rules file given, do not try to transform\n+            return None\n         result = self.parseTree(result)\n         if result is None:\n             return None\n'

