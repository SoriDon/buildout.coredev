Repository: plone.app.vocabularies


Branch: refs/heads/master
Date: 2023-03-27T03:37:44+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.vocabularies/commit/2ac7ae1a6ccf8e9b8666b7271c245757b22d0d8a

Import navigation root specific from plone.base

Files changed:
A news/74.bugfix
M plone/app/vocabularies/catalog.py
M plone/app/vocabularies/tests/test_subjects_under_context.py
M setup.py

b'diff --git a/news/74.bugfix b/news/74.bugfix\nnew file mode 100644\nindex 0000000..6ba6d88\n--- /dev/null\n+++ b/news/74.bugfix\n@@ -0,0 +1,3 @@\n+Import navigation root specific from plone.base.\n+And so remove transitive circular dependency on plone.app.layout.\n+[jensens]\n\\ No newline at end of file\ndiff --git a/plone/app/vocabularies/catalog.py b/plone/app/vocabularies/catalog.py\nindex 5d39d8a..706c479 100644\n--- a/plone/app/vocabularies/catalog.py\n+++ b/plone/app/vocabularies/catalog.py\n@@ -1,9 +1,9 @@\n from BTrees.IIBTree import intersection\n-from plone.app.layout.navigation.root import getNavigationRootObject\n from plone.app.vocabularies import SlicableVocabulary\n from plone.app.vocabularies.terms import BrowsableTerm\n from plone.app.vocabularies.terms import safe_simplevocabulary_from_values\n from plone.app.vocabularies.utils import parseQueryString\n+from plone.base.navigationroot import get_navigation_root_object\n from plone.base.utils import safe_text\n from plone.memoize import request\n from plone.memoize.instance import memoize\n@@ -477,7 +477,7 @@ def section(self, context):\n             return None\n         if registry.get("plone.subjects_of_navigation_root", False):\n             portal = getToolByName(context, "portal_url").getPortalObject()\n-            return getNavigationRootObject(context, portal)\n+            return get_navigation_root_object(context, portal)\n         return None\n \n     def all_keywords(self, kwfilter):\n@@ -647,7 +647,7 @@ def __call__(self, context, query=None):\n         # as the path root for catalog searches\n         if "path" not in parsed:\n             site = getSite()\n-            nav_root = getNavigationRootObject(context, site)\n+            nav_root = get_navigation_root_object(context, site)\n             site_path = site.getPhysicalPath()\n             if nav_root and nav_root.getPhysicalPath() != site_path:\n                 parsed["path"] = {\n@@ -795,7 +795,7 @@ def __init__(self, query, text_search_index=None, title_template=None):\n     @memoize\n     def nav_root_path(self):\n         site = getSite()\n-        nav_root = getNavigationRootObject(site, site)\n+        nav_root = get_navigation_root_object(site, site)\n         return "/".join(nav_root.getPhysicalPath())\n \n     def get_brain_path(self, brain):\ndiff --git a/plone/app/vocabularies/tests/test_subjects_under_context.py b/plone/app/vocabularies/tests/test_subjects_under_context.py\nindex daa0571..d51d621 100644\n--- a/plone/app/vocabularies/tests/test_subjects_under_context.py\n+++ b/plone/app/vocabularies/tests/test_subjects_under_context.py\n@@ -1,5 +1,5 @@\n-from plone.app.layout.navigation.interfaces import INavigationRoot\n from plone.app.vocabularies.testing import PAVocabularies_INTEGRATION_TESTING\n+from plone.base.interfaces import INavigationRoot\n from unittest import mock\n from zope.interface import alsoProvides\n \ndiff --git a/setup.py b/setup.py\nindex 5647e19..16b79bd 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -41,7 +41,6 @@\n         "Products.ZCatalog",\n         "plone.app.querystring",\n         "plone.base",\n-        "plone.app.layout",\n         "plone.memoize",\n         "plone.namedfile",\n         "plone.registry",\n'

Repository: plone.app.vocabularies


Branch: refs/heads/master
Date: 2023-03-27T10:18:13+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.vocabularies/commit/db86bc112f1274a9bac3a4c9911eba811c0550c2

fix: update tox configuration

Files changed:
M .meta.toml
M tox.ini

b'diff --git a/.meta.toml b/.meta.toml\nindex d4a62f1..07dde25 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -2,4 +2,4 @@\n # https://github.com/plone/meta/tree/master/config/default\n [meta]\n template = "default"\n-commit-id = "b2d5d4a5"\n+commit-id = "47959565"\ndiff --git a/tox.ini b/tox.ini\nindex 3448e70..8c12d57 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -1,6 +1,8 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n [tox]\n+# We need 4.4.0 for constrain_package_deps.\n+min_version = 4.4.0\n envlist =\n     format\n     lint\n@@ -41,6 +43,7 @@ commands =\n \n [testenv:test]\n usedevelop = true\n+constrain_package_deps = true\n deps =\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n'

Repository: plone.app.vocabularies


Branch: refs/heads/master
Date: 2023-03-27T12:25:38+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.vocabularies/commit/a251b97518574df507a617e84f010a01a52bbde6

Merge pull request #74 from plone/rm-circular-on-pavocab

Import navigation root specific from plone.base

Files changed:
A news/74.bugfix
M .meta.toml
M plone/app/vocabularies/catalog.py
M plone/app/vocabularies/tests/test_subjects_under_context.py
M setup.py
M tox.ini

b'diff --git a/.meta.toml b/.meta.toml\nindex d4a62f1..07dde25 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -2,4 +2,4 @@\n # https://github.com/plone/meta/tree/master/config/default\n [meta]\n template = "default"\n-commit-id = "b2d5d4a5"\n+commit-id = "47959565"\ndiff --git a/news/74.bugfix b/news/74.bugfix\nnew file mode 100644\nindex 0000000..6ba6d88\n--- /dev/null\n+++ b/news/74.bugfix\n@@ -0,0 +1,3 @@\n+Import navigation root specific from plone.base.\n+And so remove transitive circular dependency on plone.app.layout.\n+[jensens]\n\\ No newline at end of file\ndiff --git a/plone/app/vocabularies/catalog.py b/plone/app/vocabularies/catalog.py\nindex 5d39d8a..706c479 100644\n--- a/plone/app/vocabularies/catalog.py\n+++ b/plone/app/vocabularies/catalog.py\n@@ -1,9 +1,9 @@\n from BTrees.IIBTree import intersection\n-from plone.app.layout.navigation.root import getNavigationRootObject\n from plone.app.vocabularies import SlicableVocabulary\n from plone.app.vocabularies.terms import BrowsableTerm\n from plone.app.vocabularies.terms import safe_simplevocabulary_from_values\n from plone.app.vocabularies.utils import parseQueryString\n+from plone.base.navigationroot import get_navigation_root_object\n from plone.base.utils import safe_text\n from plone.memoize import request\n from plone.memoize.instance import memoize\n@@ -477,7 +477,7 @@ def section(self, context):\n             return None\n         if registry.get("plone.subjects_of_navigation_root", False):\n             portal = getToolByName(context, "portal_url").getPortalObject()\n-            return getNavigationRootObject(context, portal)\n+            return get_navigation_root_object(context, portal)\n         return None\n \n     def all_keywords(self, kwfilter):\n@@ -647,7 +647,7 @@ def __call__(self, context, query=None):\n         # as the path root for catalog searches\n         if "path" not in parsed:\n             site = getSite()\n-            nav_root = getNavigationRootObject(context, site)\n+            nav_root = get_navigation_root_object(context, site)\n             site_path = site.getPhysicalPath()\n             if nav_root and nav_root.getPhysicalPath() != site_path:\n                 parsed["path"] = {\n@@ -795,7 +795,7 @@ def __init__(self, query, text_search_index=None, title_template=None):\n     @memoize\n     def nav_root_path(self):\n         site = getSite()\n-        nav_root = getNavigationRootObject(site, site)\n+        nav_root = get_navigation_root_object(site, site)\n         return "/".join(nav_root.getPhysicalPath())\n \n     def get_brain_path(self, brain):\ndiff --git a/plone/app/vocabularies/tests/test_subjects_under_context.py b/plone/app/vocabularies/tests/test_subjects_under_context.py\nindex daa0571..d51d621 100644\n--- a/plone/app/vocabularies/tests/test_subjects_under_context.py\n+++ b/plone/app/vocabularies/tests/test_subjects_under_context.py\n@@ -1,5 +1,5 @@\n-from plone.app.layout.navigation.interfaces import INavigationRoot\n from plone.app.vocabularies.testing import PAVocabularies_INTEGRATION_TESTING\n+from plone.base.interfaces import INavigationRoot\n from unittest import mock\n from zope.interface import alsoProvides\n \ndiff --git a/setup.py b/setup.py\nindex 5647e19..16b79bd 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -41,7 +41,6 @@\n         "Products.ZCatalog",\n         "plone.app.querystring",\n         "plone.base",\n-        "plone.app.layout",\n         "plone.memoize",\n         "plone.namedfile",\n         "plone.registry",\ndiff --git a/tox.ini b/tox.ini\nindex 3448e70..8c12d57 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -1,6 +1,8 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n [tox]\n+# We need 4.4.0 for constrain_package_deps.\n+min_version = 4.4.0\n envlist =\n     format\n     lint\n@@ -41,6 +43,7 @@ commands =\n \n [testenv:test]\n usedevelop = true\n+constrain_package_deps = true\n deps =\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n'

