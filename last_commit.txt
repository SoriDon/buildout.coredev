Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-02-28T18:02:14+01:00
Author: tschorr (tschorr) <t_schorr@gmx.de>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/21bcda654cb08b89b6666394c6b5482ad53c2680

add http-fast-listen option for waitress

Files changed:
M setup.py
M src/plone/recipe/zope2instance/ctl.py
M src/plone/recipe/zope2instance/recipe.py
M src/plone/recipe/zope2instance/tests/wsgi.txt

b'diff --git a/setup.py b/setup.py\nindex f3dbe45..bf63415 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -43,6 +43,7 @@\n         \'Zope >= 4.0b1\',\n         \'ZODB >= 5.1.1\',\n         \'ZEO\',\n+        \'waitress >= 1.1.1\',\n     ],\n     extras_require={\n         \'test\': [\n@@ -50,5 +51,13 @@\n         ],\n     },\n     zip_safe=False,\n-    entry_points={\'zc.buildout\': [\'default = %s.recipe:Recipe\' % name]},\n+    entry_points={\n+        \'zc.buildout\': [\'default = %s.recipe:Recipe\' % name],\n+        \'paste.server_runner\': [\n+            \'main=plone.recipe.zope2instance.ctl:serve_paste\',\n+        ],\n+        \'paste.server_factory\': [\n+            \'main=plone.recipe.zope2instance.ctl:server_factory\',\n+        ],\n+        },\n )\ndiff --git a/src/plone/recipe/zope2instance/ctl.py b/src/plone/recipe/zope2instance/ctl.py\nindex 1ba9d55..5d2da7b 100644\n--- a/src/plone/recipe/zope2instance/ctl.py\n+++ b/src/plone/recipe/zope2instance/ctl.py\n@@ -28,6 +28,7 @@\n """\n \n from pkg_resources import iter_entry_points\n+from waitress import serve\n from ZConfig.loader import SchemaLoader\n from zdaemon.zdctl import ZDCmd, ZDCtlOptions\n from zdaemon.zdoptions import ZDOptions\n@@ -37,10 +38,12 @@\n import os.path\n import pkg_resources\n import six\n+import socket\n import sys\n import xml.sax\n import zdaemon\n \n+\n if sys.version_info > (3, ):\n     basestring = str\n \n@@ -874,6 +877,40 @@ def help_adduser(self):\n         print("adduser <name> <password> -- add a Zope management user")\n \n \n+def serve_paste(app, global_conf, **kw):\n+    sock = None\n+    if \'prebound\' in global_conf:\n+        sock = socket.fromfd(\n+            int(global_conf[\'prebound\']), socket.AF_INET, socket.SOCK_STREAM)\n+        kw.update(sockets=[sock])\n+    try:\n+        serve(app, **kw)\n+    finally:\n+        if isinstance(sock, socket.socket):\n+            sock.close()\n+    return 0\n+\n+\n+def server_factory(global_conf, **kws):\n+    if \'fast-listen\' in kws:\n+        from asyncore import dispatcher\n+        from time import sleep\n+        host, port = kws[\'fast-listen\'].split(\':\')\n+        prebound = dispatcher()\n+        prebound.create_socket(socket.AF_INET, socket.SOCK_STREAM)\n+        prebound.bind((host, int(port)))\n+        prebound.listen(5)\n+        while not prebound.readable():\n+            sleep(1)\n+        global_conf.update(prebound=str(prebound.socket.fileno()))\n+        del kws[\'fast-listen\']\n+\n+    del kws[\'paste.server_factory\']\n+    def serve(app):\n+        return serve_paste(app, global_conf, **kws)\n+    return serve\n+\n+\n def main(args=None):\n     """Customized entry point for launching Zope without forking other processes\n     """\ndiff --git a/src/plone/recipe/zope2instance/recipe.py b/src/plone/recipe/zope2instance/recipe.py\nindex b9abe8b..fe0d99c 100644\n--- a/src/plone/recipe/zope2instance/recipe.py\n+++ b/src/plone/recipe/zope2instance/recipe.py\n@@ -659,12 +659,14 @@ def build_wsgi_ini(self):\n         options = self.options\n         wsgi_ini_path = os.path.join(options[\'location\'], \'etc\', \'wsgi.ini\')\n         listen = options.get(\'http-address\', \'0.0.0.0:8080\')\n+        fast = \'fast-\' if options.get(\'http-fast-listen\') is not None else \'\'\n         if \':\' not in listen:\n             listen = \'0.0.0.0:{}\'.format(listen)\n         options = {\n             \'location\': options[\'location\'],\n             \'http_address\': listen,\n             \'threads\': options.get(\'threads\', 4),\n+            \'fast-listen\': fast,\n         }\n         wsgi_ini = wsgi_ini_template % options\n         with open(wsgi_ini_path, \'w\') as f:\n@@ -1189,8 +1191,9 @@ def render_file_storage(self, file_storage, blob_storage,\n \n wsgi_ini_template = """\\\n [server:main]\n-use = egg:waitress#main\n-listen = %(http_address)s\n+paste.server_factory = plone.recipe.zope2instance:main\n+use = egg:plone.recipe.zope2instance#main\n+%(fast-listen)slisten = %(http_address)s\n threads = %(threads)s\n \n [app:zope]\ndiff --git a/src/plone/recipe/zope2instance/tests/wsgi.txt b/src/plone/recipe/zope2instance/tests/wsgi.txt\nindex cd38a87..5a862f6 100644\n--- a/src/plone/recipe/zope2instance/tests/wsgi.txt\n+++ b/src/plone/recipe/zope2instance/tests/wsgi.txt\n@@ -75,7 +75,8 @@ The buildout has also created an INI file containing the waitress configuration:\n     >>> wsgi_ini = open(os.path.join(instance, \'etc\', \'wsgi.ini\')).read()\n     >>> print(wsgi_ini)\n     [server:main]\n-    use = egg:waitress#main\n+    paste.server_factory = plone.recipe.zope2instance:main\n+    use = egg:plone.recipe.zope2instance#main\n     listen = 0.0.0.0:8080\n     threads = 4\n     <BLANKLINE>\n@@ -132,6 +133,7 @@ Let\'s create another buildout configuring a custom port and a custom number of w\n     ... eggs =\n     ... user = me:me\n     ... http-address = localhost:6543\n+    ... http-fast-listen = on\n     ... threads = 3\n     ... \'\'\' % options)\n \n@@ -149,8 +151,9 @@ The buildout has updated our INI file:\n     >>> wsgi_ini = open(os.path.join(instance, \'etc\', \'wsgi.ini\')).read()\n     >>> print(wsgi_ini)\n     [server:main]\n-    use = egg:waitress#main\n-    listen = localhost:6543\n+    paste.server_factory = plone.recipe.zope2instance:main\n+    use = egg:plone.recipe.zope2instance#main\n+    fast-listen = localhost:6543\n     threads = 3\n     <BLANKLINE>\n     [app:zope]\n'

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-02-28T18:19:23+01:00
Author: tschorr (tschorr) <t_schorr@gmx.de>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/b37a2fc34bd45f05134f1713f54f1b3599767a24

update changelog

Files changed:
M CHANGES.rst

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex cc51dac..d4405f6 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -8,6 +8,15 @@ Changelog\n \n .. towncrier release notes start\n \n+6.1.2 (unreleased)\n+------------------\n+\n+Bug fixes:\n+\n+- restore http-fast-listen for waitress (`#71 <https://github.com/plone/plone.recipe.zope2instance/issues/71>`_)\n+  [tschorr]\n+\n+\n 6.1.1 (2019-02-08)\n ------------------\n \n'

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-02-28T20:02:57+01:00
Author: tschorr (tschorr) <t_schorr@gmx.de>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/00640d9d10fa827f5cd15673f42261f7349a5bb3

fix waitress adjustment for PY2

Files changed:
M src/plone/recipe/zope2instance/ctl.py

b"diff --git a/src/plone/recipe/zope2instance/ctl.py b/src/plone/recipe/zope2instance/ctl.py\nindex 5d2da7b..0848399 100644\n--- a/src/plone/recipe/zope2instance/ctl.py\n+++ b/src/plone/recipe/zope2instance/ctl.py\n@@ -880,8 +880,13 @@ def help_adduser(self):\n def serve_paste(app, global_conf, **kw):\n     sock = None\n     if 'prebound' in global_conf:\n-        sock = socket.fromfd(\n+        _sock = socket.fromfd(\n             int(global_conf['prebound']), socket.AF_INET, socket.SOCK_STREAM)\n+        if six.PY2:\n+            sock = socket.socket()\n+            sock._sock = _sock\n+        else:\n+            sock = _sock\n         kw.update(sockets=[sock])\n     try:\n         serve(app, **kw)\n"

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-02-28T20:13:08+01:00
Author: tschorr (tschorr) <t_schorr@gmx.de>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/3ab87c20a9046c7363312fa1f17cc052ec965e19

pep8

Files changed:
M src/plone/recipe/zope2instance/ctl.py

b"diff --git a/src/plone/recipe/zope2instance/ctl.py b/src/plone/recipe/zope2instance/ctl.py\nindex 0848399..fbe2c9d 100644\n--- a/src/plone/recipe/zope2instance/ctl.py\n+++ b/src/plone/recipe/zope2instance/ctl.py\n@@ -909,8 +909,8 @@ def server_factory(global_conf, **kws):\n             sleep(1)\n         global_conf.update(prebound=str(prebound.socket.fileno()))\n         del kws['fast-listen']\n-\n     del kws['paste.server_factory']\n+\n     def serve(app):\n         return serve_paste(app, global_conf, **kws)\n     return serve\n"

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-02-28T20:19:41+01:00
Author: tschorr (tschorr) <t_schorr@gmx.de>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/275b01f080c523e4d41569c0d3c3cf7d82540e0e

move import statements to top

Files changed:
M src/plone/recipe/zope2instance/ctl.py

b'diff --git a/src/plone/recipe/zope2instance/ctl.py b/src/plone/recipe/zope2instance/ctl.py\nindex fbe2c9d..5a996a7 100644\n--- a/src/plone/recipe/zope2instance/ctl.py\n+++ b/src/plone/recipe/zope2instance/ctl.py\n@@ -27,7 +27,9 @@\n available actions.\n """\n \n+from asyncore import dispatcher\n from pkg_resources import iter_entry_points\n+from time import sleep\n from waitress import serve\n from ZConfig.loader import SchemaLoader\n from zdaemon.zdctl import ZDCmd, ZDCtlOptions\n@@ -898,8 +900,6 @@ def serve_paste(app, global_conf, **kw):\n \n def server_factory(global_conf, **kws):\n     if \'fast-listen\' in kws:\n-        from asyncore import dispatcher\n-        from time import sleep\n         host, port = kws[\'fast-listen\'].split(\':\')\n         prebound = dispatcher()\n         prebound.create_socket(socket.AF_INET, socket.SOCK_STREAM)\n'

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-03-01T09:51:45+01:00
Author: tschorr (tschorr) <t_schorr@gmx.de>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/02909cd371fe828ef3852f35408a30398f7e3ec4

use waitress.wasyncore

Files changed:
M src/plone/recipe/zope2instance/ctl.py

b'diff --git a/src/plone/recipe/zope2instance/ctl.py b/src/plone/recipe/zope2instance/ctl.py\nindex 5a996a7..503bb75 100644\n--- a/src/plone/recipe/zope2instance/ctl.py\n+++ b/src/plone/recipe/zope2instance/ctl.py\n@@ -27,7 +27,7 @@\n available actions.\n """\n \n-from asyncore import dispatcher\n+from waitress.wasyncore import dispatcher\n from pkg_resources import iter_entry_points\n from time import sleep\n from waitress import serve\n'

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-03-05T07:18:48+01:00
Author: Thomas Schorr (tschorr) <t_schorr@gmx.de>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/ee6ee51a4dc59f4615717c59bd0c8ba0eed73356

Merge branch 'master' into http-fast-listen-wsgi

Files changed:
M CHANGES.rst
M README.rst
M setup.py
M src/plone/recipe/zope2instance/recipe.py
M src/plone/recipe/zope2instance/tests/wsgi.txt
D news/73.breaking

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex d4405f6..f05bf33 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -8,7 +8,7 @@ Changelog\n \n .. towncrier release notes start\n \n-6.1.2 (unreleased)\n+6.1.4 (unreleased)\n ------------------\n \n Bug fixes:\n@@ -17,12 +17,31 @@ Bug fixes:\n   [tschorr]\n \n \n-6.1.1 (2019-02-08)\n+6.1.3 (2019-03-04)\n ------------------\n \n Bug fixes:\n \n \n+- Restore log files for waitress. [tschorr] (#76)\n+\n+\n+6.1.2 (2019-03-03)\n+------------------\n+\n+Breaking changes:\n+\n+\n+- Change the default to enable wsgi unless running Python 2 and setting\n+  wsgi=off. See https://github.com/plone/Products.CMFPlone/issues/2763 [pbauer]\n+  (#73)\n+\n+\n+6.1.1 (2019-02-08)\n+------------------\n+\n+Bug fixes:\n+\n - log level for Plone WSGI logger changed to INFO making the logging less\n   verbose [ajung] (#66)\n - Improve debugging of run scripts by providing the source code for the\ndiff --git a/README.rst b/README.rst\nindex 0acdc6a..f22ab93 100644\n--- a/README.rst\n+++ b/README.rst\n@@ -224,12 +224,11 @@ log levels or configure `mailinglogger`.\n event-log\n   The filename of the event log. Defaults to ${buildout:directory}/var/log/${partname}.log\n   Setting this value to \'disable\' will make the <eventlog> section to be omitted,\n-  disabling logging events by default to a .log file. Used for ZServer only, not WSGI.\n+  disabling logging events by default to a .log file.\n \n event-log-level\n   Set the level of the console output for the event log. Level may be any of\n   CRITICAL, ERROR, WARN, INFO, DEBUG, or ALL. Defaults to INFO.\n-  Used for ZServer only, not WSGI.\n \n event-log-max-size\n   Maximum size of event log file. Enables log rotation.\n@@ -258,14 +257,15 @@ mailinglogger\n \n   You will need to add `mailinglogger` to your buildout\'s egg section to make this work.\n \n-z2-log\n-  The filename for the Z2 access log. Defaults to var/log/${partname}-Z2.log.\n+access-log, z2-log\n+  The filename for the Z2 access log. Defaults to var/log/${partname}-Z2.log\n+  (var/log/${partname}-access.log) for WSGI).\n   Setting this value to \'disable\' will make the <logger access> section to be omitted,\n-  disabling logging access events to a .log file. Used for ZServer only, not WSGI.\n+  disabling logging access events to a .log file.\n \n-z2-log-level\n+access-log-level, z2-log-level\n   Set the log level for the access log. Level may be any of CRITICAL, ERROR,\n-  WARN, INFO, DEBUG, or ALL. Defaults to WARN. Used for ZServer only, not WSGI.\n+  WARN, INFO, DEBUG, or ALL. Defaults to WARN (INFO for WSGI).\n \n access-log-max-size\n   Maximum size of access log file. Enables log rotation.\ndiff --git a/news/73.breaking b/news/73.breaking\ndeleted file mode 100644\nindex 46023bf..0000000\n--- a/news/73.breaking\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Change the default to enable wsgi unless running Python 2 and setting wsgi=off. See https://github.com/plone/Products.CMFPlone/issues/2763\n-[pbauer]\n\\ No newline at end of file\ndiff --git a/setup.py b/setup.py\nindex bf63415..938e919 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -4,7 +4,7 @@\n \n \n name = "plone.recipe.zope2instance"\n-version = \'6.1.2.dev0\'\n+version = \'6.1.4.dev0\'\n \n setup(\n     name=name,\n@@ -44,6 +44,7 @@\n         \'ZODB >= 5.1.1\',\n         \'ZEO\',\n         \'waitress >= 1.1.1\',\n+        \'Paste\',\n     ],\n     extras_require={\n         \'test\': [\ndiff --git a/src/plone/recipe/zope2instance/recipe.py b/src/plone/recipe/zope2instance/recipe.py\nindex fe0d99c..a7f297b 100644\n--- a/src/plone/recipe/zope2instance/recipe.py\n+++ b/src/plone/recipe/zope2instance/recipe.py\n@@ -333,7 +333,9 @@ def build_zope_conf(self):\n             }\n \n         z_log_name = os.path.sep.join((\'log\', self.name + \'-Z2.log\'))\n-        z_log_name = options.get(\'z2-log\', z_log_name)\n+        z_log_name = options.get(\n+            \'z2-log\',\n+            options.get(\'access-log\', z_log_name))\n         if z_log_name.lower() == \'disable\':\n             access_event_log = \'\'\n         else:\n@@ -662,11 +664,49 @@ def build_wsgi_ini(self):\n         fast = \'fast-\' if options.get(\'http-fast-listen\') is not None else \'\'\n         if \':\' not in listen:\n             listen = \'0.0.0.0:{}\'.format(listen)\n+\n+        base_dir = self.buildout[\'buildout\'][\'directory\']\n+        var_dir = options.get(\'var\', os.path.join(base_dir, \'var\'))\n+        default_eventlog = os.path.sep.join(\n+            (var_dir, \'log\', \'{}.log\'.format(self.name),))\n+        eventlog_name = options.get(\'event-log\', default_eventlog)\n+        eventlog_level = options.get(\'event-log-level\', \'INFO\')\n+\n+        if eventlog_name.lower() == \'disable\':\n+            root_handlers = \'console\'\n+            event_handlers = \'\'\n+        else:\n+            root_handlers = \'console, eventlog\'\n+            event_handlers = \'eventlog\'\n+\n+        default_accesslog = os.path.sep.join(\n+            (var_dir, \'log\', \'{}-access.log\'.format(self.name),))\n+\n+        accesslog_name = options.get(\n+            \'z2-log\',\n+            options.get(\'access-log\', default_accesslog))\n+        accesslog_level = options.get(\n+            \'access-log-level\',\n+            options.get(\'z2-log-level\', \'INFO\'))\n+\n+        if accesslog_name.lower() == \'disable\':\n+            pipeline = \'\\n    \'.join([\'egg:Zope#httpexceptions\', \'zope\'])\n+            event_handlers = \'\'\n+        else:\n+            pipeline = \'\\n    \'.join(\n+                [\'translogger\', \'egg:Zope#httpexceptions\', \'zope\'])\n         options = {\n             \'location\': options[\'location\'],\n             \'http_address\': listen,\n             \'threads\': options.get(\'threads\', 4),\n             \'fast-listen\': fast,\n+            \'eventlog_name\': eventlog_name,\n+            \'root_handlers\': root_handlers,\n+            \'event_handlers\': event_handlers,\n+            \'accesslog_name\': accesslog_name,\n+            \'pipeline\': pipeline,\n+            \'eventlog_level\': eventlog_level,\n+            \'accesslog_level\': accesslog_level,\n         }\n         wsgi_ini = wsgi_ini_template % options\n         with open(wsgi_ini_path, \'w\') as f:\n@@ -1200,35 +1240,61 @@ def render_file_storage(self, file_storage, blob_storage,\n use = egg:Zope#main\n zope_conf = %(location)s/etc/zope.conf\n \n+[filter:translogger]\n+use = egg:Paste#translogger\n+setup_console_handler = False\n+\n [pipeline:main]\n pipeline =\n-    egg:Zope#httpexceptions\n-    zope\n+    %(pipeline)s\n \n [loggers]\n-keys = root, plone\n+keys = root, plone, waitress, wsgi\n \n [handlers]\n-keys = console\n+keys = console, accesslog, eventlog\n \n [formatters]\n keys = generic\n \n [logger_root]\n-level = INFO\n-handlers = console\n+level = %(eventlog_level)s\n+handlers = %(root_handlers)s\n \n [logger_plone]\n-level = INFO\n-handlers =\n+level = %(eventlog_level)s\n+handlers = %(event_handlers)s\n qualname = plone\n \n+[logger_waitress]\n+level = %(eventlog_level)s\n+handlers = %(event_handlers)s\n+qualname = waitress\n+\n+[logger_wsgi]\n+level = %(accesslog_level)s\n+handlers = accesslog\n+qualname = wsgi\n+propagate = 0\n+\n [handler_console]\n class = StreamHandler\n args = (sys.stderr,)\n level = NOTSET\n formatter = generic\n \n+[handler_accesslog]\n+class = FileHandler\n+args = (\'%(accesslog_name)s\',\'a\')\n+level = %(accesslog_level)s\n+formatter = generic\n+\n+[handler_eventlog]\n+class = FileHandler\n+args = (\'%(eventlog_name)s\', \'a\')\n+level = NOTSET\n+formatter = generic\n+\n [formatter_generic]\n-format = %%(asctime)s %%(levelname)-5.5s [%%(name)s:%%(lineno)s][%%(threadName)s] %%(message)s\n+format = %%(asctime)s %%(levelname)-7.7s [%%(name)s:%%(lineno)s][%%(threadName)s] %%(message)s\n """  # noqa: E501\ndiff --git a/src/plone/recipe/zope2instance/tests/wsgi.txt b/src/plone/recipe/zope2instance/tests/wsgi.txt\nindex 5a862f6..d4513b1 100644\n--- a/src/plone/recipe/zope2instance/tests/wsgi.txt\n+++ b/src/plone/recipe/zope2instance/tests/wsgi.txt\n@@ -84,41 +84,68 @@ The buildout has also created an INI file containing the waitress configuration:\n     use = egg:Zope#main\n     zope_conf = .../sample-buildout/parts/instance/etc/zope.conf\n     <BLANKLINE>\n+    [filter:translogger]\n+    use = egg:Paste#translogger\n+    setup_console_handler = False\n+    <BLANKLINE>\n     [pipeline:main]\n     pipeline =\n+        translogger\n         egg:Zope#httpexceptions\n         zope\n     <BLANKLINE>\n     [loggers]\n-    keys = root, plone\n+    keys = root, plone, waitress, wsgi\n     <BLANKLINE>\n     [handlers]\n-    keys = console\n+    keys = console, accesslog, eventlog\n     <BLANKLINE>\n     [formatters]\n     keys = generic\n     <BLANKLINE>\n     [logger_root]\n     level = INFO\n-    handlers = console\n+    handlers = console, eventlog\n     <BLANKLINE>\n     [logger_plone]\n     level = INFO\n-    handlers =\n+    handlers = eventlog\n     qualname = plone\n     <BLANKLINE>\n+    [logger_waitress]\n+    level = INFO\n+    handlers = eventlog\n+    qualname = waitress\n+    <BLANKLINE>\n+    [logger_wsgi]\n+    level = INFO\n+    handlers = accesslog\n+    qualname = wsgi\n+    propagate = 0\n+    <BLANKLINE>\n     [handler_console]\n     class = StreamHandler\n     args = (sys.stderr,)\n     level = NOTSET\n     formatter = generic\n     <BLANKLINE>\n-    [formatter_generic]\n-    format = %(asctime)s %(levelname)-5.5s [%(name)s:%(lineno)s][%(threadName)s] %(message)s\n+    [handler_accesslog]\n+    class = FileHandler\n+    args = (\'.../sample-buildout/var/log/instance-access.log\',\'a\')\n+    level = INFO\n+    formatter = generic\n+    <BLANKLINE>\n+    [handler_eventlog]\n+    class = FileHandler\n+    args = (\'.../sample-buildout/var/log/instance.log\', \'a\')\n+    level = NOTSET\n+    formatter = generic\n     <BLANKLINE>\n+    [formatter_generic]\n+    format = %(asctime)s %(levelname)-7.7s [%(name)s:%(lineno)s][%(threadName)s] %(message)s\n \n Custom WSGI options\n-=================\n+==================\n \n Let\'s create another buildout configuring a custom port and a custom number of workers::\n \n@@ -158,3 +185,163 @@ The buildout has updated our INI file:\n     <BLANKLINE>\n     [app:zope]\n     ...\n+\n+Custom logging\n+==============\n+\n+We want file based logging, i.e. event.log and access.log (ZServers Z2.log).\n+Let\'s create a buildout:\n+\n+    >>> write(\'buildout.cfg\',\n+    ... \'\'\'\n+    ... [buildout]\n+    ... parts = instance\n+    ... find-links = %(sample_buildout)s/eggs\n+    ...\n+    ... [instance]\n+    ... recipe = plone.recipe.zope2instance\n+    ... eggs =\n+    ... user = me:me\n+    ... access-log = var/log/foo.log\n+    ... event-log = var/log/bar.log\n+    ... z2-log-level = DEBUG\n+    ... event-log-level = ERROR\n+    ... \'\'\' % options)\n+\n+Let\'s run it::\n+\n+    >>> print(system(join(\'bin\', \'buildout\'))),\n+    Uninstalling instance.\n+    Installing instance.\n+    Generated script \'.../sample-buildout/bin/instance\'.\n+    ...\n+\n+The buildout has updated our INI file:\n+\n+    >>> instance = os.path.join(sample_buildout, \'parts\', \'instance\')\n+    >>> wsgi_ini = open(os.path.join(instance, \'etc\', \'wsgi.ini\')).read()\n+    >>> print(wsgi_ini)\n+    [server:main]\n+    use = egg:waitress#main\n+    ...\n+    [logger_root]\n+    level = ERROR\n+    handlers = console, eventlog\n+    <BLANKLINE>\n+    [logger_plone]\n+    level = ERROR\n+    handlers = eventlog\n+    qualname = plone\n+    <BLANKLINE>\n+    [logger_waitress]\n+    level = ERROR\n+    handlers = eventlog\n+    qualname = waitress\n+    <BLANKLINE>\n+    [logger_wsgi]\n+    level = DEBUG\n+    handlers = accesslog\n+    qualname = wsgi\n+    propagate = 0\n+    ...\n+    [handler_accesslog]\n+    class = FileHandler\n+    args = (\'var/log/foo.log\',\'a\')\n+    level = DEBUG\n+    formatter = generic\n+    <BLANKLINE>\n+    [handler_eventlog]\n+    class = FileHandler\n+    args = (\'var/log/bar.log\', \'a\')\n+    level = NOTSET\n+    formatter = generic\n+    ...\n+\n+Next we want to disable access logging (but keep an event log file):\n+\n+    >>> write(\'buildout.cfg\',\n+    ... \'\'\'\n+    ... [buildout]\n+    ... parts = instance\n+    ... find-links = %(sample_buildout)s/eggs\n+    ...\n+    ... [instance]\n+    ... recipe = plone.recipe.zope2instance\n+    ... eggs =\n+    ... user = me:me\n+    ... access-log = disable\n+    ... \'\'\' % options)\n+\n+Let\'s run it::\n+\n+    >>> print(system(join(\'bin\', \'buildout\'))),\n+    Uninstalling instance.\n+    Installing instance.\n+    Generated script \'.../sample-buildout/bin/instance\'.\n+    ...\n+\n+The buildout has updated our INI file:\n+\n+    >>> instance = os.path.join(sample_buildout, \'parts\', \'instance\')\n+    >>> wsgi_ini = open(os.path.join(instance, \'etc\', \'wsgi.ini\')).read()\n+    >>> print(wsgi_ini)\n+    [server:main]\n+    use = egg:waitress#main\n+    ...\n+    [pipeline:main]\n+    pipeline =\n+        egg:Zope#httpexceptions\n+        zope\n+    ...\n+\n+Now we also want to disable event logging:\n+\n+    >>> write(\'buildout.cfg\',\n+    ... \'\'\'\n+    ... [buildout]\n+    ... parts = instance\n+    ... find-links = %(sample_buildout)s/eggs\n+    ...\n+    ... [instance]\n+    ... recipe = plone.recipe.zope2instance\n+    ... eggs =\n+    ... user = me:me\n+    ... access-log = disable\n+    ... event-log = disable\n+    ... \'\'\' % options)\n+\n+Let\'s run it::\n+\n+    >>> print(system(join(\'bin\', \'buildout\'))),\n+    Uninstalling instance.\n+    Installing instance.\n+    Generated script \'.../sample-buildout/bin/instance\'.\n+    ...\n+\n+The buildout has updated our INI file:\n+\n+    >>> instance = os.path.join(sample_buildout, \'parts\', \'instance\')\n+    >>> wsgi_ini = open(os.path.join(instance, \'etc\', \'wsgi.ini\')).read()\n+    >>> print(wsgi_ini)\n+    [server:main]\n+    use = egg:waitress#main\n+    ...\n+    [pipeline:main]\n+    pipeline =\n+        egg:Zope#httpexceptions\n+        zope\n+    ...\n+    [logger_root]\n+    level = INFO\n+    handlers = console\n+    <BLANKLINE>\n+    [logger_plone]\n+    level = INFO\n+    handlers =\n+    qualname = plone\n+    <BLANKLINE>\n+    [logger_waitress]\n+    level = INFO\n+    handlers =\n+    qualname = waitress\n+    ...\n'

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-03-05T08:25:19+01:00
Author: tschorr (tschorr) <t_schorr@gmx.de>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/d2dda3656d3d631b79dd0b1dfa4acfd906bddb96

fix doctests broken after merge; bump waitress version (fix asyncore deps, coevered so far by buildout version pins)

Files changed:
M setup.py
M src/plone/recipe/zope2instance/tests/wsgi.txt

b"diff --git a/setup.py b/setup.py\nindex 938e919..8941ab7 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -43,7 +43,7 @@\n         'Zope >= 4.0b1',\n         'ZODB >= 5.1.1',\n         'ZEO',\n-        'waitress >= 1.1.1',\n+        'waitress >= 1.2.0',\n         'Paste',\n     ],\n     extras_require={\ndiff --git a/src/plone/recipe/zope2instance/tests/wsgi.txt b/src/plone/recipe/zope2instance/tests/wsgi.txt\nindex d4513b1..5fff07f 100644\n--- a/src/plone/recipe/zope2instance/tests/wsgi.txt\n+++ b/src/plone/recipe/zope2instance/tests/wsgi.txt\n@@ -222,7 +222,8 @@ The buildout has updated our INI file:\n     >>> wsgi_ini = open(os.path.join(instance, 'etc', 'wsgi.ini')).read()\n     >>> print(wsgi_ini)\n     [server:main]\n-    use = egg:waitress#main\n+    paste.server_factory = plone.recipe.zope2instance:main\n+    use = egg:plone.recipe.zope2instance#main\n     ...\n     [logger_root]\n     level = ERROR\n@@ -286,7 +287,8 @@ The buildout has updated our INI file:\n     >>> wsgi_ini = open(os.path.join(instance, 'etc', 'wsgi.ini')).read()\n     >>> print(wsgi_ini)\n     [server:main]\n-    use = egg:waitress#main\n+    paste.server_factory = plone.recipe.zope2instance:main\n+    use = egg:plone.recipe.zope2instance#main\n     ...\n     [pipeline:main]\n     pipeline =\n@@ -324,7 +326,8 @@ The buildout has updated our INI file:\n     >>> wsgi_ini = open(os.path.join(instance, 'etc', 'wsgi.ini')).read()\n     >>> print(wsgi_ini)\n     [server:main]\n-    use = egg:waitress#main\n+    paste.server_factory = plone.recipe.zope2instance:main\n+    use = egg:plone.recipe.zope2instance#main\n     ...\n     [pipeline:main]\n     pipeline =\n"

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-03-06T10:10:03+01:00
Author: tschorr (tschorr) <t_schorr@gmx.de>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/4699b93bde7873bad2bafe53a89996ae6233e78b

avoid function name ambiguity, reorder import

Files changed:
M src/plone/recipe/zope2instance/ctl.py

b'diff --git a/src/plone/recipe/zope2instance/ctl.py b/src/plone/recipe/zope2instance/ctl.py\nindex 503bb75..04fece5 100644\n--- a/src/plone/recipe/zope2instance/ctl.py\n+++ b/src/plone/recipe/zope2instance/ctl.py\n@@ -27,10 +27,9 @@\n available actions.\n """\n \n-from waitress.wasyncore import dispatcher\n from pkg_resources import iter_entry_points\n from time import sleep\n-from waitress import serve\n+from waitress.wasyncore import dispatcher\n from ZConfig.loader import SchemaLoader\n from zdaemon.zdctl import ZDCmd, ZDCtlOptions\n from zdaemon.zdoptions import ZDOptions\n@@ -43,6 +42,7 @@\n import socket\n import sys\n import xml.sax\n+import waitress\n import zdaemon\n \n \n@@ -891,7 +891,7 @@ def serve_paste(app, global_conf, **kw):\n             sock = _sock\n         kw.update(sockets=[sock])\n     try:\n-        serve(app, **kw)\n+        waitress.serve(app, **kw)\n     finally:\n         if isinstance(sock, socket.socket):\n             sock.close()\n'

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2019-03-07T15:26:33+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/a650a72bbe32b1ee3fd92e03393776ce0cf79abd

Merge pull request #75 from plone/http-fast-listen-wsgi

Add http-fast-listen option for waitress

Files changed:
M CHANGES.rst
M setup.py
M src/plone/recipe/zope2instance/ctl.py
M src/plone/recipe/zope2instance/recipe.py
M src/plone/recipe/zope2instance/tests/wsgi.txt

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex bb3097b..f05bf33 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -8,6 +8,15 @@ Changelog\n \n .. towncrier release notes start\n \n+6.1.4 (unreleased)\n+------------------\n+\n+Bug fixes:\n+\n+- restore http-fast-listen for waitress (`#71 <https://github.com/plone/plone.recipe.zope2instance/issues/71>`_)\n+  [tschorr]\n+\n+\n 6.1.3 (2019-03-04)\n ------------------\n \ndiff --git a/setup.py b/setup.py\nindex 8ffb052..8941ab7 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -43,6 +43,7 @@\n         \'Zope >= 4.0b1\',\n         \'ZODB >= 5.1.1\',\n         \'ZEO\',\n+        \'waitress >= 1.2.0\',\n         \'Paste\',\n     ],\n     extras_require={\n@@ -51,5 +52,13 @@\n         ],\n     },\n     zip_safe=False,\n-    entry_points={\'zc.buildout\': [\'default = %s.recipe:Recipe\' % name]},\n+    entry_points={\n+        \'zc.buildout\': [\'default = %s.recipe:Recipe\' % name],\n+        \'paste.server_runner\': [\n+            \'main=plone.recipe.zope2instance.ctl:serve_paste\',\n+        ],\n+        \'paste.server_factory\': [\n+            \'main=plone.recipe.zope2instance.ctl:server_factory\',\n+        ],\n+        },\n )\ndiff --git a/src/plone/recipe/zope2instance/ctl.py b/src/plone/recipe/zope2instance/ctl.py\nindex 1ba9d55..04fece5 100644\n--- a/src/plone/recipe/zope2instance/ctl.py\n+++ b/src/plone/recipe/zope2instance/ctl.py\n@@ -28,6 +28,8 @@\n """\n \n from pkg_resources import iter_entry_points\n+from time import sleep\n+from waitress.wasyncore import dispatcher\n from ZConfig.loader import SchemaLoader\n from zdaemon.zdctl import ZDCmd, ZDCtlOptions\n from zdaemon.zdoptions import ZDOptions\n@@ -37,10 +39,13 @@\n import os.path\n import pkg_resources\n import six\n+import socket\n import sys\n import xml.sax\n+import waitress\n import zdaemon\n \n+\n if sys.version_info > (3, ):\n     basestring = str\n \n@@ -874,6 +879,43 @@ def help_adduser(self):\n         print("adduser <name> <password> -- add a Zope management user")\n \n \n+def serve_paste(app, global_conf, **kw):\n+    sock = None\n+    if \'prebound\' in global_conf:\n+        _sock = socket.fromfd(\n+            int(global_conf[\'prebound\']), socket.AF_INET, socket.SOCK_STREAM)\n+        if six.PY2:\n+            sock = socket.socket()\n+            sock._sock = _sock\n+        else:\n+            sock = _sock\n+        kw.update(sockets=[sock])\n+    try:\n+        waitress.serve(app, **kw)\n+    finally:\n+        if isinstance(sock, socket.socket):\n+            sock.close()\n+    return 0\n+\n+\n+def server_factory(global_conf, **kws):\n+    if \'fast-listen\' in kws:\n+        host, port = kws[\'fast-listen\'].split(\':\')\n+        prebound = dispatcher()\n+        prebound.create_socket(socket.AF_INET, socket.SOCK_STREAM)\n+        prebound.bind((host, int(port)))\n+        prebound.listen(5)\n+        while not prebound.readable():\n+            sleep(1)\n+        global_conf.update(prebound=str(prebound.socket.fileno()))\n+        del kws[\'fast-listen\']\n+    del kws[\'paste.server_factory\']\n+\n+    def serve(app):\n+        return serve_paste(app, global_conf, **kws)\n+    return serve\n+\n+\n def main(args=None):\n     """Customized entry point for launching Zope without forking other processes\n     """\ndiff --git a/src/plone/recipe/zope2instance/recipe.py b/src/plone/recipe/zope2instance/recipe.py\nindex 70fdbbe..a7f297b 100644\n--- a/src/plone/recipe/zope2instance/recipe.py\n+++ b/src/plone/recipe/zope2instance/recipe.py\n@@ -661,6 +661,7 @@ def build_wsgi_ini(self):\n         options = self.options\n         wsgi_ini_path = os.path.join(options[\'location\'], \'etc\', \'wsgi.ini\')\n         listen = options.get(\'http-address\', \'0.0.0.0:8080\')\n+        fast = \'fast-\' if options.get(\'http-fast-listen\') is not None else \'\'\n         if \':\' not in listen:\n             listen = \'0.0.0.0:{}\'.format(listen)\n \n@@ -698,6 +699,7 @@ def build_wsgi_ini(self):\n             \'location\': options[\'location\'],\n             \'http_address\': listen,\n             \'threads\': options.get(\'threads\', 4),\n+            \'fast-listen\': fast,\n             \'eventlog_name\': eventlog_name,\n             \'root_handlers\': root_handlers,\n             \'event_handlers\': event_handlers,\n@@ -1229,8 +1231,9 @@ def render_file_storage(self, file_storage, blob_storage,\n \n wsgi_ini_template = """\\\n [server:main]\n-use = egg:waitress#main\n-listen = %(http_address)s\n+paste.server_factory = plone.recipe.zope2instance:main\n+use = egg:plone.recipe.zope2instance#main\n+%(fast-listen)slisten = %(http_address)s\n threads = %(threads)s\n \n [app:zope]\ndiff --git a/src/plone/recipe/zope2instance/tests/wsgi.txt b/src/plone/recipe/zope2instance/tests/wsgi.txt\nindex 0c14ff7..5fff07f 100644\n--- a/src/plone/recipe/zope2instance/tests/wsgi.txt\n+++ b/src/plone/recipe/zope2instance/tests/wsgi.txt\n@@ -75,7 +75,8 @@ The buildout has also created an INI file containing the waitress configuration:\n     >>> wsgi_ini = open(os.path.join(instance, \'etc\', \'wsgi.ini\')).read()\n     >>> print(wsgi_ini)\n     [server:main]\n-    use = egg:waitress#main\n+    paste.server_factory = plone.recipe.zope2instance:main\n+    use = egg:plone.recipe.zope2instance#main\n     listen = 0.0.0.0:8080\n     threads = 4\n     <BLANKLINE>\n@@ -159,6 +160,7 @@ Let\'s create another buildout configuring a custom port and a custom number of w\n     ... eggs =\n     ... user = me:me\n     ... http-address = localhost:6543\n+    ... http-fast-listen = on\n     ... threads = 3\n     ... \'\'\' % options)\n \n@@ -176,8 +178,9 @@ The buildout has updated our INI file:\n     >>> wsgi_ini = open(os.path.join(instance, \'etc\', \'wsgi.ini\')).read()\n     >>> print(wsgi_ini)\n     [server:main]\n-    use = egg:waitress#main\n-    listen = localhost:6543\n+    paste.server_factory = plone.recipe.zope2instance:main\n+    use = egg:plone.recipe.zope2instance#main\n+    fast-listen = localhost:6543\n     threads = 3\n     <BLANKLINE>\n     [app:zope]\n@@ -219,7 +222,8 @@ The buildout has updated our INI file:\n     >>> wsgi_ini = open(os.path.join(instance, \'etc\', \'wsgi.ini\')).read()\n     >>> print(wsgi_ini)\n     [server:main]\n-    use = egg:waitress#main\n+    paste.server_factory = plone.recipe.zope2instance:main\n+    use = egg:plone.recipe.zope2instance#main\n     ...\n     [logger_root]\n     level = ERROR\n@@ -283,7 +287,8 @@ The buildout has updated our INI file:\n     >>> wsgi_ini = open(os.path.join(instance, \'etc\', \'wsgi.ini\')).read()\n     >>> print(wsgi_ini)\n     [server:main]\n-    use = egg:waitress#main\n+    paste.server_factory = plone.recipe.zope2instance:main\n+    use = egg:plone.recipe.zope2instance#main\n     ...\n     [pipeline:main]\n     pipeline =\n@@ -321,7 +326,8 @@ The buildout has updated our INI file:\n     >>> wsgi_ini = open(os.path.join(instance, \'etc\', \'wsgi.ini\')).read()\n     >>> print(wsgi_ini)\n     [server:main]\n-    use = egg:waitress#main\n+    paste.server_factory = plone.recipe.zope2instance:main\n+    use = egg:plone.recipe.zope2instance#main\n     ...\n     [pipeline:main]\n     pipeline =\n'

