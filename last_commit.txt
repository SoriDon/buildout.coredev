Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-08-19T15:19:58+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/ac1fc408fe934fd1a229d4e185dbf2e434d23f1c

isort, black, security decorators

Files changed:
M Products/CMFPlone/ActionsTool.py
M Products/CMFPlone/PloneBaseTool.py

b'diff --git a/Products/CMFPlone/ActionsTool.py b/Products/CMFPlone/ActionsTool.py\nindex c8d4f8c92c..5ae39fb5f0 100644\n--- a/Products/CMFPlone/ActionsTool.py\n+++ b/Products/CMFPlone/ActionsTool.py\n@@ -2,55 +2,58 @@\n from AccessControl.class_init import InitializeClass\n from Products.CMFCore.ActionInformation import ActionInfo\n from Products.CMFCore.ActionsTool import ActionsTool as BaseTool\n+from Products.CMFCore.interfaces import IActionCategory\n from Products.CMFCore.interfaces import IActionProvider\n from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n-from Products.CMFCore.interfaces import IActionCategory\n \n \n class ActionsTool(PloneBaseTool, BaseTool):\n \n-    meta_type = \'Plone Actions Tool\'\n-    toolicon = \'skins/plone_images/confirm_icon.png\'\n+    meta_type = "Plone Actions Tool"\n+    toolicon = "skins/plone_images/confirm_icon.png"\n \n     security = ClassSecurityInfo()\n \n     #\n     #   ActionProvider interface\n     #\n-    security.declarePrivate(\'listActions\')\n-\n-    def listActions(self, info=None, object=None,\n-                    categories=None, ignore_categories=None):\n-        """ List all the actions defined by a provider.\n-        """\n+    @security.private\n+    def listActions(\n+        self, info=None, object=None, categories=None, ignore_categories=None\n+    ):\n+        """List all the actions defined by a provider."""\n         actions = list(self._actions)\n \n         if ignore_categories is None:\n             ignore_categories = ()\n \n         if categories is None:\n-            categories = [cat for cat in self\n-                          if cat not in ignore_categories]\n+            categories = [cat for cat in self if cat not in ignore_categories]\n         else:\n-            categories = [cat for cat in self\n-                          if cat in categories]\n+            categories = [cat for cat in self if cat in categories]\n \n         for category in categories:\n             if IActionCategory.providedBy(self[category]):\n                 actions.extend(self[category].listActions())\n         return tuple(actions)\n \n-    security.declarePublic(\'listActionInfos\')\n-\n-    def listActionInfos(self, action_chain=None, object=None,\n-                        check_visibility=1, check_permissions=1,\n-                        check_condition=1, max=-1,\n-                        categories=None, ignore_categories=None):\n+    @security.public\n+    def listActionInfos(\n+        self,\n+        action_chain=None,\n+        object=None,\n+        check_visibility=1,\n+        check_permissions=1,\n+        check_condition=1,\n+        max=-1,\n+        categories=None,\n+        ignore_categories=None,\n+    ):\n         # List ActionInfo objects.\n         # (method is without docstring to disable publishing)\n-        actions = self.listActions(object=object,\n-                                   categories=categories,\n-                                   ignore_categories=ignore_categories)\n+        actions = self.listActions(\n+            object=object, categories=categories, ignore_categories=ignore_categories\n+        )\n         if not actions:\n             return []\n \n@@ -60,26 +63,25 @@ def listActionInfos(self, action_chain=None, object=None,\n         if action_chain:\n             filtered_actions = []\n             if isinstance(action_chain, str):\n-                action_chain = (action_chain, )\n+                action_chain = (action_chain,)\n             for action_ident in action_chain:\n-                sep = action_ident.rfind(\'/\')\n-                category, id = action_ident[:sep], action_ident[sep + 1:]\n+                sep = action_ident.rfind("/")\n+                category, id = action_ident[:sep], action_ident[sep + 1 :]\n                 for ai in actions:\n-                    if id == ai[\'id\'] and category == ai[\'category\']:\n+                    if id == ai["id"] and category == ai["category"]:\n                         filtered_actions.append(ai)\n             actions = filtered_actions\n \n         if ignore_categories is not None:\n-            actions = [ai for ai in actions\n-                       if ai[\'category\'] not in ignore_categories]\n+            actions = [ai for ai in actions if ai["category"] not in ignore_categories]\n \n         action_infos = []\n         for ai in actions:\n-            if check_visibility and not ai[\'visible\']:\n+            if check_visibility and not ai["visible"]:\n                 continue\n-            if check_permissions and not ai[\'allowed\']:\n+            if check_permissions and not ai["allowed"]:\n                 continue\n-            if check_condition and not ai[\'available\']:\n+            if check_condition and not ai["available"]:\n                 continue\n             action_infos.append(ai)\n             if max + 1 and len(action_infos) >= max:\n@@ -89,16 +91,16 @@ def listActionInfos(self, action_chain=None, object=None,\n     #\n     #   \'portal_actions\' interface methods\n     #\n-    security.declarePublic(\'listFilteredActionsFor\')\n-\n-    def listFilteredActionsFor(self, object=None,\n-                               ignore_providers=(),\n-                               ignore_categories=None):\n+    @security.public\n+    def listFilteredActionsFor(\n+        self, object=None, ignore_providers=(), ignore_categories=None\n+    ):\n         # List all actions available to the user.\n         actions = []\n \n-        providers = [name for name in self.listActionProviders()\n-                     if name not in ignore_providers]\n+        providers = [\n+            name for name in self.listActionProviders() if name not in ignore_providers\n+        ]\n \n         # Include actions from specific tools.\n         for provider_name in providers:\n@@ -107,11 +109,12 @@ def listFilteredActionsFor(self, object=None,\n             if provider is None:\n                 continue\n             if IActionProvider.providedBy(provider):\n-                if provider_name == \'portal_actions\':\n-                    actions.extend(provider.listActionInfos(\n-                                   object=object,\n-                                   ignore_categories=ignore_categories\n-                                   ))\n+                if provider_name == "portal_actions":\n+                    actions.extend(\n+                        provider.listActionInfos(\n+                            object=object, ignore_categories=ignore_categories\n+                        )\n+                    )\n                 else:\n                     actions.extend(provider.listActionInfos(object=object))\n \n@@ -121,17 +124,19 @@ def listFilteredActionsFor(self, object=None,\n                 actions.extend(object.listActionInfos(object=object))\n \n         # Reorganize the actions by category.\n-        filtered_actions = {\'user\': [],\n-                            \'folder\': [],\n-                            \'object\': [],\n-                            \'global\': [],\n-                            \'workflow\': [],\n-                            }\n+        filtered_actions = {\n+            "user": [],\n+            "folder": [],\n+            "object": [],\n+            "global": [],\n+            "workflow": [],\n+        }\n \n         for action in actions:\n-            catlist = filtered_actions.setdefault(action[\'category\'], [])\n+            catlist = filtered_actions.setdefault(action["category"], [])\n             catlist.append(action)\n \n         return filtered_actions\n \n+\n InitializeClass(ActionsTool)\ndiff --git a/Products/CMFPlone/PloneBaseTool.py b/Products/CMFPlone/PloneBaseTool.py\nindex d0d0a9860d..e3ce889ede 100644\n--- a/Products/CMFPlone/PloneBaseTool.py\n+++ b/Products/CMFPlone/PloneBaseTool.py\n@@ -1,40 +1,39 @@\n-from AccessControl.class_init import InitializeClass\n from AccessControl import ClassSecurityInfo\n-from plone.base.interfaces import IPloneBaseTool\n+from AccessControl.class_init import InitializeClass\n from Acquisition import aq_base\n-from Acquisition import aq_parent\n from Acquisition import aq_inner\n-\n+from Acquisition import aq_parent\n+from plone.base.interfaces import IPloneBaseTool\n from Products.CMFCore import Expression\n+from Products.CMFCore.ActionInformation import oai\n from Products.CMFCore.utils import getToolByName\n-\n-from zope.interface import implementer\n from zope.component import getMultiAdapter\n+from zope.interface import implementer\n+\n \n # getOAI() and getExprContext copied from CMF 1.5.1+cvs\n # Copyright (c) 2002 Zope Corporation and Contributors. All Rights Reserved.\n # ZPL 2.1\n-from Products.CMFCore.ActionInformation import oai\n \n \n def getOAI(context, object=None):\n-    request = getattr(context, \'REQUEST\', None)\n+    request = getattr(context, "REQUEST", None)\n     if request:\n-        cache = request.get(\'_oai_cache\', None)\n+        cache = request.get("_oai_cache", None)\n         if cache is None:\n-            request[\'_oai_cache\'] = cache = {}\n+            request["_oai_cache"] = cache = {}\n         info = cache.get(id(object), None)\n     else:\n         info = None\n     if info is None:\n-        if object is None or not hasattr(object, \'aq_base\'):\n+        if object is None or not hasattr(object, "aq_base"):\n             folder = None\n         else:\n             folder = object\n             # Search up the containment hierarchy until we find an\n             # object that claims it\'s a folder.\n             while folder is not None:\n-                if getattr(aq_base(folder), \'isPrincipiaFolderish\', 0):\n+                if getattr(aq_base(folder), "isPrincipiaFolderish", 0):\n                     # found it.\n                     break\n                 else:\n@@ -53,59 +52,59 @@ def createExprContext(folder, portal, object):\n         view_obj = portal\n     req = view_obj.REQUEST\n \n-    expr_context.setGlobal(\'portal\', portal)\n+    expr_context.setGlobal("portal", portal)\n \n-    globals_view = getMultiAdapter((view_obj, req), name=\'plone\')\n-    expr_context.setGlobal(\'globals_view\', globals_view)\n+    globals_view = getMultiAdapter((view_obj, req), name="plone")\n+    expr_context.setGlobal("globals_view", globals_view)\n \n     # TODO: For some reason, when using getMultiAdapter() here we get\n     # authoriziation problems in some cases (e.g. when using one of these\n     # in a python: expression in an action).\n \n-    plone_portal_state = view_obj.restrictedTraverse(\'@@plone_portal_state\')\n-    expr_context.setGlobal(\'plone_portal_state\', plone_portal_state)\n+    plone_portal_state = view_obj.restrictedTraverse("@@plone_portal_state")\n+    expr_context.setGlobal("plone_portal_state", plone_portal_state)\n \n-    plone_context_state = view_obj.restrictedTraverse(\'@@plone_context_state\')\n-    expr_context.setGlobal(\'plone_context_state\', plone_context_state)\n+    plone_context_state = view_obj.restrictedTraverse("@@plone_context_state")\n+    expr_context.setGlobal("plone_context_state", plone_context_state)\n \n-    plone_tools = view_obj.restrictedTraverse(\'@@plone_tools\')\n-    expr_context.setGlobal(\'plone_tools\', plone_tools)\n+    plone_tools = view_obj.restrictedTraverse("@@plone_tools")\n+    expr_context.setGlobal("plone_tools", plone_tools)\n \n     # Add checkPermission to the action expression context to make cleaner\n     # faster expressions\n-    membership_tool = getToolByName(view_obj, \'portal_membership\')\n+    membership_tool = getToolByName(view_obj, "portal_membership")\n     checkPerm = membership_tool.checkPermission\n-    expr_context.setGlobal(\'checkPermission\', checkPerm)\n+    expr_context.setGlobal("checkPermission", checkPerm)\n \n     # add \'context\' as an alias for \'object\'\n-    expr_context.setGlobal(\'context\', object)\n+    expr_context.setGlobal("context", object)\n \n     # need this for resolving in Unicode expressions\n-    expr_context.setContext(\'context\', object)\n+    expr_context.setContext("context", object)\n \n     return expr_context\n \n \n def getExprContext(context, object=None):\n-    request = getattr(context, \'REQUEST\', None)\n+    request = getattr(context, "REQUEST", None)\n     if request:\n-        cache = request.get(\'_plone_ec_cache\', None)\n+        cache = request.get("_plone_ec_cache", None)\n         if cache is None:\n-            request[\'_plone_ec_cache\'] = cache = {}\n+            request["_plone_ec_cache"] = cache = {}\n         ec = cache.get(id(object), None)\n     else:\n         ec = None\n     if ec is None:\n-        utool = getToolByName(context, \'portal_url\')\n+        utool = getToolByName(context, "portal_url")\n         portal = utool.getPortalObject()\n-        if object is None or not hasattr(object, \'aq_base\'):\n+        if object is None or not hasattr(object, "aq_base"):\n             folder = portal\n         else:\n             folder = object\n             # Search up the containment hierarchy until we find an\n             # object that claims it\'s a folder.\n             while folder is not None:\n-                if getattr(aq_base(folder), \'isPrincipiaFolderish\', 0):\n+                if getattr(aq_base(folder), "isPrincipiaFolderish", 0):\n                     # found it.\n                     break\n                 else:\n@@ -119,8 +118,7 @@ def getExprContext(context, object=None):\n \n @implementer(IPloneBaseTool)\n class PloneBaseTool:\n-    """Base class of all tools used in CMFPlone and Plone Core\n-    """\n+    """Base class of all tools used in CMFPlone and Plone Core"""\n \n     security = ClassSecurityInfo()\n \n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-08-19T15:20:39+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/fad7768207119d3400d4fcb380af1f9d8c3666a1

fix actions with globals_view/navigationRootUrl to use portal_state instead

Files changed:
M Products/CMFPlone/profiles/default/actions.xml

b'diff --git a/Products/CMFPlone/profiles/default/actions.xml b/Products/CMFPlone/profiles/default/actions.xml\nindex 0f79034d3f..621f91cec6 100644\n--- a/Products/CMFPlone/profiles/default/actions.xml\n+++ b/Products/CMFPlone/profiles/default/actions.xml\n@@ -47,7 +47,7 @@\n   <object name="sitemap" meta_type="CMF Action" i18n:domain="plone">\n    <property name="title" i18n:translate="">Site Map</property>\n    <property name="description" i18n:translate=""></property>\n-   <property name="url_expr">string:${globals_view/navigationRootUrl}/sitemap</property>\n+   <property name="url_expr">python:f"{plone_portal_state.navigation_root_url()}/sitemap"</property>\n    <property name="icon_expr">string:plone-sitemap</property>\n    <property name="available_expr"></property>\n    <property name="permissions">\n@@ -59,7 +59,7 @@\n    <property name="title" i18n:translate="">Accessibility</property>\n    <property name="description" i18n:translate=""></property>\n    <property\n-      name="url_expr">string:${globals_view/navigationRootUrl}/accessibility-info</property>\n+      name="url_expr">python:f"{plone_portal_state.navigation_root_url()}/accessibility-info"</property>\n    <property name="icon_expr">string:plone-accessibility</property>\n    <property name="available_expr"></property>\n    <property name="permissions">\n@@ -70,7 +70,7 @@\n   <object name="contact" meta_type="CMF Action" i18n:domain="plone">\n    <property name="title" i18n:translate="">Contact</property>\n    <property name="description" i18n:translate=""></property>\n-   <property name="url_expr">string:${globals_view/navigationRootUrl}/contact-info</property>\n+   <property name="url_expr">python:f"{plone_portal_state.navigation_root_url()}/contact-info"</property>\n    <property name="icon_expr">string:plone-contact-info</property>\n    <property name="available_expr"></property>\n    <property name="permissions">\n@@ -227,8 +227,7 @@\n   <object name="index_html" meta_type="CMF Action" i18n:domain="plone">\n    <property name="title" i18n:translate="">Home</property>\n    <property name="description" i18n:translate=""></property>\n-   <property\n-      name="url_expr">string:${globals_view/navigationRootUrl}</property>\n+   <property name="url_expr">python:f"{plone_portal_state.navigation_root_url()}"</property>\n    <property name="icon_expr">string:plone-home</property>\n    <property name="available_expr"></property>\n    <property name="permissions">\n@@ -243,7 +242,7 @@\n    <property name="title" i18n:translate="">Preferences</property>\n    <property name="description" i18n:translate=""></property>\n    <property\n-      name="url_expr">string:${globals_view/navigationRootUrl}/@@personal-preferences</property>\n+      name="url_expr">python:f"{plone_portal_state.navigation_root_url()}/@@personal-preferences"</property>\n    <property name="icon_expr">string:plone-user</property>\n    <property name="available_expr">python:member is not None</property>\n    <property name="permissions">\n@@ -266,7 +265,7 @@\n   <object name="login" meta_type="CMF Action" i18n:domain="plone">\n    <property name="title" i18n:translate="">Log in</property>\n    <property name="description" i18n:translate=""></property>\n-   <property name="url_expr">string:${globals_view/navigationRootUrl}/login</property>\n+   <property name="url_expr">python:f"{plone_portal_state.navigation_root_url()}/login"</property>\n    <property name="icon_expr">string:plone-login</property>\n    <property name="available_expr">python:member is None</property>\n    <property name="permissions">\n@@ -278,7 +277,7 @@\n   <object name="join" meta_type="CMF Action" i18n:domain="plone">\n    <property name="title" i18n:translate="">Register</property>\n    <property name="description" i18n:translate=""></property>\n-   <property name="url_expr">string:${globals_view/navigationRootUrl}/@@register</property>\n+   <property name="url_expr">python:f"{plone_portal_state.navigation_root_url()}/@@register"</property>\n    <property name="icon_expr">string:plone-register</property>\n    <property name="available_expr">python:member is None</property>\n    <property name="permissions">\n@@ -290,7 +289,7 @@\n   <object name="undo" meta_type="CMF Action" i18n:domain="plone">\n    <property name="title" i18n:translate="">Undo</property>\n    <property name="description" i18n:translate=""></property>\n-   <property name="url_expr">string:${globals_view/navigationRootUrl}/undo_form</property>\n+   <property name="url_expr">python:f"{plone_portal_state.navigation_root_url()}/undo_form"</property>\n    <property name="icon_expr">string:plone-undo</property>\n    <property name="available_expr">python:member is not None</property>\n    <property name="permissions">\n@@ -313,7 +312,7 @@\n   <object name="logout" meta_type="CMF Action" i18n:domain="plone">\n    <property name="title" i18n:translate="">Log out</property>\n    <property name="description" i18n:translate=""></property>\n-   <property name="url_expr">string:${globals_view/navigationRootUrl}/logout</property>\n+   <property name="url_expr">python:f"{plone_portal_state.navigation_root_url()}/logout"</property>\n    <property name="icon_expr">string:plone-logout</property>\n    <property name="available_expr">python:member is not None</property>\n    <property name="permissions">\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-08-19T15:30:08+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/10ec913fe8c433b2e1ce9b141c3d4512a7062208

fix expressions to not use deprecated calls

Files changed:
M Products/CMFPlone/profiles/default/actions.xml

b'diff --git a/Products/CMFPlone/profiles/default/actions.xml b/Products/CMFPlone/profiles/default/actions.xml\nindex 621f91cec6..19ed40366d 100644\n--- a/Products/CMFPlone/profiles/default/actions.xml\n+++ b/Products/CMFPlone/profiles/default/actions.xml\n@@ -86,7 +86,7 @@\n    <property name="title" i18n:translate="">Contents</property>\n    <property name="description" i18n:translate=""></property>\n    <property\n-      name="url_expr">string:${globals_view/getCurrentFolderUrl}/folder_contents</property>\n+      name="url_expr">python:f"{plone_context_state.folder().absolute_url()}/folder_contents"</property>\n    <property name="icon_expr">string:toolbar-action/folderContents</property>\n    <property name="permissions">\n     <element value="List folder contents"/>\n@@ -151,7 +151,7 @@\n       name="url_expr">string:$object_url/object_cut</property>\n    <property name="icon_expr">string:plone-cut</property>\n    <property\n-      name="available_expr">python:checkPermission("Delete objects", globals_view.getParentObject()) and checkPermission("Copy or Move", object) and not globals_view.isPortalOrPortalDefaultPage()</property>\n+      name="available_expr">python:checkPermission("Delete objects", plone_context_state.parent()) and checkPermission("Copy or Move", object) and not plone_context_state.is_portal_root()</property>\n    <property name="permissions">\n     <element value="Delete objects"/>\n    </property>\n@@ -164,7 +164,7 @@\n       name="url_expr">string:$object_url/object_copy</property>\n    <property name="icon_expr">string:plone-copy</property>\n    <property\n-      name="available_expr">python:checkPermission("Copy or Move", object) and not globals_view.isPortalOrPortalDefaultPage()</property>\n+      name="available_expr">python:checkPermission("Copy or Move", object) and not plone_context_state.is_portal_root()</property>\n    <property name="permissions">\n     <element value="View"/>\n    </property>\n@@ -173,7 +173,7 @@\n   <object name="paste" meta_type="CMF Action" i18n:domain="plone">\n    <property name="title" i18n:translate="">Paste</property>\n    <property name="description" i18n:translate=""></property>\n-   <property name="url_expr">string:${globals_view/getCurrentFolderUrl}/object_paste</property>\n+   <property name="url_expr">python:f"{plone_context_state.folder().absolute_url()}/object_paste"</property>\n    <property name="icon_expr">string:plone-paste</property>\n    <property name="available_expr">folder/cb_dataValid|nothing</property>\n    <property name="permissions">\n@@ -188,7 +188,7 @@\n       name="url_expr">string:$object_url/delete_confirmation</property>\n    <property name="icon_expr">string:plone-delete</property>\n    <property\n-      name="available_expr">python:checkPermission("Delete objects", globals_view.getParentObject()) and not globals_view.isPortalOrPortalDefaultPage()</property>\n+      name="available_expr">python:checkPermission("Delete objects", plone_context_state.parent()) and not plone_context_state.is_portal_root()</property>\n    <property name="permissions">\n     <element value="Delete objects"/>\n    </property>\n@@ -202,7 +202,7 @@\n       name="url_expr">string:$object_url/object_rename</property>\n    <property name="icon_expr">string:plone-rename</property>\n    <property\n-      name="available_expr">python:checkPermission("Delete objects", globals_view.getParentObject()) and checkPermission("Copy or Move", object) and checkPermission("Add portal content", object) and not globals_view.isPortalOrPortalDefaultPage()</property>\n+      name="available_expr">python:checkPermission("Delete objects", plone_context_state.parent()) and checkPermission("Copy or Move", object) and checkPermission("Add portal content", object) and not plone_context_state.is_portal_root()</property>\n    <property name="permissions">\n     <element value="Add portal content"/>\n    </property>\n@@ -215,7 +215,7 @@\n    <property\n       name="url_expr">string: ${object_url}/@@manage-aliases</property>\n    <property name="icon_expr">string:plone-redirection</property>\n-   <property name="available_expr">python:not globals_view.isPortalOrPortalDefaultPage()</property>\n+   <property name="available_expr">python:not plone_context_state.is_portal_root()</property>\n    <property name="permissions">\n     <element value="Manage Context Aliases"/>\n    </property>\n@@ -227,7 +227,7 @@\n   <object name="index_html" meta_type="CMF Action" i18n:domain="plone">\n    <property name="title" i18n:translate="">Home</property>\n    <property name="description" i18n:translate=""></property>\n-   <property name="url_expr">python:f"{plone_portal_state.navigation_root_url()}"</property>\n+   <property name="url_expr">python:plone_portal_state.navigation_root_url()</property>\n    <property name="icon_expr">string:plone-home</property>\n    <property name="available_expr"></property>\n    <property name="permissions">\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-08-19T15:38:50+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/c4055d1680c320d8ed7ab62b52eb7272954e7011

add changelog

Files changed:
A news/3616.bugfix

b'diff --git a/news/3616.bugfix b/news/3616.bugfix\nnew file mode 100644\nindex 0000000000..178ec178c5\n--- /dev/null\n+++ b/news/3616.bugfix\n@@ -0,0 +1,3 @@\n+Do not use deprecated calls in actions expressions.\n+ActionsTool and PloneBasetool got an code style overhaul.\n+[jensens]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-08-19T16:37:12+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/2407839e7797799a914fd70aecfeca76525dedb9

fix test to check for expression without deprecation

Files changed:
M Products/CMFPlone/tests/testPortalCreation.py

b"diff --git a/Products/CMFPlone/tests/testPortalCreation.py b/Products/CMFPlone/tests/testPortalCreation.py\nindex 08498041e6..0fc4b4aa12 100644\n--- a/Products/CMFPlone/tests/testPortalCreation.py\n+++ b/Products/CMFPlone/tests/testPortalCreation.py\n@@ -681,7 +681,7 @@ def testHomeActionUsesView(self):\n         homeAction = [x for x in actions if x.id == 'index_html'][0]\n         self.assertEqual(\n             homeAction.getInfoData()[0]['url'].text,\n-            'string:${globals_view/navigationRootUrl}',\n+            'python:plone_portal_state.navigation_root_url()',\n         )\n \n     def testPloneLexicon(self):\n"

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-08-19T22:49:14+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/a0f3373067a9425694298471dbef2c86ba0918dd

Merge pull request #3616 from plone/fix-actions

Fix actions

Files changed:
A news/3616.bugfix
M Products/CMFPlone/ActionsTool.py
M Products/CMFPlone/PloneBaseTool.py
M Products/CMFPlone/profiles/default/actions.xml
M Products/CMFPlone/tests/testPortalCreation.py

b'diff --git a/Products/CMFPlone/ActionsTool.py b/Products/CMFPlone/ActionsTool.py\nindex c8d4f8c92c..5ae39fb5f0 100644\n--- a/Products/CMFPlone/ActionsTool.py\n+++ b/Products/CMFPlone/ActionsTool.py\n@@ -2,55 +2,58 @@\n from AccessControl.class_init import InitializeClass\n from Products.CMFCore.ActionInformation import ActionInfo\n from Products.CMFCore.ActionsTool import ActionsTool as BaseTool\n+from Products.CMFCore.interfaces import IActionCategory\n from Products.CMFCore.interfaces import IActionProvider\n from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n-from Products.CMFCore.interfaces import IActionCategory\n \n \n class ActionsTool(PloneBaseTool, BaseTool):\n \n-    meta_type = \'Plone Actions Tool\'\n-    toolicon = \'skins/plone_images/confirm_icon.png\'\n+    meta_type = "Plone Actions Tool"\n+    toolicon = "skins/plone_images/confirm_icon.png"\n \n     security = ClassSecurityInfo()\n \n     #\n     #   ActionProvider interface\n     #\n-    security.declarePrivate(\'listActions\')\n-\n-    def listActions(self, info=None, object=None,\n-                    categories=None, ignore_categories=None):\n-        """ List all the actions defined by a provider.\n-        """\n+    @security.private\n+    def listActions(\n+        self, info=None, object=None, categories=None, ignore_categories=None\n+    ):\n+        """List all the actions defined by a provider."""\n         actions = list(self._actions)\n \n         if ignore_categories is None:\n             ignore_categories = ()\n \n         if categories is None:\n-            categories = [cat for cat in self\n-                          if cat not in ignore_categories]\n+            categories = [cat for cat in self if cat not in ignore_categories]\n         else:\n-            categories = [cat for cat in self\n-                          if cat in categories]\n+            categories = [cat for cat in self if cat in categories]\n \n         for category in categories:\n             if IActionCategory.providedBy(self[category]):\n                 actions.extend(self[category].listActions())\n         return tuple(actions)\n \n-    security.declarePublic(\'listActionInfos\')\n-\n-    def listActionInfos(self, action_chain=None, object=None,\n-                        check_visibility=1, check_permissions=1,\n-                        check_condition=1, max=-1,\n-                        categories=None, ignore_categories=None):\n+    @security.public\n+    def listActionInfos(\n+        self,\n+        action_chain=None,\n+        object=None,\n+        check_visibility=1,\n+        check_permissions=1,\n+        check_condition=1,\n+        max=-1,\n+        categories=None,\n+        ignore_categories=None,\n+    ):\n         # List ActionInfo objects.\n         # (method is without docstring to disable publishing)\n-        actions = self.listActions(object=object,\n-                                   categories=categories,\n-                                   ignore_categories=ignore_categories)\n+        actions = self.listActions(\n+            object=object, categories=categories, ignore_categories=ignore_categories\n+        )\n         if not actions:\n             return []\n \n@@ -60,26 +63,25 @@ def listActionInfos(self, action_chain=None, object=None,\n         if action_chain:\n             filtered_actions = []\n             if isinstance(action_chain, str):\n-                action_chain = (action_chain, )\n+                action_chain = (action_chain,)\n             for action_ident in action_chain:\n-                sep = action_ident.rfind(\'/\')\n-                category, id = action_ident[:sep], action_ident[sep + 1:]\n+                sep = action_ident.rfind("/")\n+                category, id = action_ident[:sep], action_ident[sep + 1 :]\n                 for ai in actions:\n-                    if id == ai[\'id\'] and category == ai[\'category\']:\n+                    if id == ai["id"] and category == ai["category"]:\n                         filtered_actions.append(ai)\n             actions = filtered_actions\n \n         if ignore_categories is not None:\n-            actions = [ai for ai in actions\n-                       if ai[\'category\'] not in ignore_categories]\n+            actions = [ai for ai in actions if ai["category"] not in ignore_categories]\n \n         action_infos = []\n         for ai in actions:\n-            if check_visibility and not ai[\'visible\']:\n+            if check_visibility and not ai["visible"]:\n                 continue\n-            if check_permissions and not ai[\'allowed\']:\n+            if check_permissions and not ai["allowed"]:\n                 continue\n-            if check_condition and not ai[\'available\']:\n+            if check_condition and not ai["available"]:\n                 continue\n             action_infos.append(ai)\n             if max + 1 and len(action_infos) >= max:\n@@ -89,16 +91,16 @@ def listActionInfos(self, action_chain=None, object=None,\n     #\n     #   \'portal_actions\' interface methods\n     #\n-    security.declarePublic(\'listFilteredActionsFor\')\n-\n-    def listFilteredActionsFor(self, object=None,\n-                               ignore_providers=(),\n-                               ignore_categories=None):\n+    @security.public\n+    def listFilteredActionsFor(\n+        self, object=None, ignore_providers=(), ignore_categories=None\n+    ):\n         # List all actions available to the user.\n         actions = []\n \n-        providers = [name for name in self.listActionProviders()\n-                     if name not in ignore_providers]\n+        providers = [\n+            name for name in self.listActionProviders() if name not in ignore_providers\n+        ]\n \n         # Include actions from specific tools.\n         for provider_name in providers:\n@@ -107,11 +109,12 @@ def listFilteredActionsFor(self, object=None,\n             if provider is None:\n                 continue\n             if IActionProvider.providedBy(provider):\n-                if provider_name == \'portal_actions\':\n-                    actions.extend(provider.listActionInfos(\n-                                   object=object,\n-                                   ignore_categories=ignore_categories\n-                                   ))\n+                if provider_name == "portal_actions":\n+                    actions.extend(\n+                        provider.listActionInfos(\n+                            object=object, ignore_categories=ignore_categories\n+                        )\n+                    )\n                 else:\n                     actions.extend(provider.listActionInfos(object=object))\n \n@@ -121,17 +124,19 @@ def listFilteredActionsFor(self, object=None,\n                 actions.extend(object.listActionInfos(object=object))\n \n         # Reorganize the actions by category.\n-        filtered_actions = {\'user\': [],\n-                            \'folder\': [],\n-                            \'object\': [],\n-                            \'global\': [],\n-                            \'workflow\': [],\n-                            }\n+        filtered_actions = {\n+            "user": [],\n+            "folder": [],\n+            "object": [],\n+            "global": [],\n+            "workflow": [],\n+        }\n \n         for action in actions:\n-            catlist = filtered_actions.setdefault(action[\'category\'], [])\n+            catlist = filtered_actions.setdefault(action["category"], [])\n             catlist.append(action)\n \n         return filtered_actions\n \n+\n InitializeClass(ActionsTool)\ndiff --git a/Products/CMFPlone/PloneBaseTool.py b/Products/CMFPlone/PloneBaseTool.py\nindex d0d0a9860d..e3ce889ede 100644\n--- a/Products/CMFPlone/PloneBaseTool.py\n+++ b/Products/CMFPlone/PloneBaseTool.py\n@@ -1,40 +1,39 @@\n-from AccessControl.class_init import InitializeClass\n from AccessControl import ClassSecurityInfo\n-from plone.base.interfaces import IPloneBaseTool\n+from AccessControl.class_init import InitializeClass\n from Acquisition import aq_base\n-from Acquisition import aq_parent\n from Acquisition import aq_inner\n-\n+from Acquisition import aq_parent\n+from plone.base.interfaces import IPloneBaseTool\n from Products.CMFCore import Expression\n+from Products.CMFCore.ActionInformation import oai\n from Products.CMFCore.utils import getToolByName\n-\n-from zope.interface import implementer\n from zope.component import getMultiAdapter\n+from zope.interface import implementer\n+\n \n # getOAI() and getExprContext copied from CMF 1.5.1+cvs\n # Copyright (c) 2002 Zope Corporation and Contributors. All Rights Reserved.\n # ZPL 2.1\n-from Products.CMFCore.ActionInformation import oai\n \n \n def getOAI(context, object=None):\n-    request = getattr(context, \'REQUEST\', None)\n+    request = getattr(context, "REQUEST", None)\n     if request:\n-        cache = request.get(\'_oai_cache\', None)\n+        cache = request.get("_oai_cache", None)\n         if cache is None:\n-            request[\'_oai_cache\'] = cache = {}\n+            request["_oai_cache"] = cache = {}\n         info = cache.get(id(object), None)\n     else:\n         info = None\n     if info is None:\n-        if object is None or not hasattr(object, \'aq_base\'):\n+        if object is None or not hasattr(object, "aq_base"):\n             folder = None\n         else:\n             folder = object\n             # Search up the containment hierarchy until we find an\n             # object that claims it\'s a folder.\n             while folder is not None:\n-                if getattr(aq_base(folder), \'isPrincipiaFolderish\', 0):\n+                if getattr(aq_base(folder), "isPrincipiaFolderish", 0):\n                     # found it.\n                     break\n                 else:\n@@ -53,59 +52,59 @@ def createExprContext(folder, portal, object):\n         view_obj = portal\n     req = view_obj.REQUEST\n \n-    expr_context.setGlobal(\'portal\', portal)\n+    expr_context.setGlobal("portal", portal)\n \n-    globals_view = getMultiAdapter((view_obj, req), name=\'plone\')\n-    expr_context.setGlobal(\'globals_view\', globals_view)\n+    globals_view = getMultiAdapter((view_obj, req), name="plone")\n+    expr_context.setGlobal("globals_view", globals_view)\n \n     # TODO: For some reason, when using getMultiAdapter() here we get\n     # authoriziation problems in some cases (e.g. when using one of these\n     # in a python: expression in an action).\n \n-    plone_portal_state = view_obj.restrictedTraverse(\'@@plone_portal_state\')\n-    expr_context.setGlobal(\'plone_portal_state\', plone_portal_state)\n+    plone_portal_state = view_obj.restrictedTraverse("@@plone_portal_state")\n+    expr_context.setGlobal("plone_portal_state", plone_portal_state)\n \n-    plone_context_state = view_obj.restrictedTraverse(\'@@plone_context_state\')\n-    expr_context.setGlobal(\'plone_context_state\', plone_context_state)\n+    plone_context_state = view_obj.restrictedTraverse("@@plone_context_state")\n+    expr_context.setGlobal("plone_context_state", plone_context_state)\n \n-    plone_tools = view_obj.restrictedTraverse(\'@@plone_tools\')\n-    expr_context.setGlobal(\'plone_tools\', plone_tools)\n+    plone_tools = view_obj.restrictedTraverse("@@plone_tools")\n+    expr_context.setGlobal("plone_tools", plone_tools)\n \n     # Add checkPermission to the action expression context to make cleaner\n     # faster expressions\n-    membership_tool = getToolByName(view_obj, \'portal_membership\')\n+    membership_tool = getToolByName(view_obj, "portal_membership")\n     checkPerm = membership_tool.checkPermission\n-    expr_context.setGlobal(\'checkPermission\', checkPerm)\n+    expr_context.setGlobal("checkPermission", checkPerm)\n \n     # add \'context\' as an alias for \'object\'\n-    expr_context.setGlobal(\'context\', object)\n+    expr_context.setGlobal("context", object)\n \n     # need this for resolving in Unicode expressions\n-    expr_context.setContext(\'context\', object)\n+    expr_context.setContext("context", object)\n \n     return expr_context\n \n \n def getExprContext(context, object=None):\n-    request = getattr(context, \'REQUEST\', None)\n+    request = getattr(context, "REQUEST", None)\n     if request:\n-        cache = request.get(\'_plone_ec_cache\', None)\n+        cache = request.get("_plone_ec_cache", None)\n         if cache is None:\n-            request[\'_plone_ec_cache\'] = cache = {}\n+            request["_plone_ec_cache"] = cache = {}\n         ec = cache.get(id(object), None)\n     else:\n         ec = None\n     if ec is None:\n-        utool = getToolByName(context, \'portal_url\')\n+        utool = getToolByName(context, "portal_url")\n         portal = utool.getPortalObject()\n-        if object is None or not hasattr(object, \'aq_base\'):\n+        if object is None or not hasattr(object, "aq_base"):\n             folder = portal\n         else:\n             folder = object\n             # Search up the containment hierarchy until we find an\n             # object that claims it\'s a folder.\n             while folder is not None:\n-                if getattr(aq_base(folder), \'isPrincipiaFolderish\', 0):\n+                if getattr(aq_base(folder), "isPrincipiaFolderish", 0):\n                     # found it.\n                     break\n                 else:\n@@ -119,8 +118,7 @@ def getExprContext(context, object=None):\n \n @implementer(IPloneBaseTool)\n class PloneBaseTool:\n-    """Base class of all tools used in CMFPlone and Plone Core\n-    """\n+    """Base class of all tools used in CMFPlone and Plone Core"""\n \n     security = ClassSecurityInfo()\n \ndiff --git a/Products/CMFPlone/profiles/default/actions.xml b/Products/CMFPlone/profiles/default/actions.xml\nindex 0f79034d3f..19ed40366d 100644\n--- a/Products/CMFPlone/profiles/default/actions.xml\n+++ b/Products/CMFPlone/profiles/default/actions.xml\n@@ -47,7 +47,7 @@\n   <object name="sitemap" meta_type="CMF Action" i18n:domain="plone">\n    <property name="title" i18n:translate="">Site Map</property>\n    <property name="description" i18n:translate=""></property>\n-   <property name="url_expr">string:${globals_view/navigationRootUrl}/sitemap</property>\n+   <property name="url_expr">python:f"{plone_portal_state.navigation_root_url()}/sitemap"</property>\n    <property name="icon_expr">string:plone-sitemap</property>\n    <property name="available_expr"></property>\n    <property name="permissions">\n@@ -59,7 +59,7 @@\n    <property name="title" i18n:translate="">Accessibility</property>\n    <property name="description" i18n:translate=""></property>\n    <property\n-      name="url_expr">string:${globals_view/navigationRootUrl}/accessibility-info</property>\n+      name="url_expr">python:f"{plone_portal_state.navigation_root_url()}/accessibility-info"</property>\n    <property name="icon_expr">string:plone-accessibility</property>\n    <property name="available_expr"></property>\n    <property name="permissions">\n@@ -70,7 +70,7 @@\n   <object name="contact" meta_type="CMF Action" i18n:domain="plone">\n    <property name="title" i18n:translate="">Contact</property>\n    <property name="description" i18n:translate=""></property>\n-   <property name="url_expr">string:${globals_view/navigationRootUrl}/contact-info</property>\n+   <property name="url_expr">python:f"{plone_portal_state.navigation_root_url()}/contact-info"</property>\n    <property name="icon_expr">string:plone-contact-info</property>\n    <property name="available_expr"></property>\n    <property name="permissions">\n@@ -86,7 +86,7 @@\n    <property name="title" i18n:translate="">Contents</property>\n    <property name="description" i18n:translate=""></property>\n    <property\n-      name="url_expr">string:${globals_view/getCurrentFolderUrl}/folder_contents</property>\n+      name="url_expr">python:f"{plone_context_state.folder().absolute_url()}/folder_contents"</property>\n    <property name="icon_expr">string:toolbar-action/folderContents</property>\n    <property name="permissions">\n     <element value="List folder contents"/>\n@@ -151,7 +151,7 @@\n       name="url_expr">string:$object_url/object_cut</property>\n    <property name="icon_expr">string:plone-cut</property>\n    <property\n-      name="available_expr">python:checkPermission("Delete objects", globals_view.getParentObject()) and checkPermission("Copy or Move", object) and not globals_view.isPortalOrPortalDefaultPage()</property>\n+      name="available_expr">python:checkPermission("Delete objects", plone_context_state.parent()) and checkPermission("Copy or Move", object) and not plone_context_state.is_portal_root()</property>\n    <property name="permissions">\n     <element value="Delete objects"/>\n    </property>\n@@ -164,7 +164,7 @@\n       name="url_expr">string:$object_url/object_copy</property>\n    <property name="icon_expr">string:plone-copy</property>\n    <property\n-      name="available_expr">python:checkPermission("Copy or Move", object) and not globals_view.isPortalOrPortalDefaultPage()</property>\n+      name="available_expr">python:checkPermission("Copy or Move", object) and not plone_context_state.is_portal_root()</property>\n    <property name="permissions">\n     <element value="View"/>\n    </property>\n@@ -173,7 +173,7 @@\n   <object name="paste" meta_type="CMF Action" i18n:domain="plone">\n    <property name="title" i18n:translate="">Paste</property>\n    <property name="description" i18n:translate=""></property>\n-   <property name="url_expr">string:${globals_view/getCurrentFolderUrl}/object_paste</property>\n+   <property name="url_expr">python:f"{plone_context_state.folder().absolute_url()}/object_paste"</property>\n    <property name="icon_expr">string:plone-paste</property>\n    <property name="available_expr">folder/cb_dataValid|nothing</property>\n    <property name="permissions">\n@@ -188,7 +188,7 @@\n       name="url_expr">string:$object_url/delete_confirmation</property>\n    <property name="icon_expr">string:plone-delete</property>\n    <property\n-      name="available_expr">python:checkPermission("Delete objects", globals_view.getParentObject()) and not globals_view.isPortalOrPortalDefaultPage()</property>\n+      name="available_expr">python:checkPermission("Delete objects", plone_context_state.parent()) and not plone_context_state.is_portal_root()</property>\n    <property name="permissions">\n     <element value="Delete objects"/>\n    </property>\n@@ -202,7 +202,7 @@\n       name="url_expr">string:$object_url/object_rename</property>\n    <property name="icon_expr">string:plone-rename</property>\n    <property\n-      name="available_expr">python:checkPermission("Delete objects", globals_view.getParentObject()) and checkPermission("Copy or Move", object) and checkPermission("Add portal content", object) and not globals_view.isPortalOrPortalDefaultPage()</property>\n+      name="available_expr">python:checkPermission("Delete objects", plone_context_state.parent()) and checkPermission("Copy or Move", object) and checkPermission("Add portal content", object) and not plone_context_state.is_portal_root()</property>\n    <property name="permissions">\n     <element value="Add portal content"/>\n    </property>\n@@ -215,7 +215,7 @@\n    <property\n       name="url_expr">string: ${object_url}/@@manage-aliases</property>\n    <property name="icon_expr">string:plone-redirection</property>\n-   <property name="available_expr">python:not globals_view.isPortalOrPortalDefaultPage()</property>\n+   <property name="available_expr">python:not plone_context_state.is_portal_root()</property>\n    <property name="permissions">\n     <element value="Manage Context Aliases"/>\n    </property>\n@@ -227,8 +227,7 @@\n   <object name="index_html" meta_type="CMF Action" i18n:domain="plone">\n    <property name="title" i18n:translate="">Home</property>\n    <property name="description" i18n:translate=""></property>\n-   <property\n-      name="url_expr">string:${globals_view/navigationRootUrl}</property>\n+   <property name="url_expr">python:plone_portal_state.navigation_root_url()</property>\n    <property name="icon_expr">string:plone-home</property>\n    <property name="available_expr"></property>\n    <property name="permissions">\n@@ -243,7 +242,7 @@\n    <property name="title" i18n:translate="">Preferences</property>\n    <property name="description" i18n:translate=""></property>\n    <property\n-      name="url_expr">string:${globals_view/navigationRootUrl}/@@personal-preferences</property>\n+      name="url_expr">python:f"{plone_portal_state.navigation_root_url()}/@@personal-preferences"</property>\n    <property name="icon_expr">string:plone-user</property>\n    <property name="available_expr">python:member is not None</property>\n    <property name="permissions">\n@@ -266,7 +265,7 @@\n   <object name="login" meta_type="CMF Action" i18n:domain="plone">\n    <property name="title" i18n:translate="">Log in</property>\n    <property name="description" i18n:translate=""></property>\n-   <property name="url_expr">string:${globals_view/navigationRootUrl}/login</property>\n+   <property name="url_expr">python:f"{plone_portal_state.navigation_root_url()}/login"</property>\n    <property name="icon_expr">string:plone-login</property>\n    <property name="available_expr">python:member is None</property>\n    <property name="permissions">\n@@ -278,7 +277,7 @@\n   <object name="join" meta_type="CMF Action" i18n:domain="plone">\n    <property name="title" i18n:translate="">Register</property>\n    <property name="description" i18n:translate=""></property>\n-   <property name="url_expr">string:${globals_view/navigationRootUrl}/@@register</property>\n+   <property name="url_expr">python:f"{plone_portal_state.navigation_root_url()}/@@register"</property>\n    <property name="icon_expr">string:plone-register</property>\n    <property name="available_expr">python:member is None</property>\n    <property name="permissions">\n@@ -290,7 +289,7 @@\n   <object name="undo" meta_type="CMF Action" i18n:domain="plone">\n    <property name="title" i18n:translate="">Undo</property>\n    <property name="description" i18n:translate=""></property>\n-   <property name="url_expr">string:${globals_view/navigationRootUrl}/undo_form</property>\n+   <property name="url_expr">python:f"{plone_portal_state.navigation_root_url()}/undo_form"</property>\n    <property name="icon_expr">string:plone-undo</property>\n    <property name="available_expr">python:member is not None</property>\n    <property name="permissions">\n@@ -313,7 +312,7 @@\n   <object name="logout" meta_type="CMF Action" i18n:domain="plone">\n    <property name="title" i18n:translate="">Log out</property>\n    <property name="description" i18n:translate=""></property>\n-   <property name="url_expr">string:${globals_view/navigationRootUrl}/logout</property>\n+   <property name="url_expr">python:f"{plone_portal_state.navigation_root_url()}/logout"</property>\n    <property name="icon_expr">string:plone-logout</property>\n    <property name="available_expr">python:member is not None</property>\n    <property name="permissions">\ndiff --git a/Products/CMFPlone/tests/testPortalCreation.py b/Products/CMFPlone/tests/testPortalCreation.py\nindex 08498041e6..0fc4b4aa12 100644\n--- a/Products/CMFPlone/tests/testPortalCreation.py\n+++ b/Products/CMFPlone/tests/testPortalCreation.py\n@@ -681,7 +681,7 @@ def testHomeActionUsesView(self):\n         homeAction = [x for x in actions if x.id == \'index_html\'][0]\n         self.assertEqual(\n             homeAction.getInfoData()[0][\'url\'].text,\n-            \'string:${globals_view/navigationRootUrl}\',\n+            \'python:plone_portal_state.navigation_root_url()\',\n         )\n \n     def testPloneLexicon(self):\ndiff --git a/news/3616.bugfix b/news/3616.bugfix\nnew file mode 100644\nindex 0000000000..178ec178c5\n--- /dev/null\n+++ b/news/3616.bugfix\n@@ -0,0 +1,3 @@\n+Do not use deprecated calls in actions expressions.\n+ActionsTool and PloneBasetool got an code style overhaul.\n+[jensens]\n'

