Repository: plone.app.mosaic


Branch: refs/heads/es6
Date: 2022-06-13T18:51:33+02:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/plone.app.mosaic/commit/cb81c8ca9ed638bc569613c91c5e2370ca0c799d

fix resize handlers and placeholders

Files changed:
M resources/js/mosaic.layout.js
M resources/scss/mosaic.authoring.resizing.scss

b'diff --git a/resources/js/mosaic.layout.js b/resources/js/mosaic.layout.js\nindex bb091606..3a146c6f 100644\n--- a/resources/js/mosaic.layout.js\n+++ b/resources/js/mosaic.layout.js\n@@ -28,20 +28,19 @@ export default class LayoutManager {\n             "col-11",\n             "col-12",\n         ],\n-        dataClasses: [\n-            "mosaic-col",\n-            "mosaic-col-1",\n-            "mosaic-col-2",\n-            "mosaic-col-3",\n-            "mosaic-col-4",\n-            "mosaic-col-5",\n-            "mosaic-col-6",\n-            "mosaic-col-7",\n-            "mosaic-col-8",\n-            "mosaic-col-9",\n-            "mosaic-col-10",\n-            "mosaic-col-11",\n-            "mosaic-col-12",\n+        resizeClasses: [\n+            "mosaic-resize-1",\n+            "mosaic-resize-2",\n+            "mosaic-resize-3",\n+            "mosaic-resize-4",\n+            "mosaic-resize-5",\n+            "mosaic-resize-6",\n+            "mosaic-resize-7",\n+            "mosaic-resize-8",\n+            "mosaic-resize-9",\n+            "mosaic-resize-10",\n+            "mosaic-resize-11",\n+            "mosaic-resize-12",\n         ],\n         resizeHandleClasses: [\n             "mosaic-resize-handle-1",\n@@ -72,7 +71,7 @@ export default class LayoutManager {\n \n     getResizeHandleClassId(e) {\n         // Loop through resize handle classes\n-        for (const idx in this.layout.resizeHandleClasses) {\n+        for (let idx=0; idx <  this.layout.resizeHandleClasses.length; idx++) {\n             if ($(e).hasClass(this.layout.resizeHandleClasses[idx])) {\n                 return idx;\n             }\n@@ -533,12 +532,7 @@ export default class LayoutManager {\n \n                 var snap_size = GetBootstrapColByPercent(snap);\n \n-                var column_sizes = [];\n-                row.children(".mosaic-resize-placeholder").each(function () {\n-                    var col_size = GetColSizeByColClass(self.getWidthClass(this));\n-                    column_sizes.push(col_size);\n-                });\n-\n+                var column_sizes = helper.data("column_sizes");\n                 var col_size_before = 0;\n                 var col_size_this = 0;\n                 var col_size_after = 0;\n@@ -561,64 +555,46 @@ export default class LayoutManager {\n \n                 var col_size_handle = col_size_before + col_size;\n \n-                log.info("column_sizes", column_sizes);\n+                log.info("column_sizes_before", column_sizes);\n                 log.info("snap_size", snap_size);\n-                log.info("col_size_before", col_size_before);\n-                log.info("col_size_after", col_size_after);\n-                log.info("col_size_max", col_size_max);\n                 log.info("col_size", col_size);\n-                log.info("col_size_this", col_size_this);\n                 log.info("col_size_handle", col_size_handle);\n                 log.info("resize_handle_index", resize_handle_index);\n+                log.info(`|| ${col_size_before} < ${col_size_this} > ${col_size_after} || max: ${col_size_max}`)\n \n-                if (helper.data("nr_of_columns") > 1) {\n+                if (helper.data("nr_of_columns") > 0) {\n+                    var col_size_sum = 0;\n+                    var set_resize_handler = false;\n                     // Loop through columns\n                     row.children(".mosaic-resize-placeholder").each(function (index) {\n-                        // // If there are columns before this column and the column width is not set,\n-                        // // then set it to the value of 2 and add a Reset button to the Tile.\n-\n-                        // var mosaicDataClass = self.getDataClass(this);\n-                        // var data_size = GetColSizeByColClass(mosaicDataClass, "mosaic-col-");\n-\n-                        // if (index < resize_handle_index && data_size === 0) {\n-                        //   column_sizes[index] = 2;\n-\n-                        //   var $mosaicGridCell = $(this).parent().children(".mosaic-grid-cell").get(index);\n-                        //   var $tileSideTools = $($mosaicGridCell).children(".mosaic-tile").first().children(".mosaic-tile-side-tools").first();\n-\n-                        //   $tileSideTools.children(".mosaic-tile-label.reset").remove();\n-\n-                        //   $tileSideTools.append(\n-                        //     $(self.mosaic.document.createElement("div"))\n-                        //       .addClass("mosaic-tile-label reset")\n-                        //       .append(AddResetAnchor($tileSideTools, column_sizes[index]))\n-                        //   );\n-                        // }\n-\n-                        // Left column\n                         if (index === resize_handle_index) {\n+                            // set new col_size for index\n                             column_sizes[index] = col_size;\n-\n-                            var _value = 0;\n-                            for (const size of column_sizes) {\n-                                _value += size;\n-                            }\n-                            var mosaic_resize_class = "mosaic-resize-" + _value;\n-\n                             var col_size_class = GetWidthClassByColSize(col_size);\n-                            var new_class = `mosaic-${col_size_class} ${col_size_class} ${mosaic_resize_class}`;\n-                            log.info("new col_class: " + new_class);\n                             $(this)\n                                 .removeClass(self.layout.widthClasses.join(" "))\n-                                .removeClass(self.layout.dataClasses.join(" "))\n-                                .addClass(`mosaic-${col_size_class} ${col_size_class} ${mosaic_resize_class}`)\n+                                .addClass(col_size_class)\n                                 .find(".info")\n                                 .html(col_size);\n+                            set_resize_handler = true;\n+                        }\n+                        // move other resize placeholders accordingly\n+                        $(this)\n+                            .removeClass(self.layout.resizeClasses.join(" "))\n+                            .addClass(`mosaic-resize-${col_size_sum}`);\n+                        col_size_sum += column_sizes[index];\n+                        if(set_resize_handler) {\n+                            // trick to move handle helper too\n+                            $(".mosaic-resize-handle-helper", row)\n+                                .removeClass(self.layout.resizeClasses.join(" "))\n+                                .addClass(`mosaic-resize-${col_size_sum}`);\n+                            set_resize_handler = false;\n                         }\n                     });\n \n                     // Set new size\n                     $(this).data("column_sizes", column_sizes);\n+                    log.info("column_sizes_after", column_sizes);\n                 }\n             });\n         };\n@@ -1400,7 +1376,8 @@ export default class LayoutManager {\n                 $(this).children(".mosaic-resize-handle").remove();\n \n                 // Check number of columns\n-                var nr_of_columns = $(this).children(".mosaic-grid-cell").length;\n+                var grid_cells = $(this).children(".mosaic-grid-cell")\n+                var nr_of_columns = grid_cells.length;\n \n                 if (nr_of_columns > 1 && nr_of_columns <= 12) {\n                     var column_sizes = [];\n@@ -1409,7 +1386,7 @@ export default class LayoutManager {\n \n                     for (let i = 0; i < nr_of_columns; i++) {\n                         var col_size = GetColSizeByColClass(\n-                            self.getWidthClass($(this).children(".mosaic-grid-cell").get(i))\n+                            self.getWidthClass(grid_cells[i])\n                         );\n                         column_sizes.push(col_size);\n                         col_sum = col_sum + col_size;\n@@ -1424,16 +1401,11 @@ export default class LayoutManager {\n                     }\n \n                     var resize_col_size = 0;\n-                    var margin_left = 0;\n                     col_size = 0;\n \n                     for (let i = 0; i < nr_of_columns; i++) {\n                         col_size = column_sizes[i] ? column_sizes[i] : zero_col;\n-\n                         resize_col_size = resize_col_size + col_size;\n-                        margin_left = Math.round((resize_col_size / 12) * 10000) / 100;\n-\n-                        log.info("resize_col_size", resize_col_size);\n \n                         $(this).append(\n                             $(mosaic_doc.createElement("div"))\n@@ -1443,10 +1415,12 @@ export default class LayoutManager {\n                                 )\n                                 .data("resize_handle_index", i)\n                         );\n+\n+                        // set counted size to cell data\n+                        $(grid_cells[i]).data("col_size", col_size)\n                     }\n \n                     log.info("$.fn.mosaicSetResizeHandles:");\n-                    log.info("column_sizes", column_sizes);\n                     log.info("zero_count", zero_count);\n                     log.info("col_size", col_size);\n                 }\n@@ -1459,53 +1433,44 @@ export default class LayoutManager {\n                         var $mosaicGridCellChildren = $(this)\n                             .parent()\n                             .children(".mosaic-grid-cell");\n-\n-                        // Get number of columns and current sizes\n                         var nr_of_columns = $mosaicGridCellChildren.length;\n-                        var column_sizes = [];\n \n-                        if (nr_of_columns > 1 && nr_of_columns <= 12) {\n-                            for (const chld of $mosaicGridCellChildren) {\n-                                var mosaicWidthClass = self.getWidthClass(this);\n-                                var col_size = GetColSizeByColClass(mosaicWidthClass);\n-                                column_sizes.push(col_size);\n-                            }\n+                        if(nr_of_columns > 12) {\n+                            return;\n                         }\n+                        var col_size_sum = 0;\n+                        var column_sizes = [];\n \n                         $mosaicGridCellChildren.each(function (index) {\n                             var mosaicWidthClass = self.getWidthClass(this);\n-                            var col_size = GetColSizeByColClass(mosaicWidthClass); // get the initial size of the column\n-\n-                            if (col_size == 0) {\n-                                col_size = "0 (2)";\n-                            }\n-\n-                            var _value = 0;\n-                            for (const size of column_sizes) {\n-                                _value += size;\n-                            }\n-                            var mosaic_resize_class = "mosaic-resize-" + _value;\n+                            var col_size = $(this).data("col_size"); // get computed size of the column\n+                            column_sizes.push(col_size);\n \n-                            // Add placeholder\n-                            $(this)\n-                                .parent()\n+                            var placeholder = $(mosaic_doc.createElement("div"))\n+                                .addClass(\n+                                    `mosaic-resize-placeholder ${mosaicWidthClass} mosaic-resize-${col_size_sum}`\n+                                )\n                                 .append(\n                                     $(mosaic_doc.createElement("div"))\n                                         .addClass(\n-                                            `mosaic-resize-placeholder ${mosaicWidthClass} ${mosaic_resize_class}`\n+                                            "mosaic-resize-placeholder-inner-border"\n                                         )\n                                         .append(\n                                             $(mosaic_doc.createElement("div"))\n-                                                .addClass(\n-                                                    "mosaic-resize-placeholder-inner-border"\n-                                                )\n-                                                .append(\n-                                                    $(mosaic_doc.createElement("div"))\n-                                                        .addClass("info")\n-                                                        .html(col_size)\n-                                                )\n+                                                .addClass("info")\n+                                                .html(col_size)\n                                         )\n                                 );\n+\n+                            log.info(placeholder[0].outerHTML);\n+\n+                            // Add placeholder\n+                            $(this)\n+                                .parent()\n+                                .append(placeholder);\n+\n+                            // summarize column sizes for placeholder classes\n+                            col_size_sum += col_size;\n                         });\n \n                         // Get resize handle index\n@@ -1517,7 +1482,7 @@ export default class LayoutManager {\n                             .append(\n                                 $(mosaic_doc.createElement("div"))\n                                     .addClass("mosaic-resize-handle mosaic-resize-handle-helper")\n-                                    .addClass(self.layout.resizeHandleClasses[resize_handle_index])\n+                                    .addClass(`mosaic-resize-${column_sizes[resize_handle_index]}`)\n                                     .data("row_width", $(this).parent().width())\n                                     .data("nr_of_columns", nr_of_columns)\n                                     .data("column_sizes", column_sizes)\n@@ -1733,7 +1698,7 @@ function GetColSizeByColClass(col_class, prefix) {\n function GetBootstrapColByPercent(width) {\n     var grid_percent = GetGridPercentList();\n \n-    for (const idx in grid_percent) {\n+    for (let idx=0; idx < grid_percent.length; idx++) {\n         if (width === grid_percent[idx]) {\n             return idx + 1;\n         }\ndiff --git a/resources/scss/mosaic.authoring.resizing.scss b/resources/scss/mosaic.authoring.resizing.scss\nindex c969affa..afae5094 100644\n--- a/resources/scss/mosaic.authoring.resizing.scss\n+++ b/resources/scss/mosaic.authoring.resizing.scss\n@@ -39,11 +39,11 @@\n }\n \n .mosaic-resize-handle:hover {\n-    border-left-style:dashed;\n+    border-right-style:dashed;\n }\n \n .mosaic-resize-handle.mosaic-resize-handle-helper {\n-    border-left-style:solid;\n+    border-right-style:solid;\n }\n \n .mosaic-resize-placeholder {\n@@ -74,7 +74,7 @@\n }\n \n .mosaic-resize-0 {\n-    flex: 1 0 0%;\n+    margin-left:0%;\n }\n \n .mosaic-resize-1 {\n'

