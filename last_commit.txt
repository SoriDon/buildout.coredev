Repository: plone.app.mosaic


Branch: refs/heads/es6
Date: 2022-06-13T11:31:39+02:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/plone.app.mosaic/commit/9cca134bd5bdf3f69078f244fed6f8d65558eb9c

cleanup

Files changed:
M resources/js/mosaic.layout.js
M resources/js/mosaic.overlay.js
M resources/js/mosaic.toolbar.js
D resources/js/mosaic.editor.js

b'diff --git a/resources/js/mosaic.editor.js b/resources/js/mosaic.editor.js\ndeleted file mode 100644\nindex 5bfb6011..00000000\n--- a/resources/js/mosaic.editor.js\n+++ /dev/null\n@@ -1,54 +0,0 @@\n-// This plugin is used to set an element to be editable.\n-import $ from "jquery";\n-\n-const tinymce = window.tinymce;\n-\n-// Define mosaic namespace if it doesn\'t exist\n-if (typeof $.mosaic === "undefined") {\n-    $.mosaic = {};\n-}\n-\n-// Define the editor namespace\n-$.mosaic.editor = {};\n-\n-/**\n- * Exec a command on the editor\n- *\n- * @id jQuery.mosaic.execCommand\n- * @param {String} command Command to execute\n- * @param {String} ui UI to use\n- * @param {String} value Vale of the command\n- */\n-$.mosaic.execCommand = function (command, ui, value) {\n-    // Exec command\n-    if (tinymce.activeEditor) {\n-        tinymce.activeEditor.execCommand(command, ui, value);\n-    }\n-};\n-\n-/**\n- * Apply formatting to the current selection\n- *\n- * @id jQuery.mosaic.editor.applyFormat\n- * @param {String} format Name of the registered format to apply\n- */\n-$.mosaic.editor.applyFormat = function (format) {\n-    // Apply format\n-    if (tinymce.activeEditor) {\n-        tinyMCE.activeEditor.formatter.apply(format);\n-    }\n-};\n-\n-/**\n- * Register format\n- *\n- * @id jQuery.mosaic.editor.registerFormat\n- * @param {String} name Name of the registered format to apply\n- * @param {Object} format Formatting object\n- */\n-$.mosaic.editor.registerFormat = function (name, format) {\n-    // Apply format\n-    if (tinymce.activeEditor) {\n-        tinymce.activeEditor.formatter.register(name, format);\n-    }\n-};\ndiff --git a/resources/js/mosaic.layout.js b/resources/js/mosaic.layout.js\nindex 28bb0794..0615cb6e 100644\n--- a/resources/js/mosaic.layout.js\n+++ b/resources/js/mosaic.layout.js\n@@ -74,21 +74,6 @@ export default class LayoutManager {\n         ],\n     }\n \n-    disableEditHtmlSource() {\n-        var self = this;\n-        // Find rich text textareas\n-        $(".mosaic-rich-text-textarea", self.mosaic.document).each(function () {\n-            // Local variables\n-            var tilecontent, text;\n-\n-            // Get text and tilecontent\n-            text = $(this).val();\n-            tilecontent = $(this).parent();\n-            tilecontent.html(text);\n-            tilecontent.data("mosaic-tile").setupWysiwyg();\n-        });\n-    }\n-\n     addAppTile(type, url /*, id */) {\n         var self = this;\n         // Close overlay\n@@ -326,9 +311,6 @@ export default class LayoutManager {\n         // Content\n         var content, position = 1, size = 12, body = "", classNames = "";\n \n-        // Disable edit html source\n-        self.disableEditHtmlSource();\n-\n         // Add body tag\n         body += "  <body>\\n";\n \n@@ -1408,7 +1390,7 @@ export default class LayoutManager {\n                         // Add resize handles\n                         _row.mosaicSetResizeHandles();\n \n-                        // Dropped inside column\n+                    // Dropped inside column\n                     } else {\n \n                         // Create new column\ndiff --git a/resources/js/mosaic.overlay.js b/resources/js/mosaic.overlay.js\nindex e639d6aa..7387b397 100644\n--- a/resources/js/mosaic.overlay.js\n+++ b/resources/js/mosaic.overlay.js\n@@ -13,14 +13,12 @@ export default class Overlay {\n \n     initialize() {\n         var self = this;\n-        var originalContentSelector = ".mosaic-original-content";\n-\n+        var originalContent = document.querySelector(".mosaic-original-content");\n         // we don\'t want to show the original el.\n-        document.querySelector(originalContentSelector).style.display = "none";\n+        originalContent.style.display = "none";\n \n-        self.modal = new Modal(document.querySelector("body > .outer-wrapper"), {\n+        self.modal = new Modal(originalContent, {\n             title: document.querySelector("h1").innerText,\n-            target: originalContentSelector,\n             content: "#form",\n             modalSizeClass: "modal-xl",\n         });\ndiff --git a/resources/js/mosaic.toolbar.js b/resources/js/mosaic.toolbar.js\nindex bd7aff8f..e9004deb 100644\n--- a/resources/js/mosaic.toolbar.js\n+++ b/resources/js/mosaic.toolbar.js\n@@ -66,7 +66,7 @@ class Toolbar {\n         );\n \n         // Loop through action groups\n-        for (a in actions) {\n+        for (const a in actions) {\n             // Add actions to toolbar\n             for (const action of self.mosaic.options[a]) {\n                 // If single action\n@@ -120,9 +120,6 @@ class Toolbar {\n         // Local variables\n         var self = this, tiletype, actions;\n \n-        // Disable edit html source\n-        self.mosaic.layoutManager.disableEditHtmlSource();\n-\n         var $selected_tile = $(".mosaic-selected-tile");\n         if ($selected_tile.length > 0) {\n             $selected_tile.data("mosaic-tile").getType();\n'

