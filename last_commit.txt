Repository: plone.app.redirector


Branch: refs/heads/master
Date: 2022-04-07T18:06:01+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.redirector/commit/60a6040c389132d16599569e1e27cd4f0abbdfb6

drop six

Files changed:
M plone/app/redirector/browser.py

b'diff --git a/plone/app/redirector/browser.py b/plone/app/redirector/browser.py\nindex ea21756..fa65326 100644\n--- a/plone/app/redirector/browser.py\n+++ b/plone/app/redirector/browser.py\n@@ -8,9 +8,10 @@\n from Products.Five.browser import BrowserView\n from Products.ZCTextIndex.ParseTree import ParseError\n from Products.ZCTextIndex.ParseTree import QueryError\n-from six.moves import urllib\n-from six.moves.urllib.parse import quote\n-from six.moves.urllib.parse import unquote\n+from urllib.parse import quote\n+from urllib.parse import unquote\n+from urllib.parse import urlsplit\n+from urllib.parse import SplitResult\n from zope.component import getMultiAdapter\n from zope.component import queryUtility\n from zope.interface import implementer\n@@ -63,13 +64,13 @@ def attempt_redirect(self):\n         if not new_path:\n             return False\n \n-        url = urllib.parse.urlsplit(new_path)\n+        url = urlsplit(new_path)\n         if url.netloc:\n             # External URL\n             # avoid double quoting\n             url_path = unquote(url.path)\n             url_path = quote(url_path)\n-            url = urllib.parse.SplitResult(*(url[:2] + (url_path,) + url[3:])).geturl()\n+            url = SplitResult(*(url[:2] + (url_path,) + url[3:])).geturl()\n         else:\n             url = self.request.physicalPathToURL(new_path)\n \n'

Repository: plone.app.redirector


Branch: refs/heads/master
Date: 2022-04-07T18:08:46+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.redirector/commit/b84ad87bcf0a503a0725563eb90e44b2d3999080

manual cleanup

Files changed:
M plone/app/redirector/browser.py
M plone/app/redirector/policy.py
M plone/app/redirector/subscribers.py
M plone/app/redirector/tests/test_storage.py
M setup.py

b'diff --git a/plone/app/redirector/browser.py b/plone/app/redirector/browser.py\nindex fa65326..8bb8644 100644\n--- a/plone/app/redirector/browser.py\n+++ b/plone/app/redirector/browser.py\n@@ -9,9 +9,9 @@\n from Products.ZCTextIndex.ParseTree import ParseError\n from Products.ZCTextIndex.ParseTree import QueryError\n from urllib.parse import quote\n+from urllib.parse import SplitResult\n from urllib.parse import unquote\n from urllib.parse import urlsplit\n-from urllib.parse import SplitResult\n from zope.component import getMultiAdapter\n from zope.component import queryUtility\n from zope.interface import implementer\ndiff --git a/plone/app/redirector/policy.py b/plone/app/redirector/policy.py\nindex cb2e153..b96db8f 100644\n--- a/plone/app/redirector/policy.py\n+++ b/plone/app/redirector/policy.py\n@@ -1,13 +1,12 @@\n from plone.app.redirector.interfaces import IRedirectionPolicy\n-from zope.component import adapts\n+from zope.component import adapter\n from zope.interface import implementer\n from zope.interface import Interface\n \n \n @implementer(IRedirectionPolicy)\n+@adapter(Interface)\n class RedirectionPolicy:\n-    adapts(Interface)\n-\n     def __init__(self, context):\n         self.context = context\n \ndiff --git a/plone/app/redirector/subscribers.py b/plone/app/redirector/subscribers.py\nindex 061b072..79a2743 100644\n--- a/plone/app/redirector/subscribers.py\n+++ b/plone/app/redirector/subscribers.py\n@@ -1,6 +1,5 @@\n from Acquisition import aq_base\n from plone.app.redirector.interfaces import IRedirectionStorage\n-from Products.CMFCore.utils import getToolByName\n from zope.component import queryUtility\n \n \n@@ -14,22 +13,24 @@ def objectMoved(obj, event):\n         and event.oldName is not None\n     ):\n         storage = queryUtility(IRedirectionStorage)\n-        if storage is not None:\n-            old_path = "{}/{}".format(\n-                "/".join(event.oldParent.getPhysicalPath()),\n-                event.oldName,\n-            )\n-            new_path = "/".join(obj.getPhysicalPath())\n-\n-            # This event gets redispatched to children, and we should keep track of them as well\n-            # In this case, event.object is not the same as obj, and the old_path should actually\n-            # include obj.id\n-\n-            if aq_base(event.object) is not aq_base(obj):\n-                new_path_of_moved = "/".join(event.object.getPhysicalPath())\n-                old_path = old_path + new_path[len(new_path_of_moved) :]\n-\n-            storage.add(old_path, new_path)\n+        if storage is None:\n+            return\n+\n+        old_path = "{}/{}".format(\n+            "/".join(event.oldParent.getPhysicalPath()),\n+            event.oldName,\n+        )\n+        new_path = "/".join(obj.getPhysicalPath())\n+\n+        # This event gets redispatched to children, and we should keep track of them as well\n+        # In this case, event.object is not the same as obj, and the old_path should actually\n+        # include obj.id\n+\n+        if aq_base(event.object) is not aq_base(obj):\n+            new_path_of_moved = "/".join(event.object.getPhysicalPath())\n+            old_path = old_path + new_path[len(new_path_of_moved) :]\n+\n+        storage.add(old_path, new_path)\n \n \n def objectRemoved(obj, event):\ndiff --git a/plone/app/redirector/tests/test_storage.py b/plone/app/redirector/tests/test_storage.py\nindex 74734bd..072639e 100644\n--- a/plone/app/redirector/tests/test_storage.py\n+++ b/plone/app/redirector/tests/test_storage.py\n@@ -515,9 +515,7 @@ def test_rebuild(self):\n         self.assertIsInstance(info[1], DateTime)\n         new_time = info[1]\n         self.assertTrue(time1 < new_time < time2)\n-        self.assertSetEqual(\n-            {path[1] for path in st._paths.values()}, {new_time}\n-        )\n+        self.assertSetEqual({path[1] for path in st._paths.values()}, {new_time})\n         # manual is set to True when migrating to tuples:\n         self.assertEqual(info[2], True)\n         # _rpaths should be filled now with only the new one.\n@@ -541,7 +539,5 @@ def test_rebuild(self):\n             {path[0] for path in st._paths.values()},\n             {"/new", "/second"},\n         )\n-        self.assertSetEqual(\n-            {path[1] for path in st._paths.values()}, {new_time}\n-        )\n+        self.assertSetEqual({path[1] for path in st._paths.values()}, {new_time})\n         self.assertSetEqual({path[2] for path in st._paths.values()}, {True})\ndiff --git a/setup.py b/setup.py\nindex 1106260..f69d395 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -35,6 +35,7 @@\n     install_requires=[\n         "setuptools",\n         "plone.memoize",\n+        "Zope>=5",\n     ],\n     extras_require={"test": ["plone.app.testing", "plone.app.contenttypes"]},\n )\n'

