Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2023-03-11T19:02:19+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.multilingual/commit/5bd286baf19598dd4af9b18156c3e58c6dd1dfb4

import from plone.base.interfaces

Files changed:
M src/plone/app/multilingual/browser/add.py
M src/plone/app/multilingual/browser/controlpanel.py
M src/plone/app/multilingual/browser/helper_views.py
M src/plone/app/multilingual/browser/interfaces.py
M src/plone/app/multilingual/browser/menu.py
M src/plone/app/multilingual/browser/migrator.py
M src/plone/app/multilingual/browser/modify.py
M src/plone/app/multilingual/browser/setup.py
M src/plone/app/multilingual/browser/translate.py
M src/plone/app/multilingual/browser/utils.py
M src/plone/app/multilingual/browser/viewlets.py
M src/plone/app/multilingual/browser/vocabularies.py
M src/plone/app/multilingual/dx/cloner.py
M src/plone/app/multilingual/dx/language.py
M src/plone/app/multilingual/dx/subscriber.py
M src/plone/app/multilingual/factory.py
M src/plone/app/multilingual/indexer.py
M src/plone/app/multilingual/manager.py
M src/plone/app/multilingual/setuphandlers.py
M src/plone/app/multilingual/subscriber.py
M src/plone/app/multilingual/tests/test_api.py
M src/plone/app/multilingual/tests/test_helper_views.py
M src/plone/app/multilingual/tests/test_sitemap.py
M src/plone/app/multilingual/tests/test_subscribers.py
M src/plone/app/multilingual/upgrades.py

b'diff --git a/src/plone/app/multilingual/browser/add.py b/src/plone/app/multilingual/browser/add.py\nindex f28d6dfb..665bedc9 100644\n--- a/src/plone/app/multilingual/browser/add.py\n+++ b/src/plone/app/multilingual/browser/add.py\n@@ -11,7 +11,7 @@\n from plone.z3cform.fieldsets.group import Group\n from Products.CMFCore.interfaces import IFolderish\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ILanguage\n+from plone.base.interfaces import ILanguage\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from zope.component import adapter\n from zope.component import getUtility\ndiff --git a/src/plone/app/multilingual/browser/controlpanel.py b/src/plone/app/multilingual/browser/controlpanel.py\nindex e29b1fbc..c7fca73e 100644\n--- a/src/plone/app/multilingual/browser/controlpanel.py\n+++ b/src/plone/app/multilingual/browser/controlpanel.py\n@@ -8,7 +8,7 @@\n from Products.CMFPlone.controlpanel.browser.language import (  # noqa\n     LanguageControlPanelForm,\n )\n-from Products.CMFPlone.interfaces import ILanguage\n+from plone.base.interfaces import ILanguage\n from Products.Five import BrowserView\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.statusmessages.interfaces import IStatusMessage\ndiff --git a/src/plone/app/multilingual/browser/helper_views.py b/src/plone/app/multilingual/browser/helper_views.py\nindex 93ec8421..efa82f93 100644\n--- a/src/plone/app/multilingual/browser/helper_views.py\n+++ b/src/plone/app/multilingual/browser/helper_views.py\n@@ -30,7 +30,7 @@\n     from Products.ATContentTypes.interfaces.factory import IFactoryTool\n except ImportError:\n     try:\n-        from Products.CMFPlone.interfaces.factory import IFactoryTool\n+        from plone.base.interfaces.factory import IFactoryTool\n     except ImportError:\n         # gone in Plone 5.1 w/o ATCT\n \ndiff --git a/src/plone/app/multilingual/browser/interfaces.py b/src/plone/app/multilingual/browser/interfaces.py\nindex 3f5391ea..f960c3f5 100644\n--- a/src/plone/app/multilingual/browser/interfaces.py\n+++ b/src/plone/app/multilingual/browser/interfaces.py\n@@ -5,7 +5,7 @@\n from plone.autoform import directives\n from plone.autoform.interfaces import IFormFieldProvider\n from plone.supermodel import model\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n+from plone.base.interfaces import IPloneSiteRoot\n from z3c.relationfield.schema import RelationChoice\n from zope import interface\n from zope import schema\ndiff --git a/src/plone/app/multilingual/browser/menu.py b/src/plone/app/multilingual/browser/menu.py\nindex 24c15191..5d33b9de 100644\n--- a/src/plone/app/multilingual/browser/menu.py\n+++ b/src/plone/app/multilingual/browser/menu.py\n@@ -19,7 +19,7 @@\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.defaultpage import is_default_page\n-from Products.CMFPlone.interfaces import ILanguage\n+from plone.base.interfaces import ILanguage\n from Products.CMFPlone.utils import safe_unicode\n from zope.browsermenu.menu import BrowserMenu\n from zope.browsermenu.menu import BrowserSubMenuItem\ndiff --git a/src/plone/app/multilingual/browser/migrator.py b/src/plone/app/multilingual/browser/migrator.py\nindex 81694e96..ed2cc0e8 100644\n--- a/src/plone/app/multilingual/browser/migrator.py\n+++ b/src/plone/app/multilingual/browser/migrator.py\n@@ -6,8 +6,8 @@\n from plone.locking.interfaces import ILockable\n from Products.CMFCore.exceptions import ResourceLockedError\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ILanguage\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n+from plone.base.interfaces import ILanguage\n+from plone.base.interfaces import IPloneSiteRoot\n from Products.Five import BrowserView\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from zc.relation.interfaces import ICatalog\ndiff --git a/src/plone/app/multilingual/browser/modify.py b/src/plone/app/multilingual/browser/modify.py\nindex 2066d7d8..dc9caebc 100644\n--- a/src/plone/app/multilingual/browser/modify.py\n+++ b/src/plone/app/multilingual/browser/modify.py\n@@ -6,7 +6,7 @@\n from plone.registry.interfaces import IRegistry\n from plone.uuid.interfaces import IUUID\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ILanguage\n+from plone.base.interfaces import ILanguage\n from Products.Five.browser import BrowserView\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.statusmessages.interfaces import IStatusMessage\ndiff --git a/src/plone/app/multilingual/browser/setup.py b/src/plone/app/multilingual/browser/setup.py\nindex 230261ac..dc17bc8c 100644\n--- a/src/plone/app/multilingual/browser/setup.py\n+++ b/src/plone/app/multilingual/browser/setup.py\n@@ -11,7 +11,7 @@\n from plone.i18n.locales.languages import _combinedlanguagelist\n from plone.i18n.locales.languages import _languagelist\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ILanguage\n+from plone.base.interfaces import ILanguage\n from Products.CMFPlone.utils import _createObjectByType\n from Products.Five import BrowserView\n from zope.component.hooks import getSite\ndiff --git a/src/plone/app/multilingual/browser/translate.py b/src/plone/app/multilingual/browser/translate.py\nindex 4e770802..83ee4652 100644\n--- a/src/plone/app/multilingual/browser/translate.py\n+++ b/src/plone/app/multilingual/browser/translate.py\n@@ -4,7 +4,7 @@\n from plone.app.multilingual.interfaces import ITranslationManager\n from plone.registry.interfaces import IRegistry\n from plone.uuid.interfaces import IUUID\n-from Products.CMFPlone.interfaces import ILanguage\n+from plone.base.interfaces import ILanguage\n from Products.Five import BrowserView\n from zope.component import getUtility\n \ndiff --git a/src/plone/app/multilingual/browser/utils.py b/src/plone/app/multilingual/browser/utils.py\nindex f5d5c563..c646b884 100644\n--- a/src/plone/app/multilingual/browser/utils.py\n+++ b/src/plone/app/multilingual/browser/utils.py\n@@ -12,7 +12,7 @@\n from plone.i18n.locales.interfaces import IContentLanguageAvailability\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ILanguage\n+from plone.base.interfaces import ILanguage\n from Products.Five import BrowserView\n from zope.component import getMultiAdapter\n from zope.component import getUtility\ndiff --git a/src/plone/app/multilingual/browser/viewlets.py b/src/plone/app/multilingual/browser/viewlets.py\nindex f219a982..e33e3eb4 100644\n--- a/src/plone/app/multilingual/browser/viewlets.py\n+++ b/src/plone/app/multilingual/browser/viewlets.py\n@@ -3,7 +3,7 @@\n from plone.app.multilingual.interfaces import ITranslationManager\n from plone.memoize import ram\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ILanguage\n+from plone.base.interfaces import ILanguage\n from urllib.parse import quote_plus\n \n \ndiff --git a/src/plone/app/multilingual/browser/vocabularies.py b/src/plone/app/multilingual/browser/vocabularies.py\nindex 7737f4f0..fab0180f 100644\n--- a/src/plone/app/multilingual/browser/vocabularies.py\n+++ b/src/plone/app/multilingual/browser/vocabularies.py\n@@ -3,7 +3,7 @@\n from plone.app.vocabularies.catalog import CatalogVocabularyFactory\n from plone.i18n.locales.interfaces import ILanguageAvailability\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ILanguage\n+from plone.base.interfaces import ILanguage\n from zope.component import getGlobalSiteManager\n from zope.interface import implementer\n from zope.interface import provider\ndiff --git a/src/plone/app/multilingual/dx/cloner.py b/src/plone/app/multilingual/dx/cloner.py\nindex 2a776fef..1c28405d 100644\n--- a/src/plone/app/multilingual/dx/cloner.py\n+++ b/src/plone/app/multilingual/dx/cloner.py\n@@ -3,7 +3,7 @@\n from plone.app.multilingual.interfaces import ITranslationCloner\n from plone.app.multilingual.interfaces import ITranslationManager\n from plone.dexterity.utils import iterSchemata\n-from Products.CMFPlone.interfaces import ILanguage\n+from plone.base.interfaces import ILanguage\n from Products.CMFPlone.utils import safe_unicode\n from z3c.relationfield import RelationValue\n from z3c.relationfield.interfaces import IRelationList\ndiff --git a/src/plone/app/multilingual/dx/language.py b/src/plone/app/multilingual/dx/language.py\nindex cf9f7525..3723eeb9 100644\n--- a/src/plone/app/multilingual/dx/language.py\n+++ b/src/plone/app/multilingual/dx/language.py\n@@ -1,6 +1,6 @@\n # from plone.app.dexterity.behaviors.metadata import ICategorization\n from plone.app.multilingual.interfaces import LANGUAGE_INDEPENDENT\n-from Products.CMFPlone.interfaces import ILanguage\n+from plone.base.interfaces import ILanguage\n from zope.interface import implementer\n \n \ndiff --git a/src/plone/app/multilingual/dx/subscriber.py b/src/plone/app/multilingual/dx/subscriber.py\nindex 377eeeab..29a62969 100644\n--- a/src/plone/app/multilingual/dx/subscriber.py\n+++ b/src/plone/app/multilingual/dx/subscriber.py\n@@ -10,7 +10,7 @@\n from plone.dexterity.interfaces import IDexterityFTI\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ILanguage\n+from plone.base.interfaces import ILanguage\n from zope.component import getUtility\n from zope.component import queryAdapter\n from zope.event import notify\ndiff --git a/src/plone/app/multilingual/factory.py b/src/plone/app/multilingual/factory.py\nindex c0a7a0ec..1dd7db7e 100644\n--- a/src/plone/app/multilingual/factory.py\n+++ b/src/plone/app/multilingual/factory.py\n@@ -6,7 +6,7 @@\n from plone.app.multilingual.interfaces import ITranslationIdChooser\n from plone.app.multilingual.interfaces import ITranslationLocator\n from plone.app.multilingual.interfaces import ITranslationManager\n-from Products.CMFPlone.interfaces.siteroot import IPloneSiteRoot\n+from plone.base.interfaces.siteroot import IPloneSiteRoot\n from zope.interface import implementer\n \n \ndiff --git a/src/plone/app/multilingual/indexer.py b/src/plone/app/multilingual/indexer.py\nindex 43ab768e..b4201e48 100644\n--- a/src/plone/app/multilingual/indexer.py\n+++ b/src/plone/app/multilingual/indexer.py\n@@ -1,7 +1,7 @@\n from plone.app.multilingual.interfaces import ITG\n from plone.app.multilingual.interfaces import ITranslatable\n from plone.indexer import indexer\n-from Products.CMFPlone.interfaces import ILanguage\n+from plone.base.interfaces import ILanguage\n \n \n @indexer(ITranslatable)\ndiff --git a/src/plone/app/multilingual/manager.py b/src/plone/app/multilingual/manager.py\nindex f8076a73..d3bf2d01 100644\n--- a/src/plone/app/multilingual/manager.py\n+++ b/src/plone/app/multilingual/manager.py\n@@ -15,7 +15,7 @@\n from plone.uuid.handlers import addAttributeUUID\n from plone.uuid.interfaces import IUUID\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ILanguage\n+from plone.base.interfaces import ILanguage\n from zope.component.hooks import getSite\n from zope.event import notify\n from zope.globalrequest import getRequest\ndiff --git a/src/plone/app/multilingual/setuphandlers.py b/src/plone/app/multilingual/setuphandlers.py\nindex 35732579..e01d6688 100644\n--- a/src/plone/app/multilingual/setuphandlers.py\n+++ b/src/plone/app/multilingual/setuphandlers.py\n@@ -2,7 +2,7 @@\n from plone.app.multilingual.browser.setup import SetupMultilingualSite\n from plone.app.multilingual.interfaces import ITranslatable\n from plone.app.multilingual.itg import addAttributeTG\n-from Products.CMFPlone.interfaces import INonInstallable\n+from plone.base.interfaces import INonInstallable\n from Products.CMFPlone.utils import getToolByName\n from zope.component.hooks import getSite\n from zope.interface import implementer\ndiff --git a/src/plone/app/multilingual/subscriber.py b/src/plone/app/multilingual/subscriber.py\nindex 8b78ecdd..2e487352 100644\n--- a/src/plone/app/multilingual/subscriber.py\n+++ b/src/plone/app/multilingual/subscriber.py\n@@ -13,7 +13,7 @@\n from plone.uuid.interfaces import IUUID\n from Products.CMFCore.interfaces import IFolderish\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ILanguage\n+from plone.base.interfaces import ILanguage\n from zope.component.hooks import getSite\n from zope.globalrequest import getRequest\n from zope.lifecycleevent import modified\ndiff --git a/src/plone/app/multilingual/tests/test_api.py b/src/plone/app/multilingual/tests/test_api.py\nindex ee626b6e..f723f962 100644\n--- a/src/plone/app/multilingual/tests/test_api.py\n+++ b/src/plone/app/multilingual/tests/test_api.py\n@@ -9,7 +9,7 @@\n from plone.app.testing import logout\n from plone.dexterity.utils import createContentInContainer\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ILanguage\n+from plone.base.interfaces import ILanguage\n from zope.event import notify\n from zope.interface import alsoProvides\n \ndiff --git a/src/plone/app/multilingual/tests/test_helper_views.py b/src/plone/app/multilingual/tests/test_helper_views.py\nindex 27ad5331..c0efd0bb 100644\n--- a/src/plone/app/multilingual/tests/test_helper_views.py\n+++ b/src/plone/app/multilingual/tests/test_helper_views.py\n@@ -9,7 +9,7 @@\n from plone.i18n.interfaces import ILanguageSchema\n from plone.registry.interfaces import IRegistry\n from plone.testing.z2 import Browser\n-from Products.CMFPlone.interfaces import ILanguage\n+from plone.base.interfaces import ILanguage\n from zope.component import getUtility\n from zope.interface import alsoProvides\n \ndiff --git a/src/plone/app/multilingual/tests/test_sitemap.py b/src/plone/app/multilingual/tests/test_sitemap.py\nindex 34692817..abd814e9 100644\n--- a/src/plone/app/multilingual/tests/test_sitemap.py\n+++ b/src/plone/app/multilingual/tests/test_sitemap.py\n@@ -4,7 +4,7 @@\n from plone.app.multilingual.testing import PAM_FUNCTIONAL_TESTING\n from plone.dexterity.utils import createContentInContainer\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import ISiteSchema\n+from plone.base.interfaces import ISiteSchema\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n from zope.interface import alsoProvides\ndiff --git a/src/plone/app/multilingual/tests/test_subscribers.py b/src/plone/app/multilingual/tests/test_subscribers.py\nindex 3f8ebd0b..fd60bf0c 100644\n--- a/src/plone/app/multilingual/tests/test_subscribers.py\n+++ b/src/plone/app/multilingual/tests/test_subscribers.py\n@@ -2,7 +2,7 @@\n from plone.app.multilingual.testing import PAM_FUNCTIONAL_TESTING\n from plone.dexterity.utils import createContentInContainer\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ILanguage\n+from plone.base.interfaces import ILanguage\n from zope.interface import alsoProvides\n \n import unittest\ndiff --git a/src/plone/app/multilingual/upgrades.py b/src/plone/app/multilingual/upgrades.py\nindex b2660cad..3ce6398c 100644\n--- a/src/plone/app/multilingual/upgrades.py\n+++ b/src/plone/app/multilingual/upgrades.py\n@@ -1,7 +1,7 @@\n from plone.app.multilingual import logger\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ILanguage\n+from plone.base.interfaces import ILanguage\n from Products.CMFPlone.utils import _createObjectByType\n from time import time\n from zope.component import getUtility\n'

Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2023-03-11T19:04:11+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.multilingual/commit/ab927ce6eec314932e85c7c5b8586af2be9f6130

remove traces of Archetypes

Files changed:
M src/plone/app/multilingual/browser/helper_views.py

b'diff --git a/src/plone/app/multilingual/browser/helper_views.py b/src/plone/app/multilingual/browser/helper_views.py\nindex efa82f93..90aa7564 100644\n--- a/src/plone/app/multilingual/browser/helper_views.py\n+++ b/src/plone/app/multilingual/browser/helper_views.py\n@@ -21,23 +21,10 @@\n from zope.component import getUtility\n from zope.component.hooks import getSite\n from zope.interface import implementer\n-from zope.interface import Interface\n from zope.publisher.interfaces import IPublishTraverse\n from zope.publisher.interfaces import NotFound\n \n \n-try:\n-    from Products.ATContentTypes.interfaces.factory import IFactoryTool\n-except ImportError:\n-    try:\n-        from plone.base.interfaces.factory import IFactoryTool\n-    except ImportError:\n-        # gone in Plone 5.1 w/o ATCT\n-\n-        class IFactoryTool(Interface):\n-            pass\n-\n-\n @implementer(IPublishTraverse)\n class universal_link(BrowserView):\n     """Redirects the user to the negotiated translated page\n@@ -180,9 +167,6 @@ def getClosestDestination(self):\n                 # Having a permission issue on the root is fine;\n                 # not so much for everything else so that is checked there\n                 return self.wrapDestination(item.absolute_url())\n-            elif IFactoryTempFolder.providedBy(item) or IFactoryTool.providedBy(item):\n-                # TempFolder or portal_factory, can\'t have a translation\n-                continue\n             try:\n                 canonical = ITranslationManager(item)\n             except TypeError:\n'

Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2023-03-11T19:07:43+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.multilingual/commit/26b753ea7ab24ee385eb4c5aa1256ad7be11a8b4

run isort

Files changed:
M src/plone/app/multilingual/browser/add.py
M src/plone/app/multilingual/browser/controlpanel.py
M src/plone/app/multilingual/browser/interfaces.py
M src/plone/app/multilingual/browser/menu.py
M src/plone/app/multilingual/browser/migrator.py
M src/plone/app/multilingual/browser/modify.py
M src/plone/app/multilingual/browser/setup.py
M src/plone/app/multilingual/browser/translate.py
M src/plone/app/multilingual/browser/utils.py
M src/plone/app/multilingual/browser/viewlets.py
M src/plone/app/multilingual/browser/vocabularies.py
M src/plone/app/multilingual/dx/cloner.py
M src/plone/app/multilingual/dx/subscriber.py
M src/plone/app/multilingual/indexer.py
M src/plone/app/multilingual/manager.py
M src/plone/app/multilingual/subscriber.py
M src/plone/app/multilingual/tests/test_api.py
M src/plone/app/multilingual/tests/test_helper_views.py
M src/plone/app/multilingual/tests/test_sitemap.py
M src/plone/app/multilingual/tests/test_subscribers.py
M src/plone/app/multilingual/upgrades.py

b'diff --git a/src/plone/app/multilingual/browser/add.py b/src/plone/app/multilingual/browser/add.py\nindex 665bedc9..e75ad50f 100644\n--- a/src/plone/app/multilingual/browser/add.py\n+++ b/src/plone/app/multilingual/browser/add.py\n@@ -4,6 +4,7 @@\n from plone.app.multilingual.interfaces import IMultiLanguageExtraOptionsSchema\n from plone.app.multilingual.interfaces import ITG\n from plone.app.uuid.utils import uuidToObject\n+from plone.base.interfaces import ILanguage\n from plone.dexterity.browser.add import DefaultAddForm\n from plone.dexterity.browser.add import DefaultAddView\n from plone.dexterity.interfaces import IDexterityContent\n@@ -11,7 +12,6 @@\n from plone.z3cform.fieldsets.group import Group\n from Products.CMFCore.interfaces import IFolderish\n from Products.CMFCore.utils import getToolByName\n-from plone.base.interfaces import ILanguage\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from zope.component import adapter\n from zope.component import getUtility\ndiff --git a/src/plone/app/multilingual/browser/controlpanel.py b/src/plone/app/multilingual/browser/controlpanel.py\nindex c7fca73e..4fe2ab56 100644\n--- a/src/plone/app/multilingual/browser/controlpanel.py\n+++ b/src/plone/app/multilingual/browser/controlpanel.py\n@@ -4,11 +4,11 @@\n from plone.app.multilingual.interfaces import IMultiLanguageExtraOptionsSchema\n from plone.app.registry.browser import controlpanel\n from plone.app.uuid.utils import uuidToObject\n+from plone.base.interfaces import ILanguage\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.controlpanel.browser.language import (  # noqa\n     LanguageControlPanelForm,\n )\n-from plone.base.interfaces import ILanguage\n from Products.Five import BrowserView\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.statusmessages.interfaces import IStatusMessage\ndiff --git a/src/plone/app/multilingual/browser/interfaces.py b/src/plone/app/multilingual/browser/interfaces.py\nindex f960c3f5..688f6e57 100644\n--- a/src/plone/app/multilingual/browser/interfaces.py\n+++ b/src/plone/app/multilingual/browser/interfaces.py\n@@ -4,8 +4,8 @@\n from plone.app.z3cform.widget import RelatedItemsFieldWidget\n from plone.autoform import directives\n from plone.autoform.interfaces import IFormFieldProvider\n-from plone.supermodel import model\n from plone.base.interfaces import IPloneSiteRoot\n+from plone.supermodel import model\n from z3c.relationfield.schema import RelationChoice\n from zope import interface\n from zope import schema\ndiff --git a/src/plone/app/multilingual/browser/menu.py b/src/plone/app/multilingual/browser/menu.py\nindex 5d33b9de..0d8d910f 100644\n--- a/src/plone/app/multilingual/browser/menu.py\n+++ b/src/plone/app/multilingual/browser/menu.py\n@@ -15,11 +15,11 @@\n from plone.app.multilingual.interfaces import ITranslationManager\n from plone.app.multilingual.interfaces import LANGUAGE_INDEPENDENT\n from plone.app.multilingual.permissions import ManageTranslations\n+from plone.base.interfaces import ILanguage\n from plone.memoize import view\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.defaultpage import is_default_page\n-from plone.base.interfaces import ILanguage\n from Products.CMFPlone.utils import safe_unicode\n from zope.browsermenu.menu import BrowserMenu\n from zope.browsermenu.menu import BrowserSubMenuItem\ndiff --git a/src/plone/app/multilingual/browser/migrator.py b/src/plone/app/multilingual/browser/migrator.py\nindex ed2cc0e8..d544826b 100644\n--- a/src/plone/app/multilingual/browser/migrator.py\n+++ b/src/plone/app/multilingual/browser/migrator.py\n@@ -3,11 +3,11 @@\n from Acquisition import aq_parent\n from plone.app.multilingual import _\n from plone.app.multilingual.interfaces import ITranslationManager\n+from plone.base.interfaces import ILanguage\n+from plone.base.interfaces import IPloneSiteRoot\n from plone.locking.interfaces import ILockable\n from Products.CMFCore.exceptions import ResourceLockedError\n from Products.CMFCore.utils import getToolByName\n-from plone.base.interfaces import ILanguage\n-from plone.base.interfaces import IPloneSiteRoot\n from Products.Five import BrowserView\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from zc.relation.interfaces import ICatalog\ndiff --git a/src/plone/app/multilingual/browser/modify.py b/src/plone/app/multilingual/browser/modify.py\nindex dc9caebc..f5cec194 100644\n--- a/src/plone/app/multilingual/browser/modify.py\n+++ b/src/plone/app/multilingual/browser/modify.py\n@@ -3,10 +3,10 @@\n from plone.app.multilingual.interfaces import ITranslationManager\n from plone.autoform.form import AutoExtensibleForm\n from plone.autoform.interfaces import IFormFieldProvider\n+from plone.base.interfaces import ILanguage\n from plone.registry.interfaces import IRegistry\n from plone.uuid.interfaces import IUUID\n from Products.CMFCore.utils import getToolByName\n-from plone.base.interfaces import ILanguage\n from Products.Five.browser import BrowserView\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.statusmessages.interfaces import IStatusMessage\ndiff --git a/src/plone/app/multilingual/browser/setup.py b/src/plone/app/multilingual/browser/setup.py\nindex dc17bc8c..c237eee3 100644\n--- a/src/plone/app/multilingual/browser/setup.py\n+++ b/src/plone/app/multilingual/browser/setup.py\n@@ -7,11 +7,11 @@\n from plone.app.multilingual.interfaces import ITranslationManager\n from plone.app.multilingual.interfaces import LANGUAGE_INDEPENDENT\n from plone.app.multilingual.subscriber import set_recursive_language\n+from plone.base.interfaces import ILanguage\n from plone.dexterity.interfaces import IDexterityFTI\n from plone.i18n.locales.languages import _combinedlanguagelist\n from plone.i18n.locales.languages import _languagelist\n from Products.CMFCore.utils import getToolByName\n-from plone.base.interfaces import ILanguage\n from Products.CMFPlone.utils import _createObjectByType\n from Products.Five import BrowserView\n from zope.component.hooks import getSite\ndiff --git a/src/plone/app/multilingual/browser/translate.py b/src/plone/app/multilingual/browser/translate.py\nindex 83ee4652..cb702e41 100644\n--- a/src/plone/app/multilingual/browser/translate.py\n+++ b/src/plone/app/multilingual/browser/translate.py\n@@ -2,9 +2,9 @@\n from plone.app.multilingual import _\n from plone.app.multilingual.interfaces import IMultiLanguageExtraOptionsSchema\n from plone.app.multilingual.interfaces import ITranslationManager\n+from plone.base.interfaces import ILanguage\n from plone.registry.interfaces import IRegistry\n from plone.uuid.interfaces import IUUID\n-from plone.base.interfaces import ILanguage\n from Products.Five import BrowserView\n from zope.component import getUtility\n \ndiff --git a/src/plone/app/multilingual/browser/utils.py b/src/plone/app/multilingual/browser/utils.py\nindex c646b884..20382fde 100644\n--- a/src/plone/app/multilingual/browser/utils.py\n+++ b/src/plone/app/multilingual/browser/utils.py\n@@ -9,10 +9,10 @@\n from plone.app.multilingual.interfaces import ITranslationLocator\n from plone.app.multilingual.interfaces import ITranslationManager\n from plone.app.multilingual.manager import TranslationManager\n+from plone.base.interfaces import ILanguage\n from plone.i18n.locales.interfaces import IContentLanguageAvailability\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n-from plone.base.interfaces import ILanguage\n from Products.Five import BrowserView\n from zope.component import getMultiAdapter\n from zope.component import getUtility\ndiff --git a/src/plone/app/multilingual/browser/viewlets.py b/src/plone/app/multilingual/browser/viewlets.py\nindex e33e3eb4..ce380c2f 100644\n--- a/src/plone/app/multilingual/browser/viewlets.py\n+++ b/src/plone/app/multilingual/browser/viewlets.py\n@@ -1,9 +1,9 @@\n from plone.app.layout.viewlets.common import ViewletBase\n from plone.app.multilingual.interfaces import ITranslatable\n from plone.app.multilingual.interfaces import ITranslationManager\n+from plone.base.interfaces import ILanguage\n from plone.memoize import ram\n from Products.CMFCore.utils import getToolByName\n-from plone.base.interfaces import ILanguage\n from urllib.parse import quote_plus\n \n \ndiff --git a/src/plone/app/multilingual/browser/vocabularies.py b/src/plone/app/multilingual/browser/vocabularies.py\nindex fab0180f..ccb36e42 100644\n--- a/src/plone/app/multilingual/browser/vocabularies.py\n+++ b/src/plone/app/multilingual/browser/vocabularies.py\n@@ -1,9 +1,9 @@\n from plone.app.multilingual.browser.utils import is_language_independent\n from plone.app.multilingual.interfaces import ITranslationManager\n from plone.app.vocabularies.catalog import CatalogVocabularyFactory\n+from plone.base.interfaces import ILanguage\n from plone.i18n.locales.interfaces import ILanguageAvailability\n from Products.CMFCore.utils import getToolByName\n-from plone.base.interfaces import ILanguage\n from zope.component import getGlobalSiteManager\n from zope.interface import implementer\n from zope.interface import provider\ndiff --git a/src/plone/app/multilingual/dx/cloner.py b/src/plone/app/multilingual/dx/cloner.py\nindex 1c28405d..6e69ef7b 100644\n--- a/src/plone/app/multilingual/dx/cloner.py\n+++ b/src/plone/app/multilingual/dx/cloner.py\n@@ -2,8 +2,8 @@\n from plone.app.multilingual.interfaces import ILanguageIndependentFieldsManager\n from plone.app.multilingual.interfaces import ITranslationCloner\n from plone.app.multilingual.interfaces import ITranslationManager\n-from plone.dexterity.utils import iterSchemata\n from plone.base.interfaces import ILanguage\n+from plone.dexterity.utils import iterSchemata\n from Products.CMFPlone.utils import safe_unicode\n from z3c.relationfield import RelationValue\n from z3c.relationfield.interfaces import IRelationList\ndiff --git a/src/plone/app/multilingual/dx/subscriber.py b/src/plone/app/multilingual/dx/subscriber.py\nindex 29a62969..e2ed02c9 100644\n--- a/src/plone/app/multilingual/dx/subscriber.py\n+++ b/src/plone/app/multilingual/dx/subscriber.py\n@@ -7,10 +7,10 @@\n from plone.app.multilingual.interfaces import IMultiLanguageExtraOptionsSchema\n from plone.app.multilingual.interfaces import IPloneAppMultilingualInstalled\n from plone.app.multilingual.interfaces import ITranslationManager\n+from plone.base.interfaces import ILanguage\n from plone.dexterity.interfaces import IDexterityFTI\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n-from plone.base.interfaces import ILanguage\n from zope.component import getUtility\n from zope.component import queryAdapter\n from zope.event import notify\ndiff --git a/src/plone/app/multilingual/indexer.py b/src/plone/app/multilingual/indexer.py\nindex b4201e48..043a092a 100644\n--- a/src/plone/app/multilingual/indexer.py\n+++ b/src/plone/app/multilingual/indexer.py\n@@ -1,7 +1,7 @@\n from plone.app.multilingual.interfaces import ITG\n from plone.app.multilingual.interfaces import ITranslatable\n-from plone.indexer import indexer\n from plone.base.interfaces import ILanguage\n+from plone.indexer import indexer\n \n \n @indexer(ITranslatable)\ndiff --git a/src/plone/app/multilingual/manager.py b/src/plone/app/multilingual/manager.py\nindex d3bf2d01..1f32c1cb 100644\n--- a/src/plone/app/multilingual/manager.py\n+++ b/src/plone/app/multilingual/manager.py\n@@ -11,11 +11,11 @@\n from plone.app.multilingual.interfaces import NOTG\n from plone.app.multilingual.itg import addAttributeTG\n from plone.app.uuid.utils import uuidToObject\n+from plone.base.interfaces import ILanguage\n from plone.protect.interfaces import IDisableCSRFProtection\n from plone.uuid.handlers import addAttributeUUID\n from plone.uuid.interfaces import IUUID\n from Products.CMFCore.utils import getToolByName\n-from plone.base.interfaces import ILanguage\n from zope.component.hooks import getSite\n from zope.event import notify\n from zope.globalrequest import getRequest\ndiff --git a/src/plone/app/multilingual/subscriber.py b/src/plone/app/multilingual/subscriber.py\nindex 2e487352..971df42d 100644\n--- a/src/plone/app/multilingual/subscriber.py\n+++ b/src/plone/app/multilingual/subscriber.py\n@@ -9,11 +9,11 @@\n from plone.app.multilingual.interfaces import ITranslationManager\n from plone.app.multilingual.interfaces import LANGUAGE_INDEPENDENT\n from plone.app.multilingual.itg import addAttributeTG\n+from plone.base.interfaces import ILanguage\n from plone.dexterity.interfaces import IDexterityContent\n from plone.uuid.interfaces import IUUID\n from Products.CMFCore.interfaces import IFolderish\n from Products.CMFCore.utils import getToolByName\n-from plone.base.interfaces import ILanguage\n from zope.component.hooks import getSite\n from zope.globalrequest import getRequest\n from zope.lifecycleevent import modified\ndiff --git a/src/plone/app/multilingual/tests/test_api.py b/src/plone/app/multilingual/tests/test_api.py\nindex f723f962..0192bb6a 100644\n--- a/src/plone/app/multilingual/tests/test_api.py\n+++ b/src/plone/app/multilingual/tests/test_api.py\n@@ -7,9 +7,9 @@\n from plone.app.multilingual.interfaces import ITranslationManager\n from plone.app.multilingual.testing import PAM_FUNCTIONAL_TESTING\n from plone.app.testing import logout\n+from plone.base.interfaces import ILanguage\n from plone.dexterity.utils import createContentInContainer\n from Products.CMFCore.utils import getToolByName\n-from plone.base.interfaces import ILanguage\n from zope.event import notify\n from zope.interface import alsoProvides\n \ndiff --git a/src/plone/app/multilingual/tests/test_helper_views.py b/src/plone/app/multilingual/tests/test_helper_views.py\nindex c0efd0bb..b5196b1f 100644\n--- a/src/plone/app/multilingual/tests/test_helper_views.py\n+++ b/src/plone/app/multilingual/tests/test_helper_views.py\n@@ -5,11 +5,11 @@\n from plone.app.multilingual.testing import PAM_FUNCTIONAL_TESTING\n from plone.app.testing import TEST_USER_NAME\n from plone.app.testing import TEST_USER_PASSWORD\n+from plone.base.interfaces import ILanguage\n from plone.dexterity.utils import createContentInContainer\n from plone.i18n.interfaces import ILanguageSchema\n from plone.registry.interfaces import IRegistry\n from plone.testing.z2 import Browser\n-from plone.base.interfaces import ILanguage\n from zope.component import getUtility\n from zope.interface import alsoProvides\n \ndiff --git a/src/plone/app/multilingual/tests/test_sitemap.py b/src/plone/app/multilingual/tests/test_sitemap.py\nindex abd814e9..7418f078 100644\n--- a/src/plone/app/multilingual/tests/test_sitemap.py\n+++ b/src/plone/app/multilingual/tests/test_sitemap.py\n@@ -2,9 +2,9 @@\n from io import BytesIO\n from plone.app.multilingual.interfaces import IPloneAppMultilingualInstalled\n from plone.app.multilingual.testing import PAM_FUNCTIONAL_TESTING\n+from plone.base.interfaces import ISiteSchema\n from plone.dexterity.utils import createContentInContainer\n from plone.registry.interfaces import IRegistry\n-from plone.base.interfaces import ISiteSchema\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n from zope.interface import alsoProvides\ndiff --git a/src/plone/app/multilingual/tests/test_subscribers.py b/src/plone/app/multilingual/tests/test_subscribers.py\nindex fd60bf0c..e1197d80 100644\n--- a/src/plone/app/multilingual/tests/test_subscribers.py\n+++ b/src/plone/app/multilingual/tests/test_subscribers.py\n@@ -1,8 +1,8 @@\n from plone.app.multilingual.interfaces import IPloneAppMultilingualInstalled\n from plone.app.multilingual.testing import PAM_FUNCTIONAL_TESTING\n+from plone.base.interfaces import ILanguage\n from plone.dexterity.utils import createContentInContainer\n from Products.CMFCore.utils import getToolByName\n-from plone.base.interfaces import ILanguage\n from zope.interface import alsoProvides\n \n import unittest\ndiff --git a/src/plone/app/multilingual/upgrades.py b/src/plone/app/multilingual/upgrades.py\nindex 3ce6398c..bcf76f6f 100644\n--- a/src/plone/app/multilingual/upgrades.py\n+++ b/src/plone/app/multilingual/upgrades.py\n@@ -1,7 +1,7 @@\n from plone.app.multilingual import logger\n+from plone.base.interfaces import ILanguage\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n-from plone.base.interfaces import ILanguage\n from Products.CMFPlone.utils import _createObjectByType\n from time import time\n from zope.component import getUtility\n'

Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2023-03-11T19:10:57+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.multilingual/commit/24254de2d762677a278004dc0520167f5614bf17

run black

Files changed:
A news/410.bugfix
M src/plone/app/multilingual/browser/add.py
M src/plone/app/multilingual/browser/controlpanel.py
M src/plone/app/multilingual/browser/edit.py
M src/plone/app/multilingual/browser/helper_views.py
M src/plone/app/multilingual/browser/interfaces.py
M src/plone/app/multilingual/browser/menu.py
M src/plone/app/multilingual/browser/migrator.py
M src/plone/app/multilingual/browser/modify.py
M src/plone/app/multilingual/browser/setup.py
M src/plone/app/multilingual/dx/cloner.py
M src/plone/app/multilingual/dx/directives.py
M src/plone/app/multilingual/dx/form.py
M src/plone/app/multilingual/dx/subscriber.py
M src/plone/app/multilingual/itg.py
M src/plone/app/multilingual/setuphandlers.py
M src/plone/app/multilingual/testing.py
M src/plone/app/multilingual/tests/test_directives.py
M src/plone/app/multilingual/tests/test_helper_views.py
M src/plone/app/multilingual/tests/test_lif.py
M src/plone/app/multilingual/tests/test_lrf.py
M src/plone/app/multilingual/tests/test_selector.py
M src/plone/app/multilingual/tests/test_uninstall.py
M src/plone/app/multilingual/upgrades.py

b'diff --git a/news/410.bugfix b/news/410.bugfix\nnew file mode 100644\nindex 00000000..0efeb162\n--- /dev/null\n+++ b/news/410.bugfix\n@@ -0,0 +1,3 @@\n+Resolve eprecation warnings (plone.base).\n+Get rid of a Archetypes leftover.\n+[jensens]\ndiff --git a/src/plone/app/multilingual/browser/add.py b/src/plone/app/multilingual/browser/add.py\nindex e75ad50f..005640b1 100644\n--- a/src/plone/app/multilingual/browser/add.py\n+++ b/src/plone/app/multilingual/browser/add.py\n@@ -110,7 +110,6 @@ class MultilingualAddFormGroup(Group):\n \n @implementer(IMultilingualAddForm)\n class MultilingualAddForm(DefaultAddForm):\n-\n     babel = ViewPageTemplateFile("templates/dexterity_edit.pt")\n \n     group_class = MultilingualAddFormGroup\ndiff --git a/src/plone/app/multilingual/browser/controlpanel.py b/src/plone/app/multilingual/browser/controlpanel.py\nindex 4fe2ab56..98ef2422 100644\n--- a/src/plone/app/multilingual/browser/controlpanel.py\n+++ b/src/plone/app/multilingual/browser/controlpanel.py\n@@ -166,7 +166,9 @@ def __call__(self):\n                             "title": translated_obj.getId(),\n                         }\n                     else:\n-                        url_to_create = f"{sr.getURL()}/@@create_translation?language={lang}"\n+                        url_to_create = (\n+                            f"{sr.getURL()}/@@create_translation?language={lang}"\n+                        )\n                         translations[lang] = {\n                             "url": url_to_create,\n                             "title": _("Not translated"),\ndiff --git a/src/plone/app/multilingual/browser/edit.py b/src/plone/app/multilingual/browser/edit.py\nindex 9488cb25..b1fbfddd 100644\n--- a/src/plone/app/multilingual/browser/edit.py\n+++ b/src/plone/app/multilingual/browser/edit.py\n@@ -12,7 +12,6 @@\n \n \n class MultilingualEditForm(DefaultEditForm):\n-\n     babel = ViewPageTemplateFile("templates/dexterity_edit.pt")\n \n     def languages(self):\ndiff --git a/src/plone/app/multilingual/browser/helper_views.py b/src/plone/app/multilingual/browser/helper_views.py\nindex 90aa7564..34c54fec 100644\n--- a/src/plone/app/multilingual/browser/helper_views.py\n+++ b/src/plone/app/multilingual/browser/helper_views.py\n@@ -37,7 +37,6 @@ def __init__(self, context, request):\n         self.lang = None\n \n     def publishTraverse(self, request, name):\n-\n         if self.tg is None:  # ../@@universal-link/translationgroup\n             self.tg = name\n         elif self.lang is None:  # ../@@universal-link/translationgroup/lang\n@@ -242,7 +241,6 @@ def already_translated(self):\n             return []\n \n     def has_any_translation(self):\n-\n         if self.tg is not None:\n             return len(self.tg.get_restricted_translations().items()) > 0\n         else:\ndiff --git a/src/plone/app/multilingual/browser/interfaces.py b/src/plone/app/multilingual/browser/interfaces.py\nindex 688f6e57..9cb6650b 100644\n--- a/src/plone/app/multilingual/browser/interfaces.py\n+++ b/src/plone/app/multilingual/browser/interfaces.py\n@@ -36,7 +36,6 @@ class ITranslateMenu(IBrowserMenu):\n \n \n class ICreateTranslation(interface.Interface):\n-\n     language = schema.Choice(\n         title=_("title_language", default="Language"),\n         source=untranslated_languages,\n@@ -44,7 +43,6 @@ class ICreateTranslation(interface.Interface):\n \n \n class IUpdateLanguage(interface.Interface):\n-\n     language = schema.Choice(\n         title=_("title_available_languages", default="Available languages"),\n         description=_(\n@@ -62,7 +60,6 @@ def request_language(context):\n \n \n class IConnectTranslation(model.Schema):\n-\n     language = schema.Choice(\n         title=_("title_language", default="Language"),\n         source=untranslated_languages,\n@@ -75,11 +72,11 @@ class IConnectTranslation(model.Schema):\n         required=True,\n     )\n     directives.widget(\n-        \'content\',\n+        "content",\n         RelatedItemsFieldWidget,\n         pattern_options={\n-            \'basePath\': make_relation_root_path,\n-        }\n+            "basePath": make_relation_root_path,\n+        },\n     )\n \n \ndiff --git a/src/plone/app/multilingual/browser/menu.py b/src/plone/app/multilingual/browser/menu.py\nindex 0d8d910f..e6c236f4 100644\n--- a/src/plone/app/multilingual/browser/menu.py\n+++ b/src/plone/app/multilingual/browser/menu.py\n@@ -526,7 +526,6 @@ def getMenuItems(self, context, request):\n \n @implementer(ITranslateSubMenuItem)\n class TranslateSubMenuItem(BrowserSubMenuItem):\n-\n     title = _("label_translate_menu", default="Translate")\n     description = _(\n         "title_translate_menu", default="Manage translations for your content."\ndiff --git a/src/plone/app/multilingual/browser/migrator.py b/src/plone/app/multilingual/browser/migrator.py\nindex d544826b..ff2f2eee 100644\n--- a/src/plone/app/multilingual/browser/migrator.py\n+++ b/src/plone/app/multilingual/browser/migrator.py\n@@ -97,7 +97,6 @@ def __call__(self):\n \n \n class LP2PAMAfterView(BrowserView):\n-\n     template = ViewPageTemplateFile("templates/cleanup_results.pt")\n     stepinfo = _("After migration relation cleanup")\n \n@@ -306,7 +305,6 @@ def step3(self):\n \n \n class LP2PAMReindexLanguageIndex(BrowserView):\n-\n     template = ViewPageTemplateFile("templates/reindex-results.pt")\n     stepinfo = "Reindex the LanguageIndex"\n \ndiff --git a/src/plone/app/multilingual/browser/modify.py b/src/plone/app/multilingual/browser/modify.py\nindex f5cec194..27e70e09 100644\n--- a/src/plone/app/multilingual/browser/modify.py\n+++ b/src/plone/app/multilingual/browser/modify.py\n@@ -26,13 +26,11 @@ def available_languages(self):\n         return registry["plone.available_languages"]\n \n     def get_translation(self, language):\n-\n         manager = ITranslationManager(self.context)\n         return manager.get_translation(language)\n \n \n class ConnectTranslation(AutoExtensibleForm, Form):\n-\n     schema = IFormFieldProvider(IConnectTranslation)\n     ignoreContext = True\n     label = _("label_connect_translation", default="Connect translation")\n@@ -63,11 +61,9 @@ def handle_add(self, action):\n \n \n class DisconnectTranslation(BrowserView):\n-\n     tpl = ViewPageTemplateFile("templates/disconnect_translation.pt")\n \n     def __call__(self):\n-\n         if self.request.form.get("submitted"):\n             language = self.request.form["language"]\n             catalog = getToolByName(self.context, "portal_catalog")\ndiff --git a/src/plone/app/multilingual/browser/setup.py b/src/plone/app/multilingual/browser/setup.py\nindex c237eee3..9125e1d8 100644\n--- a/src/plone/app/multilingual/browser/setup.py\n+++ b/src/plone/app/multilingual/browser/setup.py\n@@ -35,7 +35,6 @@ def __call__(self, forceOneLanguage=False, forceMovingAndSetting=True):\n \n \n class SetupMultilingualSite:\n-\n     # portal_type that is added as root language folder\n     folder_type = "LRF"\n \ndiff --git a/src/plone/app/multilingual/dx/cloner.py b/src/plone/app/multilingual/dx/cloner.py\nindex 6e69ef7b..0906eaf7 100644\n--- a/src/plone/app/multilingual/dx/cloner.py\n+++ b/src/plone/app/multilingual/dx/cloner.py\n@@ -90,7 +90,9 @@ def copy_fields(self, translation):\n                     # But RelationValue.__eq__ is broken if the relation doesn\'t have a from_object,\n                     # so for now we force field_changed to True for relations above.\n                     if field_changed is None:\n-                        translation_value = getattr(translation_adapter, field_name, _marker)\n+                        translation_value = getattr(\n+                            translation_adapter, field_name, _marker\n+                        )\n                         field_changed = value != translation_value\n                     if field_changed:\n                         changed = True\ndiff --git a/src/plone/app/multilingual/dx/directives.py b/src/plone/app/multilingual/dx/directives.py\nindex 553ddf2e..b749a789 100644\n--- a/src/plone/app/multilingual/dx/directives.py\n+++ b/src/plone/app/multilingual/dx/directives.py\n@@ -33,7 +33,6 @@ def factory(self, *args):\n \n \n class LanguageIndependentFieldsPlugin(CheckerPlugin):\n-\n     key = LANGUAGE_INDEPENDENT_KEY\n \n     def __call__(self):\ndiff --git a/src/plone/app/multilingual/dx/form.py b/src/plone/app/multilingual/dx/form.py\nindex 20afebee..9594afb2 100644\n--- a/src/plone/app/multilingual/dx/form.py\n+++ b/src/plone/app/multilingual/dx/form.py\n@@ -82,7 +82,6 @@ def get(self):\n             result = manager.get_translations()\n \n             if len(result) >= 1:\n-\n                 orig_lang = list(result.keys())[0]\n                 obj = result[orig_lang]\n                 name = self.field.__name__\ndiff --git a/src/plone/app/multilingual/dx/subscriber.py b/src/plone/app/multilingual/dx/subscriber.py\nindex e2ed02c9..fcf73dcb 100644\n--- a/src/plone/app/multilingual/dx/subscriber.py\n+++ b/src/plone/app/multilingual/dx/subscriber.py\n@@ -61,7 +61,6 @@ def bypass_security_checks(self):\n         return field and field.value or False\n \n     def handle_modified(self, content):\n-\n         fieldmanager = ILanguageIndependentFieldsManager(content)\n         if not fieldmanager.has_independent_fields():\n             return\ndiff --git a/src/plone/app/multilingual/itg.py b/src/plone/app/multilingual/itg.py\nindex 7870ef6c..22dc5df1 100644\n--- a/src/plone/app/multilingual/itg.py\n+++ b/src/plone/app/multilingual/itg.py\n@@ -37,7 +37,6 @@ def set(self, tg):\n \n @adapter(ITranslatable, IObjectCreatedEvent)\n def addAttributeTG(obj, event):\n-\n     if not IObjectCopiedEvent.providedBy(event) and getattr(\n         aq_base(obj), ATTRIBUTE_NAME, None\n     ):\ndiff --git a/src/plone/app/multilingual/setuphandlers.py b/src/plone/app/multilingual/setuphandlers.py\nindex e01d6688..5e2ba5ab 100644\n--- a/src/plone/app/multilingual/setuphandlers.py\n+++ b/src/plone/app/multilingual/setuphandlers.py\n@@ -80,7 +80,6 @@ def disable_translatable_behavior(portal):\n     all_ftis = types_tool.listTypeInfo()\n     dx_ftis = [x for x in all_ftis if getattr(x, "behaviors", False)]\n     for fti in dx_ftis:\n-\n         # Disable translatable behavior from all types\n         behaviors = [i for i in fti.behaviors if i != "plone.translatable"]\n         fti._updateProperty("behaviors", behaviors)\ndiff --git a/src/plone/app/multilingual/testing.py b/src/plone/app/multilingual/testing.py\nindex 9073d635..9e587dae 100644\n--- a/src/plone/app/multilingual/testing.py\n+++ b/src/plone/app/multilingual/testing.py\n@@ -40,7 +40,6 @@ def disableCSRFProtection():\n \n \n class PloneAppMultilingualLayer(PloneSandboxLayer):\n-\n     defaultBases = (PLONE_APP_CONTENTTYPES_FIXTURE,)\n \n     def setUpZope(self, app, configurationContext):\n@@ -158,7 +157,6 @@ def setUpPloneSite(self, portal):\n \n \n class MultipleLanguagesLayer(z2.Layer):\n-\n     defaultBases = (PLONE_APP_MULTILINGUAL_PRESET_FIXTURE,)\n \n \ndiff --git a/src/plone/app/multilingual/tests/test_directives.py b/src/plone/app/multilingual/tests/test_directives.py\nindex 2787f682..a4eba263 100644\n--- a/src/plone/app/multilingual/tests/test_directives.py\n+++ b/src/plone/app/multilingual/tests/test_directives.py\n@@ -10,7 +10,6 @@\n \n \n class TestDirectives(unittest.TestCase):\n-\n     layer = PAM_INTEGRATION_TESTING\n \n     def test_schema_directives_store_tagged_values(self):\ndiff --git a/src/plone/app/multilingual/tests/test_helper_views.py b/src/plone/app/multilingual/tests/test_helper_views.py\nindex b5196b1f..a85447b4 100644\n--- a/src/plone/app/multilingual/tests/test_helper_views.py\n+++ b/src/plone/app/multilingual/tests/test_helper_views.py\n@@ -18,7 +18,6 @@\n \n \n class PAMFuncTestHelperViews(unittest.TestCase):\n-\n     layer = PAM_FUNCTIONAL_TESTING\n \n     def setUp(self):\n@@ -52,7 +51,6 @@ def test_universal_link_view(self):\n \n \n class PAMIntTestHelperViews(unittest.TestCase):\n-\n     layer = PAM_FUNCTIONAL_TESTING\n \n     def setUp(self):\ndiff --git a/src/plone/app/multilingual/tests/test_lif.py b/src/plone/app/multilingual/tests/test_lif.py\nindex 1943a6b2..334fd2d5 100644\n--- a/src/plone/app/multilingual/tests/test_lif.py\n+++ b/src/plone/app/multilingual/tests/test_lif.py\n@@ -25,7 +25,6 @@\n \n \n class TestLanguageIndependentFieldOnAddTranslationForm(unittest.TestCase):\n-\n     layer = PAM_FUNCTIONAL_TESTING\n \n     def setUp(self):\n@@ -172,7 +171,6 @@ def test_field_not_copied_if_not_modified(self):\n \n \n class TestLanguageIndependentRelationField(unittest.TestCase):\n-\n     layer = PAM_FUNCTIONAL_TESTING\n \n     def setUp(self):\ndiff --git a/src/plone/app/multilingual/tests/test_lrf.py b/src/plone/app/multilingual/tests/test_lrf.py\nindex b0e9067f..b9e624c8 100644\n--- a/src/plone/app/multilingual/tests/test_lrf.py\n+++ b/src/plone/app/multilingual/tests/test_lrf.py\n@@ -13,7 +13,6 @@\n \n \n class TestLanguageRootFolder(unittest.TestCase):\n-\n     layer = PAM_FUNCTIONAL_TESTING\n \n     def setUp(self):\ndiff --git a/src/plone/app/multilingual/tests/test_selector.py b/src/plone/app/multilingual/tests/test_selector.py\nindex 3a221944..a25c49b7 100644\n--- a/src/plone/app/multilingual/tests/test_selector.py\n+++ b/src/plone/app/multilingual/tests/test_selector.py\n@@ -42,7 +42,6 @@ def __unicode__(self):\n \n \n class TestLanguageSelectorBasics(unittest.TestCase):\n-\n     layer = PAM_FUNCTIONAL_TESTING\n \n     def setUp(self):\n@@ -109,52 +108,52 @@ def assertFullyTranslatedPages(self):\n         selector_viewlet_languages = selector_viewlet.languages()\n \n         expected_languages = [\n-                {\n-                    "code": "en",\n-                    "flag": "countryflag/gb",\n-                    "name": "English",\n-                    "native": "English",\n-                    "url": SELECTOR_VIEW_TEMPLATE\n-                    % {\n-                        "url": self.portal_url,\n-                        "tg": ITG(a),\n-                        "lang": "en",\n-                        "query": "?set_language=en",\n-                    },\n-                    "selected": True,\n-                    "translated": True,\n+            {\n+                "code": "en",\n+                "flag": "countryflag/gb",\n+                "name": "English",\n+                "native": "English",\n+                "url": SELECTOR_VIEW_TEMPLATE\n+                % {\n+                    "url": self.portal_url,\n+                    "tg": ITG(a),\n+                    "lang": "en",\n+                    "query": "?set_language=en",\n                 },\n-                {\n-                    "code": "ca",\n-                    "flag": "languageflag/ca",\n-                    "name": "Catalan",\n-                    "native": "Catal\\xe0",\n-                    "url": SELECTOR_VIEW_TEMPLATE\n-                    % {\n-                        "url": self.portal_url,\n-                        "tg": ITG(a),\n-                        "lang": "ca",\n-                        "query": "?set_language=ca",\n-                    },\n-                    "selected": False,\n-                    "translated": True,\n+                "selected": True,\n+                "translated": True,\n+            },\n+            {\n+                "code": "ca",\n+                "flag": "languageflag/ca",\n+                "name": "Catalan",\n+                "native": "Catal\\xe0",\n+                "url": SELECTOR_VIEW_TEMPLATE\n+                % {\n+                    "url": self.portal_url,\n+                    "tg": ITG(a),\n+                    "lang": "ca",\n+                    "query": "?set_language=ca",\n                 },\n-                {\n-                    "code": "es",\n-                    "flag": "countryflag/es",\n-                    "name": "Spanish",\n-                    "native": "Espa\\xf1ol",\n-                    "url": SELECTOR_VIEW_TEMPLATE\n-                    % {\n-                        "url": self.portal_url,\n-                        "tg": ITG(a),\n-                        "lang": "es",\n-                        "query": "?set_language=es",\n-                    },\n-                    "selected": False,\n-                    "translated": True,\n+                "selected": False,\n+                "translated": True,\n+            },\n+            {\n+                "code": "es",\n+                "flag": "countryflag/es",\n+                "name": "Spanish",\n+                "native": "Espa\\xf1ol",\n+                "url": SELECTOR_VIEW_TEMPLATE\n+                % {\n+                    "url": self.portal_url,\n+                    "tg": ITG(a),\n+                    "lang": "es",\n+                    "query": "?set_language=es",\n                 },\n-            ]\n+                "selected": False,\n+                "translated": True,\n+            },\n+        ]\n \n         self.assertEqual(\n             json.dumps(selector_viewlet_languages, sort_keys=True),\n@@ -618,7 +617,6 @@ def test_languages_preserve_view(self):\n         self.assertIn(\'lang="es"\', self.browser.contents)\n \n     def assertLanguagesPreserveQuery(self, policy):\n-\n         self.setUpPartiallyTranslatedContent()\n         self.request["PATH_INFO"] = "/plone/en/test-folder/contact-info"\n         self.request.form["uni"] = "pres\\xd8rved"\n@@ -773,7 +771,6 @@ def assertUrlsEqual(self, url1, url2):\n \n \n class TestLanguageSelectorPostPath(unittest.TestCase):\n-\n     layer = PAM_FUNCTIONAL_TESTING\n \n     def setUp(self):\n@@ -833,7 +830,6 @@ def test_findpath_vhr_and_traverser(self):\n \n \n class TestLanguageSelectorAddQuery(unittest.TestCase):\n-\n     layer = PAM_INTEGRATION_TESTING\n \n     def setUp(self):\n@@ -1051,24 +1047,22 @@ def test_set_language_is_not_present_when_always_set_cookie_is_set(self):\n \n \n class TestLanguageSelectorDisplayOptions(unittest.TestCase):\n-\n     layer = PAM_FUNCTIONAL_TESTING\n \n     def setUp(self):\n         # Set test variables\n-        self.portal = self.layer[\'portal\']\n+        self.portal = self.layer["portal"]\n         self.portal_url = self.portal.absolute_url()\n-        self.request = self.layer[\'request\']\n-        alsoProvides(self.layer[\'request\'], IPloneAppMultilingualInstalled)\n+        self.request = self.layer["request"]\n+        alsoProvides(self.layer["request"], IPloneAppMultilingualInstalled)\n \n         # Setup testbrowser\n-        self.browser = Browser(self.layer[\'app\'])\n+        self.browser = Browser(self.layer["app"])\n         self.browser.handleErrors = False\n \n     def test_language_selector_flag_is_a_svg(self):\n-\n         registry = getUtility(IRegistry)\n-        self.settings = registry.forInterface(ILanguageSchema, prefix=\'plone\')\n+        self.settings = registry.forInterface(ILanguageSchema, prefix="plone")\n         self.settings.display_flags = True\n         self.settings.always_show_selector = True\n \ndiff --git a/src/plone/app/multilingual/tests/test_uninstall.py b/src/plone/app/multilingual/tests/test_uninstall.py\nindex 44df6b8c..28df6bba 100644\n--- a/src/plone/app/multilingual/tests/test_uninstall.py\n+++ b/src/plone/app/multilingual/tests/test_uninstall.py\n@@ -10,7 +10,6 @@\n \n \n class TestUninstall(unittest.TestCase):\n-\n     layer = PLONE_APP_MULTILINGUAL_INTEGRATION_TESTING\n \n     def setUp(self):\ndiff --git a/src/plone/app/multilingual/upgrades.py b/src/plone/app/multilingual/upgrades.py\nindex bcf76f6f..77cdf684 100644\n--- a/src/plone/app/multilingual/upgrades.py\n+++ b/src/plone/app/multilingual/upgrades.py\n@@ -44,7 +44,6 @@ def migration_pam_1_to_2(context):\n     logger.info("Starting migration of language folders.")\n \n     for code, name in ltool.listSupportedLanguages():\n-\n         if code not in portal:\n             continue\n \n@@ -110,7 +109,6 @@ def migration_pam_1_to_2(context):\n \n     # PHASE 4: Old shared folder\n     if SHARED_NAME in portal:\n-\n         s5 = time()\n         shared = portal[SHARED_NAME]\n         logger.info(f"{SHARED_NAME} - Phase 4: Moving content to root...")\n'

Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2023-03-11T19:14:00+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.multilingual/commit/21352f68c78b8bf34e2230115c8a1c0aaf1c97c4

Update news/410.bugfix

Co-authored-by: David Glick &lt;david@glicksoftware.com&gt;

Files changed:
M news/410.bugfix

b'diff --git a/news/410.bugfix b/news/410.bugfix\nindex 0efeb162..9bdb1e86 100644\n--- a/news/410.bugfix\n+++ b/news/410.bugfix\n@@ -1,3 +1,3 @@\n-Resolve eprecation warnings (plone.base).\n+Resolve deprecation warnings (plone.base).\n Get rid of a Archetypes leftover.\n [jensens]\n'

Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2023-03-11T23:27:38+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.multilingual/commit/a284dd8e3418c09bbe5ac2776454998d05223d28

Merge pull request #410 from plone/plone-base

import from plone.base

Files changed:
A news/410.bugfix
M src/plone/app/multilingual/browser/add.py
M src/plone/app/multilingual/browser/controlpanel.py
M src/plone/app/multilingual/browser/edit.py
M src/plone/app/multilingual/browser/helper_views.py
M src/plone/app/multilingual/browser/interfaces.py
M src/plone/app/multilingual/browser/menu.py
M src/plone/app/multilingual/browser/migrator.py
M src/plone/app/multilingual/browser/modify.py
M src/plone/app/multilingual/browser/setup.py
M src/plone/app/multilingual/browser/translate.py
M src/plone/app/multilingual/browser/utils.py
M src/plone/app/multilingual/browser/viewlets.py
M src/plone/app/multilingual/browser/vocabularies.py
M src/plone/app/multilingual/dx/cloner.py
M src/plone/app/multilingual/dx/directives.py
M src/plone/app/multilingual/dx/form.py
M src/plone/app/multilingual/dx/language.py
M src/plone/app/multilingual/dx/subscriber.py
M src/plone/app/multilingual/factory.py
M src/plone/app/multilingual/indexer.py
M src/plone/app/multilingual/itg.py
M src/plone/app/multilingual/manager.py
M src/plone/app/multilingual/setuphandlers.py
M src/plone/app/multilingual/subscriber.py
M src/plone/app/multilingual/testing.py
M src/plone/app/multilingual/tests/test_api.py
M src/plone/app/multilingual/tests/test_directives.py
M src/plone/app/multilingual/tests/test_helper_views.py
M src/plone/app/multilingual/tests/test_lif.py
M src/plone/app/multilingual/tests/test_lrf.py
M src/plone/app/multilingual/tests/test_selector.py
M src/plone/app/multilingual/tests/test_sitemap.py
M src/plone/app/multilingual/tests/test_subscribers.py
M src/plone/app/multilingual/tests/test_uninstall.py
M src/plone/app/multilingual/upgrades.py

b'diff --git a/news/410.bugfix b/news/410.bugfix\nnew file mode 100644\nindex 00000000..9bdb1e86\n--- /dev/null\n+++ b/news/410.bugfix\n@@ -0,0 +1,3 @@\n+Resolve deprecation warnings (plone.base).\n+Get rid of a Archetypes leftover.\n+[jensens]\ndiff --git a/src/plone/app/multilingual/browser/add.py b/src/plone/app/multilingual/browser/add.py\nindex f28d6dfb..005640b1 100644\n--- a/src/plone/app/multilingual/browser/add.py\n+++ b/src/plone/app/multilingual/browser/add.py\n@@ -4,6 +4,7 @@\n from plone.app.multilingual.interfaces import IMultiLanguageExtraOptionsSchema\n from plone.app.multilingual.interfaces import ITG\n from plone.app.uuid.utils import uuidToObject\n+from plone.base.interfaces import ILanguage\n from plone.dexterity.browser.add import DefaultAddForm\n from plone.dexterity.browser.add import DefaultAddView\n from plone.dexterity.interfaces import IDexterityContent\n@@ -11,7 +12,6 @@\n from plone.z3cform.fieldsets.group import Group\n from Products.CMFCore.interfaces import IFolderish\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ILanguage\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from zope.component import adapter\n from zope.component import getUtility\n@@ -110,7 +110,6 @@ class MultilingualAddFormGroup(Group):\n \n @implementer(IMultilingualAddForm)\n class MultilingualAddForm(DefaultAddForm):\n-\n     babel = ViewPageTemplateFile("templates/dexterity_edit.pt")\n \n     group_class = MultilingualAddFormGroup\ndiff --git a/src/plone/app/multilingual/browser/controlpanel.py b/src/plone/app/multilingual/browser/controlpanel.py\nindex e29b1fbc..98ef2422 100644\n--- a/src/plone/app/multilingual/browser/controlpanel.py\n+++ b/src/plone/app/multilingual/browser/controlpanel.py\n@@ -4,11 +4,11 @@\n from plone.app.multilingual.interfaces import IMultiLanguageExtraOptionsSchema\n from plone.app.registry.browser import controlpanel\n from plone.app.uuid.utils import uuidToObject\n+from plone.base.interfaces import ILanguage\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.controlpanel.browser.language import (  # noqa\n     LanguageControlPanelForm,\n )\n-from Products.CMFPlone.interfaces import ILanguage\n from Products.Five import BrowserView\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.statusmessages.interfaces import IStatusMessage\n@@ -166,7 +166,9 @@ def __call__(self):\n                             "title": translated_obj.getId(),\n                         }\n                     else:\n-                        url_to_create = f"{sr.getURL()}/@@create_translation?language={lang}"\n+                        url_to_create = (\n+                            f"{sr.getURL()}/@@create_translation?language={lang}"\n+                        )\n                         translations[lang] = {\n                             "url": url_to_create,\n                             "title": _("Not translated"),\ndiff --git a/src/plone/app/multilingual/browser/edit.py b/src/plone/app/multilingual/browser/edit.py\nindex 9488cb25..b1fbfddd 100644\n--- a/src/plone/app/multilingual/browser/edit.py\n+++ b/src/plone/app/multilingual/browser/edit.py\n@@ -12,7 +12,6 @@\n \n \n class MultilingualEditForm(DefaultEditForm):\n-\n     babel = ViewPageTemplateFile("templates/dexterity_edit.pt")\n \n     def languages(self):\ndiff --git a/src/plone/app/multilingual/browser/helper_views.py b/src/plone/app/multilingual/browser/helper_views.py\nindex 93ec8421..34c54fec 100644\n--- a/src/plone/app/multilingual/browser/helper_views.py\n+++ b/src/plone/app/multilingual/browser/helper_views.py\n@@ -21,23 +21,10 @@\n from zope.component import getUtility\n from zope.component.hooks import getSite\n from zope.interface import implementer\n-from zope.interface import Interface\n from zope.publisher.interfaces import IPublishTraverse\n from zope.publisher.interfaces import NotFound\n \n \n-try:\n-    from Products.ATContentTypes.interfaces.factory import IFactoryTool\n-except ImportError:\n-    try:\n-        from Products.CMFPlone.interfaces.factory import IFactoryTool\n-    except ImportError:\n-        # gone in Plone 5.1 w/o ATCT\n-\n-        class IFactoryTool(Interface):\n-            pass\n-\n-\n @implementer(IPublishTraverse)\n class universal_link(BrowserView):\n     """Redirects the user to the negotiated translated page\n@@ -50,7 +37,6 @@ def __init__(self, context, request):\n         self.lang = None\n \n     def publishTraverse(self, request, name):\n-\n         if self.tg is None:  # ../@@universal-link/translationgroup\n             self.tg = name\n         elif self.lang is None:  # ../@@universal-link/translationgroup/lang\n@@ -180,9 +166,6 @@ def getClosestDestination(self):\n                 # Having a permission issue on the root is fine;\n                 # not so much for everything else so that is checked there\n                 return self.wrapDestination(item.absolute_url())\n-            elif IFactoryTempFolder.providedBy(item) or IFactoryTool.providedBy(item):\n-                # TempFolder or portal_factory, can\'t have a translation\n-                continue\n             try:\n                 canonical = ITranslationManager(item)\n             except TypeError:\n@@ -258,7 +241,6 @@ def already_translated(self):\n             return []\n \n     def has_any_translation(self):\n-\n         if self.tg is not None:\n             return len(self.tg.get_restricted_translations().items()) > 0\n         else:\ndiff --git a/src/plone/app/multilingual/browser/interfaces.py b/src/plone/app/multilingual/browser/interfaces.py\nindex 3f5391ea..9cb6650b 100644\n--- a/src/plone/app/multilingual/browser/interfaces.py\n+++ b/src/plone/app/multilingual/browser/interfaces.py\n@@ -4,8 +4,8 @@\n from plone.app.z3cform.widget import RelatedItemsFieldWidget\n from plone.autoform import directives\n from plone.autoform.interfaces import IFormFieldProvider\n+from plone.base.interfaces import IPloneSiteRoot\n from plone.supermodel import model\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n from z3c.relationfield.schema import RelationChoice\n from zope import interface\n from zope import schema\n@@ -36,7 +36,6 @@ class ITranslateMenu(IBrowserMenu):\n \n \n class ICreateTranslation(interface.Interface):\n-\n     language = schema.Choice(\n         title=_("title_language", default="Language"),\n         source=untranslated_languages,\n@@ -44,7 +43,6 @@ class ICreateTranslation(interface.Interface):\n \n \n class IUpdateLanguage(interface.Interface):\n-\n     language = schema.Choice(\n         title=_("title_available_languages", default="Available languages"),\n         description=_(\n@@ -62,7 +60,6 @@ def request_language(context):\n \n \n class IConnectTranslation(model.Schema):\n-\n     language = schema.Choice(\n         title=_("title_language", default="Language"),\n         source=untranslated_languages,\n@@ -75,11 +72,11 @@ class IConnectTranslation(model.Schema):\n         required=True,\n     )\n     directives.widget(\n-        \'content\',\n+        "content",\n         RelatedItemsFieldWidget,\n         pattern_options={\n-            \'basePath\': make_relation_root_path,\n-        }\n+            "basePath": make_relation_root_path,\n+        },\n     )\n \n \ndiff --git a/src/plone/app/multilingual/browser/menu.py b/src/plone/app/multilingual/browser/menu.py\nindex 24c15191..e6c236f4 100644\n--- a/src/plone/app/multilingual/browser/menu.py\n+++ b/src/plone/app/multilingual/browser/menu.py\n@@ -15,11 +15,11 @@\n from plone.app.multilingual.interfaces import ITranslationManager\n from plone.app.multilingual.interfaces import LANGUAGE_INDEPENDENT\n from plone.app.multilingual.permissions import ManageTranslations\n+from plone.base.interfaces import ILanguage\n from plone.memoize import view\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.defaultpage import is_default_page\n-from Products.CMFPlone.interfaces import ILanguage\n from Products.CMFPlone.utils import safe_unicode\n from zope.browsermenu.menu import BrowserMenu\n from zope.browsermenu.menu import BrowserSubMenuItem\n@@ -526,7 +526,6 @@ def getMenuItems(self, context, request):\n \n @implementer(ITranslateSubMenuItem)\n class TranslateSubMenuItem(BrowserSubMenuItem):\n-\n     title = _("label_translate_menu", default="Translate")\n     description = _(\n         "title_translate_menu", default="Manage translations for your content."\ndiff --git a/src/plone/app/multilingual/browser/migrator.py b/src/plone/app/multilingual/browser/migrator.py\nindex 81694e96..ff2f2eee 100644\n--- a/src/plone/app/multilingual/browser/migrator.py\n+++ b/src/plone/app/multilingual/browser/migrator.py\n@@ -3,11 +3,11 @@\n from Acquisition import aq_parent\n from plone.app.multilingual import _\n from plone.app.multilingual.interfaces import ITranslationManager\n+from plone.base.interfaces import ILanguage\n+from plone.base.interfaces import IPloneSiteRoot\n from plone.locking.interfaces import ILockable\n from Products.CMFCore.exceptions import ResourceLockedError\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ILanguage\n-from Products.CMFPlone.interfaces import IPloneSiteRoot\n from Products.Five import BrowserView\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from zc.relation.interfaces import ICatalog\n@@ -97,7 +97,6 @@ def __call__(self):\n \n \n class LP2PAMAfterView(BrowserView):\n-\n     template = ViewPageTemplateFile("templates/cleanup_results.pt")\n     stepinfo = _("After migration relation cleanup")\n \n@@ -306,7 +305,6 @@ def step3(self):\n \n \n class LP2PAMReindexLanguageIndex(BrowserView):\n-\n     template = ViewPageTemplateFile("templates/reindex-results.pt")\n     stepinfo = "Reindex the LanguageIndex"\n \ndiff --git a/src/plone/app/multilingual/browser/modify.py b/src/plone/app/multilingual/browser/modify.py\nindex 2066d7d8..27e70e09 100644\n--- a/src/plone/app/multilingual/browser/modify.py\n+++ b/src/plone/app/multilingual/browser/modify.py\n@@ -3,10 +3,10 @@\n from plone.app.multilingual.interfaces import ITranslationManager\n from plone.autoform.form import AutoExtensibleForm\n from plone.autoform.interfaces import IFormFieldProvider\n+from plone.base.interfaces import ILanguage\n from plone.registry.interfaces import IRegistry\n from plone.uuid.interfaces import IUUID\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ILanguage\n from Products.Five.browser import BrowserView\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.statusmessages.interfaces import IStatusMessage\n@@ -26,13 +26,11 @@ def available_languages(self):\n         return registry["plone.available_languages"]\n \n     def get_translation(self, language):\n-\n         manager = ITranslationManager(self.context)\n         return manager.get_translation(language)\n \n \n class ConnectTranslation(AutoExtensibleForm, Form):\n-\n     schema = IFormFieldProvider(IConnectTranslation)\n     ignoreContext = True\n     label = _("label_connect_translation", default="Connect translation")\n@@ -63,11 +61,9 @@ def handle_add(self, action):\n \n \n class DisconnectTranslation(BrowserView):\n-\n     tpl = ViewPageTemplateFile("templates/disconnect_translation.pt")\n \n     def __call__(self):\n-\n         if self.request.form.get("submitted"):\n             language = self.request.form["language"]\n             catalog = getToolByName(self.context, "portal_catalog")\ndiff --git a/src/plone/app/multilingual/browser/setup.py b/src/plone/app/multilingual/browser/setup.py\nindex 230261ac..9125e1d8 100644\n--- a/src/plone/app/multilingual/browser/setup.py\n+++ b/src/plone/app/multilingual/browser/setup.py\n@@ -7,11 +7,11 @@\n from plone.app.multilingual.interfaces import ITranslationManager\n from plone.app.multilingual.interfaces import LANGUAGE_INDEPENDENT\n from plone.app.multilingual.subscriber import set_recursive_language\n+from plone.base.interfaces import ILanguage\n from plone.dexterity.interfaces import IDexterityFTI\n from plone.i18n.locales.languages import _combinedlanguagelist\n from plone.i18n.locales.languages import _languagelist\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ILanguage\n from Products.CMFPlone.utils import _createObjectByType\n from Products.Five import BrowserView\n from zope.component.hooks import getSite\n@@ -35,7 +35,6 @@ def __call__(self, forceOneLanguage=False, forceMovingAndSetting=True):\n \n \n class SetupMultilingualSite:\n-\n     # portal_type that is added as root language folder\n     folder_type = "LRF"\n \ndiff --git a/src/plone/app/multilingual/browser/translate.py b/src/plone/app/multilingual/browser/translate.py\nindex 4e770802..cb702e41 100644\n--- a/src/plone/app/multilingual/browser/translate.py\n+++ b/src/plone/app/multilingual/browser/translate.py\n@@ -2,9 +2,9 @@\n from plone.app.multilingual import _\n from plone.app.multilingual.interfaces import IMultiLanguageExtraOptionsSchema\n from plone.app.multilingual.interfaces import ITranslationManager\n+from plone.base.interfaces import ILanguage\n from plone.registry.interfaces import IRegistry\n from plone.uuid.interfaces import IUUID\n-from Products.CMFPlone.interfaces import ILanguage\n from Products.Five import BrowserView\n from zope.component import getUtility\n \ndiff --git a/src/plone/app/multilingual/browser/utils.py b/src/plone/app/multilingual/browser/utils.py\nindex f5d5c563..20382fde 100644\n--- a/src/plone/app/multilingual/browser/utils.py\n+++ b/src/plone/app/multilingual/browser/utils.py\n@@ -9,10 +9,10 @@\n from plone.app.multilingual.interfaces import ITranslationLocator\n from plone.app.multilingual.interfaces import ITranslationManager\n from plone.app.multilingual.manager import TranslationManager\n+from plone.base.interfaces import ILanguage\n from plone.i18n.locales.interfaces import IContentLanguageAvailability\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ILanguage\n from Products.Five import BrowserView\n from zope.component import getMultiAdapter\n from zope.component import getUtility\ndiff --git a/src/plone/app/multilingual/browser/viewlets.py b/src/plone/app/multilingual/browser/viewlets.py\nindex f219a982..ce380c2f 100644\n--- a/src/plone/app/multilingual/browser/viewlets.py\n+++ b/src/plone/app/multilingual/browser/viewlets.py\n@@ -1,9 +1,9 @@\n from plone.app.layout.viewlets.common import ViewletBase\n from plone.app.multilingual.interfaces import ITranslatable\n from plone.app.multilingual.interfaces import ITranslationManager\n+from plone.base.interfaces import ILanguage\n from plone.memoize import ram\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ILanguage\n from urllib.parse import quote_plus\n \n \ndiff --git a/src/plone/app/multilingual/browser/vocabularies.py b/src/plone/app/multilingual/browser/vocabularies.py\nindex 7737f4f0..ccb36e42 100644\n--- a/src/plone/app/multilingual/browser/vocabularies.py\n+++ b/src/plone/app/multilingual/browser/vocabularies.py\n@@ -1,9 +1,9 @@\n from plone.app.multilingual.browser.utils import is_language_independent\n from plone.app.multilingual.interfaces import ITranslationManager\n from plone.app.vocabularies.catalog import CatalogVocabularyFactory\n+from plone.base.interfaces import ILanguage\n from plone.i18n.locales.interfaces import ILanguageAvailability\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ILanguage\n from zope.component import getGlobalSiteManager\n from zope.interface import implementer\n from zope.interface import provider\ndiff --git a/src/plone/app/multilingual/dx/cloner.py b/src/plone/app/multilingual/dx/cloner.py\nindex 2a776fef..0906eaf7 100644\n--- a/src/plone/app/multilingual/dx/cloner.py\n+++ b/src/plone/app/multilingual/dx/cloner.py\n@@ -2,8 +2,8 @@\n from plone.app.multilingual.interfaces import ILanguageIndependentFieldsManager\n from plone.app.multilingual.interfaces import ITranslationCloner\n from plone.app.multilingual.interfaces import ITranslationManager\n+from plone.base.interfaces import ILanguage\n from plone.dexterity.utils import iterSchemata\n-from Products.CMFPlone.interfaces import ILanguage\n from Products.CMFPlone.utils import safe_unicode\n from z3c.relationfield import RelationValue\n from z3c.relationfield.interfaces import IRelationList\n@@ -90,7 +90,9 @@ def copy_fields(self, translation):\n                     # But RelationValue.__eq__ is broken if the relation doesn\'t have a from_object,\n                     # so for now we force field_changed to True for relations above.\n                     if field_changed is None:\n-                        translation_value = getattr(translation_adapter, field_name, _marker)\n+                        translation_value = getattr(\n+                            translation_adapter, field_name, _marker\n+                        )\n                         field_changed = value != translation_value\n                     if field_changed:\n                         changed = True\ndiff --git a/src/plone/app/multilingual/dx/directives.py b/src/plone/app/multilingual/dx/directives.py\nindex 553ddf2e..b749a789 100644\n--- a/src/plone/app/multilingual/dx/directives.py\n+++ b/src/plone/app/multilingual/dx/directives.py\n@@ -33,7 +33,6 @@ def factory(self, *args):\n \n \n class LanguageIndependentFieldsPlugin(CheckerPlugin):\n-\n     key = LANGUAGE_INDEPENDENT_KEY\n \n     def __call__(self):\ndiff --git a/src/plone/app/multilingual/dx/form.py b/src/plone/app/multilingual/dx/form.py\nindex 20afebee..9594afb2 100644\n--- a/src/plone/app/multilingual/dx/form.py\n+++ b/src/plone/app/multilingual/dx/form.py\n@@ -82,7 +82,6 @@ def get(self):\n             result = manager.get_translations()\n \n             if len(result) >= 1:\n-\n                 orig_lang = list(result.keys())[0]\n                 obj = result[orig_lang]\n                 name = self.field.__name__\ndiff --git a/src/plone/app/multilingual/dx/language.py b/src/plone/app/multilingual/dx/language.py\nindex cf9f7525..3723eeb9 100644\n--- a/src/plone/app/multilingual/dx/language.py\n+++ b/src/plone/app/multilingual/dx/language.py\n@@ -1,6 +1,6 @@\n # from plone.app.dexterity.behaviors.metadata import ICategorization\n from plone.app.multilingual.interfaces import LANGUAGE_INDEPENDENT\n-from Products.CMFPlone.interfaces import ILanguage\n+from plone.base.interfaces import ILanguage\n from zope.interface import implementer\n \n \ndiff --git a/src/plone/app/multilingual/dx/subscriber.py b/src/plone/app/multilingual/dx/subscriber.py\nindex 377eeeab..fcf73dcb 100644\n--- a/src/plone/app/multilingual/dx/subscriber.py\n+++ b/src/plone/app/multilingual/dx/subscriber.py\n@@ -7,10 +7,10 @@\n from plone.app.multilingual.interfaces import IMultiLanguageExtraOptionsSchema\n from plone.app.multilingual.interfaces import IPloneAppMultilingualInstalled\n from plone.app.multilingual.interfaces import ITranslationManager\n+from plone.base.interfaces import ILanguage\n from plone.dexterity.interfaces import IDexterityFTI\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ILanguage\n from zope.component import getUtility\n from zope.component import queryAdapter\n from zope.event import notify\n@@ -61,7 +61,6 @@ def bypass_security_checks(self):\n         return field and field.value or False\n \n     def handle_modified(self, content):\n-\n         fieldmanager = ILanguageIndependentFieldsManager(content)\n         if not fieldmanager.has_independent_fields():\n             return\ndiff --git a/src/plone/app/multilingual/factory.py b/src/plone/app/multilingual/factory.py\nindex c0a7a0ec..1dd7db7e 100644\n--- a/src/plone/app/multilingual/factory.py\n+++ b/src/plone/app/multilingual/factory.py\n@@ -6,7 +6,7 @@\n from plone.app.multilingual.interfaces import ITranslationIdChooser\n from plone.app.multilingual.interfaces import ITranslationLocator\n from plone.app.multilingual.interfaces import ITranslationManager\n-from Products.CMFPlone.interfaces.siteroot import IPloneSiteRoot\n+from plone.base.interfaces.siteroot import IPloneSiteRoot\n from zope.interface import implementer\n \n \ndiff --git a/src/plone/app/multilingual/indexer.py b/src/plone/app/multilingual/indexer.py\nindex 43ab768e..043a092a 100644\n--- a/src/plone/app/multilingual/indexer.py\n+++ b/src/plone/app/multilingual/indexer.py\n@@ -1,7 +1,7 @@\n from plone.app.multilingual.interfaces import ITG\n from plone.app.multilingual.interfaces import ITranslatable\n+from plone.base.interfaces import ILanguage\n from plone.indexer import indexer\n-from Products.CMFPlone.interfaces import ILanguage\n \n \n @indexer(ITranslatable)\ndiff --git a/src/plone/app/multilingual/itg.py b/src/plone/app/multilingual/itg.py\nindex 7870ef6c..22dc5df1 100644\n--- a/src/plone/app/multilingual/itg.py\n+++ b/src/plone/app/multilingual/itg.py\n@@ -37,7 +37,6 @@ def set(self, tg):\n \n @adapter(ITranslatable, IObjectCreatedEvent)\n def addAttributeTG(obj, event):\n-\n     if not IObjectCopiedEvent.providedBy(event) and getattr(\n         aq_base(obj), ATTRIBUTE_NAME, None\n     ):\ndiff --git a/src/plone/app/multilingual/manager.py b/src/plone/app/multilingual/manager.py\nindex f8076a73..1f32c1cb 100644\n--- a/src/plone/app/multilingual/manager.py\n+++ b/src/plone/app/multilingual/manager.py\n@@ -11,11 +11,11 @@\n from plone.app.multilingual.interfaces import NOTG\n from plone.app.multilingual.itg import addAttributeTG\n from plone.app.uuid.utils import uuidToObject\n+from plone.base.interfaces import ILanguage\n from plone.protect.interfaces import IDisableCSRFProtection\n from plone.uuid.handlers import addAttributeUUID\n from plone.uuid.interfaces import IUUID\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ILanguage\n from zope.component.hooks import getSite\n from zope.event import notify\n from zope.globalrequest import getRequest\ndiff --git a/src/plone/app/multilingual/setuphandlers.py b/src/plone/app/multilingual/setuphandlers.py\nindex 35732579..5e2ba5ab 100644\n--- a/src/plone/app/multilingual/setuphandlers.py\n+++ b/src/plone/app/multilingual/setuphandlers.py\n@@ -2,7 +2,7 @@\n from plone.app.multilingual.browser.setup import SetupMultilingualSite\n from plone.app.multilingual.interfaces import ITranslatable\n from plone.app.multilingual.itg import addAttributeTG\n-from Products.CMFPlone.interfaces import INonInstallable\n+from plone.base.interfaces import INonInstallable\n from Products.CMFPlone.utils import getToolByName\n from zope.component.hooks import getSite\n from zope.interface import implementer\n@@ -80,7 +80,6 @@ def disable_translatable_behavior(portal):\n     all_ftis = types_tool.listTypeInfo()\n     dx_ftis = [x for x in all_ftis if getattr(x, "behaviors", False)]\n     for fti in dx_ftis:\n-\n         # Disable translatable behavior from all types\n         behaviors = [i for i in fti.behaviors if i != "plone.translatable"]\n         fti._updateProperty("behaviors", behaviors)\ndiff --git a/src/plone/app/multilingual/subscriber.py b/src/plone/app/multilingual/subscriber.py\nindex 8b78ecdd..971df42d 100644\n--- a/src/plone/app/multilingual/subscriber.py\n+++ b/src/plone/app/multilingual/subscriber.py\n@@ -9,11 +9,11 @@\n from plone.app.multilingual.interfaces import ITranslationManager\n from plone.app.multilingual.interfaces import LANGUAGE_INDEPENDENT\n from plone.app.multilingual.itg import addAttributeTG\n+from plone.base.interfaces import ILanguage\n from plone.dexterity.interfaces import IDexterityContent\n from plone.uuid.interfaces import IUUID\n from Products.CMFCore.interfaces import IFolderish\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ILanguage\n from zope.component.hooks import getSite\n from zope.globalrequest import getRequest\n from zope.lifecycleevent import modified\ndiff --git a/src/plone/app/multilingual/testing.py b/src/plone/app/multilingual/testing.py\nindex 9073d635..9e587dae 100644\n--- a/src/plone/app/multilingual/testing.py\n+++ b/src/plone/app/multilingual/testing.py\n@@ -40,7 +40,6 @@ def disableCSRFProtection():\n \n \n class PloneAppMultilingualLayer(PloneSandboxLayer):\n-\n     defaultBases = (PLONE_APP_CONTENTTYPES_FIXTURE,)\n \n     def setUpZope(self, app, configurationContext):\n@@ -158,7 +157,6 @@ def setUpPloneSite(self, portal):\n \n \n class MultipleLanguagesLayer(z2.Layer):\n-\n     defaultBases = (PLONE_APP_MULTILINGUAL_PRESET_FIXTURE,)\n \n \ndiff --git a/src/plone/app/multilingual/tests/test_api.py b/src/plone/app/multilingual/tests/test_api.py\nindex ee626b6e..0192bb6a 100644\n--- a/src/plone/app/multilingual/tests/test_api.py\n+++ b/src/plone/app/multilingual/tests/test_api.py\n@@ -7,9 +7,9 @@\n from plone.app.multilingual.interfaces import ITranslationManager\n from plone.app.multilingual.testing import PAM_FUNCTIONAL_TESTING\n from plone.app.testing import logout\n+from plone.base.interfaces import ILanguage\n from plone.dexterity.utils import createContentInContainer\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ILanguage\n from zope.event import notify\n from zope.interface import alsoProvides\n \ndiff --git a/src/plone/app/multilingual/tests/test_directives.py b/src/plone/app/multilingual/tests/test_directives.py\nindex 2787f682..a4eba263 100644\n--- a/src/plone/app/multilingual/tests/test_directives.py\n+++ b/src/plone/app/multilingual/tests/test_directives.py\n@@ -10,7 +10,6 @@\n \n \n class TestDirectives(unittest.TestCase):\n-\n     layer = PAM_INTEGRATION_TESTING\n \n     def test_schema_directives_store_tagged_values(self):\ndiff --git a/src/plone/app/multilingual/tests/test_helper_views.py b/src/plone/app/multilingual/tests/test_helper_views.py\nindex 27ad5331..a85447b4 100644\n--- a/src/plone/app/multilingual/tests/test_helper_views.py\n+++ b/src/plone/app/multilingual/tests/test_helper_views.py\n@@ -5,11 +5,11 @@\n from plone.app.multilingual.testing import PAM_FUNCTIONAL_TESTING\n from plone.app.testing import TEST_USER_NAME\n from plone.app.testing import TEST_USER_PASSWORD\n+from plone.base.interfaces import ILanguage\n from plone.dexterity.utils import createContentInContainer\n from plone.i18n.interfaces import ILanguageSchema\n from plone.registry.interfaces import IRegistry\n from plone.testing.z2 import Browser\n-from Products.CMFPlone.interfaces import ILanguage\n from zope.component import getUtility\n from zope.interface import alsoProvides\n \n@@ -18,7 +18,6 @@\n \n \n class PAMFuncTestHelperViews(unittest.TestCase):\n-\n     layer = PAM_FUNCTIONAL_TESTING\n \n     def setUp(self):\n@@ -52,7 +51,6 @@ def test_universal_link_view(self):\n \n \n class PAMIntTestHelperViews(unittest.TestCase):\n-\n     layer = PAM_FUNCTIONAL_TESTING\n \n     def setUp(self):\ndiff --git a/src/plone/app/multilingual/tests/test_lif.py b/src/plone/app/multilingual/tests/test_lif.py\nindex 1943a6b2..334fd2d5 100644\n--- a/src/plone/app/multilingual/tests/test_lif.py\n+++ b/src/plone/app/multilingual/tests/test_lif.py\n@@ -25,7 +25,6 @@\n \n \n class TestLanguageIndependentFieldOnAddTranslationForm(unittest.TestCase):\n-\n     layer = PAM_FUNCTIONAL_TESTING\n \n     def setUp(self):\n@@ -172,7 +171,6 @@ def test_field_not_copied_if_not_modified(self):\n \n \n class TestLanguageIndependentRelationField(unittest.TestCase):\n-\n     layer = PAM_FUNCTIONAL_TESTING\n \n     def setUp(self):\ndiff --git a/src/plone/app/multilingual/tests/test_lrf.py b/src/plone/app/multilingual/tests/test_lrf.py\nindex b0e9067f..b9e624c8 100644\n--- a/src/plone/app/multilingual/tests/test_lrf.py\n+++ b/src/plone/app/multilingual/tests/test_lrf.py\n@@ -13,7 +13,6 @@\n \n \n class TestLanguageRootFolder(unittest.TestCase):\n-\n     layer = PAM_FUNCTIONAL_TESTING\n \n     def setUp(self):\ndiff --git a/src/plone/app/multilingual/tests/test_selector.py b/src/plone/app/multilingual/tests/test_selector.py\nindex 3a221944..a25c49b7 100644\n--- a/src/plone/app/multilingual/tests/test_selector.py\n+++ b/src/plone/app/multilingual/tests/test_selector.py\n@@ -42,7 +42,6 @@ def __unicode__(self):\n \n \n class TestLanguageSelectorBasics(unittest.TestCase):\n-\n     layer = PAM_FUNCTIONAL_TESTING\n \n     def setUp(self):\n@@ -109,52 +108,52 @@ def assertFullyTranslatedPages(self):\n         selector_viewlet_languages = selector_viewlet.languages()\n \n         expected_languages = [\n-                {\n-                    "code": "en",\n-                    "flag": "countryflag/gb",\n-                    "name": "English",\n-                    "native": "English",\n-                    "url": SELECTOR_VIEW_TEMPLATE\n-                    % {\n-                        "url": self.portal_url,\n-                        "tg": ITG(a),\n-                        "lang": "en",\n-                        "query": "?set_language=en",\n-                    },\n-                    "selected": True,\n-                    "translated": True,\n+            {\n+                "code": "en",\n+                "flag": "countryflag/gb",\n+                "name": "English",\n+                "native": "English",\n+                "url": SELECTOR_VIEW_TEMPLATE\n+                % {\n+                    "url": self.portal_url,\n+                    "tg": ITG(a),\n+                    "lang": "en",\n+                    "query": "?set_language=en",\n                 },\n-                {\n-                    "code": "ca",\n-                    "flag": "languageflag/ca",\n-                    "name": "Catalan",\n-                    "native": "Catal\\xe0",\n-                    "url": SELECTOR_VIEW_TEMPLATE\n-                    % {\n-                        "url": self.portal_url,\n-                        "tg": ITG(a),\n-                        "lang": "ca",\n-                        "query": "?set_language=ca",\n-                    },\n-                    "selected": False,\n-                    "translated": True,\n+                "selected": True,\n+                "translated": True,\n+            },\n+            {\n+                "code": "ca",\n+                "flag": "languageflag/ca",\n+                "name": "Catalan",\n+                "native": "Catal\\xe0",\n+                "url": SELECTOR_VIEW_TEMPLATE\n+                % {\n+                    "url": self.portal_url,\n+                    "tg": ITG(a),\n+                    "lang": "ca",\n+                    "query": "?set_language=ca",\n                 },\n-                {\n-                    "code": "es",\n-                    "flag": "countryflag/es",\n-                    "name": "Spanish",\n-                    "native": "Espa\\xf1ol",\n-                    "url": SELECTOR_VIEW_TEMPLATE\n-                    % {\n-                        "url": self.portal_url,\n-                        "tg": ITG(a),\n-                        "lang": "es",\n-                        "query": "?set_language=es",\n-                    },\n-                    "selected": False,\n-                    "translated": True,\n+                "selected": False,\n+                "translated": True,\n+            },\n+            {\n+                "code": "es",\n+                "flag": "countryflag/es",\n+                "name": "Spanish",\n+                "native": "Espa\\xf1ol",\n+                "url": SELECTOR_VIEW_TEMPLATE\n+                % {\n+                    "url": self.portal_url,\n+                    "tg": ITG(a),\n+                    "lang": "es",\n+                    "query": "?set_language=es",\n                 },\n-            ]\n+                "selected": False,\n+                "translated": True,\n+            },\n+        ]\n \n         self.assertEqual(\n             json.dumps(selector_viewlet_languages, sort_keys=True),\n@@ -618,7 +617,6 @@ def test_languages_preserve_view(self):\n         self.assertIn(\'lang="es"\', self.browser.contents)\n \n     def assertLanguagesPreserveQuery(self, policy):\n-\n         self.setUpPartiallyTranslatedContent()\n         self.request["PATH_INFO"] = "/plone/en/test-folder/contact-info"\n         self.request.form["uni"] = "pres\\xd8rved"\n@@ -773,7 +771,6 @@ def assertUrlsEqual(self, url1, url2):\n \n \n class TestLanguageSelectorPostPath(unittest.TestCase):\n-\n     layer = PAM_FUNCTIONAL_TESTING\n \n     def setUp(self):\n@@ -833,7 +830,6 @@ def test_findpath_vhr_and_traverser(self):\n \n \n class TestLanguageSelectorAddQuery(unittest.TestCase):\n-\n     layer = PAM_INTEGRATION_TESTING\n \n     def setUp(self):\n@@ -1051,24 +1047,22 @@ def test_set_language_is_not_present_when_always_set_cookie_is_set(self):\n \n \n class TestLanguageSelectorDisplayOptions(unittest.TestCase):\n-\n     layer = PAM_FUNCTIONAL_TESTING\n \n     def setUp(self):\n         # Set test variables\n-        self.portal = self.layer[\'portal\']\n+        self.portal = self.layer["portal"]\n         self.portal_url = self.portal.absolute_url()\n-        self.request = self.layer[\'request\']\n-        alsoProvides(self.layer[\'request\'], IPloneAppMultilingualInstalled)\n+        self.request = self.layer["request"]\n+        alsoProvides(self.layer["request"], IPloneAppMultilingualInstalled)\n \n         # Setup testbrowser\n-        self.browser = Browser(self.layer[\'app\'])\n+        self.browser = Browser(self.layer["app"])\n         self.browser.handleErrors = False\n \n     def test_language_selector_flag_is_a_svg(self):\n-\n         registry = getUtility(IRegistry)\n-        self.settings = registry.forInterface(ILanguageSchema, prefix=\'plone\')\n+        self.settings = registry.forInterface(ILanguageSchema, prefix="plone")\n         self.settings.display_flags = True\n         self.settings.always_show_selector = True\n \ndiff --git a/src/plone/app/multilingual/tests/test_sitemap.py b/src/plone/app/multilingual/tests/test_sitemap.py\nindex 34692817..7418f078 100644\n--- a/src/plone/app/multilingual/tests/test_sitemap.py\n+++ b/src/plone/app/multilingual/tests/test_sitemap.py\n@@ -2,9 +2,9 @@\n from io import BytesIO\n from plone.app.multilingual.interfaces import IPloneAppMultilingualInstalled\n from plone.app.multilingual.testing import PAM_FUNCTIONAL_TESTING\n+from plone.base.interfaces import ISiteSchema\n from plone.dexterity.utils import createContentInContainer\n from plone.registry.interfaces import IRegistry\n-from Products.CMFPlone.interfaces import ISiteSchema\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n from zope.interface import alsoProvides\ndiff --git a/src/plone/app/multilingual/tests/test_subscribers.py b/src/plone/app/multilingual/tests/test_subscribers.py\nindex 3f8ebd0b..e1197d80 100644\n--- a/src/plone/app/multilingual/tests/test_subscribers.py\n+++ b/src/plone/app/multilingual/tests/test_subscribers.py\n@@ -1,8 +1,8 @@\n from plone.app.multilingual.interfaces import IPloneAppMultilingualInstalled\n from plone.app.multilingual.testing import PAM_FUNCTIONAL_TESTING\n+from plone.base.interfaces import ILanguage\n from plone.dexterity.utils import createContentInContainer\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ILanguage\n from zope.interface import alsoProvides\n \n import unittest\ndiff --git a/src/plone/app/multilingual/tests/test_uninstall.py b/src/plone/app/multilingual/tests/test_uninstall.py\nindex 44df6b8c..28df6bba 100644\n--- a/src/plone/app/multilingual/tests/test_uninstall.py\n+++ b/src/plone/app/multilingual/tests/test_uninstall.py\n@@ -10,7 +10,6 @@\n \n \n class TestUninstall(unittest.TestCase):\n-\n     layer = PLONE_APP_MULTILINGUAL_INTEGRATION_TESTING\n \n     def setUp(self):\ndiff --git a/src/plone/app/multilingual/upgrades.py b/src/plone/app/multilingual/upgrades.py\nindex b2660cad..77cdf684 100644\n--- a/src/plone/app/multilingual/upgrades.py\n+++ b/src/plone/app/multilingual/upgrades.py\n@@ -1,7 +1,7 @@\n from plone.app.multilingual import logger\n+from plone.base.interfaces import ILanguage\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.interfaces import ILanguage\n from Products.CMFPlone.utils import _createObjectByType\n from time import time\n from zope.component import getUtility\n@@ -44,7 +44,6 @@ def migration_pam_1_to_2(context):\n     logger.info("Starting migration of language folders.")\n \n     for code, name in ltool.listSupportedLanguages():\n-\n         if code not in portal:\n             continue\n \n@@ -110,7 +109,6 @@ def migration_pam_1_to_2(context):\n \n     # PHASE 4: Old shared folder\n     if SHARED_NAME in portal:\n-\n         s5 = time()\n         shared = portal[SHARED_NAME]\n         logger.info(f"{SHARED_NAME} - Phase 4: Moving content to root...")\n'

