Repository: plone.restapi


Branch: refs/heads/master
Date: 2018-11-11T06:40:46+01:00
Author: Andrea Cecchi (cekk) <andrea.cecchi85@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/53d0d670fa6a6d12f278eafce0e542185f9f4e95

Standardize errors data structure of email-notification endpoint

Files changed:
M CHANGES.rst
M src/plone/restapi/services/email_notification/post.py
M src/plone/restapi/tests/test_services_email_notification.py

b"diff --git a/CHANGES.rst b/CHANGES.rst\nindex 68462d0d..e9c4b020 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -4,7 +4,10 @@ Changelog\n 3.5.1 (unreleased)\n ------------------\n \n-- Nothing changed yet.\n+Bugfixes:\n+\n+- Standardize errors data structure of email-notification endpoint.\n+  [cekk]\n \n \n 3.5.0 (2018-11-06)\ndiff --git a/src/plone/restapi/services/email_notification/post.py b/src/plone/restapi/services/email_notification/post.py\nindex 3419e488..6c7681b9 100644\n--- a/src/plone/restapi/services/email_notification/post.py\n+++ b/src/plone/restapi/services/email_notification/post.py\n@@ -1,7 +1,8 @@\n # -*- coding: utf-8 -*-\n+from plone.restapi.deserializer import json_body\n from plone.restapi.services import Service\n+from zExceptions import BadRequest\n from zope.component import getMultiAdapter\n-from plone.restapi.deserializer import json_body\n from zope.interface import alsoProvides\n \n import plone\n@@ -18,18 +19,12 @@ def reply(self):\n         subject = data.get('subject', '')\n \n         if not sender_from_address or not message:\n-            self.request.response.setStatus(400)\n-            return dict(error=dict(\n-                type='BadRequest',\n-                message='Missing from or message parameters'))\n+            raise BadRequest('Missing from or message parameters')\n \n         overview_controlpanel = getMultiAdapter((self.context, self.request),\n                                                 name='overview-controlpanel')\n         if overview_controlpanel.mailhost_warning():\n-            self.request.response.setStatus(400)\n-            return dict(error=dict(\n-                type='BadRequest',\n-                message='MailHost is not configured.'))\n+            raise BadRequest('MailHost is not configured.')\n \n         # Disable CSRF protection\n         if 'IDisableCSRFProtection' in dir(plone.protect.interfaces):\n@@ -41,10 +36,10 @@ def reply(self):\n \n         contact_info_view.send_message(\n             dict(\n-              message=message,\n-              subject=subject,\n-              sender_from_address=sender_from_address,\n-              sender_fullname=sender_fullname\n+                message=message,\n+                subject=subject,\n+                sender_from_address=sender_from_address,\n+                sender_fullname=sender_fullname\n             )\n         )\n \ndiff --git a/src/plone/restapi/tests/test_services_email_notification.py b/src/plone/restapi/tests/test_services_email_notification.py\nindex 4a75e6b7..192f6d1b 100644\n--- a/src/plone/restapi/tests/test_services_email_notification.py\n+++ b/src/plone/restapi/tests/test_services_email_notification.py\n@@ -21,7 +21,7 @@\n     PLONE5 = True\n \n \n-@unittest.skipIf(not PLONE5, 'email notification not implemented for Plone < 5.') # noqa\n+@unittest.skipIf(not PLONE5, 'email notification not implemented for Plone < 5.')  # noqa\n class EmailNotificationEndpoint(unittest.TestCase):\n \n     layer = PLONE_RESTAPI_DX_FUNCTIONAL_TESTING\n@@ -46,6 +46,19 @@ def setUp(self):\n \n         transaction.commit()\n \n+    def test_email_notification_missing_parameters(self):\n+        response = self.api_session.post(\n+            '/@email-notification',\n+            json={\n+                'message': 'Just want to say hi.'\n+            })\n+        transaction.commit()\n+        self.assertEqual(response.status_code, 400)\n+        self.assertEqual(self.mailhost.messages, [])\n+        error = response.json()\n+        self.assertEqual(error['message'],\n+                         'Missing from or message parameters')\n+\n     def test_email_notification(self):\n         response = self.api_session.post(\n             '/@email-notification',\n"

Repository: plone.restapi


Branch: refs/heads/master
Date: 2018-11-14T11:23:17+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.restapi/commit/0f87ed20c2dd0e1302f960eaf9ff30f085c996bc

Merge pull request #635 from plone/fix-email-notification-errors

Standardize errors data structure of email-notification endpoint

Files changed:
M CHANGES.rst
M src/plone/restapi/services/email_notification/post.py
M src/plone/restapi/tests/test_services_email_notification.py

b"diff --git a/CHANGES.rst b/CHANGES.rst\nindex 68462d0d..e9c4b020 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -4,7 +4,10 @@ Changelog\n 3.5.1 (unreleased)\n ------------------\n \n-- Nothing changed yet.\n+Bugfixes:\n+\n+- Standardize errors data structure of email-notification endpoint.\n+  [cekk]\n \n \n 3.5.0 (2018-11-06)\ndiff --git a/src/plone/restapi/services/email_notification/post.py b/src/plone/restapi/services/email_notification/post.py\nindex 3419e488..6c7681b9 100644\n--- a/src/plone/restapi/services/email_notification/post.py\n+++ b/src/plone/restapi/services/email_notification/post.py\n@@ -1,7 +1,8 @@\n # -*- coding: utf-8 -*-\n+from plone.restapi.deserializer import json_body\n from plone.restapi.services import Service\n+from zExceptions import BadRequest\n from zope.component import getMultiAdapter\n-from plone.restapi.deserializer import json_body\n from zope.interface import alsoProvides\n \n import plone\n@@ -18,18 +19,12 @@ def reply(self):\n         subject = data.get('subject', '')\n \n         if not sender_from_address or not message:\n-            self.request.response.setStatus(400)\n-            return dict(error=dict(\n-                type='BadRequest',\n-                message='Missing from or message parameters'))\n+            raise BadRequest('Missing from or message parameters')\n \n         overview_controlpanel = getMultiAdapter((self.context, self.request),\n                                                 name='overview-controlpanel')\n         if overview_controlpanel.mailhost_warning():\n-            self.request.response.setStatus(400)\n-            return dict(error=dict(\n-                type='BadRequest',\n-                message='MailHost is not configured.'))\n+            raise BadRequest('MailHost is not configured.')\n \n         # Disable CSRF protection\n         if 'IDisableCSRFProtection' in dir(plone.protect.interfaces):\n@@ -41,10 +36,10 @@ def reply(self):\n \n         contact_info_view.send_message(\n             dict(\n-              message=message,\n-              subject=subject,\n-              sender_from_address=sender_from_address,\n-              sender_fullname=sender_fullname\n+                message=message,\n+                subject=subject,\n+                sender_from_address=sender_from_address,\n+                sender_fullname=sender_fullname\n             )\n         )\n \ndiff --git a/src/plone/restapi/tests/test_services_email_notification.py b/src/plone/restapi/tests/test_services_email_notification.py\nindex 4a75e6b7..192f6d1b 100644\n--- a/src/plone/restapi/tests/test_services_email_notification.py\n+++ b/src/plone/restapi/tests/test_services_email_notification.py\n@@ -21,7 +21,7 @@\n     PLONE5 = True\n \n \n-@unittest.skipIf(not PLONE5, 'email notification not implemented for Plone < 5.') # noqa\n+@unittest.skipIf(not PLONE5, 'email notification not implemented for Plone < 5.')  # noqa\n class EmailNotificationEndpoint(unittest.TestCase):\n \n     layer = PLONE_RESTAPI_DX_FUNCTIONAL_TESTING\n@@ -46,6 +46,19 @@ def setUp(self):\n \n         transaction.commit()\n \n+    def test_email_notification_missing_parameters(self):\n+        response = self.api_session.post(\n+            '/@email-notification',\n+            json={\n+                'message': 'Just want to say hi.'\n+            })\n+        transaction.commit()\n+        self.assertEqual(response.status_code, 400)\n+        self.assertEqual(self.mailhost.messages, [])\n+        error = response.json()\n+        self.assertEqual(error['message'],\n+                         'Missing from or message parameters')\n+\n     def test_email_notification(self):\n         response = self.api_session.post(\n             '/@email-notification',\n"

