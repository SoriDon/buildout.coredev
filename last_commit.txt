Repository: mockup


Branch: refs/heads/master
Date: 2017-01-13T09:10:54-06:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/mockup/commit/96ae87ba1a37771fbf4f879c241e4a5860775571

Move tooltip pattern definition after bootstrapTooltip function definition.
  This should fix `bootstrapTooltip is not a constructor errors`.

Files changed:
M CHANGES.rst
M mockup/patterns/tooltip/pattern.js

diff --git a/CHANGES.rst b/CHANGES.rst
index 92e9cf9..53037d2 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -101,6 +101,10 @@ New:
 
 Fixes:
 
+- Move tooltip pattern definition after bootstrapTooltip function definition.
+  This should fix `bootstrapTooltip is not a constructor errors`.
+  [vangheem]
+
 - Make ``pat-tooltip`` useable by it's own by including the necessary less files and reuse that one in other patterns.
   Allow configuration of ``placement`` parameter.
   [thet]
diff --git a/mockup/patterns/tooltip/pattern.js b/mockup/patterns/tooltip/pattern.js
index df4633e..acc8ffe 100644
--- a/mockup/patterns/tooltip/pattern.js
+++ b/mockup/patterns/tooltip/pattern.js
@@ -41,25 +41,6 @@ define([
 ], function($, Base, undefined) {
   'use strict';
 
-  var Tooltip = Base.extend({
-    name: 'tooltip',
-    trigger: '.pat-tooltip',
-    parser: 'mockup',
-    defaults: {
-      html: false,
-      placement: 'top'
-    },
-    init: function() {
-        if (this.options.html === 'true') {
-          // TODO: fix the parser!
-          this.options.html = true;
-        } else {
-          this.options.html = false;
-        }
-        this.data = new bootstrapTooltip(this.$el[0], this.options);
-      },
-  });
-
   //This is pulled almost directly from the Bootstrap Tooltip
   //extension. We rename it just to differentiate from the pattern.
   var bootstrapTooltip = function (element, options) {
@@ -472,6 +453,25 @@ define([
     this.hide().$element.off('.' + this.type).removeData('bs.' + this.type)
   }
 
+  var Tooltip = Base.extend({
+    name: 'tooltip',
+    trigger: '.pat-tooltip',
+    parser: 'mockup',
+    defaults: {
+      html: false,
+      placement: 'top'
+    },
+    init: function() {
+        if (this.options.html === 'true') {
+          // TODO: fix the parser!
+          this.options.html = true;
+        } else {
+          this.options.html = false;
+        }
+        this.data = new bootstrapTooltip(this.$el[0], this.options);
+      },
+  });
+
   return Tooltip;
 
 });


