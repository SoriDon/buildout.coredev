Repository: plone.app.linkintegrity


Branch: refs/heads/master
Date: 2017-09-27T18:41:00+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.linkintegrity/commit/b64552cb4a2dd83a119f8d0e3f1daa7075215bfb

Prevent handler from doing anything when linkintegrity is switched of (#60)

Files changed:
M CHANGES.rst
M plone/app/linkintegrity/handlers.py

diff --git a/CHANGES.rst b/CHANGES.rst
index d3679e0..4487b18 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,9 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- Prevent linkintegrity-handler from doing anything when it is switched of in the registry.
+  This change also prevents some issues in migration from AT to DX since linkintegrity is disabled during the migration.
+  [pbauer]
 
 Bug fixes:
 
diff --git a/plone/app/linkintegrity/handlers.py b/plone/app/linkintegrity/handlers.py
index 3749765..4ce0948 100644
--- a/plone/app/linkintegrity/handlers.py
+++ b/plone/app/linkintegrity/handlers.py
@@ -5,7 +5,9 @@
 from plone.app.linkintegrity.interfaces import IRetriever
 from plone.app.uuid.utils import uuidToObject
 from plone.dexterity.interfaces import IDexterityContent
+from plone.registry.interfaces import IRegistry
 from Products.CMFCore.utils import getToolByName
+from Products.CMFPlone.interfaces import IEditingSchema
 from Products.CMFPlone.interfaces import IPloneSiteRoot
 from urllib import unquote
 from urlparse import urlsplit
@@ -103,7 +105,7 @@ def getObjectsFromLinks(base, links):
 
 
 def modifiedContent(obj, event):
-    """ a dexterity based object was modified """
+    """Object was modified, cloned or created."""
     if not check_linkintegrity_dependencies(obj):
         return
     retriever = IRetriever(obj, None)
@@ -146,6 +148,13 @@ def updateReferences(obj, refs):
 
 
 def check_linkintegrity_dependencies(obj):
+    try:
+        reg = getUtility(IRegistry)
+        editing_settings = reg.forInterface(IEditingSchema, prefix='plone')
+    except (ComponentLookupError, KeyError):
+        return False
+    if not editing_settings.enable_link_integrity_checks:
+        return False
     if not getToolByName(obj, 'portal_url', None):
         # `getObjectFromLinks` is not possible without access
         # to `portal_url`


