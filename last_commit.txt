Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2021-10-27T11:30:37+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/cd57b6e82fca76a35caac018a18211e7a7dddc39

On Zope root, create Volto site by default.

When the `plone.volto` package is not available, the buttons are the same as before,
and will create a Classic Plone site.

When `plone.volto` is there, you get an extra button for Classic:

- 'Create a new Plone site' will create a Volto site.
- 'Create Classic Plone site' will create a Classic site.
- Advanced still gives you all options.

When installing Volto, we install the caching and Barcelonata profiles just like a Classic site,
although we could choose to not install Barceloneta.
As extra, we install `plone.volto:default` and `plone.volto:default-homepage`.
(Technically, `default-homepage` would already pull in `default`, but let's do this explicitly.)

Files changed:
A news/3344.feature
M Products/CMFPlone/browser/admin.py
M Products/CMFPlone/browser/templates/plone-overview.pt

b'diff --git a/Products/CMFPlone/browser/admin.py b/Products/CMFPlone/browser/admin.py\nindex 62301e605a..50fdc7b4ac 100644\n--- a/Products/CMFPlone/browser/admin.py\n+++ b/Products/CMFPlone/browser/admin.py\n@@ -33,6 +33,14 @@\n from zope.schema.interfaces import IVocabularyFactory\n \n import logging\n+import pkg_resources\n+\n+\n+try:\n+    pkg_resources.get_distribution("plone.volto")\n+    HAS_VOLTO = True\n+except pkg_resources.DistributionNotFound:\n+    HAS_VOLTO = False\n LOGGER = logging.getLogger(\'Products.CMFPlone\')\n \n \n@@ -49,6 +57,7 @@ def publishTraverse(self, request, name):\n \n \n class Overview(BrowserView):\n+    has_volto = HAS_VOLTO\n \n     def sites(self, root=None):\n         if root is None:\n@@ -146,10 +155,22 @@ class AddPloneSite(BrowserView):\n         \'plone.app.caching:default\',\n         \'plonetheme.barceloneta:default\',\n     )\n+    # Let\'s have a separate list for Volto.\n+    volto_default_extension_profiles = (\n+        \'plone.app.caching:default\',\n+        # We could choose to not install Barceloneta:\n+        \'plonetheme.barceloneta:default\',\n+        \'plone.volto:default\',\n+        \'plone.volto:default-homepage\'\n+    )\n \n     def profiles(self):\n         base_profiles = []\n         extension_profiles = []\n+        if HAS_VOLTO and not self.request.get(\'classic\'):\n+            selected_extension_profiles = self.volto_default_extension_profiles\n+        else:\n+            selected_extension_profiles = self.default_extension_profiles\n \n         # profiles available for install/uninstall, but hidden at the time\n         # the Plone site is created\n@@ -165,7 +186,7 @@ def profiles(self):\n                info.get(\'for\') in (IPloneSiteRoot, None):\n                 profile_id = info.get(\'id\')\n                 if profile_id not in not_installable:\n-                    if profile_id in self.default_extension_profiles:\n+                    if profile_id in selected_extension_profiles:\n                         info[\'selected\'] = \'selected\'\n                     extension_profiles.append(info)\n \ndiff --git a/Products/CMFPlone/browser/templates/plone-overview.pt b/Products/CMFPlone/browser/templates/plone-overview.pt\nindex b4e78eb4f6..b1a159b988 100644\n--- a/Products/CMFPlone/browser/templates/plone-overview.pt\n+++ b/Products/CMFPlone/browser/templates/plone-overview.pt\n@@ -86,16 +86,25 @@\n             </p>\n             <form id="add-plone-site"\n                     method="get"\n-                    action="#"\n-                    tal:define="site_number python: \'\' if not sites else len(sites) + 1"\n-                    tal:attributes="action string:${context/absolute_url}/@@plone-addsite">\n+                    tal:define="site_number python: \'\' if not sites else len(sites) + 1;\n+                                action string:${context/absolute_url}/@@plone-addsite"\n+                    action="${action}">\n                 <input type="hidden" name="site_id" value="Plone${site_number}" />\n                 <button type="submit"\n                         class="btn btn-${python:\'success\' if sites else \'primary\'}"\n                         i18n:translate="">Create a new Plone site</button>\n+                <tal:comment condition="nothing">\n+                  When we have Volto, the button above will create a Volto site,\n+                  and we need an extra button below to create a Classic Plone site.\n+                </tal:comment>\n                 <a class="btn btn-secondary"\n                     i18n:translate=""\n-                    tal:attributes="href string:${context/absolute_url}/@@plone-addsite?site_id=Plone${site_number}&amp;advanced=1"\n+                    tal:condition="view/has_volto"\n+                    href="${action}?site_id=Plone${site_number}&amp;classic=1"\n+                    >Create Classic Plone site</a>\n+                <a class="btn btn-secondary"\n+                    i18n:translate=""\n+                    href="${action}?site_id=Plone${site_number}&amp;advanced=1"\n                     >Advanced</a>\n             </form>\n         </div>\ndiff --git a/news/3344.feature b/news/3344.feature\nnew file mode 100644\nindex 0000000000..80ac62ffc0\n--- /dev/null\n+++ b/news/3344.feature\n@@ -0,0 +1,2 @@\n+On Zope root, create Volto site by default.\n+[maurits]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2021-10-30T12:07:58+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/23aab3272c8a691aa0c773bce2f39de7c63af406

Merge branch 'master' into maurits-create-volto-site

Files changed:
A news/3314.bugfix
M Products/CMFPlone/CatalogTool.py
M Products/CMFPlone/Portal.py
M Products/CMFPlone/tests/testCatalogTool.py
M Products/CMFPlone/tests/testPortalCreation.py

b'diff --git a/Products/CMFPlone/CatalogTool.py b/Products/CMFPlone/CatalogTool.py\nindex 17c6001ec8..f63503281c 100644\n--- a/Products/CMFPlone/CatalogTool.py\n+++ b/Products/CMFPlone/CatalogTool.py\n@@ -488,6 +488,7 @@ def indexObject(obj, path):\n                     pass\n         self.manage_catalogClear()\n         portal = aq_parent(aq_inner(self))\n+        indexObject(portal, \'\')\n         portal.ZopeFindAndApply(\n             portal,\n             search_sub=True,\ndiff --git a/Products/CMFPlone/Portal.py b/Products/CMFPlone/Portal.py\nindex c477c3fcbe..0474b4f6ca 100644\n--- a/Products/CMFPlone/Portal.py\n+++ b/Products/CMFPlone/Portal.py\n@@ -222,19 +222,6 @@ def isEffective(self, date):\n         # Override DefaultDublinCoreImpl\'s test, since we are always viewable.\n         return 1\n \n-    # Ensure portals don\'t get cataloged.\n-    def indexObject(self):\n-        pass\n-\n-    def unindexObject(self):\n-        pass\n-\n-    def reindexObject(self, idxs=None):\n-        pass\n-\n-    def reindexObjectSecurity(self, skip_self=False):\n-        pass\n-\n \n # Remove the IContentish interface so we don\'t listen to events that won\'t\n # apply to the site root, ie handleUidAnnotationEvent\ndiff --git a/Products/CMFPlone/tests/testCatalogTool.py b/Products/CMFPlone/tests/testCatalogTool.py\nindex 2dd3fe05f2..50ab21231a 100644\n--- a/Products/CMFPlone/tests/testCatalogTool.py\n+++ b/Products/CMFPlone/tests/testCatalogTool.py\n@@ -31,7 +31,7 @@\n group2 = \'g2\'\n \n base_content = [\'Members\', \'aggregator\', \'aggregator\',\n-                \'events\', \'news\', TEST_USER_ID, \'doc\']\n+                \'events\', \'news\', \'plone\', TEST_USER_ID, \'doc\']\n \n \n class TestCatalogSetup(PloneTestCase):\ndiff --git a/Products/CMFPlone/tests/testPortalCreation.py b/Products/CMFPlone/tests/testPortalCreation.py\nindex 327f1f4bdd..8dcaea6be8 100644\n--- a/Products/CMFPlone/tests/testPortalCreation.py\n+++ b/Products/CMFPlone/tests/testPortalCreation.py\n@@ -86,6 +86,13 @@ def testWorkflowIsActionProvider(self):\n             \'portal_workflow\' in self.actions.listActionProviders()\n         )\n \n+    def testPortalIsIndexed(self):\n+        # The Plone site should be cataloged\n+        res = self.catalog(getId="plone")\n+        self.assertEqual(len(res), 1)\n+        self.assertEqual(res[0].getId, "plone")\n+        self.assertEqual(res[0].Title, "Welcome to Plone")\n+\n     def testMembersFolderMetaType(self):\n         # Members folder should have meta_type \'Dexterity Container\'\n         members = self.membership.getMembersFolder()\ndiff --git a/news/3314.bugfix b/news/3314.bugfix\nnew file mode 100644\nindex 0000000000..51014203e4\n--- /dev/null\n+++ b/news/3314.bugfix\n@@ -0,0 +1 @@\n+The Plone site root is cataloged\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2021-11-02T09:56:16+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/d07a74b6f7d944a08563c479c68c76fe6bd3b260

Merge pull request #3344 from plone/maurits-create-volto-site

On Zope root, create Volto site by default.

Files changed:
A news/3344.feature
M Products/CMFPlone/browser/admin.py
M Products/CMFPlone/browser/templates/plone-overview.pt

b'diff --git a/Products/CMFPlone/browser/admin.py b/Products/CMFPlone/browser/admin.py\nindex 62301e605a..50fdc7b4ac 100644\n--- a/Products/CMFPlone/browser/admin.py\n+++ b/Products/CMFPlone/browser/admin.py\n@@ -33,6 +33,14 @@\n from zope.schema.interfaces import IVocabularyFactory\n \n import logging\n+import pkg_resources\n+\n+\n+try:\n+    pkg_resources.get_distribution("plone.volto")\n+    HAS_VOLTO = True\n+except pkg_resources.DistributionNotFound:\n+    HAS_VOLTO = False\n LOGGER = logging.getLogger(\'Products.CMFPlone\')\n \n \n@@ -49,6 +57,7 @@ def publishTraverse(self, request, name):\n \n \n class Overview(BrowserView):\n+    has_volto = HAS_VOLTO\n \n     def sites(self, root=None):\n         if root is None:\n@@ -146,10 +155,22 @@ class AddPloneSite(BrowserView):\n         \'plone.app.caching:default\',\n         \'plonetheme.barceloneta:default\',\n     )\n+    # Let\'s have a separate list for Volto.\n+    volto_default_extension_profiles = (\n+        \'plone.app.caching:default\',\n+        # We could choose to not install Barceloneta:\n+        \'plonetheme.barceloneta:default\',\n+        \'plone.volto:default\',\n+        \'plone.volto:default-homepage\'\n+    )\n \n     def profiles(self):\n         base_profiles = []\n         extension_profiles = []\n+        if HAS_VOLTO and not self.request.get(\'classic\'):\n+            selected_extension_profiles = self.volto_default_extension_profiles\n+        else:\n+            selected_extension_profiles = self.default_extension_profiles\n \n         # profiles available for install/uninstall, but hidden at the time\n         # the Plone site is created\n@@ -165,7 +186,7 @@ def profiles(self):\n                info.get(\'for\') in (IPloneSiteRoot, None):\n                 profile_id = info.get(\'id\')\n                 if profile_id not in not_installable:\n-                    if profile_id in self.default_extension_profiles:\n+                    if profile_id in selected_extension_profiles:\n                         info[\'selected\'] = \'selected\'\n                     extension_profiles.append(info)\n \ndiff --git a/Products/CMFPlone/browser/templates/plone-overview.pt b/Products/CMFPlone/browser/templates/plone-overview.pt\nindex b4e78eb4f6..b1a159b988 100644\n--- a/Products/CMFPlone/browser/templates/plone-overview.pt\n+++ b/Products/CMFPlone/browser/templates/plone-overview.pt\n@@ -86,16 +86,25 @@\n             </p>\n             <form id="add-plone-site"\n                     method="get"\n-                    action="#"\n-                    tal:define="site_number python: \'\' if not sites else len(sites) + 1"\n-                    tal:attributes="action string:${context/absolute_url}/@@plone-addsite">\n+                    tal:define="site_number python: \'\' if not sites else len(sites) + 1;\n+                                action string:${context/absolute_url}/@@plone-addsite"\n+                    action="${action}">\n                 <input type="hidden" name="site_id" value="Plone${site_number}" />\n                 <button type="submit"\n                         class="btn btn-${python:\'success\' if sites else \'primary\'}"\n                         i18n:translate="">Create a new Plone site</button>\n+                <tal:comment condition="nothing">\n+                  When we have Volto, the button above will create a Volto site,\n+                  and we need an extra button below to create a Classic Plone site.\n+                </tal:comment>\n                 <a class="btn btn-secondary"\n                     i18n:translate=""\n-                    tal:attributes="href string:${context/absolute_url}/@@plone-addsite?site_id=Plone${site_number}&amp;advanced=1"\n+                    tal:condition="view/has_volto"\n+                    href="${action}?site_id=Plone${site_number}&amp;classic=1"\n+                    >Create Classic Plone site</a>\n+                <a class="btn btn-secondary"\n+                    i18n:translate=""\n+                    href="${action}?site_id=Plone${site_number}&amp;advanced=1"\n                     >Advanced</a>\n             </form>\n         </div>\ndiff --git a/news/3344.feature b/news/3344.feature\nnew file mode 100644\nindex 0000000000..80ac62ffc0\n--- /dev/null\n+++ b/news/3344.feature\n@@ -0,0 +1,2 @@\n+On Zope root, create Volto site by default.\n+[maurits]\n'

