Repository: plone.restapi


Branch: refs/heads/master
Date: 2022-12-26T23:34:43+01:00
Author: Steve Piercy (stevepiercy) <web@stevepiercy.com>
Commit: https://github.com/plone/plone.restapi/commit/88a4b88c5d8cb528ab1ad7a334777efc331f244f

Docs makefile update (#1561)

* Update docs makefile targets
- Add Vale for spell, grammar, and style checker
- Fix linkcheckbroken to emit correct exit code

* Update links to 5.docs.plone.org in preparation for Plone 6 docs launch. We don't have content on Plone 6 Docs for these items yet.

* Add change log entry

Files changed:
A news/1561.doc
M Makefile
M docs/source/contributing/index.md
M docs/source/endpoints/content-rules.md
M docs/source/endpoints/searching.md
M docs/source/endpoints/translations.md
M docs/source/endpoints/types.md
M docs/source/endpoints/vocabularies.md
M docs/source/glossary.md

b'diff --git a/Makefile b/Makefile\nindex 298f70028..61fb4d8f7 100644\n--- a/Makefile\n+++ b/Makefile\n@@ -21,6 +21,7 @@ SPHINXAUTOBUILD = $(realpath bin/sphinx-autobuild)\n DOCS_DIR        = ./docs/source/\n BUILDDIR        = ../_build/\n ALLSPHINXOPTS   = -d $(BUILDDIR)/doctrees $(SPHINXOPTS) .\n+VALEFILES       := $(shell find $(DOCS_DIR) -type f -name "*.md" -print)\n \n all: build-plone-6.0\n \n@@ -135,17 +136,17 @@ docs-linkcheck: bin/python  ## Run linkcheck\n \n .PHONY: docs-linkcheckbroken\n docs-linkcheckbroken: bin/python  ## Run linkcheck and show only broken links\n-\tcd $(DOCS_DIR) && $(SPHINXBUILD) -b linkcheck $(ALLSPHINXOPTS) $(BUILDDIR)/linkcheck | GREP_COLORS=\'0;31\' egrep -wi broken --color=auto || test $$? = 1\n+\tcd $(DOCS_DIR) && $(SPHINXBUILD) -b linkcheck $(ALLSPHINXOPTS) $(BUILDDIR)/linkcheck | GREP_COLORS=\'0;31\' grep -wi "broken\\|redirect" --color=auto  && if test $$? = 0; then exit 1; fi || test $$? = 1\n \t@echo\n \t@echo "Link check complete; look for any errors in the above output " \\\n \t\t"or in $(BUILDDIR)/linkcheck/ ."\n \n-.PHONY: docs-spellcheck\n-docs-spellcheck: bin/python  ## Run spellcheck\n-\tcd $(DOCS_DIR) && LANGUAGE=$* $(SPHINXBUILD) -b spelling -j 4 $(ALLSPHINXOPTS) $(BUILDDIR)/spellcheck/$*\n+.PHONY: docs-vale\n+docs-vale:  ## Run Vale style, grammar, and spell checks\n+\tvale sync\n+\tvale --no-wrap $(VALEFILES)\n \t@echo\n-\t@echo "Spellcheck is finished; look for any errors in the above output " \\\n-\t\t" or in $(BUILDDIR)/spellcheck/ ."\n+\t@echo "Vale is finished; look for any errors in the above output."\n \n .PHONY: netlify\n netlify:\ndiff --git a/docs/source/contributing/index.md b/docs/source/contributing/index.md\nindex fd9c19586..f0a6e50df 100644\n--- a/docs/source/contributing/index.md\n+++ b/docs/source/contributing/index.md\n@@ -53,8 +53,8 @@ Alternatively, you can use Makefile targets:\n `docs-livehtml`\n : Rebuild Sphinx documentation on changes, with live-reload in the browser\n \n-`docs-spellcheck`\n-: Run spellcheck\n+`docs-vale`\n+: Run spell, grammar, and style checks\n \n `docs`\n : Build Docs\ndiff --git a/docs/source/endpoints/content-rules.md b/docs/source/endpoints/content-rules.md\nindex 2f4a5a631..3d1ee3485 100644\n--- a/docs/source/endpoints/content-rules.md\n+++ b/docs/source/endpoints/content-rules.md\n@@ -20,7 +20,7 @@ Content rules can perform routine tasks, including the following.\n -   Delete content after a certain date.\n \n ```{seealso}\n-[Using Content Rules](https://docs.plone.org/working-with-content/managing-content/contentrules.html)\n+[Using Content Rules](https://5.docs.plone.org/working-with-content/managing-content/contentrules.html)\n ```\n \n ```{note}\ndiff --git a/docs/source/endpoints/searching.md b/docs/source/endpoints/searching.md\nindex 6faf81a6b..81f0b135e 100644\n--- a/docs/source/endpoints/searching.md\n+++ b/docs/source/endpoints/searching.md\n@@ -44,7 +44,7 @@ In order to return specific metadata columns, see the documentation of the `meta\n A search invoked on a container will by default *include that container itself* as part of the search results.\n This is the same behavior as displayed by [ZCatalog](https://zope.readthedocs.io/en/latest/zopebook/SearchingZCatalog.html), which is used internally.\n If you add the query string parameter `path.depth=1` to your search, you will only get the *immediate* children of the container, and the container itself won\'t be part of the results.\n-See the Plone documentation on [searching for content within a folder](https://docs.plone.org/develop/plone/searching_and_indexing/query.html#searching-for-content-within-a-folder)\n+See the Plone documentation on [searching for content within a folder](https://5.docs.plone.org/develop/plone/searching_and_indexing/query.html#searching-for-content-within-a-folder)\n for more details.\n ```\n \n@@ -70,7 +70,7 @@ GET /plone/@search?SearchableText=lorem HTTP/1.1\n \n This is nearly identical to the way that queries are passed to the Plone `@@search` browser view, with only a few minor differences.\n \n-For general information on how to query the Plone catalog, please refer to the [Plone Documentation on Querying](https://docs.plone.org/develop/plone/searching_and_indexing/query.html).\n+For general information on how to query the Plone catalog, please refer to the [Plone Documentation on Querying](https://5.docs.plone.org/develop/plone/searching_and_indexing/query.html).\n \n ### Query options\n \ndiff --git a/docs/source/endpoints/translations.md b/docs/source/endpoints/translations.md\nindex 4b49648bd..1e06823c4 100644\n--- a/docs/source/endpoints/translations.md\n+++ b/docs/source/endpoints/translations.md\n@@ -22,7 +22,7 @@ Site interface texts include the configuration menus, error messages, informatio\n Multilingualism in Plone not only allows the managers of the site to configure the site interface texts to be in one language or another, but also to configure Plone to handle multilingual content.\n To achieve that, Plone provides the user interface for managing content translations.\n \n-You can get additional information about the multilingual capabilities of Plone in the [documentation](https://docs.plone.org/develop/plone/i18n/translating_content.html).\n+You can get additional information about the multilingual capabilities of Plone in the [documentation](https://5.docs.plone.org/develop/plone/i18n/translating_content.html).\n \n In connection with those capabilities, `plone.restapi` provides a `@translations` endpoint to handle the translation information of the content objects.\n \ndiff --git a/docs/source/endpoints/types.md b/docs/source/endpoints/types.md\nindex d52702884..d2ea10ead 100644\n--- a/docs/source/endpoints/types.md\n+++ b/docs/source/endpoints/types.md\n@@ -47,7 +47,7 @@ In addition to the above methods we can also do:\n | `DELETE` | `/@type/{type}/{field/fieldset}` | Remove field/fieldset from schema |\n \n ```{note}\n-Schema fields and fieldsets defined by [behaviors](https://docs.plone.org/external/plone.app.dexterity/docs/behaviors/index.html) are immutable and can NOT be changed via this RestAPI endpoint.\n+Schema fields and fieldsets defined by [behaviors](https://5.docs.plone.org/external/plone.app.dexterity/docs/behaviors/index.html) are immutable and can NOT be changed via this RestAPI endpoint.\n See {ref}`dexterity-types` control panel RestAPI endpoint for enabling and disabling behaviors.\n ```\n \ndiff --git a/docs/source/endpoints/vocabularies.md b/docs/source/endpoints/vocabularies.md\nindex 2ba9b1f4b..0d240b410 100644\n--- a/docs/source/endpoints/vocabularies.md\n+++ b/docs/source/endpoints/vocabularies.md\n@@ -43,7 +43,7 @@ Both vocabularies and sources can be context-sensitive.\n This means that they take the context into account and their contents may therefore change depending on the context in which they are invoked.\n \n This section can only provide a basic overview of vocabularies and related concepts.\n-For a more in-depth explanation please refer to the [Plone documentation](https://docs.plone.org/develop/plone/forms/vocabularies.html).\n+For a more in-depth explanation please refer to the [Plone documentation](https://5.docs.plone.org/develop/plone/forms/vocabularies.html).\n \n \n ## Endpoints overview\ndiff --git a/docs/source/glossary.md b/docs/source/glossary.md\nindex 422df0d7c..529f9e9d5 100644\n--- a/docs/source/glossary.md\n+++ b/docs/source/glossary.md\n@@ -16,7 +16,7 @@ REST\n     REST stands for [Representational State Transfer](https://en.wikipedia.org/wiki/Representational_state_transfer). It is a software architectural principle to create loosely coupled web APIs.\n \n workflow\n-    A concept in Plone (and other CMS\'s) whereby a content object can be in a number of states (private, public, etcetera) and uses transitions to change between them (e.g. "publish", "approve", "reject", "retract"). See the [Plone docs on Workflow](https://docs.plone.org/working-with-content/collaboration-and-workflow/)\n+    A concept in Plone (and other CMS\'s) whereby a content object can be in a number of states (private, public, etcetera) and uses transitions to change between them (e.g. "publish", "approve", "reject", "retract"). See the [Plone docs on Workflow](https://5.docs.plone.org/working-with-content/collaboration-and-workflow/)\n \n HTTP-Request\n HTTP Request\ndiff --git a/news/1561.doc b/news/1561.doc\nnew file mode 100644\nindex 000000000..50b0132bc\n--- /dev/null\n+++ b/news/1561.doc\n@@ -0,0 +1 @@\n+Update makefile to use Vale for spell, grammar, and style checking. Fix linkcheckbroken to return the correct exit code for broken links. Prepare links ot use 5.docs.plone.org in preparation for Plone 6 docs launch. [stevepiercy]\n'

