Repository: plone.restapi


Branch: refs/heads/master
Date: 2019-02-04T17:29:46+01:00
Author: Elio Schmutz (elioschmutz) <e.schmutz@4teamwork.ch>
Commit: https://github.com/plone/plone.restapi/commit/7bab99ce2a533509bec6260c63df8d8d247599b4

fix flake8

Files changed:
M src/plone/restapi/services/content/tus.py

b'diff --git a/src/plone/restapi/services/content/tus.py b/src/plone/restapi/services/content/tus.py\nindex 49139a99..5bf9d612 100644\n--- a/src/plone/restapi/services/content/tus.py\n+++ b/src/plone/restapi/services/content/tus.py\n@@ -37,7 +37,7 @@ class UploadOptions(Service):\n \n     def reply(self):\n         for name, value in TUS_OPTIONS_RESPONSE_HEADERS.items():\n-                    self.request.response.setHeader(name, value)\n+            self.request.response.setHeader(name, value)\n         return super(UploadOptions, self).reply()\n \n \n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2019-02-04T17:30:14+01:00
Author: Elio Schmutz (elioschmutz) <e.schmutz@4teamwork.ch>
Commit: https://github.com/plone/plone.restapi/commit/1cf74c7245102af9f7417bc1ae1146b9beaa2847

Do not fail on serializing types with fields having non-parametrized widgets.

Files changed:
M CHANGES.rst
M src/plone/restapi/tests/test_types.py
M src/plone/restapi/types/utils.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 611034a5..fea24a00 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -6,6 +6,10 @@ Changelog\n \n Bugfixes:\n \n+- Do not fail on serializing types with fields having non-parametrized widgets.\n+  Fixes issue `664 <https://github.com/plone/plone.restapi/issues/664>`_.\n+  [elioschmutz]\n+\n - Tests: retry request on ConnectionError.\n   On Jenkins we often get one ConnectionError in a seemingly random test.\n   Retrying after a short pause helps.\ndiff --git a/src/plone/restapi/tests/test_types.py b/src/plone/restapi/tests/test_types.py\nindex 1ed82b54..90e2a628 100644\n--- a/src/plone/restapi/tests/test_types.py\n+++ b/src/plone/restapi/tests/test_types.py\n@@ -18,6 +18,7 @@\n from plone.restapi.types.utils import get_jsonschema_for_fti\n from plone.restapi.types.utils import get_jsonschema_for_portal_type\n from plone.restapi.types.utils import get_jsonschema_properties\n+from z3c.form.browser.text import TextWidget\n \n \n class IDummySchema(model.Schema):\n@@ -58,8 +59,13 @@ class ITaggedValuesSchema(model.Schema):\n         description=u"",\n     )\n \n-    another_field = schema.TextLine(title=u"Tagged Values widget params")\n-    form.widget(\'another_field\', a_param=\'some_value\')\n+    parametrized_widget_field = schema.TextLine(\n+        title=u"Parametrized widget field")\n+    form.widget(\'parametrized_widget_field\', a_param=\'some_value\')\n+\n+    not_parametrized_widget_field = schema.TextLine(\n+        title=u"No parametrized widget field")\n+    form.widget(not_parametrized_widget_field=TextWidget)\n \n \n class TestJsonSchemaUtils(TestCase):\n@@ -182,7 +188,19 @@ def test_get_jsonschema_with_widget_params(self):\n         )\n         self.assertEqual(\n             \'some_value\',\n-            jsonschema[\'properties\'][\'another_field\'][\'a_param\']\n+            jsonschema[\'properties\'][\'parametrized_widget_field\'][\'a_param\']\n+        )\n+\n+    def test_do_not_fail_with_non_parametrized_widget(self):\n+        ttool = getToolByName(self.portal, \'portal_types\')\n+        jsonschema = get_jsonschema_for_fti(\n+            ttool[\'TaggedDocument\'],\n+            self.portal,\n+            self.request\n+        )\n+        self.assertEqual(\n+            u\'No parametrized widget field\',\n+            jsonschema[\'properties\'][\'not_parametrized_widget_field\'][\'title\']\n         )\n \n \ndiff --git a/src/plone/restapi/types/utils.py b/src/plone/restapi/types/utils.py\nindex 44e3b703..cf08b266 100644\n--- a/src/plone/restapi/types/utils.py\n+++ b/src/plone/restapi/types/utils.py\n@@ -16,6 +16,7 @@\n from collections import OrderedDict\n from copy import copy\n from plone.autoform.form import AutoExtensibleForm\n+from plone.autoform.interfaces import IParameterizedWidget\n from plone.autoform.interfaces import WIDGETS_KEY\n from plone.dexterity.utils import getAdditionalSchemata\n from plone.restapi.serializer.converters import json_compatible\n@@ -139,7 +140,7 @@ def get_tagged_values(schemas, key):\n         tagged_values = mergedTaggedValueDict(schema, key)\n         for field_name in schema:\n             widget = tagged_values.get(field_name)\n-            if widget and widget.params:\n+            if IParameterizedWidget.providedBy(widget) and widget.params:\n                 params[field_name] = widget.params\n     return params\n \n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2019-02-04T22:28:12+01:00
Author: Timo Stollenwerk (tisto) <tisto@users.noreply.github.com>
Commit: https://github.com/plone/plone.restapi/commit/2edc82a45cefe177f2739fc79623f9946695a14e

Merge pull request #665 from plone/es-664-fix-widget-params

Do not fail on serializing types with fields having non-parametrized widgets.

Files changed:
M CHANGES.rst
M src/plone/restapi/tests/test_types.py
M src/plone/restapi/types/utils.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex c09eb81c..941a2724 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -6,6 +6,10 @@ Changelog\n \n Bugfixes:\n \n+- Do not fail on serializing types with fields having non-parametrized widgets.\n+  Fixes issue `664 <https://github.com/plone/plone.restapi/issues/664>`_.\n+  [elioschmutz]\n+\n - Tests: retry request on ConnectionError.\n   On Jenkins we often get one ConnectionError in a seemingly random test.\n   Retrying after a short pause helps.\ndiff --git a/src/plone/restapi/tests/test_types.py b/src/plone/restapi/tests/test_types.py\nindex 1ed82b54..90e2a628 100644\n--- a/src/plone/restapi/tests/test_types.py\n+++ b/src/plone/restapi/tests/test_types.py\n@@ -18,6 +18,7 @@\n from plone.restapi.types.utils import get_jsonschema_for_fti\n from plone.restapi.types.utils import get_jsonschema_for_portal_type\n from plone.restapi.types.utils import get_jsonschema_properties\n+from z3c.form.browser.text import TextWidget\n \n \n class IDummySchema(model.Schema):\n@@ -58,8 +59,13 @@ class ITaggedValuesSchema(model.Schema):\n         description=u"",\n     )\n \n-    another_field = schema.TextLine(title=u"Tagged Values widget params")\n-    form.widget(\'another_field\', a_param=\'some_value\')\n+    parametrized_widget_field = schema.TextLine(\n+        title=u"Parametrized widget field")\n+    form.widget(\'parametrized_widget_field\', a_param=\'some_value\')\n+\n+    not_parametrized_widget_field = schema.TextLine(\n+        title=u"No parametrized widget field")\n+    form.widget(not_parametrized_widget_field=TextWidget)\n \n \n class TestJsonSchemaUtils(TestCase):\n@@ -182,7 +188,19 @@ def test_get_jsonschema_with_widget_params(self):\n         )\n         self.assertEqual(\n             \'some_value\',\n-            jsonschema[\'properties\'][\'another_field\'][\'a_param\']\n+            jsonschema[\'properties\'][\'parametrized_widget_field\'][\'a_param\']\n+        )\n+\n+    def test_do_not_fail_with_non_parametrized_widget(self):\n+        ttool = getToolByName(self.portal, \'portal_types\')\n+        jsonschema = get_jsonschema_for_fti(\n+            ttool[\'TaggedDocument\'],\n+            self.portal,\n+            self.request\n+        )\n+        self.assertEqual(\n+            u\'No parametrized widget field\',\n+            jsonschema[\'properties\'][\'not_parametrized_widget_field\'][\'title\']\n         )\n \n \ndiff --git a/src/plone/restapi/types/utils.py b/src/plone/restapi/types/utils.py\nindex 44e3b703..cf08b266 100644\n--- a/src/plone/restapi/types/utils.py\n+++ b/src/plone/restapi/types/utils.py\n@@ -16,6 +16,7 @@\n from collections import OrderedDict\n from copy import copy\n from plone.autoform.form import AutoExtensibleForm\n+from plone.autoform.interfaces import IParameterizedWidget\n from plone.autoform.interfaces import WIDGETS_KEY\n from plone.dexterity.utils import getAdditionalSchemata\n from plone.restapi.serializer.converters import json_compatible\n@@ -139,7 +140,7 @@ def get_tagged_values(schemas, key):\n         tagged_values = mergedTaggedValueDict(schema, key)\n         for field_name in schema:\n             widget = tagged_values.get(field_name)\n-            if widget and widget.params:\n+            if IParameterizedWidget.providedBy(widget) and widget.params:\n                 params[field_name] = widget.params\n     return params\n \n'

